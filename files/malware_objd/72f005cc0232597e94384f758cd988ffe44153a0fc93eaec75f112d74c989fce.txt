
72f005cc0232597e94384f758cd988ffe44153a0fc93eaec75f112d74c989fce.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	aam    0xcc
  411002:	repz add BYTE PTR [ecx+edx*8+0x5a],ch
  411007:	out    0x51,al
  411009:	retf   
  41100a:	sbb    ecx,esi
  41100c:	in     eax,dx
  41100d:	push   esp
  41100e:	mov    ah,0xad
  411010:	aas    
  411011:	rcl    DWORD PTR [esi-0x669c430d],1
  411017:	dec    edx
  411018:	ja     0x410ff8
  41101a:	and    esi,esp
  41101c:	jecxz  0x411014
  41101e:	add    al,0x24
  411020:	adc    eax,0xf835b2f0
  411025:	inc    edi
  411026:	push   ebp
  411027:	push   0x36
  411029:	mov    bl,0x7b
  41102b:	mov    ch,0x42
  41102d:	jb     0x410ff0
  41102f:	jne    0x41109d
  411031:	cmc    
  411032:	xor    BYTE PTR [ecx],bl
  411034:	fxch   st(5)
  411036:	(bad)  [ebp+0x4dc3305c]
  41103c:	sub    BYTE PTR [ebp-0x15dfe2a6],bl
  411042:	mov    eax,ds:0xacad62c7
  411047:	jmp    0x411068
  411049:	nop
  41104a:	adc    eax,0xd78e980
  41104f:	cmp    eax,0x49a4ac2e
  411054:	mov    BYTE PTR [eax*1+0x17f2d1df],al
  41105b:	daa    
  41105c:	into   
  41105d:	and    al,0x36
  41105f:	xchg   esp,eax
  411060:	jnp    0x411043
  411062:	ins    DWORD PTR es:[edi],dx
  411063:	addr16 sti 
  411065:	pop    edi
  411066:	jae    0x411062
  411068:	scas   al,BYTE PTR es:[edi]
  411069:	(bad)  
  41106a:	test   eax,0x1e26c23f
  41106f:	aam    0xf0
  411071:	pop    ecx
  411072:	mov    edx,0x92371d70
  411077:	jp     0x4110f4
  411079:	pop    ds
  41107a:	or     DWORD PTR [esi-0x7fea4751],ecx
  411080:	shr    cl,cl
  411082:	clc    
  411083:	arpl   WORD PTR [esi],dx
  411085:	adc    eax,0xb2a90fac
  41108a:	sbb    BYTE PTR [ebp-0x1e43c278],dh
  411090:	mov    edx,0x56c364d7
  411095:	dec    edx
  411096:	lods   al,BYTE PTR ds:[esi]
  411097:	nop
  411098:	dec    ecx
  411099:	les    edi,FWORD PTR ds:0x7a468243
  41109f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a0:	psrlw  mm0,QWORD PTR [esi+0x7d]
  4110a4:	xchg   BYTE PTR [ebp-0x4f],dl
  4110a7:	sub    al,0x8e
  4110a9:	test   al,0xb
  4110ab:	int    0x26
  4110ad:	mov    ch,0x92
  4110af:	sub    ah,BYTE PTR [eax]
  4110b1:	std    
  4110b2:	(bad)  
  4110b4:	fimul  WORD PTR [bx+si]
  4110b7:	in     al,dx
  4110b8:	push   edi
  4110b9:	jnp    0x411071
  4110bb:	push   ds
  4110bc:	and    ecx,DWORD PTR [eax-0x1f]
  4110bf:	test   eax,0x462398a8
  4110c4:	add    eax,0xbbe8d81d
  4110c9:	dec    ecx
  4110ca:	adc    esp,DWORD PTR [ebp+0x483a266f]
  4110d0:	in     eax,dx
  4110d1:	neg    bh
  4110d3:	add    ch,BYTE PTR [ebx]
  4110d5:	popa   
  4110d6:	int3   
  4110d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110d8:	shl    DWORD PTR [esi-0x448231ea],0x76
  4110df:	arpl   WORD PTR [ebx+ebp*8],cx
  4110e2:	sub    BYTE PTR [ebx+0x31],ah
  4110e5:	lods   al,BYTE PTR ds:[esi]
  4110e6:	inc    edi
  4110e7:	mov    dl,0x40
  4110e9:	sbb    al,BYTE PTR [edi+edx*2]
  4110ec:	in     eax,0x6c
  4110ee:	dec    ecx
  4110ef:	shl    BYTE PTR [esi],0xef
  4110f2:	pop    ebp
  4110f3:	jo     0x41109c
  4110f5:	or     bl,BYTE PTR [ebx]
  4110f7:	and    al,0x1b
  4110f9:	pop    esp
  4110fa:	sbb    bl,BYTE PTR [edi]
  4110fc:	jp     0x41113b
  4110fe:	xchg   ecx,eax
  4110ff:	cwde   
  411100:	repnz inc ecx
  411102:	scas   al,BYTE PTR es:[edi]
  411103:	add    ebp,edx
  411105:	mov    ecx,0x9705eb45
  41110a:	pop    esi
  41110b:	sub    BYTE PTR [ebp-0x4b3436a1],cl
  411111:	rcl    BYTE PTR [ebp+edx*4+0x48],1
  411115:	out    0xb7,al
  411117:	aad    0xf3
  411119:	enter  0xbc30,0xb4
  41111d:	jnp    0x4110a4
  41111f:	retf   
  411120:	gs mov esi,0x31df3404
  411126:	or     eax,0x653e3a8b
  41112b:	in     al,0xbf
  41112d:	js     0x4110e4
  41112f:	xchg   edi,eax
  411130:	je     0x4110ec
  411132:	or     DWORD PTR [edx-0x2ceb0414],edx
  411138:	push   ebp
  411139:	dec    ebp
  41113a:	pop    ss
  41113b:	outs   dx,BYTE PTR ds:[esi]
  41113c:	mov    ebp,0x88307ced
  411141:	pop    edx
  411142:	fsub   DWORD PTR [esi-0x342f1040]
  411148:	lods   eax,DWORD PTR ss:[esi]
  41114a:	rcl    DWORD PTR [ebx],cl
  41114c:	xchg   edx,eax
  41114d:	mov    esp,0x1f886f33
  411152:	or     dh,BYTE PTR [esi+0x5c]
  411155:	xchg   ebp,eax
  411156:	cmc    
  411157:	cmc    
  411158:	(bad)  
  411159:	jle    0x4111bf
  41115b:	int    0xd2
  41115d:	cmp    BYTE PTR [ecx],ah
  41115f:	mov    cl,0xbb
  411161:	sub    ebx,eax
  411163:	xor    ecx,esp
  411165:	adc    DWORD PTR [edx-0x5a],edi
  411168:	dec    edx
  411169:	jmp    0x4111d0
  41116b:	fisub  DWORD PTR [ecx]
  41116d:	mov    dl,0x66
  41116f:	sahf   
  411170:	repnz ss push esp
  411173:	lds    esi,FWORD PTR [edx]
  411175:	les    esp,FWORD PTR [ebp-0x3a]
  411178:	out    0x88,eax
  41117a:	sbb    esi,ebp
  41117c:	sub    DWORD PTR [ebx-0x4],edi
  41117f:	(bad)  [ebp+eiz*4-0x73]
  411183:	push   ecx
  411184:	add    al,0x68
  411186:	(bad)  
  411187:	mov    edi,0x37be2687
  41118c:	pop    esp
  41118d:	push   ecx
  41118e:	out    dx,al
  41118f:	and    eax,0xf66c88f6
  411194:	stos   DWORD PTR es:[edi],eax
  411195:	das    
  411196:	lahf   
  411197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411198:	mov    cl,0x55
  41119a:	mov    DWORD PTR [eax],edx
  41119c:	jns    0x4111d3
  41119e:	jp     0x4111bc
  4111a0:	mov    edx,0x2453c60c
  4111a5:	sbb    al,0x57
  4111a7:	add    ebp,esi
  4111a9:	or     edx,edi
  4111ab:	sar    DWORD PTR [ebx],0xf3
  4111ae:	pop    esp
  4111af:	fst    DWORD PTR [ebx+0x4b30e515]
  4111b5:	dec    edi
  4111b6:	mov    ds:0x368a2daf,al
  4111bb:	and    cl,dh
  4111bd:	in     al,dx
  4111be:	push   esp
  4111bf:	andps  xmm5,XMMWORD PTR [edx+esi*2]
  4111c3:	aaa    
  4111c4:	dec    esp
  4111c5:	outs   dx,DWORD PTR ds:[esi]
  4111c6:	scas   al,BYTE PTR es:[edi]
  4111c7:	mov    BYTE PTR [esi+edi*4],dh
  4111ca:	mov    ebp,DWORD PTR [ecx]
  4111cc:	xor    dl,bl
  4111ce:	mov    esp,0xfedbb766
  4111d3:	loope  0x4111a8
  4111d5:	lock lock test al,0x74
  4111d9:	cmp    esi,DWORD PTR [edi-0x18a622e5]
  4111df:	xlat   BYTE PTR ds:[ebx]
  4111e0:	sub    ah,BYTE PTR [edx+edi*8]
  4111e3:	jnp    0x4111c9
  4111e5:	cwde   
  4111e6:	jge    0x4111e6
  4111e8:	push   ebx
  4111e9:	stc    
  4111ea:	mov    eax,0x1c0ab529
  4111ef:	es cmp al,0x7
  4111f2:	scas   eax,DWORD PTR es:[edi]
  4111f3:	mov    ch,0x84
  4111f5:	sub    ah,BYTE PTR [edx-0x6ca51fef]
  4111fb:	arpl   ax,ax
  4111fd:	sub    al,0x1d
  4111ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411200:	push   ecx
  411201:	aas    
  411202:	and    DWORD PTR [esi-0x10],esi
  411205:	push   edi
  411206:	imul   DWORD PTR [ebx]
  411208:	or     al,0xa3
  41120a:	stc    
  41120b:	pop    eax
  41120c:	dec    esp
  41120d:	(bad)  
  41120e:	mov    bx,0x2afd
  411212:	cmp    al,0x99
  411214:	faddp  st(0),st
  411216:	pop    ds
  411217:	pop    esi
  411218:	stc    
  411219:	loope  0x4111f1
  41121b:	jbe    0x411269
  41121d:	xchg   ebp,eax
  41121e:	hlt    
  41121f:	mov    bh,0xd6
  411221:	std    
  411222:	(bad)  
  411223:	arpl   WORD PTR [esi],ax
  411225:	add    BYTE PTR [eax+edx*4],bh
  411228:	mov    BYTE PTR [eax-0x2e],0x57
  41122c:	mov    eax,ds:0x227cf615
  411231:	call   0xec07:0xde857766
  411238:	jecxz  0x411215
  41123a:	mov    ds:0x9e79bf6d,al
  41123f:	jl     0x411246
  411241:	mov    esi,0x8695de9c
  411246:	scas   al,BYTE PTR es:[edi]
  411247:	shl    BYTE PTR [ecx],0xb
  41124a:	fs cmp eax,0xae197fc9
  411250:	dec    ebp
  411251:	push   ds
  411252:	rcr    DWORD PTR [edi],1
  411254:	and    dl,ch
  411256:	add    edx,DWORD PTR [edi+edx*8+0x68]
  41125a:	sbb    eax,0x14e439ae
  41125f:	jne    0x41120e
  411261:	push   eax
  411262:	dec    edi
  411263:	fwait
  411264:	jmp    0x41125f
  411266:	stc    
  411267:	xor    al,0x44
  411269:	mov    al,0x12
  41126b:	push   ecx
  41126c:	mov    ah,0x60
  41126e:	pop    ebx
  41126f:	lods   eax,DWORD PTR ds:[esi]
  411270:	test   eax,0x31553566
  411275:	mov    al,0xf1
  411277:	jl     0x4112ae
  411279:	mov    ah,0x93
  41127b:	lock dec esp
  41127d:	outs   dx,DWORD PTR ds:[esi]
  41127e:	ror    eax,0xdf
  411281:	dec    ecx
  411282:	std    
  411283:	push   eax
  411284:	repz (bad) 
  411286:	pushf  
  411287:	call   0xed00f8f9
  41128c:	xor    BYTE PTR [ebp+esi*2+0x5e],al
  411290:	repnz inc esi
  411292:	lea    ecx,[eax-0x4c]
  411295:	iret   
  411296:	jno    0x411286
  411298:	jbe    0x41123f
  41129a:	or     eax,0xb847581a
  41129f:	sub    bh,BYTE PTR [ebx]
  4112a1:	xlat   BYTE PTR ds:[ebx]
  4112a2:	pop    ds
  4112a3:	in     al,dx
  4112a4:	push   ss
  4112a5:	call   0xa7f3:0x278b264d
  4112ac:	pop    DWORD PTR [ebx]
  4112ae:	mov    ds:0xa6f6ac80,eax
  4112b3:	xchg   esi,eax
  4112b4:	fmulp  st(4),st
  4112b6:	dec    BYTE PTR [esi]
  4112b8:	rol    DWORD PTR [eax+0x47392ceb],1
  4112be:	aad    0x61
  4112c0:	fld    DWORD PTR [ebx-0x13]
  4112c3:	and    cl,BYTE PTR [edi+edx*8-0x58755cb4]
  4112ca:	add    al,0xe2
  4112cc:	mov    esi,0xaa1e8f6a
  4112d1:	jno    0x4112e7
  4112d3:	lods   eax,DWORD PTR ds:[esi]
  4112d4:	sahf   
  4112d5:	fcomp  DWORD PTR [ebx+0x14]
  4112d8:	pop    es
  4112d9:	mov    fs,edi
  4112db:	shl    DWORD PTR ds:0x65507dae,cl
  4112e1:	ins    BYTE PTR es:[edi],dx
  4112e2:	dec    ebx
  4112e3:	adc    DWORD PTR [edx-0x120d2130],eax
  4112e9:	pop    esp
  4112ea:	sub    BYTE PTR [edi-0x5599d84c],al
  4112f0:	clc    
  4112f1:	jle    0x4112b5
  4112f3:	gs mov dh,0x90
  4112f6:	add    bh,BYTE PTR [esi]
  4112f8:	sub    edx,DWORD PTR [edi-0x45ee9966]
  4112fe:	je     0x4112ba
  411300:	pop    es
  411301:	sub    ebp,edi
  411303:	push   esp
  411304:	fwait
  411305:	pop    esi
  411306:	xor    edx,DWORD PTR [edx+edi*8]
  411309:	fst    QWORD PTR [eax]
  41130b:	in     eax,dx
  41130c:	iret   
  41130d:	aad    0xfd
  41130f:	jb     0x411311
  411311:	jnp    0x4112ad
  411313:	sbb    ecx,DWORD PTR es:[ebp-0x642ea576]
  41131a:	mov    edi,0xf9794650
  41131f:	xor    eax,DWORD PTR [edi-0x29c81872]
  411325:	(bad)  
  411327:	jl     0x4112c8
  411329:	aad    0x74
  41132b:	inc    edx
  41132c:	inc    esp
  41132d:	jl     0x4113a8
  41132f:	ror    DWORD PTR [edi-0xe],cl
  411332:	and    BYTE PTR [edi+0x4b],dh
  411335:	cmp    BYTE PTR [edx+0x87b7e8f],bh
  41133b:	inc    ecx
  41133c:	or     eax,0x4c061af5
  411341:	xlat   BYTE PTR ds:[ebx]
  411342:	xor    eax,0xfeebe476
  411347:	jno    0x411318
  411349:	lock sub eax,0x143aed24
  41134f:	ins    BYTE PTR es:[edi],dx
  411350:	mov    al,ds:0x739a5bf3
  411355:	cmp    edi,DWORD PTR [eax+0x53]
  411358:	push   ss
  411359:	inc    DWORD PTR [edx]
  41135b:	mov    ?,WORD PTR [esi-0x3f]
  41135e:	add    eax,0x9ee62e37
  411363:	pop    ebp
  411364:	(bad)  
  411365:	jmp    0x3dc75324
  41136a:	cmp    ebx,DWORD PTR [ecx-0x2d746f1c]
  411370:	retw   
  411372:	push   ecx
  411373:	lahf   
  411374:	out    0xca,eax
  411376:	mul    DWORD PTR [ebx+esi*2+0x17]
  41137a:	sbb    ch,BYTE PTR [ebx-0x281262c8]
  411380:	inc    edi
  411381:	out    0xb,eax
  411383:	ins    DWORD PTR es:[edi],dx
  411384:	mov    DWORD PTR [edi-0x6],edi
  411387:	or     eax,0xd42a901b
  41138c:	arpl   WORD PTR [eax+0x5e],di
  41138f:	sahf   
  411390:	fistp  DWORD PTR [edx-0x73]
  411393:	hlt    
  411394:	mov    dh,BYTE PTR [ebx]
  411396:	push   0xffffffec
  411398:	pop    ds
  411399:	jg     0x4113de
  41139b:	sbb    DWORD PTR [ecx],0x1f5200d7
  4113a1:	xor    DWORD PTR [edx+ecx*8],ebp
  4113a4:	and    ch,BYTE PTR [ebx+0x1392b563]
  4113aa:	sub    al,0x83
  4113ac:	dec    edx
  4113ad:	and    ebx,edx
  4113af:	in     al,0x15
  4113b1:	aam    0xc0
  4113b3:	push   edi
  4113b4:	gs pop esi
  4113b6:	push   es
  4113b7:	fs and bl,dl
  4113ba:	dec    edx
  4113bb:	stos   DWORD PTR es:[edi],eax
  4113bc:	mov    edi,0xeec734bc
  4113c1:	sti    
  4113c2:	pop    edi
  4113c3:	repnz mov BYTE PTR [ebp+edi*8+0x61361d4b],0x8a
  4113cc:	les    esp,FWORD PTR [ebx+ebx*1+0x6f8e270]
  4113d3:	push   0xcb251a2f
  4113d8:	pop    eax
  4113d9:	and    al,0x29
  4113db:	in     al,0xb4
  4113dd:	mov    al,cl
  4113df:	push   eax
  4113e0:	imul   esi,ecx,0xfe6797dc
  4113e6:	fistp  WORD PTR [edx]
  4113e8:	add    al,0x9c
  4113ea:	out    0x32,al
  4113ec:	dec    esi
  4113ed:	into   
  4113ee:	enter  0x8c8b,0x7d
  4113f2:	fadd   DWORD PTR [ecx]
  4113f4:	aaa    
  4113f5:	(bad)  [ebp+0x23]
  4113f8:	inc    eax
  4113f9:	(bad)
  4113fc:	gs jmp 0x411446
  4113ff:	icebp  
  411400:	popf   
  411401:	jno    0x41141e
  411403:	inc    esp
  411404:	cmp    al,0x5f
  411406:	add    eax,0xcf89ace
  41140b:	mov    esi,0x9688c125
  411410:	stc    
  411411:	leave  
  411412:	push   ds
  411413:	rcl    DWORD PTR [ebx+0x1a],0x36
  411417:	jo     0x41147b
  411419:	and    al,0xf0
  41141b:	mov    ecx,0x64e4bcac
  411420:	push   0x19
  411422:	mov    edx,0x1a4cb5ba
  411427:	xchg   ecx,eax
  411428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411429:	inc    edx
  41142a:	les    ebp,FWORD PTR [esp+ecx*2]
  41142d:	cmc    
  41142e:	fdiv   st,st(6)
  411430:	mov    al,ds:0xed885213
  411435:	jo     0x41144e
  411437:	std    
  411438:	sbb    eax,0xb7800047
  41143d:	fwait
  41143e:	and    eax,0xb155bcb7
  411443:	push   edi
  411444:	sahf   
  411445:	out    0x19,al
  411447:	int3   
  411448:	nop
  411449:	scas   eax,DWORD PTR es:[edi]
  41144a:	ret    0xbe25
  41144d:	retf   
  41144e:	bound  esi,QWORD PTR [ebx+ebx*2+0x19373859]
  411455:	bound  ecx,QWORD PTR [esi]
  411457:	sbb    bl,al
  411459:	stos   DWORD PTR es:[edi],eax
  41145a:	leave  
  41145b:	cmp    dl,BYTE PTR [eax-0x6b]
  41145e:	jne    0x411444
  411460:	shl    DWORD PTR [ebp+ebx*8+0x76c0a4be],cl
  411467:	and    DWORD PTR [edx-0x10],esi
  41146a:	jle    0x4114ca
  41146c:	dec    edx
  41146d:	inc    edx
  41146e:	fisubr WORD PTR [ecx+0x35]
  411471:	test   BYTE PTR gs:[ebx+esi*2],dh
  411475:	hlt    
  411476:	(bad)  
  411477:	sub    DWORD PTR [ecx],edx
  411479:	mov    ah,0x6f
  41147b:	popf   
  41147c:	cmp    DWORD PTR [edi+0x39b70c87],edx
  411482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411483:	fsubp  st(1),st
  411485:	push   esi
  411486:	push   ss
  411487:	js     0x41144d
  411489:	stos   DWORD PTR es:[edi],eax
  41148a:	sar    BYTE PTR [eax+0x3c],cl
  41148d:	lahf   
  41148e:	lock inc esp
  411490:	mov    eax,0xe87f8423
  411495:	call   0xe46f:0x2e3ee9cd
  41149c:	fbld   TBYTE PTR gs:[edx-0x46c7d752]
  4114a3:	xor    BYTE PTR [ebx-0x36],0xdc
  4114a7:	test   al,0x50
  4114a9:	inc    esp
  4114aa:	ds mov ebx,0x1cd72506
  4114b0:	jmp    0x6c9:0xb5e7429d
  4114b7:	cmp    dl,ch
  4114b9:	pop    edi
  4114ba:	xor    al,0xf9
  4114bc:	imul   eax,eax,0x43bfe8e4
  4114c2:	mov    esi,0xd991cc8a
  4114c7:	xor    edx,ebx
  4114c9:	pushf  
  4114ca:	ret    0x3637
  4114cd:	sub    al,0xd0
  4114cf:	pop    esp
  4114d0:	cmc    
  4114d1:	fld    TBYTE PTR [edi]
  4114d3:	xor    BYTE PTR [ecx],0xf6
  4114d6:	daa    
  4114d7:	sti    
  4114d8:	fs jne 0x411480
  4114db:	sbb    dl,BYTE PTR [ecx]
  4114dd:	(bad)  
  4114de:	mov    al,ds:0x17f4dd3a
  4114e3:	add    edx,edi
  4114e5:	clc    
  4114e6:	push   0x43
  4114e8:	seto   BYTE PTR [eax]
  4114eb:	sbb    ah,dh
  4114ed:	and    al,0xbc
  4114ef:	cmp    DWORD PTR [ebp-0x1e5500e9],edi
  4114f5:	rcl    eax,cl
  4114f7:	outs   dx,BYTE PTR ds:[esi]
  4114f8:	fwait
  4114f9:	popa   
  4114fa:	mov    dl,0x25
  4114fc:	dec    eax
  4114fd:	(bad)  
  4114fe:	clc    
  4114ff:	retf   
  411500:	imul   ecx,esi,0xffffffb3
  411503:	pop    ss
  411504:	packsswb mm2,mm3
  411507:	fistp  WORD PTR [esi]
  411509:	(bad)  
  41150a:	dec    eax
  41150b:	mov    al,ds:0x7f7e7faf
  411510:	jae    0x41153b
  411512:	mov    ebx,0x54d9f5a7
  411517:	mov    cl,0x45
  411519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151a:	int3   
  41151b:	hlt    
  41151c:	vaddss xmm4,xmm4,DWORD PTR [ebx]
  411520:	xor    DWORD PTR [eax+0x1c],0xffffff82
  411524:	xor    eax,0x43eaa83d
  411529:	push   es
  41152a:	adc    ah,BYTE PTR [edi+0xb6e2e86]
  411530:	sub    ah,bh
  411532:	or     eax,DWORD PTR [ebx+eax*8]
  411535:	retf   
  411536:	pop    ebx
  411537:	jns    0x411571
  411539:	xchg   ebp,eax
  41153a:	jae    0x41159e
  41153c:	add    ah,dh
  41153e:	jno    0x41155b
  411540:	pop    edi
  411541:	dec    esp
  411542:	adc    BYTE PTR [ebx],ch
  411544:	mov    bh,0xa1
  411546:	mov    ecx,0x24669445
  41154b:	iret   
  41154c:	dec    esi
  41154d:	retf   
  41154e:	push   ebx
  41154f:	outs   dx,BYTE PTR ds:[esi]
  411550:	inc    esp
  411551:	dec    ecx
  411552:	sahf   
  411553:	pop    esp
  411554:	cmp    eax,0x753320b1
  411559:	xor    al,0x55
  41155b:	and    ebx,DWORD PTR [eax+edx*8]
  41155e:	push   ss
  41155f:	jne    0x4114f3
  411561:	lea    edi,[esi-0x6d]
  411564:	dec    eax
  411565:	inc    ecx
  411566:	pushf  
  411567:	xchg   BYTE PTR [ebx-0x75],ch
  41156a:	and    DWORD PTR [ebx],ebp
  41156c:	clc    
  41156d:	into   
  41156e:	mov    esp,DWORD PTR [esi+0x30]
  411571:	in     eax,0x59
  411573:	aaa    
  411574:	inc    edx
  411575:	mov    ds:0x817f096,eax
  41157a:	fmul   DWORD PTR [ebx]
  41157c:	and    eax,0x43df7493
  411581:	xor    bl,BYTE PTR [edx+0x18502214]
  411587:	test   BYTE PTR [eax],ch
  411589:	push   edi
  41158a:	outs   dx,DWORD PTR ds:[esi]
  41158b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158c:	inc    eax
  41158d:	sub    bl,BYTE PTR [edi-0x2df1639b]
  411593:	iret   
  411594:	sbb    eax,0x8889c714
  411599:	hlt    
  41159a:	sub    ecx,DWORD PTR [edi]
  41159c:	lock push esi
  41159e:	and    dh,cl
  4115a0:	arpl   di,bp
  4115a2:	push   ebp
  4115a3:	scas   al,BYTE PTR es:[edi]
  4115a4:	xor    esi,DWORD PTR [edx]
  4115a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a7:	xor    eax,0x56b7d3cc
  4115ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ad:	int3   
  4115ae:	int3   
  4115af:	gs jns 0x4115d5
  4115b2:	in     al,dx
  4115b3:	and    al,0x59
  4115b5:	inc    ebx
  4115b6:	xor    esi,eax
  4115b8:	sbb    edx,DWORD PTR [eax+0x35715096]
  4115be:	mov    cs,eax
  4115c0:	sbb    BYTE PTR [ebx],0xec
  4115c3:	out    0xb1,eax
  4115c5:	push   ds
  4115c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115c7:	sub    eax,0x2fc178e0
  4115cc:	in     al,0x6a
  4115ce:	leave  
  4115cf:	addr16 sbb al,0xc9
  4115d2:	out    0xa8,al
  4115d4:	adc    ah,BYTE PTR [esi]
  4115d6:	xchg   ebp,eax
  4115d7:	dec    esp
  4115d8:	adc    dh,BYTE PTR [esi+0x0]
  4115db:	jbe    0x411655
  4115dd:	fwait
  4115de:	int3   
  4115df:	nop
  4115e0:	mov    al,ds:0x545ceae3
  4115e5:	cmp    esi,esi
  4115e7:	in     al,0xb8
  4115e9:	push   0xffffffbc
  4115eb:	pop    es
  4115ec:	push   0xffffffa1
  4115ee:	pop    ss
  4115ef:	xchg   esp,eax
  4115f0:	xchg   bl,ch
  4115f2:	sub    ecx,DWORD PTR ds:0x59363f6b
  4115f8:	lods   eax,DWORD PTR ds:[esi]
  4115f9:	or     al,0x66
  4115fb:	mov    ch,0x19
  4115fd:	push   0x27e16e87
  411602:	sub    DWORD PTR [edi],edx
  411604:	cmp    BYTE PTR [edx],cl
  411606:	dec    ecx
  411607:	dec    esi
  411608:	mov    bl,0x90
  41160a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41160b:	leave  
  41160c:	push   ss
  41160d:	jecxz  0x4115d1
  41160f:	adc    dl,0xfb
  411612:	dec    esp
  411613:	xor    ecx,0x40
  411616:	clc    
  411617:	(bad)  
  411618:	(bad)  [edi+ebp*1-0x3d964139]
  41161f:	aaa    
  411620:	imul   esi,DWORD PTR [edi-0x57c26bba],0x67
  411627:	mov    ecx,0x3f63d5d3
  41162c:	cwde   
  41162d:	daa    
  41162e:	gs jmp 0xa044:0x20e0562a
  411636:	cmp    eax,0xa2bc22a6
  41163b:	mul    ah
  41163d:	gs aaa 
  41163f:	xchg   ecx,eax
  411640:	add    al,0xf2
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	cmp    eax,0xa2cfb6e6
  411648:	push   edi
  411649:	jp     0x4115ed
  41164b:	retf   
  41164c:	fstp   QWORD PTR [edx]
  41164e:	(bad)  
  41164f:	(bad)  
  411650:	push   edi
  411651:	out    0x2a,al
  411653:	loop   0x411606
  411655:	mov    ah,0x1a
  411657:	ja     0x411692
  411659:	fisub  WORD PTR [eiz*1-0x6b4966bf]
  411660:	xor    BYTE PTR [ebx],ah
  411662:	or     al,0x9f
  411664:	jp     0x4115f2
  411666:	enter  0x7c8,0xe9
  41166a:	inc    ebp
  41166b:	mov    bl,0x11
  41166d:	add    DWORD PTR [ebx],esp
  41166f:	iret   
  411670:	outs   dx,BYTE PTR ds:[esi]
  411671:	mov    ebp,0xa2130223
  411676:	pushf  
  411677:	xor    eax,0x809946a8
  41167c:	in     al,0x5f
  41167e:	adc    dl,bh
  411680:	jae    0x4116d3
  411682:	jmp    0x26e2:0x10d19e59
  411689:	add    al,0xbb
  41168b:	dec    edx
  41168c:	xor    ebp,DWORD PTR ds:0x2a0f78c8
  411692:	push   es
  411693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411694:	mov    DWORD PTR [edx+0x5870987a],edx
  41169a:	imul   esi,DWORD PTR [esi],0xffffffc3
  41169d:	mov    edi,0x9874577c
  4116a2:	test   DWORD PTR [eax+0x70fe7379],esp
  4116a8:	dec    esp
  4116a9:	ins    BYTE PTR es:[edi],dx
  4116aa:	enter  0xba28,0x91
  4116ae:	pop    ebp
  4116af:	pop    es
  4116b0:	call   0xaa79:0xedd70161
  4116b7:	mov    ecx,0xaee99606
  4116bc:	imul   ecx,DWORD PTR [ebp+esi*8+0x22395701],0x48
  4116c4:	cld    
  4116c5:	(bad)  
  4116c6:	and    ax,0xd64b
  4116ca:	cmp    BYTE PTR [ecx],0x4a
  4116cd:	inc    ebp
  4116ce:	(bad)  
  4116cf:	push   ecx
  4116d0:	sar    DWORD PTR ds:0xfc062908,cl
  4116d6:	aas    
  4116d7:	mov    ds:0xfde43f2a,eax
  4116dc:	pusha  
  4116dd:	mov    dh,0x6c
  4116df:	xchg   esp,eax
  4116e0:	push   eax
  4116e1:	test   dl,0xfe
  4116e4:	inc    edx
  4116e5:	sahf   
  4116e6:	and    ah,dh
  4116e8:	sub    eax,0x7789a626
  4116ed:	or     BYTE PTR [edi],dh
  4116ef:	sbb    BYTE PTR [edx],bh
  4116f1:	push   ebx
  4116f2:	mov    esi,0x4618656
  4116f7:	scas   al,BYTE PTR es:[edi]
  4116f8:	clc    
  4116f9:	jmp    0x1c4c:0xa942f345
  411700:	inc    ebx
  411701:	lock in eax,0x90
  411704:	adc    bh,BYTE PTR [ecx+0xd]
  411707:	pop    ss
  411708:	(bad)  
  411709:	iret   
  41170a:	movntps XMMWORD PTR [eax-0x54a16ec3],xmm6
  411711:	data16 cld 
  411713:	sbb    ecx,DWORD PTR [esi+0x55d40647]
  411719:	test   edi,esi
  41171b:	add    al,0xac
  41171d:	inc    ecx
  41171e:	push   esi
  41171f:	adc    edi,DWORD PTR [edi]
  411721:	cmc    
  411722:	lahf   
  411723:	cmp    ah,BYTE PTR [ebp+0x698cccfc]
  411729:	xchg   ecx,eax
  41172a:	add    ch,cl
  41172c:	in     eax,0x52
  41172e:	adc    BYTE PTR [ecx+0x42a76d17],cl
  411734:	sbb    edx,DWORD PTR [eax-0x5a]
  411737:	adc    eax,0x78f5b7bd
  41173c:	jge    0x4116cd
  41173e:	lock call 0xf58d1dcd
  411744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411745:	jl     0x411716
  411747:	mov    ds:0x9cd69c92,eax
  41174c:	or     ebp,DWORD PTR [ebx]
  41174e:	scas   eax,DWORD PTR es:[edi]
  41174f:	mov    esp,0xedc01822
  411754:	retf   0x432e
  411757:	push   ebp
  411758:	mov    ecx,0xfbd36b85
  41175d:	int3   
  41175e:	pop    esi
  41175f:	hlt    
  411760:	(bad)  
  411761:	lds    edx,FWORD PTR [eax]
  411763:	into   
  411764:	mov    al,0x4c
  411766:	push   ebp
  411767:	mov    esp,0xca4e6e22
  41176c:	fst    QWORD PTR [edx+0x7c]
  41176f:	inc    edi
  411770:	xchg   ecx,eax
  411771:	nop
  411772:	jmp    0x6834:0xa509267
  411779:	ss xchg bh,bh
  41177c:	inc    DWORD PTR [edx]
  41177e:	imul   esp,DWORD PTR [esp+edx*4-0x62757ae8],0x4e
  411786:	dec    edx
  411787:	in     eax,0x99
  411789:	or     al,0xaf
  41178b:	ret    0x2a1c
  41178e:	jnp    0x411727
  411790:	popf   
  411791:	cmc    
  411792:	arpl   ax,bp
  411794:	jb     0x411743
  411796:	push   edx
  411797:	popa   
  411798:	mov    al,0x25
  41179a:	nop
  41179b:	cs ds push ecx
  41179e:	sbb    DWORD PTR [ecx+0x1eb5abb4],edx
  4117a4:	mov    esp,0xec92d97
  4117a9:	push   edx
  4117aa:	jo     0x4117b6
  4117ac:	adc    cl,dl
  4117ae:	inc    edi
  4117af:	dec    esi
  4117b0:	pop    ds
  4117b1:	jns    0x41175d
  4117b3:	enter  0x51c4,0xc
  4117b7:	hlt    
  4117b8:	ins    DWORD PTR es:[edi],dx
  4117b9:	jp     0x41176e
  4117bb:	stc    
  4117bc:	bound  edi,QWORD PTR [esi+esi*4]
  4117bf:	cs cld 
  4117c1:	(bad)
  4117c4:	pushf  
  4117c5:	pop    ecx
  4117c6:	(bad)  
  4117c7:	out    dx,eax
  4117c8:	ret    
  4117c9:	nop
  4117ca:	mov    esp,0xca536a5f
  4117cf:	sahf   
  4117d0:	push   es
  4117d1:	cdq    
  4117d2:	imul   ebx,ebx,0xffffffd4
  4117d5:	cmp    al,0xc8
  4117d7:	mov    esp,0x48f11a51
  4117dc:	fidivr WORD PTR [edx]
  4117de:	dec    ecx
  4117df:	sub    ch,BYTE PTR [ecx+0x71]
  4117e2:	popf   
  4117e3:	retf   0x4645
  4117e6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4117e8:	retf   
  4117e9:	push   eax
  4117ea:	lods   eax,DWORD PTR ds:[esi]
  4117eb:	popf   
  4117ec:	xor    esp,DWORD PTR [ebx+0x13]
  4117ef:	lods   al,BYTE PTR ds:[esi]
  4117f0:	out    0x16,eax
  4117f2:	jne    0x4117c1
  4117f4:	inc    edi
  4117f5:	inc    esi
  4117f6:	mov    DWORD PTR ds:0xcef84248,0x82a09a34
  411800:	out    0x25,eax
  411802:	or     ah,BYTE PTR [edi-0x63024bb]
  411808:	jg     0x4117ce
  41180a:	aas    
  41180b:	adc    DWORD PTR ds:0xa12b4e2d,esi
  411811:	cld    
  411812:	add    eax,0x24a13a3a
  411817:	leave  
  411818:	(bad)  
  411819:	mul    DWORD PTR [edx+0x66cfae6f]
  41181f:	lea    eax,[ebp-0x66]
  411822:	inc    ecx
  411823:	test   al,0xbf
  411825:	rcr    BYTE PTR [ecx+0x18],0x46
  411829:	sar    DWORD PTR [edi+eax*2],1
  41182c:	rol    DWORD PTR [edi-0x54c6f869],1
  411832:	pop    ss
  411833:	mov    ?,WORD PTR [esp+esi*1+0x1a]
  411837:	mov    ebx,0xceb16022
  41183c:	mov    dh,0xe8
  41183e:	and    BYTE PTR [esp+ebp*8+0x6390b419],ah
  411845:	jb     0x41185b
  411847:	xor    al,0x58
  411849:	add    ch,BYTE PTR [edi]
  41184b:	mov    dl,0x54
  41184d:	pushf  
  41184e:	arpl   WORD PTR [eax-0x5540c092],bx
  411854:	mov    al,0x43
  411856:	in     al,0xb0
  411858:	gs pop ss
  41185a:	loopne 0x41183a
  41185c:	dec    edi
  41185d:	pop    eax
  41185e:	jp     0x4118b2
  411860:	out    dx,al
  411861:	mov    cs,WORD PTR [esi+0x2de0d24b]
  411867:	cmc    
  411868:	ret    
  411869:	sbb    BYTE PTR [edi-0x473b7218],bl
  41186f:	mov    al,0x63
  411871:	mov    ds:0x6a6192c6,eax
  411876:	(bad)  
  411878:	popf   
  411879:	out    0x0,eax
  41187b:	jge    0x411871
  41187d:	test   eax,0x633e7cf8
  411882:	dec    edx
  411883:	xchg   ebx,eax
  411884:	mov    WORD PTR [esi],ss
  411886:	out    0xc4,eax
  411888:	sbb    al,0xdd
  41188b:	and    eax,DWORD PTR [edi+edx*8-0x27]
  41188f:	mov    ch,0x84
  411891:	lock dec edx
  411893:	add    eax,DWORD PTR [ebp+0x458d95fe]
  411899:	dec    esi
  41189a:	outs   dx,BYTE PTR ds:[esi]
  41189b:	and    edi,DWORD PTR [esi+edi*8-0x40]
  41189f:	rcl    DWORD PTR [ecx],0xa2
  4118a2:	push   edx
  4118a3:	loope  0x411876
  4118a5:	mov    dh,0x8c
  4118a7:	or     esi,DWORD PTR [ecx+0x4d]
  4118aa:	xor    esi,DWORD PTR [ebp+0x50]
  4118ad:	dec    esi
  4118ae:	mov    ah,0xdc
  4118b0:	lahf   
  4118b1:	pop    es
  4118b2:	out    dx,al
  4118b3:	inc    eax
  4118b4:	pusha  
  4118b5:	test   BYTE PTR [eax+edx*8+0x38bbaf26],cl
  4118bc:	out    dx,eax
  4118bd:	xor    eax,0xc979af56
  4118c2:	sti    
  4118c3:	inc    ebx
  4118c4:	dec    eax
  4118c5:	outs   dx,BYTE PTR ds:[esi]
  4118c6:	sahf   
  4118c7:	or     al,0x4
  4118c9:	(bad)  
  4118ca:	aam    0x2e
  4118cc:	ja     0x411913
  4118ce:	(bad)  [eax]
  4118d0:	test   DWORD PTR ds:0x7614fc51,esi
  4118d6:	mov    al,ds:0x7a4361a6
  4118db:	and    ch,bl
  4118dd:	sar    BYTE PTR [edx+0x53419981],cl
  4118e3:	nop
  4118e4:	mov    edx,DWORD PTR [esi+eiz*2-0xbe7dca3]
  4118eb:	mov    esi,0x82265aac
  4118f0:	stc    
  4118f1:	pop    es
  4118f2:	pop    edx
  4118f3:	sbb    al,0xe2
  4118f5:	pop    ss
  4118f6:	leave  
  4118f7:	cmp    al,0xde
  4118f9:	jmp    0x6ef2f13d
  4118fe:	fbstp  TBYTE PTR [edx+0x3d]
  411901:	popf   
  411902:	adc    dh,0x8f
  411905:	inc    ebp
  411906:	mov    esi,0x8e7350a1
  41190b:	bnd jge 0x41193c
  41190e:	ret    0xbef6
  411911:	repnz imul DWORD PTR [esp+esi*4-0x11b7a0a5]
  411919:	jmp    0x4118f7
  41191b:	(bad)  
  41191c:	mov    eax,0x79be0651
  411921:	add    al,0xbb
  411923:	lds    ebp,FWORD PTR [eax+0x7d]
  411926:	and    eax,DWORD PTR [ebx]
  411928:	lds    eax,FWORD PTR [edx-0x79]
  41192b:	pop    ds
  41192c:	cld    
  41192d:	xchg   edi,eax
  41192e:	adc    eax,edx
  411930:	adc    bl,BYTE PTR [ecx+0x10]
  411933:	pop    edi
  411934:	in     al,dx
  411935:	enter  0xebfc,0x2c
  411939:	jecxz  0x411961
  41193b:	dec    edi
  41193c:	mov    bh,0xce
  41193e:	in     al,0xf1
  411940:	adc    BYTE PTR [eax+0x458c87],al
  411946:	and    al,0xa0
  411948:	sbb    ch,BYTE PTR [ebx+0x55]
  41194b:	fld    st(2)
  41194d:	scas   al,BYTE PTR es:[edi]
  41194e:	loopne 0x411915
  411950:	xchg   esi,eax
  411951:	mov    dl,0x96
  411953:	leave  
  411954:	cmc    
  411955:	dec    ebx
  411956:	jb     0x411910
  411958:	adc    BYTE PTR [eax+ecx*2],ch
  41195b:	fnstsw WORD PTR [edi+0x3b]
  41195e:	xor    esp,DWORD PTR ds:0xac5a97da
  411964:	shl    bl,cl
  411966:	cli    
  411967:	sub    ebp,edi
  411969:	adc    BYTE PTR [esi],al
  41196b:	sar    BYTE PTR [esi],1
  41196d:	mov    ecx,0xfeabd119
  411972:	bound  eax,QWORD PTR [ecx]
  411974:	scas   eax,DWORD PTR es:[edi]
  411975:	aas    
  411976:	inc    edx
  411977:	adc    eax,0x35d3edbc
  41197c:	js     0x4119b9
  41197e:	xor    edi,ebx
  411980:	mov    bh,0x9
  411982:	dec    esp
  411983:	lahf   
  411984:	pop    edi
  411985:	jmp    DWORD PTR [ebx]
  411987:	push   edx
  411988:	mov    dh,0x92
  41198a:	das    
  41198b:	daa    
  41198c:	int    0xf
  41198e:	push   ebp
  41198f:	jl     0x41197c
  411991:	jle    0x411956
  411993:	ror    DWORD PTR [edx+0x62],cl
  411996:	iret   
  411997:	adc    DWORD PTR [ebx+0x3515867b],ecx
  41199d:	jmp    0xb919:0x880adf4f
  4119a4:	pop    esp
  4119a5:	sub    ch,al
  4119a7:	mov    cl,0x45
  4119a9:	std    
  4119aa:	(bad)  
  4119ac:	in     eax,dx
  4119ad:	test   eax,0xb3e09f83
  4119b2:	jmp    DWORD PTR [bp+si]
  4119b5:	inc    ecx
  4119b6:	pushf  
  4119b7:	xchg   ecx,eax
  4119b8:	sub    BYTE PTR [edx],ch
  4119ba:	mov    esp,0x8752cd4b
  4119bf:	adc    BYTE PTR [ecx-0x39071c1d],ah
  4119c5:	jmp    0xc22b:0x7963e10b
  4119cc:	pop    ebp
  4119cd:	dec    edx
  4119ce:	outs   dx,BYTE PTR ds:[esi]
  4119cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d0:	jecxz  0x411a31
  4119d2:	jmp    0x411983
  4119d4:	adc    al,0x3
  4119d6:	sub    DWORD PTR [edx+eiz*1],eax
  4119d9:	sub    eax,0x8a321037
  4119de:	sub    al,cl
  4119e0:	inc    esp
  4119e1:	xor    eax,0xf7d206fb
  4119e6:	mov    edx,0x7d535ffd
  4119eb:	scas   eax,DWORD PTR es:[edi]
  4119ec:	inc    eax
  4119ed:	mov    bh,0x28
  4119ef:	dec    ebx
  4119f0:	outs   dx,DWORD PTR ds:[esi]
  4119f1:	push   eax
  4119f2:	ja     0x411a14
  4119f4:	ja     0x41198d
  4119f6:	xchg   esi,eax
  4119f7:	jl     0x411a52
  4119f9:	mul    DWORD PTR ds:0x7f5470b3
  4119ff:	dec    ebx
  411a00:	sbb    BYTE PTR [ebp+eax*2-0x6758d8b0],dl
  411a07:	hlt    
  411a08:	push   cs
  411a09:	push   0xffffffb0
  411a0b:	push   DWORD PTR [ebp-0x13]
  411a0e:	out    dx,eax
  411a0f:	inc    edi
  411a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a11:	hlt    
  411a12:	push   eax
  411a13:	and    ebx,DWORD PTR [ebx+ecx*2]
  411a16:	hlt    
  411a17:	not    DWORD PTR [ecx-0x42]
  411a1a:	mov    edx,0xf90693e8
  411a1f:	pop    ebx
  411a20:	or     al,0x12
  411a22:	test   ebx,esp
  411a24:	pusha  
  411a25:	fist   WORD PTR [edi]
  411a27:	dec    esi
  411a28:	and    BYTE PTR [edx],dl
  411a2a:	mov    ebx,0x1189e906
  411a2f:	xlat   BYTE PTR ds:[ebx]
  411a30:	dec    esp
  411a31:	mov    cl,0x84
  411a33:	xchg   BYTE PTR [esi-0x670dd603],al
  411a39:	pop    ss
  411a3a:	fdivr  st(5),st
  411a3c:	sub    DWORD PTR [esi+0x2b470f49],esi
  411a42:	add    edi,DWORD PTR [edi+0x45]
  411a45:	into   
  411a46:	jg     0x411a66
  411a48:	push   ebp
  411a49:	je     0x411a26
  411a4b:	stos   DWORD PTR es:[edi],eax
  411a4c:	mov    edx,0x87940096
  411a51:	lahf   
  411a52:	inc    ebp
  411a53:	bound  eax,QWORD PTR [eax+0x6]
  411a56:	aad    0xc6
  411a58:	test   BYTE PTR [edx],0xe2
  411a5b:	inc    ebx
  411a5c:	pop    edx
  411a5d:	inc    ebx
  411a5e:	inc    esp
  411a5f:	sub    BYTE PTR [ebx],dl
  411a61:	sar    BYTE PTR [edx+0x3f],1
  411a64:	sub    eax,0x1f3bd27b
  411a69:	pop    es
  411a6a:	repz pop edx
  411a6c:	or     eax,0xe31b449c
  411a71:	mov    edx,0xa1594fd8
  411a76:	ret    0xe061
  411a79:	sahf   
  411a7a:	into   
  411a7b:	mov    dl,0xf2
  411a7d:	lods   al,BYTE PTR ds:[esi]
  411a7e:	xchg   esi,eax
  411a7f:	push   cs
  411a80:	test   esi,0x2979b4f4
  411a86:	shl    DWORD PTR [edi+eiz*4],cl
  411a89:	jecxz  0x411af7
  411a8b:	sub    eax,0x8c59774f
  411a90:	mov    ebp,DWORD PTR [ecx-0x15]
  411a93:	leave  
  411a94:	add    ah,cl
  411a96:	cmc    
  411a97:	(bad)  
  411a98:	cmp    BYTE PTR [esi-0x73],dl
  411a9b:	imul   esi,DWORD PTR [edi+0x79],0x12d44a7b
  411aa2:	retf   
  411aa3:	and    BYTE PTR [ebx-0x34],bl
  411aa6:	mov    ecx,0x74d41437
  411aab:	mov    ecx,0x63115a93
  411ab0:	sbb    BYTE PTR [ebx-0x23c9927f],dl
  411ab6:	xor    eax,0xb87edb88
  411abb:	outs   dx,BYTE PTR ds:[esi]
  411abc:	outs   dx,BYTE PTR ds:[esi]
  411abd:	mov    ah,0x89
  411abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac0:	sahf   
  411ac1:	fcmovu st,st(5)
  411ac3:	add    BYTE PTR [eax-0x9],bh
  411ac6:	in     eax,dx
  411ac7:	daa    
  411ac8:	cdq    
  411ac9:	or     eax,0x77322308
  411ace:	pushf  
  411acf:	sar    esp,cl
  411ad1:	jle    0x411adf
  411ad3:	js     0x411aa6
  411ad5:	fcom   QWORD PTR [ebp-0x3a]
  411ad8:	aam    0xe9
  411ada:	adc    al,0x2b
  411adc:	fbstp  TBYTE PTR [edi+0x62acb353]
  411ae2:	es int 0xa
  411ae5:	aas    
  411ae6:	iret   
  411ae7:	dec    esp
  411ae8:	daa    
  411ae9:	jg     0x411a76
  411aeb:	outs   dx,BYTE PTR ds:[esi]
  411aec:	mov    edx,0x4a89421
  411af1:	mov    eax,ds:0x5204b0d4
  411af6:	in     al,dx
  411af7:	xor    DWORD PTR [edi+ecx*8+0x47],ecx
  411afb:	sub    dh,BYTE PTR ds:0x76ff044
  411b01:	and    BYTE PTR [eax+0x6baab538],bl
  411b07:	add    al,0x56
  411b09:	arpl   WORD PTR [edx+0x304bb1e4],di
  411b0f:	scas   al,BYTE PTR es:[edi]
  411b10:	pop    esp
  411b11:	cdq    
  411b12:	lods   al,BYTE PTR ds:[esi]
  411b13:	js     0x411ad8
  411b15:	mov    ds:0xf7e4ebe2,eax
  411b1a:	dec    esi
  411b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1c:	mov    ah,0x31
  411b1e:	cmc    
  411b1f:	sbb    DWORD PTR [esi],edi
  411b21:	push   ecx
  411b22:	mul    BYTE PTR [edi]
  411b24:	sbb    eax,0x24aadd56
  411b29:	out    dx,al
  411b2a:	jnp    0x411af5
  411b2c:	pop    ebx
  411b2d:	xchg   ebx,eax
  411b2e:	ja     0x411b9e
  411b30:	inc    esi
  411b31:	dec    ecx
  411b32:	mul    BYTE PTR [edx+0x6c]
  411b35:	add    bh,BYTE PTR [eax]
  411b37:	ror    DWORD PTR [esi],cl
  411b39:	mov    ds:0x912acb7c,eax
  411b3e:	jns    0x411ae9
  411b40:	cwde   
  411b41:	lahf   
  411b42:	lock pop edx
  411b44:	jle    0x411b14
  411b46:	inc    eax
  411b47:	dec    ecx
  411b48:	xor    DWORD PTR [bp+si-0x1628],0x69d37fdc
  411b51:	sti    
  411b52:	es test al,0xf0
  411b55:	push   ebp
  411b56:	cmp    bh,BYTE PTR [ecx]
  411b58:	(bad)  
  411b59:	mov    ds:0xe9dfc234,eax
  411b5e:	dec    esp
  411b5f:	es jnp 0x411b6d
  411b62:	out    dx,al
  411b63:	aam    0xc8
  411b65:	test   DWORD PTR [edi+esi*8-0x47],ebp
  411b69:	push   ecx
  411b6a:	(bad)  
  411b6b:	leave  
  411b6c:	stc    
  411b6d:	cmp    edi,ecx
  411b6f:	sahf   
  411b70:	jno    0x411bd1
  411b72:	push   edi
  411b73:	adc    al,0x86
  411b75:	xchg   esp,eax
  411b76:	dec    edi
  411b77:	icebp  
  411b78:	push   edi
  411b79:	xor    al,0xcb
  411b7b:	inc    esi
  411b7c:	or     eax,0x5a2e33d
  411b81:	push   0xffffffdd
  411b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b84:	mov    dh,0x25
  411b86:	and    eax,0xb1a1bf5c
  411b8b:	daa    
  411b8c:	pop    ecx
  411b8d:	stc    
  411b8e:	xchg   edi,eax
  411b8f:	mov    ?,WORD PTR [edx-0x41]
  411b92:	mov    ecx,0x388448ec
  411b97:	aaa    
  411b98:	out    0xc2,eax
  411b9a:	jle    0x411bac
  411b9c:	enter  0xedda,0x3f
  411ba0:	cmp    ebp,esp
  411ba2:	xor    DWORD PTR [esi-0xe],0xe2f91777
  411ba9:	pop    ss
  411baa:	xor    esi,edi
  411bac:	fisub  WORD PTR [edi+0x2238596d]
  411bb2:	(bad)  
  411bb3:	jmp    0x411be2
  411bb5:	and    DWORD PTR [edx+0x1635e6ef],esi
  411bbb:	ja     0x411bde
  411bbd:	mov    ah,0x5e
  411bbf:	mov    edi,0xd68eeef5
  411bc4:	pop    es
  411bc5:	outs   dx,DWORD PTR ds:[esi]
  411bc6:	lea    ebp,[eax+0x5b]
  411bc9:	loopne 0x411bc1
  411bcb:	or     dl,BYTE PTR [edx]
  411bcd:	mov    bh,0x51
  411bcf:	lods   al,BYTE PTR ds:[esi]
  411bd0:	mov    ebp,DWORD PTR [ebx-0x3575d21c]
  411bd6:	inc    ebx
  411bd7:	out    0x77,eax
  411bd9:	xchg   esi,eax
  411bda:	addr16 push ebx
  411bdc:	sti    
  411bdd:	mov    edx,0x1db9becd
  411be2:	in     al,dx
  411be3:	xchg   edx,eax
  411be4:	enter  0x78e1,0xfc
  411be8:	int    0xbc
  411bea:	sbb    eax,0x7e055afa
  411bef:	and    ah,BYTE PTR [edi+0x32f9450b]
  411bf5:	xor    BYTE PTR [esi-0x17ab1b9],bh
  411bfb:	xchg   ebp,eax
  411bfc:	rcl    DWORD PTR [ecx-0x1a4fd1b5],1
  411c02:	mov    ebp,0xe81811e9
  411c07:	jmp    0x411bde
  411c09:	xor    esp,eax
  411c0b:	jns    0x411c38
  411c0d:	ror    al,1
  411c0f:	leave  
  411c10:	aad    0x53
  411c12:	xor    bl,BYTE PTR [ebp+0x59efa391]
  411c18:	test   ax,0xe0fc
  411c1c:	pop    es
  411c1d:	and    esp,DWORD PTR [edx]
  411c1f:	mov    dh,0x2e
  411c21:	leave  
  411c22:	dec    ebx
  411c23:	or     eax,0xf6c4ce69
  411c28:	(bad)  
  411c29:	(bad)  
  411c2b:	enter  0xaa03,0x8d
  411c2f:	and    DWORD PTR [ecx+0x3e8921d7],edx
  411c35:	bound  esi,QWORD PTR [ecx]
  411c37:	ja     0x411bbc
  411c39:	ins    DWORD PTR es:[edi],dx
  411c3a:	mov    ebx,0x8d960181
  411c3f:	or     eax,0x477eacb8
  411c44:	neg    edx
  411c46:	pop    eax
  411c47:	pop    ebx
  411c48:	mov    ch,0xa2
  411c4a:	daa    
  411c4b:	ja     0x411c65
  411c4d:	pop    es
  411c4e:	jb     0x411c73
  411c50:	test   eax,0x92511132
  411c55:	xchg   edi,eax
  411c56:	fcomi  st,st(3)
  411c58:	(bad)  
  411c59:	inc    edx
  411c5a:	xlat   BYTE PTR ds:[ebx]
  411c5b:	fistp  QWORD PTR [edx]
  411c5d:	push   ecx
  411c5e:	(bad)  
  411c5f:	push   0x239c2738
  411c64:	mov    bl,0xf4
  411c66:	mov    DWORD PTR [edx-0x5c],edx
  411c69:	std    
  411c6a:	sub    DWORD PTR ds:0x7f7b89a,ebx
  411c70:	mov    ebp,0x4f988999
  411c75:	push   esp
  411c76:	or     edx,eax
  411c78:	sbb    ebp,edi
  411c7a:	pop    ebx
  411c7b:	aam    0xe4
  411c7d:	les    ecx,FWORD PTR [edx+ecx*8-0x29]
  411c81:	mov    esi,0x40a78b7e
  411c86:	pop    ds
  411c87:	and    DWORD PTR [ebx],esi
  411c89:	sbb    eax,0xd8b86e6a
  411c8e:	in     eax,dx
  411c8f:	inc    edx
  411c90:	or     BYTE PTR [ecx-0x61],0x64
  411c94:	mov    eax,ds:0xeed70f1
  411c99:	xchg   esp,eax
  411c9a:	into   
  411c9b:	cmp    cl,BYTE PTR [ebx+0x4fefba38]
  411ca1:	(bad)  
  411ca2:	fadd   QWORD PTR ds:0x4d979747
  411ca8:	shl    DWORD PTR [ecx-0x51],cl
  411cab:	pop    edx
  411cac:	adc    al,0xe
  411cae:	dec    ebx
  411caf:	push   ecx
  411cb0:	mov    ah,0x7b
  411cb2:	outs   dx,BYTE PTR ds:[esi]
  411cb3:	out    0x49,eax
  411cb5:	push   ebp
  411cb6:	dec    ebx
  411cb7:	call   0x3c7d:0x319b6038
  411cbe:	and    bh,ch
  411cc0:	shr    BYTE PTR [ebp+0x2c5a0da3],cl
  411cc6:	cmp    ecx,eax
  411cc8:	add    BYTE PTR [eax-0x1302d791],dh
  411cce:	mov    ebx,0x35264077
  411cd3:	bound  ebp,QWORD PTR [edi+0xde59b3]
  411cd9:	dec    ebp
  411cda:	or     al,0x42
  411cdc:	outs   dx,BYTE PTR ds:[esi]
  411cde:	popa   
  411cdf:	push   0xc
  411ce1:	out    dx,eax
  411ce2:	push   edx
  411ce3:	popf   
  411ce4:	push   edi
  411ce5:	jb     0x411d5a
  411ce7:	xchg   edx,eax
  411ce8:	pop    edx
  411ce9:	imul   esp,DWORD PTR [ebx],0x4cfe8a76
  411cef:	push   esp
  411cf0:	in     eax,dx
  411cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf2:	dec    ebx
  411cf3:	adc    eax,DWORD PTR [edx]
  411cf5:	mov    dh,0xfb
  411cf7:	mov    ds:0x81493e4e,al
  411cfc:	(bad)  [eax-0x72]
  411cff:	ins    DWORD PTR es:[edi],dx
  411d00:	mov    WORD PTR [edi],ss
  411d02:	jge    0x411d6c
  411d04:	loope  0x411d2b
  411d06:	push   edx
  411d07:	loop   0x411d79
  411d09:	pop    esi
  411d0a:	repnz add esi,ebx
  411d0d:	hlt    
  411d0e:	cmp    al,0xac
  411d10:	cmp    al,0x74
  411d12:	adc    al,0x20
  411d14:	push   ebp
  411d15:	jne    0x411caa
  411d17:	aas    
  411d18:	dec    edx
  411d19:	sub    DWORD PTR [ebx],esp
  411d1b:	(bad)  
  411d1c:	jae    0x411d2c
  411d1e:	cmp    eax,0xe9dd4ca0
  411d23:	into   
  411d24:	stos   BYTE PTR es:[edi],al
  411d25:	not    DWORD PTR [ecx+0xc]
  411d28:	jmp    0xb34d:0x5bd14e6d
  411d2f:	leave  
  411d30:	mov    esi,DWORD PTR [ecx+0x1ccb1043]
  411d36:	fs stos BYTE PTR es:[edi],al
  411d38:	push   ss
  411d39:	test   ch,bh
  411d3b:	mov    BYTE PTR [esi],dl
  411d3d:	call   0x2652:0x29046e9b
  411d44:	jno    0x411d20
  411d46:	mov    ebx,0x5b556697
  411d4b:	test   BYTE PTR [ecx-0x7682f788],dl
  411d51:	jo     0x411d4b
  411d53:	das    
  411d54:	scas   eax,DWORD PTR es:[edi]
  411d55:	dec    esp
  411d56:	stc    
  411d57:	(bad)
  411d5b:	push   0x9b2ab349
  411d60:	gs jae 0x411d4b
  411d63:	mov    BYTE PTR [edi+0x161a5648],dl
  411d69:	rcr    bl,0xba
  411d6c:	ss jno 0x411d30
  411d6f:	add    esi,ecx
  411d71:	dec    esi
  411d72:	int3   
  411d73:	xchg   ebx,eax
  411d74:	loop   0x411d3b
  411d76:	mov    bh,0x2e
  411d78:	add    al,BYTE PTR [edi]
  411d7a:	in     al,dx
  411d7b:	ins    DWORD PTR es:[edi],dx
  411d7c:	mov    cl,0xe4
  411d7e:	cmc    
  411d7f:	pop    ebx
  411d80:	jns    0x411d22
  411d82:	repnz adc DWORD PTR [ebx],0x1df3f59c
  411d89:	pop    esi
  411d8a:	add    al,0xc2
  411d8c:	mov    ds:0x123c3c67,eax
  411d91:	xor    BYTE PTR [edx+eiz*8+0x76],bl
  411d95:	inc    ebx
  411d96:	xchg   ebx,eax
  411d97:	mov    edx,0xff645946
  411d9c:	mov    DWORD PTR [eax-0xa],ebx
  411d9f:	dec    ecx
  411da0:	inc    eax
  411da1:	ja     0x411dab
  411da3:	sbb    edi,edx
  411da5:	cmp    edi,edx
  411da7:	ret    0x564c
  411daa:	test   al,0x32
  411dac:	in     al,0x79
  411dae:	jo     0x411d41
  411db0:	stos   BYTE PTR es:[edi],al
  411db1:	push   esp
  411db2:	data16 fwait
  411db4:	stc    
  411db5:	xchg   esi,eax
  411db6:	mov    ecx,0x905891be
  411dbb:	add    al,0x6e
  411dbd:	sub    BYTE PTR [edx+0x4a5a701d],0x23
  411dc4:	mov    DWORD PTR [ebx],ebx
  411dc6:	add    DWORD PTR [ecx-0x2ddef0dc],esi
  411dcc:	mov    dl,BYTE PTR [ecx]
  411dce:	scas   al,BYTE PTR es:[edi]
  411dcf:	out    dx,al
  411dd0:	mov    ebx,0x6a0c29aa
  411dd5:	stos   BYTE PTR es:[edi],al
  411dd6:	out    0x87,eax
  411dd8:	test   BYTE PTR [edx-0x9afd8b9],dl
  411dde:	scas   al,BYTE PTR es:[edi]
  411ddf:	nop
  411de0:	pop    edx
  411de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411de2:	test   DWORD PTR [esi-0x77],eax
  411de5:	push   ss
  411de6:	es adc al,0xf
  411de9:	dec    ebx
  411dea:	jmp    0x7395:0x8dd17a03
  411df1:	mov    ds:0x25002c85,al
  411df6:	pop    esp
  411df7:	jmp    0x411db4
  411df9:	sub    edi,DWORD PTR [edi-0x27]
  411dfc:	push   ebp
  411dfd:	pop    ebx
  411dfe:	rol    DWORD PTR [ebx],1
  411e00:	cld    
  411e01:	mov    dh,0xc2
  411e03:	inc    ecx
  411e04:	and    ebp,DWORD PTR [esi+0x34]
  411e07:	(bad)  
  411e08:	push   ecx
  411e09:	imul   ecx,DWORD PTR [ebp+esi*8-0x409bbd76],0xffffffd4
  411e11:	or     al,0x44
  411e13:	gs jmp 0x983e:0x3cfe77f8
  411e1b:	dec    eax
  411e1c:	pushf  
  411e1d:	mov    DWORD PTR [ecx],edi
  411e1f:	lods   eax,DWORD PTR ds:[esi]
  411e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e21:	clc    
  411e22:	jns    0x411db7
  411e24:	test   esi,edi
  411e26:	lea    edi,[ebx+esi*1-0x18]
  411e2a:	loop   0x411e84
  411e2c:	and    dl,bh
  411e2e:	lods   al,BYTE PTR ds:[esi]
  411e2f:	adc    al,0x16
  411e31:	pushf  
  411e32:	les    edx,FWORD PTR ds:0xb5cccfa6
  411e38:	arpl   sp,dx
  411e3a:	and    eax,0x90a17d34
  411e3f:	icebp  
  411e40:	fs aam 0x6
  411e43:	jne    0x411e31
  411e45:	pop    ecx
  411e46:	fmul   QWORD PTR [ecx+edi*2]
  411e49:	mov    bh,0xcc
  411e4b:	aad    0x56
  411e4d:	dec    esp
  411e4e:	pop    ebp
  411e4f:	fstp   DWORD PTR ds:0xcaacf4f
  411e55:	mov    esp,?
  411e57:	loopne 0x411ec0
  411e59:	retf   0x42a5
  411e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e5d:	mov    ds:0x524ead30,eax
  411e62:	and    eax,0x67e24e59
  411e67:	mov    esi,0xeb6ba8db
  411e6c:	shl    BYTE PTR ds:0xafdac61a,1
  411e72:	adc    edi,DWORD PTR [ecx]
  411e74:	xlat   BYTE PTR ds:[ebx]
  411e75:	loopne 0x411e84
  411e77:	idiv   eax
  411e79:	mov    ss,WORD PTR [esi+edi*2-0x615af1d]
  411e80:	push   ss
  411e81:	loopne 0x411e7b
  411e83:	inc    esi
  411e84:	iret   
  411e85:	adc    al,BYTE PTR [ecx-0x1999a933]
  411e8b:	add    DWORD PTR [ebp+0x21],ebp
  411e8e:	and    ebp,ecx
  411e90:	inc    esi
  411e91:	test   edx,0xe01ce10c
  411e97:	lea    eax,[ebx-0x7c]
  411e9a:	mov    edi,0x28b516d5
  411e9f:	inc    eax
  411ea0:	inc    ecx
  411ea1:	inc    eax
  411ea2:	mov    dl,0xd3
  411ea4:	adc    edx,DWORD PTR [esi-0x7e]
  411ea7:	stos   DWORD PTR es:[edi],eax
  411ea8:	outs   dx,BYTE PTR ds:[esi]
  411ea9:	sub    DWORD PTR ds:0xae4c2211,ebp
  411eaf:	add    DWORD PTR [esi+0x33da32f7],ebp
  411eb5:	fisttp DWORD PTR [ecx-0x49]
  411eb8:	std    
  411eb9:	and    esp,DWORD PTR [esp+ebp*1+0x8]
  411ebd:	push   edx
  411ebe:	push   edx
  411ebf:	mov    dh,0x5f
  411ec1:	xchg   BYTE PTR [edi+0x1a0ee35b],ch
  411ec7:	pushf  
  411ec8:	xor    dh,BYTE PTR [ecx+0x12c3ec9e]
  411ece:	cs jb  0x411e80
  411ed1:	mov    es,WORD PTR [ebx+0x34]
  411ed4:	fistp  DWORD PTR [edi+0x3f60116b]
  411eda:	cmc    
  411edb:	pop    esi
  411edc:	mov    edx,0x1dd82f73
  411ee1:	jmp    0x411f56
  411ee3:	outs   dx,DWORD PTR ds:[esi]
  411ee4:	sbb    al,bh
  411ee6:	leave  
  411ee7:	and    eax,0x32583ab6
  411eec:	mov    ah,0x6c
  411eee:	dec    ebp
  411eef:	in     al,dx
  411ef0:	push   cs
  411ef1:	pop    ebx
  411ef2:	ret    
  411ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef4:	mov    al,ds:0x6b437905
  411ef9:	clc    
  411efa:	pop    ds
  411efb:	sbb    al,0x84
  411efd:	arpl   WORD PTR [esi-0x2e80d40e],di
  411f03:	inc    ebp
  411f04:	pop    eax
  411f05:	repnz loopne 0x411f74
  411f08:	sub    esi,edi
  411f0a:	lods   al,BYTE PTR ds:[esi]
  411f0b:	push   ds
  411f0c:	jmp    0xd0e940a3
  411f11:	into   
  411f12:	sub    eax,0x4c9535c1
  411f17:	pop    edx
  411f18:	in     eax,dx
  411f19:	outs   dx,DWORD PTR ds:[esi]
  411f1a:	pop    edx
  411f1b:	push   cs
  411f1c:	pop    edx
  411f1d:	adc    cl,BYTE PTR [esi]
  411f1f:	push   0x72
  411f21:	aas    
  411f22:	outs   dx,BYTE PTR fs:[esi]
  411f24:	sbb    eax,0xb316352a
  411f29:	sub    DWORD PTR [esi-0x13919b63],edx
  411f2f:	mov    WORD PTR [esi+0x4c],ss
  411f32:	int3   
  411f33:	rcr    DWORD PTR [ecx-0x47279178],0xea
  411f3a:	sahf   
  411f3b:	(bad)  
  411f3c:	into   
  411f3d:	xor    eax,0x9debce43
  411f42:	add    DWORD PTR [eax-0x38],ebx
  411f45:	add    al,0xd8
  411f47:	retf   
  411f48:	dec    eax
  411f49:	mov    esp,0xcbd5f596
  411f4e:	aas    
  411f4f:	sub    al,bh
  411f51:	in     al,dx
  411f52:	xor    eax,0xc56cc589
  411f57:	ret    
  411f58:	hlt    
  411f59:	and    eax,0xb09d8f14
  411f5e:	inc    esp
  411f5f:	shl    bl,1
  411f61:	jge    0x411fb9
  411f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f64:	sbb    al,0x36
  411f66:	xchg   ebp,eax
  411f67:	into   
  411f68:	sbb    dh,BYTE PTR [eax+edx*1]
  411f6b:	shl    DWORD PTR [esi+0x6a3b0634],0x45
  411f72:	cdq    
  411f73:	daa    
  411f74:	xchg   ebp,eax
  411f75:	jns    0x411f31
  411f77:	adc    ebx,esi
  411f79:	or     eax,0xfc55a0e
  411f7e:	ins    BYTE PTR es:[edi],dx
  411f7f:	sbb    cl,BYTE PTR [esi+0x1f]
  411f82:	shl    DWORD PTR [edi+0x12626f5f],cl
  411f88:	pop    esp
  411f89:	scas   al,BYTE PTR es:[edi]
  411f8a:	adc    BYTE PTR [edx-0x34b952c4],bl
  411f90:	jne    0x411f57
  411f92:	fnstsw WORD PTR [esi+edi*8-0x490f67d8]
  411f99:	and    eax,0xcc3144a3
  411f9e:	mov    ss,WORD PTR [edx*4-0x5484a18]
  411fa5:	fiadd  WORD PTR ds:0x938d22bf
  411fab:	sub    eax,edx
  411fad:	jle    0x411f4d
  411faf:	in     eax,dx
  411fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fb1:	es jmp 0x411ff5
  411fb4:	sub    al,BYTE PTR [eax+0x1a19433f]
  411fba:	jno    0x411f63
  411fbc:	or     al,0x80
  411fbe:	jl     0x411f7e
  411fc0:	sub    al,BYTE PTR [ebx]
  411fc2:	jecxz  0x411fff
  411fc4:	je     0x411f4b
  411fc6:	jne    0x412010
  411fc8:	mov    eax,ds:0x757c3b14
  411fcd:	mov    bh,0xfb
  411fcf:	xchg   esi,eax
  411fd0:	jge    0x412046
  411fd2:	dec    edi
  411fd3:	mov    BYTE PTR ds:0x24d439ca,ch
  411fd9:	in     al,dx
  411fda:	mov    ?,WORD PTR [esi+esi*2]
  411fdd:	data16 (bad) 
  411fdf:	cmp    ebx,DWORD PTR [edx]
  411fe1:	pop    ss
  411fe2:	ret    0x2e75
  411fe5:	mov    ah,0xc8
  411fe7:	enter  0xed53,0xd4
  411feb:	iret   
  411fec:	daa    
  411fed:	or     dl,BYTE PTR [esi]
  411fef:	add    BYTE PTR [edi-0xa10c4fc],cl
  411ff5:	out    0x3,al
  411ff7:	xchg   ebx,ebx
  411ff9:	mov    ebx,0x76cb0ee
  411ffe:	fldcw  WORD PTR [edi-0x3b]
  412001:	out    0x15,eax
  412003:	pop    esi
  412004:	cmc    
  412005:	pop    ecx
  412006:	adc    ah,BYTE PTR [ebx+0x34]
  412009:	adc    ah,al
  41200b:	sbb    dh,BYTE PTR [ebx-0x3e4536cd]
  412011:	ja     0x412086
  412013:	cdq    
  412014:	mov    al,0xec
  412016:	mov    ch,0xb1
  412018:	add    eax,0x4388fbd7
  41201d:	jp     0x411fc2
  41201f:	adc    eax,0x30e85696
  412024:	or     al,0xff
  412026:	pop    ss
  412027:	mov    edx,0x46c8c611
  41202c:	jl     0x412005
  41202e:	mov    ecx,0xf1dd8d93
  412033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412034:	pop    ebp
  412035:	dec    edi
  412036:	repnz aad 0xe4
  412039:	mov    edx,0x2698019b
  41203e:	cmp    BYTE PTR [edi],ah
  412040:	rol    ecx,0xf0
  412043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412044:	add    cl,BYTE PTR [eax]
  412046:	pop    esi
  412047:	xchg   BYTE PTR [ebp+0x49e26a55],bl
  41204d:	and    bh,dh
  41204f:	pop    ebp
  412050:	les    ebx,FWORD PTR [eax-0x7]
  412053:	mov    al,ds:0x9b9ae920
  412058:	adc    DWORD PTR [ebx-0x51574a8d],0xfd7eeccf
  412062:	out    0x62,al
  412064:	into   
  412065:	arpl   WORD PTR [edx-0x40],dx
  412068:	mov    eax,ds:0x6ca539eb
  41206d:	mov    edx,0x284f0aee
  412072:	mov    al,ds:0xe8cbaf04
  412077:	cli    
  412078:	ror    BYTE PTR [edi-0x2],1
  41207b:	icebp  
  41207c:	(bad)  
  41207d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41207e:	pop    ebx
  41207f:	push   esp
  412080:	sahf   
  412081:	jne    0x4120e1
  412083:	pop    esp
  412084:	cli    
  412085:	mov    bl,0xfe
  412087:	in     eax,0x66
  412089:	push   ecx
  41208a:	xchg   ebx,eax
  41208b:	jno    0x412049
  41208d:	daa    
  41208e:	sar    BYTE PTR [ebx+0x21],0xed
  412092:	cmc    
  412093:	inc    esi
  412094:	fsub   DWORD PTR [edx-0x549ccb32]
  41209a:	mov    al,0x68
  41209c:	das    
  41209d:	and    bh,cl
  41209f:	xlat   BYTE PTR ds:[ebx]
  4120a0:	cmp    BYTE PTR [eax],al
  4120a2:	push   edx
  4120a3:	out    0xc8,al
  4120a5:	mov    dl,0x3c
  4120a7:	mov    WORD PTR [eax-0x5f],gs
  4120aa:	(bad)  
  4120ab:	or     al,0x3c
  4120ad:	retf   
  4120ae:	cmp    eax,0x877fe8ef
  4120b3:	xchg   ecx,eax
  4120b4:	cmc    
  4120b5:	cmp    ah,BYTE PTR [ebx-0x5f891325]
  4120bb:	sbb    al,0xe7
  4120bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120be:	xchg   DWORD PTR ds:0x82361ab0,ebp
  4120c4:	sbb    ebx,esi
  4120c6:	scas   al,BYTE PTR es:[edi]
  4120c7:	cmp    al,bl
  4120c9:	cs inc eax
  4120cb:	xor    BYTE PTR [ebx],ah
  4120cd:	(bad)  
  4120ce:	aam    0xbe
  4120d0:	mov    dl,0x60
  4120d2:	inc    eax
  4120d3:	dec    edx
  4120d4:	sub    DWORD PTR [esi+ebp*1+0x69],ebp
  4120d8:	inc    edx
  4120d9:	es mov ah,0x89
  4120dc:	mov    ch,0x43
  4120de:	lea    ecx,[edx-0x16]
  4120e1:	add    ch,dl
  4120e3:	sub    BYTE PTR [ecx+0x0],dl
  4120e6:	xor    BYTE PTR [esi],ah
  4120e8:	nop
  4120e9:	in     al,dx
  4120ea:	xchg   BYTE PTR [edi],bh
  4120ec:	lock add eax,0xc4daa682
  4120f2:	sahf   
  4120f3:	jae    0x41211a
  4120f5:	xchg   esp,eax
  4120f6:	div    DWORD PTR [edi-0x14]
  4120f9:	mov    cs,WORD PTR ds:0x916707a8
  4120ff:	scas   eax,DWORD PTR es:[edi]
  412100:	mov    eax,ds:0xc3ba1d1
  412105:	mov    esi,0xb1a56bd5
  41210a:	mov    dl,0x6c
  41210c:	scas   al,BYTE PTR es:[edi]
  41210d:	adc    ah,BYTE PTR [ebp+0x79]
  412110:	jmp    0x3bf9f078
  412115:	jmp    0x412124
  412117:	loopne 0x412182
  412119:	mov    eax,ds:0x695abf7e
  41211e:	adc    si,WORD PTR cs:[ebp+0x41]
  412123:	mov    bl,0x5
  412125:	cmp    DWORD PTR [ebp-0x17739069],ebp
  41212b:	mov    dl,0x2
  41212d:	neg    DWORD PTR [ecx-0x4b]
  412130:	stos   DWORD PTR es:[edi],eax
  412131:	mov    esp,0xb1387bbe
  412136:	ins    BYTE PTR es:[edi],dx
  412137:	mov    ah,0x4b
  412139:	pop    ebp
  41213a:	and    DWORD PTR [edx-0x18],edi
  41213d:	push   esp
  41213e:	mov    cl,al
  412140:	rcl    BYTE PTR [ebx+0x2daf004],1
  412146:	push   esi
  412147:	dec    esp
  412148:	and    edx,DWORD PTR [ecx]
  41214a:	jp     0x41214c
  41214c:	sti    
  41214d:	mov    edx,0x2f24c1bc
  412152:	enter  0x429e,0xc9
  412156:	retf   
  412157:	lea    ebp,[edi]
  412159:	xchg   edi,eax
  41215a:	adc    bh,ah
  41215c:	dec    ebx
  41215d:	mov    dh,0xd0
  41215f:	popf   
  412160:	ja     0x412183
  412162:	xchg   BYTE PTR [ecx+0x2b],dh
  412165:	ds enter 0x50ec,0x3e
  41216a:	jo     0x412181
  41216c:	mov    ebx,0x6687218f
  412171:	mov    BYTE PTR [ebx-0x6e27bf21],dl
  412177:	pusha  
  412178:	push   edx
  412179:	nop
  41217a:	xor    eax,0x1a47b8af
  41217f:	dec    esp
  412180:	mov    al,0x37
  412182:	pusha  
  412183:	stc    
  412184:	sub    BYTE PTR [ebp+0x24],ah
  412187:	adc    BYTE PTR [ebp+0x38],ah
  41218a:	push   ds
  41218b:	inc    ebx
  41218c:	jge    0x4121f4
  41218e:	mov    ecx,0x39b9225a
  412193:	repnz push ss
  412195:	pop    ebx
  412196:	adc    ch,BYTE PTR [eax+0x7f]
  412199:	and    ah,dl
  41219b:	mov    esp,0x824363b9
  4121a0:	shl    DWORD PTR [ecx+0x485b3aa1],1
  4121a6:	lahf   
  4121a7:	add    al,0xea
  4121a9:	xchg   edx,eax
  4121aa:	fmul   QWORD PTR [ebp+0x62745b25]
  4121b0:	popfw  
  4121b2:	adc    BYTE PTR [ebp-0x7b932a6d],0x37
  4121b9:	std    
  4121ba:	cld    
  4121bb:	mov    cl,0x48
  4121bd:	nop
  4121be:	dec    DWORD PTR [ebp-0x4439bbc6]
  4121c4:	or     eax,0x7e230f1b
  4121c9:	xor    DWORD PTR [edx-0x14],edx
  4121cc:	retf   
  4121cd:	icebp  
  4121ce:	in     eax,dx
  4121cf:	sub    ch,BYTE PTR [esi+edi*1+0xa017889]
  4121d6:	ret    0xdc68
  4121d9:	daa    
  4121da:	(bad)  [ebx+0x5b]
  4121dd:	lods   eax,DWORD PTR ds:[esi]
  4121de:	aam    0x2e
  4121e0:	clc    
  4121e1:	les    ecx,FWORD PTR [eax+0x5e]
  4121e4:	inc    ecx
  4121e5:	sbb    bh,dl
  4121e7:	inc    ebx
  4121e8:	fisub  WORD PTR [ebx]
  4121ea:	jl     0x412181
  4121ec:	cmc    
  4121ed:	loope  0x412243
  4121ef:	bound  ebx,QWORD PTR [edi+0x51a77cc]
  4121f5:	and    eax,0xcaad8a52
  4121fa:	or     BYTE PTR [eax],dh
  4121fc:	mov    ebp,0x82a137de
  412201:	push   ss
  412202:	jnp    0x4121b5
  412204:	imul   esi,DWORD PTR [eax-0x67f47a05],0xfffffffc
  41220b:	cmp    al,0xd2
  41220d:	(bad)  
  41220e:	cmp    al,0x55
  412210:	jmp    0x9b21:0xb7f6fc54
  412217:	push   esi
  412218:	shr    DWORD PTR ds:0x39812dd5,0x1e
  41221f:	adc    DWORD PTR [ebp+0x7e],ecx
  412222:	pop    edi
  412223:	fucom  st(6)
  412225:	outs   dx,BYTE PTR ds:[esi]
  412226:	test   DWORD PTR ds:0x448bc8d,ecx
  41222c:	and    eax,0xd9a38402
  412231:	inc    ebx
  412232:	inc    edi
  412233:	loope  0x412276
  412235:	imul   ecx,DWORD PTR [eax],0x1a
  412238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412239:	lods   al,BYTE PTR ds:[esi]
  41223a:	and    DWORD PTR [edx],eax
  41223c:	pop    ebx
  41223d:	push   0x31
  41223f:	lock pop esp
  412241:	pop    edx
  412242:	mov    ds:0x1187b8f2,ax
  412248:	and    eax,0xc6f9f3c2
  41224d:	sub    edi,DWORD PTR [ebp-0x39]
  412250:	adc    eax,0x4cdcbae7
  412255:	call   0x391c:0xdf20c3d4
  41225c:	sbb    al,0xce
  41225e:	bound  eax,QWORD PTR [esi]
  412260:	shl    BYTE PTR [eax],0x71
  412263:	in     al,0xb4
  412265:	jge    0x4122a6
  412267:	push   ecx
  412268:	sub    BYTE PTR [edx+0x54f8bc02],cl
  41226e:	into   
  41226f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412270:	mov    dh,0xf4
  412272:	adc    edi,DWORD PTR [ebp+0x34]
  412275:	sub    al,0x12
  412277:	push   ebx
  412278:	inc    edi
  412279:	push   ds
  41227a:	sbb    ah,dl
  41227c:	pop    ss
  41227d:	xor    al,0xf4
  41227f:	adc    edi,DWORD PTR ds:0x34377fbf
  412285:	jns    0x4122fb
  412287:	and    BYTE PTR [edi],dh
  412289:	cwde   
  41228a:	sub    al,ch
  41228c:	mov    dl,0x14
  41228e:	test   BYTE PTR [ebx+0x4bba7dec],dh
  412294:	test   dh,bh
  412296:	dec    edi
  412297:	imul   DWORD PTR [esi]
  412299:	pop    edi
  41229a:	pop    ebx
  41229b:	cld    
  41229c:	repnz retf 
  41229e:	pop    ebp
  41229f:	jo     0x4122cc
  4122a1:	adc    eax,0x38786161
  4122a6:	cmp    eax,0x1b45825c
  4122ab:	or     al,0x9
  4122ad:	mov    esi,0xc80a26aa
  4122b2:	push   ebx
  4122b3:	test   BYTE PTR [edx+0x342368fd],ch
  4122b9:	retf   0x753f
  4122bc:	cmp    al,0xf8
  4122be:	dec    esi
  4122bf:	fdiv   QWORD PTR [esi-0x6c]
  4122c2:	xchg   edx,eax
  4122c3:	pop    ebp
  4122c4:	and    eax,edx
  4122c6:	push   es
  4122c7:	cmp    ebx,DWORD PTR [ebp+0x19]
  4122ca:	outs   dx,DWORD PTR ds:[esi]
  4122cb:	xor    DWORD PTR [esi+0x10],0x32a2e984
  4122d2:	and    ebp,esi
  4122d4:	and    ebx,DWORD PTR [edx-0x1a]
  4122d7:	xchg   edi,eax
  4122d8:	ins    DWORD PTR es:[edi],dx
  4122d9:	js     0x4122a3
  4122db:	loopne 0x412303
  4122dd:	mov    ds:0x8fc66786,al
  4122e2:	(bad)  
  4122e3:	(bad)  
  4122e5:	push   ebx
  4122e6:	int    0x2a
  4122e8:	rol    DWORD PTR [edi-0x59661e2b],0xc4
  4122ef:	loopne 0x412289
  4122f1:	or     ah,BYTE PTR [si-0x53c0]
  4122f6:	adc    al,0x77
  4122f8:	mov    edx,0x7a471454
  4122fd:	cli    
  4122fe:	bound  edi,QWORD PTR [edx-0x73]
  412301:	stos   BYTE PTR es:[edi],al
  412302:	pop    DWORD PTR [eax+0x651dbd6f]
  412308:	jmp    0x23d046cb
  41230d:	rcl    BYTE PTR [edx+ebx*4-0x67359d62],cl
  412314:	xor    esp,DWORD PTR [esi-0x1b]
  412317:	rol    BYTE PTR [ebx+0x5f],cl
  41231a:	lea    eax,[ebp-0x5a]
  41231d:	xchg   DWORD PTR [edx],edi
  41231f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412320:	mov    bl,0xec
  412322:	push   cs
  412323:	sbb    dh,BYTE PTR [ebx+0x7091d42b]
  412329:	and    BYTE PTR [ebp+0x72],0xe
  41232d:	mov    ch,0xcb
  41232f:	adc    bl,BYTE PTR [ebp-0x50]
  412332:	sub    al,0xad
  412334:	cmp    DWORD PTR [edx-0x33],ebp
  412337:	push   0x2da2d76a
  41233c:	xlat   BYTE PTR ds:[ebx]
  41233d:	lds    eax,FWORD PTR [ecx-0x174da63a]
  412343:	cld    
  412344:	push   cs
  412345:	xchg   esi,esi
  412347:	pop    ebp
  412348:	mov    BYTE PTR [eax+ebp*8],ah
  41234b:	cmc    
  41234c:	sbb    DWORD PTR [esp+eax*4+0x16de1638],0x305a5a64
  412357:	or     dl,BYTE PTR [eax+0x66]
  41235a:	cli    
  41235b:	jns    0x4123c0
  41235d:	out    dx,eax
  41235e:	mov    eax,0x48573c08
  412363:	ins    DWORD PTR es:[edi],dx
  412364:	loop   0x412300
  412366:	pushf  
  412367:	fst    st(4)
  412369:	mov    ch,0xc3
  41236b:	adc    eax,0x7bbaace3
  412370:	xchg   ecx,eax
  412371:	mov    BYTE PTR [esi+0x6d],dh
  412374:	stos   DWORD PTR es:[edi],eax
  412375:	mov    dl,0xba
  412377:	and    al,0xa5
  412379:	cwde   
  41237a:	mov    al,ds:0x2e5a2c6e
  41237f:	inc    esi
  412380:	add    eax,0xdc36c5ed
  412385:	jl     0x412350
  412387:	jae    0x4123bb
  412389:	cli    
  41238a:	in     eax,dx
  41238b:	xor    eax,0x2aa63c11
  412390:	lds    ebp,FWORD PTR [ecx-0x3d04192f]
  412396:	sub    bh,BYTE PTR [ebx]
  412398:	pop    esp
  412399:	shl    ah,1
  41239b:	fdivr  QWORD PTR [eax]
  41239d:	xor    BYTE PTR [edx+0x9],0x80
  4123a1:	scas   eax,DWORD PTR es:[edi]
  4123a2:	mov    al,0x38
  4123a4:	mov    dl,ch
  4123a6:	(bad)  
  4123a7:	(bad)  
  4123a8:	xor    ebp,ebx
  4123aa:	clc    
  4123ab:	and    bl,dl
  4123ad:	sub    al,0x77
  4123af:	call   0xadc5:0x8db47ccc
  4123b6:	cwde   
  4123b7:	jnp    0x412432
  4123b9:	xchg   edx,eax
  4123ba:	mov    cl,0xaf
  4123bc:	leave  
  4123bd:	cmp    DWORD PTR [esp+edi*8],esi
  4123c0:	bound  ebp,QWORD PTR [eax]
  4123c2:	out    0xfb,al
  4123c4:	dec    eax
  4123c5:	sahf   
  4123c6:	jbe    0x412373
  4123c8:	sbb    bl,BYTE PTR [bp+di-0xc]
  4123cc:	cmp    dh,0x9a
  4123cf:	sti    
  4123d0:	ds ss hlt 
  4123d3:	dec    esi
  4123d4:	mov    ds:0x9ca07c1d,al
  4123d9:	sbb    al,BYTE PTR [esi+0x46]
  4123dc:	aaa    
  4123dd:	into   
  4123de:	enter  0x694f,0x74
  4123e2:	dec    ebx
  4123e3:	ficomp DWORD PTR [ebp-0xd]
  4123e6:	jmp    0x26f4:0x12e1d2f3
  4123ed:	mov    BYTE PTR [ebp+0x5ad672d7],al
  4123f3:	(bad)  
  4123f4:	jge    0x4123a5
  4123f6:	inc    ecx
  4123f7:	loopne 0x412436
  4123f9:	fild   QWORD PTR [esi+0x65851f55]
  4123ff:	adc    edi,ebp
  412401:	or     BYTE PTR [ebx+ebp*8],dl
  412404:	(bad)
  412409:	lods   eax,DWORD PTR ds:[esi]
  41240a:	gs jp  0x4123c9
  41240d:	(bad)  
  41240e:	xor    eax,0xfb0d74e5
  412413:	push   esp
  412414:	and    eax,0xad2c50a4
  412419:	clc    
  41241a:	inc    eax
  41241b:	lahf   
  41241c:	icebp  
  41241d:	cmp    al,0x29
  41241f:	addr16 fsub st,st(5)
  412422:	and    eax,0x16c9f36d
  412427:	cmp    BYTE PTR [ecx-0x57],bl
  41242a:	fcom   QWORD PTR [ecx+0x27]
  41242d:	push   esi
  41242e:	adc    ebx,DWORD PTR [eax-0x2464cbd3]
  412434:	adc    al,0x13
  412436:	rol    BYTE PTR [edx],cl
  412438:	sbb    al,0x15
  41243a:	aad    0x48
  41243c:	imul   esp,DWORD PTR [eax-0x4],0xedffe66e
  412443:	sbb    al,BYTE PTR [edi+0xc1094aa]
  412449:	mov    ah,0x84
  41244b:	push   eax
  41244c:	daa    
  41244d:	jp     0x4124b3
  41244f:	pop    ebx
  412450:	lock cmp DWORD PTR [edi],0x2f29f566
  412457:	xor    DWORD PTR [esi+0x1f],edi
  41245a:	lods   al,BYTE PTR ds:[esi]
  41245b:	js     0x41248c
  41245d:	mov    eax,ds:0x90cf23af
  412462:	ret    0x7efa
  412465:	ds inc eax
  412467:	cwde   
  412468:	jecxz  0x412441
  41246a:	inc    edi
  41246b:	inc    esi
  41246c:	and    al,0x11
  41246e:	repnz and DWORD PTR [ebx+0x19a3a3d6],0xffffff89
  412476:	jge    0x41240e
  412478:	icebp  
  412479:	dec    edx
  41247a:	mov    ds,WORD PTR [ecx]
  41247c:	outs   dx,BYTE PTR ds:[esi]
  41247d:	dec    ecx
  41247e:	fiadd  WORD PTR [esi+0x6174c8d2]
  412484:	aad    0x9f
  412486:	ficom  DWORD PTR [edi+0x6f]
  412489:	xchg   ebp,eax
  41248a:	and    al,BYTE PTR [eax+0xc]
  41248d:	or     eax,0xe9349b65
  412492:	(bad)  
  412493:	ret    
  412494:	xchg   ebp,eax
  412495:	pop    ds
  412496:	mov    ch,0x8e
  412498:	mov    ds:0x270950ab,eax
  41249d:	adc    eax,0x4a12b777
  4124a2:	push   DWORD PTR [edi+0x49]
  4124a5:	add    eax,0x7b99c5d8
  4124aa:	lods   al,BYTE PTR ds:[esi]
  4124ab:	cs sub esi,ecx
  4124ae:	ror    ebp,0x6d
  4124b1:	or     al,0xaf
  4124b3:	lods   al,BYTE PTR ds:[esi]
  4124b4:	inc    ecx
  4124b5:	aam    0xc4
  4124b7:	xchg   ecx,eax
  4124b8:	ror    DWORD PTR [esi],1
  4124ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124bb:	xor    BYTE PTR [ebx],bh
  4124bd:	jns    0x412464
  4124bf:	xlat   BYTE PTR ds:[ebx]
  4124c0:	ins    BYTE PTR es:[edi],dx
  4124c1:	sti    
  4124c2:	sub    eax,edi
  4124c4:	dec    ecx
  4124c5:	mov    ds:0xf3dcfbdb,al
  4124ca:	and    esi,ebp
  4124cc:	jge    0x41252f
  4124ce:	(bad)  
  4124d0:	cld    
  4124d1:	mov    al,0xe1
  4124d3:	ins    BYTE PTR es:[edi],dx
  4124d4:	jp     0x412488
  4124d6:	sub    DWORD PTR [esi+0x71039642],0x545f0df3
  4124e0:	(bad)  
  4124e1:	inc    esp
  4124e2:	xor    al,0x89
  4124e4:	fld    DWORD PTR [edx-0x9]
  4124e7:	mov    ds:0x755a58b4,eax
  4124ec:	jb     0x4124b5
  4124ee:	nop
  4124ef:	frstor [ebx+0x8]
  4124f2:	scas   eax,DWORD PTR es:[edi]
  4124f3:	(bad)  
  4124f5:	push   ds
  4124f6:	add    dh,dh
  4124f8:	add    esi,ecx
  4124fa:	out    0xa6,eax
  4124fc:	mov    esp,?
  4124fe:	and    BYTE PTR [esi+0x7c],bl
  412501:	inc    esi
  412502:	add    eax,0x6d2b1781
  412507:	aad    0x5e
  412509:	gs out dx,eax
  41250b:	mov    dh,0x37
  41250d:	lods   eax,DWORD PTR ds:[esi]
  41250e:	mov    ds:0x7835f3ad,al
  412513:	inc    ebp
  412514:	and    DWORD PTR [edi-0x3a],edx
  412517:	xor    edi,esi
  412519:	(bad)  
  41251a:	xor    DWORD PTR [edx],ecx
  41251c:	retf   
  41251d:	jne    0x412550
  41251f:	and    BYTE PTR [edx-0x34],dh
  412522:	sbb    esi,ebp
  412524:	jnp    0x412557
  412526:	mov    cl,0xf3
  412528:	pop    edx
  412529:	repnz inc edx
  41252b:	out    0xf2,eax
  41252d:	pop    esp
  41252e:	ror    BYTE PTR [ebx+0x41],1
  412531:	pop    edi
  412532:	ret    0x8d28
  412535:	push   ss
  412536:	fimul  WORD PTR [edx]
  412538:	pop    ebx
  412539:	cmc    
  41253a:	inc    edx
  41253b:	mov    cs,esp
  41253d:	das    
  41253e:	in     eax,dx
  41253f:	adc    ebx,edi
  412541:	fs inc ecx
  412543:	adc    BYTE PTR [ebp-0x2a],ch
  412546:	mov    esp,esp
  412548:	xchg   ecx,eax
  412549:	xor    DWORD PTR [eax+0x64789aed],0x29
  412550:	cmp    ch,BYTE PTR ds:0xbf351e86
  412556:	std    
  412557:	stos   DWORD PTR es:[edi],eax
  412558:	push   esp
  412559:	out    dx,eax
  41255a:	pop    esi
  41255b:	xor    eax,0xfcc1c85d
  412560:	push   0x43
  412562:	pushf  
  412563:	in     eax,dx
  412564:	lods   al,BYTE PTR ds:[esi]
  412565:	imul   ebx,DWORD PTR [edi+0x25],0x20
  412569:	arpl   WORD PTR [esi-0x57],bp
  41256c:	(bad)  
  41256d:	rol    BYTE PTR [esp+ebp*8+0x4],cl
  412571:	or     al,0xec
  412573:	push   0xffffffc4
  412575:	xchg   BYTE PTR [esi],cl
  412577:	push   esp
  412578:	push   ecx
  412579:	in     eax,dx
  41257a:	mov    dh,BYTE PTR [esi+0x71ea84b5]
  412580:	out    0xc4,al
  412582:	push   ebp
  412583:	scas   eax,DWORD PTR es:[edi]
  412584:	in     al,0x14
  412586:	fwait
  412587:	pop    esp
  412588:	(bad)  
  412589:	imul   ebx,DWORD PTR [ecx],0xffffffeb
  41258c:	xchg   esp,eax
  41258d:	(bad)  
  41258f:	or     esi,ebp
  412591:	cld    
  412592:	imul   eax,ecx,0x6bf0d6e
  412598:	cmp    DWORD PTR [ecx+ebp*4],0x2d
  41259c:	xchg   esi,eax
  41259d:	fisttp WORD PTR [edi-0x1291c457]
  4125a3:	sub    al,0xf8
  4125a5:	sbb    BYTE PTR [eax+0x17],ah
  4125a8:	mov    ah,0xcb
  4125aa:	shl    al,1
  4125ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ad:	lods   eax,DWORD PTR ds:[esi]
  4125ae:	dec    esp
  4125af:	jl     0x41259c
  4125b1:	outs   dx,DWORD PTR ds:[esi]
  4125b2:	pop    edi
  4125b3:	test   eax,0xd85d5725
  4125b8:	aaa    
  4125b9:	int    0xa4
  4125bb:	in     eax,0xab
  4125bd:	lock mov cl,0x6e
  4125c0:	loopne 0x4125fa
  4125c2:	mov    edi,0xb7bab9cc
  4125c7:	fisttp QWORD PTR [edi-0x6668e32b]
  4125cd:	pop    ss
  4125ce:	inc    esi
  4125cf:	xchg   ebp,eax
  4125d0:	jb     0x41255d
  4125d2:	mov    edi,0x2b0d3592
  4125d7:	push   es
  4125d8:	das    
  4125d9:	sti    
  4125da:	loopne 0x412652
  4125dc:	fstp   DWORD PTR es:[edi-0x2c]
  4125e0:	test   DWORD PTR [ecx+0x27],edi
  4125e3:	(bad)  
  4125e5:	(bad)  
  4125e6:	push   ebp
  4125e7:	jno    0x4125cb
  4125e9:	retf   
  4125ea:	outs   dx,DWORD PTR ds:[esi]
  4125eb:	or     ebx,DWORD PTR [ebx]
  4125ed:	mov    ch,0x9
  4125ef:	test   al,0x8c
  4125f1:	mov    ds:0xbd2a0750,al
  4125f6:	ficom  WORD PTR [ecx-0x5d]
  4125f9:	imul   eax,ecx,0xffffffea
  4125fc:	ins    DWORD PTR es:[edi],dx
  4125fd:	sbb    BYTE PTR [ecx-0x5e],bl
  412600:	outs   dx,DWORD PTR ds:[esi]
  412601:	and    al,0xa7
  412603:	mov    esp,0x9dda9d17
  412608:	sub    cl,BYTE PTR [ebx]
  41260a:	push   ebp
  41260b:	xlat   BYTE PTR ds:[ebx]
  41260c:	cmp    bl,al
  41260e:	xor    bl,BYTE PTR [ecx-0x18]
  412611:	fprem  
  412613:	dec    ecx
  412614:	sbb    ecx,DWORD PTR [eax-0xd]
  412617:	mov    ds:0xc1747bca,eax
  41261c:	jp     0x412647
  41261e:	mov    DWORD PTR [ecx+0x71ded861],esp
  412624:	push   ds
  412625:	or     dl,bh
  412627:	test   eax,0xcabb13ad
  41262c:	aaa    
  41262d:	inc    ebx
  41262e:	ret    
  41262f:	and    esi,DWORD PTR [ebx]
  412631:	add    eax,0xca0d31df
  412636:	scas   al,BYTE PTR es:[edi]
  412637:	xchg   esp,eax
  412638:	mov    bh,0xc
  41263a:	lods   eax,DWORD PTR ds:[esi]
  41263b:	sbb    BYTE PTR [ebp-0x55],cl
  41263e:	sub    DWORD PTR [esi],0x7212570c
  412644:	test   DWORD PTR [eax],0x7d1a9fbd
  41264a:	in     al,dx
  41264b:	ret    0x4542
  41264e:	shr    BYTE PTR [ecx-0x218eefbd],1
  412654:	pop    edx
  412655:	jmp    0x2c08d435
  41265a:	std    
  41265b:	les    ebp,FWORD PTR [eax-0x59cd64f4]
  412661:	xor    esp,ecx
  412663:	mov    ds:0xa72dfbad,al
  412668:	cs jmp 0x412670
  41266b:	cmp    BYTE PTR [edi-0x4a],0x40
  41266f:	mov    al,0xa3
  412671:	rcl    DWORD PTR [ebx+0x40ec08d5],1
  412677:	leave  
  412678:	xor    ah,BYTE PTR [esi+esi*1-0x7fd7f815]
  41267f:	dec    BYTE PTR [eax+edi*4-0x57c37a40]
  412686:	test   BYTE PTR [ebx+0x234ccde2],dh
  41268c:	lods   al,BYTE PTR ds:[esi]
  41268d:	shl    cl,0xbf
  412690:	cmp    BYTE PTR [esp+ecx*2+0x57ee78f8],al
  412697:	xor    ecx,DWORD PTR [edx-0x49ac733a]
  41269d:	sbb    al,0x18
  41269f:	inc    ebx
  4126a0:	push   cs
  4126a1:	jmp    0x92fd:0x180552b
  4126a8:	pop    edx
  4126a9:	lods   al,BYTE PTR ds:[esi]
  4126aa:	ret    0xe4d4
  4126ad:	pop    esi
  4126ae:	fwait
  4126af:	xchg   BYTE PTR [esp+ecx*4+0x16],bl
  4126b3:	jns    0x41266c
  4126b5:	jmp    0x412653
  4126b7:	iret   
  4126b8:	call   0x608f989a
  4126bd:	fdiv   st,st(3)
  4126bf:	jb     0x41273e
  4126c1:	stos   DWORD PTR es:[edi],eax
  4126c2:	in     eax,dx
  4126c3:	ret    
  4126c4:	sar    BYTE PTR [edi-0x73],0x83
  4126c8:	cmp    dh,bl
  4126ca:	mov    cl,0xa
  4126cc:	(bad)  
  4126cd:	lahf   
  4126ce:	cmp    BYTE PTR [edx+esi*8],cl
  4126d1:	inc    eax
  4126d2:	mul    DWORD PTR [ebx]
  4126d4:	xor    BYTE PTR [edx-0x25],dh
  4126d7:	jo     0x4126a3
  4126d9:	mov    ch,0x14
  4126db:	dec    esp
  4126dc:	js     0x41265f
  4126de:	pop    es
  4126df:	mov    BYTE PTR [esi-0x358d55e4],bh
  4126e5:	call   FWORD PTR [esi+0x42df76ae]
  4126eb:	mov    cl,0x29
  4126ed:	popf   
  4126ee:	cld    
  4126ef:	pop    ds
  4126f0:	mov    BYTE PTR [ecx+0x66],bl
  4126f3:	shr    BYTE PTR [edi-0x43],cl
  4126f6:	dec    eax
  4126f7:	pop    eax
  4126f8:	push   esi
  4126f9:	test   eax,0x7d879962
  4126fe:	inc    ebx
  4126ff:	cmp    DWORD PTR [ebx+0x70],eax
  412702:	or     eax,0x783f24fd
  412707:	adc    BYTE PTR [ecx+ecx*2-0x117179ed],ch
  41270e:	outs   dx,BYTE PTR ds:[esi]
  41270f:	mov    WORD PTR [esi+edi*4-0x47],fs
  412713:	add    al,0x20
  412715:	daa    
  412716:	push   DWORD PTR [esi+0x21]
  412719:	mov    edx,0xf3aa1685
  41271e:	adc    edx,DWORD PTR [eax-0x6a]
  412721:	dec    edx
  412722:	jmp    0x4126ed
  412724:	cs sbb al,0x39
  412727:	je     0x41271c
  412729:	popa   
  41272a:	test   bh,bl
  41272c:	xchg   edi,eax
  41272d:	in     eax,0xab
  41272f:	aam    0x87
  412731:	jnp    0x4126df
  412733:	add    ch,dl
  412735:	in     eax,0x9c
  412737:	pop    ds
  412738:	daa    
  412739:	push   eax
  41273a:	push   cs
  41273b:	mov    ebp,0xb7d705c0
  412740:	and    dl,al
  412742:	aad    0xed
  412744:	pop    ds
  412745:	loop   0x412710
  412747:	popf   
  412748:	dec    ebp
  412749:	call   0x55ba:0x523779ba
  412750:	mov    ebx,0xfcc403ea
  412755:	mov    eax,ds:0x1218675f
  41275a:	jne    0x4126e3
  41275c:	sbb    al,0xc6
  41275e:	dec    ebp
  41275f:	mov    eax,ds:0xc3bbc1b1
  412764:	sbb    esp,DWORD PTR [ebp+0xe041056]
  41276a:	inc    ebp
  41276b:	push   ebx
  41276c:	fcom   QWORD PTR [esi+ebp*2-0x3b]
  412770:	add    edx,DWORD PTR [edx+edx*8+0x7]
  412774:	or     cl,BYTE PTR [ebp-0x73]
  412777:	mov    dl,0xcf
  412779:	gs push ecx
  41277b:	pusha  
  41277c:	loope  0x4127b9
  41277e:	scas   eax,DWORD PTR es:[edi]
  41277f:	xchg   DWORD PTR [ecx-0x38],esp
  412782:	pop    eax
  412784:	jae    0x41276f
  412786:	daa    
  412787:	mov    ch,0xed
  412789:	pop    edx
  41278a:	xchg   ebp,eax
  41278b:	xchg   ecx,eax
  41278c:	push   eax
  41278d:	jns    0x4127c6
  41278f:	mov    ds:0x7efeadf8,eax
  412794:	ret    0x753a
  412797:	xor    DWORD PTR [esi-0xf581c82],esp
  41279d:	jle    0x41275e
  41279f:	xchg   ecx,eax
  4127a0:	out    dx,al
  4127a1:	add    eax,DWORD PTR [eax+0x2876fe82]
  4127a7:	push   ds
  4127a8:	push   0x13
  4127aa:	loope  0x412804
  4127ac:	aaa    
  4127ad:	sub    BYTE PTR [esi-0x232ad8a9],bh
  4127b3:	in     al,dx
  4127b4:	xor    ecx,ebp
  4127b6:	inc    eax
  4127b7:	cdq    
  4127b8:	mov    esp,DWORD PTR [edx]
  4127ba:	mov    al,BYTE PTR [ecx+eiz*8]
  4127bd:	lods   eax,DWORD PTR ds:[esi]
  4127be:	xchg   DWORD PTR [esi+0x5a4dc7dc],ebx
  4127c4:	xor    eax,0x96c72a1a
  4127c9:	adc    DWORD PTR [eax-0x44],ecx
  4127cc:	pop    es
  4127cd:	cs jmp 0xf82a5cba
  4127d3:	scas   eax,DWORD PTR es:[edi]
  4127d4:	rcl    bl,cl
  4127d6:	sbb    al,0x6
  4127d8:	enter  0xdde5,0x67
  4127dc:	jo     0x4127b3
  4127de:	fbld   TBYTE PTR [ecx+edi*8]
  4127e1:	fisttp WORD PTR [eax]
  4127e3:	mov    edi,0x123941da
  4127e8:	and    ebp,edx
  4127ea:	add    ebp,DWORD PTR [ebx+0x4]
  4127ed:	xchg   ebp,eax
  4127ee:	test   al,0x5
  4127f0:	ret    
  4127f1:	std    
  4127f2:	sbb    ch,BYTE PTR [eax-0x59766cf]
  4127f8:	retf   
  4127f9:	pop    ecx
  4127fa:	fdiv   st,st(5)
  4127fc:	xchg   edx,eax
  4127fd:	inc    ecx
  4127fe:	sbb    dh,BYTE PTR [eax-0x3b]
  412801:	pop    edi
  412802:	into   
  412803:	push   esi
  412804:	cs stc 
  412806:	movzx  eax,WORD PTR [edx-0x64c3d344]
  41280d:	imul   esi,esi,0x14b52c57
  412813:	sbb    esi,ebp
  412815:	frstor [ecx]
  412817:	sbb    DWORD PTR ds:0xa6faab,esp
  41281d:	imul   edi,DWORD PTR [esi],0x9822fc54
  412823:	arpl   WORD PTR [eax-0x5b],bx
  412826:	sbb    BYTE PTR [eax+eax*2+0x4eb378ea],dh
  41282d:	(bad)  
  41282f:	aas    
  412830:	push   es
  412831:	sub    BYTE PTR [edi],bh
  412833:	popf   
  412834:	je     0x4127d8
  412836:	mov    dh,0x95
  412838:	jbe    0x41283a
  41283a:	cmp    bh,BYTE PTR [ebp+ebp*1-0x64]
  41283e:	aam    0x16
  412840:	xor    dl,0x86
  412843:	in     al,0x44
  412845:	into   
  412846:	das    
  412847:	das    
  412848:	xor    eax,0xbf80fb38
  41284d:	jp     0x412819
  41284f:	scas   al,BYTE PTR es:[edi]
  412850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412851:	ja     0x4128b0
  412853:	or     al,0x43
  412855:	jl     0x41284a
  412857:	fs (bad) 
  412859:	ins    BYTE PTR es:[edi],dx
  41285a:	sub    bl,BYTE PTR [edx-0x480af00b]
  412860:	adc    esi,DWORD PTR [edi]
  412862:	sub    al,0xb8
  412864:	xor    BYTE PTR [esi],bh
  412866:	stos   BYTE PTR es:[edi],al
  412867:	add    DWORD PTR [edi+0x41283234],esi
  41286d:	inc    ebp
  41286e:	cdq    
  41286f:	or     al,0xde
  412871:	or     eax,0xcdcf9f83
  412876:	pop    es
  412877:	or     esp,DWORD PTR [esi]
  412879:	push   es
  41287a:	jae    0x41284f
  41287c:	loop   0x41284f
  41287e:	leave  
  41287f:	jl     0x412863
  412881:	mov    ebx,0xc31b2f47
  412886:	lods   eax,DWORD PTR ds:[esi]
  412887:	pop    ss
  412888:	and    DWORD PTR [eax+0x59],esi
  41288b:	push   ecx
  41288c:	shl    edx,cl
  41288e:	jge    0x412901
  412890:	and    DWORD PTR [edx+edi*8],0xffffffe6
  412894:	jno    0x41281b
  412896:	sub    eax,0x6fe36e2c
  41289b:	das    
  41289c:	jmp    0x3e9c:0xda982a38
  4128a3:	ss xor ah,cl
  4128a6:	leave  
  4128a7:	inc    edx
  4128a8:	or     al,BYTE PTR [esi+0x20]
  4128ab:	into   
  4128ac:	aam    0x4a
  4128ae:	push   esi
  4128af:	xor    dh,BYTE PTR [edi+0x6d]
  4128b2:	mov    ecx,0xe04bc4c6
  4128b7:	into   
  4128b8:	push   ecx
  4128b9:	mov    ?,WORD PTR [eax+0xa]
  4128bc:	xor    BYTE PTR [eax+ecx*8-0x3],dl
  4128c0:	leave  
  4128c1:	sbb    ah,BYTE PTR ds:0xadd945f4
  4128c7:	mov    bl,0x97
  4128c9:	in     al,dx
  4128ca:	retf   0xdcaf
  4128cd:	push   edx
  4128ce:	inc    edi
  4128cf:	daa    
  4128d0:	mov    dl,0xe1
  4128d2:	retf   
  4128d3:	fwait
  4128d4:	and    al,0x78
  4128d6:	mov    ds:0x2dafeb10,eax
  4128db:	mov    ah,0xf9
  4128dd:	inc    ebp
  4128de:	xchg   edi,eax
  4128df:	repnz in al,0x55
  4128e2:	sbb    BYTE PTR [edi+edi*8+0x47],0x8b
  4128e7:	adc    DWORD PTR [edx-0x62ac87ad],esp
  4128ed:	inc    ebp
  4128ee:	outs   dx,DWORD PTR ds:[esi]
  4128ef:	push   eax
  4128f0:	idiv   dh
  4128f2:	leave  
  4128f3:	inc    edi
  4128f4:	in     al,dx
  4128f5:	aaa    
  4128f6:	or     bh,BYTE PTR [eax+0x1948b59a]
  4128fc:	jge    0x4128a2
  4128fe:	xor    cl,BYTE PTR [eax-0x42]
  412901:	(bad)  [edx]
  412903:	jg     0x412906
  412905:	jnp    0x4128f4
  412907:	cwde   
  412908:	sub    eax,0xa22de8a8
  41290d:	sub    cl,BYTE PTR [esi]
  41290f:	mov    ds:0xf3ce800b,eax
  412914:	push   esp
  412915:	mov    bh,0x8
  412917:	daa    
  412918:	fld    QWORD PTR [ebx]
  41291a:	adc    al,ch
  41291c:	(bad)  
  41291d:	jl     0x41292f
  41291f:	dec    esp
  412920:	adc    al,0xa4
  412922:	aas    
  412923:	fistp  DWORD PTR ds:0x2130de18
  412929:	leave  
  41292a:	inc    ecx
  41292b:	jl     0x41290e
  41292d:	inc    ecx
  41292e:	xlat   BYTE PTR ds:[ebx]
  41292f:	je     0x412983
  412931:	pavgw  mm0,mm1
  412934:	cs mov dx,0x77c7
  412939:	xor    al,0xea
  41293b:	inc    eax
  41293c:	inc    eax
  41293d:	jle    0x41291d
  41293f:	sbb    BYTE PTR [eax+0x788b6557],bl
  412945:	into   
  412946:	pop    eax
  412947:	mov    ecx,0xf08b9852
  41294c:	cmp    bh,BYTE PTR [edx-0x6d]
  41294f:	cmovg  ebx,ebp
  412952:	jo     0x4128fa
  412954:	push   ebx
  412955:	retf   
  412956:	add    dl,ah
  412958:	sbb    al,0x97
  41295a:	mov    cl,0x24
  41295c:	push   edx
  41295d:	mov    al,ds:0x574d0236
  412962:	cmp    eax,0x2bbb2e1c
  412967:	and    al,0x1d
  412969:	dec    esi
  41296a:	mov    al,0xcb
  41296c:	test   al,0x96
  41296e:	xor    ah,dl
  412970:	push   es
  412971:	jg     0x412928
  412973:	push   eax
  412974:	sbb    al,0x79
  412976:	mov    ah,0xe3
  412978:	daa    
  412979:	ins    DWORD PTR es:[edi],dx
  41297a:	jle    0x4129c4
  41297c:	dec    esp
  41297d:	mov    bl,BYTE PTR [ecx]
  41297f:	jg     0x41291b
  412981:	aam    0xf
  412983:	cli    
  412984:	push   0xa
  412986:	aaa    
  412987:	jmp    0x64fe:0x782c6e51
  41298e:	test   ecx,esp
  412990:	cmp    eax,0xe404aec8
  412995:	outs   dx,BYTE PTR ds:[esi]
  412996:	adc    esp,edi
  412998:	sub    BYTE PTR [edi],0xcb
  41299b:	adc    al,0xee
  41299d:	push   edx
  41299e:	rcl    edi,1
  4129a0:	push   ecx
  4129a1:	jp     0x412a22
  4129a3:	(bad)  
  4129a5:	xor    al,0xac
  4129a7:	cs add cl,bh
  4129aa:	jle    0x412944
  4129ac:	or     cl,BYTE PTR [ebx-0x4d]
  4129af:	repz fcom st(2)
  4129b2:	adc    DWORD PTR [ebx-0x6fe316ab],esp
  4129b8:	daa    
  4129b9:	loopne 0x41299d
  4129bb:	cmp    cl,BYTE PTR [esi-0x73786cc8]
  4129c1:	shr    DWORD PTR [ebx],cl
  4129c3:	stc    
  4129c4:	xlat   BYTE PTR ds:[ebx]
  4129c5:	(bad)  
  4129c6:	adc    dl,ch
  4129c8:	cdq    
  4129c9:	iret   
  4129ca:	mov    BYTE PTR [edi+0x78f5c8e2],bh
  4129d0:	jmp    0x8:0xc1bf9c4f
  4129d7:	retf   0x6f3d
  4129da:	or     ah,dh
  4129dc:	mov    BYTE PTR [esi-0x6de7c8ee],ah
  4129e2:	xchg   esi,eax
  4129e3:	ins    BYTE PTR es:[edi],dx
  4129e4:	aas    
  4129e5:	aam    0x2b
  4129e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129e8:	mov    dl,0x7a
  4129ea:	jno    0x412a4b
  4129ec:	sbb    bl,bh
  4129ee:	or     BYTE PTR [edi-0x2ea705ee],cl
  4129f4:	(bad)  
  4129f5:	clc    
  4129f6:	xchg   esp,eax
  4129f7:	sub    al,0xda
  4129f9:	lock sub esi,DWORD PTR ds:0x7e024b34
  412a00:	and    al,0x22
  412a02:	push   cs
  412a03:	and    esi,DWORD PTR [edx-0x5d5e5c8]
  412a09:	retf   0xede5
  412a0c:	cwde   
  412a0d:	jecxz  0x4129d8
  412a0f:	cmc    
  412a10:	ins    DWORD PTR es:[edi],dx
  412a11:	pop    ebp
  412a12:	adc    BYTE PTR [ebx+0xc],al
  412a15:	dec    ebp
  412a16:	sub    bh,BYTE PTR [eax]
  412a18:	xor    eax,0x22296775
  412a1d:	fild   DWORD PTR [edi]
  412a1f:	cmp    ebx,DWORD PTR [edi+0x37]
  412a22:	sub    eax,esp
  412a24:	cs mov ebp,0x570f3bf7
  412a2a:	test   eax,0x19a1cb9a
  412a2f:	js     0x4129b9
  412a31:	sahf   
  412a32:	loope  0x4129df
  412a34:	outs   dx,BYTE PTR ds:[esi]
  412a35:	add    DWORD PTR [ebp+0x39],ecx
  412a38:	test   eax,0x2cd96ee
  412a3d:	add    cl,BYTE PTR [edx+edi*4+0x18]
  412a41:	mov    ds:0x37982f79,eax
  412a46:	sub    DWORD PTR [edi],eax
  412a48:	int3   
  412a49:	rcl    BYTE PTR [edi+0x3e2c8f13],1
  412a4f:	(bad)  
  412a50:	cmp    esi,DWORD PTR [esi+0x2d]
  412a53:	and    BYTE PTR [eax+0x5e],bl
  412a56:	iret   
  412a57:	sahf   
  412a58:	pop    edx
  412a59:	shl    DWORD PTR [esi],1
  412a5b:	lea    ebx,[ecx-0x77682776]
  412a61:	arpl   WORD PTR [eax+ebp*8],cx
  412a64:	pop    esi
  412a65:	faddp  st(0),st
  412a67:	nop
  412a68:	mov    dl,0xc8
  412a6a:	out    0xdc,eax
  412a6c:	adc    esi,0xffffffe4
  412a6f:	or     al,0x47
  412a71:	add    ebp,DWORD PTR [edi]
  412a73:	outs   dx,BYTE PTR ds:[esi]
  412a74:	mov    ebx,0xc0540e04
  412a79:	lods   al,BYTE PTR ds:[esi]
  412a7a:	(bad)  
  412a7b:	aam    0x4
  412a7d:	xchg   edi,eax
  412a7e:	xor    edx,DWORD PTR [ecx-0x59]
  412a81:	push   ebx
  412a82:	xchg   edx,eax
  412a83:	icebp  
  412a84:	inc    eax
  412a85:	ror    BYTE PTR ds:0x3033057f,0x88
  412a8c:	inc    edx
  412a8d:	push   edi
  412a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a8f:	sbb    BYTE PTR [ecx-0x54a15bb],cl
  412a95:	in     al,dx
  412a96:	sbb    BYTE PTR [esi],dl
  412a98:	ficomp DWORD PTR [ebx]
  412a9a:	dec    ecx
  412a9b:	out    0x1a,al
  412a9d:	xor    ebx,DWORD PTR [ecx]
  412a9f:	jl     0x412a4a
  412aa1:	jnp    0x412ab0
  412aa3:	adc    eax,0xb4e3cae7
  412aa8:	and    DWORD PTR [edi-0x7d],ebx
  412aab:	push   0x9c2213f9
  412ab0:	mov    bl,0x63
  412ab2:	jle    0x412a61
  412ab4:	inc    edx
  412ab5:	stc    
  412ab6:	hlt    
  412ab7:	jns    0x412aa3
  412ab9:	popf   
  412aba:	sub    eax,0xcf184064
  412abf:	sbb    al,0xd7
  412ac1:	mov    esp,0xff64b615
  412ac6:	stc    
  412ac7:	out    0x3f,eax
  412ac9:	sbb    esi,esp
  412acb:	lods   al,BYTE PTR ds:[esi]
  412acc:	and    eax,0xa2bec4d9
  412ad1:	nop
  412ad2:	outs   dx,DWORD PTR ds:[esi]
  412ad3:	inc    eax
  412ad4:	sahf   
  412ad5:	adc    DWORD PTR [eax+0x629ee5a4],esi
  412adb:	out    0x1b,al
  412add:	pop    esi
  412ade:	and    al,0xec
  412ae0:	xor    ecx,DWORD PTR [edi-0x5dc7c41d]
  412ae6:	(bad)  
  412ae7:	push   ebp
  412ae8:	cli    
  412ae9:	dec    dx
  412aeb:	call   0x9bd5:0x589e0c1c
  412af2:	jnp    0x412aae
  412af4:	outs   dx,DWORD PTR ds:[esi]
  412af5:	fwait
  412af6:	sbb    BYTE PTR [esi+0x5dd7c3c],ch
  412afc:	stos   BYTE PTR es:[edi],al
  412afd:	iret   
  412afe:	adc    DWORD PTR [esi+0x18],eax
  412b01:	stos   BYTE PTR es:[edi],al
  412b02:	add    BYTE PTR [ecx],cl
  412b04:	ins    BYTE PTR es:[edi],dx
  412b05:	(bad)  [ebp+0x50]
  412b08:	push   eax
  412b09:	rol    DWORD PTR [ecx+0xe],cl
  412b0c:	inc    DWORD PTR [edi+eiz*4]
  412b0f:	test   DWORD PTR [edx+0x3cbfa1a8],ebx
  412b15:	inc    edi
  412b16:	cmp    DWORD PTR [eax-0x12],eax
  412b19:	inc    edx
  412b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b1b:	das    
  412b1c:	(bad)  [ebp-0x54addaba]
  412b22:	scas   al,BYTE PTR es:[edi]
  412b23:	scas   eax,DWORD PTR es:[edi]
  412b24:	pop    es
  412b25:	fxch   st(7)
  412b27:	cld    
  412b28:	mov    dh,BYTE PTR [esi]
  412b2a:	(bad)  
  412b2b:	push   eax
  412b2c:	lods   al,BYTE PTR ds:[esi]
  412b2d:	sub    dl,dh
  412b2f:	stos   DWORD PTR es:[edi],eax
  412b30:	fisttp WORD PTR [ebx-0x51]
  412b33:	cs push ecx
  412b35:	arpl   WORD PTR [edx],si
  412b37:	jne    0x412aea
  412b39:	(bad)  
  412b3a:	jecxz  0x412ae8
  412b3c:	les    ebp,FWORD PTR [eax]
  412b3e:	adc    al,0xb
  412b40:	js     0x412b00
  412b42:	sbb    eax,0xa6d2c06b
  412b47:	xchg   edx,eax
  412b48:	xor    al,0x95
  412b4a:	imul   edi,esi,0x6050a17c
  412b50:	into   
  412b51:	aad    0xd7
  412b53:	repnz mov cl,bl
  412b56:	mov    edx,0x6c051053
  412b5b:	push   ecx
  412b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b5d:	sbb    eax,DWORD PTR ds:0x5fa435
  412b63:	sti    
  412b64:	xor    BYTE PTR [ecx+0x489465ad],dl
  412b6a:	stc    
  412b6b:	mul    BYTE PTR [esi-0x3d]
  412b6e:	cmp    ebx,DWORD PTR [esi*4-0x15e54fb1]
  412b75:	in     al,0x30
  412b77:	jae    0x412b5f
  412b79:	sub    ch,BYTE PTR [ecx]
  412b7b:	or     edi,DWORD PTR [edi]
  412b7d:	mov    WORD PTR [ecx],es
  412b7f:	jmp    0xb9dc:0x82517ede
  412b86:	cmp    esi,DWORD PTR [ecx+ebx*1]
  412b89:	in     eax,dx
  412b8a:	adc    al,dh
  412b8c:	adc    ch,dh
  412b8e:	fsub   st(2),st
  412b90:	lock push ecx
  412b92:	lds    ebx,FWORD PTR [ebx-0x11]
  412b95:	mov    cl,0x10
  412b97:	jp     0x412b70
  412b99:	inc    ebx
  412b9a:	fmul   QWORD PTR [edi]
  412b9c:	push   cs
  412b9d:	pop    ds
  412b9e:	out    0x7e,eax
  412ba0:	loop   0x412b24
  412ba2:	xchg   ebx,ebp
  412ba4:	ja     0x412b7b
  412ba6:	ja     0x412b96
  412ba8:	rcr    bh,cl
  412baa:	arpl   WORD PTR [edi+edi*1],di
  412bad:	sbb    ebp,ecx
  412baf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bb0:	imul   bh
  412bb2:	out    0xc3,al
  412bb4:	cmp    al,BYTE PTR [edx+ebp*8+0x5f]
  412bb8:	cmp    eax,0x308097d3
  412bbd:	sahf   
  412bbe:	ins    DWORD PTR es:[edi],dx
  412bbf:	xor    al,0xb2
  412bc1:	jle    0x412bee
  412bc3:	sub    esp,DWORD PTR [esi+0x27]
  412bc6:	push   0x7ad6d549
  412bcb:	jle    0x412bb8
  412bcd:	mov    ecx,fs
  412bcf:	jp     0x412c05
  412bd1:	xchg   esp,eax
  412bd2:	les    ebp,FWORD PTR [ebx-0x2c]
  412bd5:	pop    edx
  412bd6:	or     al,0x8c
  412bd8:	fstp   QWORD PTR [eax]
  412bda:	ficom  DWORD PTR [esp+ebp*1+0xd]
  412bde:	loope  0x412c21
  412be0:	rcr    bh,1
  412be2:	popf   
  412be3:	xor    al,0xb6
  412be5:	mov    bl,0x22
  412be7:	dec    ecx
  412be8:	pusha  
  412be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bea:	or     cl,BYTE PTR [eax-0x50efbf51]
  412bf0:	stc    
  412bf1:	imul   ecx,DWORD PTR [edx+0x167c080],0xffffffef
  412bf8:	not    DWORD PTR [ebx-0x10b3c5ad]
  412bfe:	dec    ebx
  412bff:	mov    edi,0x265ad8f5
  412c04:	not    BYTE PTR [ebx]
  412c06:	retf   0x864c
  412c09:	outs   dx,DWORD PTR ds:[esi]
  412c0a:	mov    bh,0x21
  412c0c:	sbb    BYTE PTR ss:[esi+0x601d6331],bh
  412c13:	imul   edi,DWORD PTR [edi-0x78b290e1],0xffffffec
  412c1a:	mov    DWORD PTR [esi+0x66],0x862c58a0
  412c21:	rcr    BYTE PTR [eax],0x92
  412c24:	pop    eax
  412c25:	icebp  
  412c26:	imul   ecx,eax,0x6aac0372
  412c2c:	clc    
  412c2d:	gs or  eax,0xa44854cc
  412c33:	push   ebp
  412c34:	push   cs
  412c35:	test   DWORD PTR [eax-0x7ec5e20e],edi
  412c3b:	ret    
  412c3c:	test   al,0x11
  412c3e:	push   es
  412c3f:	push   cs
  412c40:	clc    
  412c41:	pop    esi
  412c42:	jno    0x412cbe
  412c44:	aam    0xc5
  412c46:	sbb    BYTE PTR [edx-0x4b],bl
  412c49:	fwait
  412c4a:	iret   
  412c4b:	push   esp
  412c4c:	test   ebx,ebx
  412c4e:	pushf  
  412c4f:	and    BYTE PTR [esi],0x51
  412c52:	xlat   BYTE PTR ds:[ebx]
  412c53:	scas   al,BYTE PTR es:[edi]
  412c54:	pop    eax
  412c55:	mov    cl,0x84
  412c57:	rcr    BYTE PTR [edx+ebp*4-0x3e],cl
  412c5b:	(bad)  [edx+ebx*2+0x6c]
  412c5f:	pusha  
  412c60:	jbe    0x412c4c
  412c62:	jl     0x412c67
  412c64:	ins    BYTE PTR es:[edi],dx
  412c65:	call   0xcff0991
  412c6a:	fsubr  QWORD PTR [esi+0x45a155a7]
  412c70:	fild   DWORD PTR [ecx+0x4ce4a729]
  412c76:	popf   
  412c77:	cwde   
  412c78:	ret    0x20e3
  412c7b:	adc    al,0x9d
  412c7d:	bound  esp,QWORD PTR [eax+0x30]
  412c80:	jnp    0x412cc3
  412c82:	es pop es
  412c84:	scas   al,BYTE PTR es:[edi]
  412c85:	inc    BYTE PTR [edx]
  412c87:	pop    ss
  412c88:	fnstenv [ecx]
  412c8a:	mov    dh,0x22
  412c8c:	dec    ebp
  412c8d:	test   DWORD PTR [esi],edx
  412c8f:	sar    DWORD PTR fs:[esi-0x6e],cl
  412c93:	sbb    DWORD PTR [esi-0x8132e3a],edx
  412c99:	je     0x412c32
  412c9b:	aam    0x8c
  412c9d:	les    ebx,FWORD PTR [ebp+0x55]
  412ca0:	lods   eax,DWORD PTR ds:[esi]
  412ca1:	popf   
  412ca2:	inc    edx
  412ca3:	pop    ecx
  412ca4:	cmp    DWORD PTR [eax],ebp
  412ca6:	inc    esp
  412ca7:	fild   WORD PTR [ecx+ebp*8+0x54]
  412cab:	ins    DWORD PTR es:[edi],dx
  412cac:	cmp    al,BYTE PTR [edi-0x3d30a8db]
  412cb2:	icebp  
  412cb3:	mov    bl,0xd
  412cb5:	dec    eax
  412cb6:	sub    al,0x20
  412cb8:	xchg   ecx,eax
  412cb9:	xor    eax,DWORD PTR [edi-0x10]
  412cbc:	test   eax,0xf2d1243f
  412cc1:	and    DWORD PTR [esi-0x3c],edx
  412cc4:	or     DWORD PTR ds:[eax],ebx
  412cc7:	xchg   edi,eax
  412cc8:	out    dx,eax
  412cc9:	aaa    
  412cca:	mov    cl,0xf2
  412ccc:	push   ebp
  412ccd:	mov    al,ds:0x18f0493
  412cd2:	xchg   esi,eax
  412cd3:	sbb    BYTE PTR [edi],cl
  412cd5:	in     al,0xab
  412cd7:	dec    BYTE PTR [eax+0x5b]
  412cda:	lds    eax,FWORD PTR ss:[esi+0x3e]
  412cde:	std    
  412cdf:	xlat   BYTE PTR ds:[ebx]
  412ce0:	and    DWORD PTR [edi],edx
  412ce2:	cmp    eax,0xaee1281d
  412ce7:	inc    esi
  412ce8:	jb     0x412cda
  412cea:	popf   
  412ceb:	push   es
  412cec:	ret    0x8700
  412cef:	stc    
  412cf0:	imul   ebp,DWORD PTR [eax],0x120ea13d
  412cf6:	push   ecx
  412cf7:	cs or  al,0xbb
  412cfa:	iret   
  412cfb:	mov    esi,0xd46a0e3d
  412d00:	outs   dx,DWORD PTR ds:[esi]
  412d01:	lea    eax,[eax+0x57]
  412d04:	push   ss
  412d05:	mov    DWORD PTR [eax],0xa3abfc51
  412d0b:	enter  0x6dbc,0xb9
  412d0f:	dec    edx
  412d10:	(bad)  
  412d11:	int    0x6f
  412d13:	ja     0x412d44
  412d15:	dec    edx
  412d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d17:	pop    esi
  412d18:	sar    DWORD PTR [ebp-0x42],cl
  412d1b:	loopne 0x412d5f
  412d1d:	sahf   
  412d1e:	data16 jno 0x412cc2
  412d21:	arpl   WORD PTR [edi+0x6cfd4398],si
  412d27:	ret    0xea
  412d2a:	ret    
  412d2b:	jg     0x412d6b
  412d2d:	into   
  412d2e:	call   0xfd53:0x7456a249
  412d35:	out    dx,eax
  412d36:	ds dec ebx
  412d38:	mov    DWORD PTR [esi],eax
  412d3a:	sbb    ebp,DWORD PTR [esi]
  412d3c:	xchg   edx,eax
  412d3d:	and    BYTE PTR [ecx+0x11a6b520],0x2
  412d44:	mov    ?,WORD PTR [edx+0x52]
  412d47:	in     al,0xe8
  412d49:	add    eax,0x6c627908
  412d4e:	hlt    
  412d4f:	sub    eax,0x97d46f00
  412d54:	and    BYTE PTR [eax-0x7d],bl
  412d57:	adc    al,0xcc
  412d59:	test   ebx,edi
  412d5b:	or     al,0x83
  412d5d:	push   ss
  412d5e:	add    ecx,eax
  412d60:	aas    
  412d61:	mov    ebp,esp
  412d63:	shl    BYTE PTR [ebx],cl
  412d65:	cwde   
  412d66:	or     BYTE PTR [eax+0xe],ah
  412d69:	aaa    
  412d6a:	(bad)  
  412d6b:	fclex  
  412d6e:	inc    esp
  412d6f:	mov    ch,0x89
  412d71:	push   ds
  412d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d73:	sub    BYTE PTR [ebx-0x791fbbdf],bh
  412d79:	test   al,0x6f
  412d7b:	stc    
  412d7c:	mov    bl,dh
  412d7e:	std    
  412d7f:	pop    ss
  412d80:	xchg   ebx,eax
  412d81:	in     al,dx
  412d82:	and    BYTE PTR [edi-0x5e],cl
  412d85:	dec    ebx
  412d86:	jmp    0x618c:0xbce7fb61
  412d8d:	scas   eax,DWORD PTR es:[edi]
  412d8e:	and    eax,0xfc1ac52f
  412d93:	cmp    eax,0xa5da9829
  412d98:	ss mov edi,0x90b578b3
  412d9e:	mov    ch,0xb2
  412da0:	inc    ebx
  412da1:	lods   eax,DWORD PTR ds:[esi]
  412da2:	popa   
  412da3:	cld    
  412da4:	hlt    
  412da5:	cld    
  412da6:	cmp    eax,0x35c4cde9
  412dab:	inc    esi
  412dac:	adc    edx,DWORD PTR [esi]
  412dae:	mov    fs,WORD PTR [edx+eax*8]
  412db1:	adc    esp,DWORD PTR ds:0x371fe167
  412db7:	jb     0x412da6
  412db9:	stos   DWORD PTR es:[edi],eax
  412dba:	adc    BYTE PTR [esi+0x74dd5c09],bl
  412dc0:	ret    0x30bc
  412dc3:	lahf   
  412dc4:	shl    BYTE PTR [ecx+0x5c481899],cl
  412dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcb:	and    eax,0x205880d0
  412dd0:	out    dx,eax
  412dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd2:	cmp    al,0xcd
  412dd4:	enter  0x251d,0x2b
  412dd8:	adc    bl,BYTE PTR [edi+0x3ea3b6c4]
  412dde:	cld    
  412ddf:	mov    edx,0xb412fb95
  412de4:	sub    al,0x33
  412de6:	mov    ds:0xe8405876,al
  412deb:	push   cs
  412dec:	or     ebp,0xe994bdc8
  412df2:	xlat   BYTE PTR ds:[ebx]
  412df3:	ins    BYTE PTR es:[edi],dx
  412df4:	stos   BYTE PTR es:[edi],al
  412df5:	fld    DWORD PTR [ecx+0x46987e9f]
  412dfb:	sbb    DWORD PTR [ebx+0x1630c37],0xccfe7307
  412e05:	ret    0x76fb
  412e08:	fidivr WORD PTR [eax+0x74]
  412e0b:	idiv   BYTE PTR [eax+edx*8+0x1f]
  412e0f:	scas   eax,DWORD PTR es:[edi]
  412e10:	es bnd data16 js 0x412e45
  412e15:	les    ecx,FWORD PTR [eax-0x53c23a51]
  412e1b:	and    BYTE PTR [ecx+0x49f39436],dh
  412e21:	scas   al,BYTE PTR es:[edi]
  412e22:	pop    edx
  412e23:	stos   DWORD PTR es:[edi],eax
  412e24:	cli    
  412e25:	call   0x8bcb:0x3c8aa059
  412e2c:	shl    BYTE PTR [ecx-0x71],1
  412e2f:	fwait
  412e30:	fs (bad) 
  412e32:	std    
  412e33:	sbb    eax,0x8c4c6c5b
  412e38:	out    dx,eax
  412e39:	fidivr DWORD PTR [edi+0x6]
  412e3c:	out    0xdf,eax
  412e3e:	adc    edi,DWORD PTR [eax+0x61]
  412e41:	push   ebp
  412e42:	or     BYTE PTR [ebx+0x26feea54],bl
  412e48:	or     edx,DWORD PTR [eax-0x7ad72ec8]
  412e4e:	cmp    DWORD PTR [esi+edx*1],esi
  412e51:	sub    DWORD PTR [ebx+0x1c],esp
  412e54:	(bad)  
  412e55:	xor    DWORD PTR [eax-0x5f40420a],eax
  412e5b:	sbb    al,0xb8
  412e5d:	sub    DWORD PTR [ecx-0x488df2e5],ebx
  412e63:	lahf   
  412e64:	arpl   WORD PTR [edi-0x67445ec3],bp
  412e6a:	xadd   edi,edi
  412e6d:	ss repz int 0x59
  412e71:	inc    ebp
  412e72:	mov    esp,0x4975de4b
  412e77:	sbb    DWORD PTR [edx+0x7e41b319],ecx
  412e7d:	fild   QWORD PTR [esi-0xc]
  412e80:	fst    DWORD PTR [ebp-0x6765baa7]
  412e86:	sbb    DWORD PTR [ecx+0x706843a7],edi
  412e8c:	les    ebp,FWORD PTR [ebx+0x79b6b99e]
  412e92:	xlat   BYTE PTR ds:[ebx]
  412e93:	sbb    esi,esi
  412e95:	xor    al,0x5c
  412e97:	mov    ecx,0x1183c00a
  412e9c:	into   
  412e9d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e9f:	(bad)  
  412ea0:	and    DWORD PTR [edx-0x106a2eb8],esi
  412ea6:	push   edi
  412ea7:	js     0x412e8e
  412ea9:	gs sub ah,ch
  412eac:	out    dx,al
  412ead:	fistp  WORD PTR [ebp-0x4b57b304]
  412eb3:	pop    ss
  412eb4:	outs   dx,BYTE PTR ds:[esi]
  412eb5:	test   eax,0x9d437499
  412eba:	cmp    eax,0x16b18b62
  412ebf:	loop   0x412e84
  412ec1:	mov    eax,0x80c7478a
  412ec6:	mov    ebp,0x11e8c749
  412ecb:	inc    ebp
  412ecc:	xchg   ecx,eax
  412ecd:	lods   eax,DWORD PTR ds:[esi]
  412ece:	in     al,0x3e
  412ed0:	jo     0x412efd
  412ed2:	and    BYTE PTR [edi-0x68],cl
  412ed5:	sti    
  412ed6:	mov    bl,0x2a
  412ed8:	pop    ds
  412ed9:	call   0x763d:0x9ee2eba
  412ee0:	fidivr WORD PTR [ecx+0x2f]
  412ee3:	inc    ebx
  412ee4:	cwde   
  412ee5:	loope  0x412e99
  412ee7:	cli    
  412ee8:	cmp    edi,DWORD PTR [esi-0x77]
  412eeb:	and    DWORD PTR [edx+0x73],eax
  412eee:	call   0xf1b18176
  412ef3:	in     eax,dx
  412ef4:	push   edi
  412ef5:	and    bh,bl
  412ef7:	fwait
  412ef8:	rol    cl,cl
  412efa:	pop    ebp
  412efb:	pop    ss
  412efc:	loop   0x412f23
  412efe:	adc    ebx,ebx
  412f00:	jmp    0x412f30
  412f02:	rol    DWORD PTR [edx+0x760700d4],cl
  412f08:	jnp    0x412ef6
  412f0a:	pop    eax
  412f0b:	out    dx,al
  412f0c:	fs loop 0x412f3e
  412f0f:	sbb    BYTE PTR [edx-0x30905ca5],al
  412f15:	xchg   esp,eax
  412f16:	aas    
  412f17:	in     al,dx
  412f18:	inc    edi
  412f19:	(bad)  
  412f1a:	lock shl BYTE PTR [ecx],1
  412f1d:	jp     0x412f24
  412f1f:	jmp    0x412ec2
  412f21:	sbb    al,0x4
  412f23:	cmp    esi,DWORD PTR [ecx]
  412f25:	pop    ds
  412f26:	or     BYTE PTR [esi-0x66c98cc7],al
  412f2c:	(bad)  
  412f2d:	aam    0x64
  412f2f:	icebp  
  412f30:	cli    
  412f31:	dec    esp
  412f32:	cmp    al,BYTE PTR [esi+0x46770137]
  412f38:	or     esi,edx
  412f3a:	cmp    ebx,ecx
  412f3c:	mov    cl,0x65
  412f3e:	inc    ecx
  412f3f:	and    al,0x78
  412f41:	cmp    BYTE PTR [esi],bh
  412f43:	lock mov eax,ds:0x1c02b6f4
  412f49:	push   ss
  412f4a:	adc    eax,0xdbf93361
  412f4f:	sbb    dh,BYTE PTR [esi+0x6f]
  412f52:	int    0xdd
  412f54:	cmp    ch,BYTE PTR [eax-0x58]
  412f57:	sbb    BYTE PTR [edx+0x72296863],0x2d
  412f5e:	jmp    0xf6e2138c
  412f63:	and    DWORD PTR [edx-0x5e],edx
  412f66:	mov    dh,BYTE PTR [esi-0x78d6f5f0]
  412f6c:	mov    ds:0x8348f787,eax
  412f71:	retf   
  412f72:	daa    
  412f73:	fs push esi
  412f75:	sbb    BYTE PTR [eax+0x57],bh
  412f78:	adc    BYTE PTR [ebx+0x6aaddbcc],ch
  412f7e:	enter  0x2ad1,0xde
  412f82:	cwde   
  412f83:	loop   0x412f0c
  412f85:	mov    ds:0x7eaae0a1,ax
  412f8b:	mov    ds:0x83c7f7ec,eax
  412f90:	cld    
  412f91:	mov    bh,0x11
  412f93:	inc    edx
  412f94:	jae    0x412f96
  412f96:	pop    es
  412f97:	sar    DWORD PTR [ebp+0x22],0xba
  412f9b:	leave  
  412f9c:	loopne 0x412fc7
  412f9e:	stos   DWORD PTR es:[edi],eax
  412f9f:	jge    0x413003
  412fa1:	jns    0x412fed
  412fa3:	or     esi,DWORD PTR [edi]
  412fa5:	jbe    0x412fb3
  412fa7:	sahf   
  412fa8:	mov    esi,0x442a493f
  412fad:	ret    0x6696
  412fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb1:	and    DWORD PTR [ecx-0x57],eax
  412fb4:	mov    ds,WORD PTR [ebp+0x2e]
  412fb7:	or     eax,0x4b8d72a4
  412fbc:	add    al,0x8e
  412fbe:	push   ds
  412fbf:	(bad)  
  412fc0:	jno    0x413014
  412fc2:	push   esp
  412fc3:	push   edi
  412fc4:	adc    BYTE PTR [esi],ah
  412fc6:	(bad)  
  412fc7:	std    
  412fc8:	cmc    
  412fc9:	xchg   ebx,eax
  412fca:	adc    eax,DWORD PTR [ecx+0x8b6afd1]
  412fd0:	(bad)
  412fd3:	fsubr  st,st(6)
  412fd5:	call   DWORD PTR [edx-0x7]
  412fd8:	cmp    BYTE PTR [eax+0x2],ah
  412fdb:	ins    BYTE PTR es:[edi],dx
  412fdc:	pusha  
  412fdd:	and    esi,DWORD PTR [ebp+0x14]
  412fe0:	push   edi
  412fe1:	xchg   ebp,eax
  412fe2:	fidivr DWORD PTR [edx]
  412fe4:	pop    edi
  412fe5:	jns    0x412f6b
  412fe7:	jmp    0x6398:0xe866f993
  412fee:	das    
  412fef:	shl    DWORD PTR [eax-0x7c2a3bf9],0x0
  412ff6:	cmp    DWORD PTR [edi+0x25128e00],0x40
  412ffd:	aas    
  412ffe:	and    ah,BYTE PTR ds:0x1d0fcf20
  413004:	cmp    ecx,DWORD PTR [ebp-0x2b]
  413007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413008:	repz bound edi,QWORD PTR [ebp-0x34]
  41300c:	ret    
  41300d:	pop    edx
  41300e:	mov    ?,WORD PTR [ecx+edx*4+0x69f99aee]
  413015:	push   edx
  413016:	lock loopne 0x412f9f
  413019:	aaa    
  41301a:	fwait
  41301b:	mov    ah,0x83
  41301d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41301f:	add    DWORD PTR [edx+0xd856b52],edi
  413025:	stos   BYTE PTR es:[edi],al
  413026:	ja     0x412feb
  413028:	and    esi,DWORD PTR [edx]
  41302a:	bnd ret 
  41302c:	xor    edi,DWORD PTR [edi+edi*8-0x1c]
  413030:	sbb    eax,0x6c6eb7bb
  413035:	jecxz  0x41309a
  413037:	out    dx,eax
  413038:	imul   eax,DWORD PTR [ecx+ebx*4-0x19],0x1ef90168
  413040:	or     BYTE PTR [esi],ah
  413042:	push   esi
  413043:	dec    ecx
  413044:	outs   dx,BYTE PTR ds:[esi]
  413045:	and    ebp,ebx
  413047:	loope  0x41304a
  413049:	popa   
  41304a:	clc    
  41304b:	mov    cl,0x72
  41304d:	in     al,dx
  41304e:	pop    ebp
  41304f:	lahf   
  413050:	aam    0x9c
  413052:	or     ecx,edx
  413054:	jmp    0x413068
  413056:	add    eax,0x5574ca89
  41305b:	push   esi
  41305c:	inc    ebx
  41305d:	mov    esp,0xdd79e7a7
  413062:	adc    edx,esi
  413064:	rcr    DWORD PTR [eax-0x708d8d2],cl
  41306a:	(bad)  
  41306b:	push   ds
  41306c:	sub    ebx,esp
  41306e:	ret    0xd018
  413071:	jae    0x41303c
  413073:	dec    edx
  413074:	mov    ebp,DWORD PTR [edi]
  413076:	les    ebx,FWORD PTR [edx+0x41b5d73a]
  41307c:	mov    eax,ds:0xdadfaa0c
  413081:	adc    eax,0x655a1e81
  413086:	dec    esp
  413087:	dec    edi
  413088:	adc    DWORD PTR [esi-0x77],esi
  41308b:	and    dl,BYTE PTR [edx]
  41308d:	adc    al,0x3d
  41308f:	scas   eax,DWORD PTR es:[edi]
  413090:	mov    cl,0x80
  413092:	mov    ebp,0xfbe1cbb5
  413097:	add    eax,0xf92de6ed
  41309c:	or     ecx,DWORD PTR [ebx-0x51]
  41309f:	push   ebp
  4130a0:	movaps xmm7,XMMWORD PTR [ebx]
  4130a3:	push   ecx
  4130a4:	dec    eax
  4130a5:	ror    BYTE PTR [edx],1
  4130a7:	and    al,0xe6
  4130a9:	test   edi,0x1233e5c9
  4130af:	inc    ebp
  4130b0:	inc    esi
  4130b1:	outs   dx,BYTE PTR ds:[esi]
  4130b2:	into   
  4130b3:	and    ecx,DWORD PTR ds:0x441759a5
  4130b9:	xor    eax,0x49ef9dd7
  4130be:	pushf  
  4130bf:	mov    ebx,0x3330a257
  4130c4:	xor    DWORD PTR [edi+0x6b],0xffffffdb
  4130c8:	push   ss
  4130c9:	lods   eax,DWORD PTR ds:[esi]
  4130ca:	retf   0xc874
  4130cd:	cs push esp
  4130cf:	clc    
  4130d0:	shr    DWORD PTR [edx+edi*1],1
  4130d3:	dec    esi
  4130d4:	mov    al,ds:0x10d2a879
  4130d9:	popa   
  4130da:	or     DWORD PTR [edi+eiz*8],edi
  4130dd:	mov    ch,0x9d
  4130df:	inc    ecx
  4130e0:	loope  0x41311f
  4130e2:	xchg   BYTE PTR [edi],dl
  4130e4:	into   
  4130e5:	cmc    
  4130e6:	out    0xd0,eax
  4130e8:	pop    ss
  4130e9:	ins    DWORD PTR es:[edi],dx
  4130ea:	and    ah,BYTE PTR [ebp-0x22cd3de7]
  4130f0:	inc    ebx
  4130f1:	jle    0x4130a9
  4130f3:	shr    ebp,0xd8
  4130f6:	ror    DWORD PTR [ebp+0x62],cl
  4130f9:	xor    ch,ch
  4130fb:	add    DWORD PTR [ebx-0x1ce3f716],0x5c64b846
  413105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413106:	jne    0x4130a6
  413108:	and    DWORD PTR ds:[ebx-0x18f984f2],ebp
  41310f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413110:	add    ch,cl
  413112:	arpl   WORD PTR [esi+ebx*2+0x1098ca7f],si
  413119:	mov    esi,0xad3723bc
  41311e:	inc    esp
  41311f:	out    0x83,al
  413121:	push   0x55c07987
  413126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413127:	inc    eax
  413128:	mov    ah,0xb9
  41312a:	shr    BYTE PTR [ebx+0x6b],cl
  41312d:	mov    esp,0x98d1674f
  413132:	enter  0x9934,0x6f
  413136:	add    eax,0xd1273327
  41313b:	push   es
  41313c:	lock dec edx
  41313e:	shl    BYTE PTR [esi-0x49605437],cl
  413144:	pop    eax
  413145:	repz lahf 
  413147:	cmp    eax,0x4a2c0d2e
  41314c:	mov    dh,0x78
  41314e:	ret    
  41314f:	jne    0x41313a
  413151:	sub    BYTE PTR [edx],0xf4
  413154:	or     eax,0x9208df41
  413159:	les    edi,FWORD PTR [eax+0x35]
  41315c:	sub    al,0x17
  41315e:	out    dx,al
  41315f:	mov    bh,0x7a
  413161:	out    dx,eax
  413162:	push   edx
  413163:	aam    0x2c
  413165:	(bad)  
  413166:	(bad)  ds:0x89668023
  41316c:	fisttp DWORD PTR [edi]
  41316e:	mov    BYTE PTR [esi+0x4e],cl
  413171:	mov    cl,0x2c
  413173:	loope  0x413130
  413175:	fst    QWORD PTR ds:0xc0b4f15f
  41317b:	in     al,0x8c
  41317d:	xlat   BYTE PTR ds:[ebx]
  41317e:	add    al,al
  413180:	daa    
  413181:	test   al,0x62
  413183:	pop    ebp
  413184:	push   cs
  413185:	sahf   
  413186:	and    eax,ebp
  413188:	adc    BYTE PTR [ecx],bh
  41318a:	mov    edx,0x271ce976
  41318f:	stc    
  413190:	(bad)  
  413191:	aam    0x5f
  413193:	scas   eax,DWORD PTR es:[edi]
  413194:	jmp    0x57cc:0x77b91b01
  41319b:	adc    bh,BYTE PTR [edi+0x63]
  41319e:	rol    dl,0x44
  4131a1:	mov    edx,edx
  4131a3:	mov    ds:0x3e1c2233,eax
  4131a8:	sub    esp,DWORD PTR [edi-0x64]
  4131ab:	scas   eax,DWORD PTR es:[edi]
  4131ac:	popf   
  4131ad:	(bad)  [esi-0x6e]
  4131b0:	shr    DWORD PTR ds:0xb6d5e990,cl
  4131b6:	scas   eax,DWORD PTR es:[edi]
  4131b7:	mov    dl,0xcd
  4131b9:	mov    ch,0x27
  4131bb:	pop    esp
  4131bc:	xlat   BYTE PTR ds:[ebx]
  4131bd:	sbb    al,0x82
  4131bf:	sbb    eax,0x6ab597ac
  4131c4:	test   al,0xd4
  4131c6:	adc    DWORD PTR [ebx],edx
  4131c8:	dec    edi
  4131c9:	sbb    al,0xc6
  4131cb:	or     al,0xa4
  4131cd:	fdiv   DWORD PTR [ebp-0xfe779ed]
  4131d3:	jns    0x4131ad
  4131d5:	sbb    DWORD PTR [edi-0x2161ceeb],esp
  4131db:	jmp    0x27411df2
  4131e0:	mov    ecx,0x99095b33
  4131e5:	mov    dl,0x5b
  4131e7:	mov    cl,0x61
  4131e9:	xchg   ebx,eax
  4131ea:	cmp    ch,BYTE PTR [ebx]
  4131ec:	xchg   esp,eax
  4131ed:	xchg   ebp,eax
  4131ee:	sti    
  4131ef:	pop    ebp
  4131f0:	add    al,0xad
  4131f2:	xchg   esp,eax
  4131f3:	mov    eax,0xfb8c746b
  4131f8:	test   DWORD PTR [ebx-0x1db600b1],0xd2698127
  413202:	cmp    esp,esi
  413204:	iret   
  413205:	mov    ebx,0x571a9a85
  41320a:	sbb    al,0xdf
  41320c:	mov    esp,0xd5bd576
  413211:	inc    edi
  413212:	adc    DWORD PTR [esi+edx*4-0xb],ecx
  413216:	repnz push es
  413218:	dec    edi
  413219:	mov    eax,DWORD PTR [ecx+ebp*8+0x77]
  41321d:	fcom   DWORD PTR [eax-0x75]
  413220:	pop    ebx
  413221:	fwait
  413222:	cmc    
  413223:	clc    
  413224:	pop    ds
  413225:	bswap  ebp
  413227:	test   DWORD PTR [ecx+esi*1+0x439b49fe],esp
  41322e:	or     al,0x42
  413230:	iret   
  413231:	jg     0x413297
  413233:	mov    al,ds:0xb3ccdaf7
  413238:	or     al,0xe
  41323a:	mov    esi,0xae1d50fd
  41323f:	pop    esp
  413240:	push   ss
  413241:	jl     0x41320b
  413243:	pusha  
  413244:	pusha  
  413245:	dec    esi
  413246:	pop    ecx
  413247:	ins    BYTE PTR es:[edi],dx
  413248:	mov    ecx,0x53cbc911
  41324d:	iret   
  41324e:	out    dx,al
  41324f:	xchg   ecx,eax
  413250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413251:	js     0x4131d9
  413253:	adc    DWORD PTR [ecx-0x60dbf1b9],esi
  413259:	into   
  41325a:	or     dl,BYTE PTR [eax]
  41325c:	out    dx,eax
  41325d:	(bad)  
  41325e:	push   edi
  41325f:	sbb    eax,esp
  413261:	aaa    
  413262:	mov    esp,0xcc927018
  413267:	stc    
  413268:	out    dx,al
  413269:	sub    ebp,DWORD PTR ds:0xc8f1a615
  41326f:	add    al,0xb0
  413271:	mov    ah,0x28
  413273:	outs   dx,BYTE PTR ds:[esi]
  413274:	add    eax,0x3f3c8eb6
  413279:	enter  0xe603,0x79
  41327d:	mov    ch,0xc0
  41327f:	adc    bl,BYTE PTR [esi]
  413281:	push   ebx
  413282:	js     0x413244
  413284:	and    BYTE PTR [esi-0x25b174a],bh
  41328a:	ret    0xae14
  41328d:	cmc    
  41328e:	fisubr DWORD PTR [ecx]
  413290:	mov    eax,0x3651d0be
  413295:	inc    ebp
  413296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413297:	lds    esi,FWORD PTR [ebx]
  413299:	dec    ebx
  41329a:	lods   eax,DWORD PTR ds:[esi]
  41329b:	aam    0xda
  41329d:	test   eax,0x4ef3934e
  4132a2:	push   es
  4132a3:	test   eax,0x71c55e3a
  4132a8:	in     eax,dx
  4132a9:	test   BYTE PTR [ebp-0x18],bl
  4132ac:	ror    DWORD PTR [ebx+eax*8],0xfc
  4132b0:	inc    esi
  4132b1:	and    eax,0xdd4660a
  4132b6:	mov    ecx,0xe0704e27
  4132bb:	outs   dx,DWORD PTR ds:[esi]
  4132bc:	(bad)  
  4132bd:	jnp    0x4132ae
  4132bf:	mov    ss,WORD PTR [edi-0x77]
  4132c2:	jns    0x413327
  4132c4:	lods   al,BYTE PTR ss:[esi]
  4132c6:	into   
  4132c7:	ret    
  4132c8:	in     eax,dx
  4132c9:	rol    BYTE PTR [ecx+0x43],0x47
  4132cd:	jns    0x41325d
  4132cf:	add    dh,cl
  4132d1:	cdq    
  4132d2:	jecxz  0x413309
  4132d4:	pop    edi
  4132d5:	addr16 cdq 
  4132d7:	or     eax,0xa2f15f46
  4132dc:	repnz mov ebx,eax
  4132df:	ret    0x87f5
  4132e2:	sar    BYTE PTR [edi+esi*2],cl
  4132e5:	ins    DWORD PTR es:[edi],dx
  4132e6:	repz push edx
  4132e8:	jmp    0x6d21:0xc21d143b
  4132ef:	xor    DWORD PTR [edi+0x1be706d0],eax
  4132f5:	xlat   BYTE PTR ds:[ebx]
  4132f6:	xchg   DWORD PTR [ebp+0x42c40908],ebx
  4132fc:	dec    ebp
  4132fd:	cmc    
  4132fe:	aaa    
  4132ff:	add    DWORD PTR [eax-0x42],0x3e
  413303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413304:	rol    BYTE PTR [eax-0x7793d2e9],1
  41330a:	ins    BYTE PTR es:[edi],dx
  41330b:	ins    DWORD PTR es:[edi],dx
  41330c:	enter  0x47c4,0x13
  413310:	inc    esp
  413311:	push   ds
  413312:	dec    eax
  413313:	jle    0x4132ee
  413315:	fxch   st(6)
  413317:	mov    ebp,0xc9461d39
  41331c:	les    esi,FWORD PTR [eax]
  41331e:	shl    BYTE PTR [edi+edx*8],0x78
  413322:	jnp    0x413396
  413324:	mov    al,0x4
  413326:	(bad)  
  413327:	xchg   esp,eax
  413328:	mov    ecx,0x4f843a1b
  41332d:	jno    0x4132c4
  41332f:	popf   
  413330:	adc    DWORD PTR [esi+edi*1],ebp
  413333:	call   0x6bf:0x1706614a
  41333a:	retf   
  41333b:	or     al,0x4a
  41333d:	add    al,0xf8
  41333f:	mov    esp,0x5cd5b060
  413344:	pushf  
  413345:	mul    DWORD PTR [esi-0x61790898]
  41334b:	sub    al,0x2a
  41334d:	lahf   
  41334e:	or     DWORD PTR [edi-0x24],edx
  413351:	icebp  
  413352:	pop    ebp
  413353:	nop
  413354:	xor    eax,0xf3d46b2
  413359:	div    BYTE PTR [eax-0x7a]
  41335c:	ja     0x413312
  41335e:	sti    
  41335f:	sahf   
  413360:	dec    edi
  413361:	adc    eax,0x81e1dfe9
  413366:	in     al,dx
  413367:	push   ss
  413368:	gs inc ebp
  41336a:	cmp    edx,ecx
  41336c:	mov    esp,0xcd49a3ee
  413371:	fwait
  413372:	jmp    0x8336:0x12706b37
  413379:	int    0x3
  41337b:	jno    0x4133ef
  41337d:	(bad)  
  41337e:	xor    DWORD PTR [edx],eax
  413380:	dec    esi
  413381:	xor    al,ch
  413383:	int3   
  413384:	scas   eax,DWORD PTR es:[edi]
  413385:	aas    
  413386:	repz leave 
  413388:	cmp    cl,BYTE PTR [esi]
  41338a:	mov    eax,ds:0x5c8e21ee
  41338f:	or     eax,0x1c4ad8ef
  413394:	push   edi
  413395:	outs   dx,BYTE PTR ds:[esi]
  413396:	push   esp
  413397:	jl     0x413411
  413399:	mov    al,ds:0xdb266b4f
  41339e:	clc    
  41339f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a0:	add    DWORD PTR [esi],ebp
  4133a2:	push   ss
  4133a3:	std    
  4133a4:	mov    ah,0x87
  4133a6:	adc    bh,dl
  4133a8:	and    bl,BYTE PTR [edi-0x61]
  4133ab:	xor    DWORD PTR ds:0x7df9db06,eax
  4133b1:	lds    ebp,FWORD PTR [esi]
  4133b3:	and    ah,BYTE PTR ds:0x661ca645
  4133b9:	aas    
  4133ba:	ins    BYTE PTR es:[edi],dx
  4133bb:	js     0x41341e
  4133bd:	shr    DWORD PTR [esi+0x45],1
  4133c0:	sbb    esi,DWORD PTR [ecx]
  4133c2:	dec    esi
  4133c3:	mov    dh,0x1
  4133c5:	data16 gs sub al,0x1
  4133c9:	xchg   DWORD PTR [ecx+0x1a5b9d53],ebp
  4133cf:	icebp  
  4133d0:	cld    
  4133d1:	ja     0x4133df
  4133d3:	test   esi,esp
  4133d5:	push   0xb18433af
  4133da:	loopne 0x413432
  4133dc:	push   eax
  4133dd:	adc    eax,0xe8991500
  4133e2:	add    eax,0x4161a33e
  4133e7:	(bad)  
  4133e8:	(bad)  
  4133e9:	mov    ch,0x74
  4133eb:	hlt    
  4133ec:	test   BYTE PTR [ebx+0x659e2b6d],al
  4133f2:	mov    al,ds:0x5ecea7c6
  4133f7:	xchg   esp,eax
  4133f8:	sbb    dh,ah
  4133fa:	repz clc 
  4133fc:	sub    ebp,edx
  4133fe:	js     0x4133b2
  413400:	mov    ds:0x6b8d16b6,al
  413405:	dec    eax
  413406:	mov    ecx,0x7bd17f5a
  41340b:	push   edi
  41340c:	adc    edi,DWORD PTR [edx+0x22]
  41340f:	xor    DWORD PTR [edi+0x44],0x66127b84
  413416:	fndisi(8087 only) 
  413418:	rcr    BYTE PTR [esi-0x51788e9d],1
  41341e:	pop    eax
  41341f:	int    0xe7
  413421:	pop    ds
  413422:	xchg   esp,eax
  413423:	je     0x4133f3
  413425:	hlt    
  413426:	(bad)  
  413427:	xchg   edx,eax
  413428:	dec    ebp
  413429:	pop    esp
  41342a:	dec    ecx
  41342b:	push   eax
  41342c:	cmp    al,0x7b
  41342e:	push   edi
  41342f:	shl    BYTE PTR [edx+0x1c],cl
  413432:	clc    
  413433:	shl    BYTE PTR [ebp-0x30],0x79
  413437:	and    bl,BYTE PTR [esp+eiz*2]
  41343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41343b:	test   cl,0x6d
  41343e:	jge    0x4133d8
  413440:	out    0x1b,eax
  413442:	(bad)  
  413444:	dec    esp
  413445:	dec    edi
  413446:	and    BYTE PTR [ebp+0x4f3e2a8c],bl
  41344c:	retf   
  41344d:	fdivr  DWORD PTR [eax-0x50498ed0]
  413453:	cmp    eax,0xff306bc9
  413458:	push   0x2130bafc
  41345d:	out    0x5a,al
  41345f:	push   eax
  413460:	call   0xcb65472
  413465:	sahf   
  413466:	das    
  413467:	push   es
  413468:	out    dx,eax
  413469:	and    DWORD PTR [eax],ebp
  41346b:	add    ah,ah
  41346d:	std    
  41346e:	sub    eax,0xd0e3d533
  413473:	jge    0x413461
  413475:	mov    ds:0xc0d680f9,eax
  41347a:	add    DWORD PTR [esi+ebp*1-0x718f83f5],ecx
  413481:	mov    esp,0xc17dbb6
  413486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413487:	data16 idiv BYTE PTR [ebx-0x68c6594b]
  41348e:	xchg   edi,eax
  41348f:	loop   0x41348a
  413491:	stc    
  413492:	or     cl,BYTE PTR [ecx+0x770fd1c9]
  413498:	pop    esi
  413499:	push   edi
  41349a:	and    eax,0x3a790861
  41349f:	aad    0xa3
  4134a1:	or     eax,0xa7da3dfb
  4134a6:	lea    esp,[ebp-0x3440ff]
  4134ac:	fsubr  QWORD PTR [esi]
  4134ae:	sbb    esi,DWORD PTR [esi]
  4134b0:	add    ebx,ecx
  4134b2:	mov    esi,0xeeb40105
  4134b7:	mov    ch,0x4b
  4134b9:	sbb    bl,BYTE PTR [ebp-0x66]
  4134bc:	add    al,0x32
  4134be:	xlat   BYTE PTR ds:[ebx]
  4134bf:	xor    DWORD PTR [edi+0x29],0xea37da3f
  4134c6:	push   ebx
  4134c7:	cmp    al,0x6f
  4134c9:	or     edx,esi
  4134cb:	jp     0x41348c
  4134cd:	std    
  4134ce:	icebp  
  4134cf:	cmp    al,0x39
  4134d1:	pop    ecx
  4134d2:	mov    bl,0x67
  4134d4:	ja     0x413552
  4134d6:	out    dx,al
  4134d7:	clc    
  4134d8:	std    
  4134d9:	leave  
  4134da:	fstp   TBYTE PTR [ecx-0x2fde9c82]
  4134e0:	ds cmp eax,0x19d6125d
  4134e6:	xchg   esi,eax
  4134e7:	adc    eax,0x69962061
  4134ec:	pop    ebp
  4134ed:	sub    eax,0x6a893683
  4134f2:	or     DWORD PTR gs:[ecx],ebx
  4134f5:	mov    dh,0xa8
  4134f7:	jne    0x4134fd
  4134f9:	(bad)  
  4134fa:	bound  ecx,QWORD PTR [edi-0x3f]
  4134fd:	and    eax,0x261afb69
  413502:	es lahf 
  413504:	push   0xa14e0c99
  413509:	loope  0x41348d
  41350b:	or     eax,0xeb9cc659
  413510:	add    BYTE PTR [esp+ebp*8+0x3b],al
  413514:	push   0xa6b963ff
  413519:	stc    
  41351a:	into   
  41351b:	shr    DWORD PTR [eax-0x6e489a99],0xa
  413522:	push   es
  413523:	mov    esp,0x283f9942
  413528:	pusha  
  413529:	jl     0x413564
  41352b:	scas   al,BYTE PTR es:[edi]
  41352c:	or     al,0x14
  41352e:	out    dx,eax
  41352f:	pop    ebx
  413530:	push   ss
  413531:	mov    dl,0x89
  413533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413534:	cmp    cl,al
  413536:	fwait
  413537:	push   cs
  413538:	fbld   TBYTE PTR [edx]
  41353a:	push   esi
  41353b:	inc    eax
  41353c:	fisttp QWORD PTR [ebx]
  41353e:	retf   0x9485
  413541:	inc    edi
  413542:	adc    eax,DWORD PTR [edi+0x147feac2]
  413548:	add    al,0xb3
  41354a:	pop    DWORD PTR [ebx]
  41354c:	(bad)  
  41354d:	lock add ecx,0x8f64944b
  413554:	call   0x57400b2c
  413559:	inc    esi
  41355a:	out    0xb9,eax
  41355c:	xor    BYTE PTR [ebp-0x20],ah
  41355f:	outs   dx,BYTE PTR ds:[esi]
  413560:	test   DWORD PTR [ebp+eax*1-0x77],edi
  413564:	outs   dx,BYTE PTR ds:[esi]
  413565:	jl     0x41350b
  413567:	xchg   DWORD PTR [ebx+0x68],esp
  41356a:	mov    ecx,0x6b14acfe
  41356f:	lds    ebp,FWORD PTR [edx-0x3d]
  413572:	pop    ds
  413573:	jmp    0x4134f5
  413575:	jl     0x4135d9
  413577:	sub    eax,DWORD PTR [ecx+eax*1+0x5d]
  41357b:	sar    esp,cl
  41357d:	xchg   esp,eax
  41357e:	cmp    cl,BYTE PTR [esi]
  413580:	lds    esp,FWORD PTR [ecx+0x5e3b4ec8]
  413586:	sahf   
  413587:	mov    eax,0xd665fc03
  41358c:	(bad)  
  41358d:	cmp    BYTE PTR [edi],dh
  41358f:	sub    bh,BYTE PTR fs:[ebp-0xe348cd6]
  413596:	mov    ebp,0xf410bb63
  41359b:	jp     0x4135df
  41359d:	fstp   DWORD PTR [eax+edx*8+0x2a]
  4135a1:	mov    al,0xc8
  4135a3:	stos   BYTE PTR es:[edi],al
  4135a4:	pop    ecx
  4135a5:	xor    eax,DWORD PTR [edi+0x7e65884a]
  4135ab:	(bad)  
  4135ad:	lock cwde 
  4135af:	cmc    
  4135b0:	mov    edi,0x52878621
  4135b5:	cmp    edi,DWORD PTR [ebx+0x2d]
  4135b8:	mov    ebp,0x5c6fe10b
  4135bd:	jecxz  0x413618
  4135bf:	fidiv  DWORD PTR [edi+0x1c2609fc]
  4135c5:	inc    edx
  4135c6:	enter  0x9b70,0x3a
  4135ca:	mov    eax,0xb6f197f
  4135cf:	fst    QWORD PTR [ecx+0x5f]
  4135d2:	and    eax,0xfa5a286f
  4135d7:	sti    
  4135d8:	xchg   edx,eax
  4135d9:	mov    WORD PTR [edi+0x6279d17d],?
  4135df:	lahf   
  4135e0:	pop    eax
  4135e1:	aaa    
  4135e2:	call   0xf20eb2e2
  4135e7:	mov    ecx,0x7f54863b
  4135ec:	lods   eax,DWORD PTR ds:[esi]
  4135ed:	jmp    0x5fff:0x526fa84e
  4135f4:	xchg   esi,eax
  4135f5:	pop    edx
  4135f6:	pop    es
  4135f7:	lods   eax,DWORD PTR ds:[esi]
  4135f8:	and    BYTE PTR [ebx+edi*1+0x61078221],0x65
  413600:	dec    esp
  413601:	jae    0x41358e
  413603:	sub    DWORD PTR [ebx-0x1d],esi
  413606:	sahf   
  413607:	nop
  413608:	push   ds
  413609:	fcomp  DWORD PTR [edx-0x401cbf40]
  41360f:	pop    edi
  413610:	ins    BYTE PTR es:[edi],dx
  413611:	repnz repz xchg esp,edx
  413615:	dec    ebp
  413616:	push   cs
  413617:	or     ebp,DWORD PTR [ebx+0x5114d0f3]
  41361d:	fdiv   DWORD PTR [edx+0x43]
  413620:	jecxz  0x4135cc
  413622:	adc    ebx,DWORD PTR [esi-0x56]
  413625:	add    al,BYTE PTR [ebp+0x58]
  413628:	iret   
  413629:	pop    eax
  41362a:	mov    fs,WORD PTR [eax-0x6d77a406]
  413630:	ja     0x413645
  413632:	popf   
  413633:	inc    ebx
  413634:	das    
  413635:	and    dh,BYTE PTR [edx-0x1]
  413638:	sub    dl,ch
  41363a:	scas   eax,DWORD PTR es:[edi]
  41363b:	add    eax,0x37189fd0
  413640:	fist   DWORD PTR [ebp+0x574199b1]
  413647:	cld    
  413648:	adc    al,0x8
  41364a:	(bad)  
  41364b:	ins    DWORD PTR es:[edi],dx
  41364c:	xlat   BYTE PTR ds:[ebx]
  41364d:	nop
  41364e:	mov    esp,DWORD PTR [edi*2-0x19ad26b7]
  413655:	inc    edx
  413656:	shr    BYTE PTR [edi],1
  413658:	(bad)  
  413659:	jno    0x4135f3
  41365b:	adc    eax,0x51da2655
  413660:	iret   
  413661:	loop   0x413603
  413663:	mov    ah,0x63
  413665:	clc    
  413666:	pop    ebp
  413667:	fs scas al,BYTE PTR es:[edi]
  413669:	mov    eax,ds:0xcad6af02
  41366e:	adc    BYTE PTR [eax],bh
  413670:	fnstcw WORD PTR [esi-0x361c0ef8]
  413676:	jno    0x4136c4
  413678:	enter  0xa353,0x4
  41367c:	xor    ch,BYTE PTR [ebx-0x18]
  41367f:	fstp   TBYTE PTR [edi]
  413681:	enter  0x3ed6,0x57
  413685:	mov    edx,0x4203d39a
  41368a:	mov    edx,0x8b76851c
  41368f:	lods   eax,DWORD PTR ds:[esi]
  413690:	jge    0x4136e5
  413692:	jno    0x4136d6
  413694:	push   ebp
  413695:	xchg   ebp,eax
  413696:	test   DWORD PTR [ecx+edx*1],ebx
  413699:	test   al,0x7
  41369b:	ja     0x4136da
  41369d:	out    0xe1,eax
  41369f:	stos   BYTE PTR es:[edi],al
  4136a0:	cwde   
  4136a1:	and    DWORD PTR [edx],0x9482bf38
  4136a7:	(bad)  
  4136a8:	in     eax,dx
  4136a9:	data16 and BYTE PTR [ecx],dh
  4136ac:	jbe    0x413689
  4136ae:	mov    ds:0x9c5f1432,al
  4136b3:	mov    dl,0xe5
  4136b5:	mov    BYTE PTR [ebp-0x72],0xa
  4136b9:	popf   
  4136ba:	mov    al,0x15
  4136bc:	popa   
  4136bd:	lods   eax,DWORD PTR ds:[esi]
  4136be:	in     eax,dx
  4136bf:	cdq    
  4136c0:	in     al,dx
  4136c1:	sbb    DWORD PTR [edx],eax
  4136c3:	fiadd  DWORD PTR [esi-0x22]
  4136c6:	or     ah,BYTE PTR [edi]
  4136c8:	stc    
  4136c9:	add    bl,BYTE PTR [edx+0x6a]
  4136cc:	mov    al,0x89
  4136ce:	ja     0x41368d
  4136d0:	and    BYTE PTR [edx+0xd],0xf2
  4136d4:	js     0x413694
  4136d6:	jae    0x4136fc
  4136d8:	dec    esp
  4136d9:	cmc    
  4136da:	jmp    0x413677
  4136dc:	pop    edx
  4136dd:	push   ecx
  4136de:	jge    0x4136b7
  4136e0:	xor    DWORD PTR [ecx+0x20bd6069],esp
  4136e6:	mov    al,0x8f
  4136e8:	scas   al,BYTE PTR es:[edi]
  4136e9:	xchg   ebp,eax
  4136ea:	xor    eax,DWORD PTR [eax+0xd]
  4136ed:	dec    esi
  4136ee:	sbb    BYTE PTR [ebx-0x66],0x61
  4136f2:	repnz lds esi,FWORD PTR [edi]
  4136f5:	and    BYTE PTR [esi-0x5b],al
  4136f8:	jge    0x41376d
  4136fa:	jbe    0x413740
  4136fc:	cmp    esp,DWORD PTR [esi]
  4136fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ff:	cmp    BYTE PTR [ecx],dl
  413701:	inc    ecx
  413702:	bnd jne 0x4136c6
  413705:	mov    eax,0x67cfd164
  41370a:	mov    ecx,0x63373a64
  41370f:	xchg   ecx,eax
  413710:	jbe    0x41376c
  413712:	adc    al,0x2c
  413714:	fimul  WORD PTR [edx-0x7d571d03]
  41371a:	test   BYTE PTR [ecx+0x28cda88c],0x1a
  413721:	inc    ecx
  413722:	fbstp  TBYTE PTR [ebp+0x6d]
  413725:	mov    edi,0xc944506a
  41372a:	mov    dh,0x54
  41372c:	fldcw  WORD PTR [ebx+0x5eb8695f]
  413732:	xor    DWORD PTR [ecx-0x5dfd8b3a],eax
  413738:	je     0x41371a
  41373a:	cmp    dl,BYTE PTR [ecx-0x2e]
  41373d:	lods   eax,DWORD PTR ds:[esi]
  41373e:	push   eax
  41373f:	jg     0x4136f3
  413741:	adc    BYTE PTR [edx-0xb],ch
  413744:	push   es
  413745:	push   cs
  413746:	pop    edx
  413747:	push   ebp
  413748:	fst    DWORD PTR [esi]
  41374a:	(bad)  
  41374b:	push   0xfffffff4
  41374d:	jo     0x41379d
  41374f:	xor    eax,0xfb9b5f1b
  413754:	loopne 0x413705
  413756:	out    0xcf,al
  413758:	dec    edi
  413759:	out    dx,eax
  41375a:	mov    bl,0x39
  41375c:	cld    
  41375d:	das    
  41375e:	inc    eax
  41375f:	mov    al,ds:0xb2a19671
  413764:	sub    DWORD PTR [edi],esp
  413766:	lods   eax,DWORD PTR ds:[esi]
  413767:	mov    al,ds:0xb031fe80
  41376c:	xor    al,BYTE PTR [edi+0x3e]
  41376f:	jae    0x4137a5
  413771:	aas    
  413772:	in     al,dx
  413773:	xor    BYTE PTR [edi],0x42
  413776:	dec    ecx
  413777:	mov    ah,0x2c
  413779:	std    
  41377a:	push   cs
  41377b:	or     DWORD PTR [ebp-0x25],ecx
  41377e:	push   0xffffffb5
  413780:	(bad)  
  413781:	xor    edi,DWORD PTR [edx+0x7cdab76e]
  413787:	out    dx,eax
  413788:	sti    
  413789:	dec    edi
  41378a:	je     0x4137ff
  41378c:	fdiv   DWORD PTR [ecx]
  41378e:	das    
  41378f:	jle    0x413718
  413791:	repz mov ecx,cs
  413794:	cmovbe esp,DWORD PTR [esi+0x79da1e84]
  41379b:	cwde   
  41379c:	test   DWORD PTR [edx-0x489301bc],ebx
  4137a2:	xlat   BYTE PTR ds:[ebx]
  4137a3:	mov    ch,0x83
  4137a5:	jecxz  0x41381b
  4137a7:	dec    eax
  4137a8:	and    edi,esi
  4137aa:	jmp    0x241265cf
  4137af:	jg     0x41377c
  4137b1:	xchg   edi,eax
  4137b2:	pop    edx
  4137b3:	into   
  4137b4:	leave  
  4137b5:	fs inc ebp
  4137b7:	sub    eax,0xcf5474d2
  4137bc:	adc    BYTE PTR [esi+0x57],ah
  4137bf:	pop    edi
  4137c0:	mov    ebx,0xbd77af84
  4137c5:	dec    edi
  4137c6:	xchg   esp,eax
  4137c7:	pusha  
  4137c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c9:	mov    al,0xe8
  4137cb:	adc    BYTE PTR ds:0x244469c6,dh
  4137d1:	call   0x23d3d876
  4137d6:	add    esi,DWORD PTR [edi]
  4137d8:	jb     0x4137b7
  4137da:	pusha  
  4137db:	mov    bl,cl
  4137dd:	jge    0x4137e8
  4137df:	sub    al,0x45
  4137e1:	jge    0x413791
  4137e3:	pop    ebp
  4137e4:	mov    dl,0x7b
  4137e6:	sub    ch,BYTE PTR [ebx+0x3b]
  4137e9:	cmp    eax,0x6242865f
  4137ee:	call   0xd9a8:0x6bb3d815
  4137f5:	xor    al,BYTE PTR [edi+edx*4-0x46]
  4137f9:	push   esi
  4137fa:	push   cs
  4137fb:	jmp    0x4137a2
  4137fd:	sub    al,0x6
  4137ff:	mov    dl,0x35
  413801:	repz mov esi,0x31533335
  413807:	xchg   ebp,eax
  413808:	sti    
  413809:	push   ebp
  41380a:	mov    ds:0x1bd2c40e,al
  41380f:	aaa    
  413810:	or     DWORD PTR [esi+0x38],eax
  413813:	mov    esi,0xddbce71e
  413818:	pop    ss
  413819:	cmp    ah,BYTE PTR [esi-0x63f19dc1]
  41381f:	(bad)  
  413820:	ins    DWORD PTR es:[edi],dx
  413821:	pop    ss
  413822:	adc    al,0x15
  413824:	inc    edi
  413825:	or     bh,BYTE PTR [esi+0x27be7b7c]
  41382b:	fistp  QWORD PTR [ebx]
  41382d:	push   edi
  41382e:	dec    edx
  41382f:	jne    0x41386f
  413831:	and    BYTE PTR [ecx+0x50a64e54],0x2d
  413838:	xor    DWORD PTR [eax],ebp
  41383a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41383b:	mov    cl,0xed
  41383d:	lahf   
  41383e:	cwde   
  41383f:	pop    ss
  413840:	pop    esp
  413841:	hlt    
  413842:	sub    ah,ah
  413844:	jg     0x4137e1
  413846:	jmp    0x41bdf3ab
  41384b:	out    0x9a,eax
  41384d:	sbb    DWORD PTR [edx-0x46],eax
  413850:	clc    
  413851:	push   ds
  413852:	inc    edx
  413853:	icebp  
  413854:	test   edx,ebx
  413856:	push   edi
  413857:	and    eax,DWORD PTR [eax+0x5aa5b200]
  41385d:	loopne 0x413805
  41385f:	iret   
  413860:	inc    eax
  413861:	push   ebx
  413862:	sub    eax,0xc0a1a45d
  413867:	loope  0x413874
  413869:	scas   al,BYTE PTR es:[edi]
  41386a:	fs pop edi
  41386c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41386d:	pusha  
  41386e:	ret    0xb751
  413871:	inc    ebp
  413872:	mov    ds:0x77c82ae6,al
  413877:	imul   edi,DWORD PTR [edi],0x2c
  41387a:	xchg   ebp,eax
  41387b:	or     DWORD PTR [esi+0xb95af68],eax
  413881:	adc    DWORD PTR [ecx+ebp*8+0x4d],esp
  413885:	add    al,BYTE PTR [ecx]
  413887:	cli    
  413888:	rcl    DWORD PTR [edx],0xf9
  41388b:	outs   dx,DWORD PTR ds:[esi]
  41388c:	cs mov al,0x65
  41388f:	add    al,BYTE PTR [ebx+0x11]
  413892:	inc    edi
  413893:	dec    ebp
  413894:	xor    DWORD PTR [edi-0xb312a20],esp
  41389a:	adc    bh,ch
  41389c:	inc    edi
  41389d:	cwde   
  41389e:	dec    edi
  41389f:	xchg   edi,eax
  4138a0:	ret    0x5de4
  4138a3:	push   es
  4138a4:	nop
  4138a5:	gs retf 
  4138a7:	mov    cl,0x37
  4138a9:	mov    bh,0x83
  4138ab:	pop    esi
  4138ac:	daa    
  4138ad:	pop    ebx
  4138ae:	mov    dl,0xf
  4138b0:	jo     0x413845
  4138b2:	in     al,0x35
  4138b4:	cmp    edx,DWORD PTR [edi]
  4138b6:	in     al,dx
  4138b7:	push   0x23
  4138b9:	push   es
  4138ba:	push   eax
  4138bb:	and    DWORD PTR ds:0x168ad7b4,0xb1414c2b
  4138c5:	aas    
  4138c6:	add    edx,DWORD PTR [edi+ebp*8]
  4138c9:	inc    ecx
  4138ca:	and    dh,BYTE PTR [edi]
  4138cc:	cs retf 0xc9f7
  4138d0:	xchg   edx,eax
  4138d1:	retf   0x918e
  4138d4:	xchg   ebp,eax
  4138d5:	jbe    0x41390a
  4138d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d8:	sbb    cl,BYTE PTR [esi-0x33]
  4138db:	outs   dx,BYTE PTR ds:[esi]
  4138dc:	xchg   ebp,eax
  4138dd:	int3   
  4138de:	sub    al,0x78
  4138e0:	hlt    
  4138e1:	rcl    BYTE PTR [edi],0x5f
  4138e4:	jmp    0x3ae3a6
  4138e9:	sub    al,0x67
  4138eb:	inc    esi
  4138ec:	sub    al,0xef
  4138ee:	and    BYTE PTR [edi-0x1e65ea43],0xe9
  4138f5:	push   0xffffffd0
  4138f7:	ja     0x413969
  4138f9:	loopne 0x4138a2
  4138fb:	shl    ecx,1
  4138fd:	outs   dx,DWORD PTR ds:[esi]
  4138fe:	pop    es
  4138ff:	out    dx,eax
  413900:	sub    eax,DWORD PTR [eax]
  413902:	data16 fisttp QWORD PTR [ecx]
  413905:	push   edx
  413906:	fwait
  413907:	in     eax,0xf0
  413909:	repnz dec ebp
  41390b:	inc    esp
  41390c:	repz xlat BYTE PTR ds:[ebx]
  41390e:	shr    esp,1
  413910:	(bad)  
  413911:	inc    ecx
  413912:	stos   DWORD PTR es:[edi],eax
  413913:	je     0x413931
  413915:	ficomp WORD PTR [edx]
  413917:	fsub   st(4),st
  413919:	js     0x4138c9
  41391b:	inc    ebx
  41391c:	int    0x7a
  41391e:	xchg   ebx,esp
  413920:	call   0x89e43b19
  413925:	mov    bh,0xe0
  413927:	mov    dh,BYTE PTR [eax]
  413929:	jne    0x4138bb
  41392b:	fstp   TBYTE PTR [edi-0x67]
  41392e:	les    ebp,FWORD PTR [esi-0x6fddc0d2]
  413934:	dec    esp
  413935:	pop    esi
  413936:	mov    DWORD PTR [esi],ebp
  413938:	nop
  413939:	inc    ecx
  41393a:	push   edi
  41393b:	adc    al,0x3
  41393d:	sbb    al,0xee
  41393f:	popf   
  413940:	sbb    bl,BYTE PTR [edi]
  413942:	push   edx
  413943:	push   0x32
  413945:	sahf   
  413946:	mov    dl,0x8c
  413948:	cld    
  413949:	xor    esp,DWORD PTR [esi+0x4d20d8a8]
  41394f:	pop    edi
  413950:	in     eax,dx
  413951:	jle    0x4139d2
  413953:	xchg   esi,eax
  413954:	in     eax,0xea
  413956:	sbb    dh,BYTE PTR [edi]
  413958:	adc    eax,0x237e4042
  41395d:	push   esi
  41395e:	lock test BYTE PTR [ebx+0x27],al
  413962:	push   0x5d
  413964:	inc    ebp
  413965:	adc    DWORD PTR [eax+0x698a32d1],esi
  41396b:	(bad)  
  41396c:	stc    
  41396d:	xchg   edi,eax
  41396e:	xchg   DWORD PTR [edi+0x7913d489],esp
  413974:	mov    ebp,0xbe4f72a3
  413979:	mov    edx,0xae0b502d
  41397e:	xchg   ebp,eax
  41397f:	cld    
  413980:	fwait
  413981:	xor    ecx,ecx
  413983:	xchg   ecx,eax
  413984:	imul   BYTE PTR [edx-0x55e87e46]
  41398a:	dec    eax
  41398b:	add    cl,BYTE PTR [esi]
  41398d:	popa   
  41398e:	or     ch,BYTE PTR [ebx]
  413990:	inc    ebx
  413991:	and    ebx,DWORD PTR [esp+ebx*1]
  413994:	jo     0x4139e4
  413996:	loopne 0x41397f
  413998:	jnp    0x413942
  41399a:	int    0xdf
  41399c:	mov    al,ds:0xf4fe264a
  4139a1:	stos   BYTE PTR es:[edi],al
  4139a2:	pop    es
  4139a3:	jnp    0x413983
  4139a5:	xor    eax,0xa56cee8f
  4139aa:	push   0xffffffaa
  4139ac:	mov    esi,DWORD PTR [ecx-0x2ffb3f83]
  4139b2:	and    dl,al
  4139b4:	push   esp
  4139b5:	mov    esp,0x40e0b1b8
  4139ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139bb:	mov    DWORD PTR [ebp+0x77],esp
  4139be:	cdq    
  4139bf:	pop    edx
  4139c0:	arpl   si,bp
  4139c2:	pop    ebx
  4139c3:	das    
  4139c4:	mov    edi,DWORD PTR [ebx]
  4139c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139c7:	rcl    DWORD PTR [esi+0x5d],0x0
  4139cb:	jne    0x4139f8
  4139cd:	adc    DWORD PTR [edi-0x48a6bc1b],0xd071115f
  4139d7:	cmp    esi,DWORD PTR [ebp+esi*4-0x6b]
  4139db:	cmp    al,0xb1
  4139dd:	xlat   BYTE PTR ds:[ebx]
  4139de:	mov    cs,WORD PTR [ecx+eax*8+0x41]
  4139e2:	xchg   ebp,eax
  4139e3:	dec    esi
  4139e4:	mov    esi,0xe87efa7a
  4139e9:	(bad)  
  4139ea:	(bad)  
  4139eb:	sbb    al,0x9a
  4139ed:	and    BYTE PTR [eax+0x42],0x51
  4139f1:	mov    dh,0x8c
  4139f3:	data16 out 0x4a,al
  4139f6:	add    ecx,DWORD PTR [edi+esi*4]
  4139f9:	jp     0x413a5a
  4139fb:	mov    ch,0x9a
  4139fd:	mov    esi,0x28318e24
  413a02:	mov    ch,0xea
  413a04:	mov    ecx,0x4783e2c
  413a09:	sub    ebx,0xffffffdd
  413a0c:	mov    al,0x82
  413a0e:	hlt    
  413a0f:	cmp    BYTE PTR [edi+ecx*4+0x4],ah
  413a13:	cmp    eax,0x72025fd4
  413a18:	adc    edx,ecx
  413a1a:	jmp    0x2b9:0x201b6355
  413a21:	pusha  
  413a22:	cdq    
  413a23:	loope  0x4139b9
  413a25:	jno    0x4139cc
  413a27:	leave  
  413a28:	push   0x9d880511
  413a2d:	out    0xaa,eax
  413a2f:	test   al,0x95
  413a31:	aad    0x4f
  413a33:	cmp    ah,bl
  413a35:	add    edi,DWORD PTR [esi-0x4]
  413a38:	sbb    eax,0x33614eee
  413a3d:	lock das 
  413a3f:	fsub   st,st(5)
  413a41:	mov    WORD PTR [eax-0x45],ss
  413a44:	lods   eax,DWORD PTR ds:[esi]
  413a45:	push   edi
  413a46:	ror    BYTE PTR [edi+edx*8-0x76],1
  413a4a:	arpl   si,bp
  413a4c:	cs test al,0xd2
  413a4f:	and    eax,0x3d76a14d
  413a54:	arpl   WORD PTR [edi],si
  413a56:	test   al,0xce
  413a58:	mov    ebp,0x88465c41
  413a5d:	das    
  413a5e:	xor    BYTE PTR [ecx-0x1d30c1e1],0xa5
  413a65:	dec    esp
  413a66:	(bad)  
  413a67:	int3   
  413a68:	push   esi
  413a69:	sti    
  413a6a:	or     BYTE PTR [esi],dh
  413a6c:	xchg   esp,eax
  413a6d:	fdiv   st(6),st
  413a6f:	ret    
  413a70:	jne    0x413a09
  413a72:	mov    BYTE PTR [ebx+esi*2-0x6d],0xed
  413a77:	fmul   QWORD PTR [ebx-0x33]
  413a7a:	and    eax,0x5deeb5a5
  413a7f:	lock mov bp,0x978
  413a84:	and    eax,0xc43c7ae9
  413a89:	jp     0x413aff
  413a8b:	jo     0x413b04
  413a8d:	loope  0x413b0a
  413a8f:	sahf   
  413a90:	nop
  413a91:	xor    ebx,DWORD PTR [ebx+0x350425a0]
  413a97:	in     eax,0xff
  413a99:	jmp    0x311e:0xef9542a0
  413aa0:	test   bl,ah
  413aa2:	enter  0xb748,0xec
  413aa6:	outs   dx,BYTE PTR ds:[esi]
  413aa7:	test   al,bl
  413aa9:	push   eax
  413aaa:	sbb    ebp,DWORD PTR [edi]
  413aac:	mov    eax,0xdce32f7c
  413ab1:	out    dx,al
  413ab2:	imul   edi,DWORD PTR [ecx-0x7],0xffffff8f
  413ab6:	cmp    esp,edi
  413ab8:	mov    bl,0xce
  413aba:	in     eax,0x28
  413abc:	sbb    bl,BYTE PTR [ecx]
  413abe:	lock pop edx
  413ac0:	aam    0x4b
  413ac2:	fidiv  WORD PTR [edi-0x6dee38de]
  413ac8:	or     DWORD PTR [edx+0x1a],ecx
  413acb:	mov    edx,0xb2465978
  413ad0:	jge    0x413b34
  413ad2:	jbe    0x413a55
  413ad4:	loopne 0x413b43
  413ad6:	and    eax,0x6c0ec248
  413adb:	cs push eax
  413add:	outs   dx,DWORD PTR ds:[esi]
  413adf:	aam    0xd8
  413ae1:	add    ah,BYTE PTR [edx+ebp*8-0x3b]
  413ae5:	rcr    DWORD PTR [esi+0x102d681c],0x5
  413aec:	cwde   
  413aed:	push   esp
  413aee:	xor    al,0x2f
  413af0:	add    DWORD PTR [ebx+0x6a],esi
  413af3:	push   0x7f83028e
  413af8:	push   ebx
  413af9:	push   ebx
  413afa:	mov    WORD PTR [edi+0x7f3fb44b],es
  413b00:	leave  
  413b01:	fild   WORD PTR gs:[edx+edi*1-0x50]
  413b06:	mov    ah,BYTE PTR [edi-0x68d7e872]
  413b0c:	pop    ecx
  413b0d:	add    al,0xb9
  413b0f:	mov    WORD PTR [esi],cs
  413b11:	scas   al,BYTE PTR es:[edi]
  413b12:	pop    es
  413b13:	xchg   ecx,eax
  413b14:	fisubr WORD PTR ds:0xc41da505
  413b1a:	iret   
  413b1b:	fstp   TBYTE PTR [ebx+edi*8-0x6a4989c2]
  413b22:	xor    al,0x3
  413b24:	ins    DWORD PTR es:[edi],dx
  413b25:	add    bl,BYTE PTR [ebx-0x44]
  413b28:	stos   BYTE PTR es:[edi],al
  413b29:	mov    eax,0x756a160c
  413b2e:	(bad)  
  413b2f:	cmp    al,0x48
  413b31:	pushf  
  413b32:	jp     0x413ba1
  413b34:	sti    
  413b35:	ret    
  413b36:	mov    DWORD PTR [ecx-0x15],edx
  413b39:	(bad)  
  413b3b:	into   
  413b3c:	icebp  
  413b3d:	push   ss
  413b3e:	xchg   esi,eax
  413b3f:	and    DWORD PTR [edi-0xfa0755e],0xffffffdb
  413b46:	cmp    al,0xaf
  413b48:	pop    ebx
  413b49:	addr16 inc ebx
  413b4b:	call   0x565d9c42
  413b50:	movups xmm6,xmm2
  413b53:	lds    ebp,FWORD PTR [edx+0x43d4b242]
  413b59:	add    DWORD PTR [ebx-0x4a],0xfffffffc
  413b5d:	aas    
  413b5e:	mov    eax,0x376a3085
  413b63:	pop    es
  413b64:	sbb    dl,ch
  413b66:	scas   al,BYTE PTR es:[edi]
  413b67:	fidiv  DWORD PTR [esi-0x18]
  413b6a:	and    al,0xba
  413b6c:	mov    ebp,0xe04f8972
  413b71:	mov    edi,0x8ffe4ae4
  413b76:	inc    esi
  413b77:	loope  0x413b82
  413b79:	sub    al,BYTE PTR [ebp+0x192bf419]
  413b7f:	push   ebx
  413b80:	and    bh,BYTE PTR [eax+0x63]
  413b83:	mov    WORD PTR [ecx-0x3b],es
  413b86:	pop    ecx
  413b87:	or     eax,0xb65b22f1
  413b8c:	imul   DWORD PTR [eax+edx*4-0x18]
  413b90:	int3   
  413b91:	push   esp
  413b92:	dec    esp
  413b93:	xor    BYTE PTR [esi+0x29b4a504],dh
  413b99:	sub    esp,ebx
  413b9b:	mov    ebx,0x50bf0020
  413ba0:	push   esi
  413ba1:	aad    0x8d
  413ba3:	add    al,0x4
  413ba5:	stos   BYTE PTR es:[edi],al
  413ba6:	adc    BYTE PTR [edi+0x1bd8643b],ah
  413bac:	out    dx,al
  413bad:	inc    ebp
  413bae:	xchg   DWORD PTR [edi],esp
  413bb0:	bound  eax,QWORD PTR [ebx]
  413bb2:	sahf   
  413bb3:	mov    ebx,edi
  413bb5:	mov    dl,0x3d
  413bb7:	fwait
  413bb8:	cli    
  413bb9:	or     DWORD PTR ds:0x521b867,eax
  413bbf:	dec    ecx
  413bc0:	(bad)  gs:[bx+si+0x48a5]
  413bc6:	and    BYTE PTR [ebx-0x58],ch
  413bc9:	mov    DWORD PTR [edi-0x1a1df93a],ebx
  413bcf:	das    
  413bd0:	ss out dx,eax
  413bd2:	retf   
  413bd3:	inc    esi
  413bd4:	bound  edi,QWORD PTR [edx]
  413bd6:	(bad)  [edx-0x5a]
  413bd9:	pop    ss
  413bda:	fldcw  WORD PTR [edi-0x56]
  413bdd:	ret    
  413bde:	stc    
  413bdf:	lds    ebp,FWORD PTR [edi+0x36ba45e4]
  413be5:	xchg   esi,eax
  413be6:	pop    esp
  413be7:	lea    esi,[ecx+0x48]
  413bea:	push   0x713877e4
  413bef:	mov    edx,0xf377910a
  413bf4:	lea    ebx,ds:0x83ab4784
  413bfa:	test   BYTE PTR [ecx],dh
  413bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bfd:	push   esi
  413bfe:	gs pop ebp
  413c00:	inc    ebp
  413c01:	(bad)  
  413c02:	adc    DWORD PTR [edx+0x344aac8d],eax
  413c08:	pop    edx
  413c09:	fs jle 0x413bdc
  413c0c:	call   0xbd48:0xb86ff33
  413c13:	imul   ebp,eax,0x74642d00
  413c19:	das    
  413c1a:	and    ebp,0xffffff9c
  413c1d:	inc    ecx
  413c1e:	aaa    
  413c1f:	gs adc al,0xb4
  413c22:	imul   ebp,DWORD PTR [eax-0x10091db3],0x35
  413c29:	cmp    eax,0x307f2266
  413c2e:	sub    eax,0xcf6e9b6b
  413c33:	or     ah,bl
  413c35:	rcr    BYTE PTR [edi-0x29],cl
  413c38:	mov    ecx,0x1975c52c
  413c3d:	(bad)  
  413c3e:	jmp    0x8b42:0xe2576279
  413c45:	mov    WORD PTR [esi+0x35aaaeae],cs
  413c4b:	inc    edi
  413c4c:	mov    edi,0xe292b991
  413c51:	lods   al,BYTE PTR ds:[esi]
  413c52:	push   es
  413c53:	aam    0xeb
  413c55:	push   0xfffffff8
  413c57:	mov    al,ds:0xe1b0520a
  413c5c:	fcom   QWORD PTR [edx+edi*2-0x2459f1e4]
  413c63:	fimul  WORD PTR [esi+0x6f1ace92]
  413c69:	cmp    esi,DWORD PTR [ecx+0xb3b175e]
  413c6f:	repz sub bl,BYTE PTR [eax]
  413c72:	adc    edi,DWORD PTR [eax+0x15e29856]
  413c78:	mov    esp,0x20c4345
  413c7d:	or     dh,dh
  413c7f:	jl     0x413c7c
  413c81:	mov    al,ds:0x3d62a871
  413c86:	call   0x9e1:0xbd5e793
  413c8d:	imul   eax,edi,0x7e
  413c90:	call   0x49f6f4a7
  413c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c96:	ds das 
  413c98:	xchg   esi,eax
  413c99:	xor    DWORD PTR [eax],0xff66b9d5
  413c9f:	inc    ebx
  413ca0:	shr    BYTE PTR [edi],cl
  413ca2:	lea    edx,[eax+0x2e]
  413ca5:	xlat   BYTE PTR ds:[ebx]
  413ca6:	sahf   
  413ca7:	(bad)  [edx+ebp*2-0x1a]
  413cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cac:	out    0xc5,al
  413cae:	push   edx
  413caf:	sub    BYTE PTR [ecx-0x17ebf581],bh
  413cb5:	mov    ch,0xc8
  413cb7:	pop    ds
  413cb8:	mov    bh,0xe
  413cba:	or     ebp,DWORD PTR [edx+0x3d837397]
  413cc0:	dec    ecx
  413cc1:	(bad)
  413cc4:	adc    dh,dl
  413cc6:	retf   0xbd14
  413cc9:	lahf   
  413cca:	xchg   esi,eax
  413ccb:	(bad)  
  413ccd:	out    0x13,eax
  413ccf:	xor    eax,0x9bb84db9
  413cd4:	pop    edx
  413cd5:	inc    ecx
  413cd6:	shr    BYTE PTR [edx-0x445ab4],cl
  413cdc:	aas    
  413cdd:	test   ebp,eax
  413cdf:	and    DWORD PTR [edx-0x3493b0ea],esi
  413ce5:	leave  
  413ce6:	cmp    ebp,edx
  413ce8:	xor    ebx,0x6e
  413ceb:	sub    DWORD PTR [ecx+0x68],0x593142c1
  413cf2:	shr    BYTE PTR [edx+0x3745e60d],1
  413cf8:	jl     0x413ccf
  413cfa:	jnp    0x413cfb
  413cfc:	push   eax
  413cfd:	lock xchg edx,eax
  413cff:	add    al,BYTE PTR ds:0xbd4ee472
  413d05:	imul   edi,edx,0xffffffe4
  413d08:	inc    ecx
  413d09:	and    BYTE PTR [edi],ch
  413d0b:	push   esp
  413d0c:	or     dl,ah
  413d0e:	stos   BYTE PTR es:[edi],al
  413d0f:	std    
  413d10:	(bad)  
  413d11:	out    0x48,al
  413d13:	push   esp
  413d14:	xor    esp,DWORD PTR [esi+0x3781dd56]
  413d1a:	add    eax,0x7e69f7eb
  413d1f:	out    dx,eax
  413d20:	call   0x659b312f
  413d25:	sub    eax,0x9aa27635
  413d2a:	cwde   
  413d2b:	rcl    edx,0xf3
  413d2e:	xchg   edi,eax
  413d2f:	(bad)  
  413d30:	adc    BYTE PTR [ebp-0x5fd2884f],ah
  413d36:	cli    
  413d37:	jmp    0x63a35be6
  413d3c:	sbb    DWORD PTR [edx+0x67],0x13
  413d40:	pop    esp
  413d41:	push   esp
  413d42:	pop    esi
  413d43:	jg     0x413ce3
  413d45:	mov    bh,0x7d
  413d48:	mov    bh,0x36
  413d4a:	ds (bad) 
  413d4c:	xlat   BYTE PTR ds:[ebx]
  413d4d:	add    bl,ch
  413d4f:	add    DWORD PTR [edi+0x7f],ebp
  413d52:	inc    ebp
  413d53:	mov    edi,0xd6ebc016
  413d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d59:	es cli 
  413d5b:	xchg   esp,eax
  413d5c:	lock (bad) 
  413d5e:	xchg   esi,eax
  413d5f:	jge    0x413d8d
  413d61:	loopne 0x413db9
  413d63:	pushf  
  413d64:	mov    al,0x41
  413d66:	inc    esi
  413d67:	inc    esp
  413d68:	push   ebp
  413d69:	stos   DWORD PTR es:[edi],eax
  413d6a:	and    eax,DWORD PTR [ebp+0x6099a5a6]
  413d70:	fbstp  TBYTE PTR fs:[ebx+0x550550d5]
  413d77:	dec    ecx
  413d78:	add    DWORD PTR [ebx-0x5a],0xbf139180
  413d7f:	popa   
  413d80:	sar    DWORD PTR [eax-0x51],cl
  413d83:	jns    0x413d44
  413d85:	mov    bh,0x75
  413d87:	adc    eax,0x99db7ad1
  413d8c:	(bad)  
  413d8d:	jo     0x413d10
  413d8f:	and    eax,0x818eefe5
  413d94:	sar    BYTE PTR [edx-0x11],cl
  413d97:	addr16 mov ecx,0xc07a6339
  413d9d:	int3   
  413d9e:	ins    DWORD PTR es:[edi],dx
  413d9f:	push   ebp
  413da0:	ja     0x413d3d
  413da2:	cmp    BYTE PTR [edx],cl
  413da4:	or     BYTE PTR [ebx-0x14606c49],dh
  413daa:	ss pop ss
  413dac:	sub    ch,ch
  413dae:	jb     0x413d56
  413db0:	inc    esp
  413db1:	lods   al,BYTE PTR ds:[esi]
  413db2:	sbb    DWORD PTR [edx],ebp
  413db4:	cmp    ebx,edx
  413db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db7:	cld    
  413db8:	(bad)  
  413db9:	jmp    0xec1d:0xb4f02906
  413dc0:	xor    DWORD PTR [ebx+0x79],esp
  413dc3:	js     0x413d57
  413dc5:	inc    esp
  413dc6:	push   ebx
  413dc7:	cmp    al,0xed
  413dc9:	mov    eax,0xc1d41cb6
  413dce:	jg     0x413d67
  413dd0:	das    
  413dd1:	push   ebx
  413dd2:	test   al,0x21
  413dd4:	mov    ecx,0x80780e74
  413dd9:	fdivr  QWORD PTR [ebx+0x4b]
  413ddc:	and    eax,0x916d70ce
  413de1:	out    dx,al
  413de2:	mov    edi,0xa73f57bb
  413de7:	xchg   edi,eax
  413de8:	sbb    bh,BYTE PTR [eax+0x7c]
  413deb:	adc    DWORD PTR [ebp-0x39e1ecb9],0x14
  413df2:	jbe    0x413e43
  413df4:	cmp    BYTE PTR [eax+0x1],al
  413df7:	inc    esi
  413df8:	inc    ebx
  413df9:	and    esi,ebx
  413dfb:	shl    DWORD PTR [esi+eiz*2+0x696325f3],0x57
  413e03:	cmp    esp,DWORD PTR [edi]
  413e05:	(bad)  
  413e06:	pop    edi
  413e07:	je     0x413e46
  413e09:	loop   0x413e3e
  413e0b:	popa   
  413e0c:	popf   
  413e0d:	push   eax
  413e0e:	stc    
  413e0f:	repz or al,0x8c
  413e12:	sar    ebp,cl
  413e14:	call   0xc7865a2c
  413e19:	push   esp
  413e1a:	hlt    
  413e1b:	jo     0x413dd3
  413e1d:	stc    
  413e1e:	mov    esi,0xdda5fdc0
  413e23:	sub    eax,0x30e4c85e
  413e28:	push   ss
  413e29:	popa   
  413e2a:	in     eax,0x40
  413e2c:	test   al,0x21
  413e2e:	push   eax
  413e2f:	jg     0x413e28
  413e31:	fist   WORD PTR [esp+esi*1+0xe9c003f]
  413e38:	das    
  413e39:	nop
  413e3a:	xor    DWORD PTR [ebp+0x3d2ea4c7],esp
  413e40:	and    al,0xe6
  413e42:	arpl   bp,dx
  413e44:	dec    esi
  413e45:	adc    al,0x7b
  413e47:	sub    bh,BYTE PTR [edi-0x7b]
  413e4a:	(bad)  
  413e4b:	ficom  WORD PTR [edx-0x548c7273]
  413e51:	sbb    al,0x56
  413e53:	push   ss
  413e54:	and    BYTE PTR [eax],ch
  413e56:	jp     0x413e64
  413e58:	or     al,0x28
  413e5a:	mov    esi,0x289542a3
  413e5f:	fsub   DWORD PTR [eax]
  413e61:	pop    ebp
  413e62:	or     BYTE PTR [edx+0x128d96d3],dh
  413e68:	loope  0x413ed2
  413e6a:	ret    0x13ca
  413e6d:	dec    edi
  413e6e:	retf   
  413e6f:	mov    ds:0x11d3f09b,al
  413e74:	mov    WORD PTR [edx-0x53],cs
  413e77:	stc    
  413e78:	mov    DWORD PTR [eax],ebx
  413e7a:	jne    0x413e6a
  413e7c:	ret    
  413e7d:	jmp    0x7476:0x3f1a5944
  413e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e85:	sbb    al,0x99
  413e87:	popf   
  413e88:	dec    esp
  413e89:	js     0x413e19
  413e8b:	or     BYTE PTR [edx+ebx*4],dl
  413e8e:	mov    bl,0xd1
  413e90:	or     dl,cl
  413e92:	pop    esp
  413e93:	sub    al,0xd
  413e95:	xor    DWORD PTR [eax-0x472d0703],0x117e65f3
  413e9f:	add    DWORD PTR [edx+0x5bdb23fd],ebx
  413ea5:	pusha  
  413ea6:	cwde   
  413ea7:	inc    ebp
  413ea8:	jmp    DWORD PTR [ebp-0x2391c6b0]
  413eae:	out    0xc1,al
  413eb0:	mov    ds:0xb43b7370,al
  413eb5:	and    eax,0x69d70e1d
  413eba:	add    DWORD PTR ss:[ebx+0x2b],ebx
  413ebe:	jns    0x413eb5
  413ec0:	test   al,0xe7
  413ec2:	cmp    eax,0x18f47bbf
  413ec7:	lock retf 0xd015
  413ecb:	push   edi
  413ecc:	adc    DWORD PTR [eax-0x7b8109ce],esi
  413ed2:	push   0x6f
  413ed4:	lods   al,BYTE PTR ds:[esi]
  413ed5:	icebp  
  413ed6:	outs   dx,BYTE PTR ds:[esi]
  413ed7:	pop    ebx
  413ed8:	(bad)  
  413ed9:	and    ah,BYTE PTR [ecx-0x28829499]
  413edf:	cmp    ebp,DWORD PTR [edx+0x433736a1]
  413ee5:	fcom   DWORD PTR [ebx+0x33]
  413ee8:	imul   BYTE PTR [esi]
  413eea:	mov    DWORD PTR [ecx-0x16],0x414d5ca2
  413ef1:	test   ecx,eax
  413ef3:	add    eax,0x51987d35
  413ef8:	cdq    
  413ef9:	ins    DWORD PTR es:[edi],dx
  413efa:	xchg   ebx,eax
  413efb:	push   edx
  413efc:	push   ds
  413efd:	inc    edi
  413efe:	xchg   BYTE PTR [eax],bl
  413f00:	ja     0x413eed
  413f02:	or     DWORD PTR [eax-0x443aa4fa],ecx
  413f08:	push   esi
  413f09:	lock dec eax
  413f0b:	push   edx
  413f0c:	jl     0x413ee6
  413f0e:	enter  0xdb4,0x3b
  413f12:	mov    ds:0x2efbca16,al
  413f17:	ror    ebx,1
  413f19:	div    BYTE PTR [ecx]
  413f1b:	mov    eax,ds:0x1aff0b95
  413f20:	mov    cl,cl
  413f22:	jmp    0x413f15
  413f24:	push   ss
  413f25:	stos   DWORD PTR es:[edi],eax
  413f26:	cmp    edx,DWORD PTR [edi-0x43]
  413f29:	push   ebp
  413f2a:	rol    DWORD PTR [ebx+0x6e],0xf9
  413f2e:	dec    ecx
  413f2f:	jbe    0x413ef7
  413f31:	ret    
  413f32:	mov    ?,WORD PTR [ebx-0x3cf48ed3]
  413f38:	pop    eax
  413f39:	les    ebx,FWORD PTR [ebp-0x6750d206]
  413f3f:	mov    ds:0x2e78deaa,al
  413f44:	xchg   esp,eax
  413f46:	add    BYTE PTR ds:0x25461dc4,dh
  413f4c:	xchg   ebx,eax
  413f4d:	sub    ah,BYTE PTR gs:[di-0x4cc0]
  413f53:	jmp    0x1217:0x6586bd81
  413f5a:	(bad)  
  413f5b:	je     0x413f34
  413f5d:	adc    eax,0xc19f6cc7
  413f62:	js     0x413faf
  413f64:	jo     0x413fb9
  413f66:	inc    ebx
  413f67:	xor    edx,DWORD PTR ds:0xee2998e2
  413f6d:	dec    edx
  413f6e:	aas    
  413f6f:	dec    eax
  413f70:	jle    0x413f92
  413f72:	cld    
  413f73:	das    
  413f74:	es add edi,0xaa1cb069
  413f7b:	jl     0x413f46
  413f7d:	xor    al,0x48
  413f7f:	mov    eax,ds:0xc18a142a
  413f84:	push   eax
  413f85:	fidivr WORD PTR es:[eax+0x8]
  413f89:	dec    esi
  413f8a:	sub    cl,bl
  413f8c:	mov    ah,0xd2
  413f8e:	scas   al,BYTE PTR es:[edi]
  413f8f:	scas   al,BYTE PTR es:[edi]
  413f90:	add    eax,0x9
  413f93:	mov    BYTE PTR [ebp-0x5],ah
  413f96:	xor    bl,al
  413f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f99:	pop    edx
  413f9a:	es mov bl,0x9
  413f9d:	sahf   
  413f9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f9f:	or     esp,esi
  413fa1:	xchg   edi,eax
  413fa2:	sti    
  413fa3:	rcr    DWORD PTR [eax+0x230b04fa],0xe
  413faa:	das    
  413fab:	ins    DWORD PTR es:[edi],dx
  413fac:	loope  0x414003
  413fae:	inc    edi
  413faf:	cwde   
  413fb0:	xchg   DWORD PTR [ebp-0x6c],ebp
  413fb3:	xor    edx,DWORD PTR ds:0x520c47f8
  413fb9:	ret    
  413fba:	push   cs
  413fbb:	sbb    DWORD PTR [ebx-0x2ed808d7],0x355af69f
  413fc5:	fidivr DWORD PTR [edi-0x196a6aa9]
  413fcb:	mov    cl,0x97
  413fcd:	stos   DWORD PTR es:[edi],eax
  413fce:	push   es
  413fcf:	ins    BYTE PTR es:[edi],dx
  413fd0:	dec    eax
  413fd1:	cmc    
  413fd2:	jb     0x41400d
  413fd4:	call   0x532f:0x81b9033e
  413fdb:	into   
  413fdc:	mov    al,BYTE PTR [ebp-0x57316a44]
  413fe2:	pop    eax
  413fe3:	aad    0x3f
  413fe5:	repz pusha 
  413fe7:	inc    edi
  413fe8:	sbb    al,0xc8
  413fea:	pop    esp
  413feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fec:	out    0xbc,eax
  413fee:	rol    BYTE PTR [ecx],cl
  413ff0:	retf   0x360d
  413ff3:	push   esi
  413ff4:	mov    dh,0xc9
  413ff6:	dec    ecx
  413ff7:	inc    edx
  413ff8:	pop    edx
  413ff9:	cmc    
  413ffa:	std    
  413ffb:	ja     0x413f9c
  413ffd:	ss rsm 
  414000:	outs   dx,BYTE PTR ds:[esi]
  414001:	pop    ds
  414002:	xor    eax,0x991c54e0
  414007:	inc    eax
  414008:	clc    
  414009:	shr    DWORD PTR [edx+0x56b062bf],1
  41400f:	and    al,BYTE PTR [ebx-0x36]
  414012:	adc    DWORD PTR [ebx+0x33e7adb0],edx
  414018:	xchg   esi,eax
  414019:	push   0x8
  41401b:	test   ah,0xd2
  41401e:	(bad)  
  41401f:	in     eax,dx
  414020:	dec    ecx
  414021:	nop
  414022:	int3   
  414023:	push   es
  414024:	sub    eax,0x60b1c5ec
  414029:	aad    0x5b
  41402b:	push   esi
  41402c:	jae    0x414034
  41402e:	push   ss
  41402f:	lea    ecx,[ebx]
  414031:	mov    edx,0x98d50df1
  414036:	(bad)  
  414037:	shl    ebp,1
  414039:	pushf  
  41403a:	xchg   edx,eax
  41403b:	fmul   QWORD PTR [esi]
  41403d:	or     al,0x5f
  41403f:	adc    eax,0x3c018496
  414044:	fs in  al,dx
  414046:	aam    0xa0
  414048:	outs   dx,BYTE PTR ds:[esi]
  414049:	sub    al,0xf1
  41404b:	pop    es
  41404c:	into   
  41404d:	xchg   edi,eax
  41404e:	jmp    0x580acd4c
  414053:	jg     0x414048
  414055:	xchg   ebx,esi
  414057:	cmp    ebp,DWORD PTR [edx+0x24]
  41405a:	lods   eax,DWORD PTR ds:[esi]
  41405b:	pop    esp
  41405c:	mov    ebx,0x4d722ff8
  414061:	std    
  414062:	inc    ebx
  414063:	mov    cl,0xd5
  414065:	iret   
  414066:	das    
  414067:	pop    esi
  414068:	fwait
  414069:	jmp    0x8bd8:0xbda7bba3
  414070:	imul   esp,DWORD PTR [ecx],0x17
  414073:	push   ss
  414074:	bound  ecx,QWORD PTR [ecx+ebp*2-0x66]
  414078:	jp     0x4140a0
  41407a:	mov    edi,0x1791782f
  41407f:	pop    esi
  414080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414081:	out    0x48,al
  414083:	test   eax,0x913db873
  414088:	dec    esp
  414089:	test   al,0xaa
  41408b:	test   DWORD PTR [ebx+edi*2],edi
  41408e:	shl    ebp,1
  414090:	ds js  0x414015
  414093:	xchg   DWORD PTR [ebp-0x58af1b11],ebp
  414099:	scas   eax,DWORD PTR es:[edi]
  41409a:	push   0x3f
  41409c:	xlat   BYTE PTR cs:[bx]
  41409f:	aad    0xa5
  4140a1:	jecxz  0x41411c
  4140a3:	iret   
  4140a4:	or     dh,ah
  4140a6:	addr16 iret 
  4140a8:	ficom  WORD PTR [ebx+edi*1+0x57e3b2c9]
  4140af:	pushf  
  4140b0:	adc    edi,DWORD PTR [ecx]
  4140b2:	mov    bl,0x8
  4140b4:	xchg   ecx,eax
  4140b5:	pop    esi
  4140b6:	xor    ebx,ebp
  4140b8:	push   es
  4140b9:	shl    BYTE PTR [ebp+eax*1+0x4a0423c2],0xaf
  4140c1:	sahf   
  4140c2:	mov    eax,ds:0xc18482c8
  4140c7:	mov    bh,0x3c
  4140c9:	xor    eax,0x75afca7f
  4140ce:	das    
  4140cf:	and    DWORD PTR [eax-0x6cdefa36],edx
  4140d5:	aam    0x46
  4140d7:	lea    ebp,[edi]
  4140d9:	jne    0x41412d
  4140db:	aas    
  4140dc:	mov    al,0xfe
  4140de:	inc    edi
  4140df:	ds call 0xce66:0x912fedac
  4140e7:	retf   0x8e9c
  4140ea:	xor    al,0xe1
  4140ec:	cs inc esp
  4140ee:	mov    al,0xbf
  4140f0:	push   esp
  4140f1:	xor    BYTE PTR [ebx+ecx*8+0x67],dh
  4140f5:	clc    
  4140f6:	in     eax,0xbd
  4140f8:	dec    edx
  4140f9:	iret   
  4140fa:	xor    al,0x62
  4140fc:	std    
  4140fd:	sbb    BYTE PTR gs:[edx],cl
  414100:	push   eax
  414101:	rcr    BYTE PTR [ebx],0x1b
  414104:	in     eax,0x98
  414106:	aad    0xc6
  414108:	ret    
  414109:	sub    al,0xb0
  41410b:	frstor [esi]
  41410d:	retf   
  41410e:	adc    WORD PTR [edi-0x4a],di
  414112:	scas   al,BYTE PTR es:[edi]
  414113:	jbe    0x41416e
  414115:	int3   
  414116:	xchg   ecx,eax
  414117:	(bad)  
  414118:	push   esi
  414119:	mov    ebx,0x65f0c7a3
  41411e:	mov    eax,0x8cbd546
  414123:	loop   0x414162
  414125:	mov    ah,0x2
  414127:	cwde   
  414128:	retf   0x8720
  41412b:	mov    edx,0xc78ae38b
  414130:	mov    ch,0x6
  414132:	lods   eax,DWORD PTR ds:[esi]
  414133:	call   0xedbe:0xdd744a0b
  41413a:	cld    
  41413b:	gs scas al,BYTE PTR es:[edi]
  41413d:	adc    eax,0xf686b00a
  414142:	popa   
  414143:	mov    esp,0x760bb212
  414148:	aaa    
  414149:	lods   al,BYTE PTR ds:[esi]
  41414a:	icebp  
  41414b:	ds mov esi,0x8ad80c3a
  414151:	xor    eax,0xcc8ecd24
  414156:	adc    BYTE PTR [esi+ebx*1-0x72],ch
  41415a:	test   al,0x3
  41415c:	xchg   ebp,eax
  41415d:	sub    al,0x8d
  41415f:	add    esp,DWORD PTR [ebx+eax*4+0x49]
  414163:	fsub   QWORD PTR [ebp-0x67]
  414166:	and    DWORD PTR gs:[esi+0x56],ecx
  41416a:	add    al,0xc4
  41416c:	cdq    
  41416d:	lea    ebp,[ecx+edx*4-0x4bcf579b]
  414174:	and    al,0x61
  414176:	xchg   edi,eax
  414177:	ficom  WORD PTR [ebx+0x13cced11]
  41417d:	fimul  WORD PTR [edi+0x34]
  414180:	cld    
  414181:	nop
  414182:	sbb    cl,BYTE PTR [ecx-0x39]
  414185:	and    cl,BYTE PTR [eax+0x250e4199]
  41418b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41418c:	dec    edi
  41418d:	pop    ecx
  41418e:	push   ds
  41418f:	push   edi
  414190:	push   0x62
  414192:	aas    
  414193:	(bad)  
  414195:	and    dh,BYTE PTR [ebx+esi*4+0x3a1f0012]
  41419c:	mov    eax,ds:0xcd4bd830
  4141a1:	or     DWORD PTR [eax+ecx*8-0x9],0xeef0b357
  4141a9:	enter  0x209a,0xad
  4141ad:	mov    dh,0x27
  4141af:	rcr    BYTE PTR [esi-0x241c93be],cl
  4141b5:	int    0x99
  4141b7:	aad    0xbf
  4141b9:	adc    eax,0x784e5225
  4141be:	jp     0x414145
  4141c0:	dec    ebx
  4141c1:	ins    DWORD PTR es:[edi],dx
  4141c2:	cmp    BYTE PTR [esi],ah
  4141c4:	lods   eax,DWORD PTR ds:[esi]
  4141c5:	iret   
  4141c6:	jmp    0x4398dda8
  4141cb:	mov    eax,ds:0xb9199ebb
  4141d0:	pop    ebx
  4141d1:	das    
  4141d2:	xor    eax,0x160b26d9
  4141d7:	xchg   ecx,eax
  4141d8:	ins    DWORD PTR es:[edi],dx
  4141d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141da:	fcmovnu st,st(0)
  4141dc:	and    BYTE PTR [ebx],0xa7
  4141df:	sbb    BYTE PTR [ecx-0x3dae9b14],dh
  4141e5:	into   
  4141e6:	sub    esp,ebp
  4141e8:	shl    DWORD PTR [ecx-0x38],1
  4141eb:	xchg   ebp,eax
  4141ec:	push   ecx
  4141ed:	test   DWORD PTR ds:0x8bc0758b,edx
  4141f3:	loopne 0x414197
  4141f5:	adc    al,bl
  4141f7:	mov    bh,bh
  4141f9:	cld    
  4141fa:	loopne 0x414223
  4141fc:	mov    al,ds:0x9c869f7a
  414201:	ins    DWORD PTR es:[edi],dx
  414202:	arpl   WORD PTR [ecx-0x3f16085f],sp
  414208:	dec    ecx
  414209:	and    al,0x2c
  41420b:	test   esp,0x9e8fddc2
  414211:	bound  eax,QWORD PTR [esi-0x5f]
  414214:	jo     0x4141b9
  414216:	fisub  DWORD PTR ds:0xe98ff692
  41421c:	loopne 0x4141f8
  41421e:	mov    edi,0x6bb8dbb
  414223:	call   DWORD PTR [ecx-0x25]
  414226:	lea    eax,[ebp+0x4c9eb5d0]
  41422c:	out    0x5,al
  41422e:	jp     0x4141db
  414230:	out    dx,eax
  414231:	ins    BYTE PTR es:[edi],dx
  414232:	mov    eax,ds:0xc1410132
  414237:	pop    esi
  414238:	aam    0xbb
  41423a:	cmp    al,0xa5
  41423c:	loopne 0x41423f
  41423e:	cmp    eax,0xae6503f8
  414243:	enter  0x4274,0x6e
  414247:	data16 jns 0x414292
  41424a:	inc    BYTE PTR [ebx+0x16125281]
  414250:	(bad)  
  414251:	(bad)  
  414252:	jle    0x414264
  414254:	or     BYTE PTR ds:0x40afe1d4,ah
  41425a:	loopne 0x414283
  41425c:	jmp    0xee3f1f00
  414261:	sbb    BYTE PTR [edi+esi*4],bh
  414264:	in     eax,dx
  414265:	pop    es
  414266:	jle    0x414245
  414268:	jbe    0x414245
  41426a:	mov    dh,0xb8
  41426c:	sub    al,0x3e
  41426e:	mov    ds:0x980ffc0e,eax
  414273:	mov    dl,0xaf
  414275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414276:	in     al,0x71
  414278:	sbb    eax,0x1e95b11e
  41427d:	dec    esp
  41427e:	xlat   BYTE PTR ds:[ebx]
  41427f:	retf   
  414280:	jp     0x414210
  414282:	std    
  414283:	mov    esp,DWORD PTR [ebx+0x2c]
  414286:	(bad)
  41428b:	shl    BYTE PTR [esi+0x27317b33],0xcf
  414292:	xchg   ecx,eax
  414293:	mov    ebx,DWORD PTR [edx+0x3e]
  414296:	icebp  
  414297:	fs test al,0x55
  41429a:	jp     0x41422b
  41429c:	xchg   edi,eax
  41429d:	ja     0x41426e
  41429f:	push   ebp
  4142a0:	loop   0x41424d
  4142a2:	xchg   edi,eax
  4142a3:	dec    esi
  4142a4:	mov    ecx,0x822ad0bf
  4142a9:	jg     0x4142cf
  4142ab:	push   0xfffffff2
  4142ad:	imul   DWORD PTR [esp]
  4142b0:	pop    ebp
  4142b1:	(bad)  [eax]
  4142b3:	push   esp
  4142b4:	cli    
  4142b5:	test   DWORD PTR [edi+eiz*2-0x21],ebx
  4142b9:	(bad)  
  4142ba:	xchg   esp,eax
  4142bb:	jae    0x4142c7
  4142bd:	icebp  
  4142be:	bsf    edx,DWORD PTR [ebp+0x6c]
  4142c2:	out    0x1d,al
  4142c4:	mov    edx,ebx
  4142c6:	jmp    0x414282
  4142c8:	mov    al,0x23
  4142ca:	enter  0x5eef,0x32
  4142ce:	repz pop ecx
  4142d0:	hlt    
  4142d1:	shl    BYTE PTR [edi],0xc9
  4142d4:	and    al,0xf8
  4142d6:	std    
  4142d7:	and    DWORD PTR [edx+0x66],0xf9b24848
  4142de:	add    BYTE PTR [edx+0x10],cl
  4142e1:	mov    cl,0x73
  4142e3:	in     eax,dx
  4142e4:	sbb    BYTE PTR [eax],bl
  4142e6:	jle    0x414279
  4142e8:	jp     0x4142e4
  4142ea:	sbb    al,0xc1
  4142ec:	push   edi
  4142ed:	lods   al,BYTE PTR ds:[esi]
  4142ee:	sbb    bh,ah
  4142f0:	cdq    
  4142f1:	inc    ebx
  4142f2:	jge    0x4142e2
  4142f4:	stc    
  4142f5:	fcmovne st,st(3)
  4142f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f8:	push   ecx
  4142f9:	ss cmp ch,bh
  4142fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142fd:	mov    ch,0x46
  4142ff:	out    dx,al
  414300:	aad    0xbb
  414302:	jle    0x41434e
  414304:	loope  0x41437e
  414306:	and    bl,ah
  414308:	sbb    DWORD PTR [edx-0x70],0xffffff81
  41430c:	clc    
  41430d:	xchg   DWORD PTR [eax+0x3d60c628],edi
  414313:	fsubr  QWORD PTR [ebx]
  414315:	sbb    ch,BYTE PTR [ebx]
  414317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414318:	das    
  414319:	aas    
  41431a:	fwait
  41431b:	mov    ecx,0xb3158d97
  414320:	or     DWORD PTR [edi-0x19817be9],ecx
  414326:	or     ebx,ebp
  414328:	mov    bh,BYTE PTR [eax+0xe9e2af4]
  41432e:	and    BYTE PTR [edi-0x2a],al
  414331:	rol    cl,cl
  414333:	mov    ch,0xb3
  414335:	xor    eax,0x619c446
  41433a:	jne    0x414381
  41433c:	imul   ebx,DWORD PTR [di+0x62],0x4caec9a5
  414344:	cmc    
  414345:	jo     0x414387
  414347:	or     eax,0x90217b22
  41434c:	es call 0x5a73272
  414352:	xor    ch,dl
  414354:	out    dx,eax
  414355:	and    eax,0x5d79bd2b
  41435a:	pop    ss
  41435b:	push   0x58461b5e
  414360:	outs   dx,BYTE PTR ds:[esi]
  414361:	mov    eax,ds:0x2e74f441
  414366:	adc    edx,DWORD PTR [esp+0x1]
  41436a:	fbstp  TBYTE PTR [edi+0x32eff14c]
  414370:	jp     0x41431d
  414372:	and    ah,dl
  414374:	ret    0x9b65
  414377:	pop    esp
  414378:	pusha  
  414379:	in     al,0x3a
  41437b:	(bad)  
  41437c:	out    dx,eax
  41437d:	pop    ecx
  41437e:	mov    ds:0x99b78146,eax
  414383:	jae    0x41435a
  414385:	push   ecx
  414386:	mov    esp,0xbd906879
  41438b:	or     DWORD PTR [edx-0x9a07dd7],ebx
  414391:	icebp  
  414392:	pop    edi
  414393:	pusha  
  414394:	dec    ebp
  414395:	addr16 add dh,dl
  414398:	and    esi,DWORD PTR [edi+eiz*1]
  41439b:	lods   al,BYTE PTR ds:[esi]
  41439c:	in     eax,0xac
  41439e:	lahf   
  41439f:	add    DWORD PTR es:[edi+0x9],eax
  4143a3:	push   edx
  4143a4:	bound  ecx,QWORD PTR [edx+0x6f]
  4143a7:	jmp    0x41435d
  4143a9:	mov    bl,0xaf
  4143ab:	cs jle 0x4143d3
  4143ae:	jl     0x4143bd
  4143b0:	mov    ds:0x2dec6b2b,al
  4143b5:	xchg   al,ah
  4143b7:	add    BYTE PTR ds:0x58c11f86,ah
  4143bd:	mov    ebp,0xf0a20ed0
  4143c2:	test   eax,0xd189c920
  4143c7:	test   bh,al
  4143c9:	data16 (bad) 
  4143cc:	jns    0x41441b
  4143ce:	outs   dx,BYTE PTR ds:[esi]
  4143cf:	fsubrp st(1),st
  4143d1:	out    dx,eax
  4143d2:	(bad)  
  4143d3:	dec    ecx
  4143d4:	jecxz  0x414361
  4143d6:	push   ebx
  4143d7:	scas   eax,DWORD PTR es:[edi]
  4143d8:	mov    ecx,0x37eea881
  4143dd:	pop    ecx
  4143de:	pop    eax
  4143df:	popa   
  4143e0:	sar    DWORD PTR [esp+esi*1],1
  4143e3:	imul   ebx,DWORD PTR [eax-0x50151930],0x6b
  4143ea:	pop    ecx
  4143eb:	xor    DWORD PTR [eax-0x36ea6c7c],ebp
  4143f1:	fcomp  QWORD PTR [ebx]
  4143f3:	in     al,0x43
  4143f5:	jecxz  0x4143b0
  4143f7:	sti    
  4143f8:	clc    
  4143f9:	hlt    
  4143fa:	repnz mov eax,0xa2e75abb
  414400:	sub    BYTE PTR ds:0x93269322,0xc5
  414407:	sar    BYTE PTR [eax+0x57],0x2b
  41440b:	hlt    
  41440c:	fs fs adc eax,0xcf7c08c0
  414413:	enter  0x37af,0x2b
  414417:	fwait
  414418:	icebp  
  414419:	sbb    eax,eax
  41441b:	(bad)
  41441e:	fisttp QWORD PTR [edi+0x372e62af]
  414424:	mov    edi,0x9bc55a61
  414429:	retf   
  41442a:	int3   
  41442b:	inc    ebx
  41442c:	pop    ds
  41442d:	mov    bl,0x72
  41442f:	jnp    0x41445d
  414431:	je     0x41444e
  414433:	gs pop ds
  414435:	inc    esp
  414436:	outs   dx,DWORD PTR ds:[esi]
  414437:	and    DWORD PTR [edx+eax*2],eax
  41443a:	ffree  st(0)
  41443c:	inc    esi
  41443d:	adc    al,0x27
  41443f:	lods   al,BYTE PTR ds:[esi]
  414440:	mov    dl,0xfe
  414442:	mov    edx,0xac49a35d
  414447:	mov    DWORD PTR [ebp+0x4d],ebp
  41444a:	cld    
  41444b:	mov    WORD PTR [ebx],cs
  41444d:	(bad)  [eax-0x3b]
  414450:	mov    ebp,DWORD PTR [ebp+0x24]
  414453:	int    0x18
  414455:	push   ebp
  414456:	mov    ch,0xec
  414458:	test   BYTE PTR [eax-0x315af55a],dh
  41445e:	sub    eax,0xeda2a2ee
  414463:	fnsave [ebp+0x69]
  414466:	add    BYTE PTR [ecx-0x57],dh
  414469:	pop    ecx
  41446a:	push   es
  41446b:	add    BYTE PTR [edi],dh
  41446d:	pop    ds
  41446e:	xor    DWORD PTR [edx+0x104d6b93],0xcf73a7e3
  414478:	cmc    
  414479:	arpl   WORD PTR [esi+0x19],ax
  41447c:	dec    ah
  41447e:	in     al,dx
  41447f:	cs push ebx
  414481:	pop    ss
  414482:	jp     0x4144b7
  414484:	pusha  
  414485:	unpckhps xmm7,xmm0
  414488:	inc    esi
  414489:	rol    DWORD PTR [ecx-0x7d],1
  41448c:	out    dx,al
  41448d:	push   eax
  41448e:	push   ebx
  41448f:	repz jbe 0x4144ce
  414492:	pop    ebp
  414493:	cli    
  414494:	addr16 dec eax
  414496:	add    eax,0x9fc1acd4
  41449b:	dec    eax
  41449c:	aas    
  41449d:	mov    ds:0xa8879db0,eax
  4144a2:	ja     0x414492
  4144a4:	lock mov ds:0x5c11ff1a,eax
  4144aa:	add    BYTE PTR [edi+0x6b9ecab0],al
  4144b0:	test   DWORD PTR [esi-0x71],edi
  4144b3:	mov    bl,0xce
  4144b5:	iret   
  4144b6:	frstor [eax+0x8]
  4144b9:	xchg   edx,eax
  4144ba:	push   esp
  4144bb:	ret    
  4144bc:	and    dh,BYTE PTR [ebx+0x0]
  4144bf:	mov    edx,DWORD PTR [ecx-0x679f3cdb]
  4144c5:	adc    al,0xbe
  4144c7:	push   0xffffffe4
  4144c9:	mov    ebx,ecx
  4144cb:	mov    ebx,0xb7a966d
  4144d0:	pop    edx
  4144d1:	mov    cs,WORD PTR [ebx]
  4144d3:	xchg   edx,eax
  4144d4:	and    ebp,edi
  4144d6:	mov    ebp,0x2226f6b8
  4144dc:	rcl    bh,cl
  4144de:	and    eax,DWORD PTR [edi-0x1abc3a5]
  4144e4:	push   ds
  4144e5:	leave  
  4144e6:	stos   BYTE PTR es:[edi],al
  4144e7:	cmc    
  4144e8:	cmc    
  4144e9:	imul   eax,DWORD PTR [edi],0xf0f2fe44
  4144ef:	out    dx,eax
  4144f0:	xor    al,0xa5
  4144f2:	jle    0x4144db
  4144f4:	(bad)  
  4144f5:	in     eax,0x90
  4144f7:	jp     0x41455a
  4144f9:	rcr    BYTE PTR [esi],0xcf
  4144fc:	pop    edi
  4144fd:	pusha  
  4144fe:	mov    al,0x1d
  414500:	mov    al,ds:0x3a2e37f6
  414505:	cmp    dh,bh
  414507:	lock mov ah,0x15
  41450a:	and    BYTE PTR [eax-0x53],al
  41450d:	inc    eax
  41450e:	in     eax,dx
  41450f:	inc    eax
  414510:	mov    dl,0x35
  414512:	push   0xdcb19b65
  414517:	pop    ebp
  414518:	sbb    al,0x97
  41451a:	(bad)  
  41451b:	pop    esi
  41451c:	aad    0x31
  41451e:	jecxz  0x4144bc
  414520:	shl    DWORD PTR [edx-0x3d],cl
  414523:	or     eax,0x59097069
  414528:	xchg   ebx,eax
  414529:	je     0x4144e7
  41452b:	push   ss
  41452c:	pop    esp
  41452d:	fs into 
  41452f:	test   DWORD PTR [edx+0x65],ebp
  414532:	mov    ch,0x63
  414534:	stos   DWORD PTR es:[edi],eax
  414535:	mov    ecx,0x9170e1cd
  41453a:	xor    eax,0xf12a091a
  41453f:	inc    esi
  414540:	jmp    0x414570
  414542:	mov    esp,0x27f8377c
  414547:	loop   0x4145a5
  414549:	out    0xee,eax
  41454b:	rcr    DWORD PTR [esi+0x7e0c1f1d],0xd2
  414552:	push   ss
  414553:	retf   
  414554:	in     eax,dx
  414555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414556:	das    
  414557:	test   al,0xe0
  414559:	xor    edi,DWORD PTR [ecx]
  41455b:	add    edi,edi
  41455d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41455e:	add    DWORD PTR [ebx-0x51c544fb],ecx
  414564:	(bad)  
  414565:	fisttp QWORD PTR ds:0x7ba7c98e
  41456b:	dec    esi
  41456c:	pop    ebp
  41456d:	sahf   
  41456e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456f:	stc    
  414570:	es aas 
  414572:	mov    edi,0xad433146
  414577:	inc    esi
  414578:	mov    BYTE PTR [ecx-0x4e],bl
  41457b:	jb     0x414531
  41457d:	shl    BYTE PTR [eax+0x50],1
  414580:	(bad)
  414584:	hlt    
  414585:	or     BYTE PTR [edx-0x14],al
  414588:	pushf  
  414589:	shr    BYTE PTR [edi],0x72
  41458c:	mov    bl,0xd4
  41458e:	(bad)  
  41458f:	cmp    al,0x20
  414591:	lahf   
  414592:	and    eax,DWORD PTR [edi-0x5e]
  414595:	pop    edi
  414596:	pop    esp
  414597:	aas    
  414598:	pop    ss
  414599:	xchg   esi,eax
  41459a:	pop    ebx
  41459b:	cmp    eax,0xf1ebc1ce
  4145a0:	inc    ecx
  4145a1:	dec    ecx
  4145a2:	(bad)  [ebx+0x634b81d7]
  4145a8:	pop    ecx
  4145a9:	bound  ebp,QWORD PTR [ecx-0x46e2c1d5]
  4145af:	jge    0x414551
  4145b1:	nop
  4145b2:	test   DWORD PTR [ecx-0xf051fd4],edx
  4145b8:	stc    
  4145b9:	mov    ah,0xe0
  4145bb:	mov    esi,0x9a7b86e5
  4145c0:	sti    
  4145c1:	sub    edx,edi
  4145c3:	fnstenv [edx-0x5813ff25]
  4145c9:	xor    BYTE PTR [esi+0xf],ch
  4145cc:	cmp    al,0x16
  4145ce:	test   al,0xd2
  4145d0:	sub    DWORD PTR [edi+eiz*2],0xb00351a5
  4145d7:	jno    0x414643
  4145d9:	mov    DWORD PTR [edi],ebx
  4145db:	sar    BYTE PTR [edx+edi*8-0x2f],0xdb
  4145e0:	lea    edx,[edx]
  4145e2:	mov    eax,0xa1b79146
  4145e7:	pop    ss
  4145e8:	(bad)  
  4145ea:	jle    0x41465e
  4145ec:	mov    ah,BYTE PTR [ebx-0x60]
  4145ef:	ins    DWORD PTR es:[edi],dx
  4145f0:	enter  0xcaf2,0xb
  4145f4:	popf   
  4145f5:	pushf  
  4145f6:	addr16 push ds
  4145f8:	push   edi
  4145f9:	sahf   
  4145fa:	lock scas eax,DWORD PTR es:[edi]
  4145fc:	ja     0x4145e7
  4145fe:	pop    edi
  4145ff:	retf   
  414600:	int3   
  414601:	stos   BYTE PTR es:[edi],al
  414602:	xchg   ebx,edx
  414604:	pop    edx
  414605:	fbstp  TBYTE PTR [esi]
  414607:	mov    ebp,0x46567471
  41460c:	xchg   edi,eax
  41460d:	pusha  
  41460e:	mov    edi,0x4168734e
  414613:	cmp    esi,DWORD PTR [ebx+0x64]
  414616:	fld    QWORD PTR [ebp+0x67]
  414619:	cmp    eax,0x9b31e920
  41461e:	rcr    BYTE PTR [edi],0x30
  414621:	icebp  
  414622:	imul   ecx,DWORD PTR [esi],0xe2cc2d5b
  414628:	push   esi
  414629:	push   es
  41462a:	lods   eax,DWORD PTR ds:[esi]
  41462b:	std    
  41462c:	adc    BYTE PTR [esi+0x39],ch
  41462f:	sub    eax,0xb49cc9cd
  414634:	cmp    ebp,DWORD PTR [ebp-0x57]
  414637:	arpl   WORD PTR [eax-0x668020a9],si
  41463d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463e:	sub    al,0xb9
  414640:	pop    edi
  414641:	inc    ecx
  414642:	jp     0x414629
  414644:	imul   edi,DWORD PTR [esi+0x68],0xffffffc4
  414648:	add    BYTE PTR [ebx+0xd92f631],cl
  41464e:	mov    dl,BYTE PTR [esi-0x7cccdbad]
  414654:	inc    ebx
  414655:	sbb    eax,0x8938fd53
  41465a:	popf   
  41465b:	push   ds
  41465c:	adc    BYTE PTR [ebp-0x30],bh
  41465f:	cs pop es
  414661:	lods   al,BYTE PTR ds:[esi]
  414662:	ja     0x414613
  414664:	ror    DWORD PTR [edx+eiz*8-0x5f],cl
  414668:	and    bl,ch
  41466a:	fdivr  QWORD PTR [edi]
  41466c:	mov    edi,0x3330f503
  414671:	bound  eax,QWORD PTR [edx+0xb]
  414674:	test   BYTE PTR [ebp+0x0],cl
  414677:	dec    edx
  414678:	loopne 0x414630
  41467a:	into   
  41467b:	push   ebx
  41467c:	sub    DWORD PTR [ebx-0x2c],esp
  41467f:	push   esi
  414680:	aaa    
  414681:	fsubr  st(2),st
  414683:	or     edi,DWORD PTR [eax]
  414685:	jae    0x4146e1
  414687:	dec    esi
  414688:	sub    eax,0xb9bc53b9
  41468d:	adc    DWORD PTR [edi],eax
  41468f:	push   esp
  414690:	or     BYTE PTR ds:0x688513,dh
  414696:	xor    al,0xd5
  414698:	sub    al,0x90
  41469a:	dec    esi
  41469b:	and    eax,0x894fa265
  4146a1:	or     al,BYTE PTR [edx]
  4146a3:	cmp    bl,al
  4146a5:	mov    bh,0x2f
  4146a7:	icebp  
  4146a8:	(bad)  
  4146a9:	adc    eax,0x77876488
  4146ae:	sub    eax,DWORD PTR [edx+esi*8-0x3187ef8]
  4146b5:	and    edx,DWORD PTR [eax]
  4146b7:	shl    DWORD PTR [eax],1
  4146b9:	sbb    esp,DWORD PTR [edx]
  4146bb:	sub    edx,edi
  4146bd:	ins    BYTE PTR es:[edi],dx
  4146be:	lea    ebx,[esi+0x2479bacd]
  4146c4:	sub    BYTE PTR [eax-0x3f],bl
  4146c7:	gs ret 0x3b9f
  4146cb:	jmp    0xdf053b65
  4146d0:	and    al,0xee
  4146d2:	sar    BYTE PTR [edx+edi*2-0x139a236e],cl
  4146d9:	dec    eax
  4146da:	xchg   ebp,eax
  4146db:	xchg   ecx,ecx
  4146dd:	neg    DWORD PTR fs:[edi+0x40]
  4146e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e2:	popa   
  4146e3:	sar    DWORD PTR [edx+0x6489102b],1
  4146e9:	sub    al,BYTE PTR [esi+0x5d13b990]
  4146ef:	cli    
  4146f0:	or     eax,0xe9b44a4f
  4146f5:	std    
  4146f6:	test   BYTE PTR [esi+edx*1+0x46],ch
  4146fa:	ror    BYTE PTR [edi+0x18],1
  4146fd:	bound  esi,QWORD PTR [ecx+0x4caf431f]
  414703:	arpl   WORD PTR [ecx+0x69],bp
  414706:	pop    edi
  414707:	popa   
  414708:	xor    al,0xd8
  41470a:	sub    eax,0x7e0f24f3
  41470f:	adc    al,BYTE PTR [edx+0x2b]
  414712:	vmread DWORD PTR [esi-0x6d],ecx
  414716:	sti    
  414717:	add    edi,DWORD PTR [ebx+0x1b]
  41471a:	xchg   ecx,eax
  41471b:	leave  
  41471c:	rcr    BYTE PTR [ecx+0x45],0xec
  414720:	scas   al,BYTE PTR es:[edi]
  414721:	jb     0x4146da
  414723:	mov    al,BYTE PTR [ebp-0x2c]
  414726:	rol    BYTE PTR [edx-0x6b],1
  414729:	out    0x6c,al
  41472b:	(bad)  
  41472c:	fwait
  41472d:	jg     0x414765
  41472f:	sahf   
  414730:	lahf   
  414731:	outs   dx,BYTE PTR ds:[esi]
  414732:	scas   eax,DWORD PTR es:[edi]
  414733:	ja     0x4147ae
  414735:	sti    
  414736:	lea    edx,[ebx+0x6e]
  414739:	cwde   
  41473a:	enter  0x9e2e,0x39
  41473e:	inc    ecx
  41473f:	pop    edx
  414740:	imul   ecx,DWORD PTR [ebp-0x7d7e9ecb],0xccd2948a
  41474a:	xchg   edx,eax
  41474b:	mov    ds,WORD PTR [esi]
  41474d:	aad    0x8e
  41474f:	outs   dx,BYTE PTR ds:[esi]
  414750:	out    0xde,al
  414752:	push   ds
  414753:	pop    ebp
  414754:	inc    esp
  414755:	or     eax,0xe2a0d404
  41475a:	ja     0x41471b
  41475c:	mov    ebx,0x2a5c878b
  414761:	test   al,0x10
  414763:	push   ebx
  414764:	xchg   edx,eax
  414765:	fstp   TBYTE PTR [ecx]
  414767:	clc    
  414768:	xchg   esp,eax
  414769:	xor    ebx,DWORD PTR [esp+edi*4-0x7]
  41476d:	cmc    
  41476e:	leave  
  41476f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414770:	sub    eax,0xfbbe37fc
  414775:	ror    esp,1
  414777:	jmp    0x414742
  414779:	or     al,0xe6
  41477b:	mov    edi,0xb742fd47
  414780:	jp     0x4147a3
  414782:	scas   al,BYTE PTR es:[edi]
  414783:	xchg   edx,eax
  414784:	test   al,0x79
  414786:	into   
  414787:	inc    ecx
  414788:	push   edx
  414789:	xor    BYTE PTR [ecx],0xd
  41478c:	fdiv   DWORD PTR [eax+0x41]
  41478f:	cmp    al,0xb8
  414791:	sub    DWORD PTR [ebp+0x2],edi
  414794:	out    dx,al
  414795:	mov    ds:0xfbe09014,eax
  41479a:	pop    ebx
  41479b:	mov    esi,0x87382190
  4147a0:	(bad)  
  4147a1:	sub    BYTE PTR [edi+0x77],bl
  4147a4:	adc    BYTE PTR ds:0x4105bb72,bh
  4147aa:	aam    0x70
  4147ac:	adc    al,0x61
  4147ae:	js     0x414742
  4147b0:	loop   0x414811
  4147b2:	jae    0x4147b3
  4147b4:	mov    ebx,0x5f7a35ae
  4147b9:	mov    edi,0x5f5dcfe0
  4147be:	pop    ebp
  4147bf:	out    0xd7,al
  4147c1:	cs mov dh,0xa8
  4147c4:	mov    bl,0x5
  4147c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c7:	(bad)  
  4147c9:	test   al,0xc1
  4147cb:	ins    BYTE PTR es:[edi],dx
  4147cc:	repnz inc edx
  4147ce:	daa    
  4147cf:	or     eax,0x899276ea
  4147d4:	jp     0x4147a4
  4147d6:	in     al,dx
  4147d7:	or     dl,BYTE PTR [ecx+0x4f5e986f]
  4147dd:	sbb    ah,cl
  4147df:	pop    eax
  4147e0:	pop    ss
  4147e1:	das    
  4147e2:	xor    BYTE PTR [ebp-0x48],dh
  4147e5:	xor    DWORD PTR [esi],ecx
  4147e7:	jge    0x41482a
  4147e9:	mov    edi,edi
  4147eb:	xlat   BYTE PTR ds:[ebx]
  4147ec:	retf   0x74ad
  4147ef:	or     cl,bh
  4147f1:	pop    ebp
  4147f2:	and    BYTE PTR [ebp+0x3047a226],dl
  4147f8:	and    ebx,esi
  4147fa:	push   esi
  4147fb:	sub    DWORD PTR [ebx+0x8],ebx
  4147fe:	jno    0x4147ae
  414800:	fsubr  QWORD PTR [edi]
  414802:	xchg   ecx,eax
  414803:	sti    
  414804:	add    eax,0x9c213afc
  414809:	(bad)  
  41480a:	call   0x95affb4b
  41480f:	idiv   BYTE PTR [edi+0x10]
  414812:	sbb    BYTE PTR [edi],dl
  414814:	jns    0x4147c5
  414816:	int    0x63
  414818:	sub    eax,DWORD PTR [ebp-0x58458a49]
  41481e:	or     eax,0x8b1e3046
  414823:	or     BYTE PTR [ebp-0x3b46b3ba],ch
  414829:	dec    esp
  41482a:	sahf   
  41482b:	or     DWORD PTR [eax-0x18b784c0],0x26
  414832:	jne    0x4148a5
  414834:	sbb    BYTE PTR [edx],al
  414836:	dec    ebx
  414837:	inc    edi
  414838:	push   esi
  414839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483a:	inc    ecx
  41483b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41483c:	sub    eax,ebx
  41483e:	popf   
  41483f:	xlat   BYTE PTR ds:[ebx]
  414840:	popa   
  414841:	dec    ebx
  414842:	mov    ch,0x6
  414844:	mov    ah,0xe7
  414846:	sub    al,dl
  414848:	xchg   esi,ebp
  41484a:	test   al,0x32
  41484c:	jmp    0x3a6089a1
  414851:	or     BYTE PTR [esi+0x30],0x7a
  414855:	retf   
  414856:	daa    
  414857:	sub    eax,0x6c9c4423
  41485c:	mov    esp,0xe40216d4
  414861:	sbb    BYTE PTR [eax],0x4d
  414864:	rol    bl,1
  414866:	mov    cl,0xa5
  414868:	inc    esi
  414869:	lods   al,BYTE PTR ds:[esi]
  41486a:	aas    
  41486b:	mov    esp,0x3dddb6fd
  414870:	mov    ecx,0x9dd6ae6d
  414875:	jl     0x41481c
  414877:	xchg   edi,eax
  414878:	jne    0x4147fa
  41487a:	add    bl,ch
  41487c:	cmp    al,0xe9
  41487e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487f:	mov    esi,0x3fe14862
  414884:	add    BYTE PTR [edi],cl
  414886:	xor    bh,BYTE PTR [ebx-0x6b]
  414889:	jne    0x414813
  41488b:	rol    BYTE PTR [edx],cl
  41488d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41488e:	xchg   edi,eax
  41488f:	inc    edi
  414890:	and    esp,DWORD PTR [ebx+0x2a546b04]
  414896:	test   DWORD PTR [ebp+esi*4+0x6e],esp
  41489a:	sbb    eax,DWORD PTR [ebp+0x3ef9b86]
  4148a0:	retf   
  4148a1:	and    edi,DWORD PTR [ecx-0xc]
  4148a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148a5:	aam    0xc9
  4148a7:	ins    BYTE PTR es:[edi],dx
  4148a8:	fcmovbe st,st(0)
  4148aa:	stc    
  4148ab:	and    eax,0x460afc21
  4148b0:	enter  0x9839,0x32
  4148b4:	fst    DWORD PTR [ecx+0x6d]
  4148b7:	adc    eax,0x87f708f5
  4148bc:	xchg   ch,dh
  4148be:	jecxz  0x41485b
  4148c0:	add    eax,0x415bf64
  4148c5:	sbb    eax,0x2d9da79
  4148ca:	mul    DWORD PTR [eax-0x1e77ebec]
  4148d0:	into   
  4148d1:	rcl    BYTE PTR [edx+0x5a],0x2b
  4148d5:	mov    DWORD PTR [esi-0x31],eax
  4148d8:	dec    ebx
  4148d9:	mov    bh,0x8
  4148db:	cmp    cl,BYTE PTR ds:0xf733c762
  4148e1:	in     eax,0xa6
  4148e3:	cmp    al,0xec
  4148e5:	add    BYTE PTR [esi],0xb0
  4148e8:	mov    WORD PTR [edx],es
  4148ea:	(bad)  
  4148eb:	int3   
  4148ec:	inc    eax
  4148ed:	popa   
  4148ee:	mov    al,0x86
  4148f0:	loop   0x41490a
  4148f2:	mov    edx,0x9ddd2acb
  4148f7:	inc    DWORD PTR [ebx+edi*2-0x4b63f2f0]
  4148fe:	inc    eax
  4148ff:	xor    DWORD PTR [ebx+0x1b5d4173],0x52771a26
  414909:	ins    DWORD PTR es:[edi],dx
  41490a:	call   0x99bb:0x3348a5fe
  414911:	ja     0x414988
  414913:	inc    esi
  414914:	ror    ecx,cl
  414916:	int    0xa
  414918:	xrelease xchg BYTE PTR [ebp+0x1e],dh
  41491c:	in     al,dx
  41491d:	cdq    
  41491e:	fsubrp st(1),st
  414920:	mov    ebp,ss
  414922:	mov    dh,0xb3
  414924:	bswap  edx
  414926:	nop
  414927:	mov    ds:0xb02a0c06,eax
  41492c:	add    bh,BYTE PTR [edx]
  41492e:	retf   
  41492f:	add    bl,BYTE PTR [ebx+edx*1]
  414932:	jl     0x414963
  414934:	mov    BYTE PTR [edx-0x3c3d2d14],ch
  41493a:	cmp    BYTE PTR [ecx+0x57],0xd9
  41493e:	xchg   ebp,eax
  41493f:	xor    ebx,esi
  414941:	outs   dx,BYTE PTR ds:[esi]
  414942:	daa    
  414943:	push   esp
  414944:	jns    0x4148ef
  414946:	retf   0xc1ad
  414949:	pop    ecx
  41494a:	mov    ch,0x2e
  41494c:	jle    0x41491c
  41494e:	or     ebx,ecx
  414950:	add    DWORD PTR [ecx+0x4d],edx
  414953:	pop    ecx
  414954:	rcr    DWORD PTR ds:0x99fc823b,0x68
  41495b:	mov    dl,0xd1
  41495d:	jb     0x414963
  41495f:	fidiv  WORD PTR ds:0xa0f8f89a
  414965:	aaa    
  414966:	inc    ebx
  414967:	dec    ebx
  414968:	out    dx,al
  414969:	inc    edx
  41496a:	mov    ebp,ss
  41496c:	in     al,dx
  41496d:	into   
  41496e:	inc    esp
  41496f:	lahf   
  414970:	jmp    0x743f:0x759694f1
  414977:	mov    esi,0xf2c4e920
  41497c:	sub    BYTE PTR [ecx+0x5],ah
  41497f:	push   cs
  414980:	push   edx
  414981:	fadd   st,st(3)
  414983:	into   
  414984:	pop    eax
  414985:	xchg   DWORD PTR [eax],ecx
  414987:	stc    
  414988:	sub    ebp,DWORD PTR [ecx-0x6]
  41498b:	cmp    eax,0x6e1618e7
  414990:	mov    ah,BYTE PTR [esi+0x5688c70c]
  414996:	div    bh
  414998:	push   0xe565dc3b
  41499d:	lods   al,BYTE PTR ds:[esi]
  41499e:	mov    al,ds:0xca2b0a60
  4149a3:	lock out 0x9b,eax
  4149a6:	(bad)  
  4149a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a9:	mov    dh,0x40
  4149ab:	fld    QWORD PTR [edi-0x73f96784]
  4149b1:	in     al,dx
  4149b2:	push   ecx
  4149b3:	out    0xd9,al
  4149b5:	aad    0xd0
  4149b7:	push   ss
  4149b8:	xor    DWORD PTR [edi-0x52],ebp
  4149bb:	out    dx,al
  4149bc:	pop    ss
  4149bd:	xchg   edi,eax
  4149be:	(bad)  
  4149bf:	sahf   
  4149c0:	dec    edx
  4149c1:	pop    es
  4149c2:	bnd jmp 0x41496e
  4149c5:	fucomip st,st(4)
  4149c7:	jo     0x4149b0
  4149c9:	je     0x414a16
  4149cb:	dec    esp
  4149cc:	jmp    0x7d80c6fd
  4149d1:	retf   0xe5d5
  4149d4:	dec    ebx
  4149d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149d6:	fld    TBYTE PTR [ebx-0x32a85a84]
  4149dc:	jge    0x4149f3
  4149de:	push   ebx
  4149df:	push   ss
  4149e0:	add    ebx,eax
  4149e2:	test   DWORD PTR [ebx+eax*4+0x1fb984a8],esp
  4149e9:	mov    ds:0x7d937b97,eax
  4149ee:	scas   eax,DWORD PTR es:[edi]
  4149ef:	mov    ah,0x11
  4149f1:	pop    edi
  4149f2:	xchg   esp,eax
  4149f3:	lahf   
  4149f4:	out    0xaa,al
  4149f6:	imul   ebp,DWORD PTR [eax+0x4cd0c26c],0xffffff85
  4149fd:	or     ebp,0xe5356929
  414a03:	sub    al,0x9e
  414a05:	mov    ebp,edx
  414a07:	std    
  414a08:	pop    ds
  414a09:	mov    cl,0x4b
  414a0b:	jae    0x4149da
  414a0d:	cmp    DWORD PTR [edx+0x192afdc5],0x49
  414a14:	repnz inc esi
  414a16:	xchg   ebp,eax
  414a18:	mov    ch,0xd4
  414a1a:	ja     0x4149b0
  414a1c:	xor    al,0x51
  414a1e:	popf   
  414a1f:	ja     0x4149d2
  414a21:	cmp    ebp,DWORD PTR [ecx]
  414a23:	dec    esi
  414a24:	xchg   DWORD PTR [ebp+0x1b],esi
  414a27:	js     0x4149b5
  414a29:	mov    edx,0x62fa043d
  414a2e:	add    DWORD PTR [edi-0x15f69360],0xffffffed
  414a35:	inc    ebp
  414a36:	inc    ebp
  414a37:	je     0x414a53
  414a39:	or     cl,BYTE PTR [edx]
  414a3b:	mov    ecx,0xf812444d
  414a40:	mov    BYTE PTR [ecx-0x196e0e42],al
  414a46:	sbb    dl,cl
  414a48:	push   ebx
  414a49:	sbb    bl,BYTE PTR [esp]
  414a4c:	outs   dx,DWORD PTR ds:[esi]
  414a4d:	icebp  
  414a4e:	shl    cl,cl
  414a50:	or     DWORD PTR [eax+0x78e8132e],esp
  414a56:	mov    ah,al
  414a58:	in     eax,dx
  414a59:	xor    eax,0x927132d5
  414a5e:	pop    es
  414a5f:	enter  0x7ee4,0xfe
  414a63:	imul   ecx,DWORD PTR [edx+0x16],0xe
  414a67:	ds mov dl,al
  414a6a:	lods   al,BYTE PTR ds:[esi]
  414a6b:	push   edx
  414a6c:	fwait
  414a6d:	add    eax,0xa23df3f7
  414a72:	arpl   WORD PTR [esi+ebx*4-0x1e5fa80e],di
  414a79:	fs adc al,0xc0
  414a7c:	xor    al,0x56
  414a7e:	push   edi
  414a7f:	std    
  414a80:	retf   
  414a81:	cmp    eax,0x87699d01
  414a86:	push   eax
  414a87:	jp     0x414a49
  414a89:	jmp    0x414a8f
  414a8b:	and    eax,0x7be095c3
  414a90:	mov    dl,0x41
  414a92:	xor    al,0x42
  414a94:	aad    0x14
  414a96:	xchg   edx,eax
  414a97:	shl    DWORD PTR ds:0x8f0a00d8,0x7a
  414a9e:	mov    bl,0x5
  414aa0:	push   edi
  414aa1:	pop    esp
  414aa2:	in     al,0xe6
  414aa4:	fdivr  QWORD PTR [esi-0x15]
  414aa7:	(bad)  
  414aa8:	call   0x9397d515
  414aad:	bound  esi,QWORD PTR [ecx-0x21]
  414ab0:	stos   BYTE PTR es:[edi],al
  414ab1:	fs jno 0x414ae3
  414ab4:	out    dx,eax
  414ab5:	push   eax
  414ab6:	mov    ah,0xeb
  414ab8:	or     al,0x79
  414aba:	jo     0x414a54
  414abc:	sub    esp,0xffffff92
  414abf:	inc    ebx
  414ac0:	inc    eax
  414ac1:	add    esp,ebp
  414ac3:	hlt    
  414ac4:	fstp   QWORD PTR [edi+0x66]
  414ac7:	dec    ecx
  414ac8:	ret    
  414ac9:	add    eax,0x967ec503
  414ace:	and    eax,DWORD PTR [ebx+0x7c]
  414ad1:	mov    esp,0x7db5f7c1
  414ad6:	mov    WORD PTR ds:0xacbb9f41,gs
  414adc:	mov    ah,0x10
  414ade:	adc    BYTE PTR [edi+0x6f],ch
  414ae1:	jmp    0xe441f8a9
  414ae6:	out    dx,eax
  414ae7:	repnz push eax
  414ae9:	dec    esp
  414aea:	cmp    bl,BYTE PTR [ebx]
  414aec:	push   ss
  414aed:	sub    DWORD PTR [ebx],eax
  414aef:	scas   eax,DWORD PTR es:[edi]
  414af0:	jno    0x414b26
  414af2:	rol    BYTE PTR [ecx-0x58],1
  414af5:	cwde   
  414af6:	pop    edx
  414af7:	mov    ds:0xb970fe2e,eax
  414afc:	fsubr  QWORD PTR [ebx]
  414afe:	fistp  WORD PTR [ecx-0x78]
  414b01:	inc    ebx
  414b02:	and    bh,BYTE PTR [ebp+0x5]
  414b05:	bound  ebx,QWORD PTR [esi-0x42]
  414b08:	or     al,0x5b
  414b0a:	ftst   
  414b0c:	mov    al,ds:0x4b570561
  414b11:	(bad)  
  414b14:	mov    bl,0x57
  414b16:	or     dl,BYTE PTR [ebp-0x61]
  414b19:	pop    ecx
  414b1a:	adc    eax,0x78552793
  414b1f:	(bad)  
  414b20:	cli    
  414b21:	sub    dh,BYTE PTR [eax+0x5a978f30]
  414b27:	cmp    BYTE PTR [edx+eiz*2-0x71],ch
  414b2b:	je     0x414b64
  414b2d:	or     ebp,edx
  414b2f:	inc    esp
  414b30:	shr    DWORD PTR [esi],0x7d
  414b33:	xor    BYTE PTR ss:[edi-0x169c5a12],bl
  414b3a:	cmp    eax,0x62238dc4
  414b3f:	std    
  414b40:	int    0x11
  414b42:	repnz imul ebp,DWORD PTR [eax],0xfffffffe
  414b46:	in     al,0x40
  414b48:	xlat   BYTE PTR ds:[ebx]
  414b49:	sbb    BYTE PTR [edx+0x6e6fbcc1],ah
  414b4f:	lods   al,BYTE PTR ds:[esi]
  414b50:	or     DWORD PTR [eax],edx
  414b52:	outs   dx,DWORD PTR ds:[esi]
  414b53:	retf   0xff25
  414b56:	test   eax,0x55a46189
  414b5b:	pusha  
  414b5c:	outs   dx,DWORD PTR ds:[esi]
  414b5d:	iret   
  414b5e:	and    esi,DWORD PTR [ebx+0x38]
  414b61:	addr16 add ebx,esi
  414b64:	mov    bh,0x4b
  414b66:	mov    DWORD PTR [ebp+esi*4+0x7f],esi
  414b6a:	pusha  
  414b6b:	jl     0x414b9d
  414b6d:	add    esi,esi
  414b6f:	and    DWORD PTR [ebx+0x77868c3e],esp
  414b75:	cmp    al,0xa
  414b77:	loopne 0x414b93
  414b79:	in     al,0x91
  414b7b:	loopne 0x414be2
  414b7d:	les    esp,FWORD PTR [ecx-0x32e129fc]
  414b83:	lods   eax,DWORD PTR ds:[esi]
  414b84:	push   es
  414b85:	mov    esi,0x9db72a28
  414b8a:	and    eax,0xbfdfa36b
  414b8f:	ds shl eax,cl
  414b92:	jns    0x414be1
  414b94:	sbb    esp,edi
  414b96:	push   0xffffffc2
  414b98:	or     eax,0x9d73f58f
  414b9d:	pop    ss
  414b9e:	inc    esi
  414b9f:	cmc    
  414ba0:	push   ecx
  414ba1:	inc    esi
  414ba2:	shl    DWORD PTR [edx+0x4ec9a65f],0xf4
  414ba9:	in     eax,dx
  414baa:	lods   al,BYTE PTR ds:[esi]
  414bab:	xchg   eax,esi
  414bad:	out    dx,eax
  414bae:	push   esi
  414baf:	and    bh,BYTE PTR [eax-0x3c37b5fe]
  414bb5:	mov    al,ds:0x6c13913b
  414bba:	inc    eax
  414bbb:	add    al,0xec
  414bbd:	mov    ebx,0x5051b380
  414bc2:	inc    ebx
  414bc3:	aaa    
  414bc4:	rcr    BYTE PTR [ebx+0x2f],cl
  414bc7:	dec    edx
  414bc8:	cmp    ebx,ecx
  414bca:	pop    eax
  414bcb:	xchg   ebx,eax
  414bcc:	xchg   DWORD PTR es:[edx+0x24],esi
  414bd0:	div    BYTE PTR [edx+0x431d91fa]
  414bd6:	outs   dx,BYTE PTR ds:[esi]
  414bd7:	es dec esi
  414bd9:	mov    al,0xec
  414bdb:	data16 int 0x4d
  414bde:	mov    ebp,0x9fb29381
  414be3:	pop    es
  414be4:	lahf   
  414be5:	fnstsw WORD PTR [ecx+0x413752a4]
  414beb:	jno    0x414c11
  414bed:	dec    esi
  414bee:	and    al,0xce
  414bf0:	inc    edx
  414bf1:	(bad)  
  414bf2:	lods   al,BYTE PTR ds:[esi]
  414bf3:	sub    eax,0x9f4642e5
  414bf8:	out    0xa7,al
  414bfa:	cs jae 0x414c70
  414bfd:	dec    ebp
  414bfe:	adc    DWORD PTR [edi+0x2a18e03f],0x1668b65c
  414c08:	xchg   DWORD PTR ds:0xcc286205,ebx
  414c0e:	xor    ecx,DWORD PTR [ebx+0x63b27385]
  414c14:	rcl    DWORD PTR [ebx-0x63acf14a],cl
  414c1a:	cwde   
  414c1b:	lods   eax,DWORD PTR ds:[esi]
  414c1c:	nop
  414c1d:	pop    ecx
  414c1e:	inc    eax
  414c1f:	cmp    WORD PTR [edx],0xef95
  414c24:	mov    ecx,0x2930629a
  414c29:	xchg   ecx,eax
  414c2a:	out    dx,eax
  414c2b:	mov    edi,0x97628adf
  414c30:	sub    al,0xdc
  414c32:	and    DWORD PTR ds:0x90f4b789,eax
  414c38:	sub    eax,DWORD PTR [eax+eax*2-0x15]
  414c3c:	sub    eax,0x61b3061d
  414c41:	mul    BYTE PTR [edi-0x284ebf18]
  414c47:	sub    ecx,DWORD PTR [ebx+ebx*8]
  414c4a:	adc    al,0xfe
  414c4c:	mov    al,0xaa
  414c4e:	sbb    bh,ah
  414c50:	test   eax,0x18b12d7c
  414c55:	mov    bl,0x95
  414c57:	int    0x4d
  414c59:	mov    ds:0x18b2caf2,eax
  414c5e:	mov    al,ds:0x91e91716
  414c63:	scas   al,BYTE PTR es:[edi]
  414c64:	lea    esp,[edi-0x1]
  414c67:	scas   al,BYTE PTR es:[edi]
  414c68:	int3   
  414c69:	inc    ebx
  414c6a:	sub    DWORD PTR [ecx+0xe],edi
  414c6d:	cmp    BYTE PTR [esp+edi*8+0x2b],cl
  414c71:	test   eax,0x70975db9
  414c76:	sub    BYTE PTR [edi+0x6d],0x60
  414c7a:	mov    eax,0x31210075
  414c7f:	xchg   DWORD PTR [esi-0x5b248587],ebp
  414c85:	pop    ds
  414c86:	in     eax,0x9
  414c88:	std    
  414c89:	pop    edx
  414c8a:	aas    
  414c8b:	imul   ebx,DWORD PTR [ebp-0x3dc7d877],0x79394559
  414c95:	in     al,0x54
  414c97:	fisub  WORD PTR [ebx]
  414c99:	jle    0x414cbe
  414c9b:	(bad)  
  414c9d:	outs   dx,BYTE PTR ds:[esi]
  414c9e:	ret    0x724c
  414ca1:	xor    DWORD PTR [ebx+0x31893b6],esp
  414ca7:	ja     0x414c56
  414ca9:	retf   
  414caa:	mov    ebp,edi
  414cac:	scas   al,BYTE PTR es:[edi]
  414cad:	in     al,0x8c
  414caf:	ror    DWORD PTR [edx],1
  414cb1:	add    al,0xe2
  414cb3:	(bad)  
  414cb4:	ds inc eax
  414cb6:	loope  0x414cb3
  414cb8:	cdq    
  414cb9:	cli    
  414cba:	dec    ebx
  414cbb:	lods   al,BYTE PTR ds:[esi]
  414cbc:	xchg   edi,eax
  414cbd:	pop    esp
  414cbe:	add    ebp,esp
  414cc0:	ins    DWORD PTR es:[edi],dx
  414cc1:	mov    ?,edi
  414cc3:	rcl    BYTE PTR [ebp-0x1fb25c2c],1
  414cc9:	xor    al,0x6
  414ccb:	cmp    ebx,esi
  414ccd:	mov    ds:0xed42e897,eax
  414cd2:	stos   BYTE PTR es:[edi],al
  414cd3:	leave  
  414cd4:	mov    edi,0x1d589006
  414cd9:	aas    
  414cda:	or     eax,0x3922054a
  414cdf:	pop    ds
  414ce0:	cmp    al,0xa6
  414ce2:	cs jg  0x414cac
  414ce5:	popa   
  414ce6:	sar    BYTE PTR [esi],cl
  414ce8:	int3   
  414ce9:	into   
  414cea:	retf   
  414ceb:	fisubr DWORD PTR [eax]
  414ced:	loop   0x414c86
  414cef:	js     0x414cc9
  414cf1:	inc    esi
  414cf2:	fstp   QWORD PTR [edi]
  414cf4:	(bad)  
  414cf6:	(bad)  
  414cf8:	(bad)  
  414cf9:	int3   
  414cfa:	fwait
  414cfb:	inc    ecx
  414cfc:	or     ebx,DWORD PTR fs:[edx]
  414cff:	cmp    cl,BYTE PTR [edi-0x1c]
  414d02:	aad    0x21
  414d04:	add    eax,0x520727ca
  414d09:	bound  ecx,QWORD PTR [bx+0x7c]
  414d0d:	adc    DWORD PTR [esi+edx*8],esp
  414d10:	and    BYTE PTR [edx+0x60],bl
  414d13:	inc    edi
  414d14:	pop    ds
  414d15:	out    dx,al
  414d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d17:	mov    edx,0x4ca808f5
  414d1c:	mov    bh,0x3e
  414d1e:	cli    
  414d1f:	ret    
  414d20:	and    BYTE PTR [edx-0x44],cl
  414d23:	adc    BYTE PTR [edx+0x6a],ch
  414d26:	addr16 fucomi st,st(0)
  414d29:	fadd   st(2),st
  414d2b:	lock xchg BYTE PTR es:[ebp-0x6a689f39],bh
  414d33:	(bad)  
  414d34:	mov    esi,0xfd1ca1dd
  414d39:	scas   eax,DWORD PTR es:[edi]
  414d3a:	and    al,0xbf
  414d3c:	cmp    al,0x9f
  414d3e:	sbb    dl,BYTE PTR [esi+0x317329ec]
  414d44:	jmp    0x298c7665
  414d49:	rcl    DWORD PTR [esi],cl
  414d4b:	jb     0x414d5f
  414d4d:	out    dx,al
  414d4e:	sub    ah,bl
  414d50:	arpl   WORD PTR [eax],cx
  414d52:	dec    ebp
  414d53:	jmp    0x3542:0x11ce3193
  414d5a:	stos   DWORD PTR es:[edi],eax
  414d5b:	jbe    0x414d6c
  414d5d:	lods   al,BYTE PTR ds:[esi]
  414d5e:	jecxz  0x414d7d
  414d60:	loop   0x414dba
  414d62:	jmp    0x414db7
  414d64:	call   0xe5f5f73b
  414d69:	mov    ebx,0x8fc27991
  414d6e:	imul   esi,esi,0xf0d3fe77
  414d74:	icebp  
  414d75:	xor    BYTE PTR [ebx-0x10e12d60],dh
  414d7b:	shl    DWORD PTR ds:0x9d541440,cl
  414d81:	dec    esp
  414d82:	icebp  
  414d83:	jne    0x414d07
  414d85:	inc    edx
  414d86:	stos   BYTE PTR es:[edi],al
  414d87:	arpl   si,di
  414d89:	pop    esi
  414d8a:	push   esi
  414d8b:	cmp    eax,0xaaf6c981
  414d90:	es jbe 0x414d49
  414d93:	and    DWORD PTR [ebx+0xb9072ed],ebx
  414d99:	pushf  
  414d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d9b:	push   ss
  414d9c:	iret   
  414d9d:	je     0x414d9e
  414d9f:	sub    cl,BYTE PTR [esi]
  414da1:	jmp    0x414d95
  414da3:	sub    DWORD PTR [ebx-0x67],ecx
  414da6:	xchg   edx,eax
  414da7:	cmp    DWORD PTR [edi],0x58
  414daa:	test   eax,0xb69e3b28
  414daf:	inc    ecx
  414db0:	inc    ebx
  414db1:	or     BYTE PTR [edx+0x4099ea9e],dh
  414db7:	push   0xffffffd7
  414db9:	inc    edi
  414dba:	pop    eax
  414dbb:	and    bl,BYTE PTR [ebx+0x11271455]
  414dc1:	adc    eax,0x7b9adc8a
  414dc6:	adc    DWORD PTR [edi],esp
  414dc8:	clc    
  414dc9:	inc    ecx
  414dca:	ins    DWORD PTR es:[edi],dx
  414dcb:	jae    0x414dcb
  414dcd:	icebp  
  414dce:	push   ebx
  414dcf:	cld    
  414dd0:	xor    eax,0x4d660827
  414dd5:	test   DWORD PTR ds:0x172e8c80,ecx
  414ddb:	push   cs
  414ddc:	out    dx,eax
  414ddd:	ret    0x7b3e
  414de0:	ret    0x3503
  414de3:	rcr    BYTE PTR [ecx+0x1417e0fc],1
  414de9:	iret   
  414dea:	jl     0x414d91
  414dec:	add    DWORD PTR es:[esi-0x58],ebp
  414df0:	mov    edi,0x9dfffe2
  414df5:	inc    eax
  414df6:	rol    DWORD PTR ds:0x9e823b45,cl
  414dfc:	pop    edi
  414dfd:	mov    ebp,0x53e0b2d4
  414e02:	mov    al,0xfe
  414e04:	jns    0x414dbe
  414e06:	inc    BYTE PTR [ebx+0x46419bc2]
  414e0c:	ins    DWORD PTR es:[edi],dx
  414e0d:	lods   al,BYTE PTR ds:[esi]
  414e0e:	in     eax,dx
  414e0f:	jmp    0x414e30
  414e11:	repnz pusha 
  414e13:	and    BYTE PTR [ebx],dl
  414e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e17:	out    0xb6,eax
  414e19:	lds    ebx,FWORD PTR [ebx-0x524b2440]
  414e1f:	cmc    
  414e20:	ret    0x9b09
  414e23:	and    ebx,DWORD PTR [edi-0x74]
  414e26:	sbb    dh,BYTE PTR [ebp-0x30]
  414e29:	add    BYTE PTR [edx-0x44],0x98
  414e2d:	bound  esi,QWORD PTR [ebx-0x28]
  414e30:	pop    ss
  414e31:	les    eax,FWORD PTR [esi-0x43e1bf02]
  414e37:	mov    bh,0x86
  414e39:	push   ebp
  414e3a:	fisttp WORD PTR [edx+ebp*1+0x77]
  414e3e:	aaa    
  414e3f:	mov    ds:0x25290e7f,eax
  414e44:	dec    ebp
  414e45:	mov    ebx,DWORD PTR [eax+0x323e728e]
  414e4b:	add    eax,0xaffe2fcc
  414e50:	fcom   st(2)
  414e52:	and    BYTE PTR [edx+ebp*2+0xdc9de32],ch
  414e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5a:	cdq    
  414e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5c:	(bad)  
  414e5d:	push   ds
  414e5e:	addr16 xor eax,0x85ac9546
  414e64:	adc    dl,dl
  414e66:	sbb    ebx,edi
  414e68:	leave  
  414e69:	xchg   ecx,eax
  414e6a:	sbb    DWORD PTR [eax-0x5b56dd4f],0xffffffa0
  414e71:	test   al,0xd
  414e73:	cmp    BYTE PTR [edx-0x2e],cl
  414e76:	xchg   ebx,eax
  414e77:	daa    
  414e78:	sbb    dh,BYTE PTR [edi-0xa]
  414e7b:	push   esp
  414e7c:	pop    ss
  414e7d:	out    0xea,eax
  414e7f:	dec    edx
  414e80:	clc    
  414e81:	jbe    0x414ea3
  414e83:	scas   eax,DWORD PTR es:[edi]
  414e84:	pop    ss
  414e85:	inc    esp
  414e86:	jo     0x414e6b
  414e88:	lea    edi,[eax]
  414e8a:	call   FWORD PTR [ecx+0x5a17ffec]
  414e90:	push   0x29b30fcf
  414e95:	int    0x79
  414e97:	jmp    0xf080ea6d
  414e9c:	daa    
  414e9d:	inc    edx
  414e9e:	pop    ds
  414e9f:	adc    ebp,DWORD PTR [eax]
  414ea1:	xchg   ebx,eax
  414ea2:	rol    ecx,cl
  414ea4:	repz fcomp QWORD PTR [edx+0x6]
  414ea8:	sub    al,0xd1
  414eaa:	ja     0x414e6e
  414eac:	fwait
  414ead:	out    dx,eax
  414eae:	xchg   BYTE PTR [eax-0x42168479],ch
  414eb4:	and    DWORD PTR ds:0xf90b3523,ebx
  414eba:	cmp    ecx,DWORD PTR [esi+0xc0e3f23]
  414ec0:	out    dx,eax
  414ec1:	in     eax,0x13
  414ec3:	test   eax,0x5db6ddba
  414ec8:	cmp    BYTE PTR [eax+0x31],al
  414ecb:	cdq    
  414ecc:	leave  
  414ecd:	ja     0x414ef9
  414ecf:	and    esi,edx
  414ed1:	retf   0x4497
  414ed4:	out    dx,eax
  414ed5:	out    0x3a,eax
  414ed7:	retf   
  414ed8:	xchg   ebx,eax
  414ed9:	add    DWORD PTR [edi-0x13],ebp
  414edc:	loope  0x414ece
  414ede:	add    ebx,ebx
  414ee0:	jo     0x414ebe
  414ee2:	fisubr WORD PTR [edx-0x67]
  414ee5:	xchg   esp,eax
  414ee6:	jnp    0x414f21
  414ee8:	hlt    
  414ee9:	popf   
  414eea:	bound  eax,QWORD PTR ds:0xdec85f8e
  414ef0:	loopne 0x414f6e
  414ef2:	fidivr DWORD PTR [eax-0x3]
  414ef5:	jle    0x414f3c
  414ef7:	out    0xf1,eax
  414ef9:	jmp    0x414ee2
  414efb:	cli    
  414efc:	nop
  414efd:	jle    0x414ec9
  414eff:	js     0x414e96
  414f01:	push   es
  414f02:	mov    al,ds:0x736a7f62
  414f07:	int3   
  414f08:	and    al,0xfe
  414f0a:	pop    esi
  414f0b:	mov    esp,0x31893a90
  414f10:	test   DWORD PTR [ecx+0x5def2356],esp
  414f16:	std    
  414f17:	std    
  414f18:	jb     0x414ef3
  414f1a:	push   ebp
  414f1b:	mul    DWORD PTR [edi+0x7b840876]
  414f21:	jge    0x414f21
  414f23:	pop    edx
  414f24:	xor    DWORD PTR [edi+0x12563b26],0x29d492ea
  414f2e:	shr    al,0xdc
  414f31:	inc    ebx
  414f32:	fstp   st(1)
  414f34:	jae    0x414f35
  414f36:	dec    bl
  414f38:	jg     0x414ef8
  414f3a:	xchg   ecx,eax
  414f3b:	mov    eax,0x1f0563aa
  414f40:	cs mov ecx,0x2e7189c4
  414f46:	test   al,0xa0
  414f48:	je     0x414ece
  414f4a:	popf   
  414f4b:	jecxz  0x414f19
  414f4d:	or     DWORD PTR [edx+ecx*1-0x54],esp
  414f51:	push   ebx
  414f52:	xchg   edx,eax
  414f53:	das    
  414f54:	cmp    al,0x19
  414f56:	lock jp 0x414fd3
  414f59:	gs retf 0xf73a
  414f5d:	fcmovne st,st(6)
  414f5f:	cmc    
  414f60:	or     al,cl
  414f62:	sub    DWORD PTR [ebp+eiz*1-0x25],edx
  414f66:	jne    0x414f61
  414f68:	sbb    eax,0xff8c154b
  414f6d:	jmp    0x414f74
  414f6f:	mov    ch,0x60
  414f71:	loopne 0x414f29
  414f73:	mov    DWORD PTR [edx+0x8],esp
  414f76:	lahf   
  414f77:	inc    DWORD PTR [ebx]
  414f79:	pop    es
  414f7a:	pop    esp
  414f7b:	cld    
  414f7c:	mov    BYTE PTR [eax+ebx*1-0x442dd603],bh
  414f83:	lds    ecx,FWORD PTR [ebx-0x7aea01b7]
  414f89:	lods   eax,DWORD PTR ds:[esi]
  414f8a:	(bad)  
  414f8b:	loopne 0x414f14
  414f8d:	push   es
  414f8e:	cmp    eax,0x97abe667
  414f93:	scas   eax,DWORD PTR es:[edi]
  414f94:	jne    0x414f60
  414f96:	sub    esi,DWORD PTR [eax-0x68]
  414f99:	jo     0x414f32
  414f9b:	shl    DWORD PTR [edi-0x633c453f],0x96
  414fa2:	xor    al,0x18
  414fa4:	push   ebx
  414fa5:	xlat   BYTE PTR ds:[ebx]
  414fa6:	mov    ebp,0x3cad72dc
  414fab:	ficom  DWORD PTR [edi-0x50b02401]
  414fb1:	fistp  QWORD PTR [esi-0x8]
  414fb4:	xor    DWORD PTR [ebx+0x546a8a25],edx
  414fba:	dec    eax
  414fbb:	lock pop ebp
  414fbd:	clc    
  414fbe:	mov    ebp,0x6712673e
  414fc3:	or     bh,BYTE PTR [ebx]
  414fc5:	adc    BYTE PTR [eax+0x6bb5bd6e],dl
  414fcb:	scas   eax,DWORD PTR es:[edi]
  414fcc:	repnz test edx,eax
  414fcf:	adc    al,bh
  414fd1:	adc    DWORD PTR [esi],ecx
  414fd3:	dec    esp
  414fd4:	imul   ebp,DWORD PTR [esp+ebx*2+0x2e99146],0x23dcbd18
  414fdf:	mov    ebp,edx
  414fe1:	lea    esi,[edx-0x13cc284f]
  414fe7:	ja     0x415068
  414fe9:	retf   0xdd8c
  414fec:	adc    al,0xd6
  414fee:	scas   al,BYTE PTR es:[edi]
  414fef:	dec    ebx
  414ff0:	inc    ecx
  414ff1:	mov    bl,0x38
  414ff3:	hlt    
  414ff4:	mov    edi,0x9b592c74
  414ff9:	int3   
  414ffa:	cmp    edx,DWORD PTR [edx]
  414ffc:	jecxz  0x415072
  414ffe:	ja     0x415016
  415000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415001:	cmp    al,cl
  415003:	push   edi
  415004:	inc    edi
  415005:	sub    eax,0x5251b11e
  41500a:	mov    bh,0xe
  41500c:	in     al,dx
  41500d:	int3   
  41500e:	dec    eax
  41500f:	dec    eax
  415010:	and    al,0x32
  415012:	pop    esp
  415013:	xchg   dh,bh
  415015:	cmp    ecx,DWORD PTR fs:[eax-0x80]
  415019:	xchg   ecx,eax
  41501a:	push   edi
  41501b:	aas    
  41501c:	dec    edi
  41501d:	inc    ebp
  41501e:	fild   DWORD PTR [esp+eiz*8+0x5d]
  415022:	cmp    DWORD PTR [edx+0x7f],ecx
  415025:	cli    
  415026:	add    DWORD PTR [esp+edx*8],edx
  415029:	or     eax,0xa523c53d
  41502e:	push   ds
  41502f:	add    eax,0x6a64a159
  415034:	cs pusha 
  415036:	fwait
  415037:	mov    ebp,es
  415039:	mov    esi,0x58768fb
  41503e:	(bad)  
  41503f:	dec    eax
  415040:	mov    al,ds:0x42a0e3a7
  415045:	pop    esp
  415046:	pop    edx
  415047:	pop    ebp
  415048:	nop
  415049:	enter  0x893f,0xb2
  41504d:	loop   0x415091
  41504f:	lea    ecx,[eax-0x5f]
  415052:	das    
  415053:	adc    esi,DWORD PTR [ecx+edi*4-0x6b4c22de]
  41505a:	pmuludq mm7,mm1
  41505d:	xchg   ecx,eax
  41505e:	int3   
  41505f:	ja     0x4150ba
  415061:	ror    esp,cl
  415063:	mov    ebp,0x8a0116cf
  415068:	test   BYTE PTR [ebx-0x52db983],ah
  41506e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506f:	enter  0x806c,0x28
  415073:	ret    
  415074:	cli    
  415075:	inc    edi
  415076:	out    dx,eax
  415077:	cdq    
  415078:	add    ebp,DWORD PTR [edx+0x901cb15]
  41507e:	arpl   si,di
  415080:	push   eax
  415081:	xchg   ebp,eax
  415082:	mov    edx,0x10c3bd0a
  415087:	cdq    
  415088:	mov    eax,0x8f2b7bcf
  41508d:	(bad)  
  41508e:	lahf   
  41508f:	icebp  
  415090:	fisubr DWORD PTR ds:0x4103a962
  415096:	out    0xd5,al
  415098:	fld    QWORD PTR [ebx]
  41509a:	loope  0x4150d5
  41509c:	rcr    dl,1
  41509e:	cmp    al,0x8e
  4150a0:	mov    edi,0xff6714b6
  4150a5:	mov    esp,0x376c57e8
  4150aa:	popf   
  4150ab:	adc    al,BYTE PTR [ecx+ebp*1-0x35]
  4150af:	sbb    DWORD PTR [ebx],ebp
  4150b1:	inc    ecx
  4150b2:	dec    esp
  4150b3:	xchg   esp,eax
  4150b4:	sub    al,0x79
  4150b6:	call   0xc49d:0x2e69c184
  4150bd:	xchg   ebp,eax
  4150be:	repz dec esp
  4150c0:	push   ecx
  4150c1:	add    DWORD PTR [edx-0x7c43ce4a],esp
  4150c7:	add    ebx,DWORD PTR [ecx-0x63]
  4150ca:	dec    ebx
  4150cb:	loope  0x415092
  4150cd:	pop    ebx
  4150ce:	pop    ebx
  4150cf:	(bad)  
  4150d1:	outs   dx,DWORD PTR ds:[esi]
  4150d2:	or     edi,DWORD PTR [edi]
  4150d4:	cmc    
  4150d5:	or     al,0x54
  4150d7:	fiadd  DWORD PTR [esi-0x47]
  4150da:	fbstp  TBYTE PTR [ebp-0x3d]
  4150dd:	lods   al,BYTE PTR ds:[esi]
  4150de:	add    eax,0xc3405413
  4150e3:	popf   
  4150e4:	mov    ebx,0x2a1a9f4b
  4150e9:	jmpw   0x695d
  4150ed:	adc    cl,BYTE PTR [ebx+esi*1-0x66]
  4150f1:	dec    edi
  4150f2:	int3   
  4150f3:	mov    edx,0xa4da6fc9
  4150f8:	or     DWORD PTR [edx+0x1d06c787],esi
  4150fe:	mov    eax,0x5a1056af
  415103:	leave  
  415104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415105:	in     eax,dx
  415106:	push   eax
  415107:	mov    esi,0x8521ad7b
  41510c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510d:	aaa    
  41510e:	aas    
  41510f:	add    eax,0x7f9f1d0a
  415114:	pop    ecx
  415115:	pop    edi
  415116:	fisttp DWORD PTR [eax-0x5a305324]
  41511c:	pop    edi
  41511d:	inc    ebp
  41511e:	imul   ebx,DWORD PTR [ebp-0x6f6fafc9],0x43
  415125:	add    DWORD PTR [eax+eiz*8],edx
  415128:	stos   BYTE PTR es:[edi],al
  415129:	mov    BYTE PTR [ebp+0x758c2763],dh
  41512f:	cmc    
  415130:	sahf   
  415131:	mov    WORD PTR [ecx],ds
  415133:	xor    eax,0x30b29c17
  415138:	push   edi
  415139:	xor    al,0x96
  41513b:	xchg   ebp,eax
  41513c:	push   ds
  41513d:	mov    dl,0xc
  41513f:	loop   0x4150cf
  415141:	mov    WORD PTR [ecx],ss
  415143:	sbb    ebx,esp
  415145:	pop    esi
  415146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415147:	cmp    bl,BYTE PTR [edi-0x2c]
  41514a:	mov    eax,ds:0x4034db4c
  41514f:	xchg   cl,ch
  415151:	sub    ebx,ecx
  415153:	retf   0xf3b4
  415156:	xchg   esp,eax
  415157:	pop    eax
  415158:	ds rcr DWORD PTR ss:[edx+0x4be0d314],cl
  415160:	mov    dh,0x21
  415162:	clc    
  415163:	retf   0x5c27
  415166:	int    0xbe
  415168:	call   0xdf1:0x43eb810f
  41516f:	lods   eax,DWORD PTR ds:[esi]
  415170:	inc    esi
  415171:	dec    eax
  415172:	and    BYTE PTR [ebx],dl
  415174:	loopne 0x4151a4
  415176:	test   eax,0x9540879c
  41517b:	push   ebp
  41517c:	(bad)  
  41517e:	jnp    0x4151fb
  415180:	mov    al,0x73
  415182:	cs push ecx
  415184:	add    BYTE PTR [edx-0xe],bh
  415187:	sub    al,0xd4
  415189:	ror    BYTE PTR [ecx+0x12],1
  41518c:	retf   0xca63
  41518f:	jbe    0x415137
  415191:	cmp    ah,BYTE PTR [edx+0x50]
  415194:	mov    ebx,0x77e4f184
  415199:	lods   al,BYTE PTR ds:[esi]
  41519a:	dec    eax
  41519b:	mov    bh,0xe2
  41519d:	aas    
  41519e:	jno    0x415146
  4151a0:	mov    bh,0x44
  4151a2:	adc    edx,DWORD PTR [ebx+0x29]
  4151a5:	dec    eax
  4151a6:	arpl   WORD PTR [ebp+0x161b5bd1],bp
  4151ac:	lods   eax,DWORD PTR ds:[esi]
  4151ad:	lds    edx,FWORD PTR [eax]
  4151af:	dec    esi
  4151b0:	mov    bl,0x9d
  4151b2:	inc    ebx
  4151b3:	dec    esp
  4151b4:	addr16 cmp eax,0x161d120f
  4151ba:	fidiv  WORD PTR [ecx+0x389b5017]
  4151c0:	test   al,0x74
  4151c2:	jo     0x4151f2
  4151c4:	xchg   ebp,eax
  4151c5:	out    0xec,eax
  4151c7:	loope  0x4151f1
  4151c9:	fstp   TBYTE PTR [ecx]
  4151cb:	mov    ebp,0xecf38aac
  4151d0:	add    al,0xcd
  4151d2:	adc    dl,BYTE PTR [ebx]
  4151d4:	ins    DWORD PTR es:[edi],dx
  4151d5:	pop    eax
  4151d6:	test   bh,0x23
  4151d9:	sbb    BYTE PTR [ebx-0x4f],0x7e
  4151dd:	sbb    eax,0x4f2160ad
  4151e2:	sub    esi,DWORD PTR [ebp+0xb]
  4151e5:	inc    ecx
  4151e6:	sub    al,0x9b
  4151e8:	enter  0xbc46,0x54
  4151ec:	ss dec ebx
  4151ee:	in     al,0x11
  4151f0:	xchg   BYTE PTR [esi+0x40],ch
  4151f3:	jno    0x415247
  4151f5:	inc    ecx
  4151f6:	push   ds
  4151f7:	rcr    DWORD PTR [edx-0x67],cl
  4151fa:	out    0xab,eax
  4151fc:	out    dx,eax
  4151fd:	inc    ebp
  4151fe:	mov    DWORD PTR [esi+0x25],edx
  415201:	add    edi,ebx
  415203:	push   0x4b
  415205:	cli    
  415206:	cmp    DWORD PTR [ebx+0x40cd0df4],0x788d11a2
  415210:	mov    cl,BYTE PTR [edi]
  415212:	jae    0xd0ebfd7a
  415218:	and    dh,BYTE PTR [edx]
  41521a:	sub    ch,0xd4
  41521d:	xor    eax,0xf188eb1d
  415222:	pop    esp
  415223:	push   ebp
  415224:	inc    esp
  415225:	fsubr  QWORD PTR [eax]
  415227:	push   ebx
  415228:	outs   dx,BYTE PTR ds:[esi]
  415229:	rcl    ebp,0xf9
  41522c:	ds mov eax,0xf11a6ef2
  415232:	aaa    
  415233:	jne    0x4151bc
  415235:	push   ebx
  415236:	(bad)  
  415237:	idiv   DWORD PTR [ebx+0x66]
  41523a:	xchg   ebx,eax
  41523b:	ja     0x4152a0
  41523d:	xlat   BYTE PTR ds:[ebx]
  41523e:	jl     0x415286
  415240:	add    eax,0xc687ae2e
  415245:	fmul   DWORD PTR [esi]
  415247:	jbe    0x4151d6
  415249:	sbb    DWORD PTR [edi],edx
  41524b:	or     BYTE PTR [ebp+0x11],cl
  41524e:	push   ebx
  41524f:	mov    ds:0x2205bea1,eax
  415254:	inc    esi
  415255:	sub    eax,0x6428e2bc
  41525a:	jle    0x4152a5
  41525c:	aam    0x9b
  41525e:	mov    ebp,0xbfc69c87
  415263:	pop    esi
  415264:	scas   eax,DWORD PTR es:[edi]
  415265:	call   0xe9f5:0xad950e55
  41526c:	mov    eax,ds:0x38c0b55f
  415271:	sub    ecx,DWORD PTR [esi+0x73]
  415274:	nop
  415275:	cmp    DWORD PTR [edx-0x561c6cfd],eax
  41527b:	aad    0x8c
  41527d:	jge    0x4152bb
  41527f:	lahf   
  415280:	dec    ebp
  415281:	mov    bh,0x67
  415283:	xor    cl,ch
  415285:	lahf   
  415286:	and    al,0x58
  415288:	and    BYTE PTR [eax+ecx*4-0x21089a06],cl
  41528f:	mov    cl,0xe3
  415291:	test   al,0xf3
  415293:	mov    ch,0xd1
  415295:	add    BYTE PTR [esi],bl
  415297:	mov    BYTE PTR [edi],bh
  415299:	jp     0x4152bb
  41529b:	jmp    0xb2efa69f
  4152a0:	imul   edi,ebp,0x74
  4152a3:	call   0xd10f83e5
  4152a8:	fsubr  st,st(5)
  4152aa:	clc    
  4152ab:	push   ebp
  4152ac:	and    cl,ch
  4152ae:	inc    ebp
  4152af:	push   ds
  4152b0:	daa    
  4152b1:	ins    DWORD PTR es:[edi],dx
  4152b2:	mov    ds:0x5c8cc5f3,al
  4152b7:	sub    dl,al
  4152b9:	dec    ecx
  4152ba:	mov    ds:0x38a80de6,al
  4152bf:	adc    BYTE PTR ds:0x443803ce,ch
  4152c5:	out    dx,al
  4152c6:	les    edi,FWORD PTR ds:0x31d21964
  4152cc:	icebp  
  4152cd:	jle    0x41529c
  4152cf:	adc    eax,0x71774645
  4152d4:	stos   BYTE PTR es:[edi],al
  4152d5:	xchg   edi,eax
  4152d6:	add    DWORD PTR [ebp+0x2f50e72a],esp
  4152dc:	rcl    DWORD PTR gs:[edi+0x6f70ae4],1
  4152e3:	test   DWORD PTR [esi],edi
  4152e5:	push   0x61a3ea8d
  4152ea:	sar    DWORD PTR [ebx-0x10e025b3],1
  4152f0:	cmc    
  4152f1:	xor    edx,DWORD PTR [eax-0x1a0fa9a5]
  4152f7:	jle    0x415375
  4152f9:	fwait
  4152fa:	push   esi
  4152fb:	jle    0x41531b
  4152fd:	xchg   ecx,eax
  4152fe:	stos   DWORD PTR es:[edi],eax
  4152ff:	aaa    
  415300:	inc    edx
  415301:	fimul  DWORD PTR [ebx-0xe]
  415304:	jge    0x415295
  415306:	stc    
  415307:	int    0x70
  415309:	fwait
  41530a:	cs mov ch,0x3d
  41530d:	mov    al,ds:0xed0e4d0b
  415312:	mov    al,0xc9
  415314:	mov    bl,0xc3
  415316:	add    BYTE PTR [edi-0x3be044ed],dl
  41531c:	inc    eax
  41531d:	repz jno 0x4152a9
  415320:	stos   BYTE PTR es:[edi],al
  415321:	xchg   ebp,eax
  415322:	call   0x5d1:0xfaa287a9
  415329:	ret    0xa6d5
  41532c:	ins    DWORD PTR es:[edi],dx
  41532d:	rol    BYTE PTR [ecx-0x5c],1
  415330:	nop
  415331:	das    
  415332:	add    eax,0xcab7ba8b
  415337:	pop    ebp
  415338:	mov    ah,0x6c
  41533a:	jle    0x415358
  41533c:	test   al,0x3b
  41533e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533f:	test   al,0xe3
  415341:	push   es
  415342:	dec    edi
  415343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415344:	ror    BYTE PTR [eax+0x45bf7907],cl
  41534a:	scas   eax,DWORD PTR es:[edi]
  41534b:	ja     0x415369
  41534d:	fcmovb st,st(1)
  41534f:	fcom   st(0)
  415351:	xchg   esi,eax
  415352:	push   ecx
  415353:	outs   dx,BYTE PTR ds:[esi]
  415354:	add    eax,DWORD PTR [esp+esi*8-0x4f0413be]
  41535b:	jno    0x415363
  41535d:	data16 sbb al,BYTE PTR [esi+eiz*2+0x5a]
  415362:	sbb    eax,0xd0ebed82
  415367:	add    bh,cl
  415369:	pop    ss
  41536a:	out    0xd2,eax
  41536c:	je     0x415386
  41536e:	in     al,dx
  41536f:	jns    0x415326
  415371:	mov    ebp,0xf9993183
  415376:	mov    ds:0xbc6941c2,al
  41537b:	pop    es
  41537c:	(bad)  
  41537d:	into   
  41537e:	mov    ebp,0xfd5653b1
  415383:	fistp  WORD PTR [esp+ebx*8]
  415386:	push   eax
  415387:	sbb    DWORD PTR [eax-0x32802578],esi
  41538d:	and    al,0x6f
  41538f:	adc    ah,BYTE PTR [edx]
  415391:	pop    eax
  415392:	pop    ebx
  415393:	icebp  
  415394:	mov    ds:0x39db6409,eax
  415399:	in     al,dx
  41539a:	jmp    0xc79a:0x39387fdf
  4153a1:	cmp    eax,0x49fc0630
  4153a6:	inc    DWORD PTR [ebx-0x4a9e543a]
  4153ac:	wrmsr  
  4153ae:	push   ds
  4153af:	adc    DWORD PTR [esp+ebp*1-0x228995ef],ecx
  4153b6:	ds stos BYTE PTR es:[edi],al
  4153b8:	into   
  4153b9:	test   al,0x7f
  4153bb:	jbe    0x415358
  4153bd:	adc    ebx,eax
  4153bf:	xor    ah,dh
  4153c1:	add    esp,DWORD PTR [ecx]
  4153c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c4:	in     eax,0x61
  4153c6:	xchg   ebp,eax
  4153c7:	cdq    
  4153c8:	call   0x72776144
  4153cd:	or     ah,BYTE PTR [esi+0x3d]
  4153d0:	push   es
  4153d1:	dec    edi
  4153d2:	add    bh,bh
  4153d4:	mov    dl,0x9c
  4153d6:	dec    edx
  4153d7:	ja     0x4153b6
  4153d9:	xor    al,bh
  4153db:	xchg   esp,eax
  4153dc:	call   0xe2e7:0xa37d0762
  4153e3:	dec    esp
  4153e4:	(bad)  
  4153e5:	loopne 0x415386
  4153e7:	or     bl,al
  4153e9:	mov    eax,0x4388369a
  4153ee:	and    eax,0x95082106
  4153f3:	mov    BYTE PTR [edi+edi*8+0x523edbb4],ch
  4153fa:	jne    0x415425
  4153fc:	mov    eax,0x82a9e04c
  415401:	push   esi
  415402:	jmp    0xf14f9ff3
  415407:	(bad)  
  415408:	movnti DWORD PTR [edx-0x69],esp
  41540c:	mov    bh,0x12
  41540e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41540f:	cmp    ch,BYTE PTR [edi-0x14]
  415412:	jne    0x415411
  415414:	push   ds
  415415:	rol    DWORD PTR [edi+0x31],1
  415418:	inc    edx
  415419:	test   eax,0x4cea63a
  41541e:	fisub  DWORD PTR [ebp+0x17]
  415421:	bound  ecx,QWORD PTR [ecx+0x10]
  415424:	lds    esi,FWORD PTR [edi-0x38]
  415427:	(bad)  
  415428:	not    DWORD PTR [esi+esi*8+0x6a0a61db]
  41542f:	push   0x47
  415431:	sbb    eax,ebp
  415433:	das    
  415434:	mov    ebx,0x2d7dbb1c
  415439:	jbe    0x4153de
  41543b:	mov    bl,BYTE PTR [edx]
  41543d:	or     dh,al
  41543f:	(bad)  
  415440:	(bad)  [edi+edx*4+0x79]
  415444:	and    BYTE PTR [ebx-0x31],ah
  415447:	push   esp
  415448:	pop    edi
  415449:	mov    cl,0x10
  41544b:	dec    eax
  41544c:	cmp    BYTE PTR [eax+0x49028e88],0xd1
  415453:	hlt    
  415454:	in     al,0xe2
  415456:	shld   DWORD PTR [ecx+0x3d],ebx,cl
  41545a:	add    BYTE PTR ss:[ebx],cl
  41545d:	adc    eax,0xecdc6e66
  415462:	inc    edx
  415463:	mov    edi,DWORD PTR [edx-0x68]
  415466:	pop    ecx
  415467:	in     eax,dx
  415468:	mov    al,0xfc
  41546a:	jl     0x41540b
  41546c:	cmp    edx,esp
  41546e:	mov    ch,0x64
  415470:	test   BYTE PTR [esi+0x107b7fbc],al
  415476:	sub    BYTE PTR [ecx+0x7f],0xa9
  41547a:	add    dh,cl
  41547c:	aad    0xdd
  41547e:	sar    DWORD PTR [edx-0x6dc1631a],0x1
  415485:	pop    es
  415486:	sub    edi,esi
  415488:	mov    ebx,0x1da8f011
  41548d:	add    eax,0xfa5882ac
  415492:	stos   DWORD PTR es:[edi],eax
  415493:	cmp    al,BYTE PTR [ebx]
  415495:	lods   eax,DWORD PTR ds:[esi]
  415496:	mov    dl,0xdf
  415498:	inc    ebp
  415499:	mov    ebx,DWORD PTR [edi+ebp*2+0x6f83746f]
  4154a0:	xor    BYTE PTR [edi-0x3bd9dc7f],ch
  4154a6:	iret   
  4154a7:	vdivss xmm2,xmm1,DWORD PTR [eax+0x24]
  4154ac:	ffree  st(0)
  4154ae:	mov    DWORD PTR [ecx-0x2e],esp
  4154b1:	cmp    ch,bh
  4154b3:	popf   
  4154b4:	dec    esi
  4154b5:	or     ah,BYTE PTR [esp+ecx*8+0x67]
  4154b9:	push   DWORD PTR [edx+esi*4]
  4154bc:	stc    
  4154bd:	mov    ah,0x72
  4154bf:	inc    esi
  4154c0:	aas    
  4154c1:	idiv   al
  4154c3:	sbb    ch,BYTE PTR [esi]
  4154c5:	(bad)  
  4154c6:	inc    esi
  4154c7:	(bad)
  4154ca:	(bad)  
  4154cb:	dec    esp
  4154cc:	or     ah,BYTE PTR [eax+0x24]
  4154cf:	xchg   ebp,eax
  4154d0:	lock lds eax,FWORD PTR [esi+ebx*4+0x23]
  4154d5:	imul   DWORD PTR [ebx+0x5c]
  4154d8:	push   ebx
  4154d9:	pop    edi
  4154da:	not    al
  4154dc:	shl    cl,cl
  4154de:	mov    eax,0x2d53cd76
  4154e3:	push   ds
  4154e4:	push   es
  4154e5:	jnp    0x415469
  4154e7:	cmp    esi,ebx
  4154e9:	mov    esi,0x1f653708
  4154ee:	fcomp  DWORD PTR [ebx-0x5f]
  4154f1:	adc    bl,bl
  4154f3:	ja     0x41555f
  4154f5:	enter  0x117e,0x15
  4154f9:	rcl    DWORD PTR [ebp-0x79],0x8c
  4154fd:	cmp    eax,0x1379c4e6
  415502:	leave  
  415503:	int    0x2
  415505:	add    BYTE PTR [esi-0x7c],0xb8
  415509:	inc    edi
  41550a:	popa   
  41550b:	(bad)  
  41550c:	sbb    bl,BYTE PTR [edx]
  41550e:	jmp    0x41552e
  415510:	sti    
  415511:	mov    dl,0xa0
  415513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415514:	sub    ebx,eax
  415516:	xchg   edi,eax
  415517:	or     al,0x12
  415519:	mov    eax,ds:0xf571f0da
  41551e:	inc    esi
  41551f:	lock cmp eax,0x398fbd31
  415525:	fisub  WORD PTR fs:[esi]
  415528:	jg     0x41559b
  41552a:	inc    esp
  41552b:	rcr    ecx,0x86
  41552e:	fdivr  QWORD PTR [eax]
  415530:	fcomp  QWORD PTR ds:0x5ccad3f6
  415536:	out    0x7a,al
  415538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415539:	xchg   edi,eax
  41553a:	stos   DWORD PTR es:[edi],eax
  41553b:	push   ebp
  41553c:	add    dl,0x47
  41553f:	mov    DWORD PTR [ebp+0x27],esp
  415542:	and    bl,bl
  415544:	jp     0x415510
  415546:	shl    DWORD PTR [ebx+0xa2ad2f1],cl
  41554c:	xchg   edi,eax
  41554d:	test   ebx,esp
  41554f:	xor    bl,al
  415551:	outs   dx,DWORD PTR ds:[esi]
  415552:	xchg   DWORD PTR [ebp+0x3c327e7d],edx
  415558:	gs and eax,0x90801a1d
  41555e:	fld    DWORD PTR [ebx+0x53]
  415561:	and    esp,DWORD PTR [ebp-0x75]
  415564:	rcr    BYTE PTR fs:[ebx-0x1bcac130],cl
  41556b:	rcl    esi,1
  41556d:	adc    eax,0x40e2d25a
  415572:	or     dh,bl
  415574:	xchg   edi,eax
  415575:	sub    DWORD PTR [edx+0x43cea8cd],esp
  41557b:	rol    DWORD PTR [eax],cl
  41557d:	dec    ebp
  41557e:	inc    esp
  41557f:	mov    BYTE PTR [esi+ebx*1-0x4d],0xf0
  415584:	jecxz  0x4155f9
  415586:	or     al,0x14
  415588:	mov    al,0x99
  41558a:	pop    edx
  41558b:	loopne 0x4155cb
  41558d:	push   edi
  41558e:	jg     0x4155a2
  415590:	sbb    al,0xef
  415592:	adc    DWORD PTR [ecx+0x31],eax
  415595:	fcomip st,st(4)
  415597:	imul   esi,DWORD PTR [ebx],0x4fdcccce
  41559d:	ss pop esi
  41559f:	icebp  
  4155a0:	sub    ecx,DWORD PTR [esi]
  4155a2:	mov    ds:0x4bae5a0b,al
  4155a7:	call   0xa0d4869a
  4155ac:	(bad)  
  4155ad:	pop    ecx
  4155ae:	and    eax,0xd5c3aaab
  4155b3:	in     eax,dx
  4155b4:	mov    esp,0xd3ae509c
  4155b9:	adc    edx,DWORD PTR [ebx+edi*1-0x47]
  4155bd:	cmp    DWORD PTR [ebp+0x226c2415],esp
  4155c3:	les    ecx,FWORD PTR [esi+0x1f]
  4155c6:	cld    
  4155c7:	xor    al,0x43
  4155c9:	imul   ebx,DWORD PTR [edi-0x5f],0xffffffe9
  4155cd:	cdq    
  4155ce:	and    bh,BYTE PTR [edx-0x6462cac6]
  4155d4:	dec    esi
  4155d5:	in     al,0x37
  4155d7:	je     0x41559a
  4155d9:	mov    DWORD PTR ds:0x748e130b,ecx
  4155df:	retf   0xf0f2
  4155e2:	inc    edi
  4155e3:	mov    edi,0x58175c9a
  4155e8:	aam    0x7c
  4155ea:	jns    0x4155a3
  4155ec:	cmp    eax,0xe14b797d
  4155f1:	cmp    DWORD PTR [edi-0x46],edi
  4155f4:	dec    edi
  4155f5:	ja     0x4155a2
  4155f7:	mov    bh,0x2a
  4155f9:	add    eax,0xffae06e
  4155fe:	sbb    DWORD PTR [ecx-0x4800e620],edx
  415604:	call   0xde58d24e
  415609:	das    
  41560a:	stos   BYTE PTR es:[edi],al
  41560b:	lods   eax,DWORD PTR ds:[esi]
  41560c:	addr16 adc eax,0xa4682210
  415612:	push   edx
  415613:	inc    eax
  415614:	(bad)  
  415615:	ins    DWORD PTR es:[edi],dx
  415616:	icebp  
  415617:	inc    eax
  415618:	nop
  415619:	mov    al,ds:0xa2af8c77
  41561e:	in     eax,0x25
  415620:	adc    al,BYTE PTR [ebx+0x40bd45e6]
  415626:	xchg   esi,eax
  415627:	je     0x415618
  415629:	fmul   DWORD PTR [eax+0x4d3338a7]
  41562f:	je     0x4155bc
  415631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415632:	aaa    
  415633:	pop    edx
  415634:	mov    eax,ds:0xcbb7faa8
  415639:	add    eax,0xc3d97ba5
  41563e:	loopne 0x41562d
  415640:	pushf  
  415641:	out    0xc5,eax
  415643:	ds repnz icebp 
  415646:	dec    eax
  415647:	xor    eax,DWORD PTR [ecx+0x2c22fa6]
  41564d:	push   0xee325ab7
  415652:	pusha  
  415653:	fwait
  415654:	aam    0xc1
  415656:	pop    eax
  415657:	adc    DWORD PTR [ebx-0x37],edi
  41565a:	shl    DWORD PTR [ebp-0x79],cl
  41565d:	dec    ecx
  41565e:	inc    esp
  41565f:	mov    esi,DWORD PTR [edi-0x2da924ec]
  415665:	sub    BYTE PTR [ecx-0x68c57a6e],0x9d
  41566c:	aad    0x70
  41566e:	jns    0x415691
  415670:	psubusb mm0,mm2
  415673:	sbb    al,0x53
  415675:	ds lods al,BYTE PTR fs:[esi]
  415678:	test   eax,0x4b2e0516
  41567d:	pop    ss
  41567e:	cwde   
  41567f:	mov    esp,0x8650d850
  415684:	dec    eax
  415685:	dec    eax
  415686:	es jmp 0xa905ce9f
  41568c:	jne    0x41561d
  41568e:	out    dx,al
  41568f:	lock dec esp
  415691:	mov    ah,0xdd
  415693:	stc    
  415694:	xchg   ecx,eax
  415695:	jecxz  0x4156d4
  415697:	sti    
  415698:	imul   edi,ecx,0x59
  41569b:	dec    ecx
  41569c:	xchg   ebp,eax
  41569d:	ret    
  41569e:	(bad)  
  41569f:	pop    esi
  4156a0:	lea    esi,[ebx+0x777c241c]
  4156a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156a7:	stos   BYTE PTR es:[edi],al
  4156a8:	ds pop es
  4156aa:	out    0x9,al
  4156ac:	(bad)
  4156b0:	sar    DWORD PTR [ecx],1
  4156b2:	mov    edi,0x97e4533c
  4156b7:	jne    0x415734
  4156b9:	add    esp,esi
  4156bb:	(bad)  
  4156bc:	xchg   ebp,eax
  4156bd:	fmul   st(7),st
  4156bf:	xchg   ecx,eax
  4156c0:	push   ebx
  4156c1:	xchg   DWORD PTR [edi-0x309b8709],ebp
  4156c7:	(bad)  
  4156c8:	leave  
  4156c9:	adc    BYTE PTR [eax+0x42],ch
  4156cc:	cli    
  4156cd:	pop    edi
  4156ce:	scas   eax,DWORD PTR es:[edi]
  4156cf:	dec    edi
  4156d0:	shl    BYTE PTR [ecx+edx*1],1
  4156d3:	rcr    BYTE PTR [edx],0x94
  4156d6:	in     al,0xec
  4156d8:	pop    ds
  4156d9:	shl    BYTE PTR fs:[ebp+0x4a8d947c],cl
  4156e0:	mov    WORD PTR [ecx+0x3e81ced],fs
  4156e6:	dec    ebx
  4156e7:	pop    ebx
  4156e8:	add    DWORD PTR [edx+0x5c],eax
  4156eb:	test   al,0x23
  4156ed:	data16 scas al,BYTE PTR es:[edi]
  4156ef:	add    edx,0xffffffdd
  4156f2:	push   0x21597c7e
  4156f7:	or     al,0x16
  4156f9:	jg     0x4156cc
  4156fb:	mov    eax,0xe203000a
  415700:	cdq    
  415701:	(bad)  [esi+0x240c2129]
  415707:	push   cs
  415708:	scas   eax,DWORD PTR es:[edi]
  415709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41570a:	adc    DWORD PTR [di+0x79],edx
  41570e:	cwde   
  41570f:	jecxz  0x415695
  415711:	mov    ebx,0x486ee174
  415716:	popw   es
  415718:	lds    ebx,FWORD PTR [eax+0x1dbd982f]
  41571e:	fs leave 
  415720:	(bad)  
  415721:	fbld   TBYTE PTR [esi]
  415723:	pop    ebx
  415724:	xchg   ebp,eax
  415725:	cmp    al,dh
  415727:	mov    ds:0x953cc1f,eax
  41572c:	xchg   edx,eax
  41572d:	mov    ebp,0xdc3b9a39
  415732:	dec    ebx
  415733:	pop    eax
  415734:	add    ecx,DWORD PTR [edx]
  415736:	or     DWORD PTR [edi+0x69],edi
  415739:	xor    BYTE PTR [esi],ch
  41573b:	cmp    al,0x85
  41573d:	mov    al,ds:0xf9da66f7
  415742:	pop    DWORD PTR [edi]
  415744:	mov    edx,0xfd8fa7ef
  415749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574a:	push   0xe1379d7d
  41574f:	ds cmp ch,cl
  415752:	lahf   
  415753:	scas   eax,DWORD PTR es:[edi]
  415754:	icebp  
  415755:	jnp    0x4156e3
  415757:	dec    edi
  415758:	cmp    eax,DWORD PTR [eax]
  41575a:	in     eax,dx
  41575b:	das    
  41575c:	loope  0x415716
  41575e:	cmp    BYTE PTR [ebx+ebp*8],dl
  415761:	lock in eax,dx
  415763:	adc    al,0xa5
  415765:	jno    0x415740
  415767:	adc    edx,DWORD PTR [esi-0x1d]
  41576a:	pop    edx
  41576b:	iret   
  41576c:	rcr    BYTE PTR [esi+0x39],cl
  41576f:	ret    0xe95e
  415772:	or     edx,DWORD PTR [edi-0x34]
  415775:	inc    edi
  415776:	jmp    0x415727
  415778:	loope  0x4157ee
  41577a:	aas    
  41577b:	xchg   BYTE PTR [edi+0x1f5d0230],cl
  415781:	mov    ds:0xa477be45,eax
  415786:	sub    ebx,DWORD PTR [edi+0x33]
  415789:	in     al,0x1d
  41578b:	rcl    BYTE PTR [eax+0x21],cl
  41578e:	sub    ch,BYTE PTR [ebp+0x431c7ced]
  415794:	push   0x26
  415796:	nop
  415797:	mov    ds:0x23e7967c,eax
  41579c:	push   edi
  41579d:	and    eax,0x6861b32e
  4157a2:	push   esp
  4157a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157a4:	sub    al,0xea
  4157a6:	push   cs
  4157a7:	out    0x8e,al
  4157a9:	out    0x58,al
  4157ab:	inc    ebp
  4157ac:	xchg   ebp,esp
  4157ae:	adc    eax,0xf8d7461
  4157b3:	xor    DWORD PTR [edx+0x3e],esp
  4157b6:	repnz push es
  4157b8:	in     eax,dx
  4157b9:	xlat   BYTE PTR ds:[ebx]
  4157ba:	sar    BYTE PTR [edx+edi*8-0xd],1
  4157be:	into   
  4157bf:	in     eax,0x27
  4157c1:	dec    ebx
  4157c2:	pop    eax
  4157c3:	es retf 
  4157c5:	enter  0x71e0,0xd8
  4157c9:	lea    esi,[eax]
  4157cb:	mov    cl,0x64
  4157cd:	mov    esi,0x8efccdb2
  4157d2:	push   cs
  4157d3:	ss fdiv QWORD PTR ds:[edi-0x1c3c738b]
  4157db:	add    dl,BYTE PTR [ecx]
  4157dd:	jnp    0x415764
  4157df:	or     cl,BYTE PTR [ebp-0x12]
  4157e2:	js     0x4157cc
  4157e4:	xor    ebx,ebx
  4157e6:	push   0x71533c47
  4157eb:	mov    eax,DWORD PTR [ecx-0x5f]
  4157ee:	gs ins BYTE PTR es:[edi],dx
  4157f0:	push   0xfffffff1
  4157f2:	ins    DWORD PTR es:[edi],dx
  4157f3:	adc    BYTE PTR [ebp+0x14],ah
  4157f6:	fisttp QWORD PTR [eax+0x1666a161]
  4157fc:	mov    bh,0xc5
  4157fe:	clc    
  4157ff:	in     al,0xb6
  415801:	shl    BYTE PTR ds:0x4c3a9fd9,cl
  415807:	jb     0x415887
  415809:	xchg   edx,eax
  41580a:	xchg   ecx,eax
  41580b:	mov    eax,0x977f3fa9
  415810:	outs   dx,BYTE PTR ds:[esi]
  415811:	addr16 enter 0x7650,0x1a
  415816:	pop    esi
  415817:	and    edi,DWORD PTR ds:0x631aa921
  41581d:	dec    edx
  41581e:	add    al,0xcb
  415820:	xchg   ebx,eax
  415821:	mov    cl,0x5a
  415823:	pop    eax
  415824:	dec    eax
  415825:	xchg   ecx,eax
  415826:	ficomp DWORD PTR [eax]
  415828:	mov    bh,BYTE PTR [ebx-0x34]
  41582b:	ret    
  41582c:	dec    esi
  41582d:	es scas eax,DWORD PTR es:[edi]
  41582f:	jle    0x4157eb
  415831:	push   0x17
  415833:	inc    ecx
  415834:	shl    esp,1
  415836:	(bad)  
  415837:	dec    ecx
  415838:	fs sub edi,ebp
  41583b:	mov    edx,0x9415f284
  415840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415841:	mov    esp,0x1ccf7177
  415846:	cmp    al,0x6d
  415848:	sahf   
  415849:	sbb    al,0xad
  41584b:	xor    eax,0x381598b8
  415850:	push   cs
  415851:	pop    ds
  415852:	mov    dh,cl
  415854:	dec    ebx
  415855:	cdq    
  415856:	retf   
  415857:	ins    BYTE PTR es:[edi],dx
  415858:	into   
  415859:	mov    ebx,0x6eab4d90
  41585e:	mov    edi,0xeefe0299
  415863:	(bad)  
  415864:	stc    
  415865:	sahf   
  415866:	pop    ebx
  415867:	push   ss
  415868:	xor    al,0x25
  41586a:	mov    BYTE PTR [edi+0x7a],ch
  41586d:	xor    al,0xdc
  41586f:	psrld  mm0,mm7
  415872:	sub    ebx,DWORD PTR [ebx]
  415874:	in     al,0xd2
  415876:	out    0xf8,eax
  415878:	xor    al,0x37
  41587a:	dec    ebx
  41587b:	mov    esp,0x447236a4
  415880:	scas   eax,DWORD PTR es:[edi]
  415881:	and    dl,BYTE PTR [ebx+ebp*8]
  415884:	push   edx
  415885:	pop    ss
  415886:	(bad)  
  415887:	mov    eax,ds:0xfcf66d75
  41588c:	retf   
  41588d:	or     ebp,edi
  41588f:	and    cl,ah
  415891:	sbb    al,BYTE PTR [edx+0x6c]
  415894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415895:	xchg   DWORD PTR [ecx-0x62ed071e],edx
  41589b:	int    0x6b
  41589d:	(bad)  
  41589e:	mov    ds:0xb2e6a7b3,al
  4158a3:	push   0x6e
  4158a5:	ins    BYTE PTR es:[edi],dx
  4158a6:	lods   eax,DWORD PTR ds:[esi]
  4158a7:	fcomp  QWORD PTR [edi-0x6d94852d]
  4158ad:	dec    edi
  4158ae:	bound  ebp,QWORD PTR [ebx+edi*2+0x116e605c]
  4158b5:	ret    
  4158b6:	das    
  4158b7:	enter  0x61b4,0x4a
  4158bb:	arpl   WORD PTR [ebp+0x36],di
  4158be:	pop    esi
  4158bf:	icebp  
  4158c0:	sbb    bh,cl
  4158c2:	cmp    DWORD PTR [edx-0x70731ae3],ebx
  4158c8:	cmp    eax,0x5d2e8806
  4158cd:	inc    ecx
  4158ce:	pop    edi
  4158cf:	repz test BYTE PTR [edi],ch
  4158d2:	fadd   QWORD PTR [esi+0x7e]
  4158d5:	call   0xcfbb8974
  4158da:	push   esp
  4158db:	outs   dx,DWORD PTR ds:[esi]
  4158dc:	fsub   QWORD PTR [ecx+0x4fbcd6c1]
  4158e2:	push   eax
  4158e3:	adc    BYTE PTR [ecx+0x5a],bh
  4158e6:	outs   dx,DWORD PTR ds:[esi]
  4158e7:	inc    esi
  4158e8:	jo     0x4158f3
  4158ea:	aam    0x80
  4158ec:	push   DWORD PTR ds:0xf2b7edf1
  4158f2:	inc    esi
  4158f3:	xor    eax,0x3993c9f9
  4158f8:	data16 or bl,al
  4158fb:	dec    ebp
  4158fc:	jl     0x4158e2
  4158fe:	push   ss
  4158ff:	(bad)  
  415900:	mov    bl,al
  415902:	(bad)  
  415903:	test   eax,0x25af59e9
  415908:	jcxz   0x415896
  41590b:	hlt    
  41590c:	sub    DWORD PTR ds:0x583ec5b8,ebx
  415912:	fcom   DWORD PTR ds:0xee5c8d68
  415918:	mov    eax,ds:0x86624da9
  41591d:	xor    al,0x5
  41591f:	jge    0x4158c4
  415921:	(bad)  
  415923:	pushf  
  415924:	and    DWORD PTR [ebp+0x7a],0x3e
  415928:	add    eax,0xe3090f74
  41592d:	mov    esp,0x3176a6cd
  415932:	imul   esp,DWORD PTR ds:0x8bf10042,0xffffffdb
  415939:	outs   dx,DWORD PTR ds:[esi]
  41593a:	ss add al,0xdc
  41593d:	fcmove st,st(7)
  41593f:	push   esp
  415940:	rcr    DWORD PTR [ecx+0x60],cl
  415943:	xchg   esp,eax
  415944:	cmp    eax,0x165688d3
  415949:	mov    DWORD PTR [ebx+0x45f6336],edi
  41594f:	jg     0x415938
  415951:	fild   QWORD PTR [esi]
  415953:	jge    0x4158de
  415955:	mov    bl,0xd3
  415957:	les    ecx,FWORD PTR ds:0xbaaac9f2
  41595d:	xchg   ecx,eax
  41595e:	and    al,0x63
  415960:	xor    ebp,DWORD PTR [edx+0x434dfd2b]
  415966:	inc    edx
  415967:	imul   esi,DWORD PTR [edx-0x1adcf22],0xabde2577
  415971:	dec    edx
  415972:	push   edi
  415973:	popa   
  415974:	popa   
  415975:	rcl    ah,cl
  415977:	xchg   ebx,eax
  415978:	into   
  415979:	mov    edi,0xe4ebb62c
  41597e:	pop    ebp
  41597f:	dec    ecx
  415980:	out    0xf9,eax
  415982:	sbb    edi,DWORD PTR [ebp-0x6b4e8bd9]
  415988:	retf   
  415989:	in     al,0xf
  41598b:	jge    0x41598d
  41598d:	ret    0x95bc
  415990:	ss call 0x5ce3:0x2f8998c6
  415998:	sahf   
  415999:	inc    eax
  41599a:	es es fcmovnb st,st(6)
  41599e:	xchg   esp,eax
  41599f:	cdq    
  4159a0:	and    dh,BYTE PTR [ecx+0x4b198d57]
  4159a6:	mov    edx,0x676ab30c
  4159ab:	and    bh,BYTE PTR [eax+0x4c]
  4159ae:	jo     0x41596c
  4159b0:	jl     0x4159ae
  4159b2:	pop    esp
  4159b3:	jp     0x41599a
  4159b5:	pop    ss
  4159b6:	es (bad) 
  4159b8:	lods   al,BYTE PTR ds:[esi]
  4159b9:	dec    ecx
  4159ba:	inc    edx
  4159bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159bc:	std    
  4159bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159be:	xchg   ebp,eax
  4159bf:	adc    al,0xe4
  4159c1:	sub    DWORD PTR [esi*8+0x755897d7],edi
  4159c8:	add    al,0xd3
  4159ca:	ins    DWORD PTR es:[edi],dx
  4159cb:	dec    esp
  4159cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159cd:	ins    DWORD PTR es:[edi],dx
  4159ce:	mov    dl,0x45
  4159d0:	iret   
  4159d1:	sub    BYTE PTR [edi-0x18],ah
  4159d4:	cmp    al,0x2f
  4159d6:	inc    ebp
  4159d7:	fsub   DWORD PTR [ecx-0x6f52ef17]
  4159dd:	pop    es
  4159de:	sub    BYTE PTR [ebp-0x5a],cl
  4159e1:	out    dx,al
  4159e2:	lds    esp,FWORD PTR [esi-0x5464e0d9]
  4159e8:	push   edx
  4159e9:	bound  edi,QWORD PTR [ebp+0x36]
  4159ec:	xchg   BYTE PTR [esi-0x5af3182b],cl
  4159f2:	shl    DWORD PTR [edi],1
  4159f4:	inc    eax
  4159f5:	loope  0x4159ca
  4159f7:	and    DWORD PTR [edi],ebx
  4159f9:	or     BYTE PTR [ebp-0xc45ee3a],dl
  4159ff:	pop    es
  415a00:	sbb    ah,BYTE PTR [edi]
  415a02:	aad    0xed
  415a04:	gs nop
  415a06:	sub    ch,BYTE PTR [ebx+eax*4+0x7c606fad]
  415a0d:	mov    dh,0x86
  415a0f:	sub    DWORD PTR [ebx],ebx
  415a11:	repz fwait
  415a13:	mov    ebx,?
  415a15:	aad    0x98
  415a17:	fimul  DWORD PTR ds:0xea14f8b5
  415a1d:	out    0x51,al
  415a1f:	neg    BYTE PTR [eax+ebx*8]
  415a22:	dec    edx
  415a23:	push   edi
  415a24:	pop    ecx
  415a25:	daa    
  415a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a27:	into   
  415a28:	or     al,BYTE PTR [ebp-0x1a]
  415a2b:	enter  0xd028,0xea
  415a2f:	jbe    0x415a76
  415a31:	mov    ecx,0xaab9475f
  415a36:	xlat   BYTE PTR ds:[ebx]
  415a37:	gs (bad) 
  415a3b:	adc    DWORD PTR [ecx+0x4230355c],eax
  415a41:	bndldx bnd0,[esi]
  415a44:	test   al,0xe
  415a46:	jne    0x415a62
  415a48:	dec    ecx
  415a49:	jne    0x415a90
  415a4b:	pop    esp
  415a4c:	adc    BYTE PTR [ecx],0x41
  415a4f:	xchg   edx,eax
  415a50:	loopne 0x415a56
  415a52:	inc    ebx
  415a53:	aaa    
  415a54:	push   ds
  415a55:	aaa    
  415a56:	xchg   ecx,eax
  415a57:	ins    DWORD PTR es:[edi],dx
  415a58:	mov    edx,0x575a76e4
  415a5d:	xor    al,0x15
  415a5f:	pusha  
  415a60:	es call 0xe7304a10
  415a66:	test   al,0x6d
  415a68:	test   BYTE PTR [ecx-0x16],cl
  415a6b:	jle    0x415a9f
  415a6d:	rol    BYTE PTR [esi+0x1a],cl
  415a70:	xchg   eax,eax
  415a72:	stos   DWORD PTR es:[edi],eax
  415a73:	je     0x415a14
  415a75:	aaa    
  415a76:	cmp    DWORD PTR [eax],0x11
  415a79:	cdq    
  415a7a:	adc    dl,ah
  415a7c:	lods   eax,DWORD PTR ds:[esi]
  415a7d:	sub    DWORD PTR [ebx+ebx*8-0x67],0xfffffffa
  415a82:	inc    eax
  415a83:	test   eax,0xa3564921
  415a88:	loop   0x415ad7
  415a8a:	bnd ret 
  415a8c:	sub    eax,0x3fb745c4
  415a91:	mov    eax,0x8d7c450e
  415a96:	push   eax
  415a97:	push   eax
  415a98:	cli    
  415a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a9a:	sbb    BYTE PTR [edx+0x15],bl
  415a9d:	and    DWORD PTR [ebx],ecx
  415a9f:	int    0xe8
  415aa1:	sbb    DWORD PTR [ebp-0x63614e49],eax
  415aa7:	pop    ebp
  415aa8:	jne    0x415a61
  415aaa:	xor    DWORD PTR [ecx+0x2d],esp
  415aad:	test   al,0xc3
  415aaf:	add    dl,BYTE PTR [edi]
  415ab1:	mov    ebp,DWORD PTR [edx-0x5a]
  415ab4:	push   ds
  415ab5:	inc    edi
  415ab6:	fs adc eax,0xe8c2dcd8
  415abc:	sbb    DWORD PTR [eax-0xa],0x7
  415ac0:	scas   eax,DWORD PTR es:[edi]
  415ac1:	xchg   esi,eax
  415ac2:	test   al,dh
  415ac4:	or     edx,DWORD PTR [ebx+0x64]
  415ac7:	push   ecx
  415ac8:	xchg   esi,eax
  415ac9:	lock mov ah,0xe9
  415acc:	mov    DWORD PTR [edx-0x26aed255],eax
  415ad2:	bnd call 0xe06657ae
  415ad8:	inc    ebp
  415ad9:	push   0x75
  415adb:	jmp    0x63d7449c
  415ae0:	xchg   esp,eax
  415ae1:	arpl   WORD PTR [esi],di
  415ae3:	shl    esi,cl
  415ae5:	shr    dl,0x1e
  415ae8:	mov    dl,0x5a
  415aea:	fistp  DWORD PTR [ebp-0x40]
  415aed:	(bad)  
  415aee:	jmp    0x415b39
  415af0:	dec    eax
  415af1:	inc    esp
  415af2:	int3   
  415af3:	add    eax,0xd689cf52
  415af8:	sub    DWORD PTR [eax],0xfffffff7
  415afb:	add    esi,eax
  415afd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415aff:	fadd   QWORD PTR [ebx]
  415b01:	aam    0x37
  415b03:	cmp    esp,DWORD PTR ds:0xde67b0f9
  415b09:	int    0x9c
  415b0b:	xor    eax,eax
  415b0d:	dec    ebp
  415b0e:	clc    
  415b0f:	scas   al,BYTE PTR es:[edi]
  415b10:	fbld   TBYTE PTR [edi-0x1b2e7b0f]
  415b16:	(bad)  
  415b17:	and    al,0xcd
  415b19:	cwde   
  415b1a:	in     al,0x49
  415b1c:	cmp    DWORD PTR [edi+0x79],ecx
  415b1f:	call   0xfef63de5
  415b24:	sbb    ecx,ecx
  415b26:	inc    edi
  415b27:	(bad)  
  415b28:	sti    
  415b29:	mov    edi,DWORD PTR [edi]
  415b2b:	push   ebp
  415b2c:	in     al,0x53
  415b2e:	call   0x88018fd3
  415b33:	rol    DWORD PTR [esi+0x45],0xde
  415b37:	cwde   
  415b38:	jge    0x415ad8
  415b3a:	mov    al,ds:0xc9eed03b
  415b3f:	xchg   esi,eax
  415b40:	pop    ecx
  415b41:	ret    
  415b42:	popf   
  415b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b44:	mov    ss,WORD PTR ss:[ebx+0x34a86ea0]
  415b4b:	push   ebx
  415b4c:	and    DWORD PTR [eax],edx
  415b4e:	pop    eax
  415b4f:	loopne 0x415b2e
  415b51:	rcr    eax,1
  415b53:	add    eax,0x7c7ff03e
  415b58:	dec    edi
  415b59:	cmp    edi,ebx
  415b5b:	ins    DWORD PTR es:[edi],dx
  415b5c:	mov    edx,0x74a806c1
  415b61:	mov    cl,0x6
  415b63:	sbb    ebx,DWORD PTR [esp+edx*8-0x5fb13747]
  415b6a:	les    esi,FWORD PTR [edx+ecx*2-0x3a872584]
  415b71:	call   0xcb0a:0x2e44b4b3
  415b78:	mov    dh,0x26
  415b7a:	push   0xffffffbb
  415b7c:	mov    ds:0x39ca1167,eax
  415b81:	mov    WORD PTR [edi-0x5d],ds
  415b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b85:	xchg   edi,eax
  415b86:	int    0x15
  415b88:	xchg   esi,eax
  415b89:	data16 sub cl,BYTE PTR [ebx-0x4a]
  415b8d:	hlt    
  415b8e:	sbb    ah,0x18
  415b91:	pushf  
  415b92:	mov    ecx,0xf2fd5430
  415b97:	dec    esi
  415b98:	xor    eax,0x2f5468d6
  415b9d:	mov    cl,BYTE PTR [edx-0x75]
  415ba0:	mov    bl,0x4a
  415ba2:	cli    
  415ba3:	sar    BYTE PTR [edi],cl
  415ba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba6:	arpl   bp,cx
  415ba8:	and    ebx,edx
  415baa:	mov    ebp,0xaeed9ecf
  415baf:	retf   0xd37c
  415bb2:	pop    edi
  415bb3:	mov    ds:0x712b4c9e,al
  415bb8:	in     al,dx
  415bb9:	cs sbb al,0xda
  415bbc:	push   ebp
  415bbd:	pop    ebx
  415bbe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc0:	mov    ch,0xb6
  415bc2:	pop    es
  415bc3:	push   esi
  415bc4:	aas    
  415bc5:	cmp    BYTE PTR [ecx+0x456770b4],dh
  415bcb:	xor    DWORD PTR [ecx+0xb],esi
  415bce:	lock adc al,0xb
  415bd1:	pop    esp
  415bd2:	xchg   esp,eax
  415bd3:	push   eax
  415bd4:	shl    DWORD PTR ds:0x6af6cfc9,0x73
  415bdb:	bound  esp,QWORD PTR [edx]
  415bdd:	adc    BYTE PTR [eax+0x3138cf90],0xfe
  415be4:	call   0xc6aeb387
  415be9:	lods   eax,DWORD PTR ds:[esi]
  415bea:	out    0x2e,al
  415bec:	das    
  415bed:	xchg   ebp,eax
  415bee:	out    0x3b,al
  415bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf1:	push   ebx
  415bf2:	dec    ebx
  415bf3:	adc    al,0x43
  415bf5:	jno    0x415c2d
  415bf7:	push   es
  415bf8:	inc    ebx
  415bf9:	dec    DWORD PTR [ebx-0x41]
  415bfc:	inc    edi
  415bfd:	mov    al,ds:0xee62f619
  415c02:	pop    eax
  415c03:	aaa    
  415c04:	and    dh,BYTE PTR [edx+0x0]
  415c07:	jns    0x415b95
  415c09:	inc    esp
  415c0a:	push   eax
  415c0b:	lahf   
  415c0c:	jecxz  0x415c35
  415c0e:	out    dx,eax
  415c0f:	and    DWORD PTR [ebx-0x5e73286a],0x5998e367
  415c19:	mov    dl,0x6a
  415c1b:	out    dx,al
  415c1c:	sar    bl,1
  415c1e:	lahf   
  415c1f:	cmp    edx,DWORD PTR [ebx+0xb]
  415c22:	jle    0x415c0e
  415c24:	fwait
  415c25:	jge    0x415bba
  415c27:	dec    edx
  415c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c29:	jbe    0x415c50
  415c2b:	stos   DWORD PTR es:[edi],eax
  415c2c:	ret    0x6900
  415c2f:	dec    edi
  415c30:	mov    WORD PTR [edi-0x6e],?
  415c33:	sbb    eax,0x19116c97
  415c38:	pushf  
  415c39:	sar    BYTE PTR [edx+0x2a],1
  415c3c:	(bad)  
  415c3d:	not    DWORD PTR [ebp+0x19]
  415c40:	les    edx,FWORD PTR [ebx]
  415c42:	js     0x415ca1
  415c44:	cmp    eax,DWORD PTR [esp+edi*8]
  415c47:	dec    ebp
  415c48:	push   es
  415c49:	add    al,0x74
  415c4b:	cmp    ebp,DWORD PTR [edi]
  415c4d:	xchg   esp,eax
  415c4e:	jb     0x415c8c
  415c50:	(bad)  
  415c51:	aad    0xa4
  415c53:	rcr    BYTE PTR [esp+ebx*8],1
  415c56:	shl    BYTE PTR [edx-0x4c],cl
  415c59:	adc    al,BYTE PTR [ebx-0x73e07c5c]
  415c5f:	stc    
  415c60:	xor    cl,bh
  415c62:	push   es
  415c63:	cmc    
  415c64:	jno    0x415cc3
  415c66:	jne    0x415ce6
  415c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c69:	loope  0x415ccb
  415c6b:	clc    
  415c6c:	pop    ebp
  415c6d:	(bad)  [esp+eax*4]
  415c70:	cdq    
  415c71:	mov    dh,0x68
  415c73:	mov    eax,ds:0xa7326df3
  415c78:	or     ecx,DWORD PTR [ecx+0xb]
  415c7b:	and    esp,ebp
  415c7d:	shl    BYTE PTR [edi],cl
  415c7f:	in     al,0xb3
  415c81:	inc    eax
  415c82:	mov    fs,WORD PTR [eax-0x45000215]
  415c88:	and    eax,0xe2042cef
  415c8d:	mov    edi,0x7aa44d0c
  415c92:	cwde   
  415c93:	adc    al,BYTE PTR [eax+0x1e]
  415c96:	adc    eax,0xefc66e07
  415c9b:	pop    eax
  415c9c:	and    DWORD PTR [ebp+0x1da7c31f],esp
  415ca2:	ror    DWORD PTR [ebp-0x17],cl
  415ca5:	sub    esi,DWORD PTR [edx-0x1a]
  415ca8:	push   es
  415ca9:	xor    eax,0xe2088369
  415cae:	sub    ebx,ebp
  415cb0:	data16 aam 0xea
  415cb3:	xor    ecx,DWORD PTR [ecx-0x68]
  415cb6:	mov    ebp,0x1ad79ac9
  415cbb:	ret    0x91bf
  415cbe:	cmp    edi,DWORD PTR [ebp+0x5c]
  415cc1:	(bad)  
  415cc3:	sub    al,0x9
  415cc5:	or     eax,0x3b8475e0
  415cca:	xor    bl,BYTE PTR [edi+ebp*2-0x63]
  415cce:	(bad)  
  415ccf:	sbb    eax,0xd9e092c2
  415cd4:	fdivp  st(4),st
  415cd6:	pop    edi
  415cd7:	popf   
  415cd8:	xor    esi,esi
  415cda:	and    cl,ch
  415cdc:	sub    BYTE PTR [esi-0x4d0b3346],dl
  415ce2:	ret    0xe38f
  415ce5:	shl    bh,cl
  415ce7:	inc    ebp
  415ce8:	add    eax,0x8506126d
  415ced:	and    esi,DWORD PTR [ebx+esi*4+0x17]
  415cf1:	call   0xa7a4:0xbff57beb
  415cf8:	(bad)  
  415cf9:	and    al,0x21
  415cfb:	mov    es,WORD PTR [ebp+ebx*4-0x5d7c3e85]
  415d02:	fld    QWORD PTR [eax]
  415d04:	sbb    al,0xc
  415d06:	stos   DWORD PTR es:[edi],eax
  415d07:	gs cmp edi,edi
  415d0a:	leave  
  415d0b:	cld    
  415d0c:	xor    BYTE PTR [ebx+0x3db140e],bh
  415d12:	cmp    BYTE PTR [edx],al
  415d14:	mov    esp,ebx
  415d16:	or     bh,0x38
  415d19:	fbld   TBYTE PTR [ecx]
  415d1b:	call   0xaedd:0xaae6b7e1
  415d22:	cmp    ecx,0x6ee50535
  415d28:	ja     0x415d3c
  415d2a:	push   ecx
  415d2b:	mov    al,ds:0x4cf416c2
  415d30:	mov    al,ds:0xa1d1be8e
  415d35:	scas   eax,DWORD PTR es:[edi]
  415d36:	jno    0x415ce0
  415d38:	rcr    bl,cl
  415d3a:	iret   
  415d3b:	mov    bl,0xfb
  415d3d:	add    al,0x1e
  415d3f:	adc    edx,edi
  415d41:	lods   al,BYTE PTR ds:[esi]
  415d42:	in     eax,0x78
  415d44:	mov    cl,0x44
  415d46:	mov    edi,0x5e3035e8
  415d4b:	dec    esi
  415d4c:	ins    BYTE PTR es:[edi],dx
  415d4d:	push   ebp
  415d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d4f:	jecxz  0x415d6f
  415d51:	arpl   ax,si
  415d53:	retf   
  415d54:	aad    0x18
  415d56:	xchg   ebx,eax
  415d57:	cld    
  415d58:	popa   
  415d59:	fs test esp,ebp
  415d5c:	push   ebx
  415d5d:	pop    ebp
  415d5e:	mov    DWORD PTR [edx+0x59e8bab3],edx
  415d64:	sub    DWORD PTR [ecx-0x649aaf2c],ecx
  415d6a:	fidiv  DWORD PTR [esi+0x1c2858dc]
  415d70:	int    0xa5
  415d72:	cmp    DWORD PTR ds:0x267e6f8c,edi
  415d78:	xor    al,0x9e
  415d7a:	ins    BYTE PTR es:[edi],dx
  415d7b:	sbb    eax,0x5f6e0091
  415d80:	jg     0x415d28
  415d82:	mov    BYTE PTR [ecx-0x39],bl
  415d85:	loopne 0x415d66
  415d87:	push   0xffffff87
  415d89:	es pusha 
  415d8b:	push   eax
  415d8c:	pop    ebx
  415d8d:	nop
  415d8e:	int    0x4c
  415d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d91:	sahf   
  415d92:	in     al,0x8f
  415d94:	mov    edx,0xd0da1107
  415d99:	push   eax
  415d9a:	stc    
  415d9b:	sbb    DWORD PTR [eax],ebp
  415d9d:	mov    ds:0x5dfbc30d,eax
  415da2:	test   BYTE PTR [eax-0x37],bl
  415da5:	sbb    BYTE PTR [edi-0xf5ebc77],ah
  415dab:	mov    cl,0x7a
  415dad:	or     eax,0xe4cac8d3
  415db2:	or     al,0x29
  415db4:	xchg   ebx,eax
  415db5:	lods   al,BYTE PTR ds:[esi]
  415db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db7:	xchg   DWORD PTR [ebp-0x60fb3e18],ecx
  415dbd:	xor    BYTE PTR [ebx+0x28],dh
  415dc0:	adc    edx,ecx
  415dc2:	add    dh,al
  415dc4:	xlat   BYTE PTR ds:[ebx]
  415dc5:	fucomip st,st(1)
  415dc7:	(bad)  
  415dc8:	scas   al,BYTE PTR es:[edi]
  415dc9:	push   cs
  415dca:	xor    ebp,esp
  415dcc:	push   ds
  415dcd:	dec    edi
  415dce:	and    DWORD PTR [esi],ebx
  415dd0:	mov    DWORD PTR [edi+0x2e],edi
  415dd3:	dec    eax
  415dd4:	dec    ecx
  415dd5:	dec    ecx
  415dd6:	lds    edx,FWORD PTR [ecx-0x6e]
  415dd9:	push   esp
  415dda:	cdq    
  415ddb:	inc    eax
  415ddc:	add    DWORD PTR [esi-0x79d4cf6e],ecx
  415de2:	jecxz  0x415e4b
  415de4:	jle    0x415dec
  415de6:	mov    ebx,DWORD PTR [esi-0x5b941c7f]
  415dec:	sub    dl,BYTE PTR [esi+edx*8-0x8ac8a44]
  415df3:	sbb    dl,BYTE PTR [ebp+0x13]
  415df6:	mov    edi,0x91351192
  415dfb:	dec    edx
  415dfc:	mov    esp,0x75c1f991
  415e01:	inc    eax
  415e02:	push   0x54e7f4ac
  415e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e08:	pop    ecx
  415e09:	lods   al,BYTE PTR ds:[esi]
  415e0a:	xor    al,0x51
  415e0c:	jge    0x415db2
  415e0e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e10:	fs mov al,0xbc
  415e13:	push   esp
  415e14:	fsubp  st(5),st
  415e16:	xor    edx,DWORD PTR [edx+0x22]
  415e19:	xor    DWORD PTR [ebx],edi
  415e1b:	jmp    0x3c79c9
  415e20:	retf   0x6b01
  415e23:	push   ebx
  415e24:	push   edi
  415e25:	xor    al,0xf2
  415e27:	dec    edx
  415e28:	stos   DWORD PTR es:[edi],eax
  415e29:	push   cs
  415e2a:	sbb    BYTE PTR [eax-0x236453eb],0x71
  415e31:	out    dx,al
  415e32:	imul   ebp,DWORD PTR [ecx],0x64
  415e35:	dec    eax
  415e36:	cwde   
  415e37:	cld    
  415e38:	push   eax
  415e39:	jl     0x415dd1
  415e3b:	or     bl,BYTE PTR [eax-0x6a]
  415e3e:	pusha  
  415e3f:	or     eax,0x278ae14d
  415e44:	in     eax,dx
  415e45:	sar    DWORD PTR ds:0xe707276f,1
  415e4b:	cmp    esi,DWORD PTR [ebp-0xd443966]
  415e51:	sbb    edx,edi
  415e53:	sub    eax,0x7d59f443
  415e58:	jp     0x415e77
  415e5a:	fldenv [esi]
  415e5c:	(bad)  
  415e5d:	mov    al,ds:0xa2dfb74a
  415e62:	fdivp  st(7),st
  415e64:	movntq QWORD PTR [ebp+0x4cbad09],mm6
  415e6b:	push   cs
  415e6c:	f2xm1  
  415e6e:	jae    0x415e20
  415e70:	call   DWORD PTR [ebx]
  415e72:	inc    edx
  415e73:	push   ss
  415e74:	sub    DWORD PTR [edx-0x3fde24d6],ecx
  415e7a:	xchg   esp,eax
  415e7b:	inc    ebx
  415e7c:	outs   dx,BYTE PTR ds:[esi]
  415e7d:	aas    
  415e7e:	rcr    DWORD PTR [ebx+0x363c5f5c],0xac
  415e85:	add    dl,BYTE PTR [edi+0x6f538995]
  415e8b:	add    bl,BYTE PTR [ecx+0x2e]
  415e8e:	pop    es
  415e8f:	push   esi
  415e90:	shr    BYTE PTR [edi+0x42],1
  415e93:	jecxz  0x415e93
  415e95:	adc    ebp,0x61
  415e98:	out    0x9,al
  415e9a:	hlt    
  415e9b:	inc    ebp
  415e9c:	push   esi
  415e9d:	and    edi,DWORD PTR ds:0xfe04e70
  415ea3:	dec    ebp
  415ea4:	fwait
  415ea5:	mov    ebp,0x77281559
  415eaa:	sub    eax,0xa117f6a5
  415eaf:	xchg   esi,eax
  415eb0:	aaa    
  415eb1:	inc    esi
  415eb2:	push   eax
  415eb3:	or     dl,BYTE PTR ds:0x5732052b
  415eb9:	ds xchg ebx,eax
  415ebb:	push   ss
  415ebc:	ret    0x52c4
  415ebf:	push   eax
  415ec0:	stc    
  415ec1:	inc    ebx
  415ec2:	adc    DWORD PTR [ebx+esi*1-0x38],ebx
  415ec6:	pop    ebx
  415ec7:	popf   
  415ec8:	jae    0x415f45
  415eca:	cmp    al,0xe
  415ecc:	repnz loope 0x415e55
  415ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed0:	push   es
  415ed1:	int3   
  415ed2:	xor    BYTE PTR [eax-0x59],cl
  415ed5:	repz and al,0xb7
  415ed8:	leave  
  415ed9:	xor    al,0x36
  415edb:	fdivr  QWORD PTR [edi-0x5ee02e40]
  415ee1:	inc    eax
  415ee2:	jg     0x415f36
  415ee4:	sub    BYTE PTR [edi+0x2b],bh
  415ee7:	fmul   DWORD PTR [eax+0x29]
  415eea:	adc    esi,DWORD PTR [edx-0x60abee1a]
  415ef0:	sbb    bl,bh
  415ef2:	aaa    
  415ef3:	lods   al,BYTE PTR ds:[si]
  415ef5:	aaa    
  415ef6:	(bad)  
  415ef7:	leave  
  415ef8:	stos   DWORD PTR es:[edi],eax
  415ef9:	mov    esi,0x8b9375c0
  415efe:	dec    ebp
  415eff:	xor    edi,DWORD PTR [eax-0x768a728f]
  415f05:	aam    0x91
  415f07:	jae    0x415e8a
  415f09:	dec    edi
  415f0a:	outs   dx,BYTE PTR ds:[esi]
  415f0b:	mov    ah,0xc4
  415f0d:	bound  ebx,QWORD PTR [edx-0x39a504c9]
  415f13:	(bad)  
  415f15:	aaa    
  415f16:	lods   eax,DWORD PTR ds:[esi]
  415f17:	je     0x415f65
  415f19:	dec    esp
  415f1a:	std    
  415f1b:	or     esp,ecx
  415f1d:	iret   
  415f1e:	push   es
  415f1f:	lods   eax,DWORD PTR ds:[esi]
  415f20:	push   edi
  415f21:	leave  
  415f22:	addr16 or esp,ebp
  415f25:	(bad)  
  415f26:	iret   
  415f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f28:	fs pushf 
  415f2a:	and    al,0x65
  415f2c:	mov    cl,bh
  415f2e:	adc    ebx,DWORD PTR [ecx-0x785a7da9]
  415f34:	sub    bh,cl
  415f36:	jp     0x415f60
  415f38:	es into 
  415f3a:	fistp  WORD PTR [esi]
  415f3c:	pop    edi
  415f3d:	sub    DWORD PTR [ebx],0xfffffff7
  415f40:	mov    bh,0xea
  415f42:	scas   eax,DWORD PTR es:[edi]
  415f43:	mov    ecx,0x919ae787
  415f48:	in     eax,0x58
  415f4a:	std    
  415f4b:	jecxz  0x415f1a
  415f4d:	push   esp
  415f4e:	jns    0x415ee2
  415f50:	and    al,0xda
  415f52:	add    BYTE PTR [eax-0x4f13835b],al
  415f58:	rcr    DWORD PTR [eax],0x4
  415f5b:	inc    eax
  415f5c:	add    ah,BYTE PTR [eax+esi*2-0x7a1fec12]
  415f63:	lahf   
  415f64:	mov    ds:0xe9d5fa9,eax
  415f69:	adc    edi,DWORD PTR [edi+0x2a]
  415f6c:	fwait
  415f6d:	inc    edx
  415f6e:	popa   
  415f6f:	fadd   DWORD PTR [edi-0x7e8cf401]
  415f75:	aas    
  415f76:	push   edx
  415f77:	test   DWORD PTR [esi+ebx*1-0x53],ecx
  415f7b:	push   DWORD PTR [edi+edi*2]
  415f7e:	mov    ss,WORD PTR [esi]
  415f80:	and    al,0xf6
  415f82:	sub    edx,DWORD PTR [ecx+0x4a]
  415f85:	sbb    DWORD PTR [edi+0x6],ebp
  415f88:	pop    ecx
  415f89:	leave  
  415f8a:	cmovae esp,DWORD PTR [esi]
  415f8d:	sub    bl,BYTE PTR [eax+0x2e]
  415f90:	add    DWORD PTR [ebx],edi
  415f92:	out    0x93,eax
  415f94:	stos   DWORD PTR es:[edi],eax
  415f95:	clc    
  415f96:	push   edi
  415f97:	cli    
  415f98:	inc    ebp
  415f99:	out    dx,al
  415f9a:	loopne 0x415f5d
  415f9c:	gs int3 
  415f9e:	mov    al,0x52
  415fa0:	sbb    eax,0x1f223d1a
  415fa5:	push   esp
  415fa6:	mov    edx,esi
  415fa8:	icebp  
  415fa9:	jg     0x415fe7
  415fab:	dec    DWORD PTR [ebx+0x42d17af0]
  415fb1:	add    eax,0x1c231b72
  415fb6:	loope  0x415fec
  415fb8:	adc    al,0x96
  415fba:	retf   
  415fbb:	out    0x84,al
  415fbd:	ds aas 
  415fbf:	jne    0x415fd8
  415fc1:	pop    ebx
  415fc2:	scas   eax,DWORD PTR es:[edi]
  415fc3:	mov    WORD PTR [esi-0x34b11a88],es
  415fc9:	mov    ah,0x4
  415fcb:	jle    0x415f60
  415fcd:	jmp    0x416030
  415fcf:	adc    al,0x9b
  415fd1:	inc    ebp
  415fd2:	xchg   DWORD PTR [ebx-0x125a9ab2],edx
  415fd8:	aaa    
  415fd9:	cmp    BYTE PTR [esi+edx*8-0x531ca53],dl
  415fe0:	jecxz  0x41603d
  415fe2:	pop    esi
  415fe3:	outs   dx,BYTE PTR ds:[esi]
  415fe4:	adc    BYTE PTR [ecx+edi*2],0xa3
  415fe8:	scas   al,BYTE PTR es:[edi]
  415fe9:	mov    bl,0x4
  415feb:	int    0x9f
  415fed:	and    bh,BYTE PTR [esi]
  415fef:	jg     0x415fc3
  415ff1:	xlat   BYTE PTR ds:[ebx]
  415ff2:	sbb    dl,ch
  415ff4:	paddsb mm4,QWORD PTR [ecx]
  415ff7:	and    BYTE PTR [ecx],bl
  415ff9:	adc    DWORD PTR [edi+edi*8],0x38c88166
  416000:	and    eax,DWORD PTR [eax-0x23]
  416003:	pop    ds
  416004:	js     0x416083
  416006:	sbb    eax,0xded65ce4
  41600b:	sub    esi,DWORD PTR [ecx-0x7e3ac6e3]
  416011:	cmp    al,0x96
  416013:	sub    eax,0xcc00ef0b
  416018:	ins    DWORD PTR es:[edi],dx
  416019:	sbb    al,BYTE PTR ds:0xb96fdeb8
  41601f:	jns    0x41606c
  416021:	mov    al,ds:0x2e7d23d0
  416026:	mov    edi,esi
  416028:	push   ebp
  416029:	xor    al,0xb6
  41602b:	xor    DWORD PTR [edi*2+0x7388c536],ebp
  416032:	mov    cl,0x26
  416034:	or     cl,BYTE PTR [ebx-0x36]
  416037:	push   es
  416038:	iret   
  416039:	sbb    ch,bh
  41603b:	adc    BYTE PTR [edi],ch
  41603d:	pusha  
  41603e:	data16 out dx,al
  416040:	adc    ebp,DWORD PTR [ebx]
  416042:	and    eax,0x985862e0
  416047:	mov    ebp,DWORD PTR [eax+ebx*4]
  41604a:	rol    BYTE PTR [edx],0x73
  41604d:	sti    
  41604e:	sub    ebp,DWORD PTR [ecx+0x25de8ecd]
  416054:	ret    0x4485
  416057:	ja     0x4160bf
  416059:	ret    
  41605a:	xchg   esi,eax
  41605b:	(bad)  
  41605c:	mov    esi,0x24a52cba
  416061:	push   ss
  416062:	pushf  
  416063:	push   cs
  416064:	lods   al,BYTE PTR ds:[esi]
  416065:	pop    es
  416066:	cli    
  416067:	push   ecx
  416068:	mov    ah,0xc
  41606a:	push   0x448c40b4
  41606f:	add    DWORD PTR ds:0xa11fb435,esi
  416075:	nop
  416076:	pushf  
  416077:	test   BYTE PTR [edx-0x27],dh
  41607a:	test   eax,0x8f1d8f69
  41607f:	sbb    ch,BYTE PTR [ecx+0x16ab0df7]
  416085:	fisubr DWORD PTR [edx]
  416087:	and    BYTE PTR [edi-0x2fa060a2],dl
  41608d:	rcr    DWORD PTR [ebx+0x2fc79d3f],0x54
  416094:	and    BYTE PTR [eax+0x2c],dl
  416097:	loopne 0x416105
  416099:	ds (bad) 
  41609b:	cmc    
  41609c:	cmp    BYTE PTR [ecx+0x2e024390],bl
  4160a2:	push   ebx
  4160a3:	push   ecx
  4160a4:	mov    edx,0xa39ea95b
  4160a9:	mov    ds:0x5846f3b8,eax
  4160ae:	ficom  WORD PTR [edi+0x14]
  4160b1:	jl     0x4160e2
  4160b3:	dec    eax
  4160b4:	int    0x63
  4160b6:	mov    al,ds:0x6f8876f2
  4160bb:	xor    ah,BYTE PTR [ebp+0x25]
  4160be:	xor    BYTE PTR [ebp-0x21d6159e],dl
  4160c4:	mov    al,0xe2
  4160c6:	mov    ebp,0x16f0e24
  4160cb:	or     eax,0x6dee5df7
  4160d0:	mov    eax,ds:0xc649cb47
  4160d5:	outs   dx,DWORD PTR ds:[esi]
  4160d6:	cli    
  4160d7:	imul   ecx,DWORD PTR [eax],0x9ac2bf5a
  4160dd:	push   ebp
  4160de:	sbb    al,0xc5
  4160e0:	sbb    DWORD PTR [esi+0x1f0c8d9],edx
  4160e6:	dec    edi
  4160e7:	push   esi
  4160e8:	cwde   
  4160e9:	call   0x79ed:0xb543d68a
  4160f0:	mov    al,0xc9
  4160f2:	mov    ch,0xd
  4160f4:	sub    al,0xe8
  4160f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f8:	call   0x225b6b95
  4160fd:	sub    eax,0x6470e95b
  416102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416103:	icebp  
  416104:	dec    eax
  416105:	daa    
  416106:	jae    0x416108
  416108:	inc    ebp
  416109:	jmp    0xd836:0x4d1c4357
  416110:	sub    edi,DWORD PTR [ebx]
  416112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416113:	iret   
  416114:	add    edx,ebp
  416116:	xchg   bh,bl
  416118:	mov    WORD PTR [ecx+0x5bf90c26],?
  41611e:	add    DWORD PTR [ebx+0x4aceb285],esp
  416124:	rcr    esi,1
  416126:	imul   DWORD PTR [esp+ebp*2]
  416129:	pop    ebp
  41612a:	pop    es
  41612b:	mov    ebp,0x842616dd
  416130:	pop    ds
  416131:	in     al,0xb3
  416133:	call   0x232f365e
  416138:	pop    ebp
  416139:	js     0x41617d
  41613b:	mov    esi,0x5e167bd3
  416140:	pop    ebp
  416141:	add    BYTE PTR [ebp+0xa],dl
  416144:	mov    dh,0x35
  416146:	dec    esp
  416147:	aam    0x46
  416149:	inc    edi
  41614a:	xchg   edx,eax
  41614b:	adc    bh,0x29
  41614e:	sar    BYTE PTR [ecx+eiz*4],1
  416151:	xchg   BYTE PTR [esi-0x24efb2ed],al
  416157:	push   0x5
  416159:	paddusb mm1,mm4
  41615c:	mov    WORD PTR [ebx-0x1566815],?
  416162:	inc    eax
  416163:	xchg   ebp,eax
  416164:	adc    ecx,DWORD PTR [esi]
  416166:	inc    edx
  416167:	dec    esp
  416168:	mov    al,ds:0x24d3657b
  41616d:	mov    eax,0xe79de38b
  416172:	sub    BYTE PTR [edi+0x26],dh
  416175:	out    dx,eax
  416176:	xor    edx,esp
  416178:	inc    ebp
  416179:	adc    dl,BYTE PTR [esi-0x1f5eb7d3]
  41617f:	sahf   
  416180:	jbe    0x4161d9
  416182:	out    0xa8,al
  416184:	bound  ebp,QWORD PTR [esi]
  416186:	ror    DWORD PTR ds:0x66e2c63f,1
  41618c:	xchg   edx,eax
  41618d:	(bad)  
  41618f:	fcmove st,st(4)
  416191:	icebp  
  416192:	ror    BYTE PTR [ebx+0x6a58056f],1
  416198:	jne    0x4161e8
  41619a:	inc    esi
  41619b:	mov    BYTE PTR [eax],bl
  41619d:	retf   0x3bc9
  4161a0:	sub    al,BYTE PTR [ebp+ecx*2-0xdd4d377]
  4161a7:	xchg   esi,eax
  4161a8:	xor    eax,0x764a67c6
  4161ad:	and    eax,0x4e35042
  4161b2:	cwde   
  4161b3:	retf   0x1dca
  4161b6:	fisub  WORD PTR [ebx-0xb2db02b]
  4161bc:	int    0x18
  4161be:	pop    es
  4161bf:	add    ch,bl
  4161c1:	inc    ebx
  4161c2:	mov    al,ds:0xc85a2d02
  4161c7:	dec    edx
  4161c8:	xor    eax,0xd8352dd3
  4161cd:	test   BYTE PTR [ecx+0x13],cl
  4161d0:	into   
  4161d1:	mov    ebp,0xc310cacc
  4161d6:	adc    ebx,DWORD PTR [ebx]
  4161d8:	xor    ecx,ebx
  4161da:	mov    ds,WORD PTR [ebp-0x4a0de95a]
  4161e0:	loopne 0x416215
  4161e2:	inc    ecx
  4161e3:	aam    0xb5
  4161e5:	sub    dh,0xbd
  4161e8:	stc    
  4161e9:	add    ecx,DWORD PTR [eax+0x18]
  4161ec:	ss mov ch,0x82
  4161ef:	mov    dl,0x63
  4161f1:	scas   al,BYTE PTR es:[edi]
  4161f2:	daa    
  4161f3:	sub    ebx,edi
  4161f5:	repz in al,dx
  4161f7:	push   cs
  4161f8:	ret    0x6555
  4161fb:	jb     0x4161b1
  4161fd:	(bad)  
  4161ff:	jae    0x4161bd
  416201:	fdiv   st(3),st
  416203:	jle    0x416258
  416205:	fwait
  416206:	stos   DWORD PTR es:[edi],eax
  416207:	cmp    al,0x1a
  416209:	fbstp  TBYTE PTR [ebx+0xcf32f5a]
  41620f:	pusha  
  416210:	arpl   WORD PTR [esi+eiz*2+0x3e78b2f1],dx
  416217:	or     bh,BYTE PTR ds:0x95654c8b
  41621d:	xor    ebp,DWORD PTR [ebp-0x1c453669]
  416223:	pop    ds
  416224:	mov    ch,0x29
  416226:	scas   eax,DWORD PTR es:[edi]
  416227:	lds    ecx,FWORD PTR [eax]
  416229:	mov    DWORD PTR [ebx],ecx
  41622b:	sub    bh,BYTE PTR [edi+ecx*2+0x4]
  41622f:	or     eax,0x829dfa5e
  416234:	rcl    BYTE PTR [edi],1
  416236:	(bad)  
  416237:	mov    dl,0xf3
  416239:	mov    bl,0xdf
  41623b:	or     eax,0x916b8370
  416240:	test   ah,bh
  416242:	push   edx
  416243:	dec    ebp
  416244:	hlt    
  416245:	test   al,0x62
  416247:	fadd   DWORD PTR [eax+0x509172fd]
  41624d:	pop    esi
  41624e:	maxps  xmm5,XMMWORD PTR [edx+ebp*8+0xf]
  416253:	add    esp,edi
  416255:	or     al,ah
  416257:	pop    edx
  416258:	cmc    
  416259:	push   es
  41625a:	xchg   edi,eax
  41625b:	clc    
  41625c:	dec    esi
  41625d:	push   ecx
  41625e:	out    dx,al
  41625f:	ss push ebp
  416261:	sub    al,0xbe
  416263:	setns  BYTE PTR [eax]
  416266:	jne    0x416241
  416268:	cli    
  416269:	mov    bl,0x20
  41626b:	cmp    eax,0xadeeab2b
  416270:	call   0x91c:0x660b5c9a
  416277:	fnsave [ecx+0x4b7f361a]
  41627d:	dec    esp
  41627e:	sub    esp,DWORD PTR [eax]
  416280:	rol    BYTE PTR [esi],1
  416282:	addr16 aaa 
  416284:	dec    ecx
  416285:	xor    edi,DWORD PTR gs:[eax+0x7c5ec50a]
  41628c:	ins    BYTE PTR es:[edi],dx
  41628d:	(bad)  
  41628e:	xchg   ecx,eax
  41628f:	mov    es,WORD PTR [ecx]
  416291:	cmc    
  416292:	arpl   WORD PTR [ebp+0x6b],bx
  416295:	stos   DWORD PTR es:[edi],eax
  416296:	mov    ecx,0x4ec25f8
  41629b:	imul   edx,edi,0xffffffe3
  41629e:	aas    
  41629f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162a0:	mov    esi,0x889267fe
  4162a5:	shr    DWORD PTR [esp+esi*1+0xf9b8405],cl
  4162ac:	aas    
  4162ad:	mov    ds:0x1c82bfa4,eax
  4162b2:	shl    BYTE PTR [ebp+0x1f2ac7dc],0x49
  4162b9:	and    BYTE PTR [eax+0x56b0959d],bl
  4162bf:	bound  ecx,QWORD PTR [ecx]
  4162c1:	pop    ebx
  4162c2:	sbb    dl,BYTE PTR [eax+0x5317dabd]
  4162c8:	sub    al,0x7
  4162ca:	shl    DWORD PTR [edx+edx*2],1
  4162cd:	(bad)  
  4162ce:	call   0xdaae5523
  4162d3:	clc    
  4162d4:	repnz neg DWORD PTR [esp+eax*1-0x1f8f7b32]
  4162dc:	mov    ebp,0x408a6cf6
  4162e1:	xor    DWORD PTR [esi-0x5c1ffc86],esp
  4162e7:	add    esp,esi
  4162e9:	inc    esi
  4162ea:	adc    dl,BYTE PTR [ebp+0x36]
  4162ed:	nop
  4162ee:	mov    edi,0xdccfa79b
  4162f3:	dec    ecx
  4162f4:	call   0x566a:0x50561b91
  4162fb:	sub    eax,0xa335e52a
  416300:	push   ds
  416301:	inc    esp
  416302:	sar    BYTE PTR [esi+ecx*1],1
  416305:	ja     0x416371
  416307:	mov    ds,WORD PTR [esi+0x366b2505]
  41630d:	fst    DWORD PTR [esi-0x73]
  416310:	xchg   ebp,eax
  416311:	inc    ebx
  416312:	xchg   edi,eax
  416313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416314:	ret    0x92cd
  416317:	popf   
  416318:	dec    edi
  416319:	call   0xc7a0:0xd380c492
  416320:	ret    0xb535
  416323:	or     edx,ebx
  416325:	dec    esp
  416326:	pop    edi
  416327:	pop    ebx
  416328:	or     ebp,DWORD PTR [edi-0x2c]
  41632b:	or     BYTE PTR [edx+ebp*1+0x11],bl
  41632f:	adc    al,0xb4
  416331:	aas    
  416332:	jg     0x416388
  416334:	add    eax,0x6ee007ac
  416339:	mov    esi,0xa4da917
  41633e:	mov    cs,edi
  416340:	inc    edi
  416341:	xchg   DWORD PTR [ebx],edx
  416343:	add    eax,0xe4bbc417
  416348:	push   ebx
  416349:	add    BYTE PTR [edi+0x21],ah
  41634c:	or     al,0xf6
  41634e:	cmp    dh,BYTE PTR [ebp+0xdf8670f]
  416354:	mov    ecx,0x5d4da4b5
  416359:	sub    DWORD PTR [edx],ebx
  41635b:	out    0x7d,eax
  41635d:	ficomp DWORD PTR [edi-0x4cf17418]
  416363:	call   0x14db018a
  416368:	jnp    0x41630d
  41636a:	lock mov ebx,0x12413842
  416370:	jmp    0xb0107b7f
  416375:	push   ebx
  416376:	mov    ds:0x8c3a133f,al
  41637b:	data16 and cl,cl
  41637e:	ds loopne 0x41631d
  416381:	add    DWORD PTR [esi-0x2f],edx
  416384:	sbb    DWORD PTR [edi+0x56],eax
  416387:	jle    0x416401
  416389:	dec    edi
  41638a:	mov    ch,0xc0
  41638c:	mov    eax,ds:0xa383b9f4
  416391:	aam    0x7a
  416393:	add    eax,0xae935723
  416398:	xchg   edx,eax
  416399:	mov    bl,0x5f
  41639b:	adc    al,0x34
  41639d:	(bad)  
  41639e:	push   0xc056941d
  4163a3:	pop    esi
  4163a4:	jle    0x416373
  4163a6:	or     DWORD PTR [eax+0x3b],ebx
  4163a9:	nop
  4163aa:	push   eax
  4163ab:	mov    DWORD PTR [eax],ebp
  4163ad:	or     ebx,DWORD PTR [edx-0x3b]
  4163b0:	stos   BYTE PTR es:[edi],al
  4163b1:	enter  0xb5d2,0x96
  4163b5:	aas    
  4163b6:	xchg   edx,eax
  4163b7:	adc    al,0x6c
  4163b9:	mov    eax,0xf05d2f0b
  4163be:	hlt    
  4163bf:	and    ah,BYTE PTR [edi]
  4163c1:	sub    BYTE PTR [esi+0x44],0x63
  4163c5:	jne    0x41637f
  4163c7:	loope  0x4163e4
  4163c9:	inc    eax
  4163ca:	loop   0x416372
  4163cc:	ins    DWORD PTR es:[edi],dx
  4163cd:	(bad)  
  4163ce:	ja     0x4163ef
  4163d0:	std    
  4163d1:	xchg   edx,eax
  4163d2:	imul   edi,DWORD PTR [esi-0x7e],0xffffff94
  4163d6:	xchg   esp,eax
  4163d7:	xor    edx,DWORD PTR [edi+0x51]
  4163da:	mov    bl,0x23
  4163dc:	push   ecx
  4163dd:	xor    esp,esp
  4163df:	add    al,0xa
  4163e1:	jmp    0x378bc91a
  4163e6:	jmp    0xa3b2:0x90c28595
  4163ed:	fistp  QWORD PTR [ecx-0x13]
  4163f0:	lahf   
  4163f1:	adc    cl,BYTE PTR [eax+0x6206ed45]
  4163f7:	mov    dh,0x32
  4163f9:	mov    ds:0x3cb5cbf6,eax
  4163fe:	pushf  
  4163ff:	cwde   
  416400:	in     eax,0x73
  416402:	das    
  416403:	jmp    0x41639f
  416405:	inc    edi
  416406:	lds    esi,FWORD PTR [edi]
  416408:	jno    0x4163ab
  41640a:	jns    0x4163b8
  41640c:	loopne 0x41641e
  41640e:	jne    0x41644e
  416410:	sub    DWORD PTR [ebx-0x1d564d84],edx
  416416:	cmc    
  416417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416418:	fucomi st,st(6)
  41641a:	cmp    eax,0x79b2f4
  41641f:	xor    DWORD PTR [edi-0x4c234a67],0x35
  416426:	into   
  416427:	pop    ebx
  416428:	xor    al,0xa6
  41642a:	lahf   
  41642b:	retf   
  41642c:	(bad)  
  41642d:	jbe    0x416417
  41642f:	cdq    
  416430:	bound  edi,QWORD PTR [edi]
  416432:	rdtsc  
  416434:	push   edi
  416435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416436:	mov    bl,0xa1
  416438:	adc    DWORD PTR [edx+ebp*8-0x2b],0xffffffc0
  41643d:	mov    eax,ds:0x36079d75
  416442:	inc    edx
  416443:	imul   edi,DWORD PTR [ebx-0x4c],0x7b
  416447:	mov    ah,0x48
  416449:	fisub  DWORD PTR [eax-0x13]
  41644c:	adc    eax,0xc2aada86
  416451:	cwde   
  416452:	test   bh,cl
  416454:	cmp    BYTE PTR [esi+0x1660d99e],dl
  41645a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645b:	in     al,dx
  41645c:	xchg   esi,eax
  41645d:	test   al,ah
  41645f:	xor    DWORD PTR [esi-0x29],esi
  416462:	cwde   
  416463:	ins    BYTE PTR es:[edi],dx
  416464:	xor    al,0x53
  416466:	js     0x416456
  416468:	dec    ebp
  416469:	js     0x4164a6
  41646b:	aad    0xcf
  41646d:	sub    eax,0x5bf488af
  416472:	push   edx
  416473:	xchg   edx,eax
  416474:	(bad)  
  416475:	int    0x91
  416477:	in     al,dx
  416478:	pop    ebp
  416479:	(bad)  
  41647a:	and    DWORD PTR [ebx-0x3f146096],ecx
  416480:	fwait
  416481:	sbb    ebp,DWORD PTR [edx-0x23]
  416484:	mov    ebx,0x6a44e1c9
  416489:	inc    eax
  41648a:	or     al,0xde
  41648c:	and    bh,BYTE PTR [esi+0xa]
  41648f:	test   BYTE PTR [esi-0xd],bl
  416492:	out    dx,eax
  416493:	(bad)  
  416494:	pop    edx
  416495:	arpl   WORD PTR [ebp+ebp*8+0x70a5abb4],dx
  41649c:	cmp    DWORD PTR [ebp+0x2b],eax
  41649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a0:	ret    
  4164a1:	(bad)  
  4164a2:	ds fst st(4)
  4164a5:	xchg   BYTE PTR [ecx+ebx*1],dh
  4164a8:	nop
  4164a9:	mov    DWORD PTR [ebx+0x25],esi
  4164ac:	loope  0x41652b
  4164ae:	rcr    DWORD PTR [edx],cl
  4164b0:	pop    eax
  4164b1:	inc    edi
  4164b2:	data16 mov cl,0x51
  4164b5:	repnz popa 
  4164b7:	adc    edi,DWORD PTR [ebx+0x29]
  4164ba:	sub    eax,0xfeaff9
  4164bf:	or     DWORD PTR [esi-0x41b60954],edx
  4164c5:	xchg   BYTE PTR [edx],cl
  4164c7:	mov    ds:0x6d5e3331,eax
  4164cc:	mov    cl,0xe1
  4164ce:	in     eax,dx
  4164cf:	lods   eax,DWORD PTR ds:[esi]
  4164d0:	inc    eax
  4164d1:	mov    esp,0x467ded00
  4164d6:	aaa    
  4164d7:	inc    esi
  4164d8:	fcmove st,st(0)
  4164da:	and    al,0xdf
  4164dc:	dec    esp
  4164dd:	retf   0x8faf
  4164e0:	push   es
  4164e1:	pop    ds
  4164e2:	xlat   BYTE PTR ds:[ebx]
  4164e3:	dec    esi
  4164e4:	push   0xffffffc6
  4164e6:	add    BYTE PTR [ecx],cl
  4164e8:	sub    al,0xf
  4164ea:	(bad)  
  4164eb:	xor    BYTE PTR [ecx-0x742c3cac],dh
  4164f1:	or     BYTE PTR [edx+0x4a],cl
  4164f4:	push   cs
  4164f5:	mov    ecx,0xe43ef96d
  4164fa:	xchg   ebp,eax
  4164fb:	(bad)  
  4164fc:	iret   
  4164fd:	fwait
  4164fe:	repnz out dx,al
  416500:	fidiv  DWORD PTR [esi]
  416502:	inc    ebp
  416503:	push   es
  416504:	or     ebx,DWORD PTR [edi-0x48]
  416507:	test   BYTE PTR [esi],0xad
  41650a:	into   
  41650b:	call   0x6962922a
  416510:	pop    esp
  416511:	push   esp
  416512:	inc    ebx
  416513:	dec    eax
  416514:	jae    0x4164cb
  416516:	dec    esp
  416517:	xchg   cx,ax
  416519:	fisubr WORD PTR [ecx]
  41651b:	int    0x53
  41651d:	dec    edi
  41651e:	adc    DWORD PTR [esi-0x4c0f83f],esi
  416524:	scas   al,BYTE PTR es:[edi]
  416525:	xor    eax,0x52a9aca0
  41652a:	sahf   
  41652b:	inc    edi
  41652c:	pop    es
  41652d:	fcmovne st,st(4)
  41652f:	outs   dx,DWORD PTR ds:[esi]
  416530:	or     al,0x86
  416532:	jbe    0x41659e
  416534:	sub    al,0x6a
  416536:	hlt    
  416537:	jns    0x4164eb
  416539:	mov    dh,0xb
  41653b:	xchg   ecx,eax
  41653c:	adc    al,0x46
  41653e:	jae    0x41652f
  416540:	inc    edx
  416541:	mov    ebx,0x962ea6
  416546:	dec    esp
  416547:	jmp    0xb02d:0x2f09cd37
  41654e:	scas   al,BYTE PTR es:[edi]
  41654f:	repnz data16 (bad) 
  416552:	jns    0x416507
  416554:	(bad)  
  416555:	call   0xce88bb5d
  41655a:	aad    0x5f
  41655c:	neg    DWORD PTR [ebp+0x70]
  41655f:	push   ecx
  416560:	aad    0xe6
  416562:	jp     0x4164ee
  416564:	push   ebx
  416565:	out    0x14,al
  416567:	ds jg  0x416569
  41656a:	into   
  41656b:	xor    DWORD PTR [ebx],eax
  41656d:	js     0x416548
  41656f:	mov    ecx,0xbbfa4cd8
  416574:	push   ss
  416575:	and    BYTE PTR [esp+edi*8-0x75398035],cl
  41657c:	cmp    cl,BYTE PTR [eax+0x15]
  41657f:	adc    DWORD PTR [ebx-0x7424a72d],ebp
  416585:	push   es
  416586:	cmp    eax,0xef7fe42f
  41658b:	inc    edx
  41658c:	je     0x416517
  41658e:	call   DWORD PTR [ecx]
  416590:	loop   0x41652e
  416592:	fimul  DWORD PTR [ecx+eiz*1+0x41]
  416596:	pushf  
  416597:	sub    DWORD PTR ds:0xc1209b56,esi
  41659d:	rol    BYTE PTR [ecx+0x50],0xaa
  4165a1:	retf   0xf0ae
  4165a4:	mov    dl,0x63
  4165a6:	jge    0x1c0d768f
  4165ac:	xor    dh,dl
  4165ae:	rol    edx,0x9b
  4165b1:	and    esi,edi
  4165b3:	sbb    eax,0x21a15b11
  4165b8:	mov    ah,0x8b
  4165ba:	daa    
  4165bb:	les    esp,FWORD PTR [esi]
  4165bd:	dec    ebp
  4165be:	xchg   ecx,eax
  4165bf:	inc    ebx
  4165c0:	out    dx,al
  4165c1:	push   ecx
  4165c2:	push   edi
  4165c3:	inc    edx
  4165c4:	mov    dl,0x59
  4165c6:	not    BYTE PTR [edx-0x7e]
  4165c9:	das    
  4165ca:	out    dx,eax
  4165cb:	jbe    0x4165ae
  4165cd:	lods   al,BYTE PTR ds:[esi]
  4165ce:	repnz sbb BYTE PTR [esi+0x61],0x5d
  4165d3:	lods   al,BYTE PTR ds:[esi]
  4165d4:	pop    edx
  4165d5:	enter  0x5f8,0x4f
  4165d9:	mov    edx,0x45cff251
  4165de:	sub    al,0xce
  4165e0:	mov    eax,0xaf79ae84
  4165e5:	sbb    al,0x87
  4165e7:	fmul   st,st(3)
  4165e9:	dec    esi
  4165ea:	ss (bad) 
  4165ec:	bound  edi,QWORD PTR [ebp-0xb]
  4165ef:	sbb    eax,0x370d9ebe
  4165f4:	mov    al,ds:0x14b324aa
  4165f9:	xchg   esp,eax
  4165fa:	clc    
  4165fb:	xchg   ecx,eax
  4165fc:	or     eax,0x5cdaff29
  416601:	pop    es
  416602:	bound  esi,QWORD PTR [ebx+0x3a]
  416605:	jp     0x416684
  416607:	and    al,0xd7
  416609:	pop    ebx
  41660a:	arpl   di,di
  41660c:	mov    ebx,0x72ae5df9
  416611:	sub    eax,0xd63e111d
  416616:	xlat   BYTE PTR ds:[ebx]
  416617:	ins    BYTE PTR es:[edi],dx
  416618:	out    0x6f,eax
  41661a:	pusha  
  41661b:	dec    ebp
  41661c:	push   cs
  41661d:	mov    al,ds:0xad97c9de
  416622:	xor    eax,0xcc392ae6
  416627:	push   ss
  416628:	out    dx,al
  416629:	xchg   esp,eax
  41662a:	ss pushf 
  41662c:	mov    eax,ds:0xdc70fc36
  416631:	(bad)  
  416632:	push   ebp
  416633:	aaa    
  416634:	fidiv  WORD PTR [edx]
  416636:	jo     0x4165f1
  416638:	test   BYTE PTR [edi+eiz*8],bl
  41663b:	pop    ebp
  41663c:	adc    DWORD PTR [eax+edi*4-0x960e3be],ebx
  416643:	fnsave cs:[eax-0x49493232]
  41664a:	jl     0x416696
  41664c:	ds xchg ah,al
  41664f:	ss sbb cl,cl
  416652:	jmp    0xa9c358ac
  416657:	add    cl,BYTE PTR [edi-0xe]
  41665a:	push   edx
  41665b:	in     eax,dx
  41665c:	call   0x5e9a:0x85a6f86f
  416663:	sub    eax,0x30e9e36e
  416668:	fmul   DWORD PTR [ecx-0x7c]
  41666b:	mov    BYTE PTR [ebx+0x77572d98],dh
  416671:	out    0xee,eax
  416673:	dec    ebx
  416674:	ja     0x416618
  416676:	hlt    
  416677:	mov    dh,0xd0
  416679:	mov    ebx,DWORD PTR [edx-0x3a39549a]
  41667f:	ja     0x416678
  416681:	(bad)  
  416682:	dec    eax
  416683:	imul   edi,DWORD PTR [ecx+0x36620889],0x518ad66d
  41668d:	imul   DWORD PTR [ebp+0x35]
  416690:	pop    edx
  416691:	dec    eax
  416692:	arpl   WORD PTR [eax],sp
  416694:	(bad)  
  416695:	mov    ebx,0x35077c38
  41669a:	xor    dh,BYTE PTR [edi+0x4b]
  41669d:	mov    edi,0x5bad2663
  4166a2:	int3   
  4166a3:	mov    eax,0xc68348e3
  4166a8:	add    bl,BYTE PTR [esp+edx*8-0xaa5a623]
  4166af:	dec    eax
  4166b0:	(bad)  
  4166b2:	aaa    
  4166b3:	not    BYTE PTR [edx-0x7aa81fa4]
  4166b9:	popa   
  4166ba:	aaa    
  4166bb:	test   DWORD PTR [ebx],esi
  4166bd:	cmp    BYTE PTR [ebx-0x9],dl
  4166c0:	popf   
  4166c1:	xchg   esi,eax
  4166c2:	and    eax,0xde09da1b
  4166c7:	ret    
  4166c8:	inc    ebx
  4166c9:	xor    ebp,eax
  4166cb:	nop
  4166cc:	jmp    0x9213217e
  4166d1:	in     al,dx
  4166d2:	lock cli 
  4166d4:	mov    al,0x81
  4166d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d7:	ins    DWORD PTR es:[edi],dx
  4166d8:	add    ebx,DWORD PTR [esi]
  4166da:	mov    bl,0x60
  4166dc:	inc    esi
  4166dd:	sahf   
  4166de:	cmp    al,0x1
  4166e0:	int3   
  4166e1:	jb     0x416719
  4166e3:	xor    dl,BYTE PTR [ebx+0x64424caf]
  4166e9:	xchg   edi,eax
  4166ea:	jge    0x4166cf
  4166ec:	cs out dx,eax
  4166ee:	sar    DWORD PTR [edi+edi*4],1
  4166f1:	fist   DWORD PTR [edi]
  4166f3:	dec    esp
  4166f4:	out    dx,eax
  4166f5:	aam    0xa1
  4166f7:	or     ebx,DWORD PTR [ecx]
  4166f9:	push   ss
  4166fa:	addr16 mov eax,0x55077c35
  416700:	inc    eax
  416701:	cmp    edx,esi
  416703:	popf   
  416704:	ret    0x1cfe
  416707:	fisttp WORD PTR [ebx-0x14]
  41670a:	sahf   
  41670b:	inc    edi
  41670c:	inc    ebx
  41670d:	mov    ebx,0xfd0bb569
  416712:	nop
  416713:	loopne 0x41674c
  416715:	addr16 inc ebp
  416717:	repnz xor esp,edx
  41671a:	(bad)  
  41671b:	push   edi
  41671c:	push   esp
  41671d:	sub    ecx,edi
  41671f:	xor    edi,DWORD PTR [ecx-0x57]
  416722:	xchg   ecx,eax
  416723:	sub    BYTE PTR [esi+0x360bfe8c],ch
  416729:	sbb    esp,DWORD PTR [ebp+0x25]
  41672c:	mov    al,ds:0xab3c29c5
  416731:	fwait
  416732:	push   ebp
  416733:	pop    ds
  416734:	lods   eax,DWORD PTR ds:[esi]
  416735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416736:	in     al,0xd3
  416738:	leave  
  416739:	mov    dl,ch
  41673b:	or     DWORD PTR [ebx],ebp
  41673d:	xor    dl,bh
  41673f:	cmp    BYTE PTR [ebx],al
  416741:	sub    BYTE PTR [esi],0xba
  416744:	xor    eax,0x4f18219
  416749:	fwait
  41674a:	mov    al,ds:0x43d59651
  41674f:	cwde   
  416750:	jbe    0x41675d
  416752:	imul   esi,eax,0xc8e1776f
  416758:	adc    dl,BYTE PTR [esi-0x4e0417d3]
  41675e:	push   es
  41675f:	mov    BYTE PTR [ebx+0x59c38a38],al
  416765:	lods   al,BYTE PTR ds:[esi]
  416766:	dec    esi
  416767:	out    0xf2,al
  416769:	jg     0x416701
  41676b:	shl    ecx,0x17
  41676e:	jp     0x4167ca
  416770:	sbb    dh,BYTE PTR [eax+ebp*8]
  416773:	inc    ebp
  416774:	or     ecx,DWORD PTR gs:[bp+di+0x66b7]
  41677a:	scas   al,BYTE PTR es:[edi]
  41677b:	daa    
  41677c:	retf   
  41677d:	mov    al,ds:0x1776fb54
  416782:	or     ebx,esp
  416784:	inc    esi
  416785:	fisub  DWORD PTR [edi-0x7c]
  416788:	cmp    DWORD PTR [ecx+eax*2],0xab03164e
  41678f:	fild   WORD PTR [ecx-0xb77f3a3]
  416795:	xor    DWORD PTR [esi+0x7],esi
  416798:	sub    DWORD PTR [edi-0x6f],ebp
  41679b:	xor    al,BYTE PTR [edx+0x2a689402]
  4167a1:	mov    ds:0x76c39869,eax
  4167a6:	lods   al,BYTE PTR ds:[esi]
  4167a7:	fadd   QWORD PTR [esi+0x1008f69f]
  4167ad:	xchg   esp,eax
  4167ae:	jae    0x4167aa
  4167b0:	(bad)  
  4167b1:	cmp    BYTE PTR [esi],bl
  4167b3:	test   BYTE PTR [ebp+0x23],cl
  4167b6:	stos   DWORD PTR es:[edi],eax
  4167b7:	aam    0x8f
  4167b9:	pushf  
  4167ba:	inc    edi
  4167bb:	or     ah,cl
  4167bd:	xchg   ebp,eax
  4167be:	pop    edx
  4167bf:	add    DWORD PTR [ecx+0x7de6a347],0x24
  4167c6:	fist   WORD PTR [esi+0x15408cbc]
  4167cc:	test   al,0xfc
  4167ce:	shl    dh,cl
  4167d0:	retf   0xc8c4
  4167d3:	or     DWORD PTR [ecx-0x4008ca2],0xffffffc1
  4167da:	fs or  esi,ecx
  4167dd:	in     al,0x23
  4167df:	mov    ecx,0xce0fa410
  4167e4:	lds    ebp,FWORD PTR [edx]
  4167e6:	push   ss
  4167e7:	je     0x4167b2
  4167e9:	enter  0x2004,0x44
  4167ed:	scas   al,BYTE PTR es:[edi]
  4167ee:	and    BYTE PTR [bp+si+0x59],ch
  4167f2:	xor    eax,0x68aea8ff
  4167f7:	imul   edi,DWORD PTR [edx-0x17],0xffffffd3
  4167fb:	jnp    0x4167d8
  4167fd:	fild   WORD PTR [esi-0x39]
  416801:	sbb    esp,DWORD PTR [ebp+ebp*8-0x21]
  416805:	test   eax,0x5cdaf6
  41680a:	retf   0x2113
  41680d:	pop    ss
  41680e:	fild   WORD PTR [edx]
  416810:	jmp    0xf589:0x3f8d6974
  416817:	add    al,0x63
  416819:	mov    cl,0x75
  41681b:	mov    bl,0x13
  41681d:	sub    eax,0xf20065c
  416822:	push   cs
  416823:	inc    ebx
  416824:	dec    ebx
  416825:	xlat   BYTE PTR ds:[ebx]
  416826:	ret    
  416827:	xor    al,0x5e
  416829:	or     eax,0xf92167c7
  41682e:	jmp    FWORD PTR [esp+edx*1-0x7227e342]
  416835:	push   ds
  416836:	mov    DWORD PTR [edi-0x3e0bf773],esp
  41683c:	out    0x8f,al
  41683e:	inc    esp
  41683f:	ins    BYTE PTR es:[edi],dx
  416840:	(bad)  
  416841:	jg     0x416856
  416843:	shl    DWORD PTR [eax-0x21aae05a],cl
  416849:	jbe    0x41687f
  41684b:	cmp    BYTE PTR [esi-0x2c],0x18
  41684f:	repz cmp al,0x1f
  416852:	div    DWORD PTR [ecx]
  416854:	retf   0xb633
  416857:	adc    eax,0x1cc74254
  41685c:	outs   dx,DWORD PTR ds:[esi]
  41685d:	jae    0x41683a
  41685f:	test   al,0x5d
  416861:	lock jne 0x4167e5
  416864:	sar    DWORD PTR [ecx+0x7ebe57a],cl
  41686a:	bound  esi,QWORD PTR [esp+esi*2+0x1294e3a3]
  416871:	call   0x774099f
  416876:	call   0x76a9:0xd3bce70
  41687d:	jle    0x416893
  41687f:	rcl    BYTE PTR [edx+0x2a43e4c2],cl
  416885:	xchg   ebx,eax
  416886:	out    0x25,al
  416888:	sub    BYTE PTR [ebx-0x12680263],bh
  41688e:	in     al,0xbb
  416890:	or     BYTE PTR [edi+edi*4+0x2c],ah
  416894:	test   DWORD PTR [eax+0x30],ebx
  416897:	lods   al,BYTE PTR ds:[esi]
  416898:	and    al,0xb1
  41689a:	xor    eax,0xd7684d9f
  41689f:	push   ebx
  4168a0:	neg    DWORD PTR [edx+ebp*4-0x3c]
  4168a4:	in     al,0x54
  4168a6:	xchg   al,ah
  4168a8:	es loop 0x41691d
  4168ab:	adc    eax,0x251e1f68
  4168b0:	dec    edi
  4168b1:	jns    0x416929
  4168b3:	push   0x76277cdc
  4168b8:	jmp    0xe7c34484
  4168bd:	sbb    eax,0xfe107c7f
  4168c2:	add    ebx,DWORD PTR [esi+ebp*1+0x1d]
  4168c6:	jecxz  0x4168df
  4168c8:	lods   eax,DWORD PTR ds:[esi]
  4168c9:	in     eax,0x4c
  4168cb:	push   esp
  4168cc:	adc    al,0x43
  4168ce:	push   ds
  4168cf:	mov    DWORD PTR [esp+esi*1],ebp
  4168d2:	retf   
  4168d3:	sbb    esi,0xffffffba
  4168d6:	sub    esp,DWORD PTR [ecx]
  4168d8:	dec    esi
  4168d9:	xor    DWORD PTR [eax],edi
  4168db:	in     al,0xc8
  4168dd:	add    eax,0x57091acf
  4168e2:	cmp    eax,0x4ba286f3
  4168e7:	call   0xcb77:0xf2a2fc94
  4168ee:	retf   0x928e
  4168f1:	ffreep st(1)
  4168f3:	jns    0x416900
  4168f5:	push   esi
  4168f6:	jle    0x416917
  4168f8:	add    eax,0x762bce64
  4168fd:	ins    DWORD PTR es:[edi],dx
  4168fe:	lea    esp,[edx]
  416900:	add    DWORD PTR [edx+0x8e56360],edx
  416906:	mov    esi,edx
  416908:	(bad)  
  416909:	xor    al,0xcf
  41690b:	pop    ecx
  41690c:	ret    0xd90b
  41690f:	daa    
  416910:	add    eax,0xc383f034
  416915:	jecxz  0x4168ca
  416917:	and    bh,BYTE PTR [esi-0x4]
  41691a:	hlt    
  41691b:	add    al,0xdc
  41691d:	imul   ebp,DWORD PTR [ebp+0x76],0x61
  416921:	retf   0x25c8
  416924:	sbb    ch,BYTE PTR [ebx-0x2c91e6cb]
  41692a:	(bad)  
  41692c:	js     0x4168b5
  41692e:	inc    esp
  41692f:	mov    WORD PTR [ebp+0x8e8bc35],ss
  416935:	std    
  416936:	je     0x41697f
  416938:	test   BYTE PTR [edx+0xc384e26],dl
  41693e:	jb     0x4168fb
  416940:	shr    DWORD PTR [ebx+eiz*4],0x36
  416944:	(bad)  
  416945:	in     eax,dx
  416946:	jns    0x416998
  416948:	test   BYTE PTR [esi-0x539342d5],ch
  41694e:	push   ds
  41694f:	xchg   edx,eax
  416950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416951:	ror    esp,cl
  416953:	cld    
  416954:	push   eax
  416955:	cmp    DWORD PTR [ebx+eax*8],0xeda01aa7
  41695c:	sub    dl,cl
  41695e:	cmp    eax,0x4fcc1ef1
  416963:	mov    ecx,?
  416965:	loope  0x4168f5
  416967:	cdq    
  416968:	lahf   
  416969:	jae    0x41692a
  41696b:	dec    eax
  41696c:	out    dx,eax
  41696d:	into   
  41696e:	xchg   ebx,eax
  41696f:	xor    esp,ebp
  416971:	arpl   WORD PTR [edx],ax
  416973:	into   
  416974:	jne    0x41691e
  416976:	mov    bl,0x5b
  416978:	mov    eax,0x750ff421
  41697d:	call   0x2b343a43
  416982:	mov    al,ds:0xc3fb9cf6
  416987:	aas    
  416988:	mov    dh,BYTE PTR [ebp+0x38]
  41698b:	test   DWORD PTR [edx+0x39bfe047],0xb18648b3
  416995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416996:	jmp    0x41699b
  416998:	mov    al,0x43
  41699a:	pop    eax
  41699b:	ror    edx,0x63
  41699e:	push   ebp
  41699f:	add    BYTE PTR [edx-0x774552eb],dh
  4169a5:	outs   dx,BYTE PTR ds:[esi]
  4169a6:	xchg   ecx,eax
  4169a7:	ret    
  4169a8:	pop    esp
  4169a9:	fstp   QWORD PTR ss:[esi]
  4169ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ad:	dec    esp
  4169ae:	(bad)  
  4169af:	in     eax,0xfb
  4169b1:	mov    ch,0xd1
  4169b3:	popa   
  4169b4:	aam    0xbf
  4169b6:	sub    DWORD PTR [ebp+eiz*4+0x7246d931],esi
  4169bd:	movq   mm5,mm1
  4169c0:	inc    esp
  4169c1:	sahf   
  4169c2:	mov    esi,0xd3ccf3fa
  4169c7:	imul   edi,DWORD PTR [ebp-0x12],0xffffffff
  4169cb:	ja     0x41697d
  4169cd:	dec    ebx
  4169ce:	pushf  
  4169cf:	lods   al,BYTE PTR ds:[esi]
  4169d0:	fild   QWORD PTR [eax+edi*8]
  4169d3:	faddp  st(2),st
  4169d5:	push   ebx
  4169d6:	dec    esp
  4169d7:	sub    ecx,ecx
  4169d9:	dec    edi
  4169da:	mov    BYTE PTR [ebp-0x4],dh
  4169dd:	cmp    dh,BYTE PTR [ebx]
  4169df:	mov    dh,0x96
  4169e1:	xor    al,0x49
  4169e3:	inc    ecx
  4169e4:	ss jecxz 0x416a37
  4169e7:	adc    BYTE PTR [edi+0x2369818c],ch
  4169ed:	(bad)  
  4169ee:	call   0x45e8e429
  4169f3:	xchg   ecx,eax
  4169f4:	scas   al,BYTE PTR es:[edi]
  4169f5:	mov    eax,0xfa45591b
  4169fa:	ss ins DWORD PTR es:[edi],dx
  4169fc:	xchg   ebx,eax
  4169fd:	loope  0x416a7b
  4169ff:	jbe    0x416a6e
  416a01:	in     al,dx
  416a02:	mov    ch,0x76
  416a04:	loopne 0x416a2f
  416a06:	div    DWORD PTR [ecx+eax*8-0x1e54d55d]
  416a0d:	xor    BYTE PTR [ecx],bl
  416a0f:	dec    ecx
  416a10:	fild   WORD PTR [esi+eax*2-0x78]
  416a14:	rcl    BYTE PTR [eax],cl
  416a16:	sbb    DWORD PTR [edx],ebp
  416a18:	push   eax
  416a19:	pop    es
  416a1a:	mov    esp,0x1e210cd1
  416a1f:	gs inc edi
  416a21:	mov    dl,0x16
  416a23:	test   eax,0x3e4f30ca
  416a28:	pop    edi
  416a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a2b:	add    dh,bl
  416a2d:	push   ds
  416a2e:	test   al,0x97
  416a30:	xchg   DWORD PTR [eax+ebp*1+0x2b4f19c],ebp
  416a37:	push   ecx
  416a38:	bound  ebp,QWORD PTR [esi+0x1]
  416a3b:	retf   
  416a3c:	jb     0x4169d5
  416a3e:	xor    DWORD PTR [ebp-0x1f],0x5320f6d6
  416a45:	and    ecx,ecx
  416a47:	dec    BYTE PTR [esi]
  416a49:	inc    edi
  416a4a:	repnz mov ebx,0x9b1fbf34
  416a50:	xchg   DWORD PTR [edx+0x3b120db],esp
  416a56:	jne    0x416a66
  416a58:	ins    BYTE PTR es:[edi],dx
  416a59:	lea    esi,[edi-0x69ee4d12]
  416a5f:	in     al,dx
  416a60:	lea    edi,[edi]
  416a62:	pop    ebx
  416a63:	cli    
  416a64:	inc    edi
  416a65:	popa   
  416a66:	lea    eax,cs:[eax]
  416a69:	cmp    BYTE PTR [esi-0x5e],ah
  416a6c:	lods   eax,DWORD PTR ds:[esi]
  416a6d:	push   eax
  416a6e:	xchg   esi,eax
  416a6f:	add    eax,0x9568c421
  416a74:	retf   
  416a75:	(bad)  
  416a76:	xor    esp,DWORD PTR [esi-0x6bc8f14f]
  416a7c:	ins    BYTE PTR es:[edi],dx
  416a7d:	lea    esp,[edx]
  416a7f:	dec    ecx
  416a80:	xor    bh,BYTE PTR [esi+0x2789b16f]
  416a86:	push   ebx
  416a87:	popa   
  416a88:	push   edi
  416a89:	jns    0x416ad6
  416a8b:	jp     0x416adf
  416a8d:	lds    esi,FWORD PTR [ecx-0x6221dfc0]
  416a93:	inc    ebp
  416a94:	sub    esp,DWORD PTR [ecx+ebx*1+0x11e0dcbb]
  416a9b:	out    0x44,al
  416a9d:	push   ebp
  416a9e:	test   al,0x1c
  416aa0:	ins    DWORD PTR es:[edi],dx
  416aa1:	sub    ebp,DWORD PTR [ecx]
  416aa3:	sbb    eax,0x6dd914c9
  416aa8:	fmul   st,st(3)
  416aaa:	in     eax,dx
  416aab:	int    0x63
  416aad:	jmp    0x2269:0xc973efd
  416ab4:	ins    DWORD PTR es:[edi],dx
  416ab5:	mov    dh,BYTE PTR [esi-0x4e]
  416ab8:	jb     0x416a69
  416aba:	enter  0xddb0,0x26
  416abe:	call   0x45d5:0x885befa4
  416ac5:	jmp    0xcfb6:0x1ce2c4a6
  416acc:	mov    BYTE PTR [edi],dh
  416ace:	pop    ebp
  416acf:	aad    0x3f
  416ad1:	cwde   
  416ad2:	mov    edi,0xbbba08a0
  416ad7:	gs add esi,ebx
  416ada:	pop    eax
  416adb:	(bad)  
  416adc:	arpl   WORD PTR [ecx],di
  416ade:	js     0x416a7d
  416ae0:	inc    eax
  416ae1:	pop    edx
  416ae2:	add    bh,BYTE PTR [ebp-0x19619d64]
  416ae8:	fimul  DWORD PTR [edx+0x3d]
  416aeb:	add    al,0x98
  416aed:	cwde   
  416aee:	cmp    edi,DWORD PTR [ebx]
  416af0:	adc    DWORD PTR [edx],0xffffffa0
  416af3:	or     esp,DWORD PTR [eax-0x37]
  416af6:	clc    
  416af7:	push   eax
  416af8:	addr16 (bad) 
  416afa:	fidiv  WORD PTR [edi+0x71ba812d]
  416b00:	ja     0x416abe
  416b02:	aam    0xcb
  416b04:	or     al,0x3
  416b06:	out    0x6e,al
  416b08:	repz add edi,DWORD PTR [edi-0x11]
  416b0c:	mul    DWORD PTR [eax-0x5a8c3fc2]
  416b12:	in     al,dx
  416b13:	mov    cl,0x10
  416b15:	xchg   esi,eax
  416b16:	retf   
  416b17:	jbe    0x416ab8
  416b19:	fiadd  DWORD PTR [ebp+0x67]
  416b1c:	xor    BYTE PTR [ebp-0x6baf9264],dh
  416b22:	rcl    BYTE PTR [eax+0x2230584a],1
  416b28:	mov    ebx,0x4ef7ae8f
  416b2d:	adc    eax,0xf3abf1a7
  416b32:	pop    esp
  416b33:	jmp    DWORD PTR [edi]
  416b35:	in     eax,0xdc
  416b37:	pop    edx
  416b38:	ror    DWORD PTR [edx],1
  416b3a:	lds    esi,FWORD PTR [ecx+0x2933078d]
  416b40:	test   BYTE PTR [esi-0x4f],bl
  416b43:	or     DWORD PTR [esi+ecx*8],ecx
  416b46:	xor    BYTE PTR [edx],bl
  416b48:	das    
  416b49:	adc    DWORD PTR ds:0x7ac0cd3a,edi
  416b4f:	aad    0x46
  416b51:	fs inc ebx
  416b53:	(bad)  
  416b54:	mov    dl,0x8a
  416b56:	test   al,0x3f
  416b58:	xor    al,0xd3
  416b5a:	in     al,0x32
  416b5c:	push   ds
  416b5d:	leave  
  416b5e:	ret    0x7508
  416b61:	ret    
  416b62:	jae    0x416af2
  416b64:	add    bh,BYTE PTR [ebx+ecx*8+0x4e]
  416b68:	mov    al,0x77
  416b6a:	sub    bh,BYTE PTR [eax-0x79789267]
  416b70:	sbb    dl,BYTE PTR [ebx+0x3cbb1947]
  416b76:	lea    esi,[eax-0x55]
  416b79:	adc    edi,DWORD PTR [eax+eiz*4+0x7da12661]
  416b80:	jle    0x416b58
  416b82:	jo     0x416b17
  416b84:	pop    ecx
  416b85:	lds    edi,FWORD PTR [eax]
  416b87:	pop    ds
  416b88:	cwde   
  416b89:	xor    al,BYTE PTR [ebp-0x3b59fc2e]
  416b8f:	lods   al,BYTE PTR ds:[esi]
  416b90:	retf   
  416b91:	fdivr  QWORD PTR [ecx]
  416b93:	out    dx,al
  416b94:	xor    BYTE PTR [edi+0x4c],ah
  416b97:	test   al,0x98
  416b99:	xchg   ebp,eax
  416b9a:	out    dx,al
  416b9b:	push   esp
  416b9c:	sbb    edi,DWORD PTR [edi+0x5f]
  416b9f:	lahf   
  416ba0:	push   eax
  416ba1:	push   es
  416ba2:	test   al,0x22
  416ba4:	dec    edi
  416ba5:	sbb    ch,dl
  416ba7:	fsub   st(0),st
  416ba9:	aas    
  416baa:	test   BYTE PTR [edx-0xa44c1f1],ah
  416bb0:	outs   dx,DWORD PTR ds:[esi]
  416bb1:	and    eax,0x9448e060
  416bb6:	stos   BYTE PTR es:[edi],al
  416bb7:	rcr    BYTE PTR [ecx+0x43433792],1
  416bbd:	xlat   BYTE PTR ds:[ebx]
  416bbe:	sahf   
  416bbf:	shl    BYTE PTR [esi+0x41c771dd],cl
  416bc5:	add    ecx,DWORD PTR [edx+eiz*2]
  416bc8:	pop    edi
  416bc9:	loopne 0x416bbd
  416bcb:	test   eax,0x658383cc
  416bd0:	mov    bl,0x7c
  416bd2:	xor    ch,cl
  416bd4:	(bad)  
  416bd6:	mov    cl,0x44
  416bd8:	arpl   WORD PTR [esi+0x7e],ax
  416bdb:	inc    edi
  416bdc:	mov    esi,0x1346efe4
  416be1:	xor    DWORD PTR [eax+0x72],esi
  416be4:	or     BYTE PTR [ecx+0x51],0x24
  416be8:	sub    DWORD PTR [eax],esi
  416bea:	push   0xa546624
  416bef:	mov    al,BYTE PTR ds:0x4e02d514
  416bf5:	enter  0x9a42,0xe3
  416bf9:	mov    dl,0xfa
  416bfb:	in     eax,dx
  416bfc:	std    
  416bfd:	ret    
  416bfe:	ss das 
  416c00:	aas    
  416c01:	push   ss
  416c02:	in     al,0xc2
  416c04:	pop    ds
  416c05:	pop    esp
  416c06:	pop    eax
  416c07:	pusha  
  416c08:	xor    eax,DWORD PTR [edi-0x1]
  416c0b:	jne    0x416bc9
  416c0d:	push   0x54
  416c0f:	sbb    eax,ecx
  416c11:	adc    eax,DWORD PTR [ebx+0x2307e2c0]
  416c17:	pop    ds
  416c18:	ins    BYTE PTR es:[edi],dx
  416c19:	les    edx,FWORD PTR [eax-0x33c6a5f7]
  416c1f:	mov    WORD PTR [ecx-0x78],es
  416c22:	pop    esp
  416c23:	and    DWORD PTR cs:[ebp+0x7a],esi
  416c27:	into   
  416c28:	jmp    0x416c04
  416c2a:	call   0xbb9d:0xc8335b6a
  416c31:	jg     0x416c7f
  416c33:	out    dx,eax
  416c34:	ds call 0xb13:0x3f6915bf
  416c3c:	ja     0xed1b0c91
  416c42:	ds or  di,ax
  416c46:	inc    BYTE PTR gs:[ecx]
  416c49:	inc    ebp
  416c4a:	and    edi,ebx
  416c4c:	dec    ebp
  416c4d:	ja     0x416c34
  416c4f:	mov    edx,0x89e46bd7
  416c54:	jnp    0x416be7
  416c56:	std    
  416c57:	fs scas al,BYTE PTR es:[edi]
  416c59:	into   
  416c5a:	iret   
  416c5b:	xchg   ecx,eax
  416c5c:	xchg   edx,eax
  416c5d:	xor    al,0xaf
  416c5f:	ret    0x71f3
  416c62:	mov    bl,0x6e
  416c64:	retf   0x22e2
  416c67:	out    dx,eax
  416c68:	shl    DWORD PTR [edx],cl
  416c6a:	sub    BYTE PTR [ebx],al
  416c6c:	or     DWORD PTR [edx-0x50],eax
  416c6f:	cmp    al,0x89
  416c71:	les    ecx,FWORD PTR [esi+ebp*8+0x18]
  416c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c76:	jnp    0x416cac
  416c78:	inc    ebp
  416c79:	pushf  
  416c7a:	mov    dl,0x78
  416c7c:	rol    BYTE PTR [eax+0x11],cl
  416c7f:	push   DWORD PTR ss:[esi-0x4096f48b]
  416c86:	pop    ebp
  416c87:	and    cl,BYTE PTR [ecx+eax*4]
  416c8a:	aam    0x9
  416c8c:	aam    0x94
  416c8e:	dec    esi
  416c8f:	xchg   ebx,eax
  416c90:	jl     0x416c4a
  416c92:	push   ecx
  416c93:	jb     0x416c8b
  416c95:	out    0xa1,eax
  416c97:	lahf   
  416c98:	enter  0x2cc5,0xd4
  416c9c:	sbb    esi,ebx
  416c9e:	inc    ecx
  416c9f:	cdq    
  416ca0:	sub    BYTE PTR [ecx],ah
  416ca2:	clc    
  416ca3:	sub    al,0x7b
  416ca5:	loopne 0x416d13
  416ca7:	hlt    
  416ca8:	inc    ecx
  416ca9:	mov    ch,0x14
  416cab:	pop    ebp
  416cac:	sub    bl,ch
  416cae:	add    al,dh
  416cb0:	jb     0x416c75
  416cb2:	sub    cl,al
  416cb4:	add    eax,0xeb2f1918
  416cb9:	cmc    
  416cba:	test   DWORD PTR ds:0x2476888a,ecx
  416cc0:	clc    
  416cc1:	test   DWORD PTR [edx],0xc3dd20b0
  416cc7:	int    0x7
  416cc9:	pop    eax
  416cca:	mov    ah,0xe6
  416ccc:	cmp    eax,0x6daefccf
  416cd1:	jmp    0x83cde581
  416cd6:	or     ebx,edi
  416cd8:	xchg   esp,eax
  416cd9:	mov    edx,DWORD PTR [eax+esi*8]
  416cdc:	push   esp
  416cdd:	adc    bl,BYTE PTR [ebx-0xb]
  416ce0:	pop    ds
  416ce1:	arpl   WORD PTR [edx+0x692f545b],sp
  416ce7:	jno    0x416c73
  416ce9:	(bad)  
  416cea:	and    bl,BYTE PTR [eax-0x47]
  416ced:	cmc    
  416cee:	dec    ebx
  416cef:	stos   BYTE PTR es:[edi],al
  416cf0:	xchg   ecx,eax
  416cf1:	push   cs
  416cf2:	push   eax
  416cf3:	cwde   
  416cf4:	leave  
  416cf5:	(bad)  
  416cf6:	out    dx,al
  416cf7:	xchg   esi,eax
  416cf8:	xchg   esp,eax
  416cf9:	repnz xor dl,dh
  416cfc:	loop   0x416c90
  416cfe:	mov    edx,0x46b2e15e
  416d03:	or     al,BYTE PTR [ebp+0xb59429a]
  416d09:	bound  edx,QWORD PTR [eax-0xa]
  416d0c:	in     eax,dx
  416d0d:	and    eax,0x2b53eee5
  416d12:	fbld   TBYTE PTR [edi-0x49f2567d]
  416d18:	inc    ebp
  416d19:	sub    ecx,edi
  416d1b:	shr    ebx,0x23
  416d1e:	sub    edx,DWORD PTR [edx]
  416d20:	xchg   ecx,eax
  416d21:	idiv   DWORD PTR [ebx]
  416d23:	or     esi,edi
  416d25:	xor    BYTE PTR [ecx+0x52013116],al
  416d2b:	cwde   
  416d2c:	test   BYTE PTR [ebx+0x67f517a0],bh
  416d32:	cdq    
  416d33:	jnp    0x416d96
  416d35:	loop   0x416d5a
  416d37:	add    eax,0x1fde3b19
  416d3c:	in     eax,0xb3
  416d3e:	(bad)  
  416d40:	xchg   edi,eax
  416d41:	test   DWORD PTR [esi+ecx*8],ecx
  416d44:	lds    ebp,FWORD PTR [ebp+0x12cc9c2c]
  416d4a:	pop    ds
  416d4b:	adc    BYTE PTR [edx],ch
  416d4d:	and    ah,al
  416d4f:	jg     0x416d98
  416d51:	mov    fs,esp
  416d53:	cmp    bh,dh
  416d55:	mov    WORD PTR [esi+0x37],ss
  416d58:	pushf  
  416d59:	cwde   
  416d5a:	jg     0x416d8b
  416d5c:	jns    0x416dbc
  416d5e:	fs mov bh,0xa2
  416d61:	leave  
  416d62:	inc    ebp
  416d63:	cmp    esi,DWORD PTR [esi]
  416d65:	test   eax,0x4fcdbccf
  416d6a:	gs retf 0x90f2
  416d6e:	add    esi,DWORD PTR [esi]
  416d70:	pop    es
  416d71:	ins    DWORD PTR es:[edi],dx
  416d72:	fisttp DWORD PTR [ecx-0x587c2b54]
  416d78:	out    0x25,al
  416d7a:	mov    ebp,0x6b9bdaec
  416d7f:	inc    edi
  416d80:	hlt    
  416d81:	inc    edi
  416d82:	or     dh,BYTE PTR [esi+esi*4+0xc]
  416d86:	out    dx,al
  416d87:	call   0x51ff3121
  416d8c:	cdq    
  416d8d:	sbb    ebx,edi
  416d8f:	mov    cl,0x9a
  416d91:	jne    0x416dcb
  416d93:	inc    edi
  416d94:	sub    eax,DWORD PTR ds:0x1ec6b19b
  416d9a:	or     ebx,edi
  416d9c:	loope  0x416d44
  416d9e:	lock jg 0x416d60
  416da1:	push   esi
  416da2:	cmc    
  416da3:	jmp    0x20332b15
  416da8:	mov    ebx,0xdd70db2
  416dad:	pop    ss
  416dae:	ror    DWORD PTR [edi],0xfd
  416db1:	and    DWORD PTR [ebx],edi
  416db3:	xor    al,0x96
  416db5:	mov    ch,0xb0
  416db7:	sub    ch,BYTE PTR [edi+0x5f]
  416dba:	loopne 0x416d54
  416dbc:	add    eax,0xdd3a85e3
  416dc1:	push   cs
  416dc2:	popa   
  416dc3:	cmp    al,0x48
  416dc5:	test   DWORD PTR [eax],esp
  416dc7:	(bad)  
  416dc8:	jmp    0x7f2e901f
  416dcd:	(bad)  
  416dce:	mov    edx,0xdef0d8d8
  416dd3:	loope  0x416de8
  416dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dd6:	jle    0x416d96
  416dd8:	enter  0x60d,0xf0
  416ddc:	lods   eax,DWORD PTR ds:[esi]
  416ddd:	lea    edi,[ebx+esi*1-0x6e993803]
  416de4:	call   0xf096:0x4becf323
  416deb:	push   cs
  416dec:	cld    
  416ded:	jge    0x416e5f
  416def:	dec    ebp
  416df0:	test   al,0x1c
  416df2:	sbb    esp,DWORD PTR [esi+0x58]
  416df5:	sbb    DWORD PTR [ecx+esi*4],ebx
  416df8:	mov    WORD PTR [ebp+0xb345a3e],es
  416dfe:	jns    0x416e76
  416e00:	ficom  WORD PTR [edi]
  416e02:	test   al,0x6e
  416e04:	fdiv   QWORD PTR [ecx-0x27]
  416e07:	ficom  WORD PTR [eax]
  416e09:	mul    DWORD PTR [ecx*8-0x34251276]
  416e10:	and    edx,ebp
  416e12:	cmp    esi,edx
  416e14:	mov    ch,0x4d
  416e16:	in     al,dx
  416e17:	retf   
  416e18:	lea    ebp,[edi-0x1ff61ca8]
  416e1e:	mov    esp,0x3a5b9848
  416e23:	inc    ecx
  416e24:	psubq  mm6,mm0
  416e27:	pop    eax
  416e28:	pushf  
  416e29:	pop    ebx
  416e2a:	mov    esp,0x853c2811
  416e2f:	adc    eax,0xcdc69dac
  416e34:	sbb    esp,DWORD PTR [ebp+0x37]
  416e37:	or     al,ch
  416e39:	ror    DWORD PTR [edi-0x54],1
  416e3c:	push   0xffffff94
  416e3e:	sub    al,0x2
  416e40:	or     eax,0x70e46edc
  416e45:	neg    DWORD PTR [eax-0x20ce9a89]
  416e4b:	pop    ds
  416e4c:	or     al,0x92
  416e4e:	and    eax,0xa19da961
  416e53:	jnp    0x416de4
  416e55:	xor    al,0x5d
  416e57:	in     al,dx
  416e58:	fist   DWORD PTR [edi]
  416e5a:	scas   eax,DWORD PTR es:[edi]
  416e5b:	dec    esi
  416e5c:	int    0xe2
  416e5e:	test   BYTE PTR [edi],al
  416e60:	(bad)  
  416e61:	nop
  416e62:	and    eax,0xcba277b4
  416e67:	and    al,0x13
  416e69:	fmul   QWORD PTR [ebp+0x787da84]
  416e6f:	cwde   
  416e70:	jge    0x416ee8
  416e72:	push   ebx
  416e73:	daa    
  416e74:	icebp  
  416e75:	jno    0x416eea
  416e77:	cwde   
  416e78:	cs mov dl,0xa0
  416e7b:	mov    ds:0x182250c,eax
  416e80:	pop    edi
  416e81:	add    ebx,esp
  416e83:	jmp    0x416eb4
  416e85:	push   0x59
  416e87:	lahf   
  416e88:	pop    esi
  416e89:	xchg   esp,eax
  416e8a:	and    al,0xeb
  416e8c:	stos   DWORD PTR es:[edi],eax
  416e8d:	ins    BYTE PTR es:[edi],dx
  416e8e:	clc    
  416e8f:	mov    ds:0x3046263,al
  416e94:	popa   
  416e95:	xor    ah,bl
  416e97:	mov    DWORD PTR [edx-0x35],edi
  416e9a:	inc    edi
  416e9b:	(bad)  
  416e9c:	nop
  416e9d:	jle    0x416ed6
  416e9f:	call   0x8f21:0xf6ca9567
  416ea6:	add    al,0xe6
  416ea8:	icebp  
  416ea9:	inc    DWORD PTR [eax+eax*1-0x20]
  416ead:	das    
  416eae:	mov    edi,0x3173acda
  416eb3:	sub    ah,al
  416eb5:	mov    edi,0x7806dc78
  416eba:	mov    edx,0xdf871a47
  416ebf:	xchg   esi,eax
  416ec0:	test   al,0x33
  416ec2:	mov    DWORD PTR [eax+esi*8-0x19273807],ebx
  416ec9:	fcomp  st(3)
  416ecb:	mov    esp,0x134897e7
  416ed0:	inc    ecx
  416ed1:	inc    eax
  416ed2:	repz sub al,0xe1
  416ed5:	jno    0x416f22
  416ed7:	mov    WORD PTR [esi-0x7],es
  416eda:	mov    ah,0x25
  416edc:	aam    0x42
  416ede:	jae    0x416f07
  416ee0:	and    dh,cl
  416ee2:	or     bh,dl
  416ee4:	aaa    
  416ee5:	add    DWORD PTR [edx+esi*4],ecx
  416ee8:	rcr    BYTE PTR [ebx+esi*8],0x19
  416eec:	jmp    0xb9c1:0xc0d48d13
  416ef3:	mov    ah,0x67
  416ef5:	shr    BYTE PTR [ecx+edi*8-0x1c],0xa8
  416efa:	int3   
  416efb:	fcomp  QWORD PTR [ecx-0x6]
  416efe:	ret    0xcf8c
  416f01:	imul   DWORD PTR [ebp+0x63]
  416f04:	mov    al,ds:0x18feca11
  416f09:	jg     0x416e8e
  416f0b:	mov    ecx,0x6555ca9e
  416f10:	mov    fs,WORD PTR [eax+0x7b]
  416f13:	push   edx
  416f14:	adc    esp,DWORD PTR [edi+0x7e]
  416f17:	mov    bl,0xa7
  416f19:	repnz lock mov esp,edx
  416f1d:	mov    BYTE PTR [ebx+0x7e1add8b],dl
  416f23:	xlat   BYTE PTR ds:[ebx]
  416f24:	ss cmp eax,0x8fb0d2c8
  416f2a:	clc    
  416f2b:	mov    al,ds:0x47b2ca74
  416f30:	fwait
  416f31:	shld   DWORD PTR [eax+0x66],edx,0x55
  416f36:	add    eax,0x5ea94271
  416f3b:	rcl    BYTE PTR [esi+0x28],0xb5
  416f3f:	cli    
  416f40:	push   ebp
  416f41:	pop    esi
  416f42:	pop    edi
  416f43:	xchg   esp,eax
  416f44:	dec    ebx
  416f45:	retf   0x6f26
  416f48:	xchg   BYTE PTR [esi+0x388fe90],bh
  416f4e:	or     dl,BYTE PTR gs:[esp+ebx*8-0x5a]
  416f53:	inc    ebp
  416f54:	out    0xf8,al
  416f56:	pop    eax
  416f57:	xlat   BYTE PTR ds:[ebx]
  416f58:	cmp    ebx,DWORD PTR [edi]
  416f5a:	retf   0xcec4
  416f5d:	sub    DWORD PTR [edx+0x2b],0xbd0fccae
  416f64:	repz pop edx
  416f66:	xchg   esi,eax
  416f67:	jg     0x416fa4
  416f69:	call   0x1db2:0xbc825838
  416f70:	and    bl,dl
  416f72:	push   ecx
  416f73:	cmp    bh,BYTE PTR [ecx+ecx*4-0x67]
  416f77:	xchg   cl,dl
  416f79:	pop    es
  416f7a:	inc    edx
  416f7b:	pushf  
  416f7c:	out    0x49,al
  416f7e:	jae    0x416f35
  416f80:	and    al,0x20
  416f82:	mov    edx,0xcd4a2746
  416f87:	aaa    
  416f88:	xlat   BYTE PTR ds:[ebx]
  416f89:	aad    0xea
  416f8b:	pop    ss
  416f8c:	xor    bh,dl
  416f8e:	xchg   edx,eax
  416f8f:	mov    ah,0x30
  416f91:	pop    eax
  416f92:	sbb    ecx,DWORD PTR [edx-0x4e]
  416f95:	js     0x416f9b
  416f97:	shl    BYTE PTR [esp+eax*8-0x177c802b],cl
  416f9e:	pop    esi
  416f9f:	lahf   
  416fa0:	test   cl,0x4a
  416fa3:	jb     0x416f2a
  416fa5:	test   BYTE PTR [edi-0x61],cl
  416fa8:	ss mov ds,ebp
  416fab:	jl     0x417019
  416fad:	dec    ebp
  416fae:	(bad)
  416fb1:	sbb    eax,0x2d08e57b
  416fb6:	jmp    0xb9a4:0x5aced817
  416fbd:	add    bh,BYTE PTR [edx+0x77db1e4a]
  416fc3:	cdq    
  416fc4:	addr16 mov edi,fs
  416fc7:	data16 into 
  416fc9:	bt     DWORD PTR ss:[esi+0x4064e2ec],ebx
  416fd1:	(bad)  
  416fd3:	loopne 0x416f58
  416fd5:	dec    eax
  416fd6:	sub    eax,0xe04fdfc5
  416fdb:	data16 (bad) 
  416fdd:	rol    DWORD PTR [eax+esi*8],cl
  416fe0:	add    edx,DWORD PTR [esi+0x209e4f9]
  416fe6:	xchg   edx,eax
  416fe7:	jb     0x416f89
  416fe9:	leave  
  416fea:	jns    0x416f8c
  416fec:	bound  ebp,QWORD PTR [edi-0x18]
  416fef:	nop
  416ff0:	(bad)  
  416ff2:	mov    ebp,0x5a13f884
  416ff7:	fisttp QWORD PTR [ebp+0x6c]
  416ffa:	jo     0x416ff2
  416ffc:	daa    
  416ffd:	loope  0x416f91
  416fff:	stos   BYTE PTR es:[edi],al
  417000:	push   ebp
  417001:	test   ecx,edx
  417003:	inc    esp
  417004:	push   ecx
  417005:	dec    edx
  417006:	mov    esi,0xbd4e0d1a
  41700b:	jmp    DWORD PTR [ebp+0x5a7c0b1d]
  417011:	not    DWORD PTR [edi+0x46]
  417014:	clc    
  417015:	xor    ebp,DWORD PTR [eax+0x7d]
  417018:	pop    esp
  417019:	ss pushf 
  41701b:	or     eax,0xcd6662be
  417020:	js     0x417054
  417022:	fstp   TBYTE PTR [edx+0x60]
  417025:	rcr    BYTE PTR ds:0xdd49c28b,0x1c
  41702c:	mov    al,0x77
  41702e:	lahf   
  41702f:	bound  edx,QWORD PTR ss:[esi-0x6e]
  417033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417034:	push   esi
  417035:	mov    BYTE PTR [edi],bl
  417037:	xor    BYTE PTR [ebx],dl
  417039:	js     0x416fc6
  41703b:	mov    cl,0x61
  41703d:	xor    DWORD PTR [esi-0x24],esi
  417040:	lods   eax,DWORD PTR ds:[esi]
  417041:	push   ebx
  417042:	mov    ds:0xc6579a04,eax
  417047:	hlt    
  417048:	sahf   
  417049:	daa    
  41704a:	mov    es,WORD PTR [eax]
  41704c:	mov    ecx,0x1ac226f5
  417051:	mov    edx,0x39677f3e
  417056:	add    DWORD PTR [edi-0x46768009],esi
  41705c:	cmp    ah,BYTE PTR [esi-0x34]
  41705f:	vpminub xmm1,xmm5,xmm0
  417063:	sub    BYTE PTR [eax-0x3fefc150],0xc0
  41706a:	hlt    
  41706b:	sbb    esi,DWORD PTR [eax]
  41706d:	and    edi,0x38
  417070:	xor    al,0x95
  417072:	push   esi
  417073:	(bad)  
  417074:	or     BYTE PTR [eax],dh
  417076:	sub    cl,cl
  417078:	jo     0x41708b
  41707a:	das    
  41707b:	push   ebx
  41707c:	pop    esp
  41707d:	mov    ch,0xa9
  41707f:	(bad)  
  417080:	xchg   ecx,eax
  417081:	adc    esp,DWORD PTR [ebx]
  417083:	hlt    
  417084:	lods   eax,DWORD PTR ds:[esi]
  417085:	nop
  417086:	push   esp
  417087:	(bad)  
  417088:	jbe    0x4170d4
  41708a:	cmp    al,0x9
  41708c:	jl     0x417037
  41708e:	pop    ds
  41708f:	shl    ecx,0xdf
  417092:	add    BYTE PTR [ebx],0x30
  417095:	mov    WORD PTR [esi+0x12],fs
  417098:	lods   eax,DWORD PTR ds:[esi]
  417099:	pop    edi
  41709a:	gs cs cmp DWORD PTR ss:[ebp-0x5f],0x5e
  4170a1:	xchg   DWORD PTR [ebx+0x3168cc7],esi
  4170a7:	xor    DWORD PTR [ecx-0x34dfb396],esi
  4170ad:	data16 mov cl,0x77
  4170b0:	loope  0x4170c3
  4170b2:	jae    0x417046
  4170b4:	inc    edi
  4170b5:	cmp    al,0xfe
  4170b7:	push   es
  4170b8:	icebp  
  4170b9:	push   ds
  4170ba:	fdiv   DWORD PTR [eax-0x44]
  4170bd:	xchg   edx,eax
  4170be:	jno    0x41705e
  4170c0:	sbb    DWORD PTR [edi],esp
  4170c2:	clc    
  4170c3:	in     al,dx
  4170c4:	fiadd  WORD PTR [ebx+ebp*2-0x22]
  4170c8:	pop    ds
  4170c9:	push   ss
  4170ca:	js     0x4170d4
  4170cc:	out    dx,al
  4170cd:	js     0x4170a1
  4170cf:	push   edx
  4170d0:	xchg   edx,eax
  4170d1:	sar    BYTE PTR [ebx+esi*1+0x12deebd2],1
  4170d8:	mov    ecx,0xf1daa58f
  4170dd:	retf   0xac37
  4170e0:	scas   al,BYTE PTR es:[edi]
  4170e1:	ja     0x4170b3
  4170e3:	cmp    al,0x32
  4170e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170e6:	(bad)  
  4170e8:	rcl    ch,0xcd
  4170eb:	fstp   st(2)
  4170ed:	sbb    dh,BYTE PTR [esi-0x58]
  4170f0:	addr16 pop edi
  4170f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f3:	inc    eax
  4170f4:	adc    al,0x35
  4170f6:	push   es
  4170f7:	aad    0x8
  4170f9:	or     eax,0x63e4c10f
  4170fe:	aas    
  4170ff:	rcl    ch,cl
  417101:	or     BYTE PTR [ebx-0x6d9e6592],dh
  417107:	pop    ss
  417108:	aas    
  417109:	aad    0x26
  41710b:	and    DWORD PTR [ebp-0x2d1848bd],ebp
  417111:	xchg   ebx,eax
  417112:	cli    
  417113:	jle    0x41714c
  417115:	sub    eax,DWORD PTR [edi]
  417117:	retf   
  417118:	pop    edx
  417119:	fdiv   QWORD PTR [edx-0x4eab8cf4]
  41711f:	jbe    0x417122
  417121:	test   al,0x29
  417123:	int3   
  417124:	sub    BYTE PTR [ecx-0x50caaee],0x2b
  41712b:	xchg   esp,eax
  41712c:	xchg   DWORD PTR [esi-0x74],ecx
  41712f:	cmp    BYTE PTR [eax+0x6bd08f7c],dh
  417135:	call   DWORD PTR [edx-0x30]
  417138:	sbb    eax,0xee86455a
  41713d:	and    BYTE PTR [ebp-0x66],bh
  417140:	pop    edx
  417141:	mov    esi,DWORD PTR [ebp+0x31b977ac]
  417147:	sbb    al,0x7a
  417149:	pushf  
  41714a:	hlt    
  41714b:	push   0x5e
  41714d:	jo     0x417142
  41714f:	(bad)  
  417150:	dec    ebx
  417151:	test   BYTE PTR [eax-0x4c224184],ch
  417157:	ret    0xaae8
  41715a:	dec    esp
  41715b:	pop    esi
  41715c:	(bad)  
  41715d:	cmp    DWORD PTR [edx+eax*4],ebp
  417160:	mov    dl,0x5
  417162:	test   al,0x58
  417164:	push   ecx
  417165:	jl     0x417189
  417167:	cmc    
  417168:	aas    
  417169:	adc    eax,0xe492d359
  41716e:	dec    esi
  41716f:	xor    eax,0x2804acbf
  417174:	out    0xa,eax
  417176:	mov    edx,0x301054fc
  41717b:	mov    ch,0x34
  41717d:	adc    DWORD PTR [ebp-0xf],edx
  417180:	xchg   edx,eax
  417181:	test   BYTE PTR [eax],ch
  417183:	adc    DWORD PTR [ebx-0x7d9c4de7],ebp
  417189:	or     edi,DWORD PTR [ebx]
  41718b:	pop    ss
  41718c:	pusha  
  41718d:	btc    ebp,esi
  417190:	xlat   BYTE PTR ds:[ebx]
  417191:	dec    ecx
  417192:	ins    DWORD PTR es:[edi],dx
  417193:	push   edi
  417194:	xchg   esi,eax
  417195:	out    dx,al
  417196:	ret    0xa731
  417199:	aad    0x55
  41719b:	hlt    
  41719c:	aas    
  41719d:	test   al,0x39
  41719f:	loopne 0x41720f
  4171a1:	dec    eax
  4171a2:	or     eax,0x83d8ea37
  4171a7:	ins    DWORD PTR es:[edi],dx
  4171a8:	hlt    
  4171a9:	loopne 0x4171cb
  4171ab:	pop    ecx
  4171ac:	add    BYTE PTR [eax+0x2aef1efb],dl
  4171b2:	push   es
  4171b3:	std    
  4171b4:	test   BYTE PTR [edx],0xdc
  4171b7:	mov    eax,0x1eff9e12
  4171bc:	add    dh,BYTE PTR [edi+0x7]
  4171bf:	or     bl,BYTE PTR [ecx+0x5a8ae28]
  4171c5:	bound  edi,QWORD PTR [ebx+0x47]
  4171c8:	sub    dl,BYTE PTR [esp+eiz*4]
  4171cb:	iret   
  4171cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171cd:	fcom   DWORD PTR [esi+0x46a58c45]
  4171d3:	sbb    BYTE PTR [esi],bl
  4171d5:	clc    
  4171d6:	dec    ebx
  4171d7:	xchg   edx,eax
  4171d8:	push   edi
  4171d9:	jne    0x4171b4
  4171db:	cmp    ebp,DWORD PTR [eax+0x3849aea8]
  4171e1:	and    ch,BYTE PTR [eax+0x59]
  4171e4:	mov    dl,0x43
  4171e6:	fbstp  TBYTE PTR [edx-0x4c419b1c]
  4171ec:	ror    BYTE PTR [ecx+0x4096a276],0xd
  4171f3:	loopne 0x4171df
  4171f5:	clc    
  4171f6:	mov    ecx,0x6d9ab2b1
  4171fb:	pop    ebp
  4171fc:	fcomp  QWORD PTR [edx-0x16]
  4171ff:	mov    bl,0xd9
  417201:	aad    0xff
  417203:	sti    
  417204:	sub    al,0x56
  417206:	xchg   esi,eax
  417207:	jg     0x417248
  417209:	push   edi
  41720a:	dec    esi
  41720b:	push   ss
  41720c:	push   ebx
  41720d:	cwde   
  41720e:	adc    BYTE PTR [esp+ecx*2],dh
  417211:	sbb    eax,0x3446da31
  417216:	popa   
  417217:	push   edx
  417218:	and    DWORD PTR [esi],ebx
  41721a:	xchg   esp,eax
  41721b:	jmp    DWORD PTR [esi]
  41721d:	or     bl,ch
  41721f:	add    eax,0xe67da6a3
  417224:	xor    ebp,edx
  417226:	cmp    BYTE PTR [esi-0xfd83ef8],bh
  41722c:	push   ecx
  41722d:	enter  0x5fff,0xed
  417231:	cmp    BYTE PTR [ebx-0xba99fec],0x54
  417238:	jle    0x41721b
  41723a:	bound  esp,QWORD PTR [edi-0x6ab0a4ca]
  417240:	daa    
  417241:	xchg   ebx,eax
  417242:	dec    edx
  417243:	arpl   WORD PTR [edx],di
  417245:	fnsave [esi]
  417247:	add    DWORD PTR [eax],edx
  417249:	inc    ebp
  41724a:	pushw  0xfffe
  41724d:	in     al,dx
  41724e:	int3   
  41724f:	or     DWORD PTR [esi+0x45],ebx
  417252:	test   BYTE PTR [ecx-0x35d8be15],dh
  417258:	lock jne 0x417220
  41725b:	(bad)  
  41725c:	(bad)  
  41725d:	(bad)  
  41725e:	retf   
  41725f:	xor    DWORD PTR ds:0x9173815a,edx
  417265:	iret   
  417266:	adc    eax,0x1a1c2850
  41726b:	outs   dx,BYTE PTR ds:[esi]
  41726c:	clc    
  41726d:	call   0x58931dd4
  417272:	and    bl,ah
  417274:	in     eax,0xd
  417276:	imul   DWORD PTR [ecx]
  417278:	aaa    
  417279:	outs   dx,DWORD PTR ds:[esi]
  41727a:	push   cs
  41727b:	mov    esp,0x3e392823
  417280:	mov    bh,0xe2
  417282:	lea    edx,[eax]
  417284:	lock add BYTE PTR [eax-0x1885a986],cl
  41728b:	imul   edi,DWORD PTR [edi+0x3b231bf2],0xc26e7073
  417295:	lods   eax,DWORD PTR ds:[esi]
  417296:	push   ecx
  417297:	push   eax
  417298:	inc    eax
  417299:	in     al,dx
  41729a:	outs   dx,DWORD PTR gs:[esi]
  41729c:	cdq    
  41729d:	lds    ebx,FWORD PTR [edi-0x5c]
  4172a0:	cmp    BYTE PTR [esi+0x3b],ah
  4172a3:	sbb    eax,0xaf5cde96
  4172a8:	dec    ebx
  4172a9:	mov    WORD PTR [eax+0xe],fs
  4172ac:	mov    ch,0x45
  4172ae:	mov    esi,esp
  4172b0:	inc    edi
  4172b1:	adc    al,0x2e
  4172b3:	inc    edi
  4172b4:	mov    bh,0xfa
  4172b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b7:	in     al,dx
  4172b8:	pusha  
  4172b9:	or     ebp,DWORD PTR [ebx+0x2d]
  4172bc:	inc    eax
  4172bd:	pop    esp
  4172be:	push   edx
  4172bf:	and    DWORD PTR [eax-0x4c],eax
  4172c2:	mov    edi,DWORD PTR [ebx+0x3c]
  4172c5:	adc    ch,BYTE PTR [edx]
  4172c7:	lods   eax,DWORD PTR ds:[esi]
  4172c8:	mov    bl,0x44
  4172ca:	dec    edx
  4172cb:	les    esp,FWORD PTR [ebp+0x7873b794]
  4172d1:	and    al,0x55
  4172d3:	sbb    DWORD PTR [ebx-0x12aac4e1],edi
  4172d9:	stos   DWORD PTR es:[edi],eax
  4172da:	xchg   esi,eax
  4172db:	inc    edx
  4172dc:	ror    BYTE PTR ds:0xa86511c8,0xb6
  4172e3:	(bad)  
  4172e5:	in     al,dx
  4172e6:	push   0x52
  4172e8:	xor    eax,0x33ff9613
  4172ed:	aaa    
  4172ee:	mov    edi,0x9c7f8307
  4172f3:	add    al,0xaf
  4172f5:	aam    0x74
  4172f7:	mov    al,ds:0x11d1ce37
  4172fc:	cmp    bl,ch
  4172fe:	or     al,0xc
  417300:	arpl   WORD PTR [edi-0x7c],di
  417303:	fiadd  WORD PTR [edx-0x39ecb407]
  417309:	test   DWORD PTR [ebp+ebp*4+0x7b95e455],ecx
  417310:	pop    esp
  417311:	jecxz  0x41729b
  417313:	sbb    eax,0x2a31fad3
  417318:	cmp    esi,ecx
  41731a:	mov    dl,0x28
  41731c:	add    ah,BYTE PTR [edx+eax*1-0x1820ac5a]
  417323:	or     DWORD PTR [ebx-0x5c],edx
  417326:	add    dh,BYTE PTR [ebp-0x3ea67684]
  41732c:	mov    edx,0x21fd67c3
  417331:	or     DWORD PTR [edi],eax
  417333:	sbb    eax,DWORD PTR [esi-0x1ca8a39b]
  417339:	aas    
  41733a:	and    al,0x3a
  41733c:	nop
  41733d:	xor    ch,ch
  41733f:	repnz or ebp,DWORD PTR gs:[esi+0x25]
  417344:	mov    ecx,0xc54db020
  417349:	dec    ecx
  41734a:	mov    eax,ds:0x60ec0401
  41734f:	fisubr DWORD PTR [esi+0x73]
  417352:	add    al,ch
  417354:	inc    edi
  417355:	push   0xffffffbd
  417357:	inc    edx
  417358:	pop    eax
  417359:	mov    edi,0xb146fd32
  41735e:	adc    eax,0xd99dbcac
  417363:	(bad)  
  417364:	mov    esp,0x995e26f0
  417369:	stos   DWORD PTR es:[edi],eax
  41736a:	imul   edi,DWORD PTR [edi+0x17],0xd0f53124
  417371:	push   0xf80cb5e6
  417376:	mov    al,ds:0x67f8b4b
  41737b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41737c:	mov    edx,0x3cf29cf5
  417381:	pop    ss
  417382:	dec    eax
  417383:	fs in  eax,0xce
  417386:	ins    BYTE PTR es:[edi],dx
  417387:	sbb    al,0xde
  417389:	jb     0x4173c5
  41738b:	fs push ebp
  41738d:	stos   BYTE PTR es:[edi],al
  41738e:	mov    ah,0xd4
  417390:	bnd jp 0x41736d
  417393:	je     0x41734d
  417395:	fisub  WORD PTR [eax+0x70]
  417398:	das    
  417399:	xlat   BYTE PTR ds:[ebx]
  41739a:	inc    edi
  41739b:	pop    ecx
  41739c:	xor    eax,0xd746057c
  4173a1:	ja     0x41741f
  4173a3:	test   eax,0xfc4a16b9
  4173a8:	xor    DWORD PTR [bp+di-0x3bd4],edi
  4173ad:	or     al,0x9c
  4173af:	jbe    0x417361
  4173b1:	ins    DWORD PTR es:[edi],dx
  4173b2:	or     al,0x52
  4173b4:	arpl   WORD PTR [eax+edx*8+0x4f],bp
  4173b8:	cdq    
  4173b9:	test   DWORD PTR [esi-0x2b],edi
  4173bc:	out    0x39,eax
  4173be:	push   0xffffffc0
  4173c0:	sub    eax,DWORD PTR [esi+ebp*1]
  4173c3:	js     0x4173d7
  4173c5:	sub    dl,BYTE PTR [edx+esi*1-0x37c1e212]
  4173cc:	jnp    0x41743f
  4173ce:	xor    al,0xfb
  4173d0:	and    esp,edi
  4173d2:	add    al,dl
  4173d4:	outs   dx,BYTE PTR ds:[esi]
  4173d5:	fistp  DWORD PTR [edx-0x4977a541]
  4173db:	inc    edx
  4173dc:	inc    edi
  4173dd:	fwait
  4173de:	xor    ebx,DWORD PTR [ebx-0x7a]
  4173e1:	aam    0xa7
  4173e3:	repz call 0xe8bf:0x4c1e6390
  4173eb:	add    cl,al
  4173ed:	adc    al,0xe0
  4173ef:	sub    bl,BYTE PTR [edx-0x2b1e033d]
  4173f5:	sub    DWORD PTR [esi],ecx
  4173f7:	movq   mm7,mm5
  4173fa:	xchg   BYTE PTR [edi],dh
  4173fc:	sub    BYTE PTR [esi*1-0x8c1f95f],ah
  417403:	adc    edi,DWORD PTR [ebp-0x13de0ac5]
  417409:	test   DWORD PTR [ecx+eiz*2+0x70200574],eax
  417410:	clc    
  417411:	cmp    cl,BYTE PTR [edx]
  417413:	sub    BYTE PTR [ebx-0x5],bh
  417416:	(bad)  [ecx+esi*1]
  417419:	sub    al,0xfb
  41741b:	cwde   
  41741c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41741d:	mov    dl,0xc
  41741f:	dec    esi
  417420:	cmp    eax,0x6d161a59
  417425:	dec    ebp
  417426:	mov    edi,0xcd3b5484
  41742b:	cmp    al,0x82
  41742d:	sbb    DWORD PTR [eax-0x3d5a3256],ebx
  417433:	test   eax,0x133d7d75
  417438:	dec    edx
  417439:	out    dx,eax
  41743a:	fist   WORD PTR [esi]
  41743c:	inc    esi
  41743d:	sti    
  41743e:	mov    ch,0x85
  417440:	xor    DWORD PTR [eax-0x51],eax
  417443:	out    0x86,eax
  417445:	fcomp  st(2)
  417447:	sbb    ch,al
  417449:	inc    ebp
  41744a:	lods   al,BYTE PTR ds:[esi]
  41744b:	sbb    ebp,0xffffff9a
  41744e:	cmp    dl,BYTE PTR [edx+ebp*8-0x6a]
  417452:	mov    ds:0xbb09143f,eax
  417457:	ja     0x417441
  417459:	fcom   QWORD PTR [ebx]
  41745b:	bound  esi,QWORD PTR [eax-0x24]
  41745e:	mov    dl,0x3e
  417460:	push   es
  417461:	cmp    bl,BYTE PTR [ebx]
  417463:	jbe    0x41742b
  417465:	jae    0x417476
  417467:	js     0x4174c9
  417469:	dec    edi
  41746a:	jmp    0x10eb282
  41746f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417470:	sbb    al,0x3b
  417472:	mov    BYTE PTR [eax-0x25],dh
  417475:	clc    
  417476:	mov    ah,0x18
  417478:	jecxz  0x417441
  41747a:	cmp    DWORD PTR [edi],edx
  41747c:	or     al,0x24
  41747e:	mov    eax,ds:0x4f8bca9a
  417483:	push   cs
  417484:	scas   eax,DWORD PTR es:[edi]
  417485:	jns    0x4174b1
  417487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417488:	stos   BYTE PTR es:[di],al
  41748a:	sub    al,0x6
  41748c:	jae    0x417414
  41748e:	imul   esp,DWORD PTR [ebx-0x4a],0x1251dc80
  417495:	cdq    
  417496:	outs   dx,DWORD PTR ds:[esi]
  417497:	sbb    DWORD PTR [eax+0x7f925e71],ebp
  41749d:	mov    DWORD PTR [ebx+0x17],ecx
  4174a0:	and    DWORD PTR [ebx-0x4463ce36],esi
  4174a6:	cmc    
  4174a7:	adc    esi,edx
  4174a9:	stos   BYTE PTR es:[edi],al
  4174aa:	and    ah,BYTE PTR [esi+eax*1]
  4174ad:	adc    dh,BYTE PTR [ebx-0x26e08a7b]
  4174b3:	outs   dx,BYTE PTR ds:[esi]
  4174b4:	hlt    
  4174b5:	xchg   edi,eax
  4174b6:	imul   esp,DWORD PTR [edi+0x327bc51f],0x27b28efc
  4174c0:	(bad)  
  4174c1:	mov    ebx,0x31a71643
  4174c6:	lods   eax,DWORD PTR ds:[esi]
  4174c7:	add    eax,0x377666eb
  4174cc:	out    0x42,eax
  4174ce:	and    edx,DWORD PTR [ecx-0x54f4f010]
  4174d4:	xchg   edx,eax
  4174d5:	add    al,0x16
  4174d7:	xor    al,0xbd
  4174d9:	ror    BYTE PTR [edx+0x17],1
  4174dc:	int    0x64
  4174de:	les    edx,FWORD PTR [edx+0x2fc1a3a8]
  4174e4:	xchg   ebx,eax
  4174e5:	(bad)  
  4174e6:	ins    DWORD PTR es:[edi],dx
  4174e7:	push   ecx
  4174e8:	dec    edx
  4174e9:	hlt    
  4174ea:	jg     0x417511
  4174ec:	mov    eax,ds:0x129aca81
  4174f1:	fwait
  4174f2:	mov    ebx,0x260ed2d1
  4174f7:	fcmovb st,st(3)
  4174f9:	dec    edx
  4174fa:	inc    edx
  4174fb:	pushf  
  4174fc:	fmul   QWORD PTR [ebp+0x1feeddf3]
  417502:	xor    al,0x9
  417504:	ja     0x4174c4
  417506:	mov    ecx,0xfa280a7a
  41750b:	jge    0x417517
  41750d:	jp     0x4174bc
  41750f:	xor    eax,0x45890cb0
  417514:	aam    0xc9
  417516:	sti    
  417517:	ror    DWORD PTR [ebp+0x22],0xdb
  41751b:	add    al,0x64
  41751d:	sub    eax,0xe87569b9
  417522:	cs inc esp
  417524:	aam    0x83
  417526:	arpl   WORD PTR [eax],cx
  417528:	jbe    0x4174fc
  41752a:	jle    0x417598
  41752c:	xchg   ecx,eax
  41752d:	pop    edi
  41752e:	in     eax,dx
  41752f:	arpl   WORD PTR [edi],bp
  417531:	mov    cs,WORD PTR [ebp-0x15]
  417534:	je     0x417500
  417536:	or     DWORD PTR [ebx+0x5a7580f5],0xffffffd1
  41753d:	jns    0x4174ee
  41753f:	sbb    BYTE PTR [ecx+0x6c365018],ah
  417545:	mov    dh,0x51
  417547:	scas   eax,DWORD PTR es:[edi]
  417548:	jb     0x417562
  41754a:	xchg   esi,eax
  41754b:	mov    ah,0xf3
  41754d:	int3   
  41754e:	mov    bl,0x2b
  417550:	jo     0x417502
  417552:	inc    edx
  417553:	jl     0x417506
  417555:	inc    esp
  417556:	bound  eax,QWORD PTR [ebx+eiz*8+0x13]
  41755a:	add    esi,DWORD PTR [eax-0x5]
  41755d:	pop    esp
  41755e:	xor    DWORD PTR [esi+0x265112e7],esp
  417564:	pop    edx
  417565:	rcl    BYTE PTR [ecx],0xe1
  417568:	mov    ebx,0x6ae1e764
  41756d:	retf   0x848f
  417570:	or     DWORD PTR [ebp-0x29],edi
  417573:	lock scas al,BYTE PTR es:[edi]
  417575:	fwait
  417576:	int3   
  417577:	in     eax,0x14
  417579:	ins    DWORD PTR es:[edi],dx
  41757a:	mov    DWORD PTR [eax+edi*2+0x41],ebx
  41757e:	popf   
  41757f:	ss inc esi
  417581:	call   0x4f8fdc2d
  417586:	lods   al,BYTE PTR ds:[esi]
  417587:	leave  
  417588:	push   esp
  417589:	jge    0x417541
  41758b:	sub    DWORD PTR [edx+eax*8-0x68c0f31d],ecx
  417592:	jl     0x41753f
  417594:	cmp    bh,BYTE PTR [ebx]
  417596:	cmp    ecx,DWORD PTR [ecx+0x3b65e1dd]
  41759c:	addr16 popa 
  41759e:	sbb    eax,0xea61421
  4175a3:	aaa    
  4175a4:	into   
  4175a5:	ins    BYTE PTR es:[edi],dx
  4175a6:	arpl   WORD PTR [edi-0x5a],cx
  4175a9:	dec    ecx
  4175aa:	push   ds
  4175ab:	les    ecx,FWORD PTR [ebp-0x3f8e9c11]
  4175b1:	call   0x5eea:0x527c4b36
  4175b8:	iret   
  4175b9:	test   BYTE PTR [edi+edx*8],bh
  4175bc:	pop    es
  4175bd:	cli    
  4175be:	(bad)  [eax]
  4175c0:	(bad)  
  4175c1:	mov    ch,0x57
  4175c3:	mov    DWORD PTR [ebx+0x67196da9],0xbe934288
  4175cd:	shr    eax,cl
  4175cf:	out    dx,al
  4175d0:	enter  0x93ad,0xd9
  4175d4:	or     al,0x12
  4175d6:	in     al,dx
  4175d7:	jbe    0x417594
  4175d9:	sbb    DWORD PTR [eax+0x38],edi
  4175dc:	loope  0x417572
  4175de:	push   edi
  4175df:	or     esi,DWORD PTR cs:[esi+0x118b5556]
  4175e6:	ins    BYTE PTR es:[edi],dx
  4175e7:	sti    
  4175e8:	lock stc 
  4175ea:	data16 mov al,BYTE PTR [esi]
  4175ed:	lds    edi,FWORD PTR [edx-0xa]
  4175f0:	inc    edi
  4175f1:	fstp   QWORD PTR [eax-0x549b5aed]
  4175f7:	bound  edi,QWORD PTR [ebx-0x27]
  4175fa:	jmp    0xb7c1:0xab4d7ed6
  417601:	pop    ebx
  417602:	mov    WORD PTR [edi+0x74],ss
  417605:	xor    esp,DWORD PTR [edi-0x5e]
  417608:	adc    esp,esi
  41760a:	pop    eax
  41760b:	fdivr  QWORD PTR [edx+0x32c5821b]
  417611:	pop    ds
  417612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417613:	sahf   
  417614:	(bad)  
  417616:	add    esp,esi
  417618:	inc    esp
  417619:	sub    cl,BYTE PTR [ebp+edi*1+0x5ee15142]
  417620:	cli    
  417621:	inc    ebp
  417622:	ret    
  417623:	xlat   BYTE PTR ds:[ebx]
  417624:	leave  
  417625:	mov    cs,esi
  417627:	cmp    al,BYTE PTR [ebp-0x36]
  41762a:	adc    eax,0xc4dfdf4a
  41762f:	add    eax,0xfeb6411
  417634:	test   DWORD PTR [ebx-0xbe413ce],edi
  41763a:	pop    edx
  41763b:	fsub   DWORD PTR [edi]
  41763d:	bound  edi,QWORD PTR [edx-0x4543de0e]
  417643:	mov    bh,0x4e
  417645:	ja     0x41765b
  417647:	mov    ds:0xb9d734f7,eax
  41764c:	test   dh,0x78
  41764f:	outs   dx,BYTE PTR ds:[esi]
  417650:	mov    ch,0xcf
  417652:	sub    ebx,DWORD PTR [ecx+0x3f]
  417655:	ret    
  417656:	aad    0x14
  417658:	xor    BYTE PTR [esi+0x325be774],bh
  41765e:	pop    ds
  41765f:	xor    al,0x80
  417661:	(bad)  
  417663:	fiadd  WORD PTR [ecx-0x4f]
  417666:	daa    
  417667:	fsubp  st(4),st
  417669:	lock jns 0x4176e0
  41766c:	test   DWORD PTR [eax],0x62c8ed46
  417672:	inc    edi
  417673:	ret    0x83ee
  417676:	sbb    DWORD PTR [ebx+0x374624f3],ebx
  41767c:	jp     0x41765c
  41767e:	popf   
  41767f:	add    dl,BYTE PTR [ecx-0x7b0b0b56]
  417685:	push   esp
  417686:	xor    eax,0xae4d6969
  41768b:	lods   al,BYTE PTR ds:[esi]
  41768c:	inc    ebp
  41768d:	mov    dh,0xec
  41768f:	fs repnz cld 
  417692:	sar    BYTE PTR ss:[eax-0x5ec5063c],1
  417699:	out    0xf5,eax
  41769b:	fxch   st(7)
  41769d:	ror    cl,1
  41769f:	xchg   esp,eax
  4176a0:	shl    BYTE PTR [esi],0xaf
  4176a3:	add    BYTE PTR [eax],cl
  4176a5:	nop
  4176a6:	mov    bl,0x52
  4176a8:	dec    ecx
  4176a9:	imul   eax,DWORD PTR [edi-0x7c],0xd630bcea
  4176b0:	cmp    al,0x82
  4176b2:	add    ecx,DWORD PTR [esi+0x33002b0c]
  4176b8:	fucomi st,st(4)
  4176ba:	les    edi,FWORD PTR [edi-0x7a0d0bf]
  4176c0:	push   ds
  4176c1:	cmp    DWORD PTR ds:0x7cf60db7,0x46
  4176c8:	adc    bl,BYTE PTR [esi-0x3a]
  4176cb:	or     al,0x8c
  4176cd:	in     al,dx
  4176ce:	xchg   DWORD PTR [ebx],ebp
  4176d0:	lahf   
  4176d1:	ds inc ebp
  4176d3:	icebp  
  4176d4:	pop    edx
  4176d5:	lods   al,BYTE PTR ds:[esi]
  4176d6:	je     0x41768a
  4176d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d9:	push   esi
  4176da:	mov    WORD PTR [ebp+0x25],fs
  4176dd:	cmp    BYTE PTR [ebp-0x37],dl
  4176e0:	dec    edi
  4176e1:	psubw  mm3,QWORD PTR [edx]
  4176e4:	add    bl,BYTE PTR [edx+0x20089e8f]
  4176ea:	sbb    eax,0x943f818
  4176ef:	or     DWORD PTR [ecx+0x6a],eax
  4176f2:	cmp    DWORD PTR ss:[ecx-0x62],edi
  4176f6:	out    0x72,eax
  4176f8:	lea    ebp,ds:0x2d6ec023
  4176fe:	sbb    ah,BYTE PTR [esi]
  417700:	je     0x4176dd
  417702:	push   ebp
  417703:	mov    bl,0xe8
  417705:	dec    ebx
  417706:	nop
  417707:	jns    0x417753
  417709:	jge    0x4176b7
  41770b:	call   0xa9fb:0xe030348a
  417712:	scas   eax,DWORD PTR es:[edi]
  417713:	lock imul esp,edi,0x80ade3db
  41771a:	lahf   
  41771b:	push   ebp
  41771c:	test   DWORD PTR [esi+eiz*2-0x6dc8d9ef],eax
  417723:	cmc    
  417724:	out    dx,al
  417725:	mov    bl,0x50
  417727:	push   ebx
  417728:	retf   
  417729:	cld    
  41772a:	loope  0x417731
  41772c:	mov    BYTE PTR [ecx+esi*2+0x20],bl
  417730:	std    
  417731:	cmp    DWORD PTR [esi],ebx
  417733:	mov    eax,ds:0xe13130e7
  417738:	pop    ds
  417739:	cmp    cl,dh
  41773b:	and    al,0xde
  41773d:	xchg   esp,eax
  41773e:	mov    BYTE PTR [edx-0x3d],0x4a
  417742:	es popf 
  417744:	ffree  st(4)
  417746:	pop    eax
  417747:	lds    edx,FWORD PTR [ebp+0x41]
  41774a:	sub    bh,al
  41774c:	outs   dx,DWORD PTR ds:[esi]
  41774d:	mul    bl
  41774f:	mov    esp,0xdaba0d9a
  417754:	cmp    ebx,DWORD PTR [ebp*1+0x3272b30f]
  41775b:	cmc    
  41775c:	mov    al,ds:0xe710d095
  417761:	inc    edx
  417762:	mov    ebx,0x6ac526d
  417767:	retf   
  417768:	in     al,dx
  417769:	fs test al,0x73
  41776c:	cmc    
  41776d:	add    DWORD PTR [ebx+0xc],edi
  417770:	cmc    
  417771:	xor    ecx,DWORD PTR [ecx+edx*1+0x1273616b]
  417778:	and    BYTE PTR [esi+0x3f3fab0],bl
  41777e:	inc    ebp
  41777f:	in     al,dx
  417780:	cli    
  417781:	fdivr  st,st(0)
  417783:	nop
  417784:	sti    
  417785:	test   eax,0x39e22059
  41778a:	iret   
  41778b:	les    ebx,FWORD PTR [esi+edi*4]
  41778e:	je     0x4177c5
  417790:	sub    esi,DWORD PTR [esp+ebx*4-0x29]
  417794:	xchg   ecx,eax
  417795:	mov    al,0x7a
  417797:	mov    ds:0x81692f89,al
  41779c:	je     0x4177b1
  41779e:	adc    eax,0x30c8f240
  4177a3:	mov    BYTE PTR [ecx],bl
  4177a5:	jb     0x417743
  4177a7:	or     BYTE PTR [ebx-0x52],0xcf
  4177ab:	mov    eax,0xe5c94610
  4177b0:	jns    0x41780c
  4177b2:	adc    eax,0x2705fb82
  4177b7:	in     eax,0xc3
  4177b9:	pop    ecx
  4177ba:	mov    cl,0x4d
  4177bc:	in     al,dx
  4177bd:	adc    BYTE PTR [edx+edx*1+0x5f],dl
  4177c1:	inc    dx
  4177c3:	aam    0x6c
  4177c5:	fwait
  4177c6:	mov    edx,0x297ea962
  4177cb:	shl    BYTE PTR [edx-0x25178a39],0xb6
  4177d2:	mov    ecx,0xc00b0a07
  4177d7:	das    
  4177d8:	pop    esp
  4177d9:	xchg   ebx,eax
  4177da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177db:	xor    al,0x38
  4177dd:	and    eax,DWORD PTR [edi]
  4177df:	adc    edi,edi
  4177e1:	pop    ebp
  4177e2:	xchg   edi,eax
  4177e3:	mov    ds:0x7e34e213,eax
  4177e8:	push   ebx
  4177e9:	mov    DWORD PTR [esi+ebp*1],edi
  4177ec:	das    
  4177ed:	in     al,dx
  4177ee:	sar    BYTE PTR [edi+0x52d5334f],1
  4177f4:	loop   0x4177d7
  4177f6:	jmp    DWORD PTR [eax+0x3f]
  4177f9:	pop    esi
  4177fa:	ja     0x4177a2
  4177fc:	mov    esp,0x8f8e664e
  417801:	aad    0xc9
  417803:	loop   0x4177c1
  417805:	fmul   DWORD PTR [esi-0x3e]
  417808:	stc    
  417809:	push   0xffffff99
  41780b:	inc    eax
  41780c:	imul   ebp,DWORD PTR [edx+0x2],0x71628b51
  417813:	and    edx,DWORD PTR [edx-0x601df431]
  417819:	sbb    al,0x85
  41781b:	js     0x417882
  41781d:	push   cs
  41781e:	cwde   
  41781f:	lods   al,BYTE PTR ds:[esi]
  417820:	xlat   BYTE PTR ds:[ebx]
  417821:	adc    cl,BYTE PTR [edx]
  417823:	adc    eax,0x1d9d95b2
  417828:	xchg   BYTE PTR [eax],ah
  41782a:	add    dl,BYTE PTR [ebx]
  41782c:	mov    eax,0x857d3b49
  417831:	sbb    al,0xd0
  417833:	imul   edi,DWORD PTR [ebx-0x65964287],0x31fd9743
  41783d:	mov    eax,ds:0x25df5f30
  417842:	lahf   
  417843:	imul   DWORD PTR [eax]
  417845:	aam    0x10
  417847:	pop    ebx
  417848:	fwait
  417849:	pop    esi
  41784a:	fild   DWORD PTR [ebx]
  41784c:	(bad)  
  41784d:	push   cs
  41784e:	xchg   edi,eax
  41784f:	xchg   edi,eax
  417850:	mov    ebx,gs
  417852:	lea    edx,[edi+0x1b]
  417855:	mov    eax,ds:0x23a9915b
  41785a:	imul   edx,DWORD PTR [edx+eax*8],0xe2b2edc3
  417861:	xchg   BYTE PTR [ebx-0x4cd881e0],dl
  417867:	in     eax,0x1
  417869:	mov    al,ds:0xc2e43d6d
  41786e:	aad    0xd1
  417870:	mov    esi,0x6228800b
  417875:	pop    ecx
  417876:	push   0xffffffe5
  417878:	jno    0x4178ac
  41787a:	rdmsr  
  41787c:	and    eax,0x48ab2816
  417881:	sub    BYTE PTR [esp+edx*8+0x74f0ba52],al
  417888:	dec    eax
  417889:	sub    ebp,ebx
  41788b:	dec    edi
  41788c:	popa   
  41788d:	jg     0x417871
  41788f:	sub    eax,0x26972a6e
  417894:	pop    esi
  417895:	cld    
  417896:	call   0x57e3:0x223ecdb
  41789d:	std    
  41789e:	adc    bl,cl
  4178a0:	fnsave [ebp-0x6313a04e]
  4178a6:	push   ds
  4178a7:	and    esp,DWORD PTR ds:[edi-0xd0404]
  4178ae:	in     eax,dx
  4178af:	push   ss
  4178b0:	rcl    DWORD PTR [edx+0x3614ca7],0x48
  4178b7:	cli    
  4178b8:	(bad)  
  4178b9:	or     ebx,DWORD PTR [ecx+0x78]
  4178bc:	xchg   ecx,eax
  4178bd:	cmp    DWORD PTR [ebx+0x63],esi
  4178c0:	push   ebx
  4178c1:	push   ds
  4178c2:	fs nop
  4178c4:	sub    bl,BYTE PTR [edi]
  4178c6:	xchg   edx,eax
  4178c7:	xchg   ecx,eax
  4178c8:	jne    0x41790e
  4178ca:	das    
  4178cb:	and    esp,DWORD PTR [edi]
  4178cd:	pop    ss
  4178ce:	mov    ebp,0x7c58b205
  4178d3:	shl    BYTE PTR [edi+0x7a],1
  4178d6:	xchg   edx,eax
  4178d7:	imul   esp,DWORD PTR [ebx+eax*4],0xe
  4178db:	xchg   esi,eax
  4178dc:	les    edx,FWORD PTR [esi]
  4178de:	mov    dl,0xe5
  4178e0:	hlt    
  4178e1:	mov    ch,0x0
  4178e3:	sbb    esp,ebx
  4178e5:	sbb    BYTE PTR [edx-0x6835c0ca],dh
  4178eb:	and    edx,ebx
  4178ed:	push   esi
  4178ee:	dec    edi
  4178ef:	mov    eax,0x7eef7fc7
  4178f4:	push   ds
  4178f5:	cli    
  4178f6:	int    0xa1
  4178f8:	or     cl,BYTE PTR [ecx+0x29]
  4178fb:	inc    ebp
  4178fc:	mov    edx,0x5eaa7002
  417901:	fistp  WORD PTR [edi-0x657c15a0]
  417907:	push   cs
  417908:	jecxz  0x417943
  41790a:	rcl    DWORD PTR [ebx+0x28],0xbb
  41790e:	pop    ecx
  41790f:	int3   
  417910:	jp     0x4178d2
  417912:	mov    ah,0xc1
  417914:	inc    ecx
  417915:	das    
  417916:	jecxz  0x41795b
  417918:	arpl   WORD PTR [ecx+0x7bff7b9a],si
  41791e:	and    ah,BYTE PTR [ecx-0x3d4db5]
  417924:	mov    ah,0x11
  417926:	jge    0x417987
  417928:	fild   WORD PTR [esi+0x46]
  41792b:	dec    ecx
  41792c:	pop    edi
  41792d:	push   ds
  41792e:	popa   
  41792f:	nop
  417930:	lods   al,BYTE PTR ds:[esi]
  417931:	jnp    0x417994
  417933:	pop    esi
  417934:	(bad)  
  417936:	mov    al,ds:0x2e031999
  41793b:	or     al,0x0
  41793d:	pop    ds
  41793e:	xlat   BYTE PTR ds:[ebx]
  41793f:	or     edx,edi
  417941:	dec    ecx
  417942:	rcl    DWORD PTR [edi],cl
  417944:	ds inc edi
  417946:	inc    ebp
  417947:	push   ebp
  417948:	out    0xb9,eax
  41794a:	sti    
  41794b:	xor    ebx,DWORD PTR [ebx+ebx*8+0x4101799]
  417952:	outs   dx,BYTE PTR ds:[esi]
  417953:	add    BYTE PTR [eax+0x27c3d013],bl
  417959:	arpl   WORD PTR [esi+edx*2],cx
  41795c:	mov    cs,WORD PTR [eax+0x4c21ae6d]
  417962:	add    edx,DWORD PTR [eax+0x29e868e6]
  417968:	and    eax,DWORD PTR [edi]
  41796a:	pop    ss
  41796b:	mov    ecx,0xc0ce0961
  417970:	out    dx,eax
  417971:	push   edi
  417972:	sub    eax,0xd2e15b7a
  417977:	neg    BYTE PTR [ebx-0x579a5fc8]
  41797d:	jl     0x417977
  41797f:	lahf   
  417980:	out    0xe6,eax
  417982:	rol    DWORD PTR [ecx+0x6aed64e4],cl
  417988:	pop    ss
  417989:	sbb    BYTE PTR ds:[esi+0x21985756],ah
  417990:	mov    WORD PTR [ecx],ss
  417992:	xchg   ebx,eax
  417993:	cs pop eax
  417995:	pop    ss
  417996:	out    0xd2,al
  417998:	sbb    eax,0xff73117a
  41799d:	fwait
  41799e:	in     eax,0x28
  4179a0:	pop    ecx
  4179a1:	mov    esi,0x5f477d5b
  4179a6:	push   0xddbbac54
  4179ab:	(bad)  
  4179ac:	pop    edi
  4179ad:	mov    dh,0xf2
  4179af:	out    0x22,al
  4179b1:	aas    
  4179b2:	ja     0x417943
  4179b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b5:	sub    DWORD PTR [esi+ebx*2+0x1166d9e7],esp
  4179bc:	inc    esp
  4179bd:	rol    bl,0x69
  4179c0:	mov    dl,0xa9
  4179c2:	stos   BYTE PTR es:[edi],al
  4179c3:	loope  0x41794f
  4179c5:	pushf  
  4179c6:	mov    ecx,DWORD PTR [ecx-0x57425069]
  4179cc:	mov    DWORD PTR [ebx+0x7cfa8746],ebx
  4179d2:	jnp    0x417978
  4179d4:	jmp    0x3676:0x94416f42
  4179db:	jmp    FWORD PTR [esi+eax*2-0x75]
  4179df:	(bad)  
  4179e0:	out    dx,al
  4179e1:	xor    dl,BYTE PTR [edx]
  4179e3:	(bad)  
  4179e4:	ss (bad) 
  4179e6:	mov    bl,0x33
  4179e9:	jmp    0x250eec9e
  4179ee:	pop    ebx
  4179ef:	or     DWORD PTR [edi],edi
  4179f1:	xor    DWORD PTR [edi+ebp*4],0x85e8dd29
  4179f8:	imul   ebp,esp,0x8f28de38
  4179fe:	sub    BYTE PTR [ecx+0x7],al
  417a01:	lahf   
  417a02:	jmp    0xb656a7d5
  417a07:	shr    BYTE PTR [edi+edx*8-0x30d0c072],1
  417a0e:	loope  0x417a81
  417a10:	mov    edi,0xa7c8ee68
  417a15:	xchg   esp,eax
  417a16:	je     0x417a32
  417a18:	jns    0x4179cf
  417a1a:	hlt    
  417a1b:	leave  
  417a1c:	push   esp
  417a1d:	in     eax,0x16
  417a1f:	stc    
  417a20:	sti    
  417a21:	repz in al,0xce
  417a24:	sub    dh,BYTE PTR [ecx]
  417a26:	out    dx,al
  417a27:	adc    esi,DWORD PTR [edx+0x19]
  417a2a:	add    al,al
  417a2c:	jp     0x417a13
  417a2e:	test   BYTE PTR [edi+ebp*8],0x9b
  417a32:	adc    al,0xcf
  417a34:	and    DWORD PTR [ebx+0x573725db],ebp
  417a3a:	adc    BYTE PTR [ecx+edx*4-0x3f],0xd1
  417a3f:	and    eax,0xe89a9d01
  417a44:	rol    BYTE PTR [ecx],cl
  417a46:	mov    bh,0x59
  417a48:	pushf  
  417a49:	loopne 0x417a81
  417a4b:	jmp    0xfcaea9ee
  417a50:	jl     0x417a94
  417a52:	mov    esi,0x6ec450f9
  417a57:	jl     0x417a7a
  417a59:	pop    esp
  417a5a:	out    0x18,al
  417a5c:	inc    esi
  417a5d:	test   al,0xb1
  417a5f:	jp     0x417a01
  417a61:	out    dx,al
  417a62:	fdivr  DWORD PTR [ebx-0x30446e0]
  417a68:	push   0x12
  417a6a:	dec    edx
  417a6b:	mov    ecx,0x469cd4ae
  417a70:	imul   BYTE PTR [eax+0x79]
  417a73:	ss loop 0x417a0d
  417a76:	js     0x417a84
  417a78:	xlat   BYTE PTR ds:[ebx]
  417a79:	jno    0x417a99
  417a7b:	and    al,0x8
  417a7d:	or     DWORD PTR [edx-0x6f7b096a],ebp
  417a83:	dec    edi
  417a84:	inc    eax
  417a85:	hlt    
  417a86:	mov    eax,0x27cffd85
  417a8b:	pop    es
  417a8c:	mov    bl,0xbf
  417a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8f:	and    bl,BYTE PTR [edi]
  417a91:	jns    0x417ae1
  417a93:	dec    edi
  417a94:	cmp    edx,ebp
  417a96:	pop    esi
  417a97:	sar    BYTE PTR ds:0xc399d730,0xa
  417a9e:	imul   ebx,DWORD PTR [edx],0xfffffff1
  417aa1:	cmp    DWORD PTR [edx],edx
  417aa3:	gs cdq 
  417aa5:	shl    DWORD PTR [ebp-0x7855a949],cl
  417aab:	xchg   ecx,eax
  417aac:	jecxz  0x417ab0
  417aae:	cmp    ecx,ebx
  417ab0:	icebp  
  417ab1:	inc    esi
  417ab2:	fcomp  QWORD PTR [eax+0x2ab47501]
  417ab8:	imul   ebx,DWORD PTR [edi],0x51
  417abb:	push   ebp
  417abc:	push   ds
  417abd:	pop    edi
  417abe:	enter  0xc4b,0xb
  417ac2:	sahf   
  417ac3:	fsubr  DWORD PTR [ecx+0x6b]
  417ac6:	aaa    
  417ac7:	xchg   ecx,eax
  417ac8:	mov    eax,0x4b115a1c
  417acd:	pop    ebp
  417ace:	adc    ah,dh
  417ad0:	sub    ecx,ecx
  417ad2:	mov    DWORD PTR [eax+0x101f08e8],esi
  417ad8:	jmp    0x5bd02eb5
  417add:	in     al,0xba
  417adf:	in     al,0x5
  417ae1:	(bad)  
  417ae2:	sbb    dh,al
  417ae4:	(bad)  
  417ae6:	test   al,0x22
  417ae8:	mul    BYTE PTR [esi+0x4a]
  417aeb:	sbb    DWORD PTR [edi-0x33466d9c],ebp
  417af1:	scas   eax,DWORD PTR es:[edi]
  417af2:	sar    BYTE PTR [esi-0x122d2585],0x29
  417af9:	jo     0x417b63
  417afb:	(bad)  
  417afc:	pop    edi
  417afd:	aas    
  417afe:	iret   
  417aff:	lods   eax,DWORD PTR ds:[esi]
  417b00:	push   ebp
  417b01:	leave  
  417b02:	add    dl,BYTE PTR [ebx+0x17]
  417b05:	mov    bl,0xed
  417b07:	mov    al,ds:0xfd35281b
  417b0c:	push   ebx
  417b0d:	push   ecx
  417b0e:	add    al,BYTE PTR [ebx]
  417b10:	shl    DWORD PTR [edx-0x2c73d729],cl
  417b16:	popf   
  417b17:	retf   
  417b18:	fdiv   QWORD PTR [eax+eax*1-0x33]
  417b1c:	add    al,0x19
  417b1e:	add    esp,edx
  417b20:	inc    edx
  417b21:	xchg   ebx,eax
  417b22:	mov    al,0x55
  417b24:	push   cs
  417b25:	fisubr WORD PTR ds:[eax-0x37]
  417b29:	mov    esp,0x5b4f74d7
  417b2e:	cmp    al,0x2e
  417b30:	mov    ecx,0x2552c7c0
  417b35:	das    
  417b36:	(bad)  
  417b37:	dec    edx
  417b38:	fwait
  417b39:	rcl    eax,1
  417b3b:	cmp    DWORD PTR [eax],0x7bf06c57
  417b41:	retf   
  417b42:	adc    BYTE PTR [edx+0x4e],ah
  417b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b46:	mov    edi,0x329336d5
  417b4b:	jnp    0x417b54
  417b4d:	and    al,BYTE PTR [ebx]
  417b4f:	xchg   esi,eax
  417b50:	mov    cl,ah
  417b52:	outs   dx,BYTE PTR ds:[esi]
  417b53:	xor    eax,0x39ce6c6a
  417b58:	ret    0xccfc
  417b5b:	push   cs
  417b5c:	or     BYTE PTR [edx-0x64],dl
  417b5f:	adc    edx,edx
  417b61:	repz cmp esp,ebx
  417b64:	fs jbe 0x417b1b
  417b67:	jns    0x417bb8
  417b69:	mov    al,ds:0xc1926298
  417b6e:	in     al,dx
  417b6f:	add    BYTE PTR ds:0xe4b24e12,0x4c
  417b76:	add    DWORD PTR [eax-0x5f071a21],esp
  417b7c:	in     al,dx
  417b7d:	cli    
  417b7e:	popa   
  417b7f:	test   BYTE PTR [edx-0xb],0x20
  417b83:	sub    DWORD PTR [ebx-0xec411f8],ebp
  417b89:	push   esp
  417b8a:	imul   ebp,DWORD PTR [ebp+0x16c3224b],0xfffffff7
  417b91:	xchg   ebp,eax
  417b92:	add    ebp,DWORD PTR [esp+ecx*4]
  417b95:	popf   
  417b96:	mov    ds:0x11404d1d,al
  417b9b:	mov    ds:0x39b4e112,eax
  417ba0:	xchg   esp,eax
  417ba1:	fs in  eax,0x76
  417ba4:	iret   
  417ba5:	(bad)  
  417ba6:	fsubr  DWORD PTR [esi]
  417ba8:	dec    eax
  417ba9:	mov    dl,0xab
  417bab:	sahf   
  417bac:	ret    
  417bad:	mov    dh,BYTE PTR [edi]
  417baf:	aam    0x3e
  417bb1:	cmp    BYTE PTR [ebx+0x48313451],bl
  417bb7:	popa   
  417bb8:	push   0x13
  417bba:	push   edi
  417bbb:	add    esp,DWORD PTR [ebx-0x1b0a7004]
  417bc1:	mov    ebx,gs
  417bc3:	mov    edx,DWORD PTR [edi+0x1d]
  417bc6:	mov    al,0x3f
  417bc8:	or     BYTE PTR [edx-0x6a9bb30d],ah
  417bce:	dec    edi
  417bcf:	test   cl,bl
  417bd1:	xor    DWORD PTR [ecx-0x29],edx
  417bd4:	rep outs dx,DWORD PTR ds:[esi]
  417bd6:	lock adc DWORD PTR [esi+ecx*8+0x329d64f],ebx
  417bde:	sbb    DWORD PTR cs:[eax-0x596221a4],edx
  417be5:	or     dl,bl
  417be7:	pop    esp
  417be8:	xor    esp,DWORD PTR [ebx+0x79]
  417beb:	push   ebp
  417bec:	mov    esp,DWORD PTR [ebp-0x384df7f0]
  417bf2:	les    eax,FWORD PTR [edi+0x41]
  417bf5:	scas   eax,DWORD PTR es:[edi]
  417bf6:	push   esp
  417bf7:	shl    edx,0xa3
  417bfa:	retf   
  417bfb:	shl    edi,cl
  417bfd:	leave  
  417bfe:	xor    eax,0x258e5f22
  417c03:	imul   eax,DWORD PTR [edi+edi*1],0x2b4f7123
  417c0a:	add    dh,dl
  417c0c:	mov    ebx,0xd9d4f59f
  417c11:	test   DWORD PTR [eax-0x5f],0xb83f54f2
  417c18:	sub    dh,BYTE PTR ss:[ebx-0x2b]
  417c1c:	(bad)  
  417c1e:	push   esi
  417c1f:	out    0x4,eax
  417c21:	in     al,0xba
  417c23:	mov    edi,0xc8501c4c
  417c28:	dec    ebp
  417c29:	jmp    0x417be1
  417c2b:	mov    eax,0x13fb9466
  417c30:	cmp    al,0xd0
  417c32:	pop    eax
  417c33:	inc    edi
  417c34:	std    
  417c35:	mov    edx,DWORD PTR [ebx+0x32]
  417c38:	jl     0x417c10
  417c3a:	mov    ch,0xea
  417c3c:	cmp    BYTE PTR [edi-0x25404b98],0x92
  417c43:	cs and eax,0x8ace2d21
  417c49:	js     0x417c51
  417c4b:	sbb    bh,BYTE PTR [ebx-0x28]
  417c4e:	mov    ch,0xfc
  417c50:	push   ds
  417c51:	jl     0xa7658d63
  417c57:	jae    0x417cbb
  417c59:	mov    DWORD PTR [edi+ecx*8+0x30f3eb16],ecx
  417c60:	(bad)  
  417c61:	and    al,0x5d
  417c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c64:	retf   0x2a42
  417c67:	mov    al,0xdc
  417c69:	call   0x8701cd33
  417c6e:	ror    DWORD PTR [eax-0x6e],0x3a
  417c72:	in     al,dx
  417c73:	adc    ah,dh
  417c75:	arpl   WORD PTR [eax+esi*8+0x4a],cx
  417c79:	sub    dl,BYTE PTR [edx+0xa228076]
  417c7f:	xor    al,0xfa
  417c81:	xchg   edi,eax
  417c82:	ins    DWORD PTR es:[edi],dx
  417c83:	test   al,0x42
  417c85:	sbb    BYTE PTR [ecx],dl
  417c87:	aaa    
  417c88:	mov    WORD PTR [ecx],?
  417c8a:	je     0x417c65
  417c8c:	clc    
  417c8d:	push   edx
  417c8e:	xor    dh,ah
  417c90:	lods   eax,DWORD PTR ds:[esi]
  417c91:	ins    BYTE PTR es:[edi],dx
  417c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c93:	sti    
  417c94:	sbb    DWORD PTR [edx-0x17cdbdb3],esi
  417c9a:	xlat   BYTE PTR ds:[ebx]
  417c9b:	aas    
  417c9c:	xchg   BYTE PTR [ebx+0x1c9f99bd],ah
  417ca2:	mov    bl,0xcc
  417ca4:	lods   al,BYTE PTR ds:[esi]
  417ca5:	ror    cl,cl
  417ca7:	push   0x104584e8
  417cac:	xchg   esp,eax
  417cad:	loop   0x417c59
  417caf:	jb     0x417cd1
  417cb1:	into   
  417cb2:	push   0x3
  417cb4:	imul   ecx,DWORD PTR [edi+0x41],0xafdcc486
  417cbb:	jmp    0x927:0x4f40f4b7
  417cc2:	ret    0x23bd
  417cc5:	xchg   esi,eax
  417cc6:	cli    
  417cc7:	les    ebx,FWORD PTR [esi-0x6b]
  417cca:	sbb    DWORD PTR [eax+eax*2+0x10],esi
  417cce:	mov    dh,0xa9
  417cd0:	retf   0xb4af
  417cd3:	lods   al,BYTE PTR ds:[esi]
  417cd4:	fisubr WORD PTR [ebp+0x7577e5fe]
  417cda:	jne    0x417c60
  417cdc:	cli    
  417cdd:	dec    ebx
  417cde:	jmp    0x6d89be08
  417ce3:	jmp    0x7339f4e1
  417ce8:	jmp    0xe2ee7372
  417ced:	inc    ecx
  417cee:	std    
  417cef:	pop    ss
  417cf0:	push   edx
  417cf1:	aaa    
  417cf2:	adc    DWORD PTR [edx+0x5b],esp
  417cf5:	xchg   DWORD PTR [ebp+0x7e75494c],edx
  417cfb:	outs   dx,DWORD PTR ds:[esi]
  417cfc:	pop    ds
  417cfd:	fdiv   DWORD PTR [eax-0x6614ad06]
  417d03:	lods   al,BYTE PTR ds:[esi]
  417d04:	sub    bl,BYTE PTR [ecx]
  417d06:	mov    dh,0x1d
  417d08:	in     eax,0x9d
  417d0a:	push   0xffffffaa
  417d0c:	xchg   DWORD PTR [eax+0x18631f3c],ecx
  417d12:	mov    al,ds:0x5fbbb507
  417d17:	shl    BYTE PTR [edi+0x22],1
  417d1a:	cli    
  417d1b:	in     eax,dx
  417d1c:	and    eax,0x679a5459
  417d21:	bound  esp,QWORD PTR [ecx+0x79]
  417d24:	leave  
  417d25:	mov    al,ds:0x2c6040dd
  417d2a:	mov    bh,0x49
  417d2c:	jb     0x417d2d
  417d2e:	jno    0x417d3c
  417d30:	add    al,BYTE PTR [esi-0x3eca88e9]
  417d36:	ret    0x42
  417d39:	imul   esp,DWORD PTR [edx],0xb7380048
  417d3f:	mov    ch,0x20
  417d41:	sbb    bl,BYTE PTR [esi+eiz*1-0x66]
  417d45:	add    ch,BYTE PTR [ebx]
  417d47:	cli    
  417d48:	pop    ss
  417d49:	xchg   ecx,eax
  417d4a:	loop   0x417d39
  417d4c:	sbb    eax,0x9095f4b7
  417d51:	cmp    eax,0x55edb8d7
  417d56:	mov    ebx,ds
  417d58:	xchg   esp,eax
  417d59:	xor    ebx,DWORD PTR [esi-0x79a20de4]
  417d5f:	mov    dh,0xf8
  417d61:	inc    esi
  417d62:	mov    ebp,0x5ea69d9b
  417d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d68:	mov    eax,ds:0xe70714f0
  417d6d:	sub    BYTE PTR [ebx-0x1637630a],ah
  417d73:	rcr    ah,0x16
  417d76:	imul   ecx,DWORD PTR [esi-0x3a],0xffffffd7
  417d7a:	or     DWORD PTR [edi-0x56],0x25f2503e
  417d81:	js     0x417d0b
  417d83:	call   0x7ab5:0x8d09f3bf
  417d8a:	jecxz  0x417e02
  417d8c:	sub    eax,0x8eb8ed41
  417d91:	xor    BYTE PTR [eax+0x52],0xa2
  417d95:	in     eax,dx
  417d96:	out    0x5e,eax
  417d98:	pop    gs
  417d9a:	mov    eax,0xcfd8d94f
  417d9f:	adc    al,BYTE PTR [edx]
  417da1:	clc    
  417da2:	loope  0x417e22
  417da4:	test   DWORD PTR [ebx],edx
  417da6:	push   esi
  417da7:	push   ebx
  417da8:	mov    dh,0xa
  417daa:	cmp    dh,BYTE PTR [edx]
  417dac:	in     eax,0xd8
  417dae:	xchg   BYTE PTR [ebx-0x7d],bl
  417db1:	cs xlat BYTE PTR gs:[ebx]
  417db4:	cmp    bh,BYTE PTR [ebx+0x68]
  417db7:	pop    eax
  417db8:	inc    ecx
  417db9:	push   edx
  417dba:	sbb    al,0x7
  417dbc:	push   ss
  417dbd:	test   BYTE PTR [eax-0x36],dh
  417dc0:	(bad)  
  417dc1:	push   ss
  417dc2:	repnz fisttp QWORD PTR [bx]
  417dc6:	mov    esp,0xe432b260
  417dcb:	add    al,0xe4
  417dcd:	push   ebx
  417dce:	imul   ebp,edi,0xffffffc8
  417dd1:	or     ah,dh
  417dd3:	xchg   esp,eax
  417dd4:	sahf   
  417dd5:	outs   dx,BYTE PTR ds:[esi]
  417dd6:	jnp    0x417e4e
  417dd8:	xchg   edx,eax
  417dd9:	ror    edi,0xac
  417ddc:	call   0xd0b182c0
  417de1:	popf   
  417de2:	fidivr WORD PTR [esi+0x72]
  417de5:	mov    BYTE PTR [ebx+0x8],ch
  417de8:	xchg   esi,eax
  417de9:	mov    fs,WORD PTR [ecx+eax*1-0xa]
  417ded:	cmp    eax,0x7b985beb
  417df2:	cmp    dl,BYTE PTR [ecx-0x36]
  417df5:	jle    0x417ddc
  417df7:	test   al,0x86
  417df9:	shl    DWORD PTR [ecx],0xb5
  417dfc:	mov    BYTE PTR [esi-0x3c],cl
  417dff:	ret    0xc11c
  417e02:	repz sbb al,0xbc
  417e05:	test   eax,0x3e6370bf
  417e0a:	ja     0x417e73
  417e0c:	mov    ecx,es
  417e0e:	mov    al,ds:0x5c0e68ab
  417e13:	adc    al,0xd0
  417e15:	dec    eax
  417e16:	push   edx
  417e17:	fidivr DWORD PTR [esi+0xb]
  417e1a:	jg     0x417e7d
  417e1c:	in     al,0x95
  417e1e:	xor    eax,0xf165459e
  417e23:	mov    esp,DWORD PTR [eax+0x3fa1e74f]
  417e29:	ret    0x9018
  417e2c:	ds cdq 
  417e2e:	loope  0x417e1a
  417e30:	(bad)  
  417e32:	cmc    
  417e33:	jl     0x417eab
  417e35:	ins    BYTE PTR es:[edi],dx
  417e36:	or     DWORD PTR ds:0xa6a2f876,eax
  417e3c:	test   eax,0x5408f92a
  417e41:	shl    ch,0x18
  417e44:	sbb    bh,dh
  417e46:	or     esi,DWORD PTR [esi-0x80]
  417e49:	inc    esp
  417e4a:	jno    0x417df3
  417e4c:	and    eax,0xf9deda75
  417e51:	test   DWORD PTR [edi+0x5c],0x7d38b6aa
  417e58:	les    eax,FWORD PTR [ebp-0x49e78000]
  417e5e:	jge    0x417e26
  417e60:	imul   ebx,DWORD PTR [eax+0x13352863],0x2e
  417e67:	out    0xdf,al
  417e69:	lods   al,BYTE PTR ds:[esi]
  417e6a:	cmp    al,0x0
  417e6c:	cli    
  417e6d:	leave  
  417e6e:	fisttp QWORD PTR [ebp-0x79]
  417e71:	xor    al,0xe5
  417e73:	sbb    al,0x5a
  417e75:	(bad)  
  417e76:	(bad)  
  417e77:	lahf   
  417e78:	xchg   edx,eax
  417e79:	repnz ins DWORD PTR es:[edi],dx
  417e7b:	in     eax,0xc8
  417e7d:	sar    DWORD PTR [edx+0xb],0xf6
  417e81:	adc    al,0xda
  417e83:	sub    BYTE PTR [esi],bl
  417e85:	sbb    al,0x7f
  417e87:	jg     0x417ede
  417e89:	retf   0x9bf
  417e8c:	push   ebp
  417e8d:	jbe    0x417e96
  417e8f:	push   esp
  417e90:	loopne 0x417f04
  417e92:	inc    edx
  417e93:	addr16 pop ebx
  417e95:	pushf  
  417e96:	jg     0x417efc
  417e98:	out    dx,al
  417e99:	pushf  
  417e9a:	and    ebp,DWORD PTR [ebx-0x65]
  417e9d:	dec    esp
  417e9e:	xor    DWORD PTR [eax+0x6b811c71],0x79
  417ea5:	and    ebx,DWORD PTR [eax-0x34]
  417ea8:	mov    bl,0x40
  417eaa:	pop    es
  417eab:	scas   al,BYTE PTR es:[edi]
  417eac:	jo     0x417f1a
  417eae:	push   0x3cdd456
  417eb3:	ffreep st(7)
  417eb5:	sar    bl,1
  417eb7:	push   0xffffffa5
  417eb9:	(bad)  
  417eba:	pop    ebp
  417ebb:	call   0xcc34173d
  417ec0:	out    0x70,eax
  417ec2:	add    al,0x77
  417ec4:	mov    WORD PTR [esi],es
  417ec6:	test   al,0x6e
  417ec8:	jl     0x417e9c
  417eca:	bound  ebp,QWORD PTR [esi-0x63d59a99]
  417ed0:	jmp    0x85926730
  417ed5:	cmc    
  417ed6:	in     eax,dx
  417ed7:	test   eax,0x70c119b0
  417edc:	icebp  
  417edd:	repnz pop ebp
  417edf:	add    al,bl
  417ee1:	ds call 0x4d28:0x4952742d
  417ee9:	push   ds
  417eea:	xchg   esp,eax
  417eeb:	jmp    0x417f2d
  417eed:	lea    esp,[esi-0x69d11cbf]
  417ef3:	or     edx,DWORD PTR [esi+0x4957b76a]
  417ef9:	jbe    0x417ea5
  417efb:	xlat   BYTE PTR ds:[ebx]
  417efd:	or     ecx,DWORD PTR [esi-0x6]
  417f00:	jg     0x8c222f24
  417f06:	pusha  
  417f07:	out    dx,al
  417f08:	xor    eax,0xf3e0c4b8
  417f0d:	jge    0x417efc
  417f0f:	and    DWORD PTR [edi+0x36],ebx
  417f12:	icebp  
  417f13:	jg     0x417e98
  417f15:	sub    eax,0x353df374
  417f1a:	push   eax
  417f1b:	or     BYTE PTR [ecx+edx*2],ch
  417f1e:	test   eax,0x39c26574
  417f23:	pop    esp
  417f24:	mov    ah,0xd1
  417f26:	retf   
  417f27:	imul   ebx,DWORD PTR [esi+0xe1931af],0xa
  417f2e:	cmp    ah,BYTE PTR [ebx+0x7]
  417f31:	pop    ds
  417f32:	sar    DWORD PTR [eax-0x57],cl
  417f35:	data16 fs aaa 
  417f38:	jg     0x417eea
  417f3a:	adc    dh,BYTE PTR [ebx]
  417f3c:	popa   
  417f3d:	xchg   edi,eax
  417f3e:	jno    0x417f65
  417f40:	sbb    eax,edx
  417f42:	jl     0x417edc
  417f44:	and    eax,0xda719f14
  417f49:	or     eax,0x3aa7ede4
  417f4e:	inc    ebp
  417f4f:	cmp    al,0x36
  417f51:	add    BYTE PTR [ebp-0x159839e2],ah
  417f57:	(bad)  
  417f58:	daa    
  417f59:	and    bl,BYTE PTR [ecx+0x52]
  417f5c:	scas   eax,DWORD PTR es:[edi]
  417f5d:	sahf   
  417f5e:	cmp    DWORD PTR [edi+ecx*1+0x7f7de48],ebx
  417f65:	xchg   ebx,eax
  417f66:	imul   edi,esp,0x68
  417f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f6a:	push   ecx
  417f6b:	imul   edx,DWORD PTR [ecx-0x74b98cd3],0x42
  417f72:	sahf   
  417f73:	sbb    cl,dl
  417f75:	pop    ebx
  417f76:	fadd   QWORD PTR [ecx-0x7]
  417f79:	xchg   DWORD PTR [eax+0x51e3a397],edx
  417f7f:	and    al,0xae
  417f81:	add    cl,BYTE PTR ds:0x7fbf434
  417f87:	mov    esp,0x3eb8961
  417f8c:	and    BYTE PTR [ebx-0x1f475712],ch
  417f92:	or     bl,0x30
  417f95:	popa   
  417f96:	push   ecx
  417f97:	mov    esi,0x4eaa410a
  417f9c:	out    0xf,eax
  417f9e:	xor    eax,0x61e87aa3
  417fa3:	dec    esp
  417fa4:	jecxz  0x417fb8
  417fa6:	fidiv  DWORD PTR [edx+0x5d]
  417fa9:	mov    dh,0x65
  417fab:	inc    ecx
  417fac:	les    ebp,FWORD PTR [ebx]
  417fae:	out    0xd5,eax
  417fb0:	repnz retf 0x592d
  417fb4:	in     al,0x70
  417fb6:	nop    DWORD PTR [edi+0x2ef3e462]
  417fbd:	dec    ecx
  417fbe:	hlt    
  417fbf:	add    BYTE PTR [edx+0x1e],0xbb
  417fc3:	adc    cl,BYTE PTR [edi]
  417fc5:	mov    bl,0x78
  417fc7:	mov    dl,0xe5
  417fc9:	mov    BYTE PTR [edx+0x11657ac2],dh
  417fcf:	leave  
  417fd0:	into   
  417fd1:	mov    ecx,0x218718ed
  417fd6:	mov    ebp,DWORD PTR [ebx+0x32f83fc4]
  417fdc:	imul   DWORD PTR [esi+0x4f]
  417fdf:	and    eax,0x278e9e0b
  417fe4:	sub    BYTE PTR [ebx+0x1eb8cdd],ch
  417fea:	sbb    eax,0xe24ee67f
  417fef:	leave  
  417ff0:	mov    WORD PTR [esi-0x2d],?
  417ff3:	inc    BYTE PTR [ecx-0x25dbf48b]
  417ff9:	sbb    DWORD PTR ds:0xfe3e082f,ebx
  417fff:	inc    ebp
  418000:	push   cs
  418001:	sub    al,0x5d
  418003:	push   ss
  418004:	imul   esi,esi,0x37
  418007:	(bad)  
  418008:	sti    
  418009:	out    dx,al
  41800a:	sbb    eax,0x7269bfc1
  41800f:	fld    QWORD PTR [edx-0x2e]
  418012:	aas    
  418013:	daa    
  418014:	mov    bl,0xf6
  418016:	sub    eax,0x2233d6d5
  41801b:	icebp  
  41801c:	inc    esi
  41801d:	les    ecx,FWORD PTR [edi+edi*8]
  418020:	xor    DWORD PTR [ebx],eax
  418022:	sbb    edx,DWORD PTR [eax]
  418024:	ficomp WORD PTR [esi-0x49929f04]
  41802a:	ret    
  41802b:	or     DWORD PTR [ebx-0x363223bc],0x19
  418032:	pusha  
  418033:	jecxz  0x417fd9
  418035:	dec    ecx
  418036:	cmp    BYTE PTR ds:0x375fad38,ch
  41803c:	pop    esi
  41803d:	push   ecx
  41803e:	jne    0x41801b
  418040:	mov    dl,0x48
  418042:	and    bl,BYTE PTR [ebp-0x5e]
  418045:	xlat   BYTE PTR ds:[ebx]
  418046:	scas   al,BYTE PTR es:[edi]
  418047:	in     al,dx
  418048:	cmp    edi,edx
  41804a:	in     al,0xeb
  41804c:	cwde   
  41804d:	mov    ds:0x3441637c,al
  418052:	lods   al,BYTE PTR ds:[esi]
  418053:	pop    esp
  418054:	and    BYTE PTR ds:0xd6367b66,0x48
  41805b:	add    DWORD PTR [esp-0x67],0xd2ac40bc
  418063:	shr    BYTE PTR [ebx],0x6b
  418066:	mov    WORD PTR [edi+edx*4+0x36dc413c],fs
  41806d:	inc    eax
  41806e:	or     DWORD PTR ds:0x2170ae24,esi
  418074:	retf   
  418075:	(bad)  
  418076:	lods   eax,DWORD PTR ds:[esi]
  418077:	das    
  418078:	push   edx
  418079:	xor    BYTE PTR [ecx*1+0x3ce3150a],dl
  418080:	out    0x2f,eax
  418082:	mov    ebp,0x8fcf9924
  418087:	into   
  418088:	cmp    BYTE PTR [ecx-0x51],dl
  41808b:	(bad)  
  41808c:	xor    DWORD PTR [edx],0x99dec9a1
  418092:	in     al,dx
  418093:	lods   al,BYTE PTR ds:[esi]
  418094:	dec    edi
  418095:	adc    eax,0xabf145a0
  41809a:	iret   
  41809b:	xchg   BYTE PTR [ecx],dl
  41809d:	scas   al,BYTE PTR es:[edi]
  41809e:	and    DWORD PTR [edx+0x6],esp
  4180a1:	jbe    0x41804c
  4180a3:	mov    dl,0x4b
  4180a5:	jae    0x418091
  4180a7:	sbb    al,0xfb
  4180a9:	sbb    edx,edx
  4180ab:	dec    esp
  4180ac:	test   al,0x1d
  4180ae:	sti    
  4180af:	ins    BYTE PTR es:[edi],dx
  4180b0:	mov    eax,ds:0x30390d0d
  4180b5:	into   
  4180b6:	pop    edx
  4180b7:	into   
  4180b8:	xlat   BYTE PTR ds:[ebx]
  4180b9:	sahf   
  4180ba:	adc    al,0x62
  4180bc:	jge    0x418111
  4180be:	xchg   edx,eax
  4180bf:	mov    edx,0xaabddc9c
  4180c4:	popf   
  4180c5:	addr16 in eax,0x61
  4180c8:	push   ebp
  4180c9:	or     edi,eax
  4180cb:	fiadd  WORD PTR [edx+0x736b7153]
  4180d1:	push   cs
  4180d2:	sbb    DWORD PTR [edx-0x6d5bc552],edx
  4180d8:	popa   
  4180d9:	mov    esi,0xc1ced5fe
  4180de:	xchg   esp,eax
  4180df:	cmovge esp,DWORD PTR [esi-0x1f]
  4180e3:	xchg   esi,eax
  4180e4:	push   ds
  4180e5:	sti    
  4180e6:	in     al,0x7f
  4180e8:	jle    0x418149
  4180ea:	pop    edx
  4180eb:	adc    BYTE PTR ds:0x8626a58f,ah
  4180f1:	mov    edi,0xbb693ce8
  4180f6:	pop    DWORD PTR [esi]
  4180f8:	xchg   ebx,eax
  4180f9:	mov    ah,0x10
  4180fb:	into   
  4180fc:	rcr    DWORD PTR [ebx+edi*8+0x625d5ae7],1
  418103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418104:	iret   
  418105:	sub    BYTE PTR [ebx+0x58908d0],dh
  41810b:	inc    esp
  41810c:	mov    ch,0x4
  41810e:	sbb    eax,0x8e568edc
  418113:	shl    DWORD PTR [edx-0x5d],0x36
  418117:	inc    esi
  418118:	mov    bh,0x95
  41811a:	rep stos BYTE PTR es:[edi],al
  41811c:	mov    eax,ds:0x8e8fcff2
  418121:	(bad)  
  418122:	ja     0x4180a6
  418124:	push   ebx
  418125:	call   0xd102:0x220c0970
  41812c:	inc    ebx
  41812d:	cmp    ecx,DWORD PTR [ebx+0xa6d895d]
  418133:	mov    cl,0xf6
  418135:	mov    DWORD PTR [ecx],ecx
  418137:	mov    bl,0x2a
  418139:	call   0x4944:0x84f335c7
  418140:	or     DWORD PTR [ecx],edi
  418142:	push   esp
  418143:	es dec ecx
  418145:	push   cs
  418146:	pop    ss
  418147:	pop    esp
  418148:	gs stos DWORD PTR es:[edi],eax
  41814a:	not    BYTE PTR [ecx+0x35]
  41814d:	mov    dh,0x1f
  41814f:	sub    ebp,DWORD PTR [edx+esi*4+0x40]
  418153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418154:	mov    esi,0x5e65b854
  418159:	jge    0x41815e
  41815b:	pop    eax
  41815c:	pushf  
  41815d:	jp     0x418115
  41815f:	call   0x37fe69ae
  418164:	jae    0x4181c8
  418166:	cmp    BYTE PTR [ecx+0x42],al
  418169:	xchg   edi,eax
  41816a:	or     eax,0xe975699f
  41816f:	pop    edx
  418170:	pop    ss
  418171:	outs   dx,BYTE PTR ds:[esi]
  418172:	(bad)  
  418173:	arpl   WORD PTR [ebx+0x25],ax
  418176:	vsqrtsd xmm4,xmm7,xmm6
  41817a:	int    0xa3
  41817c:	pop    ebx
  41817d:	retf   0x94bb
  418180:	leave  
  418181:	adc    dh,BYTE PTR [ecx+0x7d]
  418184:	jne    0x41816d
  418186:	(bad)  
  418187:	sub    bl,BYTE PTR [ecx-0x5a9d86bc]
  41818d:	rcr    BYTE PTR [esi-0x238ccd0f],cl
  418193:	imul   ebx,DWORD PTR [eax-0x60],0xffffff8e
  418197:	mov    bh,0x7e
  418199:	mov    al,ds:0x35099e11
  41819e:	xor    eax,0xfffa47d1
  4181a3:	mov    dh,0x9f
  4181a5:	call   0xcc3a:0x64f2b36c
  4181ac:	lods   al,BYTE PTR ds:[esi]
  4181ad:	arpl   WORD PTR [edi-0x1d],ax
  4181b0:	cli    
  4181b1:	(bad)  
  4181b2:	shr    BYTE PTR [ecx-0x3f9cc2a],1
  4181b8:	in     al,0x8d
  4181ba:	pop    ebx
  4181bb:	pusha  
  4181bc:	pop    eax
  4181bd:	cmp    eax,0x167b1911
  4181c2:	jg     0x41822a
  4181c4:	ins    DWORD PTR es:[edi],dx
  4181c5:	test   BYTE PTR [edi],0x2f
  4181c8:	(bad)  
  4181c9:	shl    DWORD PTR [ebp-0x797bcf6d],1
  4181cf:	sbb    ah,BYTE PTR [ecx]
  4181d1:	adc    al,0x54
  4181d3:	jmp    0x753c9670
  4181d8:	(bad)  
  4181d9:	dec    esp
  4181da:	xchg   edx,eax
  4181db:	dec    ebx
  4181dc:	icebp  
  4181dd:	push   ecx
  4181de:	loopne 0x4181c4
  4181e0:	xor    esp,edi
  4181e2:	or     DWORD PTR [ebx],ecx
  4181e4:	jmp    0x418256
  4181e6:	cdq    
  4181e7:	inc    ebx
  4181e8:	push   0x9ca42af
  4181ed:	pusha  
  4181ee:	bound  edx,QWORD PTR [esi+ebx*1+0x3f5b03a8]
  4181f5:	sub    DWORD PTR [edx],edx
  4181f7:	jg     0x418215
  4181f9:	sahf   
  4181fa:	fstp   TBYTE PTR [ecx-0x6be63d36]
  418200:	jnp    0x418265
  418202:	jl     0x418206
  418204:	jmp    0x418274
  418206:	sub    ebx,DWORD PTR [ecx+0x5e106191]
  41820c:	iret   
  41820d:	dec    ebx
  41820e:	into   
  41820f:	cdq    
  418210:	test   BYTE PTR [edi+0x58],bl
  418213:	shl    BYTE PTR [edi],0x79
  418216:	adc    al,0x2c
  418218:	sbb    eax,0x4372702b
  41821d:	fstp   DWORD PTR [eax-0x2f75146a]
  418223:	adc    eax,DWORD PTR [edi-0x1]
  418226:	xor    DWORD PTR [edi+0xa8dc897],ebx
  41822c:	sbb    DWORD PTR cs:[ecx-0x33ad58ae],esi
  418233:	mov    esp,0x8a839e0e
  418238:	test   al,0xcf
  41823a:	in     eax,0xdd
  41823c:	sub    al,bh
  41823e:	imul   edi,DWORD PTR [ecx],0xceac0d22
  418244:	ret    
  418245:	dec    esi
  418246:	shl    ebp,0xcf
  418249:	les    esp,FWORD PTR [eax]
  41824b:	xchg   BYTE PTR [eax+0x4c71a748],bh
  418251:	cmp    al,0x81
  418253:	or     cl,dl
  418255:	pop    edx
  418256:	jp     0x41823b
  418258:	push   ebx
  418259:	jne    0x418228
  41825b:	in     al,0xfd
  41825d:	and    ah,BYTE PTR [esi-0x4e17462e]
  418263:	outs   dx,DWORD PTR ds:[esi]
  418264:	add    al,0xcc
  418266:	(bad)  
  418267:	loopne 0x418232
  418269:	xor    BYTE PTR [edi+0x2cfe1780],cl
  41826f:	lock lea esp,[esi-0x62b7c4fd]
  418276:	outs   dx,DWORD PTR ds:[esi]
  418277:	aad    0xde
  418279:	adc    eax,0x9b7c0949
  41827e:	loop   0x4182b8
  418280:	jp     0x41829a
  418282:	xchg   BYTE PTR [ecx-0x3582f51f],dl
  418288:	xlat   BYTE PTR ds:[ebx]
  418289:	mov    ebp,0xfd1ef76e
  41828e:	mov    al,BYTE PTR [edi+0x17e96f8e]
  418294:	ins    DWORD PTR es:[edi],dx
  418295:	bound  edi,QWORD PTR [eax]
  418297:	pop    es
  418298:	dec    ebx
  418299:	xchg   ecx,ebp
  41829b:	fstp   TBYTE PTR [ebx]
  41829d:	xor    ch,BYTE PTR [eax-0x7c809e83]
  4182a3:	cmp    eax,DWORD PTR [edi-0x32ffc59]
  4182a9:	lahf   
  4182aa:	adc    cl,BYTE PTR [edx-0x7]
  4182ad:	lods   eax,DWORD PTR ds:[esi]
  4182ae:	adc    ebx,esp
  4182b0:	jmp    0x85d2a909
  4182b5:	fcomp  QWORD PTR [ecx+0x791d8ed4]
  4182bb:	xchg   esp,eax
  4182bc:	xchg   ecx,eax
  4182bd:	(bad)
  4182c2:	aaa    
  4182c3:	add    DWORD PTR [edx],ebp
  4182c5:	jl     0x41831b
  4182c7:	jne    0x4182a9
  4182c9:	push   ebp
  4182ca:	je     0x4182b7
  4182cc:	mov    edi,0x273d8ae7
  4182d1:	fmul   QWORD PTR [edx+0x30]
  4182d4:	jno    0x418355
  4182d6:	push   ds
  4182d7:	sub    al,0x80
  4182d9:	mov    bl,0xca
  4182db:	test   DWORD PTR [ebx+edi*1-0x32],ecx
  4182df:	or     BYTE PTR [eax],cl
  4182e1:	sbb    esp,DWORD PTR [ebx+ebp*4+0x1da8f4d2]
  4182e8:	mov    edi,0x8fbea45c
  4182ed:	inc    edx
  4182ee:	xchg   DWORD PTR [edx+edi*4+0xd],ebx
  4182f2:	add    esp,DWORD PTR [edi]
  4182f4:	aad    0x2f
  4182f6:	lds    edx,FWORD PTR [ecx]
  4182f8:	jge    0x4182e9
  4182fa:	(bad)  
  4182fb:	or     al,0xc8
  4182fd:	dec    edi
  4182fe:	xchg   edi,eax
  4182ff:	or     al,0xc9
  418301:	pop    ecx
  418302:	xor    dh,BYTE PTR [eax-0x2b]
  418305:	lahf   
  418306:	jl     0x41829f
  418308:	rcr    DWORD PTR [eax+0xa8ca465],0x98
  41830f:	sbb    al,0xd0
  418311:	cmp    edx,DWORD PTR [ebp+0x382f7966]
  418317:	clc    
  418318:	cmp    cl,bh
  41831a:	push   ebx
  41831b:	ror    BYTE PTR [esi+0x37],cl
  41831e:	push   esi
  41831f:	adc    DWORD PTR [esi+0x7a],edi
  418322:	icebp  
  418323:	add    ecx,0xfc8d097
  418329:	gs xor ecx,edi
  41832c:	mov    esp,0x20858a85
  418331:	and    dh,BYTE PTR [esi+0x4f89478b]
  418337:	mov    ss,WORD PTR [edi+0x1665bde7]
  41833d:	xor    eax,0xde754284
  418342:	jns    0x418362
  418344:	je     0x418393
  418346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418347:	dec    eax
  418348:	push   edi
  418349:	mov    ecx,0xf3a4216
  41834e:	lock sbb esp,DWORD PTR [ebx+edi*4]
  418352:	xchg   ebp,ecx
  418354:	sbb    eax,esi
  418356:	lock jmp 0x28bb:0x3f878e9c
  41835e:	push   edi
  41835f:	dec    edi
  418360:	in     al,dx
  418361:	adc    eax,0xa52c8c30
  418366:	pand   mm7,QWORD PTR [ecx]
  418369:	push   ecx
  41836a:	dec    esi
  41836b:	push   ebx
  41836c:	xchg   ebp,eax
  41836d:	dec    ecx
  41836e:	jne    0x418370
  418370:	lods   eax,DWORD PTR ds:[esi]
  418371:	repnz push edx
  418373:	(bad)  
  418374:	aaa    
  418375:	aaa    
  418376:	ins    BYTE PTR es:[edi],dx
  418377:	mov    bl,0x1
  418379:	mov    cs,WORD PTR [edi+ecx*1-0xc]
  41837d:	cld    
  41837e:	call   0x85ad:0xb18ef433
  418385:	mov    edx,0xe7a399e1
  41838a:	repnz scas al,BYTE PTR es:[edi]
  41838c:	and    BYTE PTR [edi-0x61e0d1b9],cl
  418392:	rol    BYTE PTR [edi],1
  418394:	dec    ebp
  418395:	push   0xa46618c0
  41839a:	clc    
  41839b:	push   esi
  41839c:	leave  
  41839d:	adc    bh,BYTE PTR fs:[eax]
  4183a0:	fdivrp st(1),st
  4183a2:	pop    edi
  4183a3:	div    BYTE PTR ds:0xba0d14a9
  4183a9:	sahf   
  4183aa:	in     ax,dx
  4183ac:	in     eax,dx
  4183ad:	dec    ecx
  4183ae:	cmp    edi,DWORD PTR [esi-0x3a]
  4183b1:	ret    
  4183b2:	cmp    BYTE PTR [ebx],dh
  4183b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b5:	or     dh,BYTE PTR [edi+0x244b3b41]
  4183bb:	or     eax,0x4ed8e68f
  4183c0:	xor    eax,0x4b062c53
  4183c5:	or     bh,BYTE PTR [eax+0x1a13de28]
  4183cb:	lock pop es
  4183cd:	ja     0x4183c5
  4183cf:	sbb    DWORD PTR [ecx],ebp
  4183d1:	outs   dx,BYTE PTR ds:[esi]
  4183d2:	out    dx,eax
  4183d3:	pop    ebp
  4183d4:	les    edx,FWORD PTR [edi-0xef912eb]
  4183da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183db:	or     al,0x9d
  4183dd:	mov    bh,0x74
  4183df:	jmp    0x41840e
  4183e1:	enter  0xcd28,0x80
  4183e5:	notrack call esp
  4183e8:	and    BYTE PTR [ebx-0x29],al
  4183eb:	out    dx,al
  4183ec:	nop
  4183ed:	das    
  4183ee:	fs mov esi,0x8c6583db
  4183f4:	pop    edx
  4183f5:	stos   DWORD PTR es:[edi],eax
  4183f6:	xchg   edi,eax
  4183f7:	or     BYTE PTR [ebp+0x68],0xf0
  4183fb:	or     DWORD PTR [eax],edx
  4183fd:	mov    ds:0x9e9c0ab2,eax
  418402:	jo     0x418390
  418404:	add    eax,DWORD PTR [esi*4+0x3f6afedd]
  41840b:	je     0x41842f
  41840d:	push   0x91465aad
  418412:	mov    bl,bl
  418414:	or     edi,edi
  418416:	call   0x907e:0x40846aec
  41841d:	int3   
  41841e:	add    eax,0xb670b9be
  418424:	iret   
  418425:	jmp    0x100e:0xcc25dd3c
  41842c:	push   0x50ca911d
  418431:	sub    BYTE PTR [edi+0x5b],0x58
  418435:	ret    0x9121
  418438:	sar    DWORD PTR [edx],cl
  41843a:	sbb    DWORD PTR [esi],esi
  41843c:	jge    0x4184b9
  41843e:	mov    ah,al
  418440:	in     eax,dx
  418441:	push   esi
  418442:	pop    ebx
  418443:	or     DWORD PTR [edi-0x14],0x8d64f2e6
  41844a:	or     ah,BYTE PTR [eax-0xc02890a]
  418450:	(bad)  
  418451:	lock mov ch,0xd8
  418454:	mov    edx,0x62f3370b
  418459:	popa   
  41845a:	pop    eax
  41845b:	mov    ds:0x860914a2,al
  418460:	pushf  
  418461:	pop    ss
  418462:	mov    dh,0x3d
  418464:	repnz shr DWORD PTR [esi],0x74
  418468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418469:	neg    DWORD PTR ds:0x10080557
  41846f:	mov    bh,0x90
  418471:	mov    bl,0x15
  418473:	lods   eax,DWORD PTR ds:[esi]
  418474:	sbb    al,0xd3
  418476:	(bad)  
  418477:	shl    BYTE PTR [edx-0x284082e2],1
  41847d:	xchg   ecx,esp
  41847f:	jmp    0xd47d:0xb2700e03
  418486:	fisubr DWORD PTR [ebx+0x322bc06f]
  41848c:	dec    esp
  41848d:	push   eax
  41848e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848f:	in     al,0xcf
  418491:	lods   eax,DWORD PTR ds:[esi]
  418492:	je     0x418437
  418494:	rcl    BYTE PTR [eax-0x79f6fa99],1
  41849a:	pop    ss
  41849b:	fstp   DWORD PTR [eax+ecx*1+0x4f]
  41849f:	cmp    al,0xc7
  4184a1:	adc    al,0x12
  4184a3:	in     eax,dx
  4184a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a5:	ins    BYTE PTR es:[edi],dx
  4184a6:	mov    ebx,0x2977bcb8
  4184ab:	adc    eax,0xf79d7783
  4184b0:	fs dec ebp
  4184b2:	add    BYTE PTR [ecx],al
  4184b4:	repz inc edx
  4184b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b7:	adc    DWORD PTR [esi+edx*1+0x26],ebp
  4184bb:	adc    al,0xe2
  4184bd:	jnp    0x418449
  4184bf:	retf   0x136b
  4184c2:	out    0xb2,eax
  4184c4:	mov    eax,ebp
  4184c6:	xor    BYTE PTR [ebp-0x6fd67dee],0x94
  4184cd:	and    eax,0x9a0ba356
  4184d2:	mov    ecx,0x2569b631
  4184d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d8:	arpl   bx,ax
  4184da:	pop    ss
  4184db:	lea    edx,[eax]
  4184dd:	cmp    ebp,esp
  4184df:	(bad)  
  4184e0:	imul   ebx,DWORD PTR [ecx],0x3f
  4184e3:	and    ecx,DWORD PTR [edx]
  4184e5:	inc    ecx
  4184e6:	xchg   esp,eax
  4184e8:	mov    bh,0x44
  4184ea:	add    al,0x28
  4184ec:	mov    esi,0x6a34f3d0
  4184f1:	popf   
  4184f2:	xor    eax,0x44bf4e74
  4184f7:	sbb    eax,0x43c57aea
  4184fc:	pop    bp
  4184fe:	cmp    eax,esi
  418500:	mov    edx,0x6f077819
  418505:	mov    edi,0x3ed3421e
  41850a:	imul   DWORD PTR [esp+edx*8]
  41850d:	adc    esp,ecx
  41850f:	mov    cl,0xd9
  418511:	dec    ecx
  418512:	jb     0x418585
  418514:	cmp    BYTE PTR [edi+0x3b],ah
  418517:	and    DWORD PTR [esi-0x54d25102],edi
  41851d:	adc    al,0x79
  41851f:	in     eax,dx
  418520:	adc    ebx,DWORD PTR [ebp+0x5e4e4717]
  418526:	shr    DWORD PTR es:[ecx-0x2d],cl
  41852a:	jbe    0x4184d5
  41852c:	stos   DWORD PTR es:[edi],eax
  41852d:	jmp    0x2d255e58
  418532:	xchg   ecx,eax
  418533:	loopne 0x41858e
  418535:	imul   eax,DWORD PTR [ebp+0x4734690a],0x7de1cf5f
  41853f:	xchg   ebx,eax
  418540:	add    DWORD PTR [ebx+0x127ff4a4],edi
  418546:	jns    0x4184df
  418548:	popa   
  418549:	gs dec ebx
  41854b:	pop    esp
  41854c:	out    0x5b,al
  41854e:	dec    ecx
  41854f:	push   ebp
  418550:	in     al,0xc7
  418552:	sub    eax,0xab8899e9
  418557:	sub    DWORD PTR [bp+di],esi
  41855a:	aaa    
  41855b:	mov    ah,0x27
  41855d:	adc    al,0x73
  41855f:	lahf   
  418560:	sub    bl,ah
  418562:	mov    al,ds:0xf028b9aa
  418567:	in     eax,dx
  418568:	into   
  418569:	mov    ecx,DWORD PTR [eax-0x13]
  41856c:	add    eax,0xc2f5d40a
  418571:	in     eax,dx
  418572:	stos   BYTE PTR es:[edi],al
  418573:	ins    DWORD PTR es:[edi],dx
  418574:	out    dx,al
  418575:	test   eax,0xd234bc04
  41857a:	lock sbb eax,0x81e55ce0
  418580:	push   ebx
  418581:	mov    ch,0xbb
  418583:	lods   al,BYTE PTR ds:[esi]
  418584:	jb     0x41857c
  418586:	das    
  418587:	xchg   edi,eax
  418588:	inc    edi
  418589:	cmp    eax,0xd37c8059
  41858e:	push   ds
  41858f:	mov    ecx,0xe1867c98
  418594:	pop    edi
  418595:	cdq    
  418596:	sbb    DWORD PTR [ebp+0x13fd8fc9],0x0
  41859d:	and    BYTE PTR [esi+0x61],0x5f
  4185a1:	(bad)  
  4185a2:	aam    0xde
  4185a4:	xlat   BYTE PTR ds:[ebx]
  4185a5:	arpl   sp,cx
  4185a7:	test   al,0x1c
  4185a9:	add    al,0x32
  4185ab:	ret    
  4185ac:	dec    DWORD PTR [edi]
  4185ae:	xchg   edx,eax
  4185af:	inc    ecx
  4185b0:	loope  0x418558
  4185b2:	into   
  4185b3:	stos   DWORD PTR es:[edi],eax
  4185b4:	in     eax,dx
  4185b5:	lock scas al,BYTE PTR es:[edi]
  4185b7:	lods   eax,DWORD PTR ds:[esi]
  4185b8:	out    dx,al
  4185b9:	outs   dx,DWORD PTR ds:[esi]
  4185ba:	mov    ebx,DWORD PTR [edi-0x12694467]
  4185c0:	mov    al,ds:0xc7bd07d9
  4185c5:	sbb    BYTE PTR [esi],bh
  4185c7:	mov    bh,0x78
  4185c9:	jae    0x418608
  4185cb:	stos   BYTE PTR es:[edi],al
  4185cc:	xor    eax,0x277a4049
  4185d1:	pop    ecx
  4185d2:	cmp    DWORD PTR [ecx-0x3ec676ee],ecx
  4185d8:	fs pusha 
  4185da:	adc    dl,dl
  4185dc:	cli    
  4185dd:	sub    ebp,esp
  4185df:	sub    DWORD PTR [ebp+0xa8ada78],ecx
  4185e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185e6:	jl     0x418598
  4185e8:	dec    edi
  4185e9:	and    ebx,DWORD PTR [edi]
  4185eb:	add    DWORD PTR ss:[ecx],ebp
  4185ee:	add    eax,ebx
  4185f0:	call   0x39b33c52
  4185f5:	lods   al,BYTE PTR ds:[esi]
  4185f6:	push   ecx
  4185f7:	lods   al,BYTE PTR ds:[esi]
  4185f8:	mov    ecx,0x43ad6232
  4185fd:	ins    BYTE PTR es:[edi],dx
  4185fe:	scas   al,BYTE PTR es:[edi]
  4185ff:	cdq    
  418600:	(bad)  
  418601:	fisub  WORD PTR [eax+0x524da001]
  418607:	aad    0x48
  418609:	mov    ebp,0xca61d589
  41860e:	cmp    edx,ebp
  418610:	adc    eax,0xaf133db0
  418615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418616:	into   
  418617:	and    al,0x72
  418619:	inc    edx
  41861a:	sbb    BYTE PTR [edx],0xc4
  41861d:	retf   0x970b
  418620:	out    0x3a,eax
  418622:	jb     0x418603
  418624:	(bad)  
  418625:	mov    eax,ds:0x1724ac32
  41862a:	out    dx,al
  41862b:	add    al,0x59
  41862d:	xchg   edx,eax
  41862e:	shl    BYTE PTR [edx+0xe],1
  418631:	mov    dh,ah
  418633:	push   0x116bcad6
  418638:	fimul  DWORD PTR [edi+0x3b1a4512]
  41863e:	sub    BYTE PTR [edi-0x36],bh
  418641:	adc    al,0xac
  418643:	or     DWORD PTR [eax],ebx
  418645:	mov    ah,BYTE PTR [esp+ebp*4+0x7e210831]
  41864c:	inc    esi
  41864d:	xchg   ebp,eax
  41864e:	sbb    BYTE PTR [edi-0x5b],ch
  418651:	scas   al,BYTE PTR es:[edi]
  418652:	push   DWORD PTR ds:0x32bdcd4a
  418658:	adc    BYTE PTR [edx],bl
  41865a:	lods   eax,DWORD PTR ds:[esi]
  41865b:	jmp    0x1d757b9f
  418660:	add    DWORD PTR [edi],edx
  418662:	push   esi
  418663:	loop   0x41868c
  418665:	add    DWORD PTR [esi],eax
  418667:	inc    esp
  418668:	or     al,0xf3
  41866a:	mov    ebx,fs
  41866c:	sbb    dh,BYTE PTR [ebp-0x33]
  41866f:	dec    esi
  418670:	fsub   DWORD PTR [ebp+0x6]
  418673:	mov    ebx,0xac0f613c
  418678:	in     al,0x7c
  41867a:	or     BYTE PTR [edi+0x6d606899],ah
  418680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418681:	out    dx,eax
  418682:	stc    
  418683:	adc    cl,BYTE PTR [esi+0x9a7892d]
  418689:	imul   esi,DWORD PTR [ebx+edi*4-0x3d],0x0
  41868e:	xchg   edx,eax
  41868f:	retf   0x233d
  418692:	adc    edx,DWORD PTR [esi-0x7c]
  418695:	pop    eax
  418696:	das    
  418697:	cmp    eax,0x39de8d97
  41869c:	shr    DWORD PTR [edi-0x13],1
  41869f:	push   esi
  4186a0:	adc    BYTE PTR [ecx-0x37],cl
  4186a3:	mov    ch,0x13
  4186a5:	adc    DWORD PTR [edx-0x36],0x866c1cf3
  4186ac:	mov    bh,0xf
  4186ae:	ss and dl,ah
  4186b1:	outs   dx,BYTE PTR ds:[esi]
  4186b2:	jmp    0x41872b
  4186b4:	cmp    BYTE PTR [ecx+ebp*8+0xc],bl
  4186b8:	dec    edx
  4186b9:	or     esi,DWORD PTR [esi]
  4186bb:	push   edi
  4186bc:	inc    eax
  4186bd:	sti    
  4186be:	pop    ss
  4186bf:	test   BYTE PTR [ecx+0x53e9d9bd],dl
  4186c5:	lock dec eax
  4186c7:	les    ebp,FWORD PTR [esi-0xd]
  4186ca:	cli    
  4186cb:	shl    cl,cl
  4186cd:	int3   
  4186ce:	push   ebp
  4186cf:	mov    dh,0x70
  4186d1:	aas    
  4186d2:	cwde   
  4186d3:	lea    edx,[edx+eiz*8+0x48c1d64f]
  4186da:	dec    ebx
  4186db:	jle    0x4186e1
  4186dd:	mov    BYTE PTR [ecx+0x68],bl
  4186e0:	fld    QWORD PTR [eax]
  4186e2:	jl     0x4186c0
  4186e4:	xchg   ebp,eax
  4186e5:	neg    DWORD PTR [ebx]
  4186e7:	lods   eax,DWORD PTR ds:[esi]
  4186e8:	stc    
  4186e9:	sbb    esi,DWORD PTR [edx+0x5b]
  4186ec:	retf   
  4186ed:	nop
  4186ee:	ins    DWORD PTR es:[edi],dx
  4186ef:	adc    eax,0x44c4c2b2
  4186f4:	nop
  4186f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f6:	cmp    DWORD PTR [ebp+0x261b880d],0x85cdf0c7
  418700:	sub    al,0xba
  418702:	clc    
  418703:	(bad)  
  418705:	mov    WORD PTR [edx-0x1b],es
  418708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418709:	or     al,0xaf
  41870b:	repnz and BYTE PTR [ebx+edi*2-0x3f],cl
  418710:	ror    DWORD PTR [esp+edx*4+0x76],cl
  418714:	out    dx,eax
  418715:	mov    BYTE PTR [ecx],dl
  418717:	pop    eax
  418718:	into   
  418719:	sub    al,BYTE PTR [ecx+eax*8-0x75a2fc8f]
  418720:	dec    edx
  418721:	inc    eax
  418722:	(bad)  
  418724:	hlt    
  418725:	ret    0x8ab2
  418728:	fsubr  st,st(1)
  41872a:	mov    dl,0x8e
  41872c:	daa    
  41872d:	outs   dx,DWORD PTR ds:[esi]
  41872e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41872f:	sbb    dl,BYTE PTR ds:0x6df66003
  418735:	adc    BYTE PTR [ecx-0x15],bl
  418738:	sbb    ecx,DWORD PTR [esi+0x1]
  41873b:	adc    ah,BYTE PTR [ebx-0x525ae09f]
  418741:	int    0x28
  418743:	and    al,0x94
  418745:	stos   BYTE PTR es:[edi],al
  418746:	push   es
  418747:	mov    bh,0x4
  418749:	add    al,0x9d
  41874b:	inc    edi
  41874c:	out    dx,al
  41874d:	outs   dx,DWORD PTR ds:[esi]
  41874e:	cs mov al,0xc5
  418751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418752:	int    0x1d
  418754:	out    dx,al
  418755:	sub    BYTE PTR [ecx+0xa],dl
  418758:	jns    0x41879c
  41875a:	es jne 0x418774
  41875d:	test   BYTE PTR [edx],cl
  41875f:	in     eax,0x83
  418761:	push   ds
  418762:	jns    0x418791
  418764:	mov    ah,0x36
  418766:	lds    eax,FWORD PTR [edi-0x57e1d419]
  41876c:	and    esp,DWORD PTR [ebx]
  41876e:	adc    DWORD PTR [edi],edi
  418770:	paddq  mm0,QWORD PTR [edi-0x7aeb01f0]
  418777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418778:	adc    eax,0x136f4ecf
  41877d:	and    eax,0x351145d9
  418782:	xlat   BYTE PTR ds:[ebx]
  418783:	ss jg  0x41871e
  418786:	jnp    0x418788
  418788:	clc    
  418789:	mov    ch,0x42
  41878b:	gs push ebp
  41878d:	and    DWORD PTR ds:0x7c9a95a7,esi
  418793:	push   ebx
  418794:	dec    esp
  418795:	push   es
  418796:	add    al,0x2d
  418798:	xchg   edx,eax
  418799:	jmp    0xc79371a1
  41879e:	sbb    BYTE PTR [edx],cl
  4187a0:	in     eax,0xf5
  4187a2:	mov    eax,ds:0x2e053712
  4187a7:	push   0x31
  4187a9:	aaa    
  4187aa:	clc    
  4187ab:	cmp    eax,0xf099d587
  4187b0:	xor    DWORD PTR [ebx],0x74159755
  4187b6:	cld    
  4187b7:	and    eax,0x3ccc9360
  4187bc:	xor    al,0x74
  4187be:	into   
  4187bf:	mov    cl,0x7e
  4187c1:	jge    0x418824
  4187c3:	mov    esi,0x3b569d12
  4187c8:	and    al,0x2b
  4187ca:	nop
  4187cb:	mov    bl,BYTE PTR [eax-0x1d]
  4187ce:	mov    BYTE PTR [edx],dh
  4187d0:	pop    eax
  4187d1:	ror    bl,1
  4187d3:	cdq    
  4187d4:	inc    edi
  4187d5:	sub    DWORD PTR [edx-0x64074fbe],0x61
  4187dc:	sbb    eax,0x6d3ca78d
  4187e1:	sub    esp,esp
  4187e3:	js     0x4187a8
  4187e5:	xchg   ecx,eax
  4187e6:	adc    BYTE PTR [esi+ebx*4],ah
  4187e9:	dec    ebx
  4187ea:	add    al,0x74
  4187ec:	cld    
  4187ed:	mov    edi,0xd02d65dd
  4187f2:	jae    0x41885b
  4187f4:	jmp    0xd4d0:0x1f13e2ea
  4187fb:	jge    0x41881a
  4187fd:	stos   BYTE PTR es:[edi],al
  4187fe:	inc    ecx
  4187ff:	jg     0x418832
  418801:	jno    0x4187a3
  418803:	ds retf 
  418805:	mov    ah,0x55
  418807:	pop    ebp
  418808:	pop    es
  418809:	ret    0x5310
  41880c:	cmp    al,BYTE PTR [edx+0x60]
  41880f:	xor    al,0x68
  418811:	mov    ah,0xb1
  418813:	mov    ebx,0xe4837faa
  418818:	jge    0x4187d4
  41881a:	dec    edx
  41881b:	push   esp
  41881c:	daa    
  41881d:	and    ebx,0x2a
  418820:	cmc    
  418821:	xor    ah,BYTE PTR [eax-0x5d]
  418824:	pop    ss
  418825:	mov    dl,0xce
  418827:	icebp  
  418828:	std    
  418829:	(bad)  
  41882a:	in     al,dx
  41882b:	ja     0x418866
  41882d:	shr    ebp,0x6
  418830:	sbb    eax,0xdd60824d
  418835:	adc    BYTE PTR [eax-0x41f5db02],dh
  41883b:	call   0xcde8:0x88dde7c5
  418842:	leave  
  418843:	shl    DWORD PTR [esi],0xc4
  418846:	int3   
  418847:	div    ebx
  418849:	sbb    eax,0x70677a56
  41884e:	fidiv  DWORD PTR [edi]
  418850:	mov    dl,BYTE PTR [esp+ecx*2+0x9]
  418854:	loop   0x418826
  418856:	in     eax,dx
  418857:	add    eax,0x98dc51d9
  41885c:	mov    dh,0x3
  41885e:	(bad)  
  41885f:	iret   
  418860:	repz pop ebp
  418862:	ret    0x7d3a
  418865:	stc    
  418866:	ret    0x7cd
  418869:	cmp    bl,BYTE PTR [edi-0x35]
  41886c:	mov    eax,0x74020303
  418871:	xchg   ecx,edi
  418873:	pop    edx
  418874:	mov    dh,0x82
  418876:	xor    ecx,DWORD PTR [edx]
  418878:	aam    0xc7
  41887a:	std    
  41887b:	sti    
  41887c:	sbb    eax,0x69585cf9
  418881:	sar    ch,cl
  418883:	mov    ds:0xf0c7087b,al
  418888:	sbb    ebx,DWORD PTR [edx-0x1a]
  41888b:	xchg   ecx,eax
  41888c:	push   es
  41888d:	xor    eax,0xdaf7c0eb
  418892:	sar    BYTE PTR [ebx],cl
  418894:	je     0x4188eb
  418896:	cli    
  418897:	mov    fs,WORD PTR [esi+0x63]
  41889a:	fs sti 
  41889c:	mul    BYTE PTR [ecx+ebp*1+0x5284a0c8]
  4188a3:	dec    esp
  4188a4:	loopne 0x418925
  4188a6:	fcom   DWORD PTR [eax+0xd]
  4188a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188aa:	pop    ebp
  4188ab:	dec    esi
  4188ac:	jle    0x418896
  4188ae:	iret   
  4188af:	jbe    0x41889f
  4188b1:	scas   al,BYTE PTR es:[edi]
  4188b2:	fwait
  4188b3:	mov    ds:0xae6d4b1a,al
  4188b8:	das    
  4188b9:	mov    ebx,0xb2e92544
  4188be:	popa   
  4188bf:	mov    cs,WORD PTR [ebx+esi*2]
  4188c2:	or     al,0x88
  4188c4:	fwait
  4188c5:	and    cl,0xaa
  4188c8:	into   
  4188c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ca:	mov    ecx,esp
  4188cc:	shl    BYTE PTR [esi+0x47],cl
  4188cf:	adc    ch,ah
  4188d1:	lds    edi,FWORD PTR [edi]
  4188d3:	in     eax,0x54
  4188d5:	pop    edi
  4188d6:	inc    edx
  4188d7:	repnz dec ebx
  4188d9:	adc    DWORD PTR [edi],0x32
  4188dc:	push   ecx
  4188dd:	and    eax,0x566881ea
  4188e2:	xor    BYTE PTR [ebp-0x30],0x75
  4188e6:	jmp    0x4188f4
  4188e8:	xor    al,0x3b
  4188ea:	dec    esp
  4188eb:	(bad)  
  4188ec:	stc    
  4188ed:	ror    DWORD PTR [edi+0x6f],cl
  4188f0:	in     eax,0xc5
  4188f2:	jp     0x418883
  4188f4:	ror    bh,1
  4188f6:	adc    DWORD PTR [edi+ebx*1+0x38],ebp
  4188fa:	mov    ds:0x7a69cfd6,al
  4188ff:	sub    ebp,DWORD PTR [ebx-0xf]
  418902:	and    dh,BYTE PTR [ebp+0x68]
  418905:	pop    es
  418906:	pop    es
  418907:	gs or  al,0xe6
  41890a:	mov    ecx,0x9ce7f797
  41890f:	daa    
  418910:	aas    
  418911:	xchg   ebx,eax
  418912:	les    eax,FWORD PTR ds:0xaad1b19c
  418918:	out    0xd3,eax
  41891a:	push   esp
  41891b:	int3   
  41891c:	(bad)  
  41891d:	std    
  41891e:	push   ds
  41891f:	test   eax,0xab724fcf
  418924:	ret    0x3d81
  418927:	sbb    edx,ecx
  418929:	sub    DWORD PTR [edi-0x14],ebp
  41892c:	(bad)  [ebx]
  41892e:	xchg   edx,eax
  41892f:	rol    BYTE PTR [edx],cl
  418931:	or     eax,0x9f92ec5d
  418936:	ja     0x418995
  418938:	xchg   edi,eax
  418939:	sub    ch,BYTE PTR [ebp-0x4f66b5a2]
  41893f:	sbb    BYTE PTR [edx-0x64],ah
  418942:	pop    ebx
  418943:	fs ds xchg ebx,eax
  418946:	nop
  418947:	and    edx,DWORD PTR [ecx-0x44]
  41894a:	imul   DWORD PTR [edx+ebx*2]
  41894d:	sub    dl,0x8d
  418950:	fs into 
  418952:	popf   
  418953:	aad    0xef
  418955:	and    ebp,DWORD PTR [ebx]
  418957:	cmp    al,BYTE PTR ds:0xa95b354a
  41895d:	(bad)  
  41895e:	dec    esp
  41895f:	sub    eax,0xc792eb0b
  418964:	ret    0xfe4e
  418967:	sbb    DWORD PTR [edx-0x17],edi
  41896a:	jae    0x418963
  41896c:	bound  ecx,QWORD PTR [eax+0xed5f4d6]
  418972:	aaa    
  418973:	les    edi,FWORD PTR [eax-0x75832ca2]
  418979:	fwait
  41897a:	jb     0x418977
  41897c:	es ins DWORD PTR es:[edi],dx
  41897e:	jl     0x4189e8
  418980:	xor    DWORD PTR [edx],edi
  418982:	lahf   
  418983:	cmp    eax,0x51b55da0
  418988:	push   0xffffffae
  41898a:	and    BYTE PTR [si],dh
  41898d:	inc    ecx
  41898e:	lock bound edx,QWORD PTR [edi+0x575a1c2b]
  418995:	les    esi,FWORD PTR [edx]
  418997:	cmp    al,0xde
  418999:	add    BYTE PTR [ecx],0xc
  41899c:	in     eax,0x16
  41899e:	push   edi
  41899f:	or     edx,ebx
  4189a1:	push   es
  4189a2:	sahf   
  4189a3:	sbb    BYTE PTR [edi-0x26c1ccd3],dl
  4189a9:	scas   eax,DWORD PTR es:[edi]
  4189aa:	aam    0xb9
  4189ac:	mov    WORD PTR [ecx+esi*2],?
  4189af:	mov    bh,0xe6
  4189b1:	jns    0x4189eb
  4189b3:	push   ecx
  4189b4:	sub    cl,BYTE PTR [edx+0x604d03aa]
  4189ba:	cmp    BYTE PTR ds:0xd24c3aa9,0x5b
  4189c1:	jg     0x418a3b
  4189c3:	sub    eax,0x51f17edf
  4189c8:	mov    ah,BYTE PTR [edi]
  4189ca:	fmul   st,st(7)
  4189cc:	sub    eax,0x3d9e6d81
  4189d1:	pop    ebx
  4189d2:	ins    DWORD PTR es:[edi],dx
  4189d3:	lock push eax
  4189d5:	pop    ds
  4189d6:	jmp    0xc9caf062
  4189db:	popa   
  4189dc:	out    dx,al
  4189dd:	repz inc edi
  4189df:	push   esp
  4189e0:	adc    al,0xd2
  4189e2:	jge    0x4189e1
  4189e4:	jge    0x41898a
  4189e6:	sbb    dh,dl
  4189e8:	xor    ebx,esi
  4189ea:	or     al,0x63
  4189ec:	mov    ds:0xc5b3e3da,eax
  4189f1:	outs   dx,DWORD PTR ds:[esi]
  4189f2:	repz arpl WORD PTR [ecx+esi*8-0x7723e23c],sp
  4189fa:	push   esp
  4189fb:	out    dx,al
  4189fc:	loope  0x418990
  4189fe:	mov    ebp,0x5cedf2bb
  418a03:	sub    al,0xd6
  418a05:	jmp    0x4189fa
  418a07:	icebp  
  418a08:	sub    DWORD PTR ds:0x796e2c8e,esi
  418a0e:	sahf   
  418a0f:	and    cl,BYTE PTR [ebp+0x5d378303]
  418a15:	(bad)  [eax-0x73]
  418a18:	or     dh,BYTE PTR [ecx]
  418a1a:	pop    esp
  418a1b:	loope  0x4189f4
  418a1d:	or     eax,0xc3e00884
  418a22:	add    DWORD PTR [ebx-0x14],eax
  418a25:	in     eax,dx
  418a26:	daa    
  418a27:	cmc    
  418a28:	int    0xdd
  418a2a:	ror    BYTE PTR [eiz*8-0x6f1428a6],0x56
  418a32:	sub    cl,BYTE PTR [ebp+edx*4+0x4c]
  418a36:	dec    eax
  418a37:	lds    edx,FWORD PTR [esi+ebx*2+0x3df59364]
  418a3e:	(bad)
  418a41:	out    0x71,eax
  418a43:	dec    esi
  418a44:	lahf   
  418a45:	leave  
  418a46:	xor    ch,BYTE PTR [esi]
  418a48:	(bad)  
  418a49:	or     edx,DWORD PTR [edx+ecx*2]
  418a4c:	(bad)  
  418a4d:	xor    DWORD PTR [edx],ecx
  418a4f:	and    BYTE PTR [edx],bl
  418a51:	hlt    
  418a52:	adc    eax,0x4d8266a2
  418a57:	sub    DWORD PTR [ebx-0x66],esp
  418a5a:	sub    al,0x84
  418a5c:	sub    dh,BYTE PTR [ebp+0x4ba4aaaa]
  418a62:	dec    esp
  418a63:	(bad)  
  418a64:	shl    esi,cl
  418a66:	jp     0x418a6f
  418a68:	adc    eax,DWORD PTR [eax-0x6a]
  418a6b:	cld    
  418a6c:	ds aas 
  418a6e:	js     0x418a25
  418a70:	adc    BYTE PTR ds:0xa5c0d1ad,0xe2
  418a77:	push   ecx
  418a78:	in     al,dx
  418a79:	sbb    al,0xf5
  418a7b:	stos   BYTE PTR es:[edi],al
  418a7c:	fs jecxz 0x418a1d
  418a7f:	ja     0x418a57
  418a81:	adc    eax,0x41bed598
  418a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a87:	icebp  
  418a88:	in     al,dx
  418a89:	ja     0x418a9a
  418a8b:	inc    eax
  418a8c:	mov    ebx,0x382771d5
  418a91:	(bad)  
  418a92:	in     al,dx
  418a93:	gs pop ebp
  418a95:	int    0x6a
  418a97:	adc    al,0x83
  418a99:	fisubr DWORD PTR [ebp-0x6464382e]
  418a9f:	dec    ebp
  418aa0:	xchg   ebx,eax
  418aa1:	sub    cl,BYTE PTR [esi+eiz*1]
  418aa4:	pop    esp
  418aa5:	in     al,dx
  418aa6:	clc    
  418aa7:	sub    BYTE PTR [esi],al
  418aa9:	lahf   
  418aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aab:	push   ecx
  418aac:	ins    DWORD PTR es:[edi],dx
  418aad:	jbe    0x418af0
  418aaf:	sub    ecx,eax
  418ab1:	mov    esi,0x771657fc
  418ab6:	xor    esp,edx
  418ab8:	das    
  418ab9:	pop    eax
  418aba:	sub    dl,dl
  418abc:	shl    DWORD PTR [edi-0x5051c809],0x11
  418ac3:	push   ecx
  418ac4:	xlat   BYTE PTR ds:[ebx]
  418ac5:	mov    DWORD PTR [ecx+0x577f8299],0x6ad761a8
  418acf:	(bad)  
  418ad0:	jmp    0x4c0b:0xf427d441
  418ad7:	cmp    bl,ah
  418ad9:	sbb    DWORD PTR [esi],edx
  418adb:	aaa    
  418adc:	loop   0x418b3e
  418ade:	dec    ecx
  418adf:	lock push esp
  418ae1:	mov    cl,0x51
  418ae3:	into   
  418ae4:	adc    eax,0xeea6e750
  418ae9:	test   ebp,edi
  418aeb:	xor    esp,edi
  418aed:	adc    DWORD PTR [eax+0x69cda653],esp
  418af3:	mov    al,0xe2
  418af5:	js     0x418adb
  418af7:	arpl   WORD PTR [edx-0x21],ax
  418afa:	and    al,BYTE PTR [edx+0x27]
  418afd:	fild   QWORD PTR [esp+edi*1]
  418b00:	out    0xbb,al
  418b02:	cld    
  418b03:	adc    al,0xcf
  418b05:	sub    eax,0x5d12aea5
  418b0a:	mov    esi,0x8da54b0f
  418b0f:	inc    ebp
  418b10:	bound  esp,QWORD PTR [ebx+0x3f]
  418b13:	inc    eax
  418b14:	das    
  418b15:	mov    dl,0x4b
  418b17:	ins    BYTE PTR es:[edi],dx
  418b18:	pop    eax
  418b19:	inc    edi
  418b1a:	mov    cl,0x5d
  418b1c:	ja     0x418b54
  418b1e:	sbb    bl,ch
  418b20:	sbb    edx,DWORD PTR [eax+0x481a7750]
  418b26:	dec    edi
  418b27:	fsubr  QWORD PTR [ebp-0x49]
  418b2a:	les    esi,FWORD PTR [eax+0x27]
  418b2d:	and    BYTE PTR [ebx-0x7e],0xac
  418b31:	loope  0x418b25
  418b33:	in     al,0x64
  418b35:	or     eax,0xaf81d69b
  418b3a:	out    0x7e,al
  418b3c:	adc    al,0x87
  418b3e:	pop    ebx
  418b3f:	(bad)  
  418b40:	and    edi,DWORD PTR [edi*4-0xf941a02]
  418b47:	mov    ds:0x7971459e,al
  418b4c:	(bad)  
  418b4e:	sub    DWORD PTR [ebx+0x7e4a6e8b],0xb5c73f21
  418b58:	mov    dl,0xcb
  418b5a:	pop    ecx
  418b5b:	pop    esp
  418b5c:	daa    
  418b5d:	inc    eax
  418b5e:	kxnorb k1,k2,k0
  418b62:	dec    ebx
  418b63:	add    bh,dl
  418b65:	jmp    0x2ba47745
  418b6a:	xor    dh,BYTE PTR [edx-0xa6750e5]
  418b70:	dec    esi
  418b71:	test   BYTE PTR [eax+0x52],dl
  418b74:	sbb    eax,0xb051d028
  418b79:	xlat   BYTE PTR ds:[ebx]
  418b7a:	pop    edi
  418b7b:	popa   
  418b7c:	fisttp QWORD PTR [bp+si]
  418b7f:	js     0x418b2e
  418b81:	add    eax,0x4e471f35
  418b86:	popf   
  418b87:	outs   dx,DWORD PTR ds:[esi]
  418b88:	lahf   
  418b89:	add    edx,eax
  418b8b:	(bad)  
  418b8c:	fisub  WORD PTR [ecx+0x32]
  418b8f:	std    
  418b90:	inc    esi
  418b91:	lods   al,BYTE PTR ds:[esi]
  418b92:	inc    ebp
  418b93:	and    DWORD PTR [esi-0x22],edx
  418b96:	call   0xfc8d:0x4d37c93b
  418b9d:	ss jbe 0x418b87
  418ba0:	call   0xea08:0xf42ff24c
  418ba7:	pop    ss
  418ba8:	bound  esp,QWORD PTR [ebp+edi*8-0x3f]
  418bac:	xor    BYTE PTR [ecx+ebx*2+0x6e],0x72
  418bb1:	movhps QWORD PTR [edi-0x40a72ab],xmm0
  418bb8:	in     eax,0x77
  418bba:	iret   
  418bbb:	les    ecx,FWORD PTR [ebx-0x176a8549]
  418bc1:	leave  
  418bc2:	fwait
  418bc3:	sbb    ch,BYTE PTR [ecx+0x53]
  418bc6:	mov    ebp,0x70f0ff1b
  418bcb:	sbb    edi,DWORD PTR [esp+esi*4-0x2e]
  418bcf:	jg     0x418bc1
  418bd1:	add    BYTE PTR [ecx+eax*4],bl
  418bd4:	js     0x418c27
  418bd6:	xor    BYTE PTR [ebp+0x73a2b956],dh
  418bdc:	pushf  
  418bdd:	int    0x47
  418bdf:	popf   
  418be0:	pop    ecx
  418be1:	test   DWORD PTR [esi],ebx
  418be3:	movq   mm7,mm2
  418be6:	push   ebx
  418be7:	sub    eax,0x67dc55e2
  418bec:	pushf  
  418bed:	les    esi,FWORD PTR [esi+0xb]
  418bf0:	dec    esp
  418bf1:	stos   BYTE PTR es:[edi],al
  418bf2:	test   BYTE PTR [esi+0x194af1e9],al
  418bf8:	mov    al,ds:0xccc13a3a
  418bfd:	xchg   edi,esi
  418bff:	dec    ebx
  418c00:	into   
  418c01:	xchg   esp,eax
  418c02:	cmp    al,0xc8
  418c04:	pop    ebx
  418c05:	psraw  mm3,QWORD PTR [esi+0x6b]
  418c09:	mov    ah,0x4
  418c0b:	aam    0xa
  418c0d:	mov    cs,esi
  418c0f:	jmp    0xf13a7eb0
  418c14:	jge    0x418bcd
  418c16:	call   0xd30:0xe4ac8b0e
  418c1d:	dec    ebp
  418c1e:	leave  
  418c1f:	lea    ebp,[ebx-0x1be9c4b1]
  418c25:	push   ss
  418c26:	out    dx,al
  418c27:	mov    ds:0x6d10c6e1,al
  418c2c:	jne    0x418cac
  418c2e:	cmp    eax,0x644f14f8
  418c33:	pop    eax
  418c34:	push   esi
  418c35:	mov    ch,0x89
  418c37:	sbb    eax,0xf309115
  418c3c:	push   ebx
  418c3d:	dec    edx
  418c3e:	neg    BYTE PTR [ebx+0x9c50554]
  418c44:	push   ss
  418c45:	shl    BYTE PTR [ecx-0x15],1
  418c48:	add    ebp,DWORD PTR [eax+0x37d3cbe3]
  418c4e:	scas   al,BYTE PTR es:[edi]
  418c4f:	(bad)  
  418c51:	jae    0x418bd9
  418c53:	repz dec ecx
  418c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c56:	(bad)  
  418c57:	xlat   BYTE PTR ds:[ebx]
  418c58:	mov    ah,0x13
  418c5a:	mov    al,al
  418c5c:	cmp    DWORD PTR [edi+0x11],ecx
  418c5f:	aaa    
  418c60:	sti    
  418c61:	push   ss
  418c62:	ins    BYTE PTR es:[edi],dx
  418c63:	jno    0x418cae
  418c65:	pop    eax
  418c66:	inc    edi
  418c67:	inc    eax
  418c68:	call   0xe381:0x538a172e
  418c6f:	pop    ecx
  418c70:	or     bh,BYTE PTR [eax+eiz*2-0x78]
  418c74:	repz mov al,0x7e
  418c77:	jle    0x418c07
  418c79:	sbb    eax,0x6c9c2f3a
  418c7e:	out    dx,al
  418c7f:	xchg   ecx,eax
  418c80:	mov    edx,0xf4ccb698
  418c85:	jmp    0x295d:0x1ec6180d
  418c8c:	dec    ebp
  418c8d:	jne    0x418c36
  418c8f:	imul   eax,DWORD PTR [ebx],0x663d6ae0
  418c95:	jb     0x418c6c
  418c97:	(bad)  
  418c99:	xchg   esi,eax
  418c9a:	xor    ah,BYTE PTR [ebp+0x3981d42c]
  418ca0:	into   
  418ca1:	div    DWORD PTR [eax]
  418ca3:	adc    eax,0xd6247b61
  418ca8:	dec    edi
  418ca9:	dec    ecx
  418caa:	ds repz push ecx
  418cad:	jno    0x418c79
  418caf:	xor    al,0xba
  418cb1:	clc    
  418cb2:	aaa    
  418cb3:	hlt    
  418cb4:	inc    eax
  418cb5:	cmp    al,BYTE PTR [edx+0x74addc45]
  418cbb:	push   ds
  418cbc:	fs xor al,0x67
  418cbf:	ss adc al,0xa5
  418cc2:	leave  
  418cc3:	addr16 das 
  418cc5:	sti    
  418cc6:	fnstsw WORD PTR [esi-0x1a52d674]
  418ccc:	push   edx
  418ccd:	pop    esi
  418cce:	inc    eax
  418ccf:	adc    eax,0x43db2da1
  418cd4:	dec    esi
  418cd5:	imul   esi,eax,0x47106b71
  418cdb:	pop    es
  418cdc:	jmp    0xecad:0x4e92c8d7
  418ce3:	sub    dl,dl
  418ce5:	aas    
  418ce6:	sahf   
  418ce7:	dec    ecx
  418ce8:	and    edx,0xfffffff7
  418ceb:	adc    eax,0x101bdfd
  418cf0:	mov    dh,BYTE PTR [ebp-0x1a]
  418cf3:	dec    eax
  418cf4:	outs   dx,BYTE PTR ds:[esi]
  418cf5:	jb     0x418d71
  418cf7:	add    al,0xe2
  418cf9:	pop    esp
  418cfa:	in     eax,dx
  418cfb:	cwde   
  418cfc:	mov    edi,0x992d994f
  418d01:	sub    esp,DWORD PTR [esi+0x5c8a30cb]
  418d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d08:	mov    al,0xb9
  418d0a:	ret    0x2673
  418d0d:	mov    dl,0xd6
  418d0f:	inc    ebx
  418d10:	pop    esp
  418d11:	cmc    
  418d12:	add    BYTE PTR [edi],dh
  418d14:	dec    esi
  418d15:	sub    eax,0x4410c06c
  418d1a:	xor    eax,0xc913c263
  418d1f:	push   esi
  418d20:	lods   eax,DWORD PTR ds:[esi]
  418d21:	push   esi
  418d22:	outs   dx,BYTE PTR ds:[esi]
  418d23:	out    dx,eax
  418d24:	(bad)  
  418d26:	daa    
  418d27:	and    BYTE PTR [eax-0x6d],dh
  418d2a:	push   esi
  418d2b:	and    DWORD PTR [ebp-0x1],edx
  418d2e:	inc    edi
  418d2f:	mov    ds:0x83b424b5,al
  418d34:	add    eax,0xe3096eb7
  418d39:	sbb    edx,DWORD PTR [eax+ebx*2]
  418d3c:	xor    DWORD PTR [edi-0x5590c793],ebp
  418d42:	push   ds
  418d43:	add    al,0x24
  418d45:	aaa    
  418d46:	or     dh,BYTE PTR ds:0xb2d37e2e
  418d4c:	sbb    ah,BYTE PTR [eax-0x2a3b592d]
  418d52:	ret    
  418d53:	adc    bh,dl
  418d55:	std    
  418d56:	add    DWORD PTR [edi-0x3b],ebp
  418d59:	mov    eax,ds
  418d5b:	add    DWORD PTR [esi+esi*8-0x63444876],esi
  418d62:	pop    ss
  418d63:	aad    0x85
  418d65:	pop    ebx
  418d66:	fs push sp
  418d69:	in     al,0x4
  418d6b:	cmp    bh,0x1f
  418d6e:	retf   
  418d6f:	adc    ebp,edi
  418d71:	shl    esp,1
  418d73:	in     eax,dx
  418d74:	fxch   st(5)
  418d76:	mov    ds:0xa224ac8a,eax
  418d7b:	xor    BYTE PTR [esp+eiz*8+0x21f1fc33],dl
  418d82:	rcl    DWORD PTR [ecx-0x14b7d0ab],0x44
  418d89:	in     al,dx
  418d8a:	inc    ebp
  418d8b:	jle    0x418d85
  418d8d:	cld    
  418d8e:	jns    0x418d1b
  418d90:	stos   DWORD PTR es:[edi],eax
  418d91:	dec    ebx
  418d92:	repz cmp edi,ebx
  418d95:	out    0xfc,al
  418d97:	imul   ecx,DWORD PTR [ecx+ebx*2],0x44
  418d9b:	test   eax,0xd43b7a9c
  418da0:	stc    
  418da1:	sbb    DWORD PTR [esp+eiz*4+0x34],edi
  418da5:	lahf   
  418da6:	neg    BYTE PTR [ebp+0x31]
  418da9:	idiv   DWORD PTR [ebx]
  418dab:	jne    0x418dc6
  418dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dae:	sti    
  418daf:	aas    
  418db0:	ret    0x6deb
  418db3:	clc    
  418db4:	adc    eax,0x53535691
  418db9:	gs (bad) 
  418dbb:	mov    ebp,DWORD PTR [esi-0x5c]
  418dbe:	mov    al,ds:0xa9359084
  418dc3:	and    eax,0xde183e12
  418dc8:	dec    ebp
  418dc9:	adc    al,0xbc
  418dcb:	xchg   edi,eax
  418dcc:	or     al,0xc6
  418dce:	jbe    0x418e48
  418dd0:	lods   al,BYTE PTR ds:[esi]
  418dd1:	xor    ecx,eax
  418dd3:	iret   
  418dd4:	fldenv [ebp+0x4861e1c3]
  418dda:	out    dx,eax
  418ddb:	jg     0x418d7b
  418ddd:	out    dx,eax
  418dde:	stos   BYTE PTR es:[edi],al
  418ddf:	inc    ecx
  418de0:	xchg   esi,eax
  418de1:	sub    DWORD PTR [ebx],eax
  418de3:	xor    al,0x90
  418de5:	jle    0x418d6c
  418de7:	imul   DWORD PTR [edi]
  418de9:	popa   
  418dea:	adc    eax,esp
  418dec:	imul   edx,edx,0x2a
  418def:	sbb    eax,0x66167b4d
  418df4:	rep outs dx,DWORD PTR ds:[esi]
  418df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df7:	push   esi
  418df8:	xchg   edi,eax
  418df9:	in     eax,0x69
  418dfb:	push   cs
  418dfc:	iret   
  418dfd:	mov    cl,0x1b
  418dff:	xlat   BYTE PTR ds:[ebx]
  418e00:	xor    al,0xf4
  418e02:	xor    DWORD PTR [eax+0x4d],ebp
  418e05:	outs   dx,DWORD PTR ds:[esi]
  418e06:	xchg   ecx,eax
  418e07:	sbb    dl,cl
  418e09:	loopne 0x418dd6
  418e0b:	popa   
  418e0c:	mov    esi,0x3309e16b
  418e11:	add    ecx,DWORD PTR [ebp+0x6e8a6643]
  418e17:	lahf   
  418e18:	mov    eax,ds:0xfd84b16d
  418e1d:	cmp    BYTE PTR [edi],dl
  418e1f:	cmp    ebx,esp
  418e21:	mov    ds:0x1422634f,eax
  418e26:	add    al,0xe0
  418e28:	lea    ebp,[edi+0x6c]
  418e2b:	xchg   BYTE PTR [ecx+0x5d707b21],ah
  418e31:	cmp    al,0x22
  418e33:	inc    eax
  418e34:	xchg   BYTE PTR ds:0xb53797c5,bh
  418e3a:	test   al,0x25
  418e3c:	in     al,0xd8
  418e3e:	add    al,BYTE PTR [eax+0x57]
  418e41:	xor    BYTE PTR [esp+ecx*8],ah
  418e44:	fucomi st,st(5)
  418e46:	xchg   edi,eax
  418e47:	sbb    BYTE PTR [ebp-0x57e3d292],dl
  418e4d:	les    ecx,FWORD PTR [ecx+0x18]
  418e50:	in     al,dx
  418e51:	aam    0x40
  418e53:	in     eax,dx
  418e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e55:	repz rcr DWORD PTR [esi-0x19c20f59],0xd6
  418e5d:	mov    ds:0x2a69e938,al
  418e62:	test   ch,cl
  418e64:	in     al,dx
  418e65:	stos   BYTE PTR es:[edi],al
  418e66:	add    eax,0xa6f41d05
  418e6b:	mov    ebx,ds
  418e6d:	loope  0x418e20
  418e6f:	outs   dx,DWORD PTR ds:[esi]
  418e70:	mov    eax,ds:0x1fc66100
  418e75:	cld    
  418e76:	imul   esi,ebp,0x753bbdba
  418e7c:	mov    cl,0x9
  418e7e:	jp     0x418ea6
  418e80:	ss jnp 0x418eeb
  418e83:	adc    al,0x90
  418e85:	(bad)  [ebx+0x4e]
  418e88:	pop    ebp
  418e89:	enter  0xd618,0x6c
  418e8d:	cmp    esp,DWORD PTR [ecx+0x47]
  418e90:	mov    edx,0xfd04ed04
  418e95:	ss je  0x418ecd
  418e98:	xchg   edx,eax
  418e99:	xchg   edx,eax
  418e9a:	xchg   DWORD PTR [ebp-0x36941cae],ebp
  418ea0:	and    BYTE PTR [ebx+0x60],dl
  418ea3:	iret   
  418ea4:	iret   
  418ea5:	data16 test BYTE PTR [edi-0x43],ch
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	in     eax,0xf8
  418eac:	push   ds
  418ead:	leave  
  418eae:	dec    edx
  418eaf:	iret   
  418eb0:	adc    eax,0x647429ac
  418eb5:	fst    QWORD PTR [eax+0x29]
  418eb8:	fist   WORD PTR [ecx]
  418eba:	push   esp
  418ebb:	sub    ebp,DWORD PTR [ecx-0x3cbce174]
  418ec1:	imul   ebx,DWORD PTR [esi-0x51],0xd0fdbbc6
  418ec8:	pop    ds
  418ec9:	xor    eax,0x9efaad14
  418ece:	add    cl,bl
  418ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed1:	adc    esi,DWORD PTR [ebx]
  418ed3:	aas    
  418ed4:	cmp    al,BYTE PTR [ebp+0x44]
  418ed7:	lods   eax,DWORD PTR ds:[esi]
  418ed8:	pop    ecx
  418ed9:	in     al,dx
  418eda:	stos   BYTE PTR es:[edi],al
  418edb:	cmc    
  418edc:	mov    ds:0x10783f40,al
  418ee1:	push   0xffffffca
  418ee3:	inc    esp
  418ee4:	pushf  
  418ee5:	je     0x418e92
  418ee7:	pop    ds
  418ee8:	in     al,0xba
  418eea:	and    ch,BYTE PTR [ecx+0x59]
  418eed:	inc    ecx
  418eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eef:	mov    eax,ds:0xcb496347
  418ef4:	fidivr DWORD PTR [eax+0x3e]
  418ef7:	sub    al,0x86
  418ef9:	xchg   edi,eax
  418efa:	cmp    BYTE PTR [eax-0x50],dl
  418efd:	and    DWORD PTR [esp+eiz*8],esi
  418f00:	sbb    al,0x1f
  418f02:	repnz xor ch,dh
  418f05:	xchg   edx,eax
  418f06:	xchg   edx,esp
  418f08:	pop    ss
  418f09:	outs   dx,BYTE PTR ds:[esi]
  418f0a:	test   eax,0xd3da91b4
  418f0f:	and    esp,eax
  418f11:	adc    bl,dh
  418f13:	dec    edi
  418f14:	test   eax,0x4f838ada
  418f19:	pop    esi
  418f1a:	dec    esp
  418f1b:	push   es
  418f1c:	mov    ch,0xe2
  418f1e:	cmc    
  418f1f:	addr16 mov esi,0x3cfb207f
  418f25:	lock lahf 
  418f27:	sbb    ch,BYTE PTR [esi]
  418f29:	jecxz  0x418f0a
  418f2b:	mov    gs,esi
  418f2d:	nop
  418f2e:	pusha  
  418f2f:	test   BYTE PTR [ebp-0x4401fe9b],al
  418f35:	or     ah,ch
  418f37:	out    0xad,al
  418f39:	and    DWORD PTR [edi],0xffffffc8
  418f3c:	jmp    DWORD PTR [edx-0x487fa736]
  418f42:	mov    al,0x18
  418f44:	mov    cl,0x1c
  418f46:	js     0x418edd
  418f48:	xor    al,0xa3
  418f4a:	push   0xcdf92213
  418f4f:	adc    dh,bh
  418f51:	repnz pop ss
  418f53:	push   cs
  418f54:	ficom  WORD PTR [edx-0x6]
  418f57:	test   al,0xd3
  418f59:	cmp    dh,bl
  418f5b:	test   DWORD PTR [eax+0x6d],esp
  418f5e:	push   ebx
  418f5f:	jge    0x418f81
  418f61:	sub    dl,BYTE PTR [ecx+0x54]
  418f64:	test   ch,0x74
  418f67:	enter  0x514,0xc
  418f6b:	xor    cl,BYTE PTR [ebp-0x29]
  418f6e:	jge    0x418fc6
  418f70:	fs mov cl,0xc3
  418f73:	frstor [edx-0x783d106e]
  418f79:	sbb    al,0x62
  418f7b:	cld    
  418f7c:	test   eax,0xdfdc46c8
  418f81:	hlt    
  418f82:	scas   eax,DWORD PTR es:[edi]
  418f83:	out    0xb0,al
  418f85:	push   ds
  418f86:	cmp    BYTE PTR [ebx],bl
  418f88:	adc    cl,BYTE PTR [edi-0x27c7cfc2]
  418f8e:	mov    ebp,0xda9248fb
  418f93:	pop    ecx
  418f94:	push   0x3faf0de9
  418f99:	mov    ch,0x3
  418f9b:	pop    ebp
  418f9c:	rol    dh,0x69
  418f9f:	loopne 0x418ffd
  418fa1:	mov    dl,0xaf
  418fa3:	iret   
  418fa4:	fcmovu st,st(3)
  418fa6:	sbb    al,0xdd
  418fa8:	jb     0x418f30
  418faa:	mov    bl,0x8a
  418fac:	xchg   edi,eax
  418fad:	mov    al,ds:0xb3aa2866
  418fb2:	pusha  
  418fb3:	xor    eax,0x81945e5b
  418fb8:	fidiv  DWORD PTR [edx+0x3005eed]
  418fbe:	push   0xf
  418fc0:	xor    eax,0x21862766
  418fc5:	in     al,dx
  418fc6:	aad    0xbf
  418fc8:	pop    ss
  418fc9:	test   ch,dh
  418fcb:	(bad)  
  418fcc:	pop    ecx
  418fcd:	repnz xchg ebx,eax
  418fcf:	cli    
  418fd0:	imul   esi,DWORD PTR [ebx-0x7e],0xffffff81
  418fd4:	pushf  
  418fd5:	scas   eax,DWORD PTR es:[edi]
  418fd6:	fdivr  st(1),st
  418fd8:	cdq    
  418fd9:	sbb    eax,0xb56e1ad9
  418fde:	xchg   DWORD PTR [ebp-0x34],ecx
  418fe1:	adc    ch,BYTE PTR [edx]
  418fe3:	mov    ah,0x5f
  418fe5:	aam    0xe7
  418fe7:	add    BYTE PTR [ebx+ebp*2+0x40],cl
  418feb:	int    0x38
  418fed:	mov    ds:0xc95bebb0,eax
  418ff2:	xor    ecx,DWORD PTR [ebp+0xf]
  418ff5:	rcl    BYTE PTR ds:0x33521320,cl
  418ffb:	pop    edi
  418ffc:	out    dx,eax
  418ffd:	stc    
  418ffe:	push   ebp
  418fff:	sub    eax,0xaf32a540
  419004:	ret    
  419005:	retf   0x7fa
  419008:	cmp    eax,0x4ddf3878
  41900d:	adc    eax,0xb504a7cf
  419012:	scas   eax,DWORD PTR es:[edi]
  419013:	mov    DWORD PTR [edi],edx
  419015:	repnz push es
  419017:	jp     0x41900b
  419019:	shl    BYTE PTR [eax],1
  41901b:	aam    0xc8
  41901d:	and    dh,BYTE PTR [edx+0x3334d33]
  419023:	adc    edx,DWORD PTR [esp+esi*8+0x2cb660e8]
  41902a:	ret    
  41902b:	adc    ecx,DWORD PTR [edi+0x722aea63]
  419031:	cmp    edi,DWORD PTR [esi+0x6897d26]
  419037:	pop    ebx
  419038:	mov    ?,WORD PTR [edi]
  41903a:	push   esi
  41903b:	add    al,dl
  41903d:	or     eax,0x7733b9e5
  419042:	and    al,BYTE PTR [ecx]
  419044:	and    eax,0x59f9e479
  419049:	mov    cl,0xfa
  41904b:	adc    dh,BYTE PTR [esi]
  41904d:	in     eax,dx
  41904e:	mov    ecx,0x20ea00e0
  419053:	pop    ecx
  419054:	pop    edi
  419055:	xchg   ecx,eax
  419056:	or     eax,0x32df6405
  41905b:	test   DWORD PTR [edi+ecx*2+0x4e113af],esi
  419062:	cwde   
  419063:	pop    esi
  419064:	js     0x41909b
  419066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419067:	rcl    cl,1
  419069:	inc    ecx
  41906a:	push   ebp
  41906b:	sbb    eax,0x23628a7f
  419070:	xchg   esp,eax
  419071:	fistp  QWORD PTR [esp+edi*4-0x16be62b9]
  419078:	cmp    bh,BYTE PTR [edi+0x2d]
  41907b:	int    0x89
  41907d:	xchg   ecx,eax
  41907e:	mov    esp,0x2bb031af
  419083:	icebp  
  419084:	in     eax,0xf5
  419086:	and    DWORD PTR [ebx+0x6adcd049],esi
  41908c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41908d:	out    0x84,al
  41908f:	cmp    dl,bl
  419091:	jmp    0xaa88:0x38984582
  419098:	les    esp,FWORD PTR [eax+0x242352cf]
  41909e:	dec    edi
  41909f:	ss ja  0x419048
  4190a2:	and    DWORD PTR [edx],ebp
  4190a4:	leave  
  4190a5:	int    0x3c
  4190a7:	call   0x1eb20123
  4190ac:	aam    0xcb
  4190ae:	scas   al,BYTE PTR es:[edi]
  4190af:	cmp    DWORD PTR [eax-0x3e],eax
  4190b2:	push   ebp
  4190b3:	jnp    0x4190de
  4190b5:	and    BYTE PTR [esi+0x71],dh
  4190b8:	mov    al,ds:0x7bcb3d80
  4190bd:	js     0x419064
  4190bf:	push   cs
  4190c0:	jp     0x419081
  4190c2:	lods   al,BYTE PTR ds:[esi]
  4190c3:	sahf   
  4190c4:	sub    bh,BYTE PTR ds:[edi+esi*8]
  4190c8:	or     DWORD PTR [edx-0x24b15b],ebp
  4190ce:	xchg   ebx,eax
  4190cf:	push   0x77ade51c
  4190d4:	stc    
  4190d5:	call   0x1b587d17
  4190da:	(bad)  
  4190db:	hlt    
  4190dc:	and    BYTE PTR [eax+0x6e0f0df0],dl
  4190e2:	or     eax,0x2b2b3dbb
  4190e7:	xchg   edx,eax
  4190e8:	fild   QWORD PTR [eax+0x23]
  4190eb:	fcmove st,st(3)
  4190ed:	cmp    ah,cl
  4190ef:	jae    0x419166
  4190f1:	jb     0x41916e
  4190f3:	call   0xcdbb8feb
  4190f8:	mov    ch,0x51
  4190fa:	mov    ds:0x2a9fd5f4,al
  4190ff:	imul   DWORD PTR [edi]
  419101:	push   ss
  419102:	call   DWORD PTR [eax+0x7a1e6da9]
  419108:	xchg   ah,cl
  41910a:	mov    DWORD PTR [eax+eax*4+0x4f15755],edx
  419111:	mov    ah,0x7f
  419113:	ss xor al,0xaa
  419116:	mov    ebp,0xf5e3cd35
  41911b:	iret   
  41911c:	call   FWORD PTR [esi]
  41911e:	aam    0x92
  419120:	push   edi
  419121:	lahf   
  419122:	fistp  DWORD PTR [ecx+0xe6e9af6]
  419128:	adc    dh,ah
  41912a:	push   ebp
  41912b:	lock data16 je 0x41919c
  41912f:	sub    ebx,DWORD PTR [ecx-0x55]
  419132:	sbb    DWORD PTR [ecx-0x2f9b3cda],ecx
  419138:	mov    bl,0xcf
  41913a:	test   BYTE PTR ds:0x5cc4328,dl
  419140:	sub    ah,dl
  419142:	fldenv ds:0xf3b95207
  419148:	loope  0x41916a
  41914a:	pop    esp
  41914b:	dec    eax
  41914c:	push   esp
  41914d:	adc    al,0xda
  41914f:	hlt    
  419150:	push   0x420c1ab5
  419155:	xlat   BYTE PTR ds:[ebx]
  419156:	cmp    BYTE PTR [ecx+0x7a],bh
  419159:	inc    edx
  41915a:	in     eax,0x7c
  41915c:	add    eax,DWORD PTR [esi+0x1e]
  41915f:	sub    DWORD PTR [edi-0x5d],0x3f48aa99
  419166:	jl     0x419128
  419168:	fs push 0x479ce27f
  41916e:	push   ecx
  41916f:	and    esi,esp
  419171:	jmp    0x419189
  419173:	pushf  
  419174:	cmp    ecx,edi
  419176:	dec    edx
  419177:	pop    esp
  419178:	pop    edi
  419179:	lods   al,BYTE PTR ds:[esi]
  41917a:	or     eax,0xfdec9468
  41917f:	test   DWORD PTR [eax],esp
  419181:	bnd jne 0x419150
  419184:	ror    DWORD PTR [eax+eiz*4-0x64],cl
  419188:	shl    DWORD PTR [esi-0x3a436449],cl
  41918e:	jl     0x41920d
  419190:	mov    ah,0x10
  419192:	sbb    ebp,DWORD PTR [ebp-0x7b]
  419195:	mov    ebx,0x830095ae
  41919a:	call   0xba95:0x227bab10
  4191a1:	pusha  
  4191a2:	mov    BYTE PTR [ebp+0x15982f43],al
  4191a8:	mov    ds:0x160bdec0,al
  4191ad:	arpl   WORD PTR [ebx-0x45],bx
  4191b0:	jne    0x4191fe
  4191b2:	adc    esp,DWORD PTR [ecx+0x77]
  4191b5:	cmp    esi,DWORD PTR [edx]
  4191b7:	cmc    
  4191b8:	(bad)  
  4191b9:	push   ebp
  4191ba:	and    eax,0x18b869be
  4191bf:	pop    edi
  4191c0:	jno    0x41922a
  4191c2:	pop    DWORD PTR [eax-0x7594f68b]
  4191c8:	mov    ebx,0x374350b1
  4191cd:	aas    
  4191ce:	rol    DWORD PTR [edx+0x72],1
  4191d1:	in     al,0x37
  4191d3:	adc    bl,BYTE PTR ds:0xc26b84b3
  4191d9:	test   eax,0x9fafa1ff
  4191de:	daa    
  4191df:	mov    dh,0x4b
  4191e1:	dec    eax
  4191e2:	or     eax,0xee05de5e
  4191e7:	pop    ebx
  4191e8:	int3   
  4191e9:	sahf   
  4191ea:	cmp    al,0x49
  4191ec:	icebp  
  4191ed:	mov    ds:0xc2a2ac50,al
  4191f2:	(bad)  
  4191f3:	mov    edi,0xaf6ad1d0
  4191f8:	aaa    
  4191f9:	pop    ss
  4191fa:	mov    edx,0x6a453a07
  4191ff:	addr16 dec ecx
  419201:	lock inc ebp
  419203:	cmp    BYTE PTR ds:0xa9a5fa41,dh
  419209:	sbb    eax,0x5bae0c9d
  41920e:	jae    0x419204
  419210:	pop    edx
  419211:	mov    al,ds:0xf5629994
  419216:	pop    ebx
  419217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419218:	fist   DWORD PTR [ebx+0x76]
  41921b:	aad    0x1f
  41921d:	adc    al,0xd7
  41921f:	xchg   ebx,eax
  419220:	pusha  
  419221:	sub    edx,DWORD PTR [esi+esi*4-0x60]
  419225:	(bad)  
  419227:	rep lods al,BYTE PTR ds:[esi]
  419229:	fstp   TBYTE PTR [ecx+0x3f66b4e6]
  41922f:	xchg   ecx,eax
  419230:	in     eax,dx
  419231:	sub    BYTE PTR [eax],dh
  419233:	mov    BYTE PTR [edi+0x3ee61508],bl
  419239:	xor    DWORD PTR [ebp-0x7a27aa6a],ebx
  41923f:	(bad)  
  419241:	out    0x5d,eax
  419243:	adc    eax,0x14b19508
  419248:	(bad)  
  419249:	fs retf 
  41924b:	ds in  eax,dx
  41924d:	ret    0xb88c
  419250:	je     0x419254
  419252:	fwait
  419253:	leave  
  419254:	ins    BYTE PTR es:[edi],dx
  419255:	mov    al,0x4
  419257:	sbb    al,0xea
  419259:	(bad)  
  41925a:	fisub  WORD PTR [ebp+edi*2+0x77]
  41925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41925f:	dec    ebx
  419260:	nop
  419261:	gs retf 0x81ae
  419265:	inc    ebp
  419266:	outs   dx,BYTE PTR ds:[esi]
  419267:	jns    0x419257
  419269:	out    dx,eax
  41926a:	dec    edi
  41926b:	jbe    0x419289
  41926d:	data16 arpl WORD PTR ds:0xac4ad4b6,bx
  419274:	mov    ecx,0xaa010fc5
  419279:	int    0xa8
  41927b:	xor    al,0x4d
  41927d:	jle    0x4192c0
  41927f:	iret   
  419280:	scas   eax,DWORD PTR es:[edi]
  419281:	fld    DWORD PTR [edi+0x5ca7d3e4]
  419287:	iret   
  419288:	pop    ebp
  419289:	lea    esp,[ebx-0x24]
  41928c:	retf   
  41928d:	lahf   
  41928e:	inc    esi
  41928f:	es and ebp,0xa6555e7e
  419296:	pop    esp
  419297:	hlt    
  419298:	and    al,0xb1
  41929a:	mov    WORD PTR [esi-0x379d919e],ds
  4192a0:	call   0xffaea818
  4192a5:	jbe    0x419271
  4192a7:	xor    BYTE PTR [edi-0x2622e480],ch
  4192ad:	and    BYTE PTR [esi+0x5],dl
  4192b0:	pop    esi
  4192b1:	mov    dl,BYTE PTR [ecx+0x6a]
  4192b4:	push   esp
  4192b5:	stos   DWORD PTR es:[edi],eax
  4192b6:	adc    eax,0xe3929d30
  4192bb:	shl    DWORD PTR [ebx+0x1821b84],1
  4192c1:	push   esi
  4192c2:	push   cs
  4192c3:	inc    esp
  4192c4:	cmc    
  4192c5:	das    
  4192c6:	sti    
  4192c7:	stos   DWORD PTR es:[edi],eax
  4192c8:	mov    dh,0x8
  4192ca:	sub    edi,DWORD PTR [edi+eiz*8]
  4192cd:	(bad)  
  4192ce:	mov    bh,0xcb
  4192d0:	cmp    eax,0x8a5dbffe
  4192d5:	xchg   esi,eax
  4192d6:	mov    fs,WORD PTR [edi+edx*8]
  4192d9:	sbb    DWORD PTR [eax+edx*4-0x45],edi
  4192dd:	loop   0x41934e
  4192df:	sbb    bh,ah
  4192e1:	fisub  DWORD PTR [ebx-0x4b5fcbcf]
  4192e7:	popf   
  4192e8:	push   ds
  4192e9:	sub    al,0xb4
  4192eb:	loope  0x419303
  4192ed:	xlat   BYTE PTR ds:[ebx]
  4192ee:	(bad)  
  4192ef:	lea    esp,[ebx]
  4192f1:	push   cs
  4192f2:	jmp    0x419346
  4192f4:	adc    eax,0xa2836b79
  4192f9:	bound  ebx,QWORD PTR [ebp+0x625e85ae]
  4192ff:	adc    ecx,DWORD PTR cs:[edi-0x564a5dba]
  419306:	pusha  
  419307:	stos   DWORD PTR es:[edi],eax
  419308:	inc    ebp
  419309:	mov    al,0x18
  41930b:	data16 into 
  41930d:	mov    ds:0x73ac7785,al
  419312:	rol    esp,1
  419314:	fidiv  DWORD PTR [edi-0x18705b9c]
  41931a:	fsubrp st(6),st
  41931c:	call   0xa8286c91
  419321:	dec    ecx
  419322:	lahf   
  419323:	adc    BYTE PTR [ebx+edi*8+0x16d45565],bl
  41932a:	xchg   bl,ah
  41932c:	xchg   ebp,eax
  41932d:	pop    edx
  41932e:	xlat   BYTE PTR ds:[ebx]
  41932f:	and    BYTE PTR [edi],dh
  419331:	jbe    0x41932c
  419333:	push   0x28ef8436
  419338:	pop    ss
  419339:	cli    
  41933a:	mov    dh,0x47
  41933c:	push   0xffffffe4
  41933e:	mov    ch,0xf7
  419340:	call   0xec75:0x9c0bea74
  419347:	xchg   edx,eax
  419348:	cmp    BYTE PTR [esi],dl
  41934a:	add    ch,dh
  41934c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41934d:	leave  
  41934e:	in     eax,dx
  41934f:	mov    ds:0xde106683,eax
  419354:	les    edx,FWORD PTR [edx-0x50]
  419357:	stos   BYTE PTR es:[edi],al
  419358:	ins    DWORD PTR es:[edi],dx
  419359:	dec    edi
  41935a:	jae    0x419386
  41935c:	ss jnp 0x4193d0
  41935f:	addr16 aas 
  419361:	jno    0x419305
  419363:	adc    al,0xba
  419365:	mov    WORD PTR [edx],es
  419367:	test   cl,cl
  419369:	aaa    
  41936a:	cwde   
  41936b:	and    ch,BYTE PTR [eax]
  41936d:	in     eax,dx
  41936e:	sbb    DWORD PTR [edi],0x7e912168
  419374:	dec    ebx
  419375:	ret    
  419376:	in     eax,dx
  419377:	ror    DWORD PTR [esi],0x25
  41937a:	push   ss
  41937b:	les    ecx,FWORD PTR [edx+0x444ab877]
  419381:	leave  
  419382:	push   esi
  419383:	sbb    esi,DWORD PTR [edx]
  419385:	add    eax,0xe13e7c1f
  41938a:	pop    ebp
  41938b:	out    dx,al
  41938c:	test   eax,0x35935aeb
  419391:	imul   ebx,DWORD PTR [esi+0x2beeadc7],0xffffffef
  419398:	push   esp
  419399:	shr    BYTE PTR [edx+eax*2-0x1b],1
  41939d:	jge    0x419363
  41939f:	clc    
  4193a0:	call   0x8578:0x72a3b847
  4193a7:	fidiv  WORD PTR [ebx+0x77f1ba8f]
  4193ad:	jge    0x419333
  4193af:	out    dx,al
  4193b0:	(bad)  
  4193b1:	pop    esi
  4193b2:	bound  eax,QWORD PTR [ebx+0x41]
  4193b5:	pushf  
  4193b6:	prefetch BYTE PTR [edi]
  4193b9:	out    0x8e,eax
  4193bb:	js     0x419342
  4193bd:	cmpps  xmm1,XMMWORD PTR [edx-0x35c8a4d],0x67
  4193c5:	push   cs
  4193c6:	stos   BYTE PTR es:[edi],al
  4193c7:	jecxz  0x4193b2
  4193c9:	in     al,dx
  4193ca:	les    ebp,FWORD PTR [esi]
  4193cc:	scas   al,BYTE PTR es:[edi]
  4193cd:	or     BYTE PTR [eax+0x6cc5a03c],dh
  4193d3:	aad    0x3d
  4193d5:	fimul  DWORD PTR [ebx+0x1e46c87e]
  4193db:	das    
  4193dc:	push   eax
  4193dd:	enter  0x2233,0x9a
  4193e1:	loopne 0x4193b9
  4193e3:	out    dx,al
  4193e4:	mov    al,BYTE PTR [ecx]
  4193e6:	int3   
  4193e7:	outs   dx,BYTE PTR ds:[esi]
  4193e8:	dec    edx
  4193e9:	pop    esp
  4193ea:	xor    al,0xee
  4193ec:	iret   
  4193ed:	add    al,0x24
  4193ef:	pop    edx
  4193f0:	retf   
  4193f1:	dec    ebx
  4193f2:	(bad)  
  4193f3:	hlt    
  4193f4:	mul    BYTE PTR ds:[eax+0x3281c92c]
  4193fb:	mov    dl,0x9d
  4193fd:	add    BYTE PTR [edi],dh
  4193ff:	or     eax,DWORD PTR [edi+0x4c]
  419402:	xchg   esp,eax
  419403:	sub    al,0xef
  419405:	loop   0x419427
  419407:	icebp  
  419408:	cli    
  419409:	nop
  41940a:	dec    esi
  41940b:	jp     0x4193de
  41940d:	loop   0x419423
  41940f:	mov    edx,0xcdf4fbdc
  419414:	call   0x98a8:0x6447ecbf
  41941b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941c:	cld    
  41941d:	and    eax,0xcba6164f
  419422:	mov    ds:0x9537afd,eax
  419427:	mov    ebx,0xc96573b0
  41942c:	pop    ecx
  41942d:	jnp    0x419450
  41942f:	jl     0x4193f6
  419431:	sub    ebx,edi
  419433:	test   DWORD PTR [esi+ecx*1],esp
  419436:	inc    esp
  419437:	or     ah,BYTE PTR [eax]
  419439:	push   eax
  41943a:	imul   edi,DWORD PTR [ecx],0xbaf4555b
  419440:	(bad)  
  419441:	mov    bh,0x89
  419443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419444:	jmp    0x116c:0x60e0a93e
  41944b:	jmp    0xb13d4067
  419450:	sahf   
  419451:	(bad)  
  419452:	stos   BYTE PTR es:[edi],al
  419453:	sbb    bl,BYTE PTR [ebx]
  419455:	sbb    esp,edx
  419457:	add    al,0x77
  419459:	loop   0x419455
  41945b:	inc    ecx
  41945c:	pop    esp
  41945d:	cmp    bh,dh
  41945f:	rcr    BYTE PTR ds:[ebp+0x69],cl
  419463:	test   esp,esp
  419465:	fisttp QWORD PTR [edi-0x6d04a62d]
  41946b:	xor    ah,BYTE PTR [ebx]
  41946d:	sbb    DWORD PTR [ebx+0x1f],eax
  419470:	aas    
  419471:	push   ebp
  419472:	idiv   DWORD PTR [edx-0x27584f66]
  419478:	aaa    
  419479:	mov    ah,0xff
  41947b:	retf   
  41947c:	(bad)  
  41947d:	ins    DWORD PTR es:[edi],dx
  41947e:	adc    eax,0x1c97fe76
  419483:	cmovge ebx,DWORD PTR [ecx+ecx*4-0x71]
  419488:	inc    sp
  41948a:	clc    
  41948b:	mov    ds:0x6e3851d6,al
  419490:	aad    0xe8
  419492:	jae    0x419502
  419494:	mov    ebx,0xe0b01fe1
  419499:	daa    
  41949a:	sub    eax,0x4a963fa
  41949f:	pushf  
  4194a0:	mov    eax,0x933d05b7
  4194a5:	adc    BYTE PTR ds:0x39e2b475,ah
  4194ab:	data16 mov dl,0x40
  4194ae:	sbb    eax,0x854dd074
  4194b3:	jecxz  0x419490
  4194b5:	pop    edx
  4194b7:	add    eax,0x9651772f
  4194bc:	mov    ebx,0xc0276094
  4194c1:	cwde   
  4194c2:	jae    0x419453
  4194c4:	in     eax,dx
  4194c5:	in     eax,0xf0
  4194c7:	sahf   
  4194c8:	sbb    eax,0x71c221ec
  4194cd:	call   0xf532:0xcb90a89d
  4194d4:	repnz es mov esp,0x33efdc03
  4194db:	mov    edi,0x2bd9ace1
  4194e0:	sub    al,al
  4194e2:	das    
  4194e3:	jns    0x4194b8
  4194e5:	dec    edx
  4194e6:	out    dx,eax
  4194e7:	shr    BYTE PTR [edi+0x2e],0xe3
  4194eb:	jb     0x419552
  4194ed:	pop    esp
  4194ee:	fld    TBYTE PTR [eax]
  4194f0:	sbb    DWORD PTR [edi+0x44b5e835],0x55c0682e
  4194fa:	pop    edx
  4194fb:	clc    
  4194fc:	imul   eax,DWORD PTR [edx+0x7df06036],0xffffffbe
  419503:	mov    ds:0x7cfb63a2,al
  419508:	dec    esi
  419509:	fistp  WORD PTR [ebp+0x40]
  41950c:	and    ecx,DWORD PTR [eax]
  41950e:	jo     0x419568
  419510:	push   esp
  419511:	test   eax,0xd8e1ff8f
  419516:	cli    
  419517:	in     al,0x73
  419519:	fwait
  41951a:	jae    0x4194bf
  41951c:	hlt    
  41951d:	fsubr  QWORD PTR [ebp+0x33]
  419520:	aam    0x2a
  419522:	imul   edx,DWORD PTR [edx],0xe3178172
  419528:	les    edi,FWORD PTR [ecx-0x3a]
  41952b:	push   0xffffffc8
  41952d:	lahf   
  41952e:	inc    ecx
  41952f:	cmp    al,0x2
  419531:	mov    ebx,0x97bc00ad
  419536:	dec    edi
  419537:	sub    BYTE PTR [ebx+0xab9a2d3],0x56
  41953e:	sbb    DWORD PTR [ebx+0x6ab1598a],esp
  419544:	pop    ebx
  419545:	pop    ebx
  419546:	sbb    ebx,DWORD PTR [eax+0x330118c]
  41954c:	adc    DWORD PTR [ebp+0x17],ebp
  41954f:	fld    QWORD PTR [eax+0x1de9e25e]
  419555:	loop   0x419586
  419557:	(bad)  
  419558:	fsub   QWORD PTR [esi+0x9a774c6]
  41955e:	xor    ebx,DWORD PTR [edi]
  419560:	mov    cr1,edi
  419563:	fsub   QWORD PTR [ebx]
  419565:	(bad)  
  419566:	into   
  419567:	mov    ecx,0xc992e1b0
  41956c:	gs out dx,al
  41956e:	scas   al,BYTE PTR es:[edi]
  41956f:	push   0x33
  419571:	(bad)  
  419572:	lds    ebx,FWORD PTR fs:0x9953abc8
  419579:	in     al,dx
  41957a:	push   esi
  41957b:	aas    
  41957c:	push   ebx
  41957d:	pusha  
  41957e:	repz or al,0x8f
  419581:	test   BYTE PTR [ecx],cl
  419583:	or     cl,0xbe
  419586:	xor    al,0xb
  419588:	enter  0xc366,0x2
  41958c:	aam    0x3a
  41958e:	hlt    
  41958f:	or     DWORD PTR [edi],edi
  419591:	ret    
  419592:	cmp    al,0x89
  419594:	sbb    cl,BYTE PTR es:[esi+ebp*2+0x58]
  419599:	sbb    eax,0xf4d9edec
  41959e:	aad    0xd2
  4195a0:	mov    esp,0xc967f2dd
  4195a5:	push   edi
  4195a6:	repnz fiadd DWORD PTR ds:0x2a834158
  4195ad:	cmp    ah,dh
  4195af:	adc    edx,DWORD PTR [ebp+0x167f88c4]
  4195b5:	sbb    bh,BYTE PTR [eax+0x27b9cebe]
  4195bb:	out    dx,eax
  4195bc:	xor    DWORD PTR [edi-0x69187eb3],ebp
  4195c2:	xchg   BYTE PTR [edx+0x5807f34a],bh
  4195c8:	push   eax
  4195c9:	sub    BYTE PTR [esi],dh
  4195cb:	outs   dx,DWORD PTR ds:[esi]
  4195cc:	and    esp,DWORD PTR [ecx]
  4195ce:	stos   DWORD PTR es:[edi],eax
  4195cf:	jae    0x419586
  4195d1:	mov    edi,0x7b45c103
  4195d6:	ficomp DWORD PTR [ebx+0x4268a766]
  4195dc:	(bad)  
  4195dd:	iret   
  4195de:	xor    ebp,DWORD PTR [ecx+0x45303a5a]
  4195e4:	jmp    DWORD PTR [ebx+0x3d962fa1]
  4195ea:	dec    ecx
  4195eb:	(bad)  
  4195ec:	lahf   
  4195ed:	sahf   
  4195ee:	in     eax,0x64
  4195f0:	packssdw mm3,mm0
  4195f3:	mov    edi,DWORD PTR [ecx]
  4195f5:	jg     0x419621
  4195f7:	push   es
  4195f8:	jmp    DWORD PTR es:[ebx-0x7b6ba6e6]
  4195ff:	gs pop esi
  419601:	sub    DWORD PTR [esi-0x3c],0x238ebdc7
  419608:	xorps  xmm2,XMMWORD PTR [esi+0x705dfa4]
  41960f:	jno    0x4195e3
  419611:	sbb    eax,0x9202d7e9
  419616:	stos   DWORD PTR es:[edi],eax
  419617:	and    BYTE PTR [ecx-0x31],0x13
  41961b:	ins    DWORD PTR es:[edi],dx
  41961c:	mov    dh,0x75
  41961e:	pop    esi
  41961f:	mov    al,ds:0x711b4ad2
  419624:	jle    0x4195e5
  419626:	lahf   
  419627:	dec    ebx
  419628:	je     0x4195ff
  41962a:	dec    eax
  41962b:	cmp    ebx,DWORD PTR [ecx-0x13]
  41962e:	push   0x2f
  419630:	div    dh
  419632:	mov    ah,dl
  419634:	push   cs
  419635:	xlat   BYTE PTR ds:[ebx]
  419636:	mov    edx,0x4ec1cb34
  41963b:	and    al,0xd6
  41963d:	dec    ebx
  41963e:	xchg   esi,eax
  41963f:	lock call 0x2773:0x71495522
  419647:	fcomp  DWORD PTR [edi-0x3f3e9488]
  41964d:	pop    eax
  41964e:	mov    ?,WORD PTR [eax+0x3b]
  419651:	xchg   DWORD PTR [edx+0xf],edi
  419654:	cmp    edi,ebx
  419656:	inc    ecx
  419657:	jne    0x4196b4
  419659:	push   ebp
  41965a:	mov    ecx,0x79cf4a20
  41965f:	rol    BYTE PTR [edx+0x49],1
  419662:	mov    WORD PTR [esi-0x24a03f4a],?
  419668:	mov    BYTE PTR [ebx+edi*8],cl
  41966b:	js     0x4195f9
  41966d:	push   edx
  41966e:	fucomp st(0)
  419670:	ret    0xab94
  419673:	sar    DWORD PTR [esi],0xca
  419676:	xchg   esi,eax
  419677:	adc    BYTE PTR [edi],dl
  419679:	jecxz  0x419645
  41967b:	inc    ebp
  41967c:	push   es
  41967d:	(bad)  
  41967e:	inc    esp
  41967f:	dec    ebp
  419680:	cmp    al,ch
  419682:	hlt    
  419683:	jne    0x419644
  419685:	shl    DWORD PTR [edi],cl
  419687:	outs   dx,BYTE PTR ds:[esi]
  419688:	nop
  419689:	adc    esp,esi
  41968b:	xor    eax,0xeea87d9
  419690:	scas   al,BYTE PTR es:[edi]
  419691:	lock push ebx
  419693:	mov    bh,0x4a
  419695:	std    
  419696:	mov    bh,0x4
  419698:	(bad)  
  419699:	aad    0x63
  41969b:	dec    al
  41969d:	cs jl  0x4196e0
  4196a0:	dec    ebp
  4196a1:	push   ebx
  4196a2:	sub    eax,0x4f86135f
  4196a7:	into   
  4196a8:	or     ebp,DWORD PTR [ebx]
  4196aa:	jbe    0x419712
  4196ac:	xchg   ebx,edx
  4196ae:	inc    ebx
  4196af:	stc    
  4196b0:	retf   
  4196b1:	stos   BYTE PTR es:[edi],al
  4196b2:	retf   
  4196b3:	sub    dh,BYTE PTR [esi+ecx*8+0x39]
  4196b7:	arpl   WORD PTR [edi-0x2c],dx
  4196ba:	jns    0x4196cf
  4196bc:	xchg   ebx,eax
  4196bd:	fwait
  4196be:	pop    esp
  4196bf:	or     esp,DWORD PTR [eax-0xb]
  4196c2:	mov    ecx,0xf7320828
  4196c7:	inc    edi
  4196c8:	cld    
  4196c9:	mov    eax,ds:0x22647724
  4196ce:	sbb    eax,0x33c5e663
  4196d3:	sbb    eax,0xa342a596
  4196d8:	aam    0x84
  4196da:	rcr    BYTE PTR [ebx],0x9a
  4196dd:	outs   dx,DWORD PTR ds:[esi]
  4196de:	fidivr DWORD PTR [edi]
  4196e0:	pusha  
  4196e1:	lds    esi,FWORD PTR [edi-0x333887a3]
  4196e7:	mov    ebp,DWORD PTR [ebp-0x3c]
  4196ea:	cmp    ah,BYTE PTR [esi+0x2785b6c8]
  4196f0:	mov    BYTE PTR [esi-0x1e],cl
  4196f3:	jle    0x4196a2
  4196f5:	cmp    cl,BYTE PTR [edx+0xa]
  4196f8:	cwde   
  4196f9:	xor    ecx,esp
  4196fb:	ins    BYTE PTR es:[edi],dx
  4196fc:	test   BYTE PTR [esi+eiz*8],dl
  4196ff:	js     0x4196c7
  419701:	call   0xb0a21b7e
  419706:	dec    eax
  419707:	repnz loopne 0x41969e
  41970a:	repz add esi,DWORD PTR ds:[edx]
  41970e:	(bad)  
  41970f:	addr16 push ebp
  419711:	into   
  419712:	push   edi
  419713:	in     al,dx
  419714:	je     0x4196fa
  419716:	outs   dx,DWORD PTR ds:[esi]
  419717:	mov    esi,0x232abc17
  41971c:	inc    esp
  41971d:	popa   
  41971e:	mov    ch,0xcb
  419720:	pop    edx
  419721:	mov    eax,0xf228834e
  419726:	sahf   
  419727:	cmp    bl,ah
  419729:	iret   
  41972a:	mov    DWORD PTR [edx-0x1a],esi
  41972d:	(bad)  
  41972f:	or     al,0xbb
  419731:	sub    al,0x66
  419733:	(bad)  
  419734:	and    eax,0x6a339c22
  419739:	in     eax,dx
  41973a:	pop    eax
  41973b:	ins    BYTE PTR es:[edi],dx
  41973c:	sub    BYTE PTR [esi+0x7c],dh
  41973f:	inc    ebp
  419740:	test   bh,ch
  419742:	xchg   edx,eax
  419743:	and    edx,edx
  419745:	or     BYTE PTR [ebp-0x216bbe7a],0x2e
  41974c:	loope  0x4197ae
  41974e:	xchg   ebp,eax
  41974f:	jae    0x41975f
  419751:	pop    edx
  419752:	mov    dl,0xe4
  419754:	or     edx,ecx
  419756:	mov    ds:0x80b852d6,al
  41975b:	je     0x41979b
  41975d:	in     al,dx
  41975e:	xchg   DWORD PTR [edi+0x5308160e],edi
  419764:	ret    
  419765:	stos   BYTE PTR es:[edi],al
  419766:	stos   DWORD PTR es:[edi],eax
  419767:	leave  
  419768:	test   al,0x8d
  41976a:	xchg   edi,eax
  41976b:	js     0x419734
  41976d:	push   es
  41976e:	mov    bl,0xf4
  419770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419771:	mov    bl,0xd
  419773:	clc    
  419774:	and    esp,DWORD PTR [ebp-0x37420351]
  41977a:	or     al,0x5f
  41977c:	ror    BYTE PTR [edi+esi*8+0x77f7ea03],0x56
  419784:	fnstcw WORD PTR [edx-0x45b44dd]
  41978a:	xor    eax,0x2d364f86
  41978f:	ins    DWORD PTR es:[edi],dx
  419790:	loope  0x4197c6
  419792:	repz jne 0x4197e1
  419795:	inc    ecx
  419796:	es cmp al,0xe0
  419799:	idiv   DWORD PTR [ebx]
  41979b:	or     al,0x88
  41979d:	retf   
  41979e:	mov    eax,0xabc067ef
  4197a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a4:	retf   
  4197a5:	jmp    0x92b34bc2
  4197aa:	(bad)  
  4197ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ac:	call   0x23f6869b
  4197b1:	xor    esp,DWORD PTR [esi]
  4197b3:	mov    esi,0x5fd53246
  4197b8:	xor    ch,BYTE PTR [eax+0x76fccfe7]
  4197be:	out    0x76,eax
  4197c0:	call   FWORD PTR [ebx+0x34]
  4197c3:	sub    eax,0xdd9bc6d3
  4197c8:	lahf   
  4197c9:	fadd   DWORD PTR [esi+0x66]
  4197cc:	jmp    0x847f:0x3865a577
  4197d3:	mov    WORD PTR [ecx],ds
  4197d5:	loop   0x419856
  4197d7:	adc    eax,0x78b8acb3
  4197dc:	(bad)  
  4197dd:	popf   
  4197de:	std    
  4197df:	sbb    esp,esp
  4197e1:	pop    ds
  4197e2:	adc    ah,bh
  4197e4:	ins    BYTE PTR es:[edi],dx
  4197e5:	gs mov al,0x43
  4197e8:	sub    ch,BYTE PTR [eax]
  4197ea:	jnp    0x41976e
  4197ec:	es or  al,0x9d
  4197f0:	push   eax
  4197f1:	add    cl,BYTE PTR [edi]
  4197f3:	pop    ebx
  4197f4:	sbb    al,0x90
  4197f6:	mov    dh,0x3a
  4197f8:	js     0x4197f6
  4197fa:	in     eax,0x96
  4197fc:	push   ebp
  4197fd:	push   esp
  4197fe:	sub    al,0x95
  419800:	adc    cl,bl
  419802:	aas    
  419803:	xor    esp,DWORD PTR cs:0x1fbaff7c
  41980a:	dec    eax
  41980b:	cmp    bl,ah
  41980d:	push   ebx
  41980e:	sub    DWORD PTR [esi+ebx*8+0x62],ecx
  419812:	sub    al,0x3f
  419814:	xchg   ebp,eax
  419815:	cmp    al,0x8b
  419817:	mov    al,ds:0x8213ce22
  41981c:	gs pop eax
  41981e:	push   ecx
  41981f:	int    0x40
  419821:	cmc    
  419822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419823:	out    0xe3,eax
  419825:	fstp   QWORD PTR ds:0x249bed1
  41982b:	cmp    BYTE PTR [esi],ah
  41982d:	cwde   
  41982e:	push   ebx
  41982f:	push   ds
  419830:	fiadd  WORD PTR [edi-0x4d]
  419833:	jmp    0x9af:0x39c830af
  41983a:	mov    bl,0xcf
  41983c:	in     eax,dx
  41983d:	and    al,0x22
  41983f:	and    eax,0x93248457
  419844:	or     dh,dl
  419846:	scas   eax,DWORD PTR es:[edi]
  419847:	jge    0x41989b
  419849:	in     eax,0x5e
  41984b:	push   es
  41984c:	and    edx,DWORD PTR [ebp+0x20]
  41984f:	lds    esi,FWORD PTR [ebx+0x39e342c9]
  419855:	mov    eax,ds:0x5b3101f5
  41985a:	or     al,0x29
  41985c:	in     eax,dx
  41985d:	ins    BYTE PTR es:[edi],dx
  41985e:	dec    ecx
  41985f:	inc    ebp
  419860:	sar    BYTE PTR [ebp+ebx*4+0x4fd18d1e],0x44
  419868:	ret    
  419869:	add    DWORD PTR [edi],ebp
  41986b:	ret    0x4882
  41986e:	jnp    0x4198c2
  419870:	mov    eax,0x962536ff
  419875:	retf   
  419876:	jl     0x419859
  419878:	cmp    al,BYTE PTR [ebp-0x1d]
  41987b:	jmp    edx
  41987d:	lea    edx,[edx]
  41987f:	xor    al,0x78
  419881:	add    BYTE PTR [eax],ah
  419883:	mov    bh,0xb1
  419885:	adc    ebx,DWORD PTR [ebp+edi*8+0x56]
  419889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41988a:	adc    dh,bl
  41988c:	test   eax,0xcf0f208
  419891:	aas    
  419892:	sub    al,0xc9
  419894:	pop    ebx
  419895:	mov    DWORD PTR [ecx-0x17],edi
  419898:	or     ch,BYTE PTR [ecx]
  41989a:	xchg   ecx,eax
  41989b:	jg     0x419864
  41989d:	sti    
  41989e:	pop    esp
  41989f:	jno    0x4198f9
  4198a1:	mov    edx,0x26785136
  4198a6:	nop
  4198a7:	and    eax,DWORD PTR [edx+0x3232e235]
  4198ad:	dec    ecx
  4198ae:	jb     0x4198d5
  4198b0:	jno    0x419896
  4198b2:	and    DWORD PTR ds:0xfffb5665,esp
  4198b8:	xchg   esp,eax
  4198b9:	adc    BYTE PTR [ecx],cl
  4198bb:	rcl    DWORD PTR [edx],cl
  4198bd:	or     eax,0x904d8c0d
  4198c2:	xchg   ebx,eax
  4198c3:	cmp    BYTE PTR [ecx+0x10d952d2],dl
  4198c9:	out    dx,al
  4198ca:	mov    al,0xf6
  4198cc:	mov    al,ds:0x89707601
  4198d1:	aaa    
  4198d2:	or     al,0x90
  4198d4:	or     DWORD PTR [edx-0x5c],eax
  4198d7:	(bad)  
  4198d8:	adc    DWORD PTR [ebx],eax
  4198da:	sbb    al,0x95
  4198dc:	cmp    al,BYTE PTR [ebx+ebx*1+0x33]
  4198e0:	and    al,0x10
  4198e2:	fimul  DWORD PTR ds:0x20acb5dd
  4198e8:	mov    al,0xa4
  4198ea:	mov    al,0x2e
  4198ec:	imul   DWORD PTR [eax+ecx*8+0x7c8a00a9]
  4198f3:	jno    0x4198f5
  4198f5:	rcl    DWORD PTR [eax],0x9d
  4198f8:	aaa    
  4198f9:	xchg   esp,eax
  4198fa:	enter  0xd857,0xc4
  4198fe:	jno    0x4198d6
  419900:	cmp    bl,dh
  419902:	adc    al,0xc7
  419904:	sub    eax,0x35edfb5e
  419909:	dec    edx
  41990a:	sbb    cl,BYTE PTR [ebx-0x58]
  41990d:	hlt    
  41990e:	fstp   TBYTE PTR [eax]
  419910:	cmp    al,0xed
  419912:	push   ds
  419913:	push   es
  419914:	into   
  419915:	fdivr  DWORD PTR [ecx-0x5f32d229]
  41991b:	xchg   ebx,eax
  41991c:	pushf  
  41991d:	xchg   DWORD PTR [ecx+ecx*2+0x5f944f31],edi
  419924:	leave  
  419925:	jb     0x4198ae
  419927:	mov    al,ds:0x3c57d96f
  41992c:	push   ebp
  41992d:	fstp   TBYTE PTR [eax+0x50403070]
  419933:	dec    esp
  419934:	lahf   
  419935:	mov    ds:0x2d96c5f4,al
  41993a:	mov    bl,0x4c
  41993c:	aaa    
  41993d:	mov    ds:0xbe5711cd,al
  419942:	ror    cl,0xe6
  419945:	fstp   TBYTE PTR gs:[edi+0x440fa0dd]
  41994c:	mov    bl,0x91
  41994e:	and    DWORD PTR [eax],esi
  419950:	je     0x4198f9
  419952:	addr16 das 
  419954:	clc    
  419955:	sub    bl,bh
  419957:	add    bl,dh
  419959:	dec    ebx
  41995a:	inc    esi
  41995b:	jno    0x4198ea
  41995d:	scas   eax,DWORD PTR es:[edi]
  41995e:	mov    ebp,0x1423b069
  419963:	mov    BYTE PTR [edi-0x14519481],0x34
  41996a:	nop
  41996b:	mov    cs,WORD PTR [ecx]
  41996d:	dec    eax
  41996e:	in     al,0x4d
  419970:	outs   dx,BYTE PTR ds:[esi]
  419971:	sbb    bl,BYTE PTR [edx]
  419973:	inc    esp
  419974:	push   edx
  419975:	mov    eax,DWORD PTR [esi+0x1c235772]
  41997b:	popa   
  41997c:	and    dh,al
  41997e:	(bad)  
  41997f:	das    
  419980:	ja     0x419969
  419982:	add    DWORD PTR [edi],0x4194c903
  419988:	fld    QWORD PTR [ebp-0x7826b5f9]
  41998e:	leave  
  41998f:	in     al,dx
  419990:	pop    esi
  419991:	add    al,0x51
  419993:	movd   mm7,DWORD PTR [ecx+0xc]
  419997:	push   ds
  419998:	inc    ebx
  419999:	rol    BYTE PTR [eax],cl
  41999b:	xchg   ebx,eax
  41999c:	das    
  41999d:	test   DWORD PTR [edi],0xae556fc4
  4199a3:	call   0x22b6:0xcc0221e5
  4199aa:	daa    
  4199ab:	icebp  
  4199ac:	fdiv   DWORD PTR [edi]
  4199ae:	push   ebp
  4199af:	push   esi
  4199b0:	xor    edx,DWORD PTR es:[edi+0x40988e5d]
  4199b7:	sar    DWORD PTR [ecx],cl
  4199b9:	loop   0x419a34
  4199bb:	dec    ecx
  4199bc:	mov    eax,0xfbff9c08
  4199c1:	and    esp,DWORD PTR ds:0xb96e843b
  4199c7:	adc    DWORD PTR [ebp+0x5d],ecx
  4199ca:	push   esp
  4199cb:	call   0x8b4b:0x6c734623
  4199d2:	adc    ecx,DWORD PTR [ebx+0x5a18572d]
  4199d8:	mov    ah,0xff
  4199da:	mov    ecx,0x6673e135
  4199df:	push   ebp
  4199e0:	and    al,0x62
  4199e2:	inc    ecx
  4199e3:	aam    0xd2
  4199e5:	jmp    0xfe7:0xfd3f42ec
  4199ec:	js     0x4199d2
  4199ee:	and    eax,0x7d113c46
  4199f3:	push   ebp
  4199f4:	dec    eax
  4199f5:	or     DWORD PTR [edi+0x1f],esi
  4199f8:	cli    
  4199f9:	add    al,0x96
  4199fb:	test   eax,0xc0aab6b1
  419a00:	push   edx
  419a01:	outs   dx,DWORD PTR ds:[esi]
  419a02:	stc    
  419a03:	shl    BYTE PTR [ecx],0x77
  419a06:	and    BYTE PTR ds:0xafaf741e,cl
  419a0c:	push   es
  419a0d:	xor    BYTE PTR [esi-0x79],dh
  419a10:	popf   
  419a11:	mov    esp,0x6e497ced
  419a16:	cmp    BYTE PTR [ecx-0x12],bl
  419a19:	xor    ebx,0x4090783d
  419a1f:	lds    edx,FWORD PTR [esi+edx*2-0x28]
  419a23:	stos   BYTE PTR es:[edi],al
  419a24:	xchg   ebx,eax
  419a25:	stos   BYTE PTR es:[edi],al
  419a26:	mov    dh,0xa9
  419a28:	addr16 ret 0x4874
  419a2c:	xchg   DWORD PTR [eax+0x37],ecx
  419a2f:	stos   DWORD PTR es:[edi],eax
  419a30:	icebp  
  419a31:	mov    esi,DWORD PTR [edi-0x2e]
  419a34:	aam    0xdb
  419a36:	push   esp
  419a37:	jns    0x419a44
  419a39:	in     eax,0x74
  419a3b:	push   eax
  419a3c:	jnp    0x4199cf
  419a3e:	xchg   edx,eax
  419a3f:	mov    ch,cl
  419a41:	fsubr  QWORD PTR [esi+0x42482f7]
  419a47:	adc    al,bl
  419a49:	loope  0x4199fd
  419a4b:	dec    ebx
  419a4c:	enter  0x4d22,0xf8
  419a50:	lods   al,BYTE PTR ds:[esi]
  419a51:	repnz pop es
  419a53:	sub    edx,DWORD PTR [edx-0x4add5d5a]
  419a59:	xchg   ebx,eax
  419a5a:	xchg   BYTE PTR [esi-0x21],dl
  419a5d:	mov    WORD PTR ds:0x8e488c97,fs
  419a63:	(bad)  
  419a64:	sub    BYTE PTR [ecx],bl
  419a66:	(bad)  
  419a67:	jne    0x419a27
  419a69:	sbb    eax,0x10841092
  419a6e:	sbb    eax,0x3e68b48b
  419a73:	repz (bad) 
  419a75:	mov    al,0xd7
  419a77:	in     eax,0x4b
  419a79:	or     BYTE PTR [edx+ebx*8-0x61],al
  419a7d:	leave  
  419a7e:	xchg   BYTE PTR [edx],dh
  419a80:	cmp    al,0x8c
  419a82:	pop    cx
  419a84:	(bad)  
  419a85:	lods   al,BYTE PTR ds:[esi]
  419a86:	test   edx,ebx
  419a88:	adc    eax,0xf9d5d5cc
  419a8d:	sub    dh,bh
  419a8f:	or     DWORD PTR [esi+0x7f],0xffffffcc
  419a93:	sbb    BYTE PTR [edi+0x57],0x57
  419a97:	or     BYTE PTR [ebp+eiz*1+0x23],bl
  419a9b:	cwde   
  419a9c:	sahf   
  419a9d:	dec    ebx
  419a9e:	pop    ebp
  419a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa0:	sti    
  419aa1:	sar    ch,0xd5
  419aa4:	pop    ss
  419aa5:	rol    BYTE PTR [ecx+edi*2+0x128f2000],cl
  419aac:	loop   0x419a2e
  419aae:	cs jle 0x419b28
  419ab1:	push   ebp
  419ab2:	sub    DWORD PTR [eax],esp
  419ab4:	loope  0x419afe
  419ab6:	les    ebx,FWORD PTR gs:[edi]
  419ab9:	jo     0x419b27
  419abb:	and    BYTE PTR [esi-0x156bef38],al
  419ac1:	bound  edi,QWORD PTR [esi-0x448309a7]
  419ac7:	mov    bh,dh
  419ac9:	inc    esp
  419aca:	out    0xf7,eax
  419acc:	add    eax,0xbd3d427f
  419ad1:	(bad)
  419ad5:	test   eax,0x8c218af6
  419ada:	jle    0x419b48
  419adc:	push   ss
  419add:	inc    ebx
  419ade:	adc    DWORD PTR [edi-0x5c0dcfb1],edi
  419ae4:	add    eax,0xe2ee2647
  419ae9:	cld    
  419aea:	push   ds
  419aeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aec:	fsub   DWORD PTR es:[ebx]
  419aef:	pop    ss
  419af0:	or     DWORD PTR [ebp+0x248b5634],esp
  419af6:	mov    esp,0x73c99a1b
  419afb:	push   eax
  419afc:	jmp    0xf6e9:0xdd396936
  419b03:	nop
  419b04:	xor    bh,BYTE PTR ds:0xa1f28715
  419b0a:	adc    BYTE PTR [edi-0x63],0x6b
  419b0e:	shl    ch,cl
  419b10:	jge    0x419aa1
  419b12:	imul   edx,DWORD PTR [ebp-0x3eed1e1b],0x1b56b56e
  419b1c:	arpl   WORD PTR [eax],si
  419b1e:	inc    ebp
  419b1f:	call   0x5c06:0xb970af48
  419b26:	adc    ah,ch
  419b28:	pusha  
  419b29:	jbe    0x419af0
  419b2b:	sbb    BYTE PTR [edi],cl
  419b2d:	or     eax,0x97477036
  419b32:	xchg   edx,eax
  419b33:	daa    
  419b34:	test   eax,0xcf0dad76
  419b39:	cmp    al,0x72
  419b3b:	and    al,0x61
  419b3d:	pop    esp
  419b3e:	mov    ebp,fs
  419b40:	pop    edx
  419b41:	mov    dl,0xed
  419b43:	jge    0x419b72
  419b45:	daa    
  419b46:	push   ebp
  419b47:	sbb    al,0x18
  419b49:	mov    edx,0x3faaa8c
  419b4e:	stos   DWORD PTR es:[edi],eax
  419b4f:	jp     0x419b69
  419b51:	jns    0x419aeb
  419b53:	inc    ebp
  419b54:	ins    BYTE PTR es:[edi],dx
  419b55:	jge    0x419ba8
  419b57:	ret    0x2473
  419b5a:	add    al,0xb6
  419b5c:	jmp    0xbcc42391
  419b61:	fnsave [edx+0xd58d95e]
  419b67:	cmp    edi,DWORD PTR [ebx+0x60]
  419b6a:	mov    ebx,0x96fad6a9
  419b6f:	dec    ecx
  419b70:	pusha  
  419b71:	pop    ss
  419b72:	push   ecx
  419b73:	aam    0x96
  419b75:	adc    al,0x1
  419b77:	add    al,0xef
  419b79:	pop    edx
  419b7a:	sar    DWORD PTR [esi-0x76],1
  419b7d:	mov    bl,0xca
  419b7f:	mov    ch,0xdb
  419b81:	push   ds
  419b82:	fist   DWORD PTR [ebp-0x6b]
  419b85:	inc    ebx
  419b86:	sub    DWORD PTR [eax+0x10],0x44
  419b8a:	push   ebp
  419b8b:	jne    0x419bb4
  419b8d:	sub    edx,0x4036827f
  419b93:	xor    al,BYTE PTR [ecx+0x403f197e]
  419b99:	test   al,0x43
  419b9b:	jmp    0x231416ac
  419ba0:	push   edx
  419ba1:	lock lock mov eax,0x55e7eefa
  419ba8:	daa    
  419ba9:	xchg   ebp,eax
  419baa:	xchg   edi,eax
  419bab:	mov    DWORD PTR [ebx],esi
  419bad:	or     BYTE PTR [esp+ecx*1+0x60],0xb2
  419bb2:	ds mov esp,0x1cca151e
  419bb8:	push   ds
  419bb9:	add    bl,BYTE PTR [eax]
  419bbb:	mov    al,ds:0x1a4fd65
  419bc0:	scas   eax,DWORD PTR es:[edi]
  419bc1:	add    bl,BYTE PTR [bx+si+0x1581]
  419bc6:	xor    cl,BYTE PTR [esi+0x6e2f3378]
  419bcc:	fisubr DWORD PTR [esi-0x24042ac3]
  419bd2:	leave  
  419bd3:	mov    ?,WORD PTR [edi]
  419bd5:	jae    0x419ba1
  419bd7:	gs leave 
  419bd9:	inc    ecx
  419bda:	pusha  
  419bdb:	jle    0x419bdb
  419bdd:	inc    edi
  419bde:	rcl    BYTE PTR [eax+0x289cd58d],0x4d
  419be5:	xor    al,0xad
  419be7:	mov    edi,0x38c85dfb
  419bec:	daa    
  419bed:	ins    DWORD PTR es:[edi],dx
  419bee:	pop    ds
  419bef:	outs   dx,BYTE PTR ds:[esi]
  419bf0:	or     al,0x65
  419bf2:	push   cs
  419bf3:	jbe    0x419c65
  419bf5:	add    esi,DWORD PTR [ecx-0x63]
  419bf8:	mov    ch,0x82
  419bfa:	(bad)  
  419bfc:	ins    BYTE PTR es:[edi],dx
  419bfd:	dec    ebp
  419bfe:	sbb    ch,bl
  419c00:	test   BYTE PTR [eax+0x7d],bh
  419c03:	nop
  419c04:	push   eax
  419c05:	mov    gs:0xbc92bc8c,al
  419c0b:	mov    ah,0xcb
  419c0d:	out    dx,eax
  419c0e:	and    eax,0x7b7098a9
  419c13:	adc    eax,0x322cf1e8
  419c18:	pop    ds
  419c19:	cli    
  419c1a:	mov    eax,ds:0x509b8331
  419c1f:	cmp    eax,0x230669d2
  419c24:	mov    WORD PTR [edi+0x7f],es
  419c27:	int3   
  419c28:	mov    al,0x52
  419c2a:	mov    bl,0xf3
  419c2c:	xchg   DWORD PTR [eax+0x46b5e333],ecx
  419c32:	je     0x419c25
  419c34:	std    
  419c35:	push   eax
  419c36:	cld    
  419c37:	dec    edx
  419c38:	cmp    eax,0x93c19d84
  419c3d:	clc    
  419c3e:	mov    esi,0x36f1bfce
  419c43:	cmp    eax,0xbe4092d
  419c48:	add    BYTE PTR [ecx-0x4b],0x1f
  419c4c:	mov    edx,0x6d05ac14
  419c51:	shl    BYTE PTR [ebp+esi*4+0x42],1
  419c55:	pop    ebp
  419c56:	fsubr  st,st(7)
  419c58:	or     eax,0x3f1455b7
  419c5d:	push   esi
  419c5e:	mov    ?,WORD PTR ds:0xdf0a3614
  419c64:	test   BYTE PTR [edx+edi*4-0x12],bl
  419c68:	adc    eax,DWORD PTR gs:[edi]
  419c6b:	outs   dx,BYTE PTR ds:[esi]
  419c6c:	shl    DWORD PTR [eax+0x3a3cd0c3],0xa
  419c73:	and    eax,0x538cf86c
  419c78:	or     al,0xa1
  419c7a:	add    BYTE PTR [eax+0x69],ch
  419c7d:	lods   al,BYTE PTR ds:[esi]
  419c7e:	inc    ebp
  419c7f:	pop    ecx
  419c80:	sbb    al,0xcb
  419c82:	les    eax,FWORD PTR [edi+0x59275005]
  419c88:	cmp    dl,BYTE PTR [esp+ebx*4+0x572e1b95]
  419c8f:	hlt    
  419c90:	enter  0x2fd3,0x1f
  419c94:	pushf  
  419c95:	dec    edx
  419c96:	xchg   edi,eax
  419c97:	cs push esi
  419c99:	push   esi
  419c9a:	mov    cl,0xdf
  419c9c:	nop
  419c9d:	or     esp,0xffffffbc
  419ca0:	loopne 0x419c8c
  419ca2:	mov    esp,DWORD PTR [edi+0x66582e66]
  419ca8:	cwde   
  419ca9:	xchg   DWORD PTR [ecx-0x5a],esi
  419cac:	nop
  419cad:	or     BYTE PTR [ecx],bl
  419caf:	cmp    eax,0x25b90445
  419cb4:	(bad)  
  419cb5:	mov    ch,0xaa
  419cb7:	test   eax,ebx
  419cb9:	xor    al,BYTE PTR [edx]
  419cbb:	das    
  419cbc:	cli    
  419cbd:	push   0x32
  419cbf:	fcomp  DWORD PTR [edi+eiz*8]
  419cc2:	cmp    esi,DWORD PTR [edx+0x5e62e1f8]
  419cc8:	dec    esi
  419cc9:	retf   0x11c6
  419ccc:	cmc    
  419ccd:	mov    ds:0x2930f885,eax
  419cd2:	add    bl,BYTE PTR [ebp+0xe]
  419cd5:	mov    eax,ds:0xd2c4b040
  419cda:	sbb    DWORD PTR [eax+eax*1+0x2aaf829e],esi
  419ce1:	jl     0x419d23
  419ce3:	mov    eax,DWORD PTR [edx+0x55]
  419ce6:	or     al,0xa0
  419ce8:	sahf   
  419ce9:	jne    0x419cf6
  419ceb:	add    bl,BYTE PTR [eax]
  419ced:	pop    es
  419cee:	adc    eax,0x8a72e793
  419cf3:	scas   eax,DWORD PTR es:[edi]
  419cf4:	js     0x419cfb
  419cf6:	ss cli 
  419cf8:	dec    esi
  419cf9:	and    al,0x49
  419cfb:	fimul  WORD PTR [eax+0x8]
  419cfe:	sbb    esp,ebp
  419d00:	shr    bh,cl
  419d02:	mov    gs,WORD PTR [edi+0x55a43e6a]
  419d08:	jbe    0x419d56
  419d0a:	xor    eax,0x4de34bca
  419d0f:	stos   BYTE PTR es:[edi],al
  419d10:	daa    
  419d11:	mov    cl,0x4a
  419d13:	jnp    0x419d11
  419d15:	in     al,0x42
  419d17:	and    al,BYTE PTR [edi]
  419d19:	(bad)
  419d1c:	sbb    BYTE PTR [edi],al
  419d1e:	leave  
  419d1f:	or     DWORD PTR ds:0xe07fcbc6,0x6b
  419d26:	les    ecx,FWORD PTR [edx+0x39]
  419d29:	gs ins BYTE PTR es:[edi],dx
  419d2b:	sbb    ecx,DWORD PTR [edx+0xd707923]
  419d31:	in     eax,0x3b
  419d33:	or     DWORD PTR [ebx+0x52],ecx
  419d36:	add    esp,ebx
  419d38:	aas    
  419d39:	les    esi,FWORD PTR [esi+0x7a59a6c3]
  419d3f:	sbb    edi,DWORD PTR [ebp+0xe04fb14]
  419d45:	sub    DWORD PTR [edi-0x4246cfa1],ebx
  419d4b:	mov    esi,0x71435711
  419d50:	int    0x79
  419d52:	mov    ds:0xb80cb95,eax
  419d57:	call   0x726c:0x2312956d
  419d5e:	mov    bl,0x4c
  419d60:	jne    0x419dd2
  419d62:	mov    eax,0xc59cc318
  419d67:	jae    0x419da6
  419d69:	out    0x89,al
  419d6b:	and    edx,DWORD PTR [ecx]
  419d6d:	xor    BYTE PTR fs:[ebx+eiz*2-0x20df27fb],bh
  419d75:	aam    0x49
  419d77:	mov    ds:0x3d953eef,eax
  419d7c:	mov    ch,0xb1
  419d7e:	mov    eax,0xbe1f56bc
  419d83:	sub    DWORD PTR [edx-0x7ec686e9],ecx
  419d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d8a:	bound  ebx,QWORD PTR [edi-0x27cad968]
  419d90:	or     esi,ebx
  419d92:	sbb    BYTE PTR [eax+0x79],0x5b
  419d96:	jbe    0x419e0c
  419d98:	cmp    DWORD PTR [edx],ebx
  419d9a:	adc    al,0x8b
  419d9c:	sbb    dh,BYTE PTR [edi+ecx*2+0x22]
  419da0:	out    0xe6,al
  419da2:	aam    0xf4
  419da4:	les    edx,FWORD PTR [eax]
  419da6:	adc    eax,0x215b629a
  419dab:	mov    al,BYTE PTR [esi]
  419dad:	idiv   BYTE PTR [edi+0x34]
  419db0:	out    dx,eax
  419db1:	mov    ds:0x7b869d67,eax
  419db6:	lods   eax,DWORD PTR ds:[esi]
  419db7:	stc    
  419db8:	inc    esi
  419db9:	icebp  
  419dba:	sbb    eax,0xefa8b4c2
  419dc0:	dec    ecx
  419dc1:	mov    esi,gs
  419dc3:	into   
  419dc4:	adc    al,0x55
  419dc6:	lea    ebx,[edx]
  419dc8:	nop
  419dc9:	mov    esi,DWORD PTR [ecx-0x3621abfc]
  419dcf:	and    al,0xc3
  419dd1:	inc    eax
  419dd2:	sub    edx,DWORD PTR [esi]
  419dd4:	into   
  419dd5:	lock les esi,FWORD PTR [eax+0x47539d48]
  419ddc:	aam    0x1f
  419dde:	cdq    
  419ddf:	inc    ebx
  419de0:	and    al,0x87
  419de2:	mov    esi,0xe7617b79
  419de7:	push   0x3d8ea09a
  419dec:	iret   
  419ded:	dec    edx
  419dee:	(bad)  
  419df0:	shr    BYTE PTR [edi-0x21380048],cl
  419df6:	adc    esi,ebp
  419df8:	shr    BYTE PTR [ecx-0x3ec92065],1
  419dfe:	xchg   BYTE PTR [edx+eiz*2],bh
  419e01:	mov    ebp,0xc679cb3e
  419e06:	in     al,dx
  419e07:	repnz xchg ebp,eax
  419e09:	dec    esp
  419e0a:	iret   
  419e0b:	cmp    BYTE PTR [ecx],bh
  419e0d:	inc    ebx
  419e0e:	dec    edx
  419e0f:	mov    dh,0xdd
  419e11:	adc    al,0x11
  419e13:	test   ch,0xba
  419e16:	inc    ebp
  419e17:	das    
  419e18:	test   eax,0xab9c50a7
  419e1d:	dec    esp
  419e1e:	les    esi,FWORD PTR [edx]
  419e20:	jne    0x419e45
  419e22:	or     al,0x40
  419e24:	mov    ah,0x4d
  419e26:	or     eax,esi
  419e28:	(bad)  
  419e29:	xchg   BYTE PTR [edi+eax*2-0x2f1b3de7],bl
  419e30:	adc    al,0xf9
  419e32:	push   ss
  419e33:	or     al,BYTE PTR [edi-0x6e5a866c]
  419e39:	mov    al,BYTE PTR [edi-0x102f1190]
  419e3f:	cld    
  419e40:	pusha  
  419e41:	jo     0x419e16
  419e43:	clc    
  419e44:	push   0xc93c977b
  419e49:	mov    ah,0xd9
  419e4b:	push   es
  419e4c:	aad    0xf0
  419e4e:	xchg   esi,eax
  419e4f:	clc    
  419e50:	pop    ebx
  419e51:	pusha  
  419e52:	mov    ds:0x4bbac87d,eax
  419e57:	xchg   ebp,eax
  419e58:	in     eax,0x43
  419e5a:	sbb    DWORD PTR [eax+0x6],ebp
  419e5d:	(bad)  
  419e5f:	clc    
  419e60:	int3   
  419e61:	mov    ah,0xb9
  419e63:	mov    al,0x1
  419e65:	sub    BYTE PTR [ecx-0x3e1be8e6],ch
  419e6b:	ins    DWORD PTR es:[edi],dx
  419e6c:	cmp    al,0xfa
  419e6e:	or     al,0xc7
  419e70:	nop
  419e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e72:	or     al,dh
  419e74:	ins    DWORD PTR es:[edi],dx
  419e75:	push   ds
  419e76:	pop    esp
  419e77:	and    esi,ebp
  419e79:	dec    edx
  419e7a:	call   0x1989:0xf44a5c8e
  419e81:	fadd   DWORD PTR [ebx-0x49]
  419e84:	mov    cs,WORD PTR [edx-0x34]
  419e87:	popf   
  419e88:	sbb    dh,BYTE PTR [ebx]
  419e8a:	adc    eax,0xe339208a
  419e8f:	dec    esp
  419e90:	(bad)  
  419e91:	mov    ch,0x8b
  419e93:	mov    ebx,0xa1f1f9cf
  419e98:	cld    
  419e99:	jne    0x419e7d
  419e9b:	in     al,dx
  419e9c:	nop
  419e9d:	call   FWORD PTR [ebp+0x671529ad]
  419ea3:	and    DWORD PTR [ebx+0x3e],ecx
  419ea6:	fist   WORD PTR [esi-0x3ed72e1e]
  419eac:	inc    eax
  419ead:	xor    ah,bh
  419eaf:	xchg   ebx,eax
  419eb0:	sub    al,0x1a
  419eb2:	fwait
  419eb3:	xchg   ecx,eax
  419eb4:	pop    eax
  419eb5:	inc    eax
  419eb6:	jge    0x419e89
  419eb8:	mov    edx,DWORD PTR [ecx-0x80]
  419ebb:	jge    0x419f0b
  419ebd:	pop    esp
  419ebe:	dec    esi
  419ebf:	push   esi
  419ec0:	jmp    0x419eac
  419ec2:	push   edx
  419ec3:	dec    esi
  419ec4:	ins    DWORD PTR es:[edi],dx
  419ec5:	fs pop ecx
  419ec7:	jbe    0x419eb9
  419ec9:	lock jo 0x419ee8
  419ecc:	jmp    0xae302761
  419ed1:	retf   0x6cc3
  419ed4:	xor    eax,0x412d7db
  419ed9:	push   cs
  419eda:	adc    ebp,edx
  419edc:	fbld   TBYTE PTR [edi]
  419ede:	leave  
  419edf:	adc    dh,ah
  419ee1:	xor    bh,BYTE PTR [edi+0x15]
  419ee4:	repz imul DWORD PTR [ecx+ebp*1+0x40a395db]
  419eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eed:	in     eax,dx
  419eee:	dec    esi
  419eef:	pop    edi
  419ef0:	fcomi  st,st(2)
  419ef2:	in     al,dx
  419ef3:	inc    ebx
  419ef4:	aas    
  419ef5:	sbb    DWORD PTR [eax-0x62],esi
  419ef8:	pop    es
  419ef9:	into   
  419efa:	imul   edx,ebp,0x5d
  419efd:	jmp    0x64f7:0x88611f6d
  419f04:	or     al,0xc2
  419f06:	dec    esi
  419f07:	push   ebp
  419f08:	sbb    cl,dh
  419f0a:	not    DWORD PTR [ebx]
  419f0c:	test   DWORD PTR [eax-0xa],0x80a622a7
  419f13:	test   DWORD PTR [eax],esi
  419f15:	lods   al,BYTE PTR ds:[esi]
  419f16:	jne    0x419eb7
  419f18:	cmp    DWORD PTR [edx-0x2d],edx
  419f1b:	xlat   BYTE PTR ds:[ebx]
  419f1c:	mov    bh,0x2b
  419f1e:	adc    al,0x89
  419f20:	mov    cl,0xdd
  419f22:	cmp    esi,DWORD PTR [ebx]
  419f24:	and    DWORD PTR [esi],ecx
  419f26:	jns    0x419edc
  419f28:	push   esi
  419f29:	lods   al,BYTE PTR ds:[esi]
  419f2a:	mov    DWORD PTR [eax-0x4a40716b],eax
  419f30:	call   0x533f181f
  419f35:	mov    cl,0x8
  419f37:	fistp  WORD PTR [ebx+edi*4+0xe4c3d6f]
  419f3e:	jbe    0x419f98
  419f40:	je     0x419f71
  419f42:	sub    DWORD PTR [edi+0x3a],ecx
  419f45:	daa    
  419f46:	outs   dx,BYTE PTR ds:[esi]
  419f47:	push   0x3c389e77
  419f4c:	sub    DWORD PTR [ecx],eax
  419f4e:	push   ds
  419f4f:	xor    DWORD PTR [eax+0x54],edi
  419f52:	stos   DWORD PTR es:[edi],eax
  419f53:	or     ecx,eax
  419f55:	xor    bl,BYTE PTR [esi]
  419f57:	lods   eax,DWORD PTR ds:[esi]
  419f58:	stc    
  419f59:	stc    
  419f5a:	push   esp
  419f5b:	xor    bh,BYTE PTR [edi+eax*4]
  419f5e:	call   0xe442:0xf0c0e872
  419f65:	mov    eax,DWORD PTR [ebx-0x141be0b7]
  419f6b:	xchg   DWORD PTR [edi],edi
  419f6d:	dec    edi
  419f6e:	pop    esi
  419f6f:	(bad)  
  419f70:	jle    0x419ef2
  419f72:	imul   esp,DWORD PTR [esp+eax*1],0xffffff81
  419f76:	loop   0x419fb5
  419f78:	cmp    BYTE PTR [ebx],bl
  419f7a:	pushf  
  419f7b:	ds cs sub eax,0x37b513cb
  419f82:	shl    eax,1
  419f84:	mov    edx,0x5abdbaca
  419f89:	test   dh,dh
  419f8b:	inc    esi
  419f8c:	fst    QWORD PTR [edi+0x11]
  419f8f:	shr    BYTE PTR [eax+0xddec306],cl
  419f95:	sti    
  419f96:	int3   
  419f97:	push   cs
  419f98:	or     eax,0xa3300a81
  419f9d:	ins    BYTE PTR es:[edi],dx
  419f9e:	out    0x84,al
  419fa0:	sahf   
  419fa1:	pop    eax
  419fa2:	mov    ch,0xa9
  419fa4:	dec    eax
  419fa5:	(bad)  
  419fa6:	jl     0x419f9a
  419fa8:	je     0x419fc9
  419faa:	shl    BYTE PTR [eax],1
  419fac:	ins    DWORD PTR es:[edi],dx
  419fad:	imul   esp
  419faf:	ja     0x419f35
  419fb1:	fld    DWORD PTR [eax+0x7e]
  419fb4:	mov    al,ds:0xe56042a7
  419fb9:	ret    
  419fba:	push   ebx
  419fbb:	repnz in al,0xad
  419fbe:	icebp  
  419fbf:	mov    cl,0x9
  419fc1:	mov    eax,0xc0aa75bd
  419fc6:	test   DWORD PTR [esi],ebp
  419fc8:	imul   ebp,ecx,0x54fdbcd4
  419fce:	and    al,0xc1
  419fd0:	or     DWORD PTR [ecx-0x72ea58bd],ebp
  419fd6:	xlat   BYTE PTR ds:[ebx]
  419fd7:	mov    WORD PTR [ebp-0x6461e43f],fs
  419fdd:	repnz inc ecx
  419fdf:	test   BYTE PTR [edx+ebp*1-0x7a945af8],bl
  419fe6:	pop    ds
  419fe7:	sar    al,1
  419fe9:	cmp    BYTE PTR [esi+0x59aaad79],bl
  419fef:	lock sub ch,BYTE PTR [ebx-0x2fd2a970]
  419ff6:	add    DWORD PTR [edx+0x6b],esi
  419ff9:	add    ah,BYTE PTR [ebx-0x40]
  419ffc:	or     dl,dl
  419ffe:	loop   0x41a033
  41a000:	int3   
  41a001:	push   esi
  41a002:	and    DWORD PTR [edx-0x30beb28c],esp
  41a008:	add    BYTE PTR [ecx+0x71],dl
  41a00b:	mov    cl,0x63
  41a00d:	arpl   WORD PTR [esi-0x77a2a276],bp
  41a013:	scas   eax,DWORD PTR es:[edi]
  41a014:	int3   
  41a015:	clc    
  41a016:	imul   BYTE PTR [edi+0x62ab31a4]
  41a01c:	fcomp  DWORD PTR ds:0x271ee159
  41a022:	hlt    
  41a023:	xchg   esi,eax
  41a024:	inc    esp
  41a025:	dec    ebp
  41a026:	ds pop edi
  41a028:	or     eax,0x62b4d966
  41a02d:	fidiv  WORD PTR [eax+0x2af3457b]
  41a033:	fdivrp st(4),st
  41a035:	aad    0xb0
  41a037:	jp     0x419fdf
  41a039:	sub    ah,BYTE PTR [eax-0x2c57a1c8]
  41a03f:	push   ss
  41a040:	add    edx,DWORD PTR [ebx+0x46]
  41a043:	dec    ebp
  41a044:	retf   
  41a045:	enter  0xf145,0xab
  41a049:	add    BYTE PTR [eax+0x5b9ca24f],ah
  41a04f:	inc    ecx
  41a050:	mov    BYTE PTR [eax+eax*8],cl
  41a053:	cmp    eax,0x1825829
  41a058:	xor    cl,BYTE PTR [edi+0x5b]
  41a05b:	(bad)  
  41a05c:	cmp    edx,ecx
  41a05e:	test   esi,esp
  41a060:	cmp    bh,bh
  41a062:	into   
  41a063:	dec    DWORD PTR [ebx-0x5d]
  41a066:	jae    0x41a061
  41a068:	sub    BYTE PTR [ebx-0x1b],0xc9
  41a06c:	jnp    0x419ffe
  41a06e:	retf   
  41a06f:	lds    ecx,FWORD PTR [ecx]
  41a071:	cmp    al,0x9c
  41a073:	xchg   esp,eax
  41a074:	jbe    0x41a0bd
  41a076:	in     al,dx
  41a077:	fmul   DWORD PTR [ebx+esi*2+0x32]
  41a07b:	ret    0x6fac
  41a07e:	cmp    ah,BYTE PTR [edi+edi*4+0x21]
  41a082:	bound  eax,QWORD PTR [ebx]
  41a084:	sub    dl,bl
  41a086:	fstp   QWORD PTR [bx+di-0x3f63]
  41a08b:	stos   DWORD PTR es:[edi],eax
  41a08c:	repnz enter 0x6a9,0x7f
  41a091:	and    bh,BYTE PTR [edi+0x718aad98]
  41a097:	xor    ecx,DWORD PTR [bx+di]
  41a09a:	cmp    ch,BYTE PTR [ebx+0x4f]
  41a09d:	mov    dl,0x4e
  41a09f:	es pop ds
  41a0a1:	cmp    esp,DWORD PTR [esi]
  41a0a3:	shl    BYTE PTR [edx-0x65],1
  41a0a6:	pop    ds
  41a0a7:	push   ecx
  41a0a8:	mov    esi,cs
  41a0aa:	je     0x41a073
  41a0ac:	jmp    0x41a09d
  41a0ae:	xchg   edx,eax
  41a0af:	add    DWORD PTR [ecx+0x6],esi
  41a0b2:	pop    ss
  41a0b3:	xchg   ebx,eax
  41a0b4:	and    al,0x80
  41a0b6:	aad    0x13
  41a0b8:	dec    edx
  41a0b9:	test   edx,ebp
  41a0bb:	retf   
  41a0bc:	mov    esi,0xf562dde9
  41a0c1:	jno    0x41a09e
  41a0c3:	sbb    eax,0x86ec00bb
  41a0c8:	ins    DWORD PTR es:[edi],dx
  41a0c9:	mov    bh,0x77
  41a0cb:	ficomp DWORD PTR [edx-0x21708609]
  41a0d1:	dec    edi
  41a0d2:	mov    bl,ch
  41a0d4:	cs or  bl,cl
  41a0d7:	pushf  
  41a0d8:	and    BYTE PTR [ecx-0x4497c2f2],al
  41a0de:	mov    ebp,0xfd064135
  41a0e3:	fdiv   st(1),st
  41a0e5:	dec    ch
  41a0e7:	sub    ebp,DWORD PTR [ecx]
  41a0e9:	repnz aas 
  41a0eb:	adc    al,0x89
  41a0ed:	push   es
  41a0ee:	lods   eax,DWORD PTR ds:[esi]
  41a0ef:	and    al,0x56
  41a0f1:	xchg   ecx,eax
  41a0f2:	aad    0xd2
  41a0f4:	loop   0x41a143
  41a0f6:	aaa    
  41a0f7:	jmp    0xbe9a2be8
  41a0fc:	xor    BYTE PTR [eax+eax*1],dh
  41a0ff:	mov    ds:0x4c2b73c,al
  41a104:	arpl   WORD PTR [eax+ecx*8-0x14e3fdb5],dx
  41a10b:	pop    ebx
  41a10c:	jg     0x41a120
  41a10e:	das    
  41a10f:	(bad)  
  41a110:	aam    0xe4
  41a112:	pop    ecx
  41a113:	cmp    bl,BYTE PTR [esi+0x1ad72816]
  41a119:	mov    eax,0x2e0beb1c
  41a11e:	sub    al,0x7b
  41a120:	cmp    bh,0xa1
  41a123:	loopne 0x41a175
  41a125:	test   al,0x3d
  41a127:	aaa    
  41a128:	jb     0x41a0ae
  41a12a:	sub    cl,bl
  41a12c:	inc    edi
  41a12d:	inc    eax
  41a12e:	jl     0x41a115
  41a130:	inc    eax
  41a131:	fisubr WORD PTR [ecx-0x1eb1e03]
  41a137:	mov    ebp,0x4126c3a9
  41a13c:	cld    
  41a13d:	ins    BYTE PTR es:[edi],dx
  41a13e:	cmp    BYTE PTR [ecx],0xbf
  41a141:	or     ecx,DWORD PTR [eax+0x74505dcb]
  41a147:	push   ds
  41a148:	psubd  mm1,mm7
  41a14b:	aas    
  41a14c:	sub    al,0xef
  41a14e:	in     al,dx
  41a14f:	sub    al,0x39
  41a151:	push   eax
  41a152:	push   ds
  41a153:	cdq    
  41a154:	pop    ebp
  41a155:	inc    ebx
  41a156:	push   DWORD PTR [ecx+0xfe9e0e7]
  41a15c:	sbb    eax,0xb2be4615
  41a161:	inc    eax
  41a162:	lea    ebp,[eax+0x4f]
  41a165:	daa    
  41a166:	pop    ds
  41a167:	mov    DWORD PTR [esi+ecx*8-0x708f85fd],0x9f5bacb6
  41a172:	inc    esi
  41a173:	(bad)  
  41a174:	xor    eax,0x7f9c64ae
  41a179:	(bad)  
  41a17b:	jmp    0xca8a:0x361b069e
  41a182:	cmp    DWORD PTR [esi-0x45a2119d],ebp
  41a188:	ror    ebp,0x77
  41a18b:	push   esp
  41a18c:	jmp    0x41a1b7
  41a18e:	add    eax,0x350cebe9
  41a193:	dec    ebx
  41a194:	jmp    0xbdd1:0xe69b6e0c
  41a19b:	push   esi
  41a19c:	(bad)  
  41a19d:	mov    ah,cl
  41a19f:	daa    
  41a1a0:	out    dx,al
  41a1a1:	pop    ds
  41a1a2:	and    al,0x53
  41a1a4:	xor    BYTE PTR [ebp-0x36],bl
  41a1a7:	outs   dx,DWORD PTR ds:[esi]
  41a1a8:	xor    eax,0x8a6e5447
  41a1ad:	push   cs
  41a1ae:	ja     0x41a1d5
  41a1b0:	cs adc eax,0x6041bca7
  41a1b6:	mov    al,0x46
  41a1b8:	xor    al,0x21
  41a1ba:	aas    
  41a1bb:	mov    dl,0x77
  41a1bd:	lods   eax,DWORD PTR ds:[esi]
  41a1be:	xchg   esp,eax
  41a1bf:	(bad)  
  41a1c0:	in     eax,dx
  41a1c1:	pop    es
  41a1c2:	in     eax,dx
  41a1c3:	fist   WORD PTR [ecx]
  41a1c5:	pop    esi
  41a1c6:	lds    ecx,FWORD PTR [ecx-0xa]
  41a1c9:	adc    bl,dh
  41a1cb:	sbb    ch,dl
  41a1cd:	cmp    eax,0x71dc3ec7
  41a1d2:	jne    0x41a1da
  41a1d4:	in     al,0x7a
  41a1d6:	sbb    ch,BYTE PTR [eax]
  41a1d8:	jo     0x41a1fb
  41a1da:	mov    al,ds:0x997662a
  41a1df:	ds nop
  41a1e1:	ins    DWORD PTR es:[edi],dx
  41a1e2:	iret   
  41a1e3:	push   ebx
  41a1e4:	leave  
  41a1e5:	sub    bl,BYTE PTR [ebx+0x74]
  41a1e8:	out    dx,eax
  41a1e9:	sbb    eax,0xbf893ddd
  41a1ee:	jge    0x41a1e7
  41a1f0:	inc    edx
  41a1f1:	xor    edx,DWORD PTR [edi+edx*4]
  41a1f4:	mov    BYTE PTR [edx+eax*8+0x50],cl
  41a1f8:	cs daa 
  41a1fa:	addr16 dec edi
  41a1fc:	push   ebp
  41a1fd:	and    eax,0x9ed1ce13
  41a202:	leave  
  41a203:	ds ins BYTE PTR es:[edi],dx
  41a205:	mov    bh,0x48
  41a207:	addr16 dec edi
  41a209:	sub    BYTE PTR [esi+0x46],0xe7
  41a20d:	adc    al,0xf2
  41a20f:	push   ds
  41a210:	pusha  
  41a211:	dec    edi
  41a212:	fnstsw WORD PTR [esi]
  41a214:	jl     0x41a1ae
  41a216:	popf   
  41a217:	jle    0x41a1d6
  41a219:	std    
  41a21a:	mov    al,0x16
  41a21c:	cmp    al,0xf7
  41a21e:	shr    BYTE PTR ds:0xc93eec89,0x5b
  41a225:	mov    dl,0xdc
  41a227:	cmp    DWORD PTR [ebp+0x2c],esp
  41a22a:	ss mov esi,0x2696917
  41a230:	pop    ecx
  41a231:	shl    cl,1
  41a233:	int    0x7c
  41a235:	fdiv   QWORD PTR [ebp-0x141fca10]
  41a23b:	push   cs
  41a23c:	shl    DWORD PTR [edi+0x4e963573],cl
  41a242:	in     al,0x99
  41a244:	out    dx,eax
  41a245:	(bad)  
  41a246:	push   esi
  41a247:	lds    edi,FWORD PTR ds:0xdbe436cc
  41a24d:	(bad)  
  41a24e:	out    0x39,eax
  41a250:	mov    ecx,0x91e203b2
  41a255:	xchg   edi,eax
  41a256:	fcom   DWORD PTR [ecx]
  41a258:	test   ah,ch
  41a25a:	cmp    eax,0x95666852
  41a25f:	mov    ebp,DWORD PTR [ebx+0x4d64edda]
  41a265:	pop    edi
  41a266:	retf   0x96a0
  41a269:	repnz das 
  41a26b:	int3   
  41a26c:	rcr    DWORD PTR [eax*4+0x179b93f3],0x2b
  41a274:	push   ecx
  41a275:	sar    BYTE PTR [ebx],0xa
  41a278:	test   al,0x9a
  41a27a:	push   ebp
  41a27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a27c:	aas    
  41a27d:	sub    eax,0x28b98c5d
  41a282:	loope  0x41a2d1
  41a284:	cmp    al,0xcf
  41a286:	mov    ds:0x4b0f03d0,eax
  41a28b:	call   0x7e1b:0xe8c6b60
  41a292:	aam    0x4b
  41a294:	xlat   BYTE PTR ds:[ebx]
  41a295:	inc    ecx
  41a296:	cli    
  41a297:	retf   
  41a298:	xchg   esi,eax
  41a299:	enter  0xbd40,0xc3
  41a29d:	xor    ebx,DWORD PTR [edi]
  41a29f:	inc    ebx
  41a2a0:	div    esi
  41a2a2:	mov    BYTE PTR [ebx-0x3e9f80aa],ah
  41a2a8:	call   0x4f92934a
  41a2ad:	push   ss
  41a2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2af:	xor    edx,esi
  41a2b1:	xchg   ebx,eax
  41a2b2:	jmp    0x41a284
  41a2b4:	outs   dx,DWORD PTR ds:[esi]
  41a2b5:	enter  0x5e55,0xb7
  41a2b9:	inc    ebx
  41a2ba:	sub    ah,ch
  41a2bc:	fimul  DWORD PTR [edx]
  41a2be:	and    ch,BYTE PTR [ecx-0x6f]
  41a2c1:	call   0xca0f1ca4
  41a2c6:	xor    eax,0x57c37b4b
  41a2cb:	outs   dx,DWORD PTR es:[esi]
  41a2cd:	jno    0x41a28d
  41a2cf:	data16 ins BYTE PTR es:[edi],dx
  41a2d1:	(bad)  
  41a2d2:	bnd js 0x41a2a6
  41a2d5:	scas   eax,DWORD PTR es:[edi]
  41a2d6:	add    ah,ah
  41a2d8:	mov    bh,0xff
  41a2da:	fmul   st,st(1)
  41a2dc:	(bad)  
  41a2dd:	lock outs dx,DWORD PTR ds:[esi]
  41a2df:	outs   dx,BYTE PTR ds:[esi]
  41a2e0:	(bad)  
  41a2e2:	add    BYTE PTR ds:0xbd47990b,al
  41a2e8:	es jmp 0x41a310
  41a2eb:	xchg   esp,eax
  41a2ec:	out    0x94,eax
  41a2ee:	pop    DWORD PTR [edx-0x32]
  41a2f1:	leave  
  41a2f2:	sub    eax,0xd622976f
  41a2f7:	push   ebx
  41a2f8:	push   eax
  41a2f9:	mov    ?,WORD PTR [ebx-0x1f]
  41a2fc:	aaa    
  41a2fd:	xchg   ebp,eax
  41a2fe:	pop    DWORD PTR ds:0x53407c1e
  41a304:	xor    eax,0xc711bf48
  41a309:	and    eax,0x582eb7f8
  41a30e:	lods   eax,DWORD PTR ds:[esi]
  41a30f:	std    
  41a310:	(bad)  ds:[eax]
  41a313:	aas    
  41a314:	push   ds
  41a315:	dec    eax
  41a316:	cmc    
  41a317:	mov    dl,0xff
  41a319:	aam    0x71
  41a31b:	jecxz  0x41a359
  41a31d:	fsub   st,st(0)
  41a31f:	dec    esi
  41a320:	icebp  
  41a321:	mov    bh,0xc5
  41a323:	not    cl
  41a325:	xchg   edx,eax
  41a326:	dec    edi
  41a327:	(bad)  
  41a328:	cmp    ch,bl
  41a32a:	mov    eax,ds:0x6127d44d
  41a32f:	dec    edx
  41a330:	clc    
  41a331:	and    al,0x69
  41a333:	mov    ds:0x89f76934,al
  41a338:	cs cld 
  41a33a:	push   ebx
  41a33b:	inc    ecx
  41a33c:	add    eax,0x2cdaef31
  41a341:	aad    0x19
  41a343:	out    dx,al
  41a344:	pop    edi
  41a345:	in     al,dx
  41a346:	inc    ebx
  41a347:	sub    ah,BYTE PTR ds:0xef34fb7b
  41a34d:	inc    ebx
  41a34e:	aas    
  41a34f:	ins    BYTE PTR es:[edi],dx
  41a350:	loope  0x41a2e7
  41a352:	mov    ds:0x46e67680,al
  41a357:	mov    al,ds:0xf1589fcc
  41a35c:	push   ecx
  41a35d:	adc    BYTE PTR [eax-0x4],ch
  41a360:	les    esi,FWORD PTR [edx]
  41a362:	leave  
  41a363:	fnstcw WORD PTR [edi]
  41a365:	mov    ds:0xa19d83a0,al
  41a36a:	je     0x41a32b
  41a36c:	cmp    bh,BYTE PTR [ebx-0x32]
  41a36f:	fidivr DWORD PTR [eax+0x5758375f]
  41a375:	pop    ebx
  41a376:	jbe    0x41a3f0
  41a378:	sbb    ebx,ebp
  41a37a:	xchg   edx,eax
  41a37b:	jg     0x41a390
  41a37d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a37f:	jae    0x41a307
  41a381:	sbb    ecx,edx
  41a383:	mov    dh,0x68
  41a385:	fcom   QWORD PTR es:[esi]
  41a388:	lock xchg DWORD PTR [ebp-0x3d83678d],edi
  41a38f:	sub    BYTE PTR [eax+0x4b],ch
  41a392:	or     eax,0xed5cb452
  41a398:	add    BYTE PTR [ebp+0x49],al
  41a39b:	pushf  
  41a39c:	cmp    ecx,DWORD PTR es:[ebx+0x5e]
  41a3a0:	in     eax,0xdf
  41a3a2:	in     eax,dx
  41a3a3:	dec    ebp
  41a3a4:	sub    DWORD PTR [edx],ecx
  41a3a6:	adc    al,0xd6
  41a3a8:	push   cs
  41a3a9:	outs   dx,DWORD PTR ds:[esi]
  41a3aa:	push   ebp
  41a3ab:	int    0x8a
  41a3ad:	jge    0x41a3c9
  41a3af:	test   DWORD PTR [esi],edx
  41a3b1:	test   eax,0x7437bdfa
  41a3b6:	cmp    al,0x2b
  41a3b8:	xchg   ecx,eax
  41a3b9:	jge    0x41a347
  41a3bb:	aaa    
  41a3bc:	test   eax,0x42654190
  41a3c1:	add    al,0x56
  41a3c3:	or     DWORD PTR [eax],ebp
  41a3c5:	sub    ebx,ebp
  41a3c7:	clc    
  41a3c8:	repz sbb eax,0xa5511df8
  41a3ce:	sbb    esp,0x6b
  41a3d1:	mov    ebx,0x5366e473
  41a3d6:	cmp    DWORD PTR [edi+0x3f],esp
  41a3d9:	xchg   ecx,eax
  41a3da:	mov    eax,ds:0xfbb495c
  41a3df:	outs   dx,DWORD PTR ds:[esi]
  41a3e0:	and    al,0xf8
  41a3e2:	nop
  41a3e3:	shr    BYTE PTR [ebx+0x4f],cl
  41a3e6:	xchg   esp,eax
  41a3e7:	popf   
  41a3e8:	push   edx
  41a3e9:	or     al,0x50
  41a3eb:	sbb    al,0x1a
  41a3ed:	add    ecx,ebp
  41a3ef:	jp     0x41a3f5
  41a3f1:	push   eax
  41a3f2:	dec    ebp
  41a3f3:	and    cl,BYTE PTR [edx-0x3b76b169]
  41a3f9:	(bad)  
  41a3fa:	in     al,0x8f
  41a3fc:	(bad)  
  41a3fd:	jns    0x41a42d
  41a3ff:	mov    ah,0x21
  41a401:	xor    al,0xec
  41a403:	rol    BYTE PTR [edx],0xa0
  41a406:	mov    edx,0xc9ea1d38
  41a40b:	adc    BYTE PTR [eax+0x17],cl
  41a40e:	sub    BYTE PTR fs:[edx+0x1eaecaf9],ch
  41a415:	in     eax,dx
  41a416:	shr    cl,0x6c
  41a419:	std    
  41a41a:	(bad)  
  41a41b:	push   esi
  41a41c:	jmp    0x7ffeb269
  41a421:	popf   
  41a422:	pop    eax
  41a423:	ins    DWORD PTR es:[edi],dx
  41a424:	jo     0x41a3ac
  41a426:	pushf  
  41a427:	scas   eax,DWORD PTR es:[edi]
  41a428:	(bad)  
  41a429:	push   cs
  41a42a:	call   0xb917c210
  41a42f:	jl     0x41a3c5
  41a431:	sbb    DWORD PTR [edi+0x6a9c587b],eax
  41a437:	int3   
  41a438:	sub    BYTE PTR [ebx-0x21c4a294],bl
  41a43e:	das    
  41a43f:	nop
  41a440:	or     BYTE PTR [ebp-0x36c79243],0x85
  41a447:	scas   al,BYTE PTR es:[edi]
  41a448:	adc    ecx,edi
  41a44a:	add    dl,BYTE PTR [eax+ecx*2+0x9]
  41a44e:	scas   al,BYTE PTR es:[edi]
  41a44f:	pusha  
  41a450:	add    eax,0x23dcffe0
  41a455:	daa    
  41a456:	out    0x14,al
  41a458:	addr16 mov esi,0xee835c4c
  41a45e:	sub    al,0xe6
  41a460:	into   
  41a461:	adc    DWORD PTR [ecx],eax
  41a463:	stos   BYTE PTR es:[edi],al
  41a464:	arpl   WORD PTR [edx],si
  41a466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a467:	cmp    BYTE PTR [eax],0x73
  41a46a:	outs   dx,DWORD PTR ds:[esi]
  41a46b:	mov    DWORD PTR [edi],ecx
  41a46d:	(bad)  [edi-0x6a0ca73e]
  41a473:	aad    0x4c
  41a475:	cmp    BYTE PTR [eax],dl
  41a477:	jmp    DWORD PTR [edx+0x40cd4e7a]
  41a47d:	fwait
  41a47e:	retf   
  41a47f:	ss sub al,0x94
  41a482:	sbb    eax,0x9a24cc1b
  41a487:	out    dx,al
  41a488:	out    0x72,eax
  41a48a:	mov    dl,0x27
  41a48c:	xchg   DWORD PTR [ebx-0x36f0c01],esi
  41a492:	sbb    eax,0x1e4446d
  41a497:	adc    al,0xf8
  41a499:	sub    eax,0x2d01df03
  41a49e:	jmp    DWORD PTR [eax]
  41a4a0:	jns    0x41a49f
  41a4a2:	pop    ss
  41a4a3:	mov    dh,BYTE PTR [edi+0x7e]
  41a4a6:	cmp    BYTE PTR [ebx+0x68],0x3f
  41a4aa:	jp     0x41a4c2
  41a4ac:	and    BYTE PTR ss:[edi],dh
  41a4af:	sub    al,0x1d
  41a4b1:	xchg   BYTE PTR [esp+eax*4-0x5af54f10],bh
  41a4b8:	adc    al,0xa0
  41a4ba:	add    DWORD PTR [edi],esi
  41a4bc:	or     DWORD PTR [edi-0x4cd627d3],eax
  41a4c2:	adc    al,0x18
  41a4c4:	pop    ebp
  41a4c5:	mov    ds:0xa4b869af,al
  41a4ca:	sub    DWORD PTR [edx-0x7],0x3706db9b
  41a4d1:	lds    edx,FWORD PTR [edx+esi*8]
  41a4d4:	fcomip st,st(0)
  41a4d6:	push   edi
  41a4d7:	xlat   BYTE PTR ds:[ebx]
  41a4d8:	push   0xffffffee
  41a4da:	nop
  41a4db:	add    edi,DWORD PTR [edi-0x6b45cf5c]
  41a4e1:	cmp    eax,0x12c14854
  41a4e6:	cli    
  41a4e7:	jecxz  0x41a519
  41a4e9:	ins    DWORD PTR es:[edi],dx
  41a4ea:	in     eax,dx
  41a4eb:	rcl    bl,cl
  41a4ed:	pop    ebp
  41a4ee:	xchg   edx,eax
  41a4ef:	gs jno 0x41a48a
  41a4f2:	push   edi
  41a4f3:	call   0xcc28c83d
  41a4f8:	pop    ss
  41a4f9:	xor    eax,0x6828838c
  41a4fe:	jb     0x41a4f6
  41a500:	fadd   DWORD PTR [edi-0x52]
  41a503:	fbld   TBYTE PTR [edx-0x38ec569c]
  41a509:	aam    0xd2
  41a50b:	cld    
  41a50c:	into   
  41a50d:	xlat   BYTE PTR ds:[ebx]
  41a50e:	xchg   ebp,eax
  41a50f:	lock jmp 0x41a540
  41a512:	push   esi
  41a513:	xor    edx,ebx
  41a515:	scas   al,BYTE PTR es:[edi]
  41a516:	xor    BYTE PTR [edx-0x223b3b39],cl
  41a51c:	or     BYTE PTR [esi],bl
  41a51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a51f:	out    0x2e,al
  41a521:	jo     0x41a4d6
  41a523:	scas   eax,DWORD PTR es:[edi]
  41a524:	push   esp
  41a525:	inc    esp
  41a526:	jge    0x41a59a
  41a528:	xchg   ecx,eax
  41a529:	fisttp WORD PTR ds:0x689a9f3b
  41a52f:	das    
  41a530:	mov    cl,0x1b
  41a532:	pop    ebp
  41a533:	pop    eax
  41a534:	xchg   edi,eax
  41a535:	test   eax,0xf962dd61
  41a53a:	jne    0x41a515
  41a53c:	push   0x5b
  41a53e:	adc    esi,ebp
  41a540:	dec    eax
  41a541:	mov    WORD PTR [edx+0x61252f1b],ss
  41a547:	bound  edx,QWORD PTR es:[ebx]
  41a54a:	and    edi,DWORD PTR [ebp+0x16b92a74]
  41a550:	nop
  41a551:	shl    BYTE PTR [esi-0xd],cl
  41a554:	out    dx,eax
  41a555:	push   ds
  41a556:	xchg   BYTE PTR [ecx+edi*4-0x2d],ah
  41a55a:	or     eax,0x129ee401
  41a55f:	sub    ah,BYTE PTR [edi]
  41a561:	sub    esi,edi
  41a563:	stc    
  41a564:	push   ebp
  41a565:	or     cl,cl
  41a567:	cmp    dl,BYTE PTR [ebx-0x3a]
  41a56a:	push   ss
  41a56b:	outs   dx,DWORD PTR ds:[esi]
  41a56c:	outs   dx,BYTE PTR ds:[esi]
  41a56d:	ss call 0xc77a:0x891efe2a
  41a575:	jge    0x41a5c6
  41a577:	leave  
  41a578:	es inc edi
  41a57a:	xor    ah,BYTE PTR ds:0xc4f1f583
  41a580:	jnp    0x41a586
  41a582:	xchg   BYTE PTR [eax*8-0x1126d882],ah
  41a589:	lea    eax,[edx+0x29]
  41a58c:	pop    edi
  41a58d:	aas    
  41a58e:	iret   
  41a58f:	xchg   BYTE PTR [bp+0x6ca5],dl
  41a594:	push   0x4b
  41a596:	sub    ebp,DWORD PTR es:[ecx+0x23]
  41a59a:	mov    dl,0x34
  41a59c:	icebp  
  41a59d:	in     eax,dx
  41a59e:	sar    DWORD PTR [edx],cl
  41a5a0:	out    dx,al
  41a5a1:	adc    al,BYTE PTR [ebx+0x297e7020]
  41a5a7:	sar    DWORD PTR [edi+ebp*2-0x38],cl
  41a5ab:	mov    dl,0xb9
  41a5ad:	push   ecx
  41a5ae:	push   eax
  41a5af:	mov    dh,0xd
  41a5b1:	ds or  eax,0x8685220d
  41a5b7:	sub    al,0xfe
  41a5b9:	sbb    esi,esp
  41a5bb:	or     bh,dh
  41a5bd:	sub    al,0xb5
  41a5bf:	rcr    DWORD PTR [edi+0x55],0x8d
  41a5c3:	lods   eax,DWORD PTR ds:[esi]
  41a5c4:	test   BYTE PTR [edi+0x466787d1],dl
  41a5ca:	mov    cl,0xde
  41a5cc:	out    0x2c,al
  41a5ce:	cli    
  41a5cf:	pop    ss
  41a5d0:	push   edx
  41a5d1:	adc    ebp,edi
  41a5d3:	cmp    eax,0x5a19fe6c
  41a5d8:	dec    esp
  41a5d9:	icebp  
  41a5da:	popa   
  41a5db:	cdq    
  41a5dc:	std    
  41a5dd:	mov    ch,BYTE PTR [edi+0x61b26d9e]
  41a5e3:	cdq    
  41a5e4:	in     eax,dx
  41a5e5:	(bad)  
  41a5e6:	push   cs
  41a5e7:	jbe    0x41a633
  41a5e9:	push   ebx
  41a5ea:	int3   
  41a5eb:	xchg   ecx,eax
  41a5ec:	ret    
  41a5ed:	pop    ss
  41a5ee:	ja     0x41a5bc
  41a5f0:	xchg   ebx,eax
  41a5f1:	inc    eax
  41a5f2:	mov    DWORD PTR ds:0x479fe0fd,eax
  41a5f8:	xchg   ebp,eax
  41a5f9:	mov    bl,0x5c
  41a5fb:	(bad)  
  41a5fc:	in     al,dx
  41a5fd:	imul   DWORD PTR [edi+0x7b]
  41a600:	loope  0x41a5cd
  41a602:	cmp    bl,BYTE PTR [edi+0x7b8bba31]
  41a608:	arpl   WORD PTR [ebp+0x69c2a871],bx
  41a60e:	dec    ecx
  41a60f:	aad    0x78
  41a611:	xchg   ebp,eax
  41a612:	xchg   ebx,eax
  41a613:	rep gs ins BYTE PTR es:[edi],dx
  41a616:	or     al,0x89
  41a618:	data16 xor BYTE PTR [ecx],cl
  41a61b:	ins    DWORD PTR es:[edi],dx
  41a61c:	loop   0x41a5d4
  41a61e:	in     eax,0xd7
  41a620:	jae    0x41a65b
  41a622:	jl     0x41a5c2
  41a624:	pop    es
  41a625:	(bad)  
  41a626:	mov    esp,0xde2f38ed
  41a62b:	(bad)  
  41a62c:	jle    0x41a62f
  41a62e:	mov    edx,0x69550347
  41a633:	mov    ch,0x47
  41a635:	mov    cl,0x74
  41a637:	mov    edi,0x570b2811
  41a63c:	mov    DWORD PTR [ebx-0x37],0x315f4471
  41a643:	jmp    0xe2746ea
  41a648:	or     BYTE PTR [edx],0x3a
  41a64b:	pop    es
  41a64c:	mov    ah,0xc5
  41a64e:	and    al,0x40
  41a650:	(bad)  
  41a651:	call   0xd324:0xe11fb8da
  41a658:	sbb    al,0x3c
  41a65a:	ss or  al,0x4
  41a65d:	pusha  
  41a65e:	push   eax
  41a65f:	out    dx,al
  41a660:	adc    BYTE PTR [edi],dl
  41a662:	(bad)  [edx]
  41a664:	(bad)  
  41a665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a666:	iret   
  41a667:	jl     0x41a626
  41a669:	jb     0x41a663
  41a66b:	dec    ecx
  41a66c:	nop
  41a66d:	mov    ah,0x94
  41a66f:	cld    
  41a670:	inc    ecx
  41a671:	dec    BYTE PTR [edi+0x2e4091cf]
  41a677:	fmul   st(6),st
  41a679:	and    DWORD PTR [esi],0x7950b352
  41a67f:	jae    0x41a6cb
  41a681:	rol    DWORD PTR [edi],0x7e
  41a684:	lahf   
  41a685:	dec    BYTE PTR [eax+0x3ff474eb]
  41a68b:	fbstp  TBYTE PTR [esi]
  41a68d:	shr    DWORD PTR [esp+ecx*4+0x1bc5886d],cl
  41a694:	cwde   
  41a695:	xchg   edx,eax
  41a697:	(bad)  
  41a698:	outs   dx,BYTE PTR ds:[esi]
  41a699:	stos   BYTE PTR es:[edi],al
  41a69a:	inc    esp
  41a69b:	into   
  41a69c:	stc    
  41a69d:	inc    edi
  41a69e:	mov    esi,cs
  41a6a0:	or     ebp,DWORD PTR [ebx-0x7f]
  41a6a3:	inc    edi
  41a6a4:	fmul   DWORD PTR [edi+esi*1]
  41a6a7:	inc    ebp
  41a6a8:	adc    al,0x55
  41a6aa:	mov    cl,0xeb
  41a6ac:	repnz aaa 
  41a6ae:	fwait
  41a6af:	test   BYTE PTR [edi],al
  41a6b1:	or     eax,DWORD PTR [esi-0x7d]
  41a6b4:	add    eax,0x2702c073
  41a6b9:	pop    esp
  41a6ba:	and    ebx,edx
  41a6bc:	dec    esi
  41a6bd:	les    eax,FWORD PTR [ecx+ebx*1-0x6d0dbd3b]
  41a6c4:	mov    esp,0xd604e037
  41a6c9:	sar    DWORD PTR [eax-0x1c],0xd7
  41a6cd:	xor    ebp,eax
  41a6cf:	adc    al,0x98
  41a6d1:	mov    al,ds:0x89028826
  41a6d6:	mov    edi,0xf5f0cd55
  41a6db:	(bad)  
  41a6dc:	les    edx,FWORD PTR [edx]
  41a6de:	xchg   BYTE PTR [ebx-0x83f7d09],dl
  41a6e4:	mov    esp,0x36f1266e
  41a6e9:	inc    ebp
  41a6ea:	daa    
  41a6eb:	into   
  41a6ec:	sub    ah,BYTE PTR [eax]
  41a6ee:	xor    esi,edi
  41a6f0:	sub    al,0x8f
  41a6f2:	(bad)  
  41a6f3:	cwde   
  41a6f4:	inc    ebp
  41a6f5:	xor    edx,esp
  41a6f7:	or     BYTE PTR [ebx],ch
  41a6f9:	xlat   BYTE PTR ds:[ebx]
  41a6fa:	leave  
  41a6fb:	lock bound esp,QWORD PTR [eax+0x1b6151e5]
  41a702:	add    BYTE PTR [eax+0x48],dh
  41a705:	ds add eax,0xd0d4be0b
  41a70b:	pop    ss
  41a70c:	adc    BYTE PTR [ecx],bh
  41a70e:	addr16 inc eax
  41a710:	clc    
  41a711:	push   edi
  41a712:	mov    ebx,0xf580bd27
  41a717:	pop    edi
  41a718:	pop    ecx
  41a719:	fsub   st(5),st
  41a71b:	jo     0x41a6c3
  41a71d:	aaa    
  41a71e:	retf   
  41a71f:	or     edx,DWORD PTR [ecx-0x2dc238de]
  41a725:	fsubr  QWORD PTR [eax]
  41a727:	mov    al,0xd9
  41a729:	add    dl,BYTE PTR [ebx+0x17]
  41a72c:	in     al,dx
  41a72d:	(bad)  
  41a72e:	mov    ebx,0x5faed726
  41a733:	lahf   
  41a734:	icebp  
  41a735:	inc    esp
  41a736:	fcmovne st,st(4)
  41a738:	adc    BYTE PTR [ecx+0x1238bbcb],dl
  41a73e:	mov    esi,?
  41a740:	dec    esi
  41a741:	mov    eax,0x4d40d4f6
  41a746:	mov    BYTE PTR [edi-0x1f1ccfeb],dl
  41a74c:	imul   esp,DWORD PTR [edi],0xffffff9e
  41a74f:	int3   
  41a750:	mov    al,ds:0x19816ad9
  41a755:	les    ebx,FWORD PTR [esi-0x1f59718f]
  41a75b:	pop    edx
  41a75c:	xlat   BYTE PTR ds:[ebx]
  41a75d:	jo     0x41a76a
  41a75f:	sbb    al,0x19
  41a761:	mov    al,ds:0x934c0c62
  41a766:	xor    al,0x0
  41a768:	in     al,dx
  41a769:	push   edi
  41a76a:	sbb    ebp,DWORD PTR es:[edi+0x6e]
  41a76e:	lods   al,BYTE PTR ds:[esi]
  41a76f:	in     eax,0x88
  41a771:	or     dl,cl
  41a773:	xchg   ebx,eax
  41a774:	loopne 0x41a760
  41a776:	jmp    0xc0f7e895
  41a77b:	punpckhwd mm6,QWORD PTR [ebx+edx*2+0x7efeb1fe]
  41a783:	cmp    eax,0x84533999
  41a788:	test   DWORD PTR [ebp+0x7ac2b6f1],0xd40cf224
  41a792:	add    esi,DWORD PTR [ebp-0x30]
  41a795:	jecxz  0x41a810
  41a797:	mov    dh,0x64
  41a799:	imul   ebp,esp,0x1b18e12c
  41a79f:	dec    ebx
  41a7a0:	pop    ds
  41a7a1:	dec    eax
  41a7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a3:	mov    esi,0x6e400924
  41a7a8:	es cs push 0x74
  41a7ac:	jle    0x41a81d
  41a7ae:	pushf  
  41a7af:	sbb    DWORD PTR [eax],esi
  41a7b1:	sub    al,0xd4
  41a7b3:	cmp    bl,0x75
  41a7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b7:	stos   BYTE PTR es:[edi],al
  41a7b8:	lods   al,BYTE PTR ds:[esi]
  41a7b9:	ret    
  41a7ba:	xchg   ebx,eax
  41a7bb:	and    eax,0x86baf57d
  41a7c0:	nop
  41a7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c2:	push   0x1f
  41a7c4:	in     eax,dx
  41a7c5:	mov    bh,0xad
  41a7c7:	cmp    DWORD PTR [edi-0x1f],edi
  41a7ca:	retf   
  41a7cb:	jae    0x41a75b
  41a7cd:	clc    
  41a7ce:	mov    bl,0x1b
  41a7d0:	rep stos DWORD PTR es:[edi],eax
  41a7d2:	push   eax
  41a7d3:	js     0x41a7d3
  41a7d5:	add    DWORD PTR [edx],edx
  41a7d7:	mov    al,0xb6
  41a7d9:	xchg   ecx,eax
  41a7da:	and    eax,0xd7b5504d
  41a7df:	aad    0x3e
  41a7e1:	dec    edx
  41a7e2:	sti    
  41a7e3:	inc    eax
  41a7e4:	(bad)  
  41a7e5:	pop    ecx
  41a7e6:	icebp  
  41a7e7:	mov    al,0x9a
  41a7e9:	cwde   
  41a7ea:	cmp    eax,DWORD PTR [ebx]
  41a7ec:	mov    ebx,0x2ecc6f7e
  41a7f1:	mov    ds:0x756c905e,eax
  41a7f6:	(bad)  
  41a7f8:	cmp    DWORD PTR [eax],eax
  41a7fa:	mul    BYTE PTR [ebp-0x6d]
  41a7fd:	fyl2x  
  41a7ff:	mov    ds:0x564e65d0,eax
  41a804:	in     al,dx
  41a805:	sbb    eax,0x61bde14
  41a80a:	leave  
  41a80b:	mov    cl,BYTE PTR [esi-0x56]
  41a80e:	jne    0x41a7f7
  41a810:	mov    ecx,0x24d8bfc
  41a815:	dec    ebx
  41a816:	mov    cs,ebx
  41a818:	aam    0x8e
  41a81a:	push   ebp
  41a81b:	mov    DWORD PTR cs:[ecx],esp
  41a81e:	cmp    BYTE PTR [ebp+0x5f],0xa8
  41a822:	adc    ah,BYTE PTR [edx-0x6e2c045b]
  41a828:	dec    ebp
  41a829:	sub    al,BYTE PTR [ecx]
  41a82b:	jb     0x41a7bc
  41a82d:	test   DWORD PTR [esp+edi*1],esp
  41a830:	push   edi
  41a831:	(bad)  
  41a832:	jl     0x41a86a
  41a834:	sbb    eax,0x29cca7f7
  41a839:	add    BYTE PTR [ebx-0x4c183426],ah
  41a83f:	scas   eax,DWORD PTR es:[edi]
  41a840:	or     ah,al
  41a842:	sub    bh,al
  41a844:	clc    
  41a845:	jmp    0x41a8c6
  41a847:	inc    esi
  41a848:	add    al,0x98
  41a84a:	out    dx,al
  41a84b:	push   0x705ecb9b
  41a850:	sahf   
  41a851:	jmp    0x2e63:0x1a8df738
  41a858:	pop    ss
  41a859:	and    al,0x72
  41a85b:	pop    ebx
  41a85c:	pushf  
  41a85d:	jmp    0x41a7ef
  41a85f:	dec    esi
  41a860:	aam    0xf1
  41a862:	push   0x6c
  41a864:	pop    ds
  41a865:	inc    edx
  41a866:	imul   edx,DWORD PTR [esi-0x59632d01],0x85c9af96
  41a870:	or     BYTE PTR ds:0xb9a4bb64,dl
  41a876:	repnz pop esi
  41a878:	sti    
  41a879:	outs   dx,DWORD PTR ds:[esi]
  41a87a:	jmp    0x41a82e
  41a87c:	or     BYTE PTR [esi-0x7a],0x63
  41a880:	sbb    DWORD PTR [edx-0x7a77cede],ecx
  41a886:	call   0x5e19:0xf94f2d5e
  41a88d:	(bad)  
  41a88e:	daa    
  41a88f:	setl   cl
  41a892:	popa   
  41a893:	out    dx,al
  41a894:	outs   dx,DWORD PTR ds:[esi]
  41a895:	iret   
  41a896:	dec    ebp
  41a897:	dec    ebx
  41a898:	inc    ebp
  41a899:	cli    
  41a89a:	lods   eax,DWORD PTR ds:[esi]
  41a89b:	xchg   ecx,eax
  41a89c:	cmp    eax,0x5f812251
  41a8a1:	inc    di
  41a8a3:	gs jl  0x41a869
  41a8a6:	(bad)  
  41a8a7:	mov    edx,fs
  41a8a9:	push   ecx
  41a8aa:	dec    ebx
  41a8ab:	iret   
  41a8ac:	or     DWORD PTR [ebx+ecx*8+0x2a],esi
  41a8b0:	lods   al,BYTE PTR ds:[esi]
  41a8b1:	test   eax,0x3a194825
  41a8b6:	gs imul esp,esp,0x8
  41a8ba:	mov    dl,0x7e
  41a8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8bd:	mov    ecx,0x290a79d2
  41a8c2:	sbb    DWORD PTR [edi+0x27f77f1a],ecx
  41a8c8:	jbe    0x41a93c
  41a8ca:	loop   0x41a8f8
  41a8cc:	sbb    BYTE PTR [eax+ebp*2],dh
  41a8cf:	mov    ?,WORD PTR [edx-0x3c]
  41a8d2:	adc    al,0xcb
  41a8d4:	gs xor ecx,0xffffffd7
  41a8d8:	xor    dh,bl
  41a8da:	xchg   ecx,eax
  41a8db:	ja     0x41a8a1
  41a8dd:	and    al,0x12
  41a8df:	sbb    DWORD PTR [edi-0x65],ecx
  41a8e2:	adc    esp,DWORD PTR [esi]
  41a8e4:	and    dh,0x27
  41a8e7:	stc    
  41a8e8:	pop    ebx
  41a8e9:	cli    
  41a8ea:	stos   DWORD PTR es:[edi],eax
  41a8eb:	xchg   DWORD PTR [ecx+ecx*8],esi
  41a8ee:	jne    0x41a90b
  41a8f0:	pop    ds
  41a8f1:	bound  esp,QWORD PTR [ecx]
  41a8f3:	add    eax,0xb36f6f40
  41a8f8:	stos   BYTE PTR es:[edi],al
  41a8f9:	and    DWORD PTR [edi],eax
  41a8fb:	lock ss sub edi,0x2a
  41a900:	ins    DWORD PTR es:[edi],dx
  41a901:	shr    BYTE PTR [eax+0x9d525db],0x67
  41a908:	aaa    
  41a909:	add    esi,DWORD PTR [eax+0x4d06aebd]
  41a90f:	fnstsw WORD PTR [ebx-0x18897ab1]
  41a915:	sub    al,0xed
  41a917:	out    dx,eax
  41a918:	cmc    
  41a919:	xchg   esp,eax
  41a91a:	adc    eax,0xd118bf29
  41a91f:	jle    0x41a940
  41a921:	mov    ecx,0x74357240
  41a926:	mov    al,ds:0xd5570781
  41a92b:	fwait
  41a92c:	shl    DWORD PTR [edx+edx*2],cl
  41a92f:	call   0x4d6:0x579154ad
  41a936:	pushf  
  41a937:	ja     0x41a945
  41a939:	out    dx,eax
  41a93a:	mov    eax,edx
  41a93c:	std    
  41a93d:	and    edi,DWORD PTR [esi-0x29]
  41a940:	ins    DWORD PTR es:[edi],dx
  41a941:	jge    0x41a945
  41a943:	stc    
  41a944:	test   DWORD PTR [edi+0xb],esi
  41a947:	sti    
  41a948:	ret    0xe51f
  41a94b:	or     DWORD PTR [eax],0x4e
  41a94e:	fld    TBYTE PTR [ecx]
  41a950:	into   
  41a951:	xchg   edi,eax
  41a952:	(bad)  
  41a953:	inc    DWORD PTR [ebp-0x6861fe49]
  41a959:	in     al,dx
  41a95a:	loop   0x41a8f5
  41a95c:	das    
  41a95d:	cli    
  41a95e:	sbb    edx,DWORD PTR [ebp+0x6513e6fb]
  41a964:	hlt    
  41a965:	mov    edi,0x1b08c48d
  41a96a:	inc    esi
  41a96b:	jl     0x41a902
  41a96d:	and    esi,edx
  41a96f:	fmul   st,st(1)
  41a971:	loop   0x41a98b
  41a973:	std    
  41a974:	xor    ch,BYTE PTR [ecx]
  41a976:	mov    dh,0x4a
  41a978:	imul   ebp,DWORD PTR [ecx-0x369aa9b2],0x24
  41a97f:	dec    esp
  41a980:	xchg   edi,eax
  41a981:	mov    bh,0x86
  41a983:	in     eax,0xcc
  41a985:	pop    ss
  41a986:	mov    BYTE PTR [esi-0xb],dl
  41a989:	iret   
  41a98a:	sub    al,0xb9
  41a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a98d:	sub    BYTE PTR [eax],ch
  41a98f:	pop    edx
  41a990:	int3   
  41a991:	mov    BYTE PTR [esi+0x36],ch
  41a994:	adc    bl,bl
  41a996:	scas   al,BYTE PTR es:[edi]
  41a997:	test   BYTE PTR [edx],dh
  41a999:	or     BYTE PTR [edx-0x45f108e1],al
  41a99f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a0:	out    dx,al
  41a9a1:	lock push DWORD PTR [esi+esi*2]
  41a9a5:	inc    edx
  41a9a6:	adc    al,BYTE PTR [eax+edx*4+0x1df8093]
  41a9ad:	mov    al,0xd1
  41a9af:	call   0x3332b90e
  41a9b4:	aaa    
  41a9b5:	xor    eax,0x39d4c67a
  41a9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9bb:	ret    
  41a9bc:	and    DWORD PTR [ebx+ebx*8],0x1cc8d2d3
  41a9c3:	dec    esi
  41a9c4:	cs jo  0x41a98d
  41a9c7:	pop    esp
  41a9c8:	lods   al,BYTE PTR ds:[esi]
  41a9c9:	jmp    0x63e8:0x60763819
  41a9d0:	in     eax,0xe2
  41a9d2:	dec    esi
  41a9d3:	pop    ebp
  41a9d4:	call   0xf8b8:0x2c8c1697
  41a9db:	aaa    
  41a9dc:	xchg   ebx,eax
  41a9dd:	lods   eax,DWORD PTR ds:[esi]
  41a9de:	cmp    esi,DWORD PTR ds:0x59bed434
  41a9e4:	ds jmp 0x8e69f811
  41a9ea:	and    al,0xb3
  41a9ec:	cmp    DWORD PTR [ecx+eax*2],0x918caa2f
  41a9f3:	data16 sbb al,0xb
  41a9f6:	dec    esi
  41a9f7:	pop    es
  41a9f8:	cld    
  41a9f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fa:	push   esp
  41a9fb:	pushf  
  41a9fc:	mov    dl,0xbd
  41a9fe:	cmp    al,0x89
  41aa00:	jbe    0x41a9ba
  41aa02:	xor    bh,dl
  41aa04:	mov    cl,BYTE PTR [eax-0x5d976954]
  41aa0a:	inc    edx
  41aa0b:	shr    ebx,0x20
  41aa0e:	adc    BYTE PTR [edi-0x2d],0xe9
  41aa12:	mov    dl,0x9f
  41aa14:	inc    edi
  41aa15:	cmp    esi,DWORD PTR [ecx+0x69]
  41aa18:	push   ecx
  41aa19:	mov    DWORD PTR [ecx+0x6b7f31a9],ebp
  41aa1f:	jo     0x41a9fd
  41aa21:	fistp  QWORD PTR [edi+ecx*4-0x78]
  41aa25:	js     0x41aa93
  41aa27:	push   cs
  41aa28:	cdq    
  41aa29:	call   0xc630deb4
  41aa2e:	and    BYTE PTR [edx+eax*2-0x2f],bh
  41aa32:	stc    
  41aa33:	dec    esi
  41aa34:	inc    eax
  41aa35:	or     edx,DWORD PTR [eax]
  41aa37:	inc    ecx
  41aa38:	cli    
  41aa39:	adc    al,0x3f
  41aa3b:	test   eax,0x8097974d
  41aa40:	leave  
  41aa41:	ror    DWORD PTR [ecx+0xc791691],1
  41aa47:	push   ds
  41aa48:	js     0x41aab7
  41aa4a:	shl    BYTE PTR [ebp+0xf],1
  41aa4d:	adc    eax,0x34996ab4
  41aa52:	sbb    esp,ebp
  41aa54:	in     al,dx
  41aa55:	sub    esi,DWORD PTR [ecx]
  41aa57:	xor    eax,DWORD PTR ds:0x8446a476
  41aa5d:	dec    ebp
  41aa5e:	jnp    0x41aa7b
  41aa60:	cli    
  41aa61:	sub    eax,0x1b4a5bd8
  41aa66:	repz xchg ecx,eax
  41aa68:	mov    DWORD PTR [esi-0x71],esi
  41aa6b:	xor    eax,0x6332aa9e
  41aa70:	and    al,0x91
  41aa72:	das    
  41aa73:	rcl    BYTE PTR [ecx-0x182a9d93],1
  41aa79:	mov    ebx,0x1fc08386
  41aa7e:	cdq    
  41aa7f:	cmp    DWORD PTR [ebx+0x7d],ebx
  41aa82:	and    ebx,DWORD PTR [ebx+0x69]
  41aa85:	xlat   BYTE PTR ds:[ebx]
  41aa86:	inc    ecx
  41aa87:	aas    
  41aa88:	das    
  41aa89:	mov    edx,0x15564c97
  41aa8e:	js     0x41aa75
  41aa90:	out    0x83,al
  41aa92:	jl     0x41aad7
  41aa94:	outs   dx,DWORD PTR ds:[esi]
  41aa95:	cmp    al,0x5e
  41aa97:	out    0x7a,al
  41aa99:	push   ecx
  41aa9a:	sbb    edx,eax
  41aa9c:	jns    0x41aa7e
  41aa9e:	inc    DWORD PTR [ebx]
  41aaa0:	xchg   edi,eax
  41aaa1:	dec    edi
  41aaa2:	(bad)  
  41aaa3:	es dec edi
  41aaa5:	mov    WORD PTR [ebp+edi*4-0x4a],gs
  41aaa9:	retf   0x5ed3
  41aaac:	and    DWORD PTR [ebx],ebx
  41aaae:	sub    bh,BYTE PTR [eax-0x1d529dc9]
  41aab4:	(bad)  
  41aab5:	cli    
  41aab6:	lock fnstsw WORD PTR [edx]
  41aab9:	pop    esp
  41aaba:	repnz popa 
  41aabc:	lahf   
  41aabd:	push   cs
  41aabe:	or     eax,ebx
  41aac0:	repnz xchg edx,eax
  41aac2:	out    dx,eax
  41aac3:	imul   edi,DWORD PTR [edx+0x1984af08],0x67
  41aaca:	xor    DWORD PTR [ebp+0x72e7bbc0],0x76
  41aad1:	jnp    0x41aa5f
  41aad3:	(bad)  
  41aad4:	jmp    0xd1750e53
  41aad9:	mov    cl,0xe9
  41aadb:	hlt    
  41aadc:	xor    dl,BYTE PTR [ebx-0x3ba34891]
  41aae2:	(bad)  
  41aae3:	xor    DWORD PTR [esi-0x5c],edx
  41aae6:	push   0xffb97cb9
  41aaeb:	arpl   WORD PTR [eax],si
  41aaed:	inc    ecx
  41aaee:	push   esp
  41aaef:	jo     0x41ab39
  41aaf1:	lds    ebp,FWORD PTR [ecx]
  41aaf3:	jb     0x41ab1e
  41aaf5:	fcmovnbe st,st(6)
  41aaf7:	int3   
  41aaf8:	sub    al,0xf4
  41aafa:	fldcw  WORD PTR [edx+0xa]
  41aafd:	outs   dx,DWORD PTR ds:[esi]
  41aafe:	in     eax,dx
  41aaff:	inc    edi
  41ab00:	retf   0x818a
  41ab03:	inc    ebp
  41ab04:	sbb    ebx,ecx
  41ab06:	push   edi
  41ab07:	jo     0x41ab6e
  41ab09:	cmp    dh,BYTE PTR [esi*4+0x5600292e]
  41ab10:	xchg   esi,eax
  41ab11:	jge    0x41aad8
  41ab13:	inc    ebp
  41ab14:	jb     0x41ab30
  41ab16:	adc    al,0xb2
  41ab18:	inc    eax
  41ab19:	js     0x41ab5a
  41ab1b:	imul   ecx,DWORD PTR [eax],0xe60d20a7
  41ab21:	sub    eax,0x58b6472f
  41ab26:	aaa    
  41ab27:	inc    eax
  41ab28:	jb     0x41aaea
  41ab2a:	in     al,0xe7
  41ab2c:	xchg   esi,eax
  41ab2d:	sbb    eax,0x7c57b8a
  41ab32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab33:	pop    ebp
  41ab34:	jmp    0x266aceb7
  41ab39:	repnz and ebx,DWORD PTR [ecx]
  41ab3c:	mov    esp,0x6ef656fd
  41ab41:	fidivr WORD PTR [ecx]
  41ab43:	jnp    0x41ab5b
  41ab45:	push   eax
  41ab46:	fistp  DWORD PTR [edx]
  41ab48:	xchg   DWORD PTR ds:0x75935266,ebp
  41ab4e:	sbb    al,0xdd
  41ab50:	aas    
  41ab51:	cmp    eax,0xe96c1916
  41ab56:	es push esp
  41ab58:	arpl   di,bp
  41ab5a:	dec    ecx
  41ab5b:	dec    ebx
  41ab5c:	loope  0x41ab72
  41ab5e:	pop    ebp
  41ab5f:	and    al,0x1b
  41ab61:	sbb    BYTE PTR [ebx+eax*1-0x5d],0xe9
  41ab66:	cmp    DWORD PTR [ebx+eax*1+0x4a7034b2],eax
  41ab6d:	xchg   edi,eax
  41ab6e:	(bad)  
  41ab6f:	inc    esp
  41ab70:	inc    ecx
  41ab71:	inc    edi
  41ab72:	xchg   ebx,eax
  41ab73:	or     esi,ebp
  41ab75:	cmp    edi,DWORD PTR [edi+esi*1-0x7]
  41ab79:	rcr    BYTE PTR [ecx-0x6f],1
  41ab7c:	inc    ebx
  41ab7d:	pusha  
  41ab7e:	ins    DWORD PTR es:[edi],dx
  41ab7f:	pop    esp
  41ab80:	or     edx,edi
  41ab82:	mov    bl,0xb
  41ab84:	cmp    eax,0x7e27087d
  41ab89:	ficom  DWORD PTR [eax-0x25d57352]
  41ab8f:	sub    al,0x8d
  41ab91:	xchg   DWORD PTR [edi+0x2a],eax
  41ab94:	adc    ecx,DWORD PTR [edx-0x708a5eef]
  41ab9a:	loop   0x41ab88
  41ab9c:	inc    edi
  41ab9d:	fwait
  41ab9e:	push   es
  41ab9f:	mov    cl,0xd0
  41aba1:	mov    BYTE PTR [esi],cl
  41aba3:	xor    BYTE PTR [edi-0x33],bh
  41aba6:	or     bh,ah
  41aba8:	mov    cl,0xd5
  41abaa:	and    bl,BYTE PTR [ecx+0x1b6c85f8]
  41abb0:	repnz int3 
  41abb2:	stos   DWORD PTR es:[edi],eax
  41abb3:	lahf   
  41abb4:	test   BYTE PTR [ebp-0x10f8343f],dh
  41abba:	push   ss
  41abbb:	add    eax,0xf4223be7
  41abc0:	push   edx
  41abc1:	iret   
  41abc2:	pop    ds
  41abc3:	and    al,BYTE PTR [eax-0x69b68db0]
  41abc9:	push   eax
  41abca:	scas   eax,DWORD PTR es:[edi]
  41abcb:	push   esi
  41abcc:	(bad)  
  41abcd:	out    dx,al
  41abce:	pop    ecx
  41abcf:	imul   esp,DWORD PTR [ebx+ebx*1],0xb945db0f
  41abd6:	mov    ebp,0x9f48ca35
  41abdb:	(bad)  
  41abdc:	jne    0x41ab95
  41abde:	fstp   DWORD PTR [ecx]
  41abe0:	ror    BYTE PTR [ebp+0x61],1
  41abe3:	cdq    
  41abe4:	dec    eax
  41abe5:	lahf   
  41abe6:	mov    esp,DWORD PTR [ecx]
  41abe8:	xor    eax,0x621707d9
  41abed:	sbb    BYTE PTR [edx+0x171994c],ch
  41abf3:	sub    eax,0xd32f1401
  41abf8:	mov    BYTE PTR ds:0x415bec96,dh
  41abfe:	js     0x41ac52
  41ac00:	fs mov esp,0x10d5dd57
  41ac06:	fcomp  DWORD PTR [esi]
  41ac08:	out    0x31,eax
  41ac0a:	loopne 0x41abe9
  41ac0c:	enter  0x79a0,0xbe
  41ac10:	in     eax,dx
  41ac11:	fst    QWORD PTR [esi-0x14]
  41ac14:	sbb    BYTE PTR [ebp+eiz*4+0x5],bl
  41ac18:	pop    ecx
  41ac19:	test   esi,esp
  41ac1b:	and    eax,0x69874c55
  41ac20:	or     al,BYTE PTR [esi-0x4]
  41ac23:	mov    ecx,0xf232e171
  41ac28:	dec    ebp
  41ac29:	mov    ch,BYTE PTR [esi-0x54]
  41ac2c:	push   esi
  41ac2d:	bound  edx,QWORD PTR [edi-0x79179082]
  41ac33:	xchg   edi,eax
  41ac34:	dec    esp
  41ac35:	cld    
  41ac36:	mov    cs,WORD PTR [edx-0x598c0d19]
  41ac3c:	dec    eax
  41ac3d:	add    al,0x64
  41ac3f:	ret    
  41ac40:	ficom  DWORD PTR [edx]
  41ac42:	add    bl,BYTE PTR [edx+0x6e]
  41ac45:	clc    
  41ac46:	icebp  
  41ac47:	pop    es
  41ac48:	dec    eax
  41ac49:	adc    cl,BYTE PTR [edx+ebp*2]
  41ac4c:	mov    dl,0x9e
  41ac4e:	dec    esp
  41ac4f:	ficom  DWORD PTR [esi]
  41ac51:	je     0x41ac82
  41ac53:	pop    es
  41ac54:	xor    al,0x9b
  41ac56:	ins    DWORD PTR es:[edi],dx
  41ac57:	test   DWORD PTR [edx],eax
  41ac59:	jecxz  0x41abf0
  41ac5b:	aaa    
  41ac5c:	pop    eax
  41ac5d:	sub    eax,0x83cbaab2
  41ac62:	imul   edx,DWORD PTR [ebx+0x4e],0x8c2f5be6
  41ac69:	sbb    BYTE PTR [esi],al
  41ac6b:	sbb    al,0xd2
  41ac6d:	xchg   esi,eax
  41ac6e:	mov    edx,esi
  41ac70:	push   edx
  41ac71:	mov    ch,0xdb
  41ac73:	jmp    0x7fde:0x68e6cd25
  41ac7a:	fcomp  DWORD PTR ds:[ebx]
  41ac7d:	mov    esi,0x1fb60e97
  41ac82:	data16 rcl BYTE PTR [ebp-0x56],0xb7
  41ac87:	cmp    eax,0x3812d520
  41ac8c:	sbb    ah,bh
  41ac8e:	adc    edi,DWORD PTR [eax]
  41ac90:	xor    al,0x7c
  41ac92:	js     0x41ac7b
  41ac94:	mov    esi,0x3a66d7b0
  41ac99:	sar    ebx,0x58
  41ac9c:	push   es
  41ac9d:	idiv   DWORD PTR [ecx-0x47]
  41aca0:	sub    DWORD PTR [eax-0x26],eax
  41aca3:	loopne 0x41acb3
  41aca5:	jg     0x41ac3d
  41aca7:	adc    ah,BYTE PTR [ebx-0x423d498a]
  41acad:	aam    0x9c
  41acaf:	mov    dl,0xb4
  41acb1:	addr16 loope 0x41ac62
  41acb4:	das    
  41acb5:	out    0x80,eax
  41acb7:	fld    QWORD PTR [ecx]
  41acb9:	adc    BYTE PTR [edx+0x26],bl
  41acbc:	repz scas eax,DWORD PTR es:[edi]
  41acbe:	jne    0x41acae
  41acc0:	mov    edx,DWORD PTR [eax]
  41acc2:	sbb    al,0x51
  41acc4:	mov    DWORD PTR [ecx+0x3d],ecx
  41acc7:	out    dx,eax
  41acc8:	scas   eax,DWORD PTR es:[edi]
  41acc9:	popf   
  41acca:	push   es
  41accb:	aaa    
  41accc:	(bad)  
  41accd:	xlat   BYTE PTR ds:[ebx]
  41acce:	xchg   esp,eax
  41accf:	add    eax,0x3f8de458
  41acd4:	or     eax,0xeb5b3f83
  41acd9:	ret    
  41acda:	ret    0x5d0
  41acdd:	std    
  41acde:	pop    edi
  41acdf:	inc    edi
  41ace0:	cwde   
  41ace1:	clc    
  41ace2:	or     bh,0xe3
  41ace5:	popf   
  41ace6:	cmp    BYTE PTR [ecx+0x7a],ah
  41ace9:	sub    DWORD PTR [ecx+eax*1],ecx
  41acec:	jne    0x41ad03
  41acee:	push   0xf
  41acf0:	dec    edi
  41acf1:	and    bl,BYTE PTR [esi+esi*4+0x39]
  41acf5:	xchg   edx,eax
  41acf6:	sbb    eax,0xf543301f
  41acfb:	pushf  
  41acfc:	int    0xf3
  41acfe:	aas    
  41acff:	call   0x679c0409
  41ad04:	jmp    0x63126a55
  41ad09:	push   ss
  41ad0a:	shl    DWORD PTR [edi],0x42
  41ad0d:	inc    edi
  41ad0e:	sti    
  41ad0f:	xchg   ebx,eax
  41ad10:	sub    BYTE PTR [eax-0x76],cl
  41ad13:	retf   0x6554
  41ad16:	push   esp
  41ad17:	and    dh,BYTE PTR [ecx-0x61]
  41ad1a:	ret    
  41ad1b:	dec    esi
  41ad1c:	call   0xec5e:0x561dadd2
  41ad23:	(bad)  
  41ad27:	push   0xfffffff3
  41ad29:	dec    edx
  41ad2a:	adc    eax,0x178425e0
  41ad2f:	test   al,0xc0
  41ad31:	loopne 0x41acee
  41ad33:	shl    BYTE PTR [eax+0x480f1cce],0x77
  41ad3a:	das    
  41ad3b:	push   ss
  41ad3c:	mov    dh,0xea
  41ad3e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad40:	jp     0x41acef
  41ad42:	jns    0x41ad10
  41ad44:	loope  0x41ace9
  41ad46:	sbb    dh,BYTE PTR [edx]
  41ad48:	sar    DWORD PTR [edx+ebp*2-0x119cb163],cl
  41ad4f:	jo     0x41ad9c
  41ad51:	cbw    
  41ad53:	adc    DWORD PTR [ebx],edx
  41ad55:	pop    ds
  41ad56:	(bad)  [edx+0x56d221ed]
  41ad5c:	ja     0x41ad10
  41ad5e:	lods   eax,DWORD PTR ds:[esi]
  41ad5f:	arpl   WORD PTR [ebp-0x5a13821b],di
  41ad65:	out    0x14,al
  41ad67:	mov    BYTE PTR [ebx+ecx*1-0x79],0x24
  41ad6c:	mov    cl,0xde
  41ad6e:	mov    bl,0xcd
  41ad70:	pop    eax
  41ad71:	mov    esi,eax
  41ad73:	mov    ah,0x65
  41ad75:	cmovne edx,ebp
  41ad78:	jb     0x41ad37
  41ad7a:	ror    ah,0xa
  41ad7d:	scas   eax,DWORD PTR es:[edi]
  41ad7e:	retf   0x28d6
  41ad81:	fild   DWORD PTR [edi+0x1a7fe29a]
  41ad87:	pop    esi
  41ad88:	mov    DWORD PTR [edi-0x69],edi
  41ad8b:	mov    ecx,0x1699a988
  41ad90:	and    eax,DWORD PTR [ecx-0xd]
  41ad93:	push   ebp
  41ad94:	inc    ebx
  41ad95:	mov    ebp,DWORD PTR [eax+ebx*4]
  41ad98:	aas    
  41ad99:	stos   DWORD PTR es:[edi],eax
  41ad9a:	pop    edx
  41ad9b:	cmc    
  41ad9c:	fistp  QWORD PTR [ecx]
  41ad9e:	rol    DWORD PTR [ecx-0x1a28ce9f],0x20
  41ada5:	pop    edx
  41ada6:	lods   eax,DWORD PTR ds:[esi]
  41ada7:	in     eax,dx
  41ada8:	add    al,0x28
  41adaa:	xor    ecx,DWORD PTR [edx-0x4c1f07a2]
  41adb0:	inc    cx
  41adb2:	idiv   al
  41adb4:	mov    ds:0x8593d0ab,eax
  41adb9:	cwde   
  41adba:	dec    edi
  41adbb:	jo     0x41adaf
  41adbd:	js     0x41ad8d
  41adbf:	jp     0x41ad46
  41adc1:	jmp    0xd2197a02
  41adc6:	out    0xa9,al
  41adc8:	xchg   ebp,eax
  41adc9:	(bad)  
  41adcb:	cdq    
  41adcc:	mov    DWORD PTR [ebx],esi
  41adce:	xlat   BYTE PTR ds:[ebx]
  41adcf:	adc    eax,0x347592a2
  41add4:	jo     0x41adec
  41add6:	mov    al,dh
  41add8:	test   eax,0xf798e451
  41addd:	mov    BYTE PTR [ecx],dh
  41addf:	push   ds
  41ade0:	dec    eax
  41ade1:	xor    DWORD PTR [ebx-0x43],0x1c
  41ade5:	xor    esp,edi
  41ade7:	add    eax,0x2b3bc671
  41adec:	jecxz  0x41ae24
  41adee:	les    esp,FWORD PTR [eax]
  41adf0:	sbb    ah,BYTE PTR ds:0x79977fcb
  41adf6:	mov    dh,0x2e
  41adf8:	rcr    BYTE PTR [ebx-0x6990a959],0xfa
  41adff:	xchg   edx,eax
  41ae00:	jmp    0x41ae37
  41ae02:	fiadd  DWORD PTR [eax+0x18]
  41ae05:	pop    ds
  41ae06:	out    dx,eax
  41ae07:	(bad)  
  41ae09:	data16 jb 0x41ad9a
  41ae0c:	retf   
  41ae0d:	sti    
  41ae0e:	jp     0x41ae1f
  41ae10:	inc    esp
  41ae11:	gs rcl dh,cl
  41ae14:	daa    
  41ae15:	out    0xe7,eax
  41ae17:	xor    eax,0x6bbfa67e
  41ae1c:	xor    al,dl
  41ae1e:	push   ss
  41ae1f:	adc    DWORD PTR [edx-0x19],edi
  41ae22:	mov    dh,0x94
  41ae24:	into   
  41ae25:	push   0x37
  41ae27:	out    0xdf,eax
  41ae29:	add    BYTE PTR [edx-0x5ac88d56],ah
  41ae2f:	add    DWORD PTR [edx-0x44],0x7359c65
  41ae36:	push   ebp
  41ae37:	(bad)  
  41ae38:	clc    
  41ae39:	xor    eax,0x22ab17ce
  41ae3e:	lds    ebp,FWORD PTR [ebx]
  41ae40:	test   eax,0x82992f43
  41ae45:	js     0x41ae0d
  41ae47:	mov    ds:0x6f639a98,al
  41ae4c:	mov    ds:0x46d346c8,eax
  41ae51:	dec    esi
  41ae52:	sub    eax,0x6c99fe92
  41ae57:	push   ss
  41ae58:	(bad)  
  41ae59:	sahf   
  41ae5a:	xor    BYTE PTR [eax-0x1c58c9b4],ah
  41ae60:	das    
  41ae61:	fwait
  41ae62:	cmp    al,0xd4
  41ae64:	jl     0x41aee5
  41ae66:	mov    al,0xd9
  41ae68:	cmp    esp,ebp
  41ae6a:	cmp    bl,BYTE PTR [edi]
  41ae6c:	int    0xc1
  41ae6e:	scas   al,BYTE PTR es:[edi]
  41ae6f:	out    0x5b,al
  41ae71:	sub    edi,DWORD PTR [edi+0x1ab9d673]
  41ae77:	cmc    
  41ae78:	dec    esp
  41ae79:	jbe    0x41aec3
  41ae7b:	jl     0x41aec6
  41ae7d:	xor    esi,esp
  41ae7f:	push   0xffffffb5
  41ae81:	mov    BYTE PTR [edx-0x6],ch
  41ae84:	dec    ebx
  41ae85:	mov    esp,0x3712da60
  41ae8a:	jno    0x41aee6
  41ae8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8d:	lods   al,BYTE PTR ds:[esi]
  41ae8e:	into   
  41ae8f:	xor    ecx,esi
  41ae91:	jb     0x41aef0
  41ae93:	adc    eax,0x527a78a0
  41ae98:	and    BYTE PTR [ebx-0x6f07e01d],ah
  41ae9e:	sar    DWORD PTR [esi-0x47e7550f],0xd1
  41aea5:	and    dl,BYTE PTR [ebx+edi*1-0x4c]
  41aea9:	xchg   DWORD PTR [esi-0x1b0fc7d0],ebx
  41aeaf:	sub    BYTE PTR ds:0x39564bc4,dl
  41aeb5:	leave  
  41aeb6:	aas    
  41aeb7:	test   eax,0x3e818a1c
  41aebc:	add    al,BYTE PTR [ecx]
  41aebe:	in     al,0xba
  41aec0:	pop    edi
  41aec1:	and    DWORD PTR [edx+0x40],0xffffff84
  41aec5:	hlt    
  41aec6:	outs   dx,BYTE PTR ds:[esi]
  41aec7:	or     al,0xaf
  41aec9:	and    al,0xdc
  41aecb:	push   0xffffffe4
  41aecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aece:	mov    bh,0x64
  41aed0:	pop    ebp
  41aed1:	inc    edi
  41aed2:	sbb    edx,DWORD PTR [edx-0x1c28b2ce]
  41aed8:	inc    ebx
  41aed9:	arpl   di,cx
  41aedb:	lahf   
  41aedc:	push   0xf8b47353
  41aee1:	jb     0x41af2c
  41aee3:	ror    DWORD PTR [esi],1
  41aee5:	jns    0x41af01
  41aee7:	jb     0x41af1a
  41aee9:	ds mov dh,bh
  41aeec:	fwait
  41aeed:	es xchg edi,eax
  41aeef:	test   eax,0xc5d2b469
  41aef4:	push   eax
  41aef5:	scas   eax,DWORD PTR es:[edi]
  41aef6:	add    eax,0x3576ec3
  41aefb:	loopne 0x41aea5
  41aefd:	call   0x895c18f
  41af02:	(bad)  [edi+0x44]
  41af05:	sub    eax,0x86cd770c
  41af0a:	(bad)  [esi+0x71]
  41af0d:	xchg   esi,eax
  41af0e:	mov    al,ds:0xe3ad2214
  41af13:	mov    WORD PTR [esi],?
  41af15:	inc    ecx
  41af16:	mov    al,ds:0x4e4ecb99
  41af1b:	lods   eax,DWORD PTR ds:[esi]
  41af1c:	and    ecx,ebp
  41af1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af1f:	enter  0x6b99,0xf7
  41af23:	ret    0x59bc
  41af26:	or     al,0xe1
  41af28:	bound  esp,QWORD PTR [esi-0x2576a80a]
  41af2e:	(bad)  
  41af2f:	xchg   edx,eax
  41af30:	lods   eax,DWORD PTR ds:[esi]
  41af31:	(bad)  
  41af32:	cs xor ax,0xa89
  41af37:	daa    
  41af38:	cld    
  41af39:	aad    0xf5
  41af3b:	outs   dx,BYTE PTR ds:[esi]
  41af3c:	stos   BYTE PTR es:[edi],al
  41af3d:	push   es
  41af3e:	xchg   esi,eax
  41af3f:	sub    eax,DWORD PTR [edi-0xb]
  41af42:	bound  esi,QWORD PTR [esp+edx*8+0x6d]
  41af46:	cmc    
  41af47:	outs   dx,BYTE PTR ds:[esi]
  41af48:	sahf   
  41af49:	push   ebp
  41af4a:	ins    DWORD PTR es:[edi],dx
  41af4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af4c:	and    DWORD PTR [esi-0x35669331],esi
  41af52:	cdq    
  41af53:	mov    bl,0xd9
  41af55:	repz call 0xf908:0x1908ed09
  41af5d:	idiv   BYTE PTR [edx+0x76]
  41af60:	mov    eax,ds:0xed79ace2
  41af65:	sar    DWORD PTR [ebp+edx*8-0x4a],1
  41af69:	test   dh,ch
  41af6b:	xchg   edi,eax
  41af6c:	jae    0x41af3f
  41af6e:	xor    al,0x1c
  41af70:	dec    ecx
  41af71:	cwde   
  41af72:	xor    DWORD PTR [eax],0x22c2f522
  41af78:	jl     0x41af92
  41af7a:	(bad)  
  41af7b:	mov    eax,0x7bda5735
  41af80:	ficomp DWORD PTR [ebx-0x53bb7c10]
  41af86:	pop    esp
  41af87:	mov    ds:0x219cf8dc,al
  41af8c:	inc    ebx
  41af8d:	cmp    ebx,esp
  41af8f:	int    0xed
  41af91:	mov    DWORD PTR [ebx-0x2c4b73e],eax
  41af97:	jg     0x41af7e
  41af99:	stc    
  41af9a:	mov    ah,0x91
  41af9c:	jbe    0x41af54
  41af9e:	adc    BYTE PTR [ebp+0x2264fc5f],0x10
  41afa5:	mov    edi,0xce33633a
  41afaa:	mov    ds:0x5701f038,eax
  41afaf:	mov    ah,0xfb
  41afb1:	add    bl,BYTE PTR [edx]
  41afb3:	(bad)
  41afb6:	icebp  
  41afb7:	mov    DWORD PTR [ecx+ecx*1],edx
  41afba:	out    0x3b,al
  41afbc:	fild   QWORD PTR [ebx+0x7a]
  41afbf:	sub    al,0x12
  41afc1:	stos   BYTE PTR es:[edi],al
  41afc2:	cwde   
  41afc3:	inc    edx
  41afc4:	popf   
  41afc5:	adc    al,0xe0
  41afc7:	in     al,dx
  41afc8:	inc    ebp
  41afc9:	test   eax,0x2328b9e0
  41afce:	repz aam 0x71
  41afd1:	or     eax,0xc557f921
  41afd6:	inc    eax
  41afd7:	push   ecx
  41afd8:	repz inc ebp
  41afda:	mov    dh,BYTE PTR [ebx]
  41afdc:	mov    ch,0xdb
  41afde:	or     eax,DWORD PTR [esi-0x1e]
  41afe1:	(bad)  
  41afe2:	add    BYTE PTR [edx-0x3b46c81f],dh
  41afe8:	mov    bh,BYTE PTR [ebx-0x3a]
  41afeb:	stos   BYTE PTR es:[edi],al
  41afec:	ror    BYTE PTR [edx],cl
  41afee:	mov    ecx,0xebf5bd09
  41aff3:	or     al,0xa8
  41aff5:	(bad)  
  41aff6:	jnp    0x41af8e
  41aff8:	into   
  41aff9:	push   ds
  41affa:	push   DWORD PTR [eax]
  41affc:	add    ebp,ebp
  41affe:	mov    al,0xcc
  41b000:	jmp    0x1fba:0xf51ab7e0
  41b007:	aas    
  41b008:	pop    ebp
  41b009:	and    eax,0xb23fab70
  41b00e:	and    DWORD PTR [edx+0x41],ebp
  41b011:	jl     0x41b08d
  41b013:	cmp    al,0x31
  41b015:	adc    ecx,ecx
  41b017:	mov    ds:0x86d105b1,al
  41b01c:	pop    ss
  41b01d:	shl    ebx,0xbf
  41b020:	mov    eax,ds:0x3e828083
  41b025:	lea    ebx,[eax]
  41b027:	jno    0x41afb0
  41b029:	fs (bad) 
  41b02b:	cli    
  41b02c:	push   cs
  41b02d:	jmp    0xcbe1fa7
  41b032:	push   ecx
  41b033:	lods   eax,DWORD PTR ds:[esi]
  41b034:	mov    esp,0x68c3e82
  41b039:	jne    0x41b0ba
  41b03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b03c:	stos   BYTE PTR es:[edi],al
  41b03d:	or     DWORD PTR [edx-0x28],edi
  41b040:	in     al,0xa2
  41b042:	add    bl,BYTE PTR [ebp-0x7c]
  41b045:	mov    dh,0xe5
  41b047:	inc    edi
  41b048:	inc    esi
  41b049:	jp     0x41b018
  41b04b:	push   ebp
  41b04c:	in     al,dx
  41b04d:	jae    0x41b0a6
  41b04f:	sub    al,bl
  41b051:	add    al,0xcd
  41b053:	inc    edx
  41b054:	ins    DWORD PTR es:[edi],dx
  41b055:	mov    ch,0x34
  41b057:	and    BYTE PTR [ecx+ecx*8-0x5b2427fd],ah
  41b05e:	sub    BYTE PTR [edi-0x44],bh
  41b061:	dec    ecx
  41b062:	js     0x41b087
  41b064:	sbb    eax,0x39511ff7
  41b069:	and    ecx,DWORD PTR [ecx-0x2317c1b]
  41b06f:	mov    dl,0xaf
  41b071:	in     eax,dx
  41b072:	sar    bh,1
  41b074:	push   ebp
  41b075:	inc    ecx
  41b076:	xchg   edx,eax
  41b077:	mov    bl,0x7e
  41b079:	xor    eax,0x580987dd
  41b07e:	jbe    0x41b0a7
  41b080:	mov    ch,0x6a
  41b082:	test   dh,dh
  41b084:	(bad)  
  41b085:	dec    ecx
  41b086:	add    DWORD PTR [edx],edi
  41b088:	and    al,0xfa
  41b08a:	jmp    0x53ea:0x4d55dcbb
  41b091:	add    bl,BYTE PTR [ecx-0x1db86fa6]
  41b097:	or     ch,cl
  41b099:	pop    edx
  41b09a:	ret    0xdbaf
  41b09d:	cs mov esi,?
  41b0a0:	shl    BYTE PTR [ecx],cl
  41b0a2:	test   esp,0xaaa4422a
  41b0a8:	arpl   WORD PTR [edi+0x70aa78e],sp
  41b0ae:	or     eax,0xf05f5f38
  41b0b3:	imul   BYTE PTR [edx]
  41b0b5:	push   ebp
  41b0b6:	mov    al,ds:0x89ebe32a
  41b0bb:	xor    eax,0xb790beca
  41b0c0:	int3   
  41b0c1:	aas    
  41b0c2:	pop    eax
  41b0c3:	shl    BYTE PTR [ebp+0x5b2743c4],cl
  41b0c9:	jnp    0x41b0aa
  41b0cb:	sbb    al,BYTE PTR [esi]
  41b0cd:	mov    ah,0xb3
  41b0cf:	test   al,0xe0
  41b0d1:	cdq    
  41b0d2:	inc    eax
  41b0d3:	sbb    DWORD PTR ds:0x916b16f1,ecx
  41b0d9:	ins    BYTE PTR es:[edi],dx
  41b0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0db:	or     eax,0xb161933f
  41b0e0:	push   edi
  41b0e1:	push   ss
  41b0e2:	fst    st(4)
  41b0e4:	popa   
  41b0e5:	mov    ds:0x40122930,eax
  41b0ea:	mov    bl,dl
  41b0ec:	xchg   ecx,eax
  41b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ee:	mov    al,0x81
  41b0f0:	rcl    BYTE PTR [ebp+0x7],0x9c
  41b0f4:	aam    0x3b
  41b0f6:	arpl   WORD PTR [ecx],bx
  41b0f8:	sbb    al,0xd1
  41b0fb:	xor    BYTE PTR [edx-0x80],dl
  41b0fe:	enter  0x38ee,0x9b
  41b102:	out    0xfd,al
  41b104:	xchg   DWORD PTR [ebx+0x6f],ebx
  41b107:	mov    esi,fs
  41b109:	and    al,0x38
  41b10b:	mov    edx,0x458e31f3
  41b110:	mov    bh,cl
  41b112:	mov    es,WORD PTR [esi+0x74]
  41b115:	cmp    DWORD PTR [eax+0xc],edx
  41b118:	bound  edi,QWORD PTR [edx-0x29693727]
  41b11e:	arpl   dx,bp
  41b120:	repz bound esp,QWORD PTR [ecx+0x4e591b8b]
  41b127:	int3   
  41b128:	or     al,0xc
  41b12a:	or     eax,0xc4d44153
  41b12f:	sub    BYTE PTR [edi+0x33],bl
  41b132:	addr16 mov ch,0x72
  41b135:	push   esp
  41b136:	sahf   
  41b137:	dec    ecx
  41b138:	pop    ebx
  41b139:	xchg   BYTE PTR [edi],dl
  41b13b:	xchg   ecx,eax
  41b13c:	xor    BYTE PTR [ebp+0x41e7ccb0],bh
  41b142:	xchg   edx,eax
  41b143:	jmp    0x41b1c4
  41b145:	xchg   ecx,eax
  41b146:	push   es
  41b147:	push   edx
  41b148:	jge    0x41b0d8
  41b14a:	idiv   edi
  41b14c:	ins    DWORD PTR es:[edi],dx
  41b14d:	ret    
  41b14e:	jecxz  0x41b150
  41b150:	jg     0x41b19a
  41b152:	int3   
  41b153:	mov    eax,ds:0xc1cea1d8
  41b158:	das    
  41b159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b15a:	pop    ebx
  41b15b:	ret    
  41b15c:	ret    0x1ffe
  41b15f:	cdq    
  41b160:	cmp    esi,DWORD PTR [ecx]
  41b162:	je     0x41b1d5
  41b164:	jmp    0x41b112
  41b166:	inc    ebp
  41b167:	call   DWORD PTR [edx+0x6b]
  41b16a:	sbb    DWORD PTR [ebx+0x1b022f4d],ecx
  41b170:	dec    eax
  41b171:	push   esp
  41b172:	dec    esp
  41b173:	call   0xa26913f5
  41b178:	push   ebx
  41b179:	test   DWORD PTR [ecx+0x14],edi
  41b17c:	xchg   DWORD PTR [esi+esi*2-0x9],esp
  41b180:	mov    ah,0x7f
  41b182:	out    0xb4,eax
  41b184:	in     al,dx
  41b185:	adc    al,0xcd
  41b187:	idiv   BYTE PTR [esi+ebp*4+0x2d500f99]
  41b18e:	mov    bl,0xd1
  41b190:	or     ebp,esi
  41b192:	sahf   
  41b193:	jmp    0x41b14e
  41b195:	sub    eax,0x55e86740
  41b19a:	adc    ebp,esi
  41b19c:	sti    
  41b19d:	cmp    BYTE PTR ss:[ebx+0x7b],0xf6
  41b1a2:	pop    ds
  41b1a3:	sahf   
  41b1a4:	mov    edx,0xd5339981
  41b1a9:	data16 jnp 0x41b15b
  41b1ac:	jle    0x41b1c7
  41b1ae:	sub    eax,0x243e8ab0
  41b1b3:	(bad)  
  41b1b4:	enter  0xb245,0xf2
  41b1b8:	pusha  
  41b1b9:	int    0xe2
  41b1bb:	into   
  41b1bc:	loope  0x41b1b5
  41b1be:	fs mov dh,0x12
  41b1c1:	xchg   esi,eax
  41b1c2:	cld    
  41b1c3:	das    
  41b1c4:	aam    0x3c
  41b1c6:	arpl   WORD PTR [eax+0x34],di
  41b1c9:	push   edx
  41b1ca:	push   ebp
  41b1cb:	xor    esi,DWORD PTR [ecx+0x4b166398]
  41b1d1:	stos   BYTE PTR es:[edi],al
  41b1d2:	jecxz  0x41b1e9
  41b1d4:	cld    
  41b1d5:	push   0xed5bc47d
  41b1da:	push   0x54
  41b1dc:	sysexit 
  41b1de:	jl     0x41b1da
  41b1e0:	loop   0x41b1cf
  41b1e2:	sub    al,0x4b
  41b1e4:	sbb    eax,eax
  41b1e6:	call   0x16719baa
  41b1eb:	jle    0x41b25a
  41b1ed:	jo     0x41b192
  41b1ef:	cmp    BYTE PTR [edi],ah
  41b1f1:	nop
  41b1f2:	leave  
  41b1f3:	sahf   
  41b1f4:	push   0x5d
  41b1f6:	rol    BYTE PTR [ecx+0x5374347f],0x7d
  41b1fd:	mov    al,0x9d
  41b1ff:	adc    DWORD PTR ds:0xfc82bccf,esi
  41b205:	pop    eax
  41b206:	rcr    esp,0xd7
  41b209:	adc    DWORD PTR [ebp-0xa68ecb5],esp
  41b20f:	jp     0x41b1c5
  41b211:	adc    edx,DWORD PTR [ecx]
  41b213:	add    DWORD PTR [edx-0x51ad8a80],0x6d
  41b21a:	mov    eax,ds:0x7fc5c2aa
  41b21f:	push   edi
  41b220:	bound  eax,QWORD PTR [ebx+0x17]
  41b223:	sbb    ah,bh
  41b225:	mov    al,0x3c
  41b227:	xchg   edx,eax
  41b228:	jp     0x41b27f
  41b22a:	stos   BYTE PTR es:[edi],al
  41b22b:	les    ebx,FWORD PTR [ebp-0x3]
  41b22e:	clc    
  41b22f:	dec    edi
  41b230:	add    BYTE PTR [ebx],ch
  41b232:	enter  0xbb23,0x89
  41b236:	stc    
  41b237:	sub    ch,BYTE PTR [edi+edx*4]
  41b23a:	xchg   ecx,eax
  41b23b:	retf   0x2fa
  41b23e:	cdq    
  41b23f:	dec    ebx
  41b240:	mov    cl,0x64
  41b242:	mov    ds:0xa66e8739,al
  41b247:	cld    
  41b248:	ja     0x41b26c
  41b24a:	jle    0x41b1f5
  41b24c:	push   eax
  41b24d:	dec    edi
  41b24e:	add    ebx,eax
  41b250:	fnstsw WORD PTR [ecx-0x7e]
  41b253:	sub    al,0x15
  41b255:	sub    al,0xf0
  41b257:	mov    al,0xc5
  41b259:	aad    0x38
  41b25b:	aad    0x7c
  41b25d:	xlat   BYTE PTR ds:[ebx]
  41b25e:	pushf  
  41b25f:	fnstcw WORD PTR [edi]
  41b261:	xor    BYTE PTR [eax],dl
  41b263:	cli    
  41b264:	out    0x2,al
  41b266:	test   ebx,eax
  41b268:	inc    esi
  41b269:	ins    DWORD PTR es:[edi],dx
  41b26a:	mov    esi,0xcef47547
  41b26f:	push   esp
  41b270:	inc    esi
  41b271:	xchg   di,ax
  41b273:	mov    dl,0x2b
  41b275:	cmp    DWORD PTR [edx+0x38060c32],esp
  41b27b:	sbb    DWORD PTR [ebx-0x6],eax
  41b27e:	sub    DWORD PTR [eax],eax
  41b280:	inc    ebx
  41b281:	xchg   ebp,eax
  41b282:	lock adc ebx,DWORD PTR [ecx-0x74]
  41b286:	add    DWORD PTR [ebx+0x39],0xffffffee
  41b28a:	fwait
  41b28b:	push   cs
  41b28c:	repnz mov dl,0x65
  41b28f:	out    0x68,al
  41b291:	inc    edi
  41b292:	xchg   edx,eax
  41b293:	pop    ss
  41b294:	mov    ebp,0x76ec6418
  41b299:	jle    0x41b2cf
  41b29b:	lods   al,BYTE PTR ds:[esi]
  41b29c:	iret   
  41b29d:	xchg   esi,eax
  41b29e:	sbb    bh,BYTE PTR [ecx+0x20]
  41b2a1:	scas   al,BYTE PTR es:[edi]
  41b2a2:	stos   BYTE PTR es:[edi],al
  41b2a3:	sbb    BYTE PTR [esp+edi*2],0xb5
  41b2a7:	fwait
  41b2a8:	shr    edi,cl
  41b2aa:	outs   dx,DWORD PTR ds:[esi]
  41b2ab:	and    DWORD PTR [ecx-0x8],ebx
  41b2ae:	inc    eax
  41b2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b0:	xor    eax,0xde54be3d
  41b2b5:	out    dx,eax
  41b2b6:	lock hlt 
  41b2b8:	push   ss
  41b2b9:	jno    0x41b24b
  41b2bb:	mov    cl,ch
  41b2bd:	dec    esi
  41b2be:	fstp   TBYTE PTR [edi-0x41d42f74]
  41b2c4:	dec    ebx
  41b2c5:	xchg   edi,ebp
  41b2c7:	xor    edx,ebx
  41b2c9:	add    BYTE PTR [ecx],0xc2
  41b2cc:	daa    
  41b2cd:	dec    ecx
  41b2ce:	and    dh,al
  41b2d0:	push   0xbed5c9e9
  41b2d5:	int3   
  41b2d6:	clc    
  41b2d7:	adc    edx,DWORD PTR [eax]
  41b2d9:	add    DWORD PTR [ebp-0x17a55396],0x9b2fb996
  41b2e3:	sbb    BYTE PTR [edi+0x480908f0],0xe4
  41b2ea:	cdq    
  41b2eb:	mov    BYTE PTR es:[si+0x3],dl
  41b2f0:	xchg   edx,eax
  41b2f1:	push   esi
  41b2f2:	popf   
  41b2f3:	mov    esp,0xea8ae0a8
  41b2f8:	dec    ecx
  41b2f9:	mov    eax,fs
  41b2fb:	dec    edi
  41b2fc:	adc    al,bh
  41b2fe:	cmc    
  41b2ff:	and    eax,0x3588b093
  41b304:	cmp    BYTE PTR [edx+edx*2-0x7d],bh
  41b308:	rol    DWORD PTR [eax],1
  41b30a:	imul   ecx,DWORD PTR [eax],0x45
  41b30d:	push   0xa873671b
  41b312:	mov    dl,0x4b
  41b314:	and    al,0xee
  41b316:	mov    fs,WORD PTR [esp+ebp*4+0x54]
  41b31a:	xor    BYTE PTR [edi-0x7a],bh
  41b31d:	cmp    eax,0xd38db773
  41b322:	mov    ebp,0xbb541089
  41b327:	mov    bh,0xe0
  41b329:	in     al,dx
  41b32a:	cmp    ah,0xf1
  41b32d:	pop    ss
  41b32e:	std    
  41b32f:	stos   BYTE PTR es:[edi],al
  41b330:	clc    
  41b331:	in     eax,0x3f
  41b333:	adc    eax,0x59c4d019
  41b338:	xchg   esi,ebx
  41b33a:	pop    es
  41b33b:	loopne 0x41b2f7
  41b33d:	sub    ch,BYTE PTR [esi-0x1f]
  41b340:	sahf   
  41b341:	sub    eax,0x4f4138a7
  41b346:	idiv   DWORD PTR [ebp+eax*1+0xf23ddc6]
  41b34d:	iret   
  41b34e:	cmp    al,0xaa
  41b350:	push   ecx
  41b351:	sbb    al,0x99
  41b353:	mov    BYTE PTR [ecx-0x5d],dl
  41b356:	or     ch,BYTE PTR [esi+0x694afd8b]
  41b35c:	cld    
  41b35d:	xor    esp,edi
  41b35f:	mov    ch,0xd5
  41b361:	rcl    BYTE PTR ds:0xfbd724a5,1
  41b367:	ror    ah,cl
  41b369:	add    al,0xf7
  41b36b:	loop   0x41b343
  41b36d:	sub    DWORD PTR [ebx-0x6d],0xffffffc4
  41b371:	jg     0x41b3b4
  41b373:	xchg   BYTE PTR [eax+0xd534e72],ch
  41b379:	rep lods eax,DWORD PTR ds:[esi]
  41b37b:	sbb    ecx,DWORD PTR [esi]
  41b37d:	lock push esi
  41b37f:	mov    edi,0xd063df81
  41b384:	adc    eax,0x69796908
  41b389:	mov    edi,DWORD PTR [edi-0x3c010400]
  41b38f:	addr16 sub esp,eax
  41b392:	sbb    ch,bh
  41b394:	add    eax,0xd45993fe
  41b399:	jmp    0x41b3a5
  41b39b:	ror    BYTE PTR [ecx-0x7f],1
  41b39e:	mov    ds:0x575fe90e,eax
  41b3a3:	stos   DWORD PTR es:[edi],eax
  41b3a4:	inc    esp
  41b3a5:	lods   eax,DWORD PTR ds:[esi]
  41b3a6:	into   
  41b3a7:	adc    cl,bh
  41b3a9:	push   ebp
  41b3aa:	les    edx,FWORD PTR ds:0x4faf8e69
  41b3b0:	pop    ss
  41b3b1:	xor    esp,DWORD PTR [ecx+ecx*2]
  41b3b4:	cmp    eax,ecx
  41b3b6:	jae    0x41b3ef
  41b3b8:	outs   dx,BYTE PTR ds:[esi]
  41b3b9:	pusha  
  41b3ba:	mov    ecx,0xc40a1e25
  41b3bf:	shr    bh,1
  41b3c1:	push   eax
  41b3c2:	outs   dx,BYTE PTR ds:[esi]
  41b3c3:	in     eax,dx
  41b3c4:	and    ebx,DWORD PTR [edi+0x1d]
  41b3c7:	cmp    eax,0xa1ff2922
  41b3cc:	je     0x41b430
  41b3ce:	adc    esi,DWORD PTR [ecx+0x1c]
  41b3d1:	xor    eax,0xc0fbcb4d
  41b3d6:	(bad)  
  41b3d7:	in     eax,0x86
  41b3d9:	sbb    DWORD PTR [esp+edx*8],0x1201df2e
  41b3e0:	mov    edi,0xb689180f
  41b3e5:	imul   edi,DWORD PTR [ebp+0x3f],0x29
  41b3e9:	adc    al,0x54
  41b3eb:	test   eax,0x49ca92c4
  41b3f0:	in     al,dx
  41b3f1:	mov    eax,0xa5733b7f
  41b3f6:	imul   edi,DWORD PTR [edx-0x42],0x3a
  41b3fa:	nop
  41b3fb:	add    eax,0x33b0acd5
  41b400:	lods   eax,DWORD PTR ds:[esi]
  41b401:	shr    DWORD PTR [eax],0x6a
  41b404:	inc    ebx
  41b405:	je     0x41b466
  41b407:	sub    DWORD PTR [esi-0x7f804231],ebx
  41b40d:	push   ebp
  41b40e:	lea    ecx,[ecx-0x27]
  41b411:	mov    edx,0xc15aa6f
  41b416:	mov    ecx,0x5fabfe5f
  41b41b:	jns    0x41b491
  41b41d:	cmp    ecx,esp
  41b41f:	scas   eax,DWORD PTR es:[edi]
  41b420:	mov    ch,0xfb
  41b422:	je     0x41b450
  41b424:	outs   dx,BYTE PTR ds:[esi]
  41b425:	fbstp  TBYTE PTR [edx]
  41b427:	mov    eax,ds:0x49a998f7
  41b42c:	das    
  41b42d:	xor    BYTE PTR [edx-0x10],ah
  41b430:	cmp    ch,dh
  41b432:	mov    al,ds:0xbe8385e9
  41b437:	test   BYTE PTR es:[edx+0x3d],bl
  41b43b:	dec    ecx
  41b43c:	repz push ds
  41b43e:	mov    eax,ds:0xc7cb4085
  41b443:	xchg   edi,eax
  41b444:	jbe    0x41b48c
  41b446:	popf   
  41b447:	and    ch,ah
  41b449:	lea    ecx,[esi+0x75]
  41b44c:	sbb    ch,BYTE PTR [ebp-0x288a5f35]
  41b452:	test   eax,0xd8b6616f
  41b457:	xchg   edx,eax
  41b458:	sbb    BYTE PTR [esi],dl
  41b45a:	add    bl,BYTE PTR [edi+0x6c]
  41b45d:	gs loop 0x41b409
  41b460:	imul   esi,DWORD PTR [edx+0x37f05c26],0xffffffbe
  41b467:	nop
  41b468:	aad    0x93
  41b46a:	outs   dx,BYTE PTR ds:[esi]
  41b46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b46c:	sub    edx,DWORD PTR [esi]
  41b46e:	and    al,0x7
  41b470:	jno    0x41b48d
  41b472:	sub    eax,0xb091e19d
  41b477:	xor    dh,BYTE PTR [eax+0x23b168ad]
  41b47d:	jg     0x41b456
  41b47f:	adc    al,0x5d
  41b481:	push   esp
  41b482:	lods   eax,DWORD PTR ds:[esi]
  41b483:	ror    DWORD PTR [ebp+0x1bec7580],0x9c
  41b48a:	jg     0x41b4f0
  41b48c:	clc    
  41b48d:	sub    eax,DWORD PTR [ecx+0x27]
  41b490:	sahf   
  41b491:	out    dx,al
  41b492:	in     al,dx
  41b493:	push   edi
  41b494:	add    DWORD PTR [esi+0x51],edi
  41b497:	mov    dh,0x6e
  41b499:	sbb    BYTE PTR [edx],dl
  41b49b:	inc    esi
  41b49c:	sub    BYTE PTR ds:0xd2cf8077,bl
  41b4a2:	xchg   esp,eax
  41b4a3:	mov    DWORD PTR [ecx],eax
  41b4a5:	cld    
  41b4a6:	cmp    dl,bh
  41b4a8:	jb     0x41b500
  41b4aa:	mov    bl,0x10
  41b4ac:	dec    edx
  41b4ad:	enter  0xe902,0xc7
  41b4b1:	mov    ecx,0xb514315d
  41b4b6:	repnz not DWORD PTR [ebx+0xef8ac0a]
  41b4bd:	xor    DWORD PTR [ebx+0x53a62976],edx
  41b4c3:	pushf  
  41b4c4:	mov    ebx,0x80af780c
  41b4c9:	xor    DWORD PTR [edi+0x7dd6f47e],ecx
  41b4cf:	sbb    DWORD PTR [ecx],esp
  41b4d1:	pop    ecx
  41b4d2:	and    al,0x79
  41b4d4:	icebp  
  41b4d5:	daa    
  41b4d6:	ja     0x41b4fe
  41b4d8:	pop    es
  41b4d9:	adc    cl,dl
  41b4db:	pop    ecx
  41b4dc:	jp     0x41b46f
  41b4de:	dec    esp
  41b4df:	sbb    DWORD PTR [edx-0x37],0x56
  41b4e3:	mov    ebp,esp
  41b4e5:	fsubr  QWORD PTR [esi]
  41b4e7:	sti    
  41b4e8:	out    0xab,eax
  41b4ea:	fadd   QWORD PTR [eax]
  41b4ec:	xchg   ebx,eax
  41b4ed:	into   
  41b4ee:	xor    al,0x3a
  41b4f0:	js     0x41b4fc
  41b4f2:	sub    eax,0x9d248f7a
  41b4f7:	cmp    ah,ah
  41b4f9:	bnd jo 0x41b51e
  41b4fc:	sti    
  41b4fd:	(bad)  
  41b4fe:	test   eax,0x22eff6d1
  41b503:	jae    0x41b56b
  41b505:	mov    ch,0x3e
  41b507:	xchg   edi,eax
  41b508:	jmp    FWORD PTR [edx+0x7a23c628]
  41b50e:	sub    DWORD PTR [edi-0x38],ecx
  41b511:	(bad)  
  41b512:	div    DWORD PTR [esi-0x6a]
  41b515:	test   al,0x51
  41b517:	push   esp
  41b518:	mov    WORD PTR [esi],?
  41b51a:	xor    al,0x1a
  41b51c:	mov    al,ds:0x1ee78015
  41b521:	jle    0x41b521
  41b523:	mov    esp,0xd71fea9f
  41b528:	xor    DWORD PTR [edx],ebp
  41b52a:	cld    
  41b52b:	out    0x1,eax
  41b52d:	loop   0x41b4fa
  41b52f:	fbld   TBYTE PTR [ebp-0x4c997446]
  41b535:	add    ecx,ebp
  41b537:	jbe    0x41b539
  41b539:	sub    al,0x75
  41b53b:	cs sbb ecx,esi
  41b53e:	add    eax,0xb638aa03
  41b543:	jmp    0x7363bfe
  41b548:	push   cs
  41b549:	shl    bl,cl
  41b54b:	loop   0x41b591
  41b54d:	test   eax,0xed4bc838
  41b552:	rcr    BYTE PTR [edi+0x60e46743],cl
  41b558:	dec    edi
  41b559:	loop   0x41b57f
  41b55b:	data16 jecxz 0x41b52e
  41b55e:	push   0x78
  41b560:	stos   BYTE PTR es:[edi],al
  41b561:	and    DWORD PTR [ebp+0x74],edi
  41b564:	xor    DWORD PTR [ebp+0x2ec121c3],edi
  41b56a:	adc    edx,ecx
  41b56c:	jg     0x41b540
  41b56e:	rcl    DWORD PTR [esi],0x2d
  41b571:	dec    eax
  41b572:	mov    ds:0xf57aeaf5,al
  41b577:	inc    esi
  41b578:	aad    0x64
  41b57a:	std    
  41b57b:	mov    ecx,0x6750e6d
  41b580:	pop    es
  41b581:	xor    DWORD PTR [ebx+esi*1+0x71ced8d7],eax
  41b588:	in     eax,0x88
  41b58a:	or     ebx,edi
  41b58c:	js     0x41b578
  41b58e:	adc    eax,0xafa73cb3
  41b593:	add    bh,BYTE PTR [esi]
  41b595:	enter  0x7cd2,0xc9
  41b599:	and    esp,DWORD PTR [esi+esi*2-0x228a7381]
  41b5a0:	mov    ds:0x173bbd6c,eax
  41b5a5:	pop    ebp
  41b5a6:	mul    BYTE PTR [ebp-0x619d0f65]
  41b5ac:	push   ebx
  41b5ad:	jmp    0x41b5ad
  41b5af:	mov    esi,0x4b2a2dc5
  41b5b4:	cmp    al,0xc0
  41b5b6:	sbb    eax,ebp
  41b5b8:	or     bh,bl
  41b5ba:	sub    DWORD PTR [edi],0xffffffe1
  41b5bd:	jmp    0x394c5e74
  41b5c2:	push   ss
  41b5c3:	fisubr DWORD PTR [ebx]
  41b5c5:	mov    bh,0xfc
  41b5c7:	in     al,0xd4
  41b5c9:	mov    eax,ds:0x7bbe1629
  41b5ce:	fidiv  DWORD PTR [esi+0x1b]
  41b5d1:	dec    ecx
  41b5d2:	jno    0x41b61a
  41b5d4:	ss mov ch,0xec
  41b5d7:	ss ds xchg ebp,ebx
  41b5db:	jno    0x41b57d
  41b5dd:	aaa    
  41b5de:	jl     0x41b57e
  41b5e0:	jge    0x41b5be
  41b5e2:	xchg   esp,eax
  41b5e3:	rol    BYTE PTR [ebx-0x73],0x27
  41b5e7:	sar    BYTE PTR [edx+eiz*4+0x71649b3b],0x71
  41b5ef:	hlt    
  41b5f0:	clc    
  41b5f1:	jae    0x41b5f1
  41b5f3:	leave  
  41b5f4:	clc    
  41b5f5:	aaa    
  41b5f6:	inc    eax
  41b5f7:	pop    esi
  41b5f8:	mov    ds:0x6c41ce83,al
  41b5fd:	rcl    DWORD PTR [edx-0x6c],1
  41b600:	cmp    BYTE PTR [ebp+0x6a9ac04c],0x5b
  41b607:	pop    eax
  41b608:	or     al,0x70
  41b60a:	int3   
  41b60b:	bound  edx,QWORD PTR [ecx-0x1fafcd83]
  41b611:	pop    ss
  41b612:	sub    eax,0x8c41974b
  41b617:	nop
  41b618:	jecxz  0x41b649
  41b61a:	sub    al,0xba
  41b61c:	cmp    edi,ecx
  41b61e:	mov    ch,0x74
  41b620:	lods   al,BYTE PTR ds:[esi]
  41b621:	das    
  41b622:	nop
  41b623:	pop    ebp
  41b624:	outs   dx,DWORD PTR ds:[esi]
  41b625:	sbb    eax,edi
  41b627:	int    0xb4
  41b629:	loop   0x41b662
  41b62b:	fdiv   DWORD PTR [ebx-0x56]
  41b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b62f:	cmp    eax,0xf46901b
  41b634:	and    bh,BYTE PTR [esp+ecx*4-0x70]
  41b638:	add    DWORD PTR [esi+0x4f2c729b],0x66f5929c
  41b642:	or     DWORD PTR [ebp+0x4836dbbc],esi
  41b648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b649:	or     DWORD PTR ds:0xcd9ff1f7,edx
  41b64f:	xor    eax,0x70768b77
  41b654:	aad    0x17
  41b656:	push   edx
  41b657:	jb     0x41b5f5
  41b659:	jbe    0x41b6b2
  41b65b:	mov    bh,0xbd
  41b65d:	out    0x1b,al
  41b65f:	pop    esp
  41b660:	mov    al,0xf6
  41b662:	pusha  
  41b663:	stos   BYTE PTR es:[edi],al
  41b664:	add    ah,BYTE PTR [esi-0x45681cc1]
  41b66a:	out    0x7c,al
  41b66c:	lock and DWORD PTR [edx+0xece121e],eax
  41b673:	loopne 0x41b67e
  41b675:	scas   al,BYTE PTR es:[edi]
  41b676:	inc    ebp
  41b677:	shr    DWORD PTR [ecx],0x23
  41b67a:	pop    es
  41b67b:	mov    bh,dl
  41b67d:	xchg   esi,eax
  41b67e:	or     esi,DWORD PTR [edi]
  41b680:	jmp    0xddc5:0xdae2ee61
  41b687:	repnz loopne 0x41b65c
  41b68a:	add    dl,BYTE PTR [ebp+edx*2-0x76]
  41b68e:	sahf   
  41b68f:	stos   DWORD PTR es:[edi],eax
  41b690:	into   
  41b691:	dec    eax
  41b692:	xlat   BYTE PTR ds:[ebx]
  41b693:	pop    edx
  41b694:	add    BYTE PTR [esp+eiz*4+0x47],ah
  41b698:	jl     0x41b6b2
  41b69a:	or     BYTE PTR [edi-0x626059f6],ch
  41b6a0:	adc    eax,0xac45bd73
  41b6a5:	cld    
  41b6a6:	clc    
  41b6a7:	fwait
  41b6a8:	pop    esi
  41b6a9:	mov    bp,0x252f
  41b6ad:	add    esp,edx
  41b6af:	out    0x5,eax
  41b6b1:	sub    ebp,DWORD PTR [edx]
  41b6b3:	adc    bl,dh
  41b6b5:	push   ecx
  41b6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b7:	xchg   DWORD PTR [edx],esi
  41b6b9:	pop    es
  41b6ba:	mov    ebp,edi
  41b6bc:	inc    edx
  41b6bd:	lock adc DWORD PTR [esp+ebx*4],ebp
  41b6c1:	leave  
  41b6c2:	jmp    0x41b6fb
  41b6c4:	stos   DWORD PTR es:[edi],eax
  41b6c5:	imul   eax,DWORD PTR [esi],0xffffffcf
  41b6c8:	xchg   ecx,eax
  41b6c9:	sub    edi,edx
  41b6cb:	test   eax,0x61e9e6f7
  41b6d0:	jmp    0x66b90d6a
  41b6d5:	into   
  41b6d6:	xor    bl,ch
  41b6d8:	and    eax,0x9f349e08
  41b6dd:	test   eax,0x95d93e32
  41b6e2:	das    
  41b6e3:	jnp    0x41b6e5
  41b6e5:	or     eax,0xd25a64d0
  41b6ea:	add    al,0xe2
  41b6ec:	popf   
  41b6ed:	jo     0x41b67e
  41b6ef:	fwait
  41b6f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f1:	out    0xea,eax
  41b6f3:	mov    cl,0xfa
  41b6f5:	arpl   WORD PTR [ebp+0x5d],bx
  41b6f8:	data16 aad 0xb
  41b6fb:	sub    al,BYTE PTR [edx+ecx*8+0x1]
  41b6ff:	and    BYTE PTR ds:0xdb4782be,dl
  41b705:	imul   eax,DWORD PTR [edx-0x7f],0x59e0bc63
  41b70c:	dec    ebp
  41b70d:	push   ecx
  41b70e:	clc    
  41b70f:	ins    BYTE PTR es:[edi],dx
  41b710:	mov    bl,ah
  41b712:	xchg   esi,eax
  41b713:	pusha  
  41b714:	pop    eax
  41b715:	sub    BYTE PTR [ebp+ebx*8+0x6c],cl
  41b719:	pop    esp
  41b71a:	jle    0x41b6d0
  41b71c:	xchg   esi,eax
  41b71d:	mov    ds:0x2dc33892,al
  41b722:	mov    edi,0xfdc9ff48
  41b727:	cmp    eax,0x462b5c73
  41b72c:	pop    ebp
  41b72d:	int3   
  41b72e:	xor    DWORD PTR [ebx+edi*4+0x37c88328],eax
  41b735:	test   esp,edi
  41b737:	mov    eax,ds:0xb4873c75
  41b73c:	in     eax,0x16
  41b73e:	sar    DWORD PTR [edx+0x55f97b82],cl
  41b744:	jne    0x41b7b8
  41b746:	in     al,dx
  41b747:	push   ss
  41b748:	xor    eax,0xa46268ac
  41b74d:	(bad)  
  41b74e:	jecxz  0x41b7ce
  41b750:	mov    ds:0xb8e08a21,al
  41b755:	xor    eax,DWORD PTR [eax]
  41b757:	fstp   QWORD PTR [esi+ecx*1]
  41b75a:	cwde   
  41b75b:	xchg   ecx,eax
  41b75c:	fisubr DWORD PTR [esi-0x64]
  41b75f:	ror    ecx,0xcb
  41b762:	dec    eax
  41b763:	int    0x61
  41b765:	and    al,0x8f
  41b767:	or     DWORD PTR [eax+0x3ab4d107],eax
  41b76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b76e:	mul    bl
  41b770:	cmp    cl,BYTE PTR [ebp+0x31d752e6]
  41b776:	adc    BYTE PTR [ebx+0x446f3ee7],ah
  41b77c:	fst    QWORD PTR [esi-0x2f6062b3]
  41b782:	(bad)  
  41b783:	aas    
  41b784:	and    DWORD PTR [edx-0x2ee83e59],ebp
  41b78a:	jbe    0x41b75f
  41b78c:	jg     0x41b790
  41b78e:	(bad)  
  41b790:	push   es
  41b791:	(bad)  
  41b793:	test   BYTE PTR [ebx],bh
  41b795:	push   ecx
  41b796:	call   FWORD PTR [esi+0x3d]
  41b799:	enter  0x23c3,0xda
  41b79d:	and    BYTE PTR gs:[ecx-0x7e8c002b],ch
  41b7a4:	lea    esi,[eax]
  41b7a6:	into   
  41b7a7:	(bad)  
  41b7a8:	mov    al,0x19
  41b7aa:	ret    
  41b7ab:	retf   0xd9e7
  41b7ae:	hlt    
  41b7af:	xor    eax,0x233f52c4
  41b7b4:	or     ch,al
  41b7b6:	cli    
  41b7b7:	mov    ebp,0x4ae5a191
  41b7bc:	in     eax,0xa0
  41b7be:	or     ecx,DWORD PTR [edx+0x2b9667d]
  41b7c4:	inc    DWORD PTR [edx]
  41b7c6:	in     al,dx
  41b7c7:	mov    edi,0xc666de53
  41b7cc:	(bad)  
  41b7cd:	pop    ds
  41b7ce:	fwait
  41b7cf:	gs inc eax
  41b7d1:	mov    ch,BYTE PTR [ebp+0x33]
  41b7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7d5:	stc    
  41b7d6:	test   BYTE PTR [eax-0x1fed7064],dl
  41b7dc:	aaa    
  41b7dd:	dec    ebp
  41b7de:	out    0x18,eax
  41b7e0:	adc    al,0x61
  41b7e2:	mov    bl,0xbc
  41b7e4:	jg     0x41b83e
  41b7e6:	add    eax,0xed06397f
  41b7eb:	pop    es
  41b7ec:	or     al,0x3a
  41b7ee:	aam    0xe6
  41b7f0:	enter  0x876d,0xa2
  41b7f4:	pop    edi
  41b7f5:	xchg   edx,eax
  41b7f6:	dec    esi
  41b7f7:	(bad)  
  41b7f8:	or     eax,0xc1e2645d
  41b7fd:	std    
  41b7fe:	int3   
  41b7ff:	cmp    eax,0xf7640721
  41b804:	gs cmp bh,ah
  41b807:	mov    cs,WORD PTR [ecx+0x3]
  41b80a:	or     DWORD PTR [eax-0x128c1986],esp
  41b810:	jns    0x41b874
  41b812:	mov    esp,DWORD PTR [eax-0x57b3910c]
  41b818:	jle    0x41b844
  41b81a:	sbb    ah,dl
  41b81c:	retf   0xb444
  41b81f:	in     eax,0x94
  41b821:	pop    es
  41b822:	jg     0x41b839
  41b824:	call   0xe2b12c29
  41b829:	shl    bh,0x6b
  41b82c:	mov    cl,0x9a
  41b82e:	xor    BYTE PTR [ebx],ah
  41b830:	xor    eax,0xdda0b777
  41b835:	bound  ebx,QWORD PTR [edx]
  41b837:	dec    esi
  41b838:	retf   0xade3
  41b83b:	loop   0x41b86f
  41b83d:	push   ss
  41b83e:	or     bl,ah
  41b840:	scas   al,BYTE PTR es:[edi]
  41b841:	ret    0x71b1
  41b844:	cdq    
  41b845:	loop   0x41b8b2
  41b847:	stos   BYTE PTR es:[edi],al
  41b848:	pop    edx
  41b849:	push   cs
  41b84a:	sahf   
  41b84b:	cmp    eax,0x23e33299
  41b850:	xor    eax,DWORD PTR [ebx+esi*4+0x41]
  41b854:	cmp    BYTE PTR [eax],ch
  41b856:	jo     0x41b863
  41b858:	push   ds
  41b859:	outs   dx,DWORD PTR ds:[esi]
  41b85a:	cmp    ecx,DWORD PTR ds:0xc4087132
  41b860:	push   ss
  41b861:	cmp    al,0x2e
  41b863:	and    dl,bl
  41b865:	jl     0x41b820
  41b867:	pop    esi
  41b868:	call   0x2447:0xdc93e8c9
  41b86f:	mov    cl,0x7e
  41b871:	das    
  41b872:	sub    DWORD PTR [esi+0x796420f1],esp
  41b878:	mov    dh,0xe8
  41b87a:	xor    al,0x59
  41b87c:	call   0x6559:0xca268d6
  41b883:	ret    0xac56
  41b886:	iret   
  41b887:	into   
  41b888:	lods   al,BYTE PTR ds:[esi]
  41b889:	mov    al,0x22
  41b88b:	push   ecx
  41b88c:	mov    WORD PTR [ecx],gs
  41b88e:	shl    BYTE PTR [eax],0x58
  41b891:	rcr    BYTE PTR [ebp+0x31d39e22],1
  41b897:	ins    BYTE PTR es:[edi],dx
  41b898:	mov    cl,0x5b
  41b89a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89b:	aaa    
  41b89c:	push   0x2ad4851c
  41b8a1:	cmp    edi,DWORD PTR [ecx]
  41b8a3:	ret    0x5a90
  41b8a6:	out    dx,eax
  41b8a7:	stos   DWORD PTR es:[edi],eax
  41b8a8:	stos   DWORD PTR es:[edi],eax
  41b8a9:	and    eax,edi
  41b8ab:	mov    bh,0x28
  41b8ad:	mov    al,ds:0xce875aeb
  41b8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8b3:	or     esp,DWORD PTR [ebp+0x1]
  41b8b6:	dec    ebp
  41b8b7:	arpl   WORD PTR [ebp+0x15],bx
  41b8ba:	mov    ecx,0x74dda601
  41b8bf:	xor    ah,dl
  41b8c1:	mov    cl,0x7a
  41b8c3:	lea    edi,[edx-0x32698aad]
  41b8c9:	jp     0x41b861
  41b8cb:	(bad)  
  41b8cd:	mov    ds:0x707eb665,al
  41b8d2:	jmp    0xd9c8:0x7690c606
  41b8d9:	outs   dx,DWORD PTR ds:[esi]
  41b8da:	in     al,dx
  41b8db:	xor    eax,0x8ec4ba91
  41b8e0:	stos   BYTE PTR es:[edi],al
  41b8e1:	sub    DWORD PTR [edi],ecx
  41b8e3:	push   edi
  41b8e4:	es jmp 0xdc8c:0x18f3b67a
  41b8ec:	fsubr  QWORD PTR [esi-0x78]
  41b8ef:	push   edi
  41b8f0:	cmp    esi,edi
  41b8f2:	cmp    BYTE PTR [ebx-0x25],0xe5
  41b8f6:	test   BYTE PTR [edi],0x87
  41b8f9:	xor    eax,DWORD PTR [eax+edx*2]
  41b8fc:	xchg   BYTE PTR [ebp+eiz*8+0x599aa24e],dl
  41b903:	push   esp
  41b904:	shr    DWORD PTR [esp+esi*1+0x3fdd7dd7],1
  41b90b:	jg     0x41b8bf
  41b90d:	cld    
  41b90e:	dec    ecx
  41b90f:	(bad)  
  41b910:	xor    al,0xad
  41b912:	dec    eax
  41b913:	jno    0x41b914
  41b915:	into   
  41b916:	xor    al,0xb7
  41b918:	mov    cl,0x62
  41b91a:	pushf  
  41b91b:	lods   al,BYTE PTR ds:[esi]
  41b91c:	cs mov esi,0x10d65dd7
  41b922:	mov    ebx,0xc603c8b3
  41b927:	loopne 0x41b98c
  41b929:	addr16 gs push ebp
  41b92c:	out    dx,eax
  41b92d:	push   edi
  41b92e:	jnp    0x41b99f
  41b930:	jns    0x41b93d
  41b932:	push   eax
  41b933:	cmp    esi,edi
  41b935:	fs ins BYTE PTR es:[edi],dx
  41b937:	mov    ebx,0xa05f4244
  41b93c:	(bad)  
  41b93d:	jmp    0x41b99f
  41b93f:	xchg   edi,eax
  41b940:	push   edx
  41b941:	ins    BYTE PTR es:[edi],dx
  41b942:	xor    esi,DWORD PTR [eax+edi*2-0x38]
  41b946:	cmc    
  41b947:	pop    es
  41b948:	in     eax,0x94
  41b94a:	push   esp
  41b94b:	es push ss
  41b94d:	pop    esp
  41b94e:	mov    eax,ds:0xc32aae22
  41b953:	xor    al,BYTE PTR [ebp+0x47c7dbdf]
  41b959:	imul   edx,DWORD PTR [edi-0x4635817f],0x21ebabd6
  41b963:	int3   
  41b964:	aaa    
  41b965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b966:	ss loopne 0x41b8fd
  41b969:	xchg   edi,eax
  41b96a:	jle    0x41b9b8
  41b96c:	adc    al,0x6c
  41b96e:	and    al,0xc0
  41b970:	dec    ebx
  41b971:	jmp    0xea55:0x1f597b6b
  41b978:	pushf  
  41b979:	aam    0x6e
  41b97b:	aas    
  41b97c:	xchg   DWORD PTR [esi],edi
  41b97e:	cmp    DWORD PTR [ebx+edi*2],edi
  41b981:	jne    0x41ba02
  41b983:	sub    dh,BYTE PTR [ecx]
  41b985:	leave  
  41b986:	mov    ds:0x4a034b5e,al
  41b98b:	or     eax,0x722ac878
  41b990:	push   0xffffff8a
  41b992:	cmp    al,0x42
  41b994:	test   eax,0xedbf8064
  41b999:	loop   0x41b9ab
  41b99b:	sbb    ebx,DWORD PTR [ecx+0x59ec53fe]
  41b9a1:	or     BYTE PTR [ebp+0x1f34147e],0x27
  41b9a8:	aaa    
  41b9a9:	cdq    
  41b9aa:	arpl   WORD PTR [eax-0x76],ax
  41b9ad:	jmp    0xe5d4:0x539aa66d
  41b9b4:	std    
  41b9b5:	mov    edi,0xd1214798
  41b9ba:	adc    al,0x27
  41b9bc:	jmp    0xca036520
  41b9c1:	int3   
  41b9c2:	or     BYTE PTR [ebx],bl
  41b9c4:	jmp    0x3586:0xad7c028a
  41b9cb:	mov    al,0x2f
  41b9cd:	loope  0x41b963
  41b9cf:	pop    ds
  41b9d0:	dec    esp
  41b9d1:	jae    0x41b9e0
  41b9d3:	stc    
  41b9d4:	mov    bl,0xb5
  41b9d6:	pop    ss
  41b9d7:	jecxz  0x41ba05
  41b9d9:	xchg   ebp,eax
  41b9da:	loop   0x41b994
  41b9dc:	xor    DWORD PTR [ebx],0xffffff97
  41b9df:	inc    esp
  41b9e0:	mov    ds:0xfc099cd1,al
  41b9e5:	mov    bl,0x18
  41b9e7:	mov    ebp,DWORD PTR [eax]
  41b9e9:	inc    ebx
  41b9ea:	addr16 aad 0xe8
  41b9ed:	aam    0xb5
  41b9ef:	jmp    0x364f75ef
  41b9f4:	into   
  41b9f5:	add    eax,0x586eaa04
  41b9fa:	not    DWORD PTR [ebx]
  41b9fc:	push   esi
  41b9fd:	cld    
  41b9fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ff:	leave  
  41ba00:	or     BYTE PTR [ecx-0x38],0x1
  41ba04:	mov    esp,0x2b200125
  41ba09:	out    0x74,eax
  41ba0b:	popf   
  41ba0c:	push   0x5e93ec3f
  41ba11:	pop    es
  41ba12:	leave  
  41ba13:	ds lahf 
  41ba15:	into   
  41ba16:	sahf   
  41ba17:	and    eax,DWORD PTR [ecx+0x51]
  41ba1a:	(bad)  
  41ba1b:	shl    DWORD PTR [bx+si],1
  41ba1e:	push   edx
  41ba1f:	push   ebp
  41ba20:	cmp    BYTE PTR [edx-0x68],bh
  41ba23:	xchg   ebx,eax
  41ba24:	jmp    0xe477:0x7965f66f
  41ba2b:	retf   
  41ba2c:	out    dx,eax
  41ba2d:	pushf  
  41ba2e:	and    dl,BYTE PTR [ebp+edi*2-0x4f]
  41ba32:	or     bh,BYTE PTR [esi+0x6942ae54]
  41ba38:	mov    bl,0x69
  41ba3a:	ret    
  41ba3b:	add    al,0x19
  41ba3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba3e:	push   ecx
  41ba3f:	mov    bl,0xb2
  41ba41:	outs   dx,BYTE PTR cs:[esi]
  41ba43:	frstor [esi+0x61f54ce3]
  41ba49:	mov    bl,0xbf
  41ba4b:	sti    
  41ba4c:	adc    al,0x78
  41ba4e:	cli    
  41ba4f:	mov    eax,ds:0xb686f1a9
  41ba54:	or     esi,DWORD PTR [eax+0x9]
  41ba57:	inc    edi
  41ba58:	fst    st(6)
  41ba5a:	xor    eax,0xe0005dd2
  41ba5f:	cmp    BYTE PTR [ebx-0x51],0x8e
  41ba63:	or     dh,BYTE PTR [ecx]
  41ba65:	mov    dl,0x1
  41ba67:	add    DWORD PTR [eax-0x9b8212b],ebp
  41ba6d:	sub    eax,0x7b60019f
  41ba72:	jmp    0x41ba75
  41ba74:	push   ds
  41ba75:	pop    es
  41ba76:	cdq    
  41ba77:	ret    0x8dcf
  41ba7a:	fsubr  st,st(1)
  41ba7c:	call   0xe3b9:0x761e329
  41ba83:	pop    edi
  41ba84:	and    BYTE PTR [eax],ah
  41ba86:	dec    esi
  41ba87:	imul   esp,edx,0x4a229e40
  41ba8d:	cmp    ecx,ecx
  41ba8f:	dec    ebp
  41ba90:	sbb    ah,dl
  41ba92:	in     al,dx
  41ba93:	jp     0x41ba75
  41ba95:	push   ebp
  41ba96:	mov    edx,0x5a345d92
  41ba9b:	ss push ds
  41ba9d:	outs   dx,BYTE PTR ds:[esi]
  41ba9e:	inc    ecx
  41ba9f:	(bad)  
  41baa0:	xor    dh,BYTE PTR [eax+0x77]
  41baa3:	mov    esi,?
  41baa5:	jg     0x41ba72
  41baa7:	xor    ch,bh
  41baa9:	pop    ebx
  41baaa:	(bad)  
  41baab:	inc    esp
  41baac:	pushf  
  41baad:	(bad)  
  41baaf:	into   
  41bab0:	in     eax,dx
  41bab1:	xchg   ebx,eax
  41bab2:	and    BYTE PTR [ecx],0x29
  41bab5:	sbb    esi,0x6d
  41bab8:	nop
  41bab9:	xchg   edx,eax
  41baba:	fs push edi
  41babc:	dec    ebp
  41babd:	mov    ds:0x23f5759d,al
  41bac2:	pop    ebp
  41bac3:	mov    bl,0x3b
  41bac5:	(bad)  
  41bac6:	(bad)  
  41bac7:	ror    BYTE PTR [ebx-0x13],1
  41baca:	clc    
  41bacb:	dec    ebx
  41bacc:	push   eax
  41bacd:	fwait
  41bace:	mov    ah,0x6e
  41bad0:	addr16 rcr ch,cl
  41bad3:	jp     0x41ba69
  41bad5:	cwde   
  41bad6:	inc    ebx
  41bad7:	jl     0x41bac9
  41bad9:	ins    BYTE PTR es:[edi],dx
  41bada:	test   eax,0x13c363b6
  41badf:	in     eax,dx
  41bae0:	or     al,0x6e
  41bae2:	add    ecx,DWORD PTR [esi]
  41bae4:	pop    ebx
  41bae5:	pop    ss
  41bae6:	add    cl,bh
  41bae8:	xor    al,cl
  41baea:	rcr    DWORD PTR [eax+0x2cec46a0],cl
  41baf0:	inc    edx
  41baf1:	sahf   
  41baf2:	popa   
  41baf3:	sub    BYTE PTR [edx],dh
  41baf5:	cwde   
  41baf6:	jnp    0x41bb3a
  41baf8:	xor    al,0x61
  41bafa:	dec    esp
  41bafb:	xor    ah,ch
  41bafd:	sbb    dl,BYTE PTR [edx+ecx*8]
  41bb00:	ds pushf 
  41bb02:	lds    cx,DWORD PTR [edi-0x42]
  41bb06:	imul   ebx,eax,0xe155d9cc
  41bb0c:	das    
  41bb0d:	push   0xffffffe2
  41bb0f:	aas    
  41bb10:	cld    
  41bb11:	dec    esi
  41bb12:	pop    ebx
  41bb13:	push   esi
  41bb14:	jae    0x41bb44
  41bb16:	push   ebp
  41bb17:	(bad)  
  41bb18:	aas    
  41bb19:	(bad)  
  41bb1a:	(bad)  [ecx-0x61]
  41bb1d:	das    
  41bb1e:	arpl   WORD PTR ds:0xbc4c4089,bp
  41bb24:	xlat   BYTE PTR ds:[ebx]
  41bb25:	inc    esp
  41bb26:	adc    eax,0x8d77bb26
  41bb2b:	cmc    
  41bb2c:	lock mov eax,eax
  41bb2f:	out    dx,al
  41bb30:	xchg   esp,eax
  41bb31:	cmp    edx,esi
  41bb33:	fsubr  st,st(3)
  41bb35:	dec    esi
  41bb36:	lea    edx,[esi+0x52]
  41bb39:	fldcw  WORD PTR [edx]
  41bb3b:	cmc    
  41bb3c:	call   0x27d7:0xe01dc5c9
  41bb43:	enter  0xa958,0x66
  41bb47:	bound  esp,QWORD PTR [ebp-0x3e]
  41bb4a:	cmovl  ebp,DWORD PTR [ecx]
  41bb4d:	loope  0x41bb16
  41bb4f:	in     al,dx
  41bb50:	sub    BYTE PTR [ebx-0xe],ch
  41bb53:	imul   ebx,DWORD PTR [eax+0x5b],0x1d
  41bb57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb58:	jb     0x41bba0
  41bb5a:	in     al,0x45
  41bb5c:	call   0x8dc7:0xb04c5556
  41bb63:	getsec 
  41bb65:	push   ds
  41bb66:	es mov ch,0xf1
  41bb69:	pop    DWORD PTR [ebx]
  41bb6b:	xchg   cl,dl
  41bb6d:	push   ds
  41bb6e:	dec    eax
  41bb6f:	and    eax,0xacf60a10
  41bb74:	inc    edx
  41bb75:	inc    ecx
  41bb76:	push   ss
  41bb77:	mov    ds:0xd86eff07,eax
  41bb7c:	fidivr DWORD PTR [eax]
  41bb7e:	and    dh,ch
  41bb80:	add    eax,0x2c2ca63b
  41bb85:	adc    DWORD PTR [ebp+0x3c],edi
  41bb88:	mov    al,0xfd
  41bb8a:	inc    ecx
  41bb8b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41bb8d:	lea    edi,[esi]
  41bb8f:	push   0xab6c46e4
  41bb94:	arpl   WORD PTR [esi],dx
  41bb96:	imul   ecx,DWORD PTR [esi+0x50],0xffffff9c
  41bb9a:	mov    eax,0x1f45e873
  41bb9f:	in     eax,0xf1
  41bba1:	mov    dl,0x7b
  41bba3:	xchg   esi,eax
  41bba4:	add    ebp,DWORD PTR [edx]
  41bba6:	fs je  0x41bbfb
  41bba9:	or     DWORD PTR [edi+edx*8-0x337de440],0x60c89704
  41bbb4:	xchg   esi,eax
  41bbb5:	jmp    0x2049a20
  41bbba:	or     DWORD PTR [edx],esp
  41bbbc:	mov    cl,BYTE PTR [ecx-0x59]
  41bbbf:	add    DWORD PTR [ecx],ecx
  41bbc1:	mov    eax,DWORD PTR [ecx-0x470a8c87]
  41bbc7:	sti    
  41bbc8:	mov    BYTE PTR [ecx+0x1e],bh
  41bbcb:	fist   WORD PTR [ebx+eax*2+0x38]
  41bbcf:	int    0x92
  41bbd1:	mov    dl,ch
  41bbd3:	dec    esi
  41bbd4:	adc    edi,DWORD PTR [eax]
  41bbd6:	push   DWORD PTR [esi-0x4c]
  41bbd9:	ret    0xb6d3
  41bbdc:	test   edi,0x88f5f9a7
  41bbe2:	out    dx,eax
  41bbe3:	push   esp
  41bbe4:	daa    
  41bbe5:	loopne 0x41bbca
  41bbe7:	imul   edx,ebp,0x1a4f3015
  41bbed:	mov    edx,0x70e3afa2
  41bbf2:	xlat   BYTE PTR ds:[ebx]
  41bbf3:	dec    ebx
  41bbf4:	in     eax,0x93
  41bbf6:	cmp    DWORD PTR [ebx],edx
  41bbf8:	mov    ah,ah
  41bbfa:	dec    ebx
  41bbfb:	or     ah,BYTE PTR [ecx+0x4]
  41bbfe:	push   ss
  41bbff:	in     eax,0x95
  41bc01:	add    bh,BYTE PTR [esi]
  41bc03:	push   es
  41bc04:	lock push ecx
  41bc06:	push   ds
  41bc07:	in     eax,0x40
  41bc09:	sar    BYTE PTR [ebx+0x29dcb13a],1
  41bc0f:	mov    al,ds:0xa7aafacf
  41bc14:	stos   BYTE PTR es:[edi],al
  41bc15:	adc    al,0x97
  41bc17:	ja     0x41bbdc
  41bc19:	cmp    al,0x23
  41bc1b:	lds    edi,FWORD PTR [esi-0x3798f9d8]
  41bc21:	push   edi
  41bc22:	jge    0x41bc73
  41bc24:	mov    ebx,0x2fec0f8e
  41bc29:	nop
  41bc2a:	std    
  41bc2b:	push   ecx
  41bc2c:	ds sahf 
  41bc2e:	xor    cl,BYTE PTR [esi*4+0x346ccf52]
  41bc35:	shl    bh,cl
  41bc37:	je     0x41bbbe
  41bc39:	les    edx,FWORD PTR [edi+0x18]
  41bc3c:	rcr    DWORD PTR [ebx-0x66],cl
  41bc3f:	in     eax,dx
  41bc40:	das    
  41bc41:	xchg   esp,eax
  41bc42:	call   0xf1f2:0x1183816f
  41bc49:	push   esp
  41bc4a:	inc    eax
  41bc4b:	dec    ecx
  41bc4c:	sbb    DWORD PTR [ebp-0x7e],0x3a
  41bc50:	cmp    BYTE PTR [ebx-0x23c2a0d9],bl
  41bc56:	enter  0xa19,0x4a
  41bc5a:	call   0xdc50d3b8
  41bc5f:	std    
  41bc60:	cld    
  41bc61:	xor    edi,DWORD PTR [ebp+0xf]
  41bc64:	push   cs
  41bc65:	lock push es
  41bc67:	jnp    0x41bc5e
  41bc69:	sar    BYTE PTR [edx+0x7a],0x77
  41bc6d:	gs out dx,al
  41bc6f:	mov    edi,0x383118ca
  41bc74:	(bad)  
  41bc76:	repnz xchg ecx,eax
  41bc78:	pop    edi
  41bc79:	sti    
  41bc7a:	les    ebp,FWORD PTR [ebx+0x5]
  41bc7d:	aaa    
  41bc7e:	and    eax,0xba14f93a
  41bc83:	pop    edx
  41bc84:	inc    edi
  41bc85:	mov    edx,0xda77ee6a
  41bc8a:	inc    ebp
  41bc8b:	pop    ss
  41bc8c:	outs   dx,DWORD PTR ds:[esi]
  41bc8d:	imul   ebp,DWORD PTR [esi+0x58],0xf238391
  41bc94:	sub    dh,BYTE PTR [eax-0x20c5c29d]
  41bc9a:	fldenv [ecx+0x133a2f56]
  41bca0:	pop    ebp
  41bca1:	bndldx bnd1,[edx]
  41bca4:	dec    si
  41bca6:	aad    0x14
  41bca8:	test   al,0x72
  41bcaa:	sahf   
  41bcab:	(bad)
  41bcae:	(bad)  
  41bcaf:	xchg   ebp,eax
  41bcb0:	retf   0x707d
  41bcb3:	fwait
  41bcb4:	xchg   BYTE PTR [ecx+0x7e78850c],bl
  41bcba:	pop    ss
  41bcbb:	jns    0x41bcd0
  41bcbd:	lahf   
  41bcbe:	ds mov dh,0xdf
  41bcc1:	mov    edi,0xe7a4a93d
  41bcc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcc7:	leave  
  41bcc8:	xchg   ebp,esp
  41bcca:	xor    esi,esi
  41bccc:	xlat   BYTE PTR ds:[ebx]
  41bccd:	clc    
  41bcce:	dec    ebx
  41bccf:	pop    ebx
  41bcd0:	push   ecx
  41bcd1:	in     al,0x40
  41bcd3:	xor    dl,ch
  41bcd5:	gs ss sahf 
  41bcd8:	lods   al,BYTE PTR ds:[esi]
  41bcd9:	lock push 0x21
  41bcdc:	push   esi
  41bcdd:	stos   BYTE PTR es:[edi],al
  41bcde:	jp     0x41bcc6
  41bce0:	cmp    ah,BYTE PTR [edx-0x79cd5528]
  41bce6:	add    cl,BYTE PTR [edx-0x6f2faafd]
  41bcec:	mov    ds:0x98afeabe,eax
  41bcf1:	sbb    al,0x76
  41bcf3:	sbb    al,0x31
  41bcf5:	jp     0x41bc89
  41bcf7:	jbe    0x41bd3f
  41bcf9:	push   0x5d62add6
  41bcfe:	aas    
  41bcff:	lock int 0xca
  41bd02:	add    BYTE PTR [edx-0x2627f7a4],al
  41bd08:	dec    edx
  41bd09:	adc    al,0x4e
  41bd0b:	xchg   ebp,eax
  41bd0c:	std    
  41bd0d:	cmc    
  41bd0e:	dec    DWORD PTR [esi+0x5b24e2d5]
  41bd14:	pop    ebp
  41bd15:	push   esi
  41bd16:	cmp    eax,0x804b72a6
  41bd1b:	or     DWORD PTR [edi+0x34],0x2ec290f6
  41bd22:	rcr    bl,cl
  41bd24:	dec    esp
  41bd25:	and    edi,ebp
  41bd27:	imul   eax,DWORD PTR [ebp+0x4c],0xc466b0c0
  41bd2e:	xor    esp,DWORD PTR [eax]
  41bd30:	xchg   esi,eax
  41bd31:	hlt    
  41bd32:	scas   eax,DWORD PTR es:[edi]
  41bd33:	push   edx
  41bd34:	or     eax,0xe2b2a3ea
  41bd39:	jne    0x41bda6
  41bd3b:	push   esp
  41bd3c:	dec    ebp
  41bd3d:	push   ebp
  41bd3e:	imul   edi,ecx,0x25
  41bd41:	(bad)  
  41bd43:	jp     0x41bd8f
  41bd45:	or     ebp,ebp
  41bd47:	adc    DWORD PTR [ebx-0x7ddf64b2],0xdee0ea89
  41bd51:	sbb    edx,DWORD PTR [edi+0x2a]
  41bd54:	jmp    0x41bd9a
  41bd56:	fsub   DWORD PTR ds:0x340a8bbb
  41bd5c:	or     bh,BYTE PTR [edi]
  41bd5e:	loopne 0x41bd35
  41bd60:	xor    al,BYTE PTR ds:0xb7fdfd35
  41bd66:	lods   eax,DWORD PTR ds:[esi]
  41bd67:	push   cs
  41bd68:	dec    edx
  41bd69:	sbb    ah,dh
  41bd6b:	mov    ebx,0x3bad1e16
  41bd70:	out    dx,al
  41bd71:	outs   dx,BYTE PTR ds:[esi]
  41bd72:	pop    edx
  41bd73:	fwait
  41bd74:	cmp    eax,0x19bd6397
  41bd79:	and    ecx,DWORD PTR [edi-0x598dec89]
  41bd7f:	and    ch,dl
  41bd81:	pop    ds
  41bd82:	cwde   
  41bd83:	xchg   ebp,eax
  41bd84:	xor    BYTE PTR [esp+eax*8],dh
  41bd87:	imul   edx,DWORD PTR [edx],0x4c
  41bd8a:	inc    edi
  41bd8b:	jae    0x41bd25
  41bd8d:	sub    BYTE PTR [ebx-0x42],0xc9
  41bd91:	xchg   ebp,esi
  41bd93:	add    cl,BYTE PTR [edi+0x6115d95f]
  41bd99:	add    bh,BYTE PTR ds:0x745c9e32
  41bd9f:	daa    
  41bda0:	fist   WORD PTR [ecx+esi*4]
  41bda3:	into   
  41bda4:	icebp  
  41bda5:	cmp    bh,BYTE PTR [edi+0x34d7b9b5]
  41bdab:	adc    DWORD PTR ds:0xddd0c782,esp
  41bdb1:	in     eax,0x95
  41bdb3:	aad    0xe6
  41bdb5:	cmp    eax,0x24c34cd0
  41bdba:	jg     0x41bd73
  41bdbc:	cmc    
  41bdbd:	jl     0x41be21
  41bdbf:	mov    ch,0x25
  41bdc1:	jnp    0x41be21
  41bdc3:	lods   al,BYTE PTR ds:[esi]
  41bdc4:	mov    bh,0x9d
  41bdc6:	test   eax,0xf6de308f
  41bdcb:	popf   
  41bdcc:	jle    0x41bd5f
  41bdce:	push   esi
  41bdcf:	sub    bh,BYTE PTR [esi+0x6c]
  41bdd2:	add    eax,0xb83c4acb
  41bdd7:	xchg   esp,eax
  41bdd8:	xor    edi,esp
  41bdda:	popf   
  41bddb:	mov    eax,ds:0x4b043264
  41bde0:	jg     0x41be40
  41bde2:	inc    edi
  41bde3:	jo     0x41be58
  41bde5:	jo     0x41bdd8
  41bde7:	sar    ecx,cl
  41bde9:	jb     0x41be19
  41bdeb:	pop    edi
  41bdec:	mov    ch,0x84
  41bdee:	pop    ds
  41bdef:	inc    BYTE PTR [ebx-0x1ab39b48]
  41bdf5:	inc    esi
  41bdf6:	xchg   ch,dl
  41bdf8:	push   edx
  41bdf9:	cmp    cl,BYTE PTR [ebp+0x30]
  41bdfc:	lods   eax,DWORD PTR ds:[esi]
  41bdfd:	push   es
  41bdfe:	adc    al,BYTE PTR [edi+edx*4]
  41be01:	dec    ecx
  41be02:	retf   
  41be03:	pop    es
  41be04:	jo     0x41be4e
  41be06:	pop    ds
  41be07:	and    BYTE PTR [esi-0x3],bl
  41be0a:	shr    BYTE PTR [eax+0x68],0x1
  41be0e:	or     eax,0x6e844991
  41be13:	lock sbb eax,0xb5bcce94
  41be19:	sahf   
  41be1a:	int3   
  41be1b:	and    ebx,esi
  41be1d:	dec    ecx
  41be1e:	ds jo  0x41bda8
  41be21:	icebp  
  41be22:	(bad)  
  41be23:	mul    BYTE PTR [esi-0x5496aa40]
  41be29:	sbb    BYTE PTR ds:0x86e224b0,cl
  41be2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be30:	popf   
  41be31:	and    eax,0x33f8a884
  41be36:	pop    ebp
  41be37:	ins    DWORD PTR es:[edi],dx
  41be38:	xor    bl,ah
  41be3a:	jge    0x41beb5
  41be3c:	stos   DWORD PTR es:[edi],eax
  41be3d:	mov    al,0x28
  41be3f:	cmp    al,0xf2
  41be41:	jb     0x41be5a
  41be43:	stos   DWORD PTR es:[edi],eax
  41be44:	shr    BYTE PTR [edi],cl
  41be46:	pop    edx
  41be47:	mov    esp,0xbab99c05
  41be4c:	test   al,dh
  41be4e:	mov    edi,0x71a85e42
  41be53:	sar    DWORD PTR [ebp+0x7c],0x97
  41be57:	xor    DWORD PTR [esi-0x55fde12c],ebp
  41be5d:	adc    al,0x45
  41be5f:	or     DWORD PTR [edx+0x78],edx
  41be62:	push   eax
  41be63:	fstp   st(6)
  41be65:	sub    dh,BYTE PTR [edx-0x2d78d3cd]
  41be6b:	and    al,0xc7
  41be6d:	or     eax,0x9fefb5a7
  41be72:	aaa    
  41be73:	into   
  41be74:	dec    BYTE PTR [ebp+0x4c]
  41be77:	outs   dx,BYTE PTR ds:[esi]
  41be78:	sahf   
  41be79:	pop    ebp
  41be7a:	aaa    
  41be7b:	in     al,0xf1
  41be7d:	enter  0xf83b,0x10
  41be81:	rcr    DWORD PTR [edx+ebx*8],cl
  41be84:	mov    eax,0x9f03289d
  41be89:	loop   0x41be15
  41be8b:	mov    esi,0x40adf3bc
  41be90:	repnz sbb eax,0x5d7ea932
  41be96:	outs   dx,DWORD PTR ds:[esi]
  41be97:	dec    ebp
  41be98:	mov    edi,0x39ef1dfe
  41be9d:	add    al,0x17
  41be9f:	les    esp,FWORD PTR [edi+edx*4+0x70d16b34]
  41bea6:	lods   eax,DWORD PTR ds:[esi]
  41bea7:	xor    BYTE PTR [ebp+0x7b],0xaf
  41beab:	cli    
  41beac:	or     DWORD PTR [edx],edx
  41beae:	test   al,0x51
  41beb0:	dec    BYTE PTR [ebx]
  41beb2:	pop    ds
  41beb3:	mov    WORD PTR [ecx-0x6c4f3569],?
  41beb9:	fnstenv [edx+ecx*8-0x71315edd]
  41bec0:	sub    DWORD PTR ss:[ebp+0x36bf0f42],esi
  41bec7:	loop   0x41be72
  41bec9:	add    eax,0x3d1b2383
  41bece:	add    cl,BYTE PTR [ecx]
  41bed0:	push   esi
  41bed1:	repz aas 
  41bed3:	xor    ecx,edx
  41bed5:	mov    ebx,0x9d2ee6b1
  41beda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bedb:	aam    0x35
  41bedd:	outs   dx,DWORD PTR ds:[esi]
  41bede:	aaa    
  41bedf:	mov    ds:0x6bd84a56,eax
  41bee4:	pop    esi
  41bee5:	iret   
  41bee6:	cmc    
  41bee7:	mov    dl,0x6c
  41bee9:	xor    DWORD PTR [ebx+0x36],ecx
  41beec:	dec    ecx
  41beed:	xchg   edi,eax
  41beee:	js     0x41be7d
  41bef0:	jae    0x41bf10
  41bef2:	mov    eax,0x7529b4e7
  41bef7:	xchg   ebx,eax
  41bef8:	retf   0xc7db
  41befb:	sub    al,0xbd
  41befd:	mov    bl,0xfd
  41beff:	mov    dh,dl
  41bf01:	std    
  41bf02:	out    dx,eax
  41bf03:	inc    ebx
  41bf04:	jno    0x41bf2f
  41bf06:	adc    DWORD PTR [ecx],esp
  41bf08:	dec    edi
  41bf09:	imul   esp,DWORD PTR ds:0x7beae9bb,0x9
  41bf10:	push   edi
  41bf11:	outs   dx,BYTE PTR ds:[esi]
  41bf12:	xchg   ecx,eax
  41bf13:	jne    0x41bf2b
  41bf15:	outs   dx,BYTE PTR ds:[esi]
  41bf16:	xor    BYTE PTR [ecx],ch
  41bf18:	fcomp  DWORD PTR [ecx]
  41bf1a:	in     al,0xb7
  41bf1c:	rdmsr  
  41bf1e:	or     dh,0x49
  41bf21:	lds    esi,FWORD PTR [esi-0x59]
  41bf24:	imul   ebp,DWORD PTR [ebx-0x1d10a5a],0xe04ab071
  41bf2e:	or     dl,0x19
  41bf31:	shl    BYTE PTR ds:0xa49ab068,0x98
  41bf38:	adc    DWORD PTR ds:0xc7b903c,edi
  41bf3e:	jmp    0x41bf77
  41bf40:	enter  0x5145,0x24
  41bf44:	mov    bh,cl
  41bf46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf47:	inc    eax
  41bf48:	mov    dh,BYTE PTR [ebp+0x3a7bf06b]
  41bf4e:	cmp    al,0x3b
  41bf50:	adc    BYTE PTR [edi],bl
  41bf52:	(bad)  
  41bf53:	ds std 
  41bf55:	pop    esp
  41bf56:	pop    esi
  41bf57:	(bad)  
  41bf58:	pushw  es
  41bf5a:	cdq    
  41bf5b:	lods   al,BYTE PTR ds:[esi]
  41bf5c:	in     eax,0x85
  41bf5e:	js     0x41bf36
  41bf60:	ins    DWORD PTR es:[edi],dx
  41bf61:	xchg   edi,eax
  41bf62:	dec    DWORD PTR [edx]
  41bf64:	xor    DWORD PTR [ebx+0x4d09f5ff],edx
  41bf6a:	jae    0x41bfba
  41bf6c:	mov    al,0x4e
  41bf6e:	cmp    DWORD PTR ss:0x8a2ac6b3,edi
  41bf75:	mov    gs,WORD PTR [esi]
  41bf77:	rcr    esp,0x64
  41bf7a:	sbb    BYTE PTR [ebp-0x616d5608],bh
  41bf80:	pop    edi
  41bf81:	adc    ch,dh
  41bf83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf84:	or     eax,0xe3f6e0b
  41bf89:	xor    BYTE PTR [ebp+0x66],ch
  41bf8c:	les    esp,FWORD PTR [ebp+ebx*8-0x47]
  41bf90:	inc    ebx
  41bf91:	rcr    bh,1
  41bf93:	loopne 0x41bf5a
  41bf95:	mov    ds:0xdb413b51,al
  41bf9a:	mov    eax,0x1df74223
  41bf9f:	pop    ebp
  41bfa0:	test   BYTE PTR [ebp+0x17],ah
  41bfa3:	js     0x41bfad
  41bfa5:	or     DWORD PTR [edx],esi
  41bfa7:	phsubsw mm2,mm7
  41bfab:	dec    ebx
  41bfac:	jo     0x41bfbd
  41bfae:	ret    0xed8
  41bfb1:	cmp    BYTE PTR [esi-0x2e],bl
  41bfb4:	inc    ebp
  41bfb5:	shl    BYTE PTR [ebx],1
  41bfb7:	inc    esp
  41bfb8:	adc    BYTE PTR ds:0x61940800,ch
  41bfbe:	mov    edi,0xe68c8de1
  41bfc3:	sub    eax,0x3a806b9d
  41bfc8:	jp     0x41c03b
  41bfca:	mov    ds:0x5528765d,al
  41bfcf:	cmp    al,0xbf
  41bfd1:	js     0x41bf5c
  41bfd3:	adc    eax,0x99886743
  41bfd8:	fsubp  st(1),st
  41bfda:	jg     0x41c046
  41bfdc:	hlt    
  41bfdd:	cmp    DWORD PTR [eax-0x59],ecx
  41bfe0:	add    eax,0x190c7435
  41bfe5:	xor    DWORD PTR [ebp-0x70cb7039],edi
  41bfeb:	sub    al,0x8
  41bfed:	xchg   ecx,eax
  41bfee:	mov    ah,ah
  41bff0:	and    eax,0xd374e58c
  41bff5:	mov    DWORD PTR [edi-0xf],esp
  41bff8:	fiadd  DWORD PTR [ebp-0xd]
  41bffb:	lods   eax,DWORD PTR ds:[esi]
  41bffc:	push   0x2af7de01
  41c001:	lahf   
  41c002:	repnz dec esi
  41c004:	push   ebp
  41c005:	push   0xffffff9a
  41c007:	or     esi,DWORD PTR [ecx+0x75fb3e92]
  41c00d:	push   0x23
  41c00f:	mov    dh,0x32
  41c011:	jo     0x41c04e
  41c013:	test   al,0xc0
  41c015:	sbb    al,0x63
  41c017:	dec    edx
  41c018:	leave  
  41c019:	dec    ecx
  41c01a:	jns    0x41c044
  41c01c:	mov    esi,0xc9f52955
  41c022:	inc    esi
  41c023:	lods   al,BYTE PTR ds:[esi]
  41c024:	(bad)  
  41c025:	cli    
  41c026:	mov    al,0x7
  41c028:	not    BYTE PTR [eax+0x52]
  41c02b:	cmp    eax,0xcdbfd9a8
  41c030:	dec    ecx
  41c031:	lea    ecx,[edi+edx*8+0x58c06c84]
  41c038:	jg     0x41c023
  41c03a:	fisttp DWORD PTR [ebp-0x4309839a]
  41c040:	mov    WORD PTR ds:0x1fcb6d39,?
  41c046:	jge    0x41c003
  41c048:	push   esp
  41c049:	cmc    
  41c04a:	in     eax,0xba
  41c04c:	mov    eax,0x442634ed
  41c051:	dec    esi
  41c052:	adc    al,0x5c
  41c054:	jge    0x41c0c2
  41c056:	xor    edx,DWORD PTR [bp+si]
  41c059:	and    BYTE PTR [edx+edi*4-0xb],bl
  41c05d:	mul    DWORD PTR ds:0xb27801f7
  41c063:	cmp    al,0x57
  41c065:	dec    eax
  41c066:	retf   0x620
  41c069:	aad    0x1f
  41c06b:	push   ecx
  41c06c:	and    BYTE PTR [edx+0x42],ch
  41c06f:	aaa    
  41c070:	jno    0x41c056
  41c072:	imul   edx,DWORD PTR [edx],0xffffffcd
  41c075:	and    al,0x1d
  41c077:	jae    0x41bffe
  41c079:	sbb    BYTE PTR [edi],al
  41c07b:	inc    edx
  41c07c:	push   0xd066ce99
  41c081:	xchg   ebp,eax
  41c082:	test   BYTE PTR [esi+0xdecd09b],ch
  41c088:	repz inc ebx
  41c08a:	mov    al,ds:0x85e98447
  41c08f:	xchg   DWORD PTR [ebp-0x79045ba3],edx
  41c095:	call   0xda5509c
  41c09a:	or     BYTE PTR [edx],0xab
  41c09d:	jns    0x41c0f0
  41c09f:	xor    DWORD PTR [edi],edi
  41c0a1:	mov    al,BYTE PTR [esi+0x7f]
  41c0a4:	mov    bh,0x7
  41c0a6:	jns    0x41c0e1
  41c0a8:	inc    edi
  41c0a9:	dec    ecx
  41c0aa:	cli    
  41c0ab:	push   cs
  41c0ac:	mov    edi,0x330258a4
  41c0b1:	into   
  41c0b2:	out    dx,eax
  41c0b3:	sub    DWORD PTR [esi],ebp
  41c0b5:	retf   0x59f1
  41c0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0b9:	sbb    BYTE PTR [ebx],ch
  41c0bb:	xor    al,0xd8
  41c0bd:	ins    BYTE PTR es:[edi],dx
  41c0be:	sbb    dh,BYTE PTR [eax+0x27e17452]
  41c0c4:	int    0x32
  41c0c6:	mov    eax,0x91e823da
  41c0cb:	xchg   esp,eax
  41c0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0cd:	mov    edx,0x98746c83
  41c0d2:	push   DWORD PTR [edi-0x20]
  41c0d5:	(bad)  
  41c0d6:	or     edi,DWORD PTR [ebx-0x14]
  41c0d9:	cs mov ecx,ecx
  41c0dc:	out    0xde,al
  41c0de:	out    0x22,al
  41c0e0:	jmp    0x947e:0xd05041d3
  41c0e7:	(bad)  
  41c0e8:	lahf   
  41c0e9:	add    eax,DWORD PTR [ecx+0x69]
  41c0ec:	(bad)
  41c0f0:	xor    al,0xfa
  41c0f2:	popa   
  41c0f3:	ret    
  41c0f4:	in     al,dx
  41c0f5:	mov    eax,0x277ab200
  41c0fa:	xchg   esp,eax
  41c0fb:	inc    ebp
  41c0fc:	out    0xc1,al
  41c0fe:	and    dh,bl
  41c100:	dec    edi
  41c101:	sbb    eax,0x4431ec12
  41c106:	repz imul DWORD PTR [ebp+0x418c989b]
  41c10d:	push   ss
  41c10e:	xor    bl,al
  41c110:	shl    BYTE PTR [edi-0x80],0xe3
  41c114:	xor    al,al
  41c116:	or     esp,0x7
  41c119:	retf   0x9299
  41c11c:	xor    eax,0x45538572
  41c121:	call   0xb0e6b418
  41c126:	jo     0x41c131
  41c128:	xor    eax,0xde9f1faf
  41c12d:	stos   DWORD PTR es:[edi],eax
  41c12e:	imul   esi,DWORD PTR [edx+0x2cd201c8],0x777e07e5
  41c138:	xor    al,0xe7
  41c13a:	jo     0x41c0c8
  41c13c:	mov    edi,0x459d9f63
  41c141:	fsubrp st(0),st
  41c143:	add    al,0xbf
  41c145:	ins    BYTE PTR es:[edi],dx
  41c146:	inc    esp
  41c147:	ret    
  41c148:	fiadd  DWORD PTR [edi-0x7f1c920a]
  41c14e:	dec    ebp
  41c14f:	lods   eax,DWORD PTR ds:[esi]
  41c150:	mov    edx,0x840f45b5
  41c155:	outs   dx,DWORD PTR ds:[esi]
  41c156:	pop    esi
  41c157:	sub    bh,BYTE PTR [esi-0x7d]
  41c15a:	test   DWORD PTR [ecx],0x9abc360c
  41c160:	icebp  
  41c161:	shr    BYTE PTR [edi+ebp*1+0x22b30713],0x4a
  41c169:	jae    0x41c1a9
  41c16b:	jle    0x41c1c2
  41c16d:	mov    al,BYTE PTR [edi+0x36b36c66]
  41c173:	call   0x9318:0xde939cf1
  41c17a:	dec    ebx
  41c17b:	mov    ebx,0xb3589b9a
  41c180:	out    0x22,eax
  41c182:	mov    ebx,0xb464f74d
  41c187:	inc    ebx
  41c188:	push   ss
  41c189:	vcmpsd xmm0,xmm3,xmm5,0xe9
  41c18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c18f:	call   0x627:0x8595e261
  41c196:	jb     0x41c16f
  41c198:	adc    al,0x78
  41c19a:	stos   DWORD PTR es:[edi],eax
  41c19b:	ss pop ebx
  41c19d:	pushf  
  41c19e:	xchg   edx,eax
  41c19f:	outs   dx,DWORD PTR ds:[esi]
  41c1a0:	xchg   BYTE PTR [eax-0xd],ch
  41c1a3:	and    eax,0xd873d348
  41c1a8:	imul   ecx,DWORD PTR [ebp+0x49],0x6c
  41c1ac:	xor    eax,0x2d459510
  41c1b1:	sti    
  41c1b2:	mov    dh,0x62
  41c1b4:	ja     0x41c16a
  41c1b6:	xchg   BYTE PTR ds:0x1856dbab,cl
  41c1bc:	les    ecx,FWORD PTR [ebx+0x2e]
  41c1bf:	mov    fs:0xd0c968e7,eax
  41c1c5:	cdq    
  41c1c6:	xor    ch,BYTE PTR [ecx]
  41c1c8:	jne    0x41c181
  41c1ca:	pop    ecx
  41c1cb:	adc    BYTE PTR [eax+eax*1-0x21],0xa8
  41c1d0:	mov    eax,ds:0x6d6ecd64
  41c1d5:	popf   
  41c1d6:	fadd   st(3),st
  41c1d8:	fild   DWORD PTR [edx]
  41c1da:	and    al,0xef
  41c1dc:	fcmovu st,st(4)
  41c1de:	fs jb  0x41c244
  41c1e1:	jmp    0x41c22b
  41c1e3:	xor    edi,ebp
  41c1e5:	or     al,0x57
  41c1e7:	pop    ebp
  41c1e8:	push   esi
  41c1e9:	and    BYTE PTR [eax+0x11],bl
  41c1ec:	pop    es
  41c1ed:	pushf  
  41c1ee:	or     esp,DWORD PTR [edi]
  41c1f0:	sub    dl,BYTE PTR [ecx+0x5c]
  41c1f3:	xor    BYTE PTR [esi],dh
  41c1f5:	mov    al,0x45
  41c1f7:	mov    ah,0xc
  41c1f9:	jmp    0xed4b794a
  41c1fe:	data16 test al,0x38
  41c201:	sbb    cl,BYTE PTR [eax+0x7c9a160c]
  41c207:	sub    ch,BYTE PTR [esi]
  41c209:	jecxz  0x41c277
  41c20b:	cmc    
  41c20c:	sbb    edi,esi
  41c20e:	push   edx
  41c20f:	mov    al,ds:0xdaafd24
  41c214:	test   al,0xc0
  41c216:	push   ebx
  41c217:	mov    fs,WORD PTR [eax]
  41c219:	test   BYTE PTR [esp+edx*2],cl
  41c21c:	jmp    0x41c212
  41c21e:	int    0xfc
  41c220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c221:	imul   eax,DWORD PTR [eax-0x70bdf154],0x6da6d60d
  41c22b:	xchg   esp,eax
  41c22c:	cmc    
  41c22d:	ss cs push cs
  41c230:	adc    eax,0xb75a4599
  41c235:	pop    ebp
  41c236:	aam    0x9a
  41c238:	push   ss
  41c239:	jns    0x41c235
  41c23b:	div    BYTE PTR [edi-0x1b492894]
  41c241:	scas   eax,DWORD PTR es:[edi]
  41c242:	pop    eax
  41c243:	mov    edx,0x1d2436c6
  41c248:	mov    edx,0xfd730287
  41c24d:	jae    0x41c253
  41c24f:	mul    BYTE PTR fs:[edi]
  41c252:	and    al,0x71
  41c254:	pop    ss
  41c255:	outs   dx,BYTE PTR ds:[esi]
  41c256:	sbb    bh,BYTE PTR [eax+ebx*8-0x73]
  41c25a:	div    DWORD PTR [ebp-0x65]
  41c25d:	(bad)  
  41c25e:	fdivr  QWORD PTR [esi]
  41c260:	push   0xefb8fc2a
  41c265:	sub    DWORD PTR [edx],0x873f2c8b
  41c26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c26c:	jmp    0x13f8:0xc95982a4
  41c273:	xor    BYTE PTR [eax+0x47],bl
  41c276:	call   0xdb6b1b0c
  41c27b:	(bad)  [edi]
  41c27d:	pop    edx
  41c27e:	cmp    al,0xba
  41c280:	(bad)  
  41c281:	xor    ebp,DWORD PTR [esi-0x6b18efce]
  41c287:	into   
  41c288:	jno    0x41c277
  41c28a:	add    esp,DWORD PTR [esi-0x2e]
  41c28d:	xor    eax,0x3109ed2a
  41c292:	cmp    eax,0xba37e5b4
  41c297:	rcr    BYTE PTR [edi-0x65f1eebe],cl
  41c29d:	xchg   BYTE PTR ds:0x1d3acbe3,ch
  41c2a3:	adc    eax,ebp
  41c2a5:	mov    eax,ds:0x5cca96f6
  41c2aa:	ret    0xd872
  41c2ad:	pop    ds
  41c2ae:	int3   
  41c2af:	out    0x50,eax
  41c2b1:	pop    esp
  41c2b2:	jecxz  0x41c2c3
  41c2b4:	fst    QWORD PTR [ebx+edx*4]
  41c2b7:	mov    bl,0x9d
  41c2b9:	(bad)  
  41c2ba:	jg     0x41c271
  41c2bc:	sub    eax,0xf261e8dc
  41c2c1:	or     eax,0xf1db37cb
  41c2c6:	fdivr  QWORD PTR [ebx]
  41c2c8:	jecxz  0x41c2c2
  41c2ca:	jg     0x41c266
  41c2cc:	push   esi
  41c2cd:	xchg   edi,eax
  41c2ce:	mov    ch,0x19
  41c2d0:	in     eax,dx
  41c2d1:	(bad)  
  41c2d2:	pusha  
  41c2d3:	mov    ebx,0xb29949
  41c2d8:	lods   al,BYTE PTR ds:[esi]
  41c2d9:	or     DWORD PTR [ecx],eax
  41c2db:	adc    BYTE PTR [esi],ch
  41c2dd:	adc    eax,DWORD PTR ds:0x512313a8
  41c2e3:	push   0xe863be22
  41c2e8:	retf   
  41c2e9:	add    ebp,DWORD PTR [edi+0x72]
  41c2ec:	call   0x3631:0x77c9f9b
  41c2f3:	call   0xd2c0:0x20a045ff
  41c2fa:	retf   0xc60f
  41c2fd:	ror    DWORD PTR [ebp-0x37],cl
  41c300:	pop    ss
  41c301:	call   0x9974cd30
  41c306:	cdq    
  41c307:	sahf   
  41c308:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c309:	dec    ebx
  41c30a:	sbb    ebp,DWORD PTR [edi+0x75]
  41c30d:	mov    ah,0x47
  41c30f:	fnstsw WORD PTR [eax-0x5082b1c9]
  41c315:	in     al,dx
  41c316:	stc    
  41c317:	pop    ecx
  41c318:	iret   
  41c319:	sub    edx,edx
  41c31b:	jecxz  0x41c373
  41c31d:	mov    edx,0xb6d1beff
  41c322:	sub    eax,0x1bbe703
  41c327:	mov    ch,0x4e
  41c329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c32a:	cmc    
  41c32b:	out    dx,al
  41c32c:	clc    
  41c32d:	sub    eax,0x47487c8
  41c332:	mov    esi,0xa45371ca
  41c337:	pop    esi
  41c338:	inc    eax
  41c339:	xchg   edx,eax
  41c33a:	int    0x86
  41c33c:	sub    cl,BYTE PTR [ecx+0x2b]
  41c33f:	xor    bh,BYTE PTR [eax+0x9f01927]
  41c345:	dec    ebp
  41c346:	pop    esp
  41c347:	cld    
  41c348:	(bad)  
  41c349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34a:	jbe    0x41c31c
  41c34c:	push   ebx
  41c34d:	jns    0x41c3a9
  41c34f:	push   ss
  41c350:	and    bl,ch
  41c352:	adc    BYTE PTR [eax-0x66d7fe5d],dh
  41c358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c359:	adc    ch,BYTE PTR [ebx]
  41c35b:	cmp    dl,BYTE PTR [edx+0x3e]
  41c35e:	push   edi
  41c35f:	lods   eax,DWORD PTR ds:[esi]
  41c360:	or     eax,0x90051234
  41c365:	les    edx,FWORD PTR [ecx-0x33]
  41c368:	dec    edi
  41c369:	lods   al,BYTE PTR ds:[esi]
  41c36a:	mov    ebp,0x12e18c9c
  41c36f:	mov    al,0x60
  41c371:	add    DWORD PTR [edx+eax*4+0x3c],esi
  41c375:	rcr    BYTE PTR [eax],1
  41c377:	dec    ecx
  41c378:	adc    eax,0x8bae2d8a
  41c37d:	push   ebp
  41c37e:	add    eax,0x971721b8
  41c383:	push   es
  41c384:	fstp   QWORD PTR ss:[eax]
  41c387:	add    edx,DWORD PTR [esi+0x79]
  41c38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c38b:	mov    al,ds:0x3ada0b59
  41c390:	enter  0x572d,0x81
  41c394:	add    eax,0x5e35dcbb
  41c399:	lds    ecx,FWORD PTR [ecx+0x4f]
  41c39c:	or     BYTE PTR [bp+si],bh
  41c39f:	jb     0x41c3f7
  41c3a1:	pop    es
  41c3a2:	std    
  41c3a3:	push   0xf0581ab6
  41c3a8:	mov    cl,0xd0
  41c3aa:	cmp    BYTE PTR [esi-0x3af6b142],dl
  41c3b0:	sbb    BYTE PTR [eax+0x1b],al
  41c3b3:	loop   0x41c374
  41c3b5:	pop    eax
  41c3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b7:	ror    DWORD PTR [ecx-0x74dcf2c5],0x13
  41c3be:	daa    
  41c3bf:	xchg   DWORD PTR [ecx-0x73801586],ebx
  41c3c5:	push   ebx
  41c3c6:	push   ecx
  41c3c7:	push   eax
  41c3c8:	cdq    
  41c3c9:	and    BYTE PTR [ebx+0x26],bh
  41c3cc:	(bad)
  41c3cf:	mov    esi,0x7c2510da
  41c3d4:	adc    al,0xf3
  41c3d6:	lahf   
  41c3d7:	cwde   
  41c3d8:	aaa    
  41c3d9:	lds    esi,FWORD PTR [ebp-0x3c]
  41c3dc:	pop    edi
  41c3dd:	js     0x41c44f
  41c3df:	xor    DWORD PTR [ebx],0x23
  41c3e2:	int    0xa9
  41c3e4:	std    
  41c3e5:	add    edi,eax
  41c3e7:	sbb    al,0xee
  41c3e9:	mov    BYTE PTR [eax+0xed676f7],0x5
  41c3f0:	push   edx
  41c3f1:	js     0x41c446
  41c3f3:	lock mov eax,ebp
  41c3f6:	dec    edi
  41c3f7:	inc    ebx
  41c3f8:	mov    eax,ds:0xb98a5156
  41c3fd:	adc    eax,0x881534b1
  41c402:	fst    QWORD PTR [edx]
  41c404:	stc    
  41c405:	sbb    bh,dl
  41c407:	dec    ebx
  41c408:	inc    ebx
  41c409:	cld    
  41c40a:	push   ebx
  41c40b:	xchg   edi,eax
  41c40c:	rcr    DWORD PTR [ebx-0x3a],0x15
  41c410:	cwde   
  41c411:	sub    edx,ebp
  41c413:	and    esi,edx
  41c415:	push   eax
  41c416:	int3   
  41c417:	in     eax,0xd3
  41c419:	xchg   esp,eax
  41c41a:	xor    ebx,DWORD PTR [edi-0x672c4523]
  41c420:	push   edx
  41c421:	ss or  WORD PTR gs:[ebx],bx
  41c426:	add    esi,ebp
  41c428:	cdq    
  41c429:	sti    
  41c42a:	arpl   WORD PTR [ebx-0x23b9ff8d],sp
  41c430:	pop    es
  41c431:	aaa    
  41c432:	je     0x41c3f8
  41c434:	cwde   
  41c435:	add    DWORD PTR [ecx+0x75b95a65],esi
  41c43b:	nop
  41c43c:	(bad)  
  41c43f:	rcr    cl,cl
  41c441:	cmp    ebx,DWORD PTR [eax+0x26]
  41c444:	pop    esi
  41c445:	loop   0x41c3d5
  41c447:	and    BYTE PTR [ecx+0x1a100f16],ch
  41c44d:	call   0xe295:0xee6e6e2a
  41c454:	sub    bh,BYTE PTR [edx-0x1b917761]
  41c45a:	ret    0x2501
  41c45d:	mov    esi,0xf052f887
  41c462:	sbb    DWORD PTR [edi+0x1cad9cf9],ebp
  41c468:	jecxz  0x41c489
  41c46a:	es lahf 
  41c46c:	std    
  41c46d:	mov    DWORD PTR [edx+0x55367ae8],esi
  41c473:	nop/reserved BYTE PTR [edi]
  41c476:	push   es
  41c477:	lods   al,BYTE PTR ds:[esi]
  41c478:	out    0x9a,eax
  41c47a:	ja     0x41c40a
  41c47c:	bound  ecx,QWORD PTR [ecx+0x16]
  41c47f:	sub    BYTE PTR [edi+0x4ab25e04],ch
  41c485:	fistp  WORD PTR [esi]
  41c487:	fistp  DWORD PTR [edi+0x7153c1a5]
  41c48d:	es mov dh,0xa6
  41c490:	sbb    ah,BYTE PTR [ecx]
  41c492:	dec    ebp
  41c493:	mov    bh,0xa6
  41c495:	cs mov bh,0x3e
  41c498:	(bad)  
  41c499:	call   0x2e4a58eb
  41c49e:	(bad)  
  41c49f:	xor    dh,dl
  41c4a1:	xor    eax,0xac051193
  41c4a6:	test   al,0x3f
  41c4a8:	shr    DWORD PTR [esi-0x3586b45b],1
  41c4ae:	std    
  41c4af:	or     cl,BYTE PTR [ecx+0x6a]
  41c4b2:	ja     0x41c502
  41c4b4:	std    
  41c4b5:	fdivr  DWORD PTR [esi-0x49ef85f6]
  41c4bb:	xor    ah,cl
  41c4bd:	push   ds
  41c4be:	mov    eax,ds:0x45b93a48
  41c4c3:	daa    
  41c4c4:	pusha  
  41c4c5:	jnp    0x41c544
  41c4c7:	inc    ebp
  41c4c8:	mov    bh,0x92
  41c4ca:	dec    edx
  41c4cb:	in     eax,0xf4
  41c4cd:	lahf   
  41c4ce:	dec    ebp
  41c4cf:	xor    al,BYTE PTR ds:0x5fe9df9f
  41c4d5:	mul    BYTE PTR [ebp+0x31c9f098]
  41c4db:	mov    eax,ds:0xa2d9b6cf
  41c4e0:	ja     0x41c4f6
  41c4e2:	fmul   DWORD PTR [esi+0x77]
  41c4e5:	ins    BYTE PTR es:[edi],dx
  41c4e6:	repnz inc edx
  41c4e8:	inc    esi
  41c4e9:	push   esi
  41c4ea:	enter  0x1c5a,0x8a
  41c4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ef:	shl    BYTE PTR [eax+eiz*4+0x2dc51434],0xda
  41c4f7:	sahf   
  41c4f8:	lock aam 0x8b
  41c4fb:	inc    esi
  41c4fc:	(bad)  
  41c4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fe:	ins    DWORD PTR es:[edi],dx
  41c4ff:	xchg   esi,eax
  41c500:	xchg   edx,eax
  41c501:	dec    edi
  41c502:	stc    
  41c503:	sub    bh,BYTE PTR [ecx+0x41]
  41c506:	cmp    BYTE PTR [eax+0xb],bh
  41c509:	push   0xffffffba
  41c50b:	scas   al,BYTE PTR es:[edi]
  41c50c:	lds    edx,FWORD PTR [ebx-0x63]
  41c50f:	jmp    0x41c4bc
  41c511:	mov    bh,0xb4
  41c513:	loope  0x41c515
  41c515:	mov    edi,0x4b32c789
  41c51a:	mov    BYTE PTR [ecx+0x2c],ch
  41c51d:	sbb    al,0xe2
  41c51f:	stos   DWORD PTR es:[edi],eax
  41c520:	popa   
  41c521:	mov    eax,0x9bd812cf
  41c526:	mov    DWORD PTR ds:0x23501be6,esp
  41c52c:	adc    DWORD PTR [ebx+0x6],esi
  41c52f:	xchg   DWORD PTR [ecx],eax
  41c531:	or     eax,0x2ccae4e5
  41c536:	(bad)  
  41c538:	sub    eax,0x62669f7
  41c53d:	xor    ebp,DWORD PTR [esi+esi*4-0x59065090]
  41c544:	pop    esp
  41c545:	stos   DWORD PTR es:[edi],eax
  41c546:	pop    edx
  41c547:	or     eax,0x7e2bf048
  41c54c:	jne    0x41c5bc
  41c54e:	push   0x48
  41c550:	(bad)  
  41c551:	ins    BYTE PTR es:[edi],dx
  41c552:	stc    
  41c553:	xor    ebp,DWORD PTR [bp+si]
  41c556:	ret    0x49a9
  41c559:	and    dl,BYTE PTR [ebp+0x37]
  41c55c:	cmp    eax,0x1130d4c9
  41c561:	adc    edi,DWORD PTR [edi+0x497707b]
  41c567:	std    
  41c568:	inc    esp
  41c569:	sbb    eax,0x35c93da4
  41c56e:	mov    bl,0x1e
  41c570:	adc    esp,0x38
  41c573:	cmp    WORD PTR [edx],ax
  41c576:	lahf   
  41c577:	enter  0xc29d,0x64
  41c57b:	lods   al,BYTE PTR ds:[esi]
  41c57c:	inc    ecx
  41c57d:	jg     0x41c567
  41c57f:	or     BYTE PTR [edi],ch
  41c581:	sahf   
  41c582:	mov    ebp,esp
  41c584:	or     edx,eax
  41c586:	aam    0xa2
  41c588:	or     DWORD PTR [esi],edi
  41c58a:	pop    ebp
  41c58b:	shr    esp,0xd0
  41c58e:	xchg   edx,eax
  41c58f:	jnp    0x41c5fc
  41c591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c592:	dec    DWORD PTR [edi-0x57161d83]
  41c598:	cmp    dh,BYTE PTR [edi-0x4e]
  41c59b:	push   ecx
  41c59c:	imul   ecx,DWORD PTR [edi-0x2e0eb7df],0x7f
  41c5a3:	or     BYTE PTR [eax],dh
  41c5a5:	xor    ch,bl
  41c5a7:	cld    
  41c5a8:	lock sbb eax,0x8cd7c899
  41c5ae:	cli    
  41c5af:	jmp    DWORD PTR [eax-0x60]
  41c5b2:	stc    
  41c5b3:	mov    dh,0x45
  41c5b5:	pop    ebx
  41c5b6:	loopne 0x41c595
  41c5b8:	lea    ecx,[ebx+ecx*4-0x79]
  41c5bc:	pop    ds
  41c5bd:	pop    ebp
  41c5be:	mov    esp,0x4669fb
  41c5c3:	aam    0x7
  41c5c5:	or     al,0xe1
  41c5c7:	pop    ss
  41c5c8:	mov    DWORD PTR [ecx],ebx
  41c5ca:	push   es
  41c5cb:	mov    bh,BYTE PTR [ecx]
  41c5cd:	inc    ecx
  41c5ce:	cmp    eax,0x1bd683e
  41c5d3:	test   BYTE PTR ds:0xb91bb3e6,dl
  41c5d9:	clc    
  41c5da:	data16 neg BYTE PTR [ebx]
  41c5dd:	dec    esi
  41c5de:	ins    DWORD PTR es:[edi],dx
  41c5df:	neg    ch
  41c5e1:	scas   eax,DWORD PTR es:[edi]
  41c5e2:	or     esp,DWORD PTR [eax]
  41c5e4:	stc    
  41c5e5:	imul   esp,DWORD PTR [ecx+edx*4-0x5579d604],0x51f268ac
  41c5f0:	inc    esp
  41c5f1:	loop   0x41c5b8
  41c5f3:	sbb    DWORD PTR [esp+eax*1+0x6f77befb],0x1c5fe6bd
  41c5fe:	push   ebp
  41c5ff:	jecxz  0x41c5d9
  41c601:	dec    si
  41c603:	ins    DWORD PTR es:[edi],dx
  41c604:	pusha  
  41c605:	je     0x41c64a
  41c607:	(bad)  
  41c608:	pop    ebx
  41c609:	imul   esp,DWORD PTR [edx-0x23],0x6f229864
  41c610:	xor    DWORD PTR [esi+0xe],edi
  41c613:	fild   DWORD PTR [ebx-0x5995a827]
  41c619:	cli    
  41c61a:	mov    cl,0x3
  41c61c:	or     ecx,DWORD PTR [esi+0x40]
  41c61f:	test   al,0x7c
  41c621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c622:	fwait
  41c623:	and    DWORD PTR [ecx+edi*1],eax
  41c626:	add    eax,0x37887eb5
  41c62b:	sar    DWORD PTR [ebx],0x27
  41c62e:	jmp    0xc6357d04
  41c633:	push   esp
  41c634:	and    eax,0x92f7f84e
  41c639:	dec    eax
  41c63a:	stos   DWORD PTR es:[edi],eax
  41c63b:	push   0xbbe20e88
  41c640:	adc    eax,0xe7d54689
  41c645:	jecxz  0x41c5e5
  41c647:	std    
  41c648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c649:	sbb    bl,0x20
  41c64c:	cld    
  41c64d:	pop    esp
  41c64e:	in     al,0x36
  41c650:	adc    DWORD PTR [ebx-0x16],ebp
  41c653:	and    DWORD PTR ss:[edx],0xfffffff9
  41c657:	sub    eax,0x41545161
  41c65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65d:	sar    al,0x68
  41c660:	nop
  41c661:	mov    edx,0xfe6f2baf
  41c666:	dec    ebx
  41c667:	ss out 0x8a,al
  41c66a:	(bad)  
  41c66b:	jmp    0x159:0x6f76549e
  41c672:	(bad)  
  41c673:	mov    ch,0x57
  41c675:	jbe    0x41c6a7
  41c677:	mov    ch,0xb3
  41c679:	shl    bl,0x5d
  41c67c:	push   eax
  41c67d:	sahf   
  41c67e:	xlat   BYTE PTR ds:[ebx]
  41c67f:	jecxz  0x41c697
  41c681:	mov    DWORD PTR [di-0xa53],esi
  41c686:	xchg   ebx,eax
  41c687:	sub    dl,BYTE PTR [ecx]
  41c689:	xchg   ecx,eax
  41c68a:	adc    al,BYTE PTR [ebx+0x75]
  41c68d:	int    0xfd
  41c68f:	fist   WORD PTR [eax+0x31]
  41c692:	dec    esi
  41c693:	jb     0x41c6fc
  41c695:	add    BYTE PTR [eax-0x1b6a0059],ch
  41c69b:	mov    dl,0x2a
  41c69d:	jbe    0x41c702
  41c69f:	scas   al,BYTE PTR es:[edi]
  41c6a0:	enter  0x894,0x85
  41c6a4:	add    BYTE PTR [eax-0x6d1fbe74],0x27
  41c6ab:	popf   
  41c6ac:	sub    al,0x68
  41c6ae:	js     0x41c695
  41c6b0:	push   0x1cf8230e
  41c6b5:	js     0x41c6aa
  41c6b7:	test   BYTE PTR [ebp-0x1f],ch
  41c6ba:	scas   eax,DWORD PTR es:[edi]
  41c6bb:	push   edx
  41c6bc:	in     eax,0x5c
  41c6be:	mov    bl,0xf1
  41c6c0:	add    DWORD PTR [edx+edi*4-0x6240bf10],ebp
  41c6c7:	add    DWORD PTR [ebp-0x18f2dcd1],ebx
  41c6cd:	ja     0x41c6b2
  41c6cf:	push   ds
  41c6d0:	jp     0x41c706
  41c6d2:	cmc    
  41c6d3:	fadd   st,st(0)
  41c6d5:	outs   dx,BYTE PTR ds:[esi]
  41c6d6:	adc    dl,0x4
  41c6d9:	pushf  
  41c6da:	jg     0x41c68c
  41c6dc:	pop    esi
  41c6dd:	dec    ebx
  41c6de:	sbb    esp,DWORD PTR [ecx-0x1a]
  41c6e1:	jle    0x41c6c3
  41c6e3:	xchg   esi,eax
  41c6e4:	in     eax,0xac
  41c6e6:	fidivr DWORD PTR [esi]
  41c6e8:	stos   BYTE PTR es:[edi],al
  41c6e9:	jo     0x41c757
  41c6eb:	push   0xffffffcb
  41c6ed:	sbb    cl,BYTE PTR [edx-0xf]
  41c6f0:	out    dx,eax
  41c6f1:	inc    eax
  41c6f2:	lds    ebx,FWORD PTR [ebx-0x6a84bba]
  41c6f8:	loop   0x41c6d4
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	pop    esp
  41c6fc:	add    dh,al
  41c6fe:	sbb    DWORD PTR [edx-0x9],0x6c
  41c702:	test   eax,0xda390a29
  41c707:	popa   
  41c708:	push   es
  41c709:	test   eax,0x3b2d94e3
  41c70e:	sbb    eax,0xaaf8e9ce
  41c713:	loope  0x41c6ee
  41c715:	jecxz  0x41c78f
  41c717:	push   cs
  41c718:	cmp    esp,edi
  41c71a:	mov    dh,0x86
  41c71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c71d:	aaa    
  41c71e:	pop    ss
  41c71f:	retf   
  41c720:	scas   al,BYTE PTR es:[edi]
  41c721:	cli    
  41c722:	dec    esp
  41c723:	fs mov edi,0x9d95ebdf
  41c729:	pop    edi
  41c72a:	scas   eax,DWORD PTR es:[edi]
  41c72b:	sub    esi,DWORD PTR [eax]
  41c72d:	inc    ebp
  41c72e:	adc    esi,DWORD PTR [ebp+0x3049e505]
  41c734:	dec    esi
  41c735:	fcomip st,st(5)
  41c737:	xchg   ebx,eax
  41c738:	fistp  WORD PTR [eax-0x6d]
  41c73b:	fmulp  st(6),st
  41c73d:	push   esp
  41c73e:	aad    0xff
  41c740:	into   
  41c741:	or     DWORD PTR [edi],edx
  41c743:	dec    ebx
  41c744:	test   eax,0xca97d388
  41c749:	xchg   ebx,eax
  41c74a:	add    esp,ebx
  41c74c:	jmp    0xcca6:0x3f114bf9
  41c753:	out    0x53,al
  41c755:	jne    0x41c73a
  41c757:	dec    esi
  41c758:	xor    dl,BYTE PTR [ebx+edi*8-0x33]
  41c75c:	aas    
  41c75d:	(bad)  
  41c75e:	dec    esi
  41c75f:	ss mov eax,0xbb9626be
  41c765:	adc    cl,dl
  41c767:	xchg   ecx,eax
  41c768:	xchg   esp,eax
  41c769:	lds    ecx,FWORD PTR [ebx+0x66]
  41c76c:	(bad)  
  41c76d:	lds    edi,FWORD PTR [edi]
  41c76f:	ret    
  41c770:	pop    eax
  41c771:	jo     0x41c713
  41c773:	sbb    bl,BYTE PTR [edi-0x6685e7c4]
  41c779:	sbb    al,0xba
  41c77b:	cmp    BYTE PTR [edx],0x55
  41c77e:	cmp    ebx,DWORD PTR [esi+0x55]
  41c781:	or     edx,DWORD PTR [edi-0x68]
  41c784:	mov    fs,WORD PTR [edi+0x4e784bfc]
  41c78a:	loop   0x41c70e
  41c78c:	push   0x51
  41c78e:	ror    BYTE PTR [edx+edx*4+0x47],0x34
  41c793:	add    edx,DWORD PTR [edi+0x3b254702]
  41c799:	ss sub esp,esi
  41c79c:	ret    
  41c79d:	lods   eax,DWORD PTR ds:[esi]
  41c79e:	dec    esp
  41c79f:	xchg   ecx,eax
  41c7a0:	dec    ebx
  41c7a1:	mov    ebp,0xd1ffbca4
  41c7a6:	je     0x41c7e6
  41c7a8:	xchg   ebp,eax
  41c7a9:	add    DWORD PTR [ebp+0x761f22fa],edi
  41c7af:	and    bl,0xa6
  41c7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7b3:	mov    BYTE PTR [ebx],dl
  41c7b5:	int3   
  41c7b6:	mov    ebp,0x363fbf0e
  41c7bb:	outs   dx,BYTE PTR ds:[esi]
  41c7bc:	mov    ds:0xb182d70f,eax
  41c7c1:	inc    ecx
  41c7c2:	arpl   WORD PTR [edi-0x30],bx
  41c7c5:	hlt    
  41c7c6:	(bad)  
  41c7c7:	repz and eax,0xa935ca10
  41c7cd:	mov    ah,0x7
  41c7cf:	hlt    
  41c7d0:	jp     0x41c7bf
  41c7d2:	sbb    DWORD PTR [ebx],0x4ba653f7
  41c7d8:	jmp    0x7a020a6c
  41c7dd:	pop    edx
  41c7de:	mov    bh,0x69
  41c7e0:	pop    edi
  41c7e1:	cmp    BYTE PTR [edi],ch
  41c7e3:	and    ebx,DWORD PTR [eax-0x2]
  41c7e6:	push   edx
  41c7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7e8:	pop    es
  41c7e9:	lea    ebx,[edx-0x16]
  41c7ec:	sub    BYTE PTR [eax-0x38],bl
  41c7ef:	fcmovnb st,st(3)
  41c7f1:	(bad)  
  41c7f2:	and    ebx,DWORD PTR [esi+0x58]
  41c7f5:	xchg   edx,eax
  41c7f6:	enter  0xb0b0,0x4b
  41c7fa:	jle    0x41c838
  41c7fc:	loopne 0x41c794
  41c7fe:	fbld   TBYTE PTR [ebp-0x54]
  41c801:	jno    0x41c815
  41c803:	dec    ecx
  41c804:	aas    
  41c805:	cwde   
  41c806:	mov    eax,ds:0x37592543
  41c80b:	xor    BYTE PTR [esi],ah
  41c80d:	push   0x3d
  41c80f:	inc    esi
  41c811:	stos   DWORD PTR es:[edi],eax
  41c812:	pop    ds
  41c813:	mov    esi,0x39798771
  41c818:	ja     0x41c867
  41c81a:	sar    DWORD PTR [ecx+0x3f],cl
  41c81d:	mov    esp,0x24f072ff
  41c822:	sub    eax,0xd124ed37
  41c827:	mov    cl,BYTE PTR [edx+esi*2]
  41c82a:	cli    
  41c82b:	inc    edx
  41c82c:	popa   
  41c82d:	inc    esp
  41c82e:	xchg   edi,eax
  41c82f:	push   ebx
  41c830:	and    eax,0x53801c00
  41c835:	and    BYTE PTR [ecx-0x6f],0x99
  41c839:	neg    ecx
  41c83b:	dec    BYTE PTR [ecx-0x3]
  41c83e:	aam    0x5b
  41c840:	jno    0x41c849
  41c842:	adc    ebp,DWORD PTR [ecx]
  41c844:	scas   al,BYTE PTR es:[edi]
  41c845:	enter  0xffa5,0x75
  41c849:	repz push edi
  41c84b:	out    0xb0,al
  41c84d:	mov    edx,0x915b8111
  41c852:	xchg   DWORD PTR [eax-0x60e81524],edi
  41c858:	cmp    al,0x33
  41c85a:	ins    BYTE PTR es:[edi],dx
  41c85b:	mov    esp,0x920d5d1b
  41c860:	mov    al,0xc1
  41c862:	cs dec esi
  41c864:	mov    dl,0xa3
  41c866:	push   ss
  41c867:	jp     0x41c854
  41c869:	ins    DWORD PTR es:[edi],dx
  41c86a:	push   ds
  41c86b:	mov    edi,0xedff4cb7
  41c870:	sahf   
  41c871:	loope  0x41c8c1
  41c873:	or     ah,al
  41c875:	add    al,0x74
  41c877:	sub    al,0x0
  41c879:	int3   
  41c87a:	sub    eax,0xd1baeabd
  41c87f:	xlat   BYTE PTR ds:[ebx]
  41c880:	dec    esp
  41c881:	arpl   WORD PTR [edi-0x4475ca89],bx
  41c887:	xchg   esp,eax
  41c888:	xchg   ebx,eax
  41c889:	fmul   QWORD PTR ds:[edi-0x3cf3ee3b]
  41c890:	adc    cl,BYTE PTR [ebx+0x5f]
  41c893:	retf   
  41c894:	mov    ds:0x6e4030c4,eax
  41c899:	aas    
  41c89a:	jnp    0x41c8a2
  41c89c:	cmp    esi,0xffffffa2
  41c89f:	jno    0x41c91a
  41c8a1:	inc    esp
  41c8a2:	pushw  ds
  41c8a4:	push   esi
  41c8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a6:	or     BYTE PTR [esp+eax*8+0x3279bb43],0x39
  41c8ae:	add    eax,0xa03dc11
  41c8b3:	xchg   DWORD PTR [esi+0x78feb12e],edi
  41c8b9:	push   ds
  41c8ba:	es int3 
  41c8bc:	popf   
  41c8bd:	inc    ecx
  41c8be:	repnz inc eax
  41c8c0:	ret    
  41c8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c2:	cwde   
  41c8c3:	xchg   ebp,eax
  41c8c4:	jge    0x41c90e
  41c8c6:	js     0x41c886
  41c8c8:	ds popf 
  41c8ca:	mov    ebx,0xff2a097
  41c8cf:	xchg   ebp,eax
  41c8d0:	sbb    al,0xa8
  41c8d2:	addr16 jne 0x41c8e2
  41c8d5:	popf   
  41c8d6:	aas    
  41c8d7:	cli    
  41c8d8:	inc    ebp
  41c8d9:	addr16 (bad) 
  41c8db:	imul   ebp,edx,0x67
  41c8de:	xor    esi,DWORD PTR ds:0x9f7228bb
  41c8e4:	jnp    0x41c908
  41c8e6:	and    ebp,DWORD PTR [eax+eiz*2]
  41c8e9:	(bad)  
  41c8ea:	xchg   BYTE PTR [ecx+ecx*4],dh
  41c8ed:	leave  
  41c8ee:	test   BYTE PTR ds:0x7c09a363,bl
  41c8f4:	shl    bl,1
  41c8f6:	jle    0x41c8bb
  41c8f8:	xor    BYTE PTR [edx],0xac
  41c8fb:	sub    DWORD PTR [edx-0x57d5ef72],0xffffffd7
  41c902:	jnp    0x41c894
  41c904:	(bad)  
  41c905:	push   esi
  41c906:	sbb    BYTE PTR [esi+0x7ccf0c8],dl
  41c90c:	jmp    0x41c947
  41c90e:	leave  
  41c90f:	ret    0x3912
  41c912:	out    dx,eax
  41c913:	fwait
  41c914:	xchg   ecx,esi
  41c916:	mov    esi,0x36e9687
  41c91b:	add    al,0x1f
  41c91d:	test   BYTE PTR [bx+di],cl
  41c920:	shl    ecx,cl
  41c922:	dec    esp
  41c923:	inc    esi
  41c924:	adc    dh,BYTE PTR [edx-0x62937b99]
  41c92a:	call   0xe65d9893
  41c92f:	data16 (bad) 
  41c931:	fld    QWORD PTR fs:[edx-0x3ef1d9f5]
  41c938:	and    eax,0xe853a5d9
  41c93d:	inc    eax
  41c93e:	sub    eax,0xa7f5e9a9
  41c943:	out    0xe2,al
  41c945:	repz test BYTE PTR [ebp-0x21],bh
  41c949:	fs pop ss
  41c94b:	push   cs
  41c94c:	mov    al,0x11
  41c94e:	popa   
  41c94f:	dec    esp
  41c950:	push   ebx
  41c951:	lods   eax,DWORD PTR ds:[esi]
  41c952:	lods   eax,DWORD PTR ds:[esi]
  41c953:	or     ebp,0xfffffff3
  41c956:	jecxz  0x41c9af
  41c958:	sub    eax,0xbe6717dd
  41c95d:	push   ss
  41c95e:	retf   
  41c95f:	cmc    
  41c960:	test   DWORD PTR [edx+0x48eb7718],esi
  41c966:	dec    ebx
  41c967:	lods   al,BYTE PTR ds:[esi]
  41c968:	and    eax,0xe4308df4
  41c96d:	aaa    
  41c96e:	bswap  edi
  41c970:	or     eax,0x4a87fbf4
  41c975:	pop    eax
  41c976:	sbb    BYTE PTR [esi+0x5f8e0e90],al
  41c97c:	sbb    esp,DWORD PTR [edi-0x72455b65]
  41c982:	add    BYTE PTR [esi+0x5bdf91ae],al
  41c988:	pop    es
  41c989:	fwait
  41c98a:	or     ah,BYTE PTR [ecx+0x2]
  41c98d:	inc    ebx
  41c98e:	mov    ecx,0xf4bb811d
  41c993:	push   DWORD PTR [ecx+0x1d]
  41c996:	ds inc esp
  41c998:	push   ebx
  41c999:	popa   
  41c99a:	mov    esi,edi
  41c99c:	iret   
  41c99d:	fldcw  WORD PTR [edx]
  41c99f:	out    0xd4,eax
  41c9a1:	add    ebx,DWORD PTR [esp+edi*8-0x233289ea]
  41c9a8:	xor    eax,0x918bb4a4
  41c9ad:	adc    esp,DWORD PTR [ecx-0x70eb642e]
  41c9b3:	inc    eax
  41c9b4:	jne    0x41ca1e
  41c9b6:	xchg   BYTE PTR [eax],ch
  41c9b8:	and    bl,BYTE PTR [esi-0x3b5bb9dd]
  41c9be:	lods   al,BYTE PTR ds:[esi]
  41c9bf:	mov    ah,0xa3
  41c9c1:	xchg   BYTE PTR [eax+edi*8+0x76],ah
  41c9c5:	aad    0xe4
  41c9c7:	mov    ch,0x5e
  41c9c9:	lea    ebp,[eax]
  41c9cb:	adc    ebx,DWORD PTR ds:0x63c0c701
  41c9d1:	jbe    0x41c9c8
  41c9d3:	and    eax,DWORD PTR [eax-0x3e]
  41c9d6:	rcl    ecx,1
  41c9d8:	mov    cl,0xbf
  41c9da:	cmp    eax,0x69f9b503
  41c9df:	dec    esp
  41c9e0:	pop    ebp
  41c9e1:	mov    bl,BYTE PTR [esi-0x11a4cdff]
  41c9e7:	and    DWORD PTR [ebx],edx
  41c9e9:	dec    edx
  41c9ea:	std    
  41c9eb:	sub    eax,DWORD PTR [esi+0x1a]
  41c9ee:	mov    esi,0xe252d71b
  41c9f3:	mov    WORD PTR [edx+0x3697aff0],ss
  41c9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9fa:	pop    ebp
  41c9fb:	(bad)  
  41c9fc:	outs   dx,BYTE PTR ds:[esi]
  41c9fd:	fcmovne st,st(4)
  41c9ff:	mov    edx,es
  41ca01:	mov    esi,DWORD PTR [ebp+0x2a5a4d46]
  41ca07:	out    dx,eax
  41ca08:	push   edx
  41ca09:	cmp    BYTE PTR [esi+0x720c094f],al
  41ca0f:	ins    DWORD PTR es:[edi],dx
  41ca10:	jmp    0x2835:0x4b70d17
  41ca17:	repnz daa 
  41ca19:	add    bh,BYTE PTR [ebx]
  41ca1b:	pop    esp
  41ca1c:	(bad)  
  41ca1d:	lahf   
  41ca1e:	inc    edi
  41ca1f:	cld    
  41ca20:	iret   
  41ca21:	imul   bl
  41ca23:	sbb    esp,ebp
  41ca25:	inc    edi
  41ca26:	jl     0x41ca65
  41ca28:	cmc    
  41ca29:	jno    0x41c9ca
  41ca2b:	lea    edi,[ebx+0x60]
  41ca2e:	ror    BYTE PTR [ecx+ebx*4],0x84
  41ca32:	(bad)  
  41ca33:	cmc    
  41ca34:	ret    
  41ca35:	and    al,BYTE PTR [ecx-0x4f]
  41ca38:	dec    eax
  41ca39:	std    
  41ca3a:	loop   0x41caab
  41ca3c:	mov    eax,DWORD PTR [eax-0x6d633d27]
  41ca42:	mov    eax,ds:0xda49d80d
  41ca47:	nop
  41ca48:	fisub  DWORD PTR [edi+ebp*2+0x42]
  41ca4c:	js     0x41cac3
  41ca4e:	add    edi,esi
  41ca50:	cdq    
  41ca51:	div    BYTE PTR [ecx+ebx*8-0x64]
  41ca55:	test   bl,ch
  41ca57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca58:	aad    0x25
  41ca5a:	stos   DWORD PTR es:[edi],eax
  41ca5b:	mov    bl,BYTE PTR [edx]
  41ca5d:	sbb    cl,cl
  41ca5f:	inc    ebp
  41ca60:	add    BYTE PTR [edi],bl
  41ca62:	xor    eax,0xc13c19f4
  41ca67:	jne    0x41c9ea
  41ca69:	ss test eax,0xdd972901
  41ca6f:	pop    es
  41ca70:	add    DWORD PTR [ebx],0x76fe2b19
  41ca76:	retf   0x9797
  41ca79:	(bad)  
  41ca7a:	xchg   ebp,eax
  41ca7b:	and    DWORD PTR [esi-0x23],ecx
  41ca7e:	loope  0x41cac6
  41ca80:	jne    0x41ca27
  41ca82:	mov    eax,ds:0xbf15607a
  41ca87:	mov    BYTE PTR [ecx-0x6ab48ddb],0xa3
  41ca8e:	cmp    DWORD PTR [ebx+ebp*2],esp
  41ca91:	ret    
  41ca92:	pop    eax
  41ca93:	dec    ebp
  41ca94:	pop    ebx
  41ca95:	in     eax,dx
  41ca96:	jge    0x41cab4
  41ca98:	add    ebp,esi
  41ca9a:	jp     0x41cad3
  41ca9c:	and    cl,dh
  41ca9e:	xchg   DWORD PTR [ecx-0x20727f94],ecx
  41caa4:	xchg   ebx,eax
  41caa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa6:	pushf  
  41caa7:	and    ecx,0x3c99a403
  41caad:	and    cl,0x89
  41cab0:	in     eax,dx
  41cab1:	sbb    bh,BYTE PTR [ebx+0x3a39fa8f]
  41cab7:	(bad)  
  41cab8:	fidiv  DWORD PTR [ebp-0x5e]
  41cabb:	iret   
  41cabc:	arpl   WORD PTR [edi+0x1355ac6f],bx
  41cac2:	arpl   WORD PTR [ebx],bx
  41cac4:	jl     0x41ca66
  41cac6:	lds    ebx,FWORD PTR [edi]
  41cac8:	pop    ss
  41cac9:	fs (bad) 
  41cacb:	(bad)  
  41cacc:	and    DWORD PTR [edi-0x71],ebx
  41cacf:	dec    esp
  41cad0:	pop    esi
  41cad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad2:	pop    ss
  41cad3:	xor    ecx,esi
  41cad5:	mov    ch,0xfc
  41cad7:	imul   edi,esi,0x1648f232
  41cadd:	mov    edx,fs
  41cadf:	ins    DWORD PTR es:[edi],dx
  41cae0:	inc    esi
  41cae1:	aam    0x91
  41cae3:	outs   dx,BYTE PTR ds:[esi]
  41cae4:	inc    ebx
  41cae5:	add    edx,DWORD PTR [ebp-0x135ca13]
  41caeb:	jge    0x41cb1a
  41caed:	in     eax,dx
  41caee:	daa    
  41caef:	adc    al,0xc
  41caf1:	shr    DWORD PTR [edx+0x5b],1
  41caf4:	inc    edx
  41caf5:	rcl    BYTE PTR [edx-0x3b],cl
  41caf8:	imul   DWORD PTR [edx+0x69628b1c]
  41cafe:	or     al,0xdf
  41cb00:	in     al,dx
  41cb01:	call   0x62e4:0xaac4ebe7
  41cb08:	dec    esi
  41cb09:	gs pop esi
  41cb0b:	neg    dh
  41cb0d:	adc    bh,BYTE PTR [ebp-0x59]
  41cb10:	mov    ecx,0x769e9a09
  41cb15:	ret    
  41cb16:	outs   dx,BYTE PTR ds:[esi]
  41cb17:	mov    ah,0xbd
  41cb19:	lods   eax,DWORD PTR ds:[esi]
  41cb1a:	nop
  41cb1b:	jae    0x41cb7c
  41cb1d:	sub    edx,DWORD PTR [eax]
  41cb1f:	out    0xbb,al
  41cb21:	jnp    0x41caa9
  41cb23:	das    
  41cb24:	aad    0xab
  41cb26:	in     al,0x76
  41cb28:	cmp    eax,0x19f75c50
  41cb2d:	scas   al,BYTE PTR es:[edi]
  41cb2e:	mov    dh,0xc0
  41cb30:	mov    ebp,0xae0d5931
  41cb35:	lock scas al,BYTE PTR es:[edi]
  41cb37:	add    dl,BYTE PTR [ecx]
  41cb39:	adc    DWORD PTR [edi],0x2
  41cb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb3d:	mov    ss,WORD PTR [edi+0x29]
  41cb40:	ds jmp 0x99fc:0x31c6588e
  41cb48:	or     DWORD PTR [edi],ebp
  41cb4a:	sbb    BYTE PTR [edx-0x45],ch
  41cb4d:	mov    cl,0x41
  41cb4f:	lock fist WORD PTR [esi+0x67a781b4]
  41cb56:	xchg   ecx,eax
  41cb57:	vmulss xmm3,xmm0,DWORD PTR [edx]
  41cb5b:	adc    ebx,DWORD PTR [esi*8+0x7f5fec78]
  41cb62:	pop    edx
  41cb63:	inc    esp
  41cb64:	mov    dh,0xd9
  41cb66:	lock and BYTE PTR [ebx+eiz*8+0x6eacf58d],ch
  41cb6e:	mov    BYTE PTR [edi+0x7e],bh
  41cb71:	fwait
  41cb72:	inc    edi
  41cb73:	push   esi
  41cb74:	retf   
  41cb75:	push   eax
  41cb76:	sub    bh,al
  41cb78:	mov    ebp,0xb681dc3c
  41cb7d:	jns    0x41cba2
  41cb7f:	pop    edi
  41cb80:	gs push edx
  41cb82:	pushf  
  41cb83:	daa    
  41cb84:	push   ebp
  41cb85:	sbb    ecx,DWORD PTR [esi-0x12af79ed]
  41cb8b:	gs push ss
  41cb8d:	mov    eax,0xb9ec6296
  41cb92:	(bad)  
  41cb93:	pushf  
  41cb94:	fild   DWORD PTR [esi+0x61]
  41cb97:	out    dx,eax
  41cb98:	cli    
  41cb99:	cmp    DWORD PTR [edi],0xffffffd4
  41cb9c:	push   cs
  41cb9d:	popf   
  41cb9e:	fisttp QWORD PTR [ebx]
  41cba0:	push   edx
  41cba1:	mov    al,0x4d
  41cba3:	sub    BYTE PTR [ecx+0x3e],ch
  41cba6:	cmp    edx,DWORD PTR [ecx-0x65]
  41cba9:	call   0xef07:0x4658597d
  41cbb0:	test   DWORD PTR [edi],ebp
  41cbb2:	sub    eax,0x20e22355
  41cbb7:	arpl   WORD PTR [eax],bx
  41cbb9:	jle    0x41cc2c
  41cbbb:	sub    esp,DWORD PTR [ecx+0xddca483]
  41cbc1:	and    esi,DWORD PTR [ebp-0x74a95d32]
  41cbc7:	jmp    0xd49e:0xc5448f43
  41cbce:	int    0xc4
  41cbd0:	(bad)  
  41cbd1:	scas   al,BYTE PTR es:[edi]
  41cbd2:	in     eax,0x9f
  41cbd4:	aaa    
  41cbd5:	lods   eax,DWORD PTR ds:[esi]
  41cbd6:	or     BYTE PTR [eax-0x4a],cl
  41cbd9:	mov    ebp,0x9edb54ee
  41cbde:	xchg   esi,eax
  41cbdf:	nop
  41cbe0:	xor    BYTE PTR [ebx],dl
  41cbe2:	mov    ebp,0x492c9259
  41cbe7:	scas   eax,DWORD PTR es:[edi]
  41cbe8:	adc    esi,esi
  41cbea:	push   ebp
  41cbeb:	fld    QWORD PTR [esp+esi*8+0x59e2b3d7]
  41cbf2:	pusha  
  41cbf3:	add    cl,bl
  41cbf5:	stos   DWORD PTR es:[edi],eax
  41cbf6:	stos   BYTE PTR es:[edi],al
  41cbf7:	push   es
  41cbf8:	fidiv  DWORD PTR [ecx+ecx*1+0x484835d0]
  41cbff:	inc    ebx
  41cc00:	nop
  41cc01:	daa    
  41cc02:	ds call 0x285e:0x517368b3
  41cc0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0b:	mov    dh,0xdd
  41cc0d:	jno    0x41cba2
  41cc0f:	mov    ds:0xcf2e7687,al
  41cc14:	mov    BYTE PTR [ebp+0x2d5709a3],ah
  41cc1a:	adc    esi,DWORD PTR [edx+0x3167909d]
  41cc20:	fdivr  QWORD PTR [ebx-0x78]
  41cc23:	(bad)  
  41cc24:	aam    0x84
  41cc26:	loopne 0x41cc34
  41cc28:	lock data16 sbb ah,BYTE PTR [edx-0x3e]
  41cc2d:	ja     0x41cca3
  41cc2f:	pop    ebx
  41cc30:	in     al,0x53
  41cc32:	outs   dx,DWORD PTR ds:[esi]
  41cc33:	mov    edx,?
  41cc35:	dec    esi
  41cc36:	and    ah,ch
  41cc38:	rol    DWORD PTR [ebx-0x7e10c2ab],0x9d
  41cc3f:	pusha  
  41cc40:	pop    ecx
  41cc41:	sbb    ebx,edx
  41cc43:	ds test al,0x92
  41cc46:	js     0x41cc6e
  41cc48:	int3   
  41cc49:	paddd  mm6,QWORD PTR [esi]
  41cc4c:	mov    ds:0xe9e34322,eax
  41cc51:	inc    esi
  41cc52:	rcl    BYTE PTR [ecx],0x17
  41cc55:	addr16 pop ss
  41cc57:	and    edi,ecx
  41cc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc5a:	adc    esi,ebx
  41cc5c:	aad    0xff
  41cc5e:	mov    al,ds:0x6559d0d6
  41cc63:	cs pop es
  41cc65:	ja     0x41cc03
  41cc67:	cli    
  41cc68:	xchg   edx,eax
  41cc69:	pop    es
  41cc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc6b:	and    esi,eax
  41cc6d:	dec    eax
  41cc6e:	int3   
  41cc6f:	xchg   DWORD PTR [esi-0x22],ebx
  41cc72:	(bad)  [esp+edx*2-0x1f6753d9]
  41cc79:	or     eax,0xa730aa3a
  41cc7e:	add    al,0x6a
  41cc80:	push   es
  41cc81:	pop    edx
  41cc82:	dec    ebx
  41cc83:	imul   edi,DWORD PTR [esi-0x57],0x1cdf0d90
  41cc8a:	int3   
  41cc8b:	and    DWORD PTR [edi],ebx
  41cc8d:	popf   
  41cc8e:	loop   0x41cc3d
  41cc90:	outs   dx,DWORD PTR ds:[esi]
  41cc91:	mov    ch,0x81
  41cc93:	aas    
  41cc94:	dec    eax
  41cc95:	mov    bl,0xbe
  41cc97:	xor    cl,cl
  41cc99:	(bad)  
  41cc9b:	and    ecx,DWORD PTR [ebx+0x6b4a8839]
  41cca1:	daa    
  41cca2:	or     DWORD PTR [esi+0x39],ecx
  41cca5:	sahf   
  41cca6:	xchg   ecx,eax
  41cca7:	cdq    
  41cca8:	and    esp,DWORD PTR ds:0x7f5ad8d2
  41ccae:	daa    
  41ccaf:	jmp    0x41cc88
  41ccb1:	jle    0x41ccdf
  41ccb3:	clc    
  41ccb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb5:	mov    ch,0xc0
  41ccb7:	int3   
  41ccb8:	pop    ecx
  41ccb9:	xchg   edx,eax
  41ccba:	jns    0x41cc80
  41ccbc:	pop    eax
  41ccbd:	js     0x41cc5d
  41ccbf:	mov    ds:0x4af41bf4,eax
  41ccc4:	in     eax,0xd
  41ccc6:	add    eax,0x30268450
  41cccb:	dec    edx
  41cccc:	jne    0x41cc71
  41ccce:	call   FWORD PTR [ecx]
  41ccd0:	shr    BYTE PTR [edi+0x69be688a],cl
  41ccd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd7:	mov    al,0x3b
  41ccd9:	and    DWORD PTR [ebp-0x27c2e83b],0xffffffc2
  41cce0:	mov    ch,0x99
  41cce2:	sti    
  41cce3:	test   DWORD PTR [eax+0x32f777ce],edx
  41cce9:	fs dec ecx
  41cceb:	inc    eax
  41ccec:	pop    esp
  41cced:	dec    edx
  41ccee:	and    DWORD PTR [ebp+0x69],edi
  41ccf1:	inc    esi
  41ccf2:	(bad)  
  41ccf3:	ins    BYTE PTR es:[edi],dx
  41ccf4:	ss push esp
  41ccf6:	sub    BYTE PTR [eax-0x4b],ch
  41ccf9:	push   ebp
  41ccfa:	sub    al,0xb8
  41ccfd:	xor    eax,0x1579c325
  41cd02:	mov    ebx,0xe06a27ce
  41cd07:	shr    BYTE PTR [esp+eax*2],1
  41cd0a:	adc    al,BYTE PTR [edx]
  41cd0c:	xchg   ebx,eax
  41cd0d:	inc    edi
  41cd0e:	mov    dh,0xea
  41cd10:	test   al,ah
  41cd12:	es out dx,eax
  41cd14:	mov    ah,0xc
  41cd16:	invd   
  41cd18:	mov    ah,0x90
  41cd1a:	stc    
  41cd1b:	mov    dl,0x5d
  41cd1d:	pop    ss
  41cd1e:	xor    DWORD PTR [eax*2+0x6c39ae97],esi
  41cd25:	or     BYTE PTR [edi+0x77],bh
  41cd28:	lods   eax,DWORD PTR ds:[esi]
  41cd29:	mov    ds:0x774f88b6,al
  41cd2e:	and    eax,0x535ed43a
  41cd33:	inc    ebx
  41cd34:	mov    ebx,0xa0f62c4e
  41cd39:	outs   dx,DWORD PTR ds:[esi]
  41cd3a:	outs   dx,BYTE PTR ds:[esi]
  41cd3b:	inc    esi
  41cd3c:	mov    esp,0x609960e5
  41cd41:	cs je  0x41cd56
  41cd44:	das    
  41cd45:	mov    edi,0x2bbf9177
  41cd4a:	xor    eax,0xba8f6cfd
  41cd4f:	push   ecx
  41cd50:	inc    esi
  41cd51:	dec    esi
  41cd52:	mov    ds:0x8c94a04e,al
  41cd57:	aas    
  41cd58:	sub    al,0x7a
  41cd5a:	mov    es,WORD PTR [edx]
  41cd5c:	aam    0x9f
  41cd5e:	lds    edx,FWORD PTR [edx+0x31d39b1f]
  41cd64:	mov    bl,0xe4
  41cd66:	sub    eax,0xad692d21
  41cd6b:	stos   BYTE PTR es:[edi],al
  41cd6c:	fs add eax,0x31e3039f
  41cd72:	mov    bl,0x61
  41cd74:	mov    fs,WORD PTR ds:0x39fbcfd6
  41cd7a:	fld    TBYTE PTR [esi-0x2d]
  41cd7d:	jl     0x41cdf3
  41cd7f:	rcl    BYTE PTR gs:[esi+ecx*2],1
  41cd83:	hlt    
  41cd84:	xor    esp,DWORD PTR [ecx-0x7b]
  41cd87:	sub    DWORD PTR [edx+0x25],ecx
  41cd8a:	pop    eax
  41cd8b:	and    DWORD PTR [ebx+esi*2],0x74
  41cd8f:	ret    0xdc95
  41cd92:	xor    BYTE PTR [edi+ecx*8-0x58719bbb],ah
  41cd99:	retf   
  41cd9a:	leave  
  41cd9b:	mov    ah,0xdb
  41cd9d:	push   ds
  41cd9e:	mov    DWORD PTR ds:0x223f9608,esi
  41cda4:	pop    esi
  41cda5:	jnp    0x41ce15
  41cda7:	call   0x4538:0x8178b122
  41cdae:	outs   dx,BYTE PTR ds:[esi]
  41cdaf:	popa   
  41cdb0:	call   0x4cc3:0xa5321b7f
  41cdb7:	jo     0x41cdfa
  41cdb9:	sub    BYTE PTR [ebp-0x62],bl
  41cdbc:	call   0x7826:0xdfe351d7
  41cdc3:	sub    eax,0xc79a9407
  41cdc8:	ins    DWORD PTR es:[edi],dx
  41cdc9:	jmp    0x2e98fe9e
  41cdce:	pop    ss
  41cdcf:	call   0xabe1:0x4a54276e
  41cdd6:	xor    DWORD PTR [ebx+0x66],esp
  41cdd9:	test   DWORD PTR [ecx+edi*4],ebp
  41cddc:	xchg   DWORD PTR [esi],edi
  41cdde:	jl     0x41cde3
  41cde0:	mov    edi,0x32e624ac
  41cde5:	push   eax
  41cde6:	lods   al,BYTE PTR ds:[esi]
  41cde7:	aam    0x60
  41cde9:	jne    0x41cddd
  41cdeb:	popa   
  41cdec:	fistp  WORD PTR [ebp+0x61]
  41cdef:	xchg   edx,eax
  41cdf0:	imul   ecx,DWORD PTR [esi+esi*2-0x564a2fcd],0xfffffffc
  41cdf8:	fisttp WORD PTR [edi+edi*4+0x7a4cac5a]
  41cdff:	adc    eax,0x2344074a
  41ce04:	or     eax,0xc484a317
  41ce09:	pop    edi
  41ce0a:	add    BYTE PTR [eax+0x28061ea6],0x7d
  41ce11:	xor    DWORD PTR [esi+0x3a],esp
  41ce14:	nop
  41ce15:	ficom  DWORD PTR [ebx+0x59]
  41ce18:	cmp    DWORD PTR ds:0xce6b304b,edx
  41ce1e:	mov    esp,0x55fa57a7
  41ce23:	push   edx
  41ce24:	addr16 retf 0xab64
  41ce28:	add    ecx,DWORD PTR [ecx]
  41ce2a:	int    0x98
  41ce2c:	push   ss
  41ce2d:	rcr    DWORD PTR [edi-0x80],0xb7
  41ce31:	fs xor eax,0xf31bc121
  41ce37:	dec    ebp
  41ce38:	inc    esp
  41ce39:	inc    ecx
  41ce3a:	cmp    al,0xc
  41ce3c:	out    dx,eax
  41ce3d:	or     esp,DWORD PTR [ebx+0x2577a663]
  41ce43:	inc    eax
  41ce44:	mov    bl,0x29
  41ce46:	and    ch,BYTE PTR [ebx+0x5a61fd06]
  41ce4c:	adc    eax,0xc1b2d34e
  41ce51:	mov    ch,0x12
  41ce53:	xchg   ebx,eax
  41ce54:	jle    0x41cdf9
  41ce56:	xor    eax,0x98a66830
  41ce5b:	push   cs
  41ce5c:	sub    al,al
  41ce5e:	jg     0x41ce6f
  41ce60:	scas   eax,DWORD PTR es:[edi]
  41ce61:	rcr    ch,cl
  41ce63:	sbb    dh,BYTE PTR [ebp+0x7d]
  41ce66:	popf   
  41ce67:	sbb    al,0xc8
  41ce69:	jmp    0x41ceb1
  41ce6b:	cs xor eax,0xd9614ecf
  41ce71:	jne    0x41ce6a
  41ce73:	cli    
  41ce74:	pop    eax
  41ce75:	xchg   edx,eax
  41ce76:	mov    ds:0x15a79491,eax
  41ce7b:	mov    BYTE PTR [edi+0x52],cl
  41ce7e:	dec    edx
  41ce7f:	sahf   
  41ce80:	sti    
  41ce81:	push   esp
  41ce82:	dec    ebp
  41ce83:	xchg   ebp,eax
  41ce84:	int    0xf0
  41ce86:	sbb    ebx,DWORD PTR ds:0xb4b957e6
  41ce8c:	(bad)  
  41ce8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce8e:	pop    edx
  41ce8f:	mov    al,ds:0xb30379b4
  41ce94:	ret    
  41ce95:	shl    DWORD PTR [edx+edi*2-0x7cdcb657],1
  41ce9c:	cs inc ebp
  41ce9e:	inc    DWORD PTR [edi+0x3]
  41cea1:	mov    esp,0xadfdf614
  41cea6:	leave  
  41cea7:	clc    
  41cea8:	push   es
  41cea9:	les    esi,FWORD PTR [ecx]
  41ceab:	(bad)  
  41ceac:	enter  0x45c9,0x40
  41ceb0:	sbb    ch,BYTE PTR [esi+0x3ad4af35]
  41ceb6:	or     ch,ch
  41ceb8:	fmul   QWORD PTR es:[ecx+0x58]
  41cebc:	add    eax,0x4717254b
  41cec1:	not    BYTE PTR [ecx]
  41cec3:	imul   eax,ebp,0x8a9d0ffc
  41cec9:	dec    eax
  41ceca:	cmp    edx,DWORD PTR [ebx+0x31]
  41cecd:	gs (bad) 
  41cecf:	sbb    al,0x19
  41ced1:	popa   
  41ced2:	addr16 rcl ch,0x2e
  41ced6:	mov    ch,0x13
  41ced8:	fadd   QWORD PTR [edi+esi*4-0x79f8727]
  41cedf:	mov    BYTE PTR [eax+0x785147dc],bl
  41cee5:	add    al,0xcd
  41cee7:	scas   eax,DWORD PTR es:[edi]
  41cee8:	mov    ch,0xc0
  41ceea:	cs jmp 0xa582d3f6
  41cef0:	test   al,0x79
  41cef2:	test   DWORD PTR [ebx+0x3d],eax
  41cef5:	jge    0x41cf63
  41cef7:	hlt    
  41cef8:	out    0x62,eax
  41cefa:	enter  0xe841,0x1e
  41cefe:	je     0x41cf2e
  41cf00:	test   BYTE PTR [ebp+0x5a],0xf0
  41cf04:	add    esi,DWORD PTR [edx-0x1f6bfa85]
  41cf0a:	ins    DWORD PTR es:[edi],dx
  41cf0b:	xor    al,0x94
  41cf0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf0e:	into   
  41cf0f:	shr    ch,0x0
  41cf12:	cwde   
  41cf13:	iret   
  41cf14:	jae    0x41cee6
  41cf16:	sbb    cl,0xd2
  41cf19:	jo     0x41cef3
  41cf1b:	and    DWORD PTR [edi-0x395197],0x48
  41cf22:	lock and ebp,DWORD PTR [ebx]
  41cf25:	mov    ah,0x7c
  41cf27:	cmp    al,0xb3
  41cf29:	in     eax,0xb9
  41cf2b:	push   ds
  41cf2c:	in     al,0x48
  41cf2e:	daa    
  41cf2f:	mov    cl,0xa6
  41cf31:	sbb    BYTE PTR [edi-0xf],dl
  41cf34:	push   ds
  41cf35:	push   edx
  41cf36:	into   
  41cf37:	retf   
  41cf38:	out    dx,eax
  41cf39:	sbb    ecx,DWORD PTR [edi]
  41cf3b:	dec    ebp
  41cf3c:	cmp    esp,DWORD PTR [edi-0x27]
  41cf3f:	sub    esp,DWORD PTR [ecx+0x6427b2e]
  41cf45:	sbb    al,0xb1
  41cf47:	xchg   esp,eax
  41cf48:	mov    esp,0xa8e411fb
  41cf4d:	or     al,0x35
  41cf4f:	in     al,dx
  41cf50:	cmc    
  41cf51:	adc    DWORD PTR [ecx],edx
  41cf53:	rcr    DWORD PTR [eax],0x56
  41cf56:	xor    eax,0x6d149e2b
  41cf5b:	lds    edx,FWORD PTR [esp+edx*2-0xe1ad8c0]
  41cf62:	jge    0x41cfa7
  41cf64:	sub    eax,edi
  41cf66:	or     esi,edx
  41cf68:	sbb    BYTE PTR [ebp-0x5d],dl
  41cf6b:	mov    ebx,0xb6a741c5
  41cf70:	fdivr  QWORD PTR [ecx-0x6c]
  41cf73:	lods   eax,DWORD PTR ds:[esi]
  41cf74:	jae    0x41cfcd
  41cf76:	fwait
  41cf77:	cmp    ah,BYTE PTR [edi+edx*1-0x30]
  41cf7b:	jle    0x41cf76
  41cf7d:	pop    es
  41cf7e:	jno    0x41cf23
  41cf80:	jno    0x41cfd9
  41cf82:	popf   
  41cf83:	adc    DWORD PTR [edx],edi
  41cf85:	fldcw  WORD PTR [esi]
  41cf87:	loope  0x41d008
  41cf89:	sbb    DWORD PTR [eax-0xc],edi
  41cf8c:	repnz add al,0x1d
  41cf8f:	mov    dh,cl
  41cf91:	lods   eax,DWORD PTR gs:[esi]
  41cf93:	leave  
  41cf94:	cs aas 
  41cf96:	enter  0x6726,0x22
  41cf9a:	sbb    al,0xe4
  41cf9c:	or     DWORD PTR [edi-0xff5939c],edi
  41cfa2:	dec    ebx
  41cfa3:	add    al,0x84
  41cfa5:	add    ah,BYTE PTR [edi-0x6b]
  41cfa8:	mov    dh,0x93
  41cfaa:	sbb    esi,esi
  41cfac:	dec    esi
  41cfad:	inc    esi
  41cfae:	jg     0x41cfba
  41cfb0:	clc    
  41cfb1:	or     DWORD PTR ds:0xbfec317c,ebp
  41cfb7:	imul   edi,DWORD PTR [esi+eiz*4-0x11],0x646f6860
  41cfbf:	loope  0x41cfc4
  41cfc1:	and    bh,BYTE PTR [esi]
  41cfc3:	push   eax
  41cfc4:	add    al,0x56
  41cfc6:	adc    al,0xe8
  41cfc8:	jno    0x41cfeb
  41cfca:	iret   
  41cfcb:	mov    BYTE PTR [ecx+0x48],ch
  41cfce:	(bad)  
  41cfcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd0:	in     al,dx
  41cfd1:	scas   eax,DWORD PTR es:[edi]
  41cfd2:	mov    ecx,0x49017e1c
  41cfd7:	mov    bl,0x6f
  41cfd9:	mov    ds:0x17f3a6fe,eax
  41cfde:	jg     0x41d029
  41cfe0:	addr16 mov esi,es
  41cfe3:	loopne 0x41d019
  41cfe5:	dec    edi
  41cfe6:	xchg   esp,eax
  41cfe7:	data16 int 0x7a
  41cfea:	div    BYTE PTR [ebx+ebx*4+0x665c468e]
  41cff1:	mov    esp,DWORD PTR [edx]
  41cff3:	outs   dx,BYTE PTR ds:[esi]
  41cff4:	ret    0x1ae0
  41cff7:	sbb    eax,0xe95ffb8a
  41cffc:	sub    al,0x81
  41cffe:	enter  0xb32c,0x3f
  41d002:	cli    
  41d003:	test   BYTE PTR [eax],dh
  41d005:	and    cl,BYTE PTR [esi+0x2e058941]
  41d00b:	push   eax
  41d00c:	js     0x41d088
  41d00e:	std    
  41d00f:	(bad)  
  41d011:	out    dx,eax
  41d012:	adc    eax,0x157cebe6
  41d017:	mov    bl,0x6a
  41d019:	je     0x41d02c
  41d01b:	loope  0x41d016
  41d01d:	mov    eax,ds:0x510924c9
  41d022:	mov    dl,0x42
  41d024:	push   es
  41d025:	sti    
  41d026:	xor    BYTE PTR [edx-0x35],dh
  41d029:	jp     0x41cff4
  41d02b:	or     WORD PTR [edx],di
  41d02e:	js     0x41cfed
  41d030:	fmulp  st(2),st
  41d032:	xchg   edi,eax
  41d033:	repnz ficomp DWORD PTR [edx-0x30]
  41d037:	dec    eax
  41d038:	mov    dl,0xce
  41d03a:	jmp    0x6cf321f2
  41d03f:	pop    ebx
  41d040:	push   edi
  41d041:	xlat   BYTE PTR ds:[ebx]
  41d042:	jbe    0x41d079
  41d044:	call   FWORD PTR [ecx-0x5df46d01]
  41d04a:	loop   0x41d0c5
  41d04c:	jbe    0x41d0b4
  41d04e:	xor    cl,BYTE PTR [esi]
  41d050:	dec    esp
  41d051:	arpl   sp,bp
  41d053:	jmp    0x41d0ca
  41d055:	push   ebp
  41d056:	cmp    ah,BYTE PTR [ebx-0x172737b1]
  41d05c:	nop
  41d05d:	outs   dx,BYTE PTR ds:[esi]
  41d05e:	inc    ebp
  41d05f:	clc    
  41d060:	sbb    al,cl
  41d062:	stc    
  41d063:	clc    
  41d064:	cwde   
  41d065:	lods   al,BYTE PTR ds:[esi]
  41d066:	sti    
  41d067:	fisttp WORD PTR [ebp+eax*1-0x7a]
  41d06b:	and    al,0x53
  41d06d:	test   al,0x3e
  41d06f:	jb     0x41d03f
  41d071:	(bad)  
  41d072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d073:	aas    
  41d074:	push   0x572b7999
  41d079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d07a:	out    dx,al
  41d07b:	clc    
  41d07c:	push   edx
  41d07d:	dec    esi
  41d07e:	jg     0x41d017
  41d080:	jb     0x41d0c5
  41d082:	push   es
  41d083:	jp     0x41d094
  41d085:	enter  0xea08,0xf6
  41d089:	stos   BYTE PTR es:[edi],al
  41d08a:	sar    BYTE PTR [eax+0x666b80cd],1
  41d090:	fiadd  WORD PTR [edi-0x28]
  41d093:	add    cl,bl
  41d095:	sbb    eax,0x6731871d
  41d09a:	cmp    ecx,DWORD PTR [edx+0x7e]
  41d09d:	loopne 0x41d096
  41d09f:	inc    edi
  41d0a0:	out    dx,al
  41d0a1:	fiadd  WORD PTR [edx]
  41d0a3:	js     0x41d0fe
  41d0a5:	sbb    eax,0x1ae04302
  41d0aa:	pop    ss
  41d0ab:	mov    BYTE PTR [edi],cl
  41d0ad:	arpl   WORD PTR es:[ebp-0x12],bx
  41d0b1:	ins    BYTE PTR es:[edi],dx
  41d0b2:	clc    
  41d0b3:	sbb    cl,BYTE PTR [ecx]
  41d0b5:	out    0x9e,al
  41d0b7:	scas   eax,DWORD PTR es:[edi]
  41d0b8:	mov    ecx,0xd66b3a0b
  41d0bd:	popa   
  41d0be:	test   DWORD PTR [ebp-0x38],0x95b1dc8f
  41d0c5:	cmp    BYTE PTR [edx+0x40],cl
  41d0c8:	xor    BYTE PTR [ebp+0x37be6171],0x3a
  41d0cf:	pusha  
  41d0d0:	scas   al,BYTE PTR es:[edi]
  41d0d1:	xor    eax,0xfd982e09
  41d0d6:	mov    bl,bl
  41d0d8:	push   cs
  41d0d9:	and    ebp,esp
  41d0db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0dc:	sub    BYTE PTR [ecx],bh
  41d0de:	sbb    ch,ah
  41d0e0:	or     eax,0x3d0f3999
  41d0e5:	(bad)  
  41d0e7:	(bad)
  41d0ec:	aad    0xfb
  41d0ee:	leave  
  41d0ef:	xor    al,0xf9
  41d0f1:	ins    BYTE PTR es:[edi],dx
  41d0f2:	adc    ebx,esp
  41d0f4:	scas   al,BYTE PTR es:[edi]
  41d0f5:	cmp    ebx,DWORD PTR [edi+0x1e]
  41d0f8:	sub    dl,BYTE PTR [ebx+0x39]
  41d0fb:	mov    cl,0x43
  41d0fd:	icebp  
  41d0fe:	or     edx,DWORD PTR [esi-0x6e589449]
  41d104:	dec    esp
  41d105:	hlt    
  41d106:	mov    dh,0x82
  41d108:	push   esi
  41d109:	pop    ds
  41d10a:	xchg   esp,eax
  41d10b:	push   ds
  41d10c:	je     0x41d113
  41d10e:	jmp    0x3533a6b0
  41d113:	mov    edx,0x3b1d21d4
  41d118:	adc    ah,BYTE PTR [eax+0x53461b0e]
  41d11e:	rcr    BYTE PTR [edx+0x677f9ea5],cl
  41d124:	(bad)  
  41d125:	jge    0x41d156
  41d127:	test   dl,ah
  41d129:	mov    eax,0xce29f222
  41d12e:	cld    
  41d12f:	jge    0x41d166
  41d131:	sub    al,0x59
  41d133:	xchg   DWORD PTR [edx],ebp
  41d135:	in     eax,0x54
  41d137:	neg    edx
  41d139:	call   0xca580386
  41d13e:	or     DWORD PTR [edx-0x71],edi
  41d141:	xchg   ebx,eax
  41d142:	xchg   edi,eax
  41d143:	xchg   edi,eax
  41d144:	les    ebx,FWORD PTR [esi]
  41d146:	sbb    edi,DWORD PTR [ecx+ebx*1]
  41d149:	scas   eax,DWORD PTR es:[edi]
  41d14a:	or     al,0x24
  41d14c:	mov    ch,0x4e
  41d14e:	push   esp
  41d14f:	test   al,0x88
  41d151:	or     BYTE PTR [edi],cl
  41d153:	je     0x41d1bf
  41d155:	outs   dx,BYTE PTR ds:[esi]
  41d156:	xor    esp,DWORD PTR [ecx+0x38]
  41d159:	clc    
  41d15a:	jae    0x41d16b
  41d15c:	xlat   BYTE PTR ds:[ebx]
  41d15d:	sbb    edi,eax
  41d15f:	fcom   st(0)
  41d161:	loope  0x41d101
  41d163:	lods   eax,DWORD PTR ds:[esi]
  41d164:	in     al,0x8f
  41d166:	mov    ds:0xac6f306,al
  41d16b:	sub    al,0xf0
  41d16d:	mov    eax,0x7af80101
  41d172:	xchg   esi,eax
  41d173:	fild   QWORD PTR [ebx]
  41d175:	sbb    al,0xe1
  41d177:	xchg   esp,eax
  41d178:	nop
  41d179:	and    bh,ah
  41d17b:	push   esi
  41d17c:	call   0xde09:0x3e1cae86
  41d183:	mov    ch,0x9
  41d185:	scas   al,BYTE PTR es:[edi]
  41d186:	sti    
  41d187:	hlt    
  41d188:	add    DWORD PTR [edx+0x24],edx
  41d18b:	jb     0x41d208
  41d18d:	int    0x5c
  41d18f:	pop    ebx
  41d190:	xchg   ebp,eax
  41d191:	(bad)  
  41d192:	pop    esi
  41d193:	fcmovbe st,st(1)
  41d195:	dec    ecx
  41d196:	adc    dl,BYTE PTR [edi+0x433b0791]
  41d19c:	push   0x7ff4a726
  41d1a1:	sbb    bh,BYTE PTR [edi+0x2746c6b8]
  41d1a7:	fnstsw WORD PTR [edi-0x545d5c52]
  41d1ad:	rcr    DWORD PTR ds:0xa2ed0f8,0xa5
  41d1b4:	add    ah,BYTE PTR [ecx+0x5de7f832]
  41d1ba:	in     eax,dx
  41d1bb:	adc    ch,bl
  41d1bd:	(bad)  
  41d1be:	adc    eax,0x37f206d5
  41d1c3:	mov    DWORD PTR [edx+0x7272ce71],esp
  41d1c9:	sahf   
  41d1ca:	add    bl,dh
  41d1cc:	push   ebx
  41d1cd:	jns    0x41d21d
  41d1cf:	leave  
  41d1d0:	jg     0x41d1dd
  41d1d2:	stos   DWORD PTR es:[edi],eax
  41d1d3:	sub    al,0x85
  41d1d5:	push   ecx
  41d1d6:	jp     0x41d165
  41d1d8:	fnstsw WORD PTR [edi-0x2e]
  41d1db:	aad    0x9
  41d1dd:	sti    
  41d1de:	in     eax,dx
  41d1df:	or     ah,ch
  41d1e1:	jno    0x41d199
  41d1e3:	jge    0x41d1d4
  41d1e5:	sub    dh,dh
  41d1e7:	das    
  41d1e8:	xchg   esi,eax
  41d1e9:	or     ebx,esp
  41d1eb:	jg     0x41d220
  41d1ed:	sbb    BYTE PTR [edi],0x33
  41d1f0:	cmp    al,0x71
  41d1f2:	mov    dh,0x3e
  41d1f4:	xor    DWORD PTR [esi],ebx
  41d1f6:	repz inc esp
  41d1f8:	adc    dh,BYTE PTR [ebx-0x5cc71ad4]
  41d1fe:	iret   
  41d1ff:	jmp    0xe0a7:0x320de379
  41d206:	lds    ebx,FWORD PTR [eax+0x61107a32]
  41d20c:	pop    esi
  41d20d:	push   0x79a268d6
  41d212:	mov    dl,BYTE PTR [ecx-0x75453b54]
  41d218:	cwde   
  41d219:	push   edi
  41d21a:	int3   
  41d21b:	int    0xd3
  41d21d:	(bad)  
  41d21e:	fs stos BYTE PTR es:[edi],al
  41d220:	dec    ebx
  41d221:	js     0x41d1e9
  41d223:	sar    BYTE PTR [ecx+edx*8-0x2c],0xfc
  41d228:	cmp    al,0x8f
  41d22a:	je     0x41d26f
  41d22c:	outs   dx,BYTE PTR ds:[esi]
  41d22d:	and    bh,bl
  41d22f:	pop    ds
  41d230:	push   ebp
  41d231:	outs   dx,DWORD PTR ds:[esi]
  41d232:	mov    esp,0x22fde028
  41d237:	sub    eax,0x10076d6c
  41d23c:	cmp    al,0x60
  41d23e:	cli    
  41d23f:	inc    ebx
  41d240:	sub    eax,0x7b4195e7
  41d245:	xor    DWORD PTR [ebp+0x17],edx
  41d248:	scas   eax,DWORD PTR es:[edi]
  41d249:	push   esp
  41d24a:	cld    
  41d24b:	and    DWORD PTR [edx],esp
  41d24d:	push   ebp
  41d24e:	sbb    cl,BYTE PTR [edx+0x50]
  41d251:	jecxz  0x41d2ad
  41d253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d254:	jbe    0x41d25e
  41d256:	mov    BYTE PTR [ecx-0x2e6e3883],cl
  41d25c:	icebp  
  41d25d:	clc    
  41d25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d25f:	stos   BYTE PTR es:[edi],al
  41d260:	mov    edx,0xdbfe4818
  41d265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d266:	outs   dx,BYTE PTR ds:[esi]
  41d267:	xchg   ebx,eax
  41d268:	or     ax,0x510c
  41d26c:	mov    edi,DWORD PTR [esi-0x41]
  41d26f:	xlat   BYTE PTR ds:[ebx]
  41d270:	mov    dh,0x9
  41d272:	fcom   DWORD PTR [edi]
  41d274:	jne    0x41d249
  41d276:	push   eax
  41d277:	and    al,0x9a
  41d279:	rcl    BYTE PTR [ebx+0x45c0ea96],1
  41d27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d280:	cmp    ch,BYTE PTR ds:0xd01bb467
  41d286:	mov    ?,WORD PTR [edx-0x2e66c961]
  41d28c:	xchg   esi,eax
  41d28d:	pop    esi
  41d28e:	inc    eax
  41d28f:	rcl    DWORD PTR ds:0x74dbe3ac,1
  41d295:	push   esp
  41d296:	jnp    0x41d30e
  41d298:	xor    al,0xc5
  41d29a:	push   0x44d31783
  41d29f:	mov    cl,0x13
  41d2a1:	das    
  41d2a2:	cmp    al,0xbf
  41d2a4:	ror    dl,1
  41d2a6:	in     eax,dx
  41d2a7:	cmp    edi,ebx
  41d2a9:	xor    eax,0x48169723
  41d2ae:	rol    cl,cl
  41d2b0:	bnd ret 0x7402
  41d2b4:	daa    
  41d2b5:	aaa    
  41d2b6:	or     al,0xad
  41d2b8:	jmp    0xa60a2ba9
  41d2bd:	fistp  QWORD PTR [ebx]
  41d2bf:	rcl    BYTE PTR [ecx+0x47a672d0],0x14
  41d2c6:	hlt    
  41d2c7:	xor    BYTE PTR cs:[edx],cl
  41d2ca:	push   0x53
  41d2cc:	sbb    DWORD PTR [eax+ebx*1+0x6b],0xffffffbe
  41d2d1:	dec    edx
  41d2d2:	and    eax,0xcc573e6c
  41d2d7:	scas   eax,DWORD PTR es:[edi]
  41d2d8:	inc    ebp
  41d2d9:	out    dx,eax
  41d2da:	adc    al,dl
  41d2dc:	test   eax,0xb35ac59e
  41d2e1:	cmp    BYTE PTR [edi],al
  41d2e3:	(bad)  
  41d2e4:	lods   al,BYTE PTR ds:[esi]
  41d2e5:	cmp    cl,al
  41d2e7:	inc    ecx
  41d2e8:	inc    edi
  41d2e9:	mov    al,ds:0x806dd01f
  41d2ee:	repnz call 0x110c:0x5c2cba5d
  41d2f6:	repnz push ebx
  41d2f8:	test   eax,0xf5e6d9bc
  41d2fd:	jge    0x41d31b
  41d2ff:	inc    ebx
  41d300:	sbb    DWORD PTR [edi-0x3cd62acc],esi
  41d306:	call   0xa8682758
  41d30b:	jg     0x41d292
  41d30d:	add    eax,0xf1109e23
  41d312:	addr16 jne 0x41d386
  41d315:	lock or ebp,esp
  41d318:	jno    0x41d2da
  41d31a:	mov    ebp,0x8522d92d
  41d31f:	in     eax,0x58
  41d321:	fcmovbe st,st(0)
  41d323:	scas   al,BYTE PTR es:[edi]
  41d324:	test   eax,0x69bdf000
  41d329:	stos   BYTE PTR es:[edi],al
  41d32a:	cmp    DWORD PTR [ebp+0x1a7f4239],ebx
  41d330:	jle    0x41d374
  41d332:	dec    ebp
  41d333:	cld    
  41d334:	xchg   edi,eax
  41d335:	dec    ecx
  41d336:	push   edx
  41d337:	mov    cl,0x33
  41d339:	dec    edx
  41d33a:	imul   ebp,esi,0xffffffdc
  41d33d:	les    ecx,FWORD PTR [esi]
  41d33f:	mov    ecx,DWORD PTR [edx]
  41d341:	sub    DWORD PTR [esi-0x6e11a5a8],ecx
  41d347:	int3   
  41d348:	mov    ch,0x1e
  41d34a:	or     al,0x80
  41d34c:	mov    ds:0x489f72c0,al
  41d351:	xlat   BYTE PTR ds:[ebx]
  41d352:	mov    dh,0x52
  41d354:	xor    eax,0x3884ae97
  41d359:	leave  
  41d35a:	loope  0x41d2f0
  41d35c:	ins    BYTE PTR es:[edi],dx
  41d35d:	add    BYTE PTR [edx+esi*1+0x33b47492],0x48
  41d365:	popa   
  41d366:	ret    0x6109
  41d369:	(bad)
  41d36e:	mov    ?,edx
  41d370:	mov    edi,0x365059cf
  41d375:	call   FWORD PTR [ebp+0xe92bcbb]
  41d37b:	pop    ecx
  41d37c:	out    0xb7,al
  41d37e:	mul    ch
  41d380:	push   esp
  41d381:	mov    ds:0x4a749966,eax
  41d386:	into   
  41d387:	add    bl,bh
  41d389:	fst    DWORD PTR ds:0xaaa28b30
  41d38f:	cmp    DWORD PTR [esi-0x3a],edi
  41d392:	lods   al,BYTE PTR ds:[esi]
  41d393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d394:	mov    ebx,0xf253f1c7
  41d399:	add    DWORD PTR [edi],ebx
  41d39b:	sti    
  41d39c:	fwait
  41d39d:	and    al,0xd7
  41d39f:	jmp    0x41d3b0
  41d3a1:	jbe    0x41d41c
  41d3a3:	add    esp,edi
  41d3a5:	or     BYTE PTR [eax-0x3b1ca039],ch
  41d3ab:	add    esi,DWORD PTR [edx-0x76e5ac4]
  41d3b1:	mov    ecx,0xbbc44e69
  41d3b6:	push   ss
  41d3b7:	adc    BYTE PTR [edi+0x63],dl
  41d3ba:	xchg   esi,eax
  41d3bb:	adc    eax,DWORD PTR [ebx]
  41d3bd:	mov    ah,0xa0
  41d3bf:	mov    WORD PTR [esi+edi*4],?
  41d3c2:	pop    ecx
  41d3c3:	pusha  
  41d3c4:	mov    bh,0x86
  41d3c6:	mov    eax,ds:0xed27579a
  41d3cb:	outs   dx,BYTE PTR ds:[esi]
  41d3cc:	es hlt 
  41d3ce:	mov    dh,BYTE PTR [ebx-0x3d]
  41d3d1:	add    BYTE PTR [ecx+0x30],0x1d
  41d3d5:	xchg   edx,eax
  41d3d6:	xchg   esi,eax
  41d3d7:	mov    cl,0xc0
  41d3d9:	imul   eax,DWORD PTR [edi-0x14d67c77],0x59
  41d3e0:	cld    
  41d3e1:	(bad)  
  41d3e2:	cs stos BYTE PTR es:[edi],al
  41d3e4:	xchg   BYTE PTR [esi+0x1128dfc4],dl
  41d3ea:	icebp  
  41d3eb:	push   eax
  41d3ec:	leave  
  41d3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ee:	sbb    ebp,DWORD PTR [ecx+0x7fe0fa48]
  41d3f4:	pop    edi
  41d3f5:	add    eax,DWORD PTR [ebx+0xf]
  41d3f8:	test   DWORD PTR [ebx*4-0x74920435],esp
  41d3ff:	mov    dl,0x2e
  41d401:	fldenv [ecx+0x2a8673ea]
  41d407:	dec    esi
  41d408:	adc    BYTE PTR [ebx+0x4337f3ee],dh
  41d40e:	jecxz  0x41d399
  41d410:	sub    bh,BYTE PTR [ecx-0x2853d1b1]
  41d416:	jb     0x41d3fc
  41d418:	mov    ds:0x2ebff7d3,al
  41d41d:	xchg   edi,eax
  41d41e:	sbb    BYTE PTR [ebx],0x8f
  41d421:	xchg   esi,eax
  41d422:	pop    ss
  41d423:	lods   al,BYTE PTR ds:[esi]
  41d424:	(bad)  
  41d425:	fisub  WORD PTR [edx]
  41d427:	jmp    0x41d48f
  41d429:	jge    0x41d3f5
  41d42b:	dec    BYTE PTR [esi]
  41d42d:	dec    ebp
  41d42e:	ins    DWORD PTR es:[edi],dx
  41d42f:	sbb    DWORD PTR [esi-0x3c41cf5d],ebp
  41d435:	adc    DWORD PTR [esi],0x6559d8e8
  41d43b:	js     0x41d457
  41d43d:	cli    
  41d43e:	mov    eax,0xfb603295
  41d443:	mov    ?,WORD PTR [eax-0x6bb8730d]
  41d449:	pop    eax
  41d44a:	mov    edx,0xe2f50da
  41d44f:	adc    BYTE PTR [ecx+0x10],cl
  41d452:	jl     0x41d470
  41d454:	stos   BYTE PTR es:[edi],al
  41d455:	rcr    eax,0x5d
  41d458:	xchg   BYTE PTR [esi+0x63b2922c],al
  41d45e:	enter  0x4a9d,0x9a
  41d462:	xor    BYTE PTR [esi+0x4d],cl
  41d465:	push   esi
  41d466:	in     eax,0x2b
  41d468:	dec    edx
  41d469:	nop
  41d46a:	repnz in eax,0x50
  41d46d:	retf   
  41d46e:	xor    al,0x3d
  41d470:	cmp    eax,0x1e12bc2a
  41d475:	jmp    0x41d4b2
  41d477:	and    eax,0xc3adfcc
  41d47c:	ins    BYTE PTR es:[edi],dx
  41d47d:	in     al,0xb5
  41d47f:	(bad)  
  41d480:	lock push 0xbc01dafc
  41d486:	jns    0x41d410
  41d488:	and    al,0x43
  41d48a:	or     DWORD PTR [ecx+eiz*1+0x4a47e947],edx
  41d491:	xor    eax,0x24f7d5b9
  41d496:	jp     0x41d4a2
  41d498:	in     al,dx
  41d499:	out    0x15,eax
  41d49b:	pop    es
  41d49c:	aad    0x72
  41d49e:	repnz xor eax,0x38bc1ddb
  41d4a4:	pop    esp
  41d4a5:	or     DWORD PTR [edi-0x64],esi
  41d4a8:	sbb    ah,BYTE PTR [esp+ebx*8+0x15]
  41d4ac:	pop    ebp
  41d4ad:	pop    esp
  41d4ae:	cld    
  41d4af:	and    edi,ebx
  41d4b1:	mov    ebp,0xfcddbc60
  41d4b6:	int    0x1e
  41d4b8:	retf   
  41d4b9:	clc    
  41d4ba:	outs   dx,DWORD PTR ds:[esi]
  41d4bb:	and    eax,DWORD PTR [edi]
  41d4bd:	lock jmp 0xce41:0x4a5a123a
  41d4c5:	loope  0x41d451
  41d4c7:	retf   0x9227
  41d4ca:	add    bh,BYTE PTR [edx+0x1981d48a]
  41d4d0:	inc    edx
  41d4d1:	and    eax,0xb5ecb247
  41d4d6:	int    0x88
  41d4d8:	inc    esp
  41d4d9:	imul   esp,eax,0x92765ca2
  41d4df:	sahf   
  41d4e0:	mov    dh,BYTE PTR [ebx-0x69087852]
  41d4e6:	push   ebx
  41d4e7:	xchg   edi,eax
  41d4e8:	outs   dx,DWORD PTR ds:[esi]
  41d4e9:	xor    eax,0x650f205b
  41d4ee:	pop    ss
  41d4ef:	popa   
  41d4f0:	(bad)  
  41d4f2:	in     al,0x1
  41d4f4:	mov    ebx,0xfe6e3c28
  41d4fa:	ins    DWORD PTR es:[edi],dx
  41d4fb:	jnp    0x41d511
  41d4fd:	test   ah,dl
  41d4ff:	sbb    edi,DWORD PTR [edi]
  41d501:	pop    edi
  41d502:	xchg   BYTE PTR [esi+0x22],bl
  41d505:	mov    eax,0xc97a8f02
  41d50a:	sti    
  41d50b:	mov    dh,0x74
  41d50d:	jl     0x41d58e
  41d50f:	fwait
  41d510:	pop    DWORD PTR [esi-0x22]
  41d513:	out    0x4a,eax
  41d515:	mov    esp,0xa91fdde2
  41d51a:	pop    ds
  41d51b:	pusha  
  41d51c:	push   edx
  41d51d:	or     BYTE PTR [ebx],cl
  41d51f:	adc    eax,edi
  41d521:	ins    DWORD PTR es:[edi],dx
  41d522:	or     ebp,DWORD PTR [ecx]
  41d524:	ret    0x954b
  41d527:	ds repz enter 0x8dee,0x4b
  41d52d:	das    
  41d52e:	into   
  41d52f:	sti    
  41d530:	addr16 out dx,eax
  41d532:	dec    esi
  41d533:	pop    edx
  41d534:	lods   eax,DWORD PTR ds:[esi]
  41d535:	adc    BYTE PTR [ebx+0x644d59f2],ah
  41d53b:	or     ch,BYTE PTR [ecx-0x2d9592f5]
  41d541:	or     BYTE PTR [esi],al
  41d543:	mov    bh,BYTE PTR [ecx+0x41]
  41d546:	push   ebx
  41d547:	xchg   eax,ebx
  41d549:	cmp    al,BYTE PTR [esi]
  41d54b:	jp     0x41d550
  41d54d:	pop    eax
  41d54e:	out    0xe0,al
  41d550:	xchg   BYTE PTR [esi+ebx*1],bh
  41d553:	out    0x67,al
  41d555:	fsubr  st,st(3)
  41d557:	jnp    0x41d500
  41d559:	pushf  
  41d55a:	adc    DWORD PTR [ecx+0x53f1134a],esi
  41d560:	sub    al,BYTE PTR [esi+0x384420cb]
  41d566:	or     ah,cl
  41d568:	pusha  
  41d569:	dec    edx
  41d56a:	push   edx
  41d56b:	cmp    eax,0x8e017b6e
  41d570:	mov    ebx,0xa50739a1
  41d575:	stos   BYTE PTR es:[edi],al
  41d576:	jnp    0x41d545
  41d578:	popf   
  41d579:	or     BYTE PTR [edi+0x468ff209],dl
  41d57f:	in     al,dx
  41d580:	xor    eax,DWORD PTR [ebp+0x5b]
  41d583:	stos   DWORD PTR es:[edi],eax
  41d584:	sahf   
  41d585:	add    esi,DWORD PTR [esp+ecx*1-0x33]
  41d589:	pop    eax
  41d58a:	adc    esi,DWORD PTR [ebp+eiz*8-0x57e93e6d]
  41d591:	mov    ?,edi
  41d593:	mov    ah,0x45
  41d595:	mov    esp,fs
  41d597:	sub    BYTE PTR [esi+0x2b],ch
  41d59a:	mov    es,edx
  41d59c:	sub    al,BYTE PTR [ecx+0x7e]
  41d59f:	mov    DWORD PTR [eax],esp
  41d5a1:	mov    al,ds:0xa68aa4ce
  41d5a6:	icebp  
  41d5a7:	and    BYTE PTR [ecx+ecx*4],dl
  41d5aa:	add    al,0x4f
  41d5ac:	ret    
  41d5ad:	add    edx,DWORD PTR [edi]
  41d5af:	cmp    eax,0x48daf5b1
  41d5b4:	jo     0x41d59a
  41d5b6:	sbb    DWORD PTR [ecx-0xcf09da3],eax
  41d5bc:	cld    
  41d5bd:	scas   eax,DWORD PTR es:[di]
  41d5bf:	pop    ebp
  41d5c0:	dec    ebp
  41d5c1:	mov    WORD PTR [edi-0x39],cs
  41d5c4:	inc    eax
  41d5c5:	push   esi
  41d5c6:	dec    edx
  41d5c7:	loop   0x41d647
  41d5c9:	sub    al,0x1a
  41d5cb:	xchg   ebx,eax
  41d5cc:	imul   ecx,esp,0xd1060a19
  41d5d2:	outs   dx,BYTE PTR ss:[esi]
  41d5d4:	gs int3 
  41d5d6:	sbb    edi,DWORD PTR [edi+ecx*2]
  41d5d9:	xchg   BYTE PTR [eax+0x24e8cba8],ch
  41d5df:	mov    ?,WORD PTR [ebp+eiz*1-0x7569bce4]
  41d5e6:	outs   dx,DWORD PTR ds:[esi]
  41d5e7:	cld    
  41d5e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e9:	and    DWORD PTR [ecx],esp
  41d5eb:	in     eax,dx
  41d5ec:	icebp  
  41d5ed:	pop    ds
  41d5ee:	xor    esp,DWORD PTR [ecx+ebp*2-0x36cb2f0e]
  41d5f5:	hlt    
  41d5f6:	aam    0x13
  41d5f8:	jmp    0x43bbe6d1
  41d5fd:	inc    edx
  41d5fe:	dec    esp
  41d5ff:	inc    edi
  41d600:	js     0x41d5db
  41d602:	lahf   
  41d603:	mov    edi,0x77b1edde
  41d608:	(bad)  
  41d609:	mov    esi,gs
  41d60b:	xchg   ebp,eax
  41d60c:	aas    
  41d60d:	outs   dx,DWORD PTR ds:[esi]
  41d60e:	out    dx,al
  41d60f:	cmp    DWORD PTR [esp+ebp*4-0x60],0xe309b0ec
  41d617:	sbb    al,ah
  41d619:	sub    eax,0xc8056595
  41d61e:	dec    edi
  41d61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d620:	jmp    0xb6e5:0x23fc9c26
  41d627:	shl    al,cl
  41d629:	and    BYTE PTR [eax-0x1d],bh
  41d62c:	test   ebx,0xa334607f
  41d632:	pop    ebx
  41d633:	sub    al,0x81
  41d635:	loopne 0x41d690
  41d637:	sar    DWORD PTR [edx],0x30
  41d63a:	mov    dl,0x2e
  41d63c:	push   eax
  41d63d:	pop    ss
  41d63e:	dec    eax
  41d63f:	inc    edi
  41d640:	dec    edi
  41d641:	mov    bl,0x39
  41d643:	sub    cl,BYTE PTR [ecx+0x22]
  41d646:	xchg   ebp,eax
  41d647:	adc    DWORD PTR [ebx-0x56],0x2
  41d64b:	pushf  
  41d64c:	or     ah,ch
  41d64e:	shl    bh,1
  41d650:	mov    dh,BYTE PTR [edx+0x21ea1b41]
  41d656:	fidivr WORD PTR [ecx]
  41d658:	sbb    ah,BYTE PTR [eax+0x6]
  41d65b:	adc    esp,DWORD PTR [ecx-0x1]
  41d65e:	lods   eax,DWORD PTR ds:[esi]
  41d65f:	cld    
  41d660:	or     BYTE PTR [ecx],cl
  41d662:	retf   
  41d663:	rol    edx,0xc3
  41d666:	(bad)  
  41d667:	outs   dx,BYTE PTR ds:[esi]
  41d668:	push   ebx
  41d669:	add    bh,0x92
  41d66c:	cs or  bl,al
  41d66f:	mov    edx,DWORD PTR [ecx-0x71d51846]
  41d675:	sub    ebp,ecx
  41d677:	jb     0x41d601
  41d679:	and    edx,esi
  41d67b:	lods   eax,DWORD PTR ds:[esi]
  41d67c:	xor    esp,ebp
  41d67e:	jge    0x41d68c
  41d680:	add    DWORD PTR [esi+ebp*8],ecx
  41d683:	out    dx,al
  41d684:	ins    DWORD PTR es:[edi],dx
  41d685:	jl     0x41d6b7
  41d687:	mov    ebx,0xb88c7c36
  41d68c:	push   ds
  41d68d:	hlt    
  41d68e:	inc    edi
  41d68f:	and    BYTE PTR [edi+0x5d6ddb7],0xe
  41d696:	imul   eax,esp,0xffffffa8
  41d699:	jge    0x41d718
  41d69b:	out    dx,eax
  41d69c:	sbb    esp,DWORD PTR [ecx]
  41d69e:	or     DWORD PTR [esp+edi*8+0x24],edx
  41d6a2:	int3   
  41d6a3:	arpl   WORD PTR [ebp+0x1c38fa51],cx
  41d6a9:	fs dec ecx
  41d6ab:	scas   eax,DWORD PTR es:[edi]
  41d6ac:	adc    BYTE PTR [edx+0x3d597aaa],dl
  41d6b2:	sbb    al,0x15
  41d6b4:	pop    es
  41d6b5:	out    0x8f,al
  41d6b7:	sbb    eax,0xde6baa11
  41d6bc:	mov    ds:0x8aba5d0e,eax
  41d6c1:	mov    ebx,0x5fcd905c
  41d6c6:	push   edx
  41d6c7:	pop    ss
  41d6c8:	push   ebx
  41d6c9:	loopne 0x41d6bf
  41d6cb:	es (bad) 
  41d6cd:	call   0x2e43fea8
  41d6d2:	sbb    BYTE PTR [edx-0x4d],bl
  41d6d5:	sbb    edi,0xffffff80
  41d6d8:	add    eax,0xb6245490
  41d6dd:	test   DWORD PTR [edi+0x22],edx
  41d6e0:	and    bh,BYTE PTR [ebp-0x60]
  41d6e3:	les    eax,FWORD PTR [edx-0xaaca02f]
  41d6e9:	je     0x41d6ca
  41d6eb:	ja     0x41d692
  41d6ed:	rcr    bl,0x96
  41d6f0:	icebp  
  41d6f1:	mov    dh,0x62
  41d6f3:	seto   BYTE PTR [ecx-0x39]
  41d6f7:	and    al,0x38
  41d6f9:	pop    ds
  41d6fa:	fwait
  41d6fb:	cmp    eax,0x2695c7b0
  41d700:	pop    ds
  41d701:	sbb    eax,0x2605dba
  41d706:	stos   BYTE PTR es:[edi],al
  41d707:	pushf  
  41d708:	mov    esi,0xb71f981f
  41d70d:	mov    cl,BYTE PTR [ebp-0x297f27e9]
  41d713:	push   cs
  41d714:	popf   
  41d715:	pusha  
  41d716:	ret    0x4c58
  41d719:	fcmovne st,st(4)
  41d71b:	daa    
  41d71c:	popf   
  41d71d:	dec    esp
  41d71e:	cmp    BYTE PTR [eax-0x5],dh
  41d721:	sbb    edx,DWORD PTR [edi+0x6b]
  41d724:	js     0x41d6fd
  41d726:	nop
  41d727:	inc    eax
  41d728:	aaa    
  41d729:	mov    ch,0x3c
  41d72b:	hlt    
  41d72c:	aaa    
  41d72d:	adc    al,0x22
  41d72f:	clc    
  41d730:	sub    eax,0x72960278
  41d735:	and    edx,DWORD PTR [esp+esi*8+0x1a]
  41d739:	or     BYTE PTR [esi-0x29],cl
  41d73c:	mov    esp,0x46dab1e4
  41d741:	mov    ds:0xfc580805,eax
  41d746:	call   0x695f:0x686b698
  41d74d:	jne    0x41d7cb
  41d74f:	mov    ah,0xa3
  41d751:	in     eax,dx
  41d752:	test   BYTE PTR [esi],ah
  41d754:	test   BYTE PTR [eax],cl
  41d756:	cmp    eax,ebp
  41d758:	das    
  41d759:	in     al,0xf0
  41d75b:	loop   0x41d736
  41d75d:	stos   BYTE PTR es:[edi],al
  41d75e:	jp     0x41d768
  41d760:	dec    ebx
  41d761:	jb     0x41d719
  41d763:	cwde   
  41d764:	and    edi,DWORD PTR [edx+0x55bda938]
  41d76a:	enter  0xade6,0x29
  41d76e:	xor    ebp,ebp
  41d770:	jmp    0x1a19:0x8a2668a1
  41d777:	(bad)  
  41d778:	or     DWORD PTR [edx+0x2d],edi
  41d77b:	fmul   DWORD PTR [ecx+0x5f480590]
  41d781:	xchg   ecx,eax
  41d782:	pop    esp
  41d783:	call   0x80ab2b2e
  41d788:	cld    
  41d789:	sbb    BYTE PTR [ebp-0x7ad46383],0xab
  41d790:	cdq    
  41d791:	das    
  41d792:	in     eax,0x6f
  41d794:	inc    edx
  41d795:	cmp    dx,si
  41d798:	pop    ebp
  41d799:	fdiv   DWORD PTR [ebx-0x3e]
  41d79c:	call   0xf7cfd532
  41d7a1:	test   eax,0xfdcb17c2
  41d7a6:	jmp    0x41d813
  41d7a8:	mov    ebp,0x3cbe63c7
  41d7ad:	test   BYTE PTR [ecx-0x86df605],0x7f
  41d7b4:	mov    edx,0xfd59e59d
  41d7b9:	jp     0x41d762
  41d7bb:	push   es
  41d7bc:	xor    DWORD PTR [esp+eiz*4-0x7ae6bb04],esi
  41d7c3:	pop    esp
  41d7c4:	inc    ebp
  41d7c5:	rcl    BYTE PTR [edi-0x4f],0xb7
  41d7c9:	push   cs
  41d7ca:	fst    DWORD PTR [eax+0x15]
  41d7cd:	in     eax,0xd
  41d7cf:	and    eax,0x7662be11
  41d7d4:	push   ss
  41d7d5:	pop    ecx
  41d7d6:	out    dx,al
  41d7d7:	fiadd  WORD PTR [eax-0x56e7fa99]
  41d7dd:	retf   0x61ab
  41d7e0:	mov    cl,0x3
  41d7e2:	add    DWORD PTR [eax+0x1ea771ae],ebx
  41d7e8:	outs   dx,BYTE PTR ds:[esi]
  41d7e9:	je     0x41d7f8
  41d7eb:	rcr    eax,0x45
  41d7ee:	inc    esp
  41d7ef:	int    0x92
  41d7f1:	lods   al,BYTE PTR ds:[esi]
  41d7f2:	jno    0x41d854
  41d7f4:	sbb    DWORD PTR [esi-0x7b809c7d],esp
  41d7fa:	mov    eax,0x75d4638d
  41d7ff:	dec    esi
  41d800:	inc    ebp
  41d801:	lock pop es
  41d803:	cmp    eax,0x712aa2b4
  41d808:	retf   
  41d809:	ss xchg ebp,eax
  41d80b:	ss dec eax
  41d80d:	data16 mov bl,0x19
  41d810:	aad    0x4b
  41d812:	shr    DWORD PTR [ebx+esi*1-0x568ad8b3],cl
  41d819:	sub    DWORD PTR [esi],edi
  41d81b:	pushf  
  41d81c:	hlt    
  41d81d:	outs   dx,BYTE PTR ds:[esi]
  41d81e:	test   BYTE PTR [ebx],dl
  41d820:	cmp    al,0xe7
  41d822:	sub    BYTE PTR [edi-0x7c173f52],al
  41d828:	test   DWORD PTR [ecx],esi
  41d82a:	jbe    0x41d816
  41d82c:	ins    DWORD PTR es:[edi],dx
  41d82d:	rol    DWORD PTR [esi],0x0
  41d830:	inc    edx
  41d831:	fdiv   QWORD PTR [esi+0x78edfbe7]
  41d837:	dec    edx
  41d838:	or     al,BYTE PTR [ebp+ebx*1+0x18100b53]
  41d83f:	pop    esp
  41d840:	jbe    0x41d7e4
  41d842:	add    DWORD PTR [edi-0x542fad83],edi
  41d848:	inc    esp
  41d849:	pop    edi
  41d84a:	cmp    eax,0x891fa859
  41d84f:	fnstenv [ebx+0x41a6ea2b]
  41d855:	mov    al,ds:0xd37ce430
  41d85a:	shl    DWORD PTR [esi+0x49b4b77e],0x64
  41d861:	or     ebp,DWORD PTR [ebp-0x7ce94b4f]
  41d867:	pop    esi
  41d868:	adc    dh,bl
  41d86a:	sti    
  41d86b:	rcr    BYTE PTR [eax],1
  41d86d:	mov    edi,0x3f5aaa4
  41d872:	js     0x41d851
  41d874:	push   ss
  41d875:	data16 or ah,BYTE PTR [edx]
  41d878:	pop    ecx
  41d879:	lds    ecx,FWORD PTR [edi+0x122f0337]
  41d87f:	ins    DWORD PTR es:[edi],dx
  41d880:	fldenv [esp+ecx*1]
  41d883:	stos   BYTE PTR es:[edi],al
  41d884:	scas   al,BYTE PTR es:[edi]
  41d885:	add    BYTE PTR ds:0x54e94719,bl
  41d88b:	enter  0xff56,0x1d
  41d88f:	out    dx,eax
  41d890:	out    0x58,eax
  41d892:	push   ebp
  41d893:	aas    
  41d894:	and    DWORD PTR [ebp-0x712a0b1f],ebp
  41d89a:	dec    ebx
  41d89b:	arpl   dx,ax
  41d89d:	sbb    BYTE PTR ds:0xd42a7d7,0x2b
  41d8a4:	pop    edx
  41d8a5:	dec    esi
  41d8a6:	imul   edi,DWORD PTR [ebx+esi*4-0x3a],0x17f90f06
  41d8ae:	pop    eax
  41d8af:	imul   ecx,DWORD PTR [ebp+0x792a8a2d],0x90416344
  41d8b9:	mov    BYTE PTR [eax],dl
  41d8bb:	cmp    ch,al
  41d8bd:	out    dx,al
  41d8be:	and    DWORD PTR [edi+0x73d4de8f],edi
  41d8c4:	xchg   ebx,eax
  41d8c5:	scas   eax,DWORD PTR es:[edi]
  41d8c6:	mov    WORD PTR [esi+0x2ea45395],?
  41d8cc:	icebp  
  41d8cd:	loope  0x41d87c
  41d8cf:	push   ecx
  41d8d0:	ds sbb eax,0xb0a203e5
  41d8d6:	xor    BYTE PTR [ecx+esi*1+0x5dcff59f],bl
  41d8dd:	inc    ebp
  41d8de:	mov    bh,0x19
  41d8e0:	push   edx
  41d8e1:	sar    BYTE PTR [ebx+0x5ecd92e0],0xd4
  41d8e8:	popf   
  41d8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ea:	outs   dx,DWORD PTR ds:[esi]
  41d8eb:	mov    ds:0xf90d6371,eax
  41d8f0:	into   
  41d8f1:	iret   
  41d8f2:	pop    ds
  41d8f3:	jnp    0x41d946
  41d8f5:	sahf   
  41d8f6:	ret    
  41d8f7:	mov    esi,0x43ea7f6b
  41d8fc:	and    ah,BYTE PTR [eax]
  41d8fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8ff:	add    ebp,ebp
  41d901:	and    ebp,ebp
  41d903:	mov    al,ds:0xe4032dad
  41d908:	(bad)  
  41d909:	cmp    esp,ecx
  41d90b:	sti    
  41d90c:	cmp    eax,0x95d9ef3e
  41d911:	and    dl,BYTE PTR [bx-0x7]
  41d915:	adc    eax,0xf0c318a5
  41d91a:	loope  0x41d920
  41d91c:	pop    ebx
  41d91d:	fnsave ds:[ecx]
  41d920:	sar    dl,cl
  41d922:	aam    0x73
  41d924:	rcl    ebx,cl
  41d926:	int    0xbc
  41d928:	mov    ch,0x12
  41d92a:	pusha  
  41d92b:	ins    DWORD PTR es:[edi],dx
  41d92c:	(bad)
  41d92f:	jp     0x41d8cd
  41d931:	pop    edx
  41d932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d933:	xlat   BYTE PTR ds:[ebx]
  41d934:	aam    0xed
  41d936:	adc    BYTE PTR [edi+0x26a31d95],cl
  41d93c:	sbb    BYTE PTR fs:[eax],cl
  41d93f:	inc    ebp
  41d940:	cmc    
  41d941:	cmp    al,dh
  41d943:	popa   
  41d944:	dec    ebp
  41d945:	fdivr  QWORD PTR [ebp-0x7586447]
  41d94b:	call   0x225cf5d3
  41d950:	popa   
  41d951:	aaa    
  41d952:	xor    eax,0x390d8796
  41d957:	je     0x41d92a
  41d959:	addr16 (bad) 
  41d95b:	not    al
  41d95d:	sub    BYTE PTR [eax+0x58ccc954],dl
  41d963:	repz in eax,0x1
  41d966:	inc    eax
  41d967:	ins    BYTE PTR es:[edi],dx
  41d968:	sub    eax,0xb4ae186e
  41d96d:	add    al,0x5b
  41d96f:	stos   DWORD PTR es:[edi],eax
  41d970:	and    BYTE PTR [edx+0x5d],0xfc
  41d974:	loop   0x41d8fd
  41d976:	fdivr  QWORD PTR [edi]
  41d978:	js     0x41d91f
  41d97a:	ret    
  41d97b:	clc    
  41d97c:	sbb    DWORD PTR [edx-0x7a8b0487],esp
  41d982:	in     al,0xbf
  41d984:	outs   dx,BYTE PTR ds:[esi]
  41d985:	or     al,0x1c
  41d987:	mov    ecx,0xa36b8d53
  41d98c:	mov    al,ds:0x312074c3
  41d991:	xchg   ebp,eax
  41d992:	inc    ebx
  41d993:	test   al,0x9b
  41d995:	sub    al,0xb7
  41d997:	scas   eax,DWORD PTR es:[edi]
  41d998:	fiadd  DWORD PTR [ebx-0x20057db]
  41d99e:	hlt    
  41d99f:	out    dx,eax
  41d9a0:	mov    al,fs:0x41621b1b
  41d9a6:	or     al,0xe
  41d9a8:	adc    DWORD PTR [edx],ebx
  41d9aa:	xor    DWORD PTR ds:0x2d34818d,esi
  41d9b0:	outs   dx,DWORD PTR ds:[esi]
  41d9b1:	enter  0x9958,0xd
  41d9b5:	les    edx,FWORD PTR ds:0x703c7769
  41d9bb:	and    DWORD PTR [ebp-0x18],0x1f
  41d9bf:	adc    al,0x6c
  41d9c1:	sahf   
  41d9c2:	int3   
  41d9c3:	add    BYTE PTR [ebx+eiz*2],ch
  41d9c6:	out    dx,eax
  41d9c7:	push   esi
  41d9c8:	icebp  
  41d9c9:	adc    eax,0xf66ecb5d
  41d9ce:	jae    0x41d9d3
  41d9d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d1:	sbb    BYTE PTR [ecx],ah
  41d9d3:	loop   0x41d9f5
  41d9d5:	shl    BYTE PTR [esi+0x4],1
  41d9d8:	pushf  
  41d9d9:	(bad)  
  41d9da:	in     al,dx
  41d9db:	mov    ds:0xd4582e06,eax
  41d9e0:	inc    esi
  41d9e1:	adc    eax,0x4073b53c
  41d9e6:	mov    ds:0x8da1c3a5,al
  41d9eb:	xchg   ebp,eax
  41d9ec:	lock and al,0x78
  41d9ef:	retf   
  41d9f0:	inc    ebx
  41d9f1:	lsl    edx,WORD PTR [eax+0x28]
  41d9f5:	xor    DWORD PTR [edx-0x8],ebp
  41d9f8:	loopne 0x41d98e
  41d9fa:	ror    ch,1
  41d9fc:	sbb    al,0x9
  41d9fe:	adc    DWORD PTR [ebp+0x3c172fdf],0xffffffe1
  41da05:	test   eax,0xebc47d37
  41da0a:	outs   dx,BYTE PTR ds:[esi]
  41da0b:	aam    0x51
  41da0d:	retf   
  41da0e:	ror    esi,1
  41da10:	add    dh,BYTE PTR [ecx+0x21]
  41da13:	test   BYTE PTR [esi-0x3],bl
  41da16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da17:	test   BYTE PTR ds:0x2a505d1a,ch
  41da1d:	jo     0x41da7b
  41da1f:	jge    0x41da46
  41da21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da22:	fwait
  41da23:	cmp    eax,0xc78b5b1e
  41da28:	push   ebx
  41da29:	xchg   ebx,eax
  41da2a:	cmp    BYTE PTR [ecx+esi*2+0x32],cl
  41da2e:	mov    eax,ds:0xee3c00b8
  41da33:	jl     0x41d9ed
  41da35:	push   edi
  41da36:	sbb    DWORD PTR ds:0x41ca2b42,eax
  41da3c:	pop    eax
  41da3d:	icebp  
  41da3e:	iret   
  41da3f:	jmp    0xdcb9038e
  41da44:	dec    ebx
  41da45:	cmp    esi,DWORD PTR [ebx-0x68]
  41da48:	into   
  41da49:	sahf   
  41da4a:	cdq    
  41da4b:	leave  
  41da4c:	push   esi
  41da4d:	fadd   QWORD PTR [edi]
  41da4f:	jnp    0x41da88
  41da51:	mov    esp,0x72b60a1e
  41da56:	fcom   st(4)
  41da58:	out    0x49,eax
  41da5a:	inc    esi
  41da5b:	rcl    DWORD PTR [edx-0x297f39bf],1
  41da61:	aad    0xd
  41da63:	mov    bh,0x2c
  41da65:	inc    edx
  41da66:	adc    ah,BYTE PTR [edi+0x184b43d7]
  41da6c:	mov    eax,0x47e9cf69
  41da71:	inc    esp
  41da72:	lahf   
  41da73:	ret    0x9223
  41da76:	push   ebp
  41da77:	aad    0x7e
  41da79:	fsubrp st(5),st
  41da7b:	pop    eax
  41da7c:	mov    ah,0xa7
  41da7e:	push   eax
  41da7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da80:	dec    esp
  41da81:	pop    ebx
  41da82:	jmp    0x8d85:0xa4cdf616
  41da89:	jecxz  0x41dab5
  41da8b:	(bad)  
  41da8c:	gs ret 
  41da8e:	into   
  41da8f:	gs mov ecx,0x90061665
  41da95:	jns    0x41db0f
  41da97:	pop    ss
  41da98:	stos   DWORD PTR es:[edi],eax
  41da99:	cmp    esp,DWORD PTR [edi]
  41da9b:	(bad)  
  41da9c:	push   esi
  41da9d:	lods   al,BYTE PTR ds:[esi]
  41da9e:	pop    edx
  41da9f:	xor    BYTE PTR [esi],ah
  41daa1:	adc    ch,cl
  41daa3:	retf   
  41daa4:	test   ch,0xeb
  41daa7:	bound  eax,QWORD PTR [esi+ebp*4+0x1f770e9]
  41daae:	jo     0x41db09
  41dab0:	pushf  
  41dab1:	aam    0x38
  41dab3:	xchg   esp,eax
  41dab4:	(bad)  
  41dab5:	jp     0x41daf8
  41dab7:	xchg   edi,eax
  41dab8:	jge    0x41da57
  41daba:	xchg   edi,eax
  41dabb:	add    eax,0x35d3494c
  41dac0:	mov    esi,0x7e605cf4
  41dac5:	add    al,0xa8
  41dac7:	add    eax,0x9ed152d4
  41dacc:	xchg   ebx,eax
  41dacd:	xchg   edx,eax
  41dace:	cld    
  41dacf:	sub    eax,0x2d4b1227
  41dad4:	in     al,dx
  41dad5:	jmp    0xd9b35bc
  41dada:	aaa    
  41dadb:	(bad)  
  41dadc:	jne    0x41daa1
  41dade:	lds    esp,FWORD PTR [esi-0x42]
  41dae1:	mov    ds:0xa3c82129,al
  41dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae7:	mov    ecx,0x95777fee
  41daec:	leave  
  41daed:	arpl   di,ax
  41daef:	mov    dl,0x43
  41daf1:	xchg   DWORD PTR [eax+0x5e],edx
  41daf4:	add    DWORD PTR [esi],edx
  41daf6:	mov    ebx,DWORD PTR [edi-0x3a]
  41daf9:	fxch   st(7)
  41dafb:	xchg   ebp,eax
  41dafc:	inc    ecx
  41dafd:	xchg   ebx,eax
  41dafe:	repnz idiv DWORD PTR [ecx+ecx*4-0x57]
  41db03:	and    dl,BYTE PTR [ebx-0x7d4c2743]
  41db09:	icebp  
  41db0a:	xor    al,0x9c
  41db0c:	das    
  41db0d:	in     al,dx
  41db0e:	(bad)  
  41db0f:	ja     0x41db1e
  41db11:	push   cs
  41db12:	jb     0x41dad6
  41db14:	mov    eax,ds:0x2e188ff9
  41db19:	xor    eax,0xca24ea30
  41db1e:	sbb    al,0x8a
  41db20:	inc    ebp
  41db21:	repnz pop ecx
  41db23:	cmp    ah,BYTE PTR [ecx+0x3f546a2a]
  41db29:	aad    0xdf
  41db2b:	sbb    al,0x90
  41db2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2e:	jmp    0xe6cab6af
  41db33:	es inc eax
  41db35:	inc    ebx
  41db36:	retf   
  41db37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db38:	push   edx
  41db39:	call   0x9e6eea5a
  41db3e:	leave  
  41db3f:	aam    0x57
  41db41:	xchg   edi,eax
  41db42:	xlat   BYTE PTR ds:[ebx]
  41db43:	mov    al,0x2
  41db45:	sbb    ch,BYTE PTR [ebp-0x5e]
  41db48:	add    DWORD PTR gs:[edx-0x175f3f7],edi
  41db4f:	out    0x22,al
  41db51:	pop    es
  41db52:	add    esi,esp
  41db54:	mov    DWORD PTR [ecx+0x4a7359f7],esp
  41db5a:	pop    ebx
  41db5b:	jmp    0x41daed
  41db5d:	pop    edi
  41db5e:	pop    ds
  41db5f:	gs xchg edx,eax
  41db61:	arpl   WORD PTR [esi+0xa4524e],cx
  41db67:	sahf   
  41db68:	inc    eax
  41db69:	repnz and esi,DWORD PTR [ebx-0xc]
  41db6d:	jmp    0x127a75c8
  41db72:	retf   0x1285
  41db75:	test   eax,0xbf3805da
  41db7a:	cli    
  41db7b:	jb     0x41db9e
  41db7d:	dec    esi
  41db7e:	push   cs
  41db7f:	shr    BYTE PTR [eax-0x41f14388],0x24
  41db86:	push   ebx
  41db87:	test   al,0x27
  41db89:	pop    ebp
  41db8a:	loop   0x41db4a
  41db8c:	cmp    al,al
  41db8e:	cs inc esp
  41db90:	cmp    BYTE PTR [esi],0x11
  41db93:	or     edx,DWORD PTR [esi-0x70dae461]
  41db99:	mov    ds:0x8d48f7b4,eax
  41db9e:	mov    WORD PTR [edx],ds
  41dba0:	mov    al,0x1c
  41dba2:	retf   0xc137
  41dba5:	sub    eax,0x3c663477
  41dbaa:	daa    
  41dbab:	sub    DWORD PTR [ebp+0x52],ecx
  41dbae:	pop    ds
  41dbaf:	daa    
  41dbb0:	rcr    eax,0x69
  41dbb3:	sar    DWORD PTR [ebp+edx*2+0x5d2c5760],cl
  41dbba:	ins    BYTE PTR es:[edi],dx
  41dbbb:	addr16 mov edx,ebx
  41dbbe:	icebp  
  41dbbf:	sub    BYTE PTR [ebx-0x613bc5ab],ch
  41dbc5:	jmp    0x41dc17
  41dbc7:	xchg   esp,eax
  41dbc9:	push   eax
  41dbca:	pusha  
  41dbcb:	lea    eax,[esi+0x71]
  41dbce:	imul   BYTE PTR [edx+0x57f538bc]
  41dbd4:	mov    ds:0x231b66d8,al
  41dbd9:	inc    esi
  41dbda:	pop    esi
  41dbdb:	or     al,0x8d
  41dbdd:	dec    esp
  41dbde:	and    al,ch
  41dbe0:	mov    dl,0x41
  41dbe2:	adc    eax,0x2ef05e59
  41dbe7:	pop    edx
  41dbe8:	mov    ecx,0xdde7295d
  41dbed:	cmp    BYTE PTR ds:0xc4c38292,dh
  41dbf3:	cmp    BYTE PTR [ebx],dh
  41dbf5:	pop    ecx
  41dbf6:	add    DWORD PTR [ebx+0x16],esp
  41dbf9:	imul   eax,ebx,0x4f7988db
  41dbff:	(bad)  
  41dc00:	xlat   BYTE PTR ds:[ebx]
  41dc01:	scas   eax,DWORD PTR es:[edi]
  41dc02:	or     cl,ch
  41dc04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc05:	iret   
  41dc06:	adc    eax,edi
  41dc08:	sub    BYTE PTR [ebp+0x4],0xbd
  41dc0c:	adc    cl,dl
  41dc0e:	mov    ds:0x59266a18,al
  41dc13:	sub    eax,0x25295b49
  41dc18:	push   esi
  41dc19:	cmp    dh,BYTE PTR ds:0x83e2c91a
  41dc1f:	iret   
  41dc20:	loop   0x41dbbf
  41dc22:	cmp    DWORD PTR [ebx],ecx
  41dc24:	sub    al,0x3c
  41dc26:	pop    ds
  41dc27:	sbb    DWORD PTR [eiz*2-0x52ce6a09],esi
  41dc2e:	enter  0x5433,0x45
  41dc32:	mov    ch,0x57
  41dc34:	iret   
  41dc35:	cdq    
  41dc36:	addr16 add eax,0xe13b5206
  41dc3c:	or     al,0xfa
  41dc3e:	jns    0x41dbc9
  41dc40:	pop    edx
  41dc41:	ins    BYTE PTR es:[edi],dx
  41dc42:	mov    bh,BYTE PTR [eax-0x66010daa]
  41dc48:	mov    eax,ecx
  41dc4a:	pop    eax
  41dc4b:	stos   BYTE PTR es:[edi],al
  41dc4c:	enter  0x7d0e,0x18
  41dc50:	test   edi,0xd6f1dc1a
  41dc56:	test   DWORD PTR [ebx],edx
  41dc58:	mov    ?,esi
  41dc5a:	push   eax
  41dc5b:	imul   edx,DWORD PTR [edx+0x382b34de],0x2a519713
  41dc65:	jae    0x41dc41
  41dc67:	sbb    dl,BYTE PTR [ebx+0x15]
  41dc6a:	pusha  
  41dc6b:	xchg   edi,eax
  41dc6c:	pop    edi
  41dc6d:	or     al,0x43
  41dc6f:	adc    bl,cl
  41dc71:	out    0x75,eax
  41dc73:	mov    ch,0x7a
  41dc75:	nop
  41dc76:	push   ebp
  41dc77:	xchg   ebx,eax
  41dc78:	xchg   ebp,eax
  41dc79:	dec    ecx
  41dc7a:	sub    cl,BYTE PTR [ebx]
  41dc7c:	stos   DWORD PTR es:[edi],eax
  41dc7d:	jb     0x41dc7d
  41dc7f:	pop    esi
  41dc80:	push   esi
  41dc81:	std    
  41dc82:	xor    BYTE PTR [ebp-0x55],0x61
  41dc86:	xchg   ecx,eax
  41dc87:	xchg   ebp,eax
  41dc88:	dec    BYTE PTR [esi+0x32]
  41dc8b:	add    DWORD PTR [esi-0x59],eax
  41dc8e:	(bad)
  41dc92:	ret    0xb166
  41dc95:	rcl    DWORD PTR [ecx],1
  41dc97:	jl     0x41dcc9
  41dc99:	call   0xd990:0x51e4cdd7
  41dca0:	jle    0x41dcda
  41dca2:	sub    al,0xa
  41dca4:	xchg   ebx,eax
  41dca5:	mov    ebx,0xadeae6dd
  41dcaa:	imul   BYTE PTR [ebx]
  41dcac:	add    eax,0xa1c58407
  41dcb1:	mov    ah,0xc0
  41dcb3:	pop    edx
  41dcb4:	(bad)  
  41dcb6:	sbb    eax,0xb5b2a94a
  41dcbb:	jne    0x41dc63
  41dcbd:	test   DWORD PTR [ecx+ebx*4+0x7f],0xfd3f90e5
  41dcc5:	xlat   BYTE PTR ds:[ebx]
  41dcc6:	pop    edx
  41dcc7:	and    al,0x42
  41dcc9:	jo     0x41dcc6
  41dccb:	xchg   esp,eax
  41dccc:	cld    
  41dccd:	cwde   
  41dcce:	or     al,0xb5
  41dcd0:	jne    0x41dcb5
  41dcd2:	dec    ebx
  41dcd3:	dec    edi
  41dcd4:	mov    al,0xdd
  41dcd6:	rcr    cl,0x56
  41dcd9:	daa    
  41dcda:	ret    0xe15
  41dcdd:	inc    edi
  41dcde:	mov    ecx,0xa8304786
  41dce3:	and    eax,0xe2598e27
  41dce8:	shr    DWORD PTR [edi],0x11
  41dceb:	mov    edx,0xd99f63d3
  41dcf0:	jbe    0x41dd12
  41dcf2:	cmp    ecx,edi
  41dcf4:	sbb    DWORD PTR [edx-0x30],esp
  41dcf7:	push   ebx
  41dcf8:	in     al,dx
  41dcf9:	imul   eax,DWORD PTR ds:0xd7f0d81b,0x1b632aa5
  41dd03:	fucomp st(0)
  41dd05:	(bad)  
  41dd07:	mov    BYTE PTR [ecx+0x21eb9488],ah
  41dd0d:	cmp    DWORD PTR [ecx],edi
  41dd0f:	mov    ch,0xff
  41dd11:	rcl    BYTE PTR [edx+eax*2],cl
  41dd14:	fbstp  TBYTE PTR ds:0x9b4ac8b6
  41dd1a:	in     al,0xd
  41dd1c:	mov    al,0x29
  41dd1e:	or     edi,DWORD PTR [ebx+edi*4-0x9686be2]
  41dd25:	jo     0x41dcc4
  41dd27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd28:	push   esp
  41dd29:	enter  0xc035,0x80
  41dd2d:	mov    ds:0x564959ee,eax
  41dd32:	je     0x41ddb0
  41dd34:	mov    eax,0x2e45046b
  41dd39:	dec    edx
  41dd3a:	js     0x41dd02
  41dd3c:	inc    edx
  41dd3d:	(bad)  
  41dd3f:	sbb    eax,0x40e28d8e
  41dd44:	outs   dx,DWORD PTR ds:[esi]
  41dd45:	outs   dx,DWORD PTR ds:[esi]
  41dd46:	adc    edi,eax
  41dd48:	fidivr WORD PTR cs:[ebp-0x70]
  41dd4c:	loope  0x41dcdd
  41dd4e:	leave  
  41dd4f:	test   BYTE PTR [eax+0x2d],dh
  41dd52:	xor    eax,0x297a0bfd
  41dd57:	jbe    0x41dd68
  41dd59:	pop    ebx
  41dd5a:	xchg   esi,eax
  41dd5b:	ret    0xc723
  41dd5e:	data16 (bad) 
  41dd60:	pop    ebx
  41dd61:	xchg   esi,esi
  41dd63:	jo     0x41dd33
  41dd65:	cli    
  41dd66:	mov    sp,0x64d2
  41dd6a:	push   ebx
  41dd6b:	int    0xd5
  41dd6d:	inc    ebx
  41dd6e:	xchg   edi,eax
  41dd6f:	mov    esp,0xcffe491a
  41dd74:	sbb    al,0xd1
  41dd76:	sbb    edi,DWORD PTR ds:0x1e780345
  41dd7c:	or     DWORD PTR [eax+edi*4-0x3e3f99b2],0x1f
  41dd84:	mov    WORD PTR [ecx-0xc],fs
  41dd87:	and    BYTE PTR cs:[eax+0x4c],0xe2
  41dd8c:	xor    al,0xd6
  41dd8e:	sar    DWORD PTR [edx],1
  41dd90:	ret    0xe1aa
  41dd93:	loop   0x41ddb6
  41dd95:	xor    DWORD PTR [ebx*2+0x76ddf9c7],ebx
  41dd9c:	(bad)  
  41dd9d:	fnstsw WORD PTR [edi]
  41dd9f:	dec    eax
  41dda0:	mov    esp,ebp
  41dda2:	cmp    BYTE PTR [edi+0x16107d54],0x29
  41dda9:	mov    esi,0x403104ed
  41ddae:	pop    ebx
  41ddaf:	jbe    0x41ddda
  41ddb1:	into   
  41ddb2:	xor    eax,0x94b4fca
  41ddb7:	nop
  41ddb8:	shl    dl,0x63
  41ddbb:	pause  
  41ddbd:	adc    ecx,DWORD PTR [edx+0x64]
  41ddc0:	cli    
  41ddc1:	shl    BYTE PTR [ecx],cl
  41ddc3:	adc    cl,BYTE PTR [ecx-0x370c5062]
  41ddc9:	jmp    FWORD PTR [edi-0x3ff17af6]
  41ddcf:	ds icebp 
  41ddd1:	sub    ebp,DWORD PTR [esi]
  41ddd3:	xchg   esi,eax
  41ddd4:	dec    edx
  41ddd5:	es mov bh,0x72
  41ddd8:	pushf  
  41ddd9:	hlt    
  41ddda:	mov    ecx,0xec273689
  41dddf:	xor    ebp,DWORD PTR [ecx+0x24e44d32]
  41dde5:	jb     0x41ddbd
  41dde7:	mov    esi,0x873227a9
  41ddec:	pop    ecx
  41dded:	stc    
  41ddee:	leave  
  41ddef:	les    ebx,FWORD PTR [edi+0x1]
  41ddf2:	ret    
  41ddf3:	pop    esp
  41ddf4:	cld    
  41ddf5:	xor    DWORD PTR [ecx],esp
  41ddf7:	mov    BYTE PTR ds:0x44314640,dl
  41ddfd:	lea    edi,ds:0xf14c3985
  41de03:	sbb    al,dh
  41de05:	call   0x55864d9c
  41de0a:	mov    al,ds:0x1912da30
  41de0f:	scas   eax,DWORD PTR es:[edi]
  41de10:	out    dx,eax
  41de11:	aaa    
  41de12:	inc    edi
  41de13:	mov    ds:0xa84b20e,al
  41de18:	push   ds
  41de19:	ficomp DWORD PTR [edi]
  41de1b:	push   es
  41de1c:	mov    eax,0x96464ba4
  41de21:	(bad)  
  41de22:	icebp  
  41de23:	dec    esp
  41de24:	add    cl,bh
  41de26:	pop    esi
  41de27:	dec    edx
  41de28:	into   
  41de29:	mov    WORD PTR [esi-0x2c],gs
  41de2c:	addr16 int3 
  41de2e:	daa    
  41de2f:	mov    bl,0xf4
  41de31:	xor    BYTE PTR [eax],0x3
  41de34:	push   0xe8c6c639
  41de39:	(bad)  
  41de3b:	call   0xd77557fc
  41de40:	xor    eax,0xa1760673
  41de45:	(bad)  [edi]
  41de47:	in     eax,dx
  41de48:	fimul  DWORD PTR [edx]
  41de4a:	adc    eax,0xd332f168
  41de4f:	cmp    edi,DWORD PTR [edx]
  41de51:	xor    bh,BYTE PTR [eax]
  41de53:	hlt    
  41de54:	mov    al,ds:0x4f99736a
  41de59:	ins    DWORD PTR es:[edi],dx
  41de5a:	popf   
  41de5b:	adc    BYTE PTR [edx+ecx*1+0x68],0x4a
  41de60:	push   edx
  41de61:	outs   dx,DWORD PTR ds:[esi]
  41de62:	pop    es
  41de63:	je     0x41de71
  41de65:	cwde   
  41de66:	imul   eax,DWORD PTR [esi+0x3],0x6223a95d
  41de6d:	dec    ebx
  41de6e:	icebp  
  41de6f:	xchg   DWORD PTR [eax],esp
  41de71:	jnp    0x41ddf4
  41de73:	outs   dx,DWORD PTR ds:[esi]
  41de74:	pslld  mm0,QWORD PTR [edi+edi*2+0x9]
  41de79:	sbb    eax,0xcfbeed1d
  41de7e:	scas   al,BYTE PTR es:[edi]
  41de7f:	out    dx,eax
  41de80:	push   esp
  41de81:	jb     0x41def9
  41de83:	fisub  WORD PTR [esi]
  41de85:	add    eax,DWORD PTR [edx]
  41de87:	sbb    ebp,edi
  41de89:	sahf   
  41de8a:	inc    edi
  41de8b:	pop    ecx
  41de8c:	mov    cl,0x29
  41de8e:	mov    esi,0xd8672000
  41de93:	cmp    eax,0xc5d3968
  41de98:	xchg   ecx,eax
  41de99:	pop    edx
  41de9a:	jns    0x41df0a
  41de9c:	aad    0xc5
  41de9e:	jbe    0x41decf
  41dea0:	push   ss
  41dea1:	jmp    0xabfd:0x4f453901
  41dea8:	int    0xc7
  41deaa:	stos   DWORD PTR es:[edi],eax
  41deab:	ss jecxz 0x41de4c
  41deae:	leave  
  41deaf:	and    al,0x7d
  41deb1:	aad    0x1b
  41deb3:	inc    ebx
  41deb4:	pop    edi
  41deb5:	fs call 0x292f:0x9239903c
  41debd:	shr    DWORD PTR [eax-0x38],cl
  41dec0:	fpatan 
  41dec2:	pop    ds
  41dec3:	out    dx,al
  41dec4:	sub    ch,bl
  41dec6:	addr16 mov bh,0x1a
  41dec9:	sub    BYTE PTR [ecx-0x1a28b733],dl
  41decf:	loope  0x41de92
  41ded1:	call   0xb95a:0xaba620c
  41ded8:	dec    eax
  41ded9:	out    0x6a,al
  41dedb:	adc    bl,BYTE PTR [bx-0x2239]
  41dee0:	and    al,0xf2
  41dee2:	pop    esp
  41dee3:	mov    dh,0xfd
  41dee5:	mov    ecx,0x6298185
  41deea:	add    ah,bl
  41deec:	(bad)  
  41deed:	in     eax,dx
  41deee:	or     edi,DWORD PTR [ebx-0x5fb81c99]
  41def4:	loop   0x41deaa
  41def6:	(bad)  
  41def7:	mov    ?,WORD PTR [edi+0x71337b8c]
  41defd:	mov    ds:0x87e76c07,eax
  41df02:	aaa    
  41df03:	pop    esi
  41df04:	fs js  0x41df02
  41df07:	pop    esi
  41df08:	mov    al,0x57
  41df0a:	push   edi
  41df0b:	xchg   ebp,eax
  41df0c:	cmp    BYTE PTR [ebp-0x6ec86c9],cl
  41df12:	pop    es
  41df13:	or     BYTE PTR [edi+0x4be61bb1],dh
  41df19:	ret    
  41df1a:	je     0x41df3b
  41df1c:	xchg   DWORD PTR [esi+0x1dce5e5a],ebx
  41df22:	enter  0x2082,0x72
  41df26:	and    ecx,DWORD PTR [edi]
  41df28:	div    BYTE PTR [ecx-0x4683db1f]
  41df2e:	jg     0x41df80
  41df30:	add    DWORD PTR [eax-0x7e],ecx
  41df33:	add    al,BYTE PTR [ebx-0x7c1782bf]
  41df39:	bound  edx,QWORD PTR [edi+edx*8-0x3492481b]
  41df40:	mov    ch,bl
  41df42:	test   DWORD PTR [ebx+ebp*1],ebx
  41df45:	or     ecx,ebp
  41df47:	or     ebx,0x4a
  41df4a:	or     DWORD PTR [ebx+edi*4],esp
  41df4d:	cmp    dl,cl
  41df4f:	dec    edi
  41df50:	push   ebx
  41df51:	(bad)  
  41df52:	in     al,dx
  41df53:	ds gs xchg dl,dh
  41df57:	jno    0x41df8e
  41df59:	shl    DWORD PTR [esi+ecx*8],cl
  41df5c:	mov    ds:0x9cb28cd1,al
  41df61:	clc    
  41df62:	sub    eax,0xece299da
  41df67:	ins    DWORD PTR es:[edi],dx
  41df68:	sbb    dl,BYTE PTR [ebp+0x2cd97b38]
  41df6e:	aas    
  41df6f:	pop    ds
  41df70:	mov    ch,0x1d
  41df72:	mov    dl,0x79
  41df74:	xor    al,0x54
  41df76:	adc    BYTE PTR [esi+ecx*8-0x4a9785b1],0x16
  41df7e:	add    al,0x18
  41df80:	rol    DWORD PTR [esi],1
  41df82:	cmc    
  41df83:	mov    esi,0xebd1b718
  41df88:	sub    BYTE PTR [eax],0x29
  41df8b:	or     DWORD PTR [eax+0x720d0086],edx
  41df91:	nop
  41df92:	fldenv [ebx+0x5e]
  41df95:	adc    al,0x5c
  41df97:	std    
  41df98:	inc    edx
  41df99:	mov    ebp,0x85812da3
  41df9e:	mov    al,ds:0xd9032e62
  41dfa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfa4:	mov    ah,0x29
  41dfa6:	sub    BYTE PTR [edi+edx*2],ch
  41dfa9:	mov    ds:0xb4d2cb3f,al
  41dfae:	jle    0x41dfa6
  41dfb0:	aas    
  41dfb1:	inc    ebp
  41dfb2:	jne    0x41dfc2
  41dfb4:	iret   
  41dfb5:	pop    edx
  41dfb6:	pop    esp
  41dfb7:	add    DWORD PTR [ecx],0x84ca816
  41dfbd:	test   al,0x73
  41dfbf:	mov    eax,0x958591b5
  41dfc4:	cwde   
  41dfc5:	scas   eax,DWORD PTR es:[edi]
  41dfc6:	fimul  DWORD PTR [ecx-0x12]
  41dfc9:	test   eax,0xf89d666d
  41dfce:	mov    BYTE PTR [ebx],0x7e
  41dfd1:	aam    0x7
  41dfd3:	push   ebp
  41dfd4:	rcr    DWORD PTR ds:0x9a6840f,1
  41dfda:	jb     0x41dfae
  41dfdc:	xor    DWORD PTR [eax+0x7e3126ef],edi
  41dfe2:	or     edi,DWORD PTR [ebx-0x3fcaad3]
  41dfe8:	shr    BYTE PTR [ebx+edi*2-0x5bb15bf1],cl
  41dfef:	pop    esp
  41dff0:	fwait
  41dff1:	in     eax,0x85
  41dff3:	lahf   
  41dff4:	xor    al,0xf8
  41dff6:	dec    edx
  41dff7:	jecxz  0x41e03c
  41dff9:	mov    al,BYTE PTR [ebp+0x11]
  41dffc:	das    
  41dffd:	out    dx,al
  41dffe:	or     eax,0xb3c68ad6
  41e003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e004:	mov    DWORD PTR [edx+0x3c],esi
  41e007:	push   0x16
  41e009:	jne    0x41df90
  41e00b:	and    bl,bh
  41e00d:	mov    esp,DWORD PTR [esp+eax*1]
  41e010:	scas   eax,DWORD PTR es:[edi]
  41e011:	or     al,0x38
  41e013:	iret   
  41e014:	mov    dl,0xe0
  41e016:	inc    esp
  41e017:	inc    eax
  41e018:	fild   DWORD PTR ds:0xfe8f83ee
  41e01e:	sbb    al,BYTE PTR [esp+esi*8+0x26]
  41e022:	mov    ?,ebp
  41e024:	mov    BYTE PTR [ebx-0x6e09f2ba],ch
  41e02a:	mov    ch,0xdc
  41e02c:	add    al,0xd8
  41e02f:	test   BYTE PTR [edx],0x3d
  41e032:	add    BYTE PTR ds:0xb6c668f6,ah
  41e038:	fisub  DWORD PTR [ecx+0x5d5a1ad]
  41e03e:	add    eax,0x206564f9
  41e043:	leave  
  41e044:	(bad)  
  41e045:	std    
  41e046:	push   ss
  41e047:	push   eax
  41e048:	xor    ebx,DWORD PTR [ebp-0x4f]
  41e04b:	(bad)  
  41e04c:	sub    ebp,edx
  41e04e:	adc    dl,BYTE PTR [edi]
  41e050:	out    dx,al
  41e051:	jge    0x41e0c2
  41e053:	leave  
  41e054:	leave  
  41e055:	cmp    dl,ah
  41e057:	inc    eax
  41e058:	inc    esp
  41e059:	mov    gs,edi
  41e05b:	ja     0x41e020
  41e05d:	fild   WORD PTR [esi-0x6a67bd7f]
  41e063:	push   edx
  41e064:	jp     0x41e054
  41e066:	push   es
  41e067:	jl     0x41e073
  41e069:	mov    cl,0xe0
  41e06b:	xchg   ebp,eax
  41e06c:	addr16 inc ecx
  41e06e:	jl     0x41e083
  41e070:	dec    ebp
  41e071:	or     BYTE PTR [ebx-0x9c678be],bh
  41e077:	test   eax,0x2bb63aa1
  41e07c:	inc    esp
  41e07d:	pop    esp
  41e07e:	test   BYTE PTR [edi+0x578c17dc],cl
  41e084:	out    dx,eax
  41e085:	jbe    0x41e038
  41e087:	loop   0x41e085
  41e089:	jne    0x41e084
  41e08b:	sbb    al,0x5e
  41e08d:	add    ebx,ebx
  41e08f:	dec    ebx
  41e090:	dec    DWORD PTR [ebx]
  41e092:	pop    edx
  41e093:	jmp    0x41e038
  41e095:	sub    esi,ebx
  41e097:	jbe    0x41e083
  41e099:	pushf  
  41e09a:	jmp    0xa3418396
  41e09f:	or     al,0x40
  41e0a1:	aas    
  41e0a2:	pop    ebp
  41e0a3:	inc    edx
  41e0a4:	or     DWORD PTR [edx+0x56],esi
  41e0a7:	jns    0x41e0c5
  41e0a9:	mov    ds:0x33771e80,eax
  41e0ae:	fdivr  QWORD PTR [ebp-0x17]
  41e0b1:	push   esp
  41e0b2:	jb     0x41e0ec
  41e0b4:	pop    ebx
  41e0b5:	jbe    0x41e069
  41e0b7:	pop    edi
  41e0b8:	mov    eax,ds:0x767ddf98
  41e0bd:	stos   BYTE PTR es:[edi],al
  41e0be:	repnz xor al,0xbc
  41e0c1:	push   edx
  41e0c2:	stos   BYTE PTR es:[edi],al
  41e0c3:	pop    ebp
  41e0c4:	jno    0x41e078
  41e0c6:	sub    bl,BYTE PTR [eax]
  41e0c8:	je     0x41e12c
  41e0ca:	les    ebp,FWORD PTR [ebp-0x3b]
  41e0cd:	pop    edi
  41e0ce:	sbb    edx,esi
  41e0d0:	fcom   QWORD PTR [edx+0x6164027c]
  41e0d6:	pop    esi
  41e0d7:	js     0x41e088
  41e0d9:	dec    esi
  41e0da:	jl     0x41e10b
  41e0dc:	(bad)  
  41e0dd:	fild   DWORD PTR [ecx-0x14]
  41e0e0:	sbb    al,0xa2
  41e0e2:	xchg   edi,eax
  41e0e3:	jl     0x41e109
  41e0e5:	dec    esi
  41e0e6:	push   0x5c
  41e0e8:	push   eax
  41e0e9:	mov    bl,0x80
  41e0eb:	jnp    0x41e07f
  41e0ed:	sub    BYTE PTR [ebx],dh
  41e0ef:	popf   
  41e0f0:	ins    DWORD PTR es:[edi],dx
  41e0f1:	lahf   
  41e0f2:	mov    cl,BYTE PTR [esi-0x14a65344]
  41e0f8:	and    BYTE PTR [esp+esi*8+0x65],bl
  41e0fc:	pop    esi
  41e0fd:	pop    es
  41e0fe:	xor    eax,0x1981e3c2
  41e103:	leave  
  41e104:	addr16 push 0x28
  41e107:	lock nop
  41e109:	mov    dh,0x4e
  41e10b:	pop    esi
  41e10c:	sbb    BYTE PTR [ecx],bl
  41e10e:	dec    ebx
  41e10f:	push   ecx
  41e110:	scas   eax,DWORD PTR es:[edi]
  41e111:	sahf   
  41e112:	mov    esi,0x5640ddb3
  41e117:	out    dx,eax
  41e118:	leave  
  41e119:	xchg   esi,eax
  41e11a:	mov    esi,0xcfe4427e
  41e11f:	mov    eax,ds:0x1f433451
  41e124:	pop    esp
  41e125:	mov    ebx,0xce7882f4
  41e12a:	push   edi
  41e12b:	adc    al,0x3d
  41e12d:	fwait
  41e12e:	pop    ecx
  41e12f:	cs popa 
  41e131:	push   edx
  41e132:	fldenv [ebx-0x60]
  41e135:	mov    bl,bh
  41e137:	sub    DWORD PTR [ecx],esi
  41e139:	push   cs
  41e13a:	cdq    
  41e13b:	and    DWORD PTR [edi],ebp
  41e13d:	or     BYTE PTR [edi-0x7217e9f8],dl
  41e143:	xlat   BYTE PTR ds:[ebx]
  41e144:	int3   
  41e145:	les    ebx,FWORD PTR [edi+0x329064b4]
  41e14b:	mov    ebx,0xfb9a3447
  41e150:	call   0x163e:0xd6bf13f4
  41e157:	push   eax
  41e158:	add    eax,0xac5f4d36
  41e15d:	sbb    al,BYTE PTR [ecx+0x62]
  41e160:	mov    dl,0xcd
  41e162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e163:	popf   
  41e164:	imul   ecx,DWORD PTR [ebx+0x1dddae80],0xfffffff0
  41e16b:	xor    ecx,eax
  41e16d:	cmp    al,0x2e
  41e16f:	pop    edx
  41e170:	cmp    ah,bl
  41e172:	stc    
  41e173:	xchg   DWORD PTR [ebx],ebx
  41e175:	inc    eax
  41e176:	mov    eax,ds:0x78e232ed
  41e17b:	outs   dx,BYTE PTR ds:[esi]
  41e17c:	clc    
  41e17d:	add    ebx,edx
  41e17f:	aad    0xe9
  41e181:	cwde   
  41e182:	jecxz  0x41e158
  41e184:	dec    esi
  41e185:	lock fsub DWORD PTR [ecx+0x5b]
  41e189:	imul   ecx,DWORD PTR [ebx+eiz*2-0x6d],0x877e4f92
  41e191:	sub    edx,DWORD PTR [ecx+esi*4-0x60]
  41e195:	push   cs
  41e196:	aam    0xb9
  41e198:	cmc    
  41e199:	mov    ds:0xe76bef4e,eax
  41e19e:	stos   BYTE PTR es:[edi],al
  41e19f:	sub    ch,BYTE PTR ds:0x6267a237
  41e1a5:	adc    ebp,DWORD PTR [edi+0x6e60d45f]
  41e1ab:	dec    edx
  41e1ac:	or     esp,DWORD PTR [edi-0x197b532a]
  41e1b2:	test   al,0xba
  41e1b4:	and    al,0xc9
  41e1b6:	repz dec edx
  41e1b8:	out    0x17,al
  41e1ba:	mov    edi,0x450b63ad
  41e1bf:	mov    bh,0xd9
  41e1c1:	adc    BYTE PTR [eax+eiz*4+0xa],al
  41e1c5:	mov    al,ds:0x2597d723
  41e1ca:	clc    
  41e1cb:	nop
  41e1cc:	lock mov esp,0x26fb4190
  41e1d2:	jne    0x41e171
  41e1d4:	xchg   edi,eax
  41e1d5:	jbe    0x41e16a
  41e1d7:	lods   eax,DWORD PTR ds:[esi]
  41e1d8:	nop
  41e1d9:	mov    cs,WORD PTR [edx]
  41e1db:	repnz sub DWORD PTR [ebp-0x9],edi
  41e1df:	(bad)  
  41e1e0:	lods   al,BYTE PTR ds:[esi]
  41e1e1:	popa   
  41e1e2:	pop    ss
  41e1e3:	xchg   edx,eax
  41e1e4:	arpl   WORD PTR [ebx],bx
  41e1e6:	or     DWORD PTR [ecx+0x54],esi
  41e1e9:	sbb    eax,ecx
  41e1eb:	loope  0x41e20a
  41e1ed:	jne    0x41e1c2
  41e1ef:	out    dx,eax
  41e1f0:	adc    DWORD PTR [ecx+0x4ad5cd79],0x47
  41e1f7:	pop    ss
  41e1f8:	jmp    0x52067590
  41e1fd:	ins    BYTE PTR es:[edi],dx
  41e1fe:	arpl   WORD PTR [ebx],di
  41e200:	repz jmp 0x41e1ab
  41e203:	push   ebp
  41e204:	arpl   WORD PTR ds:0xea31825a,ax
  41e20a:	push   edx
  41e20b:	mov    al,ds:0xa29eabe
  41e210:	sbb    edx,ebp
  41e212:	xor    eax,0xfb571d0f
  41e217:	xor    al,0xd5
  41e219:	adc    edx,DWORD PTR [esi-0x4c746c69]
  41e21f:	jecxz  0x41e1b9
  41e221:	sub    DWORD PTR [eax-0x4d7502c3],0x6f
  41e228:	jmp    0x8505:0x465971fd
  41e22f:	test   al,0x91
  41e231:	es jne 0x41e1f1
  41e234:	cmp    al,0x10
  41e237:	lea    esp,[ebp+0x19ccf98]
  41e23d:	stos   DWORD PTR es:[edi],eax
  41e23e:	cmp    esp,DWORD PTR [ebx-0x20]
  41e241:	in     eax,dx
  41e242:	adc    BYTE PTR [esi+0x44716404],0x2
  41e249:	push   esi
  41e24a:	xchg   edx,eax
  41e24b:	add    DWORD PTR ds:0x77d15f93,edx
  41e251:	hlt    
  41e252:	cmp    al,0x91
  41e254:	pop    eax
  41e255:	dec    ebx
  41e256:	sub    al,0x4
  41e258:	inc    edx
  41e259:	es jp  0x41e2ae
  41e25c:	in     al,0x48
  41e25e:	es mov ch,0xb1
  41e261:	lods   al,BYTE PTR ds:[esi]
  41e262:	mov    esi,DWORD PTR [ecx+eax*8-0x52]
  41e266:	dec    ebx
  41e267:	frstor [edx-0x7df81e48]
  41e26d:	or     edi,DWORD PTR [edi+0x48e8a919]
  41e273:	mov    al,ds:0x1ca51547
  41e278:	sbb    dh,BYTE PTR [edi+0x26]
  41e27b:	enter  0x2b76,0xcd
  41e27f:	or     ah,ah
  41e281:	mov    ss,WORD PTR [edx-0x51]
  41e284:	and    ebx,edx
  41e286:	xor    eax,0x75387c46
  41e28b:	mov    edx,esi
  41e28d:	sub    al,0x5f
  41e28f:	jl     0x41e224
  41e291:	xlat   BYTE PTR ds:[ebx]
  41e292:	sbb    ecx,ebp
  41e294:	push   0xe66b6562
  41e299:	pop    esi
  41e29a:	sbb    DWORD PTR [esi-0x7e33c31c],ebx
  41e2a0:	call   0x4434:0xf9fa57ee
  41e2a7:	mov    esi,0x74450b3d
  41e2ac:	mov    ebx,0xf313bc02
  41e2b1:	test   BYTE PTR [esi+ebp*8-0x7942589a],0x38
  41e2b9:	rol    DWORD PTR [ebp+0x11],0x0
  41e2bd:	(bad)  
  41e2be:	out    0x73,al
  41e2c0:	test   BYTE PTR [esi],bl
  41e2c2:	enter  0x2f4a,0x66
  41e2c6:	rol    BYTE PTR [edx-0x7e6db847],cl
  41e2cc:	jae    0x41e31c
  41e2ce:	into   
  41e2cf:	test   BYTE PTR [ecx-0x19],cl
  41e2d2:	sub    BYTE PTR [ebx+0x3f],0x78
  41e2d6:	sub    al,0xfd
  41e2d8:	jo     0x41e28b
  41e2da:	inc    edx
  41e2db:	(bad)  
  41e2dc:	call   0x3b3bb7b1
  41e2e1:	jae    0x41e2ec
  41e2e3:	push   cs
  41e2e4:	ja     0x41e339
  41e2e6:	jge    0x41e277
  41e2e8:	jg     0x41e2dc
  41e2ea:	arpl   WORD PTR [edi],cx
  41e2ec:	mov    bh,0xcc
  41e2ee:	rol    DWORD PTR [ebx-0x6e],0x3d
  41e2f2:	jo     0x41e2ab
  41e2f4:	cld    
  41e2f5:	dec    esp
  41e2f6:	mov    ebx,0xe7589fb3
  41e2fb:	ror    DWORD PTR [edx+0xd],1
  41e2fe:	inc    esp
  41e2ff:	or     al,0x71
  41e301:	mov    dh,0xc0
  41e303:	jmp    0xedb8e9b3
  41e308:	dec    esi
  41e309:	push   edi
  41e30a:	and    eax,0x756056e7
  41e30f:	fstp   st(7)
  41e311:	out    0x66,eax
  41e313:	cmp    ch,BYTE PTR [eax]
  41e315:	pop    eax
  41e316:	jmp    0xf2ead523
  41e31b:	rcl    BYTE PTR [edi],cl
  41e31d:	aad    0xa6
  41e31f:	pop    ebx
  41e320:	push   esi
  41e321:	mov    fs,WORD PTR [ebp-0xf]
  41e324:	call   0x259afcf1
  41e329:	jnp    0x41e363
  41e32b:	fs dec edi
  41e32d:	into   
  41e32e:	out    0x22,eax
  41e330:	sbb    eax,0x50160a3e
  41e335:	inc    eax
  41e336:	sbb    DWORD PTR ds:0xf9fe2866,0x4c31267
  41e340:	push   esp
  41e341:	mov    ds:0x44fab108,al
  41e346:	std    
  41e347:	enter  0xca67,0x43
  41e34b:	test   DWORD PTR [edx-0x2fa6def7],ebp
  41e351:	mov    cs,WORD PTR [ecx-0x6]
  41e354:	les    edi,FWORD PTR [edi-0x6b6ea3aa]
  41e35a:	mov    ebp,0x6ef6cc7c
  41e35f:	jo     0x41e396
  41e361:	stos   BYTE PTR es:[edi],al
  41e362:	dec    edx
  41e363:	add    cl,dh
  41e365:	out    0xd7,eax
  41e367:	mov    bh,0x55
  41e369:	xchg   esi,eax
  41e36a:	mov    al,ds:0x16c61567
  41e36f:	pop    esi
  41e370:	ja     0x41e3c1
  41e372:	outs   dx,BYTE PTR ds:[esi]
  41e373:	lods   eax,DWORD PTR ds:[esi]
  41e374:	or     ecx,DWORD PTR [esi]
  41e376:	aad    0x2b
  41e378:	pusha  
  41e379:	xor    DWORD PTR [ecx+0x57],ebx
  41e37c:	stc    
  41e37d:	mov    ebp,0xe17ee9fe
  41e382:	inc    eax
  41e383:	outs   dx,BYTE PTR ds:[esi]
  41e384:	mov    WORD PTR [edi+0x3c],ds
  41e387:	sub    BYTE PTR [edx+0x6e6d0da],ch
  41e38d:	repnz adc BYTE PTR [ebp+0xebb0490],ah
  41e394:	data16 (bad) es:[esi-0x3]
  41e399:	daa    
  41e39a:	or     BYTE PTR [ecx+0x1276c535],ah
  41e3a0:	xor    BYTE PTR [edx],0x90
  41e3a3:	inc    esp
  41e3a5:	mov    dl,0xab
  41e3a7:	sub    esp,DWORD PTR [ebp+0x69325e2]
  41e3ad:	inc    eax
  41e3ae:	or     eax,0x9550405f
  41e3b3:	ss cmp al,0xbd
  41e3b6:	mov    ch,0xc6
  41e3b8:	sbb    esi,DWORD PTR [ebx+0x21]
  41e3bb:	stos   DWORD PTR es:[edi],eax
  41e3bc:	dec    edi
  41e3bd:	rcl    DWORD PTR [ebx+0x116026bd],cl
  41e3c3:	daa    
  41e3c4:	jbe    0x41e354
  41e3c6:	and    edi,DWORD PTR [esi]
  41e3c8:	add    DWORD PTR [bx],edx
  41e3cb:	mov    ebx,0x8d9e1878
  41e3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d1:	mov    esp,0xbe4e3df4
  41e3d6:	mov    es:0x795185b5,eax
  41e3dc:	dec    edi
  41e3dd:	popf   
  41e3de:	dec    eax
  41e3df:	jns    0x41e439
  41e3e1:	push   0xffffff9d
  41e3e3:	lods   eax,DWORD PTR ds:[esi]
  41e3e4:	xchg   ebp,eax
  41e3e5:	(bad)  
  41e3e6:	xchg   edx,eax
  41e3e7:	cmp    dh,bh
  41e3e9:	in     al,0x72
  41e3eb:	or     DWORD PTR [edi],ecx
  41e3ed:	sbb    al,0x5
  41e3ef:	scas   eax,DWORD PTR es:[edi]
  41e3f0:	sbb    ecx,DWORD PTR [ecx-0x3fee3208]
  41e3f6:	aam    0x2c
  41e3f8:	xchg   edx,eax
  41e3f9:	mov    eax,0x6659db66
  41e3fe:	fidiv  DWORD PTR [esi-0x17]
  41e401:	div    BYTE PTR [bx+si]
  41e404:	ds out dx,al
  41e406:	ja     0x41e3aa
  41e408:	cld    
  41e409:	dec    esi
  41e40a:	push   eax
  41e40b:	jmp    0x41e3f7
  41e40d:	push   esi
  41e40e:	repnz test al,0x17
  41e411:	xor    eax,0x27f871ba
  41e416:	mov    ebp,0xe7e50137
  41e41b:	ret    
  41e41c:	cwde   
  41e41d:	dec    ecx
  41e41e:	not    DWORD PTR [esi-0x19]
  41e421:	inc    ebp
  41e422:	pusha  
  41e423:	mov    esp,0x20b89bf8
  41e428:	xchg   ecx,eax
  41e42a:	ror    ah,1
  41e42c:	jmp    0x41e4a4
  41e42e:	dec    ebx
  41e42f:	mov    esp,0x17e7790f
  41e434:	xor    DWORD PTR [esi-0x2817fc59],edx
  41e43a:	lock cld 
  41e43c:	pusha  
  41e43d:	rol    BYTE PTR [edi-0x69],0x3e
  41e441:	aas    
  41e442:	imul   ecx,DWORD PTR [edi-0x25],0xc912f7f0
  41e449:	lahf   
  41e44a:	xchg   BYTE PTR [edx-0x28],dl
  41e44d:	(bad)  
  41e44e:	fild   WORD PTR [eax+esi*1]
  41e451:	mov    ah,0x25
  41e453:	outs   dx,DWORD PTR ds:[esi]
  41e454:	(bad)  
  41e455:	cli    
  41e456:	or     bh,0xb5
  41e459:	or     al,0xea
  41e45b:	div    DWORD PTR [eax]
  41e45d:	pop    ds
  41e45e:	jmp    FWORD PTR [ebp+0x5c]
  41e461:	call   0x87bc:0x7640e8e8
  41e468:	fidivr WORD PTR [esi]
  41e46a:	lock bound eax,QWORD PTR ds:0x4f879173
  41e471:	dec    edi
  41e472:	sbb    ebp,DWORD PTR [eax-0xa]
  41e475:	cdq    
  41e476:	push   ss
  41e477:	sbb    eax,0xdc0fb712
  41e47c:	mov    ds:0x1c13d3d6,al
  41e481:	in     eax,dx
  41e482:	mov    ah,0x31
  41e484:	into   
  41e485:	mov    esi,0xba726f5f
  41e48a:	pop    ebx
  41e48b:	fsub   DWORD PTR [eax-0x22]
  41e48e:	add    ah,BYTE PTR [ebx]
  41e490:	xor    al,0x21
  41e492:	arpl   di,cx
  41e494:	sbb    BYTE PTR [edi+0x3c4c3329],al
  41e49a:	dec    ebp
  41e49b:	cld    
  41e49c:	inc    edx
  41e49d:	cmp    eax,0x70055db1
  41e4a2:	ja     0x41e4ca
  41e4a4:	mov    edi,0xfb0986ff
  41e4a9:	sbb    BYTE PTR [edi+0x2f4779bd],al
  41e4af:	loope  0x41e4b7
  41e4b1:	stc    
  41e4b2:	(bad)  
  41e4b3:	je     0x41e51a
  41e4b5:	dec    eax
  41e4b6:	inc    esi
  41e4b7:	cmp    bh,dl
  41e4b9:	ds inc esi
  41e4bb:	jecxz  0x41e4fc
  41e4bd:	mov    al,0x4e
  41e4bf:	pusha  
  41e4c0:	ds cwde 
  41e4c2:	popa   
  41e4c3:	dec    ecx
  41e4c4:	inc    edi
  41e4c5:	jge    0x41e4a8
  41e4c7:	addr16 push esi
  41e4c9:	lds    ecx,FWORD PTR [edi]
  41e4cb:	gs push es
  41e4cd:	dec    esp
  41e4ce:	pop    ecx
  41e4cf:	lahf   
  41e4d0:	aam    0x37
  41e4d2:	mov    eax,gs:0xe861ebf5
  41e4d8:	xor    BYTE PTR [ecx+eax*8],0x34
  41e4dc:	fcmovnbe st,st(5)
  41e4de:	ror    BYTE PTR [edi],1
  41e4e0:	cmp    eax,0x58a38b0b
  41e4e5:	xor    DWORD PTR [eax-0x3e],0x25
  41e4e9:	out    dx,al
  41e4ea:	inc    esi
  41e4eb:	(bad)  
  41e4ec:	retf   0x26b
  41e4ef:	out    dx,al
  41e4f0:	inc    esi
  41e4f1:	xchg   edi,eax
  41e4f2:	stos   BYTE PTR es:[edi],al
  41e4f3:	cmp    al,0xd9
  41e4f5:	aam    0x7c
  41e4f7:	fdivr  st,st(0)
  41e4f9:	sub    DWORD PTR [ecx+0x5943276d],esi
  41e4ff:	xchg   BYTE PTR [edi+0x4c],al
  41e502:	std    
  41e503:	mov    BYTE PTR [eax],cl
  41e505:	aaa    
  41e506:	mov    cl,0x86
  41e508:	aaa    
  41e509:	popf   
  41e50a:	mul    bl
  41e50c:	sbb    esp,DWORD PTR [esi+0x31]
  41e50f:	sub    ecx,DWORD PTR [ebp+0xe]
  41e512:	loope  0x41e499
  41e514:	mov    eax,0xce764535
  41e519:	pop    es
  41e51a:	adc    al,cl
  41e51c:	sub    BYTE PTR [edx],cl
  41e51e:	div    DWORD PTR [ebx+ecx*8]
  41e521:	in     al,dx
  41e522:	sbb    BYTE PTR [edi-0x721f601d],0x54
  41e529:	pushf  
  41e52a:	in     al,0x7c
  41e52c:	xchg   edx,eax
  41e52d:	div    DWORD PTR [ecx+0x5d9e0bf]
  41e533:	jmp    0x2334b1c1
  41e538:	out    0xaf,al
  41e53a:	add    DWORD PTR [esi+0x51],ebp
  41e53d:	and    eax,esi
  41e53f:	mov    ebp,0x58b1d4d8
  41e544:	icebp  
  41e545:	fdivr  DWORD PTR [ebp+0x56]
  41e548:	ret    
  41e549:	shl    al,1
  41e54b:	cdq    
  41e54c:	test   eax,0xba008cdd
  41e551:	in     eax,dx
  41e552:	xchg   edx,eax
  41e553:	dec    ecx
  41e554:	push   ebx
  41e555:	xchg   BYTE PTR [ecx],bh
  41e557:	lods   eax,DWORD PTR ds:[esi]
  41e558:	mov    ds:0x1d29d04a,al
  41e55d:	xchg   edi,eax
  41e55e:	inc    esi
  41e55f:	mov    ecx,0x1759c043
  41e564:	sub    eax,0xed1f2a86
  41e569:	in     al,dx
  41e56a:	retf   0xd089
  41e56d:	dec    esp
  41e56e:	ret    
  41e56f:	push   ds
  41e570:	mov    cs,WORD PTR [eax]
  41e572:	or     al,BYTE PTR [edx-0xa5f9377]
  41e578:	add    al,0x32
  41e57a:	imul   esp,DWORD PTR [eax+0x51921d83],0xfffffff9
  41e581:	iret   
  41e582:	(bad)  
  41e584:	push   edi
  41e585:	rcl    BYTE PTR [eax-0x4d],1
  41e588:	js     0x41e56b
  41e58a:	lods   eax,DWORD PTR ds:[esi]
  41e58b:	mov    BYTE PTR [ebp-0x13],cl
  41e58e:	jmp    0x1a2c:0xe8adaa74
  41e595:	pop    ecx
  41e596:	inc    esi
  41e597:	pop    ebp
  41e598:	mov    ebx,0x20555b6
  41e59d:	sbb    esp,edx
  41e59f:	jecxz  0x41e566
  41e5a1:	inc    ecx
  41e5a2:	jg     0x41e5fe
  41e5a4:	lods   eax,DWORD PTR ds:[esi]
  41e5a5:	pop    es
  41e5a6:	or     dl,ah
  41e5a8:	mov    bl,0xaf
  41e5aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ab:	enter  0xec9b,0x15
  41e5af:	scas   eax,DWORD PTR es:[edi]
  41e5b0:	cs shl edi,1
  41e5b3:	adc    dl,BYTE PTR [ebp+0x2f]
  41e5b6:	push   edx
  41e5b7:	cs pop esi
  41e5b9:	ret    
  41e5ba:	mov    bl,0x53
  41e5bc:	leave  
  41e5bd:	mov    BYTE PTR [ebx+edx*1-0x7a00bc41],0x4c
  41e5c5:	dec    ebp
  41e5c6:	test   BYTE PTR fs:[ebx-0x3e],dh
  41e5ca:	sub    al,0xee
  41e5cc:	ret    0x6d0f
  41e5cf:	mov    DWORD PTR [edx+ebx*4],esi
  41e5d2:	xor    cl,BYTE PTR [ebx-0x29]
  41e5d5:	push   ebp
  41e5d6:	cmp    al,0x1f
  41e5d8:	les    esp,FWORD PTR [eax]
  41e5da:	pushf  
  41e5db:	xchg   ecx,eax
  41e5dc:	jbe    0x41e568
  41e5de:	data16 add al,BYTE PTR [ebp-0x62]
  41e5e2:	mov    esi,DWORD PTR [esi+0xf]
  41e5e5:	jp     0x41e606
  41e5e7:	jne    0x41e5fc
  41e5e9:	clc    
  41e5ea:	or     eax,0x3e9369fc
  41e5ef:	out    dx,al
  41e5f0:	mov    DWORD PTR [edi],0x5301cfc5
  41e5f6:	jne    0x41e65f
  41e5f8:	fwait
  41e5f9:	pop    edi
  41e5fa:	iret   
  41e5fb:	lods   eax,DWORD PTR ds:[esi]
  41e5fc:	mov    eax,0x3cfbfd6
  41e601:	cld    
  41e602:	mov    DWORD PTR [ebx],ebx
  41e604:	add    al,0x44
  41e606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e607:	mov    ah,ah
  41e609:	mov    eax,ds:0x9453588c
  41e60e:	push   ecx
  41e60f:	jge    0x41e673
  41e611:	adc    dh,BYTE PTR [edi-0x6b]
  41e614:	mov    bh,0x69
  41e616:	xchg   esi,eax
  41e617:	test   eax,0xc0634b6f
  41e61c:	lahf   
  41e61d:	adc    DWORD PTR [edi-0x277adc2f],0xf
  41e624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e625:	push   eax
  41e626:	dec    esp
  41e627:	je     0x41e643
  41e629:	pop    ebx
  41e62a:	inc    edx
  41e62b:	jns    0x41e6a9
  41e62d:	fstp   TBYTE PTR [ebx+eiz*2+0x434fedf8]
  41e634:	mov    dl,0xb7
  41e636:	inc    esi
  41e637:	or     bh,dh
  41e639:	(bad)  
  41e63a:	dec    edi
  41e63b:	ins    BYTE PTR es:[edi],dx
  41e63c:	mov    cl,0x5f
  41e63e:	jb     0x41e5d3
  41e640:	enter  0x6ef4,0x8b
  41e644:	pop    edi
  41e645:	in     eax,dx
  41e646:	mov    DWORD PTR [ebx+0x271a9f6d],eax
  41e64c:	adc    ecx,DWORD PTR [edi]
  41e64e:	sub    BYTE PTR [edx-0x1e],0xa5
  41e652:	jmp    0x8913:0xa863775a
  41e659:	dec    edx
  41e65a:	push   edi
  41e65b:	jle    0x41e679
  41e65d:	sti    
  41e65e:	(bad)  
  41e65f:	or     al,0xa9
  41e661:	adc    dl,bh
  41e663:	add    BYTE PTR [edx-0x7e76aad0],0xd9
  41e66a:	or     ebp,DWORD PTR [eax]
  41e66c:	mov    ah,0xa0
  41e66e:	test   DWORD PTR [ecx+ebx*1],edx
  41e671:	div    DWORD PTR [eax+0x3892e958]
  41e677:	push   eax
  41e678:	push   0x61338ab5
  41e67d:	test   DWORD PTR [ecx-0x5c],edx
  41e680:	xor    ah,BYTE PTR [edi]
  41e682:	aam    0x5d
  41e684:	sub    DWORD PTR [esi-0x59],edi
  41e687:	mov    ebx,0x9154a8a7
  41e68c:	sbb    al,0x26
  41e68e:	jl     0x41e61e
  41e690:	test   BYTE PTR [ebx+ecx*4+0x718f80ad],0xb0
  41e698:	pop    ss
  41e699:	adc    ah,BYTE PTR ds:0xceea4b09
  41e69f:	add    cl,BYTE PTR [ebx-0x24]
  41e6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a3:	xor    ch,dh
  41e6a5:	pop    ecx
  41e6a6:	mov    esi,DWORD PTR [ecx-0x6da06d91]
  41e6ac:	sub    eax,0xcdfe268c
  41e6b1:	xchg   esi,eax
  41e6b2:	std    
  41e6b3:	jbe    0x41e646
  41e6b5:	sub    eax,0xa9ea4fe8
  41e6ba:	(bad)  
  41e6bb:	xlat   BYTE PTR ds:[ebx]
  41e6bc:	loop   0x41e6d5
  41e6be:	cmc    
  41e6bf:	aad    0xfa
  41e6c1:	cdq    
  41e6c2:	jle    0x41e700
  41e6c4:	mov    bl,0xd3
  41e6c6:	push   eax
  41e6c7:	mov    dh,0x57
  41e6c9:	inc    esp
  41e6ca:	pushf  
  41e6cb:	add    esi,DWORD PTR [edi+0x36]
  41e6ce:	sbb    al,0x42
  41e6d0:	jbe    0x41e6e6
  41e6d2:	mov    ah,0x8e
  41e6d4:	push   edx
  41e6d5:	inc    ebx
  41e6d6:	repnz cmc 
  41e6d8:	add    eax,0x4a926ced
  41e6dd:	mov    ah,0xe4
  41e6df:	stc    
  41e6e0:	or     ch,BYTE PTR [edx]
  41e6e2:	add    DWORD PTR [edi-0x13689cda],esp
  41e6e8:	lds    esi,FWORD PTR [ecx-0x32]
  41e6eb:	ins    DWORD PTR es:[edi],dx
  41e6ec:	sahf   
  41e6ed:	xor    al,0x97
  41e6ef:	popa   
  41e6f0:	adc    BYTE PTR [eax],bl
  41e6f2:	test   BYTE PTR [eax+0x2bf4bbc3],dh
  41e6f8:	mov    bh,0xca
  41e6fa:	mov    eax,0xaf2f179f
  41e6ff:	sub    bl,BYTE PTR [ebp+0x4a]
  41e702:	sub    dl,dh
  41e704:	pop    esi
  41e705:	out    0xf0,al
  41e707:	xchg   edi,eax
  41e708:	pusha  
  41e709:	xchg   ecx,eax
  41e70a:	cmc    
  41e70b:	mov    esi,0xb413910f
  41e710:	sub    eax,0x20b745dc
  41e715:	and    BYTE PTR [ebp+0x37],ah
  41e718:	(bad)  
  41e719:	cli    
  41e71a:	retf   0x9a80
  41e71d:	fcmovnbe st,st(4)
  41e71f:	jbe    0x41e6aa
  41e721:	cmp    eax,0x1c09ff99
  41e726:	(bad)  
  41e727:	xor    BYTE PTR [edi+esi*1],dl
  41e72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e72b:	xchg   edx,eax
  41e72c:	mov    ah,0x3b
  41e72e:	cs not DWORD PTR es:[edx-0x15]
  41e733:	mov    ah,0x9b
  41e735:	mov    ebp,0x48dc9ec3
  41e73a:	push   ss
  41e73b:	add    BYTE PTR [edi],bl
  41e73d:	mov    edi,0x6348f637
  41e742:	out    0xfb,al
  41e744:	in     eax,0x85
  41e746:	pop    ecx
  41e747:	and    BYTE PTR [eax+0x2f],0xed
  41e74b:	cmp    BYTE PTR ss:[eax-0x2a],dh
  41e74f:	scas   eax,DWORD PTR es:[edi]
  41e750:	sub    dl,BYTE PTR [edx-0x19]
  41e753:	dec    ebx
  41e754:	xchg   esp,eax
  41e755:	gs xor al,ch
  41e758:	pusha  
  41e759:	scas   eax,DWORD PTR es:[edi]
  41e75a:	or     eax,0xf012401
  41e75f:	test   al,0x29
  41e761:	aad    0x97
  41e763:	inc    edi
  41e764:	inc    ecx
  41e765:	scas   al,BYTE PTR es:[edi]
  41e766:	fmul   QWORD PTR [esi]
  41e768:	sub    al,0x76
  41e76a:	ins    BYTE PTR es:[edi],dx
  41e76b:	ds (bad) 
  41e76d:	sub    DWORD PTR [ebp-0x3c626927],eax
  41e773:	xchg   DWORD PTR [di],ebp
  41e776:	leave  
  41e777:	pop    edi
  41e778:	arpl   WORD PTR [ecx-0xa],di
  41e77b:	dec    ebx
  41e77c:	inc    edi
  41e77d:	adc    al,0x94
  41e77f:	jmp    0x41e763
  41e781:	sub    dh,BYTE PTR [eax+0x42]
  41e784:	rcr    bl,0xe
  41e787:	sub    DWORD PTR [esi+0x77],0x7632e254
  41e78e:	cmp    esp,DWORD PTR [eax]
  41e790:	dec    ecx
  41e791:	jae    0x41e7d7
  41e793:	xlat   BYTE PTR ds:[ebx]
  41e794:	repz or ecx,DWORD PTR [ecx+esi*8-0x465af1af]
  41e79c:	imul   BYTE PTR [ebp+eax*8-0x543a48ed]
  41e7a3:	int3   
  41e7a4:	in     eax,0x37
  41e7a6:	pop    edi
  41e7a7:	jg     0x41e73b
  41e7a9:	push   0xffffff90
  41e7ab:	je     0x41e742
  41e7ad:	imul   edi,DWORD PTR [ecx+0x4b9606be],0x32
  41e7b4:	std    
  41e7b5:	and    al,0x83
  41e7b7:	mov    ds:0xfd256a8f,eax
  41e7bc:	cs jl  0x41e76d
  41e7bf:	clc    
  41e7c0:	pop    edx
  41e7c1:	psraw  mm5,QWORD PTR [ebx]
  41e7c4:	ret    
  41e7c5:	or     ecx,esp
  41e7c7:	in     eax,0xcf
  41e7c9:	pop    ebx
  41e7ca:	rol    ch,cl
  41e7cc:	test   al,0xb9
  41e7ce:	gs (bad) 
  41e7d0:	sbb    al,0x2
  41e7d2:	xchg   esi,eax
  41e7d3:	sahf   
  41e7d4:	mov    ds:0xab1d37fb,al
  41e7d9:	sbb    DWORD PTR [ecx-0x793fb646],0xe
  41e7e0:	sub    ebp,DWORD PTR [edi]
  41e7e2:	test   eax,0x4ef7a3d9
  41e7e7:	inc    ebp
  41e7e8:	ret    
  41e7e9:	in     al,0x94
  41e7eb:	daa    
  41e7ec:	bnd jo 0x41e7f6
  41e7ef:	jne    0x41e802
  41e7f1:	push   ecx
  41e7f2:	mov    bh,0xf9
  41e7f4:	fst    st(0)
  41e7f6:	call   0xe1446152
  41e7fb:	adc    ch,BYTE PTR [edi]
  41e7fd:	icebp  
  41e7fe:	out    dx,al
  41e7ff:	repnz clc 
  41e801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e802:	js     0x41e7e9
  41e804:	ins    BYTE PTR es:[edi],dx
  41e805:	and    edx,DWORD PTR ds:0xbf508a05
  41e80b:	or     al,0x7c
  41e80d:	clc    
  41e80e:	push   cs
  41e80f:	mov    eax,0xf7d94bd7
  41e814:	call   0x94de:0xc333a5eb
  41e81b:	retf   
  41e81c:	fmulp  st(7),st
  41e81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e820:	add    DWORD PTR [edi],0x32f96c36
  41e826:	lods   eax,DWORD PTR ds:[esi]
  41e827:	nop
  41e828:	(bad)  
  41e829:	jecxz  0x41e83d
  41e82b:	mov    al,ds:0xfa832710
  41e830:	fnstsw WORD PTR [edi]
  41e832:	mov    dl,0x94
  41e834:	sub    DWORD PTR [ebx+0x179399cf],ecx
  41e83a:	xlat   BYTE PTR ds:[ebx]
  41e83b:	bound  edi,QWORD PTR [edi]
  41e83d:	pop    ds
  41e83e:	push   edx
  41e83f:	mov    ds:0xfbd107fa,al
  41e844:	sub    DWORD PTR [esi],eax
  41e846:	cmp    DWORD PTR [esi],edx
  41e848:	or     al,0xf8
  41e84a:	xor    eax,0x1b0d8fb8
  41e84f:	sub    BYTE PTR ds:0x35a0b578,ch
  41e855:	sbb    edx,DWORD PTR [eax-0x2b]
  41e858:	mov    ds:0x31cfa7fd,eax
  41e85d:	adc    al,0x98
  41e85f:	mov    esp,0xc864da94
  41e864:	jmp    0x9b5fb2f3
  41e869:	retf   0xaa67
  41e86c:	jmp    0xf34d:0xf4ed53ca
  41e873:	rcl    BYTE PTR [ecx-0x5b387f00],cl
  41e879:	jae    0x41e878
  41e87b:	push   ebp
  41e87c:	stc    
  41e87d:	call   0xe182:0x1c6f1b7b
  41e884:	cmc    
  41e885:	dec    esi
  41e886:	in     eax,dx
  41e887:	jp     0x41e867
  41e889:	int    0xf4
  41e88b:	pop    ss
  41e88c:	je     0x41e83d
  41e88e:	and    eax,0xdac2bafd
  41e893:	jb     0x41e83a
  41e895:	push   0x51e0a2d6
  41e89a:	call   0xf12:0x9e1db417
  41e8a1:	pop    ss
  41e8a2:	adc    al,0x9b
  41e8a4:	cmp    edx,DWORD PTR [esi-0x344f872c]
  41e8aa:	and    esi,DWORD PTR ds:0x2b288807
  41e8b0:	hlt    
  41e8b1:	rcr    DWORD PTR [eax+esi*2],0xd
  41e8b5:	mov    DWORD PTR [eax-0x42],0xc40cc869
  41e8bc:	iret   
  41e8bd:	in     al,0x2b
  41e8bf:	lahf   
  41e8c0:	inc    edi
  41e8c1:	imul   edi,DWORD PTR [eax+0x72],0xbbdfe1aa
  41e8c8:	clc    
  41e8c9:	repnz mov al,ds:0xfeb38460
  41e8cf:	push   ds
  41e8d0:	jl     0x41e872
  41e8d2:	ins    DWORD PTR es:[edi],dx
  41e8d3:	into   
  41e8d4:	pop    es
  41e8d5:	jp     0x41e8ff
  41e8d7:	mov    al,0xf2
  41e8d9:	out    0xc9,eax
  41e8db:	loope  0x41e861
  41e8dd:	das    
  41e8de:	inc    esp
  41e8df:	or     eax,0x9ad6e6e1
  41e8e4:	scas   al,BYTE PTR es:[edi]
  41e8e5:	lds    esi,FWORD PTR [eax+0x45a8eb98]
  41e8eb:	leave  
  41e8ec:	(bad)  
  41e8ed:	popf   
  41e8ee:	pusha  
  41e8ef:	mov    eax,0x8e430a0a
  41e8f4:	and    DWORD PTR [ecx+ecx*1-0x6349b903],ebp
  41e8fb:	(bad)
  41e8fe:	pop    ebp
  41e8ff:	aad    0x95
  41e901:	loope  0x41e8a6
  41e903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e904:	ins    DWORD PTR es:[edi],dx
  41e905:	out    dx,al
  41e906:	adc    al,BYTE PTR [eax-0x17a96545]
  41e90c:	sub    DWORD PTR [ebx-0x92fa3f6],ebx
  41e912:	mov    bh,0x99
  41e914:	mov    edx,0x729e589e
  41e919:	xchg   edi,eax
  41e91a:	sbb    ch,BYTE PTR [edi-0x1b]
  41e91d:	sbb    al,0x13
  41e91f:	xor    al,0x5c
  41e921:	cmp    DWORD PTR [edx+0xb4f1644],ebp
  41e927:	pushf  
  41e928:	inc    edx
  41e929:	fldenv [eax-0xad1e811]
  41e92f:	cmc    
  41e930:	push   ebx
  41e931:	or     BYTE PTR [ecx-0x36],dh
  41e934:	neg    BYTE PTR gs:[esi+0x179387c7]
  41e93b:	add    bh,BYTE PTR [ecx]
  41e93d:	push   cs
  41e93e:	repnz out dx,eax
  41e940:	xlat   BYTE PTR cs:[ebx]
  41e942:	pushf  
  41e943:	test   al,0x92
  41e945:	jmp    0x1a3e:0xf37584b4
  41e94c:	push   ebx
  41e94d:	adc    DWORD PTR [ebp+edx*8+0x32],0x968a0a61
  41e955:	dec    eax
  41e956:	jp     0x41e985
  41e958:	clc    
  41e959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e95a:	add    al,0xd0
  41e95c:	jno    0x41e910
  41e95e:	mov    eax,0x29f94ca4
  41e963:	xchg   esp,ebx
  41e965:	jg     0x41e8f8
  41e967:	or     BYTE PTR [edi+0x6],0x3e
  41e96b:	dec    ebx
  41e96c:	jp     0xfe2c4834
  41e972:	jnp    0x41e9a2
  41e974:	in     eax,0x44
  41e976:	ror    BYTE PTR [eax+0x72],1
  41e979:	aas    
  41e97a:	pop    ss
  41e97b:	jg     0x41e9ce
  41e97d:	aad    0xd8
  41e97f:	call   0x67c5:0xdc0ed4cd
  41e986:	add    BYTE PTR [esi],bl
  41e988:	(bad)  
  41e989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e98b:	call   DWORD PTR [edi-0x5318b12f]
  41e991:	mov    ah,0x66
  41e993:	int3   
  41e994:	fild   DWORD PTR [esi]
  41e996:	cmp    esp,ebp
  41e998:	pop    esp
  41e999:	jns    0x41ea08
  41e99b:	lahf   
  41e99c:	icebp  
  41e99d:	cmp    BYTE PTR [eax+0x14a27520],dh
  41e9a3:	xchg   ebx,eax
  41e9a4:	cmp    DWORD PTR [ebx],0xaadbf420
  41e9aa:	push   0xffffffc7
  41e9ac:	in     al,dx
  41e9ad:	lahf   
  41e9ae:	ja     0x41e941
  41e9b0:	dec    edi
  41e9b1:	jmp    0x41e937
  41e9b3:	cli    
  41e9b4:	sar    BYTE PTR [edi-0x482519f2],1
  41e9ba:	jl     0x41ea14
  41e9bc:	aaa    
  41e9bd:	dec    edi
  41e9be:	ins    DWORD PTR es:[edi],dx
  41e9bf:	rol    DWORD PTR [ebx+ecx*4+0x67],0xf9
  41e9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c5:	mov    ds:0x6ee7f45c,eax
  41e9ca:	retf   
  41e9cb:	and    esi,eax
  41e9cd:	mov    dl,0xbb
  41e9cf:	sub    al,0xd9
  41e9d1:	mov    eax,0xe3adcf49
  41e9d6:	mov    edx,0x7de4087b
  41e9db:	and    DWORD PTR ds:0x3e00bbbc,edx
  41e9e1:	cli    
  41e9e2:	adc    BYTE PTR [eax],ch
  41e9e4:	xchg   edi,eax
  41e9e5:	mov    ah,cl
  41e9e7:	pop    es
  41e9e8:	mov    dh,BYTE PTR [ecx+0x73e537e]
  41e9ee:	and    ebp,edi
  41e9f0:	sar    BYTE PTR [edx],cl
  41e9f2:	imul   esp,DWORD PTR [ebx+0x787dc523],0x21dcb8b0
  41e9fc:	mov    dh,0x43
  41e9fe:	mov    dh,0x6a
  41ea01:	pop    esi
  41ea02:	add    ah,BYTE PTR [edi+0x3e]
  41ea05:	dec    esp
  41ea06:	pop    ds
  41ea07:	dec    eax
  41ea08:	sbb    BYTE PTR [ecx-0x305a505c],dl
  41ea0e:	mov    edx,0xcba93730
  41ea13:	popf   
  41ea14:	fist   DWORD PTR ds:0xd406fe1a
  41ea1a:	retf   0x72d1
  41ea1d:	jmp    0x7ca64e03
  41ea22:	jmp    0xe3ed0139
  41ea27:	repz (bad) 
  41ea29:	in     eax,0x37
  41ea2b:	call   0x15218127
  41ea30:	mov    ecx,0x226d2878
  41ea35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea36:	retf   0x7dc3
  41ea39:	dec    esp
  41ea3a:	dec    ebp
  41ea3b:	mov    bl,0xd5
  41ea3d:	out    dx,al
  41ea3e:	arpl   WORD PTR ds:0x8c3ea2ea,bp
  41ea44:	xchg   edi,eax
  41ea45:	xchg   ebp,eax
  41ea46:	nop
  41ea47:	not    DWORD PTR [edx-0x16]
  41ea4a:	pushf  
  41ea4b:	mov    al,ds:0x3a595947
  41ea50:	and    al,0x38
  41ea52:	or     eax,0x68dc458d
  41ea57:	jns    0x41ea73
  41ea59:	or     eax,ebx
  41ea5b:	dec    eax
  41ea5c:	fadd   DWORD PTR [esi-0x43]
  41ea5f:	jmp    0x41ea7f
  41ea61:	push   cs
  41ea62:	mov    ebp,0xf92a5af9
  41ea67:	nop
  41ea68:	mov    bh,BYTE PTR [edi]
  41ea6a:	jle    0x41eae9
  41ea6c:	retf   
  41ea6d:	jo     0x41eaa4
  41ea6f:	jp     0x41ea96
  41ea71:	mov    edx,0xe55a5b71
  41ea76:	imul   DWORD PTR [eax-0x36]
  41ea79:	push   eax
  41ea7a:	mov    ebx,ebp
  41ea7c:	add    cl,BYTE PTR [ecx-0x5224d8c8]
  41ea82:	loop   0x41ea3b
  41ea84:	(bad)  
  41ea85:	jmp    0x1f3e973f
  41ea8a:	pop    esp
  41ea8b:	xchg   esp,eax
  41ea8c:	add    BYTE PTR [ecx+0x26],dl
  41ea8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea90:	or     DWORD PTR ds:0x338e2c38,edx
  41ea96:	push   eax
  41ea97:	and    al,0xe7
  41ea99:	ret    0xb555
  41ea9c:	loope  0x41ea73
  41ea9e:	or     ebx,ecx
  41eaa0:	sub    BYTE PTR [esi+ebp*1+0x3b0e8b76],dl
  41eaa7:	jl     0x41ea5f
  41eaa9:	xchg   edi,eax
  41eaaa:	out    0x1f,eax
  41eaac:	hlt    
  41eaad:	nop
  41eaae:	dec    eax
  41eaaf:	sbb    al,0x15
  41eab1:	mov    DWORD PTR [eax],ecx
  41eab3:	dec    edi
  41eab4:	pop    ecx
  41eab5:	mov    DWORD PTR [eax+0x1b],0xc371e6cb
  41eabc:	adc    dl,al
  41eabe:	test   eax,0x57ddf845
  41eac3:	leave  
  41eac4:	mov    WORD PTR [edx-0x3b],gs
  41eac7:	cwde   
  41eac8:	fs dec ecx
  41eaca:	stc    
  41eacb:	sbb    eax,0x9fdd9af5
  41ead0:	cmp    eax,0x8e76fb0d
  41ead5:	(bad)  
  41ead7:	mov    WORD PTR [edi],ss
  41ead9:	fcom   QWORD PTR [ecx-0x5a80f0b3]
  41eadf:	lahf   
  41eae0:	dec    ebp
  41eae1:	call   0xc138:0xe6541c54
  41eae8:	into   
  41eae9:	pop    ebp
  41eaea:	test   BYTE PTR [eax],0x30
  41eaed:	mul    DWORD PTR [ebp-0x54]
  41eaf0:	xchg   DWORD PTR [ebp-0x4f134c8f],ebx
  41eaf6:	fs cs mov dh,0xd1
  41eafa:	add    ebx,DWORD PTR [edi-0x73]
  41eafd:	clc    
  41eafe:	cmp    ebp,DWORD PTR [edi]
  41eb00:	aaa    
  41eb01:	test   DWORD PTR [eax-0x5c],edx
  41eb04:	sub    bl,BYTE PTR [eax+0x37ed6a6c]
  41eb0a:	xor    ebp,DWORD PTR [edi]
  41eb0c:	or     al,0xc2
  41eb0e:	les    esi,FWORD PTR [ebp-0x79]
  41eb11:	xor    eax,0x90135406
  41eb16:	pop    ebp
  41eb17:	scas   eax,DWORD PTR es:[edi]
  41eb18:	inc    esi
  41eb19:	ds in  eax,0x91
  41eb1c:	arpl   WORD PTR [eax-0x6c7e7a94],sp
  41eb22:	xchg   ebp,eax
  41eb23:	cmp    al,0x94
  41eb25:	ror    cl,0xee
  41eb28:	idiv   DWORD PTR [ebx+0x4044ce5a]
  41eb2e:	xor    BYTE PTR [eax+0x50],ch
  41eb31:	retf   0x3215
  41eb34:	xor    dl,BYTE PTR [ebx]
  41eb36:	mov    ebp,0xfba10b37
  41eb3b:	xchg   DWORD PTR [ecx-0x57],ecx
  41eb3e:	mov    ebx,0xc82beb21
  41eb43:	inc    edx
  41eb44:	sbb    dh,ch
  41eb46:	jb     0x41eb2f
  41eb48:	pushf  
  41eb49:	xchg   edx,eax
  41eb4a:	xlat   BYTE PTR ds:[ebx]
  41eb4b:	out    0x10,al
  41eb4d:	bound  esp,QWORD PTR [ebx-0x314662b4]
  41eb53:	shl    DWORD PTR ds:0x35b2f02f,0x63
  41eb5a:	icebp  
  41eb5b:	push   ecx
  41eb5c:	mov    ebx,0x6f1ae1a9
  41eb61:	push   ds
  41eb62:	jnp    0x41eb81
  41eb64:	xchg   esp,eax
  41eb65:	pop    ecx
  41eb66:	pop    esp
  41eb67:	xor    bl,BYTE PTR [ecx+0x5b372500]
  41eb6d:	into   
  41eb6e:	sahf   
  41eb6f:	ror    BYTE PTR [ecx+esi*8+0x36],1
  41eb73:	push   eax
  41eb74:	ret    0xc564
  41eb77:	sbb    al,0x13
  41eb79:	mov    eax,ds:0x7585910e
  41eb7e:	in     eax,0x57
  41eb80:	inc    ebx
  41eb81:	xchg   BYTE PTR [edx],dl
  41eb83:	inc    edi
  41eb84:	mov    al,0xda
  41eb86:	mov    WORD PTR [eax-0x11],ds
  41eb89:	fidiv  WORD PTR [eax-0x2d]
  41eb8c:	cmp    esp,DWORD PTR [edx+0x2b7003d]
  41eb92:	out    0x18,eax
  41eb94:	sub    eax,0x81c16d2e
  41eb99:	jb     0x41eb1d
  41eb9b:	adc    bl,dh
  41eb9d:	enter  0x158a,0x86
  41eba1:	push   es
  41eba2:	xlat   BYTE PTR ds:[ebx]
  41eba3:	dec    esp
  41eba4:	dec    ebx
  41eba5:	pop    esi
  41eba6:	xor    al,0x5e
  41eba8:	cmp    eax,0x5320a375
  41ebad:	fwait
  41ebae:	xor    edi,edx
  41ebb0:	loop   0x41eb53
  41ebb2:	test   al,0x76
  41ebb4:	daa    
  41ebb5:	fbld   TBYTE PTR [eax-0x4551f869]
  41ebbb:	mov    ds:0x69d7d242,al
  41ebc0:	xor    bh,dh
  41ebc2:	sub    eax,0xcebb8cb
  41ebc7:	leave  
  41ebc8:	imul   DWORD PTR [ebx]
  41ebca:	and    bl,al
  41ebcc:	rol    DWORD PTR cs:[edi-0x4e],0x1d
  41ebd1:	inc    ecx
  41ebd2:	outs   dx,BYTE PTR ds:[esi]
  41ebd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebd4:	jmp    0x52eed753
  41ebd9:	nop
  41ebda:	ss call 0xf415:0xb13cd1f7
  41ebe2:	test   BYTE PTR [edx],0xb2
  41ebe5:	add    DWORD PTR [edi],esp
  41ebe7:	imul   edx,DWORD PTR [edx+edx*2-0x42],0x3c9fc7e3
  41ebef:	mov    ah,0x67
  41ebf1:	jno    0x41ebd6
  41ebf3:	mov    ds:0x52af8ac2,al
  41ebf8:	adc    DWORD PTR [eax],esp
  41ebfa:	and    BYTE PTR [esi],ch
  41ebfc:	xchg   edi,eax
  41ebfd:	aam    0xbb
  41ebff:	cmp    eax,0x67968794
  41ec04:	pop    DWORD PTR [esi]
  41ec06:	sub    bl,cl
  41ec08:	in     eax,dx
  41ec09:	cwde   
  41ec0a:	mov    dl,0x63
  41ec0c:	xlat   BYTE PTR ds:[ebx]
  41ec0d:	mov    DWORD PTR [edi],esi
  41ec0f:	pop    ss
  41ec10:	or     edx,DWORD PTR [edx-0x33]
  41ec13:	sub    eax,0x38ca4505
  41ec18:	mov    eax,ds:0x4bf0b3f8
  41ec1d:	lds    eax,FWORD PTR [ebp+0x10374fb0]
  41ec23:	(bad)  
  41ec24:	mov    ebp,0x60e53148
  41ec29:	fisubr WORD PTR [esi]
  41ec2b:	(bad)  
  41ec2c:	jnp    0x41ec64
  41ec2e:	loopne 0x41ec18
  41ec30:	xchg   ebp,eax
  41ec31:	push   0x19
  41ec33:	xor    ch,BYTE PTR [ebp-0x6e]
  41ec36:	pop    esi
  41ec37:	and    eax,0xf1ffa35f
  41ec3c:	in     eax,dx
  41ec3d:	and    ecx,DWORD PTR [ecx+0x4]
  41ec40:	xor    al,0xec
  41ec42:	ret    
  41ec43:	test   BYTE PTR [edi+0x15dc421c],ah
  41ec49:	(bad)  
  41ec4a:	je     0x41ebf6
  41ec4c:	and    bh,bh
  41ec4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4f:	add    ecx,DWORD PTR [ebx]
  41ec51:	int3   
  41ec52:	jp     0x41ecbf
  41ec54:	sbb    DWORD PTR ds:0x254ee33e,ebp
  41ec5a:	jecxz  0x41ec49
  41ec5c:	xchg   edi,edi
  41ec5e:	sub    al,0x11
  41ec60:	pushf  
  41ec61:	(bad)  
  41ec62:	or     bh,ah
  41ec64:	push   cs
  41ec65:	push   esi
  41ec66:	jb     0x41ec12
  41ec68:	ins    BYTE PTR es:[edi],dx
  41ec69:	imul   eax,DWORD PTR [eax+0x7e2ea348],0xe515d899
  41ec73:	or     bh,bh
  41ec75:	or     eax,0xb5ca114
  41ec7a:	xor    edx,DWORD PTR [ebx+ebx*8]
  41ec7d:	data16 outs dx,BYTE PTR ss:[esi]
  41ec80:	inc    edx
  41ec81:	xchg   ebx,eax
  41ec82:	data16 icebp 
  41ec84:	vpavgb ymm6,ymm2,YMMWORD PTR [edx]
  41ec88:	test   dl,dl
  41ec8a:	neg    dh
  41ec8c:	or     ebp,ecx
  41ec8e:	popf   
  41ec8f:	cwde   
  41ec90:	(bad)  
  41ec91:	sbb    al,0x39
  41ec93:	fwait
  41ec94:	test   DWORD PTR [eax-0x25687065],ebp
  41ec9a:	xchg   cl,bh
  41ec9c:	xor    bh,cl
  41ec9e:	loope  0x41ecb6
  41eca0:	lods   eax,DWORD PTR ds:[esi]
  41eca1:	popa   
  41eca2:	aaa    
  41eca3:	pop    eax
  41eca4:	pop    esp
  41eca5:	(bad)  
  41eca6:	adc    dh,BYTE PTR [eax]
  41eca8:	or     DWORD PTR [esi-0x7d598ec2],esp
  41ecae:	push   edi
  41ecaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb0:	out    dx,eax
  41ecb1:	add    eax,0xf610df77
  41ecb6:	fidivr DWORD PTR [esi-0x5c]
  41ecb9:	mov    ecx,0x206220ba
  41ecbe:	adc    dl,BYTE PTR [ecx+0x3c]
  41ecc1:	data16 xor BYTE PTR [ecx],dh
  41ecc4:	adc    al,0xdf
  41ecc6:	inc    DWORD PTR [ecx-0x20e05be0]
  41eccc:	(bad)  
  41eccd:	mov    eax,0x93fff5dd
  41ecd2:	daa    
  41ecd3:	jge    0x41ec6d
  41ecd5:	popf   
  41ecd6:	and    esi,esp
  41ecd8:	pushf  
  41ecd9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ecdb:	lods   al,BYTE PTR ds:[esi]
  41ecdc:	xchg   ebx,eax
  41ecdd:	push   es
  41ecde:	das    
  41ecdf:	xchg   esp,eax
  41ece0:	mov    eax,0x9f0a027d
  41ece5:	addr16 loopne 0x41ed18
  41ece8:	add    al,0xaa
  41ecea:	sbb    eax,0xe5e8c8ec
  41ecef:	and    bh,BYTE PTR [eax-0x2d]
  41ecf2:	jne    0x41ece9
  41ecf4:	cmp    al,BYTE PTR [ebx]
  41ecf6:	mov    bl,BYTE PTR [ecx-0x6a13828c]
  41ecfc:	xlat   BYTE PTR ds:[ebx]
  41ecfd:	test   DWORD PTR [eax-0x71],ecx
  41ed00:	cwde   
  41ed01:	pop    ebx
  41ed02:	xchg   edi,eax
  41ed03:	js     0x41ecc2
  41ed05:	fyl2x  
  41ed07:	xor    edi,DWORD PTR [ebx]
  41ed09:	jecxz  0x41ed3d
  41ed0b:	aas    
  41ed0c:	adc    cl,0x2
  41ed0f:	mov    ch,0x16
  41ed11:	mov    bh,0xe
  41ed13:	mov    bl,al
  41ed15:	clc    
  41ed16:	addr16 mov esp,0x1a23a901
  41ed1c:	sbb    al,0x4
  41ed1e:	push   ebx
  41ed1f:	xchg   DWORD PTR [ecx],edx
  41ed21:	add    esi,DWORD PTR [edx-0x8236078]
  41ed27:	mov    DWORD PTR [edx+0x19],ebx
  41ed2a:	in     al,0x61
  41ed2c:	test   DWORD PTR [ebp+0x63943203],ecx
  41ed32:	es push ebp
  41ed34:	cwde   
  41ed35:	repz (bad) 
  41ed37:	mov    ebp,cs
  41ed39:	dec    edx
  41ed3a:	sbb    ebx,ebp
  41ed3c:	inc    edi
  41ed3d:	lods   eax,DWORD PTR ds:[esi]
  41ed3e:	and    DWORD PTR [ecx+0x57],ecx
  41ed41:	fadd   DWORD PTR [esi-0x1f]
  41ed44:	mov    ecx,0x1f1cf6a1
  41ed49:	mov    DWORD PTR [ebx+0xdfa4147],esi
  41ed4f:	xlat   BYTE PTR ds:[ebx]
  41ed50:	pop    ebx
  41ed51:	ficom  DWORD PTR [edx-0x45]
  41ed54:	gs retf 0x7e11
  41ed58:	dec    eax
  41ed59:	stos   BYTE PTR es:[edi],al
  41ed5a:	enter  0x9c84,0x15
  41ed5e:	xchg   ecx,eax
  41ed5f:	sub    bh,cl
  41ed61:	call   0x521c:0xd8814f53
  41ed68:	int3   
  41ed69:	cmp    esp,DWORD PTR [esi]
  41ed6b:	jnp    0x41ed80
  41ed6d:	or     BYTE PTR cs:[ebx-0x49],dh
  41ed71:	adc    al,BYTE PTR [ecx-0x46f59d45]
  41ed77:	ds (bad) 
  41ed7a:	ret    0x58a5
  41ed7d:	div    bl
  41ed7f:	jecxz  0x41ed1a
  41ed81:	icebp  
  41ed82:	mov    cl,0xf2
  41ed84:	jae    0x41ed99
  41ed86:	pop    esi
  41ed87:	fst    QWORD PTR [edx]
  41ed89:	mov    eax,0xbc41b272
  41ed8e:	or     al,0x5c
  41ed90:	xchg   esi,eax
  41ed91:	add    DWORD PTR [edx],ecx
  41ed93:	xchg   edx,ebp
  41ed95:	and    BYTE PTR [edi+0x6beb7528],bl
  41ed9b:	daa    
  41ed9c:	adc    eax,0x4df03bd5
  41eda1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eda2:	popfw  
  41eda4:	retf   
  41eda5:	inc    eax
  41eda6:	cli    
  41eda7:	mov    al,0x3d
  41eda9:	and    edi,0x71
  41edac:	test   BYTE PTR [edx+ebp*1-0x16],0x57
  41edb1:	and    BYTE PTR [ecx],cl
  41edb3:	dec    ecx
  41edb4:	scas   eax,DWORD PTR es:[edi]
  41edb5:	out    0x3f,al
  41edb7:	bound  esi,QWORD PTR [eax+eax*4+0x206d69e2]
  41edbe:	pushf  
  41edbf:	or     ebx,DWORD PTR [eax-0x46]
  41edc2:	add    al,0xd2
  41edc4:	xchg   ebx,eax
  41edc5:	hlt    
  41edc6:	mov    BYTE PTR [edx-0x535c8daf],ch
  41edcc:	gs xchg edx,esp
  41edcf:	out    0x96,eax
  41edd1:	in     eax,dx
  41edd2:	in     eax,0x23
  41edd4:	jno    0x41ede2
  41edd6:	nop
  41edd7:	jmp    0x41edb1
  41edd9:	cmp    al,0xc9
  41eddb:	das    
  41eddc:	ffreep st(0)
  41edde:	inc    eax
  41eddf:	(bad)  
  41ede0:	cmp    bl,BYTE PTR gs:[ebp+edi*8-0x7c]
  41ede5:	push   ebp
  41ede6:	pop    eax
  41ede7:	sub    eax,0x99cc4ae3
  41edec:	test   DWORD PTR [ebp-0x58],ecx
  41edef:	fs stos BYTE PTR es:[edi],al
  41edf1:	lods   al,BYTE PTR ds:[esi]
  41edf2:	xor    edi,DWORD PTR [ecx-0x2277def8]
  41edf8:	jb     0x41ee28
  41edfa:	dec    ebp
  41edfb:	xchg   ecx,ecx
  41edfd:	call   0x53a68bb
  41ee02:	mov    ebx,DWORD PTR [ebp-0x588c1a6a]
  41ee08:	sub    DWORD PTR [edi],eax
  41ee0a:	pop    esp
  41ee0b:	fsub   QWORD PTR [ecx+0x22]
  41ee0e:	rcl    DWORD PTR [eax],cl
  41ee10:	jnp    0x41ee43
  41ee12:	lods   eax,DWORD PTR ds:[esi]
  41ee13:	push   ebp
  41ee14:	rol    edx,cl
  41ee16:	mov    BYTE PTR [ebx],al
  41ee18:	outs   dx,DWORD PTR ds:[esi]
  41ee19:	dec    eax
  41ee1a:	aas    
  41ee1b:	cmp    eax,0x62cc120f
  41ee20:	and    eax,0xb320adbe
  41ee25:	add    DWORD PTR [eax],edx
  41ee27:	adc    BYTE PTR [eax+0x4e],bl
  41ee2a:	and    DWORD PTR [edi],0xffffffea
  41ee2d:	sbb    cl,BYTE PTR [edi+eax*4+0x45b2b05f]
  41ee34:	jg     0x41ee0b
  41ee36:	(bad)  
  41ee37:	fisubr DWORD PTR [ebp+0x68714ada]
  41ee3d:	push   edx
  41ee3e:	add    al,0xf5
  41ee40:	inc    esp
  41ee41:	cmp    dh,BYTE PTR [esi-0x3926d18a]
  41ee47:	ret    0x2913
  41ee4a:	leave  
  41ee4b:	pop    edx
  41ee4c:	xchg   ebx,eax
  41ee4d:	in     eax,dx
  41ee4e:	mov    ah,0x81
  41ee50:	pop    eax
  41ee51:	sub    DWORD PTR [ebx-0x1e7224e1],ebx
  41ee57:	add    al,0x6f
  41ee59:	inc    edx
  41ee5a:	enter  0x91f5,0x7b
  41ee5e:	xor    BYTE PTR [esi-0x3c],ah
  41ee61:	lods   eax,DWORD PTR ds:[esi]
  41ee62:	cvtpi2ps xmm1,QWORD PTR [eax+0x4bb81abe]
  41ee69:	jmp    0x41eeb8
  41ee6b:	adc    eax,0x8e426a7c
  41ee70:	add    eax,0x4b9c90e5
  41ee75:	cmp    eax,0xee3bf561
  41ee7a:	or     cl,BYTE PTR [ebx]
  41ee7c:	mov    BYTE PTR [esi-0x484f0613],cl
  41ee82:	popa   
  41ee83:	add    DWORD PTR [eax-0x68],ecx
  41ee86:	mov    al,0x84
  41ee88:	fnsave [edi-0x6d]
  41ee8b:	int3   
  41ee8c:	xchg   ebx,eax
  41ee8d:	call   0xb48a8f32
  41ee92:	(bad)  
  41ee93:	(bad)  
  41ee94:	adc    bl,bh
  41ee96:	rcr    BYTE PTR [eax-0x68],0x81
  41ee9a:	aas    
  41ee9b:	retf   0xa29f
  41ee9e:	mov    al,bl
  41eea0:	push   ebp
  41eea1:	jp     0x41ee9b
  41eea3:	pop    ss
  41eea4:	nop
  41eea5:	or     esi,DWORD PTR [esi+edx*2-0x39b0d2e8]
  41eeac:	or     al,BYTE PTR [ebp+ecx*4+0x35]
  41eeb0:	jb     0x41ee85
  41eeb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb3:	imul   eax,DWORD PTR [eax+ebx*8],0x26
  41eeb7:	adc    esi,esi
  41eeb9:	jne    0x41ef0e
  41eebb:	mov    ds:0xa4bda274,eax
  41eec0:	rcr    BYTE PTR [edi+0x20505edb],cl
  41eec6:	repz std 
  41eec8:	inc    edx
  41eec9:	cmc    
  41eeca:	pop    esi
  41eecb:	call   FWORD PTR [ebx+0x365d08bc]
  41eed1:	enter  0x664c,0xeb
  41eed5:	in     eax,0xbd
  41eed7:	or     eax,0x5a3d08e4
  41eedc:	dec    esp
  41eedd:	shl    DWORD PTR [ebp+0x9],0x4b
  41eee1:	(bad)  
  41eee2:	jmp    0x41ef39
  41eee4:	cmp    eax,0x132c140a
  41eee9:	int    0x7e
  41eeeb:	xor    DWORD PTR [ebp-0x6f9a1146],ebp
  41eef1:	imul   ebx,edi,0x72
  41eef4:	push   ds
  41eef5:	mov    WORD PTR [esi-0x70],cs
  41eef8:	jno    0x41ef2f
  41eefa:	mov    al,0x9f
  41eefc:	jp     0x41eec7
  41eefe:	xor    esi,edi
  41ef00:	scas   eax,DWORD PTR es:[edi]
  41ef01:	sar    DWORD PTR [eax],0x4c
  41ef04:	clc    
  41ef05:	mov    ecx,0x7829fc06
  41ef0a:	sar    BYTE PTR [esi+0x15219fa0],1
  41ef10:	aas    
  41ef11:	sbb    DWORD PTR [edi-0xb1fe34a],esp
  41ef17:	fcmovne st,st(1)
  41ef19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1a:	mov    gs:0x1ef19fa1,ax
  41ef21:	xor    bh,dh
  41ef23:	outs   dx,BYTE PTR ds:[esi]
  41ef24:	(bad)  
  41ef25:	out    0xf0,al
  41ef27:	rcl    BYTE PTR [eax-0x5d8df0ec],1
  41ef2d:	pop    ss
  41ef2e:	mov    ah,0x6
  41ef30:	cmp    eax,0x9a176c7
  41ef35:	inc    edx
  41ef36:	sub    esp,eax
  41ef38:	pop    edi
  41ef39:	out    dx,eax
  41ef3a:	cmp    al,0x18
  41ef3c:	or     dl,BYTE PTR [edx-0x38]
  41ef3f:	push   ebx
  41ef40:	push   ebx
  41ef41:	mov    eax,ds:0x3d69f139
  41ef46:	sub    DWORD PTR [eax+edx*4+0x3a],ebx
  41ef4a:	adc    BYTE PTR [eax+0x23e12ebe],ch
  41ef50:	jmp    DWORD PTR [eax-0x6df6dad4]
  41ef56:	add    eax,0x45f4efa
  41ef5b:	or     BYTE PTR [ebx-0x38],dh
  41ef5e:	sahf   
  41ef5f:	pop    eax
  41ef60:	lods   al,BYTE PTR ds:[esi]
  41ef61:	lds    esi,FWORD PTR [ecx+0x40]
  41ef64:	idiv   edi
  41ef66:	rcr    bl,0x5b
  41ef69:	not    al
  41ef6b:	pop    ebp
  41ef6c:	push   0xac27f9c0
  41ef71:	test   ebp,esi
  41ef73:	adc    cl,0xaa
  41ef76:	dec    ebp
  41ef77:	stc    
  41ef78:	in     eax,0x9a
  41ef7a:	mov    al,ds:0x3221ac71
  41ef7f:	mov    edi,0xaf9571e0
  41ef84:	xor    eax,0x5a664920
  41ef89:	out    dx,al
  41ef8a:	retf   
  41ef8b:	add    BYTE PTR ds:0x1e3d9059,0xed
  41ef92:	or     eax,0xfbd7991c
  41ef97:	lods   al,BYTE PTR ds:[esi]
  41ef98:	or     eax,0x2e93960e
  41ef9d:	lds    ebx,FWORD PTR [ebx+0x14]
  41efa0:	pop    ds
  41efa1:	cmp    BYTE PTR [eax],bh
  41efa3:	xchg   DWORD PTR [esi+0x8e40994],edi
  41efa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efaa:	pop    eax
  41efab:	mov    dl,0x4e
  41efae:	sub    DWORD PTR [eax+0x7bb81ccd],ebp
  41efb4:	aaa    
  41efb5:	test   al,0xad
  41efb7:	xlat   BYTE PTR ds:[ebx]
  41efb8:	imul   edx,ecx,0xffffffe4
  41efbb:	push   ss
  41efbc:	push   esp
  41efbd:	jmp    0x80c4:0x5a418b00
  41efc4:	pop    ds
  41efc5:	xchg   edx,eax
  41efc6:	rcr    dl,0x9d
  41efc9:	scas   eax,DWORD PTR es:[edi]
  41efca:	add    al,0x2f
  41efcc:	adc    DWORD PTR [eax],ebp
  41efce:	icebp  
  41efcf:	cmp    esi,DWORD PTR ds:0x43eb812a
  41efd5:	inc    eax
  41efd6:	mov    ds:0x80ebedb4,al
  41efdb:	pop    edx
  41efdc:	(bad)  
  41efdd:	idiv   bl
  41efdf:	pop    edi
  41efe0:	fsub   DWORD PTR [eax]
  41efe2:	loope  0x41f05a
  41efe4:	dec    esp
  41efe5:	inc    esi
  41efe6:	mov    BYTE PTR [ebx+0xfe05445],dh
  41efec:	and    al,0xbb
  41efee:	ror    bh,0x4a
  41eff1:	dec    ebx
  41eff2:	pop    ds
  41eff3:	in     al,0x87
  41eff5:	aad    0x22
  41eff7:	call   0xcab2:0x53046cd9
  41effe:	cmp    al,0xb7
  41f000:	sahf   
  41f001:	push   0x25
  41f003:	in     eax,dx
  41f004:	mov    cl,0xfb
  41f006:	inc    edx
  41f007:	aam    0xd4
  41f009:	or     DWORD PTR [esi-0x2d],esi
  41f00c:	rcl    DWORD PTR [edx-0x6c359719],1
  41f012:	pop    ds
  41f013:	sbb    eax,0x5354d6e7
  41f018:	fldcw  WORD PTR [edx+edx*2+0x62072f52]
  41f01f:	sbb    ecx,edi
  41f021:	jp     0x41f08e
  41f023:	fs test ah,bh
  41f026:	jo     0x41efe0
  41f028:	sub    esp,DWORD PTR [edi+0x58]
  41f02b:	(bad)  
  41f02c:	mov    esi,0x1a43425d
  41f031:	and    eax,0x8fd9dc2d
  41f036:	daa    
  41f037:	xchg   ebx,eax
  41f038:	push   0x72
  41f03a:	call   0xa33dee77
  41f03f:	or     ah,bh
  41f041:	xchg   BYTE PTR [edi],bh
  41f043:	pop    ebx
  41f044:	add    DWORD PTR [edx+0x7b],ebp
  41f047:	test   cl,dh
  41f049:	dec    ecx
  41f04a:	sbb    ebp,DWORD PTR [edx]
  41f04c:	sub    al,dh
  41f04e:	pop    ecx
  41f04f:	loope  0x41f05e
  41f051:	pop    es
  41f052:	push   ss
  41f053:	xor    eax,0xd38d99f8
  41f058:	sub    BYTE PTR [esi-0x20118fbe],bh
  41f05e:	outs   dx,DWORD PTR ds:[esi]
  41f05f:	push   esi
  41f060:	adc    ebp,DWORD PTR [eax]
  41f062:	push   cs
  41f063:	or     al,0xf6
  41f065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f066:	loop   0x41eff9
  41f068:	jp     0x41f09e
  41f06a:	call   0x28ee8d92
  41f06f:	les    ebx,FWORD PTR [esi+ebx*1-0x1414ef39]
  41f076:	ror    edi,1
  41f078:	mov    edx,0xbe8cca01
  41f07d:	mov    DWORD PTR [eax-0x3c],esi
  41f080:	fldenv [ebp*8+0x36f4f062]
  41f087:	push   ebx
  41f088:	push   esi
  41f089:	scas   al,BYTE PTR es:[edi]
  41f08a:	in     eax,0x3d
  41f08c:	fild   WORD PTR [ebx-0x6b]
  41f08f:	mov    ebp,0xce5e262b
  41f094:	cmp    cl,bh
  41f096:	pop    edx
  41f097:	add    BYTE PTR ds:0x3093fe78,0xf
  41f09e:	xor    DWORD PTR [ecx-0x27],ebx
  41f0a1:	ss pop es
  41f0a3:	(bad)  
  41f0a4:	push   eax
  41f0a5:	(bad)  
  41f0a6:	pop    ss
  41f0a7:	ins    BYTE PTR es:[edi],dx
  41f0a8:	add    al,0xd7
  41f0aa:	jmp    0x385f:0x9b4562e5
  41f0b1:	and    eax,DWORD PTR [esi]
  41f0b3:	mov    bl,0xc5
  41f0b5:	lock jb 0x41f0aa
  41f0b8:	add    edx,esp
  41f0ba:	and    eax,0x712b117e
  41f0bf:	dec    ebp
  41f0c0:	addr16 adc eax,0x789aa179
  41f0c6:	xchg   esp,eax
  41f0c7:	cld    
  41f0c8:	js     0x41f110
  41f0ca:	push   0x48771e00
  41f0cf:	imul   eax,DWORD PTR [ebx],0x2d
  41f0d2:	test   DWORD PTR [eax+0xc],ecx
  41f0d5:	rcl    DWORD PTR [esi+0x87c68af],0x50
  41f0dc:	cmp    al,0x7
  41f0de:	adc    eax,0x2b9c7901
  41f0e3:	push   ds
  41f0e4:	jne    0x41f12b
  41f0e6:	pop    ebp
  41f0e7:	xor    al,0x69
  41f0e9:	jmp    0x5ae56e1
  41f0ee:	jle    0x41f103
  41f0f0:	sub    al,0x19
  41f0f2:	sti    
  41f0f3:	dec    ecx
  41f0f4:	rol    dh,cl
  41f0f6:	xchg   DWORD PTR [ebp-0x1e],ecx
  41f0f9:	cmp    eax,0x2502487e
  41f0fe:	shl    edx,1
  41f100:	sub    cl,BYTE PTR [esi+eax*1]
  41f103:	jno    0x41f0d3
  41f105:	xor    BYTE PTR ds:[edi-0x397d332e],0x6f
  41f10d:	add    DWORD PTR [eax],esp
  41f10f:	pop    ss
  41f110:	data16 test al,0x94
  41f113:	iret   
  41f114:	and    ebx,eax
  41f116:	(bad)  
  41f117:	pop    ds
  41f118:	cdq    
  41f119:	xchg   esp,eax
  41f11a:	xor    eax,esp
  41f11c:	ss jns 0x41f148
  41f11f:	gs popf 
  41f121:	push   ecx
  41f122:	int3   
  41f123:	cmp    BYTE PTR [ecx-0x6b85fae9],0x1d
  41f12a:	aaa    
  41f12b:	or     dh,BYTE PTR [eax-0x853c769]
  41f131:	out    0xb0,eax
  41f133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f134:	into   
  41f135:	pop    ebx
  41f136:	mov    DWORD PTR [eax+ebx*8+0x45646f02],ebx
  41f13d:	enter  0x4859,0x46
  41f141:	mov    ebp,DWORD PTR [eax+0x50]
  41f144:	mov    fs,WORD PTR [ebx+0x6c]
  41f147:	xchg   esi,eax
  41f148:	scas   eax,DWORD PTR es:[edi]
  41f149:	stc    
  41f14a:	mov    esp,0x821d0d36
  41f14f:	(bad)  
  41f150:	cmp    BYTE PTR [eax-0x1344d3c3],ah
  41f156:	(bad)  
  41f157:	cld    
  41f158:	clc    
  41f159:	ss cs mov bh,0x4
  41f15d:	xor    DWORD PTR [esi],edi
  41f15f:	pop    edx
  41f160:	add    eax,0x3ec7e4d6
  41f165:	test   BYTE PTR [ebp-0x240b87f7],ch
  41f16b:	add    ebp,eax
  41f16d:	test   al,0x9f
  41f16f:	mov    dl,0x4
  41f171:	cmp    bl,BYTE PTR ds:0x51d84ce6
  41f177:	mov    cl,0xa6
  41f179:	pop    edx
  41f17a:	pusha  
  41f17b:	out    0xf5,eax
  41f17d:	mov    eax,0x1933270d
  41f182:	and    DWORD PTR [edi-0x7499abb3],0x1a
  41f189:	fidivr DWORD PTR [ecx]
  41f18b:	inc    dh
  41f18d:	pop    ebp
  41f18e:	les    ebx,FWORD PTR [ebx-0x1611b2fd]
  41f194:	mov    al,ds:0xd44602de
  41f199:	jle    0x41f193
  41f19b:	jb     0x41f1d5
  41f19d:	sub    eax,0x8e8a1ce2
  41f1a2:	ins    BYTE PTR es:[edi],dx
  41f1a3:	out    0x73,al
  41f1a5:	xlat   BYTE PTR ds:[ebx]
  41f1a6:	push   esi
  41f1a7:	cmp    BYTE PTR [ebx-0x36],0x3a
  41f1ab:	mov    esp,0x32fe7b62
  41f1b0:	aam    0x7a
  41f1b2:	fisubr DWORD PTR [esi+0x2a73655]
  41f1b8:	mov    ebx,0x7865edfd
  41f1bd:	outs   dx,DWORD PTR ds:[esi]
  41f1be:	fdiv   QWORD PTR [ebp+0x34786882]
  41f1c4:	push   eax
  41f1c5:	imul   edx,DWORD PTR [ebx-0x1ca611f0],0xf3419ab4
  41f1cf:	mov    cl,0x93
  41f1d1:	mov    al,0x26
  41f1d3:	(bad)  
  41f1d4:	xchg   edx,eax
  41f1d5:	(bad)  
  41f1d7:	xor    BYTE PTR [ebx+ecx*2+0xb654487],bl
  41f1de:	pop    ss
  41f1df:	stc    
  41f1e0:	mov    ah,0xfe
  41f1e2:	dec    edi
  41f1e3:	dec    BYTE PTR ds:0xd6767075
  41f1e9:	inc    ecx
  41f1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1eb:	adc    DWORD PTR [esi],edx
  41f1ed:	repnz mov bl,0xe9
  41f1f0:	xor    eax,0x388b210d
  41f1f5:	pop    es
  41f1f6:	stc    
  41f1f7:	pop    esi
  41f1f8:	icebp  
  41f1f9:	out    dx,al
  41f1fa:	fstp   DWORD PTR [ebp+ecx*2+0x9530200]
  41f201:	pop    ebx
  41f202:	cmp    edi,DWORD PTR [edi]
  41f204:	add    eax,0x34cd0234
  41f209:	and    ch,cl
  41f20b:	loop   0x41f1f7
  41f20d:	cli    
  41f20e:	inc    eax
  41f20f:	popw   ss
  41f211:	js     0x41f243
  41f213:	cmp    esp,DWORD PTR [ecx-0x4d]
  41f216:	pop    es
  41f217:	cmp    BYTE PTR [edx+0x1ece07af],dl
  41f21d:	mov    ds:0xb41cbf51,al
  41f222:	jae    0x41f204
  41f224:	xlat   BYTE PTR ds:[ebx]
  41f225:	leave  
  41f226:	pusha  
  41f227:	xchg   esi,eax
  41f228:	xor    esp,DWORD PTR [edi+edx*2+0x406832bc]
  41f22f:	adc    DWORD PTR [eax+0x5248ec7b],ebp
  41f235:	sbb    eax,0x21905532
  41f23a:	arpl   WORD PTR [ecx+0x42],si
  41f23d:	dec    eax
  41f23f:	xchg   DWORD PTR [ebp-0x6ef881b1],edi
  41f245:	or     BYTE PTR [edx-0x56752100],bh
  41f24b:	ret    0xb275
  41f24e:	pusha  
  41f24f:	rcr    DWORD PTR [eax],cl
  41f251:	imul   ebx
  41f253:	adc    dh,dh
  41f255:	pushf  
  41f256:	jb     0x41f213
  41f258:	jnp    0x41f2cd
  41f25a:	push   cs
  41f25b:	pop    esi
  41f25c:	ror    BYTE PTR [edi+0x5ef281e],0x89
  41f263:	adc    BYTE PTR [ecx],cl
  41f265:	sbb    BYTE PTR [edx-0x2e],dl
  41f268:	jmp    0xffcb:0x4e870412
  41f26f:	xchg   esi,eax
  41f270:	mov    ch,ah
  41f272:	loop   0x41f21c
  41f274:	sbb    BYTE PTR ds:0xf283495e,dh
  41f27a:	add    eax,0xdbd6048a
  41f27f:	ja     0x41f2fa
  41f281:	call   0x80e4be49
  41f286:	shl    ecx,1
  41f288:	sbb    edx,DWORD PTR [edi-0x5f54f466]
  41f28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f28f:	pop    edx
  41f290:	mov    WORD PTR [ebx-0x76],fs
  41f293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f294:	ins    DWORD PTR es:[edi],dx
  41f295:	sahf   
  41f296:	add    al,0x8
  41f298:	pop    ss
  41f299:	data16 cld 
  41f29b:	xchg   edi,eax
  41f29c:	jg     0x41f279
  41f29e:	fistp  DWORD PTR [ebp+0x5b]
  41f2a1:	ins    DWORD PTR es:[edi],dx
  41f2a2:	xor    eax,0x49053261
  41f2a7:	or     dh,BYTE PTR [ebx]
  41f2a9:	popf   
  41f2aa:	loope  0x41f314
  41f2ac:	(bad)  
  41f2ad:	and    al,0xb5
  41f2af:	imul   DWORD PTR [edx]
  41f2b1:	mov    al,bh
  41f2b3:	fwait
  41f2b4:	bound  ebx,QWORD PTR ds:0x1f1dfccd
  41f2ba:	and    edx,edi
  41f2bc:	inc    edi
  41f2bd:	mov    esi,0x82656724
  41f2c2:	mov    ds:0x7d7807e7,eax
  41f2c7:	iret   
  41f2c8:	dec    eax
  41f2c9:	mov    eax,ds:0x3e578bea
  41f2ce:	push   es
  41f2cf:	sbb    dh,bh
  41f2d1:	frstor [edx]
  41f2d3:	push   ecx
  41f2d4:	xor    ah,BYTE PTR [edx+0x289de407]
  41f2da:	stos   DWORD PTR es:[edi],eax
  41f2db:	fcomp  DWORD PTR [ebx-0x28]
  41f2de:	lea    edi,[ecx+edi*4+0x59]
  41f2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e3:	scas   eax,DWORD PTR es:[edi]
  41f2e4:	add    ecx,ebp
  41f2e6:	mov    bh,0xee
  41f2e8:	loopne 0x41f2e7
  41f2ea:	ja     0x41f2f6
  41f2ec:	mov    esi,0xf9ce3386
  41f2f1:	push   ecx
  41f2f2:	scas   eax,DWORD PTR es:[edi]
  41f2f3:	jl     0x41f2ae
  41f2f5:	adc    edx,ebx
  41f2f7:	loop   0x41f313
  41f2f9:	push   ebx
  41f2fa:	sbb    ebx,edx
  41f2fc:	add    BYTE PTR [ebx],bl
  41f2fe:	or     al,0x3f
  41f300:	sbb    al,0x69
  41f302:	fidiv  DWORD PTR [eax+0x2d]
  41f305:	push   es
  41f306:	pop    ss
  41f307:	ficom  DWORD PTR [edx+0x3e5b53c5]
  41f30d:	out    dx,eax
  41f30e:	pop    edx
  41f30f:	jle    0x41f2b8
  41f311:	scas   al,BYTE PTR es:[edi]
  41f312:	int3   
  41f313:	cmp    ah,BYTE PTR [ebx]
  41f315:	xor    esi,DWORD PTR [edi]
  41f317:	and    eax,0xa8460112
  41f31c:	inc    ecx
  41f31d:	out    dx,eax
  41f31e:	mov    dl,0xbe
  41f320:	out    0x8e,eax
  41f322:	lods   eax,DWORD PTR ds:[esi]
  41f323:	inc    esp
  41f324:	dec    edi
  41f325:	or     DWORD PTR [edx+ebp*1-0x3ab37c73],0xffffff9b
  41f32d:	or     BYTE PTR [ebx+0x16174dab],ah
  41f333:	mov    esp,0xbc0d4935
  41f338:	fist   DWORD PTR [eax-0x5c09abec]
  41f33e:	sub    dh,0xd0
  41f341:	repnz enter 0x2a5b,0x50
  41f346:	not    DWORD PTR [ecx]
  41f348:	mov    ch,0xb6
  41f34a:	mov    gs,WORD PTR [eax+0x6ed7014c]
  41f350:	das    
  41f351:	or     BYTE PTR [ebp-0x34017638],ch
  41f357:	pushf  
  41f358:	push   cs
  41f359:	adc    ebx,DWORD PTR [eax]
  41f35b:	push   es
  41f35c:	mov    es:0x1e382798,eax
  41f362:	and    al,0x44
  41f364:	push   edi
  41f365:	jle    0x41f30a
  41f367:	push   DWORD PTR [esi-0xa]
  41f36a:	scas   eax,DWORD PTR es:[edi]
  41f36b:	add    al,0xc6
  41f36d:	mov    bh,bl
  41f36f:	imul   bl
  41f371:	inc    ecx
  41f372:	pusha  
  41f373:	sub    dh,cl
  41f375:	inc    eax
  41f376:	adc    esi,DWORD PTR [ebp+0x1d]
  41f379:	out    0x81,al
  41f37b:	sub    DWORD PTR [edx],ebx
  41f37d:	outs   dx,BYTE PTR ds:[esi]
  41f37e:	js     0x41f31d
  41f380:	je     0x41f3a8
  41f382:	in     eax,dx
  41f383:	adc    eax,0x61f71995
  41f388:	inc    ebx
  41f389:	ins    DWORD PTR es:[edi],dx
  41f38a:	jecxz  0x41f37f
  41f38c:	mov    dl,ah
  41f38e:	jecxz  0x41f326
  41f390:	daa    
  41f391:	inc    edi
  41f392:	out    0xbc,al
  41f394:	data16 aam 0x6b
  41f397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f398:	or     DWORD PTR [edx-0x7a2548a7],0xffffffd7
  41f39f:	pop    eax
  41f3a0:	mov    eax,ds:0xdb0225e6
  41f3a5:	sub    ecx,0xffffffed
  41f3a8:	fwait
  41f3a9:	pop    esp
  41f3aa:	xchg   esp,eax
  41f3ab:	retf   0xa516
  41f3ae:	aad    0x7d
  41f3b0:	cs add ebp,esi
  41f3b3:	in     eax,dx
  41f3b4:	pop    es
  41f3b5:	adc    ecx,DWORD PTR [ebp+0x6d]
  41f3b8:	push   ss
  41f3b9:	cdq    
  41f3ba:	fwait
  41f3bb:	adc    BYTE PTR [ebp-0x440e5f96],0x48
  41f3c2:	push   ecx
  41f3c3:	int    0x86
  41f3c5:	clc    
  41f3c6:	cmp    DWORD PTR [ebx-0x43],esp
  41f3c9:	fcom   QWORD PTR [esi-0x51]
  41f3cc:	xor    dh,BYTE PTR [edx]
  41f3ce:	xchg   esp,eax
  41f3cf:	mov    ds:0xd4f53bcd,eax
  41f3d4:	fadd   st,st(4)
  41f3d6:	dec    esp
  41f3d7:	dec    esi
  41f3d8:	neg    BYTE PTR [ebx+0x5c]
  41f3db:	and    DWORD PTR [edi+edi*1+0x25cfad95],eax
  41f3e2:	mov    edi,ecx
  41f3e4:	cdq    
  41f3e5:	xor    edx,eax
  41f3e7:	test   esp,0x10d60782
  41f3ed:	aas    
  41f3ee:	xor    ah,cl
  41f3f0:	sub    eax,edi
  41f3f2:	std    
  41f3f3:	add    bl,dl
  41f3f5:	out    0xba,al
  41f3f7:	ficomp WORD PTR [esi]
  41f3f9:	stc    
  41f3fa:	add    eax,0xbab0bd9f
  41f3ff:	(bad)  
  41f400:	fsubr  st,st(0)
  41f402:	pushf  
  41f403:	xor    ebp,DWORD PTR [ebx+eax*2-0x34]
  41f407:	pop    ds
  41f408:	scas   al,BYTE PTR es:[edi]
  41f409:	adc    bh,dl
  41f40b:	pop    ds
  41f40c:	cmp    al,bl
  41f40e:	jmp    0x41f462
  41f410:	mov    cl,0x7e
  41f412:	rep lods al,BYTE PTR ds:[esi]
  41f414:	xor    BYTE PTR [esi+0x27715e22],0xfb
  41f41b:	mov    cl,0x97
  41f41d:	lea    ecx,[edx+0x40751731]
  41f423:	bound  esi,QWORD PTR [edi+esi*8]
  41f426:	inc    ebx
  41f427:	loopne 0x41f3fa
  41f429:	jecxz  0x41f41c
  41f42b:	pop    ebp
  41f42c:	inc    edx
  41f42d:	test   BYTE PTR [ecx-0x55],0x47
  41f431:	fnsave [edx]
  41f433:	data16 loop 0x41f44d
  41f436:	mov    ds:0x11fb402,al
  41f43b:	mov    ecx,ss
  41f43d:	imul   edi,DWORD PTR [ecx],0x25ac70a5
  41f443:	pop    ebp
  41f444:	cwde   
  41f445:	mov    al,ds:0x1146ba30
  41f44a:	inc    edx
  41f44b:	and    al,BYTE PTR [edx-0x3d]
  41f44e:	pop    es
  41f44f:	popa   
  41f450:	(bad)  
  41f451:	sbb    ecx,DWORD PTR [ebx+0x6d]
  41f454:	(bad)  
  41f455:	jmp    0xf8c3:0x8fd89cd
  41f45c:	arpl   WORD PTR [eax],bx
  41f45e:	in     eax,0x28
  41f460:	gs inc edx
  41f462:	xchg   ch,al
  41f464:	in     eax,dx
  41f465:	jecxz  0x41f40f
  41f467:	or     bh,BYTE PTR [ebp+0x4c22e562]
  41f46d:	std    
  41f46e:	cmc    
  41f46f:	cmp    ch,BYTE PTR [ecx+edi*8-0x6]
  41f473:	in     al,dx
  41f474:	out    0x4f,eax
  41f476:	or     ah,BYTE PTR [ebp-0x53]
  41f479:	dec    eax
  41f47a:	or     ebp,esi
  41f47c:	ficom  WORD PTR [ebx+0x1081acc6]
  41f482:	jo     0x41f4b4
  41f484:	xchg   edx,eax
  41f485:	or     DWORD PTR [esi-0x32470d47],esi
  41f48b:	or     BYTE PTR [esi],0x9b
  41f48e:	enter  0xe5c4,0x5f
  41f492:	lock inc eax
  41f494:	mov    eax,0x83d7f601
  41f499:	sub    dh,BYTE PTR [ebp-0x7c76a1a8]
  41f49f:	pop    ds
  41f4a0:	out    dx,eax
  41f4a1:	aad    0xbe
  41f4a3:	xchg   DWORD PTR [esi+0x76],eax
  41f4a6:	std    
  41f4a7:	imul   esp,DWORD PTR [ecx+0x3a],0x22aa7c81
  41f4ae:	cwde   
  41f4af:	ret    
  41f4b0:	sub    cl,BYTE PTR [edx]
  41f4b2:	mov    al,ds:0x81d481d7
  41f4b7:	cs stos DWORD PTR es:[edi],eax
  41f4b9:	arpl   WORD PTR [ebx+0x6ecf69f2],di
  41f4bf:	js     0x41f44a
  41f4c1:	push   cs
  41f4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4c3:	out    dx,eax
  41f4c4:	dec    esi
  41f4c5:	mov    dh,0xf5
  41f4c7:	daa    
  41f4c8:	mov    al,0x3a
  41f4ca:	scas   eax,DWORD PTR es:[edi]
  41f4cb:	lods   eax,DWORD PTR ds:[esi]
  41f4cc:	jbe    0x41f452
  41f4ce:	inc    ebx
  41f4cf:	xor    DWORD PTR [eax],0x1b05378b
  41f4d5:	call   0xab45:0xa02730fc
  41f4dc:	lods   al,BYTE PTR ds:[esi]
  41f4dd:	pop    ss
  41f4de:	loop   0x41f4cb
  41f4e0:	jecxz  0x41f4b0
  41f4e2:	or     eax,0xa5cc8937
  41f4e7:	retf   
  41f4e8:	bound  ebx,QWORD PTR [esi+0x2b4ab7ab]
  41f4ee:	cmc    
  41f4ef:	jge    0x41f53f
  41f4f1:	pop    edx
  41f4f2:	push   0xffffffb2
  41f4f4:	outs   dx,BYTE PTR ds:[esi]
  41f4f5:	int3   
  41f4f6:	and    bl,BYTE PTR [ecx+0x14]
  41f4f9:	jmp    0x3903:0x51c784e9
  41f500:	push   ebx
  41f501:	nop
  41f502:	xor    cl,al
  41f504:	mov    al,0x1c
  41f506:	mov    es,WORD PTR [ecx+0x503cc59e]
  41f50c:	clc    
  41f50d:	std    
  41f50e:	and    al,0x6c
  41f510:	scas   eax,DWORD PTR es:[di]
  41f512:	mov    ds:0x26004430,eax
  41f517:	adc    DWORD PTR [esi],edi
  41f519:	cmc    
  41f51a:	(bad)  
  41f51b:	fld    st(2)
  41f51d:	sbb    ch,BYTE PTR [edx+0x59]
  41f520:	and    al,0xc3
  41f522:	lods   eax,DWORD PTR ds:[esi]
  41f523:	aam    0xf5
  41f525:	pop    es
  41f526:	mov    esp,0xa6da7b5a
  41f52b:	mov    ch,0xa4
  41f52d:	psubq  mm6,QWORD PTR [edx+0x6e0ef771]
  41f534:	or     ecx,DWORD PTR [esi+0x14]
  41f537:	adc    eax,0x20362cdb
  41f53c:	fist   WORD PTR [ecx+0x4f7b81f]
  41f542:	bound  ebx,QWORD PTR [edi-0x3e]
  41f545:	or     al,0x49
  41f547:	push   edx
  41f548:	and    ebx,esp
  41f54a:	dec    ebx
  41f54b:	sti    
  41f54c:	push   cs
  41f54d:	in     eax,dx
  41f54e:	shr    DWORD PTR [ebx-0xe],cl
  41f551:	mov    bl,0x23
  41f553:	inc    esi
  41f554:	jg     0x41f4df
  41f556:	inc    edx
  41f557:	enter  0x85e4,0x4f
  41f55b:	pop    ss
  41f55c:	leave  
  41f55d:	(bad)  
  41f55f:	jle    0x41f542
  41f561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f562:	adc    DWORD PTR [esi],edx
  41f564:	stos   BYTE PTR es:[edi],al
  41f565:	jp     0x41f53f
  41f567:	mov    ah,0xfc
  41f569:	push   ebp
  41f56a:	sbb    bl,cl
  41f56c:	bound  esp,QWORD PTR [ebp-0x7f2741e]
  41f572:	es rol dl,cl
  41f575:	mov    dh,0xa7
  41f577:	jo     0x41f5d4
  41f579:	xchg   edx,eax
  41f57a:	pusha  
  41f57b:	push   0x3860b1b3
  41f580:	inc    esp
  41f581:	pusha  
  41f582:	fdiv   st,st(7)
  41f584:	or     ah,BYTE PTR [ecx]
  41f586:	jo     0x41f5c1
  41f588:	push   0x7b
  41f58a:	jmp    0x41f53c
  41f58c:	cld    
  41f58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f58e:	mov    bl,0xa0
  41f590:	(bad)  [ebx-0x26]
  41f593:	push   edx
  41f594:	xchg   esi,eax
  41f595:	mov    ebp,0x1dd156ba
  41f59a:	push   eax
  41f59b:	mov    ebp,0xcf91dad8
  41f5a0:	iret   
  41f5a1:	scas   al,BYTE PTR es:[edi]
  41f5a2:	aaa    
  41f5a3:	jbe    0x41f586
  41f5a5:	scas   al,BYTE PTR es:[edi]
  41f5a6:	jns    0x41f5c9
  41f5a8:	push   esi
  41f5a9:	call   0xcca9:0x1a3d30a9
  41f5b0:	sub    cl,0xdc
  41f5b3:	cmc    
  41f5b4:	fwait
  41f5b5:	scas   eax,DWORD PTR es:[edi]
  41f5b6:	test   eax,0xb7a8d31f
  41f5bb:	cmp    BYTE PTR [ecx+0x590b43f0],0xfb
  41f5c2:	enter  0x8b5,0x68
  41f5c6:	xor    al,0xe2
  41f5c8:	push   esp
  41f5c9:	shr    DWORD PTR [ecx-0x56119569],1
  41f5cf:	xchg   edx,eax
  41f5d0:	ret    0x5394
  41f5d3:	sbb    ah,BYTE PTR [edx]
  41f5d5:	nop
  41f5d6:	jp     0x41f5b6
  41f5d8:	mov    gs,WORD PTR [eax+edx*1]
  41f5db:	lods   eax,DWORD PTR ds:[esi]
  41f5dc:	jmp    0xa265b21a
  41f5e1:	(bad)  
  41f5e2:	retf   
  41f5e3:	pop    ds
  41f5e4:	mov    dl,0xfe
  41f5e6:	dec    ebx
  41f5e7:	je     0x41f5f7
  41f5e9:	sub    esp,DWORD PTR [ebx]
  41f5eb:	or     ah,al
  41f5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5ee:	xchg   ebp,eax
  41f5ef:	in     al,dx
  41f5f0:	mov    edi,0x10ffe7e5
  41f5f5:	cmp    DWORD PTR [esi],esi
  41f5f7:	das    
  41f5f8:	icebp  
  41f5f9:	cmc    
  41f5fa:	pop    esp
  41f5fb:	(bad)  
  41f5fc:	data16 shl BYTE PTR [ecx],cl
  41f5ff:	jp     0x41f5ea
  41f601:	push   esp
  41f602:	pop    esp
  41f603:	cli    
  41f604:	(bad)  
  41f605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f606:	adc    al,0x29
  41f608:	push   ecx
  41f609:	outs   dx,BYTE PTR ds:[esi]
  41f60a:	jmp    0x6eb10a4b
  41f60f:	mov    BYTE PTR [esi-0x474e694f],ch
  41f615:	cmp    DWORD PTR [edx+0x57],ebp
  41f618:	(bad)  
  41f61a:	(bad)  
  41f61b:	hlt    
  41f61c:	clc    
  41f61d:	int    0xdf
  41f61f:	je     0x41f5bf
  41f621:	pop    ecx
  41f622:	cld    
  41f623:	ret    0x4ac5
  41f626:	pop    edx
  41f627:	js     0x41f694
  41f629:	fadd   QWORD PTR fs:[esi+0x243a5000]
  41f630:	test   eax,0x389fb15f
  41f635:	js     0x41f5f5
  41f637:	aaa    
  41f638:	(bad)  
  41f639:	and    eax,0x85cc2229
  41f63e:	jmp    0x41f69b
  41f640:	out    0xd9,al
  41f642:	or     bl,BYTE PTR [edi-0x63]
  41f645:	push   ecx
  41f646:	or     BYTE PTR [eax+eiz*8-0x5b],0x7d
  41f64b:	repz iret 
  41f64d:	mov    eax,ds:0x9d0dd333
  41f652:	sbb    BYTE PTR [edi-0x49ac9550],bl
  41f658:	push   es
  41f659:	jmp    0x6d36ce2e
  41f65e:	cli    
  41f65f:	sub    BYTE PTR [edx+0x5eb672e8],cl
  41f665:	rcr    dh,1
  41f667:	fist   DWORD PTR [ecx-0x7e]
  41f66a:	add    DWORD PTR [esp+eiz*2-0x46814246],0x55
  41f672:	fnstenv [esi]
  41f674:	mov    ecx,ebx
  41f676:	or     BYTE PTR [edi-0x56983132],cl
  41f67c:	les    edx,FWORD PTR [edx]
  41f67e:	mov    bh,0x35
  41f680:	je     0x41f69e
  41f682:	and    al,0xa1
  41f684:	fnstsw WORD PTR [esi-0x51]
  41f687:	adc    dh,BYTE PTR [bp+si]
  41f68a:	xor    BYTE PTR ds:0x25d4ea1e,0x84
  41f691:	sti    
  41f692:	mov    esi,0x45de33e
  41f697:	loop   0x41f694
  41f699:	nop    DWORD PTR [esi+edx*8]
  41f69d:	mov    esi,0xae1ffa5f
  41f6a2:	mov    BYTE PTR [eax-0x5f],bl
  41f6a5:	outs   dx,DWORD PTR ds:[esi]
  41f6a6:	cmp    ecx,DWORD PTR [esi+0x42ffdc4]
  41f6ac:	inc    ebx
  41f6ad:	icebp  
  41f6ae:	pop    edx
  41f6af:	jne    0x41f6b2
  41f6b1:	or     BYTE PTR [edi+0x72],bh
  41f6b4:	inc    esp
  41f6b5:	mov    dh,0x5
  41f6b7:	push   ebp
  41f6b8:	cmp    al,0x49
  41f6ba:	(bad)  
  41f6bb:	shr    BYTE PTR [eax-0x4a],0xd1
  41f6bf:	push   edi
  41f6c0:	loope  0x41f695
  41f6c2:	adc    ebx,eax
  41f6c4:	sub    esp,esi
  41f6c6:	jbe    0x41f679
  41f6c8:	nop
  41f6c9:	ins    DWORD PTR es:[edi],dx
  41f6ca:	retf   0x2641
  41f6cd:	adc    DWORD PTR [edx+esi*4-0x55611121],edi
  41f6d4:	neg    ecx
  41f6d6:	dec    edx
  41f6d7:	scas   al,BYTE PTR es:[edi]
  41f6d8:	(bad)  
  41f6da:	jnp    0x41f6e0
  41f6dc:	adc    BYTE PTR [ebx-0x34c2adb9],0xac
  41f6e3:	adc    dl,ah
  41f6e5:	out    dx,al
  41f6e6:	(bad)  
  41f6e7:	dec    ebx
  41f6e8:	dec    eax
  41f6e9:	pop    ebx
  41f6ea:	fcomp  st(0)
  41f6ec:	xchg   edi,eax
  41f6ed:	mov    esi,0x841e9c1b
  41f6f2:	inc    ecx
  41f6f3:	nop
  41f6f4:	add    al,BYTE PTR [eax]
  41f6f6:	jl     0x41f76d
  41f6f8:	or     DWORD PTR [ecx+0x4786fa73],esi
  41f6fe:	and    esp,esi
  41f700:	push   eax
  41f701:	hlt    
  41f702:	arpl   WORD PTR [esi-0x20],ax
  41f705:	rcr    DWORD PTR [eax-0x43],0x3
  41f709:	stc    
  41f70a:	test   BYTE PTR [ebx+0x3e9a3b49],dl
  41f710:	pop    ecx
  41f711:	jge    0x41f787
  41f713:	add    bl,BYTE PTR [ebp-0x67]
  41f716:	and    DWORD PTR [ebx+ebp*2+0x75],eax
  41f71a:	(bad)  
  41f71b:	imul   edx,DWORD PTR [esp+edi*2],0xffffffe5
  41f71f:	data16 jle 0x41f6da
  41f722:	cmp    BYTE PTR [ebx-0x4f3abbff],ah
  41f728:	push   DWORD PTR [eax]
  41f72a:	jmp    0x41f6c9
  41f72c:	ins    BYTE PTR es:[edi],dx
  41f72d:	or     DWORD PTR [ebx+0x25ff162],esp
  41f733:	inc    edx
  41f734:	ins    DWORD PTR es:[edi],dx
  41f735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f736:	dec    esp
  41f737:	ret    0xed20
  41f73a:	mov    WORD PTR [eax],es
  41f73c:	lahf   
  41f73d:	or     esp,DWORD PTR [ecx]
  41f73f:	pop    ecx
  41f740:	daa    
  41f741:	xchg   ebp,eax
  41f742:	and    bh,ah
  41f744:	cmc    
  41f745:	aam    0x67
  41f747:	pop    eax
  41f748:	loope  0x41f7a2
  41f74a:	xchg   ebp,eax
  41f74b:	scas   eax,DWORD PTR es:[edi]
  41f74c:	leave  
  41f74d:	retf   0x75ed
  41f750:	cdq    
  41f751:	call   0x7781:0x1ba0d86f
  41f758:	ins    BYTE PTR es:[edi],dx
  41f759:	pop    esi
  41f75a:	mov    esi,0xa1ccf7
  41f75f:	fisubr DWORD PTR [eax-0x48]
  41f762:	fistp  DWORD PTR [esi]
  41f764:	xchg   ebp,eax
  41f765:	jo     0x41f735
  41f767:	es push cs
  41f769:	or     al,0xea
  41f76b:	jo     0x41f792
  41f76d:	(bad)  
  41f76e:	addr16 fcom st(2)
  41f771:	pop    es
  41f772:	stos   DWORD PTR es:[edi],eax
  41f773:	sub    dl,0x59
  41f776:	not    DWORD PTR [edx-0x49]
  41f779:	leave  
  41f77a:	jns    0x41f7ee
  41f77c:	mov    edi,0x435536b4
  41f781:	mov    ebx,0x3d3eb2f0
  41f786:	(bad)  
  41f787:	jne    0x41f73e
  41f789:	jns    0x41f763
  41f78b:	neg    DWORD PTR [edi]
  41f78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f78e:	mov    edx,DWORD PTR [esi-0x58]
  41f791:	jmp    0x98cab6b6
  41f796:	sbb    al,BYTE PTR [esi]
  41f798:	fcmove st,st(2)
  41f79a:	or     dh,ah
  41f79c:	in     eax,dx
  41f79d:	inc    edi
  41f79e:	jne    0x41f725
  41f7a0:	scas   eax,DWORD PTR es:[edi]
  41f7a1:	add    dl,BYTE PTR [edi]
  41f7a3:	(bad)  
  41f7a4:	push   0xffffffac
  41f7a6:	mov    WORD PTR [ebx+ebx*2+0x21f65238],cs
  41f7ad:	(bad)  
  41f7af:	test   DWORD PTR [eax-0x23],eax
  41f7b2:	ss xchg edx,eax
  41f7b4:	sub    eax,0xa78bbb7f
  41f7b9:	or     eax,0x724fd09f
  41f7be:	lock not BYTE PTR [ecx]
  41f7c1:	push   ss
  41f7c2:	and    dl,BYTE PTR [edx+0x38]
  41f7c5:	inc    ebx
  41f7c6:	dec    edx
  41f7c7:	push   cs
  41f7c8:	ins    DWORD PTR es:[edi],dx
  41f7c9:	dec    edx
  41f7ca:	push   ebp
  41f7cb:	dec    esi
  41f7cc:	sahf   
  41f7cd:	mov    dl,0x82
  41f7cf:	push   ss
  41f7d0:	add    dl,BYTE PTR [ebp-0x7166b355]
  41f7d6:	out    0xc0,al
  41f7d8:	pop    ds
  41f7d9:	stc    
  41f7da:	sbb    BYTE PTR [ebp-0x52120f77],bh
  41f7e0:	test   DWORD PTR [ebx],0xfda21cc8
  41f7e6:	leave  
  41f7e7:	ds repz push 0x7f
  41f7eb:	shl    edx,cl
  41f7ed:	mov    bl,0x18
  41f7ef:	inc    ebx
  41f7f0:	add    bh,BYTE PTR [ebp+eiz*8-0x60afe427]
  41f7f7:	js     0x41f814
  41f7f9:	fstp   TBYTE PTR [esi]
  41f7fb:	add    DWORD PTR [eax],ebx
  41f7fd:	adc    ebp,0xffffff80
  41f800:	cli    
  41f801:	mov    esp,0xb392a8af
  41f806:	mov    al,0xf4
  41f808:	jl     0x41f7f1
  41f80a:	pop    ebx
  41f80b:	pushf  
  41f80c:	test   BYTE PTR [esi-0x72a94512],ch
  41f812:	scas   eax,DWORD PTR es:[edi]
  41f813:	mov    cl,0xeb
  41f815:	inc    esp
  41f816:	jbe    0x41f7c7
  41f818:	test   al,0xcc
  41f81a:	int3   
  41f81b:	add    eax,DWORD PTR [eax]
  41f81d:	sub    BYTE PTR [esi],bh
  41f81f:	push   ecx
  41f820:	or     dl,BYTE PTR [ebx]
  41f822:	xchg   esi,eax
  41f823:	sahf   
  41f824:	pop    ss
  41f825:	jns    0x41f85c
  41f827:	in     eax,0x7c
  41f829:	dec    edx
  41f82a:	pushf  
  41f82b:	sti    
  41f82c:	mov    edx,0x6e81ab5c
  41f831:	or     esi,DWORD PTR [edx-0x3e]
  41f834:	cli    
  41f835:	add    ch,BYTE PTR [ebx+0x46677b2c]
  41f83b:	mov    DWORD PTR [edx+0x620249b8],edi
  41f841:	xor    ch,BYTE PTR [ebx]
  41f843:	inc    edi
  41f844:	fiadd  DWORD PTR [ebx+0x14]
  41f847:	repz mul BYTE PTR ds:0x8dbad97d
  41f84e:	dec    edx
  41f84f:	and    dl,BYTE PTR [ecx+ebx*2-0xc8a378f]
  41f856:	stc    
  41f857:	pusha  
  41f858:	clc    
  41f859:	sbb    BYTE PTR [eax+0x4e214bab],0xb4
  41f860:	sbb    eax,0x71dab019
  41f865:	popf   
  41f866:	ss jp  0x41f80a
  41f869:	in     eax,0x7e
  41f86b:	push   ebx
  41f86c:	(bad)  
  41f86d:	sbb    bh,bl
  41f86f:	ja     0x41f86e
  41f871:	lea    esi,[ecx+ecx*2+0x1f]
  41f875:	mov    eax,ds
  41f877:	jo     0x41f844
  41f879:	xor    cl,cl
  41f87b:	mov    ds:0xbb275799,al
  41f880:	cs dec edi
  41f882:	inc    ecx
  41f883:	inc    ebx
  41f884:	or     DWORD PTR [edx],ebp
  41f886:	xchg   edi,eax
  41f887:	mov    eax,ds:0x87b2247
  41f88c:	xor    ecx,DWORD PTR fs:[esi+edi*1-0x4]
  41f891:	imul   ebx,DWORD PTR [ecx],0x8adb85af
  41f897:	jo     0x41f8ee
  41f899:	aam    0x20
  41f89b:	lods   eax,DWORD PTR ds:[esi]
  41f89c:	scas   al,BYTE PTR es:[edi]
  41f89d:	push   edx
  41f89e:	aad    0x6d
  41f8a0:	cmp    BYTE PTR [esi],0x7a
  41f8a3:	and    dl,BYTE PTR [eax+0x32e7c209]
  41f8a9:	scas   al,BYTE PTR es:[edi]
  41f8aa:	mov    al,0x38
  41f8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ad:	sub    dh,dl
  41f8af:	stos   DWORD PTR es:[edi],eax
  41f8b0:	retf   0x1048
  41f8b3:	iret   
  41f8b4:	xchg   edi,eax
  41f8b5:	and    eax,0xfc58873a
  41f8ba:	pusha  
  41f8bb:	push   0x1b
  41f8bd:	pushf  
  41f8be:	sub    ch,0x7
  41f8c1:	dec    edx
  41f8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8c3:	mov    al,ds:0x79ed0211
  41f8c8:	shr    BYTE PTR [eax+0x47],0x2
  41f8cc:	(bad)  
  41f8ce:	lds    ecx,FWORD PTR [eax+ecx*8]
  41f8d1:	scas   eax,DWORD PTR es:[edi]
  41f8d2:	xchg   edx,eax
  41f8d3:	push   0xffffffcd
  41f8d5:	pop    ss
  41f8d6:	rcr    BYTE PTR ds:0xf6c0a16b,cl
  41f8dc:	or     dh,0xb5
  41f8df:	or     eax,0x138c2c67
  41f8e4:	(bad)  
  41f8e6:	jge    0x41f8ce
  41f8e8:	cdq    
  41f8e9:	outs   dx,BYTE PTR ds:[esi]
  41f8ea:	dec    ecx
  41f8eb:	loop   0x41f879
  41f8ed:	xor    eax,0xca4a15a
  41f8f2:	cld    
  41f8f3:	retf   
  41f8f4:	jbe    0x41f943
  41f8f6:	sbb    BYTE PTR [ecx+0x6c],bh
  41f8f9:	fild   WORD PTR [edx-0x9]
  41f8fc:	lahf   
  41f8fd:	sar    esi,cl
  41f8ff:	or     bl,BYTE PTR [eax+0xb]
  41f902:	sar    ah,0x4c
  41f905:	lock add bl,BYTE PTR [esi+0x4f]
  41f909:	xchg   ebp,eax
  41f90a:	pop    esp
  41f90b:	or     al,0xb9
  41f90d:	in     al,0x74
  41f90f:	or     DWORD PTR [edx-0x48],ecx
  41f912:	ret    0xe1e2
  41f915:	sar    DWORD PTR [esp+esi*2-0x1d],cl
  41f919:	pop    ebp
  41f91a:	test   BYTE PTR [ecx-0x7041128c],al
  41f920:	jb     0x41f8a4
  41f922:	stos   DWORD PTR es:[edi],eax
  41f923:	rcr    BYTE PTR [ecx+0x42],1
  41f926:	stc    
  41f927:	pop    es
  41f928:	cmp    ebx,DWORD PTR [ecx+0x21]
  41f92b:	pop    ebp
  41f92c:	add    BYTE PTR [esi-0x26708101],0x8
  41f933:	lea    edx,[eax]
  41f935:	out    dx,eax
  41f936:	iret   
  41f937:	cmc    
  41f938:	je     0x41f97f
  41f93a:	sbb    al,0xff
  41f93c:	fiadd  WORD PTR [edi]
  41f93e:	sbb    ah,ch
  41f940:	inc    ecx
  41f941:	div    BYTE PTR [eax]
  41f943:	xchg   ecx,eax
  41f944:	(bad)  
  41f945:	jmp    0x168f:0xc47e7b56
  41f94c:	and    ah,ah
  41f94e:	shl    bl,0x5c
  41f951:	cmp    DWORD PTR [edx+0x230d4f2],ebx
  41f957:	mov    eax,ds:0xb36fb17b
  41f95c:	add    ah,BYTE PTR [edi-0x278faa8f]
  41f962:	add    BYTE PTR [esp],dh
  41f965:	pop    ecx
  41f966:	dec    esi
  41f967:	iret   
  41f968:	imul   ebp,DWORD PTR [ebx],0xffffffb4
  41f96b:	sbb    cl,BYTE PTR [esp+eiz*8-0x65a2f8d4]
  41f972:	rcl    DWORD PTR [ebx+0x4421782d],0xd2
  41f979:	int3   
  41f97a:	xor    DWORD PTR [esi+0x2fe6b757],edx
  41f980:	mov    ch,0xc9
  41f982:	sbb    esi,DWORD PTR [esi+0x6aa31e88]
  41f988:	out    0x36,eax
  41f98a:	inc    edx
  41f98b:	sbb    BYTE PTR [ecx+edi*2],al
  41f98e:	adc    DWORD PTR [ecx],edi
  41f990:	cwde   
  41f991:	push   edx
  41f992:	dec    ecx
  41f993:	add    esp,ebx
  41f995:	out    dx,al
  41f996:	xor    al,BYTE PTR [edx]
  41f998:	data16 or BYTE PTR [edi],bh
  41f99b:	call   0x4243:0x75b3db88
  41f9a2:	xchg   ecx,eax
  41f9a3:	adc    eax,0xe9537872
  41f9a8:	sysret 
  41f9aa:	je     0x41f980
  41f9ac:	push   esi
  41f9ad:	pop    eax
  41f9ae:	jle    0x41f93b
  41f9b0:	push   eax
  41f9b1:	push   eax
  41f9b2:	not    DWORD PTR ds:0x6ac26198
  41f9b8:	arpl   WORD PTR [esi+edi*4+0x5ccb9912],ax
  41f9bf:	aam    0xa4
  41f9c1:	jecxz  0x41fa01
  41f9c3:	outs   dx,BYTE PTR ds:[esi]
  41f9c4:	ror    BYTE PTR [edx+0x55],0x15
  41f9c8:	mov    DWORD PTR [ebx-0x47db90cc],esp
  41f9ce:	xchg   ebp,eax
  41f9cf:	and    al,0x7c
  41f9d1:	dec    eax
  41f9d2:	ja     0x41f9b7
  41f9d4:	fcom   DWORD PTR [edx]
  41f9d6:	jmp    0xba3dd6a
  41f9db:	popa   
  41f9dc:	std    
  41f9dd:	shr    DWORD PTR [edi-0x14],cl
  41f9e0:	pop    ecx
  41f9e1:	daa    
  41f9e2:	ret    
  41f9e3:	sahf   
  41f9e4:	(bad)  
  41f9e5:	out    0xab,al
  41f9e7:	jle    0x41f9e9
  41f9e9:	or     ebp,DWORD PTR ds:0x90713604
  41f9ef:	ins    BYTE PTR es:[edi],dx
  41f9f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f1:	or     BYTE PTR [ecx],cl
  41f9f3:	or     edx,DWORD PTR [esi-0x672c4121]
  41f9f9:	push   edx
  41f9fa:	mov    edx,0xc10ea342
  41f9ff:	push   eax
  41fa00:	cs jns 0x41f9c6
  41fa03:	push   ebx
  41fa04:	mov    al,0x95
  41fa06:	jle    0x41fa05
  41fa08:	mov    ah,0x58
  41fa0a:	scas   eax,DWORD PTR es:[edi]
  41fa0b:	lahf   
  41fa0c:	xchg   ecx,eax
  41fa0d:	and    DWORD PTR [ebp-0x15],ecx
  41fa10:	lds    esp,FWORD PTR ds:0x486c749c
  41fa16:	xchg   BYTE PTR [ebp-0x20],dl
  41fa19:	pop    edx
  41fa1a:	js     0x41fa6c
  41fa1c:	pusha  
  41fa1d:	int3   
  41fa1e:	cmp    bl,BYTE PTR [edx]
  41fa20:	loope  0x41fa29
  41fa22:	fidivr WORD PTR [ecx-0x35]
  41fa25:	pop    ss
  41fa26:	mov    ?,edi
  41fa28:	mov    ?,WORD PTR [ebp-0x70dae97d]
  41fa2e:	test   al,0xaf
  41fa30:	js     0x41f9f8
  41fa32:	lahf   
  41fa33:	sbb    esp,DWORD PTR [esi-0x47a2071e]
  41fa39:	inc    esi
  41fa3a:	adc    al,0xad
  41fa3c:	call   0x58c1:0xdc01abb4
  41fa43:	mov    ebx,0xe71e306
  41fa48:	or     dh,BYTE PTR [ebp+0x55638c00]
  41fa4e:	or     DWORD PTR [esi+0x5ae1ab5c],edx
  41fa54:	sti    
  41fa55:	sub    ebx,DWORD PTR [edx]
  41fa57:	jl     0x41fab3
  41fa59:	sub    DWORD PTR [edx-0x48],edi
  41fa5c:	popa   
  41fa5d:	dec    esp
  41fa5e:	sahf   
  41fa5f:	mov    dl,0x31
  41fa61:	call   0xaa9:0x9cdbd297
  41fa68:	sar    BYTE PTR [eax+0x10],1
  41fa6b:	fwait
  41fa6c:	pop    esi
  41fa6d:	gs sbb DWORD PTR ss:[esi],0xffffff88
  41fa72:	jae    0x41faca
  41fa74:	pop    edi
  41fa75:	aaa    
  41fa76:	xlat   BYTE PTR ds:[ebx]
  41fa77:	mov    dl,0xa9
  41fa79:	or     dh,al
  41fa7b:	and    eax,0xfc927fe8
  41fa80:	mov    ds:0x39cd8ae4,al
  41fa85:	jmp    0x41fad1
  41fa87:	cmc    
  41fa88:	sub    esp,DWORD PTR [ecx+eiz*4-0x4f9467e7]
  41fa8f:	(bad)  
  41fa91:	adc    ecx,DWORD PTR [ebx+ebx*1]
  41fa94:	adc    BYTE PTR [esi+0x4fbc1d8e],ah
  41fa9a:	and    al,0x5f
  41fa9c:	lahf   
  41fa9d:	mov    bh,0xbd
  41fa9f:	sub    esp,ecx
  41faa1:	jbe    0x41faa2
  41faa3:	mov    al,ds:0x3b4ec4db
  41faa8:	dec    BYTE PTR [eax]
  41faaa:	das    
  41faab:	ret    0xb052
  41faae:	mov    bl,BYTE PTR [ebx+0x4]
  41fab1:	loopne 0x41fa8e
  41fab3:	and    DWORD PTR [ecx+0x67],edi
  41fab6:	xchg   ebp,eax
  41fab7:	enter  0xe3f7,0xe4
  41fabb:	jbe    0x41fa8f
  41fabd:	in     al,0x7d
  41fabf:	push   cs
  41fac0:	dec    eax
  41fac1:	and    eax,0x399632b2
  41fac6:	add    al,0x83
  41fac8:	xor    ecx,0x52
  41facb:	sbb    esi,0xffffffab
  41face:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41facf:	jg     0x41fa95
  41fad1:	ss js  0x41faa2
  41fad4:	inc    eax
  41fad5:	jns    0x41fab4
  41fad7:	sbb    BYTE PTR [ecx-0x39fa2cdf],0xc2
  41fade:	and    esp,ebx
  41fae0:	dec    ebx
  41fae1:	xor    eax,0x90cfcd2d
  41fae6:	sbb    al,0xc4
  41fae8:	dec    ebx
  41fae9:	and    BYTE PTR [edi+0x44],ah
  41faec:	push   0xffffffa4
  41faee:	in     al,0xf6
  41faf0:	mov    ds:0xabaf733e,eax
  41faf5:	push   esp
  41faf6:	aaa    
  41faf7:	inc    eax
  41faf8:	sbb    BYTE PTR [esi+0x19a6a764],cl
  41fafe:	xchg   DWORD PTR [esi],eax
  41fb00:	popa   
  41fb01:	out    dx,eax
  41fb02:	scas   eax,DWORD PTR es:[edi]
  41fb03:	add    DWORD PTR [ecx+0x0],ebx
  41fb06:	stos   BYTE PTR es:[edi],al
  41fb07:	cmp    ebx,esi
  41fb09:	push   ebx
  41fb0a:	jno    0x41fab6
  41fb0c:	scas   al,BYTE PTR es:[edi]
  41fb0d:	loope  0x41fae8
  41fb0f:	gs xchg si,ax
  41fb12:	out    0x7c,eax
  41fb14:	je     0x41fb48
  41fb16:	inc    ecx
  41fb17:	ror    BYTE PTR [bx],cl
  41fb1a:	sti    
  41fb1b:	push   esp
  41fb1c:	jnp    0x41faf5
  41fb1e:	inc    esp
  41fb1f:	outs   dx,BYTE PTR ds:[esi]
  41fb20:	push   ebp
  41fb21:	jmp    0x2a69:0x523f12db
  41fb28:	sub    dh,ah
  41fb2a:	fs outs dx,DWORD PTR fs:[esi]
  41fb2d:	xchg   esp,eax
  41fb2e:	in     eax,0xf4
  41fb30:	adc    eax,0xfcdd6aec
  41fb35:	or     eax,0x143a01b0
  41fb3a:	xchg   edx,esp
  41fb3c:	dec    edi
  41fb3d:	adc    bl,dh
  41fb3f:	inc    edx
  41fb40:	inc    edx
  41fb41:	mov    ch,0x8c
  41fb43:	and    DWORD PTR [esi],edi
  41fb45:	and    al,BYTE PTR [edx]
  41fb47:	xchg   edx,eax
  41fb48:	pop    ds
  41fb49:	das    
  41fb4a:	sub    DWORD PTR [esi],edx
  41fb4c:	jle    0x41fae5
  41fb4e:	xchg   al,dl
  41fb50:	mov    WORD PTR [edx],ds
  41fb52:	cld    
  41fb53:	pop    eax
  41fb54:	adc    al,0xb4
  41fb56:	mov    esi,DWORD PTR [esi]
  41fb58:	aad    0xe
  41fb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb5b:	fdivrp st(1),st
  41fb5d:	dec    ebp
  41fb5e:	cmp    al,0xb9
  41fb60:	loopne 0x41fafe
  41fb62:	jmp    0x41fb7c
  41fb64:	sub    eax,0xc26961aa
  41fb69:	push   esi
  41fb6a:	and    BYTE PTR [ecx+0x62],0x23
  41fb6e:	add    al,0x2b
  41fb70:	std    
  41fb71:	push   ebp
  41fb72:	cwde   
  41fb73:	fild   DWORD PTR [edx]
  41fb75:	dec    ebx
  41fb76:	ret    0x28eb
  41fb79:	ds aas 
  41fb7b:	pushf  
  41fb7c:	sub    ah,dl
  41fb7e:	aad    0xb1
  41fb80:	inc    edi
  41fb81:	mov    ah,0x23
  41fb83:	out    0xb3,al
  41fb85:	into   
  41fb86:	mov    al,ds:0x6c0f2978
  41fb8b:	push   esi
  41fb8c:	pop    esi
  41fb8d:	cli    
  41fb8e:	push   esp
  41fb8f:	pop    edx
  41fb90:	mov    dh,0x9e
  41fb92:	cmc    
  41fb93:	call   0x7b293baf
  41fb98:	shr    DWORD PTR [edi],0x2c
  41fb9b:	fcom   DWORD PTR [ecx+0x64107508]
  41fba1:	fs test edx,edx
  41fba4:	das    
  41fba5:	and    DWORD PTR [ecx-0x60],0x31623ff8
  41fbac:	dec    ebx
  41fbad:	adc    DWORD PTR [eax],ebx
  41fbaf:	sti    
  41fbb0:	mov    ds:0x4f1cc7a,al
  41fbb5:	daa    
  41fbb6:	cmp    al,0x3a
  41fbb8:	or     DWORD PTR [esi-0xdab34bc],esi
  41fbbe:	rol    bh,cl
  41fbc0:	sub    cl,dl
  41fbc2:	mov    dl,0x9f
  41fbc4:	pop    ebx
  41fbc5:	push   eax
  41fbc6:	dec    ebx
  41fbc7:	sbb    ah,BYTE PTR ds:0x7c6868cc
  41fbcd:	aaa    
  41fbce:	mov    eax,0x73fa89c0
  41fbd3:	std    
  41fbd4:	add    ecx,esp
  41fbd6:	fadd   QWORD PTR [edi-0x7beeea4e]
  41fbdc:	aam    0x44
  41fbde:	leave  
  41fbdf:	sub    DWORD PTR [ebp-0x193d15e3],edx
  41fbe5:	js     0x41fb84
  41fbe7:	inc    esp
  41fbe8:	inc    esi
  41fbe9:	mov    eax,ds:0x3c610da0
  41fbee:	jo     0x41fbba
  41fbf0:	jmp    0xf941d651
  41fbf5:	inc    eax
  41fbf6:	ror    DWORD PTR [ecx+0x5a],1
  41fbf9:	int3   
  41fbfa:	dec    ebp
  41fbfc:	push   esp
  41fbfd:	inc    eax
  41fbfe:	(bad)  
  41fbff:	leave  
  41fc00:	fild   DWORD PTR [edi+ebx*2+0x6a]
  41fc04:	je     0x41fc52
  41fc06:	mov    dl,0xf1
  41fc08:	(bad)  
  41fc09:	ins    DWORD PTR es:[edi],dx
  41fc0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc0b:	jae    0x41fc07
  41fc0d:	daa    
  41fc0e:	cwde   
  41fc0f:	jg     0x41fc46
  41fc11:	scas   eax,DWORD PTR es:[edi]
  41fc12:	ja     0x41fb9e
  41fc14:	xchg   edx,eax
  41fc15:	out    0x8d,al
  41fc17:	fbstp  TBYTE PTR [edx]
  41fc19:	icebp  
  41fc1a:	jbe    0x41fbaa
  41fc1c:	jbe    0x41fbf1
  41fc1e:	mov    ch,0xd7
  41fc20:	outs   dx,BYTE PTR ds:[esi]
  41fc21:	pop    ebp
  41fc22:	and    eax,0x12012bff
  41fc27:	into   
  41fc28:	gs add eax,0x2518ac8f
  41fc2e:	xchg   esp,eax
  41fc2f:	mov    eax,0xc364bbd2
  41fc34:	and    al,0x25
  41fc36:	or     edi,DWORD PTR [ebx+eiz*2+0x6589cf13]
  41fc3d:	cld    
  41fc3e:	rcl    BYTE PTR [edx-0x5d],0x30
  41fc42:	retf   
  41fc43:	cmp    DWORD PTR [ebp-0x19499e7b],eax
  41fc49:	jb     0x41fc25
  41fc4b:	js     0x41fc93
  41fc4d:	mov    bh,0x1e
  41fc4f:	pop    ds
  41fc50:	lock jb 0x41fbe1
  41fc53:	jne    0x41fc82
  41fc55:	scas   al,BYTE PTR es:[edi]
  41fc56:	inc    ebx
  41fc57:	inc    ebp
  41fc58:	rol    DWORD PTR [esi-0x1d],cl
  41fc5b:	les    ebx,FWORD PTR [edi]
  41fc5d:	clc    
  41fc5e:	das    
  41fc5f:	scas   al,BYTE PTR es:[edi]
  41fc60:	dec    ebp
  41fc61:	sub    esp,DWORD PTR [edx-0x216086a6]
  41fc67:	pop    edi
  41fc68:	ja     0x41fcaf
  41fc6a:	fwait
  41fc6b:	xor    BYTE PTR [ebx+0x2c866038],dh
  41fc71:	push   eax
  41fc72:	mov    esp,0xffa36720
  41fc77:	push   0x59125ace
  41fc7c:	scas   al,BYTE PTR es:[edi]
  41fc7d:	cmp    DWORD PTR gs:[ecx],esp
  41fc80:	lods   al,BYTE PTR ds:[esi]
  41fc81:	nop
  41fc82:	dec    ecx
  41fc83:	ret    0xb4bb
  41fc86:	cmp    eax,0xbedbb06e
  41fc8b:	shr    BYTE PTR [esp+edi*4+0x4d52cd87],0xca
  41fc93:	pop    esp
  41fc94:	inc    ebx
  41fc95:	mov    bh,0x1f
  41fc97:	(bad)  
  41fc98:	cli    
  41fc99:	jecxz  0x41fc6d
  41fc9b:	adc    bh,dl
  41fc9d:	sbb    DWORD PTR [eax-0x63],ecx
  41fca0:	xor    al,0xa3
  41fca2:	clc    
  41fca3:	test   eax,0x5bbebd78
  41fca8:	pop    DWORD PTR [ebp+0x1c]
  41fcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcac:	std    
  41fcad:	jnp    0x41fd29
  41fcaf:	aas    
  41fcb0:	push   ebx
  41fcb1:	push   ss
  41fcb2:	cmp    al,0xf5
  41fcb4:	add    esp,DWORD PTR [ecx+edx*4-0x349d0aa6]
  41fcbb:	sti    
  41fcbc:	aad    0x52
  41fcbe:	mov    ch,0xfe
  41fcc0:	mov    eax,ds:0x57c186d4
  41fcc5:	add    edi,edi
  41fcc7:	imul   edx,DWORD PTR [eax],0x76
  41fcca:	out    0x4f,eax
  41fccc:	aad    0x48
  41fcce:	sbb    eax,DWORD PTR [edi+0x3]
  41fcd1:	(bad)  
  41fcd2:	jno    0x41fc72
  41fcd4:	sahf   
  41fcd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd6:	lods   al,BYTE PTR ds:[esi]
  41fcd7:	lods   eax,DWORD PTR ds:[esi]
  41fcd8:	mov    ch,0xea
  41fcda:	push   edx
  41fcdb:	xor    DWORD PTR [ebx],edx
  41fcdd:	fcom   QWORD PTR [edx-0x34]
  41fce0:	ror    BYTE PTR [ecx+0x9b69eb2],cl
  41fce6:	inc    esi
  41fce7:	loopne 0x41fc6c
  41fce9:	loope  0x41fcb5
  41fceb:	mov    al,ds:0x5734ea6f
  41fcf0:	out    dx,al
  41fcf1:	sub    edx,DWORD PTR [edi+0x76676ff2]
  41fcf7:	push   edx
  41fcf8:	sub    edx,DWORD PTR [esp+eiz*4]
  41fcfb:	or     BYTE PTR [edi],al
  41fcfd:	xchg   DWORD PTR [ebp+ebp*2+0x6c],eax
  41fd01:	scas   eax,DWORD PTR es:[edi]
  41fd02:	(bad)  
  41fd03:	pop    edi
  41fd04:	sbb    ecx,DWORD PTR [eax]
  41fd06:	loop   0x41fd40
  41fd08:	das    
  41fd09:	fnstenv [ecx-0x8]
  41fd0c:	ins    DWORD PTR es:[edi],dx
  41fd0d:	inc    ebx
  41fd0e:	mov    ebp,0xc4cf46f8
  41fd13:	scas   al,BYTE PTR es:[edi]
  41fd14:	repz or ch,BYTE PTR [ebp+0x47b29f88]
  41fd1b:	fucomi st,st(3)
  41fd1d:	mov    cl,bl
  41fd1f:	je     0x41fd2f
  41fd21:	lock ins DWORD PTR es:[edi],dx
  41fd23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd24:	stos   DWORD PTR es:[edi],eax
  41fd25:	xchg   BYTE PTR [eax-0x3ac35b26],ch
  41fd2b:	dec    ecx
  41fd2c:	ja     0x41fd40
  41fd2e:	push   0x1cdf1a39
  41fd33:	sub    BYTE PTR [esi+0x59a85c3d],ah
  41fd39:	and    DWORD PTR [edx+0x2e68743a],ebp
  41fd3f:	mov    BYTE PTR [edx],ah
  41fd41:	rol    BYTE PTR [ecx+0x14],cl
  41fd44:	dec    eax
  41fd45:	ret    0x1feb
  41fd48:	data16 int3 
  41fd4a:	jg     0x41fccc
  41fd4c:	or     bh,BYTE PTR [eax-0x1c115c81]
  41fd52:	mov    BYTE PTR ds:0x48c2c58f,dh
  41fd58:	push   es
  41fd59:	scas   al,BYTE PTR es:[edi]
  41fd5a:	pop    es
  41fd5b:	ret    
  41fd5c:	jmp    0x41fd5b
  41fd5e:	push   0xffffffd2
  41fd60:	jne    0x41fdc3
  41fd62:	xchg   esi,eax
  41fd63:	mov    BYTE PTR [ebx+0x7b],dh
  41fd66:	ror    DWORD PTR [ecx],0xb
  41fd69:	popa   
  41fd6a:	aaa    
  41fd6b:	sub    DWORD PTR [ebx-0x5012d6df],edi
  41fd71:	push   0x5
  41fd73:	rol    DWORD PTR ds:0xcc30d93f,cl
  41fd79:	imul   ecx,DWORD PTR [ecx],0x7f
  41fd7c:	mov    DWORD PTR [ebx+0x5b],ebp
  41fd7f:	push   ebp
  41fd80:	shl    ebp,1
  41fd82:	pop    DWORD PTR [edx+0x60c33950]
  41fd88:	mov    DWORD PTR [edx],eax
  41fd8a:	out    0x82,al
  41fd8c:	sahf   
  41fd8d:	mov    ds:0x46d93ad1,eax
  41fd92:	fstp   TBYTE PTR [eax+ebx*8-0xb397b5d]
  41fd99:	daa    
  41fd9a:	xchg   edx,eax
  41fd9b:	jmp    0x41fde7
  41fd9d:	mov    al,0x82
  41fd9f:	data16 sahf 
  41fda1:	std    
  41fda2:	dec    esp
  41fda3:	mov    al,ds:0x431464eb
  41fda8:	test   al,0xc4
  41fdaa:	shl    ebx,1
  41fdac:	xor    al,0x87
  41fdae:	rol    BYTE PTR cs:[eax],0xcd
  41fdb2:	rcl    BYTE PTR [eax+edi*4-0x72875a85],1
  41fdb9:	scas   eax,DWORD PTR es:[edi]
  41fdba:	iret   
  41fdbb:	les    ebx,FWORD PTR [ebx]
  41fdbd:	repnz inc ebp
  41fdbf:	pop    ecx
  41fdc0:	mov    edi,0x26b0cbc2
  41fdc5:	fist   DWORD PTR fs:[edi-0x18]
  41fdc9:	add    BYTE PTR [ebx+0x1f],bh
  41fdcc:	sub    BYTE PTR [edi+0x8],bh
  41fdcf:	idiv   BYTE PTR [esi+0x21]
  41fdd2:	and    al,0xc5
  41fdd4:	les    eax,FWORD PTR [ebx+0x1d1d496e]
  41fdda:	icebp  
  41fddb:	nop
  41fddc:	sub    al,al
  41fdde:	and    DWORD PTR [esi+0x7b597044],esp
  41fde4:	add    bl,BYTE PTR [edx+edx*2-0xc]
  41fde8:	jmp    0xb899:0xeb3a90a1
  41fdef:	sub    edx,DWORD PTR [ecx+edi*2+0x19d94a50]
  41fdf6:	fisttp QWORD PTR [edi-0x4e]
  41fdf9:	push   ebp
  41fdfa:	mov    esp,esp
  41fdfc:	push   cs
  41fdfd:	xchg   DWORD PTR [edi+0x1e373705],ebp
  41fe03:	jae    0x41fded
  41fe05:	lock pushw ds
  41fe08:	mov    edi,0x35234e6a
  41fe0d:	and    al,dh
  41fe0f:	aas    
  41fe10:	or     eax,0x2aec862f
  41fe15:	popf   
  41fe16:	mov    ebp,DWORD PTR [ecx+edx*2-0x1a]
  41fe1a:	cmp    edx,DWORD PTR [eax+0x55ed832d]
  41fe20:	fcmovb st,st(5)
  41fe22:	and    BYTE PTR [edx-0x3b],dh
  41fe25:	stc    
  41fe26:	and    DWORD PTR [ebx],0xffffff8e
  41fe29:	sbb    DWORD PTR [edi+0x196bb36],ebp
  41fe2f:	(bad)  
  41fe30:	pop    ds
  41fe31:	jmp    0x41fe5f
  41fe33:	sti    
  41fe34:	push   ebx
  41fe35:	xor    DWORD PTR [ecx+0x6fee0950],ebx
  41fe3b:	jmp    0xdadbae9
  41fe40:	lock mov ch,0x2e
  41fe43:	push   DWORD PTR [edi+0x583c0283]
  41fe49:	mov    eax,DWORD PTR [ecx-0x653828e5]
  41fe4f:	dec    esi
  41fe50:	ja     0x41fead
  41fe52:	xchg   esp,eax
  41fe53:	in     al,0xd4
  41fe55:	add    al,0x8
  41fe57:	dec    ecx
  41fe58:	ret    
  41fe59:	outs   dx,DWORD PTR ds:[esi]
  41fe5a:	in     eax,dx
  41fe5b:	lock add DWORD PTR [ecx+0x5a7c4c6c],edi
  41fe62:	imul   DWORD PTR [ebp+0x9229fac]
  41fe68:	ret    0x5b96
  41fe6b:	lods   eax,DWORD PTR ds:[esi]
  41fe6c:	das    
  41fe6d:	std    
  41fe6e:	push   cs
  41fe6f:	loopne 0x41fe56
  41fe71:	fdiv   DWORD PTR [esi]
  41fe73:	dec    ecx
  41fe74:	outs   dx,DWORD PTR ds:[esi]
  41fe75:	scas   eax,DWORD PTR es:[edi]
  41fe76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe77:	push   0x1
  41fe79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7a:	pop    edi
  41fe7b:	shl    ch,cl
  41fe7d:	xchg   esp,eax
  41fe7e:	int    0xf6
  41fe80:	jmp    0xf3a12a5e
  41fe85:	mov    ds:0xdfce1dff,al
  41fe8a:	jnp    0x41fe57
  41fe8c:	xor    ch,BYTE PTR [edx-0x2266a0d8]
  41fe92:	inc    eax
  41fe93:	je     0x41fe5b
  41fe95:	retf   
  41fe96:	xchg   edi,eax
  41fe97:	stos   DWORD PTR es:[edi],eax
  41fe98:	scas   eax,DWORD PTR es:[edi]
  41fe99:	stos   DWORD PTR es:[edi],eax
  41fe9a:	cli    
  41fe9b:	and    al,0xbf
  41fe9d:	sub    al,0x9b
  41fe9f:	ins    BYTE PTR es:[edi],dx
  41fea0:	or     eax,0x61aec82f
  41fea5:	mov    eax,ds:0x9140913b
  41feaa:	pop    ebp
  41feab:	push   edx
  41feac:	fwait
  41fead:	xchg   edx,esp
  41feaf:	xor    ch,BYTE PTR [edi-0x36d5218e]
  41feb5:	mov    ah,0xf1
  41feb7:	xlat   BYTE PTR ds:[ebx]
  41feb8:	push   0x746c0fb6
  41febd:	js     0x41feb2
  41febf:	sar    DWORD PTR [eax+0x2024ca63],cl
  41fec5:	out    dx,eax
  41fec6:	jae    0x41fec8
  41fec8:	pop    edx
  41fec9:	xor    eax,0x8ecc2e5c
  41fece:	ja     0x41ff09
  41fed0:	or     edx,esp
  41fed2:	push   ss
  41fed3:	add    BYTE PTR [eax-0x1a],0x13
  41fed7:	push   ebx
  41fed8:	mov    BYTE PTR [edi+0x1f],dl
  41fedb:	in     al,dx
  41fedc:	dec    ebx
  41fedd:	sub    ebx,DWORD PTR [ebp-0x11]
  41fee0:	repz sub BYTE PTR [ebp+0x425d3cf3],ch
  41fee7:	popf   
  41fee8:	nop
  41fee9:	jo     0xef719260
  41feef:	dec    esi
  41fef0:	sbb    bh,ah
  41fef2:	mov    al,ds:0x7d1fdc23
  41fef7:	lock jno 0x41ff41
  41fefa:	sub    esp,ebp
  41fefc:	loopne 0x41ff4d
  41fefe:	pop    es
  41feff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff00:	add    BYTE PTR [edi],cl
  41ff02:	pusha  
  41ff03:	repnz add DWORD PTR [edx],ebp
  41ff06:	mov    ch,0x6f
  41ff08:	(bad)  
  41ff09:	pop    edi
  41ff0a:	jge    0x41fee4
  41ff0c:	test   al,0xb6
  41ff0e:	rcr    BYTE PTR [edx+0x2e04e4fa],cl
  41ff14:	dec    esp
  41ff15:	cmp    esp,DWORD PTR [eax]
  41ff17:	out    dx,al
  41ff18:	sbb    ebp,edx
  41ff1a:	ds pop es
  41ff1c:	int    0xae
  41ff1e:	jo     0x41ff81
  41ff20:	aad    0x39
  41ff22:	pop    eax
  41ff23:	sbb    dl,dl
  41ff25:	pop    ecx
  41ff26:	adc    al,0x32
  41ff28:	add    eax,0xc063571a
  41ff2d:	mov    dl,0x7d
  41ff2f:	inc    edi
  41ff30:	js     0x41ff67
  41ff32:	jo     0x41fee3
  41ff34:	jns    0x41ff4d
  41ff36:	mov    WORD PTR [esi],ds
  41ff38:	lock push ds
  41ff3a:	in     al,0xd9
  41ff3c:	sahf   
  41ff3d:	clc    
  41ff3e:	adc    DWORD PTR ds:0x9528a74c,edx
  41ff44:	(bad)  
  41ff46:	std    
  41ff47:	in     eax,dx
  41ff48:	cmc    
  41ff49:	out    dx,eax
  41ff4a:	aaa    
  41ff4b:	mov    bl,0x71
  41ff4d:	in     eax,0x8
  41ff4f:	cld    
  41ff50:	inc    ebx
  41ff51:	jmp    0x41feff
  41ff53:	rcr    DWORD PTR [esi+0x16b2d9],0xe0
  41ff5a:	adc    DWORD PTR [ebp+0x2a],esi
  41ff5d:	(bad)  
  41ff5e:	icebp  
  41ff5f:	pop    ebx
  41ff60:	mov    ah,0xd1
  41ff62:	dec    DWORD PTR [esi-0x19]
  41ff65:	jns    0x41ff62
  41ff67:	inc    edi
  41ff68:	inc    ebp
  41ff69:	sbb    al,0x78
  41ff6b:	pop    ebp
  41ff6c:	inc    ebp
  41ff6d:	mov    eax,0xd627dab6
  41ff72:	mov    eax,DWORD PTR [eax-0x1b]
  41ff75:	inc    edi
  41ff76:	(bad)  
  41ff77:	jl     0x41fff6
  41ff79:	rol    BYTE PTR [ecx+0x14],1
  41ff7c:	xchg   esp,eax
  41ff7d:	in     al,0x83
  41ff7f:	out    dx,eax
  41ff80:	je     0x41ff2d
  41ff82:	inc    esi
  41ff83:	clc    
  41ff84:	add    DWORD PTR [ebx],eax
  41ff86:	js     0x41ff5c
  41ff88:	shl    DWORD PTR [ecx-0x26],1
  41ff8b:	lea    edx,[ecx+ebp*8-0x4]
  41ff8f:	jo     0x41ff79
  41ff91:	loopne 0x41ff3c
  41ff93:	loopne 0x41ffe1
  41ff95:	mov    dh,0x59
  41ff97:	sub    ah,BYTE PTR [edx]
  41ff99:	(bad)  
  41ff9a:	shl    BYTE PTR [ecx],0x32
  41ff9d:	add    ebp,eax
  41ff9f:	int    0x63
  41ffa1:	add    edx,DWORD PTR [ecx+0x6188883f]
  41ffa7:	fs jecxz 0x41fff1
  41ffaa:	ins    BYTE PTR es:[edi],dx
  41ffab:	(bad)  
  41ffac:	lods   al,BYTE PTR ds:[esi]
  41ffad:	xchg   BYTE PTR [edx],bl
  41ffaf:	cmp    esp,DWORD PTR [ebp+ebx*1-0x12997890]
  41ffb6:	jne    0x41ff4c
  41ffb8:	imul   edx,DWORD PTR [edx+ebx*2+0x46],0x1b
  41ffbd:	pop    esp
  41ffbe:	jp     0x41ff7d
  41ffc0:	jecxz  0x41ff7f
  41ffc2:	imul   BYTE PTR [ebx+eax*4]
  41ffc5:	(bad)  
  41ffc6:	jb     0x41ff76
  41ffc8:	mov    dh,dh
  41ffca:	(bad)  
  41ffcb:	fsubr  DWORD PTR [ebx]
  41ffcd:	push   edi
  41ffce:	dec    eax
  41ffcf:	aaa    
  41ffd0:	adc    esp,esi
  41ffd2:	je     0x41ffed
  41ffd4:	popf   
  41ffd5:	iret   
  41ffd6:	xor    DWORD PTR [edi-0x7fb912d5],ebx
  41ffdc:	push   0x17f4cb7b
  41ffe1:	ror    BYTE PTR [eax+0xc],cl
  41ffe4:	(bad)  
  41ffe6:	xor    BYTE PTR [ecx],0x53
  41ffe9:	mov    ds:0xe20952d8,eax
  41ffee:	xor    dh,BYTE PTR [ebx+0xf]
  41fff1:	jecxz  0x42003e
  41fff3:	scas   al,BYTE PTR es:[edi]
  41fff4:	fsub   QWORD PTR [ebx-0x7190bd98]
  41fffa:	bt     DWORD PTR [edi+0x4b],ebx
  41fffe:	outs   dx,DWORD PTR ds:[esi]
  41ffff:	mov    edi,DWORD PTR [esp+eax*4+0x2e843ee9]
  420006:	mov    BYTE PTR [edx],0xa7
  420009:	jo     0x42004e
  42000b:	out    0xbe,eax
  42000d:	pop    ebx
  42000e:	mov    esi,0x9cb20e73
  420013:	sub    BYTE PTR [ebx+0x6b1dd1db],bh
  420019:	jbe    0x42000d
  42001b:	cs in  eax,dx
  42001d:	inc    edx
  42001e:	xor    al,0x23
  420020:	xlat   BYTE PTR ds:[ebx]
  420021:	dec    edx
  420022:	push   edx
  420023:	add    esp,DWORD PTR [esi-0x7799ce24]
  420029:	in     al,dx
  42002a:	or     eax,0xb67da1c7
  42002f:	mov    ds:0x3b70d759,eax
  420034:	adc    ah,BYTE PTR [edi]
  420036:	rol    BYTE PTR [esp+ebp*4-0x15],1
  42003a:	push   ecx
  42003b:	mov    DWORD PTR [ecx],edi
  42003d:	sub    DWORD PTR [ebx],ebx
  42003f:	cwde   
  420040:	adc    esi,edi
  420042:	or     dl,ah
  420044:	outs   dx,DWORD PTR ds:[esi]
  420045:	adc    al,ch
  420047:	fcmovne st,st(4)
  420049:	gs dec edi
  42004b:	sub    BYTE PTR [eax-0x10],bh
  42004e:	jae    0x420012
  420050:	test   cl,0xbd
  420053:	add    DWORD PTR [eax],ebx
  420055:	stos   DWORD PTR es:[edi],eax
  420056:	pop    esp
  420057:	cmc    
  420058:	arpl   WORD PTR [edx-0x5d],di
  42005b:	lods   eax,DWORD PTR ds:[esi]
  42005c:	push   0x10
  42005e:	les    edx,FWORD PTR ds:0xfc75ddb0
  420064:	retf   
  420065:	out    0x7,eax
  420067:	inc    edi
  420068:	cld    
  420069:	or     DWORD PTR [esi-0x4e],ecx
  42006c:	mov    ch,0x26
  42006e:	mov    ds:0x79e0f376,al
  420073:	or     eax,0x208352d
  420078:	pop    es
  420079:	and    DWORD PTR [ebx+0x5e],ebp
  42007c:	mov    eax,DWORD PTR [edx-0x55]
  42007f:	add    eax,0x565ad7bf
  420084:	dec    eax
  420085:	mov    ebp,0x81b0db17
  42008a:	mov    edx,0xf2483bf9
  42008f:	jns    0x42001e
  420091:	bound  edx,QWORD PTR [eax]
  420093:	jb     0x4200ee
  420095:	ds push 0x2b4ec69c
  42009b:	ret    0x492e
  42009e:	or     BYTE PTR [esi-0x37],dl
  4200a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200a2:	adc    al,0xb9
  4200a4:	push   es
  4200a5:	daa    
  4200a6:	adc    eax,0x5f9e9cfe
  4200ab:	imul   esi,DWORD PTR [edi+0x1f],0xe4cfe9bb
  4200b2:	outs   dx,DWORD PTR ds:[esi]
  4200b3:	xor    DWORD PTR [ecx],esp
  4200b5:	and    eax,0xa0158d96
  4200ba:	std    
  4200bb:	jge    0x4200ba
  4200bd:	test   DWORD PTR [ebx],edi
  4200bf:	inc    esp
  4200c0:	ss mov edx,0x3d2e395a
  4200c6:	mov    dh,0xed
  4200c8:	lahf   
  4200c9:	xor    edx,edx
  4200cb:	inc    esi
  4200cc:	adc    BYTE PTR [edx-0x25],ch
  4200cf:	pop    ecx
  4200d0:	enter  0xc3ec,0x57
  4200d4:	fcom   DWORD PTR [ebp-0x19f06c66]
  4200da:	xchg   eax,ebp
  4200dc:	imul   esi,DWORD PTR [eax],0x4931f40d
  4200e2:	fsubp  st(3),st
  4200e4:	fnsave [ebx+0x3c7aeac9]
  4200ea:	xchg   edx,eax
  4200eb:	mov    cl,0x4f
  4200ed:	add    eax,0x77f99a87
  4200f2:	mov    cl,0x28
  4200f4:	and    bl,BYTE PTR [ebx]
  4200f6:	jb     0x420137
  4200f8:	dec    esp
  4200f9:	xchg   ebx,eax
  4200fa:	clc    
  4200fb:	repnz not BYTE PTR [edx+0x46]
  4200ff:	cmp    BYTE PTR [ebx-0x86c6d2e],ch
  420105:	and    BYTE PTR [esp+esi*8-0x78fe7022],0x8b
  42010d:	aad    0x6d
  42010f:	stos   BYTE PTR es:[edi],al
  420110:	(bad)  
  420111:	outs   dx,DWORD PTR ds:[esi]
  420112:	ret    
  420113:	mov    ds:0x54090c79,al
  420118:	dec    esp
  420119:	pop    ecx
  42011a:	mov    al,0x3f
  42011c:	daa    
  42011d:	jb     0x4200fc
  42011f:	jns    0x420151
  420121:	mov    DWORD PTR [eax+0x777cf153],eax
  420127:	fsubr  st,st(5)
  420129:	mov    ch,0xf7
  42012b:	push   esp
  42012c:	in     eax,0x8d
  42012e:	rcr    DWORD PTR [esi],1
  420130:	dec    eax
  420131:	adc    BYTE PTR [ebp+0x78],bl
  420134:	lods   eax,DWORD PTR ds:[esi]
  420135:	jge    0x4200c4
  420137:	pop    eax
  420138:	mov    edx,0x629a3f90
  42013d:	jmp    0x42012e
  42013f:	fwait
  420140:	push   ds
  420141:	mov    edx,0x6a057681
  420146:	pop    esp
  420147:	lahf   
  420148:	clc    
  420149:	xlat   BYTE PTR ds:[ebx]
  42014a:	push   ss
  42014b:	add    esp,eax
  42014d:	pushf  
  42014e:	aam    0xd9
  420150:	mov    cl,0x46
  420152:	sub    eax,0x1f1c85dc
  420157:	cmc    
  420158:	fcomp  QWORD PTR [ebp-0x4369e539]
  42015e:	adc    dh,bl
  420160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420161:	xor    edi,DWORD PTR ds:0x7a139820
  420167:	pop    edi
  420168:	xor    DWORD PTR [edi+edx*4+0x1a],ebp
  42016c:	adc    DWORD PTR [eax-0x25d6e027],ecx
  420172:	sbb    al,0xe6
  420174:	fisttp WORD PTR ds:0xbf0afd36
  42017a:	lods   eax,DWORD PTR ds:[esi]
  42017b:	ja     0x42016d
  42017d:	ret    
  42017e:	mov    ecx,0xe2cf6f25
  420183:	(bad)
  420186:	inc    ebp
  420187:	aaa    
  420188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420189:	and    BYTE PTR [esp+edi*1-0x7d],ah
  42018d:	or     eax,0xb3c7cbd5
  420192:	lahf   
  420193:	dec    ebp
  420194:	ds cmp ch,0x46
  420198:	or     dh,BYTE PTR [edx+ebp*1-0x62]
  42019c:	jae    0x42020f
  42019e:	test   al,0x37
  4201a0:	cld    
  4201a1:	mov    edi,0x261d223c
  4201a6:	call   FWORD PTR [ebp-0x5f]
  4201a9:	pop    esi
  4201aa:	(bad)  
  4201ab:	cli    
  4201ac:	dec    edi
  4201ad:	jge    0x4201e1
  4201af:	cmp    BYTE PTR [edx+0x41fd556d],cl
  4201b5:	mov    edi,0x4a316e21
  4201ba:	mov    ebx,0x179d43fd
  4201bf:	push   ebx
  4201c0:	mov    edx,0x5e1fa62
  4201c5:	sahf   
  4201c6:	les    eax,FWORD PTR [esp+esi*1+0xb74b1b3]
  4201cd:	adc    al,BYTE PTR [edi+ebx*8+0x43]
  4201d1:	mov    eax,gs:0xd3de7aca
  4201d7:	lods   eax,DWORD PTR ds:[esi]
  4201d8:	mov    edx,0x5d913a55
  4201dd:	out    0xb3,al
  4201df:	(bad)  
  4201e1:	sub    ecx,edi
  4201e3:	dec    edi
  4201e4:	cdq    
  4201e5:	into   
  4201e6:	mov    bh,0xfb
  4201e8:	cld    
  4201e9:	jl     0x4201e3
  4201eb:	push   esi
  4201ec:	xor    dh,bl
  4201ee:	and    ebx,esp
  4201f0:	call   0xdc7e:0x8a656efe
  4201f7:	xchg   edi,eax
  4201f8:	retf   0x8589
  4201fb:	fcmovbe st,st(5)
  4201fd:	loope  0x4201be
  4201ff:	dec    ecx
  420200:	inc    BYTE PTR [edx+0x77]
  420203:	cmp    BYTE PTR [esi+ebp*4-0x6f2d8f9e],dh
  42020a:	inc    ebx
  42020b:	retf   
  42020c:	jp     0x420210
  42020e:	mov    eax,0xe5e58302
  420213:	xchg   esi,eax
  420214:	xchg   ebx,eax
  420215:	sbb    al,0xe
  420217:	inc    ecx
  420218:	ror    BYTE PTR [ebx+0x78],1
  42021b:	push   es
  42021c:	sub    al,0x44
  42021e:	xor    bh,BYTE PTR [esi]
  420220:	dec    ebx
  420221:	jmp    0xa8bc34a6
  420226:	js     0x420265
  420228:	and    DWORD PTR [ebx+0x401cf55a],edx
  42022e:	mov    ?,esi
  420230:	mov    dl,0xf4
  420232:	mov    bl,0xa4
  420234:	rcl    BYTE PTR [ecx+0x5a4ed8de],1
  42023a:	std    
  42023b:	enter  0xea45,0x61
  42023f:	into   
  420240:	add    al,BYTE PTR [ecx]
  420242:	repnz inc ebp
  420244:	in     eax,dx
  420245:	mov    ecx,0x52b6fa86
  42024a:	cmc    
  42024b:	loop   0x420211
  42024d:	dec    esp
  42024e:	cmc    
  42024f:	fdivr  QWORD PTR [eax]
  420251:	xchg   DWORD PTR [edx+0x10],ebx
  420254:	(bad)  
  420255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420256:	cmp    BYTE PTR [edi-0x50],0xdd
  42025a:	mov    bl,0x1c
  42025c:	jmp    0x4202b5
  42025e:	mov    al,0x2
  420260:	xor    eax,DWORD PTR [edi+0x26fe3f2f]
  420266:	xchg   esp,eax
  420267:	adc    BYTE PTR [edi],bh
  420269:	idiv   ah
  42026b:	and    DWORD PTR [ecx-0x6d],esi
  42026e:	popf   
  42026f:	mov    al,0x51
  420271:	sub    dl,bl
  420273:	jbe    0x4201fb
  420275:	push   0x61
  420277:	mov    ebp,esp
  420279:	jbe    0x420269
  42027b:	xor    al,0x6d
  42027d:	add    DWORD PTR [ebx+0x3ca9642a],eax
  420283:	cmp    al,0xb6
  420285:	mov    ch,0x62
  420287:	lock out dx,eax
  420289:	(bad)  
  42028a:	jmp    0x4202cb
  42028c:	adc    al,0xc8
  42028e:	push   ss
  42028f:	jae    0x420220
  420291:	test   al,0x1b
  420293:	repnz retf 
  420295:	pusha  
  420296:	sub    eax,0x8cfc2e28
  42029b:	adc    DWORD PTR [ebx+esi*8-0x46494e78],edi
  4202a2:	sbb    ebp,DWORD PTR [ebp+0xff65898]
  4202a8:	daa    
  4202a9:	mov    ebp,0xe573f7f5
  4202ae:	mov    edi,edx
  4202b0:	icebp  
  4202b1:	adc    al,0xff
  4202b3:	or     bl,0x85
  4202b6:	jmp    0x420263
  4202b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b9:	push   edx
  4202ba:	repz or ebx,DWORD PTR [eax-0x75]
  4202be:	aas    
  4202bf:	mov    ah,0xc8
  4202c1:	xchg   edx,eax
  4202c2:	lahf   
  4202c3:	sub    DWORD PTR [eax+0xb],edi
  4202c6:	or     eax,0x9b6a967a
  4202cb:	(bad)  
  4202cc:	test   eax,0x2448ff86
  4202d1:	inc    esp
  4202d2:	cmp    ebx,edi
  4202d4:	shr    bl,1
  4202d6:	test   al,0xcf
  4202d8:	hlt    
  4202d9:	sar    BYTE PTR [esi],cl
  4202db:	jl     0x4202ad
  4202dd:	addr16 add eax,0xb1bbcd74
  4202e3:	stos   BYTE PTR es:[edi],al
  4202e4:	ins    BYTE PTR es:[edi],dx
  4202e5:	data16 das 
  4202e7:	mov    esp,0xc5d56683
  4202ec:	mov    ds:0xe1b0877b,al
  4202f1:	retf   0x3009
  4202f4:	adc    BYTE PTR [ebx+0x6a87eec4],bl
  4202fa:	test   eax,0xdaa21be0
  4202ff:	mov    eax,ds:0xc15c068c
  420304:	mov    bh,0x1c
  420306:	iret   
  420307:	and    BYTE PTR [esi-0x7d6e6990],dh
  42030d:	leave  
  42030e:	dec    ebx
  42030f:	cmp    al,0x7e
  420311:	out    dx,al
  420312:	shr    ecx,cl
  420314:	add    BYTE PTR [esi-0x42],0x50
  420318:	icebp  
  420319:	ss test bh,dl
  42031c:	ror    DWORD PTR [edx-0x505add22],1
  420322:	mov    ds:0xa2ee00b0,eax
  420327:	cmp    BYTE PTR [ecx],bh
  420329:	adc    esi,DWORD PTR [ecx+0x78]
  42032c:	adc    eax,0x3003deca
  420331:	cdq    
  420332:	pop    esp
  420333:	fs icebp 
  420335:	iret   
  420336:	(bad)  
  420337:	jmp    0xb850:0x22b5be82
  42033e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033f:	jno    0x4203a1
  420341:	pop    ebx
  420342:	into   
  420343:	lock mov dh,0xc3
  420346:	sahf   
  420347:	mov    edx,0x9c23103d
  42034c:	jmp    0x4d6265c4
  420351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420352:	sbb    al,0xcf
  420354:	bound  esi,QWORD PTR ds:0x5d31851f
  42035a:	push   edi
  42035b:	push   0xb7a59a75
  420360:	aas    
  420361:	cld    
  420362:	in     eax,0x42
  420364:	inc    eax
  420365:	or     al,0xc4
  420367:	mov    edx,0x7cea3ebe
  42036c:	gs mov gs,eax
  42036f:	fistp  QWORD PTR [ebx-0x496fbca4]
  420375:	(bad)  
  420376:	outs   dx,DWORD PTR ds:[esi]
  420377:	jmp    0x420367
  420379:	push   DWORD PTR [ebp+0x7567d482]
  42037f:	neg    DWORD PTR [eax]
  420381:	lods   al,BYTE PTR ds:[esi]
  420382:	test   eax,0x4ea40c1c
  420387:	sahf   
  420388:	add    DWORD PTR [esi],0xffffffad
  42038b:	sti    
  42038c:	sbb    cl,BYTE PTR [ebx]
  42038e:	or     ebp,DWORD PTR [edi+0x13]
  420391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420392:	jmp    0x4f04bfab
  420397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420398:	out    dx,al
  420399:	mov    ch,0xe4
  42039b:	out    dx,eax
  42039c:	inc    ebx
  42039d:	clc    
  42039e:	mov    ecx,DWORD PTR [esi-0x3de65017]
  4203a4:	xchg   DWORD PTR [ebx],esp
  4203a6:	pop    ds
  4203a7:	dec    ebx
  4203a8:	jp     0x420391
  4203aa:	xchg   ebx,eax
  4203ab:	hlt    
  4203ac:	ffree  st(1)
  4203ae:	cmp    ch,al
  4203b0:	pop    ds
  4203b1:	xlat   BYTE PTR ds:[ebx]
  4203b2:	jnp    0x4203d7
  4203b4:	test   ecx,eax
  4203b6:	jmp    0xf4bc5ac3
  4203bb:	or     bl,BYTE PTR [ecx+0x2d]
  4203be:	add    eax,DWORD PTR [edx-0x4d]
  4203c1:	push   ebx
  4203c2:	mov    al,0xef
  4203c4:	and    BYTE PTR [ebx+0x39],bl
  4203c7:	pop    ss
  4203c8:	jb     0x420389
  4203ca:	jmp    0xd750:0xa65f4f5a
  4203d1:	jno    0x420406
  4203d3:	aad    0xca
  4203d5:	sub    BYTE PTR [edi],0xd2
  4203d8:	push   ecx
  4203d9:	or     DWORD PTR [eax+esi*8-0x2f37cd47],edx
  4203e0:	push   ss
  4203e1:	inc    ebx
  4203e2:	out    dx,al
  4203e3:	mov    al,0xda
  4203e5:	jmp    0xd984:0x46f1719b
  4203ec:	pop    esp
  4203ed:	bound  edx,QWORD PTR [esi+0x31f24f64]
  4203f3:	xchg   esi,eax
  4203f4:	mov    edi,0x62376c10
  4203f9:	mov    eax,0x63737e98
  4203fe:	sub    DWORD PTR [ebp+0x22],ebp
  420401:	sti    
  420402:	in     eax,dx
  420403:	mov    ebp,0x6ba930c3
  420408:	aam    0x93
  42040a:	scas   eax,DWORD PTR es:[edi]
  42040b:	ret    0xec88
  42040e:	dec    ecx
  42040f:	and    DWORD PTR fs:[edi-0x2f],esi
  420413:	arpl   WORD PTR [eax+0x7d],dx
  420416:	xchg   edx,eax
  420417:	xor    eax,0x5943da5c
  42041c:	fs pop ebp
  42041e:	and    al,0x88
  420420:	imul   edx,DWORD PTR [ecx+eax*2],0xdeb06388
  420427:	mov    ds:0xda377419,al
  42042c:	sub    eax,0x400f9865
  420431:	xor    BYTE PTR [eax-0xb],bh
  420434:	jl     0x4204a6
  420436:	shl    DWORD PTR [edi],0x38
  420439:	xor    ebp,ecx
  42043b:	push   ds
  42043c:	in     al,0x6a
  42043e:	icebp  
  42043f:	jecxz  0x420438
  420441:	add    BYTE PTR ds:0x709d67d8,bh
  420447:	xchg   ebp,eax
  420448:	stc    
  420449:	test   DWORD PTR [ebx-0x32f6376d],ebp
  42044f:	aad    0xb1
  420451:	pop    edx
  420452:	pop    ss
  420453:	sahf   
  420454:	mov    bh,0x87
  420456:	push   cs
  420457:	in     al,dx
  420458:	push   0x3f930d7b
  42045d:	xchg   edi,ebx
  42045f:	retf   0xe7c6
  420462:	dec    ebp
  420463:	jecxz  0x4203ec
  420465:	cmp    BYTE PTR [ebx-0x8],cl
  420468:	cs xchg edx,eax
  42046a:	mov    al,0x2b
  42046c:	outs   dx,DWORD PTR ds:[esi]
  42046d:	push   eax
  42046e:	xchg   esp,eax
  42046f:	and    BYTE PTR [ebx-0x487d2f96],al
  420475:	inc    ebx
  420476:	mov    ds:0xd6d1372d,eax
  42047b:	aam    0xb5
  42047d:	aas    
  42047e:	cmp    ebx,DWORD PTR [edi+0x4d]
  420481:	mov    dh,0xc6
  420483:	mov    ebp,0xea6ef519
  420488:	dec    ebp
  420489:	ja     0x420466
  42048b:	sar    BYTE PTR [ecx-0x79],cl
  42048e:	or     al,0x97
  420490:	mov    ds:0x49ec3ad2,al
  420495:	xchg   esi,eax
  420496:	out    dx,eax
  420497:	cld    
  420498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420499:	sbb    ebx,DWORD PTR [edx+0x31]
  42049c:	cwde   
  42049d:	test   BYTE PTR [edi+0x64],ah
  4204a0:	aam    0x53
  4204a2:	add    DWORD PTR [esi+esi*2+0xe2430c4],eax
  4204a9:	push   edi
  4204aa:	div    esp
  4204ac:	enter  0x9a88,0x81
  4204b0:	xor    esp,DWORD PTR [ecx]
  4204b2:	add    al,0x58
  4204b4:	scas   al,BYTE PTR es:[edi]
  4204b5:	dec    esi
  4204b6:	sbb    ecx,ebp
  4204b8:	jno    0x4204bd
  4204ba:	jns    0x420482
  4204bc:	dec    edx
  4204bd:	loopne 0x420502
  4204bf:	pushf  
  4204c0:	xor    eax,DWORD PTR [esi]
  4204c2:	jl     0x4204e8
  4204c4:	inc    edx
  4204c5:	dec    ecx
  4204c6:	adc    ebx,DWORD PTR [eax-0x659f758f]
  4204cc:	mov    gs,WORD PTR fs:[eax+0x6c61d495]
  4204d3:	lds    esi,FWORD PTR [esi]
  4204d5:	push   esi
  4204d6:	cmp    al,0x6
  4204d8:	push   esi
  4204d9:	mov    DWORD PTR [eax+0x6fce2aa8],ebp
  4204df:	mov    dh,0x1e
  4204e1:	in     al,0x78
  4204e3:	jae    0x420495
  4204e5:	jmp    0x8943:0x1ce18d66
  4204ec:	mov    dl,0x35
  4204ee:	pushf  
  4204ef:	dec    ebx
  4204f0:	stc    
  4204f1:	neg    eax
  4204f3:	hlt    
  4204f4:	data16 aaa 
  4204f6:	das    
  4204f7:	lods   al,BYTE PTR ds:[esi]
  4204f8:	dec    eax
  4204f9:	xchg   DWORD PTR [edx-0x6f4eec60],edx
  4204ff:	inc    esi
  420500:	push   ss
  420501:	je     0x420511
  420503:	mov    ebp,0xe79a11e7
  420508:	push   edi
  420509:	cmp    ah,dl
  42050b:	jbe    0x4204ba
  42050d:	out    dx,al
  42050e:	push   eax
  42050f:	push   ds
  420510:	mov    ah,0xec
  420512:	xchg   ebx,eax
  420513:	dec    ebx
  420514:	adc    BYTE PTR [eax-0x43],cl
  420517:	push   ebp
  420518:	mov    DWORD PTR [esi+0x45],edx
  42051b:	pop    ss
  42051c:	popa   
  42051d:	mov    ds:0x54b6e435,al
  420522:	jle    0x420593
  420524:	adc    BYTE PTR [ebp+0x1f],ah
  420527:	mov    al,0xf8
  420529:	add    eax,0x1bd5847c
  42052e:	mov    cl,0x38
  420530:	mov    cl,0x2
  420532:	push   edi
  420533:	jmp    0x6e1e:0xe1bb430a
  42053a:	leave  
  42053b:	adc    DWORD PTR [eax],0x340ca9a4
  420541:	adc    ebp,edi
  420543:	jle    0x420509
  420545:	jbe    0x420554
  420547:	cwde   
  420548:	bnd jns 0x420598
  42054b:	add    ebp,esp
  42054d:	sbb    eax,0x704c4cef
  420552:	hlt    
  420553:	pop    ss
  420554:	mov    esi,0xf7885474
  420559:	repnz sti 
  42055b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42055c:	push   ebx
  42055d:	dec    edi
  42055e:	daa    
  42055f:	mov    edx,cs
  420561:	push   es
  420562:	aas    
  420563:	push   edi
  420564:	ror    BYTE PTR [ecx],1
  420566:	inc    ebp
  420567:	bound  ebp,QWORD PTR [edx]
  420569:	and    edx,edx
  42056b:	and    ebx,DWORD PTR [ebx-0x14]
  42056e:	aaa    
  42056f:	sbb    DWORD PTR ds:0x519f0c3,esi
  420575:	mov    dl,0x4d
  420577:	daa    
  420578:	sub    ebp,DWORD PTR [ecx-0x7ac114ae]
  42057e:	dec    edi
  42057f:	xor    BYTE PTR [edi-0xf],dl
  420582:	mov    esi,0xa19b7a4f
  420587:	hlt    
  420588:	push   0xffffffba
  42058a:	mov    al,ds:0x23ecb5fd
  42058f:	jp     0x420589
  420591:	jb     0x4205b3
  420593:	jl     0x42053d
  420595:	sub    ebp,DWORD PTR [edx]
  420597:	clc    
  420598:	rcl    DWORD PTR [esp+ebx*4-0x1e],cl
  42059c:	adc    ebx,edx
  42059e:	jbe    0x4205d0
  4205a0:	or     bh,BYTE PTR [esi]
  4205a2:	dec    ebp
  4205a3:	retf   
  4205a4:	and    ch,al
  4205a6:	jp     0x4205f1
  4205a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a9:	int3   
  4205aa:	es inc esi
  4205ac:	dec    edx
  4205ae:	mov    ebx,0x77b0f25b
  4205b3:	xchg   esp,eax
  4205b4:	pushf  
  4205b5:	je     0x420585
  4205b7:	jl     0x42060e
  4205b9:	xchg   edi,eax
  4205ba:	pop    esi
  4205bb:	xchg   edx,eax
  4205bc:	in     al,dx
  4205bd:	mov    ecx,eax
  4205bf:	inc    ebp
  4205c0:	inc    edx
  4205c1:	arpl   WORD PTR [esi-0x96e0d3a],sp
  4205c7:	cmp    edx,DWORD PTR [ecx+0x6ea57cb]
  4205cd:	and    eax,0x3f4c0f23
  4205d2:	xlat   BYTE PTR ds:[ebx]
  4205d3:	and    ebp,DWORD PTR [eax+0x3a]
  4205d6:	and    eax,0xcfd26060
  4205db:	pusha  
  4205dc:	and    al,0xce
  4205de:	data16 das 
  4205e0:	inc    ecx
  4205e1:	add    al,0xed
  4205e3:	ret    0x9c34
  4205e6:	les    edx,FWORD PTR [eax]
  4205e8:	stos   BYTE PTR es:[edi],al
  4205e9:	clc    
  4205ea:	enter  0xb881,0x29
  4205ee:	inc    edx
  4205ef:	in     eax,dx
  4205f0:	sub    al,0xef
  4205f2:	xor    dl,dh
  4205f4:	(bad)  
  4205f5:	aas    
  4205f6:	imul   ecx,DWORD PTR [edi+esi*1+0x43c816f8],0xed4ecedd
  420601:	cmp    eax,0xc49c89ec
  420606:	push   ebx
  420607:	mov    ebp,ebp
  420609:	pop    ds
  42060a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060b:	pop    ebx
  42060c:	in     al,dx
  42060d:	mov    cl,0x58
  42060f:	(bad)  
  420610:	out    dx,al
  420611:	sub    BYTE PTR [ebp+ebx*4+0x3c8a253],ah
  420618:	push   edi
  420619:	pop    ebp
  42061a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42061b:	stc    
  42061c:	out    0xcf,al
  42061e:	icebp  
  42061f:	cld    
  420620:	xor    edi,DWORD PTR ds:0x2f4da32b
  420626:	jmp    0x65ed:0xa272259e
  42062d:	mul    DWORD PTR [edx]
  42062f:	aas    
  420630:	mov    al,0xa5
  420632:	sub    eax,0x32f5008d
  420637:	or     eax,0x35595976
  42063c:	cmc    
  42063d:	out    0xe4,eax
  42063f:	(bad)  
  420640:	test   BYTE PTR ds:0x33f3442b,bh
  420646:	test   al,0x10
  420648:	sti    
  420649:	fcomp  DWORD PTR ds:0xef73420b
  42064f:	aaa    
  420650:	push   0xffffffae
  420652:	mov    al,0x47
  420654:	sub    bl,bl
  420656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420657:	adc    al,0x39
  420659:	mov    eax,ds:0x3f90d2c9
  42065e:	jp     0x4206ac
  420660:	in     al,dx
  420661:	and    cl,BYTE PTR [ebx-0x73]
  420664:	mov    ebx,0xfcf90fd4
  420669:	pusha  
  42066a:	sahf   
  42066b:	not    bh
  42066d:	mov    esp,0x8edb8a1e
  420672:	xchg   edi,eax
  420673:	mov    bh,0xb6
  420675:	xor    eax,0x4453e980
  42067a:	sub    al,bh
  42067c:	mov    ebp,DWORD PTR [esi-0x26]
  42067f:	dec    ebp
  420680:	retf   
  420681:	out    0x65,eax
  420683:	sbb    BYTE PTR [ecx+ebx*2-0x3f],ch
  420687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420688:	cmp    DWORD PTR [edi-0x18],ebp
  42068b:	nop
  42068c:	sahf   
  42068d:	icebp  
  42068e:	mov    al,0x86
  420690:	data16 lock sub ah,0x2d
  420695:	pop    ebx
  420696:	ja     0x420652
  420698:	add    cl,BYTE PTR [ebp+0x4cfadb64]
  42069e:	jecxz  0x4206df
  4206a0:	and    ch,dl
  4206a2:	(bad)
  4206a6:	dec    edx
  4206a7:	mov    BYTE PTR [ebx+0x53e99984],dl
  4206ad:	inc    edi
  4206ae:	cmp    eax,0x978319c9
  4206b3:	addr16 loopne 0x42068b
  4206b6:	xor    ch,BYTE PTR [ecx]
  4206b8:	sbb    DWORD PTR [eax-0x1a85421e],esi
  4206be:	jle    0x4206d5
  4206c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c1:	iret   
  4206c2:	cld    
  4206c3:	jp     0x42070e
  4206c5:	cli    
  4206c6:	dec    ecx
  4206c7:	stos   BYTE PTR es:[edi],al
  4206c8:	mov    ebp,0xb07ffe0f
  4206cd:	cmp    al,0xbf
  4206cf:	jnp    0x420732
  4206d1:	pop    ebx
  4206d2:	xchg   ebp,eax
  4206d3:	(bad)  
  4206d4:	inc    eax
  4206d5:	xchg   ebp,eax
  4206d6:	or     esp,esi
  4206d8:	in     al,0xab
  4206da:	pop    ebx
  4206db:	add    al,0x59
  4206dd:	fs mov dh,0x32
  4206e0:	pop    esp
  4206e1:	adc    eax,0x3276d7cc
  4206e6:	xor    ecx,ebx
  4206e8:	dec    edx
  4206ea:	mov    dh,0x28
  4206ec:	repz sub DWORD PTR [ebx+0x5c3dcd88],0xecce2037
  4206f7:	dec    esi
  4206f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f9:	stos   BYTE PTR es:[edi],al
  4206fa:	push   DWORD PTR [edi+ecx*4+0x2000f3d6]
  420701:	jge    0x4206cc
  420703:	xchg   ebp,eax
  420704:	call   0x9603:0x7e5e1618
  42070b:	out    dx,eax
  42070c:	out    0x1f,eax
  42070e:	xlat   BYTE PTR ds:[ebx]
  42070f:	mov    bh,BYTE PTR [esi]
  420711:	jns    0x420777
  420713:	clc    
  420714:	rcr    DWORD PTR gs:[ebp+ecx*1-0x55],cl
  420719:	sub    al,0x29
  42071b:	aaa    
  42071c:	jnp    0x4206e9
  42071e:	fdivr  DWORD PTR [ecx+eiz*4]
  420721:	sbb    al,0x9f
  420723:	push   es
  420724:	cmp    esp,DWORD PTR [edx+ecx*1]
  420727:	jle    0x4206be
  420729:	mov    BYTE PTR [edi-0x38],dh
  42072c:	push   ebp
  42072d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072e:	inc    edi
  42072f:	sub    dl,bh
  420731:	push   cs
  420732:	jo     0x420791
  420734:	repnz shl edi,0x40
  420738:	int    0x9e
  42073a:	or     cl,0x25
  42073d:	jmp    0xd354:0xb59bf816
  420744:	arpl   WORD PTR ss:[eax+0x1d390fd4],di
  42074b:	jl     0x420777
  42074d:	jnp    0x42075c
  42074f:	jnp    0x420709
  420751:	jmp    0x732a:0x538be2f4
  420758:	add    ch,dh
  42075a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42075b:	or     dh,dh
  42075d:	mov    ebp,0x44b16fd3
  420762:	in     eax,dx
  420763:	jae    0x420729
  420765:	out    0x31,al
  420767:	and    eax,0xeee81cde
  42076c:	mov    al,0x7b
  42076e:	pextrw eax,(bad),0xc5
  420770:	pop    es
  420771:	push   esi
  420772:	lea    ebx,[eax+0x4e21266c]
  420778:	ja     0x42075b
  42077a:	loope  0x4207cd
  42077c:	aaa    
  42077d:	nop
  42077e:	jns    0x420778
  420780:	add    esi,DWORD PTR [ebx]
  420782:	js     0x420777
  420784:	(bad)  
  420785:	mov    eax,0xa91f636c
  42078a:	fadd   DWORD PTR [ebp-0x80]
  42078d:	cdq    
  42078e:	adc    eax,0xf8f0ab0f
  420793:	aam    0x23
  420795:	and    edx,DWORD PTR [edi-0x1ca27671]
  42079b:	das    
  42079c:	icebp  
  42079d:	ins    BYTE PTR es:[edi],dx
  42079e:	ret    0x2e09
  4207a1:	xlat   BYTE PTR ds:[ebx]
  4207a2:	das    
  4207a3:	cmp    ch,ah
  4207a5:	leave  
  4207a6:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4207a8:	xchg   edx,eax
  4207a9:	pop    edi
  4207aa:	js     0x42078f
  4207ac:	fs stos DWORD PTR es:[edi],eax
  4207ae:	aas    
  4207af:	pop    edx
  4207b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207b1:	or     al,0xb8
  4207b3:	add    DWORD PTR [edi],edi
  4207b5:	aad    0x31
  4207b7:	dec    ebx
  4207b8:	mov    ds:0x4ceef271,al
  4207bd:	cmp    eax,DWORD PTR [ecx]
  4207bf:	or     cl,al
  4207c1:	das    
  4207c2:	dec    ecx
  4207c3:	mov    eax,0x39ffdeb4
  4207c8:	(bad)  
  4207c9:	outs   dx,BYTE PTR ds:[esi]
  4207ca:	mov    edx,0x587fe2f8
  4207cf:	jl     0x420755
  4207d1:	hlt    
  4207d2:	iret   
  4207d3:	or     al,0x45
  4207d5:	(bad)  [esi+ebx*8]
  4207d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d9:	jns    0x420801
  4207db:	(bad)  
  4207dd:	test   eax,0x99255b24
  4207e2:	pop    esp
  4207e3:	mov    dh,0xf8
  4207e5:	and    bl,ah
  4207e7:	sar    dl,0x34
  4207ea:	mov    dl,BYTE PTR [ecx+0x3fa1522a]
  4207f0:	inc    ebx
  4207f1:	sahf   
  4207f2:	or     al,0xbc
  4207f4:	out    dx,eax
  4207f5:	mov    dh,0xf0
  4207f7:	mov    ebp,0xb2d3229f
  4207fc:	aam    0xb1
  4207fe:	jne    0x420853
  420800:	mov    WORD PTR [edi+edx*1],fs
  420803:	push   eax
  420804:	and    eax,0x58e1e41b
  420809:	xor    eax,0x8b0976dc
  42080e:	cmp    al,0x93
  420810:	jl     0x4207e5
  420812:	pop    ebx
  420813:	cmp    eax,edi
  420815:	and    BYTE PTR [edx],bl
  420817:	dec    eax
  420818:	dec    ecx
  420819:	push   eax
  42081a:	mov    dl,0x97
  42081c:	jnp    0x4207ad
  42081e:	push   esi
  42081f:	cmp    al,0xbc
  420821:	jae    0x42087d
  420823:	dec    ecx
  420824:	scas   eax,DWORD PTR es:[edi]
  420825:	mov    eax,0x8bd8b007
  42082a:	push   ebp
  42082b:	dec    ebx
  42082c:	mov    bh,0xbd
  42082e:	outs   dx,BYTE PTR ds:[esi]
  42082f:	test   BYTE PTR [ecx],0xe
  420832:	jl     0x4207b7
  420834:	push   ss
  420835:	push   eax
  420836:	sub    al,0xd4
  420838:	add    esi,DWORD PTR [edi-0x4f3cbee7]
  42083e:	mov    al,0xb5
  420840:	pop    ds
  420841:	adc    al,0x19
  420843:	add    DWORD PTR [ecx+0x2e],ebx
  420846:	icebp  
  420847:	xchg   ecx,ecx
  420849:	push   esi
  42084a:	loopne 0x420872
  42084c:	xor    al,0x3c
  42084e:	push   ss
  42084f:	out    dx,eax
  420850:	sti    
  420851:	sub    BYTE PTR [edx],al
  420853:	push   ebx
  420854:	ds jmp 0x42085d
  420857:	mov    ch,0x22
  420859:	int    0xb
  42085b:	inc    esi
  42085c:	pop    ebx
  42085d:	test   al,0x85
  42085f:	in     eax,dx
  420860:	test   eax,0x11d89b41
  420865:	pop    edx
  420866:	inc    ebx
  420867:	pop    ds
  420868:	lock out dx,eax
  42086a:	data16 xor BYTE PTR [edi+0x69],dh
  42086e:	loop   0x4207fa
  420870:	lahf   
  420871:	and    esp,DWORD PTR [esi]
  420873:	pop    es
  420874:	shr    ebx,1
  420876:	fnsave [ecx+0x61]
  420879:	clc    
  42087a:	stos   BYTE PTR es:[edi],al
  42087b:	or     al,0x1b
  42087d:	fmul   DWORD PTR [eax-0x35]
  420880:	add    al,0x15
  420882:	jne    0x4208d3
  420884:	dec    edi
  420885:	aas    
  420886:	jnp    0x420817
  420888:	mov    dh,0xc7
  42088a:	sub    al,0xfc
  42088c:	sub    esi,DWORD PTR [esi-0x13]
  42088f:	mov    esp,0xa87fe007
  420894:	aad    0xdb
  420896:	xor    edx,DWORD PTR [ebx-0x6e3d0565]
  42089c:	sbb    al,0xfb
  42089e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089f:	repnz lea ecx,[ebx]
  4208a2:	mov    ah,0xd7
  4208a4:	pop    ebx
  4208a5:	and    eax,0x7641564d
  4208aa:	and    al,BYTE PTR [ecx]
  4208ac:	push   es
  4208ad:	pusha  
  4208ae:	and    ecx,DWORD PTR [edx+0x1741622c]
  4208b4:	stc    
  4208b5:	imul   bl
  4208b7:	cs add eax,0x7c261751
  4208bd:	push   es
  4208be:	xor    cl,ah
  4208c0:	ja     0x42087a
  4208c2:	mov    ebx,ecx
  4208c4:	push   ds
  4208c5:	nop
  4208c6:	xor    eax,0xb286a393
  4208cb:	add    esi,DWORD PTR [esp+esi*4]
  4208ce:	lods   al,BYTE PTR ds:[esi]
  4208cf:	lods   eax,DWORD PTR ds:[esi]
  4208d0:	icebp  
  4208d1:	enter  0xac7,0xeb
  4208d5:	das    
  4208d6:	mov    al,ds:0x2c62a7f
  4208db:	retf   0x71a4
  4208de:	xor    al,0xb9
  4208e0:	mov    ah,0xdd
  4208e2:	push   ecx
  4208e3:	push   ecx
  4208e4:	jo     0x42092d
  4208e6:	in     al,dx
  4208e7:	xor    BYTE PTR [esi],0x1
  4208ea:	jbe    0x420888
  4208ec:	fwait
  4208ed:	sti    
  4208ee:	mov    edi,0xb87e7ea2
  4208f3:	dec    edx
  4208f4:	fucomip st,st(4)
  4208f6:	popf   
  4208f7:	(bad)  
  4208f8:	pop    ss
  4208f9:	push   ss
  4208fa:	cmp    DWORD PTR [ecx-0x38],eax
  4208fd:	xchg   ebp,eax
  4208fe:	or     al,0x4a
  420900:	in     eax,0x1a
  420902:	std    
  420903:	stos   DWORD PTR es:[edi],eax
  420904:	pop    eax
  420905:	lea    eax,[eax-0x1365a96e]
  42090b:	pop    ds
  42090c:	mov    ds:0xe5fcd943,al
  420911:	out    0x48,al
  420913:	(bad)  
  420914:	mov    ebp,0x339931c7
  420919:	test   ebx,esi
  42091b:	adc    BYTE PTR ds:0xdd6802e,dl
  420921:	sub    DWORD PTR [esi],0xa92c9547
  420927:	sub    eax,0xca683ec8
  42092c:	jmp    0x1fff9d55
  420931:	inc    eax
  420932:	(bad)  
  420933:	mov    esp,0xa2b747f8
  420938:	inc    ebp
  420939:	or     al,0x3d
  42093b:	out    0x93,eax
  42093d:	das    
  42093e:	test   eax,0x54c6d814
  420943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420944:	inc    esi
  420945:	cmp    bh,BYTE PTR [eax-0x5d17670e]
  42094b:	(bad)  
  42094c:	data16 lods al,BYTE PTR ds:[esi]
  42094e:	inc    edx
  42094f:	in     al,0x83
  420951:	(bad)  
  420952:	aam    0x39
  420954:	fistp  WORD PTR [ebx+0x41f73897]
  42095a:	fdiv   QWORD PTR [ebp+0xf]
  42095d:	cmp    bh,BYTE PTR [ebx-0x530510dd]
  420963:	aam    0x72
  420965:	pcmpeqd mm1,QWORD PTR ds:0x1afb2a66
  42096c:	addr16 (bad) 
  42096e:	out    0x4f,eax
  420970:	pop    es
  420971:	scas   al,BYTE PTR es:[edi]
  420972:	or     DWORD PTR [ecx],0xb5593013
  420978:	(bad)  
  420979:	shl    BYTE PTR [edx+0xc],0xab
  42097d:	mov    eax,0x9d8ac10d
  420982:	pop    ecx
  420983:	frstor [ecx-0x4e]
  420986:	scas   al,BYTE PTR es:[edi]
  420987:	sar    BYTE PTR [esi],0x6f
  42098a:	sub    esp,DWORD PTR [eax+0x6c5d888c]
  420990:	sub    eax,0x143aebe3
  420995:	call   0xf1282b27
  42099a:	adc    eax,DWORD PTR [esi+0x4b]
  42099d:	and    esi,DWORD PTR [esi+ecx*4+0x17b85b96]
  4209a4:	sbb    ch,BYTE PTR [esi]
  4209a6:	or     eax,0x2484eb7
  4209ab:	cmp    eax,0x96c57e3a
  4209b0:	add    al,BYTE PTR [eax-0x7caa18e2]
  4209b6:	push   ebx
  4209b7:	mov    ch,0xb5
  4209b9:	das    
  4209ba:	aas    
  4209bb:	or     eax,0xa721466f
  4209c0:	pop    ss
  4209c1:	shl    BYTE PTR [ecx],1
  4209c3:	lock push 0x6ae954d
  4209c9:	push   es
  4209ca:	cdq    
  4209cb:	mov    ecx,0x8b0a7fde
  4209d0:	mov    WORD PTR [ebx-0x20],?
  4209d3:	jmp    0x4209ef
  4209d5:	jne    0x4209df
  4209d7:	mov    eax,ds:0x1253660d
  4209dc:	fsubr  QWORD PTR [eax-0x25]
  4209df:	xlat   BYTE PTR ds:[ebx]
  4209e0:	sub    al,0xf5
  4209e2:	loop   0x420980
  4209e4:	and    al,0x38
  4209e6:	mov    eax,0x7cc00bf6
  4209ec:	ins    BYTE PTR es:[edi],dx
  4209ed:	(bad)  
  4209ee:	(bad)  
  4209ef:	iret   
  4209f0:	imul   ecx,DWORD PTR [ecx-0x4a7e44cb],0x72174da6
  4209fa:	mov    edx,0x3f42e93d
  4209ff:	mov    bl,0x39
  420a01:	jecxz  0x420a15
  420a03:	mov    cl,0x3a
  420a05:	mov    cl,0x4e
  420a07:	pusha  
  420a08:	(bad)  
  420a0a:	sbb    eax,0x80cecced
  420a0f:	dec    esi
  420a10:	mov    ebx,0x70132d6b
  420a15:	jge    0x4209fc
  420a17:	or     al,0xac
  420a19:	adc    eax,0xaeef8a8f
  420a1e:	and    edx,DWORD PTR [edi]
  420a20:	push   edx
  420a21:	adc    DWORD PTR [esp+esi*8+0x4c],esi
  420a25:	push   esp
  420a26:	outs   dx,BYTE PTR ds:[esi]
  420a27:	and    al,0xa1
  420a29:	in     eax,dx
  420a2a:	out    dx,al
  420a2b:	test   ecx,ebp
  420a2d:	shl    BYTE PTR [edx-0x74],1
  420a30:	scas   al,BYTE PTR es:[edi]
  420a31:	iret   
  420a32:	aad    0xd5
  420a34:	pop    edx
  420a35:	ret    0x904a
  420a38:	mov    eax,0xaa703445
  420a3d:	add    BYTE PTR [eax-0x7a],0x49
  420a41:	xchg   BYTE PTR [edx+0x29],dh
  420a44:	retf   0x1a4a
  420a47:	or     DWORD PTR [ebx-0x79062ed5],0xffffffbc
  420a4e:	sar    BYTE PTR [edx+0x7f],1
  420a51:	sahf   
  420a52:	ficomp DWORD PTR fs:[ebx-0x5b]
  420a56:	inc    edx
  420a57:	push   esp
  420a58:	ss inc edi
  420a5a:	sub    bl,cl
  420a5c:	test   BYTE PTR [esi-0x2c],bh
  420a5f:	lahf   
  420a60:	mov    ch,0xf
  420a62:	cmp    eax,0x6c56a74a
  420a67:	pushf  
  420a68:	in     eax,dx
  420a69:	cdq    
  420a6a:	mov    bl,0xaa
  420a6c:	pop    ebp
  420a6d:	sub    DWORD PTR [edx],edi
  420a6f:	sub    al,0x18
  420a71:	iretw  
  420a73:	inc    esp
  420a74:	cmp    al,0x7f
  420a76:	push   eax
  420a77:	int    0x5b
  420a79:	xchg   ebx,eax
  420a7a:	cwde   
  420a7b:	arpl   WORD PTR [ecx+0x6f7b22bd],sp
  420a81:	add    dl,cl
  420a83:	fidiv  DWORD PTR [ebp+ebx*4+0x4d298f7a]
  420a8a:	pop    esi
  420a8b:	push   esp
  420a8c:	inc    esp
  420a8d:	in     eax,0x23
  420a8f:	mov    ds:0x62d502d,al
  420a94:	or     eax,0xf5515348
  420a99:	inc    esi
  420a9a:	mov    edx,0x57b2470c
  420a9f:	jb     0x420b20
  420aa1:	push   esi
  420aa2:	jge    0x420a37
  420aa4:	sub    eax,0xdad70458
  420aa9:	stos   DWORD PTR es:[edi],eax
  420aaa:	pop    ebp
  420aab:	pushf  
  420aac:	cdq    
  420aad:	ret    0x4b3b
  420ab0:	dec    eax
  420ab1:	xchg   DWORD PTR [edx+0x67],ecx
  420ab4:	xchg   edx,eax
  420ab5:	lock push es
  420ab7:	or     ah,ch
  420ab9:	sub    eax,0x980651df
  420abe:	dec    ebp
  420abf:	mov    dh,BYTE PTR [edx]
  420ac1:	inc    eax
  420ac2:	sub    al,0xcd
  420ac4:	add    esp,DWORD PTR [ebx+0x67]
  420ac7:	mov    ebx,0x34e5d474
  420acc:	int    0x1e
  420ace:	mov    ds:0xf9fc4390,al
  420ad3:	jne    0x420ad4
  420ad5:	cmp    dh,bl
  420ad7:	jge    0x420a8f
  420ad9:	or     eax,0xffffffae
  420adc:	aaa    
  420add:	xor    al,0x8b
  420adf:	dec    ebx
  420ae0:	outs   dx,BYTE PTR ds:[esi]
  420ae1:	push   esi
  420ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae3:	xlat   BYTE PTR ds:[ebx]
  420ae4:	jp     0x420afb
  420ae6:	(bad)  
  420ae7:	(bad)  
  420ae8:	sbb    al,al
  420aea:	cmp    al,0x87
  420aec:	cld    
  420aed:	cmp    BYTE PTR [ebx+ebx*1-0x2e86ed2c],ah
  420af4:	pop    es
  420af5:	adc    cl,dh
  420af7:	lods   al,BYTE PTR ds:[esi]
  420af8:	fdiv   QWORD PTR [ebp+0x2d]
  420afb:	push   es
  420afc:	push   ebp
  420afd:	adc    ebp,DWORD PTR [ecx-0x34]
  420b00:	inc    esi
  420b01:	fwait
  420b02:	jmp    0x9766:0x475169cb
  420b09:	pop    edi
  420b0a:	mov    ds:0xae98d783,al
  420b0f:	mov    edx,0xb8c7123f
  420b14:	or     DWORD PTR [ebx+0xf],ebp
  420b17:	loop   0x420b50
  420b19:	arpl   WORD PTR [eax],dx
  420b1b:	ret    
  420b1c:	sub    BYTE PTR [edx-0x7ab2b20b],ah
  420b22:	push   ebx
  420b23:	push   esp
  420b24:	test   al,0xd1
  420b26:	pop    ebp
  420b27:	test   al,0xc4
  420b29:	and    DWORD PTR [ecx],edx
  420b2b:	sub    DWORD PTR [ebp-0x1d3c3762],esi
  420b31:	pop    edx
  420b32:	mov    cl,BYTE PTR [eax+0x47]
  420b35:	lock xchg edx,eax
  420b37:	mov    ds:0x3903e98d,eax
  420b3c:	dec    ecx
  420b3d:	jg     0x420b5a
  420b3f:	inc    ebx
  420b40:	cdq    
  420b41:	and    dh,BYTE PTR [eax-0x295ddd52]
  420b47:	or     cl,bl
  420b49:	(bad)  
  420b4a:	les    ebx,FWORD PTR [edx-0x57]
  420b4d:	add    DWORD PTR [edi+0x3a113523],ebx
  420b53:	out    0x11,eax
  420b55:	js     0x420b9c
  420b57:	push   0x929611b5
  420b5c:	sub    eax,0x69677371
  420b61:	repnz push 0x1fa9684
  420b67:	dec    esi
  420b68:	fisubr DWORD PTR [ebp-0x31]
  420b6b:	das    
  420b6c:	dec    ecx
  420b6d:	sbb    DWORD PTR [edx-0x678c2174],0x42
  420b74:	sub    esi,eax
  420b76:	sbb    DWORD PTR [ebp+0x49],ebp
  420b79:	mov    bl,0x78
  420b7b:	repnz out 0x48,al
  420b7e:	push   es
  420b7f:	push   es
  420b80:	retf   0x2615
  420b83:	sbb    eax,0x9f753805
  420b88:	shl    ebp,cl
  420b8a:	dec    esp
  420b8b:	push   ebx
  420b8c:	daa    
  420b8d:	push   ss
  420b8e:	into   
  420b8f:	add    esp,edi
  420b91:	push   edx
  420b92:	xor    eax,0x9d5fc23c
  420b97:	inc    esi
  420b98:	(bad)  
  420b99:	mov    bh,BYTE PTR [ebx-0x60]
  420b9c:	fst    QWORD PTR gs:[ebx-0x58]
  420ba0:	imul   ecx,DWORD PTR [esi],0xffffffe3
  420ba3:	out    dx,al
  420ba4:	cmp    eax,0xed69e0b2
  420ba9:	lods   eax,DWORD PTR ds:[esi]
  420baa:	mov    cl,0x74
  420bac:	mov    edx,0xe9177c80
  420bb1:	sbb    BYTE PTR [eax-0x54],bh
  420bb4:	sahf   
  420bb5:	fldcw  WORD PTR [esi]
  420bb7:	fist   DWORD PTR [edx-0x7e]
  420bba:	push   ecx
  420bbb:	shl    DWORD PTR [ebx+0x5a8e503c],0x7f
  420bc2:	xor    edi,esp
  420bc4:	repnz dec ebp
  420bc6:	mov    BYTE PTR [edi+eax*4-0x5c],ch
  420bca:	bnd jno 0x420bd7
  420bcd:	arpl   WORD PTR [eax],cx
  420bcf:	into   
  420bd0:	scas   eax,DWORD PTR es:[edi]
  420bd1:	or     ch,BYTE PTR [edi+eax*8-0x769660de]
  420bd8:	pop    ebp
  420bd9:	mov    eax,ds:0xc2f2650e
  420bde:	mov    cl,0x23
  420be0:	jecxz  0x420c43
  420be2:	dec    esi
  420be3:	pop    edi
  420be4:	arpl   WORD PTR [edx+ebp*1-0x78],di
  420be8:	outs   dx,BYTE PTR ds:[esi]
  420be9:	pop    esp
  420bea:	jno    0x420c47
  420bec:	cld    
  420bed:	aam    0x2e
  420bef:	in     al,0xf0
  420bf1:	pusha  
  420bf2:	inc    ebp
  420bf3:	sar    BYTE PTR [ebx+ebx*1],0xf9
  420bf7:	mov    bh,0xa
  420bf9:	push   ebp
  420bfa:	les    edi,FWORD PTR [edx-0x45]
  420bfd:	lock sbb ch,0x91
  420c01:	adc    eax,0x5bd4b931
  420c06:	stos   DWORD PTR es:[edi],eax
  420c07:	mov    edi,0x8bb57a5e
  420c0c:	fnstsw WORD PTR [eax]
  420c0e:	cmp    eax,0xf7a882b9
  420c13:	ds cld 
  420c15:	in     eax,dx
  420c16:	daa    
  420c17:	and    DWORD PTR [ebx-0x66],edx
  420c1a:	push   ebx
  420c1b:	xchg   DWORD PTR [eax-0x64636f61],ebp
  420c21:	jno    0x420c57
  420c23:	and    eax,esi
  420c25:	pushf  
  420c26:	ret    0x5618
  420c29:	mov    ds:0x1959f439,eax
  420c2e:	pop    ecx
  420c2f:	addr16 sub al,0xfb
  420c32:	and    BYTE PTR [esi+0x0],al
  420c35:	dec    edi
  420c36:	popf   
  420c37:	pop    ebx
  420c38:	xchg   DWORD PTR [edx+0x60be23e4],esp
  420c3e:	sbb    DWORD PTR [edx+ebp*4],edx
  420c41:	pop    ds
  420c42:	shl    BYTE PTR [ecx-0x6a605d8d],1
  420c48:	ret    
  420c49:	mov    eax,esi
  420c4b:	(bad)  
  420c4c:	(bad)  
  420c4d:	and    DWORD PTR [ecx],esi
  420c4f:	pop    ss
  420c50:	inc    edx
  420c51:	pushf  
  420c52:	push   ebx
  420c53:	lods   al,BYTE PTR ds:[esi]
  420c54:	inc    edx
  420c55:	int3   
  420c56:	in     eax,0xa1
  420c58:	nop
  420c59:	in     al,dx
  420c5a:	sbb    BYTE PTR [ebp-0x80],bl
  420c5d:	out    dx,eax
  420c5e:	out    dx,al
  420c5f:	or     al,BYTE PTR [eax+0x7abd7f89]
  420c65:	pop    esp
  420c66:	pop    ss
  420c67:	dec    bh
  420c69:	add    eax,0x33b7d0d2
  420c6e:	cmp    ah,0x20
  420c71:	(bad)  
  420c72:	push   edi
  420c73:	add    al,0x7a
  420c75:	cs push esp
  420c77:	sub    bh,BYTE PTR [ebp-0x31abd9bf]
  420c7d:	fwait
  420c7e:	or     BYTE PTR [esi],0x9a
  420c81:	pop    ecx
  420c82:	test   eax,0x6755a89e
  420c87:	sar    DWORD PTR [edi],1
  420c89:	aas    
  420c8a:	or     dl,BYTE PTR [ecx+0x4ef99ecc]
  420c90:	mov    eax,ds:0xb4b6fd57
  420c95:	xor    ch,BYTE PTR [edi-0x6e]
  420c98:	in     al,0xb
  420c9a:	in     al,0xfd
  420c9c:	popf   
  420c9d:	lea    esp,[edi]
  420c9f:	jmp    0xb69ce531
  420ca4:	add    BYTE PTR [ecx-0x2790e0e7],ch
  420caa:	push   es
  420cab:	mov    DWORD PTR [ecx-0x12],edi
  420cae:	mov    edx,0x10fe7d1f
  420cb3:	repz mov cs,WORD PTR [eax-0x4282fd55]
  420cba:	jecxz  0x420d05
  420cbc:	cdq    
  420cbd:	xchg   BYTE PTR [esi+0x5d],ah
  420cc0:	(bad)  
  420cc2:	mov    al,0xc8
  420cc4:	or     al,0xec
  420cc6:	scas   eax,DWORD PTR es:[edi]
  420cc7:	pop    esp
  420cc8:	repz pop eax
  420cca:	xchg   esi,eax
  420ccb:	jecxz  0x420d07
  420ccd:	into   
  420cce:	pop    es
  420ccf:	adc    eax,0x978e1a6a
  420cd4:	mov    esp,0xdef28d64
  420cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cda:	pushf  
  420cdb:	inc    esi
  420cdc:	sbb    BYTE PTR [edi],0xa4
  420cdf:	je     0x420d3e
  420ce1:	retf   0x6818
  420ce4:	or     BYTE PTR [esi],ch
  420ce6:	mov    WORD PTR es:[ebx+esi*2-0x635ad41b],fs
  420cee:	jbe    0x420d5e
  420cf0:	adc    DWORD PTR [eax+0x731d8f1],0x72482ba
  420cfa:	or     BYTE PTR [ebx-0x690a5e8a],bh
  420d00:	push   ebx
  420d01:	mov    ds:0x288d5369,eax
  420d06:	fsubr  QWORD PTR [ebx+0x76]
  420d09:	pop    ds
  420d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d0b:	(bad)  
  420d0d:	xchg   esp,eax
  420d0e:	add    al,0xbf
  420d11:	cmp    DWORD PTR [eax-0x4403dd2b],0xffffff8d
  420d18:	jle    0x420cf9
  420d1a:	retf   
  420d1b:	mov    al,ds:0xd9425214
  420d20:	mov    al,ds:0xbb944578
  420d25:	dec    eax
  420d26:	out    dx,eax
  420d27:	out    0x42,al
  420d29:	jb     0x420d26
  420d2b:	mov    ch,0x4e
  420d2d:	fbld   TBYTE PTR ds:0xc7adfba4
  420d33:	inc    ecx
  420d34:	push   es
  420d35:	sbb    al,0x7e
  420d37:	cmc    
  420d38:	and    DWORD PTR [ecx],ecx
  420d3a:	adc    ecx,DWORD PTR [edi+0x1c]
  420d3d:	sbb    eax,0x599c55e6
  420d42:	test   al,0x47
  420d44:	repnz rcl DWORD PTR [ebp+0x1037127],cl
  420d4b:	and    eax,0x917c1f6
  420d50:	lock js 0x420d14
  420d53:	aad    0xeb
  420d55:	pop    esi
  420d56:	jecxz  0x420cdc
  420d58:	in     eax,0x3e
  420d5a:	dec    ecx
  420d5b:	mov    edi,0xe38c20fa
  420d60:	scas   al,BYTE PTR es:[edi]
  420d61:	mov    esp,0x89e308b2
  420d66:	sbb    eax,0x935b4f36
  420d6b:	mov    ds:0xb304eca9,al
  420d70:	in     eax,dx
  420d71:	mov    dh,0xf3
  420d73:	xor    eax,0x3e8f1049
  420d78:	add    esp,DWORD PTR [esi+0x4e]
  420d7b:	imul   ecx,DWORD PTR ss:[edx+0x30],0xffffffd4
  420d80:	clc    
  420d81:	or     bl,ah
  420d83:	adc    BYTE PTR [edx+0x49],ch
  420d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d87:	out    0x2c,al
  420d89:	or     dh,dh
  420d8b:	bound  edx,QWORD PTR [esi-0x689e2d07]
  420d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d92:	ror    BYTE PTR [ebx+0x25],1
  420d95:	xlat   BYTE PTR ds:[ebx]
  420d96:	popf   
  420d97:	in     al,0xb1
  420d99:	ss inc esp
  420d9b:	add    al,0xfb
  420d9d:	lea    edi,[ecx-0x3f]
  420da0:	mov    esp,0x90775ae7
  420da5:	xlat   BYTE PTR ds:[ebx]
  420da6:	pop    es
  420da7:	inc    ebp
  420da8:	push   eax
  420da9:	stos   BYTE PTR es:[edi],al
  420daa:	call   0xd42e6918
  420daf:	ins    DWORD PTR es:[edi],dx
  420db0:	push   0xb386cd04
  420db5:	out    dx,al
  420db6:	imul   BYTE PTR [edx+0x5ba56ba6]
  420dbc:	inc    BYTE PTR [edx-0x7f]
  420dbf:	es and eax,0x14d05bf
  420dc5:	and    al,0x79
  420dc7:	xor    DWORD PTR [esi],esp
  420dc9:	ds dec ebx
  420dcb:	cmp    ch,BYTE PTR [ecx]
  420dcd:	loop   0x420d96
  420dcf:	cmc    
  420dd0:	mov    edx,0x51dbfb04
  420dd5:	popa   
  420dd6:	fs out dx,eax
  420dd8:	mov    cl,0xbc
  420dda:	xchg   bl,dh
  420ddc:	adc    eax,0xe79ea9b
  420de1:	mov    WORD PTR [edx],cs
  420de3:	jecxz  0x420e4d
  420de5:	hlt    
  420de6:	cmp    DWORD PTR [ecx],esi
  420de8:	ja     0x420d8c
  420dea:	dec    edi
  420deb:	sbb    bh,BYTE PTR [edx-0x3fd1533f]
  420df1:	and    BYTE PTR [ecx],al
  420df3:	daa    
  420df4:	add    BYTE PTR [ebx-0x1d],ch
  420df7:	mov    esi,DWORD PTR [esi+eiz*8-0x6a]
  420dfb:	out    0xb6,eax
  420dfd:	add    ch,BYTE PTR [esi+0x5e3c174a]
  420e03:	js     0x420e41
  420e05:	adc    DWORD PTR [edi-0x1e],edi
  420e08:	dec    esp
  420e09:	int    0x50
  420e0b:	nop
  420e0c:	fwait
  420e0d:	sbb    BYTE PTR ds:0xd9163309,al
  420e13:	jmp    0xff72bbc4
  420e18:	sbb    BYTE PTR [edx-0x705a1bf9],ch
  420e1e:	enter  0x486c,0x5a
  420e22:	mov    edx,0xd29e6f70
  420e27:	scas   al,BYTE PTR es:[edi]
  420e28:	add    eax,0x90147d20
  420e2d:	fist   WORD PTR [edx+0x26]
  420e30:	popf   
  420e31:	mov    DWORD PTR [ebp-0x48],esp
  420e34:	and    dh,BYTE PTR [esi-0x1b]
  420e37:	sahf   
  420e38:	nop
  420e39:	push   ecx
  420e3a:	dec    edi
  420e3b:	in     al,dx
  420e3c:	sub    al,0xc8
  420e3e:	push   eax
  420e3f:	push   edx
  420e40:	and    al,0xd0
  420e42:	mov    eax,0xc6fece28
  420e47:	pop    ebx
  420e48:	jmp    0xee9036d0
  420e4d:	scas   al,BYTE PTR es:[edi]
  420e4e:	in     al,0x69
  420e50:	adc    al,0x5a
  420e52:	out    0x2b,al
  420e54:	xchg   esi,eax
  420e55:	xchg   edx,eax
  420e56:	and    al,0x2e
  420e58:	in     eax,0xe0
  420e5a:	pop    es
  420e5b:	sbb    esp,esi
  420e5d:	call   0xcbbf0871
  420e62:	call   0x267d:0x8bf58f5a
  420e69:	repnz shl DWORD PTR ds:0xdbe3ac67,0x7b
  420e71:	mov    BYTE PTR [ebx],bh
  420e73:	outs   dx,BYTE PTR ds:[esi]
  420e74:	push   ecx
  420e75:	int3   
  420e76:	jo     0x420e22
  420e78:	fnstenv [ecx-0x59e8061d]
  420e7e:	test   cl,bh
  420e80:	ins    BYTE PTR es:[edi],dx
  420e81:	js     0x420e82
  420e83:	mov    bl,0x9e
  420e85:	gs aad 0x9e
  420e88:	mov    bl,0x3e
  420e8a:	shl    DWORD PTR [ebp+0x48b9fe6c],1
  420e90:	sbb    dl,dh
  420e92:	mov    cl,0x72
  420e94:	(bad)  
  420e96:	into   
  420e97:	fidiv  WORD PTR [ebx-0x3e]
  420e9a:	ins    DWORD PTR es:[edi],dx
  420e9b:	xchg   esp,eax
  420e9c:	paddusb mm7,QWORD PTR [edi+eax*1]
  420ea0:	sub    DWORD PTR [eax+0x66d7fa14],edi
  420ea6:	jo     0x420e4a
  420ea8:	(bad)  
  420ea9:	rcr    BYTE PTR [ecx],1
  420eab:	xchg   esi,eax
  420eac:	sub    ah,BYTE PTR [ebx]
  420eae:	cmp    al,0x89
  420eb0:	add    DWORD PTR ds:0xc5ae863b,esp
  420eb6:	ror    BYTE PTR [eax+0x6bf9e386],cl
  420ebc:	pushf  
  420ebd:	stc    
  420ebe:	mov    ch,0x6a
  420ec0:	iret   
  420ec1:	pop    sp
  420ec3:	adc    bh,al
  420ec5:	retf   0x506d
  420ec8:	cmp    DWORD PTR ds:0x4babb946,edi
  420ece:	outs   dx,DWORD PTR ds:[esi]
  420ecf:	rcl    BYTE PTR [edx-0x426c6e9a],cl
  420ed5:	(bad)  
  420ed6:	aaa    
  420ed7:	cs fwait
  420ed9:	inc    edi
  420eda:	fistp  QWORD PTR [ebp+0x5e]
  420edd:	xchg   esp,eax
  420ede:	jmp    0x71557634
  420ee3:	jge    0x420f2d
  420ee5:	addr16 mov dh,bh
  420ee8:	pop    ebx
  420ee9:	jnp    0x420f22
  420eeb:	aaa    
  420eec:	pop    esi
  420eed:	test   al,0x65
  420eef:	push   eax
  420ef0:	xor    BYTE PTR ds:0x36dc382f,0x5e
  420ef7:	mov    cl,0x88
  420ef9:	in     al,0xb9
  420efb:	sbb    al,0x72
  420efd:	les    esp,FWORD PTR [eax]
  420eff:	dec    edi
  420f00:	sbb    dh,bh
  420f02:	arpl   WORD PTR [ecx+0x6d],bx
  420f05:	add    eax,0xc8dc186e
  420f0a:	iret   
  420f0b:	jns    0x420f65
  420f0d:	mov    edi,ebx
  420f0f:	mov    dl,0xa6
  420f11:	cld    
  420f12:	dec    edi
  420f13:	adc    eax,0x31c3a3d
  420f18:	nop
  420f19:	sub    BYTE PTR [edi-0x2a],dh
  420f1c:	and    ch,BYTE PTR [edi+0x15579e70]
  420f22:	(bad)  
  420f23:	nop
  420f24:	lds    ecx,FWORD PTR [ecx-0x1f]
  420f27:	popa   
  420f28:	out    0xdb,eax
  420f2a:	out    dx,eax
  420f2b:	inc    eax
  420f2c:	aas    
  420f2d:	inc    eax
  420f2e:	das    
  420f2f:	mov    ecx,0xfd939422
  420f34:	clc    
  420f35:	push   eax
  420f36:	jmp    0x420edd
  420f38:	fdivr  st(6),st
  420f3a:	pop    ecx
  420f3b:	outs   dx,DWORD PTR ds:[esi]
  420f3c:	aas    
  420f3d:	jns    0x420f23
  420f3f:	push   0x9a833ff7
  420f44:	leave  
  420f45:	push   0x3384a57f
  420f4a:	iret   
  420f4b:	push   esi
  420f4c:	fcomp  QWORD PTR [ecx]
  420f4e:	adc    al,0x3f
  420f50:	sti    
  420f51:	pop    ss
  420f52:	pushf  
  420f53:	mov    ah,0xed
  420f55:	xchg   esi,eax
  420f56:	cdq    
  420f57:	mov    dh,0x9f
  420f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5a:	pop    eax
  420f5b:	xor    BYTE PTR [edi+0x5337dd1],dh
  420f61:	repz and esi,edx
  420f64:	jle    0x420f17
  420f66:	cmp    al,0xcd
  420f68:	inc    eax
  420f69:	push   ebx
  420f6a:	push   edx
  420f6b:	inc    ebp
  420f6c:	pop    esp
  420f6d:	jno    0x420f7f
  420f6f:	ja     0x420fea
  420f71:	mov    al,0x46
  420f73:	and    edi,esi
  420f75:	adc    esi,DWORD PTR [ecx]
  420f77:	jp     0x420f0f
  420f79:	arpl   WORD PTR [esi],ax
  420f7b:	mov    ?,WORD PTR ds:0xa6980134
  420f81:	ins    BYTE PTR es:[edi],dx
  420f82:	ds (bad) 
  420f84:	out    0x25,al
  420f86:	or     BYTE PTR [ebx+0x263ec506],cl
  420f8c:	leave  
  420f8d:	jmp    0xe0f001dd
  420f92:	in     al,dx
  420f93:	es out 0xea,al
  420f96:	adc    esp,DWORD PTR [ebp+0x3e]
  420f99:	js     0x421011
  420f9b:	out    dx,eax
  420f9c:	pop    ecx
  420f9d:	(bad)  
  420f9f:	jecxz  0x420f72
  420fa1:	xchg   edx,eax
  420fa2:	int3   
  420fa3:	shr    dl,cl
  420fa5:	sbb    ecx,DWORD PTR [eax+0x133cc199]
  420fab:	std    
  420fac:	push   ss
  420fad:	jecxz  0x420f5c
  420faf:	lahf   
  420fb0:	inc    ebp
  420fb1:	mov    al,0x75
  420fb3:	mov    ds:0xc4e41696,eax
  420fb8:	shl    BYTE PTR [eax-0xd0e098b],1
  420fbe:	pop    edx
  420fbf:	jmp    FWORD PTR [edx+0x43]
  420fc2:	and    ebp,esi
  420fc4:	out    dx,eax
  420fc5:	call   0x2bf1837e
  420fca:	or     eax,0x94a6b824
  420fcf:	mov    ebx,0xb69d8b39
  420fd4:	sbb    ebx,edx
  420fd6:	xchg   DWORD PTR [edx+ebx*8],edi
  420fd9:	jbe    0x82810e49
  420fdf:	rol    DWORD PTR [edi+0x2cf02cc4],0xb3
  420fe6:	sahf   
  420fe7:	nop
  420fe8:	add    eax,DWORD PTR [edx-0x3bfa9cc2]
  420fee:	xor    DWORD PTR [edx+0x3ea285e0],ebp
  420ff4:	sbb    bl,BYTE PTR [ecx]
  420ff6:	test   al,0x76
  420ff8:	cli    
  420ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ffa:	test   BYTE PTR [edx],0x2
  420ffd:	add    eax,0x9009c520
  421002:	pop    esp
  421003:	mov    eax,ds:0x7f8fee20
  421008:	(bad)  
  421009:	(bad)
  42100c:	jl     0x42105a
  42100e:	in     al,0x12
  421010:	mov    al,0xba
  421012:	sar    BYTE PTR [ebx],1
  421014:	and    eax,ebx
  421016:	pusha  
  421017:	js     0x421003
  421019:	sbb    esp,esi
  42101b:	or     DWORD PTR [edi+eiz*4],esp
  42101e:	jl     0x420fab
  421020:	inc    ecx
  421021:	cmp    al,0xba
  421023:	icebp  
  421024:	pop    ecx
  421025:	cwde   
  421026:	pop    ax
  421028:	and    BYTE PTR [ebp+0x42],dl
  42102b:	mov    BYTE PTR [ecx+0x7],dh
  42102e:	push   ds
  42102f:	adc    esi,ebx
  421031:	outs   dx,BYTE PTR ds:[esi]
  421032:	cmp    DWORD PTR [edx+0x68248a70],0x57
  421039:	mov    al,0xa2
  42103b:	das    
  42103c:	jmp    0x421086
  42103e:	out    0xd9,al
  421040:	pop    eax
  421041:	pop    ds
  421042:	clc    
  421043:	xchg   edi,eax
  421044:	dec    esp
  421045:	pop    edi
  421046:	arpl   WORD PTR [ecx-0x80],di
  421049:	adc    ah,BYTE PTR [ecx+0xed2bed7]
  42104f:	ret    0x1ac3
  421052:	imul   esi,esp,0x1b
  421055:	sbb    al,0x86
  421057:	inc    eax
  421058:	ins    DWORD PTR es:[edi],dx
  421059:	adc    DWORD PTR [ebx+0x7d56bfeb],ebp
  42105f:	js     0x421043
  421061:	mov    ch,0xeb
  421063:	in     al,0xeb
  421065:	jb     0x42106e
  421067:	push   ebx
  421068:	cmp    esp,DWORD PTR [esi]
  42106a:	cdq    
  42106b:	mov    bl,0x32
  42106d:	(bad)
  421070:	test   eax,0xa08194b1
  421075:	clc    
  421076:	push   es
  421077:	inc    edx
  421078:	sahf   
  421079:	jne    0x42106e
  42107b:	jbe    0x42101c
  42107d:	cdq    
  42107e:	push   es
  42107f:	jne    0x42106a
  421081:	dec    edi
  421082:	sbb    al,0x3e
  421084:	ds mov ah,0x36
  421087:	shr    DWORD PTR [edx+0x1f],cl
  42108a:	jl     0x421064
  42108c:	mov    ds:0x696b4126,al
  421091:	add    eax,0x4f3b0e00
  421096:	mov    ah,0xb0
  421098:	cmp    dl,BYTE PTR [edi-0x19a69842]
  42109e:	add    BYTE PTR [ebx-0x1a],ch
  4210a1:	mov    ebx,0x8f4b952c
  4210a6:	pusha  
  4210a7:	and    BYTE PTR [edx-0x2b],dh
  4210aa:	fnstsw WORD PTR [eax-0x2a]
  4210ad:	repnz or BYTE PTR [edi+0x13],0x66
  4210b2:	xor    DWORD PTR [ebp-0xf394fe8],edx
  4210b8:	sbb    BYTE PTR [edx],0x46
  4210bb:	adc    al,0x6f
  4210bd:	cdq    
  4210be:	cmp    al,cl
  4210c0:	scas   al,BYTE PTR es:[edi]
  4210c1:	dec    ebp
  4210c2:	shl    BYTE PTR [ebp+0x3dbe25a5],cl
  4210c8:	push   eax
  4210c9:	sbb    dl,BYTE PTR [eax-0xce1e63d]
  4210cf:	mov    DWORD PTR [edi],0xc843297e
  4210d5:	xchg   ecx,eax
  4210d6:	mov    eax,ds:0x8016943
  4210db:	mov    ah,0x37
  4210dd:	jmp    0x69d7:0xfba18cbb
  4210e4:	mov    esp,0x14f6baa0
  4210e9:	idiv   BYTE PTR [eax+ebx*1-0x16]
  4210ed:	xchg   ebx,eax
  4210ee:	and    eax,0x5368e8d9
  4210f3:	out    0x55,eax
  4210f5:	mov    ?,edx
  4210f7:	test   al,0xc1
  4210f9:	fisttp WORD PTR [ebx+0x64c08e73]
  4210ff:	cmova  ecx,DWORD PTR [esi+0x1d82cd81]
  421106:	xchg   esi,eax
  421107:	dec    esi
  421108:	sbb    eax,0x7a631ee1
  42110d:	mov    edx,0x9fd52463
  421112:	xor    BYTE PTR [edi],0x30
  421115:	mov    dl,0x3c
  421117:	fwait
  421118:	retf   0x355f
  42111b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111c:	mov    WORD PTR [edi],fs
  42111e:	into   
  42111f:	cmp    DWORD PTR [ebp+0x13],ebp
  421122:	mov    bh,0x26
  421124:	mov    dh,0xfe
  421126:	or     BYTE PTR [esi+0x3d],0x54
  42112a:	adc    cl,BYTE PTR [edi+0x2bfe331e]
  421130:	jp     0x421141
  421132:	add    BYTE PTR ds:0x90290531,dl
  421138:	pop    ebp
  421139:	and    al,0x39
  42113b:	stos   BYTE PTR es:[edi],al
  42113c:	adc    edx,DWORD PTR [ebx]
  42113e:	jno    0x421196
  421140:	cmp    eax,0xae16e68d
  421145:	into   
  421146:	inc    ebp
  421147:	or     dh,BYTE PTR [esp]
  42114a:	mov    bh,0xed
  42114c:	scas   eax,DWORD PTR es:[edi]
  42114d:	or     al,0x83
  42114f:	or     esi,DWORD PTR [esi]
  421151:	mov    cl,0xa5
  421153:	test   al,0x16
  421155:	inc    ecx
  421156:	push   eax
  421157:	aaa    
  421158:	and    al,0x7
  42115a:	xchg   ebx,eax
  42115b:	pop    esi
  42115c:	mov    edi,0xb2296e4b
  421161:	enter  0x1bc,0xd6
  421165:	ret    0xe3cb
  421168:	mov    edi,0x9ee74e3f
  42116d:	sbb    ebp,ebx
  42116f:	mov    esp,0x47648b44
  421174:	xor    BYTE PTR [ebp+0x24b3462e],0x90
  42117b:	push   0x61314fc2
  421180:	and    esi,DWORD PTR [ebp-0x70b2a2e0]
  421186:	jnp    0x421191
  421188:	or     DWORD PTR [edi],eax
  42118a:	inc    ebp
  42118b:	mov    esp,DWORD PTR [edi+edx*8+0x5c6eab95]
  421192:	jg     0x4211fa
  421194:	mov    ebp,0x9a6c8f46
  421199:	test   al,0x17
  42119b:	push   cs
  42119c:	repnz pop ebp
  42119e:	push   ecx
  42119f:	xchg   edi,eax
  4211a0:	mov    BYTE PTR [eax],dl
  4211a2:	bound  ebp,QWORD PTR [ebp+0x330965f1]
  4211a8:	out    0xdb,al
  4211aa:	pop    ds
  4211ab:	fstp   DWORD PTR [esi+eax*2]
  4211ae:	sbb    esp,DWORD PTR [edx]
  4211b0:	pop    esp
  4211b1:	std    
  4211b2:	xchg   esi,eax
  4211b3:	rcl    bh,1
  4211b5:	setno  BYTE PTR [eax]
  4211b8:	mov    ds:0x4b75065c,al
  4211bd:	inc    edx
  4211be:	jmp    0x17d:0x938cfbf9
  4211c5:	and    eax,0xe256dfd6
  4211ca:	fdivr  st,st(4)
  4211cc:	arpl   WORD PTR [eax],di
  4211ce:	adc    DWORD PTR [ecx+0x47],0xffffffe4
  4211d2:	xlat   BYTE PTR ds:[ebx]
  4211d3:	pop    esp
  4211d4:	les    edx,FWORD PTR [edx+eax*8+0x607c7d17]
  4211db:	mov    ecx,0x930b769d
  4211e0:	pop    ecx
  4211e1:	xor    DWORD PTR [edx+0x5c],edx
  4211e4:	dec    ebp
  4211e5:	outs   dx,BYTE PTR cs:[esi]
  4211e7:	mov    dh,0x58
  4211e9:	shl    DWORD PTR ss:[edi*8-0x6a22cc5],0x64
  4211f2:	neg    DWORD PTR [edx-0x6]
  4211f5:	lods   al,BYTE PTR ds:[esi]
  4211f6:	sbb    eax,0x82b8d2e5
  4211fb:	loope  0x421220
  4211fd:	and    al,0x50
  4211ff:	mov    ebp,0xe992f7ba
  421204:	shl    DWORD PTR [edi],1
  421206:	pop    esp
  421207:	xor    BYTE PTR [esi+0x3f],ah
  42120a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42120b:	sbb    ebp,eax
  42120d:	outs   dx,DWORD PTR ds:[esi]
  42120e:	and    ah,bl
  421210:	into   
  421211:	mov    esi,0xc1d33e06
  421216:	fwait
  421217:	sub    DWORD PTR [eax],esi
  421219:	mov    ecx,0x56dddbd2
  42121e:	scas   eax,DWORD PTR es:[edi]
  42121f:	push   ebx
  421220:	inc    ebp
  421221:	push   cs
  421222:	enter  0x5db3,0xb9
  421226:	aam    0x4
  421228:	int    0x5d
  42122a:	jns    0x4211b9
  42122c:	aas    
  42122d:	aas    
  42122e:	shl    BYTE PTR [esp+0x1e],cl
  421232:	inc    ecx
  421233:	mov    esi,0x9a7e6191
  421238:	(bad)  
  421239:	es test eax,0x7a59ce6f
  42123f:	cmp    al,0xec
  421241:	sbb    DWORD PTR [edi-0x476a5af6],0x10b6d3cb
  42124b:	sub    eax,0x80ec9e1f
  421250:	inc    edi
  421251:	inc    edi
  421252:	add    BYTE PTR [esi],bl
  421254:	inc    ebx
  421255:	sub    al,0x89
  421257:	out    dx,eax
  421258:	js     0x4212d3
  42125a:	mov    WORD PTR [esi+0xd],ss
  42125d:	ss add al,0x3a
  421260:	loope  0x421207
  421262:	mov    eax,0x39221dc2
  421267:	jnp    0x421265
  421269:	mov    WORD PTR [ebx],?
  42126b:	push   esi
  42126c:	call   0x2564:0xe7cf2c0c
  421273:	pop    es
  421274:	test   BYTE PTR [ebx+eax*1],bh
  421277:	pop    eax
  421278:	and    BYTE PTR [eax+edi*4-0x1c1c4d56],dl
  42127f:	(bad)
  421282:	mov    ds:0x8b9e9cb3,al
  421287:	or     al,0x7
  421289:	jl     0x42122e
  42128b:	popf   
  42128c:	nop
  42128d:	ficomp WORD PTR [ecx-0x2f245d21]
  421293:	clc    
  421294:	pop    esp
  421295:	cmp    BYTE PTR [edi+edi*2+0x4a084c23],dl
  42129c:	xor    BYTE PTR [ebx+0x5accfea1],bh
  4212a2:	pop    edx
  4212a3:	iret   
  4212a4:	adc    dh,BYTE PTR [ebp-0x608942d8]
  4212aa:	xlat   BYTE PTR ds:[ebx]
  4212ab:	fdiv   st(3),st
  4212ad:	je     0x4212af
  4212af:	pmaxub mm6,QWORD PTR [eax+0x2cd5e99f]
  4212b6:	rol    bh,0x23
  4212b9:	mov    ch,0x2b
  4212bb:	out    dx,al
  4212bc:	(bad)  
  4212bd:	shr    BYTE PTR fs:[edx],cl
  4212c0:	ficomp WORD PTR [ebx-0x19f76cf2]
  4212c6:	jns    0x4212ed
  4212c8:	add    BYTE PTR [eax+0x1],dl
  4212cb:	mov    ds:0x304919,al
  4212d0:	(bad)  
  4212d1:	sbb    ah,BYTE PTR [ebx+0x850facb]
  4212d7:	lock mov esp,0xe3d709f1
  4212dd:	mov    ds:0xfdc92da9,al
  4212e2:	popf   
  4212e3:	das    
  4212e4:	in     al,dx
  4212e5:	sub    eax,0x530f419
  4212ea:	mov    edi,0x4deeeb14
  4212ef:	dec    ebp
  4212f0:	dec    ecx
  4212f1:	sbb    al,ch
  4212f3:	jg     0x421292
  4212f5:	inc    edx
  4212f6:	and    ebp,DWORD PTR [edx+ebx*1+0xb5916b3]
  4212fd:	lods   al,BYTE PTR ds:[esi]
  4212fe:	outs   dx,DWORD PTR ds:[esi]
  4212ff:	and    dl,BYTE PTR [ebx+0x58]
  421302:	retf   0xf53b
  421305:	mov    eax,ds:0x20fdf9ad
  42130a:	jl     0x4212b3
  42130c:	xor    eax,DWORD PTR [ecx-0x54be391]
  421312:	je     0x42133b
  421314:	mov    ah,0xde
  421316:	jb     0x421323
  421318:	push   esi
  421319:	sbb    esi,DWORD PTR [eax]
  42131b:	dec    esp
  42131c:	cmp    BYTE PTR [eax],ch
  42131e:	mov    bh,0x7a
  421320:	aas    
  421321:	mov    ebp,ds
  421323:	push   ds
  421324:	imul   ebp,DWORD PTR [eax+eax*2-0x7d],0x786b1d13
  42132c:	pusha  
  42132d:	stos   DWORD PTR es:[edi],eax
  42132e:	inc    BYTE PTR [esi]
  421330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421331:	(bad)  
  421333:	xchg   esi,eax
  421334:	jmp    0x421339
  421336:	and    al,0xdf
  421338:	ja     0x421361
  42133a:	inc    edi
  42133b:	and    bh,BYTE PTR [edi-0x739abf8c]
  421341:	jecxz  0x42139f
  421343:	mov    al,ds:0x46524184
  421348:	mov    BYTE PTR [ecx-0x19],dh
  42134b:	sub    ch,bh
  42134d:	jge    0x421352
  42134f:	sub    ebp,eax
  421351:	pop    ecx
  421352:	test   DWORD PTR [ebx+0x30],esi
  421355:	mov    ds:0xb3f58222,al
  42135a:	mov    BYTE PTR [edx],bl
  42135c:	shl    DWORD PTR [ebx+0x6b113dfc],0x5a
  421363:	(bad)  [edi]
  421365:	or     DWORD PTR [edx],ebp
  421367:	sub    al,0xc9
  421369:	push   es
  42136a:	jne    0x421340
  42136c:	shl    BYTE PTR [edx-0x297e8964],0x9
  421373:	dec    esi
  421374:	add    al,0x11
  421376:	test   al,0xf
  421378:	sub    esi,esi
  42137a:	add    al,0x5
  42137c:	adc    dl,BYTE PTR [edi+esi*8-0x56]
  421380:	pop    ecx
  421381:	fisub  WORD PTR [ecx]
  421383:	add    BYTE PTR [esi],bh
  421385:	jecxz  0x42131d
  421387:	div    DWORD PTR [eax]
  421389:	pop    edx
  42138a:	cs imul esi,esp,0x5e
  42138e:	sbb    eax,0x114c7407
  421393:	mov    edi,0x5c6e4ae1
  421398:	loopne 0x421351
  42139a:	(bad)  
  42139b:	icebp  
  42139c:	in     al,dx
  42139d:	sub    al,0x1f
  42139f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213a0:	aaa    
  4213a1:	loop   0x421362
  4213a3:	stc    
  4213a4:	addr16 adc al,0x17
  4213a7:	nop
  4213a8:	cli    
  4213a9:	cs lahf 
  4213ab:	and    BYTE PTR [eax+0x44],cl
  4213ae:	pop    ebp
  4213af:	jmp    0x421334
  4213b1:	lahf   
  4213b2:	mov    eax,ds:0x123bac0b
  4213b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b8:	aas    
  4213b9:	inc    edi
  4213ba:	pop    esp
  4213bb:	shl    BYTE PTR [edx+0x35802547],0x6c
  4213c2:	push   ebp
  4213c3:	sbb    BYTE PTR [edx+0x52],cl
  4213c6:	sub    eax,0xb6f1afca
  4213cb:	push   edi
  4213cc:	or     cl,BYTE PTR [edx]
  4213ce:	test   al,0x5a
  4213d0:	jecxz  0x421440
  4213d2:	adc    al,0xbc
  4213d4:	jl     0x42141b
  4213d6:	add    eax,0x1af80f3d
  4213db:	mov    WORD PTR [edx-0x3],fs
  4213de:	icebp  
  4213df:	dec    edi
  4213e0:	push   ebx
  4213e1:	bound  ecx,QWORD PTR [esi+0x5a631e8b]
  4213e7:	jecxz  0x4213a1
  4213e9:	mov    dl,bh
  4213eb:	push   esi
  4213ec:	sbb    eax,0x70172028
  4213f1:	push   esp
  4213f2:	fist   DWORD PTR [ebp-0x31]
  4213f5:	cmp    eax,0xa1725f3d
  4213fa:	or     eax,0x13a18582
  4213ff:	dec    BYTE PTR [ebp-0x37]
  421402:	js     0x4213b9
  421404:	jp     0x421484
  421406:	sbb    cl,BYTE PTR [ecx]
  421408:	mov    ah,BYTE PTR [ecx]
  42140a:	add    eax,0x433fef99
  42140f:	fsubp  st(0),st
  421411:	test   eax,ecx
  421413:	aaa    
  421414:	dec    ebx
  421415:	fist   WORD PTR [eax]
  421417:	mov    edi,0xa008b774
  42141c:	sub    ah,al
  42141e:	int    0xa7
  421420:	xor    edx,ecx
  421422:	sahf   
  421423:	ins    BYTE PTR es:[edi],dx
  421424:	inc    ecx
  421425:	inc    esp
  421426:	arpl   WORD PTR [ebp+0x70b4459],di
  42142c:	scas   al,BYTE PTR es:[edi]
  42142d:	or     ebx,DWORD PTR [esi+0x30eb9206]
  421433:	das    
  421434:	popf   
  421435:	xchg   esp,eax
  421436:	(bad)  
  421437:	rol    edi,cl
  421439:	sub    BYTE PTR [edi+ebx*1],al
  42143c:	fnstcw WORD PTR [ebx-0x4623368d]
  421442:	or     eax,0x3c3c1cb6
  421447:	aad    0xad
  421449:	inc    esi
  42144a:	push   0x41
  42144c:	sbb    esp,DWORD PTR [edx-0x3c]
  42144f:	loope  0x421486
  421451:	jbe    0x421442
  421453:	pop    ecx
  421454:	aam    0x27
  421456:	addr16 jae 0x421407
  421459:	sbb    DWORD PTR [eax-0x52],edx
  42145c:	xor    dh,cl
  42145e:	lahf   
  42145f:	ss mov gs,ebp
  421462:	stos   BYTE PTR es:[edi],al
  421463:	(bad)  
  421464:	push   cs
  421465:	xor    ebp,DWORD PTR [ebx-0x37]
  421468:	mov    ch,0x2a
  42146a:	mov    bl,0xa5
  42146c:	or     edi,DWORD PTR [edi-0x6edb3d2d]
  421472:	out    0x5c,al
  421474:	inc    ecx
  421475:	fxch   st(1)
  421477:	repnz adc BYTE PTR [esi-0x76],dl
  42147b:	inc    ebx
  42147d:	mov    ebp,edi
  42147f:	mov    cl,0x8e
  421481:	mov    dl,0xc6
  421483:	jb     0x4214f9
  421485:	jae    0x421442
  421487:	iret   
  421488:	pop    eax
  421489:	xchg   ecx,eax
  42148a:	in     al,0x46
  42148c:	ret    
  42148d:	mov    dl,0x61
  42148f:	mov    ds:0xc7dc3178,eax
  421494:	xor    al,0xa7
  421496:	scas   al,BYTE PTR es:[edi]
  421497:	fstp   DWORD PTR [ecx-0x38]
  42149a:	sbb    ebx,DWORD PTR [edi]
  42149c:	sahf   
  42149d:	jmp    ebx
  42149f:	jl     0x421509
  4214a1:	jge    0x42150d
  4214a3:	ss inc edi
  4214a5:	pop    edx
  4214a6:	hlt    
  4214a7:	test   ebp,ebx
  4214a9:	push   eax
  4214aa:	xor    bh,BYTE PTR [ecx-0x66e6c2e0]
  4214b0:	push   ebx
  4214b1:	mov    DWORD PTR [ecx+ebx*4+0x40d79dfe],edi
  4214b8:	lock pop edi
  4214ba:	cs mov edi,0x8c40ebcd
  4214c0:	mov    eax,es:0x83cada89
  4214c6:	dec    ecx
  4214c7:	idiv   DWORD PTR [ebx+esi*1]
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x875184a
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x75014a9f
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	inc    eax
  4217ea:	popf   
  4217eb:	jmp    0x421783
  4217ed:	int    0x2d
  4217ef:	aas    
  4217f0:	mov    ecx,0x8ff5bd0d
  4217f5:	jp     0x421869
  4217f7:	(bad)  
  4217f8:	jnp    0x421828
  4217fa:	into   
  4217fb:	sub    eax,0xbd09b93f
  421800:	cmc    
  421801:	iret   
  421802:	test   DWORD PTR [ebp-0x31698439],ecx
  421808:	sub    eax,0xbd09b93f
  42180d:	cmc    
  42180e:	pop    DWORD PTR [ebp-0x69843873]
  421814:	into   
  421815:	sub    eax,0xbd09b93f
  42181a:	cmc    
  42181b:	pop    DWORD PTR [ebp-0x69843873]
  421821:	into   
  421822:	sub    eax,0xbdf1b93f
  421827:	cmc    
  421828:	(bad)  
  421829:	mov    edx,DWORD PTR [edx+0x7a96757d]
  42182f:	and    al,0xf2
  421831:	cwde   
  421832:	mov    cl,0xbc
  421834:	mov    ecx,0xafd9a442
  421839:	adc    ah,ch
  42183b:	out    dx,al
  42183c:	pop    ebp
  42183d:	dec    ebp
  42183e:	(bad)  
  42183f:	outs   dx,BYTE PTR ds:[esi]
  421840:	iret   
  421841:	xchg   esp,eax
  421842:	loop   0x4217e9
  421844:	out    dx,al
  421845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421846:	adc    eax,0x1f59a1f8
  42184b:	fld    TBYTE PTR [ebp+ebx*4-0x79]
  42184f:	cli    
  421850:	jmp    0x4217ff
  421852:	scas   al,BYTE PTR es:[edi]
  421853:	adc    eax,0x6c628ab6
  421858:	cdq    
  421859:	rcl    BYTE PTR fs:[ecx-0x357f5416],cl
  421860:	jno    0x421814
  421862:	into   
  421863:	sub    eax,0xbd09b93f
  421868:	cmc    
  421869:	mov    BYTE PTR [ecx+esi*2],bl
  42186c:	sahf   
  42186d:	cmp    BYTE PTR [esi+0x5c],ch
  421870:	daa    
  421871:	jl     0x4218b4
  421873:	fwait
  421874:	mov    bh,0xb6
  421876:	ja     0x42188f
  421878:	xchg   DWORD PTR [edi+0x72c49a1e],ebx
  42187e:	(bad)  
  42187f:	sub    eax,DWORD PTR [ebx]
  421881:	in     eax,0x90
  421883:	mov    bh,0x8f
  421885:	dec    edi
  421886:	aas    
  421887:	jmp    0x68aaf28
  42188c:	mov    bl,0x61
  42188e:	inc    ebp
  42188f:	test   DWORD PTR [bx+di-0x1fd],ebp
  421894:	jno    0x421866
  421896:	ss mov edi,0xac89f335
  42189c:	inc    ebp
  42189e:	jge    0x4218bf
  4218a0:	int    0x31
  4218a2:	push   ss
  4218a3:	iret   
  4218a4:	daa    
  4218a5:	addr16 inc ecx
  4218a7:	fwait
  4218a8:	mov    bh,0xb6
  4218aa:	ja     0x4218c2
  4218ac:	xchg   edi,ebp
  4218ae:	add    BYTE PTR [esp+eax*8],0x92
  4218b2:	out    0x39,eax
  4218b4:	add    esi,eax
  4218b6:	or     eax,0xa2d58f1d
  4218bb:	inc    esi
  4218bc:	pushf  
  4218bd:	(bad)  
  4218be:	aad    0xad
  4218c0:	mov    bl,0x51
  4218c2:	fdivr  st,st(5)
  4218c4:	test   edi,eax
  4218c6:	jne    0x42191d
  4218c8:	jno    0x421898
  4218ca:	stos   DWORD PTR es:[edi],eax
  4218cb:	and    dh,BYTE PTR ds:0xff2ff1fb
  4218d1:	fucomp st(4)
  4218d3:	out    dx,al
  4218d4:	scas   eax,DWORD PTR es:[edi]
  4218d5:	cmp    BYTE PTR [esi+0x5c],ch
  4218d8:	daa    
  4218d9:	aas    
  4218da:	mov    ecx,0x8ff5bd09
  4218df:	test   DWORD PTR [ebp-0x3169c169],ecx
  4218e5:	popa   
  4218e6:	ds mov ebx,0xe4251d09
  4218ec:	retf   0xc78d
  4218ef:	jnp    0x421887
  4218f1:	into   
  4218f2:	sub    eax,0xbde9b93f
  4218f7:	test   BYTE PTR [esi+0x7bcd8c8e],0x96
  4218fe:	and    BYTE PTR [ecx],ch
  421900:	aas    
  421901:	mov    ecx,0x8ff5bbb5
  421906:	test   DWORD PTR [ebp-0x31d49539],ecx
  42190c:	sub    eax,0xbd09a93f
  421911:	cmc    
  421912:	pop    DWORD PTR [eax-0x28843873]
  421918:	into   
  421919:	sub    eax,0xbd09b92f
  42191e:	test   DWORD PTR [edi+0x7ac78885],0x3f2dce96
  421928:	mov    ecx,0x8ff4bd0c
  42192d:	test   DWORD PTR [ebp-0x61698439],ecx
  421933:	and    DWORD PTR [edi],edi
  421935:	mov    ecx,0x8ef5bd0d
  42193a:	popa   
  42193b:	mov    bh,al
  42193d:	jns    0x4218d5
  42193f:	into   
  421940:	lods   eax,DWORD PTR ds:[esi]
  421941:	aas    
  421942:	mov    ecx,0x9ff5bd19
  421947:	test   DWORD PTR [ebp-0x31798439],ecx
  42194d:	sub    eax,0xbd09b92f
  421952:	cmc    
  421953:	pop    DWORD PTR [ebp-0x69843863]
  421959:	into   
  42195a:	sub    eax,0xbd09b93f
  42195f:	cmc    
  421960:	(bad)  
  421961:	jno    0x421917
  421963:	retf   
  421964:	jnp    0x421965
  421966:	int    0x2d
  421968:	aas    
  421969:	mov    ecx,0xc0f5b6f9
  42196e:	int3   
  42196f:	(bad)  
  421970:	(bad)  
  421971:	jnp    0x421909
  421973:	into   
  421974:	sub    eax,0xbd09b93f
  421979:	cmc    
  42197a:	pop    DWORD PTR [ebp-0x69843873]
  421980:	into   
  421981:	sub    eax,0xbd09b93f
  421986:	cmc    
  421987:	pop    DWORD PTR [ebp-0x69843873]
  42198d:	into   
  42198e:	sub    eax,0xbd09b93f
  421993:	cmc    
  421994:	pop    DWORD PTR [ebp-0x69843873]
  42199a:	into   
  42199b:	sub    eax,0xbd09b93f
  4219a0:	cmc    
  4219a1:	pop    DWORD PTR [ebp-0x69843873]
  4219a7:	into   
  4219a8:	sub    eax,0xbd09b93f
  4219ad:	cmc    
  4219ae:	pop    DWORD PTR [ebp-0x69843873]
  4219b4:	into   
  4219b5:	sub    eax,0xbd09b93f
  4219ba:	cmc    
  4219bb:	pop    DWORD PTR [ebp-0x69843873]
  4219c1:	into   
  4219c2:	sub    eax,0xbd09b93f
  4219c7:	cmc    
  4219c8:	pop    DWORD PTR [ebp-0x69843873]
  4219ce:	into   
  4219cf:	sub    eax,0xbd09b93f
  4219d4:	cmc    
  4219d5:	pop    DWORD PTR [ebp-0x1daa3873]
  4219db:	stos   DWORD PTR es:[edi],eax
  4219dc:	push   ebp
  4219dd:	dec    ebx
  4219de:	mov    ecx,0x6ff5bd09
  4219e3:	mov    cs,WORD PTR [ebp-0x31699439]
  4219e9:	sub    eax,0xbd09bdeb
  4219ee:	icebp  
  4219ef:	pop    DWORD PTR [ebp-0x5bc77d23]
  4219f5:	call   0xf5bd:0x9b93f62
  4219fc:	(bad)  
  4219fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219fe:	(bad)  
  4219ff:	(bad)  
  421a00:	fwait
  421a01:	mov    eax,0xda4d5ebc
  421a06:	or     DWORD PTR [ebp-0x721a700b],edi
  421a0c:	(bad)  
  421a0d:	jnp    0x421a75
  421a0f:	lds    ebp,FWORD PTR ds:0xbd09e33f
  421a15:	cmc    
  421a16:	push   edi
  421a17:	or     DWORD PTR [ebp-0x31698439],0x9b93f2d
  421a21:	mov    ebp,0xad858ff5
  421a26:	(bad)  
  421a27:	jnp    0x421a9f
  421a29:	into   
  421a2a:	sub    eax,0xbd09b93f
  421a2f:	cmc    
  421a30:	pop    DWORD PTR [ebp-0x69843873]
  421a36:	into   
  421a37:	sub    eax,0xbd09b93f
  421a3c:	cmc    
  421a3d:	pop    DWORD PTR [ebp-0x69843873]
  421a43:	into   
  421a44:	sub    eax,0xbd09b93f
  421a49:	cmc    
  421a4a:	pop    DWORD PTR [ebp-0x69843873]
  421a50:	into   
  421a51:	sub    eax,0xbd09b93f
  421a56:	cmc    
  421a57:	pop    DWORD PTR [ebp-0x69843873]
  421a5d:	into   
  421a5e:	sub    eax,0xbd09b93f
  421a63:	cmc    
  421a64:	pop    DWORD PTR [ebp-0x69843873]
  421a6a:	into   
  421a6b:	sub    eax,0xbd09b93f
  421a70:	cmc    
  421a71:	pop    DWORD PTR [ebp-0x69843873]
  421a77:	into   
  421a78:	sub    eax,0xbd09b93f
  421a7d:	cmc    
  421a7e:	pop    DWORD PTR [ebp-0x69843873]
  421a84:	into   
  421a85:	sub    eax,0xbd09b93f
  421a8a:	cmc    
  421a8b:	pop    DWORD PTR [ebp-0x69843873]
  421a91:	into   
  421a92:	sub    eax,0xbd09b93f
  421a97:	cmc    
  421a98:	pop    DWORD PTR [ebp-0x69843873]
  421a9e:	into   
  421a9f:	sub    eax,0xbd09b93f
  421aa4:	cmc    
  421aa5:	pop    DWORD PTR [ebp-0x69843873]
  421aab:	into   
  421aac:	sub    eax,0xbd09b93f
  421ab1:	cmc    
  421ab2:	pop    DWORD PTR [ebp-0x69843873]
  421ab8:	into   
  421ab9:	sub    eax,0xbd09b93f
  421abe:	cmc    
  421abf:	pop    DWORD PTR [ebp-0x69843873]
  421ac5:	into   
  421ac6:	sub    eax,0xbd09b93f
  421acb:	cmc    
  421acc:	pop    DWORD PTR [ebp-0x69843873]
  421ad2:	into   
  421ad3:	sub    eax,0xbd09b93f
  421ad8:	cmc    
  421ad9:	pop    DWORD PTR [ebp-0x69843873]
  421adf:	into   
  421ae0:	sub    eax,0xbd09b93f
  421ae5:	cmc    
  421ae6:	pop    DWORD PTR [ebp-0x69843873]
  421aec:	into   
  421aed:	sub    eax,0xbd09b93f
  421af2:	cmc    
  421af3:	pop    DWORD PTR [ebp-0x69843873]
  421af9:	into   
  421afa:	sub    eax,0xbd09b93f
  421aff:	cmc    
  421b00:	pop    DWORD PTR [ebp-0x69843873]
  421b06:	into   
  421b07:	sub    eax,0xbd09b93f
  421b0c:	cmc    
  421b0d:	pop    DWORD PTR [ebp-0x69843873]
  421b13:	into   
  421b14:	sub    eax,0xbd09b93f
  421b19:	cmc    
  421b1a:	pop    DWORD PTR [ebp-0x69843873]
  421b20:	into   
  421b21:	sub    eax,0xbd09b93f
  421b26:	cmc    
  421b27:	pop    DWORD PTR [ebp-0x69843873]
  421b2d:	into   
  421b2e:	sub    eax,0xbd09b93f
  421b33:	cmc    
  421b34:	pop    DWORD PTR [ebp-0x69843873]
  421b3a:	into   
  421b3b:	sub    eax,0xbd09b93f
  421b40:	cmc    
  421b41:	pop    DWORD PTR [ebp-0x69843873]
  421b47:	into   
  421b48:	sub    eax,0xbd09b93f
  421b4d:	cmc    
  421b4e:	pop    DWORD PTR [ebp-0x69843873]
  421b54:	into   
  421b55:	sub    eax,0xbd09b93f
  421b5a:	cmc    
  421b5b:	pop    DWORD PTR [ebp-0x69843873]
  421b61:	into   
  421b62:	sub    eax,0xbd09b93f
  421b67:	cmc    
  421b68:	pop    DWORD PTR [ebp-0x69843873]
  421b6e:	into   
  421b6f:	sub    eax,0xbd09b93f
  421b74:	cmc    
  421b75:	pop    DWORD PTR [ebp-0x69843873]
  421b7b:	into   
  421b7c:	sub    eax,0xbd09b93f
  421b81:	cmc    
  421b82:	pop    DWORD PTR [ebp-0x69843873]
  421b88:	into   
  421b89:	sub    eax,0xbd09b93f
  421b8e:	cmc    
  421b8f:	pop    DWORD PTR [ebp-0x69843873]
  421b95:	into   
  421b96:	sub    eax,0xbd09b93f
  421b9b:	cmc    
  421b9c:	pop    DWORD PTR [ebp-0x69843873]
  421ba2:	into   
  421ba3:	sub    eax,0xbd09b93f
  421ba8:	cmc    
  421ba9:	pop    DWORD PTR [ebp-0x69843873]
  421baf:	into   
  421bb0:	sub    eax,0xbd09b93f
  421bb5:	cmc    
  421bb6:	pop    DWORD PTR [ebp-0x69843873]
  421bbc:	into   
  421bbd:	sub    eax,0xbd09b93f
  421bc2:	cmc    
  421bc3:	pop    DWORD PTR [ebp-0x69843873]
  421bc9:	into   
  421bca:	sub    eax,0xbd09b93f
  421bcf:	cmc    
  421bd0:	pop    DWORD PTR [ebp-0x69843873]
  421bd6:	into   
  421bd7:	sub    eax,0xbd09b93f
  421bdc:	cmc    
  421bdd:	pop    DWORD PTR [ebp-0x69843873]
  421be3:	into   
  421be4:	sub    eax,0xbd09b93f
  421be9:	call   0x967b:0xe88d8e27
  421bf0:	fisubr WORD PTR ds:0x67ab933f
  421bf6:	test   cl,ch
  421bf8:	jp     0x421b9a
  421bfa:	pop    ecx
  421bfb:	cld    
  421bfc:	(bad)  
  421bfd:	and    ebx,DWORD PTR [ebx]
  421bff:	xlat   BYTE PTR ds:[ebx]
  421c00:	stos   BYTE PTR es:[edi],al
  421c01:	mov    ebp,0x1fe9328
  421c06:	xlat   BYTE PTR ds:[ebx]
  421c07:	aam    0xca
  421c09:	and    eax,ebx
  421c0b:	inc    eax
  421c0c:	(bad)  [ebx]
  421c0e:	mov    BYTE PTR [ebx-0x25],bh
  421c11:	in     eax,dx
  421c12:	adc    eax,0xd948feb2
  421c17:	jg     0x421c53
  421c19:	sbb    eax,0x7d1a2eb9
  421c1e:	fcmovbe st,st(4)
  421c20:	loopne 0x421c90
  421c22:	dec    ecx
  421c23:	stos   DWORD PTR es:[edi],eax
  421c24:	adc    edi,DWORD PTR [ecx]
  421c26:	mov    ds,ecx
  421c28:	push   es
  421c29:	arpl   cx,dx
  421c2b:	xor    al,0xc9
  421c2d:	pop    esi
  421c2e:	add    dl,BYTE PTR [esi+ebp*2+0x50]
  421c32:	daa    
  421c33:	rcr    ch,1
  421c35:	sub    DWORD PTR [esi],ebx
  421c37:	cli    
  421c38:	jle    0x421c69
  421c3a:	mov    al,ds:0x9fd00382
  421c3f:	outs   dx,BYTE PTR ds:[esi]
  421c40:	icebp  
  421c41:	or     BYTE PTR [edi-0x6c],cl
  421c44:	mov    BYTE PTR [edx],dl
  421c46:	add    al,0xd7
  421c48:	and    eax,0x1e4c227c
  421c4d:	push   esp
  421c4e:	pop    ebp
  421c4f:	sub    BYTE PTR [ebp-0x6c],cl
  421c52:	add    al,0xe5
  421c54:	sub    edx,ebx
  421c56:	push   edi
  421c57:	jno    0x421cbe
  421c59:	add    eax,0x1d365e74
  421c5e:	out    dx,al
  421c5f:	shl    BYTE PTR [edi],1
  421c61:	aaa    
  421c62:	add    edi,0x116fe7ed
  421c68:	inc    esi
  421c69:	cmp    BYTE PTR [ecx+edi*1+0x65e38a38],cl
  421c70:	and    eax,0x7a27e32b
  421c75:	jge    0x421c13
  421c77:	hlt    
  421c78:	jp     0x421c36
  421c7a:	loope  0x421c1a
  421c7c:	mov    bl,0xfc
  421c7e:	mov    esi,0x4b9718c
  421c83:	and    al,0x4f
  421c85:	inc    DWORD PTR [ebx]
  421c87:	aam    0x95
  421c89:	je     0x421d08
  421c8b:	cmp    DWORD PTR [ebp+ebx*8-0xdb6cfdb],eax
  421c92:	in     eax,dx
  421c93:	mov    ds:0x17f6733,eax
  421c98:	mov    edx,0xd3b0dc58
  421c9d:	cmp    DWORD PTR [eax-0x190f7721],ebp
  421ca3:	xor    eax,0xee5ca8cb
  421ca8:	hlt    
  421ca9:	inc    ebp
  421caa:	add    BYTE PTR [ebx+0x39584d77],ah
  421cb0:	in     al,0x94
  421cb2:	cmp    DWORD PTR [ecx],edx
  421cb4:	cld    
  421cb5:	mov    al,0x91
  421cb7:	pop    edi
  421cb8:	jae    0x421ce3
  421cba:	sbb    edx,DWORD PTR [edx-0x67720509]
  421cc0:	mov    ecx,ebx
  421cc2:	lahf   
  421cc3:	stos   BYTE PTR es:[edi],al
  421cc4:	adc    BYTE PTR [eax],0x48
  421cc7:	sbb    BYTE PTR ds:0x61939a8e,cl
  421ccd:	mov    dh,0x3f
  421ccf:	jae    0x421c7c
  421cd1:	out    dx,eax
  421cd2:	inc    ebx
  421cd3:	sbb    bl,bh
  421cd5:	jne    0x421cdc
  421cd7:	mov    dh,0x90
  421cd9:	xchg   DWORD PTR [edx],edi
  421cdb:	icebp  
  421cdc:	ficomp WORD PTR [ecx-0x54139e95]
  421ce2:	clc    
  421ce3:	(bad)  
  421ce4:	cs inc edi
  421ce6:	adc    eax,0xea0c1616
  421ceb:	(bad)  
  421cec:	shl    DWORD PTR [edx],1
  421cee:	js     0x421d11
  421cf0:	cmp    DWORD PTR [ecx-0x2f],eax
  421cf3:	mov    BYTE PTR [ebp-0x36075e1c],al
  421cf9:	fwait
  421cfa:	cmp    ebp,DWORD PTR [eax]
  421cfc:	xor    al,0x2e
  421cfe:	mov    ecx,0xd15eccdf
  421d03:	xor    BYTE PTR [ebp+0x16c9beba],ah
  421d09:	stc    
  421d0a:	shl    dl,0xe2
  421d0d:	xchg   esi,eax
  421d0e:	sbb    ch,BYTE PTR [esi+edx*2]
  421d11:	loop   0x421cf1
  421d13:	dec    esp
  421d14:	bound  eax,QWORD PTR [eax-0x45fc0900]
  421d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d1b:	xor    eax,0x483cf9a7
  421d20:	int3   
  421d21:	adc    ah,BYTE PTR [ecx-0x35c935a1]
  421d27:	outs   dx,DWORD PTR ds:[esi]
  421d28:	outs   dx,DWORD PTR ds:[esi]
  421d29:	cmp    al,0xf1
  421d2b:	mov    esp,0xc18049b3
  421d30:	dec    ecx
  421d31:	mov    ecx,0xb0462c12
  421d36:	fnstenv [ebx+0x13]
  421d39:	cmp    BYTE PTR [ecx],dh
  421d3b:	pushf  
  421d3c:	jge    0x421cfb
  421d3e:	mov    ds:0xc00ddcba,al
  421d43:	add    ecx,DWORD PTR [edi]
  421d45:	adc    DWORD PTR [edx+0x60],esp
  421d48:	jmp    0x4d9e:0xe3c1419b
  421d4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d50:	and    ah,BYTE PTR [eax+0x2b]
  421d53:	dec    esi
  421d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d55:	or     eax,0x40183da
  421d5a:	push   edx
  421d5b:	push   eax
  421d5c:	mov    ds:0xb6da8e5a,eax
  421d61:	and    DWORD PTR [edi+0x9],ebx
  421d64:	inc    ecx
  421d65:	ror    BYTE PTR [ebp+eax*2+0x41e96fe0],0xec
  421d6d:	sub    eax,0x8ba2a1ea
  421d72:	add    al,0x67
  421d74:	out    0xca,al
  421d76:	fs cld 
  421d78:	ss mov edi,0x714ace27
  421d7e:	cmc    
  421d7f:	lds    edi,FWORD PTR [eax+0x798007cd]
  421d85:	mov    BYTE PTR [ecx-0x36cd3087],dh
  421d8b:	sub    DWORD PTR [edi-0x524b2f42],0xe6841534
  421d95:	pop    ebx
  421d96:	mov    esi,DWORD PTR [esi]
  421d98:	in     al,dx
  421d99:	bswap  esp
  421d9b:	ds lock mov edi,0x6046adab
  421da2:	sbb    al,0x8f
  421da4:	arpl   WORD PTR [ebx-0x51],dx
  421da7:	mov    WORD PTR [esi],es
  421da9:	add    al,0xaf
  421dab:	xor    bh,BYTE PTR [edx-0x49]
  421dae:	cmc    
  421daf:	mov    al,0x5d
  421db1:	adc    DWORD PTR [edi],ecx
  421db3:	pop    DWORD PTR [edx+0x78ceeeeb]
  421db9:	push   esi
  421dba:	ds int 0x6b
  421dbd:	aam    0x11
  421dbf:	pop    esi
  421dc0:	add    al,al
  421dc2:	in     eax,dx
  421dc3:	dec    esp
  421dc4:	jns    0x421e01
  421dc6:	outs   dx,DWORD PTR ds:[esi]
  421dc7:	and    dh,BYTE PTR [esi-0x14749795]
  421dcd:	in     eax,0x7d
  421dcf:	adc    DWORD PTR [esi-0x6c],edi
  421dd2:	push   ecx
  421dd3:	out    0xe3,eax
  421dd5:	dec    esp
  421dd6:	dec    eax
  421dd7:	je     0x421de9
  421dd9:	(bad)  
  421dda:	mov    esi,0x823dca3e
  421ddf:	mov    eax,ds:0x7f7a76ea
  421de4:	mov    WORD PTR [edi-0x19d57f99],fs
  421dea:	sbb    al,BYTE PTR [eax]
  421dec:	cld    
  421ded:	inc    esp
  421dee:	retf   
  421def:	add    ebp,0xb47e437d
  421df5:	push   cs
  421df6:	sti    
  421df7:	jae    0x421dc6
  421df9:	inc    edi
  421dfa:	retf   
  421dfb:	cmc    
  421dfc:	les    esp,FWORD PTR [edx-0x6b43b63a]
  421e02:	ins    DWORD PTR es:[edi],dx
  421e03:	addr16 push ebp
  421e05:	dec    eax
  421e06:	out    0xb0,eax
  421e08:	add    eax,0x9ee79102
  421e0d:	sub    al,bl
  421e0f:	and    bl,0xb8
  421e12:	call   0x14a3:0x7a8d72f0
  421e19:	int3   
  421e1a:	mov    esi,edx
  421e1c:	daa    
  421e1d:	addr16 and ah,ch
  421e20:	or     al,BYTE PTR [edi]
  421e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e23:	xchg   ah,bh
  421e25:	dec    ebx
  421e26:	in     al,dx
  421e27:	icebp  
  421e28:	nop
  421e29:	dec    esi
  421e2a:	dec    edi
  421e2b:	inc    eax
  421e2c:	pop    ecx
  421e2d:	repnz pusha 
  421e2f:	stos   BYTE PTR es:[edi],al
  421e30:	sbb    edi,ebx
  421e32:	and    edx,DWORD PTR [edx-0x6d69b6ac]
  421e38:	aaa    
  421e39:	mov    edx,DWORD PTR ds:0x1672b639
  421e3f:	mov    ch,0xa9
  421e41:	icebp  
  421e42:	push   esp
  421e43:	lahf   
  421e44:	fmul   DWORD PTR [ebp+0x65692c8c]
  421e4a:	add    eax,0x2fbf64e2
  421e4f:	call   0x3717652e
  421e54:	shl    DWORD PTR [edi+ecx*4],cl
  421e57:	adc    bl,dh
  421e59:	retf   0x7c68
  421e5c:	xor    eax,DWORD PTR cs:[ebx+eax*4]
  421e60:	mov    bh,0xd3
  421e62:	outs   dx,DWORD PTR ds:[esi]
  421e63:	mov    esi,0x20bd7291
  421e68:	pop    esi
  421e69:	stos   DWORD PTR es:[di],eax
  421e6b:	pop    es
  421e6c:	push   0x72
  421e6e:	ins    DWORD PTR es:[edi],dx
  421e6f:	scas   al,BYTE PTR es:[edi]
  421e70:	ins    DWORD PTR es:[edi],dx
  421e71:	xor    esi,DWORD PTR [esi-0x9d864b1]
  421e77:	or     ebx,DWORD PTR ds:0xafc7ba22
  421e7d:	mov    BYTE PTR [edx+0x6d],0xbf
  421e81:	idiv   DWORD PTR ds:0xfc973409
  421e87:	shr    DWORD PTR [edx-0x5db9c08d],1
  421e8d:	adc    bl,dh
  421e8f:	sub    BYTE PTR [ebp+0x572b7b51],al
  421e95:	xchg   DWORD PTR [eax+0x33],ecx
  421e98:	adc    esi,DWORD PTR ds:0x65c486f7
  421e9e:	in     eax,dx
  421e9f:	mov    bl,0x62
  421ea1:	lea    esp,[esp+eax*4-0x16]
  421ea5:	pop    ebp
  421ea6:	adc    ebp,eax
  421ea8:	and    al,0x9e
  421eaa:	std    
  421eab:	and    ch,BYTE PTR [edi+ebp*8-0x55]
  421eaf:	jecxz  0x421e63
  421eb1:	aam    0x1f
  421eb3:	lock cmp ecx,DWORD PTR [eax]
  421eb6:	outs   dx,BYTE PTR ds:[esi]
  421eb7:	pop    esi
  421eb8:	lahf   
  421eb9:	push   0x2e2faac1
  421ebe:	add    DWORD PTR [edx+0x3c],esi
  421ec1:	jle    0x421eee
  421ec3:	jg     0x421e5f
  421ec5:	out    0xe1,eax
  421ec7:	push   ebx
  421ec8:	out    0xf5,al
  421eca:	mov    ebx,0x95aafec3
  421ecf:	and    BYTE PTR [esi-0x7ae168e2],al
  421ed5:	leave  
  421ed6:	vminps xmm2,xmm7,xmm3
  421eda:	mov    edx,0x9fe32d8b
  421edf:	mov    dl,0xf
  421ee1:	sub    DWORD PTR [eax-0x6ec49737],edx
  421ee7:	push   edi
  421ee8:	cs mov ecx,0x652f6524
  421eee:	dec    BYTE PTR [esi+0x30]
  421ef1:	and    dh,cl
  421ef3:	push   0x55
  421ef5:	std    
  421ef6:	test   al,0x15
  421ef8:	jnp    0x421f13
  421efa:	retf   0xb21e
  421efd:	scas   al,BYTE PTR es:[edi]
  421efe:	jl     0x421e9b
  421f00:	and    BYTE PTR [esi+0x41],ah
  421f03:	xor    DWORD PTR [ebx-0x7c92b269],0x91baebdc
  421f0d:	retf   0x6d73
  421f10:	pusha  
  421f11:	loope  0x421eb3
  421f13:	rcl    DWORD PTR [edi-0x48adc10d],0x64
  421f1a:	pop    edx
  421f1b:	push   ss
  421f1c:	xchg   edx,eax
  421f1d:	mov    bh,0x4f
  421f1f:	jecxz  0x421f0b
  421f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f22:	mov    al,0xc0
  421f24:	in     al,0xe3
  421f26:	(bad)  
  421f27:	xchg   esp,eax
  421f28:	cmp    dh,BYTE PTR [edi-0x7e3ea7ad]
  421f2e:	sub    al,0x76
  421f30:	pop    esi
  421f31:	out    dx,eax
  421f32:	dec    BYTE PTR [esi-0x4c]
  421f35:	mov    bl,0x4d
  421f37:	retf   
  421f38:	pushf  
  421f39:	jg     0x421f53
  421f3b:	out    0x2d,eax
  421f3d:	add    DWORD PTR [eax],eax
  421f3f:	cwde   
  421f40:	retf   
  421f41:	dec    ecx
  421f42:	and    ebp,ebx
  421f44:	pop    eax
  421f45:	test   eax,0x3b87a303
  421f4a:	xor    DWORD PTR ds:0xb5a851f9,esi
  421f50:	cli    
  421f51:	cmp    DWORD PTR [edi-0x7d],esi
  421f54:	mov    ebp,0xa4784d73
  421f59:	adc    BYTE PTR [eax-0x41],0xba
  421f5d:	inc    ebp
  421f5e:	fcmovne st,st(7)
  421f60:	aad    0xb8
  421f62:	xchg   ecx,eax
  421f63:	loope  0x421f2a
  421f65:	add    cl,BYTE PTR [esi+0x3e6c3f87]
  421f6b:	sbb    cl,0xdd
  421f6e:	inc    ebp
  421f6f:	xchg   esi,eax
  421f70:	dec    ecx
  421f71:	jne    0x421fd3
  421f73:	fistp  DWORD PTR [edx]
  421f75:	gs pop edx
  421f77:	jle    0x421f91
  421f79:	or     BYTE PTR [ebx-0x22e954ca],bl
  421f7f:	gs pxor mm2,QWORD PTR fs:[si+0x66d2]
  421f87:	shl    BYTE PTR [esi-0x13],cl
  421f8a:	js     0x421fb3
  421f8c:	push   eax
  421f8d:	test   ah,dh
  421f8f:	jg     0x421fbf
  421f91:	jg     0x421f75
  421f93:	and    eax,0x8090a9b6
  421f98:	adc    eax,0x7f2ad34e
  421f9d:	pop    eax
  421f9e:	sub    eax,0xb49c565e
  421fa3:	lea    ebp,[esi-0x23]
  421fa6:	(bad)  
  421fa7:	mov    ch,0x6c
  421fa9:	push   ecx
  421faa:	aaa    
  421fab:	lods   eax,DWORD PTR ds:[esi]
  421fac:	xchg   DWORD PTR [edi],edi
  421fae:	jmp    0xce97:0x756c2f3f
  421fb5:	popf   
  421fb6:	push   edi
  421fb7:	xor    al,0x81
  421fb9:	sbb    esi,DWORD PTR [ebx-0x1b7c2573]
  421fbf:	cmp    DWORD PTR [eax],edi
  421fc1:	in     eax,0x6f
  421fc3:	ret    0xdbfc
  421fc6:	das    
  421fc7:	imul   ebp,DWORD PTR [edx],0xffffffd9
  421fca:	(bad)  
  421fcb:	(bad)  
  421fcd:	or     al,BYTE PTR ds:0xe6d0d8d0
  421fd3:	cmp    al,0x5c
  421fd5:	xor    al,0x55
  421fd7:	aam    0x1e
  421fd9:	pop    edi
  421fda:	ret    0xc0c5
  421fdd:	(bad)  
  421fdf:	(bad)  
  421fe0:	(bad)  
  421fe1:	push   bx
  421fe3:	out    dx,al
  421fe4:	in     al,0x8e
  421fe6:	push   ecx
  421fe7:	jmp    0xd0d2:0xa41ea378
  421fee:	dec    ebx
  421fef:	repz test DWORD PTR [ecx-0x31],0xee67a3c3
  421ff7:	adc    BYTE PTR [edi+ebx*4-0x3],bh
  421ffb:	push   ebx
  421ffc:	bound  edi,QWORD PTR [edx]
  421ffe:	enter  0xd70d,0xc7
  422002:	(bad)  
  422003:	(bad)  
  422004:	pop    esi
  422005:	fwait
  422006:	xchg   ecx,eax
  422007:	sub    DWORD PTR [ecx-0x75],esi
  42200a:	pop    ebp
  42200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42200c:	push   edi
  42200d:	xor    DWORD PTR [eax-0x1b],edi
  422010:	lods   al,BYTE PTR ds:[esi]
  422011:	sub    al,0xd9
  422013:	outs   dx,BYTE PTR ds:[esi]
  422014:	loope  0x42201e
  422016:	cwde   
  422017:	cs stos DWORD PTR es:[edi],eax
  422019:	dec    esi
  42201a:	fistp  DWORD PTR [ebx]
  42201c:	retf   0xe4d0
  42201f:	ficomp WORD PTR [edi-0x2c]
  422022:	or     BYTE PTR [eax],ah
  422024:	outs   dx,BYTE PTR ds:[esi]
  422025:	inc    eax
  422026:	or     esi,edi
  422028:	mov    esi,0x2b00f7bd
  42202d:	imul   edi,DWORD PTR [ebx+0x20dd8a3d],0xffffff92
  422034:	rol    DWORD PTR [ebp-0x15461c23],1
  42203a:	lahf   
  42203b:	fwait
  42203c:	inc    DWORD PTR [ecx+edx*8+0x1d027af5]
  422043:	mov    al,0x83
  422045:	fsubp  st(1),st
  422047:	out    dx,eax
  422048:	aad    0xaa
  42204a:	mov    eax,ds:0x3750fa34
  42204f:	test   BYTE PTR [ecx],dl
  422051:	adc    bl,BYTE PTR [edx-0x117a9d9f]
  422057:	pop    edx
  422058:	lods   eax,DWORD PTR ds:[esi]
  422059:	test   esi,edi
  42205b:	popa   
  42205c:	ss cmp al,0xed
  42205f:	fwait
  422060:	scas   al,BYTE PTR es:[edi]
  422061:	test   eax,0xa35abe3
  422066:	xor    ch,al
  422068:	fisubr DWORD PTR [edx+0x53b2faca]
  42206e:	pop    ebx
  42206f:	pop    esi
  422070:	push   cs
  422071:	mov    ah,0xb7
  422073:	inc    eax
  422074:	jg     0x422049
  422076:	repnz dec edi
  422078:	adc    cl,dl
  42207a:	mov    BYTE PTR [edi],ch
  42207c:	sub    ah,dh
  42207e:	retf   
  42207f:	aad    0xe4
  422081:	push   esp
  422082:	stos   DWORD PTR es:[edi],eax
  422083:	dec    esi
  422084:	xor    esi,DWORD PTR [ecx+ebp*4]
  422087:	sbb    DWORD PTR [ecx],edx
  422089:	pop    ebx
  42208a:	cwde   
  42208b:	jbe    0x422044
  42208d:	fucomi st,st(0)
  42208f:	fwait
  422090:	mov    ah,0x1f
  422092:	sub    al,BYTE PTR [esi]
  422094:	push   ecx
  422095:	(bad)  
  422097:	arpl   WORD PTR [ebx+0x20],ax
  42209a:	push   cs
  42209b:	mov    edx,0xcfd3267f
  4220a0:	in     eax,0x91
  4220a2:	loope  0x422064
  4220a4:	and    DWORD PTR [edx-0x4d0872a8],esi
  4220aa:	and    al,0xd0
  4220ac:	add    DWORD PTR [esi],esi
  4220ae:	jae    0x422121
  4220b0:	jmp    0x7855d54d
  4220b5:	mov    ss,WORD PTR [ebx]
  4220b7:	mov    ebp,0x1c1a5001
  4220bc:	rol    DWORD PTR [edx],0xf3
  4220bf:	mov    edi,0x9e9fd8d1
  4220c4:	inc    eax
  4220c5:	sub    bl,BYTE PTR [ebx-0x6aa7ee51]
  4220cb:	mov    ebx,0x6cf85775
  4220d0:	sbb    dl,cl
  4220d2:	pop    esp
  4220d3:	or     al,0xc
  4220d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d6:	jns    0x42205f
  4220d8:	aaa    
  4220d9:	mov    ecx,0x88e30bce
  4220de:	jnp    0x4220a8
  4220e0:	inc    eax
  4220e1:	or     DWORD PTR [edi+edi*2-0x15a313e2],ebx
  4220e8:	cdq    
  4220e9:	cmp    al,BYTE PTR [ebx-0x1264c664]
  4220ef:	xor    BYTE PTR [eax],dh
  4220f1:	ret    0xbd83
  4220f4:	fidiv  DWORD PTR [edx]
  4220f6:	lds    ecx,FWORD PTR [edx+0x49]
  4220f9:	sub    cl,BYTE PTR [edi-0x70]
  4220fc:	test   al,0x50
  4220fe:	mov    ebx,0xd8c8d205
  422103:	cmp    BYTE PTR cs:[eax],ah
  422106:	aad    0xe6
  422108:	into   
  422109:	test   eax,0xb65fd93c
  42210e:	push   0xffffffea
  422110:	fisttp DWORD PTR [ebp-0x374bedd2]
  422116:	or     bl,BYTE PTR [esi+esi*2+0x62]
  42211a:	sbb    al,0xcb
  42211c:	ss in  al,0x83
  42211f:	and    eax,0x8d83b36
  422124:	jnp    0x422165
  422126:	test   BYTE PTR [esi-0x4e76f973],cl
  42212c:	cwde   
  42212d:	xor    ah,ah
  42212f:	inc    BYTE PTR [eax+0xb]
  422132:	xor    BYTE PTR [ecx-0x5b],cl
  422135:	add    bl,BYTE PTR [ecx]
  422137:	cld    
  422138:	pop    eax
  422139:	(bad)  
  42213a:	push   0x1
  42213c:	popf   
  42213d:	clc    
  42213e:	pop    edx
  42213f:	aas    
  422140:	idiv   BYTE PTR ds:0x73604aaa
  422146:	dec    eax
  422147:	test   BYTE PTR [ebx+0x6c],ah
  42214a:	dec    eax
  42214b:	ret    0x6e7e
  42214e:	in     al,dx
  42214f:	cmp    cl,BYTE PTR [esi+eiz*8+0x2479ec3]
  422156:	pushf  
  422157:	test   BYTE PTR [esi-0xb143963],cl
  42215d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215e:	mov    ah,0xd5
  422160:	and    dl,BYTE PTR [ecx+edx*8-0x13]
  422164:	ins    DWORD PTR es:[edi],dx
  422165:	xchg   ecx,eax
  422166:	adc    ebp,eax
  422168:	retf   
  422169:	ret    
  42216a:	jae    0x422127
  42216c:	sub    ah,dh
  42216e:	mov    esp,0x251d1a2d
  422173:	(bad)  
  422174:	nop
  422175:	xor    eax,0x239a1b3c
  42217a:	into   
  42217b:	cmp    dl,BYTE PTR [esi*2+0x5b38db91]
  422182:	add    ecx,edx
  422184:	mov    eax,0x82a64840
  422189:	in     eax,0xf5
  42218b:	dec    ecx
  42218c:	out    0xb5,eax
  42218e:	gs jmp 0x8f57:0xd2879da6
  422196:	cmp    DWORD PTR [edx-0x310d941f],ecx
  42219c:	pop    edi
  42219d:	(bad)  
  42219e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42219f:	call   0x498884a0
  4221a4:	mov    eax,ds:0xfc9b6a11
  4221a9:	jbe    0x42217b
  4221ab:	fwait
  4221ac:	push   ebx
  4221ad:	cmp    eax,0x38414ced
  4221b2:	(bad)  
  4221b3:	mov    esp,0xccf28789
  4221b8:	pop    edx
  4221b9:	dec    eax
  4221ba:	test   al,0x8b
  4221bc:	fxam   
  4221be:	xchg   edi,eax
  4221bf:	or     eax,0x42e3bde2
  4221c4:	call   0xee9d22ef
  4221c9:	fwait
  4221ca:	inc    edx
  4221cb:	int3   
  4221cc:	scas   al,BYTE PTR es:[edi]
  4221cd:	pop    ds
  4221ce:	sbb    bl,BYTE PTR [ecx+0x26e00d74]
  4221d4:	mov    ds:0x65cc6a64,al
  4221d9:	sub    esi,edi
  4221db:	pop    esp
  4221dc:	cld    
  4221dd:	jge    0x42224a
  4221df:	add    ch,BYTE PTR [ecx-0x32796d83]
  4221e5:	mov    DWORD PTR [eax-0x40eb83b0],0xab8f3f
  4221ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221f0:	sub    edi,ebp
  4221f2:	in     al,0xe3
  4221f4:	pop    eax
  4221f5:	jmp    0x422238
  4221f7:	cld    
  4221f8:	or     al,0x7
  4221fa:	xchg   ecx,eax
  4221fb:	int3   
  4221fc:	adc    DWORD PTR [eax],0xd732e210
  422202:	and    DWORD PTR [ebx],0xffffffcf
  422205:	xchg   esi,eax
  422206:	jl     0x422223
  422208:	jle    0x42220f
  42220a:	les    edi,FWORD PTR ds:0x75f223b2
  422210:	pop    eax
  422211:	sub    eax,0xdb4bfaf9
  422216:	mov    ds:0x91f95142,al
  42221b:	or     BYTE PTR [ebx-0x6d484d28],ah
  422221:	xor    dl,ah
  422223:	mov    ecx,0x5039e0db
  422228:	ret    
  422229:	jl     0x4221f2
  42222b:	fisub  DWORD PTR [ecx+0x1]
  42222e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42222f:	shl    DWORD PTR [ebp-0x1e],cl
  422232:	retf   
  422233:	mov    cl,0x7c
  422235:	pop    ebp
  422236:	out    dx,eax
  422237:	sub    al,0xc1
  422239:	mov    ch,0x8
  42223b:	ss jmp 0x8e344f8d
  422241:	and    al,0x51
  422243:	mov    edx,0x58ccc71d
  422248:	(bad)  
  422249:	rcr    DWORD PTR [ebx+0x48aeedc3],1
  42224f:	test   eax,0x3e950b7a
  422254:	xchg   edx,eax
  422255:	and    al,0xc7
  422257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422258:	xlat   BYTE PTR ds:[ebx]
  422259:	ins    DWORD PTR es:[edi],dx
  42225a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42225b:	dec    edx
  42225c:	scas   al,BYTE PTR es:[edi]
  42225d:	dec    ecx
  42225e:	sbb    eax,0x8a4ba6b8
  422263:	lock in eax,0x36
  422266:	mov    BYTE PTR [edx],ch
  422268:	and    BYTE PTR [eax-0x6c022b9e],0x59
  42226f:	dec    ebx
  422270:	ins    DWORD PTR es:[edi],dx
  422271:	sbb    edi,DWORD PTR [ebx]
  422273:	ja     0x422280
  422275:	pop    ecx
  422276:	icebp  
  422277:	aam    0x32
  422279:	jmp    0xc165:0x9833a380
  422280:	inc    edi
  422281:	sbb    al,0x5a
  422283:	js     0x4222ed
  422285:	xor    ebx,DWORD PTR gs:[edi+edx*2-0x3b]
  42228a:	out    dx,eax
  42228b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42228c:	loop   0x4222c3
  42228e:	dec    ebp
  42228f:	int    0x1
  422291:	adc    eax,0xb0a37bad
  422296:	cmc    
  422297:	dec    esi
  422298:	inc    esi
  422299:	mul    bl
  42229b:	(bad)  
  42229c:	mov    bl,0xe4
  42229e:	inc    eax
  42229f:	push   ds
  4222a0:	jbe    0x42230b
  4222a2:	shl    edi,0x90
  4222a5:	xlat   BYTE PTR ds:[ebx]
  4222a6:	stos   DWORD PTR es:[edi],eax
  4222a7:	push   esi
  4222a8:	fistp  QWORD PTR [ecx]
  4222aa:	jae    0x422277
  4222ac:	cdq    
  4222ad:	fcmovnb st,st(0)
  4222af:	mov    ebx,DWORD PTR [esi]
  4222b1:	adc    DWORD PTR [edx+edi*1+0x6a1336b4],esi
  4222b8:	jns    0x42223d
  4222ba:	aad    0x6f
  4222bc:	ds mov ebx,0xbb8013dd
  4222c2:	pop    ds
  4222c3:	cwde   
  4222c4:	mov    eax,esp
  4222c6:	pop    ecx
  4222c7:	or     al,0x4b
  4222c9:	inc    ebx
  4222ca:	xchg   edx,eax
  4222cb:	cli    
  4222cc:	mov    dl,0xf5
  4222ce:	cs mov ch,0x6d
  4222d1:	jmp    0x422294
  4222d3:	inc    ebx
  4222d4:	xchg   ecx,ecx
  4222d6:	inc    ecx
  4222d7:	mov    esp,0xe6ac395c
  4222dc:	clc    
  4222dd:	lods   al,BYTE PTR ds:[esi]
  4222de:	into   
  4222df:	jnp    0x422323
  4222e1:	jmp    0x42233e
  4222e3:	and    al,ch
  4222e5:	pop    ecx
  4222e6:	add    BYTE PTR [esi+0x6aa6c628],dh
  4222ec:	ds es add eax,0xa43fccd3
  4222f3:	dec    bx
  4222f5:	fisubr WORD PTR [edi-0x19]
  4222f8:	loop   0x422291
  4222fa:	outs   dx,DWORD PTR ds:[esi]
  4222fb:	mov    edi,0xec0669e4
  422300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422301:	add    al,BYTE PTR [eax-0x4d]
  422304:	and    bh,BYTE PTR [esi]
  422306:	mov    WORD PTR [ebp-0x1d],gs
  422309:	cmp    BYTE PTR [esi-0x5d],bh
  42230c:	lock sub eax,DWORD PTR [edi]
  42230f:	daa    
  422310:	pop    ecx
  422311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422312:	popf   
  422313:	sbb    eax,0x5e874547
  422318:	out    0x34,eax
  42231a:	dec    ecx
  42231b:	push   0xffffff80
  42231d:	cmp    DWORD PTR [ecx-0x36],0x79890881
  422324:	and    al,BYTE PTR [ebp+0x5bce4e1a]
  42232a:	gs pop edi
  42232c:	cmp    esp,ebp
  42232e:	push   0xffffffc6
  422330:	sbb    eax,eax
  422332:	stos   BYTE PTR es:[edi],al
  422333:	dec    esp
  422334:	jno    0x4222c8
  422336:	shl    BYTE PTR [eax-0x3ca573d],1
  42233c:	pop    eax
  42233d:	ret    0x56db
  422340:	push   esi
  422341:	std    
  422342:	into   
  422343:	mov    BYTE PTR [edx-0x3dd62272],bh
  422349:	push   eax
  42234a:	repnz aam 0x47
  42234d:	and    dh,bl
  42234f:	mov    bh,0xfa
  422351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422352:	push   ecx
  422353:	cmc    
  422354:	jl     0x422339
  422356:	or     ah,cl
  422358:	xlat   BYTE PTR ds:[ebx]
  422359:	pop    edi
  42235a:	nop
  42235b:	mov    DWORD PTR [ebp-0x85bdbab],esi
  422361:	call   0xaf2f:0x63789652
  422368:	and    eax,0x934e9650
  42236d:	loope  0x4223d2
  42236f:	adc    BYTE PTR [edx-0x23],al
  422372:	jg     0x42230c
  422374:	xor    bl,BYTE PTR [ecx+0x5a]
  422377:	daa    
  422378:	xor    eax,0xa445a0f6
  42237d:	xor    BYTE PTR [edi-0x67],0x57
  422381:	pop    es
  422382:	adc    eax,0xb722a382
  422387:	mov    esp,0x131ca66d
  42238c:	popf   
  42238d:	inc    eax
  42238e:	test   ecx,edi
  422390:	mov    bh,BYTE PTR [esi]
  422392:	pop    eax
  422393:	popf   
  422394:	cs and eax,0xa951957f
  42239a:	pop    edi
  42239b:	sub    eax,0x56c082af
  4223a0:	pop    edi
  4223a1:	xor    al,0xb3
  4223a3:	repnz sbb BYTE PTR [ebp-0x79],al
  4223a7:	mov    esp,DWORD PTR [edx+0x71074f8a]
  4223ad:	jne    0x422368
  4223af:	jg     0x422351
  4223b1:	add    dl,0x44
  4223b4:	in     eax,dx
  4223b5:	aas    
  4223b6:	push   ebx
  4223b7:	pusha  
  4223b8:	ficomp DWORD PTR [esp+edi*2+0x4bee1e76]
  4223bf:	mov    eax,0xca4f6c8c
  4223c4:	jns    0x42241f
  4223c6:	push   0x28
  4223c8:	lock outs dx,DWORD PTR ds:[esi]
  4223ca:	mov    ecx,0xa025647
  4223cf:	sbb    eax,0xf8d51d9c
  4223d4:	inc    ebp
  4223d5:	mov    al,ds:0x4afa8f29
  4223da:	mov    WORD PTR [edi],?
  4223dc:	fs out dx,eax
  4223de:	jne    0x422411
  4223e0:	out    dx,al
  4223e1:	ret    
  4223e2:	push   0x7
  4223e4:	jnp    0x4223e1
  4223e6:	xor    BYTE PTR [esi],0x9b
  4223e9:	stc    
  4223ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223eb:	cmp    eax,0xf8fd333f
  4223f0:	gs out dx,al
  4223f2:	in     al,dx
  4223f3:	adc    ebx,0x70
  4223f6:	dec    esi
  4223f7:	dec    eax
  4223f8:	lock mov al,ds:0x10b28ddb
  4223fe:	sbb    bh,BYTE PTR [esi-0x2db2ac74]
  422404:	test   eax,0xd25218a7
  422409:	pop    ss
  42240a:	jbe    0x422485
  42240c:	pusha  
  42240d:	lods   al,BYTE PTR ds:[esi]
  42240e:	in     eax,0xaa
  422410:	xor    DWORD PTR [ebx+eax*1+0x3471f7cf],esp
  422417:	test   DWORD PTR [eax-0x7c],edx
  42241a:	xchg   eax,esi
  42241c:	or     al,0x76
  42241e:	outs   dx,DWORD PTR ds:[esi]
  42241f:	add    dh,dh
  422421:	je     0x422401
  422423:	push   0x6b
  422425:	fiadd  WORD PTR [edx-0x16]
  422428:	or     DWORD PTR [edx+0x3689e68e],edi
  42242e:	add    ch,bl
  422430:	push   esi
  422431:	cmp    al,dl
  422433:	test   al,0x72
  422435:	mov    ds:0xd4f080d6,eax
  42243a:	inc    ebx
  42243b:	call   0x56a2:0xa116ada9
  422442:	mov    WORD PTR [edi],gs
  422444:	cmp    DWORD PTR [edi+eiz*1],eax
  422447:	sbb    ch,ch
  422449:	jbe    0x4223fd
  42244b:	jp     0x4223f4
  42244d:	pop    ecx
  42244e:	push   0xd2a302ec
  422453:	jmp    0x2e8:0xf9cd3978
  42245a:	in     eax,0x5
  42245c:	mov    esi,0xdf550e5c
  422461:	popf   
  422462:	pop    ss
  422463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422464:	scas   eax,DWORD PTR es:[edi]
  422465:	xchg   esi,eax
  422466:	jo     0x42240c
  422468:	cdq    
  422469:	pop    esi
  42246a:	outs   dx,BYTE PTR ds:[esi]
  42246b:	cmc    
  42246c:	clc    
  42246d:	jecxz  0x422415
  42246f:	add    BYTE PTR [eax+ecx*4+0x3c],0x29
  422474:	rcr    al,cl
  422476:	push   ds
  422477:	icebp  
  422478:	mov    bl,0xc9
  42247a:	xchg   edx,eax
  42247b:	je     0x4224c6
  42247d:	mov    bh,0x5b
  42247f:	sub    esp,DWORD PTR [ebp+ebx*4+0x10]
  422483:	cdq    
  422484:	or     al,0x45
  422486:	xor    eax,0x1c7b9ade
  42248b:	sbb    eax,0x4c212296
  422490:	add    bl,bh
  422492:	add    al,0xc1
  422494:	imul   ebx,DWORD PTR [eax+0x72],0xffffffba
  422498:	shr    cl,cl
  42249a:	push   ecx
  42249b:	in     al,dx
  42249c:	sub    BYTE PTR [ebx+edx*2+0x5c],al
  4224a0:	mov    al,0xcd
  4224a2:	mov    al,ds:0x58489a40
  4224a7:	dec    ecx
  4224a8:	gs gs mov dh,bh
  4224ac:	das    
  4224ad:	or     BYTE PTR [ebp+0x68],0x15
  4224b1:	(bad)  
  4224b2:	enter  0x879e,0x48
  4224b6:	icebp  
  4224b7:	mov    ah,0x1c
  4224b9:	jmp    FWORD PTR [esi-0x7d89354]
  4224bf:	out    0x6b,al
  4224c1:	or     BYTE PTR [esi-0xe1f4b62],0x6e
  4224c8:	adc    BYTE PTR [esi+0x2cf44c90],ah
  4224ce:	sub    al,0xa
  4224d0:	pop    es
  4224d1:	inc    edi
  4224d2:	jns    0x42248d
  4224d4:	sahf   
  4224d5:	xchg   ebx,eax
  4224d6:	pop    ebp
  4224d7:	fwait
  4224d8:	dec    esp
  4224d9:	and    eax,0xe9d979b6
  4224de:	dec    eax
  4224df:	and    eax,0x9e4a537a
  4224e4:	div    DWORD PTR [eax-0x4c81a076]
  4224ea:	or     edx,DWORD PTR [ebx+0x3ddcb206]
  4224f0:	push   0xffffffa0
  4224f2:	push   ds
  4224f3:	jno    0x4224c3
  4224f5:	int    0x35
  4224f7:	popf   
  4224f8:	mov    dl,0xea
  4224fa:	dec    esp
  4224fb:	fild   DWORD PTR [ecx]
  4224fd:	rcl    BYTE PTR [ebx+0x3fc9aba0],cl
  422503:	mov    ss,WORD PTR [eax]
  422505:	dec    ecx
  422506:	add    BYTE PTR [ebp-0x17],dh
  422509:	out    0x33,eax
  42250b:	bound  ecx,QWORD PTR [edx+0x46]
  42250e:	mov    ah,ah
  422510:	call   0xbcf6:0x6689aeda
  422517:	sub    al,0xb
  422519:	mul    BYTE PTR [eax]
  42251b:	je     0x422526
  42251d:	pop    ebx
  42251e:	dec    ebp
  42251f:	fcmovnbe st,st(1)
  422521:	in     eax,0x3
  422523:	inc    edi
  422524:	ret    
  422525:	int3   
  422526:	mov    ecx,DWORD PTR es:[eax+0x572bace4]
  42252d:	xor    eax,ecx
  42252f:	lahf   
  422530:	adc    dh,BYTE PTR [edx]
  422532:	pop    ecx
  422533:	shl    DWORD PTR [esi-0x5cedbda0],1
  422539:	retf   0x387c
  42253c:	je     0x4224d8
  42253e:	inc    ebp
  42253f:	jg     0x4224f8
  422541:	mov    WORD PTR [ebx+0x34696880],cs
  422547:	add    eax,0xee0b7271
  42254c:	xor    al,0xa0
  42254e:	ja     0x4224dd
  422550:	imul   ebp,DWORD PTR [esi+0x2e03f517],0x16dfd596
  42255a:	fistp  WORD PTR [ecx]
  42255c:	loopne 0x4225b7
  42255e:	aam    0x8a
  422560:	inc    esp
  422561:	cdq    
  422562:	cmc    
  422563:	(bad)  
  422564:	popf   
  422565:	retf   0x5511
  422568:	stos   BYTE PTR es:[edi],al
  422569:	mov    edx,0xc5c46475
  42256e:	mov    bl,0x90
  422570:	pusha  
  422571:	repnz or al,0xb5
  422574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422575:	xchg   edi,edi
  422577:	lds    esi,FWORD PTR [ecx-0x54]
  42257a:	push   esp
  42257b:	inc    edi
  42257c:	mov    eax,0x4542c0b1
  422581:	shr    ebp,1
  422583:	sbb    al,0x37
  422585:	inc    ebp
  422586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422587:	dec    edi
  422588:	cmp    DWORD PTR ds:0x825db09e,edx
  42258e:	das    
  42258f:	add    al,BYTE PTR [ebp-0x6b]
  422592:	cmp    esp,DWORD PTR [esi-0x46]
  422595:	adc    eax,DWORD PTR ds:0xf22da4f6
  42259b:	daa    
  42259c:	in     eax,0xbe
  42259e:	aaa    
  42259f:	addr16 mov ecx,0xcd07cc7a
  4225a5:	aas    
  4225a6:	xor    eax,0xfa9b90a8
  4225ab:	mov    ebx,0x654b2550
  4225b0:	pop    edi
  4225b1:	xor    al,BYTE PTR [eax]
  4225b3:	call   0x6cbd:0xeb42cdde
  4225ba:	cs dec esi
  4225bc:	ror    dh,0xbf
  4225bf:	gs sbb al,0x61
  4225c2:	adc    eax,DWORD PTR [esi]
  4225c4:	inc    ecx
  4225c5:	dec    edx
  4225c6:	mov    esp,0x85539026
  4225cb:	sbb    esi,DWORD PTR [ebp+0xeabdc10]
  4225d1:	fdiv   DWORD PTR [edx+0x3a]
  4225d4:	xor    eax,0xfe475dc6
  4225d9:	into   
  4225da:	xor    al,0xad
  4225dc:	or     eax,0xccca2b25
  4225e1:	outs   dx,DWORD PTR ds:[esi]
  4225e2:	mov    ds:0xef00792b,eax
  4225e7:	sub    DWORD PTR [edi+0x915eba9],eax
  4225ed:	inc    ebp
  4225ee:	or     DWORD PTR [ebp+0x3a],ecx
  4225f1:	or     ecx,ebx
  4225f3:	add    DWORD PTR [ecx+0x1320c058],0x823f1319
  4225fd:	shl    DWORD PTR [esi-0x68ce52f5],1
  422603:	add    al,0xf
  422605:	jno    0x4225f3
  422607:	iret   
  422608:	or     dh,ch
  42260a:	std    
  42260b:	popa   
  42260c:	push   edi
  42260d:	pusha  
  42260e:	in     eax,dx
  42260f:	retf   
  422610:	mov    eax,0xf92bf95b
  422615:	out    0x41,al
  422617:	mov    bl,0x88
  422619:	mov    ah,BYTE PTR [ebx+ebx*4-0x7f]
  42261d:	mov    esi,DWORD PTR [ebp-0x6f586523]
  422623:	jno    0x4225e5
  422625:	pop    es
  422626:	adc    al,ah
  422628:	xor    DWORD PTR [esi],esi
  42262a:	pop    edi
  42262b:	dec    esi
  42262c:	inc    edi
  42262d:	lea    ebp,[ebp-0x6b]
  422630:	mov    bh,0x13
  422633:	xchg   ecx,eax
  422634:	loopne 0x42269a
  422636:	inc    DWORD PTR [edi+0x5276aa67]
  42263c:	shl    BYTE PTR [eax-0x5e],0x83
  422640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422641:	jnp    0x42268a
  422643:	cmp    DWORD PTR ds:0x62b0d9ef,edi
  422649:	push   edx
  42264a:	jae    0x4226b4
  42264c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42264d:	dec    edi
  42264e:	fdiv   DWORD PTR [edi-0x4e]
  422651:	inc    edi
  422652:	das    
  422653:	fdivr  QWORD PTR [edi-0x52a51a7b]
  422659:	iret   
  42265a:	push   esp
  42265b:	(bad)
  422660:	mov    bh,0x4a
  422662:	repz or BYTE PTR [edi+0x33],bh
  422666:	dec    edi
  422667:	or     ch,BYTE PTR [esi-0x396160df]
  42266d:	stos   DWORD PTR es:[edi],eax
  42266e:	ret    
  42266f:	inc    ebx
  422670:	xchg   ebx,eax
  422671:	mov    esp,0xf002445c
  422676:	xchg   esp,eax
  422677:	push   ebp
  422678:	sbb    DWORD PTR [ebx+0x37],edx
  42267b:	and    BYTE PTR [ebp-0x265b8322],cl
  422681:	outs   dx,WORD PTR ds:[esi]
  422683:	sub    DWORD PTR [ebx+0x47],ebp
  422686:	xor    al,0xf
  422688:	not    DWORD PTR ds:0x9b1a9102
  42268e:	jle    0x4226ee
  422690:	test   DWORD PTR [ecx],esi
  422692:	in     al,0x70
  422694:	dec    esp
  422695:	add    edi,eax
  422697:	mov    al,ds:0xe42d678d
  42269c:	xor    al,0x67
  42269e:	enter  0x36c1,0x2b
  4226a2:	lea    edx,[ebx+0x66]
  4226a5:	mov    al,ds:0x6403c87d
  4226aa:	fs bnd js 0x4226fb
  4226ae:	jnp    0x422662
  4226b0:	pop    ebp
  4226b1:	inc    ebx
  4226b2:	nop
  4226b3:	fs mov ebx,0x5b4528ce
  4226b9:	aad    0x3a
  4226bb:	dec    eax
  4226bc:	loope  0x4226e1
  4226be:	in     eax,0x5d
  4226c0:	cmp    ecx,ebx
  4226c2:	stos   DWORD PTR es:[edi],eax
  4226c3:	ret    0x91a3
  4226c6:	aam    0x5f
  4226c8:	jle    0x42273b
  4226ca:	push   0xffffffff
  4226cc:	(bad)  
  4226cd:	scas   eax,DWORD PTR es:[edi]
  4226ce:	test   al,0xb9
  4226d0:	mov    esp,0xef943945
  4226d5:	arpl   WORD PTR [esi+ecx*4-0x35ed58dc],bp
  4226dc:	repz jae 0x4226f6
  4226df:	xor    DWORD PTR [edi-0x62],eax
  4226e2:	cdq    
  4226e3:	xlat   BYTE PTR ds:[ebx]
  4226e4:	ss je  0x4226d0
  4226e7:	mov    ecx,0x588646c7
  4226ec:	sti    
  4226ed:	lods   eax,DWORD PTR ds:[esi]
  4226ee:	jg     0x422718
  4226f0:	in     eax,0xed
  4226f2:	mov    ecx,0xcd6d1b5c
  4226f7:	popf   
  4226f8:	add    eax,0x16c1b8e1
  4226fd:	cli    
  4226fe:	push   0xffffff9d
  422700:	imul   ebx,DWORD PTR [eax+edi*8],0x932023b3
  422707:	ret    0xc709
  42270a:	and    BYTE PTR [ecx+edx*1],cl
  42270d:	sub    DWORD PTR [edi+0x7e],ebp
  422710:	(bad)  
  422711:	pop    edi
  422712:	rcr    BYTE PTR [edi+0x58],cl
  422715:	ins    DWORD PTR es:[edi],dx
  422716:	adc    BYTE PTR [esi],dh
  422718:	ss ins BYTE PTR es:[edi],dx
  42271a:	pop    edx
  42271b:	jge    0x42275d
  42271d:	das    
  42271e:	sub    eax,0xeea658d8
  422723:	pushf  
  422724:	lods   eax,DWORD PTR ds:[esi]
  422725:	call   0x3dd51302
  42272a:	hlt    
  42272b:	ret    0xab3d
  42272e:	test   al,0x7a
  422730:	cwde   
  422731:	test   eax,0x1efc4ca1
  422736:	in     al,0xb
  422738:	(bad)  
  422739:	pop    ebx
  42273a:	repnz pusha 
  42273c:	xchg   ebx,eax
  42273d:	jp     0x42276c
  42273f:	mov    al,ds:0x86b75e02
  422744:	xor    DWORD PTR cs:[edx-0x35a4794f],eax
  42274b:	scas   eax,DWORD PTR es:[edi]
  42274c:	mov    bh,0xf1
  42274e:	sbb    esi,edi
  422750:	jmp    0x7538:0x44e997e2
  422757:	aam    0x70
  422759:	leave  
  42275a:	ins    BYTE PTR es:[edi],dx
  42275b:	daa    
  42275c:	jbe    0x4227be
  42275e:	mov    ecx,0xf9b10679
  422763:	mov    bh,al
  422765:	dec    ecx
  422766:	(bad)  
  422767:	int3   
  422768:	sbb    DWORD PTR [edi-0x7ed5829f],edi
  42276e:	and    ax,0x4211
  422772:	pop    ecx
  422773:	mov    ecx,0xd0ffa78c
  422778:	add    bl,BYTE PTR [ebp+0xdb75402]
  42277e:	or     BYTE PTR [eax],ah
  422780:	sub    al,0x3a
  422782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422783:	mov    dl,0xba
  422785:	sbb    DWORD PTR [eax+0x115ac4ce],edx
  42278b:	or     BYTE PTR [ebx-0x16],cl
  42278e:	(bad)  
  42278f:	sbb    eax,0xddbfa099
  422794:	test   BYTE PTR [ebp+0x26e32830],bl
  42279a:	push   ds
  42279b:	(bad)  
  42279c:	or     BYTE PTR [eax+0x4257eb59],ah
  4227a2:	js     0x4227a6
  4227a4:	jno    0x422743
  4227a6:	icebp  
  4227a7:	push   eax
  4227a8:	push   ebx
  4227a9:	xor    edi,DWORD PTR [eax+0x540ba690]
  4227af:	sbb    eax,0x18cafb72
  4227b4:	imul   esi,DWORD PTR [ebx],0xaa958b38
  4227ba:	cmp    ebx,ebx
  4227bc:	jg     0x42274d
  4227be:	aaa    
  4227bf:	aas    
  4227c0:	fisttp WORD PTR [esp+ebx*1]
  4227c3:	mov    ds:0x92cff6db,eax
  4227c8:	cmp    BYTE PTR ds:[ecx+esi*8],bh
  4227cc:	jmp    0x1e300d63
  4227d1:	loopne 0x4227fc
  4227d3:	mov    edx,0x36732cd8
  4227d8:	pusha  
  4227d9:	ret    
  4227da:	and    DWORD PTR [ebx],edi
  4227dc:	cmc    
  4227dd:	pop    ss
  4227de:	xor    eax,0x7e91c47a
  4227e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227e4:	stos   DWORD PTR es:[edi],eax
  4227e5:	ret    0x2d7a
  4227e8:	dec    esp
  4227e9:	(bad)  
  4227ea:	out    dx,eax
  4227eb:	outs   dx,DWORD PTR ds:[esi]
  4227ec:	sbb    eax,DWORD PTR [esi]
  4227ee:	sub    bh,BYTE PTR [ecx]
  4227f0:	inc    esi
  4227f1:	inc    esi
  4227f2:	imul   eax,DWORD PTR ss:[ecx-0x6f944a98],0xa0fd418e
  4227fd:	shr    edi,cl
  4227ff:	jno    0x422844
  422801:	xlat   BYTE PTR ds:[ebx]
  422802:	imul   eax,DWORD PTR [ecx+0x2f],0xc0b365e9
  422809:	mov    cl,0xa7
  42280b:	scas   eax,DWORD PTR es:[edi]
  42280c:	mov    ebx,0x6bf9fb85
  422811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422812:	gs mov ch,0x5a
  422815:	adc    al,dh
  422817:	inc    ebp
  422818:	dec    BYTE PTR [ecx+0x56]
  42281b:	shl    dl,1
  42281d:	inc    esp
  42281e:	scas   al,BYTE PTR es:[edi]
  42281f:	push   esp
  422820:	cmp    eax,0xf31297b2
  422825:	cmc    
  422826:	jbe    0x4227be
  422828:	(bad)  
  42282a:	outs   dx,BYTE PTR ds:[esi]
  42282b:	test   eax,0x747197
  422830:	jbe    0x422806
  422832:	pop    ebp
  422833:	or     al,0xfd
  422835:	jo     0x4228b1
  422837:	push   ecx
  422838:	sar    DWORD PTR [esi-0x750da507],1
  42283e:	jbe    0x42285f
  422840:	ins    BYTE PTR es:[edi],dx
  422841:	jb     0x4227c3
  422843:	cdq    
  422844:	jae    0x4228b8
  422846:	pop    ebp
  422847:	dec    esi
  422848:	mov    BYTE PTR [ebx-0x27],dl
  42284b:	in     al,0xff
  42284d:	xor    BYTE PTR [ecx],dl
  42284f:	jae    0x42287b
  422851:	lds    esp,FWORD PTR [eax+0x626ec2fa]
  422857:	xor    esp,DWORD PTR [edx-0x63849ed7]
  42285d:	mov    ebp,0x26c25058
  422862:	pop    ecx
  422863:	aad    0xa0
  422865:	ja     0x42283a
  422867:	pop    esi
  422868:	push   ebx
  422869:	adc    ebx,eax
  42286b:	xor    al,0x5f
  42286d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42286e:	pop    ss
  42286f:	sbb    eax,0x20
  422872:	outs   dx,DWORD PTR ds:[esi]
  422873:	lds    ecx,FWORD PTR [edx]
  422875:	bound  edi,QWORD PTR [ebx+esi*8+0x4112777b]
  42287c:	popa   
  42287d:	push   0x20
  42287f:	dec    esp
  422880:	ret    0xaba2
  422883:	push   edx
  422884:	enter  0xd666,0x9e
  422888:	sar    dh,0x80
  42288b:	iret   
  42288c:	mov    al,0x5b
  42288e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422890:	lods   al,BYTE PTR ds:[esi]
  422891:	ret    
  422892:	or     ecx,DWORD PTR [eax]
  422894:	pop    edx
  422895:	inc    ebp
  422896:	sub    ah,dl
  422898:	lods   eax,DWORD PTR ds:[esi]
  422899:	iret   
  42289a:	shl    DWORD PTR [eax+0x7424ad8d],0xc8
  4228a1:	sbb    cl,BYTE PTR [ebx-0x3b80c21a]
  4228a7:	jge    0x4228e7
  4228a9:	pop    eax
  4228aa:	iret   
  4228ab:	cmp    DWORD PTR [ebp+0x27],edi
  4228ae:	mov    bl,0x83
  4228b0:	push   0x2c
  4228b2:	adc    edx,edi
  4228b4:	and    ah,BYTE PTR [esp+ebx*8]
  4228b7:	and    BYTE PTR [edx+0x5fa501df],0x39
  4228be:	fild   WORD PTR [edx-0x16]
  4228c1:	xchg   edi,eax
  4228c2:	scas   al,BYTE PTR es:[edi]
  4228c3:	mov    esp,DWORD PTR [ebx-0x353aa00f]
  4228c9:	stos   DWORD PTR es:[edi],eax
  4228ca:	leave  
  4228cb:	or     BYTE PTR [ebx-0x31c2b88b],bl
  4228d1:	(bad)  [ecx-0x2f]
  4228d4:	inc    eax
  4228d5:	fucomi st,st(0)
  4228d7:	inc    ecx
  4228d8:	shl    edi,0x73
  4228db:	push   esp
  4228dc:	jle    0x42288d
  4228de:	mov    esi,fs
  4228e0:	lods   eax,DWORD PTR ds:[esi]
  4228e1:	movaps xmm4,XMMWORD PTR ds:[eax+0x44e3e9aa]
  4228e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ea:	stc    
  4228eb:	mov    ds:0x549aee03,al
  4228f0:	cmp    edi,DWORD PTR [ebx]
  4228f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f3:	in     al,0xc0
  4228f5:	gs sub ebp,0xffffffff
  4228f9:	cmp    ecx,ebx
  4228fb:	mov    cl,0x4d
  4228fd:	jmp    0x4228a2
  4228ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422900:	jg     0x422899
  422902:	add    DWORD PTR [esi],edx
  422904:	mov    bh,BYTE PTR [ecx+0x1c75829a]
  42290a:	lock cmc 
  42290c:	fs sti 
  42290e:	sub    dh,dl
  422910:	adc    ebp,edx
  422912:	xor    cl,BYTE PTR [ebx]
  422914:	pop    ecx
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
